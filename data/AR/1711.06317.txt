Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

GA-PSO-Optimized Neural-Based Control Scheme for 
Adaptive Congestion Control to Improve Performance in 
Multimedia Applications 

Mansour Sheikhan1, Ehasn Hemmati2, Reza Shahnazi3 

1- Department of Communication Engineering, South Tehran Branch, Islamic Azad University, Tehran, Iran. 
Email: msheikhn@azad.ac.ir 
2- Department of Electronic Engineering, South Tehran Branch, Islamic Azad University, Tehran, Iran. 
Email: st_e_hemmati@azad.ac.ir 
3- Modeling and Optimization Research Center in Science and Engineering, South Tehran Branch, Tehran, Islamic Azad 
University, Iran. 
Email: shahnazi@ieee.org 

Received: October 2011 

Revised: December 2011   

Accepted: January 2012 

ABSTRACT: 
Active  queue  control  aims  to  improve  the  overall  communication  network  throughput,  while  providing  lower  delay 
and  small  packet  loss  rate.  The  basic  idea  is  to  actively  trigger  packet  dropping  (or  marking  provided  by  explicit 
congestion  notification  (ECN))  before  buffer  overflow.  In  this  paper,  two  artificial  neural  networks  (ANN)-based 
control  schemes  are  proposed  for  adaptive  queue  control  in  TCP  communication  networks.  The  structure  of  these 
controllers is optimized using genetic algorithm (GA) and the output weights of ANNs are optimized using particle 
swarm  optimization  (PSO)  algorithm.  The  controllers  are  radial  bias  function  (RBF)-based,  but  to  improve  the 
robustness of RBF controller, an error-integral term is added to RBF equation in the second scheme.  Experimental 
results show that GA- PSO-optimized improved RBF (I-RBF) model controls network congestion effectively in terms 
of  link  utilization  with  a  low  packet  loss  rate  and  outperforms  Drop  Tail,  proportional-integral  (PI),  random 
exponential marking (REM), and adaptive random early detection (ARED) controllers.  

KEYWORDS: Adaptive Control, Queue, Communication Network, Optimization, GA, PSO, Neural Network. 

1.  INTRODUCTION 

congestion.  

To  improve  the  performance  of  a  communication 
network,  in  terms  of  packet  loss  rate,  link  utilization 
and  delay,  active  queue  management 
(AQM) 
technology  has  been  proposed  to  replace  Drop  Tail 
queue management method [1]. Buffer management for 
the 
(TCP)/Internet 
Protocol  (IP)  routers  plays  an  important  role  in  the 
congestion control. A small buffer generally achieves a 
low  queuing  delay,  but  suffers  from  excessive  packet 
losses and low link utilization, and vice versa.  

transmission  control  protocol 

Active queue control schemes are those policies of 
router  queue  management  that  allow  for  the  detection 
of  network  congestion, 
the  notification  of  such 
occurrences to the hosts, and the adoption of a suitable 
control  policy.  A  simple  policy  like  the  widely  used 
first-in-first-out  (FIFO)  Drop  Tail  often  causes  strong 
correlations among packet losses, resulting in the well-
known  “TCP  synchronization”  problem  [1].  AQM 
policies  based  on  control  theory  consider  the  intrinsic 
feedback  nature  of  congestion  systems.  Sources  adjust 
their  transmission  rates  according  to  the  level  of 

In  recent  years,  several  approaches  have  been 
proposed  as  AQM  policies  [2,  3].  AQM  policies 
provide better network utilization and lower end-to-end 
delays  than  Drop  Tail  method.  The  development  of 
new  AQM  routers  will  play  a  key  role  in  meeting 
tomorrow’s 
improving 
performance  in  voice  over  IP  (VoIP),  class  of  service 
(CoS),  and  streaming  video  applications  where  the 
packet  size  and  session  duration  exhibit  significant 
variations. 

increasing  demand 

and 

Random  early  detection  (RED)  algorithm  is  the 
earliest  and  the  most  prominent  of  AQM  schemes  [4] 
which  is  recommended  by  the  Internet  Engineering 
Task  Force  (IETF),  to  be  deployed  in  the  Internet. 
However,  the  behavior  of  RED  strongly  depends  on 
tuning  parameters  for  every  specific  case  and  average 
queue size varies with the level of congestion.  

In  addition,  some  modified  schemes  of  RED 
including  flow  random  early  detection  (FRED)  [5], 
adaptive  RED  (ARED)  [6,  7],  balanced  RED  (BRED) 
[8],  stabilized  RED  (SRED)  [9],  dynamic  RED 

11 

 
 
 
 
 
 
 
 
 
 
 
  
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

(LRC-RED) 

rate  control  RED 

(DRED)  [10],  BRED  with  virtual  buffer  occupancy 
(BRED/VBO)  [11],  exponential  RED  (ERED)  [12], 
neural  network-based  RED  (NN-RED)  [13],  loss  ratio 
and 
[14],  novel 
autonomous  proportional  and  differential  RED  (PD-
RED)  [15,  16],  and  robust  RED  (RRED)  [17]  have 
been  proposed  in  recent  two  decades.  Furthermore, 
other algorithms such as adaptive virtual queue (AVQ) 
[18],  random  exponentially  marking  (REM)  [19], 
BLUE  [20],  GREEN  [21]  and  YELLOW  [22]  have 
been proposed as alternatives to RED.  

Also, several control strategies have been proposed 
for  active  queue  control  such  as  classic  proportional-
integral  (PI)  [23],  proportional-differential  (PD)  [24], 
proportional-integral-differential (PID) controllers [25], 
sliding mode control [26, 27], optimal control [28, 29], 
virtual  rate  control  (VRC)  [30],  adaptive  control  [31], 
observer-based  control  [32],  fuzzy  control  [33-36], 
predictive functional control (PFC) [37], robust control 
[38],  variable structure control (VSC) [39], and neural-
based  control 
In  addition,  several 
optimization techniques have been proposed to improve 
the  controller  performance  such  as  genetic  algorithm 
(GA)  [35]  and  particle  swarm  optimization  (PSO) 
algorithm [43]. 

[13,  40-42]. 

In this paper, two artificial neural networks (ANN)-
based control schemes are proposed for adaptive queue 
control in TCP communication networks. The structure 
of  these  controllers  is  optimized  using  GA  and  the 
output  weights  of  ANNs  are  optimized  using  PSO 
algorithm. Due to the nonlinear characteristic of traffic 
in  the  communication  network,  radial  basis  function 
(RBF)  neural  model  is  used  to  control  the  queue  and 
achieve  desired  quality  of  service  (QoS).  Also,  as  an 
improved  RBF  model,  an  error-integral  term  is  added 
to  RBF  equations  to  increase  the  robustness  and 
improve  the  performance  of  active  queue  controller. 
This  improved  RBF  model  is  called  I-RBF  in  this 
paper.  Suggestion  of  a  robust  neural-based  controller 
with  optimized  structure  and  weights  for  adaptive 
congestion  control  is  the  main  contribution  of  this 
paper  which  has  not  been  reported  before  in  the 
literature.   

The  rest  of  paper  is  outlined  as  follow.  The 
background  of  the  methods  used  in  the  proposed 
scheme,  including  GA,  PSO  and  RBF,  is  reviewed  in 
Section  2.  In  Section  3,  the  dynamic  model  of  TCP  is 
introduced. The proposed GA-PSO-optimized RBF and 
I-RBF  neural  controllers  are  illustrated  in  Sections  4 
and 
and 
experimental results are given in Section 6. Finally, the 
work is concluded in Section 7. 

respectively.  Simulation 

details 

5, 

2.  BACKGROUND 
2.1.  Genetic Algorithm 

The  genetic  algorithm  is  a  method  for  solving 

12 

optimization  problems  based  on  natural  selection,  the 
process  that  drives  biological  evolution.  The  genetic 
algorithm 
repeatedly  modifies  a  population  of 
individual solutions. At each step, the genetic algorithm 
selects 
the  current 
randomly 
population to be parents and uses them to produce the 
children  for  the  next  generation.  There  are  several 
methods  for  selecting  parents  such  as  stochastic 
uniform 
roulette 
remainder 
selection and tournament selection [44].  

individuals 

selection, 

selection, 

from 

In  this  work,  the  optimized  number  of  neurons  in 
hidden  layer  of  RBF  neural  model  is  selected  by  GA. 
The  fitness  function  measures  the  quality  of  the 
solution  in  GA  and  is  application-dependent.  In  this 
application,  the  fitness  function  is  chosen  as  follows 
[45]:  

F

=

1

(

MSE

)

2

(1) 

 At  the  beginning,  the  generated  values  by  fitness 
function  are  not  suitable  for  selection  process  of 
patterns.  So,  fitness  scaling  is  necessary  to  map  those 
raw  values  into  a  new  suitable  range  for  the  selection 
function.  The  range  of  scaled  values  affects  the 
performance of genetic algorithm. In this study, "Rank" 
fitness scaling function is used to remove the effects of 
raw  scores  spread.  To  create  the  next  generation,  GA 
uses  elite  children  that  are  individuals  with  the  best 
fitness values in the current generation.  

2.2.  Particle Swarm Optimization Algorithm 

PSO  is  a  population  based  stochastic  optimization 
technique  which  does  not  use  the  gradient  of  the 
problem  being  optimized,  so  it  does  not  require  being 
differentiable  for  the  optimization  problem  as  is 
necessary in classic optimization algorithms. Therefore 
it  can  also  be  used  in  optimization  problems  that  are 
partially irregular, time variable, and noisy. 

In  PSO  algorithm,  each  bird,  referred  to  as  a 
the 
“particle”,  represents  a  possible  solution  for 
the  D-
problem.  Each  particle  moves 
dimensional  problem  space  by  updating  its  velocities 
with  the  best  solution  found  by  itself  (cognitive 
behavior) and the best solution found by any particle in 
its neighborhood (social behavior). Particles move in a 
multidimensional  search  space  and  each  particle  has  a 
velocity and a position as follow: 

through 

v k
(
i

+ =
1)

v k
( )
i

+

g
1
i

(

P
i

-

x k
i

( ))

+

g

2

i

(

-
G x k

( ))

i

          (2)                        

x k
(
i

+ =
1)

x k
( )
i

+

v k
(
i

+                                     (3)                        

1)

where  i  is  the  particle  index,  k  is  the  discrete  time 
index, vi is the velocity of ith particle, xi is the position 
of  ith  particle,  Pi  is  the  best  position  found  by  ith 
particle (personal best), G is the best position found by 
swarm (global best) and γ1,2 are random numbers in the 
interval [0,1] applied to ith particle. In our simulations, 

 
 
 
 
 
 
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

the following equation is used for velocity [46]: 

v k
(
i



1)









k v k
( )
( )
i

 
2
2


 
1
1
i
G x k
(
( ))


(


i

i

P x k

i

( ))

i



                (4)                              

in  which   

1,2 are 
acceleration constants. The flowchart of PSO algorithm 
is summarized in Fig. 1. 

inertia  function  and 

is 

Fig. 1. Standard PSO flowchart 

2.3.  RBF neural model 

The  RBF  neural  network  involves  three  different 
layers.  The  input  layer  is  the  set  of  source  nodes  and 
layer  consists  of  RBF  nodes.  The 
the  second 
transformation  from  the  input  space  to  the hidden-unit 
space 
the 
transformation  from  the  hidden  space  to  the  output 
space is linear.  

is  nonlinear.  On 

the  other  hand, 

The  output y ,  of  a  Gaussian  RBF  network  is 

evaluated from the input vector x , as follows: 

y x
( )

=

T
w

exp(

2

c

)

- -
x
2

r

(5)

y x
( )

is  approximate  function,  w   is  weight for 
where 
basis  function  called  output  weight.  c   and  r are  the 
mean and spread of the Gaussian function, respectively. 

3.  DYNAMIC MODEL OF TCP ACTIVE QUEUE 
CONTROL 

A  simplified  version  of  TCP  model,  which 

            (6)                              

            (7)                              

dq
dt




 




expresses  the  coupled  nonlinear  differential  equations 
which  reflect  the  dynamics  of  TCP  with  the  average 
TCP  window  size  and  the  average  queue  length,  is 
given  by  (6)  and  (7)  [47].  It  is  noted  that  the  packet-
dropping  probability  is  between  0  and  1,  so  the 
time-delayed  system  with  a 
following  nonlinear 
saturated input are proposed: 
dW
dt

W t W t R t
(

R t R t
(


1
R t
( )

( ))
( ))

( )
2

sat u t

( ( ))





C
 

N t
( )
R t
( )

W t

( )               if  ( )>0

q t

q t





W t

C
 

max 0,

N t
( )
R t
( )

( )    if  ( )=0




where W(t) is the mean TCP window size (in packets), 
q(t) is the queue size (in packets), R(t) is the round trip 
time (RTT) (in seconds) and equals to q/C+Tp, C is the 
link capacity (in packets/second), N(t) is the number of 
TCP  connections,  and  p(t)  is  the  packet  mark/drop 
probability. 

The  saturated  input  is  expressed  by  the  following 

nonlinearity: 

sat u t

( ( ))



u t
1      ( ) 1


( )     0
u t


u t
0       ( )






( ) 1
u t

0

                           (8) 

4.  GA-PSO-OPTIMIZED RBF CONTROLLER 

=

( )
q t

In  this  section,  an  RBF  controller,  which  its 
structure is optimized using GA and its output weights 
are  optimized  using  PSO  algorithm,  is  proposed  to 
achieve the desired queue length efficiently considering 
delay effects and a saturated input. The RBF controller 
generates a control input term, u(t), as mentioned in (6). 
The output error signal is defined as follows: 
( )
e t
where qt denotes the target queue length. In this way, a 
Gaussian  RBF  controller  with  an  input  e(t)  and  an 
output u(t) is expressed as follows: 
u t
( )
where w is the weight of hidden layer of RBF network 
and φ is defined by: 
2

T
e
w
( )

q
t

-





e

c
i
2


i

where  ci  is  the  mean  and  σi  is  the  spread  of  ith  radial 
bias function. 

In  order  to  measure  the  performance  of  the 
proposed  closed-loop  controller,  the  integral  absolute 
error  (IAE)  measure  is  used  with  the  following 
equation: 
T

IAE

d
( )
 

                                      (12)  

the  IAE  depends  on 

the  controller 
parameters  which  here  are  the  output  weights  of  RBF 
that its structure is optimized. So, the goal is to find the 

e



1

T
In  fact, 

0

13 

                                                         (9)                             

                                                      (10)         

e
( )
i



exp(



)

                                       (11)                              

 
 
 
 
 
 
 
 
 
 
 
                                                       
 
 
 
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

optimum  values  of  RBF  parameters  which  made  the 
IAE  minimum.  The  proposed  GA-PSO-optimized 
neural-based control scheme is depicted in Fig. 2. 

parameters,  as  shown  in  Fig.  2,  since  it  has  good 
performance in continuous optimization problems.  

6.  SIMULATION AND EXPERIMENTAL 
RESULTS 

The  effectiveness  of  proposed  GA-PSO-optimized 
RBF-based  controllers  is  verified  in  this  section 
through  a  series  of  numerical  simulations  using  ns-2 
(Network Simulator-2) tool with the dumbbell network 
topology  (Fig.  3).  In  dumbbell  network  topology,  the 
transport agent is based on TCP-Reno, where multiple 
TCP  connections  share  a  single  bottleneck  link.  Each 
link  capacity  and  corresponding  propagation  delay  is 
also depicted in Fig. 3. 

Fig. 2. GA-PSO-optimized neural-based scheme for 
adaptive queue 

5.  GA-PSO-OPTIMIZED I-RBF CONTROLLER 

In  order  to  improve  the  controller  performance,  an 
error-integral  term  is  added  to  the  proposed  RBF 
the  relation  between 
controller.  In 
controller  input  e(t)  and  the  control  signal  u(t)  is 
defined as follows:  

this  scheme, 

where wI is the integral gain and w is the output weight 
of RBF network and φ is defined as (11). 

Again  IAE  is  employed  in  order  to  measure  the 
performance  of  the  proposed  closed-loop  controller. 
Similarly, if the smaller value of IAE is achieved, then 
the  better  controller  is  designed.  Hence,  the  goal  is  to 
find  the  optimum  values  of  RBF  parameters  and  wI 
such that the IAE becomes minimum. PSO algorithm is 
again  used  in  this  scheme  to  tune  the  controller 

Before  performance 

in  different 
scenarios  in  this  section,  the  parameter  setting  of  the 
optimized RBF and I-RBF in controller design for TCP 
active queue control is discussed. 

evaluation 

the 
In  our  simulation  of  genetic  algorithm, 
population size is assumed to be 40. Two elite children, 
26  crossover  children,  and  12  mutation  children  are 
used.  It  is  noted  that  the  fraction  of  individuals  that  is 
used  in  crossover  process  is  set  to  0.7.  The  Gaussian 
function  is  used  as  the  mutation function. The  amount 
of  mutation  is  decreased  at  each  new  generation 
(proportional  to  the  standard  deviation  of  Gaussian 
distribution).  Shrink  parameter  determines  the  rate  of 
this  decrement.  The  standard  deviation  of  Gaussian 
distribution  is  decreased  linearly  until  its  final  value 
reaches  to  (1–Shrink)  times  of  its  initial  value  at  the 
first generation. The value of Shrink parameter is set to 
1  in  our  simulations.  The  optimum  number  of  hidden 
nodes  is  achieved  as  five  neurons  when  the  fitness 
value (as defined in (1)) was F=49.2×102. 

u t
( )



T
w


e w e
( )
I



t



0

( ) d
 

                                        (13)                                                              

Fig. 3. Network topology details for performance evaluations in different scenarios 

The  initial  values  of  PSO  parameters  are  set 

according to values depicted in Table 1. 

For  a  TCP  network  modeled  by  (6)  and  (7),  it  is 
assumed  that  N=100  homogeneous  TCP  connections 
share one  bottleneck  link with  a  capacity  of  10  Mbps; 
the 
i.e.,  C=1250 

(packets/second).  Furthermore, 

propagation delay of the bottleneck link capacity is set 
to  Tp=60  msec,  and  the  desired  queue  size  is  assumed 
as  qd  =150  packets.  The  time  duration  of  queue 
monitoring,  T,  is  set  to  100  seconds.  The  maximum 
buffer size of each router is assumed to be 300 packets; 
each packet has a size of 1000 bytes. The spread of all 

14 

 
 
 
 
 
 
 
 
 
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

RBFs is set to 40 and the mean is distributed between -
150  and  150  steps  by  75.  Table  2  shows  the  optimal 
parameter setting of RBF and I-RBF controllers as the 
outputs 
initial 
of 
condition (0)

PSO 
0

q = .  

algorithm 

with 

Table 1. PSO algorithm parameters setting 

Parameter 

Value

Size of population 
Maximum particle velocity 
α1 
α2 
Initial inertia weight 
Final inertia weight 
Maximum number of  iterations 

20 
4 
2 
2 
0.9 
0.2 
300 

The  convergence  curve  of  the  IAE  value  against 
number  of  iterations  for  these  controllers  is  shown  in 
Fig. 4.  

To  demonstrate  the  robustness  of  the  proposed 
queue  controllers,  the  dynamic  traffic  changes  and 
different RTTs in the simulated network are taken into 
account  in  the  simulations.  The  simulation  results  for 
these  conditions  using  the  proposed  control  strategies 
are  compared  with  other  AQM  schemes  such  as  Drop 
Tail, PI [47], REM [48], and ARED [7]. The parameter 
setting of mentioned AQM schemes are listed in Table 
3. 

The  responses  of  link  utilization  and  packet  loss 
rate  for  the  different  number  of  users  and  various 
bottleneck  link  propagation  delays  are  studied  through 
simulations. 

In this case, the number of users is varied between 
70 and 160 and various propagation delays between 20 
and 140 msec are considered. In Figs. 5 and 6, the link 
utilization and packet loss rate for different number of 
users are depicted, respectively. 

Table 3. Parameter setting of PI, REM and ARED 
simulated controllers in this study 

AQM 
scheme 

Parameter setting 

PI [47] 

a = 1.822×10-5, b = 1.816×10-5, T = 1/160 s 

REM [48] 

γ = 0.001, φ =1.001 

ARED [7] 

minth = 100, maxth = 215, wg = 1-exp (-1/C) 

As can be seen, the link utilization of proposed GA-
PSO-optimized  I-RBF  controller  is  higher  than  other 
queue controllers except for 160 TCP connections; that 
is very close to the ARED scheme. Furthermore, for all 
mentioned  queue  controllers,  the  link  utilization  is 
raised when the number of users is increased. As shown 
in  Fig.  6,  the  proposed  GA-PSO-optimized  I-RBF 
controller has packet loss rate a little more as compared 
to  the  PI  and  ARED  schemes.  But  the  difference 
between  optimized  RBF  controller  and  the  others  is 
almost  noticeable.  Link  utilization  of  Drop  Tail  is 
almost constant and it is less than all mentioned queue 
control  schemes  except  REM.  On  the  other  hand,  the 
packet  loss  rate  of  Drop  Tail  method  is  also  less  as  it 
uses whole queue length. 

Figures  7  and  8  depict  the  responses  of  link 
utilization and packet loss rate in different propagation 
delays, respectively. 

100

RTT £

As  can  be  seen,  REM  and  Drop  Tail 
link 
utilizations are almost less than other mentioned queue 
control  schemes  for 
msec.  The  packet  loss 
rate  of  Drop  Tail  scheme  is  also  less  than  other 
methods.  The  performance  of  PI,  ARED,  RBF  and  I-
RBF is very close to each other and in all of them the 
link  utilization  is  decreased  as  the  delay  increases. 
However,  the  packet  loss  for  I-RBF  is  higher  than  PI 
and ARED, but it is very close to them. Since the link 
utilization is better for it, so it can be neglected in this 
case.  

Table 2. PSO-optimized parameters and IAE of proposed adaptive queue controllers 

Optimal weights of proposed controllers 

Adaptive queue 
control scheme 

w1 

w2 

w3 

w4 

w5 

wI 

IAE 

GA-PSO-optimized 
RBF 
GA-PSO-optimized 
I-RBF 

-1 

-1 

-1 

0.340 

0.337 

1 

Not-Applicable 

0.363 

-0.961 

0.345 

0.994 

0.998 

7.0813×10-4 

0.383 

15 

 
 
 
 
 
 
 
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

F
B
R
d
e
z
m

i

i
t
p
O

F
B
R

-
l
a
r
g
e
t
n
I

d
e
z
m

i

i
t
p
O

0.6

0.5

0.4

0.3

0

1.5

1.25

1

0.75

0.5

0.25

0

50

100

150

200

250

300

350

400

20

40

60

80
120
100
Number of iterations

140

160

180

200

Fig. 4. Convergence of IAE values for optimized RBF and I-RBF adaptive queue controllers 

0.98

0.975

0.97

)

%

0.965

(
n
o

i
t

a
z

i
l
i
t

u

0.96

k
n
L

i

0.955

0.95

0.945

0.94

70

PI
REM
ARED
RBF
I-RBF
DropTail

160

100
Number of TCP connections

130

Fig. 5. Link utilization against number of connections of proposed controllers compared to other queue control 
schemes 

16 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

PI
REM
ARED
RBF
I-RBF
DropTail

)

%

(
e
t
a
r

s
s
o

l

t
e
k
c
a
P

3.5

3

2.5

2

1.5

1

0.5

70

100
Number of TCP connections

130

160

Fig. 6. Packet loss rate against number of connections of proposed controllers compared to other queue control 
schemes 

0.98

0.975

0.97

0.965

)

%

(
n
o

i
t

a
z

i
l
i
t

u

k
n
L

i

0.96

0.955

0.95

0.945

0.94

0.935

20

40

60

80
Round-trip propagation delay (ms)

100

PI
REM
ARED
RBF
I-RBF
DropTail

120

140

Fig. 7. Link utilization against propagation delay of proposed controllers compared to other queue control schemes 

 
 
 
 
 
 
 
 
 
 
 
 
 
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

3

2.5

2

1.5

1

)

%

(
e
t
a
r

s
s
o

l

t
e
k
c
a
P

0.5

20

40

PI
REM
ARED
RBF
I-RBF
DropTail

120

140

60

80
Round-trip propagation delay (ms)

100

Fig. 8. Packet loss rate against propagation delay of proposed controllers compared to other queue control schemes 

300

200

100

l
i

a
T
p
o
r
D

0

0

300

200

100

D
E
R
A

0

0

300

200

100

d
e
z
m

i

i
t

p
O

F
B
R

20

40

60

80

100

300

200

100

I

P

0

0

300

200

100

M
E
R

20

40

60

80

100

d
e
z
m

i

i
t

p
O

F
B
R

-
I

0

0

300

200

100

20

40

60

80

100

20

40

60

80

100

0

0

20

40
60
Time (sec)

80

100

0

0

20

40
60
Time (sec)

80

100

Fig. 9. Queue size of the proposed schemes in Scenario 1 compared to other queue control schemes 

18 

 
 
 
 
 
 
 
 
 
 
 
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

Scenario 1: Constant TCP-Reno connections- Figure 
9  shows  the  simulation  results  in  this  scenario  when 
using GA-PSO-optimized RBF-based controllers.   

As can be seen, the optimized RBF and optimized I-
RBF  are  converged  to  the  desired  queue  size  more 
rapidly  as  compared  to  other  mentioned  queue  control 
schemes. Although, the responses of PI and ARED can 
achieve  and  maintain  the  queue  length  around  the 
desired  value,  too  inactive  and  serious  overshoots 
occurred.  Since  there  is  no  parameter  of  the  target 
queue length in the REM control algorithm, so it cannot 
maintain the desired queue length. 

0,

30,

60.

t =

active 

Scenario  2:  Dynamic  traﬃc  load-  In  this  scenario, 
the  performance  of  different  active  queue  control 
schemes  considering  dynamic  network  traffic  are 
t = 100  TCP-Reno 
evaluated.  At  the  beginning, 
connections  have  been  established.  Then,  at
30 
more  TCP-Reno  connections  begin  transmission  and 
t =
Additionally,  30  TCP 
remained  inactive  until 
connections departed at the same time, so there is only 
which  100 
70 
connections  would 
the 
simulation  period.  Fig.  10  shows  the  corresponding 
queue  evolutions  obtained  for  the  different  queue 
control  schemes.  It  can  be  seen  that  Drop  Tail,  PI, 
ARED and REM controllers are not robust with respect 
to  variations  in  the  load.  On  the  other  hand,  the 
proposed  GA-PSO-optimized  RBF 
I-RBF 
controllers  are  robust  to  variations  in  the  number  of 
active connections.  

till 
transmitt 

the  end  of 

connections 

and 

till 

t =

80,

Scenario 3: Short and long propagation delays- The 
robustness  of  the  proposed  methods  against  variations 
of  the  RTT  is  evaluated  in  this  scenario.  At  first,  we 
assume that the links between senders and R1 and also 
between  R2  and  receivers  are  characterized  by  10 
Mbps-bandwidth  and  a  short  inherent  propagation 
delay of 2 msec. There is a bandwidth of 10 Mbps and 
an  inherent  propagation  delay  of  10  msec  between  R1 
and R2. The responses of the queue length obtained for 
different queue control schemes are shown in Fig. 11. 

The  effect  of  a  long  inherent  propagation  delay  is 
also  considered,  where  the  TCP  sources  and  sinks  are 
linked  respectively  to  R1  and  R2  with  10  Mbps 
bandwidth  and  20  msec  propagation  delay.  Also,  a 
propagation  delay  of  140  msec  is  chosen  between  R1 

and  R2.  The  values  of  queue  length  obtained  with 
different  queue  control  schemes  are  shown  in  Fig.  12. 
As  can be  seen,  ARED  has  a  steady-state  error with  a 
short  propagation  delay  and  has  serious  oscillation 
when given a long propagation delay. Again, Drop Tail 
is not robust and shows periodic behavior. Even though 
PI  has  no  steady-state  error  in  the  network  with  long 
propagation  delay,  but  the  transient  responses  are  too 
sluggish.  The  proposed  GA-PSO-optimized  RBF 
controller  has  small  steady-state  error,  but 
the 
optimized I-RBF achieved the desired queue length in a 
reasonable transient response time. 

7.  CONCLUSION 

This  paper  has  presented  a  hybrid  evolutionary-
swarm-neural  model  for  adaptive  queue  controller  to 
enhance  TCP  congestion  control  in  communication 
networks. In this way, GA has been used to determine 
the optimum number of RBFs in neural model and PSO 
algorithm  has  been  used  to  tune  the  weights  of 
mentioned controller. 

tool 

through  simulations  using  ns-2 

In  order  to  improve  the  robustness  of  proposed 
method  an 
improved  RBF  controller  has  been 
introduced,  too.  A  deep  analysis  of  stability  and 
performance of the proposed schemes has been carried 
out 
through 
different  scenarios.  The  simulation  studies  have 
demonstrated  that  the  proposed  GA-PSO-optimized  I-
RBF  controller  outperforms  the  Drop  Tail,  PI,  REM 
and  ARED  queue  control  policies  under  various 
operating  conditions.  It  achieves  both  good  queue 
regulation  and  high  link  utilization.  It  has  also  shown 
that  the  proposed  controller  has  fast  response  and  is 
robust to high load variations and disturbance rejection 
in steady-state behavior. In addition, the link utilization 
of  proposed  controller 
than  mentioned 
simulated  controllers  in  this  study,  with  a  low  packet 
loss.  

is  higher 

8.  ACKNOWLEDGEMENT 

This work is supported by Islamic Azad University-
South  Tehran  Branch  under  a  research  project  entitled 
as  "Design  and  Simulation  of  Optimal  Neural 
Controllers  for  Active  Queue  Management  in  TCP 
Communication Networks". 

19 

 
 
 
 
 
 
 
 
 
 
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

300

200

100

0

0

300

200

100

0

0

300

200

100

l
i

a
T
p
o
r
D

D
E
R
A

F
B
R

300

200

100

0

0

300

200

100

0

0

300

200

100

I

P

M
E
R

F
B
R

-
I

20

40

60

80

100

20

40

60

80

100

20

40

60

80

100

20

40

60

80

100

d
e
z
m

i

i
t
p
O

d
e
z
m

i

i
t
p
O

0

0

20

40
60
Time (sec)

80

100

0

0

20

40
60
Time (sec)

80

100

Fig. 10. Queue size of the proposed schemes in Scenario 2 compared to other queue control schemes 

300

200

100

l
i

a
T
p
o
r
D

0

0

300

200

100

D
E
R
A

0

0

300

200

100

d
e
z
m

i

i
t
p
O

F
B
R

20

40

60

80

100

300

200

100

I

P

0

0

300

200

100

M
E
R

20

40

60

80

100

d
e
z
m

i

i
t
p
O

F
B
R

-
I

0

0

300

200

100

20

40

60

80

100

20

40

60

80

100

0

0

20

40
60
Time (sec)

80

100

0

0

20

40
60
Time (sec)

80

100

Fig. 11. Queue size (in packets) of the proposed schemes in short propagation delay times compared to other queue 
control schemes 

20 

 
 
 
 
 
 
 
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

300

200

100

l
i

a
T
p
o
r
D

0

0

300

200

100

D
E
R
A

0

0

300

200

100

d
e
z
m

i

i
t
p
O

F
B
R

20

40

60

80

100

300

200

100

I

P

0

0

300

200

100

M
E
R

20

40

60

80

100

d
e
z
m

i

i
t
p
O

F
B
R

-
I

0

0

300

200

100

20

40

60

80

100

20

40

60

80

100

0

0

20

40
60
Time (sec)

80

100

0

0

20

40
60
Time (sec)

80

100

Fig. 12. Queue size (in packets) of the proposed schemes in long propagation delay times compared to other queue 
control schemes 

REFERENCES 
[1]  B.  Braden,  D.  Clark,  J.  Crowcroft,  B.  Davie,  S. 
Deering, and  D.  Estrin,  et al.,  “Recommendations  on 
queue management and congestion avoidance in the 
1998 
Internet”, 
IETF 
(http://www.rfc.net/rfc2309.html). 

RFC2309, 

Apr. 

[2]  W.  Zhang,  L.  Tan,  and  G.  Peng,  “Dynamic  queue 
level  control  of  TCP/RED  systems 
in  AQM 
routers”, Computers  &  Electrical  Engineering,  Vol. 
35, Iss. 1, pp. 59-70, 2009. 

[3]  L. Yu, M. Ma, W. Hu, Z. Shi, and Y. Shu, “Design of 
parameter  tunable  robust  controller  for  active 
queue management based on H∞ control theory”, J. 
Network  and  Computer  Applications,  Vol.  34,  Iss.  2, 
pp. 750-764, 2011. 

[4]  S.  Floyd, and  V.  Jacobson,  “Random  early  detection 
gateways  for  congestion  avoidance”,  IEEE/ACM 
Trans. Networking, Vol. 1, Iss. 4, pp. 397-413, 1993. 

[5]  D.  Lin,  and  R.  Morris,  “Dynamics  of  random  early 
detection”,  In:  Proc.  ACM  SIGCOM,  pp.  127-137, 
1997. 

[6]  W.  Feng,  D.D.  Kandlur,  D.  Saha,  and  K.G.  Shin,  “A 
self-configuring  RED  gateway”,  In:  Proc.  IEEE 
INFOCOM, pp. 1320-1328, 1999. 

[7]  S.  Floyd,  R.  Gummadi,  and  S.  Shenker,  “Adaptive 
RED:  a  algorithm  for  increasing  the  robustness  of 
2001 
RED’s 

queue  management”, 

active 

[8] 

(http://www.icir.org/floyd/papers/adaptiveRed.pdf). 
 F. Anjum, and L. Tassiulas, “Fair bandwidth sharing 
among  adaptive  and  non-adaptive  flows  in  the 
Internet”, In: Proc. IEEE INFOCOM, pp. 1412-1420, 
1999. 

[10] 

[9]  T.J. Qtt, T.V. Lakshman, L. Wong, “SRED: stabilized 
RED”,  In:  Proc.  IEEE  INFOCOM,  pp.  1346-1355, 
1999. 
J.  Aweya,  M.  Ouellette,  D.Y.  Montuno,  and  A. 
Chapman,  “A  control  theoretic  approach  to  active 
queue  management”,  Computer  Networks,  Vol.  36, 
Iss. 2-3, pp. 203-235, 2001. 

[11]  M.  Nabeshima,  “Improving  the  performance  of 
active 
per-flow 
information”, IEEE Commun. Lett., Vol. 6, Iss. 7, pp. 
306-308, 2002. 

buffer  management  with 

[12]  S. Liu, T. Başar, and R. Srikant, “Exponential-RED: a 
stabilizing  AQM  scheme  for  low-  and  high-speed 
TCP  protocol”,  IEEE/ACM  Trans.  Networking,  Vol. 
13, Iss. 5, pp. 1068-1081, 2005. 

[13]  B.  Hariri,  and  N.  Sadati,  “NN-RED:  an  AQM 
mechanism  based  on  neural  networks”,  Electronics 
Letters, Vol. 43, Iss. 19, pp. 1053-1055, 2007. 
[14]  N. Xiong, L.T. Yang, Y. Yang, X. Defago, and Y. He, 
“A  novel  numerical  algorithm  based  on  self-tuning 
controller  to  support  TCP  flows”,  Mathematics  and 

21 

 
 
 
 
 
 
 
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

Computers  in  Simulation,  Vol.  79,  Iss.  4,  pp.  1178-
1188, 2008. 

[15]  S.  Jinsheng,  C.  Guanrong,  and  M.  Zukerman,  “PD-
RED:  to  improve  the  performance  of  RED”,  IEEE 
Commun. Lett., Vol. 7, Iss. 8, pp. 406-408, 2003. 
[16]  N.  Xiong,  A.V.  Vasilakos,  L.T.  Yang,  C-X.  Wang,  R. 
Kannan, C-C. Chang, and Y. Pan, “A novel self-tuning 
feedback  controller  for  active  queue  management 
supporting  TCP  flows”,  Information  Sciences,  Vol. 
180, Iss. 11, pp. 2249-2263, 2010. 

[17]  C.  Zhang,  J.  Yin,  Z.  Cai,  and  W.  Chen,  “RRED: 
robust RED algorithm to counter low-rate denial-of-
service attacks”, IEEE Commun. Lett., Vol. 14, Iss. 5, 
pp. 489-491, 2010.   

[18]  S. Kunniyur, and R. Srikant, “Analysis and design of 
an  adaptive  virtual  queue  (AVQ)  algorithm  for 
active  queue  management”, 
In:  Proc.  ACM 
SIGCOMM, pp. 123-134, 2001.   

[19]  S. Athuraliya, S.H. Low, V.H. Li, and Q. Yin, “REM: 
active  queue  management”,  IEEE  Network,  Vol.  15, 
Iss. 3, pp. 48-53, 2001. 

[20]  W. Feng, K.G. Shin, D.D. Kandlur, and D. Saha, “The 
BLUE  active  queue  management  algorithms”, 
IEEE/ACM Trans. Networking, Vol. 10, Iss. 4, pp. 513-
528, 2002. 

[21]  W-C.  Feng,  A.  Kapadia,  and  S.  Thulasidasan, 
“GREEN: proactive queue management over a best-
effort  network”,  In:  Proc.  IEEE  GLOBECOM,  pp. 
1774-1778, 2002. 

[22]  C.  Long,  B.  Zhao,  X.  Guan,  and  J.  Yang,  “The 
algorithm”, 
queue  management 
YELLOW 
Computer Networks, Vol. 47, Iss. 4, pp. 525-550, 2005. 
[23]  Y.  Li,  K.T.  Ko,  and  G.  Chen,  “A  Smith  predictor-
based  PI-controller  for  active  queue  management”, 
IEICE  Trans.  Commun.,  Vol.  88,  Iss.  11,  pp.  4293-
4300, 2005. 

[24]  K.B.  Kim,  and  S.H.  Low,  “Analysis  and  design  of 
AQM  based  on  state-space  models  for  stabilizing 
TCP”, In: Proc. American Control Conf., pp. 260-265, 
2003.   

[25]  C-K. Chen, H-H. Kuo, J-J. Yan, and T-L. Liao, “GA-
based PID active queue management control design 
for a class of TCP communication networks”, Expert 
Systems  with  Applications,  Vol.  36,  Iss.  2,  pp.  1903-
1913, 2009. 

[26]  R.  Fengyuan,  L.  Chuang,  Y.  Xunhe,  S.  Xiuming,  and 
W.  Fubao,  “A  robust  active  queue  management 
algorithm based on sliding mode variable structure 
control”, In: Proc. IEEE INFOCOM, pp. 13-20, 2002. 
[27]  X.  Guan,  B.  Yang,  B.  Zhao,  G.  Feng,  and  C.  Chen, 
sliding  mode  active  queue 
Telecommunication 

“Adaptive 
management 
Systems, Vol. 35, Iss. 1-2, pp. 21-42, 2007. 

algorithms”, 

fuzzy 

[28]  M.M.  de  A.E.  Lima,  N.L.S.  de  Fonseca,  and  J.C. 
Geromel,  “An  optimal  active  queue  management 
controller”, 
Conf. 
IEEE 
Communications, pp. 2261-2266, 2004. 

Proc. 

Int. 

In: 

[29]  P.  Zhang,  C-Q.  Ye,  X-Y.  Ma,  Y-H.  Chen,  and  X.  Li, 
“Using  Lyapunov 
to  design  optimal 
function 
controller  for  AQM  routers”,  J.  Zhejiang  University 
Science A, Vol. 8, Iss. 1, pp. 113-118, 2007. 

and design of the virtual rate control algorithm for 
stabilizing  queues  in  TCP  networks”,  Computer 
Networks, Vol. 44, Iss. 1, pp. 17-41, 2004. 

[31]  M.  Farokhian  Firuzi,  and  M.  Haeri,  “Active  queue 
management in TCP networks based on self tuning 
control  approach”,  In:  Proc.  IEEE  Conf.  Control 
Applications, pp. 904-909, 2005. 

[32]  Z.  Na,  Q.  Guo,  Z.  Gao,  J.  Zhen,  and  C.  Wang,  “A 
novel  adaptive  traffic  prediction  AQM  algorithm”, 
Telecommunication  Systems,    Online  First:  17  June 
2010 (doi: 10.1007/s11235-010-9359-2). 
 C-K.  Chen,  Y-C.  Hung,  T-L  Liao,  and  J-J.  Yan, 
“Design  of  robust  active  queue  management 
controllers  for  a  class  of  TCP  communication 
networks”, Information Sciences, Vol. 177, Iss. 19, pp. 
4059-4071, 2007. 

[33] 

[34]  W.  Liu,  S.  Zhang,  M.  Zhang,  and  T.  Liu,  “A  fuzzy-
logic 
active  queue 
algorithm 
management in IP networks”, J. Electronics (China), 
Vol.25, Iss. 1, pp. 102-107, 2008. 

control 

for 

[35]  G. Di Fatta, G.L. Re, and A. Urso, “A fuzzy approach 
for the network congestion problem”, Lecture Notes 
in Computer Science, Vol. 2329, pp. 286-295, 2002. 

[36]  R.  Rahmani,  T.  Kanter,  and  C.  Åhlund,  “A  self 
configuring 
fuzzy  active  queue  management 
controller in heterogeneous networks”, In: Proc. Int. 
Conf. Telecommunications, pp. 634-641, 2010. 
[37]  S.M.  Mahdi  Alavi,  and  M.J.  Hayes,  “Robust  active 
queue  management  design: 
loop-shaping 
approach”,  Computer  Communications,  Vol.  32,  Iss. 
2, pp. 324-331, 2009. 

a 

[38]  N.  Bigdeli,  and  M.  Haeri,  “Predictive  functional 
control  for  active  queue  management  in  congested 
TCP/IP networks”, ISA Transactions, Vol. 48, Iss. 1, 
pp. 107-121, 2009. 

[39]  C-K.  Chen,  T-L.  Liao,  and  J-J.  Yan,  “Active  queue 
management 
TCP 
controller 
communication networks: variable structure control 
approach”, Chaos, Solitons & Fractals, Vol. 40, Iss. 1, 
pp. 227-285, 2009. 

design 

for 

[40]  K.  Rahnami,  P.  Arabshahi,  and  A.  Gray,  “Neural 
network based model reference controller for active 
queue  management  of  TCP  flows”,  In:  Proc.  IEEE 
Int. Conf. Aerospace, pp. 1696-1704, 2005. 

[41]  H.C. Cho, S.M. Fadali, and H. Lee, “Adaptive neural 
queue  management  for  TCP  networks”, Computers 
& Electrical Engineering, Vol. 34, Iss. 6, pp. 447-469, 
2008. 

[42]  E.  Lochin,  and  B.  Talavera,  “Managing  Internet 
links  with  a  Kohonen-RED 
routers  congested 
queue”,  Engineering  Applications  of  Artificial 
Intelligence, Vol. 24, Iss. 1, pp. 77-86, 2011. 

[43]  X. Wang, Y. Wang, H. Zhou, and X. Huai, “PSO-PID: 
a  novel  controller  for  AQM  routers”,  In:  Proc. 
IEEE/IFIP WOCN, pp. 1-5, 2006. 
[44]  D.E.  Goldberg,  Genetic  Algorithms 

in  Search, 

Optimization and Learning, Addison Wesley, 1989. 

[45]  M.  Chen,  and  Z.  Yao,  “Classification  techniques  of 
neural networks using improved genetic algorithm”, 
In:  Proc.  IEEE  Int.  Conf.  Genetic  and  Evolutionary 
Computing, pp. 115-119, 2008. 

[30]  E.C. Park, H. Lim, K.J. Park, and C.H. Choi, “Analysis 

[46]  Y.  Shi,  and  R.  Eberhart,  “Parameter  selection  in 

22 

 
 
 
Majlesi Journal of Electrical Engineering                                      

              Vol. 6, No. 1, March 2012 

particle  swarm  optimization”,  In:  Proc.  Int.  Conf. 
Evolutionary Programming, pp. 591-601, 1998. 
[47]  C.  Hollot,  V.  Misra,  D.  Towsley,  and  W.B.  Gong, 
“Analysis  and  design  of  controllers  for  AQM 
routers  supporting  TCP 
IEEE  Trans. 
Automat. Contr., Vol. 47, Iss. 6, pp. 945-959, 2002. 

flows”, 

[48]  S. Athuraliya, S.H. Low, V.H. Li, and Q. Yin, “REM: 
active  queue  management”,  IEEE  Network,  Vol.  15, 
Iss. 3, pp. 48-53, 2001. 

23 

 
 
 
