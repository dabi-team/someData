The Visual Computer manuscript No.
(will be inserted by the editor)

Semantic-Aware Label Placement for Augmented Reality in
Street View

Jianqing Jia · Semir Elezovikj · Heng Fan · Shuojin Yang · Jing Liu ·
Wei Guo · Chiu C. Tan · Haibin Ling

9
1
0
2
c
e
D
5
1

]

V
C
.
s
c
[

1
v
5
0
1
7
0
.
2
1
9
1
:
v
i
X
r
a

Received: date / Accepted: date

Abstract In an augmented reality (AR) application,
placing labels in a manner that is clear and readable
without occluding the critical information from the real-
world can be a challenging problem. This paper intro-
duces a label placement technique for AR used in street
view scenarios. We propose a semantic-aware task-speciﬁc
label placement method by identifying potentially im-
portant image regions through a novel feature map,
which we refer to as guidance map. Given an input im-
age, its saliency information, semantic information and
the task-speciﬁc importance prior are integrated in the
guidance map for our labeling task. To learn the task
prior, we created a label placement dataset with the
users’ labeling preferences, as well as use it for evalu-
ation. Our solution encodes the constraints for placing
labels in an optimization problem to obtain the ﬁnal la-
bel layout, and the labels will be placed in appropriate
positions to reduce the chances of overlaying important
real-world objects in street view AR scenarios. The ex-
perimental validation shows clearly the beneﬁts of our
method over previous solutions in the AR street view
navigation and similar applications.

Keywords Label Placement · Augmented Reality ·
Guidance Map · Street View · Image-based layout

Jianqing Jia, Shuojin Yang, Jing Liu, Wei Guo
Key Laboratory of Augmented Reality. College of Mathemat-
ics and Information Science, Hebei Normal University, Shiji-
azhuang 050024, Hebei, China

Semir Elezovikj, Heng Fan, Chiu C. Tan, Haibin Ling
Department of Computer and Information Sciences, Temple
University, 1925 North 12th St.,Philadelphia, PA 19122, USA

1 Introduction

Augmented Reality (AR) technology enhances the phys-
ical world with digital information by overlaying visual
information such as in the form of labels [1]. Well-placed
informative labels can provide accurate instructions for
important objects such as landmarks, road signs, and so
on. However, the task of placing labels in the users view
can be challenging, especially for dense scenes. The la-
bel annotations should be placed to avoid overlapping
and occluding real-world textual objects and scene fea-
tures. The readability of the text annotations them-
selves depends strongly on the background color and
texture [2,3]. In the area of dynamic computer gener-
ated label layouts, labels should satisfy readability, un-
ambiguity, aesthetics and frame coherence, especially in
AR scenes [4] where these considerations could be more
challenging.

In common AR applications, the computer-generated
labels are usually registered based on the objects geo-
graphical locations, which are usually given as points
of interest (POI) with their respective GPS position.
The precise models of the environment are diﬃcult to
obtain, especially since the models can include dynamic
objects, for the following reasons. First, such a model
usually cannot capture ﬁne details that determine the
background clutter in images. Second, the general model
may not include all moving objects or able track them.
For example, a driver ignoring a pedestrian may cause a
traﬃc accident. Finally, inaccurate registration of sensor-
based tracking may not lead to productive use of the
additional scene knowledge. To obtain appropriate lay-
out in all situations, an image-driven label placement
method for AR is required.

Prior work on image-based label placement algo-
rithms generally used some visual saliency map to high-

 
 
 
 
 
 
2

Jianqing Jia et al.

light prominent regions in an image that attracts hu-
man attention. However, these methods often suﬀer from
the following problems:

– They ignore the semantic information in the users
view, which can be very useful in enhancing the un-
derstanding of human interest regions

– Previous works are task-unaware, and make little
use of the user’s understanding of the speciﬁc scene,
interests and preferences. The saliency algorithm by
itself has limitations with regards to label place-
ment. Speciﬁcally, the aim of image saliency detec-
tion is to highlight visually salient regions in an im-
age, whereas the most salient region may not always
correspond to the most important region for a spe-
ciﬁc scenario such as during driving.

– To the best of our knowledge, there are no standard
benchmarks for quantitatively evaluate label place-
ment methods.

– Previously used saliency models are typically out-
dated, e.g., the saliency detection method proposed
by Achanta [23] is mostly used in label placement
area, leaving unexplored many recent advances [26]in
saliency analysis.

Keeping these limitations in mind, we propose an
image-driven semantic-aware label placement approach
to obtain an appropriate layout, which can improve the
visual quality of annotated AR environments in street
view scenarios. Unlike prior works which mostly use
the saliency map to highlight important regions to aid
them with the label layout task, we introduce a new
feature map called guidance map to characterize the
important regions, which can be regarded as a task-
speciﬁc importance map. The guidance map consists of
three parts corresponding respectively to the saliency
information, the semantic information, and the task-
speciﬁc importance prior which is automatically learned
from the dataset. For the saliency information, we use a
state-of-the-art deep-learning based saliency detection
method, instead of previous methods using traditional
saliency detection algorithm like IG [23]. For the se-
mantic information, we use the deep-learning based se-
mantic segmentation algorithm proposed by Chen [28].
For the task-speciﬁc importance prior, we automati-
cally learn the prior using the manually labeled dataset.
We created a manual label placement dataset to pro-
vide the task-speciﬁc adjustment to our system as the
importance prior. The dataset also serves as quantita-
tive evaluation benchmark. Finally, the proposed evalu-
ation metrics brings a convincing quantitative compar-
ison with the state-of-the-art label placement methods.
In this work, we only consider external labeling and
do not consider internal labeling. Our labels will be

placed in such a way that interference with task spe-
ciﬁc important real world information will be reduced.
Although we mainly focus on street view in this pa-
per, our task-speciﬁc label placement framework is not
restricted to providing special beneﬁts only to applica-
tions like AR street view navigation, but can be also
applied to many other AR applications which are lack-
ing scene knowledge without loss of generality.

This paper makes the following contributions:

1. We introduce a new feature map called Guidance
Map. In addition to using saliency information of
the image, we add the semantic information and
task-speciﬁc importance prior into the label place-
ment optimization, to make the Guidance Map more
aligned to the task speciﬁc important regions.

2. We manually collect a label placement dataset. Dif-
ferent from former task-unaware saliency detection,
we use the dataset to learn task-speciﬁc importance
priors. Morever, it serves as a quantitative evalua-
tion benchmark.

3. We integrate the latest state-of-the-art saliency model
to further improve the label placement performance.
4. We deﬁne the evaluation metrics in the experiment
to quantitatively evaluate the label placement re-
sults.

The rest of the paper is organized as follows. In Sec-
tion 2, we cover related work in the label placement
ﬁeld, especially image-based layout techniques. In Sec-
tion 3, we introduce our semantic-aware task-speciﬁc
label placement method and details of data collection.
Experimental results in Section 4 show the eﬃciencies
of the proposed method. Finally, we conclude the paper
and describe future work in Section 5.

2 Related Work

Annotation placement has been discussed in augmented
reality view management (ARVM) [22] that aims to de-
termine positions and rendering styles of visual anno-
tations based on the camera poses and the 3D scene
information for augmented views. Previous ARVM ap-
proaches can be grouped into two categories: geometry-
based ones and image-based ones.

In the geometry-based approaches, camera poses and
3D scene information are used to determine the anno-
tation placement. Bell et al. [5] proposed to manage
the view in interactive 3D user interfaces by solving
the point-feature annotation placement problem using
greedy algorithms. Cmolik and Bittner [7] place the
annotations for 3D objects by combining greedy algo-
rithms with fuzzy logic. Tenmoku et al. [8] propose a
view management method to emphasize objects viewed

Semantic-Aware Label Placement for Augmented Reality in Street View

3

by end users, leveraging 3D models of the real scene to
locate annotations. Makita et al. [9] overlay annotations
of objects such as pedestrians for wearable AR, making
use of the positions and shapes of objects to compute
the positions of annotations via minimization. Zhang
et al. [10] propose an annotating system for augment-
ing tourist videos by registering videos to 3D models
and the label placement is achieved using a dynamic
programming algorithm.

More recent work by Iwai et al. [11] proposed an
annotation arrangement method for projection-based
AR applications. Each annotation is superimposed di-
rectly onto a nonplanar and textured surface based on
positions by minimizing an energy function using a ge-
netic algorithm. Tatzgern et al. [12] cluster similar items
and select a single representation for each cluster to
reduce the annotation complexity of crowded objects.
In a diﬀerent work, Tatzgern et al. [13] apply 3D geo-
metric constraints to manage the annotation placement
in the 3D object space and attain temporal coherence.
Kishishita et al. perform experiments on two view man-
agement methods for a wide ﬁeld of view augmented
reality display.

Most prior works under the geometry-based approach
formulate the view management problem as an opti-
mization problem and propose diﬀerent algorithms to
obtain annotation positions in each frame. Some re-
searchers focus on applying geometry-based approaches
to display visual information for head-mounted display
(HMD). For example, Lauber and Butz [18] propose a
layout management technique for HMD in cars. The an-
notations are rearranged based on the drivers head ro-
tations to avoid the label occlusions in the drivers view.
Orlosky et al. [29] evaluate user tendencies through a
see-through HMD to improve view management algo-
rithms. A user tendency is found to arrange the label
locations near the center of the viewing ﬁeld.

A number of image-driven attempts have been made
for improving label placement in augmented reality. In
these methods, a weighted linear combination of fac-
tors that aﬀect visibility is often utilized [6,9], however,
the method of ﬁnding optimum weights has not been
shown in detail. Leykin et al. [14] used a pattern recog-
nition method to automatically obtain the readability
of annotations over textured backgrounds. However, the
method fails to include an explicit algorithm to choose
the appropriate position for the labels. Rosten et al. [15]
identify unimportant regions of an image using FAST
features. The positions of annotations are decided by
considering the occluded image features when the la-
bels are placed in particular positions. However, the
technique is demonstrated with a only few labels and for
indoor scenes. Tanaka et al. [16] proposed a color-based

viewability estimation where they use the averages of
RGB components, the S component in HSV color space,
and the Y component in YCbCr color space. Gras-
set et al. [17] proposed a framework that combines vi-
sual saliency with edge analysis to identify image re-
gions suitable for label placement. They used the al-
gorithm proposed by Achanta et al. [23] for comput-
ing the saliency maps. We think that the labeling re-
sults can be improved, especially for scenes like auto-
mated driving. Fujinami et al. [31, 32] proposed a view
management method for spatial AR called VisLP, that
places labels based on the estimation of visibility. It
employs machine-learning techniques to estimate the
visibility that reﬂects humans subjective mental work-
load in reading information and objective measures of
reading correctness in various projection conditions. Li
et al. [33, 34] presented empirical results extracted from
experiments aimed at the users visual perception with
regards to AR labeling layouts, reﬂecting the subjective
preferences to diﬀerent factors inﬂuencing the labeling
result.

Unlike previous work, the approach presented in
this paper considers not only the saliency information,
but also the semantic information and the user label-
ing preferences in the label placement system. We also
diﬀer from previous task-unaware approaches by intro-
ducing a task-speciﬁc labeling framework and automat-
ically learning the importance prior from the manually
labeled dataset.

3 Our Proposed Method

3.1 Overview

In this section, we present our algorithm for semantic-
aware task-speciﬁc label placement. Given a label, it
needs to be placed in an appropriate position so as to
avoid overlapping with other labels and salient regions
from the user’s view. A fundamental diﬀerence between
previous works and our method is the fact that we con-
sider the semantic information and speciﬁc task in ad-
dition to the classic model. These factors are able to
contribute to the label placement system. We introduce
a new feature map called guidance map to highlight the
important regions in the user’s view.

Figure 1 shows the processing ﬂow of our method.
During the training phase, we collect a Manual Label
Placement dataset and generate the task-speciﬁc im-
portance prior from the semantic information and the
manual labels. The importance prior contributes to the
saliency detection to get the guidance maps of the orig-
inal images. At the testing phase, the label placement
starts when the new object is detected in the ﬁeld of

4

Jianqing Jia et al.

Fig. 1 Flowchart of the proposed algorithm

projection corresponding to the preset labels or a new
label placement is requested by the application. For an
input image and preset label information, we ﬁrst ob-
tain the saliency map, semantic map and edge map, all
from the original images. The input label information
includes the POI position and the label size. Then we
analyze the saliency map and semantic map with the
task-speciﬁc importance prior learned from the train-
ing phase to generate the Guidance Map of the image.
Finally, we add the guidance map with the label infor-
mation into the optimization layout solver to output
the users view image with the labels in their appropri-
ate positions.

3.2 Creating the manual label placement dataset

To the best of our knowledge, there is no standard
dataset for label placement in AR. Since we are using
AR label placement in street view scenarios as a mo-
tivation application, we randomly select images from
the Cityscapes Dataset [27] to simulate the scenarios
in the AR Street View navigation application. The rea-
son for choosing the task of AR street view naviga-
tion is because urban scene images are widely used in
auto-driving technology analysis. Afterwards, we col-
lect manual label information through an experiment
to generate the Manual Label Placement dataset.

Data selection and scene simulation In AR-
based navigation, labels are used in the users’ view to

indicate the nearby restaurants, banks or other loca-
tions of interest. When collecting the dataset, the ex-
periment participants are told to imagine the following
task scenario: we are driving a car or walking on the
road, and want to see additional information about the
surrounding destinations of interest in an on-demand
fashion. The AR street view navigation system connects
the POI to the corresponding label with the help of a
leader line, clearly associating the target location to the
augmented overlaid information.

We randomly choose 300 pictures from the Cityscapes

Dataset [27] (180 for training and 120 for testing). The
street scenes in this dataset are perfectly suited for the
purpose of simulating a driving scenario. Moreover, the
semantic annotation is very accurate such that the se-
mantic information can be used in the ablation study.
We collect the manual placement data by simulat-
ing an AR street view navigation scenario to make it
look as if the participants are sitting in a car and us-
ing equipment like AR-HUD. One of the most popu-
lar AR-HUD products produced by Continental inserts
full-color graphics into the real road view in an approx-
imately 130 cm-wide and over 60 cm-high section of
the drivers ﬁeld of vision at a distance of 2.5 meters.
The basis is provided by the digital micro-mirror de-
vice (DMD) technology, which is also used in digital
cinema projectors, as shown in Figure 2.

Every participant is positioned in front of the pro-
jection screen at a distance of 2.5 meters. The valid
section of the ﬁeld of view is 120cm wide and 60cm

Semantic-Aware Label Placement for Augmented Reality in Street View

5

ticipants vote for their favorite. We ﬁnally set the text
size to 12 pixels and the label size as 30 × 120 pixels.

Collecting label placements We conduct the ex-
periment to study how users manually place labels in
speciﬁc scenes. There are 20 users (age range 18 to 40,
11 females and 9 males) participating in the study. The
participants are asked to use a mouse to place labels
onto the position they think most appropriate, just like
Figure 3. In the experiment, all participants view the
same 300 photos (180 for training and 120 for testing),
and the order of the images is randomized for each par-
ticipant. We ﬁnally collect 20 × 300 × 8 = 48,000 labels.

3.3 Guidance Map generation

As we mentioned in Section 2, image-based AR label
placement not only values the readability of the target
objects and labels, but also uses the background and
other important regions in the image of the user’s view.
When placing labels, previous work mostly uses the vi-
sual saliency to avoid important regions, however, the
saliency detection methods in previous works are out-
dated. Therefore, we ran diﬀerent saliency algorithm
[23,24,25] on the images in our dataset, the results are
shown in Figure 4.

We found that the saliency detection methods do
not perform well in street view images. For the contrast-
based traditional methods like IG [23] and DRFI [24],
the sky regions in the results are shown to be more
salient than the surroundings, which is contrary to our
expectations. Individuals tend to place labels onto uni-
form regions, and the sky region is obviously on the
top of the list of positions we expect users to place the
labels on. Also, the road regions are less salient than
others, and sometimes the traﬃc sign is not salient.
This will lead the label placement algorithm to place
the labels onto road or traﬃc sign regions, which will
aﬀect the drivers’ view. So the saliency detection used
in the previous works in street view image is not ideal.
Task-speciﬁc importance prior Based on our ob-
servations, the semantic information in the scene has an
inﬂuence on the user’s tendency when placing labels. In
a speciﬁc task scenario, the user’s tendencies when plac-
ing labels can vary on based on the semantic regions.
For this purpose, we integrate the semantic information
with the saliency information into the label placement
algorithm. But the question is, how to use the seman-
tic information and how to measure the users’ labeling
preference on diﬀerent semantic areas? We can treat
the user’s labeling preferences as a task-speciﬁc impor-
tance prior. In order to quantify the importance prior
of the users’ manual label placement in the AR Street
View navigation scenario, we estimate the importance

Fig. 2 Schematic diagram for AR navigation display in AR-
HUD

high. The participants are asked to use a mouse to place
labels onto the position where they deem most appro-
priate.

Label conﬁguration We need to set the POI point
and its corresponding label information before the ex-
periment. We should ﬁrst consider the number of target
objects and related labels in the same street view image.
If the number of labels in the user’s view is low (1 or 2
labels), the layout method can easily avoid the impor-
tant regions in the user’s view, due to the abundance
of candidate positions. In this case, the labels can be
placed arbitrarily. If the number of labels in the image
is high (more than 10), the label placement task can
prove daunting even for humans, as it is very diﬃcult
to decide on an appropriate label layout. Therefore, we
show the observers diﬀerent images with the number of
labels varying between 5 and 9, and also let them to
vote for the maximum number of labels that they feel
acceptable. Based on their selection, we made a suitable
trade-oﬀ between visual quality and algorithm validity,
and set the number of labels in each view to 8. As for
POI point selection, we try to ﬁnd meaningful regions
like gates or windows as the target objects.

When placing labels, the content of labels may also
aﬀect the participant’s decision. The AR annotation
can be in various forms such as text, image, video, etc.,
and we set the content of the label as the name of the
simulation target location. We noticed that diﬀerent
names may aﬀect diﬀerent user’s labeling decision. In
order to avoid users regarding some labels as more im-
portant than others in terms of the textual content of
the labels, we opt to set the textual content of the 8
labels in each image with exactly the same names. The
style of the label is black outline border, white back-
ground and black text.

The size of the labels may also aﬀect the user’s deci-
sion. We set the eight labels of the same size. We show
examples of diﬀerent label size styles and let the par-

6

Jianqing Jia et al.

Fig. 3 Illustration for Manual Label Placement dataset collecting. Participants view the image with 8 labels, and use a mouse
to drag the labels onto the appropriate place, just like the right image.

Fig. 4 Visual comparison of selected saliency detection.

prior from human annotations using the collected data,
speciﬁcally the 28,800 labels in the training set. We cal-
culate the frequency of labels falling into regions of a
speciﬁc semantic category.

We also think it is important to not only look at the
label’s centroid for determining the semantic category
that the label is placed in, but instead it is crucial to
look at the accompanying category of each pixel belong-
ing to a label. Just like the example shown in Figure
5, although the centroid of the label is related to the
semantic category Foliage, most of the label area is in
the Sky region. So we calculate the quota instead, as
shown in Figure 5.

We calculate the number of labels for each semantic
category in the training set, and name it as the num-
ber of actual labels Nactual. However, this number can
not directly represent the manual placement tenden-
cies, because diﬀerent semantic categories appear with
diﬀerent frequencies in the dataset. For example, most
of the drivers think the Bridge region is less important

Fig. 5 An incorrectly calculated example (left) and the im-
plemented method of calculation (right).

in their view and tend to put the labels onto it. The
Bridge semantic category only appears 9 times in our
training set, and at most 9 × 8 × 20 = 1,440 labels
can be placed onto the Bridge regions. We call 1,440 as
the number of potential labels Npotential for the Bridge
semantic category. We introduce a tendency factor de-
ﬁned as:

λ =

Nactual
Npotential

(1)

Semantic-Aware Label Placement for Augmented Reality in Street View

The ratio λ for the Bridge category is high enough,
so even though the Nactual for the Bridge category is
very low, we can conclude that users tend to put the la-
bels onto the bridge region once they see it. The statistic
placement tendencies for diﬀerent semantic categories
is shown in Table 1.

model:

G(i, j) =

H (cid:48)(i, j) · S(i, j)
max(S(i, j))

H (cid:48)(i, j) = cij · H(i, j)

7

(2)

(3)

Table 1 Placement tendencies for diﬀerent semantic cate-
gories

Categories

Npotential

Nactual

λ

Sky
Foliage
Building
Bridge
Person
Bus
Motorcycle
Pole
Sidewalk
Car
Traﬃc Sign
Rider
Road
Bicycle
Traﬃc Light

28800
28480
28480
1440
22720
1120
1920
28800
28800
27680
27040
5280
28000
7840
13600

12569.43
10840.36
4956.41
156.31
97.52
3.04
5.11
51.31
47.21
40.36
37.64
6.43
15.76
2.28
0.83

43.64%
38.06%
17.40%
10.85%
0.43%
0.27%
0.27%
0.18%
0.16%
0.15%
0.14%
0.12%
0.05%
0.03%
0.01%

From Table 1 and an interview that we performed
with the participants after the data collection, we can
conﬁrm that the statistic manual label placement ten-
dencies are reasonable. As shown, Sky, Foliage, Build-
ing and Bridge are among the most widely chosen cat-
egories to put the label on. The Sky and Foliage re-
gion is very common in the dataset, and drivers tend
to put labels on these regions since the color and tex-
ture are uniform and don’t vary drastically. Sometimes
these regions are more salient than surroundings in the
saliency map, leading algorithms to avoid placing labels
in these regions. Also, even if the Road regions consti-
tute a great proportion in the dataset, drivers do not
like putting the labels on it since they think the labels
will adversely eﬀect their driving. In spite of the Traf-
ﬁc Sign and Traﬃc Light’s appearance in almost every
picture in the training dataset and their high Npotential
value, drivers do not put labels on it. We conclude that
the reason for this is because they think these are the
most important object they want to see while driving,
and will not allow anything to cover it.

Guidance Map We use the semantic information
and the preference of user’s label placement to adjust
the saliency map to generate a Guidance Map, closely
resembling users’ natural preferences to indicate the im-
portant regions in the view in a speciﬁc task. The Guid-
ance Map, denoted by G, can be conducted through the

where, for pixel location (i, j), S(i, j) represents the
saliency map, H(i, j) represents the semantic map, max(·)
is the maximum function for normalization, and c is
the task-speciﬁc importance prior weight learned in the
training phase. In this study, from the statistic features
for manual placement tendency, we deﬁne c for diﬀerent
semantic regions as the following

c = 1 −

λ
(cid:107)λ(cid:107)∞

(4)

Table 2 shows the task-speciﬁc category weights in this
study. Even though some participants put some labels
on the traﬃc sign and traﬃc light regions, we assume
that the participants did not notice these important ob-
jects due to not paying enough attention. We conclude
that this is mainly because the users expressed their re-
gret with regards to these labels during our interview.
For this purpose, we adjusted these coeﬃcients to 1.

Table 2 Task-speciﬁc importance prior weight for diﬀerent
semantic categories

Categories

λ

c

Sky
Foliage
Building
Bridge
Person
Bus
Motorcycle
Pole
Sidewalk
Car
Traﬃc Sign
Rider
Road
Bicycle
Traﬃc Light

43.64% 0.0000
38.06% 0.1279
17.40% 0.6013
10.85% 0.7514
0.43% 0.9901
0.27% 0.9938
0.27% 0.9938
0.18% 0.9959
0.16% 0.9963
0.15% 0.9966
0.14% 1.0000
0.12% 0.9973
0.05% 0.9989
0.03% 0.9993
0.01% 1.0000

To obtain the important regions in the user’s view,
we combine the saliency-detection algorithm with se-
mantic information for the image of the users view.
The pixels value indicates the importance of the region
for the drivers. Also, we can see edges do not always
show as signiﬁcantly salient after running the saliency-
detection algorithm. It is obvious that edges of objects
should not be occluded by labels. For this purpose, we
use the Canny algorithm to detect the edges of objects

8

Jianqing Jia et al.

Fig. 6 Qualitative result of semantic segmentation generated by Deeplabv3 (middle), the origin image (left) and ground-truth
(right).

Fig. 7 Qualitative result of Guidance Map generated by the proposed method.

in the user’s view, serving as a supplement for the Guid-
ance Map, obtaining the positions where annotations
tend not to be placed.

In our system, we use the DSS saliency-detection
algorithm proposed by Cheng [25]. The semantic in-
formation comes from semantic segmentation result of
Deeplabv3 [28], which shows good performance in the
City-scapes dataset, as shown in Figure 6. Our Guid-
ance Map is shown in Figure 7.

3.4 Optimization

Throughout the paper, for the t-th image in the test-
ing set (T images), we let the target objects in the t-th
image form a set O = {O1, . . . , Ok, . . . , OK} , Ok repre-
sent the k-th target object, and K is the total number
of objects. Then we set the POI as the centroid of an
object’s bounding box and named as mk = (xk, yk).
To present the visual information in our study, each Ok
has its own label Pk, and the position of the label Pk
is pk = (˜xk, ˜yk). The set P = {P1, . . . , Pk, . . . , PK} is
deﬁned as the set of labels in the t-th image. Then the
label placement problem aims to compute each pk.

We formulate the label placement problem as an
energy minimization problem, with the energy function
deﬁned as

E = Elb + Eln

(5)

It consists of the label energy term (Elb) and the

leader line energy term (Eln).

Label energy term As shown in Eq. 6, the label
energy term includes the energy of the label overlaying

the Guidance Map and edge map, and the energy of the
labels overlaying each other.

Elb = α1Elb-g + α2Elb-e + α3Elb-int

(6)

where αi(i = 1, 2, 3) are the weight coeﬃcients, which
are automatically learned from the Manual Label Place-
ment dataset.

(1) Label overlaying Guidance Map (joint saliency &

semantic)

Elb-g =

K
(cid:88)

µ
(cid:88)

ν
(cid:88)

k=1

i=1

j=1

MPk (i, j) · G(i, j)
µL · νL

(7)

where the MPk (i, j) is the map which indicates the
region of the annotation of Pk (the label area pixel
value is 1 and the rest of the image is 0), the image
size is µ · ν and the label size is µL · νL.
(2) Label overlaying the edge map (Canny)

Elb-e =

K
(cid:88)

µ
(cid:88)

ν
(cid:88)

k=1

i=1

j=1

MPk (i, j) · E(i, j)
µL · νL

(8)

where the E(i, j) is the edge map generated by
Canny edge detector.

(3) Labels intersection

Elb-int =

(cid:88)

µ
(cid:88)

ν
(cid:88)

Pk,Pk(cid:48) ∈P

i=1

j=1

MPk (i, j) · MPk(cid:48) (i, j)
µL · νL

(9)

Leader line energy term As shown in Eq. 10, the
label energy term includes the energy of the leader line
overlaying the Guidance Map, the leader line intersec-
tion, the leader line length and orientation.

Eln = β1Eln-g + β2Eln-int + β3Eln-len + β4Eln-ori

(10)

Semantic-Aware Label Placement for Augmented Reality in Street View

9

where βi(i = 1, . . . , 4) are the weight coeﬃcients, which
are automatically learned from the Manual Label Place-
ment dataset.

(1) Leader line overlaying Guidance Map

Eln-g =

K
(cid:88)

µ
(cid:88)

ν
(cid:88)

k=1

i=1

j=1

NPk (i, j) · G(i, j)
µL · νL

(11)

where the NPk (i, j) is the map which indicate the
region of the leader line between the label Pk and
the POI (the leader line pixel value is 1 and the rest
of the image is 0).
(2) Leader line intersection

Eln-int =

(cid:88)

µ
(cid:88)

ν
(cid:88)

Pk,Pk(cid:48) ∈P

i=1

j=1

NPk (i, j) · NPk(cid:48) (i, j)

(12)

(3) Leader line length

Eln-len =

K
(cid:88)

k=1

|pk − mk|

(4) Leader line orientation

(13)

Eln-ori =

K
(cid:88)

k=1

|cos(φ(pk − mk))|

(14)

where the φ(pk − mk) is the angle between the
leader line vector pk − mk and the y axis (the ver-
tical alignment leader line is preferred).

We consider three algorithms for implementing the
optimization: greedy algorithm, simulated annealing and
a force-based algorithm. We ﬁrstly rule out simulated
annealing algorithm because its low eﬃciency is not
suitable for our particular AR scenario. The greedy al-
gorithm iterates all label and calculates their energy
function values. We ﬁnd the minimum of these values
to determine the ﬁnal appropriate positions. The force-
based algorithm implements penalty factors as a set of
forces, and labels are moved in parallel in this force
ﬁeld. After a certain number of iterations, we get the
labels’ ﬁnal positions. When testing the force-based al-
gorithm, we found that the force-ﬁeld is too complex
for us to handle. It is impossible to ﬁnd the appropriate
number of iterations in the implementation. Therefore,
we chose the greedy algorithm for our optimization. We
sort the labels from left to the right, nearest to the far-
thest. Then we iterate each label for calculation. In the
end, we ﬁnd the minimum and obtain the ﬁnal results.

4 Experiments and Results

We apply our proposed method to the Manual Label
Placement dataset, which has 180 images for training
and 120 for testing. We use the training set to generate
the task-speciﬁc semantic-aware weights and the coef-
ﬁcients in the energy function as α1 = 0.3514, α2 =
0.0675, α3 = 0.0839 and β1 = 0.0371, β2 = 0.1078,
β3 = 0.2302, β4 = 0.1221. Afterwards, we generate
the label layout on the testing dataset. Qualitative and
quantitative comparison is conducted between the pro-
posed method and state-of-the-art label placement al-
gorithms.

4.1 Evaluation Metrics

To evaluate the performance of the annotation results,
we apply four metrics, (1) the average distance from the
centroid of manual placement µcentroid, (2) the average
annotation overlapped area µover, (3) the intersection
µint, and (4) the leader line length µlen.

The µcentroid metric is one of the most important
metrics. It aims to assess the diﬀerence between the
implementation result and users manual placement. In
the testing dataset, 20 participants decide the label po-
sitions for each label Pk ∈ P for T images. We eliminate
two of the most isolated and get the centroid of the re-
maining 18 positions to set it as ˜pk. The µcentroid is
deﬁned as

µcentroid =

1
K · T

T
(cid:88)

K
(cid:88)

t=1

k=1

(cid:12)
(cid:12)pt

k − ˜pt
k

(cid:12)
(cid:12)

(15)

A lower value of µcentroid means that the placement
result is closer to the manual placement.

The second metric µover aims to assess the sever-
ity of overlapping of both annotations and important
regions. µover is deﬁned as:

µover =

1
K · T

T
(cid:88)

(E t

lb−g + E t

lb−int)

t=1

(16)

A lower value of µover means that fewer collisions occur
between annotations and important regions.

The third metric µint aims to estimate if label leader
lines have intersections. To prevent confusion when read-
ing the annotations, the leader lines should not intersect
with each other. To assess the severity of intersection,
µint is represented as:

µint =

1
T

T
(cid:88)

t=1

E t
ln−int

(17)

Fewer intersections of leader lines yield to a lower µint.

10

Jianqing Jia et al.

The last evaluation metric is evaluating the leader
line length. If the label is not close to the point of in-
terest, users need to spend time to track the related
label. Moreover, the participants stated in the inter-
view that they dislike long leader lines and think that
the acceptable leader line length is 5-10 cm . We set γ
as the optimized length, µlen is computed to quantify
k − mt
the similarity between |pt

k| and γ as:

The above mentioned problems are eliminated in
our method. The labels do not cover important areas
in the user’s ﬁeld of view, and the labels tend to be
positioned on regions of uniform color and texture (sky,
leaves, bridge), while avoiding the road as expected.
Our method outperforms other methods on our testing
dataset.

µlen =

1
T

T
(cid:88)

K
(cid:88)

t=1

k=1

(cid:0)(cid:12)
(cid:12)pt

k − mt
k

(cid:12)
(cid:12) − γ(cid:1)

(18)

4.3 Quantitative Results and Ablation Study

When the leader line length is closer to the optimal
length, the value of µlen will be smaller. We set γ = 10
in our experiment.

From the evaluation metrics deﬁned in Section 4.1, we
quantitatively compare our method with the state-of-
the-art approaches. The quantitative comparison is shown
in Table 3.

4.2 Qualitative comparison with state of the art

Table 3 Quantitative Results of Diﬀerent Methods

The comparisons with the state-of-the-art approaches
help identify the contributions of the proposed approach.
We compare the proposed approach to a baseline ap-
proach and three state-of-the-art approaches: height-
separation [30], planar-separation and Grasset’s method [16].
The baseline approach is the naive method which over-
lays the computer-generated information onto the POIs
in the users view. Naturally, this approach leads to la-
bel occlusions. In the height separation method pre-
sented by Peterson et al. [30], the annotation and the
POI share the same x-coordinate. The height separa-
tion technique iterates each label, and when it detects
that two labels overlap, it moves up the label related to
the farthest POI for half a label’s height. Similar to the
naive and the height-separation method, the planar sep-
aration technique also lacks image analysis. With pla-
nar separation, if a label is detected to overlap another
label, it will evaluate the new label position with 10◦
separations and choose the best position after evaluat-
ing a total of 36 positions. Additionally, we also com-
pare our technique to the layout algorithm presented
by Grasset [16]. Qualitative results are shown in Figure
8.

From the qualitative comparison, we can see that
the naive approach, the height separation method and
the planar separation method inappropriately cover pedes-
trians and traﬃc signs. Moreover, there is a signiﬁ-
cant inter-overlapping of labels with the naive method,
which seriously aﬀects the readability of the labels. This
case necessitates that the drivers change the viewpoint
to see the annotations. Grasset’s [16] method is based
on the IG saliency algorithm to avoid occluding pedes-
trians and traﬃc signs, and a large number of the labels
are placed on the road, which strongly aﬀect the driver’s
vision in the AR street view navigation scene.

Methods

µcentroid

µover

µint

µlen

Naive
Height Separation
Planar Separation
Grasset[16]
Proposed Method

105.16
86.39
89.45
85.33
61.78

38.74
83.30
48.88
35.58
8.50

0
0
0
78
12

0
10.73
9.84
123.43
26.99

From the table, we can see that for one of the most
important evaluation metric µcentroid, our method has
the lowest value compared to others - our label layout is
closer to the Manual Label Placement benchmark and
hence provides better layout than the comparing meth-
ods. For another important metric µover, out method
yields a much smaller value than other methods, indi-
cating that we successfully avoid occluding the salient
areas in the user’s view. As for µint and µlen, it is obvi-
ous that the ﬁrst three methods will get lower values.
Out method performs much better than [16] based on
the two metrics. To summarize, our method performs
better than the other state of the art methods.

To validate the impact of the diﬀerent components
of the latest saliency model and the semantic informa-
tion, we conduct ablation experiments on the testing
dataset, shown in Table 4.

Table 4 Ablation Study

Methods

µcentroid

µover

µint

µlen

IG(Grasset[16])
IG+Deeplabv3
IG+Groundtruth
DSS+Deeplabv3(Ours)
DSS+Groundtruth

85.33
72.70
64.65
61.78
57.65

35.58
15.18
9.17
8.50
7.16

78
27
16
12
12

123.43
46.83
37.48
26.99
26.49

Semantic-Aware Label Placement for Augmented Reality in Street View

11

Fig. 8 The qualitative comparison between the proposed method and other state-of-the-art methods.

The ablation study results indicate that adding the
semantic information to the IG algorithm, the label
layout quantitative evaluation performs better. When
directly integrating the accurate semantic segmenta-
tion ground truth, the improvement is more obvious.
It indicates that the semantic information is useful for
the label placement problem. On the other hand, from
the comparison of DSS+Deeplabv3 (our method) with
IG+Deeplabv3, we can conclude that the latest state-
of-the-art saliency model improves the label layout per-
formance. These studies show that each ingredient brings
individual improvement, and all of them work together
to produce better label layouts.

5 Conclusion

This paper presents a semantic-aware approach for la-
bel placement in AR street view scenarios. We intro-
duce a new algorithm for labeling that can be used
for future development of AR-HUD street view nav-
igation applications. Compared to other label layout
algorithms, our method has the following advantages:
(1) Both semantic information and saliency detection
are integrated into the label placement optimization to
further improve the layout performance. (2) With the
help of a label placement dataset, we have a quantita-
tive evaluation benchmark to conduct the quantitative
experiment. (3) Unlike previous task-unaware meth-
ods, our system provides a task-speciﬁc label placement
framework.

12

References

1. Azuma R.T., A survey of augmented reality, Teleoperators

and Virtual Environments, 6(4), pp.355-385 (1997)

2. Carmigniani J., Furht B., Anisetti M., Ceravolo P., Dami-
ani E. and Ivkovic M., Augmented reality technologies, sys-
tems and applications, Multimedia tools and applications,
51(1), pp.341-377 (2011)

3. Chang G., Morreale P. and Medicherla P., Applications
of augmented reality systems in education, In Society for
Information Technology Teacher Education International
Conference Association for the Advancement of Comput-
ing in Education (AACE), pp. 1380-1385 (2010)

4. Hartmann K., Gtzelmann T., Ali K. and Strothotte T.,
Metrics for functional and aesthetic label layouts, In Inter-
national Symposium on Smart Graphics, pp.115-126 (2005)
5. Bell B., Feiner S. and Hllerer T., View management for
virtual and augmented reality, In Proceedings of the 14th
annual ACM symposium on User interface software and
technology, pp.101-110 (2001)

6. Azuma R. and Furmanski C., Evaluating label placement
for augmented reality view management, In Proceedings of
the 2nd IEEE/ACM international Symposium on Mixed
and Augmented Reality, pp.66 (2003)

7. Cmolk L. and Bittner J., Layout-aware optimization for
interactive labeling of 3D models, Computers and Graphics,
34(4), pp.378-387 (2010)

8. Tenmoku R., Kanbara M. and Yokoya N., Annotating
user-viewed objects for wearable AR systems. In Proceed-
ings of the 4th IEEE/ACM International Symposium on
Mixed and Augmented Reality, pp.192-193 (2005)

9. Makita K., Kanbara M. and Yokoya N., View manage-
ment of annotations for wearable augmented reality, In 2009
IEEE International Conference on Multimedia and Expo,
pp.982-985 (2009)

10. Zhang B., Li Q., Chao H., Chen B., Ofek E. and Xu
Y.Q., Annotating and navigating tourist videos. In Pro-
ceedings of the 18th SIGSPATIAL International Conference
on Advances in Geographic Information Systems, pp.260-
269 (2010)

11. Iwai D., Yabiki T. and Sato K., View management of
projected labels on nonplanar and textured surfaces, IEEE
transactions on visualization and computer graphics, 19(8),
pp.1415-1424 (2013)

12. Tatzgern M., Kalkofen D. and Schmalstieg D., Dynamic
compact visualizations for augmented reality, In 2013 IEEE
Virtual Reality (VR), pp.3-6 (2013)

13. Tatzgern M., Kalkofen D., Grasset R. and Schmalstieg
D., Hedgehog labeling: View management techniques for
external labels in 3D space, In 2014 IEEE Virtual Reality
(VR), pp.27-32 (2014)

14. Leykin A. and Tuceryan M., Automatic determination of
text readability over textured backgrounds for augmented
reality systems, In Third IEEE and ACM International
Symposium on Mixed and Augmented Reality, pp.224-230
(2004)

15. Rosten E., Reitmayr G. and Drummond T., Real-time
video annotations for augmented reality, In International
Symposium on Visual Computing, pp.294-302 (2005)

16. Tanaka K., Kishino Y., Miyamae M., Terada T. and
Nishio S., An information layout method for an optical see-
through head mounted display focusing on the viewabil-
ity, In 2008 7th IEEE/ACM International Symposium on
Mixed and Augmented Reality, pp.139-142 (2008)

17. Grasset R., Langlotz T., Kalkofen D., Tatzgern M.
and Schmalstieg D., Image-driven view management for

Jianqing Jia et al.

augmented reality browsers, In 2012 IEEE International
Symposium on Mixed and Augmented Reality (ISMAR),
pp.177-186 (2012)

18. Lauber F., Butz A., View management for driver assis-
tance in an HMD, In 2013 IEEE International Symposium
on Mixed and Augmented Reality (ISMAR), pp. 1-6 (2013)
19. Stein T. and Dcoret X., Dynamic label placement for
improved interactive exploration, In Proceedings of the 6th
international symposium on Non-photorealistic animation
and rendering, pp.15-21 (2008)

20. Vollick I., Vogel D., Agrawala M. and Hertzmann A.,
Specifying label layout style by example, In Proceedings
of the 20th annual ACM symposium on User interface soft-
ware and technology, pp.221-230 (2007)

21. Augmented

display,
http://continental-head-up-display.com/ar-hud/,
trieved Apr 30, 2019, (2015)

head-up

reality

from:
Re-

22. Rakholia N., Hegde S. and Hebbalaguppe R., Where to
Place: A Real-Time Visual Saliency Based Label Placement
for Augmented Reality Applications. In 2018 25th IEEE In-
ternational Conference on Image Processing (ICIP), pp.604-
608 (2018)

23. Achanta R., Hemami S., Estrada F. and Susstrunk S.,
Frequency-tuned salient region detection, Proceedings of
IEEE Internatinoal Conference on Computer Vision and
Pattern Recognition, (2009)

24. Jiang H., Wang J., Yuan Z., Wu Y., Zheng N. and Li S.,
Salient object detection: A discriminative regional feature
integration approach, In Proceedings of the IEEE confer-
ence on computer vision and pattern recognition, pp.2083-
2090 (2013)

25. Hou Q., Cheng M.M., Hu X., Borji A., Tu Z. and Torr
P.H., Deeply supervised salient object detection with short
connections, In Proceedings of the IEEE Conference on
Computer Vision and Pattern Recognition, pp.3203-3212
(2017)

26. Wang W., Lai Q., Fu H., Shen J., and Ling, H., Salient
Object Detection in the Deep Learning Era: An In-Depth
Survey, arXiv:1904.09146 (2019)

27. Cordts M., Omran M., Ramos S., Rehfeld T., Enzweiler
M., Benenson R., Franke U., Roth S. and Schiele B., The
cityscapes dataset for semantic urban scene understanding,
In Proceedings of the IEEE conference on computer vision
and pattern recognition, pp.3213-3223 (2016)

28. Chen L.C., Papandreou G., Schroﬀ F. and Adam H., Re-
thinking atrous convolution for semantic image segmenta-
tion, arXiv preprint, arXiv:1706.05587 (2017)

29. Orlosky J., Kiyokawa K. and Takemura H., Towards in-
telligent view management: A study of manual text place-
ment tendencies in mobile environments using video see-
through displays, In 2013 IEEE International Symposium
on Mixed and Augmented Reality (ISMAR), pp.281-282
(2013)

30. Peterson S.D., Axholt M., Cooper M. and Ellis S.R.,
Evaluation of alternative label placement techniques in dy-
namic virtual environments, In International Symposium
on Smart Graphics, pp.43-55 (2009)

31. Ichihashi, Keita, and Fujinami K., Estimating Visibility
of Annotations for View Management in Spatial Augmented
Reality Based on Machine-Learning Techniques, Sensors,
19(4), pp.939-966 (2019)

32. Sato, Makoto, and Fujinami K., Nonoverlapped view
management for augmented reality by tabletop projection,
Journal of Visual Languages and Computing, 25(6), pp.891-
902 (2014)

33. Li G., Liu Y., and Wang Y., An empirical evaluation
of labelling method in augmented reality, Proceedings of

Semantic-Aware Label Placement for Augmented Reality in Street View

13

the 16th ACM SIGGRAPH International Conference on
Virtual-Reality Continuum and its Applications in Indus-
try, doi:10.1145/3284398.3284422 (2018)

34. Li G., Liu Y., Wang Y. and Xu Z., Evaluation of labelling
layout method for image-driven view management in aug-
mented reality, Proceedings of the 29th Australian Confer-
ence on Computer-Human Interaction, pp.266-274 (2017)

