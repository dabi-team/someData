7
1
0
2

n
u
J

9
2

]

R
G
.
s
c
[

1
v
7
7
5
9
0
.
6
0
7
1
:
v
i
X
r
a

Analysis and Modeling of 3D Indoor Scenes∗

Rui Ma

Abstract

We live in a 3D world, performing activities and interacting with ob-
jects in the indoor environments everyday. Indoor scenes are the most fa-
miliar and essential environments in everyone’s life. In the virtual world,
3D indoor scenes are also ubiquitous in 3D games and interior design.
With the fast development of VR/AR devices and the emerging appli-
cations, the demand of realistic 3D indoor scenes keeps growing rapidly.
Currently, designing detailed 3D indoor scenes requires proﬁcient 3D de-
signing and modeling skills and is often time-consuming. For novice users,
creating realistic and complex 3D indoor scenes is even more diﬃcult and
challenging.

Many eﬀorts have been made in diﬀerent research communities, e.g.
computer graphics, vision and robotics, to capture, analyze and generate
the 3D indoor data. This report mainly focuses on the recent research
progress in graphics on geometry, structure and semantic analysis of 3D
indoor data and diﬀerent modeling techniques for creating plausible and
realistic indoor scenes. We ﬁrst review works on understanding and se-
mantic modeling of scenes from captured 3D data of the real world. Then,
we focus on the virtual scenes composed of 3D CAD models and study
methods for 3D scene analysis and processing. After that, we survey var-
ious modeling paradigms for creating 3D indoor scenes and investigate
human-centric scene analysis and modeling, which bridge indoor scene
studies of graphics, vision and robotics. At last, we discuss open prob-
lems in indoor scene processing that might bring interests to graphics and
all related communities.

1

Introduction

We live in a 3D world, performing activities and interacting with objects in the
indoor environments everyday. Indoor scenes are the most familiar and essential
In the virtual world, indoor scenes are also
environments in everyone’s life.
ubiquitous in 3D games, interior design and various VR/AR applications, e.g.
VR therapy, military and medical training, crime scene investigation [5] (see
Figure 1 for some examples). Especially, with the fast development of head-
mounted display (HMD) devices like Oculus, HTC Vive and Google Cardboard,
virtual reality is becoming more and more popular in recent years. To create a

∗Technical Report, School of Computing Science, Simon Fraser University, SFU-CMPT

TR 2017-55-3

1

 
 
 
 
 
 
better virtual experience, realistic 3D indoor scenes are needed to provide living
environments for the virtual characters.

Currently, most existing 3D indoor scenes in online repositories are manually
created by general 3D modeling softwares such as 3DS Max and SketchUp, or
professional indoor scene modeling tools, e.g., Autodesk Homestyler [6], Sweet
Home 3D [4], Planner 5D [3]. Creating a scene using these tools often requires
proﬁcient 3D designing and modeling skills, while designing detailed and complex
3D indoor scenes requires even more expertise and is very time-consuming.

In the research community, many eﬀorts have been made for 3D indoor scene
processing, from semantic modeling of indoor environments using captured data,
analysis of existing 3D scenes, to synthesizing novel scenes by data-driven sys-
tems. The topics cover problems in a wide range of domains, e.g., computer
In this report, we mainly focus on the recent
graphics, vision and robotics.
research progress in computer graphics on geometry, structure and semantic
analysis of 3D indoor data and diﬀerent modeling techniques for creating plau-
sible and realistic indoor scenes. In each topic, we explore the application of the
data-driven approach which has been widely studied for shape analysis [61], in
context of indoor scene processing.

One way for generating indoor scenes is to capture the real world indoor
environments and convert them into 3D scenes. There has been a great deal of
work in computer vision on 3D indoor scene reconstruction [51, 30], which takes
as input one or more images or depth scans and aims to reproduce the captured
scene geometry. Recent works in graphics [44, 29, 54, 11, 34, 63] are taking a
data-driven and model-based perspective to further understand the semantics
of the reconstructed data and produce a semantic modeling of the scene by
replacing the recognized objects with 3D CAD models from the databases.

In addition to reconstructing scenes from real world data, re-using existing
scenes from the scene databases, e.g., 3D Warehouse [1], is also a way to create
and synthesize novel and complex 3D indoor scenes. As the scene databases
usually contain a large number of scenes, eﬃcient scene retrieval and database
exploration techniques [19, 62] are proposed to help a user quickly ﬁnd the scenes
that may be useful. Moreover, to generate plausible scenes, object occurrences

Figure 1: Examples of 3D indoor scenes: (a) a living room from game GTA V
c(cid:13)Rockstar Games; (b) Jerry’s Place modeled for virtual reality [2]; (c) a studio
created for interior design [3].

2

Figure 2: Topics covered in this report.

and relationships must be satisﬁed, e.g., a monitor is normally placed on a desk,
and such knowledge could also be extracted from the databases. Scene analysis
aims to process the existing 3D scenes in the databases and learn the knowledge
and constraints that could be used for arranging objects in new scenes.

With prior knowledge learned from scene databases and other sources, data-
driven scene modeling often starts from some user provided inspirations, which
could be text [13, 52, 10], sketches [56, 33, 65] and images [38, 26], and gener-
ates 3D scenes based on the input. To achieve the goal of obtaining complex
indoor scenes, 3D exemplars are also used for scene synthesis [18]. Recently,
human-centric scene modeling which has been studied in vision and robotics, is
introduced to graphics for functional scene synthesis [17] and progressive scene
evolution by human actions [40].

In the rest of this survey, we ﬁrst review works on understanding and se-
mantic modeling of scenes from captured 3D data of the real world (Figure 2
left). Then, we focus on the virtual scenes composed of 3D CAD models and
study methods for 3D scene analysis and processing (Figure 2 middle). After
that, we survey various modeling paradigms for creating 3D indoor scenes and
investigate human-centric scene analysis and modeling (Figure 2 right). At last,
we discuss open problems in indoor scene processing that might bring interests
to graphics and all related communities.

2 Understanding and Semantic Modeling from

Captured 3D Data

Creating 3D indoor scenes as the digital replica of our living environments is a
common interest of computer vision and graphics. There has been a great deal of
work on 3D indoor scene reconstruction which takes as input one or more images
or depth scans and aims to reproduce the captured scene geometry [51, 30].
Although real-time reconstruction with ﬁne-grained details has been achieved for
large scale environments [45, 46], the reconstructed scene is usually represented
as a single 3D model without semantic object segmentation.

Object recognition from captured 3D data is the main task for 3D scene
understanding. Given some depth scans or a reconstruction of an indoor envi-

3

ronment, scene understanding is to identify and segment the objects from the
background, classify them into semantic categories with prior knowledge learned
from database or cluster similar objects into groups in the unsupervised case.
One direct application of scene understanding is semantic modeling, which con-
verts the scanned scene into a 3D scene composed of 3D CAD models. In the
modeling process, for each recognized object, a 3D model is retrieved from the
model database based on the object’s semantic category and geometry features
observed from the corresponding object segmentation. Then the retrieved mod-
els are transformed and placed into the scene, yielding a full 3D scene that has
the same semantic objects and the same arrangements as the input capture.

In this chapter, we survey recent works that use model-based method as well
as unsupervised approach for 3D scene understanding and semantic modeling.
Then we study online scene modeling which identiﬁes objects during the real-
time scene reconstruction process.

2.1 Model-based Scene Understanding and Semantic Mod-

eling

Missing data, scanning noise and lack of prior knowledge place signiﬁcant chal-
lenges for 3D scene understanding. Since indoor scenes often contain a large
number of objects which are arranged in a complex manner, scans of cluttered
scenes may have large portion of missing data due to the object occlusion, e.g.,
chairs pulled underneath the desks. Also, some objects or their parts are dif-
ﬁcult to capture, e.g., small items on the desk, legs of table and object parts
made with glass. Noises and missing data are produced because of the scan-
ner’s resolution, specular reﬂection from the environment lighting, and the thin
structure of object’s geometry. Even with a well-captured scene, object recog-
nition may still be diﬃcult as indoor objects usually have large geometrically
and pose variations, and diﬀerent deformation and articulations, e.g., the book
and laptop are opened or closed. To address these problems, recent works take
a data-driven and model-based approach which learns the prior knowledge of
objects from the scene databases or 3D models and applies learned knowledge
for semantic scene understanding and modeling.

Figure 3: Indoor scene understanding by Search-Classify [44]. Given a raw
scan of a highly cluttered scene (left), the search-classify method is applied
to segment the scene into meaningful objects (middle), followed by a template
based deform-to-ﬁt reconstruction (right).

4

Nan et al. [44] propose a search and classify approach for object recognition
and reconstruction of scanned 3D indoor scenes (Figure 3). In this work, object
classiﬁcation and segmentation is argued as a chicken-egg problem, that object
classiﬁcation cannot be directly applied to the scene since object segmentation is
unavailable, while object segmentation is also challenging as the spatial relation-
ships between points and patches are neither complete nor reliable. Their key
idea to solve this problem is to interleave object segmentation and classiﬁcation
in an iterative manner.

The system ﬁrst trains a classiﬁer from a large set of 3D object scans for
recognition of several speciﬁc object classes, e.g., chair, table, cabinet, monitor.
Given a raw scan of highly cluttered scene, the algorithm ﬁrst over-segments
the scene into piecewise smooth patches. Then, a search-classify process is per-
formed by iteratively accumulating patches that form regions with high classiﬁ-
cation likelihood, until the whole scene is classiﬁed into meaningful objects and
outliers. To solve the ambiguous cases in classiﬁcation and remove the outliers,
a deform-to-ﬁt step is applied to reinforce the classiﬁcation by deforming tem-
plates to ﬁt the classiﬁed point cloud and selecting the best matching template.
The output is a consistent scene understanding and an approximate reconstruc-
tion which conveys the general object arrangement and inter-relationships as
the input scan.

The work of Kim et al. [29] consider both the low quality of data and object
articulation when acquiring and understanding large indoor environments. With
focus on interiors of oﬃce buildings or auditoriums, this paper addresses the
problem of object recognition by exploiting three observations: indoor objects
in such environments often come from a small number of categories (e.g., wall,
ﬂoor, chair, table, computer) and repeat many times; these objects usually
consist of rigid parts, while the variability and articulation are limited and low-
dimensional; mutual relationships among the basic objects satisfy strong priors,
e.g., a monitor rests on the table.

A pipeline with two phases is presented: in a learning phrase, each object of
interest is scanned for a few times (typically 5 - 10 scans across diﬀerent poses)
to construct primitive-based 3D models and recover their modes of variation;
in a recognition phase, from a single-view scan, objects with diﬀerent poses are
segmented and classiﬁed based on the low complexity models generated in the
learning phase as well as the inter- and intra-object relationships. By requir-
ing additional acquisition of more object models and their variability modes in
the learning phase, the pipeline could be extended to the understanding and
modeling of more complex indoor environments.

Targeting at semantic modeling of indoor scenes with a consumer-level RGB-
D camera, Shao et al. [54] present an interactive system that takes one or a few
sparsely captured RGB-D images and produce a 3D scene with semantic objects
and their layouts matched to the input (Figure 4). First, the user captured RGB-
D indoor images are automatically segmented into a set of regions with semantic
labels. If the segmentation is not satisfactory, the user can draw some strokes to
guide the algorithm to achieve better results. After the segmentation is ﬁnished,
the depth data of each semantic region is used to retrieve a matching 3D model

5

Figure 4: Pipeline of interactive semantic scene modeling [54].

from a database. Each model is then transformed according to the image depth
to yield the scene. By using multiple images sharing suﬃcient overlaps between
successively captures, medium or large scale scenes can be modeled by unifying
3D models built for each image.

To reduce the user interaction in [54], Chen et al. [11] exploit contextual
relationships learned from a 3D scene database to assist the object segmen-
tation and classiﬁcation for automatic semantic modeling. As indoor objects
normally have strong contextual relationships, e.g., object co-occurrences and
spatial arrangements, using context could help remove uncertainty due to noise
and missing data by seeking semantically compatible models when scene under-
standing. In [11], contextual relationships are ﬁrst extracted from a 3D scene
database collected from 3D Warehouse. Then a context-based two-layer classi-
ﬁer is trained and used for scene modeling: the ﬁrst-layer maps point clouds to
semantic objects and their parts and the second layer ﬁnds the best matched
3D model with the assigned semantic label. To reﬁne the modeling result, ob-
ject contours extracted from the RGB images of the input are further used to
recover the small objects and missing parts.

Using knowledge learned from model or scene databases, model-based scene
understanding is able to recognize objects from low-quality captures of clut-
tered indoor scenes and produce a semantic scene modeling with only one or a
few views of the environment. While current model-based methods only focus
on a few object categories that frequently appear in the indoor environments,
with more data and a more complicated learning stage, 3D scenes with more
complexity could be modeled from the real world.

2.2 Unsupervised Scene Understanding and Modeling

Unlike the model-based methods which require a training phase to learn the
3D geometry of interested objects, unsupervised methods [28, 42, 53] have been
studied for scene understanding and modeling recently. Without the knowledge

6

Figure 5: Unsupervised object detection by [42]. From a set of indoor scans
(left), objects (shown in color on the right) are extracted by clustering the
planar patches ﬁtted to the point clouds.

extracted from the database, such methods use other cues, e.g., the intrinsic
geometry properties and the repetition of indoor objects, or the physical stability
of object arrangements, to identify the objects from the indoor scans.

Karpathy et al. [28] present a method for discovering objects from recon-
structed 3D meshes of indoor environments. The key observation is certain
geometric properties are useful in discovering indoor objects, even when no se-
mantic label is provided. Given a scene reconstruction using existing tools,
e.g., KinectFusion [45], the algorithm ﬁrst decomposes the scene into a set of
candidate mesh segments and then ranks each segment according to its object-
ness – a quality deﬁned based on the intrinsic shape measures (e.g., symmetry,
smoothness, local and global convexity). The output is a set of ranked object
hypotheses which could be used for suggestion of object bounding boxes and
reduce the time-consuming object labeling process in 3D scenes.

Repetition is another cue for unsupervised object detection. Mattausch et
al. [42] present an algorithm to automatically segment a set of indoor scenes
by detecting repeated objects (Figure 5). The key idea is to use the similari-
ties within scenes to segment scans of building interiors into clusters of similar
objects, and segment individual objects within each cluster. Point clouds of
the input scans are ﬁrst converted into a collection of planar patches. A patch
similarity measure based on shape descriptors and spatial conﬁguration of neigh-
boring patches is proposed and used for patch clustering. In each scene, objects
are extracted by considering the proximity as well as the separation between the
clustered patches. Only using planar patch for clustering, it is diﬃcult for [42]
to model small objects with many planar regions, like keyboards or desk lamps.
Besides geometric features, analysis of physical stability is explored in Shao
et al. [53] for scene understanding (Figure 6). To address the problem of missing
data from the incomplete scans, this work abstracts indoor environments as col-
lections of cuboids (oriented boxes) and hallucinates geometry in the occluded
regions by globally analyzing the physical stability of the resultant arrange-
ments of the cuboid. The algorithm starts by creating a set of initial cuboids
from an incomplete 3D point cloud: the points are clustered using a connected
component analysis based on spatial proximity, and ﬁtted into a set of cuboids

7

Figure 6: Stability-based scene understanding in [53]. Starting from a heav-
ily occluded single view RGB-D image (left), a coarse scene structure as an
arrangement of cuboids along with their inter-cuboid relations (middle) is ex-
tracted using physical stability analysis, and then used for scene understanding
and completion (right).

in a greedy manner. Next, the initial cuboids are extended to the occluded
regions with consideration of the physical stability of the arrangements, which
is measured similarly as in [59]. The covered cuboid-based structure is then
used for structure-guided completion by registering a good-quality scan of an
object to the partial scans. Semantic modeling without relying on the semantic
object labels is also enabled by retrieving the database models using the cuboid
structures.

Unsupervised methods provide a new perspective for scene understanding
and semantic modeling. However, as the key assumptions, e.g., planar patches,
cuboid structures are only applicable for a limited set of indoor objects, current
works can only handle a few indoor scene types. Possible solutions to this
problem include studying more completed shape features as in [28] or involving
human or robot interactions for scene understanding [69, 60].

2.3 Online Scene Reconstruction with Object Recognition

Recent works have investigated scene understanding and modeling during the
process of online scene scanning. Similar to previous works which perform oﬄine
analysis [44, 29, 54, 11, 42], object retrieval from shape databases [34] and struc-
ture analysis [69] are introduced in the setting of real-time scene reconstruction.
[60, 63] address the problem of autonomous object-level scene recon-
Moreover,
struction by a robot, reliving human from the laborious task of detailed scene
scanning.

Instead of aiming for reconstructing the accurate scene geometry, Li et al. [34]
turn the real-time scene reconstruction into a object retrieval problem (Fig-
ure 7). The goal is to recognize objects directly from 3D scanning data and
replace them with 3D models retrieved from shape databases at runtime to
achieve a complete and detailed scene reconstruction. The main challenge for
shape retrieval and registration in the context of 3D scanning is the partial and
noisy data requires a robust partial matching that ﬁnds a 3D model based on
the scan from only a partial view of the object.

To solve this problem, a novel point-based 3D shape descriptor that combines
local information and global geometric context is deﬁned. In the pre-processing,

8

Figure 7: Pipeline of object retrieval for real-time 3D reconstruction [34].

each database model is converted into a point cloud and the point descriptors
are computed for a set key points which are detected by a combined 3D/2D
corner detector. These descriptors are then arranged into constellations of key
points and form the shape descriptor for each model. At runtime, from the real-
time volumetric fusion data [46], key points and the corresponding descriptors
are computed and then used for searching key point constellations of database
models. The matchings also produce transformations for registering the models
to the scene. In the end, a semantic modeling of the scanned environment is
obtained.

Similar to [42], cues of planar regions and non-planar objects are utilized
in [69] for real-time scene reconstruction. Based on the observation that indoor
environments usually consist of many planner surfaces (e.g., ﬂoors and walls)
and isolated objects (e.g., chairs and computers), Zhang et al. [69] perform an
online structure analysis on the scanned geometry to extract such planes and
objects to form a structured scene. The input of the system is the captured
depth maps from voxel hashing based scene reconstruction [46]. A plane/object
labeling step is followed to achieve segmentation of planes and objects. Through
plane-based structure analysis, plane and object geometries are reﬁned to pro-
duce a ﬁnal reconstruction result. To reduce the time spent for repeat scanning
of nearly identical objects, e.g., chairs of diﬀerent heights, duplicate objects are
also detected during online analysis. The user is allowed to interact with the
system to decide whether to use the mesh of an already extracted object or keep

9

Figure 8: An overview of robot-operated autoscanning for coupled scene recon-
struction and object analysis [60].

scanning if she wants to preserve the subtle diﬀerences between objects.

As detailed scene scanning by human is laborious, especially for large in-
door scenes containing numerous objects, Xu et al. [60] propose a framework for
robot-operated autonomous scene scanning or autoscanning (Figure 8). The au-
toscanning and reconstruction is object-aware, guided by object-centric analysis
which incorporates online learning to the task of object segmentation.

The basic system setup is a mobile robot holding a depth camera perform-
ing real-time scene reconstruction [46]. With the current reconstruction, the
robot executes an iterative analyze-and-validate algorithm: object analysis is
performed to segment the scene into a set of hypothetical objects; then the
joint uncertainty in both object-level segmentation and object-wise reconstruc-
tion is estimated and used to guide the robot in validating the reconstruction
through physical push and scanning reﬁnement. The gained knowledge about
segmentation as well as the newly acquired depth data is incorporated into cur-
rent reconstruction, which would in turn improve the analysis in the next round.
This interleaving process repeats until the overall uncertainty does not decrease
signiﬁcantly. The output of the system is a reconstructed scene with both ob-
ject extraction and object-wise geometry ﬁdelity. Due to the involvement of
physical push from the robot, the proposed method is invasive and it does not
reconstruct the original scene with exact object positions. This is arguably ac-
ceptable since exact positioning of movable objects is usually quite casual and
accidental in the real-life indoor scenes.

In the follow-up work of [63], the problem of autonomously exploring un-
known objects in a scene by robot-operated consecutive depth acquisitions is
addressed (Figure 9). The goal is to reconstruct the scene while online identi-

Figure 9: Autonomous active object identiﬁcation and scene modeling [63].

10

fying the objects from a large collection of 3D shapes, with multi-view depth
observations. Autonomous object identiﬁcation from indoor scans is challeng-
ing because of two facts: on one hand, unlike coarse-level shape classiﬁcation,
e.g., discriminating a chair from a bicycle for which a single view would suﬃce,
ﬁne-grained object identiﬁcation over a large shape collection requires obser-
vations from multiple views; on the other hand, since the object is unknown,
planning the views to best discriminate it with other shapes while considering
robot movement cost and recognition eﬃciency is diﬃcult.

To solve the coupled object recognition and view planning problem, a 3D
Attention Model is proposed to select the next-best-views (NBVs) for depth
acquisition targeting at an object of interest and conduct part-based recognition
to tolerate occlusion. Given a series of progressively acquired RGB-D images,
the task involves ﬁrst extracting potential object, and then identifying for each
object the most similar 3D shape from a database based on the attention model.
The retrieved 3D model is inserted into the scene, to replace the object scan,
thus progressively constructing a 3D scene model.

3 Analysis and Characterization of 3D Indoor

Scenes

In addition to reconstructing scenes from scanned data of real world environ-
ments, indoor scene creation by modeling with existing 3D scenes is also widely
studied in computer graphics community. 3D scenes in current online databases,
e.g., 3D Warehouse [1], provide a valuable data source for data-driven scene pro-
cessing. To generate plausible scenes, 3D scene analysis is often executed to learn
the object occurrences and relationships from database scenes as prior knowl-
edge for object placement. Geometry and structure analysis of 3D scenes also
leads to a better understanding of the scene data and enables applications such
as scene retrieval [19, 62] and intelligent scene editing [55]. Furthermore, co-
analysis of a collection of scenes allows to eﬃcient organization and exploration
of large scene databases [62], as well as creation of consistent scene representa-
tions [38] for future tasks.

In this chapter, we ﬁrst introduce a representative graph-based scene repre-
sentation which encode structural relationships between objects [19]. Next, we
study scene representations that could encode complex object relationships and
their applications in 3D scene analysis [71, 55]. In the end, we survey techniques
for co-analysis and processing of a collection of scenes [62, 36].

3.1 Structural Scene Representation

The work of Fisher et al. [19] takes a 3D scene and transforms it into a rela-
tionship graph, a representation which encodes structural relationships between
objects, such as support, contact or enclosure. The nodes of a relationship
graph correspond to meaningful objects in the scene and the edges represent

11

Figure 10: Graph-based scene representation and comparision in Fisher et
al. [18]: a scene and its representation as a relationship graph (left); comparisons
of two graph walks (right).

the relationship between these objects (Figure 10 left). To build the relation-
ship graph, the algorithm starts with an initial scene graph associated with the
scene downloaded from 3D Warehouse. The initial graph nodes are consolidated
by human to represent meaningful objects; relationship edges between two ob-
jects are created by geometric tests, e.g., whether two meshes of the objects are
contacted.

Representing scenes as relationship graphs greatly facilitates comparing scenes
and parts of scenes. A graph kernel is deﬁned for comparison of two relation-
ship graphs: similarities between the graph nodes and edges are computed and
accumulated to produce an overall similarity of two graphs (Figure 10 right).
By considering the geometry features and semantic labels of objects encoded in
the nodes and structural relationships encoded in the edges, the graph kernel
works well for characterizing 3D scenes and largely improves the performance
of scene retrieval.

3.2 Characterization of Complex Relationships

To further represent more complex relationships between objects, Zhao et al. [71]
propose a new relationship descriptor, Interaction Bisector Surface (IBS), which
describes both topological relationships such as whether an object is wrapped
in, linked to or tangled with others, as well as geometric relationships such as the
distance between objects (Figure 11). Inspired by the application of Voronoi
diagram in indexing and recognizing the relationships of proteins in the area of
biology, the IBS is deﬁned as the set of points that are equidistant from two
objects, which forms an approximation of the Voronoi diagram for objects in
the scene. By computing a topological feature set called the Betti numbers of
the IBS, relationships such as enclosures and windings can be detected. The
geometric relationships are analyzed using the shape of the IBS, the direction

12

Figure 11: Examples of IBS (in blue) of two objects [71].

of its normal vectors, and the distance between the objects and the IBS.

Automatic construction of scene hierarchies is studied by ﬁrst using IBS to
deﬁne a closeness-metric between objects and then grouping individual objects
or object groups to form a hierarchy. As IBS focuses on modeling the inter-
action between objects, spatial relationships are characterized only based on
the topological and geometric features of the IBS, while object labels are not
needed as in [19]. Therefore, content-based relationship retrieval is enabled by
computing the similarity of interactions based on the IBS features (Figure 12).

Figure 12: Content-based relationship retrieval based on IBS [71]. In the query
scene (left), the object with a bounding box is the query object; the resulting
scenes (right) are ordered by the similarity and the red object is the retrieved
object with a similar context to the query object.

For plausible indoor scenes, the object placements and their spatial relation-
ships are actually derived from functionalities of the objects. For example, chairs
are located near tables, lamps are on top of desks, books are organized verti-
cally on shelves. Functionality analysis of 3D shapes has been studied in [24, 23]
for characterizing an object by object-to-object interactions. In the context of
3D scenes, Sharf et al. [55] relate object functionalities to a set of predominant
motions that can be performed by the object or its subparts. These motions are
denoted as mobility, which deﬁnes the speciﬁc degrees of freedom, types, axes
and limits of motions (Figure 13 left). An object’s mobility is computed by
analyzing its spatial arrangement, repetitions and relations with other objects
and storing it in a mobility-tree, which is a high-level functional representation
of complex 3D indoor scenes.

Given a static 3D scene, the algorithm segments the scene into object parts
and subparts based on their support relations and constructs a support tree
hierarchy. The support relations in the tree infer certain degree of freedom for

13

each supported node with respect to its supporting node (e.g., apples translat-
ing on a table). Repeated instances of the same objects and parts in the scene
are detected and their pose diﬀerences are analyzed to obtain motion axes and
limits. A set of sophisticated controllers which allow semantical editing opera-
tions are deﬁned based on the detected mobilities and used for high-level scene
manipulation, such as aligning, reorganizing and deforming mutiple objects or
subparts simultaneously (Figure 13 right).

Figure 13: Mobility analysis of 3D scenes [55]: mobilities detected in a 3D
scene (left) and editing result (right) using the mobility-based controllers (green
arrows in the left ﬁgure).

3.3 Analysis of Scene Collections

Scene collections provide more information about objects and their structural
relationships than a single scene. However, analyzing complex and heteroge-
neous scenes in a collection is diﬃcult without references to certain points of
attention or focus. Xu et al. [62] introduce focal points for characterizing, com-
paring, and organizing collections of complex and heterogeneous data and apply
the concepts and algorithms developed to collections of 3D indoor scenes. Focal
points are deﬁned as representative substructures in a scene collection, by which
diﬀerent similarity distances between scenes could be computed (Figure 14).

Figure 14: Focal-centric scene similarity: scene comparisons may yield diﬀerent
similarity distances (left) depending on the focal points (sub-scenes in color) [62].

To organize a heterogeneous scene collection, the scenes are clustered based
on a set of extracted focal points: scenes in a cluster are closely connected when

14

Figure 15: Overview of the focal-driven scene co-analysis [62].

viewed from the perspective of the representative focal point of that cluster.
For a focal point to be representative, it must occur frequently in the cluster of
scenes and also induce a compact cluster. To solve the coupled problems of focal
point extraction and scene clustering, a co-analysis algorithm which interleaves
frequent pattern mining and subspace clustering is presented to extract a set of
contextual focal points which guide the clustering of the scene collection (Fig-
ure 15). In addition to scene organization, applications of the focal-driven scene
co-analysis include focal-centric scene comparison and retrieval, and exploration
of a heterogeneous scene collection through focal points.

Graph-based scene representation plays an important role in scene retrieval [19]

and scene organization [62]. Although most of the scenes downloaded from on-
line databases, e.g., 3D Warehouse, are accompanied with scene graphs which
are generated during the scene design process, the graphs usually lack consis-
tent and semantic object segmentations and category labels. Pre-processing
to consolidate the initial scene graphs are performed in [19] so that the graph
nodes represent meaningful objects, but consistent scene hierarchies (e.g., func-
tional groups) are not guaranteed since such information must be inferred from
multiple scenes.

Liu et al. [36] develop algorithms that build a consistent representation for
the hierarchical decomposition of a scene into semantic components (Figure 16).
Given a collection of consistently-annotated scene graphs representing a cate-
gory of scenes (e.g., bedroom, library, classroom, etc.) as the training set, a

Figure 16: Creating consistent scene graphs using a probabilistic grammar [62].
An input scene with over-segmentation is parsed into a consistent hierarchy
capturing semantic and functional groups (right) as well as semantic object
segmentations and labeling (middle).

15

probabilistic hierarchical grammar that captures the scene structure is learned.
Next, the learned grammar is used to hierarchically segment and label novel
scenes and create consistent scene graphs. The resultant representation not
only segments scenes into objects with semantic classes, but also establishes
functional roles and relationship of objects (e.g., dining table, study table, table-
and -chairs) which could be used for functional scene understanding.

4 Modeling and Synthesis of 3D Indoor Envi-

ronments

With widely applications in 3D games, interior design and VR/AR, there is
an increasing demand for 3D indoor scenes, especially those with complex ob-
ject composition and arrangements. However, creating 3D scenes is diﬃcult for
novice users and designing of a detailed and realistic scene is time-consuming
even for a professional artist. To solve the bottleneck of content-creation for
indoor scenes, many eﬀorts have been made in the graphics and vision com-
munities to develop intelligent tools and methods for 3D scene modeling and
synthesis.

To generate a scene, two questions usually need to be answered: what objects
and how many of them should appear in the scene; where an object should be
placed in the scene. Such knowledge could be extracted from various existing
scene data [18, 57, 35, 58], thus enables data-driven 3D scene generation.

When learning and modeling objects and their relationships, one key con-
cept is the context, which depicts the surrounding environment of an object in
the scene. The context provides rich information about how an object is in-
teracting with its neighbors and could be used for inferring the occurrence and
arrangement of the object. Context-based modeling is explored for interactive
scene modeling [68, 48] as well as automatic scene synthesis [18, 70]. More re-
cently, human-object context which has been studied in computer vision and
robotics for human-centric scene understanding is introduced to graphics for
human-centric 3D scene modeling.

In this chapter, we ﬁrst review suggestive tools developed for interactive
scene modeling [16, 68, 48]. Next, we study diﬀerent modeling techniques for
creating 3D scenes based on multitude inspirations such as text [10, 7], im-
ages [38, 26] and 3D scene exemplars [18]. Finally, we introduce human-centric
3D scene modeling which exploits the human-object context for scene analy-
sis [49] and synthesis [17, 40].

4.1 Suggestive Scene Modeling

Interactive and user-centric tools for 3D scene modeling are available online,
e.g., Autodesk Homestyler [6], Sweet Home 3D [4], Planner 5D [3]. The use
of such tools requires advanced modeling skills and the modeling time is often
quite long. In research community, early work by Xu et al. [64] used a set of
intuitive placements constraints such as non-interpenetration of objects, object

16

Figure 17: Scene modeling using a context-based search [16]: a user places the
blue box in the scene and asks for models that belong at this location (left); the
system returns models from database that match the provided neighborhood
(middle); the user selects a model from the list and it is inserted into the scene
(right).

stability to allow the simultaneous manipulation of a large number of objects.
Recent works have explored the interactive context-based model suggestion [16,
68, 48], by which scene modeling could be simpliﬁed as a set of point-and-click
operations [48]: a user just needs to specify a region in a scene and select an
object from a list of candidates which are retrieved based on the current context
of the scene; the object is then placed and oriented in the scene automatically.
Traditional ways of adding an object into a scene include ﬁrst obtaining a
3D model of the object using keyword-based search or selection from a hierar-
chical list which organizes objects into semantic categories, and then inserting
the model into the scene. In this process, the tasks of 3D model search and
scene modeling are actually decoupled. The work of Fisher and Hanrahan [16]
develops a context-based 3D model search engine, which changed the order of
scene modeling operations from ﬁrst searching and then placing, to ﬁrst lo-
cating and then searching (Figure 17). The context search uses a data-driven
approach, learning object co-occurrences and their spatial relationships from
existing scenes. Given the query box where the user wants to insert a new ob-
ject, the algorithm ranks each object in the database according to how well it
ﬁts to the box as well as the its relationships to the context objects. In Fisher
et al. [19], context-based model search is also achieved using graph kernel and
the performance is improved since more semantic and structural relationships
between objects are considered.

Instead of focusing on model retrieval, interactive scene modeling systems
have been proposed in [68, 48] (Figure 18). Yu et al. [68] introduce the Clut-
terPalette, an interactive tool for detailing indoor scenes with small-scale items
which are critical but often missing in existing 3D scenes. When a user points
to a location in the scene, the ClutterPalette suggests detail items for that loca-
tion. In order to present appropriate suggestions, the Clutterpalette is trained
on NYU Depth Dataset [57], a dataset of RGB-D images of real-world scenes,
annotated with semantic objects and their support relations. Co-occurrences of
objects are extracted from the dataset and used to provide suggestions based
on objects that have already been added into the scene. The recent system

17

Figure 18: Suggestive scene modeling interface of ClutterPalette [68] and Sce-
neSuggest [48].

SceneSuggest presented by Savva et al. [48] improves ClutterPalette by learn-
ing continuous distributions of object position, orientation from existing 3D
scenes [18] and combining the priors with the context of a user speciﬁed region
to suggest a list of relevant 3D models. Using more accurate relative distances
and orientations extracted from synthetic 3D data, SceneSuggest is able to place
and orient objects automatically rather than manual adjustment in [16, 68].

4.2 Scene Modeling from X

Data-driven scene modeling or reconstruction from X has gained much inter-
est lately where X could be a sketch [65], a photograph [38, 26], or some text
descriptions [10, 7]. Semantic modeling from captured 3D data reviewed in
Chapter 2 can also be classiﬁed into this category. In these cases, X provides in-
spirations and a target for scene modeling. The objects and their arrangements
are inferred from X to guide the retrieval and placement of suitable 3D objects
from a model repository.

The availability of large collections of 3D models (e.g., 3D Warehouse) to-
gether with various shape retrieval techniques oﬀers a great opportunity for easy
composition of new 3D scenes or models by properly recombining the existing
models or their parts. Sketch-based user interface is commonly adopted for this
task mainly due to its simplicity, intuitiveness, and ease of use [15]. Early works
about sketch-based scene modeling [56, 33] typically repeat the following pro-
cess for individual objects one by one: ﬁrst input a 2D sketch of an object, then
retrieve and place a 3D model that best matches the input sketch. Focusing on
joint processing of a set of sketched objects, Xu et al. [65] present Sketch2Scene,
a framework that automatically turns a sketch inferring multiple scene objects
to semantically valid, well arranged scenes of 3D models (Figure 19). Taking
a set of segmented sketches as input, the system [65] performs co-retrieval and
co-placement of relevant 3D models enabled by structural groups, a compact
summarization of reliable relationships among objects in a large database of

18

Figure 19: Pipeline of Sketch2Scene [65]. The system pre-processes a large
database of well-constructed 3D scenes to extract a small set of structural
groups, which are used at runtime to automatically convert input segmented
sketches to a desired scene.

well-constructed 3D scenes. Constraints from the input sketches as well as the
structural groups are combined together to produce 3D scenes with no user
intervention.

Comparing to sketches, 2D images and photographs of indoor scenes contain
more rich object compositions which could inspire the 3D scene modeling or re-
construction. There are several problems for 3D indoor scene modeling from a
single image: object detection and segmentation from cluttered indoor environ-
ments; 3D model retrieval and alignment based on an incomplete, single-view
image region; 3D recovery of the room geometry and structure. With the ad-
vancement of computer vision algorithms for these problems, 2D image to scene
generation is tackled in [38, 26] recently. Given a single 2D image depicting
an indoor scene as input, Liu et al. [38] reconstruct a 3D scene in two stages:
image analysis which obtains object segmentations and their 3D location us-
ing [32]; 3D model retrieval based on matching the line drawings extracted from
2D objects and 3D models. As the object segmentation and 3D recovery in [38]
are based on a set of limited assumptions, e.g., easy-to-segment objects, regular
room structure, the system can only reconstruct simple 3D scenes (sofa, chair,
coﬀee table etc.) from clean indoor images.

Using the state-of-the-art object recognition and scene understanding al-
gorithms, Izadinia et al. [26] present IM2CAD which automatically produces
high-quality scene modeling results on challenging photos from interior home
design websites(Figure 20). Instead of using handcrafted features as in [38], the
IM2CAD leverages deep features trained by convolutional neural nets (CNNs) [31]
to reliably match between photographs and CAD renderings extracted from

19

Figure 20: Overview of IM2CAD [26]: an input image (left) is processed through
a series of steps to produce a scene CAD model (bottom right).

ShapeNet [8]. The system iteratively optimizes the placement and scales of
objects to best align scene renderings to the input photo, operating jointly on
the full scene at once, and accounting for inter-object occlusions. Although
IM2CAD obtains signiﬁcant improvements in the 3D room layout estimation as
well as 3D object location from single RGB images, the resulting scenes are still
too simple that only large furnitures, walls and windows could be modeled.

Natural language is arguably the most accessible input for content creation.
Generating 3D scenes from text has been a long and on-going pursuit since
the pioneering work on WordsEye [13]. WordsEye, along with other follow-
ups [52, 12] is capable of generating 3D scenes directly from natural language
descriptions, but relies on manual mapping between explicit scene arrangement
languages and object placements in a scene, e.g., “the chair is three feet to
the north of the window”. A series of papers by Chang et al. [9, 10, 7] have
provided improvements over the early text-to-scene systems by utilizing spatial
knowledge, learned from 3D scene data, to better constrain scene generations
with unstated facts or common sense.

In the representative work of Chang et al. [10], the input text is ﬁrst parsed
into a scene template, a graph representation that captures semantics and spatial

Figure 21: Text-to-scene generation pipeline in Chang et al. [10]: the input
text is parsed into a scene template with implicit spatial constraints inferred
from learned priors; the template is then grounded to a geometric scene, by
instantiating and arranging 3D models into a ﬁnal 3D scene.

20

relations of a scene. To infer spatial knowledge that is often not expressed in
natural language, priors including object occurrence, static support relations
and relative positions of objects are learned from the 3D scene database [18]
and used for enriching the scene template with implicit constraints. The scene
template is then grounded into a geometric 3D scene by querying a 3D model
database and arranging the objects based on the constraints encoded in the
template and the spatial knowledge priors. Their latest SceneSeer system [7]
further extends the pineline in [10] with interactive text-based scene editing
operations, e.g., adding, removing, replacing objects, and mouse-based scene
manipulation to reﬁne a generated scene.

4.3 Furniture Layout Optimization

One line of work for 3D scene generation focuses on furniture layout optimiza-
tion [21, 43, 67] for a given room with a given set of furniture or objects. The
common problem is to automatically generate object arrangements that satisfy
a set of indoor scene layout constraints or rules.

Germer and Schwarz [21] arrange a room by letting each piece of furniture
act as an agent in a multi-agent system, following manually speciﬁed room se-
mantics and furniture layout rules. By using the scheme of procedural furniture
arrangements, the system of [21] is suitable for creating room interiors of com-
plex and interactive environments such as furnishing rooms of a building while
real-time walkthroughs.

Interactive furniture layout system in [43].

Figure 22:
In response to user
manipulation, the system suggests new arrangements that respect user-speciﬁed
constraints and follow interior design guidelines.

Merrell et al. [43] present an interactive furniture layout system that assists
users by suggesting furniture arrangements that are based on interior design
guidelines (Figure 22). The set of furniture layout guidelines such as circula-
tion, balance and alignment, are identiﬁed from interior design manuals and
consultation with professional designers. These guidelines are encoded as terms

21

in a density function and layout suggestions are generated by sampling this
function while respecting user’s constraints.

Similar to [43], the Make it Home system of Yu et al. [67] encodes spa-
tial relationships for furniture objects into a cost function and automatically
synthesizes furniture layouts by optimizing the function. The diﬀerence is the
spatial relationships of objects, such as relative distance and orientation as well
as support relations are learned from 3D scene exemplars instead of manual
speciﬁcation in [43]. Also, to make sure the generated furniture arrangements
are functional and realistic, factors including accessibility, visibility and path-
way connecting the doors are added to the cost function. As the search space
for optimizing the function is highly complex, simulated annealing is applied to
search for a good approximation to the global optimum, and realistic furniture
arrangements are produced as the results.

Comparing to generating layouts with ﬁxed objects instances, the automatic
open world layout synthesis is more appealing as the goal is to generate diverse
layouts with unspeciﬁed number of objects. Yeh et al. [66] use factor graphs, a
type of graphical model, to encode complex object relationships as constraints,
and propose a variant of Markove Chain Monte Carlo (MCMC) method to
sample the possible layouts. The algorithm succeeds at synthesizing interior
environments, such as coﬀee shops, with varying shapes and scales. However,
the resultant scenes are restricted with patterns that are only handedcrafted in
the code.

4.4

3D Scene Synthesis

In contrast to 3D scene modeling from observations, 3D scene synthesis aims
to generate novel scenes with plausible object compositions and arrangements.
Given only one or a few exemplars which could be 3D scenes or images, example-
based approaches [18, 41, 70] perform probabilistic reasoning from exemplars
and 3D scene databases to synthesize scenes that are similar to the input, but
with certain diversity (Figure 23). Recently, progressive scene synthesis [47] is
proposed to synthesize 3D scenes by inserting one or more objects progressively
into the scene.

The best known method for synthesizing realistic 3D scenes is the example-
based scene synthesis proposed by Fisher et al. [18]. Given a few user-provided
examples, the system can synthesize a diverse set of plausible new scenes by
learning from a 3D scene database. The main challenge for example-based syn-
thesis is generating a variety of results while retaining plausibility and similarity
to the examples. Two ways are exploited in [18] to improve the diversity of syn-
thesized scenes: ﬁrstly, extract contextual categories from the scene database by
using object neighborhoods in scenes to group together objects that are likely to
be considered interchangeable; secondly, treat the scene database as a prior over
scenes and train a probabilistic model on both the examples and relevant scenes
retrieved from the database using [19]. The probabilistic model consists of an
occurrence model, which speciﬁes what objects should appear in the generated
scenes, and an arrangement model, which speciﬁes where those objects should

22

Figure 23: Diﬀerent example-based scene synthesis approaches. Scenes with
similar object occurrences and relationships (left), arrangement style (middle),
and complex relationships (right) are synthesized based on the input exemplars.

be placed. Using the contextual categories and the mixed probabilistic model,
the algorithm successfully synthesizes scenes with a large variety of both objects
and arrangements.

Focusing on enriching scenes with more details, i.e. small objects on the
shelves, Majerowicz et al. [41] present an example-based method which automat-
ically populates empty shelf-like surfaces with diverse arrangements of artifacts
in a given style. Here, the style of an arrangement is deﬁned as a combination of
object-level measures, which capture local arrangement properties, such as the
percentage of instances of a particular object and the relative location of ob-
jects, and global measures, which compare high-level characteristics of the two
arrangements, such as density and symmetry. Given an annotated photograph
or a 3D model of an exemplar arrangement that reﬂects the desired context and
style, the algorithm learns the style from this exemplar, and generate diverse
arrangements by stochastic optimization.

Real world indoor scenes contain complex inter-object relations, e.g., one
object is “hooked on”, “surrounded by” or “tucked into” another object. To
generate scenes with such complex relations, Zhao et al. [70] take an example-
based approach to synthesize new scenes by replacing objects in the example
scene with database objects while preserving the original complex spatial rela-
tions in the example. The scene synthesis problem is modeled as a template
ﬁtting process, where a relationship template encoding rich spatial relationships
between objects is computed from an example scene and new scene variations
are synthesized by ﬁtting novel objects to the template. The relationship tem-
plate is deﬁned by combining the IBS [71] with a novel feature called the Space
Coverage Feature (SCF), which describes the spatial relations between points
in open space and surrounding objects. Given a relationship template extracted
from the example scene, novel objects are ﬁtted to the template by matching

23

the nearby open space to the features stored in the template to generate new
scenes.

Unlike the example-based methods which take a holistic view of scene gen-
eration by targeting overall similarity between the generated scene and the ex-
emplars, Sadeghipour et al. [47] propose the progressive scene synthesis which
inserts objects progressively into an initial scene based on probabilistic models
learned from a large-scale annotated RGB-D dataset, in particular, the SUN
RGB-D databset [58], which consists of more than 10,000 depth images of
real scenes. Similar to [18], the probabilistic models are also summarized as
a co-occurrence model and an arrangement model.
In addition to consider-
ing pairwise object relations, higher-oder relations including symmetry, distinct
orientations and proximity are learned from the database. The objects along
with their relations extracted from the database scenes are encoded in a factor
graph from which the new objects are sampled based on existing objects. By
progressively selecting and placing objects, the scene synthesis process attains
more local controllability and ensures global coherence and holistic plausibility
of the synthesized scenes.

4.5 Human-centric Scene Modeling

We live in a 3D world, performing activities and interacting with objects in the
It is easy for humans to understand the sur-
indoor environments everyday.
rounding scenes or arrange objects based on their functionality. However, it is
challenging for an agent, e.g., a robot, to automatically generate behaviors and
interact with the 3D environments since the robot lacks knowledge of the objects
as well as their functionalities. There has been a great deal of work in robotics
and computer vision on utilizing human-centric approaches in the scene anal-
ysis and modeling tasks, e.g., scene geometry estimation [20], object labeling
[27], robot placement [27], just to name a few. Recently, human-object context
are exploited in computer graphics for functional scene understanding [49]. For
scene generation, human actions or activities are used to guide the scene syn-
thesis from depth scans [17] or drive the evolution of object arrangements in the
scene [40]. By using a human-centric perspective, indoor scene modeling focuses
more on the functionality and plausibility of the results, making one step closer
to the generation of realistic scenes.

While a large amount of 3D scenes exist, the semantics and functionality
of the objects and scene regions are usually missing. The work of Savva et
al. [49] present a method to establish a correlation between the geometry and
the functionality of 3D environments. The idea is to learn the functionality or
aﬀordance of 3D scenes directly from observations of people interacting with real
environments captured by RGB-D sensors (Figure 24). By observing humans
performing diﬀerent actions, e.g., “use a desktop PC”, correlations between
human body poses and the surrounding scene geometry are extracted to train
action classiﬁers which can transfer interaction knowledge to unobserved scenes.
Given a new, unobserved scene, action maps which encode the probability of
speciﬁc actions taking place in the scene are predicted based on the classiﬁers

24

and the scene geometry.

Figure 24: Overview of SceneGrok [49]: the system starts by scanning the geom-
etry of real environments using RGB-D sensors (left); with the observations of
people interacting with the captured environments (mid-left), a classiﬁer which
transfers interaction knowledge to unobserved scenes is trained and used for pre-
dicting action maps, the likelihood of actions occurring in regions, in scanned
or virtual scenes (mid-right and right, respectively).

Figure 25: Diﬀerent types of annotated training data for learning action or ac-
tivity models. Object distributions from RGB-D scans (left), 3D scenes (middle)
and photos (right) are extracted to learn the probabilistic models of correspond-
ing actions, “sit on a chair and watch tv”, “prepare for bed”, “use computer on
desk while sitting” (from left to right).

Instead of learning the supervised action classiﬁers, recent works build prob-
abilistic models for human-object interaction, i.e., actions or activities, and learn
the parameters from multitude data sources, such as depth scans, 3D scenes and
photographs (Figure 25). The learned models are further utilized for generating
human-object interaction snapshots [50] or scene synthesis [17, 40].

Following their work for action-based scene understanding, Savva et al. [50]
learn a probabilistic model connecting human poses and arrangements of object
from real-world observations captured using the same framework as in [49].
The model is represented as a set of prototypical interaction graphs (PiGraphs)
(Figure 26 left), a human-centric representation capturing physical contact and

25

visual attention linkages between 3D geometry and human body parts. The
joint probability distributions over pose and object geometry encoded in the
PiGraphs are used to generate interaction snapshots (Figure 26 middle), which
are static depictions of human poses and relevant objects during human-object
interactions. The priors learned for PiGraphs also have applications such as
text2interaction (Figure 26 right).

Figure 26: The PiGraph representation (left) and its applications for generating
interaction snapshot (middle) and text2interaction (right) in [50].

Figure 27: Activity-centric scene synthesis [17]. Given a 3D scan of an envi-
ronment (left), a scene template which encodes where activities can occur and
contains a coarse geometric representation describing the general layout of ob-
jects is produced (middle); plausible scenes (right) are synthesized based on the
scene template.

Targeting at the generation of realistic 3D scenes, Fisher et al. [17] present
a novel method to synthesize scenes that allow the same activities as real en-
vironments captured through noisy and incomplete 3D scans (Figure 27). As
robust object detection and instance retrieval from low-quality depth data is
challenging [44, 29, 54, 11], the algorithm aims to model semantically-correct
rather than geometrically-accurate object arrangements. Based on the key in-
sight that many real-world environments are structured to facilitate speciﬁc
human activities, such as sleeping or eating, the system anchors an observed
scene in a set of activities and uses associated activity regions as focal points to

26

Figure 28: Action-driven scene evolution [40] alters an initial scene consisting
of a desk and a dining table. The initial scene and three intermediate evolution
snapshots (after 1, 4, and 30 actions, respectively) are shown (left) with zoom-
ins for better viewing on the right.

guide scene modeling.

Given a 3D scan of an environment as input, a scene template which captures
both the prominent geometric properties of the scan and the activities that are
likely to be performed in the environment is computed. In order to synthesize
object arrangements based on the activities predicted in the template, activity
models which encode distributions of objects involved in speciﬁc activities are
trained from an annotated 3D scene and model database in a pre-processing
step. In the synthesis step, objects are iteratively placed in the scene based on
the the geometric and activity properties speciﬁed in the template, while the
activity properties are measured by the learned activity models. The output
is a set of synthesized scenes which support the activities of the captured real
environments.

Real-world scenes are not static environments, instead they evolve over time,
driven by object movements resulting from human. Ma et al. [40] introduce a
framework for action-driven evolution of 3D indoor scenes, where the goal is
to simulate how scenes are progressively altered by human actions (Figure 28).
In this work, an action is a typical activity performed by humans in an indoor
environment and involves one or more human poses, objects and their spatial
conﬁgurations. These pieces of information are learned from annotated pho-
tographs [35] and summarized into a set of action models. Correlation between
the learned actions are analyzed to guide the construction of an action graph,
whose nodes correspond to actions and edges encode correlations between ac-
tions in the form of transitional probabilities. Sequences of actions are sampled
from the action graph, where each action triggers appropriate object placements
including relocating existing objects or inserting new objects related to the ac-
tion, leading to a continuous and progressive scene evolution. After applying a
few actions to the initial scene, realistic and messy 3D scenes can be generated.

5 Conclusion and Open Problems

This report surveys recent research progress on geometry, structure and seman-
tic analysis of 3D indoor data and diﬀerent modeling techniques for creating

27

plausible and realistic indoor scenes. Data-driven approaches which utilize ex-
isting large-scale scene data have produced promising results in scene under-
standing and modeling. However, the goal of generating truly realistic and
high-quality 3D indoor scenes that are readily usable for applications such as
3D games is still not achieved. More eﬀorts from related research communities,
e.g., computer graphics, vision and robotics, are needed to solve the various
remaining challenges in scene modeling. Here, three open problems that may
bring some interests and inspire future works for indoor scene processing are
listed as follows.

The key for data-driven approaches is the source of data, especially those
with rich and semantic annotations. Recent works in computer vision have
developed easy-to-use scene capture and annotation tools. Large-scale richly-
annotated scene databases such as SceneNN [25] and ScanNet [14], which contain
hundreds to thousands of scenes captured from real-world environments, are now
available. It remains a problem that how to utilize such data to improve the
generation of realistic and detailed 3D scenes.

Natural language is arguably the most accessible input for content creation.
To date, most text-to-scene systems [10, 12, 52] focus on mapping explicit scene
arrangement languages to placements of individual objects. Synthesizing com-
plex scenes by explicitly specifying each object is tedious due to the number of
objects and the inherent ambiguity of language. A more eﬃcient text-driven
scene synthesis system is needed for creating complex 3D scenes using compact
language commands.

Existing scene synthesis methods have taken account of spatial relation-
ships [18, 70], functionality or action constraints [17, 40] among objects dur-
ing the scene generation. The style compatibility among objects which is also
important for plausibility of scenes are not considered in the scene synthesis
task. Current research for style analysis mainly work on learning a style met-
ric [37, 39], identifying style-deﬁning elements [22], or synthesis of 3D model
Introducing style compatibility, e.g., geometry
geometry with a given style.
style of objects and layout style of scenes, to synthesis of complex scenes is a
promising future direction.

References

[1] 3D warehouse. https://3dwarehouse.sketchup.com/.

[Online; accessed

June-2017].

[2] Jerry’s Place. https://www.jerrysplacevr.com. [Online; accessed June-

2017].

[3] Planner 5D. https://planner5d.com. [Online; accessed June-2017].

[4] Sweet Home 3D. http://sweethome3d.com. [Online; accessed June-2017].

[5] Virtual Reality — Wikipedia, The Free Encyclopedia. https://en.
wikipedia.org/wiki/Virtual_reality. [Online; accessed June-2017].

28

[6] Autodesk. Homestyler. https://www.homestyler.com. [Online; accessed

June-2017].

[7] Angel X. Chang, Mihail Eric, Manolis Savva, and Christopher D. Man-
SceneSeer: 3D Scene Design with Natural Language. CoRR,

ning.
abs/1703.00050, 2017.

[8] Angel X. Chang, Thomas Funkhouser, Leonidas Guibas, Pat Hanrahan,
Qixing Huang, Zimo Li, Silvio Savarese, Manolis Savva, Shuran Song, Hao
Su, Jianxiong Xiao, Li Yi, and Fisher Yu. ShapeNet: An information-rich
3D model repository. 2015.

[9] Angel X. Chang, Manolis Savva, and Christopher D. Manning. Interactive
learning of spatial knowledge for text to 3D scene generation. In Proc. ACL
Workshop on Interactive Language Learning, Visualization, and Interfaces
(ILLVI), 2014.

[10] Angel X. Chang, Manolis Savva, and Christopher D. Manning. Learning
spatial knowledge for text to 3D scene generation. In Empirical Methods
in Natural Language Processing (EMNLP), 2014.

[11] Kang Chen, Yu-Kun Lai, Yu-Xin Wu, Ralph Martin, and Shi-Min Hu.
Automatic semantic modeling of indoor scenes from low-quality RGB-D
data using contextual information. ACM Trans. on Graph., 33(6):208:1–
12, 2014.

[12] Bob Coyne, Alex Klapheke, Masoud Rouhizadeh, Richard Sproat, and
Daniel Bauer. Annotation tools and knowledge representation for a Text-
To-Scene system. In COLING, pages 679–694, 2012.

[13] Bob Coyne and Richard Sproat. WordsEye: An automatic text-to-scene

conversion system. In Proc. of SIGGRAPH, pages 487–496, 2001.

[14] Angela Dai, Angel X. Chang, Manolis Savva, Maciej Halber, Thomas
Funkhouser, and Matthias Nießner. Scannet: Richly-annotated 3d recon-
structions of indoor scenes. In Proc. IEEE CVPR, 2017.

[15] Mathias Eitz, Ronald Richter, Tamy Boubekeur, Kristian Hildebrand, and
Marc Alexa. Sketch-based shape retrieval. ACM Trans. on Graph., 31(4),
2012.

[16] Matthew Fisher and Pat Hanrahan. Context-based search for 3d models.

ACM Trans. on Graph., 29(6), 2010.

[17] Matthew Fisher, Yangyan Li, Manolis Savva, Pat Hanrahan, and Matthias
Nießner. Activity-centric scene synthesis for functional 3D scene modeling.
ACM Trans. on Graph., 34(6):212:1–10, 2015.

[18] Matthew Fisher, Daniel Ritchie, Manolis Savva, Thomas Funkhouser, and
Pat Hanrahan. Example-based synthesis of 3D object arrangements. ACM
Trans. on Graph., 31(6):135:1–11, 2012.

29

[19] Matthew Fisher, Manolis Savva, and Pat Hanrahan. Characterizing struc-
tural relationships in scenes using graph kernels. ACM Trans. on Graph.,
30(4), 2011.

[20] David F. Fouhey, Vincent Delaitre, Abhinav Gupta, Alexei A. Efros, Ivan
Laptev, and Josef Sivic. People watching: Human actions as a cue for
single-view geometry. In Proc. ECCV, pages 732–745, 2012.

[21] T. Germer and M. Schwarz. Procedural arrangement of furniture for real-
time walkthroughs. Computer Graphics Forum, 28(8):2068–2078, 2009.

[22] Ruizhen Hu, Wenchao Li, Oliver van Kaick, Hui Huang, Melinos Averkiou,
Daniel Cohen-Or, and Hao Zhang. Co-locating style-deﬁning elements on
3d shapes. ACM Trans. on Graph., 36, 2017.

[23] Ruizhen Hu, Oliver van Kaick, Bojian Wu, Hui Huang, Ariel Shamir, and
Hao Zhang. Learning how objects function via co-analysis of interactions.
ACM Trans. on Graph., 35(4):47:1–12, 2016.

[24] Ruizhen Hu, Chenyang Zhu, Oliver van Kaick, Ligang Liu, Ariel Shamir,
and Hao Zhang. Interaction context (icon): Towards a geometric function-
ality descriptor. ACM Trans. on Graph., 34(4), 2015.

[25] Binh-Son Hua, Quang-Hieu Pham, Duc Thanh Nguyen, Minh-Khoi Tran,
Lap-Fai Yu, and Sai-Kit Yeung. SceneNN: A Scene Meshes Dataset with
aNNotations. In Proc. of 3D Vision, 2016.

[26] Hamid Izadinia, Qi Shan, and Steven M Seitz. IM2CAD. In Proc. IEEE

CVPR, 2017.

[27] Yun Jiang, Marcus Lim, and Ashutosh Saxena. Learning object arrange-
ments in 3d scenes using human context. In Proc. Int. Conf. on Machine
Learning (ICML), 2012.

[28] Andrej Karpathy, Stephen Miller, and Li Fei-Fei. Object discovery in 3d
In Proc. IEEE Int. Conf. on Robotics & Au-

scenes via shape analysis.
tomation, 2013.

[29] Young Min Kim, Niloy J. Mitra, Dong-Ming Yan, and Leonidas Guibas.
Acquiring 3D indoor environments with variability and repetition. ACM
Trans. on Graph., 31(6):138:1–138:11, 2012.

[30] Arno Knapitsch, Jaesik Park, Qian-Yi Zhou, and Vladlen Koltun. Tanks
and temples: Benchmarking large-scale scene reconstruction. ACM Trans.
on Graph., 36(4), 2017.

[31] Alex Krizhevsky, Ilya Sutskever, and Geoﬀrey E. Hinton. Imagenet classi-

ﬁcation with deep convolutional neural networks. 2012.

[32] David C Lee, Martial Hebert, and Takeo Kanade. Geometric reasoning for

single image structure recovery. In Proc. IEEE CVPR, 2009.

30

[33] Jeehyung Lee and Thomas Funkhouser. Sketch-based search and com-
position of 3d models. In Proc. of the Fifth Eurographics Conference on
Sketch-Based Interfaces and Modeling, pages 97–104, 2008.

[34] Yangyan Li, Angela Dai, Leonidas Guibas, and Matthias Nießner.
Database-assisted object retrieval for real-time 3d reconstruction. Com-
puter Graphics Forum, 34(2), 2015.

[35] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona,
Deva Ramanan, Piotr Dollr, and C. Lawrence Zitnick. Microsoft COCO:
Common objects in context. In Proc. ECCV, pages 740–755, 2014.

[36] Tianqiang Liu, Siddhartha Chaudhuri, Vladimir G. Kim, Qi-Xing Huang,
Niloy J. Mitra, and Thomas Funkhouser. Creating consistent scene graphs
using a probabilistic grammar. ACM Trans. on Graph., 33(6), 2014.

[37] Tianqiang Liu, Aaron Hertzmann, Wilmot Li, and Thomas Funkhouser.
Style compatibility for 3D furniture models. ACM Trans. on Graph., 34(4),
2015.

[38] Zicheng Liu, Yan Zhang, Wentao Wu, Kai Liu, and Zhengxing Sun. Model-
driven indoor scenes modeling from a single image. In Proc. of Graphics
Interface, pages 25–32, 2015.

[39] Zhaoliang Lun, Evangelos Kalogerakis, and Alla Sheﬀer. Elements of style:
Learning perceptual shape style similarity. ACM Trans. on Graph., 34(4),
2015.

[40] Rui Ma, Honghua Li, Changqing Zou, Zicheng Liao, Xin Tong, and Hao
Zhang. Action-driven 3D indoor scene evolution. ACM Trans. on Graph.,
35(6), 2016.

[41] Lucas Majerowicz, Ariel Shamir, Alla Sheﬀer, and Holger H. Hoos. Filling
your shelves: Synthesizing diverse style-preserving artifact arrangements.
IEEE Trans. Visualization & Computer Graphics, 20(11):1507–1518, 2014.

[42] Oliver Mattausch, Daniele Panozzo, Claudio Mura, Olga Sorkine-Hornung,
and Renato Pajarola. Object detection and classiﬁcation from large-scale
cluttered indoor scans. Computer Graphics Forum (Proc. of Eurographics),
33(2), 2014.

[43] Paul Merrell, Eric Schkufza, Zeyang Li, Maneesh Agrawala, and Vladlen
Koltun. Interactive furniture layout using interior design guidelines. ACM
Trans. on Graph., 30(4):87:1–10, 2011.

[44] Liangliang Nan, Ke Xie, and Andrei Sharf. A search-classify approach for
cluttered indoor scene understanding. ACM Trans. on Graph., 31(6):137:1–
137:10, 2012.

31

[45] Richard A. Newcombe, Shahram Izadi, Otmar Hilliges, David Molyneaux,
David Kim, Andrew J. Davison, Pushmeet Kohli, Jamie Shotton, Steve
Hodges, and Andrew Fitzgibbon. Kinectfusion: Real-time dense surface
mapping and tracking. In Proc. IEEE Int. Symp. on Mixed and Augmented
Reality, pages 127–136, 2011.

[46] M. Nießner, M. Zollh¨ofer, S. Izadi, and M. Stamminger. Real-time 3D
reconstruction at scale using voxel hashing. ACM Trans. on Graph.,
32(6):169:1–11, 2013.

[47] Zeinab Sadeghipour, Zicheng Liao, Ping Tan, and Hao Zhang. Learning 3D
scene synthesis from annotated RGB-D images. Computer Graphics Forum
(Proc. Eurographics Symp. on Geometry Processing), 35(5), 2016.

[48] Manolis Savva, Angel X. Chang, and Maneesh Agrawala. Scenesuggest:

Context-driven 3d scene design. CoRR, abs/1703.00061, 2017.

[49] Manolis Savva, Angel X. Chang, Pat Hanrahan, Matthew Fisher, and
Matthias Nießner. SceneGrok: Inferring action maps in 3D environments.
ACM Trans. on Graph., 33(6):212:1–10, 2014.

[50] Manolis Savva, Angel X. Chang, Pat Hanrahan, Matthew Fisher, and
Matthias Nießner. PiGraphs: Learning interaction snapshots from obser-
vations. ACM Trans. on Graph., 35(4), 2016.

[51] Steven M. Seitz, Brian Curless, James Diebel, Daniel Scharstein, and
Richard Szeliski. A comparison and evaluation of multi-view stereo re-
construction algorithms. In Proc. IEEE CVPR, pages 519–528, 2006.

[52] Lee M. Seversky and Lijun Yin. Real-time automatic 3D scene genera-
tion from natural language voice and text descriptions. In Proc. of ACM
International Conference on Multimedia, pages 61–64, 2006.

[53] Tianjia Shao, Aron Monszpart, Youyi Zheng, Bongjin Koo, Weiwei Xu,
Kun Zhou, and Niloy J. Mitra.
Imagining the unseen: Stability-based
cuboid arrangements for scene understanding. ACM Trans. on Graph.,
33(6), 2014.

[54] Tianjia Shao, Weiwei Xu, Kun Zhou, Jingdong Wang, Dongping Li, and
Baining Guo. An interactive approach to semantic modeling of indoor
scenes with an RGBD camera. ACM Trans. on Graph., 31(6):136:1–11,
2012.

[55] Andrei Sharf, Hui Huang, Cheng Liang, Jiapei Zhang, Baoquan Chen, and
Minglun Gong. Mobility-trees for indoor scenes manipulation. Computer
Graphics Forum, 33(1), 2014.

[56] HyoJong Shin and Takeo Igarashi. Magic canvas: Interactive design of a
3-d scene prototype from freehand sketches. In Proc. of Graphics Interface
2007, pages 63–70, 2007.

32

[57] Nathan Silberman, Derek Hoiem, Pushmeet Kohli, and Rob Fergus. Indoor
In Proc. ECCV,

segmentation and support inference from rgbd images.
2012.

[58] Shuran Song, Samuel P. Lichtenberg, and Jianxiong Xiao. SUN RGB-D:
A RGB-D scene understanding benchmark suite. In Proc. IEEE CVPR,
pages 567–576, 2015.

[59] Emily Whiting, John Ochsendorf, and Fr´edo Durand. Procedural modeling
of structurally-sound masonry buildings. ACM Trans. on Graph., 28(5),
2009.

[60] Kai Xu, Hui Huang, Yifei Shi, Hao Li, Pinxin Long, Jianong Caichen, Wei
Sun, and Baoquan Chen. Autoscanning for coupled scene reconstruction
and proactive object analysis. ACM Trans. on Graph., 34(6), 2015.

[61] Kai Xu, Vladimir G. Kim, Qixing Huang, and Evangelos Kalogerakis. Data-
driven shape analysis and processing. Computer Graphics Forum, 36(1),
2017.

[62] Kai Xu, Rui Ma, Hao Zhang, Chenyang Zhu, Ariel Shamir, Daniel Cohen-
Or, and Hui Huang. Organizing heterogeneous scene collection through
contextual focal points. ACM Trans. on Graph., 33(4):35:1–12, 2014.

[63] Kai Xu, Yifei Shi, Lintao Zheng, Junyu Zhang, Min Liu, Hui Huang, Hao
Su, Daniel Cohen-Or, and Baoquan Chen. 3D Attention-Driven Depth
Acquisition for Object Identiﬁcation. ACM Trans. on Graph., 35(6), 2016.

[64] Ken Xu, James Stewart, and Eugene Fiume. Constraint-based automatic
placement for scene composition. In Graphics Interface, pages 25–34, 2002.

[65] Kun Xu, Kang Chen, Hongbo Fu, Wei-Lun Sun, and Shi-Min Hu.
Sketch2Scene: Sketch-based co-retrieval and co-placement of 3D models.
ACM Trans. on Graph., 32(4):123:1–10, 2013.

[66] Yi-Ting Yeh, Lingfeng Yang, Matthew Watson, Noah D. Goodman, and
Pat Hanrahan. Synthesizing open worlds with constraints using locally
annealed reversible jump MCMC. ACM Trans. on Graph., 31(4):56:1–11,
2012.

[67] Lap-Fai Yu, Sai Kit Yeung, Chi-Keung Tang, Demetri Terzopoulos, Tony F.
Chan, and Stanley Osher. Make it home: automatic optimization of furni-
ture arrangement. ACM Trans. on Graph., 30(4):86:1–12, 2011.

[68] Lap-Fai Yu, Sai Kit Yeung, and Demetri Terzopoulos. The clutterpalette:
An interactive tool for detailing indoor scenes. IEEE Trans. Visualization
& Computer Graphics, 22(2):1138–1148, 2016.

[69] Yizhong Zhang, Weiwei Xu, Yiying Tong, and Kun Zhou. Online structure
analysis for real-time indoor scene reconstruction. ACM Trans. on Graph.,
34(5), 2015.

33

[70] Xi Zhao, Ruizhen Hu, Paul Guerrero, Niloy J. Mitra, and Taku Komura.
Relationship templates for creating scene variations. ACM Trans. on
Graph., 35(6), 2016.

[71] Xi Zhao, He Wang, and Taku Komura. Indexing 3d scenes using the inter-

action bisector surface. ACM Trans. on Graph., 33(3), 2014.

34

