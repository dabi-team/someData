2
2
0
2

g
u
A
0
3

]
I

N
.
s
c
[

1
v
3
2
5
4
1
.
8
0
2
2
:
v
i
X
r
a

A Fresh Look at ECN Traversal in the Wild
Jackson Sippe
Seonwoo Kim
Hyoyoung Lim
jackson.sippe@colorado.edu
seonwoo.kim@colorado.edu
hyoyoung.lim@colorado.edu
University of Colorado Boulder
University of Colorado Boulder
University of Colorado Boulder

Junseon Kim
jskim@unist.ac.kr
UNIST

Greg White
g.white@cablelabs.com
CableLabs

Chul-Ho Lee
chulho.lee@txstate.edu
Texas State University

Eric Wustrow
ewust@colorado.edu
University of Colorado Boulder

Kyunghan Lee
kyunghanlee@snu.ac.kr
Seoul National University

Dirk Grunwald
dirk.grunwald@colorado.edu
University of Colorado Boulder

Sangtae Ha
sangtae.ha@colorado.edu
University of Colorado Boulder

ABSTRACT
The Explicit Congestion Notification (ECN) field has taken on
new importance due to Low Latency, Low Loss, and Scalable
throughput (L4S) technology designed for extremely latency-
sensitive applications (such as cloud games and cloud-rendered
VR/AR). ECN and L4S need to be supported by the client and
server but also all devices in the network path. We have iden-
tified that “ECN bleaching”, where an intermediate network
device clears or “bleaches” the ECN flags, occurs and quanti-
fied how often that happens, why it happens and identified
where in the network it happens.

In this research, we conduct a comprehensive measure-
ment study on end-to-end traversal of the ECN field us-
ing probes deployed on the Internet across different varied
clients and servers. Using these probes, we identify and lo-
cate instances of ECN bleaching on various network paths on
the Internet. In our six months of measurements, conducted
in late 2021 and early 2022, we found the prevalence varied
considerably from network to network. One cloud provider
and two cellular providers bleach the ECN field as a matter
of policy. Of the rest, we found 1,112 out of 129,252 routers,
4.17% of paths we measured showed ECN bleaching.

1 INTRODUCTION
RFC 3168 [29] specifies the incorporation of Explicit Con-
gestion Notification (ECN) to TCP/IP, which allows routers
to signal impending congestion to endpoints before buffers
overflow or packets get dropped by routers. The IP header
contains a 2-bit field known as the ECN field to enable such
an end-to-end notification of impending network congestion
without dropping packets. To enable ECN, a sender marks
its packets as ECN-Capable and then reacts to congestion

1

signaled by the network. As packets traverse the network,
congested devices mark ECN-enabled packets to indicate
congestion rather than dropping those packets. The receiver
monitors received packets for ECN congestion signals and
sends congestion feedback to the sender. ECN relies on the
network devices to either pass along packets with the ECN
information unmodified if there is no congestion or to in-
dicate congestion by marking the ECN bits. It only takes
one misbehaving device in a network path to eliminate the
benefit of ECN – if any network device between a sender
and receiver clear the ECN bits, the sender and receiver will
not learn about the impending congestion.

There are several benefits to ECN [12], particularly as a
congestion signal that reduces application latency by fore-
going dropping packets to signal congestion. Congestion
control algorithms treat ECN congestion signals identically
to packet drops as far as congestion response. Most OSs have
ECN enabled by default [22, 23], meaning they respond to
and use ECN if requested by the sender.

Recently, the L4S (Low Latency, Low Loss, and Scalable
throughput) standard proposal [6] recognized that the orig-
inal definition of ECN could be improved to significantly
reduce latency and latency variation, and could improve the
scalability of congestion control designs for wide-area net-
works using the mechanisms previously used in Datacenter
TCP [2, 4] while coexisting with the existing TCP and QUIC
traffic on the Internet. L4S aims to enable high-bandwidth, ex-
tremely latency-sensitive applications, such as cloud games
and cloud-rendered VR/AR, to achieve their performance
objectives to a degree that has not been practically feasible
with existing congestion feedback mechanisms and is a key
element of proposed access network technologies such as
Low-Latency DOCSIS. L4S uses the ECT(1) codepoint as an

 
 
 
 
 
 
Hyoyoung Lim, Seonwoo Kim, Jackson Sippe, Junseon Kim, Greg White, Chul-Ho Lee, Eric Wustrow, Kyunghan Lee, Dirk
Grunwald, and Sangtae Ha

identifier for ‘L4S’ packets to be distinguished from ‘classic
ECN’ packets and has a separate treatment of L4S packets
via an independent queue to reduce queuing delay [31].1
Unfortunately, some network devices clear or “bleach” the
ECN bits, limiting the benefit of ECN and also L4S.

ECN is widely available since most server OSs have ECN
enabled by default [22, 23]. Studies [3, 23, 33] using path
traversal of ECN using a traceroute-based method have
shown that path traversal of ECN has become close to uni-
versal (as long as two endpoints have ECN enabled), but
there are still a non-trivial fraction of paths along which net-
work nodes wipe the ECN field of packets. In 2019, Roddav et
al. [30] used passive measurements to show that only 5.23%
of traffic is using ECN codepoints, possibly because of ECN
“bleaching”.

It remains largely unknown where such bleaching paths
are prevalent in the Internet in terms of ISPs and geographi-
cal regions, and why they exist or if ECN signaling is being
used. Mandalari et al. [23] observed that more than half of
the mobile carriers that they tested bleach the ECN field to
zeros, and the ECN bleaching cases happen in the first hop
from mobile clients. Two recent studies [5, 14] indicate that
there are a few networks that have enabled ECN congestion
signaling, but the majority have not.

In light of significant interest in the new L4S ECN architec-
ture, it is now the time to revisit the usability (i.e. traversal)
of ECN in cellular as well as wired networks. We conducted a
study of a 24 hour passive trace of network traffic at a single
vantage point within a University network, looking at the
prevalence of the different values within ECN fields in the
IP and TCP packet headers. We also have conducted an ac-
tive measurement study on end-to-end traversal of the ECN
field using probes deployed on the Internet across different
locations and providers using two forms of active measure-
ments. First, we used PATHspider [22] to determine which
HTTP/HTTPS servers have ECN enabled to better under-
stand ECN adoption. Then, using a tool we developed, we
identified and located instances of ECN bleaching on various
network paths on the Internet.

We learned different things from our passive and active
measurements. In our six months of measurements, con-
ducted in late 2021 and early 2022, aside from one cloud
provider that bleaches the ECN field as a matter of policy,
we found 1,112 out of 129,252 routers, and 4.17% of paths
showed ECN bleaching and many networks have no bleach-
ing. However, previous studies [30] using passive measure-
ments showed that only 5.23% of traffic is using ECN, which
is a perplexing result given that ECN is enabled for most mod-
ern OSs. We found that although ECN is enabled by receivers

1The ECT(1) codepoint was originally defined along with ECT(0) to indicate
ECN-Capable Transport (ECT) in the ECN specification [29].

2

Table 1: Dataset types and descriptions.

Type
Active
Active
Passive

Data collection
Server measurement
Traceroute localization
1-day traffic trace data

# of paths Data size
3.4 GB
2,656,935
2.4 GB
530,795
9.8 GB
-

Table 2: ECN codepoints and their meanings.

ECN codepoint Binary

Not-ECT
ECT(0)
ECT(1)
CE

00
10
01
11

L4S meaning
Not ECN-capable transport
Classic ECN-capable transport
L4S-capable transport
Congestion experienced

for incoming packets, ECN is not requested for outgoing pack-
ets by senders by default. In other words, many networks
and servers are ready for ECN but client devices [15] or
applications [26] need to enable ECN for it to be used.

The remainder of this paper is structured as follows. First,
we describe the old (classic) and new (L4S) schemes of ECN
in Section 2. Then, in Section 3, we present the probes we
use and the data collection methodology. Next, using the
results from our methodology, we characterize the current
state of ECN traversal and compare it to previous studies in
Section 4. We discuss additional results in Section 5. Finally,
Section 6 reviews related work before Section 7 concludes
with a summary of our findings.

2 BACKGROUND
2.1 Explicit Congestion Notification
The original ECN specification (i.e. Classic ECN) was stan-
dardized in 2001 to allow routers to provide end-to-end no-
tification of incipient network congestion instead of using
packet drops as an indication of congestion [29]. The ba-
sic idea behind ECN is to provide an unambiguous signal
of congestion without additionally causing a degradation
(i.e. packet loss) in the transfer of data. In a router, ECN is
implemented via an active queue management (AQM) mech-
anism that evaluates queue depth and/or queue latency, and
when the queue exceeds a threshold it marks the packet to
indicate congestion has been experienced. The benefits of
ECN include reducing packet loss in the Internet, which in
turn leads to avoiding an increased application-layer latency
caused by packet retransmissions. As a result, ECN improves
the user experience in latency sensitive applications.

We provide a brief overview of how ECN works with
TCP (on top of IP), assuming that two endpoints and all the
intermediate routers between the endpoints are ECN-capable.
ECN uses an ECN field of two bits in the IP header, which are
the last two bits of the type of service (TOS) field originally

A Fresh Look at ECN Traversal in the Wild

, ,

defined in the IP header. The codepoints of the ECN field and
their meanings are shown in Table 2. The ECT codepoints ‘10’
and ‘01’ – ECT(0) and ECT(1) – were originally equivalent in
the ECN specification [29], but ECT(1) has been repurposed
to indicate L4S packets under the L4S service architecture
[6], leaving ECT(0) to indicate Classic ECN packets. ECN
also requires support from the transport protocol (i.e., TCP)
in addition to the functionality provided by the ECN field of
IP packets.

The endpoints, i.e., TCP client and server, first negotiate
ECN capability during the establishment of their connection.
After successful negotiation, a Classic ECN sender sends IP
packets with ECT(0) set in the ECN field to indicate that
they are ECN-capable. If a router detects impending conges-
tion (with the help of an AQM mechanism) when a Classic
ECN-capable packet arrives at the router, it marks the ECN
field of the packet with the CE codepoint, and forwards the
packet instead of dropping it. When the receiver receives
this packet with CE set in the ECN field, it informs the sender
of the congestion indication by sending its next TCP ACK
with the ECN-Echo (ECE) flag marked in the TCP header.
Upon receiving this TCP ACK, the sender then reacts to the
congestion as if a packet has been dropped and sends the
next packet with the Congestion Window Reduced (CWR)
flag marked in the TCP header to acknowledge the receipt
of the congestion indication. Note that the ECE and CWR
flags in the TCP header are also used for the negotiation of
ECN capability during connection establishment. See [29]
for more details.

Table 3: Default ECN settings in major OSs

OS and version

Linux kernel 2.4.20 ↑

Mac OSX 10.11, iOS 9 ↑

Windows Server 2012 ↑

Default ECN setting
Enabled for incoming ECN
connections
Enabled for incoming ECN
connections
Enabled for both incomming
and outgoing ECN connections

Table 3 shows default ECN settings in the current major
OSs. Most modern OSs use ECN and echo incoming ECN
connections, but do not initiate the use of ECN on outgoing
connections. In other words, many networks and servers
are ready for ECN. However, client devices [15] or applica-
tions [26] need to enable ECN for it to be used.

2.2 L4S
L4S is a service architecture that uses ECN as an integral
component to achieve high bandwidth and low latency for
Internet applications and is currently undergoing standard-
ization [6]. The main idea behind L4S is to take advantage

of the fact that the congestion signal in ECN isn’t a degrada-
tion in the way that packet drops are, and thus congestion
signals can be sent much more frequently in order to provide
high-fidelity congestion information. As mentioned above,
L4S redefines the ECT(1) codepoint to indicate L4S-Capable
Transport, and in the context of an L4S flow it redefines
the CE codepoint to provide this fine-grained congestion
feedback.

L4S supports incremental deployment, via a classic con-
gestion control response to packet drops, and via in-network
isolation of classic traffic from L4S traffic. L4S routers iso-
late these two types of traffic from one other so that the
queuing latency caused by classic traffic doesn’t impact L4S
traffic, and so that the two types can each be provided their
appropriate congestion signals. Two queuing mechanisms
have been defined for this purpose. One is referred to as
Dual-Queue Coupled AQM, the other is an L4S-aware flow
queuing approach.

Dual-Queue Coupled AQM routers have two separate
queues at the network bottleneck one for L4S traffic and
one for classic traffic, where the ECN field is used as an iden-
tifier for L4S packets to be distinguished from classic packets.
The queue for L4S traffic has a shallower (or smaller) buffer
size, which allows the L4S packets to experience very low
queueing delay. Additionally, packets in the L4S queue are
marked with CE in the ECN field (to notify the endpoints of
impending congestion) as soon as they start building up in
the queue (e.g. when the queue delay exceeds a low threshold
of 500 µs or 1 ms). However, the queue for classic traffic has
a larger buffer to maintain full utilization since the queue
needs to be large enough to cope with large saw-tooth rate
variations by a classic congestion control. In addition, de-
spite the use of separate queues, the congestion signaling is
coupled between the queues so that the two types of traffic
share the bottleneck bandwidth in a fair manner. See [6, 32]
for more details.

The L4S-aware flow queuing approach provides a separate
queue for each individual flow based on a hash of the header
5-tuple, and then provides CE-marking of ECT(1) packets via
a shallow queue delay threshold (e.g. 1 ms) while ECT(0) or
Not-ECT packets are CE-marked or dropped (respectively)
using a classic AQM algorithm.

L4S is not limited to a certain type of network but can be
implemented in different types of networks. However, the
implementation of L4S in different networks poses different
sets of obstacles, especially when L4S is implemented in
5G [7, 37] and WiFi [27].

3 MEASUREMENT METHODOLOGY
In this section, we explain the details of our methodology for
active and passive measurements to examine the status quo

3

Hyoyoung Lim, Seonwoo Kim, Jackson Sippe, Junseon Kim, Greg White, Chul-Ho Lee, Eric Wustrow, Kyunghan Lee, Dirk
Grunwald, and Sangtae Ha

(a) Request and respond method (§3.1.1)

(b) Traceroute method (§3.1.2)

(c) Passive method (§3.2)

Figure 1: (a) Request and respond method: 1○ A probe starts ECN negotiation with a TCP SYN segment having the ECE
and CRW flags set in the TCP header. 2○ The server responds with a SYN/ACK segment with ECE set. 3○ The probe sends an
ACK segment to finalize the negotiation. 4○ The probe sends an HTTP request encapsulated in an IP packet with ECT(0) set.
5○-1 In normal cases, the server sends back an ECN-marked IP packet. 5○-2 However, if ECN bleaching happens, the probe will
receive packets that have the cleared ECN field (0b00). (b) Traceroute method: 1○ A source probe sends ICMP echo request
packets, each with incrementing TTL values, to a target server/probe. 2○ When TTL expires, the router sends back an ICMP
time exceeded error message to the source. 3○ If a router bleaches the ECN field, the IP packet carrying the error message has
0b00 in the ECN field. (c) Passive method: We used a mirroring tap installed with the campus network to capture all traffic
traversing the network.

of the deployment and traversal of ECN in a wide range of
wired and cellular networks. Specifically, we use a ‘request
and respond’ method and a traceroute-based method for
active measurement to test or probe specific paths to mea-
sure ECN capability. To complement the active measurement
results, we also passively collect and analyze a 24-hour trace
of network traffic at a vantage point within a large Univer-
sity campus network to understand what fraction of traffic
is ECN-enabled or how widely ECN is currently being used
in practice.

3.1 Active Measurement

3.1.1 Request and Respond Method. We use the active
measurement tool called PATHspider [22] for the request
and response method to investigate the server-side deploy-
ment of ECN and the traversal of ECN over the paths to
servers. There are two phases in this method, namely ECN
negotiation phase and data transmission phase.

First, the ECN negotiation phase allows us to confirm the
ECN support of a target web server if the negotiation with the
server succeeds. Specifically, a probe attempts to negotiate
ECN capability with a targeted server while establishing
a TCP session with the server. The probe first sends to the
server a TCP SYN segment with ECE and CWR flags set in the
TCP header. The server then sends back to the probe a SYN-
ACK segment with ECE flag set, if the server supports ECN.
Otherwise, the server just sends a plain SYN-ACK segment.
After that, the server responds with an ACK to finalize the

4

negotiation and establish a new session with the probe. It is
worth noting that the ECN negotiation is invisible to routers
in the path between the probe and the server since it is done
at the transport layer. In other words, the routers do not
affect the ECN negotiation even if there is a router in the
path that bleaches the ECN field of IP packets.

Second, the data transmission phase allows us to check
whether ECN bleaching happens along the path from the
probe to the server, assuming that the server supports ECN.
The probe starts with sending an HTTP request to the server,
where the IP packet carrying the HTTP request has ECT(0)
marked in the ECN field. The server then sends an HTTP
response back to the probe. The ECN field of the IP packet
carrying (a part of) the HTTP response has either ECT(0) or
CE marked, where ECT(0) is 0b10 and CE is 0b11. While the
former is for normal cases, the latter happens when a router
in the path signals impending congestion by setting the ECN
field of the packet with CE. However, if ECN bleaching hap-
pens at a router in the path (i.e., the router clears the ECN
field to 0b00), the IP packets received by the probe lose the
ECN marking. Therefore, we can identify the presence of
ECN bleaching by looking at the ECN field of incoming IP
packets from the server.

3.1.2 Traceroute Method. To investigate whether the ECN-
marked IP packets traverse the network without any illegiti-
mate modifications, we use the traceroute-based method
that has been used in the literature [3, 10, 23, 34]. For a source

ProbeServerECN Set-up SYN : CWR=1, ECE=1, SYN=1ECN Set-up SYN/ACK : CWR=0, ECE=1, ACK=1, SYN=1DataTransmissionPhaseRouterRouter①②③④⑤-1ECN Set-up ACK : ACK=1HTTP Request : ECT = 10HTTP Reply, ECN = 10 or 11HTTP Reply, ECN = 00 (Bleaching)ECNNegotiationPhase⑤-2Bleaching RouterProbeNormal RouterServerICMP : TTL = 1, ECN = XXICMP : TTL = 2, ECN = XXNeglect after bleachingTime Exceeded, ECN = XXTime Exceeded, ECN = 00 (Bleaching)①②③* XX canbepossible 2bitsCodepointECN bitsNon-ECT00ECT(0)10ECT(1)01CE11Mirroring TapInternetUniversity NetworkA Fresh Look at ECN Traversal in the Wild

, ,

probe and a target server/probe, this method relies on an
ICMP time exceeded error message, which is generated at
each router along the path to the target destination and sent
back to the source. Traceroute sends a sequence of ICMP
echo request packets whose IP packets have incremented
time-to-live (TTL) values toward the IP address of the tar-
get destination. Each router discards an incoming IP packet
when its TTL expires. In this case, the router also generates
an ICMP time exceeded error message to the source. Upon re-
ceiving the error message at the probe, we can check whether
there has been a change in the ECN field of the IP packet that
carries the error message. Thus, in the traceroute-based
method, we cycle through the ECN bits of the IP packets car-
rying ICMP echo request packets from 0b00 to 0b11 (recall
the four ECN codepoints in Table 2), while the TTL values
of the packets increment.

3.1.3 Measurement Probes. For the above active measure-
ments, we use three types of probes, which are crowdsourced
probes, cellular probes, and cloud probes.

Crowdsourced probes. We deployed the ECN measure-
ment probes within the home and work ISP networks of 11
volunteers who participate in this study. The majority of
the volunteers are located in the U.S., and the others are in
Canada, Argentina, and Germany. Specifically, the 11 vol-
unteers from four countries installed measurement probes
in ten different home and work ISP networks, namely, Arm-
strong, Charter, Comcast, Cox, Rogers, Shaw, Telecom Ar-
gentina, Verizon business, and Vodafone. Many of the probes
are deployed behind NAT/firewall in which case they only
function as source probes for the traceroute-based method.
Note that we did not use PATHspider with the crowdsourced
probes since the volume of the traffic generated by PATH-
spider can be a burden to the volunteers.

Cellular probes. We set up laptops with USB tethering
as cellular probes to connect to cellular networks in order to
examine ECN capability in cellular networks. We consider
the cellular networks of six major US and South Korean
carriers in this study, namely AT&T, Verizon, T-mobile, KT,
LGU+, and SKT. The cellular probes do not have public IP
addresses to be connected from the outside of a network, so
they only act as source probes for the request and respond
method.

Cloud probes. We placed 37 cloud probes (or vantage
points) in 33 geographic regions around the world and within
the cloud servers operated by five different cloud service
providers, namely, AWS, Azure, GCP, DigitalOcean, and
Cloudlab. Cloudlab [11] is the only non-profit cloud service
that provides high-performance computing and networks
across several states in the U.S. We set up a virtual machine
(VM) server at each one of multiple cloud servers for each

5

provider. The VM servers installed in multiple locations are
to reflect the presence of multiple cloud servers across dif-
ferent geographical regions. In addition, each VM server has
a public IP address, which allows it to be connected from
other probes.

It is worth noting that we would not get meaningful results
if we only use cloud probes, as most of the primary cloud
service providers, such as Amazon, Google, and Microsoft,
have massive private WANs, which hide tenant traffic from
the public Internet.

3.2 Passive Measurement
While the above two active measurement methods allow us
to examine the status quo of the ECN readiness in various
types of networks, they cannot be used to reveal how widely
ECN is currently being used in practice. To this end, we
collected and analyzed a 24-hour trace of network traffic,
whose data size is 10GB, at a vantage point within a large
University campus network, from which we can see how
widely ECN is currently being used among the traffic over
the campus network.

We post-processed the traffic data as follows. We first ob-
tained packet traces that only contain the IP and TCP/UDP
headers of packets by stripping out their actual payloads.
We next identified a packet trace per flow. The flow informa-
tion that we collected includes the source and destination
IP addresses and their country codes, port number, the ECN
codepoint of the ECN field in the IP header, and the ECE and
CWR flags in the TCP header, if the flow is a TCP flow. From
the per-flow information, we were able to obtain the overall
distribution of the ECN codepoints in the IP header as well
as that of the ECE and CWR flags in the TCP header. We
were also able to find the separate distributions of the ECN
codepoints per port number. We finally investigated possible
causes for the case when ECN(0) or ECN(1) is set in the ECN
field of IP header while its upper transport protocol is not
TCP.

4 MEASUREMENT RESULTS
In this section, we closely examine the ECN field in the wild.
We first present the ECN support results from our vantage
points to public websites. We then use the traceroute-based
method to understand how many Internet paths support
ECN and pinpoint where ECN bleaching happens. Lastly,
we examine the overall usage of ECNs from traffic traces
collected on a University campus.

4.1 ECN-enabled Public Websites

4.1.1 Methodology. To consider CDN deployment of pop-
ular websites listed as Alexa 100K website domains [1], we
chose 16 different vantage points out of 25. We then obtained

Hyoyoung Lim, Seonwoo Kim, Jackson Sippe, Junseon Kim, Greg White, Chul-Ho Lee, Eric Wustrow, Kyunghan Lee, Dirk
Grunwald, and Sangtae Ha

404,382 unique IP addresses for these websites by removing
duplicate ones. We use the request and response method
using PATHspider to check if ECN is supported from each
vantage point to each website, where our probe in each van-
tage point sends an HTTP request and checks the response.
We ensure that a middlebox or the network where each van-
tage point is hosted is not mangling TCP and IP headers.

Figure 2: Geographic locations of tested Alexa 100K
web servers. Since popular domains provide their service
from geographically distributed clouds, the total number of
unique IPs 404,382 is much more than the number of listed
domains. U.S. accounts for most of the IPs by 53.6%, followed
by Germany (4.8%), Russia (4.3%), and Canada (3.8%).

Web server locations. We are interested in understand-
ing where these websites are geographically located. We use
whois command to locate each IP address. Figure 2 shows
the locations of Alexa 100K websites by using the location
information (i.e., City, StateProv, and Country) from each
whois query. The majority of Alexa 100K websites are lo-
cated in the U.S. (56%), followed by Germany (4.8%), Russia
(4.3%), and Canada (3.8%).

Web server hosting providers. We are also interested
in service providers hosting these websites. We classify each
IP address based on the service providers’ names using the
whois response. Figure 3 shows the top 10 providers for
Alexa 100K websites. We obtained around 10,950 providers
serving these websites. We found that many web servers are
hosted in major data centers in the U.S. with Cloudflare and
Amazon being the top 2 providers, serving 21.1% and 17.1%,
respectively.

4.1.2 ECN deployment status on the servers. Figure 4 shows
the ECN deployment ratio over the last two decades in
chronological order. Measurement studies [20, 25, 28] before
2010 reported an almost negligible number of ECN-enabled
web servers. The study in 2015 [24] reported that ECN de-
ployment had rapidly increased to 80%. Our measurement
study shows that the percentage of ECN-supported web
servers is now 86.4%, following the trend shown in the 2015
study. These servers offer successful ECN negotiation to the
client during TCP session establishment; this percentage still

Figure 3: Top 10 web-server hosting services of Alexa
100K web servers. The total of 10,950 unique Web-server
hosting providers are identified for Alexa 100K websites.
Among 404,382 IPs, Cloudflare (74,510) and Amazon (63,285)
show the highest proportion.

Figure 4: ECN deployment status in chronological or-
der. ECN deployment has rapidly increased to 80% in 2015’s
measurement study. In our measurement study, ECN deploy-
ment has risen to 86.4%, following the trend shown in 2015’s
measurement study showing 80%.

includes the cases where a TCP session with successful ECN
negotiation is bleached in IP packets by some intermediate
routers.

Table 4 shows the details of this measurement results.
Among 349,188 (85.4%) ECN-enabled Web servers complet-
ing successful ECN negotiation in TCP session establishment,
37,798 (10.8%) hosts show ECN bleaching in IP packets; we
conjecture that these paths have ECN bleaching points be-
tween the vantage points and these Web servers. The 0.2%
percentage of CE marking on ECN-enabled connections
matches the results by Apple in 2017 [5] that the percentage
of CE marking in the packets between two ECN-enabled
devices in the U.S. shows 0.2% while it varies from country
to country.

4.1.3 ECN-enabled paths within or across continents. By
sending a request from the vantage points hosted in cloud

6

1 - 20462046 - 47654765 - 94329432 - 1795517955 - 197972No Data21.117.13.83.442.7CloudflareCloudflareAmazonAmazonGoogleAkamaiDigitalOceanHetznerUnified LayerOVH SASGoDaddyMicrosoftOthersOthers'00'04'08'11'14'15'22Year020406080100ECN Deployment Ratio(%)1.32.21.117.229.556.280.086.4Our workA Fresh Look at ECN Traversal in the Wild

, ,

Table 4: ECN-enabled web servers obtained from one
vantage point to the list of public websites (404,382
IPs).

Codepoint
Total
00: Not-ECT
10: ECT(0)
01: ECT(1)
11: CE

Enabled
349,188
37,798
259,634
50,898
858

(pct) Disabled
55,194
55,141
48
3
2

(86.4%)
(10.8%)
(74.4%)
(14.6%)
(0.2%)

(pct)
(13.6%)
(99.9%)
(0.09%)
(0.01%)
(0.004%)

providers where no local ECN bleaching is observed to pub-
lic websites, we measure the percentage of ECN-enabled
paths showing successful ECN negotiation in TCP sessions.
Figure 5(a) visualizes ECN-enabled paths within or across
continents. −1 indicates no available measurement data. In-
terestingly, no particular region supports ECN better than
the others. We conjecture that ECN-enabled paths depend
largely on the OS version and settings of hosting web servers
which may not correlate with geographical locations. If we
average for each destination continent, the ECN-enabled
path ratio becomes close to 86.4% of the ECN deployment
ratio in Figure 4.

(a) ECN-enabled path ratio

(b) ECN-bleaching path ratio

Figure 5: ECN-enabled and ECN-bleaching path ratios
within and across continents. −1 represents no results
are available. ECN-enabled paths are less correlated with the
geographical locations of clients and web servers (a). Europe
(EU) and South America (SA) show the highest bleaching
ratio within the same continent. The requests sent from
vantage points in North America (NA) show higher ECN
bleaching rates (over 40%).

4.1.4 ECN-bleached paths within or across continents. From
each ECN-enabled path of successful ECN negotiation in
TCP sessions (Figure 5(a)), we show the ECN bleaching ratio
where ECN bits are wiped in IP packets (Figure 5(b)). Europe

7

Table 5: ECN bleaching from different access networks
in the U.S. and South Korea.

Type

Provider

location Negotiation
Percentage

Wired

Cellular

Comcast
LG U+
University A
University B
AT&T
Tmobile
Verizon
SKT
LG U+
KT

US
S. Korea
US
S. Korea
US
US
US
S. Korea
S. Korea
S. Korea

86.8%
89.1%
86.4%
92.3%
99.8%
86.7%
61.5%
91.7%
89.5%
92.3%

Bleaching
Percentage
51.35%
9.82%
13.6%
8.93%
28.3%
5.1%
3.1%
100%
9.05%
7.64%

(EU) and South America (SA) show the highest bleaching ra-
tio within the same continent. North America (NA) was the
highest ECN bleaching source among the other continents.
The Africa (AF) websites show relatively low bleaching rates
except for NA-originated traffic, while Oceania (OC) websites
show the lowest ECN bleaching rates. These results illustrate
that the ECN bleaching points are located primarily in North
and South America and Europe.

4.1.5 ECN bleaching from different access networks. We
check the impact of different access networks when clients
located in each access network connects to public websites.
Table 5 shows the summary of ECN negotiation and bleach-
ing percentages for different types of access networks and
providers. In wired access networks, Comcast shows a 51.35%
ECN bleaching percentage among the ECN-enabled paths
with successful ECN negotiation (86.8%). In contrast, the
other providers show around 10% ECN bleaching percentage,
which matches the overall ECN deployment percentage in
Table 4.

In cellular networks, AT&T shows ECN negotiation re-
sponses come from the middleboxes at the TCP connection
establishment phase, not by the destination web servers.
We confirmed this behavior by sending an ECN negotiation
packet to ECN-disabled web servers. Surprisingly, the client
successfully negotiates ECN with any web server (99.8%)2,
indicating the presence of performance-enhancing proxies
(PEPs) in the network. On the other hand, SKT in South Ko-
rea bleaches 100% of ECN-negotiated sessions; it wipes ECN
bits in all IP headers.

4.1.6 ECN bleaching from different cloud providers. We
now check if cloud providers support ECN when clients in
their cloud connect to public websites. Table 6 shows the
results. Interestingly, clients in Azure failed 100% in ECN
negotiation. We conjecture that PEPs in its network change

2We confirm that this is not because of the USB tethering.

EUNASAASOCSourceAFOCASSANAEUDestination0.860.68-10.90.860.880.92-10.930.960.860.790.640.840.910.880.650.790.8710.860.760.790.920.910.670.860.830.950.970.50.60.70.80.91.0EUNASAASOCSourceAFOCASSANAEUDestination0.060.45-10.0100.10.11-10.10.170.110.4300.160.080.10.190.560.100.310.210.090.110.210.480.490.070.050.150.00.10.20.30.40.5Hyoyoung Lim, Seonwoo Kim, Jackson Sippe, Junseon Kim, Greg White, Chul-Ho Lee, Eric Wustrow, Kyunghan Lee, Dirk
Grunwald, and Sangtae Ha

Table 6: ECN bleaching from different cloud providers.

Cloud Service
Provider

Location

Negotiation
Percentage

Bleaching
Percentage

Table 7: Total number of ECN violating paths and
bleaching IP addresses obtained from the traceroute
method.

AWS

Azure

Cloudlab

DigitalOcean

GCP

Frankfurt
Stockholm
SaoPaulo
Paris
Norway
NorthEU
UK
East Asia
Wisconsin
Utah
Clemson
Massachusetts
New York
San Francisco
Singapore
London
Frankfurt
Toronto
Bangalore
Virginia
California

60.2%
85.24%
75.81%
60.66%
0%
0%
0%
0%
97.8%
93.7%
95.9%
91.4%
88.46%
92.59%
93.28%
88.23%
87.55%
81.8%
95.09%
94.1%
93.9%

39.41%
9.31%
19.97%
41.11%
-
-
-
-
15.3%
9.17%
5.61%
7.87%
40.86%
29.81%
16.85%
39.2%
35.48%
38.54%
4.71%
100%
100%

the ECN field without following the standards. We confirmed
the alteration at the middleboxes with additional testing with
our own servers with ECN enabled and disabled, respectively.
Another key observation is that GCP bleaches 100% in IP
headers even after successful ECN negotiation in TCP head-
ers. We conjecture that Google removes ECN in IP packets
to use it internally in their datacenters.

4.2 ECN-supported Internet Paths

4.2.1 Methodology. The trends in Subsection 4.1 high-
light that the ECN deployment ratio in public websites is
reaching 90% and is already well used on the Internet, while
the network bleaches 10% of those ECN-enabled websites.
To understand and pinpoint where in the network ECN
fields are being altered or bleached, we use the traceroute-
based method mentioned in Section 3.1.2 towards each ECN-
enabled public website. We further categorize the types of
ECN violations and seek potential causes of ECN bleaching.

4.2.2 ECN deployment status in the network. Table 7 shows
the number of ECN bleaching network paths and their IP
addresses. Among 534,077 paths we tested, which exclude
five providers that bleach the ECN field as a matter of policy,
22,305 (4.17%) paths bleach the ECN field. This corresponds
to 1,112 bleaching router IPs among 129,252 IPs. We further
divided ECN violation cases into three cases: (1) bleaching
all ECN bits into zeros, (2) ECT(0) becomes ECT(1), and (3)

8

Input → Output

# of Path

(pct)

# of IP

(pct)

# of

Total Case

534,077

129,252

Violation

# of
Any → 00
10 → 01
11 → 10 or 01

22,305
22,111
171
24

(4.17%)
(99.1%)
(0.76%)
(0.1%)

1,112
1,070
33
9

(0.8%)
(96%)
(2.9%)
(%)

Table 8: Geographic locations of bleaching IPs (BIPs).

Continents
Total
North America
Europe
Asia
South America
Oceania
Africa
Unknown

Total IP # of BIP
1,112
129,252
431
44,617
513
20,525
124
29,171
18
1,900
4
1,057
0
506
22
1,476

Percentage
0.08%
0.97%
2.5%
0.43%
0.95%
0.38%
0.00%
1.56%

CE becomes either ECT(1) or ECT(0). As we expected, more
than 99% of ECN violation cases fall into Case 1 of zeroing
out all ECN bits.

4.2.3 ECN bleaching IPs and locations. To understand
where those bleaching IP addresses are located, we use the
whois command to locate each IP address. Table 8 shows
the geographical distribution of those bleaching points. Eu-
rope and South/North America have proportionally higher
bleaching points than the others.

As we are interested in understanding which ISPs have
those bleaching IP addresses, we compute the bleaching per-
centage for each ISP: how many ECN bleaching routers be-
long to each ISP. Figure 6 shows the percentage of bleach-
ing routers belonging to each ISP. Due to its sensitivity, we
anonymized the names of ISPs. Overall, three ISPs in Europe
ranked 1, 2, and 4 in the bleaching percentage, matching the
ECN-bleaching ratio obtained for public websites in Figure 5.

4.2.4 ECN bleaching network paths per source ISP. By
leveraging our probes in each ISP, we obtain the percentage
of ECN bleaching paths among the total number of paths
initiated from each ISP. Table 9 shows the results. While it is
hard to generalize as we only had a few probes in each ISP,
traffic initiated from probes installed in Rogers and Voda-
fone wired networks and Google Cloud show 100% ECN
bleaching.

A Fresh Look at ECN Traversal in the Wild

, ,

Figure 6: ISPs of bleaching points. The X-axis represents
the ISP name of the bleaching IP addresses. From 1,112 bleach-
ing IP addresses, ISPs in the EU have the highest ECN bleach-
ing percentage.

Table 9: The percentage of bleaching network paths
per source ISP.

Type

Provider

location

Bleaching
Percentage

Wired

Cellular

Cloud

Armstrong
Charter
Comcast
Cox
Rogers
Shaw
Telecom Argentina
University A
Vodafone
AT&T
Tmobile
Verizon
AWS
Google
DigitalOcean
Cloudlab
Cloudlab
Cloudlab

US
US
US
US
US
US
Argentina
US
Germany
US
US
US
16 Locations
10 Locations
8 Locations
Wisconsin
Clemson
Utah

69.73%
53.2%
3.58%
38.2%
100%
19.14%
16.57%
9.41%
100%
48.2%
5.63%
11.06%
2.69%
100%
5.38%
16.53%
5.38%
2.69%

4.2.5 ECN bleaching hops. The bleaching hop number
represents where ECN bleaching occurs in the network path.
Figure 7 shows the percentages of ECN bleaching observed at
relative hops in the paths. We divided a hop number, where
we find ECN bleaching, from the total number of hops until
the destination. Based on our results, we found that a large
portion of bleaching happens in the access network. Also,
if ECN bleaching occurs in the access network, the bleach-
ing hop number is no longer than seven hops. The overall
bleaching hops are well distributed, but 50% of ECN bleach-
ing occurs in 30% of the total distance between the source
and destination.

9

Figure 7: CDF analysis of bleaching distance in the nor-
malized network path. The percentages of ECN bleach-
ing were observed at relative hops in the paths.

Figure 8: Vendor distribution of routers bleaching
ECN. We adapt the technique described in [35], with which
we can identify a router as Cisco, Juniper or Others by com-
paring the IP TTL of the response to an ICMP echo-request
and to a Time exceeded message.

4.2.6 ECN bleaching router signatures. We fingerprinted
the routers with the list of bleaching IPs. The fingerprint
technique we used is from [35], identifying the vendor of a
router based on the response TTL from ICMP echo-request
and Time exceeded message (e.g., 255/64). The IP packet
header contains a time-to-live (TTL) field used to avoid pack-
ets looping forever when a routing loop occurs. This 8-bit
field is set by the originating host/router to an initial value
that is usually and nearly always a power of 2 in the list
32 (or 30), 64, 128, and 255. The TTL field is decremented
by one at each intermediate node along the packet’s path.
Figure 8 shows the distribution of routers bleaching ECN.
As we expected, many bleaching routers are from Cisco and
Juniper.

4.3 Usage of ECN from Traffic Traces

4.3.1 Methodology. We first classify ECN-negotiation suc-
ceeded, failed, and no attempt for each TCP session where
we further check the ECN field in the IP headers. For UDP,

NA-11NA-3LocalNA-7OtherAS-5AS-3AS-2NA-5NA-10NA-8NA-6AS-4NA-9NA-1NA-4AS-1EU-2NA-2EU-3EU-1ISP of Bleaching Point02468Bleaching pct.(%)0.00.20.40.60.81.0Bleaching Hop Count in Paths0.00.20.40.60.81.0CDF6.004.883.35255/255255/64255/3264/6464/32Cisco63.18Juniper22.59Hyoyoung Lim, Seonwoo Kim, Jackson Sippe, Junseon Kim, Greg White, Chul-Ho Lee, Eric Wustrow, Kyunghan Lee, Dirk
Grunwald, and Sangtae Ha
Table 10: Overall results from passive measurement. ECN is negotiated during TCP connection establishment. Note that
the ECN percentage in TCP counts only within successful ECN negotiation flows. For UDP, we only collect the number of
UDP flows with ECN codepoints since UDP does not have ECN negotiation standards.

Type

Port

Protocol

Flow Pct

Succeeded

ECN Negotiation

Failed No Attempt Non-ECT ECT(1)
(0b02)

ALL (21,888,015)
HTTPS
443
HTTP
80
IMAP-SSL
993
SMTP
25
SSH
22
APNs
5223
HTTPS
8443
DNS
53
Android
5228
587
SMTP
ALL (81,076,465)
53
443
123
6881
51413

DNS
QUIC
DNS
Game
P2P

100%
79.87%
6.66%
0.84%
2.13%
1.33%
0.09%
0.47%
0.56%
0.09%
0.62%
100%
59.95%
15.75%
8.53%
0.69%
0.54%

TCP

UDP

4.85%
7.52%
5.56%
8.09%
4.58%
1.87%
4.88% 19.89%
0.32%
5.91%
0.72%
0.28%
0.47%
48.17%
0.2%
18.48%
0.12%
0.01%
12%
0.08%
1.73%
55.79%
-
-
-
-
-
-
-
-
-
-
-
-

87.63%
86.35%
93.55%
75.23%
93.77%
99.00%
51.36%
81.32%
99.87%
87.92%
42.48%
-
-
-
-
-
-

(0b00)

Within ECN Negotiation Succeeded
CE
ECT(0)
(0b11)
(0b10)
0.94% 92.92% 0.005%
6.14%
0.9% 93.04% 0.003%
6.05%
0.4% 93.94% 0.002%
5.66%
0.41% 90.79%
0%
8.8%
2.45% 94.35% 0.163%
3.04%
0%
2.71% 90.68%
6.61%
0%
0% 78.56%
21.44%
0%
0% 93.24%
6.76%
0%
100%
0%
0%
0%
94.4%
0%
5.6%
88.2%
5.6%
0%
6.2%
0.07% 0.005%
99.92%
0.005%
0%
99.99% 0.0001% 0.007%
0%
0.001% 0.275%
99.72%
0.001%
0%
0%
100%
0.006% 0.002% 0.004%
99.99%
0%

100% 0.0004%

0%

we check the usage of the ECN field in the IP header since
UDP does not have any standard for ECN negotiation. Ta-
ble 10 shows overall statistics of traffic traces. We observe
227,538,956 TCP and 81,076,465 UDP flows. We list the top 10
TCP applications and top 5 port UDP applications from these
flows. We map each port number into the corresponding
protocol and the usage percentage, as shown in Table 10.
We also show the percentage of ECN negotiation failed and
succeeded rate in TCP and ECN codepoint for TCP and UDP.

4.3.2 ECN usage in TCP and UDP. We observed that 7.52%
of TCP flows negotiated ECN between source and destina-
tion, 4.85% of flows failed ECN negotiation during the TCP
connection establishment, and the rest (87.6%) did not at-
tempt ECN negotiation. Among the TCP flows of successful
ECN negotiation (7.52%), ECT(0), ECT(1), and CE account
for 92.9%, 0.94%, and 0.005%, respectively. Overall, more than
87% of TCP flows did not attempt ECN negotiation, which is
perplexing considering that most OS versions now support
ECN by default, supported by our active measurement (86.4%
of ECN-enabled Web servers). We found that although most
servers enable ECN for incoming packets, ECN is not re-
quested for outgoing packets by senders by default. Another
interesting observation is that Apple’s APNs (Port 5223) and
the default port for SMTP submission on the modern web

(Port 587) heavily use ECN for their services, while more
than 20% of APNs flows are ECN bleached in IP headers.

From the 81,076,465 UDP flows, we found some portions
of flows are using ECN in ports 53 and 443. QUIC uses UDP
port 443, and DNS uses UDP port 53. QUIC published as
RFC 9001 [16] is a UDP-based, stream-multiplexing, and
encrypted transport protocol. While a recent measurement
study on QUIC [39] did not mention the use of ECN for
QUIC, our results confirm that some QUIC flows are now
using ECN.

5 DISCUSSION
Although our results discover the current ECN deployment
status and violations on the path, there are still some avenues
for future measurement and improvements.
Possible causes of ECN bleaching. We have revealed that
there are paths to mangling ECN, and the bleaching per-
centages vary along with the providers. Aside from two
exceptional cases of bleaching 100%, the ratio of the bleach-
ing ECN field varies from 3.1% to 51.35%. We discuss two
possible explanations for this observation.

There could be a bug in the router software leading to ECN
bleaching. We got this clue from the correlation between
ECN and DSCP in their bleaching. When ECN bleaching
happens, a router overwrites two bits of the ECN field and

10

A Fresh Look at ECN Traversal in the Wild

, ,

the preceding six bits of the DSCP field. These two fields
used a single field named ToS, which is deprecated. To figure
out the cause, we provided the list of bleaching IPs to the
ISPs who own those IPs. One of the ISPs shared information
about a bug in an NPU (Neural Processing Unit) that bleaches
ECN bits when it rewrites DSCP.

We also conjecture that the complete bleaching is caused
by proxies/middleboxes in the provider network. As men-
tioned in Section 4.1.1, we found two providers which com-
pletely bleach ECN. One is a cellular provider, and the other
is a Cloud provider. According to recent papers, the cellular
network uses a performance-enhancing proxy to improve
its network performance. Furthermore, the cloud provider
operates its proxy or middlebox, balancing the load from/to
the data center.

Potential impact of ECN bleaching to L4S performances.
Our measurements have identified multiple ECN bleaching
cases. As mentioned in Section 2.2, L4S is using ECN as a
classifier between a classic queue and an L4S queue. In typ-
ical cases, if a packet has ECT(1) or CE, a scheduler puts
packets into the low latency queue. However, if an interme-
diate router has bleached packets marked with ECT(1), those
packets will be put into the normal queue instead of the low
latency queue. Furthermore, if CE marking is zeroed from
one router, the congestion signal cannot reach the destina-
tion, potentially causing additional latency for the sender to
get the loss signal.
ECN in cellular networks. Recently, ECN-based conges-
tion control algorithms such as ABC [13] and ECLAT [17]
are introduced to fix a large queue problem in cellular net-
works. ABC modifies a typical ECN mechanism to use two-bit
feedback as a congestion signal for increasing or decreas-
ing the congestion window (CWND). This approach allows
the router to explicitly inform how many CWNDs it needs
to lower or raise, rather than implicitly notifying the net-
work congestion in the typical ECN mechanism. As a result,
performance degradation such as throughput loss and large
queuing caused by wide CWND fluctuations is alleviated.
ECLAT strictly limits queuing delays within an acceptable
time by proactively forwarding ECN feedback to ensure that
the CWND does not exceed a certain level for delay guaran-
tees. To do this, ECLAT analyzes ECN policies that determine
when to transmit ECN feedback based on CWND growth
pattern analysis and network calculus. As long as ECN is well
supported without bleaching, these ECN-based techniques
have the potential to improve the network performances in
cellular networks significantly.

6 RELATED WORK
6.1 ECN Measurement Study
Prior measurement studies, as compared in Table 11, have
investigated the server-side ECN capability among the major
web servers as ranked by Alexa and its usability (or traver-
sal) along the paths to the servers [3, 18, 22, 23, 33]. Padhye
et al. [28] first revealed very little (server-side) deployment
ratio of ECN, which is only 1.3% of the probed web servers.
Bauer et al. [3] later presented a comprehensive measure-
ment study of the ECN readiness in the Internet. They found
that ECN was enabled in 14%–17% of web servers and 0.1%–
4% of clients, and 6%–28.4% of paths cleared the ECN field of
packets. Kühlewind et al. [18] also tested 22,487 hosts and
reported that ECN was not usable for 9% of the hosts, due to
the middleboxes along the paths to the hosts.

In a similar vein, Trammell et al. [33] found that when
testing 326,743 hosts that can negotiate the ECN capability
during connection establishment, 0.03% of the hosts (i.e., 107
hosts) experienced the failure of ECN negotiation due to the
paths to the hosts, which mangle the ECE and CWR flags in
the TCP header. In addition, Learmonth et al. [22] developed
a measurement tool named PATHspider to measure the Inter-
net path transparency for various protocol features of TCP
(see Section 3.1.1 for more details). McQuistin et al. [24] con-
ducted an Internet path transparency measurement study for
UDP traffic. Learmonth et al. [21] also presented a measure-
ment study of the ECN capability on mobile access networks,
but this work is limited to checking the ECN negotiation
with public websites. It is worth noting that the ECN nego-
tiation is possible, even if the paths to the websites bleach
the ECN field of IP packets, as the ECN negotiation is done
based on the ECE and CWR flags of the TCP header during
the TCP connection establishment.

6.2 Inferring Proxies in Cellular Networks
There are a few measurement studies on inferring midde-
boxes in the Internet, especially cellular networks. Wang
et al. [36] conducted a measurement study for commercial
cellular networks and observed that various types of packet
modifications happen due to middleboxes. Detal et al. [10] re-
vealed the presence of middleboxes along the Internet paths
from an experimental study using Tracebox. Xu et al. [38]
used an experimental testbed to investigate transparent web
proxies in the four major US mobile providers and see how
they behave in the presence of real web workloads. Chung
et al. [8] presented Luminati, an HTTP proxy network, for
measuring the network infrastructure to demystify the end-
to-end violations. Zullo et al. [40] proposed Mobile Tracebox,
which sends crafted packets to validate intermediate boxes
to see if they modify the packets or alter the path between

11

Hyoyoung Lim, Seonwoo Kim, Jackson Sippe, Junseon Kim, Greg White, Chul-Ho Lee, Eric Wustrow, Kyunghan Lee, Dirk
Grunwald, and Sangtae Ha
: has good results with

: partially meet the criterion;

Table 11: Comparison with prior ECN measurement studies (
details; Blank: not mentioned in the literature).

Methodology

Percentage of ECN-capable web servers (TCP)
Percentage of ECN marking changes
Bleaching localization
End-to-end testing
Aggregated flow data
Cellular networks

2000
[28]

2004
[9]

2011
[3]

2013
[18]

2015
[24]

2017
[21]

1.3% 2.2% 17.2% 29.5% 56.4%
6.3% 10.9% 2.1%

2018
[19]

78.5%
4.7%

2019 Our
[30] work

86.4%
10.8%

source and destination. However, none of the prior stud-
ies have evaluated the ECN violations in wired and cellular
networks.

7 CONCLUSION
In this work, we conducted a large-scale measurement study
on the traversal of ECN in the Internet, involving a wide
range of cellular and wired networks. In particular, we were
able to provide detailed analysis results on the instances
of ECN bleaching, including how often and where in the
network the bleaching instances happen. We observed that
1,112 out of 129,252 routers and 4.17% of paths showed ECN
bleaching, and only few networks bleach as a matter of policy.
We have already shared our measurement results with ISPs
and received a response from some of them, showing their
willingness to fix the issue with ECN bleaching.

REFERENCES
[1] Alexa. 2021. Alexa Top Sites. (2021). https://ats.alexa.com/
[2] Mohammad Alizadeh, Albert Greenberg, David A. Maltz, Jitendra
Padhye, Parveen Patel, Balaji Prabhakar, Sudipta Sengupta, and Mu-
rari Sridharan. 2010. Data Center TCP (DCTCP). In Proceedings
of the ACM SIGCOMM 2010 Conference (SIGCOMM ’10). Associa-
tion for Computing Machinery, New York, NY, USA, 63–74. https:
//doi.org/10.1145/1851182.1851192

[3] Steven Bauer, Robert Beverly, and Arthur Berger. 2011. Measuring the
state of ECN readiness in servers, clients, and routers. In Proceedings of
the 2011 ACM SIGCOMM conference on Internet measurement conference.
171–180.

[4] Stephen E. Bensley, David Thaler, Praveen Balasubramanian, Lars Eg-
gert, and Glenn Judd. 2017. Data Center TCP (DCTCP): TCP Con-
gestion Control for Data Centers. RFC 8257 (2017), 1–17. https:
//doi.org/10.17487/RFC8257

[5] Padma Bhooma. 2017. Experience with enabling ECN on the Internet,
(https://www.ietf.org/proceedings/98/slides/slides-98-maprg-tcp-
ecn-experience-with-enabling-ecn-on-the-internet-padma-bhooma-
00). (2017). https://tiny.one/4ea6rfvv

[6] Bob Briscoe, Koen De Schepper, Marcelo Bagnulo, and Greg White.
2022. Low Latency, Low Loss, Scalable Throughput (L4S) Internet Ser-
vice: Architecture. Internet-Draft draft-ietf-tsvwg-l4s-arch-17. Inter-
net Engineering Task Force. https://datatracker.ietf.org/doc/html/
draft-ietf-tsvwg-l4s-arch-17 Work in Progress.

12

[7] Davide Brunello, Ingemar Johansson, Mustafa Ozger, and Cicek Cavdar.
2021. Low Latency Low Loss Scalable Throughput in 5G Networks.
In 2021 IEEE 93rd Vehicular Technology Conference (VTC2021-Spring).
IEEE, 1–7.

[8] Taejoong Chung, David Choffnes, and Alan Mislove. 2016. Tunneling
for transparency: A large-scale analysis of end-to-end violations in the
Internet. In Proceedings of the 2016 Internet Measurement Conference.
199–213.

[9] Ryan Craven, Robert Beverly, and Mark Allman. 2014. A middlebox-
cooperative TCP for a non end-to-end Internet. ACM SIGCOMM
Computer Communication Review 44, 4 (2014), 151–162.

[10] Gregory Detal, Benjamin Hesmans, Olivier Bonaventure, Yves
Vanaubel, and Benoit Donnet. 2013. Revealing middlebox interfer-
ence with tracebox. In Proceedings of the 2013 conference on Internet
measurement conference. 1–8.

[11] Dmitry Duplyakin, Robert Ricci, Aleksander Maricq, Gary Wong,
Jonathon Duerig, Eric Eide, Leigh Stoller, Mike Hibler, David John-
son, Kirk Webb, Aditya Akella, Kuangching Wang, Glenn Ricart,
Larry Landweber, Chip Elliott, Michael Zink, Emmanuel Cecchet,
Snigdhaswin Kar, and Prabodh Mishra. 2019. The Design and Op-
eration of CloudLab. In Proceedings of USENIX ATC.

[12] G. Fairhurst and M. Welzl. 2017. RFC8087: The Benefits of Using

Explicit Congestion Notification (ECN). (2017).

[13] Prateesh Goyal, Anup Agarwal, Ravi Netravali, Mohammad Alizadeh,
and Hari Balakrishnan. 2020. {ABC}: A Simple Explicit Congestion
Controller for Wireless Networks. In 17th USENIX Symposium on Net-
worked Systems Design and Implementation (NSDI 20). 353–372.

[14] Jake Holland. 2020.

Latency & AQM Observations on the
(https://datatracker.ietf.org/meeting/interim-2020-maprg-

Internet,
01/materials/slides-interim-2020-maprg-01-sessa-latency-aqm-
observations-on-the-internet-01). (2020). https://tiny.one/2p8pabpt

[15] Toke Høiland-Jørgensen. 2016. Bufferbloat.net – Enable ECN. (2016).
https://www.bufferbloat.net/projects/cerowrt/wiki/Enable_ECN/.
[16] Jana Iyengar and Martin Thomson. 2021. QUIC: A UDP-Based
Multiplexed and Secure Transport. RFC 9000. (May 2021). https:
//doi.org/10.17487/RFC9000

[17] Junseon Kim, Youngbin Im, and Kyunghan Lee. 2021. ECLAT: An ECN
Marking System for Latency Guarantee in Cellular Networks. In IEEE
INFOCOM 2021-IEEE Conference on Computer Communications. IEEE,
1–10.

[18] Mirja Kühlewind, Sebastian Neuner, and Brian Trammell. 2013. On
the State of ECN and TCP Options on the Internet. In International
Conference on Passive and Active Network Measurement. Springer, 135–
144.

A Fresh Look at ECN Traversal in the Wild

, ,

Ingemar

[37] Per Willars, Emma Wittenmark, Henrik Ronkainen, Chris-
Johan Strand, Petr Lédl,
Johansson,
Enabling time-critical ap-
https:
(2021).

ter Östberg,
and Dominik Schnieders. 2021.
plications over 5G with rate adaptation.
//www.ericsson.com/en/reports-and-papers/white-papers/
enabling-time-critical-applications-over-5g-with-rate-adaptation

[38] Xing Xu, Yurong Jiang, Tobias Flach, Ethan Katz-Bassett, David
Choffnes, and Ramesh Govindan. 2015.
Investigating transparent
web proxies in cellular networks. In International conference on passive
and active network measurement. Springer, 262–276.

[39] Johannes Zirngibl, Philippe Buschmann, Patrick Sattler, Benedikt
Jaeger, Juliane Aulbach, and Georg Carle. 2021.
It’s over 9000: an-
alyzing early QUIC deployments with the standardization on the hori-
zon. In Proceedings of the 21st ACM Internet Measurement Conference.
261–275.

[40] Raffaele Zullo, Antonio Pescapé, Korian Edeline, and Benoit Donnet.
2017. Hic sunt NATs: Uncovering address translation with a smart
traceroute. In 2017 Network Traffic Measurement and Analysis Confer-
ence (TMA). IEEE, 1–6.

[19] Mirja Kühlewind, Michael Walter, Iain R Learmonth, and Brian Tram-
mell. 2018. Tracing internet path transparency. In 2018 Network Traffic
Measurement and Analysis Conference (TMA). IEEE, 1–7.

[20] Adam Langley. 2008. Probing the viability of TCP extensions. Google,

Inc., Tech. Rep (2008).

[21] Iain R Learmonth, Andra Lutu, Gorry Fairhurst, David Ros, and Özgü
Alay. 2017. Path transparency measurements from the mobile edge
with PATHspider. In 2017 Network Traffic Measurement and Analysis
Conference (TMA). IEEE, 1–6.

[22] Iain R Learmonth, Brian Trammell, Mirja Kuhlewind, and Gorry
Fairhurst. 2016. PATHspider: A tool for active measurement of path
transparency. In Proceedings of the 2016 Applied Networking Research
Workshop. 62–64.

[23] Anna Maria Mandalari, Andra Lutu, Bob Briscoe, Marcelo Bagnulo,
and Ozgu Alay. 2018. Measuring ECN++: good news for++, bad news
for ECN over mobile. IEEE Communications Magazine 56, 3 (2018),
180–186.

[24] Stephen McQuistin and Colin S Perkins. 2015. Is Explicit Congestion
Notification usable with UDP?. In Proceedings of the 2015 Internet
Measurement Conference. 63–69.

[25] Alberto Medina, Mark Allman, and Sally Floyd. 2005. Measuring the
evolution of transport protocols in the Internet. ACM SIGCOMM
Computer Communication Review 35, 2 (2005), 37–52.

[26] Microsoft. 2021. Winsock explicit congestion notification (ECN).
(2021). https://docs.microsoft.com/en-us/windows/win32/winsock/
winsock-ecn.

[27] NOKIA. 2020. Enjoying a real-time Internet, enabled by L4S. (2020).

https://onestore.nokia.com/asset/207072

[28] Jitendra Padhye and Sally Floyd. 2001. Identifying the TCP behavior

of web servers. (2001).

[29] K Ramakrishnan, Sally Floyd, and D Black. 2001. RFC3168: The addition

of explicit congestion notification (ECN) to IP. (2001).

[30] Nils Roddav, Klement Streit, Gabi Dreo Rodosek, and Aiko Pras. 2019.
On the Usage of DSCP and ECN codepoints in internet backbone traffic
traces for IPv4 and IPv6. In 2019 International Symposium on Networks,
Computers and Communications (ISNCC). IEEE, 1–6.

[31] K. Schepper and B. Briscoe. 2020. Identifying Modified Explicit Con-
gestion Notification (ECN) Semantics for Ultra-Low Queuing Delay
(L4S), Work in Progress, draft-ietf-tsvwg-ecn-l4s-id-12. (2020). http:
//www.ietf.org/internet-drafts/draft-ietf-tsvwg-ecn-l4s-id-12.txt
[32] Koen De Schepper, Bob Briscoe, and Greg White. 2022. DualQ
Coupled AQMs for Low Latency, Low Loss and Scalable Throughput
(L4S). Internet-Draft draft-ietf-tsvwg-aqm-dualq-coupled-23. Inter-
net Engineering Task Force. https://datatracker.ietf.org/doc/html/
draft-ietf-tsvwg-aqm-dualq-coupled-23 Work in Progress.

[33] Brian Trammell and Mirja Kühlewind. 2015. Observing Internet
path transparency to support protocol engineering. In Proceedings
of IRTFISOC RAIM Workshop. Proceedings of IRTFISOC RAIM Work-
shop.

[34] Brian Trammell, Mirja Kühlewind, Piet De Vaere, Iain R Learmonth,
and Gorry Fairhurst. 2017. Tracking transport-layer evolution with
pathspider. In Proceedings of the Applied Networking Research Workshop.
20–26.

[35] Yves Vanaubel, Jean-Jacques Pansiot, Pascal Mérindol, and Benoit
Donnet. 2013. Network fingerprinting: TTL-based router signatures.
In Proceedings of the 2013 conference on Internet measurement conference.
369–376.

[36] Zhaoguang Wang, Zhiyun Qian, Qiang Xu, Zhuoqing Mao, and Ming
Zhang. 2011. An untold story of middleboxes in cellular networks.
ACM SIGCOMM Computer Communication Review 41, 4 (2011), 374–
385.

13

Hyoyoung Lim, Seonwoo Kim, Jackson Sippe, Junseon Kim, Greg White, Chul-Ho Lee, Eric Wustrow, Kyunghan Lee, Dirk
Grunwald, and Sangtae Ha

A ETHICS
This work does not raise any ethical issues.

14

