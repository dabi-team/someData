9
1
0
2

t
c
O
5
2

]

M
D
.
s
c
[

1
v
3
5
7
1
1
.
0
1
9
1
:
v
i
X
r
a

Improved Approximation for Maximum Edge Colouring Problem

Department of Computer Science and Automation, Indian Institute of Science, Bangalore

L Sunil Chandran

Department of Computer Science and Automation, Indian Institute of Science, Bangalore

Abhiruk Lahiri

Nitin Singh

IBM India Research Lab, Bangalore

Abstract

The anti-Ramsey number, ar(G, H) is the minimum integer k such that in any edge colouring of G with k
colours there is a rainbow subgraph isomorphic to H, namely, a copy of H with each of its edges assigned
a diﬀerent colour. The notion was introduced by Erd¨os and Simonovits in 1973. Since then the parameter
has been studied extensively. The case when H is a star graph was considered by several graph theorists
from the combinatorial point of view. Recently this case received the attention of researchers from the
algorithm community because of its applications in interface modelling of wireless networks. To the algorithm
community, the problem is known as maximum edge q-colouring problem: Find a coloring of the edges of
G, maximizing the number of colors satisfying the constraint that each vertex spans at most q colors on
It is easy to see that the maximum value of the above optimization problem equals
its incident edges.
ar(G, K1,q+1) − 1.

In this paper we study the maximum edge 2-coloring problem from the approximation algorithm point of
view. The case q = 2 is particularly interesting due to its application in real life problems. Algorithmically,
this problem is known to be NP-hard for q ≥ 2. For the case of q = 2, it is also known that no polynomial
time algorithm can approximate to a factor less than 3/2 assuming the unique games conjecture. Feng et
al. showed a 2-approximation algorithm for this problem. Later Adamaszek and Popa presented a 5/3-
approximation algorithm with the additional assumption that the input graph has a perfect matching. Note
that the obvious but the only known algorithm issues diﬀerent colours to the edges of a maximum matching
(say M ) and diﬀerent colours to the connected components of G \ M . In this article, we give a new analysis
of the aforementioned algorithm leading to an improved approximation bound for triangle-free graphs with
perfect matching. We also show a new lower bound when the input graph is triangle-free. The contribution
of the paper is a completely new, deeper and closer analysis of how the optimum achieves higher number of
colors than the matching based algorithm, mentioned above.

1. Introduction

A k-edge colouring of a graph is a function f : E(G) → [k]. Note that f doesn’t need to be a proper
colouring of the edges, i.e., edges incident to the same vertex may receive the same colour. A subgraph H
of G is called a rainbow subgraph (heterochromatic subgraph) with respect to a k-edge colouring f if all the
edges of H are coloured distinctly. For a pair of graphs G and H the anti-Ramsey number, ar(G, H), denotes
the minimum number of colours k such that in any k-edge colouring of G there exists at least one subgraph
isomorphic to H which is a rainbow subgraph. Equivalently if k′ is the maximum possible number of colours
in an edge colouring f of G such that there exists no rainbow subgraph isomorphic to H with respect to

Email addresses: sunil@iisc.ac.in (L Sunil Chandran), abhiruk@iisc.ac.in (Abhiruk Lahiri), nitisin1@in.ibm.com

(Nitin Singh)

Preprint submitted to arXiv.org

October 28, 2019

 
 
 
 
 
 
f then ar(G, H) = k′ + 1. We call the ﬁrst parameter of ar(G, H), G as the input graph and the second
parameter H as the pattern graph.

The notion, anti-Ramsey number, was introduced by Erd¨os and Simonovits in 1973 [ESS75]. Most of
the initial research on this topic focused on complete graphs (Kn) as the input graph and pattern graphs
that possesses certain nice structure, for example, path, cycle, complete graph etc. The exact expression
of ar(Kn, Pk), when the pattern graph is a path of length k (Pk), was reported in the article written by
Simonovits and S´os [SS84]. Whereas the simple case of the pattern graph is a cycle of length k (Ck) took
years to get solved completely. It was proved by Erd¨os, Simonovits and S´os that ar(Kn, C3) = n − 1 [ESS75].
In the same paper it was conjectured that ar(Kn, Cn) = ( k−2
k−1 )n + O(1) for k ≥ 4. The conjecture was
veriﬁed aﬃrmatively for the case k = 4 by Alon [Alo83]. Later it was studied by Jiang and West [JW03].
Almost thirty years after it was conjectured, Montellano-Ballesteros and Neumann-Lara reported proof of
the statement in 2005 [MN05]. A lower bound considering the pattern graph as the clique of size n − 1
(Kn−1) was reported in [MSTV96]. Schiermeyer and Montellano-Ballesteros together with Neumann-Lara
independently reported the exact value of ar(Kn, Kr) [Sch04, MN02]. In the same article Schiermeyer also
studied the case when pattern graph is a matching. Haas and Young later studied the case when pattern
graph is a perfect matching [HY12]. A tighter bound on matching was reported in the article by Fujita et
al. [FKSS09]. The article by Jiang and West reported bounds on ar(G, H) when H is a tree [JW04]. Jiang
also derived an upper bound on ar(G, H) when H is a complete subdivided graph relating the parameter
ar(G, H) with Tur´an number, that is the maximum cardinality of edges of an n-vertex graph that does not
contain a subgraph H [Jia02a].

2 + 1

The study of anti-Ramsey number was not entirely restricted to the case when the input graph is a
complete graph. Axenovich et al. studied the case when the input graph is a complete bipartite graph
[AJK04]. A t-round variant of anti-Ramsey number was introduced and studied in [BFGR01].

In this paper, we consider the pattern graph as the claw graph, i.e. the star graph with exactly 3 leaves,
denoted by K1,3. Study of anti-Ramsey number where the pattern graph is the claw or more generally the
[MSTV96]. The bound was later improved in
star graph was initiated in the work of Manoussakis et al.
[Jia02b].
In the same article exact value of the bipartite variant of the problem ar(Kn,n, K1,q) was also
reported. Gorgol and Lazuka computed the exact value of ar(G, H) when H is K1,4 with an edge added to
it [GL10]. Montellano-Ballesteros relaxed the condition on input graph and considered any graph as input
in their study [Mon06]. The study of anti-Ramsey number with claw graph as pattern graph was revisited
recently due to its application in modelling channel assignment in a network equipped with a multi-channel
wireless interface [RC05]. They introduced the problem as maximum edge q-colouring problem, thus initiating
the exploration of the algorithmic aspects of this parameter, ar(G, K1,t).

For a graph G, an edge q-colouring of G is an assignment of colours to edges of G such that no more
than q distinct colours are incident at any vertex. An optimal edge q-colouring is one which uses the
maximum number of colours. It is easily seen that the number of colours in maximum edge q-colouring of
G is ar(G, K1,q+1) − 1.

In [AP16], it was reported that the problem is N P -hard for every q ≥ 2. Moreover, they showed that it
is hard to approximate within a factor of (1 + 1/q) for every q ≥ 2, assuming the unique games conjecture. A
simple 2-factor algorithm for maximum 2-colouring problem was reported in [FZW09]. A description of the
algorithm is provided in Algorithm 1. Henceforth we refer this algorithm as the matching based algorithm. In
a recent article [AP16], authors reported a 5/3 approximation factor for the same algorithm assuming that
the input graphs have a perfect matching. Approximation bounds for the matching based algorithm when
the input graph has certain degree constraints were reported in [CMRS18]. A ﬁxed-parameter tractable
algorithm was reported for the case q = 2 in [GKM13].

In the present article, our focus is on the case when q = 2, and when the graph G has a perfect
matching. It is worth mentioning here, although Montellano-Ballesteros reported bounds on ar(G, K1,q),
their expression is not enough to draw any inference in this particular scenario. Their technique is useful
for deriving bounds when the input graph has certain regular structures such as complete graph, complete
t-partite graph, hypercube etc.

2

Algorithm 1 Matching based algorithm for edge 2-colouring
Require: A graph G which has perfect matching.

1: Compute the maximum matching M of G.
2: Assign distinct colour to each edge of M .
3: Assign a new colour to each component of G \ M .
4: return The colour assigned graph.

2. Key Notation and Main Result

Throughout this article (except possibly the last section), we consider G to be a graph which has a
perfect matching M . We use C1, . . . , Ch to denote the components of G\M , where h is the number of such
components.

Let C be an optimal edge 2-colouring of G using colours [c] := {1, . . . , c}. Let CM and CN denote the
colours used in the matching M , and those not used in the matching M respectively. Clearly CM ⊎ CN = [c].
We call colours in CM as matching colours and colours in CN as non-matching colours. For an edge e, we
denote the colour assigned to e in colouring C by col(e). For a vertex u, the colour assigned to the matching
edge at u is denoted by mcol(u).

For a colour i ∈ [c], let G[i] denote the subgraph spanned by the edges coloured i. We note that, in an
optimal colouring C, G[i] is connected for all colours i ∈ [c], since otherwise we can increase the number of
colours. For a non-matching colour i, G[i] is a subgraph of a unique component Cj. For convenience, we often
refer to a connected subgraph spanned by edges of a colour as colour component. Subgraphs corresponding to
matching colours are called matching colour components, while those corresponding to non matching colours
are called non matching colour components. With the notation as discussed, the following are the main
contributions of this paper:

Theorem 1. Let G be a graph having a perfect matching M . Let OP T denote the number of colors in an
optimal max 2-edge coloring of G. Then:

(a) OP T ≤ 5

3 (|M | + h) [AP16].

(b) OP T ≤ 8

5 (|M | + h) when G is additionally triangle-free.

Corollary 1. Algorithm 1 guarantees an approximation factor 5/3 for graphs with perfect matching and an
approximation factor of 8/5 for triangle free graphs with perfect matching.

3. Overview

We start with an overview of some structural observations about an optimal colouring which help us
establish the approximation factor. Let C be one of the components of G\M and let Hi = G[i] and Hj = G[j]
be connected subgraphs of C spanned by some non-matching colours i and j. Note that V (Hi) ∩ V (Hj) = φ.
Our next lemma shows that any Hi-Hj path contains two distinct vertices u and v such that the matching
edges incident at u and v have the same colour. Let us call (u, v) as the colour repetition pair.

Lemma 1. Let u0u1 · · · uk be a path in G\M such that mcol(u0) = col(u0u1) and mcol(uk) = col(uk−1uk).
Then there exist 0 ≤ i < j ≤ k such that mcol(ui) = mcol(uj).

Proof. For k = 1 the lemma is obvious. Let k ≥ 2. Let j be maximal so that the path u0 · · · uj is
monochromatic. If mcol(u0) = mcol(uj) then 0 and j satisfy the assertion of the lemma. Otherwise, clearly
j < k and col(ujuj+1) = mcol(uj). Hence, the lemma follows by applying induction on the path uj · · · uk.

We observe that any Hi-Hj path satisﬁes the conditions in Lemma 1 at its end-points. This is because
if (u, v) is an edge coming out of the non-matching colour component Hi, with u ∈ Hi and v /∈ Hi, col(uv)
has to be the same as mcol(u). Now suppose C has k such non-matching colours. Then we can ﬁnd at least
k − 1 paths connecting all of these colour components. If these paths are all disjoint (as in Figure 1), we
would have k − 1 colour repetition pairs by applying the Lemma 1 on each of these paths. Intuitively, a

3

H1

H2

H4

H3

H5

H6

Figure 1: Circles denote subgraphs formed by non-matching colours. The ﬁgure shows the case when all the subgraphs can be
connected by disjoint paths between them

lot of such pairs should imply “repetition” of colours among matching edges, and hence help us bound the
number of distinct matching colours. In later sections, we try to quantify the repetition implied by these
colour repetition pairs. Our focus here and in the next section is to exhibit a large number of such pairs.

Evidently, the non-matching components may not be nicely connected as in Figure 1. In the Section
4, we show that one can still ﬁnd k − 1 distinct colour repetition pairs from a component containing k
non-matching colours. In the Section 5, we estimate quantitatively the repetition in matching colours. The
result is given in Lemma 8. We use it to prove our main theorem in the same section.

4. Colour Repetition Pairs

We begin by generalizing the Lemma 1 to rooted trees, where the endpoint conditions in the Lemma
1 are satisﬁed at the root and the leaves of the tree. For a tree T , let r(T ) and l(T ) denote the root and
the set of leaves of T respectively. Further, we assume that T has a depth ﬁrst ordering, where dfs(v; T )
denotes the index of vertex v ∈ V (T ) in the ordering. We assume that when v is a descendant of u in T , we
have dfs(u; T ) < dfs(v; T ). Thus the root has minimum index. We use the depth ﬁrst ordering to deﬁne an
ordering (cid:22) on vertices of T , where u (cid:22) v if dfs(u; T ) ≥ dfs(v; T ). We will use u ≺ v to denote u (cid:22) v with
u 6= v. Note that this ordering contains the usual hierarchical ordering with root as the maximum element.
This is same as the post order traversal of trees found in the literature. We are now in a position to state
our next lemma.

Lemma 2. Let T , |V (T )| > 1, be a rooted tree in G\M with r := r(T ) and L := l(T ). Further for
u ∈ L ∪ {r}, the colour of the edges in T incident at u is the same as the matching colour at u. Then we
have a set P := {(ui, vi) : i = 1, . . . , |L|} of pairs of vertices of T such that:

(a) For i 6= j, we have ui 6= uj.

(b) ui ≺ vi for all 1 ≤ i ≤ |L|.

(c) mcol(ui) = mcol(vi) for all 1 ≤ i ≤ |L|.

(d) The path uiT vi is monochromatic, with edges coloured mcol(ui) for all 1 ≤ i ≤ |L|.

(e) For an internal vertex z in the path uiT vi, we have mcol(z) 6= mcol(ui) for 1 ≤ i ≤ |L|.

(f) For i 6= j and uivi, ujvj ∈ M , the paths uiT vi and ujT vj do not share an internal vertex.

We call the tuples in P as the repetition pairs. Statements (b) and (c) can be seen as generalization of the
notion of colour repetition pairs for paths in a tree. As in the proof of Lemma 1, for a repetition pair (u, v),
v was the vertex with the same incident matching colour as u but with an index to the right of v closer to
root. Similarly in a tree, we have vi’s “closer” to the root in depth ﬁrst ordering than ui’s. The statements
(d)-(f) establish further structural properties of these repetition pairs that are needed subsequently.

4

Proof of Lemma 2. We ﬁrst prove the Lemma for the case when T is monochromatic. Let a be the colour
of all the edges of T . From the colouring constraints that T satisﬁes at the root and the leaves, it follows
that mcol(u) = a for u ∈ L ∪ {r}. For u ∈ L, deﬁne f (u) to be the closest vertex to u on the path uT r such
that mcol(f (u)) = mcol(u) = a. Observe that f (u) exists for each u as the root r satisﬁes mcol(r) = a. Let
P := {(u, f (u)) : u ∈ L}. Then P is trivially seen to satisfy statements (a)-(e). To prove (f), we assume the
contrapositive, i.e, there exist u 6= v such that uf (u) ∈ M , vf (v) ∈ M and the paths u-f (u) and v-f (v) in T
have a common internal vertex. Let w be the common internal vertex. Then u and v are descendants of w,
while f (u), f (v) are ancestors of w. But f (u) and f (v) are the ﬁrst vertices on uT r and vT r respectively with
matching colour as a. Since the paths uT r and vT r share the sub-path wT r, it must be that f (u) = f (v).
But then their matching partners must also be the same, i.e., u = v, which contradicts the assumption that
u 6= v. This contradiction proves (f).

Next consider the case when T is not monochromatic. We proceed by induction. Let v be a vertex of
minimum height, such that v witnesses edges of two colours in T . Let a and b be the colours incident at
v. Without loss of generality, let a be the colour of the matching edge at v, i.e., mcol(v) = a. Let Tv be
the subtree of T rooted at v. Let Ta and Tb be the subtrees of Tv consisting of edges of colours a and b
respectively. We consider three cases, viz:

Ta is non-empty and Tb is also non-empty: Let La denote the leaves in Ta. Now Ta is monochromatic and
satisﬁes the end point constraints required by the lemma. Thus we have the set Pa with |Pa| = |La| of pairs
of vertices of Ta satisfying the statements (a)-(f) because of the previous case. Let T ′ be the tree obtained
from T by deleting all descendants of v in Ta. Let L′ be the set of leaves in T ′. Notice that La ⊎ L′ = L.
Now, by induction hypothesis, we have a set P ′ of pairs of vertices of T ′ satisfying (a)-(f). Thus both Pa and
P ′ satisfy the statements (a)-(f) with respect to the trees Ta and T ′. We claim that P = Pa ∪ P ′ satisﬁes
(a)-(f) for the tree T . It is trivially seen that (a)-(e) hold. To see that (f) also holds we observe that only
vertex that is possibly shared between Ta and T ′ is u, and u is not an internal vertex of any u′Tav′ path in
Ta where (u′, v′) ∈ Pa.

Ta is non-empty and Tb is empty: Let w0 = v and let w0, w1, . . . wj be the subpath of vT r such that wj has
degree more than 2 in T and height of wj is minimum among all the vertices with this property. Let the
subtree rooted at wj which contains v be T1. Let T ′ be the tree obtained from T by removing all descendants
of wj in T1 (possibly T ′ = ∅). Since wj is not an internal vertex of T ′ we see that T ′ satisﬁes the end point
constraints required by the lemma. Let leaves of T ′ be L′. Observe that L = L′ ⊎ La. Now, by induction
hypothesis, we have a set P ′ of pairs of vertices of T ′ satisfying (a)-(f) and a set Pa of pairs of vertices of Ta
satisfying (a)-(f). We claim that P = Pa ∪ P ′ satisﬁes (a)-(f) for the tree T . It is trivially seen that (a)-(e)
hold. To see that (f) also holds we observe that only vertex that is possibly shared between Ta and T ′ is wj,
and wj is not an internal vertex of any u′Tav′ path in Ta where (u′, v′) ∈ Pa.

Ta is empty: Clearly, Tb must be non-empty in this case. Let Lb denote the leaves in Tb. Note that the colour
of incident edges at v in Tb is not the same as the matching colour at v, and hence we cannot deﬁne the
pairs (u, f (u)) as in the monochromatic case. Let w be the leaf such that dfs(w; T ) is maximum in Lb. For
each u ∈ Lb, u 6= w deﬁne g(u) as the closest vertex to u on the path uTbw such that mcol(g(u)) = b. Again,
observe that g(u) exists for all u ∈ Lb\{w} because mcol(u) = mcol(w) = b. Deﬁne Pb = {(u, g(u)) : u ∈
Lb\{w}}. Statements (a)-(e) follow for Pb (w.r.t the tree Tb) almost by deﬁnition of function g. Statement
(f) can be proven in the following way. There is a unique path between any two pairs of vertices. Then
at some point, the two paths have a vertex in common. Thus, the pairs Pb satisfy (a)-(f) for the tree Tb,
except that the number of pairs is one short of the number of leaves in Tb. We recover the deﬁcit in the
remaining tree. As before, let T ′ be the tree obtained from T by removing the descendants of v in Tb. Let L′
denote the leaves in T ′. Since Ta was empty and v witnesses two colours, we have v ∈ L′ and it is incident
with an a-coloured edge in T ′. By induction hypothesis, we have pairs P ′ of vertices of T ′ with |P ′| = |L′|
satisfying statements (a)-(f). Again, we claim that P = Pb ∪ P ′ satisfy the requirements of the lemma for
T . Statements (a)-(e) are easily veriﬁed. For (f), we note that v is a leaf of T ′ and hence is not an internal
vertex of any path u′T ′v′ in T ′ for (u′, v′) ∈ P ′. Thus, (f) also holds for the pairs P . Finally, we note that
|P | = |L|, as we compensate the loss of leaf w in Tb with an extra leaf v in T ′ since |Pb| = |Lb| − 1 and
|P ′| = |L| − |Lb| + 1.

Lemma 2 can be easily extended to forest consisting of rooted trees. Let F be a forest containing rooted

5

trees. Let r(F ) denote the set of roots of trees in the forest, and l(F ) denote the set of leaves in the forest
F . We deﬁne a partial order (cid:22) on the forest which restricts to the (total) order (cid:22)T (as deﬁned earlier) on
each component tree T . If two vertices belong to diﬀerent component trees, they are incomparable under (cid:22).
As before u ≺ v denotes u (cid:22) v, but u 6= v. We now state the extension of Lemma 2 to forests.

Lemma 3. Let F be a forest in G\M with R := r(F ) and L := l(F ). Suppose that for each u ∈ R ∪ L,
the colour of edges in F incident at u is the same as the matching colour at u. Then, there exists set
P = {(ui, vi) : i = 1, . . . , |L|} of pairs of vertices of F satisfying:

(a) For i 6= j, we have ui 6= uj.

(b) ui ≺ vi for all 1 ≤ i ≤ |L|. In particular, the path uiF vi exists for all 1 ≤ i ≤ |L|.

(c) mcol(ui) = mcol(vi) for all 1 ≤ i ≤ |L|.

(d) The path uiF vi is monochromatic, with edges coloured mcol(ui) for all 1 ≤ i ≤ |L|.

(e) For an internal vertex z in the path uiF vi, we have mcol(z) 6= mcol(ui) for 1 ≤ i ≤ |L|.

(f) For i 6= j and uivi, ujvj ∈ M , the paths uiF vi and ujF vj do not share an internal vertex.

Proof. The proof follows by taking union of pairs satisfying Lemma 2 for each component tree in the forest.

Let us return to the question of ﬁnding k − 1 color repetition pairs in a component C ∈ G \ M containing
k non-matching color components. We could use Lemma 1, when the non-matching components can be
connected using pairwise disjoint paths as in Figure 1. Lemma 3 allows us to exhibit k − 1 repetition
pairs, as long as we have a non-matching color component H ∗ from which we can reach all other k − 1
non-matching color components without passing through other colour components. Figure 2 illustrates such
an arrangement, and the corresponding forest F to which we can apply Lemma 3. Note that root of both
trees in the forest is in H ∗. The H ∗Hi path doesn’t intersect with any other colour component other than
H ∗ and Hi. For each i 6= j, we can construct a Hi-Hj path avoiding vertices of other colour component Hl
where l 6∈ {i, j}.

H ∗

F1

F2

H1

H2

H3

H6

H4

H5

Figure 2: Non-matching colour components which can be connected in a tree-like fashion from a component. The dashed lines
denote paths in G\M , where we have not explicitly marked all vertices outside the non-matching components. The requisite
number of repetition pairs are obtained by applying Lemma 3 to the forest consisting of dashed trees.

6

Our ﬁnal technical eﬀort in this section is to show that we can ﬁnd k − 1 repetition pairs in a component
with k non-matching colours, even if we do not have a non-matching colour component, from which all other
non-matching components are accessible without passing through some vertex of an intermediate component.
The situation is illustrated in Figure 3.

H1

H2

H3

H4

H8

H9

H5

H6

H7

H10

H11

Figure 3: There is no component which can directly reach all other components. Choosing H1 as root, the ﬁrst level forest
F1 consists of two trees indicated by thin dashed lines. Choosing leaf components H3, H7 in F1 as root components, we reach
other components using forest F2 denoted by thick lines.

4.1. Cascading sequence of forests

We call an ordered pair (T1, T2) of rooted trees to be a cascading pair if T1 and T2 are vertex disjoint
or r(T2) ∈ l(T1) and |V (T1) ∩ V (T2)| = 1. We call F = {F1, . . . , Fl} a cascading sequence of forests if (i)
V (Fi) ∩ V (Fj ) = ∅ for |i − j| ≥ 2 and (ii) For, Ti ∈ Fi and Ti+1 ∈ Fi+1, the pair (Ti, Ti+1) is a cascading
pair for 1 ≤ i ≤ l − 1.

Let F be a cascading sequence of forests. We use the notation V (F ) := SF ∈F V (F ) to denote the vertices
in the collection F . We call v ∈ V (F ) to be an internal vertex of F if v is an internal vertex of some (at
most one) forest F ∈ F . The notation Int(F ) will denote the set of internal vertices in the collection F . We
record the following easy observation as a lemma.

Lemma 4. Let F be a cascading sequence of forests. Then for any two distinct vertices x, y, there exists at
most one forest F ∈ F such that F contains the x-y path.

Deﬁnition 1 (Order on cascading sequence of forests). Let F be an cascading sequence of forests. We
deﬁne the partial order (cid:22)F on SF ∈F V (F ) as: x (cid:22)F y if and only if x (cid:22)F y for some (at-most one) F ∈ F .
Otherwise x and y are incomparable under (cid:22)F . Transitive closure of this relation is the order we consider.
(By abuse of notation, we will use (cid:22)F for transitive closure of this relation.)

For a cascading sequence of forests F and vertices x and y, the notation xF y denotes the path xF y if
there exists a forest (at-most one) F ∈ F such that F contains x-y path. We now state a version of Lemma
3 for a cascading sequence of forests.

Lemma 5. Let F be a cascading sequence of forests in G\M . Then, there exist pairs P = {(ui, vi) : i =
1, . . . , L} of vertices in V (F ) where L := PF ∈F |l(F )|, satisfying:

7

(a) For 1 ≤ i < j ≤ L, we have ui 6= uj.

(b) ui ≺F vi for all 1 ≤ i ≤ L. In particular for all 1 ≤ i ≤ L, the path uiF vi exists.

(c) mcol(ui) = mcol(vi) for all 1 ≤ i ≤ L.

(d) The path uiF vi is monochromatic, with edges coloured mcol(ui) for all 1 ≤ i ≤ L.

(e) For an internal vertex z in the path uiF vi, we have mcol(z) 6= mcol(ui) for 1 ≤ i ≤ L.

(f) For i 6= j and uivi, ujvj ∈ M , the paths uiF vi and ujF vj do not share an internal vertex.

Proof. The proof follows by taking union of pairs satisfying Lemma 3 for each forest in the collection F .
The properties (a)-(e) are easily veriﬁed. The property (f) holds for the union of pairs because the limited
intersection of trees between diﬀerent forests implies that a vertex can be an internal vertex in at most one
forest.

We will exhibit a cascading sequence of forests in G\M which essentially link up all the non matching

color components.

Lemma 6. There exists a collection F of cascading sequence of forests in G\M such that:

(a) PF ∈F |l(F )| = P
(b) Int(F ) ∩ V (H) = ∅ for all non-matching colour components H.

h
i=1(ki − 1).

(c) for all F ∈ F and for all u ∈ r(F ) ∪ l(F ), the colour of edges in F incident at u is the same as the

matching colour at u.

|l(F )| =

Proof. For each m = 1, . . . , h, we will exhibit a cascading sequence of forests Fm in Cm satisfying PF ∈Fm
km − 1 and Int(Fm) ∩ H = ∅ for all non-matching color components H contained in Cm. Then it is easily
seen that F := ∪h
m=1Fm satisﬁes the requirements of the lemma. Let C := Cm be an arbitrary but ﬁxed
component of G\M . Let H1, . . . , Hk (where k = km) be the non-matching color components contained
in C. Let VH := ∪k
i=1V (Hi). Let F1 be a maximal forest with i) r(F1) ⊆ V (H1), ii) |F1 ∩ Hj| ≤ 1 for
j ∈ [k] \ {1} iii) |l(F1)| is maximal under this condition. Suppose forests F1, . . . , Fj have been constructed
such that they form a cascading sequence. Deﬁne F ′
j)∩V (Hi) 6= ∅} and let
Kj := [k]\Ij. Intuitively, Ij is the indices of non-matching color components already visited by the collection
j, while Kj is the indices which have not been visited so far. Let Fj+1 be the maximal forest in C such
F
that r(Fj+1) ⊆ ∪i∈Ij V (Hi), l(Fj+1) ⊆ ∪i∈Kj V (Hi) and Int(Fj+1) ∩ VH = ∅. Note that by connectedness
of C, Fj+1 is non-empty for Ij 6= [k]. Thus Ij ⊂ Ij+1 unless Ij = [k]. Let t be minimal such that It = [k].
Then Fm = {F1, . . . , Ft} is a cascading sequence of forests in C with Int(Fm) ∩ VH = ∅. To complete the
t
proof, we need to show that P
j=1 |l(Fi)| = k − 1. This follows from the fact that for each i ∈ {2, . . . , k},
there exists minimum j such that i ∈ Ij . Then l(Fj) ∩ V (Hi) 6= ∅. In other words, for each i ∈ {2, . . . , k},
there exists a forest Fj which has a leaf in the component Hi. The claim follows.

j := {F1, . . . , Fj}, Ij := {i : V (F ′

′

The above proof can be intuitively understood using Figure 3, where the forest F1 consists of two dashed
trees, and the forest F2 consists of the two solid trees. The collection F = {F1, F2} is the cascading sequence
for the arrangement in Figure 3.

5. Repetition Content

In the previous section we exhibited pairs of vertices having the same matching colour incident at them.
Intuitively, a lot of such pairs should imply certain amount of repetition of colours among matching edges.
In this section we attempt to quantitatively estimate the repetition.

Call a set S ⊆ V (G) M -monochromatic if all the edges in M incident with vertices in S have the same
colour. Let i(S; M ) denote the number of edges in M which are incident with a vertex in S. For an M -
monochromatic set S, let repetition content of S, denoted by rep(S) be deﬁned as rep(S) := i(S; M ) − 1.
For |S| = k, we observe that (k − 2)/2 ≤ rep(S) ≤ k − 1. The lower bound is attained when every vertex in
S has its matching partner also in S. The upper bound is obtained for sets where no edge in M has both
vertices in S. Following is an easy consequence of the deﬁnition of repetition content.

8

Lemma 7. For j ∈ CM (the set of matching colours in C), let S1, S2, . . . S|CM | be a collection of M -
monochromatic sets such that matching edges incident with Sj are coloured j. Then |CM | ≤ |M |−Pj∈CM

rep(Sj).

5.1. Repetition by matching colours

We recall the notation from Section 2. Throughout the remainder of this section let F denote a cascading
sequence of forests satisfying Lemma 6. Let V (F ) denote the vertex set SF ∈F V (F ). Then by Lemma 5,
h
there exists set P of repetition pairs of vertices V (F ) with |P | = P
i=1(ki − 1), where ki is the number of
non-matching colour components in component Ci of G\M .

We consider a partition of the pairs P according to the incident matching colour. Let Pj := {(u, v) ∈
P : mcol(u) = mcol(v) = j} for j ∈ CM . Let Cj ⊆ Pj , j ∈ CM be the repetition pairs consisting of matching
pairs, i.e. Cj = {(u, v) ∈ Pj : uv ∈ M }. Let Uj := Π1(Pj ) and Vj := Π2(Pj ) denote the projections of the
set Pj on ﬁrst and second coordinate. Let Sj := Uj ∪ Vj . We use rep(Sj ) as the repetition associated with
colour j ∈ CM . We call a colour j ∈ CM as high if rep(Sj) ≥ (|Pj | − |Cj|)/2. Otherwise, we call the colour
as low. Let H and L denote the high and low colours respectively.

Lemma 8. Let the sets P, H, L and Pj , Cj, Uj, Vj , Sj, j ∈ CM be as deﬁned in this section. Then we have,

(a) |Sj| ≥ |Pj | + 1 for all j ∈ CM .

(b) rep(Sj) ≥ (|Pj | − 1)/2 for all j ∈ CM .

(c) If Cj 6= ∅ then j ∈ H.

(d) For j ∈ L, all vertices in Sj have their matching partner in M also in Sj. Furthermore, Sj has a unique

maximum element v∗ with respect to ordering (cid:22)F .

(e) |Sj| ≥ 4 for j ∈ L.

Proof. From part (a) of Lemma 5, we have |Uj| = |Pj |. Let v∗ be a maximal element in Sj under (cid:22)F .
Clearly, by part (b) of Lemma 5, v∗ 6∈ Uj. Thus |Sj| ≥ |Uj| + 1 = |Pj | + 1. This proves claim (a). Since
rep(S) ≥ (|S| − 2)/2 for all S ⊆ V (G), it follows using claim (a) that rep(Sj) ≥ (|Pj| − 1)/2 for all j ∈ CM .
The claim (b) is thus proved. Claim (c) also follows from claim (b) and deﬁnition of H. For claim (d), observe
that for j ∈ L, we have by claim (c), |Cj| = 0, and hence rep(Sj) < |Pj|/2 from the deﬁnition of low. Also
by claim (b), we have rep(Sj) ≥ (|Pj | − 1)/2. Since rep(Sj) is an integer, we conclude rep(Sj) = (|Pj| − 1)/2,
and hence |Sj| ≤ |Pj| + 1. Since no element Uj can be maximum, together with claim (a), we conclude
|Sj| = |Pj| + 1 and thus Sj = Uj ∪ {v∗}. Clearly then v∗ is the unique maximal element in Sj. Also since Sj
satisﬁes rep(Sj) = (|Sj| − 2)/2, each element in Sj must have its matching partner in M in Sj. This proves
claim (d). From claim (d) we see that |Sj| ≥ 4 or |Sj| = 2 for j ∈ L. To prove claim (e), we rule out the
possibility |Sj| = 2. Note that |Sj| = 2 implies Pj = {(u, v)} where uv ∈ M . But then Cj = {(u, v)}, which
contradicts the assumption j ∈ L by claim (c). This proves claim (e).

Lemma 9. If G is triangle free and j ∈ L we have either (a) |Sj| ≥ 6, or (b) |Sj| = 4 and there exist
vertices u, v in Sj with (u, v) ∈ Pj such that the path uF v has an interior vertex zuv.

Proof. From parts (d) and (e) of Lemma 8 we see that if |Sj| < 6, we must have |Sj| = 4. Let v∗ be the
maximum element of Sj according to the order (cid:22)F . Clearly v∗ 6∈ Uj. Let u be the matching partner of v∗.
Clearly (u, v∗) 6∈ Pj as Cj = ∅. Let z be a vertex such that (u, z) ∈ Pj and let w be the matching partner
of z. Recalling v∗ is the unique maximum element of Sj, Sj = Uj ∪ {v∗}. Thus Sj = {u, z, w, v∗}. We also
must have (z, v∗) ∈ Pj. Since (u, z) ∈ Pj and (z, v∗) ∈ Pj, by part (e) of Lemma 5, w 6∈ uF z and w 6∈ zF v∗.
Thus w 6∈ uF v∗. Since G is triangle free, one of the paths uF z, zF v∗ must have an internal vertex, thus
satisfying condition (b) of the lemma.

Lemma 10. Let (u, v) ∈ Pi and (z, w) ∈ Pj for some i 6= j ∈ CM . Then the paths uF v and zF w do not
share an internal vertex.

Proof. If possible, let x be an internal vertex of both uF v and zF w. By part (e) of Lemma 5, mcol(x) 6= i
and mcol(x) 6= j. This is a contradiction, as i and j are the only two colors incident at x. Thus, the lemma
is proved.

9

Finally, we prove our main result:

Proof of Theorem 1. We have |C| = |CM | + |CN |. From Lemma 7, we have,

|C| ≤ |M | − X
j∈CM

rep(Sj) + |CN |.

Moreover from Lemma 8(b) we have,

X
j∈CM

rep(Sj) = X
j∈H

rep(Sj) + X
j∈L

rep(Sj )

|Pj| − |Cj|
2

≥ X
j∈H

= X
j∈CM

|Pj|
2

− X
j∈H

+ X
j∈L
|Cj |
2

|Pj| − 1
2

−

|L|
2

Observing that Pj∈CM

|Pj| = P

h
i=1(ki − 1) = |CN | − h, from (1) and (2), we have,

|C| ≤ |CN | + |M | −

|CN | − h
2

+ Pj∈H |Cj|
2

+

|L|
2

(1)

(2)

(3)

Let ∆ := Pj∈H |Cj|. Note that the path uF v contains at least one internal vertex for (u, v) ∈ Sj∈H Cj.
From Lemma 10 and part (f) of Lemma 5 it follows that all these internal vertices are distinct. Thus,
the collection F has at least ∆ internal vertices. Since F was chosen according to Lemma 6 and each
non-matching color component contains at least two vertices, we have:

Substituting, |CN | ≤ (n − ∆)/2 in (3), we have:

2|CN | + ∆ ≤ n.

|C| ≤

3|M |
2

+

∆ + 2|L|
4

+

h
2

(4)

(5)

Since each j ∈ L determines at least 2 matching edges of the same color we have |CM | ≤ |M |−|L|. Combining
with (4) we have:

|C| ≤ 2|M | −

∆ + 2|L|
2

.

(6)

Equating the upperbounds on |C| in (5) and (6), we obtain |C| ≤ 5
part (a) of the theorem.

3 (|M | + h). This completes the proof of

Now, consider the case when G is additionally triangle free. In this case we write L = L1 ⊎ L2 where
L1 = {j ∈ L : |Sj| ≥ 6} and L2 = {j ∈ L : |Sj| = 4}. Since each j ∈ L1 determines at least 3 matching edges
of the same color, and each j ∈ L2 determines at least 2 matching edges of the same color, we conclude that
|CM | ≤ |M | − 2|L1| − |L2|. Together with trivial bound |CN | ≤ |M |, we have:

Also, the equivalent of Equation (3) for this case can be written as:

|C| ≤ 2|M | − 2|L1| − |L2|.

|C| ≤ |CN | + |M | −

|CN | − h
2

+ Pj∈H |Cj|
2

+

|L1| + |L2|
2

(7)

(8)

Finally, we exploit the triangle free property of the graph to account for more internal vertices. Observing
that each uF v path now has at least two internal vertices for (u, v) ∈ Sj∈H Cj, and further by Lemma 9,
for every j ∈ L2 there is a vertex zj which is an internal vertex of F . As before, these internal vertices are
distinct. Thus we have at least 2∆ + |L2| internal vertices in F . Thus we have:

2|CN | + 2∆ + |L2| ≤ n.

(9)

10

Substituting |CN | ≤ (n − 2∆ − |L2|)/2 in (8) we get (recall ∆ := Pj∈H |Cj|),

|C| ≤

3|M |
2

+

2|L1| + |L2|
4

+

h
2

(10)

From Equations (7) and (10), by equating the upper bounds, we get |C| ≤ 8
(b) of the theorem.

5 (|M | + h), which proves the part

6. A Lower Bound for the Matching Based Algorithm

In this section, we show a triangle free graph with perfect matching establishing a lower bound of 58/37
on the approximability of Algorithm 1 on such graphs. The factor 58/37 sits roughly midway between the
known lower bound of 3/2 on the approximability of max edge 2-coloring, and the approximation factor of
8/5 shown for Algorithm 1 in this paper.

Let us consider the graph G on 72 vertices as shown in the Figure 4. Clearly, the graph has a perfect
matching which is marked with the bold lines.
If we delete the matching edges we get one connected
component. So the Algorithm 1 outputs 37 colours. On the other hand if we colour the graph by below
mentioned colouring scheme, we can use 58 colours to colour the entire graph.
Colouring Scheme: For every matched edges that are represented with a bold straight line in the Figure
4 and two adjacent edges on its either sides in the drawing, use diﬀerent colours to colour them. For the top
six edges represented with vertical straight lines in the drawing, colour them with diﬀerent colours. Now
delete all the coloured edges. The remaining graph has seven connected components. Colour all edges in a
connected component with same colours.

With the above colouring scheme we use total of 3 × 15 + 6 + 7 = 58 colours. It is easy to verify that it

is a valid colouring scheme.

Figure 4: The Algorithm 1 exhibits an approximation factor of 58/37 when runs on the above graph that has a perfect matching.
The matching edges are shown in bold lines.

References

[AJK04] Maria Axenovich, Tao Jiang, and Andr´e K¨undgen. Bipartite anti-Ramsey numbers of cycles.

Journal of Graph Theory, 47(1):9–28, 2004.

[Alo83] Noga Alon. On a conjecture of Erd¨os, Simonovits, and S´os concerning anti-Ramsey theorems.

Journal of Graph Theory, 7(1):91–94, 1983.

[AP16] Anna Adamaszek and Alexandru Popa. Approximation and hardness results for the maximum

edge q-coloring problem. Journal of Discrete Algorithms, 38-41:1–8, 2016.

11

[BFGR01] Aart Blokhuis, Ralph J. Faudree, Andr´as Gy´arf´as, and Mikl´os Ruszink´o. Anti-Ramsey colorings

in several rounds. Journal of Combinatorial Theory, Ser. B, 82(1):1–18, 2001.

[CMRS18] L. Sunil Chandran, Rogers Mathew, Deepak Rajendraprasad, and Nitin Singh. Approximation
bounds on maximum edge 2-coloring of dense graphs. CoRR, abs/1810.00624, 2018.

[ESS75] Paul Erd¨os, Mikl´os Simonovits, and Vera T. S´os. Anti-Ramsey theorems. Inﬁnite and ﬁnite sets
(Colloquium, Keszthely, 1973; dedicated to P. Erd¨os on his 60th birthday), 10(II):633–643, 1975.

[FKSS09] Shinya Fujita, Atsushi Kaneko, Ingo Schiermeyer, and Kazuhiro Suzuki. A rainbow k-matching
in the complete graph with r colors. Electronic Journal of Combinatorics, 16(1), 2009.

[FMO10] Shinya Fujita, Colton Magnant, and Kenta Ozeki. Rainbow generalizations of Ramsey theory:

A survey. Graphs and Combinatorics, 26(1):1–30, 2010.

[FZW09] Wangsen Feng, Li’ang Zhang, and Hanpin Wang. Approximation algorithm for maximum edge

coloring. Theoretical Computer Science, 410(11):1022–1029, 2009.

[GKM13] Prachi Goyal, Vikram Kamat, and Neeldhara Misra. On the parameterized complexity of the
maximum edge 2-coloring problem. In Mathematical Foundations of Computer Science 2013 -
38th International Symposium, MFCS 2013, Klosterneuburg, Austria, August 26-30, 2013., pages
492–503, 2013.

[GL10] Izolda Gorgol and Ewa Lazuka. Rainbow numbers for small stars with one edge added. Discus-

siones Mathematicae Graph Theory, 30(4):555–562, 2010.

[HY12] Ruth Haas and Michael Young. The anti-Ramsey number of perfect matching. Discrete Mathe-

matics, 312(5):933–937, 2012.

[Jia02a] Tao Jiang. Anti-Ramsey numbers of subdivided graphs. Journal of Combinatorial Theory, Ser.

B, 85(2):361–366, 2002.

[Jia02b] Tao Jiang. Edge-colorings with no large polychromatic stars. Graphs and Combinatorics,

18(2):303–308, 2002.

[JW03] Tao Jiang and Douglas B. West. On the Erd¨os-Simonovits-S´os conjecture about the anti-Ramsey

number of a cycle. Combinatorics, Probability & Computing, 12(5-6):585–598, 2003.

[JW04] Tao Jiang and Douglas B. West. Edge-colorings of complete graphs that avoid polychromatic

trees. Discrete Mathematics, 274(1-3):137–145, 2004.

[MN00] Juan Jos´e Montellano-Ballesteros and Victor Neumann-Lara. Totally multicoloured cycles. Elec-

tronic Notes in Discrete Mathematics, 5:239–242, 2000.

[MN02] Juan Jos´e Montellano-Ballesteros and Victor Neumann-Lara. An anti-Ramsey theorem. Combi-

natorica, 22(3):445–449, 2002.

[MN03] Juan Jos´e Montellano-Ballesteros and Victor Neumann-Lara. A linear heterochromatic number

of graphs. Graphs and Combinatorics, 19(4):533–536, 2003.

[MN05] Juan Jos´e Montellano-Ballesteros and Victor Neumann-Lara. An anti-Ramsey theorem on cycles.

Graphs and Combinatorics, 21(3):343–354, 2005.

[Mon06] Juan Jos´e Montellano-Ballesteros. On totally multicolored stars. Journal of Graph Theory,

51(3):225–243, 2006.

[MSTV96] Yannis Manoussakis, M. Spyratos, Zsolt Tuza, and Margit Voigt. Minimal colorings for properly

colored subgraphs. Graphs and Combinatorics, 12(1):345–360, 1996.

12

[RC05] Ashish Raniwala and Tzi-cker Chiueh. Architecture and algorithms for an IEEE 802.11-based
multi-channel wireless mesh network. In INFOCOM 2005. 24th Annual Joint Conference of the
IEEE Computer and Communications Societies, 13-17 March 2005, Miami, FL, USA, pages
2223–2234, 2005.

[Sch04] Ingo Schiermeyer. Rainbow numbers for matchings and complete graphs. Discrete Mathematics,

286(1-2):157–162, 2004.

[SS84] Mikl´os Simonovits and Vera T. S´os. On restricted colourings of Kn. Combinatorica, 4(1):101–110,

1984.

13

