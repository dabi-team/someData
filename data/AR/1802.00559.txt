Unlabelled Sensing: A Sparse Bayesian Learning
Approach

Ranjitha Prasad

TCS Innovation Labs, Gurgoan, India
{ranjitha.prasad}@tcs.com

8
1
0
2

b
e
F
2

]
T
I
.
s
c
[

1
v
9
5
5
0
0
.
2
0
8
1
:
v
i
X
r
a

Abstract— We address the recovery of sparse vectors in an
overcomplete, linear and noisy multiple measurement framework,
where the measurement matrix is known upto a permutation
of its rows. We derive sparse Bayesian learning (SBL) based
updates for joint recovery of the unknown sparse vectors and
the sensing order, represented using a permutation matrix.
We model the sparse vectors using multiple uncorrelated and
correlated vectors, and in particular, we use the ﬁrst order
AR model for the correlated sparse vectors. We propose the
Permutation-MSBL and a Kalman ﬁltering based Permutation-
KSBL algorithm for low-complexity joint recovery of the sparse
vectors and the permutation matrix. The novelty of this work
is in providing a simple update step for the permutation matrix
using the rearrangement inequality. We demonstrate the mean
square error and the permutation recovery performance of the
proposed algorithms as compared to a compressed sensing based
scheme.

EDICS: SAS-STAT, MLSAS-SPARSE, MLSAS-BAYES,

SAS-ADAP

I. INTRODUCTION AND SYSTEM MODEL

Efﬁcient techniques for reconstructing sparse signals from
an overcomplete system of linear equations using compressed
sensing and Bayesian methods have received considerable
attention in recent years [1]–[3]. In a general multiple mea-
the observation matrix Y ∈ RN ×M is
surement setting,
obtained as a weighted combination of the columns of the
measurement matrix Φ, where the weights are given by the
entries of M sparse columns in X ∈ RL×M [4], i.e.,

Y = ΦX + N,
(1)
where each column nm of the additive noise matrix N ∈
RN ×M is modelled as a zero mean additive white Gaussian
vector distributed as nm ∼ N (0, σ2IN ). In (1), the columns of
X have identical sparsity proﬁles, i.e., X has K non-zero rows,
where K is the sparsity or the number of non-zero entries in
each column of X.

Typically, the task of sparse recovery involves the recovery
of the locations and the magnitude of the non-zero entries
of the sparse vector when the observation matrix is perfectly
known. In the case when the observation matrix is unknown or
partially known, several papers in literature have addressed the
problem of jointly recovering the observation matrix and the
sparse vectors [5]–[8]. In this work, we address a special case
of a partially known observation matrix, wherein the true order,
or the sensor permutation of rows of the observation matrix
is unknown. This problem is called as the sensor permutation
(SP) problem or unlabelled sensing [9]–[11].

mapping in robotics, multi-target tracking, archaeological mea-
surements, clock jitter [9], [12], and more recently in device-
to-device communications [13]. Sparse linear unlabelled sens-
ing problem using compressed sensing based techniques was
explored recently. In [14], the authors consider the problem of
joint SP dictionary and sparse vector estimation and discuss
several results pertaining to its computational intractibility. In
[10], the authors address the identiﬁability of X in a noiseless
setting, and show that when the number of observations is
twice the sparsity level, exact recovery is possible with prob-
ability 1. In [9], the authors provide sharp conditions on the
signal to noise ratio (SNR) for exact permutation recovery, and
also derive necessary conditions for approximate permutation
recovery when the entries of the observation matrix are drawn
from a standard Gaussian matrix in the noisy linear setting.
For unlabeled sensing problems where the relative order of the
subset of observations is known, an alternating maximization
algorithm is proposed in [12]. A branch and bound based
solution to the noiseless MMV SP problem was proposed
in [11]. In [15], the authors propose a least squares and
a methods of moments based estimator for recovering the
true sensor permutation. In a slightly different SP problem
setting, algorithms to recover the unknown sparse vector and
parameters from binary quantized measurements are proposed
in [16]. However, none of the above mentioned works consider
a Bayesian framework where the sparse matrix X is drawn
from a given distribution.

We propose a novel Bayesian approach for joint multiple
sparse vector recovery and sensor permutation recovery in an
MMV framework. In particular, we solve the SP problem in an
SBL framework [2], [17], and derive the update equations for
the unknown sparse vectors and the permutation matrices. The
observations ym ∈ RN ×1 is linearly related to the unknown
permutation matrix Pm and the sparse vectors in X as

ym = PmΦxm + nm,
xm+1 = ρxm + um+1, m = 1, 2, . . . , M.

(2)

Here Pm ∈ PN , where PN is the set of all N × N permu-
tation matrices. The prior in the context of SBL is given by
M
m=1 p(xm; Γ), where Γ = diag(γ(1), . . . , γ(L))
p(X; Γ) =
and

Q

L

p(xm; Γ) =

(2πγ(l))− 1

2 exp

−

Yl=1

|xm(l)|2
2γ(l) !

.

(3)

Unlabelled sensing problems are encountered in several
applications such as simultaneous location approximation and

Note that if γ(l) → 0, then the corresponding x(l) → 0 [2],
[17], and γ is K-sparse. In (2), we employ a ﬁrst order auto-

 
 
 
 
 
 
 
regressive (AR) model for modelling the correlation between
adjacent columns, xm and xm+1 in X, where 0 ≤ ρ ≤ 1
is the AR coefﬁcient and um is the driving noise which is
typically modeled as um ∼ N (0, (1 − ρ2)Γ). The columns of
X in (2) are statistically independent of each other if ρ = 0.
In the model given above, the sparsity of driving noise um in
(2) is coupled to the sparsity in γ, i.e., if γ(l) → 0, then the
corresponding um(l) → 0.

In the sequel, we propose SBL based algorithms as a
solution to the SP problem and demonstrate the performance
using Monte carlo simulations. To the best of our knowledge,
this is the ﬁrst work that addresses the SP problem in a
Bayesian framework.

Notation: Boldface small letters denote vectors and bold-
face capital letters denote matrices. The symbol diag(a) de-
notes a diagonal matrix with entries given by a. The pdf of
the random variable X is represented as p(x) and the random
variables and deterministic parameters in the pdf are separated
using a semicolon. The ith entry of a and the (i, j)th entry of
A are represented as a(i) and A(i, j), respectively.

II. P-MSBL: UNCORRELATED SPARSE COLUMNS OF X
We propose the Permutation-MSBL (P-MSBL) algorithm
for joint recovery of the unknown permutation matrix P and
multiple sparse vectors in X, when ρ = 0. We treat X as
the hidden variable, and (Y, X) as the complete information,
and both γ and P = [P1, . . . , PM ] are unknown parameters.
We obtain the maximum likelihood estimate of the unknown
parameters using the SBL algorithm as follows:

E : Q

γ, P|γ(r), P(r)

= E

X|Y;γ (r),P(r) [log p(Y, X; γ, P)]

(cid:16)

(cid:17)

M : γ(r+1), P(r+1) = arg max

Q

γ, P|γ(r), P(r)

,

γ∈RL×1

+ ,P∈PM
N

(cid:16)

(cid:17)

(4)

where P M
N is the M dimensional manifold of PN . The E-step
above requires the posterior density of the sparse vector using
the r-th parameter updates given by γ(r) and P(r). Using the
likelihood given by

p(ym|xm; Pm) =

1

(2πσ2)M/2 exp

and the prior density in (3),
computed as p

xm|ym; γ(r), P(r)
m
(cid:16)

(cid:17)
Σm = Γ(r) − Γ(r)ΦT (P(r)
µm = σ−2ΣmΦT (P(r)

−

kym − PmΦxmk2
2σ2

,

(cid:18)

(cid:19)
(5)
the posterior distribution is
∼ N (µm, Σm), where

m )T Λ−1

m P(r)

m ΦΓ(r)

m )T ym, m ∈ [M ],

(6)

m ΦΓ(r)ΦT (P(r)

σ2IN + P(r)
(cid:16)

where Λm =
. In the above
equations, µm is the MAP estimate of xm for the r-th update
of the hyperparameters given by Γ(r) = diag(γ(r)). In the
noiseless case the SBL updates can be derived by applying
the limit σ2 → 0 [4].

m )T

(cid:17)

The key aspect of the M-step given in (4) is that
objective function is the sum of two independent functions

the

Q

γ, Pm|γ(r), P(r)
m
(cid:16)

(cid:17)

= Q(γ|γ(r))+

M

m=1
X

Q(Pm|P(r)

m ), (7)

2

X|Y;γ (r),P(r)
m

m ) = E

where Q(Pm|P(r)
Q(γ|γ(r)) = E
independent optimization w.r.t. γ and Pm for m ∈ [M ].
Optimization w.r.t. Pm: The optimization problem to obtain
the permutation matrix update, P(r+1)

[log p(Y|X; Pm)] and
[log p(X; γ)], hence admitting

m , is as follows

X|Y;γ (r),P(r)
m

P(r+1)
m

E

X|Y;γ (r),P(r) [log p(Y|X; Pm)]

= arg max
Pm∈PN
E
X|Y;γ (r),P(r) [kym − PmΦxmk2
2]

c − E

X|Y;γ (r),P(r) [yT

mPmΦxm],

= arg min
Pm∈PN
= arg min
Pm∈PN

(8)

(9)

(10)

where c consists of terms independent of Pm for m ∈ [M ].
We obtain (10) using PT
mPm = IN . From the E-step, we have
E

X|Y;γ (r),P(r) [xm] = µm, and hence, (10) is re-written as

P(r+1)
m

= arg max
Pm∈PN

yT
mPmΦµm.

(11)

In summary, the solution to the above optimization problem
maximizes the m-th term which is the product of two vectors
ym and Φµm, i.e., we need to ﬁnd the permutation matrix Pm
which permutes the rows of Φµm (or columns of yT
m) such
that the product of two vectors is maximized. The solution for
(11) can be obtained by invoking the rearrangement inequality
[9], [18]. This inequality states that if a = (a1, a2, . . . , an) and
b = (b1, b2, . . . , bn) are two n-tuples of real numbers, and
σa and σb are permutations on a and b such that σa(a1) ≥
. . . ≥ σa(an) and σb(b1) ≥ . . . ≥ σb(bn), and σ′
b be
arbitrary permutations of natural numbers on a and b, then

a and σ′

σa(ai)σb(bi) ≥

a(ai)σ′
σ′

b(bi).

(12)

i
X

i
X

In other words, for two vectors a and b, the sum of pairwise
products is maximum if we pair the largest element of the
ﬁrst vector with the largest element of the second vector, the
second largest element of the ﬁrst vector with the second
largest element of the second vector, and so on.

Invoking the rearrangement inequality in this context, the
permutation matrix for every m is obtained by sorting the
vectors ym and Φµm in descending (or ascending) order,
leading to M permutation matrices. If P1 = . . . = PM = ¯P,
we obtain the following optimization problem in P:

¯P(r+1) = arg max

¯P∈PN

m=1
X

M

yT
m

¯PΦµm.

(13)

It is possible to solve the above problem by obtaining a
convex relaxation of (13) by replacing PN by its convex hull.
However, it is shown that in practice, this strategy performs
poorly and fails to identify the true permutation [11], [19]. For
the EM algorithm to converge, it is sufﬁcient to ensure that the
likelihood increases in every iteration of the algorithm, i.e.,

Q

γ(r+1), ¯P(r+1)|γ(r), ¯P(r)
(cid:16)

(cid:17)

≥ Q

γ, ¯P|γ(r), ¯P(r)

(cid:16)

.
(14)

(cid:17)

In order to ensure a likelihood increase, we propose a low-
complexity albeit an approximate solution to (11) by choosing
M candidate permutation matrices that maximize each of the
M terms in (13). Among the M candidate solutions, we

choose the permutation matrix that leads to the largest value
of (13), and hence the likelihood.
Optimization w.r.t. γ: The optimization problem w.r.t. γ is
given by

γ(r+1) = arg max
γ∈RL×1
+

E

X|Y;γ (r),P(r) [log p(X; γ)].

(15)

M

−

Optimizing (15) w.r.t. γ(l) ∈ [L], we obtain the following:

γ(r+1)(l) =

1
M

M

Σm(l, l) + kµm(l)k2
2

,

(16)

m=1
X

(cid:0)

(cid:1)

where Σm(l, l) and µm(l) are the l-th diagonal component
and the l-th component of Σm and µm, respectively.

In the following section, we derive the Kalman ﬁltering
based SBL-based updates for the system model given in (2).

III. P-KSBL: CORRELATED SPARSE COLUMNS OF X

We design SBL based algorithms for the joint recovery of
the correlated sparse vectors and the permutation matrices.
Speciﬁcally, we consider the scenario when 0 < ρ ≤ 1, and
provide SBL updates which exploit the correlation between
the columns of X. Note that for ρ = 0, the Kalman ﬁlter
based update equations are same as in (6). The E- and the
M-steps of the SBL algorithm are as given in (4). If the
measurement matrices and the hyperparameters are known,
the model in (2) admits a Kalman ﬁlter based estimation and
tracking framework. This motivates us to design such a ﬁlter
using SBL updates. Accordingly, we observe that in the E-
step given in (4), posterior distribution of the sparse vector,
p(X|Y; γ(r), P(r)),
is obtained using the recursive update
equations given by [5]

(4), the M-step results in the following:

Q(γ, P|γ(r), P(r)) =

E

X|Y;γ (r),P(r) [c′ −

M

kyj −Pj Φj xj k2
σ2

j=1
P
(xj −ρxj−1)T Γ−1(xj −ρxj−1)
(1−ρ2)

j=2
P

3

− M log |Γ|

− xT

1 Γ−1x1],

(24)

where c′ is a constant independent of γ and P. The expression
above is a sum of terms which are independent functions of
γ and P, denoted as Q(γ|γ(r)
m ) and Q(P|P(r)), respectively.
The update of the hyperparameters for the (r + 1)-th iteration
can be computed from the optimization problem given by

γ(r+1) = arg max
γ∈RL×1
+

E

X|Y;γ (r) [−M log |Γ|

M

−

j=2
X

(xj − ρxj−1)T Γ−1(xj − ρxj−1)
(1 − ρ2)

− xT

1 Γ−1x1]. (25)

The above expression can be simpliﬁed as

γ(r+1)(l) =

1
M

M

(

j=2
X

Mj|M (l,l)
(1−ρ2) + M1|M (l, l)),

(26)

, Σj|M + ˆxj|M ˆxT

j−1|M ) − 2ρRe(Σj,j−1|M + ˆxj|M ˆxT
, Σ1|M + ˆx1|M ˆxT
, E

j|M + ρ2(Σj−1|M +
for l ∈ [L], Mj|M
ˆxj−1|M ˆxT
and
j−1|M )
M1|M
X|Y;γ (r) [xj],
and covariance E
j|M for
j = 1, . . . , M is obtained from (17)-(23). Furthermore,
E
j−1] , Σj,j−1|M + ˆxj|M ˆxT
j−1|M for j =
M, M − 1, . . . , 2, which we obtain from [20] as follows:

j ] , Σj|M + ˆxj|M ˆxT

1|M . Here, ˆxj|M

X|Y;γ (r) [xj xT

X|Y;γ (r) [xj xT

Σj−1,j−2|M = Σj−1|j−1JT

j−2 + JT

j−1(Σj,j−1|M

for m = 1, . . . , M do
Prediction: ˆxm|m−1 = ρˆxm−1|m−1
Σm|m−1 = ρ2Σm−1|m−1 + (1 − ρ2)Γ(r)
Filtering: Gm = Σm|m−1ΦT
m

−ρΣj−1|j−1)Jj−2.

(27)

(17)

(18)

The above recursion is initialized using ΣM,M−1|M = ρ(IL −
GM PM ΦM )ΣM−1|M−1.

The expression for Q(Pm|P(r)

m ) for m = 1, . . . , M can be

−1

(cid:16)

(P(r)

m )T

m(P(r)

m ΦmΣm|m−1ΦT

σ2IN + P(r)
ˆxm|m = ˆxm|m−1 + Gm(ym − P(r)
Σm|m = (IL − GmP(r)
for j = M, M − 1, . . . , 2 do
Smoothing: ˆxj−1|M = ˆxj−1|j−1 + Jj−1(ˆxj|M − ˆxj|j−1)

m )T
m Φm ˆxm|m−1)
end

m Φm)Σm|m−1

(cid:17)

(19)

(20)

(21)

Σj−1|M = Σj−1|j−1 + Jj−1(Σj|M − Σj|j−1)JT
end.

j−1

(22)

(23)

simpliﬁed as follows:

[c −

m ) = E

kym − PmΦmxmk2
σ2

Q(Pm|P(r)

X|Y;γ (r),P(r)
m

].
(28)
,
m ,γ (r) [xm] which is computed in the E-step. The
m ) in (28) leads to the following

From the above, we see that the M-step requires ˆxm|m
E
X|Y;P(r)
maximization of Q(Pm|P(r)
optimization problem for Pm:

P(r+1)
m

= arg max
Pm∈PN

yT
mPmΦmˆxm|m.

(29)

Here Jj−1 , ρΣj−1|j−1Σ−1
j|j−1 and Gm is the Kalman gain,
and the symbols ˆxm|m−1, Σm|m−1, etc. have their usual
meanings as in the KF literature [20]. The above procedure is
initialized by setting ˆx0|0 = 0 and Σ0|0 = Γ(0).

In order to obtain an ML estimate of γ and the permutation
matrix Pm in the M-step, the mean and covariance of the
posterior distribution computed in the E-step is utilized. From

Again, we invoke the rearrangement inequality to solve the
above optimization problem as detailed in the previous section.
Thus, the proposed algorithm learns γ and Pm in the M-
step and provides low-complexity and recursive estimates of
the sparse vector in the E-step. In the following section, we
demonstrate the performance of the proposed algorithms using
experimental results.

IV. SIMULATION RESULTS

In this section, we describe the experimental setup used
to demonstrate the mean square error (MSE) and the per-
mutation recovery performance (success rate) of the proposed
algorithms. We consider M sparse vectors of L = 100, with
sparsity given by K = 4. We assume the perfect knowledge
of the noise variance (σ2) which we vary to capture a wide
spectrum of signal to noise ratio. The matrix Φ is generated
as an overcomplete (N < L) random Gaussian measurement
matrix, with N = 30. In order to demonstrate the performance
of the P-KSBL algorithm, we generate the correlated sparse
vectors according to the AR model given in (2) with ρ =
0.95. The experiment is repeated for 1000 trials. We ﬁx
the maximum number of iterations of the SBL algorithm as
500. The algorithms proposed in this paper use EM-based
updates, and hence, they have a local minima convergence
guarantee [21].

It is well-known that the SBL algorithm is particularly
sensitive to the choice of the initialization parameters, Γ(0)
and P(0). Using a non-informative choice such as Γ(0) = IL
is sufﬁcient for ensuring good solutions for γ, when the
measurement matrix is known [22]. However, in the current
scenario, the choice of P(0) is not very straightforward. In
order to obtain P(0), we assume that P consists of a few
anchor rows which are known in advance. The anchor rows
matrix PB consists of B anchor rows of P [23]. Although the
assumption on anchor rows is a departure from the derivation
in Sec. II, an unfavourable choice of P(0) could have deﬂected
the γ updates away from the true value.

In Fig. 1, we demonstrate the MSE performance of the
proposed P-MSBL (when P1 6= P2 6= . . . 6= PM and P1 =
P2 = . . . = PM = P) and P-KSBL. Here, P(0)
m is as obtained
above, Γ(0) = IL and B anchor rows of Pm are assumed
to be known apriori. As expected, the performance of the
proposed algorithms improves as the number of anchor rows of
P increases. The performance also improves as M increases.
We also see that in the case when permutation matrices are
unequal, the advantage of averaging over permutation matrices
is not available, and hence increasing M does not improve
performance.

In Fig. 2, the permutation recovery performance of the
proposed techniques for M = 20 and M = 10 at SNR=
60dB is demonstrated. Both, in the presence and absence of
correlation, SBL can recover the permutations perfectly if 50%
of the permutation matrix consists of anchor rows, and the
permutations are recovered with probability of 0.8 if 30%
of the permutation matrix consists of anchor rows. It can be
observed that the permutation recovery performance improves
with M . As a baseline scheme, we employ the Simultaneous
OMP (S-OMP) technique to obtain an estimate of X using
PB. After obtaining the estimate of the sparse vector, the
permutation matrix can be obtained by performing the M-
step of the EM algorithm once. As the algorithm proceeds,
γ and Pm are estimated jointly and as a result, the accurately
decoded rows of Pm helps to improve the estimates of γ.
Hence, P-MSBL and P-KSBL perform better compared to
schemes that separately estimate Pm and γ, such as S-OMP.

4

100

10-2

10-4

E
S
M

10-6

10

20

30

40
SNR

102

100

10-2

10-4

E
S
M

50

60

70

33% known
50% known
66% known
Fully known

10-6

10

20

30

40
SNR

50

60

70

100

10-2

10-4

E
S
M

10-6

10

20

30

40
SNR

50

60

70

Fig. 1. Plot of the MSE performance of ˆX(Y) (Top:P-MSBL (P1 = P2 =
. . . = PM = P), Middle: P-MSBL (P1 6= P2 6= . . . 6= PM ), Bottom:
P-KSBL (P1 = P2 = . . . = PM = P) for N = 30.

e
t
a
R
s
s
e
c
c
u
S

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

0

e
t
a
R
s
s
e
c
c
u
S

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

0

P-MSBL, M = 20
P-MSBL, M = 10
S-OMP, M = 20
S-OMP, M = 10

20

40

60

80

100

Percentage of Success

P-KSBL, M = 20
P-KSBL, M = 10

20

40

60

80

100

Percentage of Success

Fig. 2. Plot of the success rate of ˆX(Y) (Left:P-MSBL and S-OMP, Right:
P-KSBL) for SN R = 60dB and varying values of M .

V. CONCLUSIONS

We proposed novel SBL-based algorithms for recovery of a
sparse matrix from a noisy, linear overcomplete MMV model,
where the measurement matrix is known upto a permutation of
rows. In particular, we considered two scenarios: a matrix with
uncorrelated sparse columns and correlated sparse columns.
We modelled the correlated sparse vectors using a ﬁrst order
AR model and devised a Kalman based SBL approach for joint
recovery of the sparse vector and the unknown permutation
matrix. An important aspect of the proposed algorithms is
that the joint optimization problem in the hyperparameters
of the sparse vector and the permutation matrix separates
as two independent optimization problems. Furthermore, we
simpliﬁed the permutation recovery problem by invoking the
rearrangement inequality. Using Monte Carlo simulations, we
showed that proposed techniques are capable of learning the
permutation matrix using a small number of known anchor
rows in P.

5

REFERENCES

[1] D. L. Donoho, “Compressed sensing,” IEEE Trans. Inf. Theory, vol. 52,

no. 4, pp. 1289–1306, 2006.

[2] M. E. Tipping, “The relevance vector machine,” in Advances in Neural

Information Processing Systems, vol. 12, 2000.

[3] S. Ji, Y. Xue, and L. Carin, “Bayesian compressive sensing,” IEEE Trans.

Signal Process., vol. 56, no. 6, pp. 2346–2356, 2008.

[4] D. Wipf and B. Rao, “An empirical Bayesian strategy for solving
the simultaneous sparse approximation problem,” IEEE Trans. Signal
Process., vol. 55, no. 7, pp. 3704–3716, 2007.

[5] R. Prasad, C. R. Murthy, and B. D. Rao, “Joint approximately sparse
channel estimation and data detection in OFDM systems using sparse
bayesian learning,” IEEE Trans. Signal Process., vol. 62, no. 14, pp.
3591–3603, 2014.

[6] J. T. Parker, V. Cevher, and P. Schniter, “Compressive sensing under
matrix uncertainties: An approximate message passing approach,” in
2011 Conference Record of the Forty Fifth Asilomar Conference on
Signals, Systems and Computers (ASILOMAR).
IEEE, 2011, pp. 804–
808.

[7] R. Prasad, C. R. Murthy, and B. D. Rao, “Joint channel estimation and
data detection in MIMO-OFDM systems: A sparse bayesian learning
approach,” IEEE Trans. Signal Process., vol. 63, no. 20, pp. 5369–5382,
2015.

[8] M. Sadeghi, M. Babaie-Zadeh, and C. Jutten, “Dictionary learning
for sparse representation: A novel approach,” IEEE Signal Processing
Letters, vol. 20, no. 12, pp. 1195–1198, 2013.

[9] A. Pananjady, M. J. Wainwright, and T. A. Courtade, “Linear regression
limits,”

with an unknown permutation: Statistical and computational
arXiv preprint arXiv:1608.02902, 2016.

[10] J. Unnikrishnan, S. Haghighatshoar, and M. Vetterli, “Unlabeled sensing
with random linear measurements,” arXiv preprint arXiv:1512.00115,
2015.

[11] V. Emiya, A. Bonnefoy, L. Daudet, and R. Gribonval, “Compressed
sensing with unknown sensor permutation,” in 2014 IEEE International
Conference on Acoustics, Speech and Signal Processing (ICASSP).
IEEE, 2014, pp. 1040–1044.

[12] S. Haghighatshoar and G. Caire, “Signal recovery from unlabeled

samples,” arXiv preprint arXiv:1701.08701, 2017.

[13] D. Wieruch, P. Jung, T. Wirth, and A. Dekorsy, “Determining user
speciﬁc spectrum usage via sparse channel characteristics,” in 2015 49th
Asilomar Conference on Signals, Systems and Computers.
IEEE, 2015,
pp. 155–159.

[14] A. M. Tillmann, “On the computational intractability of exact and ap-
proximate dictionary learning,” IEEE Signal Processing Letters, vol. 22,
no. 1, pp. 45–49, 2015.

[15] A. Abid, A. Poon, and J. Zou, “Linear regression with shufﬂed labels,”

arXiv preprint arXiv:1705.01342, 2017.

[16] G. Wang, J. Zhu, R. S. Blum, P. Braca, and Z. Xu, “Maximum likelihood
signal amplitude estimation based on permuted blocks of differently
in noise,” arXiv preprint
binary quantized observations of a signal
arXiv:1706.01174, 2017.

[17] D. P. Wipf and B. D. Rao, “Sparse Bayesian learning for basis selection,”
IEEE Trans. Signal Process., vol. 52, no. 8, pp. 2153–2164, 2004.
[18] G. H. Hardy, J. E. Littlewood, and G. P´olya, Inequalities. Cambridge

university press, 1952.

[19] M. Yaghoobi, T. Blumensath, and M. E. Davies, “Dictionary learning
for sparse approximations with the majorization method,” IEEE Trans-
actions on Signal Processing, vol. 57, no. 6, pp. 2178–2191, 2009.
[20] Z. Ghahramani and G. E. Hinton, “Parameter estimation for linear

dynamical systems,” Tech. Rep., 1996.

[21] G. McLachlan and T. Krishnan, The EM algorithm and extensions.

Wiley New York, 1997, vol. 274.

[22] R. Prasad and C. R. Murthy, “Bayesian learning for joint sparse OFDM
IEEE,

channel estimation and data detection,” in Proc. Globecom.
2010, pp. 1–6.

[23] M. Marques, M. Stoˇsi´c, and J. Costeira, “Subspace matching: Unique
solution to point matching with geometric constraints,” in Computer
Vision, 2009 IEEE 12th International Conference on.
IEEE, 2009, pp.
1288–1294.

