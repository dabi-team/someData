Quality-Aware Real-Time Augmented Reality
Visualization under Delay Constraints

Rhoan Lee
Ewha Womans University
Seoul, Korea
leerhoan@ewhain.net

Soohyun Park
Korea University
Seoul, Korea
soohyun828@korea.ac.kr

Soyi Jung
Hallym University
Chuncheon, Korea
sjung@hallym.ac.kr

Joongheon Kim
Korea University
Seoul, Korea
joongheon@korea.ac.kr

2
2
0
2

y
a
M
1

]

C
D
.
s
c
[

1
v
7
0
4
0
0
.
5
0
2
2
:
v
i
X
r
a

Abstract—Augmented reality (AR) is one of emerging applica-
tions in modern multimedia systems research. Due to intensive
time-consuming computations for AR visualization in mobile de-
vices, quality-aware real-time computing under delay constraints
is essentially required. Inspired by Lyapunov optimization frame-
work, this paper proposes a time-average quality maximization
method for the AR visualization under delay considerations.

I. INTRODUCTION

(a) Octree Depth: 5
(d = 5)

(b) Octree Depth: 6
(d = 6)

(c) Octree Depth: 7
(d = 7)

In modern multimedia research trends, there have been a
lot of attentions to augmented reality (AR) in terms of visual-
ization, system designs, and network-based applications [1].
In order to realize real-time AR visualization for various
emerging applications in mobile and distributed devices, delay-
aware methods are fundamentally required along with quality-
aware visual computing [2], [3].

In order to satisfy the delay requirements in real-time AR
visualization, this paper proposes a novel quality-aware real-
time AR visualization under the theory of Lyapunov optimiza-
tion [4]. Based on the Lyapunov optimization, time-average
utility maximization can be modeled under the consideration
of queueing delays/stability. Therefore, this theory is widely
applicable for the problems which deal with the tradeoff
between utility maximization and stability, e.g., energy-delay
tradeoff in networks [5], quality-delay tradeoff in stream-
ing [6], and accuracy-delay tradeoff in learning systems [7].
In real-time AR visualization, the quality of visualization
can be controlled and quantiﬁable by Octree depth, as shown
in Fig. 1. Therefore, the proposed algorithm in this paper aims
at the maximization of time-average AR visualization quality
by controlling the Octree depth under stability. Furthermore,
it has been shown that the proposed algorithm is also low-
complexity and fully distributed. Through data-intensive per-
formance evaluation, it has been conﬁrmed that the proposed
algorithm achieves desired performance improvements.

II. QUALITY-AWARE AR VISUALIZATION

Algorithm Details. We aim to determine the optimal Octree
depths over time in order to maximize the time-average real-
time quality for the AR visualization subject to rendering

Fig. 1: AR visualization resolution depending on Octree depth.

delays. This can be formulated as,

max :

lim
t→∞

subject to lim
t→∞

1
t

1
t

t−1
(cid:88)

τ =0
t−1
(cid:88)

τ =0

Pa(d(τ ))

(1)

Q(τ ) < ∞ (delay constraint)

(2)

where Pa(τ ) measures the quality of AR visualization with
the Octree depth at d(τ ), and Q(τ ) represents the delays (i.e.,
AR streams that are ready to be visualized), over unit time τ .
By increasing the depth of the Octree, better AR visual-
ization quality can be achieved, whereas it introduces more
computation time (i.e., delay). On the contrary, decreasing the
depth results in a reduction of the quality of AR visualization,
while it is beneﬁcial due to low computation time (i.e., lower
delays). In this application, Lyapunov optimization theory can
be directly used to exploit this tradeoff and the following
closed-form equation can be derived as [6],

d∗(t) ← arg max
d(t)∈R

[V · pa(d(t)) − Q(t)a(d(t))] ,

(3)

where d∗(t), R, a(d(t)), and V stand for the optimal Octree
depth decision at t, the set of Octree depth candidates, and
the arrivals by the determined Octree depth d(t), the tradeoff
coefﬁcient, respectively. Here, if we prioritize queue stability
with a smaller V , it is clear that the algorithm operates to
minimizes visualization delays for stabilization. Therefore, we
can conclude that by controlling d(t) in each time, we can
maximize the time-average AR visualization quality subject

 
 
 
 
 
 
Algorithm 1 Our Proposed Stabilized AR Visualization

Observe Q(t);
I ∗ ← ∞;
for d(t) ∈ R do

Initialize:
1: t ← 0; Q(t) ← 0;
2: Decision Action: ∀d(t) ∈ R
Stabilized Adaptive Ship Detection:
3: while t ≤ T do
4:
5:
6:
7:
8:
9:
10:
end for
11:
12: end while

I ∗ ← I; d∗(t) ← d(t);

end if

I ← V · pa(d(t)) − Q(t)a(d(t));
if I ≤ I ∗ then

to the queue stability by applying the formulation in (3).

Pseudo-Code and Complexity. The pseudo-code of the pro-
posed algorithm is presented in Algorithm 1. From (line 1)
to (line 3), system parameters are deﬁned and initialized. In
(line 5), the current delay Q(t) is observed. From (line 7) to
(line 12), the main procedure of the closed-form computation
for (3) is executed. Since our proposed algorithm computes a
closed-form equation with the number of decision actions, i.e.,
|R|, the real-time computation is with low-complexity which
is O(N ) where N is the number of Octree depth candidates. In
addition, our solution can be computed in a distributed manner,
because it works with closed-form equation computation with
no side information.

III. PERFORMANCE EVALUATION

Experiment Settings. For evaluation, the performance differ-
ences among various Octree depth candidates are compared
with 8i Voxelized full bodies point cloud dataset [8]. We adopt
Open3D [9] to implement point cloud reading, data format
conversion, and Octree depth control functionalities.

Evaluation Results. Fig. 2(a) shows the performance of the
proposed method for time-average quality maximization by
controlling Octree depths subject to delay conditions. Two
controls, i.e., max-depth and min-depth, are used for optimal
Octree quality-aware visualization performance. In general,
larger the number of point clouds (PC) that is determined by
the Octree depth obviously introduces higher AR visualiza-
tion performance. Therefore, the bigger the number of PCs
introduces better visualization quality; however longer delays
with smaller the depth also introduces low-delay computation.
As a result,
the queue backlog size for only max-Depth
diverges due to increased visualization computation delays and
causes queue overﬂow after a certain time, while the stability
of only min-Depth converges to 0 due to fast visualization
computation. Contrarily, the proposed scheme recognizes 400
unit time as the optimized point and guarantees both delay
stability and AR visualization quality. Fig. 2(b) illustrates the
performance of the proposed scheme under different control
actions (i. e. the numbers of depth). The proposed method
can ensure high-quality AR visualization until the recognized

(a) Queue/stability dynamics

(b) Control action updates

Fig. 2: Performance evaluation results

optimized point of 400 unit time, where it drops in order
to maintain given delay constraints. Consequently, we can
the proposed algorithm provides maximized
conclude that
quality AR visualization while satisfying delay constraints,
with Lyapunov optimization framework.

IV. CONCLUDING REMARKS

In mobile devices, real-time AR is one of emerging appli-
cations in modern multimedia services. According to time-
consuming computations for real-time AR visualization in
mobile devices, quality-aware computing under delay con-
straints is essentially required. For this objective, this paper
proposes a time-average quality maximization method for
the AR visualization under delay considerations, inspired by
Lyapunov optimization. Lastly, the performance was evaluated
via data-intensive simulations.
Acknowledgment. This research was supported by NRF-
Korea & ITRC (2021R1A4A1030775 & IITP-2022-2017-0-
01637). S. Jung and J. Kim are the corresponding authors.

REFERENCES

[1] Z. Xu, D. Liu, W. Liang, W. Xu, H. Dai, Q. Xia, and P. Zhou,
“Online learning algorithms for ofﬂoading augmented reality requests
with uncertain demands in MECs,” in Proc. of EEE ICDCS, Washington
DC, USA, July 2021, pp. 1064–1074.

[2] H. Ling, “Augmented reality in reality,” IEEE MultiMedia, vol. 24, no. 3,

pp. 10–15, July-September 2017.

[3] K. Long, Y. Cui, C. Ye, and Z. Liu, “Optimal wireless streaming of
multi-quality 360 VR video by exploiting natural, relative smoothness-
enabled and transcoding-enabled multicast opportunities,” IEEE Trans-
actions on Multimedia, pp. 1–1, 2021.

[4] J. Kim, G. Caire, and A. F. Molisch, “Quality-aware streaming and
scheduling for device-to-device video delivery,” IEEE/ACM Transactions
on Networking, vol. 24, no. 4, pp. 2319–2331, August 2016.

[5] M. Neely, “Energy optimal control for time-varying wireless networks,”
IEEE Transactions on Information Theory, vol. 52, no. 7, pp. 2915–
–2934, July 2006.

[6] J. Koo, J. Yi, J. Kim, M. A. Hoque, and S. Choi, “Seamless dynamic
adaptive streaming in LTE/Wi-Fi integrated network under smartphone
resource constraints,” IEEE Transactions on Mobile Computing, vol. 18,
no. 7, pp. 1647–1660, July 2019.

[7] D. Kim, S. Park, J. Kim, J. Y. Bang, and S. Jung, “Stabilized adap-
tive sampling control for reliable real-time learning-based surveillance
systems,” Journal of Communications and Networks, vol. 23, no. 2, pp.
129–137, April 2021.

[8] R. L. de Queiroz and P. A. Chou, “Transform coding for point clouds
using a Gaussian process model,” IEEE Transactions on Image Process-
ing, vol. 26, no. 7, pp. 3507–3517, July 2017.

[9] Q.-Y. Zhou, J. Park, and V. Koltun, “Open3D: A modern library for 3D

data processing,” arXiv preprint arXiv:1801.09847, 2018.

0200400600800Time step01234Queue backlog105Proposedonly max-Depthonly min-Depth0200400600800Time step5678910Control Action (# of Depth)Proposedonly max-Depthonly min-Depth