Accepted to 2018 IEEE International Symposium on Biomedical Imaging

Copyright ©2018 IEEE

Generative Spatiotemporal Modeling Of Neutrophil Behavior

Narita Pandhe(cid:63)

Balazs Rada†

Shannon Quinn(cid:63)

(cid:63) Department of Computer Science
† Department of Infectious Diseases
University of Georgia
naritapandhe@uga.edu, radab@uga.edu, squinn@cs.uga.edu

8
1
0
2

r
p
A
2

]

V
C
.
s
c
[

1
v
3
9
3
0
0
.
4
0
8
1
:
v
i
X
r
a

ABSTRACT
Cell motion and appearance have a strong correlation with cell cy-
cle and disease progression. Many contemporary efforts in machine
learning utilize spatio-temporal models to predict a cell's physical
state and, consequently, the advancement of disease. Alternatively,
generative models learn the underlying distribution of the data, creat-
ing holistic representations that can be used in learning. In this work,
we propose an aggregate model that combine Generative Adversar-
ial Networks (GANs) and Autoregressive (AR) models to predict
cell motion and appearance in human neutrophils imaged by differ-
ential interference contrast (DIC) microscopy. We bifurcate the task
of learning cell statistics by leveraging GANs for the spatial com-
ponent and AR models for the temporal component. The aggregate
model learned results offer a promising computational environment
for studying changes in organellar shape, quantity, and spatial distri-
bution over large sequences.

Index Terms— Generative Adversarial Networks, Autore-

gressive Process, Biological Images

1. INTRODUCTION
Polymorphonuclear neutrophil granulocytes (neutrophils) are
the most abundant white blood cells in most mammals. They
are highly motile phagocytic cells that constitute the ﬁrst line
of defense of the innate immune system [1]. Study of neu-
trophils and their underlying motion patterns provide insights
into a host's response and behavior as a function of speciﬁc
stimulus. Our understanding of cell behavior and the sources
of cellular variation can be signiﬁcantly aided and tested us-
ing cell modeling and simulations [2].

Recently, generative models have been extensively uti-
lized for natural images. Examples include Variational Au-
toencoders [3] and Generative Adversarial Networks (GANs)
[4]. Generative models have the ability to learn the underly-
ing statistical distributions over data and, thus, can generate
exemplars of the true data set. It can learn sophisticated con-
ditional relationships as well. In 2014, [4] proposed Genera-
tive Adversarial Networks (GANs), a framework for learning
generative models. GANs do not rely on training objectives
related to log-likelihood. Instead, GAN training can be seen
as a competitive game between two models: the generator (G)
and the discriminator (D). Deep Convolutional GANs (DC-
GANs) [5] train convolutional networks in adversarial set-
tings in order to generate natural images from CelebA [6],

LSUN [7], and Imagenet datasets [8]. [9] applied GANs to
biological images to study the coexistence of proteins. Initial
GAN models suffered from issues including training instabil-
ities and mode collapse, making them harder to use. Active
areas of research include novel applications, optimizing the
network architecture, developing best training practices, and
improving the cost function.

For computer vision systems, motion synthesis is still a
challenging task and is drawing more contemporary research
attention. Synthesis can be deﬁned as generating new ver-
sions of a dataset which follow the distribution of original
and is closely related to modeling. [10] presents an algorithm
that synthesizes motions based on annotations that describe
it. Motion is constructed by splitting segments of movement
from a corpus of motion data and assembling them. Each seg-
ment is modeled using an autoregressive process. This helps
in modeling complicated non-stationary sequences which a
single autoregressive process cannot handle. In [11], frames
of original videos are projected into low-dimensional space
and then learned as an AR model. [12] extends this approach
by overcoming the problems of non-linearities in the data ei-
ther using a spline-ﬁtting approach or a combined appearance
model. Many approaches have employed GANs for video
generation and frame prediction. [13] utilizes two convolu-
tional networks, separating foreground and background im-
agery, to learn directly from a massive dataset of real-world
videos.

In this work, we simulate the behavior of human neu-
trophils. Considering the limited dataset available, we pro-
pose an aggregate application of GANs and AR models. We
bifurcate our approach as two tasks: generating neutrophil's
appearance and its motion, capturing the statistics indepen-
dently. The GAN learns the appearance and spatial statistics,
while the AR model captures the temporal aspect. Simula-
tion is then achieved by sampling a point from the appearance
space given the temporal dynamics up to the last observation.

2. RELATED WORKS
Several computational methods have been proposed for con-
structing from image data, statistical models of cellular and
subcellular structures. General shape models such as Active
Shape models [14] and cell shape model conditional on the

1

 
 
 
 
 
 
L = E
(cid:101)x∼Pg
(cid:124)

Accepted to 2018 IEEE International Symposium on Biomedical Imaging
nucleus shape [15] have been used. To our knowledge, the
closest related literature is comprised of [9] for biological im-
age synthesis and [13] for motion synthesis. Differences to
[9] include the following. (1) Our GAN architecture is based
on DCGANs, while theirs is a modiﬁed DCGAN for channel
separation. (2) They apply GANs to samples from ﬂuores-
cent microscopic images consisting of two channels, red and
green. We use GANs for DIC microscopy images consisting
of a single channel. They tackle a more difﬁcult problem: us-
ing the information contained in the red channel learn how to
generate a cell with several green-labeled proteins together.
We are modeling single channel cell images.

Like this work, [13] uses a two stream model, but differs
as follows. (1) They use Long Short Term Memory Networks
(LSTMs), while we use DCGANs for content and derive AR
processes from motion. (2) Their network learns the tempo-
ral dynamics directly from raw pixels, using identiﬁed fea-
tures combined with spatial features to make pixel-level pre-
dictions. We assume the background is stationary and only
the foreground cells move. All the pixels of the foreground
cells move similarly, so we pool them together into an AR
model.

Fig. 1: Real (left) and synthesized (right) images of neutrophil. The
synthetic images were created using DCGAN combined with Im-
proved WGAN loss function.

3. DATA
Videos imaging the two dimensional motion of human neu-
trophilic granulocytes are provided by Balazs Rada (Depart-
ment of Infectious Diseases, University of Georgia). The
videos are recorded using DIC microscopy which is used to
enhance the contrast in unstained, transparent samples. The
dataset consists of 11 videos, including 3 videos of normal
neutrophils and 8 videos of neutrophils treated with an in-
hibitor, MRS2578, targeting a purinergic receptor. Duration
of most of the videos is 3.0secs. We extracted frames of
1024x1024 resolution at 20fps.
Individual cells were seg-
mented using fully convolutional DenseNets [16], centered
and resized to 64x64 resolution, resulting in 17280 total
grayscale images.

4. METHODS

4.1. GANs for Cell Image Synthesis

min
G

max
D

V (D, G) =

E
x∼pdata(x)

(cid:2) log D(x)(cid:3)

+ E

z∼pz(z)

(cid:2) log(1 − D(G(z)))(cid:3)

(Eq. 1)

Copyright ©2018 IEEE

(cid:2)D(x)(cid:3)

x∼Pr

(cid:2)D((cid:101)x)(cid:3) − E
(cid:123)(cid:122)
Original Critic Loss
+ λ E

ˆx∼Pˆx

(cid:124)

(cid:125)

(cid:2)((cid:107)∇ˆxD(ˆx)(cid:107)2 − 1)2(cid:3)
(cid:125)

(cid:123)(cid:122)
Gradient Penalty

(Eq. 2)

GANs consists of 2 neural networks competing against each
other: Generator (G) and Discriminator (D). G generates im-
ages from random noise. While doing so, it tries to get as
close as it can, to the distribution of real images. D classi-
ﬁes between the real images and fake images generated by G.
Both are trying to perform best at their respective tasks and
maximise their gains. D is characterized as adversarial loss
for training G.

Formally, consider a set of training images, x ∈ Xreal
coming from a real distribution Pd. The generator is a neural
network G(z, θG) parametrized by θG and discriminator is
a neural network D(x, θD) parametrized by θD. G(z, θG)
takes in random noise z from the distribution Pz and gener-
ates images x ∈ Xf ake. D(x, θD) takes images from x ∈
Xreal and x ∈ Xf ake, both, and outputs a scalar between [0,
1]. The output is higher if the sample belongs to Xreal else
Xf ake. Both G and D are trained simultaneously. The goal of
D is to maximize the probability of assigning correct labels to
an input while G minimizes log (1−D(G(z))). As a result D
and G can be seen as playing a minimax game, as formulated
in Eq. 1. Historical attempts to scale up GANs using CNNs
to model images have been generally unsuccessful [4]. DC-
GANs [5] identiﬁed a family of architectures that resulted in
stable training and can generate higher resolution images. We
have adopted the architecture of DCGAN for both generator
and discriminator.

Eq. 1 can be reformulated via minimization of the Jensen
Shannon (JS) divergence between the data-generating distri-
bution Pd and the distribution Pg induced by Pz and G. [17]
theoretically justiﬁed that JS minimized by GANs behaves
badly and is potentially not continuous w.r.t to the genera-
tors parameters. They propose using an alternative distance -
Earth Mover's distance (EM) also known as Wasserstein Dis-
tance, W(q,p). Since, computing Wasserstein distance is in-
tractable, [17] shows an approximate solution to the same us-
ing Kantorovich-Rubinstein duality, wherein D is the set of
1-Lipschitz functions. To enforce the Lipschitz constraint au-
thors propose to clip the weights of the critic (D referred as
critic because it's not trained to classify) within a compact
space [−c, c]. Recently, [18] proposed an alternative way to
enforce the Lipschitz constraint. Instead of weight clipping,
they penalize the norm of the critic's gradient with respect to
its input, for random samples ˆx ∼ Pˆx. The objective function
Eq. 2 leads stable training of a wide variety of GAN architec-
tures with almost no hyperparameter tuning.
4.1.1. Experiments
We evaluated performances of models based on DCGAN ar-
chitecture trained with GAN, Wasserstein GAN (WGAN),

2

Accepted to 2018 IEEE International Symposium on Biomedical Imaging
and Improved WGAN loss functions [4, 17, 18]. To evaluate
the performance of GANs we utilize the optimization-based
approach discussed by [9] to check if the test samples can
be reconstructed well. To test for mode collapse, a common
failure in GANs, for a ﬁxed trained generator G we examine
how well it can reconstruct images from a held out test set.
For each image in the test set, we minimize the L2-distance
between the generated and test images w.r.t.
the noise vec-
tor z. We use 50 iterations of L-BFGS and select the best
reconstruction out of 3 runs. We also report the negative log
likelihood (NLL) w.r.t. the prior Pz of the noise vectors z.

Fig. 2: Reconstruction errors against negative log likelihood (NLL)
of the latent vectors found by reconstruction are displayed. The ver-
tical blue line shows the mean L2-error. Horizontal gray line show
mean NLL (±3std) of the noise sampled from the Gaussian prior.
Lower values for both are better.
4.1.2. Latent Space Walk
We can interpolate between points in the latent space and un-
derstand the landscape. Walking the manifold can identify if
there are any sharp transitions and whether the network has
memorized. If walking the latent space results in smooth se-
mantic changes to the image generations we can reason that
the model has learned relevant, interesting representations [5].

Fig. 3: Interpolation between a series of 10 random points in the
latent space depicts that the space learned has smooth transitions.
Top row depicts the starting location for each of the 10 points. Last
row depicts the respective ending locations.
4.2. AR for Cell Motion Synthesis

−→xt = B1−→x t−1 + B2−→x t−2 + .. + Bd−→x t−d + −→vt

Copyright ©2018 IEEE
(Eq. 4)

Different motion patterns are observed based on the cell con-
ditions. We build a global motion pattern for normal and
inhibited cells respectively, because we assume all the pix-
els(under the same conditions) move similarly. Based on the
existing motion characteristics, new sequences can be syn-
thesized for the corresponding cells. AR models are linear
dynamical systems and are able to model a pattern of points
in a particular space having a temporal component.

An AR process for a series of points in a d-dimensional
space can be modelled as Eq. 3, Eq. 4. Eq. 3 decom-
poses each video frame −→yt
into a low-dimensional state
vector −→xt and a white noise term −→ut. Eq. 4 denotes new
state −→xt is a function of the sum of d of its previous states
−→x t−1, −→x t−2, .., −→x t−d, each multiplied by corresponding
coefﬁcients B = B1, B2, ..., Bd [19]. The noise terms u
and v represent the residual difference between the observed
data and the solutions to the linear equations, assumed to be
Gaussian White noise.

Fig. 5: Histograms show the distributions of values taken by nor-
mal (gray) and inhibitor-treated (black) neutrophil for top 5 principal
components.

4.2.1. Experiments
Neutrophil motion is represented as trajectories of individ-
ual cells consisting of its center Cartesian coordinates across
all the frames. Trajectories belonging to normal and inhib-
ited cells are pooled separately and then projected into an
eigenspace using SVD, yielding the principal components C.
Subsequently, AR coefﬁcients are determined. Parameter q
determines the dimensionality of the subspace C; parameter d
determines the order of AR coefﬁcients B = B1, B2, ..., Bd.
We performed grid search over q ∈ [2, 10] and d ∈ [1, 10].

Fig. 6: Neutrophil motion using the ﬁrst three dimensions of the sub-
space of the AR model for normal (left) and inhibitor-treated (right).
This motion is governed by the AR coefﬁcients.
4.3. Synthesis
Synthesized neutrophil behavior consists of two parts: con-
tent and appearance is sampled from our trained generator
G and motion is sampled from a point in subspace C. Us-
ing Eq. 4, we iteratively generate different sequences. These
new sequences are then projected back into the original space,

Fig. 4: 2D trajectory plots of normal neutrophil and inhibitor-treated
(MRS) neutrophil. The inhibitor-treated (MRS) neutrophil tend to
exhibit less movements in comparison to the normal ones.

−→yt = C−→xt + −→ut

(Eq. 3)

3

Accepted to 2018 IEEE International Symposium on Biomedical Imaging
leading to a new motion pattern synthesized entirely from
the eigenvector information. The separation of motion and
appearance in two streams enable GANs and AR process to
identify the respective key features. This results in movement
of only the foreground cells and leaves the rest untouched. It
also gives an advantage of synthesizing video clips of differ-
ent cells following different trajectories but nonetheless looks
similar to the existing motion patterns.

Copyright ©2018 IEEE
[6] Ziwei Liu, Ping Luo, Xiaogang Wang, and Xiaoou Tang,
“Deep learning face attributes in the wild,” in Proceed-
ings of International Conference on Computer Vision
(ICCV), Dec 2015.

[7] Fisher Yu, Yinda Zhang, Shuran Song, Ari Seff, and
Jianxiong Xiao, “LSUN: construction of a large-scale
image dataset using deep learning with humans in the
loop,” CoRR, vol. abs/1506.03365, 2015.

[8] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-
“ImageNet: A Large-Scale Hierarchical Image

Fei,
Database,” in CVPR09, 2009.

[9] RE. Carazo Salas A. Osokin, A. Chessel and Federico
Vaggi, “GANs for biological image synthesis,” in Pro-
ceedings of the International Conference on Computer
Vision (ICCV), 2017.

[10] O. Arikan, D. Forsyth, and JF. O’Brien,

“Motion
Synthesis from Annotations,” ”ACM Transactions on
Graphics (TOG)”, vol. 22, pp. 402–408, Jul 2003.
[11] D. Oziem, N. Campbell, C. Dalton, Gibson D., and
Thomas B, “Combining Sampling and Autoregression
for Motion Synthesis,” ”Proceedings of the Computer
Graphics International”, pp. 510–513, Jun 2004.
[12] NW Campbell, CJ Dalton, DP Gibson, DJ Oziem, and
BT Thomas, “Practical generation of video textures us-
ing the auto-regressive process,” Image & Vision Com-
puting, vol. 22 (10), pp. 819 – 827, 2004, Publisher:
Elsevier.

[13] Ruben Villegas, Jimei Yang, Seunghoon Hong, Xunyu
Lin, and Honglak Lee, “Decomposing motion and con-
tent for natural video sequence prediction,” CoRR, vol.
abs/1706.08033, 2017.

[14] T. F. Cootes, C. J. Taylor, D. H. Cooper, and J. Gra-
ham, “Active shape models-their training and applica-
tion,” Comput. Vis. Image Underst., vol. 61, no. 1, pp.
38–59, Jan 1995.

[15] Ting Zhao and Robert F Murphy, “Automated learning
of generative models for subcellular location: building
blocks for systems biology,” Cytometry Part A, vol. 71,
no. 12, pp. 978–990, 2007.

[16] Simon J´egou, Michal Drozdzal, David V´azquez, Adri-
ana Romero, and Yoshua Bengio, “The one hundred lay-
ers tiramisu: Fully convolutional densenets for semantic
segmentation,” CoRR, vol. abs/1611.09326, 2016.
[17] M. Arjovsky, S. Chintala, and L. Bottou, “Wasserstein
GAN,” arXiv preprint arXiv:1701.07875, Jan 2017.
[18] Ishaan Gulrajani, Faruk Ahmed, Mart´ın Arjovsky,
“Im-
CoRR, vol.

Vincent Dumoulin, and Aaron C. Courville,
proved training of wasserstein gans,”
abs/1704.00028, 2017.

[19] SP. Quinn, MJ. Zahid, Durkin JR, Francis RJ., Lo CW,
and Chennubhotla SC,
“Automated identiﬁcation of
abnormal respiratory ciliary motion in nasal biopsies,”
”Science Translational Medicine”, vol. 7, pp. 299ra124,
Aug 2015.

Fig. 7: Sample results of appearance and motion synthesis.
5. CONCLUSION
In this paper we presented a two stream approach to simulate
human neutrophil behavior. Owing to the very limited data at
our disposal, we utilized GANs to learn the spatial statistics
and AR models to learn the temporal statistics. Bifurcation
of appearance and motion allows a controlled video genera-
tion process. This work can enable us to quantify changes
in organellar appearance, spatial distribution and help in un-
derstanding how subsets of the organellar ensembles evolve,
improving our understanding of cellular mechanisms as they
respond to their environments.

6. ACKNOWLEDGMENTS
We thank R. Ceren for constructive criticism of this manuscr-
-ipt. This work was supported in part by AWS in Educa-
tion Grant Award. We gratefully acknowledge the support of
NVIDIA Corporation with the donation of the Titan X Pascal
GPU used for this research.

7. REFERENCES
[1] AW. Sehgal, “How Neutrophils Kill Microbes,” Annual
Review of Immunology, vol. 23, pp. 197–223, Apr 2005.
[2] GR. Johnson, J. Li, A. Shariff, Rohde GK., and Murphy
RF(2015), “Automated Learning of Subcellular Varia-
tion among Punctate Protein Patterns and a Generative
Model of Their Relation to Microtubules,” ”PLoS Com-
put Biol”, vol. 11(12): e1004614, Dec 2015.

[3] DP. Kingma and M. Welling,

“Auto-encoding varia-

tional bayes.,” CoRR, vol. abs/1312.6114, 2013.

[4] Ian I. Goodfellow, Jean Pouget-Abadie, Mehdi Mirza,
Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron
Courville, and Yoshua Bengio, “Generative adversar-
ial nets,” in Advances in Neural Information Process-
ing Systems 27, Z. Ghahramani, M. Welling, C. Cortes,
N. D. Lawrence, and K. Q. Weinberger, Eds., pp. 2672–
2680. Curran Associates, Inc., 2014.

[5] Alec Radford, Luke Metz, and Soumith Chintala, “Un-
supervised representation learning with deep convolu-
tional generative adversarial networks,” CoRR, vol.
abs/1511.06434, 2015.

4

