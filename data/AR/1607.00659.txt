Robust Deep Appearance Models

Kha Gia Quach1 ∗, Chi Nhan Duong1 ∗, Khoa Luu2 and Tien D. Bui1
1 Department of Computer Science and Software Engineering, Concordia University, Montreal, Quebec, Canada
Email: {k q, c duon, bui}@encs.concordia.ca
2 CyLab Biometrics Center and the Department of Electrical and Computer Engineering,
Carnegie Mellon University, Pittsburgh, PA, USA
Email: kluu@andrew.cmu.edu

6
1
0
2

l
u
J

3

]

V
C
.
s
c
[

1
v
9
5
6
0
0
.
7
0
6
1
:
v
i
X
r
a

face images. In this approach,

Abstract—This paper presents a novel Robust Deep Appear-
ance Models to learn the non-linear correlation between shape
and texture of
two crucial
components of face images, i.e. shape and texture, are represented
by Deep Boltzmann Machines and Robust Deep Boltzmann
Machines (RDBM), respectively. The RDBM, an alternative form
of Robust Boltzmann Machines, can separate corrupted/occluded
pixels in the texture modeling to achieve better reconstruction
results. The two models are connected by Restricted Boltzmann
Machines at the top layer to jointly learn and capture the
variations of both facial shapes and appearances. This paper
also introduces new ﬁtting algorithms with occlusion awareness
through the mask obtained from the RDBM reconstruction. The
proposed approach is evaluated in various applications by using
challenging face datasets, i.e. Labeled Face Parts in the Wild
(LFPW), Helen, EURECOM and AR databases, to demonstrate
its robustness and capabilities.

I. INTRODUCTION

intensities,

image patch. However,

that represents the pattern of pixel

Active Appearance Models (AAMs) [1] have been used
successfully in several areas of facial interpretation over the
last two decades. Given a new face image, the method aims
to describe that image by synthesizing a new image similar to
it as much as possible. Indeed, AAMs are statistical models
of appearance, generated by combining a shape model that
represents the facial structure, and a quasi-localized texture
i.e.
model
skin texture, across a facial
their
capability of generalization is limited by the nature of Principal
Component Analysis (PCA) used in both shape and texture
models. Besides, since AAMs naively combine the shape and
texture features to represent the facial appearance also by
using PCA, it can only reveal the linear relationship between
these features. There have been numerous improvements and
adaptations using, for example, the probabilistic PCA [2],
to
nonlinear Deep Boltzmann Machines (DBM) [3], etc.,
model large and non-linear variations in shapes and textures.
Duong et al. [4] recently proposed the Deep Appearance
Models (DAMs) approach to model face images using a DBM
network. Their main ideas are ﬁrst to learn the shape and
the texture models of sample faces separately using the DBM
approach. The relationships between these two modalities are
then pursued to generate the ﬁnal appearance model using
Restricted Boltzmann Machines (RBM) at the top layer. Given
an unseen face, DAMs ﬁnd the optimal facial shape using the

∗These two authors contribute equally to the work.

Fig. 1. Example faces with signiﬁcant variations, i.e. occlusions and poses,
and the modeling results. From top to bottom: original images, shape free
images, reconstructed faces using DAMs and our RDAMs approach.

forward compositional algorithm. This algorithm minimizes
the non-linear least squares error between the warped and the
reconstructed textures from the models. This network architec-
ture enables the non-linear modeling capability to overcome
the limitations presented in the original AAMs method.

However, there are still some limitations of DAMs in both
face modeling and shape ﬁtting. Firstly, the DAMs method
still takes into account numerous appearance variations of face
images, e.g. facial poses, occlusions, lighting, etc. in their
ﬁtting procedure resulting in undesirable ﬁtting performance.
Their minimization method using the squared error is good
enough for constrained face images rather than for the problem
of unconstrained face modeling with occlusions, poses and
noise. Secondly, the texture models of DAMs method cannot
distinguish between occluded and non-occluded areas since it
treats all regions in the same way during model learning phase.
DAMs will capture both “good” and “bad” regions in the
learned models. Thus, it will give undesirable reconstruction
texture images (as shown in Fig. 1).

To overcome the above modeling and ﬁtting issues, we
propose a novel Robust Deep Appearance Models (RDAMs)
to learn an additional appearance variation mask that could be
used in the ﬁtting procedure to ignore those variations. This
mask is modeled by the visible and hidden unit in Robust
Boltzmann Machines (RoBM) [5]. This proposed model not
only learns compact representation for recognition/prediction
tasks, but also reconstructs better shape and texture.

 
 
 
 
 
 
B. AAMs-based Fitting Approaches

The ﬁtting steps in AAMs can be formulated as an im-
age alignment problem iteratively solved using the Gaussian-
Newton (GN) optimization. Mathews et al. [8] presented
the Project Out Inverse Compositional (POIC) algorithm that
runs very fast due to pre-computation of the Jacobian and
the Hessian matrices. Subsequently, many variants of the IC
algorithm have been proposed [9]. Gross et al. [10] introduced
the Simultaneous Inverse Compositional (SIC) algorithm si-
multaneously updating the warp and the texture parameters.
Tzimiropoulos et al. [11] presented the Fast-SIC and the
Fast-forward algorithms to efﬁciently solve the AAMs ﬁtting
problem in both forward and inverse fashions. An alternative
formulation of model ﬁtting is to solve as a classiﬁcation prob-
lem (i.e. distinguish correct and incorrect alignment) or a re-
gression problem. Along this direction, Liu [12] [13] proposed
to extend GentleBoost classiﬁer for learning discrimination
between correct and incorrect alignment; and modeling the
nonlinear relationship between texture and parameter updates.
Due to the holistic nature, AAMs methods are still far
from achieving good performance in face images in the wild
conditions, e.g. partial occlusions, poses, illumination, etc. To
handle these problems, Sung et al. [14] combined Active Shape
Models (ASM) with the AAMs to give a united objective
function since ASM can ﬁnd correct landmark points based on
local texture descriptors. Tzimiropoulos et al. [15] proposed to
solve a robust and efﬁcient objective function aiming to detect
points under occlusion and illumination changes. Martins et al.
[16] presented two robust ﬁtting methods based on the Lucas-
Kanade forwards additive method [17] to handle partial and
self-occlusions. Recently, Antonakos et al. [18] introduced a
graph-based model, called Active Pictorial Structures (APS).
This model uses Gaussian Markov Random Field (GMRF) to
model the appearance of the objects. Antonakos et al. [19]
also proposed to use higher level features in face modeling
and ﬁtting instead of modeling the raw pixels.

III. THE PROPOSED ROBUST DEEP APPEARANCE MODELS
This section presents our proposed RDAMs method. The
structure of RDAMs consists of three main components,
i.e. the shape model, the texture model and the appearance
representation layer. Section III-A presents the shape modeling
steps using DBM. The robust texture modeling using RDBM
is introduced in section III-B. Finally, our proposed robust
ﬁtting algorithms are presented in section III-C. The schematic
diagram of our proposed method is given in Fig. 2.

A. Deep Boltzmann Machines for Shape Modeling

An n-point shape s = [x1, y1, · · · , xn, yn]T is modeled us-
ing a DBM with a visible layer and two hidden layers. Given
a shape s, the energy of the conﬁguration {s, h1, h2} of the
corresponding layers in shape modeling is as follows,

EDBMs (s, h1, h2; θs) =

1
2

(cid:88)

−

i
(cid:88)

j,l

(si − bsi )2
σ2
si

(cid:88)

−

W 1

ijsih1
j

i,j

W 2

jlh1

j h2
l

(1)

Fig. 2. The diagram of our RDAMs approach. The blue layers present the
shape model with a visible layer s and two hidden layers h1 and h2. The red
layers denote the texture model with three visible units ˜a, a and m, and three
hidden layers gm, g1
a. The green layer denotes the appearance model
consisting of a hidden layer h3

a and g2

The contributions of this work can be summarized as
follows. Firstly, we propose a new texture modeling approach
named Robust Deep Boltzmann Machines described in section
III-B. It can model “good” and “bad” regions separately via
a DBM and a binary RBM, respectively. Then, for example,
given a face with sunglasses, RDBM can recover a “clean”
face without sunglasses (as shown in Fig. 2). Secondly, the
proposed RDAMs approach models shape using a DBM since
it has non-linear property and can be setup in deep modeling
to give more robust representation for shapes. Thirdly, we
propose to use the learned binary RBM to generate a mask
for shape model ﬁtting using inverse compositional algorithm
described in section III-C.

II. RELATED WORK

This section reviews Restricted Boltzmann Machines [6]
and its extensions. Recent advances in AAMs-based facial
modeling and ﬁtting approaches are reviewed in this section.

A. RBM and Its Extensions

Restricted Boltzmann Machines (RBM) [6] are an undi-
rected graphical model with two layers of stochastic units, i.e.
visible and hidden units, which represent the observed data and
the conditional representation of that data, respectively. Visible
and hidden units are connected by weighted undirected edges.
Gaussian RBM [7] models real-valued data by assuming the
visible units have real values normally distributed with mean
bi and variance σ2
i . Moreover, a set of RBMs can be stacked
on top of another to capture more complicated correlations
between features in the lower layer. This approach produces a
deeper network called Deep Boltzmann Machines [3]. RoBM
[5] were proposed to estimate noise and learn features simul-
taneously by distinguishing corrupted and uncorrupted pixels
to ﬁnd optimal latent representations.

where θs = {W1, W2, σs, bs} are the shape model parameters.
The bias terms of hidden units in two layers in Eqn. (1) are
ignored to simplify the equation. The probability distribution
of the conﬁguration {s, h1, h2} is computed as:

P (s; θs) =

(cid:88)

h1,h2

exp (cid:0)−EDBMs

(cid:0)s, h1, h2; θs

(cid:1)(cid:1)

Z(θs)

(2)

where Z(θs) is the normalization constant. This shape model
is pre-trained using one-step contrastive divergence (CD).

B. Robust Deep Boltzmann Machines for Texture Modeling

We propose a new texture model approach named Robust
Deep Boltzmann Machines. Far apart from the texture model
of DAMs, this model consists of a visible layer with three
gating components: a, ˜a, and m, a binary RBM for the mask
variable m and a Gaussian DBM with the real-valued input
variable a. The motivation for using this gating term is to
improve modeling and ﬁtting of the DAMs by eliminating the
effects of missing, occluded or corrupted pixels. Our approach
uses a Gaussian DBM to model “clean” data a instead of using
one Gaussian RBM. There are good reasons for using DBM
here. Firstly, it can efﬁciently capture variations and structures
in the input data. Secondly, DBM can deal with ambiguous
inputs more robustly due to its top-down feedback.

1) Texture Modeling: Given a shape-free image ˜a,
a, g2

energy function of the conﬁguration {a, ˜a, m, gm, g1
facial texture modeling is optimized as follows:

the
a} in

ERDBMg (a, ˜a, m, gm, g1

a, g2

a; θa) =

(cid:88)

+

i

(cid:88)

−

i,k

(ai − bgi )2
2σ2
gi

Uikmigmk +

(cid:88)

−

ijaig1
V 1

aj −

i,j

(cid:88)

i

(˜ai − ˜bgi )2
2˜σ2
gi

i mi(ai − ˜ai)2
γ2
2σ2
gi

jlg1
V 2

ajg2
al

(3)

(cid:88)

i
(cid:88)

j,l

where θa = {V1, V2, U, σg, bg, ˜σg, ˜bg} are the texture model
parameters. It is noted that all the bias terms in Eqn. (3)
are ignored for simplicity. The probability distribution of the
a, g2
conﬁguration {a, ˜a, m, gm, g1
exp (cid:0)−ERDBMg

a} is computed as follow:
(cid:0)a, ˜a, m, gm, g1
Z(θa)

P (˜a; θa) =

a, g2

a; θa

(cid:88)

(4)

(cid:1)(cid:1)

a,g2
g1
a

Given the input variables ˜a, the states of all layers can be
inferred by computing the posterior probability of the latent
a, g2
variables, i.e. p(a, m, gm, g1
a|˜a). Therefore, the sampling
can be divided into two folds, i.e. one for the visible units and
one for the hidden units. For the visible variables a and m,
the conditional distributions can be sampled as,
a, ˜a)p(m|gm, g1
a, ˜a) = p(a|m, g1
a, g2
a, the conditional distribu-

p(a, m|gm, g1

a, ˜a)

(5)

For the hidden variables gm, g1
tions can be sampled as follows,
a, g2

p(gm, g1

a|a, m, ˜a) = p(gm|m)p(g1

a|a, g2

a)p(g2

a|g1
a)

(6)

The sampling process can be applied on each unit separately
since the distribution is factorial. Section III-B2 will discuss
the learning procedure of this texture model.

Fig. 3. Examples of automatically detected masks from the shape-free images.
Top row: shape-free images. Bottom row: detected binary masks using the
technique in section III-B3

2) Model Learning for RDBM: To pre-train our presented
RDBM model, the DBM, which models “clean” faces, is ﬁrst
trained with some “clean” images and then the parameters
in the RDBM model are optimized to maximize the log
likelihood as follows,
θ∗
a = arg max

log P (˜a; θa)

(7)

θa

(cid:21)

The optimal parameter values can then be obtained using a
gradient descent procedure given by,
(cid:20) ∂ERDBMg
∂θa

E [log P (˜a; θa)] = EPdata

(cid:20) ∂ERDBMg
∂θa

− EPmodel

∂
∂θa

(8)
where EPdata [·] and EPmodel [·] are the expectations respecting
to data distribution and distribution estimated by the RDBM.
The two terms can be approximated using mean-ﬁeld inference
and Markov Chain Monte Carlo (MCMC) based stochastic
approximation, respectively.

(cid:21)

In our method, pre-training the parameters of the DBM on
“clean” data ﬁrst will make the process of learning the texture
model faster and much easier. Similarly, we also propose to
ﬁrst learn the parameters of the binary RBM (to represent
the mask m) on pre-deﬁned and extracted training masks (as
shown in Fig. 3) instead of randomizing the parameters. Then,
we propose an automatic technique to extract such training
masks for learning the binary RBM in the next section.

3) Learning Binary Mask RBM: This section aims to
generate masks from the training images having poses and
occlusions, e.g. sunglasses and scarves. We consider learning
three types of binary mask, i.e. sunglasses, scarves and pose
stretching. A binary RBM is learned to represent each type of
mask. Binary masks for sunglasses or scarves can be extracted
by applying a global threshold on shape-free images having
sunglasses or scarves with a prior knowledge of their locations.
We will focus on the last and hardest type, i.e. pose stretching.
In 2D texture model, warping faces with a large pose (e.g.
larger than ±45◦) will likely cause stretching effects on half of
the faces since the same pixel values are copied over a large
region (see Fig. 4). Therefore, we propose a technique that
can detect such stretching regions during warping process. The
main idea is to count the number of unique pixels in the source
triangle that are mapped to the pixels in the target triangle. As
we know, a source pixel can be mapped to multiple target
pixels due to interpolation. The degree of a target triangle
being stretched is equivalent to p = ( n0
N ), where p = 1 means

Algorithm 1 − Inverse Compositional

1. Pre-compute: The gradient ∇a, the Jacobian ∂W
steepest descent SD = ∇a ∂W
2. At each iteration:

∂s at (rD; 0), the
∂s , the Hessian matrix H = SDT SD

(I) Perform warping operator W to obtain warped texture

I(W(rD, s))
(II)

texture

Compute

the
(m (cid:12) (I(W(rD, s)) − a))
(III) Compute ∇a ∂W
(IV) Compute ∆s using Eqn. (10)
(V) Update the shape parameters by composing the warp

∂s (m (cid:12) (I(W(rD, s)) − a))

reconstruction

error

operator s → s ◦ ∆s−1

IV. EXPERIMENTS
In this section, we evaluate the performance of our proposed
framework in face modeling tasks using data “in the wild”
(sections IV-B and IV-C ). Then we demonstrate its robustness
in model ﬁtting steps (section IV-D).

A. Databases

The LFPW [20] database consists of 1400 images but only
about 1000 images are available (811 for training and 224 for
testing). For each image, we have 68 landmark points provided
by 300-W competition [21].

The Helen [22] database contains about 2300 high-
resolution images (2000 for training and 300 for testing). 68
landmark points are annotated for all faces. The facial images
contain different poses, expressions and occlusions.

The AR database [23] contains 134 people (75 males and
59 females) and each subject has 26 frontal images (14 normal
images with different lighting and expressions, six occluded
images with sunglasses and six for scarves).

The EURECOM database [24] consists of facial images
of 52 people (38 males and 14 females). Each person has
different expressions, lighting and occlusion conditions. We
only use images wearing sunglasses in our experiments.

B. Facial Occlusion Removal

In this section, we demonstrate the ability of RDAMs to
handle extreme cases of occlusions such as sunglasses or
scarves. RDAMs are trained in two steps: pre-train each layer
and train the whole model. The training set includes 1000
“clean” and 200 posed images from LFPW and Helen, 534
“clean”, 95 sunglasses, and 95 scarf images from 95 subjects
in AR, 104 images from 52 subjects in EURECOM. For
the pre-training steps, we ﬁrst train shape DBM using all
shapes. Then, we train RDBM by ﬁrst separately training
GRBM with clean images and learning binary mask RBM
with masks generated from occluded and posed images in AR,
EURECOM or LFPW. After that, we can train the RDBM
with pre-initialized weights of GRBM and mask RBM. The
joint layer is later trained with all training images. Each step
above is trained using Contrastive Divergence learning in 600
epochs on a system of Xeon@3.6GHz CPU, 32.00GB RAM.
The computational costs (without parallel processing) are as
follows. The training time is 14.2 hours. Fitting on average
is 17.4s. Reconstructing faces on average is 1.53s.

Fig. 4. An illustration in pose stretching detection: (a) Source image (b)
Target warped shape-free image

there is no stretching and the stretching is visible when p < 0.9
(as from our experiments), n0 and N are the number of unique
pixels and the total number of pixels in the corresponding
source triangle, respectively. Finally, we can use the detected
regions as a mask to pre-train the above robust texture model.

C. Model Fitting Algorithms in RDAMs

During the ﬁtting steps,

With the trained shape and texture models, the process of
ﬁnding an optimal shape of a new image I can be formulated
as ﬁnding an optimal shape s that maximizes the probability of
the shape-free image as s∗ = arg maxs P (I(W(rD, s))|s; θ).
the states of hidden units g1
a
are estimated by clamping both the current shape s and
the warped texture ˜a to the model. The Gibbs sampling
method is then applied to ﬁnd the optimal estimated “clean”
texture a of the testing face given the current shape s.
Let a = σgV1g1
a + bg be the mean of the Gaussian
distribution, we have P (I(W (rD, s))|g1
gI)
where I is the identity matrix. The maximum likelihood can
then be estimated as s∗ = arg maxs N (I(W(rD, s))|a, σ2
gI) =
arg mins

(cid:107)I(W(rD, s)) − a(cid:107)2.

a; θ) = N (a, σ2

This brings us to the non-linear least squares problem solved
in image alignment. Notice that a is the reconstructed “clean”
texture while I(W (rD, s)) is the warped texture from the input
image. If the input image contains occlusion or corruption,
it is clearly that the above square error will not reﬂect the
goodness of the current shape s. Thus, solely using (cid:96)2-norm
may limit the performance of shape ﬁtting and reconstruction
of the models. Since our proposed model can generate a mask
of corrupted pixels, we propose to incorporate the mask m
into the original objective function as:

1
σ2
g

s∗ = arg min

s

(cid:107)m (cid:12) (I(W(rD, s)) − a) (cid:107)2

(9)

where (cid:12) is the component-wise multiplication.

The inverse compositional algorithm tries to minimize the
incremental warp computed with respect to the model image
a instead of with respect to I(W(rD, s)).

(cid:107)m (cid:12) (I(W(rD, s)) − a(W(rD, ∆s))) (cid:107)2

∆s = arg min
∆s
to ∆s and then updating the parameters as
with respect
s ← s ◦ ∆s−1, where ◦ denotes the composition of
two
warps. The solution of the least squares problem above is
∆s = H−1JT
a (m (cid:12) (I(W(rD, s)) − a)) where Ja = ∇a ∂W
∂s
is the Jacobian matrix of the model image a. The Hessian
matrices H are then given by H = (m (cid:12) Ja)T (m (cid:12) Ja).

(10)

Fig. 5. Reconstruction results on images with occlusions (i.e. sunglasses or scarves) in LFPW, Helen and AR databases. The ﬁrst row: input images, the
second row: shape-free images, from the third to ﬁfth rows: reconstructed results using AAMs, DAMs and RDAMs, respectively.

the best reconstruction results compared against AAMs and
DAMs. Note that the unmasked-RMSE is always higher than
masked-RMSE since some corrupted pixels are recovered
during reconstruction. Since our RDAMs can recover more
corrupted pixels, it makes the un-masked RMSE higher than
the ones from AAMs and DAMs.

C. Facial Pose Recovery

This section illustrates the capability of RDAMs to deal
with facial poses. Using the same pre-trained model presented
in Section IV-B, the texture model was trained using 280
images with different pose variations from LFPW and Helen
databases. The reconstruction results of facial images with
different poses are presented in Fig. 7. In this experiment, our
RDAMs also achieve the best reconstruction results comparing
to AAMs and DAMs especially in the cases of extreme poses
(more than 45◦). Our proposed RDAMs method can handle

TABLE I
THE AVERAGE RMSES OF RECONSTRUCTED IMAGES USING DIFFERENT
METHODS ON LFPW AND AR DATABASES WITH SUNGLASSES AND SCARF

Methods
LFPW & Helen
AR - Sunglasses
AR - Scarf

AAMs [11]
12.91 (18.98)
56.55
63.16

DAMs [4]
11.15 (14.98)
55.48
60.96

RDAMs
8.58 (23.98)
41.67
47.65

As shown in Fig. 5, RDAMs can remove those occlusions
successfully without leaving any severe artifact comparing
with the baseline AAMs method and the state-of-the-art DAMs
method. We also compare with RPCA-based method [25] (See
Fig. 6). We measure the reconstruction quality in terms of
Root Mean Square Error (RMSE) on LFPW, Helen, AR and
EURECOM databases in different ways. We choose from AR
two subsets of 210 images with sunglasses and 210 images
with scarves from 38 subjects (30 males and eight females)
not in the training set. The corresponding normal face images,
i.e. frontal and without occlusions, of the same person are
used as the references to compute the RMSE. We select a
subset of 23 images with sunglasses and 100 images with
some occlusions from LFPW and Helen. A mask is used to
ignore occluded/corrupted pixels in the testing images so that
we have an unbiased metrics. The average masked-RMSEs
of AAMs, DAMs and our RDAMs are shown in Table I.
The average unmasked-RMSEs are also reported for reference
(i.e. the numbers inside the brackets). Our RDAMs achieve

Fig. 6. Reconstruction results on images with sunglasses (a) or scarves (b)
in AR database. The images are input shape-free, ground truth shape-free,
reconstructed results using RDAMs and RPCA [25], respectively.

Fig. 7. Facial pose recovery results on images from LFPW and Helen
databases. The ﬁrst row is the input images. The second row is the shape-
free images. From the third to ﬁfth rows are AAMs, DAMs and RDAMs
reconstruction, respectively.

well with the new texture model such that it can make use
of the occlusion mask generated by the proposed model.
Experimental results in occlusion removal, pose correction and
model ﬁtting have shown the robustness of the model against
large occlusions and poses.

ACKNOWLEDGMENT
This work is supported in part by the Natural Sciences and

Engineering Research Council (NSERC) of Canada

REFERENCES

[1] T. F. Cootes, G. J. Edwards, and C. J. Taylor, “Interprettting Face Images

using Active Appearance Models,” in FG, 1998, pp. 300–305.

[2] J. Alabort-i Medina and S. Zafeiriou, “Bayesian active appearance

models,” in CVPR.

IEEE, 2014, pp. 3438–3445.

[3] R. Salakhutdinov and G. E. Hinton, “Deep boltzmann machines,” in

AISTATS, 2009, pp. 448–455.

[4] C. N. Duong, K. Luu, K. G. Quach, and T. D. Bui, “Beyond principal
components: Deep boltzmann machines for face modeling,” in CVPR.
IEEE, June 2015, pp. 4786–4794.

for recognition and denoising,” in CVPR.

[5] Y. Tang, R. Salakhutdinov, and G. Hinton, “Robust boltzmann machines
IEEE, 2012, pp. 2264–2271.
[6] G. E. Hinton, “Training products of experts by minimizing contrastive
divergence,” Neural computation, vol. 14, no. 8, pp. 1771–1800, 2002.
[7] A. Krizhevsky and G. Hinton, “Learning multiple layers of features from

tiny images,” 2009.

[8] I. Matthews and S. Baker, “Active appearance models revisited,” IJCV,

vol. 60, no. 2, pp. 135–164, 2004.

[9] S. Baker and I. Matthews, “Lucas-kanade 20 years on: A unifying

framework: Part 2,” The Robotics Institute, CMU, 2003.

[10] R. Gross, I. Matthews, and S. Baker, “Generic vs. person speciﬁc active
appearance models,” IVC, vol. 23, no. 12, pp. 1080–1093, 2005.
[11] G. Tzimiropoulos and M. Pantic, “Optimization problems for fast AAM

ﬁtting in-the-wild,” in ICCV.

IEEE, 2013, pp. 593–600.

[12] X. Liu, “Generic face alignment using boosted appearance model,” in

CVPR.

IEEE, 2007, pp. 1–8.

[13] ——, “Discriminative face alignment,” PAMI, vol. 31, no. 11, pp. 1941–

1954, 2009.

[14] J. Sung, T. Kanade, and D. Kim, “A uniﬁed gradient-based approach for
combining ASM into AAM,” IJCV, vol. 75, no. 2, pp. 297–309, 2007.
[15] G. Tzimiropoulos, S. Zafeiriou, and M. Pantic, “Robust and efﬁcient

parametric face alignment,” in ICCV.

IEEE, 2011, pp. 1847–1854.

[16] P. Martins, R. Caseiro, and J. Batista, “Generative face alignment
through 2.5D active appearance models,” CVIU, vol. 117, no. 3, pp.
250–268, 2013.

[17] B. D. Lucas, T. Kanade et al., “An iterative image registration technique
with an application to stereo vision.” IJCAI, vol. 81, pp. 674–679, 1981.
[18] E. Antonakos, J. Alabort-i Medina, and S. Zafeiriou, “Active pictorial

structures,” in CVPR.

IEEE, 2015, pp. 5435–5444.

[19] E. Antonakos, J. Alabort-i Medina, G. Tzimiropoulos, and S. P.
Zafeiriou, “Feature-based lucas–kanade and active appearance models,”
TIP, vol. 24, no. 9, pp. 2617–2632, 2015.

[20] P. N. Belhumeur, D. W. Jacobs, D. Kriegman, and N. Kumar, “Localizing
IEEE, 2011,

parts of faces using a consensus of exemplars,” in CVPR.
pp. 545–552.

[21] C. Sagonas, G. Tzimiropoulos, S. Zafeiriou, and M. Pantic, “A semi-
automatic methodology for facial landmark annotation,” in CVPRW.
IEEE, 2013, pp. 896–903.

[22] V. Le, J. Brandt, Z. Lin, L. Bourdev, and T. S. Huang, “Interactive facial

feature localization,” in ECCV. Springer, 2012, pp. 679–692.

[23] A. M. Martinez, “The ar face database,” CVC Tech. Rep., vol. 24, 1998.
[24] R. Min, N. Kose, and J.-L. Dugelay, “Kinectfacedb: A kinect database
for face recognition,” TSMC, vol. 44, no. 11, pp. 1534–1548, Nov 2014.
[25] K. G. Quach, C. N. Duong, and T. D. Bui, “Sparse representation and
IEEE,

low-rank approximation for robust face recognition,” in ICPR.
2014, pp. 1330–1335.

[26] T. Hassner, S. Harel, E. Paz, and R. Enbar, “Effective face frontalization

in unconstrained images,” in CVPR.

IEEE, June 2015.

[27] G. Tzimiropoulos, J. Alabort-i Medina, S. Zafeiriou, and M. Pantic,
“Active orientation models for face alignment in-the-wild,” TIFS, vol. 9,
no. 12, pp. 2024–2034, 2014.

Fig. 8. Comparisons between RDAMs and Face Frontalization approach
[26]. The 1st row: input faces; the 2nd row: synthesized frontal view with
soft symmetry background [26]; the 3rd row: frontalized faces generated by
RDAMs on the same background.

TABLE II
THE AVERAGE MSE BETWEEN ESTIMATED SHAPE AND GROUND TRUTH
SHAPE (68 LANDMARK POINTS).

Method
Sunglasses
Scarves

Initial RDAMs
0.1672
0.195
0.0756
0.211

Fast-SIC [11] AOMs [27]

0.1218
0.0756

0.1705
0.1705

those extreme poses in a more natural way. From Fig. 7,
RDAMs give reconstructed faces that look more similar to
the original faces while DAMs or AAMs make the face look
younger or change its identity.

Another experiment

is performed to demonstrate our
RDAMs approach on the face frontalization problem. Given
an input face with poses, the process of frontalization is to
synthesize the frontal view of that face. Our RDAMs approach
is compared with the state-of-the-art frontalization method
[26] on LFPW and Helen databases as shown in Fig. 8.
RDAMs only model certain facial areas not including hair,
forehead, neck and ears. For the ease of comparison, the
reconstructed texture of RDAMs (the last row) is put on top
of the corresponding images in the middle row. Although we
lost some color consistency with the background, RDAMs can
produce more natural looking faces than images in [26].

D. Model Fitting in RDAMs

We compared our results with Active Orientation Models
[27] and Fast-SIC [11] in the following modeling ﬁtting
experiment. We evaluated model ﬁtting using the LFPW and
the AR databases with about 300 images (23 images from
LFPW database, and 268 images from AR database. The
average errors are reported in Table II. The initial shape is the
mean shape placed inside the faces bounding box. RDAMs
achieve comparable performance compared to other methods.

V. CONCLUSION

In this paper, the novel Robust Deep Appearance Models
have been proposed to deal with large variations in the wild
such as occlusions and poses. Comparing with the previous
DAMs model, the proposed approach can produce remarkable
reconstruction results even when faces are occluded or having
extreme poses. Moreover, the proposed ﬁtting algorithms ﬁt

