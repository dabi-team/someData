Relation Structure-Aware Heterogeneous Information Network Embedding

Yuanfu Lu1, Chuan Shi1∗, Linmei Hu1, Zhiyuan Liu2
1Beijing University of Posts and Telecommunications, Beijing, China
2Tsinghua University, Beijing, China
{luyuanfu, shichuan, hulinmei}@bupt.edu.cn, liuzy@tsinghua.edu.cn

9
1
0
2

y
a
M
5
1

]
I
S
.
s
c
[

1
v
7
2
0
8
0
.
5
0
9
1
:
v
i
X
r
a

Abstract

Heterogeneous information network (HIN) embedding aims
to embed multiple types of nodes into a low-dimensional
space. Although most existing HIN embedding methods con-
sider heterogeneous relations in HINs, they usually employ
one single model for all relations without distinction, which
inevitably restricts the capability of network embedding. In
this paper, we take the structural characteristics of heteroge-
neous relations into consideration and propose a novel Re-
lation structure-aware Heterogeneous Information Network
Embedding model (RHINE). By exploring the real-world net-
works with thorough mathematical analysis, we present two
structure-related measures which can consistently distinguish
heterogeneous relations into two categories: Afﬁliation Re-
lations (ARs) and Interaction Relations (IRs). To respect the
distinctive characteristics of relations, in our RHINE, we pro-
pose different models speciﬁcally tailored to handle ARs and
IRs, which can better capture the structures and semantics of
the networks. At last, we combine and optimize these mod-
els in a uniﬁed and elegant manner. Extensive experiments
on three real-world datasets demonstrate that our model sig-
niﬁcantly outperforms the state-of-the-art methods in various
tasks, including node clustering, link prediction, and node
classiﬁcation.

1

Introduction

Network embedding has shed a light on the analysis of net-
works as it is effective to learn the latent features that encode
the properties of a network (Cui et al. 2018; Cai, Zheng, and
Chang 2018). Although the state-of-the-arts (Perozzi, Al-
Rfou, and Skiena 2014; Grover and Leskovec 2016; Tang et
al. 2015; Wang, Cui, and Zhu 2016) have achieved promis-
ing performance in many data mining tasks, most of them
focus on homogeneous networks, which only contain one
single type of nodes and edges. In reality, many networks
are usually with multiple types of nodes and edges, widely
known as heterogeneous information networks (HINs) (Sun
et al. 2011; Shi et al. 2017). Taking the DBLP network for
example, as shown in Figure 1(a), it contains four types of
nodes: Author (A), Paper (P), Conference (C) and Term (T),
and multiple types of relations: writing/written relations, and

∗Corresponding author: Chuan Shi (shichuan@bupt.edu.cn).
Copyright c(cid:13) 2019, Association for the Advancement of Artiﬁcial
Intelligence (www.aaai.org). All rights reserved.

Figure 1: The illustration of an HIN and the compari-
son between conventional methods and our method (non-
differentiated relations v.s. differentiated relations).

publish/published relations, etc. In addition, there are com-
posite relations represented by meta-paths (Sun et al. 2011)
such as APA (co-author relation) and APC (authors write pa-
pers published in conferences), which are widely used to
exploit rich semantics in HINs. Thus, compared to homo-
geneous networks, HINs fuse more information and contain
richer semantics. Directly applying traditional homogeneous
models to embed HINs will inevitably lead to reduced per-
formance in downstream tasks.

To model the heterogeneity of networks, several attempts
have been done on HIN embedding. For example, some
models employ meta-path based random walk to gener-
ate node sequences for optimizing the similarity between
nodes (Shang et al. 2016; Dong, Chawla, and Swami 2017;
Fu, Lee, and Lei 2017). Some methods decompose the HIN
into simple networks and then optimize the proximity be-
tween nodes in each sub-network (Tang, Qu, and Mei 2015;
Xu et al. 2017; Shi et al. 2018). There are also some
neural network based methods that learn non-linear map-
ping functions for HIN embedding (Chang et al. 2015;
Wang et al. 2018; Han et al. 2018). Although these methods
consider the heterogeneity of networks, they usually have
an assumption that one single model can handle all relations
and nodes, through keeping the representations of two nodes

(a)  An example of HINa1a3Author (A)Paper (P)Conf. (C)a2a4p1p3p4p5p2c1c2Term (T)t1t2t3t4(c)  Our ModelAffiliation Relations…APCPCInteraction Relations…APAPT(b)  Conventional ModelsRelationsAPCAP…APTPC 
 
 
 
 
 
close to each other, as illustrated in Figure 1(b).

However, various relations in an HIN have signiﬁcantly
different structural characteristics, which should be handled
with different models. Let’s see a toy example in Figure 1(a).
The relations in the network include atomic relations (e.g.,
AP and PC) and composite relations (e.g., APA and APC).
Intuitively, AP relation and PC relation reveal rather differ-
ent characteristics in structure. That is, some authors write
some papers in the AP relation, which shows a peer-to-
peer structure. While that many papers are published in one
conference in the PC relation reveals the structure of one-
centered-by-another. Similarly, APA and APC indicate peer-
to-peer and one-centered-by-another structures respectively.
The intuitive examples clearly illustrate that relations in an
HIN indeed have different structural characteristics.

It is non-trivial to consider different structural character-
istics of relations for HIN embedding, due to the following
challenges: (1) How to distinguish the structural character-
istics of relations in an HIN? Various relations (atomic re-
lations or meta-paths) with different structures are involved
in an HIN. Quantitative and explainable criteria are desired
to explore the structural characteristics of relations and dis-
tinguish them. (2) How to capture the distinctive structural
characteristics of different categories of relations? Since the
various relations have different structures, modeling them
with one single model may lead to some loss of information.
We need to speciﬁcally design appropriate models which are
able to capture their distinctive characteristics. (3) The dif-
ferent models for the differentiated relations should be easily
and smoothly combined to ensure simple optimization in a
uniﬁed manner.

In this paper, we present a novel model for HIN em-
bedding, named Relation structure-aware HIN Embedding
(RHINE). In speciﬁc, we ﬁrst explore the structural char-
acteristics of relations in HINs with thorough mathematical
analysis, and present two structure-related measures which
can consistently distinguish the various relations into two
categories: Afﬁliation Relations (ARs) with one-centered-
by-another structures and Interaction Relations (IRs) with
peer-to-peer structures. In order to capture the distinctive
structural characteristics of the relations, we then propose
two speciﬁcally designed models. For ARs where the nodes
share similar properties (Yang and Leskovec 2012), we cal-
culate Euclidean distance as the proximity between nodes,
so as to make the nodes directly close in the low-dimensional
space. On the other hand, for IRs which bridge two compati-
ble nodes, we model them as translations between the nodes.
Since the two models are consistent in terms of mathemati-
cal form, they can be optimized in a uniﬁed and elegant way.
It is worthwhile to highlight our contributions as follows:

• To the best of our knowledge, we make the ﬁrst attempt to
explore the different structural characteristics of relations
in HINs and present two structure-related criteria which
can consistently distinguish heterogeneous relations into
ARs and IRs.

• We propose a novel relation structure-aware HIN embed-
ding model (RHINE), which fully respects the distinctive
structural characteristics of ARs and IRs by exploiting ap-

propriate models and combining them in a uniﬁed and el-
egant manner.

• We conduct comprehensive experiments to evaluate the
performance of our model. Experimental results demon-
strate that our model signiﬁcantly outperforms state-of-
the-art network embedding models in various tasks.

2 Related Work
Recently, network embedding has attracted considerable at-
tention. Inspired by word2vec (Mikolov et al. 2013b), ran-
dom walk based methods (Perozzi, Al-Rfou, and Skiena
2014; Grover and Leskovec 2016) have been proposed to
learn representations of networks by the skip-gram model.
After that, several models are designed to better preserve
network properties (Tang et al. 2015; Ou et al. 2016; Ribeiro,
Saverese, and Figueiredo 2017). Besides, there are some
deep neural network based models for network embedding
(Wang, Cui, and Zhu 2016; Cao, Lu, and Xu 2016). How-
ever, all the aforementioned methods focus only on learning
the representations of homogeneous networks.

Different from homogeneous networks, HINs consist of
multiple types of nodes and edges. Several attempts have
been done on HIN embedding and achieved promising
performance in various tasks (Tang, Qu, and Mei 2015;
Shang et al. 2016; Fu, Lee, and Lei 2017; Wang et al. 2018;
Shi et al. 2018). PTE (Tang, Qu, and Mei 2015) decomposes
an HIN to a set of bipartite networks and then performs net-
work embedding individually. ESim (Shang et al. 2016) uti-
lizes user-deﬁned meta-paths as guidance to learn node em-
beddings. Metapath2vec (Dong, Chawla, and Swami 2017)
combines meta-path based random walks and skip-gram
model for HIN embedding. HIN2Vec (Fu, Lee, and Lei
2017) learns the embeddings of HINs by conducting multi-
ple prediction training tasks jointly. HERec (Shi et al. 2018)
ﬁlters the node sequences with type constraints and thus cap-
tures the semantics of HINs.

All the above-mentioned models deal with all relations in
HINs with one single model, neglecting differentiated struc-
tures of relations. In this paper, we explore and distinguish
the structural characteristics of relations with quantitative
analysis. For relations with distinct structural characteris-
tics, we propose to handle them with speciﬁcally designed
models.

3 Preliminaries
In this section, we introduce some basic concepts and for-
malize the problem of HIN embedding.
Deﬁnition 1. Heterogeneous Information Network (HIN).
An HIN is deﬁned as a graph G = (V, E, T, φ, ϕ), in which
V and E are the sets of nodes and edges, respectively. Each
node v and edge e are associated with their type mapping
functions φ : V → TV and ϕ : E → TE, respectively.
TV and TE denote the sets of node and edge types, where
|TV | + |TE| > 2, and T = TV ∪ TE.
Deﬁnition 2. Meta-path. A meta-path m ∈ M is deﬁned as
a sequence of node types tvi or edge types tej in the form

Table 1: Statistics of the three datasets. tu denotes the type of node u, (cid:104)u, r, v(cid:105) is a node-relation triple.
Number of Relations Number of Avg. Degree Avg. Degree

Measures

Datasets

Nodes

Relation
Category

DBLP

Yelp

Term (T)
Paper (P)
Author (A)
Conference (C)

User (U)
Service (S)
Business (B)
Star Level (L)
Reservation (R)

Nodes

8,811
14,376
14,475
20

1,286
2
2,614
9
2

AMiner

Paper (P)
Author (A)
Reference (R)
Conference (C)

127,623
164,472
147,251
101

(tu ∼ tv)
PC
APC
AP
PT
APT

BR
BS
BL
UB
BUB

PC
APC
AP
PR
APR

Relations

14,376
24,495
41,794
88,683
260,605

2,614
2,614
2,614
30,838
528,332

127,623
232,659
355,072
392,519
1,084,287

of tu
1.0
2.9
2.8
6.2
18.0

1.0
1.0
1.0
23.9
405.3

1.0
2.2
2.2
3.1
7.1

of tv
718.8
2089.7
2.9
10.7
29.6

1307.0
1307.0
290.4
11.8
405.3

1263.6
3515.6
2.8
2.7
7.9

D(r)

718.8
720.6
1.0
1.7
1.6

1307.0
1307.0
290.4
2.0
1.0

1264.6
1598.0
1.3
1.1
1.1

S(r)

0.05
0.085
0.0002
0.0007
0.002

0.5
0.5
0.1
0.009
0.07

0.01
0.01
0.00002
0.00002
0.00004

AR
AR
IR
IR
IR

AR
AR
AR
IR
IR

AR
AR
IR
IR
IR

te1−→ tv2 ...

tel−→ tvl+1 (abbreviated as tv1tv2...tvl+1 ),
of tv1
which describes a composite relation between v1 and vl+1.
Deﬁnition 3. Node-Relation Triple. In an HIN G, relations
R include atomic relations (e.g., links) and composite rela-
tions (e.g., meta-paths). A node-relation triple (cid:104)u, r, v(cid:105) ∈ P ,
describes that two nodes u and v are connected by a relation
r ∈ R. Here P represents the set of all node-relation triples.
Example 1. For example, as shown in Figure 1(a),
(cid:104)a2, AP C, c2(cid:105) is a node-relation triple, meaning that a1
writes a paper published in c2.
Deﬁnition 4. Heterogeneous Information Network Embed-
ding. Given an HIN G = (V , E, T , φ, ϕ) , the goal of HIN
embedding is to develop a mapping function f : V → Rd
that projects each node v ∈ V to a low-dimensional vector
in Rd, where d (cid:28) |V |.

4 Structural Characteristics of Relations
In this section, we ﬁrst describe three real-world HINs and
analyze the structural characteristics of relations in HINs.
Then we present two structure-related measures which can
consistently distinguish various relations quantitatively.

4.1 Dataset Description
Before analyzing the structural characteristics of relations,
we ﬁrst brieﬂy introduce three datasets used in this paper,
including DBLP1, Yelp2 and AMiner3(Tang et al. 2008). The
detailed statistics of these datasets are illustrated in Table 1.
DBLP is an academic network, which contains four types
of nodes: author (A), paper (P), conference (C) and term (T).
We extract node-relation triples based on the set of relations
{AP, PC, PT, APC, APT}. Yelp is a social network, which
contains ﬁve types of nodes: user (U), business (B), reser-
vation (R), service (S) and star level (L). We consider the
relations {BR, BS, BL, UB, BUB}. AMiner is also an aca-
demic network, which contains four types of nodes, includ-

1https://dblp.uni-trier.de
2https://www.yelp.com/dataset/
3https://www.aminer.cn/citation

ing author (A), paper (P), conference (C) and reference (R).
We consider the relations {AP, PC, PR, APC, APR}. No-
tice that we can actually analyze all the relations based on
meta-paths. However, not all meta-paths have a positive ef-
fect on embeddings (Sun et al. 2013). Hence, following pre-
vious works (Shang et al. 2016; Dong, Chawla, and Swami
2017), we choose the important and meaningful meta-paths.

4.2 Afﬁliation Relations and Interaction

Relations

In order to explore the structural characteristics of relations,
we present mathematical analysis on the above datasets.

Since the degree of nodes can well reﬂect the structures of
networks (Wasserman and Faust 1994), we deﬁne a degree-
based measure D(r) to explore the distinction of various re-
lations in an HIN. Speciﬁcally, we compare the average de-
grees of two types of nodes connected with the relation r,
via dividing the larger one by the smaller one (D(r) ≥ 1).
Formally, given a relation r with nodes u and v (i.e., node
relation triple (cid:104)u, r, v(cid:105)), tu and tv are the node types of u and
v, we deﬁne D(r) as follows:

D(r) =

max [ ¯dtu , ¯dtv ]
min [ ¯dtu , ¯dtv ]

,

(1)

where ¯dtu and ¯dtv are the average degrees of nodes of the
types tu and tv respectively.

A large value of D(r) indicates quite inequivalent struc-
tural roles of two types of nodes connected via the relation
r (one-centered-by-another), while a small value of D(r)
means compatible structural roles (peer-to-peer). In other
words, relations with a large value of D(r) show much
stronger afﬁliation relationships. Nodes connected via such
relations share much more similar properties (Faust 1997).
While relations with a small value of D(r) implicate much
stronger interaction relationships. Therefore, we call the two
categories of relations as Afﬁliation Relations (ARs) and In-
teraction Relations (IRs), respectively.

In order to better understand the structural difference be-
tween various relations, we take the DBLP network as an
example. As shown in Table 1, for the relation PC with

D(P C) = 718.8, the average degree of nodes with type
P is 1.0 while that of nodes with type C is 718.8. It shows
that papers and conferences are structurally inequivalent. Pa-
pers are centered by conferences. While D(AP ) = 1.1 in-
dicates that authors and papers are compatible and peer-to-
peer in structure. This is consistent with our common sense.
Semantically, the relation PC means that ‘papers are pub-
lished in conferences’, indicating an afﬁliation relationship.
Differently, AP means that ‘authors write papers’, which ex-
plicitly describes an interaction relationship.

In fact, we can also deﬁne some other measures to cap-
ture the structural difference. For example, we compare the
relations in terms of sparsity, which can be deﬁned as:

S(r) =

Nr
Ntu × Ntv

,

(2)

where Nr represents the number of relation instances fol-
lowing r. Ntu and Ntv mean the number of nodes with type
tu and tv, respectively. The measure can also consistently
distinguish the relations into two categories: ARs and IRs.
The detailed statistics of all the relations in the three HINs
are shown in Table 1.

Evidently, Afﬁliation Relations and Interaction Relations
exhibit rather distinct characteristics: (1) ARs indicate one-
centered-by-another structures, where the average degrees
of the types of end nodes are extremely different. They im-
ply an afﬁliation relationship between nodes. (2) IRs de-
scribe peer-to-peer structures, where the average degrees of
the types of end nodes are compatible. They suggest an in-
teraction relationship between nodes.

5 Relation Structure-Aware HIN Embedding
In this section, we present a novel Relation structure-aware
HIN Embedding model (RHINE), which individually han-
dles two categories of relations (ARs and IRs) with different
models in order to preserve their distinct structural charac-
teristics, as illustrated in Figure 1(c).

5.1 Basic Idea
Through our exploration with thorough mathematical analy-
sis, we ﬁnd that the heterogeneous relations can be typically
divided into ARs and IRs with different structural charac-
teristics. In order to respect their distinct characteristics, we
need to speciﬁcally design different while appropriate mod-
els for the different categories of relations.

For ARs, we propose to take Euclidean distance as a
metric to measure the proximity of the connected nodes
in the low-dimensional space. There are two motivations
behind this: (1) First of all, ARs show afﬁliation struc-
tures between nodes, which indicate that nodes connected
via such relations share similar properties. (Faust 1997;
Yang and Leskovec 2012). Hence, nodes connected via ARs
could be directly close to each other in the vector space,
which is also consistent with the optimization of Euclidean
distance (Danielsson 1980). (2) Additionally, one goal of
HIN embedding is to preserve the high-order proximity. Eu-
clidean distance can ensure that both ﬁrst-order and second-
order proximities are preserved as it meets the condition of
the triangle inequality (Hsieh et al. 2017).

Different from ARs, IRs indicate strong interaction rela-
tionships between compatible nodes, which themselves con-
tain important structural information of two nodes. Thus,
we propose to explicitly model an IR as a translation be-
tween nodes in the low-dimensional vector space. Addition-
ally, the translation based distance is consistent with the
Euclidean distance in the mathematical form (Bordes et al.
2013). Therefore, they can be smoothly combined in a uni-
ﬁed and elegant manner.

5.2 Different Models for ARs and IRs

In this subsection, we introduce two different models ex-
ploited in RHINE for ARs and IRs, respectively.

Euclidean Distance for Afﬁliation Relations Nodes con-
nected via ARs share similar properties (Faust 1997), there-
fore nodes could be directly close to each other in the vector
space. We take the Euclidean distance as the proximity mea-
sure of two nodes connected by an AR.

Formally, given an afﬁliation node-relation triple
(cid:104)p, s, q(cid:105) ∈ PAR where s ∈ RAR is the relation between p
and q with weight wpq, the distance between p and q in the
latent vector space is calculated as follows:

f (p, q) = wpq||Xp − Xq||2
2,

(3)

in which Xp ∈ Rd and Xq ∈ Rd are the embedding vectors
of p and q, respectively. As f (p, q) quantiﬁes the distance
between p and q in the low-dimensional vector space, we
aim to minimize f (p, q) to ensure that nodes connected by
an AR should be close to each other. Hence, we deﬁne the
margin-based loss (Bordes et al. 2013) function as follows:

LEuAR =

(cid:88)

(cid:88)

s∈RAR
(cid:88)

(cid:104)p,s,q(cid:105)∈PAR

max[0, γ + f (p, q) − f (p(cid:48), q(cid:48))],

(4)

(cid:104)p(cid:48),s,q(cid:48)(cid:105)∈P (cid:48)

AR

where γ > 0 is a margin hyperparameter. PAR is the set of
positive afﬁliation node-relation triples, while P (cid:48)
AR is the set
of negative afﬁliation node-relation triples.

Translation-based Distance for Interaction Relations
Interaction Relations demonstrate strong interactions be-
tween nodes with compatible structural roles. Thus, different
from ARs, we explicitly model IRs as translations between
nodes.

Formally, given an interaction node-relation triple
(cid:104)u, r, v(cid:105) where r ∈ RIR with weight wuv, we deﬁne the
score function as:

g(u, v) = wuv||Xu + Yr − Xv||,

(5)

where Xu and Xv are the node embeddings of u and v re-
spectively, and Yr is the embedding of the relation r. Intu-
itively, this score function penalizes deviation of (Xu + Yr)
from the vector Xv.

For each interaction node-relation triple (cid:104)u, r, v(cid:105) ∈ PIR,

we deﬁne the margin-based loss function as follows:
(cid:88)

(cid:88)

LT rIR =

r∈RIR
(cid:88)

(cid:104)u,r,v(cid:105)∈PIR

max[0, γ + g(u, v) − g(u(cid:48), v(cid:48))]

(6)

(cid:104)u(cid:48),r,v(cid:48)(cid:105)∈P (cid:48)

IR

where PIR is the set of positive interaction node-relation
triples, while P (cid:48)
IR is the set of negative interaction node-
relation triples.

5.3 A Uniﬁed Model for HIN Embedding
Finally, we smoothly combine the two models for differ-
ent categories of relations by minimizing the following loss
function:

(cid:88)

(cid:88)

(cid:88)

L = LEuAR + LT rIR

(7)
max[0, γ + f (p, q) − f (p(cid:48), q(cid:48))]

s∈RAR
(cid:88)

(cid:104)p,s,q(cid:105)∈PAR
(cid:88)

(cid:104)p(cid:48),s,q(cid:48)(cid:105)∈P (cid:48)
(cid:88)

AR

max[0, γ + g(u, v) − g(u(cid:48), v(cid:48))]

=

+

r∈RIR

(cid:104)u,r,v(cid:105)∈PIR

(cid:104)u(cid:48),r,v(cid:48)(cid:105)∈P (cid:48)

IR

Sampling Strategy As shown in Table 1, the distributions
of ARs and IRs are quite unbalanced. What’s more, the pro-
portion of relations are unbalanced within ARs and IRs. Tra-
ditional edge sampling may suffer from under-sampling for
relations with a small amount or over-sampling for relations
with a large amount. To address the problems, we draw pos-
itive samples according to their probability distributions. As
for negative samples, we follow previous work (Bordes et
al. 2013) to construct a set of negative node-relation triples
P (cid:48)
(u,r,v) = {(u(cid:48), r, v)|u(cid:48) ∈ V } ∪ {(u, r, v(cid:48))|v(cid:48) ∈ V } for the
positive node-relation triple (u, r, v), where either the head
or tail is replaced by a random node, but not both at the same
time.

6 Experiments
In this section, we conduct extensive experiments to demon-
strate the effectiveness of our model RHINE.

6.1 Datasets
As described in Subsection 4.1, we conduct experiments
on three datasets, including DBLP, Yelp and AMiner. The
statistics of them are summarized in Table 1.

6.2 Baseline Methods
We compare our proposed model RHINE with six state-of-
the-art network embedding methods.
• DeepWalk (Perozzi, Al-Rfou, and Skiena 2014) per-
forms a random walk on networks and then learns low-
dimensional node vectors via the skip-gram model.

• LINE (Tang et al. 2015) considers ﬁrst-order and second-
order proximities in networks. We denote the model that
only uses ﬁrst-order or second-order proximity as LINE-
1st or LINE-2nd, respectively.

• PTE (Tang, Qu, and Mei 2015) decomposes an HIN
to a set of bipartite networks and then learns the low-
dimensional representation of the network.

Table 2: Performance Evaluation of Node Clustering.

Methods

DBLP

Yelp

AMiner

DeepWalk
LINE-1st
LINE-2nd
PTE
ESim
HIN2Vec
metapath2vec
RHINE

0.3884
0.2775
0.4675
0.3101
0.3449
0.4256
0.6065
0.7204

0.3043
0.3103
0.3593
0.3527
0.2214
0.3657
0.3507
0.3882

0.5427
0.3736
0.3862
0.4089
0.3409
0.3948
0.5586
0.6024

• ESim (Shang et al. 2016) takes a given set of meta-paths
as input to learn a low-dimensional vector space. For a
fair comparison, we use the same meta-paths with equal
weights in Esim and our model RHINE.

• HIN2Vec (Fu, Lee, and Lei 2017) learns the latent vectors
of nodes and meta-paths in an HIN by conducting multi-
ple prediction training tasks jointly.

• Metapath2vec (Dong, Chawla, and Swami 2017) lever-
ages meta-path based random walks and skip-gram model
to perform node embedding. We leverage the meta-paths
APCPA, UBSBU and APCPA in DBLP, Yelp and AMiner
respectively, which perform best in the evaluations.

Parameter Settings For a fair comparison, we set the em-
bedding dimension d = 100 and the size of negative samples
k = 3 for all models. For DeepWalk, HIN2Vec and metap-
ath2vec, we set the number of walks per node w = 10, the
walk length l = 100 and the window size τ = 5. For our
model RHINE, the margin γ is set to 1.

6.3 Node Clustering
Experimental Settings We leverage K-means to cluster
the nodes and evaluate the results in terms of normalized
mutual information (NMI) (Shi et al. 2014).

Results As shown in Table 2, our model RHINE signiﬁ-
cantly outperforms all the compared methods. (1) Compared
with the best competitors, the clustering performance of our
model RHINE improves by 18.79%, 6.15% and 7.84% on
DBLP, Yelp and AMiner, respectively. It demonstrates the
effectiveness of our model RHINE by distinguishing the var-
ious relations with different structural characteristics in an
HIN. In addition, it also validates that we utilize appropri-
ate models for different categories of relations. (2) In all
baseline methods, homogeneous network embedding mod-
els achieve the lowest performance, because they ignore the
heterogeneity of relations and nodes. (3) RHINE signiﬁ-
cantly outperforms existing HIN embedding models (i.e.,
ESim, HIN2Vec and metapath2vec) on all datasets. We be-
lieve the reason is that our proposed RHINE with appro-
priate models for different categories of relations can better
capture the structural and semantic information of HINs.

6.4 Link Prediction
Experimental Setting We model the link prediction prob-
lem as a binary classiﬁcation problem that aims to predict

Table 3: Performance Evaluation of Link Prediction.

Methods

DBLP (A-A)

DBLP (A-C)

Yelp (U-B)

AMiner (A-A)

AMiner (A-C)

DeepWalk
LINE-1st
LINE-2nd
PTE
ESim
HIN2Vec
metapath2vec
RHINE

AUC

0.9131
0.8264
0.7448
0.8853
0.9077
0.9160
0.9153
0.9315

F1

0.8246
0.7233
0.6741
0.8331
0.8129
0.8475
0.8431
0.8664

AUC

0.7634
0.5335
0.8340
0.8843
0.7736
0.8966
0.8987
0.9148

F1

0.7047
0.6436
0.7396
0.7720
0.6795
0.7892
0.8012
0.8478

AUC

0.8476
0.5084
0.7509
0.8061
0.6160
0.8653
0.7818
0.8762

F1

0.6397
0.4379
0.6809
0.7043
0.4051
0.7709
0.5391
0.7912

AUC

0.9122
0.6665
0.5808
0.8119
0.8970
0.9141
0.9111
0.9316

F1

0.8471
0.6274
0.4682
0.7319
0.8245
0.8566
0.8530
0.8664

AUC

0.7701
0.7574
0.7899
0.8442
0.8089
0.8099
0.8902
0.9173

F1

0.7112
0.6983
0.7177
0.7587
0.7392
0.7282
0.8125
0.8262

Table 4: Performance Evaluation of Multi-class Classiﬁcation.

Methods

DBLP

Yelp

AMiner

Macro-F1 Micro-F1 Macro-F1 Micro-F1 Macro-F1 Micro-F1

DeepWalk
LINE-1st
LINE-2nd
PTE
ESim
HIN2Vec
metapath2vec
RHINE

0.7475
0.8091
0.7559
0.8852
0.8867
0.8631
0.8976
0.9344

0.7500
0.8250
0.7500
0.8750
0.8750
0.8500
0.9000
0.9250

0.6723
0.4872
0.5304
0.5389
0.6836
0.6075
0.5337
0.7132

0.7012
0.6639
0.7377
0.7342
0.7399
0.7361
0.7208
0.7572

0.9386
0.9494
0.9468
0.9791
0.9910
0.9962
0.9934
0.9884

0.9512
0.9569
0.9491
0.9847
0.9948
0.9965
0.9936
0.9807

whether a link exists. In this task, we conduct co-author (A-
A) and author-conference (A-C) link prediction for DBLP
and AMiner. For Yelp, we predict user-business (U-B) links
which indicate whether a user reviews a business. We ﬁrst
randomly separate the original network into training net-
work and testing network, where the training network con-
tains 80% relations to be predicted (i.e., A-A, A-C and U-B)
and the testing network contains the rest. Then, we train the
embedding vectors on the training network and evaluate the
prediction performance on the testing network.

Results The results of link prediction task are reported
in Table 3 with respect to AUC and F1 score. It is clear
that our model performs better than all baseline methods on
three datasets. The reason behind the improvement is that
our model based on Euclidean distance modeling relations
can capture both the ﬁrst-order and second-order proximi-
ties. In addition, our model RHINE distinguishes multiple
types of relations into two categories in terms of their struc-
tural characteristics, and thus can learn better embeddings of
nodes, which are beneﬁcial for predicting complex relation-
ships between two nodes.

6.5 Multi-Class Classiﬁcation
Experimental Setting
In this task, we employ the same
labeled data used in the node clustering task. After learning
the node vectors, we train a logistic classiﬁer with 80% of
the labeled nodes and test with the remaining data. We use
Micro-F1 and Macro-F1 score as the metrics for evaluation
(Dong, Chawla, and Swami 2017).

Results We summarize the results of classiﬁcation in Ta-
ble 4. As we can observe, (1) RHINE achieves better per-
formance than all baseline methods on all datasets except
Aminer. It improves the performance of node classiﬁcation
by about 4% on both DBLP and Yelp averagely. In terms
of AMiner, the RHINE performs slightly worse than ESim,
HIN2vec and metapath2vec. This may be caused by over-
capturing the information of relations PR and APR (R rep-
resents references). Since an author may write a paper re-
ferring to various ﬁelds, these relations may introduce some
noise. (2) Although ESim and HIN2Vec can model multiple
types of relations in HINs, they fail to perform well in most
cases. Our model RHINE achieves good performance due to
the respect of distinct characteristics of various relations.

6.6 Comparison of Variant Models
In order to verify the effectiveness of distinguishing the
structural characteristics of relations, we design three vari-
ant models based on RHINE as follows:

• RHINEEu leverages Euclidean distance to embed HINs

without distinguishing the relations.

• RHINET r models all nodes and relations in HINs with
translation mechanism, which is just like TransE (Bordes
et al. 2013).

• RHINERe leverages Euclidean distance to model IRs

while translation mechanism for ARs, reversely.

We set the parameters of variant models as the same as those
of our proposed model RHINE. The results of the three tasks

Figure 2: Performance Evaluation of Variant Models.

Figure 3: Visualization of Node Embeddings.

are shown in Figure 2. It is evident that our model outper-
forms RHINEEu and RHINET r, indicating that it is ben-
eﬁcial for learning the representations of nodes by distin-
guishing the heterogeneous relations. Besides, we ﬁnd that
RHINET r achieves better performance than RHINEEu. This
is due to the fact that there are generally more peer-to-peer
relationships (i.e., IRs) in the networks. Directly making all
nodes close to each other leads to much loss of information.
Compared with the reverse model RHINERe, RHINE also
achieves better performance on all tasks, which implies that
two models for ARs and IRs are well designed to capture
their distinctive characteristics.

6.7 Visualization
To understand the representations of the networks intu-
itively, we visualize the vectors of nodes (i.e., papers) in
DBLP learned with DeepWalk, metapath2vec and RHINE
in Figure 3. As we can see, our model clearly clusters the
paper nodes into four groups. It demonstrates that our model
learns superior node embeddings by distinguishing the het-
erogeneous relations in HINs. In contrast, DeepWalk barely
splits papers into different groups. Metapath2vec performs
better than DeepWalk, but the boundary is blurry.

6.8 Parameter Analysis
In order to investigate the inﬂuences of different parame-
ters in our model, we evaluate the RHINE in node clustering
task. Speciﬁcally, we explore the sensitivity of two parame-
ters, including the number of embedding dimensions and the
number of negative samples. As shown in Figure 4(a), the

Figure 4: Parameter Analysis.

performance of our model improves with the increase in the
number of dimensions, and then tends to be stable once the
dimension of the representation reaches around 100. Simi-
larly, Figure 4(b) shows that as the number of negative ex-
amples increases, the performance of our model ﬁrst grows
and then becomes stable when the number reaches 3.

7 Conclusion
In this paper, we make the ﬁrst attempt to explore and distin-
guish the structural characteristics of relations for HIN em-
bedding. We present two structure-related measures which
can consistently distinguish heterogeneous relations into
two categories: afﬁliation relations and interaction relations.
To respect the distinctive structures of relations, we pro-
pose a novel relation structure-aware HIN embedding model
(RHINE), which individually handles these two categories
of relations. Experimental results demonstrate that RHINE
outperforms state-of-the-art baselines in various tasks. In the

NMI00.20.40.60.8(a) Node Clustering on Three DatasetsDBLPYelpAMinerRHINE_EuRHINE_TrRHINE_ReRHINEMacro-F100.250.50.751(b) Classification on Three Datasets DBLPYelpAMinerRHINE_EuRHINE_TrRHINE_ReRHINEAUC00.250.50.751(c) Link Prediction on Three DatasetsDBLP(A-C)Yelp(U-B)AMiner(A-C)RHINE_EuRHINE_TrRHINE_ReRHINE(a) DeepWalk(b) metapath2vec(c) RHINENMI0.30.40.50.60.70.8#Dimensions  (a) NMI w.r.t #dimensions1050100200300DBLPYelpAMinerNMI0.30.40.50.60.70.8#Negative samples   (b) NMI w.r.t #negative samples12357DBLPYelpAMinerfuture, we will explore other possible measures to differen-
tiate relations so that we can better capture the structural in-
formation of HINs. In addition, we will exploit deep neural
network based models for different relations.

8 Acknowledgments
This work is supported by the National Key Research
and Development Program of China (2017YFB0803304),
the National Natural Science Foundation of China (No.
61772082, 61806020, 61702296, 61375058), the Beijing
Municipal Natural Science Foundation (4182043), and the
CCF-Tencent Open Fund.

References
[Bordes et al. 2013] Bordes, A.; Usunier, N.; Garcia-Duran, A.;
Weston, J.; and Yakhnenko, O. 2013. Translating embeddings
In Proceedings of NIPS,
for modeling multi-relational data.
2787–2795.

[Cai, Zheng, and Chang 2018] Cai, H.; Zheng, V. W.; and
Chang, K. 2018. A comprehensive survey of graph embedding:
problems, techniques and applications. IEEE Transactions on
Knowledge and Data Engineering.

[Cao, Lu, and Xu 2015] Cao, S.; Lu, W.; and Xu, Q.

2015.
Grarep: Learning graph representations with global structural
information. In Proceedings of CIKM, 891–900. ACM.

[Cao, Lu, and Xu 2016] Cao, S.; Lu, W.; and Xu, Q. 2016. Deep
neural networks for learning graph representations. In Proceed-
ings of AAAI, 1145–1152.

[Chang et al. 2015] Chang, S.; Han, W.; Tang, J.; Qi, G.-J.; Ag-
garwal, C. C.; and Huang, T. S. 2015. Heterogeneous network
embedding via deep architectures. In Proceedings of SIGKDD,
119–128. ACM.

[Cui et al. 2018] Cui, P.; Wang, X.; Pei, J.; and Zhu, W. 2018. A
survey on network embedding. IEEE Transactions on Knowl-
edge and Data Engineering.

[Danielsson 1980] Danielsson, P.-E.

Euclidean dis-
tance mapping. Computer Graphics and image processing
14(3):227–248.

1980.

[Dong, Chawla, and Swami 2017] Dong, Y.; Chawla, N. V.; and
Swami, A. 2017. metapath2vec: Scalable representation learn-
ing for heterogeneous networks. In Proceedings of SIGKDD,
135–144. ACM.

[Faust 1997] Faust, K. 1997. Centrality in afﬁliation networks.

Social networks 19(2):157–191.

[Fu, Lee, and Lei 2017] Fu, T.-y.; Lee, W.-C.; and Lei, Z. 2017.
Hin2vec: Explore meta-paths in heterogeneous information net-
In Proceedings of CIKM,
works for representation learning.
1797–1806. ACM.

[Grover and Leskovec 2016] Grover, A., and Leskovec, J. 2016.
node2vec: Scalable feature learning for networks. In Proceed-
ings of SIGKDD, 855–864. ACM.

[Han et al. 2018] Han, X.; Shi, C.; Wang, S.; Philip, S. Y.; and
Song, L. 2018. Aspect-level deep collaborative ﬁltering via
heterogeneous information networks. In Proceedings of IJCAI,
3393–3399.

[Hsieh et al. 2017] Hsieh, C.-K.; Yang, L.; Cui, Y.; Lin, T.-Y.;
Belongie, S.; and Estrin, D. 2017. Collaborative metric learn-
ing. In Proceedings of WWW, 193–201.

[Mikolov et al. 2013a] Mikolov, T.; Chen, K.; Corrado, G.; and
Dean, J. 2013a. Efﬁcient estimation of word representations in
vector space. arXiv preprint arXiv:1301.3781.

[Mikolov et al. 2013b] Mikolov, T.; Sutskever, I.; Chen, K.;
Corrado, G. S.; and Dean, J. 2013b. Distributed representations
of words and phrases and their compositionality. In Proceed-
ings of NIPS, 3111–3119.

[Ou et al. 2016] Ou, M.; Cui, P.; Pei, J.; Zhang, Z.; and Zhu, W.
2016. Asymmetric transitivity preserving graph embedding. In
Proceedings of SIGKDD, 1105–1114. ACM.

[Perozzi, Al-Rfou, and Skiena 2014] Perozzi, B.; Al-Rfou, R.;
and Skiena, S. 2014. Deepwalk: Online learning of social rep-
resentations. In Proceedings of SIGKDD, 701–710. ACM.

[Ribeiro, Saverese, and Figueiredo 2017] Ribeiro,
2017.

Saverese, P. H.; and Figueiredo, D. R.
Learning node representations from structural identity.
Proceedings of SIGKDD, 385–394. ACM.

L.
F.;
struc2vec:
In

[Shang et al. 2016] Shang, J.; Qu, M.; Liu, J.; Kaplan, L. M.;
Han, J.; and Peng, J. 2016. Meta-path guided embedding for
similarity search in large-scale heterogeneous information net-
works. arXiv preprint arXiv:1610.09769.

[Shi et al. 2014] Shi, C.; Kong, X.; Huang, Y.; Philip, S. Y.; and
Wu, B. 2014. Hetesim: A general framework for relevance mea-
sure in heterogeneous networks. IEEE Transactions on Knowl-
edge and Data Engineering 26(10):2479–2492.

[Shi et al. 2017] Shi, C.; Li, Y.; Zhang, J.; Sun, Y.; and Philip,
S. Y. 2017. A survey of heterogeneous information network
IEEE Transactions on Knowledge and Data Engi-
analysis.
neering 29(1):17–37.

[Shi et al. 2018] Shi, C.; Hu, B.; Zhao, X.; and Yu, P. 2018. Het-
erogeneous information network embedding for recommenda-
tion. IEEE Transactions on Knowledge and Data Engineering.
[Sun et al. 2011] Sun, Y.; Han, J.; Yan, X.; Yu, P. S.; and Wu,
T. 2011. Pathsim: Meta path-based top-k similarity search
in heterogeneous information networks. Proceedings of VLDB
4(11):992–1003.

[Sun et al. 2013] Sun, Y.; Norick, B.; Han, J.; Yan, X.; Yu, P. S.;
and Yu, X. 2013. Pathselclus: Integrating meta-path selection
with user-guided object clustering in heterogeneous informa-
tion networks. ACM Transactions on Knowledge Discovery
from Data (TKDD) 7(3):11.

[Tang et al. 2008] Tang, J.; Zhang, J.; Yao, L.; Li, J.; Zhang,
L.; and Su, Z. 2008. Arnetminer: extraction and mining of
In Proceedings of the 14th ACM
academic social networks.
SIGKDD international conference on Knowledge discovery and
data mining, 990–998. ACM.

[Tang et al. 2015] Tang, J.; Qu, M.; Wang, M.; Zhang, M.; Yan,
J.; and Mei, Q. 2015. Line: Large-scale information network
embedding. In Proceedings of WWW, 1067–1077.

[Tang, Qu, and Mei 2015] Tang, J.; Qu, M.; and Mei, Q. 2015.
Pte: Predictive text embedding through large-scale heteroge-
neous text networks. In Proceedings of SIGKDD, 1165–1174.
ACM.

[Tu et al. 2016] Tu, C.; Zhang, W.; Liu, Z.; and Sun, M. 2016.
Max-margin deepwalk: Discriminative learning of network rep-
resentation. In Proceedings of IJCAI, 3889–3895.

[Wang et al. 2018] Wang, H.; Zhang, F.; Hou, M.; Xie, X.; Guo,
M.; and Liu, Q. 2018. Shine: signed heterogeneous information

network embedding for sentiment link prediction. In Proceed-
ings of WSDM, 592–600. ACM.

[Wang, Cui, and Zhu 2016] Wang, D.; Cui, P.; and Zhu, W.
2016. Structural deep network embedding. In Proceedings of
SIGKDD, 1225–1234. ACM.

[Wasserman and Faust 1994] Wasserman, S., and Faust, K.
1994. Social network analysis: Methods and applications, vol-
ume 8. Cambridge university press.

[Xu et al. 2017] Xu, L.; Wei, X.; Cao, J.; and Yu, P. S. 2017.
Embedding of embedding (eoe): Joint embedding for coupled
heterogeneous networks. In Proceedings of WSDM, 741–749.
ACM.

[Yang and Leskovec 2012] Yang, J., and Leskovec, J.

2012.
Community-afﬁliation graph model for overlapping network
In Proceedings of ICDM, 1170–1175.
community detection.
IEEE.

[Zhang et al. 2017] Zhang, J.; Xia, C.; Zhang, C.; Cui, L.; Fu,
Y.; and Philip, S. Y. 2017. Bl-mne: Emerging heterogeneous
social network embedding through broad learning with aligned
autoencoder. In Proceedings of ICDM, 605–614. IEEE.

