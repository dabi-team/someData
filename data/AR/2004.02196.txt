AR: Auto-Repair the Synthetic Data for Neural Machine Translation

Shanbo Cheng, Shaohui Kuang, Rongxiang Weng
Heng Yu, Changfeng Zhu, Weihua Luo
{shanbo.csb, shaohui.ksh, rongxiang.wrx}@alibaba-inc.com

0
2
0
2

r
p
A
5

]
L
C
.
s
c
[

1
v
6
9
1
2
0
.
4
0
0
2
:
v
i
X
r
a

Abstract

Compared with only using limited authentic
parallel data as training corpus, many studies
have proved that incorporating synthetic par-
allel data, which generated by back transla-
tion (BT) or forward translation (FT, or self-
training), into the NMT training process can
signiﬁcantly improve translation quality. How-
ever, as a well-known shortcoming, synthetic
parallel data is noisy because they are gener-
ated by an imperfect NMT system. As a result,
the improvements in translation quality bring
by the synthetic parallel data are greatly dimin-
ished. In this paper, we propose a novel Auto-
Repair (AR) framework to improve the qual-
ity of synthetic data. Our proposed AR model
can learn the transformation from low qual-
ity (noisy) input sentence to high quality sen-
tence based on large scale monolingual data
with BT and FT techniques. The noise in syn-
thetic parallel data will be sufﬁciently elimi-
nated by the proposed AR model and then the
repaired synthetic parallel data can help the
NMT models to achieve larger improvements.
Experimental results show that our approach
can effective improve the quality of synthetic
parallel data and the NMT model with the re-
paired synthetic data achieves consistent im-
provements on both WMT14 EN→DE and
IWSLT14 DE→EN translation tasks.

1

Introduction

Neural machine translation (NMT) based on the
encoder-decoder framework with attention mecha-
nism (Sutskever et al., 2014; Bahdanau et al., 2014;
Cho et al., 2014; Vaswani et al., 2017) has achieved
state-of-the-art (SOTA) results in many language
pairs (Xia et al., 2019). Generally, millions of or
even more parallel sentence pairs are needed to
train a decent NMT system (Wu et al., 2016). How-
ever, authentic parallel data-set is limited in many
scenarios, e.g. low resource language, which re-

stricts the use of NMT in the real world (Sennrich
and Zhang, 2019).

As collecting large scale authentic parallel data
is expensive and impractical in many scenarios, ap-
proaches that use freely available monolingual data
to create an additional synthetic parallel data have
drawn much attention, e,g back translation. Since
the pioneer work of (Sennrich et al., 2017) uses
training data consists of synthetic and authentic
parallel data to train a high quality NMT model,
many approaches (Gulcehre et al., 2015; He et al.,
2016; Poncelas et al., 2018; Lample et al., 2018;
Edunov et al., 2018) have been proposed to further
proved that synthetic parallel data obtained by back-
translation (BT) or forward-translation (FT) (Bo-
goychev and Sennrich, 2019) is a simple yet effec-
tive approach to improve translation quality.

Most of the existing work focuses on how to
better leverage given synthetic data. Caswell et al.
(2019) proposed tagged back-translation to guide
the training process by informing the NMT model
that the given source is synthetic. The work
in Wang et al. (2019) uses pre-calculated uncer-
tainty scores for BT data to weight the attention
of NMT models. Wu et al. (2019) proposed to use
noised training to better leverage both BT and FT
data. Despite the success of above works, they
haven’t propose any method to improve the quality
of synthetic data while the quality of synthetic data
matters in NMT training (Gulcehre et al., 2015).
Iterative BT (Hoang et al., 2018; Gwinnup et al.,
2017) generates increasingly better synthetic data
along with the training iterations. However, the it-
eration procedure is time-consuming and expensive
in real-world applications.

In this paper, we propose a simple and effective
auto-repair (AR) model to improve the quality of
synthetic parallel data with less time cost and can
be applied to various types of synthetic corpus. Our
auto-repair model could learn the mapping from

 
 
 
 
 
 
2.2 The Proposed AR Framework

s , T m

a , T m

sr and T m

s ) and (Sm

The right part (Auto-Repair) of Figure 1 schemati-
cally illustrates the AR Framework. We follow the
deﬁnitions for traditional synthesis in Section 2.1,
and we deﬁne Sm
sr as the repaired syn-
thetic source sentence and target sentences, respec-
tively. Rather than directly use the synthetic data,
(Sm
a ), we use a T 2T and a S2S
auto-repair model to repair the synthetic data and
get the (Sm
a ) data. Then we con-
tinue to train the S2T model with the combination
of authentic parallel corpus (Sb
a ), FT synthetic
(pseudo-parallel) corpus (Sm
s ), BT synthetic
(Sm
a , T m
sr ) and BT
repaired corpus (Sm
a ). For simplicity reasons,
we drop the superscripts of symbolic representation
in the following descriptions for monolingual data.
e.g Sa for Sm
a .

a, T b
a , T m
a ), FT repaired corpus (Sm
sr, T m

sr ) and (Sm

s , T m

a , T m

sr, T m

Auto-Repair Modeling The aim of the AR
model is to transform the low quality (noisy) sen-
tences to high quality sentences. We adopt the
seq2seq architecture to build our S2S and T2T AR
models. In this work, we use the SAN-based (self-
attention network) (Vaswani et al., 2017) struc-
ture. Given a low and high quality sentence-pair
(ss, ssr), where ss = (s1, s2, ..., sm) and a high
quality sentence ssr = (sr1, sr2, ..., srn), the con-
ditional distribution of each target token p(sri) pre-
dicted by AR model is computed as

p(sri|sr<i, ss) = AR(sri|sr<i, ss))

(1)

The input of our AR model is ss, and the AR model
transforms it to ssr, which is of higher quality than
ss.

AR Model Training We take BT scenario as an
example to describe how we generate the training
data and how we train our AR models. The FT
scenario is identical to BT, except the language to
be repaired is different. In order to build the AR
model for BT data, we need sentence-pair (Ss, Ssr)
as training corpus, where Ss is generated by NMT
systems and of low quality. Ssr is high quality
sentence.

For the Ssr, we could simply use the large scale
authentic monolingual data Sa for two reasons: 1)
the monolingual data is almost always universally
available (Gulcehre et al., 2015), which makes it
abundant for NMT training; 2) the monolingual
data is original in the speciﬁc language, thus the
ﬂuency and accuracy are guaranteed, which makes

Figure 1: An overview of our AR training framework.

low quality synthetic data to high quality authentic
data. After the training, the auto-repair (AR) model
can be used to repair the mistakes in synthetic data
directly. NMT models trained by the repaired syn-
thetic data can achieve more gain compared with
original back-translated synthetic data. We evalu-
ate the proposed approach on WMT14 EN→DE
and IWSLT14 DE→EN translation tasks. Experi-
mental results show that our AR model could repair
the mistakes in synthetic data effectively. And the
translation quality of both tasks get considerable
improvements with the high quality synthetic data.

2 Approach

In this section, we elaborate on the proposed AR
framework and how we integrate AR models into
NMT.

2.1 Background and Notation

We ﬁrstly deﬁne Sa and Ta as source authentic sen-
tence and target authentic sentences, respectively.
Meanwhile, Ss and Ts as source and target syn-
thetic sentence, respectively. Since our data come
from either bilingual or monolingual data, we use
different superscripts to indicate the data source.
For example, Sb
a represent the source au-
thentic sentence from bilingual data and monolin-
gual data, respectively.

a and Sm

The left part (Traditional Synthesis) of Figure 1
shows a diagram of a traditional data synthesis pro-
cess. We ﬁrstly pre-train a source-to-target S2T
and a target-to-source T2S NMT model based on
the authentic parallel corpus (Sb
a ). Then we use
the pre-trained models to translate the source and
a and T m
target side monolingual data, Sm
a , to get
the target synthetic sentence T m
s and source syn-
thetic sentence Sm
s , respectively. Finally, we can
use the combination of authentic data (Sb
a ), FT
pseudo-parallel corpus (Sm
s ) and BT pseudo-
s , T m
parallel (Sm

a , T m
a ) to train our S2T model.

a, T b

a, T b

S2ST2TT2SS2TTraditionalSynthesisAuto-RepairS"#,T&#S&#,T"#S"’,T"’S"#,T&(#S&(#,T"#Model

Transformer-base (Vaswani et al., 2017)
Transformer-base (Gao et al., 2019)
Transformer-base (BASE)
BASE + BT (Sennrich et al., 2017)
BASE + FT
BASE + BT + FT
BASE + BTR-REP
BASE + FTR-REP
BASE + BTR-ADD
BASE + FTR-ADD
BASE + BTR-ADD + FTR-ADD

WMT14 EN→DE IWSLT14 DE→EN
BLEU
27.3
N/A
27.52
28.64
27.88
28.84
29.05
28.11
29.29
28.20
29.59

BLEU
N/A
34.79
35.04
37.11
35.88
37.70
37.79
36.17
38.15
36.34
38.89

∆
N/A
N/A
N/A
+2.07
+0.84
+2.66
+2.75
+ 1.13
+3.11
+1.30
+3.85

∆
N/A
N/A
N/A
+1.12
+0.36
+1.32
+1.53
+0.59
+1.77
+0.68
+2.07

AVG

BLEU
N/A
N/A
31.28
32.88
31.88
33.27
33.42
32.14
33.72
32.27
34.24

∆
N/A
N/A
N/A
+1.60
+0.60
+1.99
+2.14
+0.86
+2.44
+0.99
+2.96

Table 1: The translation quality results on WMT14 and IWSLT14 tasks. +BT and +FT means adding BT data and
FT data to the bilingual base corpus, respectively. BTR and FTR means the repaired BT data and repaired FT data,
respectively. BTR-REP means replacing BT data with BTR data, and adding the BTR data to the bilingual base
corpus. BTR-ADD means adding both BT and BTR data to the base corpus. FTR-REP and FTR-ADD shares
the similar deﬁnition with BTR. The ratio of authentic data to synthetic data is 1:1.

it of high quality.
For the Ss, we investigate a data-driven method
to generate it. We ﬁrstly use the pre-trained S2T
model to translate the monolingual data, Sa, and
get Ts. Then we use the pre-trained T2S model to
translate from Ts to Ss.

Because the Ss here is generated by S2T and
T2S NMT models, it could reveal the mistakes
made by NMT models inherently, which exactly
meets our requirements for Ss. In addition, the AR
dev data contains 1000 sentence pairs randomly se-
lected from AR training data. After the training and
dev data are obtained, we can train the AR mod-
els following the typical seq2seq model training
methods (Vaswani et al., 2017).

3 Experiments

3.1

Implementation Detail

Data-set We evaluate the proposed approach on
the publicly available WMT2014 English to Ger-
man (EN→DE) and IWSLT2014 German to En-
glish (DE→EN) tasks. On the WMT EN→DE
task, our training set consists of about 4.5 mil-
lion sentence pairs. We use newstest2013 as
our validation set and newstest2014 as our test
set1. We learned a joint byte pair encoding (BPE)
(Sennrich et al., 2015) for English and German
with 32,000 operations. We limit the size of our
English and German vocabularies to 30,000. On
the IWSLT14 DE→EN task, following the setting

1http://www.statmt.org/wmt17/translation-task.html

of Gehring et al. (2017), the training set includes
about 160k sentence pairs and the dev set includes
7000 sentence pairs randomly selected from the
training set. Then, we concatenate tst2010∼12,
dev2010 and dev2012 as our test data2. We
learned a joint BPE with 10,000 operations and
limit the size of both English and German vocabu-
laries to 10,000. We randomly sampled 16 million
monolingual sentences for both English and Ger-
man from WMT News Crwal data for both tasks.

Settings We use an in-house implementation
of Transformer 3. For the Transformer model
structure, we use the transformer-base settings
from (Vaswani et al., 2017). Sentence pairs are
batched together by approximate sentence length.
Each batch has approximately 25000 source to-
kens and 25000 target tokens. We set our label
smoothing and dropout rate to 0.1. We use the
Adam (Kingma and Ba, 2014) to update the pa-
rameters, and the learning rate was varied under a
warm-up strategy with 4000 steps. We use beam
search for heuristic decoding, and the beam size is
set to 4 and case-insensitive 4-gram BLEU (Pap-
ineni et al., 2002) to evaluate our translation results.

3.2 Experimental Results

We show our translation results on WMT14
EN→DE task and IWSLT14 DE→EN task in Ta-

2https://github.com/facebookresearch/fairseq/tree/master/data
3https://github.com/tensorﬂow/tensor2tensor/tree/master/

tensor2tensor

ble 1. The ﬁrst 3 lines show that our in-house im-
plementation is comparable with the open source
implementation (Vaswani et al., 2018).

Results of FT & BT The next 3 lines of Table 1
show the consistent improvements when using dif-
ferent synthetic data. The BASE + BT + FT model
outperforms the baseline by an average 1.99 BLEU
points and outperforms the other two models (+FT
or +BT) by 0.4∼1.39 BLEU points on the two
tasks. It’s worth mentioning that the translation
quality improvement bring by FT 4 is much lower
than BT, which is consistent with the observations
in (Bogoychev and Sennrich, 2019).

Results of AR Models With respect to BLEU
scores, we observe that the *-ADD models work
better than the *-REP models. This indicates that
both synthetic and repaired data are useful for
NMT training. All repaired models (BTR and
FTR) achieve better results over corresponding
Non-repaired models. The BASE + BTR-ADD
+ FTR-ADD model achieves the best BLEU score
over all test sets.

On the WMT14 EN-DE translation task, the
BASE + BTR-ADD + FTR-ADD model outper-
forms the baseline by 2.07 BLEU points and out-
performs the BASE + BT + FT model by 0.75
BLEU points. While on the IWSLT DE-EN task,
The BASE + BTR-ADD + FTR-ADD model out-
performs the baseline and the BASE + BT + FT
model by 3.85 and 1.19 BLEU points, respectively.
An average 2.96 BLEU points improvement over
baseline and 0.97 BLEU point improvement over
strong synthetic model are achieved by our best
AR models.

3.3 AR Quality Analysis

We further analyze the quality of the proposed
AR models themselves from three aspects: BLEU
score, Change Rate, Better Rate in Table 2. We
follow the deﬁnition of dev data described in Sec-
tion 2.2. We use our AR model to transform from
Ss to Ssr of the dev data, (Ss, Sa), then use Sa as
the reference to evaluate the quality of Sa.

4We found that directly adding FT data into authentic bilin-
gual data and continue to train the NMT model, the translation
quality deteriorates rapidly. An assumption is that the target-
side of bilingual data plays a more important role in NMT
training, thus the relative low-quality target side of FT data
hinders the NMT performance. Instead, for using FT data, we
ﬁrstly train a NMT model with FT data, and then ﬁne-tune the
model with the authentic data in all our experiments.

Model

BLEU

Ss

EN2EN 47.02
34.71
DE2DE

Ssr
58.47
50.12

CR

BR

79.40% 72.17%
76.80% 69.90%

Table 2: Quality analysis on the AR models. CR means
the change rate. BR indicates the better Rate. Com-
pared with Ss, Ssr achieve over 11 BLEU points im-
provement on both EN→DE and DE→EN tasks.

BLEU Score We apply the corpus-level BLEU
score as the evaluation criterion to measure whether
Ssr has higher quality than Ss. From Table 3.3, we
can ﬁnd that Ssr achieve over +11 BLEU points im-
provements over SS of both EN2EN and DE2DE
AR models. The BLEU score improvements indi-
cate that our AR models can improve the quality of
synthetic data.

Change Rate We count the differences between
the Ss and Ssr and call it the change rate. The CR
could be calculated as:

CR =

#Changed
#Sentences

, where #Changed is the number of sentence that
the Ssr is different from the input sentence Ss. We
found that over 76% of the input sentences have
been changed by the AR models, which indicates
that our AR models indeed learn transformation
information for synthetic data.

”Better” here means Ssr achieves a
Better Rate
higher sentence-level BLEU score compared with
Ss. We can ﬁnd that over 69% of Ssr are better
than Ss, which proves again the AR models indeed
improve the quality of synthetic data.

4 Conclusion

In this paper, we have presented an AR frame-
work by using seq2seq-based AR model to directly
repair the synthetic parallel data. The proposed
method can be applied to various types of syn-
thetic corpus with less time cost. On both WMT14
EN→DE and IWSLT14 DE→EN translation tasks,
experimental results and further in-depth analysis
demonstrate that the proposed AR method is able to
1) improve the quality of synthetic parallel data; 2)
signiﬁcantly improve the quality of NMT models
by repaired data.

References

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2014. Neural machine translation by jointly
arXiv preprint
learning to align and translate.
arXiv:1409.0473.

Nikolay Bogoychev and Rico Sennrich. 2019. Do-
translationese and noise in synthetic data
arXiv preprint

main,
for neural machine translation.
arXiv:1911.03362.

Isaac Caswell, Ciprian Chelba, and David Grangier.
arXiv preprint

Tagged back-translation.

2019.
arXiv:1906.06442.

Kyunghyun Cho, Bart van Merrienboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Holger
Schwenk, and Yoshua Bengio. 2014.
Learning
phrase representations using rnn encoder–decoder
for statistical machine translation. In EMNLP.

Sergey Edunov, Myle Ott, Michael Auli, and David
Grangier. 2018. Understanding back-translation at
scale. arXiv preprint arXiv:1808.09381.

Fei Gao, Jinhua Zhu, Lijun Wu, Yingce Xia, Tao
Qin, Xueqi Cheng, Wengang Zhou, and Tie-Yan Liu.
2019. Soft contextual data augmentation for neural
machine translation. In Proceedings of the 57th An-
nual Meeting of the Association for Computational
Linguistics, pages 5539–5544.

Jonas Gehring, Michael Auli, David Grangier, Denis
Yarats, and Yann N Dauphin. 2017. Convolutional
In Proceedings
sequence to sequence learning.
of the 34th International Conference on Machine
Learning-Volume 70, pages 1243–1252. JMLR. org.

Caglar Gulcehre, Orhan Firat, Kelvin Xu, Kyunghyun
Cho, Loic Barrault, Huei-Chi Lin, Fethi Bougares,
Holger Schwenk, and Yoshua Bengio. 2015. On us-
ing monolingual corpora in neural machine transla-
tion. arXiv preprint arXiv:1503.03535.

Jeremy Gwinnup, Timothy Anderson, Grant Erdmann,
Katherine Young, Michaeel Kazi, Elizabeth Salesky,
Brian Thompson, and Jonathan Taylor. 2017. The
afrl-mitll wmt17 systems: Old, new, borrowed, bleu.
In Proceedings of the Second Conference on Ma-
chine Translation, pages 303–309.

Di He, Yingce Xia, Tao Qin, Liwei Wang, Nenghai Yu,
Tie-Yan Liu, and Wei-Ying Ma. 2016. Dual learn-
ing for machine translation. In Advances in Neural
Information Processing Systems, pages 820–828.

Vu Cong Duy Hoang, Philipp Koehn, Gholamreza
Iterative back-
Haffari, and Trevor Cohn. 2018.
In Pro-
translation for neural machine translation.
ceedings of the 2nd Workshop on Neural Machine
Translation and Generation, pages 18–24.

Guillaume Lample, Myle Ott, Alexis Conneau, Lu-
dovic Denoyer, and Marc’Aurelio Ranzato. 2018.
Phrase-based & neural unsupervised machine trans-
lation. arXiv preprint arXiv:1804.07755.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
In Proceedings of
uation of machine translation.
the 40th annual meeting on association for compu-
tational linguistics, pages 311–318. Association for
Computational Linguistics.

Alberto Poncelas, Dimitar Shterionov, Andy Way,
Gideon Maillette de Buy Wenniger, and Pey-
man Passban. 2018.
Investigating backtransla-
tion in neural machine translation. arXiv preprint
arXiv:1804.06189.

Rico Sennrich, Alexandra Birch, Anna Currey, Ulrich
Germann, Barry Haddow, Kenneth Heaﬁeld, An-
tonio Valerio Miceli Barone, and Philip Williams.
2017. The university of edinburgh’s neural mt sys-
tems for wmt17. arXiv preprint arXiv:1708.00726.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2015. Neural machine translation of rare words with
subword units. arXiv preprint arXiv:1508.07909.

Rico Sennrich and Biao Zhang. 2019. Revisiting low-
resource neural machine translation: A case study.
In Proceedings of the 57th Annual Meeting of the
Association for Computational Linguistics.

I Sutskever, O Vinyals, and QV Le. 2014. Sequence to
sequence learning with neural networks. Advances
in NIPS.

Ashish Vaswani, Samy Bengio, Eugene Brevdo, Fran-
cois Chollet, Aidan N Gomez, Stephan Gouws,
Llion Jones, Łukasz Kaiser, Nal Kalchbrenner, Niki
Parmar, et al. 2018. Tensor2tensor for neural ma-
chine translation. arXiv preprint arXiv:1803.07416.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
In Advances in neural information pro-
you need.
cessing systems, pages 5998–6008.

Shuo Wang, Yang Liu, Chao Wang, Huanbo Luan, and
Maosong Sun. 2019.
Improving back-translation
with uncertainty-based conﬁdence estimation. arXiv
preprint arXiv:1909.00157.

Lijun Wu, Yiren Wang, Yingce Xia, QIN Tao, Jian-
huang Lai, and Tie-Yan Liu. 2019. Exploiting mono-
lingual data at scale for neural machine translation.
In Proceedings of the 2019 Conference on Empirical
Methods in Natural Language Processing and the
9th International Joint Conference on Natural Lan-
guage Processing (EMNLP-IJCNLP), pages 4198–
4207.

Diederik P Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V
Le, Mohammad Norouzi, Wolfgang Macherey,
Maxim Krikun, Yuan Cao, Qin Gao, Klaus

Macherey, et al. 2016. Google’s neural machine
translation system: Bridging the gap between hu-
arXiv preprint
man and machine translation.
arXiv:1609.08144.

Yingce Xia, Xu Tan, Fei Tian, Fei Gao, Di He, Weicong
Chen, Yang Fan, Linyuan Gong, Yichong Leng, Ren-
qian Luo, Yiren Wang, Lijun Wu, Jinhua Zhu, Tao
Qin, and Tie-Yan Liu. 2019. Microsoft research
In the Fourth Confer-
asia’s systems for WMT19.
ence on Machine Translation).

