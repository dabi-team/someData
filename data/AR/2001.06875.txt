This is the pre-submission version of the manuscript that was later edited and
published as a chapter in RGB-D Image Analysis and Processing.

DOI:
http://doi.org/10.1007/978-3-030-28603-3_6

SpringerLink:
http://link.springer.com/chapter/10.1007/978-3-030-28603-3_6

¬© Springer Nature Switzerland AG 2019

Cite as:

Civera J., Lee S.H. (2019) RGB-D Odometry and SLAM. In: Rosin P.,
Lai YK., Shao L., Liu Y. (eds) RGB-D Image Analysis and Processing.
Advances in Computer Vision and Pattern Recognition. Springer, Cham

BibTeX:

@Inbook{Civera2019,
author="Civera, Javier
and Lee, Seong Hun",
editor="Rosin, Paul L.
and Lai, Yu-Kun
and Shao, Ling
and Liu, Yonghuai",
title="RGB-D Odometry and SLAM",
bookTitle="RGB-D Image Analysis and Processing",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="117--144",
isbn="978-3-030-28603-3",
doi="10.1007/978-3-030-28603-3_6",
url="https://doi.org/10.1007/978-3-030-28603-3_6"}

0
2
0
2

n
a
J

9
1

]

V
C
.
s
c
[

1
v
5
7
8
6
0
.
1
0
0
2
:
v
i
X
r
a

 
 
 
 
 
 
RGB-D Odometry and SLAM

Javier Civera and Seong Hun Lee(cid:63)

I3A, Universidad de Zaragoza, Spain,
{jcivera, seonghunlee}@unizar.es

Abstract. The emergence of modern RGB-D sensors had a signiÔ¨Åcant impact
in many application Ô¨Åelds, including robotics, augmented reality (AR) and 3D
scanning. They are low-cost, low-power and low-size alternatives to traditional
range sensors such as LiDAR. Moreover, unlike RGB cameras, RGB-D sensors
provide the additional depth information that removes the need of frame-by-frame
triangulation for 3D scene reconstruction. These merits have made them very
popular in mobile robotics and AR, where it is of great interest to estimate ego-
motion and 3D scene structure. Such spatial understanding can enable robots to
navigate autonomously without collisions and allow users to insert virtual entities
consistent with the image stream. In this chapter, we review common formulations
of odometry and Simultaneous Localization and Mapping (known by its acronym
SLAM) using RGB-D stream input. The two topics are closely related, as the
former aims to track the incremental camera motion with respect to a local map of
the scene, and the latter to jointly estimate the camera trajectory and the global
map with consistency. In both cases, the standard approaches minimize a cost
function using nonlinear optimization techniques. This chapter consists of three
main parts: In the Ô¨Årst part, we introduce the basic concept of odometry and SLAM
and motivate the use of RGB-D sensors. We also give mathematical preliminaries
relevant to most odometry and SLAM algorithms. In the second part, we detail the
three main components of SLAM systems: camera pose tracking, scene mapping
and loop closing. For each component, we describe different approaches proposed
in the literature. In the Ô¨Ånal part, we provide a brief discussion on advanced
research topics with the references to the state-of-the-art.

1

Introduction: SLAM, Visual SLAM and RGB-D Sensors

Visual Odometry and Visual Simultaneous Localization and Mapping ‚Äì from here on
referred to as their respective acronyms VO and VSLAM ‚Äì are two tightly related topics
that aim to extract 3D information from streams of visual data in real-time. SpeciÔ¨Åcally,
the goal of VO is to estimate the incremental motion (i.e., translation and rotation) of the
camera as it moves. The goal of Visual SLAM is more ambitious: To estimate a globally
consistent map of the scene and the camera trajectory with respect to it.

In the robotics research community, SLAM is considered as a fundamental capability
for autonomous robots. See [4, 25] for an illustrative tutorial covering the earliest ap-
proaches, and [11] for a recent survey outlining the state-of-the-art and the most relevant

(cid:63) This work was partially supported by the Spanish government (project PGC2018-096367-B-I00)

and the Aragn regional government (Grupo DGA-T45 17R/FSE).

2

Chapter 6 of RGB-D Image Analysis and Processing

future directions. While the early pioneering works on SLAM mainly used laser scanners
(e.g., [12]), the Ô¨Åeld rapidly pivoted to cameras for several reasons. Among them were
the progress of computer vision algorithms and improved processors, as well as the
camera‚Äôs low cost, size and power consumption.

(a) RGBDSLAM [27]

(b) ORB-SLAM2 [79]

(c) ElasticFusion [119]

(d) RGBDTAM [16]

Fig. 1: State-of-the-art RGB-D SLAM systems.

Most visual SLAM methods have been traditionally based on low-level feature
matching and multiple view geometry. This introduces several limitations to monocular
SLAM. For example, a large-baseline motion is needed to generate sufÔ¨Åcient parallax for
reliable depth estimation; and the scale is unobservable. This can be partially alleviated
by including additional sensors (e.g., stereo cameras [83], inertial measurement units
(IMUs) [18], sonar [48]) or the prior knowledge of the system [67] or the scene [110].
Another challenge is the dense reconstruction of low texture areas [17]. Although recent
approaches using deep learning (e.g., [9, 122]) have shown impressive results in this
direction, more research is needed regarding their cost and dependence on the training
data [29].

RGB-D sensors provide a practical hardware-based alternative to the challenges and
limitations mentioned above. Their availability at low cost has facilitated many robotics
and AR applications in the last decade. Intense research endeavors have produced
numerous robust algorithms and real-time systems. Figure 1 shows several reconstruction

Chapter 6 of RGB-D Image Analysis and Processing

3

examples from the state-of-the-art systems. Today, RGB-D cameras stand out as one of
the preferred sensors for indoor applications in robotics and AR; and their future looks
promising either on their own or in combination with additional sensors.

In this chapter, we will cover several state-of-the-art RGB-D odometry and SLAM
algorithms. Our goal is to focus on the basic aspects of geometry and optimization,
highlighting relevant aspects of the most used formulations and pointing to the most
promising research directions. The reader should be aware that, as a consequence of
condensing a vast array of works and presenting the basics in a homogeneous and
easy-to-follow manner, some individual works might present slight variations from the
formulation presented here. In general, we sacriÔ¨Åced extending ourselves over particular
details in favour of a clearer overview of the Ô¨Åeld.

The rest of the chapter is organized as follows. Section 2 will give an overview on
the most usual VO and VSLAM pipeline. Section 3 will introduce the notation used
throughout the rest of the chapter. Section 4 will cover the algorithms for tracking the
camera pose, Section 5 the algorithms for the estimation of the scene structure, and
Section 6 the loop closure algorithms. Section 7 will refer to relevant scientiÔ¨Åc works
and research lines that were not covered in the previous sections. Finally, Section 8
contains the conclusions and Section 9 provides links to some of the most relevant
online resources, mainly the state-of-the-art open-source software and public benchmark
datasets.

2 The Visual Odometry and SLAM pipelines

The pipelines of RGB-D Odometry and SLAM have many components in common.
Here, we will give a holistic view of the building blocks of standard implementations,
highlighting their connections and introducing the terminology.

The seminal work of Klein and Murray [59] proposed the architecture that is used in
most visual odometry and SLAM systems nowadays. Such architecture was later reÔ¨Åned
in papers like [28, 78, 105] among others. Basically, the idea is to partition the processing
into two (or more) parallel threads: one thread tracks the camera pose in real time at
video rate, and the rest update several levels of scene representations at lower frequencies
(in general, the larger and/or more complex the map, the lower the frequency of update).

Fig. 2: High-level overview of VO and VSLAM systems. Ik: kth RGB-D image, Œæk: kth
camera pose, ML and MG: the local and the global map.

Camera TrackingIkSceneMappingIk, ùùÉkOdometryLoop ClosingùìúLùìúGSLAM4

Chapter 6 of RGB-D Image Analysis and Processing

Fig. 2 illustrates a simple Tracking and Mapping architecture for RGB-D Odometry
and SLAM that we will use in this chapter. The camera tracking thread estimates the
camera motion Œæk at time k given the current frame Ik and a local map ML. ML is esti-
mated from a set of keyframes summarizing the sequence. If SLAM is the aim, a globally
consistent map MG is estimated by means of loop closure and global optimization. In
more detail:

‚Äì Camera tracking: The camera tracking thread estimates the incremental camera
motion. The most simple approach is to use the frame-to-frame constraints (e.g.,
[36, 55]). This is in fact inevitable when bootstrapping the system from the Ô¨Årst two
views. However, after initialization, it is quite usual to use more than two views in
order to achieve higher accuracy. In this case, the standard approach is to estimate
the camera motion using map-to-frame constraints with respect to a local map built
from the past keyframes (see the next paragraph).

‚Äì Scene Mapping: Mapping approaches vary, depending on the application. Volumet-
ric mapping discretizes the scene volume into voxels and integrates the information
from the RGB-D views (e.g., [81, 117]). Point-based mapping performs a nonlinear
optimization of camera poses and points (e.g., [79]). In the case of VO, the map
is local and is estimated from a sliding window containing a selection of the last
frames (e.g. [28, 115]). In the case of VSLAM, the map is estimated from a set of
keyframes representative of the visited places.

‚Äì Loop Closing: In both odometry and SLAM drift is accumulated in purely ex-
ploratory trajectories. Such drift can be corrected if a place is revisited, using
approaches denoted as loop closure. First, the place is recognized by its visual
appearance (loop detection), and then the error of the global map is corrected (loop
correction) [34, 79, 117]).

3 Notation and Preliminaries

3.1 Geometry and Sensor Model

We denote an RGB-D input as I : ‚Ñ¶ (cid:55)‚Üí R4, where ‚Ñ¶ ‚äÇ R2 is the image plane of width
w and height h. We represent the pixel coordinates as a 2D vector p = (u, v)(cid:62) and the
corresponding homogeneous coordinates as Àúp = ( Àúu, Àúv, Œª )(cid:62). Each pixel has RGB color
and depth value, i.e., I (u, v) = (r, g, b, d)(cid:62). The depth channel is denoted as D : ‚Ñ¶ (cid:55)‚Üí R,
and the access to it as D (u, v) = d. The Euclidean coordinates of a 3D point k in some
(cid:1)(cid:62)
reference frame i (be it a camera or the world reference) are denoted by Pi
or ÀúPi
related by the dehomogenization operation: Pi
is denoted by œÄ ‚àí1

in homogeneous coordinates. These two coordinates are
k). Inversely, the homogenization

k = œÄ3D( ÀúPi

k = (cid:0)Œª X i

k = (cid:0)X i

k, Œª (cid:1)(cid:62)

k , Œª Zi

k, ŒªY i

k , Zi
k

k,Y i

.

k,Y i

k , Zi

k, 1(cid:1)(cid:62)

The pose of camera j with respect to reference frame i is deÔ¨Åned by the trans-
‚àà SE(3), R ji ‚àà SO(3), t ji ‚àà R3. The rotation matrix R ji and

formation T ji =

k) := (cid:0)X i
(cid:21)

3D (Pi
(cid:20)R ji t ji
0 1

translation vector t ji are deÔ¨Åned such that the transformation of point Pi

k in reference

Chapter 6 of RGB-D Image Analysis and Processing

5

Fig. 3: The transformation of point k from reference frame i to camera reference frame j,
and its projection onto the image plane using the pinhole camera model.

frame i to the jth camera reference frame is

ÀúP j
k = T ji ÀúPi
k can be obtained from ÀúPi

Likewise, ÀúPi

k; P j

k = R jiPi

k + t ji.

k and T ji with the inverse operation:

ÀúPi
k = T‚àí1
ji

ÀúP j
k; Pi

k = R(cid:62)
ji

(cid:16)
P j
k ‚àí t ji

(cid:17)

.

(1)

(2)

As illustrated in Fig. 3, we adopt the standard pinhole model for the projection onto the
image plane. First, the 3D point Pi
k is transformed to the camera frame j using equation
1. The homogeneous coordinates of the projection in the image space are given by

k = ( Àúu j
Àúp j

k, Àúv j

k, Œª )(cid:62) = KP j

k = K(R jiPi

k + t ji) with K =

Ô£Æ

Ô£∞

fx 0 u0
0 fy v0
0 0 1

Ô£π

Ô£ª ,

(3)

where K is the calibration matrix containing the coordinates of the principal point
(u0, v0)(cid:62) and the focal lengths ( fx, fy) = ( f mx, f my). Here, (mx, my) denotes the number
of pixels per unit distance in image coordinates in the x and y directions. The pixel
coordinates are Ô¨Ånally obtained by dehomogenization: p j
k) =
( Àúu j
k) :=
k
(u j

Œª , Àúv j
k
k, v j
k, 1)(cid:62).
Now, let reference frame i be another camera reference frame. Then, the reprojection

Œª )(cid:62). The inverse operation (i.e., homogenization) is denoted by œÄ ‚àí1

k)(cid:62) = œÄ2D( Àúp j
2D (p j

k = (u j

k, v j

(cid:46)

(cid:46)

of 2D point pi

k in frame i to frame j is deÔ¨Åned as the following three-step operation:

1. Backproject pi

k with the measured depth di

k to estimate the 3D point Pi

k in frame i:

(cid:48)

Pi
k

= di
k

K‚àí1œÄ ‚àí1
2D
(cid:13)
(cid:13)K‚àí1œÄ ‚àí1
2D

(cid:0)pi
k
(cid:0)pi
k

(cid:1)
(cid:1) (cid:13)
(cid:13)

.

2. Transform this estimate from frame i to frame j:

P ji
k = œÄ3D

(cid:16)
T jiœÄ ‚àí1
3D

(cid:16)
Pi
k

(cid:48)(cid:17)(cid:17)

; P ji

k = R jiPi
k

(cid:48)

+ t ji

(4)

(5)

uv(u0v0,(f(ukvk,(XjYjZjXiYiZiPjkPik}Pjk=PikRji+tjijjCameraReference Frame jReferenceFrame i6

Chapter 6 of RGB-D Image Analysis and Processing

(Notice that we use the superscript ji instead of j to distinguish the ground-truth in
frame j.)

3. Project the resulting 3D point to obtain its pixel coordinates in frame j.

p ji
k = œÄ2D

(cid:17)

(cid:16)
KP ji
k

.

Altogether, the reprojection of point pi

p ji
k

(cid:0)pi

k, di

k, T ji

(cid:1) = œÄ2D

K

k to frame j is deÔ¨Åned as follows:
(cid:33)(cid:33)
(cid:32)

(cid:32)

kR jiK‚àí1œÄ ‚àí1
di
2D
(cid:13)
(cid:0)pi
(cid:13)K‚àí1œÄ ‚àí1
k
2D

(cid:0)pi
(cid:1)
k
(cid:1) (cid:13)
(cid:13)

+ t ji

.

(6)

(7)

3.2 Nonlinear Optimization

Most state-of-the-art VO and VSLAM methods rely heavily on nonlinear optimization
in order to estimate the state vector x (e.g., containing the camera poses and 3D map
points) from a set of noisy measurements z = {z1, z2, . . .} (e.g., image correspondences
or pixel intensities).

According to Bayes‚Äô theorem, the following equation describes the conditional
probability of the state p(x|z) given the measurement model p(z|x) and the prior over
the state p(x):

p(x|z) =

p(z|x)p(x)
p(z)

(8)

Our aim is then to Ô¨Ånd the state x that maximizes this probability. This is called the
Maximum a Posteriori (MAP) problem, and the solution corresponds to the mode of the
posterior distribution:

xMAP = arg max

x

p(x|z) = arg max

x

p(z|x)p(x)
p(z)

(9)

Modern VSLAM and VO methods are based on smoothing and often assume a
uniform prior p(x). The normalization constant p(z) does not depend on the state either.
Therefore, we can drop p(x) and p(z) from (9), turning the problem into the Maximum
Likelihood Estimation (MLE). Assuming the independence between the measurements,
this means that (9) becomes

xMAP = xMLE = arg max

x

p(z|x) = arg max

x

p(zk|x).

‚àè
k

(10)

Suppose that the measurement model is given by zk = hk(x) + Œ¥k, where Œ¥k ‚àº N (0, ‚Ñ¶k).
The conditional distribution of the individual measurements is then p(zk|x) ‚àº N (hk(x), ‚Ñ¶k).
Maximizing, for convenience, the log of the conditionals leads to

xMAP = arg max

x

log(‚àè
k

p(zk|x)) = arg max

x

‚àë
k

log(p(zk|x))

= arg max
x

‚àë
k

log(exp(‚àí

1
2

(zk ‚àí hk(x))(cid:62)‚Ñ¶‚àí1

k (zk ‚àí hk(x)))) = arg min

x

||rk(x)||2
‚Ñ¶k

,

‚àë
k

(11)

Chapter 6 of RGB-D Image Analysis and Processing

7

(cid:113)

k (zk ‚àí hk(x)) is called the Mahalanobis distance.
where ||rk(x)||‚Ñ¶k =
As hk(x) is typically nonlinear, we solve (11) using an iterative method. A standard
approach is to use the Gauss-Newton algorithm described as follows:

(zk ‚àí hk(x))(cid:62)‚Ñ¶‚àí1

1. Make an initial guess Àòx.
2. Linearize (11) using the Taylor approximation at Àòx.
3. Compute the optimal increment ‚àÜ x‚àó that minimizes the linearized cost function.
4. Update the state: Àòx ‚Üê Àòx + ‚àÜ x‚àó.
5. Iterate the Step 2 ‚Äì 4 until convergence.

The Taylor approximation in Step 2 gives

hk(Àòx + ‚àÜ x) ‚âà hk(Àòx) + Jk‚àÜ x with Jk =

‚àÇ hk(x)
‚àÇ x

(cid:12)
(cid:12)
(cid:12)
(cid:12)Àòx

.

This allows us to approximate ||rk(Àòx + ‚àÜ x)||2
‚Ñ¶k

as

||rk(Àòx + ‚àÜ x)||2
‚Ñ¶k

k (zk ‚àí hk(Àòx + ‚àÜ x))

= (zk ‚àí hk(Àòx + ‚àÜ x))(cid:62)‚Ñ¶‚àí1
‚âà (zk ‚àí hk(Àòx) ‚àí Jk‚àÜ x)(cid:62)‚Ñ¶‚àí1
= ‚àÜ x(cid:62)J(cid:62)

k ‚Ñ¶‚àí1

k Jk‚àÜ x + (zk ‚àí hk(Àòx))(cid:62)‚Ñ¶‚àí1
k Jk‚àÜ x.

‚àí 2(zk ‚àí hk(Àòx))(cid:62)‚Ñ¶‚àí1

k (zk ‚àí hk(Àòx) ‚àí Jk‚àÜ x)

k (zk ‚àí hk(Àòx))

(12)

(13)

(14)

(15)

Now, taking the derivative of ‚àëk ||rk(Àòx + ‚àÜ x)||2
‚Ñ¶k
we obtain the optimal increment in the following form:

with respect to ‚àÜ x and setting it to zero,

‚àÜ x‚àó = ‚àí

(cid:34)
‚àë
k

(cid:124)

k ‚Ñ¶‚àí1
J(cid:62)

k Jk

(cid:123)(cid:122)
H‚àí1

(cid:35)‚àí1

‚àë
k
(cid:124)

(cid:125)

k ‚Ñ¶‚àí1
J(cid:62)

k (hk(Àòx) ‚àí zk)

.

(16)

(cid:123)(cid:122)
b

(cid:125)

The Levenberg-Marquardt algorithm, a variant of the Gauss-Newton method, includes a
non-negative damping factor Œª in the update step:

‚àÜ x‚àó = ‚àí (H + Œª diag(H))‚àí1 b,

(17)

where Œª is increased when the cost function reduces too slowly, and vice versa. For more
details on the adjustment rule, see [50].

Since the least squares problems are very sensitive to outliers, a common practice is

to adopt a robust weight function that downweights large errors:
(cid:1) ||rk(x)||2
‚Ñ¶k

œâ (cid:0)||rk(x)||‚Ñ¶k

xrobust = arg min

‚àë
k

x

.

(18)

To solve this problem iteratively, it is usually assumed that the weights are dependent
on the residual at the previous iteration, which turns the problem into a standard weighted
least squares at each iteration. This technique is called the iteratively reweighted least
squares (IRLS). The readers are referred to [47, 121] for more details on the robust cost
functions and [5] for in-depth study of state estimation for robotics.

8

Chapter 6 of RGB-D Image Analysis and Processing

3.3 Lie Algebras

Standard optimization techniques assume that the state belongs to a Euclidean vector
space. This does not hold for 3D rotation matrices R, belonging to the special orthogonal
group SO(3), or for 6 degrees-of-freedom (DoF) rigid body motions T, belonging to
the special Euclidean group SE(3). In both cases, state updates have to be done in the
tangent space of SO(3) and SE(3) at the identity, which are denoted as so(3) and se(3).
Elements of the tangent space so(3) and se(3) can be represented as vector œâœâœâ ‚àà R3 and
ŒæŒæŒæ = [œâœâœâ, ŒΩŒΩŒΩ](cid:62) ‚àà R6, respectively.

The hat operator (¬∑)‚àß converts œâœâœâ ‚àà R3 to the space of skew symmetric matrices of

the Lie algebra and its inverse is denoted by the vee operator (¬∑)‚à®:

œâœâœâ ‚àß =

Ô£Æ

Ô£∞

œâx
œây
œâz

Ô£π
‚àß

Ô£ª

=

Ô£Æ

Ô£∞

0 ‚àíœâz œây
0 ‚àíœâx
œâz
‚àíœây œâx

0

Ô£π
Ô£ª ‚àà so(3)

and

(cid:0)œâœâœâ ‚àß(cid:1)‚à® = œâœâœâ ‚àà R3.

(19)

We denote the exponential and logarithmic mapping between se(3) and SE(3) by
expSE(3)(ŒæŒæŒæ ) and logSE3(T), respectively:

expSE(3)(ŒæŒæŒæ ) :=

(cid:20)exp(œâœâœâ ‚àß) VŒΩŒΩŒΩ
1
0

(cid:21)

(cid:21)

(cid:20)R t
0 1

=

= T ‚àà SE(3),

(20)

where

and

exp(œâœâœâ ‚àß) = I3√ó3 +

sin ((cid:107)œâœâœâ(cid:107))
(cid:107)œâœâœâ(cid:107)

œâœâœâ ‚àß +

1 ‚àí cos ((cid:107)œâœâœâ(cid:107))
(cid:107)œâœâœâ(cid:107)2

(cid:0)œâœâœâ ‚àß(cid:1)2

V = I3√ó3 +

1 ‚àí cos (cid:107)œâœâœâ(cid:107)
(cid:107)œâœâœâ(cid:107)2

œâœâœâ ‚àß +

(cid:107)œâœâœâ(cid:107) ‚àí sin ((cid:107)œâœâœâ(cid:107))
(cid:107)œâœâœâ(cid:107)3

(cid:0)œâœâœâ ‚àß(cid:1)2 .

From (20), the logarithm map can be obtained:

logSE(3)(T) :=

(cid:21)

(cid:20)(log R)‚à®
V‚àí1t

,

where

log R =

Œ∏
2 sin Œ∏

R ‚àí R(cid:62)(cid:17)
(cid:16)

with Œ∏ = cos‚àí1

(cid:18) trace(R) ‚àí 1
2

(cid:19)

.

(21)

(22)

(23)

(24)

For optimization purposes, rigid body transformations can be conveniently repre-
sented as expSE(3)(‚àÜ ŒæŒæŒæ )T, composed of the incremental motion ‚àÜ ŒæŒæŒæ ‚àà se(3) and the
current estimate T ‚àà SE(3). This allows to optimize the incremental update ‚àÜ ŒæŒæŒæ in the
tangent space of the current estimate T. Once the optimal increment ‚àÜ ŒæŒæŒæ ‚àó is found, the
transformation matrix T is updated as

T ‚Üê expSE(3)(‚àÜ ŒæŒæŒæ ‚àó)T.

(25)

Note that we follow the left-multiplication convention to be consistent with [105, 119].
We refer the readers to [19] for a reference on the representation of 6 DoF pose in the
3D space, and to [101, 104] for introductions to Lie algebras for odometry and SLAM.

Chapter 6 of RGB-D Image Analysis and Processing

9

4 Camera Tracking

In this section, we detail the algorithms that are most commonly used for estimating the
6 DoF motion of an RGB-D camera. The methods will be divided attending to the type
of residual they minimize:

‚Äì Methods based on photometric alignment (Section 4.1). The alignment results
from the minimization of a photometric error over corresponding pixels in two
frames.

‚Äì Methods based on geometric alignment (Section 4.2). While direct methods min-
imize a photometric error, we refer to geometric alignment methods to those that
minimize geometric residuals either in the image or 3D domains.

Recent results suggest that direct methods present a higher accuracy than those
based on geometric alignment, both in odometry [28] and mapping [126]. Most of the
state-of-the-art systems are, because of this reason, based on dense frame alignment.
Among the weaknesses of direct methods we can name their small basin of convergence,
which can limit the accuracy in wide baselines cases, and their sensitivity to calibration
errors, rolling shutter or unsynchronisation between the color and depth images [94].

4.1 Photometric Alignment

Assuming that the same scene point will have the same color in different images,
photometric alignment aims to estimate the motion between two frames by minimizing
the pixel intensity difference. This error criterion is called a photometric reprojection
error. For each pixel pi

k in the reference frame i, it is given by
k (‚àÜ ŒæŒæŒæ ji) (cid:1),

rphk(‚àÜ ŒæŒæŒæ ji) = Ii

(cid:1) ‚àí I j

(cid:0)p ji

(cid:0)pi
k

(26)

k (‚àÜ ŒæŒæŒæ ji) is the reprojection of pi

where p ji
k in frame j evaluated at the incrementally
updated transformation expSE(3)(‚àÜ ŒæŒæŒæ ji)T ji. Fig. 4a illustrates this error. Notice that in
(26) we omitted some of the variables in the reprojection function p ji
k for readability.
The full function is written as

p ji
k (‚àÜ ŒæŒæŒæ ji)

(7)
= p ji
k

(cid:16)
k, di
pi

k, expSE(3)(‚àÜ ŒæŒæŒæ ji)T ji

(cid:17)

.

(27)

The total cost function to minimize, Eph, is the weighted squared sum of the individ-

ual photometric errors for all considered pixels:

‚àÜ ŒæŒæŒæ ‚àó

ji = arg min

‚àÜ ŒæŒæŒæ ji

Eph(‚àÜ ŒæŒæŒæ ji) = arg min

‚àÜ ŒæŒæŒæ ji

‚àë
k

œâ(rphk)

(cid:16)
rphk(‚àÜ ŒæŒæŒæ ji)

(cid:17)2

(28)

with some weight function œâ, e.g., constant for unweighted least squares, or robust
weight function such as Huber‚Äôs [47]. As discussed in Section 3.2, this problem can be
solved using IRLS. Once the optimal increment is found, T ji is updated using (25), and
this optimization process is iterated until convergence.

10

Chapter 6 of RGB-D Image Analysis and Processing

Fig. 4: Different types of error criteria frequently used in the literature: (a) A photometric
reprojection error is the pixel intensity difference between a reference pixel in frame
i and its reprojection in frame j. (b) Given a reference point in frame i, a geometric
reprojection error is the image distance between its match and the reprojection in frame j.
(c) A 3D point-to-point distance is the Euclidean distance between the backprojections of
two matched points. (d) A 3D point-to-plane distance is the Euclidean distance between
the tangent plane at the backprojected reference point in frame i and the backprojected
reprojection of the point in frame j.

[55] proposes a similar photometric alignment between consecutive frames of
a video, achieving very accurate odometry results. For study of different alignment
strategies, we refer to [62]. The photometric alignment can also be done in a frame-to-
map basis. For example, in [16], photometric and geometric errors are used to track the
camera pose with respect to the closest keyframe in the map.

4.2 Geometric Alignment

In contrast to photometric alignment that directly uses raw pixel intensities, geometric
alignment estimates the camera motion by minimizing the Euclidean distances between
the two corresponding sets of geometric primitives in 2D or 3D.

2D Point-to-Point Alignment: A geometric reprojection error is the most represen-
tative type of 2D error used in VO and VSLAM. This error is illustrated in Fig. 4b. Given
k in the reference frame i, it measures the image distance between its match p j
a point pi

k

Ii(p k)Frame j Frame irphkIj(p k)jiidkip kFrame jFrame ir2Dkp kjiidkip kj(a) Photometric reprojection error(b) Geometric reprojection errorp kFrame j Frame ir3Dkidkip kj(c) 3D point-to-point distancedkjFrame iFrame jp kjidkjidkinkir3DPk(d) 3D point-to-plane distancep kiChapter 6 of RGB-D Image Analysis and Processing

11

and the projection p ji

k (27) in the current frame j:

r2Dk (‚àÜ ŒæŒæŒæ ji) =

(cid:107)p j

k ‚àí p ji
k (‚àÜ ŒæŒæŒæ ji)(cid:107)
œÉ i
k

with œÉ i

k = (cid:0)Œªpyr

(cid:1)Lpyr,pi

k ,

(29)

k is the standard deviation of the image point pi

where œÉ i
of the image pyramid Œªpyr(> 1) and the level Lpyr,pi

k that depends on the scale factor

at which the point was detected.

Unlike photometric errors, geometric errors require data association. For sparse
points, this can be done by matching feature descriptors (e.g., SIFT [69], SURF [6],
ORB [89]) or extracting salient corners (e.g., Harris corner [39], FAST [88] or Shi-
Tomasi [97] features) and tracking them [72]. Aggregating r2Dk for every point k, we
obtain the total cost function analogous to (28):

k

‚àÜ ŒæŒæŒæ ‚àó

ji = arg min

‚àÜ ŒæŒæŒæ ji

E2D(‚àÜ ŒæŒæŒæ ji) = arg min

‚àÜ ŒæŒæŒæ ji

‚àë
k

œâ(r2Dk )

(cid:16)
r2Dk (‚àÜ ŒæŒæŒæ ji)

(cid:17)2

.

(30)

Minimizing this cost function to estimate the camera motion is called motion-only bundle
adjustment, and this method is used among others in ORB-SLAM2 [79] for tracking.

3D Point-to-Point Alignment: Instead of minimizing the reprojection error in 2D
image space, one can also minimize the distance between the backprojected points in
3D space (see Fig. 4c). The 3D errors can be deÔ¨Åned over dense point clouds or sparse
ones. For the latter case, the Ô¨Årst step should be the extraction and matching of the
sparse salient points in the RGB channels. Henry et al. [41], for example, uses SIFT
features [69], although others could be used.

Given two sets of correspondences in image i and j, the 3D geometric error is

obtained as

r3Dk (‚àÜ ŒæŒæŒæ ji) = (cid:13)

(cid:48)

‚àí P ji

k (‚àÜ ŒæŒæŒæ ji)(cid:13)
(cid:13)

(cid:13)P j
k
(cid:16)
expSE(3)(‚àÜ ŒæŒæŒæ ji)T jiœÄ ‚àí1
3D

(cid:16)
Pi
k

(cid:48)(cid:17)(cid:17)

,

(31)

(32)

with P ji

k (‚àÜ ŒæŒæŒæ ji) := œÄ3D

(cid:48)

(cid:48)

and P j
k

are the 3D points backprojected from the 2D correspondence pi
k
k using (4). Aggregating r2Dk for every point k, we obtain the total cost function

where Pi
k
and p j
analogous to (28) and (30):

‚àÜ ŒæŒæŒæ ‚àó

ji = arg min

‚àÜ ŒæŒæŒæ ji

E3D(‚àÜ ŒæŒæŒæ ji) = arg min

‚àÜ ŒæŒæŒæ ji

‚àë
k

œâ(r3Dk )

(cid:16)
r3Dk (‚àÜ ŒæŒæŒæ ji)

(cid:17)2

.

(33)

For the case of dense cloud alignment, the standard algorithm is Iterative Closest
Point (ICP) [8]. ICP alternates the minimization of a geometric distance between points
(the point-to-point distance in equation 31 or the point-to-plane one deÔ¨Åned later in this
section) and the search for correspondences (usually the nearest neighbours in the 3D
space).

The strengths and limitations of sparse and dense cloud alignment are complemen-
tary for RGB-D data. Aligning dense point clouds can lead to more accurate motion
estimation than aligning sparse ones, as they use more data. On the other hand, ICP

12

Chapter 6 of RGB-D Image Analysis and Processing

might diverge if the initial estimate is not sufÔ¨Åciently close to the real motion. In practice,
combining the two is a preferred approach: Sparse alignment, based on feature corre-
spondences, can produce a robust and reliable initial seed. Afterwards, dense alignment
can reÔ¨Åne such initial estimate using ICP.

3D Point-to-Plane Alignment: The point-to-plane distance, that minimizes the
distance along the target point normal, is commonly used in dense RGB-D point cloud
alignment [22, 41, 81, 118]. The residual is in this case

(cid:48)

(cid:48)

k

‚àí

Ô£∂

(cid:17)‚àí1

Ô£´
Ô£≠Pi
k

Ô£´
Ô£≠d ji

K‚àí1œÄ ‚àí1
2D
(cid:107)K‚àí1œÄ ‚àí1
2D

(cid:16)
expSE(3)(‚àÜ ŒæŒæŒæ ji)T ji

(cid:17)
(cid:16)
p ji
k (‚àÜ ŒæŒæŒæ ji)
(cid:16)
(cid:17)
p ji
(cid:107)
k (‚àÜ ŒæŒæŒæ ji)

(cid:12)
(cid:12)
ni
(cid:12)
r3DPk (‚àÜ ŒæŒæŒæ ji) =
k ¬∑
(cid:12)
(cid:12)

Ô£∂
(cid:12)
(cid:12)
(cid:12)
,
Ô£∏
(cid:12)
(cid:12)
(34)
(cid:48)
k is the surface normal at Pi
where Pi
,
k
k
p ji
k (‚àÜ ŒæŒæŒæ ji) is the reprojection of pi
k in frame j evaluated at the incrementally updated
transformation expSE(3)(‚àÜ ŒæŒæŒæ ji)T ji, which is given by (27) and (7), and d ji
k is the measured
depth at this reprojection in frame j. This error is illustrated in Fig. 4d. Aggregating
r3DPk for every point k, we obtain the total cost function analogous to (28), (30) and
(33):

is the 3D backprojection of pi

k using (4), ni

Ô£∏

‚àÜ ŒæŒæŒæ ‚àó

ji = arg min

‚àÜ ŒæŒæŒæ ji

E3DP(‚àÜ ŒæŒæŒæ ji) = arg min

‚àÜ ŒæŒæŒæ ji

‚àë
k

œâ(r3DPk )

(cid:16)
r3DPk (‚àÜ ŒæŒæŒæ ji)

(cid:17)2

.

(35)

5 Scene Mapping

In this section we brieÔ¨Çy survey the main algorithms for estimating scene maps from
several RGB-D views. There are two basic types of scene representations that are
commonly used, that we will denote as point-based maps (Section 5.1) and volumetric
maps (Section 5.2).

5.1 Point-Based Mapping

Representing a scene as a set of points or surfels is one of the most common alternatives
for estimating local maps of a scene. Bundle Adjustment [112], consisting on the
joint optimization of a set of camera poses and points, is frequently used to obtain
a globally consistent model of the scene [79]. However, there are also several recent
VSLAM approaches that alternate the optimization between points and poses, reducing
the computational cost with a small impact in the accuracy, given a sufÔ¨Åcient number of
points [84, 94, 120, 123].

In its most basic form, the map model consists of a set of n points and m RGB-D
keyframes. Every point is represented by its 3D position in the world reference frame
Pw
k . For every keyframe i, we store its pose Tiw and its RGB-D image Ii.

Similarly to camera tracking in Section 4, map optimization algorithms are based on
the photometric or geometric alignment between the keyframes. In this case, however,
both the keyframe poses and point positions are optimized.

Chapter 6 of RGB-D Image Analysis and Processing

13

Photometric Bundle Adjustment: This method minimizes a cost function similar
to (28), with the difference that it does not backproject the 2D points using the measured
depths. Instead, it aims to Ô¨Ånd the 3D point that minimizes the photometric errors in all
keyframes where it was visible. Let PM = (P1, . . . , Pk, . . . , Pn)(cid:62) be the set of all map
points and ‚àÜ ŒæŒæŒæ M =
the set of incremental transforma-
tions to the current estimates of the keyframe poses. Then, the optimization problem is
formulated as

(cid:16)
‚àÜ ŒæŒæŒæ 1w, . . . , ‚àÜ ŒæŒæŒæ jw, . . . , ‚àÜ ŒæŒæŒæ mw

(cid:17)(cid:62)

{‚àÜ ŒæŒæŒæ ‚àó

M , P‚àó

M } = arg min
‚àÜ ŒæŒæŒæ M ,PM

Eph(‚àÜ ŒæŒæŒæ M , PM )

= arg min
‚àÜ ŒæŒæŒæ jw,Pw
k

‚àë
j

‚àë
k

œâ(rphk)

(cid:16)
rphk(‚àÜ ŒæŒæŒæ jw, Pw
k )

(cid:17)2

(36)

(37)

with

rphk(‚àÜ ŒæŒæŒæ jw, Pw
k )
Ô£±
0
Ô£¥Ô£≤

=

if Pk is not visible
in frame j,
k ))(cid:1) (cid:1) otherwise,

Ô£¥Ô£≥
Ii
(cid:0)pi
k

(cid:0)œÄ2D

(cid:0)KœÄ3D(expSE(3)(‚àÜ ŒæŒæŒæ jw)T jwœÄ ‚àí1

(cid:1) ‚àí I j
(cid:0)pi
k
(cid:1) is the pixel intensity at which Pw

3D (Pw

where Ii
(i.e., the keyframe in which the point was Ô¨Årst detected and parameterized).

k was detected in its reference keyframe i

Geometric Bundle Adjustment: This method minimizes a cost function similar to
(30), with the difference that the reprojection with the measured depth is replaced by the
projection of the current estimate of the 3D point. Using the same notation as for the
photometric bundle adjustment, the optimization problem is formulated as

{‚àÜ ŒæŒæŒæ ‚àó

M , P‚àó

M } = arg min
‚àÜ ŒæŒæŒæ M ,PM

E2D(‚àÜ ŒæŒæŒæ M , PM )

= arg min
‚àÜ ŒæŒæŒæ jw,Pw
k

‚àë
j

‚àë
k

œâ(r2Dk)

(cid:16)
r2Dk(‚àÜ ŒæŒæŒæ jw, Pw
k )

(cid:17)2

(38)

(39)

with

r2Dk(‚àÜ ŒæŒæŒæ jw, Pw
k )
Ô£±
0

=

Ô£¥Ô£¥Ô£¥Ô£¥Ô£≤
Ô£¥Ô£¥Ô£¥Ô£¥Ô£≥

(cid:13)
(cid:13)
p j
k ‚àí œÄ2D
(cid:13)
(cid:13)

(cid:16)

KœÄ3D

(cid:16)
expSE(3)(‚àÜ ŒæŒæŒæ jw)T jwœÄ ‚àí1

3D (Pw
k )

(cid:17)(cid:17) (cid:13)
(cid:13)
(cid:13)
(cid:13)

œÉ j
k

if Pk is not detected
in frame j,

otherwise.

Note that œÉ j

k is deÔ¨Åned in (29).

5.2 Volumetric Mapping

One of the main weaknesses of point-based representations for mapping is that they do
not model the empty and occupied space. This can be a problem for applications such as

14

Chapter 6 of RGB-D Image Analysis and Processing

robot navigation or occlusion modelling in AR. Volumetric mapping aims to overcome
such problems by modeling the occupancy of the whole 3D scene volume.

The most usual model for volumetric maps is the Truncated Signed Distance Function
[20], used for example in [60, 81, 116, 117]. In this representation, the 3D world is
discretized into voxels and modeled as a volumetric signed distance Ô¨Åeld Œ¶ : R3 ‚Üí R,
where we assign to each cell the distance to the nearest object, which is deÔ¨Åned positive
if its center is outside the object and negative if it is inside it. Since only the surfaces
and their surroundings are considered, the distances are usually truncated if larger than
a threshold œÑ. Also, for every cell, a weight is stored that represents the conÔ¨Ådence
on the distance measurement. The algorithm for updating a TSDF with new depth
measurements measurement was Ô¨Årst presented in [20]. In a few words, it consists on a
weighted running average on the distance measurements from the depth sensors.

TSDF is addressed in depth in chapter 5 of this book. For this reason, we do not
extend further on it and refer the reader to this chapter, and the references there and in
this section, for further detail on this topic.

6 Loop Closing

Loop closing algorithms correct the drift that has accumulated during exploratory trajec-
tories, maintaining a consistent global representation of the environment. Loop detection
(Section 6.1), is mainly based on the visual appearance between two keyframes of the
map. When these two keyframes are imaging the same place and the loop closure has
been detected, the geometric constraint between the two is added to the map, which is
then updated according to it. This map update is known as loop correction (Section
6.2), and we detail the pose graph formulation as an efÔ¨Åcient alternative for large map
representations and loop closing correction.

6.1 Loop Detection

Due to the excellent performance of visual place recognition, many RGB-D SLAM
systems use only the RGB channels for loop detection (e.g., [16, 34, 79]). The most
used approaches are based on the bag of words model, Ô¨Årst proposed in [100]. The
implementation in [30] is particularly suited for visual SLAM, adding robustness to
plain visual appearance by geometric and sequential consistency checks.

In the bag of words model the space of local descriptors is divided into discrete
clusters using the k-means algorithm. Each cluster is referred to as a visual word, and
the set of all visual words forms a visual dictionary. With such a partition, an image
is described as the histogram of visual word occurrences. The place querying can be
made very efÔ¨Åcient by maintaining inverse indexes from the visual words to the database
images in which they appear.

Bag-of-words descriptors have some limitations for RGB-D odometry and SLAM.
They assume images of sufÔ¨Åcient texture to extract salient point features, and they do
not use the information of the depth channel from RGB-D images. Also, the extraction
and description of local features has a considerable computational overhead.

Chapter 6 of RGB-D Image Analysis and Processing

15

There are several approaches in the literature that overcome such limitations. [32]
proposes to Ô¨Ånd loop closure candidates without features, by the alignment of keyframes
against synthetic views of the map. [99] uses regression forests to predict correspon-
dences between an RGB-D frame and the map, an approach that has been reÔ¨Åned
in [13, 37, 113] among others. [33] proposed to encode each RGB-D image using ran-
domized ferns.

6.2 Loop Correction

Once a loop is detected based on the appearance of two keyframes, a constraint between
the poses of both can be computed by photometric and/or geometric alignment. When
such constraint is added to the map optimization, the global map consistency is achieved
by accommodating this new constraint and correcting the accumulated drift. For compu-
tational reasons, this correction is frequently done by pose graph optimization. Fig. 5
illustrates a loop closure process.

A pose graph is a compact map representation composed of the set of m keyframe
poses summarizing the trajectory, i.e., Tkfs = {T1a, T2a, . . . , Tma} where the reference
frame a is chosen from one of the keyframes as the ‚Äúanchor‚Äù to the rest. As this
representation does not include map points, it is particularly useful for estimating
globally consistent maps of large areas at a reasonable cost, and is used among others
in [16, 26, 54].

Pose graph optimization aims to minimize the following cost:

arg min
Tkfs

Egraph = arg min

Tkfs

‚àë
(i, j)‚ààŒµedge

i j ‚Ñ¶‚àí1
r(cid:62)

i j ri j

(40)

where Œµedge denotes the set of edges (i.e., relative pose constraints) in the pose graph, ri j
and ‚Ñ¶i j are respectively the residual associated to the ith and jth camera poses and its
uncertainty. Such residual is deÔ¨Åned as

ri j = logSE(3)(Ti j,0T jaT‚àí1
ia )

(41)

where Ti j,0 is the Ô¨Åxed transformation constraint from the alignment (Section 4) and
T jaT‚àí1
ia = T ji is the current estimate of the relative motion. For more details on the pose
graph optimization method, the reader is referred to [63, 87].

7 Advanced topics

In this section, we review some of the relevant approaches in RGB-D odometry and
SLAM that, due to space reasons, were not covered in the main part of the chapter.

7.1 Hybrid Cost Function

In Section 4 and 5, we discussed different types of cost functions separately. Many
state-of-the-art methods, however, minimize a weighted sum of multiple cost functions.
This strategy allows for better utilization of RGB-D data, which can lead to performance

16

Chapter 6 of RGB-D Image Analysis and Processing

Fig. 5: An illustration of loop closure: (a) Ground truth. (b) Odometry result containing
drift. (c) A loop detection followed by the computation of the loop constraint. (d) The
keyframe trajectory after the pose graph optimization.

gains [23, 54, 76, 77]. In [41], 3D point-to-point error was used for outlier rejection, and
then the pose was reÔ¨Åned by minimizing the combined 2D point-to-point cost and 3D
point-to-plane cost. In [22, 118], the joint minimization of photometric and point-to-
plane cost was used. Another popular method is to jointly minimize the photometric and
(inverse) depth cost (which is not discussed here) [3, 16, 35, 54, 102].

7.2 Semantic Mapping

In recent years, there has been an impressive progress in the Ô¨Åeld of machine learning
(speciÔ¨Åcally deep learning) for visual recognition and segmentation tasks. Building
on them, there have appeared several visual SLAM algorithms that not only estimate
geometric models, but also annotate them with high-level semantic information (see Fig.
6 for an illustration). The research on semantic mapping is not as mature as geometric
mapping, with challenges related to robustness, accuracy and cost. The state-of-the-
art systems, however, show promising results. Semantic mapping could improve the
accuracy and robustness of current SLAM algorithms, and widen their applications. For
example, [7] uses a combination of geometry and learning to remove dynamic objects
and create life-long maps, achieving better accuracy than geometric SLAM baselines.
Similarly, [52] uses data association failures and region growing to segment and remove
dynamic objects, improving the system robustness and accuracy.

One can differentiate between maps based on speciÔ¨Åc object instances and object
categories. An approach like [92] adopts the map of the former type. It assumes that a
database of relevant objects in the scene is available. The map is then modeled as a graph
of keyframe and object poses, and it is optimized using the constraints from keyframe-
to-keyframe point cloud alignment and keyframe-to-object using [24]. Object-based
RGB-D SLAM has also been addressed in [108]

Most category-wise semantic mapping methods leverage 2D segmentation algorithms
(e.g., [40]), differing on how they transfer the labels to the 3D maps. As a few examples,
we refer to the following works for this area of research [42, 74, 75, 82, 106].

(a)(b)(c)(d)KeyframeSequential edge Loop edge Chapter 6 of RGB-D Image Analysis and Processing

17

Fig. 6: Illustration of results from semantic RGB-D SLAM. Different colors indicate
different object categories. Figures taken from [111].

7.3 Edge-based methods

While the majority of the existing methods consider each pixel as independent measure-
ments, edge-based methods exploit the structural regularities of indoor scenes, modelling
the scene geometry with lines or edges. This can provide an advantage over point-based
methods, especially when the scene has weak texture but strong structural priors. One of
the earliest works that demonstrated the advantage of edge-based registration in RGB-D
SLAM is [15]. This method is based on an efÔ¨Åcient edge detection for RGB-D point
clouds and 3D registration of the edge points using the ICP algorithm. In [10], it is
shown that the edge detection can be accelerated using the previous RGB-D frame. On
the other hand, [71] proposes to model the straight lines only and incorporate their uncer-
tainties in the pose estimation problem. Although this work is shown to outperform [15]
under lighting variations, it fails when the scene contains few lines. To overcome this
limitation, [70] uses both points and lines. In [64], direct edge alignment is proposed
that minimizes the sum of squared distances between the reprojected and the nearest
edge point using the distance transform of the edge-map. Other works propose to jointly
minimize this edge distance and other errors, e.g., a photometric error [114] and an
ICP-based point-to-plane distance [93]. Later works such as [124] and [56] take the
image gradient direction also into account for the direct edge alignment. As in [55], these
last two works estimate the camera pose using the iteratively reweighted least-squares
(IRLS) method with the t-distribution as a robust weight function.

7.4 Plane-based methods

Like edges, planes are abundant in man-made environments and can be modelled explic-
itly for tracking and mapping. In [109], an RGB-D SLAM system is proposed based
on the 3D registration between the minimal set of point/plane primitives. This system
is improved in [2] and [1] by incorporating the guided search of points/planes and
triangulation of 2D-to-2D/3D point matches, respectively. [86] proposes an odometry
method that uses planes (and points if strictly necessary) and reÔ¨Ånes the relative pose
using a direct method. In [91], a dense SLAM method is proposed based on dense ICP

18

Chapter 6 of RGB-D Image Analysis and Processing

with a piecewise planar map. In both [73] and [45], it is proposed to model planes in a
global map, so that they are optimized together with the keyframe poses in the graph opti-
mization for global consistency. The main difference is that the former uses direct image
alignment in an EM framework, while the latter combines geometric and photometric
methods for the fast odometry estimation. Besides, the latter adopts the minimal plane
parameterization proposed in [51] and does not require GPU. A visual-inertial method
based on [45] is proposed in [44]. In [31], it is proposed to use planar point features
for tracking and mapping, as they are more accurate than the traditional point features
and computationally inexpensive. Other works such as [57, 58, 66] use Manhattan world
assumption, which simpliÔ¨Åes the incorporation of the planes into a SLAM formulation.
Finally, [85] shows that it can be beneÔ¨Åcial to use points, lines and planes all together in
a joint optimization framework.

7.5 Multisensor fusion

The constraints coming from RGB-D data can be combined with other sources of infor-
mation to increase the accuracy and robustness of the tracking and mapping processes.
For example, [65] presents a tightly coupled formulation for RGB-D-inertial SLAM
based on ElasticFusion [119]. In [61], RGB-D SLAM estimates the conÔ¨Åguration space
of an articulated arm. [43] adds odometric and kinematic constraints from a wheeled
robot with a manipulator, and [96] adds the kinematic constraints of a humanoid robot
and inertial data.

7.6 Non-rigid reconstructions

The 3D reconstruction of non-rigid environments is a very relevant and challenging area
of research that has been frequently addressed using RGB-D sensors. [80] is one of the
most representative systems, achieving impressive results for deformable surfaces. [90] is
a recent work that reconstructs a scene with multiple moving objects. [49] estimates very
efÔ¨Åciently the odometry of an RGB-D camera and the Ô¨Çow of a scene that might contain
static and dynamic parts. [95] classiÔ¨Åes the scene parts into static and dynamic, fuses the
static parts and discard the dynamic ones. A recent survey on 3D reconstruction from
RGB-D camera, including dynamic scenes, is conducted in [125]. It places emphasis on
high-quality ofÔ¨Çine reconstruction, which is complementary to the focus of this chapter
on real-time online reconstruction and camera tracking.

8 Conclusions

Estimating the camera ego-motion and the 3D structure of the surrounding environment is
a crucial component in many applications such as photogrammetry, AR and vision-based
navigation. For this particular tasks, RGB-D cameras provide signiÔ¨Åcant advantages over
RGB cameras, as the additional depth measurements ease the process of metric scene
reconstruction. Furthermore, they impose a relatively mild constraint on cost, size and
power, making them a popular choice for mobile platforms. As a result, both academia

Chapter 6 of RGB-D Image Analysis and Processing

19

and industry have shown an ever-increasing interest in RGB-D odometry and SLAM
methods for the past decade.

In this chapter, we reviewed the general formulations of RGB-D odometry and
SLAM. The standard pipeline of VSLAM systems consists of three main components:
camera pose tracking, scene mapping and loop closing. For tracking and mapping, we
discussed some of the widely-used methods and highlighted the difference in their
formulations (i.e., photometric vs. geometric alignment and point-based vs. volumetric
mapping). For loop closing, we detailed the underlying principles of loop detection
and drift correction, namely the appearance-based place recognition and pose graph
optimization. Lastly, we presented a brief review of the advanced topics in the research
Ô¨Åeld today.

9 Resources

There are a high number of available resources in the web related to RGB-D odometry
and SLAM. We will refer here the most relevant open-source software and public
databases.

Code

FOVIS [46] (https://fovis.github.io/)
Implementation of a feature-based RGB-D odometry.
DVO SLAM [53‚Äì55, 103] (https://github.com/tum-vision/dvo_slam)
Implementation of a frame-to-frame RGB-D visual Odometry.
RGBDSLAM v2 [27] (https://github.com/felixendres/rgbdslam_v2, http:
//wiki.ros.org/rgbdslam, https://openslam-org.github.io/rgbdslam.html)
Implementation of an RGB-D SLAM system, with a feature-based camera tracking and
a pose graph as map model.
ElasticFusion [119] (https://github.com/mp3guy/ElasticFusion)
RGB-D scene-centered SLAM system that models the scene as a set of surfels that are
deformed to accommodate loop closures.
RGBDTAM [16] (https://github.com/alejocb/rgbdtam)
RGB-D SLAM system with a pose graph as map model and frame-to-frame tracking.
MaskFusion [90] (https://github.com/martinruenz/maskfusion)
A recent semantic (object-based) RGB-D SLAM system for dynamic scenes.
PlaneMatch [98] (https://github.com/yifeishi/PlaneMatch)
RGB-D SLAM algorithm that proposes a novel descriptor for planar surfaces and exploits
correspondences between them.

Databases

RGB-D SLAM Dataset and Benchmark (Also known as the TUM dataset) [107]
(https://vision.in.tum.de/data/datasets/rgbd-dataset).
It contains indoor recordings with ground truth camera pose in a wide variety of condi-
tions: rotation-only and general motion, static and dynamic environments and small and
mid-size scene coverage.

20

Chapter 6 of RGB-D Image Analysis and Processing

The ETH3D dataset [94] (https://www.eth3d.net/).
A benchmark dataset for RGB-D SLAM (among others), recorded with synchronized
global shutter cameras.
The Matterport dataset [14] (https://github.com/niessner/Matterport).
Annotated data captured throughout 90 properties with a Matterport Pro Camera.
Scannet [21] (http://www.scan-net.org/).
RGB-D video dataset annotated with 3D camera poses, reconstructions, and instance-
level semantic segmentations.
The ICL-NUIM dataset [38] (https://www.doc.ic.ac.uk/Àúahanda/VaFRIC/iclnuim.
html).
This dataset contain RGB-D sequences on synthetic scenes; hence with camera pose and
scene ground truth.
InteriorNet [68] (https://interiornet.org/).
Dataset containing RGB-D-inertial streams for synthetic large scale interior scenes.

References

1. Ataer-Cansizoglu, E., Taguchi, Y., Ramalingam, S.: Pinpoint SLAM: A Hybrid of 2D and 3D
Simultaneous Localization and Mapping for RGB-D Sensors. In: 2016 IEEE International
Conference on Robotics and Automation (ICRA), pp. 1300‚Äì1307 (2016)

2. Ataer-Cansizoglu, E., Taguchi, Y., Ramalingam, S., Garaas, T.: Tracking an RGB-D Camera
Using Points and Planes. In: 2013 IEEE International Conference on Computer Vision
Workshops, pp. 51‚Äì58 (2013)

3. Babu, B.W., Kim, S., Yan, Z., Ren, L.: œÉ -DVO: Sensor Noise Model Meets Dense Visual
Odometry. In: 2016 IEEE International Symposium on Mixed and Augmented Reality
(ISMAR), pp. 18‚Äì26 (2016)

4. Bailey, T., Durrant-Whyte, H.: Simultaneous Localization and Mapping (SLAM): Part II.

IEEE Robotics & Automation Magazine 13(3), 108‚Äì117 (2006)

5. Barfoot, T.D.: State Estimation for Robotics. Cambridge University Press (2017)
6. Bay, H., Tuytelaars, T., Van Gool, L.: SURF: Speeded Up Robust Features. In: Proceedings

of the European Conference on Computer Vision (ECCV), pp. 404‚Äì417 (2006)

7. Besc¬¥os, B., F¬¥acil, J.M., Civera, J., Neira, J.: DynaSLAM: Tracking, Mapping, and Inpainting

in Dynamic Scenes. IEEE Robotics and Automation Letters 3(4), 4076‚Äì4083 (2018)

8. Besl, P.J., McKay, N.D.: Method for Registration of 3-D Shapes. In: Sensor Fusion IV:
Control Paradigms and Data Structures, vol. 1611, pp. 586‚Äì607. International Society for
Optics and Photonics (1992)

9. Bloesch, M., Czarnowski, J., Clark, R., Leutenegger, S., Davison, A.J.: CodeSLAM - Learn-
ing a Compact, Optimisable Representation for Dense Visual SLAM. In: Proceedings of the
IEEE Conference on Computer Vision and Pattern Recognition, pp. 2560‚Äì2568 (2018)
10. Bose, L., Richards, A.: Fast depth edge detection and edge based RGB-D SLAM. In: 2016
IEEE International Conference on Robotics and Automation (ICRA), pp. 1323‚Äì1330 (2016)
11. Cadena, C., Carlone, L., Carrillo, H., Latif, Y., Scaramuzza, D., Neira, J., Reid, I., Leonard,
J.J.: Past, Present, and Future of Simultaneous Localization and Mapping: Towards the
Robust-Perception Age. IEEE Transactions on Robotics 32(6), 1309‚Äì1332 (2016)

12. Castellanos, J.A., Montiel, J., Neira, J., Tard¬¥os, J.D.: The SPmap: A Probabilistic Framework
IEEE Transactions on robotics and

for Simultaneous Localization and Map Building.
Automation 15(5), 948‚Äì952 (1999)

Chapter 6 of RGB-D Image Analysis and Processing

21

13. Cavallari, T., Golodetz, S., Lord, N.A., Valentin, J., Di Stefano, L., Torr, P.H.: On-the-Fly
Adaptation of Regression Forests for Online Camera Relocalisation. In: Proceedings of the
IEEE Conference on Computer Vision and Pattern Recognition, pp. 4457‚Äì4466 (2017)
14. Chang, A., Dai, A., Funkhouser, T., Halber, M., Niessner, M., Savva, M., Song, S., Zeng, A.,
Zhang, Y.: Matterport3D: Learning from RGB-D Data in Indoor Environments. International
Conference on 3D Vision (3DV) (2017)

15. Choi, C., Trevor, A.J.B., Christensen, H.I.: RGB-D Edge Detection and Edge-Based Regis-
tration. In: 2013 IEEE/RSJ International Conference on Intelligent Robots and Systems, pp.
1568‚Äì1575 (2013)

16. Concha, A., Civera, J.: RGBDTAM: A Cost-Effective and Accurate RGB-D Tracking and
Mapping System. In: Intelligent Robots and Systems (IROS), 2017 IEEE/RSJ International
Conference on, pp. 6756‚Äì6763. IEEE (2017)

17. Concha, A., Hussain, M.W., Montano, L., Civera, J.: Manhattan and Piecewise-Planar
Constraints for Dense Monocular Mapping. In: Robotics: Science and systems (2014)
18. Concha, A., Loianno, G., Kumar, V., Civera, J.: Visual-Inertial Direct SLAM. In: 2016 IEEE
International Conference on Robotics and Automation (ICRA), pp. 1331‚Äì1338. IEEE (2016)
19. Corke, P.: Robotics, Vision and Control: Fundamental Algorithms In MATLAB¬Æ Second,

Completely Revised, chap. 1, pp. 15‚Äì41. Springer (2017)

20. Curless, B., Levoy, M.: A Volumetric Method for Building Complex Models from Range
Images. In: Proceedings of the 23rd annual conference on Computer graphics and interactive
techniques, pp. 303‚Äì312. ACM (1996)

21. Dai, A., Chang, A.X., Savva, M., Halber, M., Funkhouser, T., Nie√üner, M.: ScanNet: Richly-
annotated 3D Reconstructions of Indoor Scenes. In: Proc. Computer Vision and Pattern
Recognition (CVPR), IEEE (2017)

22. Dai, A., Nie√üner, M., Zollh¬®ofer, M., Izadi, S., Theobalt, C.: BundleFusion: Real-Time
Globally Consistent 3D Reconstruction Using On-the-Fly Surface Reintegration. ACM
Trans. Graph. 36(3), 24:1‚Äì24:18 (2017)

23. Damen, D., Gee, A., Mayol-Cuevas, W., Calway, A.: Egocentric Real-Time Workspace
Monitoring using an RGB-D Camera. In: 2012 IEEE/RSJ International Conference on
Intelligent Robots and Systems, pp. 1029‚Äì1036. IEEE (2012)

24. Drost, B., Ulrich, M., Navab, N., Ilic, S.: Model Globally, Match Locally: EfÔ¨Åcient and
Robust 3D Object Recognition. In: 2010 IEEE computer society conference on computer
vision and pattern recognition, pp. 998‚Äì1005. Ieee (2010)

25. Durrant-Whyte, H., Bailey, T.: Simultaneous Localization and Mapping: Part I.

IEEE

robotics & automation magazine 13(2), 99‚Äì110 (2006)

26. Endres, F., Hess, J., Engelhard, N., Sturm, J., Cremers, D., Burgard, W.: An Evaluation of
the RGB-D SLAM System. In: Robotics and Automation (ICRA), 2012 IEEE International
Conference on, pp. 1691‚Äì1696. IEEE (2012)

27. Endres, F., Hess, J., Sturm, J., Cremers, D., Burgard, W.: 3-D Mapping with an RGB-D

Camera. IEEE Transactions on Robotics 30(1), 177‚Äì187 (2014)

28. Engel, J., Koltun, V., Cremers, D.: Direct Sparse Odometry. IEEE transactions on pattern

analysis and machine intelligence 40(3), 611‚Äì625 (2018)

29. F¬¥acil, J.M., Ummenhofer, B., Zhou, H., Montesano, L., Brox, T., Civera, J.: CAM-Convs:
Camera-Aware Multi-Scale Convolutions for Single-View Depth. In: Proceedings of the
IEEE Conference on Computer Vision and Pattern Recognition (2019)

30. G¬¥alvez-L¬¥opez, D., Tardos, J.D.: Bags of Binary Words for Fast Place Recognition in Image

Sequences. IEEE Transactions on Robotics 28(5), 1188‚Äì1197 (2012)

31. Gao, X., Zhang, T.: Robust RGB-D Simultaneous Localization and Mapping using Planar

Point Features. Robotics and Autonomous Systems 72, 1 ‚Äì 14 (2015)

32. Gee, A.P., Mayol-Cuevas, W.W.: 6D Relocalisation for RGBD Cameras Using Synthetic

View Regression. In: BMVC (2012)

22

Chapter 6 of RGB-D Image Analysis and Processing

33. Glocker, B., Shotton, J., Criminisi, A., Izadi, S.: Real-time RGB-D Camera Relocalization
via Randomized Ferns for Keyframe Encoding. IEEE transactions on visualization and
computer graphics 21(5), 571‚Äì583 (2015)

34. Gutierrez-Gomez, D., Guerrero, J.J.: RGBiD-SLAM for Accurate Real-Time Localisation

and 3D Mapping. arXiv preprint arXiv:1807.08271 (2018)

35. Guti¬¥errez-G¬¥omez, D., Mayol-Cuevas, W., Guerrero, J.J.: Inverse Depth for Accurate Photo-
metric and Geometric Error Minimisation in RGB-D Dense Visual Odometry. In: Robotics
and Automation (ICRA), 2015 IEEE International Conference on, pp. 83‚Äì89. IEEE (2015)
36. Gutierrez-Gomez, D., Mayol-Cuevas, W., Guerrero, J.J.: Dense RGB-D Visual Odometry

using Inverse Depth. Robotics and Autonomous Systems 75, 571‚Äì583 (2016)

37. Guzman-Rivera, A., Kohli, P., Glocker, B., Shotton, J., Sharp, T., Fitzgibbon, A., Izadi, S.:
Multi-Output Learning for Camera Relocalization. In: Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pp. 1114‚Äì1121 (2014)

38. Handa, A., Whelan, T., McDonald, J., Davison, A.J.: A Benchmark for RGB-D Visual
Odometry, 3D Reconstruction and SLAM. In: Robotics and automation (ICRA), 2014 IEEE
international conference on, pp. 1524‚Äì1531. IEEE (2014)

39. Harris, C., Stephens, M.: A Combined Corner and Edge Detector. In: In Proc. of Fourth

Alvey Vision Conference, pp. 147‚Äì151 (1988)

40. He, K., Gkioxari, G., Doll¬¥ar, P., Girshick, R.: Mask R-CNN. In: Proceedings of the IEEE

international conference on computer vision, pp. 2961‚Äì2969 (2017)

41. Henry, P., Krainin, M., Herbst, E., Ren, X., Fox, D.: RGB-D Mapping: Using Depth Cameras
for Dense 3D Modeling of Indoor Environments. In: In the 12th International Symposium
on Experimental Robotics (ISER. Citeseer (2010)

42. Hermans, A., Floros, G., Leibe, B.: Dense 3D Semantic Mapping of Indoor Scenes from
RGB-D Images. In: Robotics and Automation (ICRA), 2014 IEEE International Conference
on, pp. 2631‚Äì2638. IEEE (2014)

43. Houseago, C., Bloesch, M., Leutenegger, S.: KO-Fusion: Dense Visual SLAM with Tightly-
Coupled Kinematic and Odometric Tracking. In: 2019 IEEE International Conference on
Robotics and Automation (ICRA). IEEE (2019)

44. Hsiao, M., Westman, E., Kaess, M.: Dense Planar-Inertial SLAM with Structural Constraints.
In: 2018 IEEE International Conference on Robotics and Automation (ICRA), pp. 6521‚Äì
6528. IEEE (2018)

45. Hsiao, M., Westman, E., Zhang, G., Kaess, M.: Keyframe-Based Dense Planar SLAM. In:

IEEE Intl. Conf. on Robotics and Automation, ICRA (2017)

46. Huang, A.S., Bachrach, A., Henry, P., Krainin, M., Maturana, D., Fox, D., Roy, N.: Visual
Odometry and Mapping for Autonomous Flight using an RGB-D Camera. In: International
Symposium of Robotics Research. Springer (2011)

47. Huber, P.J.: Robust Statistics. Springer (2011)
48. J. Engel and J. Sturm and D. Cremers: Scale-Aware Navigation of a Low-Cost Quadrocopter
with a Monocular Camera. Robotics and Autonomous Systems (RAS) 62(11), 1646‚Äì1656
(2014)

49. Jaimez, M., Kerl, C., Gonzalez-Jimenez, J., Cremers, D.: Fast Odometry and Scene Flow
from RGB-D Cameras Based on Geometric Clustering. In: 2017 IEEE International Confer-
ence on Robotics and Automation (ICRA), pp. 3992‚Äì3999. IEEE (2017)

50. K. Madsen H.B.Nielsen, O.T.: Methods for Non-Linear Least Squares Problems (2nd ed.)

p. 60 (2004)

51. Kaess, M.: Simultaneous Localization and Mapping with InÔ¨Ånite Planes. In: IEEE Interna-

tional Conference on Robotics and Automation, pp. 4605‚Äì4611 (2015)

52. Keller, M., LeÔ¨Çoch, D., Lambers, M., Izadi, S., Weyrich, T., Kolb, A.: Real-time 3D Recon-
struction in Dynamic Scenes using Point-Based Fusion. In: 2013 International Conference
on 3D Vision-3DV 2013, pp. 1‚Äì8. IEEE (2013)

Chapter 6 of RGB-D Image Analysis and Processing

23

53. Kerl, C., Stuckler, J., Cremers, D.: Dense Continuous-Time Tracking and Mapping with
Rolling Shutter RGB-D Cameras. In: Proceedings of the IEEE international conference on
computer vision, pp. 2264‚Äì2272 (2015)

54. Kerl, C., Sturm, J., Cremers, D.: Dense Visual SLAM for RGB-D Cameras. In: Intelligent
Robots and Systems (IROS), 2013 IEEE/RSJ International Conference on, pp. 2100‚Äì2106.
Citeseer (2013)

55. Kerl, C., Sturm, J., Cremers, D.: Robust Odometry Estimation for RGB-D Cameras. In:
Robotics and Automation (ICRA), 2013 IEEE International Conference on, pp. 3748‚Äì3754.
IEEE (2013)

56. Kim, C., Kim, P., Lee, S., Kim, H.J.: Edge-Based Robust RGB-D Visual Odometry Using
2-D Edge Divergence Minimization. In: IEEE/RSJ International Conference on Intelligent
Robots and Systems (IROS), pp. 6887‚Äì6894 (2018)

57. Kim, P., Coltin, B., Kim, H.J.: Linear RGB-D SLAM for Planar Environments. In: Computer

Vision ‚Äì ECCV 2018, pp. 350‚Äì366 (2018)

58. Kim, P., Coltin, B., Kim, H.J.: Low-Drift Visual Odometry in Structured Environments by
Decoupling Rotational and Translational Motion. In: 2018 IEEE International Conference
on Robotics and Automation (ICRA), pp. 7247‚Äì7253 (2018)

59. Klein, G., Murray, D.: Parallel Tracking and Mapping for Small AR Workspaces. In: Mixed
and Augmented Reality, 2007. ISMAR 2007. 6th IEEE and ACM International Symposium
on, pp. 225‚Äì234. IEEE (2007)

60. Klingensmith, M., Dryanovski, I., Srinivasa, S., Xiao, J.: Chisel: Real Time Large Scale 3D
Reconstruction Onboard a Mobile Device using Spatially Hashed Signed Distance Fields.
In: Robotics: science and systems, vol. 4 (2015)

61. Klingensmith, M., Sirinivasa, S.S., Kaess, M.: Articulated Robot Motion for Simultaneous
IEEE robotics and automation letters 1(2),

Localization and Mapping (ARM-SLAM).
1156‚Äì1163 (2016)

62. Klose, S., Heise, P., Knoll, A.: EfÔ¨Åcient Compositional Approaches for Real-Time Robust
Direct Visual Odometry from RGB-D Data. In: Intelligent Robots and Systems (IROS),
2013 IEEE/RSJ International Conference on, pp. 1100‚Äì1106. IEEE (2013)

63. K¬®ummerle, R., Grisetti, G., Strasdat, H., Konolige, K., Burgard, W.: g2o: A General Frame-
work for Graph Optimization. In: IEEE Intl. Conf. on Robotics and Automation (ICRA), pp.
3607‚Äì3613 (2011)

64. Kuse, M., Shaojie Shen: Robust Camera Motion Estimation using Direct Edge Alignment and
Sub-Gradient Method. In: 2016 IEEE International Conference on Robotics and Automation
(ICRA), pp. 573‚Äì579 (2016)

65. Laidlow, T., Bloesch, M., Li, W., Leutenegger, S.: Dense RGB-D-Inertial SLAM with Map
Deformations. In: Intelligent Robots and Systems (IROS), 2017 IEEE/RSJ International
Conference on, pp. 6741‚Äì6748. IEEE (2017)

66. Le, P., KoÀásecka, J.: Dense Piecewise Planar RGB-D SLAM for Indoor Environments. In:
2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), pp.
4944‚Äì4949 (2017)

67. Lee, S.H., de Croon, G.: Stability-Based Scale Estimation for Monocular SLAM. IEEE

Robotics and Automation Letters 3(2), 780‚Äì787 (2018)

68. Li, W., Saeedi, S., McCormac, J., Clark, R., Tzoumanikas, D., Ye, Q., Huang, Y., Tang,
R., Leutenegger, S.: InteriorNet: Mega-Scale Multi-sensor Photo-realistic Indoor Scenes
Dataset. In: British Machine Vision Conference (BMVC) (2018)

69. Lowe, D.G.: Distinctive Image Features from Scale-invariant Keypoints.

International

journal of computer vision 60(2), 91‚Äì110 (2004)

70. Lu, Y., Song, D.: Robust RGB-D Odometry Using Point and Line Features. In: 2015 IEEE

International Conference on Computer Vision (ICCV), pp. 3934‚Äì3942 (2015)

24

Chapter 6 of RGB-D Image Analysis and Processing

71. Lu, Y., Song, D.: Robustness to Lighting Variations: An RGB-D Indoor Visual Odometry
using Line Segments. In: 2015 IEEE/RSJ International Conference on Intelligent Robots
and Systems (IROS), pp. 688‚Äì694 (2015)

72. Lucas, B.D., Kanade, T.: An Iterative Image Registration Technique with an Application
to Stereo Vision. In: Proceedings of the 7th International Joint Conference on ArtiÔ¨Åcial
Intelligence - Volume 2, pp. 674‚Äì679 (1981)

73. Ma, L., Kerl, C., St¬®uckler, J., Cremers, D.: CPA-SLAM: Consistent Plane-Model Alignment
for Direct RGB-D SLAM. In: IEEE International Conference on Robotics and Automation
(ICRA), pp. 1285‚Äì1291 (2016)

74. Ma, L., St¬®uckler, J., Kerl, C., Cremers, D.: Multi-view Deep Learning for Consistent Se-
mantic Mapping with RGB-D Cameras. In: Intelligent Robots and Systems (IROS), 2017
IEEE/RSJ International Conference on, pp. 598‚Äì605. IEEE (2017)

75. McCormac, J., Handa, A., Davison, A., Leutenegger, S.: SemanticFusion: Dense 3D Seman-
tic Mapping with Convolutional Neural Networks. In: 2017 IEEE International Conference
on Robotics and Automation (ICRA), pp. 4628‚Äì4635. IEEE (2017)

76. Meilland, M., Comport, A.I.: On Unifying Key-Frame and Voxel-Based Dense Visual SLAM
at Large Scales. In: 2013 IEEE/RSJ International Conference on Intelligent Robots and
Systems, pp. 3677‚Äì3683. IEEE (2013)

77. Meilland, M., Comport, A.I.: Super-Resolution 3D Tracking and Mapping. In: 2013 IEEE
International Conference on Robotics and Automation, pp. 5717‚Äì5723. IEEE (2013)
78. Mur-Artal, R., Montiel, J.M.M., Tard¬¥os, J.D.: ORB-SLAM: a Versatile and Accurate Monoc-

ular SLAM System. IEEE transactions on robotics 31(5), 1147‚Äì1163 (2015)

79. Mur-Artal, R., Tard¬¥os, J.D.: ORB-SLAM2: An Open-source SLAM System for Monocular,
Stereo, and RGB-D Cameras. IEEE Transactions on Robotics 33(5), 1255‚Äì1262 (2017)
80. Newcombe, R.A., Fox, D., Seitz, S.M.: DynamicFusion: Reconstruction and Tracking of
Non-Rigid Scenes in Real-Time. In: Proceedings of the IEEE conference on computer vision
and pattern recognition, pp. 343‚Äì352 (2015)

81. Newcombe, R.A., Izadi, S., Hilliges, O., Molyneaux, D., Kim, D., Davison, A.J., Kohi, P.,
Shotton, J., Hodges, S., Fitzgibbon, A.: KinectFusion: Real-Time Dense Surface Mapping
and Tracking. In: Mixed and augmented reality (ISMAR), 2011 10th IEEE international
symposium on, pp. 127‚Äì136. IEEE (2011)

82. Pham, T.T., Reid, I., Latif, Y., Gould, S.: Hierarchical Higher-Order Regression Forest Fields:
An Application to 3D Indoor Scene Labelling. In: Proceedings of the IEEE International
Conference on Computer Vision, pp. 2246‚Äì2254 (2015)

83. Pire, T., Fischer, T., Castro, G., De Crist¬¥oforis, P., Civera, J., Berlles, J.J.: S-PTAM: Stereo
Parallel Tracking and Mapping. Robotics and Autonomous Systems 93, 27‚Äì42 (2017)
84. Platinsky, L., Davison, A.J., Leutenegger, S.: Monocular Visual Odometry: Sparse Joint
Optimisation or Dense Alternation? In: 2017 IEEE International Conference on Robotics
and Automation (ICRA), pp. 5126‚Äì5133. IEEE (2017)

85. Proenc¬∏a, P.F., Gao, Y.: Probabilistic RGB-D Odometry Based on Points, Lines and Planes

under Depth Uncertainty. Robotics and Autonomous Systems 104, 25 ‚Äì 39 (2018)

86. Raposo, C., Lourenc¬∏o, M., Barreto, J.P., Antunes, M.: Plane-based Odometry using an

RGB-D Camera. In: In British Machine Vision Conference (BMVC (2013)

87. Rosen, D.M., Carlone, L., Bandeira, A.S., Leonard, J.J.: SE-Sync: A CertiÔ¨Åably Correct
Algorithm for Synchronization over the Special Euclidean Group. I. J. Robotics Res. 38(2-3)
(2019)

88. Rosten, E., Drummond, T.: Machine Learning for High-Speed Corner Detection. In: Euro-

pean conference on computer vision, pp. 430‚Äì443. Springer (2006)

89. Rublee, E., Rabaud, V., Konolige, K., Bradski, G.: ORB: An EfÔ¨Åcient Alternative to SIFT
or SURF. In: Proceedings of the IEEE international conference on computer vision, pp.
2564‚Äì2571 (2011)

Chapter 6 of RGB-D Image Analysis and Processing

25

90. R¬®unz, M., BufÔ¨Åer, M., Agapito, L.: MaskFusion: Real-time Recognition, Tracking and
Reconstruction of Multiple Moving Objects. In: 2018 IEEE International Symposium on
Mixed and Augmented Reality (ISMAR), pp. 10‚Äì20. IEEE (2018)

91. Salas-Moreno, R.F., Glocker, B., Kelly, P.H.J., Davison, A.J.: Dense Planar SLAM. In: IEEE
International Symposium on Mixed and Augmented Reality, ISMAR, pp. 157‚Äì164 (2014)
92. Salas-Moreno, R.F., Newcombe, R.A., Strasdat, H., Kelly, P.H., Davison, A.J.: SLAM++:
Simultaneous Localisation and Mapping at the Level of Objects. In: Proceedings of the
IEEE conference on computer vision and pattern recognition, pp. 1352‚Äì1359 (2013)
93. Schenk, F., Fraundorfer, F.: Combining Edge Images and Depth Maps for Robust Visual

Odometry. In: British Machine Vision Conference (2017)

94. Schops, T., Sattler, T., Pollefeys, M.: BAD SLAM: Bundle Adjusted Direct RGB-D SLAM.
In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pp.
134‚Äì144 (2019)

95. Scona, R., Jaimez, M., Petillot, Y.R., Fallon, M., Cremers, D.: StaticFusion: Background
Reconstruction for Dense RGB-D SLAM in Dynamic Environments. In: 2018 IEEE Interna-
tional Conference on Robotics and Automation (ICRA), pp. 1‚Äì9. IEEE (2018)

96. Scona, R., Nobili, S., Petillot, Y.R., Fallon, M.: Direct Visual SLAM Fusing Proprioception
for a Humanoid Robot. In: 2017 IEEE/RSJ International Conference on Intelligent Robots
and Systems (IROS), pp. 1419‚Äì1426. IEEE (2017)

97. Shi, J., Tomasi, C.: Good Features to Track. In: 1994 Proceedings of IEEE Conference on

Computer Vision and Pattern Recognition, pp. 593‚Äì600 (1994)

98. Shi, Y., Xu, K., Niessner, M., Rusinkiewicz, S., Funkhouser, T.: PlaneMatch: Patch Copla-
narity Prediction for Robust RGB-D Reconstruction. arXiv preprint arXiv:1803.08407
(2018)

99. Shotton, J., Glocker, B., Zach, C., Izadi, S., Criminisi, A., Fitzgibbon, A.: Scene Coordinate
Regression Forests for Camera Relocalization in RGB-D Images. In: Proceedings of the
IEEE Conference on Computer Vision and Pattern Recognition, pp. 2930‚Äì2937 (2013)
100. Sivic, J., Zisserman, A.: Video Google: A Text Retrieval Approach to Object Matching in
Videos. In: Proceedings of the Ninth IEEE International Conference on Computer Vision, p.
1470. IEEE (2003)

101. Sol`a, J., Deray, J., Atchuthan, D.: A Micro Lie Theory for State Estimation in Robotics.

arXiv preprint arXiv:1812.01537 (2018)

102. Steinbrucker, F., Kerl, C., Cremers, D., Sturm, J.: Large-Scale Multi-resolution Surface Re-
construction from RGB-D Sequences. In: 2013 IEEE International Conference on Computer
Vision, pp. 3264‚Äì3271 (2013)

103. Steinbr¬®ucker, F., Sturm, J., Cremers, D.: Real-time Visual Odometry from Dense RGB-D
Images. In: Computer Vision Workshops (ICCV Workshops), 2011 IEEE International
Conference on, pp. 719‚Äì722. IEEE (2011)

104. Strasdat, H.: Local Accuracy and Global Consistency for EfÔ¨Åcient Visual SLAM. Ph.D.

thesis, Department of Computing, Imperial College London (2012)

105. Strasdat, H., Montiel, J., Davison, A.J.: Scale Drift-Aware Large Scale Monocular SLAM.

Robotics: Science and Systems VI 2(3), 7 (2010)

106. St¬®uckler, J., Waldvogel, B., Schulz, H., Behnke, S.: Dense Real-Time Mapping of Object-
Class Semantics from RGB-D Video. Journal of Real-Time Image Processing 10(4), 599‚Äì609
(2015)

107. Sturm, J., Engelhard, N., Endres, F., Burgard, W., Cremers, D.: A Benchmark for the Evalu-
ation of RGB-D SLAM Systems. In: Proc. of the International Conference on Intelligent
Robot Systems (IROS) (2012)

108. S¬®underhauf, N., Pham, T.T., Latif, Y., Milford, M., Reid, I.: Meaningful Maps with Object-
Oriented Semantic Mapping. In: 2017 IEEE/RSJ International Conference on Intelligent
Robots and Systems (IROS), pp. 5079‚Äì5085. IEEE (2017)

26

Chapter 6 of RGB-D Image Analysis and Processing

109. Taguchi, Y., Jian, Y., Ramalingam, S., Feng, C.: Point-Plane SLAM for Hand-Held 3D
Sensors. In: 2013 IEEE International Conference on Robotics and Automation, pp. 5182‚Äì
5189 (2013)

110. Tateno, K., Tombari, F., Laina, I., Navab, N.: CNN-SLAM: Real-Time Dense Monocular
SLAM with Learned Depth Prediction. In: IEEE Computer Society Conference on Computer
Vision and Pattern Recognition (CVPR) (2017)

111. Tateno, K., Tombari, F., Navab, N.: Real-Time and Scalable Incremental Segmentation
on Dense SLAM. In: 2015 IEEE/RSJ International Conference on Intelligent Robots and
Systems (IROS), pp. 4465‚Äì4472. IEEE (2015)

112. Triggs, B., McLauchlan, P.F., Hartley, R.I., Fitzgibbon, A.W.: Bundle Adjustment - A Modern
Synthesis. In: International workshop on vision algorithms, pp. 298‚Äì372. Springer (1999)
113. Valentin, J., Nie√üner, M., Shotton, J., Fitzgibbon, A., Izadi, S., Torr, P.H.: Exploiting Un-
certainty in Regression Forests for Accurate Camera Relocalization. In: Proceedings of the
IEEE Conference on Computer Vision and Pattern Recognition, pp. 4400‚Äì4408 (2015)
114. Wang, X., Dong, W., Zhou, M., Li, R., Zha, H.: Edge Enhanced Direct Visual Odometry. In:

Proceedings of the British Machine Vision Conference (BMVC), pp. 35.1‚Äì35.11 (2016)

115. Wang, Y., Zhang, Q., Zhou, Y.: RGB-D Mapping for Indoor Environment. In: 2014 9th
IEEE Conference on Industrial Electronics and Applications, pp. 1888‚Äì1892 (2014)
116. Whelan, T., Johannsson, H., Kaess, M., Leonard, J.J., McDonald, J.: Robust Real-Time
Visual Odometry for Dense RGB-D Mapping. In: Robotics and Automation (ICRA), 2013
IEEE International Conference on, pp. 5724‚Äì5731. IEEE (2013)

117. Whelan, T., Kaess, M., Johannsson, H., Fallon, M., Leonard, J.J., McDonald, J.: Real-Time
Large-Scale Dense RGB-D SLAM with Volumetric Fusion. The International Journal of
Robotics Research 34(4-5), 598‚Äì626 (2015)

118. Whelan, T., Leutenegger, S., Salas-Moreno, R.F., Glocker, B., Davison, A.J.: ElasticFusion:
Dense SLAM Without A Pose Graph. In: Robotics: Science and Systems (RSS) (2015)
119. Whelan, T., Salas-Moreno, R.F., Glocker, B., Davison, A.J., Leutenegger, S.: ElasticFusion:
Real-time dense SLAM and light source estimation. The International Journal of Robotics
Research 35(14), 1697‚Äì1716 (2016)

120. Yokozuka, M., Oishi, S., Thompson, S., Banno, A.: VITAMIN-E: VIsual Tracking And
MappINg with Extremely Dense Feature Points. In: Proceedings of the IEEE Conference on
Computer Vision and Pattern Recognition, pp. 9641‚Äì9650 (2019)

121. Zhang, Z.: Parameter Estimation Techniques: A Tutorial with Application to Conic Fitting.

Image and vision Computing 15, 59‚Äì76 (1997)

122. Zhou, H., Ummenhofer, B., Brox, T.: DeepTAM: Deep Tracking and Mapping. In: Proceed-
ings of the European Conference on Computer Vision (ECCV), pp. 822‚Äì838 (2018)
123. Zhou, Q.Y., Koltun, V.: Color Map Optimization for 3D Reconstruction with Consumer

Depth Cameras. ACM Transactions on Graphics (TOG) 33(4), 155 (2014)

124. Zhou, Y., Li, H., Kneip, L.: Canny-VO: Visual Odometry with RGB-D Cameras Based
on Geometric 3-D‚Äì2-D Edge Alignment. IEEE Transactions on Robotics 35(1), 184‚Äì199
(2019)

125. Zollh¬®ofer, M., Stotko, P., G¬®orlitz, A., Theobalt, C., Nie√üner, M., Klein, R., Kolb, A.: State of
the Art on 3D Reconstruction with RGB-D Cameras. In: Computer Graphics Forum, vol. 37,
pp. 625‚Äì652. Wiley Online Library (2018)

126. Zubizarreta, J., Aguinaga, I., Montiel, J.: Direct Sparse Mapping.

arXiv preprint

arXiv:1904.06577 (2019)

