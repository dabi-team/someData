Sampling-based 3-D Line-of-Sight PWA Model Predictive Control for
Autonomous Rendezvous and Docking with a Tumbling Target

Dongting Li∗, Ruiqi Dong

Harbin Institute of Technology (Shenzhen), Shenzhen 518055, P. R. China

A R T I C L E I N F O

A B S T R A C T

0
2
0
2

g
u
A
1

]

Y
S
.
s
s
e
e
[

2
v
0
9
3
5
1
.
7
0
0
2
:
v
i
X
r
a

Keywords:
Sampling-based
Novel constructions of constraints
Singularity-free
PWA model predictive control
3-D LOS dynamics
Pose tracking

In this paper, a model predictive control (MPC) framework is employed to realize autonomous ren-
dezvous and docking (AR&D) with a tumbling target, using the piecewise aﬃne (PWA) model of
the 3-D line-of-sight (LOS) dynamics and Euler attitude dynamics. Consider the error between the
predictions obtained by the approximate linear model and the actual states of nonlinear dynamics, a
sampling-based PWA MPC is proposed to sample the predictions in the closer neighborhood of the
actual states. Besides, novel constructions of constraints are presented to reduce the on-board com-
putation cost and time-delay. Furthermore, a singularity-free strategy is provided to realize crossing
the singularity of angle states smoothly. Then, the mission is achieved by continuous 6-DOF pose
(position and attitude) tracking of the target’s docking port, with the coupling between the position
and attitude of the target’s docking port is taken into account. Finally, numerical results are presented
to demonstrate the above theories.

1. Introduction

With rapid development of aerospace technology, au-
tonomous rendezvous and docking (AR&D) has attracted
growing interest of researchers. In recent years, impressive
achievements have been acquired in the studies of AR&D
with a cooperative target ( e.g., [1][2][3]), which requires the
target spacecraft is attitude stable. However, due to the in-
crease of malfunctioning satellites and space debris, AR&D
with a tumbling target is required, which is more compli-
cated but closer to the practical applications.

Since MPC [4] [5] can achieve optimal performance and
respond to various constraints, several excellent works ( [6]
[7][8][9], etc.) have been proposed by using MPC in the
AR&D missions. Firstly, coordinates in the orbital frame
are adopted to describe the relative position, by employing
the C-W or T-H equations. Consequently, the navigation in-
formation has to be transformed into the orbital frame, which
can cause the increase of computation eﬀorts and time-delay.
To address this drawback, the in-plane LOS dynamics was
used to control a spacecraft to rendezvous with an attitude
stable target in [10], by controlling the states which can be
measured directly.

Besides, the modeling of constraints are complex and
need linear approximation in existing papers. The distance
between two spacecrafts was calculated by the 2-norm of the
coordinates in [6], which caused the collision avoidance con-
straint was quadratic and cannot be taken into the optimiza-
tion index directly. The azimuth angle in [9] was calculated
by the trigonometric function’s operation. The entry cone
in [8]-[9] was linearized by an inscribed pyramid, the con-
straint was achieved by keeping the inner product of the posi-
tion vector and the normal external vectors of the pyramid’s
side is negative.

∗Corresponding author

dongting_li@126.com (D. Li)

ORCID(s):

Furthermore, since the states in LOS dynamics and Eu-
ler dynamics can be measured directly, to the best knowl-
edge of the authors, there is no paper adopt the 3-D LOS
dynamics and Euler attitude dynamics together to realize 6-
DOF pose tracking, by using MPC. However, since the non-
linear dynamics is coupling, the real time performance can
not be guaranteed if solving a coupling nonlinear optimaza-
tion problem in a standard nonlinear MPC. The existing ap-
proach to deal with this kind of model is to utilize approxi-
mate linear models, e.g., linearize the nonlinear model with
Taylor expansion at each sampling instant [11]; adopting the
multi-model predictive control [12]; using the neural net-
works to approximate the nonlinear characteristics [13][14].
Consider the linearization needs to calculate the covariance
matrix of the states in real time which will increase the com-
putation cost and time-delay, the PWA model is adopted in
[15] and [10]. However, there exist error between the pre-
dictions obtained by the approximate linear model and the
actual states of nonlinear dynamics, which can inﬂuence the
control performance of MPC.

Moreover, there exists singularity of angle states, which
means two diﬀerent values represent a same position physi-
cally. For instance, an angle state is set within [−𝜋, 𝜋] , −𝜋
and 𝜋 represent the same position physically but diﬀer by 2𝜋.
Consider a tracking problem, the desired states will jump
from 𝜋 to −𝜋 once it reaches the singular point 𝜋. However,
it is impossible for an input-constraint system to track the
mutation signal in an extraordinarily short time. The phe-
nomenon extremely limits the application of the LOS dy-
namics and Euler attitude dynamics in AR&D.

In this paper, the piecewise aﬃne (PWA) systems based
on the 3-D LOS dynamics and the Euler attitude dynamics
are ﬁrstly adopted together to realize AR&D with a tum-
bling target. To reduce the error between the predictions
made by the PWA model and the actual nonlinear states,
this paper provides a sampling-based PWA MPC strategy
to realize sampling the predictions which describe the ac-

D. Li et al.: Preprint submitted to Elsevier

Page 1 of 14

 
 
 
 
 
 
D. Li, R. Dong

tual states more accurately. Since the time-varying position
of the docking port is coupled with the target’s rotation, this
problem is also considered and solved in this study. In addi-
tion, based on the adopted united models, novel construction
strategy of constraints is proposed, which is more suitable for
practical space missions for the advantages of more concise
and without any approximation. Furthermore, a singularity-
free strategy is proposed, which can simultaneously real-
ize continuous pose tracking by crossing the singular points
smoothly.

The rest of this paper is arranged as follows. Section 2
provides the control model and the novel modeling of con-
straints. In section 3, the sampling-based PWA MPC is pro-
posed. Section 4 illustrates the AR&D and the singularity-
free strategies. In section 5, numerical simulations are pre-
sented to demonstrate the eﬀectiveness of proposed strate-
gies. Finally, the conclusions are given in section 6.

Figure 1: The coordinate frames

2. Problem formulation

In this paper, the control objective is to design a position
and an attitude MPC controller separately to track the pose
of the tumbling target’s docking port. Before introducing
the LOS dynamics and the Euler dynamics, the following
coordinate frames are deﬁned and illustrated in Fig. 1,

⎧
⎪
⎪
⎨
⎪
⎪
⎩

̈𝜌−𝜌 ̇𝜀2 −𝜌( ̇𝛽 − 𝜔)2 cos2 𝜀 = −𝜇
𝑅3
𝑡
𝜌 ̈𝜀+2 ̇𝜌 ̇𝜀+𝜌( ̇𝛽 −𝜔)2 sin 𝜀 cos 𝜀 = −3𝜇
𝑅3
𝑡
𝜌( ̈𝛽 − ̇𝑤) cos 𝜀+2 ̇𝜌( ̇𝛽 −𝜔) cos 𝜀−2𝜌 ̇𝜀( ̇𝛽 −𝜔) sin 𝜀

(𝜌−3𝜌 cos2 𝜀 sin2 𝛽)+𝑢𝜌,

𝜌 sin 𝜀 cos 𝜀 sin2 𝛽 +𝑢𝜀,

= 3𝜇
𝑅3
𝑡

𝜌 cos 𝜀 sin 𝛽 cos 𝛽 −𝑢𝛽,
(1)

• 

-axis points towards the Earth’s center, ̂𝑦𝑙

𝑙 = {𝑂𝑡, ̂𝑥𝑙, ̂𝑦𝑙, ̂𝑧𝑙}: the local-vertical-local-horizontal
(LVLH) frame, its origin is ﬁxed at the center of the target,
-axis is along
̂𝑧𝑙
the direction of the orbital angular rate, ̂𝑥𝑙
-axis completes
the triad.
𝑏𝑡 = {𝑂𝑡, ̂𝑥𝑏𝑡, ̂𝑦𝑏𝑡, ̂𝑧𝑏𝑡} and 
the body-ﬁxed coordinate frames of the target and the chaser.

𝑏𝑐 = {𝑂𝑐, ̂𝑥𝑏𝑐, ̂𝑦𝑐, ̂𝑧𝑏𝑐}:

• 

.

̂𝑦𝑠,

̂𝑥𝑠,

• 

, ̂𝑧𝑠

̂𝑧𝑠}:

the LOS frame, its origin is
-axis points towards the
-axis is along the direction of angular momen-
completes the triad. Denote
and its projection on
plane, 𝛽 as the azimuth angle between the projec-

𝑠 = {𝑂𝑡,
ﬁxed at the center of the target, ̂𝑥𝑠
chaser, ̂𝑦𝑠
tum of the rotation of ̂𝑥𝑠
𝜀 as the elevation angle between 𝑥𝑠
𝑂𝑡 ̂𝑥𝑙 ̂𝑧𝑙
tion and 𝑥𝑙
In this study, the 3-D LOS dynamics is described in frame

with 3 𝜀 -2 𝛽
, which is obtained by the Euler rotation of 
sequence. It should be noted that 𝜀 is set within (−𝜋∕2, 𝜋∕2)
to avoid the gimbal lock phenomenon. The attitude of tar-
get (chaser) is deﬁned by the Euler rotation from frame 
𝑙
to frame 
) with 3-2-1 sequence. Therefore, it is eas-
ier to solve the coupling between the position and attitude of
the tumbling target, by deﬁning the same rotation sequence
to 
from 

and from 

to 

(

𝑏𝑐

𝑏𝑡

.

𝑠

𝑙

𝑙

𝑠

𝑙

𝑏𝑡

2.1. Relative motion dynamics
2.1.1. 3-D Line-of-sight dynamics

The relative translation between the chaser and the target
formulated in the LOS frame is described as follows [16][17],

where 𝑅𝑡 = 𝑎(1 − 𝑒2)∕(1 + 𝑒 cos 𝑓 ) denotes the distance be-
tween the target and the Earth, 𝑎 denotes the semi-major axis
of the orbit plane, 𝑒 is the eccentricity, 𝑓 is the true anomaly,
𝜇 denots the gravity constant, 𝜔 =
de-
𝜇𝑎(1 − 𝑒2)∕𝑅2
𝑡
notes the time derivative of 𝑓 ,
is the
time derivation of 𝜔, 𝜌 is the LOS range, angle 𝜀 and 𝛽 are
shown in Fig 1. It should be noted that 𝜌, 𝜀, and 𝛽 can be
measured by the guidance system directly without any coor-
dinate transformation in practice.

̇𝜔 = −2𝜇𝑒𝑠𝑖𝑛𝑓 ∕𝑅3
𝑡

√

Denote 𝑥𝑥𝑥𝑝

= [𝜌, 𝜀, 𝛽,

̇𝜌, 𝜌 ̇𝜀, 𝜌 ̇𝛽]T, then (1) can be re-

duced to the following ﬁrst-order diﬀerential equation,

̇𝑥̇𝑥̇𝑥𝑝(𝑡) = 𝐴c
where 𝑢𝑢𝑢𝑝
scribed by

𝑝(𝑥𝑥𝑥𝑝)𝑥𝑥𝑥𝑝(𝑡) + 𝐵c
denotes the control input acting on the chaser, de-

𝑝(𝑥𝑥𝑥𝑝)𝑢𝑢𝑢𝑝(𝑡),

(2)

𝑢𝑢𝑢𝑝 = [𝑢𝑝,𝜌, 𝑢𝑝,𝜀, 𝑢𝑝,𝛽]T.
𝑝(𝑥𝑥𝑥𝑝) and 𝐵c
𝐴c
ces with

𝑝(𝑥𝑥𝑥𝑝) are time-varying state-dependent matri-

(3)

0
0

0

𝑎41
𝑎51
𝑎61

0
0

0

0

0

0

0
0

0

0

0

0

1
0

0

0
−𝑥𝑝5
𝑥𝑝1
2𝜔−

𝑥𝑝6
𝑥𝑝1

0
1
𝑥𝑝1
0
𝑥𝑝5
𝑥𝑝1
0

2 tan 𝑥𝑝2(−𝜔+

𝑥𝑝6
𝑥𝑝1

)

0
0
1
𝑥𝑝1
𝑎46
𝑎56
0

,

⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠

𝐴c

𝑝 =

⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
where

D. Li et al.: Preprint submitted to Elsevier

Page 2 of 14

𝑎41 = 𝜔2 cos2 𝑥𝑝2 − 𝜇

𝑅3 (1 − 3 cos2 𝑥𝑝2 sin2 𝑥𝑝3),

EarthTargetChaser𝑦𝑠    𝑥𝑠 𝑧𝑠 𝑧𝑏𝑐 𝑦𝑏𝑐 𝑥𝑏𝑐 𝑧𝑏𝑡 𝑦𝑏𝑡 𝑥𝑏𝑡 𝑥𝑙 𝑧𝑙 𝑦𝑙 β ε Orbit planeProjectionD. Li, R. Dong

Denote 𝑥𝑥𝑥𝑎 =

]T, then (4)-(7)
[𝜙, 𝜃, 𝜓, 𝜔𝑐,1, 𝜔𝑐,2, 𝜔𝑐,3
can be reduced to the following ﬁrst-order diﬀerential equa-
tion,

𝑎51 =

cos2 𝑥𝑝2,
)

cos 𝑥𝑝2 sin 𝑥𝑝2,

(

)

𝑎46 =
(

−2𝜔 +

−𝜔2 − 3 𝜇
(

𝑥𝑝6
𝑥𝑝1
𝑅3 sin2 𝑥𝑝3
)
𝑥𝑝6
𝑥𝑝1
𝑎61 = ̇𝜔 + 3𝜇

2𝜔 −

𝑎56 =

cos 𝑥𝑝2 sin 𝑥𝑝2,

𝑅3 sin 𝑥𝑝3 cos 𝑥𝑝3,

and

𝐵c

𝑝 =

0
0 0
0
0 0
0
0 0
0
1 0
0
0 1
0 0 − 1

cos 𝑥𝑝2

⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝

.

⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠

2.1.2. Euler attitude dynamics

The attitude kinematics of the chaser is described by

̇𝜙𝑐
̇𝜃𝑐
̇𝜓𝑐

⎛
⎜
⎜
⎝

⎞
⎟
⎟
⎠

=

1
𝑐(𝜃)

𝑐(𝜃)
0
0

⎛
⎜
⎜
⎝

𝑠(𝜙)𝑠(𝜃)
𝑐(𝜙)𝑠(𝜃)
𝑐(𝜙)𝑐(𝜃) −𝑠(𝜙)𝑐(𝜃)

𝑠(𝜙)

𝑐(𝜙)

𝜔𝑐,1
𝜔𝑐,2
𝜔𝑐,3

⎞
⎟
⎟
⎠

⎛
⎜
⎜
⎝

,

⎞
⎟
⎟
⎠
(4)

where 𝑠(⋅) ≜ sin(⋅), 𝑐(⋅) ≜ cos(⋅); 𝜙𝑐(𝑡), 𝜃𝑐(𝑡), and 𝜓𝑐(𝑡) (rad)
denote the chaser’s roll, pitch and yaw angles, respectively;
𝜔𝑐,1(𝑡), 𝜔𝑐,2(𝑡), and 𝜔𝑐,3(𝑡) (rad∕s) denote the chaser’s an-
gular velocities. To avoid the gimbal lock phenomenon, the
pitch angle of both the chaser and the target are set within
(−𝜋∕2, 𝜋∕2), roll and yaw angles are set within [−𝜋, 𝜋].
The attitude dynamics is formulated as follows,

(5)

𝐽1 ̇𝑤𝑐,1 = (𝐽2 − 𝐽3)𝜔𝑐,2𝜔𝑐,3 + 𝑀1,
𝐽2 ̇𝑤𝑐,2 = (𝐽3 − 𝐽1)𝜔𝑐,1𝜔𝑐,3 + 𝑀2,
𝐽3 ̇𝑤𝑐,3 = (𝐽1 − 𝐽2)𝜔𝑐,1𝜔𝑐,2 + 𝑀3,

⎧
⎪
⎨
⎪
⎩
where 𝐽1
of the chaser, 𝑀1

, 𝐽2

, and 𝐽3

denote the principal moments of inertia
, and 𝑀3

are the input moments.

, 𝑀2

Consider the reaction wheels equipped along each prin-
cipal body axis as the actuators, the relation between the
wheels’ dynamics and the moments of the chaser is deﬁned
as

𝑀1 = − ̃𝐽1( ̇𝜔𝑐,1 + ̈𝛼1 + ̇𝛼3𝜔𝑐,2 − ̇𝛼2𝜔𝑐,3) ⋍ − ̃𝐽1( ̇𝜔𝑐,1 + ̈𝛼1),
⎧
⎪
𝑀2 = − ̃𝐽2( ̇𝜔𝑐,2 + ̈𝛼2 + ̇𝛼1𝜔𝑐,3 − ̇𝛼3𝜔𝑐,1) ⋍ − ̃𝐽2( ̇𝜔𝑐,2 + ̈𝛼2),
⎨
𝑀3 = − ̃𝐽3( ̇𝜔𝑐,3 + ̈𝛼3 + ̇𝛼2𝜔𝑐,1 − ̇𝛼1𝜔𝑐,2) ⋍ − ̃𝐽3( ̇𝜔𝑐,3 + ̈𝛼3),
⎪
⎩
(6)

, ̃𝐽2
, ̇𝛼2

, and ̃𝐽3
, and ̇𝛼3

where ̃𝐽1
denote the moments of inertia of the
denote the speed of wheels. Consider
wheels, ̇𝛼1
the following linearized relationship between the chaser’s
angular velocities and the wheels’ acceleration,

̇𝑥𝑥𝑥𝑎(𝑡) = 𝐴c
where 𝑢𝑢𝑢𝑎
scribed by

𝑎(𝑥𝑥𝑥𝑎)𝑥𝑥𝑥𝑎(𝑡) + 𝐵c
denotes the control input acting on the chaser, de-

𝑎𝑢𝑢𝑢𝑎(𝑡),

(8)

[𝑢𝑎,𝜙, 𝑢𝑎,𝜃, 𝑢𝑎,𝜓

𝑢𝑢𝑢𝑎 =
𝑎(𝑥𝑥𝑥𝑎) is a time-varying state-dependent matrix with
𝐴c

]T .

(9)

𝐴c

𝑎 =

and

𝐵c

𝑎 =

0

0
0

0

0

0

0

0
0

0

0

0

0

0
0

0

0

0

( ̃𝐽 2
1

̃𝐽1)

0
0
0
−𝐽1
2
𝐽1
0

0

⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝

⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝

1

0
0

0

0
𝑥5(𝐽1−𝐽2)
𝐽3

0
0
0

0

̃𝐽2)

( ̃𝐽 2
2

−𝐽2
2
𝐽2
0

𝑠(𝑥1)𝑠(𝑥2)
𝑐(𝑥2)
𝑐(𝑥1)
𝑠(𝑥1)
𝑐(𝑥2)
𝑥6(𝐽2−𝐽3)
𝐽1
0

0

0
0
0

0

0

̃𝐽3)

( ̃𝐽 2
3

−𝐽3
2
𝐽3

𝑐(𝑥1)𝑠(𝑥2)
𝑐(𝑥2)
−𝑠(𝑥1)
𝑐(𝑥1)
𝑐(𝑥2)
0
𝑥4(𝐽3−𝐽1)
𝐽2
0

,

⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠

.

⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠

2.2. Novel construction strategy of constraints

By employing the 3-D LOS dynamics and Euler dynam-
ics in this study, an advantage is the constraints can be put
on the states directly without any transformation, which have
more practical application signiﬁcance.

2.2.1. Control input constraints

In practical space missions, the torque generated by the
actuators are limited. The constraints of the thrusters and the
reaction wheels are described by

,

|𝑢𝑢𝑢𝑝| ⩽ 𝑢𝑢𝑢max
and

𝑝

(10)

,

and 𝑢𝑢𝑢𝑎

|𝑢𝑢𝑢𝑎| ⩽ 𝑢𝑢𝑢max
𝑎
,
= [𝑢max
where 𝑢𝑢𝑢𝑝
𝑝,𝜌
= [𝑢max
𝑎,𝜓 ]T denote the
𝑝,𝜀 , 𝑢max
𝑢max
maximum control force of the thrusters and reaction wheels,
respectively.

are described in (3) and (9), 𝑢𝑢𝑢max
𝑎,𝜙 , 𝑢max

𝑝,𝛽 ]T and 𝑢𝑢𝑢max

𝑎,𝜃 , 𝑢max

(11)

𝑎

𝑝

2.2.2. Collision avoidance constraint

For safe docking, collision avoidance is realized by main-
taining the chaser outside a keep-out zone around the tum-
bling target. The keep-out zone is described by a sphere with
a ﬁxed radius,

̇𝜔𝑐,𝑖 = −

̃𝐽𝑖
𝐽𝑖

̈𝛼𝑖, 𝑖 = 1, 2, 3.

D. Li et al.: Preprint submitted to Elsevier

(7)

𝜌 ⩾ 𝑟safe,

(12)

Page 3 of 14

D. Li, R. Dong

where 𝜌 is the LOS range, 𝑟safe
of the keep-out sphere.

denotes the minimum radius

2.2.3. Entry cone constraints

𝑏𝑡

-axis in 

As shown in Fig. 2(a), the chaser should be kept in an ap-
proaching cone around the target’s docking port during the
ﬁnal phase of docking. In this paper, we give the follow-
ing assumptions: (1) the target’s docking port is ﬁxed at the
; (2) the attitude of the target is described by
̂𝑥𝑏𝑡
Euler rotation from 
with 3-2-1 sequence; (3) half
to 
𝑏𝑡
. By deﬁning the same rotation
of the entry cone angle is 𝛾e
sequence from 
, it can be drawn
and from 
that the desired elevation angle is equal to the target’s pitch
angle, and the desired azimuth angle is the equal to the tar-
get’s yaw angle. Then the entry cone constraint is described
by

to 

to 

𝑏𝑡

𝑠

𝑙

𝑙

𝑙

,

,

𝜃𝑡(𝑡) − 𝛾e ⩽ 𝜀 ⩽ 𝜃𝑡(𝑡) + 𝛾e
−𝜋∕2 < 𝜀 < 𝜋∕2,
−𝜓𝑡(𝑡) − 𝛾e ⩽ 𝛽 ⩽ −𝜓𝑡(𝑡) + 𝛾e
−𝜋 ⩽ 𝛽 ⩽ 𝜋,

⎧
⎪
⎨
⎪
⎩
where 𝜀 and 𝛽 have been shown in Fig. 1. The above rela-
tions can be rewritten as
{ 𝜀min(𝑡) < 𝜀 < 𝜀max(𝑡),
𝛽min(𝑡) ⩽ 𝛽 ⩽ 𝛽max(𝑡),

(14)

(13)

where 𝜀min(𝑡) = max{−𝜋∕2, 𝜃𝑡(𝑡)−𝛾e}, 𝜀max(𝑡) = min{𝜋∕2,
𝜃𝑡(𝑡) + 𝛾e}, 𝛽min(𝑡) = max{−𝜋, −𝜓𝑡(𝑡) − 𝛾e}, and 𝛽max(𝑡) =
min{𝜋, −𝜓𝑡(𝑡) + 𝛾e} are time-varying fuctions.

(a) Entry cone

(b) Field of view

Figure 2: Entry cone and the ﬁeld of view

2.2.4. Field of view constraint

As shown in Fig. 2(b), for an active chaser spacecraft
equipped with vision sensors, it should be guaranteed that
the vision sensors can obtain the information of the target.
The ﬁeld of view constraint is realized by limiting the atti-
tude angles of the chaser on the condition of accurate attitude
tracking. Consider the coupling, the ﬁeld of view constraint
is expressed as follows,

𝑐

(𝑡),
(𝑡) < 𝜃𝑐 < 𝜃max
(𝑡) ⩽ 𝜓𝑐 ⩽ 𝜓 max
𝑐

−𝜋 ⩽ 𝜙𝑐 ⩽ 𝜋,
𝜃min
𝑐
𝜓 min
𝑐

⎧
⎪
⎨
⎪
⎩
where 𝜙𝑐, 𝜃𝑐, 𝜓𝑐
= max{−𝜋∕2, 𝜀(𝑡) − 𝛾f }, 𝜃max

(𝑡),

𝑐

are the attitude angles of the chaser, 𝜃min

(𝑡)
(𝑡) = min{𝜋∕2, 𝜀(𝑡) + 𝛾f },

𝑐

(15)

𝑐

(𝑡) = max{−𝜋, 𝛽(𝑡) − 𝛾f }, 𝜓 max
𝜓 min
(𝑡) = min{𝜋, 𝛽(𝑡) +
𝑐
𝛾f } are time-varying functions, and 𝛾f
denotes half of the
angle of the ﬁeld of view. For understanding convenience,
the constraint of the pitch angle 𝜃𝑐
is taken as an example to
illustrate detailed. As shown in Fig. 3, the following relation
should be guaranteed, i.e.,

𝜃𝑐 − 𝛾f ⩽ 𝜀(𝑡) ⩽ 𝜃𝑐 + 𝛾f .

The above relation can be rewritten as

𝜀(𝑡) − 𝛾f ⩽ 𝜃𝑐 ⩽ 𝜀(𝑡) + 𝛾f .

The construction of constraint on 𝜓𝑐
process.

is similar to the above

Figure 3: Field of view constraint on the pitch angle

From the above process of modeling, the novel construc-
tions in this paper are more concise and without any lin-
ear approximation. Since the constraints are imposed on the
states directly, the on-board computational eﬀorts and time-
delay are reduced without losing any control precision.

3. Sampling-based PWA model predictive

control
Model predictive control (MPC) is widely employed for
achieving optimal performance and treating various constraints.
At each sampling instant, the prediction is made by the plant
model, the basic idea of MPC is to take the prediction into
a constrained optimization index, converting the index to a
convex quadratic programming (QP) problem and minimiz-
ing it online to obtain a sequence of control input. Subse-
quently, only the control input related to the sampling instant
is applied, according to the receding horizon strategy.

To apply the above idea in a nonlinear system, one exist-
ing practice is to convert the continuous nonlinear model to
a pseudo linear form with the state matrix and control input
matrix are state-dependent, discretize it at each sampling in-
stant to get a linear time-invariant (LTI) model correspond-
ing to each interval of states, the set of discrete models is
the piecewise aﬃne (PWA) model. By this way, we can

D. Li et al.: Preprint submitted to Elsevier

Page 4 of 14

TargetChaser𝛾𝑒 TargetChaser𝛾𝑓 TargetChaser𝜀(𝑡1) 𝜃𝑡 Orbit plane𝛾𝑓 𝜃𝑐 𝜃𝑐+𝛾𝑓  𝜃𝑐−𝛾𝑓  𝜀(𝑡2) D. Li, R. Dong

utilize linear models corresponding to diﬀernet interval of
states to approximate the nonlinear model, then the control is
completed by a standard MPC. However, the error between
the predictions made by the approximate linear model and
the actual states cannot be neglected, especially with the in-
crease of prediction horizon. In this study, a method of re-
ducing this error is provided by an additional sampling con-
trol input. By determining the sampling direction from the
actual nonlinear model and adjusting the value of sampling
input, the proposed method can sample the predictions in the
closer neighborhood of the actual states.

3.1. Basic idea

The general process of nonlinear MPC based on the lin-
ear approximate model is given in Algorithm 1. Obviously,
the control performance depends on the accuracy of the pre-
dictions describing the actual states. Denote the 𝑛 step ahead
prediction obtained by the linear approximate model at 𝑡𝑘+𝑛
as 𝑥l(𝑘 + 𝑛) (𝑛 = 1, 2, ⋯), and the actual state as 𝑥(𝑘 + 1),
there exist error between 𝑥(𝑘+𝑛) and 𝑥l(𝑘+𝑛). Consider the
relation between the linear approximate model and the actual
nonlinear model at each sampling state, even if the speciﬁc
value of the error is unknown, the symbol of the error can
be obtained from the information of the nonlinear model.
Therefore, an addition sampling control input is introduced
as follows,

(16)

𝑢s = 𝑤ssign( ̈𝑥) |𝑢(𝑘)| rand(1),
where 𝑤s ∈ [0, 1] is the sampling factor to control the
value of sampling input, sign( ̈𝑥) = ±1 is an auxiliary item
of the actual nonlinear model to control the sampling direc-
, rand(⋅)
tion, 𝑢(𝑘) denotes the predictive control input at 𝑥𝑘
is a random value. Since the optimal predictions made by
the linear approximate model that describe the actual states
are unknown, the random value’s eﬀect is to reduce the mean
error of all predictions. If the model is concave at 𝑥(𝑘), the
predictive state 𝑥l(𝑘+1) is lower than 𝑥(𝑘+1) , the positive 𝑢𝑠
can help to decrease the error. On the contrary, if the model
is convex at 𝑥(𝑘), the predictive state 𝑥l(𝑘 + 1) is larger than
𝑥(𝑘 + 1), the negative 𝑢𝑠
can help to decrease the error. If
adopting the sampling control input at each sampling instant,
the proposed method can realize sampling the predictions in
the closer neighborhood of the actual nonlinear states.
Remark 1. Both the PWA model and linearized model (e.g.,
Taylor expansion) are belong to the way of approximating
nonlinear characteristics with linear model, it should be noted
that the approximating accuracy of Taylor expansion is higher
than the employed PWA model in this study. However, con-
sider the on-board computation eﬀorts and real time per-
formance, it is enough for the PWA model to complete the
AR&D well. It should also be noted that the proposed strat-
egy is also applicable to cases of employing the model of
Taylor expansion, if the computaion cost are not considered
ﬁrstly.

Algorithm 1 General process of MPC
1: Denote the initial instant as 𝑡𝑘
2: Make the prediction:

, the initial state as 𝑥(𝑘).

forforfor 𝑖 = 1 ∶ 𝑁𝑃

endendend

update the linear approximate model 𝑡𝑘+𝑖−1
compute the prediction 𝑥(𝑘 + 𝑖|𝑘),

,

3: Optimization:

take the predictions [𝑥(𝑘 + 1), ⋯ , 𝑥(𝑘 + 𝑁𝑝)]T
into the following optimization index to compute
[𝑢(𝑘), ⋯ , 𝑢(𝑘 + 𝑁𝑐 − 1)]T, with the constraints are sat-
isﬁed,

𝑁𝑝
∑

𝐽 =

𝑖=1

[𝑥(𝑘 + 𝑖|𝑘) − 𝑥d(𝑘 + 𝑖)]T𝑄𝑘[𝑥(𝑘 + 𝑖|𝑖) − 𝑥d(𝑘+
𝑁𝑐 −1
∑

𝑢(𝑘 + 𝑖)T𝑃𝑘𝑢(𝑘 + 𝑖).

𝑖)]+

𝑖=0
4: Receding horizon control:

adopt the ﬁrst element 𝑢(𝑘) as the actual control input,
compute actual 𝑥(𝑘 + 1).

5: Repeat step 2-4 at the next instants.
- prediction horizon; 𝑁𝑐
- weight matrices; 𝑥d

Note:Note:Note: 𝑁𝑝
and 𝑃𝑘
𝑄𝑘

- control horizon;

- the desired state.

corresponding to the state at 𝑡𝑘
is obtained by helding the
system matrix and the control input matrix are constant dur-
ing each sampling interval.

Denote 𝑥𝑥𝑥l

𝑝(𝑘 + 1) as the one step ahead prediction of po-

sition state made by the PWA model,

(17)

𝑒𝐴c

𝑥𝑥𝑥l
𝑝(𝑘 + 1) = 𝐴𝑝(𝑘)𝑥𝑥𝑥𝑝(𝑘) + 𝐵𝑝(𝑘)𝑢𝑢𝑢𝑝(𝑘),
where 𝐴𝑝(𝑘) = 𝑒𝐴c
𝑝𝑇𝑠, 𝐵𝑝(𝑘) = (∫ 𝑇𝑠
is
the sampling interval. In view of the sampling-based idea in
𝑝(𝑘 + 1) is obtained by
Section 3.1, the sampling prediction 𝑥𝑥𝑥s
applying the addition sampling input 𝑢𝑢𝑢s,p
𝑥𝑥𝑥s
𝑝(𝑘 + 1) = 𝐴𝑝(𝑘)𝑥𝑥𝑥𝑝(𝑘) + 𝐵𝑝(𝑘)𝑢𝑢𝑢𝑝(𝑘) + 𝐵𝑝(𝑘)𝑢𝑢𝑢s,p(𝑘),
where

𝑝𝜏 𝑑𝜏)𝐵c
𝑝

, and 𝑇𝑠

(18)

0

,

𝑢𝑢𝑢s,p(𝑘) = [𝑢s,𝜌(𝑘), 𝑢s,𝜀(𝑘), 𝑢s,𝛽(𝑘)]T,
with

(19)

𝑢𝑝,𝜌(𝑘) |
𝑢s,𝜌(𝑘) = 𝑤s,𝜌sign[ ̈𝜌(𝑘)] |
|
|
|
|
𝑢𝑝,𝜀(𝑘) |
𝑢s,𝜀(𝑘) = 𝑤s,𝜀sign[ ̈𝜀(𝑘)] |
|
|
|
|
𝑢s,𝛽(𝑘) = 𝑤s,𝛽sign[ ̈𝛽(𝑘)] |
𝑢𝑝,𝛽(𝑘) |
|
|
|
|

⎧
⎪
⎨
⎪
⎩
Combining (18) and (19), yields

rand(1),
rand(1),
rand(1).

𝑥𝑥𝑥s
𝑝(𝑘 + 1) = 𝐴𝑝(𝑘)𝑥𝑥𝑥𝑝(𝑘) + 𝐵𝑝(𝑘)𝑢𝑢𝑢𝑝(𝑘) + 𝐵𝑝(𝑘)𝑊𝑝(𝑘)𝑢𝑢𝑢p(𝑘),
(20)

where

3.2. Controller design

Consider the continous LOS dynamics (2), and discrete
(2) at each sampling instant, the approximate PWA model

𝑊𝑝(𝑘) = rand(1)

𝑤s,𝜌
0
0

⎛
⎜
⎜
⎝

0
𝑤s,𝜀
0

0
0
𝑤s,𝛽

⎞
⎟
⎟
⎠

D. Li et al.: Preprint submitted to Elsevier

Page 5 of 14

sign[ ̈𝜌(𝑘)]
0
0

0
sign[ ̈𝜀(𝑘)]
0

sign[𝑢𝑝,𝜌(𝑘)]
0
0

0
sign[𝑢𝑝,𝜀(𝑘)]
0

0
0
sign[ ̈𝛽(𝑘)]

⎞
⎟
⎟
⎠
0
0
sign[𝑢𝑝,𝛽(𝑘)]

⋅

⋅

⎛
⎜
⎜
⎝

⎛
⎜
⎜
⎝

D. Li, R. Dong

Rewritting (24) in a compact form,

𝑢𝑢𝑢∗
𝑝(𝑘) = Λ𝑢𝑢𝑢𝑝(𝑘 − 1) + ΓΔ̃𝑢𝑢𝑢𝑝(𝑘),

(25)

⎞
⎟
⎟
⎠

(21)

𝑖=0 Δ𝑢𝑢𝑢𝑝(𝑘+𝑖)|𝑖⟩ ∈ ℝ3𝑁𝑐 , Λ = ∑𝑁𝑐

where Δ̃𝑢𝑢𝑢𝑝(𝑘) = ∑𝑁𝑐 −1
𝐼3|𝑖⟩
∈ ℝ3𝑁𝑐 ×3, and Γ ∈ ℝ3𝑁𝑐 ×3𝑁𝑐 is a lower triangular matrix
with Γ(𝑖, 𝑗) = 𝐼3 (𝑖 > 𝑗). By adopting the control horizon as
𝑁𝑐

, rewritting (23) as

𝑖=1

where sign[𝑢𝑝,𝜌(𝑘)], sign[𝑢𝑝,𝜀(𝑘)], sign[𝑢𝑝,𝛽(𝑘)] are obtained
from the relation between the current states and the next de-
sired states. If the next desired state is larger than the cur-
rent state, then the value of the symbolic function is 1, con-
versely, the symbol is −1.

By introducing an augmented vector 𝑥𝑥𝑥∗
ahead predictions of 𝑥𝑥𝑥𝑝(𝑘) can be described as

𝑝(𝑘) ∈ ℝ6𝑁𝑝, the

𝑁𝑝

𝑝(𝑘) = [𝑥𝑥𝑥s
𝑥𝑥𝑥∗
𝑝

T(𝑘 + 1|𝑘), 𝑥𝑥𝑥s

𝑝

T(𝑘 + 2|𝑘), ⋯ , 𝑥𝑥𝑥s

𝑝

T(𝑘 + 𝑁𝑝|𝑘)]T.
(22)

By iteration, rewritting the above predictions in a compact
form, i.e.,

𝑝(𝑘) = 𝐴∗
𝑥𝑥𝑥∗

𝑝𝑥𝑥𝑥𝑝(𝑘) + ̄𝐵∗

𝑝𝑢𝑢𝑢∗

𝑝 + ̄𝐵∗

𝑝

̄𝑊 ∗

𝑝 (𝑘)̄𝑢𝑢𝑢∗
p,

(23)

𝑁𝑝−1
where ̄𝑊 ∗
𝑖=0
direct sum notation), 𝑁𝑝

𝑝 (𝑘) = ⊕

𝑊𝑝(𝑘 + 𝑖) ∈ ℝ3𝑁𝑝×3𝑁𝑝 (⊕ is the
is the prediction horizon,

𝐴𝑝(𝑘)
𝐴𝑝(𝑘 + 1)𝐴𝑝(𝑘)
⋮
𝐴𝑝(𝑘 + 𝑖)

∏𝑁𝑝−1
𝑖=0

⎞
⎟
⎟
⎟
⎟
⎠

∈ ℝ6𝑁𝑝×6,

𝐵𝑝(𝑘)
𝐴𝑝(𝑘+1)𝐵𝑝(𝑘)
⋮

⋯
⋱
⋱
𝐴𝑝(𝑘+𝑖)𝐵𝑝(𝑘) ⋯ 𝐵𝑝(𝑘+𝑁𝑝 −1)

0
⋮
⋮

⎞
⎟
⎟
⎟
⎟
⎠
∈ ℝ6𝑁𝑝×3𝑁𝑝,

∏𝑁𝑝−1
𝑖=1

⎛
⎜
⎜
⎜
⎜
⎝

⎛
⎜
⎜
⎜
⎜
⎝

𝐴∗

𝑝(𝑘) =

̄𝐵∗

𝑝 (𝑘) =

and

p = [𝑢𝑢𝑢𝑝(𝑘)T, 𝑢𝑢𝑢𝑝(𝑘 + 1)T, ⋯ , 𝑢𝑢𝑢𝑝(𝑘 + 𝑁𝑝 − 1)T] ∈ ℝ3𝑁𝑝.
̄𝑢𝑢𝑢∗
However, in practical space missions, it will occupy too much
control inputs
on-board computing resource if adopting 𝑁𝑝
to predict. In existing papers, the control horizon 𝑁𝑐
is al-
ways lower than 𝑁𝑝

Consider the response of the system is smoother if con-
trolling the increment of the input rather than the total in-
put [10]. Deﬁne the recurive equation of 𝑁𝑐
control inputs
𝑝 ∈ ℝ3𝑁𝑐 as
𝑢𝑢𝑢∗

.

⎧
𝑢𝑢𝑢𝑝(𝑘) = Δ𝑢𝑢𝑢𝑝(𝑘) + 𝑢𝑢𝑢𝑝(𝑘 − 1),
⎪
𝑢𝑢𝑢𝑝(𝑘 + 1) = Δ𝑢𝑢𝑢𝑝(𝑘 + 1) + Δ𝑢𝑢𝑢𝑝(𝑘) + 𝑢𝑢𝑢𝑝(𝑘 − 1),
⎪
⎨
⎪
𝑢𝑢𝑢𝑝(𝑘 + 𝑁𝑐 − 1) = ∑𝑁𝑐 −1
⎪
⎩

⋮
𝑖=0 Δ𝑢𝑢𝑢𝑝(𝑘 + 𝑖) + 𝑢𝑢𝑢𝑝(𝑘 − 1).

(24)

𝑝(𝑘) = 𝐴∗
𝑥𝑥𝑥∗

𝑝𝑥𝑥𝑥𝑝(𝑘) + 𝐵∗

𝑝 𝑊 ∗

𝑝 𝑢𝑢𝑢∗

𝑝 + 𝐵∗

𝑝𝑢𝑢𝑢∗
𝑝,

(26)

where 𝐵∗
, 𝑊 ∗
𝑝
𝑊𝑝(𝑘 + 𝑖). Substituting (25) into (26), yields

columns of ̄𝐵∗
𝑝

is the ﬁrst 3𝑁𝑐

𝑝 (𝑘) = ⊕𝑁𝑐 −1

𝑖=0

𝑝(𝑘) = 𝐴∗
𝑥𝑥𝑥∗

𝑝𝑥𝑥𝑥𝑝(𝑘)+(𝐵∗

𝑝+𝐵∗

𝑝 𝑊 ∗

𝑝 )Λ𝑢𝑢𝑢𝑝(𝑘−1)+(𝐵∗

𝑝+𝐵∗

𝑝 𝑊 ∗

𝑝 )ΓΔ̃𝑢𝑢𝑢𝑝.
(27)

Deﬁne the optimazation index as

min 𝐽 (𝑘) =

𝑁𝑝
∑

𝑖=1

‖𝑥𝑥𝑥𝑝(𝑘+𝑖)−𝑥𝑥𝑥𝑑,𝑝(𝑘+𝑖)‖

2
𝑄+

𝑁𝑐 −1
∑

𝑖=0

‖Δ𝑢𝑢𝑢𝑝(𝑘+𝑖)‖

2
𝑃 ,

(28)

where 𝑥𝑥𝑥𝑑,𝑝
denotes the desired state, 𝑃 and 𝑄 are the positive-
deﬁnite and semi-positive deﬁnite weight matrices, respec-
tively. Converting the above optimation index to the com-
pact form, i.e.,

min 𝐽 𝑝(𝑘) = [𝑥𝑥𝑥∗

𝑝(𝑘)−𝑥𝑥𝑥∗

d,p(𝑘)]𝑇 ̃𝑄[𝑥𝑥𝑥∗

𝑝(𝑘)−𝑥𝑥𝑥∗

d,p(𝑘)]+Δ̃𝑢𝑢𝑢𝑇

𝑝

̃𝑃 Δ̃𝑢𝑢𝑢𝑝,
(29)

where 𝑥𝑥𝑥∗

d,p(𝑘) = ∑𝑁𝑝
𝑖=1
desired states, ̃𝑄 = ⊕

Deﬁne

𝑥𝑥𝑥d,p(𝑘 + 𝑖)|𝑖⟩
𝑁𝑝
𝑖=1

𝑄 and ̃𝑃 = ⊕𝑁𝑐
𝑖=1

𝑃 .

denotes the augmented

𝐸𝐸𝐸𝑝 = 𝑥𝑥𝑥∗

d,p(𝑘) − 𝐴∗

𝑝𝑥𝑥𝑥𝑝(𝑘) − (𝐵∗

𝑝 + 𝐵∗

𝑝 𝑊 ∗

𝑝 )Λ𝑢𝑢𝑢𝑝(𝑘 − 1),

(30)

and substitute (30) into (29), yields

min𝐽𝑝(𝑘) = [(𝐵∗
−𝐸𝐸𝐸𝑝
Δ̃𝑢𝑢𝑢𝑇

𝑝 +𝐵∗
]

𝑝 )ΓΔ̃𝑢𝑢𝑢𝑝 −𝐸𝐸𝐸𝑝]𝑇 ̃𝑄
𝑝 𝑊 ∗
̃𝑃 Δ̃𝑢𝑢𝑢𝑝
+Δ̃𝑢𝑢𝑢𝑇
𝑝
𝑝 𝐻𝑝Δ̃𝑢𝑢𝑢𝑝 + 𝑓𝑓𝑓 𝑇

𝑝 Δ̃𝑢𝑢𝑢𝑇

𝑝 + 𝐸𝐸𝐸𝑇
𝑝

= 1
2

[

(𝐵∗

𝑝 +𝐵∗

𝑝 𝑊 ∗

𝑝 )ΓΔ̃𝑢𝑢𝑢𝑝

̃𝑄𝐸𝐸𝐸𝑝,

(31)

𝑝 𝑊 ∗

𝑝 + 𝐵∗

𝑝 )Γ + ̃𝑃 ] and

𝑝 + 𝐵∗
𝑝 𝑊 ∗

𝑝 𝑊 ∗
𝑝 )T ̃𝑄𝐸𝐸𝐸𝑝

where 𝐻𝑝 = 2[Γ𝑇 (𝐵∗
𝑝 + 𝐵∗
𝑓𝑓𝑓 𝑝 = −2ΓT(𝐵∗

𝑝 )T ̃𝑄(𝐵∗
.
The process of applying the sampling-based PWA MPC
to the attitude dynamics is similar to the above process. Con-
sider the attitude dynamics (8), introduce an augmented state
vector 𝑥𝑥𝑥∗
ahead prediction
states of 𝑥𝑥𝑥𝑎(𝑘). According to the iterative relation, rewrite
the prediction states 𝑥𝑥𝑥∗

𝑎(𝑘) ∈ ℝ6𝑁𝑝, which represent 𝑁𝑝

𝑎(𝑘) in a compact form such that,
𝑎 𝑊 ∗

𝑎 + 𝐵∗

𝑎𝑢𝑢𝑢∗
𝑎,

𝑎 𝑢𝑢𝑢∗

(32)

𝑎(𝑘) = 𝐴∗
𝑥𝑥𝑥∗

𝑎𝑥𝑥𝑥𝑎(𝑘) + 𝐵∗

D. Li et al.: Preprint submitted to Elsevier

Page 6 of 14

D. Li, R. Dong

̃𝑟𝑟𝑟safe = ∑𝑁𝑝
described in (12).

𝑖=1

𝑟𝑟𝑟safe|𝑖⟩ ∈ ℝ𝑁𝑝 is the augmented vector of 𝑟𝑟𝑟safe

Substituting (27) into (39), yields

𝐺𝑎Δ̃𝑢𝑢𝑢𝑝 ⩽ 𝑔𝑔𝑔𝑎,

where

𝐺𝑎 = − ̃𝑓𝑓𝑓 1(𝐵∗
𝑝 + 𝐵∗
𝑔𝑔𝑔𝑎 = −̃𝑟𝑟𝑟safe + ̃𝑓𝑓𝑓 1𝐴∗

𝑝 𝑊 ∗
𝑝 )Γ,
𝑝𝑥𝑥𝑥𝑝(𝑘)+ ̃𝑓𝑓𝑓 1(𝐵∗

𝑝 +𝐵∗

𝑝 𝑊 ∗

𝑝 )Λ𝑢𝑢𝑢𝑝(𝑘−1).

3.3.3. Entry Cone Constraint

The entry cone constraint is described by

̃𝑄𝐸𝐸𝐸𝑎,

(35)

̃𝜀𝜀𝜀max(𝑘) ⩽ ̃𝑓𝑓𝑓 2𝑥𝑥𝑥∗

𝑝(𝑘) ⩽ ̃𝜀𝜀𝜀max(𝑘),

(40)

(41)

(42)

(𝑘) =

(43)

and

̃𝛽𝛽𝛽max

(𝑘) ⩽ ̃𝑓𝑓𝑓 3𝑥𝑥𝑥∗

𝑝(𝑘) ⩽ ̃𝛽𝛽𝛽max

(𝑘),

with 𝑓𝑓𝑓 2 = [0, 1, 0, 0, 0, 0],
with 𝑓𝑓𝑓 3 = [0, 0, 1, 0, 0, 0]. ̃𝜀𝜀𝜀min(𝑘) =
is the augmented vector of 𝜀min(𝑘) shown

⊗ 𝑓𝑓𝑓 2

where ̃𝑓𝑓𝑓 2 = 𝐸𝑁𝑝
̃𝑓𝑓𝑓 3 = 𝐸𝑁𝑝
⊗ 𝑓𝑓𝑓 3
∑𝑁𝑝
𝜀min(𝑘+𝑖)|𝑖⟩
𝑖=1
in (15). Similarly, ̃𝜀𝜀𝜀max(𝑘) = ∑𝑁𝑝
𝑖=1
∑𝑁𝑝
(𝑘) = ∑𝑁𝑝
𝑖=1
𝑖=1

𝛽min(𝑘 + 𝑖)|𝑖⟩

, ̃𝛽𝛽𝛽max
Substituting (27) into (41) and (42), i.e.,

𝜀max(𝑘 + 𝑖)|𝑖⟩

, ̃𝛽𝛽𝛽min
.
𝛽max(𝑘 + 𝑖)|𝑖⟩

𝐺𝑒1Δ̃𝑢𝑢𝑢𝑝 ⩽ 𝑔𝑔𝑔𝑒1,

where

𝐺𝑒1 =

𝑔𝑔𝑔𝑒1 =

and

)

( ̃𝑓𝑓𝑓 2(𝐵∗
𝑝 +𝐵∗
− ̃𝑓𝑓𝑓 2(𝐵∗
𝑝 +𝐵∗
( ̃𝜀𝜀𝜀max(𝑘)− ̃𝑓𝑓𝑓 2[𝐴∗
−̃𝜀𝜀𝜀min(𝑘)+ ̃𝑓𝑓𝑓 2[𝐴∗

𝑝 𝑊 ∗
𝑝 )Γ
𝑝 𝑊 ∗
𝑝 )Γ
𝑝𝑥𝑥𝑥𝑝(𝑘)+(𝐵∗
𝑝𝑥𝑥𝑥𝑝(𝑘)+(𝐵∗

,

𝑝 +𝐵∗
𝑝 +𝐵∗

𝑝 𝑊 ∗
𝑝 𝑊 ∗

𝑝 )Λ𝑢𝑢𝑢𝑝(𝑘−1)]
𝑝 )Λ𝑢𝑢𝑢𝑝(𝑘−1)]

)

.

where the form of 𝐴∗
𝑎
𝑊 ∗
𝑝

, and 𝑊 ∗
, 𝐵∗
𝑎
𝑝
in (26). Consider the following optimazation index,

are similar to 𝐴∗
𝑝

, 𝐵∗
𝑎

and

min 𝐽 𝑎(𝑘) = [𝑥𝑥𝑥∗

𝑎(𝑘)−𝑥𝑥𝑥∗

d,a(𝑘)]T ̃𝑄[𝑥𝑥𝑥∗

𝑎(𝑘)−𝑥𝑥𝑥∗

d,a(𝑘)]+Δ̃𝑢𝑢𝑢T

𝑎

̃𝑃 Δ̃𝑢𝑢𝑢𝑎,
(33)

d,a(𝑘) = ∑𝑁𝑝
where 𝑥𝑥𝑥∗
𝑖=1
desired states. Deﬁne

𝑥𝑥𝑥d,a(𝑘 + 𝑖)|𝑖⟩

denotes the augmented

d,a(𝑘) − 𝐴∗

𝑎 + 𝐵∗
𝐸𝐸𝐸𝑎 = 𝑥𝑥𝑥∗
and substitute (34) into (33), yields

𝑎𝑥𝑥𝑥𝑎(𝑘) − (𝐵∗

𝑎 𝑊 ∗

𝑎 )Λ𝑢𝑢𝑢𝑎(𝑘 − 1),

(34)

min𝐽𝑎(𝑘) =

1
2

Δ̃𝑢𝑢𝑢T

𝑎 𝐻𝑎Δ̃𝑢𝑢𝑢𝑎 + 𝑓𝑓𝑓 T

𝑎 Δ̃𝑢𝑢𝑢T

𝑎 + 𝐸𝐸𝐸T
𝑎

where 𝐻𝑎 = 2[Γ𝑇 (𝐵∗
𝑓𝑓𝑓 𝑎 = −2ΓT(𝐵∗
𝑎 + 𝐵∗

𝑎 )T ̃𝑄(𝐵∗
𝑎 + 𝐵∗
𝑎 𝑊 ∗
𝑎 )T ̃𝑄𝐸𝐸𝐸𝑎
.
𝑎 𝑊 ∗

𝑎 + 𝐵∗

𝑎 𝑊 ∗

𝑎 )Γ + ̃𝑃 ],

3.3. Constraints reconﬁguration

Based on Section 2.3, the constraints related with the
𝑎(𝑘) which are employed in
augmented vectors 𝑥𝑥𝑥∗
the convex QP problem are reconﬁgured in this subsection.

𝑝(𝑘) and 𝑥𝑥𝑥∗

3.3.1. Control input constraints

The control input constraint of thrusters is described as,

−̃𝑢𝑢𝑢max

𝑝 ⩽ Λ𝑢𝑢𝑢𝑝(𝑘 − 1) + ΓΔ̃𝑢𝑢𝑢𝑝 ⩽ ̃𝑢𝑢𝑢max

𝑝

,

(36)

𝑝 = ∑𝑁𝑐
𝑢𝑢𝑢max
𝑝
deﬁned in (10).

where ̃𝑢𝑢𝑢max
of 𝑢𝑢𝑢max
𝑝
Converting (36) to the following form,

𝑖=1

|𝑖⟩ ∈ ℝ3𝑁𝑐 is the augmented vector

𝐺𝑐Δ̃𝑢𝑢𝑢𝑝 ⩽ 𝑔𝑔𝑔𝑐,𝑝

where

(37)

𝐺𝑐 =

(

)

Γ
−Γ

, 𝑔𝑔𝑔𝑐,𝑝 =

( ̃𝑢𝑢𝑢max
𝑝 − Λ𝑢𝑢𝑢𝑝(𝑘 − 1)
̃𝑢𝑢𝑢max
𝑝 + Λ𝑢𝑢𝑢𝑝(𝑘 − 1)

)

.

Similarly, the control input constraint on the reaction wheels

is given by

𝐺𝑐Δ̃𝑢𝑢𝑢𝑎 ⩽ 𝑔𝑔𝑔𝑐,𝑎

where

𝐺𝑐 =

(

)

Γ
−Γ

, 𝑔𝑔𝑔𝑐,𝑎 =

( ̃𝑢𝑢𝑢max
𝑎 − Λ𝑢𝑢𝑢𝑎(𝑘 − 1)
̃𝑢𝑢𝑢max
𝑎 + Λ𝑢𝑢𝑢𝑎(𝑘 − 1)

)

.

(38)

𝐺𝑒2Δ̃𝑢𝑢𝑢𝑝 ⩽ 𝑔𝑔𝑔𝑒2,

(44)

where

𝐺𝑒2 =

( ̃𝑓𝑓𝑓 3(𝐵∗
−̃𝑓𝑓𝑓 3(𝐵∗

)

,

𝑝 +𝐵∗
𝑝 𝑊 ∗
𝑝 +𝐵∗
𝑝 𝑊 ∗
(𝑘)− ̃𝑓𝑓𝑓 3[𝐴∗
(𝑘)+ ̃𝑓𝑓𝑓 3[𝐴∗

𝑝 )Γ
𝑝 )Γ
𝑝𝑥𝑥𝑥𝑝(𝑘)+(𝐵∗
𝑝𝑥𝑥𝑥𝑝(𝑘)+(𝐵∗

( ̃𝛽𝛽𝛽max
−̃𝛽𝛽𝛽min

𝑝 +𝐵∗
𝑝 +𝐵∗

𝑝 𝑊 ∗
𝑝 𝑊 ∗

𝑝 )Λ𝑢𝑢𝑢𝑝(𝑘−1)]
𝑝 )Λ𝑢𝑢𝑢𝑝(𝑘−1)]

)

.

where ̃𝑢𝑢𝑢max
of 𝑢𝑢𝑢max
𝑎

𝑎 = ∑𝑁𝑐
𝑢𝑢𝑢max
𝑎
described in (11).

𝑖=1

|𝑖⟩ ∈ ℝ3𝑁𝑐 is the augmented vector

𝑔𝑔𝑔𝑒2 =

3.3.2. Collision avoidance constraint

The collision avoidance constraint is reconﬁgurated as

follows,

3.3.4. Field of view constraints
The constraint on the 𝑁𝑝

reconﬁgurated as

predictions of the roll angle is

̃𝑓𝑓𝑓 1𝑥𝑥𝑥∗

𝑝(𝑘) ≥ ̃𝑟𝑟𝑟safe,
where ̃𝑓𝑓𝑓 1 = 𝐸𝑁𝑝
necker product of two matrices, 𝐸𝑁𝑝
tity matrix with 𝑁𝑝

⊗ 𝑓𝑓𝑓 1 ∈ ℝ𝑁𝑝×6𝑁𝑝 with ⊗ being the Kro-
∈ ℝ𝑁𝑝×𝑁𝑝 is an iden-
dimention, 𝑓𝑓𝑓 1 = [1, 0, 0, 0, 0, 0], and

D. Li et al.: Preprint submitted to Elsevier

(39)

− ̃𝜋𝜋𝜋 ⩽ ̃𝑓𝑓𝑓 1𝑥𝑥𝑥∗

𝑎(𝑘) ⩽ ̃𝜋𝜋𝜋,

(45)

where ̃𝜋𝜋𝜋 = ∑𝑁𝑝
𝑖=1

𝐺𝑓 1Δ̃𝑢𝑢𝑢𝑝 ⩽ 𝑔𝑔𝑔𝑓 1,

. Substituting (32) into (45), yields

𝜋|𝑖⟩

(46)

Page 7 of 14

D. Li, R. Dong

where 𝐺∗
𝑒2]T.
𝑔𝑔𝑔T

where

𝐺𝑓 1 =

𝑔𝑔𝑔𝑓 1 =

)

,

( ̃𝑓𝑓𝑓 1(𝐵∗
− ̃𝑓𝑓𝑓 1(𝐵∗
( ̃𝜋𝜋𝜋 − ̃𝑓𝑓𝑓 1[𝐴∗
−̃𝜋𝜋𝜋 + ̃𝑓𝑓𝑓 1[𝐴∗

𝑎 + 𝐵∗
𝑎 𝑊 ∗
𝑎 )Γ
𝑎 + 𝐵∗
𝑎 𝑊 ∗
𝑎 )Γ
𝑎𝑥𝑥𝑥𝑎(𝑘)+(𝐵∗
𝑎𝑥𝑥𝑥𝑎(𝑘)+(𝐵∗

The constraint on the 𝑁𝑝

is reconﬁgurated as

)

𝑎 𝑊 ∗
𝑎 𝑊 ∗

𝑎 +𝐵∗
𝑎 )Λ𝑢𝑢𝑢𝑎(𝑘−1)]
𝑎 +𝐵∗
𝑎 )Λ𝑢𝑢𝑢𝑎(𝑘−1)]
predictions of the pitch angle

.

̃𝜃𝜃𝜃min
𝑐

(𝑘) ⩽ ̃𝑓𝑓𝑓 2𝑥𝑥𝑥∗

𝑎(𝑘) ⩽ ̃𝜃𝜃𝜃max

𝑐

(𝑘),

(47)

where ̃𝜃𝜃𝜃min
of 𝜃min
𝑐
(𝑘 + 𝑖)|𝑖⟩

(𝑘) = ∑𝑁𝑝
𝑖=1

𝜃min
𝑐
𝑐
(𝑘) described in (15). Similarly, ̃𝜃𝜃𝜃max
. Substituting (32) into (47), yields

is the augmented vector
(𝑘) = ∑𝑁𝑝
𝑖=1

(𝑘+𝑖)|𝑖⟩

𝜃max
𝑐

𝑐

𝐺𝑓 2Δ̃𝑢𝑢𝑢𝑝 ⩽ 𝑔𝑔𝑔𝑓 2,

(48)

where

𝐺𝑓 2 =

𝑔𝑔𝑔𝑓 2 =

( ̃𝑓𝑓𝑓 2(𝐵∗
− ̃𝑓𝑓𝑓 2(𝐵∗

)

,

𝑎 + 𝐵∗
𝑎 + 𝐵∗
(𝑘)− ̃𝑓𝑓𝑓 2[𝐴∗
(𝑘)+ ̃𝑓𝑓𝑓 2[𝐴∗

𝑎 𝑊 ∗
𝑎 )Γ
𝑎 𝑊 ∗
𝑎 )Γ
𝑎𝑥𝑥𝑥𝑎(𝑘)+(𝐵∗
𝑎𝑥𝑥𝑥𝑎(𝑘)+(𝐵∗

( ̃𝜃𝜃𝜃max
𝑐
−̃𝜃𝜃𝜃min
𝑐

𝑎 +𝐵∗
𝑎 +𝐵∗

𝑎 𝑊 ∗
𝑎 𝑊 ∗

𝑎 )Λ𝑢𝑢𝑢𝑎(𝑘−1)]
𝑎 )Λ𝑢𝑢𝑢𝑎(𝑘−1)]

)
.

The constraint on the 𝑁𝑝

reconﬁgurated as follows,

predictions of the yaw angle is

̃𝜓𝜓𝜓 min
𝑐

(𝑘) ⩽ ̃𝑓𝑓𝑓 3𝑥𝑥𝑥∗

𝑎(𝑘) ⩽ ̃𝜓𝜓𝜓 max

𝑐

(𝑘),

(49)

where ̃𝜓𝜓𝜓 min
𝜓 max
𝑐

𝑐
(𝑘 + 𝑖)|𝑖⟩

(𝑘) = ∑𝑁𝑝
𝑖=1

(𝑘 + 𝑖)|𝑖⟩
. Substituting (32) into (49), gives,

, and ̃𝜓𝜓𝜓 max

𝜓 min
𝑐

𝑐

(𝑘) = ∑𝑁𝑝
𝑖=1

𝐺𝑓 3Δ̃𝑢𝑢𝑢𝑝 ⩽ 𝑔𝑔𝑔𝑓 3,

(50)

where

𝐺𝑓 3 =

𝑔𝑔𝑔𝑓 3 =

( ̃𝑓𝑓𝑓 3(𝐵∗
− ̃𝑓𝑓𝑓 3(𝐵∗

)

,

𝑎 + 𝐵∗
𝑎 + 𝐵∗
(𝑘)− ̃𝑓𝑓𝑓 3[𝐴∗
(𝑘)+ ̃𝑓𝑓𝑓 3[𝐴∗

𝑎 𝑊 ∗
𝑎 )Γ
𝑎 𝑊 ∗
𝑎 )Γ
𝑎𝑥𝑥𝑥𝑎(𝑘)+(𝐵∗
𝑎𝑥𝑥𝑥𝑎(𝑘)+(𝐵∗

( ̃𝜓𝜓𝜓 max
𝑐
−̃𝜓𝜓𝜓 min
𝑐

𝑎 +𝐵∗
𝑎 +𝐵∗

𝑎 𝑊 ∗
𝑎 𝑊 ∗

𝑎 )Λ𝑢𝑢𝑢𝑎(𝑘−1)]
𝑎 )Λ𝑢𝑢𝑢𝑎(𝑘−1)]

)

.

3.4. Implement of sampling-based PWA MPC

Consider the optimization index (31) and (35) derivated
by the sampling-based PWA MPC strategy, and the recon-
ﬁguration of constraints on the relative position states and
the attitude states, the optimal control problem over the pre-
dictive horizon can be converted to the following standard
QP problems,

Δ̃𝑢𝑢𝑢𝑝 = argΔ𝑢𝑢𝑢𝐽𝑝(𝑘),

s.t.

𝑥𝑥𝑥𝑝(𝑘|𝑘) = 𝑥𝑥𝑥𝑝(𝑘),
⎧
⎪
𝑥𝑥𝑥∗
𝑝(𝑘) = 𝐴∗
𝑝𝑥𝑥𝑥𝑝(𝑘) + 𝐵∗
⎨
𝑃 Δ̃𝑢𝑢𝑢𝑝 ⩽ 𝑔𝑔𝑔∗
𝐺∗
⎪
𝑃 ,
⎩

𝑝 𝑊 ∗

𝑝 𝑢𝑢𝑢∗

𝑝 + 𝐵∗

𝑝𝑢𝑢𝑢∗
𝑝,

(51)

𝑃 = [𝐺T

𝑐,𝑝, 𝐺T

𝑎 , 𝐺T
𝑒1

, 𝐺T

𝑒2]T, 𝑔𝑔𝑔∗

𝑃 = [𝑔𝑔𝑔T

𝑐,𝑝, 𝑔𝑔𝑔T

𝑎 , 𝑔𝑔𝑔T
𝑒1

,

For the attitude controller, the optimal control problem

is converted to the following standard QP problem,

Δ̃𝑢𝑢𝑢𝑎 = argΔ𝑢𝑢𝑢𝐽𝑎(𝑘),

s.t.

𝑥𝑥𝑥𝑎(𝑘|𝑘) = 𝑥𝑥𝑥𝑎(𝑘),
⎧
⎪
𝑥𝑥𝑥∗
𝑎(𝑘) = 𝐴∗
𝑎𝑥𝑥𝑥𝑎(𝑘) + 𝐵∗
⎨
𝐴Δ̃𝑢𝑢𝑢𝑎 ⩽ 𝑔𝑔𝑔∗
𝐺∗
⎪
𝐴,
⎩

𝑎 𝑊 ∗

𝑎 𝑢𝑢𝑢∗

𝑎 + 𝐵∗

𝑎𝑢𝑢𝑢∗
𝑎,

(52)

𝑐,𝑎, 𝐺T
𝑓 1

𝐴 = [𝐺T

where 𝐺∗
, 𝐺T
,
𝑓 3]T. Then the optimal control input in the optimization
𝑔𝑔𝑔T
problem can be solved by a QP solver.

𝑓 3]T, 𝑔𝑔𝑔∗

𝐴 = [𝑔𝑔𝑔T

𝑐,𝑎, 𝑔𝑔𝑔T
𝑓 1

, 𝐺T
𝑓 2

, 𝑔𝑔𝑔T
𝑓 2

4. Rendezvous and docking strategy
4.1. AR&D strategy

̇𝜌𝑑(𝑡),

̇𝜃𝑡(𝑡),

̇𝜃𝑡(𝑡),

̇𝜙𝑡(𝑡),

In this paper, the control objective is to track the time-
varying position and attitude of the target’s docking port.
Consider the coupling between the position and attitude, the
desired state of relative position is described by [𝜌𝑑(𝑡), 𝜃𝑡(𝑡),
̇𝜓𝑡(𝑡)]T, the desired state of relative posi-
𝜓𝑡(𝑡),
tion is described by [𝜙𝑡(𝑡), 𝜃𝑡(𝑡), 𝜓𝑡(𝑡),
̇𝜓𝑡(𝑡)]T
with the ﬁeld of view constraint being related with the az-
imuth and angle and the elevation angle. In practical space
missions, the AR&D mission is divided into a rendezvous
phase and a docking phase.
In the rendezvous phase, the
chaser is driven to a safe position around the target, approach-
ing rapidity is mainly concerned. Subsequently, the chaser
is controlled to track the target’s docking port. More focus
is put on the safe-docking, which is realized through con-
straining the approach velocity, entry cone, and the keep-out
zone. Besides, since there exist sensor uncertainty in prac-
tice, existing paper [18] has stated that the uncertainty can
be described by Guassian distributions with certain standard
deviation, the Kalman ﬁlter can be combined with the pro-
posed sampling-based PWA MPC framework. To focus on
the eﬀect of proposed sampling-based PWA MPC and con-
strains construction, this study directly control the chaser to
track the target’s docking port without a two-phase AR&D
process.

4.2. Singularity-free strategy

As shown in Fig. 4, the singularity of the angle states
means two values represent a same position physically but
diﬀer widely in mathematics. Once the desired tracking state
reaches the singularity, the actual state can not track the next
jump desired state immediately, which greatly limit the ap-
plication of the LOS dynamics and Euler dynamics in the
6-DOF pose tracking. In this subsection, a singularity-free
strategy is provided. Denote a control period as the period
before the state reaches the singular point, the basic idea is to
design a mechanism which can automatically reset the con-
troller to a new control period. The speciﬁc practice is to

D. Li et al.: Preprint submitted to Elsevier

Page 8 of 14

D. Li, R. Dong

choose the correct value from diﬀerent singular values ac-
cording to the continuity of motion, and reset the mathemat-
ical expression of the state (doesn’t change physically) once
it reaches the singular point. The previous tracking error in
the ﬁnal instant of the previous period is regarded as the ini-
tial error of the new period.

Figure 4: Singularity of angle state

There exist two situations in a tracking problem as fol-
lows. Assume that the desired state is monotonic and won’t
repeatedly switch in the neighbourhood of the singuar point.
One situaton is the desired state reaches the singualr point
but the actual state doesn’t. The other is the actual state
reaches the singular point but the desired state doesn’t. For
the ﬁrst situation, we reset the mathematical expression of
the desired state temporarily to ensure the actual state moves
in the original direction until the actual state reaches the sin-
gularity. For the second situation, we reset the actual state
ﬁrstly, and change the mathematical expression of the de-
sired state temporarily to ensure the actual state moves in
the original direction until desired state reaches the singu-
larity. The detailed strategy of singularity-free is presented
in Algorithm 2.

It should be noted that the discrete state can’t always
reach the singular point precisely. Our method is to set a
neighborhood ﬁeld near the singular point, once the state
reaches the neighborhood, we consider the state reaches the
In this way, there exists in-
singular point approximatly.
evitable error, our approach is to calculate the previous error
in the ﬁnal instant of the previous period and take it as the
initial error of the new period.

5. Numerical simulations

To illustrate the advantages of the proposed strategies,
numerical simulations of diﬀerent AR&D scenarios are pre-
sented. Consider diﬀerent conditions of the target’s motion,
we investigate two cases. In case 1, the rotation of the tum-
bling target is assumed to be uncontrolled. In case 2, we
consider a more general situation that the angular velocity
of the tumbling target changes regularly under control. The
absolute position of the target is considered not change, since
the whole process won’t take long time.

Assuming the target is running in an elliptical orbit, with
the eccentricity 𝑒 is 0.3, semi-major axis 𝑎 is 10000 km,
initial true anomaly 𝑓 is 0 deg, and the initial position of
the target is assumed at the perigee. The dimension of the
target is 6 m × 6 m × 6 m. The coordinate of the target’s
docking port is assumed [0.5, 0, 0]Tm in the body frame

or 1

is increasing} then

Algorithm 2 Singularity-free strategy
Ensure: 𝑥 ∈ [−𝑛𝑥𝜋, 𝑛𝑥𝜋] with 𝑛𝑥 = 1
2
1: if {𝑥d
2:
3:
4:
5:

𝑖 = 1
repeat

𝑥d(𝑘 + 𝑖) ⇐ 𝑥d(𝑘 + 𝑖) + 2𝑛𝑥𝜋
𝑖 ⇐ 𝑖 + 1

if { 𝑥d(𝑘) = 𝑛𝑥𝜋 && 𝑥(𝑘) < 𝑛𝑥𝜋 } then

until 𝑥(𝑘 + 𝑁) = 𝑛𝑥𝜋
𝑥(𝑘 + 𝑁 + 1) ⇐ −𝑛𝑥𝜋

else { 𝑥d(𝑘) < 𝑛𝑥𝜋 && 𝑥(𝑘) = 𝑛𝑥𝜋 }

𝑥(𝑘 + 1) = −𝑛𝑥𝜋
𝑖 = 1
repeat

𝑥d(𝑘 + 𝑖) ⇐ 𝑥d(𝑘 + 𝑖) − 2𝑛𝑥𝜋
𝑖 ⇐ 𝑖 + 1

until 𝑥d(𝑘 + 𝑁) = 𝑛𝑥𝜋

is decreasing}

if { 𝑥d(𝑘) = −𝑛𝑥𝜋 && 𝑥(𝑘) > 𝑛𝑥𝜋 } then

12:
13:
14:
15:
16:
end if
17: else {𝑥d
18:
19:
20:
21:
22:

𝑖 = 1
repeat

𝑥d(𝑘 + 𝑖) ⇐ 𝑥d(𝑘 + 𝑖) − 2𝑛𝑥𝜋
𝑖 ⇐ 𝑖 + 1

until 𝑥(𝑘 + 𝑁) = −𝑛𝑥𝜋
𝑥(𝑘 + 𝑁 + 1) ⇐ 𝑛𝑥𝜋

else { 𝑥d(𝑘) > −𝑛𝑥𝜋 && 𝑥(𝑘) = −𝑛𝑥𝜋 }

𝑥(𝑘 + 1) = 𝑛𝑥𝜋
𝑖 = 1
repeat

𝑥d(𝑘 + 𝑖) ⇐ 𝑥d(𝑘 + 𝑖) + 2𝑛𝑥𝜋
𝑖 ⇐ 𝑖 + 1

until 𝑥d(𝑘 + 𝑁) = −𝑛𝑥𝜋

28:
29:
30:
31:
32:
33: end if

end if

6:
7:
8:
9:
10:
11:

23:
24:
25:
26:
27:

𝑐𝑡

𝑏𝑡

𝑏𝑡

𝑏𝑡

is 30, the control horizon 𝑁𝑐


is
. The chaser’s inertia matrix in the body frame 
diag(50, 35, 40) kg ⋅ m2. The wheels’ inertia matrix in the
is diag(5, 5, 5) kg ⋅ m2. The dimension of
body frame 
the chaser is 6 m × 6 m × 6 m. The coordinate of the chaser’s
docking port is assumed [−0.5, 0, 0]Tm in the body frame


.
For the parameters in the sampling-based PWA MPC, the
prediction horizon 𝑁𝑝
is 15, the
sampling factor is (0.4, 0.25, 0.25). The simulation dura-
tion is set as 500 s and the sampling interval 𝑇𝑠
is 0.1 s. The
weight matrices 𝑃 and 𝑄 in the relative position controller is
set as diag(100, 100, 100) and diag(1000, 30000, 30000,
1000∕𝜌, 3000∕𝜌, 3000∕𝜌). The weight matrices 𝑃 and 𝑄
in the relative attitude controller are set diag(100, 100, 100)
and diag (30000, 30000, 30000, 3000, 3000, 3000). In this
study, the neighbourhood of the singularity is set as [−90𝑖,
−90𝑖 + 0.5] deg and[90𝑖 − 0.5, 90𝑖] deg for 𝑖 = 1, 2. The
state is considered reaches the singularity once it is within
the neighbourhood. The AR&D conditions are shown in Ta-
ble 1.

D. Li et al.: Preprint submitted to Elsevier

Page 9 of 14

 180 deg-180 deg0 deg180 deg0 deg-180 degDesired stateActual state without singularity-freeActual state with singularity-freeDesired stateD. Li, R. Dong

(a) Tracking performance of elevation and azimuth

(b) Detailed performance of elevation

(c) Detailed performance of azimuth

(d) The LOS range

Figure 5: Elevation and azimuth racking performance of the position of the uncontrolled target

(a) The error in LVLH frame

(b) The RV&D process

Figure 6: Position tracking shown in the LVLH frame

5.1. Case 1: AR&D with an uncontrolled tumbling

target

In this case, the chaser is driven to track the pose of an
uncontrolled tumbling target, the angular velocity of which
is set as [0.02, 0.015, 0.02]T rad∕s in this case. The sampling-
based PWA MPC is employed to complete this mission, and
the performance of sampling-based PWA MPC is compared
with that of the standard NMPC based on the approximate
PWA model.

As shown in Fig. 5, the performance of relative position
tracking of the target’s docking port is presented. Both the

standard NMPC and sampling-based PWA MPC can track
the time-varying signals in about 10 s of the 500 s simu-
lation time. However, the sampling-based PWA MPC can
realize smaller overshoot and faster convergence rate, on the
condition of all constraints are satisﬁed. Fig. 6 shows the
AR&D process of employing sampling-based NMPC in the
LVLH frame, Fig. 6a presents that the tracking error of the
time-varying docking port is less than 2 × 10−3 (m), and Fig.
6b shows the 3-D process of the tracking. It can be seen that
the proposed controller can achieve better rendezvous per-
formance.

Fig. 7 shows the attitude tracking performance without

D. Li et al.: Preprint submitted to Elsevier

Page 10 of 14

050100150200250300350400450500-40-20020406080Elevation (deg)Sampling-based PWA MPCDesired stateStandard PWA MPC050100150200250300350400450500Time (s)-100-500Azimuth (deg)Sampling-based PWA MPCDesired stateStandard NMPC0510152025Time (s)010203040Elevation (deg)Sampling-based PWA MPCDesired stateStandard PWA MPC0510152025Time (s)-30-20-1001020304050Azimuth (deg)Sampling-based PWA MPCDesired stateStandard PWA MPC0100200300400500Time (s)020406080LOS range (m)Sampling-based PWA MPCDesired stateStandard PWA MPC0100200300400500Time (s)-1-0.500.51Error of position (m)Error-XError-YError-Z202530-20210-3D. Li, R. Dong

Figure 7: Attitude tracking without singularity-free

Figure 8: Attitude tracking with singularity-free

singularity-free strategy, it can be seen that the tracking can
not be achieved once the desired state reaces the singular-
ity. Fig. 8 shows the tracking performance by adopting the
singularity-free strategy, the result shows that the proposed
strategy can cross the singularity smoothly, and the tracking
takes less than 5 s of the 500 s simulation time. In addition,

Fig. 9 presents the tracking error of the attitude, however,
since we reset the controller to a new control period, the ini-
tial error is inevitable. It can be seen that the tracking er-
ror ﬂuctuates once the state reaches the singular point, the
tracking error can realize lower than 0.05 deg in one control
period, and less than 0.6 deg when the controller is reset to a

(a) Tracking error of roll

(b) Tracking error of pitch

(c) Tracking error of yaw

Figure 9: The tracking error of the attitude with an uncontrolled target

D. Li et al.: Preprint submitted to Elsevier

Page 11 of 14

50100150200250300350400450500-1000100Roll (deg)Actual stateDesired state50100150200250300350400450500-200204060Pitch (deg)Actual stateDesired state50100150200250300350400450500Time (s)-150-100-500Yaw (deg)Actual stateDesired state50100150200250300350400450500-1000100Roll (deg)70717273-180-17550100150200250300350400450500-200204060Pitch (deg)50100150200250300350400450500Time (s)-100-500Yaw (deg)Actual stateDesired state050100150200250300350400450500Time (s)-1-0.8-0.6-0.4-0.200.20.40.60.81Error of roll (deg)Actual stateDesired state050100150200250300350400450500Time (s)-1-0.8-0.6-0.4-0.200.20.40.60.81Error of pitch (deg)Actual stateDesired state0100200300400500Time (s)-1-0.500.51Error of yaw (deg)Actual stateDesired stateD. Li, R. Dong

(a) Attitude control input

(c) The control input

Figure 10: The control inputs

(a) Tracking performance of elevation and azimuth

(b) Detailed performance of elevation

(c) Detailed performance of azimuth

(d) The LOS range

Figure 11: Tracking performance of the position of a controlled target

new period. Fig. 10 shows that the input constrains on both
the position and the attitude are satisﬁed.

5.2. Case 2: AR&D with a controlled tumbling

target

In this case, a more general scenario is considered, i.e.,
the tumbling target is under controlled. The target ’s angular
velocity is set as [0.04𝑠𝑖𝑛( 𝜋𝑡
)]T
100
rad∕s in this case. As shown in Fig. 11, the performance of
relative position tracking of the target’s docking port is pre-

) , 0.04𝑠𝑖𝑛( 2𝜋𝑡
100

) , 0.04𝑠𝑖𝑛( 3𝜋𝑡
100

sented. Both the standard NMPC and sampling-based PWA
MPC can track the time-varying signals in less than 15 s
of the 500 s simulation time. However, the sampling-based
PWA MPC can realize smaller overshoot and faster conver-
gence rate, on the condition of all constraints are satisﬁed.
Fig. 12 shows the AR&D process of employing sampling-
based PWA MPC in the LVLH frame, it can be seen that
the proposed strategy can realize better rendezvous. The
tracking error of the time-varying docking port is less than
4 × 10−3 (m). Fig. 13 shows the tracking performance of

D. Li et al.: Preprint submitted to Elsevier

Page 12 of 14

0100200300400500Time (s)-1.5-1-0.500.511.5Control input (N)0100200300400500Time (s)-4-3-2-101234Control input (N)050100150200250300350400450500-50050Elevation (deg)Sampling-based PWA MPCDesired stateStandard PWA MPC050100150200250300350400450500Time (s)-50050100Azimuth (deg)Sampling-based PWA MPCDesired stateStandard NMPC0510152025Time (s)010203040Elevation (deg)Sampling-based PWA MPCDesired stateStandard PWA MPC0510152025Time (s)-30-20-1001020304050Azimuth (deg)Sampling-based PWA MPCDesired stateStandard PWA MPC0100200300400500Time (s)020406080LOS range (m)Sampling-based PWA MPCDesired stateStandard PWA MPCD. Li, R. Dong

(a) The error in LVLH frame

(b) The RV&D process

Figure 12: Position tracking shown in the LVLH frame

Figure 13: Attitude tracking of a controlled target

the controlled attitude. Fig.14 shows the attitude tracking
error, the result shows that the controller can track the time-
varying signals in less than 5 s of the 500 s simulation time.
In addition, the tracking error can realize lower than about
0.05 deg of tracking the controlled target. Fig. 15 shows that
the input constrains on both the position and the attitude are
satisﬁed.

6. Conclusion

This paper proposes a sampling-based PWA predictive
control strategy to control a chaser spacecraft to dock with
a tumbling target. To reduce the on-board computation ef-
forts and directly use the output of the navigation system, the
3-D LOS dynamics and the Euler attitude dynamics are em-
ployed together to realize the 6-DOF pose tracking. It has
been shown that the novel constructions of the constraints
based on the adopted states are more concise and without

(a) Tracking error of roll

(b) Tracking error of pitch

(c) Tracking error of yaw

Figure 14: The tracking performance of the attitude

D. Li et al.: Preprint submitted to Elsevier

Page 13 of 14

0100200300400500Time (s)-1-0.500.51Error of position (m)Error-XError-YError-Z455055-4-202410-3501001502002503003504004505000204060Roll (deg)Actual stateDesired state50100150200250300350400450500-2002040Pitch (deg)50100150200250300350400450500Time (s)020406080Yaw (deg)050100150200250300350400450500Time (s)-1-0.8-0.6-0.4-0.200.20.40.60.81Error of roll (deg)Actual stateDesired state050100150200250300350400450500Time (s)-1-0.8-0.6-0.4-0.200.20.40.60.81Error of pitch (deg)Actual stateDesired state0100200300400500Time (s)-1-0.500.51Error of yaw (deg)Actual stateDesired stateD. Li, R. Dong

(a) Attitude control input

(c) The control input

Figure 15: The control inputs

Table 1
AR&D conditions

Parameters

Value

Initial attitude state

Initial position state

𝜌 = 80 m, 𝜀 = 25 deg, 𝛽 = −10 deg
̇𝜀 = ̇𝛽 = 0 deg∕s
̇𝜌 = 0 m∕s,
𝜙𝑐 = 20 deg, 𝜃𝑐 = 25 deg, 𝜓𝑐 = −10 deg
̇𝜙𝑐 = ̇𝜃𝑐 = ̇𝜓𝑐 = 0 deg∕s
𝑢𝑢𝑢max
𝑝 = [3, 3, 3]T, 𝑢𝑢𝑢max
Control input
𝑟safe = 6 m
Keep-out zone
Entry cone constraint 𝛾𝑒 = 30 deg
Field of view constraint𝛾𝑓 = 30 deg

𝑎 = [1, 1, 1]T

any linear approximation. It can be seen from the simulation
results that: (1) compared with the standard NMPC frame-
work, the sampling-based PWA MPC strategy can realize
faster tracking and less overshoot in the continuous pose track-
ing, while satisfying the constraints; (2) the proposed AR&D
strategy can complete 6-DOF pose tracking well; (3) the con-
troller can realize singularity-free.

Future work based on this paper may include: (1) im-
provement of the robustness of the sampling-based PWA MPC;
(2) consider the position-attitude coupling in the AR&D and
take corresponding measures to deal with it.

References
[1] Thomas M. Davis and David Melanson. Xss-10 microsatellite ﬂight
demonstration program results.
In Jr. Peter Tchoryk and Melissa
Wright, editors, Spacecraft Platforms and Infrastructure. SPIE, aug
2004.

[2] Isao Kawano, Masaaki Mokuno, Toru Kasai, and Takashi Suzuki.
Result of autonomous rendezvous docking experiment of engineer-
ing test satellite-vii. Journal of Spacecraft and Rockets, 38:105–111,
2001.

[3] David A. Whelan, E. A. Adler, Samuel B. Wilson III, and Jr. Gordon
M. Roesler. Darpa orbital express program: eﬀecting a revolution in
space-based systems. In Brian J. Horais and Robert J. Twiggs, editors,
Small Payloads in Space. SPIE, nov 2000.

[4] Mayne and Q. David. Model predictive control: Recent developments

and future promise. Automatica, 50(12):2967–2986, 2014.

[5] D Q Mayne, James B Rawlings, Christopher V Rao, and P O M

Scokaert. Survey constrained model predictive control: Stability and
optimality. Automatica, 36(6):789–814, 2000.

[6] Qi Li, Jianping Yuan, Bo Zhang, and Chen Gao. Model predictive
control for autonomous rendezvous and docking with a tumbling tar-
get. Aerospace Science and Technology, 69:700–711, 2017.

[7] Peng Li and Zheng H Zhu. Model predictive control for spacecraft
rendezvous in elliptical orbit. Acta Astronautica, 146:339–348, 2018.
[8] Francisco Gavilan, Rafael Vazquez, and E F Camacho. Chance-
constrained model predictive control for spacecraft rendezvous with
disturbance estimation. Control Engineering Practice, 20(2):111–
122, 2012.

[9] Avishai Weiss, Morgan Baldwin, R S Erwin, and Ilya Kolmanovsky.
Model predictive control for spacecraft rendezvous and docking:
Strategies for handling constraints and case studies. IEEE Transac-
tions on Control Systems and Technology, 23(4):1638–1647, 2015.

[10] Peng Li and Zheng H Zhu. Line-of-sight nonlinear model predictive
control for autonomous rendezvous in elliptical orbit. Aerospace Sci-
ence and Technology, 69:236–243, 2017.

[11] N.L. Ricker and J.H. Lee. Nonlinear model predictive control of the
tennessee eastman challenge process. Computers & Chemical Engi-
neering, 19(9):961–981, sep 1995.

[12] Jing Zeng, Ding Yu Xue, and De Cheng Yuan. Multi-model predic-
tive control of nonlinear systems. Journal of Northeastern University,
30(1):26–29, 2009.

[13] Vincent A. Akpan and George D. Hassapis. Nonlinear model identi-
ﬁcation and adaptive model predictive control using neural networks.
Isa Transactions, 50(2):177–194, 2011.

[14] S Piche and B Sayyar-Rodsari. Nonlinear model predictive control

using neural networks. IEEE Control Systems, 20(3):53–62, 2000.

[15] Unsik Lee and Mehran Mesbahi. Constrained autonomous precision
landing via dual quaternions and model predictive control. Journal of
Guidance Control and Dynamics, 40(2):292–308, 2017.

[16] Hyungjoo Yoon and Brij N. Agrawal. Novel expressions of equations
of relative motion and control in keplerian orbits. Journal of Guid-
ance, Control, and Dynamics, 32(2):664–669, mar 2009.

[17] Yu Wang and Haibo Ji. Integrated relative position and attitude con-
trol for spacecraft rendezvous with iss and ﬁnite-time convergence.
Aerospace Science and Technology, 85:234–245, 2019.

[18] Lichao Ma, Xiuyun Meng, Zaozhen Liu, and Lifu Du. Suboptimal
power-limited rendezvous with ﬁxed docking direction and collision
avoidance. Journal of Guidance Control and Dynamics, 36(1):229–
239, 2013.

D. Li et al.: Preprint submitted to Elsevier

Page 14 of 14

0100200300400500Time (s)-1.5-1-0.500.511.5Control input (N)0100200300400500Time (s)-4-2024Control input (N)