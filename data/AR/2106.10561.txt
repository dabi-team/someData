Accepted for presentation in IEEE Biomedical Circuits and Systems Conference (BioCAS 2021).

EMG Signal Classiﬁcation Using Reﬂection
Coefﬁcients and Extreme Value Machine

Reza Bagherian Azhiri
Predictive Analytics and Technologies Lab, ME Dept.
The University of Texas at Dallas
Richardson, TX, USA
reza.azhiri@utdallas.edu

Mohammad Esmaeili
Department of Electrical and Computer Engineering
The University of Texas at Dallas
Richardson, TX, USA
esmaeili@utdallas.edu

Mohsen Jafarzadeh
El Pomar Institute for Innovation and Commercialization
University of Colorado Colorado Springs
Colorado Springs, CO, USA
mjafarza@uccs.edu

Mehrdad Nourani
Predictive Analytics and Technologies Lab, ECE Dept.
The University of Texas at Dallas
Richardson, TX, USA
nourani@utdallas.edu

Abstract—Electromyography is a promising approach to the
gesture recognition of humans if an efﬁcient classiﬁer with a high
accuracy is available. In this paper, we propose to utilize Extreme
Value Machine (EVM) as a high performance algorithm for the
classiﬁcation of EMG signals. We employ reﬂection coefﬁcients
obtained from an Autoregressive (AR) model to train a set
of classiﬁers. Our experimental results indicate that EVM has
better accuracy in comparison to the conventional classiﬁers
approved in the literature based on K-Nearest Neighbors (KNN)
and Support Vector Machine (SVM).

Index Terms—Electromyography, EMG, Extreme Value Ma-

chine, Feature Extraction, Reﬂection Coefﬁcients.

I. INTRODUCTION
Limb amputation is a tragedy that could happen due to
different reasons such as diabetes, vascular diseases, accidents
or wars. Undoubtedly, mental and physical effects of missing
a limb are severe and deprive individuals from normal daily
activities. In the united states alone, it has been reported that
the total number of upper limb amputees is about 41, 000 and
is expected to grow by 131% by 2050 [1]. The monotonic
relation between ﬁnger movement and that of its associated
electromyography (EMG) signal can be explored to control
prosthetics. EMG is a technique to measure the electrical
activity of nerve’s stimulation during the contraction. The data
is collected by EMG electrodes placed on the surface of skin
or intrusive into the skin in direct contact with the muscles [2].
In fact, pattern recognition is a saddle point in dealing
with EMG signals to classify these signals and relate the
speciﬁed class to the corresponding command [3], [4]. The
feature extraction from EMG signals should be done such
that the corresponding class with speciﬁc signal could be
detected [5]. Various feature extraction methods and classiﬁ-
cation algorithms have been employed by researchers in time
and frequency domains [6], [7]. Then, various optimization
methods such as Particle Swarm Optimization (PSO) and
Genetic algorithm [8], [9] can be applied to select a set of
features with signiﬁcant importance.

The number of extracted features depends on the number of
EMG sensors and feature extraction strategy for each sensor.
The dimensionality of features can thus be superabundant and
may facilitate training of the system.

In [10], two EMG electrodes are used for classiﬁcation of
ten classes of ﬁnger movements. The feature extraction in-
cludes Time Domain (TD) features, Autoregressive (AR) plus
Hjorth features of EMG signals followed by Support Vector
Machine (SVM) and k-nearest neighbor (KNN) classiﬁers for
pattern recognition. In [11], twelve surface EMG electrodes
are employed to extract features by combining time domain
features and autoregressive. Finally, they employed SVM as
a classiﬁer of ﬁnger gesture. A notch ﬁlter and a Butterworth
Band Pass Filter are utilized in [12] to ﬁlter the signals. Then,
the dataset and extracted features are normalized via Fractional
Fourier Transform (FFT). Due to a large number of features,
feature reduction is inevitable and is performed via t-test and
windowing method. The ﬁnal step in classiﬁcation done by
KNN [12]. Our research group has previously approximated
spectral analysis of EMG signals and extracted features using
reﬂection coefﬁcients [13] and classiﬁed the results with SVM,
without any feature reduction. It is shown in [14] that discrete
wavelet transform followed by principal component analysis
(PCA) and SVM could enhance the accuracy of classiﬁca-
tions. Several other EMG classiﬁers have been applied using
decision trees [15], random forest [16], KNN [12], Na¨ıve
Bayes classiﬁer [17], and SVM [13], [18]. Also, it seems using
ensemble learning [19] and other neural network architectures
such as a multilayer perceptron (MLP) [20], convolutional neu-
ral network (CNN) [21], graph convolutional neural network
(GCNN) [22], and recurrent neural network (RNN) [23] can
signiﬁcantly improve the classiﬁcation accuracy.

Block diagram of our proposed mode is demonstrated in
Figure 1. To the best of our knowledge, this is the ﬁrst time
that the extreme value machine is proposed for classiﬁcation
of EMG signals. In this paper, the reﬂection coefﬁcients of an

1
2
0
2

t
c
O
6

]
P
S
.
s
s
e
e
[

2
v
1
6
5
0
1
.
6
0
1
2
:
v
i
X
r
a

 
 
 
 
 
 
Accepted for presentation in IEEE Biomedical Circuits and Systems Conference (BioCAS 2021).

Fig. 1. Block diagram of our proposed model. (a) After muscle contraction, surface EMG electrodes read the (b) electric potential generated in muscle ﬁbers.
(c) Spectral analysis is implemented on obtained EMG signal. (d) Reﬂection coefﬁcients is extracted as our features for classiﬁcation. (d) For classiﬁcation,
the results of EVM are compared with other classiﬁers.

autoregressive model are considered as the feature vector to
serve as the input of the extreme value machine classiﬁer. We
show the strength of this method by comparing the accuracy
of extreme value machine against seven well accepted EMG
classiﬁers proposed in the literature, i.e., K-Nearest Neighbor
(KNN), Logistic Regression (LR), Support Vector Machine
(SVM), Gaussian Naive Bayesian (GNB), Decision Tree (DT),
Random Forest (RF), and XG Boost (XGB).

This paper is organized as follows. The background of EVM
is described in Section 2. Thereafter, in Section 3, the pre-
processing technique is explained and discussed how feature
extraction is done. In Section 4, the datasets characteristics are
elaborated, and disparate classiﬁers are applied to the same
dataset and results are compared. Finally, conclusion is drawn
in the last section.

II. EXTREME VALUE MACHINE

A. Background Theory

Most of the classiﬁcation algorithms do not consider the
distribution of data in their learning process. Extreme Value
Machine (EVM), derived from statistical Extreme Value The-
ory (EVT), is a distance-based kernel-free non-linear classiﬁer
which mainly focuses on the distribution of dataset especially
at extreme values [24]. EVT is a reliable statistical approach
to examine datasets that have too low or too high extreme
values. In other words, EVT deals with stochastic behavior
of rare observations that are unusually greater or smaller than
other observations. This is important where the distribution of
data at the tails of probability distribution is different from
the ones at the center of distribution. More speciﬁcally, the
advantage of EVT is originated from the fact that because of
using the asymptotic theory, the extremes (the tails of dataset
distribution) are modeled effectively [25].

Two different parametric methods have been proposed
for ﬁnding the distribution of extreme values: peaks-over-
threshold and block maxima [26]–[28].
In peaks-over-
threshold approach, the concentration is only on the obser-
vations that exceed a pre-deﬁned threshold. Threshold ex-
ceedance method converge to Generalized Pareto Distribution
(GPD), a very popular extreme value model which could
adequately extrapolate sufﬁciently high values located at the
upper tail. In block maxima approach, the observation period is

divided into nonoverlap periods with the same size. Maximum
observation at each period is considered for deﬁning the
distribution. The probability distribution of such observations
is approximately generalized extreme value (GEV) distribution
[29].

B. Extreme Value Machine

In EVM, the key factor is to deﬁne decision boundary
based on probabilistic distribution of each class based on the
extreme vector of corresponding class. The extreme vectors
are commonly the points that determine the decision boundary
of each class in a compact probabilistic form. The Weibull
distribution is often used to compute the radial probability
of inclusion of point considering the neighbor ones. In fact,
the aim of EVM is to select distributions of each class by
extreme vectors and compact these probability distributions
such that the decision boundary of classes could be deter-
mined. A Weibull distribution is ﬁtted on margin distance of
each extreme vector. Therefore, this distribution enables us to
arrive to the decision boundary of each class could be deﬁned
with respect to its extreme vectors. Given a point to EVM,
the probability of sample inclusion for the extreme vector of
each class is calculated. If the inclusion probability of the
sample point is more than a predeﬁned threshold, the point is
assigned to that class. For each point of the dataset like xi,
the prediction for each class is calculated by:

ˆP (Cl|x) = max
k

Wl,k(x; µl,k, σl,k, ξl,k)

(1)

where x is feature of input, Wl,k(x) is probability density
function of Weibull for kth of extreme vector of class l, ξ is
shape parameter of Weibull probability density functionm, µ is
shift parameter of Weibull probability density functionm, and
σ is scale parameter of Weibull probability density function.
Operation complexity of EVM is discussed in [24]. This
classiﬁer is hardware friendly and can run effectively on
embedded system platform [30]. We used the Python (Pytorch)
GPU accelerated EVM library of paper [29] available in
GitHub repository [31].

Accepted for presentation in IEEE Biomedical Circuits and Systems Conference (BioCAS 2021).

Fig. 2. Ten ﬁnger movements for individual and combined ﬁngers [10]

Fig. 3. EMG signal of combined ﬁnger movements (thumb-index)

III. SPECTRAL ANALYSIS

A. Spectrum Estimation - Background

The myoelectric signal processing is applicable for gesture
recognition of human hand based on the fact that there is a
monotonic relationship between the properties of EMG signal
and that of its related ﬁnger movement. Various ﬁnger gestures
have different EMG signal with different properties. To ﬁnd
the pattern recognition in human hand, EMG signal should be
scrutinized in real time. However, due to stochastic character-
istics of the EMG signal, it is not processed instantaneously.
Instead, it is processed in time blocks called sliding windows
that can be overlapped or disjoint. Filtering of EMG signal
is another inevitable part of signal processing as these signals
are contaminated via environmental factors and therefore, the
removal of the noise with ﬁltering approaches is required such
that valuable information of signal could be preserved.

Spectral analysis is a signal processing technique to dis-
criminate properties of signals in various applications such
as EMG signal and the corresponding ﬁnger movements.
Based on stochastic nature of EMG signal, it is considered
as a random process, and therefore, Fourier series of such
condition could not be deﬁned without using autocorrelation
model. Autocorrelation model is the way to understand the

spectral features of such random processes. This model is
described as R(m) = E[V (n)V (n + m)]. R correlates the
random processes with the m as the lag. Power spectral density
is the Fourier transform of R. This transformation involves
spectral characteristics of the signal and enables us to extract
features in the frequency domain. As R is unknown, the PSD
should be gained by estimation. Two different methods have
been proposed for the estimation of PSD: non-parametric and
parametric. Nonparametric methods utilize periodogram. The
goal of periodogram is to identify innate periodic signals by
ﬁnding the magnitude of different frequencies. However, the
variance of estimation is about the square of its corresponding
amount. But in parametric methods, the random process itself
is considered as parametric model. The advantage of the latter
method is that the amount of parameters for the PSD and
models are approximately the same.

B. Parametric PSD - Reﬂection Coefﬁcients

Let (cid:15)(n) denote a white noise with average zero and
variance of σ2. For the stationary random process V (n), the
auto-regressive model is represented as:

V (n) = −

p
(cid:88)

i=1

aiV (n − i) + (cid:15)(n),

(2)

Accepted for presentation in IEEE Biomedical Circuits and Systems Conference (BioCAS 2021).

where ais are the model parameters and p denotes the order of
the auto-regressive model. The model parameters are used to
calculate the power spectral density of the stationary random
process as:

σ2

√

(3)

P (f ) =

|1 + (cid:80)p

i=1 ai exp(−j2πif )|2 ,
where i =
−1. Different methods can be applied to adjust
the model parameters such as Yule-Walker [32] method and
Burg’s method [33]. In this paper, we will focus on Burg’s
method to estimate the power spectral density of the input
frame. Burg’s method ﬁts an auto-regressive model to the
signal by minimizing (least squares) the forward and backward
prediction errors. Such minimization occurs with the auto-
regressive parameters constrained to satisfy the Levinson-
Durbin recursion. Then, without computing the autocorrelation
function which is computationally expensive, Burg’s method
approximates the reﬂection coefﬁcient directly. In Burg’s
method, equation (2) is reformulated as a Finite Impulse
Response (FIR) ﬁlter, i.e.,

(cid:15)(n) =

p
(cid:88)

i=0

aiV (n − i),

(4)

where in this conﬁguration a0 = 1. The p-order FIR ﬁlter
contains p taps and is implemented by cascading p building
components. The lattice structure of a p-order digital FIR
ﬁlter is realized as a p-cascaded ﬁrst-order lattice components.
The lattice structure can be represented by scalar reﬂection
coefﬁcients ki as:

(cid:26)fi(n) = fi−1(n) + kibi−1(n − 1)
bi(n) = bi−1(n) + kifi−1(n − 1)

,

(5)

where fi(n) and bi(n) are forward and backward prediction
errors at the i-th stage, respectively. Historically, reﬂection
coefﬁcients are used for evaluating statistical hypothesis cor-
responding to the auto-regressive model. Considering V (n) as
the input EMG signal, at the ﬁrst stage we have:

f0(n) = b0(n) = V (n).

Also, for the the output of the ﬁnal stage we expect:

fp(n) = (cid:15)(n).

(6)

(7)

For the cases where the auto-regressive model parameters
ais are known, the reﬂection coefﬁcients kis are calculated
iteratively; Burg’s method provides a technique for parameter
estimation of the auto-regressive. This technique is based on
optimization of forward and backward prediction errors, i.e.,
fi(n) and bi(n) at the i-th stage.

The model order p is another unknown parameter that must
be chosen carefully. Low order models are not able to catch the
spetrum peaks and the result will produce a smooth spectra.
Also, high order models would be sensitive to the noise and
the output will induce false peaks in the spectra. Let K (cid:44)
[k1, k2, · · · , kp] denote the reﬂection coefﬁcients of the model

TABLE I
PERFORMANCE OF VARIANCE CLASSIFIERS (IN PERCENT)
FOR EMG DATASET [10]

Classiﬁer
EVM
SVM
KNN
DT
RF
LR
GNB
XGB

Acc
91
87.5
89
44
62.5
51
40.5
76

Prec
91.4
87.9
89.4
48.1
65.9
52.6
43
77

Rec
91
87.5
89
44
62.5
51
40.5
76

F1
90.9
87.6
88.6
40.6
62.9
51.1
38.9
76.2

by choosing appropriate p empirically. In our work, vector K
is considered as the extracted features from input EMG signals
to be fed directly into a classiﬁer.

IV. EXPERIMENTAL RESULTS AND DISCUSSION

A. Set up

In this paper, the EMG dataset collected at Sydney Univer-
sity [10] is used for feature extraction and classiﬁcation. The
reﬂection coefﬁcients of the autoregressive model is used for
feature extraction. Then, we will compare the accuracy results
of EVM against seven well known classiﬁcations reported in
the literature. We have implemented all classiﬁers (see Table I)
in Python and ran them in a windows-based laptop with 3.00
GHz CPU and 16.0 GB memory.

B. Dataset

The dataset which is used in this paper is provided by
Center of Intelligent Mechatronic Systems at the University of
Technology at Sydney [10]. This dataset includes EMG data
of eight participants (six men and two women at the range of
25 to 30 years old) performing ten different ﬁnger movements
consisting ﬁve individuals as Thumb (T), Index (I), Middle
(M), Ring (R), Little (L) and ﬁve combined movement as
Thumb-Index (T-I), Thumb-Middle (T-M), Thumb-Ring(T-R),
Thumb-Little (T-L) and closed hands. In Fig. 2., these ﬁngers
movements are illustrated. The duration of each movement
from rest pose to contraction pose is ﬁve seconds. EMG signals
are sensitive to the condition of experiment and effects of
neighbor limb. For uniformity, participants sat on the armchair
such that their arms were ﬁxed and stable. The EMG data is
recorded with two channels at 4, 000 Hz and then ampliﬁed
to total gain of 1, 000. Each movement of ﬁngers is repeated
six times. We select the ﬁrst four trials for the training of
the classiﬁcation methods and the last two for the test of
the methods in order to check the accuracy of the classiﬁers.
Fig. 3. shows the EMG signal of a combined movement, i.e.,
Thumb-Index.

C. Results and Discussion

At

the ﬁrst step, ﬁltering, standard scaling and feature
extraction are done. To have a better comparison between clas-
siﬁers, the hyperparameters of each classiﬁer are tuned such
that achieves the best possible accuracy. After determining

Accepted for presentation in IEEE Biomedical Circuits and Systems Conference (BioCAS 2021).

Fig. 4. Accuracy of each class for KNN, SVM and EVM

TABLE II
COMPARING THE RESULTS OF DIFFERENT APPROACHES FOR THE SAME EMG DATASET.

Approaches
[34]
[35]
[10]
[13]
Ours

Features
TD+Hjorth+RMS
AR + RMS
TD+AR+Hjorth
Reﬂection Coefﬁcients
Reﬂection Coefﬁcients

Classiﬁer
ANN
ANN+NMF
KNN+SVM+Fusion
SVM
EVM

Clasees
5
5
10
10
10

Avg. Acc
96.7
92
90
89
91

the hyperparameters for each classiﬁer, for the same dataset
the comparison is done. In Table I, four performance metrics
(accuracy, precision, recall, and F1 score) are compared. The
results indicate that EVM outperforms other conventional
classiﬁers. To the best of our knowledge, our work is the ﬁrst
to utilize EVM for EMG analysis. Extreme value machine is
a machine learning technique that models probability of each
class of training data by ﬁtting a single or multiple Weibull
distribution and is not limited to speciﬁc condition [24].

The EVM has the best performance which makes it a
powerful tool for EMG classiﬁcation. The higher accuracy of
EVM is obtained from cosine metric which is related to the
radially covering of each class with EVM. The tail size and
cover threshold are tuned by 27 and 0.3 respectively. Extrem
vectors (values) are the EMG features that are located in the
tail of distribution of each class. Also, the most of widely
used methods do not model the tail of probability distribution
of each class. So, we expect that although they have very
good performance, but they perform poorly on the tail of
distribution. The accuracy for each class is shown in Fig. 4. For
KNN, the accuracy for different classes is not consistent. For
example, the accuracy of KNN for class ﬁve is below 60%.
SVM has lower ﬂuctuations in the results, but its accuracy
is 100% only for the class 0, while for other classes, its
accuracy is low. EVM has robust accuracy for each class and
its accuracy is not ﬂuctuating a lot for various classes.

In Table 2, we compare the accuracy with similar works

reported in [10], [13], [34], [35]. Authors in [35] categorized
ten ﬁnger movements into two groups of ﬁve movements and
extracted AR and Root mean Square (RMS) of amplitude of
EMG samples as their features. By running artiﬁcial neural
network (ANN), they could reach 92% accuracy. EVM is
a powerful method constructed based on the distribution of
data which is rarely considered on many other well-known
classiﬁers.

Reference [34] also restrained their research to ﬁve ﬁnger
movements. They used time domain, Hjorth and RMS as
their features and their classiﬁer was ANN. Reference [10]
used a combination of time domain features, Hjorth and
AR, and trained either a KNN classiﬁer or a SVM classiﬁer
on all ten movements. Also, they implemented the fusion
approach to vote among different classiﬁcation methods to get
better results. [13] used reﬂection coefﬁcients of autoregressive
model as the extracted features for classiﬁcation. Similar
to [13] and [10], we concentrate on all ten movements, but
our accuracy is higher than the similar works. Additionally,
our accuracy is obtained without extra processing mechanism
like feature selection, feature reduction, voting or fusion.

V. CONCLUSION

In this paper, we proposed EVM as a promissing classiﬁer
for EMG datasets. We analyzed an open source data with
eight subjects and ten classes. For feature extraction, we used
reﬂection coefﬁcients. These features capture the frequency

Accepted for presentation in IEEE Biomedical Circuits and Systems Conference (BioCAS 2021).

properties of EMG signals. Then we compared the accuracy
of EVM against seven conventional classiﬁers. The average
accuracy of EVM is 91% which is superior or competitive
accuracy.

The main focus of this paper was to utilize extreme value
machine and validate its strength on EMG signals like Elec-
troencephalography (EEG), Electrocardiography (ECG), etc.
Other aspects of research on extreme value machine such as its
application on other biomedical signals, its combination with
other neural network architectures such as convolutional neural
network, graph convolutional neural network, and recurrent
neural network remain open for future studies.

REFERENCES

[1] K. Ziegler-Graham, E. J. MacKenzie, P. L. Ephraim, T. G. Travison, and
R. Brookmeyer, “Estimating the prevalence of limb loss in the united
states: 2005 to 2050,” Archives of physical medicine and rehabilitation,
vol. 89, no. 3, pp. 422–429, 2008.

[2] X. Zha, L. Wehbe, R. J. Sclabassi, Z. Mace, Y. V. Liang, A. Yu,
J. Leonardo, B. C. Cheng, T. A. Hillman, D. A. Chen, and C. N. Riviere,
“A deep learning model for automated classiﬁcation of intraoperative
continuous emg,” IEEE Transactions on Medical Robotics and Bionics,
vol. 3, no. 1, pp. 44–52, 2021.

[3] E. N. Kamavuako, J. C. Rosenvang, R. Horup, W. Jensen, D. Farina, and
K. B. Englehart, “Surface versus untargeted intramuscular emg based
classiﬁcation of simultaneous and dynamically changing movements,”
IEEE Transactions on Neural Systems and Rehabilitation Engineering,
vol. 21, no. 6, pp. 992–998, 2013.

[4] E. Scheme and K. Englehart, “Electromyogram pattern recognition for
control of powered upper-limb prostheses: state of the art and challenges
for clinical use.,” Journal of Rehabilitation Research & Development,
vol. 48, no. 6, 2011.

[5] D. Farina, N. Jiang, H. Rehbaum, A. Holobar, B. Graimann, H. Dietl, and
O. C. Aszmann, “The extraction of neural information from the surface
emg for the control of upper-limb prostheses: Emerging avenues and
challenges,” IEEE Transactions on Neural Systems and Rehabilitation
Engineering, vol. 22, no. 4, pp. 797–809, 2014.

[6] P. Bonato, S. Roy, M. Knaﬂitz, and C. de Luca, “Time-frequency
parameters of the surface myoelectric signal for assessing muscle fatigue
during cyclic dynamic contractions,” IEEE Transactions on Biomedical
Engineering, vol. 48, no. 7, pp. 745–753, 2001.

[7] S. M. Khan, A. A. Khan, and O. Farooq, “Selection of features and
classiﬁers for emg-eeg-based upper limb assistive devices—a review,”
IEEE Reviews in Biomedical Engineering, vol. 13, pp. 248–260, 2020.
[8] M. Esmaeili, N. Granpayeh, and M. Bozorgi, “A novel reliable opti-
mization method for output beam forming of photonic crystal waveguide
terminated with surface crow,” Optik, vol. 126, no. 4, pp. 421–425, 2015.
[9] A. A. M. Lima, R. M. Araujo, F. A. G. d. Santos, V. H. Yoshizumi,
F. K. H. de Barros, D. H. Spatti, L. H. B. Liboni, and M. E. Dajer,
“Classiﬁcation of hand movements from emg signals using optimized
mlp,” in 2018 International Joint Conference on Neural Networks
(IJCNN), pp. 1–7, 2018.

[10] R. N. Khushaba, S. Kodagoda, M. Takruri, and G. Dissanayake, “Toward
improved control of prosthetic ﬁngers using surface electromyogram
(emg) signals,” Expert Systems with Applications, vol. 39, no. 12,
pp. 10731–10738, 2012.

[11] A. H. Al-Timemy, G. Bugmann, J. Escudero, and N. Outram, “Classi-
ﬁcation of ﬁnger movements for the dexterous hand prosthesis control
with surface electromyography,” IEEE Journal of Biomedical and Health
Informatics, vol. 17, no. 3, pp. 608–618, 2013.

[12] Z. Taghizadeh, S. Rashidi, and A. Shalbaf, “Finger movements classiﬁ-
cation based on fractional fourier transform coefﬁcients extracted from
surface emg signals,” Biomedical Signal Processing and Control, vol. 68,
pp. 102573–102580, 2021.

[13] M. Heydarzadeh, J. Birjandtalab, and M. Nourani, “Emg spectral anal-
ysis for prosthetic ﬁnger control,” in 2017 European Conference on
Electrical Engineering and Computer Science (EECS), pp. 131–135,
2017.

[14] C. Hachemi, M. K. Talha, H. Zairi, and K. Meddah, “Single channel
emg classiﬁcation using dwt and svm,” in 2020 2nd International
Workshop on Human-Centric Smart Environments for Health and Well-
being (IHSH), pp. 199–203, 2021.

[15] D. L. Espinoza and L. El´ı S´anchez Velasco, “Comparison of emg signal
classiﬁcation algorithms for the control of an upper limb prosthesis
prototype,” in 2020 17th International Conference on Electrical En-
gineering, Computing Science and Automatic Control (CCE), pp. 1–4,
2020.

[16] Z. Li, B. Wang, C. Yang, Q. Xie, and C.-Y. Su, “Boosting-based
emg patterns classiﬁcation scheme for robustness enhancement,” IEEE
Journal of Biomedical and Health Informatics, vol. 17, no. 3, pp. 545–
552, 2013.

[17] L. S. Praveen, S. N. Nagananda, and P. Shankapal, “Design and
development of real time bionic hand control using emg signal,” in
2018 IEEE International Conference on Electronics, Computing and
Communication Technologies (CONECCT), pp. 1–4, 2018.

[18] A. Gailey, P. Artemiadis, and M. Santello, “Proof of concept of an online
emg-based decoding of hand postures and individual digit forces for
prosthetic hand control,” Frontiers in neurology, vol. 8, pp. 7–21, 2017.
[19] S. Forouzandeh, K. Berahmand, and M. Rostami, “Presentation of a
recommender system with ensemble learning and graph embedding: a
case on movielens,” Multimedia Tools and Applications, vol. 80, no. 5,
pp. 7805–7832, 2021.

[20] R. B. Azhiri, M. Esmaeili, and M. Nourani, “Emg-based feature extrac-
tion and classiﬁcation for prosthetic hand control,” arXiv preprint arXiv:
2107.00733, 2021.

[21] M. Jafarzadeh and Y. Tadesse, “Convolutional neural networks for
speech controlled prosthetic hands,” in 2019 First International Con-
ference on Transdisciplinary AI (TransAI), pp. 35–42, IEEE, 2019.
[22] M. Esmaeili and A. Nosratinia, “Semi-supervised node classiﬁcation
by graph convolutional networks and extracted side information,” arXiv
preprint arXiv:2009.13734, 2020.

[23] Y. Huang, Z. He, Y. Liu, R. Yang, X. Zhang, G. Cheng, J. Yi, J. P.
Ferreira, and T. Liu, “Real-time intended knee joint motion prediction by
deep-recurrent neural networks,” IEEE Sensors Journal, vol. 19, no. 23,
pp. 11503–11509, 2019.

[24] E. M. Rudd, L. P. Jain, W. J. Scheirer, and T. E. Boult, “The extreme
value machine,” IEEE Transactions on Pattern Analysis and Machine
Intelligence, vol. 40, no. 3, pp. 762–768, 2018.

[25] S. J. Roberts, “Extreme value statistics for novelty detection in biomed-
ical data processing,” IEE Proceedings-Science, Measurement and Tech-
nology, vol. 147, no. 6, pp. 363–367, 2000.

[26] S. Rouhani, T. Rahman, and V. Gogate, “Algorithms for the nearest

assignment problem.,” in IJCAI, pp. 5096–5102, 2018.

[27] J. Beirlant, Y. Goegebeur, J. Segers, and J. L. Teugels, Statistics of

extremes: theory and applications. John Wiley & Sons, 2006.

[28] E. Castillo, Extreme value theory in engineering. Elsevier, 2012.
[29] M. Jafarzadeh, T. Ahmad, A. R. Dhamija, C. Li, S. Cruz, and T. E.
Boult, “Automatic open-world reliability assessment,” in Proceedings of
the IEEE/CVF Winter Conference on Applications of Computer Vision,
pp. 1984–1993, 2021.

[30] M. Jafarzadeh and Y. Tadesse, “End-to-end learning of speech 2d
feature-trajectory for prosthetic hands,” in 2020 Second International
Conference on Transdisciplinary AI (TransAI), pp. 25–33, 2020.
[31] “Evm gpu ptthon library.” https://github.com/ROBOTICSENGINEER/

Automatic-Open-World-Reliability-Assessment, 2021.

[32] P. Stoica and R. L. Moses, Introduction to spectral analysis. Pearson

Education, 1997.

[33] R. Agarwal, J. Gotman, D. Flanagan, and B. Rosenblatt, “Automatic eeg
analysis during long-term monitoring in the icu,” Electroencephalogra-
phy and clinical Neurophysiology, vol. 107, no. 1, pp. 44–58, 1998.

[34] M. Ariyanto, W. Caesarendra, K. A. Mustaqim, M. Irfan, J. A. Pakpahan,
J. D. Setiawan, and A. R. Winoto, “Finger movement pattern recognition
method using artiﬁcial neural network based on electromyography (emg)
sensor,” in 2015 International Conference on Automation, Cognitive
Science, Optics, Micro Electro-Mechanical System, and Information
Technology (ICACOMIT), pp. 12–17, IEEE, 2015.

[35] G. R. Naik and H. T. Nguyen, “Nonnegative matrix factorization for
the identiﬁcation of emg ﬁnger movements: Evaluation using matrix
analysis,” IEEE journal of biomedical and health informatics, vol. 19,
no. 2, pp. 478–485, 2014.

