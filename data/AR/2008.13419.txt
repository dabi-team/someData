Integrative Object and Pose to Task Detection for an
Augmented-Reality-based Human Assistance System using Neural
Networks

Linh Kästner1, Leon Eversberg1, Marina Mursa1 and Jens Lambrecht1

0
2
0
2

g
u
A
1
3

]

C
H
.
s
c
[

1
v
9
1
4
3
1
.
8
0
0
2
:
v
i
X
r
a

Abstract— As a result of an increasingly automatized and
digitized industry, processes are becoming more complex. Aug-
mented Reality has shown considerable potential in assisting
workers with complex tasks by enhancing user understand-
information. However, the
ing and experience with spatial
acceptance and integration of AR into industrial processes
is still
limited due to the lack of established methods and
tedious integration efforts. Meanwhile, deep neural networks
have achieved remarkable results in computer vision tasks and
bear great prospects to enrich Augmented Reality applications .
In this paper, we propose an Augmented-Reality-based human
assistance system to assist workers in complex manual tasks
where we incorporate deep neural networks for computer
vision tasks. More speciﬁcally, we combine Augmented Reality
with object and action detectors to make workﬂows more
intuitive and ﬂexible. To evaluate our system in terms of user
acceptance and efﬁciency, we conducted several user studies.
We found a signiﬁcant reduction in time to task completion in
untrained workers and a decrease in error rate. Furthermore,
we investigated the users learning curve with our assistance
system.

I. INTRODUCTION

Due to the raise of automation and digitization in all areas
of industries,
the complexity of manufacturing processes
increased in recent years and tools to handle the rapidly
growing amounts of information are needed [1]. Despite the
upcoming changes in the industrial workforce, it is unlikely
that human labor will become obsolete due to complete au-
tomation. Manufacturers look for ways to use technological
advancement to assist their employees cognitively and physi-
cally rather than replacing them entirely [2]. These assistance
systems can help with the global trend of an increasing
demand in high-qualiﬁcation- and decreasing demand in low-
qualiﬁcation-jobs [3]. In this context, Augmented-Reality
(AR) -based assistance systems have shown promising results
such as reducing task execution time, improving product
quality or increasing workers ability to learn new tasks [4].
While AR assistance systems have great potential of im-
proving the collaboration between humans and machines,
the implementation of these systems face technological, en-
vironmental and organisational challenges [5] and are still an
ongoing ﬁeld of research. Furthermore, state-of-the-art AR
assistance systems often require an additional comissioning
step, are restricted to speciﬁc areas and do not take advantage

1Linh Kästner, Leon Eversberg, Marina Mursa and Jens Lambrecht are
with the Chair Industry Grade Networks and Clouds, Faculty of Electrical
Engineering, and Computer Science, Berlin Institute of Technology, Berlin,
Germany linhdoan@tu-berlin.de

Fig. 1: Proposed pipeline of industrial AR assistance system

of the recent success of computer vision approaches like
neural networks [6], [7], [8]. The majority of AR systems
still rely on ﬁducial markers [4], [9] or manual calibration
[6], [7], [8]. Additionally, while most AR systems have
integrated some form of object detection, the addition of an
action detection is not yet established. Moreover, only little
attention has been put on static screens as AR visualization
hardware [10] despite their simplicity and potential to employ
more processing power compared to handheld devices or
head-mounted devices (HMDs).

On this account, we present an AR-based industrial as-
sistance system, which incorporates deep learning (DL)
architectures to ensure a more ﬂexible and intuitive user
experience. We combine an object detection model with an
action detection model to guide untrained users in manual
tasks with the objective of promoting knowledge-transfer (s.
Fig. 1). We tested our assistance system with 30 participants
in an exemplary assembly scenario consisting of 9 steps
and evaluated the results in terms of task completion time,
error rate, user acceptance and learning promotion. The main
contributions of this paper are the following:

• A proposal of an industrial AR assistance system for
complex manual tasks using deep neural networks rely-
ing on RGB camera input only

• The combination of object detection and action detec-
tion enabling the system to perform interaction analysis
• A quantitative and qualitative evaluation of our system
such as time to task completion, error rate and a user

 
 
 
 
 
 
acceptance questionnaire

• A novel study on the effect of task repetition on the

impact of the AR assistance system

The paper is structured as follows: Sec. II gives an overview
of related work. Sec. III presents the methodology. Sec. IV
presents the results and evaluation. Finally, Sec. V gives a
conclusion of our work.

II. RELATED WORK

Over the last decade there has been a growing interest in
industrial AR. The term Augmented Reality was ﬁrst intro-
duced by Caudell and Mizell [11] in 1992 where they used
HMDs in aircraft manufacturing to reduce manufacturing
cost and improve workers efﬁciency. The largest focus of
research has been in the application of manual assembly
tasks [4]. Loch et al. [12] created an AR assistance system
for manual assembly tasks of Lego bricks. They provide
assistance on a screen by overlaying animations over the
video feed of a camera. They compared their AR system
to video instructions and found an improvement in time to
completion and number of errors in participants when using
the AR system for the ﬁrst time. Uva et al. [7] designed a
Spatial Augmented Reality (SAR) prototype intended to be
used for working stations in the context of smart factories.
They used a workbench consisting of a controller, a projector
and camera mounted on a frame and a rotating table with
ﬁducial markers. The instructions were projected directly on
the objects to be maintained. Their research shows that SAR
instructions have signiﬁcant beneﬁts compared to paper-
based instructions in tasks with high difﬁculty. The authors
note that they did not consider the participants experience
or the learning effect after multiple task repetitions. In
contrast to [7], Funk et al. [13] did a long-term analysis
of their SAR assistance system. The researchers equipped
an assembly line of a car manufacturing company with
projectors and depth cameras and tested their prototype
over 11 work days with expert and untrained workers. The
depth images were used to detect the picking of boxes in
a speciﬁc location and direct feedback was given by a top-
mounted projector. Subsequently, the task completion time,
error rate and NASA-TLX scores were compared and found
no improvements when comparing in-situ instructions with
no instructions. Instead, it was observed that the assistance
system was useful for untrained workers during the learning
phase and the researchers suggest that there is a tipping
point after which the assistance system loses its beneﬁts,
thus suggesting that AR assistance systems are best for
knowledge transfer and helping untrained workers to learn
new workﬂows. Similar to our work, Chu et al. [8] recently
published the full framework of an AR assistance system to
assemble Dougong structures. Their AR smartphone app uses
object recognition to identify relevant parts of the current
assembly step and then helps with the assembly process by
displaying AR animations. Object recognition and tracking
is handled by the AR library Vuforia and the display of
assembly instructions are implemented with Unity.

While most studies of AR assistance systems are done in
a laboratory environment [10], Lorenz et al. [14] analyzed
requirements of three different production environments in
the real world and conclude that rugged tablet computers
are the best hardware choice because of harsh production
environments and the worn safety gear of the workers.
The researchers point out that HMDs, which are the most
researched AR hardware [10], are neither robust nor can they
be worn with protective gear. Additionally, Wolfartsberger et
al. [15] also noted that the current generation of HMDs still
has many disadvantages and recommend using a ﬁxed tablet
screen or in-situ projection.
In comparison to the state of the art on AR assistance
systems, our work is based on deep neural networks for
object detection and human pose detection. The addition
of our action detection system enables the AR system to
analyze the workers actions and incorporates the trending
ﬁeld of human-object interaction into assistance systems. In
contrast to other works [12], [7], [13], we describe the full
framework of our system architecture. Because our machine-
learning-based system only relies on RGB video input and a
monitor for display, our assistance system is very ﬂexible and
complies with the compiled requirements of [14] for harsh
industrial environments.

III. METHODOLOGY

Our objective is to provide an intuitive system that aims to
increase the efﬁciency of the user by using the following
integrated features: detailed process step descriptions, visual
hints using AR visualizations and video hints by using video
tutorials. All these features make sure to decrease the time
spent of looking for additional sources of information, which
potentially interrupts the workers focus, thus decreasing his
efﬁciency. Another objective is the prevention of errors or
the timely detection of errors such that the user can instantly
react. The assistance system aims to reduce the error rate
by the use of the following implemented features: action
error detection, object identiﬁcation, step validation and error
prevention - through the use of detailed instructions, hints
and guiding AR elements.

A. System Architecture

The overall architecture of our proposed assistance system
can be observed in Fig. 2. It offers a high-level view of
the system and highlights all entities. As illustrated in the
system design, the main business logic is divided between a
Step Detection and a Scenario Handler. The Step Detection
consumes the camera input in form of frames. The Scenario
Handler provides the step requirements such as necessary
objects and actions the worker has to do at the respective
steps. These information are sent to the object and action
detection models, which are running in parallel in order to
increase the speed of image processing and therefore assure
faster responsiveness. We used a Faster R-CNN architecture
[16] for object detection with an Inception v2 model [17],
while OpenPose [18] together with a neural network based
frame classiﬁer are utilized for the action detection. After

Fig. 2: System design of our proposed assistance system

the models process the frame, the results are sent as a tuple
to a queue which the Camera View Controller pulls and
displays to the user. The Scenario Controller is responsible
for evaluating these results in order to display possible
errors or wrong actions. Furthermore, it is also responsible
for displaying AR components to assist the user in ﬁxing
these errors and giving supplementary hints. Additionally, in
order to improve the decision making accuracy and avoid
ﬂickering of data, a smoothing module is employed which
runs over the last 10 frames and takes the result with the
highest occurrence to be considered truth. In case the step
was successfully validated, the Scenario Controller sends a
validation event back to the Scenario Handler which moves
to the next step. Once a new step is initiated, the Scenario
Controller is notiﬁed by the event and displays it in the
description of the new step. In case a step was not validated,
an error event will be published which notiﬁes the Scenario
Handler to display an error/warning message through the
Error View.

B. Action Detection

In order to recognize the workers actions and thereby
the correctness of the users action, we use the
detect
skeleton-tracking-based pose detection of OpenPose over
a series of frames together with a neural network classi-
ﬁer in our assistance system. The implementation is based
on the open source project Realtime-Action-Recognition by
Chen et al [19]. First, we calculate the joint velocities from
a series of N=5 frames using the formulas described in
equation (1) to (4). Afterwards, the actions are derived by
a neural network which outputs the classiﬁed action. To
retrieve the joints of each frame, the OpenPose algorithm
is trained to detect the human skeleton from an image. The
input to OpenPose is an RGB image acquired from the
camera and the output is the skeleton of the human.
The raw skeleton data output of OpenPose is pre-processed

with the following three steps that are being proposed
by [19] and applied to our use case:

1) Coordinate scaling - As OpenPose has a different unit
for x coordinate and y coordinate, the output joint’s
position must be scaled.

2) Removal of unnecessary joints - Mainly, the move-
ments of arms and hands are relevant for our use case,
thus the joints for the head are removed to reduce the
vector size.

3) Padding of missing joints - To enhance robust-
ness against inconsistent detections, we incorporate a
padding with detections of the previous frames in case
joints are missing.

The joint positions are retrieved and joint positions from
N=5 consecutive frames are considered to calculate the joint
velocities and derive the user action. First, the height of the
body H is calculated to ﬁnd the average coordinates x1, y1
between the two hips that are represented by the coordinated
pairs: left hip: (x11, y11) and right hip: (x12, y12).

x1, y1 =
(cid:113)

H =

x11 + x12
2

,

(y11 + y12)
2

(x0 − x1)2 + (y0 − y1)2

(1)

(2)

Subsequently, the normalized joint positions Xn can be cal-
culated using the initial joint coordinates X. Finally, the joint
velocity Vi for all joints can be calculated where i represents
the list of all joints and [tk] is the frame number from the
series of the 5 frames.

X
H
Vi = Xn[tk] − Xn[tk−1]

Xn =

(3)

(4)

These features are concatenated and given as input into a

all assistance features. Table I shows the instructions of the
test scenario. A total of 30 participants (13 female, 17 male)
from various backgrounds were recruited. The participants
were aged from 20 to 45. 17 out of the 30 participants had a
technical background. The rest had a business, medical, law
or construction related background.

TABLE I: Task instructions

Step number

Explanation

1

2

3

4

5

6

7

8

9

Please make sure to have all required tools available on
your work table.

Pick up the drill and make a whole around 3 cm deep on
the board at x = 10cm, y = 15cm, where the short side
of the board is considered the x-axis and the longer side,
the y-axis.

Find the screw bit inside the grey box and change the
drill bit to a screw bit.

Find the green box and pick a screw.

Secure the screw with the drill into the previously made
hole.

Find the wooden board underneath your working station
and place the board on the table.

Pick the pencil and mark two spots with the pencil on the
following coordinates on the board: 1) x = 5cm, y = 20cm
and 2) x = 15cm, y = 20cm.

Then, measure the distance between the two holes and
mark the middle point.

Pick up the hacksaw and saw the board in 2 based on
the previously made middle mark.

IV. EVALUATION

To test whether the assumptions from the conceptual design
were correct and if all the features led to an improved time of
completion the task, we measured the task completion time
as well as error rate in two modes as described above. In the
ﬁrst mode, denoted as mode 1, all features were removed
except for the step instructional text and the users were asked
to complete the scenario. In the second mode, denoted as
mode 2, we activated all the features and asked them to
complete the tutorial. To eliminate the possibility that the
user might have learned the task during the ﬁrst stage, which
could affect the second stage, we split the group into half
and asked the ﬁrst group to begin with mode 1 while the
second group began with mode 2 using the AR assistance
system.

A. Completion Time

First, we evaluated the time difference between the two
modes in order to determine if the assistance system leads to
a reduced time to task completion. The results are captured
in Fig 4. It can be observed that a substantial execution
time improvement was achieved when using our system. In
every case an improvement occurred. In 10% of the cases
the improvement is over 2 minutes which represents 33% of
saved time. On average, the assembly duration decreases by
69 seconds or 20%. As the scenario was relatively simple
and does not require highly specialized skills, we can expect
even better results in the case of very complex scenarios.

Fig. 3: Graphical user interface with AR components (top)
text and video for additional information as well as warnings
or error messages (bottom)

3 layer fully connected neural network to classify the users
action.

C. Graphical User Interface

Fig. 3 illustrates the most important features of our Graphical
User Interface (GUI), which is implemented as a cross
platform application using Kivy. It includes AR components
such as virtual hints of relevant areas within the working
place and animations that describe the task visually. Text
ﬁelds are displayed to inform the user about tasks or errors.
Additionally, videos can be displayed, which provide addi-
tional information. The progress bar at the bottom displays
the step a worker is currently in and the watch counter at the
top left shows the time passed in order to provide a reference
to the user. To display the AR components and animations,
we used an anchor based calibration, which means that we
utilized the position of a detected object as an anchor to
displays the AR features with respect to that object. This
way, we ensure the ﬂexibility of our system by not relying
on manually aligned positions. We employ a database where
the speciﬁc display positions of AR components with respect
to the objects are listed accordingly.

D. Experiments

In order to evaluate the impact of our system on the worker,
we conducted a series of user studies. For that reason, a
special assembly scenario consisting of 9 steps was created
which reﬂects all the features of the system such as: object
detection, action validation, interface enhancement through
AR elements and additional hints through video tutorials.
Depending on the scope of the user study, certain features
were activated or deactivated in order to study their impact.
To create a comparable baseline, we provided a basic version
of the system where we disabled any additional features
and only kept descriptions of the 9 steps. Subsequently, we
compared this baseline against our assistance system with

randomly sampled from the same distribution. For the error
rate, we found a highly signiﬁcant difference between the
groups as well (p=9.3E-4). The statistical analysis provides
strong evidence that our assistance system reduces comple-
tion time and reduces error rate signiﬁcantly in untrained
workers when performing the given task for the ﬁrst time.

D. User Acceptance

We evaluated the impact of different components of the
assistance system by masking out speciﬁc components during
the experiments.

Fig. 6: User acceptance of speciﬁc AR components.

As depicted in Fig. 6, AR elements are considered to be the
most useful feature of the GUI. The most popular arguments
of the participants included phrases such as "offers extra
info", "requires less thinking" and "easy to understand". This
indicates that the user acceptance to receive such visual cues
is strong. Interestingly, a correlation between "most useful"
and "needs improvement" can be observed. Because users
put importance on certain features, they also demand that
these features work highly accurate. The top arguments for
the ﬁrst two results in the "needs improvement" column were
"sometimes elements are slightly off" and "bounding boxes
are not always precise". The watch counter was elected as
the least useful feature with over 50% of the votes. Users
described it as "not providing any value", "not noticeable"
and "does not help with the assembly". Such feedback leads
us to believe that the watch counter as a metric should not be
used by the worker himself, but rather by managers in order
to assess the efﬁciency of a worker and judge his progress.
In the "Bothersome" category, 40% of the questioned users
did not ﬁnd any of the features to be irritating, which shows
that the implemented features complement each other and
create an effective learning environment. On the other hand,
AR elements and object identiﬁcation were reported as being
"too obvious" and "not necessary". However, we believe that
these arguments might be inﬂuenced by the relatively low
complexity of the tutorial scenario and the common tools
used therein. We expect such features to be more valuable
in more complex and unknown scenarios.

Fig. 4: Task completion time

It is worth noting that during the user study, people with
slightly higher technical inclinations performed better (can
be noted in participant 3, 4, 8, 19 and 23), requiring less time
to complete the tutorial compared to people who have other
professional backgrounds where the use of GUI elements
decreased the assembly time (can be noted in participant 5,
20, 21 and 28).

B. Error Rate

In the next step we tracked the number of errors the user
did on each iteration while doing the above experiment and
compared the two modes against each other. The results are
illustrated in Fig. 5. The following instances were considered

Fig. 5: Error Rate

to be errors: grabbing the wrong tool, missing a tool on the
working station, performing a wrong action, moving to the
next step although the current task was not fully completed
and placing an object in the wrong position. Only three users
managed to complete the tutorial scenario without any errors
on the ﬁrst try. The rest (90%) made at least one error.
The maximum number of errors registered per person was
participant 4. During the experimental phase, it was noted
that after committing their ﬁrst mistake users became more
alert and started paying more attention to the instructions in
an effort to avoid further mistakes. While the average error
rate is already small during mode 1 (without AR assistance)
with an average of 1.53 errors per user, we still notice a
substantial improvement by activating all features in mode 2.
Furthermore, one third of users managed to complete the
tutorial without any errors during mode 2.

C. One-way ANOVA

E. Learning Curve

We performed a one-way Analysis of variance (ANOVA)
on the data for task completion time (Fig. 4) and error
rate (Fig. 5). For the completion time, we found a highly
signiﬁcant difference between the two groups (p=4.83E-8),
therefore rejecting the null hypothesis that both groups were

Lastly, in order to assess the users learning curve, we picked
10 participants out of the original group and asked them to do
the same scenario 20 times with and without our assistance
system. We then measured each time to complete the task.
The results are illustrated in Fig. 7. The completion time

converges at the 14th iteration while using mode 1 (without
AR assistance) and at the 10th iteration in mode 2 (with AR
assistance). Notably, without the usage of the AR assistance

aspire to extend the user studies to include more complex
scenarios and participant groups. Moreover, we aim to add
more sophisticated architectures and functionalities to the
system to enhance user understanding even further.

REFERENCES

[1] D. Preuveneers and E. Ilie-Zudor, “The intelligent industry of the
future: AÂ˘asurvey on emerging trends, research challenges and oppor-
tunities in industry 4.0,” Journal of Ambient Intelligence and Smart
Environments, vol. 9, no. 3, pp. 287–298, Apr. 2017.

[2] M. Lorenz, M. Ruessmann, R.

and
4.0.
in
M. Bolle.
https://www.bcg.com/publications/2015/
[Online].
technology-business-transformation-engineered-products-infrastructure-man-machine-industry-4.
aspx

Strack, K. Lueth,
industry

(2015) Man
Available:

and machine

Fig. 7: Learning curves of assistance system (blue) and text
based instructions only (green)

users achieve faster task completion after convergence was
reached, with the best result requiring only 1:13 minutes
while the shortest completion time when using the assistance
system is 1:40 minutes. This indicates that the assistance
system can help workers learn new workﬂows faster but
decreases the efﬁciency when the user is already familiar
with the task. It is evident that after familiarization with
the tasks, completing without the assistance system results
in faster completion time as the additional features might
become distracting. Furthermore, the scenario was relatively
simple. In order to infer more meaningful results, the study
has to be extended to more complex tasks in further research.
Nevertheless, our study gives empirical evidence that there
is a point in time after which AR assistance systems lose
their beneﬁts for untrained workers. In our case, this is after
13 iterations of the same task.

V. CONCLUSION

We proposed an AR-based industrial assistance system by
incorporating established neural network architectures for
computer vision tasks to assist and train workers in manual
processes. We combined a robust object detection model with
a human pose detection model to recognize the users actions
only on RGB camera input and display hints and visual
cues accordingly. Furthermore, we integrated and evaluated
several AR-based components and additional methods such
as video input or animations to assess the impact on user
experience and understanding. The system was evaluated in
a variety of relevant metrics for industrial applications such
as time to task completion, error rate, user acceptance and
learning curve. We performed a one-way ANOVA and found
a highly signiﬁcant (p<0.001) improvement in time efﬁciency
and error rate. Furthermore, the results indicated a promotion
of the learning curve especially for new employees and was
highly accepted by participants in the early stages. However,
we observed a negative impact with further iterations of
the task. This might be attributed to our relatively simple
tasks which we conducted for demonstrative purposes. We

[3] Cedefop, Skills forecast : trends and challenges to 2030. Luxembourg:

Publications Ofﬁce of the European Union, 2018.

[4] L. F. de Souza Cardoso, F. C. M. Q. Mariano, and E. R. Zorzal,
“A survey of industrial augmented reality,” Computers & Industrial
Engineering, vol. 139, p. 106159, Jan. 2020.

[6] Bosch.

[5] T. Masood and J. Egger, “Augmented reality in support of industry
4.0—implementation challenges and success factors,” Robotics and
Computer-Integrated Manufacturing, vol. 58, pp. 181–195, Aug. 2019.
(2019) Bosch augmented reality applications now also
work with the new microsoft hololens 2. Robert Bosch GmbH.
[Online]. Available: https://www.bosch-presse.de/pressportal/de/en/
bosch-augmented-reality-applications-now-also-work-with-the-new-microsoft-hololens-2-183680.
html

[7] A. E. Uva, M. Gattullo, V. M. Manghisi, D. Spagnulo, G. L. Cascella,
and M. Fiorentino, “Evaluating the effectiveness of spatial augmented
reality in smart manufacturing: a solution for manual working sta-
tions,” The International Journal of Advanced Manufacturing Tech-
nology, vol. 94, no. 1-4, pp. 509–521, Aug. 2017.

[8] C.-H. Chu, C.-J. Liao, and S.-C. Lin, “Comparing augmented reality-
assisted assembly functions—a case study on dougong structure,”
Applied Sciences, vol. 10, no. 10, p. 3383, May 2020.

[9] E. Bottani and G. Vignali, “Augmented reality technology in the man-
ufacturing industry: A review of the last decade,” IISE Transactions,
vol. 51, no. 3, pp. 284–310, feb 2019.

[10] J. Egger and T. Masood, “Augmented reality in support of intelligent
manufacturing – a systematic literature review,” Computers & Indus-
trial Engineering, vol. 140, p. 106195, Feb. 2020.

[11] T. Caudell and D. Mizell, “Augmented reality: an application of
heads-up display technology to manual manufacturing processes,” in
Proceedings of the Twenty-Fifth Hawaii International Conference on
System Sciences.

IEEE, 1992.

[12] F. Loch, F. Quint, and I. Brishtel, “Comparing video and augmented
reality assistance in manual assembly,” in 2016 12th International
Conference on Intelligent Environments (IE).

IEEE, sep 2016.

[13] M. Funk, A. BÃd’chler, L. BÃd’chler, T. Kosch, T. Heidenreich, and
A. Schmidt, “Working with augmented reality?” in Proceedings of the
10th International Conference on PErvasive Technologies Related to
Assistive Environments. ACM, jun 2017.

[14] M. Lorenz, S. Knopp, and P. Klimant, “Industrial augmented reality:
Requirements for an augmented reality maintenance worker support
system,” in 2018 IEEE International Symposium on Mixed and Aug-
mented Reality Adjunct (ISMAR-Adjunct).

IEEE, oct 2018.

[15] J. Wolfartsberger, J. Haslwanter, and R. Lindorfer, “Perspectives on
assistive systems for manual assembly tasks in industry,” Technologies,
vol. 7, no. 1, p. 12, jan 2019.

[16] S. Ren, K. He, R. Girshick, and J. Sun, “Faster r-cnn: Towards real-
time object detection with region proposal networks,” in Advances in
neural information processing systems, 2015, pp. 91–99.

[17] C. Szegedy, V. Vanhoucke, S. Ioffe, J. Shlens, and Z. Wojna, “Rethink-
ing the inception architecture for computer vision,” in Proceedings of
the IEEE Conference on Computer Vision and Pattern Recognition
(CVPR), June 2016.

[18] Z. Cao, G. H. Martinez, T. Simon, S.-E. Wei, and Y. A. Sheikh,
“OpenPose: Realtime multi-person 2d pose estimation using part
afﬁnity ﬁelds,” IEEE Transactions on Pattern Analysis and Machine
Intelligence, 2019.

[19] F. Chen, “Multi-person real-time action recognition based-on human
skeleton,” in EECS Pattern Recognition, 2019. [Online]. Available:
https://github.com/felixchenfy/Realtime-Action-Recognition

