Real-time Collaboration Between Mixed Reality Users in Geo-referenced
Virtual Environment

Shubham Singh

Zengou Ma

Daniele Giunchi

Anthony Steed

University College London

0
2
0
2

t
c
O
2

]

C
H
.
s
c
[

1
v
3
2
0
1
0
.
0
1
0
2
:
v
i
X
r
a

ABSTRACT
Collaboration using mixed reality technology is an active area of
research, where signiﬁcant research is done to virtually bridge phys-
ical distances. There exist a diverse set of platforms and devices that
can be used for a mixed-reality collaboration, and is largely focused
for indoor scenarios, where, a stable tracking can be assumed. We
focus on supporting collaboration between VR and AR users, where
AR user is mobile outdoors, and VR user is immersed in true-sized
digital twin. This cross-platform solution requires new user expe-
riences for interaction, accurate modelling of the real-world, and
working with noisy outdoor tracking sensor such as GPS. In this
paper, we present our results and observations of real-time collabora-
tion between cross-platform users, in the context of a geo-referenced
virtual environment. We propose a solution for using GPS measure-
ment in VSLAM to localize the AR user in an outdoor environment.
The client applications enable VR and AR user to collaborate across
the heterogeneous platforms seamlessly. The user can place or load
dynamic contents tagged to a geolocation and share their experience
with remote users in real-time.

Index Terms: Human-centered computing—Human computer in-
teraction (HCI)—Interaction paradigms—Mixed/augmented reality;
Human-centered computing—Visualization—Visualization appli-

cation domains—Geographic visualization;

1 INTRODUCTION
Collaboration is arguably the most prominent potential applications
of mixed reality (MR) and virtual reality (VR) technologies. It
allows one to connect with geographically (or physically) distant
users immersively using the graphical interface of the computer.
Some of the common use-cases of collaboration in mixed reality
includes - virtual training, teleoperations, telexistence, immersive
communication, etc. [5, 30, 36]. One important point to note is the
collaborative mixed-reality is an asymmetric experience, the visu-
alization and experience of virtual content varies between MR and
VR user. The MR presents a combination of the virtual environment
and the real world in three-dimensional space to the user, whereas,
in VR, the user is completely immersed in the virtual world and
blocked from the real-world. For a collaborative system, this poses
a variety of unique challenges, like - freedom of movement, method
of interactions, synchronization across platforms, etc.

The remote collaboration between users across the platform is an
active area of research and development in virtual reality [4, 5, 17,
30]. Most of the recent collaboration efforts are centred for indoor
experiences and homogeneous platforms (either mixed or virtual
reality). For example, collaboration in ”Spatial” [33] is targeted
for mixed-reality devices (i.e. MS-Hololens) only, and Microsoft
”Azure spatial anchors” [24] supports multiple platforms, but strictly
ties the content to the local scanned space of users. Restricting the
scale of experience to local environment and inaccessible for VR
users.

The collaboration across heterogeneous platforms that support
AR and VR is challenging, in the sense that the AR platform has
an added dimension of the real-world along with virtual. The AR
users are constrained by real-world conditions such as freedom of
movement, spatial obstruction/distractions, size of the virtual model,
etc. Whereas in VR, the entire world is simulated and independent
of users’ physical space. Users in VR can adapt to the virtual
environment and its different factors such as the speed of movement,
size of avatars, etc. [18]. During the collaboration, the user in VR can
not see the physical world of the AR user or their environmental state,
like - trafﬁc signals, events, etc. The remote VR user is oblivious to
physical obstructions around the AR user, which might disrupt their
experience. These differences may also pose accessibility issues
for AR users, where the virtual content is not reachable. Other than
accessibility and environmental differences, there are also challenges
with visual cues and sense of agency. VR users can move and
navigate much faster in the virtual world as compared to AR users in
the physical world, this would pose a problem of tracking visual cues
for AR users. Furthermore, the design guidelines for creating mixed
reality experience is very diverse and lack standardization [10].

Further, there have been efforts to implement AR or MR experi-
ence with spatial understanding [30, 33, 38], but, it usually focuses
on the understanding and mapping of physical world space rather
than localising the user on a geographical space. We have found
only one study on the applications of collaborative MR in geograph-
ical context [3]. Thus it seems that the geographical context and
large scale application of Mixed reality is largely unexplored. The
extended scale MR application can unlock new potential for the
technology, which will allow the users to create and consume infor-
mation/contents on geographical location/scale and also share it with
others. The geolocation will add more gravity to information, and
immersive 3D content will provide enriched ways of interactions.

Accurate location tracking of the user is necessary for real-time
collaboration on such a large scale environment. The inaccurate
tracking of sensors and misalignment of information contents will
result in a very disconnected experience and undesirable glitches.
For VR users, since everything is simulated virtually, we can ac-
curately determine the users’ position with respect to the virtual
map and place virtual contents over the map accurately. But in the
case of the AR user, we need to rely upon the Global Positioning
System (GPS) tracking or Visual Inertial Simultaneous Localiza-
tion and Mapping (VISLAM) system to localize the AR user. GPS
alone is not reliable for accurate tracking of the users’ motion, and
VISLAM is not suitable for large scale applications due to scaling
and accumulation of errors. To obtain accurate and reliable results,
VISLAM requires detecting enough distinct features and accurate
motion detection from onboard device sensors like accelerometers
and gyroscopes. For a real-time collaboration application, the inac-
curacy in the tracking of AR users may result in poor effects such as
spatial jittering of users’ avatar and false positional values, and other
inconsistencies in synchronization of experiences. These issues will
break the collaboration with other users in the session.

To implement collaboration between users on different platforms,
we have included the following features - voice conferencing, free-
hand drawing in 3D space, and some dynamic experiences (like -

 
 
 
 
 
 
360 photosphere and guided tours). Although these features are
common for MR applications and in collaboration, we present our
approach to implement these features with geosynchronous context.
For instance, the relevance of 360 Photosphere gets enhanced when
placed at a geographical location. This gives a portal-like experience
to the AR user while providing realistic geographical information for
VR user. Further, we demonstrate a working solution to reinforce the
GPS accuracy using ARCore VSLAM system for smooth tracking
of AR user and synchronization with remote users for collaboration.

2 RELATED WORKS

In this section, we will discuss four topics related to our work - GPS,
VISLAM, hybrid methods and collaboration. We will ﬁrst introduce
GPS and VISLAM respectively and then compare their plausibility
in the context of collaboration using MR. Then, we will explore stud-
ies that tried to combine different technologies to enhance the AR
tracking system. Many user experience (UX) and human-computer
interaction (HCI) studies are trying to explore which factors affect
the experience and how to naturally present the virtual/synthetic
information to both VR and AR users collaboratively. Our project is
motivated by related research works.

2.1 GPS for AR tracking

GPS is an earth-orbiting satellite-based navigation system [8]. Due
to the scale and the accessibility, GPS is the main choice as an
outdoor tracking system for mobile devices. For example, Thomas
et al. [38] in 2002, demonstrated their outdoor AR gaming system -
ARQuake, where they have implemented tracking for the AR system
using Differential GPS (DGPS).

However, using GPS tracking will result in an offset and con-
tinuous ﬂuctuation by several meters away from the true location.
Benford et al. [3] showed that in their game, which used GPS and
Wiﬁ for tracking users’ positions, the GPS resulted in errors ranging
from 1m to 384m. There are multiple reasons for GPS inaccuracy,
and they are inevitable. Selective availability is a primary source
error, which was purposely imposed by the US Government to re-
strict the accuracy of the GPS [28]. Some errors are introduced by
the atmosphere, like the Ionospheric delay and Tropospheric delay.
Some ascribe to the surrounding around the GPS receivers, like the
multipath interference, the superposition of multiple GPS signals, or
even the attenuation by the concrete [8, 19]. Another complicating
factor is that the satellites are in non-stationary orbit, the user stand-
ing at the same location will get varying GPS signals [34]. These
error sources result in poor GPS accuracy.

Researchers are attempting to make the GPS more reliable and
accurate. Mobile phones are typically using Assisted GPS (A-GPS)
to increase sensitivity and signal availability.
Information, like
GPS health and ionospheric model, can be used to help detect GPS
signals by calculating the frequency of each satellite due to Doppler
shifting [40].

Various signal receivers or processors may store or transmit GPS
values with different decimal places. It can cause rounding errors
from a few centimetres to a couple of meters. Because of the pre-
cision errors, the virtual objects will be placed with offsets so that
they can be beyond the physical boundaries. Thus, they may not
be visible or accessible to AR users. Also, the alignment or offset
problems will confuse GPS based synchronization and collaboration
between VR and AR users. Therefore, the GPS signals alone are not
sufﬁcient for AR, especially for cross-platform collaboration.

2.2 VISLAM for AR tracking

Visual Inertial SLAM (VISLAM) augments the SLAM (or GPS)
using external sources like inertial measurement unit (IMU) to lo-
calize the sensor/camera.
If manually created landmarks of the
environment or GPS signals are available, the advance computer
vision methods may not be required to improve the accuracy. For

example, ARQuake used GPS for most of the time, but if there
were landmarks on the wall, the system would switch to use the
landmarks as they provided more accurate locations [38]. However
it’s not practical to place landmarks (ﬁduciary markers) manually in
different physical environments, thus we need more automated and
robust method. VISLAM provides an alternative with the absence
of preloaded maps in the mobile devices [7]. VISLAM addresses
the method of creating a map of an environment from a continu-
ous sequence of images [9, 32]. Depth information is calculated
by using different images of the same scene with distinct feature
points [2,21]. Also, information from the Inertial Measurement Unit
(IMU) sensors, like accelerometers and gyroscopes [15], is used to
determine the camera positions and orientations in real-time and
improve the noisy estimations with Kalman ﬁlter [11]. VISLAM
is a robust tracking [16, 37] for indoor environments with stable
light conditions and sufﬁcient feature points. Therefore, for most
of the AR application, VISLAM is an ideal approach. Apple and
Google released their AR toolkit (ARKit and ARCore respectively)
for developers using this method for tracking.

VISLAM alone is not sufﬁcient to localize the user/camera in
geospatial coordinate. Since positional tracking is relative to the
starting point of the local user and does not take geolocation into
account, we can not use it for cross-platform collaboration that re-
quires a global coordinate system. Thus we look for hybrid solutions
to combine the GPS scale with VISLAM precision.

2.3 Hybrid of GPS and VISLAM

Over the last decade, the progress in VISLAM has enabled outdoor
tracking [15, 20, 23, 25, 37]. Nonetheless, it is still challenging to use
VISLAM as an outdoor tracker for AR applications as it suffers from
issues like - dynamic environment, changing illumination, scaling
errors, etc. Researchers are trying to leverage the strength of GPS
and VISLAM to get a better result for outdoor AR tracking.

Vineet and Amir [14] demonstrated the use of GPS signals and
3 degrees of freedom (DOF) orientation sensors to track AR users’
outdoor positions and demonstrated CAD model in an outdoor envi-
ronment. Schleicher et al. [31] showed the improvement of outdoor
GPS tracking by combining with SLAM system. These research
work has inspired us to combine GPS and SLAM, which provides
6 DOF (both translation and orientation). Daniel and Todd [32]
showed the plausibility of this idea by fusing bundle adjustment-
based VSLAM and differential GPS, to obtain precise GPS and
altitude measurement. In this paper, we prototyped a similar idea
by using VSLAM of ARCore and device GPS to get a cheaper and
more accessible solution.

2.4 Cross-Platform Collaboration

In present days, digital communications and long-distant teleconfer-
encing have become the norm for personal and professional commu-
nications. However, there is still a huge gap between audio-video
(AV) conferencing and face-to-face communications, since people
not only use speech but also different gestures, gaze and other non-
verbal cues to express their ideas and thoughts [5]. To show more
explicitly the expressions, poses or movement, avatars can be used
in virtual telepresence applications. In research studies, participants
have reported a much stronger sense of presence in virtual conferenc-
ing than traditional audio or video conferencing [4, 35]. In the last
decade, the shared virtual environment has developed signiﬁcantly
and seen larger adoption from people. Kiyokawa et al. [17] initiated
a novel idea which allowed cross-platform collaboration between
AR and VR. Our design will expand in this area by creating an
application that can bring remote people into a common geographic
location for a collaborative experience.

In previous studies, many collaborations were carried in a way
that one user, who could see an overall view, helped the other with
an egocentric viewpoint to do some tasks [6, 13, 26]. From the

previous works, people can identify the factors that will affect users’
performance in cross-platform collaboration. Piumsomboon et al.
[30] pointed out several methods to enhance AR and VR interactions
with gestures, head rotation, and eye gaze. They stated that virtual
cues could improve awareness of remote collaborators, and the size
of the avatar could inﬂuence the collaborative behaviours. Similarly,
Oda et al. [26] used the advantage of the virtual cues to convey
instruction of assembly more effectively.

Our application provides egocentric viewpoints to the users on
each platform. Instead of one user giving a set of instructions to the
others, we allowed users to experience the same scenario without
the restriction of their locations or any physical difﬁculties.
In
another study of adaptive avatars Piumsomboon et al. [29] pointed
out that, with redirected gaze and gestures, the performance of
remote collaboration can be enhanced as non-verbal information
can be easily conveyed. Hence, complex animation of the avatars,
head and eye gaze of the VR users can also be added to enrich the
immersive experience further and support collaboration.

2.5 Digital Twins
With the accelerated progress in the ﬁeld artiﬁcial intelligence (AI),
internet of things (IoT), virtual reality (AR or VR) and big data,
there’s no dearth of visionary projects like - virtual Oulu [1], Paris
2.0, digital build Britain [27], etc. Where the efforts are underway
to combine these technologies to create a digital model of any city,
also referred to as ”Digital Twin” [12]. Madni et. al. [22] deﬁne the
digital twin as -

A Digital Twin is a virtual instance of a physical system
(twin) that is continually updated with the latter’s perfor-
mance, maintenance, and health status data throughout
the physical system’s life cycle.

The virtual reality (VR/AR) is a perfect medium for visualization
and consumption of such huge amount of data intuitively. The Digi-
tal twin model is currently being used for providing an extensible 3D
interface of the city, virtual collaboration, geographical information
system (GIS), etc. [1]

3 SYSTEM
Our goal is to build an application that allows AR and VR users
to collaborate synchronously in real-time in the same geographical
location. In this section, we will describe the implementation and
architecture of our solution and motivate the design decisions that
we have made during the development.

3.1 Design
To get the geographical data, we needed a map service that can be
used on multiple platforms (Windows and Android for this project)
and ﬂexibility to control the map data and visualization. Mapbox
provides an easy to use SDK with features, like – customizable
tilemaps, layers for map data, procedural building and textures,
feature modiﬁers, etc. which make it ideal for our solution. For mul-
tiplayer networking we have using Photons’ real-time networking
solution called ”photon unity networking” (PUN). Photon provides
easy to use SDK for Unity3D and free to use cloud server for up to
20 concurrent users.

The architecture of AR and VR client applications is shown in
Fig. 1. The key differentiation between the two client applications is
in terms of the tracking of geolocation and visualization. The AR
user sees the virtual map environment and information overlaid on
top of the live camera feed. In contrast, the VR user is completely
immersed in the virtual world and cut-off from the physical world.
For AR users, we use the corrected GPS position with respect to
the local map coordinate system For VR users, we can directly
determine the users’ position in local virtual map coordinates. Apart
from these key architectural differences, there are other lower level

Figure 1: Client application architecture (Combined representation for
AR and VR). Blocks are color coded, where red is for AR platform,
Blue for VR platform and green is common across platforms.

Figure 2: Menu settings for virtual map alignment (left) and geo-tagged
label (right) in AR

differentiation for input systems and interaction for different features
of the application.

We have used Mapbox service to create virtual tilemaps and 3D
procedural world. Mapbox procedurally generates 3D buildings,
textures, and vegetation using depth and layer information from
world map (taken from open-source data such as - OpenStreetMap
and NASA). It then places these 3D features over tilemap with
respect to geolocation and assigns a unique ID for each building.
It uses primitive polygons (like cube and triangles) to construct
the buildings and environment, which may not be desirable for a
context-aware application. The procedurally generated objects and
buildings can be replaced with custom models and prefabs using
the ”feature modiﬁer” option from the SDK. We have replaced the
primitive buildings with our own realistic 3D models to create a
more realistic experience and provide geographical landmark cues.

The default voice setting for the user is set to 3D (Spatial) so that
they can have a spatial understanding of remote users and have a
more immersive experience during collaboration and group tasks.
Further, the audio can be switched to 2D mode, which allows users
to communicate irrespective of their virtual distances with everyone
else.

3.2 Static GPS correction

Map alignment is an essential step for correcting the registration of
AR users for global positioning (GPS). Since the GPS reading can
vary from 1m to 384m [3] depending upon location and coverage,
its raw value is not usable for real-time collaboration. Thus manual
alignment is essential step at the beginning of every session to correct
the map positioning and orientation manually. The user can align
the virtual map manually by using touch and drag input on the
orthographic top-view, as shown in the Fig. 2. Once this is done,
the tracking can be reliably done in an outdoor area. The alignment
can be done in middle of session as well, in case the tracking gets
wrong.

3.3 Dynamic GPS correction

In previous sections, we have discussed on the manual correction of
the GPS tracking for AR user and map alignment. The precise loca-
tion tracking is very important for real-time interaction with remote
users. To improve the GPS tracking, we have linearly combined the
GPS value from the device with the VISLAM system of ARCore.
GPS value from the device is used to determine the initial location
of the AR user. Once the starting position of the AR user is set, the
default GPS mode is disabled from settings to use the corrected-GPS
mode. The ARCore regularly provides the virtual camera transform
using visual SLAM. We take this updated transform and ﬁnd its
relative position from the maps starting point and calculate the cor-
rected GPS positions for the virtual camera with respect to local
map coordinates. This new corrected GPS value is then broadcast
to all the participants in the session. For VR users, we can get the
effective GPS value from their virtual map coordinate system. The
local user will determine their GPS value (corrected-GPS for AR
user and virtual GPS for VR user) and broadcast it to all the partici-
pants in the session. The received GPS values from remote users are
then converted into the local coordinate system for positioning and
visualization. That’s how users over different platforms and location
synchronize the position of virtual objects and avatars using the GPS
value.

3.4 User Avatar

For cueing the presence of a remote user, we have implemented a
full body avatar with animation states. Presently there are only
two animation states of – Idle and walking, but this can easily
be extended to include more intricate inverse kinematic (IK) and
blendtree animations. The animation states are synchronized with
remote users using remote procedure calls (RPCs). Steed et al. in
2016 pointed out that self-avatar would enhance a user’s cognition
in the virtual environment and provide more direct information in
manipulation and communication [35]. Although in our case, we
disabled the avatar body for local user and enabled it only for remote
users. We decided to avoid implementing complex animation states
for VR users and to keep it consistent with the experience of AR
users, in which case we only have a virtual camera to control the
avatar.

3.5 Free hand drawing

Normally, in collaboration applications, we observe that draw-
ing/annotation is synchronized by the stroke or line basis. We have
implemented the spatial drawing (in 3D space) using pointwise syn-
chronization to give real-time visualization experience. Drawing
settings for both VR and AR users provides different options for

Figure 3: Interactive 360 Photosphere (left) placed at (51.522771,
It holds a captured 360 image of the place. On right,
-0.131833).
we see multi-user collaboration, where 3 users are in session and
watching a video displayed on right wall and drawing in 3D space.

brushes, size, and colour. Currently, we have used four different
types of brush which varies in animation and shape.

For freehand drawing, we had two methods for implementation.
First using the line renderer and second using a mesh-based approach.
We followed the later one to get more control over the geometry
of the line and using vertex shader for rendering different effects.
For drawing in VR, the user press and holds the right trigger button
and then moves the controller in 3D space freely Fig. 4. In AR, the
user touches and holds on the screen and moves the phone to draw
in 3D space. For line drawing, we process the continuous stream
of 3D position from VR/AR input system, which is used to create
3D mesh. Because of the platform differences and geographical
environment between the users, we can not simply synchronize the
point position. Doing so will result in distorted reconstruction due
to GPS precision error, which is ( 70 cm for 5 decimal precision of
GPS values). To avoid this precision error, we only use the GPS
value for the ﬁrst point of the line stroke and for every next point we
pass the relative vectors with respect to the ﬁrst point of the stroke.
So for a continuous input of 3D position, this relative position is
synchronized with remote users to reconstruct the line locally in
real-time. The dynamic texture on brush pre-set was implement
using CG shader to optimize the performance impact.

3.6 Geographical cues

For enriching the immersive experience, we have added an interac-
tive 360-degree Photosphere. This Photosphere shows the real world
captured image of the place; this allows the user to have a portal-like
experience where they can step inside different experience that holds
the 360-degree image of the place (Fig. 3). The Photosphere reacts
to the users’ position, and scales up and down in proportion to the
distance from user. So if the user is approaching the Photosphere
it scales up to cover their view and reaches maximum scaling once
the user is at its center. These 360-degree images were downloaded
using “StreetViewDownload 360” software [39], which is a freeware

Figure 5: Path (large and small) around St James’ Sq. (Top) is shown
on Google Maps and subsequently recorded GPS values for the large
rectangular path on the left and smaller path on the right (Bottom) is
plotted below. The blue line for device GPS and the orange line for
corrected GPS.

Figure 4: Spatial drawing and settings (Top) and 3D environment of
UCL main quad (Bottom) in VR.

areas and circumferences.

5 EVALUATION

to download the 360 images from Google street view using URL ID
for ofﬂine use.

To enrich the virtual experience further we have used realistic
3D models of UCL campus and nearby area. The procedural build-
ings of Mapbox include primitive polygons and do not include any
structural details or information. Fortunately, they do have scope for
feature modiﬁcation in SDK, which makes it easier to replace proce-
dural buildings with custom 3D models. To replace any procedural
building, we need to block the primitive buildings by their unique ID
from spawning and replace it with our model with appropriate map
scale. Presently our source UCL model does not include any tex-
ture. So we have used diffuse white materials for building. But this
can easily be improved by involving 3D artists or buying premium
models online. See Fig. 4 for reference virtual environment.

4 TESTING

We did a quantitative analysis of the location tracking system. For
testing the correction of GPS reading using ARCore SLAM, we
selected three outdoor paths in two different areas. We planned the
area using Google maps and identiﬁed suitable closed paths. Two
locations were around “St James’s Square, London SW1Y 4LE” (see
Fig. 5). The third location was around “Ifor Evans Hall, Camden
Road, London NW1 9HZ” (see Fig. 6). The objective was to test
the loop closing for corrected SLAM system and GPS values, and
compare the results. During the test, we simultaneously recorded
the GPS reading and the corrected GPS values from our application
on the Android device. A comparison between these two data sets
was made by plotting the graph on the same diagram (see Fig. 5
and Fig. 6). The similarity between the two measurements and
smoothness of the paths is observed to determine the better results.
The ﬁrst two paths were used to test the performance with different

The recorded values of onboard GPS and corrected-GPS were then
compared to evaluate the efﬁciency of the method. For comparison,
we plot these values on different map and graphs. The map with
the red line is the ground truth for the path that we have plotted
on Google map. The other graphs were plot from recorded GPS
values, where on the x-axis, we plotted the longitude and on Y-axis
the latitude. Then 500 points on each path are randomly selected
for displaying (x) on the graph. The blue line represents GPS values
recorded from the device and the orange line represents corrected
GPS. We understand that this 2D plotting is not accurate for spherical
Geo-coordinate but we have assumed the distance difference to be
negligible for such a small area.

By inspection, the corrected GPS values were more smooth and
less ﬂuctuating, as compared to raw GPS values from the device.
From the diagrams, the line segments of corrected GPS readings
were straight and continuous, unlike the line segments of the raw
GPS values. It could also be seen that the corrected GPS was closer
to the ground truth value for all three paths. Thus, our approach
provides more stable results compared to device GPS value. This
corrected GPS values would be better for synchronization with
remote users and collaboration. Consequently, we can also conclude
that ARCore can be used to improve the GPS values for tracking
AR users in small outdoor environments effectively ( 136057 m sq.
area of St. James test location).

Additionally, we measured error due to rounding-off of GPS
coordinate from Mapbox SDK. It rounds off GPS value to 5 decimal
places, whereas generally, 6 or more decimal places are used for
accurate geolocation (i.e. in Google Maps). This rounding off of
decimal places leads to a maximum round-off error of about 70
cm. Because 0.000005 degrees in latitude or longitude corresponds
to 50 cm in distance, and it will result in about 70 cm diagonally
away from the expected position. This may cause problems during
the collaboration. For instance, a dynamic label positioned having

a high building or using the application for navigation in hilly areas.
Possible solution for this could be to use the terrain map, instead of
ﬂat tilemap to account for geographical elevation, and position the
virtual experience accordingly.

We further plan to investigate and research on the following
aspects - realistic 3D models for contextual information and immer-
sion, psychological experiments in collaboration, and use cases of
geographical data in mixed reality. Also, this projects’ concept can
be adapted for multiple industrial scenarios and use cases such as
- tourism, urban planning, site inspection, training, treasure hunt,
games based on geolocation, and much more.

7 CONCLUSION

We have presented our implementation of mixed reality-based real-
time collaboration application that supports multiple platforms. The
application allows multiple users to share a common geographic
location and have an immersive experience. We extended on differ-
ent aspects of collaboration, to immerse and engage the users with
virtual content by loading dynamic experiences, 360 Photospheres,
and freehand drawing. This project serves as a valuable prototype
for cross-platform collaboration between users in a geographical
environment.

We have improved the GPS tracking for AR users using ARCore
VISLAM system, which made the whole real-time collaboration
possible. Stable and consistent tracking of remote users increases
the sense of the presence for both AR and VR users and enhances
the immersion of the user in an alternate reality/experience. The
improved results are a good metric to further research in this area and
explore more on collaboration use cases over geographical space.

ACKNOWLEDGMENTS

We are thankful to the CS department of UCL for provisioning us
with all the equipments and lab space for the development of this
project.

REFERENCES

[1] T. Alatalo, T. Koskela, M. Pouke, P. Alavesa, and T. Ojala. Virtualoulu:
Collaborative, immersive and extensible 3d city model on the web. In
Proceedings of the 21st International Conference on Web3D Technol-
ogy, Web3D ’16, p. 95–103. Association for Computing Machinery,
New York, NY, USA, 2016.

[2] H. Bay, T. Tuytelaars, and L. Van Gool. Surf: Speeded up robust fea-
tures. In Computer Vision – ECCV 2006, pp. 404–417. Springer Berlin
Heidelberg, Berlin, Heidelberg, 2006. doi: 10.1007/11744023 32
[3] S. Benford, A. Crabtree, M. Flintham, A. Drozd, R. Anastasi, M. Pax-
ton, N. Tandavanitj, M. Adams, and J. Row-Farr. Can you see me now?
ACM Transactions on Computer-Human Interaction (TOCHI), 13(1),
2006.

[4] M. Billinghurst and H. Kato. Out and about—real world telecon-
ferencing. BT technology journal, 18(1):80–82, Jan. 2000. doi: 10.
1023/A:1026582022824

[5] M. Billinghurst and H. Kato. Collaborative augmented reality. 45(7):64–

70, July 2002. doi: 10.1145/514236.514265

[6] M. Billinghurst, H. Kato, and I. Poupyrev. The magicbook: a transi-
tional ar interface. Computers & Graphics, 25(5):745–753, 2001.
[7] C. Cadena, L. Carlone, H. Carrillo, Y. Latif, D. Scaramuzza, J. Neira,
I. Reid, and J. J. Leonard. Past, present, and future of simultaneous
localization and mapping: Toward the robust-perception age. IEEE
Transactions on robotics, 32(6):1309–1332, Dec. 2016. doi: 10.1109/
TRO.2016.2624754

[8] P. H. Dana. Global positioning system (gps) time dissemination for
real-time applications. Real-Time Systems, 12(1):9–40, Jan. 1997. doi:
10.1023/A:1007906014916

[9] A. J. Davison, I. D. Reid, N. D. Molton, and O. Stasse. Monoslam:
Real-time single camera slam. IEEE transactions on pattern analysis
and machine intelligence, 29(6), 2007.

Figure 6: Path around Ifor Evans, UCL is shown on Google map and
subsequent recorded GPS reading is plotted below. The blue line for
device GPS and the orange line for corrected GPS.

geolocation of (51.522791, -0.131754) was shifted to (51.52279, -
0.13175). The offset is calculated to be 29 cm away from the deﬁned
position, which is within 70 cm distance error, as we mentioned
previously.

6 LIMITATIONS AND FUTURE WORKS

In this section, we will talk about the limitations of using ARCore for
improving the accuracy of onboard GPS, some of the assumptions
that we have made while developing this solution, and scope of this
project to be extended for future research or applications.

In our implementation of tracking AR user, we have used AR-
Core but it’s speciﬁcally targeted for indoor use cases and fails to
continue tracking in larger outdoor areas. Arcore is not suitable for
handling dynamic outdoor environments where you would expect
moving crowds and objects. Among all existing popular AR systems,
ARCore performed the worst result in a large and dynamic environ-
ments [11]. Further development and customization in VISLAM
technology may positively affect the improvisation of GPS reading
in mobile phones. As an alternative to our implementation, we rec-
ommend working on customized and effective VISLAM, which can
be used to maintain the ephemeral map of the virtual camera and can
be used for reinforcing the GPS reading. Also, in general cases, the
manual map alignment can be replaced by an automatic procedure
and can be estimated by averaging initial GPS measures or relative
sensor localization using VISLAM.

The rounding off of GPS coordinates will causes problems during
real-time collaboration. If one user wants to do a speciﬁc operation
at a particular location, the result may be shown at a slightly dif-
ferent location in remote users’ view. As we experience in case of
freehand drawing. To compensate for these small offsets, we have
used different threshold distances and relative positions to avoid
ﬂicker or unnatural behaviour. Like in the case of switching between
animation states or interaction with 360 Photospheres. But alter-
natively, depending upon Map service this factor can be addressed
differently.

Further, in the current implementation, we assume that the user is
always at the ground level, and there’s no account for their altitude or
geographical elevation. Therefore, a possible problematic situation
may happen if the user is trying to load an experience from indoor in

[10] A. D¨unser, R. Grasset, H. Seichter, and M. Billinghurst. Applying
hci principles to ar systems design. University of Canterbury. Human
Interface Technology Laboratory., 2007.

[11] T. Feigl, A. Porada, S. Steiner, C. L¨ofﬂer, C. Mutschler, and
M. Philippsen. Localization limitations of arcore, arkit, and hololens
in dynamic large-scale industry environments. In Proceedings of the
15th International Conference on Computer Graphics Theory and Ap-
plications, pp. 307–318, 2020. doi: 10.5220/0008989903070318
[12] A. Fuller, Z. Fan, and C. Day. Digital twin: Enabling technology,
challenges and open research. arXiv preprint arXiv:1911.01276, 2019.
[13] R. Grasset, P. Lamb, and M. Billinghurst. Evaluation of mixed-space
collaboration. In Fourth IEEE and ACM International Symposium on
Mixed and Augmented Reality (ISMAR’05). IEEE, Vienna, Austria,
Austria, 2005. doi: 10.1109/ISMAR.2005.30

[14] V. R. Kamat and A. H. Behzadan. Gps and 3dof tracking for georef-
erenced registration of construction graphics in outdoor augmented
reality. In Workshop of the European Group for Intelligent Comput-
ing in Engineering, pp. 368–375. Springer Berlin Heidelberg, Berlin,
Heidelberg, 2006. doi: 10.1007/11888598 34

[15] A. Kasyanov, F. Engelmann, J. St¨uckler, and B. Leibe. Keyframe-
based visual-inertial online slam with relocalization. In 2017 IEEE/RSJ
International Conference on Intelligent Robots and Systems (IROS), pp.
6662–6669. IEEE, Vancouver, BC, Canada, 2017. doi: 10.1109/IROS.
2017.8206581

[16] C. Kerl, J. Sturm, and D. Cremers. Dense visual slam for rgb-d cameras.
In 2013 IEEE/RSJ International Conference on Intelligent Robots and
Systems, pp. 2100–2106. IEEE, Tokyo, Japan, 2013. doi: 10.1109/
IROS.2013.6696650

[17] K. Kiyokawa, H. Takemura, and N. Yokoya. A collaboration sup-
port technique by integrating a shared virtual reality and a shared
augmented reality. In IEEE SMC’99 Conference Proceedings. 1999
IEEE International Conference on Systems, Man, and Cybernetics
(Cat. No. 99CH37028), pp. 48–53. IEEE, Tokyo, Japan, 1999. doi: 10.
1109/ICSMC.1999.816444

[18] R. Kizony, N. Katz, and P. L. Weiss. Adapting an immersive virtual
reality system for rehabilitation. The Journal of Visualization and
Computer Animation, 14(5):261–268, 2003.

[19] M. B. Kjærgaard, H. Blunck, T. Godsk, T. Toftkjær, D. L. Christensen,
and K. Grønbæk. Indoor positioning using gps revisited. In Interna-
tional conference on pervasive computing, pp. 38–56. Springer Berlin
Heidelberg, Berlin, Heidelberg, 2010. doi: 10.1007/978-3-642-12654
-3 3

[20] W. E. Lorensen and H. E. a. Cline. Sensor technologies and simultane-
ous localization and mapping (slam). Procedia Computer Science, 76,
2015. doi: 10.1016/j.procs.2015.12.336

[21] D. G. Lowe. Distinctive image features from scale-invariant keypoints.
International journal of computer vision, 60(2):91–110, Aug. 2004.
doi: 10.1023/B:VISI.0000029664.99615.94

[22] A. Madni, C. Madni, and S. Lucero. Leveraging digital twin technology
in model-based systems engineering. Systems, 7(1):7, Jan 2019. doi:
10.3390/systems7010007

[23] E. Marchand, H. Uchiyama, and F. Spindler. Pose estimation for
augmented reality: A hands-on survey. 22(12):2633–2651, Dec 2016.
doi: 10.1109/TVCG.2015.2513408

national-digital-twin-programme, 2019.
20, 2020.

Accessed April

[28] B. W. Parkinson, P. Enge, P. Axelrad, and J. J. Spilker Jr. Global
Positioning System: Theory and Applications, Volume II. American
Institute of Aeronautics and Astronautics, 1996. doi: 10.2514/4.866395
[29] T. Piumsomboon, G. A. Lee, J. D. Hart, B. Ens, R. W. Lindeman,
B. H. Thomas, and M. Billinghurst. Mini-me: An adaptive avatar
for mixed reality remote collaboration. In Proceedings of the 2018
CHI conference on human factors in computing systems. Association
for Computing Machinery, New York, NY, USA, 2018. doi: 10.1145/
3173574.3173620

[30] T. Piumsomboon, Y. Lee, G. Lee, and M. Billinghurst. Covar: A
collaborative virtual and augmented reality system for remote collabo-
ration. In SIGGRAPH Asia 2017 Emerging Technologies, pp. 83–91.
Association for Computing Machinery, New York, NY, USA, 2017.
doi: 10.1145/3132818.3132822

[31] D. Schleicher, L. Bergasa, M. Oca˜na, R. Barea, and M. Guill´en. Real-
time hierarchical outdoor slam based on stereovision and gps fusion.
IEEE Transactions on Intelligent Transportation Systems, 10(3):440–
452, 2009.

[32] D. P. Shepard and T. E. Humphreys. High-precision globally-referenced
position and attitude via a fusion of visual slam, carrier-phase-based
gps, and inertial measurements. In 2014 IEEE/ION Position, Loca-
tion and Navigation Symposium-PLANS 2014, pp. 1309–1328. IEEE,
Monterey, CA, USA, 2014. doi: 10.1109/PLANS.2014.6851506
[33] Spatial. Spatial - collaboration from anywhere in ar. https://www.
youtube.com/watch?v=PG3tQYlZ6JQ, Oct. 2018. Accessed April
20, 2020.

[34] A. Steed. Supporting mobile applications with real-time visualisation
of gps availability. In International Conference on Mobile Human-
Computer Interaction, pp. 373–377. Springer, 2004.

[35] A. Steed, Y. Pan, F. Zisch, and W. Steptoe. The impact of a self-avatar
on cognitive load in immersive virtual reality. In 2016 IEEE Virtual
Reality (VR), pp. 67–76. IEEE, Greenville, SC, 2016. doi: 10.1109/VR
.2016.7504689

[36] S. Tachi, K. Tanie, K. Komoriya, and M. Kaneko. Tele-existence (I):
Design and Evaluation of a Visual Display with Sensation of Presence,
pp. 245–254. Springer US, Boston, MA, 1985. doi: 10.1007/978-1
-4615-9882-4 27

[37] T. Taketomi, H. Uchiyama, and S. Ikeda. Visual slam algorithms: a
survey from 2010 to 2016. IPSJ Transactions on Computer Vision and
Applications, 9(1):16, 2017. doi: 10.1186/s41074-017-0027-2
[38] B. Thomas, B. Close, J. Donoghue, J. Squires, P. De Bondi, M. Morris,
and W. Piekarski. Arquake: An outdoor/indoor augmented reality
In Digest of Papers. Fourth International
ﬁrst person application.
Symposium on Wearable Computers. IEEE, Atlanta, GA, USA, USA,
2000. doi: 10.1109/ISWC.2000.888480

[39] O. Thomas.

Street view download 360.

https://svd360.

istreetview.com/, 2020. Accessed April 20, 2020.

[40] J. Zhang, B. Li, A. G. Dempster, and C. Rizos. Evaluation of high

sensitivity gps receivers. Evaluation, 2010.

[24] Microsoft. Azure spatial anchors. https://azure.microsoft.
https:

com/en-us/services/spatial-anchors/,
//docs.microsoft.com/en-us/windows/mixed-reality/
shared-experiences-in-mixed-reality, Oct 2019. Accessed
April 20, 2020.

and

[25] R. Mur-Artal and J. D. Tard´os. Orb-slam2: An open-source slam
system for monocular, stereo, and rgb-d cameras. IEEE Transactions
on Robotics, 33(5):1255–1262, June 2017. doi: 10.1109/TRO.2017.
2705103

[26] O. Oda, C. Elvezio, M. Sukan, S. Feiner, and B. Tversky. Virtual
replicas for remote assistance in virtual and augmented reality.
In
Proceedings of the 28th Annual ACM Symposium on User Interface
Software & Technology. Association for Computing Machinery, New
York, NY, USA, 2015. doi: 10.1145/2807442.2807497

[27] U.

of Cambridge.

(cdbb).

britain
https://www.cdbb.cam.ac.uk/what-we-do/

Centre

digital

built

for

