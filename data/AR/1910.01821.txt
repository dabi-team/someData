Motion Planning through Demonstration to Deal with
Complex Motions in Assembly Process

Yan Wang1, Kensuke Harada12 and Weiwei Wan12

Abstract— Complex and skillful motions in actual assembly
process are challenging for the robot to generate with existing
motion planning approaches, because some key poses during
the human assembly can be too skillful for the robot to realize
automatically. In order to deal with this problem, this paper
develops a motion planning method using skillful motions
from demonstration, which can be applied to complete robotic
assembly process including complex and skillful motions. In
order to demonstrate conveniently without redundant third-
party devices, we attach augmented reality (AR) markers to
the manipulated object to track and capture poses of the object
during the human assembly process, which are employed as key
poses to execute motion planning by the planner. Derivative of
every key pose serves as criterion to determine the priority of
use of key poses in order to accelerate the motion planning.
The effectiveness of the presented method is veriﬁed through
some numerical examples and actual robot experiments.

I. INTRODUCTION

In factory environment, industrial robots are expected to
ﬁnish the product assembly process automatically. However,
the robotic assembly process can include very skillful and
complicated motions, for which the solution of motion
planning is very difﬁcult to ﬁnd despite that it actually exists.
For example, the assembly process outline of a condenser is
shown in Fig.1, and it can be simpliﬁed into an L-shaped
object insertion problem in narrow space. There is an L-
shaped object named L, and an object with a groove named
G. The target is to insert L into the hole of G. However, there
are some factors making the L insertion hard to execute as
Fig.2 shows. Therefore, a worker has to act skillful motions
to ﬁnish this assembly process according to steps in Fig.3.
Traditional motion planning can hardly deal with such
skillful and complex motion planning because the motions

9
1
0
2

t
c
O
4

]

O
R
.
s
c
[

1
v
1
2
8
1
0
.
0
1
9
1
:
v
i
X
r
a

(a)

(b)

Fig. 2. Difﬁculties in the L insertion. (a) G is closed on both ends so that
L cannot be inserted into the hole from one end directly; (b) The length
of G exposed outside is a bit shorter than the bottom length of L, which
makes it impossible to put L into G with its bottom horizontal and insert
it into the hole.

can be too delicate to generate a proper path automatically,
despite that it can generate collision-free path. On the other
hand, these skillful and complex motions are pretty common
in human assembly process, but collision often happens due
to the ﬂutter of hands. Therefore, we present an idea of
guiding the motion planning with the motion capture data
from human demonstration in a robotic motion planner,
which enables the robot to ﬁnd the solution path of these
skillful motions with the least collision probability.

In order to make it explicit what human does to the object
manipulated during an assembly process, we use augmented
reality (AR) markers to capture some key poses of the object
manipulated by human during an assembly process. Because
violent changes are usually main reasons of the failure of
motion planning, we rearrange the key poses in descending
order of their derivatives in the motion trajectory so that
the most important pose can be inserted into the planner in
priority, enhancing the speed of motion planning.

In this research, grasp conﬁgurations are generated by the
planner automatically and assembly positions/orientations
are determined in advance. Besides, since we just concentrate
on skillful motions in single task during a complete assembly
process, assembly sequence is not discussed, either.

The rest of this paper is organized as follows: First, we
introduce some related work of our research in Section II.
Then, we outline the proposed approach with an example in
Section III and give a detailed description of the method-

Fig. 1. The assembly process of a condenser and its simpliﬁed model by
using an L-shaped object insertion.

1Graduate School of Engineering Science, Osaka University, Japan
2National Inst. of AIST, Japan. *Correspondent author: Yan Wang:

yan@hlab.sys.es.osaka-u.ac.jp

Fig. 3. Human motions to insert L into the hole of G. 1) Tilting properly
and translating L towards the groove until one side of its bottom enters the
hole and touches the groove; 2) Rotating L around the contact point, A,
to make its bottom contact the groove completely (slide often occurs); 3)
Translating and inserting L into the hole completely.

 
 
 
 
 
 
ology in Section IV. In Section V, numerical simulations
and actual experiments are implemented to validate the
effectiveness of the presented method. Finally, we summarize
our work and discuss the future work in Section VI.

II. RELATED WORK

In this section, we review the related studies of our
work in three aspects: motion planning, robot teaching by
demonstration, and visual recognition and tracking.

A. Motion Planning

Robot motion planning (RMP) generates robotic motion
of manipulating parts to achieve tasks. [1] was the ground-
breaking work comparing the joint space and workspace
approaches. They also presented an approach to compute the
collision-free trajectories for multi-arm planning problem [2].
After that, some typical RMP algorithms appeared, in-
cluding the probabilistic roadmaps approaches to search
collision-free motion in the joint space [3] [4], and the
rapidly-exploring random trees(RRT) [5]. As for the recent
work like [6] [7], researchers made use of historic data to
improve the system performance.

Compared to conventional motion planning methods, our
method improves the planning effectiveness to certain extent
via utilization of the human expertise.

B. Robot Teaching by Demonstration

“Teaching by demonstration” is a method of generating a
robot program that makes a robot do the same task as the
task that a human operator demonstrates [8]. Robot teach-
ing by demonstration requires the acquisition of example
trajectories, which can be captured in various ways [9],
mainly including kinesthetic demonstration, motion-sensor
demonstration, and teleoperated demonstration. In kines-
thetic demonstration, robotic hands are guided by a human
demonstrator and the movements are recorded directly on
the learning robot [10] [11]. For motion-sensor demonstra-
tion, marker-based tracking devices are deployed because
of the high accuracy compared to computer vision [12]
[13]. Teleoperated demonstration can establish an efﬁcient
communication and operation strategy between humans and
robots, which has been applied in performing assembly tasks
[14] [15].

Without redundant third-party devices, this paper makes
use of an AR marker tracking system to capture poses of
objects during an assembly process. These poses serve as
key poses for the planner to generate motion sequence to
complete the assembly task.

C. Visual recognition and tracking

In robotic manipulation, visual recognition and tracking
technique is rather critical, which has been well studied in
the last decades. Researchers has developed various kinds
of visual recognition and tracking approaches, such as de-
termining the poses of objects from 2D images [16], using
color co-occurrence histograms and geometric modeling to
estimate the 6-DOF pose of objects [17], using shape/contour

Fig. 4. Overview of the presented approach. It takes models of L and G,
initial and ﬁnal poses of L, and key poses of L obtained by AR marker as
inputs of the motion planning, whose result is a proper motion sequence to
complete the assembly process.

to represent objects [18] [19], and 3D matching with data
from stereo cameras [20] and structured light [21]. In recent
years, the augmented reality (AR) markers are widely used
to obtain pose information [22] [23], which possess the
advantages of easier recognition and higher precision [24].
In this paper, we stick AR markers to the manipulated
object in order to detect and track it during the assembly
process. With the AR markers, the poses of the object can
be recognized and recorded quickly and precisely.

III. OVERVIEW OF THE APPROACH

In certain assembly process requiring complex and skillful
motions, it can be challenging for the robot to generate
proper motions to complete a task. To promote clarity, we
still present our approach with the L insertion in Section I
as an example.

It cannot be denied that the solution of the L insertion
motion planning problem exists. However, it is very difﬁcult
to ﬁnd. Thus, we consider guiding the solution path by using
the motion capture data, i.e. the human demonstration poses.
In the motion planner, the inputs are deﬁned as

1) The mesh models of L and G; 2) The initial and
ﬁnal poses of L; 3) Key poses of L captured from human
demonstration.

Especially, for the demonstration, a real-time and precise
approach is demanded to recognize and track L through
the process. For convenience, we utilize the AR marker to
achieve this purpose and the details will be discussed in
Section IV. Given these inputs, the planner then deal with the
data and generate an appropriate motion sequence to ﬁnish
the L insertion process successfully. The general workﬂow
of our approach is shown in Fig.4

IV. METHOD

In this section, we present our method to implement

motion planning using demonstration poses.

A. Demonstration

To obtain poses of actual manipulated objects, a vision
system is demanded to track and capture them during the

assembly process. In this paper, we capture the poses of
objects with AR markers.

During the assembly process, G is generally ﬁxed to the
table and cameras in the vision system track L and capture
its key poses. Actually, the vision system simultaneously
captures absolute poses of both L and G in the world
coordinate system and then calculates the relative pose of
L to G.

We suppose that the pose of the ﬁxed object G is

pTG = [pRG, pPG]

and L is given an initial pose

(pTL)0 = [(pRL)0, (pPL)0]

in the coordinate system of the virtual environment. After
the vision system calculating the relative poses of L to G,
which are

(GTL)n = [(GRL)n, (GPL)n], n = 1, 2, 3...

respectively on the inserted n key points chosen from the
demonstration key poses, the planner utilizes the result to
determine absolute poses of L in the world coordinate system
of the planner virtual environment through

(pTL)n = pTG ∗ (GTL)n, n = 1, 2, 3...

Then, the planner generates a motion path to achieve the
assembly process with these key poses relative to the world
coordinate system.

B. Motion Planning

In conventional motion planning, a motion sequence is
generated automatically without human intervention. How-
ever, in skillful assembly process, such as the narrow-space
insertion problem above, it is obvious that ﬁnding a collision-
free path to the target completely automatically can be rather
difﬁcult and time consuming. On this circumstance, human
demonstration is introduced to assist the motion planning.

The strategy is that when it fails to generate a collision-free
motion path or the planning time is more than a threshold te,
the planner takes a new key pose to execute another planning
process. This workﬂow loops until the motion path is found
and the time cost is relatively short.

The motion planning algorithm adopted by the planner
is the DDRRT-Connect, a simple and efﬁcient randomized
algorithm for solving single-query path planning problems
in high-dimensional conﬁguration spaces [25]. In robotic as-
sembly process, not only the collision between manipulated
object and obstacles is considered, but also the collision
between the robot and obstacles around.

To begin with, we discuss the collision-free motion plan-
ning of the manipulated object. In order to enhance precision,
collision mesh is utilized as the collision model. The collision
detection is implemented through testing collision pairs with
the collision detection library in Panda3D. There are 6
parameters to decide the pose of the manipulated object,
L, in 3D conﬁguration space, x, y, z, R (roll), P (pitch),

and Y (yaw). The initial pose P I and ﬁnal pose P F of
the motion planning are set
in advance as Fig.5 shows.
It should be emphasized that they are different from the
actual poses in practice, only chosen for simplifying the
motion planning process, because the rest of the motions
are relatively uncomplicated to plan. Given P I and P F , the
planner manages to ﬁnd a collision-free motion path between
them avoiding colliding with the obstacle G. Such kind of
path is usually challenging and time-resuming to ﬁnd merely
with the traditional motion planning algorithm because of
the narrow manipulation space. Thus, human demonstration
poses are involved to assist the motion planning in ﬁnding
the proper path, where the order of inserting human demon-
stration poses becomes an issue to discuss.

There can be many key poses captured in a whole motion
trajectory, with different weights of importance. An ideal
condition is to ﬁnish the motion planning with as few as
possible demonstration poses so that the motion planning
takes less time. Therefore, vital poses are expected to insert
in priority. Generally, the most decisive poses are often with
the highest rate of change, which is the main reason of
planning failure. In the L insertion, the most difﬁcult part is
the step 2) mentioned in Section III and P is the parameter
varying the most violently in this period. Therefore, we
execute polynomial curve ﬁtting on P of demonstration poses
as Fig.6 shows and compute the derivative Dn on all the n
key poses of the obtained motion trajectory with the scipy
library. Then, we rank these poses in descending order of Dn
and set them as candidate poses to insert into the planner in
order later. We can see that the part from A to B is the most
important area where we extract key poses, and among them
C possesses the highest change rate so that it should be the
ﬁrst pose to insert.

Besides, collision regularly occurs in human demonstra-
tion so that it is necessary to deal with captured human
demonstration poses where collision is detected in the plan-
ning process. After inserting the nth demonstration pose
P D
n (n ≥ 1) into the planner, the planner execute motion
n and P I (n = 1) or the previous
planning between P D
n−1(n ≥ 2). If collision occurs at P D
demonstration pose P D
n ,
the planner will eliminate P D
n from the planner and set the
nearest collision-free random pose P N
n as the new start pose
until reaching the ﬁnal pose in relatively short time. P N
n
is randomly generated by the DDRRT-Connect algorithm.
Through the method above, a collision-free motion path of
L taking only collision between L and G into consideration
is obtained. Fig.7 shows the entire workﬂow of this method.
Then, the collision between the robot and obstacles is

Fig. 5. The initial pose P I (left) and the ﬁnal pose P F (right)

Fig. 7. The detailed workﬂow of motion planning with demonstration data.
Demonstration poses where collision occurs are eliminated and replaced by
their nearest collision-free random poses.

in real time. For verifying the stability and precision of
the demonstration using AR marker, graphs describing the
relative position and pose of virtual models of L and G in
the world coordinate system is given in Fig. 9. It can be
concluded that the magnitude of the deviation is rather low
and the relative position is almost the same to the real objects,
which indicates that the vision system is stable and precision
enough for the human demonstration.

In our experiment, we tested our method on two different
tasks: the L-shaped object insertion and the tenon insertion.
The tenon insertion is also a common assembly problem
similar to the L insertion. and the target is inserting the tenon
into the holes of the two mortises respectively.

We managed to capture some key poses of the manipulated
object with the vision system. Fig.10 shows key poses
demonstrated by human and corresponding virtual scene
obtained through the vision system on the screen. With the
demonstration poses, motion planning was implemented by

Fig. 6. The demonstration poses and the ﬁtting curve. The part from A
to B is the most important area where we extract key poses, The key poses
are inserted in descending order of their derivative and C is the ﬁrst one.

involved, including the arm-obstacle collision and gripper-
obstacle collision speciﬁcally. In our research, the conﬁgu-
ration space of the robot is large enough so that the arm
can be guaranteed to be collision-free. Making the issue
conciser, the grasp conﬁguration is determined in advance as
a collision-free one and thus the relative pose of the object
and the gripper is acquired. Therefore, sufﬁcient collision-
free poses of the gripper tip are known and a sequence
of parameters can be obtained through solving the inverse
kinematics. The parameters are the waist rotation angle
θwaist, and the m arm joint rotation angles from θ1 to θm.
Eventually, through the DDRRT-Connect motion planning,
a motion path of joint angles leading to the corresponding
collision-free path of manipulated object can be obtained.
In the following section, successful experiments using this
method and corresponding settings will be presented.

V. EXPERIMENTS AND ANALYSIS

In this section, we propose experiments and analysis of
our research. In order to verify the proposed approach, we
implemented both simulation and real-world experiments.
The computational platform used in our experiments was a
PC with Intel Core i5-8250U CPU and 24.00GB memory.
The programming language was Python 3 and the software
platform was PyManipulator1. As for the vision system,
USB 3.0 web cameras with 1920*1080 resolution were used.
Finally, the Nextage OPEN was employed in the actual robot
experiment.

A. Demonstration and Simulation

The vision system constructed in the experiment is shown

in Fig.8.

It consists of a manipulation platform, three USB 3.0
cameras ﬁxed on a frame whose IDs are 0, 1, and 2,
and a monitor. The system detects AR markers on objects
appearing in the vision ﬁeld of the three cameras, tracks them
and displays corresponding virtual models on the monitor

1https://gitlab.com/wanweiwei07/wrs

Fig. 8. Vision system

Fig. 9. Relative position and pose of L and G in the world coordinate system.

(a)

(b)

(a)

(b)

Fig. 10. These two ﬁgures are the human demonstration poses and corresponding poses captured in the virtual scene of (a) L insertion and (b) tenon
insertion task. Human demonstration poses are shown in the top row. The middle row shows the tracking process through the vision system, and the bottom
rows displays the ﬁnal captured poses corresponding to human demonstration poses in each ﬁgure.

the planner, given the initial pose and the ﬁnal pose in
Fig.5. Table I shows the results of motion planning. The
time threshold te is set to 5 seconds, which determines if
the planning is time-resuming. Due to the feature of our

planning strategy and algorithm, the results show differences
both on time and used demonstration poses. However, it is
evident that generally involving more demonstration poses
brings better planning results and relatively less time-cost.

(a)

(b)

Fig. 11. The collision-free path of (a) L insertion and (b) tenon insertion
generated by motion planning using demonstration.

The eventual obtained collision-free motion path is shown
in Fig.11.

B. Actual Robot Experiments

In order to validate the effectiveness of the proposed
motion planning method, we have executed actual robot
experiments on the Nextage OPEN humanoid robot. The
robot control is realized through the ROS APIs of Nextage
OPEN2 in PyManipulator.

The two experiments were the L insertion experiment and
the tenon insertion experiment. Fig.12(a) and (b) shows the
experiment results of L insertion Trial 3 and tenon insertion
Trial 5 respectively. The process is from the top-left picture
to the bottom-right one.

For each scenario, 5 trials were conducted, in which the L
insertion succeeded 4 times and the tenon insertion 3 times.
The failure attempts should be ascribed to the errors of vision

TABLE I
MOTION PLANNING RESULTS. THE PLANNING FINISHES WHEN A PATH
FOUND IN LESS THAN te=5 SEC.

Task Scenario

Candidate
P D Number

Trial

Used
P D Number

Time (s)

L insertion

6

Tenon insertion

11

1

2

3

4

5

1

2

3

4

5

2

3

3

2

2

4

4

2

5

5

1.510

1.714

1.431

3.034

2.172

2.132

2.655

2.558

1.567

1.256

2http://wiki.ros.org/rtmros nextage/Tutorials

(a)

(b)

Fig. 12.
insertion experiment

Process of (a) the L-shaped object insertion and (b) the tenon

system resulting from the cameras and surrounding noise,
inaccuracies of collision detection in motion planning, and
the measurement error in experiments.

VI. CONCLUSIONS AND FUTURE WORK

This paper proposes an effective motion planning method
making use of demonstration for dealing with complicated
motions in assembly process. The effectiveness and feasibil-
ity of the method was instructed through the use of conve-
nient AR marker detection, the high stability and precision
of demonstration poses capture, and the fast planning speed.
It is proved that our approach can handle the narrow-
space insertion problem well in this research. However, the
practicality of the approach dealing with other kinds of
skillful motions has not been veriﬁed and evaluated yet.
In future, we will possibly apply this method to more
sophisticated assembly process combining several kinds of
skillful motions , where the assembly sequence may also be
considered.

ACKNOWLEDGMENT

This paper is based on results obtained from a project
commissioned by the New Energy and Industrial Technology
Development Organization (NEDO).

The ﬁrst author would like to acknowledge the ﬁnancial
supports from the China Scholarship Council Postgraduate
Scholarship Grant 201806120019.

REFERENCES

[1] Yoshihito Koga and J-C Latombe. Experiments in dual-arm manipu-
lation planning. In Proceedings 1992 IEEE International Conference
on Robotics and Automation, pages 2238–2245. IEEE, 1992.

[2] Yoshihito Koga, Koichi Kondo, James Kuffner, and Jean-Claude
Latombe. Planning motions with intentions. In Proceedings of the 21st
annual conference on Computer graphics and interactive techniques,
pages 395–408. ACM, 1994.

[3] Thierry Sim´eon, Jean-Paul Laumond, Juan Cort´es, and Anis Sahbani.
Manipulation planning with probabilistic roadmaps. The International
Journal of Robotics Research, 23(7-8):729–746, 2004.

[4] Lydia Kavraki, Petr Svestka, and Mark H Overmars. Probabilistic
roadmaps for path planning in high-dimensional conﬁguration spaces,
volume 1994. Unknown Publisher, 1994.

[5] Steven M Lavalle and James J Kuffner Jr. Rapidly-exploring random
In Algorithmic and Computational

trees: Progress and prospects.
Robotics: New Directions. Citeseer, 2000.

[6] Dmitry Berenson, Pieter Abbeel, and Ken Goldberg. A robot path
In 2012 IEEE
planning framework that
International Conference on Robotics and Automation, pages 3671–
3678. IEEE, 2012.

learns from experience.

[7] Mike Phillips and Maxim Likhachev. Speeding up heuristic computa-
tion in planning with experience graphs. In 2015 IEEE International
Conference on Robotics and Automation (ICRA), pages 893–899.
IEEE, 2015.

[8] Hiromu Onda, Takashi Suehiro, and Kosei Kitagaki. Teaching by
demonstration of assembly motion in vr-non-deterministic search-type
motion in the teaching stage. In IEEE/RSJ International Conference
on Intelligent Robots and Systems, volume 3, pages 3066–3072. IEEE,
2002.

[9] Zuyuan Zhu and Huosheng Hu. Robot learning from demonstration

in robotic assembly: A survey. Robotics, 7(2):17, 2018.

[10] Sylvain Calinon, Florent Guenter, and Aude Billard. On learning,
IEEE
representing, and generalizing a task in a humanoid robot.
Transactions on Systems, Man, and Cybernetics, Part B (Cybernetics),
37(2):286–298, 2007.

[11] Gu Ye and Ron Alterovitz. Guided motion planning.

In Robotics
Research: The 15th International Symposium ISRR, volume 100, page
291. Springer, 2016.

[12] Aleˇs Ude, Christopher G Atkeson, and Marcia Riley. Programming
full-body movements for humanoid robots by observation. Robotics
and autonomous systems, 47(2-3):93–108, 2004.

[13] Miti Ruchanurucks, Shinichiro Nakaoka, Shunsuke Kudoh, and Kat-
sushi Ikeuchi. Humanoid robot motion generation with sequential
In Proceedings 2006 IEEE International Con-
physical constraints.
ference on Robotics and Automation, 2006. ICRA 2006., pages 2649–
2654. IEEE, 2006.

[14] Jason Chen and Alex Zelinsky. Programing by demonstration: Coping
The International Journal of

with suboptimal
Robotics Research, 22(5):299–319, 2003.

teaching actions.

[15] Jonathan Bohren, Chavdar Papazov, Darius Burschka, Kai Krieger,
Sven Parusel, Sami Haddadin, William L Shepherdson, Gregory D
Hager, and Louis L Whitcomb. A pilot study in vision-based
augmented telemanipulation for remote assembly over high-latency

networks.
Automation, pages 3631–3638. IEEE, 2013.

In 2013 IEEE International Conference on Robotics and

[16] Philip David, Daniel Dementhon, Ramani Duraiswami, and Hanan
Samet. Softposit: Simultaneous pose and correspondence determina-
tion. International Journal of Computer Vision, 59(3):259–284, 2004.
[17] Staffan Ekvall, Danica Kragic, and Frank Hoffmann. Object recog-
nition and pose estimation using color cooccurrence histograms and
geometric modeling. Image and Vision Computing, 23(11):943–955,
2005.

[18] Zhe Lin, Larry S Davis, David Doermann, and Daniel DeMenthon.
Hierarchical part-template matching for human detection and segmen-
In 2007 IEEE 11th International Conference on Computer
tation.
Vision, pages 1–8. IEEE, 2007.

[19] Dariu M Gavrila. Pedestrian detection from a moving vehicle.

In
European conference on computer vision, pages 37–49. Springer,
2000.

[20] Radu Bogdan Rusu, Gary Bradski, Romain Thibaux, and John Hsu.
Fast 3d recognition and pose using the viewpoint feature histogram.
In 2010 IEEE/RSJ International Conference on Intelligent Robots and
Systems, pages 2155–2162. IEEE, 2010.

[21] Thomas B Moeslund and Jakob Kirkegaard. Pose estimation using
structured light and harmonic shape contexts. In Advances in Com-
puter Graphics and Computer Vision, pages 281–292. Springer, 2007.
[22] Andrej Babinec, Ladislav Juriˇsica, Peter Hubinsk`y, and Frantiˇsek
Duchoˇn. Visual localization of mobile robot using artiﬁcial markers.
Procedia Engineering, 96:1–9, 2014.

[23] Ho Chuen Kam, Ying Kin Yu, and Kin Hong Wong. An improvement
In 2018
on aruco marker for pose tracking using kalman ﬁlter.
19th IEEE/ACIS International Conference on Software Engineering,
Artiﬁcial Intelligence, Networking and Parallel/Distributed Computing
(SNPD), pages 65–69. IEEE, 2018.

[24] Sergio Garrido-Jurado, Rafael Mu˜noz-Salinas, Francisco Jos´e Madrid-
Cuevas, and Manuel Jes´us Mar´ın-Jim´enez. Automatic generation and
detection of highly reliable ﬁducial markers under occlusion. Pattern
Recognition, 47(6):2280–2292, 2014.

[25] James J Kuffner Jr and Steven M LaValle. Rrt-connect: An efﬁcient

approach to single-query path planning. In ICRA, volume 2, 2000.

