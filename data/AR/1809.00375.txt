8
1
0
2

p
e
S
5

]

C
H
.
s
c
[

2
v
5
7
3
0
0
.
9
0
8
1
:
v
i
X
r
a

PlutoAR: An Inexpensive, Interactive
And Portable Augmented Reality
Based Interpreter For K-10 Curriculum

Ankit Kumar Panda
International Institute of
Information Technology
Bhubaneswar
Odisha, India
b114004@iiit-bh.ac.in

Ajaya Kumar Dash
International Institute of
Information Technology
Bhubaneswar
Odisha, India
ajaya@iiit-bh.ac.in

Shourya Pratap Singh
International Institute of
Information Technology
Bhubaneswar
Odisha, India
b114040@iiit-bh.ac.in

Susobhit Panigrahi
International Institute of
Information Technology
Bhubaneswar
Odisha, India
b114050@iiit-bh.ac.in

Debi Prosad Dogra
Indian Institute of Technology
Bhubaneswar
Odisha, India
dpdogra@iitbbs.ac.in

Abstract
The regular K-10 curriculums often do not get the neces-
sary of affordable technology involving interactive ways of
teaching the prescribed curriculum with effective analyt-
ical skill building. In this paper, we present “PlutoAR”, a
paper-based augmented reality interpreter which is scal-
able, affordable, portable and can be used as a platform for
skill building for the kids. PlutoAR manages to overcome
the conventional albeit non-interactive ways of teaching by
incorporating augmented reality (AR) through an interactive
toolkit to provide students the best of both worlds. Students
cut out paper “tiles” and place these tiles one by one on a
larger paper surface called “Launchpad” and use the Plu-
toAR mobile application which runs on any Android device
with a camera and uses augmented reality to output each
step of the program like an interpreter. PlutoAR has inbuilt
AR experiences like stories, maze solving using conditional
loops, simple elementary mathematics and the intuition of
gravity.

Author Keywords
Augmented Reality; Interpreter, K-10 Education; User Inter-
faces

ACM Classiﬁcation Keywords
H.5.2 [Information interfaces and presentation (e.g., HCI)]:
User Interfaces

 
 
 
 
 
 
Introduction
The curriculum and teaching methodology in schools sep-
arates programming from other classes, disconnected from
students’ interest as told by Mitchel Resnick, MIT [27]. He
also added, we need to rethink how we introduce program-
ming to students in order to overcome the sad state of pro-
gramming in schools.

Computational Thinking:
Computational thinking (CT) is slowly paving its way into
becoming a crucial skill for the students. First coined by
Wing [30], CT involves solving problems, designing sys-
tems, and understanding human behaviour, by drawing on
the concepts fundamental to computer science.

CT improves the analytical ability of children and is being
viewed as the core of all science, technology, engineering
and mathematics (STEM) disciplines suggested by Hender-
son et al. [12]. Programming has a constructive and mea-
surable effect on children’s achievement, not only in areas
in STEM, but also in language skills, creativity, and social
emotional interaction [19].

Intrinsic Motivation:
According to Ryan & Deci’s “self determination theory” [22],
intrinsic motivation means performing some task for the
sake of the task itself and not to accomplish extrinsic re-
wards for it. Our visits to schools and interacting with the
children showed intrinsic motivation in the maximum of chil-
dren to learn with PlutoAR. The school visits have been
elaborated ahead in the paper.

AR in Education:
Azuma [7] deﬁned Augmented Reality (AR) as a variation
of Virtual Environment, that allows user to experience the
seamless integration of virtual objects, superimposed upon
or composited, with the real world. Hence, AR supplements

reality, rather than completely replacing it.

As advancement in wireless technology has paved the way
for smaller and faster gadgets during the last three years,
developers have found it easier to move AR from military
and engineering applications to consumer uses [29]. Also,
the availability of mobile hardware supporting AR has be-
come affordable and widespread.

Johnson [15] stated that AR has strong potential to provide
powerful contextual learning experiences. Kirkpatrick [18]
asserted that if visuals are shown to children, they can ob-
tain a genuine knowledge of things more readily than they
can be crammed with the verbal appearance of knowledge.
Shelton and Hedley [26] suggested that AR not only creates
visual images, but also has compelling possibilities for ad-
vancing spatial visualization. Spacial visualization can be
useful in understanding concepts which cannot be possibly
visualized and understood by simple visuals. The traditional
approach for spacial visualization is to keep physical mod-
els, but they lack portability. With the advent of AR in mobile
devices, AR systems have become completely portable.
Chen [9] stated that because of portability, AR is more con-
venient to prepare as a supplement tool either in the class-
room setting or at home.

Although AR is good at visualizing difﬁcult concepts, visu-
alization is not enough to enhance learning. In a research
conducted by Kerawalla et al. [17], students taught using
role-play approach learned more in comparison to students
who watched animations in AR. Jablon and Wilkinson [14]
stated that use of engagement strategies beneﬁt children
which explains the reason behind these results. It is impor-
tant for students to get involved in activities while learning.
PlutoAR makes the best use of both worlds by making AR
visualization an activity.

Tangible Programming Kit:
PlutoAR is a tangible programming kit. “Tangible program-
ming”, ﬁrst coined by Suzuki and Kato [28] to describe their
AlgoBlock programming environment for children. Tangible
programming refers to the activity of arranging the gras-
pable blocks to build (as opposed to “write”) computer pro-
grams [20].

Current curriculum focuses too much on syntax. The en-
vironment provided to most introductory programming stu-
dents forces them to get the syntax right before getting any
feedback on their algorithm. Thus, the big picture of pro-
gramming degenerates to an exercise in “syntax satisfac-
tion” as put forward by Crews and Ziegler [10]. PlutoAR has
no syntax, rather it has building blocks of program called
“tiles” that let students see their program as a sequence of
steps. This allows students to get actively involved in the
process of design and creation, and learn more as sug-
gested by Papert [21].

PlutoAR has inbuilt AR experiences like stories such as tak-
ing off a rocket with facts about the rocket to make children
learn while they play. Maria Roussou says, “play, in partic-
ular, can unite imagination and intellect in more than one
way and help children discover things at their own pace and
in their own way”. She also adds, “play is a child’s favourite
activity, so the learning occurs more readily in an environ-
ment of fun, challenge, and variety” [25].

Related Work
A lot of research has gone into integrating Tangible Inter-
face with AR to help children learn in much more immer-
sive way. AR Scratch [23] is a popular software that adds
AR with Scratch programming, enabling children to mix vir-
tual stuff with reality. Tern [13] is a tangible programming
language used to teach computer programming to middle

school students, by joining wooden blocks as the program’s
building blocks. Daqri Elements4D [2] is another interac-
tive AR solution that teaches basic chemistry by making
use of cubes to show chemical reactions. Another toolkit
named AlgoBlock [28] uses physical blocks that are joined
together and later connected together to execute the pro-
gram. CodeBits [11] helps to instill the idea of problem
solving in kids by making use of paper bits put together in
particular order to solve a maze. Most of today’s AR Ed-
ucational toolkits require heavy computing power and so-
phisticated sensors and accessories to achieve good re-
sults, which makes it costly, less portable, and non-mobile.
PlutoAR, a computationally light-weight AR interpreter is
mainly made to counter the above challenges by making
learning inexpensive, immersive, portable and safe for chil-
dren. It uses Android based mobile AR technology, helping
kids to learn basics of programming, arithmetic and com-
putational thinking. We strongly believe that technology in
schools must be systematically supported for inculcating a
teamwork effort amongst students.

PlutoAR: Approach and Design
PlutoAR comes as a “DreamKit” consisting of tiles, the
launchpad and the Android mobile application.

The “tiles” or programming blocks, are paper cut outs as
shown in the Figure 1. These make up the tangible aspect
of PlutoAR. Children place these programming blocks ac-
cording to the logic and imagination they have thought of for
creating AR experiences.

The launchpad is a large sheet of paper usually A4 in size
which has two distinct regions outlined as “canvas” and
“space”. The “canvas” is the area where children place the
“tiles” in a sequence and the interpreted result shows up
as a 3D model when looked through PlutoAR’s mobile ap-

Figure 1: The PlutoAR DreamKit
consisting of Tiles, Launchpad, and
PlutoAR Android Application.

Figure 2: Taking Off Rocket and
learning facts about it in PlutoAR.

plication. The tiles and the launchpad are designed to be
accessible and affordable. Thus, they are printed in black
and white.

The PlutoAR Android Application is used for viewing the
augmented objects. The user points the camera of the mo-
bile phone at the launchpad and starts placing tiles on the
“canvas” area of the launchpad. For each tile that is placed
on “canvas”, the PlutoAR Interpreter recognises the action
to be executed and the output appears in the launchpad.
The immediate output generated is useful in debugging and
understanding the logic step by step.

PlutoAR App is ofﬂine to protect the students from cyberbul-
lying and to be accessible to children in places without an
internet connectivity. Cyberbullying, addressed as “An old
problem in a new guise” by Campbell [8], is an important
security factor to look into while students are given access
to mobile devices.
According to ITU worldwide survey [16] on Rural Com-
munications, more than 2.5 Billion people (40% of world’s
population) live in the rural and remote areas of develop-
ing countries where access to telecommunications is still
limited and with this in mind, we have designed it to work
without internet connectivity.

We chose to make an Android application as Android has
approximately 73.39% of mobile operating system market
share worldwide [1] and Android devices are cheaper as
compared to other options. As an example of a developing
country, India has Android tablets priced as low as 35$ [24].

Stories: AR Experiences
PlutoAR has inbuilt AR experiences to stir up the intrinsic
motivation of children and briefs them through, to explore
and experiment with a variety of combinations with the
toolkit.

Students can launch a rocket using the sequence of tiles,
“rocket” and then “takeoff”. A still image of this activity can
be seen in Figure 2.

Similarly students can grow trees by placing the “surface”
tile followed by “tree” and then growing them using “rain” 3.
Though these examples follow a simple algorithm to place
the tiles, children can also experiment with any combination
of the steps to learn and try out their own algorithms for ex-
ample placing the “surface” and “takeoff” card could ﬂy off
the surface. This creates replay value and experimentation
crucial in developing the motivation to use PlutoAR to play
and learn.

Next, we look at an activity which focuses on computational
paradigms such as looping and problem-solving. The “Solv-
ing the Maze” activity gives a simple goal to the child. Nav-
igate the rocket to reach the planet through a maze of as-
teroids with movement and loop tiles. The child could move
the rocket forward by one step or use a loop tile to move
it ﬁve steps forward. This will differ from child to child. For
example, some children may think of different path to nav-
igate the rocket. This activity brings out the computational
thinking and encourages children to develop the intuition of
algorithmic design.

Figure 3: Using “Rain” tile to grow
trees in AR.

Figure 4: Using “Loop” and
Movement tiles to solve the maze.

For implementation of the PlutoAR application, we used the
Unity Game Engine [5] with C# scripting, Android Software
Development Kit (SDK) [3] and Vuforia AR SDK [6]. Vuforia
facilitates easy and rapid implementation of marker based
AR systems.

Finally, we look at the “Asteroid Math” activity where chil-
dren have to add or subtract asteroids to solve a math
equation as visible in Figure 4. PlutoAR checks if the an-
swer is correct. This teaches basic elementary mathematics
through playing and interactive story telling.

All these AR Experiences are demonstrated in the demo
video. [4]

School Visits
We visited KIIT International School, Odisha, India, to test
our product in the real world scenario and the feedbacks,
we received, from the children were encouraging . The
children actively participated in the demonstration activity
which went to show how effective AR in education could be.

Figure 5: Demonstration of PlutoAR application at KIIT
International School, Bhubaneswar, Odisha, India.

Conclusion and Future work
PlutoAR is an inexpensive, tangible and portable educa-
tional toolkit which manages to move forward a step to
teach children to program, play and learn educational facts.
The AR experiences are meticulously designed to introduce
computational thinking in children before core computer

courses. Regarding STEM, PlutoAR’s fact system provides
small yet summarized and important facts about science
and mathematics. Above all, the purpose of PlutoAR is to
make children intrinsically motivated to learn programming
through play.

The current version of PlutoAR is at a prototypical stage. In
the next version, we plan to include the school curriculum
in the form of AR experiences in PlutoAR. We may also
experiment different interaction possibilities with the virtual
objects, such as gesture and gaze-based interactions and
look at methods to expand this to kids who require special
attention.

REFERENCES
1. 2012-2017. Global mobile OS market share.

(2012-2017). https://www.statista.com/statistics/
272698/global-market-share-held-by-mobile-
operating-systems-since-2009/ Retrieved on
October 27, 2017.

2. 2017. Daqri Elements4D. (2017).

http://elements4d.daqri.com/ Retrieved on October
27, 2017.

3. 2018. Android Studio - The Ofﬁcial IDE for Android.

(2018).
https://developer.android.com/studio/index.html
Retrieved on September 3, 2018.

4. 2018. PlutoAR Demo Video. (2018).

https://youtu.be/rQ69bCWQELU Retrieved on
September 3, 2018.

5. 2018. Unity Game Engine. (2018).

https://unity3d.com/ Retrieved on September 3,
2018.

6. 2018. Vuforia Developer Portal. (2018).

13. Michael S. Horn and Robert J. K. Jacob. 2007.

https://developer.vuforia.com/ Retrieved on
September 3, 2018.

7. Ronald T. Azuma. 1997. A Survey of Augmented
Reality. Presence: Teleoperators and Virtual
Environments 6, 4 (1997), 355–385. DOI:
http://dx.doi.org/10.1162/pres.1997.6.4.355

8. Marilyn A. Campbell. 2005. Cyber Bullying: An Old
Problem in a New Guise?. Australian Journal of
Guidance and Counselling 15, 01 (2005), 68–76. DOI:
http://dx.doi.org/10.1375/ajgc.15.1.68

Designing Tangible Programming Languages for
Classroom Use. In Proceedings of the 1st International
Conference on Tangible and Embedded Interaction
(TEI ’07). ACM, New York, NY, USA, 159–162. DOI:
http://dx.doi.org/10.1145/1226969.1227003

14. Judy R Jablon and Michael Wilkinson. 2006. Using

engagement strategies to facilitate children’s learning
and success. YC Young Children (2006), 12–16.

15. L. Johnson, S. Stone, R. Smith, and A. Levine. The

2010 Horizon Report. (Pg. 21).

9. Yu-Chien Chen. 2006. A Study of Comparing the Use

16. Yasuhiko Kawasumi. 2004. Global Survey On Rural

of Augmented Reality and Physical Models in
Chemistry Education. In Proceedings of the 2006 ACM
International Conference on Virtual Reality Continuum
and Its Applications (VRCIA ’06). ACM, New York, NY,
USA, 369–372. DOI:
http://dx.doi.org/10.1145/1128923.1128990

10. T. Crews and U. Ziegler. 1998. The ﬂowchart

interpreter for introductory programming courses. In
Frontiers in Education Conference, 1998. FIE ’98. 28th
Annual, Vol. 1. 307–312 vol.1. DOI:
http://dx.doi.org/10.1109/FIE.1998.736854

Communications. (2004). http:
//www.itu.int/itunews/manager/display.asp?lang=
en&year=2004&issue=05&ipage=globalAgenda
Retrieved on October 27, 2017.

17. Lucinda Kerawalla, Rosemary Luckin, Simon Seljeﬂot,
and Adrian Woolard. 2006. "Making It Real": Exploring
the Potential of Augmented Reality for Teaching
Primary School Science. Virtual Real. 10, 3 (Nov.
2006), 163–174. DOI:
http://dx.doi.org/10.1007/s10055-006-0036-4

18. E A Kirkpatrick. 1894. An experimental study of

11. Sidhant Goyal, Rohan S Vijay, Charu Monga, and

memory. Vol. 1. Psychological Review. (Pg. 605).

Pratul Kalita. 2016. Code bits: An inexpensive tangible
computational thinking toolkit for K-12 curriculum. In
Proceedings of the TEI’16: Tenth International
Conference on Tangible, Embedded, and Embodied
Interaction. ACM, 441–447.

12. Peter B. Henderson, Thomas J. Cortina, and

Jeannette M. Wing. 2007. Computational Thinking.
SIGCSE Bull. 39, 1 (March 2007), 195–196. DOI:
http://dx.doi.org/10.1145/1227504.1227378

19. Irene Lee, Fred Martin, Jill Denner, Bob Coulter, Walter
Allan, Jeri Erickson, Joyce Malyn-Smith, and Linda
Werner. 2011. Computational Thinking for Youth in
Practice. ACM Inroads 2, 1 (Feb. 2011), 32–37. DOI:
http://dx.doi.org/10.1145/1929887.1929902

20. Timothy S McNerney. 2000. Tangible programming
bricks : an approach to making programming
accessible to everyone. (Feb 2000).

27. Elliot Soloway. 1993. Should We Teach Students to

Program? Commun. ACM 36, 10 (Oct. 1993), 21–24.
DOI:http://dx.doi.org/10.1145/163430.164061

28. Hideyuki Suzuki and Hiroshi Kato. 1995.

Interaction-level Support for Collaborative Learning:
AlgoBlock—an Open Programming Language. In The
First International Conference on Computer Support for
Collaborative Learning (CSCL ’95). L. Erlbaum
Associates Inc., Hillsdale, NJ, USA, 349–355. DOI:
http://dx.doi.org/10.3115/222020.222828

29. S. J. Vaughan-Nichols. 2009. Augmented Reality: No
Longer a Novelty? Computer 42, 12 (Dec 2009),
19–22. DOI:http://dx.doi.org/10.1109/MC.2009.380

30. Jeannette M. Wing. 2006. Computational Thinking.

Commun. ACM 49, 3 (March 2006), 33–35. DOI:
http://dx.doi.org/10.1145/1118178.1118215

http://hdl.handle.net/1721.1/62094 Retrieved on
October 27, 2017.

21. Seymour Papert. 1980. Mindstorms: Children,

Computers, and Powerful Ideas. Basic Books, Inc.,
New York, NY, USA.

22. Ryan R. M. and Deci E. L. 2000. Self-determination

theory and the facilitation of intrinsic motivation, social
development, and well-being. American Psychologist
55, 1 (2000), 68–78. DOI:
http://dx.doi.org/10.1037/0003-066X.55.1.68

23. Iulian Radu and Blair MacIntyre. 2009.

Augmented-reality Scratch: A Children’s Authoring
Environment for Augmented-reality Experiences. In
Proceedings of the 8th International Conference on
Interaction Design and Children (IDC ’09). ACM, New
York, NY, USA, 210–213. DOI:
http://dx.doi.org/10.1145/1551788.1551831

24. Pamposh Raina and Heather Timmons. 2011. Meet

Aakash, India’s $35 ’Laptop’. (Oct 2011).
https://india.blogs.nytimes.com/2011/10/05/meet-
aakash-indias-35-laptop/?scp=1&sq=Aakash&st=cse
Retrieved on October 27, 2017.

25. Maria Roussou. 2004. Learning by Doing and Learning

Through Play: An Exploration of Interactivity in Virtual
Environments for Children. Comput. Entertain. 2, 1
(Jan. 2004), 1. DOI:
http://dx.doi.org/10.1145/973801.973818 (Pg. 10).

26. B.E. Shelton and N.R. Hedley. 2004. Exploring a

Cognitive Basis for Learning Spatial Relationships with
Augmented Reality. Technology, Instruction, Cognition
and Learning 1, 4 (2004), 323–357.
http://digitalcommons.usu.edu/itls_facpub/92/

