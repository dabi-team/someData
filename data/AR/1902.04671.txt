A Novel Maneuvering Target Tracking Approach by
Stochastic Volatility GARCH Model

Ehsan Hajiramezanali, Seyyed Hamed Fouladi, and Hamidreza Amindavar

1

9
1
0
2

b
e
F
2
1

]
P
A

.
t
a
t
s
[

1
v
1
7
6
4
0
.
2
0
9
1
:
v
i
X
r
a

Abstract—In this paper, we introduce a new single model ma-
neuvering target tracking approach using stochastic differential
equation (SDE) based on GARCH volatility. The traditional input
estimation (IE) techniques assume constant acceleration level
which do not cover all the possible acceleration quintessence. In
contrast, the multiple model (MM) algorithms that take care of
some IE’s shortcomings, are sensitive to the transition probability
matrices. In this paper, an innovative model
is proposed to
overcome these drawbacks by using a new generalized dynamic
modeling of acceleration and a Bayesian ﬁlter. We utilize SDE
to model Markovian jump acceleration of a maneuvering target
through GARCH process as the SDE volatility. In the proposed
scheme, the original state and stochastic volatility (SV) are
estimated simultaneously by a bootstrap particle ﬁlter (PF).
We introduce the bootstrap resampling to obtain the statistical
properties of a GARCH density. Due to the heavy-tailed nature
of the GARCH distribution, the bootstrap PF is more effective in
the presence of large errors that can occur in the state equation.
We show analytically that the target tracking performance is
improved by considering GARCH acceleration model. Finally,
the effectiveness and capabilities of our proposed strategy (PF-
AR-GARCH) are demonstrated and validated through simulation
studies.

Index Terms—Maneuvering target tracking, stochastic volatil-

ity, SDE, GARCH process, bootstrap particle ﬁlter.

I. INTRODUCTION

M ANEUVERING target tracking has attracted a great

deal of attention in recent years, due to the signiﬁcant
importance to a wide range of civilian applications such as in-
telligent transportation systems, air trafﬁc control, surveillance,
indoor tracking, cellular radio network and bioinformatics [1]–
[4]. However, there are still many challenges that make this
issue difﬁcult. The difﬁculty in tracking a maneuvering target
in the presence of false measurements arises from the indi-
rectly observed acceleration and the uncertainty in modeling a
maneuver in state equation of the target [5]. The behavior of
the moving targets (objects) are governed by physical laws
which can be expressed as mathematical equations. These
equations represent how quantities such as position, speed
and acceleration, etc., change from their current values (at the
present time). The best target position prediction models are

Ehsan Hajiramezanali

neering, Texas A&M University, College Station, TX, USA,
ehsanr@tamu.edu).

is with the Department of Electrical Engi-
(E-mail:

Seyyed Hamed Fouladi is with the Department of Electrical Engineering,
Norwegian Institute of Science and Technology, Trondheim, Norway, (E-mail:
hamed.fouladi@ntnu.no).

Hamidreza Amindavar is with the Department of Electrical Engineering,
Amirkabir University of Technology, No. 424, Hafez Ave., Tehran (15914),
Iran, (Phone: (+98) 21-6454-3332, Fax: (+98) 21-6640-6469, E-mail: hami-
dami@aut.ac.ir).

global models that solve the mathematical equations governing
the behavior of the target(s) at every point.

Signiﬁcant research attempts have been allocated to the
problem of maneuvering target tracking. In the history of
development of the target tracking techniques, single model
based Kalman ﬁltering came into existence ﬁrst, but when
the target maneuver occurs, its performance is often seriously
degraded. As a ﬁrst attempt to solve this problem, Singer [6]
proposed a typical whole statistic model where the second-
order statistics of acceleration is the same as a ﬁrst-order
Markov process. Although a tracking ﬁlter with Singer’s
model shows good performance for the target with a low
maneuver, its performance is rapidly corrupted in case of high
maneuvering and constant velocity targets. Moreover, some a
priori statistical descriptions must be given to the maneuver
process, that often requires more knowledge about the object
than what is normally available [7]–[13].

In recent years, researchers devoted a great deal of attention
to the decision-based methods, which detect the maneuver
and then cope with it effectively. Examples of this approach
including the IE techniques [8], [14], [15], the variable di-
mension (VD) ﬁlter [7], etc. In addition to the basic ﬁltering
computation, these techniques require a great deal of effort
to detect the target abrupt accelerations [16], [17]. In the IE
scheme, which is widely accepted as one of the most effective
decision-based methods, the magnitude of the acceleration
is identiﬁed in a least square format when a maneuver is
detected . Although this method is non-parametric, the detec-
tion algorithm requires a signiﬁcant amount of computation
and memory [7]. Therefore, a large delay exists in this
approach [9], [18]. Furthermore, this technique shows poor
performance in case of low maneuvering target. Although the
modiﬁed input estimation (MIE) [9], [18], [19] demonstrates a
reasonable performance in tracking low-maneuvering targets,
its performance leads to a serious degradation in the presence
of high maneuvers.

On the other hand, the motion of a target can be described
with MM techniques such as the generalized pseudo-Bayesian
(GPB) method [20], the interacting MM (IMM) method [11],
[21]–[26], and etc., which describe the motion of a target using
multiple sub-ﬁlters. Among MM algorithms, the IMM method
is the most common one. However, in the IMM estimators, the
possible motion models and transition probability matrices are
assumed to be known [11], [16]. In practice, the dynamics are
hard to break up into several different motion models and
the model transition probabilities are difﬁcult to obtain [11],
[27], [28]. In addition, with the increase in the number of
models, the computational cost will also increase signiﬁcantly,

 
 
 
 
 
 
which seriously affects the real-time performance for tracking
a maneuvering target. Nevertheless, they have the common
disadvantages: (a) an unnecessary amount of computations
when the target is maneuvering and (b) the potential loss of
accuracy due to an over modeling at these maneuvering times
[29].

On the other hand, a maneuver can be related to time
series that govern the state space model. All the mentioned
approaches [8], [9], [14], [15], [27] constrain the process noise
sequence of the state model to be Gaussian. The Gaussian
assumption on the process noise is not universal because a
target’s motion can be affected by the combination of small
perturbations due to the air turbulence and controller induced
changes to the speed and course [16], [30]. Moreover, the
state space noise for a maneuvering target can be a Markovian
jump process which is unlikely to follow a stationary Gaussian
probability density function. Through this paper, we have
proven analytically, the impact of maneuver in the process
noise. Moreover, we have shown that the impact of maneuver
on the process noise of the state model, can be effectively
modeled as the GARCH process.

In this paper, we expand on the target tracking based on
volatility modeling in conjunction with SDE [31]–[33]. The
proposed GARCH method is suitable for both maneuvering
and non-maneuvering target motions. The SV, i.e. time vary-
ing variance, causes the model error covariance to be time
varying. However, the time-varying conditional covariance is
considered for the state equation which can better describe the
maneuver. To take the advantage of SV in (non)-maneuvering
target, we calculated the stochastic It¯o integral to obtain the
covariance matrix. The advantages of the proposed method
are two fold. First, the state estimation accuracy of our method
outperforms in comparison with IE, MIE and IMM approaches
especially in high maneuvering targets (jumpy acceleration
maneuver). Secondly, the computational complexity of the
PF-AR-GARCH scheme is low compared to the PF-MM
algorithms. We show analytically that the target tracking per-
formance, by considering GARCH acceleration model, is im-
proved, especially abrupt changes in acceleration tracking. In
the proposed scheme, the original state and SV are estimated
simultaneously with a particle ﬁlter and unlike the decision
based algorithms such as IE, the maneuver detection procedure
is eliminated. Finally, the effectiveness and capabilities of
our proposed strategy are demonstrated and validated through
simulation studies. Simulation tests show that the proposed PF-
AR-GARCH technique is superior to the traditional MIE and
IMM methods in estimation accuracy especially in the velocity
and acceleration estimations. These large improvements in
velocity and acceleration estimations are particularly useful
in some tactical applications such as threat evaluation, the
computation of a hostile missile’s ﬂight time, and etc. [34].

The paper is organized as follows. In section II, the GARCH
process is introduced and the suitability of the GARCH for
modeling the acceleration of targets is provided. Section III
is allocated to describe the new problem formulation and
proposed the target equation motion based on GARCH model.
Section IV is appropriated to bootstrap ﬁltering for non-linear
and non-Gaussian GARCH target model. The complexity of

2

the proposed method is evaluated in section V. Simulation
results with various scenarios are discussed in section VI. At
the end, concluding remarks are provided in section VI.

II. PROBLEM STATEMENT

In this section, we study whether GARCH modeling pro-
vides a ﬂexible and appropriate tool for modeling the acceler-
ation of (non)-maneuvering targets. To examine the suitability
of the GARCH for modeling the acceleration of targets,
ﬁrst, the GARCH process is introduced and its properties
are discussed in subsection A. In the second subsection, we
show analytically that the stochastic behavior of autoregression
coefﬁcients of traditional acceleration models leads to the
conditional heteroscedasticity. At the end of this section, we
describe that SV in SDE captures the features of targets
acceleration. Moreover, in order to select the true estimation
scheme of SV, we explain why GARCH model is suitable.

A. GARCH Model

The traditional time series focus on modeling the condi-
tional ﬁrst moment under an assumption of constant variance.
To generalize the implausible assumption of constant variance,
a class of stochastic processes called Autoregressive Condi-
tional Heteroscedastic (ARCH) processes were introduced by
Engle in [35]. These processes allow the conditional variance
to change over time as a function of past innovations. A more
general class of stochastic processes, GARCH, was introduced
by Bollerslev in [36] with more ﬂexible lag structure.

The AR-GARCH process, which is a ﬁltered version of a
GARCH process with an all-pole ﬁlter [37], [38], is a suitable
model for capturing the statistical properties of acceleration
because the accelerations of targets can be correlated with
time. Therefore, the linear correlation of acceleration can
be modeled by autoregression coefﬁcients. The AR-GARCH
model describes time-varying variance of process and correla-
tion of process with time simultaneously. a(k) follows a pure
AR(r)-GARCH(p, q) model if

r

a(k) =

b(n)a(k − n) + z(k),

z(k) =

h(k)ε(k)

(1)

n=1
X

p

h(k) = α0 +

αiz2(k − i) +

q

p
βih(k − i),

(2)

i=1
X

i=1
X

where α0 > 0, αi, βi ≥ 0, i is the time index, b(n) and r in
(1) are the parameters and the order of AR part respectively,
ε(k) is a sequence of zero-mean iid random variables with
unity variance, and h(k) is the conditional variance of z(k).
In practice, ε(k) is often assumed to be independent Gaussian
random variables. According to [36], the GARCH process,
deﬁned in (1) and (2), is wide sense stationary if and only
if αi + βi ≤ 1. From (2) it is obvious that at each time,
both the neighbouring sample variance and the neighbouring
conditional variance play a role in the current variance.

A characteristic feature of GARCH series is the volatility
clustering, where the periods of high and low volatility occur
in the data. Typically, the changes between periods of low,
medium, and high volatility do not exhibit any systematic

the next status of target

patterns and seem to be the best model as occur randomly
[39]. On the other hand, the target motions can have different
values for the mean of the continuous time acceleration during
each segment of their trajectories in the same way as the
volatility characteristics of a GARCH series. In the other
words, GARCH process follows a fundamental philosophy
in the maneuvering target
about
tracking application. In the proposed GARCH model, GARCH
process considers that the target is in the (non)-maneuver
situations with higher probability if the target is in the (non)-
maneuver status at the previous times. The GARCH(1,1)1
indicates that
the predicted variance rate is based on the
most recent observation of the squared average and the most
recent estimate of the variance rate. Along with the ability
to model the volatility evolution, the GARCH model also
assigns weights that decrease exponentially with respect to the
past observations in the data. Therefore, more recent jumps in
acceleration have more impact on the state space model. This
could yield an advantage for using GARCH modeling of h(k)
in the maneuvering target tracking over Heston modeling, or
Barndorff-Nielsen and Shephard model. Furthermore, because
of the effects of the recent samples in diffusion, this model
also encompasses the “black swan” events which refers to
a sudden large, unexpected movement in the process. In the
proposed acceleration model, a large value of |at−1|, which
is an indication of high volatility of at−1, increases ht, the
volatility of at. In this paper, we utilized the GARCH model
in tracking simulations and it has been shown to give a suitable
representation of the targets maneuver and non-maneuver
trajectories.

Using the results of Bollerslev in [36], it is possible to derive

the kurtosis of GARCH(1,1) to determine.

κ =

E

ε4(k)

− 3E

ε2(k)

2

E

(cid:16)
= 6α2
(cid:0)
1

(cid:17)
1 − 2α1β1 − 3α2
1 − β2
(cid:1)
1

(cid:1)

(cid:0)

−2

ε2(k)
−1
(cid:0)

(cid:1)

(3)

(cid:0)

(cid:1)

where κ is the kurtosis of residual ε(k). If kurtosis is greater
than 0 (κ ≥ 0) by the assumption of moment conditions for
GARCH(1,1) (Fig. 1 in [36]), which can be greater than the
kurtosis of Gaussian distribution, then GARCH(1,1) is found
to successfully model a heavy-tail random process. Because
the abrupt changes in acceleration are translated into heavy-
tail volatilities of acceleration, hence, we expect κ ≥ 0, and
GARCH(1,1) suitably model target acceleration. Therefore,
the proposed target acceleration modeling is provided as an
AR(1)-GARCH(1,1) process in the following.

B. Conditional Heteroscedasticity of Acceleration

Here, we demonstrate analytically the suitability of the
GARCH model for the modeling of target acceleration. The
target acceleration, a, is correlated in time, i.e. acceleration in
time instant k, a(k), can be predicted by the previous value
of acceleration in time instant k − 1, a(k − 1), with a random
prediction error w(k). According to the practical example
described in [6], acceleration correlation in a slow turn often
rises for up to one minute, acceleration correlation in evasive

1The simplest GARCH(1,1) is suitable for all practical scenarios [40], [41].

3

maneuvers will be provided for the periods between ten to
thirty seconds, and acceleration correlation in atmospheric
turbulence will be provided for one or two seconds. In [6],
the discrete acceleration model is expressed as below:

a(k) = e
w(k) = σ2

−µT a(k − 1) + w(k),
mz(k)

(4)

the

conditional variance of a(k),

where σ2
i.e.
m is
Var {a(k)| a(k − 1)} = σ2
m, and z(k) is an i.i.d Gaussian
random process. µ is the reciprocal of the acceleration time
constant. For instance, µ is approximated 1/60, 1/20 and
1 for a slow turn, in an evasive maneuver and atmospheric
turbulence, respectively. It is clear that the value of e−µT
cannot be considered as a constant value under the realistic
circumstances. Therefore, we suppose that the autoregression
coefﬁcient e−µT in (4) is adjusted to behave as a stochastic
process ζ(k). Generally speaking, the stochastic process ζ(k)
could exhibit very small, very large, or no change at all, in
time. Accordingly, equation (4) becomes:

a(k) = ζ(k)a(k − 1) + w(k).

(5)

In appendix A, given the noisy acceleration record a(k) for
0 < k < k − 1 in (5), we prove that the stochastic property
of autoregression coefﬁcient of acceleration in (5), ζ(k), leads
to the conditional heteroscedasticity. Then, in [42], we have
analyzed that even small changes in ζ(k), result in large
changes in the conditional variance of a(k). The conditional
variance of a(k), in terms of the conditional variance, ζ(k) is
expressed as:

Var {a(k)| a(k − 1)} = σ2

ζ a2(k − 1) + σ2

m

(6)

where σ2
ζ is the conditional variance of ζ(k) which can be a
constant or time-varying in time. Therefore, it is not a realistic
assumption on the conditional variance a(k) to be constant
in time, seen from (6). Then, Var {a(k − 1)| a(k − 2)} deter-
mines the present conditional variance Var {a(k)| a(k − 1)}
seen in the following derivations. Referring to (6) and using
(5), the conditional variance can be rewritten as:

Var {a(k)| a(k − 1)} = σ2
= σ2
+ 2σ2

ζ (ζ(k − 1)a(k − 2) + w(k − 1))2 + σ2
m
ζ w2(k − 1)
ζ ζ 2(k − 1)a2(k − 2) + σ2
ζ ζ(k − 1)a(k − 2)w(k − 1) + σ2
m.

(7)

We can calculate a2(k − 2) according to (6) as below:

a2(k − 2) =

1
σ2
ζ

Var {a(k − 1)| a(k − 2)} − σ2
m

.

(8)

inserting

the
(8)
By
Var {a(k)| a(k − 1)} is expressed as:

(7),

in

(cid:0)

conditional

(cid:1)
variance

Var {a(k)| a(k − 1)} =

σ2
ζ ζ 2(k − 1)

1
σ2
ζ

Var {a(k − 1)| a(k − 2)} − σ2
m

+

(cid:0)
ζ ζ(k − 1)a(k − 2)w(k − 1) + σ2

2σ2
ζ 2(k − 1)Var {a(k − 1)| a(k − 2)} − ζ 2(k − 1)σ2
2σ2

ζ ζ(k − 1)a(k − 2)w(k − 1) + σ2

m +
ζ w2(k − 1).

m + σ2

m + σ2

!
(cid:1)
ζ w2(k − 1) =

(9)

 
Therefore, we conclude that conditional variance (9) can be
effectively described by GARCH model, in subsection A. In
the SDE literatures, the time varying conditional variance in
(6-9) is named as stochastic volatility. Therefore, we consider
h(k) = Var {a(k)| a(k − 1)} in the following where h(k) is
the stochastic acceleration volatility.

C. Stochastic Volatility Estimation

The methodology to be presented here is based on the fact
that the target acceleration, at, can be termed as the target
maneuver variable. In order to increase the acceleration mod-
eling capabilities not affected by sampling time, we present
continuous acceleration instead of a discrete modeling. In
the present work, the acceleration volatility and hence, the
amount of target maneuvering, is correlated in time; namely,
if a target is accelerating with large (small) variance at time
t, it is likely to be accelerating with large (small) variance
at time t + τ . In the same way, time series typically exhibit
time-varying volatilities; volatility is an index of time-varying
variance and/or correlation. Higher volatilities in the state
space noise demonstrate an increased chance of maneuvering
motion. Therefore, the models of time varying volatilities and
correlations are essential for the maneuver management.

We model acceleration in terms of It¯o stochastic differential

equation as in

dat = µ at dt +

ht dWt

(10)

p

where µ is the constant drift of the target acceleration at,
ht is the stochastic acceleration volatility, and dWt denotes a
white Brownian motion. In (5)-(9), we proved that the non-
blind acceleration modeling by Singer [6] can be formulated
to encompass larger class of accelerations exhibited by a target
if we consider GARCH modeling of acceleration via an SDE
in (10).

The key problem of the maneuvering target tracking in the
proposed SDE model is to estimate SV of the acceleration.
Estimation of SV is a crucial step in the present work.
Considering ht as the particular SV for the model under study
in (10), it is natural to model the variance function, ht, as
another Brownian motion in the continuous time. For such an
aim, three well-known models are described below:

1) Heston model: The popular Heston model is a com-
monly used SV model, in which, the variance in (10),
ht, obeys the following mean-reverting SDE

dht = θ (ω − ht) dt + ξ

htdBt.

(11)

p

Here, ω is the long-term mean volatility, θ is the rate at
which the volatility reverts toward its long-term mean,
ξ is the conditional standard deviation of the volatility
process, and dBt is another standard Gaussian Brownian
motion that is correlated with dWt of (10) with constant
correlation factor ρ. Equation (11) is known as the Cox-
Ingersoll-Ross (CIR) process in the ﬁnancial literature
[43].

2) GARCH model: In this model, the variance function of
the target acceleration, ht, in (10) is estimated using the

4

GARCH model described by another SDE

dht = θ (ω − ht) dt + ξhtdBt.

(12)

The GARCH model assumes that the randomness of the
variance process varies with the diffusion [39], opposed
to the Heston model where it varies with the square root
of the diffusion.

3) Barndorff-Nielsen and Shephard model: Another ap-
proach is the SV model of Barndorff-Nielsen and Shep-
is an
hard [44] in which the volatility process, ht,
Ornstein-Uhlenbeck process driven by a nondecreasing
L´evy process

dht = −λhtdt + dz(λt),

λ > 0

(13)

where z, with z(0) = 0,
is a homogeneous L´evy
process, i.e. a process with independent and stationary
increments.

Before using the GARCH model for the estimation of SV, it
is essential to discuss the plausibility of GARCH modeling
of ht for a special maneuvering target tracking application.
The validity of this claim is proved by three reasons. (a) Our
ultimate goal is to track ht (a Markovian jumpy process). As
we demonstrated in the subsection A, the stochastic volatility
ht, which is described as conditional variance, causes condi-
tional heteroscedasticity of acceleration. Therefore, GARCH
process is a proper model for ht in this application because
of its fundamental compatibility for heteroscedastic processes.
(b) GARCH models account for the volatility clustering; i.e.,
large changes tend to follow large changes and small changes
tend to follow small ones, are compatible to a large extent to
the maneuvering target. Naturally, we can observe the same
characteristic for target motion, i.e. motions can have low and
high accelerations all the way along a trajectory in a period
of time. (c) As elaborated in the introduction, the process
noise is not Gaussian universally [16], [30]. Therefore, the
use of Gaussian system noise causes blunt estimation to abrupt
changes of the state. To overcome this problem, we propose
the use of uni-modal heavy-tailed non-Gaussian distribution
for innovation process. GARCH model is capable of taking
into account this characteristic of noise, namely heavy-tailed
distribution.

The difference in Heston model in comparison to GARCH
approach is only in the square root of volatility. This square
root reduces the entropy of volatility, hence, GARCH could
encompass more possible target accelerations. On the other
hand, in our opinion, Barndorff-Nielsen and Shephard model
is more general than GARCH modeling for the volatility. This
is because L´evy processes are more general than GARCH
processes [44], [45], however, the amount of computation
required for such modeling is a lot more than GARCH
approach. Based on the comparison between the features of
the maneuverity in the acceleration and the structures of the
GARCH model, one can conclude that the GARCH model is
the most appropriate one for this application. Therefore, we
estimate the stochastic volatility, ht, of the target acceleration
in (10) using the GARCH model illustrated in (12).

III. PROBLEM FORMULATION

Realistic tracking applications require a suitable target
model which is simple enough for the execution in tactical
systems. On the other hand, the computational complexity of
the target model should be at a bounty level not compromising
the accuracy of tracking. Because of its real-time limitations,
the target model offered here accounts for this objective in
a way that it is simple and provides a proper representation
of the maneuvering target behavior. Due to the continuous
nature of an actual target motion, it is often more appropriate
to use the continuous target dynamic models for most tracking
problems [6], [10], [38]. In other words, target motions should
not depend on how and when the samples are taken, which
is often the case, however, for a discrete-time model. In
this paper, the maneuvering target equations are presented by
continuous time model and are then expressed in discrete time
using the standard discretization procedure, thereby providing
an accurate statistical representation of the true target behavior.
The maneuver model considered here is a new approach
which detects the existence of target maneuvers and directly
estimates the magnitude of the unknown parameters. In the
following, the mathematical formulation of the problem of
tracking maneuvering targets using SDE algorithm will be
discussed.

A. Dynamic Equations of Target Motion

To deﬁne the problem of tracking, consider a dynamic
system represented by the state sequence, whose temporal
evolution is provided by two n-dimensional SDE

dX(t) = F X(t)dt + GH
dH(t) =

1
2 (t)dW (t)

θx (ωx − hx(t)) dt + ρxdBx(t)
0

0
θy (ωy − hy(t)) dt + ρydBy(t)

(cid:20)

(14)

(15)
(cid:21)

where t denotes the continuous time index, ωx and ωy are
the long-term mean volatilities, and θx and θy are the rates at
which the volatilities revert toward their long-term means of
direction x and y, respectively, and

X(t) =

x(t)T

v(t)T a(t)T

T

(16)

is a six-dimensional position-velocity-acceleration parameter
(cid:2)
vy(t)]T , and
vector that x(t) = [x(t)
a(t) = [ax(t) ay(t)]T are the position, the velocity and the
acceleration of the target respectively. F is a state transition
matrix

(cid:3)
y(t)]T , v(t) = [vx(t)

0
0
1
0

0
0 0 1 0
0
0 0 0 1
0
0 0 0 0
0 0 0 0
1
0 0 0 0 −µ 0
0 −µ
0 0 0 0

,











F =











G = [0 0; 0 0; 0 0; 0 0; 1 0; 0 1]T is a matrix for the addition of
system noise, dW (t) is considered as a 2-dimensional vector
of independent Brownian motion as below:

5

and dBx(t) and dBy(t) are other standard Gaussian Brow-
nian motion processes that are correlated with dWx(t) and
dWy(t) of (17) with constant correlation factors ρx and ρy,
respectively.

B. Discrete Time Equations of Motion

Since the volatility is independent of the states in the
equation (15), the proposed SDE model for the maneuvering
target is linear in the narrow sense [45]. Therefore, X can be
expressed as the solution of the following stochastic integral
equation [45]:

t

0

Z

X(t) = exp(F t)X(0) +

exp(F (t − s))G

h(s)dW (s) (18)

where the integral is called an It¯o integral and Φ(t) =
exp(F t) is the target state transition matrix. The appropri-
ate discrete time target equation of motion for the tracking
problems is given by:

p

X(k + 1) = Φ(T, µ)X(k) + U (k)

(19)

where Φ(T, µ) can be calculated from Φ(t) by [6], [46] and
U (k) is discretized version of U (t) which according to (18),
is expressed below:

kT +T

U (k) =

exp(F (kT + T − s))GH

1

2 (s)dW (s) (20)

kT

Z

where stochastic volatility matrix, H(s), is

H(s) =

.

(21)

hx(s)

0

0 hy(s)

(cid:21)

(cid:20)

As mentioned above, the second term of right side of (18) is
an It¯o integral, in terms of conventional integral of Riemann’s
type, this integral cannot be calculated due to the irregularity
of the noise. In It¯o formula, the variation of integration, dW ,
is a stochastic process, hence, there is no general explicit
solution for an It¯o integral in the practical applications. The
ﬁltering part does not require the discrete version of It¯o
integral directly. The state equation noise covariance is just
derived from (36), therefore, it is directly suitable for ﬁltering.
Thus, it is plausible to introduce a system noise covariance
using It¯o Integral properties. The two ﬁrst moments of U (k)
are derived in appendix B for the target tracking.

Moreover, the forward Euler discretization can be used
to approximate the SV of 2-dimensional stochastic dif-
ferential equation (15) on a discrete
time grid. Let
[0 = t0 < t1 < · · · < tM = T ] is considered as a partition of
time interval with M equal segments. The elements of the
vector h(k) = diag(H(k)) are the discrete version of non-
zero elements of SV in (21) and have the forms:

h(k) =

=

(cid:20)

(cid:20)

hx(k)
hy(k)
α0x + α1xhx(k − 1) + β1xz2
α0y + α1yhy(k − 1) + β1yz2

(cid:21)

x(k − 1)
y(k − 1)

,

(22)

(cid:21)

dW (t) =

dWx(t)
dWy(t) #

,

"

(17)

where {α0x, α1x, β1x} and {α0y, α1y, β1y} are GARCH pa-
rameters of direction x and y, respectively, whereas α0 =
T /M . According
θω(T /M ), α1 = 1 − θ(T /M ), and α2 = ξ

p

to (1), zx(k) and zy(k) describe as zx(k) =
hx(k)ε(k) and
hy(k)ε(k) in direction x and y, respectively, and
zy(k) =
ε(k) is a sequence of zero-mean iid random variables with
unity variance.

p

p

With regard to what has been described, (19) and (22) are
reformed by augmenting h(k) to the state modeling of (19)
in the form of the standard Bayesian model [47]. By deﬁning
an augmented state via some manipulations, we can write:

6

Initialization

Time Propagation

X (i)
h(i)

k|k−1
k|k−1 #

"

= F N (X (i)

k−1|k−1, h(i)

k−1|k−1)

X N (k) = F N (X(k − 1), h(k − 1), T, µ)

(23)

Weight Calculation

where

X N (k) =

(cid:20)

,

(cid:21)

X(k)
h(k)
Φ(T, µ)X(k − 1) + U (k − 1)
hx(k − 1)
hy(k − 1)

,





F N =





which allows estimating both the target’s kinematic parameters
and its stochastic volatility at the same time.

It is clear that timing is a signiﬁcant factor in a real-time tar-
get tracking problem, and many traditional algorithms demand
to target maneuvering detection as quickly as possible. But, in
the proposed GARCH model in (23), we estimate the original
state and stochastic volatility with a ﬁlter simultaneously and
unlike the decision based algorithms such as IE, the maneuver
detection procedure is eliminated. Therefore, the consumption
time of the maneuver detection is zero. Now, we have a single
non-linear and non-Gaussian model in (23) whose solution via
Kalman ﬁltering results in degraded performance. To resolve
this difﬁculty, various techniques have been investigated and
applied in the literature [48], especially in the target tracking
community. In the next section, we suggest the bootstrap
ﬁltering to enhance the tracking accuracy for the proposed
non-liner non-Gaussian GARCH maneuvering target model.

IV. BOOTSTRAP FILTER FOR MANEUVERING TARGET
TRACKING

Bayesian bootstrap ﬁltering is an ideal approach suitable for
the simulation methodology. It provides a numerical solution
to calculate the distribution by a random sample vector.
Therefore, this feature makes it ideal where very complex
densities can be generated, like in the multiple model prob-
lems. Bootstrapping is an iteration based algorithm to obtain
statistical properties of a probability density function when
only the samples from that density are available. The bootstrap
ﬁlter in [49] performs Bayesian estimation by predicting and
updating a set of samples representing the probability density
functions of the system. The samples tend to concentrate in
high probability regions and the evolution of the samples
is computationally simple. Therefore, this technique is very
signiﬁcant for recursive Bayesian estimation of non-linear and
non-Gaussian systems.

In bootstrapping, a probability density function, p(x), is
approximated by a set of samples. The bootstrap ﬁlter assumes
that the statistical properties of the samples are approximately
those of the density function by using the duality that exists
between a sample and the density that generated it.

Weight Update

¯ω(i)
k = p

yk|

X (i)
h(i)

k|k−1
k|k−1 #!

"

Weight Normalization

ω(i)
k

ˆX k|k
ˆhk|k (cid:21)

(cid:20)

Nef f < 0.5Ns

No

Output Estimation

Yes

Bootstrap Resampling

Fig. 1. Functional structure of proposed PF-AR-GARCH method.

The proposed non-linear and non-Gaussian single model is

X(k) = F N (X(k − 1), h(k), T, µ),

(24)

and the measurement equation can be written as

Y (k) = HX(k) + ǫ(k),

(25)

ǫy

y(t)

vx(k)

vy(k)]T and ǫ =
where Y (k) = [x(t)
ǫvy ]T ∼ N (0, R). Here, R is a 4 × 4 diagonal
[ǫx
ǫvx
measurement covariance matrix in (25) with the diagonal
elements equal to the variances of the positions x and y, and
P osition = E{ǫ2
velocities vx and vy, that are σ2
x} = E{ǫ2
y}
vx} = E{ǫ2
and σ2
V elocity = E{ǫ2
vy }, respectively. Therefore,
H in (25) is considered as

H =

I 4×4 O4×4
O4×4 O4×4

(cid:20)

(cid:21)

for our 8-dimensional proposed state model in (24) where I
indicates the identity matrix and O shows the zero matrix.

If a set of Ns particles, number of particles is an index of
number of iterations in bootstrap PF, X(k−1|k−1), is approx-
imately distributed as the prior density, p(X(k − 1)|Y (k − 1))
and a further set of samples, h(k), approximately distributed
as the process noise density, pGARCH(h(k)), then the set of
samples, X(k|k − 1), are subsequently distributed approxi-
mately as the precision density p(X(k)|Y (k − 1)). In this
approach, the predicted density particles have been generated
without the need to apply the multidimensional integration of

 
Bayes’ rule which is the main computational disadvantage of
grid-based Bayesian estimators [49]. Thus, we can apply much
larger sample sizes in order to obtain greater accuracy without
excessive computation [49].

V. COMPLEXITY ANALYSIS

In this section, the complexity of the proposed method is
evaluated. The main aim of this paper is to propose a single
maneuvering target model with an acceptable performance
instead of using MM. Accordingly, we proposed GARCH
model while we provided arguments about the superiority of
this single model. This model can be used successfully as one
of the models in numerous MM conﬁgurations. Therefore,
the only main objective in
the tracking algorithm is not
this article. Since the proposed non-linear and non-Gaussian
model is ﬁltered with the PF algorithm, we provide a fair
comparison for the computational complexity of the PF-AR-
GARCH with some subcategories of MM methodology such
as auxiliary (AUX)-MMPF and bootstrap-MMPF which apply
the same ﬁltering scheme (i.e. PF algorithm). On the other
hand, the EKF and UKF estimates are not accurate for the
non-linear non-Gaussian MM problems. Naturally, PF can be
used in IMM for the target tracking [50] and visual tracking
[51] applications. In a future research, the proposed GARCH
model can be ﬁltered by the algorithms with lower complexity
such as EKF, UKF, PF-UKF and etc. We did not appeal
to these ﬁltering approaches because the literature for non-
stationary unscented Kalman ﬁltering approaches requires the
development. Thereupon, our proposed GARCH model can be
comparable with the lower complex MM such as EKF-IMM
and UKF-IMM and etc.

M

i=1 d2

Let d denotes the dimension of the state vector, and Ns
refers to the number of particles. As a ﬁrst order approxi-
mation, the complexity of the bootstrap PF algorithm is of
O(Nsd2), while the Kalman ﬁlter is of O(3d3). However, it
is possible to implement the same PF procedure for MM in
i ) operations, where M is the number of models
O(Ns
and di denotes the dimension of the state vector of each model.
According to the section III, formula (23), the dimension of
the proposed state model is 8. This indicates that in the best
case of the MM, the complexity is about 1.2 times more than
the PF-AR-GARCH method in an application with M = 2,
d1 = d2 = 6 and the same Ns. The difference becomes more
apparent when M increases. For example, considering M = 3,
d1 = d2 = d3 = 6, the complexity of MM becomes about 1.7
times more than the complexity of the proposed method.

P

When PF is used in practice, we often wish to minimize
the number of particles in order to reduce the computational
complexity. In this study, we selected Ns = 50 for our
bootstrap PF-AR-GARCH model algorithm according to the
several different simulations. Moreover, the implemented IMM
includes three different models, i.e., a constant velocity (CV)
model, a constant acceleration (CA) model, and a constant
turn (CT) model. Therefore, according to the complexity of
the Kalman ﬁlter mentioned above, the complexity of the
i ). We can indicate analytically that the
IMM is of O(3
complexity of the PF-AR-GARCH scheme is about 1.64 times

i=1 d3

M

P

7

TABLE I
THE NUMBER OF OPERATIONS FOR DIFFERENT ALGORITHMS

Operations

Multiplications

Additions

Comparisons

Bootstrap
PF-AR-GARCH
AUX
PF-AR-GARCH

Bootstrap MMPF

AUX MMPF

(d2+9)Ns

(d2 + 15)Ns

17Ns

20Ns

2Ns

3Ns

(PM

i=1 d2

i + 9)Ns

(PM

i=1 d2

i + 15)Ns

17M Ns

2M Ns

20M Ns

3M Ns

more than the complexity of the applied IMM. The difference
becomes less when the dimension of the measurement vector
increases, in which the measurement update of Kalman ﬁlter
becomes more complex. In addition, we should consider that
in most practical applications, the measurement equations are
non-linear and non-Gaussian. In non-linear and non-Gaussian
problems, the Kalman ﬁlter is not useful. Hence, the complex-
ity of the IMM will be increased in such situations and it will
be comparable with the proposed method. The MIE algorithm
has lower complexity, however, its performance is lower than
the other approaches as shown in the simulation results.

In Table I, we provide the number of operations for the PF-
AR-GARCH model and MM with two different resampling
schemes, Bootstrap and auxiliary particle ﬁlter. Although a
precise comparison is difﬁcult to make, we could conclude
that the proposed method has an acceptable complexity in
comparison with MMs. As it was mentioned above,
the
complexity of the proposed GARCH model can be reduced
if we apply the tracking algorithms that possess the lower
computational complexity for our proposed non-stationary
model. Several different methods such as UKF-GARCH model
can be proposed in the future literatures in order to reduce the
computational complexity.

VI. SIMULATION RESULTS

In the following, some scenarios are simulated to evaluate
the proposed GARCH model
in comparison with several
popular maneuvering target tracking algorithms. These sim-
ulated target trajectories contain a range of maneuver and
evasive target trajectories designed to cover a wide range
of target types and maneuver capabilities. The performance
of the new tracking scheme (PF-AR-GARCH technique) is
compared with the PF algorithm, the MIE method and the
IMM algorithms. The IMM algorithms consist of one CV and
one CA models, on the other hand, EKF-IMM and UKF-IMM
approaches consist of one CV, one CA, and one CT models.

A. Test trajectory 1

As an evaluation of the new tracking scheme (PF-AR-
GARCH method), two examples cited in [7]–[9], [52], will
be simulated with some slight changes to accommodate two
dimension, in X and Y directions. Afterwards, we simulate
different examples drawn from some published results.

2

)
]

s
/

m

[

n
o
i
t
a
r
e
l
e
c
c
A

(
E
S
M

)
]
s
/

m

[

y
t
i
c
o
l
e
V

(
E
S
M

50

45

40

35

30

25

20

15

10

5

0
0

20

18

16

14

12

10

8

6

4

2

0
0

PF−AR−GARCH
IMM−1
IMM−2
MIE
PF

20

40

60

80

100
Sample

(a)

120

140

160

180

200

PF−AR−GARCH
IMM−1
IMM−2
MIE
PF

20

40

60

80

100
Sample

(b)

120

140

160

180

200

TABLE II
THE RMSE RESULT OF DIFFERENT METHODS BY 1000 MONTE CARLO
SIMULATIONS FOR TEST TRAJECTORY 1 (HIGH MANEUVER)

8

RMSE

PF-AR-GARCH

Position
[m]

2.0566

Velocity
[m/s]

1.2849

Acceleration
[m/s2]

2.4288

IMM-1

IMM-2

MIE

PF

2.0732

1.5256

2.5194

2.2313

1.8617

3.4251

5.4701

5.9399

5.0973

4.6599

1.9908

3.3066

]

2

s
/

m

[

n
o
i
t
a
r
e
l
e
c
c
A

f
o
E
S
M

11

10

9

8

7

6

5

4
0

50

100

150

200

300

Number of Particles Ns

400

500

Fig. 2. The MSE of different methods for (a) acceleration and (b) velocity

Fig. 3. The Number of Particles versus the MSE of PF-AR-GARCH method
for Test Trajectory 1 (High Maneuver)

P osition = 104m, and σ2

1) Example A: The position and velocity of

the tar-
get are measured every T = 0.05s and the process
noise is assumed to be zero for the trajectory simulation.
is given by X(t) =
The initial position of
the target
the
[2000m, 10000m, 0m/s, −15m/s]. The variances of
measurement noises are σ2
V elocity =
25m/s. The target is assumed to move with a constant velocity
until time t = 5s in X direction, and the Y direction of the
velocity is constant until time t = 3.5s. The target begins to
maneuver at an acceleration of Uy = 38m/s2 for the sample
interval [70, 200]. At the sample interval [100, 200], a constant
acceleration Ux = 40m/s2 is applied in X direction. The
process noise variances of IMM models, σ2
CA, are
selected according to [23]. In this simulation, the standard
deviation parameters are selected to be σCA = 0.5Ux = 20
and σCA = 0.1σCA = 2, for the CA and CV models,
respectively. The transition probability matrix between the
two models is given by pij = [0.99 0.01;
0.01 0.99],
and pij = [0.85 0.15;
0.15 0.85] for IMM-1 and IMM-
2, respectively. According to the best scenario, the variance
parameters of the PF scheme and the MIE method are selected
to be σ2
MIE = 100, respectively. The number
of the particles related to the PF algorithm is selected to be
Ns = 200.

P F = 150 and σ2

CV and σ2

The performance of the IMM algorithms, MIE scheme,
PF approach and the PF-AR-GARCH method are shown in
Fig. 2 for this simulation. It can be seen that the PF-AR-
GARCH method outperforms the IMM schemes when the
target is in the transition period. In the steady state of the

accelerating interval, some advantages can also be obtained
through the proposed PF-AR-GARCH model but the improve-
ment is generally not so signiﬁcant as that in the transition
case. In addition, the effect of transition probability matrix is
obvious, especially in the constant acceleration period for the
acceleration estimation and in the transition interval for the
velocity estimation. Although the performance of the IMM
methods is better than the proposed method in the CV interval,
the proposed PF-AR-GARCH method outperforms in the other
time intervals, i.e. the transition periods and CA intervals,
which are more important in the maneuver target tracking
applications.

In comparison with MIE model, the PF-AR-GARCH al-
gorithm has a better performance in transition and constant
acceleration periods. In Fig. 2(a), the performance of MIE
is eliminated after 100 samples due to an unacceptable per-
formance and make the ﬁgure more clear. The PF algorithm
shows weak performance in the CV interval compared with
the other approaches. Although the performance of the PF is
better than IMMs and MIE algorithms in the transition period
especially for velocity estimation, the performance of PF-AR-
GARCH approach is superior than PF for acceleration and
velocity estimation in this period. The estimation delay for
the PF is illustrated in the transition period. However, the PF
performance is degraded in the CA interval in comparison with
the proposed PF-AR-GARCH method.

The root mean square error (RMSE) of the proposed
method in comparison with the IMM-1, IMM-2, MIE and

 
 
 
 
 
 
 
PF algorithms,
is shown in Table II. Some Monte Carlo
simulations with 1000 runs in each simulation are performed.
It is seen that the improvement, due to the proposed PF-AR-
GARCH, is rather signiﬁcant, especially in the velocity and
acceleration estimations. As we mentioned in the introduction,
more accurate estimations in the velocity and acceleration
are particularly useful in some applications such as threat
evaluation, etc. According to the PF results in Fig. 2 and Table
II, we can conclude that the PF algorithms without considering
the proper model does not have good performance. This test
illustrates the signiﬁcant effect of the proposed GARCH model
for the maneuvering target tracking applications.

Fig. 3 illustrates the effect of number of particles for the
bootstrapped PF-AR-GARCH tracking in the test trajectory 1
when the other parameters are ﬁxed. The more Ns provide
the less RMSE for the proposed method while the IMM and
MIE are not dependent on this degree of freedom, but, this
higher accuracy provided by bootstrapping comes at an extra
computational cost as denoted in Table I. According to the Fig.
3, Ns = 50 is selected to reduce the computational complexity
in this simulation.
2) Example B:

In this example, we consider the sam-
pling time is T = 0.05s, the initial position of target is
X(t) = [2000m, 10000m, 0m/s, −15m/s], the variances
of the measurement noises are σ2
P osition = 104m, and
σ2
V elocity = 25m/s, and the process noise is zero for the
trajectory simulation. The target is assumed to move with
a constant velocity until time t = 5s in X direction, and
the Y direction of the velocity is constant until time t =
3.5s. The target begins to maneuver at an acceleration of
Uy = 1m/s2 for the sample interval [70, 200]. In the sample
interval [100, 200], a constant acceleration Ux = 0.8m/s2
is applied in X direction. In this simulation, Ns = 50 is
selected based on Fig. 4. The standard deviation parameters
of IMM are selected to be σCA = 1Uy = 1 and σCV =
0.1σCA = 0.1, for the CA and CV models, respectively. The
transition probability matrix between the two models is given
by pij = [0.99 0.01;
0.01 0.99]. According to the best
scenario, the variance parameters of the PF and MIE methods
P F = 5 and σ2
are selected to be σ2
MIE = 5, respectively.
The number of particles in PF algorithms is selected to be
Ns = 200.

This example describes a low maneuver behavior to demon-
strate the performance of PF-AR-GARCH approach compared
with the other methods. Table III shows the RMSE of pro-
posed method in comparison with the IMM, MIE and PF
algorithms. Some Monte Carlo simulations with 1000 runs in
each simulation are performed. It is seen that the proposed
PF-AR-GARCH scheme has a better performance for an
approximately non-jumpy situation. Therefore, we conclude
that PF-AR-GARCH is appropriate equivalently for low and
high maneuver behaviors.

B. Test trajectory 2

In this test,

the trajectory is simulated by heavy-tailed
property assumption of the state equation noise. As we noted
in the introduction, there are some rich literatures on modeling

TABLE III
THE RMSE RESULT OF DIFFERENT METHODS BY 1000 MONTE CARLO
SIMULATIONS FOR TEST TRAJECTORY 1 (LOW MANEUVER)

9

RMSE

PF-AR-GARCH

Position
[m]

2.0462

Velocity
[m/s]

1.1631

Acceleration
[m/s2]

0.7735

IMM

MIE

PF

2.1622

1.2897

1.0211

9.0189

3.7593

1.6243

4.6938

1.7110

1.4165

]

2

s
/

m

[
n
o
i
t
a
r
e
l
e
c
c
A

f
o
E
S
M

1.6

1.4

1.2

1

0.8

0.6

0.4

0.2
0

50

100

150

200

300

400

500

Number of Particles (Ns)

Fig. 4. The Number of Particles versus the MSE of PF-AR-GARCH method
for Test Trajectory 1 (Low Maneuver)

heavy-tailed system noise [30], [53]. Our main purpose is
to develop a model where a maneuver can be considered as
independent heavy-tailed noise to one or more of the state
variables. The reason for this assumption is that the unimodal
heavy-tail distribution represents usually small ﬂuctuations and
abrupt changes of acceleration in a simultaneous manner.

For this test problem, the target’s motion equation is ex-

pressed in terms of the non-Gaussian noise as follows:

˙X(t) = F X(t) + Gϑ(t)

T

(cid:3)

(cid:2)

a

denotes

x(t)T v(t)T a(t)
where X(t) =
six-
dimensional position-velocity-acceleration parameter vector
and ϑ(t) = [ϑx(t) ϑy(t)]T is the non-Gaussian system noise
vector. In this simulation trial, the true target trajectory is
simulated with independent random initial position, velocity,
and acceleration. The true process noise is set to be student-
t with one degree of freedom. The position and velocity
of the target are measured every T = 1s. We have set
the parameters value of IMM as σ2
CV = 0.1, σ2
CA = 10,
and pij = [0.8 0.2;
0.2 0.8]. On the other hand, the
parameters of the EKF-IMM and UKF-IMM approaches are
selected to be σ2
CT = 10. In addition,
the transition probability matrix between the three models in
the EKF-IMM and UKF-IMM methods is given by pij =
[0.99 0.01 0.00; 0.33 0.34 0.33; 0.00 0.01 0.99]. In
this simulation, the selection of IMM parameters is based
on a trade off between the performance of steady state and
transition estimations as well as the previous test. The MIE
parameters are selected according to the best performance as
σ2 = 100.

CA = 5 and σ2

CV = 1, σ2

 
 
 
10

TABLE IV
THE RMSE RESULT OF DIFFERENT METHODS BY 1000 MONTE CARLO
SIMULATIONS FOR TEST TRAJECTORY 2 (STUDENT-t DISTRIBUTION)

TABLE V
THE RMSE RESULT OF DIFFERENT METHODS BY 1000 MONTE CARLO
SIMULATIONS FOR TEST TRAJECTORY 3

RMSE

PF-AR-GARCH

Position
[m]

6.0612

Velocity
[m/s]

2.0857

Acceleration
[m/s2]

1.5900

RMSE

PF-AR-GARCH

Position
[m]

2.3029

Velocity
[m/s]

1.6263

Acceleration
[m/s2]

1.9365

IMM

6.4961

2.5270

2.4861

EKF-IMM

6.4458

2.5204

2.3709

UKF-IMM

6.2996

2.5052

2.1559

MIE

PF

41.7349

9.2089

3.0882

30.8065

7.5206

2.7412

IMM-1

IMM-2

IMM-3

MIE

PF

3.7540

3.1086

2.1046

2.6401

2.4952

2.1206

3.2011

2.9341

2.2144

20.7740

3.9147

3.3100

8.3287

3.7210

2.9695

]

2

s
/

m

[

n
o
i
t
a
r
e
l
e
c
c
A

f
o
E
S
M

2.8

2.6

2.4

2.2

2

1.8

1.6

1.4

0

50

100

150

200

300

Number of Particles (Ns)

4

3.5

3

2.5

2

]

2

s
/

m

[

n
o
i
t
a
r
e
l
e
c
c
A

f
o
E
S
M

400

500

1.5
0

50

100

150

200

300

400

500

Number of Particles (Ns)

Fig. 5. The Number of Particles versus the MSE of PF-AR-GARCH method
for Test Trajectory 2

Fig. 6. The Number of Particles versus the MSE of PF-AR-GARCH method
for Test Trajectory 3

For the quantitative comparison, the RMSE of tracking
results are calculated. To achieve more precise results, some
Monte Carlo simulations with 1000 runs is obtained in each
algorithm and the RMSE values of the estimation are com-
puted by averaging. The results are illustrated in Table IV.
We can draw two important conclusions from Table IV. First,
the proposed GARCH approach can handle non-Gaussianity
more properly. Second, the effect of estimation delay in the
MIE for high maneuvering trajectories causes large RMSE.

Fig. 5 illustrates the effect of particles number for the
bootstrapped PF-AR-GARCH tracking in test
trajectory 2
when the other parameters are ﬁxed. According to the Fig. 5,
the number of particles, Ns is selected 50 in order to reduce
the computational complexity in this test trajectory.

C. Test trajectory 3

The main goal of this study is (a) to show that the proposed
model is so general that can describe several different motion
models, and (b) to illustrate the sensitivity of IMM method
to the priori parameters, i.e. variance of the state models
and the model transition probability matrix. Moreover, this
simulation shows that
to break
up into several different motion models in IMM methods.
When the parameters are changed to get better performance
in one situation, the other interval of the tracking have a
bad performance and vice versa. In order to provide better

the dynamics are difﬁcult

understanding of the IMM inﬂuence design variables, three
IMMs are simulated. We considered the noise standard de-
viation of the state models of IMM-1, IMM-2 and IMM-
3 as σCV = 0.1σ2
CA = 1.5, σCV = 0.1σCA = 0.8, and
σCV = 0.1σCA = 0.5, respectively. The model transition
probability matrix pij = [0.85 0.15;
0.15 0.85] is con-
sidered for three IMMs. The noise variance of the MIE method
is considered as σ2
X = 1000. The sampling time is T = 1s and
the number of the samples are 200. Initial position is assumed
to be X(0) = [10m, −10m, 10m/s, 15m/s]T. Ns = 400
shows the best performance in the PF method for this scenario.
Fig. 6 illustrates the effect of number of particles for the
bootstrapped PF-AR-GARCH tracking in test
trajectory 3
when the other parameters are ﬁxed. According to the Fig.
6, Ns = 100 is selected in order to reduce the computational
complexity in this test trajectory. Fig. 7 and Fig. 8 show the
estimated and actual values for acceleration and velocity of
the target, respectively, which are achieved by the PF-AR-
GARCH, IMM, MIE and PF approaches. Moreover, each algo-
rithm is simulated 1000 times and the ﬁnal RMSE is illustrated
in Table V. Since the performances of the MIE and PF algo-
rithms are not acceptable, their results are eliminated from Fig.
7 to improve the quality of this ﬁgure. The simulation results
show that the proposed algorithm outperforms IMM methods,
especially in sinusoidal case. According to the Fig. 7, at the
time t = 100s, the target acceleration changes drastically. The

 
 
 
 
 
 
GARCH model follows this sinusoidal trajectory quite well,
whereas IMM does not. In the time interval 100s < t < 150s
after the abrupt changes in time instant t = 100s, the value of
conditioned likelihood function in the CV model is extremely
larger than the CA model for IMM-1. Then, the IMM method
allocates higher weights to the CV model in this time interval,
near one. Therefore, the difference of velocity is used as the
estimation of acceleration on this time slot. This approach
provides a better performance to acceleration estimation of
IMM-1. Table V demonstrates that the IMM-1 has a good
performance in the acceleration estimation compared with the
other IMMs, however, its performance to the position and
velocity estimations is lower than IMM-2 and IMM-3. Fig.
8 shows this unacceptable performance of IMM-1 to estimate
the position and velocity. According to Fig. 8, the velocity
estimation of IMM-1 is weak. These differences among three
IMMs tracking accuracies provide a conclusion that IMM
algorithm is sensitive to the priori information. The variance of
process noise of the IMM-1 results in a weak performance to
velocity estimation in the interval 100s < t < 150s, whereas,
an acceptable accuracy to acceleration estimation is resulted
in the sinusoidal intervals. Moreover, the performance of the
IMM-2 is increased in the constant acceleration with decrease
in the variance of the process noise. However, its performance
is degraded in the sinusoidal interval. The decrease of the
noise variance in the IMM-3 shows an inappropriate effect in
the 100s < t < 150s interval.

For better comparison, we also evaluate MSE of estimated
acceleration by running a simulation for the above methods.
The results are depicted in Fig. 9. However, the results of the
PF approach and some time intervals of MIE algorithm are
excluded from Fig. 9 because they do not perform well in this
scenario.

VII. CONCLUSION

In this paper, we introduced a semi-parametric category
of the target
tracking. The parameters are embedded in
AR-GARCH modeling of volatility process. The stochastic
volatility and target’s state are estimated by a bootstrap PF,
simultaneously. We proposed maneuvering motion model of a
target using an SDE whose volatility is subsequently modeled
by a GARCH process. This approach allowed us to evaluate
the performance of SDE model based on GARCH process
for tracking a maneuvering target with abrupt changes in its
acceleration. It is shown that the GARCH model provides ﬁner
tracking accuracy for high maneuvering target by using heavy
tailed distribution modeling, i.e. GARCH, instead of Gaussian
distribution adopted by IMM, MIE, and etc., for system noise
of state space model. The simulation results determine that the
proposed PF-AR-GARCH approach, models and tracks abrupt
changes in acceleration more accurately. Consequently, the
proposed stochastic volatility modeling enhances maneuvering
target tracking performance.

APPENDIX A
CONDITIONAL HETEROSCEDASTICITY OF ACCELERATION
the stochastic prop-
in

erty of autoregression coefﬁcient of acceleration, ζ(k),

In this appendix, we show that

]

2

s
/

m

[

n
o
i
t
a
r
e
l
e
c
c
A
n
o
i
t
c
e
r
i
d
X

]

2

s
/

m

[

n
o
i
t
a
r
e
l
e
c
c
A
n
o
i
t
c
e
r
i
d
Y

11

30

20

10

0

−10

−20

−30
0

20

15

10

5

0

−5

−10

−15

−20
0

Actual
PF−AR−GARCH
IMM−1
IMM−2
IMM−3

20

40

60

80

Actual
PF−AR−GARCH
IMM−1
IMM−2
IMM−3

120

140

160

180

200

100
Time [s]
(a)

20

40

60

80

100
Time [s]

(b)

120

140

160

180

200

Fig. 7. The actual and the estimated acceleration in (a) x direction and (b)
y direction

results conditional heteroscedasticity.
the immediate past

If we suppose
(5)
that
information for acceleration is
Ψk−1 = {a(0), a(1), · · · , a(k − 1), w(0), w(1), · · · , w(k −
1)}, the conditional mean of a(k) will be obtained be con-
ditional expectation of (5):

E {a(k)| Ψk−1} = E {ζ(k)| Ψk−1} a(k − 1)

(26)

Using (26), the conditional variance of a(k) is written as:

Var {a(k)| Ψk−1}
= E

(a(k) − E {ζ(k)| Ψk−1} a(k − 1))2
(ζ(k)a(k − 1) − E {ζ(k)| Ψk−1} a(k − 1) + w(k))2
(cid:8)
ζ a2(k − 1) + σ2
m.
(cid:8)

Ψk−1

(cid:9)

(cid:12)
(cid:12)

= E
= σ2

Ψk−1

(27)
(cid:9)

(cid:12)
(cid:12)

According to (27), it is clear that conditional variance of a(k)
is not constant in time, then, a(k) is conditional heteroscedas-
tic.

APPENDIX B
COVARIANCE MATRIX CALCULATION

In this appendix, we solve the stochastic It¯o integral to
obtain the suggested time-varying covariance matrix for ma-
neuvering target tracking application proposed in this paper
which is applied in bootstrap PF procedure. To achieve this,
we begin with equation (20). We suppose that the SV, H(s),
to H(kT ) in the integration interval
is constant and set
[kT, kT + T ), which is estimated based on GARCH process
in the ﬁltering procedure. Thus,

 
 
 
 
 
 
]
s
/

m

[

y
t
i
c
o
l
e
V
n
o
i
t
c
e
r
i
d
X

700

600

500

400

300

200

100

0

]
s
/

m

[
y
t
i
c
o
l
e
V
n
o
i
t
c
e
r
i
d
Y

0

−100

−200

−300

−400

−500

−600

Actual
PF−AR−GARCH
IMM−1
IMM−2
IMM−3
MIE
PF

100

110

120

130
Time [s]

(a)

140

150

160

Actual
PF−AR−GARCH
IMM−1
IMM−2
IMM−3
MIE
PF

60

70

80

90

100

130

140

150

160

110
Time [s]

120

(b)

2

)
]

s
/

m

[

n
o
i
t
a
r
e
l
e
c
c
A

(
E
S
M

)
]
s
/

m

[

y
t
i
c
o
l
e
V

(
E
S
M

35

30

25

20

15

10

5

0
0

50

45

40

35

30

25

20

15

10

5

0
0

12

PF−AR−GARCH
IMM−1
IMM−2
IMM−3
MIE

20

40

60

80

100
Time [s]

(a)

120

140

160

180

200

PF−AR−GARCH
IMM−1
IMM−1
IMM−3
MIE

20

40

60

80

100
Time [s]

(b)

120

140

160

180

200

Fig. 8. The actual and the estimated velocity in (a) x direction and (b) y
direction

Fig. 9. The MSE of different methods in 200 sec for (a) acceleration and
(b) velocity

where

γ1x(s) = ϕ1(kT + T − s, µ)

hx(kT ),

kT +T

U (k) =

exp(F (kT + T − s))GH

1
2 (kT )dW (s)

kT

Z

kT +T

Φ(kT + T − s, µ)GH

1
2 (kT )dW (s)

=

=

kT

Z

kT +T

kT

Z

(cid:20)p

ϕ1(s)
ϕ2(s)
exp(−µ(kT + T − s))I 2×2





hx(kT )
0

0

hy(kT )

(cid:21) (cid:20)

dWx(s)
dWy(s)

,

(cid:21)

p





γ1y(s) = ϕ1(kT + T − s, µ)

p

hy(kT ),

γ2x(s) = ϕ2(kT + T − s, µ)

hx(kT ),

q

γ2y(s) = ϕ2(kT + T − s, µ)

p

hy(kT ),

γ3x(s) = exp(−µ(kT + T − s))

q

hx(kT ),

γ3y(s) = exp(−µ(kT + T − s))

p

hy(kT ),

(28)

and we deﬁne matrix Γ(s) as follow:

where ϕ1(s) = ϕ1(kT + T − s, µ)I 2×2 and ϕ2(s) =

ϕ2(kT + T − s, µ)I 2×2. Then, we easily have:

Γ(s) =

γ1x(s)
0
γ2x(s)
0
γ3x(s)
0

0
γ1y(s)
0
γ2y(s)
0
γ3y(s)











q

.











kT +T

U (k) =

kT

Z

γ1x(s)
0
γ2x(s)
0
γ3x(s)
0

0
γ1y(s)
0
γ2y(s)
0
γ3y(s)





















Thus

dWx(s)
dWy(s)

,

(cid:21)

(cid:20)

(29)

kT +T

U (k) =

kT

Z

Γ(s)

dWx(s)
dWy(s)

.

(cid:21)

(cid:20)

According to the input vector U (k) in equation (31),

(30)

(31)

 
 
 
 
 
 
 
 
 
 
E

U (k)U T (i)

can be calculated as follow:

n
E

o
U (k)U T (i)

=

iT +T

n

kT +T

o
Γ(s)

dWx(s)
dWy(s)

E

kT
(cid:26) Z
kT +T

=

iT +T

(cid:20)
Γ(s)E

kT

Z

iT

Z

(cid:26)(cid:20)

(cid:21) Z
dWx(s)
dWy(s)

iT

(cid:21)(cid:20)

(cid:20)
dWx(τ )
dWy(τ )

(cid:21)

(cid:27)

dWx(τ )
dWy(τ )
T

T

ΓT (τ )

(cid:21)
(cid:27)
ΓT (τ ). (32)

According to Brownian motion properties [45], independent
increments and zero-mean Gaussian distribution in an incre-
ment, when k 6= i,

E

dWx(s)
dWy(s)

dWx(τ )
dWy(τ )

T

= 02×2

(cid:26)(cid:20)
U (k)U T (i)

(cid:21)(cid:20)
= 02×2. The covariance matrix Q(k)

(cid:27)

(cid:21)

then, E
satisﬁes, using (32),
n

o

Q(k) = E

U (k)U T (k)

n
KT +T

o
Γ(s)dB(s, τ )ΓT (τ )

=

(33)

Z ZkT

where

dB(s, τ ) = E

(cid:26)(cid:20)

dWx(s)dWx(τ )
dWy(s)dWx(τ )

dWx(s)dWy(τ )
dWy(s)dWy(τ )

.

(34)

(cid:21)(cid:27)

The Brownian motions in directions x and y are independent
processes from each other, so that E{dWxdWy} = 0. Accord-
ingly, dB(s, τ ) is a diagonalized matrix and (34) is veriﬁed
by It¯o calculation, E{dWx(s)dWx(τ )} = δ(s − τ )dsdτ , and
can be written as

dB(s, τ ) = [δ(s − τ )dsdτ ]I 2×2.

(35)

By inserting (35) in (33) the covariance matrix Q(k) required
for bootstrapping of PF is expressed as

kT +T

Q(k) =

Γ(s)ΓT (s)ds.

(36)

kT

Z

By substituting (30) in (36) and computing the Riemann
integral, the matrix Q(k) will be obtained.

REFERENCES

[1] Yihua Yu and Qiansheng Cheng, “Particle ﬁlters for maneuvering target
tracking problem,” Signal Processing, vol. 86, no. 1, pp. 195–203, 2006.
[2] Katrin Achutegui, Joaquin Miguez, Javier Rodas, and Carlos J Escudero,
“A multi-model sequential monte carlo methodology for indoor tracking:
Algorithms and experimental results,” Signal Processing, vol. 92, no.
11, pp. 2594–2613, 2012.

[3] Taek Lyul Song, Darko Musicki, and Kim Da Sol, “Target tracking
with target state dependent detection,” IEEE Transactions on Signal
Processing, vol. 59, no. 3, pp. 1063–1074, 2011.

[4] Ehsan Hajiramezanali, Mahdi Imani, Ulisses Braga-Neto, Xiaoning
Qian, and Edward R Dougherty, “Scalable optimal bayesian classiﬁ-
cation of single-cell trajectories under regulatory model uncertainty,” in
Proceedings of the 2018 ACM International Conference on Bioinfor-
matics, Computational Biology, and Health Informatics. ACM, 2018,
pp. 596–597.

[5] Andrew Logothetis, Vikram Krishnamurthy, and Jan Holst, “A bayesian
em algorithm for optimal tracking of a maneuvering target in clutter,”
Signal processing, vol. 82, no. 3, pp. 473–490, 2002.

13

[6] Robert A Singer, “Estimating optimal tracking ﬁlter performance for
manned maneuvering targets,” IEEE Transactions on Aerospace and
Electronic Systems, , no. 4, pp. 473–483, 1970.

[7] Yaakov Bar-Shalom and Kailash Birmiwal, “Variable dimension ﬁlter
for maneuvering target tracking,” IEEE transactions on Aerospace and
Electronic Systems, , no. 5, pp. 621–629, 1982.

[8] PL Bogler, “Tracking a maneuvering target using input estimation,”
IEEE transactions on Aerospace and Electronic Systems, , no. 3, pp.
298–310, 1987.

[9] Ick Ho Whang, Jang Gyu Lee, and Tae Kyung Sung, “Modiﬁed input
IEEE transactions on

estimation technique using pseudoresiduals,”
aerospace and electronic systems, vol. 30, no. 1, pp. 220–228, 1994.

[10] X Rong Li and Vesselin P Jilkov,

“Survey of maneuvering target
tracking. Part I. Dynamic models,” IEEE Transactions on aerospace
and electronic systems, vol. 39, no. 4, pp. 1333–1364, 2003.

[11] Hongda Chen and KC Chang,

“Novel nonlinear ﬁltering & predic-
tion method for maneuvering target tracking,” IEEE Transactions on
Aerospace and Electronic Systems, vol. 45, no. 1, pp. 237–249, 2009.

[12] Nassib Nabaa and Robert H Bishop, “Validation and comparison of
IEEE Transactions on

coordinated turn aircraft maneuver models,”
aerospace and electronic systems, vol. 36, no. 1, pp. 250–259, 2000.

[13] James P Helferty, “Improved tracking of maneuvering targets: The use
of turn-rate distributions for acceleration modeling,” IEEE Transactions
on Aerospace and Electronic Systems, vol. 32, no. 4, pp. 1355–1361,
1996.

[14] Hungu Lee and Min-Jea Tahk, “Generalized input-estimation technique
for tracking maneuvering targets,” IEEE transactions on Aerospace and
Electronic Systems, vol. 35, no. 4, pp. 1388–1402, 1999.

[15] YT Chan, AGC Hu, and JB Plant,

“A kalman ﬁlter based tracking
scheme with input estimation,” IEEE transactions on Aerospace and
Electronic Systems, , no. 2, pp. 237–244, 1979.

[16] Liu Jing and Prahlad Vadakkepat, “Interacting mcmc particle ﬁlter for
tracking maneuvering target,” Digital Signal Processing, vol. 20, no. 2,
pp. 561–574, 2010.

[17] Fun-Bin Duh and Chin-Teng Lin,

“Tracking a maneuvering target
using neural fuzzy network,” IEEE Transactions on Systems, Man, and
Cybernetics, Part B (Cybernetics), vol. 34, no. 1, pp. 16–33, 2004.
[18] Tae K Sung and Jang Gyu Lee, “A decoupled adaptive tracking ﬁlter
for real applications,” IEEE transactions on aerospace and electronic
systems, vol. 33, no. 3, pp. 1025–1030, 1997.

[19] Ali Karsaz and Hamid Khaloozadeh, “An optimal two-stage algorithm
for highly maneuvering targets tracking,” Signal processing, vol. 89, no.
4, pp. 532–547, 2009.

[20] Jitendra K Tugnait, “Detection and estimation for abruptly changing

systems,” Automatica, vol. 18, no. 5, pp. 607–615, 1982.

[21] Yaakov Bar-Shalom, X Rong Li, and Thiagalingam Kirubarajan, Esti-
mation with applications to tracking and navigation: theory algorithms
and software, John Wiley & Sons, 2004.

[22] Henk AP Blom and Yaakov Bar-Shalom,

“The interacting multiple
model algorithm for systems with markovian switching coefﬁcients,”
IEEE transactions on Automatic Control, vol. 33, no. 8, pp. 780–783,
1988.

[23] Leigh A Johnston and Vikram Krishnamurthy,

“An improvement to
the interacting multiple model (imm) algorithm,” IEEE transactions on
signal processing, vol. 49, no. 12, pp. 2909–2923, 2001.

[24] X Rong Li and Yaakov Bar-Shalom, “Performance prediction of the
interacting multiple model algorithm,” IEEE Transactions on Aerospace
and Electronic Systems, vol. 29, no. 3, pp. 755–771, 1993.

[25] Thia Kirubarajan, Yaakov Bar-Shalom, Krishna R Pattipati, and Ivan
Kadar, “Ground target tracking with variable structure imm estimator,”
IEEE Transactions on Aerospace and Electronic Systems, vol. 36, no.
1, pp. 26–46, 2000.

[26] I Bilik and J Tabrikian, “Maneuvering target tracking in the presence
IEEE
of glint using the nonlinear gaussian mixture kalman ﬁlter,”
Transactions on Aerospace and Electronic Systems, vol. 46, no. 1, 2010.
[27] K Punithakumar, T Kirubarajan, and A Sinha, “Multiple-model proba-
bility hypothesis density ﬁlter for tracking maneuvering targets,” IEEE
Transactions on Aerospace and Electronic Systems, vol. 44, no. 1, pp.
87–98, 2008.

[28] Xuezhi Wang, Subhash Challa, Rob Evans, and X Rong Li,

“Min-
imal submodel-set algorithm for maneuvering target tracking,” IEEE
Transactions on Aerospace and Electronic Systems, vol. 39, no. 4, pp.
1218–1231, 2003.

[29] Tan-Jan Ho and Bor-Sen Chen, “Novel extended viterbi-based multiple-
model algorithms for state estimation of discrete-time systems with
markov jump parameters,” IEEE Transactions on Signal Processing,
vol. 54, no. 2, pp. 393–404, 2006.

14

[53] N Ikoma, T Higuchi, and H Maeda, “Tracking of maneuvering target
by using switching structure and heavy-tailed distribution with particle
ﬁlter method,” in Control Applications, 2002. Proceedings of the 2002
International Conference on. IEEE, 2002, vol. 2, pp. 1282–1287.

[30] A Sinha, T Kirubarajan, and Y Bar-Shalom, “Application of the kalman-
IEEE Transactions on

levy ﬁlter for tracking maneuvering targets,”
Aerospace and Electronic Systems, vol. 43, no. 3, 2007.
[31] Mohammadehsan Hajiramezanali and Hamidreza Amindavar,

“Ma-
neuvering target
tracking based on combined stochastic differential
equations and garch process,” in Information Science, Signal Processing
and their Applications (ISSPA), 2012 11th International Conference on.
IEEE, 2012, pp. 1293–1297.

[32] Mohammadehsan Hajiramezanali and Hamidreza Amindavar, “Maneu-
vering target
in
Statistical Signal Processing Workshop (SSP), 2012 IEEE. IEEE, 2012,
pp. 764–767.

tracking based on sde driven by garch volatility,”

[33] Mohammadehsan Hajiramezanali, Seyyed Hamed Fouladi, James A
Ritcey, and Hamidreza Amindavar, “Stochastic differential equations
for modeling of high maneuvering target tracking,” ETRI Journal, vol.
35, no. 5, pp. 849–858, 2013.

[34] Jiin-An Guu and Che-Ho Wei,

“Maneuvering target tracking using
imm method at high measurement frequency,” IEEE Transactions on
Aerospace and Electronic Systems, vol. 27, no. 3, pp. 514–519, 1991.
“Autoregressive conditional heteroscedasticity with
estimates of the variance of united kingdom inﬂation,” Econometrica:
Journal of the Econometric Society, pp. 987–1007, 1982.

[35] Robert F Engle,

[36] Tim Bollerslev, “Generalized autoregressive conditional heteroskedas-
ticity,” Journal of econometrics, vol. 31, no. 3, pp. 307–327, 1986.
[37] Saman Mousazadeh and Israel Cohen, “Ar-garch in presence of noise:
Parameter estimation and its application to voice activity detection,”
IEEE Transactions on Audio, Speech, and Language Processing, vol.
19, no. 4, pp. 916–926, 2011.

[38] Ehsan Hajiramezanali, Siamak Zamani Dadaneh, Paul de Figueiredo,
Sing-Hoi Sze, Mingyuan Zhou, and Xiaoning Qian,
“Differential
expression analysis of dynamical sequencing count data with a gamma
markov chain,” arXiv preprint arXiv:1803.02527, 2018.

[39] David S Matteson and David Ruppert, “Time-series models of dynamic
volatility and correlation,” IEEE Signal Processing Magazine, vol. 28,
no. 5, pp. 72–82, 2011.

[40] Tim Bollerslev, Ray Y Chou, and Kenneth F Kroner, “Arch modeling
in ﬁnance: A review of the theory and empirical evidence,” Journal of
econometrics, vol. 52, no. 1-2, pp. 5–59, 1992.

[41] P Reinhard Hansen and Asger Lunde, “Does anything beat a garch (1,
1)? a comparison based on test for superior predictive ability,” in Com-
putational Intelligence for Financial Engineering, 2003. Proceedings.
2003 IEEE International Conference on. IEEE, 2003, pp. 301–307.
[42] Seyyed Hamed Fouladi, Mohammadehsan Hajiramezanali, Hamidreza
Amindavar, James A Ritcey, and Payman Arabshahi,
“Denoising
based on multivariate stochastic volatility modeling of multiwavelet
coefﬁcients.,” IEEE Trans. Signal Processing, vol. 61, no. 22, pp. 5578–
5589, 2013.

[43] John C Cox, Jonathan E Ingersoll Jr, and Stephen A Ross, “A theory of
the term structure of interest rates,” in Theory of Valuation, pp. 129–164.
World Scientiﬁc, 2005.

[44] Ole E Barndorff-Nielsen and Neil Shephard, “Non-gaussian ornstein–
uhlenbeck-based models and some of their uses in ﬁnancial economics,”
Journal of the Royal Statistical Society: Series B (Statistical Methodol-
ogy), vol. 63, no. 2, pp. 167–241, 2001.

[45] Bernt Øksendal,

“Stochastic differential equations,”

in Stochastic

differential equations, pp. 65–84. Springer, 2003.

[46] Arthur Gelb, Applied optimal estimation, MIT press, 1974.
[47] Ehsan Hajiramezanali, Siamak Zamani Dadaneh, Alireza Kar-
balayghareh, Mingyuan Zhou, and Xiaoning Qian, “Bayesian multi-
domain learning for cancer subtype discovery from next-generation
sequencing count data,” in Advances in Neural Information Processing
Systems, 2018, pp. 9133–9142.

[48] Arnaud Doucet and Adam M Johansen, “A tutorial on particle ﬁltering
and smoothing: Fifteen years later,” Handbook of nonlinear ﬁltering,
vol. 12, no. 656-704, pp. 3, 2009.

[49] Shaun McGinnity and George W Irwin, “Multiple model bootstrap ﬁlter
for maneuvering target tracking,” IEEE Transactions on Aerospace and
Electronic systems, vol. 36, no. 3, pp. 1006–1012, 2000.

[50] Shaun McGinnity and George W Irwin, “Manoeuvring target tracking
in Sequential Monte Carlo

using a multiple-model bootstrap ﬁlter,”
Methods in Practice, pp. 479–497. Springer, 2001.

[51] Ben North, Andrew Blake, Michael Isard, and Jens Rittscher, “Learning
and classiﬁcation of complex dynamics,” IEEE Transactions on Pattern
Analysis & Machine Intelligence, , no. 9, pp. 1016–1034, 2000.

[52] YT Chan, AGC Hu, and JB Plant,

“A kalman ﬁlter based tracking
scheme with input estimation,” IEEE transactions on Aerospace and
Electronic Systems, , no. 2, pp. 237–244, 1979.

