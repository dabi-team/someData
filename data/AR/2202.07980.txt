Querying Inconsistent Prioritized Data with ORBITS:
Algorithms, Implementation, and Experiments∗

Meghyn Bienvenu1 , Camille Bourgaux2
1 CNRS & University of Bordeaux, France
2 DI ENS, ENS, CNRS, PSL University & Inria, Paris, France
meghyn.bienvenu@labri.fr, camille.bourgaux@ens.fr

2
2
0
2

y
a
M
5

]

O
L
.
s
c
[

2
v
0
8
9
7
0
.
2
0
2
2
:
v
i
X
r
a

Abstract

We investigate practical algorithms for inconsistency-tolerant
query answering over prioritized knowledge bases, which
consist of a logical theory, a set of facts, and a priority re-
lation between conﬂicting facts. We consider three well-
known semantics (AR, IAR and brave) based upon two no-
tions of optimal repairs (Pareto and completion). Decid-
ing whether a query answer holds under these semantics is
(co)NP-complete in data complexity for a large class of log-
ical theories, and SAT-based procedures have been devised
for repair-based semantics when there is no priority relation,
or the relation has a special structure. The present paper in-
troduces the ﬁrst SAT encodings for Pareto- and completion-
optimal repairs w.r.t. general priority relations and proposes
several ways of employing existing and new encodings to
compute answers under (optimal) repair-based semantics, by
exploiting different reasoning modes of SAT solvers. The
comprehensive experimental evaluation of our implementa-
tion compares both (i) the impact of adopting semantics based
on different kinds of repairs, and (ii) the relative perfor-
mances of alternative procedures for the same semantics.

1

Introduction

The question of how to handle data that is inconsistent w.r.t.
expressed constraints, be they given by database dependen-
cies or ontologies, has great practical relevance. Data clean-
ing addresses this problem by modifying datasets so that
they satisfy the constraints, often using heuristics to decide
how to resolve contradictions, which may result in wrong
facts being kept, or true facts removed (as discussed e.g. in
(Fan 2015)). An alternative, more principled, approach is
to adopt inconsistency-tolerant semantics in order to extract
meaningful information from the contradictory data.

In the database setting, such an approach goes by the
name of consistent query answering (CQA) and has been ex-
tensively studied since the seminal work of Arenas, Bertossi,
and Chomicki (1999), see e.g. the recent survey by Wijsen
(2019). A central notion is that of a (subset) repair, deﬁned
as a maximal subset of the dataset that satisﬁes the con-
straints. Intuitively, repairs represent all different ways of
minimally modifying the data to satisfy the constraints. As

∗This is an extended version of a paper appearing at the 19th In-
ternational Conference on Principles of Knowledge Representation
and Reasoning (KR 2022).

we do not know which repair corresponds to the true part of
the data, the CQA semantics stipulates that a tuple is a query
answer if it is an answer w.r.t. every repair (in line with how
skeptical inference is deﬁned in many KR settings).

Inconsistency-tolerant semantics have also drawn consid-
erable interest in the setting of ontology-mediated query an-
swering (OMQA) (Poggi et al. 2008; Bienvenu and Ortiz
2015; Xiao et al. 2018), where the ontology not only speci-
ﬁes constraints on the data but also captures other forms of
domain knowledge, which can be exploited at query time. In
addition to the AR semantics (the OMQA analog of the CQA
semantics), several other inconsistency-tolerant semantics
have been proposed (see (Bienvenu and Bourgaux 2016;
Bienvenu 2020) for surveys and references), among which:
the brave semantics (Bienvenu and Rosati 2013), which only
requires a tuple to be an answer w.r.t. some repair, provides
a natural notion of possible answer, and the IAR semantics
(Lembo et al. 2010), which answers queries over the inter-
section of the repairs, identiﬁes the most reliable answers.

The basic notion of repair can be reﬁned by exploiting
preference information. A prominent approach, introduced
by Staworko, Chomicki, and Marcinkowski (2012) in the
database setting and recently explored in the OMQA set-
ting (Bienvenu and Bourgaux 2020), assumes that prefer-
ences are given by a binary priority relation between con-
ﬂicting facts. Three notions of ‘best’ repairs w.r.t. a priority
relation were proposed, namely, Pareto-optimal, globally-
optimal, and completion-optimal repairs, and can be used in
place of subset repairs in any repair-based semantics.

The complexity of answering queries under (optimal)
repair-based semantics has been extensively studied in the
database and OMQA settings, refer to (Wijsen 2019; Bi-
envenu and Bourgaux 2016) for an overview and refer-
ences. We can brieﬂy summarize these (many!) complex-
ity results as follows: query answering under the AR (or
CQA) semantics is coNP-hard in data complexity even in
the simplest of settings (e.g. key constraints, class disjoint-
ness), and adopting optimal repairs in place of subset re-
pairs leads to (co)NP-hardness for the brave and IAR se-
mantics as well. Membership in (co)NP holds for AR,
brave, and IAR semantics w.r.t. subset, Pareto-optimal, and
completion-optimal repairs in the most commonly consid-
ered settings i.e. for database constraints given by primary
keys or more generally, functional dependencies (FDs), and

 
 
 
 
 
 
for ontologies formulated in data-tractable description logics
such as those of the DL-Lite family (Calvanese et al. 2007).
The preceding (co)NP complexity results naturally sug-
gest the interest of employing SAT solvers. Two recent sys-
tems, CQAPri and CAvSAT, have begun to explore such
an approach. CQAPri (Bienvenu, Bourgaux, and Goas-
dou´e 2014; 2019) uses tractable approximations together
with calls to SAT solvers to answer queries over inconsis-
tent DL-Lite knowledge bases, under the AR, brave, and
IAR semantics, w.r.t. subset repairs as well as optimal re-
pairs for the restricted class of score-structured priority rela-
tions. CAvSAT (Dixit and Kolaitis 2019) targets relational
databases equipped with denial constraints (which include
FDs as a special case) and computes query answers under
the AR semantics w.r.t. subset repairs. While geared to dif-
ferent forms of constraints, the two systems solve essentially
the same problem, yet they employ SAT solvers in different
ways. CQAPri makes a single SAT call for each candidate
query answer, whereas CAvSAT treats all candidate answers
at the same time via calls to a weighted MaxSAT solver.

This paper presents a comprehensive study of the use of
SAT-based approaches for inconsistency-tolerant query an-
swering, which abstracts from the particular setting and pro-
vides a solid foundation for the future development of such
systems. Our contributions can be summarized as follows.
In Section 3, we provide propositional encodings of the AR,
brave, and IAR semantics, including the ﬁrst encodings for
Pareto- and completion-optimal repairs. Our encodings are
generic and are built in a modular manner from a core set of
basic formulas. Based upon these encodings, we develop
in Section 4 several SAT-based algorithms, which utilize
different functionalities of modern SAT solvers: weighted
MaxSAT, MUS enumeration, iterative SAT calls with as-
sumptions. In Section 5, we present our implemented sys-
tem, ORBITS, which computes query answers under the cho-
sen semantics using the selected encoding and algorithm.
Section 6 presents the result of our extensive experimental
evaluation, using existing OMQA and database benchmarks,
aimed at comparing the different semantics, and understand-
ing the relative performances of different encodings and/or
algorithms for the same semantics. We conclude the paper
in Section 7 and brieﬂy mention some directions for future
work. Proofs, pseudo-code for algorithms, and details on the
experimental evaluation are provided in the appendix.

2 Querying Inconsistent Knowledge Bases
We introduce notation and terminology for talking about
knowledge bases and then recall different inconsistency-
tolerant semantics. We shall assume throughout the paper
that readers are familiar with propositional and ﬁrst-order
logic. Key notions are illustrated in Example 1.

Knowledge bases By knowledge base (KB), we mean a
pair K = (D, T ) consisting of a dataset D and a logical
theory T . The dataset D is a ﬁnite set of ground facts, i.e.
atoms P (c1, . . . , cn) where P is an n-ary predicate and each
ci is a constant. The theory T is a ﬁnite set of ﬁrst-order
logic (FOL) sentences. An L KB is a KB whose theory is
formulated in the L fragment of FOL. Typically, T will be

either an ontology (with L a description logic or decidable
class of existential rules) or a set of database constraints, for
instance, letting L be the class of denial constraints, which
take the form ∀(cid:126)x¬(α1 ∧ . . . ∧ αn), where each αi is a rela-
tional or inequality atom whose variables are among (cid:126)x. De-
nial constraints generalize the more well-known functional
dependencies (FDs) and (primary) key constraints.

A KB K = (D, T ) is consistent, and its dataset D is
called T -consistent, if D ∪ T has at least one model. Oth-
erwise, K is inconsistent, denoted K |= ⊥. To identify
the reasons for a KB K = (D, T ) being inconsistent, we
use the notion of a conﬂict of K, deﬁned as an inclusion-
minimal subset D(cid:48) ⊆ D such that (D(cid:48), T ) |= ⊥. We use
Conf (K), or Conf (D, T ), to refer to the set of all conﬂicts
of K = (D, T ). Note that Conf (D, T ) ⊆ Conf (D(cid:48), T )
whenever D ⊆ D(cid:48).
In particular, this means that adding
more facts cannot render an inconsistent KB consistent.

We will be interested in answering queries over KBs. In
this paper, when we speak of queries, we mean conjunctive
queries, which take the form of conjunctions of relational
atoms P (t1, . . . , tn) (with each ti a constant or variable),
where some variables may be existentially quantiﬁed. Given
a query q((cid:126)x), with free variables (cid:126)x = (x1, . . . , xk), and a
tuple of constants (cid:126)a = (a1, . . . , ak), we denote by q((cid:126)a) the
ﬁrst-order sentence obtained by replacing each variable in (cid:126)x
by the corresponding constant in (cid:126)a. A (certain) answer to
q((cid:126)x) over K = (D, T ) is a tuple of constants (cid:126)a from D such
that q((cid:126)a) holds in every model of K. We use K |= q((cid:126)a) to
indicate that (cid:126)a is a certain answer to q((cid:126)x) over K.

Certain answers are preserved under the addition of facts:
if (D, T ) |= q((cid:126)a) and D ⊆ D(cid:48), then (D(cid:48), T ) |= q((cid:126)a). It
thus makes sense to consider the minimal subsets of the data
responsible for an answer. We call a T -consistent subset
C ⊆ D a cause for q((cid:126)a) w.r.t. K = (D, T ) if (C, T ) |= q((cid:126)a)
and (C(cid:48), T ) (cid:54)|= q((cid:126)a) for every C(cid:48) (cid:40) C; the set of causes for
q((cid:126)a) w.r.t. K is denoted by Causes(q((cid:126)a), K).

Observe that if K is inconsistent, then K |= q((cid:126)a) for every
candidate answer (cid:126)a, which is uninformative and motivates
the need for alternative inconsistency-tolerant semantics.

Repairs
In order to extract meaningful information from
an inconsistent KB, it is useful to consider the parts of the
data that are consistent with the theory. This can be formal-
ized using the notion of repair:

Deﬁnition 1. A (subset) repair of a KB K = (D, T ) is an
inclusion-maximal subset R ⊆ D such that (R, T ) (cid:54)|= ⊥.
We use SRep(K) to denote the set of repairs of KB K.

Subset repairs treats all facts equally. However, prefer-
ences between conﬂicting facts should be taken into account
when they are available. Following (Staworko, Chomicki,
and Marcinkowski 2012; Bienvenu and Bourgaux 2020), we
assume such preferences are given as a priority relation:

Deﬁnition 2. A priority relation (cid:31) for a KB K = (D, T )
is an acyclic binary relation over the facts of D such that if
α (cid:31) β, then there exists C ∈ Conf (K) such that {α, β} ⊆
C. We say that (cid:31) is total if for every pair α (cid:54)= β such that
{α, β} ⊆ C for some C ∈ Conf (K), either α (cid:31) β or β (cid:31) α.
A completion of (cid:31) is a total priority relation (cid:31)(cid:48) ⊇ (cid:31).

Deﬁnition 3. A prioritized KB K(cid:31) consists of a KB K =
(D, T ) and a priority relation (cid:31) for K.

We recall two1 natural ways of reﬁning the notion of re-
pair to exploit priority relations (Staworko, Chomicki, and
Marcinkowski 2012; Bienvenu and Bourgaux 2020):
Deﬁnition 4. Consider a prioritized KB K(cid:31) with K =
(D, T ), and let R ∈ SRep(K).

• A Pareto improvement of R is a T -consistent B ⊆ D such
that there is β ∈ B \ R with β (cid:31) α for every α ∈ R \ B.

The repair R is a:
• Pareto-optimal repair of K(cid:31) if there is no Pareto improve-

ment of R.

• completion-optimal repair of K(cid:31) if R is a Pareto-optimal

repair of K(cid:31)(cid:48), for some completion (cid:31)(cid:48) of (cid:31).

We denote by PRep(K(cid:31)) and CRep(K(cid:31)) the sets of Pareto-
and completion-optimal repairs.

It is known that CRep(K(cid:31)) ⊆ PRep(K(cid:31)) ⊆ SRep(K),
with each of the inclusions potentially strict. Interestingly,
however, if (cid:31) is induced by assigning scores to facts, then
Pareto- and completion-optimal repairs coincide:
Deﬁnition 5. A priority relation (cid:31) for K = (D, T ) is score-
structured if there exists a scoring function s : D → N such
that for every pair of facts α and β that appear together in a
conﬂict of K, we have α (cid:31) β iff s(α) > s(β).
Theorem 1. (Livshits and Kimelfeld 2017; Bourgaux 2016)
Let K(cid:31) be a prioritized KB such that (cid:31) is score-structured.
Then CRep(K(cid:31)) = PRep(K(cid:31)).

Bourgaux (2016) further shows that for score-structured
priorities, Pareto- and completion-optimal repairs also co-
incide with the ⊆P -repairs from (Bienvenu, Bourgaux, and
Goasdou´e 2014) based upon lexicographic set inclusion.

Repair-based semantics We next recall three prominent
inconsistency-tolerant semantics (brave, AR, and IAR),
which we parameterize by the considered type of repair:
Deﬁnition 6. Fix X ∈ {S, P, C} and consider a prioritized
KB K(cid:31) with K = (D, T ), query q((cid:126)x), and tuple of constants
(cid:126)a from D with |(cid:126)x| = |(cid:126)a|. Then (cid:126)a is an answer to q over K(cid:31)
• under X-brave semantics, denoted K(cid:31) |=X
brave q((cid:126)a), if
(R, T ) |= q((cid:126)a) for some R ∈ XRep(K(cid:31))
• under X-AR semantics, denoted K(cid:31) |=X
AR
(R, T ) |= q((cid:126)a) for every R ∈ XRep(K(cid:31))
• under X-IAR semantics, denoted K(cid:31) |=X
R∈XRep(K(cid:31)) R

(B, T ) |= q((cid:126)a) where B = (cid:84)

IAR q((cid:126)a),

q((cid:126)a),

if

if

The AR semantics is arguably the most natural way of
deﬁning plausible query answers, and it is the semantics
used for consistent query answering in databases (Bertossi
2011). The brave semantics captures the notion of possible
answers, while the IAR semantics identiﬁes the answers that
can be obtained using only the most reliable facts. Observe
that K(cid:31) |=X

IAR q ⇒ K(cid:31) |=X

AR q ⇒ K(cid:31) |=X

brave q.

1Staworko et al. (2012) deﬁned a third notion, globally-optimal
repairs, which we do not consider due to their higher complexity.

Example 1. Let K = (D, T ) where D contains four facts
α = R(a, b), β = R(a, c), γ = S(d, c), and δ = S(d, b),
and T contains FDs ∀x, y, z¬(R(x, y) ∧ R(x, z) ∧ y (cid:54)= z),
∀x, y, z¬(S(x, y) ∧ S(x, z) ∧ y (cid:54)= z) and the denial con-
straint ∀x, y, z¬(R(y, x) ∧ S(z, x)).

The conﬂicts of K are {α, β}, {γ, δ}, {α, δ} and {β, γ},
If we deﬁne (cid:31) by
hence SRep(K) = {{α, γ}, {β, δ}}.
α (cid:31) β and γ (cid:31) δ, we obtain PRep(K(cid:31)) = SRep(K) but
CRep(K(cid:31)) = {{α, γ}}. Indeed, any completion (cid:31)(cid:48) of (cid:31) is
such that α (cid:31)(cid:48) δ or γ (cid:31)(cid:48) β by acyclicity.

If q(x) = ∃yR(x, y), Causes(q(a), K) = {{α}, {β}}.

Hence, K(cid:31) |=C

IAR q(a), K(cid:31) |=P

AR q(a) but K(cid:31) (cid:54)|=P

IAR q(a).

We brieﬂy recall what is known about the complexity
of query answering under (optimal) repair-based semantics.
Note that when we speak of complexity, we mean data com-
plexity, measured solely in terms of the size of the dataset.

Theorems 2 and 3 summarize upper and lower bounds
from the database and ontology settings. All of them
are known (Staworko, Chomicki, and Marcinkowski 2012;
Bienvenu and Bourgaux 2020; Rosati 2011), except the
lower bounds for X-brave and X-IAR semantics in the case
of FDs, proven in the appendix. We say that a logic L enjoys
PTIME consistency checking (resp. query entailment) if the
problem of deciding whether K |= ⊥ (resp. K |= q((cid:126)a)) for
an input L KB is in PTIME.
Theorem 2. Let L be any FOL fragment that enjoys PTIME
consistency checking and query entailment, and let X ∈
{S, P, C}. Then query entailment for L KBs is
• in NP under X-brave semantics, and
• in coNP under X-AR and X-IAR semantics.
Theorem 3. Query entailment for L KBs is
• NP-hard under X-brave semantics (X ∈ {P, C})
• coNP-hard under X-AR semantics (X ∈ {S, P, C})
• coNP-hard under X-IAR semantics (X ∈ {P, C})
for any L that extends DL-Litecore, EL⊥, or FDs.
Remark 1. Query entailment under S-brave and S-IAR is
tractable both for DL-Lite ontologies and denial constraints
(Bienvenu and Rosati 2013).

3 SAT Encodings
The (co)NP complexity results from the previous section
suggest a SAT-based approach to query entailment under
(optimal) repair-based semantics. While our work is not the
ﬁrst to explore SAT encodings for inconsistency-tolerant se-
mantics, our contribution is a uniform approach that covers
a wide range of semantics and settings, and provides the ﬁrst
encodings for Pareto- and completion-optimal repairs.

3.1 Overview
Our propositional encodings are built from:
• the set Conf (K) of conﬂicts of the considered KB K,
• a set PotAns of potential answers, and for each (cid:126)a ∈

PotAns, the (non-empty2) set Causes(q((cid:126)a), K),

2If Causes(q((cid:126)a), K) = ∅, q((cid:126)a) holds for none of our semantics.

• the priority relation (cid:31) of K,

y is true. To block all causes of the BCQ q((cid:126)a), we can use

and are of polynomial size w.r.t. to these inputs. Note that for
DL-Lite ontologies and denial constraints, the sets of con-
ﬂicts, candidate answers, and their causes, can be computed
in PTIME via database query evaluation, so our encodings
will yield procedures of the expected co(NP) complexity.

To simplify the treatment, we shall assume that every con-
ﬂict contains at most two facts, a property that is satisﬁed by
the most common DL-Lite dialects and for FDs. (The exten-
sion to non-binary conﬂicts is discussed later in the section.)
By restricting our attention to binary conﬂicts, we can use
a convenient notation α⊥β in place of {α, β} ∈ Conf (K),
and deﬁne a graph representation of conﬂicts and priorities.
The directed conﬂict graph GK(cid:31) has facts from Conf (K) as
nodes and an edge from α to β iff α⊥β and α(cid:54)(cid:31)β.

Our encodings will use variables of the form xα to in-
dicate whether fact α appears in a (partial) repair. Includ-
ing one such variable for each fact in D would yield pro-
hibitively large encodings, which is why we use GK(cid:31) to fo-
cus on relevant facts: given any F ⊆ D, we let R(F ) be the
set of all facts that are reachable in GK(cid:31) from some α ∈ F .
Before proceeding to the details, let us give a high-level
overview of our encodings. All of the encodings try to con-
struct a set of facts that is consistent with the theory (i.e.
does not contain any conﬂicts) and that can be extended to
an optimal repair. For the X-AR semantics, we are trying
to build an optimal repair that does not entail the considered
query answer(s), which can be done by including facts that
contradict each of the answer(s) causes. For the X-brave
semantics, we must ensure that the repair entails the consid-
ered query answer(s), achieved by requiring the presence of
some cause in the chosen subset. Finally, for the X-IAR se-
mantics, we ensure the existence of optimal repairs that omit
a given cause or fact appearing in a cause by including facts
that contradict the considered cause or fact.

In the next section, we will present SAT-based algorithms
that consider each potential answer in turn, as well as algo-
rithms that treat all potential answers conjointly. For that
reason, in what follows, we will present encodings both for
a single answer and for several answers at a time.

3.2 Basic Building Blocks

Our various encodings rely upon some common ingredients,
which are presented next.

Absence or presence of causes To contradict a speciﬁc
cause C, we use ϕ¬C, with two alternative deﬁnitions in-
spired respectively by the CQAPri and CAvSAT encodings:

(cid:95)

(cid:95)

ϕ¬C =

xβ

(neg1)

ϕ¬C =

α∈C
(cid:95)

α∈C

α⊥β,α(cid:54)(cid:31)β

¬xα ∧

(cid:94)

(xα ∨

(cid:95)

xβ)

(neg2)

α∈C

α⊥β,α(cid:54)(cid:31)β

For encodings with multiple answers, we use a variant
ϕ(cid:48)
¬C(y) obtained by adding ¬y as a disjunct of the (ﬁrst)
clause of ϕ¬C, so it is only ‘active’ when the given variable

ϕ¬q((cid:126)a) =

(cid:94)

ϕ¬C

C∈Causes(q((cid:126)a),K)

or, in the case of encodings for several answers, a variant
¬q((cid:126)a) obtained by replacing ϕ¬C by ϕ(cid:48)
ϕ(cid:48)
If instead we want to force that cause C holds, we use:

¬C(x(cid:126)a).

ϕC =

(cid:94)

α∈C

xα

and to ensure some cause for BCQ q((cid:126)a) is present, we use:

ϕq((cid:126)a) =(

(cid:95)

xC) ∧

(cid:94)

(cid:94)

¬xC ∨ xα

C∈Causes(q((cid:126)a),K)

C∈Causes(q((cid:126)a),K)

α∈C

or, for multi-answer encodings, a variant ϕ(cid:48)
from ϕq((cid:126)a) by adding ¬x(cid:126)a as a disjunct of the ﬁrst clause.

q((cid:126)a) obtained

Consistency We use ϕcons(F ) to ensure that the valuation
of {xα | α ∈ F } corresponds to a T -consistent set of facts:

ϕcons(F ) =

(cid:94)

(cid:16)

¬xα ∨ ¬xβ

(cid:17)

.

α,β∈F,α⊥β

Extension to optimal repair The most intricate part of
the encoding is ensuring that the selected set of facts can be
extended to a repair of the desired type. To this end, we in-
troduce formulas of the form ϕX-max(F ), where F provides
the facts that may appear, and X is the type of repair.
• Subset repairs: we can simply set ϕS-max(F ) = (cid:62), as
every consistent set of facts extends to some S-repair.

• Pareto-optimal repairs: we prove that

the following
encoding of maximality for ⊆P -repairs (w.r.t. score-
structured (cid:31)) from Bienvenu et al.
(2014) in fact also
works for Pareto-optimal repairs and arbitrary (cid:31):

ϕP1-max(F ) =

(cid:94)

(xα ∨

(cid:95)

xβ)

α∈R(F )

α⊥β,α(cid:54)(cid:31)β

Essentially, it states that a relevant fact can only be omit-
ted if we include a non-dominated contradicting fact. We
also propose an alternative encoding with fewer variables:
(cid:94)

(cid:94)

(cid:95)

(¬xα ∨

xγ)

ϕP2-max(F ) =

α∈R−(F )

β(cid:31)α

β⊥γ,β(cid:54)(cid:31)γ

where R−(F ) = (cid:83)∞

i=1 Ri with R0 = F and

Ri+1 = Ri ∪ {γ | ∃α ∈ Ri, β (cid:31) α, β⊥γ, β (cid:54)(cid:31) γ}.
Intuitively, to include α ∈ F , we must contradict every
more preferred fact that conﬂicts with α, then do the same
for selected contradicting facts.

• Completion-optimal repairs (w.r.t. arbitrary (cid:31)): we use

ϕC-max(F ) =ϕpref ∧ ϕcompl ∧ ϕacyc
where the subformulas ϕpref , ϕcompl, and ϕacyc are deﬁned
in Figure 1. The formula ϕpref states that if xα is omitted,
then we must include a contradicting fact β that is pre-
ferred to α according to (cid:31)(cid:48). We use ϕcompl to ensure that
(cid:31)(cid:48) compares all contradicting facts and extends (cid:31), while
the acyclicity of (cid:31)(cid:48) is ensured by ϕacyc, which uses vari-
ables tα,β to compute the transitive closure of (cid:31)(cid:48).

ϕpref =

(cid:94)

(cid:16)

xα ∨

(cid:95)

xβ→α

(cid:17)

∧

(cid:94)

(cid:16)

(¬xβ→α ∨ xβ) ∧ (¬xβ→α ∨ xβ(cid:31)(cid:48)α)

(cid:17)

α∈R(F )
(cid:94)

β∈R(F ),α⊥β
(cid:16)

xα(cid:31)(cid:48)β ∨ xβ(cid:31)(cid:48)α

(cid:17)

∧

α,β∈R(F ),α⊥β
(cid:16)

(cid:94)

¬xα(cid:31)(cid:48)β ∨ ¬xβ(cid:31)(cid:48)α

(cid:17)

∧

(cid:94)

xα(cid:31)(cid:48)β

α,β∈R(F ),α⊥β
(cid:94)

(cid:16)

¬xα(cid:31)(cid:48)β ∨ tα,β

(cid:17)

∧

α,β∈R(F ),α⊥β
(cid:16)

(cid:94)

¬xα(cid:31)(cid:48)β ∨ ¬tβ,α

(cid:17)

∧

α,β∈R(F ),α(cid:31)β
(cid:16)

(cid:94)

¬tα,β ∨ ¬xβ(cid:31)(cid:48)γ ∨ tα,γ

(cid:17)

ϕcompl =

ϕacyc =

α,β∈R(F ),α⊥β

α,β∈R(F ),α⊥β

α,β,γ∈R(F ),β⊥γ

Figure 1: Subformulas of ϕC-max(F ), which is used to ensure it is possible to extend the selected subset of F to a completion-optimal repair.

Non-binary conﬂicts We brieﬂy discuss how to modify
the preceding formulas to handle non-binary conﬂicts. The
most essential difference is that instead of choosing a single
contradicting fact, we may need to choose a conjunction of
facts, and use additional variables to refer to them. We must
also redeﬁne GK(cid:31) as a directed hypergraph, and use hyper-
graph reachability to deﬁne R(F ). Details of the required
modiﬁcations are provided in the appendix.

3.3 Propositional Encodings
We now present our encodings, built from the preceding
components following the intuitions given in Section 3.1.

Note that the following results hold no matter which vari-
ant of ϕ¬C we use and with ϕP-max instantiated as either
ϕP1-max or ϕP2-max. The notation facts(ϕ) will be used for
the set of facts α such that the variable xα occurs in ϕ.

X-AR semantics Formula ΦX-AR(q((cid:126)a)) in Figure 2 is
used to test whether a particular tuple (cid:126)a holds. Roughly
speaking, it selects a way to contradict every clause, check-
ing that the resulting set of facts is contained in a X-optimal
repair. The second formula ΨX-AR(PotAns) simultane-
ously handles all tuples in PotAns. Clauses of the form
x(cid:126)a can be added to activate ϕ(cid:48)

¬q((cid:126)a).
The correctness of our encodings is given in the next re-

sult, which applies to all X ∈ {S, P, C} and (cid:126)a ∈ PotAns:
Theorem 4. The following are equivalent : (i) K(cid:31) |=X
AR
q((cid:126)a), (ii) ΦX-AR(q((cid:126)a)) is unsatisﬁable, and (iii) x(cid:126)a is false
in every satisfying assignment of ΨX-AR(PotAns).

X-brave semantics Figure 2 presents our encodings for
the X-brave semantics. Formula ΦX-brave(q((cid:126)a)) checks
tuple (cid:126)a and is essentially the same as
a particular
ΦX-AR(q((cid:126)a)), but with ϕq((cid:126)a) in place of ϕ¬q((cid:126)a). A variant
ΦX-brave(C) can be used to check whether a particular cause
C holds in some X-optimal repair. For a multi-answer encod-
ings, we use the formula ΨX-brave(PotAns), again adding
clauses of the form x(cid:126)a to activate ϕ(cid:48)
q((cid:126)a). We obtain an anal-
ogous correctness result:
Theorem 5. The following are equivalent: (i) K(cid:31) |=X
brave
q((cid:126)a), (ii) ΦX-brave(q((cid:126)a)) is satisﬁable, (iii) ΦX-brave(C) is
satisﬁable for some C ∈ Causes(q((cid:126)a), K), and (iv) x(cid:126)a is
true in some satisfying assignment of ΨX-brave(PotAns).

X-IAR semantics Formula ΦX-IAR(C) from Figure 2 can
be used to test whether there exists a X-optimal repair

that excludes cause C. To check a potential answer (cid:126)a, we
use ΦX-IAR(q((cid:126)a)), which is essentially the conjunction of
ΦX-IAR(C) for every cause C of q((cid:126)a), but where the con-
juncts for different causes use distinct variables (xC
α in place
of xα). A multi-answer encoding ΨX-IAR(PotAns) can be
obtained by taking the conjunction of ΦX-IAR(q((cid:126)a)) for all
(cid:126)a ∈ PotAns, but with ϕC
¬C replaced by ϕ(cid:48)C
¬C(x(cid:126)a) (see the
appendix for details). We obtain the following:
Theorem 6. The following are equivalent: (i) K(cid:31) |=X
IAR
q((cid:126)a), (ii) ΦX-IAR(q((cid:126)a)) is unsatisﬁable, (iii) ΦX-IAR(C) is
unsatisﬁable for some C ∈ Causes(q((cid:126)a), K), and (iv) x(cid:126)a is
false in every satisfying assignment of ΨX-IAR(PotAns).

We shall also require encodings for individual facts, using

ΦX-IAR(α) = ΦX-IAR({α})

to test if α holds in all X-optimal repairs. We also con-
sider a multi-fact version ΨX-IAR(Rel ), parameterized by
a set of facts Rel , and to which we add clause yα to activate
ϕ(cid:48)

¬{α}(yα).

Theorem 7. For every α ∈ D, the following are equivalent:
(i) K(cid:31) |=X
IAR α, (ii) ΦX-IAR(α) is unsatisﬁable, and (iii) if
α ∈ Rel then yα is false in every satisfying assignment of
ΨX-IAR(Rel ).

4 Algorithms
Inspired by the different use of SAT solvers made by
CQAPri and CAvSAT, we propose several algorithms based
on the encodings of Section 3. The pseudo code of all algo-
rithms is available in the appendix.

Before describing the algorithms, note that we can
show that the encodings of Section 3 are still valid if
Causes(q((cid:126)a), K) is actually a superset of the causes such
that every superﬂuous B in it either (1) includes a real cause
of q((cid:126)a) or (2) contains two distinct facts that form a conﬂict.
Since checking consistency and minimality to obtain the real
causes can be costly in practice, our algorithms accept such
‘sets of causes’. They actually even accept the presence of
self-inconsistent facts in the ‘causes’ (which would make the
encodings for X-AR and X-IAR not applicable) and handle
them in a preprocessing step.

Our high-level algorithm takes as input a semantics Sem ∈
{brave, AR, IAR}, a repair notion X ∈ {S, P, C}, a directed
conﬂict graph GK(cid:31) , and a set of potential answers PotAns

ΦX-AR(q((cid:126)a)) = ϕ¬q((cid:126)a) ∧ ϕX-max(F1) ∧ ϕcons(F2)
¬q((cid:126)a) ∧ ϕX-max(F (cid:48)
ϕ(cid:48)

ΨX-AR(PotAns) =

(cid:94)

1) ∧ ϕcons(F (cid:48)
2)

(cid:126)a∈PotAns

ΦX-brave(q((cid:126)a)) = ϕq((cid:126)a) ∧ ϕX-max(G1) ∧ ϕcons(G2)

ΦX-brave(C) = ϕC ∧ ϕX-max(G∗

1) ∧ ϕcons(G∗
2)

ΨX-brave(PotAns) =

(cid:94)

q((cid:126)a) ∧ ϕX-max(G(cid:48)
ϕ(cid:48)

1) ∧ ϕcons(G(cid:48)
2)

(cid:126)a∈PotAns

F1 = facts(ϕ¬q((cid:126)a)), F2 = F1 ∪ facts(ϕX-max(F1))
1 ∪ facts(ϕX-max(F (cid:48)
F (cid:48)

1 = facts(

2 = F (cid:48)

(cid:94)

1))

¬q((cid:126)a)), F (cid:48)
ϕ(cid:48)
(cid:126)a∈PotAns

G1 = facts(ϕq((cid:126)a)), G2 = G1 ∪ facts(ϕX-max(G1))
G∗

1 = facts(ϕC), G∗
2 = G∗
q((cid:126)a)), G(cid:48)
ϕ(cid:48)
1 = facts(
(cid:126)a∈PotAns

(cid:94)

G(cid:48)

1 ∪ facts(ϕX-max(G∗
2 = G(cid:48)

1 ∪ facts(ϕX-max(G(cid:48)

1))

1))

ΦX-IAR(C) = ϕ¬C ∧ ϕX-max(H1) ∧ ϕcons(H2)
X-max(H C

¬C ∧ ϕC
ϕC

ΦX-IAR(q((cid:126)a)) =

(cid:94)

(cid:16)

1 ) ∧ ϕC

cons(H C
2 )

(cid:17)

H1 = facts(ϕ¬C), H2 = H1 ∪ facts(ϕX-max(H1))
X-max(H C
2 = H C

1 = facts(ϕC

1 ∪ facts(ϕC

¬C), H C

H C

1 ))

C∈Causes(q((cid:126)a),K)

Figure 2: Single- and multi-answer encodings for X-AR (top) and X-brave (middle) semantics, single-answer encodings for X-IAR (bottom).

with their causes, and outputs the set of tuples from P otAns
that are answers under the X-Sem semantics.

An initial preprocessing step serves to (1) check whether
GK(cid:31) contains some self-inconsistent facts, remove them
from GK(cid:31) , discard all causes that contain such facts, then all
answers that do not have any cause left, and (2) ﬁnd some an-
swers that trivially hold under X-Sem. To do so, it removes
from the causes all facts that do not have any outgoing edge
in the directed conﬂict graph, and thus trivially belong to all
optimal repairs. The trivial answers that have some cause
that contains only such facts hold under X-Sem semantics
and are ﬁltered during this step.

It then remains to ﬁlter the remaining potential answers.
The four ﬁrst algorithms we propose to do so are generic in
the sense that they can be used for all semantics.
• Simple is similar to the algorithm used by CQAPri. For
each answer to ﬁlter (cid:126)a, it checks whether ΦX-Sem(q((cid:126)a)) is
satisﬁable, which decides whether K(cid:31) |=X

Sem q((cid:126)a).

• All-MaxSAT is similar to the CAvSAT algorithm. It con-
structs a weighted MaxSAT instance ΨX-Sem(PotAns) ∧
(cid:86)
(cid:126)a∈PotAns x(cid:126)a, where the x(cid:126)a are soft clauses, and all other
clauses are hard. It then relies on the solver to maximize
the number of soft clauses satisﬁed, which ﬁlters the cor-
responding answers. After each iteration, the ¬x(cid:126)a corre-
sponding to the satisﬁed soft clauses are added to the set
of assumed literals for the next iteration.

• All-MUSes is based on the observation that if x(cid:126)a is
false in every satisfying assignment of ΨX-Sem(PotAns),
then {x(cid:126)a} is a minimal unsatisﬁable subset (MUS) of
(cid:86)
(cid:126)a∈PotAns x(cid:126)a w.r.t. ΨX-Sem(PotAns). All-MUSes relies
on the solver to compute all MUSes, and decides whether
K(cid:31) |=X
• Assumptions

Sem q((cid:126)a) by looking at those of size one.

iteratively evaluates ΨX-Sem(PotAns),
treating the variables x(cid:126)a, with (cid:126)a ∈ PotAns as assump-
tions. If ΨX-Sem(PotAns)[x(cid:126)a] is satisﬁable, there exists a
satisfying assignment of ΨX-Sem(PotAns) in which x(cid:126)a is
true, which decides whether K(cid:31) |=X

Sem q((cid:126)a).

While we may need to consider all causes to decide whether
an answer holds under X-AR semantics, in the X-brave or

X-IAR case it is sufﬁcient to ﬁnd a single cause that be-
longs to some or all optimal repairs. Moreover, the en-
coding ΦX-IAR(q((cid:126)a)) is a conjunction of independent sub-
problems built on distinct variables for each cause, which
does not seem very ﬁt for a SAT solver. We hence propose
algorithms speciﬁc to these cases.

• Cause-by-cause can be used for X-brave and X-IAR. For
each answer to ﬁlter (cid:126)a, it checks whether there is a cause C
of q((cid:126)a) such that ΦX-Sem(C) is (un)satisﬁable: if Sem =
brave and ΦX-Sem(C) is satisﬁable, or Sem = IAR and
ΦX-Sem(C) is unsatisﬁable, then K(cid:31) |=X
Sem q((cid:126)a); if no
cause witnesses K(cid:31) |=X
Sem q((cid:126)a).

Sem q((cid:126)a), then K(cid:31) (cid:54)|=X

• IAR-causes is speciﬁc to X-IAR. It considers the answers
in turn while maintaining two sets of facts:
the X-IAR
facts that belong to the intersection of the optimal repairs
and the non-X-IAR facts. For each cause C of q((cid:126)a) that
does not contain any known non X-IAR fact, it removes
the known X-IAR facts from C. If C becomes empty, then
K(cid:31) |=X
IAR q((cid:126)a). Otherwise, for each remaining α ∈ C, it
checks whether K(cid:31) |=X
IAR α using ΦX-IAR(α) and adds
α to the corresponding set of facts. If every α ∈ C is such
that K(cid:31) |=X

IAR α, then K(cid:31) |=X

IAR q((cid:126)a).

• IAR-facts is also speciﬁc to X-IAR and considers the an-
swers in turn while maintaining the two sets of X-IAR and
non X-IAR facts. The difference is that for each answer, it
uses ΨX-IAR(Rel ) ∧ (cid:86)
α∈Rel yα and a weighted MaxSAT
solver to decide which facts hold under X-IAR among the
set Rel of facts that belong to some cause and have not al-
ready been assigned to one of the two sets. Then it checks
whether there is a cause that only contains X-IAR facts.

5

Implementation & Experimental Setting

We implemented the algorithms presented in Section 4
in java 11. Our system ORBITS (Optimal Repair-Based
Inconsistency-Tolerant Semantics) takes as input two JSON
ﬁles containing the directed conﬂict graph GK(cid:31) , and the po-
tential answers PotAns of the query associated with their
causes. The user speciﬁes a semantics (AR, IAR, or brave),
a value X (among S, P1, P2, or C) to use in ϕX-max(F ), the

desired encoding for ϕ¬C (neg1 or neg2), and the algorithm
to use to compute the answers w.r.t. the chosen semantics.
The set of answers is output as a JSON ﬁle.

ORBITS relies on the Sat4j java library (version 2.3.4) to
solve the SAT, weighted MaxSAT, and MUS enumeration
problems (Berre and Parrain 2010).
In principle, a stan-
dalone solver could be used, but we found that the time
needed to print out the encoding to pass it to an external
solver tends to be prohibitive compared to using Sat4j.

The source code of ORBITS is available at https://github.
com/bourgaux/orbits, the inputs ﬁles we used in the exper-
iments at https://zenodo.org/record/5946827, and details on
the experimental setting in the appendix.

Experimental Environment All experiments were run
with 16GB of RAM in a cluster node running CentOS 7.9
with linux kernel 3.10.0, with processor 2x Cascade Lake
Intel Xeon 5218 16 cores, 2.4GHz. Reported times are av-
eraged over 5 runs, with a 30 minutes time-out. Since we
aim at comparing our different algorithms and encodings, in
what follows, we focus on the time needed to ﬁlter the can-
didate answers, excluding the time needed to load the inputs
from the JSON ﬁles or serialize the output. This input load-
ing time is generally below 1 second and never exceeds a few
seconds. However, in real-world applications, we would not
use ORBITS as a standalone tool, but rather make it a library
to be integrated in a full query answering system.

Test KBs We evaluate ORBITS on three (sets of) KBs. The
ﬁrst is the CQAPri benchmark (Bourgaux 2016), a synthetic
benchmark crafted to evaluate inconsistency-tolerant query
answering over DL-Lite KBs, adapted from the LUBM∃
20
benchmark (Lutz et al. 2013). The two others, called Food
Inspection and Physicians, are real-world datasets built from
public open data, which have already been used to evalu-
ate data cleaning and consistent query answering systems
(Rekatsinas et al. 2017; Dixit and Kolaitis 2019). They con-
sist of relational databases built from the original csv ﬁles,
on which typical integrity constraints have been added. We
brieﬂy summarize their main characteristics below.

We use the DL-Lite ontology (which includes 875 dis-
jointness axioms) and 20 queries of the CQAPri bench-
mark, together with the 18 datasets named uXcY with X ∈
{1, 5, 20} and Y ∈ {1, 5, 10, 20, 30, 50}. Parameters X and
Y are related to the size and the proportion of facts involved
in some conﬂicts respectively (the higher the bigger), and
the datasets are such that uXcY ⊆ uXcY(cid:48) for Y ≤ Y (cid:48) and
uXcY ⊆ uX(cid:48)cY for X ≤ X (cid:48). Their sizes range from 75K
to 2M facts and their proportions of facts involved in some
conﬂict from 3% to 46%. The induced conﬂict graphs con-
tain from 2K to 946K facts and from 2K to 3M conﬂicts.

The Food Inspection dataset contains data about inspec-
tion of restaurants in New York and Chicago (Dat c; Dat a).
We use the database schema and six queries proposed by
Dixit and Kolaitis (2019): there are four relations, each hav-
ing a key constraint and one having a further FD. The dataset
contains 523K facts, 37% of them belong to some conﬂict.
The conﬂict graph contains 192K facts and 219K conﬂicts.
We build the Physicians dataset from the National Down-
loadable File provided by the Centers for Medicare & Med-

Triv.

IAR\Triv. AR\IAR brave\AR not brave

1,655

S
{P,C}-2
{P,C}-5
P-0.5
C-0.5
P-0.8
C-0.8

1,668
1,679
1,671
1,671
1,680
1,680

0
1
1
23
5
24

7
7
7
7
0
7
0

77
48
29
45
30
25
13

0
16
23
15
15
22
22

Table 1: Number of answers of q1 over the Physicians dataset de-
pending on the priority relation (none, score-structured with n = 2
or n = 5, and not score-structured with p = 0.5 or p = 0.8) and
type of repairs (standard, Pareto- or completion-optimal).

icaid Services (Dat b). It contains information on medical
professionals and their afﬁliations. We decompose it into
seven relations, add four reasonable key constraints and two
FDs, and design six queries. In total, the dataset contains
more than 8M facts and 2% of them are in some conﬂict.
The conﬂict graph contains 183K facts and 2.7M conﬂicts.

Priority Relations We build score-structured priority re-
lations by randomly assigning each fact a score between 1
and n. To construct a non-score-structured priority relation,
we consider each conﬂict and assign a random direction to
the corresponding edge in the conﬂict graph with a proba-
bility p, except if doing so creates a cycle, and verify that
the resulting priority is indeed not score-structured. On the
Food Inspection and Physicians datasets, we build four pri-
ority relations: two score-structured with n = 2 and n = 5,
and two non-score-structured with p = 0.5 and p = 0.8. For
the CQAPri benchmark, we build two priority relations, one
score-structured with n = 5 and one non-score-structured
with p = 0.8, on our largest dataset (u20c50), then propa-
gate them to the other datasets.

6 Experimental Evaluation
Our experimental evaluation aims at assessing (i) the impact
of adopting different kinds of repairs, and (ii) the relative
performances of alternative procedures for the same seman-
tics. More precisely, we consider the following questions.

• What is the impact in terms of number of answers of
adopting optimal repairs rather than standard repairs, or
completion-optimal repairs instead of Pareto-optimal re-
pairs when the priority relation is not score-structured?

• What is the impact of using one kind of repairs rather than

another on the computation time?

• Given a semantics and type of repair, what is the impact

in terms of computation times of the choice of:

– how to encode optimality (P1 or P2 for Pareto-optimal

repairs, P1, P2 or C when (cid:31) is score-structured)?

– how to encode contradictions (ϕ¬C with neg1 or neg2)?
– the algorithm used to ﬁlter the non-trivial answers?

In what follows, we summarize our main observations.

Detailed results are given in the appendix.

0
0
0
,
2

0
0
0
,
1

0

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
-
C

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

Figure 3: Best running times (in milliseconds) for each semantics
and priority relation (none, score-structured with n = 2 or n = 5,
not score-structured with p = 0.5 or p = 0.8) for query q2 over the
Food Inspection dataset. An empty bar means that the query ran out
of time / memory for all possible algorithms and encodings. The
lower part of bars is the time to identify self-inconsistent facts and
trivial answers, the upper part the time to ﬁlter non-trivial answers.

Comparing Semantics w.r.t. Number of Answers Table
1 shows the impact on the number of answers of the type of
priority relation and chosen notion of optimal repairs for an
example query. For each priority relation and repair type X,
it gives the number of answers that: are trivially X-IAR (i.e.
some cause contains only facts without outgoing edges in the
directed conﬂict graph), hold under X-IAR but not trivially,
hold under X-AR but not under X-IAR, hold under X-brave
but not X-AR, and do not hold under X-brave semantics.

Priority relations leads to fewer edges in the directed con-
ﬂict graph, which in turn makes more answers hold trivially.
The more the priority relation sets preferences between facts
(higher parameter n or p of the priority relation), the more
trivially X-IAR answers we obtain. Adopting optimal re-
pairs also signiﬁcantly increases the number of potential an-
swers that do not hold under X-brave semantics, which are
very rare when using classical subset repairs.

An interesting observation is that while, in the absence of
a priority relation, many queries of the CQAPri benchmark
do not have any AR answers that are not trivial, which makes
trivial answers a good approximation of AR, this is no longer
the case for optimal repairs. It hence seems even more im-
portant to actually compute the answers that hold under the
desired semantics rather simply computing the polynomial
lower bound given by the trivial answers.

Regarding the impact of the choice between Pareto- and
completion-optimal repairs, in many cases ORBITS did not
manage to compute the answers for completion-optimal re-
pairs in our given time and memory limits. When it does
manage to compute them (for 5 queries on the Physicians
dataset; none on the Food Inspection dataset; and from be-
tween 7 and 13 on uXc1 to less than 3 on uXc50), we observe
a difference with Pareto-answers in only two cases.

Comparing Semantics w.r.t. Computation Time Figure
3 shows the best running times (across all algorithms and

q1

P1
417
804
P2
C 252,694

q2

141
142
179

P1
P2
C

P1
P2
C

P1
P2
C

268
166
502
163
oom 632

154
272
466
146
oom 624

166
362
566
193
oom 764

383
P1
P2
565
C 192,429

135
157
164

Alg. 1

Alg. 2

Alg. 3

Alg. 4

Alg. 5

q3

350
379
550

326
333
t.o

313
281
t.o

997
972
t.o

335
309
544

q4

q5

12,799
326,594

224
213
oom 284

1,730
2,961
t.o

t.o
t.o
t.o

42,544
36,923
t.o

214
221
551

211
201
550

281
304
846

8,192
225,170

211
207
oom 238

q6

4,009
8,684
t.o

11,263
10,833
oom

245,804
241,030
oom

559,923
546,199
oom

3,419
5,963
t.o

Table 2: Query answer ﬁltering time (in milliseconds, t.o:time
out, oom:out of memory) under X-brave semantics (X ∈ {P,C}),
for each algorithm and encoding ϕX-max, on Physicians dataset
with score-structured priority (n = 2). Alg. 1: Simple, Alg. 2:
All-MaxSAT, Alg. 3: All-MUSes, Alg. 4: Assumptions, Alg. 5:
Cause-by-cause. Best time in bold red and ‘close to best times’
(i.e., not exceeding the best by more than 50ms or 10%) on grey.

encoding variants) for each semantics and an example query.
We did this comparison for all queries on Physicians and
Food Inspection datasets and two CQAPri datasets.

Given a kind of repair X, the relative difﬁculty of the X-
AR, X-IAR and X-brave semantics depends on the query,
dataset and sometimes the nature of the priority relation.

Comparing S-AR, P-AR, and C-AR semantics, we ob-
serve that using optimal repairs may either increase or de-
crease the answer ﬁltering time, intuitively because there are
more trivial answers, but the encodings are more complex.

Given a dataset, query and semantics, if we compare two
priority relations of the same kind (score-structured or not),
the one that sets preferences between more facts leads to
lower running times. This can be explained by the in-
crease of the number of trivial answers and maybe by the
fact that the encodings involve less facts and encode more
‘forced choices’ between facts so that there are less pos-
sibilities to explore. When we compare the ‘easiest’ non
score-structured priority relations (p = 0.8) and the hard-
est score-structured ones (n = 2), which lead to comparable
sizes of directed conﬂict graphs, score-structured priority re-
lations seem to be easier than non-score-structured ones.

Finally, we conclude that our procedures do not perform
well for completion-optimal repair-based semantics, which
form most of the cases that fail due to lack of time or mem-
ory, and very often have higher running times than Pareto-
optimal-based semantics with the same priority relation.

Choice of Algorithm & Encoding for Given Semantics
Table 2 presents the time needed to ﬁlter the candidate an-
swers that hold under brave semantics based on optimal-
repairs (score-structured case) for some example queries. It
illustrates the huge impact that the choice of an algorithm

106

105

104

103

102

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

106

105

104

103

102

101

0

10

20

30

40

50

0

10

20

30

40

50

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

106

105

104

103

102

q1
q3
q6
q8
q10
q12
q14
q17
q19

q2
q5
q7
q9
q11
q13
q15
q18
q20

0

10

20

30

40

50

(a) Simple

(b) All-MaxSAT

(c) All-MUSes

Figure 4: Time (in milliseconds, log. scale) to ﬁlter query answers under X-AR semantics (X ∈ {P,C}) w.r.t. percentage of facts involved in
some conﬂict for u20cY with score-structured priority relation (ϕP1-max and neg1 encoding). Missing queries ran out of time or memory.

and encoding can have. For example, q6 answers are ﬁltered
in 3.5s with algorithm Cause-by-cause and ϕP1-max, but need
at least 546s with the Assumptions algorithm, at least 5.9s
with ϕP2-max, and cannot be ﬁltered in our time and memory
limits with encoding ϕC-max. For X-AR and X-IAR seman-
tics, we also observe sometimes huge variations when using
the neg1 or neg2 version of ϕ¬C. For example, for X-AR
semantics on u20c50 with a score-structured priority rela-
tion, the best times for queries q2 and q18 are both obtained
with algorithm All-MaxSAT and ϕP1-max, but with the neg2
variant for q2 (50 seconds versus 85 with neg1) and neg1 for
q18 (23 seconds versus 47 with neg2). The comparison of
the possible procedures for each semantics on the different
datasets and queries shows that there is not a ‘best’ method
in general. However, we still gain some relevant insights.

The ﬁrst one concerns the choice of ϕX-max. The encoding
ϕP1-max is generally the best one for Pareto-optimal repairs,
in the sense that it achieves ‘close to best times’ (cf. Ta-
ble 2) much more often than the others. However, there
are a few cases where ϕP2-max performs signiﬁcantly bet-
ter, especially on the CQAPri datasets with fewer conﬂicts
(e.g., on u20c1 with a score-structured priority relation, the
best time for ﬁltering q9 answers under P-AR semantics is
480ms with ϕP2-max, while the best time with another encod-
ing is 825ms). When the priority relation is score-structured,
ϕC-max never signiﬁcantly outperforms ϕP1-max and ϕP2-max
and leads to much more time or memory failures.

The second concerns the choice of algorithm for X-IAR
semantics. For all kinds of repairs, algorithm IAR-causes
is generally better than the others in terms of frequency of
‘close to best times’. It is sometimes outperformed by al-
gorithms Cause-by-cause or IAR-facts. The ‘generic’ al-
gorithms (Simple, All-MaxSAT, All-MUSes, Assumptions)
perform quite poorly, except on the simplest cases.

For the AR and brave semantics, it is more difﬁcult to ﬁnd
an algorithm that is superior to the others. For non-score-
structured priority relations and completion-optimal repairs,
algorithm Simple seems to be the best choice for both C-
AR and C-brave semantics, but all algorithms fail in most
cases. A related observation is that algorithms that consider
answers individually and use smaller encodings seems to be
often more robust in terms of time-out and out-of-memory,
with a notable exception for P-AR and P-brave semantics on
u20c50 with non-score-structured priority, where algorithms

All-MaxSAT and All-MUSes are more robust. For S-AR, P-
AR and P-brave, we observe different behaviours depending
on the benchmark: All-MaxSAT and All-MUSes tend to per-
form better for the CQAPri benchmark, while Simple tends
to perform better for the Food Inspection dataset.

Finally, comparing neg1 and neg2 versions of ϕ¬C, we ob-
serve that the relative performance depends on the dataset,
query, algorithm, and choice of ϕX-max. However, we note
that ϕP2-max usually works better with neg1. Even if there
is not a direct relationship between the encoding sizes and
the running times, this is probably due to the fact that neg2
enforces that both the facts that occur in the causes and their
conﬂicts are part of the encoding, which signiﬁcantly in-
creases the size of ϕP2-max, but has little impact on ϕP1-max.
Figure 4 shows the evolution of the running times of three
algorithms using the same encoding variants as the propor-
tion of facts involved in some conﬂicts grows, on the u20cY
datasets with a score-structured priority for X-AR semantics
(X ∈ {P,C}). It illustrates the fact that the relative perfor-
mance of the algorithms depends on the query and dataset
(here, the proportion of facts involved in some conﬂict): For
example, All-MaxSAT is the best for q9 over the three ﬁrst
datasets, but runs out of time on the three last (more that
20% of facts in conﬂict), while Simple can handle them.

7 Conclusion

We have presented a comprehensive exploration of SAT-
based approaches to querying inconsistent data using (op-
timal) repair-based inconsistency tolerant semantics, includ-
ing the proposal of novel encodings and algorithms. Our
generic framework places existing approaches into a broader
context and makes our results and system directly applicable
to both the (pure) database and OMQA settings.

Our experimental comparison of different SAT-based al-
gorithms and encoding variants shows that the choice of al-
gorithm and encoding may have huge impact on the com-
putation time. While in some cases our results can be used
to single out some approaches as more effective, more often
there are no clear winner(s). This suggests that to minimize
runtimes, it may make sense to launch multiple algorithms in
parallel, and/or devise methods that can help predict which
algorithm and encoding will perform best on a given dataset
and query, e.g. using machine learning techniques.

Our work lays important foundations for the future de-
velopment of mature systems for querying inconsistent data.
We plan to investigate different ways of improving the per-
formance for optimal repair-based semantics. For example,
it would be interesting to explore alternative approaches for
completion-optimal repairs based upon SAT modulo graph
techniques (Gebser, Janhunen, and Rintanen 2014). Another
promising direction is to employ more reﬁned polynomial
lower approximations than the trivial answers, such as the
grounded semantics (Bienvenu and Bourgaux 2020).

Acknowledgements
This work was supported by the ANR AI Chair INTENDED
(ANR-19-CHIA-0014).

References
Arenas, M.; Bertossi, L. E.; and Chomicki, J. 1999. Con-
sistent query answers in inconsistent databases. In Proceed-
ings of the 18th ACM SIGMOD-SIGACT-SIGAI Symposium
on Principles of Database Systems (PODS), 68–79.
Berre, D. L., and Parrain, A. 2010. The sat4j library, release
2.2. JSAT 7(2-3):59–64.
Bertossi, L. E. 2011. Database Repairing and Consistent
Query Answering. Synthesis Lectures on Data Management.
Morgan & Claypool Publishers.
Bienvenu, M., and Bourgaux, C. 2016.
Inconsistency-
tolerant querying of description logic knowledge bases. In
Tutorial Lectures of the 12th International Reasoning Web
Summer School, 156–202.
Bienvenu, M., and Bourgaux, C. 2020. Querying and repair-
ing inconsistent prioritized knowledge bases: Complexity
analysis and links with abstract argumentation. In Proceed-
ings of the 17th International Conference on Principles of
Knowledge Representation and Reasoning (KR), 141–151.
Bienvenu, M., and Ortiz, M. 2015. Ontology-mediated
query answering with data-tractable description logics.
In
Tutorial Lectures of the 11th Reasoning Web International
Summer School, 218–307.
Bienvenu, M., and Rosati, R. 2013. Tractable approxi-
mations of consistent query answering for robust ontology-
based data access. In Proceedings of the 23rd International
Joint Conference on Artiﬁcial Intelligence (IJCAI).
Bienvenu, M.; Bourgaux, C.; and Goasdou´e, F.
2014.
Querying inconsistent description logic knowledge bases
under preferred repair semantics. In Proceedings of the 28th
AAAI Conference on Artiﬁcial Intelligence (AAAI), 996–
1002.
Bienvenu, M.; Bourgaux, C.; and Goasdou´e, F. 2019. Com-
puting and explaining query answers over inconsistent dl-
lite knowledge bases. Journal of Artiﬁcial Intelligence Re-
search (JAIR) 64:563–644.
Bienvenu, M. 2020. A short survey on inconsistency han-
dling in ontology-mediated query answering. K¨unstliche In-
telligenz 34(4):443–451.
Bourgaux, C. 2016. Inconsistency Handling in Ontology-
Mediated Query Answering. (Gestion des incoh´erences pour

City

Food

Inspections,

of Chicago,
https://data.cityofchicago.org/

l’acc`es aux donn´ees en pr´esence d’ontologies). Ph.D. Dis-
sertation, University of Paris-Saclay, France.
Calvanese, D.; De Giacomo, G.; Lembo, D.; Lenzerini, M.;
and Rosati, R. 2007. Tractable reasoning and efﬁcient query
answering in description logics: The DL-Lite family. Jour-
nal of Automated Reasoning (JAR) 39(3):385–429.
Chortaras, A.; Trivela, D.; and Stamou, G. 2011. Optimized
query rewriting for OWL 2 QL. In Proc. of CADE.
Dataset:
Chicago Data Portal.
Health-Human-Services/Food-Inspections/4ijn-s7e5.
Accessed December 7, 2020.
Dataset: National Downloadable File, Centers for Medi-
care & Medicaid Services (CMS).
https://data.cms.gov/
provider-data/dataset/mj5m-pzi6. Accessed December 10,
2020.
Dataset: New York City Restaurant Inspection Results,
Department of Health and Mental Hygiene (DOHMH),
NYC Open Data.
https://data.cityofnewyork.us/Health/
DOHMH-New-York-City-Restaurant-Inspection-Results/
43nn-pn8j. Accessed December 7, 2020.
Dixit, A. A., and Kolaitis, P. G. 2019. A SAT-based system
for consistent query answering. In Janota, M., and Lynce,
I., eds., Proceedings of the 22nd International Conference
on Theory and Applications of Satisﬁability Testing (SAT),
117–135.
Fan, W. 2015. Data quality: From theory to practice. SIG-
MOD Rec. 44(3):7–18.
Gebser, M.; Janhunen, T.; and Rintanen, J. 2014. SAT
In Proceedings of the 14th
modulo graphs: Acyclicity.
European Conference on Logics in Artiﬁcial Intelligence
(JELIA), 137–151.
Kimelfeld, B.; Livshits, E.; and Peterfreund, L. 2017. De-
tecting ambiguity in prioritized database repairing. In Pro-
ceedings of the 20th International Conference on Database
Theory (ICDT), 17:1–17:20.
Lembo, D.; Lenzerini, M.; Rosati, R.; Ruzzi, M.; and Savo,
D. F. 2010. Inconsistency-tolerant semantics for description
logics. In Proceedings of the 4th International Conference
on Web Reasoning and Rule Systems (RR), 103–117.
Livshits, E., and Kimelfeld, B. 2017. Counting and enumer-
ating (preferred) database repairs. In Proceedings of the 36th
ACM SIGMOD-SIGACT-SIGAI Symposium on Principles of
Database Systems (PODS), 289–301.
Lutz, C.; Seylan, I.; Toman, D.; and Wolter, F. 2013. The
combined approach to OBDA: taming role hierarchies using
In Proceedings of the 12th International Semantic
ﬁlters.
Web Conference (ISWC), 314–330.
Poggi, A.; Lembo, D.; Calvanese, D.; De Giacomo, G.;
Lenzerini, M.; and Rosati, R. 2008. Linking data to on-
tologies. Journal of Data Semantics 10:133–173.
Rekatsinas, T.; Chu, X.; Ilyas, I. F.; and R´e, C. 2017. Holo-
clean: Holistic data repairs with probabilistic inference. Pro-
ceedings of the VLDB Endowment (PVLDB) 10(11):1190–
1201.

Rosati, R. 2011. On the complexity of dealing with incon-
sistency in description logic ontologies. In Proceedings of
the 22nd International Joint Conference on Artiﬁcial Intelli-
gence (IJCAI), 1057–1062.
Senellart, P.; Jachiet, L.; Maniu, S.; and Ramusat, Y. 2018.
Provsql: Provenance and probability management in post-
gresql. Proceedings of the VLDB Endowment (PVLDB)
11(12):2034–2037.
Staworko, S.; Chomicki, J.; and Marcinkowski, J. 2012.
Prioritized repairing and consistent query answering in rela-
tional databases. Annals of Mathematics and Artifcial Intel-
ligence (AMAI) 64(2-3):209–246.
Wijsen, J. 2019. Foundations of query answering on incon-
sistent databases. SIGMOD Record 48(3):6–16.
Xiao, G.; Calvanese, D.; Kontchakov, R.; Lembo, D.; Poggi,
A.; Rosati, R.; and Zakharyaschev, M. 2018. Ontology-
In Proceedings of the 27th
based data access: A survey.
International Joint Conference on Artiﬁcial Intelligence (IJ-
CAI), 5511–5519.

Appendices

A Proofs for Section 2

B Proofs for Sections 3 and 4
.

B.1 Basic Lemmas .
B.2 Propositional Encodings for X-AR, X-Brave and X-IAR semantics . . . . . . . . . . . . . . . . . . . .
B.3 Non-Binary Conﬂicts .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

C Pseudocode for Algorithms

. . . . . . . . . . . . . . . . . . . . . . .
C.1 Generic Algorithms Applicable to X-AR, X-IAR and X-brave
C.2 Algorithms Speciﬁc to X-IAR or X-brave . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

D Details on Experimental Setting
.

D.1 KBs Description .
.
D.2 Construction of Input Files .
D.3 Sizes of Query Answers and Causes Files
D.4 Priority Relations and Sizes of Directed Conﬂict Graphs

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . .

.
.

.
.

.
.

.
.

.
.

.

.

.

.

E Details on Experimental Evaluation

.
E.1 Number of Answers Under the Different Semantics . . . . . . . . . . . . . . . . . . . . . . . . . . . .
E.2 Running Times of All Algorithms and Encodings for Each Semantics
.
. . . . . . . . . . . . . . . . . .
E.3 Semantics Comparison w.r.t. Computation Time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
E.4 Running Times w.r.t. the Proportion of Facts Involved in Some Conﬂicts or Size on CQAPri Benchmark .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
E.5 Encodings Properties .

.

.

.

.

.

.

.

.

13

13
14
16
19

22
22
24

28
28
28
29
29

.
.
.

.
.

.
.
.
.

31
31
.
38
.
.
90
. 101
. 110

.
.
.

.
.

.
.
.
.

.
.
.
.
.

.
.
.

.
.

.
.
.
.

.
.
.
.
.

A Proofs for Section 2
Proposition 1. Query entailment is NP-hard under X-brave semantics (X ∈ {P, C}) and coNP-hard under X-IAR semantics
(X ∈ {P, C}) over KBs whose theory consists of a set of FDs.

Proof. We ﬁrst give the NP-hardness proof for X-brave semantics (X ∈ {P, C}), by reduction from propositional 3CNF
satisﬁability. Consider a propositional CNF ϕ = c1 . . . ∧ . . . cn, over variables x1, . . . , xk. We consider the KB K = (Dϕ, T ),
where

Dϕ = {R(xi, xi, b) | 1 ≤ i ≤ k, b ∈ {0, 1}}∪

{R(cj, xi, 1) | xi is a disjunct of cj} ∪ {R(cj, xi, 0) | ¬xi is a disjunct of cj}∪
{R(cj, u, u) | 1 ≤ j ≤ n} ∪ {((cid:63), u, (cid:63))}

and the theory T consists of the FDs R : 1 → 3 and R : 2 → 3, which can be equivalently expressed by the FOL formulas:

∀u, v, v(cid:48)w, w(cid:48)¬(R(u, v, w) ∧ R(u, v(cid:48), w(cid:48)) ∧ w (cid:54)= w(cid:48))

∀u, u(cid:48), v, w, w(cid:48)¬(R(u, v, w) ∧ R(u(cid:48), v, w(cid:48)) ∧ w (cid:54)= w(cid:48))

We let (cid:31) be the priority induced by the scoring function which assigns scores as follows:

• Score 3: all facts of the form R(xi, xi, b)
• Score 2: all facts of the form R(cj, , ) (i.e. with some cj as ﬁrst argument)
• Score 1: the fact ((cid:63), u, (cid:63))

To prove the ﬁrst direction of the claim, suppose that K(cid:31) |=P

For example, if ¬xi ∈ cj, then R(xi, xi, 1) (cid:31) R(cj, xi, 0), since R(xi, xi, 1) and R(cj, xi, 0) violate the FD R : 2 → 3, and
R(xi, xi, 1) has a higher score than R(cj, xi, 0). We claim that: K(cid:31) |=P
brave ((cid:63), u, (cid:63)) iff ϕ is satisﬁable. Note that since (cid:31) is
brave ((cid:63), u, (cid:63)) iff K(cid:31) |=C
score-structured, K(cid:31) |=P
brave ((cid:63), u, (cid:63)), so proving the claim establishes the result for both types of repair.
brave ((cid:63), u, (cid:63)). Then there exists a Pareto-optimal repair R of K(cid:31)
such that ((cid:63), u, (cid:63)) ∈ R. As (cid:31) is score-structured, R is also a ⊆P -repair (Bienvenu, Bourgaux, and Goasdou´e 2014), which
means it can be built by taking a ⊆-maximal T -consistent subset S3 of the score-3 facts, then adding a ⊆-maximal subset S2 of
the score-2 facts such that S3 ∪ S2 is T -consistent, followed by adding ((cid:63), u, (cid:63)) if S3 ∪ S2 ∪ {((cid:63), u, (cid:63))} is T -consistent. Clearly,
S3 will contain exactly one fact of the form R(xi, xi, b) for each variable xi, yielding a valuation νR of {x1, . . . , xn} that
assigns truth value b to xi if R(xi, xi, b) ∈ R. As ((cid:63), u, (cid:63)) ∈ R and R is T -consistent (hence satisﬁes R : 2 → 3), we know
that R does not contain any fact of the form R(cj, u, u). Indeed, if it did, then S3 ∪ S2 ∪ {((cid:63), u, (cid:63))} would not be T -consistent,
so ((cid:63), u, (cid:63)) would not have been added. As S2 is ⊆-maximal subset of the score-2 facts such that S3 ∪ S2 is T -consistent, it
must be the case that for every 1 ≤ i ≤ n, there exists a fact R(cj, xi, b) ∈ R. However, due to R : 2 → 3, we know that if
R(cj, xi, b) ∈ R, then R(xi, xi, b) ∈ R. It follows that every clause is satisﬁed by the valuation νR, so ϕ is satisﬁable.

Now we prove the second direction. Suppose that ϕ is satisﬁable, and let µ be a satisfying valuation. Consider the subset

R ⊆ Dϕ that contains:

• R(xi, xi, b), if µ(xi) = b
• A maximal T -consistent subset of {R(cj, xi, b) | R(cj, xi, b) ∈ D, µ(xi) = b}
• ((cid:63), u, (cid:63))

We claim that R is ⊆P -repair, which implies that it is also a Pareto- and completion-optimal repair, as (cid:31) is score-structured.
First note that R is T -consistent. Indeed, if R(xi, xi, b) and R(cj, xi, b(cid:48)) both appear, then by construction, we must have
b = b(cid:48). Next note that we cannot add any further R(xi, xi, b) facts without becoming T -inconsistent, which means that we
have included a maximal subset of the score-3 facts. We now consider the score-2 facts. As every clause cj has at least one
satisﬁed literal, we will include at least one fact of the form R(cj, xi, b) per clause cj, which will prevent us from adding any
R(cj, u, u) facts. We also cannot add a fact R(cj, xi, b) if µ(xi) (cid:54)= b, since then we would contradict a score-3 fact from R.
Finally, the only score-1 fact, ((cid:63), u, (cid:63)), is already present in R. It follows that R is indeed a ⊆P -repair, which implies that it is
also a Pareto-optimal repair, since (cid:31) is score-structured. This shows that K(cid:31) |=P

brave ((cid:63), u, (cid:63)).

We can use almost the same reduction to show the coNP-hardness proof for X-IAR semantics (X ∈ {P, C}). Indeed, it

sufﬁces to add to Dϕ an additional score-1 fact: ((cid:63), (cid:12), (cid:12)). Using similar arguments to above, we can show that K(cid:31) |=P
((cid:63), (cid:12), (cid:12)) iff ϕ is unsatisﬁable. Indeed, K(cid:31) |=P
every optimal repair. And we have shown above that the latter holds iff ϕ is unsatisﬁable.

IAR
IAR ((cid:63), (cid:12), (cid:12)) iff ((cid:63), (cid:12), (cid:12)) holds in every optimal repair iff ((cid:63), u, (cid:63)) is absent from

B Proofs for Sections 3 and 4
In this section and in all of the following proofs, we assume that Causes(q((cid:126)a), K)
Inconsistent or non-minimal ‘causes’
may actually be a superset of the causes such that every superﬂuous B in it either (1) includes a real cause C of q((cid:126)a) or (2)
contains two distinct facts α and β that form a conﬂict. Note that this only strengthens the results, which naturally hold also
when Causes(q((cid:126)a), K) is the proper set of causes.

B.1 Basic Lemmas
In Lemmas 1 to 4, K(cid:31) is a prioritized KB with K = (D, T ), R ∈ XRep(K(cid:31)) (with X ∈ {P, C}), and ν is the valuation of
{xα | α ∈ D} such that ν(xα) = true iff α ∈ R.
Lemma 1. ν satisﬁes ϕ¬C iff C (cid:54)⊆ R.

Proof. If ν satisﬁes ϕ¬C, there exists α ∈ C such that

• in case of neg2 encoding: ν(xα) = false and
• in both neg2 and neg1 encoding variants: there exists β such that α⊥β, α (cid:54)(cid:31) β and ν(xβ) = true, i.e., β ∈ R.
Hence, since R is T -consistent, we must have C (cid:54)⊆ R.

Conversely, if C (cid:54)⊆ R, there exist α ∈ C and β ∈ R such that α⊥β and α (cid:54)(cid:31) β. Otherwise R ∪ {α} \ {β | α (cid:31) β} would be a
Pareto-improvement of R, contradicting our assumption R ∈ XRep(K(cid:31)) for either X ∈ {P, C} (recall that completion-optimal
repairs are also Pareto-optimal repairs). Since ν(xα) = false and ν(xβ) = true, ν satisﬁes ϕ¬C.

Lemma 2. ν satisﬁes ϕC iff C ⊆ R.

Proof. Straightforward.

Lemma 3. ν satisﬁes ϕ¬q((cid:126)a) iff (R, T ) (cid:54)|= q((cid:126)a).

Proof. If ν satisﬁes ϕ¬q((cid:126)a), for every C ∈ Causes(q((cid:126)a), K), ν satisﬁes ϕ¬C, so by Lemma 1, C (cid:54)⊆ R. Hence (R, T ) (cid:54)|= q((cid:126)a).
It follows that K(cid:31) (cid:54)|=X

If (R, T ) (cid:54)|= q((cid:126)a), R does not contain any cause for q((cid:126)a) (hence not any super-set of such cause either), and since R is
T -consistent, it does not contain any inconsistent subset. It follows that for every B ∈ Causes(q((cid:126)a), K) (even if B is a super set
of a cause or contains a pair of conﬂicting assertions), B (cid:54)⊆ R, so by Lemma 1, ν satisﬁes ϕ¬B. Hence ν satisﬁes ϕ¬q((cid:126)a).

AR q((cid:126)a).

Lemma 4. ν can be extended to a valuation that satisﬁes ϕq((cid:126)a) iff (R, T ) |= q((cid:126)a).

Proof. If (R, T ) |= q((cid:126)a), R contains a real cause C of q((cid:126)a). Let us extend ν with ν(xC) = true, and ν(xB) = false for every
B ∈ Causes(q((cid:126)a), K(cid:31)) different from C. Then ν satisﬁes ϕq((cid:126)a).

If ν can be extended to a valuation that satisﬁes ϕq((cid:126)a), there exists B ∈ Causes(q((cid:126)a), K(cid:31)) such that ν(xB) = true and for
every α ∈ B, ν(xα) = true, i.e., B ⊆ R. Since R is T -consistent, B is T -consistent hence must include a real cause of q((cid:126)a).
It follows that (R, T ) |= q((cid:126)a).

The following lemma has already been shown for the particular case where (cid:31) is score structured. Indeed, it follows from
the results that (i) when the priority relation is score-structured, (Pareto- or completion-)optimal repairs coincide with the ⊆P -
repairs deﬁned by Bienvenu, Bourgaux, and Goasdou´e (2014) and (ii) the proof for the SAT encodings presented in (Bienvenu,
Bourgaux, and Goasdou´e 2014) for the semantics based on ⊆P -repairs. However, it has not been observed before that this is
also true when (cid:31) is not score-structured.
Lemma 5. Let K(cid:31) be a prioritized KB with K = (D, T ), F1 ⊆ D, F2 = F1 ∪ facts(ϕP1-max(F1)), and let ν be a valuation of
{xα | α ∈ F2}.
• If ν satisﬁes ϕP1-max(F1) ∧ ϕcons(F2) then Sν = {α | ν(xα) = true} can be extended to a Pareto-optimal repair of K(cid:31).
• If there exists a Pareto-optimal repair R of K(cid:31) such that R ∩ F2 = Sν, then ν satisﬁes ϕP1-max(F1) ∧ ϕcons(F2).

Proof. (⇒) Assume that ν satisﬁes ϕP1-max(F1) ∧ ϕcons(F2). Since ν satisﬁes ϕcons(F2), it is easy to check that Sν is T -
consistent, so there exists some repair that extends it. Assume for a contradiction that all repairs that extend Sν are not
Pareto-optimal and take a repair R0 ⊇ Sν.

• Since R0 /∈ PRep(K(cid:31)), there exists β0 ∈ D \ R0 such that S0 = R0 ∪ {β0} \ {α | β0 (cid:31) α} is a Pareto-improvement of

R0. We ﬁrst show that Sν ⊆ S0. Assume for a contradiction that this is not the case: there is α ∈ Sν such that β0 (cid:31) α.
– Since α ∈ Sν ⊆ F2 = R(F1), then β0 ∈ R(F1) and ϕP1-max(F1) contains the clause xβ0 ∨ (cid:87)
– Since α ∈ Sν and Sν is T -consistent, β0 /∈ Sν so ν(β0) = false. Hence there exists γ such that β0⊥γ and β0 (cid:54)(cid:31) γ such

β0⊥γ,β0(cid:54)(cid:31)γ xγ.

that ν(xγ) = true, i.e., γ ∈ Sν ⊆ R0.

– Since β0 (cid:54)(cid:31) γ , by deﬁnition of S0, it follows that γ ∈ S0. This contradicts the T -consistency of S0 hence the fact that S0

is a Pareto-improvement of R0.

It follows that Sν ⊆ S0.

• Any repair R1 ⊇ S0 is thus a Pareto-improvement of R0 which contains Sν.
• Since we assume that all repairs that extend Sν are not optimal, we can then construct an inﬁnite sequence R0, R1, . . . of

repairs that all contain Sν and such that Ri+1 is a Pareto-improvement of Ri.

• The number of repairs being ﬁnite, there must be a repetition in this sequence. By Proposition 7 in (Staworko, Chomicki,
and Marcinkowski 2012), since (cid:31) is acyclic, so is the relation of Pareto-dominance between repairs, which contradicts the
existence of such a cycle of repairs.

Hence, there exists an optimal repair R that extends Sν.

(⇐) Assume that there exists R ∈ PRep(K(cid:31)) such that Sν = R ∩ F2. Since R is T -consistent, it is easy to check that ν
satisﬁes ϕcons(F2). Assume for a contradiction that ν does not satisfy ϕP1-max(F1).
• There exists α ∈ F2 such that ν(xα) = false and for every β⊥α such that α (cid:54)(cid:31) β (note that such β is in R(F1)), ν(xβ) = false.
• Since Sν = R ∩ F2, then α /∈ R and for every β⊥α such that α (cid:54)(cid:31) β, β /∈ R.
• Hence R(cid:48) = R ∪ {α} \ {β | β⊥α} is a Pareto-improvement of R, contradicting R ∈ PRep(K(cid:31)).

Hence ν satisﬁes ϕP1-max(F1).

Lemma 6. Let K(cid:31) be a prioritized KB with K = (D, T ), F1 ⊆ D, F2 = F1 ∪ facts(ϕP2-max(F1)), and let ν be a valuation of
{xα | α ∈ F2}.
• If ν satisﬁes ϕP2-max(F1) ∧ ϕcons(F2) then Sν = {α | ν(xα) = true} can be extended to a Pareto-optimal repair of K(cid:31).
• If there exists a Pareto-optimal repair R of K(cid:31) such that R ∩ F2 = Sν, then ν satisﬁes ϕP2-max(F1) ∧ ϕcons(F2).

Proof. (⇒) Assume that ν satisﬁes ϕP2-max(F1) ∧ ϕcons(F2). Since ν satisﬁes ϕcons(F2), it is easy to check that Sν is T -
consistent, so there exists some repair that extends it. Assume for a contradiction that all repairs that extend Sν are not
Pareto-optimal and take a repair R0 ⊇ Sν.

• Since R0 /∈ PRep(K(cid:31)), there exists β0 ∈ D \ R0 such that S0 = R0 ∪ {β0} \ {α | β0 (cid:31) α} is a Pareto-improvement of

R0. We ﬁrst show that Sν ⊆ S0. Assume for a contradiction that this is not the case: there is α ∈ Sν such that β0 (cid:31) α.
– Since α ∈ Sν ⊆ F2, α is in F1 or in facts(ϕP2-max(F1)) = R−(F1). In both cases ϕP2-max(F1) contains the following

clause: ¬xα ∨ (cid:87)

β0⊥γ,β0(cid:54)(cid:31)γ xγ since β0 (cid:31) α.

– Since ν(xα) = true, there must be γ such that β0⊥γ and β0 (cid:54)(cid:31) γ such that ν(xγ) = true, i.e., γ ∈ Sν ⊆ R0.
– Since β0 (cid:54)(cid:31) γ , by deﬁnition of S0, it follows that γ ∈ S0. This contradicts the T -consistency of S0 hence the fact that S0

is a Pareto-improvement of R0.

It follows that Sν ⊆ S0.

• Any repair R1 ⊇ S0 is thus a Pareto-improvement of R0 which contains Sν.
• Since we assume that all repairs that extend Sν are not Pareto-optimal, we can then construct an inﬁnite sequence R0, R1, . . .

of repairs that all contain Sν and such that Ri+1 is a Pareto-improvement of Ri.

• The number of repairs being ﬁnite, there must be a repetition in this sequence. By Proposition 7 in (Staworko, Chomicki,
and Marcinkowski 2012), since (cid:31) is acyclic, so is the relation of Pareto-dominance between repairs, which contradicts the
existence of such a cycle of repairs.

Hence, there exists a Pareto-optimal repair R that extends Sν.

(⇐) Assume that there exists R ∈ PRep(K(cid:31)) such that Sν = R ∩ F2. Since R is T -consistent, it is easy to check that ν
satisﬁes ϕcons(F2). Assume for a contradiction that ν does not satisfy ϕP2-max(F1).
• There exists α ∈ F2 such that ν does not satisfy (cid:86)

β⊥γ,β(cid:54)(cid:31)γ xγ), i.e., (i) ν(xα) = true and (ii) there exists

β(cid:31)α(¬xα ∨ (cid:87)

β (cid:31) α and for every γ such that β⊥γ and β (cid:54)(cid:31) γ, ν(xγ) = false.

• Since Sν = R ∩ F2, it follows that α ∈ R and for every γ such that β⊥γ and β (cid:54)(cid:31) γ, γ /∈ R.
• Let R(cid:48) = R ∪ {β} \ {γ | β⊥γ}. Since for every γ ∈ R such that β⊥γ, it holds that β (cid:31) γ, it follows that R(cid:48) is a

Pareto-improvement of R, contradicting R ∈ PRep(K(cid:31)).

Hence ν satisﬁes ϕP2-max(F1).

Lemma 7. Let K(cid:31) be a prioritized KB with K = (D, T ), F1 ⊆ D, F2 = F1 ∪ facts(ϕC-max(F1)), and let ν be a valuation of
{xα | α ∈ F2}.
• If ν can be extended to a valuation that satisﬁes ϕC-max(F1) ∧ ϕcons(F2) then Sν = {α | ν(xα) = true} can be extended to

a completion-optimal repair of K(cid:31).

• If there exists a completion-optimal repair R of K(cid:31) such that R ∩ F2 = Sν, then ν can be extended to a valuation of the

variables of ϕC-max(F1) ∧ ϕcons(F2) that satisﬁes ϕC-max(F1) ∧ ϕcons(F2).

Proof. (⇒) Assume that ν has been extended to a valuation of the variables of ϕC-max(F1)∧ϕcons(F2) that satisﬁes ϕC-max(F1)∧
ϕcons(F2). Let (cid:31)(cid:48) be the binary relation over F2 such that α (cid:31)(cid:48) β iff ν(xα(cid:31)(cid:48)β) = true.

• Since ν satisﬁes ϕcompl, (cid:31)(cid:48) is such that for all α, β ∈ F2 such that α⊥β, (i) α (cid:31)(cid:48) β or β (cid:31)(cid:48) α , (ii) it is not the case that

α (cid:31)(cid:48) β and β (cid:31)(cid:48) α and (iii) (cid:31)(cid:48) extends (cid:31).

• Moreover, since ν satisﬁes ϕacyc, (cid:31)(cid:48) is acyclic: if there was a cycle α1 (cid:31)(cid:48) · · · (cid:31)(cid:48) αn (cid:31)(cid:48) α1, then by construction of (cid:31)(cid:48) we
would have ν(xα1(cid:31)(cid:48)α2) = · · · = ν(xαn(cid:31)(cid:48)α1) = true and ν(tα1,α2 ) = · · · = ν(tα1,αn) = true, which contradicts the clause
¬xαn(cid:31)(cid:48)α1 ∨ ¬tα1,αn.

Hence (cid:31)(cid:48) is a completion of (cid:31) on F2. Let us complete (cid:31)(cid:48) into an arbitrary completion of (cid:31) on K. Since (cid:31)(cid:48) is total, K(cid:31)(cid:48) has
a unique Pareto-optimal repair R(cid:31)(cid:48) (Staworko, Chomicki, and Marcinkowski 2012), which is a completion-optimal repair. We
next show that Sν ⊆ R(cid:31)(cid:48).

• The optimal repair R(cid:31)(cid:48) can be obtained as follows (cf. Algorithm CCategoricity by Kimelfeld, Livshits, and Peterfreund
(2017), which is here adapted to the case where the total priority relation guarantees the uniqueness of the optimal repair):
Start with R(cid:31)(cid:48) = ∅, then add to R(cid:31)(cid:48) the set P = {α | ∀β ∈ K, β (cid:54)(cid:31)(cid:48) α}, remove from D the sets P and N = {α |
(cid:104)T , P ∪ {α}(cid:105) |= ⊥}, and repeat this process until D is empty.

• We show by induction that every α ∈ P ∩ F2 is such that ν(xα) = true and every α ∈ N ∩ F2 is such that ν(xα) = false.

– In the ﬁrst step, P contains facts that are not dominated in (cid:31)(cid:48) and N contains their conﬂicting facts.
* Let α ∈ P ∩ F2 and assume for a contradiction that ν(xα) = false. Since ν satisﬁes ϕpref , there exists β ∈ F2 such that

α⊥β and ν(xβ) = true and ν(xβ(cid:31)(cid:48)α) = true, i.e., β (cid:31)(cid:48) α, which contradicts the assumption on α.

* Now assume that α ∈ N ∩ F2, i.e., α is in conﬂict with some β ∈ P . Since β (cid:31)(cid:48) α and (cid:31)(cid:48) extends (cid:31), it follows
that β ∈ F2 by construction of F2 = R(F1). Hence ν(xβ) = true, and since ν satisﬁes ϕcons(F2), it follows that
ν(xα) = false.

– Assume that at steps 1, . . . , i of the algorithm, ν(xα) = true if α ∈ P ∩ F2 and ν(xα) = false if α ∈ N ∩ F2, and consider

step i + 1.
* Let α ∈ P ∩ F2 and assume for a contradiction that ν(xα) = false. As before, since ν satisﬁes ϕpref , there exists β ∈ F2
such that α⊥β and ν(xβ) = true and ν(xβ(cid:31)(cid:48)α) = true, i.e., β (cid:31)(cid:48) α. However, by deﬁnition of P , β (cid:31)(cid:48) α implies that β
has already be removed from D, so ν(xβ) = true implies that β belongs to R(cid:31)(cid:48). This contradicts the assumption α ∈ P
by T -consistency of R(cid:31)(cid:48).

* The fact that ν(xα) = false if α ∈ N ∩ F2 follows as in the base case.

By deﬁnition of Sν, we thus have Sν = R(cid:31)(cid:48) ∩ F2.

(⇐) Assume that there exists R ∈ CRep(K(cid:31)) such that Sν = R ∩ F2. Since R is T -consistent, it is easy to check that ν
satisﬁes ϕcons(F2). Moreover, there exists a completion (cid:31)(cid:48) of (cid:31) such that R is the unique Pareto-optimal repair of K(cid:31)(cid:48). Extend
ν by setting ν(xα(cid:31)(cid:48)β) = true iff α (cid:31)(cid:48) β, ν(tα,β) = true iff there is a path α (cid:31)(cid:48) · · · (cid:31)(cid:48) β, and ν(xβ→α) = true iff β (cid:31)(cid:48) α and
β ∈ Sν.

• Since (cid:31)(cid:48) is a total and anti-symmetric binary relation that extends (cid:31), it is easy to check that ν satisﬁes ϕcompl.
• Moreover, since (cid:31)(cid:48) is acyclic, ν satisﬁes ϕacyc: for every α, β ∈ F2, ν satisﬁes ¬xα(cid:31)(cid:48)β ∨ tα,β by deﬁnition of ν(xα(cid:31)(cid:48)β) and
ν(tα,β); it satisﬁes ¬xα(cid:31)(cid:48)β ∨ ¬tβ,α because if α (cid:31)(cid:48) β then there does not exist any path β (cid:31)(cid:48) · · · (cid:31)(cid:48) α; and if there is a path
α (cid:31)(cid:48) · · · (cid:31)(cid:48) β and β (cid:31)(cid:48) γ, there is a path α (cid:31)(cid:48) · · · (cid:31)(cid:48) γ so ν satisﬁes ¬tα,β ∨ ¬xβ(cid:31)(cid:48)γ ∨ tα,γ.

• Finally, we show that ν satisﬁes ϕpref . Assume for a contradiction that this is not the case: either (i) there exists α ∈ F2
such that ν(xα) = false and for every conﬂicting β ∈ F2, ν(xβ→α) = false or (ii) there exists conﬂicting α, β ∈ F2 such
that ν(xβ→α) = true and ν(xβ) = false or ν(xβ(cid:31)(cid:48)α) = false. Case (ii) contradicts the deﬁnition of ν so we are in case (i).
Hence since Sν = R ∩ F2, α /∈ R and for every conﬂicting β ∈ F2, either β (cid:54)(cid:31)(cid:48) α or β /∈ R. Since R ∈ PRep(K(cid:31)(cid:48)),
α /∈ R implies that there exists β ∈ D such that β (cid:31)(cid:48) α and β ∈ R. Moreover, since (cid:31)(cid:48) extends (cid:31), β (cid:31)(cid:48) α implies that
β ∈ F2. We conclude that ν satisﬁes ϕpref .

Hence ν satisﬁes ϕC-max(F1).

B.2 Propositional Encodings for X-AR, X-Brave and X-IAR semantics
Proposition 2. K(cid:31) |=X

AR q((cid:126)a) if and only if ΦX-AR(q((cid:126)a)) is unsatisﬁable.

Proof. Recall that ΦX-AR(q((cid:126)a)) = ϕ¬q((cid:126)a) ∧ ϕX-max(F1) ∧ ϕcons(F2) where F1 = facts(ϕ¬q((cid:126)a)) and F2 = F1 ∪
facts(ϕX-max(F1)).
(⇒) Assume that ΦX-AR(q((cid:126)a)) is satisﬁable and let Sν = {α | ν(xα) = true} for some ν that satisﬁes ΦX-AR(q((cid:126)a)). Since
ν satisﬁes ϕX-max(F1) ∧ ϕcons(F2), by Lemma 5, 6, or 7, Sν can be extended to a X-optimal repair R of K(cid:31). Since ν satisﬁes
ϕ¬q((cid:126)a), by Lemma 3, (R, T ) (cid:54)|= q((cid:126)a). It follows that K(cid:31) (cid:54)|=X
AR q((cid:126)a).
(⇐) Assume that K(cid:31) (cid:54)|=X
AR q((cid:126)a): There exists R ∈ XRep(K(cid:31)) such that (R, T ) (cid:54)|= q((cid:126)a). Let ν be the valuation of {xα |
α ∈ F2} deﬁned by ν(xα) = true iff α ∈ R. By Lemma 5, 6, or 7, ν can be extended to a valuation of the variables of

ϕX-max(F1) ∧ ϕcons(F2) that satisﬁes ϕX-max(F1) ∧ ϕcons(F2). Since (R, T ) (cid:54)|= q((cid:126)a), by Lemma 3, ν satisﬁes ϕ¬q((cid:126)a). It follows
that ΦX-AR(q((cid:126)a)) is satisﬁable.

2 = F (cid:48)

AR q((cid:126)a) if and only if x(cid:126)a is false in every satisfying assignment of ΨX-AR(PotAns)

Proposition 3. K(cid:31) |=X
Proof. Recall that ΨX-AR(PotAns) = (cid:86)
and F (cid:48)
1 ∪ facts(ϕX-max(F (cid:48)
(⇒) Assume that there exists a satisfying assignment ν of ΨX-AR(PotAns) such that ν(x(cid:126)a) = true, and let Sν = {α |
ν(xα) = true}. Since ν satisﬁes ϕX-max(F (cid:48)
2), by Lemma 5, 6, or 7, Sν can be extended to a X-optimal repair R of
K(cid:31). Since ν satisﬁes ϕ(cid:48)
¬q((cid:126)a) and ν(x(cid:126)a) = true, then ν must satisfy ϕ¬q((cid:126)a). It follows by Lemma 3 that (R, T ) (cid:54)|= q((cid:126)a). Hence
K(cid:31) (cid:54)|=X
AR q((cid:126)a).
(⇐) Assume that K(cid:31) (cid:54)|=X

AR q((cid:126)a): There exists R ∈ XRep(K(cid:31)) such that (R, T ) (cid:54)|= q((cid:126)a).

¬q((cid:126)a) ∧ ϕX-max(F (cid:48)

1 = facts((cid:86)

1) ∧ ϕcons(F (cid:48)

1) ∧ ϕcons(F (cid:48)

(cid:126)a∈PotAns ϕ(cid:48)

(cid:126)a∈PotAns ϕ(cid:48)

2) where F (cid:48)

¬q((cid:126)a))

1)).

• As in the proof of Proposition 2, we can ﬁnd a valuation ν of the variables of ϕX-max(F (cid:48)

1) ∧ ϕcons(F (cid:48)

2) that satisﬁes

ϕX-max(F (cid:48)

1) ∧ ϕcons(F (cid:48)

2) and satisﬁes ϕ¬q((cid:126)a).

• Let us extend ν by setting ν(x(cid:126)a) = true and ν(x(cid:126)a(cid:48)) = false for every (cid:126)a(cid:48) ∈ PotAns such that (cid:126)a (cid:54)= (cid:126)a(cid:48).
• Since ν satisﬁes ϕ¬q((cid:126)a), it also satisﬁes ϕ(cid:48)
• Let (cid:126)a(cid:48) ∈ PotAns, (cid:126)a(cid:48) (cid:54)= (cid:126)a. Assume for a contradiction that ν does not satisfy ϕ(cid:48)

¬q((cid:126)a(cid:48)): There is a cause C of q((cid:126)a(cid:48)) such that
ν does not satisfy ϕ(cid:48)
¬C(x(cid:126)a(cid:48)) is a single clause that contains ¬x(cid:126)a(cid:48).
In neg2 case, this implies that there is a fact α ∈ C such that ν(xα) = false, i.e., α /∈ R, and for every β⊥α such that
α (cid:54)(cid:31) β, ν(xβ) = false, i.e., β /∈ R. This contradicts the fact that R ∈ XRep(K(cid:31)) as R ∪ {α} \ {β | α (cid:31) β} would be an
improvement of R. Hence ν satisﬁes ϕ(cid:48)

¬C(x(cid:126)a(cid:48)). In neg1 case, there is a contradiction because ϕ(cid:48)

¬q((cid:126)a).

¬q((cid:126)a(cid:48)).

It follows that ν satisﬁes ΨX-AR(PotAns).

Proposition 4. K(cid:31) |=X

brave q((cid:126)a) if and only if ΦX-brave(q((cid:126)a)) is satisﬁable.

Proof. Recall that ΦX-brave(q((cid:126)a)) = ϕq((cid:126)a) ∧ ϕX-max(F1) ∧ ϕcons(F2) where F1 = facts(ϕq((cid:126)a)) and F2 = F1 ∪
facts(ϕX-max(F1)).
(⇒) Assume that K(cid:31) |=X
brave q((cid:126)a): There exists R ∈ XRep(K(cid:31)) such that (R, T ) |= q((cid:126)a). Let ν be the valuation of
{xα | α ∈ F2} deﬁned by ν(xα) = true iff α ∈ R. By Lemma 5, 6, or 7, ν can be extended to a valuation of the variables
of ϕX-max(F1) ∧ ϕcons(F2) that satisﬁes ϕX-max(F1) ∧ ϕcons(F2). Since (R, T ) |= q((cid:126)a), by Lemma 4, ν can be extended to a
valuation that satisﬁes ϕq((cid:126)a). It follows that ΦX-brave(q((cid:126)a)) is satisﬁable.
(⇐) Assume that ΦX-brave(q((cid:126)a)) is satisﬁable and let Sν = {α | ν(xα) = true} for some ν that satisﬁes ΦX-brave(q((cid:126)a)).
Since ν satisﬁes ϕX-max(F1) ∧ ϕcons(F2), by Lemma 5, 6, or 7, Sν can be extended to a X-optimal repair R of K(cid:31). Since ν
satisﬁes ϕq((cid:126)a), by Lemma 4, (R, T ) |= q((cid:126)a). Hence K(cid:31) |=X
brave q((cid:126)a).

Proposition 5. K(cid:31) |=X

brave q((cid:126)a) if and only if ΦX-brave(C) is satisﬁable for some C ∈ Causes(q((cid:126)a), K).

Proof. Recall that ΦX-brave(C) = ϕC ∧ ϕX-max(F1) ∧ ϕcons(F2) where F1 = facts(ϕC) and F2 = F1 ∪ facts(ϕX-max(F1)). The
proof follows from Lemmas 5, 6, or 7 and 2, and is similar to the proof for Proposition 4.

Proposition 6. K(cid:31) |=X
Proof. Recall that ΨX-brave(PotAns) = (cid:86)
1 ∪ facts(ϕX-max(F (cid:48)
2 = F (cid:48)
F (cid:48)
(⇒) Assume that K(cid:31) |=X

1)).

brave q((cid:126)a) if and only if x(cid:126)a is true in some satisfying assignment of ΨX-brave(PotAns).

(cid:126)a∈PotAns ϕ(cid:48)

q((cid:126)a) ∧ ϕX-max(F (cid:48)

1) ∧ ϕcons(F (cid:48)

2) where F (cid:48)

1 = facts((cid:86)

(cid:126)a∈PotAns ϕ(cid:48)

q((cid:126)a)) and

brave q((cid:126)a): There exists R ∈ XRep(K(cid:31)) such that (R, T ) |= q((cid:126)a).

1. As in the proof of Proposition 4, we can ﬁnd a valuation ν of the variables of ϕX-max(F (cid:48)

1) ∧ ϕcons(F (cid:48)

2) that satisﬁes

ϕX-max(F (cid:48)

1) ∧ ϕcons(F (cid:48)

2) and satisﬁes ϕq((cid:126)a).

2. Let us extend ν by setting ν(x(cid:126)a) = true, and for every (cid:126)a(cid:48) ∈ PotAns such that (cid:126)a (cid:54)= (cid:126)a(cid:48), ν(x(cid:126)a(cid:48)) = false and ν(xC) = false for

every C ∈ Causes(q((cid:126)a(cid:48)), K) \ Causes(q((cid:126)a), K) (i.e., the value of ν(xC) has not been ﬁxed in step (1)).

3. Since ν satisﬁes ϕq((cid:126)a) and ν(x(cid:126)a) = true, it also satisﬁes ϕ(cid:48)
4. For every (cid:126)a(cid:48) ∈ PotAns such that (cid:126)a(cid:48)

q((cid:126)a).

clause, and (ii) every other clause of ϕ(cid:48)
ν(xC) = false, or is a clause shared with ϕq((cid:126)a) and thus is satisﬁed by ν.

(cid:54)= (cid:126)a, ν satisﬁes ϕ(cid:48)
q((cid:126)a(cid:48)) because (i) ν(x(cid:126)a(cid:48)) = false and ¬x(cid:126)a(cid:48) is a disjunct of the ﬁrst
q((cid:126)a(cid:48)) either contains some ¬xC with C ∈ Causes(q((cid:126)a(cid:48)), K) \ Causes(q((cid:126)a), K) and

It follows that ν satisﬁes ΨX-brave(PotAns).
(⇐) Assume that there exists a satisfying assignment ν of ΨX-brave(PotAns) such that ν(x(cid:126)a) = true, and let Sν = {α |
ν(xα) = true}. Since ν satisﬁes ϕX-max(F (cid:48)
2), by Lemma 5, 6, or 7, Sν can be extended to a X-optimal repair R of
K(cid:31). Since ν satisﬁes ϕ(cid:48)
q((cid:126)a) and ν(x(cid:126)a) = true, then ν must satisfy ϕq((cid:126)a). It follows by Lemma 4 that (R, T ) |= q((cid:126)a). Hence
K(cid:31) |=X
brave q((cid:126)a).
Proposition 7. K(cid:31) |=X

IAR q((cid:126)a) if and only if ΦX-IAR(q((cid:126)a)) is unsatisﬁable.

1) ∧ ϕcons(F (cid:48)

(cid:16)

C∈Causes(q((cid:126)a),K)

X-max(F C

1 ∪ facts(ϕC

Proof. Recall that ΦX-IAR(q((cid:126)a)) = (cid:86)
F C
2 = F C
(⇒) Assume that ΦX-IAR(q((cid:126)a)) is satisﬁable and let ν be a valuation that satisﬁes ΦX-IAR(q((cid:126)a)).
• Let C ∈ Causes(q((cid:126)a), K) and SC
X-max(F C
• Since ν satisﬁes ϕC
1 ) ∧ ϕC
¬C, by Lemma 1, C (cid:54)⊆ RC.
• Since ν satisﬁes ϕC

α) = true, α ∈ F C
2 }.
2 ), by Lemma 5, 6, or 7, SC

ν = {α | ν(xC
cons(F C

¬C ∧ ϕC
ϕC

X-max(F C

cons(F C
2 )

1 ) ∧ ϕC

1 )).

ν can be extended to a X-optimal repair RC of K(cid:31).

(cid:17)

where F C

1 = facts(ϕC

¬C), and

Since for every cause C we can ﬁnd RC ∈ XRep(K(cid:31)) that does not include C, it follows that K(cid:31) (cid:54)|=X
(⇐) Assume that K(cid:31) (cid:54)|=X
• There exists RB ∈ XRep(K(cid:31)) such that B (cid:54)⊆ RB (if B contains a real cause of q((cid:126)a) this comes from K(cid:31) (cid:54)|=X

IAR q((cid:126)a) and let B ∈ Causes(q((cid:126)a), K).

IAR q((cid:126)a).

IAR q((cid:126)a), and if

B contains a pair of conﬂicting assertions it is not included in any repair).
α | α ∈ F B

• Let νB be the valuation of {xB
• By Lemma 5, 6, or 7, νB can be extended to a valuation of the variables of ϕB

α) = true iff α ∈ RB.

2 } deﬁned by ν(xB

X-max(F B

1 ) ∧ ϕB

cons(F B

2 ) that satisﬁes

¬B.
α) for every C ∈ Causes(q((cid:126)a), K) and xC

α) = νC(xC

α such that α ∈ F C

2 thus satisﬁes

X-max(F B
ϕB

cons(F B
• Since B (cid:54)⊆ RB, by Lemma 1, νB satisﬁes ϕB

1 ) ∧ ϕB

2 ).

The valuation ν deﬁned by ν(xC
ΦX-IAR(q((cid:126)a)).
Proposition 8. K(cid:31) |=X

IAR q((cid:126)a) if and only if ΦX-IAR(C) is unsatisﬁable for some C ∈ Causes(q((cid:126)a), K).
Proof. Recall that ΦX-IAR(C) = ϕ¬C ∧ ϕX-max(F1) ∧ ϕcons(F2) where F1 = facts(ϕ¬C), and F2 = F1 ∪ facts(ϕX-max(F1)).
The proof follows from Lemmas 5, 6, or 7 and 1.

(cid:16) (cid:86)

Proposition 9. K(cid:31) |=X

IAR q((cid:126)a) if and only if x(cid:126)a is false in every satisfying assignment of ΨX-IAR(PotAns).
(cid:17)

(cid:126)a∈PotAns

2 = F C

1 ∪ facts(ϕC

¬C(x(cid:126)a)), and F C

Proof. ΨX-IAR(PotAns) = (cid:86)
facts(ϕ(cid:48)C
(⇒) Assume that there exists a satisfying assignment ν of ΨX-IAR(PotAns) such that ν(x(cid:126)a) = true. As in the proof of
Proposition 7 , for every C ∈ Causes(q((cid:126)a), K), one can ﬁnd RC that extends SC
2 }. Since ν
satisﬁes ϕ(cid:48)C
IAR q((cid:126)a).
(⇐) Assume that K(cid:31) (cid:54)|=X
• As in the proof of Proposition 7, for each B ∈ Causes(q((cid:126)a), K), we can ﬁnd a valuation νB of the variables of ϕB

α) = true, α ∈ F C
¬C. It follows by Lemma 1 that C (cid:54)⊆ RC. Hence K(cid:31) (cid:54)|=X

¬C(x(cid:126)a), and ν(x(cid:126)a) = true, then ν must satisfy ϕC

C∈Causes(q((cid:126)a),K)(ϕ(cid:48)C
1 ))

ν = {α | ν(xC

¬C(x(cid:126)a) ∧ ϕC

1 ) ∧ ϕC

X-max(F C

X-max(F C

where F C

IAR q((cid:126)a).

cons(F C

1 =

2 ))

X-max(F B

1 ) ∧

cons(F B
ϕB

2 ) that satisﬁes ϕB

X-max(F B

1 ) ∧ ϕB

cons(F B

2 ) and ϕB

¬B.

• Let ν be the valuation deﬁned by

α) = νB(xB

α) for every B ∈ Causes(q((cid:126)a), K) and xB

– ν(xB
– ν(x(cid:126)a) = true;
– for every (cid:126)a(cid:48) ∈ PotAns such that (cid:126)a (cid:54)= (cid:126)a(cid:48), ν(x(cid:126)a(cid:48)) = false and for every C ∈ Causes(q((cid:126)a(cid:48)), K) \ Causes(q((cid:126)a), K):
* we ﬁnd a valuation νC of the variables of ϕC

α such that α ∈ F B
2 ;

2 ) that satisﬁes ϕC

X-max(F C
cons(F C
α) = true or there exists β⊥α such that α (cid:54)(cid:31) β and νC(xC

that for every α ∈ C, either νC(xC
Lemma 5, 6, or 7, since for every fact α, any X-optimal repair contains either α or some β⊥α such that α (cid:54)(cid:31) β.

X-max(F C

1 ) ∧ ϕC
2 ) and is such
β) = true. This is doable by

1 ) ∧ ϕC

cons(F C

* We deﬁne ν(xC

α) = νC(xC
• For each B ∈ Causes(q((cid:126)a), K), since ν satisﬁes ϕB
• Let (cid:126)a(cid:48) ∈ PotAns, (cid:126)a(cid:48) (cid:54)= (cid:126)a, and C ∈ Causes(q((cid:126)a(cid:48)), K). If C ∈ Causes(q((cid:126)a), K), then ν satisﬁes ϕC

α such that α ∈ F C
2 .
¬B, it also satisﬁes ϕ(cid:48)B

α) for every xC

¬B(x(cid:126)a).

ϕ(cid:48)C
¬C(x(cid:126)a(cid:48)). Otherwise, C ∈ Causes(q((cid:126)a(cid:48)), K) \ Causes(q((cid:126)a), K) and by deﬁnition of ϕ(cid:48)C
single clause that contains ¬x(cid:126)a(cid:48) (case neg1) or whose clauses contain either ¬x(cid:126)a(cid:48) or the disjunction of some xC
and all xC

β such that α⊥β and α (cid:54)(cid:31) β (case neg2), it follows that ν satisﬁes ϕ(cid:48)C

¬C(x(cid:126)a(cid:48)).

¬C hence also satisﬁes
¬C(x(cid:126)a(cid:48)) which consists either of a
α with α ∈ C

It follows that ν satisﬁes ΨX-IAR(PotAns).
Proposition 10. For every α ∈ D, K(cid:31) |=X

IAR α if and only if ΦX-IAR(α) is unsatisﬁable.

Proof. Recall that ΦX-IAR(α) = ΦX-IAR({α}) = ϕ¬{α} ∧ ϕX-max(F1) ∧ ϕcons(F2) where F1 = facts(ϕ¬α), and F2 =
F1 ∪ facts(ϕX-max(F1)).
(⇒) Assume that ΦX-IAR(α) is satisﬁable and let ν be a valuation that satisﬁes ΦX-IAR(α). Let Sν = {β | ν(xβ) = true, β ∈
F C
2 }. Since ν satisﬁes ϕX-max(F1) ∧ ϕcons(F2), by Lemma 5, 6, or 7, Sν can be extended to a X-optimal repair R of K(cid:31). Since
ν satisﬁes ϕ¬{α}, by Lemma 1, α /∈ R. It follows that K(cid:31) (cid:54)|=X
IAR α.
(⇐) Assume that K(cid:31) (cid:54)|=X
IAR α. There exists R ∈ XRep(K(cid:31)) such that α /∈ R. Let ν be the valuation of {xβ | β ∈ F2} deﬁned
by ν(xβ) = true iff β ∈ R. By Lemma 5, 6, or 7, ν can be extended to a valuation of the variables of ϕX-max(F1) ∧ ϕcons(F2)
that satisﬁes ϕX-max(F1) ∧ ϕcons(F2). Since α /∈ R, by Lemma 1, ν satisﬁes ϕ¬{α}. Hence ν satisﬁes ΦX-IAR(α).

α∈Rel ϕ(cid:48)

IAR α if and only if α ∈ Rel implies that yα is false in every satisfying assignment of

Proposition 11. For every α ∈ D, K(cid:31) |=X
ΨX-IAR(Rel ).
Proof. ΨX-IAR(Rel ) = (cid:86)
F1 ∪ facts(ϕX-max(F (cid:48)
(⇒) Assume that there exists a satisfying assignment ν of ΨX-IAR(Rel ) such that ν(yα) = true, and let Sν = {β | ν(xβ) =
true}. Since ν satisﬁes ϕX-max(F (cid:48)
2), by Lemma 5, 6, or 7, Sν can be extended to a X-optimal repair R of K(cid:31). Since
ν satisﬁes ϕ(cid:48)
(⇐) Assume that K(cid:31) (cid:54)|=X
• As in the proof of Proposition 10, we can ﬁnd a valuation ν of the variables of ϕX-max(F (cid:48)

¬{α} and ν(yα) = true, then ν must satisfy ϕ¬{α}. It follows by Lemma 1 that α /∈ R. Hence K(cid:31) (cid:54)|=X

¬{α}(yα) ∧ ϕX-max(F1) ∧ ϕcons(F2) where F (cid:48)

AR α: There exists R ∈ XRep(K(cid:31)) such that α /∈ R.

¬{α}(yα)), and F (cid:48)

1 = facts((cid:86)

1) ∧ ϕcons(F (cid:48)

α∈Rel ϕ(cid:48)

2) that satisﬁes

1) ∧ ϕcons(F (cid:48)

IAR α.

2 =

1)).

ϕX-max(F (cid:48)

1) ∧ ϕcons(F (cid:48)

2) and satisﬁes ϕ¬{α}.

• Let us extend ν by setting ν(yα) = true and ν(yα(cid:48)) = false for every α(cid:48) ∈ Rel such that α (cid:54)= α(cid:48).
• Since ν satisﬁes ϕ¬{α}, it also satisﬁes ϕ(cid:48)
¬{α}(yα).
• Let α(cid:48) ∈ Rel , α(cid:48) (cid:54)= α. Assume for a contradiction that ν does not satisfy ϕ(cid:48)

¬{α(cid:48)}(yα(cid:48)). In neg1 case, there is a contradiction
¬{α(cid:48)}(yα(cid:48)) is a single clause that contains ¬yα(cid:48). In neg2 case, this implies that ν(xα(cid:48)) = false, i.e., α(cid:48) /∈ R,
(cid:54)(cid:31) β, ν(xβ) = false, i.e., β /∈ R. This contradicts the fact that R ∈ XRep(K(cid:31)) as

because ϕ(cid:48)
and for every β⊥α(cid:48) such that α(cid:48)
R ∪ {α(cid:48)} \ {β | α(cid:48) (cid:31) β} would be an improvement of R. Hence ν satisﬁes ϕ(cid:48)

¬{α(cid:48)}(yα(cid:48)).

It follows that ν satisﬁes ΨX-IAR(Rel ).

B.3 Non-Binary Conﬂicts
To deﬁne encodings in the case where conﬂicts are not binary, we will use the following notation:
• α⊥B denotes B ∪ {α} ∈ Conf (K) and α /∈ B;
• B (cid:32) α denotes α⊥B and for every β ∈ B, α (cid:54)(cid:31) β.

We redeﬁne GK(cid:31) as a directed hypergraph whose hyperedges are ({α}, B) for every α⊥B such that there exists β ∈ B,
α (cid:54)(cid:31) β and use hypergraph reachability to deﬁne R(F ): β is reachable from α in GK(cid:31) if β = α or there exists a hyperedge
({γ}, B) such that β ∈ B and γ is reachable from α. We next redeﬁne the basic building blocks of our propositional encodings
(ϕC needs no modiﬁcation):

ϕ¬C = (

(cid:95)

(cid:95)

xC,B) ∧

(cid:94)

¬xC,B ∨ xβ

α∈C

B(cid:32)α

α∈C,B(cid:32)α,
β∈B

ϕcons(F ) =

(cid:94)

¬xα ∨

(cid:95)

β∈B

¬xβ

ϕP1-max(F ) =

(cid:94)

α∈F,α⊥B
(cid:95)

(xα ∨

α∈R(F )

B(cid:32)α

xα,B) ∧

(cid:94)

¬xα,B ∨ xβ

ϕP2-max(F ) =

(cid:94)

α∈R−(F )

ψ(α) where ψ(α) =

(cid:94)

(cid:16)

(¬xα ∨

α⊥B,
∃β∈B,β(cid:31)α

C∈Conf (K),
B∩C(cid:54)=∅,
∀γ∈C\B,∀β∈B,β(cid:54)(cid:31)γ

C∈Conf (K),
B∩C(cid:54)=∅,
γ∈C\B

α∈R(F ),
B(cid:32)α,
β∈B

(cid:95)

xB,C) ∧

(cid:94)

¬xB,C ∨ xγ

(cid:17)

and R−(F ) = (cid:83)∞

i=1 Ri with R0 = F and Ri+1 = Ri ∪ {γ | ∃α ∈ Ri, γ ∈ facts(ψ(α))}.

where ϕcompl and ϕacyc remain as in the binary case, except that α⊥β is replaced by {α, β} ⊆ C ∈ Conf (K) and

ϕpref =

(cid:94)

(cid:95)

(xα ∨

xB→α) ∧

(cid:94)

(cid:16)

(¬xB→α ∨ xβ) ∧ (¬xB→α ∨ xβ(cid:31)(cid:48)α)

(cid:17)

.

ϕC-max(F ) = ϕpref ∧ ϕcompl ∧ ϕacyc

α∈R(F )

α⊥B

α∈R(F ),
α⊥B,
β∈B

We show the analogues of the basic lemmas of Section B.1 for the formulas that differ in the non-binary case.

Lemma 8. Let K(cid:31) be a prioritized KB with K = (D, T ), R ∈ XRep(K(cid:31)), and ν be the valuation of {xα | α ∈ D} such that
ν(xα) = true iff α ∈ R. Then ν can be extended to a valuation that satisﬁes ϕ¬C iff C (cid:54)⊆ R.
Proof. Assume that ν has been extended to satisfy ϕ¬C. There exists α ∈ C and B (cid:32) α such that ν(xC,B) = true and for every
β ∈ B, ν(xβ) = true, i.e., β ∈ R. Since R is T -consistent, B ∪ {α} (cid:54)⊆ R so α /∈ R. Hence C (cid:54)⊆ R.

Assume that C (cid:54)⊆ R, i.e., there exists α ∈ C such that α /∈ R. There must exists B (cid:32) α such that B ⊆ R. Otherwise
R ∪ {α} \ {β | α (cid:31) β} would be an improvement of R. Extend ν by setting ν(xC,B) = true. Since ν(xβ) = true for every
β ∈ B , it follows that ν satisﬁes ϕ¬C.

Lemma 9. Let K(cid:31) be a prioritized KB with K = (D, T ), F1 ⊆ D, F2 = F1 ∪ facts(ϕP1-max(F1)), and let ν be a valuation of
{xα | α ∈ F2}.
• If ν can be extended to a valuation that satisﬁes ϕP1-max(F1) ∧ ϕcons(F2) then Sν = {α | ν(xα) = true} can be extended to

a Pareto-optimal repair of K(cid:31).

• If there exists a Pareto-optimal repair R of K(cid:31) such that R ∩ F2 = Sν, then ν can be extended to a valuation that satisﬁes

ϕP1-max(F1) ∧ ϕcons(F2).

Proof. (⇒) Assume that ν has been extended to satisfy ϕP1-max(F1) ∧ ϕcons(F2). Since ν satisﬁes ϕcons(F2), it is easy to check
that Sν is T -consistent, so there exists some repair that extends it. Assume for a contradiction that all repairs that extend Sν are
not Pareto-optimal and take a repair R0 ⊇ Sν.

• Since R0 /∈ PRep(K(cid:31)), there exists a Pareto-improvement S0 of R0: There is β0 ∈ S0 \R0 such that for every α ∈ R0 \S0,

β0 (cid:31) α. We ﬁrst show that Sν ⊆ S0. Assume for a contradiction that this is not the case: there is α ∈ Sν \ S0.
– Since α ∈ Sν ⊆ F2 = R(F1) and β0 (cid:31) α (so that there is some B that contains β0 such that ({α}, B) is an hyperedge of

GK(cid:31) ), then β0 ∈ R(F1) and ϕP1-max(F1) contains the clause xβ0 ∨ (cid:87)

C(cid:32)β0

xβ0,C.

– Since β0 /∈ Sν, ν(β0) = false. Hence there exists C (cid:32) β0 such that ν(xβ0,C) = true.
– Since ϕP1-max(F1) contains the clauses ¬xβ0,C ∨ xγ for every γ ∈ C, it follows that C ⊆ Sν ⊆ R0.
– Since C (cid:32) β0, for every γ ∈ C, β0 (cid:54)(cid:31) γ. It follows that for every γ ∈ C, γ (cid:54)∈ R0 \ S0, hence γ ∈ S0. This means that

C ∪ β0 ⊆ S0, contradicting that S0 is a Pareto-improvement and thus T -consistent.

It follows that Sν ⊆ S0.

• We can then ﬁnd a contradiction as in the proof of Lemma 5.

Hence, there exists an optimal repair R that extends Sν.

(⇐) Assume that there exists R ∈ PRep(K(cid:31)) such that Sν = R ∩ F2. Since R is T -consistent, it is easy to check that ν
satisﬁes ϕcons(F2). Assume for a contradiction that ν cannot be extended to satisfy ϕP1-max(F1).
• There exists α ∈ R(F1) ⊆ F2 such that ν(xα) = false and for every B (cid:32) α, ν(xβ) = false for some β ∈ B. Indeed,
otherwise, setting ν(xα,B) = true for B with B (cid:32) α, ν(xβ) = true for all β ∈ B, and ν(xα,B(cid:48)) = false otherwise will
satisfy ϕP1-max(F1).

• Since Sν = R ∩ F2, it follows that α /∈ R and for every B (cid:32) α, there is some β ∈ B such that β /∈ R.
• Hence, for every B ⊆ R such that α⊥B, we have B (cid:54)(cid:32) α, i.e. there exists β ∈ B such that α (cid:31) β.
• It follows that R(cid:48) = R ∪ {α} \ {β | α (cid:31) β} is a Pareto-improvement of R, contradicting R ∈ PRep(K(cid:31)).

Hence ν satisﬁes ϕP1-max(F1).

Lemma 10. Let K(cid:31) be a prioritized KB with K = (D, T ), F1 ⊆ D, F2 = F1 ∪ facts(ϕP2-max(F1)), and let ν be a valuation
of {xα | α ∈ F2}.
• If ν can be extended to a valuation that satisﬁes ϕP2-max(F1) ∧ ϕcons(F2) then Sν = {α | ν(xα) = true} can be extended to

a Pareto-optimal repair of K(cid:31).

• If there exists a Pareto-optimal repair R of K(cid:31) such that R ∩ F2 = Sν, then ν can be extended to a valuation that satisﬁes

ϕP2-max(F1) ∧ ϕcons(F2).

Proof. (⇒) Assume that ν has been extended to satisfy ϕP2-max(F1) ∧ ϕcons(F2). Since ν satisﬁes ϕcons(F2), it is easy to check
that Sν is T -consistent, so there exists some repair that extends it. Assume for a contradiction that all repairs that extend Sν are
not Pareto-optimal and take a repair R0 ⊇ Sν.

• Since R0 /∈ PRep(K(cid:31)), there exists a Pareto-improvement S0 of R0: There is β0 ∈ S0 \R0 such that for every α ∈ R0 \S0,
β0 (cid:31) α. Moreover, we can assume that S0 = R0 ∪ {β0} \ {α | β0 (cid:31) α}. We show that Sν ∪ S0 is T -consistent, and hence
a Pareto-improvement of R0 that includes Sν. Assume for a contradiction that this is not the case.
– Since Sν and S0 are T -consistent while there is a conﬂict in Sν ∪ S0, there must be α ∈ Sν \ S0 and B ⊆ Sν ∪ S0 such
that α⊥B. Moreover, since R0 is T -consistent and includes Sν, and S0 \ R0 = {β0}, it must be the case that β0 ∈ B.
– Since α ∈ Sν ⊆ F2, α is in F1 or in facts(ϕP2-max(F1)), hence α ∈ R−(F1). In both cases, since α⊥B and β0 (cid:31) α,

ϕP2-max(F1) contains the following clause: (¬xα ∨ (cid:87)

C∈Conf (K),
B∩C(cid:54)=∅,
∀γ∈C\B,∀β∈B,β(cid:54)(cid:31)γ

xB,C).

– Since ν(xα) = true, there exists C ∈ Conf (K) such that B ∩ C (cid:54)= ∅, for every γ ∈ C \ B and β ∈ B, β (cid:54)(cid:31) γ, and
ν(xB,C) = true. Moreover, since ϕP2-max(F1) contains ¬xB,C ∨ xγ for every γ ∈ C \ B, it follows that C \ B ⊆ Sν ⊆ R0.
– Since C \B ⊆ R0 and C \B (cid:54)⊆ S0 by T -consistency of S0, there must be γ ∈ C \B such that β0 (cid:31) γ. This is a contradiction

since β0 ∈ B.

It follows that there exists a Pareto-improvement of R0 that includes Sν.

• We can then ﬁnd a contradiction as in the proof of Lemma 6.

Hence, there exists a Pareto-optimal repair R that extends Sν.

(⇐) Assume that there exists R ∈ PRep(K(cid:31)) such that Sν = R ∩ F2. Since R is T -consistent, it is easy to check that ν
satisﬁes ϕcons(F2). Assume for a contradiction that ν cannot be extended to satisfy ϕP2-max(F1).
• There exists α ∈ R−(F1) ⊆ F2 such that ν does not satisfy

(cid:94)

(cid:16)

(¬xα ∨

(cid:95)

xB,C) ∧

(cid:94)

¬xB,C ∨ xγ

(cid:17)

,

α⊥B,
∃β∈B,β(cid:31)α

C∈Conf (K),
B∩C(cid:54)=∅,
∀γ∈C\B,∀β∈B,β(cid:54)(cid:31)γ

C∈Conf (K),
B∩C(cid:54)=∅,
γ∈C\B

i.e., (i) ν(xα) = true and (ii) there exists α⊥B and β ∈ B such that β (cid:31) α and for every C ∈ Conf (K) such that B ∩ C (cid:54)= ∅
and for every γ ∈ C \ B and β(cid:48) ∈ B, β(cid:48) (cid:54)(cid:31) γ, there is some γ ∈ C \ B such that ν(xγ) = false.

• Since Sν = R ∩ F2, it follows that α ∈ R. Moreover, for every C ∈ Conf (K) such that B ∩ C (cid:54)= ∅ and for every γ ∈ C \ B

and β(cid:48) ∈ B, β(cid:48) (cid:54)(cid:31) γ, there is some γ ∈ C \ B such that γ (cid:54)∈ R.

• Let R(cid:48) = R ∪ {β} \ {γ ∈ R | β (cid:31) γ}. We claim that R(cid:48) is a Pareto-improvement of R, contradicting R ∈ PRep(K(cid:31)).

Indeed, we show this as follows:
– By construction, we have β ∈ R(cid:48) \ R such that β (cid:31) γ for all γ ∈ R \ R(cid:48).
– We can also show that R(cid:48) is T -consistent. Indeed, suppose for a contradiction that R(cid:48) contains a conﬂict C with β ∈ C. If
there is γ ∈ C \ {β} with β (cid:31) γ, then this contradicts the deﬁnition of R(cid:48). If instead we have β (cid:54)(cid:31) γ for all γ ∈ C \ {β},
then we know that there is some such γ such that γ (cid:54)∈ R, hence γ (cid:54)∈ R(cid:48), again a contradiction.

Hence ν satisﬁes ϕP2-max(F1).

Lemma 11. Let K(cid:31) be a prioritized KB with K = (D, T ), F1 ⊆ D, F2 = F1 ∪ facts(ϕC-max(F1)), and let ν be a valuation of
{xα | α ∈ F2}.
• If ν can be extended to a valuation that satisﬁes ϕC-max(F1) ∧ ϕcons(F2) then Sν = {α | ν(xα) = true} can be extended to

a completion-optimal repair of K(cid:31).

• If there exists a completion-optimal repair R of K(cid:31) such that R ∩ F2 = Sν, then ν can be extended to a valuation of the

variables of ϕC-max(F1) ∧ ϕcons(F2) that satisﬁes ϕC-max(F1) ∧ ϕcons(F2).

Proof. (⇒) Assume that ν satisﬁes ϕC-max(F1) ∧ ϕcons(F2). Let (cid:31)(cid:48) be the binary relation over F2 such that α (cid:31)(cid:48) β iff
ν(xα(cid:31)(cid:48)β) = true. As in the proof of Lemma 7, since ν satisﬁes ϕcompl and ϕacyc, (cid:31)(cid:48) is a completion of (cid:31) on F2 that we
complete (cid:31)(cid:48) into an arbitrary completion of (cid:31) on K, and there is a unique Pareto-optimal repair R(cid:31)(cid:48), which is a completion-
optimal repair. We next show that Sν ⊆ R(cid:31)(cid:48).

• Recall from proof of Lemma 7 that R(cid:31)(cid:48) can be obtained as follows: Start with R(cid:31)(cid:48) = ∅, then add to R(cid:31)(cid:48) the set P = {α |
∀β ∈ K, β (cid:54)(cid:31)(cid:48) α}, remove from D the sets P and N = {α | (cid:104)T , P ∪ {α}(cid:105) |= ⊥}, and repeat this process until D is empty.

• We show by induction that every α ∈ P ∩ F2 is such that ν(xα) = true and every α ∈ N ∩ F2 is such that ν(xα) = false.

– In the ﬁrst step, P contains facts that have no facts of greater priority and N contains facts that belong to some conﬂict

that contains only facts from P except them.
* Let α ∈ P ∩ F2 and assume for a contradiction that ν(xα) = false. Since ν satisﬁes ϕpref , there exists B such that α⊥B

and for every β ∈ B, ν(xβ) = true and ν(xβ(cid:31)(cid:48)α) = true, i.e., β (cid:31)(cid:48) α, which contradicts the assumption on α.

* Now assume that α ∈ N ∩ F2, i.e., there is some B ⊆ P such that α⊥B. Since for every β ∈ B, β (cid:31)(cid:48) α and (cid:31)(cid:48) extends
(cid:31), it follows that β ∈ F2 by construction of F2 = R(F1). Hence for every β ∈ B, ν(xβ) = true, and since ν satisﬁes
ϕcons(F2), it follows that ν(xα) = false.

– Assume that at steps 1, . . . , i of the algorithm, ν(xα) = true if α ∈ P ∩ F2 and ν(xα) = false if α ∈ N ∩ F2, and consider

step i + 1.
* Let α ∈ P ∩ F2 and assume for a contradiction that ν(xα) = false. As before, since ν satisﬁes ϕpref , there exists B such
that α⊥B and for every β ∈ B, ν(xβ) = true and ν(xβ(cid:31)(cid:48)α) = true, i.e., β (cid:31)(cid:48) α. However, by deﬁnition of P , β (cid:31)(cid:48) α
implies that β has already be removed from D, so ν(xβ) = true implies that β belongs to R(cid:31)(cid:48). Hence B ⊆ P , which
contradicts the assumption α ∈ P by T -consistency of R(cid:31)(cid:48).

* The fact that ν(xα) = false if α ∈ N ∩ F2 follows as in the base case.

By deﬁnition of Sν, we thus have Sν = R(cid:31)(cid:48) ∩ F2.
(⇐) Assume that there exists R ∈ CRep(K(cid:31)) such that Sν = R ∩ F2. Since R is T -consistent, it is easy to check that ν
satisﬁes ϕcons(F2). Moreover, there exists a completion (cid:31)(cid:48) of (cid:31) such that R is the unique Pareto-optimal repair of K(cid:31)(cid:48). Extend
ν by setting ν(xα(cid:31)(cid:48)β) = true iff α (cid:31)(cid:48) β, ν(tα,β) = true iff there is a path α (cid:31)(cid:48) · · · (cid:31)(cid:48) β, and ν(xB→α) = true iff for every
β ∈ B, β (cid:31)(cid:48) α and β ∈ Sν. As in the proof of Lemma 7, we can show that ν satisﬁes ϕcompl and ϕacyc. We show that ν satisﬁes
ϕpref .

Assume for a contradiction that this is not the case: either (i) there exists α ∈ R(F1) ⊆ F2 such that ν(xα) = false and for
every B such that α⊥B, ν(xB→α) = false or (ii) there exists α and B such that α⊥B, ν(xB→α) = true and there exists β ∈ B
such that ν(xβ) = false or ν(xβ(cid:31)(cid:48)α) = false. Case (ii) contradicts the deﬁnition of ν (since ν(xB→α) = true iff for every
β ∈ B, β (cid:31)(cid:48) α and β ∈ Sν) so we are in case (i).

• Since Sν = R ∩ F2, ν(xα) = false implies that α /∈ R.
• For every B such that α⊥B, by deﬁnition of ν, ν(xB→α) = false implies that there exists β ∈ B such that β (cid:54)(cid:31)(cid:48) α or β /∈ R.
• However, since R ∈ PRep(K(cid:31)(cid:48)) and (cid:31)(cid:48) is total, α /∈ R implies that there exists B ⊆ R such that α⊥B and for every β ∈ B,
β (cid:31)(cid:48) α. Indeed, otherwise, R(cid:48) = R ∪ {α} \ {β | α (cid:31)(cid:48) β} would be a Pareto-improvement of R w.r.t. (cid:31)(cid:48) since every conﬂict
C ⊆ R ∪ {α} would contain some β ∈ R such that β (cid:54)(cid:31)(cid:48) α, i.e., such that α (cid:31)(cid:48) β.

We conclude that ν satisﬁes ϕpref . Hence ν satisﬁes ϕC-max(F1).

it removes the self-inconsistent facts with the procedure RemoveSelfIncons
Algorithm 1 is our high-level procedure:
and ﬁnds the trivial answers with the procedure HandleTriviallyIAR. Then it ﬁlters the remaining answers with the
FilterRemainingAnswers procedure which is one of algorithms presented in the next subsections.

C Pseudocode for Algorithms

Algorithm 1 General Algorithm
Input: semantics Sem, repair type X, directed conﬂict graph GK(cid:31) , set of potential answers PotAns and their causes
{Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}
Output: set Ans of answers to q over K(cid:31) under X-Sem

GK(cid:31) , PotAns, {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns} ← RemoveSelfIncons(GK(cid:31), {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns})
Ans, Causes(q((cid:126)a), K) ← HandleTriviallyIAR(GK(cid:31) , {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns})
Ans ← Ans ∪ FilterRemainingAnswers(Sem, X, GK(cid:31) , {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns})
Output Ans

C.1 Generic Algorithms Applicable to X-AR, X-IAR and X-brave
The algorithms Simple (Algorithm 4), All-MaxSAT (Algorithm 5), All-MUSes (Algorithm 6), and Assumptions (Algorithm 7)
can be used for any semantics.
• Simple ﬁlters answers one by one, constructing a SAT encoding for each answer and using a standard SAT solver.
• All-MaxSAT constructs a single encoding with hard clauses and soft clauses that correspond to the answers to check and uses
a weighted MaxSAT solver to ﬁlter as many answers as possible before iterating to ﬁlter remaining answers. Note that in the
X-IAR case, we actually don’t need to iterate since each cause of each answer has its own variables.

Algorithm 2 RemoveSelfIncons
Input: directed conﬂict graph GK(cid:31) , set of potential answers PotAns and their causes {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}
Output: updated GK(cid:31) , PotAns and {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns} without self-inconsistent facts

for all {α} ∈ Conf (K) do
for all (cid:126)a ∈ PotAns do

for all C ∈ Causes(q((cid:126)a), K) do

if α ∈ C then

Causes(q((cid:126)a), K) ← Causes(q((cid:126)a), K) \ {C}

end if
end for
if Causes(q((cid:126)a), K) = ∅ then
PotAns ← PotAns \ {(cid:126)a}

end if
end for
for all {α, β} ∈ Conf (K) do

Conf (K) ← Conf (K) \ {α, β}

end for

end for
Output GK(cid:31) , PotAns, {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}

Algorithm 3 HandleTriviallyIAR
Input: directed conﬂict graph GK(cid:31) , set of potential answers PotAns and their causes {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}
Output:
facts

set Ans of trivial answers, updated {Causes(q((cid:126)a), K)

| (cid:126)a ∈ PotAns} without

trivial answers and

Ans ← ∅
for all (cid:126)a ∈ PotAns do

for all C ∈ Causes(q((cid:126)a), K), if (cid:126)a /∈ Ans do

C ← C \ {α | {α, β} ∈ Conf (K) ⇒ α (cid:31) β}
if C = ∅ then

Ans ← Ans ∪ {(cid:126)a}

end if
end for

end for
Output Ans, {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}

• All-MUSes uses the same encoding for all answers with hard and soft clauses and computes all minimal unsatisﬁable subsets
of soft clauses w.r.t. the hard clauses: those that contain a single variable correspond to the true (resp. false) answers under
X-AR or X-IAR (resp. X-brave) semantics.

• Assumptions takes the hard clauses of this global encoding as the SAT encoding and uses the soft clauses as assumptions to

check for each answer whether it holds or not.

Let valSem = UNSAT for Sem = AR and Sem = IAR, and valSem = SAT for Sem = brave.

Algorithm 4 Simple
Input: semantics Sem, repair type X, directed conﬂict graph GK(cid:31) , set of potential answers PotAns and their causes
{Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}
Output: set Ans of answers to q over K(cid:31) under X-Sem

Ans ← ∅
for all (cid:126)a ∈ PotAns do
ϕ ← ΦX-Sem(q((cid:126)a))
if SAT(ϕ) = valSem then
Ans ← Ans ∪ {(cid:126)a}

end if
end for
Output Ans

Algorithm 5 All-MaxSAT
Input: semantics Sem, repair type X, directed conﬂict graph GK(cid:31) , set of potential answers PotAns and their causes
{Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}
Output: set Ans of answers to q over K(cid:31) under X-Sem

Ans ← ∅
ϕ ← ΨX-Sem(PotAns) ∧ (cid:86)
moreAnswers ← true
assumedLitterals ← ∅
ﬁlteredAns ← ∅
while moreAnswers = true and ﬁlteredAns (cid:54)= PotAns do

(cid:126)a∈Potans x(cid:126)a

moreAnswers ← false
optModel ← MaxSAT(ϕ, assumedLitterals)
for all (cid:126)a ∈ PotAns do

if optModel |= x(cid:126)a then
moreAnswers ← true
ﬁlteredAns ← ﬁlteredAns ∪ {(cid:126)a}
assumedLitterals ← assumedLitterals ∪ {¬x(cid:126)a}

end if
end for
end while
if valSem = UNSAT then

Ans ← PotAns \ ﬁlteredAns

else

Ans ← Ans ∪ ﬁlteredAns

end if
Output Ans

C.2 Algorithms Speciﬁc to X-IAR or X-brave
The algorithm Cause-by-cause (Algorithm 8) checks whether each cause is in some (resp. all) optimal repair(s): if an answer
has such a cause, then it holds under X-brave (resp. X-IAR) semantics.
The algorithms IAR-causes (Algorithm 9) and IAR-facts (Algorithm 10) are speciﬁc to X-IAR semantics.
• IAR-causes computes X-IAR and non-X-IAR facts as it goes: it checks the causes one by one, by ﬁrst checking whether
the cause contains some known non-X-IAR facts or only known X-IAR facts, and otherwise checking the status of each
remaining fact, stoping at the ﬁrst non-X-IAR one.

Algorithm 6 All-MUSes
Input: semantics Sem, repair type X, directed conﬂict graph GK(cid:31) , set of potential answers PotAns and their causes
{Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}
Output: set Ans of answers to q over K(cid:31) under X-Sem

Ans ← ∅
ϕ ← ΨX-Sem(PotAns) ∧ (cid:86)
MUSes ← computeAllMUSes(ϕ)
if valSem = UNSAT then

(cid:126)a∈Potans x(cid:126)a

Ans ← Ans ∪ {(cid:126)a | {x(cid:126)a} ∈ MUSes}

else

Ans ← PotAns \ {(cid:126)a | {x(cid:126)a} ∈ MUSes}

end if
Output Ans

Algorithm 7 Assumptions
Input: semantics Sem, repair type X, directed conﬂict graph GK(cid:31) , set of potential answers PotAns and their causes
{Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}
Output: set Ans of answers to q over K(cid:31) under X-Sem

Ans ← ∅
ϕ ← ΨX-Sem(PotAns)
for all (cid:126)a ∈ PotAns do

if SAT(ϕ[x(cid:126)a]) = valSem then

Ans ← Ans ∪ {(cid:126)a}

end if
end for
Output Ans

• IAR-facts also maintain two sets of X-IAR and non-X-IAR facts. For each answer, it checks whether the facts in the union of
the causes are X-IAR or not with a weighted MaxSAT solver, then it checks whether some answer cause contains only such
facts.

Algorithm 8 Cause-by-cause
Input: semantics Sem ∈ {brave, IAR}, repair type X, directed conﬂict graph GK(cid:31) , set of potential answers PotAns and their
causes {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}
Output: set Ans of answers to q over K(cid:31) under X-Sem

Ans ← ∅
for all (cid:126)a ∈ PotAns do

for all C ∈ Causes(q((cid:126)a), K), if (cid:126)a /∈ Ans do

ϕ ← ΦX-Sem(C)
if SAT(ϕ) = valSem then
Ans ← Ans ∪ {(cid:126)a}

end if
end for

end for
Output Ans

Algorithm 9 IAR-causes
Input: repair type X, GK(cid:31) , set of potential answers PotAns and their causes {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}
Output: set Ans of answers to q over K(cid:31) under X-IAR semantics

Ans ← ∅
IARfacts ← ∅
nonIARfacts ← ∅
for all (cid:126)a ∈ PotAns do

for all C ∈ Causes(q((cid:126)a), K), if (cid:126)a /∈ Ans and C ∩ nonIARfacts = ∅ do

C ← C \ IARfacts
if C = ∅ then

Ans ← Ans ∪ {(cid:126)a}

else

IARCause ← true
for all α ∈ C, if IARCause = true do

ϕ ← ΦX-IAR(α)
if SAT(ϕ) = UNSAT then

IARfacts ← IARfacts ∪ {α}

else

nonIARfacts ← nonIARfacts ∪ {α}
IARCause ← false

end if
end for
if IARCause = true then
Ans ← Ans ∪ {(cid:126)a}

end if

end if
end for

end for
Output Ans

Algorithm 10 IAR-facts
Input: repair type X, GK(cid:31) , set of potential answers PotAns and their causes {Causes(q((cid:126)a), K) | (cid:126)a ∈ PotAns}
Output: set Ans of answers to q over K(cid:31) under X-IAR semantics

Ans ← ∅
IARfacts ← ∅
nonIARfacts ← ∅
for all (cid:126)a ∈ PotAns do
RelevantFacts ← (cid:83)
ϕ ← ΨX-IAR(RelevantFacts) ∧ (cid:86)
moreNonIAR ← true
assumedLitterals ← ∅
newNonIAR ← ∅
while moreNonIAR = true and newNonIAR (cid:54)= RelevantFacts do

C∈Causes(q((cid:126)a),K) C \ (IARfacts ∪ nonIARfacts)
α∈RelevantFacts yα

moreNonIAR ← false
optModel ← MaxSAT(ϕ, assumedLitterals)
for all α ∈ RelevantFacts do
if optModel |= yα then
moreNonIAR ← true
newNonIAR ← newNonIAR ∪ {α}
assumedLitterals ← assumedLitterals ∪ {¬yα}

end if
end for
end while
IARfacts ← IARfacts ∪ RelevantFacts \ newNonIAR
nonIARfacts ← nonIARfacts ∪ newNonIAR
for all C ∈ Causes(q((cid:126)a), K), if (cid:126)a /∈ Ans do

C ← C \ IARfacts
if C = ∅ then

Ans ← Ans ∪ {(cid:126)a}

end if
end for

end for
Output Ans

D Details on Experimental Setting

D.1 KBs Description
CQAPri benchmark We refer to section 3.1.1 of (Bourgaux 2016) for the detailed description of the CQAPri benchmark
DL-Lite ontology, datasets and queries. Note that while the queries are given as CQs, they correspond to UCQs when rewritten
according to the ontology. We use the 18 datasets named uXcY with X ∈ {1, 5, 20} and Y ∈ {1, 5, 10, 20, 30, 50}. Parameters
X and Y are related to the size and the proportion of assertions involved in some conﬂicts respectively (the higher the bigger),
and the datasets are such that uXcY ⊆ uXcY(cid:48) for Y ≤ Y (cid:48) and uXcY ⊆ uX(cid:48)cY for X ≤ X (cid:48). Their sizes range from 75K to 2M
facts and their proportions of facts involved in some conﬂict are between 3% and 46%. The conﬂicts graphs contain from 2,373
to 946,819 facts and from 2,314 to 3,130,377 conﬂicts. In the smallest conﬂict graph (u1c1), each of the facts is in conﬂict with
between 1 and 614 facts with an average of 2. In the largest one (u20c50), each of the facts is in conﬂict with between 1 and
744 facts with an average of 6.6.

Food Inspection dataset The Food Inspection dataset contains data about inspection of food establishments in New York
and Chicago taken from (Dat c) and (Dat a). The original data is in two csv ﬁles of respectively 399,961 and 213,606 rows and
26 and 17 columns. We use the database schema and queries proposed in (Dixit and Kolaitis 2019): the data is decomposed
into four relations with some key constraints and one functional dependency. All details are provided in Figure 5. We modiﬁed
query q5 because the value F ail is not used in the New York dataset, so we keep only the ﬁrst CQ of the original UCQ; and
we don’t report experiments using q1 (which is the Boolean version of q2) because it trivially hold under all semantics as it has
causes without any conﬂict, and is thus not interesting in the scope of this paper. In total, the dataset contains more than 523K
facts. Compared to the setting of (Dixit and Kolaitis 2019), our dataset is a bit larger because the original datasets have been
extended with new entries since then. The conﬂict graph contains 192,028 facts (37% of the facts are in some conﬂict) and
219,854 conﬂicts. Each of the conﬂict graph facts is in conﬂict with between 1 and 566 facts with an average of 2.3.

Relation
NY Insp(LicenseNo,Risk,InspDate,InspType,Result)
CH Insp(LicenseNo,Risk,InspDate,InspType,Result)
NY Rest(Name, LicenseNo, Cuisine, Address, Zip)
CH Rest(Name, LicenseNo, Facility, Address, Zip)

Constraint
NY Insp(LicenseNo,InspDate,InspType → Risk, Result)
CH Insp(LicenseNo,InspDate,InspType → Risk, Result)
NY Rest(LicenseNo→ Name, Cuisine, Address, Zip)
CH Rest(LicenseNo → Name, Facility, Address, Zip)
CH Rest(Name → Zip)

Type
Key
Key
Key
Key
FD

#facts
241,419
212,907
28,878
40,375

#facts in violations
182,510
1,155
0
2,390
6,294

q2(x) =NY Rest(x, , , , ) ∧ CH Rest(x, , , , )
q3(x) =NY Rest(x, y, , , ) ∧ CH Rest(x, y(cid:48), , , ) ∧ NY Insp(y, , z, , ) ∧ CH Insp(y(cid:48), , z, , )

q4(x, y) =CH Rest(x, y, , , ) ∧ CH Insp(y, , , , P ass)
q5(x) =CH Rest(x, y, , , ) ∧ CH Insp(y, , , , F ail)

q6(x, y) =CH Rest(x, , , , y) ∧ NY Rest(x, z, , , ) ∧ NY Insp(z, N otCritical, , , )

Figure 5: Food Inspection dataset: database schema, constraints and queries. In the queries, denotes existentially quantiﬁed variables that
are not shared among atoms and free variables are given in query heads.

Physicians dataset We build the Physicians dataset from the National Downloadable File provided by the Centers for Medi-
care & Medicaid Services (CMS) (Dat b). It contains information on medical professionals and the organizations they are
associated with. The original data is a csv ﬁle of 2,214,220 rows and 40 columns. We decomposed it into seven relations, added
some reasonable key constraints and functional dependencies and design some queries. All details are provided in Figure 6.
In total, the dataset contains more than 8,254K facts. The conﬂict graph contains 183,387 facts (2% of the facts are in some
conﬂict) and 2,708,718 conﬂicts. Each of the conﬂict graph facts is in conﬂict with between 1 and 2,069 facts with an average
of 29.5.

D.2 Construction of Input Files
To obtain the potential answers and their causes, we put the data in relational databases that we query with ProvSQL, a
PostgreSQL extension which provides us with the answer causes (Senellart et al. 2018). For the CQAPri benchmark, we ﬁrst

Relation
Physicians(npi, ind pac id, ind enrl id, lst nm, frst nm, mid nm, suff, gndr)
PrimarySpecialty(npi, pri spec)
SecondarySpecialty(npi, sec spec)
Credentials(npi, cred , med sch, grd yr)
GroupPractice(npi,org nm, org pac id, num org mem, adr ln 1, adr ln 2, cty, st, zip)
HospAfﬁliation(npi, hosp aﬂ, hosp aﬂ lbn)
Assignment(npi, ind assgn)

#facts
1,194,300
1,150,513
154,570
1,146,083
2,214,129
1,248,351
1,146,086

Constraint
Physicians(npi→ ind pac id, ind enrl id, lst nm, frst nm, mid nm, suff, gndr)
PrimarySpecialty(npi→ pri spec)
Credentials(npi → cred , med sch, grd yr)
GroupPractice(zip→ cty, st )
HospAfﬁliation(hosp aﬂ → hosp aﬂ lbn)
Assignment(npi → ind assgn)

Type
Key
Key
Key
FD
FD
Key

#facts in violations
91,408
8,800
0
83,179
0
0

q1(x) =PrimarySpecialty(x , INTERNAL MEDICINE ) ∧ Assignment(x, Y ) ∧ GroupPractice(x, , , , , , , AZ, )
q2(x) =Physicians(x, , , , , , , M ) ∧ Credentials(x, M D, , )

∧ PrimarySpecialty(x , HAND SURGERY ) ∧ SecondarySpecialty(x , ORTHOPEDIC SURGERY )

q3(x, y) =Physicians(z , , , y, x , , , ) ∧ GroupPractice(z , , , , , , NEW YORK , , )
q4(x, x(cid:48)) =GroupPractice(x , , , , , , , TX , ) ∧ GroupPractice(x (cid:48), ,

, , , , TX , )∧

Credentials(x , MD, y, ) ∧ Credentials(x (cid:48), MD, y, ) ∧ HospAfﬁliation(x , z , ) ∧ HospAfﬁliation(x (cid:48), z , )

q5(x, x(cid:48)) =PrimarySpecialty(x , y) ∧ PrimarySpecialty(x (cid:48), y)∧

Credentials(x , , COLUMBIA U .C . PHYSICIANS AND SURGEONS , z )∧
Credentials(x (cid:48), , COLUMBIA U .C . PHYSICIANS AND SURGEONS , z )∧
Physicians(x , , , , , , , F ) ∧ Physicians(x (cid:48), , , , , , , F )
q6(x, x(cid:48)) =Physicians(x , , , y, , , , ) ∧ Physicians(x (cid:48), , , y, , , , )∧

GroupPractice(x , , , , , , , WA, ) ∧ GroupPractice(x (cid:48), , , , , , , OR, )

Figure 6: Physicians dataset: database schema, constraints and queries. In the queries, denotes existentially quantiﬁed variables that are not
shared among atoms and free variables are given in query heads.

rewrite the conjunctive queries w.r.t. the ontology into union of conjunctive queries with Rapid (Chortaras, Trivela, and Stamou
2011). We refer to section 3.1.1 of (Bourgaux 2016) for details on the rewritten queries.

We build the conﬂict graphs in a similar fashion, using ‘conﬂict queries’ that ask whether some constraint is not satisﬁed by

the dataset. The cause of this queries are precisely the conﬂicts of the KB.

Remark 2. We did not measure the time needed to compute the conﬂict graph or the causes of a query since our focus is on
the comparison of the answer ﬁltering algorithms. However such times are reported for the CQAPri benchmark in (Bourgaux
2016). In particular, the time for the construction of conﬂict graphs ranged from 2 to 40 seconds for the databases we consider
here. Note that the computation of the conﬂict graph and causes for answers depends on the logic / constraints considered,
contrary to the ﬁltering step we consider here.

D.3 Sizes of Query Answers and Causes Files
Table 3 gives the size of the ﬁles that contain the potential answers and their causes for the Food Inspection and Physicians
datasets and four example datasets of the CQAPri benchmark, with minimal and maximal sizes and minimal and maximal
proportion of facts in conﬂicts: u1c1, u1c50, u20c1, u20c50.

D.4 Priority Relations and Sizes of Directed Conﬂict Graphs
We build score-structured priority relations by randomly assigning to each fact a score between 1 and n. To construct a priority
relation that is not score-structured, we consider each conﬂict and assign a random direction to the corresponding edge in
the conﬂict graph with a probability p, except if doing so creates a cycle. We ﬁnally check if we got a non score-structured
preference relation.

u1c1

2,106
1,673
19
10,427
27
36
5
0
173
0.2
69
162
87
17
16
4,171
1
1,615
0
3

q1
q2
q3
q4
q5
q6
q7
q8
q9
q10
q11
q12
q13
q14
q15
q16
q17
q18
q19
q20

u1c50

2,120
1,768
19
10,664
32
51
6
0
217
0.5
73
174
97
17
16
4,295
1
1,664
0
3

u20c1

57,498
44,465
19
259,050
27
36
5
7
4,683
10
1,871
3,823
2,368
440
439
114,364
35
44,242
14
3

u20c50

57,857
47,158
19
264,861
32
51
6
7
5,791
11
2,000
4,123
2,635
440
447
121,492
40
45,286
301
3

Food Inspection

3,692
244
7,016
3,007
22,258

Physicians

234
38
1,692
351,060
459
66,196

q2
q3
q4
q5
q6

q1
q2
q3
q4
q5
q6

Table 3: Answers and causes ﬁle size in kB.

Food Inspection
Physicians

no priority

439,708
5,417,436

no priority
score n = 5
non score p = 0.8

score n = 2

score n = 5

non score p = 0.5

non score p = 0.8

329,909
4,063,007

263,868
3,250,863

u1c1

4,628
2,810
3,140

u1c50

162,608
97,677
109,292

356,446
4,621,295

u20c1

146,424
87,760
102,025

308,856
4,186,468

u20c50

6,260,754
3,756,160
4,326,325

Table 4: Number of edges in directed conﬂict graphs, depending on the priority relation.

On the Food Inspection and Physicians datasets, we build four priority relations: two score-structured with n=2 and n=5
respectively, and two non score-structured with p=0.5 and p=0.8 respectively. In the case of the CQAPri benchmark, we build
only two priority relations (score-strutured with n=5 and non score-structured with p=0.8) on our biggest dataset (u20c50),
then propagate them to the other datasets. We check that the non score-structured relation is not score-structured already on
u1c30 and on u5c1. For datasets u1cY with Y < 30, there is no cycles in the conﬂict graph so all possible priority relations are
actually score-structured.

The size of the directed conﬂict graph (that contains both edges (α, β) and (β, α) if {α, β} ∈ Conf (K) and α (cid:54)(cid:31) β and
β (cid:54)(cid:31) α, and contains a single edge (α, β) if {α, β} ∈ Conf (K) and β (cid:31) α) is roughly equal to n+1
2n of the original conﬂict
graph for score-structured priority with n levels (since the probability of having α (cid:31) β or β (cid:31) α, hence keeping only one of
the edges (α, β) and (β, α) is n−1
2n of the edges are removed). In the case of non-structured priority, because of
the acyclicity condition, the proportion of edges removed is a bit less than p
2 , so the size of the directed conﬂict graph is greater
than 2−p
2 . Table 4 reports the actual sizes of the directed conﬂict
graphs.

2 . We chose our two values of n and p so that n+1

n , so that n−1

2n = 2−p

E Details on Experimental Evaluation

E.1 Number of Answers Under the Different Semantics
Table 5 shows the number of answers that hold under the different semantics we consider in four example datasets u1c1, u1c50,
u20c1 and u20c50 of the CQAPri benchmark in the case of classical repairs (no priority relation): (plain) IAR semantics, AR
semantics but not IAR semantics, brave semantics but not AR semantics, and potential answers that would hold in the dataset
without any constraints but do not hold under brave semantics.

Tables 6, 7 and 8 show the number of answers that hold under the different semantics we consider in the case of optimal
repairs with the score-structured and non score-structured priority relations respectively: answers that are trivially X-IAR (some
cause contains only facts that do not have outgoing edges in the directed conﬂict graph), X-IAR answers that are not trivially
X-IAR, X-AR answers that are not X-IAR, X-brave answers that are not X-AR, and potential answers that do not hold under
X-brave semantics.

Tables 9, 10, 11 and 12, 13, 14 show the number of answers in the different classes for the different priority relations and
repair types on the Food Inspection dataset and Physicians dataset respectively. The empty cells correspond to cases where we
were not able to compute the answers under the required semantics in our time and memory limits.

Classical v.s. optimal repairs
In the CQAPri benchmark, without priority relation, a lot of queries do not have any AR
answers that are not trivial, making trivial answers a good approximation (computable in polynomial time) of AR in many
cases (this is not the case for the Food Inspection and Physicians datasets). This is not true when using optimal repairs: in big
datasets or datasets with a lot of conﬂicts, most queries have (a lot of) answers that hold under X-AR/X-IAR while not being
trivial. Hence, even if there are more answers that are trivially true when using priority relations than without, it seems even
more useful to actually compute these answers rather than going for the polynomial lower bound given by the trivial answers.
While there are very few potential answers that are not brave under the classical semantics, there are very common with

optimal repairs.

Pareto- v.s. completion-optimal repairs We were not able to compute answers for completion-optimal repairs on the Food
Inspection dataset and most of the queries of the CQAPri benchmark. For the few queries of the CQAPri benchmark for which
we manage to compute them, they coincide with those obtained with Pareto-optimal repairs. On the Physicians dataset, we
manage to compute the answers with completion-optimal repairs for ﬁve queries out of six (only under C-IAR semantics for
one of them), and two of them differ from those obtained with Pareto-optimal repairs (q1 and q6).

Table 5: Number of answers in the different classes. CQAPri benchmark without priority relation.

u1c1

u20c1

AR\IAR

brave\AR

not brave

IAR

AR\IAR

brave\AR

not brave

0
20
0
0
0
0
0
0
3
0
0
11
3
0
0
0
0
0
0
0

380
12
0
5,636
0
0
1
0
80
3
4
10
8
4
102
3,987
1
66
0
0

0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

532,331
189,186
85
1,123,422
10
235
91
0
33,433
0
14,331
7,082
28,891
4,785
12,050
396,411
27
81,760
0
50

0
228
0
0
0
0
0
0
60
0
0
218
64
0
0
0
0
0
0
0

12,776
1,019
0
944,364
0
0
46
31
2,714
58
145
251
204
166
1,702
72,138
10
1,342
1
0

0
0
0
0
0
0
0
0
5
0
0
0
0
0
0
0
0
0
0
0

u1c50

u20c50

AR\IAR

brave\AR

not brave

IAR

AR\IAR

brave\AR

not brave

19
887
0
0
0
0
0
0
116
0
7
345
169
0
0
0
0
0
0
0

13,747
2,087
87
80,839
10
342
149
0
741
7
236
350
351
159
515
17,532
1
1,871
0
50

0
0
0
0
0
0
0
0
5
0
0
0
0
0
0
0
0
0
0
0

187,504
127,098
0
0
0
0
0
0
21,462
0
10,329
5,395
21,471
1,007
54
585
0
34,795
0
0

758
23,819
0
0
0
0
0
0
267
0
267
991
4,185
0
0
0
0
0
0
0

356,922
52,117
87
2,114,007
10
342
149
32
21,419
66
6,373
8,769
9,430
3,944
13,946
467,964
39
48,770
20
50

0
0
0
0
0
0
0
0
156
0
0
0
0
0
0
0
0
0
0
0

IAR

20,029
7,215
85
78,101
10
235
136
0
1,291
0
534
1,180
1,069
191
405
13,545
0
3,107
0
50

IAR

6,646
4,728
0
4,806
0
0
0
0
783
0
385
802
783
36
0
0
0
1,319
0
0

q1
q2
q3
q4
q5
q6
q7
q8
q9
q10
q11
q12
q13
q14
q15
q16
q17
q18
q19
q20

q1
q2
q3
q4
q5
q6
q7
q8
q9
q10
q11
q12
q13
q14
q15
q16
q17
q18
q19
q20

Table 6: Number of answers in the different classes. CQAPri benchmark with optimal repairs for a score-structured priority relation.

Triv.

IAR\Triv.

u1c1
AR\IAR

brave\AR

not brave

Triv.

IAR\Triv.

u20c1
AR\IAR

brave\AR

not brave

q1 20,159
q2
7,237
q3
85
q4 81,691
q5
10
q6
235
q7
137
q8
0
q9
1,319
q10
3
q11
538
q12 1,193
q13 1,075
q14
192
q15
462
q16 14,865
q17
1
q18 3,156
q19
0
q20
50

103
0
0
1,087
0
0
0
0
49
0
0
0
1
3
45
2,542
0
1
0
0

0
0
0
0
0
0
0
0
0
0
0
2
0
0
0
0
0
0
0
0

147
4
0
735
0
0
0
0
1
0
0
0
1
0
0
120
0
6
0
0

0
6
0
224
0
0
0
0
5
0
0
6
3
0
0
5
0
10
0
0

537,616
189,730
85
1,458,368
10
235
109
26
34,046
46
14,418
7,324
28,997
4,832
12,710
413,167
29
82,605
1
50

4,842
271
0
411,269
0
0
23
5
1,546
12
2
0
26
84
716
40,759
8
193
0
0

Triv.

IAR\Triv.

u1c50
AR\IAR

brave\AR

not brave

Triv.

IAR\Triv.

q1 10,886
q2
6,103
q3
0
q4 11,611
q5
0
q6
134
q7
0
q8
0
q9
1,014
q10
3
q11
522
q12 1,087
q13 1,030
q14
52
q15
41
q16
237
q17
0
q18 2,237
q19
0
q20
0

4,779
692
0
25,893
6
83
0
0
105
0
7
6
42
80
59
1,914
1
424
0
0

0
186
0
0
0
11
0
0
34
0
0
88
38
0
0
0
0
0
0
0

4,607
477
86
32,274
4
53
137
0
338
3
62
85
82
55
410
15,121
0
432
0
50

140
244
1
15,867
0
61
12
0
154
1
37
231
111
8
5
260
0
97
0
0

299,662
164,305
0
449
0
134
0
0
26,100
0
14,132
6,192
27,831
1,684
1,368
5,484
0
59,929
0
0

132,026
16,077
0
13,847
6
83
0
0
2,014
0
201
25
1,173
1,798
2,907
100,709
0
8,935
1
0

0
35
0
0
0
0
0
0
20
0
0
39
13
0
0
0
0
0
0
0

2,597
192
0
195,919
0
0
5
0
490
0
25
41
30
31
321
13,457
0
265
0
0

52
205
0
2,230
0
0
0
0
110
0
31
147
93
4
5
1,166
0
39
0
0

u20c50
AR\IAR

39
4,181
0

0
11
0
0
138
0
11
820
769
0
0
0
0
3
0
0

brave\AR

not brave

109,776
11,362
86

4
53
143
32
11,020
62
1,477
2,583
2,048
1,314
9,529

34
12,431
9
50

3,681
7,109
1

0
61
6
0
4,032
4
1,148
5,535
3,265
155
196

5
2,267
10
0

Table 7: Number of answers in the different classes. CQAPri benchmark with a non score-structured priority relation. Pareto-optimal repairs.

Triv.

IAR\Triv.

u1c1
AR\IAR

brave\AR

not brave

Triv.

IAR\Triv.

u20c1
AR\IAR

brave\AR

not brave

q1 20,187
q2
7,242
q3
85
q4 78,477
q5
10
q6
235
q7
137
q8
0
q9
1,319
q10
1
q11
537
q12 1,190
q13 1,073
q14
192
q15
453
q16 13,921
q17
0
q18 3,168
q19
0
q20
50

222
0
0
3,282
0
0
0
0
49
2
0
1
1
3
54
3,606
1
0
0
0

0
0
0
0
0
0
0
0
0
0
0
4
0
0
0
0
0
0
0
0

0
0
0
1,978
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

0
5
0
0
0
0
0
0
6
0
1
6
6
0
0
5
0
5
0
0

537,105
189,733
85
1,298,399
10
235
99
10
33,718
16
14,438
7,377
29,003
4,826
12,551
402,433
31
82,727
0
50

7,905
446
0
766,010
0
0
38
21
2,354
42
1
0
33
121
1,194
64,516
6
332
0
0

Triv.

IAR\Triv.

u1c50
AR\IAR

brave\AR

not brave

Triv.

IAR\Triv.

q1 10,482
q2
6,128
q3
0
q4
9,288
q5
4
q6
49
q7
2
q8
0
q9
988
q10
1
q11
543
q12 1,046
q13 1,012
q14
48
q15
27
q16
37
q17
0
q18 2,422
q19
0
q20
0

9,695
1,121
84
48,626
6
207
117
0
356
2
21
44
86
141
478
16,994
1
641
0
50

0
60
0
0
0
0
2
0
22
0
0
104
23
0
0
0
0
0
0
0

198
97
3
21,468
0
17
22
0
109
0
21
5
38
4
3
428
0
84
0
0

37
296
0
6,263
0
69
6
0
170
4
43
298
144
2
7
73
0
43
0
0

288,373
165,408
0

4
49
0
0
26,426
0
14,782
6,217
27,816
1,461
599
1,355
0
63,922
0
0

6
207

32

59

25

3
50

0
16
0
0
0
0
0
0
10
0
0
0
8
0
0
0
0
0
0
0

u20c50
AR\IAR

248,874
27,035
84

0
0
132
0
10,695
0
506
1,186
2,445
3,307
13,106
441,157
0
16,879
0
0

89
51
0
2,861
0
0
0
0
26
0
7
2
21
4
1
1,532
0
25
0
0

8
187
0
516
0
0
0
0
104
0
30
172
94
0
6
68
0
18
1
0

brave\AR

not brave

6,865
2,465
3

0
17
12
0
1,533
0
400
207
945
144
68

11
1,922
2
0

1,072
8,126
0

0
69
5
0
4,650
7
1,281
7,545
3,880
39
227

3
842
15
0

Table 8: Number of answers in the different classes. CQAPri benchmark with a non score-structured priority relation. Completion-optimal
repairs.

Triv.

IAR\Triv.

u1c1
AR\IAR

brave\AR

not brave

Triv.

IAR\Triv.

u20c1
AR\IAR

brave\AR

not brave

q2
7,242
q3
85
q5
10
q6
235
q7
137
q8
0
q10
1
q11
537
q13 1,073
q14
192
q18 3,168
q19
0
q20
50

0
0
0
0
0
0
2
0
1
3
0
0
0

0
0
0
0
0
0
0
0
0
0
0
0
0

u1c50

0
0
0
0
0
0
0
0
0
0
0
0
0

5
0
0
0
0
0
0
1
6
0
5
0
0

85
10
235

10

14,438

0
50

0
0
0

21

1

0
0

0
0
0

0

0

0
0

0
0
0

0

7

0
0

0
0
0

0

30

1
0

u20c50
AR\IAR

brave\AR

not brave

Triv.

IAR\Triv.

AR\IAR

brave\AR

not brave

Triv.

IAR\Triv.

q8
q10
q19

0
1
0

0
2
0

0

0

0

0

0

0

Table 9: Number of answers in the different classes. Food Inspection dataset without priority relation.

IAR

306
4
24,842
14,371
177

AR\IAR

brave\AR

not brave

126
7
109
478
0

18
41
7,046
2,077
885

0
0
0
0
0

Table 10: Number of answers in the different classes. Food Inspection dataset with score-structured priorities.

Triv.

343
8
25,723
14,944
280

Triv.

383
15
26,367
15,376
331

(a) Score-structured priority relation (n = 2). Optimal repairs.

IAR\Triv.

AR\IAR

brave\AR

not brave

1
0
142
36
1

92
7
60
317
0

8
30
4,256
1,101
502

6
7
1,816
528
279

(b) Score-structured priority relation (n = 5). Optimal repairs.

IAR\Triv.

AR\IAR

brave\AR

not brave

2
0
239
58
1

51
5
27
182
0

4
18
2,098
472
233

10
14
3,266
838
497

q2
q3
q4
q5
q6

q2
q3
q4
q5
q6

q2
q3
q4
q5
q6

Table 11: Number of answers in the different classes. Food Inspection dataset with non score-structured priorities. In the case of completion-
optimal repairs (both for p = 0.5 and p = 0.8), all queries run out of time or memory.

(a) Priority relation not score-structured (p = 0.5). Pareto-optimal repairs.

Triv.

335
6
25,649
14,919
274

Triv.

357
11
26,170
15,262
306

IAR\Triv.

AR\IAR

brave\AR

not brave

14
1
353
131
13

86
11
60
340
0

11
23
3,517
864
326

4
11
2,418
672
449

(b) Priority relation not score-structured (p = 0.8). Pareto-optimal repairs.

IAR\Triv.

AR\IAR

brave\AR

not brave

38
8
570
231
31

46
6
23
167
0

3
10
1,868
388
172

6
17
3,366
878
553

Table 12: Number of answers in the different classes. Physicians dataset without priority relation.

IAR

1,655
290
16,827
326,021
3,056
144,731

AR\IAR

7
20
854
9
114
24,345

brave\AR

not brave

77
7
16
6,371
18
946

0
0
0
12
0
0

Table 13: Number of answers in the different classes. Physicians dataset with score-structured priorities.

(a) Score-structured priority relation (n = 2). Optimal repairs.

Triv.

1,668
300
17,239
326,380
3,109
156,267

Triv.

1,679
311
17,506
327,641
3,145
163,722

IAR\Triv.

AR\IAR

brave\AR

not brave

0
0
2
494
0
2

7
11
445
85
65
12,877

48
5
9
4,900
12
876

16
1
2
554
2
0

(b) Score-structured priority relation (n = 5). Optimal repairs.

IAR\Triv.

AR\IAR

brave\AR

not brave

1
0
2
861
0
113

7
3
181
85
39
5,545

29
3
5
2,630
0
498

23
0
3
1,196
4
144

q2
q3
q4
q5
q6

q2
q3
q4
q5
q6

q1
q2
q3
q4
q5
q6

q1
q2
q3
q4
q5
q6

q1
q2
q3
q4
q5
q6

Table 14: Number of answers in the different classes. Physicians dataset with non score-structured priorities.

(a) Priority relation not score-structured (p = 0.5). Pareto-optimal repairs.

Triv.

1,671
303
17,257
326,973
3,111
156,422

Triv.

1,671
303
17,257
326,973
3,111
156,422

Triv.

1,680
305
17,503
326,823
3,154
163,563

Triv.

1,680
305
17,503
326,823
3,154
163,563

IAR\Triv.

AR\IAR

brave\AR

not brave

1
0
19
1,134
0
797

7
10
412
85
59
12,013

45
1
5
3,643
10
671

15
3
4
578
8
119

(b) Priority relation not score-structured (p = 0.5). Completion-optimal repairs.

IAR\Triv.

AR\IAR

brave\AR

not brave

23
0
19

0
1,277

0
10
412

59

30
1
5

10

15
3
4

8

(c) Priority relation not score-structured (p = 0.8). Pareto-optimal repairs.

IAR\Triv.

AR\IAR

brave\AR

not brave

5
0
32
874
1
1,009

7
7
158
85
27
4,778

25
1
2
3,505
4
661

22
4
2
1,126
2
11

(d) Priority relation not score-structured (p = 0.8). Completion-optimal repairs.

IAR\Triv.

AR\IAR

brave\AR

not brave

24
0
32

1
1,358

0
7
158

27

13
1
2

4

22
4
2

2

q1
q2
q3
q4
q5
q6

q1
q2
q3
q4
q5
q6

q1
q2
q3
q4
q5
q6

q1
q2
q3
q4
q5
q6

E.2 Running Times of All Algorithms and Encodings for Each Semantics
We present for all semantics the total query answers ﬁltering times for each possible combination of algorithm and encoding.
These times include the time needed to handle the self-inconsistent facts, the answers that are trivially IAR, and ﬁlter the
remaining answers with the considered algorithm and encoding. For each dataset and query, the best time is written in bold red
and the ‘close to best times’, i.e., times that are not longer than the best time by more than 50ms or by more than 10% of the
best time, are highlighted with a grey background.

For the CQAPri benchmark, we present the results for the four datasets u1c1, u1c50, u20c1 and u20c50, which have the

smallest and biggest sizes and smallest and highest proportion of facts involved in some conﬂict.

Table 15: Query answers ﬁltering time in milliseconds: (plain) AR semantics on u1c1.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

q1

228
271

147
155

136
140

451
572

q11

43
34

64
60

50
50

53
60

q2

78
60

78
75

100
91

96
94

q12

74
79

158
149

307
309

166
144

q3

27
26

7
7

34
50

41
36

q4

755
909

293
287

233
242

7,716
9,592

q5

24
25

7
6

41
48

39
33

q13

q14

q15

50
46

66
61

54
68

70
75

39
41

49
57

49
43

52
54

91
98

56
60

49
61

142
146

q6

30
28

8
8

40
42

39
34

q16

738
914

271
283

213
216

4,920
11,845

q7

30
31

44
51

43
51

48
47

q8

25
27

7
6

42
40

36
38

q17

q18

37
37

47
48

48
47

47
48

95
97

78
67

72
68

138
144

q9

95
100

79
73

71
94

139
160

q19

24
24

8
7

39
38

41
34

q10

36
37

45
47

45
49

46
45

q20

27
25

7
7

42
42

32
37

Table 16: Query answers ﬁltering time in milliseconds: (plain) AR semantics on u1c50.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

q1

2,605
2,522

974
1,386

867
1,250

77,447
300,730

q11

214
226

539
1,155

11,596
18,641

808
1,067

q2

913
953

1,511
1,188

3,270
2,843

5,606
8,504

q12

531
560

t.o
t.o

t.o
t.o

2,865
4,461

q3

178
193

91
74

67
76

189
241

q13

320
323

19,154
23,946

t.o
t.o

1,609
1,697

q4

4,548
4,793

2,709
2,510

878
882

t.o
t.o

q14

142
160

90
121

71
94

313
394

q5

79
88

83
79

80
79

123
99

q15

387
396

239
196

192
193

q6

250
278

124
116

104
93

493
684

q16

2,656
3,034

896
920

637
844

1,300
1,484

116,559
456,847

q7

165
183

90
85

83
82

258
285

q17

43
47

65
63

58
68

67
56

q8

37
36

18
18

43
64

53
46

q18

511
591

252
255

196
245

2,980
6,725

q9

504
566

1,235
1,649

29,949
41,478

2,098
2,956

q19

37
36

20
18

60
52

58
60

Table 17: Query answers ﬁltering time in milliseconds: (plain) AR semantics on u20c1.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

q1

2,090
2,200

955
911

647
739

q2

505
558

602
501

980
856

53,813
146,586

1,543
2,839

q11

189
188

184
252

906
1,672

368
589

q12

550
587

t.o
t.o

t.o
t.o

4,490
8,260

q3

79
71

36
35

95
101

88
90

q13

240
220

752
838

6,948
7,521

876
1,166

q4

53,688
59,519

288,261
235,175

6,112
6,232

t.o
t.o

q14

132
159

137
97

83
110

293
455

q5

69
81

35
30

95
83

97
84

q15

500
501

285
256

605
629

2,388
3,675

q6

65
84

34
29

84
109

76
72

q16

4,590
5,354

3,502
3,530

1,513
1,738

t.o
t.o

q7

132
121

98
108

105
104

147
155

q17

85
109

101
112

111
91

110
93

q8

123
121

104
100

97
113

136
131

q18

471
564

336
329

259
323

1,574
3,520

q9

620
733

594
634

3,696
4,600

4,174
10,740

q19

98
97

79
105

92
114

111
80

q10

61
59

70
70

62
65

88
80

q20

84
101

75
69

68
79

109
137

q10

125
133

107
117

106
118

142
173

q20

71
60

38
30

106
98

94
64

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

q1

34,866
36,415

t.o
t.o

t.o
t.o

t.o
t.o

q11

t.o
t.o

1,559
1,597

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
73,709
Alg. 7 neg2 327,984

t.o
t.o

Table 18: Query answers ﬁltering time in milliseconds: (plain) AR semantics on u20c50.

q2

6,473
6,946

1,040,239
554,352

t.o
t.o

t.o
t.o

q12

5,735
5,121

t.o
t.o

t.o
t.o

q3

334
348

276
253

312
300

360
378

q13

2,540
2,857

t.o
t.o

t.o
t.o

q4

277,664
303,411

1,177,335
1,167,052

34,194
15,615

t.o
t.o

q14

889
936

402
1,181

412
1,376

q5

276
267

277
298

211
257

238
322

q15

2,576
3,041

5,710
2,952

2,672
2,381

1,176,227
t.o

408,030
1,052,128

9,823
33,662

246,012
630,454

q6

503
420

284
259

278
318

502
849

q16

45,137
53,759

66,620
81,054

8,144
22,825

t.o
t.o

q7

441
447

331
335

311
390

602
858

q17

330
363

338
318

363
342

329
579

q8

346
281

256
320

205
304

251
300

q9

5,324
5,673

t.o
t.o

t.o
t.o

685,691
t.o

q18

3,841
4,554

t.o
t.o

t.o
t.o

1,585,931
t.o

q19

334
428

347
482

327
382

382
813

q10

349
417

307
248

277
287

327
426

q20

231
245

282
200

191
253

250
284

Table 19: Query answers ﬁltering time in milliseconds: (plain) AR semantics on Food Inspection dataset.

q2

969
409

1,402
595

1,372
882

1,378
440

q3

407
403

458
420

394
424

589
537

q4

16,463
15,259

t.o
t.o

t.o
t.o

218,190
38,351

q5

5,513
4,588

t.o
t.o

t.o
t.o

32,251
8,456

Table 20: Query answers ﬁltering time in milliseconds: (plain) AR semantics on Physicians dataset.

q1

456
439

385
345

358
287

470
432

q2

175
166

199
206

235
231

213
195

q3

339
288

1,377
1,277

2,547
3,029

723
630

q4

2,890
3,093

37,278
2,628

t.o
t.o

18,381
17,302

q5

240
235

305
311

405
398

267
276

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

q6

13,390
4,202

t.o
t.o

t.o
t.o

239,364
5,535

q6

2,077
1,583

658,386
306,263

t.o
t.o

68,797
46,870

Table 21: Query answers ﬁltering time in milliseconds: X-AR semantics (X ∈ {P,C}) on u1c1, score-structured priority, n = 5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2

q1

270
279
193
568
t.o
t.o

156
151
131
230
t.o
t.o

252
303
232
322
t.o
t.o

637
689
299
722
t.o
t.o

q11

29
27
31
29
41
38

11
8
10
8
10
9

42
70
47
45
48
46

46
41
44
46
40
39

q2

64
57
67
60
85
87

83
65
70
71
76
87

66
86
63
62
85
80

84
92
71
73
90
109

q12

74
79
135
148
oom
oom

109
85
170
175
t.o
t.o

116
122
178
145
t.o
t.o

123
126
195
154
t.o
t.o

q3

30
28
25
27
37
30

8
7
7
8
7
8

43
61
37
37
45
44

45
41
40
33
36
33

q13

54
55
50
45
75
67

67
69
57
60
94
86

74
89
53
59
83
108

61
68
63
61
84
97

q4

446
508
385
494
3,167
3,134

273
256
260
245
1,412
1,687

1,787
2,298
1,925
1,796
3,181
3,361

1,734
2,005
1,552
1,555
4,611
5,737

q14

39
35
33
39
110
104

55
50
52
47
335
385

57
66
50
50
333
398

51
56
53
44
307
366

q5

29
33
29
28
34
30

8
7
7
7
7
6

45
53
38
34
38
37

45
43
46
39
42
35

q15

120
113
58
303
oom
oom

88
83
63
158
t.o
t.o

146
164
113
160
t.o
t.o

148
156
75
143
t.o
t.o

q6

32
28
26
25
38
32

8
10
7
8
12
9

41
52
41
34
41
44

52
44
43
39
38
41

q16

1,571
1,711
509
4,895
oom
oom

331
300
276
400
t.o
t.o

6,443
7,851
6,100
6,104
t.o
t.o

2,892
3,929
2,283
3,535
t.o
t.o

q7

29
25
26
27
31
31

7
9
10
7
7
8

38
52
40
37
43
50

42
40
41
42
36
34

q17

27
27
23
24
30
32

7
7
9
8
8
9

36
48
34
37
40
36

45
37
41
35
40
39

q8

26
26
24
25
36
27

7
9
6
7
7
8

40
39
34
33
36
41

42
39
39
35
34
36

q18

66
59
51
63
102
144

68
59
74
68
131
287

78
87
66
87
110
233

106
113
85
96
160
313

q9

150
170
76
514
oom
oom

107
116
86
170
t.o
t.o

145
184
126
204
t.o
t.o

195
200
74
200
t.o
t.o

q10

22
28
26
27
32
26

6
8
7
6
7
9

38
43
39
36
36
36

40
39
36
37
31
35

q19

q20

26
28
22
23
30
28

8
6
9
8
7
6

44
42
36
31
39
41

37
39
36
32
34
35

26
26
24
26
36
27

9
7
7
7
7
7

41
44
34
36
36
37

46
39
36
33
38
32

Table 22: Query answers ﬁltering time in milliseconds: X-AR semantics (X ∈ {P,C}) on u1c50, score-structured priority, n = 5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2

q1

8,868
9,143
16,260
79,221
oom
oom

1,109
1,205
1,222
2,232
oom
oom

43,440
45,444
29,576
29,162
oom
oom

58,559
143,067
35,062
98,777
oom
oom

q11

234
244
426
688
oom
t.o

276
280
597
822
oom
oom

588
780
690
1,016
oom
oom

880
799
963
1,244
oom
oom

q2

2,060
2,031
3,413
9,828
oom
t.o

742
709
1,168
1,757
oom
oom

2,011
2,496
2,170
2,689
oom
oom

6,059
6,315
4,358
5,610
oom
oom

q12

759
760
2,587
2,686
oom
t.o

10,055
14,871
7,614
28,159
oom
oom

849,993
1,257,103
569,350
796,341
oom
oom

3,287
3,095
4,166
3,537
oom
oom

q3

699
674
1,249
3,460
t.o
t.o

136
132
155
355
t.o
t.o

100
136
128
349
t.o
t.o

408
351
332
725
t.o
t.o

q13

433
436
906
1,392
oom
oom

536
533
1,021
1,565
oom
oom

1,620
2,019
1,612
2,255
oom
oom

2,068
1,916
1,786
2,103
oom
oom

q4

20,148
20,402
95,110
152,854
oom
oom

4,914
4,674
5,304
5,304
oom
oom

t.o
t.o
t.o
t.o
oom
oom

1,372,332
1,459,204
1,496,300
1,275,254
oom
oom

q14

246
264
461
705
t.o
t.o

282
243
388
781
oom
oom

263
587
367
884
oom
oom

820
815
716
1,221
oom
oom

q5

113
119
91
428
oom
oom

113
115
86
227
oom
oom

103
123
81
176
oom
t.o

120
99
94
162
t.o
oom

q6

572
501
257
1,238
t.o
t.o

135
125
114
189
t.o
t.o

214
261
191
255
t.o
t.o

457
404
254
464
t.o
t.o

q15

1,417
1,446
2,378
6,735
oom
t.o

370
377
634
1,430
oom
oom

379
461
551
1,241
oom
oom

2,893
2,604
2,043
3,286
oom
oom

q16

26,740
27,292
55,350
314,744
t.o
t.o

2,070
1,539
1,889
2,603
oom
oom

6,721
8,456
6,117
6,966
oom
oom

153,349
250,488
195,067
312,519
oom
oom

q7

720
678
639
2,185
t.o
t.o

129
130
466
448
t.o
t.o

122
164
413
397
t.o
t.o

800
633
972
1,045
t.o
t.o

q17

54
59
46
72
208,624
302,051

75
80
72
105
225,144
245,266

74
93
84
72
242,734
295,463

87
75
61
73
221,715
252,441

q8

34
37
32
33
43
41

17
19
17
15
22
22

55
59
49
58
71
62

55
49
55
51
61
65

q18

943
994
1,688
3,227
oom
oom

467
448
870
1,437
oom
oom

865
1,164
1,185
1,657
oom
oom

3,606
4,009
2,831
4,258
oom
oom

q9

1,774
1,752
3,098
9,062
oom
t.o

686
651
1,133
1,903
oom
oom

1,335
1,652
1,429
2,222
oom
oom

3,437
3,623
3,063
3,833
oom
oom

q19

35
37
35
34
44
39

18
18
16
15
20
22

56
73
48
44
67
62

57
54
44
56
48
69

q10

99
91
97
344
oom
oom

122
109
128
306
t.o
t.o

94
121
119
306
t.o
t.o

132
106
127
330
t.o
t.o

q20

355
348
672
1,085
t.o
t.o

110
107
129
206
t.o
t.o

94
105
128
171
t.o
t.o

224
162
226
335
t.o
t.o

Table 23: Query answers ﬁltering time in milliseconds: X-AR semantics (X ∈ {P,C}) on u20c1, score-structured priority, n = 5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2

q1

1,571
1,612
1,135
2,248
oom
oom

1,221
1,169
868
1,371
oom
oom

77,235
191,821
28,737
29,456
oom
oom

32,684
46,143
12,478
31,719
oom
oom

q11

131
137
131
149
21,857
31,347

143
131
137
152
t.o
t.o

139
187
134
167
t.o
t.o

243
218
190
241
t.o
t.o

q2

463
494
415
707
oom
oom

464
437
383
562
oom
oom

714
887
622
845
oom
oom

1,841
2,198
955
2,290
oom
oom

q12

356
368
634
696
oom
oom

1,847
5,025
2,847
5,360
oom
oom

176,556
344,497
139,278
219,025
oom
oom

2,144
2,475
2,281
2,224
oom
oom

q3

43
41
42
40
42
47

23
22
23
20
25
25

62
82
50
58
61
54

61
59
60
53
57
57

q13

238
243
266
313
oom
t.o

284
270
316
389
oom
oom

374
409
336
439
oom
oom

753
728
628
879
oom
oom

q4

37,391
38,825
21,483
55,785
oom
oom

237,134
230,878
235,638
218,482
oom
oom

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

q14

144
153
126
191
oom
oom

193
171
132
235
t.o
t.o

238
268
196
269
t.o
t.o

420
419
179
440
t.o
t.o

q5

42
44
39
38
38
48

23
22
21
19
23
21

63
75
52
52
48
61

69
47
58
61
44
55

q15

925
923
455
2,303
oom
oom

517
528
355
1,145
oom
oom

2,767
3,079
1,892
2,462
oom
oom

3,755
3,548
1,348
3,036
oom
oom

q6

42
41
39
40
42
51

25
21
22
21
24
25

60
76
61
67
65
66

71
55
52
58
60
61

q7

75
85
74
92
12,005
14,303

143
123
101
118
t.o
t.o

144
170
115
155
t.o
t.o

173
130
90
143
t.o
t.o

q8

57
66
49
53
10,067
13,051

85
76
63
66
2,419
2,458

90
97
68
79
2,448
2,536

81
72
75
68
2,339
2,325

q16

12,944
14,841
4,396
oom
oom
oom

3,965
4,082
3,775
4,880
oom
oom

t.o
t.o
t.o
t.o
oom
oom

876,125
t.o
915,776
1,450,000
oom
oom

q17

62
76
50
90
165,405
217,703

107
95
67
113
t.o
t.o

116
137
82
125
t.o
t.o

106
97
81
85
t.o
t.o

q18

389
445
338
454
oom
oom

356
386
308
541
oom
oom

504
640
452
673
oom
oom

1,454
1,627
592
1,770
oom
oom

q9

1,037
1,140
576
2,365
oom
oom

834
825
480
1,360
oom
oom

6,587
7,755
5,263
6,224
oom
oom

8,909
9,852
2,847
8,199
oom
oom

q19

39
40
39
39
39
47

22
23
21
18
23
25

67
64
53
52
74
61

62
59
57
47
55
60

q10

64
76
53
104
oom
oom

97
99
84
96
oom
oom

114
133
88
116
oom
oom

94
72
73
83
oom
t.o

q20

41
42
40
37
41
51

24
24
22
20
23
24

62
87
53
55
58
70

66
52
53
54
64
59

Table 24: Query answers ﬁltering time in milliseconds: X-AR semantics (X ∈ {P,C}) on u20c50, score-structured priority, n = 5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2

q1

t.o
t.o
t.o
t.o
t.o
t.o

135,263
208,831
119,041
oom
oom
oom

t.o
t.o
t.o
oom
oom
oom

t.o
t.o
t.o
t.o
oom
oom

q2

232,386
224,840
949,967
1,045,755
t.o
t.o

84,826
50,469
65,627
75,688
oom
oom

t.o
t.o
1,456,350
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

q11

q12

t.o
t.o
t.o
t.o
oom
oom

10,004
10,069
34,912
35,362
t.o
t.o

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
t.o
P1 Alg. 7 neg2
t.o
P2 Alg. 7 neg1 421,418
P2 Alg. 7 neg2
t.o
C Alg. 7 neg1
oom
C Alg. 7 neg2
oom

t.o
t.o
t.o
t.o
oom
oom

71,135
62,227
323,386
284,407
oom
oom

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

q3

2,622
2,672
7,942
9,208
oom
oom

456
379
966
1,050
oom
oom

473
567
920
1,044
oom
oom

1,413
1,381
1,622
1,955
oom
oom

q13

21,990
21,038
84,726
84,111
t.o
t.o

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

q4

t.o
t.o
t.o
t.o
t.o
t.o

oom
oom
oom
oom
oom
oom

t.o
t.o
oom
oom
oom
oom

t.o
t.o
oom
oom
oom
oom

q14

5,822
5,830
19,074
20,755
t.o
t.o

11,765
27,760
12,102
30,375
oom
oom

12,264
26,817
13,337
27,898
oom
oom

t.o
t.o
1,158,730
t.o
oom
oom

1,131,285
1,280,546
180,396
333,613
oom
oom

q5

846
863
1,819
1,915
t.o
t.o

1,155
1,109
2,025
2,229
oom
oom

1,009
1,342
1,671
1,842
oom
oom

1,776
1,216
1,997
2,113
oom
oom

q6

4,772
4,919
15,963
16,437
t.o
t.o

434
504
942
1,000
oom
oom

502
520
893
885
oom
oom

1,676
1,482
1,845
1,782
oom
oom

q7

2,602
2,453
5,375
6,940
oom
oom

2,060
1,909
3,484
3,700
oom
oom

2,306
2,394
3,429
3,663
oom
oom

48,832
50,517
9,461
8,761
oom
oom

q8

713
718
1,862
1,834
oom
oom

369
364
828
816
oom
oom

374
398
828
833
oom
oom

957
738
1,323
1,382
oom
oom

q15

q16

113,593
115,590
508,810
586,030
oom
oom

20,432
18,523
37,935
65,737
oom
oom

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
t.o
t.o

180,360
214,750
225,307
oom
oom
oom

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

q17

2,696
2,551
7,194
7,555
oom
oom

1,942
2,047
3,796
4,007
oom
oom

2,378
2,305
3,813
3,955
oom
oom

7,789
9,301
6,407
6,290
oom
oom

q18

86,121
88,288
359,410
391,599
t.o
t.o

23,016
46,767
30,600
123,690
oom
oom

t.o
t.o
1,193,422
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

q9

370,340
365,374
t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

q19

2,460
2,378
6,188
6,410
oom
oom

2,806
2,626
5,439
6,334
oom
oom

2,936
2,884
4,357
5,251
oom
oom

4,815
4,945
5,572
5,780
oom
oom

q10

1,983
1,901
4,932
5,638
t.o
t.o

1,043
1,275
2,180
2,397
oom
oom

1,202
1,408
2,203
2,369
oom
oom

4,525
4,115
3,769
3,922
oom
oom

q20

1,762
1,702
4,470
4,399
oom
oom

332
287
763
744
oom
oom

369
336
738
714
oom
oom

846
772
1,172
1,182
oom
oom

Table 25: Query answers ﬁltering time in milliseconds: X-AR semantics (X ∈ {P,C}) on Food Inspection dataset, score-structured priority,
n = 2.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2

q2

1,523
881
14,877
9,910
t.o
t.o

1,419
920
7,070
5,969
t.o
t.o

1,531
1,068
6,085
5,899
t.o
t.o

1,440
896
5,673
4,469
t.o
t.o

q3

976
989
11,802
11,627
t.o
t.o

687
714
5,223
5,380
t.o
t.o

613
621
4,214
4,071
t.o
t.o

933
794
4,951
4,705
t.o
t.o

q4

43,990
42,675
1,428,517
1,423,233
t.o
t.o

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

62,720
47,842
223,571
51,705
oom
oom

q5

14,466
13,671
426,874
410,779
t.o
t.o

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

21,301
13,726
45,256
11,398
oom
oom

q6

22,157
12,943
376,546
354,340
t.o
t.o

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

22,077
10,093
223,553
10,757
oom
oom

Table 26: Query answers ﬁltering time in milliseconds: X-AR semantics (X ∈ {P,C}) on Food Inspection dataset, score-structured priority,
n = 5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2

q2

709
359
2,667
1,823
oom
t.o

787
517
2,398
1,741
t.o
t.o

830
499
2,326
1,607
t.o
t.o

769
471
1,991
1,740
t.o
t.o

q3

382
365
1,628
1,602
oom
oom

361
369
1,613
1,593
t.o
t.o

366
346
1,408
1,345
t.o
t.o

483
445
1,668
1,697
t.o
t.o

q4

12,281
11,220
240,218
229,538
t.o
t.o

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

216,367
35,624
178,637
32,044
oom
oom

q5

5,119
4,785
77,674
80,666
oom
t.o

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

9,942
7,633
33,492
7,143
oom
oom

q6

10,314
4,149
76,365
67,141
oom
oom

t.o
t.o
t.o
t.o
oom
oom

t.o
t.o
t.o
t.o
oom
oom

13,426
4,480
121,658
5,058
oom
oom

Table 27: Query answers ﬁltering time in milliseconds: X-AR semantics (X ∈ {P,C}) on Physicians dataset, score-structured priority, n = 2.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2

q1

480
490
788
1,086
256,503
251,566

363
323
748
677
oom
oom

295
289
684
576
oom
oom

488
403
940
766
oom
oom

q2

135
134
140
144
150
151

170
148
153
157
614
693

186
195
183
176
607
647

147
150
145
166
593
651

q3

249
247
300
254
477
426

678
685
660
734
t.o
t.o

1,096
1,127
1,160
1,208
t.o
t.o

414
345
385
394
t.o
t.o

q4

13,802
13,604
328,808
340,667
oom
oom

2,539
2,216
14,360
3,922
t.o
t.o

t.o
t.o
t.o
t.o
t.o
t.o

18,255
17,846
24,145
18,303
t.o
t.o

q5

213
224
198
205
238
245

211
213
236
223
576
592

274
302
294
283
576
608

237
224
236
250
608
667

q6

3,719
2,922
7,138
12,025
t.o
t.o

100,090
81,293
136,895
83,055
t.o
oom

t.o
t.o
t.o
t.o
t.o
oom

18,758
15,899
21,382
14,626
t.o
oom

Table 28: Query answers ﬁltering time in milliseconds: X-AR semantics (X ∈ {P,C}) on Physicians dataset, score-structured priority, n = 5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2

q1

585
513
567
759
153,124
145,579

416
368
625
599
oom
oom

388
327
509
472
oom
oom

362
347
732
603
oom
oom

q2

160
145
114
119
118
120

181
166
166
131
186
224

201
188
133
166
177
180

128
126
122
122
171
222

q3

273
254
209
185
305
265

467
488
351
352
oom
oom

701
712
512
511
oom
oom

259
248
277
265
oom
oom

q4

12,515
12,915
232,725
244,470
oom
oom

2,016
1,793
5,334
2,644
t.o
t.o

1,367,311
1,184,318
1,174,805
1,283,176
t.o
t.o

11,186
10,735
18,663
14,317
t.o
t.o

q5

244
268
174
164
207
175

277
251
186
192
326
372

300
258
254
232
310
361

168
199
176
219
305
340

q6

2,972
2,488
3,385
5,417
t.o
t.o

17,651
16,851
15,280
13,139
t.o
t.o

t.o
t.o
t.o
t.o
t.o
t.o

6,132
5,850
7,105
5,719
t.o
t.o

Table 29: Query answers ﬁltering time in milliseconds: P-AR semantics on u1c1, non score-structured priority, p = 0.8.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2

q1

213
210
129
858

159
165
112
255

453
501
428
530

386
376
210
477

q11

40
51
49
70

69
76
61
57

60
68
60
73

49
49
61
67

q2

71
48
69
74

85
88
63
62

65
74
73
63

70
74
71
91

q12

79
76
279
299

110
114
242
259

151
145
243
218

122
99
242
255

q3

28
29
38
33

10
8
8
8

35
51
45
44

40
36
41
45

q4

776
818
750
1,428

461
441
401
502

12,268
13,638
12,086
12,266

4,830
5,067
4,495
5,947

q13

q14

49
56
69
63

69
70
78
71

78
76
64
74

74
69
73
78

34
34
41
50

60
56
46
52

71
61
51
58

46
42
45
54

q5

28
25
39
36

8
9
7
7

45
45
36
37

38
44
44
48

q15

144
136
83
508

105
103
64
191

184
175
122
236

147
141
70
243

q6

28
31
40
38

13
9
8
9

53
49
51
42

43
36
44
42

q16

1,888
2,266
990
15,825

380
415
317
547

15,568
15,916
13,854
15,748

4,015
4,628
3,322
5,052

q7

28
25
33
29

12
9
7
8

44
39
40
42

33
34
33
50

q8

29
25
35
32

8
8
6
9

42
38
37
44

36
37
35
44

q9

155
169
97
774

108
122
81
274

166
178
143
250

178
167
86
294

q10

31
31
38
42

52
57
50
47

55
55
52
47

44
41
43
53

q17

q18

q19

q20

40
49
41
90

68
73
51
87

83
73
52
95

58
55
46
88

55
53
58
57

82
73
65
75

75
80
69
67

66
64
77
80

32
29
32
31

8
8
8
7

43
46
42
40

34
35
36
40

31
33
34
30

8
8
8
8

45
43
39
38

31
35
38
40

Table 30: Query answers ﬁltering time in milliseconds: P-AR semantics on u1c50, non score-structured priority, p = 0.8.

q1

q2

P1 Alg. 4 neg1
60,933
P1 Alg. 4 neg2
62,452
P2 Alg. 4 neg1 1,361,393
P2 Alg. 4 neg2 1,584,923
P1 Alg. 5 neg1
1,276
P1 Alg. 5 neg2
1,280
P2 Alg. 5 neg1
3,008
P2 Alg. 5 neg2
3,433
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2

78,122
115,670
37,556
116,207

274,969
310,213
223,266
240,488

7,417
7,289
123,511
138,668

783
719
2,705
2,606

3,109
3,025
4,072
4,065

7,894
8,428
7,337
11,322

q3

2,562
2,646
45,977
51,842

338
348
1,723
1,550

355
369
1,526
1,328

577
584
1,612
2,061

q4

218,876
231,004
t.o
t.o

6,737
6,892
7,952
7,627

t.o
t.o
t.o
t.o

1,659,954
1,612,051
1,720,012
t.o

q5

366
428
1,970
3,050

227
209
1,004
1,028

240
222
1,042
1,048

156
176
1,275
1,447

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2

q11

1,001
963
7,930
8,190

449
440
1,956
2,083

461
464
1,653
1,726

1,236
1,205
2,809
4,587

q12

2,547
2,430
34,094
33,321

1,003
963
3,233
3,054

1,075
1,078
4,922
2,474

4,766
4,691
6,286
12,514

q13

1,447
1,358
12,889
13,186

558
568
2,304
2,423

688
622
2,073
1,921

2,532
2,492
4,784
5,994

q14

1,186
1,228
10,450
12,096

511
516
2,285
2,409

596
558
1,942
1,989

1,365
1,329
2,640
3,180

q15

4,652
4,676
96,278
109,146

491
482
2,441
2,291

1,050
1,063
2,236
2,229

2,332
2,394
3,102
3,494

q6

2,988
3,063
53,810
67,557

281
295
1,130
1,181

521
505
1,172
1,245

1,171
1,172
1,807
2,086

q16

123,085
128,551
t.o
t.o

1,835
1,847
3,507
3,664

1,067,433
1,403,328
972,979
1,276,805

153,774
217,601
133,489
267,095

q7

3,015
3,089
50,327
55,568

388
404
1,841
1,816

480
466
1,706
1,559

1,040
1,019
2,419
2,813

q17

186
194
1,287
1,504

240
228
999
1,213

248
264
1,207
1,190

191
187
1,290
1,460

q8

42
40
40
43

20
19
18
17

65
74
63
58

52
48
60
63

q9

6,459
6,368
135,069
153,395

643
640
2,574
2,583

1,110
1,039
2,578
2,465

4,380
4,414
5,926
7,239

q18

q19

4,275
4,440
65,643
84,708

598
595
2,517
2,476

1,451
1,444
2,753
2,615

4,017
4,242
5,290
5,400

40
40
39
44

20
20
18
18

60
65
63
54

62
45
65
62

q10

415
421
2,781
3,000

308
327
1,501
1,580

308
278
1,377
1,460

265
254
1,801
2,036

q20

1,766
1,769
28,142
30,427

252
239
1,234
1,209

307
276
1,350
1,371

396
395
1,563
1,643

Table 31: Query answers ﬁltering time in milliseconds: P-AR semantics on u20c1, non score-structured priority, p = 0.8.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2

q1

1,674
1,695
1,310
5,005

1,261
1,324
1,060
1,828

234,954
231,997
134,687
241,384

38,823
53,335
15,402
60,433

q11

120
113
160
168

140
134
121
127

158
122
183
127

151
153
230
239

q2

525
502
700
1,318

467
500
471
817

1,140
1,081
1,343
1,246

1,957
2,287
1,643
2,714

q3

43
44
52
54

26
27
22
26

56
76
76
61

71
61
68
77

q4

62,292
63,695
137,880
232,398

386,935
387,647
337,943
335,764

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

q5

52
43
52
55

27
26
24
23

67
68
86
66

69
77
64
82

q6

47
44
55
58

28
28
24
26

72
72
82
72

57
62
67
69

q12

343
339
1,255
1,247

397
376
1,126
927

366
369
1,527
925

1,780
1,782
2,831
3,129

q13

214
192
358
437

243
248
338
539

260
281
417
481

707
693
804
1,377

q14

114
120
139
209

197
198
182
269

323
299
313
365

409
391
200
419

q15

1,154
1,113
1,176
6,023

543
570
421
1,508

3,254
2,910
3,019
2,967

3,803
4,056
1,508
3,841

q16

17,263
21,688
11,488
314,820

5,461
5,374
4,658
6,361

t.o
t.o
t.o
t.o

t.o
t.o
1,670,818
t.o

q7

131
118
174
198

176
175
212
234

199
212
288
246

230
217
226
298

q17

93
102
68
236

145
140
104
221

163
146
140
229

135
111
97
260

q8

73
74
76
137

94
87
92
77

124
129
140
108

78
87
104
127

q18

355
359
491
869

411
403
407
718

708
730
981
997

1,162
1,295
975
1,901

q9

1,290
1,417
1,641
6,455

899
846
615
1,620

19,200
21,383
8,015
9,553

14,526
14,781
3,760
8,250

q19

72
68
77
79

98
102
76
86

91
82
100
75

82
61
85
85

q10

124
142
140
282

143
139
134
219

198
187
238
252

169
158
154
267

q20

45
44
51
55

27
31
24
25

62
57
82
59

55
56
69
76

Table 32: Query answers ﬁltering time in milliseconds: P-AR semantics on u20c50, non score-structured priority, p = 0.8.

q1

t.o
t.o
t.o
t.o

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1 154,077
P1 Alg. 5 neg2 99,406
P2 Alg. 5 neg1
oom
P2 Alg. 5 neg2
oom
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2

t.o
t.o
oom
oom

t.o
t.o
oom
oom

q11

t.o
t.o
t.o
t.o

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1 69,687
P1 Alg. 5 neg2 65,524
P2 Alg. 5 neg1
oom
P2 Alg. 5 neg2
oom
P1 Alg. 6 neg1 62,028
P1 Alg. 6 neg2 47,117
P2 Alg. 6 neg1 65,908
P2 Alg. 6 neg2 85,135
P1 Alg. 7 neg1
t.o
P1 Alg. 7 neg2
t.o
P2 Alg. 7 neg1 966,914
P2 Alg. 7 neg2
t.o

q2

t.o
t.o
t.o
t.o

101,978
100,982
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
oom
oom

q12

t.o
t.o
t.o
t.o

215,157
185,994
oom
oom

252,332
180,825
t.o
865,510

t.o
t.o
oom
t.o

q3

413,778
427,898
t.o
t.o

50,919
53,952
oom
oom

27,917
24,729
53,477
50,345

47,472
48,461
74,994
80,573

q13

t.o
t.o
t.o
t.o

86,516
85,139
oom
oom

71,203
47,657
98,060
161,293

q4

t.o
t.o
oom
oom

t.o
t.o
oom
oom

oom
t.o
oom
oom

t.o
t.o
oom
oom

q5

19,789
23,153
212,339
238,214

26,891
27,139
44,965
49,508

27,258
23,495
49,777
51,133

4,703
4,173
56,229
64,655

q6

t.o
t.o
t.o
t.o

53,304
53,925
oom
oom

28,996
25,460
51,714
50,993

200,047
181,051
117,338
131,393

q7

t.o
t.o
t.o
t.o

q8

583,394
561,460
t.o
1,578,102

q9

t.o
t.o
t.o
t.o

q10

1,141,907
1,223,490
t.o
t.o

62,454
66,228
oom
oom

46,129
37,068
140,735
144,999

210,920
173,284
141,845
1,117,776

28,495
27,996
45,490
48,200

27,808
30,114
50,932
49,199

41,577
54,685
82,772
75,388

134,460
123,628
oom
oom

373,129
348,577
1,392,099
829,453

t.o
t.o
t.o
t.o

56,197
56,622
oom
oom

42,364
25,356
51,301
51,786

167,154
79,046
98,531
89,194

q14

q15

t.o
t.o
t.o
t.o

65,796
66,001
oom
oom

64,559
49,233
107,777
133,574

t.o
t.o
t.o
t.o

1,002,887
981,494
313,722
t.o

q16

t.o
t.o
oom
oom

376,238
373,622
oom
oom

t.o
t.o
oom
oom

t.o
t.o
oom
oom

q17

q18

q19

q20

915,944
939,425
t.o
t.o

59,716
62,850
oom
oom

39,159
28,757
69,354
60,378

91,330
72,325
89,506
100,085

t.o
t.o
t.o
t.o

503,639
498,495
1,261,351
1,016,008

220,911
220,396
t.o
t.o

98,493
106,364
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
t.o
oom

47,529
51,629
oom
oom

31,104
24,851
54,751
54,069

75,345
65,407
81,626
72,843

25,710
27,240
44,590
46,898

28,591
21,303
49,914
47,531

10,779
10,612
56,359
47,777

t.o
t.o
t.o
t.o

54,444
54,864
oom
oom

556,961
491,425
585,902
651,947

t.o
t.o
667,209
934,255

Table 33: Query answers ﬁltering time in milliseconds: P-AR semantics on Food Inspection dataset, non score-structured priority, p = 0.5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2

q2

2,026
1,236
30,053
18,400

1,809
1,205
10,187
7,950

1,598
1,409
8,751
7,565

1,789
1,376
7,774
7,659

q3

1,655
1,699
17,860
17,744

981
876
8,036
8,081

1,013
790
6,421
6,364

1,513
1,386
6,885
7,059

q4

121,767
118,808
t.o
t.o

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

592,647
361,792
265,763
323,436

q5

33,614
32,501
948,506
934,065

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

50,315
106,561
54,475
85,932

q6

40,034
26,320
737,020
715,284

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

36,009
18,077
230,203
21,687

Table 34: Query answers ﬁltering time in milliseconds: P-AR semantics on Food Inspection dataset, non score-structured priority, p = 0.8.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2

q2

1,754
1,094
16,556
10,040

1,640
876
6,863
5,300

1,489
1,102
6,121
4,525

1,738
1,435
5,499
5,967

q3

1,549
1,590
13,580
12,344

860
763
5,319
5,417

826
731
4,368
4,099

1,494
1,770
4,962
5,004

q4

119,542
114,823
t.o
t.o

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

931,669
366,887
230,613
643,423

q5

32,280
29,263
703,905
633,187

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

87,647
94,216
45,394
172,966

q6

35,480
22,567
450,678
439,352

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

100,501
18,000
207,226
17,187

Table 35: Query answers ﬁltering time in milliseconds: P-AR semantics on Physicians dataset, non score-structured priority, p = 0.5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2

q1

733
715
1,675
2,221

372
383
947
884

330
324
733
864

460
494
970
1,001

q2

170
171
170
178

174
175
216
200

197
181
206
232

161
169
206
198

q3

330
261
326
349

699
747
846
843

1,165
1,123
1,269
1,399

457
487
547
557

q4

24,724
24,491
854,863
921,564

2,362
1,984
42,217
5,575

t.o
t.o
t.o
t.o

16,340
16,069
33,465
21,453

q5

224
243
262
264

272
248
314
305

313
322
400
369

244
263
301
295

q6

5,288
4,467
17,753
29,253

82,355
77,349
122,750
78,039

t.o
t.o
t.o
t.o

36,700
63,325
30,162
61,024

Table 36: Query answers ﬁltering time in milliseconds: P-AR semantics on Physicians dataset, non score-structured priority, p = 0.8.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2

q1

630
669
1,366
1,636

382
404
711
694

312
324
609
631

449
486
809
809

q2

171
147
142
147

160
170
152
154

173
167
171
161

199
157
158
164

q3

299
280
304
259

393
443
436
401

628
618
583
638

371
363
336
336

q4

21,681
21,833
640,609
656,234

2,668
2,604
41,266
4,325

1,535,403
1,488,329
1,285,732
1,380,973

16,321
15,687
44,776
22,859

q5

207
192
196
205

225
211
227
219

239
268
239
272

227
212
217
202

q6

4,681
4,294
13,051
21,713

17,895
14,098
18,343
12,747

t.o
t.o
t.o
t.o

15,336
28,293
11,848
25,304

Table 37: Query answers ﬁltering time in milliseconds: C-AR semantics on u1c1, non score-structured priority, p = 0.8.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

q1

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

q11

48
51

78
90

80
81

78
68

q2

81
66

90
120

95
93

103
101

q12

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

q3

37
30

13
10

53
50

51
48

q13

58
60

128
183

150
159

133
190

q4

t.o
oom

t.o
t.o

t.o
t.o

t.o
t.o

q14

90
86

433
453

425
453

383
403

q5

32
32

10
8

48
53

55
53

q15

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

q6

34
30

12
12

55
55

55
57

q16

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

q7

27
26

11
9

47
49

56
46

q17

oom
oom

oom
oom

oom
oom

oom
oom

q8

29
25

13
8

47
55

50
42

q9

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

q10

39
45

73
71

81
74

61
69

q18

q19

q20

44
51

98
92

82
89

92
75

30
25

9
10

49
46

45
46

24
25

11
10

49
49

48
44

Table 38: Query answers ﬁltering time in milliseconds: C-AR semantics on u1c50, non score-structured priority, p = 0.8.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

q1

oom
oom

oom
oom

oom
oom

oom
oom

q11

t.o
t.o

oom
oom

oom
oom

oom
oom

q2

t.o
t.o

oom
oom

oom
oom

oom
oom

q12

t.o
t.o

oom
oom

oom
oom

oom
oom

q3

oom
oom

oom
oom

oom
oom

oom
oom

q13

t.o
t.o

oom
oom

oom
oom

oom
oom

q4

t.o
t.o

oom
oom

oom
oom

oom
oom

q14

t.o
t.o

oom
oom

oom
oom

oom
oom

q5

oom
oom

oom
oom

oom
oom

oom
oom

q15

t.o
t.o

oom
oom

oom
oom

oom
oom

q6

t.o
t.o

oom
oom

oom
oom

oom
oom

q16

t.o
t.o

oom
oom

oom
oom

oom
oom

q7

oom
oom

oom
oom

oom
oom

oom
oom

q17

oom
oom

oom
oom

oom
oom

oom
oom

q8

45
36

23
24

73
71

61
56

q18

t.o
t.o

oom
oom

oom
oom

oom
oom

q9

t.o
t.o

oom
oom

oom
oom

oom
oom

q19

44
34

23
25

61
71

59
61

Table 39: Query answers ﬁltering time in milliseconds: C-AR semantics on u20c1, non score-structured priority, p = 0.8.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

q1

oom
oom

oom
oom

oom
oom

oom
oom

q11

2,440
2,465

oom
oom

489,147
oom

583,873
oom

q2

oom
oom

oom
oom

oom
oom

oom
oom

q12

oom
t.o

oom
oom

oom
oom

oom
oom

q3

41
42

31
32

81
71

79
70

q13

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

q4

oom
oom

oom
oom

oom
oom

oom
oom

q14

oom
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q5

41
43

31
32

83
78

83
70

q15

oom
oom

oom
oom

oom
oom

oom
oom

q6

41
41

34
31

70
81

75
88

q7

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

q16

oom
oom

oom
oom

oom
oom

oom
oom

q17

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

q8

13,423
13,586

1,852
2,706

1,964
2,747

1,872
2,649

q18

oom
oom

oom
oom

oom
oom

oom
oom

q9

oom
oom

oom
oom

oom
oom

oom
oom

q19

159
189

223
261

226
221

196
251

q10

oom
oom

oom
oom

oom
oom

oom
oom

q20

oom
oom

oom
oom

oom
oom

oom
oom

q10

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

q20

41
40

31
30

94
100

95
76

Table 40: Query answers ﬁltering time in milliseconds: C-AR semantics on u20c50, non score-structured priority, p = 0.8: All queries run
out of memory.

Table 41: Query answers ﬁltering time in milliseconds: C-AR semantics on Food Inspection dataset, non score-structured priority, p = 0.8
for both p50 and p80: All queries run out of time or memory.

Table 42: Query answers ﬁltering time in milliseconds: C-AR semantics on Physicians dataset, non score-structured priority, p = 0.5.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

q1

488,355
542,960

oom
t.o

t.o
t.o

oom
oom

q2

207
216

565
1,403

956
543

489
557

q3

883
991

t.o
t.o

t.o
t.o

t.o
t.o

q4

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

q5

316
328

932
1,264

935
1,039

1,039
1,176

q6

t.o
t.o

t.o
oom

t.o
oom

t.o
oom

Table 43: Query answers ﬁltering time in milliseconds: C-AR semantics on Physicians dataset, non score-structured priority, p = 0.8.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2

q1

401,639
399,510

oom
oom

oom
oom

oom
oom

q2

149
152

364
499

331
400

310
423

q3

425
426

oom
oom

oom
oom

oom
oom

q4

oom
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q5

224
214

322
337

295
342

267
348

q6

oom
t.o

t.o
t.o

t.o
t.o

t.o
t.o

Table 44: Query answers ﬁltering time in milliseconds: X-IAR semantics (X ∈ {P,C}) on u1c1, score-structured priority, n = 5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
C Alg. 8 neg1
C Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
C Alg. 9 neg1
C Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2
C Alg. 10 neg1
C Alg. 10 neg2

q1

264
304
192
680
t.o
t.o

301
326
186
870
t.o
t.o

493
487
329
1,140
t.o
t.o

1,682
1,716
592
2,321
t.o
t.o

342
418
355
634
t.o
t.o

237
231
209
362
t.o
t.o

472
454
387
1,015
t.o
t.o

q2

51
67
63
65
145
72

89
80
79
88
78
92

69
77
83
76
97
150

77
72
87
105
99
91

57
57
67
63
74
78

55
58
60
53
63
58

88
77
91
95
77
79

q3

27
26
34
25
28
31

7
7
7
8
8
8

42
39
53
54
42
87

38
37
50
43
43
45

23
33
33
30
30
31

30
27
33
35
32
33

7
9
15
13
9
11

q4

481
489
450
541
2,935
3,040

377
363
308
439
3,812
4,158

2,096
2,728
2,136
2,608
5,813
6,611

5,256
5,167
2,223
6,215
130,498
156,360

437
560
467
505
2,984
3,056

182
175
177
177
267
251

250
240
281
273
360
336

q5

27
27
25
28
31
34

8
6
7
8
8
8

38
40
53
49
49
48

42
35
52
51
44
40

24
32
32
25
33
29

29
29
37
30
31
33

10
7
9
10
10
11

q6

27
31
29
33
34
36

8
8
9
11
10
9

42
43
46
43
46
52

38
33
51
55
48
47

26
32
34
28
33
36

33
34
29
35
34
38

8
8
11
9
9
9

q7

33
28
31
29
32
29

8
9
7
8
9
11

39
36
43
47
48
46

38
34
39
48
45
46

28
31
38
30
31
35

32
35
37
26
30
32

7
12
9
9
14
11

q8

24
28
25
28
28
30

6
8
6
7
7
8

39
39
41
47
47
41

31
33
42
43
36
32

27
27
32
23
26
28

29
29
31
26
29
33

8
8
9
8
8
9

q9

141
164
82
614
oom
oom

261
259
115
707
oom
t.o

397
395
186
994
oom
oom

652
614
133
1,153
oom
oom

140
183
99
522
oom
oom

120
120
68
288
oom
oom

191
198
127
641
oom
oom

q10

26
23
27
31
28
31

7
8
6
7
10
11

37
38
39
44
39
43

29
32
45
40
38
35

23
26
33
28
27
33

29
28
31
30
30
30

8
10
8
9
9
9

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
C Alg. 8 neg1
C Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
C Alg. 9 neg1
C Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2
C Alg. 10 neg1
C Alg. 10 neg2

q11

34
31
36
34
31
37

9
10
9
9
9
9

46
45
48
59
50
51

44
41
55
49
50
44

29
32
36
32
37
38

33
36
40
30
35
37

14
11
12
12
10
10

q12

86
88
154
168
oom
oom

84
93
167
181
t.o
t.o

88
94
177
181
oom
oom

112
112
233
226
t.o
t.o

82
109
185
147
oom
oom

95
94
168
174
oom
oom

111
116
209
212
oom
oom

q13

q14

53
51
55
55
52
61

70
59
74
72
148
119

65
70
66
79
80
83

64
61
67
71
170
170

51
62
55
49
69
67

61
52
50
62
56
64

72
91
97
78
86
87

35
40
36
39
102
118

56
53
55
66
306
159

59
57
67
71
162
161

54
50
62
61
255
169

31
43
33
41
94
104

37
36
34
37
103
98

64
60
66
72
124
136

q15

125
120
60
340
oom
oom

217
223
89
716
oom
t.o

303
311
153
798
t.o
t.o

430
429
109
715
t.o
t.o

112
134
71
325
oom
oom

129
139
64
367
oom
oom

272
255
153
743
oom
oom

q16

3,067
3,825
1,157
17,651
oom
oom

8,245
8,182
1,841
oom
oom
t.o

23,569
22,708
16,689
oom
oom
oom

1,718,044
1,744,859
6,014
oom
t.o
t.o

1,525
2,012
720
5,406
oom
oom

701
719
314
1,888
oom
oom

1,450
1,515
806
4,031
oom
oom

q17

q18

q19

q20

27
29
30
27
30
30

8
6
7
9
9
9

36
42
43
44
39
46

34
33
43
38
69
74

26
28
34
25
32
27

32
29
33
28
29
33

8
8
8
7
7
8

64
70
70
79
133
151

87
97
92
88
163
352

88
104
99
106
192
223

108
110
108
146
636
725

114
132
135
127
198
185

64
77
71
72
94
108

78
78
98
93
95
114

24
24
32
27
28
32

8
6
6
7
8
15

40
38
38
46
42
40

35
34
37
33
76
70

22
30
29
27
30
27

27
29
27
26
28
26

8
9
8
11
7
8

26
27
27
28
31
30

7
6
9
8
7
12

35
33
39
49
48
47

36
39
41
44
71
73

29
29
34
32
35
33

31
28
29
34
29
30

8
11
12
9
8
9

Table 45: Query answers ﬁltering time in milliseconds: X-IAR semantics (X ∈ {P,C}) on u1c50, score-structured priority, n = 5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
C Alg. 8 neg1
C Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
C Alg. 9 neg1
C Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2
C Alg. 10 neg1
C Alg. 10 neg2

q1

9,513
9,773
21,572
104,243
t.o
t.o

57,114
59,851
128,635
oom
oom
t.o

121,298
122,567
257,466
oom
oom
oom

t.o
t.o
oom
oom
oom
oom

8,000
9,177
19,221
82,487
t.o
t.o

4,401
4,524
7,953
29,068
t.o
t.o

oom
oom
oom
oom
oom
oom

q2

4,466
4,688
13,029
34,893
oom
t.o

17,714
49,163
23,623
oom
t.o
t.o

20,998
68,879
27,398
oom
oom
t.o

947,854
905,380
370,490
oom
t.o
t.o

3,384
3,988
7,675
18,916
t.o
t.o

1,321
1,298
2,665
4,514
t.o
t.o

1,988
1,753
3,168
6,482
t.o
t.o

q3

2,275
2,274
5,585
27,834
t.o
t.o

2,600
2,570
6,234
35,076
t.o
t.o

2,557
2,859
6,401
37,404
t.o
t.o

15,635
14,220
15,427
80,164
t.o
t.o

2,133
2,548
6,455
27,283
t.o
t.o

434
439
937
2,265
t.o
t.o

574
582
1,142
3,199
t.o
t.o

q4

20,114
21,529
110,161
171,425
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

18,284
21,287
128,781
168,345
oom
oom

992
994
1,976
2,597
oom
oom

1,698
1,634
2,860
3,961
oom
oom

q5

420
524
215
1,982
oom
t.o

564
1,023
284
2,083
t.o
t.o

529
1,082
297
2,682
oom
t.o

800
1,087
314
2,929
oom
t.o

379
478
354
1,398
oom
oom

114
97
90
231
oom
oom

206
212
169
700
t.o
oom

q6

765
720
415
2,106
t.o
t.o

1,096
1,102
455
2,975
t.o
t.o

1,442
1,472
570
3,835
t.o
t.o

10,145
9,102
2,152
10,039
t.o
t.o

540
633
406
1,690
t.o
t.o

172
182
126
402
t.o
t.o

349
354
257
909
t.o
t.o

q7

q8

686
710
752
2,716
t.o
t.o

1,218
1,147
931
3,139
t.o
t.o

1,127
1,029
918
3,336
t.o
t.o

6,297
5,691
2,284
6,673
t.o
t.o

629
758
783
2,872
t.o
t.o

501
519
359
1,891
t.o
t.o

659
652
768
2,388
t.o
t.o

35
35
37
36
36
39

17
17
18
19
21
20

52
63
57
64
63
59

53
50
62
53
54
54

32
37
38
38
39
41

36
41
38
41
48
39

19
19
23
23
17
22

q9

2,253
2,245
4,597
14,977
oom
oom

4,148
5,286
6,627
24,730
t.o
t.o

6,428
8,013
7,494
33,888
t.o
oom

100,162
89,905
40,789
174,875
t.o
t.o

2,067
2,493
5,012
14,887
t.o
t.o

1,218
1,221
2,244
4,890
t.o
t.o

1,880
1,880
3,239
9,471
t.o
t.o

q10

102
101
129
364
oom
oom

114
124
143
397
t.o
t.o

108
112
120
458
t.o
t.o

125
112
144
500
t.o
oom

101
112
139
398
oom
oom

47
53
53
54
136
59

117
102
156
417
oom
oom

q11

413
429
1,039
1,516
oom
oom

607
479
1,231
1,576
oom
oom

538
582
1,190
1,915
oom
oom

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
C Alg. 8 neg1
C Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
C Alg. 9 neg1
C Alg. 9 neg2
P1 Alg. 10 neg1
382
P1 Alg. 10 neg2
366
P2 Alg. 10 neg1
745
P2 Alg. 10 neg2 1,055
C Alg. 10 neg1
oom
C Alg. 10 neg2
oom

2,498
2,129
2,432
3,322
oom
oom

459
533
1,194
1,634
oom
t.o

531
520
1,104
1,585
oom
oom

q12

15,334
14,589
29,601
135,579
oom
oom

294,386
249,601
237,908
oom
t.o
t.o

285,464
182,057
191,572
oom
t.o
t.o

1,371,019
1,077,135
414,877
oom
t.o
t.o

7,908
8,778
21,762
91,641
t.o
t.o

9,136
8,820
20,702
91,169
t.o
t.o

1,049
1,059
3,329
3,936
t.o
t.o

q13

634
633
1,489
2,438
oom
oom

754
727
1,681
2,424
oom
oom

855
844
1,593
3,126
oom
oom

6,205
5,547
4,408
7,739
oom
oom

631
745
1,681
2,450
oom
oom

756
739
1,618
2,413
oom
oom

672
681
1,339
2,228
oom
oom

q14

287
309
578
1,121
oom
oom

340
352
818
1,412
oom
oom

380
390
756
1,617
oom
oom

1,581
1,439
1,772
2,400
oom
oom

257
299
664
1,075
t.o
t.o

242
255
513
797
t.o
t.o

399
408
733
1,144
oom
oom

q15

1,414
1,438
2,651
7,549
oom
t.o

2,537
2,607
3,257
11,608
t.o
t.o

3,803
3,972
3,289
10,952
t.o
t.o

34,270
31,602
13,626
60,221
t.o
t.o

1,296
1,508
2,919
8,009
t.o
t.o

1,550
1,550
2,740
7,978
t.o
t.o

1,690
1,682
3,054
9,031
t.o
t.o

q16

80,213
83,389
212,689
1,305,473
oom
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

q17

86
96
67
291
oom
oom

137
142
86
350
oom
oom

134
144
66
392
oom
oom

116
112
97
351
oom
oom

78,958
88,298
242,356
1,316,558
t.o
t.o

2,180
2,144
2,925
11,261
t.o
t.o

oom
oom
oom
oom
t.o
t.o

51
69
55
72
265,293
222,697

67
59
57
91
437,285
436,694

93
85
91
119
207,730
240,073

q18

q19

3,184
3,443
7,857
20,425
oom
oom

10,720
16,872
13,137
117,280
oom
oom

12,334
15,166
12,357
128,744
oom
oom

384,155
348,015
134,225
497,737
oom
oom

2,667
2,985
6,125
11,179
t.o
t.o

967
975
1,708
3,015
oom
t.o

1,260
1,284
2,302
4,576
oom
oom

34
34
35
37
38
41

16
16
20
18
20
19

47
58
56
67
59
64

57
57
55
67
44
53

33
39
42
42
39
41

38
37
40
39
38
59

18
20
22
21
20
21

q20

463
484
1,106
1,898
t.o
t.o

447
476
1,130
1,794
t.o
t.o

445
430
1,029
2,098
t.o
t.o

1,761
1,450
2,041
3,421
t.o
t.o

420
518
1,247
1,903
t.o
t.o

89
86
129
219
t.o
t.o

188
208
264
388
t.o
t.o

Table 46: Query answers ﬁltering time in milliseconds: X-IAR semantics (X ∈ {P,C}) on u20c1, score-structured priority, n = 5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
C Alg. 8 neg1
C Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
C Alg. 9 neg1
C Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2
C Alg. 10 neg1
C Alg. 10 neg2

q1

1,741
1,751
1,349
3,051
oom
oom

2,381
2,417
1,376
4,028
oom
oom

71,546
43,686
98,184
48,882
oom
oom

741,666
587,482
34,947
502,005
oom
oom

2,241
oom
2,222
3,643
oom
oom

1,450
1,474
1,347
1,987
oom
oom

oom
oom
oom
oom
oom
oom

q2

q3

q4

q5

q6

878
931
612
2,049
oom
oom

1,268
1,306
638
12,647
oom
oom

1,883
1,946
1,190
11,501
oom
oom

35,296
30,770
3,075
33,814
oom
oom

786
974
754
1,508
oom
oom

482
493
460
727
oom
oom

707
682
633
1,098
oom
oom

42
42
44
47
43
49

22
23
26
25
28
29

65
60
81
67
79
78

65
59
59
70
66
62

39
46
49
45
47
52

46
47
46
47
46
47

26
26
29
30
24
26

38,121
38,714
25,931
64,054
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

33,717
39,147
27,095
69,935
oom
oom

3,768
3,504
4,154
4,294
oom
oom

5,636
5,744
oom
oom
oom
oom

41
41
44
43
44
49

21
23
23
26
29
25

67
46
80
67
74
77

68
42
66
61
66
66

38
42
50
45
47
48

46
46
45
45
48
47

26
27
30
26
26
26

41
45
43
44
46
53

23
24
26
25
29
29

53
66
75
72
80
74

66
49
62
68
58
72

39
45
49
48
45
47

45
45
51
49
50
48

29
28
30
32
28
29

q7

81
87
74
99
13,415
14,821

105
101
111
136
17,059
15,273

136
135
158
208
15,651
15,219

173
132
133
218
15,044
15,200

81
89
91
124
14,901
15,996

95
91
89
112
14,039
14,952

162
158
166
215
13,787
14,782

q8

78
72
57
87
75,969
91,459

118
118
100
196
oom
oom

130
151
103
212
oom
oom

186
101
83
183
oom
oom

63
69
54
66
13,219
13,395

61
66
53
58
12,849
13,304

115
103
104
111
12,017
12,348

q9

1,088
1,190
692
2,762
oom
oom

1,551
1,801
714
7,685
oom
oom

5,588
5,030
4,028
12,607
oom
oom

119,241
100,770
5,084
78,794
oom
oom

1,028
1,286
882
2,939
t.o
oom

790
799
612
1,698
oom
oom

1,298
1,303
960
2,792
oom
oom

q10

83
84
64
155
oom
oom

152
167
89
235
oom
oom

177
168
135
279
oom
oom

230
184
106
227
oom
oom

58
84
63
129
oom
oom

77
73
60
81
oom
oom

115
137
107
166
oom
oom

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
C Alg. 8 neg1
C Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
C Alg. 9 neg1
C Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2
C Alg. 10 neg1
C Alg. 10 neg2

q11

136
140
144
252
160,537
190,417

143
142
139
263
oom
oom

175
196
163
289
oom
oom

570
477
294
748
oom
oom

198
236
247
339
138,720
146,639

244
236
233
330
144,203
135,262

193
179
219
256
24,078
26,539

q12

2,827
2,791
1,273
10,053
oom
oom

2,849
2,936
1,587
10,603
oom
oom

2,908
3,083
1,791
11,480
oom
oom

84,997
63,771
5,368
90,515
oom
oom

2,873
3,422
2,385
10,425
t.o
t.o

3,329
3,374
2,262
9,743
t.o
t.o

581
616
997
1,162
oom
oom

q13

258
250
280
407
oom
t.o

244
226
251
455
t.o
t.o

301
297
293
524
t.o
t.o

1,340
1,100
796
1,564
t.o
t.o

279
312
335
439
t.o
t.o

337
307
320
425
t.o
t.o

361
357
412
560
t.o
t.o

q14

145
164
140
214
oom
oom

188
175
156
263
oom
t.o

239
241
232
441
oom
t.o

572
519
214
628
oom
oom

146
175
146
194
oom
oom

167
154
132
183
oom
t.o

243
268
250
326
oom
oom

q15

933
943
534
2,635
oom
oom

1,586
1,596
517
3,571
oom
t.o

3,107
3,045
1,957
5,116
t.o
t.o

58,039
47,761
2,358
32,449
oom
t.o

853
985
580
2,822
oom
oom

986
993
566
2,739
oom
oom

1,755
1,683
945
4,296
oom
oom

q16

33,690
43,214
10,102
284,943
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

20,266
27,015
9,126
160,585
oom
oom

4,369
4,588
2,502
13,042
oom
oom

oom
oom
oom
oom
oom
oom

q17

109
144
75
381
oom
oom

215
192
116
541
oom
oom

216
237
123
600
oom
oom

303
232
117
576
oom
oom

56
66
64
113
219,886
229,056

74
80
60
107
422,194
466,718

129
112
114
164
181,954
224,258

q18

626
744
459
1,471
oom
oom

1,002
1,305
533
6,020
oom
oom

1,505
1,612
892
6,583
oom
oom

17,811
15,852
2,550
18,650
oom
oom

920
1,014
978
1,336
t.o
t.o

467
466
393
608
t.o
t.o

547
576
561
769
oom
oom

q19

q20

42
40
44
45
43
51

21
22
22
23
28
26

62
52
76
65
65
80

65
63
69
67
77
56

35
47
48
45
45
45

47
45
46
46
77
88

26
26
26
30
24
27

40
44
42
46
42
49

21
23
24
24
28
27

57
63
73
76
67
67

63
53
66
64
66
65

39
46
51
48
49
48

45
47
45
48
83
72

24
24
29
28
25
27

Table 47: Query answers ﬁltering time in milliseconds: X-IAR semantics (X ∈ {P,C}) on u20c50, score-structured priority, n = 5.

q1

t.o
t.o
t.o
t.o
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1 1,493,557
P1 Alg. 8 neg2 1,455,636
P2 Alg. 8 neg1
t.o
P2 Alg. 8 neg2
t.o
C Alg. 8 neg1
t.o
C Alg. 8 neg2
t.o
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
C Alg. 9 neg1
C Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2
C Alg. 10 neg1
C Alg. 10 neg2

510,676
514,617
t.o
t.o
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

q2

t.o
t.o
t.o
t.o
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

406,395
363,387
t.o
t.o
t.o
t.o

98,894
99,949
472,498
499,729
t.o
t.o

oom
oom
oom
oom
t.o
t.o

q3

27,240
26,917
72,754
91,074
oom
oom

653,037
668,302
oom
oom
oom
oom

669,217
616,055
oom
oom
oom
oom

t.o
t.o
oom
oom
oom
oom

11,362
11,277
74,242
82,505
oom
oom

1,460
1,474
4,068
4,854
oom
oom

2,040
1,908
5,968
7,066
oom
oom

q4

t.o
t.o
t.o
t.o
t.o
t.o

oom
oom
oom
oom
oom
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

t.o
t.o
t.o
t.o
t.o
t.o

135,582
139,401
737,670
708,710
t.o
oom

oom
oom
oom
oom
t.o
t.o

q5

8,867
8,429
9,312
10,409
oom
oom

7,586
9,443
10,080
12,626
oom
oom

10,872
16,041
10,701
13,291
oom
oom

58,275
77,941
11,930
14,823
oom
oom

3,210
3,248
9,798
9,984
oom
oom

221
215
241
292
oom
oom

995
992
2,364
2,919
t.o
t.o

q6

9,630
9,585
42,688
44,666
t.o
t.o

125,247
133,103
oom
oom
t.o
t.o

159,917
154,469
oom
oom
t.o
t.o

t.o
t.o
oom
oom
t.o
t.o

5,990
5,865
24,638
24,393
t.o
t.o

1,386
1,382
3,456
3,903
t.o
t.o

2,262
2,329
6,907
7,097
t.o
t.o

q7

2,840
2,694
7,169
8,915
oom
oom

6,731
7,595
7,483
9,700
oom
oom

7,575
7,923
8,422
9,900
oom
oom

514,169
411,544
30,029
39,223
oom
oom

2,853
2,805
7,870
9,371
oom
oom

1,345
1,288
3,028
3,809
oom
oom

2,724
2,840
7,831
9,131
oom
oom

q8

3,547
4,065
8,775
8,876
oom
oom

19,695
17,230
9,077
9,227
oom
oom

16,453
17,702
9,686
9,693
oom
oom

61,434
67,307
17,137
17,158
oom
oom

2,571
2,562
9,333
8,879
oom
oom

763
736
2,116
2,261
oom
oom

920
900
2,826
2,913
oom
oom

q9

639,240
650,133
t.o
t.o
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

493,774
502,358
t.o
t.o
t.o
t.o

105,398
107,397
566,243
615,591
t.o
t.o

oom
oom
oom
oom
t.o
t.o

q10

5,270
5,305
14,109
14,751
oom
oom

42,511
44,459
15,858
17,180
oom
oom

38,851
39,317
16,930
17,920
oom
oom

285,373
222,134
39,993
40,700
oom
oom

3,547
3,640
14,930
14,374
oom
oom

1,071
1,129
2,888
3,125
oom
oom

1,916
2,037
6,143
7,060
t.o
t.o

q11

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

P1 Alg. 4 neg1 19,565
P1 Alg. 4 neg2 19,229
P2 Alg. 4 neg1 72,207
P2 Alg. 4 neg2 76,813
C Alg. 4 neg1
t.o
C Alg. 4 neg2
t.o
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1 16,604
P1 Alg. 8 neg2 16,447
P2 Alg. 8 neg1 73,569
P2 Alg. 8 neg2 71,700
C Alg. 8 neg1
t.o
C Alg. 8 neg2
t.o
P1 Alg. 9 neg1 17,119
P1 Alg. 9 neg2 16,782
P2 Alg. 9 neg1 70,614
P2 Alg. 9 neg2 77,920
C Alg. 9 neg1
t.o
C Alg. 9 neg2
t.o
P1 Alg. 10 neg1 11,490
P1 Alg. 10 neg2 11,609
P2 Alg. 10 neg1 57,343
P2 Alg. 10 neg2 59,224
C Alg. 10 neg1
t.o
C Alg. 10 neg2
t.o

t.o
t.o
oom
oom
oom
oom

q12

t.o
t.o
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

1,728,846
1,702,203
t.o
t.o
oom
oom

1,722,027
1,757,804
t.o
t.o
oom
oom

oom
oom
oom
oom
oom
oom

q13

38,480
36,035
146,265
160,231
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

30,196
29,841
143,869
145,678
t.o
t.o

30,495
30,004
134,702
163,576
t.o
t.o

oom
oom
oom
oom
t.o
t.o

q14

7,620
7,560
30,678
34,265
t.o
t.o

111,985
187,153
oom
oom
t.o
t.o

229,777
329,335
oom
oom
oom
t.o

t.o
t.o
oom
oom
t.o
t.o

6,575
6,654
27,147
28,729
t.o
t.o

5,691
6,050
21,024
25,063
t.o
t.o

8,345
8,816
36,539
40,246
t.o
t.o

q15

q16

q17

112,719
109,109
615,572
701,445
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
t.o

111,285
112,649
694,045
712,544
oom
oom

111,709
113,063
626,291
777,501
oom
oom

oom
oom
oom
oom
oom
oom

t.o
t.o
t.o
t.o
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

t.o
t.o
t.o
t.o
t.o
t.o

471,517
477,547
t.o
t.o
t.o
t.o

oom
oom
oom
oom
t.o
t.o

258,347
242,411
158,486
175,367
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

25,565
25,632
147,482
152,295
oom
oom

1,720
1,709
4,442
5,138
oom
oom

3,514
3,674
11,524
12,568
oom
oom

q18

t.o
t.o
t.o
t.o
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

q19

t.o
t.o
oom
oom
oom
t.o

oom
oom
oom
oom
oom
t.o

oom
oom
oom
oom
oom
t.o

oom
oom
oom
oom
t.o
t.o

296,783
311,423
t.o
t.o
t.o
t.o

55,565
56,927
267,834
319,214
t.o
t.o

oom
oom
oom
oom
t.o
t.o

93,550
92,402
616,408
619,713
t.o
oom

6,266
6,312
27,096
31,592
t.o
t.o

3,551
3,598
11,031
11,647
oom
oom

q20

2,476
2,462
9,104
9,160
oom
oom

9,145
8,838
9,231
9,663
oom
oom

8,865
8,827
9,934
10,012
oom
oom

96,641
114,820
19,553
19,604
oom
oom

2,613
2,539
10,005
9,231
oom
oom

322
363
785
967
oom
oom

490
478
1,107
1,242
oom
oom

Table 48: Query answers ﬁltering time in milliseconds: X-IAR semantics (X ∈ {P,C}) on Food Inspection dataset, score-structured priority,
n = 2.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
C Alg. 8 neg1
C Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
C Alg. 9 neg1
C Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2
C Alg. 10 neg1
C Alg. 10 neg2

q2

t.o
t.o
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

69,462
71,081
t.o
t.o
t.o
t.o

5,332
5,478
108,261
109,188
t.o
t.o

2,008
2,014
19,462
20,196
t.o
t.o

q3

13,968
16,524
oom
oom
t.o
t.o

12,605
13,299
oom
oom
t.o
t.o

10,200
9,704
oom
oom
t.o
t.o

504,834
497,602
oom
oom
t.o
t.o

8,647
8,528
209,538
215,619
t.o
t.o

1,751
1,660
18,257
18,327
t.o
t.o

t.o
t.o
t.o
t.o
t.o
t.o

q4

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

t.o
t.o
t.o
t.o
t.o
t.o

47,468
47,262
1,373,922
1,398,917
t.o
t.o

oom
oom
oom
oom
t.o
t.o

q5

t.o
t.o
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

t.o
t.o
t.o
t.o
t.o
t.o

36,643
36,387
1,079,612
1,063,054
t.o
t.o

17,813
17,603
oom
oom
t.o
t.o

q6

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

t.o
t.o
t.o
t.o
t.o
t.o

35,180
35,297
984,742
1,002,852
t.o
t.o

15,320
15,200
oom
oom
t.o
t.o

Table 49: Query answers ﬁltering time in milliseconds: X-IAR semantics (X ∈ {P,C}) on Food Inspection dataset, score-structured priority,
n = 5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
C Alg. 8 neg1
C Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
C Alg. 9 neg1
C Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2
C Alg. 10 neg1
C Alg. 10 neg2

q2

t.o
t.o
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

14,517
14,610
157,541
156,808
t.o
t.o

1,477
1,488
10,298
10,102
t.o
t.o

685
683
3,215
3,274
oom
oom

q3

3,966
3,947
38,213
37,054
oom
oom

5,350
5,293
34,882
34,821
oom
oom

4,188
4,278
35,174
35,117
oom
oom

144,542
147,447
53,281
51,410
oom
oom

2,602
2,524
31,122
31,084
oom
oom

523
514
2,144
2,201
oom
oom

2,967
3,891
4,391
4,484
oom
oom

q4

t.o
t.o
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

928,082
927,928
t.o
t.o
t.o
t.o

11,712
11,573
244,612
235,267
t.o
t.o

oom
oom
oom
oom
t.o
t.o

q5

1,739,609
1,725,805
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

oom
oom
oom
oom
t.o
t.o

449,444
456,358
t.o
t.o
t.o
t.o

8,930
8,926
173,123
171,460
oom
t.o

5,306
5,391
88,327
92,885
t.o
t.o

q6

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

t.o
t.o
t.o
t.o
oom
oom

8,498
8,335
163,530
155,521
oom
oom

4,480
4,798
72,723
74,637
oom
oom

Table 50: Query answers ﬁltering time in milliseconds: X-IAR semantics (X ∈ {P,C}) on Physicians dataset, score-structured priority, n = 2.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
C Alg. 8 neg1
C Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
C Alg. 9 neg1
C Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2
C Alg. 10 neg1
C Alg. 10 neg2

q1

562
432
668
1,080
368,667
367,669

607
610
715
1,192
oom
oom

435
434
756
1,129
oom
oom

1,072
1,933
1,301
1,650
oom
oom

563
481
661
1,145
435,874
468,022

580
446
698
1,079
396,897
413,685

536
595
1,096
1,312
oom
oom

q2

166
151
141
170
161
184

145
148
160
147
181
171

141
143
164
158
155
158

177
171
169
171
212
233

164
164
151
172
182
191

150
153
151
171
163
162

183
177
180
183
199
239

q3

437
462
416
458
646
655

290
295
335
342
926
597

333
286
326
321
1,027
665

1,132
1,254
1,033
1,142
4,283
3,957

575
535
516
543
765
804

486
485
428
485
727
684

626
648
651
628
803
785

q4

59,077
57,499
871,458
872,184
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

32,409
32,359
826,337
818,668
oom
oom

1,674
1,688
9,778
10,075
oom
oom

2,028
1,980
13,991
15,286
oom
oom

q5

231
233
237
231
294
283

213
212
203
207
271
245

221
217
195
206
265
234

365
320
294
340
540
514

237
264
244
250
322
346

181
187
194
195
209
228

244
232
228
273
279
240

q6

15,988
14,734
25,637
59,280
oom
oom

61,791
t.o
oom
oom
oom
oom

14,115
t.o
oom
oom
oom
oom

t.o
t.o
oom
oom
oom
oom

18,395
14,764
31,705
61,275
t.o
t.o

1,221
1,162
1,578
2,047
463,808
442,210

1,707
1,648
2,643
3,990
oom
oom

Table 51: Query answers ﬁltering time in milliseconds: X-IAR semantics (X ∈ {P,C}) on Physicians dataset, score-structured priority, n = 5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
C Alg. 4 neg1
C Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
C Alg. 5 neg1
C Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
C Alg. 6 neg1
C Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
C Alg. 7 neg1
C Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
C Alg. 8 neg1
C Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
C Alg. 9 neg1
C Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2
C Alg. 10 neg1
C Alg. 10 neg2

q1

467
436
515
784
186,867
184,149

514
477
557
872
oom
oom

351
390
542
875
oom
oom

750
919
976
1,376
oom
oom

707
419
865
805
183,400
184,423

423
346
486
705
165,973
162,494

456
477
677
865
165,423
160,429

q2

128
130
125
122
129
160

135
161
136
156
145
143

147
148
149
132
133
135

182
137
141
136
176
151

129
127
129
126
138
135

125
122
122
128
153
133

165
179
139
152
144
151

q3

299
303
288
327
412
413

287
279
287
287
386
357

282
261
295
265
444
390

624
651
572
633
1,513
1,371

448
407
388
443
507
524

345
362
370
368
510
502

464
439
443
437
507
493

q4

30,382
30,478
627,696
711,239
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

oom
oom
oom
oom
oom
oom

24,432
24,385
613,729
658,620
oom
oom

1,260
1,260
6,570
7,094
oom
oom

1,529
1,500
7,639
8,422
oom
oom

q5

222
197
218
219
271
235

196
201
207
213
216
243

212
181
206
204
211
243

252
273
250
253
373
329

215
244
225
236
251
255

169
191
177
173
176
188

210
227
202
212
214
215

q6

5,101
4,721
8,486
16,730
t.o
t.o

8,635
72,946
10,021
23,965
oom
oom

5,260
18,784
12,283
27,054
oom
oom

t.o
t.o
1,626,620
t.o
oom
oom

8,164
7,732
11,920
19,104
t.o
t.o

921
884
1,109
1,377
251,701
262,966

1,073
1,134
1,436
2,096
oom
oom

Table 52: Query answers ﬁltering time in milliseconds: P-IAR semantics on u1c1, non score-structured priority, p = 0.8.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2

q1

175
196
177
1,024

375
409
192
1,471

683
694
549
1,729

1,538
1,645
354
1,785

218
170
122
544

135
142
150
646

436
447
727
1,312

q11

43
36
52
45

64
64
66
71

71
65
69
77

57
45
69
59

49
44
45
48

39
43
51
50

66
63
75
71

q2

49
55
63
66

70
62
70
101

66
80
85
82

59
73
87
87

60
56
53
55

49
47
62
59

77
87
89
82

q12

96
95
269
393

145
134
314
559

194
183
313
567

220
203
347
658

109
107
238
261

108
105
300
316

134
126
305
343

q3

28
26
31
39

9
9
10
9

41
35
50
56

39
41
47
50

36
26
30
27

28
28
33
38

8
10
10
11

q4

734
772
677
1,411

848
870
559
2,155

22,333
13,771
15,180
17,056

74,443
81,123
9,018
50,309

880
795
628
1,206

184
191
221
280

318
320
336
458

q5

23
25
36
32

6
7
10
10

54
48
60
52

49
44
45
53

32
27
27
29

28
29
31
35

9
9
7
8

q13

q14

47
48
52
58

75
80
70
72

75
81
82
88

72
66
76
85

55
56
46
50

46
47
61
55

75
91
79
86

35
36
46
42

57
63
68
71

67
78
67
71

49
52
55
63

38
38
34
37

40
32
38
42

63
81
65
66

q15

131
137
80
569

325
317
127
976

406
425
195
1,073

560
576
123
963

160
139
66
406

132
140
78
515

321
332
163
1,055

q6

29
27
33
36

8
12
11
9

55
45
53
58

42
44
50
56

35
29
31
29

30
28
34
34

12
11
12
10

q16

4,029
5,567
1,885
56,092

14,546
14,515
2,737
oom

57,250
55,961
19,539
oom

t.o
t.o
9,240
oom

2,027
2,201
713
13,181

839
849
395
3,863

2,023
2,054
929
6,975

q7

26
26
32
32

9
8
10
9

46
39
54
47

35
37
39
49

30
21
26
22

24
31
35
26

7
9
11
10

q17

58
108
51
339

134
142
87
411

149
145
89
402

173
195
75
352

48
46
31
67

42
40
42
77

68
71
58
110

q8

23
23
30
27

7
10
8
8

40
36
45
41

35
41
40
41

31
25
25
29

29
25
28
29

7
11
8
8

q9

152
181
97
788

272
292
113
996

439
417
189
1,334

789
807
149
1,517

201
179
79
711

120
128
77
535

222
215
132
620

q10

40
32
37
39

53
57
63
62

62
60
66
66

45
45
50
51

35
30
33
31

33
26
37
39

50
57
61
55

q18

q19

q20

51
59
60
57

72
88
80
86

84
95
73
80

156
111
84
85

78
64
70
74

51
46
47
54

88
82
88
75

30
32
30
28

8
7
9
8

47
41
42
49

40
41
48
44

27
26
27
27

29
30
28
31

9
7
8
7

33
30
30
35

8
8
8
8

40
48
57
45

33
35
40
48

37
31
28
30

28
27
31
29

9
9
11
8

Table 53: Query answers ﬁltering time in milliseconds: P-IAR semantics on u1c50, non score-structured priority, p = 0.8.

q1

85,648
86,362
t.o
t.o

q2

q3

q4

56,102
61,904
1,267,209
1,509,923

19,790
20,365
437,908
504,758

226,986
235,552
t.o
t.o

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

36,004
33,613
812,655
848,680

25,091
24,670
714,872
738,356

oom
oom
oom
oom

q11

2,538
2,554
29,292
31,787

4,269
4,284
51,114
57,151

4,791
5,017
52,302
56,885

38,218
37,131
91,601
552,632

1,163
1,029
7,605
7,910

1,026
1,019
9,637
9,720

1,245
1,248
10,468
10,640

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

7,743
7,349
124,804
143,531

6,851
6,795
140,039
141,335

9,113
9,287
oom
oom

q12

13,816
14,093
oom
oom

33,080
33,929
oom
oom

107,209
90,224
oom
oom

t.o
t.o
oom
oom

3,765
3,459
49,759
48,730

3,412
3,400
61,268
61,113

3,464
3,497
45,291
44,388

q5

1,656
2,258
17,033
27,939

3,366
3,348
37,021
36,627

3,930
3,615
36,110
36,847

2,841
2,836
35,271
35,955

181
162
995
986

156
139
1,257
1,196

578
599
3,763
3,716

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

3,033
2,793
46,480
49,794

1,676
1,700
28,637
28,766

2,516
2,548
28,026
28,677

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

229,015
216,671
t.o
t.o

4,012
3,912
71,756
75,332

5,998
5,932
115,085
115,401

q13

3,034
3,067
37,172
41,748

4,961
4,972
oom
oom

7,820
7,062
oom
oom

190,356
195,994
oom
oom

1,653
1,470
12,616
12,935

1,470
1,453
16,055
16,171

2,047
2,187
21,007
21,206

q14

1,516
1,633
16,538
19,179

2,610
2,509
23,419
23,934

2,929
2,840
24,931
24,854

12,166
12,148
30,885
32,911

1,189
1,083
8,900
9,421

1,442
1,434
16,422
16,554

1,616
1,623
12,921
13,322

q15

5,031
4,945
98,460
112,759

14,193
14,169
oom
oom

15,832
16,129
oom
oom

293,946
285,718
oom
oom

4,862
4,307
82,354
85,361

4,370
4,301
104,596
108,969

6,234
6,333
129,928
137,907

q6

q7

q8

q9

7,231
7,364
157,824
182,913

26,922
27,459
oom
oom

28,271
33,255
oom
oom

1,324,261
1,164,066
oom
oom

3,778
3,525
60,394
68,947

970
948
9,209
9,429

1,929
1,937
19,734
20,011

q16

oom
548,177
t.o
t.o

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

142,203
133,042
t.o
t.o

55,419
55,055
1,687,102
t.o

oom
oom
oom
oom

3,427
3,526
62,026
66,806

6,260
6,150
oom
oom

7,168
6,701
oom
oom

64,539
65,170
oom
oom

3,352
2,972
47,478
46,106

2,008
1,988
35,031
33,897

3,336
3,454
43,012
42,581

q17

1,169
1,157
10,184
9,830

1,642
1,717
11,496
11,536

1,788
1,720
11,480
11,266

1,098
1,046
11,018
11,027

188
150
1,118
1,058

288
283
2,338
2,280

241
247
1,423
1,450

41
43
39
40

21
19
22
23

53
57
68
74

48
40
68
58

40
34
35
36

39
36
42
43

20
20
21
19

11,005
11,394
233,948
264,805

78,216
69,967
oom
oom

113,729
165,874
oom
oom

t.o
t.o
oom
oom

8,292
7,565
152,020
162,884

4,199
4,134
90,412
95,239

7,754
7,789
163,891
170,574

q18

q19

36,590
37,253
837,035
981,600

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

6,809
6,287
113,675
134,188

4,661
4,587
86,913
90,579

6,080
6,100
121,448
124,270

38
35
39
41

20
19
21
24

64
63
58
66

50
50
69
64

41
36
37
38

36
33
44
43

21
19
22
21

q10

389
384
2,701
2,982

513
561
2,981
3,057

639
629
3,124
3,231

690
592
3,590
3,601

371
332
2,010
2,130

51
51
57
61

429
401
2,552
2,634

q20

2,662
2,427
56,499
53,756

5,907
5,504
oom
oom

6,356
6,164
oom
oom

11,939
11,615
oom
oom

1,816
1,674
23,775
23,554

1,496
1,452
21,510
22,199

2,204
2,274
26,035
24,905

Table 54: Query answers ﬁltering time in milliseconds: P-IAR semantics on u20c1, non score-structured priority, p = 0.8.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2

q1

1,709
1,711
1,595
6,288

3,682
3,459
2,332
8,923

319,450
258,081
332,159
304,167

1,110,324
1,106,685
39,847
423,019

1,315
1,390
1,195
4,047

1,157
1,193
1,045
2,967

oom
oom
oom
oom

q2

1,059
1,150
1,945
3,388

2,572
2,474
3,157
6,014

2,905
3,129
3,813
6,634

68,121
65,702
15,721
42,479

502
495
792
1,235

480
488
801
1,165

858
888
1,072
1,665

q3

42
42
52
53

28
29
32
29

63
68
64
75

55
51
71
62

40
41
51
47

39
39
53
51

28
27
30
29

q4

56,424
56,059
143,729
223,416

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

57,095
58,260
141,985
209,179

3,670
3,849
4,946
5,326

oom
oom
oom
oom

q5

41
42
53
53

28
27
29
30

54
66
75
72

56
63
73
78

41
39
50
49

40
42
51
51

27
26
27
28

q6

40
43
53
53

27
32
35
32

59
49
67
77

61
59
66
74

42
39
56
51

44
39
55
53

30
30
29
30

q11

112
112
152
158

129
137
153
144

114
133
189
194

167
148
230
244

113
105
159
162

120
119
141
159

175
170
180
201

q12

321
315
1,193
1,244

385
353
1,355
1,258

312
345
1,276
1,218

1,985
1,988
3,215
2,654

341
328
1,296
1,275

345
328
1,206
1,166

417
433
1,280
1,238

q13

194
203
336
450

224
215
372
532

232
244
387
577

713
716
841
1,340

208
197
350
406

213
214
345
416

314
319
435
578

q14

108
114
150
226

217
203
216
321

295
284
370
470

488
499
295
538

115
115
140
213

118
107
133
202

287
280
297
381

q15

1,123
1,101
1,241
6,120

2,556
2,498
1,847
9,874

4,198
4,444
3,922
12,158

87,969
86,892
3,922
32,205

1,091
1,110
1,228
5,883

1,083
1,089
1,182
6,099

2,447
2,458
1,703
9,443

q16

45,431
69,305
33,243
1,068,975

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

16,985
21,516
13,591
314,950

7,107
7,220
5,235
77,591

oom
oom
oom
oom

q7

112
88
174
183

187
186
267
310

192
197
302
340

240
239
238
290

81
99
188
201

91
97
183
196

224
210
296
308

q17

142
207
122
1,229

397
376
188
1,287

396
388
204
1,345

351
362
188
1,246

65
77
70
221

71
72
65
228

161
180
136
265

q8

103
111
111
268

268
290
164
510

297
270
199
546

346
337
177
494

64
69
68
117

66
65
65
125

182
151
159
195

q18

792
902
1,558
3,050

1,949
1,961
2,849
5,413

2,273
2,311
2,839
5,893

25,046
24,976
5,170
14,233

433
424
711
997

381
362
632
903

621
651
780
1,120

q9

1,269
1,403
1,693
6,877

2,751
2,634
2,409
8,451

10,807
10,792
8,633
15,498

192,414
195,633
8,496
75,396

1,268
1,364
1,741
6,069

928
935
1,315
3,787

1,749
1,741
1,458
4,648

q19

86
88
97
121

150
155
157
179

112
129
149
154

108
108
129
164

203
220
244
262

51
53
60
68

92
93
100
94

q10

149
150
178
444

344
313
227
745

346
364
253
787

560
560
217
806

103
109
154
242

85
76
119
168

197
190
221
313

q20

39
41
51
55

27
29
39
31

54
66
70
76

53
66
73
60

42
39
53
48

44
43
51
50

26
26
29
27

Table 55: Query answers ﬁltering time in milliseconds: P-IAR semantics on u20c50, non score-structured priority, p = 0.8.

q1

t.o
t.o
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1 oom
P1 Alg. 10 neg2 oom
P2 Alg. 10 neg1 oom
P2 Alg. 10 neg2 oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2

q11

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

oom
oom
oom
oom

q2

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

oom
oom
oom
oom

q12

t.o
t.o
t.o
t.o

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

oom
oom
oom
oom

q3

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

1,005,391
803,411
t.o
t.o

189,495
190,386
t.o
t.o

oom
oom
oom
oom

q13

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

oom
oom
oom
oom

q4

t.o
t.o
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
oom
oom

t.o
t.o
oom
oom

oom
oom
oom
oom

q14

t.o
t.o
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

oom
oom
oom
oom

q5

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

5,821
4,094
50,677
56,190

4,123
4,140
55,574
56,655

209,392
215,313
oom
oom

q15

t.o
t.o
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

oom
oom
oom
oom

q6

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

298,735
294,301
t.o
t.o

oom
oom
oom
oom

q16

t.o
t.o
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
oom
oom

t.o
t.o
oom
oom

oom
oom
oom
oom

q7

t.o
t.o
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

oom
oom
oom
oom

q17

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

1,136,916
1,129,012
t.o
t.o

oom
oom
oom
oom

q8

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

572,022
409,532
1,624,001
t.o

373,760
433,688
t.o
t.o

oom
oom
oom
oom

q18

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

oom
oom
oom
oom

q9

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

t.o
t.o
t.o
t.o

oom
oom
oom
oom

q19

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

424,270
505,182
t.o
t.o

oom
oom
oom
oom

q10

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

1,489,844
1,132,153
t.o
t.o

638,954
685,080
t.o
t.o

oom
oom
oom
oom

q20

518,046
578,489
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

258,392
192,987
t.o
t.o

140,471
147,731
t.o
t.o

oom
oom
oom
oom

Table 56: Query answers ﬁltering time in milliseconds: P-IAR semantics on Food Inspection dataset, non score-structured priority, p = 0.5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2

q2

t.o
t.o
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

127,720
108,651
t.o
t.o

10,951
10,183
338,905
335,875

2,279
2,402
45,735
48,008

q3

261,750
234,752
oom
oom

343,906
455,245
oom
oom

285,845
439,352
oom
oom

t.o
t.o
oom
oom

17,087
15,335
462,161
515,630

2,488
2,413
51,970
51,761

t.o
t.o
t.o
t.o

q4

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

105,088
100,982
t.o
t.o

oom
oom
oom
oom

q5

t.o
t.o
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

79,819
82,738
t.o
t.o

30,572
31,883
oom
oom

q6

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

76,534
76,293
t.o
t.o

19,567
19,615
oom
oom

Table 57: Query answers ﬁltering time in milliseconds: P-IAR semantics on Food Inspection dataset, non score-structured priority, p = 0.8.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2

q2

t.o
t.o
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

75,192
73,399
1,604,398
1,573,487

8,194
8,045
166,375
167,163

1,920
1,789
20,501
20,487

q3

307,572
254,078
oom
oom

193,201
501,702
oom
oom

189,749
409,094
oom
oom

t.o
t.o
oom
oom

14,586
13,097
332,746
330,634

2,328
2,253
30,513
29,338

24,217
27,237
40,853
41,119

q4

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

102,033
99,811
t.o
t.o

oom
oom
oom
oom

q5

t.o
t.o
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

82,275
76,368
t.o
t.o

25,947
26,993
oom
oom

q6

t.o
t.o
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

t.o
t.o
t.o
t.o

68,672
47,802
1,100,444
1,125,635

18,698
18,821
oom
oom

Table 58: Query answers ﬁltering time in milliseconds: P-IAR semantics on Physicians dataset, non score-structured priority, p = 0.5.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2

q1

745
924
1,458
2,782

1,485
1,539
1,629
2,769

2,268
1,664
1,681
2,827

3,128
2,868
2,257
3,617

814
827
1,460
2,840

799
751
1,330
2,660

803
797
2,231
2,714

q2

169
181
186
184

194
189
203
199

165
166
191
188

201
192
205
235

207
188
197
204

180
171
194
202

202
197
233
252

q3

413
506
537
575

493
517
514
593

469
487
586
703

2,027
4,682
1,603
4,974

541
548
635
644

563
513
644
603

723
660
775
822

q4

114,883
139,518
t.o
t.o

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

75,202
68,846
t.o
t.o

2,627
2,557
29,997
30,547

3,488
3,454
43,434
43,706

q5

253
296
303
294

267
263
284
278

248
224
298
260

364
359
374
409

303
295
322
323

237
213
264
270

257
286
314
318

q6

40,352
38,944
57,125
125,170

t.o
t.o
oom
oom

t.o
t.o
oom
oom

t.o
t.o
oom
oom

19,163
18,303
61,618
117,724

1,553
1,523
2,636
3,798

2,418
2,425
5,137
8,814

Table 59: Query answers ﬁltering time in milliseconds: P-IAR semantics on Physicians dataset, non score-structured priority, p = 0.8.

P1 Alg. 4 neg1
P1 Alg. 4 neg2
P2 Alg. 4 neg1
P2 Alg. 4 neg2
P1 Alg. 5 neg1
P1 Alg. 5 neg2
P2 Alg. 5 neg1
P2 Alg. 5 neg2
P1 Alg. 6 neg1
P1 Alg. 6 neg2
P2 Alg. 6 neg1
P2 Alg. 6 neg2
P1 Alg. 7 neg1
P1 Alg. 7 neg2
P2 Alg. 7 neg1
P2 Alg. 7 neg2
P1 Alg. 8 neg1
P1 Alg. 8 neg2
P2 Alg. 8 neg1
P2 Alg. 8 neg2
P1 Alg. 9 neg1
P1 Alg. 9 neg2
P2 Alg. 9 neg1
P2 Alg. 9 neg2
P1 Alg. 10 neg1
P1 Alg. 10 neg2
P2 Alg. 10 neg1
P2 Alg. 10 neg2

q1

736
870
1,051
2,044

1,365
1,405
1,256
2,070

1,443
1,444
1,234
2,107

2,406
2,349
1,692
2,697

753
752
1,126
2,019

770
719
1,076
2,002

753
769
1,809
2,197

q2

164
178
151
144

204
171
163
170

154
162
173
155

171
182
165
180

176
173
160
161

163
158
155
163

210
198
206
206

q3

360
398
340
393

440
441
400
366

409
426
444
457

1,549
1,588
851
1,785

507
464
463
450

449
428
458
507

504
464
522
580

q4

102,410
114,909
t.o
t.o

oom
oom
oom
oom

oom
oom
oom
oom

oom
oom
oom
oom

64,475
65,724
t.o
t.o

2,696
2,569
21,475
22,318

3,416
3,413
30,667
31,242

q5

217
241
240
239

258
268
231
245

251
251
226
263

278
301
260
286

238
253
223
234

196
232
185
223

239
243
283
262

q6

30,879
32,014
38,912
90,522

t.o
t.o
oom
oom

t.o
t.o
oom
oom

t.o
t.o
oom
oom

14,787
16,339
38,571
84,204

1,332
1,325
1,951
2,792

1,856
1,889
3,311
4,771

Table 60: Query answers ﬁltering time in milliseconds: C-IAR semantics on u1c1, non score-structured priority, p = 0.8.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2
Alg. 8 neg1
Alg. 8 neg2
Alg. 9 neg1
Alg. 9 neg2
Alg. 10 neg1
Alg. 10 neg2

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2
Alg. 8 neg1
Alg. 8 neg2
Alg. 9 neg1
Alg. 9 neg2
Alg. 10 neg1
Alg. 10 neg2

q1

oom
oom

oom
oom

oom
oom

oom
oom

t.o
t.o

t.o
t.o

oom
oom

q11

42
46

76
67

74
75

122
65

53
43

66
54

75
77

q2

53
64

96
87

95
97

90
108

77
85

67
72

89
85

q12

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q3

24
24

9
10

62
55

51
53

36
35

33
38

10
9

q13

55
149

80
75

92
92

203
107

66
70

69
69

99
106

q4

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

oom
t.o

t.o
t.o

q14

97
103

186
179

164
175

225
144

100
107

104
107

147
165

q5

29
27

10
9

54
54

49
50

31
36

33
65

8
12

q6

28
27

10
12

59
54

49
53

34
31

36
62

11
24

q15

q16

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q7

28
29

8
9

44
49

38
46

28
28

32
37

9
15

q17

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
oom

q8

24
26

9
8

49
45

39
40

30
30

33
33

9
15

q18

57
60

78
97

86
85

66
94

74
86

56
52

83
79

q9

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
oom

q19

27
30

12
9

42
52

37
43

29
33

32
32

7
8

q10

47
45

75
82

84
88

133
72

51
53

52
53

78
75

q20

22
24

11
9

49
48

36
40

33
32

35
38

8
10

Table 61: Query answers ﬁltering time in milliseconds: C-IAR semantics on u1c50, non score-structured priority, p = 0.8.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2
Alg. 8 neg1
Alg. 8 neg2
Alg. 9 neg1
Alg. 9 neg2
Alg. 10 neg1
Alg. 10 neg2

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2
Alg. 8 neg1
Alg. 8 neg2
Alg. 9 neg1
Alg. 9 neg2
Alg. 10 neg1
Alg. 10 neg2

q1

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
oom

q11

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q2

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q12

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q3

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
oom

q13

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q4

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q14

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q5

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
oom

q15

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q6

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q16

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q7

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
oom

q17

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
oom

q8

43
41

18
17

59
60

61
51

46
40

34
35

21
24

q9

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q18

q19

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

35
40

18
18

54
52

59
49

35
34

34
34

20
22

q10

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

165
162

t.o
oom

q20

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
oom

Table 62: Query answers ﬁltering time in milliseconds: C-IAR semantics on u20c1, non score-structured priority, p = 0.8.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2
Alg. 8 neg1
Alg. 8 neg2
Alg. 9 neg1
Alg. 9 neg2
Alg. 10 neg1
Alg. 10 neg2

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2
Alg. 8 neg1
Alg. 8 neg2
Alg. 9 neg1
Alg. 9 neg2
Alg. 10 neg1
Alg. 10 neg2

q1

oom
oom

oom
oom

oom
oom

oom
oom

t.o
t.o

t.o
t.o

oom
oom

q11

2,583
3,057

3,236
2,703

2,847
2,845

3,364
3,441

62,942
71,959

2,523
2,380

2,558
2,353

q2

oom
oom

oom
oom

oom
oom

oom
oom

t.o
t.o

t.o
t.o

oom
oom

q12

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

t.o
t.o

q3

43
50

29
23

74
72

61
67

42
41

41
48

24
25

q13

oom
oom

oom
oom

oom
oom

oom
oom

t.o
oom

oom
oom

oom
oom

q4

oom
oom

oom
oom

oom
oom

oom
oom

t.o
t.o

t.o
t.o

oom
oom

q14

t.o
t.o

oom
t.o

oom
oom

t.o
t.o

t.o
t.o

t.o
t.o

oom
oom

q5

40
47

28
23

66
61

56
53

39
49

42
49

24
22

q15

t.o
t.o

oom
t.o

oom
t.o

oom
oom

t.o
t.o

t.o
t.o

t.o
oom

q6

42
47

31
27

72
65

55
65

40
42

41
39

28
24

q16

oom
oom

oom
oom

oom
oom

oom
oom

t.o
t.o

t.o
t.o

oom
oom

q7

oom
oom

oom
oom

oom
oom

oom
oom

t.o
t.o

t.o
t.o

oom
oom

q17

oom
oom

oom
oom

oom
oom

oom
oom

oom
oom

t.o
t.o

oom
oom

q8

96,785
115,392

oom
oom

oom
oom

oom
oom

12,488
12,771

12,603
12,904

15,380
15,060

q18

oom
oom

oom
oom

oom
oom

oom
oom

t.o
t.o

t.o
t.o

oom
oom

q9

oom
oom

oom
oom

oom
oom

oom
oom

t.o
t.o

t.o
t.o

oom
oom

q19

496
665

507
621

536
593

493
570

56,322
79,428

63,041
71,052

203
211

q10

oom
oom

oom
oom

oom
oom

oom
oom

t.o
t.o

t.o
t.o

oom
oom

q20

43
45

23
24

59
69

61
62

51
41

45
44

24
22

Table 63: Query answers ﬁltering time in milliseconds: C-IAR semantics on u20c50, non score-structured priority, p = 0.8: All queries ran
out of time or memory.

Table 64: Query answers ﬁltering time in milliseconds: C-IAR semantics on Food Inspection dataset, non score-structured priority, p = 0.5
and p = 0.8: All queries ran out of time.

Table 65: Query answers ﬁltering time in milliseconds: C-IAR semantics on Physicians dataset, non score-structured priority, p = 0.5.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2
Alg. 8 neg1
Alg. 8 neg2
Alg. 9 neg1
Alg. 9 neg2
Alg. 10 neg1
Alg. 10 neg2

q1

797,305
804,183

oom
oom

oom
oom

oom
oom

657,545
687,463

568,202
634,418

oom
oom

q2

224
204

211
237

202
204

259
247

219
247

225
217

251
244

q3

1,308
1,208

1,733
1,256

1,924
1,378

8,675
7,928

1,404
1,459

1,341
1,332

1,282
1,333

q4

oom
oom

oom
oom

oom
oom

oom
oom

t.o
t.o

t.o
oom

oom
t.o

q5

358
342

308
306

274
367

594
665

2,470
2,585

284
288

343
325

q6

t.o
t.o

oom
oom

oom
oom

oom
oom

t.o
t.o

766,899
784,288

oom
oom

Table 66: Query answers ﬁltering time in milliseconds: C-IAR semantics on Physicians dataset, non score-structured priority, p = 0.8.

Alg. 4 neg1
Alg. 4 neg2
Alg. 5 neg1
Alg. 5 neg2
Alg. 6 neg1
Alg. 6 neg2
Alg. 7 neg1
Alg. 7 neg2
Alg. 8 neg1
Alg. 8 neg2
Alg. 9 neg1
Alg. 9 neg2
Alg. 10 neg1
Alg. 10 neg2

q1

756,542
610,388

oom
oom

oom
oom

oom
oom

497,829
499,306

457,160
474,115

510,679
511,448

q2

159
162

166
198

155
159

185
193

168
177

162
161

197
179

q3

618
584

643
651

712
695

2,372
2,303

700
687

681
674

695
639

q4

oom
t.o

oom
oom

oom
oom

oom
oom

oom
oom

oom
oom

oom
oom

q5

274
620

236
249

238
254

317
366

269
268

236
197

228
220

q6

oom
oom

oom
oom

oom
oom

oom
oom

oom
oom

597,294
601,419

oom
oom

Table 67: Query answers ﬁltering time in milliseconds: X-brave semantics (X ∈ {P,C}) on u1c1, score-structured priority, n = 5.

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
P2 Alg. 7
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
P2 Alg. 7
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

q1

307
840
oom

145
327
t.o

157
267
t.o

861
1,049
t.o

288
438
oom

q11

33
37
28

7
14
6

51
51
52

41
34
44

43
25
26

q2

49
62
51

72
87
79

83
89
102

73
71
80

61
43
57

q12

52
64
oom

88
97
t.o

106
101
t.o

85
64
t.o

67
39
oom

q3

27
34
23

6
9
6

43
58
39

38
39
40

38
28
24

q13

38
54
38

76
73
117

82
79
94

58
67
94

48
36
43

q4

594
687
2,959

282
333
1,664

537
657
1,809

2,336
2,488
8,967

708
576
2,848

q14

39
51
97

62
66
374

46
64
404

52
55
402

54
34
93

q5

27
33
24

6
8
5

42
55
39

38
37
36

32
26
24

q15

206
680
oom

87
180
t.o

81
176
t.o

197
327
t.o

244
475
oom

q6

26
39
23

6
10
7

43
56
44

37
37
40

36
30
25

q16

2,502
9,013
oom

387
814
t.o

354
562
t.o

8,804
10,457
t.o

2,821
6,078
oom

q7

27
36
23

6
8
8

35
52
41

30
35
38

29
27
25

q17

28
27
25

5
8
6

38
51
35

34
28
29

30
27
22

q8

22
29
26

6
7
5

34
43
40

32
32
32

32
25
20

q18

58
76
100

64
96
258

96
126
251

92
88
287

74
58
73

q9

222
808
oom

100
241
t.o

108
194
t.o

265
333
t.o

263
502
oom

q19

25
30
20

8
7
6

39
47
38

34
33
33

31
26
22

q10

27
31
20

6
9
7

35
40
40

36
33
34

33
25
20

q20

26
29
26

6
7
5

39
38
35

38
31
34

32
27
25

Table 68: Query answers ﬁltering time in milliseconds: X-brave semantics (X ∈ {P,C}) on u1c50, score-structured priority, n = 5.

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
P2 Alg. 7
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
P2 Alg. 7
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

q1

10,551
116,331
oom

1,669
10,795
oom

2,636
4,284
oom

404,796
244,229
oom

6,194
34,437
t.o

q11

229
848
oom

389
911
oom

770
1,326
oom

783
1,199
oom

235
361
oom

q2

2,384
15,534
oom

822
2,499
oom

977
2,214
oom

13,484
17,112
oom

1,623
4,123
oom

q3

719
4,407
t.o

162
613
t.o

141
563
t.o

539
803
t.o

774
3,177
t.o

q4

20,573
188,845
oom

5,158
6,913
oom

833,161
t.o
oom

t.o
t.o
oom

22,893
125,619
oom

q5

121
567
oom

81
247
oom

90
212
t.o

116
227
t.o

121
242
oom

q6

521
1,729
t.o

143
256
t.o

162
265
t.o

566
638
t.o

674
1,155
t.o

q12

724
2,387
oom

5,142
9,030
oom

t.o
t.o
oom

2,877
4,352
oom

618
1,061
oom

q13

448
1,853
oom

597
2,055
oom

2,585
3,453
oom

2,048
2,463
oom

360
821
oom

q14

269
889
t.o

352
1,338
oom

415
1,352
oom

1,071
1,586
oom

316
755
t.o

q15

1,403
8,200
oom

486
2,291
oom

622
1,866
oom

2,814
4,239
oom

1,534
5,620
t.o

q16

28,333
394,922
oom

2,445
33,909
oom

3,507
6,890
oom

1,156,965
732,151
oom

23,731
185,383
t.o

q7

618
2,722
oom

188
776
t.o

152
656
t.o

615
1,185
t.o

697
1,937
oom

q17

64
91
184,247

78
122
284,090

85
120
386,398

65
85
378,484

75
71
230,516

q8

35
42
30

16
20
17

46
67
63

50
46
53

43
34
30

q18

1,188
4,872
oom

1,030
2,558
oom

1,507
2,810
oom

7,262
10,581
oom

1,263
2,933
t.o

q9

1,755
11,555
oom

782
2,597
oom

1,790
2,818
oom

3,812
5,670
oom

1,874
6,422
oom

q19

35
41
30

16
19
16

41
54
73

53
53
52

41
31
38

q10

85
395
oom

115
509
t.o

123
402
t.o

97
339
t.o

95
204
oom

q20

339
1,342
t.o

103
260
t.o

84
248
t.o

211
378
t.o

412
1,002
t.o

Table 69: Query answers ﬁltering time in milliseconds: X-brave semantics (X ∈ {P,C}) on u20c1, score-structured priority, n = 5.

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
P2 Alg. 7
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
P2 Alg. 7
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

q1

2,507
3,763
oom

1,505
7,456
oom

1,642
2,250
oom

147,707
102,843
oom

2,268
2,179
oom

q11

125
159
26,894

146
218
t.o

190
183
t.o

199
215
t.o

135
115
27,450

q2

588
1,008
oom

453
785
oom

641
782
oom

2,790
2,666
oom

574
660
oom

q12

342
602
oom

4,012
2,749
oom

638,309
296,682
oom

2,270
1,666
oom

286
207
oom

q3

42
49
35

21
27
21

62
61
70

59
65
68

49
38
48

q13

218
332
oom

293
410
oom

589
586
oom

673
625
oom

206
231
t.o

q4

55,992
92,487
oom

215,321
272,131
oom

60,367
57,885
oom

t.o
t.o
oom

62,989
67,949
oom

q14

187
228
oom

190
304
t.o

212
325
t.o

553
622
t.o

176
215
oom

q5

39
49
39

22
26
19

61
66
76

67
73
72

47
38
44

q15

1,225
3,835
oom

541
1,379
oom

557
1,015
oom

5,397
5,834
oom

1,446
2,661
oom

q6

41
50
39

21
29
22

47
63
81

60
54
66

53
40
50

q16

20,571
111,282
oom

4,827
168,376
oom

7,994
8,694
oom

t.o
t.o
oom

20,437
69,086
oom

q7

93
141
12,360

110
159
t.o

90
93
t.o

215
254
t.o

124
117
15,635

q8

69
92
10,954

74
103
2,248

69
77
2,839

90
78
2,909

72
55
12,797

q17

77
119
164,799

97
147
t.o

93
132
t.o

111
127
t.o

93
91
203,992

q18

496
678
oom

394
756
oom

596
723
oom

2,370
2,500
oom

557
510
oom

q9

1,385
3,526
oom

856
1,757
oom

1,128
1,561
oom

18,955
13,574
oom

1,631
2,377
oom

q19

39
46
38

22
24
18

64
69
60

46
53
56

48
37
45

q10

94
167
oom

84
122
oom

77
99
t.o

101
136
t.o

111
105
oom

q20

39
49
36

22
26
18

60
54
69

68
53
65

47
37
47

Table 70: Query answers ﬁltering time in milliseconds: X-brave semantics (X ∈ {P,C}) on u20c50, score-structured priority, n = 5.

q1

t.o
t.o
t.o

1,079,684
t.o
oom

t.o
t.o
oom

t.o
t.o
oom

873,606
t.o
t.o

q11

9,486
44,109
t.o

t.o
t.o
oom

t.o
t.o
oom

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
P2 Alg. 7
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
t.o
P2 Alg. 7 329,047
oom
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

6,685
18,537
t.o

q2

307,731
t.o
t.o

77,677
278,309
oom

380,214
425,333
oom

t.o
t.o
oom

131,579
540,249
t.o

q12

64,460
404,484
oom

t.o
t.o
oom

t.o
t.o
oom

t.o
t.o
oom

35,444
126,519
oom

q3

2,627
11,618
oom

619
1,895
oom

677
1,520
oom

2,275
2,068
oom

2,758
8,941
oom

q13

21,536
120,828
t.o

t.o
t.o
oom

t.o
t.o
oom

t.o
1,149,801
oom

12,620
39,009
t.o

q4

t.o
t.o
t.o

oom
oom
oom

oom
oom
oom

oom
oom
oom

t.o
t.o
t.o

q14

6,557
30,006
oom

35,325
93,470
oom

39,953
76,455
oom

t.o
509,054
oom

7,185
22,722
t.o

q5

869
2,781
t.o

886
2,690
oom

737
2,020
oom

1,750
2,219
oom

218
338
oom

q6

5,397
24,334
t.o

420
1,248
oom

461
931
oom

2,017
1,883
oom

5,753
17,870
t.o

q15

q16

118,109
751,809
oom

20,947
61,256
oom

t.o
t.o
oom

t.o
t.o
oom

119,081
542,277
oom

t.o
t.o
t.o

oom
oom
oom

t.o
oom
oom

t.o
oom
oom

t.o
t.o
t.o

q7

2,441
8,479
oom

3,613
6,918
oom

3,303
4,390
oom

55,534
9,550
oom

2,553
6,415
oom

q17

2,507
9,194
oom

3,483
8,084
oom

4,883
5,291
oom

10,684
6,973
oom

3,638
10,300
oom

q8

736
2,642
oom

347
1,160
oom

350
908
oom

1,013
1,407
oom

713
1,715
oom

q18

101,228
599,377
t.o

181,965
623,553
oom

338,768
445,524
oom

t.o
t.o
oom

104,919
391,723
t.o

q9

356,957
t.o
t.o

t.o
t.o
oom

t.o
t.o
oom

t.o
t.o
oom

324,439
1,351,425
t.o

q19

2,346
8,081
oom

3,614
8,965
oom

3,363
6,523
oom

5,722
6,121
oom

53,263
278,151
t.o

q10

1,938
6,826
t.o

1,469
4,515
oom

1,319
2,870
oom

4,443
4,438
oom

1,541
3,438
oom

q20

1,802
5,520
oom

291
1,070
oom

292
791
oom

1,196
1,272
oom

1,969
4,349
oom

Table 71: Query answers ﬁltering time in milliseconds: X-brave semantics (X ∈ {P,C}) on Food Inspection dataset, score-structured priority,
n = 2.

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
P2 Alg. 7
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

q2

1,614
15,946
t.o

1,199
6,552
t.o

1,614
4,966
t.o

2,359
6,613
t.o

7,168
200,413
t.o

q3

1,069
10,654
t.o

868
5,133
t.o

712
4,000
t.o

809
4,870
t.o

1,050
11,247
t.o

q4

44,300
1,365,912
t.o

t.o
t.o
oom

t.o
t.o
oom

249,049
220,270
oom

t.o
t.o
t.o

q5

14,103
390,684
t.o

t.o
t.o
oom

t.o
t.o
oom

42,455
46,928
oom

1,018,733
t.o
t.o

q6

14,281
394,296
t.o

t.o
t.o
oom

t.o
t.o
oom

282,314
125,668
oom

839,243
t.o
t.o

Table 72: Query answers ﬁltering time in milliseconds: X-brave semantics (X ∈ {P,C}) on Food Inspection dataset, score-structured priority,
n = 5.

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
P2 Alg. 7
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

q2

579
2,727
oom

556
1,961
t.o

608
1,840
t.o

1,389
2,598
t.o

1,052
8,737
t.o

q3

359
1,654
oom

330
1,696
t.o

403
1,381
t.o

442
1,642
t.o

398
1,936
oom

q4

11,723
252,997
t.o

t.o
t.o
oom

t.o
t.o
oom

181,016
137,571
oom

762,129
t.o
t.o

q5

4,683
80,954
t.o

t.o
t.o
oom

t.o
t.o
oom

21,054
25,956
oom

362,507
t.o
t.o

q6

4,984
83,835
oom

t.o
t.o
oom

t.o
t.o
oom

131,243
90,039
oom

932,798
t.o
oom

Table 73: Query answers ﬁltering time in milliseconds: X-brave semantics (X ∈ {P,C}) on Physicians dataset, score-structured priority,
n = 2.

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
P2 Alg. 7
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

q1

417
804
252,694

268
502
oom

272
466
oom

362
566
oom

383
565
192,429

q2

141
142
179

166
163
632

154
146
624

166
193
764

135
157
164

q3

350
379
550

326
333
t.o

313
281
t.o

997
972
t.o

335
309
544

q4

12,799
326,594
oom

1,730
2,961
t.o

t.o
t.o
t.o

42,544
36,923
t.o

8,192
225,170
oom

q5

224
213
284

214
221
551

211
201
550

281
304
846

211
207
238

q6

4,009
8,684
t.o

11,263
10,833
oom

245,804
241,030
oom

559,923
546,199
oom

3,419
5,963
t.o

Table 74: Query answers ﬁltering time in milliseconds: X-brave semantics (X ∈ {P,C}) on Physicians dataset, score-structured priority,
n = 5.

P1 Alg. 4
P2 Alg. 4
C Alg. 4

P1 Alg. 5
P2 Alg. 5
C Alg. 5

P1 Alg. 6
P2 Alg. 6
C Alg. 6

P1 Alg. 7
P2 Alg. 7
C Alg. 7

P1 Alg. 8
P2 Alg. 8
C Alg. 8

q1

393
535
181,284

319
423
t.o

248
391
oom

358
538
oom

288
496
154,076

q2

129
140
147

158
138
434

138
129
197

160
139
192

129
160
143

q3

293
275
388

284
298
oom

277
249
oom

613
580
oom

275
287
332

q4

11,811
208,549
oom

1,428
2,478
t.o

t.o
t.o
t.o

32,414
35,973
t.o

6,834
158,858
oom

q5

215
198
225

213
207
369

213
198
331

258
240
491

187
200
206

q6

2,764
3,808
t.o

3,057
2,675
t.o

70,993
71,922
t.o

120,748
129,868
t.o

2,162
3,743
t.o

Table 75: Query answers ﬁltering time in milliseconds: P-brave semantics on u1c1, non score-structured priority, p = 0.8.

P1 Alg. 4
P2 Alg. 4

P1 Alg. 5
P2 Alg. 5

P1 Alg. 6
P2 Alg. 6

P1 Alg. 7
P2 Alg. 7

P1 Alg. 8
P2 Alg. 8

P1 Alg. 4
P2 Alg. 4

P1 Alg. 5
P2 Alg. 5

P1 Alg. 6
P2 Alg. 6

P1 Alg. 7
P2 Alg. 7

P1 Alg. 8
P2 Alg. 8

q1

397
1,255

160
424

192
302

840
1,195

259
575

q11

44
49

55
62

60
71

58
61

41
35

q2

54
60

78
82

89
92

69
80

40
38

q12

92
159

115
198

137
187

128
185

78
133

q3

35
32

10
7

46
55

39
54

31
26

q4

1,364
2,295

358
550

308
414

11,923
16,628

1,277
1,741

q13

q14

47
58

67
85

92
90

67
73

51
42

47
51

58
61

56
62

66
61

48
41

q5

28
33

7
7

49
52

44
51

25
25

q15

261
913

103
249

92
238

269
488

253
628

q6

36
35

8
10

43
53

53
45

33
28

q16

3,520
20,780

541
1,272

427
843

17,222
23,163

3,230
12,592

q7

27
39

7
9

39
51

41
40

29
24

q17

49
79

69
114

68
97

66
100

58
58

q8

31
29

6
8

43
48

39
43

26
24

q18

52
58

75
71

100
90

63
57

49
43

q9

262
1,054

126
321

120
266

307
491

250
630

q19

33
39

8
6

38
53

40
48

31
27

q10

40
41

54
62

55
57

51
51

38
36

q20

33
34

7
7

39
44

35
51

29
27

Table 76: Query answers ﬁltering time in milliseconds: P-brave semantics on u1c50, non score-structured priority, p = 0.8.

q1

76,604
t.o

1,609
11,522

1,901
4,492

385,551
313,006

38,049
775,770

q11

964
8,742

487
2,661

549
2,210

1,395
3,040

884
5,635

P1 Alg. 4
P2 Alg. 4

P1 Alg. 5
P2 Alg. 5

P1 Alg. 6
P2 Alg. 6

P1 Alg. 7
P2 Alg. 7

P1 Alg. 8
P2 Alg. 8

P1 Alg. 4
P2 Alg. 4

P1 Alg. 5
P2 Alg. 5

P1 Alg. 6
P2 Alg. 6

P1 Alg. 7
P2 Alg. 7

P1 Alg. 8
P2 Alg. 8

q2

8,961
197,859

903
3,966

1,074
3,097

25,472
24,044

7,940
144,690

q3

2,967
49,562

279
1,796

243
1,789

1,220
2,909

q4

240,665
t.o

6,914
8,716

97,471
103,962

t.o
t.o

3,034
38,164

231,807
t.o

q5

506
3,562

199
1,422

213
1,476

282
1,804

179
1,013

q12

2,339
34,336

792
3,834

1,104
3,149

5,030
5,318

2,127
18,837

q13

1,538
15,951

561
3,015

715
2,614

2,782
4,853

1,405
9,954

q14

1,428
12,780

538
3,363

539
2,955

2,305
4,647

1,438
10,758

q15

5,437
106,820

491
2,960

471
2,371

3,877
7,612

5,208
82,760

q6

3,716
72,359

299
1,595

359
1,425

1,904
3,002

3,797
62,872

q16

140,907
t.o

2,799
18,187

3,161
8,684

763,415
1,005,227

137,721
t.o

q7

3,252
51,430

408
2,186

369
1,809

1,802
3,422

3,321
40,728

q17

208
1,289

236
1,489

230
1,510

227
1,530

201
1,065

q8

37
41

20
19

68
61

50
59

39
35

q9

6,690
151,165

736
3,377

829
3,020

7,640
9,397

6,191
99,190

q18

q19

5,254
107,192

782
3,828

874
3,527

8,986
13,670

5,357
90,232

38
38

20
22

59
70

60
63

41
35

q10

393
2,961

326
2,340

308
1,814

307
2,082

298
1,289

q20

2,133
28,696

248
1,606

242
1,831

776
2,587

2,152
23,684

Table 77: Query answers ﬁltering time in milliseconds: P-brave semantics on u20c1, non score-structured priority, p = 0.8.

P1 Alg. 4
P2 Alg. 4

P1 Alg. 5
P2 Alg. 5

P1 Alg. 6
P2 Alg. 6

P1 Alg. 7
P2 Alg. 7

P1 Alg. 8
P2 Alg. 8

P1 Alg. 4
P2 Alg. 4

P1 Alg. 5
P2 Alg. 5

P1 Alg. 6
P2 Alg. 6

P1 Alg. 7
P2 Alg. 7

P1 Alg. 8
P2 Alg. 8

q1

2,989
7,913

1,536
9,325

1,443
3,554

151,404
149,426

2,466
4,329

q11

93
125

150
135

194
194

134
183

91
116

q2

740
1,716

508
1,018

699
1,261

3,143
3,817

630
1,413

q3

44
54

27
29

70
79

61
70

45
49

q4

110,172
325,824

388,599
432,874

23,747
26,823

t.o
t.o

102,925
286,345

q5

45
48

24
28

67
83

60
144

41
51

q12

262
326

514
490

646
623

1,257
566

207
220

q13

201
427

227
576

334
557

628
932

175
399

q14

180
322

152
364

153
349

675
1,015

169
309

q15

1,821
8,554

587
1,908

549
1,646

7,071
8,549

1,736
7,742

q6

42
53

29
30

70
74

61
64

45
56

q16

29,830
294,323

6,726
125,654

4,065
9,414

t.o
t.o

27,397
226,295

q7

161
297

176
278

165
276

362
604

159
255

q17

128
254

135
260

150
265

169
333

119
189

q8

116
182

102
109

98
106

108
140

106
183

q18

525
1,176

436
1,064

547
1,244

2,251
2,922

504
1,046

q9

1,928
7,024

956
2,316

1,025
2,064

25,246
23,120

1,903
6,045

q19

59
73

97
113

99
110

77
105

85
97

q10

179
402

148
268

142
259

284
491

151
272

q20

43
51

28
31

83
78

69
75

44
48

Table 78: Query answers ﬁltering time in milliseconds: P-brave semantics on u20c50, non score-structured priority, p = 0.8.

P1 Alg. 4
P2 Alg. 4

q1

t.o
t.o

P1 Alg. 5 454,783
oom
P2 Alg. 5

P1 Alg. 6
P2 Alg. 6

P1 Alg. 7
P2 Alg. 7

P1 Alg. 8
P2 Alg. 8

P1 Alg. 4
P2 Alg. 4

P1 Alg. 5
P2 Alg. 5

t.o
oom

t.o
oom

t.o
t.o

q11

t.o
t.o

81,959
oom

P1 Alg. 6
90,046
P2 Alg. 6 104,284

P1 Alg. 7
t.o
P2 Alg. 7 548,152

P1 Alg. 8
P2 Alg. 8

t.o
t.o

q2

t.o
t.o

148,666
oom

414,493
1,327,525

t.o
oom

t.o
t.o

q12

t.o
t.o

170,737
oom

944,559
477,846

t.o
oom

t.o
t.o

q3

t.o
t.o

29,475
67,768

28,894
68,822

441,774
103,019

t.o
t.o

q13

t.o
t.o

100,746
oom

99,698
147,456

t.o
t.o

t.o
t.o

q4

t.o
oom

oom
oom

oom
oom

oom
oom

t.o
oom

q14

t.o
t.o

82,533
oom

65,895
329,404

t.o
t.o

t.o
t.o

q5

169,112
383,970

29,508
63,477

28,485
62,387

67,352
57,928

26,840
51,436

q15

t.o
t.o

74,398
oom

49,290
77,148

t.o
t.o

t.o
t.o

q6

t.o
t.o

60,068
oom

42,882
64,076

q7

t.o
t.o

68,698
oom

40,278
66,984

423,566
162,611

481,548
124,714

q8

849,127
t.o

31,326
62,022

30,020
62,918

214,477
71,225

t.o
t.o

t.o
t.o

822,890
1,656,866

q16

t.o
oom

t.o
oom

t.o
oom

t.o
oom

t.o
oom

q17

1,088,311
t.o

61,951
oom

48,924
72,578

152,512
79,918

1,123,245
t.o

q18

t.o
t.o

116,953
oom

723,761
823,090

t.o
oom

t.o
t.o

q9

t.o
t.o

130,085
oom

128,107
395,301

t.o
t.o

t.o
t.o

q19

q10

t.o
t.o

62,267
oom

48,829
62,624

315,818
82,829

t.o
t.o

q20

240,911
1,262,536

1,549,389
t.o

58,284
oom

30,509
65,734

72,510
59,565

30,185
63,297

27,915
63,244

195,509
99,810

t.o
t.o

1,483,635
t.o

Table 79: Query answers ﬁltering time in milliseconds: P-brave semantics on Food Inspection dataset, non score-structured priority, p = 0.5.

P1 Alg. 4
P2 Alg. 4

P1 Alg. 5
P2 Alg. 5

P1 Alg. 6
P2 Alg. 6

P1 Alg. 7
P2 Alg. 7

P1 Alg. 8
P2 Alg. 8

q2

2,459
32,780

1,516
9,158

1,745
6,739

5,065
8,797

19,322
912,611

q3

1,562
19,154

1,120
8,253

1,072
6,451

1,497
6,830

4,591
171,862

q4

102,546
t.o

t.o
t.o

t.o
t.o

t.o
201,527

t.o
t.o

q5

24,937
972,039

t.o
t.o

t.o
t.o

299,610
40,955

t.o
t.o

q6

25,255
724,142

t.o
t.o

t.o
t.o

345,944
127,389

t.o
t.o

Table 80: Query answers ﬁltering time in milliseconds: P-brave semantics on Food Inspection dataset, non score-structured priority, p = 0.8.

P1 Alg. 4
P2 Alg. 4

P1 Alg. 5
P2 Alg. 5

P1 Alg. 6
P2 Alg. 6

P1 Alg. 7
P2 Alg. 7

P1 Alg. 8
P2 Alg. 8

q2

1,985
18,540

1,569
8,368

2,083
7,140

7,332
8,562

7,523
269,523

q3

1,378
15,045

1,137
7,332

1,075
5,928

1,516
6,423

8,198
325,697

q4

97,898
t.o

t.o
t.o

t.o
t.o

1,338,550
172,565

t.o
t.o

q5

22,020
770,870

t.o
t.o

t.o
t.o

343,310
37,171

t.o
t.o

q6

22,788
587,688

t.o
t.o

t.o
t.o

272,466
125,197

t.o
t.o

Table 81: Query answers ﬁltering time in milliseconds: P-brave semantics on Physicians dataset, non score-structured priority, p = 0.5.

P1 Alg. 4
P2 Alg. 4

P1 Alg. 5
P2 Alg. 5

P1 Alg. 6
P2 Alg. 6

P1 Alg. 7
P2 Alg. 7

P1 Alg. 8
P2 Alg. 8

q1

515
1,679

326
802

309
707

489
894

477
1,096

q2

157
183

162
200

163
201

194
210

168
175

q3

420
486

363
443

339
442

1,908
1,543

436
455

q4

20,410
945,498

1,718
4,981

t.o
t.o

56,840
43,544

14,021
666,123

q5

240
282

229
284

292
349

333
356

260
267

q6

5,184
17,751

12,832
21,720

70,578
169,298

t.o
714,766

4,462
12,978

Table 82: Query answers ﬁltering time in milliseconds: P-brave semantics on Physicians dataset, non score-structured priority, p = 0.8.

P1 Alg. 4
P2 Alg. 4

P1 Alg. 5
P2 Alg. 5

P1 Alg. 6
P2 Alg. 6

P1 Alg. 7
P2 Alg. 7

P1 Alg. 8
P2 Alg. 8

q1

518
1,146

299
590

288
520

437
683

505
754

q2

153
141

173
148

152
151

205
173

155
133

q3

304
328

323
368

340
350

1,190
618

372
324

q4

18,676
572,030

1,938
3,626

t.o
t.o

51,486
39,094

13,521
482,667

q5

230
223

229
218

242
209

293
267

225
242

q6

4,523
13,392

4,781
5,879

72,969
69,396

t.o
117,518

3,694
10,377

Table 83: Query answers ﬁltering time in milliseconds: C-brave semantics on u1c1, non score-structured priority, p = 0.8.

q1

oom

t.o

t.o

t.o

t.o

q2

48

83

113

96

58

q11

q12

36

63

71

65

49

t.o

t.o

t.o

t.o

t.o

Alg. 4

Alg. 5

Alg. 6

Alg. 7

Alg. 8

Alg. 4

Alg. 5

Alg. 6

Alg. 7

Alg. 8

q3

27

7

55

47

39

q13

44

142

163

168

69

q4

oom

t.o

t.o

t.o

oom

q14

104

350

432

437

130

q5

25

7

55

50

34

q15

t.o

t.o

t.o

t.o

t.o

q6

31

8

52

57

34

q16

oom

t.o

t.o

t.o

t.o

q7

24

6

51

46

32

q17

oom

oom

oom

oom

oom

q8

24

6

50

41

31

q18

46

69

99

92

65

q9

oom

t.o

t.o

t.o

oom

q19

23

6

40

46

34

q10

46

50

73

72

61

q20

22

7

50

46

35

Table 84: Query answers ﬁltering time in milliseconds: C-brave semantics on u1c50, non score-structured priority, p = 0.8.

q1

oom

oom

oom

oom

oom

q11

t.o

oom

oom

oom

t.o

q2

t.o

oom

oom

oom

t.o

q12

t.o

oom

oom

oom

oom

q3

oom

oom

oom

oom

oom

q13

t.o

oom

oom

oom

t.o

q4

t.o

oom

oom

oom

t.o

q14

t.o

oom

oom

oom

t.o

q5

oom

oom

oom

oom

oom

q15

t.o

oom

oom

oom

t.o

q6

t.o

oom

oom

oom

t.o

q16

t.o

oom

oom

oom

t.o

q7

oom

oom

oom

oom

oom

q17

oom

oom

oom

oom

oom

q8

44

19

82

63

40

q18

t.o

oom

oom

oom

t.o

q9

t.o

oom

oom

oom

t.o

q19

35

19

83

69

38

Table 85: Query answers ﬁltering time in milliseconds: C-brave semantics on u20c1, non score-structured priority, p = 0.8.

q1

oom

oom

oom

oom

oom

q11

2,377

oom

oom

oom

2,374

q2

oom

oom

oom

oom

oom

q12

t.o

oom

oom

oom

t.o

q3

41

28

71

79

39

q13

oom

t.o

t.o

t.o

q4

oom

oom

oom

oom

oom

q14

oom

t.o

t.o

t.o

oom

oom

q5

38

27

90

77

38

q15

oom

oom

oom

oom

oom

q6

39

30

62

70

40

q16

oom

oom

oom

oom

oom

q7

oom

t.o

t.o

t.o

q8

15,324

2,337

2,736

3,255

oom

14,293

q17

oom

t.o

t.o

t.o

oom

q18

oom

oom

oom

oom

oom

q9

oom

oom

oom

oom

oom

q19

163

223

222

191

458

Alg. 4

Alg. 5

Alg. 6

Alg. 7

Alg. 8

Alg. 4

Alg. 5

Alg. 6

Alg. 7

Alg. 8

Alg. 4

Alg. 5

Alg. 6

Alg. 7

Alg. 8

Alg. 4

Alg. 5

Alg. 6

Alg. 7

Alg. 8

q10

oom

oom

oom

oom

oom

q20

oom

oom

oom

oom

oom

q10

oom

t.o

t.o

t.o

oom

q20

42

25

72

86

41

Table 86: Query answers ﬁltering time in milliseconds: C-brave semantics on u20c50, non score-structured priority, p = 0.8: All queries run
out of memory.

Table 87: Query answers ﬁltering time in milliseconds: C-brave semantics on Food Inspection dataset, non score-structured priority, both
p = 0.5 and p = 0.8: All queries run out of time or memory.

Table 88: Query answers ﬁltering time in milliseconds: C-brave semantics on Physicians dataset, non score-structured priority, p = 0.5.

Alg. 4

Alg. 5

Alg. 6

Alg. 7

Alg. 8

q1

544,428

t.o

oom

t.o

732,817

q2

194

1,263

528

1,330

199

q3

1,125

t.o

t.o

t.o

1,086

q4

oom

t.o

t.o

t.o

oom

q5

305

1,108

1,089

1,475

330

q6

t.o

oom

oom

oom

t.o

Table 89: Query answers ﬁltering time in milliseconds: C-brave semantics on Physicians dataset, non score-structured priority, p = 0.8.

Alg. 4

Alg. 5

Alg. 6

Alg. 7

Alg. 8

q1

454,796

oom

oom

t.o

643,129

q2

165

541

496

494

185

q3

577

oom

oom

oom

653

q4

t.o

t.o

t.o

t.o

oom

q5

267

386

370

453

286

q6

oom

t.o

t.o

t.o

t.o

E.3 Semantics Comparison w.r.t. Computation Time
The ﬁgures below compare the best running times (among all possible algorithms and encodings) for each semantics and
priority relation (none, score-structured with n = 2 or n = 5, not score-structured with p = 0.5 or p = 0.8) on two datasets of
the CQAPri benchmark as well as on the Food Inspection and Physicians datasets. The lower parts of bars correspond to the
times for handling self-inconsistent facts and trivial answers. The upper parts correspond to the remaining times (i.e., ﬁltering
answers that are not trivially true). An empty bar means that the query run out of time or memory for all possible algorithms
and encodings.

Figure 7: Best running times for each semantics and priority relation on Food Inspection dataset in milliseconds.

q2

0
0
0
,
2

0
0
0
,
1

0

0
0
0
,
2

0
0
0
,
1

0

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

q3

5
.
0
R
A
-
C

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

5
.
0
R
A
-
C

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

5
0
1
·

1

5
.
0

0

4
0
1
·

3

2

1

0

4
0
1
·

2

1

0

q4

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

q5

5
.
0
R
A
-
C

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

q6

5
.
0
R
A
-
C

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

5
.
0
R
A
-
C

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

6
0
1

4
0
1

2
0
1

0
0
2

0
0
1

0

0
0
0
,
1

0
0
5

0

Figure 8: Best running times for each semantics and priority relation on Physicians dataset in milliseconds.

q1 (log. scale)

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

q2

5
.
0
R
A
-
C

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

q3

5
.
0
R
A
-
C

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

5
.
0
R
A
-
C

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

0
0
0
,
2

0
0
0
,
1

0

0
0
3

0
0
2

0
0
1

0

6
0
1

3
0
1

0
0
1

q4

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

q5

5
.
0
R
A
-
C

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

5
.
0
R
A
-
C

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

q6 (log. scale)

R
A

2
R
A

2
R
A
I

2
e
v
a
r
b

5
R
A

5
R
A
I

5
e
v
a
r
b

5
.
0
R
A
-
P

5
.
0
R
A
I
-
P

5
.
0
e
v
a
r
b
-
P

5
.
0
R
A
-
C

5
.
0
R
A
I
-
C

5
.
0
e
v
a
r
b
-
C

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

Figure 9: Best running times for each semantics and priority relation on u5c1 (left) and u5c50 (right) in milliseconds.

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

0
0
4

0
0
2

0

0
0
2

0
0
1

0

0
1

5

0

q1

4
0
1
·

3

2

1

0

q2

0
0
0
,
6

0
0
0
,
4

0
0
0
,
2

0

q3

4
0
1

2
0
1

0
0
1

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

(log. scale)

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

0
0
0
,
2

0
0
0
,
1

0

0
1

5

0

5
1

0
1

5

0

(log. scale)

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

(log. scale)

q4

4
0
1

2
0
1

0
0
1

q5

0
0
5
,
1
0
0
0
,
1

0
0
5

0

q6

4
0
1

2
0
1

0
0
1

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

0
0
2

0
0
1

0

0
5
1

0
0
1

0
5

0

0
0
2

0
0
1

0

(log. scale)

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

(log. scale)

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

(log. scale)

q7

q8

q9

4
0
1

2
0
1

0
0
1

4
0
1

2
0
1

0
0
1

6
0
1

3
0
1

0
0
1

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

0
8

0
6

0
4

0
2

0

0
0
2

0
5
1

0
0
1

0
5

0

0
0
2

0
0
1

0

(log. scale)

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

(log. scale)

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

(log. scale)

q10

4
0
1

2
0
1

0
0
1

q11

4
0
1

2
0
1

0
0
1

q12

6
0
1

3
0
1

0
0
1

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

0
0
1

0
5

0

0
0
1

0
8

0
6

0
4

0
2

0

0
0
2

0
0
1

0

(log. scale)

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

(log. scale)

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

(log. scale)

q13

4
0
1

2
0
1

0
0
1

q14

4
0
1

2
0
1

0
0
1

q15

6
0
1

3
0
1

0
0
1

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

0
0
0
,
1

0
0
5

0

0
4

0
2

0

0
5
1

0
0
1

0
5

0

q16

4
0
1
·
8

6

4

2

0

q17

4
0
1

2
0
1

0
0
1

q18

6
0
1

3
0
1

0
0
1

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

(log. scale)

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

(log. scale)

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

0
1

5

0

0
1

5

0

q19

0
0
0
,
4

0
0
0
,
2

0

q20

4
0
1

2
0
1

0
0
1

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

(log. scale)

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

R
A

5
R
A

5
R
A
I

5
e
v
a
r
b

8
.
0
R
A
-
P

8
.
0
R
A
I
-
P

8
.
0
e
v
a
r
b
-
P

8
.
0
R
A
-
C

8
.
0
R
A
I
-
C

8
.
0
e
v
a
r
b
-
C

E.4 Running Times w.r.t. the Proportion of Facts Involved in Some Conﬂicts or Size on CQAPri

Benchmark

In this section we consider the evolution of running time when the proportion of facts involved in some conﬂict or the data size
grows for the CQAPri benchmark. We ﬁx one parameter X or Y in uXcY and look at the running time evolution when the
other parameter increases. Remember that CQAPri benchmark ensures that uXcY ⊆ uXcY(cid:48) for Y ≤ Y (cid:48) and uXcY ⊆ uX(cid:48)cY
for X ≤ X (cid:48). When ﬁxing the data size we choose X = 20, i.e., about 2M facts, and when ﬁxing the proportion of facts in
conﬂicts we choose Y = 20, i.e., about 30% of facts in conﬂict.

We present the results for S-AR, and X-Sem in the case where the priority relation is score-structured, with ϕP1-max and neg1
encoding variants. For the X-IAR semantics, we choose to consider the three algorithms speciﬁc to X-IAR (or X-IAR and
X-brave) and only the ﬁrst generic algorithm Simple for comparison (it was one of the two methods to compute X-IAR answers
under optimal repairs in (Bourgaux 2016)), as these algorithms are not really well-suited for X-IAR.

For readability, for each semantics and algorithm we ﬁrst plot all queries, then repeat those with lower running time separately
with ﬁtting scales. When a query does not occur in the left-most graphic, it means that it runs out of time or memory for all
considered datasets.

Figure 10: Query answers ﬁltering time (in milliseconds) w.r.t. percentage of facts in conﬂicts for u20cY.

·105

3

2

1

0

0

10

20

30

40

50

10

20

30

40

50

10

20

30

40

50

·106

1.5

1

0.5

0

0

·106

1.5

1

0.5

0

0

·106

1.5

1

0.5

0

0

(a) S-AR Alg. 4 (P1 and neg1 encoding).
·104

q2
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q6
q8
q10
q12
q14
q16
q18
q20

0

10

20

30

40

50

(b) S-AR Alg. 5 (P1 and neg1 encoding).
·104

q3
q6
q8
q14
q16
q19

q5
q7
q10
q15
q17
q20

0

10

20

30

40

50

(c) S-AR Alg. 6 (P1 and neg1 encoding).
·104

q3
q5
q7
q10
q16
q19

q4
q6
q8
q14
q17
q20

0

10

20

30

40

50

(d) S-AR Alg. 7 (P1 and neg1 encoding).
·104

q5
q7
q10
q14
q19

q3
q6
q8
q11
q17
q20

q1
q3
q5
q7
q9
q12
q15
q17
q19

q1
q3
q5
q7
q9
q11
q14
q16
q18
q20

q1
q3
q5
q7
q9
q11
q14
q16
q18
q20

q1
q3
q6
q8
q10
q12
q14
q17
q19

q2
q4
q6
q8
q10
q14
q16
q18
q20

q2
q4
q6
q8
q10
q13
q15
q17
q19

q2
q4
q6
q8
q10
q13
q15
q17
q19

q2
q5
q7
q9
q11
q13
q15
q18
q20

4

3

2

1

0

6

4

2

0

3

2

1

0

8

6

4

2

0

2,500

2,000

1,500

1,000

500

0

0

400

300

200

100

0

0

10

20

30

40

50

10

20

30

40

50

0

10

20

30

40

50

400

300

200

100

600

400

200

q3
q6
q8
q11
q14
q19

q5
q7
q10
q13
q17
q20

q3
q6
q8
q14
q19

q5
q7
q10
q17
q20

q3
q6
q8
q14
q19

q5
q7
q10
q17
q20

q5
q7
q10
q19

q3
q6
q8
q17
q20

10

20

30

40

50

0

10

20

30

40

50

0

10

20

30

40

50

Figure 11: Query answers ﬁltering time (in milliseconds) w.r.t. data size for uXc20.

(a) S-AR Alg. 4 (P1 and neg1 encoding).
·104

·105

1.5

1

0.5

0

0

0.5

1

1.5

2
·106

·106

1.5

0

0.5

1

1.5

2
·106

·106

0

0.5

1

1.5

2
·106

·106

1

0.5

0

1.5

1

0.5

0

1.2

1

0.8

0.6

0.4

0.2

0

q2
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q6
q8
q10
q12
q14
q16
q18
q20

0

0.5

1

1.5

2
·106

(b) S-AR Alg. 5 (P1 and neg1 encoding).
·104

q1
q3
q6
q8
q10
q13
q15
q17
q19

q2
q5
q7
q9
q11
q14
q16
q18
q20

0

0.5

1

1.5

2
·106

(c) S-AR Alg. 6 (P1 and neg1 encoding).
·104

q1
q4
q6
q8
q14
q17
q19

q3
q5
q7
q10
q16
q18
q20

0

0.5

1

1.5

2
·106

(d) S-AR Alg. 7 (P1 and neg1 encoding).
·104

q3
q6
q8
q11
q14
q19

q5
q7
q10
q13
q17
q20

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q14
q16
q18
q20

q1
q3
q5
q7
q9
q11
q14
q16
q18
q20

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

q2
q4
q6
q8
q10
q13
q15
q17
q19

q2
q4
q6
q8
q10
q13
q15
q17
q19

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

2

1

0

8

6

4

2

0

6

4

2

0

6

4

2

0

3,000

2,000

1,000

0

2,000

1,000

0

6,000

4,000

2,000

0

3,000

2,000

1,000

0

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

q2
q5
q7
q9
q11
q14
q17
q19

q3
q6
q8
q10
q13
q15
q18
q20

q5
q7
q9
q14
q17
q19

q3
q6
q8
q10
q15
q18
q20

q3
q6
q8
q14
q17
q19

q5
q7
q10
q16
q18
q20

q3
q6
q8
q14
q19

q5
q7
q10
q17
q20

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

Figure 12: Query answers ﬁltering time (in milliseconds) w.r.t. percentage of facts in conﬂicts for u20cY with score-structured priority
relation.

(a) X-AR (X ∈ {P,C}) Alg. 4 (P1 and neg1 encoding).

10

20

30

40

50

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

·104

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

8

6

4

2

0

q3
q6
q8
q11
q13
q17
q19

q5
q7
q10
q12
q14
q18
q20

6,000

4,000

2,000

0

0

10

20

30

40

50

0

10

20

30

40

50

(b) X-AR (X ∈ {P,C}) Alg. 5 (P1 and neg1 encoding).

·104

q2
q5
q7
q10
q15
q18
q20

q3
q6
q8
q14
q17
q19

3,000

2,000

1,000

10

20

30

40

50

0

10

20

30

40

50

(c) X-AR (X ∈ {P,C}) Alg. 6 (P1 and neg1 encoding).

0

0

10

20

30

40

50

0

10

20

30

40

50

q2
q5
q7
q9
q11
q13
q15
q18
q20

·104

1

0.5

0

0

10

20

30

40

50

q3
q6
q8
q14
q19

q5
q7
q10
q17
q20

3,000

2,000

1,000

0

0

10

20

30

40

50

(d) X-AR (X ∈ {P,C}) Alg. 7 (P1 and neg1 encoding).

·104

q5
q7
q10
q19

q3
q6
q8
q17
q20

8,000

6,000

4,000

2,000

0

0

10

20

30

40

50

10

20

30

40

50

0

10

20

30

40

50

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

8

6

4

2

0

q2
q5
q7
q9
q11
q13
q15
q17
q19

5

4

3

2

1

0

q1
q3
q6
q8
q10
q12
q14
q17
q19

q1
q3
q6
q8
q10
q12
q14
q16
q18
q20

q3
q6
q8
q14
q19

q5
q7
q10
q17
q20

q5
q7
q10
q19

q3
q6
q8
q17
q20

q5
q7
q10
q19

q3
q6
q8
q17
q20

q3
q6
q10
q19

q5
q8
q17
q20

·106

1.5

1

0.5

0

0

·105

2.5

2

1.5

1

0.5

0

0

·105

6

4

2

0

·106

1.5

1

0.5

0

0

6

4

2

0

1

0.5

0

Figure 13: Query answers ﬁltering time (in milliseconds) w.r.t. data size for uXc20 with score-structured priority relation.

·105

·104

(a) X-AR (X ∈ {P,C}) Alg. 4 (P1 and neg1 encoding).

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

8

6

4

2

0

q1
q3
q6
q8
q10
q12
q14
q17
q19

q2
q5
q7
q9
q11
q13
q15
q18
q20

4,000

2,000

0

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

·105

(b) X-AR (X ∈ {P,C}) Alg. 5 (P1 and neg1 encoding).

·104

0

0.5

1

1.5

2
·106

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q6
q8
q10
q12
q14
q16
q18
q20

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

2

1

0

q1
q3
q6
q8
q14
q17
q19

q2
q5
q7
q10
q15
q18
q20

8,000

6,000

4,000

2,000

0

0

0.5

1

1.5

2
·106

(c) X-AR (X ∈ {P,C}) Alg. 6 (P1 and neg1 encoding).

·104

0

0.5

1

1.5

2
·106

q2
q5
q7
q9
q11
q13
q15
q17
q19

6

4

2

0

q5
q7
q10
q17
q19

q3
q6
q8
q14
q18
q20

3,000

2,000

1,000

0

0

0.5

1

1.5

2
·106

(d) X-AR (X ∈ {P,C}) Alg. 7 (P1 and neg1 encoding).

·104

0

0.5

1

1.5

2
·106

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

4

3

2

1

0

q3
q6
q8
q14
q19

q5
q7
q10
q17
q20

2,000

1,000

0

0

0.5

1

1.5

2
·106

·105

2

0

0.5

1

1.5

2
·106

·106

1.5

1

0.5

0

1.5

1

0.5

0

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

q3
q6
q8
q11
q13
q17
q19

q5
q7
q10
q12
q14
q18
q20

q3
q6
q8
q14
q17
q19

q2
q5
q7
q10
q15
q18
q20

q3
q6
q8
q14
q19

q5
q7
q10
q17
q20

q5
q7
q10
q19

q3
q6
q8
q17
q20

Figure 14: Query answers ﬁltering time (in milliseconds) w.r.t. percentage of facts in conﬂicts for u20cY with score-structured priority
relation.

10

20

30

40

50

10

20

30

40

50

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

(a) X-IAR (X ∈ {P,C}) Alg. 4 (P1 and neg1 encoding).
·104

·105

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

6

4

2

0

q3
q6
q8
q10
q13
q15
q19

q5
q7
q9
q11
q14
q17
q20

4

3

2

1

0

0

10

20

30

40

50

0

10

20

30

40

50

(b) X-IAR (X ∈ {P,C}) Alg. 8 (P1 and neg1 encoding).
·104

·105

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

5

4

3

2

1

0

q2
q5
q7
q9
q11
q14
q17
q19

q3
q6
q8
q10
q13
q15
q18
q20

3

2

1

0

0

10

20

30

40

50

0

10

20

30

40

50

(c) X-IAR (X ∈ {P,C}) Alg. 9 (P1 and neg1 encoding).
·104

·105

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

4

2

0

q2
q4
q6
q8
q10
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q14
q16
q18
q20

6

4

2

0

q3
q6
q8
q11
q14

q5
q7
q10
q13
q20

q5
q7
q10
q13
q17

q3
q6
q8
q11
q14
q20

q5
q7
q10
q13
q17
q19

q3
q6
q8
q11
q14
q18
q20

10

20

30

40

50

0

10

20

30

40

50

0

10

20

30

40

50

·106

1.5

1

0.5

0

0

·106

1.5

1

0.5

0

0

·106

1.5

1

0.5

0

0

(d) X-IAR (X ∈ {P,C}) Alg. 10 (P1 and neg1 encoding).

·104

1.2

1

0.8

0.6

0.4

0.2

0

0

10

20

30

40

50

q5
q7
q10
q19

q3
q6
q8
q17
q20

q2
q4
q11
q5
q7
q10
q13
q17
q19

q3
q9
q14
q6
q8
q12
q15
q18
q20

3,000

2,000

1,000

0

0

10

20

30

40

50

Figure 15: Query answers ﬁltering time (in milliseconds) w.r.t. data size for uXc20 with score-structured priority relation.

·106

·104

(a) X-IAR (X ∈ {P,C}) Alg. 4 (P1 and neg1 encoding).

0

0.5

1

1.5

2
·106

·106

0

0.5

1

1.5

2
·106

·105

1.5

1

0.5

0

1

0.5

0

1

0.8

0.6

0.4

0.2

0

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

8

6

4

2

0

q2
q5
q7
q9
q11
q14
q17
q19

q1
q3
q6
q8
q10
q13
q15
q18
q20

6,000

4,000

2,000

0

0

0.5

1

1.5

2
·106

(b) X-IAR (X ∈ {P,C}) Alg. 8 (P1 and neg1 encoding).

·104

0

0.5

1

1.5

2
·106

q2
q4
q6
q8
q10
q12
q14
q16
q18

8

6

4

2

0

q1
q3
q6
q8
q10
q12
q14
q17
q19

q2
q5
q7
q9
q11
q13
q15
q18
q20

4,000

3,000

2,000

1,000

0

0

0.5

1

1.5

2
·106

(c) X-IAR (X ∈ {P,C}) Alg. 9 (P1 and neg1 encoding).

·104

0

0.5

1

1.5

2
·106

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

1.5

1

0.5

0

q3
q5
q7
q9
q11
q14
q17
q19

q2
q4
q6
q8
q10
q13
q15
q18
q20

6,000

4,000

2,000

0

q3
q6
q8
q11
q14
q19

q5
q7
q10
q13
q17
q20

q3
q6
q8
q11
q14
q19

q5
q7
q10
q13
q17
q20

q5
q7
q10
q13
q17
q19

q3
q6
q8
q11
q14
q18
q20

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

(d) X-IAR (X ∈ {P,C}) Alg. 10 (P1 and neg1 encoding).

4,000

3,000

2,000

1,000

0

q2
q4
q6
q8
q10
q12
q14
q17
q19

q3
q5
q7
q9
q11
q13
q15
q18
q20

400

200

0

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

q5
q8
q19

q3
q6
q10
q20

Figure 16: Query answers ﬁltering time (in milliseconds) w.r.t. percentage of facts in conﬂicts for u20cY with score-structured priority
relation.

(a) X-brave (X ∈ {P,C}) Alg. 4 (P1 encoding).

·106

1.5

1

0.5

0

0

·106

1.5

1

0.5

0

0

10

20

30

40

50

10

20

30

40

50

·106

0

10

20

30

40

50

·106

1.2

1

0.8

0.6

0.4

0.2

0

1.5

1

0.5

10

20

30

40

50

0

0

·106

1.5

1

0.5

0

0

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q6
q8
q10
q12
q14
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

q2
q5
q7
q9
q11
q13
q15
q18
q20

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

·104

6

4

2

0

q5
q7
q10
q12
q14
q19

q3
q6
q8
q11
q13
q17
q20

0

10

20

30

40

50

(b) X-brave (X ∈ {P,C}) Alg. 5 (P1 encoding).

·105

2

1.5

1

0.5

0

0

10

20

30

40

50

q3
q6
q8
q14
q17
q19

q2
q5
q7
q10
q15
q18
q20

(c) X-brave (X ∈ {P,C}) Alg. 6 (P1 encoding).

·104

4

3

2

1

0

q3
q6
q8
q14
q19

q5
q7
q10
q17
q20

0

10

20

30

40

50

(d) X-brave (X ∈ {P,C}) Alg. 7 (P1 encoding).

·104

6

4

2

0

q5
q7
q10
q19

q3
q6
q8
q17
q20

0

10

20

30

40

50

(e) X-brave (X ∈ {P,C}) Alg. 8 (P1 encoding).

·104

4

2

0

q5
q7
q10
q12
q14
q19

q3
q6
q8
q11
q13
q17
q20

6,000

4,000

2,000

0

0

3,000

2,000

1,000

0

0

5,000

4,000

3,000

2,000

1,000

0

0

6,000

4,000

2,000

0

0

6,000

4,000

2,000

0

0

q3
q6
q8
q14
q19

q5
q7
q10
q17
q20

q5
q7
q10
q19

q3
q6
q8
q17
q20

q5
q7
q10
q19

q3
q6
q8
q17
q20

q5
q8
q19

q3
q6
q10
q20

q3
q6
q8
q11
q17

q5
q7
q10
q14
q20

10

20

30

40

50

10

20

30

40

50

10

20

30

40

50

10

20

30

40

50

10

20

30

40

50

10

20

30

40

50

0

10

20

30

40

50

Figure 17: Query answers ﬁltering time (in milliseconds) w.r.t. data size for uXc20 with score-structured priority relation.

·105

(a) X-brave (X ∈ {P,C}) Alg. 4 (P1 encoding).

6

4

2

0

2.5

2

1.5

1

0.5

0

0

0.5

1

1.5

2
·106

·105

0

0.5

1

1.5

2
·106

·105

4

2

0

1.5

1

0.5

0

0

0.5

1

1.5

2
·106

·106

0

0.5

1

1.5

2
·106

·105

6

4

2

0

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q1
q3
q5
q7
q9
q11
q13
q15
q17
q19

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

q2
q4
q6
q8
q10
q12
q14
q16
q18
q20

4,000

2,000

0

q5
q7
q10
q12
q14
q19

q3
q6
q8
q11
q13
q17
q20

1,200

1,000

800

600

400

200

0

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

(b) X-brave (X ∈ {P,C}) Alg. 5 (P1 encoding).

·104

2

1

0

q3
q6
q8
q14
q17
q19

q2
q5
q7
q10
q15
q18
q20

0

0.5

1

1.5

2
·106

(c) X-brave (X ∈ {P,C}) Alg. 6 (P1 encoding).

·104

3

2

1

0

q2
q5
q7
q10
q17
q19

q3
q6
q8
q14
q18
q20

0

0.5

1

1.5

2
·106

(d) X-brave (X ∈ {P,C}) Alg. 7 (P1 encoding).

·104

6

4

2

0

q3
q6
q8
q11
q19

q5
q7
q10
q17
q20

0

0.5

1

1.5

2
·106

(e) X-brave (X ∈ {P,C}) Alg. 8 (P1 encoding).

·104

4

2

0

q1
q3
q6
q8
q10
q12
q14
q17
q19

q2
q5
q7
q9
q11
q13
q15
q18
q20

800

600

400

200

0

4,000

3,000

2,000

1,000

0

4,000

3,000

2,000

1,000

0

8,000

6,000

4,000

2,000

0

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

0

0.5

1

1.5

2
·106

q3
q6
q8
q14
q19

q5
q7
q10
q17
q20

q5
q7
q10
q19

q3
q6
q8
q17
q20

q3
q6
q8
q14
q19

q5
q7
q10
q17
q20

q5
q7
q10
q19

q3
q6
q8
q17
q20

q3
q6
q8
q11
q13
q17
q19

q5
q7
q10
q12
q14
q18
q20

E.5 Encodings Properties
We pick a few queries and look at the size of the encodings build to answer them under the different semantics and encodings.
For multi-answer encodings, ΦX-Sem(q((cid:126)a)) = ΨX-Sem(q((cid:126)a)) ∧ (cid:86)
(cid:126)a∈Potans x(cid:126)a. We did not ﬁnd any blatant relationship between
encoding size and running time, except as completion-optimal repairs are concerned with the blow-up of both encoding sizes
and running times. We summarize some observations below.

S-AR v.s. P-AR For S-AR, the CQAPri benchmark leads to rather small encodings for single answer, while the two other
datasets, and especially the Food Inspection dataset, lead to bigger encodings. However, adding priorities increases a lot more
the size of the encodings of the CQAPri benchmark (typically several orders of magnitude) than those of the Food Inspection and
Physicians datasets, that mostly stay in the same order of magnitude, except for completion-optimal repairs. This is probably
because of the kind of constraints in the different benchmarks. For the Food Inspection/Physicians datasets (keys and FD), all
the facts reachable in the conﬂict graph from a given fact share the same predicate, and they are often also in conﬂict with the
original fact (in all cases where the only constraint on the considered table is a key constraint). On the contrary, on CQAPri
benchmark (concept and role disjointness axioms), the facts reachable from a given fact are often not in conﬂict with it.

ϕP1-max v.s. ϕP2-max v.s. ϕC-max (AR, IAR and brave semantics)
• ϕC-max encoding leads to the biggest encodings, by far.
• Number of variables of ϕP1-max v.s. ϕP2-max:

– With neg2 encoding (AR and IAR semantics), ϕP1-max and ϕP2-max encodings have exactly the same number of variables.
– With neg1 encoding, ϕP2-max encodings have less (or as many) variables than ϕP1-max encodings. The difference is more

important for AR and IAR semantics on CQAPri databases, especially u1c1, u1c50 and u20c1.

Intuitively ϕP1-max encodings consider all facts reachable in the directed conﬂict graph while ϕP2-max encodings consider
‘every other fact’ along a directed conﬂict chain, which become all facts reachable in the directed conﬂict graph when we
add the cause facts with neg2 encoding. Food Inspection and Physicians datasets are less impacted by this because facts
reachable in the conﬂict graph are often already in conﬂict with the cause.
• Number of clauses of ϕP1-max v.s. ϕP2-max encodings: depends on the dataset.

– On CQAPri databases with few conﬂicts (u1c1 and u20c1, and especially on u1c1), when neg1 encoding is used (AR, IAR
and brave) ϕP1-max encodings are generally bigger than ϕP2-max encodings, while when neg2 encoding (AR and IAR) is
used it is the opposite.

– On Food Inspection and Physicians datasets and u20c50, ϕP2-max encodings are generally bigger than ϕP1-max encodings.
– On u1c50, it depends on the query.

neg1 v.s. neg2 encoding (AR and IAR semantics) By construction neg2 encodings are bigger than neg1 encodings. The
average and maximal numbers of variables and clauses increase more for AR and IAR with ϕP2-max encoding than with ϕP1-max
encoding for which the difference is quite small. The reason is that ϕP1-max encoding already considers all facts reachable in
the directed conﬂict graph contrary to ϕP2-max encoding, as explained above.

We observe that the average and maximal numbers of variables and clauses increase in general more in proportion for u1c1,

u1c50 and u20c1 than u20c50, Food Inspection and Physicians datasets.

Table 90: Number of variables and clauses in the encoding for a single answer ΦS-AR(q((cid:126)a)) ([minimum | average | maximum]) and in
the encoding for a set of answers ΦS-AR(P otAns), with neg1 or neg2 encoding.

Single, neg1

#var.

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17

[1 | 1 | 3]
[1 | 1 | 2]
[1 | 1 | 1]
[1 | 1 | 2]
[1 | 1 | 1]
[1 | 1 | 1]

[1 | 6 | 61]
[1 | 3 | 10]
[5 | 6 | 12]
[1 | 7 | 72]
[1 | 2 | 6]
[5 | 5 | 5]

[1 | 1 | 6]
[1 | 1 | 6]
[1 | 1 | 3]
[1 | 3 | 52]
[1 | 1 | 2]
[1 | 1 | 1]

#cl.

[2 | 3 | 11]
[1 | 1 | 2]
[1 | 1 | 1]
[1 | 7 | 16]
[1 | 1 | 2]
[20 | 20 | 20]

[2 | 5 | 129]
[1 | 3 | 21]
[1 | 2 | 15]
[1 | 21 | 297]
[1 | 3 | 16]
[20 | 20 | 20]

[2 | 3 | 17]
[1 | 1 | 13]
[1 | 1 | 7]
[1 | 8 | 56]
[1 | 1 | 4]
[8 | 17 | 32]

u20c50 q1
u20c50 q4
u20c50 q7
u20c50 q11
u20c50 q14
u20c50 q17

[1 | 8 | 78]
[7 | 23 | 43]
[10 | 16 | 27]
[1 | 8 | 79]
[1 | 2 | 8]
[13 | 23 | 39]

[1 | 14 | 496]
[15 | 219 | 711]
[15 | 106 | 377]
[1 | 22 | 349]
[1 | 2 | 24]
[44 | 166 | 330]

Single, neg2

#var.

#cl.

Set, neg1
#var.

#cl.

Set neg2
#var.

#cl.

[2 | 2 | 10]
[2 | 2 | 4]
[2 | 2 | 2]
[3 | 8 | 17]
[2 | 2 | 3]
[5 | 5 | 5]

[2 | 9 | 63]
[2 | 7 | 17]
[6 | 8 | 17]
[2 | 14 | 73]
[2 | 4 | 9]
[19 | 19 | 19]

[2 | 2 | 13]
[2 | 2 | 10]
[2 | 2 | 4]
[2 | 11 | 53]
[2 | 2 | 5]
[2 | 2 | 5]

[2 | 10 | 80]
[9 | 27 | 49]
[12 | 18 | 31]
[2 | 13 | 80]
[2 | 4 | 13]
[20 | 30 | 47]

[5 | 8 | 34]
[4 | 5 | 10]
[4 | 4 | 4]
[6 | 29 | 64]
[5 | 7 | 8]
[32 | 32 | 32]

[5 | 22 | 253]
[4 | 19 | 72]
[12 | 17 | 52]
[4 | 54 | 442]
[4 | 13 | 41]
[82 | 82 | 82]

[5 | 7 | 48]
[4 | 5 | 27]
[4 | 5 | 14]
[4 | 36 | 106]
[4 | 6 | 14]
[11 | 23 | 35]

407
5,655
2
9
8
2

16,550
81,706
333
2,105
448
6

1,754
11,332
2
33
11
21

66,180
162,806
469
6,957
594
21

928
5,690
3
38
15
6

38,612
83,542
526
3,501
821
20

3,319
11,437
5
122
32
33

204,532
169,940
1,958
13,009
2,133
83

13,778
56,826
944,889 1,889,570
124
1,897
440
188

105
604
313
18

28,665
102,438
951,647 1,911,750
296
5,247
1,307
245

153
1,666
600
37

[5 | 33 | 505]

433,488 1,831,311 1,021,384 5,976,666
[45 | 275 | 794] 2,137,675 4,345,524 2,195,606 5,035,719
[37 | 144 | 429]
20,824
[4 | 53 | 484]
348,618
[4 | 12 | 55]
50,401
[108 | 254 | 442]
7,012

16,051
192,396
14,189
3,675

2,102
92,768
19,782
967

1,831
58,198
10,914
667

Food. q2
Food. q3
Food. q4
Food. q5
Food. q6

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

[1 | 2, 821 | 61, 764]
[1 | 17 | 280]
[2 | 37 | 296]
[4 | 3, 655 | 61, 331]
[1 | 31 | 597] [1 | 6, 645 | 163, 164]
[1 | 25 | 588] [1 | 5, 221 | 163, 312]

[4 | 2, 832 | 61, 797]
[6 | 3, 676 | 61, 348]
[4 | 6, 709 | 163, 229]
[4 | 5, 266 | 163, 542]
[1 | 142 | 1, 272] [1 | 9, 878 | 164, 960] [2 | 242 | 1, 980] [4 | 10, 532 | 172, 011]

[2 | 17 | 280]
[2 | 37 | 296]
[2 | 33 | 614]
[2 | 27 | 602]

[1 | 20 | 178]
[2 | 2 | 4]
[1 | 2 | 54]
[1 | 19 | 524]
[2 | 2 | 4]
[1 | 4 | 178]

[1 | 818 | 11, 426]
[4 | 4 | 9]
[1 | 6 | 110]
[1 | 260 | 42, 970]
[4 | 4 | 22]
[1 | 19 | 13, 862]

[2 | 21 | 178]
[2 | 2 | 5]
[2 | 2 | 55]
[2 | 20 | 524]
[2 | 2 | 4]
[2 | 4 | 179]

[4 | 834 | 11, 428]
[6 | 7 | 15]
[4 | 8 | 120]
[4 | 305 | 42, 973]
[6 | 7 | 26]
[4 | 27 | 13, 870]

1,370
1,577
15,333
9,474
8,018

376
90
2,773
8,093
206
30,134

105,641
115,241
356,077
297,908
676,552

11,739
145
6,130
116,459
541
320,515

1,388
1,598
15,748
10,209
13,430

455
97
2,790
8,175
206
30,143

106,647
116,255
364,554
305,157
694,256

12,736
222
8,136
117,063
615
324,719

Table 91: Number of variables and clauses in the encoding for a single answer ΦP -AR(q((cid:126)a)) ([minimum | average | maximum]), with
neg1 or neg2 encoding, for P1 encoding (score-structured priority, n = 5).

neg1

#var.

[3 | 62 | 548]
[1 | 7 | 17]

#cl.

[15 | 148 | 1, 203]
[2 | 17 | 37]

neg2

#var.

[4 | 63 | 548]
[2 | 7 | 17]

#cl.

[16 | 151 | 1, 207]
[5 | 19 | 39]

[8 | 12 | 17]

[19 | 29 | 40]

[9 | 13 | 17]

[22 | 32 | 41]

all answers are trivial

all answers are trivial
all answers are trivial

[1 | 321 | 1, 264]
[1 | 95 | 1, 171]
[114 | 318 | 1, 347]
[1 | 73 | 792]
[1 | 66 | 799]
[263 | 263 | 263]

[1 | 34 | 737]
[1 | 51 | 638]
[18 | 48 | 95]
[1 | 11 | 140]
[1 | 21 | 595]
[32 | 98 | 237]

[3 | 1, 868 | 10, 712]
[2 | 514 | 9, 108]
[341 | 2, 033 | 10, 738]
[2 | 350 | 5, 765]
[2 | 318 | 5, 439]
[675 | 675 | 675]

[3 | 87 | 1, 934]
[2 | 131 | 1, 453]
[54 | 130 | 327]
[2 | 32 | 386]
[2 | 51 | 1, 356]
[92 | 252 | 608]

[2 | 322 | 1, 265]
[2 | 96 | 1, 172]
[114 | 319 | 1, 348]
[2 | 77 | 792]
[2 | 67 | 799]
[273 | 273 | 273]

[2 | 34 | 738]
[2 | 52 | 639]
[20 | 49 | 95]
[2 | 15 | 140]
[2 | 22 | 595]
[32 | 99 | 241]

time-out or out-of-memory
time-out or out-of-memory

[6 | 1, 873 | 10, 718]
[5 | 521 | 9, 115]
[342 | 2, 038 | 10, 746]
[5 | 365 | 5, 777]
[5 | 322 | 5, 445]
[707 | 707 | 707]

[8 | 89 | 1, 941]
[5 | 134 | 1, 460]
[60 | 133 | 328]
[5 | 45 | 415]
[5 | 55 | 1, 357]
[93 | 255 | 620]

[134 | 2, 088 | 16, 199]
[1 | 705 | 46, 891]
[1 | 419 | 27, 547]
[380 | 7, 859 | 27, 568]

[431 | 11, 910 | 87, 388]
[2 | 3, 892 | 273, 877]
[2 | 2, 253 | 156, 010]
[2, 209 | 43, 753 | 151, 899]

[134 | 2, 089 | 16, 199]
[2 | 707 | 46, 891]
[2 | 420 | 27, 547]
[383 | 7, 862 | 27, 569]

[434 | 11, 916 | 87, 390]
[5 | 3, 904 | 273, 898]
[5 | 2, 257 | 156, 011]
[2, 218 | 43, 771 | 151, 910]

[1 | 46 | 661]
[2 | 57 | 683]
[1 | 59 | 735]
[1 | 70 | 732]
[1 | 200 | 1, 128]

[1 | 36 | 178]
[2 | 2 | 3]
[1 | 2 | 10]
[1 | 132 | 737]
[2 | 2 | 4]
[2 | 11 | 217]

[2 | 3, 903 | 71, 235]
[5 | 3, 512 | 70, 796]
[2 | 5, 388 | 83, 522]
[2 | 6, 532 | 83, 302]
[2 | 11, 668 | 94, 660]

[2 | 950 | 7, 034]
[6 | 6 | 7]
[2 | 8 | 83]
[2 | 5, 157 | 31, 349]
[4 | 6 | 14]
[5 | 311 | 8, 714]

[2 | 46 | 662]
[2 | 62 | 701]
[2 | 60 | 744]
[2 | 71 | 737]
[2 | 247 | 1, 431]

[2 | 36 | 178]
[2 | 3 | 4]
[2 | 2 | 11]
[2 | 133 | 737]
[2 | 2 | 4]
[2 | 11 | 217]

[5 | 3, 915 | 71, 259]
[6 | 3, 534 | 70, 859]
[5 | 5, 392 | 83, 559]
[5 | 6, 538 | 83, 327]
[5 | 11, 835 | 95, 710]

[5 | 953 | 7, 036]
[8 | 9 | 11]
[5 | 11 | 93]
[5 | 5, 159 | 31, 354]
[8 | 9 | 18]
[6 | 315 | 8, 726]

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17

u20c50 q1
u20c50 q4
u20c50 q7
u20c50 q11
u20c50 q14
u20c50 q17

Food. q2
Food. q3
Food. q4
Food. q5
Food. q6

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

Table 92: Number of variables and clauses in the encoding for a set of answers ΦP -AR(P otAns), with neg1 or neg2 encoding, for P1
encoding (score-structured priority, n = 5).

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17

u20c50 q1
u20c50 q4
u20c50 q7
u20c50 q11
u20c50 q14
u20c50 q17

Food. q2
Food. q3
Food. q4
Food. q5
Food. q6

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

all answers are trivial
all answers are trivial

all answers are trivial

neg1

#var.

1,854
2,112

40

32,659
83,478
2,079
5,020
5,965
264

33,105
627,290
1,379
704
2,533
764

944,497
2,477,866
99,625
246,618
230,177
104,602

1,344
1,432
12,099
6,315
6,362

483
21
635
6,798
67
8,374

#cl.

4,726
4,240

90

144,206
197,467
12,620
24,637
28,946
676

93,832
1,263,593
3,694
1,897
6,051
1,949

5,159,767
6,990,352
636,306
1,625,743
1,386,282
654,423

106,734
79,120
249,612
192,815
581,267

11,634
45
1,882
75,864
193
105,217

neg2

#var.

2,054
2,118

43

38,322
84,182
2,149
5,402
6,109
274

38,387
629,734
1,404
920
2,660
772

1,086,871
2,490,485
99,686
254,376
233,435
104,724

1,372
1,623
13,664
7,129
8,453

508
24
653
6,829
71
8,639

#cl.

5,407
4,268

100

175,569
200,302
13,078
26,181
29,529
708

112,621
1,272,690
3,775
2,626
6,484
1,977

5,946,362
7,067,414
636,950
1,659,608
1,399,732
655,099

107,495
79,941
259,370
198,182
589,918

11,759
63
2,386
76,189
225
107,330

Table 93: Number of variables and clauses in the encoding for a single answer ΦP -AR(q((cid:126)a)) ([minimum | average | maximum]), with
neg1 or neg2 encoding, for P2 encoding (score-structured priority, n = 5).

#var.

[1 | 1 | 2]
[1 | 1 | 1]

[1 | 1 | 1]

[1 | 86 | 697]
[1 | 54 | 997]
[3 | 22 | 994]
[1 | 39 | 762]
[1 | 31 | 367]
[10 | 10 | 10]

[1 | 1 | 23]
[1 | 5 | 133]
[1 | 9 | 61]
[1 | 6 | 137]
[1 | 1 | 90]
[1 | 1 | 1]

neg1

#cl.

[6 | 64 | 550]
[1 | 7 | 17]

all answers are trivial
all answers are trivial

neg2

#var.

[4 | 63 | 548]
[2 | 7 | 17]

#cl.

[19 | 172 | 1, 363]
[4 | 21 | 41]

[9 | 13 | 18]

[9 | 13 | 17]

[23 | 34 | 45]

all answers are trivial

[2 | 1, 500 | 10, 140]
[1 | 608 | 14, 408]
[114 | 1, 120 | 15, 632]
[1 | 326 | 5, 563]
[1 | 310 | 5, 325]
[296 | 296 | 296]

[2 | 37 | 737]
[1 | 69 | 768]
[19 | 81 | 329]
[1 | 11 | 137]
[1 | 24 | 594]
[47 | 115 | 252]

[2 | 322 | 1, 265]
[2 | 96 | 1, 172]
[114 | 319 | 1, 348]
[2 | 77 | 792]
[2 | 67 | 799]
[273 | 273 | 273]

[2 | 34 | 738]
[2 | 52 | 639]
[20 | 49 | 95]
[2 | 15 | 140]
[2 | 22 | 595]
[32 | 99 | 241]

time-out or out-of-memory
time-out or out-of-memory

[5 | 3, 097 | 18, 894]
[4 | 844 | 15, 882]
[454 | 3, 435 | 18, 793]
[4 | 564 | 10, 098]
[4 | 506 | 9, 665]
[837 | 837 | 837]

[8 | 105 | 2, 766]
[4 | 162 | 1, 636]
[76 | 167 | 464]
[4 | 50 | 538]
[4 | 63 | 1, 522]
[105 | 293 | 738]

[5 | 1, 792 | 15, 847]
[1 | 687 | 46, 891]
[1 | 394 | 27, 545]
[69 | 7, 649 | 27, 548]

[247 | 17, 300 | 139, 229]
[1 | 6, 211 | 453, 951]
[1 | 3, 540 | 258, 526]
[1, 708 | 70, 116 | 248, 586]

[134 | 2, 089 | 16, 199]
[2 | 707 | 46, 891]
[2 | 420 | 27, 547]
[383 | 7, 862 | 27, 569]

[594 | 19, 649 | 142, 379]
[4 | 6, 382 | 453, 972]
[4 | 3, 669 | 258, 527]
[3, 449 | 71, 788 | 248, 646]

[1 | 46 | 661]
[1 | 57 | 683]
[1 | 59 | 730]
[1 | 68 | 726]
[1 | 177 | 1, 003]

[1 | 17 | 178]
[2 | 2 | 2]
[1 | 2 | 10]
[1 | 113 | 623]
[2 | 2 | 4]
[1 | 6 | 149]

[1 | 7, 305 | 140, 596]
[2 | 6, 885 | 140, 139]
[1 | 10, 639 | 165, 059]
[1 | 12, 895 | 164, 840]
[1 | 22, 246 | 170, 145]

[1 | 812 | 13, 710]
[3 | 4 | 6]
[1 | 9 | 126]
[1 | 9, 596 | 54, 291]
[2 | 6 | 14]
[2 | 168 | 11, 836]

[2 | 46 | 662]
[2 | 62 | 701]
[2 | 60 | 744]
[2 | 71 | 737]
[2 | 247 | 1, 431]

[2 | 36 | 178]
[2 | 3 | 4]
[2 | 2 | 11]
[2 | 133 | 737]
[2 | 2 | 4]
[2 | 11 | 217]

[4 | 7, 317 | 140, 630]
[6 | 6, 911 | 140, 202]
[4 | 10, 646 | 165, 112]
[4 | 12, 906 | 164, 883]
[4 | 22, 482 | 171, 570]

[4 | 1, 830 | 13, 712]
[8 | 9 | 10]
[4 | 12 | 136]
[4 | 10, 048 | 61, 209]
[8 | 8 | 18]
[6 | 592 | 16, 580]

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17

u20c50 q1
u20c50 q4
u20c50 q7
u20c50 q11
u20c50 q14
u20c50 q17

Food. q2
Food. q3
Food. q4
Food. q5
Food. q6

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

Table 94: Number of variables and clauses in the encoding for a set of answers ΦP -AR(P otAns), with neg1 or neg2 encoding, for P2
encoding (score-structured priority, n = 5).

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17

u20c50 q1
u20c50 q4
u20c50 q7
u20c50 q11
u20c50 q14
u20c50 q17

Food. q2
Food. q3
Food. q4
Food. q5
Food. q6

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

all answers are trivial
all answers are trivial

all answers are trivial

neg1

#var.

272
2,057

6

17,488
78,331
1,704
2,898
2,298
11

8,456
611,495
292
437
323
15

666,523
2,427,119
97,237
227,475
192,330
97,693

1,340
1,422
11,928
6,061
5,367

317
18
627
6,274
67
8,141

#cl.

2,663
4,147

43

129,661
197,785
20,059
23,934
26,171
297

59,009
1,243,520
2,305
751
2,942
899

6,630,792
8,733,870
1,049,877
2,616,968
2,149,410
1,043,542

183,412
154,544
393,183
335,064
693,468

15,898
33
2,045
123,913
189
116,953

neg2

#var.

2,054
2,118

43

38,322
84,182
2,149
5,402
6,109
274

38,387
629,734
1,404
920
2,660
772

1,086,871
2,490,485
99,686
254,376
233,435
104,724

1,372
1,623
13,664
7,129
8,453

508
24
653
6,829
71
8,639

#cl.

5,844
4,284

107

235,332
230,476
21,651
40,414
46,508
838

122,223
1,281,603
4,710
2,900
7,387
2,264

8,684,836
9,105,790
1,074,218
2,783,469
2,324,879
1,099,674

184,236
155,529
404,571
342,087
705,240

22,402
60
2,624
130,901
221
125,557

Table 95: Number of variables and clauses in the encoding for a single answer ΦC-AR(q((cid:126)a)) ([minimum | average | maximum]), with
neg1 or neg2 encoding (score-structured priority, n = 5).

neg1

#var.

#cl.

time-out or out-of-memory

neg2

#var.

#cl.

[1 | 177 | 580]

[2 | 1, 251 | 4, 750]

[7 | 185 | 580]

[14 | 1, 281 | 4, 752]

all answers are trivial
all answers are trivial

[129 | 333 | 582]

[508 | 2, 314 | 4, 759]

[163 | 379 | 582]

[716 | 2, 710 | 4, 760]

all answers are trivial

time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory

[18, 124, 661 |(cid:48)(cid:48)| 18, 124, 661]

[149, 188 |(cid:48)(cid:48)| 149, 188]

[138, 467 |(cid:48)(cid:48)| 138, 467]

[20, 274, 358 |(cid:48)(cid:48)| 20, 274, 358]

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17[2, 060 | 30, 541 | 112, 456][32, 030 | 2, 969, 648 | 13, 258, 029][2, 060 | 31, 267 | 116, 280][32, 031 | 3, 088, 392 | 13, 941, 617]

[7, 806 | 188, 023 | 849, 745]
[14 | 100, 415 | 2, 725, 492]

[5, 698 | 182, 323 | 849, 744]
[2 | 90, 884 | 2, 725, 491]

time-out or out-of-memory
time-out or out-of-memory

[816 | 5, 775 | 18, 186]
[7 | 1, 854 | 39, 228]

[664 | 5, 624 | 18, 186]
[1 | 1, 609 | 39, 228]

time-out or out-of-memory

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

[1 | 9, 045 | 70, 044]
[8 | 12 | 17]
[1 | 16 | 243]

[2 | 549, 146 | 5, 647, 088]
[18 | 25 | 33]
[2 | 55 | 1, 232]

[7 | 9, 068 | 70, 044]
[8 | 19 | 31]
[7 | 17 | 243]

[14 | 551, 315 | 5, 647, 090]
[20 | 46 | 72]
[14 | 63 | 1, 283]

[6 | 9 | 32]

time-out or out-of-memory

[8 | 20 | 78]

[8 | 12 | 32]

time-out or out-of-memory

[20 | 31 | 82]

Table 96: Number of variables and clauses in the encoding for a set of answers ΦC-AR(P otAns), with neg1 or neg2 encoding (score-
structured priority, n = 5).

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

neg1

#var.

10,774

2,748

#cl.

#var.

time-out or out-of-memory

288,695

49,574

all answers are trivial
all answers are trivial

12,430

3,210

all answers are trivial

time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory

neg2

#cl.

373,677

62,715

138,468

18,124,662

149,189

20,274,359

453

1,191

time-out or out-of-memory

3,246

time-out or out-of-memory
time-out or out-of-memory

13,525

time-out or out-of-memory

651

1,607

5,637

21,497

Table 97: Number of variables and clauses in the encoding for a single answer ΦP -brave(q((cid:126)a)) ([minimum | average | maximum]) and
in the encoding for a set of answers ΦP -brave(P otAns), for P1 encoding (score-structured priority, n = 5).

Single

Set

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17

u20c50 q1
u20c50 q4
u20c50 q7
u20c50 q11
u20c50 q14
u20c50 q17

Food. q2
Food. q3
Food. q4
Food. q5
Food. q6

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

#var.

[7 | 66 | 552]
[3 | 8 | 18]

[11 | 15 | 19]

[4 | 325 | 1, 273]
[3 | 97 | 1, 173]
[115 | 320 | 1, 349]
[3 | 83 | 793]
[3 | 69 | 800]
[293 | 293 | 293]

[5 | 38 | 741]
[3 | 53 | 640]
[22 | 50 | 96]
[3 | 20 | 146]
[3 | 23 | 596]
[48 | 117 | 257]

#cl.

[16 | 151 | 1, 207]
[5 | 19 | 39]

all answers are trivial
all answers are trivial

[22 | 32 | 41]

all answers are trivial

[6 | 1, 873 | 10, 718]
[5 | 521 | 9, 115]
[342 | 2, 038 | 10, 746]
[5 | 360 | 5, 766]
[5 | 323 | 5, 447]
[743 | 743 | 743]

[8 | 89 | 1, 939]
[5 | 134 | 1, 460]
[59 | 133 | 328]
[5 | 41 | 403]
[5 | 55 | 1, 357]
[93 | 260 | 649]

time-out or out-of-memory
time-out or out-of-memory

[135 | 2, 090 | 16, 200]
[3 | 713 | 46, 912]
[3 | 422 | 27, 548]
[385 | 7, 882 | 27, 596]

[434 | 11, 916 | 87, 390]
[5 | 3, 899 | 273, 878]
[5 | 2, 257 | 156, 011]
[2, 257 | 43, 826 | 151, 992]

[3 | 456 | 11, 042]
[3 | 82 | 788]
[3 | 75 | 1, 244]
[3 | 96 | 1, 253]
[3 | 868 | 17, 975]

[3 | 38 | 180]
[4 | 5 | 6]
[3 | 5 | 30]
[3 | 135 | 757]
[4 | 4 | 10]
[3 | 23 | 987]

[5 | 3, 906 | 71, 248]
[6 | 3, 532 | 70, 873]
[5 | 5, 392 | 83, 574]
[5 | 6, 537 | 83, 339]
[5 | 12, 019 | 102, 115]

[5 | 952 | 7, 035]
[7 | 9 | 11]
[5 | 10 | 84]
[5 | 5, 159 | 31, 356]
[7 | 8 | 23]
[6 | 315 | 9, 319]

#var.

2,885
4,164

49

71,542
158,756
2,327
6,027
6,334
294

63,960
1,239,415
1,434
1,205
2,861
914

1,953,907
4,606,475
99,864
269,292
238,488
105,504

28,795
2,339
100,303
45,381
462,508

599
36
1,253
19,176
177
85,348

#cl.

5,407
6,742

101

179,335
402,170
13,141
25,662
29,606
744

112,560
1,986,762
3,773
2,399
6,535
2,015

6,045,403
14,464,267
637,023
1,647,529
1,401,544
657,273

106,908
79,869
263,381
199,392
772,344

11,752
60
2,144
81,864
272
125,183

Table 98: Number of variables and clauses in the encoding for a single answer ΦP -brave(q((cid:126)a)) ([minimum | average | maximum]) and
in the encoding for a set of answers ΦP -brave(P otAns), for P2 encoding (score-structured priority, n = 5).

Single

Set

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17

u20c50 q1
u20c50 q4
u20c50 q7
u20c50 q11
u20c50 q14
u20c50 q17

Food. q2
Food. q3
Food. q4
Food. q5
Food. q6

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

#var.

[6 | 65 | 550]
[2 | 7 | 17]

[10 | 14 | 18]

[3 | 317 | 1, 235]
[2 | 95 | 1, 139]
[112 | 311 | 1, 338]
[2 | 68 | 708]
[2 | 67 | 770]
[287 | 287 | 287]

[4 | 37 | 738]
[2 | 51 | 636]
[21 | 49 | 95]
[2 | 13 | 145]
[2 | 22 | 593]
[47 | 116 | 256]

#cl.

[6 | 26 | 166]
[3 | 5 | 10]

all answers are trivial
all answers are trivial

[6 | 8 | 10]

all answers are trivial

[4 | 1, 351 | 8, 405]
[3 | 602 | 14, 411]
[115 | 830 | 15, 184]
[3 | 318 | 5, 217]
[3 | 297 | 5, 179]
[218 | 218 | 218]

[4 | 21 | 697]
[3 | 43 | 712]
[14 | 58 | 330]
[3 | 19 | 146]
[3 | 14 | 296]
[26 | 63 | 172]

time-out or out-of-memory
time-out or out-of-memory

[131 | 2, 081 | 16, 189]
[2 | 701 | 46, 912]
[2 | 420 | 27, 547]
[370 | 7, 874 | 27, 592]

[251 | 17, 058 | 138, 775]
[3 | 6, 216 | 453, 952]
[3 | 3, 537 | 258, 527]
[1, 273 | 70, 185 | 248, 671]

[2 | 455 | 11, 042]
[2 | 76 | 770]
[2 | 74 | 1, 230]
[2 | 93 | 1, 242]
[2 | 798 | 17, 547]

[2 | 27 | 180]
[4 | 4 | 4]
[2 | 5 | 30]
[2 | 128 | 695]
[4 | 4 | 10]
[2 | 19 | 987]

[3 | 7, 308 | 140, 619]
[3 | 6, 899 | 140, 198]
[3 | 10, 642 | 165, 101]
[3 | 12, 899 | 164, 872]
[3 | 22, 550 | 177, 297]

[3 | 812 | 13, 711]
[6 | 6 | 7]
[3 | 11 | 127]
[3 | 9, 592 | 53, 812]
[6 | 8 | 23]
[3 | 184 | 14, 171]

#var.

2,863
4,153

46

70,256
158,245
2,234
5,134
6,074
288

63,175
1,239,007
1,407
846
2,746
907

1,926,425
4,600,476
99,720
258,477
234,769
105,241

28,780
2,139
99,018
44,553
459,439

524
30
1,228
19,067
173
85,111

#cl.

2,021
6,615

27

153,043
399,942
20,524
22,789
24,816
219

57,110
1,953,768
1,653
1,261
1,828
502

7,398,879
16,230,004
1,054,895
2,628,961
2,142,990
1,045,694

183,624
155,082
406,507
341,353
882,586

16,147
45
2,323
129,473
264
137,637

Table 99: Number of variables and clauses in the encoding for a single answer ΦC-brave(q((cid:126)a)) ([minimum | average | maximum]) and
in the encoding for a set of answers ΦC-brave(P otAns) (score-structured priority, n = 5).

Single

#var.

#cl.

#var.

#cl.

Set

[8 | 186 | 581]

[14 | 1, 281 | 4, 752]

14,476

375,192

time-out or out-of-memory

all answers are trivial
all answers are trivial

[165 | 381 | 584]

[716 | 2, 711 | 4, 760]

3,216

62,716

all answers are trivial

time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory
[20, 274, 394 | 20, 274, 394 | 20, 274, 394]

time-out or out-of-memory
time-out or out-of-memory

[7, 805 | 188, 023 | 849, 745]
[14 | 100, 411 | 2, 725, 492]

time-out or out-of-memory

[149, 208 | 149, 208 | 149, 208]

[818 | 5, 776 | 18, 187]
[8 | 1, 859 | 39, 229]

149,209

20,274,395

time-out or out-of-memory
time-out or out-of-memory

[2, 076 | 31, 285 | 116, 296]

[32, 031 | 3, 088, 397 | 13, 941, 646]

time-out or out-of-memory

[8 | 9, 070 | 70, 046]
[10 | 21 | 33]
[8 | 20 | 263]

[10 | 15 | 38]

[14 | 551, 315 | 5, 647, 089]
[19 | 45 | 72]
[14 | 62 | 1, 283]

time-out or out-of-memory

time-out or out-of-memory
663
time-out or out-of-memory

5,631

time-out or out-of-memory

[19 | 30 | 87]

1,713

21,579

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

Table 100: Number of variables and clauses in the encoding for a single cause ΦP -IAR(C) ([minimum | average | maximum]), with
neg1 or neg2 encoding, for P1 encoding (score-structured priority, n = 5).

neg1

#var.

[3 | 26 | 521]
[1 | 7 | 17]

#cl.

[8 | 63 | 1, 199]
[2 | 17 | 37]

neg2

#var.

[4 | 27 | 523]
[2 | 7 | 17]

#cl.

[11 | 65 | 1, 205]
[5 | 19 | 39]

all answers are trivial
all answers are trivial

[8 | 12 | 17]

[18 | 28 | 39]

[9 | 13 | 17]

[21 | 31 | 40]

all answers are trivial

[1 | 111 | 843]
[1 | 95 | 1, 171]
[114 | 301 | 1, 347]
[1 | 42 | 792]
[1 | 65 | 799]
[263 | 263 | 263]

[1 | 17 | 737]
[1 | 51 | 638]
[18 | 47 | 95]
[1 | 12 | 140]
[1 | 19 | 595]
[32 | 98 | 237]

[2 | 615 | 8, 190]
[2 | 517 | 9, 108]
[341 | 1, 881 | 10, 738]
[2 | 207 | 5, 754]
[2 | 332 | 5, 438]
[656 | 656 | 656]

[2 | 44 | 1, 932]
[2 | 131 | 1, 453]
[53 | 128 | 327]
[2 | 34 | 374]
[2 | 46 | 1, 356]
[77 | 235 | 593]

[2 | 111 | 843]
[2 | 97 | 1, 172]
[114 | 301 | 1, 348]
[2 | 42 | 792]
[2 | 66 | 799]
[266 | 266 | 266]

[2 | 17 | 738]
[2 | 52 | 639]
[19 | 48 | 95]
[2 | 13 | 140]
[2 | 20 | 595]
[32 | 99 | 240]

[5 | 618 | 8, 192]
[5 | 523 | 9, 115]
[342 | 1, 885 | 10, 746]
[5 | 209 | 5, 755]
[5 | 337 | 5, 444]
[666 | 666 | 666]

[5 | 46 | 1, 933]
[5 | 134 | 1, 460]
[56 | 130 | 328]
[5 | 37 | 377]
[5 | 50 | 1, 357]
[78 | 238 | 602]

[1 | 693 | 46, 927]

[2 | −3, 667 | 274, 052]

[2 | 694 | 46, 927]

[5 | −3, 664 | 274, 054]

time-out or out-of-memory

[114 | 2, 083 | 16, 199]
[1 | 261 | 46, 891]
[1 | 380 | 27, 547]
[331 | 8, 092 | 27, 558]

[341 | 11, 845 | 87, 388]
[2 | 1, 410 | 273, 857]
[2 | 2, 035 | 156, 009]
[2, 000 | 44, 792 | 151, 850]

[114 | 2, 083 | 16, 199]
[2 | 261 | 46, 891]
[2 | 381 | 27, 547]
[332 | 8, 093 | 27, 558]

[342 | 11, 851 | 87, 390]
[5 | 1, 412 | 273, 858]
[5 | 2, 040 | 156, 010]
[2, 007 | 44, 800 | 151, 855]

[1 | 31 | 661]
[2 | 80 | 663]
[1 | 345 | 715]
[1 | 382 | 715]

[1 | 29 | 178]
[2 | 2 | 3]
[1 | 2 | 10]
[1 | 149 | 644]
[1 | 2 | 4]
[2 | 5 | 217]

[2 | 1, 234 | 70, 684]
[4 | 6, 073 | 70, 688]
[2 | −15, 292 | 82, 992]
[2 | 38, 180 | 82, 992]

[2 | 31 | 662]
[2 | 80 | 663]
[2 | 345 | 716]
[2 | 382 | 715]

[5 | 1, 235 | 70, 697]
[6 | 6, 076 | 70, 690]
[5 | −15, 290 | 82, 996]
[5 | 38, 182 | 82, 994]

time-out or out-of-memory

[2 | 765 | 7, 033]
[5 | 5 | 6]
[2 | 7 | 64]
[2 | 5, 857 | 30, 362]
[2 | 5 | 9]
[5 | 85 | 8, 198]

[2 | 29 | 178]
[2 | 2 | 4]
[2 | 2 | 11]
[2 | 149 | 644]
[2 | 2 | 4]
[2 | 5 | 217]

[5 | 767 | 7, 034]
[6 | 7 | 10]
[5 | 8 | 65]
[5 | 5, 859 | 30, 364]
[5 | 6 | 12]
[6 | 87 | 8, 206]

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17

u20c50 q1
u20c50 q4
u20c50 q7
u20c50 q11
u20c50 q14
u20c50 q17

Food. q2
Food. q3
Food. q4
Food. q5
Food. q6

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

Table 101: Number of variables and clauses in the encoding for a single cause ΦP -IAR(C) ([minimum | average | maximum]), with
neg1 or neg2 encoding, for P2 encoding (score-structured priority, n = 5).

#var.

[1 | 1 | 2]
[1 | 1 | 1]

[1 | 1 | 1]

[1 | 30 | 664]
[1 | 54 | 997]
[3 | 20 | 994]
[1 | 19 | 762]
[1 | 31 | 367]
[10 | 10 | 10]

[1 | 1 | 22]
[1 | 5 | 133]
[1 | 9 | 61]
[1 | 2 | 137]
[1 | 1 | 90]
[1 | 1 | 1]

neg1

#cl.

[3 | 26 | 520]
[1 | 7 | 17]

all answers are trivial
all answers are trivial

neg2

#var.

[4 | 27 | 523]
[2 | 7 | 17]

#cl.

[12 | 75 | 1, 361]
[4 | 21 | 41]

[8 | 12 | 17]

[9 | 13 | 17]

[22 | 33 | 44]

all answers are trivial

[1 | 493 | 7, 943]
[1 | 607 | 14, 408]
[114 | 1, 021 | 15, 632]
[1 | 204 | 5, 552]
[1 | 329 | 5, 324]
[277 | 277 | 277]

[1 | 17 | 735]
[1 | 69 | 768]
[18 | 79 | 329]
[1 | 11 | 125]
[1 | 21 | 594]
[32 | 98 | 237]

[2 | 111 | 843]
[2 | 97 | 1, 172]
[114 | 301 | 1, 348]
[2 | 42 | 792]
[2 | 66 | 799]
[266 | 266 | 266]

[2 | 17 | 738]
[2 | 52 | 639]
[19 | 48 | 95]
[2 | 13 | 140]
[2 | 20 | 595]
[32 | 99 | 240]

time-out or out-of-memory
time-out or out-of-memory

[4 | 1, 012 | 14, 733]
[4 | 848 | 15, 882]
[454 | 3, 165 | 18, 793]
[4 | 332 | 10, 076]
[4 | 537 | 9, 664]
[796 | 796 | 796]

[4 | 55 | 2, 758]
[4 | 162 | 1, 636]
[72 | 163 | 464]
[4 | 46 | 500]
[4 | 58 | 1, 522]
[90 | 275 | 720]

[3 | 1, 801 | 15, 847]
[1 | 247 | 46, 891]
[1 | 355 | 27, 545]
[69 | 7, 880 | 27, 546]

[114 | 17, 351 | 139, 229]
[1 | 2, 212 | 453, 931]
[1 | 3, 189 | 258, 525]
[1, 707 | 71, 797 | 248, 552]

[114 | 2, 083 | 16, 199]
[2 | 261 | 46, 891]
[2 | 381 | 27, 547]
[332 | 8, 093 | 27, 558]

[454 | 19, 531 | 142, 379]
[4 | 2, 299 | 453, 932]
[4 | 3, 314 | 258, 526]
[3, 345 | 73, 409 | 248, 588]

[1 | 31 | 661]
[1 | 80 | 662]

[1 | 2, 401 | 140, 045]
[2 | 11, 983 | 140, 046]

[2 | 31 | 662]
[2 | 80 | 663]

[4 | 2, 404 | 140, 068]
[6 | 11, 987 | 140, 051]

time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory

[1 | 11 | 136]
[1 | 1 | 2]
[1 | 1 | 10]
[1 | 133 | 623]
[1 | 1 | 3]
[1 | 3 | 107]

[1 | 364 | 3, 749]
[2 | 2 | 2]
[1 | 6 | 97]
[1 | 10, 922 | 53, 792]
[1 | 2 | 6]
[2 | 47 | 4, 296]

[2 | 29 | 178]
[2 | 2 | 4]
[2 | 2 | 11]
[2 | 149 | 644]
[2 | 2 | 4]
[2 | 5 | 217]

[4 | 1, 473 | 13, 710]
[6 | 6 | 9]
[4 | 10 | 108]
[4 | 11, 417 | 59, 437]
[4 | 6 | 12]
[6 | 160 | 16, 062]

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17

u20c50 q1
u20c50 q4
u20c50 q7
u20c50 q11
u20c50 q14
u20c50 q17

Food. q2
Food. q3
Food. q4
Food. q5
Food. q6

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

Table 102: Number of variables and clauses in the encoding for a single cause ΦC-IAR(C) ([minimum | average | maximum]), with
neg1 or neg2 encoding (score-structured priority, n = 5).

neg1

#var.

#cl.

time-out or out-of-memory

neg2

#var.

#cl.

[1 | 177 | 580]

[2 | 1, 251 | 4, 750]

[7 | 185 | 580]

[14 | 1, 281 | 4, 752]

all answers are trivial
all answers are trivial

[129 | 333 | 582]

[507 | 2, 313 | 4, 758]

[163 | 379 | 582]

[715 | 2, 709 | 4, 759]

all answers are trivial

time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory
time-out or out-of-memory

[138, 467 | ” | 138, 467]

[18, 124, 642 | 1” | 18, 124, 642]

[141, 642 | ” | 141, 642]

[18, 752, 734 | ” | 18, 752, 734]

u1c1 q1
u1c1 q4
u1c1 q7
u1c1 q11
u1c1 q14
u1c1 q17

u1c50 q1
u1c50 q4
u1c50 q7
u1c50 q11
u1c50 q14
u1c50 q17

u20c1 q1
u20c1 q4
u20c1 q7
u20c1 q11
u20c1 q14
u20c1 q17[2, 060 | 30, 541 | 112, 456][32, 015 | 2, 969, 631 | 13, 258, 014][2, 060 | 31, 043 | 115, 318][32, 016 | 3, 050, 649 | 13, 768, 554]

[6, 695 | 181, 625 | 849, 745]
[14 | 109, 994 | 2, 725, 492]

[5, 697 | 176, 233 | 849, 744]
[2 | 108, 456 | 2, 725, 491]

time-out or out-of-memory
time-out or out-of-memory

[738 | 5, 594 | 18, 186]
[7 | 1, 879 | 39, 228]

[664 | 5, 453 | 18, 186]
[1 | 1, 848 | 39, 228]

time-out or out-of-memory

Phys. q1
Phys. q2
Phys. q3
Phys. q4
Phys. q5
Phys. q6

[1 | 7, 109 | 70, 044]
[8 | 10 | 17]
[1 | 18 | 243]

[2 | 433, 765 | 5, 647, 087]
[17 | 20 | 32]
[2 | 59 | 1, 213]

[7 | 7, 126 | 70, 044]
[8 | 13 | 31]
[7 | 18 | 243]

[14 | 435, 199 | 5, 647, 088]
[18 | 31 | 71]
[14 | 63 | 1, 283]

[1 | 9 | 32]

time-out or out-of-memory

[2 | 20 | 73]

[7 | 11 | 32]

time-out or out-of-memory

[14 | 27 | 76]

