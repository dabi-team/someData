1
2
0
2

v
o
N
6
2

]

C
D
.
s
c
[

1
v
0
0
5
3
1
.
1
1
1
2
:
v
i
X
r
a

A Trust and Reputation System for IoT Exploiting
Distributed Ledger Technology

Seyed Amid Moeinzadeh Mirhosseini, Ali Fanian, and T. Aaron Gulliver

1

Abstract—The advent of Bitcoin, and consequently Blockchain, has ushered in a new era of decentralization. Blockchain enables
mutually distrusting entities to work collaboratively to attain a common objective. However, current Blockchain technologies lack
scalability, which limits their use in Internet of Things (IoT) applications. Many devices on the Internet have the computational and
communication capabilities to facilitate decision-making. These devices will soon be a 50 billion node network. Furthermore, new IoT
business models such as Sensor-as-a-Service (SaaS) require a robust Trust and Reputation System (TRS). In this paper, we introduce
an innovative distributed ledger combining Tangle and Blockchain as a TRS framework for IoT. The combination of Tangle and
Blockchain provides maintainability of the former and scalability of the latter. The proposed ledger can handle large numbers of IoT
device transactions and facilitates low power nodes joining and contributing. Employing a distributed ledger mitigates many threats,
such as whitewashing attacks. Along with combining payments and rating protocols, the proposed approach provides cleaner data to
the upper layer reputation algorithm.

Index Terms—Blockchain, IoT, Distributed Ledger, Trust and Reputation System, TRS, Tangle, IOTA, DLT

(cid:70)

1 INTRODUCTION

T HE Internet of Things (IoT) will transform the future

and encompass almost everything we deal with on a
daily basis [1]. It has not yet reached its full potential and
there are serious concerns that must be addressed before
full adoption [2]. There are now billions of nodes on the
internet but their operation is hindered by the centralized
infrastructure and vendor incompatibilities [3].

IoT nodes open up a new business model in which
devices sell their data [4]. Each device can simultaneously
be a buyer an seller. Consequently, the number of sellers is
similar to the number of buyers. The number of devices
connected to the internet in 2020 was approximately 26
billion [5] and this is projected to rise to 75.4 billion in 2025
[6].

The resulting economic impact is expected to be be-
tween $3.9 trillion to $11.1 trillion annually by 2025 [1],
the maximum of which is equivalent to 11% of the world
economy. However, while the IoT will have a signiﬁcant
economic impact, it does not conform to traditional business
models [7]. The success of IoT businesses depends on having
honest service providers and online merchants, which may
be challenging given the presence of fraudulent users [8].
As a result, we need to trust the nodes that we are going
to interact with. The term trust refers to the subjective trust-
worthiness belief of an entity toward another; on the other
hand, the reputation shows the system view of conﬁdence
toward a particular entity [9].

While centralized Trust and Reputation Systems (TRSs)
may be adequate for the current environment, they are
unsuitable for the IoT of the future [10]. These conventional

S. A. Moeinzadeh and A. Fanian are with the Department of Electrical and
Computer Engineering, Isfahan University of Technology, Isfahan, Iran.
T. A. Gulliver is with the Department of Electrical and Computer Engineering,
University of Victoria, PO Box 1700, STN CSC, Victoria BC V8W 2Y2,
Canada.
Corresponding author: T. A. Gulliver, e-mail: agullive@ece.uvic.ca

TRSs have deﬁciencies such as a Single Point of Failure
(SPOF). Current distributed TRSs have several drawbacks
such as implementation complexity, susceptibility to attacks,
and ineffectiveness [11]. A key issue with these systems is
the separation of payment and evaluation systems.

Future online services can be divided into two categories
[12], one of which requires stronger authentication methods
or services that use more robust TRSs. The ﬁrst category
is more straightforward to implement, but it will threaten
freedom of speech. Moreover, TRSs can be incorporated into
a wide range of services such as electronic marketplaces,
multi-agent marketplaces, cooperative applications, and ﬁle
sharing [13].

The initial Internet concept was a decentralized network.
From its inception, most decentralized services were suc-
cessfully implemented while others such as digital currency
seemed impossible to develop [14], [15]. The design of a dis-
tributed digital currency is a classic computational problem
called the Byzantine Generals Problem [16]. The solution
requires reaching consensus in an environment with nodes
that are susceptible to arbitrary errors. The arrival of Bitcoin
[17] and its underlying technology, Blockchain, probabilis-
tically solves this consensus problem on a large scale in an
asynchronous network. Bitcoin is the ﬁrst truly distributed
digital currency. It employs a distributed ledger to record
who owns money. The ledger security and its records are
guaranteed as long as 51% of the network contributors are
honest players [17].

Distributed ledger technology (DLT) can be employed
in a TRS to provide standardized interfaces and merge
payments and rating systems. Furthermore, DLT based
solutions can handle IoT generated requests in a timely
manner. Blockchain through accountability, immutability,
and security can be used to exchange data between digital
twin virtual copies of physical objects or processes [18].
Moreover, Blockchain self-management and secure Peer-to-

 
 
 
 
 
 
Peer (P2P) communications can lower IoT operational costs
[19]. Blockchain and distributed ledgers for IoT applications,
e.g., healthcare, vehicular networks, and energy, were inves-
tigated in [20], [21].

The rest of the paper is organized as follows. Section
2 introduces Blockchain and Tangle technologies and chal-
lenges, and presents the related work. The proposed DLT
and TRS are introduced in Section 3 and the system evalua-
tion is presented in Section 4. Finally, some conclusions and
suggestions for future work are given in Section 5.

2 BACKGROUND AND RELATED WORK
In this section we present the background and review
previous work regarding Blockchain and Tangle distributed
ledgers.

2.1 Blockchain and Tangle

Blockchain [17] was proposed to provide consensus in a
mutually untrusted environment for implementation of a
digital currency. It can be deﬁned as a Byzantine fault toler-
ant state machine replication. In a Blockchain network, some
nodes (miners or validators), collect broadcast transactions
and put them into blocks to facilitate batch processing. A
consensus algorithm is used to manage agreement between
nodes. While Blockchain is considered a disruptive technol-
ogy, it has a scalability problem. To solve this issue, other
DLTs have been considered as an alternative solution.

Furthermore, Blockchain consists of four subcategories,
permissioned, permissionless, private and public, which can
overlap with each other. The deﬁnition and use case of
each has been provided by [22]. Examples of permissionless
public and permissioned Blockchain targeting IoT are given
in [23] and [24].

Tangle is a DLT solution that omits miners from the
design [25]. Every transaction generator is a miner and
validator. In Tangle, each new block has one transaction
and a Proof-of-Work (PoW) problem must be solved to
validate two other blocks. The roles of transaction generator
and validator are combined so unlike Blockchain there is
no transaction fee. By merging responsibilities, the load is
distributed which results in better system scalability.

While Tangle can theoretically solve the scalability prob-
lem, in practice it has ﬂaws that can be traced back to its
design. Tangle PoW is generated per usage, so the number
of requests indicates the resilience of the network to attacks,
e.g., double-spend. As a result, request load ﬂuctuations in
the IoT (or any network based trafﬁc), will increase the
chance of a successful attack on the network. Although
Tangle considers weak IoT device constraints, transaction
generation is impractical for a typical IoT device even with
lower PoW difﬁculty. Other drawbacks of Tangle include
infeasibility of smart contract implementation, lack of times-
tamps, and the need for a centralized coordinator in the
initial stage of the network.

2.2 Related Work

In general, Trust and Reputation Systems (TRSs) can be
divided into three categories: centralized, semi-centralized,
and distributed [26]. Centralized systems like eBay have a

2

number of serious ﬂaws such as a SPOF, need for a Trusted
Third Party (TTP), a TTP bottleneck, infeasibility in data
ﬁltration before feedback aggregation, and an unalterable
aggregation algorithm [11], [26].

In semi-centralized systems, a portion of the work is
done on a centralized server [26]. This category inherits the
ﬂaws of a centralized architecture, but they are less severe.
In [27], the ﬁrst semi-centralized solution for P2P networks
was proposed. This solution introduced debit-credit and
credit-only reputation computations. However, the inability
to mitigate Sybil attacks and collusion are two major defects
in addition to the ﬂaws of centralized systems.

In [28], a distributed system for ﬁle sharing applications
was introduced. The reputation data is stored on multiple
nodes and a torrent like approach is used to ﬁnd swarms.
A Markov chain based solution is employed in the feedback
aggregation phase. However, there is no way to associate
feedback with the corresponding transactions.

In [29] a distributed, adaptive and scalable TRS for
applications of SOA-based IoT systems was proposed. In
this system, nodes with constrained capabilities hold only
a fraction of the trust information of the nodes. Moreover,
the social relationship between IoT nodes is considered in
the computations. As with other TRSs that do not employ
DLT, this system has the drawback of separate rating and
payment protocols.

A distributed TRS considering user privacy for IoT ap-
plications was proposed in [30]. This system has three entity
types, devices, users, and a public bulletin board. A non-
interactive zero-knowledge proof is employed to preserve
user privacy. The public bulletin board is an append-only
database that keeps encrypted versions of the feedback with
the non-interactive zero-knowledge proofs for each trans-
action. In this solution, users cannot alter the aggregation
algorithm or ﬁlter its input data, which severely limits the
degree of personalization.

In [31], the approach in [27] was extended to be on top
of a Bitcoin-like Blockchain. A single dimension feedback
structure which provides a rating of 1 if the requester
receives the ﬁle and 0 otherwise is used to eliminate biased
ratings. In this system, once a miner receives the broad-
cast feedback it contacts both parties using the addresses
included in the feedback in order to mitigate replay attacks.
This requires that both entities stay online and have a valid
public IP address, which is not realistic. Furthermore, this
system is prone to IP spooﬁng attacks. It also does not
consider the number of miners, which can put a heavy
burden on the nodes in case of direct contact.

An extended version of the system in [32] that uses
Blockchain to provide a privacy-preserving TRS was intro-
duced in [33]. Both approaches use a token based system
to send feedback. In [32], a centralized entity is responsible
for issuing new tokens and this is replaced with a Bitcoin-
like Blockchain in [33]. In this system, the feedback is held
in the Blockchain and the miners are rewarded with tokens
when they mine a new block. A blind signature scheme is
used to preserve the privacy of the rater. While the scarcity
of tokens prevents Sybil attacks, it may also limit merchants
in initiating new transactions.

A TRS using two Blockchains was presented in [9] to
connect islands of trust which are interoperable groups

of IoT devices and protocols. This system assumes that
every IoT node has a device that helps it interact with the
Blockchains. IoT devices can only collaborate if the device
owners have a valid contract which is deployed on the
cloud. Each time an IoT device wants to use a service in
conjunction with its helper, it creates a new obligation. The
obligations are stored in one of the Blockchains and are
addressed for settlement on the other Blockchain. However,
it is unclear how the obligations and contracts can be used
for automatic machine-to-machine interactions. The cloud
that stores the contracts will be a bottleneck and SPOF in this
system. Further, the need for helper devices is a signiﬁcant
drawback.

A new Sybil-resistant

scalable Blockchain called
TrustChain was proposed in [34]. In TrustChain, each node
is only responsible for storing its transactions. Each block
in the chain contains the transaction data along with two
references, one to the previous block and the other to the last
block in the counterpart Blockchain. This data structure will
not prevent double-spending, but it can detect it. NetFlow is
also introduced to calculate reputation using an interaction
graph and max-ﬂow algorithm. The interaction graph is
a weighted graph in which the vertices represent nodes
and the edges show the connections between them. As the
nodes are responsible for keeping their transaction history,
an attacker can perform an anonymous Denial of Service
(DoS) attack against another party. Furthermore, the nodes
need to be online to answer queries.

A new TRS based on Ethereum smart contracts was
introduced in [35]. These contracts have 17 states in the pro-
cess of a trade. The system employs an ERC-20 compatible
token which can be used by the smart contracts. It inherits
the drawbacks of Ethereum and cannot support the load of
IoT networks.

A reputation system for vehicular networks was pro-
posed in [36]. In this system, neighboring vehicles which
are traveling together are clustered to form a public per-
missioned Blockchain. New vehicles that want to join the
network must get permission from a trusted authority. In
each round, a node is randomly selected as the miner. As
there is a trusted authority in the system, it cannot be
used for the open IoT network. Further, inter-cluster data
exchange was not considered and no mechanism was given
for the trusted authority to revoke a registration. The case of
trusted authority key leakage was also not examined.

3 PROPOSED METHOD

In this section, the proposed method is introduced. The goal
is to solve the problems with Blockchain and Tangle as well
as previously developed TRSs. Fig. 1 shows the protocol
relationships and dependencies with the dependents in the
top layer. This shows that the Blockchain is independent of
Tangle, but Tangle is partially reliant on Blockchain. Further,
the Bundle, Initial, and Rep protocols only require Tangle.

The Bundle handles ﬁnancial transactions in an Unspent
Transaction Output (UTXO) like manner, similar to Bitcoin.
Each transaction has unspent transactions as input and
introduces new transactions as output to the network. A
spent transaction cannot be used in future transactions. The
Initial protocol manages new entities entering the network

3

and facilitates service discovery. Rep is a precompiled smart
contract that assumes the role of a TRS. The WeakReq
protocol relies on both Blockchain and Tangle and helps
weak IoT devices use the platform efﬁciently. In the bottom
layer, Blockchain and Tangle hold the data required for the
upper layers.

Fig. 1. The protocol stack of the proposed method.

The Initial message, which is part of the Initial protocol,
has a description of the service provided with a pointer
to the InterPlanetary File System (IPFS) [37] ﬁle that con-
tains further information about the service and/or service
provider. This message aids service discovery and future
protocol additions, e.g., the messaging protocol over the
platform. This protocol further secures the TRS by prevent-
ing whitewashing attacks as will be discussed in Section 4.

3.1 Underlying ledger

The implementation of Tangle in IOTA [25] assumes that
the transaction PoW guarantees the security of the ledger.
As the generation of new transactions is on-demand, the
Tangle load ﬂuctuates during the day. For example, when
the network passes peak time in San Francisco, it takes about
seven hours to reach the next metropolis, Sydney. Thus,
the network has a lower transaction load and consequently,
less PoW. As the PoW algorithm guarantees the security of
the ledger, this lower PoW increases the probability of the
ledger being compromised.

As IOTA nodes have no interest in generating useless
transactions, we introduce a Blockchain to incentivize them.
Each Blockchain block contains hashes of dummy transac-
tions generated by the nodes to increase the Tangle hash
rate. The number and weight of dummy transactions indi-
cates the priority of the block to be added to the Blockchain.
The coinbase (award dedicated to block miners), along with
the WeakReq fee, provide the necessary motivation for par-
ticipation. Moreover, this entanglement of Blockchain and
Tangle eliminates the threat of a liveness attack. This attack
and corresponding countermeasures will be discussed in
Section 4.

Mutual tethering is practiced with IOTA to prevent
double-spending via network splitting. When a new full
node wants to join the network, it must add 7 to 10 full
nodes to its peer list. The counterparts should also add the
address of this node. This requires that nodes trust each
other, which contradicts the principle of distributed systems.
Further, with IOTA, nodes can only see their statically added

neighbor peers. By using Blockchain and dumb messages,
we can eliminate mutual tethering and incentivize new full
nodes to join the network.

Figs. 2 and 3 show how the Tangle can be targeted for a
double-spend attack and how dumb messages can prevent
it, respectively. Boxes with attack labels are attack messages
to outweigh message D resulting in a double-spend transac-
tion. In Fig. 2, the attacker can successfully launch an attack
as the network load is low and consequently can overwrite
the history stored in the ledger, i.e., previously conﬁrmed
transactions. On the other hand, the dumb messages in Fig.
3 added by the honest nodes will prevent the attack to
achieve the desired result.

TABLE 1
Algorithm Parameters

4

Parameter
W eakReqreq WeakReq request sent by a weak device

Description

F ee

Nmsg

P oB

M ineraddr

Fee the weak device will spend on
the current W eakReqreq
Number of messages the weak device will
spend on the current W eakReqreq
Proof-of-Burn transaction embedded inside
the W eakReqreq
Address of the miner that adds W eakReqreq
to the blockchain
Hash of the previous block

prevHash
HeaderHash Hash of the current block header
N once

Nonce used for calculating the hash
Aids the W eakReqreq sender node in ﬁnding
the desired fee in the network

T imer

Fig. 2. The Tangle under attack without dumb messages.

node cannot generate an arbitrary number of fake requests
due to the associated cost. Once the request has propagated
through the network, a Blockchain miner will place it into a
block (Fig. 4 steps 2, 3). Then, the node can send new trans-
actions which, like the request, have no PoW or veriﬁcation
and will be broadcast on the Tangle (Fig. 4 step 4). These
transactions should be valid and have a bundle that contains
a fee (a portion of the total fee in the WeakReq request), to
incentivize the miner to connect them to the Tangle (Fig. 4
step 5).

Fig. 3. The Tangle under attack with dumb messages.

In the proposed method, IoT devices are grouped into
three categories, devices with the capability to exploit the
distributed ledger, devices that have a helping server, and
devices with low capabilities and no helping server. The
ﬁrst two categories can use the ledger seamlessly. However,
the third class does not have a server to aid in interacting
with the DLT nor the ability to generate or store transac-
tions. These devices can use the WeakReq protocol which
facilitates transaction generation.

Fig. 4 illustrates the WeakReq protocol. First, the node
sends a WeakReq request which does not need PoW or
previous transaction veriﬁcation (Fig. 4 step 1). This request
contains the number of transactions that the node will
generate in the future, the total fee the node is willing to pay,
and a Proof-of-Burn bundle which mitigates DoS attacks.
As the coins used in Proof-of-Burn are not transferable, the

Fig. 4. The WeakReq protocol.

Devices with low capabilities and no helping server may
not trust a gateway to connect with the distributed ledger.
Raw ledger data or Simpliﬁed Payment Veriﬁcation (SPV)
[17] cannot be used to receive and validate blocks delivered
from gateways. The data passed to these devices should not
be large and needs to be easy to verify. They can utilize
the minimal veriﬁcation client INcentivized Node Network
(IN3) [38] or the method proposed in [39].

Algorithms 1 and 2 illustrate the WeakReq protocol for
weak devices and miners, respectively. The parameters used
in these algorithms are described in Table 1.

3.2 Trust and reputation protocol

Every TRS has three phases, feedback generation, feedback
propagation, and feedback aggregation [40]. As the third
phase is subjective and varies based on the use cases, it is
not considered, so the proposed model only implements the

5

the request message and then the seller sends a list of
preferred mediators considering the buyer’s list. Finally,
the buyer chooses a mediator based on the received list.
When a malicious user is detected, the combinations of
buyer requests and seller acknowledgments prevent further
damage to the seller’s reputation on future transactions. In
the case of an agreement violation, either side can issue a
complaint which will put the mediator in control of the
whole process. In the case of a dispute, the mediator has
the right to release the locked money. Otherwise, the buyer
will release it as a normal transaction process. At the end,
the buyer sends a review of the trade.

There is a NoFeedback ﬂag that can be set by the seller
in the acknowledgement of the buyer’s request. This can
be used to opt out of the Rep protocol if the seller is not
interested. In the validation phase, either party can use the
ledger data along with their desired algorithm to assess the
reputation of the other party. This validation process can be
outsourced to another node as a service. The combination
of service discovery and reputation validation as a separate
service can be performed by nodes in the network, leading
to an open-data search engine for IoT nodes.

Algorithm 1: Weak Devices using WeakReq

Connect to the gateway;
Choose F ee, Nmsg and P oB;
Set T imer to an interval;
Broadcast W eakReqreq;
while W eakReqreq is not added to the Blockchain do
Wait for a miner to pick the W eakReqreq;
if T imer expires and node is willing to pay more
then

Choose higher F ee;
Broadcast a new W eakReqreq;

else if node is NOT willing to pay more then

return -1;

end
Stop T imer;
Receive M ineraddr;
for 1 to Nmsg do

Send a W eakReqmsg with F ee
Nmsg

end

to M ineraddr;

Algorithm 2: Miner Picking WeakReq Requests

while true do

Listen to broadcast messages;
Pick a proﬁtable W eakReqreq and check its
validity;
Add W eakReqreq to a block;
do

Add dumb messages to the block and/or
calculate
hash(prevHash, HeaderHash, N once)
with a new N once;

while Calculated hash is less than threshold;

end
Broadcast the block;
for 1 to Nmsg do

Validate W eakReqmsg;
if W eakReqmsg is valid then

Send a dumb or normal message with a
reference to W eakReqmsg to add to the
Tangle;

else

Ignore W eakReqmsg;

end

ﬁrst two phases. The objective is to collect more accurate and
reliable data to ease the last phase. In order to cover a wide
range of aggregation algorithms, the trust and reputation
preconditions are kept to a minimum while sacriﬁcing some
privacy concerns.

The proposed TRS (Rep protocol), can work with or
without a mediator. The mediator can be a smart contract
or human and is used to solve locked disputes. Figs. 5 and
6 show the Uniﬁed Modeling Language (UML) sequence
diagrams of the trade procedure without and with a media-
tor, respectively. The buyer and seller can negotiate using a
mediator in a Transport Layer Security (TLS) handshake-
like approach. The buyer suggests a list of mediators in

Fig. 5. The trade procedure without a mediator.

4 SYSTEM EVALUATION

In this section, the performance of the proposed system is
evaluated. In the experiments, we assume the Blockchain
miners are far more powerful than typical IoT nodes. As
a result,
it is relatively easy for miners to do PoW in
the Tangle. Then, the TRS is assessed against conventional
attack models. All experiments are conducted using a PC
with an Intel i7-2630QM processor and 8 GB of memory.
A Proof-of-Concept (PoC) of the proposed method has

6

Fig. 7. Performance of the proposed method and the approach in [34]
for one node.

Fig. 6. The trade procedure with a mediator.

been implemented and can be accessed from the Github1
repository. For the PoC, we implemented the Tangle and
Blockchain from scratch with a few simpliﬁcations. Further-
more, several important attacks from [11], [26], [41], [42] are
considered for the proposed system.

4.1 Performance analysis

In this experiment, we analyze the system performance
by evaluating standard messages using a target of 15 and
20 leading zeros for the PoW and WeakReq protocol. The
SHA3-512 algorithm is used for the PoW. We compare our
results with those in [34] for the same parameters. Fig.
7 presents the results of this experiment using a random
dataset and one node. This shows that the number of
Transactions Per Second (TPS) for the WeakReq protocol is
relatively high as there is no need to calculate the PoW and
ﬁnd two reference transactions. The TPS for the standard
message with PoW 15 or 20 in the proposed method is lower
than with the approach in [34], and it has the beneﬁt of
double-spend prevention. We assumed the in the Bitcoin
and Ethereum hypothetical cases, the network is private
to our nodes. Therefore, it’s impossible to happen in the
real world. On the other hand, the Bitcoin and Ink proto-
col (Ethereum) are measured against mocking real-world
Blockchains.

Fig. 8 shows that the proposed method is linearly scal-
able compared to other methods. As the nodes in the
TrustChain keep their data locally, the spread of nodes (non-
neighbouring nodes), will impact the performance of the
system.

4.2 Liveness Attack on the Ledger

In this attack, a malicious miner can control blocks recently
proposed to the Blockchain. While rewriting the history
needs a has rate of more than 50%, to perform this attack,
an attacker only needs 20% of the network total hash power,
which is not unrealistic given the events in recent years.

1. https://github.com/amidmm/myChain

Fig. 8. Performance of the proposed method and the approaches in [34],
[17] and [43] for 10 nodes.

The attacker can keep two competing forks in balance by
holding and withdrawing blocks. The proposed ledger can
mitigate this attack by changing the winner-take-all strategy
[23], [44]. In a conventional blockchain, the winning miner
gets the reward and the remainder abandon trying to ﬁnd
a block. As a result, no matter how much effort has been
expended in trying to ﬁnd a block, their computational
effort is wasted.

A block does not have a single hash in our method, but
rather contains a list of dumb message addresses. As men-
tioned previously, the dumb messages serve two purposes,
keeping the hash rate of the Tangle high and connecting
WeakReq messages to it. Instead of a single hash reaching a
target, the next block has an accumulated number of hashes
with a relaxed target. To change the winner-take-all strategy,
we introduce the sliding block window shown in Fig. 9 for
miners to put dumb messages into new blocks. The sliding
window is indicated by the red box and the dumb messages
corresponding to a block have the same border color. The
miners collect dumb message addresses corresponding to
the blocks in the sliding window to generate a new block
(block n + 1). The sliding window is one step behind the
current block to overcome any problems that may arise due
to the asynchronous nature of the Tangle.

If a miner fails to ﬁnd the next block (block n + 1), it only
loses the computations for the dumb messages correspond-
ing to block n − 3. This is because the window has moved
one step forward, and computing block n + 2 requires the
dumb messages associated with blocks n − 2, n − 1, and n.
In the Bitcoin network, the target is deﬁned based on
a ﬁxed minimum difﬁculty dmin (which is 223), and the
current network difﬁculty d. To relax the problem and

maintain the system security, we lower d by a relaxation
factor F but increase the number of hashes N required.
Let txs be the pending transactions in the memory pool of
the node, h−1 the hash of the previous block, δ the current
nonce, and Htotal the total hash rate of the network.

As do not want to lower the security of the system
by lowering the hash rate of the consensus algorithm, we
adjust the number of hashes required and the difﬁculty
while maintaining the probability of ﬁnding a block given
the total hash rate. The probability of ﬁnding a hash lower
than a target probability given d and dmin is

7

p = P r[hash(h−1, δ, txs) < targetd,dmin ] =

(1)
Let X be the random variable corresponding to ﬁnding
the desired hash with unrelaxed parameters and Y be the
random variable corresponding to ﬁnding the desired hash
with relaxed parameters. Then

2zero bits needed
2hash length

.

E[X] = Htotal × p,
E[Y ] = Htotal × p(cid:48)

where E[·] denotes expected value and p(cid:48) is the probability
with the new parameter. We have

E[X] =E[N × Y ]
=N × E[Y ]
=N × Htotal × p(cid:48)

E[Y ] =

Htotal
N

×

2zero bits needed
2hash length

and

where

p(cid:48) =

2zero bits needed
2hash length × F

Equating p and p(cid:48) gives

N = F

(2)

so the number of dumb messages required should be the
same as the relaxation factor.

The mining algorithm now has a semi-progressive char-
acteristic, so a miner with 20% of the network computational
power cannot initiate a liveness attack. An attacker may
be successful in proposing some blocks, but the cumulative
hash power of the remaining nodes over the sliding window
will ultimately surpass that of the attacker.

4.3 Self-promoting attack

In this attack, an adversary wants to overvalue its reputation
artiﬁcially. In its most straightforward form, the attacker
continuously rates itself. This is easy to detect and prevent
as the identities are ﬁxed and the user interaction history
is immutable. However, attacks based on collusion or fake
identities are more difﬁcult to handle. We consider this form
later when Sybil attacks are discussed. Moreover, one can
take the average of repeated ratings from the same user in
the feedback aggregation phase to lower the impact of their
opinion on the reputation calculation.

Fig. 9. Progressive block mining and correlation of Blockchain and
Tangle.

4.4 Whitewashing Attack

In this attack, an adversary attempts to remove the history of
its misbehavior. This can be done by altering the history data
or undermining the effectiveness of the system by excluding
negative feedback from reputation calculations. As the data
stored in the distributed ledger is immutable, it cannot be
altered without conducting a 51% attack. Furthermore, as
the reputation calculations are centralized with distributed
data, an adversary cannot alter them. In systems where
newcomers have a high score, an adversary may attempt
to change his identity frequently. To prevent this form of
attack, a newcomer should have no reputation unless it is
obtained through PoB and PoW with their Initial message.

4.5 Slandering Attack

In a slandering attack, an adversary tries to reduce the repu-
tation of another user by sending fake negative feedback. In
its most obvious form, the attacker directly sends reviews of
the victim. The proposed system prevents this form of attack
by requiring permission from the seller before any trade
happens. The attacker may blindly send negative reviews
to other users. In this case, a seller may check the attacker
history and deny their request for a trade. Furthermore,
as ﬁnancial transactions are necessary to send reviews, the
attacker will lose money doing this.

4.6 Denial of Service

In a Denial of Service (DoS) attack, an adversary tries to
make the system unavailable. In a network-level attack, the
attacker ﬂoods the system with dummy messages. To carry
out this attack, the adversary must attack the entire network
or a speciﬁc node. As the proposed platform is a distributed

system, it is intractable to attack the entire network, and
there is no straightforward way to ﬁnd a node address.
Consequently, the platform is immune to network-level DoS
attacks. In an application-level DoS attack, the adversary
attempts to exploit vulnerabilities of the application. The
attacker can target the WeakReq protocol by sending fake
requests, but the request PoB prevents this attack. Other
messages have a PoW which makes a DoS attack impossible.

4.7 Ballot Stufﬁng Attack

In a ballot stufﬁng attack, an attacker attempts to send more
reviews than the number allowed per trade. Coupling re-
views with ﬁnancial transactions and seller trade approvals
prevents this attack.

4.8 Sybil Attack

In a Sybil attack, an attacker creates numerous fake identi-
ties. This type of attack is the most difﬁcult to mitigate at
low-level. Preventing a Sybil attack by PoW will sacriﬁce
system availability. Due to this, while we use PoW for
mitigating Sybil attacks on the consensus level, we entrust
the upper-layer feedback aggregation phase to provide a
defense mechanism against these attacks. For example, the
feedback aggregation phase can use a Markov chain or ﬂow
based algorithm which gives no credit to fake identities.

4.9 Replay Attack

In a replay attack, an attacker repeatedly sends valid data
that was captured previously. Systems that are vulnerable
to such an attack will accept the old data as legitimate mes-
sages. In [45], a replay attack against IOTA was proposed
assuming address reuse, which is not recommended by the
IOTA foundation. However, the proposed system employs
sequence numbers and timestamps, and associates blocks
with Tangle transactions, which prevents replay attacks.

4.10 WeakReq Attack

An attack scenario which may seem feasible is using the
WeakReq protocol to carry out a DoS attack. In this attack,
an adversary generates a WeakReq request with a high
number of transactions but a low total fee. This attack
will fail since miners will have no motivation to satisfy
the request. If the requester picks this request as a miner,
they must generate a message for each of their WeakReq
messages, which leaves them with no gain.

4.11 Trust and Reputation System Evaluation

We evaluated the proposed TRS by emulating a network
with a mixture of malicious and honest nodes and a majority
of host nodes, approximately 200 and 300, respectively.
The malicious nodes were divided into subgroups that
randomly pick a target and perform the attacks listed in this
section. In the experiments, we used two feedback aggrega-
tion methods to evaluate the reputation of each node. First,
we used the average of the feedback with a trustworthiness
threshold of 0.5 where the rating and reputation scores are
in the range 0 to 1. A value of 1 indicates fully trusted while
0 denotes fully distrusted. If the node reputation exceeds the

8

threshold, a trade is initiated, otherwise it is discarded. Sec-
ond, we used the aggregation method NetFlow introduced
in [34].

It is assumed that one person controls all malicious
nodes. As a result, there can be inter-group and intra-
group collusion between these nodes. The malicious nodes
attack an arbitrary number of honest nodes. Then, 100
honest nodes were picked randomly and asked to assess
the reputation of all nodes. The system F-Score is given by

F-Score = 2 ×

Precision × Recall
Precision + Recall

(3)

where

and

Precision =

True Positive
True Positive + False Positive

Recall =

True Positive
True Positive + False Negative

Fig. 10 presents the F-Score for 10 repetitions of the ex-
periment using a random dataset. These results show that
the proposed method provides cleaner data for feedback
aggregation compared to TrustChain.

Fig. 10. Reputation F-Score from the feedback aggregation phase using
the average and NetFlow aggregation methods.

5 CONCLUSION AND FUTURE WORK
In this paper, a new trust and reputation system was in-
troduced which employs a distributed ledger combining
Blockchain and Tangle in order to merge the payment and
rating systems. The use of a distributed ledger helps elim-
inate false feedback and mitigates other attacks against the
system. In the future, a virtual machine can be considered
to implement smart contracts as a mediator for trades.
Moreover, privacy preserving techniques can be applied at
the ledger protocol level to lower the probability of user
information leakage.

REFERENCES

[1]

J. Manyika, M. Chui, P. Bisson, J. Woetzel, R. Dobbs, J. Bughin, and
D. Aharon, “Unlocking the potential of the Internet of Things,”
McKinsey Global Institute, Jun. 2015.

[2] A. Reyna, C. Mart´ın, J. Chen, E. Soler, and M. D´ıaz, “On blockchain
and its integration with IoT. Challenges and opportunities,” Future
Generation Computer Systems, vol. 88, pp. 173–190, Nov. 2018.

9

Network and Operating Systems Support for Digital Audio and Video,
2003, pp. 144–152.

[28] S. Kamvar, M. Schlosser, and H. Garcia-Molina, “The eigentrust
algorithm for reputation management in P2P networks,” in Pro-
ceedings of the International Conference on World Wide Web, May 2003,
pp. 640–651.

[29] R. Chen, J. Guo, and F. Bao, “Trust management for SOA-based
IoT and its application to service composition,” IEEE Transactions
on Services Computing, vol. 9, no. 3, pp. 482–495, 2014.

[30] M. Azad, S. Bag, F. Hao, and K. Salah, “M2M-REP: Reputation
system for machines in the Internet of Things,” Computers &
Security, vol. 79, pp. 1–16, November 2018.

[31] R. Dennis and G. Owen, “Rep on the block: A next generation
reputation system based on the blockchain,” in Proceedings of the
International Conference for Internet Technology and Secured Transac-
tions, 2015, pp. 131–138.

[32] E. Androulaki, S. G. Choi, S. Bellovin, and T. Malkin, “Reputation
systems for anonymous networks,” in Proceedings of the Inter-
national Symposium on Privacy Enhancing Technologies Symposium,
2008, pp. 202–218.

[33] A. Schaub, R. Bazin, O. Hasan, and L. Brunie, “A trustless privacy-
preserving reputation system,” in Proceedings of the IFIP Interna-
tional Conference on ICT Systems Security and Privacy Protection,
2016, pp. 398–411.

[34] P. Otte, M. de Vos, and J. Pouwelse, “TrustChain: A Sybil-resistant
scalable blockchain,” Future Generation Computer Systems, vol. 107,
pp. 770–780, Jun. 2020.

[35] Listia, “Ink protocol: Decentralized reputation and payments
for peer-to-peer marketplaces,” https://paywithink.com/wp-content/
uploads/2018/07/Ink Protocol Whitepaper V9 Listia Inc.pdf , 2018.

[36] Z. Yang, K. Zheng, K. Yang, and V. C. M. Leung, “A blockchain-
based reputation system for data credibility assessment in vehicu-
lar networks,” in IEEE International Symposium on Personal, Indoor,
and Mobile Radio Communications, 2017, pp. 1–5.

[37] J. Benet, “Ipfs-content addressed, versioned, p2p ﬁle system,”

arXiv preprint arXiv:1407.3561, 2014.

[38] Blockchain, “N3 incentivized node network,” https://www.

blockchains.com/our-products/incubed/,2020.

[39] T. Le and M. W. Mutka, “A lightweight block validation method
for resource-constrained iot devices in blockchain-based applica-
tions,” in IEEE International Symposium on A World of Wireless,
Mobile and Multimedia Networks, 2019.

[40] D. Tr˘cek, Trust and Reputation Management Systems.

Springer,

Berlin, 2018.

[41] J. Guo, R. Chen, and J. J. Tsai, “A survey of trust computation
models for service management in Internet of Things systems,”
Computer Communications, vol. 97, pp. 1–14, 2017.

[42] F. G. M´armol and G. M. P´erez, “Security threats scenarios in
trust and reputation models for distributed systems,” Computers
& Security, vol. 28, no. 7, pp. 545–556, 2009.

[43] G. Wood et al., “Ethereum: A secure decentralised generalised
transaction ledger,” Ethereum project yellow paper, vol. 151, no. 2014,
pp. 1–32, 2014.

[44] M. Zamani, M. Movahedi, and M. Raykova, “Rapidchain: A fast
blockchain protocol via full sharding.” IACR Cryptol. ePrint Arch.,
vol. 2018, p. 460, 2018.

[45] G. De Roode, I. Ullah, and P. J. M. Havinga, “How to break IOTA

heart by replaying?” in IEEE Globecom Workshops, 2018.

[3]

J. Mocnej, W. K. Seah, A. Pekar, and I. Zolotova, “Decentralised IoT
architecture for efﬁcient resources utilisation,” IFAC-PapersOnLine,
vol. 51, no. 6, pp. 168–173, 2018.

[4] K. Noyen, D. Volland, D. W ¨orner, and E. Fleisch, “When money
learns to ﬂy: Towards sensing as a service applications using
bitcoin,” arXiv preprint arXiv:1409.5841, 2014.

[5] Cisco, “VNI forecast highlights tool,” https://www.cisco.com/

c/m/en us/solutions/service-provider/vni-forecast-highlights.
html, 2019.

[6] A. Nordrum, “The internet of fewer things [News],” IEEE Spec-

trum, vol. 53, no. 10, pp. 12–13, Oct. 2016.

[7] Y. Zhang and J. Wen, “The IoT electric business model: Using
blockchain technology for the Internet of Things,” Peer-to-Peer
Networking and Applications, vol. 10, no. 4, pp. 983–994, Jul. 2017.

[8] P. Resnick and R. Zeckhauser, “Trust among strangers in Internet
transactions: Empirical analysis of eBay’s reputation system,” in
The Economics of the Internet and E-commerce, Advances in Applied
Microeconomics, Oct. 2002, vol. 11, pp. 127–157.

[9] R. Di Pietro, X. Salleras, M. Signorini, and E. Waisbard, “A
blockchain-based trust system for the Internet of Things,” in
Proceedings of the ACM Symposium on Access Control Models and
Technologies, 2018, pp. 77–83.

[10] Z. Yan, P. Zhang, and A. Vasilakos, “A survey on trust man-
agement for Internet of Things,” Journal of Network and Computer
Applications, vol. 42, pp. 120–134, Jun. 2014.

[11] K. Hoffman, D. Zage, and C. Nita-Rotaru, “A survey of attack
and defense techniques for reputation systems,” ACM Computing
Surveys, vol. 42, no. 1, December 2009.

[12] H. Rainie, J. Anderson, and J. Albright, The future of free speech,
Pew Research Center,

trolls, anonymity and fake news online.
Washington, DC, March 2017.

[13] H. Rahimi and H. Bekkali, “State of the art of trust and reputation
systems in e-commerce context,” arXiv preprint arXiv:1710.10061,
2017.

[14] G. Coulouris, J. Dollimore, and T. Kindberg, Distributed Systems:

Concepts and Design, 5th Ed. Pearson, Boston, MA, 2012.

[15] M. Fischer, “The consensus problem in unreliable distributed sys-
tems (a brief survey),” in Proceedings of the International Conference
on Fundamentals of Computation Theory, Lecture Notes in Computer
Science, 158. Springer-Verlag, Berlin, 1983, pp. 127–140.

[16] L. Lamport, R. Shostak, and M. Pease, “The Byzantine Generals
problem,” ACM Transactions on Programming Languages and Sys-
tems, vol. 4, no. 3, pp. 382–401, 1982.

[17] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,”

2008.

[18] M. Sallaba, D. Siegel, and S. Becker, “IoT powered by blockchain–
How blockchains facilitate the application of digital twins in
IoT,” https://www2.deloitte.com/content/dam/Deloitte/de/Documents/
Innovation/IoT-powered-by-Blockchain-Deloitte.pdf , vol. 19, 2019.
[19] ITU, “Measuring the information society,” https://www.itu.
int/en/ITU-D/Statistics/Documents/publications/misr2018/
MISR-2018-Vol-1-E.pdf, Tech. Rep., 2018.

[20] M. Wu, K. Wang, X. Cai, S. Guo, M. Guo, and C. Rong, “A compre-
hensive survey of blockchain: From theory to iot applications and
beyond,” IEEE Internet of Things Journal, vol. 6, no. 5, pp. 8114–
8154, 2019.

[21] M. A. Ferrag, M. Derdour, M. Mukherjee, A. Derhab, L. Maglaras,
and H. Janicke, “Blockchain technologies for the internet of things:
Research issues and challenges,” IEEE Internet of Things Journal,
vol. 6, no. 2, pp. 2188–2204, 2018.

[22] K. W ¨ust and A. Gervais, “Do you need a blockchain?” in Crypto

Valley Conference on Blockchain Technology, 2018, pp. 45–54.

[23] C. Li, P. Li, D. Zhou, Z. Yang, M. Wu, G. Yang, W. Xu, F. Long, and
A. C.-C. Yao, “A decentralized blockchain with high throughput
and fast conﬁrmation,” in USENIX Annual Technical Conference,
2020, pp. 515–528.

[24] C. Qiu, H. Yao, F. R. Yu, C. Jiang, and S. Guo, “A service-
oriented permissioned blockchain for the internet of things,” IEEE
Transactions on Services Computing, vol. 13, no. 2, pp. 203–215, 2019.

[25] S. Popov, “The tangle,” 2018.
[26] O. Hasan,

“A survey of privacy preserving reputation
systems,” Technical Report LIRIS UMR 5205 CNRS/INSA de
Lyon/Universit´e Claude Bernard Lyon 1/Universit´e Lumi`ere Lyon
2/ ´Ecole Centrale
[Online]. Available:
https://hal.archives-ouvertes.fr/hal-01635314

de Lyon, Nov.

2017.

[27] M. Gupta, P. Judge, and M. Ammar, “A reputation system for peer-
to-peer networks,” in Proceedings of the International Workshop on

Seyed Amid Moeinzadeh Mirhosseini com-
pleted the B.S. and M.S. degrees in computer
engineering from Shahid Bahonar University and
Isfahan University of Technology, respectively.
His research interests include cryptocurrencies
and distributed ledger technology (DLT) and its
non-cryptocurrency applications.

10

Ali Fanian received the B.Sc., M.Sc. and PhD
degree all in computer engineering from Isfahan
University of Technology (IUT) in 1999, 2002 and
2011 respectively. He is currently an Associate
Professor at Department of Electrical and Com-
puter Engineering, Isfahan, Iran. He is a member
of a research group on Security in Networks and
Systems in IUT and he is also manager of an
academic CSIRT, IUT. His current research inter-
ests include network security, Internet of Things
intrusion detection systems, blockchain
(IoT),

and cryptocurrency technology.

T. Aaron Gulliver received the Ph.D. degree in
electrical engineering from the University of Vic-
toria, Victoria, BC, Canada, in 1989. From 1989
to 1991, he was a Defence Scientist with the De-
fence Research Establishment Ottawa, Ottawa,
ON, Canada. He has held academic positions at
Carleton University, Ottawa, and the University
of Canterbury, Christchurch, New Zealand. He
joined the University of Victoria in 1999 and is a
Professor with the Department of Electrical and
Computer Engineering. In 2002, he became a
Fellow of the Engineering Institute of Canada, and in 2012 a Fellow of
the Canadian Academy of Engineering. His research interests include
information theory and communication theory, error correcting codes,
machine learning, smart grid, intelligent networks, cryptography, and
security.

