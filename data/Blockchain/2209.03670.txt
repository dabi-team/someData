2
2
0
2

p
e
S
8

]

R
C
.
s
c
[

1
v
0
7
6
3
0
.
9
0
2
2
:
v
i
X
r
a

Multisecret-sharing scheme with two-level security and its
applications in Blockchain

R. K. Sharma, R. Sarma, Neha Arora and Vidya Sagar

Department of Mathematics,
Indian Institute of Technology Delhi,
Hauz Khas, New Delhi-110016, India1.

September 9, 2022

Abstract

A (t, m)-threshold secret sharing and multisecret-sharing scheme based on Shamir’s
SSS are introduced with two-level security using a one-way function. Besides we give
its application in smart contract-enabled consortium blockchain network. The proposed
scheme is thoroughly examined in terms of security and eﬃciency. Privacy, security,
integrity, and scalability are also analyzed while applying it to the blockchain network.

MSC 2020 : Primary 94A62; Secondary 94A60.
Keywords: Secret sharing scheme, Multisecret-sharing scheme, One-way function, Hash Function,
Blockchain, Smart Contract.

1

INTRODUCTION

Let m, t ∈ N with 1 < t ≤ m. In secret sharing scheme, we divide the given data s, which
is the secret, into m pieces, each of which is called as share. One can obtain s with the
help of any t or more shares but not with t − 1 or less shares. Such scheme is called as a
(t, m)-threshold secret sharing scheme. Various cryptosystems which are based on single key
have many shortcomings. For example, if the key is maliciously or accidentally disclosed
to the public, or if the key’s owner is found to be untrustworthy [16], the entire system
will be jeopardized, thus secret sharing schemes (SSS) are becoming essential nowadays; in
fact, these are used heavily in electronic voting systems, cryptographic protocols, banking
systems, etc.

In 1979, Blakley [3] and Shamir [13] introduced secret sharing scheme independently.
To solve secret sharing problem, linear projective geometry was used in [3] whereas La-
grange interpolation polynomial was used in [13]. After that, this topic got a lot of atten-
tion and researchers investigated various types of SSS, including On-line Schemes , Ratio-
nal Schemes, Quantum Schemes, Chinese Remainder Schemes, Visual Schemes, Multiple
in
Schemes, Proactive Schemes, Veriﬁable Schemes, Ideal Schemes, Linear Schemes, etc.
recent past. Multisecret-sharing schemes (MSS) are well-known among the secret sharing

1E-mail addresses: rksharmaiitd@gmail.com (Rajendra Kumar Sharma), ritumoni407@gmail.com (Ri-

tumoni Sarma), nehaarora1907@gmail.com (Neha Arora), vsagariitd@gmail.com (Vidya Sagar).

1

 
 
 
 
 
 
scheme families. As the name suggests, in MSS [5, 19], we have multiple secrets to be shared
instead of a single secret.

Blockchain is an open, decentralized, and distributed ledger that can record transactions
among multiple parties in an eﬃcient way. Each transaction is hashed (that is, digitally
signed with cryptographically secured function) and then stored in blocks. Each block is
linked with the previous block hash that makes it immutable. The concept of blockchain
came into light in 2008, when a white paper [11] was published on virtual cryptocurrency
Bitcoin by an anonymous person Satoshi Nakamoto. Later, it was made functional in 2009.
To enhance the privacy and security of blockchain, smart contracts [10] were used. It was
ﬁrst introduced by Nick Szabo in [14].

In [12], the authors used Shamir’s secret sharing scheme to distribute transaction data
using private key encryption and distributed storage blockchain, keeping the data integrity
intact. Similarly, in [8], the authors proposed local secret sharing and applied it on dis-
tributed storage blockchain with the aim of reducing the storage and communication cost.
A few applications of secret sharing schemes on the blockchain network have also been pro-
posed in various sectors like healthcare [15], smart city architecture [4], supply chain [18],
etc. Their objective is to ensure the privacy and security of data from adversaries.

However, a secret sharing scheme has the limitation of dishonest dealers or participants,
but none of them discussed about dishonest dealers and participants simultaneously. Also
it is important to ensure that both the dealer’s committee and participants (or miners) are
honest. Since dealer plays the central role, it is assumed that the dealer must be honest.
Also, in recent years, many blockchain based secret sharing schemes were introduced to
outcome the limitation of dishonest participants. To protect the secret from attackers,
many authors used the threshold t/m less than 1/2 [1, 6, 7, 9, 17].

In [2], the authors have discussed Dynamic Proactive Secret Sharing (DPSS) scheme,
where dealers and participants keep on changing and it is based on honest majority. Then,
they have discussed Evolving-Committee Proactive Secret Sharing (ECPSS) scheme, which
is a combination of DPSS and committee-selection protocol. They assume that either PoW
or Cryptographic sortition can be done to choose the desired committee. It decreases the
probability of corrupt members in the committee and restricts the adversary to know about
the committee. Then, they have deﬁned Target-Anonymous Channels, which keep the
receivers (participants who receive shares of the secret) anonymous.

In this manuscript, ﬁrst we deﬁne SSS and MSS based on Shamir’s SSS with two-
level security, where initially we check the honesty of participants. Further, only honest
participants will get their share for the computation of the secret s. Then we apply our
scheme on blockchain network. For this, we replace dealer with a team (or committee) of
dealers, who need to prove their honesty using non-interactive zero-knowledge proofs before
involving in the process of secret generation and distribution. Also, for the generation
of a new block, a fresh committee will be formed, depending on the nodes involved in
the transaction process. However, committee will have a predetermined minimum and
maximum number of nodes and committee keeps on changing with the change in block.
Moreover, m participants will be chosen in an anonymous way. Once any t out of them are
able to retrieve the secret and validate the transactions, a new block will be formed and
added to the chain. In this case, if there are a few cheating participants and they try to
ﬁnd the secret by involving themselves in the secret recovery process, even then they will
not be able to proceed to ﬁnd the secret unless they retrieve the correct encrypted value of
the secret, where encryption is done using a one-way function.

The rest of the manuscript is arranged as follows. Section 2 includes preliminaries. In

2

Section 3, we propose our scheme. Application of the scheme on blockchain network is
discussed in section 4. In Section 5, we analyze our scheme on the basis of its eﬃciency
and security. Also, we examine the privacy, security, integrity, and scalability of the scheme
while applying it on blockchain in this section. Section 6 concludes the manuscript.

2 Deﬁnitions and Preliminaries

Deﬁnition 2.1. Secret sharing scheme is a way in which one (called dealer ) distributes
the secret to multiple people (called participants) in such a way that they can collectively
recover the secret but individually they can’t.
Let the secret be distributed to m participants. If the secret can only be recovered by any
t or more participants then t is said to be the threshold of the scheme, where 1 < t ≤ m.
A (t, m)-threshold secret scheme is a scheme with threshold t and m participants.

Shamir’s Secret sharing scheme [13]: In this scheme, Shamir has taken two entities: a
dealer and a set of participants. Dealer is the one who knows the secret s and distributes
their shares (pieces of the secret) to all participants in such a way that it follows the basic
properties of SSS and its threshold. For this, he has constructed a polynomial f (x) of
degree t − 1 such that constant term of the polynomial is s and the remaining coeﬃcients
are randomly generated.

• Secret generation: Dealer chooses random variables, say r1, r2, . . . , rt−1 and generates
the polynomial f (x) = s + r1x + r2x2 + · · · + rt−1xt−1 and then enumerates the
participants and computes f (1), f (2), . . . , f (m).

• Secret distribution: Distribute (i, f (i)) to the ith participant, 1 ≤ i ≤ m.

• Secret recovery: Any t or more participants come together to combine their shares
(i, f (i)) to compute the polynomial f (x) with the help of Lagrange interpolation
polynomial.

Deﬁnition 2.2. A (t, m)-threshold secret sharing scheme is said to be perfect if any ˜k
(where ˜k < t) participants cannot recover the secret.

Deﬁnition 2.3. Hash function is a function which maps bit string of arbitrary length to a
bit string of ﬁxed length in random manner.
Cryptographically secure hash function is a hash function which satisﬁes the following
properties: one-wayness, collision resistant, target collision resistant, non-malleability and
pseudo-randomness.

Remark 2.4. Throughout this paper, by a hash function, we mean a Cryptographically
secure hash function.

Deﬁnition 2.5. A function T : A → B is said to be one-way function if for any b ∈ B, it
is computationally hard to ﬁnd some a ∈ A such that T (a) = b in polynomial time.

Deﬁnition 2.6. Distributed ledger is a type of database which records the data or infor-
mation in such a way that it will be shared and replicated in its most updated form to all
the members available on the decentralized network. Participants in the network agree on
the consensus and update the database timely using cryptographic signature, which makes
it auditable for the remaining members.

3

Deﬁnition 2.7. [20] A block is a container that contains a series of transactions. A block
is divided into two components: block header and transaction counter.
Block header contains the following.

• Block version: It indicates the validation rules for the block.

• Merkle tree root hash: The aggregate of hash value of all transactions.

• Timestamp: Current time in seconds/minutes since the starting of the network.

• nBits: It is related to the diﬃculty level for the computation of new hash and its size

in bits.

• Nounce: A variable which keeps on increasing with every hash calculation and PoW

done.

• Parent block hash: Hash value of the previous block.

Transaction counter contains the transactions. Maximum number of transactions that a
block can contain depends on the size of the block, the size of each transaction, and the
total number of transactions occurred in a ﬁxed time interval.

Block Header

Block
version

Merkle tree
root hash

Parent
block hash

Timestamp

nBits

Nounce

Transaction Counter

TX

TX

TX

Block Structure

Deﬁnition 2.8. A smart contract is a digital contract which enforces the members to follow
the procedure and instructions mentioned in the contract. It ensures smooth functioning of
the system and veriﬁcation of the transactions without any interruption from the outside
network. They are immutable and distributed. It also provides security to the network.

Deﬁnition 2.9. A zero-knowledge proof
is a protocol by which a prover can prove the
knowledge of certain information (say, x) without revealing it and the veriﬁer can verify
it without getting any information about x. A zero knowledge proof must posses three
properties: completeness, soundness, and zero-knowledge.

4

3 Proposed Schemes

Dealer
(or System)

Participants

System

Participants

Communication Channel

In previous secret sharing schemes, without testing the honesty of the participant, it is
assumed that majority of them are honest and thus they become eligible to compute the
secret. However the hypothesis of honest participants may fail. Here we have deﬁned two
steps secret sharing scheme where the ﬁrst step is only for verifying if the active participants
are honest or not. In this step, instead of sending the shares for the computation of the
secret s, dealer(or system) shares the information (on similar lines as we have done in
section 3.1 and 3.2 or using any available SSS) for the computation of H(s), where H is
a one-way function. Once H(s) is computed correctly, the system shares the information,
for the computation of the secret s, only to those participants, who participated in the
computation of H(s) and then they can collectively compute the secret s.

We have proposed the secret sharing scheme by applying the above procedure on Shamir’s

SSS for the single secret s and for multi secret s = (s1, s2, . . . , sm).

3.1 Generalization of Shamir’s Secret Sharing Scheme with two-level se-

curity

3.1.1 Set up Phase:

In this scheme, we have {P1, P2, P3, . . . , Pm} as m participants and (t, m) is the threshold.
Dealer D (can be replaced by the system S) chooses ai ∈ F∗
p, where p is a large prime such
that m << p, to be the public key of Pi respectively such that ai 6= aj for i 6= j. Let s ∈ Fp
be the secret.

Set up

1. p ←− Prime (large)

2. (t, m), 1 < t ≤ m ←− Threshold

3. m << p

4. P1, P2, . . . , Pm ←− Participants

5. D ←− Dealer

6. ai ∈ F∗

p, ai 6= aj ∀ i 6= j ←− Public key of Pi.

3.1.2 Computing and distributing shares:

Dealer chooses a one-way function H, and random elements r1, r2, . . . , rt−1 ∈ Fp, and then
computes H(r1), H(r2), . . . , H(rt−1). He then generates the polynomials f (x) and h(x) as

5

follows:

f (x) = s + r1x + r2x

2

+ · · · + rt−1xt−1

h(x) = H(s) + H(r1)x + H(r2)x

2

+ · · · + H(rt−1)xt−1

(3.1)

(3.2)

Dealer then computes (h(ai), f (ai)) and initially shares h(ai) to the participant Pi (1 ≤ i ≤
m).

Dealer (for single secret)

1. H ←− One-way function

2. r1, r2, . . . , rt−1 ∈ Fp ←− Random elements

3. s ←− Secret

4. Compute H(r1), H(r2), . . . , H(rt−1)

5. Generate f (x) and h(x) by:

f (x) = s + r1x + r2x2 + · · · + rt−1xt−1
h(x) = H(s) + H(r1)x + H(r2)x2 + · · · + H(rt−1)xt−1

Output : (ai, f (ai), h(ai)); 1 ≤ i ≤ m −→ System

3.1.3 Recovering the secret:

Any t or more participants, upon receiving h(ai) corresponding to their public key ai, can
come forward to compute the polynomial h(x) by using Shamir’s secret sharing scheme and
then share its constant term H(s) to the system.
System veriﬁes H(s) and after conﬁrming the honesty of minimum of t-participants, it
reveals f (ai) to only those t-participants Pi, who take part in computation of h(x) and
passes the honesty test. Then, they can ﬁnally recover the secret s.

6

Participants : t ←− minimum number of participants required to
recover the secret

1. At least t participants interact with the system to ﬁnd the se-

cret.

2. Input: (ai, h(ai)) by at least t participants

3. Output: h(x) −→ System

4. System veriﬁers h(x)

if:
less than t participants are honest
STOP
else:
send f (ai) to participating members

5. Input: (ai, f (ai))

6. Output: f (x)

7. Compute the secret s.

3.2 Generalization of Shamir’s Secret Sharing Scheme for multi-secret

with two-level security

3.2.1 Set up Phase:

In this scheme, we have assumed the same set up as we have done in 3.1.1 for single secret.
Let s = (s1, s2, . . . sm) be the secret such that si ∈ Fp. Also, the ﬁrst k (1 < k ≤ t) bits
of s are message bits and remaining m − k bits are parity bits with t ≤ m − 1.

3.2.2 Computing and distributing shares:

Dealer chooses a one-way function H. He computes ˜s =

m

X
i=1

si and makes it public. He

then computes αi, and H(αi) for each i ∈ {1, 2, . . . , t}, where

αi =

sj.

m

X
j=1
j6=i

He then generates the polynomials f (x) and h(x) as follows:

f (x) = α1 + α2x + α3x

2

+ · · · + αtxt−1

,

h(x) = H(α1) + H(α2)x + H(α3)x

2

+ · · · + H(αt)xt−1

.

(3.3)

(3.4)

Dealer then computes (h(ai), f (ai)), where ai is the public key of ith participant Pi and
initially shares h(ai) to the participant Pi (1 ≤ i ≤ m).

7

Dealer (for multi secret)

1. H ←− One-way function

2. s = (s1, s2, . . . , sm) ←− Secret such that the ﬁrst k bits (1 <
k ≤ t) are message bits and the remaining n − k bits are parity
bits.

3. Compute ˜s =

m

X
i=1

m

si ←− Public to all

4. Compute αi =

sj where 1 ≤ i ≤ t

X
j=1
j6=i

5. Compute H(α1), H(α2), . . . , H(αt)

6. Generate f (x) and h(x) by:

f (x) = α1 + α2x + α3x2 + · · · + αtxt−1
h(x) = H(α1) + H(α2)x + H(α3)x2 + · · · + H(αt)xt−1

Output : (ai, f (ai), h(ai)) ∀ 1 ≤ i ≤ m −→ system

3.2.3 Recovering the secret:

Any t or more participants, upon receiving h(ai) corresponding to their public key ai, can
come forward to compute the polynomial h(x) by using Shamir’s secret sharing scheme and
then share it with the system.
System veriﬁes h(x) and after conﬁrming the honesty of minimum of t-participants, it reveals
f (ai) to only those t-participants, who take part in the computation of h(x) and passes the
honesty test. Then, they can recover the polynomial f (x).
Once, f (x) is recovered, participants can compute si = ˜s − αi ∀ 1 ≤ i ≤ t.

Example 3.1. Suppose p = 199. Let (5, 11) be the threshold and P1, P2, P3, . . . .P11 be the
11 participants and (a1, a2, . . . , a11) = (7, 5, 4, 3, 2, 9, 6, 8, 11, 10, 12), where ai is the public
key of Pi.
Let s = (7, 9, 2, 3, 7, 5, 4, 9, 3, 21, 27) be the secret, where only the ﬁrst 5 bits are message
bits and the remaining 6 bits are parity bits.
Suppose H : F199 −→ F199 deﬁned by H(n) = gn, where g ∈ F∗
Take g = 3.
11

199 is the one-way function.

Then ˜s =

X
i=1

si = 97 and it is made public.

Further, α1 = 90, α2 = 88, α3 = 95, α4 = 94, α5 = 90 and H(α1) = 188, H(α2) =
43, H(α3) = 113, H(α4) = 104, H(α5) = 188 and therefore

and

f (x) = 90 + 88x + 95x

2

3

+ 94x

4

+ 90x

h(x) = 188 + 43x + 113x

2

+ 104x

3

+ 188x

4

.

8

Dealer then computes f (ai) and h(ai) for each i and share it with the system, which is
displayed in the following table.

i
ai
f (ai)(mod 199)
h(ai)(mod 199)

1
7
167
163

2
5
61
0

3
4
173
38

5
3
92
67

5
2
52
188

6
9
147
40

7
6
90
185

8
8
170
36

9
11
70
65

10
10
117
147

11
12
116
34

System initially shares h(ai) to Pi for each i and any 5 or more participants can decrypt
the polynomial h(x). Without loss of generality, assume P1, P2, P3, P4, P5 come together to
recover the polynomial h(x), then they have the following.

i
ai
h(ai)

1
7
163

2
5
0

3
4
38

4
3
67

5
2
188

Since h(x) is a polynomial of degree 4 and the active participants have its value at 5 distinct
points, they use Lagrange Interpolation to compute the polynomial h(x). Participants will
now share it with the system and after verifying, the system will share the corresponding
values of the polynomial f (x) to respective the participants as follows.

i
ai
f (ai)

1
7
167

2
5
61

3
4
173

4
3
92

5
2
52

Participants will now compute the polynomial f (x) by the same method. Then, they
compute sj = ˜s − αj = 97 − αj ∀ 1 ≤ j ≤ 5.

j
αj
sj

1
90
7

2
88
9

3
95
2

4
94
3

5
90
7

Example 3.2. Suppose p = 113. Let (9, 17) be the threshold and P1, P2, P3, . . . .P17 be the
17 participants and ai = i be the public key of Pi.
Let s = (3, 5, 7, 9, 11, 3, 5, 6, 2, 1, 7, 8, 6, 2, 5, 1, 4) be the secret, where only the ﬁrst 6 bits are
message bits and remaining 11 bits are parity bits.
Note that message bits is less than the threshold.
Suppose H : F113 −→ F113 deﬁned by H(n) = n2 (mod 113) is the one-way function.

17

Then ˜s =

si = 85 (mod 113) and it is made public.

X
i=1

Further, α1 = 82, α2 = 80, α3 = 78, α4 = 76, α5 = 74, α6 = 82, α7 = 80, α8 = 79, α9 = 83
and H(α1) = 57, H(α2) = 72, H(α3) = 95, H(α4) = 13, H(α5) = 52, H(α6) = 57, H(α7) =
72, H(α8) = 26, H(α9) = 109 and therefore

f (x) = 82 + 80x + 78x

2

+ 76x

3

+ 74x

4

+ 82x

5

+ 80x

6

+ 79x

7

8

+ 83x

and

h(x) = 57 + 72x + 95x

2

+ 13x

3

+ 52x

4

+ 57x

5

+ 72x

6

+ 26x

7

+ 109x

8

.

Dealer then computes f (ai) and h(ai) for each i and share it with the system, which is
displayed in the following table.

9

ai
f (ai)
h(ai)

1
36
101

2
92
83

3
92
44

4
63
108

5
16
1

6
9
65

7
28
66

8
96
89

9
68
100

10
104
37

11
52
3

12
106
105

13
84
19

14
47
27

15
73
45

16
3
25

17
41
0

System initially shares h(ai) to Pi for each i and any 9 or more participants can decrypt
the polynomial h(x). Without loss of generality, assume P1, P2, . . . , P9 come together to
recover the polynomial h(x), then they have the following.

ai
h(ai)

1
101

2
83

3
44

4
108

5
1

6
65

7
66

8
89

9
100

Since h(x) is a polynomial of degree 8 and the active participants have its value at 9 distinct
points, they use Lagrange Interpolation to compute the polynomial h(x). Participants will
now share it with the system and after verifying, the system will share the corresponding
values of the polynomial f (x) to the respective participants as follows.

ai
f (ai)

1
36

2
92

3
92

4
63

5
16

6
9

7
28

8
96

9
68

Participants will now compute the polynomial f (x) by the same method. Then, they
compute sj = ˜s − αj = 85 − αj ∀ 1 ≤ j ≤ 9.

j
αj
sj

1
82
3

2
80
5

3
78
7

4
76
9

5
74
11

6
82
3

7
80
5

8
79
6

9
83
2

Since, only ﬁrst 6 bits are message bits, thus required message is (3, 5, 7, 9, 11, 3).

4 Multisecret-sharing scheme on a Blockchain Network

4.1 Blockchain Architecture

Blockchain is a chain of virtual blocks in which each block contains certain information along
with its hash and the hash of the previous block. In this subsection, we will demonstrate
how the blocks of blockchain are formed with the help of the proposed scheme. We impose
a few assumptions and then deﬁne the structure of a blockchain network to eﬃciently apply
this scheme as follows.

• Type of blockchain: We assume that our platform is smart contract-enabled consor-
tium blockchain network with limited number of members, referred to as nodes. Each
member is bound to follow the procedure written in smart contract and any kind of
violation will lead to heavy penalty or cancellation of their participation. We refer
any kind of exchange as transaction.

• Structure of block: Each block is divided into two sections: Block Header and Trans-
action Counter. Block Header further contains block version, Merkle tree root hash,
timestamp, nBits, nounce (secret), and parent block hash. Transaction Counter stores
the transactions.

• Generation of a block: We assume that a new block is generated after a ﬁnite prede-
termined time once the secret is recovered corresponding to all the transactions done
in a ﬁxed time interval.

10

• Channel: We have assumed our scheme as Evolving-Committee Proactive Secret Shar-

ing Scheme and Channel as Target-Anonymous Channel, discussed in [2].

• Dealer: There will be a team (or committee) of dealers, which is freshly formed for
the secret generation and validation of each new block. It will be chosen on the bases
of transactions occurred and PoW done, where nodes need to prove the validity of
their transaction, using non-interactive zero-knowledge proofs (i.e. without revealing
any information about the transactions) and then generate the shares of the secret to
be distributed.

• Secret generation and distribution: To generate the secret sBi for i-th block, dealers
require the number of transactions in that particular time interval, the number of
people involved in the transactions, transaction id’s, and the total amount debited
and credited. The secret will be distributed among random active nodes.

• Participants: Since, our scheme follows Target-Anonymous Channel, the participants
(who receive the secret share) are anonymous. Secret share will be distributed to
few active nodes (miners) anonymously and they required to collectively participate,
compute the secret, and verify and validate the transactions (called as mining process).
If participants were not able to conclude (that the transaction is valid or not) within
the predetermined time interval, it would be considered as validated and automatically
be added to the block and no further questioning will be allowed.

• Secret recovery: A threshold of 50% is required to set, that is, at least 50% active
nodes need to ﬁnd the secret. Once they recover the secret, they need to verify and
validate the transactions.

• Formation of block: Once, the transactions are validated, a new block will be formed
and added to the longest available chain, containing all the validated transactions
stored in it.

Example 4.1. We will show it with an example.

1. Assume that we have 100 participants in our blockchain network and each member is

given the identity Ui , 1 ≤ i ≤ 100.

2. A new block is generated after every τ◦ minutes, and the active nodes (miners) will

be given τ1 minutes to recover the secret that validates the transactions.

3. Let Ti,j be the transaction ID of the jth transaction for the ith block.

4. Let Ti be the concatenation of all the transaction IDs of the ith block.

5. Suppose there are 20 transactions that has taken place during the kth interval [(k −

1)τ◦, kτ◦ ] and identities involved in these transactions are U1, U2, U3, . . . , U14.

6. Then U1, U2, U3, . . . , U14 form the committee of dealers and they need to validate the

transactions using zero-knowledge proof, before the generation of the secret.

7. Once, they all get convinced with all the transactions, they will reveal their transaction
IDs and the amount credited or debited from their account. Finally, they generate
the secret sBk for the kth block, where sBk = E(Ntrans, Npeop, Tk, Adeb, Acred) is a m-
tuple such that ﬁrst t bits are message bits and remaining m − t bits are parity bits,

11

Ntrans is number of transactions happened in that particular time interval, Npeop is
number of people involved in the transactions, Tk is same as deﬁned above, and Adeb
and Acred represents the total amount debited and credited respectively (note that
Adeb = Acred), and E is the encryption function which maps 5-tuple to m-tuple.

8. Dealers will then submit sBk to the system and system will run our MSS and distribute
the shares to random m participants (active nodes) using Target-Anonymous Channel.
Any t nodes can compute the secret and then verify and validate the transactions
within the given τ1 minutes.

9. Once, the veriﬁcation and validation is done, a new block will be added to the chain

using all the parameters required for block header and block generation.

4.2 Applications on various sectors

We can eﬀectively apply our scheme on diﬀerent sectors such as national security, healthcare,
supply chain management, decision making process of a company, elections, etc., where a
few crucial and conﬁdential information is required to be shared with a group of people
in such a way that no adversary will get any information about it. A few of them are
mentioned below:

1. National security is a serious concern. Even a small attack or information leakage
can have major consequences. Thus, we can use this scheme to protect the data.
Also, authorities from diﬀerent departments can communicate and take the decisions
accordingly. For example, Nuclear Command Authority (NCA) of India, which is
responsible for command, control and operational decisions regarding India’s nuclear
weapons programme, can interact with the Political Council headed by the Prime
Minister of India and an Executive Council headed by the National Security Advisor,
to take a decision regarding a nuclear test, in such a way that no outsider will get the
information prior to the completion of the test.

2. If the board of directors of a company takes a crucial decision which can aﬀect the
overall growth of the company, then shareholders can verify if the decision taken by
the board will add to the future growth of the company or not and they can question
it accordingly.

3. In healthcare sector, patients can share their medical history (that includes medica-
tions, health issues, lab results etc.) with the hospital, termed as health information
exchange (HIE) and hospital can further forward it to specialists and other relevant
departments within it . Also, it helps in storing the electronic health record (EHR)
of the patient.

4. To apply our scheme on supply chain, three basic entities: suppliers, enterprises, and
market dealers can be considered. Enterprise can send their requirement and ask for
the quotations from the suppliers in an encrypted form through blockchain platform.
Similarly, enterprises can share their product information and quotation with market
dealers.

12

5 Analysis

5.1 Analysis of Multisecret-sharing scheme

Now we show here that our scheme is secure by proving that any t − 1 or less participants
can’t retrieve the secret. If possible, we assume that t − 1 participants come together to
compute the secret s. For this they initially require to compute the polynomial h(x).

Without loss of generality, we assume P1, P2, . . . , Pt−1 are t−1 participants and (ai, h(ai))
are their respective shares. Also, h(x) is a polynomial of degree t − 1 with t coeﬃcients.
Thus we have a system of t − 1 linear equations in t variables;
h(a1) =H0 + H1a1 + · · · + Ht−1at−1
h(a2) =H0 + H1a2 + · · · + Ht−1at−1

1

2

,

,

...

h(at−1) =H0 + H1at−1 + · · · + Ht−1at−1
t−1.

Therefore,

a1
1

a2
1
a3
1


...
...



1 at−1


3

2

1

. . . at−1
. . . at−1
. . . at−1
...
. . .
. . . at−1
t−1
A
{z

H0
H1
H2
...
Ht−1




























=

h(a1)
h(a2)
h(a3)
...
h(at−1)



















,

X
| {z }

B
{z

|
where A is a (t − 1) × t matrix. Since, all a′
is are distinct and it is a sub matrix of a
Vandermonde matrix of size t × t, implies rank of A is t − 1. For every H0 ∈ Fp there exist
unique H1, H2, . . . , Ht−1, which implies there are at least p solutions. Thus, our scheme is
secure against the attack made by any t − 1 or less participants. Therefore, our scheme is
perfect.

}

}

|

5.2 Analysis of the scheme on Blockchain Network

• Privacy: Dealers ﬁrst need to convince each other regarding their valid transactions
using zero-knowledge proof and then secret will be generated using the encryption of
the transaction details. Moreover, the honesty of the participants will be tested. Thus
this scheme maintains privacy.

• Integrity: Data is stored after two-level veriﬁcation (using our scheme) in blockchain
network and once it is recorded in a block, it can’t be removed. Also, each block is
linked with the previous block hash and any change in the transaction will lead to the
change in the hash value of all preceding blocks. Thus, data stored is immutable and
permanent.

• Security: In our blockchain network, all nodes will be treated equally and new nodes
can join only after signing smart contract and a proper veriﬁcation by active nodes.
Further, they require to prove their honesty before getting any information (shares)
of the secret. Also each block is added to the blockchain network only after verifying
and validating it by at least t participants. Thus, it will provide security against
double spending. Also, our scheme is secured against Finney attack, Race attack,
51% attack, and Sybil attack.

13

• Scalability: Scalability in blockchain refers to the ability of the platform to expand
as per the requirement and support the increasing load of transactions and nodes in
the network.

Performance of blockchain network is measured on the basis of average time taken
by a transaction to validate. An increase in the number of nodes will lead to an
increase in number of transactions, which will aﬀect its performance. Each transaction
require space to get stored in block. Moreover, blockchain is decentralized; thus each
node is required enough space to store the data, which increases the storage and
maintenance cost. Also every node must keep an updated record which will decrease
the transmission speed.

To resolve these issues, we have designed our algorithm in such a way that there will
be only limited number of nodes. Moreover, secret sharing data can be deleted after
the secret gets recovered and block formation process is done.

Also to resolve the storage issue for every node, a few super computers can be installed
which store the data in place of each node. It will also protect the network from single
point of failure. However, nodes can be given access to that information. We can also
use the method of sharding which involves splitting a blockchain into multiple pieces
(called shards), and storing them at diﬀerent places. It helps to manage the storage
and cost problem with the increase in the number of transactions.

Moreover, limited number of nodes and limited transactions will enhance the speed of
transmission and compacting multiple transactions into an m length secret will also
reduce the storage requirement.

Since each transaction holder has already convinced other dealers regarding the va-
lidity of the transaction, we have assumed if participants were not able to conclude
(that the transaction is valid or not) within a pre-determined time interval, it would
be considered as validated and automatically be added to the block. In this way, we
can some how reduce the scalability issue in our MSS based blockchain network.

6 Conclusion

In this manuscript, we introduce (t, m)-threshold secret sharing scheme and multisecret-
sharing scheme with two-level security based on Shamir’s SSS using one-way function. Then
we generalize the scheme to multi dealer (called as committee of dealers) to eﬃciently apply
it to the blockchain network.

References

[1] J. Baron, K. E. Defrawy, J. Lampkins and R. Ostrovsky, Communication-optimal
proactive secret sharing for dynamic groups, In International Conference on Applied
Cryptography and Network Security, Springer, Cham, 23-41, 2015

[2] F. Benhamouda, C. Gentry, S. Gorbunov, S. Halevi, H. Krawczyk, C. Lin, T. Rabin
and L. Reyzin, Can a public blockchain keep a secret?, In Theory of Cryptography
Conference, Springer, Cham, 260-290, 2020

14

[3] G.R. Blakley, Safeguarding Cryptographic Keys, In Proceedings of the 1979 Interna-
tional Workshop on Managing Requirements Knowledge (MARK), New York, NY,
USA, 48, 313–317, 1979

[4] J. Cha, S. K. Singh, T. W. Kim and J. H. Park, Blockchain-empowered cloud archi-
tecture based on secret sharing for smart city, Journal of Information Security and
Applications, 57, 102686, 2021

[5] H. Y. Chien, J. K. Jan and Y. M. Tseng, A practical (t, n) multi-secret sharing scheme,
IEICE transactions on fundamentals of electronics, communications and computer
sciences, 83(12), 2762-2765, 2000

[6] V. Goyal, A. Kothapalli, E. Masserova, B. Parno, Y. Song, Storing and retrieving se-
crets on a blockchain, In IACR International Conference on Public-Key Cryptography
2022 Mar 8, Springer, Cham, 252-282, 2022

[7] A. Herzberg, S. Jarecki, H. Krawczyk and M. Yung, Proactive secret sharing or:
How to cope with perpetual leakage, In Annual International Cryptology Conference,
Springer, 339-352, 1995

[8] Y. Kim, R. K. Raman, Y. S. Kim, L. R. Varshney, and N. R. Shanbhag, Eﬃcient
local secret sharing for distributed blockchain systems, IEEE Commun Lett, 23(2),
282–285, 2018

[9] S. K. D. Maram, F. Zhang, L. Wang, A. Low, Y. Zhang, A. Juels and D. Song,
CHURP: Dynamic-committee proactive secret sharing, In Proceedings of the 2019
ACM SIGSAC Conference on Computer and Communications Security, 2369-2386,
2019

[10] D. Z. Morris, Bitcoin is not just Digital Currency. It’s Napster for ﬁnance, (link)

accessed on September 9, 2022

[11] S. Nakomoto, A Peer-to-peer Electronic Cash System. White paper, Available at

https://bitcoin.org/bitcoin.pdf, 2008

[12] R. K. Raman and L. R. Varshney, Distributed storage meets secret sharing on the
blockchain, 2018 Information Theory and Applications Workshop (ITA), IEEE, 2018

[13] A. Shamir, How to share a secret, Commun. ACM, 22, 612–613, 1979

[14] N. Szabo, Smart Contracts, 1994, (link) accessed on September 9, 2022

[15] T. T. Thwin and S. Vasupongayya, Blockchain based secret-data sharing model for
personal health record system, In 2018 5th International Conference on Advanced
Informatics: Concept Theory and Applications (ICAICTA), IEEE, 196-201, 2018

[16] R. Tso, A Study on Secret Sharing Schemes with Dishonest Dealers and Participants,

University of Tsukuba, 2004

[17] T. M. Wong, C. Wang and J. M. Wing, Veriﬁable secret redistribution for archive sys-
tems, In First International IEEE Security in Storage Workshop, 2002, Proceedings,
IEEE, 94-105, 2002

15

[18] F. Xiong, R. Xiao, W. Ren, R. Zheng and J. Jiang, A key protection scheme based on
secret sharing for blockchain-based construction supply chain system, IEEE access, 7,
126773-126786, 2019

[19] C. C. Yang, T. Y. Chang, and M. S. Hwang, A (t, n) multi-secret sharing scheme,

Applied Mathematics and Computation, 151(2), 483-490, 2004

[20] Z. Zheng, S. Xie, H. Dai, X. Chen, and H. Wang, An overview of blockchain technology:
Architecture, consensus, and future trends, In 2017 IEEE international congress on
big data (BigData congress), IEEE, 557-564, 2017

16

