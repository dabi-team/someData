Hybrid On/Off Blockchain Approach for Vehicle Data Management,
Processing and Visualization Exempliﬁed by the ADAPT Platform

Aso Validi1, Student Member, IEEE, Vladislav Kashansky2, Jihed Khiari1, Student Member, IEEE
Hamid Hadian2, Radu Prodan2, Juanjuan Li3, Fei-Yue Wang3
Cristina Olaverri-Monreal1, Senior Member, IEEE

2
2
0
2

l
u
J

6
2

]

C
D
.
s
c
[

1
v
2
3
4
6
0
.
8
0
2
2
:
v
i
X
r
a

Abstract—Hybrid on/off-blockchain vehicle data management
approaches have received a lot of attention in recent years.
However, there are various technical challenges remained to deal
with. In this paper we relied on real-world data from Austria to
investigate the effects of connectivity on the transport of personal
protective equipment. We proposed a three-step mechanism to
process, simulate, and store/visualize aggregated vehicle datasets
together with a formal pipeline process workﬂow model. To this
end, we implemented a hybrid blockchain platform based on the
hyperledger fabric and gluster ﬁle systems. The obtained results
demonstrated efﬁciency and stability for both hyperledger fabric
and gluster ﬁle systems and ability of the both on/off-blockchain
mechanisms to meet the platform quality of service requirements.

I. INTRODUCTION
Transportation is considered as one of the least visible yet
vital elements of the global economy. In today’s globalized
world,
the availability and diversity of products are very
heavily depending on the efﬁciency of transport systems and
their capacities. Efﬁciency and sustainability are the two
major challenges that
logistics and transport networks are
currently dealing with [1]. The great necessity of a reliable
and traceable logistics network has never been more vital than
during the current COVID-19 global pandemic. During this
period, supply chains are facing several global challenges due
to a high demand of sanitary products and in some cases,
the closing of borders [2]. According to the World Health
Organization (WHO), one of the main strategies to overcome
the global shortage of Personal Protective Equipment (PPE) is
to coordinate its supply chain management [3].

With the rapid rise of the Internet of Vehicles (IoV)
and the automotive sector, using blockchain to manage and
store transport and vehicle-related data has attracted academia
and industry’s attention [4]. A blockchain-based decentralized
framework with a Real-Time Application (RTA) standard
provides safe and secure data storing and communication
capabilities between vehicles and other entities in the trans-
portation systems [5], [6]. In this context the ADaptive and

1Johannes Kepler University Linz, Austria; Chair

Sustainable
{aso.validi, jihed.khiari,

Transport
4.0.
cristina.olaverri-monreal}@jku.at

Logistics

2University

Information
nology.{vladislav.kashanskii, hamid.hadian,
radu.rodan}@aau.at

Klagenfurt;

Institute

of

of

3Institute

of Automation Chinese Academy

of Sciences China.

{feiyue.wang, juanjuan.li}@ia.ac.cn

Autonomous data Performance connectivity and decentralized
Transport decision-making network (ADAPT) platform [6],
[7], targets to supply, demand, and transport PPE between
China and Austria through a transparent, real-time certiﬁca-
tion veriﬁcation on equipment, documentation production, and
decision-making process at all levels of the multidimensional
logistics network.

To this end, we processed real-time data from truck trips
in Austria obtained through Otonomo [8] and replicated two
routes in Austria that were relevant to the delivery of PPE
using the 3DCoAutoSim simulation platform [9]–[15]. We
investigated the potential beneﬁts of a connection between
vehicles and stored and visualized the results in our proposed
ADAPT hybrid on/off-blockchain platform. To this purpose,
we performed the following three-step approach:

1) We ﬁrst executed a statistical imputation for missing val-
ues in machine learning and applied the piecewise cubic
Hermite splines (cHs) method to increase the granularity
of the dataset by interpolating the missing data points.
2) In a second step, we implemented the imputed dataset
in the simulation of connected vehicles in platooning
mode by relying on the approach in [16] adopting as
well
the vehicular communication capabilities of the
3DCoAutoSim simulation platform [17] to reproduce
the platooning connection and analyzed the effects of
connected driving in platooning mode on emissions and
travel time.

3) In a ﬁnal step, we implemented a hybrid blockchain
platform based on the HyperLedger Fabric (HLF) and
Gluster File Systems (GlusterFS) to store and visualize
the output of the simulation in the ADAPT platform.

The remaining parts of this paper are organized as follows:
the next section presents related work in the ﬁeld of re-
search. The proposed layered architecture of the hybrid on/off-
blockchain model is presented in section III. The data process-
ing and simulation process is described in section IV. Sec-
tion V presents the on/off-chain storage model. The obtained
results are presented in section VI. Section VII concludes the
work and outlines future research.

Tech-

II. RELATED WORK

There has been a signiﬁcant increase in research works that
evolve around vehicle data analysis and storage in blockchain.
In this section we review and categorize the existing ap-
proaches as follows:

©2022 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including
reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or
reuse of any copyrighted component of this work in other works.

 
 
 
 
 
 
A. GPS Signal Losses and Solutions

The proliferation of data has enabled many advances in
intelligent transportation solutions. Moreover, the quality of
the data is essential for the functioning of many of such
solutions. On the other hand, the recorded data commonly
has issues that can occur along the process of collection, e.g.
hardware-related faults, communication/broadcasting faults, or
processing mistakes. GPS data can suffer from such issues as
well, thus resulting in parts of the trip not having correspond-
ing GPS points. In fact, data imputation or interpolation is a
common step when processing GPS data [18]. For our use
case, it is highly relevant to increase the granularity of the
data by interpolating the missing points. This procedure is
helpful for the utilization of the GPS data in a simulation
downstream. A variety of methods have been proposed in
literature for GPS data imputation. [19] presented a Gaussian
process based approach, [20] presented a time-series approach
named missForest, while [21] put forth a fuzzy c-means
method that is tested with GPS data from taxis. When limited
data in terms of density and granularity is available, simpler
methods can be considered such as linear interpolation where
two consecutive points are joint by a straight line, or splines
which are piecewise functions of polynomials allowing to
connect two consecutive points by a smooth curve [22]. For
instance, [23] and [24] used spline-based methods for GPS
interpolation. Similarly, we used the piecewise cubic Hermite
spline (cHs) for our task due to the data type and granularity
that was available.

B. Storage Methods for Vehicle Data Processing

Dealing with data volumes that can be processed in combi-
nation with a blockchain means to overcome challenges that
are either related to the signiﬁcant data volumes or the huge
number of transactions [25]. There are two fundamentally
different approaches for data storage: off-chain, and on-chain.
We considered a hybrid combination of the two approaches.
In our case, off-chain approach with Distributed File Systems
(DFS) is a matter of signiﬁcant importance, due to the het-
erogeneity of the various vehicle related data sets. Generally
speaking, use case of the distributed ﬁle systems in the off-
chain scenario differs both quantitatively and qualitatively, and
highly depends on the considered use-case. There are sev-
eral publications on taxonomy, case studies and performance
comparisons of distributed ﬁle systems [26], [27]. The authors
of [28] indicated that in data-intensive cases, several different
distributed ﬁle systems can be used to store different types of
ﬁles with different access patterns. For example, extended root
daemon (XrootD) is optimized for high-performance access to
high energy physics datasets [29]. The Hadoop File System
(HDFS) is designed for the MapReduce ﬁle system infras-
tructure, and Lustre is optimized for high-performance and
highly interoperable applications on supercomputers, which
can be combined with Message Passing Interface (MPI) for
Input and Output Read (MPI-IO) [30], [31]. The authors
in [32], [33] studied the behavior of DFS and supporting of

Fig. 1. The layered architecture of ADAPT

data-intensive scientiﬁc applications on extreme-scale high-
performance computing systems. In this paper we adopted
GlusterFS1 [34]. It is highly scalable decentralized ﬁle system.
An important advantage of GlusterFS is that metadata is not
stored in a single point of failure, moreover,
there is no
metadata server (e.g MDS Lustre), which can very often cause
the ﬁle system to fail. In addition, GlusterFS showed reliable
behaviour when servicing data streams of various sizes [34].

III. MULTI-LAYER DATA PROCESSING HIERARCHY

Our proposed ADAPT architecture is a six layered model
which is illustrated in Figure 1. It presents the major character-
istics and components of the ADAPT hybrid on/off-blockchain
platform as follows:

1Also known as Red Hat Gluster Storage

Physical Layer: It consists of different sets of physical

components within the transport system.

Data Layer: It includes an automated provisioning method
for decentralized storage of shared data items with efﬁcient
indexing that is based on the GlusterFS system. It incorporates
distributed algorithms to balance the blockchain big data
storage redundancy overheads, network latency and transaction
throughput. Furthermore, it offers secure mechanisms to other
services to invoke and fetch stored items.

Consensus Layer: The most commonly used consensus
in the consortium blockchain is Practical Byzantine Fault
Tolerance (PBFT). PBFT is also the consensus algorithm
adopted by HLF. There are ﬁve steps during the realization
of PBFT consensus, which are request, pre-prepare, prepare,
commit, and reply.

Incentive Layer: It inﬂuences the behavior of the system
participant. The main objective of the incentive layer is to
encourage that all nodes in the hybrid on/off-blockchain sys-
tem operate in an appropriate way. The PPE-related nodes
transport
are mainly PPE supply-side, certiﬁcate agencies,
logistics and PPE demand-side. Furthermore, they rely on
validator nodes in the blockchain to help them conﬁrm and
record transactions.

Smart Contracts Layer: The key components of this layer
are:
triggering conditions, response actions, access autho-
rization and communication mode. Smart contracts are a
set of self-verifying, self-executing, and self-enforcing state-
response rules that are stored and secured in the ADAPT
hybrid on/off-blockchain [35].

Application Layer: It presents the main Graphical User
Interface (GUI) operating within our developed ADAPT plat-
form. The GUI presents various types of information for
several elements of the logistics’ multidimensional network
such as PPE documentations, customers and producers. The
visualized data consists on the origin-destination and the
results from the efﬁciency analysis of the routes and their
related transport modes.

IV. VEHICLE DATA PROCESSING AND SIMULATION

the
To provide a communication functionality amongst
ADAPT hybrid-blockchain users (transport systems’ cus-
tomers and providers), we visualized various levels of infor-
mation in the multidimensional logistics network. To this end
we ﬁrst processed, ﬁltered, and ﬁlled the missing data in the
vehicles’ dataset. We then applied the pertinent simulation-
based connectivity approaches on the transport system. Finally,
we efﬁciently stored and visualized the data in the proposed
ADAPT hybrid-blockchain platform. Figure 2 depicts the
general structure of the dynamic data collection workﬂow [6].
It consists of the following task classes, that are executed over
the set of the vehicles N :
W P1 system initialization task, related to the initial conﬁgu-

ration of the vehicle data processing workﬂow;

SPn activation signal propagation pseudo-task;
DCn data collection tasks of different duration;

Fig. 2. ADAPT multi-scale vehicle data collection workﬂow [6]

DFn data ﬁltration tasks (data dependent), which can be

optional depending on the transaction instance;

AG aggregation of results;
DA data archiving and report preparation;
IN and OU T source and sink pseudo-tasks of transaction

initiator.

Following sections describe semantics of the DCn and DFn
task groups.

A. GPS Signal losses Detection and Predicting the Lost Data

The acquired data from Otonomo included trips that were
undertaken in several countries. We focused in this work on
two routes in Austria that were relevant to the delivery of PPE:

• R.V T :Vienna Airport to Tattendorf
• R.T L:Tattendorf to Linz

There is a storage facility for PPE in Tattendorf, Linz has a
university clinic, and the Vienna Airport is a key distribution
point for goods in general and PPE in particular. The Floating
Car Data (FCD) dataset contained the following attributes:
timestamps, GPS coordinates, speed, and trip ids.

First, we speciﬁed a radius around the origin and destina-
tion, and extracted all trips that started and ended within the
corresponding radius. For both routes R.V T and R.T L, the
radius values were 3km and 10km, respectively. In the case
of R.T L, the radius was higher due to the lack of availability
of data in that area.

We then selected three trips for each route (R.V T and
R.T L) based on the density and distribution of points along
the route. We labeled the trips for R.V T as T 0 R.V T ,
T 1 R.V T and T 2 R.V T and for R.T L as T 0 R.T L,
T 1 R.T L and T 2 R.T L. Each of the trips had the same
origin and destination but different middle points. All these
trips had varying spatial and temporal granularities, thus result-
ing in parts of the trips with no GPS coordinates records. To
interpolate the missing data, we used piecewise cubic Hermite
splines (cHs) [22]. By deﬁnition, a spline is a function deﬁned
piecewise by polynomials. A cubic Hermite spline is a third-
degree polynomial speciﬁed in Hermite form, i.e. by its values
and ﬁrst derivatives at the end points of the corresponding
domain interval. For each two consecutive points in the dataset
i and i + 1, we constructed a curve that was represented by
the following expression:

fi(x) = ai + bix + cix2 + dix3

(1)

DC1DC2DF1DF2AGDADC{n}DF{n}SP1SP2SP{n}WP1INOUTMulti-scale Monitoringby solving for the four coefﬁcients a, b, c, and d. We then
pieced together all the curves to obtain a piecewise cubic
spline. To do so, cubic Hermite splines ensure C 1 continuity,
meaning that they match slopes at the join points, by matching
the ﬁrst derivatives. For the implementation, we used the
PYTHON’s SCIPY package, which includes various interpola-
tion functions. After converting the data to the GPS exchange
format (GPX), we used the cHs method for interpolation
in the longitudinal and latitudinal direction in relation to
time and speed with a spatial resolution of 1meter. The
method generated GPS data for the missing parts of the
original trips. The number of interpolated points compared
to the original points was about a thousandfold (e.g. trips
from Route R.V T originally have 300 points, cHs generated
300000 interpolated points). Furthermore, it is fast and com-
putationally inexpensive. On the other hand, this method does
not consider information about the underlying road network
and can therefore be subject to errors related to the taken
road. However, for the purpose of our application, it provided
realistic and consistently distributed GPS points that could
subsequently be used for simulation.

B. Platooning Implementation

After the previous process we replicated the imputed vehicle
data to generate a realistic transport network simulation and
analyze the effect of platooning on travel time and emissions.
For this purpose, we compared the simulation outcome from
three trucks under the following two scenarios:

(I) Connected in platooning mode, the vehicles in this sce-
nario are labeled as: Semi-Autonomous.Leader.Truck.1
(SAL.T r1), Autonomous.Follower.Truck.2
(AF.T r2)
and Autonomous.Follower.Truck.3 (AF.T r3).

(II) Not connected (conventional driving, not platooning), the
vehicles in this scenario are labeled as: Truck.1 (T r1),
Truck.2 (T r2) and Truck.3 (T r3).

To this end, we implemented consistent platooning [16] and
calculated the travel time and total emissions according to the
following steps.

1) Trafﬁc Network: To generate Austria’s trafﬁc network
we utilized the method explained in [16], [36]. Following the
adopted method, we imported .osm data from Open Street
Map (OSM) to the Simulation of Urban Mobility (SUMO) [37]
and applied a variety of SUMO applications [38]–[40] to
generate and visualize the trafﬁc network. Additionally, to
create routes and trafﬁc demand we adopted two different
methods and generated two sets of route ﬁles. Each method
and the corresponding obtained route ﬁles were dedicated to
each speciﬁc dataset.

We applied tracemapper.py [41] to our ﬁrst

imputed
GPS dataset. Here the input ﬁle (latlong.xml) contained the
latitude and longitude coordinates of the vehicles. The output
ﬁle (latlong.rou.xml) was a SUMO route ﬁle based on the
geographical coordinates. This method mapped a list of geo
coordinates to a consecutive list of edges in a given network.
The process for generating the second set of route ﬁles and
the trafﬁc demand using Trafﬁc Control Interface (TraCI) [42]

3

4

5

6

7

8

9

10

Algorithm 1: Generating the route ﬁles and vehicles [16]
input : Network, r;
output: XYRoute ﬁle, rou;
deﬁne : Number of vehicles i, Number of time steps n,

Vehicle types; platooningvType, truckvType,
truckClass;

1 Function RoutVehGenerate():
2

random.seed(s)
N ← n
output: .rou.xml (vT ype, edges, vehid)

vehNr ← 0
for i in range(N) do

if random.uniform(0,1) < each of the three trucks:

then

write output’< generating the vehicle types with
different attributes/ >’ format (i, vehN r), ﬁle
= routes

vehNr + = 1

end

end
11
12 End Function

Fig. 3. Hybrid on/off-chain storage architecture

is described in Algorithm 1 [16]. The second set of route ﬁles
(XY.rou.xml) was generated based on the XY coordinates
of vehicles in the simulation network (.net.xml). A calibration
of the trafﬁc ﬂow was then performed.

2) Vehicle Connection: By accessing related nodes in Ob-
jective Modular Network Testbed in C++ (OMNeT++) and
changing the behavior of the vehicles, we reproduced the simu-
lation of connected vehicles in platooning mode. Furthermore,
as the simulation necessitates a large computing capacity, to
make it functioning as smoothly as possible, we created a
small number of SUMO vehicles that were not identiﬁed as
OMNeT++ nodes and lacked the communication capabilities.
To investigate the potential and beneﬁcial effects of driving in
platooning mode, we conducted a set of comparative analyses
between connected and not connected trucks. To this end,
we analyzed travel time and total emissions obtained from
the simulations. To study the total emissions we relied on
the “HBEF A3/HDV D (EU 5)” emission class that in-
cludes the weight and length of the trucks (26 40t, EU RO 5)
used [43]. The analyzed data (for each trip) were then stored
and visualized in the ADAPT hybrid-blockchain platform as
described in the next section.

TABLE I
EFFICIENCY IN STUDIED SCENARIOS AND ROUTES

Travel Time

[s]

Total Emissions

(cumulated)

[mg/s]

Route

Trip

SAL.T r1

AF.T r2

AF.T r3

Connected

(in platooning mode)

Not connected

(conventional driving,

not platooning)

T r1

T r2

T r3

R.VT

R.TL

T0 R.VT

T1 R.VT

T2 R.VT

T0 R.TL

T1 R.TL

T2 R.TL

44.3km

43.4km

43.1km

212km

209km

207km

T0 R.VT

44.3km

R.VT

T1 R.VT

43.4km

T2 R.VT

43.1km

T0 R.TL

212km

R.TL

T1 R.TL

209km

T2 R.TL

207km

2534

2532

2530

7898

7697

7624

3652.12

SUM =

3649.36

3720.76

3719.56

3235

3233

3230

10081

9827

9725

3583.43

10956.31

3578.74

4638.78

4526.23

4213.37

SUM =

13278.38

4636.92

4524.77

4108.78

SUM =

10947.66

SUM =

13270.47

3717.24

3648.77

3573

4634.63

4522.87

4100.75

SUM =

10939.01

SUM =

13258.16

11482.54

11377.32

11288.88

13823.21

13815.55

13747.89

SUM =

34148.74

SUM =

41386.65

11371.81

11120.84

10787.03

13803.21

13800.88

12739.82

SUM=

33279.68

SUM =

40343.91

11253.09

11176.45

10534.52

13685.53

13329.16

12910.47

SUM =

32964.04

SUM =

39925.16

tured and unstructured data. The data used in smart contracts
are cloud-based distributed. In this case on-chain PPE data
storage is not applicable for two main reasons. First, part of the
data cannot be disclosed for privacy concerns. Second, a few
data owners (e.g. companies, government organizations) are
restricted by particular policies to store their information on
blockchain. As a consequence, a hybrid on/off-chain solution
seemed here to be more appropriate. This prescribes that some
parts of the data are stored off-chain, and some parts are
stored on-chain. The off-chain data is stored in a Gluster
distributed ﬁle system, meanwhile corresponding hash values
and index information is recorded into the blockchain to ensure
authenticity of the data.

We adopted ADACHAIN (Fig. 4) as it uses GlusterFS [34]
for the persistent storage and data management of common
services in addition to the transaction ledger databases. Glus-
terFS uniﬁes all storage nodes located in various servers as a
single ﬁle system. This network-attached storage offers high-
performance storage support and helps address high avail-
ability, resilience, auto repair, and automatic recovery of the
decentralized logistic services during system or infrastructure
failures. From the operating system point of view, GlusterFS
mounts the ﬁle system via Filesystem in Userspace (FUSE)
and supports Portable Operating System Interface (POSIX).
This facilitates developing standard applications.

B. Veriﬁcation Process

To verify our proposed off-chain storage model, we con-
ducted preliminary experiments with approximately 14GB
of raw data in combined exchange regime with some Input
and Output zone (IOzone) [44] benchmarks. The experimental
environment for data management strategies was provided by
cloud services of the distributed systems group at the Alpen-
Adria university of Klagenfurt. We ﬁrst conducted a simulation
experiment of incremental update based on the simulation
of data and compared it with the traditional update solution.
We then analyzed the additional time required to implement
the incremental update. Finally, we evaluated the performance
of the off-chain storage system and analyzed the impact of
different operations and data exchange patterns in the context
of overall system’s performance.

Fig. 4. ADACHAIN service conﬁguration architecture for vehicle data
management [7]

Fig. 5.

Imputation results for T 0 R.V T

V. HYBRID ON/OFF-CHAIN STORAGE MODEL

A. Model Implementation

Figure 3 illustrates our proposed ADAPT on/off-chain stor-
ing model. The on-chain functionality is provided by HLF fab-
ric and corresponding smart contracts. Off-chain functionality
is driven by the distributed ﬁle system and REpresentational
State Transfer (REST) API, that we use for storing of struc-

Fig. 6.

Imputation results for T 0 R.T L

VI. RESULTS FROM THE ANALYSIS AND VERIFICATION
PROCESS

Figures 5 and 6 depict the imputation results we obtained
by using the cHs method for two sample trips T 0 R.V T and
T 0 R.T L from the considered routes R.V T and R.T L. We
noted the original points in red and the imputed ones in blue.
The origins and destinations are shown in green. The imputed
points connect the original ones throughout the routes with a
spatial granularity of 1 meter, thus resulting in more detailed
and consistent GPS data. A summary of all the obtained values
for travel time and total emissions in each of the three trips of
the two routes are presented in Table I. This information was
visualized in the hybrid on/off-blockchain ADAPT platform
through the GUI, providing thus the different sectors of the
multidimensional logistics network with valuable information
and different options regarding efﬁcient and sustainable trans-
portation.

The overall results demonstrated signiﬁcant system’s stabil-
ity for both on/off-chain HLF and GlusterFS mechanisms to
meet the required quality of Service (QoS). Table II presents
parts of the GlusterFS volume proﬁle per-brick I/O information
for each File Operation (FOP) of a volume. The per brick
information provides the possibility to identify the bottlenecks
in the storage system.

Figure 7 illustrates the non-linear performance effects of
data processing patterns in the context of the WRITE operation
performance obtained from the IOzone [44] benchmark suite
in combined vehicle data processing regime. It presents the
initial results as the relation between the particular ﬁle sizes
and the variation of the record sizes y ∈ [64, 2048] and
the aggregators x ∈ [4, 2048], corresponding with the Z-
axis to the performance in KBytes/sec. In general, the storage
system scales properly, and demonstrates high reliability and
robustness.

VII. CONCLUSION AND FUTURE WORK

In this paper we presented a three-step mechanism relying
on real-world data from Austria to process, simulate, and
visualize aggregated vehicle data in a hybrid on/off-blockchain
platform. To this end we relied on the 3DCoAutoSim Simu-
lation Platform and hybrid blockchain platform based on the

TABLE II
GLUSTERFS VOLUME PROFILE PER-BRICK I/O INFORMATION FOR EACH
FILE OPERATION PLATFORM (FOP) OF A VOLUME. THE PER BRICK
INFORMATION HELPS IN IDENTIFYING BOTTLENECKS IN THE STORAGE
SYSTEM. RESULT OF THE GLUSTER VOLUME PROFILE INFO

%-latency

4.82

5.70

11.35

11.88

47.35

AVG (µs) MIN (µs) MAX (µs)

# of calls

Operation

1132.28

156.47

315.02

1729.34

21.00

9.00

9.00

21.00

800970.00

665085.00

1433947.00

4575

39163

38698

WRITE

READDIRP

LOOKUP

2569638.00

7382

FXATTROP

104235.02

2485.00

7789367.00

488

FSYNC

Fig. 7. Preliminary performance data, collected with the IOzone [44] system
for WRITE off-chain operations with GlusterFS distributed ﬁlesystem as part
of the ADACHAIN framework; Z-axis - write speed in MBytes/s, X-axis -
ﬁle size in KBytes/s, Y-axis - record size in KBytes/s

hyperledger fabric and gluster ﬁle systems. The obtained re-
sults demonstrated efﬁciency and stability for both hyperledger
fabric and gluster ﬁle systems and ability of the both on/off-
blockchain mechanisms to meet the platform quality of service
requirements. In future work we aim at extending our research
by developing bilateral interaction between SUMO and the
blockchain to investigate different Intelligent Transportation
Systems (ITS) applications. We will additionally investigate
particular I/O limitation policies and asymmetry scenarios
between storage peers and corresponding clients.

ACKNOWLEDGMENT

This work was supported by ADaptive and Autonomous
data Performance connectivity and decentralized Transport
decision-making network (ADAPT) project funded by ICT of
the Future: 6th Call for Cooperative R&D Projects between
Austria, the austrian research promotion agency (FFG), and
China, Chinese Academy of Sciences (CAS).

REFERENCES

[1] J. Hong, A. T. Chin, and B. Liu, “Logistics service providers in china:
Current status and future prospects,” Asia Paciﬁc Journal of Marketing
and Logistics, 2007.

[2] M. N. Jovanovi´c, J. Damnjanovi´c, and J. Njegi´c, “Euro-asian overland
transport links: prospects and challenges,” in Handbook of International
Trade and Transportation. Edward Elgar Publishing, 2018.

[3] W. Team, “Rational use of personal protective equipment for coronavirus
disease (covid-19) and considerations during severe shortages,” Dec.
2020.

[4] S. Kumar, S. Velliangiri, P. Karthikeyan, S. Kumari, S. Kumar, and M. K.
Khan, “A survey on the blockchain techniques for the internet of vehicles
security,” Transactions on Emerging Telecommunications Technologies,
p. e4317, 2021.

[5] R. Jabbar, M. Kharbeche, K. Al-Khalifa, M. Krichen, and K. Barkaoui,
“Blockchain for the internet of vehicles: A decentralized iot solution
for vehicles communication using ethereum,” Sensors, vol. 20, no. 14,
p. 3928, 2020.

[6] V. Kashansky, R. Prodan, A. Validi, C. Olaverri-Monreal, and G. Rad-
chenko, “Monitoring system architecture for the multi-scale blockchain-
based logistic network,” in Proceedings of the 14th IEEE/ACM Interna-
tional Conference on Utility and Cloud Computing Companion, 2021,
pp. 1–6.

[7] V. Kashansky, N. Saurabh, R. Prodan, A. Validi, C. Olaverri-Monreal,
R. Burian, G. Burian, D. Hirsch, Y. Lv, F.-Y. Wang et al., “The adapt
project: Adaptive and autonomous data performance connectivity and
decentralized transport network,” in Proceedings of the Conference on
Information Technology for Social Good, 2021, pp. 115–120.

[8] “Otonomo.” [Online]. Available: https://otonomo.io/
[9] C. Olaverri-Monreal, S. Kumar, and A. D´Iaz- ´Alvarez, “Automated
Driving: Interactive Automation Control System to Enhance Situational
Awareness in Conditional Automation,” IEEE Intelligent Vehicles Sym-
posium, Proceedings, vol. 2018-June, pp. 1698–1703, 2018.

[10] J. Capalar and C. Olaverri-Monreal, “Hypovigilance in limited self-
driving automation: Peripheral visual stimulus for a balanced level of
automation and cognitive workload,” IEEE Conference on Intelligent
Transportation Systems, Proceedings, ITSC, vol. 2018-March, pp. 27–
31, 2018.

[11] C. Olaverri-Monreal, M. Gvozdic, and B. Muthurajan, “Effect on driv-
ing performance of two visualization paradigms for rear-end collision
avoidance,” IEEE Conference on Intelligent Transportation Systems,
Proceedings, ITSC, vol. 2018-March, pp. 77–82, 2018.

[12] A. Hussein, A. D´ıaz- ´Alvarez, J. M. Armingol, and C. Olaverri-Monreal,
“3dcoautosim: Simulator for cooperative ADAS and automated vehi-
cles,” in 2018 21st International Conference on Intelligent Transporta-
tion Systems (ITSC).

IEEE, 2018, pp. 3014–3019.

[13] C. Olaverri-Monreal, J. Errea-Moreno, and A. Diaz-Alvarez, “Imple-
mentation and evaluation of a trafﬁc light assistance system in a sim-
ulation framework based on v2i communication,” Journal of Advanced
Transportation, 2018.

[14] C. Olaverri-Monreal, J. Errea-Moreno, A. D´ıaz- ´Alvarez, C. Biurrun-
Quel, L. Serrano-Arriezu, and M. Kuba, “Connection of the SUMO
Microscopic Trafﬁc Simulator and the Unity 3D Game Engine to
Evaluate V2X Communication-Based Systems,” Sensors, vol. 18, no. 12,
p. 4399, 2018.

[15] L. Artal-Villa and C. Olaverri-Monreal, “Vehicle-pedestrian interaction
in sumo and unity3d,” in World Conference on Information Systems and
Technologies. Springer, 2019, pp. 198–207.

[16] A. Validi and C. Olaverri-Monreal, “Simulation-based impact of con-
nected vehicles in platooning mode on travel time, emissions and fuel
consumption,” in IEEE Intelligent Vehicle Symposium 2021, Nagoya,
Japan, 2021.

[17] F. Michaeler and C. Olaverri-Monreal, “3d driving simulator with vanet
capabilities to assess cooperative systems: 3dsimvanet,” in 2017 IEEE
Intelligent Vehicles Symposium (IV).

IEEE, 2017, pp. 999–1004.

[18] L. Shen and P. R. Stopher, “Review of gps travel survey and gps data-
processing methods,” Transport reviews, vol. 34, no. 3, pp. 316–334,
2014.

[19] F. Rodrigues, K. Henrickson, and F. C. Pereira, “Multi-output gaussian
processes for crowdsourced trafﬁc data imputation,” IEEE Transactions
on Intelligent Transportation Systems, vol. 20, no. 2, pp. 594–603, 2018.
[20] S. Zhang, L. Gong, Q. Zeng, W. Li, F. Xiao, and J. Lei, “Imputation of
gps coordinate time series using missforest,” Remote Sensing, vol. 13,
no. 12, p. 2312, 2021.

[21] J. Huang, B. Mao, Y. Bai, T. Zhang, and C. Miao, “An integrated fuzzy c-
means method for missing data imputation using taxi gps data,” Sensors,
vol. 20, no. 7, p. 1992, 2020.

[22] C. De Boor and C. De Boor, A practical guide to splines.

springer-

verlag New York, 1978, vol. 27.

[23] Z. Cao, D. Bryant, T. C. Molteno, C. Fox, and M. Parry, “V-spline:
An adaptive smoothing spline for trajectory reconstruction,” Sensors,
vol. 21, no. 9, p. 3215, 2021.

[24] N. T. Hintzen, G. J. Piet, and T. Brunel, “Improved estimation of trawling
tracks using cubic hermite spline interpolation of position registration
data,” Fisheries Research, vol. 101, no. 1-2, pp. 108–115, 2010.
[25] Y. Ren, Y. Liu, S. Ji, A. K. Sangaiah, and J. Wang, “Incentive mechanism
of data storage based on blockchain for wireless sensor networks,”
Mobile Information Systems, vol. 2018, 2018.

[26] I. Raicu, I. T. Foster, and P. Beckman, “Making a case for distributed ﬁle
systems at exascale,” in Proceedings of the third international workshop
on Large-scale system and application performance, 2011, pp. 11–18.
[27] B. Depardon, G. Le Mahec, and C. S´eguin, “Analysis of six distributed
ﬁle systems,” AL’archive ouverte pluridisciplinaire HAL, 2013.
[28] J. Blomer, “Experiences on ﬁle systems: Which is the best ﬁle system
for you?” in Journal of Physics: Conference Series, vol. 664, no. 4,
2015, p. 042004.

[29] I. Bird, “Computing for the large hadron collider,” Annual Review of

Nuclear and Particle Science, vol. 61, pp. 99–118, 2011.

[30] R. Thakur, W. Gropp, and E. Lusk, “On implementing mpi-io portably
and with high performance,” in Proceedings of the sixth workshop on
I/O in parallel and distributed systems, 1999, pp. 23–32.

[31] Y. Tsujita, A. Hori, T. Kameyama, and Y. Ishikawa, “Topology-aware
data aggregation for high performance collective mpi-io on a multi-core
cluster system,” in 2016 Fourth International Symposium on Computing
and Networking (CANDAR).

IEEE, 2016, pp. 37–46.

[32] D. Zhao, C. Shou, Z. Zhang, I. Sadooghi, X. Zhou, T. Li, and I. Raicu,
“Fusionfs: a distributed ﬁle system for large scale data-intensive comput-
ing,” in 2nd Greater Chicago Area System Research Workshop (GCASR),
2013.

[33] D. Zhao, Z. Zhang, X. Zhou, T. Li, K. Wang, D. Kimpe, P. Carns,
R. Ross, and I. Raicu, “Fusionfs: Toward supporting data-intensive
scientiﬁc applications on extreme-scale high-performance computing
systems,” in 2014 IEEE international conference on big data (Big Data).
IEEE, 2014, pp. 61–70.

[34] E. B. Boyer, M. C. Broomﬁeld, and T. A. Perrotti, “Glusterfs one storage
server to rule them all,” Los Alamos National Lab.(LANL), Los Alamos,
NM (United States), Tech. Rep., 2012.

[35] Y. Yuan and F.-Y. Wang, “Towards blockchain-based intelligent trans-
portation systems,” in 2016 IEEE 19th international conference on
intelligent transportation systems (ITSC).
IEEE, 2016, pp. 2663–2668.
[36] A. Validi, W. Morales-Alvarez, and C. Olaverri-Monreal, “Analysis of
the battery energy estimation model in sumo compared with actual anal-
ysis of battery energy consumption,” in 2021 16th Iberian Conference
on Information Systems and Technologies (CISTI).
IEEE, 2021, pp.
1–6.

[37] M. Behrisch, L. Bieker, J. Erdmann, and D. Krajzewicz, “Sumo–
simulation of urban mobility: an overview,” in Proceedings of SIMUL
2011, The Third International Conference on Advances in System
Simulation. ThinkMind, 2011.

[38] “Nnetconvert-sumo documentation.” [Online]. Available: https://sumo.

dlr.de/docs/netconvert.html

[39] “polyconvert-SUMO Documentation.” [Online]. Available: https://sumo.

dlr.de/docs/polyconvert.html

[40] “netedit - SUMO Documentation.” [Online]. Available: https://sumo.

dlr.de/docs/netedit.html

[41] “Route-tracemapper, -sumo documentation.” [Online]. Available: https:

//github.com/eclipse/sumo/blob/main/tools/route/tracemapper.py

[42] “Trafﬁc Conrol Interface.” [Online]. Available: https://sumo.dlr.de/docs/

TraCI.html

[43] “The Handbook Emission Factors for Road Transport

(HBEFA)

.” [Online]. Available: https://www.hbefa.net/d/documents/HBEFA3-3
TUG ﬁnalreport 01062016.pdf

[44] W. NORCOTT, “Iozone ﬁlesystem benchmark,” http://www. iozone. org/,

2003.

