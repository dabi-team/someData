2
2
0
2

r
p
A
7

]

C
D
.
s
c
[

1
v
6
6
7
6
0
.
5
0
2
2
:
v
i
X
r
a

Variants in managing supply chains on distributed
ledgers

Paolo Bottoni, Claudio Di Ciccio

Department of Computer Science – Sapienza University of Rome, Italy

Remo Pareschi

Stake Lab – University of Molise, Italy

Domenico Tortola

Department of Bioscience and Territory – University of Molise, Italy

Nicola Gessa, Gilda Massa

TERIN-SEN-CROSS, ENEA, Portici (NA), Italy

Abstract

Smart contracts show a high potential for ensuring that Supply Chain Manage-

ment strategies make a qualitative leap toward higher levels of optimality, not

only in terms of eﬃciency and proﬁtability but also in the aggregation of skills

aimed at creating the best products and services to bring to the market.

In

this article, we illustrate an architecture that employs smart contracts to im-

plement various algorithmic versions of the Income Sharing principle between

companies participating in a supply chain. We implement our approach on

Hyperledger Fabric, the most widespread platform for private and consortium

distributed ledgers, and discuss its suitability to our purposes by comparing this

design choice with the alternative given by public blockchains, with particular

attention to Ethereum.

1. Introduction

The advent of blockchains and distributed ledgers (DLs) has brought to the

fore, in addition to cryptocurrencies, highly innovative business models such as

Preprint submitted to Blockchain: Research and Application

May 16, 2022

 
 
 
 
 
 
Decentralized Autonomous Organizations (DAOs) and Decentralized Finance

(DeFi). These models were designed in the ﬁrst place for virtual companies

but can also be proﬁtably translated into the ongoing digital transformation of

the traditional economy, so as to contribute to the implementation of programs

such as Industry 4.0. For this to happen, they must be applied to business

processes inherent in brick-and-mortar companies. Supply Chain Management

is from this point of view a domain of particular interest, by providing, on the

one hand, the basis for decentralized business ecosystems compatible with the

DAO model and, on the other hand, an essential component in the management

of the physical goods that underlie the real economy.

In this article we intend to contribute to this evolution with a general supply

chain model based on the principle of Income Sharing (IS), according to which

several companies join forces, for a speciﬁc process or project, as if they were

a single company. Therefore, given these premises, the income is divided per

a previously agreed upon distribution scheme. This approach is in itself more

performing and eﬀective than traditional wholesale agreements, which lack co-

ordination among the participants in the supply chain. Furthermore, today it is

all the more practicable by virtue of the Internet-economy and the consequent

availability of platforms such as Amazon, Alibaba, Ozon and e-Bay, which small

and medium-sized enterprises (SMEs) can partner with to convey their oﬀers

on markets that were beyond reach before the Internet. These platforms are in

fact particularly eﬀective at endowing SMEs with e-commerce, marketing and

logistics functionalities that are essential for competing globally.

In implementing the IS model, various options for distributing income must

be taken into account, partly due to the role played by the Internet platforms

themselves in supporting the supply chains. At one end there is the well-known

and studied Revenue Sharing (RS) [1], according to which each of the partic-

ipants in the supply chain, platform included, bears its own costs and obtains

a proportional return in the form of sales revenues. However, other feasible

options are those in which part of the costs of the participants is borne by the

originator of the supply chain, or by the platform as regards its own services.

2

These costs are then deducted from the distribution of the proceeds, so that it

seems appropriate to speak in this case of Proﬁt Sharing (PS).

As shown in [2], criteria exist for quantifying, on the basis of volumes of goods

handled, number of participants, and stages of the supply chain, the preferability

of the various options for the supply chain stakeholders according to their roles.

We can assume that the option to pursue is evaluated and negotiated on a

project-by-project basis. This makes it therefore appropriate and desirable that

the full range of options be made available in an IS implementation. In addition,

it is not always easy to apply the management layer of the selected IS option to

supply chains of SMEs, where trust and transparency are often lacking. In many

cases, Internet platforms act as arbitrators in proposing IS options to SMEs,

and take on the management of the execution of the agreed upon distribution

schemes. By doing so, however, they are in a position to impose solutions to

their sole advantage as they take part in the income distribution themselves.

By virtue of their deployment on blockchains or DLs, smart contracts may

well be a panacea for these issues.

In fact, all that is needed is computing

the costs that must initially be incurred by the participating companies and

then distributing income. These tasks can be conveniently automated, pro-

vided that all stakeholders have visibility and consequent trust in the algorithm

that performs them, and Internet platforms would therefore be exempted from

carrying them out, while continuing to provide those services that have so ef-

fectively contributed to widening the range of commercial action of SMEs. In-

deed, by making the management algorithm operate as a smart contract, we

have a stringent and satisfactory response to these requirements: algorithmic

automation substantially mitigates the costs and complications deriving from

an additional level of human management that would otherwise be necessary,

and transparency resulting from deployment on blockchain or DL ensures the

trustability of such automated management for the participants.

Bearing in mind that IS is a general scheme which groups the more speciﬁc

options envisaged by RS and PS, it follows that optimal IS engineering should

thus rely on a layer of fundamental functionalities to be subsequently specialised

3

according to the choice made. To this end, we design a modular architecture

leveraging an algorithmic basis that encompasses the viable options. We illus-

trate an implementation based on Hyperledger Fabric and discuss its feasibility

as a platform of choice as opposed to the Ethereum public blockchain.

The rest of this paper is organised as follows. After providing an extensive

background in Section 2, we present a motivating scenario and general infor-

mation on our approach in Section 3. Then, Section 4 proposes a model for

ﬂexible management of smart contracts deriving from selecting speciﬁc options

relative to ﬁnancing the supply chain and sharing income. Details about the

speciﬁc calculations of income sharing are given in Section 5, while Section 6

discusses the processes by which participants cooperatively introduce the infor-

mation needed to run the selected algorithm, illustrating them with examples of

concrete interactions. Finally, Section 7 discusses implementation choices and

trade-oﬀs, and Section 8 concludes the paper.

2. Background

The video rental market was an incubator for the ﬁrst uses of Revenue Shar-

ing in the late 1990s, through the eﬀorts of Blockbuster, then the industry

leader, to exploit it in order to stimulate a steady growth in revenues, as de-

scribed by Dana and Spier in [3].

It was then systematically investigated in

the seminal article by Cachon and Lariviere [1]. An early study involving an

Internet platform in the set-up and run of an RS supply chain is provided by

Wang et al. [4], aiming to investigate the eﬀect of RS on the performance of a

sales channel where a supplying company uses Amazon for e-retail and logistics,

thus ﬁnding out that performance, both of the overall channel and of the indi-

vidual ﬁrm, depend on demand price elasticity as well as on the retailer’s share

of the channel cost. Qian et al. [5] provide a case study in the Chinese dairy

sector, where a number of structural problems, including an unbalanced alloca-

tion of proﬁts along the supply chain in favour of retailers (supermarkets) and

to the disadvantage of farmers and producers, have been addressed by applying

4

the inﬂuential three-stage RS model by Giannoccaro and Potrandolfo [6], with

an increase in overall proﬁtability of 12.49%. The algorithmic RS methodology

provided by Tononi et al. [7] is the cornerstone of the architecture described

here, mainly because it lends itself easily to implementation and is at the same

time highly modular and ﬂexible so that variations such as Proﬁt Sharing can

be straightforwardly integrated, as will be detailed in Section 5. Furthermore,

it explicitly addresses the problem of trust, so as to give the best results if the

participants of the supply chain are discouraged from showing production costs

higher than the real ones and none of them enjoys economic and informative

privileges over the others. These characteristics make blockchains and DLs a

perfect match for its deployment. In the agricultural sector, the eﬀective ap-

plication of this methodology, albeit with the dis-optimisations deriving from

the manual management of the coordination of the participants in the supply

chain, was among the results of the LEMURE (Logistica intEgrata MUltiagente

per REti di PMI)1 project. Focused on the tomato processing chain, it enjoyed

improvements of up to 17% in overall proﬁtability.

Its optimised version in

the form of a smart contract operating on blockchain/DL technologies is one

of the objectives of the project WEBEST (Wine EVOO Blockchain Et Smart

ContracT)2, both projects being funded by the Italian Ministry of Research.

On the Proﬁt Sharing side, C¸ anako˘glu and Bilgic [8] analyse the perfor-

mance over multiple periods of a two-stage telecommunications supply chain,

consisting of an operator and a vendor and, for optimisation purposes, suggest

a PS contract in which companies share both revenues and operating costs.

Wei and Choi [9] illustrate an industrial practice of PS in the apparel sector,

on the basis of which they explore the use of a wholesale pricing and proﬁt

sharing scheme for coordination of the supply chain according to the criteria of

1Funded by the Italian Ministry of Research under Law 297/99, Grant agreement

2007/32458.

2Funded by the Italian Ministry of Research under the PRIN program: Research Projects

of Relevant National Interest – Call 2020.

5

mean variance. Both of these contributions are part of the background used by

Gong et al. [2] to deﬁne selection criteria between RS and PS depending on the

characteristics of the supply chain and the role of the participants.

From an organisational standpoint, the reference model is the Decentral-

ized Autonomous Organization (DAO), widely known and discussed within the

blockchain community and with a signiﬁcant case history of implementations.

The brainchild of the founder of Ethereum Vitalik Buterin,3 a DAO is an en-

tity that lives on the Internet and exists autonomously, relying on individuals

to carry out tasks aimed at the realisation of a project or the provision of a

service and on algorithms to coordinate them. This deﬁnition ﬁts perfectly

to Income Sharing, in the spectrum of variations spanning RS and PS, to the

point that we could consider DAO and IS, in its deployment on blockchain or

DL, as a technological case of convergent evolution. This deployment actually

extends the DAO organisational model from subjects operating in the virtual

world to companies rooted in the real economy, with all the concreteness and

focus that follow. This is directly reﬂected in the procedural characteristics of

supply chains, focused as they are on bringing a product or service to the mar-

ket. Therefore, participants in an IS supply chain, while choosing to join freely,

once on board have every reason to collaborate closely in order to get results

as quickly and proﬁtably as possible. By contrast, an early and most ambitious

DAO project, eponymously named “The DAO” [10], was an investor-led, purely

virtual venture capital fund launched on the Ethereum blockchain in April 2016,

only to be disabled within a few months, due to a security attack known as the

“DAO Exploit” [11]. As argued by Morrison et al. [12], lack of focus, as well

as of collaboration and interaction between participants, largely explains the

untimeliness in reacting eﬀectively to the threat posed by the Exploit, which

led to the subtraction of approximately $ 60 million and to a subsequent hard

fork of the Ethereum blockchain in an eﬀort to run late for cover. In the longer

3https://blog.ethereum.org/2014/05/06/daos-dacs-das-and-more-an-incomplete-

terminology-guide/

6

run, this incident has also resulted in a temporary slowdown in DAO projects.

There is abundant literature, as well as a considerable number of ongoing

projects, on the use of blockchain and distributed ledger technologies to sup-

port supply chains and collaborative processes [13, 14, 15, 16], but relatively

little eﬀorts have been devoted to their use for the purpose of innovation in

the way of doing business. Indeed, the bulk of these contributions were so far

directed towards using blockchains and distributed ledgers in order to notarise

the production steps along the supply chain, so as to be able to document the

quality standards and compliance with current regulations of products and ser-

vices. However, there are a few theoretical contributions that are in line with

our approach, which aims at exploiting these technologies in order to create an

IT support for a radical business innovation. To begin with, Korpela et al. [17]

take a Transaction Cost Economics (TCE) [18, 19] point of view to provide, on

the basis of empirical evidence obtained from interviewing ﬁrms and business

managers, an overview of the perspectives opened by blockchain technology for

supply chain management. Treiblmaier [20] widens this perspective to include

the points of view of Positive Agency Theory, Resource-based View Theory and

Network Theory. Bottoni et al. engage in [21] in an extensive discussion on

the congruence between the methodological indications deriving from TCE and

the blockchain-based IT architecture for the deployment of Revenue Sharing

illustrated therein, which will be expanded here to ﬁt Proﬁt Sharing as well as

Internet platforms such as Amazon and its likes to the extent that they con-

tribute to realising the general principle of Income Sharing. As TCE favours

the keeping in the ﬁrm of just core competencies and externalizing all else, the

fundamental reasons for this congruence are in the ability to easily create global

supply chains that promote the core competencies of companies and outsource

all secondary ones by virtue of blockchain-managed trust. Alliances based on

eﬀective added value are hence enabled even between partners hitherto com-

pletely unknown to each other. This frees companies from the yoke of local

partnerships, justiﬁed by the old principle that trust is built by knowing each

other and doing business together over the years, so as to be able to seek out

7

the best partners globally. The way is thus opened to truly “glocal” excellence

where the best, production-wise or service-wise, of a given territory is combined

with the best of another area placed at an arbitrary geographical and cultural

distance. This congruence is all the more stringent in the context of the ar-

chitectural expansion implemented here, as Internet platforms become part of

the picture, with their ability to outsource and optimise services such as logis-

tics, marketing and e-commerce. Our architecture is therefore conﬁgured as a

higher-level platform, which guarantees trust in the interaction between com-

panies and the ever more pervasive Internet platforms, so as to give the former

the opportunity to take advantage of the latter without having to bend to their

bargaining power.

Morrison et al. [12] explore, from an Agency Theory point of view, the corpo-

rate governance implications of the DAO in its original formulation and identify

possible vulnerabilities deriving from a simplistic application of algorithmic trust

for its implementation. They address these weaknesses by proposing elements

of hierarchisation and focus for DAOs along lines ﬁtting our architecture.

Finally, we remark that a number of research works [22, 23, 24, 25] pro-

vide analytical models demonstrating that RS as a supply chain management

methodology is optimally transferable to blockchain and smart contracts. They

can be seen as providing formal background, albeit independently developed, to

the implementations illustrated here and in [21].

3. A view on supply chain management

Figure 1 depicts a map of the processes involved in the supply chain we

focus on in this work [26]. In particular, we remark that our approach directly

involves the ﬁrst and the last stage in the chain (coloured in blue in the ﬁgure):

(1) the building up of the supply chain, during which the criteria determining the

demands, prices, costs, production means and income sharing are deﬁned, and

(2) the sharing of the income. The production and marketing stages in between

are out of scope for this paper. As outlined in Section 2, most of the eﬀorts have

8

indeed been devoted to the blockchain-based automation and management of

those phases, whereas we focus on the use of blockchains as a means to optimise

the selection and mutual beneﬁt of the involved counterparts. Notice that the

beginning stage is key as the decisions taken therein (the selection of the core

criteria and subsequent assembly of the chain) have a reentrant eﬀect on the

ex-post phase (as the income sharing scheme was decided at the beginning).

Figure 1: The process architecture at large

In the remainder of this section, we introduce a motivating scenario and

provide a high-level view of the income sharing approach and of the special role

of service providers.

3.1. A motivating scenario

In many production environments, behind every product and service there

are several companies dedicated to the diﬀerent activities which, together, are

necessary to translate primary resources into a product or service. This is, in-

deed, the essence of supply chains. In a productive sector comprised of various

SMEs, such as the agri-food area, the contribution of the individual companies

is fundamental. The operational capacity of the chains in which they partici-

pate requires a higher level of complexity as problems and decisions request the

involvement of the consortium since they may not be solved by the single com-

pany. Therefore, the problems of chain management and integration become

fundamental to make them more and more eﬃcient [26].

Some problems of the agri-food chains are the signiﬁcant rise in prices from

primary production and the excessive level of intermediation. These issues are

tightly connected. One can typically observe a lack both of “vertical” and “hor-

izontal” coordination, whereby the former refers to the relationship between

supplier and customer and the latter to the cooperation between suppliers of

the same resource. However, the low level of integration is, in turn, caused by

9

Set up supply chainProcure productsShare incomeMarket productsthe diﬃculty of ﬁnding a company that is able to eﬀectively and authoritatively

cover the role of central coordinator among the SMEs in the chain [27]. By “au-

thoritative” we mean the ability and even the possibility of exerting conditions

on the behaviour of all the involved companies so that they act in the general

interest of the entire chain considered as a whole. The system we present, on

which the IS algorithm is based, is aimed at providing an answer to this problem.

The LEMURE project (MUR 4451/ICT) implemented and applied the Rev-

enue Sharing algorithm (part of the IS algorithm as presented next in Section 5),

in relation to an agri-food chain for products ready for consumption. The sup-

ply chain included a partner dedicated to the transformation and processing

phase of a series of raw materials (tomatoes, oil, spices) coming from multiple

suppliers. The production chain included also elements for packaging coming

from other suppliers. The ﬁnal products were distributed on the market at a

price computed in response to the demand.

Within the entire decentralised coordination approach [7], the production

chain was deﬁned by aggregating the fundamental costs of the production pro-

cess (based on variable costs, ﬁxed costs, production, time of recurrence, and the

bill of material). It was decided, also in relation to the supply chain optimisation

approach and the constrained linear programming, The solution to optimise the

supply chain was based on constrained linear programming. Therefore, data

were represented with a matrix structure so that the chosen formulations could

be generalised regardless of the length or width of the supply chain under analy-

sis. Similarly, a number of parameters were used, functional to the deﬁnition of

the production process as above alongside others that were deﬁned in relation to

the proﬁt sharing phase (negotiated quota, price, demand of the ﬁnal product).

We now proceed to discuss our conceptual setting in detail.

3.2. Income sharing

We recall here the characteristics of the IS algorithm, revising the presen-

tation in [21]. The algorithm leverages a series of matrices associated with the

supply levels that set up the chain description.

10

In this view, the supply chain is rooted in the request from an originator,

who advertises the need for a number of intermediate products and services in

given quantities. When a request is advertised, available and interested suppliers

(forming a set M ) tender to provide the necessary products and services (collec-

tively called resources, in a set K), also relying on other suppliers of resources

that precede them in the process. This mechanism establishes a hierarchy of lev-

els, ending with suppliers of raw materials or basic services that are self-suﬃcient

to satisfy a request. We denote levels with an integer i ∈ I = [0, n] ⊂ N. In a

multi-level structure (with n ≥ 2), resources to be provided to the higher level

(i+1) may need other resources from the lower level (i−1). In all supply chains,

we place the market at level 1 and descend the levels in the hierarchy (i.e., follow

the supply chain) as far as needed.

Notice that a supplier could operate at diﬀerent levels supplying diﬀerent

resources: for example, in a cheese production process a farmer could provide

both fodder for animals to a breeder and vegetable rennet for cheese production.

The structure at the basis of the supply chain is thus represented as a relation

SCS ⊆ I × K × M . With reference to the previous example, the farmer will be

involved in the chain at two levels, each provision being represented by a speciﬁc

node in the chain. The farmer will then receive quotas according to the type of

resource and the quantity supplied. Indeed, as discussed in [7], the construction

of the chain is driven by the product resource rather than by supplier identity.

We assume K and M to be ﬁnite non-empty sets and, as such, we can

map every k ∈ K and every m ∈ M to an integer in the intervals [0, |K|−1] and

[0, |M |−1], respectively. In other words, each item in SCS can be identiﬁed with

the triple of indices (i, k, m), where i corresponds to the level, k the resource

type in a speciﬁc level and m the supplier of the resource k at level i. We shall

also use the (i, k) pair to identify the provision of resource type k at level i, that

is, such that there exists m ∈ M such that (i, k, m) ∈ SCS.

In order to create a request, the originator provides the following parameters:

d ∈ N : demand of the ﬁnal product from the market;

11

p ∈ R+ : price;

BOMi,k ∈ R+ : the Bill of Material, maping each type of resource k ∈ K in the

supply chain at each level i ∈ I in which k appears to a quantity – that

is, the ratio of the contribution of k to the ﬁnal product.

The originator can set upper bounds to the number of types of resources to be

used (ress ∈ N, so that k ≤ ress), the number of levels (levs ∈ N, hence i ≤ levs),

and the number of participating suppliers (sups ∈ N, with m ≤ sups).

A supplier m contributing a resource of type k (at a certain level i) must in
turn characterise its contribution with various parameters: cfi,k,m ∈ R+: ﬁxed
production cost; cvi,k,m ∈ R+: variable production cost; qi,k,m ∈ R+: quantity
of provided resource; tpi,k,m ∈ R+: time span to cover cost (in days); gi,k ∈
R+: income quota (negotiated with other suppliers of k at level i).

3.3. Services and investors

In the previous paragraph, we have outlined the input data provided by

a supplier, which can be generally summarised in the production costs of the

partners in the production chain. In the IS algorithm, partners join forces to

maximise proﬁt. The entry of a DAO into the SCM leads to diﬀerent business

scenarios and approaches in the DeFi ﬁeld. In fact, let us consider a new subject,

conﬁgured either as a supplier of services for the supply chain, or as an investor

that believes in the added value that the DAO provides to the decreed cooper-

ation model. What does this mean in terms of the originator’s conﬁguration of

the supply chain, in terms of costs, or in terms of participation in the sharing

proﬁts? Following the scenarios detailed in Section 2, the coordination via IT

platform leads to considering three scenarios in the income sharing model:

(1) the presence of a new subject in the chain (the IT platform provider) that

shares both the risk and the ﬁnal proﬁt of the chain (PC),

(2) the charging of costs of the IT services to the originator, or

(3) the division of costs of the IT services among all partners.

12

In case the platform acts as an external service provider, hence not involved

in the production aspect of the chain, (scenarios (2) and (3)), the related costs

incur for the members of the chain to align themselves. These alignment costs

are then computed and indicated here as cAll.

Note that in the chain model the aim of the alignment matrix is threefold:

(i) alignment of quality characteristics;

(ii) product innovation;

(iii) process innovation (our case).

When the alignment cost occurs, then the m member will receive, from thew

overall proceeds, its compensation as a recovery for these costs.

4. A modular perspective on contracts

We propose a software infrastructure enabling a platform to propose to its

users (i.e., originators of and participants in a consortium) diﬀerent options for

income sharing and for the preferred form of ﬁnancing (i.e., having the platform

itself, the originator, or some speciﬁc member act as ﬁnance provider).

The proposal is based on the conceptual model in Figure 2, while concrete

data structures and aspects of its implementation (for the Hyperledger Fabric

framework) are presented in Section 6.

Figure 2: The conceptual model for the data structure supporting income sharing.

13

The model supports the separation of concerns between the production or-

ganisation of the supply chain structured according to the notions of Resource,

Supply, and ProductionProfile, and the EconomicProfile pertaining to each

speciﬁc ProductionSupplier for a given Supply.

A supply chain is uniquely associated with the Request put forward by an

originator, and is structured as a collection of TreeLevels.

In particular, a

request is described by attributes corresponding to the parameters discussed in

Section 3 (i.e., p for price, d for demand, etc.). Each ProductionTreeLevel

describes the resources needed to realise a semi-ﬁnished product to be used at

the level above, up to the ﬁnished product to be sold on the market. Each type

of resource is characterised by a name, a quota of income to be reserved for the

overall production of that resource and a list detailing how it will be supplied.

We assume that each supply chain produces just one type of product (pos-

sibly a packaging of a number of products) towards the market, this product

being seen as described by the request, conceptually thought to be present at

level 0, thus constituting the root for the tree representation of the supply chain.

The ﬁnal level is complemented by the information at the only instance

of ServiceLevel, describing Services of diﬀerent types, each provided by a

ServiceProvider. We currently envisage that the platform can give access to

FinancialServices, the provider of which is an investor expecting the invest-

ment amount to be remunerated at an income ratio. Other types of service are

generic ITServices, of which the platform itself, identiﬁed by a serviceName,

accessed through a URI, and exposing a cost towards the consortium.

Since the model is agnostic with respect to the implementation, we use

the dummy type number to indicate that the value is a numerical one. This

corresponds to the type number in the Ethereum implementation (see [21]), or

to ﬂoats or integers in the TypeScript/JSON implementation (see [28]).

The model of Fig. 2 allows for a ﬂexible and extensible realisation of consor-

tium supply chains, where the choice of the Proﬁt Sharing or Revenue Sharing

scheme is orthogonal to the deﬁnition of the productive structure. The econ-

omy descriptors in the EconomyProfile can be used in both schemes to evaluate

14

costs, while the actual remuneration depends on the chosen scheme. The same

will apply for IT Services, where costs are considered to be alignment cost for

the whole consortium. Investors will be remunerated according to the requested

ratio on their investment (the latter also seen as an alignment cost).

Therefore, the actual computation of the amount to be assigned to each

participant will consider the whole structure of costs, so that the diﬀerence be-

tween the two currently supported schemes is reduced to decreasing the income

by costs or not. It is immediate to notice that this calls for a realisation of the

Strategy pattern [29], so that the inclusion of a diﬀerent scheme would be re-

duced to providing a diﬀerent strategy for the scheme and, if needed, descriptors

in the AdditionalEconomy structure, to be used in that scheme.

5. Calculating sharing quotas

Based on the structure in Section 3.2, the algorithm to calculate the fair

conﬁguration of income sharing (once the ﬁnal price is realised on the market)

proceeds in ﬁve steps.

Step 1: For (i, k, m) ∈ SCS, the associated cost ci,k,m is computed as:

ci,k,m =

cfi,k,m
tpi,k,m · qi,k,m

+ cvi,k,m.

(1)

Step 2: The value of cmin

i,k is calculated as the minimum advertised cost ci,k,m

among all suppliers for each resource k at layer i.

cmin
i,k =

min
m∈{m∈M :(i,k,m)∈SCS}

(ci,k,m) .

(2)

Step 3: R, the gross income, is computed on the basis of the price (p) and

quantity of products established by the originator. Representing with m the

request advertised by the originator, we have

R = p ·

(cid:88)

m∈M

q0,0,m.

(3)

15

The share PLk of revenues to assign to the group of suppliers for resource k and

the total income at level i, PLi, are computed as follows:

PLi =

(cid:88)

k∈K

PLi,k, with PLi,k = d · cmin

i,k · BOMi,k.

The overall total income, PL, follows:

PL =

(cid:88)

i∈I

PLi.

(4)

(5)

The share of revenues, PLi,k,m, is calculated for each supplier m of the

resource k at layer i using a coeﬃcient fi,k,m, reﬂecting the contribution of

quantity qi,k,m with respect to the sum of contributions for resource k:

PLi,k,m = PLi,k · fi,k,m, with fi,k,m =

qi,k,m

(cid:80)
m∈M

qi,k,m

.

(6)

Step 4: The overall proﬁt of the supply chain is calculated keeping into con-

sideration so-called alignment costs, i.e., the extra-costs that some suppliers of

the resource k might have incurred with respect to the minimum cost, cmin
i,k .
These are typically related to costs required by strongly innovative production

processes, or to investments required to keep up with the expected quality stan-

dards for the supplied resource. To this end, parameter cs

i,k,m equates to the
minimum advertised cost if the advertised one is higher than that, or 0 oth-

erwise (this deters suppliers from exposing costs due to ineﬃciencies of their

processes). The individual (cAlli,k,m) and total (cAll) alignment costs are cal-

culated as follows:

cAll =

(cid:88)

(i,k,m)∈SCS

cAlli,k,m, with cAlli,k,m=

PLi,k,m
cmin
i,k

(ci,k,m−cs

i,k,m)

(7)

and cs

i,k,m =




i,k,m if ci,k,m > cmin
cmin
i,k,m



0

otherwise.

We can now subtract these costs from the total income, before proceeding

to calculate the sharing of the net income. Hence, denoting with PC the net

16

proﬁt chain, with R and PL calculated at step 3, and cAll as above, we have

PC = R − PL − cAll.

(8)

Step 5: For each participant, the PCi,k,m share is established based on the

quotas of resources provided by each supplier as per some previous negotiation,

with respect to each resource k based on the negotiated requirements gi,k, under

the constraint that

gi,k = 1.

(cid:88)

i∈I
k∈K

We denote with G the matrix consisting of gi,k elements for every i ∈ I, k ∈ K.

Then, each partner receives a speciﬁc revenue proﬁt PCi,k,m, calculated con-

sidering the income quota gi,k (negotiated for every resource) and the speciﬁc

supplied quantity fi,k,m. To this end, we use the following formula:

PCi,k,m = fi,k,m · gi,k · PC.

(9)

This last step closes the loop and highlights the fundamental diﬀerence be-

tween IS and vertically integrated chains dominated by subjects who, being

ﬁnancially much stronger than the others, can impose downward auction mech-

anisms with eﬀects of economic starvation of the weaker suppliers. In fact, on

the one hand an IS consortium results from the lighting up by an originator

of the entrepreneurial fuse of the initiative, yet on the other hand even those

companies that join subsequently will be entitled to fair compensation through

the distribution of the proceeds. Furthermore, the lower the internal supply

costs are kept, the larger the returns will be as an eﬀect of greater competitive-

ness on the market. Therefore, we can say that IS provides the eﬀectiveness of

vertical integration yet maintains an equitable distribution of returns, accord-

ing to a mechanism that can boost the competitiveness of consortia of small

and medium-sized enterprises against giants such as Amazon and Walmart, as

extensively argued and illustrated in [21]. Also notice that the algorithm only

comes into play for the purpose of managing freely negotiated agreements, as

set out in the process of deﬁnition of costs and prices above.

17

Following the scenarios detailed in Section 3, we consider now the case in

which the IT platform is provided by a external service provider. Then, the

alignment cost can be borne by the originator or divided among all the partners.

This means that ci,k,m > cmin

i,k and the m member should receive the following

compensation for the alignment costs:

cAlli,k,m =

PLi,k,m
cmin
i,k

· (ci,k,m−cs

i,k,m).

(10)

At this stage, we can conﬁgure the i, k, and m indexes depending on whether

the originator or all the partners bear the costs. When only the originator

provides this cost, assuming that the originator is the second provider (m = 2)

of resource k = 1 at the ﬁrst level of the chain (i = 1), we have:

cAll1,1,2=

PL1,1,2
cmin
1,1

(c1,1,2−cs

1,1,2).

(11)

This will be the only value diﬀerent from 0 in the cAll matrix.

If instead all partners cover the cost of the IT platform provider, then Equa-

tion (10) is applied for each node in the chain. If the IT platform provider is

a member of the chain, she takes part of the proﬁt as described in [2] with a

speciﬁc income quota. In the RS model presented in [28], the G matrix is used

to express the cutting ratio of the diﬀerent resource providers. Suppose now

that a third-party IT provider joins the consortium. As the matrix indexing

scheme is ﬂexible, it can manage new partners, whether in the production chain

or outside it (as in this case with an IT platform provider). The IT platform

provider is not product-oriented. Hence, following the approach described in [7],

the most suitable solution is to add a ﬁnal “third party” level under level n.

This extra level acts only on the G matrix, where the negotiated requirements

are stored. This means that only in G do we ﬁnd at level n + 1 a value that is

diﬀerent from zero and we can manage this value according to the model in [2].

6. Interacting with the smart contracts

We present here an overview of how the participants in a supply-chain con-

sortium would interact with the platform, through the interfaces for originator,

18

supplier, IT provider and ﬁnance provider (investor ).

As discussed before, we assume that the choice of the usage conﬁguration

of the platform has been made oﬄine, during negotiations for the formation of

the consortium. Hence, the originator has two tasks: (1) to deﬁne the over-

all constraints (e.g., the number of levels) and the top level of the productive

structure (i.e., the types of resources and relative quantities to obtain the end

product); and (2) to set the platform to operate under the agreed options (Proﬁt

or Revenue Sharing, presence of an investor, required IT services).

Figure 3: The form for the speciﬁcation of the request properties

Figure 3 presents a screenshot of the form for the speciﬁcation of the prop-

erties characterising a request. The form is integrated with a dashboard to set

the options related to the sharing scheme and the presence of external services

(see Fig. 4). In particular, the latter lists the possible actions that a user can

perform on the supply chain tree to add new elements to the structure. The last

command executes the revenue sharing algorithm on the actual supply chain.

Once these options have been chosen, each participant in the system is pre-

sented with an interface to enter values for the parameters required by the

19

Figure 4: The dashboard for the conﬁguration of the consortium structure

selected conﬁguration. Typically, the interface provides a ﬁeld for every descrip-

tor in the production and economy proﬁles (possibly including the additional

economy descriptors) to be set by the supplier.

In particular, Fig. 5 depicts the interface for a supplier of a semi-ﬁnished

product. It consists of a form divided in three main sections: in the ﬁrst section,

suppliers can insert data identifying their contribution, while the second one is

for deﬁning the economic proﬁle related to that supply, declaring ﬁxed and

variable costs. The last section is meant to be ﬁlled with the production data

(supplied quantity and period of cost recurrence).

Figures 6 and 7 show the interfaces that allow the user to deﬁne, respectively,

ﬁnancial and IT services. Some descriptors are common to all types of service

(e.g., name, ID of the service as a URL, and ID of the provider as a URI). In

addition, ﬁnancial services are deﬁned by the invested amount of money and

the cutting ratio, IT services by their cost and the URL for access.

When all the suppliers and providers have uploaded their information, the

resulting supply chain structure can be stored in a form speciﬁed by the JSON

scheme of Listing 1, (edited here for the sake of readability). Each class is repre-

sented as a structure, scoped by a pair of curly brackets, while lists of elements

20

Figure 5: The interface for the product supplier.

21

Figure 6: The interface for providers of ﬁnancial services

Figure 7: The interface for providers of IT services

22

with a given structure are surrounded by square brackets. Numerical types are

considered to be implemented either as ﬂoat associated with the default ‘0.0’,

or integers, for which the default is ‘0’. String types, including URIs and URLs,

are set to empty string if not speciﬁed otherwise.

Listing 1: An excerpt of the JSON descriptor for the case at hand

" requestId " : 1 , " originator " : " Originator 0 " , " p " : 4 5 0 , " d " : 4 , " levs " : 2 , " ress " : 3 , " sups " : 4 ,

" levels " : [ {

" i " : 1 ,

" resources " : [ {

" resourceName " : " K 1 " , " g " : 0 . 4 , " BOM " : 8 . 0 ,

" supplyList " : [ { " m " : 0 ,

" supplierData " : { " supplierName " : " M 0 " ,

" supplierId " : " https : // m 1 @www . supplier 1 . com : 4 5 6 /" },

" ec onom i cPro fil e " : { " cf " : 3 5 , " cv " : 3 5 , " additionalData " : {} },

" p r o du c t i on P rof i le " : { " q " : 1 2 , " tp " : 3 6 5 } } ] },

. . . more resources listed here. . .

. . . level 2 details listed here.

] },

] ,

" serviceLevel " : {

" f ina nci al S erv i ce s " : [ { " serviceName " : " S 0 " ,

" uri " : " https : // s 0 @www . example . com : 1 2 3 /" ,

" providerId " : " https : // sp 0 @www . a notherexample . com : 4 5 6 /" ,

" invested " : 1 2 0 , " ratio " : 0 . 4 5 } ] ,

" itServices " : [ { " serviceName " : " S 1 " ,

" uri " : " https : // s 1 @www . example . com : 1 2 3 /" ,

" providerId " : " https : // sp 1 @www . a notherexample . com : 4 5 6 /" ,

" access " : " http : // www . serviceurl . com " , " cost " : 9 0 } ] } }

{

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

21

22

As a visual counterpart, Fig. 8 shows the page presented to participants to

summarise the resulting conﬁguration of the supply chain (request) data. The

summary starts with the overall descriptors of a request, and then, for each

level in the chain, presents a list of supplied resources. For each resource type,

properties relative to the resource itself and the relative supplies are shown.

The ﬁrst level presents the information about ﬁnancial and IT services. With

each set period, given the reaped incomes in that lapse of time, the algorithm

applies the strategy corresponding to the selected sharing scheme to evaluate

the quotas for the diﬀerent participants.

Finally, Fig. 9 depicts a screenshot representing the situation after comput-

ing the income quotas for the diﬀerent participants (in this case, two service

providers: the ﬁnancing actor and the product supplier).

23

Figure 8: A summary of a conﬁguration for a supply chain

Figure 9: The interface showing the ﬁnal sharing of proceeds

24

7. Implementation trade-oﬀs

The prototypes for RS in [21] and [28] have been implemented in Ethereum

and Hyperledger, respectively. We have extended the latter to encompass the

Income Sharing architecture. The choice between the two options represents a

crossroads from the viewpoint of implementation, each with its pros and cons as

illustrated next. However, we remark that this divergence of directions can be

recomposed through interchain integration mechanisms aiming to combine the

best of the two possible worlds, namely public blockchains, of which Ethereum is

the most prominent representative as for industrial applicability, and private or

consortium DLs, similarly represented by the Hyperledger software ecosystem.

The aspects to be considered in order to make that choice essentially corre-

spond to the trade-oﬀs between algorithmic trust and human trust, on one hand,

and the balance among privacy, computational eﬃciency and consensus robust-

ness, on the other hand. Ethereum maximises the algorithmic trust guaranteed

by the thousands of nodes of its network and the robustness of its validation pro-

tocol based on Proof-of-Work (PoW). This is because Ethereum could be put to

test by nodes with fraudulent intentions, which are not directly identiﬁable due

to the pseudonimity guaranteed by the platform. For the same reason, by en-

abling global interaction between companies through algorithmic trust, it lends

itself perfectly to an optimal implementation of the principles of Transaction

Cost Economics. Yet, all this exacts a high toll on eﬃciency as a consequence

of the costs of block construction. Also, it requires that method invocations

are paid by means of gas units. As the price of cryptocurrencies is subject to

oscillations with an upward trend, this aspect could become far from negligible

in the presence of numerous transactions. Furthermore, since the blockchain is

public, the privacy of transaction payloads is not guaranteed – an aspect which

can be a deterrent for the adoption of the system in an enterprise context. This

provides a likely reason for the losing ground of Ethereum versus Hyperledger

in the ﬁrst wave (essentially focused on tracking production processes) of supply

chain projects on blockchain and on distributed ledger technology, as reported

25

in [30].

By contrast, opting for Hyperledger moderates the role of algorithmic trust;

yet, this aspect may be compensated by governance mechanisms where the var-

ious participants know each other. Privacy can be ﬂexibly managed at various

levels, starting from the permissioned nature of the participation. Computa-

tional eﬃciency is also increased by virtue of the smaller number of nodes and

the computationally less demanding consensus protocols that can be applied as-

suming a higher level of human trust (such as the Crash-Fault Tolerant protocols

adopted in Huperledger Fabric4). In any case, the trust management systems in

place guarantee, despite having a more limited role than in public blockchains, a

level of automation and reliability such as to avoid, in order to join the organisa-

tion, the long and expensive preliminary checks typical of pre-digital economy.

Furthermore, the fact that governance is not completely alienated in favour of a

totally algorithmic set-up facilitates corrective intervention in the face of emer-

gencies and anomalies, an aspect that has been decisively lacking in the case of

the DAO Exploit as pointed out by Morrison et al. [12]. This feature, combined

with the focus and goal-orientation of the Income Sharing consortia, appears

particularly promising for their robust and eﬀective functioning.

A further concern derives from being bound in Ethereum to using its dedi-

cated language (Solidity) and virtual machine (EVM). By contrast, Hyperledger

supports a large variety of very popular languages. In particular, Fabric, the

most popular among the Hyperledger frameworks and the one adopted here for

the implementation of the IS architecture, supports Java and JS, in addition

to the more recent Go, and can be deployed through much more common and

widespread installation setups (NPM, Node, Go, Docker). This obligation is

not to be taken lightly: although optimised for EVM, Solidity is a young lan-

guage, therefore still immature in some respects, which could hinder large scale

developments. A speciﬁc limiting factor is that a rather small memory stack is

4https://www.hyperledger.org/wp-content/uploads/2017/08/Hyperledger_Arch_WG_

Paper_1_Consensus.pdf

26

dedicated to declarable variables. For IS algorithms that involve a large number

of parameters, this makes it necessary to distribute the arguments over several

functions that need to call each other, with consequent unnecessary complica-

tions in the structure of the code. Another problematic aspect is that numeric

variables in decimal format are poorly supported, which is of no help for the

calculation of income shares, where operations with decimal numbers are the

order of the day. Garriga et al. [31] and Palma et al. [32] illustrate method-

ologies that are applicable to Income Sharing, among others, to choose on the

basis of these and other trade-oﬀs among the Hyperledger platforms (of which

Fabric is the best known) and the available public blockchains.

8. Conclusions and future work

We presented an architecture for virtual consortium organizations, but with

members corresponding to companies rooted in the economy, based on the gen-

eral principle of Income Sharing between participants in a supply chain. We

have illustrated its implementability on a blockchain or distributed ledger in-

frastructure which, through the use of smart contracts, guarantees both its

optimality and reliability. We have shown how this architecture makes available

a wide menu of optimized executions of supply chains attributable to diﬀerent

Income Sharing options, in a spectrum of choices ranging from Revenue Shar-

ing to Proﬁt Sharing, and we have included in the scenario the role played by

service providers such as Amazon and other Amazon-like Internet platforms,

whose role is ever more relevant in the global economy. We have also indicated

the relationship between this architecture and the well-known Decentralized Au-

tonomous Organization (DAO), of which it takes up the basic vision, however

strengthening it in terms of economic concreteness as well as computational

feasibility.

The implementation of this architecture was carried out in Fabric, the most

successful platform to date for private and consortium distributed ledgers, de-

veloped within the Hyperledger ecosystem. We have indicated the advantages

27

from the point of view of privacy and eﬃciency of this implementation choice.

However, we have also highlighted how this type of implementation implies a de-

crease in the level of algorithmic trust, guaranteed instead by public blockchains.

A future development we intend to pursue is to recover high standards of algo-

rithmic trust by integrating the deployment of Income Sharing on a distributed

ledger with a public blockchain capable of giving a further validity stamp to

the processes thereby executed.

In this perspective, the bulk of the work is

done within the ledger, thus maintaining the aforementioned advantages, but

some of the process milestones (such as the ﬁnalisation of income distribution)

can receive further and deﬁnitive validation through a public blockchain. This

type of integration is in fact provided speciﬁcally with Ethereum for the Besu

and Burrow frameworks from the Hyperledger software ecosystem. Fabric itself

is amenable, albeit not so automatically, but without restrictions with respect

to the public blockchain to be integrated with (as for example illustrated in

[33] regarding an integration between Fabric and the Stellar blockchain). As

often happens, it is thus a question of putting together the best of two possible

worlds.

Acknowledgment

The work was partially supported by Sapienza University of Rome with the

“Consistency problems in distributed and concurrent systems” research project.

This research work was performed under the MoU between ENEA, the Depart-

ment of Computer Science at Sapienza, and the University of Molise. The work

of Claudio Di Ciccio was partly supported by the Italian Ministry of University

and Research (MUR) under grant “Dipartimenti di eccellenza 2018-2022” of the

Department of Computer Science at Sapienza and by the Sapienza SPECTRA

research project.

28

References

[1] G. P. Cachon, M. A. Lariviere, Supply chain coordination with revenue-

sharing contracts: Strengths and limitations, Management Science 51 (1)

(2005) 30–44.

[2] D. Gong, S. Liu, M. Tang, L. Ren, J. Liu, X. Liu, Revenue sharing or

proﬁt sharing? an internet production perspective, Advances in Production

Engineering & Management 13 (1) (2018) 081–092.

[3] J. Dana, Jr., K. Spier, Revenue sharing and vertical control in the video

rental industry, Journal of Industrial Economics 49 (2001) 223–45. doi:

10.1111/1467-6451.00147.

[4] Y. Wang, L. Jiang, Z.-J. Shen, Channel performance under consignment

contract with revenue sharing, Management Science 50 (1) (2004) 34–

47. arXiv:https://doi.org/10.1287/mnsc.1030.0168, doi:10.1287/

mnsc.1030.0168.

URL https://doi.org/10.1287/mnsc.1030.0168

[5] G. Qian, Y. Zhang, J. Wu, Y. Pan, Revenue sharing in dairy industry sup-

ply chain - a case study of hohhot, china, Journal of Integrative Agriculture

12 (12) (2013) 2300–2309. doi:10.1016/S2095-3119(13)60585-7.

[6] I. Giannoccaro, P. Pontrandolfo,

Supply chain coordination by

revenue

sharing

contracts,

International

Journal

of Production

Economics

89

(2)

(2004)

131–139,

supply Chain Management.

doi:https://doi.org/10.1016/S0925-5273(03)00047-1.

URL

https://www.sciencedirect.com/science/article/pii/

S0925527303000471

[7] R. Tononi, G. Massa, R. Raimondi, G. Spagna, La supply chain integrata,

Energia Ambiente e Innovazione 6.

29

[8] E. C¸ anako˘glu, T. Bilgi¸c, Analysis of a two-stage

telecommuni-

cation supply chain with technology dependent demand, Euro-

pean Journal of Operational Research 177 (2)

(2007) 995–1012.

doi:https://doi.org/10.1016/j.ejor.2006.01.006.

URL

https://www.sciencedirect.com/science/article/pii/

S0377221706000361

[9] Y. Wei, T.-M. Choi, Mean–variance analysis of supply chains un-

der wholesale pricing and proﬁt

sharing schemes, European Jour-

nal of Operational Research 204 (2) (2010) 255–262.

doi:https:

//doi.org/10.1016/j.ejor.2009.10.016.

URL

https://www.sciencedirect.com/science/article/pii/

S0377221709007607

[10] S. Bannon, The Tao of “The DAO” or: How the autonomous corporation

is already here, https://techcrunch.com/2016/05/16/the-tao-of-the-dao-or-

how-the-autonomous-corporation-is-already-here/.

[11] V. Dhillon, D. Metcalf, M. Hooper, Blockchain Enabled Applications:

Understand the Blockchain Ecosystem and How to Make it Work for

You, Apress, Berkeley, CA, 2017, Ch. The DAO Hacked, pp. 67–78.

doi:10.1007/978-1-4842-3081-7_6.

[12] R. Morrison, N. C. H. L. Mazey, S. C. Wingreen, The DAO controversy:

The case for a new species of corporate governance?, Frontiers Blockchain

3 (2020) 25. doi:10.3389/fbloc.2020.00025.

URL https://doi.org/10.3389/fbloc.2020.00025

[13] C. Di Ciccio, A. Cecconi, M. Dumas, L. Garc´ıa-Ba˜nuelos, O. L´opez-

Pintado, Q. Lu, J. Mendling, A. Ponomarev, A. B. Tran, I. Weber,

Blockchain support for collaborative business processes, Inform. Spektrum

42 (3) (2019) 182–190.

[14] I. Weber, X. Xu, R. Riveret, G. Governatori, A. Ponomarev, J. Mendling,

Untrusted business process monitoring and execution using blockchain, in:

30

BPM, Vol. 9850 of Lecture Notes in Computer Science, Springer, 2016, pp.

329–347.

[15] F. Corradini, A. Marcelletti, A. Morichetta, A. Polini, B. Re, F. Tiezzi, En-

gineering trustable choreography-based systems using blockchain, in: SAC,

ACM, 2020, pp. 1470–1479.

[16] M. F. Madsen, M. Gaub, T. Høgnason, M. E. Kirkbro, T. Slaats, S. De-

bois, Collaboration among adversaries: Distributed workﬂow execution on

a blockchain, in: FAB, 2018, pp. 8–15.

[17] K. Korpela, J. Hallikas, T. Dahlberg, Digital supply chain transformation

toward blockchain integration, in: T. Bui (Ed.), Proc. HICSS 2017, Schol-

arSpace / AIS Electronic Library (AISeL), 2017, pp. 1–10.

[18] R. H. Coase, The nature of the ﬁrm, Economica 4 (4) (1937) 386–405.

doi:10.2307/2626876.

URL http://www.jstor.org/stable/2626876

[19] O. Williamson, The Economic Institutions of Capitalism: Firms, Markets,

Relational Contracting, Free Press, 1985.

URL https://books.google.it/books?id=lj-6AAAAIAAJ

[20] H. Treiblmaier, The impact of the blockchain on the supply chain: A

theory-based research framework and a call for action, Supply Chain Man-

agement: An International Journal 2 (6) (2018) 545–559.

[21] P. Bottoni, N. Gessa, G. Massa, R. Pareschi, H. Selim, E. Arcuri, Intel-

ligent smart contracts for innovative supply chain management, Frontiers

Blockchain 3 (2020) 535787.

[22] T. Choi, Supply chain ﬁnancing using blockchain: impacts on supply chains

selling fashionable products, Ann. Oper. Res.

[23] S. Hayrutdinov, M. Saeed, R. Azamat, Coordination of supply chain under

blockchain system-based product lifecycle information sharing eﬀort, J. of

Advanced Transportation 12 (10).

31

[24] L. Liu, F. Li, E. Qi, Research on risk avoidance and coordination of supply

chain subject based on blockchain technology, Sustainability 11 (7).

[25] K. Korsten, A blockchain-based supply chain contract - an analysis to the

development of a supply chain contract on a blockchain, Master’s thesis,

Eindhoven University of Technology (2019).

[26] M. Dumas, M. La Rosa, J. Mendling, H. A. Reijers, Fundamentals of Busi-

ness Process Management, Second Edition, Springer, 2018.

[27] R. Tononi, G. Amorosi, Managing Virtual Web Organizations in the 21st

Century: Issues and Challenges, IGI Global, 2002, Ch. Networks of SMEs

as Virtual Web Organizations: An Experimental Program Aimed at Sup-

porting SMEs in Depressed Areas of Italy, p. 198–212.

[28] P. Bottoni, R. Pareschi, D. Tortola, N. Gessa, G. Massa, Distributed ledgers

to support revenue-sharing business consortia: a hyperledger-based im-

plementation, in: IEEE Symposium on Computers and Communications,

ISCC 2021, Athens, Greece, September 5-8, 2021, IEEE, 2021, pp. 1–6.

doi:10.1109/ISCC53001.2021.9631473.

URL https://doi.org/10.1109/ISCC53001.2021.9631473

[29] E. Gamma, R. Helm, R. Johnson, J. Vlissides, Design Patterns: Elements

of Reusable Object-Oriented Software, Addison-Wesley, 1994.

[30] N. Vadgama, P. Tasca, An analysis of blockchain adoption in supply chains

between 2010 and 2020, Frontiers Blockchain 4 (2021) 610476.

[31] M. Garriga, S. D. Palma, M. Arias, A. D. Renzis, R. Pareschi, D. A. Tam-

burri, Blockchain and cryptocurrencies: A classiﬁcation and comparison of

architecture drivers, Concurr. Comput. Pract. Exp. 33 (8).

[32] S. D. Palma, R. Pareschi, F. Zappone, What is your distributed (hy-

per)ledger?, in: ICSE 2021 Workshops, ACM, 2021, pp. 27–33.

32

[33] F. Carlini, R. Carlini, S. D. Palma, R. Pareschi, F. Zappone, The Genesy

model for a blockchain-based fair ecosystem of genomic data, Frontiers

Blockchain 3 (2020) 483227.

33

