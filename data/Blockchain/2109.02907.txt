1 

A P2P Network Topology for Optimizing 
Partition Tolerance to Reach the CAP 
Guarantee Bound in Consortium Blockchains 

Han Wang, Hui Li, Zixian Wang, Baofu Han, Minglong Zhang, 
 Peter Han Joo Chong, Senior Member, IEEE, Xiaoli Chu, Senior Member, IEEE,  
Yang Liu, Soung-Yue Liew, and Lunchakorn Wuttisittikulkij 

Abstract—Decentralized cryptocurrency systems, known as blockchains, have shown promise as infrastructure for mutually 
distrustful parties to agree on transactions safely. However, Bitcoin-derived blockchains and their variants suffer from the 
limitations of the CAP Trilemma, which is difficult to be solved through optimizing consensus protocols. Moreover, the P2P 
network of blockchains have problems in efficiency and reliability without considering the matching of physical and logical 
topologies. For the CAP Trilemma in consortium blockchains, we propose a physical topology based on the multi-dimensional 
hypercube with excellent partition tolerance in probability. On the other hand, the general hypercube has advantages in solving 
the mismatch problems in P2P networks. The general topology is further extended to a hierarchical recursive topology with 
more medium links or short links to balance the reliability requirements and the costs of physical network. We prove that the 
hypercube topology has better partition tolerance than the regular rooted tree topology and the ring lattice topology, and 
effectively fits the upper-layer protocols. As a result, blockchains constructed by the proposed topology can reach the CAP 
guarantee bound through adopting the proper transmission and the consensus protocols protocols that have strong consistency 
and availability. 

Index Terms—Blockchain, CAP Trilemma, partition tolerance, physical topology, P2P network 

——————————   ◆   —————————— 

1  INTRODUCTION

B 

ITCOIN [1], as the first widely-deployed, decentral-
ized global cryptocurrency, has sparked hundreds of 
variant  systems.  The  core  technological  innovation 
powering these systems is the decentralized infrastruc-
ture known as the blockchain. Although numerous pro-
tocols have been proposed to improve the performance 
of blockchains, none of them get rid of the CAP (Con-
sistency, Availability, and Partition Tolerance) Trilemma 
[2]  in  the  distributed  theory.  Specifically,  consistency, 
availability, and partition tolerance cannot  be  strongly 
satisfied simultaneously in the distributed system.  

In  order  to  balance  the  three  properties  in  CAP 

———————————————— 

•  Han Wang, Hui Li, Zixian Wang, and Baofu Han are with the Shenzhen 

Graduate School, Peking University, Shenzhen, China. E-mail: 
{wanghan2017, wangzixian}@pku.edu.cn, lih64@pkusz.edu.cn, Baofu-
Han@hotmail.com. 

•  Minglong Zhang and Peter Han Joo Chong are with the Department of 

Electrical and Electronic Engineering, Auckland University of Technology, 
Auckland, New Zealand. E-mail: {mizhang, peter.chong}@aut.ac.nz. 
•  Xiaoli Chu and Yang Liu are with the Department of Electronic and Elec-
trical Engineering, The University of Sheffield, Sheffield, U.K. E-mail: 
{x.chu, yangliu}@sheffield.ac.uk. 

•  Soung-Yue Liew is with the Faculty of Information and Communication 

Technology, Universiti Tunku Abdul Rahman, Kampar, Malaysia. E-mail: 
syliew@utar.edu.my. 

•  Lunchakorn Wuttisittikulkij is with Wireless Communication Ecosystem 
Research Unit, the Department of Electrical Engineering, Chulalongkorn 
University, Bangkok, Thailand. E-mail: wlunchak@chula.ac.th. 

Trilemma, some approaches optimize at the consensus 
layer.  Original  Nakamoto  consensus  meet  good  parti-
tion tolerance through the longest chain rule to choose 
the main chain. However, forks in the main chain would 
turn  the  strong  consistency  to  the  final  consistency 
within a period, which results in long confirming time 
and limited throughput. In public blockchains, several 
alternative ledger structures [26], [27], [28], [29], [30] are 
explored  to  make  the  most  of  computing  power.  The 
performance of these protocols is still limited by the net-
work synchronization rate because of their weak or final 
consistency.  Once  blocks  are  generated  faster  than  the 
network  synchronization  rate,  the  number  of  forks 
would  expand  and  the  system  would  be  insecure.  In 
consortium  blockchains  and  private  blockchains,  BFT 
(Byzantine Fault Tolerant) consensus protocols such as 
PBFT [21] are widely used to avoid forks [23]. Although 
nodes  can  reach  agreement  before  the  next  round  of 
consensus,  BFT-like  protocols  have  the  disadvangates 
of communication complexity and scalability. Moreover, 
some  performance-driven  consensus  protocols  [3],  [4], 
[5],  [6],  [24],  [25]  guarantee  consistency  and  partition 
tolerance  by  delegation  mechanism  but  decrease  the 
number  of  core  nodes  participating  in  consensus.  A. 
Lewis-Pye  and  T.  Roughgarden  [22]  have  further 

 
 
 
2 

proved an analog of the CAP Trilemma at the consensus 
layer that no protocol is both adaptive and has finality 
in the unsized and partially synchronous network. 

According to whether the network is centralized, the 
P2P network is divided into fully distributed P2P net-
work and semi-distributed P2P network. 

In  addition  to  optimizing  consensus  protocols,  an-
other idea is to optimize the P2P (Peer-to-Peer) network 
[10].  Many  consortium  blockchains  use  the  structured 
P2P  network  without  considering  the  matching  of  the 
physical  topology.  As  a  kind  of  overlay  network,  the 
query of P2P network consists of logical hops. Accord-
ing  to  the  routing  information  saved  by  each  node,  a 
path with the least logical hops is selected as the optimal 
query  path.  However,  the  two  nodes  with  close  logic 
distance in the overlay network are often not close at the 
physical layer, which affects the query efficiency and re-
liability. 

In this paper, we construct an extensible physical to-
pology with excellent partition tolerance in probability 
to reduce the limitations of the upper-layer blockchain 
protocols.  The  proposed  general  physical  topology  is 
based on the multi-dimensional hypercube. It can alle-
viate  the  topological  mismatch  of  structured  P2P  net-
works. We then design the hierarchical recursive physi-
cal topology to make the approach implementable. Our 
experiments show that the proposed physical topology 
does not affect the performance of the upper-layer pro-
tocol. As a result, our approach ensures good partition 
tolerance. Combined with upper-layer protocols having 
good  consistency  and  availability,  such  as  the  PPoV 
(Parallel Proof of Vote) consensus protocol [11], the sys-
tem can reach CAP boundaries. 

Roadmap.  In  Section  2,  we  introduce  the  P2P  net-
work used in blockchains. Section 3 proposes the gen-
eral  and  recursive  topology  construction  methods 
based on hypercubes. We discuss the partition tolerance 
property  and  the  link  consumption  in  Section  4.  Then 
we deploy the proposed topology and evaluate the con-
sistency  and  availability  performance  in  Section  5.  Fi-
nally, we conclude our work in Section 6. 

2  RELATED WORK 

In the P2P network, each node is both a server and a cli-
ent. Message exchange relies on the client group rather 
than the central server, so the nodes should participate 
in the relay. The realization of services is carried out di-
rectly between nodes without the intervention of inter-
mediate  nodes.  As  the  service  is  distributed  among 
nodes, the failure of some nodes or links has little im-
pact on other parts of the network. On the other hand, 
the  intermediate  cost  of  exchanging  message  is  low, 
which reduces the resource and time cost caused by cen-
tralization. 

2.1 Fully Distributed P2P Network 

The fully distributed P2P network includes structured 
and unstructured networks. The difference is whether 
the node address is structured. Nodes in the fully dis-
tributed P2P network can join and exit freely, and there 
is not any central node. In the unstructed P2P network, 
the  entire  network  structure  is  a  random  graph  struc-
ture  without  fixed  network  topologies  and  structured 
unified node addresses. The typical blockchain applica-
tion of a fully distributed unstructured P2P network is 
Bitcoin. On the contrary, the structured P2P network de-
fines the topological relationship of network nodes, and 
the topology structure of the network is assured by cer-
tain  protocols  between  nodes.  The  typical  blockchain 
application  for  fully  distributed  structured  P2P  net-
works is Ethereum [7]. 

2.2 Semi-Distributed P2P Network 

The  semi-distributed  P2P  network  combines  the  ad-
vantages of structured and unstructured networks. The 
advantage of the semi-distributed P2P network is that it 
has good efficiency and scalability, and is easy to man-
age.  Its  typical  blockchain  application  is  Hyperledger 
[13].  

Semi-distributed  P2P  networks  are  often  combined 
with  the  delegated  mechanism  in  the  blockchain  con-
sensus  algorithm.  Specifically,  according  to  evaluation 
criteria such as computing power, bandwidth, and re-
tention time, it divides nodes into super nodes and or-
dinary nodes. The super node endorses and supervises 
the ordinary nodes of the organization or institution to 
which  the  node  belongs,  and  participates  in  the  core 
consensus  process.  Ordinary  nodes  make  transactions 
through  super  nodes  but  do  not  participate 
in 
bookkeeping. Super nodes are equal to each other, and 
there is no frequent joining and exiting problem. Mean-
while,  the  number  of  super  nodes  in  the  consortium 
blockchain is far  less than  the  number of nodes in the 
public  blockchain.  Although  the  original  Bitcoin  is 
based  on  the  unstructured  and  fully  distributed  P2P 
network and flood mechanism, from the perspective of 
improving network efficiency, the semi-distributed P2P 
network is more suitable as the networking mode of the 
consortium blockchain. 

2.3  P2P Network Topology in Blockchains 

There  has  been  some  research  focused  on  optimizing 
the topology of the structured P2P network to speed up 

 
 
3 

the  propagation  of  transactions  and  blocks  in  block-
chains. C. Decker and R. Wattenhofer [12] constructed a 
subgraph of stars that served as a central communica-
tion hub to reduce the  number of route  hops between 
nodes.  M. Fadhil, G. Owenson and M. Adda  [18] pro-
posed  a  clustering  protocol  for  blockchain  networks 
based on super nodes, called BCBSN (Bitcoin Clustering 
Based on Super Node). By clustering based on the local-
ity of nodes, the propagation delay of transactions and 
blocks in the same cluster is reduced. The LBC (Location 
Based Clustering) protocol [19] and the BCBPT (Bitcoin 
Clustering Based on Ping Time) protocol [20] were fur-
ther proposed. Nodes in the  blockchain network were 
clustered according to physical location metrics such as 
their geographical location and Ping time to reduce the 
propagation delay of adjacent nodes. 

Although  these  methods  consider  the  impact  of 
physical  structure  on  performance,  they  do  not  com-
pletely solve the mismatch problem between the logical 
topology  and  the  physical  topology.  Moreover,  unlike 
the  public  blockchain,  nodes  in  the  consortium  block-
chain  are  more  controllable,  so  these  methods  cannot 
optimally  improve  the  performance  of  consortium 
blockchains. 

3  PHYSICAL TOPOLOGY CONSTRUCTION METHODS 

For structured P2P networks in consortium blockchains, 
we construct a matching physical topology among su-
per  nodes based on the  multi-dimensional hypercube. 
Super nodes and ordinary nodes can be connected in a 
tree topology to achieve management, which is not de-
scribed in detail here. In fact, the proposed topology ap-
plies not only to fully distributed P2P networks, but also 
to semi-distributed P2P networks. 

In the original hypercube topology for a base 𝑏 = 2, 
each  node  has  the  same  responsibility.  The  network 

diameter,  defined  as  the  shortest  path  between  most 
distant nodes in terms of node hops, is log2 𝑁, which is 
less than 𝑂(𝑁) (𝑁 is the number of nodes) [14]. As a re-
sult,  the  hypercube-based  network  topology  has  good 
characteristics  in  many  aspects  such  as  balanced  load 
and good redundancy. 

3.1 General Physical Topology 

In the general blockchain network, we adopt the multi-
dimensional hypercube or  its  variants to construct the 
physical  topology.  A  complete  hypercube  is  kind  of  a 
closed,  compact  and  convex  graph,  whose  1-dimen-
sional skeleton is composed of a group of line segments 
of equal length aligned to each dimension in the space 
where  they  are located, in  which the  relative  line  seg-
ments are parallel to each other, while the line segments 
intersecting at a point are orthogonal to each other. Fig. 
1  shows  examples  of  topologies  constructed  based  on 
hypercubes in 3 to 5 dimensions, where crosses indicate 
that the corresponding nodes and links are unassigned 
or invalid in the network. Fig. 1. (a) is a complete 3-di-
mensional cube with 8 nodes and 12 links. Fig. 1. (b) is 
an incomplete 4-dimensional hypercube with 15 nodes 
and 29 links. Fig. 1. (c) is an incomplete 5-dimensional 
hypercube with 32 nodes and 75 links. The blue and the 
purple respectively represent the low-dimensional hy-
percube before and after the movement, and the green 
is the movement path. 

For each node, an ID is assigned to uniquely identify 
the  node.  At  this  point,  the  hypercube  topology  sup-
ports the establishment of links between pairs of nodes 
at  a  distance  of 2𝑖 to  improve  query  efficiency,  that  is, 
the logical distance between pairs of nodes whose IDs 
differ by only 1 bit is 1. Thus, the hypercube topology is 
a good match for upper protocols in the structured P2P 
network. 

In the proposed physical topology, invalid links will 

(a) complete 3-d cube 

(b) incomplete 4-d hypercube 

(c) incomplete 5-d hypercube 

Fig. 1. Examples of topology construction with complete or incomplete hypercubes evolving from 3 to 5 dimension. 

 
 
 
4 

(a) the lowest boundary 

(b) completely symmetric 

(c) semi-symmetric 

(d) asymmetric 

Fig. 2. Examples of hierarchical recursive topology construction.  

be repaired actively in a finite time. If the P2P network 
is  partitioned  unfortunately,  the  isolated  node  will  re-
quest data synchronization from its neighbors before re-
suming to work. 

3.2 Hierarchical Recursive Physical Topology 

With the expansion of network size, the use of the gen-
eral  hypercube  topology  will  lead  to  excessive  redun-
dancy of links, and the complexity of upper-layer algo-
rithms,  such  as  routing  algorithms,  also  increases. 
Therefore, recursion is a good method for scalability.  In 
addition,  the  recursive  topology  should  retain  the  ad-
vantage of strong regularity of hypercube.  

In this section, we propose the hierarchical recursive 
topology,  which  is  generated  from  the  general  hyper-
cube-based topology in two steps, including recursion 
and  interconnection.  Each  recursion  turns  the  original 
node into a domain. Nodes in the same domain can con-
struct  a  hypercube-based  physical  topology  described 
in Section 3.1 or an arbitrary topology. The number of 
the  domain  at  the  𝑟 -th  (𝑟 ≥ 2) level  is  defined  as  𝑖𝑟 , 
which is equal to the smallest node number 𝑛𝑚𝑖𝑛 within 
it. After recursion, the  new node  number increases  by 
one  digit  from  the  original  node  number,  so  the  first 
(𝑟 − 1) digits of 𝑖𝑟 represent the recursive attribution of 
the  domain  from  the  first  level  to  the (𝑟 − 1)-th  level. 
Assuming that the node number of the hypercube in the 
first-level  domain  𝑖1 = 0  is  {𝑛0} = {0,1,2, ⋯ , (2𝑑𝑖𝑚0 −
1)}, then the node number in the domain 𝑖𝑟 after (𝑟 − 1) 
is  {𝑛𝑖𝑟} = {𝑛𝑖𝑟−1}&{0,1,2, ⋯ , (2𝑑𝑖𝑚𝑖𝑟 − 1)} , 
recursions 
where & means  splicing.  The  corresponding  nodes  of 
each domain at the 𝑟-th level are connected into the top-
ological  relationship  of  the  domain  at  the  (𝑟 − 1) -th 
level  with  physical  links,  thus  the  interconnection  be-
tween domains is completed. 

Based on the above, we design three recursive meth-
ods to construct hierarchical physical topologies: com-
pletely symmetric, semi-symmetric, and asymmetric. In 

the completely symmetric way, each recursion takes the 
hypercube of the same dimension. In the semi-symmet-
ric way, hypercubes of the same dimension are used in 
the  same  level,  and  that  of  different  dimensions  are 
used between levels. In the asymmetric way, each recur-
sion takes a different dimensional hypercube or what-
ever. Fig. 2. (a) shows the lowest boundary situation of 
hierarchical  recursive  physical  topology.  Fig.  2. (b)-(d) 
show examples of the three above methods. Specifically, 
Fig. 2. (b) is a completely symmetric situation. Fig. 2. (c) 
is a semi-symmetric situation. Fig. 2. (d) is an asymmet-
ric  situation  that  there  are  4,  8  and  4  domains  with  4-
dimensional hypercube, 3-dimensional hypercube and 
7-potint full connection topology at the second level re-
spectively. 

We use Fig. 3 as the simplest example to describe the 
two steps to construct one completely symmetric topol-
ogy  of  2-dimensional  hypercubes.  The  number  in  the 
circle indicates the node number, and the number with 

Fig. 3. Two steps to construct 1 completely symmetric topology of 2-
dimensional hypercubes. 

012300010302101112132021222331323330 
 
 
 
𝑝𝑗𝑖 = 𝑃(𝑋𝑗|𝑋𝑖)  

𝑚
𝑚𝑖𝑛{𝑖,𝑗}
𝑚=𝑚𝑎𝑥{𝑖+𝑗−𝐿,0}

= ∑

= ∑ 𝑃[ (𝑖  −  𝑚) 𝑖𝑛𝑣𝑎𝑙𝑖𝑑 𝑙𝑖𝑛𝑘𝑠 𝑎𝑟𝑒 𝑟𝑒𝑝𝑎𝑖𝑟𝑒𝑑] ∙  𝑃[ (𝑗  −  𝑚) 𝑤𝑜𝑟𝑘𝑖𝑛𝑔 𝑙𝑖𝑛𝑘𝑠 𝑎𝑟𝑒 𝑖𝑛𝑣𝑎𝑙𝑖𝑑]

(

𝑖
𝑚

) 𝜇𝑖−𝑚(1 − 𝜇)𝑚 ∙ (

𝐿 − 𝑖
𝑗 − 𝑚

) 𝜆𝑗−𝑚(1 − 𝜆)𝐿−𝑖−𝑗+𝑚

5 

(1) 

an  underscore  indicates  the  domain  number.  Suppose 
that  the  4  nodes  are  numbered  as  {𝑛𝑖1} = {𝑛0} =
{0,1,2,3}. In the  first step, each  node  recurses into a 2-
dimensional hypercube. There are 4 domains at the sec-
ond  level  and  16  nodes,  respectively  numbered  as 
{𝑛𝑖2} = {𝑛00, 𝑛10, 𝑛20, 𝑛30} = {00,01,02,03} ∪
{10,11,12,13} ∪ {20,21,22,23} ∪ {30,31,32,33} .  In  the 
second step, we connect the 4 nodes in the same domain 
to  the  nodes  with  the  same  last  digit in  the  other  two 
domains associated with them. The solid line represents 
the  physical  link  between  nodes,  and  the  dashed  line 
represents  the  logical  link  between  domains.  Specifi-
cally, the node 00 is linked to the nodes 10 and 30, the 
node 01 to the nodes 11 and 31, the node 02 to the nodes 
12 and 32, the node 03 to the nodes 13 and 33, and so on. 

4  DISCUSSION 

Within this section, we  analyze  the  partition tolerance 
property of the proposed topology. We assume that the 
physical links between nodes are secure. Other assump-
tions  of  the  topology  construction  and  analyses  are 
listed as follows. 
1.  Each  involved  link  has  only  two  states:  work  and 

failure. 

2.  Failure  and  repair  of  links  are  independent  pro-

cesses without memory. 

3.  MTBF  (Mean  Time  Between  Failures)  and  MTTR 
(Mean Time to Repair) of each link are independent, 
and their mean values are constant. 

4.  MTBF is much larger than MTTR. 
5. 

If a partition has enough participating nodes, it is a 
good  partition  that  works  flawlessly.  If  not,  it  is  a 
wrong partition. 

Considering that the partition tolerance property re-
flects the reliability in blockchain, we propose two met-
rics: the partition tolerance probability and the average 
minimum repair time. The partition tolerance probabil-
ity is defined as the probability that a good partition ex-
ists  in  the  P2P  network.  The  average  minimum  repair 
time is defined as the minimum time expected for the 
network to resume normal communication. 

4.1 General Physical Topology 

4.1.1 Partition Tolerance Property 

We first calculate the partition tolerance probability of 
to 
the  general  physical 

topology.  According 

assumptions 1-5, since the state change of each link fol-
lows  “work-failure-repair”,  a  discrete-time  Markov 
process can be utilized for mathematical modeling the 
partition tolerance problem [15]. As failure and repair 
processes  are  independent  and  memoryless,  Fig.  4 
shows the Markov chain of the hypercube-based topol-
ogy consisting of 𝑁 nodes and 𝐿 links. The system state 
𝑋 indicates the number of invalid links in the network. 

Fig. 4. The Markov chain of the general hypercube-based physical to-
pology. 

The  transition  matrix  of  the  Markov  model  is  de-
noted  as 𝑃(𝐿+1)×(𝐿+1),  whose  element 𝑝𝑗𝑖 represents  the 
probability of the system state transiting from 𝑋𝑖 to 𝑋𝑗. 
We  calculate  the  state  transition  probability  𝑝𝑗𝑖  in 
(1),where  the  intermediate  variable  𝑚 ∈ [𝑚𝑎𝑥{𝑖 + 𝑗 −
𝐿, 0}, 𝑚𝑖𝑛{𝑖, 𝑗}] is the number of unrepaired invalid links 
during the transition process, 𝜆 = 1/𝑀𝑇𝐵𝐹 is the prob-
ability of a link to fail in the unit time, and 𝜇 = 1/𝑀𝑇𝑇𝑅 
is the probability of repairing it in the unit time. 

Since Fig. 4 is a fully connected graph, the transition 
matrix 𝑃 satisfies randomness, irreducibility, and aperi-
odicity. According to the  limit theorem of the  Markov 
chain  [16],  the  above  Markov  process  eventually  con-
verges to a steady-state independent of the initial distri-
bution.  We  obtain  the  steady-state  probability  vector 
𝜋 = [𝜋0, 𝜋1, 𝜋2, ⋯ , 𝜋𝐿]  through  the  partitioning  algo-
rithm [17] with 𝑂(𝐿) iterations.  

We  estimate  the  partition  tolerance  probability  by 
sampling. For each sample in steady-state 𝜋𝑖, the maxi-
mum number of nodes in the connected components is 
calculated to judge whether it is a wrong partition. The 
overall partition tolerance probability is 

𝑝 = 1 − ∑ 𝜋𝑖 ∙ P{wrong partition|𝜋𝑖}
. 

𝐿

𝑖=1

(2) 

 
 
 
 
 
 
  
 
 
6 

Then  we  calculate  the  minimum  repair  time  of  the 
general physical topology. In the proposed topology, in-
valid links between big partitions should have priority 
to be repaired. Under this strategy, we define the mini-
mum repair time as the time for the system to resume 
regular work. We get the overall average minimum re-
pair  time  by  taking  the  minimum  repair  time  as  the 
weight for each sample in (2).  

4.1.2 Simulation 

The simulation is based on the digital optical cable com-
munication  system  which  switches  between  primary 
and  standby  automatically.  According  to international 
standards,  the  communication  systems  (including 
physical  links  and  repeaters)  with  the  three  different 
distances  of  {5000𝑘𝑚, 3000𝑘𝑚, 420𝑘𝑚}  should  meet 
the following indicators respectively 

number of nodes in a good partition is not less than 𝑘 =
⌊𝑣/2⌋ + 1. Fig. 5 compares the partition tolerance proba-
bility and average minimum repair time between the gen-
eral multi-dimensional hypercube topology with the reg-
ular rooted tree topology and the ring lattice topology un-
der the same degree. 

The results show that with the increase of degree in the 
network, the partition tolerance probability increases rap-
idly  without  additional  average  minimum  repair  time. 
The  proposed  topology  meets  higher  partition  tolerance 
probability than the regular rooted tree topology and the 
ring lattice topology. In addition, the average minimum re-
pair  time  for  different  topologies  are  similar,  approxi-
mately equal to MTTR. Therefore, blockchains using the 
general hypercube-based topology can obtain excellent re-
liability in the partitioned network. 

4.2 Hierarchical Recursive Physical Topology 

(𝑀𝑇𝐵𝐹, 𝑀𝑇𝑇𝑅) ∈ {(2190, 24), (3650, 14.4), (26070,2.016)}(ℎ),  (3) 

4.2.1 Partition Tolerance Property 

where (ℎ) is the unit and is short for (ℎ𝑜𝑢𝑟). 

So  we  take  the  pair  of  parameters  as  (𝜆, 𝜇) ∈

{(4.5662 × 10−4, 4.1667 × 10−2), (2.7397 ×
10−4, 6.9444 × 10−2), (3.8358 × 10−5, 4.9603 ×
10−1)} (/ℎ). In the consortium blockchain, the minimum 

Denote the partition tolerance probability of a general to-
pology  at  the 𝑚-th (1 ≤ 𝑚 ≤ 𝑟) level as 𝑝𝑖𝑚.  The  partition 
tolerance of the domain 𝑖𝑟 is not only affected by the topol-
ogy it adopts at the 𝑟-th level but also related to the recur-
sive  path  to  which  it  belongs  from  the  first  level  to  the 

Fig. 5. Partition tolerance probability and average minimum repair time of the network topologies based on the general multi-dimensional 
hypercube, the regular rooted tree, and the ring lattice. 

 
 
 
 
 
 
(𝑟 − 1)-th level. Thus, the overall partition tolerance prob-
ability is 

TABLE 1 
THE NUMBER OF NODES AND LINKS IN THE COMPLETELY SYM-
METRIC RECURSIVE PHYSICAL TOPOLOGY 

7 

𝑝 = 1 − ∑

𝑟
𝑚=1

∑

(𝑖1,𝑖2,𝑖3,⋯,𝑖𝑚)

𝑝𝑖1𝑝𝑖2𝑝𝑖3 ⋯ 𝑝𝑖𝑚−1(1 − 𝑝𝑖𝑚)

. (4) 

Similarly, let 𝑡𝑖𝑚 denote the average minimum repair 
time  of  a  general  topology  at  the 𝑚-th  level,  and  the 
overall average minimum repair time is 

𝑡 = ∑

𝑟
𝑚=1

∑

(𝑖1,𝑖2,𝑖3,⋯,𝑖𝑚)

𝑡𝑖𝑚 ∙

𝑝𝑖1𝑝𝑖2𝑝𝑖3⋯𝑝𝑖𝑚−1(1−𝑝𝑖𝑚)
. 
1−𝑝

(5) 

According to (4) and (5), the recursive path from the 
first level to the (𝑟 − 1)-th level has more influence on 
the overall partition tolerance than the topology of the 
domain itself at the 𝑟-th level. Therefore, a suggestion is 
that  the  topology  with  high  partition  tolerance  proba-
bility and low average minimum repair time should be 
adopted in the upper recursion path.  

4.2.2 Link Consumption 

Considering that the number of nodes in the asymmet-
ric recursive method is difficult to determine, in this sec-
tion we only analyze the completely symmetric and the 
semi-symmetric recursive methods. 

In  a  completely  symmetric  topology,  we  define  the 
dimension  of  hypercubes  in  each  domain  as  𝑑𝑖𝑚𝑖𝑚 . 
Since each recursion takes the same dimension, for any 
(𝑖1, 𝑖2, 𝑖3, ⋯ , 𝑖𝑟), 𝑑𝑖𝑚𝑖𝑚 is a fixed value and is denoted as 
𝑑𝑖𝑚. Obviously, the number of nodes for (𝑟 − 1) recur-
sions is 𝑁𝑠𝑦𝑚𝑚,𝑟 = 2𝑑𝑖𝑚×𝑟. The links in the topology con-
sist of relatively short intradomain links and relatively 
long interdomain links, that is, 

𝐿𝑠𝑦𝑚𝑚,𝑟 = 2𝑑𝑖𝑚−1 × 𝑑𝑖𝑚 × 2(𝑟−1)×𝑑𝑖𝑚 + 𝐿𝑠𝑦𝑚𝑚,(𝑟−1) × 2𝑑𝑖𝑚
{
𝐿𝑠𝑦𝑚𝑚,1 = 2𝑑𝑖𝑚−1 × 𝑑𝑖𝑚

.(6) 

Equation (6) is equivalent to 

{

𝐿𝑠𝑦𝑚𝑚,𝑟
2𝑟×𝑑𝑖𝑚 =
𝐿𝑠𝑦𝑚𝑚,1 = 2𝑑𝑖𝑚−1 × 𝑑𝑖𝑚

𝐿𝑠𝑦𝑚𝑚,(𝑟−1)
2(𝑟−1)×𝑑𝑖𝑚

𝑑𝑖𝑚
2

+

. 

Hence,  

𝐿𝑠𝑦𝑚𝑚,𝑟
2𝑟×𝑑𝑖𝑚 =

𝐿𝑠𝑦𝑚𝑚,1
2𝑑𝑖𝑚 +

𝑑𝑖𝑚
2

× (𝑟 − 1) =

𝑟 × 𝑑𝑖𝑚
2

. 

So, the total number of links is 

𝐿𝑠𝑦𝑚𝑚,𝑟 = 2𝑟×𝑑𝑖𝑚−1 × 𝑟 × 𝑑𝑖𝑚. 

(7) 

Table1 illustrates the number of nodes and links of 0, 

Number of 
recursions 

Dimension of 
hypercubes 

Number 
of nodes 

Number 
of links 

0 

1 

2 

2 

3 

4 

5 

2 

3 
4 

5 

2 

3 

4 

5 

4 

8 

16 

32 

16 

64 
256 

1024 

64 

512 

4096 

32768 

4 

12 

32 

80 

32 

192 
1024 

5120 

192 

2304 

24576 

245760 

1 and 2 completely symmetric recursions with 2- to 5-
dimensional hypercubes respectively. 

In a semi-symmetric topology, since domains in the 
same level use hypercubes of the same dimension, for 
any 𝑖𝑚, 𝑑𝑖𝑚𝑖𝑚 is a fixed value. Similarly, the number of 
nodes  for  (𝑟 − 1)  recursions  is  𝑁𝑠𝑒𝑚𝑖,𝑟 = 2∑
, 
and the number of links satisfies 

𝑑𝑖𝑚𝑖𝑚

𝑟
𝑚=1

𝐿𝑠𝑒𝑚𝑖,𝑟 = 2𝑑𝑖𝑚𝑖𝑟−1 × 𝑑𝑖𝑚𝑖𝑟 × 2∑
{

𝑟−1
𝑚=1

𝑑𝑖𝑚𝑖𝑚

+ 𝐿𝑠𝑒𝑚𝑖,(𝑟−1) × 2𝑑𝑖𝑚𝑖𝑟

𝐿𝑠𝑒𝑚𝑖,1 = 2𝑑𝑖𝑚𝑖1−1 × 𝑑𝑖𝑚𝑖1

. 

(8) 

So, the total number of links is 

𝐿𝑠𝑒𝑚𝑖,𝑟 = 2∑

𝑟
𝑚=1

𝑑𝑖𝑚𝑖𝑚

−1 × ∑

𝑟
𝑚=1

𝑑𝑖𝑚𝑖𝑚

. 

(9) 

Table 2 illustrates the number of nodes and links of 0, 
1 and 2 semi-symmetric recursions respectively with the 
recursive  path of 4-, 3- and 2-dimensional hypercubes 
in order. 

TABLE 2 
THE NUMBER OF NODES AND LINKS IN THE SEMI-SYMMETRIC 
RECURSIVE PHYSICAL TOPOLOGY 

Number of 
recursions 

Dimension of 
hypercubes 

Number 
of nodes 

Number 
of links 

0 

1 

2 

4 

4-3 

4-3-2 

16 

128 

512 

32 

448 

2304 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
8 

TABLE 3 
COMPARISON OF LINK CONSUMPTION AND PARTITION TOLERANCE UNDER DIFFERENT PHYSICAL TOPOLOGY CONSTRUCTION 
METHODS 

Number of 
nodes 

Topology construction 
method 

Number of links 

5000km  3000km  420km 

Partition toler-
ance probability 
−𝑙𝑔(1 − 𝑝)(/ℎ) 

Average mini-
mum repair 
time 

Regular rooted tree 
Ring lattice 

64 

Hyper-
cube 

0 recursion 
(6) 
1 completely sym-
metric recursion 
(3-3) 
2 completely sym-
metric recursions 
(2-2-2) 
1 Semi-symmetric 
recursions 
(4-2) 

Regular rooted tree 
Ring lattice 

4096 

Hyper-
cube 

0 recursion 
(12) 
1 completely sym-
metric recursion 
(6-6) 
2 completely sym-
metric recursions 
(4-4-4) 
2 Semi-symmetric 
recursions 
(5-4-3) 

63 
192 

192 

0 
0 

0 

96 

96 

0 
0 

0 

0 

2.79 
43.7 

87.0 

8.62 

64 

64 

64 

3.56 

128 

64 

4095 
24576 

24576 

0 
0 

0 

12288 

12288 

0 

0 
0 

0 

0 

3.53 

3.93 
107 

227 

87.0 

8192 

8192 

8192 

26.4 

10240 

8192 

6144 

16.6 

24.0 
24.0 

24.0 

24.0 

21.4 

14.4 

24.0 
24.0 

24.0 

24.0 

24.0 

2.02 

Table 3 compares the properties of link consumption 
and partition tolerance under different physical topol-
ogy construction methods. It is assumed that the 0th, 1st 
and 2nd recursion adopts links of 5000km, 3000km and 
420km respectively, and the indicators in (3) in Section 
4.1.2 are satisfied. 

While each recursion does not reduce the total num-
ber of links, it actually uses more medium links or short 
links between nodes, greatly reducing the average min-
imum repair time. The higher the dimension of hyper-
cubes in the recursion path, the lesser the repair time is 
required. On the other hand, although the  hypercube-
based topology has a  higher number of links than the 
regular  rooted  tree  topology,  its  partition  tolerance 
property is much better and already meets the needs of 

actual consortium blockchains. Blockchain projects can 
freely choose the hierarchical recursive method accord-
ing to its own reliability and cost requirements. 

5  EXPERIMENTAL RESULTS 

In this section, we present a systematic evaluation of the 
proposed physical topology on its performance to sup-
port the gossip protocol and the consensus protocol in 
the consortium blockchain. 

5.1 Overlaying the Gossip Protocol 

We build the P2P network with the general physical to-
pology in the PeerSim-1.0.5 simulator [8]. For compari-
son, we also implement the regular rooted tree topology 
and  the  ring  lattice  topology.  Upon  the  simulated 

 
 
 
9 

(a) delay=0 

(b) delay=50% 

Fig. 6. The number of gossip messages forwarded when N=16. 

(a) delay=0 

(b) delay=50% 

Fig. 7. The average number of gossip messages forwarded with different number of nodes. 

physical layer, we execute a simple gossip protocol [9] 
and show its performance. In the gossip protocol, each 
node  periodically  selects  a  random  subset  of  4  neigh-
bors from its cached set to initiate a message exchange 
operation. Since the out-degree is a fixed value equal to 
the cache size, we consider only the in-degree. Each sim-
ulation  runs  for  5000  cycles,  and  every  cycle  has  100 
units of time. 

When the network size is 𝑁 = 16, and the delay is 0 
and  50%,  the  number  of  forwarded  messages  in  the 
whole  network  is  shown  in  Fig.  6.  (a)  and  (b),  respec-
tively. In the ideal network with delay=0, the transmis-
sion  performance  of  the  three  topologies  compared  is 
similar.  In  the  network  with  delay=50%,  the  perfor-
mance of the hypercube and the ring lattice topologies 
is similar and significantly better than that of the regular 
rooted tree topology.  

As the network size increases, the average number of 
forwarded  messages  increases  approximately  linearly, 
as shown in Fig. 7. The experimental results show that 
for the used gossip protocol, the hypercube-based phys-
ical  topology  hardly  brings  additional  forwarding 

redundancy. 

We further prototype the hierarchical recursive phys-
ical topology in the PeerSim-1.0.5 simulator. For the four 
examples  in  Fig.  2  in  Section  3.2,  we  test  their  perfor-
mance separately, as shown in Fig. 8. It can be seen that 
the 50% delay leads to an approximately 50% reduction 
in the total number of messages forwarded, so the gos-
sip  protocol on  the  hierarchical  recursive  topology  re-
mains compliant with the original network characteris-
tics. The results also show that recursion increases the 
number of forwarded messages by 10%-20% compared 
to  the  general  hypercube-based  topology.  This  is  be-
cause the gossip protocol tends to cause loops in the do-
main when recursing, resulting in a large number of re-
dundant messages in the network.  

5.2 Overlaying the Consensus Protocol 

We  deploy  the  proposed  physical  topology  across  8 
servers  in  China,  U.K.,  New  Zealand  and  Malaysia. 
Each server has two 8-core CPUs and 10 Gbps network 
bandwidth. We  next perform the  PPoV (Parallel Proof 
of Vote) protocol [11] over different topologies. PPoV is 
strong 
a 

consensus  protocol  with 

consortium 

 
 
 
     
 
 
10 

(a) lowest boundary topology (N=64) 

(b) completely symmetric topology (N=512) 

(c) semi-symmetric topology (N=128) 

(d) asymmetric topology (N=156) 

Fig. 8. The number of gossip messages forwarded with hierarchical recursive physical topologies. 

consistency  and  high  availability on a failure-free net-
work.  As  a  non-forked  BFT  consensus  protocol  in  the 
consortium  blockchain,  any  attempt  by  an  attacker  to 
change  the  consistency  of  PPoV  consensus  ultimately 
leads to a longer consensus time or even a timeout, so 
we use throughput as an indicator. Our experiment gen-
erates an average of 60,000 transactions per second, each 
with a size of 24 Bytes. A block can store up to 10,000 
transactions, and its maximum size is 235MB. 

 Due  to  our  resource  limitation,  we  do  not  run  any 
ordinary node. Because we are evaluating the impact of 
the  physical  topology  on  the  consensus  protocol  only, 
we  turn off signature verification and transaction exe-
cution to ensure enough computation resources for su-
per nodes. 

Fig. 9 compares the efficiency of the consensus pro-
tocol on the general hypercube topology and the star to-
pology when the  network size  is 𝑁 = 4. It can  be  seen 
that the throughput of the general hypercube topology 
is better than that of the star topology, and is approxi-
mately equal to the transaction generation rate. 

In the above 4-node experiment, the PPoV consensus 
algorithm periodically selects a super node as the leader 
node  randomly  which  occupies  a  high  bandwidth.  In 
the following large-scale experiment, in order to obtain 
relatively stable and  believable throughput  values, we 

Fig. 9. The throughput of the consensus protocol when N=4 with the 
original leader selection mechanism. 

Fig. 10. The throughput of the consensus protocol when N=16 with the 
changed leader selection mechanism. 

 
 
 
 
 
 
    
 
 
     
 
consider the best case that the central node of the star 
topology is always the leader node during the measure-
ment  period,  and  the  rotation  period  is  greater  than 
1000 consensus rounds. Fig. 10 compares the efficiency 
of the consensus protocol on the hierarchical recursive 
topology in Fig.  3 in Section 3.2 and the  star  topology 
when the network size is 𝑁 = 16. Comparing Fig. 9 and 
Fig. 10, with the  leader selection mechanism changed, 
the  difference  between  the  hypercube  and  the  star  to-
pology is smaller for higher 𝑁 = 16. However, the 1-re-
cursive  topology  of  the  2-dimensional  hypercube  still 
optimally supports the upper-layer consensus protocol. 
According to observation during the experiment, un-
der the above parameters, no matter how the number of 
nodes changes, each super node can achieve 100% utili-
zation of a single  CPU. In this case, the  throughput is 
only affected by the network transmission rate. Fig. 11 
shows the average throughput in networks of different 
sizes. It can be seen that compared with the star topol-
ogy, the performance of the consensus protocol on top 
of the hypercube-based topology is more stable. In other 
words,  the  proposed  physical  topology  not  only  does 
not affect the performance of upper-layer protocols, but 
also has good scalability. 

11 

Hierarchical  recursion  makes  the  hypercube  topology 
satisfy excellent partition tolerance with less repair time. 
Experimental results from the prototype also show that 
since  the  proposed  topology  is  at  the  physical  layer, 
there is no need to modify upper-layer protocols. That 
is,  blockchains  constructed  by  the  proposed  topology 
can reach the CAP guarantee bound with proper trans-
mission  and  consensus  protocols  meeting  strong  con-
sistency and availability. 

Our future work will focuse on developing the logi-
cal communication protocol to solve the loop problem 
during data transmission in the hypercube-based phys-
ical topology, especially in the hierarchical recursive to-
pology.  We  will  also  improve  the  analytical  model  by 
accurately and comprehensively  extracting the  feature 
parameters in simulation to achieve higher precision. 

ACKNOWLEDGMENT 

This  work  was  supported  by  Shenzhen  Fundamental 
Research  Program  (No.  GXWD20201231165807007-
20200807164903001),  GuangDong  Prov.  R&D  Key  Pro-
gram  (No.  2019B010137001),  National  Keystone  R&D 
Program of China (No. 2017YFB0803204), Natural Sci-
ence Foundation of China (NSFC) (No. 61671001), and 
Shenzhen 
(No. 
JCYJ20190808155607340,  No.  JSGG20170406144032901, 
No. 
No. 
JSGG20170824095858416, 
JCYGJ20170306092030521). 

Programs 

Research 

Fig.  11.  The  average  throughput  of  the  consensus  protocol  in  the 
whole network. 

6  CONCLUSION 

In this paper, we propose a novel physical topology of 
the P2P network in blockchains based on the multi-di-
mensional  hypercube  to  optimize  the  partition  toler-
ance. We also extend the general topology to the hierar-
chical  recursive  topology  for  more  medium  links  or 
short  links.  Through  analyzing  the  partition  tolerance 
by metrics of the partition tolerance probability and the 
average minimum repair time with the convergent Mar-
kov model and simulations on the digital optical cable 
communication system, we prove that the proposed to-
pology meets better partition tolerance than the regular 
rooted  tree  topology  and  the  ring  lattice  topology. 

REFERENCES 

[1]  S. Nakamoto, "Bitcoin:  A Peer-To-Peer  Electronic Cash  System," 2008. 

[Online]. Available: https://www.debr.io/article/21260.pdf. 

[2]  S. Gilbert and N. Lynch, "Brewer's Conjecture And The Feasibility Of 
Consistent, Available, Partition-Tolerant Web Services," in ACM SIGACT 
News, 2002, 33(2), 51-59. DOI: 10.1145/564585.564601. 

[3]  D. Larimer, "Delegated Proof-of-Stake (DPOS)," 2014. [Online]. Available: 
https://bitshares.org/technology/delegated-proof-of-stake-consensus/. 

[4]  F. Armknecht, G. O. Karame, A. Mandal, F. Youssef and E. Zenner, "Rip-
ple:  Overview  And  Outlook,"  in  Trust  and  Trustworthy  Computing, 
Cham,  Switzerland,  Springer,  2015,  163-180.  DOI:  10.1007/978-3-319-
22846-4_10. 

[5]  A. Kiayias, A. Russell, B. David and R. Oliynykov, "Ouroboros: A Prova-
bly Secure Proof-Of-Stake Blockchain Protocol," in Advances in Cryptol-
ogy–CRYPTO 2017, Cham, Switzerland, Springer, 2017, 357-388. DOI: 
10.1007/978-3-319-63688-7_12. 

[6]  H. Sukhwani, J. M. Martínez, X. Chang, K. S. Trivedi and A. Rindos, "Per-
formance  Modeling  Of  PBFT  Consensus  Process  For  Permissioned 
Blockchain Network (Hyperledger Fabric)," in 2017 IEEE 36th Sympo-
sium on Reliable Distributed Systems (SRDS), Hong Kong, 2017, 253-255. 
DOI: 10.1109/SRDS.2017.36. 

[7]  G. Wood, "Ethereum: A Secure Decentralised Generalised Transaction 
Ledger,"  in  Ethereum  project  yellow  paper,  2014,  151,  1-32.  [Online]. 
Available: https://files.gitter.im/ethereum/yellowpaper/VIyt/Paper.pdf. 

[8]  A.  Montresor and  M.  Jelasity,  "PeerSim:  A  scalable  P2P  simulator," in 
IEEE Ninth International Conference on Peer-to-Peer Computing, 2009. 

 
 
 
12 

DOI: 10.1109/P2P.2009.5284506. 

[9]  M. Jelasity, A. Montresor and O. Babaoglu, "Gossip-Based Aggregation 
In Large Dynamic Networks, " in ACM Transactions on Computer Sys-
tems, 2005, 23(3):219–252. DOI: 10.1145/1082469.1082470. 

[10]  R. Schollmeier, "A Definition Of Peer-To-Peer Networking For The Clas-
sification Of Peer-To-Peer Architectures And Applications," in Proceed-
ings First International Conference  on  Peer-to-Peer Computing, IEEE, 
2001. DOI: 10.1109/P2P.2001.990434. 

[11]  Y. Bai, Y. Zhi, H. Li, H. Wang, P. Lu and C. Ma, "On Parallel Mechanism 
Of Consortium Blockchain: Take Pov As An Example," in The 3rd Inter-
national Conference on Blockchain Technology (ICBCT), 2021, 147–154. 
DOI: https://doi.org/10.1145/3460537.3460560. 

[12]  C. Decker and R. Wattenhofer, "Information Propagation In The Bitcoin 
in  IEEE  P2P  2013  Proceedings,  2013,  1-10.  DOI: 

Network," 
10.1109/P2P.2013.6688704. 

[13]  C. Cachin, "Architecture Of The Hyperledger Blockchain Fabric," in Pro-
ceedings of ACM Workshop on Distributed Cryptocurrencies and Con-
sensus Ledgers, Chicago, IL, 2016. [Online]. Available: http://www.zur-
ich.ibm.com/dccl/papers/cachin_dccl.pdf. 

[14]  M. Schlosser, M. Sintek, S. Decker and W. Nejdl, "Hypercup — Hyper-
cubes, Ontologies, And Efficient Search On Peer-To-Peer Networks," in 
Proceedings of the 1st international conference on Agents and peer-to-
peer computing. Springer-Verlag, 2002. DOI: 10.1007/3-540-45074-2_11. 
[15]  W. D. Grover, "High Availability Path Design In Ring-Based Optical Net-
works," in IEEE/ACM Transactions on Networking, 1999, 7(4), 558-574. 
DOI: 10.1109/90.793028. 

[16]  R. Serfozo, "Basics Of Applied Stochastic Processes," Springer Science & 

Business Media, 2009. 

[17]  T. J. Sheskin, "A Markov Chain Partitioning Algorithm For Computing 
Steady State Probabilities," in Operations Research, 1985, 33(1), 228-235. 
DOI: 10.1287/opre.33.1.228. 

[18]  M. Fadhil, G. Owenson and M. Adda, "A Bitcoin Model For Evaluation 
Of Clustering To Improve Propagation Delay In Bitcoin Network," 2016 
IEEE Intl Conference on Computational Science and Engineering (CSE) 
and IEEE Intl Conference  on Embedded and Ubiquitous  Computing 
(EUC) and 15th Intl Symposium on Distributed Computing and Appli-
cations for Business Engineering (DCABES), IEEE, 2016, 468-475. DOI: 
10.1109/CSE-EUC-DCABES.2016.226. 

[19]  M. Fadhil, G. Owenson and M. Adda, "Locality Based Approach To Im-
prove Propagation Delay On The Bitcoin Peer-To-Peer Network," in 2017 
IFIP/IEEE Symposium on Integrated Network and Service Management 
(IM), 2017, 556-559. DOI: 10.23919/INM.2017.7987328. 

[20]  G. Owenson and M. Adda, "Proximity Awareness Approach To 
Enhance  Propagation  Delay  On  The  Bitcoin  Peer-To-Peer  Net-
work,"  in  2017  IEEE  37th  International  Conference  on  Distrib-
uted  Computing  Systems  (ICDCS),  2017,  2411-2416.  DOI: 
10.1109/ICDCS.2017.53. 

[21]  M.  Castro,  and  B.  Liskov,  "Practical  Byzantine  Fault  Tolerance 
And  Proactive  Recovery,"  in  ACM  Transactions  on  Computer 
Systems 
DOI: 
10.1145/571637.571640. 

398-461. 

(TOCS), 

20(4), 

2002, 

[22]  A.  Lewis-Pye  and  T.  Roughgarden,  "Resource  Pools  And  The 

Cap Theorem," arXiv preprint arXiv:2006.10698, 2020. 

[23]  M. Vukolić, "The Quest For Scalable Blockchain Fabric: Proof-Of-
Work Vs. BFT Replication," in International workshop on open 
problems  in  network  security,  Springer,  Cham,  2015.  DOI: 
10.1007/978-3-319-39028-4_9. 

[24]  Y. Gilad, R. Hemo, S. Micali, G. Vlachos and N. Zeldovich, "Al-
gorand: Scaling Byzantine Agreements For Cryptocurrencies," in 
Proceedings  of  the  26th  Symposium  on  Operating  Systems 

Principles  (SOSP  '17),  ACM, New  York, NY, USA, 2017,  51–68. 
DOI: 10.1145/3132747.3132757. 

[25]  M.  Yin,  D.  Malkhi,  M.K.  Reiter,  G.G.  Gueta  and  I.  Abraham, 
"Hotstuff: BFT Consensus With Linearity And Responsiveness," 
in  Proceedings  of  the  2019  ACM  Symposium  on  Principles  of 
Distributed Computing (PODC '19), ACM, New York, NY, USA, 
2019, 347–356. DOI: 10.1145/3293611.3331591. 

[26]  Y.  Sompolinsky  and  A.  Zohar,  “Secure  High-Rate  Transaction 
Processing In Bitcoin,” in Financial Cryptography and Data Se-
curity. Heidelberg: Springer, 2015, 507-527. DOI: 10.1007/978-3-
662-47854-7_32. 

[27]  Y.  Lewenberg,  Y.  Sompolinsky  and  A.  Zohar,  "Inclusive  Block 
chain Protocols," in International Conference on Financial Cryp-
tography and Data Security. Springer, Berlin, Heidelberg, 2015. 
DOI: 10.1007/978-3-662-47854-7_33. 

[28]  Y. Sompolinsky, Y. Lewenberg and A. Zohar, "SPECTRE: A Fast 
And  Scalable  Cryptocurrency  Protocol,"  in  IACR  Cryptology 
ePrint Archive, 2016, 1159. 

[29]  H. Yu, I. Nikolić, R. Hou and P. Saxena, "OHIE: Blockchain Scal-
ing Made Simple," in 2020 IEEE Symposium on Security and Pri-
vacy (SP), 2020, 90-105. DOI: 10.1109/SP40000.2020.00008. 
[30]  C. Li, P. Li, D. Zhou, Z. Yang, M. Wu, G. Yang, W. Xu, F. Long and 
A.C.C. Yao, "A Decentralized Blockchain With High Throughput 
And Fast Confirmation," in 2020 USENIX Annual Technical Con-
ference (USENIX ATC 20), 2020, 515-528. 

Han  Wang  received  the  B.Eng.  degree  from 
the Department of Communication Engineering, 
Jilin University of Technology, China, in 2017. 
She is currently pursuing the Ph.D. degree with 
the School of Information Science, Peking Uni-
versity,  China.  Her  research  interests  include 
blockchain, distributed systems and cyber se-
curity. 

Hui Li is now a Professor of Peking University 
Shenzhen  Graduate  School.  He  received  his 
B.Eng. and M.S. degrees from School of Infor-
mation  Eng.,  Tsinghua  University,  Beijing, 
China,  in  1986  and  1989  respectively,  and 
Ph.D. degree from the Dept. of Information En-
gineering,  The  Chinese  University  of  Hong 
Kong  in  2000.  He  was  Director  of  Shenzhen 
Key Lab of Information theory & Future Internet 
architecture,  Director  of  PKU  Lab  of  CENI 
(China Environment for Network Innovations). He proposed the first 
co-governing  future  networking  “MIN”  Architecture  in  the  world  and 
this project “MIN: Co-Governing Multi-Identifier Network Architecture 
and Its Prototype on Operator’s Network” was obtained the award of 
World Leading Internet Scientific and Technological Achievements by 
the 6th World Internet Conference on 2019, WuZhen, China. He was 
invited as Guest Editor of ZTE COMMUNICATIONS March 2020 Vol. 
18 No. 1 with topic: Domain Name and Identifier of Internet: Architec-
ture & Systems. The first English monograph by theme of “Cyber-
space  UN”  has  been  published  by  Springer  Publisher  with  title：
《Co-governed Sovereignty Network: Legal Basis and Its Prototype & 
Applications  with  MIN Architecture》.  His  research  interests include 
network  architecture,  cyberspace  security,  distributed  storage,  and 
blockchain. 

 
 
 
 
 
 
 
 
 
 
 
 
 
13 

Yang Liu received the B.Eng. degree in micro-
electronics from Anhui University, Hefei, China, 
in  2012,  the  M.Eng.  degree  in  software  engi-
neering from Beijing University of Aeronautics 
and  Astronautics,  in  2016,  and  the  Ph.D.  de-
gree in communication and information system 
from Shanghai Institute of Microsystem and In-
formation Technology (SIMIT), Chinese Acad-
emy of Sciences, Shanghai, in 2019. He is cur-
rently a research fellow with The University of 
Sheffield (UK). His current research interests include mobile compu-
ting, Internet of Things, and wireless localization. 

Soung-Yue  Liew  received  his Bachelor’s  de-
gree in Electrical Engineering from the National 
Taiwan  University,  Taiwan,  in  1993,  and  the 
M.Phil. and Ph.D. degrees in Information Engi-
neering  from  the  Chinese  University  of  Hong 
Kong (CUHK), Hong Kong, in 1996 and 1999, 
respectively.  After  graduation,  he  joined  the 
Department  of 
Information  Engineering  at 
CUHK as an Assistant Professor (1999–2000) 
and  then  as  a  Research  Associate  (2001–
2002). From 2002 to 2003, he was a Research Associate at the Poly-
technic  University,  New  York  (now  known  as  New  York  University 
Tandon School of Engineering). In August 2003, he joined the Univer-
siti Tunku Abdul Rahman, Selangor, Malaysia, at where he is currently 
an Associate Professor and the Dean of the Faculty of Information and 
Communication  Technology.  His  research  interest  is  in  Internet  of 
Things,  Data  Analytics,  Mobile  and  Wireless  Networking,  Algorithm 
Design, Performance Analysis, etc. 

Lunchakorn  Wuttisittikulkij  received  his 
Bachelor’s  degree  in  Electrical  Engineering 
from  Chulalongkorn  University,  Thailand,  in 
1990, and M.Sc. in Telecommunication and In-
formation  Systems  and  Ph.D.  degrees  from 
the  University  of Essex,  the  United  Kingdom, 
in 1992 and 1997, respectively. After gradua-
tion, he joined the Department of Electrical En-
gineering  at  Chulalongkorn  University  as  a 
Lecturer (1997–1999) and then as an Assis-
tant Professor (1999–2002). From 2002, he becomes an Associate 
Professor. His research interest is in 5G and beyond wireless commu-
nication ecosystems. 

Zixian Wang received the B.Eng. degree from 
the  Department  of  Software  Engineering,  Da-
lian University of Technology, China, in 2019. 
He  is  currently  pursuing  a  M.S  degree  in 
School of Information Science, Peking Univer-
sity, China. His research interests include dis-
tributed system and future internet architecture. 

Baofu  Han  received  the  B.Eng.  degree  from 
the  Electronic  Information  Engineering,  Liao-
ning Shihua University, China, in 2018, and the 
the  M.Eng.  degree  in  Singla  and  Information 
Processing,  Shenyang  University  of  Technol-
ogy, China, in 2021. He is currently a research 
assistant in School of Information Science, Pe-
king  University,  China.  His  research  interests 
include blockchain and distributed systems. 

Minglong Zhang is a lecturer and postdoctoral 
research fellow with the Department of Electri-
cal and Electronic Engineering, Auckland Uni-
versity  of  Technology,  New  Zealand.  He  re-
ceived  his  MS  degree  and  PhD  from  Peking 
University and Auckland University of Technol-
ogy in 2011 and 2020, respectively. From 2011 
to 2016, he was a researcher in The Chinese 
University of Hong Kong. His research interests 
include machine learning, 5G V2X communica-
tions, wireless communication and networks, as well as B5G/6G tech-
nologies. 

Peter Han Joo Chong (Senior Member, IEEE) 
received the Ph.D. degree from The University 
of British Columbia, Canada, in 2000. He was 
an  Associate  Professor  (tenured)  with  the 
School of Electrical and Electronic Engineering, 
Nanyang Technological University (NTU), Sin-
gapore. From 2011 to 2013, he was an Assis-
tant  Head  of  the  Division  of  Communication 
Engineering.  From  2013  to  2016,  he  was the 
Director  of  INFINITUS,  Centre  for  Infocomm 
Technology.  He  is  currently  a  Professor  and 
the  Associate  Head  of  School  (Research),  School  of  Engineering, 
Computer and Mathematical Sciences, Auckland University of Tech-
nology, Auckland, New Zealand. He is also an Adjunct Professor with 
the Department of Information Engineering, The Chinese University of 
Hong  Kong,  Hong  Kong.  His  research  interests  are  in  the  areas  of 
mobile communications systems, including MANETs/VANETs, multi-
hop cellular networks, and the Internet of Things/Vehicles. 

Xiaoli  Chu  (Senior  Member,  IEEE)  received 
the  B.Eng.  degree  in  electronic  and  infor-
mation engineering from Xi’an Jiao Tong Uni-
versity, in 2001, and the Ph.D. degree in elec-
trical and electronic engineering from the Hong 
Kong University of Science and Technology, in 
2005. From September 2005 to April 2012, she 
was  with  the  Centre  for  Telecommunications 
Research,  King’s  College  London.  Her  re-
search  interest  includes  modeling,  analysis, 
and algorithm design for improving the perfor-

mance and efficiency of wireless communication systems. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
