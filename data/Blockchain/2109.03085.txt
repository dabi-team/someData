Blockchain mining in pools: Analyzing the trade-oﬀ between

proﬁtability and ruin

Hansjörg Albrecher∗

Dina Finger†

Pierre-O. Goﬀard‡

1
2
0
2

p
e
S
7

]

R
C
.
s
c
[

1
v
5
8
0
3
0
.
9
0
1
2
:
v
i
X
r
a

Abstract

The resource-consuming mining of blocks on a blockchain equipped with a proof of work con-
sensus protocol bears the risk of ruin, namely when the operational costs for the mining exceed
the received rewards. In this paper we investigate to what extent it is of interest to join a mining
pool that reduces the variance of the return of a miner for a speciﬁed cost for participation. Using
methodology from ruin theory and risk sharing in insurance, we quantitatively study the eﬀects of
pooling in this context and derive several explicit formulas for quantities of interest. The results
are illustrated in numerical examples for parameters of practical relevance.

1.

Introduction

A blockchain is a decentralized data ledger maintained by a Peer-to-Peer network. Blockchain users

issue transactions to the network peers who agree on those to be recorded by following a consensus

protocol. In public and permissionless blockchains, such as the one for Bitcoin, the consensus protocol

is called Proof-of-Work (PoW). The nodes, referred to as miners, compete to solve a challenging cryp-

tographic puzzle using some brute force search algorithm. The ﬁrst miner to come up with a solution

includes the pending transactions in a block and is rewarded with newly minted crypto-coins. This

reward compensates the operational cost of mining mainly induced by the consumption of electricity.

The PoW protocol is designed to be incentive compatible in the sense that a miner is compensated

proportionally to her computational eﬀort. When the Peer-to-Peer network grows large, the share of

the network computing power owned by a given miner shrinks, which in turn makes the gains infre-

quent. The constant operating costs therefore endanger the solvency of miners and has led them to

join forces by forming mining pools.

Mining pools grant miners a steadier income, as block ﬁnding rewards are collected more often. The

earnings are then fairly distributed to the pool participants based on their contribution to the com-

putational eﬀort. The simplest way to do so consists in splitting the reward whenever a block is

found. This is the proportional reward system. More sophisticated reward schemes have been put

together to increase the amount of risk transferred from the miners to the pool and to ﬁll the gaps

∗The Faculty of Business and Economics, University of Lausanne and Swiss Finance Institute, Quartier UNIL-

Chamberonne Bâtiment Extranef, 1015 Lausanne, Switzerland, hansjoerg.albrecher@unil.ch

†The Faculty of Business and Economics, University of Lausanne, Quartier UNIL-Chamberonne Bâtiment Extranef,

1015 Lausanne, Switzerland, dina.finger@unil.ch

‡Laboratoire de Sciences Actuarielle et Financière EA2429, Université Claude Bernard Lyon 1, Université
Institut de Science Financière et d’Assurances, 50 Avenue Tony Garnier, 69007 Lyon, France,

de Lyon.
pierre-olivier.goffard@univ-lyon1.fr

1

 
 
 
 
 
 
of the proportional system that we will discuss later. These more sophisticated systems require the

supervision of a manager who undertakes part of the risk in exchange for a commission. An early

work of Rosenfeld [17] provides a detailed overview on mining pool reward systems, see also the recent

survey of Zhu et al. [21]. In practice, the individual contribution of a miner is measured through a

share submission process. A share refers to an easier-to-ﬁnd ’fake’ solution to the crypto-puzzle that

miners must send to the pool manager to prove their involvement (for instance, a solution to the

crypto-puzzle with only m instead of the n > m leading zeroes required for the successful mining of a

block). In this work we provide a risk analysis of Pay-per-Share (PPS) reward systems in which the

pool manager pays for each share submitted by the miners. In that way the manager takes on much

of the randomness associated to the mining activity, which is therefore very appealing to the partic-

ipant. Using utility theory, Schrijvers et al. [18] showed that such systems are incentive-compatible

for risk-averse miners. Both Rosenfeld [17] and Zhu et al. [21] stressed that a scheme of this kind

must go hand in hand with a proper capital allocation strategy on the part of the manager to avoid

ruin. The aim of this paper is to provide risk-analytic tools to inform the decision making process of

miners and pool managers. This is achieved by taking an approach inspired from insurance risk theory.

The wealth of miners and pool managers is modelled via stochastic processes that take into account

operational costs, pool participation fees and the rewards for share and block ﬁnding. The resulting

processes are similar to those appearing in the surplus modelling for insurance companies which collect

premiums continuously and have to pay loss reimbursements to policyholders in case a claim occurs. A

standard risk measure in this context is the ruin probability deﬁned as the probability that the wealth

process falls below zero, see e.g. Asmussen and Albrecher [4] for an overview. This analogy was already

used in Albrecher and Goﬀard [2], where the opportunity for miners to deviate from the prescribed

protocol by withholding blocks was investigated. A ﬁrst result was also obtained there in relation to

the advantage of joining a mining pool which applies the proportional system. Our objective in this

paper is to considerably extend this line of thinking towards the Pay-per-Share redistribution systems

that are more commonly used in practice. We will also consider a variant of the model in which the

collected rewards are random variables. This assumption will enable the application of classical results

from double-sided jumps in a risk reserve process for modelling insurance portfolios, see for example

Albrecher at al.

[1], Labbé and Sendova [13]. Incorporating random rewards allows us to account

for the transactions fees and the exchange rate of cryptocurrencies to ﬁat ones. Transaction fees are

included by blockchain users to entice the network to process their transactions, see Easley al. [8] and

Kasahara and Kawahara [11]. The redistribution of the revenue generated by the transaction fees

among the pool participants also varies from one mining pool to another.

A major concern associated to mining pool formation is the centralization of the network. Cong et al.

[6] have explained that miners who direct their mining power to multiple small mining pools enjoy the

same risk sharing beneﬁts as miners that choose to join a single mining pool. Hence the intuition that

a larger mining pool would grow even larger is misguided. Empirical data shows that the participation

fees are greater in larger mining pools, which naturally slows down their growth. We aim at providing

more insight on the risk of centralization in the light of our analysis.

The remainder of the paper is organized as follows. Section 2 provides an overview of the existing

2

reward systems and describes the Pay-Per-Share mechanism in more detail, as it will be the focus

later on. Formulas for the ruin probability and expected surplus for the pool manager are derived

for deterministic rewards in Section 3 and for randomized reward in Section 4. Section 5 provides

formulas from the individual miner’s perspective. Section 6 is devoted to numerical illustrations where

the sensitivity of the risk and performance indicator is analysed with respect to the model parameters.

Section 7 concludes.

2. Risk models and reward systems

A risk model deﬁnes the wealth of some company or individual as a stochastic process

Rt = u − Ct + Bt, t ≥ 0.

which corresponds to the income (Bt)t≥0 net of the expenses (Ct)t≥0. The surplus process (Rt)t≥0
starts at some initial level R0 = u > 0. We take a continuous time approach where t ∈ R+, and (Ct)t≥0
and (Bt)t≥0 deﬁne increasing functions or stochastic processes. A risk analysis is relevant only if at
least one of the model components is random. The activity of the company is proﬁtable if on average
the earnings exceed the expenses, namely E(Bt) > E(Ct). Even if the net proﬁt condition holds, the
variability of the process (Rt)t≥0 can lead to bankruptcy as it may become negative. Deﬁne the ruin
time as

τu = inf{t ≥ 0 : Rt < 0},

which corresponds to the ﬁrst time at which the surplus goes below 0. The risk of bankruptcy is

classically assessed by computing the ruin probability up to time t ≥ 0 deﬁned by

ψ(u, t) = P(τu ≤ t).

(1)

It is sometimes more convenient from a mathematical point of view to consider the inﬁnite-time
horizon by letting t → ∞, and in that case we write ψ(u) := limt→∞ ψ(u, t). Following the rationale
developed in [2], we also consider a performance indicator deﬁned as

V (u, t) = E(RtIτu>t),

(2)

which corresponds to the expected surplus at time t ≥ 0 in case ruin did not occur until then.

Consider a network of n miners, where miner i ∈ {1, . . . , n} owns a share pi ∈ (0, 1) of the network
hashpower, i.e. Pn
i=1 pi = 1. If the number of blocks found by the network is governed by a homo-
geneous Poisson process (Nt)t≥0 with intensity λ, then the number of blocks found by miner i is a
(thinned) Poisson process (N i
t )t≥0 with intensity pi · λ. Denote by b > 0 the amount of the reward for
ﬁnding a new block and assume that the cumulative operational cost is a linear function with slope
ci > 0 which depends on the price of the electricity and the computing power of miner i. The surplus
process of miner i is then given by

Ri

t = u − ci · t + N i

t · b, t ≥ 0.

(3)

3

Model (3) has been considered by Albrecher and Goﬀard [2], and formulas for both the ﬁnite-time

ruin probability (1) and the expected surplus (2) were derived. To make the formulas more amenable

for numerical evaluation, the authors then decided to approximate the ﬁxed time horizon t ≥ 0 by an

exponential random variable T ∼ Exp(t) with mean t ≥ 0, resulting in tractable expressions for

bψ(u, t) = E[ψ(u, T )], and bV (u, t) := E[V (u, T )],

(4)

which were then used to carry out a numerical analysis.

Consider now a situation where a subset of miners I ⊂ {1, . . . , n} decides to gather in a mining pool.

The cumulated hashpower of this pool is then

pI = X

pi,

i∈I

and the arrival rate of block rewards for a given miner i rises from pi · λ to pI · λ. Because the reward
is shared among the pool participants, the size of the reward collected by miner i decreases from b to
pi · b. The expected surplus is the same when mining solo and mining for a pool, but the variance (and
therefore the risk) is smaller when mining for a pool. The management of a mining pool relies heavily

on the reward distribution mechanism set up by a pool manager. For the redistribution system to

be fair, each miner must be remunerated in proportion to her calculation eﬀort. Miner i must earn
a share pi/pI of the mining pool total income. The pool manager has to ﬁnd a way to estimate the
contribution of each pool participant. This is done by submitting shares which are partial solutions to

the cryptopuzzle easier to ﬁnd than the actual solution. The manager’s cut is a fraction f ∈ (0, 1) of

the block discovery reward b. We start by presenting the proportional reward system in Section 2.1.

2.1 The proportional reward system

The proportional reward system splits time in rounds which correspond to the time elapsed between

two block discoveries. During these rounds, the miners submit shares. The ratio of the number of

shares submitted by miner i over the total number of shares submitted by her fellow mining pool

participants determines her share of the reward and should converge to her share of the mining pool
computing power, that is pi/pI (for suﬃciently low complexity of the shares, the latter limit will be a
very good approximation for the actual situation indeed). The surplus of miner i is then given

Ri

t = u − ci · t + N I

t · (1 − f ) ·

pi
pI

· b, t ≥ 0,

(5)

where (N I
t ) is a Poisson proccess of intensity pI · λ that gives the number of blocks appended to the
blockchain by the mining pool. The duration of a round is exponentially distributed Exp (cid:2)(pI λ)−1(cid:3).
The uncertainty on the length of the round has undesirable consequences on the time value of the

shares submitted by the miners. Indeed, if n shares are submitted during a round, then the value

of a given share is (1 − f ) · b/n. The longer a round lasts, the greater the value of n is. The shares

are worth less in longer rounds which triggers an exodus behavior of miners toward mining pools

with shorter rounds. This phenomenon, called pool hopping, has been documented in the early work

of Rosenfeld [17]. Yet another drawback is that a miner that has found a full solution may delay

the submission until her ratio of shares submitted reﬂects her fraction of the mining pool computing

4

power. The proportional system is not incentive-compatible using the terminology of Schrijvers et al.

[18]. A discounting factor may be applied to compensate the decreasing value of shares over time, see

for instance the slush’s method [19].

Our work is also concerned about the risk undertaken by pool managers. Within the frame of the

proportional reward system, the surplus of the pool manager is given by

RI

t = u + N I

t · f · b, t ≥ 0.

(6)

Model (6) does not account for any mining pool operating cost. The mining costs are entirely borne by

miners and the mining pool manager only serves as coordinator. A proportional-type reward system

should therefore lead to a low management fee f .

Although this system provides fairness, it has weaknesses that justify the introduction of a more

sophisticated distribution mechanism. In particular, if miners seek to actually transfer some of the

risk associated to the mining activity to the pool manager, then they should rather turn to a mining

pool based on a Pay-per-Share system, which is the focus of this paper and introduced in the next

section.

2.2 The Pay-Per-Share reward system

In a Pay-per-Share reward system, the pool manager immediately rewards the miners for each share
submitted. Let (Mt)t≥0 be a Poisson process of intensity µ that counts the number of shares submitted
by the entire network of miners up to time t ≥ 0. Denote by q ∈ (0, 1) the relative diﬃculty of ﬁnding

a block compared to ﬁnding a share. Let 0 < w < b be the reward for ﬁnding a share. The number of
shares submitted by miner i is then a (thinned) Poisson process (M i
t )t≥0 and her surplus when joining
a PPS mining pool becomes

Ri

t = u − ci · t + M i

t · w, t ≥ 0.

(7)

The intensities of the processes (Nt)t≥0 and (Mt)t≥0 are linked through λ = q · µ. By setting w =
(1 − f ) · b · q, we observe that the surplus (5) and (7) have the same expectation at time t, but the

variance and therefore the risk associated to (7) is lower. This reward system has been shown to be

resistant to pool hopping and is incentive compatible. It also entails a signiﬁcant transfer of risk to

the pool manager whose surplus process is now given by

RI

t = u − M I

t · w + N I

t · b, t ≥ 0,

(8)

making her subject to the risk of bankruptcy.

Remark 2.1. Since the process (M I
t )t≥0 requires solving for a problem of lower complexitiy than
(N I
t )t≥0. It means that both processes
are not independent. Concretely, at the moment of the block reward payment b, at the same time

t )t≥0 is a subset of the path deﬁned by the process (M I

t )t≥0, (N I

there is a realisation of the miners’ reward w. As we sometimes will need to isolate downward jumps

without the simultaneous upward jump point, we deﬁne another process with a reduced intensity. We
t by redeﬁning the down

[12]) to the Poisson process M I

apply the superposition theorem (see e.g.
jump process as (M I,d

)t≥0 ∼ P oisson(µd), where µd = µ − λ.

t

5

Figure 1 represents sample paths of the surplus processes for an individual miner and the pool manager.

(a) Individual miner

(b) Pool manager

Figure 1: Illustration of surplus paths for the pool members and the pool manager.

In addition to the bounty for ﬁnding a new block, blockchain users usually include a small ﬁnancial

incentive for the network to process their transaction. These transaction fees (e.g. referred to as gas

within the ETHEREUM blockchain), are known to be variable as they highly depend on the network

congestion at a given time. Note also that since the operational cost is paid by miners using a ﬁat

currency, it would be more accurate to account for the exchange rate of the cryptocurrency to some

ﬁat currency. We can therefore model the successive rewards for shares and blocks as sequences of
nonnegative random variables denoted by (Wk)k≥1 and (Bk)k≥1 respectively, which for simplicity we
will both assume to be i.i.d. in this paper. A reward system that features a Pay-per-Share mechanism

and includes in the miners’ reward the transaction fees is referred to as a Full Pay-per-Share reward

system by practitioners. The surplus of miner i in a mining pool applying the FPPS system is given

by

Ri

t = u − ci · t +

M i
tX

k=1

Wk, t ≥ 0,

and the surplus of the pool manager then becomes

RI

t = u −

M I
tX

k=1

Wk +

N I
tX

l=1

Bl, t ≥ 0.

(9)

(10)

In the following sections, we will now derive formulas for the ruin probability and expected surplus in

case ruin did not occur up to a given time horizon for the models discussed above.

3. Pool analysis with deterministic rewards

We start with a ﬁxed time horizon. For simplicity, we drop the superscript I in the following devel-

opments.

6

10020030040050060070002004006008001000tRti024682100022000230002400025000tRtI3.1 Deterministic time horizon

For the pool manager’s side, we ﬁrst deﬁne some measures of interest. Let τ = inf{t ≥ 0 : Rt < 0} be
the time of ruin of the pool manager, i.e. the ﬁrst time his surplus reaches 0. The corresponding ruin

probabilities in ﬁnite and inﬁnite horizon respectively are given by

ψ(u, t) = P(τ ≤ t), and ψ(u) = P(τ < ∞).

(11)

The net proﬁt condition in this case translates to λb > µw. It implies from [4], that ψ(u) < 1. We

also deﬁne the expected surplus at time t given that ruin has not occurred up to time t:

V (u, t) = E(RtIτ >t).

(12)

Note that ruin can only occur at discrete times when the process (M d
rewrite the ruin time τ as

t )t≥0 admits a jump. We can

τ = inf{t ≥ 0; M d

t w > u + Nt(b − w)} = inf{t ≥ 0; M d

t > u/w + Nt(b − w)/w}.

Equivalently, we can rewrite it as

τ = inf{t ≥ 0; M d

t w/(b − w) > u/(b − w) + Nt}

(13)

(14)

to isolate the (Nt)t≥0 process with unit jumps. The study of the p.d.f. fτ of τ is analogous to the
derivations in [9]. Since (Nt)t≥0 and (M d
t )t≥0 are Poisson process, they enjoy the order statistic
property. That is, given that Nt = n, the jump times {T1, . . . , Tn} of the process Nt have the same
distribution as the order statistics vector of a random variable having distribution Ft(s) = s/t, 0 ≤
s ≤ t. Further, let {Sd
t )t≥0.
Its distribution function is denoted by FSd
(t). Denote by dxe the ceiling
function. Following Corollary 1 from [9], we proceed from Equation (14) and derive the next steps.

n, n ∈ N} be the sequence of arrival times associated with the process (M d

(t) and its p.d.f. by fSd

n

n

Theorem 3.1. Let (Nt, t ≥ 0) and (M d
tively, the p.d.f. of τ is given by

t , t ≥ 0) be Poisson processes with intensities {λ, µd} respec-

fτ (t) =

+∞
X

E

n=0

(cid:20) (−1)n

tn Gn

h
0|Sv0, . . . , Sd

vn−1

i
|Sd

(cid:21)
vn = t

fSd
vn

(t)P [Nt = n] ,

(15)

where (vn)n≥0 is a sequence of integers deﬁned as vn = dn(b−w)/w+u/we, n ≥ 0, and (Gn(·|{. . .})n∈N
is the sequence of Abel-Gontcharov polynomials deﬁned in Appendix A.

The proof is delegated to Appendix B. The expression of the ruin time p.d.f. (15) is not convenient for

numerical purposes. The inﬁnite series in (15) must be truncated, possibly to a high order to reach

an acceptable level of accuracy. Also, the evaluation of the Abel-Gontcharov polynomials relies on the

recurrence relationships (66) which are known to suﬀer from numerical instabilities. Moreover, the
conditional expectation with respect to {Sd
vn = t} itself requires the use of Monte Carlo simulations.
Finally, a similar algebraic expression for V (u, t) is out of sight. In view of all these diﬃculties, we

therefore propose as in [2] a workaround which consists of replacing the deterministic time horizon by

a random variable with exponential distribution.

7

3.2 Exponential time horizon

To obtain a nicer solution to the problem, we now randomize the time horizon T . The practical

intuition suggests that the time horizon is never ﬁxed in advance and is subject to various external

factors, such as bitcoin price ﬂuctuations, in-pool events etc. We choose the time horizon T to be
exponentially distributed with rate 1/t (so that E(T ) = t). This leads to computable expressions
having an intuitive justiﬁcation due to the lack of memory property of the exponential distribution.
Let ˆV (u, t) := E(RT Iτ >T ) denote the expected value of the surplus at the exponential time horizon T .

Theorem 3.2. Let b and w, b > w, be ﬁxed positive integers. Then the expected surplus at an

exponential time horizon can be expressed in the form

ˆV (u, t) =

w
X

i=1

cixu

i + u + λb t − (λ + µd)w t,

where x1, . . . , xw are the w roots inside the unit disk of the equation

λxb − (λ + µd + 1/t)xw + µd = 0,

(16)

and the constants c1, . . . , cw are the solution of the linear equation system

λxb−w
λxb−w+1
1

1 − (λ + µd + 1/t)

− (λ + µd + 1/t)x1

...
1 − (λ + µd + 1/t)xw−1

1

λxb−1

w − (λ + µd + 1/t)

λxb−w
· · ·
· · · λxb−w+1
. . .
· · · λxb−1

w

− (λ + µd + 1/t)xw

...
w − (λ + µd + 1/t)xw−1

w




























c1
c2
...
cw

=



















A1
A2
...
Aw

,

(17)










with

Ai = (i − 1)µd + µdt(λb − (λ + µd)w) − µdw,

i = 1, . . . , w.

Proof. Akin to the approach in [1], consider some small h > 0 and condition on the following scenarios

during the time interval (0, h):

1. no jump and T > h;

2. no jump and T ≤ h;

3. occurrence of an upward jump;

4. occurrence of a downward jump.

All other combinations of these events have negligible probability in the limit h → 0 that we will

pursue below. One then obtains

ˆV (u, t) = e−( 1

t +λ+µd)h ˆV (u, t) +

Z h

e−s/te−(λ+µd)su ds

1
t

0
e−λse−(1/t+µd)s ˆV (u + b − w, t) ds + µd

+ λ

Z h

0

Z h

0

e−µdse−(1/t+λ)s ˆV (u − w, t) ds.

(18)

We now take the derivative w.r.t. h and set h = 0 to obtain

λ ˆV (u + b − w, t) − (λ + µd + 1/t) ˆV (u, t) + µd ˆV (u − w, t) + u/t = 0,

u ≥ 0.

(19)

8

By deﬁnition of ˆV (u, t) we have the boundary conditions ˆV (u, t) = 0 for all u < 0 and the linear
boundedness 0 ≤ ˆV (u, t) ≤ u + (λb − µdw)t in both u and t for all u, t ≥ 0.
Equation (19) is an inhomogeneous diﬀerence equation with constant coeﬃcients (see e.g. [10] for

solution methods), which has the general solution

ˆV (u, t) =

b
X

i=1

cixu

i + d0 + d1u

with constants {ci}b
i=1, d0, d1 still to be determined.
Let us start with the inhomogeneous part: plugging the ansatz d0 + d1u into (19) gives

i=1, {xi}b

d1 = 1, d0 = λbt − (λ + µd)wt.

For the homogeneous part, we consider the characteristic equation (16), which by the Fundamental
Theorem of Algebra has exactly b complex roots x1, . . . , xb. The linear boundedness of ˆV (u, t), how-
ever, excludes any solution with absolute value exceeding 1 (i.e., the corresponding constants ci must
be zero). In fact, it turns out that exactly w roots of the polynomial in (16) are located inside the
unit disk in the complex plane. To see this, observe ﬁrst that (λ + µd + 1/t)xw + µd has exactly w
roots inside the unit disk (due to µd/(λ + µd + 1/t) < 1). Then Rouché’s Theorem establishes that
the same is true for the entire polynomial in (16), if

|λzb| < | − (λ + µd + 1/t)zw + µd| on |z| = 1,

which translates into the condition

|µd − (λ + µd + 1/t)zw| > λ on |z| = 1.

(20)

The reverse triangle inequality states for any complex a, b ∈ C that |a − b| ≥
that for |z| = 1 the left-hand side of (20) is larger than λ + 1/t, so that (20) is indeed fulﬁlled.
It is now only left to determine the coeﬃcients c1, . . . , cw corresponding to the w roots x1, . . . , xw ∈ C
with |xi| < 1 of (16). To that end, note that (19) evaluated at u = 0, . . . , w − 1 gives the following
system of equations:

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12), which shows
(cid:12)|a| − |b|

λ ˆV (b − w, t) − (λ + µd + 1/t) ˆV (0, t) = 0,
λ ˆV (b − w + 1, t) − (λ + µd + 1/t) ˆV (1, t) + 1/t = 0,
· · ·
λ ˆV (b − 1, t) − (λ + µd + 1/t) ˆV (w − 1, t) + (w − 1)/t = 0.

Substituting the form

ˆV (u, t) =

w
X

i=1

cixu

i + u + at

with at = λb t − (λ + µd)w t into this system leads to

λ

w
X

i=1

cixb−w

i + λ(b − w) + λat − (λ + µd + 1/t)

!

ci + at

= 0,

  w
X

i=1

9

λ

w
X

i=1

· · ·
w
X

λ

i=1

cixb−w+1
i

+ λ(b − w + 1) + λat − (λ + µd + 1/t)

!

cixi + (1 + at)

+ 1/t = 0,

  w
X

i=1

cixb−1

i + λ(b − 1) + λat − (λ + µd + 1/t)

cixw−1
i

+ (w − 1 + at)

+ (w − 1)/t = 0.

!

  w
X

i=1

But the latter can be rewritten in the form (17).

Example 3.3. Figure 2 depicts ˆV (u, t) as a function of u for the parameters b = 100, w = 9, t =
1, λ = 10, µd = 90. Note that for some capital levels u the increase of ˆV (u, 1) from u to u + 1 is larger
than for others. This is linked to how many down-jumps relative to up-jumps are needed to become
negative, and due to the discrete nature of the problem such jumps in ˆV (u, t) occur naturally.

Figure 2: ˆV (u, 1) as a function of u

In an analogous way, an explicit formula for bψ(u, t) = E [ψ(u, T )] can be derived.

Theorem 3.4. Let b and w, b > w, be ﬁxed positive integers. Then the ruin probability up to an

exponential time horizon with mean t is given by

bψ(u, t) =

w
X

i=1

cixu
i

where x1, . . . , xw are the w roots inside the unit disk of Equation (16) and the constants c1, . . . , cw are
the solution of the linear equation system










λxb−w
λxb−w+1
1

1 − (λ + µd + 1/t)

− (λ + µd + 1/t)x1

...
1 − (λ + µd + 1/t)xw−1

1

λxb−1

w − (λ + µd + 1/t)

λxb−w
· · ·
· · · λxb−w+1
. . .
· · · λxb−1

w

− (λ + µd + 1/t)xw

...
w − (λ + µd + 1/t)xw−1

w




























c1
c2
...
cw

=










−µd
−µd
...
−µd










.

(21)

10

2040608010050100150Proof. We proceed in the same way as in the proof of Theorem 3.2. The analogue of (18) then is

bψ(u, t) = e−( 1

t +λ+µd)h bψ(u, t) + λ

Z h

0

e−λse−(1/t+µd)s bψ(u + b − w, t) ds

+ µd

Z h

0

e−µdse−(1/t+λ)s bψ(u − w, t) ds

(22)

and (19) is replaced by

λ bψ(u + b − w, t) − (λ + µd + 1/t) bψ(u, t) + µd bψ(u − w, t) = 0,

u ≥ 0,

(23)

which is the homogeneous equation of the former. The boundary conditions here are given by bψ(u, t) =
1 for u < 0 as well as the obvious bound bψ(u + b − w, t) ≤ 1 for all u ≥ 0. Correspondingly, from the
proof of the previous theorem we then know that

bψ(u, t) =

w
X

i=1

cixu
i

(24)

with constants c1, . . . , cw still to be determined. Evaluating (23) at u = 0, . . . , w − 1 gives

λ bψ(b − w + j, t) − (λ + µd + 1/t) bψ(j, t) + µd = 0,

j = 0, . . . , w − 1.

Substituting (24) into these leads to

λ

w
X

i=1

cixb−w+j
i

− (λ + µd + 1/t)

!

cixj
i

  w
X

i=1

+ µd = 0,

j = 0, . . . , w − 1,

or equivalently (21).

4. Pool analysis with stochastic rewards

Let us now assume that the up- and downward jumps in the dynamics of the pool manager’s surplus

are stochastic. Under certain assumptions on the nature of these jumps, this will allow us to derive
closed form formulas for bψ and ˆV in the spirit of [1], see also [4, Ch. 4]. Equation (8) then is replaced
by

Rt = u −

M d
tX

n=1

Wn +

NtX

n=1

Br,n,

t ≥ 0,

(25)

where we assume Wn, n ∈ N to be i.i.d. positive random variables with cumulative distribution function
FW and ﬁnite mean representing payments to the pool members, and Br,n, n ∈ N are assumed to
be i.i.d. positive random variables with distribution function FBr and ﬁnite mean representing the
remaining inﬂow of bounty rewards diminished by the simultaneous payout to the respective pool

member.

Consider the expected surplus of the pool manager as deﬁned previously with a random time horizon

T . Concretely, T follows an exponential distribution with mean t. As in the previous section, we are
interested in ˆV (u, t).

Proposition 4.1. The quantity ˆV (u, t) = E(RT Iτ >T ) for the pool surplus process (25) is a solution

11

of the integral equation

Z ∞

λ

0

ˆV (u+br, t) dFBr (br)−(λ+µd +1/t) ˆV (u, t)+µd

Z u

0

ˆV (u−w, t) dFW (w)+u/t = 0,

u ≥ 0, (26)

with boundary conditions ˆV (u, t) = 0 for all u < 0 and 0 ≤ ˆV (u, t) ≤ u + (λE[Br] − µdE[W ])t for all
u, t ≥ 0.

Proof. We extend the approach of the proof of Theorem 3.2 by conditioning on the size of the jump

in case a jump occurs. For some small h > 0 we correspondingly get

Z h

1
t
Z ∞

ˆV (u, t) = e−( 1

t +λ+µd)h ˆV (u, t) +

e−s/te−(λ+µd)su ds

Z h

+ λ

e−λse−(1/t+µd)s

0
Z h

0

+ µd

e−µdse−(1/t+λ)s

0
Z u

0

0
ˆV (u + br, t) dFBr (br) ds

ˆV (u − w, t) dFW (w) ds.

(27)

Taking the derivative w.r.t. h and setting h = 0, one obtains (26). The property ˆV (u, t) = 0 for all
u < 0 follows by deﬁnition and the linear upper bound in u and t is obtained from the inequality
ˆV (u, t) ≤ E(RT ).

For our purposes, it is very reasonable to assume (and will lead to simpliﬁed notation) that the generic
random variables Br and W are connected via

Br = a W

(28)

for some constant a > 1 that depends on the number of miners in the pool. Indeed, W is the payment
to the pool miner for solving a less complex puzzle, and Br can be seen as the bounty reward when
the more complex puzzle is solved minus the payment to the miner who solved it, and that latter

payment will be a constant fraction, depending on the speciﬁcation of the pool rules. Note that for

most positive random variables, a scaled version of it belongs to the same class of random variables

with only the parameter(s) changed, and the latter is indeed the case for all distributional assumptions

that we will pursue in this paper. In any case, all results below can easily be adapted to the case when
Br and W follow unrelated combinations of exponentials with diﬀerent n and Ai’s.

Let us now consider in more detail the case where both the up- and down-jumps are combinations

of exponential random variables. The latter class is dense in the class of all random variables on the

positive half-line, so that the result is in fact quite general (see e.g. Dufresne [7]). Concretely, the

density of downward jumps is then assumed to be of the form

fW (w) =

n
X

i=1

Aiαie−αiw, w > 0,

(29)

where α1 < α2 < . . . < αn and A1 + · · · + An = 1 (but the Ai are not necessarily positive). The

12

Laplace transform of this density is given by

˜fW (s) := E(e−sW ) =

n
X

i=1

Ai

αi
αi + s

, Re(s) > −α1.

From (28), we then have

with βi = αi/a, i = 1, . . . , n.

fBr (br) =

n
X

i=1

Aiβie−βibr ,

br > 0

(30)

Theorem 4.2. If W and Br are combinations of exponential random variables with densities given
in (29) and (30), then we have

ˆV (u, t) =

n
X

k=1

Cke−rku + u + t

n
X

i=1

Ai

(cid:18) λ
βi

−

(cid:19)

,

µd
αi

(31)

where r1, . . . , rn are the solutions with positive real parts of

and

with

λ

n
X

i=1

Ai

βi
βi + r

+ µd

n
X

i=1

Ai

αi
αi − r

− (λ + µd + 1/t) = 0

(32)

Ck =

Pn

j=1 Bj

n
Q
h=1

(αj − rh)

n
Q
i=1,i6=j

rk−αi
αj −αi

n
Q
h=1,h6=k

(rk − rh)

,

k = 1, . . . , n

(33)

Bj =

1
α2
j

−

t
αj

n
X

i=1

Ai

(cid:18) λ
βi

−

(cid:19)

µd
αi

,

j = 1, . . . , n.

Proof. Substituting (29) and (30) into (26), we get

λ

n
X

i=1

Aiβi

Z ∞

0

ˆV (u + br, t)e−βibr dbr

− (λ + µd + 1/t) ˆV (u, t) + µd

n
X

i=1

Aiαi

Z u

0

ˆV (u − w, t)e−αiwdw + u/t = 0,

u ≥ 0.

The function ˆV (u, t) then has the form

ˆV (u, t) =

n
X

k=1

Cke−rku + d1u + d0,

for constants C1, . . . , Cn, r1, . . . , rn, d0, d1 to be determined.
In fact, plugging this ansatz into the
above equation shows that comparing coeﬃcients of e−rku exactly gives (32) (which is a generalized
Lundberg equation in the terminology of ruin theory, cf. [4]). That equation has exactly n solutions
with positive real part r1, . . . , rn and n solutions with negative real part (see e.g. [20]). The solutions
with negative real part would enter ˆV with positive real part and are correspondingly irrelevant for
our purpose, as that would violate the linear boundedness of the resulting ˆV (in other words, the

13

coeﬃcients in front of such terms need to be zero). Comparing coeﬃcients of e−αiu, i = 1, . . . , n gives

n
X

k=1

Ck
αi − rk

=

d1
α2
i

−

d0
αi

,

i = 1, . . . , n.

(34)

Coeﬃcients in front of u e−αiu, i = 1, . . . , n all cancel. After a little algebra, one sees that a comparison
of coeﬃcients of u in that equation establish d1 = 1 and a comparison of the constant coeﬃcients gives

d0 = t

n
X

i=1

Ai

(cid:18) λ
βi

−

(cid:19)

.

µd
αi

These obtained values of d1 and d0 can now be plugged into (34), and the resulting system of linear
equations can be solved explicitly to give (33), either by realizing that the coeﬃcient matrix is a

Cauchy matrix or by using the trick of rational function representation developed in [1, Sec.4].

Example 4.3. A particular simple example of the above is the case where W is exponentially dis-
tributed with parameter α and Br is exponentially distributed with parameter β. In that case n = 1
in Theorem 4.2 and we obtain

ˆV (u, t) =

(cid:18) 1
α2 −

t
α

(cid:18) λ
β

−

µd
α

(cid:19)(cid:19)

(α − R)e−Ru + u + t

(cid:18) λ
β

−

(cid:19)

,

µd
α

where R is the (unique) solution with positive real part of

λ

β
β + r

+ µd

α
α − r

− (λ + µd + 1/t) = 0.

(35)

(36)

Let us now move on to study the ruin probability bψ(u, t) = E [ψ(u, T )] in the present context.

Theorem 4.4. If W and Br are combinations of exponential random variables with densities given
in (29) and (30), then we have

bψ(u, t) =

Dke−rku,

(37)

n
X

where r1, . . . , rn are the n solutions with positive real parts of (32) and

k=1

Pn

j=1

1
αj

Dk =

n
Q
i=1,i6=j

rk−αi
αj −αi

,

k = 1, . . . , n.

(38)

(αj − rh)

n
Q
h=1
n
Q
h=1,h6=k

(rk − rh)

Proof. We can proceed in the same way as in the proof of Proposition 4.1 to derive an integral equation

for the ruin probability. The analogue of Equation (27) here is

bψ(u, t) = e−( 1

t +λ+µd)h bψ(u, t) + λ

+ µd

Z h

0

e−µdse−(1/t+λ)s

0
(cid:18)Z u

0

Z h

e−λse−(1/t+µd)s

Z ∞

0

bψ(u + br, t) dFBr (br) ds

bψ(u − w, t) dFW (w) +

1 dFW (w)

(cid:19)

ds.

Z ∞

u

14

(39)

Taking the derivative w.r.t. h and evaluating at h = 0 then gives

Z ∞

λ

0

bψ(u+br, t) dFBr (br)−(λ+µd+1/t) bψ(u, t)+µd

bψ(u−w, t) dFW (w)+µd(1−FW (u)) = 0,

u ≥ 0.

(40)
Here the boundary conditions are bψ(u, t) = 1 for u < 0 and bψ(u, t) ≤ 1 for u ≥ 0 and arbitrary t > 0,
and uniqueness of its solution follows analogously to Theorem 4.2. Under the assumptions on FBr and
FW this reads

Z u

0

λ

n
X

i=1

Aiβi

Z ∞

0

bψ(u + br, t) e−βibr dbr − (λ + µd + 1/t) bψ(u, t)

+ µd

n
X

i=1

Aiαi

Z u

0

bψ(u − w, t) e−αiw dw + µd

n
X

i=1

Aie−αiu = 0,

u ≥ 0.

(41)

In analogy to the proof of Theorem 4.2 we then see that the ruin probability must have the form

bψ(u, t) =

n
X

k=1

Dke−rku

for constants D1, . . . , Dn to be determined, and r1, . . . , rn being the n positive solutions of (32).
The constants Dk are now obtained by substituting the above expression into (41) and comparing
coeﬃcients of e−αiu, i = 1, . . . , n. This gives

n
X

k=1

Dk
αi − rk

=

1
αi

,

i = 1, . . . , n.

(42)

This system of linear equations is again of Cauchy matrix form with explicit solution (38), establishing

the result.

Example 4.5. If W and Br are exponentially distributed with parameter α and β, respectively, then
(37) simpliﬁes to

bψ(u, t) = (1 − R/α)e−Ru, u ≥ 0,

where R is the (unique) solution with positive real part of (36).
Note that for t → ∞ one obtains R = (λα − µdβ)/(λ + µd) > 0, so that

ψ(u) =

µd(1 + β/α)
λ + µd

λα−µdβ
λ+µd

u

−

e

, u ≥ 0.

(43)

(44)

In particular, without initial capital in the pool, the inﬁnite-time ruin probability amounts to

in accordance with Formula (8.1) in [1].

ψ(0) =

µd(1 + β/α)
λ + µd

,

15

5.

Individual miner analysis

5.1 Deterministic rewards

Comparing the formula describing the miner’s surplus under the PPS pooling scheme (7) with the solo-

mining surplus (3), one can see that they are in fact the same type of process, only distinguished by

the reward amount and frequency. Correspondingly, the formulas obtained by Albrecher and Goﬀard

[2] for the expected value of the surplus and the ruin probability of a honest miner apply in the PPS

case with deterministic rewards. Adapted to the present context, we hence get:

Theorem 5.1. [2] For the miner’s surplus process Ri
P oisson(piµt), the value function ˆV (u, t) can be expressed as

t = u − ci · t + M i

t · w, t ≥ 0, with M i

t ∼

ˆV (u, t) = u + (piµw − ci)t(1 − eρ∗u),

where ρ∗ is the negative solution of the equation

− ciρ + piµ(ewρ − 1) = 1/t.

(45)

(46)

Theorem 5.2. [2] For the same surplus process, the ruin probability with exponential time horizon is
given by ˆψ(u, t) = eρ∗u, where ρ∗ is the negative solution of (46).

5.2 Stochastic rewards

Consider now the same surplus process as in the previous section, but with stochastic rewards. Let

us deﬁne this process by

Ri

t = u − ci · t +

M i
tX

n=1

Wn, t ≥ 0,

(47)

where we assume Wn, n ∈ N to be i.i.d. positive random variables with cumulative distribution function
FW and ﬁnite mean and M i
t ∼ P oisson(piµt) as previously. This type of process is denominated as
the dual problem in the insurance context, see e.g. [5]. We assume that the net proﬁt condition
piµE[Wn] > ci is satisﬁed.
We are again interested in deriving the expected value of the surplus and the ruin probability for the

miner. To simplify the computations, we consider again an exponential time horizon.

Theorem 5.3. For exponential time horizon, the expected value of the miner’s surplus ˆV (u, t) can be
expressed as the solution of the integro-diﬀerential equation

ci ˆV 0(u, t) + (

1
t

+ piµ) ˆV (u, t) − piµ

Z +∞

0

ˆV (u + w, t)dFW (w) − u/t = 0,

(48)

with boundary conditions ˆV (0, t) = 0 and 0 ≤ ˆV (u, t) ≤ u − cit + piµE[W ].

Proof. As in previous sections, by conditioning the occurrence of T to a small time interval (0, h), we

16

can write the value function as

ˆV (u, t) = e−h( 1

t +piµ) ˆV (u − cih, t) +

Z h

0

1
t

e−s( 1

t +piµ)(u − cis)ds

+

Z h

0

piµe−s( 1

t +piµ)

Z +∞

0

ˆV (u − cih + w, t)dFW (w)ds.

(49)

Taking the derivative w.r.t. h and evaluating it at h = 0 gives us (48). The boundary condition follows

from ruin considerations.

For rewards being distributed as a combination of exponential random variables (29), we can reﬁne

Theorem 5.3.

Theorem 5.4. When W has density fW (w) = Pn

j=1 Ajαje−αj w, w > 0, then

ˆV (u, t) = t


ci − piµ

n
X

j=1

Aj
αj


 e−Ru + u + t


piµ


 , u > 0,

− ci

n
X

j=1

Aj
αj

(50)

where R is the unique solution with positive real part of the equation

ciR + piµ

n
X

j=1

Ajαj
R + αj

− (

1
t

+ piµ) = 0.

Proof. Equation (48) translates into

ci ˆV 0(u, t) + (

1
t

+ piµ) ˆV (u, t) − piµ

n
X

j=1

Ajαj

Z +∞

0

ˆV (u + w, t)e−αj wdw − u/t = 0.

(51)

This equation has a solution of the form

ˆV (u, t) = Ce−Ru + d1u + d0

and we plug this ansatz into (51)

ci(−RCe−Ru + d1) + (

− piµ

n
X

j=1

Ajαj

Z +∞

0

Comparing coeﬃcients, we obtain

1
t

+ piµ)(Ce−Ru + d1u + d0)

(Ce−R(u+w) + d1(u + w) + d0)e−αj wdw − u/t = 0.

d1 = 1,

d0 = t


piµ

n
X

j=1

Aj
αj


 .

− ci

Further, a comparison of the coeﬃcients in front of e−Ru simpliﬁes to the following equation:

ciR + piµ

n
X

j=1

Ajαj
R + αj

− (

1
t

+ piµ) = 0.

(52)

(53)

(54)

Similarly to the Lundberg equation derived in [15], we note that there is one positive root R to this
equation. To complete the proof, we consider the boundary condition ˆV (0, t) = 0 and substituting

17

into the ansatz gives C = −d0.

Example 5.5. When W is exponentially distributed, i.e. fW (w) = αe−αw, w > 0, Equation (50)
simpliﬁes to

(cid:18)

ˆV (u, t) = t

ci −

(cid:19)

piµ
α

e−Ru + u + t

(cid:18) piµ
α

(cid:19)

− ci

, u > 0,

(55)

where R is the solution with positive real part of

ciR2 + (αci −

1
t

− piµ)R − α

1
t

= 0.

Theorem 5.6. For exponential time horizon, the miner’s ruin probability can be expressed as

where R is the unique positive root of

ˆψ(u, t) = e−R·u,

piµ +

1
t

− ciR = piµE[e−RWn].

(56)

(57)

Proof. The proof is adapted from Example 2 of Mazza and Rullière [16]. From the latter, we have
that the Laplace transform of the ruin time τ in the dual problem is E[e−sτ ] = e−R(s)·u, with R(s)
being the unique positive root of piµ + s − ciR = piµE[e−RWn]. Since the ruin probability up to an
exponential time horizon can be rewritten as

ˆψ(u, t) = E[P(T > τ ) | τ ],

with T ∼ Exp(1/t), it immediately follows that

ˆψ(u, t) = E[eτ /t]

which completes the proof.

(58)

(59)

Example 5.7. If W is an exponential random variable, i.e. fW (w) = αe−αw, w > 0, then the ruin
probability reduces to

ˆψ(u, t) = e−R∗u,

where

R∗ =

1/t + piµ − ciα +

√

∆

2ci

, ∆ = (ciα − piµ − 1/t)2 + 4ciα/t.

(60)

(61)

Remark 5.8. Results concerning the ruin probability can also be retrieved from the respective results

for a more general renewal model considered in Alcoforado et al. [3].

6. Numerical illustration

6.1 Pool manager

In this section, we will illustrate the pool dynamics in both the deterministic and stochastic setting. In

addition, we will perform a sensitivity analysis on main decision variables from the pool’s perspective.

18

First, let us deﬁne the set of parameters used in the following examples. For each illustration, we
keep all the parameters ﬁxed to these levels except the one that is varying : t = 336, pI = 0.1, q =
0.1, f = 0.02, b = 1000M U, w = (1 − f )bq = 98M U, λ = 6pI = 0.6, µd = 6pI (1/q − 1) = 5.4.

The units we use are hours (h) for the time parameters and monetary units (M U ) for the value

functions. The choice for the time horizon t is equal to 2 weeks because it is linked to the period of

diﬃculty adjustment. The monetary units are related to bitcoin in this way : 1000M U = 6.25BT C.

The reason for this scaling is purely practical to solve the deterministic problem which involves integer

constraints. As of May 28th 2021, 1BT C ≈ $35670.5, so 1M U ≈ $231.85.

Figure 3 compares the function ˆV (u, t) deﬁned in Theorem 3.2 with the Monte Carlo simulation of the
mining process with deterministic and exponential time horizon ﬁxed at the same mean parameter.

The functions are reduced by u to isolate the expected gain realized by the pool manager. We can see

that the exact formula falls nicely within the 95% conﬁdence interval bounds of the MC simulations

within ﬁxed or exponential time horizon. The red line represents the upper limit of the function

to which it converges as u → +∞, which is also the expected value of the gain in absence of ruin

considerations. One can see that for small levels of initial capital potential ruin aﬀects the resulting

proﬁt considerably, and for any given u the pool manager can quantify the undesirable eﬀect of ruin.
Figure 4 exhibits the corresponding ruin probability ˆψ(u, t) for the mining pool. We can note that
ruin is highly non-negligible for low levels of initial capital. Indeed, ˆψ(u, t = 336) < 5% for u > 22594,
which is equivalent to $5238419. We also see how the exponential time horizon slightly underestimates

the ruin probability for low capital levels, which is due to the skewness of the exponential distribution.

Figure 3: ˆV (u, t) − u as a function of u and simulated ˆV (u, t) − u and V (u, t) − u
with their 95% conﬁdence interval bound in dashed with deterministic size jumps
b and w.

In Figure 5, we depict the sensitivity of the expected surplus and the ruin probability to the manage-

19

05000100001500020000250003000001000200030004000uV^−u, V (cid:1) uV (cid:0) u without ruin considerationV^−uV^−u simulated : T ~ Exp(1/t)V(cid:0)u simulated : t=tV(u,t) (cid:0) u (without ruin consideration)V^(cid:1)u(cid:2)t(cid:3)−u (exact)V^(cid:1)u(cid:2)t(cid:3)−Figure 4: ˆψ(u, t) as a function of u and simulated ˆψ(u, t) and ψ(u, t) with their
95% conﬁdence interval bound in dashed with deterministic size jumps b and w.

ment fee f . Not surprisingly, the relationship between f and ˆψ(u, t) is decreasing, as the pool retains
more reward for itself. The parameter f impacts the expected gain of the pool manager.

(a) ˆV (u, t) − u as a function of f .

(b) ˆψ(u, t) as a function of f .

Figure 5: Sensitivity to f in case of deterministic rewards and exponential time
horizon.

In Figure 6, we explore the impact of the relative diﬃculty to ﬁnd a share q on ruin and expected

surplus.

It is worthwhile to note that increasing q is proﬁtable to the pool manager. Indeed, as q increases,

the payout of shares to the pool members is getting less frequent, thus the pool manager retains more

liquidity and controls his probability of ruin at lower levels. The parameter q adjusts the magnitude

of the risk transfer between the miners and their manager.

20

0500010000150002000025000300000.00.20.40.60.81.0uψ^, ψψ^ψ^ simulated : T ~ Exp(1/t)ψsimulated : t=tψ^(cid:1)u(cid:2)t(cid:3)(exact)ψ^(cid:1)u(cid:2)t(cid:3)ψ(cid:1)u(cid:2)t(cid:3)0.000.020.040.060.080.1005000100001500020000fV^-u0.000.020.040.060.080.100.000.020.040.060.080.10fy^(a) ˆV (u, t) − u as a function of q.

(b) ˆψ(u, t) as a function of q.

Figure 6: Sensitivity to q in case of deterministic rewards and exponential time
horizon.

Figures 7, 8, 9, 10 illustrate the same concepts with exponentially distributed rewards. For comparison,

the parameters for the exponential distributions are chosen so that the resulting mean matches the

deterministic jump sizes, i.e. α = 1/w = 1/98, β = 1/b = 1/1000.

Figure 7: ˆV (u, t) − u as a function of u and simulated ˆV (u, t) − u and V (u, t) − u
with their 95% conﬁdence interval bound in dashed. Both jumps are exponentially
distributed.

Figure 11 gives a two-way sensitivity analysis with respect to the pool size pI and the pool fee f . The
level curves indicate the expected proﬁt for the pool manager for diﬀerent pool sizes.

For a bigger pool size pI , in order to maintain the same level of expected proﬁt, the pool manager
can reduce the fee size. One can clearly see an inverse relationship between the pool size and the

21

0.00.10.20.30.40.53800385039003950qV^-u0.00.10.20.30.40.50.000.020.040.060.080.10qy^05000100001500020000250003000001000200030004000uV^−u, V (cid:1) uV (cid:0) u without ruin considerationV^−uV^−u simulated : T ~ Exp(1/t)V(cid:0)u simulated : t=tV(u,t) (cid:0) u (without ruinconsideration)V^(cid:1)u(cid:2)t(cid:3)−u (exact)V^(cid:1)u(cid:2)t(cid:3)−uV(u,t) (cid:0) uFigure 8: ˆψ(u, t) as a function of u and simulated ˆψ(u, t) and ψ(u, t) with their 95%
conﬁdence interval bound in dashed. Both jumps are exponentially distributed.

(a) ˆV (u, t) − u as a function of f .

(b) ˆψ(u, t) as a function of f .

Figure 9: Sensitivity to f in case of exponentially distributed rewards and expo-
nential time horizon.

fee. Thus, a bigger pool can diminish its fees to attract more miners and thus to grow even more.

This implies a threat on the decentralized nature of the consensus protocol. If a mining pool manager

concentrates more than 50% of the total hashpower, then the blockchain is prone to 51%-type attacks

such as double spending in the bitcoin context. How can a smaller mining pool tackle this problem?

One solution consists in oﬀering to take on more risk by decreasing the diﬃculty of ﬁnding a share

which reduces to decreasing the value of q. Figure 12 shows the expected proﬁt of two mining pools,
one for which pI = 0.1 and a smaller one for which pI = 0.02, both having an initial capital level
u = 22500, for both the reward and the time horizon being exponentially distributed. The level curves

22

0500010000150002000025000300000.20.40.60.81.0uψ^, ψψ^ψ^ simulated : T ~ Exp(1)ψsimulated : t=1ψ^(cid:1)u(cid:2)t(cid:3)(exact)ψ^(cid:1)u(cid:2)t(cid:3)ψ(cid:1)u(cid:2)t(cid:3)0.000.050.100.150.20010000200003000040000fV^-u0.000.050.100.150.200.000.050.100.15fy^(a) ˆV (u, t) − u as a function of q.

(b) ˆψ(u, t) as a function of q.

Figure 10: Sensitivity to q in case of exponentially distributed rewards and expo-
nential time horizon.

Figure 11: ˆV (u, t) as a function of pI and f for u = 22500. Both jumps are
exponentially distributed.

indicate that in terms of expected proﬁt a smaller miner may decrease q without increasing the pool

fee f , while maintaining the same level of proﬁtability. That is not the case for the larger mining pool

whose expected proﬁt turns out to more sensitive to q.

23

0.00.20.40.60.81.0350036003700380039004000qV^-u0.00.20.40.60.81.00.000.050.100.15qy^pI0.000.050.100.150.200.250.300.050.100.150.20f(a) ˆV (u, t) − u as a function of q and f for a large
mining pool (pI = 0.1).

(b) ˆV (u, t) − u as a function of q and f for a small
mining pool (pI = 0.02).

Figure 12: Sensitivity to q and f of the expected proﬁt of two mining pools
of diﬀerent size over and exponentially distributed time horizon and reward for
u = 22500.

6.2 Individual miner

Let us now compare the situation of an individual miner before and after joining the pool. We recall

Figure 1 (left panel), which exampliﬁes the pool members’ surplus. Also, the surplus of the member

is described by (9). Finally, we use the results presented in Sections 5.1 and 5.2 to assess the pool

eﬀect for the individual miner’s surplus following the protocol. Consider a miner in a deterministic

rewards environment. We assume a PPS pool and consider a pool member whose hashpower is equal
to 1% of the pool’s total hashpower, i.e. pi = 0.001. For the choice of other parameters, we assume
that the cost of electricity c is given by

c = pi × W × πW ,

where W is the electricity consumption of the network expressed in kWh, and πW is the price of
electricity per kWh. For the sake of our example, we take the estimate of W as 115.541×109
365.25×24 .1 The price
of electricity is taken to be $0.06, then converted to our M U . Therefore, the net proﬁt condition is

satisﬁed both with and without joining the pool. Figures 13 and 14 illustrate the expected surplus

and ruin probability with deterministic rewards and exponential time horizon. One can observe how

eﬀective the risk reduction in case of joining the pool is for the individual miner. Figure 14 particularly

emphasizes the drastic decrease of ruin probability for low capital levels.

Up until a level of initial capital of u = 1255, it is more proﬁtable for the miner to join the pool,

whereas for higher levels of capital the pool fee becomes the main decision driver instead of the ruin

considerations. Converted to USD, this amounts to approximately $290, 971. Recall that this is akin

to the eﬀects of reinsurance, as the miner cedes part of his risk to the pool in exchange of a ﬁxed

1https://cbeci.org/, consulted on May 28th 2021.

24

q 1928  2178  2428  2678  2928  3178  3428  3678  3928  4178  4428  4678  4928 0.00.20.40.60.81.00.0100.0150.0200.025fq 446  496  546  596  646  696  746  796  846  896  946  996 0.00.20.40.60.81.00.0100.0150.0200.025fFigure 13: ˆV (u, t) − u as a function of u for an individual pool miner alone in
black and within the pool in red.

Figure 14: ˆψ(u, t) as a function of u for an individual pool miner alone in black
and within the pool in red.

25

05001000150020000200400600800uV^-uV^-u without poolV^-u with pool05001000150020000.00.20.40.60.81.0uy^y^ without pooly^ with poolcontractual payment (pool fee).

Finally, we investigate the sensitivity of the miner’s expected surplus with respect to the key model

parameters. In Figure 15, the miner can see for his level of initial capital u whether it is better to join

the pool or not, depending on the employed fee f . As before, for higher levels of capital, the miner

is less willing to accept high fees than a miner with less initial capital. We also observe that the two

red lines (miner in the pool with diﬀerent initial capital u) are much closer to each other than the two

black lines (miner outside of the pool with diﬀerent initial capital u). This is due to the risk reduction

of the miner inside the pool, since he is transferring part of the risk to the pool and getting more

frequent rewards.

Figure 15: ˆV (u, t) − u as a function of f for an individual pool miner alone in
black and within the pool in red.

Figure 16 shows the level curves of ˆV (u, t) with a varying diﬃculty for the miner’s problem q and pool
fee f . Note that not joining the pool is equivalent to setting the diﬃculty level equal to the block

ﬁnding problem level and letting the pool fee be f = 0.

With such a two-way analysis, the pool can ﬁx an appropriate fee and the miner can see whether he

is better oﬀ joining the pool for his given level of capital u.

The miner’s decision to join a pay-per-share mining pool does not depend on the size of the mining

pool. Hence a miner will be indiﬀerent whether to direct her hashpower towards a small or large pool.

All that matters is the level of expected proﬁt (decreasing in f ) and the share of risk transferred to

the mining pool (decreasing in q). Decentralization will prevail if the preferences, more speciﬁcally

the risk aversion, of both the pool managers and the individual miners are suﬃciently heterogeneous.

Note that a situation where a mining pool would control most of the computing power is not desirable

for anyone. The blockchain would then be prone to attacks and the associated cryptocurrency would

no longer be of value.

26

0.000.050.100.150.200.250.30200300400500600700800fV^-uV^-u without pool, u = 250V^-u with pool, u = 250V^-u without pool, u = 1000V^-u with pool, u = 1000Figure 16: ˆV (u, t) as a function of q and f for an individual pool miner alone in
black and within the pool in red.

7. Conclusion

In this paper, we developed a framework for a bitcoin mining pool analysis from a risk and proﬁtability

perspective. Given a pay-per-share pooling scheme, we investigated the proﬁtability of a pool under

ruin probability considerations, which allows us to derive original results for the pool manager’s ex-

pected proﬁt. When describing the pool income process as a stochastic double-sided jump process, one

can adapt techniques developed in the actuarial literature for applications in the blockchain universe.

In addition, we also looked at the problem from the individual miner’s side, to identify conditions

under which it is proﬁtable for her to enter the pool or not.

We ﬁnd that ignoring ruin considerations highly overestimates the expected gain for a pool for small

values of initial capital and quantify the required capital level needed for which the ruin aspect be-

comes negligible. Moreover, we deﬁne a trade-oﬀ between the main pool deﬁning parameters to set

up conditions for optimizing the pool proﬁt for diﬀerent levels of capital. For an individual miner,

pooling has similar eﬀects as a reinsurance treaty for an insurer. We provide a sensitivity analysis

that can be helpful for the miner to select the most appropriate pool given his initial parameters.

For a randomized time horizon, it was possible to obtain explicit formulas for all quantities of interest.

The ﬂexibility of our model enabled to consider deterministic as well as stochastic reward sizes. The

established formulas for combinations of exponentials are in fact quite ﬂexible, as any other distri-

bution on the positive halﬂine can be approximated arbitrary well with such distributions (cf. [7]).

Naturally, some restrictive assumptions were needed to enable the explicit mathematical treatment in

27

q0.20.40.60.81.00.000.050.100.150.20f634V^ without poolV^ with poolthis paper, in particular the assumption of independent and identically distributed jump sizes. It will

be interesting in future research to look into relaxing these assumptions.

The study of the formation of mining pools naturally raises the question of whether they pose a threat

to the decentralized nature of blockchain-based applications. We ﬁnd that the size of the mining pool

does not interfere in a miner’s decision making process. A miner chooses a mining pool according to

the share of risk she wishes to cede and the proﬁt she wishes to make. The preferences of miners and

pool managers have been analysed using game theory in Cong et al. [6] and Li et al. [14]. The results

of the present paper may serve as concrete risk management tools for miners and pool managers that

could also be integrated as value or cost functions within such a game-theoretic approach.

Acknowledgements

Hansjörg Albrecher acknowledges ﬁnancial support from the Swiss National Science Foundation Project

200021_191984.

References

[1] Hansjörg Albrecher, Hans U Gerber, and Hailiang Yang. A direct approach to the discounted

penalty function. North American Actuarial Journal, 14(4):420–434, 2010.

[2] Hansjörg Albrecher and Pierre-Olivier Goﬀard. On the proﬁtability of selﬁsh blockchain mining

under consideration of ruin. Operations Research, 2021. in press.

[3] Renata G. Alcoforado, Agnieszka I. Bergel, Rui M. R. Cardoso, Alfredo D. Egídio dos Reis, and

Eugenio V. Rodríguez-Martínez. Ruin and dividend measures in the renewal dual risk model.

Methodology and Computing in Applied Probability, jul 2021.

[4] Søren Asmussen and Hansjörg Albrecher. Ruin probabilities. World Scientiﬁc, Singapore, 2010.

[5] Benjamin Avanzi, Hans U. Gerber, and Elias S.W. Shiu. Optimal dividends in the dual model.

Insurance: Mathematics and Economics, 41(1):111–123, jul 2007.

[6] Lin William Cong, Zhiguo He, and Jiasun Li. Decentralized Mining in Centralized Pools. The

Review of Financial Studies, 34(3):1191–1235, 04 2020.

[7] Daniel Dufresne. Fitting combinations of exponentials to probability distributions. Applied

Stochastic Models in Business and Industry, 23(1):23–48, 2007.

[8] David Easley, Maureen O’Hara, and Soumya Basu. From mining to markets: The evolution of

bitcoin transaction fees. Journal of Financial Economics, 134(1):91–109, 2019.

[9] Pierre-O Goﬀard. Fraud risk assessment within blockchain transactions. Advances in Applied

Probability, 51(2):443–467, 2019.

[10] Abdul J Jerri. Linear diﬀerence equations with discrete transform methods, volume 363. Springer

Science & Business Media, 2013.

28

[11] Shoji Kasahara, , and Jun Kawahara. Eﬀect of bitcoin fee on transaction-conﬁrmation process.

Journal of Industrial & Management Optimization, 15(1):365–386, 2019.

[12] J.F.C. Kingman. Poisson Processes. Oxford Studies in Probability. Clarendon Press, 1992.

[13] Chantal Labbé and Kristina P Sendova. The expected discounted penalty function under a risk

model with stochastic income. Applied Mathematics and Computation, 215(5):1852–1867, 2009.

[14] Zongxi Li, A. Max Reppen, and Ronnie Sircar. A mean ﬁeld games model for cryptocurrency

mining, 2019.

[15] Yi Lu. “a direct approach to the discounted penalty function”, hansjörg albrecher, hans u. gerber,

and hailiang yang, volume 14, no. 4, 2010. North American Actuarial Journal, 14(4):438–441, oct

2010.

[16] Christian Mazza and Didier Rullière. A link between wave governed random motions and ruin

processes. Insurance: Mathematics and Economics, 35(2):205–222, oct 2004.

[17] Meni Rosenfeld. Analysis of bitcoin pooled mining reward systems. CoRR, abs/1112.4980, 2011.

[18] Okke Schrijvers, Joseph Bonneau, Dan Boneh, and Tim Roughgarden. Incentive compatibility

of bitcoin mining pool reward functions. In Financial Cryptography and Data Security, pages

477–498. Springer Berlin Heidelberg, 2017.

[19] slush pool. Reward system speciﬁcations. 2021.

[20] Z. Zhang, H. Yang, and S. Li. The perturbed compound poisson risk model with two-sided jumps.

Journal of Computational and Applied Mathematics, 233:1773–1784, 2010.

[21] Saide Zhu, , Wei Li, Hong Li, Chunqiang Hu, Zhipeng Cai, and and. A survey: Reward distribu-

tion mechanisms and withholding attacks in bitcoin pool mining. Mathematical Foundations of

Computing, 1(4):393–414, 2018.

A. Abel-Gontcharov polynomials

Let U = {ui , i ≥ 1} be a sequence of real non-decreasing numbers. The (unique) family {Gn(x|U ) , n ≥
0} of Abel-Gontcharov polynomials of degree n in x attached to U is deﬁned as follows. Starting with
G0(x|U ) = 1, the polynomials Gn(x|U ) satisfy the diﬀerential equations

G(1)

n (x|U ) = n Gn−1(x|EU ),

where EU is the shifted family {ui+1 , i ≥ 1}, and with boundary conditions

So, each Gn, n ≥ 1, has the integral representation

Gn(u1|U ) = 0, n ≥ 1.

Gn(x|U ) = n!

Z x

(cid:20)Z y1

u1

u2

dy2 . . .

Z yn−1

un

(cid:21)

dyn

dy1.

(62)

(63)

(64)

29

The polynomials Gn, n ≥ 1, can be interpreted in terms of the joint distribution of the order statistics
(U1:n, . . . , Un:n) of a sample of n independent uniform random variables on (0, 1). Indeed, for 0 ≤ x ≤
u1 ≤ . . . ≤ un ≤ 1, we have that

P [U1:n ≤ u1, . . . , Un:n ≤ un and U1:n ≥ x] = (−1)n Gn(x|u1, . . . , un).

This last identity is used inside the proof of Theorem 3.1 together with the following property Note

that

Gn(x|a + bU ) = bnGn ((x − a)/b |U ) , n ≥ 1,

Lastly, the numerical evaluation of (15) can rely on the recursive relations

Gn(x|U ) = xn −

!

un−k
k+1 Gk(x|U ), n ≥ 1.

n−1
X

k=0

n
k

Formula (66) follows from an Abelian expansion of xn based on (62), and (63).

(65)

(66)

B. Proof of Theorem 3.1

The event {τ ∈ (t, t + dt)} can be viewed conditioned over the values of the process (Nt)t≥0. In other
terms,

{τ ∈ (t, t + dt)} =

+∞
[

{τ ∈ (t, t + dt)} ∩ {Nt = n}.

n=0

We distinguish according to the value of Nt. For Nt = 0, Equation (14) can be rewritten as

τ = inf{t ≥ 0; M d

t > u/w},

(67)

(68)

which occurs when the d u
follows that

w eth jump of M d

t occurs at t, where dxe denotes the ceiling function.

It

{τ ∈ (t, t + dt)} ∩ {Nt = 0} = {Sd
w e ∈ (t, t + dt)} ∩ {Nt = 0}
d u

and

fτ |Nt=0(t) = fSd
d u

w e

(t), t ≥ 0.

(69)

(70)

In case Nt ≥ 1, one needs to constrain {M d
t , t ≥ 0} so it does not reach Nu,sw/(b−w)+u/(b−w) for any
time s < t but does so at t. Let (vn)n≥0 is a sequence of integers deﬁned as vn = dn(b − w)/w + u/we,
n ≥ 0. We have

{τ ∈ (t, t + dt)} ∩ {Nt ≥ 1} =

+∞
[

n
\

{Tk ≤ Sd

vk−1

} ∩ {Sd

vn ∈ (t, t + dt)} ∩ {Nt = n},

(71)

n=1

k=1

as M d

t > Nt
|{z}=n

(b − w)/w + u/w at the time of the fatal jump (and before t, Nt reaches each step before

30

 
the payout process surpasses it). Now

P [{τ ∈ (t, t + dt)} ∩ {Nt ≥ 1}] =

+∞
X

P

" n
\

{Tk ≤ Sd

vk−1

} ∩ {Sd

vn ∈ (t, t + dt)} | Nt = n

P [Nt = n] .

#

n=1

k=1

By the order statistic property, we get

" n
\

P

{Tk ≤ Sd

vk−1

} ∩ {Sd

vn ∈ (t, t + dt)} | Nt = n

#

#

k=1

" n
\

= P

= P

{Uk:n ≤ Ft

k=1

" n
\

{Uk:n ≤ Ft

(cid:17)

(cid:17)

(cid:16)

(cid:16)

Sd

vk−1

Sd

vk−1

} ∩ {Sd

vn ∈ (t, t + dt)}

#
vn ∈ (t, t + dt)

} | Sd

P h

Sd
vn ∈ (t, t + dt)

i

(72)

(73)

= E h

k=1
(−1)nGn

h
0 | Ft

(cid:16)

Sd
v0

(cid:17)

, . . . , Ft

(cid:16)

Sd

vn−1

(cid:17)i

| Sd

vn ∈ (t, t + dt)

i P h

i
Sd
vn ∈ (t, t + dt)

,

where (U1:n, . . . , Un:n) denote the order statistics of n i.i.d. unit uniform r.v. and Gn(. | .) denote the
Abel-Gontcharov polynomials, see Appendix A for a short presentation. Now take Ft(s) = s/t, s ≤ t.
In virtue of the property (65), we have

h

Gn

0 | Ft

(cid:17)

(cid:16)

Sd
v0

, . . . , Ft

(cid:16)

Sd

vn−1

(cid:17)i

h

= Gn
1
tn Gn

=

0 | Sd

v0/t, . . . , Sd

h
0 | Sd

v0, . . . , Sd

vn−1

vn−1/t
i

i

.

(74)

Inserting that last expression into (73) yields the announced result (15).

31

