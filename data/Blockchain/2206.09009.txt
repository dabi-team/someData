ACCEPTED AT IEEE NETWORK MAGAZINE

1

Intelligent Blockchain-based Edge Computing
via Deep Reinforcement Learning:
Solutions and Challenges

Dinh C. Nguyen, Van-Dinh Nguyen, Ming Ding, Symeon Chatzinotas, Pubudu N. Pathirana,
Aruna Seneviratne, Octavia Dobre, Fellow, IEEE, and Albert Y. Zomaya, Fellow, IEEE

2
2
0
2

n
u
J

7
1

]

R
C
.
s
c
[

1
v
9
0
0
9
0
.
6
0
2
2
:
v
i
X
r
a

Abstract—The convergence of mobile edge computing (MEC)
and blockchain is transforming the current computing services in
wireless Internet-of-Things networks, by enabling task ofﬂoading
with security enhancement based on blockchain mining. Yet
the existing approaches for these enabling technologies are
isolated, providing only tailored solutions for speciﬁc services
and scenarios. To ﬁll this gap, we propose a novel cooperative
task ofﬂoading and blockchain mining (TOBM) scheme for a
blockchain-based MEC system, where each edge device not only
handles computation tasks but also deals with block mining
for improving system utility. To address the latency issues
caused by the blockchain operation in MEC, we develop a new
Proof-of-Reputation consensus mechanism based on a lightweight
block veriﬁcation strategy. To accommodate the highly dynamic
environment and high-dimensional system state space, we apply a
novel distributed deep reinforcement learning-based approach by
using a multi-agent deep deterministic policy gradient algorithm.
Experimental results demonstrate the superior performance of
the proposed TOBM scheme in terms of enhanced system reward,
improved ofﬂoading utility with lower blockchain mining latency,
and better system utility, compared to the existing cooperative
and non-cooperative schemes. The paper concludes with key
technical challenges and possible directions for future blockchain-
based MEC research.

Index Terms—Mobile edge computing, blockchain, deep rein-

forcement learning.

I. INTRODUCTION

Recent advances in wireless Internet-of-Things (IoT) have
promoted the proliferation of mission-critical applications,
e.g., augmented reality and autonomous driving, which rely
heavily on edge devices (EDs) to collect data from IoT sensors
to serve end users. To meet the ever-growing computation
demands of EDs, mobile edge computing (MEC) has been
proposed as a promising technique to improve the computation
experience of EDs, by ofﬂoading computationally-intensive
IoT tasks to a nearby MEC server located at a base station

Dinh C. Nguyen is with the School of Electrical and Computer Engineering,

Purdue University, USA.

Van-Dinh Nguyen and Symeon Chatzinotas are with the Interdisciplinary
Centre for Security, Reliability and Trust (SnT), University of Luxembourg.

Ming Ding is with Data61, CSIRO, Australia.
Pubudu N. Pathirana is with the School of Engineering, Deakin University,

Australia.

Aruna Seneviratne is with School of Electrical Engineering and Telecom-

munications, UNSW, Australia.

Octavia Dobre is with the Faculty of Engineering and Applied Science,

Memorial University, Canada.

Albert Y. Zomaya is with the School of Computer Science, The University

of Sydney, Australia.

Fig. 1: The proposed cooperative task ofﬂoading and block
mining architecture in the B-MEC system.

(BS) [1]. Multiple EDs can share computation and commu-
nication resources of the BS to handle data tasks without
device’s battery depletion. Task ofﬂoading with MEC thus
becomes a viable solution to satisfy various EDs’ computation
demands, thus enhancing the quality-of-experience (QoE) of
end users. Furthermore,
to provide security in MEC sys-
tems, blockchain [2] has emerged as a strong candidate due
to its decentralization, immutability, and traceability, which
forms blockchain-based MEC (B-MEC) paradigms [3]. Also,
blockchain can build trusted B-MEC schemes by employing
community veriﬁcation among network entities (e.g., EDs) via
mining mechanisms such as Delegated Proof of Stake (DPoS)
[4] without requiring a central authority.

In this context, how to ensure high performance, e.g., system
utility, for the B-MEC system is a critical challenge. The task
ofﬂoading process between EDs and the MEC server consumes
much energy and latency, while the operation of blockchain
results in delays in the ofﬂoading due to mining task execution,
which would degrade the overall system utility. Hence, it is
paramount to simultaneously consider both task ofﬂoading and
blockchain mining via a joint design and optimization solution,
aiming to enhance the system utility of the B-MEC system.

Edge Devices (EDs)Transactions Block k+1Block kPrevious Hash Previous Hash ............Transactions Block k+1Block kPrevious Hash ......Transactions Block k+1Block kPrevious Hash ......MEC ServerIoT SensorsBase station (BS) BlockchainData offloadingNode consensusBlockchainData offloadingNode consensusIoT sensor usersBlock miningIoT sensor usersBlock miningBlockchainData offloadingNode consensusIoT sensor usersBlock miningData collectionBlockchainData offloadingNode consensusIoT sensor usersBlock miningData collectionPrevious Hash Transactions  
 
 
 
 
 
ACCEPTED AT IEEE NETWORK MAGAZINE

2

A. Existing Solutions for Intelligent Performance Optimization
in B-MEC

To achieve intelligent performance optimization in B-
MEC systems, different solutions have been proposed in the
open literature. The authors in [3] considered a blockchain-
empowered computation ofﬂoading scheme where smart de-
vices can ofﬂoad their computing tasks to the MEC server
under the control of blockchain mining for data integrity.
Another work in [5] suggested an online computation of-
ﬂoading approach for both data processing and mining tasks
in blockchain-empowered MEC with a deep reinforcement
learning (DRL) algorithm [6], [7]. An intelligent ofﬂoading
framework with actor-critic DRL was also proposed in [8],
while the study in [9] focused on joint optimization of com-
putation ofﬂoading and resource allocation using a double-
dueling deep Q-network (DQN) for blockchain-enabled MEC
systems. [10] developed a computation ofﬂoading framework
for blockchain-based IoT networks with a multi-agent DRL
algorithm [11].

Despite these research efforts, there are still several urgent

issues to be addressed:

• Non-cooperative Ofﬂoading: Most of the existing B-MEC
schemes use traditional single-agent DRL algorithms [3],
[5], [8] which exhibit critical design challenges caused
by diversiﬁed learning environments. Indeed, each agent
only observes its local information in the training without
updating the policies of other agents, which makes the
learning environment nonstationary [12]. Moreover, non-
cooperative multi-agent DRL solutions [9] are not able
to learn the mutual ofﬂoading policy, which limits the
resource utilization for task ofﬂoading.

• High Blockchain Latency: The integration of blockchain
in MEC potentially results in unnecessary network la-
tency due to block mining [8], [9] (i.e., block veriﬁcation
and consensus) which can degrade the overall perfor-
mance of the B-MEC system.

• Lack of Joint Ofﬂoading and Mining Design: In most
current B-MEC schemes [8]–[10], the design and opti-
mization of task ofﬂoading and blockchain mining are
done separately, leading to a suboptimal performance. To
improve the overall performance of the B-MEC system,
a joint design of task ofﬂoading and blockchain mining
is highly needed.

B. Our Key Contributions

Motivated by the aforementioned limitations, we propose a
novel cooperative DRL solution for joint task ofﬂoading and
blockchain mining (TOBM), aiming to maximize the overall
B-MEC system utility as a sum of the ofﬂoading utility and
the mining utility. Our main contributions are highlighted as
follows:

• We propose a novel cooperative TOBM scheme for B-
MEC to enable a joint design of task ofﬂoading and
blockchain mining in Section II. To reduce the blockchain
network latency, we develop a new Proof-of-Reputation
(PoR) mining mechanism via a lightweight block veriﬁ-
cation solution.

• We propose a novel cooperative DRL solution in Section
III using a multi-agent deep deterministic policy gradient
(MA-DDPG) approach [13] to optimize the system utility.
• We implement simulations to verify the effectiveness of
our proposal in Section IV. We highlight the technical
challenges in B-MEC research and discuss several direc-
tions for future works in Section V.

II. BLOCKCHAIN-EMPOWERED MEC SYSTEM

A. Overview of Network Architecture

We consider a cooperative TOBM architecture in a B-
MEC system, as illustrated in Fig. 1. An MEC server co-
located at a BS provides computation services for EDs. We
assume that each ED has an IoT data task to be executed
locally or ofﬂoaded to the MEC server. Furthermore, each ED
participates in the block mining by using a PoR consensus
mechanism. The key network components of the B-MEC
system are described as follows.

• IoT Sensors: IoT sensors such as cameras, smart meters,
and wearables are responsible for sensing physical envi-
ronments and generating data which need to be processed
to serve end users. IoT sensors also act as lightweight
blockchain nodes to transmit data to EDs.

• Edge Devices: Each ED such as a laptop or a powerful
smartphone manages a group of IoT sensors under its
coverage. Based on the QoE requirements, EDs can use
their computational capability to process data tasks lo-
cally or ofﬂoad to a nearby MEC server via wireless links.
EDs also work as miners to perform block consensus
where IoT sensors’ users vote to select representative EDs
for mining.

• MEC Server: In our considered B-MEC system, there is
a single MEC sever to handle computationally extensive
data tasks ofﬂoaded from EDs. By analyzing the task pro-
ﬁle such as task sizes, channel conditions, and available
resources, EDs can make ofﬂoading decisions so that the
MEC server allocates its resources to execute data tasks
under QoE requirements.

• Blockchain: A blockchain network is deployed over the
MEC system where each ED acts as a blockchain miner
[9]. In this paper, we pay attention to a PoR mining
design to solve blockchain latency issues. The proposed
PoR scheme allows EDs to join the block mining with
mining utility enhancement which helps improve the
overall performance of the B-MEC system.

B. Task Ofﬂoading Model

We consider a B-MEC system with the set of EDs and
the available sub-channels of the BS denoted by N and K,
respectively. It is assumed that each ED n ∈ N has an IoT
data task including input data and required CPU workload
to be executed locally or ofﬂoaded to the BS via one of
the sub-channels k ∈ K. Here,
the ofﬂoading policy is
scheduled by a binary variable, which equals 1 (ofﬂoading
to the MEC server) or 0 (local execution). Each ED n makes
ofﬂoading decisions based on three main factors: task data
size, channel condition, and transmit power level. Moreover,

ACCEPTED AT IEEE NETWORK MAGAZINE

3

predeﬁned mining utility function. Based on the calculated
reputation score, each IoT user votes for ED candidates
based on their reputation ranking. The top EDs with highest
reputation scores are selected to become miners to perform
consensus. During its time slot of the consensus process,
each miner acts as a block manager which is responsible
for performing block generation, veriﬁcation, and aggregating
blocks after being veriﬁed.

2) Lightweight Block Veriﬁcation: The block manager ﬁrst
produces an unveriﬁed block that contains transactions col-
lected by EDs in a given time. Then, the manager broadcasts
this block to all other miners within the miner network for
veriﬁcation. Different from the traditional DPoS scheme which
relies on a repeated veriﬁcation process among miners, here we
implement a lightweight veriﬁcation solution. That is, a miner
only veriﬁes once with another node during the consensus
process, which signiﬁcantly reduces the veriﬁcation latency.
Speciﬁcally, the block manager ﬁrst divides the block into a
set of equal transaction parts that are assigned to each miner
within the miner group along with a unique random number.
Next, the miner chooses to associate with one of the miners
within its group to implement the veriﬁcation for its assigned
transaction part by allocating its CPU resource. If 51% of
miners respond with positive veriﬁcation, and the sum of
random numbers calculated by all miners is equal to a pre-
deﬁned number, the block manager accepts the veriﬁed block
and adds it to blockchain. In summary, the mining procedure
includes four stages: (1) transmitting unveriﬁed block from
the block manager to the EMs, (2) verifying the local block at
each EM, (3) sharing the veriﬁcation result among two EMs,
and (4) transmitting the veriﬁcation result back to the manager.

To this end, we build a mining utility function to character-
ize the mining efﬁciency of the proposed scheme. Motivated
by [14], we characterize the mining utility J mine
of each
ED n via an exponential function where the mining utility
is inversely proportional to the mining latency. Accordingly,
an ED that exhibits a lower mining latency has a better mining
utility with respect to a CPU resource allocation policy.

n

III. PROPOSED COOPERATIVE DRL SOLUTION FOR
SYSTEM UTILITY OPTIMIZATION

Fig. 2: The proposed PoR consensus in our B-MEC system.

each ED needs to allocate portion of its computation resource
to execute the task locally. Accordingly, we deﬁne four policies
including
to schedule the ofﬂoading process of each ED,
ofﬂoading decision, channel allocation, transmit power, and
computation resource allocation.

We here formulate an ofﬂoading utility function from the
QoE perspective, which is characterized by the task compu-
tation time (including local time and ofﬂoading time) and
energy consumption (including local energy and ofﬂoading
energy). We deﬁne a QoE-aware ofﬂoading utility function
J of f
to provide a trade-off between the time and energy
n
consumption of the task ofﬂoading compared with the local
execution at each ED. The ofﬂoading utility function reﬂects
the ofﬂoading improvement in QoE over the local execution.
If the ofﬂoading computation cost is lower than the local
execution cost, the user utility can be positive, implying the
user’s QoE improvement. However, if ofﬂoading too many
tasks, EDs may suffer from higher latency due to the trafﬁc
congestion, which reduces the user’s QoE. As a result, the user
ofﬂoading utility can be negative.

C. Blockchain Mining Protocol

A. System Utility Formulation

In the B-MEC system, a crucial component is blockchain
consensus that aims to mine the blocks of transactions (i.e.,
IoT data records) and add them to the blockchain. In tradi-
tional consensus mechanisms, e.g., DPoS [4], [9], each miner
node must implement a repeated veriﬁcation process across
the miner network, which results in unnecessary blockchain
latency. Therefore, we here propose a new PoR consensus to
solve mining latency issues, including two main parts: miner
node formulation and block veriﬁcation, as illustrated in Fig. 2.
1) Miner Node Formulation: In our B-MEC system, IoT
sensors’ users participate in the delegate selection process to
vote the mining candidates among EDs. In this regard, each
IoT user votes for its preferred ED with the most reputation
based on its mining latency. Speciﬁcally, an ED that exhibits
a lower mining latency will have a better reputation via a

n

n

Here, we formulate the system utility for the proposed
TOBM scheme by taking both ofﬂoading utility and mining
utility into account. As explained previously, the ofﬂoading
utility J of f
reﬂects the efﬁciency of task ofﬂoading over local
execution from the QoE perspective. Meanwhile, the mining
utility J mine
reﬂects the efﬁciency of mining blocks in the
B-MEC network via the mining latency metric. Therefore,
our key objective is to maximize the total system utility,
i.e., J, as the sum of the ofﬂoading utility J of f
and the
mining utility J mine
of all EDs n ∈ N , with respect to
the ofﬂoading policies including ofﬂoading decision, channel
allocation, transmit power, computation resource allocation,
and the mining policy with CPU resource allocation.

n

n

To apply DRL to the formulated TOBM problem, we
need to convert the objective function from a system utility

Previous HashTransactionsNonceBlock DTimestampBlock headerPrevious HashTransactionsNonceBlock ATimestampBlock headerPrevious HashTransactionsNonceBlock BTimestampBlock headerPrevious HashTransactionsNonceBlock CTimestampBlock headerEM 2Edge Miner (EM) 1 EM 3EM 4EM 5EM m1Miner node selectionVotingVotingVotingVotingVoting2Block verificationAdding block to the chainIoT Sensor UsersTransaction exchangeTransaction exchangeMiningMiningACCEPTED AT IEEE NETWORK MAGAZINE

4

(a) The proposed MA-DDPG architecture.

(b) The MA-DDPG training procedure.

Fig. 3: The design of learning framework for the TOBM system.

maximization problem to a reward maximization problem. To
do this, we formulate the proposed problem using a multi-
agent version of the Markov decision process, also known as
a Markov game. This is represented by a tuple of agent set
N , state set S, action set A, and observation set O of all
agents [11]. In fact, at each time slot, an MD does not always
have access to all states of the environment, but only observes
certain states, which is called observations. While states are
complete and detailed information that are relevant to the
current task (e.g., which speciﬁc wireless channel is occupied
by a certain MD for ofﬂoading), observations are general
information received by an MD (e.g., how many wireless
channels are occupied).

Each ED n is considered as an intelligent agent to learn
its optimal policy by observing the local environment formed
by the cooperation of EDs and the MEC server, as shown in
Fig. 3(a). We assume that the considered collaborative task
ofﬂoading and block mining scheme operates on discrete-time
horizon with each time slot t equal and non-overlapping, and
the communication parameters remain unchanged during each
time slot. Now, we deﬁne each item in the tuple at each time
slot t as follows:

• State: The environment state S(t) at

time slot t in
the proposed TOBM scheme includes ﬁve components:
task state, channel state, power state, resource state, and
transaction state. Here, the task state is deﬁned as the
matrix of input data and required CPU workload of all
EDs. The channel state is deﬁned via a matrix of channel
condition variables of all BSs at EDs, where each variable
equals 1 (occupied channel) or 0 (available channel). The
power state consists of transmit power levels of EDs in
each sub-channel. Moreover, the resource state contains
the states of available computation resource for data task
execution, and transaction state includes transaction data
size.

• Action: By observing the environment states, each ED

takes an action according to the ofﬂoading decision,
channel selection, transmit power selection, computation
resource allocation, and CPU resource allocation, to com-
plete task execution and block mining at each time slot t.
Therefore, the action space of each ED is the combination
of the above action sets. Accordingly, the action space
A(t) of the cooperative game can be deﬁned as a matrix
of action sets of all agents.

• System Reward Function: The system reward at one time
slot t is the sum of the rewards of all EDs. The objective
of our formulated TOBM problem is to maximize the
overall system utility J as the sum of the ofﬂoading
utility and the mining utility. Therefore, we deﬁne J as
our system reward function.

B. Proposed Cooperative DRL Algorithm

In the literature, most existing schemes have focused on
a conventional single-agent [3], [5], [8] or an independent
multi-agent [11] setting; however,
these solutions are un-
able to obtain the cooperative policies of EDs because of
nonstationary and partially observable environments. Indeed,
when the policies of other agents change due to computa-
tion mode preference, the ED’s observation can be changed
(nonstationary) Moreover, in independent multi-agent learning
schemes, an agent only has the local information and cannot
know the updates from other agents due to non-collaboration.
This makes the agents’ learning algorithm hard to ensure
stability and convergence [12]. Thus, we propose a novel
cooperative multi-agent DRL scheme using MA-DDPG [13]
for our proposed TOBM scheme. The key reason behind the
adaption of DDPG to optimize the system utility is that with
this scheme, the actor can directly map states to actions instead
of outputting the probability distribution across a discrete
action space like DQN, which greatly reduces action sampling
complexity. Moreover, given the stochasticity of the policy,
there exists high variance of the obtained system reward

Task Offloading and Block Mining Environment Agent NActorCriticLoss function𝑄𝑁𝜋Update𝑠𝑁Replay Memory Agent 2𝑎𝑁(𝑶,𝑆,𝐴)…Agent N-1𝑟𝑁UpdateAgent 1 (Edge Device)ActorPolicy gradient𝑄1𝜋Update𝑠1𝑎1(𝑶,𝑆,𝐴)𝑟1UpdateLoss function  (𝑶,𝑆,𝐴,𝑅,𝑆′)Critic𝜵𝜽𝑵𝑳(𝜽𝑵)𝑳(𝜽𝟏)Policy gradient𝜵𝜽𝟏Step 1: Set replay memory and exploration probability, initialize Q network with random weights. Step 2: At each agent ED, select a random action based on probability or current executed policy. Step 3: Execute actions and observe the system reward, i.e., system utility, then collect new state and store samples into memory buffer.Step 4: Sample random mini-batch of transitions (state, action, reward, and next state) from memory.Step 5: Update behaviorcritic by minimizing the loss function and then update actor via sampled policy gradient.Step 6: Update the target network parameters of each agent for next round of policy training.ACCEPTED AT IEEE NETWORK MAGAZINE

5

(a) Average system rewards with different al-
gorithms.

(b) Average ofﬂoading utility with different
numbers of EDs.

(c) Comparison of block veriﬁcation latency.

Fig. 4: Evaluation of system reward, task ofﬂoading, and blockchain performance.

between different training episodes, where DDPG can come
as an efﬁcient solution, by enabling off-policy learning via the
joint use of behavior network and target network.

The MA-DDPG algorithm employs a deep neural network
(DNN) as the non-linear approximator to obtain the optimal
policies for agents. Each agent updates its parameters to obtain
a optimal policy for maximizing its utility. MA-DDPG is
a policy gradient-based off-policy actor-critic method where
each agent comprises the actor to make decisions over time
slots with a behavior network and the critic to evaluate the
behavior of the actor, which helps improve its performance.
Speciﬁcally, given an episode sample from the memory buffer,
the actor at each agent updates the behavior network by
computing its gradient based on a centralized action-value Q-
function. Moreover, the critic updates the behavior Q-function
for the state-action pair of the actor network by minimizing
the loss function with the inputs including both local agent’s
observation and the observations of all other agents. The
cooperation of multi-agents helps improve robustness against
malicious attacks since this allows multiple agents to monitor
the shared policy update via observations [15].

To reduce the computational complexity caused by online
training at EDs and solve the nonstationary issues from
the concurrently learning process of all EDs, we adopt a
centralized learning and decentralized execution solution. In
the centralized training step, the information of state-action
of all EDs is aggregated by the MEC server to train the
DRL model, where each agent can achieve the global view of
the learning environment to obtain the observations of other
agents for building the collaborative ofﬂoading policy. After
training at the MEC server, the learned parameters (i.e. neural
weights of DNNs of the actor and critic) are downloaded to
each ED to execute the model for decision making based on
its own locally observed information. Speciﬁcally, given the
downloaded neural weights, each agent can easily compute the
policy via its DNN with system utility used as the objective
function, and then sample an action. Subsequently, each agent
executes the sampled action, i.e. making decision to ofﬂoad
the data or not, in the deﬁned TOBM environment given its
states to obtain a reward. The proposed algorithm is illustrated
in Fig. 3(b).

IV. PERFORMANCE EVALUATION

In this section, we conduct numerical simulations to eval-
uate the performance of the proposed TOBM scheme in a
B-MEC system, employing the widely used Shanghai Tele-
com dataset1. Here, we consider an MEC network with an
MEC server and a maximum of 500 mobile phones as EDs
distributed over a 1 km × 1 km area in Shanghai city. The
number of channel sub-bands of the BS is set to 30, and
each ED has task CPU workloads of [0.8-1.5] Gcyles and
transmit power range of [0-24] dBm. A DNN structure with
three hidden layers (64, 32 and 32 neurons) [9] is employed
with the Adam optimizer for learning simulation. To prove the
advantages of the proposed cooperative MA-DDPG scheme,
we compare its performance with the state-of-the-art non-
cooperative schemes, including DDPG, actor-critic [8] and
DQN [11].

Evaluation of Training Performance: Fig. 4(a) shows the
learning curves of the average system reward with the increase
of learning episodes for the B-MEC system with 50 EDs. It is
clear that our MA-DDPG scheme is more robust and yields the
best performance in terms of average system reward, compared
to baseline schemes. This is because the proposed scheme
allows EDs to learn mutually the cooperative ofﬂoading policy
which helps reduce the channel congestion and user inter-
ference, and enhance computation resource efﬁciency. Mean-
while, in the DQN and actor-critic schemes, EDs greedily
access the wireless channel spectrum to maximize their own
utility without collaboration, which increases the possibility of
channel collision and thus results in higher ofﬂoading latency.
Also, DDPG scheme still remains a non-stationary learning
issue and its average reward is lower than that of the MA-
DDPG scheme.

Evaluation of Task Ofﬂoading and Blockchain Performance:
Fig. 4(b) indicates the performance of the average ofﬂoading
utility versus different numbers of EDs. As can be seen when
the number of EDs is small, the average ofﬂoading utility
increases with the number of EDs because in this case, the
MEC system can support sufﬁcient spectrum and computing
resources for handling all tasks of EDs. However, when ex-
ceeding a certain threshold (i.e., 60 EDs), the ofﬂoading utility
decreases because the higher the number of ofﬂoaded EDs, the

1http://www.sguangwang.com/dataset/telecom.zip

0500100015002000Training episodes01234567Average System RewardProposed MA-DDPG schemeDDPG schemeActor-critic schemeDQN scheme20406080100Number of EDs123456789Average Offloading UtilityProposed MA-DDPG schemeDDPG schemeActor-critic schemeDQN scheme020406080100Number of Mining Nodes (EDs)0500100015002000Block Verification Latency (ms)Proposed PoR schemeTraditional DPoS schemeACCEPTED AT IEEE NETWORK MAGAZINE

6

(a) Comparison of system utility with non-cooperative schemes.

(b) Comparison of system utility with cooperative schemes.

Fig. 5: Evaluation of overall system utility performance.

higher the competition of resource usage (i.e., channel spec-
trum). This in turn increases the ofﬂoading latency, and thus
degrades the overall ofﬂoading utility. Nevertheless, our MA-
DDPG scheme still achieves the best utility performance due
to its collaborative ofﬂoading policies among EDs compared
to other schemes with selﬁsh learning.

Next, we evaluate our proposed PoR consensus scheme
and compare it with the traditional DPoS scheme [9] via the
veriﬁcation block latency metric. We set up 10 transactions
per block and vary the numbers of mining nodes from 2 to
200. As shown in Fig. 4(c), our proposed PoR scheme requires
signiﬁcantly less time for mining blocks compared to DPoS,
due to the optimized block veriﬁcation procedure. Although
the block veriﬁcation latency increases with increasing the
number of miners, our scheme still achieves much better
performance than DPoS, which veriﬁes the effectiveness of
our lightweight blockchain consensus design.

Evaluation of the Overall System Utility Performance: We
evaluate the performance of our proposed TOBM scheme in
terms of the overall system utility as the sum of ofﬂoading
utility and mining utility. The performances of our cooperative
TOBM scheme with our PoR mining design and other non-
cooperative schemes with PoR and DPoS mining are illustrated
in Fig. 5(a). Unsurprisingly, our cooperative scheme with a
PoR mining design achieves the best overall system utility. The
reasons for this observation are two-fold. First, our ofﬂoading
scheme with a cooperative MA-DDPG algorithm outperforms
other non-cooperative ofﬂoading schemes in terms of a better
ofﬂoading utility, as evidenced in Fig. 4(a). Second, our PoR
design yields a lower mining latency which consequently
improves the mining utility. Moreover, due to better mining
utility, our PoR design contributes to better overall system
utilities in each non-cooperative ofﬂoading scheme, compared
to the use of DPoS design.

We compare the system utility performance of our proposed
TOBM scheme with the cooperative scheme without mining
design [8] and the cooperative scheme with DPoS design
[9]. As shown in Fig. 5(b), our TOBM scheme with PoR

design achieves higher system utility than the cooperative
scheme with DPoS design, thanks to the better mining utility
of our proposed PoR framework. Moreover, compared with
our approach, the cooperative scheme in [8] has the lowest
system utility due to the lack of mining design. This simulation
result also reveals that a joint design of ofﬂoading and mining
is of paramount importance to improving the overall system
performance in B-MEC systems.

We compare the mining utility of our scheme with other
cooperative schemes in Fig. 6(a). Due to a lower mining la-
tency achieved by the proposed consensus design, our scheme
yields a better utility compared with its counterparts. The
traditional approach without mining design has the highest
mining latency, resulting in the lowest utility. Moreover, we
investigate the throughput in Fig. 6(b) which is deﬁned as
the number of successful transactions per second. We set ﬁve
transactions per block and make ofﬂoading requests ranging
from 10 to 200. Compared with DPoS and Proof-of-Work
(PoW) schemes, the fast block veriﬁcation rate of our scheme
signiﬁcantly enhances the throughput, before its performance
decreases when the number of requests is higher than 120
since the system cannot handle excessive requests under this
conﬁguration.

V. RESEARCH CHALLENGES AND FUTURE PERSPECTIVES

A. User Mobility

In realistic B-MEC systems, EDs can move with high speed
in wireless networks (e.g., in on-vehicle applications). This
makes their location highly dynamic which has direct impacts
on ofﬂoading decision making. For example, an ED is likely to
execute locally if it moves out of BS coverage, which makes
the ofﬂoading design ineffective. Therefore, the user mobility
needs to be considered in the ofﬂoading formulation in future
B-MEC systems, where dynamic characteristics such as ve-
locity and channel conditions should be taken into account to
come up with a robust mobility-aware ofﬂoading policy.

102030405060Number of EDs4681012Average System UtilityOur cooperative scheme with PoRDDPG scheme with PoRActor-critic scheme with PoRDQN scheme with PoRDDPG scheme with DPoSActor-critic scheme with DPoSDQN scheme with DPoS102030405060Number of EDs4681012Average System UtilityOur cooperative scheme with PoRCooperative scheme with DPoSCooperative scheme without mining designACCEPTED AT IEEE NETWORK MAGAZINE

7

(a) Comparison of mining utility with cooperative schemes.

(b) Comparison of blockchain throughput with mining schemes.

Fig. 6: Evaluation of blockchain performance.

B. Data Privacy

REFERENCES

In this work,

the DRL training performed at

the MEC
server potentially raises data privacy leakage due to the data
exchange during the training. Federated learning [2] can be
an attractive solution to perform collaborative training, where
only trained parameters are shared with the MEC server while
actual data and user information are stored at local EDs for
privacy enhancement. In the B-MEC context, for example,
each ED can run a DRL function to learn its ofﬂoading and
mining policy based on its own local observation. Then, the
participating EDs can communicate with the MEC server for
DRL model aggregation (e.g., model averaging) to create a
new global DRL model without sharing their private data.

C. Incentive Issues

In practice, how to encourage EDs, which serve as both
ofﬂoading and mining nodes, to join computation and data
mining for the long term is a critical challenge for B-MEC
systems. Although blockchain is able to incentivize EDs via
coin payment based on their mining effort,
is still not
enough to compensate for the energy resources consumed
for computation task ofﬂoading. Thus,
to
jointly consider incentives, ofﬂoading and mining in B-MEC
system optimization. A possible direction is to design a smart
contract-inspired incentive mechanism to accelerate the data
ofﬂoading and block mining. Another interesting area is to
jointly optimize utility with respect to monetary beneﬁts and
resource usage of ofﬂoading and mining.

is important

it

it

VI. CONCLUSIONS

This article proposed the novel concept of TOBM to assist
B-MEC systems. A joint design of ofﬂoading and mining
was considered, where a PoR consensus mechanism was
proposed. Then, a cooperative DRL approach was proposed to
solve the TOBM problem, showing a huge system utility im-
provement over the existing cooperative and non-cooperative
schemes. Finally, we highlighted the key research challenges
and promising directions for future B-MEC research.

[1] Y. Dai, D. Xu, S. Maharjan, Z. Chen, Q. He, and Y. Zhang, “Blockchain
and Deep Reinforcement Learning Empowered Intelligent 5G Beyond,”
IEEE Network, vol. 33, no. 3, pp. 10–17, May 2019.

[2] H. Yao, T. Mai, J. Wang, Z. Ji, C. Jiang, and Y. Qian, “Resource Trading
in Blockchain-based Industrial Internet of Things,” IEEE Transactions
on Industrial Informatics, vol. 15, no. 6, pp. 3602–3609, 2019.

[3] X. Xu, X. Zhang, H. Gao, Y. Xue, L. Qi, and W. Dou, “BeCome:
Blockchain-Enabled Computation Ofﬂoading for IoT in Mobile Edge
Computing,” IEEE Trans. Industr. Infor., vol. 16, no. 6, pp. 4187–4195,
Jun. 2020.

[4] J. Kang, Z. Xiong, D. Niyato, D. Ye, D. I. Kim, and J. Zhao, “Toward
Secure Blockchain-Enabled Internet of Vehicles: Optimizing Consensus
Management Using Reputation and Contract Theory,” IEEE Trans. Veh.
Tech., vol. 68, no. 3, pp. 2906–2920, Mar. 2019.

[5] X. Qiu, L. Liu, W. Chen, Z. Hong, and Z. Zheng, “Online Deep
Reinforcement Learning for Computation Ofﬂoading in Blockchain-
Empowered Mobile Edge Computing,” IEEE Trans. Veh. Tech., vol. 68,
no. 8, pp. 8050–8062, Aug. 2019.

[6] J. Wang, C. Jiang, H. Zhang, Y. Ren, K.-C. Chen, and L. Hanzo, “Thirty
Years of Machine Learning: The Road to Pareto-optimal Wireless
Networks,” IEEE Communications Surveys and Tutorials, vol. 22, no. 3,
pp. 1472–1514, 2020.

[7] L. Xiao, Y. Ding, D. Jiang, J. Huang, D. Wang, J. Li, and H. V. Poor,
“A Reinforcement Learning and Blockchain-based Trust Mechanism for
Edge Networks,” IEEE Transactions on Communications, vol. 68, no. 9,
pp. 5460–5470, 2020.

[8] J. Feng, F. R. Yu, Q. Pei, X. Chu, J. Du, and L. Zhu, “Cooperative Com-
putation Ofﬂoading and Resource Allocation for Blockchain-Enabled
Mobile-Edge Computing: A Deep Reinforcement Learning Approach,”
IEEE Inter. Things J., vol. 7, no. 7, pp. 6214–6228, Jul. 2020.

[9] F. Guo, F. R. Yu, H. Zhang, H. Ji, M. Liu, and V. C. Leung, “Adaptive
Resource Allocation in Future Wireless Networks With Blockchain and
Mobile Edge Computing,” IEEE Trans. Wireless Commun., vol. 19,
no. 3, pp. 1689–1703, Mar. 2020.

[10] Z. Li, M. Xu, J. Nie, J. Kang, W. Chen, and S. Xie, “NOMA-Enabled
Cooperative Computation Ofﬂoading for Blockchain-Empowered Inter-
net of Things: A Learning Approach,” IEEE Inter. Things J., pp. 1–1,
Aug. 2020.

[11] J. Heydari, V. Ganapathy, and M. Shah, “Dynamic Task Ofﬂoading in
Multi-Agent Mobile Edge Computing Networks,” in 2019 IEEE Global
Communications Conference (GLOBECOM), 2019, pp. 1–6.

[12] R. Lowe, Y. Wu, A. Tamar, J. Harb, P. Abbeel, and I. Mordatch, “Multi-
Agent Actor-Critic for Mixed Cooperative-Competitive Environments,”
in Proc. Advances in Neural Infor. Process Sys., 2017, pp. 6379–6390.
[13] D. Kwon, J. Jeon, S. Park, J. Kim, and S. Cho, “Multi-Agent DDPG-
based Deep Learning for Smart Ocean Federated Learning IoT Net-
works,” IEEE Inter. Things J., pp. 1–1, Apr. 2020.

[14] Y. Dai, D. Xu, K. Zhang, S. Maharjan, and Y. Zhang, “Deep Rein-
forcement Learning and Permissioned Blockchain for Content Caching
in Vehicular Edge Computing and Networks,” IEEE Trans. Veh. Tech.,
vol. 69, no. 4, pp. 4312–4324, Apr. 2020.

102030405060Number of EDs0.00.51.01.52.02.53.03.54.0Average Mining UtilityOur cooperative scheme with PoRCooperative scheme with DPoSCooperative scheme without mining design255075100125150175200Number of requests from EDs020406080100120140Throughput (number of transactions per second)Proposed PoR schemeTraditional DPoS schemeStandard PoW schemeACCEPTED AT IEEE NETWORK MAGAZINE

8

[15] W. Xue, W. Qiu, B. An, Z. Rabinovich, S. Obraztsova, and C. K. Yeo,
“Mis-spoke or Mis-lead: Achieving Robustness in Multi-Agent Com-
municative Reinforcement Learning,” Jan. 2022, arXiv: 2108.03803.

Dinh C. Nguyen is a Postdoctoral Associate at the School of Electrical and
Computer Engineering, Purdue University, USA. He obtained the Ph.D. degree
at Deakin University, Australia in 2022. His research focuses on federated
learning, blockchain, and edge computing. He is an Associate Editor of the
IEEE Open Journal of the Communications Society.

Van-Dinh Nguyen received Ph.D. degree in electronic engineering from
Soongsil University, South Korea 2018. He is currently a Research Associate
with the Interdisciplinary Centre for Security, Reliability and Trust (SnT),
University of Luxembourg. His current research activity is focused on the
mathematical modeling of 5G cellular networks and machine learning for
wireless communications. Dr. Nguyen received several best conference paper
awards, IEEE Communications Letters Exemplary Editor 2019 and 2021.

Ming Ding is currently a Senior Research Scientist with the CSIRO Data61,
Sydney, NSW, Australia. His research interests include information technol-
ogy, data privacy and security, machine learning and AI. He has authored
over 100 articles in IEEE journals and conferences. He is an Editor of
the IEEE Transactions on Wireless Communications and the IEEE Wireless
Communications Letters.

Symeon Chatzinotas is Full Professor/Chief Scientist I and Co-Head of
the SIGCOM Research Group at SnT, University of Luxembourg. He was
a co-recipient of the 2014 IEEE Distinguished Contributions to Satellite
Communications Award,
the CROWNCOM 2015 Best Paper Award and
the 2018 EURASIC JWCN Best Paper Award. He has (co-)authored more
than 400 technical papers in refereed international journals, conferences and
scientiﬁc books. He is currently in the editorial board of the IEEE Open
Journal of Vehicular Technology and the International Journal of Satellite
Communications and Networking.

Pubudu N. Pathirana is a full Professor and the Director of Networked
Sensing and Control group at the School of Engineering, Deakin University,
Geelong, Australia. He was a visiting professor at Yale University in 2009.
His current research interests include Bio-Medical assistive device design,
mobile/wireless networks, and rehabilitation robotics.

Aruna Seneviratne is currently a Foundation Professor of telecommunica-
tions with the University of New South Wales, Australia, where he holds
the Mahanakorn Chair of telecommunications. His current research interests
are in physical analytics: technologies that enable applications to interact
intelligently and securely with their environment in real time.

Octavia A Dobre is a Professor and Research Chair at Memorial University,
Canada. Her research interests include technologies for beyond 5G, as well
as optical and underwater communications. She published over 300 referred
papers in these areas. Dr. Dobre serves as the Editor-in-Chief (EiC) of
the IEEE Open Journal of the Communications Society. She was the EiC
of the IEEE Communications Letters, a senior editor and an editor with
prestigious journals, as well as General Chair and Technical Co-Chair of
ﬂagship conferences in her area of expertise. She is Fellow of the IEEE and
the Engineering Institute of Canada.

Albert Y. Zomaya is Peter Nicol Russell Chair Professor of Computer
Science and Director of the Centre for Distributed and High Performance
Computing at Sydney University. He has published more than 600 scientiﬁc
papers and is an author, co-author, or editor of more than 30 books. He is
the Editor-in-Chief of the ACM Computing Surveys and served in the past
as the Editor-in-Chief of the IEEE Transactions on Computers and the IEEE
Transactions on Sustainable Computing. He is a Fellow of the AAAS, the
IEEE, the IET (UK), and was inducted in 2022 into the Australian Academy
of Science.

