2
2
0
2

r
a

M
0
2

]

C
O
.
h
t
a
m

[

1
v
4
4
6
0
1
.
3
0
2
2
:
v
i
X
r
a

Equitable Continuous Organizations
with Self-Assessed Valuations

Howard Heaton
Typal Research
Typal LLC

Sam Green
Semiotic AI

Abstract

Organizations are often unable to align the interests of all stakeholders with the ﬁ-
nancial success of the organization (e.g. due to regulation). However, continuous
organizations (COs) introduce a paradigm shift. COs offer immediate liquidity, are
permission-less and can align incentives. CO shares are issued continuously in the
form of tokens via a smart contract on a blockchain. Token prices are designed to
increase as more tokens are minted. When the share supply is low, near-zero prices
make it advantageous to buy and hold tokens until interest in the CO increases, en-
abling a proﬁtable sale. This attribute of COs, known as investment efﬁciency, is
desirable. Yet, it can yield allocative inefﬁciency via the “holdout problem,” i.e. late-
comers may ﬁnd a CO more valuable than early tokenholders, but be unable to attain
the same token holdings due to inﬂated prices. With the aim of increasing overall eq-
uity, we introduce a voting mechanism into COs. We show this balances allocative
and investment efﬁciency, and may dissuade speculative trading behaviors, thereby
decreasing investment risk.

1 Introduction

When you boil it all down, it’s the investor’s job to
intelligently bear risk for proﬁt. Doing it well is
what separates the best from the rest.

– Howard Marks [7]

Price

a + 1−τ
τ
a

p

q

A new paradigm for raising capital arose in the
realm of decentralized protocols. Yet, how can pro-
tocols (i.e. pre-programmed rules) raise capital in
a reliable and equitable manner? Traditional cap-
ital raising requires a centralized exchange to is-
sue shares and trading professionals to match buy-
ers with sellers. With the advent of programmable
blockchains like Ethereum, new market mecha-
nisms are possible. In particular, Automated Mar-
ket Makers (AMMs) encode buy-sell logic in smart contracts [2]. Multiple AMM designs have been
deployed [1, 15], beginning with Bancor [14]. AMMs enable building Continuous Organizations
(COs), where investors directly buy and sell shares, in the form of tokens, by interacting with smart
contracts that do not rely on matching bid and ask orders [5]. This maintains liquidity irrespective of
trade volume. Thus, AMMs enable new organizations to boostrap liquid markets. But, AMMs are
susceptible to speculative behaviors (e.g. sandwich attacks1 and proﬁt scalping2), which may present
outsized risks that deter long-term investors. We partially address these risks via a new AMM.

Figure 1: Linear bonding curve p(s) = ks and
an allocative curve q(s; a, τ, p), with assess-
ment a and tax rate τ . The curve q asymptoti-
cally approaches a+(1−τ )/τ whereas p → ∞.

Share Supply

1Sandwich attacks occur when an attacker executes transactions before and after a victim transaction for a

guaranteed gain, at the expense of the victim.

2Proﬁt scalpers buy early at low prices with the expectation of selling sometime shortly after at higher prices.

Preprint. March 22, 2022

 
 
 
 
 
 
Price

(s + x, p(s + x))

(s, p(s))

Price

(s, p(s))

(s + x, p(s + x))

Red area is
reward m

Blue area is
payment m

Share Supply

(a) Mint Share Process

Share Supply

(b) Burn Share Process

Figure 2: Canonical Bancor bonding curves. Each bonding curve p(s) deﬁnes price in terms of share
supply s. (a) Providing payment m results in minting x tokens, where x is chosen so the area under
the curve equals m. (b) The reverse process, rewarding m, is used to burn x tokens analogously.

Investor

Speculator

Payments
Rewards

10.7 ×106 GRT 4.2 ×106 GRT
4.8 ×106 GRT
6.0 ×106 GRT

Events within The Graph motivate this work.
The Graph is a web3 protocol that provides
APIs for developers to conveniently query
blockchain data. The Graph deploys many
COs3. To cause select blockchain data to be-
come queryable through The Graph’s APIs,
developers deploy one or more subgraphs.
Each subgraph contains instructions for how
to extract data from a blockchain. Curators
are entities within The Graph and they inﬂuence which subgraphs are indexed. Curators inﬂuence
Indexers by depositing tokens (GRT) and minting shares in COs that are unique to each subgraph [11].
The Graph’s COs are intended to incentivize curators to use exogenous information to determine the
value of particular subgraph deployments. Despite this, the original CO design deployed by The Graph
experienced signiﬁcant short-term speculative activity (e.g. see example behavior in Figure 6).

Table 1: On-chain statistics of The Graph indicate spec-
ulators realized more rewards than payments into The
Graph’s COs. Speculator proﬁt came at the expense of
investors (who realized less rewards than payments).

Speculating versus Investing. The intention of curation in The Graph protocol is to encourage indi-
viduals with long-term investment horizons to provide meaningful signals for other protocol workers
In this work, we call such individuals investors. Our deﬁnition of investment follows
to follow.
Phelps’ description: “Wise investors do not buy a stock just because it is going up or is expected to go
up. Wise investors buy because they foresee an increase in earning or dividends that will make today’s
price look cheap in years to come” [9]. On the other hand, speculators are those seeking short-term
gain via price ﬂuctuations (e.g. exhibited by proﬁt scalping and sandwich attacks).

The Graph launched its decentralized network in December 2020. We analyzed all 11,358 curation
mint/burn transactions from that time until September 2021. During those nine months, we mea-
sured speculator activity, deﬁned here as a curator signalling within two minutes of a subgraph being
published. This deﬁnition comes from assuming if a curator signals within the ﬁrst two minutes of
publication, then the curator could not have performed due diligence on the subgraph4. We measured
so-called investor and speculator curator share purchases and sells, summarized by Table 1. Despite
making roughly 28% of payment volume, speculators obtained over 44% of total realized rewards.

Contribution. We propose a class of CO-like mechanisms to incentivize the “haves” and empower
the “have nots,” called equitable COs (ECOs). Our design appears to deter sandwich attacks and proﬁt
scalping, which better rewards the “haves” for investing. Concretely, we give three novelties.

◮ Propose ECOs, which augment COs by using a voting mechanism (via allocative curves).
◮ Show ECOs can give scenarios that reward investors and make sandwich attacks lose money.
◮ Prove the tax rate parameter for allocative curves balances different types of efﬁciency.

3As of March 17, 2022, there are 274 COs on the decentralized network.
4This assumes the curator does not have access to insider information.

2

Price

p

2 + 1−τ
τ
2
1 + 1−τ
τ
1

q(·; 2, τ, p)

q(·; 1, τ, p)

a

Price

investment
efﬁciency

p

q(·; a, 0.2, p)

q(·; a, 0.4, p)

q(·; a, 0.9, p)

ε-allocative efﬁciency

Share Supply

Share Supply

(a) Changing Assessments Changes Pricing

(b) Changing Tax Rate Changes Efﬁciency

Figure 3: A voting mechanism and tax rate τ enables users to augment bonding curves when buying.
(a) shows a bonding curve p and an allocative curve q(s; a, τ, p) for two different values of a, which
are bounded above by a + (1 − τ )/τ . Scalpers are incentivized to assess a high a (to quickly spike
price) while investors are incentivized to assess a low a (to maximize the gap between token value and
price). (b) shows increasing the tax rate τ pulls allocative curves q closer to the assessment a. Note
the tax rate τ is ﬁxed upon initialization whereas a is updated during each buy transaction.

2 Continuous Organizations + Bonding Curves

This section formalizes bonding curves ideas in COs5. Tokens are minted by buying and burned upon
selling. We ﬁrst deﬁne bonding curves, which relate price to share supply and are denoted by p and q.
Deﬁnition 2.1 (Bonding Curve). A bonding curve p is a strictly increasing and continuous function
p : [0, ∞) → R satisfying p(0) = 0.

Tokens are minted and burned via an integral equation. The payment/reward m, tokens minted/burned
x, and bonding curve p are related by the area under the bonding curve (see areas in Figure 2), i.e.

s+x

m =

p(ζ) dζ.

(1)

Explicit formulas bounding m in terms of x and x in terms of m for burning and minting, respectively,
are used to maximize computation efﬁciency in smart-contract code (e.g. see Appendix A).

s
Z

Efﬁciency Two notions of efﬁciency are relevant to our discussion of COs. Here, investment efﬁ-
ciency is the notion of generating as large a return as possible with a given input, relative to a time
preference. We measure time indirectly via the number of tokens minted. As p increases more quickly
wiht share supply, there is greater investment efﬁciency. On the other hand, allocative efﬁciency oc-
curs when everyone can buy tokens at the commonly held value (e.g. an average of assessments).
These notions of efﬁciency are at odds. Investment efﬁciency “increases” as the slope of the bonding
curve p increases. However, allocative efﬁciency requires the slope of p to go to zero. (In the next
section, we balance these via a tax rate τ , with low taxes giving the former and high taxes the latter.)
Deﬁnition 2.2 (Investment Efﬁciency). For a reference function e : [0, ∞) → R, and a share supply
S > 0, a bonding curve p is e-investment efﬁcient on [0, S] provided

e(s) ≤ p(s) for all s ∈ [0, S].

(2)

Deﬁnition 2.3 (Allocative Efﬁciency). For a tolerance ε > 0 an assessment a ≥ 0, and a share
supply S > 0, a bonding curve p is ε-allocatively efﬁcient on [0, S] provided

p(s) ≤ a + ε,

for all s ∈ [0, S].

(3)

Self-Assessed Taxes The spirit of cut and choose in the cake-cutting division game6 can be applied
to taxes. In the self-assessed tax methodology, the owner of an asset self-assesses its value and pays
taxes based on this assessment. The catch is the owner must be willing to sell the asset at this assessed
price. This idea has been implemented in various forms (e.g. Sun Yat-sen made such a proposal
with the state reserving the right to purchase the property at the self-assessed price [8] and similarly

5For a light introduction to bonding curves, see [12].
6One person cuts a cake into two pieces. The other person selects a piece; the cutter gets the remaining piece.

3

was done in New Zealand [4]). Recently, self-assessed taxes were discussed in the book [10] and
[13], whose ideas are credited to a proposal by Harberger [6]. Self-assessed taxes can enable achieve
allocative efﬁciency [13], i.e. the most efﬁcient use of property. Unlike the examples above, we
focus on a fungible setting, i.e. where individual units of property are essentially interchangeable and
indistinguishable from another (e.g. gold, bundles of wheat, and tokens). In such cases, we us an
aggregate assessment a of assessments a from shareholders.

3 Equitable Continuous Organizations

We aim to improve overall equity in COs by balancing allocative and investment efﬁciency. To do
this, we introduce Equitable Continuous Organizations (ECOs), which are mechanisms for mint-
ing/burning tokens that merge a voting rule and a bonding curve. Voting rules enable individuals
to self-assess token value during minting – the value assessment may differ from the mint price.7
Such rules can Countless voting rules can be used for ECOs (e.g. see Algorithms 1 and 2), and these
will be explored by future work. Here, we narrow focus to desirable features of relations between
bonding curves and self-assessments. We propose relating these via the following deﬁnition.
Deﬁnition 3.1 (Allocative Curve). For a bonding curve p, an assessment a ≥ 0, and a tax rate
τ ∈ [0, 1], a function q(s, a; τ, p) is an allocative curve for p if it possesses the following properties.

1. For any share supply S > 0, as the tax rate τ goes to zero, the curve q uniformly approxi-

mates the bonding curve p on [0, S],8 i.e.

lim
τ →0+

q(s, a; τ, p) = p(s),

for all a, s ≥ 0.

2. As the tax rate increases to 100%, the curve q does not exceed the assessment a, i.e.
q(s, a; τ, p) ≤ a,

for all a, s ≥ 0.

lim
τ →1−

3. The curve q is a bounded bonding curve9, i.e. given a > 0, there is B > 0 such that

q(s, a; τ, p) ≤ B,

for all s ≥ 0.

(4)

(5)

(6)

The above properties ensure efﬁciency. The ﬁrst gives investment efﬁciency, i.e. an allocative curve
q is at least as investment efﬁcient as the bonding curve p as τ → 0+. The second yields allocative
efﬁciency as the tax rate increases. Thus, τ is used to “tax investment efﬁciency,” which may improve
overall equity. We formalize these claims via the lemma below (and discuss the third property after).
Lemma 3.1 (Efﬁciency of Allocative Curves). Given a tolerance ε > 0 and share supply S > 0, if q
is an allocative curve for a bonding curve p, then there are τ−, τ+ ∈ (0, 1) such that

i) for all τ ∈ [τ+, 1), the curve q(s; a, τ, p) is ε-allocative efﬁcient on [0, S];

ii) for all τ ∈ (0, τ−], the curve q(s; a, τ, p) is (p − ε)-investment efﬁcient on [0, S].

In words, each q can approximate allocative efﬁciency to within any tolerance ε, given a sufﬁciently
high tax rate. Conversely, as the tax rate decreases, each q can approximate the original bonding
curve p to arbitrarily well, thereby obtaining comparable investment efﬁciency. Below we provide a
constructive scheme to obtain allocative curves from bonding curves.
Theorem 3.1 (Allocative Curves Exist). For a differentiable bonding curve p , a tax rate τ ∈ (0, 1),
and an assessment a > 0, the function q deﬁned by

q(s; a, τ, p) , (1 − τ + τ · a) · p(s)

1 + τ · p(s)

,

for all s ≥ 0,

(7)

forms an allocative curve for p.

A standard example is for p to be linear (i.e. p(s) = ks for some k > 0). In this case, for small s, q
in (7) behaves similarly to p, and q approaches a + (1 − τ )/τ as s gets large. In the same manner as
bonding curves, we use (1), replacing p(ζ) with q(ζ; a, τ, p). For explicit formulas and notes (e.g. for
Taylor approximations) for the payment/reward m and tokens minted/burned x, see Appendix A.

7Recall Buffet’s famous quote, attributed to Graham, “Price is what you pay; value is what you get” [3].
8Although (4) only shows pointwise convergence, we mean q(·, a; τ, p) → p(·) uniformly as τ → 0+.
9Note this also means q is also continuous, increasing, and q(0, a; τ, p) = 0.

4

Algorithm 1 Mint Function Example for an Equitable Continuous Organization

1: Mint(m, a; a, τ, c, θ, r, p) :
2:

⊳ Input payment m and per token assessment a
⊳ Update assessment via averaging with θ ∈ (0, 1)
α ← (1 − θ)a + θa
a ← max(min(α, (1 + c)a), (1 − c)a) ⊳ Bound relative assessment change by c ∈ (0, 1)
⊳ Mint by solving (1) for x with p = q(·, a; τ, p)
s ← s + x
⊳ Increase reserves r held in CO by m
r ← r + m
⊳ Output tokens to “buyer”
return tokens x

3:

4:

5:

6:

Algorithm 2 Burn Function Example for an Equitable Continuous Organization

1: Burn(x; a, τ, r, p) :
r ← r − |m|
2:
s ← s + x
return reward |m|

3:

4:

⊳ Input tokens x < 0 to sell
⊳ Solve (1) for m < 0 with p = q(·, a; τ, p)
⊳ Burn shares to decrease share supply
⊳ Output monetary reward to “seller”

v

p

Price

supply after mint

Green area
is utility

Proof-of-Vote A voting rule property with po-
tentially signiﬁcant impact is the level of inﬂu-
ence each mint can have on the aggregate assess-
ment a used by the ECO. Optimal design of this
remains an open question, which we highlight as
follows. If the relative weight of an assessment
a in obtaining a is proportional to the volume
of tokens minted, then a few wealthy and early
tokenholders may effectively control the aggre-
gate assessment a. Alternatively, each transac-
tion assessment a could contribute equally to the
aggregate a (regardless of transaction size). In-
formally, we refer to this as the “proof-of-vote”
property since (relatively) ﬁxed frictional costs10
involved for each mint gives a similar ﬂavor to
“proof-of-work” mechanisms.
In other words,
the “have nots” can have equal contribution to deﬁning the bonding curve as the “haves.” This lat-
ter option may limit the ability to make short-term gains while also stabilizing the convergence of
price to an aggregate average assessment (i.e. bound the derivative of q(s, a; τ, p) with respect to a).

Figure 4: For investors with low time preferences,
utility is aptly given by the difference between
their valuation v and price p paid (i.e. area of green
region). To increase this utility, assessment a = 0
is used to “push down price.” Yet, scalpers have a
high time preference and wish to pick large a.

supply before mint

Share Supply

Limited Upsides and Front-Running The third property of allocative curves can help align incen-
tives. To maximize the value obtained from minting, investors may provide assessments a less than
their valuation v. This is shown by Figure 4, where we note the utility for an investor that seeks to be
a long-term tokenholder with low time preference is roughly their valuation v minus the price paid m.
This can mitigate sandwich attacks since it can imply token prices will be lower after a purchase rather
than higher (e.g. see Figure 5). In such a case, a sandwich attack would lose money. Investors can
let speculative curators push the price up over time. Further, since the allocative curve q is bounded
by a function of a, purchaser assessments a may limit potential proﬁts by low-balling token value.
Depending on the minting mechanism, this may incline them to report more truthfully.

4 Conclusions

We propose use of ECOs in place of COs to increase allocative efﬁciency and overall equity. The new
allocative curves enable desirable properties for ECOs, which may be promising both with respect
to efﬁciency and to disincentivizing some trading behaviors (e.g. sandwich attacks) while rewarding
long-term investors. Future research will provide explicit utility functions modeling speculators and
investors to formally establish early-stage incentives, use game-theoretic analysis (e.g. via Nash equi-
libria) to suggest various voting rules11, and generate realistic simulations for deeper insights.

10If gas prices are volatile, the inﬂuence of assessments could be proportional to gas prices paid.
11We suspect there are more apt mint/burn schemes than those in Algorithms 1 and 2.

5

Price

pre-mint price
post-mint price

q(·; a, τ, p)

q(·; 2a/3, τ, p)

s

s + x

Share Supply

Figure 5: The voting rule can make prices lower after minting. If x tokens are purchased and the
assessment provided by the new tokenholder was chosen in a manner that reduced the aggreggate
assessment in the ECO from a to 2a/3, then this plot shows the new price after minting can be
reduced. In such situations, a front-runner could lose money by trying to mint and burn immediately
before and after the x tokens were minted.

Value of Shares Held

Investor enters after
due diligence

Investor purchase increases value of shares

Speculator enters at t = 0

Investor now has (unrealized) loss

Speculator sells shares with proﬁt

Time t: Blocks since CO Launched

Figure 6: The standard bonding curve design encourages speculation. In this ﬁgure, we depict proﬁt
scalping. Imagine a bot that monitors Ethereum for new bonding curves. If the bot is the ﬁrst to
enter a new bonding curve, it is guaranteed a proﬁt if it sells immediately after one signiﬁcant investor
follows it. This leaves the investor with an unrealized loss.

Acknowledgments

The inspiration and many references used to develop this work came from Brandon Ramirez at Edge
& Node, to whom we owe many thanks. We thank Samy Wu Fung at Colorado School of Mines
and Daniel McKenzie at University of California Los Angeles for valuable conversations that were
constructive for this work. We thank Alexis Asseman at Semiotic AI for providing curation statistics
in The Graph protocol.

References

[1] H. Adams.

2018.
https://hackmd.io/C-DvwDSfSxuh-Gd4WKE_ig.

Uniswap whitepaper.

Accessed: March 18,

2022.

[2] G. Angeris and T. Chitra. Improved price oracles: Constant function market makers. In Proceed-
ings of the 2nd ACM Conference on Advances in Financial Technologies, pages 80–91, 2020.

[3] W. Buffet.

Letter

to

Shareholders

of Berkshire Hathaway

Inc,

2008.

https://www.berkshirehathaway.com/letters/2008ltr.pdf.

[4] J. B. Condliffe. New Zealand in the making: A survey of economic and social development.

George Allen and Unwin, London, 1930.

6

[5] T. Favre.

Continuous Organizations,
https://github.com/C-ORG/whitepaper.

2019.

Accessed: March 18,

2022.

[6] A. C. Harberger. Issues of tax reform for Latin America. PAU, Department of Economic Affairs,

1965.

[7] H. Marks. The Most Important Thing. Columbia University Press, 2011.

[8] E. M. Niou and G. Tan. An analysis of Dr. Sun Yat-sen’s self-assessment scheme for land

taxation. Public Choice, pages 103–114, 1994.

[9] T. Phelps. 100 to 1 in the Stock Market: A Distinguished Security Analyst Tells How to Make

More of Your Investment Opportunities. Echo Point Books & Media, LLC, 2015.

[10] E. A. Posner and E. G. Weyl. Radical Markets. Princeton University Press, 2019.

[11] The

Graph.

Curator,

2021.

Accessed:

March

18,

2022.

https://thegraph.com/docs/en/curating.

[12] The Graph Academy. An Introduction to Bonding Curves, 2021. Accessed: March 18, 2022.

https://thegraph.academy/curators/introduction-to-bonding-curves.

[13] E. G. Weyl and A. L. Zhang. Ownership of the Means of Production. Journal of Legal Analysis,

2016.

[14] Wikipedia contributors.

Bancor (cryptocurrency), 2022. Accessed: March 17, 2022.

https://en.wikipedia.org/wiki/Bancor_(cryptocurrency).

[15] Y. Zhang, X. Chen, and D. Park. Formal speciﬁcation of constant product (xy= k) market maker

model and implementation. White paper, 2018.

7

A Proofs

A.1 General Allocative Curves

Theorem 3.1 (Allocative Curves Exist). For a differentiable bonding curve p , a tax rate τ ∈ (0, 1),
and an assessment a > 0, the function q deﬁned by

q(s; a, τ, p) , (1 − τ + τ · a) · p(s)

1 + τ · p(s)

,

for all s ≥ 0,

(8)

forms an allocative curve for p.

Proof. We proceed in the following manner. First we verify q satisﬁes the third property of allocative
curves (Step 1). Then we establish the second property for allocative efﬁciency (Step 2). This is
followed by showing q → p uniformly as τ → 0+ (Step 3).

Step 1. Since p is a bonding curve, p(0) = 0 and p(s) > 0 for s > 0. Thus, q(0) = 0 and q is the
quotient of differentiable functions, with a denominator that is bounded away from zero, and so q is
differentiable. Since q(0) = 0 and p(s) > p(0) = 0 for s > 0 (i.e. p is strictly increasing),

q(s) =

(1 − τ + τ · a) · p(s)
1 + τ · p(s)

≤ (1 − τ + τ · a) ·

1
τ

= a +

1 − τ
τ

,

for all s ≥ 0.

(9)

That is, q is bounded from above by a + (1 − τ )/τ .

Rearranging the expression for q reveals

and differentiating yields (n.b. we adopt the dot notation for derivatives)

q(s) = (1 − τ + τ · [a − q(s)]) · p(s).

˙q(s) = (1 − τ + τ · [a − q(s)]) · ˙p(s). − τ · p(s) · ˙q(s),

for all s > 0,

and so

˙q(s) =

(1 − τ + τ · [a − q(s)]) ˙p(s)
1 + τ · p(s)

,

for all s > 0.

The upper bound on q(s) in (9) implies

1 − τ + τ · [a − q(s)] ≥ 0,

for all s ≥ 0.

(10)

(11)

(12)

(13)

As the denominator of ˙q is always positive, ˙q(s) > 0, i.e. q is strictly increasing. Combining our
results reveals q is a bounded bonding curve.

Step 2. Let ε > 0 be given. To verify (5), it sufﬁces to show there is τ+ ∈ (0, 1) such that

q(s; a, τ, p) ≤ a + ε,

for all s ≥ 0 and τ ∈ [τ+, 1).

Picking

implies

and so

τ + , 1
1 + ε

,

1 > τ ≥ τ + =

1
1 + ε

=⇒ τ (1 + ε) ≥ 1 =⇒ ε ≥

1 − τ
τ

,

q(s; a, τ, p) ≤ a +

1 − τ
τ

≤ a + ε,

for all s ≥ 0 and τ ∈ [τ +, 1).

(14)

(15)

(16)

(17)

In particular, this shows the limit in (5) holds, taking τ+ = τ +.

Step 3. Let δ > 0 be given. It sufﬁces to show there is τ− ∈ [0, 1] such that

kq(·, a; τ, p) − p(·)k∞ = sup

s∈[0,S]

|q(s, a; τ, p) − p(s)| ≤ δ,

for all τ ∈ [0, τ−].

(18)

8

Observe

|p(s) − q(s, a; τ, p)| =

(1 − τ + τ · a) · p(s)
1 + τ · p(s)

−

[1 + τ · p(s)] · p(s)
1 + τ · p(s)
(1 + p(s) − a) · p(s)
1 + τ · p(s)

(cid:12)
(cid:12)
(cid:12)
= τ ·
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

≤ τ · |2 − a| · p(s)
≤ τ · |2 − a| · p(S),

(cid:12)
(cid:12)
(cid:12)
(cid:12)

for all s ∈ [0, S],

where the ﬁnal inequality holds since p is strictly increasing. Hence picking

τ − =

δ
max(1, |2 − a| · p(S))

yields

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(19a)

(19b)

(19c)
(19d)

(20)

|p(s) − q(s, a; τ, p)| ≤

δ · |2 − a| · p(S)
max(1, |2 − a| · p(S))

≤ δ,

for all s ∈ [0, S] and τ ∈ [0, τ −].

(21)

The bound in (21) holds for all s ∈ [0, S], thereby implying (18) holds upon taking τ− = τ −.

Lemma 3.1 (Efﬁciency of Allocative Curves).Given a tolerance ε > 0 and share supply S > 0, if q
is an allocative curve for a bonding curve p, then there are τ−, τ+ ∈ (0, 1) such that

i) for all τ ∈ [τ+, 1), the curve q(s; a, τ, p) is ε-allocative efﬁcient on [0, S];
ii) for all τ ∈ (0, τ−], the curve q(s; a, τ, p) is (p − ε)-investment efﬁcient on [0, S].

Proof. We verify allocative efﬁciency (Step 1) and investment efﬁciency (Step 2) in turn. Let ε > 0,
S > 0, and a ≥ 0 be given along with an allocative curve q for a bonding curve p.

Step 1. By the deﬁnition of a limit, it sufﬁces to show there is τ + ∈ (0, 1) such that

q(s, a; τ, p) ≤ a + ε,

for all s ∈ [0, S] and τ ∈ [τ +, 1).

By the second property of allocative curves, there is τ + ∈ (0, 1) such that

|q(S, a; τ, p) − a| ≤ ε,

for all τ ∈ [τ +, 1).

With the monotonicity of q with respect to s, (23) implies

q(s, a; τ, p) ≤ q(S, a; τ, p) ≤ a + ε,

for all τ ∈ [τ +, 1).

Thus, (22) holds, taking τ + = τ +.

Step 2. In similar fashion, here it sufﬁces to show there is τ − ∈ (0, 1) such that
for all s ∈ [0, S] and τ ∈ (0, τ −].

q(s, a; τ, p) ≥ p(s) − ε,

Since q(·, a; τ, p) → p uniformly as τ → 0+, there is τ − ∈ (0, 1) such that

(22)

(23)

(24)

(25)

kq(·, a; τ, p) − p(s)k∞ = sup

s∈[0,S]

|q(s, a; τ, p) − p(s)| ≤ ε,

for all τ ∈ (0, τ −].

(26)

In particular, this implies (25) holds, taking τ − = τ −, and the proof is complete.

9

A.2 Allocative Curves for Linear Bonding Curves

A core requirement in the implementation of bonding curves is efﬁcient computation of the pay-
ment/reward m and the shares minted/burned x. This is particularly important for smart contract
implementations. The lemma below provides two bounds that may be used for estimating m and
x. We emphasize these bounds are given to ensure that transactions incur “positive friction,” i.e. the
errors do not make it possible to game the system by repeating a mint/burn transaction pair proﬁtably.

Remark A.1. When shares are burned, x and m are negative. Thus, for burning shares, we seek an
underestimate of −m or, equivalently, an overestimate of m.
Lemma A.1 (Allocative Mint and Burn Formulas with Linear Bonding Curves). Let s ≥ 0 be a share
supply, a ≥ 0 be an assessment, and τ ∈ (0, 1) be a tax rate. Let k > 0 and p(s) = k · s be a bonding
curve and q be the allocative curve for p deﬁned by (7).

1. In a transaction where shares are burned (i.e. x ∈ [−s, 0)), the reward |m| is satisﬁes

|m| = −m ≥

x2
max(2, 1 + τ · k · s)
and this lower bound on |m| is monotonically increasing as x decreases to −s.

θ
1 + τ · k · s

0, s · |x| −

· max

(cid:18)

(27)

,

(cid:19)

2. In a transaction where shares are minted (i.e. x ∈ (0, ∞)), the shares minted x satisfy

x ≥

1 + τ · k · s
2

s2 +

"s

4m
(1 − τ + τ · a) · k

− s

.

#

(28)

Proof. We ﬁrst obtain a formula relating m and x via Taylor’s remainder theorem (Step 1). This is
used to establish (27) (Step 2) and then (28) (Step 3).

Step 1. First observe

s+x

m =

q(ζ, a; τ, p) dζ = (1 − τ + τ · a) · k

·

s+x

ζ
1 + τ · k · ζ

dζ.

Integrating yields

s
Z

s+x

s
Z

ζ
1 + τ · k · ζ

dζ =

=

=

=

|

1
τ · k

1
τ · k
1
τ · k
1
τ · k

Combining (29) and (30) reveals

m =

θ
τ · k

Recall the Taylor series expansion relation

s
Z

ζ −

x −

x −

·

(cid:20)

(cid:20)

(cid:20)

s
Z

}

,θ

{z
s+x

1 −

1
1 + τ · k · ζ

dζ

ln(1 + τ · k · ζ)
τ · k

s+x

s
(cid:21)

1
τ · k
1
τ · k

· ln

· ln

1 + τ · k · (s + x)
1 + τ · k · s
τ · k · x
1 + τ · k · s

1 +

(cid:19)(cid:21)
.

(cid:19)(cid:21)

(cid:18)

(cid:18)

x −

1
τ · k

(cid:20)

· ln

1 +

τ · k · x
1 + τ · k · s

.

(cid:19)(cid:21)

(cid:18)

∞

n=1
X

ln(1 + ξ) = ξ −

ξ2
2

+

ξ3
3

+ · · · = −

(−ξ)n
n

,

for all ξ ∈ (−1, 1).

(32)

By Taylor’s remainder theorem, there is ζx between x and 0 such that

m =

θ
τ · k

x −

x
1 + τ · k · s

+

τ · k · x2
(1 + k · τ · s)2 −

τ 2 · k2 · ζ3
x
(1 + k · τ · s)3

(cid:20)

s · x
1 + τ · k · s

= θ

(cid:20)

+

x2
(1 + τ · k · s)2 −

τ · k · ζ3
x
(1 + k · τ · s)3

(cid:21)

10

(cid:21)

(33a)

(33b)

(29)

(30a)

(30b)

(30c)

(30d)

(31a)

Step 2. Using (33), we see

m ≤ θ

(cid:20)

s · x
1 + τ · k · s

+

x2
(1 + τ · k · s)2

(cid:21)

,

for all x ∈ [−s, 0),

(34)

noting −ξ3

x > 0 for x < 0. More simply, the integral in (29) can also be bounded by

m ≤

θ
1 + τ · k · s

·

s
Z

s+x

ζ dζ =

θ · (2 · s · x + x2)
2 · (1 + τ · k · s)

,

where we note θ > 0. Combining (34) and (35) reveals,

for all x ∈ [−s, 0),

(35)

m ≤

θ
1 + τ · k · s

s · x +

(cid:20)

x2
max(2, 1 + τ · k · s)

(cid:21)

,

for all x ∈ [−s, 0).,

(36)

which establishes (27). Lastly, note the vertex of the quadratic bound occurs at

x = −

s · max(2, 1 + τ · k · s)
2

≤ −s,

and so the bound (27) is increasing for all valid choices of x (i.e. x ≥ −s).

Step 3. Setting

A =

1

(1 + τ · k · s)2 , B =

s
1 + τ · k · s

, C = −

m
θ

−

τ · k · ξ3
x
(1 + τ · k · s)3 ,

reveals

Consequently, if x > 0, then, by the quadratic formula,

Ax2 + Bx + C = 0.

x =

(1 + τ · k · s)2
2

·

"s

s2

(1 + τ · k · s)2 − 4AC −

s
1 + τ · k · s #

=

≥

1 + τ · k · s
2

1 + τ · k · s
2

s2 + 4

"s

s2 +

"r

m
θ

+

τ · k · ξ3
x
(1 + τ · k · s)3

− s

#

(cid:19)

− s

,

#

(cid:18)
4m
θ

(37)

(38)

(39)

(40a)

(40b)

(40c)

where we note m > 0. This gives (28), as desired.

11

