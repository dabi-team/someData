This is a pre-print of the following chapter: Sanil S. Gandhi, Arvind W. Kiwelekar, Laxman D. Netak, Hansraj S.
Wankhede; “Security Requirement Analysis of Blockchain-based E-Voting Systems”, published in Intelligent Communication
Technologies and Virtual Mobile Networks, 2022, edited by G. Rajakumar, Ke-Lin Du, Chandrasekar Vuppalapati, Grigorios
N. Beligiannis, 2022, Publisher Springer Singapore. The authenticated version is available on publisher site.

Cite this chapter as: Gandhi, S.S., Kiwelekar, A.W., Netak, L.D., Wankhede, H.S.(2023). Security Requirement Analysis
of Blockchain-Based E-Voting Systems. In:Rajakumar, G., Du, KL., Vuppalapati, C., Beligiannis, G.N. (eds) Intelligent
Communication Technologies and Virtual Mobile Networks. Lecture Notes on Data Engineering and Communications
Technologies, vol 131. Springer, Singapore. https://doi.org/10.1007/978-981-19-1844-5 6.

2
2
0
2

g
u
A
2

]

R
C
.
s
c
[

1
v
7
7
2
1
0
.
8
0
2
2
:
v
i
X
r
a

 
 
 
 
 
 
Security Requirement Analysis of Blockchain-based
E-Voting Systems

Sanil S. Gandhi, Arvind W. Kiwelekar, Laxman D. Netak, Hansraj S. Wankhede
Department of Computer Engineering
Dr. Babasaheb Ambedkar Technological University
Lonere, Raigad-402103, India
ssgandhi@dbatu.ac.in, awk@dbatu.ac.in, ldnetak@dbatu.ac.in

Abstract—In democratic countries such as India, voting is a
fundamental right given to citizens of their countries. Citizens
need to physically present and cast their vote in ballot-paper
based voting systems. Most of the citizens fail to fulﬁll this
constraint and have stayed away from their fundamental duty.
Electronic-voting systems are often considered as one of the
efﬁcient alternatives in such situations. Blockchain Technology is
an emerging technology that can provide a real solution as it is
characterized by immutable, transparent, anonymous, and decen-
tralized properties. This paper presents a security requirement
analysis for e-voting systems and evaluates blockchain technology
against these requirements.

Index Terms—Blockchain Technology, E-Voting, Cryptogra-

phy, Security Analysis.

I. INTRODUCTION

In Democratic countries, an election plays a vital role in the
selection of the government of the respective country. A voter
must cast the vote securely and privately without interference
from any political party’s agents. There are enormous ways
to cast the vote in the different countries. In the traditional
voting system, a paper is used to cast the vote. The drawbacks
of this system are invalid votes, printing of millions of ballot
papers, transportation, storage and distribution of ballot papers,
stealing or altering a ballot boxes, and the counting process is
manual, which takes too long time.

In India, the Postal Ballot system facility is available for
the members of the armed forces, members of the state police
department, or any person who is appointed on the election
duty. Voter have to punch his / her choice on the ballot paper
and, then these votes are dispatched to the Returning Ofﬁcer of
the respective assembly using postal services. The drawback
of this system is, sometimes ballots are not delivered on time,
papers tore in between the transportation or did not properly
punch by voters lead to the cancellation of the vote at the time
of the vote counting process.

Electronic Voting Machine (EVM) [1] drastically changes
this scenario in India. It helps to overcome all the drawbacks
of a paper-based voting system. But in this, the voter has to
visit the polling station on election day. Another way to cast
a vote is through an Internet-based or remote voting system.
As voter can cast vote from anywhere, leads to an increase
in voter participation. The system is designed as a web-based
applications or as a mobile applications.

Earlier, the web-based applications are connected with bio-
metric devices, cards, passwords or PINs, etc. and currently,
mobile-based applications have in-built functionality for voter
authentication. The online voting system was designed in
2003, by the Estonian government for the local government
council elections, where a National ID card with Public Key
Infrastructure (PKI) used to authenticate the voter [2]. P. Y. A.
Ryan et at. [3] have been implemented Prˆet `a Voter, a secure
electronic voting system with end-to-end veriﬁability.

Such, Internet-based systems are centralized, and vulnerable
to many attacks as well as depended on a trusted third party to
carry out the whole election process. Internet-based systems
are easy to penetrate and are less transferable as there is
possibility of data manipulation. Due to such issues in the
existing online voting systems, many researchers are working
on the development of full-proof remote voting systems using
innovative and emerging technologies such as blockchain
technology. The primary design goal of this kind of efforts is
to build a voting system which shall preserve voter’s privacy
and it shall be resilient to anticipated and unforeseen security
threats.

Some of the platforms for mobile-based remote voting, such
as Voatz, Votem, etc. are recently used to conduct elections
for citizens having physical disabilities, busy in their daily
routine, or leaving out of the city. Voatz is used within certain
jurisdictions where local US government offers their citizens
to remotely cast the vote in the election. Private election of
the organisation is also conducted. For example, the Ohio
State Bar Association election conducted using the Votem
blockchain-based mobile voting platform [4].

Follow my votes, TIVI, BitCongress, and Vote Watcher are
the examples of the blockchain based mobile and desktop
applications. The details of the such applications as follows:
1) Follow My Vote [29]: It is the online, open-source voting
platform with end-to-end veriﬁbility. Desktop application
is working on live operating system, and mobile based
application needs the various administrative permissions
at the time of installation of application so there is less
possibility of malware attacks.

2) TIVI [31]: TIVI is remote voting application with easily
understandable user interface to novice users available
for all the devices. This application ensures the voter
identity and eligibility through authentication methods.

Every ballot is secured using the public key encryption as
well as voter’s digital signature. Zero-Knowledge Proof
[22] is used for correct voting process.

3) BitCongress [30]: BitCongress is the peer-to-peer elec-
tronic voting platform. The platform is designed using
Bitcoin, Smart Contract, Counterparty, and Blockchain
APIs. Proof-of-Work, Proof-of-Tally such mechanisms
are used for data integrity.

4) VoteWatcher [32]: It is the open source electoral system.
The ‘Optical Mark Recognition’ (OMR) sheet is used as
a paper ballot. Data extracted as voter cast the vote and
stored on the blockchain.

In the paper [5], authors analyzed two e-voting systems.
First one is the Estonian E-Voting System (EstEVS) and
another is the Secure Electronic Registration and Voting Ex-
periment (SERVE) to ﬁnd out which is secured. The authors
proposed the game-theoretical methods to analysed the large-
scale attacks. It
is based on the probabilities model. The
required data for analysis of this system is collected from 1000
machines. The possible large-scale attacks in such systems can
be large scale votes’ theft, disenfranchisement of votes, votes
buying and selling, and privacy violation.

In the next section II, we discuss the blockchain primer
and related work in the blockchain based e-voting systems.
Section II presents the detailed requirement analysis of the
blockchain-based e-voting system. Finally, we conclude this
paper in section IV.

II. BACKGROUND AND RELATED WORK

A. Blockchain

Bitcoin (Cryptocurrency) [6] is the ﬁrst application designed
using the blockchain platform. Blockchain stores data in
the forms of the chain of blocks as shown in Figure 1 in
append-only mode. If, adversary tries to alter or delete the
data/transactions stored in the block, it violates the consensus
rules. Number of transactions are stored in a block as per
the maximum size of the block. The ﬁrst block of blockchain

Fig. 1. Blockchain

is called a genesis block. In genesis block, the previous hash
ﬁeld is set to a default value in the genesis block means it sets
to zero or null and for the remaining ﬁelds, values are set to
default. The key characteristics of blockchain technology such
as decentralised, immutable, anonymity, and transparency are
described as follows:

1) Decentralized: The single-point failure, collapse the
whole centralized system leads to the decentralization of
the data. In this, data is not controlled by a single entity.
As, it forms trustworthy platforms, no need of a third

party or inter-mediator when performing transactions with
unknown parties.

2) Immutable: This property guarantees that no one can
able to change the data stored on the blockchain. All
the nodes that are part of network stored the data. An
eavesdropper alters or deletes the data on the blockchain
if and only if an eavesdropper has more than 51% control
in the system.

3) Anonymity: This property hides the original

identity
of the user from the rest of the world. It is useful in
fund transfer or e-voting activities where the needs of
hiding the identity of the person. This is achieved via
public/private key-pair addresses.

4) Transparency: All the blocks consisting of data is stored
in every node present in the network. So, any node that
joins the e-voting system can able to verify or view every
transaction.

These key elements help to design a full-proof and efﬁcient e-
voting system. It removes most of the pitfalls that arose in the
traditional and Internet-based i.e. centralized e-voting system.
Blockchain implementation is based on the Distributed
Ledger, Cryptography, Consensus Protocol, and Smart Con-
tract.

1) Distributed Ledger (DL): Traditional ledgers are used in
business for keeping day-to-day accounting information,
the same way in blockchain distributed ledgers store
all the transactions in all the peers that are part of the
network. Any alteration in the ledger leads to an update in
all the consecutive nodes. Voter’s information, votes cast
by voters are recorded and replicated on every ledger.
2) Cryptography (Crypt.): Paillier encryption [18], Homo-
morphic encryption [19], Mix-net [20], Ring signature
[11], Blind Signature [21], as well as Zero-Knowledge
Proof (ZKP) [22] etc. cryptographic and encryption tech-
niques prefer to secure any systems. These techniques are
used for user authentication, message privacy by encrypt-
ing and decrypting the data and hiding the user’s identity
by a key-pair generated using asymmetric cryptographic
algorithms.

3) Consensus Protocol (CP): All nodes in the decentralized
network reach a common agreement regarding the current
state of the ledger with the help of a consensus algorithm.
It eliminates the double-spending attack. Bitcoin [6] uses
Proof-of-Work (PoW), Ethereum shifted from PoW to
Proof-of-Stake (PoS), and Hyperledger prefers Practical
Byzantine Fault Tolerance (PBFT) as a consensus algo-
rithms. As per business speciﬁcations, various consensus
algorithms such as Proof of Activity (PoA), Proof of
Weight (PoW), Proof of Importance (PoI), Delegated
Proof of Stake (DPoS), Proof of Elapsed Time (PoET),
Proof of Capacity (PoC), etc. can be used.

4) Smart Contract (SC) [24]: Like the legal agreement or
contract signed between two parties, to exchange some
value as parties satisfy the constraint mentioned in the
agreement. In the same manner, a smart contract triggers

a particular event when the system meets the prede-
ﬁned condition speciﬁed in the contract. Solidity, Vyper,
Golang, etc. are some of the programming languages to
write smart contracts. In e-voting, smart-contracts can be
used to convey a message to a voter after the vote stored
on the blockchain, carry out election rules, keep the track
of the start and end of election time, etc.

There are different e-voting systems are designed using the
blockchain platform. That can be classiﬁed as ﬁrst is based on
public or private cryptocurrencies such as Bitcoin [6], Zcash
[23], Zerocoin [8], etc.; the second uses the smart contract to
trigger events as met with deﬁned condition, and last is by
making use of blockchain as ballot boxes [11].

B. Related Work

Zhao Z. et al. [7] proposed the bitcoin-based e-voting
system. In this system, candidates have to deposit bitcoins
on every voter’s account before the start of the election. This
system does not support large scale voting. In the paper [9],
the authors used the Homomorphic ElGamal encryption and
Ring Signature methods. The advantage of the system is that
transactions performed by the voters are conﬁrmed in less
time. Authors [10] proposed the blockchain-based solution. It
uses the cryptographic blind signatures technique. The pitfalls
of this system is that ballots are not encrypted after the vote
cast by the voter and it is possible to trace the IP address of
voters and nodes using the network analysis tools.

B. Yu et al. [11] suggested various cryptographic techniques
such as Paillier encryption, Ring signature, Zero-Knowledge
Proof (ZKP) to efﬁciently run the voting process. Anonymity
is achieved through a key-pair of 1024 or 2048 bits generated
for every voter using short linkable ring signature technique.
The only downside of ZKP, if a voter forgets his/her passcode,
he/she lose the data forever. In the paper [12], the authors
explained how blockchain technology makes e-voting secure,
but the authors have not implemented the e-voting system
using the blockchain platform.

A private blockchain-based e-voting system proposed by
F. Hj`almarsson et al. [13]. Authors [14] suggested the Fake
Password technique, which is the combination of fake cre-
dentials [15] and panic password [16] to avoid voter coer-
cion. To avoid Danial-of-Service (DoS) attacks, authors used
Challenge-Response Protocol, e.g. CAPTCHA, at the time of
the creation of fake passwords by an adversary and also data
servers to be distributed across the network to store the ballots
during the voting process. In this paper, the author did not
mention how many votes a voter can cast during the voting
process.

In the paper [34], the author proposed a blockchain-based e-
voting system implemented using ethereum. It is the internet-
based decentralized system which is capable of self-tallying
the votes in the counting phase, provides voter privacy, and
end-to-end veriﬁability. But, the system is not able to scale for
more than 50 voters and also system is vulnerable to Denial-
of-Service attacks. Dagher G. et al. [35] proposed the ethereum

blockchain-based system for conducting the students’ associ-
ation elections at the university level. The authors suggested
homomorphic encryption techniques, cryptographic algorithm
to achieve the voter’s privacy.

Hardwick et al. [17] proposed a private, blockchain-based e-
voting system implemented using the Ethereum platform. The
voter can alter his/her already casted vote number of times till
the end of vote casting phase. But, when the counting process
starts, only the voter’s last vote is considered for counting. The
downsides of the system are (i) There is need of the Central
Authority (CA) to verify the voter authorization; (ii) A voter
can alter the vote till the election end time. To store multiple
votes from a voter, there is a need of an extra storage space,
and the cost of computation to eliminate duplicate votes is
too high; (iii) To count the vote in the counting phase, voter
receive the ballot opening message. This message is required
to open or count the vote stored on the system. Because of
any issue, if voter unable to send a ballot opening message to
the counting authority, then his/her vote will not be consider
in the ﬁnal tally.

III. REQUIREMENT ANALYSIS

Every eligible voter must participate in the election process,
and Election Commission (EC) tries to make available various
reliable, trustworthy, and secure platforms so no one can stay
away from their fundamental rights. The new voting platforms
must have to satisfy all the legal constraints of the existing
and traditional voting process. The complete election process
is separated into several tasks. Dimitris [25] elaborated the
system requirements for secure e-voting. Software Engineer-
ing principles assist in identifying these functional and non-
functional requirements of the e-voting process.

A. Functional Requirements (FR)

In this, we are specifying the various services or func-
tionalities that are offered by the system. These functional
requirements specify the inputs and their behavior as per the
inputs provided by the user to the system. The abstract view
of all e-voting related functional requirements are described
as given below:

1) Voter Registration [FR1]: Every voter has to register
herself in front of election authority with necessary
documents. The screening criteria help to identify the
eligibility of the voter.

2) Provide the Authentication Credentials

to Voter
[FR2]: Each voter, after validation of the identity of
voter, gets credential details in the form of either user-id
and password or public-private key pair. The credential
hides voters’ real identity from the rest of the world. At
the time of vote casting, every voter authenticated using
credentials and this will help to prevent double-voting.
3) Prepare the Digital Ballot Paper [FR3]: As the can-
didates are ﬁnalized for the election, the next phase is
to prepare the ballot paper to cast the vote. The ballot
paper consists of the name of all the candidates. As the
start of vote casting phase, every voter received a ballot

paper to cast a vote via email or notiﬁcation on client-side
software.

4) Casting the Vote [FR4]: Each voter, select one of the
candidates from the list of candidate mentioned on the
ballot paper. No link between voter and vote is available
to prove the way a vote is cast by a voter. For this, each
vote must be encapsulated by a double layer. First by
using the voter’s digital signature and then vote encrypted
by one of the encryption techniques. The votes cast by
voters are veriﬁed against the already available votes to
avoid the double-voting problem. After veriﬁcation, a
vote is stored on the blockchain. A voter can cast a vote
in a stipulated duration of time.

5) Vote Tallying [FR5]: After the end of the vote casting
phase, the system starts to count the votes stored on
is stored on
the blockchain, after counting the result
the blockchain for the audit purpose, and then declare
the results of an election. In this phase, all the votes
are fetched from the blockchain, then read the ﬁeld by
decrypting every vote and added it into an individual
account.

As per the various constraints mentioned by Election Commis-
sion for each functional requirements, we mapped these func-
tional requirements to the blockchain architectural elements
are shown in the Table I given below:

TABLE I
MAPPING OF SYSTEM’S FR TO BLOCKCHAIN ELEMENTS

Functional
Requirements

Blockchain Elements
Crypt.
DL

CP

SC

Voter
Registration
[FR1]

Provide the
Authentication
Credentials to
Voter [FR2]

Prepare the
Digital Ballot
Paper [FR3]

Casting the
Vote [FR4]

Vote Tallying
[FR5]

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

Remark

It records a hash of
data in the DL. The
consensus protocol
shall ensure consist-
ency among all
copies of DL.

Assign unique key
using public-private
key generation [26].

Implement the logic
of automated generation
of ballot paper as a smart
contract.
Distributed ledgers
used to record the
vote. The consensus
protocol shall ensure
consistency among
the multiple copies
of ledgers.
Implemented as a
smart contract to count
the vote received by
each candidate.

B. Non-Functional Requirements

Non-functional

requirements deﬁne systems quality at-
tributes that affect the user experience. If unable to fulﬁll the
non-functional requirements, then the system will not satisfy
the user’s expectations. The most of the systems are designed

for the small scale election but not for the large scale election.
Zhang et al. [27] implemented the blockchain-based e-voting
system for large-scale elections. In this, author evaluated the
performance of the Chaintegrity based on nine different non-
functional requirements with the help of numerous crypto-
graphic algorithms and encryption techniques.

There are several non-functional requirements but, in this we
are targeting security related quality attributes. E-voting is a
conﬁdential process and must protect against security attacks,
such as Sybil attack, Denial-of-Service (DoS) attack, Man-in-
the-middle attack, etc. These non-functional requirements are
listed as a given below:

1) Privacy: This requirement satisﬁes that no one (including
the electoral authorities) can be traced out to whom the
vote is cast by the elector. It is not possible to reveal the
candidate chosen by the voter in the vote casting phase,
and all votes remain concealed. Voter name, elector’s
public/private key-pair, voters’ documents, etc., will not
be shared with unauthorised users.

Anonymity means voters can cast a vote with a
pseudonymous identity using the public key. This can be
achieved through cryptographic algorithms such as Blind
or Ring Signature.

In receipt-freeness [28], a receipt will not be gener-
ated after a vote cast by an elector. It ensures that voters
will not be able to prove to coercer to whom they voted.
Even if the opponent cracked the secret key of the elector,
he would not ﬁnd out the elector’s vote choice.

Coercion-resistance means the system must be de-
signed in such a way that an adversary can not force a
voter to cast a vote to a speciﬁc candidate, or voters can
not prove to an adversary how they voted.
Both receipt-freeness and coercion-resistance are comple-
mentary to each other.

2) Data Integrity: The adversary should not access or tam-
per with the data stored on the system. Also, unauthorized
users should not alter the vote cast by electorates and the
electorates’s personal
information. Cryptographic hash
algorithms are one-way functions, so the integrity of data
can remain intact.

3) Conﬁdentiality: means the system will not reveal the true
identity of the electorate to their public-key infrastructure.
An authorized user may have access to the system data.
This conﬁrms that the system has quality attributes such
as coercion-resistance and privacy.

4) Authentication: The legal and eligible voters only access
the system and cast the vote, and it helps in preventing
the system from data or information leakage.

5) Authorization: Different stakeholders of the system are
provided with a wide range of functionalities. These func-
tionalities help in preventing illegal access and tampering
with the data.

6) Auditability: After the counting process, any external
auditors can recount the votes stored on the blockchain.
Also, voters verify whether their vote counted in the ﬁnal

tally or not. This property helps to achieve the veriﬁability
and validity of the process.

current timestamp of the transaction, etc. can be used to
prevent such attacks from a malicious user.

There are also other non-functional requirements such as ver-
iﬁability, scalability, transparency, availability, reliability, etc.,
need to improve the e-voting system’s performance. Usability
and accessibility are non-functional system requirements that
also play a crucial role in making the system successful. To
satisfy these constraints, developers must select the public,
private, or consortium blockchain networks as per the need in
the system requirement.

TABLE II
NON-FUNCTIONAL REQUIREMENTS OF EXISTING BLOCKCHAIN-BASED
E-VOTING SYSTEMS

4) Sybil Attack: In this, a malicious user will create mul-
tiple accounts or runs multiple nodes in the distributed
network. Using permissioned blockchain platforms or
voter authentication functionality to allow only eligible
voters to cast the vote can defend against such attacks.

Basic building blocks of blockchain architecture helps in
prevent and mitigate the numerous attacks such as smart
contract-based, consensus protocol-based, mining-based, or
wallet-based attacks.

D. Security and Privacy Requirements of Voting

The following are some of the generic security and privacy

Existing Blockchain-based Platforms

requirements that any voting system shall enforce.

Non-functional
Requirements
Privacy
Integrity
Conﬁdentiality
Authentication
Auditability

FollowMyVote
x
x
x
x
x

TIVI
x
x

x
x

BitCongress
x
x
x

x

VoteWatcher

x

x

Table II maps the non-functional requirements of e-voting
system to the some of the existing commercial Blockchain-
based voting applications such as FollowMyVote [29], Bit-
Congress [30], and TIVI [31], VoteWatcher [32].

C. Countermeasures on the Typical Attacks

Adversary continuously trying to damage the existing sys-
tem using different potential attacks. Blockchain technology
combined with some other techniques such as authentication
makes the system robust against the vulnerabilities and helps
to minimize attacks. In this section, we are elaborating on the
various attacks in the e-voting system and countermeasures.

1) Denial of Service (DoS) Attack: In DoS, attackers target
weak nodes in the network by continuously sending mali-
cious packets to ﬂood the network with excessive trafﬁc.
These attacks are resisted by using various techniques
such as authentication, Challenge-Response protocol [33]
e.g. CAPTCHA, etc. In a blockchain, a distributed ledger
prevents DoS attacks since data or services are distributed
on multiple nodes.

2) Man-in-the-Middle Attack: In a Man-in-the-middle at-
tack, an adversary intercepts communication between two
parties to tamper the messages. An adversary uses the
same transaction and re-transmits the same data to the
smart contract. Various methods such as validating every
single vote presets on the block before the block is stored
on the blockchain along with the voter’s public key after
casting a vote are preventing such kind of attack.

3) Replay Attack: This attack is the same as the Man-
in-the-Middle attack. An adversary tries to copy the
original transactions from one blockchain along with the
user’s signature and performs a new transaction on the
blockchain. In the case of e-voting, it is the same as
double voting. Using the random key/token for a every
single transaction, double voting avoiding strategies, or

1) The voting system shall able to preserve the privacy
of the voting information, means it shall not disclose
the information that who has casted a vote to which
candidate.

2) The voting system shall able to preserve the privacy of
ownership of ballot means it shall not disclose the identity
of voter associated to a particular ballot. This is also
known as anonymity of voters.

3) The voting system shall prove to the voters and auditors

that no ballots are removed from the ballot box.

4) The voting system shall be coercion resistant means that
voting system shall protect voters from casting a vote
under threat or attack.

5) The voting system shall not be able to tamper with the
casted votes once election is closed and in-process.
6) No early results should be obtainable before the end of
the voting process; this provides the assurance that the
remaining voters will not be inﬂuenced in their vote.

IV. CONCLUSION

The design of blockchain-based voting system for a large-
scale of election must be secure, reliable, trustworthy, robust
and free from security loopholes. The system’s workﬂow must
be user-friendly, and the system is easily access or operate by
the masses. Still, remote voting using blockchain for huge
population is under development phase and needs to ﬁnd
out various techniques for coercion-resistance, and smoothly
conducting the voting process.

This paper presents functional and non-functional require-
ments for blockchain-based remote e-voting systems. Also,
these functional and non-functional requirements are mapped
to the basic architectural elements of the blockchain. Some of
existing blockchain-based voting systems are also reviewed.
Hence, paper presents state of the research in the blockchain-
based e-voting systems, and how to implement countermea-
sures to overcome the various vulnerabilities.

REFERENCES

[1] “Electronic Voting Machine (EVM)”, [Online], Available: https :
//eci.gov.in/f iles/f ile/8756 − status − paper − on − evm −
edition − 3/

[24] Buterin, Vitalik; “A next-generation smart contract and decentralized

application platform”, white paper, 3.37, 2014.

[25] Dimitris A. Gritzalis; “Principles and requirements for a secure e-voting

system”, Computer & Security, 21, 6, pp. 539–556, 2002.

[26] Yakubov A., Shbair W., Wallbom A., Sanda D. et al.; “A blockchain-
based PKI management framework”, In The First IEEE/IFIP interna-
tional workshop on managing and managed by blockchain, Man2Block
colocated with IEEE/IFIP NOMS 2018, Taipei, Taiwan, 23–27, Apr-
2018.

[27] Zhang, S., Wang, L. & Xiong, H.; “Chaintegrity: blockchain-enabled
large-scale e-voting system with robustness and universal veriﬁability”,
International Journal of Information Security, 19, 323–341, 2020.
[28] Okamoto, T.; “Receipt-free electronic voting schemes for large scale
elections” In: International Workshop on Security Protocols, pp. 25–35.
Springer, Berlin, 1997.

[29] “FollowMyVote”, Blockchain Voting: The End To End Process, [Online],
https : //f ollowmyvote.com/blockchain − voting − the − end −
to − end − process/.

[30] “BitCongress: Control the world from your phone”, [Online], Available:

http : //www.bitcongress.org/BitCongress/W hitepaper.pdf .

[31] “TIVI: Accessible and veriﬁable online voting”, [Online], Available:
https : //www.smartmatic.com/f ileadmin/user upload/
Smartmatic W hitepaper Online V oting Challenge
Considerations June2020.pdf .

[32] “VoteWatcher: Cutting Edge Blockchain Voting System”, [Online],

Available: http : //votewatcher.com/#voting,

[33] Von Ahn, L., Blum, M., Hopper, N. J., & Langford, J.; “CAPTCHA:
Using hard AI problems for security”, In International Conference on
the Theory and Applications of Cryptographic Techniques, pp. 294-311,
Springer, Berlin, Heidelberg, 2003.

[34] McCorry, P., Shahandashti, S.F., Hao, F.; “A smart contract for board-
room voting with maximum voter privacy”, In International Conference
on Financial Cryptography and Data Security, pp. 357–375. Springer,
Berlin, 2017.

[35] Dagher, G. G., Marella, P. B., Milojkovic, M., Mohler, J.: Broncovote;
“secure voting system using ethereum’s blockchain”, In Proceedings of
the 4th International Conference on Information Systems Security and
Privacy, ICISSP 2018, pp. 96–107, 2018.

[2] Vinkel P.; “Internet Voting in Estonia”, In: Laud P. (eds) Information Se-
curity Technology for Applications, Lecture Notes in Computer Science,
vol 7161. Springer, Berlin, Heidelberg, 2012.

[3] P. Y. A. Ryan, D. Bismark, J. Heather, S. Schneider and Z. Xia; “Pr ˆEt
`A Voter: a Voter-Veriﬁable Voting System”, in IEEE Transactions on
Information Forensics and Security, vol. 4, no. 4, pp. 662-673, Dec.
2009.
[4] “Case

OBSA
[Online], Availaible: https
content/uploads/2017/06/OSBA − Case − Study.pdf

Election”,
//www.votem.com/wp −

President-Elect

2017
:

Study

-

[5] Buldas A. and M¨agi T.; “Practical Security Analysis of E-Voting
Systems”, In: Miyaji A., Kikuchi H., Rannenberg K. (eds) Advances
in Information and Computer Security, IWSEC 2007, Lecture Notes in
Computer Science, vol 4752, Springer, Berlin, Heidelberg, 2007.
[6] Nakamoto, Satoshi; “Bitcoin: A peer-to-peer electronic cash system”,

Manubot, 2019.

[7] Zhao, Z., Chan, T.H.H.; “How to vote privately using bitcoin”, In:
International Conference on Information and Communications Security,
pp. 82–96, Springer, 2015.

[8] Yu Takabatake, Daisuke Kotani, and Yasuo Okabe; “An anonymous
distributed electronic voting system using Zerocoin”, IEICE Technical
Report, 116(282): 127-131, 2016.

[9] B. Wang, J. Sun, Y. He, D. Pang, and N. Lu; “Large-scale election based
on blockchain”, Procedia Computer Science, vol. 129, pp. 234 – 237,
2018.

[10] Y. Liu and Q. Wang; “An e-voting protocol based on blockchain”,

IACRCryptology ePrint Archive, vol. 2017, p. 1043, 2017.

[11] B. Yu, J. K. Liu, A. Sakzad, S. Nepal, R. Steinfeld, P. Rimba, and M.
H. Au; “Platform-independent secure blockchain-based voting system,”
in Information Security (L. Chen, M. Manulis, and S. Schneider, eds.),
pp. 369–386, Springer International Publishing, 2018.

[12] T. Moura and A. Gomes; “Blockchain voting and its effects on election
transparency and voter conﬁdence”, in Proceedings of the 18th Annual
International Conference on Digital Government Research, dg.o ’17,
(New York, NY, USA), p. 574 – 575, Association for Computing
Machinery, 2017.

[13] F. Hj´almarsson, G. K. Hreiarsson, M. Hamdaqa, and G. Hj´almt´ysson;
“Blockchain-based e-voting system”, in IEEE 11th International Con-
ference on Cloud Computing (CLOUD), pp. 983–986, 2018.

[14] A. Aziz; “Coercion-resistant e-voting scheme with blind signatures”,
in Cybersecurity and Cyberforensics Conference (CCC), pp. 143–151,
2019.

[15] A. Juels, D. Catalano, and M. Jakobsson; “Coercion-resistant electronic
elections”, in Proceedings of the ACM Workshop on Privacy in the
Electronic Society, WPES ’05, (New York, NY, USA), p. 61–70,
Association for Computing Machinery, 2005.

[16] J. Clark and U. Hengartner; “Panic passwords: Authenticating under
duress,” in Proceedings of The 3rd Conference on Hot Topics in Security,
HOTSEC’08, (USA), USENIX Association, 2008.

[17] F. Sheer Hardwick, A. Gioulis, R. Naeem Akram, and K. Markantonakis;
“E-voting with blockchain: An e-voting protocol with decentralisation
and voter privacy”, in IEEE International Conference on Internet of
Things (iThings) and IEEE Green Computing and Communications
(GreenCom) and IEEE Cyber, Physical and Social Computing (CP-
SCom) and IEEE Smart Data (SmartData), pp. 1561–1567, 2018.
[18] Zhe Xia, Steve A. Schneider, James Heather, and Jacques Traor´e;
“Analysis, improvement and simpliﬁcation of Prˆet `a voter with Paillier
encryption” In Proceedings of
the conference on Electronic voting
technology, EVT’08, USENIX Association, USA, Article 13, 1–15,
2008.

[19] Hirt, M. and Sako, K.; “Efﬁcient receipt-free voting based on homomor-
phic encryption” In Advances in Cryptology - EUROCRYPT 2000, pp.
539-556, Springer Berlin/Heidelberg, 2000.

[20] David L. Chaum; “Untraceable electronic mail, return addresses, and
digital pseudonyms” Communications of the ACM, 24, 2, 84–90, 1981.
[21] Hirt, M. and Sako, K.; “Efﬁcient receipt-free voting based on homomor-
phic encryption”, In Advances in Cryptology-EUROCRYPT, pp. 539-
556, Springer Berlin/Heidelberg, 2000.

[22] Neff, C.A.; “A veriﬁable secret shufﬂe and its application to e-voting”,
In Proceedings of the 8th ACM conference on Computer and Commu-
nications Security, pp. 116–125, ACM, 2001.

[23] Tarasov, P. & Tewari, H.; “The Future of E-Voting”, IADIS International
Journal on Computer Science and Information Systems, 12, 2, pp. 148
- 165, 2017.

