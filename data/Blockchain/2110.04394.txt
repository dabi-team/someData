1
2
0
2

t
c
O
4
1

]

R
C
.
s
c
[

2
v
4
9
3
4
0
.
0
1
1
2
:
v
i
X
r
a

IDENTIFYING BLOCKCHAIN-BASED CRYPTOCURRENCY
ACCOUNTS USING INVESTMENT PORTFOLIOS

A CASE STUDY

Amin Aghaee

Vancouver, BC, Canada
https://aminrd.github.io

October 18, 2021

ABSTRACT

Cryptocurrencies based on decentralized systems, especially blockchain, are gaining popularity more
than ever. Freedom advocates hail blockchain technology as a breakthrough in digital privacy and
internet anonymity. Unfortunately, after recent studies conducted, it may come as a surprise that the
transactions are, in fact, not always anonymous. In this short paper, the possibility of identifying a
user’s accounts in different cryptocurrencies given the user’s portfolio of investment gained from
social media is investigated. In this study, the generic elements of blockchain systems are brieﬂy
studied. In section 3, BlockSim which is a tool for simulating transactions, and an algorithm for
answering this question is introduced.

Keywords Blockchain · Cryptocurrency · Identiﬁcation · Social Media · Approximate Algorithms

1

Introduction

A cryptocurrency (also known as crypto) is a digital currency in which transactions are veriﬁed and records maintained by
a decentralized system using cryptography, rather than by a centralized authority. Cryptography provides a mechanism
for securely encoding the rules of a cryptocurrency system in the system itself. Narayanan et al. [2016] Many recent
popular cryptocurrencies (e.g. Bitcoin, Ethereum, etc.) are decentralized networks based on blockchain technology.

In recent years, the growth of Bitcoin, Ethereum, and other cryptocurrencies is a phenomenon that has attracted
unprecedented attention. Caporale et al. [2018] For years, markets and currencies have been controlled by centralized
systems such as governments and central banks. However, the usage of cryptocurrencies keeps evolving day by day due
to some beneﬁts these new decentralized currencies suggest, such as privacy, security, access, and efﬁciency.

In most blockchain systems, especially in cryptocurrencies, all transactions, the wallet addresses involved are recorded
on a public chain and are available for everyone. Although wallet addresses alone do not disclose identiﬁable details,
they do provide some information for further investigation. Revealing some contact-related information and user
identiﬁcations has gained attraction in recent years Chang and Svetinovic [2018]. Alqassem et al. for example studied
ways for suggesting some techniques for Bitcoin Data analysis Alqassem et al. [2018].

The effect of social media on almost everything is not deniable these days. The cryptocurrency market is controlled by
many factors including social media Aggarwal et al. [2019]. As an example, many people post the latest trends related
to cryptocurrencies on Reddit, and share their portfolio of investment on social media. In this paper, the question of
whether we can disclose users’ accounts using their portfolio of investment in multiple cryptocurrencies is investigated.

2 Background And Problem Deﬁnition

In this section, some public characteristics of a blockchain system are brieﬂy described. A comprehensive study of
blockchain systems is well written in Bashir [2020]. Each blockchain system consists of some fundamental elements.

 
 
 
 
 
 
Identifying blockchain-based cryptocurrency accounts using investment portfolios

A PREPRINT

Some of the generic elements in each blockchain system, or more speciﬁcally in a cryptocurrency blockchain system
which is related to this work are Bashir [2017]:

• Addresses: Unique identiﬁers being assigned to accounts

• Transactions: Information about transferring some value from a source address to a destination address

• Blocks: Multiple transaction information, the previous and the next block, and some other meta information

are stored in a block

• Distributed consensus: Enables a blockchain system to have a single trusted history shared between all people

and nodes in the network

When user A wants to transfer some value v from his account aA to another account aB which belongs to user B, the
following steps happen Bashir [2017]:

1. Sender A signs the transaction using his/ her private key
2. The transaction information is broadcasted to the network using a speciﬁc algorithm called ﬂooding

3. Miner nodes add the information about this transaction to their block

4. After a couple of transactions happened, a miner who can provide a proof of work (PoW), can add a reward

value vr to his/ her account am and broadcasts the solved problem to the network

5. Every other node and miner in the network verify and add the recently solved block into their block. Thus, the
information about the transaction between accounts aA, aB which is inside the recently-solved block is also
broadcasted

6. Finally, the value starts to be appeared in aB after between three to six conﬁrmations

When it comes to privacy protection in a distributed database, blockchain systems have signiﬁcant advantages Wang
et al. [2020], Zyskind et al. [2015]. The history of all transactions that happened in a public blockchain system is
considered public information and is accessible to everyone. For example, the history of all transactions in Bitcoin from
the ﬁrst transaction in January 2009 is publicly available. Nonetheless, the public address of the accounts is stored in
the blocks rather than user identities. For instance, you can have an account in Bitcoin which has a public address that
only you and those who want to send money to you know whose this address belongs to. For other people, this public
address may seem like a series of random numbers.

Nonetheless, the privacy and conﬁdentiality of users is still a debatable topic that has been studied in recent years
(Menegalli-Boggelli [2021], Conti et al. [2018], Zaghloul et al. [2020], Androulaki et al. [2013]). In this paper, a
case is studied in which the following question is investigated: Are we able to identify users’ accounts in different
cryptocurrencies having their portfolio of investment? Each user can have one or multiple accounts. In this paper, we
study the simple case of this problem by limiting the number of accounts users can have in a single cryptocurrency to
one. In other words, every user can hold at most one account in cryptocurrencies such as Bitcoin, Ethereum, etc.

In order to deﬁne the problem ofﬁcially, let say we have a set of m cryptocurrencies C = {C1, C2, ..., Cm}. User A
has one account in each of these cryptocurrencies. U ’s portfolio of investment is:

P = {α1, α2, ..., αm}, ∀i ≤ i ≤ m : 0 ≤ αi ≤ 1,

m
(cid:88)

i=1

αi = 1

That means if v is the total investment of user U in all cryptocurrencies, α1 × v is invested in currency C1, α2 × v is
invested in currency C2 and etc. User U holds these amounts in accounts AU = {a1
u ∈ Ci.
Finding AU given P is studied in this article.

u } where ∀i : ai

u, ..., am

u, a2

3 BlockSim

One of the challenges of this problem in a real scenario is that we do not know the account owners of different
cryptocurrencies. BlockSim 1, is a Python package for simulating the transactions of multiple cryptocurrencies. In
BlockSim, you can deﬁne:

• User acquisition rate, which is the rate of adding new users to a cryptocurrency over time

1https://github.com/aminrd/BlockSim

2

Identifying blockchain-based cryptocurrency accounts using investment portfolios

A PREPRINT

• Number of turns for simulation

• Number of cryptocurrencies in your system

• Number of transactions in each turn in a turn

• Miner rate for each cryptocurrency, which speciﬁes the transaction fee described in 2

Once these variables are deﬁned, the simulator starts storing the transaction information into a database, in which
records of all simulated users, their accounts, and all transactions are stored. Note that in a real scenario, since all
transactions of many cryptocurrencies are public, it is possible to go through the transactions one by one and recreate
the database. For example, let say we have the investment portfolio of a user in Bitcoin, Ethereum, and Cardano at time
t. We can start from time 0 and create three different databases of {CBitcoin, CEthereum, CCardano} each of which
contains multiple accounts. To speed up our process of ﬁnding Au, we drop all accounts holding zero balances. It is
important to note that, when we refer to balance in this case, we refer to balances all converted into a common currency
(either a ﬁat currency or a cryptocurrency) at time t so that we can compare the value of an account in CBitcoin to the
value of another account in CEthereum.
Let say a possible answer to the problem given investment portfolio P = {α1, α2, ..., αm} is AU = {a1
u, ..., am
u }.
In order to evaluate this answer and compare it to other answers, we need to deﬁne a score. The following score is
proposed:

u, a2

score = m −

(cid:88)

ai∈AU

|αi −

ai.balance

(cid:80)

a∈AU

a.balance

|

A pseudo-code for the algorithm of ﬁnding accounts that respect the investment portfolio is in algorithm 1. The method
starts with creating the databases of all cryptocurrencies from time 0 to time t sorted by the number of non-zero-balance
accounts. Thus, the ﬁrst crypto database on the list is C t
sorted(1) that has the least number of accounts. All accounts in
each crypto database are also sorted by balances. Then, for each account a ∈ C t
sorted(1), other potential accounts in
other crypto databases are looked for. Note that, for each account a ∈ C t
i so that
b.balance = α1
a.balance
. Thus, we know what is the target balance in other crypto databases to look for. The method for ﬁnding
αi
one or multiple accounts in a crypto database is deﬁned in BinaryFind 2.

1, we are looking for an account b ∈ C t

:Portfolio P = {α1, α2, ..., αm}, Cryptocurrencies C = {C1, C2, ..., Cm}, Time t, Score Threshold St

1, a∗

Algorithm 1: Algorithm for ﬁnding potential accounts satisfying a portfolio holder
Input
Output :An answer A∗ = {a∗

2, ..., a∗
1 C t ← All cryptocurrencies in C sorted by their number of accounts at time t;
2), ..., sort(C t
1), sort(C t
2 C t
m)} by account balances at time t;
3 Answers ← an empty set {} ;
4 foreach a ∈ C t
A1 ← {a} ;
5
for i ∈ {2, 3, ..., m} do

sorted(1).accounts do

sorted ← {sort(C t

m}

6

Ai ← BinaryFind(C t

sorted(i).accounts, a.balance × αi
α1

)

7

8

9

10

11

12

end
foreach ans ∈ {A1 × A2 × ... × Am} do

if score(ans) ≥ St then
Answers.add(ans) ;

end

end

13
14 end
15 return argmaxA∗ score(A∗) where A∗ ∈ Answers;

BinaryFind 2 algorithm is inspired by the binary search method with some adjustments. The run-time complexity of
binary search algorithm on a sorted list having n elements is O(n log n). If the algorithm ﬁnds the target balance in the
list of accounts, it returns all accounts having that balance. If no accounts are found, then at least two accounts as the
lower bound and higher bounds of the target balance would be returned. For instance, if a list of accounts is:

{(id, balance)(cid:48)s} = {(1, 1.23), (2, 3.78), (3, 6.0), (4, 6.0), (5, 7.13), (6, 8.2), (7, 12.6)}

3

Identifying blockchain-based cryptocurrency accounts using investment portfolios

A PREPRINT

1, a∗

return {};

Algorithm 2: BinaryFind a target balance in a list of accounts sorted by balances
:Target balance b, Accounts {a1, a2, ..., an} sorted by balances
Input
Output :List of p answers {a∗
2, ..., a∗
p}
1 if a1.balance > b or an.balance < b then
2
3 end
4 lef t, right ← 1, n ;
5 while right > lef t do
mid ← lef t+right
6
2
if amid.balance == b then

;

7

8

9

10

11

12

13

14

15

16

17

18

19

20

21

22

23

24

25

ans ← {amid−l∗ , ..., amid, ..., amid+r∗ } where ∀a ∈ ans : a.balance == b;
return ans

end
else if amid.balance > b then
if right == mid then

return {alef t, ..., aright} ;

end
else

right ← mid;

end

end
else

if lef t == mid then

return {alef t, ..., aright} ;

end
else

lef t ← mid;

end

end

26
27 end

given a target balance b = 6.6, the output would be {(3, 6.0), (4, 6.0)} and given a target balance b = 7.99, the output
would be {(5, 7.13), (6, 8.2)}.

After ﬁnding all possible accounts in each crypto databases, algorithm 1 creates a set of possible answers derived from
the Cartesian product of all possible accounts AN S = {A1 × A2 × ... × Am}. The smallest size of AN S is 1, one
average is 2m (considering the lower and upper bounds in BinaryFind’s output) and could be larger if there are many
accounts in each database with exactly equal balances. Then, the score is computed for each answer in AN S, and all
answers having scores less than St are dropped. Finally, an answer with a maximum score is returned as the output of
this algorithm. A reason for using the score threshold St is sometimes, multiple possible answers sorted by their scores
might be interested rather than the best answer achieved.

To analyze the complexity of this algorithm, let say n = maxc∈C size(c) where size refers to the number of non-
zero-balance accounts in a crypto database. The method starts by sorting the databases by their sizes in O(m log m).
It is clear that m (cid:28) n. Thus this part of the algorithm is negligible. Then, each database is sorted by balances in
O(m.n log n). Then BinaryFind is called m times in total complexity of O(m log n). On average, if we assume that
there are 2m possible answers to be processed the complexity of the for loop is O(n.m. log n + n.2m). Since we know
m (cid:28) n, the total complexity of this algorithm would be O(m.n log n).

4 Case Study

For a case study, a simulation of up to 1000 turns with ﬁve simulated cryptocurrencies was conducted. Each cryptocur-
rency in this simulation, has a unique linear formula of user acquisition rate at each turn NewUsers(t) = β1t + β0 with
unique miner gifts and transaction fees. In every turn, all existing users send a random portion of his/ her balance to a
random account in that currency. Summary of results gained after running Finder method is available in ﬁgure 1. In this
ﬁgure, the size of C refers to the number of cryptocurrencies or m. In this ﬁgure, the normalized scores or score
m are
compared. The reason for using a normalized score is to map the best score obtained from the ﬁnder method between 0

4

Identifying blockchain-based cryptocurrency accounts using investment portfolios

A PREPRINT

Figure 1: Missing rate vs. size of C on the left, percentile histograms of normalized scores for different C sizes on the
right

and 1. This ﬁgure suggests an increasing number of cryptocurrency accounts in the ratio leads to a higher chance of
getting a better score.

In ﬁgure 1, the missing rate of different m values is plotted. Missing rate is the opposite of hitting rate which refers
to cases when no solution was found. Given only one ratio of one type, the missing rate is 100 percent. There is no
practical way to ﬁnd an account given a single portfolio P = {1}. This plot also supports the claim that an increasing
number of cryptocurrency accounts in the ratio leads to a higher chance of getting a better score.

5 Conclusion

In this paper, the question of identifying users’ accounts in different cryptocurrencies given the investment portfolio
was studied. This paper supports the fact claiming cryptocurrencies are not completely anonymous. In this study, some
limitations were considered. For example, one assumption of this work is that users do not have more than 1 account in
a cryptosystem, while they could have multiple accounts in different cryptosystem. Interesting problems for further
studies could be to discard this limit or to ﬁnd probability distributions over all accounts that refer to the conﬁdence
level rather than returning a single answer.

References

Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller, and Steven Goldfeder. Bitcoin and cryptocurrency

technologies: a comprehensive introduction. Princeton University Press, 2016.

Guglielmo Maria Caporale, Luis Gil-Alana, and Alex Plastun. Persistence in the cryptocurrency market. Research in

International Business and Finance, 46:141–148, 2018.

Tao-Hung Chang and Davor Svetinovic. Improving bitcoin ownership identiﬁcation using transaction patterns analysis.

IEEE Transactions on Systems, Man, and Cybernetics: Systems, 50(1):9–20, 2018.

Israa Alqassem, Iyad Rahwan, and Davor Svetinovic. The anti-social system properties: Bitcoin network data analysis.

IEEE Transactions on Systems, Man, and Cybernetics: Systems, 50(1):21–31, 2018.

Gourang Aggarwal, Vimal Patel, Gaurav Varshney, and Kimberly Oostman. Understanding the social factors affecting

the cryptocurrency market. arXiv preprint arXiv:1901.06245, 2019.

Imran Bashir. Mastering Blockchain: A deep dive into distributed ledgers, consensus protocols, smart contracts, DApps,

cryptocurrencies, Ethereum, and more. Packt Publishing Ltd, 2020.

5

Identifying blockchain-based cryptocurrency accounts using investment portfolios

A PREPRINT

Imran Bashir. Mastering blockchain. Packt Publishing Ltd, 2017.
Dan Wang, Jindong Zhao, and Yingjie Wang. A survey on privacy protection of blockchain: The technology and

application. IEEE Access, 8:108766–108781, 2020.

Guy Zyskind, Oz Nathan, et al. Decentralizing privacy: Using blockchain to protect personal data. In 2015 IEEE

Security and Privacy Workshops, pages 180–184. IEEE, 2015.

Aaron Menegalli-Boggelli. Proving ownership of bitcoin-like utxo’s using a zk-snark scheme. 2021.
Mauro Conti, E Sandeep Kumar, Chhagan Lal, and Sushmita Ruj. A survey on security and privacy issues of bitcoin.

IEEE Communications Surveys & Tutorials, 20(4):3416–3452, 2018.

Ehab Zaghloul, Tongtong Li, Matt W Mutka, and Jian Ren. Bitcoin and blockchain: Security and privacy. IEEE Internet

of Things Journal, 7(10):10288–10313, 2020.

Elli Androulaki, Ghassan O Karame, Marc Roeschlin, Tobias Scherer, and Srdjan Capkun. Evaluating user privacy in
bitcoin. In International conference on ﬁnancial cryptography and data security, pages 34–51. Springer, 2013.

6

