2
2
0
2

n
a
J

8

]

M
R
.
n
i
f
-
q
[

2
v
6
4
4
0
0
.
9
0
1
2
:
v
i
X
r
a

Decentralized Payment Clearing using Blockchain and

Optimal Bidding

Hamed Amini ∗

Maxim Bichuch †

Zachary Feinstein ‡

January 11, 2022

Abstract

In this paper, we construct a decentralized clearing mechanism which endogenously and

automatically provides a claims resolution procedure. This mechanism can be used to clear a

network of obligations through blockchain. In particular, we investigate default contagion in a

network of smart contracts cleared through blockchain. In so doing, we provide an algorithm

which constructs the blockchain so as to guarantee the payments can be veriﬁed and the miners

earn a fee. We, additionally, consider the special case in which the blocks have unbounded

capacity to provide a simple equilibrium clearing condition for the terminal net worths; ex-

istence and uniqueness are proven for this system. Finally, we consider the optimal bidding

strategies for each ﬁrm in the network so that all ﬁrms are utility maximizers with respect to

their terminal wealths. We ﬁrst look for a mixed Nash equilibrium bidding strategies, and then

also consider Pareto optimal bidding strategies. The implications of these strategies, and more

broadly blockchain, on systemic risk are considered.

Keywords: blockchain; decentralized ﬁnance; decentralized clearing; default contagion; sys-

temic risk

∗Robinson College of Business, Georgia State University, Atlanta, GA 30303, USA, email: hamini@gsu.edu
†Department of Applied Mathematics and Statistics, Johns Hopkins University, Baltimore, MD 21218, USA, email:
mbichuch@jhu.edu. Work is partially supported by NSF grant DMS-1736414. Research is partially supported by the
Acheson J. Duncan Fund for the Advancement of Research in Statistics.

‡Stevens Institute of Technology, School of Business, Hoboken, NJ 07030, USA. zfeinste@stevens.edu

1

 
 
 
 
 
 
1

Introduction

Clearing mechanisms and default resolution procedures are fundamental to the functioning of

the ﬁnancial system. Through such mechanisms, payments of obligations are made. If a claim

is defaulted upon, the obligee will record losses and may default on its own liabilities. Such a

chain of defaults is referred to as default contagion. This is a speciﬁc form of systemic risk; the

study of which has proliferated since the 2007-2009 ﬁnancial crisis due to the large economic

costs of that event. In the last few years, decentralized ﬁnance (i.e., the replacement of tradi-

tional ﬁnancial intermediaries with blockchain-based systems) has grown from the foundations

of Satoshi Nakamoto’s whitepaper proposing a decentralized cash system [23]. In this paper, we

consider a decentralized clearing system which endogenizes the default resolution process so as

to automate the payment of obligations and resolve disputes.

The rest of the paper is organized as follows. We complete this introduction with a review of

relevant literature in Section 1.1, provide speciﬁc motivations for blockchain clearing systems in

Section 1.2, and highlight the key contributions of this work in Section 1.3. We provide a broad

overview of the ﬁnancial scope of our work within Section 2. In Section 3, we present the model

of ﬁnancial network and default contagion in a centralized clearing system as introduced in the

Eisenberg-Noe framework [15]. We further consider the clearing with bankruptcy costs as in [26]

and collateral as presented in [2, 29]. In Section 4, we consider a decentralized clearing system

where, instead of a single central authority, a blockchain system for clearing is considered which

is supported by a set of external miners. In Section 5, we study the formulation of the optimal

bidding strategies for each ﬁrm in the ﬁnancial network as the result of a non-cooperative game

and as a Pareto optimal strategy. Section 6 concludes.

1.1 Literature Review

Since the ﬁnancial crisis 2007-2009, there has been an extensive research to study clearing

systems and to understand how an economic shock propagates in the ﬁnancial system through

a variety of interconnections, such as interbank payments [15, 26], cross-holdings [16, 17, 30],

balance sheet-exposures [4, 8, 19, 25], and common asset holdings [9, 10].

In particular, the

Eisenberg-Noe clearing framework [15] provides a simple versatile equilibrium model in which,

starting from a network of nominal liabilities, one assumes a proportional sharing rule (in the

case of a default) and obtains in equilibrium a cleared network of actual payments. This model

has been extended in diﬀerent directions to cover new features. To name just a few, [20, 26]

introduces bankruptcy costs and mark to market losses, [3, 6, 11, 18] consider the ﬁre sales for a

2

single and multiple illiquid assets.

A crucial assumption in the Eisenberg-Noe framework [15] is the pro-rata repayment rule (all

obligations are repaid in proportion to the size of the nominal claims). As shown in [13, 22, 27],

the proportionality rule is not critical and other bankruptcy rulesets could be utilized instead. In

particular, [12] provides an axiomatization of the proportional rule in ﬁnancial networks. In [13],

the authors consider a discrete model for a class of decentralized clearing processes and show

that, under a suﬃciently small unit of account, the clearing equities converge to the same values

as the centralized clearing procedure. [22] builds on the work of [27] (which can be regarded as a

centralized mechanism) and show that ﬁrms can reach a consensus on how to allocate the total

estate when using a speciﬁc individual settlement allocation procedure (φ-based mutual liability

rules, in contrast to pro-rata assumption as in [15]).

1.2 Motivation

Decentralized ﬁnance, i.e. the replacement of traditional ﬁnancial intermediaries with blockchain-

based systems, is rapidly growing in size and scope. The total value locked up (in dollar

denominated terms) in decentralized ﬁnance has grown roughly 9,000% between January 1,

2020 and January 1, 2022.1 In such systems, traditional ﬁnancial instruments are replaced with

smart contracts that are self-executing. Broadly speaking, in this paper, we study clearing smart

contracts in a blockchain-based framework.

One advantage of decentralized systems is their resilience to certain forms of systemic break-

down – an understudied area of systemic risk within the ﬁnancial engineering community. In

any system with centralized intermediaries, there is the risk of catastrophic failure of those

ﬁrms; see, e.g., [7] for an empirical study analyzing the failure of a derivatives central clearing

counterparty (CCP) in Paris in 1974 and [14] for discussion on the resolution of failing CCPs.

The blockchain-based distributed ledger mitigates this risk by the nature of it decentralization.

Therefore, the use of a blockchain-based system can inherently increase ﬁnancial stability by

mitigating a form of catastrophic systemic failure.

As such, a decentralized clearing system is of the utmost importance. However, to the best

of our knowledge, no such blockchain-based mechanisms has been rigorously studied previously.

Such a clearing mechanism needs to incorporate considerations for default resolution of smart

contract claims. (At the time of this writing, the ISDA Master Agreement for smart contracts2

does not provide speciﬁc guidance for the treatment of defaults on smart contracts which can

1https://defipulse.com/
2https://www.isda.org/a/23iME/Legal-Guidelines-for-Smart-Derivatives-Contracts-ISDA-Master-Agreement.pdf

3

cause disputes due to the self-executing nature of smart contracts.) Notably, the primary diﬃ-

culties in claims resolution is determining the available funds and disagreements over seniority

of payments. These notions are modeled in a stylized way in the centrally cleared frameworks

of, e.g., [15, 26] by applying a ﬁxed recovery rate to the entire payment following a proportional

repayment scheme. A blockchain clearing mechanism, on the other hand, resolves these two

issues automatically. As such, the lack of default resolution encoded in the ISDA agreement for

smart contracts does not pose a particular hindrance for consideration of smart contracts as a

closed system. This reduces frictions and speeds up the clearing procedure as the blockchain

system automates the claims resolution procedure through the seniority structure determined

by bids made by the obligees. This occurs entirely endogenously without introducing additional

constraints, e.g., the pro-rata repayment scheme. In allowing institutions to (decentrally) deter-

mine their desired seniority, the blockchain clearing system endogenizes the eﬀective recovery

rate.

We wish to remark that other decentralized clearing procedures have been proposed (see,

e.g., [22,27]), but none (to the best of our knowledge) have speciﬁcally studied the implications of

the blockchain and distributed ledger on the actualized payments. In fact, we ﬁnd that explicitly

modeling the blockchain allows for the selected claims resolution (herein a bidding strategy to

specify the seniority structure and fees paid to the blockchain miners) to be determined in an

endogenous manner.

1.3 Primary contributions

The primary contributions of this paper are as follows:

(i) We formulate a novel decentralized blockchain clearing mechanism in Section 4.1. This

procedure is presented from the viewpoint of the miners who verify transactions and con-

struct the blocks to be placed on the distributed ledger. The fundamental elements of this

clearing mechanism are the bids that accompany any obliged payment. These bids specify

the fees associated with a nominal amount owed. The miner who places the block contain-

ing those obligations into the ledger collects the fees. Because miners wish to maximize

their own proﬁts, the fees act as a seniority structure on the obligations with larger bids

more likely to be fulﬁlled (provided a default occurs). It is assumed that the fees are being

subtracted from the payments, and therefore part of the veriﬁcation of the bids includes

the veriﬁcation that the payment obligation will be paid.

In this way, this blockchain

clearing mechanism is a decentralized clearing system that automates the claims resolu-

4

tion procedure and guarantees that the prescribed rules are followed. In fact, we provide

an algorithm (Algorithm 4.3) that constructs the entire blockchain to clear these obli-

gations given the bids placed for these obligations.

In turn, given this construction of

the blockchain, we also consider and solve the banks’ optimization problems, of how to

maximize their own utility and ﬁnd the optimal bidding strategy.

(ii) We, further, consider the formulation of the optimal bidding strategies for each ﬁrm in the

network and study the implications of these strategies, and more broadly blockchain, on

systemic risk in Section 5. We show how the optimal bidding strategy for one obligation

may depend on the bids submitted for all other obligations. We then consider two distinct

approaches to forming the optimal bidding strategies: (a) as the result of a complex

non-cooperative game; and (b) as a Pareto optimal strategy. We show that a pure strategy

equilibrium need not exist, while there always exists a mixed strategy Nash equilibrium

bidding strategy for any blockchain clearing system with ﬁnite discretization. We also show

that there exists a Pareto optimal bidding strategy for any blockchain clearing system with

ﬁnite discretization. By construction, these optimal strategies provide a heuristic (ﬁrm-

level) metric of systemic risk. Speciﬁcally, if the system is unstressed then all bids will

be optimized at the minimal fee levels. Whereas, under stresses the ﬁrms will need to

raise their fees so as to optimize the seniority structure of payments. Thus the larger the

optimal fees, the larger the expected stresses to the system.

(iii) We expand on the blockchain clearing mechanism to consider the terminal net worths

(i.e., realized assets minus nominal liabilities) for all institutions in the ﬁnancial system

following the prescribed bidding strategy. In particular, if the blocks have suﬃciently large

capacity, we ﬁnd an equilibrium formulation satisﬁed by these terminal net worths. This

equilibrium formulation can be viewed comparably to the Eisenberg-Noe framework with

seniority as studied in, e.g., [17]; however, the system presented herein endogenizes the costs

for the seniority structure which, as far as the authors are aware, has not previously been

studied. For this equilibrium formulation of the blockchain system, we show that under

weak regularity conditions there is a unique clearing net worths vector and, generally, there

always exist greatest and least clearing net worths. This equilibrium formulation provides

an eﬃcient computational procedure which can be used to approximate the blockchain

clearing solution.

5

2 Overview of Financial Setting

The setup for our paper assumes a network of banks with liabilities. We assume that the

liabilities might be owed in physical or on-chain assets. At some point, an event occurs that

requires an immediate liquidation of the securities. Such an event can be a shock to the banking

system, the eventual repayment expiration or maturity time of the liabilities or assets, or the

time when not all banks are able to fully repay their liabilities. Whatever the cause, the initial

setup is that a network of interbank liabilities needs to be cleared.

The typical practice so far in the event of nonpayment has been to declare bankruptcy and

let the courts sort it out. This is a time consuming and costly solution. Herein we propose

to let the banks themselves sort it out, using a decentralized clearing mechanism. The ﬁrst

step in this process is to tokenize all the assets in the system (if not already tokenized). Our

model is semi-static insofar as the system evolves over time but is determined by decisions made

prior to the clearing time. In any case, the procedure itself should be very fast. As such, even

though the assets must be frozen during the clearing process, the banks will have access to

the resulting cleared positions soon thereafter (e.g., at the start of the next business day with

overnight clearing).

The key idea of our decentralized clearing algorithm is the bidding. All banks must bid on

the assets they are owed. Realistically the bids are discrete – though for notational convenience

we will model them as continuous bids – with the fee being proportional to the amount owned.3

Once the bids are placed, the miners clear the debts in a systematic manner. Speciﬁcally, the

miners verify that a bank has suﬃcient funds to discharge the debt, in which case the miners

place the bid on the block, and pocket the fee. It is important to note, that the fee is paid

from the debt being processed. This aligns the incentives of the miners with the veriﬁcation

task; speciﬁcally, veriﬁcation of bank funds to pay and discharge liabilities also guarantees the

payment of the fees to the miner. The block might have limits (e.g., a limit on the number of

transactions processed within it), in which case the miners seek to maximize the payoﬀ from

the fees that they collect given the availability of funds.

We wish to highlight that the proposed algorithm is safe, since at all times either the bank

has its assets or the appropriate part of the liability has been discharged once the asset was

transferred. As is common in the decentralized universe, custodial services are not required. We

also assume for convenience that once a block has been constructed, and veriﬁed, it has also

3It is trivial to accomodate absolute fees instead. Such a modiﬁcation results in a more cumbersome formulation

of the clearing problem.

6

been conﬁrmed, though it is possible to relax this assumption to consider the unspent funds for

the next few block(s), i.e. until ﬁnal conﬁrmation.

3 Default Contagion in Centralized Clearing Systems

Consider a ﬁnancial system comprised of n banks and set [n] := {1, . . . , n}. Throughout this

work we will assume the stylized balance sheet considered in the Eisenberg-Noe framework [15].

As such, each bank i has some liquid assets (cash) xi ≥ 0 and interbank assets

j∈[n] Lji where

bank j owes Lji ≥ 0 to bank i. On the other side of the balance sheet, bank i has interbank

P

liabilities

j∈[n] Lij.4 Within this setting no bank has any obligation to itself, i.e., Lii = 0 for

every bank i. Additionally, for ease of notation, deﬁne the relative liabilities from bank i to j as

P

πij := Lij/

k∈[n] Lik if

k∈[n] Lik > 0 and πij = 0 otherwise. Herein, and comparably to the

models presented in [2, 29], we consider a setting in which each of these interbank obligations is

P

P

collateralized at level µ ∈ [0, 1] and with bankruptcy costs deﬁned by a recovery rate α ∈ [0, 1].

Within this extended Eisenberg-Noe framework, the primary question is one of network

clearing. Speciﬁcally, how much does each bank pay towards its liabilities and what are the

resulting net worths. The (extended) Eisenberg-Noe system assumes the following ﬁnancial

rules.

(i) Limited liabilities: no ﬁrm pays more obligations than it has realized in assets.

(ii) Priority of debt claims: no equity is accumulated by the shareholders of a ﬁrm unless all

ﬁrm debts are paid in full.

(iii) Collateral rehypothecation: the margin account is fully available for the payment of debts.

(iv) Fractional recovery of assets: in the event of a default, the collateral is recovered in full

but all other assets are subject to the recovery rate.

(v) Pro-rata repayment : all obligations are repaid in proportion to the size of the nominal

claims.

This is a centralized clearing system due to the use of the overarching bankruptcy rules for

defaulting ﬁrms (i.e., fractional recovery of assets) and the pro-rata repayment. For instance,

and speciﬁcally, pro-rata repayment only occurs following the dictates of some external authority

which imposes such a rule. This external authority could be a clearinghouse or legal structure

in bankruptcy courts.

4External obligations can be included by introducing a “ﬁctitious bank” 0 to the ﬁnancial system. This is explicitly

introduced within Example 5.7 later in this work.

7

Under this ruleset, the payments by bank i follow the equilibrium clearing procedure 5

pi = Φ∗

i (p) := µ

Lij + 


Xj∈[n]

(1 − µ)

j∈[n] Lij

if xi +

j∈[n] πjipj ≥ (1 − µ)

j∈[n] Lij,

α

xi +

P

j∈[n] πjipj

if xi +

P

j∈[n] πjipj < (1 − µ)

h



P

i

P

P

P

j∈[n] Lij.
(1)

Notably, this system coincides with that of [26] if there is no collateralization (i.e., µ = 0)

and [15] if, additionally, there is full recovery in case of default (i.e., α = 1).

Proposition 3.1. There exists a greatest and least clearing payments vector p↑ ≥ p↓ to the

clearing procedure Φ∗ deﬁned in (1) for any collateralization level µ ∈ [0, 1] and recovery rate

α ∈ [0, 1].

Proof. This result follows from a trivial application of Tarski’s ﬁxed point theorem on Φ∗ :

[0, ¯p] → [0, ¯p], where ¯p = (¯p1, . . . , ¯pn)⊤ and ¯pi :=

k∈[n] Lik.

Given a clearing payments vector p = (p1, . . . , pn)⊤, the resulting net worths Ki for bank i

P

are:

Ki = xi +

πjipj −

Lij,

Xj∈[n]

Xj∈[n]

with cash account Vi = K +
i

:= max{0, Ki}, the positive part of Ki. Note, that the net worth

is deﬁned as assets minus the liabilities, and can be negative. This accounts for the shortfall in

case of default of bank i. This is opposed to the cash account, which is equal to the net worth if

the latter is non negative, and otherwise the bank is in default and the cash is zero by deﬁnition.

4 Default Contagion in Decentralized Clearing Systems

We now want to consider what happens in a decentralized system cleared by miners in a

blockchain. We continue to assume the same ﬁnancial network of banks with liabilities, each of

these obligations is collateralized by µ ∈ [0, 1] as presented in the centralized clearing system

above.

5Note that the assumption on the collateral here diﬀers slightly from the treatment in [2, 29]. Herein for the
purposes of comparison to the decentralized clearing procedure, since the assets are frozen and the process is (nearly)
instantaneous, it is without loss of generality that we can assume that collateral is used immediately towards the
repayment of obligations.

8

4.1 Blockchain Clearing

The decentralized clearing systems of interest within this work continue to follow (i) limited

liabilities, (ii) priority of debt claims, and (iii) collateral rehypothecation. However, due to the

decentralized nature of clearing under consideration herein, no authority can or will enforce

bankruptcy laws which, allow for notions such as the fractional recovery of assets. Similarly,

no authority can impose the pro-rata repayment scheme for debt repayment on the ﬁnancial

system.

Instead of a single central authority, herein a blockchain system for clearing is considered,

which is supported by a set of external miners, i.e., we assume that no bank within this system

also acts as a miner of the clearing blockchain. Following the stylized structure of a blockchain

system, all interbank assets Lji, i, j ∈ [n], are paired with a bidding strategy bji : [0, 1] →

R+ ∪ {∞} that encodes the fees bank i is willing to pay to a miner to place the obligation from

bank j onto the blockchain. More speciﬁcally, bji(f ) denotes the amount of the obligation from

bank j to i for which a proportional fee of f is applied. Any bidding strategy must account

for the entirety of the (uncollateralized) obligation, i.e.,

0 bji(f )df = (1 − µ)Lji.6 In Section 5
we will assume that the fees are discrete. However, for notational convenience we will write it

R

1

using a continuous notation with an integral. The discrete bidding can then be recovered when

bij take inﬁnite value, and we think of it as Dirac delta function. To account for the possibility

of discrete bidding, we will consider the notation

1

(f ∗)+

Z

g(f )bji(f )df = lim
ǫց0

1

f ∗+ǫ

Z

g(f )bji(f )df

for any bounded function g : [0, 1] → [0, 1] and any pair of banks i, j ∈ [n].

This bidding structure completes the stylized rules for decentralized clearing through a

blockchain system. In addition to rules (i)-(iii), the clearing system satisﬁes the following rules.

(iv) Post-payment fees: all fees are paid from the incoming cash ﬂows based on the bidding

strategy. Therefore, the miners ﬁrst verify that the payments can be made by the bank

before putting it in the block. In other words, all payments on the block are simultaneously

veriﬁed for the ledger to guarantee the miners get their fees.

(v) No payment rehypothecation: by virtue of blockchain ledgers, all obligations must be paid

with the current cash account and cannot immediately reuse an incoming payment to

6Any bidding strategy with R

1
0 bji(f )df < (1 − µ)Lji can be augmented with a mass of bids placed at the 0 fee

level without loss of generality.

9

satisfy an obligation in the same block.7

(vi) Greedy block construction: the miners will select the transactions with the highest fees

to attach to the current block. This greedy approach is applied as each miner cannot

guarantee it will “win” the consensus game on additional blocks.

(vii) Limited block capacity: each block has a limited capacity C# > 0 on the number of

transactions.

Assumption 4.1. With rehypothecation, and an assessed fee of fR ∈ [0, 1] on the collateral,

we assume xi + µ

j∈[n] [(1 − fR)Lji − Lij] ≥ 0 for all i ∈ [n] so that no bank defaults directly

from the posting of the initial margins.
P

Mathematically, these decentralized clearing rules – given the bidding strategies b = (bij)i,j∈[n]

– allow for the construction of the blockchain to clear the interbank obligations. Note that, due

to the limited block capacity and no payment rehypothecation rules, multiple blocks are typically

required to ﬁnish clearing the ﬁnancial system. Due to the sequential nature of the blockchain,

the block number t can be thought of as a (discrete) time point. The actualized payments on

a speciﬁc block t, following the greedy block construction in which the collected fees by the

winning miner are maximized, are the bids:

bt ∈ arg max

b

1




0

Xi,j∈[n] Z



f bt

ij(f )df | bt ∈ Bt(

b1, . . . ,

bt−1)

,

b

b






where Bt denotes the constraints that each block must satisfy, i.e.,

Bt((

bs)s<t) = 
bt



b

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:8)
(cid:12)
(cid:12)
P

R

0 ≤ bt

s<t

(i, j) ∈ [n]2 |

ij(f ) ≤ bij(f ) −
0 bt
ij(f )df ≤ V t−1

0 bt

P

R

1

1

i

j∈[n]

ij(f )df > 0

b

≤ C#,

(cid:9)(cid:12)
for all i ∈ [n]
(cid:12)
(cid:12)

bs
ij(f ) for all i, j, ∈ [n], f ∈ [0, 1],

,





and V t−1

i

denotes the cash account of bank i at time t − 1. That is, the bids accepted in

block t have not been accepted in any prior block, the block capacity is not exceeded, and

the payments being placed onto the new block can be satisﬁed with the current cash account

without rehypothecation of the simultaneous payments.8

7No payment rehypothecation comes from the idea that only veriﬁed transactions are considered valid. This
assumption can be relaxed with the use of, e.g., unspent transaction outputs [UTXOs] in which all valid asset
transfers are immediately accessible by the recipient. We comment later in this work on how such a relaxation of this
assumption impacts the mathematical modeling.

8Under the relaxation of no payment rehypothecation (v) using, e.g., UTXOs the ﬁnal constraint of Bt((

can be rewritten to allow for rehypothecation, i.e., Pj∈[n] R

1

0 bt

ij(f )df ≤ V t−1

i + Pj∈[n] R

1

0 (1 − f )bt

ji(f )df .

bs)s<t)
b

10

Importantly, as in the construction of Bt to determine the blocks, the cash account of each

bank is needed to verify that payments can be made without rehypothecation. With the actu-

alized payments

b based on the greedy block construction over time, the realized cash account

of bank i at the completion of processing block t is:

b

1

0

Xj∈[n] Z

h

i = V t−1
V t

i +

V 0
i = xi + µ

[(1 − fR)Lji − Lij] .

b

(1 − f )

bt
ji(f ) −

df,

bt
ij (f )
i

b

(2)

(3)

Xj∈[n]

We wish to note that, due to the constraints imposed, we have the nonnegativity of the cash

account, V t

i ≥ 0 for every bank for all blocks t.

Lemma 4.2. There exists a clearing solution vector (Vt)t∈N0 following (2) for all times t ∈
N0 := N ∪ {0}.

Proof. We will approach this proof constructively. Speciﬁcally, a process (Vt)t∈N0 with Vt =

(V t

1 , . . . , V t

n)⊤ following (2) can be constructed by following Algorithm 4.3.

The proof of Lemma 4.2 relies on the following constructive algorithm to build each block

of the blockchain. Within the optimization problem for the realized bids

bt, there may be

ties over which the miners are indiﬀerent. As such, generally, there does not exist a unique

b

clearing solution (Vt)t∈N0. Within Algorithm 4.3, we consider a pro-rata assumption as in [15]

though other rulesets could be utilized instead.9 This algorithm, ﬁrst, ﬁnds the (as yet) unpaid

liabilities; second, loops through all feasible block conﬁgurations to ﬁnd that which maximizes

the collected fees; third, implements that block before continuing back to step 1 until no more

blocks can be constructed. Within the below algorithm, for simplicity of notation, let J(i) :=

{j ∈ [n] | (i, j) ∈ J} be the projection of J ⊆ [n]2 on i ∈ [n].

Algorithm 4.3. Initialize t = 0 with V 0

i = xi + µ

j [(1 − fR)Lji − Lij].

(i) Increment t = t + 1.

P

(ii) Let ¯bt

ij := bij −

bs
ij for every pair of banks i, j ∈ [n].

s<t

(iii) If I := {(i, j) ∈ [n]2 |
b

P

1
0

¯bt
ij(f )df > 0 , V t−1

i

> 0} = ∅ then terminate with

bs ≡ 0 and

Vs = Vt−1 for every s ≥ t.

R

(iv) For each J ⊆ I such that |J| ≤ C# do:

b

9Other rulesets include, e.g., the constrained equal-awards rule, the constrained equal-losses rule, and a Talmud

rule for division of assets. We refer the interested reader to [22, 27].

11

(a) For every bank i ﬁnd the minimal fee level ¯f t,J

i

that bank i can support:

¯f t,J
i = inf

¯f ∈ [0, 1] |

(cid:8)

1

¯f
Xj∈J(i) Z

¯bt
ij(f )df ≤ V t−1

i

.

(cid:9)

(b) Deﬁne the pro-rata proportions πt,J

ij by:

(1 − ¯f t,J

i

)

ij ( ¯f t,J
¯bt
i
Pk∈J(i)

)I{j∈J(i)}
ik( ¯f t,J
¯bt
)

i

k∈J(i)

ik( ¯f t,J
¯bt

i

) > 0,

k∈J(i)

ik( ¯f t,J
¯bt

i

) = 0.

if

if

P

P

πt,J
ij = 

0


(c) Construct the optimal fee structure for the miners such that only obligations between

counterparties in J are considered:

{f > ¯f t,J

i } + πt,J

ij

¯bt
ij(f )I
bt,J
ij (f ) := 


(v) Arbitrarily select

b

0

V t−1
i −
"

k∈J(i)
P

R

1
( ¯f t,J
i

)+

¯bt
ik(f )df

δ ¯f t,J

i

(f )

#

if (i, j) ∈ J,

if (i, j) 6∈ J.

J t ∈ arg max

J⊆I

n X(i,j)∈J Z

0

1

f

bt,J
ij (f )df | |J| ≤ C#

.

b

o

(vi) Construct the realized bids

bt :=

bt,J t

and update the cash account of each bank i by

i = V t−1
V t

b
i +

b

1

0

Xj∈[n] Z

h

(1 − f )

bt
ji(f ) −

b

df.

bt
ij (f )
i

b

(vii) Return to Step (i).

For each block t, Algorithm 4.3 ﬁrst computes at step (ii), for every pair of banks i, j ∈ [n],
ij remaining from the total bij for obligation of bank i to j. That is, ¯bt are those bids

the bids ¯bt

which have not already cleared prior to block t at every fee level f ∈ [0, 1]. At step (iii), this

algorithm ﬁnds the set I of all pair of banks (i, j) ∈ [n]2 with a positive uncleared obligation

and for which the obligor has a positive cash account. If this set is empty, then obviously the

algorithm terminates as no more payments can be made. At step (iv), for each potential subset

(i.e., subgraph) J ⊆ I with |J| ≤ C#, this algorithm computes, the minimal fee level ¯f t,J

i

that bank i can support and the resulting bids that would be realized provided only obligations

between counterparties in this subgraph are considered. (If discrete bids are permitted, the pro-

12

rata proportions πt,J
ij

for the remaining bids ¯bt

ij cleared at the fee level ¯f t,J

i

is also constructed).

At step (v), the algorithm optimally selects the subgraph J which maximizes the fees collected

by the winning miner. Finally, at step (vi), the algorithm implements block t and updates the

cash account of each bank.

We wish to conclude our discussion of blockchain clearing systems by considering the limiting

behavior of the cash account Vt as the block number t tends to inﬁnity.

Proposition 4.4. Let (Vt)t∈N0 be constructed from Algorithm 4.3. Then the limit limt→∞ V t
i

exists for every bank i.

Proof. First, consider the sequence of remaining bids (¯bt

ij)t∈N0 ⊆ L1([0, 1]) for any pair of banks

i, j from Algorithm 4.3. By construction 0 ≤ ¯bt

ij(f ) ≤ ¯bt−1

ij (f ) for any f ∈ [0, 1]. Therefore, by

monotone convergence there exists a pointwise limit ¯b∗

ij := limt→∞ ¯bt

ij for any pair of banks i, j.

We will now prove the convergence of V t

i by noting that

V t
i = V 0

i +

(1 − f )[bji(f ) − ¯bt

ji(f )] − [bij(f ) − ¯bt

ij(f )]

1

0

Xj∈[n] Z

(cid:2)

df

(cid:3)

for any time t and monotone convergence implies

lim
t→∞

V t
i = V 0

i +

1

0

Xj∈[n] Z

(cid:2)

4.2 Limiting Net Worths

(1 − f )[bji(f ) − ¯b∗

ji(f )] − [bij(f ) − ¯b∗

ij(f )]

df.

(cid:3)

As considered implicitly with Proposition 4.4, the blockchain clearing system can result in an

inﬁnite number of blocks being required to clear the ﬁnancial system. This inﬁnite number of

block notion, in fact, lends itself to a simple clearing ﬁxed point akin to a prioritized Eisenberg-

Noe system as presented in, e.g., [17] but with a cost structure for the seniority levels of debt

when the block capacity C# is large enough. Let K ∗

i denote the terminal net worth of bank

i after the (possibly inﬁnite length) clearing procedure as presented above; this interpretation

is made explicit in Proposition 4.7 below. Notably, the results presented within this section do

not rely on (v) no payment rehypothecation as the limit in (block) time allows for all payments

to eventually be reused as necessary.

These terminal net worths K∗ = (K ∗

1 , . . . , K ∗

n)⊤ are constructed so that bank j covers all

of its liabilities requested at a fee level above f ∗

j (and proportionally at f ∗

j ); this level f ∗

j is the

13

minimal fee that bank j is able to satisfy at least partially with its accumulated assets. The

construction of a single threshold fee level for each bank can be taken because C# is suﬃciently

large which guarantees the miners will always select the highest fees without consideration for

how many counterparties are involved. With this notion, the payments made by bank j depend

on whether j is solvent (K ∗

j ≥ 0) or defaulting (K ∗
j < 0). If bank j is solvent then it must cover
1
0 (1 − f )bji(f )df . If bank j defaults on some
R

of its obligations then, as mentioned previously, ﬁrst it covers only its obligations strictly above

all of its obligations in full and bank i receives

f ∗
j so that bank i receives

1

1

(1 − f )bji(f )df = lim
ǫց0

(f ∗

j )+

Z

(f ∗

j )+ǫ

Z

(1 − f )bji(f )df.

However, if there is a positive measure of mass of obligations at f ∗

j (i.e.,

j )+

(f ∗
f ∗
j

bji(f )df > 0)

then j may have a cash surplus with which it covers part of this mass of obligations. This cash

R

surplus is exactly equal to the diﬀerence between the assets held by j (i.e., K ∗

k∈[n] Ljk) and
1
j )+ bjk(f )df ]). The proportional
P
(f ∗
repayment scheme described in Algorithm 4.3 implies this cash surplus is distributed following

the obligations with fee levels above f ∗

k∈[n][µLjk +

j (i.e.,

j +

R

P

the rates π∗

ji deﬁned in (5) below with an explicit cut provided for the miners. That is, K∗ are

these terminal net worths if for every bank i ∈ [n] they satisfy the ﬁxed point equations

K ∗

i = xi −

Lij +

µ(1 − fR)Lji + I{K ∗

j ≥0}

Xj∈[n]

Xj∈[n] (cid:20)

1

0

Z

(1 − f )bji(f )df

(4)

1

(f ∗

j )+

Z

+I{K ∗

j <0} 



where

(1 − f )bji(f )df + π∗

K ∗

j +

ji 



(1 − µ)Ljk −

bjk(f )df

1

(f ∗

j )+

Z

Xk∈[n] "

(1 − f ∗
i )

bij (f ∗
i )
Pk∈[n] bik(f ∗
i )

0

if

if

π∗
ij = 


k∈[n] bik(f ∗

i ) > 0

for all

j ∈ [n],

P

k∈[n] bik(f ∗

i ) = 0,


f ∗
i = inf

fi ∈ [0, 1] | K ∗

i +

P
Lij ≥

µLij +

n

Xj∈[n]

Xj∈[n]h

1

f +
i

Z

bij(f )df

.

io

,

#










(5)

(6)

The key element of this clearing net worths problem are the levels f ∗ = (f ∗

1 , . . . , f ∗

n)⊤ ∈ [0, 1]n

denoting the minimal fee (i.e., the lowest seniority) that each bank is able to satisfy in full.

Bank i may be able to satisfy a fraction of its obligations at the seniority f ∗

i (at which level we

assume a pro-rata repayment scheme as in Algorithm 4.3 so as to coincide with the Eisenberg-

14

Noe framework), but no payments are made on any bids bij(f ) for f < f ∗

i . Note that, for any

feasible wealth level Ki of bank i, we have

1

Ki +

bij(f )df = Ki + (1 − µ)

Lij ≥ xi + µ

[(1 − fR)Lji − Lij] ≥ 0

0

Xj∈[n] Z

Xj∈[n]

Xj∈[n]

by Assumption 4.1; as such, the optimization problem deﬁning the defaulting fee level f ∗

i of

bank i is always feasible at fi = 1.

Lemma 4.5. Consider the blockchain system with suﬃciently large capacity, i.e.,

C# ≥

{(i, j) ∈ [n]2 | Lij > 0}

. There exists a greatest and least clearing solution K↑ ≥ K↓

to (4). Moreover, if xi + µ(1 − fR)

j∈[n] Lji ≥ 0 for all i ∈ [n], then there exists a unique

(cid:12)
(cid:12)

(cid:12)
(cid:12)

clearing solution K↑ = K↓.

P

Proof. Before proving the existence and uniqueness of the clearing solution, we wish to note

that the key components K∗ and f ∗ deﬁned in (4) and (6) can be simpliﬁed in equilibrium as:

K ∗

i = xi −

Lij +

µ(1 − fR)Lji + I{K ∗

j ≥0}

Xj∈[n]

Xj∈[n] (cid:20)

1

0
Z

(1 − f )bji(f )df

1

(f ∗

j )+

Z

+I{K ∗

j <0} 



(1 − f )bji(f )df + π∗

K ∗

j +

ji 

f ∗
i = inf




fi ∈ [0, 1] | K ∗

i +

0

Xj∈[n] Z



fi



bij(f )df ≥ 0

.






f ∗
j

bjk(f )df

0

Xk∈[n] Z

,













The existence of a greatest and least clearing net worth K↑ ≥ K↓ follows from an application

of Tarski’s ﬁxed point theorem as f ∗
i

is nonincreasing in K ∗

i and the resulting monotonicity of

the clearing equation.

We will prove uniqueness by following the same general strategy as that used in [15]. Specif-

ically, we will ﬁrst prove that the positive equities are equivalent under any clearing solution;

we will then use that result to reduce the problem to an equivalent Eisenberg-Noe system un-

der which uniqueness results already exist. To consider the positive equities, ﬁrst note that

(K ↑

i )+ ≥ (K ↓

i )+ for any bank i. Now let K∗ denote an arbitrary clearing solution, then the

positive equity for bank i is provided by

(K ∗

i )+ = xi +

µ(1 − fR)Lji + I{K ∗

j ≥0}

Xj∈[n] (cid:20)

1

0

Z

(1 − f )bji(f )df

1

+I{K ∗

j <0} 
Z

(f ∗

j )+

(1 − f )bji(f )df + π∗

ji 

K ∗

j +





15

f ∗
j

bjk(f )df

0

Xk∈[n] Z













−



Xj∈[n]


= xi +

Lij − (K ∗

i )−




µ(1 − fR)Lji + I{K ∗

j ≥0}

Xj∈[n] (cid:20)

1

0

Z

(1 − f )bji(f )df

1

+I{K ∗

j <0} 
Z

(f ∗

j )+

(1 − f )bji(f )df + π∗

ji 

K ∗

j +

−



Xj∈[n]


− I{K ∗



µLij + I{K ∗

i ≥0}

0

Xj∈[n] Z

1


bij(f )df



1

(f ∗

i )+

i <0} 

Xj∈[n] Z


bij (f )df + K ∗

i +



f ∗
i

0

Xj∈[n] Z

bij(f )df

.





f ∗
j

bjk(f )df

0

Xk∈[n] Z













As a direct consequence, the total amount of positive equity in the system is given by:

I{K ∗

i ≥0}

1

0
Z

(1 − f )bij(f )df

(K ∗

i )+ =

xi + µ(1 − fR)

Lij +

Xi∈[n]

+

Xi∈[n]

I{K ∗

i <0}

Xi∈[n] Xj∈[n]

− µ

Lij −

Xi∈[n] Xj∈[n]

Xi∈[n] Xj∈[n]

Xi∈[n] Xj∈[n]

Xi∈[n] Xj∈[n]

1

(1 − f )bij(f )df +

(f ∗

i )+

Z

Xi∈[n]

I{K ∗

i <0}(1 − f ∗
i )

K ∗

i +



I{K ∗

i ≥0}

1

0
Z

f ∗
i

bij(f )df −

Xi∈[n] Xj∈[n]


i <0}

I{K ∗

f ∗
i

bij (f )df

0

Xj∈[n] Z

bij(f )df





1

−

Xi∈[n]

I{K ∗

i <0} 

K ∗

i +



=

xi − µfR

0

Xj∈[n] Z

Lij −

bij(f )df




i ≥0}

I{K ∗

1

f bij(f )df

0

Xj∈[n] Z

Xi∈[n]

−

Xi∈[n]

Xi∈[n] Xj∈[n]
1

Xi∈[n]

(f ∗

j )+

Xj∈[n] Z

I{K ∗

i <0}

f bij(f )df −

I{K ∗

i <0}f ∗

K ∗

i +

i 

=

xi − µfR

Lij −

Xi∈[n]

Xi∈[n] Xj∈[n]

Xi∈[n]

Xi∈[n]
1

(f ∗

i )+


Xj∈[n] Z


|


f bij(f )df + f ∗

0

Xj∈[n] Z

K ∗

i +

i 

f ∗
i


bij(f )df

0

Xj∈[n] Z

.









}


=:Gi(K ∗
i )

{z

(f ∗

i )+

Z

f ∗
i

bij(f )df



The ﬁnal equation above follows since K ∗

i ≥ 0 implies f ∗

i = 0 by construction of the minimal

fee level f ∗

i . As

i∈[n] xi − µfR

i∈[n]

j∈[n] Lij is a constant,

i∈[n](K ↑

i )+ >

i∈[n](K ↓

i )+ if

P

i∈[n] Gi(K ↑

and only if
i , it trivially holds that Gi(K ↑
i ≤ f ↓
f ↑
direct consequence, it must hold that (K ↑

i∈[n] Gi(K ↓
P
P

i ) <

P

P

i ). However, by monotonicity of the minimal fee level
i )+. As a

P
i∈[n](K ↓

i ) and thus

i )+ ≤

i ) ≥ Gi(K ↓

P
i∈[n](K ↑
i )+ for every bank i.
P
i = 0 or K ↑
i = f ↓

P
i = K ↓

i . Assume now

i )+ = (K ↓

In fact, by observation, Gi(K ↑

i ) = Gi(K ↓

i ) only if f ↑

16

that K ↑

i > K ↓

i

hold that 0 ≥ K ↑
j∈[n] Gj(K ↑
i > K ↓

j ) =

K ↑
P

for some bank i. By the equality of the positive equities, it must therefore
i > K ↓

i . As the equality of the system-wide positive equity implies that
i = f ↓

i = 0 for any bank i such that

j ), it must hold that f ↑

j∈[n] Gj(K ↓

i . Finally, as all other banks have unique clearing net worths, any clearing net worths

P

K∗ must be the result of an Eisenberg-Noe clearing system deﬁned by:

˜xi := xi

1

+

Xj∈[n]


˜Lij := I

µ(1 − fR)Lji +



(f ↑

j )+

Z

{f ↑

i =0}

0+

0
Z

bij(f )df.

(1 − f )bji(f )df + I

{K ↑

j <0}

j >0}π↑
I
{f ↑

ji 

K ↑

j +



0

Xk∈[n] Z

f ↑
j

bjk(f )df

,









By assumption this is a regular ﬁnancial network10 and thus the greatest and least clearing

vectors are the same and uniqueness holds by [15, Theorem 2].

Remark 4.6. The clearing procedure with C# ≥

{(i, j) ∈ [n]2 | Lij > 0}

can readily be com-

pared with the prioritized Eisenberg-Noe system over a (potential) continuum of seniority levels.

(cid:12)
(cid:12)

(cid:12)
(cid:12)

The distinction between these models lies fully in the subtraction of the fees from interbank

assets within the construction within the decentralized system. These fees can therefore be

thought of as the explicit cost of decentralization and provide the dead-weight losses caused by

the miners. (Though a centralized system may have fees or other onerous regulations, we do

not model those herein and are only considering the same parameters applied to the centralized

and decentralized clearing systems.)

We now wish to formally relate the terminal net worths K∗ to the blockchain clearing system

as presented in Algorithm 4.3. Speciﬁcally, the limiting cash account limt→∞ V t
i

is the positive

equity (K ∗

i )+ of bank i.

Proposition 4.7. Consider the blockchain system with suﬃciently large capacity, i.e.,

C# ≥

{(i, j) ∈ [n]2 | Lij > 0}

. Under the uniqueness condition of Lemma 4.5, (K ∗

i )+ =

limt→∞ V t
i

(cid:12)
(cid:12)

for all i ∈ [n], where (Vt)t∈N0 is constructed as in Algorithm 4.3.

(cid:12)
(cid:12)

Proof. Within Algorithm 4.3 with C# ≥

{(i, j) ∈ [n]2 | Lij > 0}

, the loop over J need not be

considered as J = I can be taken without loss of generality. As such, for i ∈ [n], we can consider

(cid:12)
(cid:12)
i without the need for the superscript J. Note that ¯f t
i ∈ [0, 1] is nonincreasing over

explicitly ¯f t

(cid:12)
(cid:12)

10A ﬁnancial system is regular if every risk orbit o(i) = {j ∈ [n] | there exists a directed path from i to j} is a

surplus set ( ˜Ljk = 0 for every (j, k) ∈ o(i) × o(i)c and Pj∈o(i) ˜xj > 0); see [15, Deﬁnition 5].

17

blocks t for every bank i. Therefore, there exists some limit ¯f ∗

i . Furthermore, by
Proposition 4.4, V∗ = limt→∞ Vt exists as well. In fact, by construction within Algorithm 4.3,

i = limt→∞ ¯f t

V∗ solves the following ﬁxed point problem:

xi +

j∈[n]

+I{V ∗
P

j =0}

V ∗
i = 




µ(1 − fR)Lji + I{V ∗
h

1
j )+ (1 − f )bji(f )df + ¯π∗
( ¯f ∗

j >0}

1
0 (1 − f )bji(f )df
jiSj(¯f ∗)
R

−

(cid:16)R

(cid:17)i

P

where, for every i, j ∈ [n],

Si(¯f ∗) = xi +

µ(1 − fR)Lji + I{V ∗

j >0}

Xj∈[n] (cid:20)

1

0

Z

(1 − f )bji(f )df

j∈[n] Lij

+






1

+I{V ∗

j =0}

1

 Z

( ¯f ∗

j )+

(1 − f )bji(f )df + ¯π∗

jiSj(¯f ∗)

!#

−

µLij +

Xj∈[n] "

( ¯f ∗

i )+

Z

,

∀i ∈ [n],

(7)

bij(f )df

,

#

(1 − ¯f ∗
i )

bij ( ¯f ∗
i )
Pk∈[n] bik( ¯f ∗
i )

0

¯πij = 


k∈[n] bik( ¯f ∗

i ) > 0,

k∈[n] bik( ¯f ∗

i ) = 0,

if

if

P

P


1 , . . . , ¯f ∗
and ¯f ∗ = ( ¯f ∗

n)⊤.

In this ﬁxed point problem Si(¯f ∗) denotes the surplus assets after

covering all bids strictly above the threshold fee ¯f ∗

i . Note that Sj(¯f ∗) only appears if V ∗

j = 0

and this surplus is bounded from below by 0 and from above by

deﬁne for every bank i

j∈[n]

i )+

( ¯f ∗
¯f ∗
i

bij (f )df . Now,

P

R

K ∗

i := V ∗
i

I{V ∗

i >0} +

Si(¯f ∗) −

(cid:16)

¯f ∗
i

bij(f )df

i =0},

I{V ∗
(cid:17)

0

Xj∈[n] Z

so that K∗ solves (4) with threshold fees ¯f ∗ by construction. Therefore, by uniqueness of K∗

via Lemma 4.5, the result holds if

¯f ∗
i = inf

fi ∈ [0, 1] | K ∗

i +

(cid:8)

fi

bij(f )df ≥ 0

=: f ∗
i

(cid:9)

0

Xj∈[n] Z

for every bank i. First, consider the case in which K ∗

i > 0 then K ∗

i = V ∗

i and f ∗

i = 0. If ¯f ∗

i > f ∗
i

then Algorithm 4.3 can continue as there are more obligations to be fulﬁlled that can be covered;

this contradicts the fact that ¯f ∗

i > f ∗

which K ∗
i < ¯f ∗
f ∗

i ≤ 0 then K ∗
i then Si(¯f ∗) >

i = Si(¯f ∗) −
( ¯f ∗
¯f ∗
i

j∈[n]

i )+
P

i , as a result, ¯f ∗
¯f ∗
i
0

j∈[n]
bij(f )df and if f ∗

bij(f )df and f ∗
i > ¯f ∗

i = inf{fi ∈ [0, 1] | Si(fi) ≥ 0}; if
i then Si(¯f ∗) < 0, either of which

R

i = 0 as well. Second, consider the case in

contradict its bound as the surplus assets.

P

R

18

We wish to conclude this section by noting that the equilibrium condition for the terminal

net worths K∗ as provided in (4) simpliﬁes signiﬁcantly if all bids bij, for every pair of banks i, j,

are continuous so that the surplus (considered explicitly in (7) in the above proof) for defaulting

ﬁrms is always equal to 0. Speciﬁcally, under this setting the limiting net worths can be deﬁned

as:

K ∗

i = xi +

Xj∈[n] "

µ(1 − fR)Lji +

(1 − f )bji(f )df

1

Lij,

−

#

Xj∈[n]

f ∗
j

Z

fi

f ∗
i = inf




fi ∈ [0, 1] | K ∗

i +

bij(f )df ≥ 0

.




0

Xj∈[n] Z

Notably, the same uniqueness proof given in Lemma 4.5 can be used to prove the uniqueness in





this setting without any assumption on the assets of each bank.

5 Optimal Bidding

In the above construction of decentralized clearing, the bidding strategies bij : [0, 1] → R+ ∪{∞}

for any pair of banks i, j have been assumed to be known. We now want to bring our attention to

optimal constructions for such bidding strategies. As will be seen, the optimal bidding strategy

for one obligation may depend on the bids submitted for all other obligations even for distinct

counterparties. We consider two distinct approaches to forming the optimal bidding strategies:

(i) as the result of a complex non-cooperative game; and (ii) as a Pareto optimal strategy.

Herein, due to the natural discretization that occurs from, e.g., the limited divisibility of

assets in practice, we limit ourselves to discrete bidding strategies. Speciﬁcally, bids on the

(unsecured portion of the) obligation (1 − µ)Lij can only be made in amounts

Dij(D) := [0, (1 − µ)Lij ] ∩

1
D

N0

,

(cid:19)

(cid:18)

(e.g., in dollars and cents or bitcoins and satoshis) at fee levels

F (F ) := [0, 1] ∩

1
F

(cid:18)

N0

,

(cid:19)

for discretization parameters D, F ∈ N.11

Assumption 5.1. For the remainder of this work, we will assume that the discretization of

11Other ﬁnite discretizations of the bids and fees can be taken without altering the following results. For instance,

bids can be placed in percentage terms instead, i.e., Dij (D) := (1 − µ)Lij × (cid:0)[0, 1] ∩ (cid:0) 1
D

19

N0(cid:1)(cid:1).

bids D ∈ N satisﬁes D(1 − µ)Lij ∈ N0 for all (unsecured) obligation (1 − µ)Lij as any partial

obligation would never be able to be requested in a bid.

Therefore, a feasible bidding strategy bij : [0, 1] → R+ ∪ {∞} for (unsecured) obligation

(1 − µ)Lij must be of the form

bij(·) :=

dij (f )δf (·)

Xf ∈F (F )

for Dirac delta function δ and set of bid amounts dij : F (F ) → Dij (D) such that

dij (f ) = (1 − µ)Lij.

Xf ∈F (F )

We will denote the set of all feasible bidding strategies bij on the (unsecured) obligation (1−µ)Lij

with discretizations D, F by Bij(D, F ).

5.1 Nash Equilibrium Bidding

Within this section we wish to consider the setting in which the banks choose their bidding

strategy as the result of a complex non-cooperative game. In such a way, the bids placed for

this blockchain clearing system must be a Nash equilibrium.

Formally, each bank j must submit, within the smart contracts encoding its incoming (un-

secured) obligations (1 − µ)Lij from all banks i, the bidding strategy bij ∈ Bij(D, F ). Such

bidding strategies can be either pure or mixed, i.e., deterministic or random. Conceptually,

though a bank may prefer the certainty of a deterministic bidding strategy so that the costs are

known at the implementation of the contract, the act of encoding a known fee schedule within

the smart contract (viewable to all participants of the blockchain) subjects the bank to the

possibility of predation. This predation can take the form of another bank simply outbidding

the known fees on the same counterparty (who is at risk of default) and, therefore, capturing

the payments made before that counterparty defaults. As such, the optimal bidding strategy

for any risky obligation may incorporate an element of randomness, i.e., a mixed strategy. In

fact, enforcing deterministic bids can lead to the non-existence of an equilibrium optimal bid-

ding strategy as is detailed in Example 5.4 below. These mixed strategies can be written into a

smart contract with, e.g., a random number generator that is called at the execution time of the

contract. Mathematically, we will abuse notation and deﬁne a mixed strategy as a random func-

tion bij : Ω → Bij(D, F ) for all pairs of banks i, j ∈ [n] and for some probability space (Ω, F, P).

20

For convenience we will suppress the dependency on ω and simply write bij(f ) = (bij(ω))(f ).

We will denote the set of mixed strategies for the obligation (1 − µ)Lij from bank i to j by

L0[Bij(D, F )] := {bij : Ω → Bij(D, F )}.12 As detailed in Corollary 5.2, there will always exist

some optimal mixed bidding strategy.

In order to construct a bidding strategy – either pure or mixed – each bank will act as a

utility maximizer within the ﬁnancial system over its own (terminal) clearing equity as computed

through Algorithm 4.3. (Recall that the limiting equity exists due to Proposition 4.4.) That is,

the utility gained by bank i given a complete set of bidding strategies (b†

ij )i,j – either pure or

mixed – is the expected utility

lim
t→∞

E[ui(V t

i (b†))]

where the utility function ui is only applied to the positive equity (i.e., the cash account) as

a defaulting institution does not alter its viewpoint based on the scale of the default. The

expectation is taken over three distinct (and independent notions): (i) the randomness of a

mixed bidding strategy; (ii) a possible random stress scenario as is considered in, e.g., [1];

and (iii) the randomness introduced by taking an arbitrary maximizer in Algorithm 4.3(v).

Note, by Proposition 4.7, in the C# ≥

{(i, j) ∈ [n]2 | Lij > 0}

setting of Section 4.2, the

expected utility is taken over [K ∗

i (b†)]+. Therefore, bank i seeks to optimize its choice of bids

(cid:12)
(cid:12)

(cid:12)
(cid:12)

(bji for obligations (1 − µ)Lji) given the bidding strategies taken by all other institutions, i.e.,

b†

·i ∈ arg max

lim
t→∞

n

E[ui(V t

i (b·i, (b†

·k)k6=i))] | bji ∈ L0[Bji(D, F )]

for all j ∈ [n]

.

(8)

o

If a pure strategy is desired by some bank i, then bank i merely updates its strategy space in (8)

to be the deterministic strategies Bji(D, F ) for every counterparty j.

Corollary 5.2. There exists a mixed strategy Nash equilibrium bidding strategy to (8) for any

blockchain clearing system with ﬁnite discretization D, F ∈ N.

Proof. This follows directly from Nash’s theorem [24] due to the discretization of the fee and

bidding levels.

Remark 5.3. If xi +

j∈[n][µ(1 − fR) + (1 − µ)]Lji −

j∈[n] Lij ≥ 0 for every bank i ∈ [n],

i.e., there are no defaults in the system if all obligations are paid under zero fees, then the

P

P

universal application of this zero fee – a pure strategy – is a Nash equilibrium bidding strategy.

Furthermore this is a Pareto optimal bidding strategy for the system of banks as the maximum

12Due to the discrete setting considered herein, measurability of bij ∈ L0[Bij (D, F )] follows trivially.

21

possible amount of capital is retained by the banks.

(Pareto optimal bidding strategies are

formally presented in Section 5.2 below.)

Intriguingly, this leads to the conclusion that blockchain miners increase the collected trans-

action fees if there is some default risk towards these interbank contracts. Such default risk

increases the fees paid only up to a point though as the total payments drop as banks are in

worse ﬁnancial health which can counteract the higher fees.

Though Corollary 5.2 guarantees the existence of a mixed optimal bidding strategy, we now

wish to formally demonstrate that a pure strategy equilibrium need not exist. We will do

this in a simple, three bank, system in which the implications of all pure strategies are easily

interpretable.

Bank 1
x1 = 1

L31 = 1

Bank 3
x3 = 1.5

L32 = 1

Bank 2
x2 = 1

Figure 1: A simple network topology for Example 5.4.

Example 5.4. Consider the three bank uncollateralized (µ = 0) system displayed in Figure 1,

i.e., in which bank 3 owes $1 to both bank 1 and bank 2 but has only $1.50 in liquid assets

and no other obligations exist within this system. To simplify the discussion, we will assume

C# ≥ 2 herein. The bids need to be submitted in full dollar units, i.e., only integer values are

accepted (D = 1), and all the fees must be a multiple of 10% (F = 10). As such, and due to the

network under consideration, the feasible bids are of the form b3i(f ) = δfi (f ) for fi ∈ F (10) for

both banks i = 1, 2. That is, we can completely characterize bank i’s feasible bidding strategies

B3i(1, 10) = {δfi(·) | fi ∈ F (10)} by the choice fi ∈ F (10) without the need to consider the size

of the bid.

Herein we will assume both banks 1 and 2 are risk-neutral and solely wish to maximize the

(expected) payment received from bank 3. Due to the construction of the interbank system and

the eligible bids, the possible payments to bank 1 and 2 can easily be found. Speciﬁcally, the

payment received by bank 1 is given by the mapping P1 : F (10)2 → R+ deﬁned by:

$1.00 if f1 > f2,

$0.75 if f1 = f2,

$0.50 if f1 < f2,






P1(f1, f2) = (1 − f1) ×

22

where bank 1 bids at the (ﬁxed) fee of f1 ∈ F (10) and bank 2 at f2 ∈ F (10). As there are no

other obligations within this ﬁnancial system, P1 completely characterizes bank 1’s objective.

By symmetry of the banks, bank 2’s payoﬀ is given by the mapping P2(f1, f2) = P1(f2, f1)

which it is attempting to maximize.

First, we consider the possibility for pure strategies. We do this by considering the best

response function f †

1 : F (10) → 2F (10) for player 1 given player 2’s bidding fee level. That

is, f †

1 (f2) provides the fee that bank 1 would select so as to maximize its expected payout P1

given that bank 2 is bidding at fee level f2 ∈ F (10). (Due to the symmetry between banks,
the best response function f †
f †
2 (f ) = f †

2 : F (10) → 2F (10) for bank 2 is identical to that for bank 1, i.e.,

1 (f ) for any f ∈ F (10).) This best response function is computed as:

f2 + 0.1

if f2 < 0.4,

{0 , 0.5} if f2 = 0.4,

for all f2 ∈ F (10).

0

if f2 > 0.4,

f †
1 (f2) =






This best response function can be understood by considering the three cases:

(i) If f2 < 0.4: bank 1 has three fees to consider (a) exceeding the fee level of bank 2 by as

little as possible (f1 = f2 + 0.1) to recover $(0.9 − f2), (b) matching bank 2 (f1 = f2) to

recover $0.75 × (1 − f2), or (c) accepting the remainder of bank 3’s assets after bank 2

receives $1 (f1 = 0) to recover $0.50. It is trivial to verify that the ﬁrst case provides the

maximal payout so long as f2 < 0.4.

(ii) If f2 = 0.4: bank 1 can recover $0.50 with f1 = 0 or f1 = 0.5; in the former case by

recovering the remainder of bank 3’s assets after bank 2 takes $1 and in the latter case by

receiving $1 itself but paying $0.50 in fees to the miners. Any other choice of fees has bank

1 paying more fees without receiving a larger share of the payment than in the f1 = 0 case

(if f1 < 0.4) or f1 = 0.5 case (if f1 > 0.4).

(iii) If f2 > 0.4: the maximum payout possible for bank 1 is $0.50 with f1 = 0 as any f1 ≥ f2

costs more in fees than can be recovered by taking the remainder of bank 3’s assets.

With the best response functions, a pure strategy Nash equilibrium would need to satisfy the

ﬁxed point problem f1 ∈ f †

1 (f2) and f2 ∈ f †

2 (f1). Mathematically, we can easily verify that no

such ﬁxed point exists. Intuitively, beginning from proposed fees of f1 = f2 = 0, the bank’s

would sequentially increase their fee levels up to 0.4 or 0.5 (depending on the choice taken

when the other bank is at fee level 0.4) before cycling back to a fee level of 0. Such a cycle

23

demonstrates that the banks would never settle on a given (pure) bidding strategy.

Though no pure strategy equilibrium exists, by Corollary 5.2, a mixed strategy equilibrium

must exist. As the bidding strategy can be completely characterized by fi, in this setting we

will deﬁne bank i’s bidding strategy (for bank i = 1, 2) such that the fee level k/10 is chosen

with probability pik ≥ 0 for k ∈ 10 × F (10) (and so that

10
k=0 pik = 1). Herein, we will consider

only the symmetric mixed strategies as the banks are identical, i.e., p := p1 = p2 deﬁnes the

P

strategy of both banks. In fact, it can readily be veriﬁed that only exists a single equilibrium

p† with

p† ≈ (0.1787 , 0.0634 , 0.2392 , 0.1499 , 0.3689 , 0 , 0 , 0 , 0 , 0 , 0)⊤ .

With this symmetric equilibrium, both banks have the expected payout of (approximately)

$0.5447 which, notably provides only a marginal beneﬁt over a guaranteed payout of $0.50 from

bidding fi = 0 with 100% probability (i.e., a pure strategy).

5.2 Pareto Optimal Bidding

Within this section we wish to consider the setting in which the bids on the (unsecured) obli-

gations (1 − µ)Lij are made so as to be Pareto optimal. That is, bids are made so that no

single bank can improve its (expected) utility without decreasing the utility of another bank.

As with the Nash equilibrium bidding strategies presented above, each bank i seeks to maximize

its expected utility

lim
t→∞

E[ui(V t

i (b‡))]

for continuous utility function ui. As in the prior section, by Proposition 4.7, this utility is

taken over [K ∗

i (b‡)]+ in the C# ≥

{(i, j) ∈ [n]2 | Lij > 0}

setting of Section 4.2.

Using the notion of linear scalarizations (see, e.g., [21, Chapter 11.2.1]), a Pareto optimal

(cid:12)
(cid:12)

(cid:12)
(cid:12)

bidding strategy b‡ = (b‡

ij)i,j∈[n] can be found via the single optimization problem:

b‡ ∈ arg max

lim
t→∞




Xk∈[n]

wkE[uk(V t

k (b))] | bij ∈ Bij(D, F ) for all i, j ∈ [n]

(9)

,




for w ∈ Rn+1

++ . This optimization problem provides a Pareto optimal solution as, if bank i has





an improved utility under a diﬀerent bidding strategy, then some other bank j must have a

lower utility for b‡ to be optimal. In comparison to the Nash equilibrium setting (8), only pure

strategies (i.e., deterministic) ones are considered for the Pareto optimal bidding strategy (9).

24

This is because: (i) banks would prefer the certainty of a deterministic bidding strategy so

that the costs are known at the implementation of the contract and (ii) adding (independent)

random bidding strategies cannot improve the system-wide expected utility (weighted by w)

beyond those given by the pure strategies.

Proposition 5.5. There exists a Pareto optimal bidding strategy to (9) (for any w ∈ Rn+1
++ )

for any blockchain clearing system with ﬁnite discretization D, F ∈ N.

Proof. First, if an optimum exists to (9) for any w ∈ Rn+1

++ then it is Pareto optimal (see,

e.g., [21, Chapter 11.2.1]). Therefore, existence follows directly from the ﬁnite cardinality of the

feasible bids |Bij(D, F )| = (D(1 − µ)Lij + 1)(F + 1) for any pair of banks (i, j) ∈ [n]2.

Remark 5.6. Recall from Remark 5.3, if xi +

j∈[n][µ(1 − fR) + (1 − µ)]Lji −

j∈[n] Lij ≥ 0

for every bank i (i.e., there are no defaults in the system if all obligations are paid at the zero fee
P

P

level), then the universal application of the zero fee is both a Nash and Pareto optimal bidding

strategy.

We wish to conclude this section by presenting a four bank system which demonstrates that

the Pareto optimal bidding strategies can be nontrivial and complex. This is undertaken in

a setting with a Bernoulli systematic shock in which the expected utilities are taken over the

random endowments.13

Example 5.7. Consider a heterogeneous four bank system in which each bank has, additional,

external obligations. We will model this with the introduction of an external or society node

with no obligations to any of the banks, but holding interbank assets that the other banks owe

it. We will use the standard notation and denote this society node 0 and place it ﬁrst in the

order of banks. In this way we will let [n] = {0, 1, . . . , n} within this example. The (random)

assets x and nominal liabilities for each bank i are given by

(1 , 3 , 2 , 5)⊤

with probability 25%,

(6 , 8 , 7 , 10)⊤ with probability 75%,

and

L =

x = 




3 0 7 1 1

3 3 0 3 3

3 1 1 0 1

3 1 2 1 0












.












Within the liabilities matrix L, the external obligations to node 0 are provided within the

ﬁrst column. We can view the random assets x as being a scenario in which there is a 25%

13We choose to consider a systematic shock as that setting was shown to be the most relevant for stress testing for

centralized clearing in [5].

25

probability of a shock of size 5 to all banks. To simplify the discussion, we will assume C# ≥ 16

herein. Additionally, we will assume that all obligations are uncollateralized (µ = 0) for a

direct comparison with the centralized Eisenberg-Noe system [15]. In fact, under the centralized

clearing system of [15], only bank 4 is solvent after clearing in the stress scenario; bank 1 is a

so-called ﬁrst order default (as it defaults even if all its counterparties pay in full), bank 2 is a

second order default (as it defaults as a consequence of bank 1 defaulting, but assuming all other

counterparties pay in full), and bank 3 is a third order default (as it defaults as a consequence

of the ﬁrst and second order defaults only). Without any stress, bank 1 will still default, but

there are no cascading failures.

For the decentralized clearing, we consider the discretization of fees as F = 40 so that fee

levels are at 2.5% intervals and discretization of bids as D = 100 so that bids are placed in

“cents”. We consider the Pareto optimal problem (9) in which each bank (and external node 0)

wish to maximize their expected equity, i.e.,

ui(z) = z+,

for all

i ∈ [n].

Due to the application of the utility functions to the terminal cash account (i.e., the positive

net worths), this utility is, functionally, equivalent to the risk-neutral setting ui(z) = z. The

scalarization to ﬁnd the Pareto optimal bidding strategy is taken as w = (0.1 , 1 , 1 , 1 , 1)⊤, i.e.,

such that the expected equity of the external node is weighted at one-tenth that of all banks.

The resulting Pareto optimal solution is:

d‡(0%) =

3 0 0 0 0

3 3 0 3 0

3 1 1 0 1

3 1 2 1 0























, d‡(2.5%) =

0 0 7 1 0

0 0 0 0 3

0 0 0 0 0

0 0 0 0 0























, d‡(5%) =

0 0 0 0 1

0 0 0 0 0

0 0 0 0 0

0 0 0 0 0












,












and d‡

ij (f ) = 0 for every i, j and f > 5% with f ∈ F (40). Notably, though we imposed

a discretization D = 100 on the bid amounts, the Pareto optimal clearing solution is all-or-

nothing at every fee level. In fact, any choice D ∈ N satisfying Assumption 5.1 will result in the

same Pareto optimal bidding strategy; this is true even in the limit to the continuum of bids

D → ∞.

To conclude this example, consider the net worths and utilities under the Pareto optimal

bidding strategy with the Eisenberg-Noe centrally cleared solution. First, consider the centrally

26

cleared Eisenberg-Noe net worths. Letting Ku

EN, Ks

EN denote the net worths in the unstressed

or stressed scenarios respectively,

Ku

EN ≈ (−1 , 5.4167 , 5.9167 , 7.9167)⊤,

Ks

EN ≈ (−6.8108 , −3.0270 , −0.3243 , 1.6216)⊤.

The payments to society are 11.75 in the unstressed scenario and 9.3784 in the stressed scenario.

This leads to a (weighted) expected utility of 15.9586. Consider, now, the Pareto optimal clear-

ing. Letting Ku, Ks denote the net worths in the unstressed and stressed scenarios respectively,

Ku = (−1 , 5.825 , 5.975 , 7.875)⊤,

Ks ≈ (−6.9205 , −2.5802 , −0.3629 , 2.8145)⊤.

The payments to society are 11 in the unstressed scenario and 7.9585 in the stressed scenario.

This leads to a (weighted) expected utility of 16.4838; as such the blockchain based clearing

does indeed improve the (weighted) utility of the system.

5.3

Implications for Financial Stability

In contrast to centralized clearing procedures (e.g., [15, 26]), the blockchain clearing system

introduced herein has no central authority. The main diﬃculty in real-life clearing, the one

which the ﬁxed recovery of [26] is supposed to model, is the combination of determining the

available funds and the resolution of disagreements over seniority of payments. Therefore, a

typical modeling approximation is to ﬁx the recovery rate and apply it to the entire payment.

In our blockchain clearing mechanism, these two issues are resolved automatically. This reduces

frictions in the clearing procedure as the blockchain system automates the claims resolution

procedure through the seniority structure determined by the bids. This occurs without assuming,

e.g., the pro-rata repayment scheme of [15, 26].

In allowing the banks to (decentrally and

optimally) determine their desired seniority, the blockchain clearing system endogenizes the

eﬀective recovery rate.

Furthermore, centrally cleared systems have an often overlooked risk – cybersecurity risk.14,15

This systemic risk has been highlighted by recent ransomware attacks (e.g., the Colonial Pipeline

ransomware attack). However, a decentrally cleared system with an immutable distributed

14https://www.bloomberg.com/news/articles/2021-01-12/what-do-wall-street-leaders-think-is-the-next-big-risk
15https://www.bloomberg.com/news/articles/2021-02-24/fed-investigating-outage-in-interbank-payment-system

27

ledger has no single entity that can cause the failure of the entire ﬁnancial clearing system [28].

As such, this decentralized clearing procedure inherently increases ﬁnancial stability beyond

other points considered in this work. Notably, and in contrast to other decentralized clearing

procedures (e.g., [22, 27]), the blockchain clearing system allows for optimized claims resolution

(as opposed to exogenous rules such as pro-rata payment schemes assumed in prior works) and

guarantees that all payable obligations are fulﬁlled through the actions of the miners.

The optimal bids placed in our blockchain clearing system also act as a heuristic, endogenous,

stress testing procedure. As noted in Remark 5.3, if no stresses are exhibited in the ﬁnancial

system, then the 0% fee bid is both Nash and Pareto optimal. Therefore, as a ﬁrst order

approximation, if non-zero fees are observed in smart contracts then this indicates positive

probability of defaults on some obligations. As higher fees correspond exactly with higher

seniority, intuitively, the greater the counterparty risk, the more fees a bank would be willing to

pay to guarantee payment. Such notions are observed in both Example 5.4 and Example 5.7.

Thus, the optimal bids can be viewed as a measure of systemic risk as viewed by the banks in

the system.

In fact, these optimal bids can be viewed as a “price” of transacting with a risky counterparty.

These charges can, therefore, incentivize banks to transact with safer counterparties thus re-

ducing the overall risk of default contagion without introducing moral-hazards such as a bailout

scheme to support failing institutions. Speciﬁcally, the centrally cleared systems highlighted in

Section 3 with recovery rate α < 1 can result in bailout coalitions to rescue a failing institution

or else face larger losses and the risk of default contagion. Optimal bidding in a blockchain

clearing system can reduce the risk of default contagion through, e.g., greater recovery than is

often assumed on defaults in the model of [26]. We refer the reader to Example 5.7 to see the

high recovery of assets in case of default by comparing the results therein to the α = 1 setting

of [15]. Therefore the blockchain system dually increases the (short term) recovery of defaulted

assets and increases bank accountability for their risky transactions. That is, the consequences

of the blockchain system can lead to greater ﬁnancial stability over the centrally cleared system;

though beyond the scope of this work, a comparison of the network formation problem under

central and blockchain cleared systems would be of great interest to fully understand these

implications.

28

6 Conclusion

In this paper we proposed a novel decentralized clearing mechanism through blockchain, which

endogenously and automatically provides a claims resolution procedure. We provided an al-

gorithm which builds the entire blockchain to clear these obligations so as to guarantee the

payments can be veriﬁed and the miners earn a fee. We show that, conditional on blocks being

suﬃciently large, there always exist greatest and least clearing net worth. Moreover, under

weak regularity conditions, there is a unique clearing net worths vector. We also considered the

formulation of the optimal bidding strategies for each ﬁrm in the network so that all ﬁrms are

utility maximizers with respect to their terminal wealths. These optimal bidding strategies are

approached in both Nash and Pareto settings.

This analysis of the blockchain clearing system can be extended in the following ways. First,

more detailed and complex decentralized clearing rules could be considered. For example, ver-

ifying transactions costs the miners computational eﬀort. The fees are a way to compensate

the miners for this pivotal task. As such, a reserve price $ǫ > 0 can be imposed so that the

collected fees need to exceed this threshold for the miners to even consider placing the payment

on the blockchain. This would imply that Bt((

bs)s<t) is appended to include the additional

constraint

ij(f )df ∈ {0} ∪ [ǫ, ∞) for every i, j ∈ [n]. Such a constraint guarantees that

b

the blockchain will clear the network of obligations to converge to its terminal state in a ﬁnite

1

0 f bt
R

number of blocks (with the possibility that some defaulting banks have a small, but positive,

terminal cash account). Such a reserve price, were it known, would also inﬂuence the bidding

strategies implemented by the banks as well. Second, we implicitly assumed that the optimal

bidding strategies were determined under a complete information setting (i.e., each bank has full

information about the network and the bidding implemented by all other banks). However, a

partial information system could be considered instead (e.g., banks only have local information

about the liability network). Under such a setting, each bank would have (heterogeneous) beliefs

about the state of the system. An optimal bidding strategy implemented by bank i would then

be taken conditional on the information set available to it. Such a setting presents diﬃculties in

modeling the belief set for each bank that needs to be considered more fully. Finally, as begun

within Section 5.3, implications of this blockchain clearing system for systemic risk is of great

importance. For instance, we recommend a replication of [1, 2] on the implications of network

topology on ﬁnancial stability for this decentralized clearing system.

29

References

[1] Daron Acemoglu, Asuman Ozdaglar, and Alireza Tahbaz-Salehi. Systemic risk and stability

in ﬁnancial networks. American Economic Review, 105(2):564–608, 2015.

[2] Hamed Amini and Zachary Feinstein. Optimal network compression. arXiv preprint

arXiv:2008.08733, 2021.

[3] Hamed Amini, Damir Filipović, and Andreea Minca. Uniqueness of equilibrium in a pay-

ment system with liquidation costs. Operations Research Letters, 44(1):1–5, 2016.

[4] Kartik Anand, Ben Craig, and Goetz Von Peter. Filling in the blanks: Network structure

and interbank contagion. Quantitative Finance, 15(4):625–636, 2015.

[5] Tathagata Banerjee and Zachary Feinstein. Pricing of debt and equity in a ﬁnancial network

with comonotonic endowments. arXiv preprint arXiv:1810.01372, 2021.

[6] Maxim Bichuch and Zachary Feinstein. Optimization of ﬁre sales and borrowing in systemic

risk. SIAM Journal on Financial Mathematics, 10(1):68–88, 2019.

[7] Vincent Bignon and Guillaume Vuillemey. The failure of a clearinghouse: Empirical evi-

dence. Review of Finance, 24(1):99–128, 2020.

[8] Michael Boss, Helmut Elsinger, Martin Summer, and Stefan Thurner. Network topology

of the interbank market. Quantitative Finance, 4(6):677–684, 2004.

[9] Fabio Caccioli, Munik Shrestha, Cristopher Moore, and J Doyne Farmer. Stability analysis

of ﬁnancial contagion due to overlapping portfolios. Journal of Banking & Finance, 46:233–

245, 2014.

[10] Chen Chen, Garud Iyengar, and Ciamac C Moallemi. Asset-based contagion models for

systemic risk. 2014.

[11] Rodrigo Cifuentes, Hyun Song Shin, and Gianluigi Ferrucci. Liquidity risk and contagion.

Journal of the European Economic Association, 3(3):556–566, 2005.

[12] Péter Csóka and P Jean-Jacques Herings. An axiomatization of the proportional rule in

ﬁnancial networks. Management Science, 67(5):2799–2812, 2021.

[13] Péter Csóka and P Jean-Jacques Herings. Decentralized clearing in ﬁnancial networks.

Management Science, 64(10):4681–4699, 2018.

[14] Darrell Duﬃe. Resolution of failing central counterparties. In Kenneth E. Scott, Thomas

H. Jackson, John B. Taylor (ed.), Making Failure Feasible, chapter 4. Hoover Institution,

Stanford University, 2015.

30

[15] Larry Eisenberg and Thomas H. Noe. Systemic risk in ﬁnancial systems. Management

Science, 47(2):236–249, 2001.

[16] Matthew Elliott, Benjamin Golub, and Matthew O. Jackson. Financial networks and

contagion. American Economic Review, 104(10):3115–3153, 2014.

[17] Helmut Elsinger. Financial networks, cross holdings, and limited liability. Österreichische

Nationalbank (Austrian Central Bank), 156, 2009.

[18] Zachary Feinstein. Financial contagion and asset liquidation strategies. Operations Research

Letters, 45(2):109–114, 2017.

[19] Prasanna Gai and Sujit Kapadia. Contagion in ﬁnancial networks. Bank of England

Working Papers 383, Bank of England, 2010.

[20] Paul Glasserman and H. Peyton Young. How likely is contagion in ﬁnancial networks?

Journal of Banking and Finance, 50:383–399, 2015.

[21] Johannes Jahn. Vector Optimization: Theory, Applications, and Extensions. Springer-

Verlag, 2nd edition, 2011.

[22] Martijn Ketelaars, Peter Borm, and Marieke Quant. Decentralization and mutual liability

rules. Mathematical Methods of Operations Research, 92(3):577–599, 2020.

[23] Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash system. Decentralized Business

Review, page 21260, 2008.

[24] John F. Nash. Equilibrium points in n-person games. Proceedings of the National Academy

of Sciences, 36(1):48–49, 1950.

[25] Erland Nier, Jing Yang, Tanju Yorulmazer, and Amadeo Alentorn. Network models and

ﬁnancial stability. Journal of Economic Dynamics and Control, 31(6):2033–2060, 2007.

[26] Leonard C.G. Rogers and Luitgard A.M. Veraart. Failure and rescue in an interbank

network. Management Science, 59(4):882–898, 2013.

[27] Mirjam Groote Schaarsberg, Hans Reijnierse, and Peter Borm. On solving mutual liability

problems. Mathematical Methods of Operations Research, 87(3):383–409, 2018.

[28] Sachchidanand Singh and Nirmala Singh. Blockchain: Future of ﬁnancial and cyber se-

curity. In 2016 2nd international conference on contemporary computing and informatics

(IC3I), pages 463–467. IEEE, 2016.

[29] Luitgard A.M. Veraart. When does portfolio compression reduce systemic risk? Available

at SSRN 3688495, 2020.

31

[30] Stefan Weber and Kerstin Weske. The joint impact of bankruptcy costs, ﬁre sales and cross-

holdings on systemic risk in ﬁnancial networks. Probability, Uncertainty and Quantitative

Risk, 2(1):9, 2017.

32

