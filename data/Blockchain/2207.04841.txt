TIPS: Transaction Inclusion Protocol with Signaling
in DAG-based Blockchain

Canhui Chen, Xu Chen, Zhixuan Fang

1

2
2
0
2

l
u
J

1
1

]
I

N
.
s
c
[

1
v
1
4
8
4
0
.
7
0
2
2
:
v
i
X
r
a

Abstract—Directed Acyclic Graph (DAG) is a popular ap-
proach to achieve scalability of blockchain networks. Due to
its high efﬁciency in data communication and great scalability,
DAG has been widely adopted in many applications such as
Internet of Things (IoT) and Decentralized Finance (DeFi).
DAG-based blockchain, nevertheless, faces the key challenge of
transaction inclusion collision due to the high concurrency and
the network delay. Particularly, the transaction inclusion collision
in DAG-based blockchain leads to the revenue and throughput
dilemmas, which would greatly degrade the system performance.
In this paper, we propose “TIPS”, the Transaction Inclusion
Protocol with Signaling, which broadcasts a signal indicating
the transactions in the block. We show that with the prompt
broadcast of a signal, TIPS substantially reduces the transaction
collision and thus resolves these dilemmas. Moreover, we show
that TIPS can defend against both the denial-of-service and the
delay-of-service attacks. We also conduct intensive experiments to
demonstrate the superior performance of the proposed protocol.

Index Terms—blockchain, game theory, performance analysis

I. INTRODUCTION

B LOCKCHAIN plays an important role in many ﬁelds

such as ﬁnance, supply chain, and IoT services, thanks to
its advantages of decentralization, persistence, pseudonymity,
and auditability [1]–[3]. However, the poor performance of
(mostly) linear blockchains (e.g., Bitcoin, Ethereum) severely
limits the possible large-scale applications in practice [4]. To
address this challenge, Directed Acyclic Graph (DAG) [5] is
introduced as an alternate structure to address the issue of the
scalability of blockchain. DAG-based blockchain allows multi-
ple blocks or transactions to be appended concurrently without
solving the forks, which achieves high efﬁciency in data
communication and great scalability. Due to these properties,
DAG-based blockchain has been widely adopted in many IoT
scenarios [6]–[10]. DAG-based blockchain, nevertheless, faces
the key challenge of transaction inclusion collision [5]. Due
to the high concurrency and the network delay, miners usually
do not have complete information of the updated blockchain.
Thus, miners often include the same transactions in concurrent
blocks, generating redundant records in the blockchain. The

Canhui Chen

is with

Institute

for

Interdisciplinary

(IIIS), Tsinghua University, Beijing, China. E-mail:

Information
chen-

Sciences
ch21@mails.tsinghua.edu.cn.

Xu Chen is with School of Computer Science and Engineering, Sun
Yat-sen University, Guangzhou, China E-mail: chenxu35@mail.sysu.edu.cn.
Zhixuan Fang is with Institute for Interdisciplinary Information Sciences
(IIIS), Tsinghua University, Beijing, China, and Shanghai Qi Zhi Institute,
Shanghai, China. E-mail: zfang@mail.tsinghua.edu.cn.

Corresponding author: Zhixuan Fang.

collision in transaction inclusion wastes the block capacity
and severely degrades the system performance [11].

Though DAG-based blockchain systems admit high concur-
rency in transaction process, the risk of transaction collision
indeed induces dilemmas on miners’ revenue and system
throughput. The revenue dilemma indicates the difﬁcult sit-
uation in improving miners’ revenue, or, in achieving higher
transaction fees per block. When miners are packing transac-
tions into a block, the intuitive strategy is to select transactions
with high rewards (fees). But concurrent blocks with the
same set of high-fee transactions lead to the split of reward
among miners, which discourages miners from including these
transactions. Indeed, the theoretical analysis in [5] has veriﬁed
that miners would avoid transaction collision by choosing
transactions with lower fees. Such a negative impact would
also degenerate the proﬁt efﬁciency and the quality of service
of the system, as the high value transactions will not be
processed with priority.

On the system level, the throughput dilemma also arises
and implies the difﬁculty in scaling up the system. Since the
network propagation delay is positively correlated with the
block size in the current DAG-based blockchain, packing more
transactions in a single block leads to a larger network propa-
gation delay. The increased network propagation time induces
more collisions and thus wastes the system throughput. In fact,
a similar dilemma in increasing block size has been observed
in linear blockchain systems where network propagation delay
leads to forking [12].

To tackle these issues, in this paper, we propose the Trans-
action Inclusion Protocol with Signaling (TIPS), where we
introduce a lightweight “signal” mechanism in the DAG-based
blockchain. In TIPS, when a miner mines a new block, he will
ﬁrst broadcast a “signal” before broadcasting the block. The
other miners will adjust their transaction inclusion strategies
reacting to the “signal”. A signal has the following two
properties: (i) The size of the signal is small enough for
quick propagation in the network. (ii) The signal provides
information about transactions included in the corresponding
block.

Speciﬁcally, we use a Bloom ﬁlter [13] to generate the
“signal” in the block header. The Bloom ﬁlter can indicate
whether a transaction is in the block. When a miner mines a
new block, it should ﬁrst broadcast the block header as a signal
to the whole network. Since the size of the signal is small,
other miners can receive the signal in a short time. Based
on the signal, other miners can infer which transactions are
included in the new block with high probability. Thus, other
miners are able to avoid the transaction inclusion collision.

 
 
 
 
 
 
the signal

The introduction of TIPS can break down the revenue
dilemma and throughput dilemma. We show this by analyzing
the miners’ transaction inclusion strategy under TIPS. We
model the transaction inclusion process as a non-cooperative
game and investigate the equilibrium strategy. We show that
with the signal information, miners are able to select high
value transactions in equilibrium, which dissolves the revenue
dilemma. In the meantime,
in TIPS effectively
reduces the network propagation time, which allows the imple-
mentation of a huge block size, and thus, breaks the throughput
dilemma. These results are supported by both theoretical
analysis and experimental validation. Beyond the discussion
on performance, we also investigate the security of TIPS and
show that TIPS can defend against existing classic attacks.
The key contributions of the paper are listed as follows:
• We characterize the revenue dilemma and the throughput
dilemma of DAG-based blockchain systems. Speciﬁcally,
miners are suffering from low revenue no matter the
transaction inclusion strategy, while the system through-
put does not increase in the block size. We show this
is due to the transaction collisions in the DAG-based
blockchain system, and that a low network propagation
delay is the key to breaking the dilemmas.

• We propose a novel Transaction Inclusion Protocol with
Signaling (TIPS) in the DAG-based blockchain. TIPS
includes a Bloom ﬁlter in the block header, which serves
as a signal in the mining process and can indicate the
transaction included in the newly-mined block. By sepa-
rating the propagation/veriﬁcation processes of the block
header and block body, TIPS can broadcast the block
header (signal) as soon as possible, which signiﬁcantly
lowers the effective network propagation delay.

• We provide a thorough theoretical analysis of the perfor-
mance and security of TIPS. We adopt a game-theoretic
framework to show that at the Nash equilibrium, with the
prompt signal from TIPS, the system effectively lowers
the network propagation delay, and thus reduces trans-
action collisions. Besides, we also develop a DAG-based
blockchain simulator and conduct intensive experiments.
Both the theoretical analysis and experiment results show
that TIPS can substantially resolve both the revenue and
the throughput dilemmas.

The rest of the paper is organized as follows. In Section
II, we introduce the miners’ transaction inclusion game and
characterize the two dilemmas, namely, the revenue dilemma
and the throughput dilemma. In Section III, we introduce
TIPS, the transaction inclusion protocol with signaling in the
DAG-based blockchain. In Section IV, we show that TIPS can
break down the aforementioned dilemmas. In Section V, we
conduct intensive experiments to demonstrate the efﬁciency of
TIPS. In Section VI, we discuss the possible security threats in
the TIPS. In Section VII, we review related literature. Section
VIII concludes the paper with ﬁnal remark.

2

TABLE I
SUMMARY OF NOTATIONS

Notation

Description

b
h
ǫ
η
X
n
m
λ
∆
fi
p
pi

Number of bits in the Bloom ﬁlter
Number of hash functions in the Bloom ﬁlter
The probability of false positives of the Bloom ﬁlter
The probability of rejecting a valid Bloom ﬁlter
Number of bits that are set to 1 in the Bloom ﬁlter
The maximum number of transactions in a block
Size of the transaction pool
Block production rate
Propagation delay time
Transaction fee of the i-th transaction
Transaction inclusion strategy
Probability of including the transaction i in the strategy

are two dilemmas in the DAG-based blockchain, namely,
the revenue dilemma and the throughput dilemma. From the
miners’ perspective, the revenue dilemma indicates the difﬁcult
situation in improving the miners’ revenue. From the system
perspective, the throughput dilemma reveals the difﬁculty in
scaling up the system. We list the key notations in Section II
and Section IV in Table I.

A. Transaction Inclusion Game

In this paper, we consider a DAG-based blockchain, where
the block generation process follows the Poisson process
with a rate λ. Following the common assumption in previous
literature (e.g., [5], [14]), we denote the maximum network
propagation delay for a block as ∆, which means all nodes
in the blockchain network can receive the newly-mined block
after ∆. Moreover, similar to [5], [15], we assume that miners
in the system are homogeneous in mining power and share
the identical transaction pool. The transaction pool includes
at most m transactions. Due to the block size limit, each
block can contain at most n transactions.1 To maximize
the mining revenue, the miner will decide his transaction
inclusion strategy and pick up some transactions from the
transaction pool and pack them into the mining block to earn
the transaction fees.

We denote a miner’s transaction inclusion strategy as p ∈ P.
m
Here P = {p|0 ≤ pi ≤ 1 and
i=1 pi = n} denotes
the set of transaction inclusion strategies, and pi denotes the
probability of including the transaction i in the new block.
Without loss of generality, we sort the transactions in the
transaction pool in descending order by their transaction fees,
where the transaction fee of the transaction i is denoted as fi.
Then we have f1 ≥ f2 ≥ · · · ≥ fm. As examples, we show
below three typical transaction inclusion strategies:

P

• Random inclusion (prand): p1 = p2 = · · · = pm = n
m .
• Random inclusion with priority (ppriority): p1 ≥ p2 ≥

· · · ≥ pm and p1
f1

= p2
f2

= · · · = pm
fm .

• Top n (ptop): p1 = p2 = · · · = pn = 1 and pn+1 =

pn+2 = · · · = pm = 0.

II. TRANSACTION INCLUSION GAME AND THE DILEMMAS

In this section, we ﬁrst investigate the system model and
there

the transaction inclusion game. We next show that

1Without

there are m
loss of generality, we can always assume that
transactions in the pool and each block will contain n transactions. Practically,
if the transactions are insufﬁcient, we can assume that there are dummy
transactions with zero transaction fees, which does not affect our analysis.

Following the similar setting in [5], we model the miners’
transaction selection as a single-shot
transaction inclusion
game [15], where each miner adopts his transaction inclusion
strategy to maximize his revenue. Since the coinbase transac-
tion reward is independent of the miner’s transaction selection,
for simplicity, we only consider the transaction fee reward in
the miner’s revenue.

The miner’s revenue is analyzed as follows. Consider a
miner A that ﬁnds and propagates a block, which includes a
transaction i. If ι more miners have successfully mined a block
with the same transaction i during the network propagation
period of miner A’s block, we assume that
this miner’s
expected reward from this transaction i is fi/(ι + 1), i.e.,
assuming an equal network advantage for all miners. Note
that such a model of probabilistic and homogeneous network
advantage during the propagation period is common in the
previous study (e.g., [5], [16]). Then the miner’s expected
reward is analyzed in the following lemma.

Lemma 1. The miner’s revenue on one block with transaction
inclusion strategy p given that all the other miners adopt the
strategy p′ is

where

R(p|p′) =

m

i=1
X

pifir(p′

i|∆),

r(p′

i|∆) =

1 − e−λ∆p

′
i

(cid:16)

λ∆p′
i

.

(cid:17)

The proof of Lemma 1 is shown in Appendix A. Besides,
we postpone all proofs of this paper into the Appendix. The
term fi · r(p′
i|∆) in Lemma 1 reﬂects the expected reward for
a miner to include transaction i when all other miners include
transaction i in their blocks with probability p′
i, given network
propagation delay being ∆. Specially, when all miners adopt
the same transaction inclusion strategy p (i.e., the symmetric
case) and there is no futher confusion, we denote the miner’s
revenue as R(p) = R(p|p) for simplicity.

To study the stable transaction inclusion behavior of miners,
we ﬁrst deﬁne the Nash equilibrium and approximate Nash
equilibrium of the transaction inclusion game below.

Deﬁnition 1. The transaction inclusion strategy p∗ is a ξ-
approximate Nash equilibrium of the transaction inclusion
game if

R(p∗) ≥ max
p∈P

R(p|p∗) − ξ.

Specially, when ξ = 0, i.e., R(p∗) ≥ maxp∈P R(p|p∗), the
transaction inclusion strategy p∗ is a Nash equilibrium.

The symmetric equilibrium in the single-shot transaction
inclusion game has been analyzed in [5], which is shown in
the following theorem.

Theorem 1. ( [5]) With the network propagation delay for
the whole block as ∆, the symmetric equilibrium strategy of
the transaction inclusion game is p∗(∆), where

p∗
i (∆) =

min{r−1

(

0,

cl∗
fi |∆
(cid:17)

, 1}, 1 ≤ i ≤ l∗,
l∗ < i ≤ m.

(cid:16)

3

Also, we have

l

Fl(c) =

min{r−1(c/fi|∆), 1} − n,

∀1 ≤ l ≤ m,

i=1
X

l∗ = max{l ≤ m|∀i ≤ l : Fi (fi) ≤ 0},
cl∗ is the root of Fl∗ .

B. Revenue Dilemma Analysis

As discussed in Section I, to achieve a high revenue, miners
are supposed to include transactions with high fees, i.e., to
adopt the “top n” strategy. However, as DAG-based blockchain
allows high concurrency of block generation, every miner
choosing high-fee transactions will result in severe transaction
inclusion collision, which will degrade miners’ revenue. This
is the revenue dilemma due to the collision of included
transactions.

The equilibrium strategy in Theorem 1 is highly related to
the network propagation delay and is indeed a compromised
solution facing the revenue dilemma. We can ﬁnd that the
equilibrium transaction inclusion strategy can be considered
as the “soft top n strategy”, since only the transaction with
top l∗ transaction fees might be included in a new block. A
large network propagation delay ∆ in Theorem 1 will result
in a large l∗. Besides, when the l∗ is large, for example,
l∗ = m, the “soft top n strategy” performs like the random
strategy prand. Below, we show that the random strategy is a
ξ-approximate Nash equilibrium strategy, and ξ represents the
gap between the random strategy and the equilibrium strategy.

i.e., prand is a ξ-

Theorem 2. The random strategy,
approximate Nash equilibrium, where
1 − e−λ∆ n
λ∆ n
m

ξ = n

1
n

n

m

fi −

i=1
X

1
m

m

i=1
X

fi

.

!

Specially, when ∆ → ∞, the random strategy is the Nash
equilibrium.

n
m

−λ∆
λ∆ n
m

For convenience, we denote y(∆) = 1−e

. Note that
y(∆) is monotonically decreasing in ∆, which implies that
the extra revenue from deviating from the random strategy
will decrease as the network propagation delay becomes larger.
Thus the equilibrium transaction inclusion strategy will lean
towards the random strategy. Since broadcasting the whole
block in the blockchain network takes a long time, the equilib-
rium strategy in the practical scenario is similar to the random
strategy. However, the random strategy ignores the difference
between different levels of the transaction fees, resulting in the
dilemma where miners can not include transactions with high
transaction fees. This is the revenue dilemma in DAG-based
blockchain.

C. Throughput Dilemma Analysis

In this section, we study the throughput dilemma. The sys-
tem throughput is measured by transaction per second (TPS).
Intuitively, to achieve high throughput, the block size should
be as large as possible so as to include more transactions in a
block. However, a large block size will lead to a large network

 
propagation delay and result in lots of transaction inclusion
collisions, which will limit the system throughput. This is the
throughput dilemma in DAG-based blockchain.

Here, we ﬁrst analyze the block capacity utilization and
system throughput, and further characterize the throughput
dilemma in DAG-based blockchain We deﬁne the block capac-
ity utilization as the ratio of the number of unique transactions
included in the blocks and the number of total transactions
included in the blocks in long term. The system throughput is
measured by transaction per second (TPS). Then the system
throughput of the DAG-based blockchain is analyzed in the
following theorem.

Theorem 3. The block capacity utilization and the throughput
of the DAG-based blockchain with the transaction inclusion
strategy p and the network propagation delay ∆ are

m −

U(p) =

m
i=1(1 − pi)e−λ∆pi
n(λ∆ + 1)

,

P

respectively.

TPS(p) = λnU(p),

From Theorem 3, we can ﬁnd that to achieve a higher
system throughput, we should enlarge the block size so as
to include more transactions. However, if the block size is
increased, the corresponding network propagation delay ∆ will
also increase, leading to a lower block capacity utilization,
which will further degrade the system throughput. On the other
hand, though decreasing the block size can reduce the net-
work propagation delay and thus increase the block capacity
utilization, there is only a small amount of transactions can
be included in one block, which limits the system throughput.
This is the throughput dilemma in DAG-based blockchain.

III. TRANSACTION INCLUSION PROTOCOL WITH
SIGNALING

To tackle the dilemmas in DAG-based blockchain, we
introduce “TIPS”, i.e., the Transaction Inclusion Protocol with
Signaling. The key features of TIPS are (1) TIPS introduces
a signal to indicate the transactions included in the block. (2)
TIPS broadcast the signal earlier than the whole block.

As a baseline, we will compare TIPS with the standard
DAG-based blockchain protocol (i.e., without TIPS), where the
miners do not obtain any information of the newly-generated
block until they receive the whole block.

A. Bloom Filter in Block Header

A Bloom ﬁlter [13] is a probabilistic data structure that
answers the query of “whether an element is a member of a
set”. It returns a binary answer, i.e., either “True” or “False”.
If the Bloom ﬁlter returns “False”, the element is deﬁnitely
not in the set. However, if the Bloom ﬁlter returns “True”, the
element is a member of the set with high probability.

As the most important feature, TIPS introduces a Bloom
ﬁlter in the header of each block to maintain the information
of transactions in this block. Thus, the Bloom ﬁlter can answer
the query of whether a transaction is in the corresponding
block quickly and with high probability.

4

h

(cid:17)

Next, we examine the performance of a Bloom ﬁlter. The
key metric is the false positive rate of a Bloom ﬁlter, i.e., the
probability that the Bloom ﬁlter returns “True” but the element
is not a member of the set. Consider a Bloom ﬁlter with b bits
and h different hash functions. We assume that the block size
limit is n transactions per block. Thus, we can insert at most
n transactions into the Bloom ﬁlter associated with the block.
The probability of false positives of the Bloom ﬁlter with n
transactions is

ǫ =

1 − e−hn/b

.

(1)

(cid:16)

It is worth mentioning that the representation of one trans-
action in the Bloom ﬁlter always takes a ﬁxed space (i.e.,
b bits) regardless of the size of the transactions. The size
of a Bloom ﬁlter is drastically smaller than the size of the
original block body, due to the property of hash functions. In
the current Bitcoin network, the average block size is 1.2MB,
the average transaction size is 500B, and the average number
of transactions in a block is 2500. As an example, for a Bloom
ﬁlter with b = 20000 bits and h = 5 hash functions, the
false positive probability is 2.17%, which is low enough for
practice. Meanwhile, the total size of the signal is only 2.5KB,
which is less than 1% of the original block size and is small
enough to propagate through the whole network in a short
time.

B. Header-First Block Propagation

in the standard protocol,

To broadcast the signal to the whole network as soon as
possible, we improve the block propagation model. Figure 1
shows the block propagation model in TIPS and the standard
protocol. We can ﬁnd that
the
the propagation of a block (including the
node will start
block header and the block body) only after it receives and
veriﬁes the whole block. On the contrary, TIPS decouples the
propagation/veriﬁcation processes of the block header and the
block body. In TIPS, the node will broadcast the received
header once the veriﬁcation is complete, without waiting to
receive the whole block body. Therefore, TIPS can broadcast
the block header to the whole network in a short time.

Receive block header
Receive block header

Receive block body
Receive block body

validate
validate

validate
validate

Node A
Node A

Node B
Node B

Node C
Node 

(a) Block propagation in TIPS

Receive block header
Receive block header

Receive block body
Receive block body

validate
validate

validate
validate

Node A
Node A

Node B
Node B

Node 
Node C

(b) Block Propagation in standard protocol

Fig. 1. Block propagation model in TIPS and the standard protocol

We explain the detailed block propagation model of TIPS
as follows. For a node A, upon receiving a message, there are
two possible cases:

1) When node A receives a new block header BHc of
block Bc, it validates BHc and checks whether the hash
value of the block header satisﬁes the PoW puzzle. If
the block header BHc is valid, node A should broadcast
BHc as soon as possible. Note that
the validation
process for the block header is not time-consuming and
the size of the block header is small. Therefore, the block
header BHc can be propagated to the whole network in
a short time.

2) When node A receives a new block body BBc of block

Bc, it validates BBc as follows:

• Block Header Existence: If the miner did not receive
the corresponding block header BHc before, he
should reject the block body immediately since he
can not validate the PoW of the block.

• Bloom ﬁlter Validation: If the Bloom ﬁlter in the
block header does not match the transactions in the
block body, the block will be marked as “invalid”
and be rejected.

If the block body is valid, node A should broadcast BBc
as soon as possible.

Besides, TIPS also helps to optimize the block transmission
the
process from the following perspectives. (i) In TIPS,
received signal can indicate the transactions in the newly-
mined but unreceived block. Therefore, TIPS allows the miners
to pre-verify the transactions that the signal indicates when
receiving the signal. In this way, the miners can speed up
the veriﬁcation process when receiving the whole block, and
therefore speed up the block transmission process. (ii) TIPS
separates the veriﬁcation/propagation processes of the block
header and the block body. Since the block header is an
identiﬁcation of the whole block, the miners that received the
block header without the block body can try to pull the block
body from the connected neighbors instead of just passively
waiting for the block propagation, which can also speed up the
block transmission process. (iii) The independent header-ﬁrst
propagation in TIPS also slightly accelerates the broadcast of
the block body, as the block body broadcast does not need to
wait for the neighbor’s conﬁrmation of the received header.

C. Mining Process in TIPS

We denote the set of transactions hitting the Bloom ﬁlter
of block Bc, i.e., transactions that are reported to be included
in the block by the Bloom ﬁlter, as T Hc. We denote the set
of transactions that are actually included in the block body
of block Bc as T Bc. Since all included transactions will be
conﬁrmed by the Bloom ﬁtler, we have that T Bc ⊂ T Hc.
Speciﬁcally, we have that E(|T Bc|)/E(|T Hc|) = 1 − ǫ, where
ǫ is the false positive probability of the Bloom ﬁlter in (1).

In this paper, we consider the following mining reward rule,
which is common in practices (e.g., [16]). If there are k miners
that include the same transaction i with fee fi in their blocks,
the transaction fee will be rewarded to the miner who ﬁrst
mines the block. Note that our analysis technique applies to
more complicated rules.

The mining process is shown in Algorithm 1, visualized
in Figure 2. We use ∆ to denote the propagation time of a

5

 ! + " (cid:28621)(cid:28595)Receive signal and update transactions  !" from pool

updated

  (cid:28621)(cid:28595)Signal propagation delay

 !"

 #"

Transaction pool

TIPS:

Standard:

 (cid:28621)(cid:28595)Block propagation delay

 !(cid:28621)One of the miners mines a new block  !

including transaction set  !"

 ! + "(cid:28621)(cid:28595)Remove transactions  !" from pool

included

 !"

Transaction pool

removed

 !"

Transaction pool

Fig. 2. Mining process in TIPS

block, and τ to denote the propagation time of a block header
(in which the signal is included). Since the size of Bloom ﬁlter
is much smaller than a block body, we have τ ≪ ∆. BLc is
the Bloom ﬁlter in BHc, T Hc is the set of transactions hitting
BLc in transaction pool, and T Bc is the set of transactions
included in BBc.

In the following, we specify the mining process, espe-
cially the transaction selection. In general, a miner maintains
an expected value for each transaction in his transaction
pool, and selects transactions for mining according to some
speciﬁc transaction inclusion strategies. In TIPS, fi denotes
the expected value of transaction i instead of its original
transaction fee. The expected value of the transaction reﬂects
the expected reward that a miner can obtain from including
this transaction in his block and will change during the mining
process. Specially, the initial expected value of the transaction
is exactly the corresponding transaction fee. The miner updates
his transaction pool and the expected value of transactions in
the following two cases.

The ﬁrst case happens when the miner receives a block
header BHc (after the signal propagation delay τ ). If the block
header BHc is valid, the miner should update the expected
value of the transactions in T Hc. If a transaction i hits the
Bloom ﬁlter of a valid signal, its expected value should be
multiplied by ǫ, i.e., updated to ǫfi, because the Bloom ﬁlter
implies that the probability that the transaction i is not included
in the new block is only ǫ.

The second case happens when the miner receives a block
body BBc (after the block propagation delay ∆). If the block
body is valid and matches the block header, the miner should
remove the transactions that are included in the block body
from the transaction pool. Then, the miner needs to recover
the expected value of transactions due to false positive results
from the Bloom ﬁlters, i.e., transactions that hit the Bloom
ﬁlter but are not included in the block body. Denote U \V =
{x ∈ U and x /∈ V }, then for all transactions i ∈ T Hc\T Bc,
the expected value of transaction i should be update to fi/ǫ.
However, if the block body is invalid, we should update the
expected values of all the transactions that hit the Bloom ﬁlter
of the block header BHi by dividing the false positive rate,
i.e., ∀i ∈ T Hi, the expected value of transaction i should be
updated to fi/ǫ.

There exists a hard-coded timeout for the block header

 
 
Algorithm 1: Mining process in TIPS
1 on Receive a block header BHc
2

the block header BHc is valid then

if

3

4

5

Extract Bloom ﬁlter BLc from BHc
Select the transactions hitting BLc from transaction pool,

i.e., T Hc

Update the expected value of the transaction in T Hc.

Speciﬁcally, the expected value of transaction txi will be
ǫfi.

6 on Receive a block body BBc
7

if the block body BBc is valid and matches the block header

BHc then

8

9

10

11

Remove the transactions that are included in the block

body, i.e., T Bc, from the transaction pool.

Update the expected value of the transactions that hit the
Bloom ﬁlter in block header but are not included in the
block body. Speciﬁcally, ∀i ∈ (T Hc/T Bc), the expected
value of transaction i should be updated to fi/ǫ.

update the expected values of all the transactions that hit

the Bloom ﬁlter of the block header BHc to their
original transaction fee, that is, ∀i ∈ T Hc, the expected
value of transaction i should be updated to fi/ǫ.

else

12 on The block header BBc is expired
13

Mark the block header as “expired”.
Update the expected values of all the transactions that hit the

14

Bloom ﬁlter of the block header BHc to their original
transaction fee, that is, ∀i ∈ T Hc, the expected value of
transaction i should be updated to fi/ǫ.

15 on Mine a new block Bc
16

Broadcast the block header BHc to all nodes in the blockchain

network

17

18

Broadcast the block body BBc to all nodes in the blockchain

network

Remove the transactions in Bc, i.e., T Bc, from the transaction

pool.

19 on Receive a transaction tx
20

Initiate the expected value of the transaction to be its

transaction fee

Add the transaction into the transaction pool.
if the transaction pool exceeds it limit then

Drop the transaction with the lowest expected value.

21

22

23

[17]. When receiving a block header BHc, a miner updates
the expected transaction values accordingly, and starts a time
counting. If the miner has not received the corresponding block
body until a certain timeout period, the block header will be
marked as “expired”. Then, the miner will recover the expected
values of all the transactions that hit the Bloom ﬁlter of the
block header BHi, that is, ∀i ∈ T Hi, the expected value of
transaction i should be updated to fi/ǫ.

To mine a new block,

the miner will select a subset
of transactions from the transaction pool based on certain
transaction inclusion strategies, which is mentioned in Section
II-A and will be further discussed in the following section.

D. Potential Cost of TIPS

In this section, we will discuss the potential cost of intro-
ducing TIPS in the DAG-based blockchain and show that the
extra computation overhead and the communication overhead
are insigniﬁcant.

Computation Overhead: In TIPS, the extra computation
overhead for the miners is from (i) maintaining the expected
value for the transactions in the pool, and (ii) constructing
and validating the Bloom ﬁlter in the block header. We will

6

then show that the computation overhead is negligible. First,
to maintain the expected value for the transactions, the miners
can use some lookup data structure, such as the hash map,
to update the transaction’s expected value in O(1). Second,
when mining a new block, the miners need to construct the
Bloom ﬁlter in the block header. When receiving a newly-
mined block, the miners also need to validate the Bloom ﬁlter,
and this validation can be done by constructing the Bloom
ﬁlter based on the transactions in the block body. We next
show that constructing the Bloom ﬁlter is computationally
cheap. For a block including 2000 transactions, the extra time
for constructing the Bloom ﬁlter with n = 20000 bits and
h = 5 hash functions, and validating it is only 6µs on a
PC with a CPU of Intel i7-1165G7. Therefore, we can claim
that the extra computation overhead for introducing TIPS is
insigniﬁcant.

Communication Overhead: In TIPS, the miners need to
broadcast the block header including the Bloom ﬁlter as the
signal before broadcasting the block body, which will result
in extra communication overhead. As shown in Section III-A,
the total size of the signal is only 2.5KB, which is less than
1% of the original block size. Besides, in practice, we can use
blockchain relay networks to further accelerate the propagation
of the block header [18]. Therefore, the extra communication
overhead for introducing TIPS is also insigniﬁcant.

IV. TIPS BREAKS DOWN THE DILEMMAS

In this section, we ﬁrst the equilibrium of the transaction
inclusion game with TIPS and show that TIPS can lower
the effective network delay and thus make the equilibrium
transaction inclusion strategy approach to the top n strategy.
In this way, we show that TIPS can break the revenue and
throughput dilemma.

A. Lowering Effective Network Delay

We ﬁrst study the equilibrium of the transaction inclusion
game with TIPS. The following theorem shows an interesting
result that when the false positive rate of the Bloom ﬁlter is
low enough, the equilibrium is similar to the case in Theorem
1, but with the effective network delay drastically decreased
to τ , where τ is the network propagation delay for the signal
in TIPS.

Theorem 4. If the false positive probability of the Bloom ﬁlter
satisﬁes ǫ < fm
, the symmetric equilibrium in TIPS is p∗(τ ),
f1
where

p∗
i (τ ) =

min{r−1

cl∗
fi |τ

(

0,

(cid:16)

, 1}, 1 ≤ i ≤ l∗,
l∗ < i ≤ m.

(cid:17)

Also, we have

l

Fl(c) =

min{r−1(c/fi|τ ), 1} − n,

∀1 ≤ l ≤ m,

i=1
X

l∗ = max{l ≤ m|∀i ≤ l : Fi (fi) ≤ 0},
cl∗ is the root of Fl∗ .

Proof. As shown in Figure 2, once a miner successfully mines
a new block including a set of transactions T, he will broadcast

the signal immediately. Other miners will receive the signal
after the signaling propagation delay τ . If other miners would
not include any transaction in T after receiving the signal, then
Theorem 2 can be proved. Consequently, to prove the above
theorem, it is sufﬁcient to show that when ǫ < fm
, it is not
f1
rational for other miners to include any transaction in T after
receiving the signal.

We consider the opposite holds, that is, other miners will
include at least one of the transactions in T in their block
with a a positive probability, even after they have received
the corresponding signal but not received the whole block
yet. In this situation, we denote the expected reward for
a miner to include transaction i given that other miners
include transaction i in their blocks with probability pi is
fi ·˜r∗(pi). Then we have ˜r∗(p) < r(p|τ ). Besides, ˜r∗(·) is also
monotonically decreasing, so is its inverse function ˜r∗−1(·).
We analyze the situations before receiving the signal (Situation
A) and after receiving the signal (Situation B) as follows.

Situation A: Before receiving the signal. The transactions
in the pool are sorted in descending order of their fees, i.e.,
SA = {tx1, tx2, . . . , txm} with the corresponding subscript
indexs of sA = {1, 2, . . . , m}. According to Theorem 1, we
know that pA is a symmetric equilibrium, where

pA
i =

min{˜r−1

cl∗
fsA(i)

(

0,

(cid:16)

, 1}, 1 ≤ i ≤ l∗
A,
l∗
A < i ≤ m,

(cid:17)

and we have

l

F A

l (c) =

min{˜r−1(c/fsA(i)), 1} − n,

∀1 ≤ l ≤ m,

i=1
X

l∗
A = max{l ≤ m|∀i ≤ l : F A
i
A is the root of F A
cl∗
l∗ .

fsA(i)

≤ 0},

(cid:0)

(cid:1)

Therefore, a transaction i will be included only when i ≤ l∗
A.
Situation B: After receiving the signal. The corresponding
signal will be broadcast to the whole network. Without loss of
generality, we consider transaction tx˜i, where ˜i ≤ l∗
A. After the
miner includes tx˜i in its block and the corresponding signal
has been received by other miners, the expected value of tx˜i,
i.e., e˜i, will be ǫf˜i. Since ǫ < fm/f1, we have

ǫf˜i ≤ ǫf1 < fm ≤ fl∗

A+2.

Then the transactions in the pool sorted in descending order
of their expected values will be

SB = {tx1, ··, tx˜i−1, tx˜i+1, ··, txl∗ , txl∗+1, ··, tx˜i, ··, txm},

with the corresponding subscript indexs of

sB = {1, 2, ··,˜i − 1,˜i + 1, ··, l∗

A, l∗

A + 1, ··,˜i, ··, m}.

According to Theorem 1, we know that pB is a symmetric
equilibrium, where

pB
i =

min{˜r−1

cl∗
fsB (i)

(

0,

(cid:16)

, 1}, 1 ≤ i ≤ l∗,
l∗ < i ≤ m,

(cid:17)

7

and we have

l

F B

l (c) =

min{˜r−1(c/fsB (i)), 1} − n,

∀1 ≤ l ≤ m,

i=1
X

l∗
B = max{l ≤ m|∀i ≤ l : Fi (fi) ≤ 0},
B is the root of F A
cl∗
l∗ .

Then we have
F B
A+1(fsB (l∗
l∗
∗
A+1

l

=

min{˜r−1

i=1
X
= min{˜r−1

A+1)) − F A
A+1(fsA(l∗+1))
l∗
l
, 1} −

∗
B+1

A+1

fl∗
fsA(i) (cid:19)

i=1
X
, 1} − min{r−1

(cid:18)
A+2

fl∗
fl∗

A+1

(cid:18)
=1 − min{˜r−1

A+2 (cid:19)
fl∗
f˜i (cid:19)
Therefore, we have F B
A+1(fsB (l∗
l∗
Index(tx˜i) > l∗

(cid:18)

, 1} ≥ 0

min{˜r−1

, 1}

B+1

fl∗
fsB (i) (cid:19)
, 1}

(cid:18)

A+1

fl∗
f˜i (cid:19)

(cid:18)

A+1)) > 0, which implies that
A + 1 > l∗
B.

Thus, transaction tx˜i would not be included in any block
after receiving the corresponding signal, which contradicts the
previous assumption. The proof is thus completed.

In the condition ǫ < fm/f1 in Theorem 4, ǫ denotes the
false positive probability of the Bloom ﬁlter, f1 denotes the
highest transaction fee, and fm denotes the lowest transaction
fee. This condition implies that when the spread of the trans-
action fee is large, we need a Bloom ﬁlter with high precision,
i.e., low false positive probability, to achieve the equilibrium
strategy in Theorem 4. Intuitively, when ǫ < fm/f1, once a
transaction i with fee fi(fm ≤ fi ≤ f1) hits the Bloom ﬁlter,
its expected value will be updated to ǫfi, where ǫfi < fm. In
this case, other miners would avoid including transaction i in
their newly-mined block, and thus the equilibrium strategy in
Theorem 4 holds.
Remark: TIPS shortens effective network delay. Compared
with the equilibrium in Theorem 1, we ﬁnd that in TIPS, after
the time period τ of the signal propagation, the transactions
included in the newly-mined block will not be included by
any rational miner. Therefore, TIPS shortens the effective
network propagation delay from the block broadcast time ∆
to the drastically smaller signal broadcast delay τ (τ ≪ ∆),
because as mentioned in Section III-A, the size of the signal
can be smaller than 1/100 the size of the whole block. The
equilibrium in Theorem 4 holds in TIPS when the Bloom
ﬁlter’s false positive is small enough, i.e., ǫ < fm/f1. This
implies that when the Bloom ﬁlter’s false positive is small
enough, the signal in TIPS can provide information which is
precise enough for miners to avoid transaction collisions. We
will next show that this condition on the Bloom ﬁlter is not
restrictive in real-world blockchain systems.

To see that the condition of ǫ < fm/f1 is practical, we col-
lect the data from Bitcoin [19] and investigate the distribution
of the transaction fees. Bitcoin admits one of the most popular
blockchain transaction markets,
the
transaction fee statistics in Bitcoin is representative enough.
We ﬁnd that in realistic blockchain systems like Bitcoin, there

thus, we believe that

104

90th Percentile
50th Percentile
10th Percentile

14

12

10

8

6

4

2

i

)
s
h
s
o
t
a
S

(

e
e
f

n
o
i
t
c
a
s
n
a
r
t

0

2021/01/01

2021/01/16

2021/01/31

2021/02/15

2021/03/02

2021/03/17

2021/04/01

2021/04/16

Fig. 3. Distribution of transaction fees in Bitcoin

exist few transactions with unnecessarily high transaction fees
and few transactions with extremely low transaction fees. To
avoid the impact of this abnormal transaction fee, we focus on
the 90th percentile and the 10th percentile for transaction fees
of the transactions included in the block, which is visualized
in Figure 3. We have that

ω = min

10th percentile
90th percentile

= 0.0304.

As mentioned in Section III-A, if we allocate 8 bits in the
Bloom ﬁlter for a transaction in the pool, i.e., b/n = 8,
the false positive probability ǫ = 0.0217, which is smaller
than ω deﬁned above. This implies that the condition that
the false positive probability of the Bloom ﬁlter should be
small enough, i.e., ǫ < fm/f1, in Theorem 4, is almost always
satisﬁed in real-world blockchain systems. Hence, we consider
a scenario where the condition ǫ < fm/f1 is always satisﬁed
in the following discussions.

B. Approaching Top n Strategy

Here, we will show that by lowering the effective network
delay, the equilibrium transaction inclusion strategy in TIPS
approaches to the top n strategy, which makes it possible for
TIPS to break down the dilemmas in DAG-based blockchain.
We ﬁrst show that the top n strategy in TIPS is an η-
approximate Nash equilibrium strategy, and η represents the
gap between the top n strategy and the equilibrium strategy.

Theorem 5. The top n strategy, i.e., ptop is an η-approximate
Nash equilibrium, where

η ≤

n

1 −

1 − e−λτ
λτ

(cid:18)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

fn

.

(cid:19)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

The equation holds if and only if the transactions are homo-
geneous, that is, the transaction fees are the same. Specially,
when τ → 0, the top n strategy is the Nash equilibrium.

−λτ

For convenience, we denote that g(τ ) = 1 − 1−e
λτ

. Note
that g(τ ) is monotonically increasing in τ , which implies
that the extra revenue from deviating from the top n strategy
will decrease as the effective propagation delay becomes
smaller and the equilibrium transaction inclusion strategy will
gradually converge to the top n strategy. The effective network
propagation delay in TIPS is τ , which is drastically small
enough. Therefore, the top n strategy in TIPS is a good ap-
proximation equilibrium strategy. Besides, we show that when
the effective network propagation delay τ is smaller enough,
the top n strategy in TIPS can be the unique equilibrium
strategy, which is shown in the following theorem.

8

Theorem 6. The top n strategy, i.e., ptop is the unique Nash
equilibrium when

τ ≤

1
λ

ϕ−1

fn+1
fn (cid:19)

,

(cid:18)

(2)

where ϕ(x) = 1−e
x

−x

, and ϕ−1(x) is its inverse function.

Theorem 5 and Theorem 6 show that the top n strategy is
very possible to be the equilibrium strategy in TIPS, and is
at least a good approximation transaction inclusion strategy,
because the effective network propagation delay in TIPS τ is
drastically small enough since we only need to broadcast a
small-size signal. Therefore, we adopt the top n strategy in
TIPS in the following analysis.

C. Breaking Down the Revenue Dilemma

The analysis above shows that breaking down the revenue
dilemma, i.e., achieving the top n strategy, is difﬁcult, because
the top n strategy is the Nash equilibrium strategy only if
the network delay is very small. This is not practical in
the standard protocol (i.e., without TIPS) since broadcasting
the whole block in the blockchain network takes a long
time. However, TIPS drastically lowers the effective network
propagation delay, making the top n strategy feasible, which
breaks down the revenue dilemma.

Figure 4 shows the comparison of equilibrium strategies
with TIPS and the standard protocol, under a moderate pa-
rameter τ = 0.01∆, while the Bloom ﬁlter is usually much
less than 1% of the size of the block body (See Section V
for detailed experiment set up). Figure 4 greatly supports
that the top n strategy is a good approximation transaction
inclusion strategy in TIPS, while the equilibrium strategy in
the standard protocol (i.e., without TIPS) gradually converges
to the random strategy when the network propagation delay is
large.

y
t
i
l
i

b
a
b
o
r
p

y
t
i
l
i

b
a
b
o
r
p

y
t
i
l
i

b
a
b
o
r
p

y
t
i
l
i

b
a
b
o
r
p

1

0.5

0

0

1

0.5

0

0

1

0.5

0

0

1

0.5

0

0

Equilibrium Strategy with Network Propagation Delay  =100 in Standard Protocol

10

20

30

40

50

60

70

80

90

100

Equilibrium Strategy with Network Propagation Delay  =100 in TIPS

10

20

30

40

50

60

70

80

90

100

Equilibrium Strategy with Network Propagation Delay  =10 in Standard Protocol

10

20

30

40

50

60

70

80

90

100

Equilibrium Strategy with Network Propagation Delay  =10 in TIPS

10

20

30

50
transaction indexes sorted in descending order by expected value

40

70

60

80

90

100

Fig. 4. Equilibrium strategy with different network propagation delay

To demonstrate the efﬁciency of TIPS under the revenue
dilemma, we investigate the performance of the equilibrium
strategy under TIPS as follows.

Deﬁnition 2. The efﬁciency of the equilibrium strategy of
the transaction inclusion game in the DAG-based blockchain
under the revenue dilemma is deﬁned as the ratio of the
the
miners’ revenue R under the equilibrium strategy of
transaction inclusion game and the highest miners’ revenue

 
 
achieved by any transaction inclusion strategy, which is shown
as follows:

Eﬃciency(R) =

Revenue of Equilibrium
Revenue of optimal strategy

.

(3)

Then we have the following result, which can demonstrate

the high efﬁciency of TIPS.

Theorem 7. The efﬁciency of the equilibrium strategy of the
transaction inclusion game in the DAG-based blockchain with
TIPS under the revenue dilemma is

Efﬁciency(R) ≥

(1 − e−λτ )
⌊ m
n ⌋
k=0

.

(λτ )k
k! e−λτ
we

(cid:17)
have

⌊ m

n ⌋ −
(cid:16)
Theorem

7,

to

P

According

that
limτ →0 Efﬁciency(R) = 1. This is because when τ → 0,
the top n strategy ptop is the unique Nash equilibrium as
shown in Theorem 6. Besides, based on Lemma 1, we have
n
lim∆=τ →0 R(ptop) =
i=1 fi, which implies that the miner
can also obtain the highest transaction fee reward. Thus TIPS
can achieve a near-optimal miners’ revenue, and therefore
can efﬁciently break down the revenue dilemma.

P

D. Breaking Down the Throughput Dilemma

TIPS breaks the throughput dilemma by avoiding collision
through quickly delivering a small signal to the network. As
mentioned in Section III-A, the size of the Bloom ﬁlter is
much smaller compared to the block size, and it is independent
to the transaction size. In this case, we can increase the block
size, while the broadcast time of the signal remains almost the
same. Since TIPS greatly shortens the effective network delay,
according to Theorem 3, a smaller network effective delay ∆
contributes to a high block capacity utilization and thus a high
system throughput. This makes it possible to contain more
transactions in the block (i.e., a larger n) without signiﬁcantly
sacriﬁcing the block capacity utilization. Thus, TIPS can break
down the throughput dilemma.

From Theorem 3, we know that the system throughput
increases with a large block size n. To further observe the
impact of TIPS on the system throughput, we consider the
limit of throughput, that is, the maximum throughput that
the system can achieve by increasing the block size,
i.e.,
limn→∞ T P S(p, n). We denote ∆(n) as the network propaga-
tion delay for a block of size n. As discussed in Section IV-B,
the equilibrium transaction
with the introduction of TIPS,
inclusion strategy approach to the top n strategy, i.e., ptop.
Thus, we consider the limit of throughput when the miners
take the top n transaction inclusion strategy in the following
lemma.

Lemma 2. The limit of
the DAG-based
blockchain with the top n transaction inclusion strategy ptop
is

throughput of

lim
n→∞

T P S(ptop, n) = lim
n→∞

where d∆(n)

dn

is the derivative of ∆(n).

1
d∆(n)
dn

,

In Lemma 2, d∆(n)

denotes the marginal network propaga-
tion time due to an extra transaction in the block. Empirical

dn

9

results show that the marginal network propagation time for
each KB of data is a constant, e.g., 80ms for each extra KB
of Bitcoin block [20]. We compared the limit of throughput
of TIPS and the standard protocol below.

limn→∞ T P STIPS(ptop, n)
limn→∞ T P SStandard(ptop, n)

=

=

limn→∞

limn→∞

1
dτ (n)
dn
1
d∆(n)
dn

= lim
n→∞

d∆(n)
dn
dτ (n)
dn

transaction size
ς bits

,

(4)
where ς denotes the number of bits per transaction in the
Bloom ﬁlter. In (4), we see that the throughput ratio between
the standard protocol and TIPS is essentially the ratio between
the size of the needed broadcast for a marginal transaction.
Thus, the standard protocol is limited by the broadcast of
the additional
transaction, while TIPS is limited only by
the broadcast of its signal (with a much smaller data size).
Practically, a Bloom ﬁlter with ς = b/n = 8 can achieve a
false positive probability of 2.17%, which is practical enough
in TIPS. While the average transaction size in Bitcoin is
500 KB. Therefore, theoretically, the ratio of the limit of
throughput in TIPS and the standard protocol can be as large
as 5 × 105. This huge ratio shows the potential of TIPS in
breaking the throughput dilemma.

TPS in Standard Protocol
TPS in TIPS

1000

2000

3000

Throughput Dilemma in non-TIPS

4000

5000
Number of Transactions per Block

6000

7000

8000

9000

10000

(a) TPS in TIPS and Standard Protocol

Utilization in Standard Protocol

Utilization in TIPS

1000

800

600

400

200

S
P
T

0

0

1

n
o

i
t

a
z

i
l
i
t

U
y
t
i
c
a
p
a
C
k
c
o
B

l

0.8

0.6

0.4

0.2

0

0

1000

2000

3000

4000

5000
Number of Transactions per Block

6000

7000

8000

9000

10000

(b) Utilization in TIPS and Standard Protocol

Fig. 5. Breaking down the throughput dilemma with TIPS

Figure 5 shows that increasing the block size will drastically
reduce the block capacity utilization due to the increasing
the low utilization
transaction inclusion collision and that
further limits the system throughput. However, by broadcasting
the almost accurate signal from the most recent header in
a short
time, TIPS efﬁciently avoids transaction inclusion
collision, contributing to a high utilization, and thus greatly
boosts the system throughput.

To further demonstrate the efﬁciency of TIPS under the
throughput dilemma, we investigate the performance of the
equilibrium strategy of the transaction inclusion game with
TIPS as follows.

 
 
Deﬁnition 3. The efﬁciency of the equilibrium strategy of
the transaction inclusion game in the DAG-based blockchain
under the throughput dilemma is deﬁned as the ratio of the
TPS under the equilibrium strategy of the transaction inclu-
sion game and the highest TPS achieved by any transaction
inclusion strategy, which is shown as follows:

Eﬃciency(TPS) =

TPS of Equilibrium
TPS of optimal strategy

.

(5)

Then we have the following results.

Theorem 8. The efﬁciency of the equilibrium strategy of the
transaction inclusion game in the DAG-based blockchain with
TIPS under the throughput dilemma is

Efﬁciency(T P S) ≥

(1 − e−λτ )
⌊ m
n ⌋
k=0

.

(λτ )k
k! e−λτ
we

(cid:17)
have

⌊ m

n ⌋ −

(cid:16)

to

8,
P

Theorem

According

that
limτ →0 Efﬁciency(T P S) = 1, which is consistent with
Theorem 3. In Theorem 3, we have lim∆=τ →0 U (p) = 1,
which implies that TIPS can achieve an extremely high block
capacity utilization. Thus, TIPS can achieve near-optimal
TPS, and therefore can efﬁciently break down the throughput
dilemma.

V. EXPERIMENT RESULTS

In this section, we conduct experiments to demonstrate the

performance of TIPS and validate our analysis.

We develop a DAG-based blockchain simulator in Python
using SimPy [21]. We implement the basic inclusive protocol
[5] in the simulator, which is one of the most famous DAG-
based blockchain protocols. The implementation is sufﬁciently
representative because TIPS is a robust “add-on” design, which
can be applied to most of the current DAG-based blockchain
protocols, such as Conﬂux [22] and CDAG [11]. We have
realized all designed protocols in TIPS in the simulator,
including the block propagation model, the construction and
validation of the Bloom ﬁlter, the operation of maintaining
the expected value of the transactions in the transaction
pool, and different transaction inclusion strategies. We use a
Python package “pybloom-live” [23] as the implementation
of the Bloom ﬁlter data structure in the TIPS. There are 10
homogeneous miners in the simulators, which are connected
to a P2P network. Each miner will maintain a local version of
the transaction pool and will select some transactions in the
pool based on the given transaction inclusion strategy. With
this simulator, we will compare the system performance of the
standard inclusive protocol (without TIPS), and protocol with
TIPS under different transaction inclusion strategies.

The experimental conﬁguration is as follows. We set the
block size to be 1MB, which is the current block size limitation
in Bitcoin. With the average transaction size being 500 bytes,
i.e., n = 2000.
we put 2000 transactions in one block,
Besides, we assume the size of the transaction pool to be
m = 10000. The propagation delay for the whole block is
a random variable following the normal distribution with the
expectation as ∆ = 10, and the propagation delay for the
signal is a random variable following the normal distribution

10

with the expectation as τ = 0.1. The block generation rate
of the DAG-based blockchain system λ ranges from 0.1 to 1.
The arrival of the transaction follows the Poisson process with
the transaction fee drawn uniformly from [0, 1].

In Figure 6 to Figure 9, results of ptop, ppriority, prand and
p∗ correspond to the cases when all miners adopt strategies
ptop,ppriority, prand and the equilibrium strategy in the stan-
dard protocol, respectively. Meanwhile, results of p∗
signal and
ptop
signal represent the cases when all miners adopt the equilib-
rium strategy and the ptop strategy in TIPS, respectively.

From Figure 6, we can ﬁnd that TIPS always achieves high
utilization and the utilization in TIPS is not sensitive to the
increase of the block generation rate. This is because in the
standard protocol, a higher block generation rate means that
more blocks will be generated during the network propagation
delay ∆, leading to more transaction inclusion collisions and
lower block capacity utilization. This phenomenon is also
consistent with Theorem 3, where the utilization U is mono-
tonically decreasing with the generation rate λ when other
parameters are ﬁxed. On the contrary, since TIPS drastically
lowers the effective network propagation delay, it efﬁciently
avoids the transaction inclusion collision and greatly improves
the utilization.

Figure 7 shows the system throughput (TPS) of different
transaction inclusion protocols, from which we ﬁnd that the
throughput increases with the block generation rate. This is
consistent with Theorem 3, i.e., the system throughput (TPS)
is monotonically increasing with the block generation rate
λ. Besides, from Figure 7, we can also ﬁnd that TIPS can
always achieve a higher system throughput compared to the
standard protocol, which demonstrates that TIPS effectively
breaks down the throughput dilemma. This is because TIPS
greatly improves the block capacity utilization as shown in
Figure 6, and therefore can process more distinct transactions
than the standard protocol.

Figure 8 shows that TIPS can achieve a signiﬁcantly higher
miners’ revenue compared to the standard protocol. This is
because transaction inclusion collision will split the transaction
fee reward and thus lower the miners’ revenue. Besides, the
miners’ collision-avoiding transaction inclusion strategies in
the standard protocol tend to include cheap transactions, which
also hurts miners’ revenue. In the meantime, TIPS avoids
the transaction inclusion collision and encourages miners to
include the transactions with the highest fees, which improves
the miners’ revenue. This validates the claim that TIPS can
effectively break down the revenue dilemma.

Figure 9 shows the average transaction conﬁrmation time
for transactions with different transaction fees. Firstly, the
average transaction conﬁrmation time in TIPS is signiﬁcantly
shorter than that of other protocols. This is because TIPS can
achieve a higher system throughput, which means that more
transactions can be processed in a short time. Secondly, TIPS
guarantees that the transactions with higher transaction fees
can be conﬁrmed in a shorter time, since TIPS encourages the
miners to include the transactions with the highest fees. The
above two properties of TIPS together guarantee a good user
experience.

Besides, we further investigate the impact of the Bloom

1

0.9

0.8

0.7

0.6

0.5

0.4

n
o

i
t

a
z

i
l
i
t

u

0.3

0.2

ptop
ppriority
prand
p*
p*

signal

ptop
signal

0.4

0.6
block generation rate 

0.8

1

 (block per second)

)
d
n
o
c
e
s

r
e
p

n
o

i
t
c
a
s
n
a
r
t
(

S
P
T

t

u
p
h
g
u
o
r
h

t

2000

1500

p

p

p

p

p

top

priority

rand

equilibrium

signal

1000

p*

signal

500

0
0.2

0.4

0.6
block generation rate 

0.8

1

 (block per second)

1600

1400

1200

1000

800

600

k
c
o
b

l

e
n
o
n
o

e
u
n
e
v
e
r

400

0.2

11

p

p

p

top

priority

rand

p*
p*

signal
top
signal

p

0.4

0.6
block generation rate 

0.8

1

 (block per second)

Fig. 6. Utilization of different transaction inclusion
protocols

Fig. 7.
protocols

TPS of different

transaction inclusion

Fig. 8. Miners’ revenue of different transaction
inclusion protocols

e
m

i
t

n
o
i
t
a
m

r
i
f
n
o
c

n
o
i
t
c
a
s
n
a
r
t

80

60

40

20

0

ptop
ppriority
prand
p*
*
signal
ptop
signal

p

0.0-0.1

0.1-0.2

0.2-0.3

0.3-0.4

0.4-0.5

0.5-0.6

0.6-0.7

0.7-0.8

0.8-0.9

0.9-1.0

transaction fee distribution

3

2.5

2

1.5

1

0.5

)

B
K

(

e
z
s

i

r
e
t
l
i
f

m
o
o
b

l

0

0

660

640

620

600

580

560

540

520

k
c
o
b

l

e
n
o
n

i

e
u
n
e
v
e
r

0.01

0.02

0.03

0.04

0.05

0.06

0.07

0.08

0.09

0.1

Bloom Filter's False Positive Probability

Fig. 9. Average transaction conﬁrmation time under different transaction
inclusion protocols

Fig. 10. Experimental results with different Bloom ﬁlters’ false positive
probabilities

ﬁlter’s false positive probability, which is shown in Figure 10.
We can ﬁnd that a small Bloom ﬁlter has a high probability
of false positive, and can be broadcast to the network in a
short time, but will lead to the following drawbacks: (1) When
the false positive probability is high, there are a number of
transactions that hit the Bloom ﬁlter but are not included in
the block. These transactions need to wait for a long time
to be included in a block, so as some transactions with high
transaction fees, which will degrade the system performance
with lower miners’ revenue; (2) When the false positive
probability is high, the expected value of the transactions with
high transaction fee may be still high, and therefore, other
miners are motivated to include these transactions, which will
increase the transaction inclusion collision and degrade the
system throughput. This is the reason why the miners’ revenue
decreases gradually with the increase of the Bloom ﬁlter’s false
positive probability.

On the other hand, a Bloom ﬁlter with a low false positive
probability will correspondingly have a large size, leading
to a long time to broadcast the signal. Thus, it may have
a higher probability of transaction inclusion collision, which
will degrade the system throughput. Therefore, it is important
to ﬁgure out the optimal conﬁguration of the Bloom ﬁlter.
As shown in Figure 10, the Bloom ﬁlter with false positive
probability as “0.02” can achieve the good performance.

VI. SECURITY DISCUSSIONS

In this section, we consider several possible security threats
caused by TIPS in DAG-based blockchain and show that TIPS
can maintain the system security in long term. Based on
the aforementioned design, we know that the miner can not
construct a misleading signal easily since each signal contains
a PoW in the block header. We are going to analyze two

possible security threats including the denial of service attack
and the delay of service attack.

A. Denial of Service Attack

There are two types of denial of service attacks in TIPS.
BDoS [24]. BDoS is an incentive attack where an adversary
can manipulate miners’ incentives by broadcasting the block
header without publishing the block. However, the “BDoS”
attack is infeasible in TIPS due to the following reason. Miners
can still obtain a high reward without referring to the latest
block. Furthermore, there is a hard-coded timeout for the block
header, which can further defend against the BDoS attack.
Signal ﬂood. Another possible attack is that the attacker can
broadcast a signal with lots of bits of Bloom ﬁlter set to 1
to lower the expected value of transactions, which can reduce
the miners’ expected reward (even less than the mining cost),
and motivate other miners to stop mining.

Luckily, we can defend against this attack efﬁciently by
checking the number of bits set to 1 in the Bloom ﬁlter and
rejecting the Bloom ﬁlter with too many bits set to 1 when
receiving the block header. To see this, we propose a detection
indicator of the Bloom ﬁlter, which is analyzed as follows.
After n transactions have been added to the Bloom ﬁlter, let q
be the fraction of the b bits that are set to 0, i.e., the number of
bits still set to 0 is qb. The probability that all h hash functions
ﬁnd that their bits are set to 1 is (1 − q)h. Therefore, the
expectation of q is

E(q) =

1 −

According to [25], we have

(cid:18)

1
b

hn

.

(cid:19)

P

E(q) − q ≥

(cid:18)

ξ
m

(cid:19)

≤ exp(−2ξ2/kn).

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
A Bloom ﬁlter with too many bits set to 1 will be rejected. Let
η be the probability of rejecting a valid Bloom ﬁlter. Let X be
the number of bits that are set to 1 in the Bloom ﬁlter. Then
the Bloom ﬁlter will be rejected if the following condition
holds:

X ≥ b − b

1 −

(cid:18)

hn

1
b

(cid:19)

1
2

+

−

r

hn ln η.

(6)

As an example, for a Bloom ﬁlter with b = 20000 bits,
k = 5 hash functions and n = 2000 transactions included,
if the probability of rejecting a valid Bloom ﬁlter is 0.01%,
a Bloom ﬁlter will be rejected if the number of bits that are
set to 1 is greater than 9535, while the expectation of the
number of bits that are set to 1 for a valid Bloom ﬁlter is 7869,
which indicates the high sensitivity and accuracy of detection
indicator (6). Besides, this extra validation is computationally
cheap. Condition (6) can be pre-computed and store in the
memory. Even with simple implementation on a PC, the time
to check the validation of Bloom ﬁlter is 1 µs (i.e., 0.99ms
per 1000 Bloom ﬁlters on a single core). Therefore, TIPS can
efﬁciently defend against this attack.

B. Delay of Service Attack

The traditional delay of service attack in DAG-based
blockchain has been discussed in [5]. Different from the
traditional attack, there exists another delay of service attack
in TIPS.

In TIPS, the attacker can delay the successful record of
a transaction txi by continuously mining a valid block that
includes this transaction, but only broadcast the signal without
the whole block. This attack will motivate other miners to
avoid including the transaction txi in their blocks because
the signal sent by the attacker will lower the expected value
of transaction txi. However, once the signal is expired, other
miners will have the motivation to include the transaction txi
in the block again. Once other miners include the transaction
txi, this delay of service attack is terminated.

To achieve tractable analysis, we consider the following
scenario. The expiration time for a block header is T . The
fraction of the computing power of the attacker is α. To delay
the transaction as long as possible, the attacker needs to keep
mining new blocks containing the same transaction before the
signal is expired. Denote the expected delay time after the
attacker initiates this attack as E(D). If the attacker mines a
new block at time t < T before the previous signal is expired,
he can delay the transaction with extra E(D) time. Otherwise,
he can only delay at most the expiration time T . Then we have

E(D) =

T

0
Z

(t + E(D))αλe−αλtdt +

∞

T
Z

T αλe−αλtdt.

Solving the above equation, we have E(D) =
Therefore, the expected delay time is

Delay(α) = αE(D) =

1
λ

eαλT − 1

,

αλT

(e

−1)

αλ

.

which implies that the expected delay time for this attack is
limited, because generally the expiration time for the block

(cid:0)

(cid:1)

12

header T is small. From the attacker’s perspective, the attacker
can never proﬁt from this delay of service attack. Besides,
the longer the attack goes on, the greater its cost. From the
user’s perspective, if a user ﬁnds his transaction delayed by this
attack, he can increase the transaction fee using the replace-
by-fee mechanism [26]. A higher transaction fee will motivate
other miners to include this transaction and compete against
the attacker. Therefore, we can conclude that this attack has an
insigniﬁcant impact and can be defended against efﬁciently.

VII. RELATED WORK

A. Transaction Inclusion Protocol

In the inclusive protocols [5], the authors model the trans-
action inclusion as a non-cooperative game with imperfect
information, and propose a myopic strategy, which can achieve
both high throughput and high quality of service levels.
Conﬂux [22] models the transaction inclusion as a cooperative
game and distributes the transaction fee based on Shapley
value [27]. The existing transaction inclusion protocols can be
considered as the compromise solution facing the dilemmas
in DAG-based blockchain. Along a different line, we propose
the novel protocol, TIPS, which can make a breakthrough in
these dilemmas and achieve near-optimal performance.

B. Header First Propagation

In the current blockchain systems

like Bitcoin and
Ethereum, miners generally broadcast the block header before
broadcasting the whole block, which can help to avoid the
repeated propagation for the same block and thus speed
up the propagation process [20]. However, this header ﬁrst
propagation might lead to the SPV mining, which will threaten
the system security [24]. In TIPS, we also propagate the
block header ﬁrst but for different purposes. We embedded
the “signal” in the block header to avoid transaction inclusion
collision and boost the system performance. We also show that
TIPS can maintain system security in long term.

C. Bloom Filter in Blockchain

Bloom ﬁlter and its variant have been previously adopted in
the blockchain system as auxiliaries, especially in log check-
up. [28], [29]. In Bitcoin [30], the SPV node can help to limit
the amount of transaction data they receive from full nodes
to those transactions that affect their wallet while maintaining
privacy. In Ethereum [31], the Bloom ﬁlter of the receipt logs
can help nodes to access log data efﬁciently and securely.
Besides, Bloom ﬁlter and its variant like invertible bloom
lookup table [17] can help to compress the block size. To
compress the block in blockchain system, the false positive
probability of the Bloom ﬁlter in [17], [32] should be small
enough, which will lead to a large size of Bloom ﬁlter. For
example, Graphene’s block announcements are 1/10 the size
of the whole blocks [32].

Different from previous work, the Bloom ﬁlter plays a
crucial role in the protocol, serving as a signal in TIPS. Given
the compact size of the Bloom ﬁlter-based signal, we can
broadcast the necessary information to the whole network in

a much shorter time. As mentioned in Section III-A, the size
of the signal in our protocol can be smaller than 1/100 the
size of the whole block. Furthermore, the mitigation of block
propagation mentioned in Section III-B also helps to broadcast
the signal faster.

D. Block Transmission Optimization

TIPS improves the system performance through drastically
shortening the effective network delay with the signaling
approach. There are several works focusing on optimizing
the block transmission delay, which also helps to shorten the
network delay. In [18], the authors propose an accelerated
method for block propagation by selecting proper neighbors.
[33] boosts blockchain broadcast propagation with tree rout-
ing. Coded design [34] and compacting technology [32] are
also used to speed up the block propagation. In fact, TIPS can
be used along with these approaches to improve the system
performance of the DAG-based blockchain.

VIII. CONCLUSION

In this paper, we proposed a novel Transaction Inclusion
Protocol with Signaling, TIPS, which can explicitly resolve the
dilemmas in DAG-based blockchain and achieve near-optimal
performance while maintaining system security. Both the
theoretical analysis and the experimental results signiﬁcantly
demonstrate the high efﬁciency of TIPS.

There are several interesting directions to explore in the
future, such as how to simplify the “signal” and make the
“signal” broadcast to the whole network faster. Besides, it
is interesting to analyze the dynamic game between different
miners with repeated interaction in the long run considering
the tit-for-tat property. Moreover, it is meaningful to provide
theoretical analysis for the challenging scenario where the
network is asynchronous and the miners are heterogeneous.

REFERENCES

[1] M. Swan, J. Potts, S. Takagi, F. Witte, and P. Tasca, Blockchain
economics: implications of distributed ledgers: markets, communications
networks, and algorithmic reality. World Scientiﬁc Publishing Co. Pte.
Ltd., 2019.

[2] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han,
“Cloud/fog computing resource management and pricing for blockchain
networks,” IEEE Internet of Things Journal, vol. 6, no. 3, pp. 4585–
4600, 2018.

[3] J. Kang, Z. Xiong, D. Niyato, D. Ye, D. I. Kim, and J. Zhao, “Toward
secure blockchain-enabled internet of vehicles: Optimizing consensus
management using reputation and contract theory,” IEEE Transactions
on Vehicular Technology, vol. 68, no. 3, pp. 2906–2920, 2019.

[4] Q. Zhou, H. Huang, Z. Zheng, and J. Bian, “Solutions to scalability of

blockchain: A survey,” IEEE Access, vol. 8, pp. 16 440–16 455, 2020.
[5] Y. Lewenberg, Y. Sompolinsky, and A. Zohar, “Inclusive block chain
protocols,” in International Conference on Financial Cryptography and
Data Security. Springer, 2015, pp. 528–547.

[6] T. Wang, Q. Wang, Z. Shen, Z. Jia, and Z. Shao, “Understanding
characteristics and system implications of DAG-based blockchain in IoT
environments,” IEEE Internet of Things Journal, 2021.

[7] B. Cao, Y. Li, L. Zhang, L. Zhang, S. Mumtaz, Z. Zhou, and M. Peng,
“When internet of things meets blockchain: Challenges in distributed
consensus,” IEEE Network, vol. 33, no. 6, pp. 133–139, 2019.

[8] H. Zhang, S. Leng, F. Wu, and H. Chai, “A DAG blockchain enhanced
user-autonomy spectrum sharing framework for 6G-enabled IoT,” IEEE
Internet of Things Journal, 2021.

13

[9] W. Yang, X. Dai, J. Xiao, and H. Jin, “LDV: A lightweight DAG-
based blockchain for vehicular social networks,” IEEE Transactions on
Vehicular Technology, vol. 69, no. 6, pp. 5749–5759, 2020.

[10] Y. Li, B. Cao, M. Peng, L. Zhang, L. Zhang, D. Feng, and J. Yu,
“Direct acyclic graph-based ledger for internet of things: Performance
and security analysis,” IEEE/ACM Transactions on Networking, vol. 28,
no. 4, pp. 1643–1656, 2020.

[11] H. Gupta and D. Janakiram, “CDAG: A serialized blockdag for permis-

sioned blockchain,” arXiv preprint arXiv:1910.08547, 2019.

[12] J. G¨obel and A. E. Krzesinski, “Increased block size and Bitcoin
blockchain dynamics,” in 2017 27th International Telecommunication
Networks and Applications Conference (ITNAC).
IEEE, 2017, pp. 1–6.
[13] B. H. Bloom, “Space/time trade-offs in hash coding with allowable
errors,” Communications of the ACM, vol. 13, no. 7, pp. 422–426, 1970.
[14] A. Hari, M. Kodialam, and T. Lakshman, “Accel: Accelerating the
Bitcoin blockchain for high-throughput,
low-latency applications,” in
IEEE infocom 2019-IEEE conference on computer communications.
IEEE, 2019, pp. 2368–2376.

[15] L. Chen, L. Xu, Z. Gao, A. Sunny, K. Kasichainula, and W. Shi,
“Nonlinear blockchain scalability: a game-theoretic perspective,” arXiv
preprint arXiv:2001.08231, 2020.

[16] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin mining is
vulnerable,” in International conference on ﬁnancial cryptography and
data security. Springer, 2014, pp. 436–454.
[17] G. Andresen. (2014) O(1) Block Propagation.

[Online]. Available:

https://gist.github.com/gavinandresen/e20c3b5a1d4b97f79ac2

[18] W. Bi, H. Yang, and M. Zheng, “An accelerated method for message
propagation in blockchain networks,” arXiv preprint arXiv:1809.00455,
2018.

[19] Fees Per Tx (BTC)

in Bitcoin Visuals.

[Online]. Available:

https://bitcoinvisuals.com/chain-fees-tx-btc

[20] C. Decker and R. Wattenhofer, “Information propagation in the Bitcoin

network,” in IEEE P2P 2013 Proceedings.

IEEE, 2013, pp. 1–10.

[21] N. Matloff, “Introduction to discrete-event simulation and the simpy lan-
guage,” Davis, CA. Dept of Computer Science. University of California
at Davis. Retrieved on August, vol. 2, no. 2009, pp. 1–33, 2008.
[22] C. Li, P. Li, D. Zhou, Z. Yang, M. Wu, G. Yang, W. Xu, F. Long, and
A. C.-C. Yao, “A decentralized blockchain with high throughput and
fast conﬁrmation,” in 2020 {USENIX} Annual Technical Conference
({USENIX}{ATC} 20), 2020, pp. 515–528.

[23] pybloom-live

3.1.0.

[Online].

Available:

https://pypi.org/project/pybloom-live/

[24] M. Mirkin, Y. Ji, J. Pang, A. Klages-Mundt, I. Eyal, and A. Juels,
“BDoS: Blockchain denial-of-service,” in Proceedings of the 2020 ACM
SIGSAC conference on Computer and Communications Security, 2020,
pp. 601–619.

[25] M. Mitzenmacher and E. Upfal, Probability and computing: Random-
ization and probabilistic techniques in algorithms and data analysis.
Cambridge university press, 2017.

[26] E. Elrom, “Bitcoin wallets and transactions,” in The Blockchain Devel-

oper. Springer, 2019, pp. 121–171.

[27] A. E. Roth, The Shapley value: essays in honor of Lloyd S. Shapley.

Cambridge University Press, 1988.

[28] T. Wang, W. Zhu, Q. Ma, Z. Shen, and Z. Shao, “Abacus: Address-
partitioned bloom ﬁlter on address checking for uniqueness in IoT
blockchain,” in Proceedings of the 39th International Conference on
Computer-Aided Design, 2020, pp. 1–7.

[29] X. Ma, L. Xu, and L. Xu, “Blockchain retrieval model based on elastic
bloom ﬁlter,” in International Conference on Web Information Systems
and Applications. Springer, 2019, pp. 527–538.

[30] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,”

Manubot, Tech. Rep., 2019.

[31] G. Wood et al., “Ethereum: A secure decentralised generalised trans-
action ledger,” Ethereum project yellow paper, vol. 151, no. 2014, pp.
1–32, 2014.

[32] A. P. Ozisik, G. Andresen, B. N. Levine, D. Tapp, G. Bissias, and
S. Katkuri, “Graphene: efﬁcient interactive set reconciliation applied to
blockchain propagation,” in Proceedings of the ACM Special Interest
Group on Data Communication, 2019, pp. 303–317.

[33] J. Kan, L. Zou, B. Liu, and X. Huang, “Boost blockchain broadcast
propagation with tree routing,” in International Conference on Smart
Blockchain. Springer, 2018, pp. 77–85.

[34] L. Zhang, T. Wang, and S. C. Liew, “Speeding up block propagation
in blockchain network: Uncoded and coded designs,” arXiv preprint
arXiv:2101.00378, 2021.

e−λ∆

fi
pi(k + 1)

(k + 1)!
(ι + 1)!(k − ι)!

pι+1
i

(1 − pi)k−ι

E(X, k) = E

m

m

=

1 − (1 − pi)k+1

.

APPENDIX A
PROOF OF LEMMA 1
Proof. Since the block generation process follows the Poisson
process with rate λ, the probability of generating k more
blocks during the block propagation duration is (λ∆)
k! e−λ∆.
Because other miners include transaction i in their block with
the probability that there are ι
a marginal probability pi,
k
i(1 − pi)k−ι.
pι
more miners including the transaction i is
ι
Therefore, we have

k

∞

r(pi|∆) =

(λ∆)k
k!

e−λ∆

(cid:19)

(cid:18)

k

(cid:1)

(cid:0)
i(1 − pi)k−ι 1
pι
ι + 1

k
ι (cid:17)

Xι=0 (cid:16)
k

Xι=0

(cid:19)

(cid:19)

(λ∆)k
k!

e−λ∆

fi
pi(k + 1) (cid:16)

1 − (1 − pi)k+1

(cid:17)

(λ∆)k
(k + 1)!

e−λ∆ −

(λ∆)k(1 − pi)k+1
(k + 1)!

e−λ∆

(cid:19)

Xk=0
(λ∆)k
k!

∞

(cid:18)

Xk=0
∞

Xk=0

(cid:18)

∞

1
pi

(cid:18)

Xk=0

=

=

=

=

1
pi (cid:18)

1 − e−λ∆
λ∆

−

e−λ∆pi − e−λ∆
λ∆

=

(cid:19)

1 − e−λ∆pi
(cid:0)
λ∆pi

.

(cid:1)

Then given that other miners include transaction i in their
blocks with the probability p′
i, the miner’s revenue on one
m
i=1 pifir(p∗
block with strategy p is R(p|p∗) =
i ). There-
fore, when all the miners adopt the symmetric transaction
inclusion strategy p, we know that the miners’ revenue is
m
R(p) = R(p|p) =
i=1 pifir(pi|∆). The proof is thus
completed.

P

P

APPENDIX B
PROOF OF THEOREM 2
Proof. Based on Lemma 1, the expectation of total transaction
fee reward of a miner who adopts inclusion strategy p given
that other miners adopt the strategy prand is
m

R(p|prand) =

pifir, where r =

Then we have

i=1
X

m

1 − e−λ∆ n
λ∆ n
m

.

max
p∈P
n

=r

R(p|prand) − R(prand) = R(ptop|prand) − R(prand)
1 − e−λ∆ n
λ∆ n
m

n
m

fi =

fi −

fi −

1
m

1
n

m

r

m

n

i=1
X

i=1
X
Besides, we denote h(∆) = 1−e
. Note that h(∆)
is monotonically decreasing in ∆. Specially, we have that
lim∆→∞ h(∆) = 0. Therefore, when ∆ → ∞, the random
strategy is the Nash equilibrium. The proof is thus com-
pleted.

−λ∆
λ∆ n
m

i=1
X
n
m

i=1
X

m

fi

.

!

APPENDIX C
PROOF OF THEOREM 3
Proof. During the propagation time ∆, the miner who mines
the new block will broadcast it to the network, with other
miners keep mining without any notiﬁcation of the latest block.
The probability of other miners to mine k more blocks during
the block propagation time is

P (k, ∆) =

(λ∆)k
k!

e−λ∆.

(7)

14

For convenience, we deﬁne that

δi =

(

the i-th transaction is included in one of the blocks,

1,
0, otherwise.

Then the probability that the i-th transaction in the transaction
pool is included by k + 1 miners in their blocks is

P (δi = 1, k + 1) = 1 − (1 − pi)k+1 .

Therefore, the expected number of transactions included dur-
ing the propagation time with additional k blocks emerging
is

P (δi, k)

!

i=1
X

i=1 (cid:16)
X

(cid:17)

Therefore, the average block capacity utilization in long term
is

U (p) =

=

=

=

E(X, k)

(cid:17)

(k + 1)n

k

(λ∆)

k! e−λ∆

(cid:16)

(λ∆)k

k! e−λ∆
k! e−λ∆

k

(λ∆)

∞
k=0

P

∞
k=0

P

∞
k=0

P

(cid:16)

(cid:16)

(cid:17)

m
i=1

1 − (1 − pi)k+1

(cid:16)

(k + 1)n

(cid:17)

∞
k=0

(λ∆)k

(cid:17) P
k! e−λ∆
(λ∆)

k

e−λ∆

m
P
i=1

(cid:16)
∞
k=0

(cid:17)

k! − (1−pi)(λ∆(1−pi))

k!

k

(cid:17)

m −

(cid:16)
n(λ∆ + 1)

P

P
m
i=1(1 − pi)e−λ∆pi
n(λ∆ + 1)

.

P

Thus, the throughput of the DAG-based blockchain is
m
i=1(1 − pi)e−λ∆pi
(λ∆ + 1)

TPS(p) = λnU (p) =

m −

λ

(cid:0)
The proof is thus completed.

P

.

(cid:1)

APPENDIX D
PROOF OF THEOREM 5
Proof. Based on Lemma 1, the expectation of total transaction
fee reward of a miner with transaction inclusion strategy p,
given other miners adopt the strategy ptop, is
m

n

R(p|ptop) =

1 − e−λτ
λτ

pifi +

pifi.

i=1
X

i=n+1
X

If the miner adopts the top n strategy, his expected reward is

R(ptop) = R(ptop|ptop) =

1 − e−λτ
λτ

n

fi.

i=1
X

Therefore, the extra reward that miner can obtain from devi-
ation is

R(p|ptop) − R(ptop) ≤ max

max
p∈P

(cid:26)

nfn+1 − n

≤ max

n

1 −

1 − e−λτ
λτ
1 − e−λτ
λτ

fn, 0

(cid:27)

.

fn, 0

(cid:26)
−λτ

(cid:18)
We denote that g(τ ) = 1 − 1−e
. Note that g(τ ) is mono-
λτ
tonically increasing in τ . Thus we have limτ →0 g(τ ) = 0.
the top n strategy is the Nash
Therefore, when τ → 0,
equilibrium. The proof is thus completed.

(cid:27)

(cid:19)

 
 
APPENDIX E
PROOF OF THEOREM 6
Proof. To prove that the top n strategy is the equilibrium
strategy, we only need to prove that given that other miners
adopt the top n strategy, the best response of the miner is
exactly the top n strategy. Besides, when ﬁxing other miners’
strategies, there exists a pure strategy that can be the best
response. Without loss of generality, we consider the scenario
where one miner deviates from the top n strategy, and selects
the transaction set B, while other miners adopt the top n
strategy and select the transaction set A = {1, 2, . . . , n}. Then
we have |A| = |B| = n. Besides, we denote that n1 = |A ∩ B|,
and n2 = |A/ (A ∩ B)|. Thus, we have n1 + n2 = n. Then
the expected total transaction fee reward for the miner who
deviates from the top n strategy and includes the transaction
set B is

Reward(B) = Tx(B/(B ∩ A)) +

∞

k=0 (cid:18)
X

(λτ )k
k!

e−λτ

Tx(B ∩ A)
k + 1

(cid:19)
1 − e−λτ
λτ

= Tx(B/(B ∩ A)) + Tx(B ∩ A)

n2

≤

fn+i +

1 − e−λτ
λτ

i=1
X

n1

fi,

i=1
X

and the equality holds when S ∩ P = {1, 2, . . . , n1} and
S/(S ∩ P) = {n + 1, n + 2, . . . , n + n2}.

Since ϕ(x) is monotonically decreasing, when condition (2)

holds, we have

1 − e−λτ
λτ

≥

fn+1
fn

.

Besides, since fi+1 ≤ fi, ∀i ∈ {1, 2, . . . , m − 1}, we have

max
n1=0,1,2,...,n

n−n1
i=1 fn+i
n−n1
i=1 fn1+i

P

=

fn+1
fn

.

Therefore, when condition (2) holds, we have

P

fn+i ≤

1 − e−λτ
λτ

fn1+i,

n2

i=1
X

n2

i=1
X
which implies that

n2

fn+i +

1 − e−λτ
λτ

n1

fi ≤

1 − e−λτ
λτ

n

fi.

i=1
X

i=1
X
Therefore, we have Reward(B) ≤ Reward(A), which implies
that R(ptop) ≥ maxp∈P R(p|ptop). Thus, the top n strategy
is a Nash equilibrium under the condition (2). Furthermore,
we can ﬁnd that the top n strategy strictly dominates other
strategies. Therefore, it is the unique Nash equilibrium.

i=1
X

APPENDIX F
PROOF OF THEOREM 8
Proof. For convenience, we denote p∗ as the equilibrium
strategy in the transaction inclusion game. Since the utilization
of blocks could not greater than 1, i.e., Uoptimal ≤ 1, we have

TPSoptimal = λnUoptimal ≤ λn.

15

Therefore, we have

Efﬁciency(TPS) =

TPS(p∗)
TPSoptimal

≥

λn
λτ +1
λn

=

1
λτ + 1

.

The proof is thus completed.

APPENDIX G
PROOF OF LEMMA 2
Proof. For the top n transaction inclusion strategy, we have
that p1 = p2 = · · · = pn = 1 and pn+1 = pn+2 = · · · =
pm = 0. According to Theorem 3, we have

lim
n→∞

T P S(ptop, n)

= lim
n→∞

λ

m −

(cid:0)

= lim
n→∞

λ

m −

m
i=1 λ(1 − pi)e−λ∆(n)pi
(λ∆(n) + 1)

P
m

(cid:1)

i=1
X

λ(1 − pi)e−λ∆(n)pi

/(λ∆(n) + 1)

!

n

m −

λ(1 − 1)e−λ∆(n)1

= lim
n→∞

−

λ
(λ∆(n) + 1)  
m

i=1
X
λ(1 − 0)e−λ∆(n)0

!

i=n+1
X

λn
λ∆(n) + 1

= lim
n→∞
1
d∆(n)
dn

=

(Using the L’Hospital’s rule)

The proof is thus completed.

APPENDIX H
PROOF OF THEOREM 7

Before proving Theorem 7, we ﬁrst introduce a new metric
“Fee Service Rate” (FSR), and then show the relation between
the miners’ revenue and FSR, ﬁnally we can prove Theorem
7 through the analysis of FSR.

Fee service rate (FSR) is deﬁned as the total transaction fee
that the blockchain system processes per second. A high FSR
implies a high system proﬁt and a good market efﬁciency in
the blockchain system.

Proposition 1. The fee service rate of
the DAG-based
blockchain given the transaction inclusion strategy being p
and the network propagation delay of a block being ∆ is
m

FSR(p) =

fi

1 − e−λ∆pi

,

(8)

1
∆

where λ is the block generation rate in the blockchain system.

i=1
X

(cid:0)

(cid:1)

Proof. The expectation of the total transaction fees of the
transactions included in blocks on the condition that there are
k blocks emerging during the network propagation duration is

m

m

Besides, the TPS of the equilibrium strategy is greater or equal
to the TPS of the top n strategy, ptop, then we have

E(Y, k) = E

P (δi, k)fi

=

!

i=1
X

i=1 (cid:16)
X

1 − (1 − pi)k

fi.

(cid:17)

TPS(p∗) ≥ TPS(ptop) =

λn
λτ + 1

.

Since the block generation process follows the Poisson process
with rate λ, the probability that there are k blocks emerging

 
 
Thus we have that

R(p∗) ≥ R(ptop) =

fir(1) =

n

i=1
X
Besides, we have proved that

(1 − e−λτ )
λτ

n

fi.

i=1
X

FSR(p′) = λR(p′),

∀p′ ∈ P.

Thus, we have

FSR(p∗) ≥ λR(ptop) =

Therefore, we have

Efﬁciency(FSR) =

FSR(p∗)
FSRoptimal

≥

(1 − e−λτ )
τ

n

fi.

i=1
X

(1 − e−λτ )
⌊ m
n ⌋
k=0

(λτ )k
k! e−λτ

⌊ m

n ⌋ −

The proof is thus completed.

(cid:16)

P

16

.

(cid:17)

during the network propagation duration is (λ∆)
fore, the fee service rate (FSR) is

k

k! e−λ∆. There-

∞

FSR(p) =

1
∆

(λ∆)k
k!

Xk=0 (cid:18)

m

∞

e−λ∆

E(Y, k)

(cid:19)
(λ∆)k
k!

−

(λ∆(1 − pi))k
k!

fi

(cid:19)

Xk=0 (cid:18)
fi

eλ∆ − eλ∆(1−pi)

(cid:16)

(cid:17)

1 − e−λ∆pi

.

=

=

=

e−λ∆
∆

e−λ∆
∆

m

1
∆

i=1
X
m

i=1
X
fi

i=1
X

(cid:0)

The proof is thus completed.

(cid:1)

Combining Proposition 1 and Lemma 1, we can ﬁnd that
the miners’ revenue is proportional to the FSR, i.e., R(p) =
FSR(p)/λ, where λ is the block generation rate. Therefore, to
prove Theorem 7, we only need to prove that

Efﬁciency(F SR) ≥

(1 − e−λτ )
⌊ m
n ⌋
k=0

(λτ )k
k! e−λτ

⌊ m

n ⌋ −

.

where Eﬃciency(FSR) = FSR of Equilibrium
goes as follows.

FSR of optimal strategy . The proof

P

(cid:17)

(cid:16)

Proof. For convenience, we denote p∗ as the equilibrium
strategy in the transaction inclusion game. We consider the
total transaction fees of transactions included in blocks dur-
ing the network propagation delay of signal τ . The highest
possible FSR can be achieved when there is no transaction
inclusion collision and the included transactions have the
highest transaction fees. Therefore, we have

FSRoptimal ≤

1
τ

(λτ )k
k!

e−λτ

max{kn,m}

∞

k=0
X




∞

fi

!

m

k=0
X

e−λτ +

(λτ )k
k!

∞

i=1
X

2n

fi




fi

∞

i=n+1
X

!

k=1
X

(λτ )k
k!

e−λτ

=

1
τ   

n

i=0
X

+ · · · +



≤

1
τ

n

i=0
X

(λτ )k
k!

e−λτ

fi




⌊

m
Xk=⌊
n ⌋
m
n ⌋

⌋ −

k=0
X

m
n ⌋

Xi=n⌊
m
n



⌊


fi



(λτ )k
k!

e−λτ

.









Besides, since p∗ is the equilibrium strategy, we have

R(p∗|p∗) =

m

Xi=1

i fir(p∗
p∗

i ) ≥ R(p′|p∗) =

ifir(p∗
p′

i ), ∀p′ ∈ P.

m

Xi=1

Without loss of generality, we have

m

n

R(p∗|p∗) =

i fir(p∗
p∗

i ) ≥ R(ptop|p∗) =

fir(p∗

i ).

i=1
X

i=1
X

Since r(p∗
r(1). Therefore, we have

i ) is monotonically decreasing, we have that r(pi) ≥

R(ptop|p∗) =

n

i=1
X

fir(p∗

i ) ≥ R(ptop|ptop) =

fir(1).

n

i=1
X

 
