2
2
0
2

r
p
A
6
2

]

R
C
.
s
c
[

1
v
7
7
4
2
1
.
4
0
2
2
:
v
i
X
r
a

Proceedings of the 2022 Winter Simulation Conference
B. Feng, G. Pedrielli, Y. Peng, S. Shashaani, E. Song, C.G. Corlu, L.H. Lee, P. Lendermann, eds.

DIGITAL TWINS FOR DYNAMIC MANAGEMENT OF BLOCKCHAIN SYSTEMS

Georgios Diamantopoulos

Nikos Tziritas

Department of Computer Science and Engineering
Southern University of Science and Technology
Shenzhen, China
and
School of Computer Science
University of Birmingham
Birmingham, United Kingdom

Department of Informatics
and Telecommunications
University of Thessaly
Greece

Rami Bahsoon

Georgios Theodoropoulos

School of Computer Science
University of Birmingham
United Kingdom

Department of Computer Science and Engineering
Southern University of Science and Technology
Shenzhen, China

ABSTRACT

Blockchain systems are challenged by the so-called Trilemma tradeoff: decentralization, scalability and
security. Infrastructure and node conﬁguration, choice of the Consensus Protocol and complexity of the
application transactions are cited amongst the factors that affect the tradeoffs balance. Given that Blockchains
are complex, dynamic dynamic systems, a dynamic approach to their management and reconﬁguration at
runtime is deemed necessary to reﬂect the changes in the state of the infrastructure and application. This
paper introduces the utilisation of Digital Twins for this purpose. The novel contribution of the paper is design
of a framework and conceptual architecture of a Digital Twin that can assist in maintaining the Trilemma
tradeoffs of time critical systems. The proposed Digital Twin is illustrated via an innovative approach
to dynamic selection of Consensus Protocols. Simulations results show that the proposed framework can
effectively support the dynamic adaptation and management of the Blockchain.

1

INTRODUCTION

Blockchain has seen a huge leap in popularity since its inception as an immutable, decentralised ledger
used by Bitcoin (Nakamoto 2008) and the plethora of other applications that soon followed. In Blockchain
entities that wish to transact with each other form a P2P network through which cryptographically signed
transactions are batched into blocks, broadcasted, and stored in a chain of blocks by every entity individually.
A transaction is deﬁned as the transfer of a digital token which can be designed to virtually any functionality
through a process called tokenization (Li et al. 2019). A major distinction between Blockchains is their
type, with the two main categories being permissionless or public and permissioned or private (Helliar
et al. 2020); a consortium Blockchain (Li et al. 2017) is a hybrid type encopassing features of both main
ones. In a permissionless Blockchain the P2P network is public and everyone can participate anonymously.
As a result, the network topology is unknown and no a-priori assumptions can be made about nodes or
expected load of the system. In the permissioned case, the P2P network is private and only veriﬁed nodes

 
 
 
 
 
 
Diamantopoulos, Tziritas, Bahsoon and Theodoropoulos

can participate thus providing more knowledge about the state of the system. Finally in a consortium
Blockchain, the network is public and every one can participate but only veriﬁed nodes can produce blocks.
Blockchain has been increasingly utilised in a wide range of applications including IoT, supply chain
systems, e-government systems, medical databases and more recently metaverse type applications (Zheng
et al. 2018; Al-Jaroodi et al. 2019; Maesa et al. 2020; Dai et al. 2019; Monrat et al. 2019; Gamage et al.
2020; Ynag et al. 2022). The potential of Blockchain technology to support sustainable development is
also increasingly being acknowledged while tokenisation is viewed as the key technology to promote and
power ESG, impact investment and sustainable ﬁnance (Uzsoki et al. 2019; Freire et al. 2021).

Despite the widely acknowledged potentials of Blockchain, there are several factors that limit, if not
prohibit its adoption in time critical applications: low scalability, high latency, coupled with high power
consumption, and an expanding carbon footprint are among the most cited factors (Yu et al. 2018). As
an indicative example, Bitcoin can conﬁrm an average of 4 transactions per second (TPS) and Ethereum’s
public implementation can conﬁrm an average of 14 TPS1; in comparison, VISA, a traditional transaction
processing system, claims to process more than 24,000 TPS2. Henceforth, the designers of Blockchain-based
systems are pressured by the need to develop secure, scalable, speedy and sustainable solutions.

Aspiring to contribute to this endeavour, this paper presents an approach for the dynamic management
and optimisation of permissioned Blockchain systems utilising Digital Twins. The novel contribution of
this paper is the design of a framework and a conceptual architecture leveraging Digital Twin technology
to assist application designers in maintaining the so called Trilemma tradeoff in Blockchain-based systems
(coined as suggested by Ethereum’s Vitalik Buterin): decentralisation, scalability and security.

Our approach views Digital Twin as a “combination of a computational model and a real-world system,
designed to monitor, control and optimise its functionality”(Buscher 2019). The objective of using Digital
Twins is to dynamically assist in managing and optimising for the Trilemma tradeoffs in Blockchain-based
systems. Our approach is fundamentally grounded on the premise that Digital Twins are essentially Dynamic
Data Driven Application Systems (DDDAS), wherein a real-time info-symbiotic feedback loop between
the model and the real system allows data from an observed system to be absorbed into a simulation
of the system in order to continually adapt the model to the reality, if necessary making changes to the
assumptions on which it is based in order to gradually increase the reliability of its forecasts. Additionally,
the predictions of the simulation can be fed back to the observed system in order to change or optimise
its behaviour in real time and direct the data collection and sampling (Darema et al. 2008).

Digital Twins and DDDAS have been utilised in a wide range of applications (Blasch et al. 2018;
Jones et al. 2020; Minerva et al. 2020; dos Santos et al. 2021; Barricelli et al. 2019), including autonomic
management of computational infrastructures (Liu et al. 2012; Onolaja et al. 2010; Faniyi et al. 2012;
Abar et al. 2014). The last few years have witnessed several efforts to bring together Blockchain and
Digital Twins, however these have focused on utilising the former to support the latter; a comprehensive
survey is provided in (Suhail et al. 2022). Similarly, in the context of Dynamic Data Driven Application
Systems (or DDDAS), Blockchain technology has been utilised to support different aspects of DDDAS
operations and components (Blasch et al. 2019; Xu et al. 2019; Xu et al. 2020). In contrast, this paper
aims to address the reverse challenge namely how can the DDDAS paradigm and Digital Twin technology
be utilised to support the dynamic management and optimisation of blochckain systems.

The novel contributions of the paper are the following:

1. The ﬁrst to propose the utilisation of Digital Twins to dynamically manage the Trilemma Tradeoffs

2.

in Blockchain systems.
It develops a generic reference architecture of Digital Twins for managing the Trilemma in Blockchain
systems.

1https://www.Blockchain.com/charts
2https://usa.visa.com/run-your-business/small-business-tools/retail.html

Diamantopoulos, Tziritas, Bahsoon and Theodoropoulos

3.

It demonstrates how the architecture can be instantiated to optimise for performance and to inform
the dynamic selection and management of consensus in Blockchain-based systems.

4. Presents a quantitative analysis of dynamically Consensus Protocols to optimise performance.

The rest of the paper is structured as follows: Section 2 discusses the factors affecting the performance
of Blockchain systems and their dynamic management and the challenge of managing them. Section 3
presents a reference architecture of a Digital Twin for permissioned Blockchain systems outlining its main
components. Section 3.2 illustrates an example instantiation of the reference architecture for the dynamic
management of Consensus Protocols while section 4 presents a quantitative analysis. Finally, section 5
concludes the paper and outlines paths for future research.

2 MANAGING BLOCKCHAIN DYNAMICS

The design of Blockchain-based systems is challenged by the well known Trilemma tradeoff, coined
by Vitalik Buterin, the co-founder of Ethereum: decentralization, scalability and security. Factors that
affect the behaviour of the Blockchain and change the balance between these three attributes relate to
computational infrastructure and node conﬁguration, the Consensus Protocol and the complexity of the
application transactions. Parameters such as network topology, bandwidth and latency, CPU and storage
capacity, mining power utilization, number of nodes, distribution of mining power, block size, block interval,
number of block producers, orphaning/fork probability determine the transaction throughput and energy
proﬁle of the Blockchain system (Eklund et al. 2019; Odiljon et al. 2019; Haﬁd et al. 2020; Gencer et al.
; Xiong et al. 2018; Klarman et al. 2019).

Consensus Protocol is at the core of inﬂuencing the Trilemma trade off of Blockchain-based systems.
In the ﬁeld of distributed systems, consensus algorithms have been thoroughly studied and optimised
variants have been proposed (Lamport et al. 2001; Ongaro et al. 2015). These variants have been generally
effective in small scale systems and can be best suited for permissioned or consortium Blockchain based
systems; their application to permissionless cases is not straightforward. This is attributed to the fact that
permissioned/consortium Blockchain systems require a relatively smaller number of selected nodes to be
in charge of producing blocks, where classical consensus algorithms can be effective. As the complexity of
applications beneﬁting from Blockchain increases, several Consensus Protocols have been proposed with
the goal of improving efﬁciency, scalability, transaction throughput and convergence. However, providing
solutions which maintain consistent performance over varying workloads, and in the face of changing
environmental conditions and parameters remain a challenge (Giang-Truong et al. 2018). The challenge
calls for dynamic and adaptive consensus to better address the Trilemma Tradeoffs in Blockchain-based
systems. The concept of dynamic adaptation of consensus algorithms is further discussed in section 3.2.
With regard to the application transactions, smart contract systems are essentially complex systems
with nonlinear proﬁles and emergent properties; their impact on the performance on the Blockchain system
can not be determined a priori (Kim et al. 2017; Santos et al. 2017; Soloviev et al. 2019; dos Santos et al.
2018). The increasing complexity of transactions, partially attributed to smart contracts logic-validation,
has observable impact on the performance of Blockchain-based systems.

Dynamic approach to the management and reconﬁguration at runtime is deemed necessary to reﬂect on
changes in the state of the infrastructure and application. Efforts in this direction have already commenced,
looking at different aspects of Blockchain systems such as selection of neighbor nodes (Hamza et al. 2022)
and optimisation techniques for revenue maximisation (Zhao et al. 2021).

In (Liu et al. 2019b) a framework in which a Reinforcement Learning (RL) agent is used to optimise
a Blockchain system is proposed. The agent is tasked to solve a constraint optimisation task, that is,
minimising latency while not compromising on decentralisation. This work provides a useful optimisation
exercise with some interesting insights about the ability of the agent to select the best algorithm for the
state provided. However, as is typical of RL, the agent is trained on historical data and cannot provide a

Diamantopoulos, Tziritas, Bahsoon and Theodoropoulos

Figure 1: Architecture of a generic permissioned Blockchain system

nonlinear extrapolation of future scenarios, which is essential when modelling complex systems (as is the
case of smart contract systems).

A Digital Twin can overcome these deﬁciencies as its simulation infrastructure can allow what-if
analysis and can act as a surrogate to explore alternative future scenarios (Theodoropoulos 2015; Tolk
2015). It can also provide support for the dynamic off-chain simulation and evaluation of smart contracts
systems (Kim et al. 2017; Kampik et al. 2020; Hu et al. 2021; Kim et al. 2021). The smart contract
system can then be executed off-chain in the Digital Twin environment or uploaded to the Blockchain
system thus supporting a hybrid on/off-chain execution model (Solaiman et al. 2021).

3 TWINNING A BLOCKCHAIN

Blockchain is a distributed ledger technology which allows for trustless interactions between entities without
a trusted middleman. Blockchain achieves the above by keeping a completely distributed and immutable
ledger which stores ownership data of tokens representing physical or digital entities. A transaction in the
Blockchain is deﬁned as the change of ownership of an existing token or the generation and the assignment
of ownership of a new token. In Blockchain, nodes connect with each other by forming a peer-to-peer (P2P)
network and any node which wishes to send a token to another node, creates a transaction and broadcasts
it over the network. Asymmetric cryptography is used to prove the identity of nodes, by requiring every
transaction and message sent in the Blockchain to be signed by a nodes private key for identiﬁcation. When
enough transactions are gathered, special nodes called block producers, batch the transactions into a block
and broadcast it in the network. This block directly references the previous block creating a back-linked
chain of blocks. For a new block to be valid and accepted by the rest of the nodes it needs to have been
agreed upon by the Consensus Protocol. A Consensus Protocol acts as a voting mechanism in which the
block producer vote on candidate blocks to be added next to the Blockchain.

In this paper, we consider a generic permissioned Blockchain system with K nodes denoted as:

M of which are block producers denoted as:

P = {p1, p2, ..., pK}

B = {b1, b2, ..., bM}, B ⊂ P

(1)

(2)

which take part in the Consensus Protocol and are responsible for producing the blocks. Fig. 1 illustrates
the described Blockchain system. Each node p ∈ P holds a local copy of the Blockchain (BC). Additionally,
block producers b ∈ B also hold a transaction pool (TP) which stores broadcasted transactions that took

Node p1Node p2Node pkP2P communication layerBlock Producerb1Block Producerb2Block ProducerbmConsensus Protocol ComminicationBCTPBCTPBCTPBCBCBCDiamantopoulos, Tziritas, Bahsoon and Theodoropoulos

Figure 2: A reference model for a Digital Twin managed Blockchain

place in the system. When a node is ready to propose a new block, the oldest transactions from the TP
are selected ﬁrst to populate it. Finally, when a new block is accepted the transactions included in it are
removed from the node’s local TP.

3.1 A Reference Architecture

A generic reference model for the proposed Digital Twin managed Blockchain is illustrated in ﬁgure 2. The
model implements a typical MAPE-K approach (Kephart et al. 2003). Following the basic philosophy of
the DDDAS paradigm, data from the Blockchain system is fed to the Digital Twin at selected time intervals.
The data deemed necessary to create and update the replica of the Blockchain include the following: (a) a
list of transactions received in the interval (b) a list of all new blocks added since in the interval (c) the
state of the block producers (d) the state of of the computational platform and workload state information
as appropriate. A new block may conatin the following: (a) the transactions included in the block (b) the
list of block producers (c) the Consensus Protocol (CP) used to mine the block (d) the list of timestamped
validator votes for a block (CP dependent) (e) votes to remove block producer rights from node (f) votes
proposing new block producers.

Due to the decentralised nature of the Blockchain, connecting the system with it’s digital representation
is not a straight forward process. Unlike traditional centralised systems, with known and high speed network
topologies, Blockchain’s P2P network infrastructure poses a challenge in data collection. Information about
nodes cannot be easily requested and aggregated. Additionally, in most Blockchain applications, nodes are
assumed to be byzantine and thus any non-validated information is assumed to be malicious which further
complicates data collection. One approach, proposed in this paper, is to take advantage of the veriﬁable
transaction data broadcasted to the network and the frequent communication between the block producers
as part of the consensus process, assigning a single block producer as the data provider to the Digital Twin.
The Digital Twin part encompasses three main components: The Scenario generator, The Simulator,
and the Optimiser. The scenario generation module, can be viewed as a high level model of the system
nodes tasked with producing hypothetical workloads.

The scenarios will be fed to the Simulator which is at the heart of the Digital Twin. This may encapsulate
different data-driven models to support a holistic, contextual analysis of the system, including: (a) a model
of the Blockchain system and associated infrastructure (b) agent-based models of smart contract systems (c)
models of the context, e.g. in the case of a Blockchain in the energy sector, this could be models of trading,
models of the regulatory and compliance framework and a model of the energy supply chain (Andoni et al.

UPDATENewTransactionsWorkload StateInformationP2P communication layerBP 1ControlledBPConsensus ProtocolNodesBCTPBCTPApplicationOptimiserScenario GeneratorPhysical SystemWorkload ModelBPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus Protocol NBlockchain ModePlatform ModelSimulation Workload ModelBPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus Protocol NBlockchain ModePlatform ModelSimulation View 3Workload ModelBPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus Protocol NBlockchain ModePlatform ModelSimulation View 2View 1Simulation ModuleWorkload ModelBPBPConsensus ProtocolBPConsensus ProtocolBlockchainModelPlatform ModelScenario MWorkload ModelBPBPBPConsensus ProtocolPlatform ModelScenario1Blockchain ModelBPBPBPConsensus Protocol NScenario 2Scenario 3State of BPDigital TwinNew BlocksState ofComputationalPlatformDiamantopoulos, Tziritas, Bahsoon and Theodoropoulos

2019). The simulator executes faster than real time multiple what-if scenarios for different views of the
system, each view exploring an abstract aspect of the system to optimise for, for instance an energy view,
a trust view, a performance view etc.

The ﬁnal component is the optimiser, which is responsible for evaluating the simulation results, and
selecting the best strategy under the optimisation goals. Pareto fronts and knee points analysis may be
utilised to analyse the different tradeoffs involved (e.g. the cost of adaptation vs the sort and long term
beneﬁts) and make a decision as to what is the best strategy to reconﬁgure the Blockchain. The results of
the simulation can be used to enhance the training an intelligent optimiser. In (Zhang et al. 2020; Zhang
et al. 2022) we have discussed the design of intelligent Digital Twins and have presented an analysis of
the tradeoffs for the adaptation of Digital Twins of agent-based systems.

The completion of the feedback loop, namely the communication and application of the optimiser
output back top the Blockchain system presents an interesting challenge. One approach is to communicate
the outcome to the entrusted controlled BP and allow this node to propagate it to the rest of the network.
This may be achieved by piggybacking the information in the next block to be forwarded or through a
broadcast to all other nodes.

3.2 An Instantiation for Dynamic Consensus Management

Given the centrality of the Consensus Protocol in the bevaviour of Blockchain systems, as an illustrative
example, this section considers the application of the reference Digital Twin model for the dynamic
management of the Blockchain Consensus Protocol. As discussed in section 2, each of the existing
protocols seem to work well under certain Blockchain conﬁgurations and workload conditions while none
is able to deliver a consistently good general solution (Giang-Truong et al. 2018; dos Santos et al. 2018).
Hybrid Consensus Protocols aim to combine elements from the two main algorithms of Proof-of-Work
(PoW) and Proof-of-Stake (PoS). In (Liu et al. 2019a) Proof-Of-Activity is proposed which aims to improve
the security of the Blockchain, however it further increases the latency and the energy consumption of the
Consensus Protocol. In (Huang et al. 2021) a hybrid of PoS and PoW is proposed in which the block
production is done through PoS but a group of validators periodically produce PoW blocks verifying the
Blockchain and preventing roll backs due to forks thus increasing the performance of the Blockchain in those
cases. Both the aforementioned examples designed for permissionless Blockchains. The same applies to
permissioned blockhain systems such as EOS (Huang et al. 2020) and Hyperledger Fabric (Androulaki et al.
2018) which use traditional Byzantine Fault Tolerance (BFT) protocols (Castro et al. 1999; Guerraoui et al.
2010; Kotla et al. 2007). Hybrid algorithms for permissioned systems have also been investigated (Pengxin
et al. 2020).

While hybrid algorithms try to exploit the comparative advantages of different protocols, they fail to
reﬂect dynamic changes of the Blockchain and the associated workloads. it is therefore desirable for the
consensus mechanism to adapt dynamically and switch to the appropriate protocol. Figure 3 illustrates the
architecture of the Digital Twin for this purpose. In this particular example, the aim is the optimisation of
the system’s latency.

The optimisation process begins with the new transactions and new blocks being fed into the Digital
Twin. The number of ofﬂine nodes and the network state may be extracted from the blocks. Speciﬁcally,
ofﬂine nodes can be inferred by the lack of block votes from a particular node while the network delay is
calculated individually for every node as the average delay of their votes. Given the above, the simulation
conducts a what-if exploration of different scenarios for the different Consensus Protocols to predict the
average transaction latency for different conﬁgurations. The transaction latency is deﬁned as the time it
takes from the moment a transaction is broadcasted to the system to the movement that transaction is
packed into a block which gets accepted by the system. The results of the simulation module are into the
optimiser which makes the ﬁnal decision as to which Consensus Protocol to be selected and this decision
is communicated back to the system resulting to a dynamic switch of the Consensus Protocol used by the
Blockchain nodes.

Diamantopoulos, Tziritas, Bahsoon and Theodoropoulos

Figure 3: A Digital Twin for Dynamic Consensus Protocol Selection

4 EVALUATION

To demonstrate the suitability of the proposed approach, this section presents a quantitative analysis focusing
on the optimisation of transaction latency by dynamically switching the Consensus Protocol. The analysis
is based on a prototype implementation of the conceptual model presented in section 3.2. The results
obtained show that dynamically switching Consensus Protocols to reﬂect changes in the Blockchain system
leads to better performance.

4.1 Consensus Algorithms

Two Consensus Protocols have been used for the experiments, the Istanbul Byzantine Fault Tolerance
(IBFT) (Moniz 2020) and BigFoot (Saltini 2022), with IBFT having the ability to tolerate less stable
network conditions and node failures and BigFoot being very efﬁcient under stable ones. Both algorithms
require 3f+1 nodes for tolerating f faulty nodes and can achieve consensus with 2f+1 replies which is the
theoretical optimal (Lamport 2003).

The two protocols are illustrated in Figure 4 (in our analysis, block producer and validator are used
interchangeably). BigFoot has two phases, namely Fast-path and Fallback-path. In the Fast-path, BigFoot
is efﬁcient requiring 2 message delays (namely Pre-prepare and Prepare) to reach consensus but 3f replies
i.e. every node in the system must be online, in sync, and able to reply in time. To guarantee that BigFoot
will eventually reach consensus even under less stable conditions, the Fast-path phase ends after a time
out period if less than 3f but more that 2f replies are received (since the proposing node also counts as
a validator, 2f replies imply 2f+1 validator votes). In this case, an extra Fallback-path phase is initiated
which achieves consensus in 1 extra message delay (commit) and 2f+1 replies. PBFT on the other hand,
always requires 3 message delays (pre-prepare, prepare, commit) and 2f+1 replies to reach consensus.

It is evident from the above, that both algorithms sacriﬁce performance under certain conditions to
excel in others, a fact, that the proposed Digital Twin approach can take advantage and dynamically switch
betwee the two.

4.2 Simulation

The conduct the experiments, the BlockSim (Alharby et al. 2019) simulator was used and extended to support
the modelling of permissioned Blockchains and satisfy the requirements for the system. To the best of our
knowledge, our extension of BlockSim is the only one supporting dynamically changing the Consensus

Selected ConsensusProtocolNewTransactionsNew BlocksP2P communication layerBP 1ControlledBPConsensus ProtocolNodesBCTPBCTPApplicationOptimiserScenario GeneratorPhysical SystemDigitalTwinPlatform stateNetwork state,Offline nodes, etc.View: LatencyBPBPBPConsensus ProtocolBPBPBPConsensusProtocolBPBPBPConsensus ProtocolBPBPBPConsensus Protocol NBlockchainModelBPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus Protocol NBlockchainModelScenario 1 CP 1Blockchain ModelBPBPBPConsensus Protocol 1Scenario 2 CP 1Scenario 3 CP 1BPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus Protocol NBlockchainModelBPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus ProtocolBPBPBPConsensus Protocol NBlockchainModelScenario 1 CP NBlockchain ModelBPBPBPConsensus Protocol NScenario 2 CP NScenario 3 CP NSimulation ModuleDiamantopoulos, Tziritas, Bahsoon and Theodoropoulos

Figure 4: The two Consensus Protocols used in the Analysis

Protocols (IBFT and BigFoot) during runtime and one of only two tools supporting permissioned Blockchain
simulation, the other being Talaria (Xing et al. 2021). Speciﬁcally, the Node, block, and Consensus modules
of the BlockSim simulator were re-implemented to model a permissioned system. The Events structure
of the system was changed from supporting high level events such as consensus and propagate block, to
being able to model the lowest possible level events representing individual messages between the nodes
to allow for more accurate modeling of the system. Finally, the Network module was augmented to model
a unique network state for each node and allow for more complex network state to be modeled.

Using BlockSim, a prototype model of the system illustrated in ﬁgure 3 has been developed. The
block producers produce blocks of size BS with a block interval of BI. The Consensus Protocol works
in rounds.
In each round a block producer is selected to propose a block, and initiate the consensus
process by broadcasting the proposed block. After a block is accepted by a node, that node automatically
advances to the next round. Each round has a timeout period after which the nodes initiate the round
change process to agree on which round to advance to next. This guarantees the system’s liveliness under
faulty or malicious block producers. Finally, the Blockchain node syncing protocol is modiﬁed to include
the current Consensus Protocol along with the new blocks.

Data are provided to the Digital Twin periodically in time intervals (T I) of equal length. The system
remains stable for a number of T I, and state changes occur every T S (T S being an integral multiple of
T I). The parameters used in the system are the following: (a) no. of block producers, (b) state of block
producers over time, (c) network state, (d) state of network over time, (e) avg. transactions per second, (f)
transaction size, (g) max block size, (h) min block interval, and (i) round timeout.

In the simulation phase, the scenario simulates the two protocols for the next time interval T In+1 and
the results of the simulation i.e. the blocks produced, are fed to the optimiser. The optimiser selects the
Consensus Protocol that yields the best average transaction latency.

4.3 Results

The physical system model was designed to represent the worst case scenario, with faulty nodes periodically
going ofﬂine, an unstable network, and a large number of transactions overloading the system. The model
consists of ten block producers with two of them being faulty. The system ﬂuctuates between states every
100 time steps (T S = 100), with the updates occurring every 25 time steps (T I = 25).

For performance evaluation, three metrics were used: (a) average transaction latency (b) average inter
block time and (c) throughput. The average transaction latency was measured for each new block B added
as follows

∑TB

i TimeB − TimeTi
TB

(3)

CommitDelayPreparePre-PrepareProposerValidator 1Validator 2PrepareCommitValidator 3Pre-PrepareValidator 4ProposerValidator 1Validator 2Validator 3Validator 4IBFTBigFootDiamantopoulos, Tziritas, Bahsoon and Theodoropoulos

(a) Latency (BP=10, f=2)

(b) Inter Block Times (BP=10, f=2)

(c) Throughput (BP=10, f=2)

Figure 5: Performance Results

with TB denoting the number of transactions in B, TB the number of transactions included in B, Ti the
ith transaction in B and TimeB, TimeTi the time the block B and transaction Ti were added to the system,
respectively. The inter block time was measured as follows

BBC
with BBC denoting the number of blocks. Finally, the throughput is deﬁned as the number of transactions
that the system is able to process per second and is deﬁned as

(4)

∑BBC
i

TimeBi − TimeBi−1

TBi

∑BBC
i
T

(5)

with T denoting the total system runtime.

The Digital Twin was tasked with optimising the above system by dynamically switching between
the two consensus protocols (IBFT and BigFoot) and for comparison two other identical simulations
were executed, one using the IBFT protocol and the second the BigFoot without any protocol changes.
Speciﬁcally, the parameter values for the evaluation are the following: (a) no. of block producers is set to
10 (BP=10), (b) 2 faulty nodes periodically going ofﬂine (f=2), (c) network state ranges from 0.7MB/s to
2MB/s over time (e) avg. transactions per second is set to 50T/s, (f) transaction size is set to 5KB (g) max
block size is set to 1MB (h) min block interval is set to 0.1s, and (i) the round timeout is set to 10s.

Figure 5 depicts the results of the experiments (note that black points in 5a and 5b denote the mean
values), with Dynamic denoting the system optimised by the Digital Twin. It is evident that the dynamic
protocol switching delivers the best performance. It achieves lower average transaction latency and inter
block times, as well as higher throughput. These results conﬁrm that a dynamic management of the
blockchain by means of a Digital Twin is a viable approach to optimising a blockchain system by adapting
the system parameters to reﬂect system and workload changes.

5 CONCLUSIONS

This paper has put forward the idea of utilising Digital Twins for the dynamic management of Blockchain
systems in addressing the trilemma tradeoff.
It has proposed a generic reference architecture and has
demonstrated how the architecture can be instantiated for the dynamic selection and management of
consensus in Blockchain-based systems to optimise performance, as core inﬂuencer to this tradeoffs. The
experimental analysis has indicated that a Digital Twin can serve as a viable approach for dynamically
managing the Trilemma tradeoff and help in improving performance.

IBFTBigFootDynamic050100150Avg. Transaction Latency Per Block (Sec.)IBFTBigFootDynamic051015Inter Block Times (Sec.)IBFTBigFootDynamicTransactions Per Second (TPS)3032343638404244Diamantopoulos, Tziritas, Bahsoon and Theodoropoulos

Future work will further develop the architecture and reﬁne it to dynamic analysis and management
of richer set of scenarios and complex time varying tradeoffs. We will further extend the architecture to
incorporate multiple views, each abstracting ﬁner aspects of the trilemma. A more sophisticated optimiser
will be developed that will utilise dynamic many optimisation and machine learning techniques to optimise
within and across views to assist in planning and what-if analysis. For the what-if analysis, we will utilise
Distributed Simulation techniques to scale the analysis at digital world, and achieve richer and faster than
real time simulation. The info-symbiotic feedback loop will also be automated with bidirectional updates.

REFERENCES

Abar et al. 2014. “Automated Dynamic Resource Provisioning and Monitoring in Virtualized Large-Scale
Datacenter”. In 2014 IEEE 28th International Conference on Advanced Information Networking and
Applications, 961–970.

Al-Jaroodi et al. 2019. “Blockchain in Industries: A Survey”. IEEE Access 7:36500–36515.
Alharby et al. 2019. “Blocksim: a simulation framework for blockchain systems”. ACM SIGMETRICS

Performance Evaluation Review 46(3):135–138.

Andoni et al. 2019. “Blockchain technology in the energy sector: A systematic review of challenges and

opportunities”. Renewable and Sustainable Energy Reviews 100:143–174.

Androulaki et al. 2018. “Hyperledger fabric: a distributed operating system for permissioned blockchains”.

In Proceedings of the thirteenth EuroSys conference, 1–15.

Barricelli et al. 2019. “A survey on digital twin: Deﬁnitions, characteristics, applications, and design

implications”. IEEE Access 7:167653–167671.

Blasch et al. 2018. Handbook of Dynamic Data Driven Applications Systems. Springer.
Blasch et al. 2019. “A Study of Lightweight DDDAS Architecture for Real-Time Public Safety Applications

Through Hybrid Simulation”. In 2019 Winter Simulation Conference (WSC), 762–773.

Buscher, V. 2019, nov. “Digital twin TOWARDS A MEANINGFUL FRAMEWORK”. Arup, Foresight,

Research and Innovation.

Castro et al. 1999. “Practical byzantine fault tolerance”. In OSDI, Volume 99, 173–186.
Dai et al. 2019. “Blockchain for Internet of Things: A Survey”. IEEE Internet of Things Journal 6(5):8076–

8094.

Darema et al. 2008. “Dynamic Data Driven Applications Systems (DDDAS) – A Transformative Paradigm”.
In Computational Science – ICCS 2008, edited by M. Bubak, G. D. van Albada, J. Dongarra, and
P. M. A. Sloot, 5–5. Berlin, Heidelberg: Springer Berlin Heidelberg.

dos Santos et al. 2018. “PoW, PoS, & Hybrid protocols: A Matter of Complexity?”. arXiv e-prints:arXiv–

1805.

dos Santos et al. 2021. “Decision support in productive processes through DES and ABS in the Digital

Twin era: a systematic literature review”. International Journal of Production Research:1–20.

Eklund et al. 2019. “Factors That Impact Blockchain Scalability”. MEDES ’19, 126–133. New York, NY,

USA: Association for Computing Machinery.

Faniyi et al. 2012. “A Dynamic Data-Driven Simulation Approach for Preventing Service Level Agree-
ment Violations in Cloud Federation”. Procedia Computer Science 9:1167–1176. Proceedings of the
International Conference on Computational Science, ICCS 2012.

Freire et al. 2021. “Harnessing Blockchain For Sustainable Development: Prospects And Challenges”.

United Nations Conference On Trade And Development, UNCTAD/DTL/STICT/2021/3.

Gamage et al. 2020. “A Survey on Blockchain Technology Concepts, Applications, and Issues”. SN Computer

Science 1(114).

Gencer et al. “Decentralization in Bitcoin and Ethereum Networks”. In Financial Cryptography and Data

Security, 439–457. Berlin, Heidelberg: Springer-Verlag.

Giang-Truong et al. 2018. “A Survey about Consensus Algorithms Used in Blockchain”. Journal of

Information Processing Systems 14(1).

Diamantopoulos, Tziritas, Bahsoon and Theodoropoulos

Guerraoui et al. 2010. “The next 700 BFT Protocols”. In Proceedings of the 5th European Conference on
Computer Systems, EuroSys ’10, 363–376. New York, NY, USA: Association for Computing Machinery.

Haﬁd et al. 2020. “Scaling Blockchains: A Comprehensive Survey”. IEEE Access 8:125244–125262.
Hamza et al. 2022. “DONS: Dynamic Optimized Neighbor Selection for smart blockchain networks”.

Future Generation Computer Systems 130:75–90.

Helliar et al. 2020. “Permissionless and permissioned blockchain diffusion”. International Journal of

Information Management 54:102136.

Hu et al. 2021. “A comprehensive survey on smart contract construction and execution: paradigms, tools,

and systems”. Patterns 2(2):100179.

Huang et al. 2020. “Characterizing eosio blockchain”. arXiv preprint arXiv:2002.05369.
Huang et al. 2021. “Incentive Assignment in Hybrid Consensus Blockchain Systems in Pervasive Edge

Environments”. IEEE Transactions on Computers.

Jones et al. 2020. “Characterising the Digital Twin: A Systematic Literature Review”. CIRP Journal of

Manufacturing Science and Technology 29:36–52.

Kampik et al. 2020. “Simulating, Off-Chain and On-Chain: Agent-Based Simulations in Cross-

Organizational Business Processes”. Information 11(1).

Kephart et al. 2003. “The vision of autonomic computing”. Computer 36(1):41–50.
Kim et al. 2017. “A Perspective on Blockchain Smart Contracts: Reducing Uncer- tainty and Complexity
in Value Exchange”. In Proceedings of the IEEE Workshop on Workshop on Privacy, Security, Trust
Blockchain Technologies: http://dx.doi.org/10.2139/ssrn.2975770.

Kim et al. 2021. “An Off-The-Chain Execution Environment for Scalable Testing and Proﬁling of Smart

Contracts”. In USENIX Annual Technical Conference.

Klarman et al. 2019. “bloXroute: A scalable trustless blockchain distribution network, Whitepaper v1.2”.

Bloxroute Labs.

Kotla et al. 2007. “Zyzzyva: speculative byzantine fault tolerance”. In Proceedings of twenty-ﬁrst ACM

SIGOPS symposium on Operating systems principles, 45–58.

Lamport, L. 2003. “Lower bounds for asynchronous consensus”. In Future directions in distributed com-

puting, 22–23. Springer.

Lamport, L. et al. 2001. “Paxos made simple”. ACM Sigact News 32(4):18–25.
Li et al. 2017. “Consortium blockchain for secure energy trading in industrial internet of things”. IEEE

transactions on industrial informatics 14(8):3690–3700.

Li et al. 2019. “Tokenization: Open asset protocol on blockchain”. In 2019 IEEE 2nd International

Conference on Information and Computer Technologies (ICICT), 204–209. IEEE.

Liu et al. 2012. “Towards an Agent-Based Symbiotic Architecture for Autonomic Management of Virtualized
Data Centers”. In Proceedings of the Winter Simulation Conference, WSC ’12: Winter Simulation
Conference.

Liu et al. 2019a. “Fork-free hybrid consensus with ﬂexible proof-of-activity”. Future Generation Computer

Systems 96:515–524.

Liu et al. 2019b. “Performance optimization for blockchain-enabled industrial Internet of Things (IIoT)
learning approach”. IEEE Transactions on Industrial Informat-

systems: A deep reinforcement
ics 15(6):3559–3570.

Maesa et al. 2020. “Blockchain 3.0 applications survey”. Journal of Parallel and Distributed Comput-

ing 138:99–114.

Minerva et al. 2020. “Digital Twin in the IoT Context: A Survey on Technical Features, Scenarios, and

Architectural Models”. Proceedings of the IEEE 108(10):1785–1824.

Moniz, H. 2020. “The Istanbul BFT consensus algorithm”. arXiv preprint arXiv:2002.03613.
Monrat et al. 2019. “A Survey of Blockchain From the Perspectives of Applications, Challenges, and

Opportunities”. IEEE Access 7:117134–117151.

Nakamoto, S. 2008. “Bitcoin: A peer-to-peer electronic cash system”. Decentralized Business Review:21260.

Diamantopoulos, Tziritas, Bahsoon and Theodoropoulos

Odiljon et al. 2019. “Efﬁciency Issues and Solutions in Blockchain: A Survey”. In Smart Blockchain,

76–86. Cham: Springer International Publishing.
Ongaro et al. 2015. “The raft consensus algorithm”.
Onolaja et al. 2010. “Conceptual framework for dynamic trust monitoring and prediction”. Procedia

Computer Science 1(1):1241–1250. ICCS 2010.

Pengxin et al. 2020. “Hybrid Consensus Algorithm Optimization: A Mathematical Method Based on POS
and PBFT and Its Application in Blockchain”. Mathematical Problems in Engineering 2020,(7270624).
Saltini, R. 2022. “BigFooT: A robust optimal-latency BFT blockchain consensus protocol with dynamic

validator membership”. Computer Networks 204:108632.

Santos, D. et al. 2017. “On the Philosophy of Bitcoin/Blockchain Technology: Is it a Chaotic, Complex

System?”. Metaphilosophy 48(5):620–633.

Solaiman et al. 2021. “Implementation and evaluation of smart contracts using a hybrid on- and off-blockchain

architecture”. Concurrency and Computation: Practice and Experience 33(1):e5811.

Soloviev et al. 2019. “Complex Systems Theory and Crashes of Cryptocurrency Market”. In Information
and Communication Technologies in Education, Research, and Industrial Applications, edited by
V. Ermolayev, M. C. Su´arez-Figueroa, V. Yakovyna, H. C. Mayr, M. Nikitchenko, and A. Spivakovsky,
276–297. Cham: Springer International Publishing.

Suhail et al. 2022, feb. “Blockchain-Based Digital Twins: Research Trends, Issues, and Future Challenges”.

ACM Comput. Surv..

Theodoropoulos, G. 2015. “Simulation in the Era of Big Data: Trends and Challenges”. In Proceedings
of the 3rd ACM SIGSIM Conference on Principles of Advanced Discrete Simulation, SIGSIM PADS
’15, 1. New York, NY, USA: Association for Computing Machinery.

Tolk, A. 2015. “The next Generation of Modeling & Simulation: Integrating Big Data and Deep Learning”.
In Proceedings of the Conference on Summer Computer Simulation, SummerSim ’15, 1–8. San Diego,
CA, USA: Society for Computer Simulation International.

Uzsoki et al. 2019. “Impact Tokens A blockchain based solution for impact investing”. International Institute

for Sustainable Development.

Xing et al. 2021. “Talaria: A Framework for Simulation of Permissioned Blockchains for Logistics and

Beyond”. arXiv preprint arXiv:2103.02260.

Xiong et al. 2018. “When Mobile Blockchain Meets Edge Computing”. IEEE Communications Maga-

zine 56(8):33–39.

Xu et al. 2019. “Exploration of blockchain-enabled decentralized capability-based access control strategy

for space situation awarenes”. Optical Engineering 58(4).

Xu et al. 2020. “Hybrid blockchain- enabled secure microservices fabric for decentralized multi-domain
avionics systems”. In Proceedings of Sensors and Systems for Space Applications XIII, Volume 11422.
Ynag et al. 2022. “Fusing Blockchain and AI with Metaverse: A Survey”. arXiv preprint arXiv:2201.03201.
Yu et al. 2018. “Virtualization for distributed ledger technology (vDLT)”. IEEE Access 6:25019–25028.
Zhang et al. 2020. “Towards Engineering Cognitive Digital Twins with Self-Awareness”. In 2020 IEEE

International Conference on Systems, Man, and Cybernetics (SMC), 3891–3891.

Zhang

et

al.

2022.

“Knowledge Equivalence

in Digital Twins

of

Intelligent Systems”.

arXiv (10.48550/ARXIV.2204.07481).

Zhao et al. 2021. “A stochastic model and social optimization of a blockchain system based on a general
limited batch service queue”. Journal of Industrial and Management Optimization 17(4):1845–1861.
Zheng et al. 2018. “Blockchain challenges and opportunities: a survey”. International Journal of Web and

Grid Services 14(4):352–375.

