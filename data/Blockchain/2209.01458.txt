2
2
0
2

p
e
S
3

]
F
P
.
s
c
[

1
v
8
5
4
1
0
.
9
0
2
2
:
v
i
X
r
a

A Markov Process Theory for Network Growth

Processes of DAG-based Blockchain Systems

Xing-Shuo Songa, Quan-Lin Lib, Yan-Xia Changb, Chi Zhangb
aSchool of Economics and Management

Yanshan University, Qinhuangdao 066004, China
bSchool of Economics and Management

Beijing University of Technology, Beijing 100124, China

September 7, 2022

Abstract

Note that the serial structure of blockchain has a number of essential pit-

falls, and, thus, a data network structure and its DAG-based blockchain are

introduced to resolve the blockchain pitfalls. From such a network perspective,

analysis of the DAG-based blockchain systems becomes interesting but diﬃ-

cult and challenging. So, the simulation models are adopted widely. In this

paper, we ﬁrst describe a simple Markov model for the DAG-based blockchain

with IOTA Tangle by means of two layers of tips and internal tips’ impatient

connection behavior. Then we set up a continuous-time Markov process to

analyze the DAG-based blockchain system and show that this Markov pro-

cess is a level-dependent quasi-birth-and-death (QBD) process. Based on this,

we prove that the QBD process must be irreducible and positive recurrent.

Furthermore, once the stationary probability vector of the QBD process is

given, we provide performance analysis of the DAG-based blockchain system.

Nextly, we propose a new eﬀective method for computing the average sojourn

time of any arriving internal tip at this system by means of the ﬁrst passage

1

 
 
 
 
 
 
times and the PH distributions. Finally, we use numerical examples to check

the validity of our theoretical results and indicate how some key system pa-

rameters inﬂuence the performance measures of this system. Therefore, we

hope that the methodology and results developed in this paper shed light on

the DAG-based blockchain systems such that a series of promising research

can be developed potentially.

Keywords: Blockchain; Direct Acyclic Graph (DAG); IOTA; Tangle;

Tip; QBD process; Performance analysis; Sojourn time.

1

Introduction

Blockchain technologies originated from Bitcoin by Nakamoto [66] in 2008. Since

then, blockchain has attracted tremendous attention from both practitioners and

academics in many diﬀerent areas, such as ﬁnance, reputation system, security,

public service, anti-corruption, Internet of Things, and so on. Blockchain has many

remarkable and excellent features, for example, decentralization, distributed struc-

ture, availability, persistency, consistency, anonymity,

immutability, auditability,

and accountability. Bitcoin and Ethereum are regarded as the two most representa-

tive blockchain technologies that have primarily contributed to such popularity gain.

So far, blockchain technologies have signiﬁcantly enabled a wide spectrum of appli-

cations from “cryptocurrency, ﬁnancial service, reputation system, security, public

service, smart contracts, Internet of Things” to “healthcare, energy management,

supply chain management, sharing economy, social governance, insurance, law, art

among others”. Readers may refer to recent survey papers for details, among which

are Wang et al. [97], Gorkhali et al. [39], Belchior et al. [5] and Huang et al. [46].

It is worthwhile to note that Bitcoin stores transactions in a publicly available

ledger. Each block contains a ﬁnite batch of transactions and the blocks are strung

together in a chronological order such that they can construct a chain of blocks. The

consistency of the ledger comes from the structural extension in the series of the

blocks. The newly added block is viewed as legitimate only if it is consistent with

the chain of all those blocks in front of it. After Bitcoin, other cryptocurrencies,

2

like Ethereum and Litecoin, originate from extending and generalizing the useful

functionalities of Bitcoin. But they still retain the block-to-block series connection

of physical structure. For Bitcoin, Ethereum and other blockchain systems, when

there is an honest mining pool (note that the multiple honest mining pools can merge

into a total honest mining pool) and multiple diﬀerent dishonest mining pools in the

system, it can cause multiple block branches on this tree. In this case, the blockchain

can be set up by pegging each main chain at each round, which is a competitive

result from a tree of blocks by means of the longest chain principle. Notice that the

backbone of this tree is built by the honest mining pool, while the other branches are

built by only the dishonest mining pools under a physical setting that a dishonest

mining pool can only build one branch at most. See Li et al.

[59, 60] for more

details.

However, the serial structure of blockchain (including a blockchain generated

from the tree of blocks with multiple branches) has a number of essential pit-

falls, such as poor performance and scalability, limited transaction throughput, high

transaction cost, long conﬁrmation delay, huge energy expenditure (Proof of Work),

and so forth. To resolve these blockchain pitfalls, a DAG data network structure

was introduced to the blockchain technologies (called a DAG-based blockchain) in

order to replace the serial structure of the blockchain. On one hand, the DAG-based

blockchain has quickly emerged in the context of the Internet of Things, e.g., see

Ferrag et al.

[30], Lo et al.

[63], Viriyasitavat et al.

[90], Cullen et al.

[21] and

Alshaikhli et al. [1]. On the other hand, the DAG-based blockchain has increasingly

been adopted in the ﬁeld of Distributed Ledger Technology, e.g., see Zhu et al. [106],
Gorbunova et al. [38], Park et al. [70] and Benˇci´c and ˇZarko [6].

To develop the DAG-based blockchain and facilitate secure payments and com-

munication between devices of the Internet of Things, the IOTA Foundation pro-

posed a new protocol called IOTA, which has a DAG data network structure. Read-

ers may refer to papers, such as Popov [75, 76], Popov and Buchanan [77], and

Popov et al. [78, 79]. From the Popov’s papers, it is easy to see that all the transac-

tions would be approved and stored permanently on the IOTA Tangle. In addition,

to further understand the basic elements of the IOTA Tangle, readers may refer to

3

Conti et al. [18], Attias and Bramas [3], and Fan [27] for more details.

So far, the Internet of Things has gained rapid development and has also been

applied to many diﬀerent practical ﬁelds, such as logistics, supply chain manage-

ment, healthcare, smart city, intelligent transportation, intelligent security, intel-

ligent building, intelligent home, heritage protection, positioning and navigation,

video surveillance, and so on. It is well known that the Internet of Things will gen-

erate massive amounts of data every day. In this case, blockchain is a key technology

for setting up a necessary and eﬀective platform to store and manage the data from

Internet of Things. Also, in this research line, it is the key to apply the IOTA Tan-

gle to Internet of Things due to the fact that the DAG-based blockchain has high

transaction throughput, good performance, and low cost. To this end, readers may

refer to survey papers by Alshaikhli et al. [1] and Lo et al. [63]; Distributed Ledger

Technology by Cullen et al. [20, 21], Park et al. [70] and Siim [84]; and industrial

Internet of Things by Cui et al. [19] and Liao et al. [62].

Up to now, there has been some key research on the DAG-based blockchain with

IOTA Tangle. To help readers quickly understand the recent literature and associ-

ated advances, here we provide an overview of DAG-based blockchain as follows:

(1) The survey papers: Wang et al.

[95], Bai [4], Siim [84], Brunner [13] and

Keidar et al. [49].

(2) The IOTA Tangle application in the Internet of Things: Hellani et al. [44],

Gerrits [37], Silvano and Marcelino [85], Lee and Sim [56], Wang et al. [96], Zhang

et al. [102] and Igiri et al. [47].

(3) New consensus protocols developed in the DAG-based blockchain: Danezis

et al.

[22], Wang et al.

[94], Cui et al.

[19], Zhang et al.

[103], Tian et al.

[88],

Reddy and Sharma [80], Schett and Danezis [82], Xiang et al.

[99], Nguyen et al.

[68], Zhou et al. [105], Spiegelman et al. [86], Deng et al. [24] and M¨uller et al. [65].

(4) Performance analysis of the DAG-based blockchain: Dong et al.

[26], Fan

[27], Fan et al. [28] and Penzkofer et al. [71].

(5) Security of the DAG-based blockchain: Conti et al.

[18], Bramas [10, 11],

Shabandri et al.

[83], Bhandary et al.

[7], Li et al.

[61], Wang et al.

[91, 95],

Madenouei [64], Brighente et al. [12] and Fan et al. [28]. In addition, the parasite

4

chain attacks are discussed by Staupe [87], Cullen et al.

[20] and Penzkofer et al.

[71].

(6) Privacy of the DAG-based blockchain: Shabandri et al. [83].

(7) Scalability of the DAG-based blockchain: Chen et al. [17], Wang [93], Made-

nouei [64] and Fan et al. [28].

(8) Throughput of the DAG-based blockchain: Zhang et al.

[103], Madenouei

[64], Brighente et al. [12] and Fan et al. [28].

(9) Stability of the DAG-based blockchain: Bramas [10] and Ferraro et al. [32].

(10) Control of the DAG-based blockchain: Ferraro [33], Vigneri et al.

[89],

Nakanishi [67] and Gupta and Krishnamurthy [42].

(11) Physical structure of the DAG-based blockchain: A serialized bolckDAG by

Gupta and Janakiram [41] and A mixed Tangle-Blockchain architecture by Hassine

et al. [43].

(12) Data analysis of the DAG-based Blockchain: Guo et al. [40], Gangwani et

al. [34], Penzkofer et al. [72] and Silvano and Marcelino [85].

(13) Comparison among DAG, PoW, PoS and BFT: Pervez et al. [74], Anwar

[2], Cao et al. [14], Gerrits [37], Khrais [50] and Danezis et al. [23].

(14) Useful features of the DAG-based blockchain: Ferraro et al. [31], Zou et al.

[107], Cao et al. [15], Watanabe et al. [98], Wang et al. [94], Fan et al. [29], Zhao

and Yu [104], Zhou et al. [105], Birmpas et al. [8], Yin et al. [100], Ding and Sato

[25], Gao et al.

[35], Tian et al.

[88], Zhang et al.

[102, 103], Hellani et al.

[45],

Wang et al.

[96], Jay et al.

[48], Nguyen et al.

[68], Liao et al.

[62], M¨uller et al.

[65].

To further improve the performance of the IOTA Tangle (including the above

14 aspects), it is a key to provide a performance analysis of DAG-based blockchain

systems. However, it is interesting but diﬃcult and challenging to set up a mathe-

matical model for analyzing the performance of the DAG-based blockchain systems.

To this end, so far, there have been two diﬀerent research classes as follows: (a) An-

alytical models by Dong et al. [26], Fan [27], Park and Kim [69], Park et al. [70], Li

et al. [61], Cao et al. [14], Birmpaset al. [8] and Fan et al. [28]; and (b) simulation

models by Zander et al. [101], Bottone et al. [9], Lathif et al. [55], Madenouei [64]

5

and Wang et al. [95].

Diﬀerent from those above works in the literature, this paper provides a Markov

process theory in the study of DAG-based blockchain. By using our Markov process,

for a DAG-based blockchain system, we can provide its stability analysis, perfor-

mance evaluation, and optimal control. Therefore, our Markov process theory can

be regarded as a key advance in the study of DAG-based blockchain.

To show how to set up a Markov process, it is necessary and useful to introduce

the IOTA Tangle. The transactions are stored in a DAG, referred to as Tangle.

IOTA uses the PoW protocol and transaction validation to set up the DAG-based

blockchain. Note that the IOTA transactions are atomic in the Tangle, thus one

block corresponds to a transaction. The IOTA transactions are connected via di-

rected edges to other transactions, where a directed edge means that a transaction

(head) is approved by another (tail). To issue a transaction and store it in a DAG

permanently, the issuer must approve two other transactions. Any transaction that

has not yet been approved is called a tip. The issuer uses a tip selection algorithm

to choose which tips to approve and uses the proof of work to ensure the validity of

such an approval. Based on this, the main purposes of this paper are to discuss the

random behavior of these tips in the DAG and to set up a Markov process of the

tip number.

A few studies close to our work is to apply the simulation models by Ku´smierz

[51], Ku´smierz and Gal [52], Ku´smierz et al.

[53, 54], Zanderet at al.

[101], Bot-

tone et al.

[9], Lathif et al.

[55], Chafjiri and Esfahani [16], Zhao and Yu [104],

Gardner et al.

[36], Cullen et al.

[20], Wang et al.

[91, 92] and Pereˇs´ıni et al.

[73]. By comparing our Markov process with those simulation models, we ﬁnd that

our Markov process can provide more accurate and detailed analysis in the study of

DAG-based blockchain. When using our Markov process, the (tip) random behavior

of the IOTA Tangle can clearly be understood from the network structure of Tip

connections in the time order. In the DAG-based blockchain, each transaction will

have a copy of the stored information; while the network latency causes inconsis-

tency in the content of the transactions’ copies. Thus, this inconsistency can cause

a phenomenon in a deterministic sense that a tip will be selected multiple times.

6

However, our Markov process will not cause such a phenomenon that a tip can be

selected multiple times. Therefore, this leads to a great simpliﬁcation of our Markov

analysis for the DAG-based blockchain with IOTA Tangle.

Based on the above analysis, the main contributions of this paper are listed as

follows:

(a) We ﬁrst describe a simple Markov model for the DAG-based blockchain with

IOTA Tangle by means of two layers of tips and internal tips’ impatient connection

behavior. Then we set up a continuous-time Markov process to analyze the DAG

blockchain system, and show that the Markov process is a level-dependent QBD

process. Based on this, we prove that this QBD process must be irreducible and

positive recurrent, and can provide performance analysis of the DAG blockchain

system by using the stationary probability vector of the QBD process.

(b) We propose a new eﬀective method for analyzing the sojourn time of any

arriving internal tip at this system by means of the ﬁrst passage times and the PH

distributions. Further, we compute the average sojourn time of any arriving internal

tip by means of the RG-factorizations.

(c) We use numerical examples to check the validity of our theoretical results,

and to discuss how the performance measures of the DAG-based blockchain with

IOTA Tangle depend on some key parameters of this system.

Therefore, we believe that the methodology and results developed in this paper

shed light on the DAG blockchain systems such that a series of promising research

can be developed potentially.

The remainder of this paper is organized as follows. Section 2 provides a detailed

model description for the DAG-based blockchain system. Section 3 shows that the

DAG-based blockchain system is related to a level-dependent QBD process, and

proves that the DAG-based blockchain system must be irreducible and positive

recurrent. Section 4 provides a performance analysis of the DAG blockchain sys-

tem. Section 5 proposes a new eﬀective method for analyzing the sojourn time of

any arriving internal tip and computes the average sojourn time by means of the

RG-factorizations. Section 6 uses numerical examples to discuss how performance

measures of the DAG-based blockchain system depend on some key parameters of

7

this system. Section 7 gives some concluding remarks.

2 Model Descriptions

In this section, we provide a model description for a DAG-based blockchain system

and its associated network growth process. Also, we give mathematical notations,

random factors, and necessary parameters.

In a DAG-based blockchain system, its network growth process depends on the

arrivals of new transactions and the increase of conﬁrmed transactions through us-

ing a connection algorithm in the IOTA Tangle. Here, the conﬁrmed transactions

are called network nodes (or blocks). To understand the IOTA Tangle easily, the

network growth process of the DAG-based blockchain is depicted in Figure 1 with

some physical interpretations.

Boundary tips

Internal tips

m

m

a

l

Set of tips

m

a

Approval rate

Impatient rate

Confirmed transaction

Boundary tip

Internal tip

Figure 1: Network growth process of DAG blockchain system

By using Figure 1, we ﬁrst introduce a key concept: Tips, which are necessary

and useful in our next study. If any transaction is not approved by another yet,

then the transaction is called a tip. In this case, it is seen from Figure 1 that all the

8

tips are divided into two diﬀerent categories: The boundary tips and the internal

tips. Note that there is a key evolutive characteristic between a boundary tip and an

internal tip. If an internal tip synchronously approves two boundary tips, then the

two boundary tips become two conﬁrmed transactions, so that the two boundary

tips immediately become the network nodes (or the conﬁrmed blocks) and leave the

set of tips. At the same time, the internal tip immediately becomes a boundary tip

and enters the set of boundary tips.

In this paper, we introduce a key impatient behavior of internal tips. To prevent

the set of internal tips from becoming bigger and bigger such that the system keeps

a highly dynamic nature, we assume that every one of the internal tips has an

impatient behavior. Let X be a nonnegative random variable. If the waiting time

of an internal tip is not less than X, then the internal tip immediately becomes a

boundary tip. It is worthwhile to note that the impatient behavior of internal tips

makes that each tip can leave the set of tips as soon as possible.

By using Figure 1, we can provide a detailed description of the DAG-based

blockchain system and its associated network growth process as follows:

(1) For the convenience of discussion, we assume that the capacity of internal

tips is ﬁnite such that S(t) ≤ M, where M is a ﬁnite positive integer. Note that there

exists at least one genesis block (i.e., an initial transaction) in the set of boundary

tips. Thus, we have S(t) ≥ 1 at any time. At the same time, we assume that the

capacity of boundary tips is inﬁnite.

(2) Arrivals of new transactions: Some accounts submit new transactions

into the DAG-based blockchain system according to a Poisson process with arrival

rate λ > 0.

(3) Connection of each internal tip with two boundary tips: With the

same probability, each internal tip in the set of internal tips can synchronously

connect with any two diﬀerent boundary tips in the set of tips and their connection

time is exponential with connection rate µ > 0.

In fact, such a connection is an approval, that is, the two boundary tips are

approved by the internal tip. This means that the two boundary tips become two

conﬁrmed transactions so that the two boundary tips immediately become the net-

9

work nodes (or the conﬁrmed blocks) and leave the set of tips. At the same time,

the internal tip immediately becomes a boundary tip and enters the set of boundary

tips.

(4) Impatient behavior of each internal tip: To enable the tips to enter the

network nodes (i.e., the conﬁrmed transactions), we assume that each internal tip

has an impatient behavior. If the waiting time of the internal tip exceeds a random

impatient time, then this internal tip directly becomes a boundary tip and enters

the set of boundary tips. We assume that the impatient time of each internal tip is

exponential with inpatient rate α > 0.

(5) Independence: We assume that all the random variables deﬁned above are

independent of each other.

Remark 1 In the DAG-based blockchain system, we introduce the impatient time

of each internal tip such that the internal tips can be accelerated to become network

nodes. In this case, the throughput of the DAG-based blockchain system is improved

greatly. At the same time, the impatient behavior can also prevent some tips from

staying for too much time in the set of tips.

Remark 2 In the DAG-based blockchain system, the purpose of this paper is to

concentrate on the dynamic characteristics of tips changing from the internal tips,

to the boundary tips, and ﬁnally, to the network nodes. While introducing some

random factors, this paper may be the ﬁrst to apply the Markov process theory to

the study of DAG-based blockchain.

3 A Level-Dependent QBD Process

In this section, we consider the network growth process of the DAG-based blockchain

system by means of a continuous-time level-dependent QBD process, and obtain a

stability condition of the DAG-based blockchain system.

Let Q(t) and S(t) be the numbers of the internal tips and the boundary tips in

the DAG-based blockchain system at the time t ≥ 0, respectively. Note that once

an internal tip completes the connection (or approval) with two boundary tips, the

10

two boundary tips become two network nodes so that both of them leave the set of

boundary tips immediately; while the internal tip becomes a new boundary tip in

the set of boundary tips. In this case, the tip number in the set of boundary tips

will be reduced by one. If a new transaction arrives at the set of internal tips, the

tip number in the set of internal tips will be increased by one. If the internal tip

becomes a new boundary due to the impatient behavior of internal tips, then the

tip number in the set of internal tips will be decreased by one, while the tip number

in the set of boundary tips will be increased by one.

Lemma 1 For any time t ≥ 0, 1 ≤ S(t) ≤ M.

Proof: S(t) ≤ M comes from Assumption (1) in Section 2: The capacity

of internal tips is ﬁnite. Thus, in what follows we only prove that S(t) ≥ 1 by

induction.

Firstly, for n = 0 and t0 = 0, S(0) ≥ 1 follows the fact that there exists at least

one genesis block in the set of boundary tips.

Let t1 be the epoch that the Markov process {S(t) : t ≥ 0} has the ﬁrst state

jumping when it begins at time 0. Then S(t) = S(0) ≥ 1 for 0 ≤ t < t1; while

S(t1) > S(0) ≥ 1 is due to the fact that a new boundary tip comes from an impatient

internal tip, and S(t1) ≥ 1 is due to the fact that once an internal tip completes the

connection (or approval) with two boundary tips, the two boundary tips become

two network nodes so that both of them leave the set of boundary tips immediately,

and the internal tip becomes a new boundary tip in the set of boundary tips.

Secondly, in the cases: n = 1 to k − 1, this result holds. Now, we show that for

n = k, this result also holds. To this end, we write

tk > tk−1 > tk−2 > · · · > t1 > t0 = 0

and

S(tk−1) > 1, S(tk−2) > 1, . . . , S(t1) > 1, S(t0) ≥ 1,

where tk be the epoch that the Markov process {S(t) : t ≥ 0} has the ﬁrst state

jumping when it begins at time tk−1.

11

Now, we observe this result at time tk. Note that S(t) = S(0) ≥ 1 for tk−1 ≤ t <

tk; while S(tk) > S(tk−1) ≥ 1 is due to the fact that a new boundary tip comes from

an impatient internal tip, and S(tk) ≥ 1 is due to the fact that once an internal tip

completes the connection (or approval) with two boundary tips, the two boundary

tips become two network nodes so that both of them leave the set of boundary

tips immediately, and the internal tip becomes a new boundary tip in the set of

boundary tips. Therefore, this result can hold at time tk. By induction, we show

that this result can hold at time t ≥ 0, i.e., S(t) ≥ 1 for time t ≥ 0. This completes
the proof. (cid:3)

It is easy to see that {(Q(t), S(t) : t ≥ 0)} is a two-dimensional continuous-time

Markov process on a state space, given by

Ω = {(n, m) : n ≥ 0, 1 ≤ m ≤ M} .

Based on this, the state transition relations of this two-dimensional Markov process

{(Q(t), S(t) : t ≥ 0)} are depicted in Figure 2.

Figure 2: The state transition relations of the two-dimensional Markov process

It is easy to see from Figure 2 that the Markov process {(Q(t), S(t) : t ≥ 0)} is

a continuous-time level-dependent QBD process whose state space is rewritten as

∞

Ω =

Level k,

k=0
[

12

where

Level k = {(k, m) : 1 ≤ m ≤ M} .

Therefore, the Markov process {(Q(t), S(t) : t ≥ 0)} is a level-dependent QBD pro-

cess whose inﬁnitesimal generator is given by

A0,0 A0,1

A1,0 A1,1 A1,2

A2,1 A2,2 A2,3
. . .
. . .

. . .
Ak,k−1 Ak,k Ak,k+1
. . .

. . .

−λ

−λ

. . .

, A0,1 =










−λ

λ

λ










Q =

A0,0 =

























,
















;










λ

. . .

. . .

0

kα

kC 2

2 µ 0
. . .













kα
. . .
kC 2
M −1µ

. . .

0

kα

kC 2

M µ 0

,













Ak,k−1 =

−(kα + λ)

− (kC 2

2 µ + kα + λ)

. . .

−

kC 2

M −1µ + kα + λ

Ak,k+1 =

(cid:0)

λ

.










λ

λ

. . .

13










,













(cid:1) − (kC 2

M µ + λ)

where

for k ≥ 1,

Ak,k =













In what follows we apply the mean drift method (e.g., see Chapter 3 in Li [57])

to study the stability of the level-dependent QBD process Q corresponding to the

DAG-based blockchain system.

The following theorem provides a necessary and suﬃcient condition under which

the level-dependent QBD Q must be irreducible and positive recurrent.

Theorem 1 The level-dependent QBD Q must be irreducible and positive recurrent.

Thus, the DAG-based blockchain system is positive recurrent.

Proof: The irreducibility of this QBD process Q can be directly checked from

Figure 2. Therefore,

in what follows we only need to prove that it is positive

recurrent.

Note that the QBD process Q is irreducible, level-dependent and each of its levels

has ﬁnite states. Thus, we apply the mean drift method to compare the upward

mean drift rate with the downward mean drift rate on Level k for a larger positive

integer k ≥ 1.

For a larger positive integer k ≥ 1, we have

Ak = Ak,k−1 + Ak,k + Ak,k+1

−kα

kα

kC 2

2 µ − (kC 2
2 µ + kα)
. . .

kα
. . .
kC 2
M −1µ −

kC 2

. . .
M −1µ + kα
kC 2
M µ

(cid:0)

kα

(cid:1)

−kC 2

M µ

.













=













It is easy to see that the Markov process Ak is irreducible, aperiodic and ﬁnite

states. Thus, the Markov process Ak must be positive recurrent.

Let β(k) = (β(k)

1 , β(k)

2 , ..., β(k)

M ) be the stationary probability vector of the Markov
process Ak. Then β(k)Ak = 0 and β(k)e = 1, where e is a column vector of size

M whose components are all ones. Now, we solve the system of linear equations:

14

β(k)Ak = 0 and β(k)e = 1, that is,

1 + µβ(k)

−αβ(k)
αβ(k)
αβ(k)

i−1 − (C 2
M −1 − µC 2

2 = 0,
i µ + α) β(k)
M β(k)
M = 0.

i + C 2

i+1µβ(k)

i+1 = 0, 2 ≤ i ≤ M − 1,

(1)





We obtain

β(k)
2 =

α
µ

β(k)
1 =

1
C 2

β(k)
3 =

α
µ

1
3

(cid:18)

2

β(k)
1 =

(cid:19)
3

β(k)
1 =

β1

(k),

α
µ

(cid:19)

2 (cid:18)
1
2 C 2
C 2

α
µ

3 (cid:18)

1
3 C 2
2 C 2

C 2

4 (cid:18)

(cid:19)
α
µ

2

β1

(k),

3

β1

(k),

(cid:19)

1

β(k)
s =

s

s−1

β1

(k).

α
µ

(cid:19)

C 2

i (cid:18)

β(k)
4 =

1
18

α
µ

(cid:18)

for 5 ≤ s ≤ M

(cid:19)

By using β(k)e = 1, we obtain

i=2
Q

β(k)
1 +

1
C 2

2 (cid:18)

α
µ

(cid:19)

β(k)
1 + · · · +

α
µ

M −1

β(k)
1 = 1,

(cid:19)

C 2

i (cid:18)

1

M

i=2
Q

1

.

j−1

α
µ

1
C2
i (cid:16)

j
Q
i=2

this gives

β(k)
1 =

M

1+

j=2
P
Thus the stationary probability vector of the Markov process Ak is given by

(cid:17)

β(k)
1 =

M

1+

1

1
C2
i (cid:16)
α
µ

,

j−1

α
µ

(cid:17)
s−1

j
Q
i=2

j=2
P
1
C2
i

s
Q
i=2
M

β(k)
s =

(cid:17)

(cid:16)
1
C2
i (cid:16)

j
Q
i=2

, 2 ≤ s ≤ M.

j−1

α
µ

(cid:17)

1+

j=2
P

Clearly, the stationary probability vector β(k) is independent of the number k.

15

Now, we calculate the upward and downward mean drift rates on Level k. It is

easy to check that the upward mean drift rate, from Level k to Level k + 1, is given

by

β(k)Ak,k+1e = β(k)(λ, λ, . . . , λ)T = λβ(k)e = λ.

Similarly, the downward mean drift rate, from Level k to Level k − 1, is given by

β(k)Ak,k−1e = β(k)

kα, k

µC 2

, k

µC 2

3 + α

, . . . , k

C 2

M −1µ + α

, C 2

M kµ

= kα

(cid:0)
β1

(k) + β2
(cid:0)

(k) + · · · + β(k)
(cid:1)
M −1

(cid:0)

(cid:0)

(cid:1)

2 + α
(k) + β3
(cid:1)

T

(cid:1)

+ kµ

(cid:16)
C 2

2 β2

(k) + C 2

3 β3

(k) + · · · + C 2

M β(k)

M

= kα

(cid:16)

(cid:16)

M

1 − β(k)
M

+ kµ

C 2

j βj

(k).

(cid:17)

j=2
X

Thus, we get

(cid:17)

(cid:17)

β(k)Ak,k−1e − β(k)Ak,k+1e = kα

1 − β(k)
M

+ kµ

C 2

j βj

(k) − λ.

M

(cid:16)

(cid:17)

j=2
X

Note that λ, α(1 − β(k)

M ) and µ

C 2

j βj

(k) are positive numbers and they are inde-

j=2
pendent of the number k. Thus, it is easy to see that as k → +∞,
P

M

β(k)Ak,k−1e − β(k)Ak,k+1e → +∞.

In this case, there always exists a larger positive integer K such that for l ≥ K,

β(l)Al,l−1e − β(l)Al,l+1e > 0.

Thus, the downward mean drift rate is bigger than the upward mean drift rate, that

is,

β(l)Al,l−1e > β(l)Al,l+1e.

Therefore, we show that the continuous-time level-dependent QBD process Q is
positive recurrent. This completes the proof. (cid:3)

16

4 Performance Analysis

In this section, we ﬁrst compute the stationary probability vector of the level-

dependent QBD process by means of the RG-factorizations given in Li [57]. Then

we provide performance analysis of the DAG-based blockchain system.

Let

pk,i (t) = P {Q (t) = k,S (t) = i} , k ≥ 0, 1 ≤ i ≤ M.

Then since the level-dependent QBD process Q is irreducible and positive recurrent,

we have

We write

and

πk,i = lim
t→∞

pk,i (t) .

πk = (πk,1, πk,2, . . . ,πk,M ) , k ≥ 0,

π = (π0, π1, π2, . . .)

Note that the QBD process is level-dependent, we need to use the RG-factorizations

to compute the stationary probability vector. To this end, we introduce R-, U- and

G- measures as follows:

Uk = Ak,k + Ak,k+1

−U −1
k+1

Ak+1,k, k ≥ 0,

Rk = Ak,k+1

(cid:0)
−U −1
k+1

(cid:1)

, k ≥ 0,

Gk =

(cid:0)
−U −1
k+1

Ak+1,k, k ≥ 1.

(cid:1)

On the other hand, by using Ramaswami and Taylor [81], the matrix sequence

(cid:0)

(cid:1)

{Rk, k ≥ 0} is the minimum nonnegative solution of the system of nonlinear matrix

equations

Ak,k+1 + RkAk+1,k+1 + RkRk+1Ak+2,k+1 = 0, k ≥ 0,

and the matrix sequence {Gk, k ≥ 1} is the minimum nonnegative solution of the

system of nonlinear matrix equations

Ak,k+1Gk+1Gk + Ak,kGk+Ak,k−1 = 0, k ≥ 1.

17

Once {Rk, k ≥ 0} or {Gk, k ≥ 1} is determined, we can get

Uk = Ak,k + RkAk+1,k = Ak,k + Ak,k+1Gk+1, k ≥ 0.

By using the R-, U- and G- measures and Li [57] or Li and Cao [58], the UL-type

RG-decomposition of the QBD process is given by

where

Q = (I − RU ) UD (I − GL) ,

UD = diag (U0, U1, U2, . . .) ,

0 R0

0 R1

0 R2
. . .

. . .

RU =










, GL =










0



G1











0

G2

0

G3

0
. . .

. . .

.













Theorem 2 The stationary probability vector π of the level-dependent QBD process

Q is given by

πk = c˜πk, k ≥ 0,

˜πk = ˜π0R0R1 · · · Rk−1, k ≥ 1,

where ˜π0 is uniquely determined by the system of linear equations

˜π0 (A0,0 + R0A1,0) = 0,

˜π0e = 1,

and the constant c is given by

1

.

˜π0R0R1 · · · Rk−1e

c =

˜π0e +

∞

k=1
P

18

Based on the stationary probability vector, we provide some steady-state per-

formance measures of the DAG-based blockchain system as follows:

(1) The steady-state average number of internal tips in the DAG-based blockchain

system is given by

E [NA] = [(π1,1 + π1,2 + π1,3+ · · · + π1,M ) + 2 (π2,1 + π2,2 + π2,3+ · · · + π2,M )

+3 (π3,1 + π3,2 + π3,3+ · · · + π3,M ) + · · ·]
∞

∞

=

k · πke = c

k · ˜πke

k=1
X
∞

k=1
X

=c

k˜π1R1R2 · · · Rk−1e.

k=1
X

(2) The steady-state average number of boundary tips in the DAG-based blockchain

system is given by

E [NB] = [(π0,1 + π1,1 + π2,1 + π3,1+ · · ·) + 2 (π0,2 + π1,2 + π2,2 + π3,2+ · · ·)

+M (π0,M + π1,M + π2,M + π3,M + · · ·)]
∞

∞

=

πkfA =c˜π0fA + c

˜π0R0R1 · · · Rk−1fA,

k=0
X

where fA = (1, 2, ..., M)T .

k=1
X

(3) The throughput of the DAG-based blockchain system

Note that the throughput of the DAG-based blockchain system is deﬁned as the

number of new network nodes generated per unit of time, which is an important

indicator to measure the DAG-based blockchain system.

The following theorem provides expression for throughput of the DAG-based

blockchain system.

Theorem 3 If the DAG-based blockchain system is stable, then

TH =2µ

(cid:2)(cid:0)
+ 2

π1,2 + C 2

π2,2 + C 2

+ 3

(cid:0)

π3,2 + C 2

3π1,3 + C2
3π2,3 + C 2
3π3,3 + C 2

4π1,4+ · · · +C 2
4π2,4+ · · · +C 2
4π3,4+ · · · +C 2

M π1,M

(cid:1)
M π2,M

M π3,M

(cid:1)

+ · · ·

(cid:1)

(cid:3)

=2µ

∞
(cid:0)

k=1
X

kπkf,

19

where f = (0, 1, C 2

3, ..., C 2

M −1, C 2

M )T .

Proof: From Figure 2, we observe that all the states (m, n) for m ≥ 1 and

n ≥ 2 can generate the network nodes (i.e., the conﬁrmed blocks), seeing those

bottom states of the brown arrows. Note that TH is the product of 2µ and the

state probability sum that can generate the network nodes. Let PTH denote the

state probability sum that can generate the network nodes. Accordingly, we need

to compute the state probability sum that can generate the network nodes.

For state (1, 2), the state probability that can generate the network nodes is

equal to C 2

nodes is equal to C 2

2 π1,2. For state (1, 3), the state probability that can generate the network
3 π1,3. For state (1, M), the state probability that can generate

the network nodes is equal to C 2

M π1,M .

For state (2, 2), the state probability that can generate the network nodes is equal

to 2C 2

2 π2,2. For state (2, 3), the state probability that can generate the network nodes
3 π2,3. For state (2, M), the state probability that can generate the

is equal to 2C 2

network nodes is equal to 2C 2

M π2,M .

For state (m, 2), the state probability that can generate the network nodes is

equal to mC 2

network nodes is equal to mC 2

2 πm,2. For state (m, 3), the state probability that can generate the
3 πm,3. For state (m, M), the state probability that

can generate the network nodes is equal to mC 2

M πm,M .

Based on analysis of the above special cases, we obtain

PTH =

π1,2 + C 2

3π1,3 + C 2

4π1,4+ · · · +C 2

π2,2 + C 2

π3,2 + C 2
(cid:0)

3π2,3 + C 2
3π3,3 + C 2

M π1,M
4π2,4+ · · · +C 2
4π3,4+ · · · +C 2

(cid:1)
M π2,M

M π3,M

(cid:0)
+ 2

+ 3
∞

=

k=1
X

(cid:0)
kπkf,

(cid:1)

+ · · ·

(cid:1)

Thus, we obtain

TH = 2µ × PTH = 2µ

kπkf.

∞

This completes the proof. (cid:3)

k=1
X

20

Remark 3 Under the complicated structure of the DAG-based blockchain systems,

this paper may be the ﬁrst one to provide an exact computational formula for the

throughput of the DAG-based blockchain systems.

5 The Sojourn Time of Any Arriving Internal tip

In this section, we provide a new eﬃcient method to compute the average so-

journ time of any arriving internal tip (or arriving transaction) at the DAG-based

blockchain system.

The sojourn time of any arriving internal tip at the DAG-based blockchain sys-

tem is the time interval from the arrival epoch of the new transaction to the time

that it ﬁnally becomes a network node. Obviously, such a sojourn time includes two

diﬀerent processes: the internal tip is changed to a boundary tip, and the boundary

tip is changed to a network node.

Let WA be the sojourn time of the arriving internal tip A in the DAG-based

blockchain system. For the convenience of computation, we assume that the arriving

internal tip A arrives at the DAG-based blockchain system at time 0.

Let I(t) and J(t) denote the number of internal tips excluding the arriving

internal tip A and the number of boundary tips excluding the one generated from the

arriving internal tip A in the DAG-based blockchain system at time t, respectively.

Let ∆ be an absorbing state that the arriving internal tip A is ﬁnally changed to a

network node.

It is easy to see that {(1, I(t); J(t)), (I(t); 1, J(t)): t ≥ 0} is a Markov pro-

cess with the absorbing state ∆.

In state (1, I(t); J(t)), 1 means the arriving

internal tip A; in state (I(t); 1, J(t)), 1 means a boundary tip who is generated

from the arriving internal tip A. Based on this, the state space of Markov process

{(1, I(t); J(t)), (I(t); 1, J(t)): t ≥ 0} is given by

Θ = {∆} ∪

∞

(

k=0
[

Level k

,

)

21

where,

Level k = {(1, k; 1) , (k; 1, 0); (1, k; 2) , (k; 1, 1); . . . ; (1, k; M) , (k; 1, M − 1)} .

By using the level structure of the state space Θ, Figure 3a, 3b and 3c depict the

state transition relations of the Markov process {(1, I(t); J(t)), (I(t); 1, J(t)): t ≥ 0}.

Remark 4 (i) Figure 3a contains three events: (1) Arrivals of internal tips (i.e.,

new transactions), (2) the internal tip A is changed to the boundary tip A due to

its impatient behavior, and (3) the internal tip A, connecting (or approving) two

boundary tips, is changed to the boundary tip A.

(ii) Figure 3b contains two events: (1) The internal tips excluding the internal

tip A are changed to the boundary tips due to their impatient behavior, and (2) the

internal tips, excluding the internal tip A, connecting (or approving) two boundary

tips, are changed to the boundary tips.

(iii) Figure 3c contains one event: The boundary tip A is changed to a network

node.

From Figure 3a, 3b and 3c, it is easy to check that the inﬁnitesimal generator of

the Markov process {(1, I(t); J(t)), (I(t); 1, J(t)): t ≥ 0} with the absorbing state ∆

is given by

where

T =

0
0
T ∆ T 







T ∆ + T e = 0,

T0,0 T0,1



T1,0 T1,1 T1,2



T =







i =

T ∆

T2,1 T2,2 T2,3
. . .
. . .

0, 0; 0, iC 1

1µ;0, iC 1



, T ∆ =

. . .













3 µ; . . . ;0, iC 1
2 µ;0, iC 1
M −1µ

T ∆
0
T ∆
1
T ∆
2
...

,









T
;

(cid:0)

(cid:1)

22

(a)

(b)

(c)

Figure 3: State transition relations of the Markov process.

23

T i,i+1 =

A1,1 A1,2

A2,1 A2,2
. . .

T 0,0 =













λ

λ










. . .










λ

, i ≥ 0,

A2,3
. . .

. . .
AM −1,M −2 AM −1,M −1 AM −1,M

AM,M −1

AM,M

.













A1,1 =

for 2 ≤ l ≤ M − 1,

− (α + λ)





, A1,2 =

−λ 


α

,









C 2

l µ

Al,l−1 =





AM,M −1 =









− (C 2

l µ + α + λ)

, Al,l =





C 2

M µ

, AM,M =




0 B1,2





, Al,l+1 =

−λ 

M µ + λ)

− (C 2

α





,





,

−λ 


T i,i−1 =

for 1 ≤ l ≤ M − 1,



B2,1











0
. . .

B2,3
. . .
BM −1,M −2

. . .

0

BM −1,M

BM,M −1

0

,













Bl,l+1 =

B2,1 =

,

iα 



,

0 


iα

iµ









24

for 3 ≤ l ≤ M,

Bl,l−1 =

iC 2

l µ





,

iC 2

l−1µ 


C1,1 C1,2

C2,1 C2,2
. . .

T i,i =
















C2,3
. . .

. . .
CM −2,M −3 CM −2,M −2 CM −2,M −1

CM −1,M −2 CM −1,M −1

CM,M −1 CM,M

, i ≥ 1,
















C1,1 =





− (α + iα + λ)

− (iα + λ) 


, C1,2 =

α

,









C2,1 =

µ





, C2,3 =





− (µ + α + iµ + iα + λ)

α

,









,

− (iα + λ + iµ) 


C 2

M −1µ









, CM −1,M =

α

,









C2,2 =





CM −1,M −2 =

CM −1,M −1 =

−

(cid:0)





CM,M =





,





(cid:1)

C 2

M −1µ + iC 2

M −1µ + iα + λ

(cid:1) −

iC 2

M −2µ + iα + λ + iC 1

M −2µ

CM,M −1 =



C 2

M µ

,

(cid:0)





− (C 2

M µ + iC 2


M µ + λ)

−

(cid:0)

25

iC 2

M −1µ + λ + iC 1

M −1µ

(cid:1)

,





for 3 ≤ l ≤ M − 2,

Cl,l−1 =

C 2

l µ









, Cl,l+1 =

α

,









− (C 2

l µ + α + iC 2

l µ + iα + λ)

Cl,l =



−

iC 2

l−1µ + iα + λ + iC 1

l−1µ

.



Let (θ∆, θ) be the initial probability vector of the Markov process T with an ab-

(cid:0)



(cid:1)



sorbing state ∆ for θ∆ = 0, the vector θ = (0, 0, ..., 0, 1, 0, ...) shows that the Markov

process T is at the state (1, i0; j0) at time 0. Therefore, the (2Mi0 + 2j0 − 1)-st

element of the vector θ is 1, and all the other elements are 0.

The following theorem provides expression for the probability distribution of the

sojourn time WA by means of the ﬁrst passage times and the phase-type distributions

of inﬁnite sizes.

Theorem 4 The probability distribution of the sojourn time WA is of phase-type

with an irreducible representation (θ,T ), and

FWA (t) = P {WA ≤ t} = 1 − θ exp {T t} e, t ≥ 0.

Also, the average sojourn time WA is given by

E [WA] = −θT −1

maxe,

where T −1

max is the maximal non-positive inverse of the matrix T of inﬁnite sizes.

Proof: For i ≥ 0, 1 ≤ j ≤ M and 0 ≤ n ≤ M − 1, we write

q1,i;j (t) = P {I (t) = i,J (t) = j} ,

qi;1,n (t) = P {I (t) = i, J (t) = n} ,

qi (t) = (q1,i;1 (t) , qi;1,0 (t) ; q1,i;2 (t) , qi;1,1 (t) ; . . . ; q1,i;M (t) , qi;1,M −1 (t)) ,

q (t) = (q0 (t) , q1 (t) , q2 (t) , . . .) .

26

By using the Chapman-Kolmogorov forward diﬀerential equation, we obtain

with the initial conditions

It follows from (2) and (3) that

d
dt

q (t) = q (t) T,

q (0) = θ.

q (t) = θ exp {T t} .

(2)

(3)

(4)

Note that q(0)e = 1, it follows from (4) that

FWA (t) = P {WA ≤ t} = 1 − θ exp {T t} e, t ≥ 0.

In what follows we compute the average sojourn time E [WA] by the Laplace-

Stieltjes transform. Let f (s) be the Laplace-Stieltjes transform of the distribution

function FWA (t) or the random variable WA. Then

f (s) =

∞

0

Z

e−stdFWA (t) = 1 + θ (sI − T )−1

min T 0,

where (sI − T )−1

min is the minimal non-negative inverse of the matrix sI −T of inﬁnite

sizes for s ≥ 0. Therefore, we obtain

E [WA] = −

d
ds

f (s)|s=0 = θ

(sI − T )−2
min

T 0 = −θT −1

maxe.

|s=0

This completes the proof. (cid:3)

(cid:2)

(cid:3)

To compute the inverse matrix T −1

max, we need to use the RG-decomposition of
the Markov process T . To this end, we introduce R-, U- and G- measures as follows:

Ui = Ti,i + Ti,i+1

−U −1
i+1

Ti+1,i,

i ≥ 0,

Ri = Ti,i+1

(cid:0)
−U −1
i+1

(cid:1)

,

i ≥ 0,

Gi =

(cid:0)
−U −1
i+1

(cid:1)
Ti+1,i,

i ≥ 1.

By using the R-, U- and G- measures, the UL-type RG-decomposition of the

(cid:0)

(cid:1)

QBD process T is given by

T = (I − RU ) UD (I − GL) ,

27

where

UD = diag (U0, U1, U2, . . .) ,

0 R0

0 R1

0 R2
. . .

. . .

0



G1











, GL =










0

G2

0

G3

.













0
. . .

. . .

RU =










We write

X (l)

k = RlRl+1 · · · Rl+k−1, k ≥ 1, l ≥ 0,
Y (l)
k = GlGl−1 · · · Gl−k+1, 1 ≤ k ≤ l,

and

U −1

D = diag

0 , U −1
U −1

1 , U −1

2 , . . .

.

By using the UL-type RG-factorization, we obtain

(cid:0)

(cid:1)

max = (I − GL)−1 U −1
T −1

D (I − RU )−1 ,

where

Let

(I − RU )−1 =

(I − GL)−1 =

























I X (0)

1 X (0)
I X (1)

3

2 X (0)
1 X (1)
I X (2)

2

1
I

· · ·

· · ·



· · ·

· · ·
. . .

.











I
Y (1)
1
Y (2)
2
Y (3)
3
...

I
Y (2)
1
Y (3)
2
...

I
Y (3)
1
...

I
...

. . .

,













T −1
max =

V0,0 V0,1 V0,2

· · ·



V1,0 V1,1 V1,2

· · ·










V2,0 V2,1 V2,2
...
...
...

· · ·
. . .








.

28

Then by using T −1

max = (I − GL)−1(UD)−1(I − RU )−1, we obtain

X (m)

i U −1

i+mY (i+m)
i+m−n,

0 ≤ n ≤ m − 1,

Vm,n =

i+mY (i+m)

i

,

n = m,

X (m)

i U −1

i+mY (i+m)

i−n+m, n ≥ m + 1.

∞

m Y (m)
U −1

m−n +
∞

U −1

m +

i=1
P
n−mU −1
n +

X (m)

i=1
P
X (m)
i U −1
∞

i=n−m+1
P






The average sojourn time of the arriving internal tip A in the DAG-based

blockchain system is given by

E [WA] = −θT −1

maxe = −θ (I − GL)−1 U −1

D (I − RU )−1 e

∞

∞

= −

θiVi−1,je.

i=1
X

j=0
X

6 Numerical Examples

In this section, we use numerical examples to check the validity of our theoretical

results, and indicate how some key system parameters inﬂuence the performance

measures of the DAG-based blockchain system. To do this, our analysis is to focus

on two issues: (1) Steady-state performance indicators of the DAG-based blockchain

system. (2) The average sojourn time E [WA] of the arriving internal tip A.

6.1 Steady-state performance measures

Firstly, we discuss how the steady-state performance measures of the DAG-based

blockchain system are aﬀected by the three key system parameters: α, µ and λ.

In Figures 4 and 5, we take that M = 100, α = 0.45, λ ∈ [20, 40], and µ = 3.5,

4, 5. From Figure 4, it is easy to see that E[NA] increases as λ increases, while

E[NA] decreases as µ increases. From Figure 5, we observe how E[NB] changes as λ

increases. It can be seen that E[NB] increases as λ increases, while E[NB] decreases

as µ increases.

A coupling analysis: Note that the two numerical results can be intuitively

understood by means of a coupling method. As λ increases, more and more internal

tips (or new transactions) are quickly entering the DAG-based blockchain system.

29

64

62

60

58

56

54

27

28

29

30

90

80

70

60

50

40

]
A
N
E

[

µ= 3.5
µ= 4
µ= 5

30

20

22

24

26

28

32

34

36

38

40

30
λ

Figure 4: E[NA] vs λ and µ

2.3

2.2

2.1

2

1.9

1.8

]
B
N
E

[

µ= 3.5
µ= 4
µ= 5

1.7

20

22

24

26

28

32

34

36

38

40

30
λ

Figure 5: E[NB] vs λ and µ

30

Thus, this makes E[NA] and E[NB] increase. On the other hand, when α is constant

and as µ increases, more and more internal tips are quickly leaving the set of internal

tips. Because the tip number in the set of boundary tips decreases due to the

connection of each internal tip with two boundary tips, this leads to the decrease of

E[NA] and E[NB] accordingly.

In Figure 6, we explore how TH is inﬂuenced by parameters λ and µ. To this

end, we take that M = 100, α = 0.45, λ ∈ [20, 40], and µ = 2, 2.5, 3. From Figure

6, it is observed that TH increases as λ or µ increases. This indicates that as λ and

µ increase, more and more network nodes (or conﬁrmed transactions) are quickly

entering the DAG-based blockchain system, which leads to the increase of TH. For

this result, we can give an intuitive explanation based on the results in Figures 4 and

5. From Figures 4 and 5, we can know that as λ increases, more and more internal

tips (or new transactions) can become boundary tips, so more and more boundary

tips will have the opportunity to become network nodes (or conﬁrmed transactions),

which makes TH increases. In addition, as µ increases, it causes that more and more

boundary tips to become network nodes (or conﬁrmed transactions), and this leads

to increase of TH, which is consistent with our intuitive understanding.

90

80

70

H
T

60

50

40

30

20

55

54

53

52

51

28.5

29

29.5

µ=2
µ=2.5
µ=3

22

24

26

28

30
λ

32

34

36

38

40

Figure 6: TH vs λ and µ

31

]
A
W
E

[

0.11

0.1

0.09

0.08

0.07

0.06

0.05

0.04

2

α=0.3
α=0.4
α=0.5

3

4

5

6

7

8

9

µ

Figure 7: E[WA] vs µ and α

6.2 The average sojourn time of the arriving internal tip A

In this subsection, we analyze how the average sojourn time of the arriving internal

tip A is aﬀected by the three key system parameters: α, µ, and λ. In this part, we

let M = 50 for all the numerical examples.

In Figure 7, we observe how E[WA] is inﬂuenced by parameters: α and µ. To

this end, we take that α = 0.3, 0.4, 0.5, λ = 30, and µ ∈ [2, 9]. It is easy to see from

Figure 7 that E[WA] decreases as µ or α increases. This indicates that as µ or α

increases, that is, the rate that tips become network nodes (or conﬁrmed transac-

tions) increases, then the probability of the arriving internal tip A being approved or

connected increases, which makes the average sojourn time of the arriving internal

tip A decreases, which is consistent with our intuitive understanding. Furthermore,

this result also indicates that the impatient behavior introduced by us can prevent

some tips from staying for too much time in the system.

In Figure 8, we explore how E[WA] is inﬂuenced by parameters α and λ. To

this end, we take that µ = 5, α = 0.3, 0.35, 0.4, λ ∈ [20, 40].

It is easy to see

from Figure 8 that E[WA] increases as λ increases, while it decreases as α increases.

This result indicates that as λ increases, E[NA] and E[NB] increase based on the

32

results in Figures 4 and 5. This causes the probability of the arriving internal tip A

being approved or connected to decrease, and then the average sojourn time of the

arriving internal tip A increases. On the other hand, as α increases, the rate that tips

become network nodes (or conﬁrmed transactions) increases, then the probability

of the arriving internal tip A being approved or connected increases. This leads

to the average sojourn time of the arriving internal tip A decreases, which is also

consistent with our intuitive sense.

0.08

0.078

0.076

0.074

0.072

0.07

0.068

0.066

0.064

0.062

]
A
W
E

[

α=0.3
α=0.35
α=0.4

0.06

20

22

24

26

28

32

34

36

38

40

30
λ

Figure 8: E[WA] vs λ and α

In Figure 9, we indicate how E[WA] is aﬀected by the two parameters µ and λ.

To this end, we take that α = 0.3, µ = 3.5, 4, 5 and λ ∈ [20, 40]. From Figure 9, we

can see that E[WA] increases as λ increases, which is consistent with the results in

Figure 8. At the same time, we can see from Figure 9 that as µ increases, E[WA]

decreases as µ increases. This result indicates that as µ increases, the rate at which

internal tips become boundary tips and network nodes (or conﬁrmed transactions)

increases, then the probability of the arriving internal tip A being approved or

connected increases. These lead to the decrease of the average sojourn time of the

arriving internal tip A. This numerical result is also consistent with our intuition.

33

0.09

0.085

0.08

]
A
W
E

[

µ=3.5
µ=4
µ=5

0.075

20

22

24

26

28

32

34

36

38

40

30
λ

Figure 9: E[WA] vs λ and µ

7 Concluding Remarks

Since Bitcoin was proposed by Nakamoto [66] in 2008, the serial structure of blockchain

has achieved rapid development.

Important examples include Bitcoin, Litecoin,

Ethereum and so on, and the consensus mechanisms such as PoW, PoS, DPoS and

PBFT are widely used. However, such a serial structure has a number of essential

pitfalls, for example, poor performance and scalability, limited transaction through-

put, high transaction cost, long conﬁrmation delay, huge energy expenditure, and

so forth.

To overcome these pitfalls and drawbacks of blockchain, a data network structure

was found in the DAG-based blockchain with IOTA Tangle. From such a network

perspective, it is well-known that the analysis of the DAG-based blockchain systems

becomes interesting but diﬃcult and challenging. To investigate the DAG-based

blockchain, so far, the simulation models have been adopted widely while the math-

ematical modeling and analysis is still scarce in the recent literature. To our best

knowledge, this paper may be the ﬁrst to set up theory of Markov processes in the

study of DAG-based blockchain systems.

In this paper, we describe a simple Markov model for the DAG-based blockchain

34

with IOTA Tangle. Then we set up a continuous-time level-dependent QBD process

to analyze the DAG blockchain system. We show that the QBD process must be

irreducible and positive recurrent. By using the stationary probability vector of the

QBD process, we provide a performance analysis of the DAG blockchain system.

We propose a new eﬀective method for computing the average sojourn time of any

arriving internal tip at this system. Finally, we use numerical examples to check

the validity of our theoretical results and indicate how some key system parameters

inﬂuence the performance measures of this system.

Note that the Markov process theory opens up a new venue to the study of DAG

blockchain systems. Thus, we believe that the methodology and results developed

in this paper can shed light on the DAG blockchain systems and open a series

of potentially promising research. Along these lines, we will continue our future

research in the following directions:

– Considering the DAG blockchain systems with IOTA Tangle. From 2 connec-

tions to m connections of the boundary tips, we observe how the multiple connections

will aﬀect the performance of the DAG blockchain system.

– Setting up a block-structure Markov process for the DAG blockchain systems

and develop an eﬀective algorithm for computing the matrix-analytic solution. Us-

ing the stationary probability vector, we can analyze the performance of the DAG

blockchain systems.

– Developing the ﬂuid and diﬀusion approximation for analyzing the DAG blockchain

systems, when there are general random factors.

– Further developing stochastic optimization and dynamic control of the DAG

blockchain systems, for example, Markov decision processes, stochastic game, evo-

lutionary game and so forth.

8 Acknowledgements

Quan-Lin Li was supported by the National Natural Science Foundation of China

under grants No. 71671158 and 71932002.

35

References

[1] Alshaikhli, M., Elfouly, T., Elharrouss, O., Mohamed, A., & Ottakath, N.

(2021). Evolution of Internet of Things from Blockchain to IOTA: A survey.

IEEE Access, 10, 844-866.

[2] Anwar, H. (2019). The ultimate comparison of diﬀerent types of distributed

ledgers: Blockchain vs hashgraph vs DAG vs holochain. 101 Blockchains.

[3] Attias, V., & Bramas, Q. (2019). How to choose its parents in the Tangle. In:

International Conference on Networked Systems, Springer, Pages 275-280.

[4] Bai, C. (2018). State-of-the-art and future trends of Blockchain based on DAG

structure. In: International Workshop on Structured Object-oriented Formal

Language and Method, Springer, Pages 183-196.

[5] Belchior, R., Vasconcelos, A., Guerreiro, S., & Correia, M. (2021). A survey on

blockchain interoperability: Past, present, and future trends. ACM Computing

Surveys, 54(8), 1-41.

[6] Benˇci´c, F. M., & ˇZarko, I. P. (2018). Distributed ledger technology: Blockchain

compared to directed acyclic graph. In: The IEEE 38th International Confer-

ence on Distributed Computing Systems, Pages 1569-1570.

[7] Bhandary, M., Parmar, M., & Ambawade, D. (2020). A Blockchain solution

based on directed acyclic graph for IoT data security using IOTA Tangle. In:

The 5th International Conference on Communication and Electronics Systems,

Pages 827-832.

[8] Birmpas, G., Koutsoupias, E., Lazos, P., & Marmolejo-Coss´ıo, F. J. (2020).

Fairness and eﬃciency in DAG-based cryptocurrencies. In: International Con-

ference on Financial Cryptography and Data Security, Springer, Pages 79-96.

[9] Bottone, M., Raimondi, F., & Primiero, G. (2018). Multi-agent based simula-

tions of block-free distributed ledgers. In: The 32nd International Conference

36

on Advanced Information Networking and Applications Workshops, Pages 585-

590.

[10] Bramas, Q. (2018). The stability and the security of the Tangle. HAL Id:

hal-01716111.

[11] Bramas, Q. (2021). Eﬃcient and secure TSA for the Tangle. In: International

Conference on Networked Systems, Springer, Pages, 161-166.

[12] Brighente, A., Conti, M., Kumar, G., Ghanbari, R., & Saha, R. (2021). Knock-

ing on Tangle’s doors: Security analysis of IOTA ports. In: The IEEE Inter-

national Conference on Blockchain, Pages 433-439.

[13] Brunner, M., Cachin, C., & Sesar, I. A. (2021). Analysis of the Tangle: The

Impact of Conﬂicting Blocks to the Tangle network. Bachelor Thesis, Institute

of Computer Science, University of Bern, Switzerland.

[14] Cao, B., Zhang, Z., Feng, D., Zhang, S., Zhang, L., Peng, M., & Li, Y.

(2020). Performance analysis and comparison of PoW, PoS and DAG based

Blockchains. Digital Communications and Networks, 6(4), 480-485.

[15] Cao, K., Lin, F., Qian, C., & Li, K. (2019). A high eﬃciency network using

DAG and consensus in Blockchain. In: The IEEE International Conference

on Parallel & Distributed Processing with Applications, Big Data & Cloud

Computing, Sustainable Computing & Communications, Social Computing &

Networking, Pages 279-285.

[16] Chafjiri, F. S., & Esfahani, M. M. E. (2019). An adaptive random walk algo-

rithm for selecting tips in the Tangle. In: The 5th International Conference

on Web Research, Pages 161-166.

[17] Chen, T. Y., Huang, W. N., Kuo, P. C., Chung, H., & Chao, T. W. (2018).

DEXON: A highly scalable, decentralized DAG-based consensus algorithm.

arXiv preprint arXiv:1811.07525.

37

[18] Conti, M., Kumar, G., Nerurkar, P., Saha, R., & Vigneri, L. (2022). A survey

on security challenges and solutions in the IOTA. Journal of Network and

Computer Applications, 103383.

[19] Cui, L., Yang, S., Chen, Z., Pan, Y., Xu, M., & Xu, K. (2019). An eﬃcient and

compacted DAG-based Blockchain protocol for industrial Internet of Things.

IEEE Transactions on Industrial Informatics, 16(6), 4134-4145.

[20] Cullen, A., Ferraro, P., King, C., & Shorten, R. (2019). Distributed ledger

technology for IoT: Parasite chain attacks. arXiv preprint arXiv:1904.00996.

[21] Cullen, A., Ferraro, P., King, C., & Shorten, R. (2020). On the resilience of

DAG-based distributed ledgers in IoT applications. IEEE Internet of Things

Journal, 7(8), 7112-7122.

[22] Danezis, G., & Hrycyszyn, D. (2018). Blockmania: From block DAGs to con-

sensus. arXiv preprint arXiv:1809.01620.

[23] Danezis, G., Kokoris-Kogias, L., Sonnino, A., & Spiegelman, A. (2022). Nar-

whal and tusk: a DAG-based mempool and eﬃcient BFT consensus. In:

Proceedings of the Seventeenth European Conference on Computer Systems,

Pages 34-50.

[24] Deng, X., Li, K., Wang, Z., & Liu, H. (2022). A novel consensus algorithm

based on segmented DAG and BP neural network for consortium Blockchain.

Security and Communication Networks, Vol. 2022, Article ID 1060765.

[25] Ding, Y., & Sato, H. (2020). Dagbase: A decentralized database platform using

DAG-based consensus. In: The IEEE 44th Annual Computers, Software, and

Applications Conference, Pages 798-807.

[26] Dong, Z., Zheng, E., Choon, Y., & Zomaya, A. Y. (2019). Dagbench: A

performance evaluation framework for DAG distributed ledgers. In: The IEEE

12th International Conference on Cloud Computing, Pages 264-271.

38

[27] Fan, C. (2019). Performance analysis and design of an IoT-friendly DAG-

based distributed ledger system. Master of Science, Department of Electrical

and Computer Engineering, University of Alberta.

[28] Fan, C., Ghaemi, S., Khazaei, H., Chen, Y., & Musilek, P. (2021). Performance

analysis of the IOTA DAG-based distributed ledger. ACM Transactions on

Modeling and Performance Evaluation of Computing Systems, 6(3), 1-20.

[29] Fan, C., Khazaei, H., Chen, Y., & Musilek, P. (2019). Towards a scalable

DAG-based distributed ledger for smart communities. In: The IEEE 5th World

Forum on Internet of Things, Pages 177-182.

[30] Ferrag, M. A., Derdour, M., Mukherjee, M., Derhab, A., Maglaras, L., &

Janicke, H. (2018). Blockchain technologies for the internet of things: Research

issues and challenges. IEEE Internet of Things Journal, 6(2), 2188-2204.

[31] Ferraro, P., King, C., & Shorten, R. (2018). IOTA-based directed acyclic

graphs without orphans. arXiv preprint arXiv:1901.07302.

[32] Ferraro, P., King, C., & Shorten, R. (2019). On the stability of unveriﬁed

transactions in a DAG-based distributed ledger. IEEE Transactions on Auto-

matic Control, 65(9), 3772-3783.

[33] Ferraro, P., Penzkofer, A., King, C., & Shorten, R. (2022). Feedback control

for distributed ledgers: An attack mitigation policy for DAG-based DLTs.

arXiv preprint arXiv:2204.11691.

[34] Gangwani, P., Perez-Pons, A., Bhardwaj, T., Upadhyay, H., Joshi, S., & La-

gos, L. (2021). Securing environmental IoT data using masked authentication

messaging protocol in a DAG-based Blockchain: IOTA Tangle. Future Inter-

net, 13(12), 312.

[35] Gao, Y., Liu, Y., Wen, Q., Lin, H., & Chen, Y. (2020). Secure drone network

edge service architecture guaranteed by DAG-based Blockchain for ﬂying au-

tomation under 5G. Sensors, 20(21), 6209.

39

[36] Gardner, R., Reinecke, P., & Wolter, K. (2020). Performance of tip selec-

tion schemes in DAG Blockchains. In: Mathematical Research for Blockchain

Economy, Springer, Pages 101-116.

[37] Gerrits, L. (2020). Comparative study of EOS and IOTA Blockchains in the

context of smart IoT for mobility. Doctoral dissertation, stage Master 2 Estel

Universit´e Nice-Sophia Antipolis.

[38] Gorbunova, M., Masek, P., Komarov, M., & Ometov, A. (2022). Distributed

ledger technology: State-of-the-art and current challenges. Computer Science

and Information Systems, 19(1), 65-85.

[39] Gorkhali, A., Li, L., & Shrestha, A. (2020). Blockchain: A literature review.

Journal of Management Analytics, 7(3), 321-343.

[40] Guo, F., Xiao, X., Hecker, A., & Dustdar, S. (2020). Characterizing IOTA

Tangle with empirical data. In: The 2020 IEEE Global Communications Con-

ference, Pages 1-6.

[41] Gupta, H., & Janakiram, D. (2019). CDAG: A serialized blockdag for permis-

sioned Blockchain. arXiv preprint arXiv:1910.08547.

[42] Gupta, A., & Krishnamurthy, V. (2022). Controlling transaction rate in Tangle

Ledger: A principal agent problem approach. arXiv preprint arXiv:2203.05643.

[43] Hassine, M. B., Kmimech, M., Hellani, H., & Sliman, L. (2020). Toward a

mixed Tangle-Blockchain architecture. In: Knowledge Innovation Through In-

telligent Software Methodologies, Tools and Techniques, Pages 221-233.

[44] Hellani, H., Sliman, L., Hassine, M. B., Samhat, A. E., Exposito, E., &

Kmimech, M. (2019). Tangle the Blockchain: Toward IOTA and Blockchain

integration for IoT environment. In: International Conference on Hybrid In-

telligent Systems, Springer, Pages 429-440.

[45] Hellani, H., Sliman, L., Samhat, A. E., & Exposito, E. (2021). Computing

resource allocation scheme for DAG-based IOTA nodes. Sensors, 21(14), 4703.

40

[46] Huang, H., Kong, W., Zhou, S., Zheng, Z., & Guo, S. (2021). A survey of state-

of-the-art on blockchains: Theories, modelings, and tools. ACM Computing

Surveys, 54(2), 1-42.

[47] Igiri, C. P., Bhargava, D., Udanor, C., & Sowah, A. R. (2022). Blockchain ver-

sus IOTA Tangle for Internet of Things: The best architecture. In: Blockchain

Technology, CRC Press, Pages 259-278.

[48] Jay, M., Mollard, A., Sun, Y., Zheng, R., Amigo, I., Reiﬀers-Masson, A., &

Ruano Rinc´on, S. (2021). Utility maximisation in the Coordinator-less IOTA

Tangle. In:

International Symposium on Ubiquitous Networking, Springer,

Pages 93-104.

[49] Keidar, I., Kokoris-Kogias, E., Naor, O., & Spiegelman, A. (2021). All you

need is DAG. In: Proceedings of the 2021 ACM Symposium on Principles of

Distributed Computing, Pages 165-175.

[50] Khrais, L. T. (2020). Comparison study of Blockchain technology and IOTA

technology. In: The Fourth International Conference on IoT in Social, Mobile,

Analytics and Cloud, Pages 42-47.

[51] Ku´smierz, B. (2017). The ﬁrst glance at the simulation of the Tangle: Discrete

model. Vol. 1. IOTA Foundation Technical Report, Pages 1-10.

[52] Ku´smierz, B., & Gal, A. (2018). Probability of being left behind and prob-

ability of becoming permanent tip in the Tangle V0. 2. Vol. 1. No. 1. IOTA

Foundation Technical Report, Pages 1–9.

[53] Ku´smierz, B., Sanders, W., Penzkofer, A., Capossele, A., & Gal, A. (2019).

Properties of the Tangle for uniform random and random walk tip selection.

In: 2019 IEEE International Conference on Blockchain, Pages 228-236.

[54] Ku´smierz, B., Staupe, P., & Gal, A. (2018). Extracting Tangle properties in

continuous time via large-scale simulations. IOTA Found. White Paper, 2018-

08.

41

[55] Lathif, M. R. A., Nasirifard, P., & Jacobsen, H. A. (2018). CIDDS: A conﬁg-

urable and distributed DAG-based distributed ledger simulation framework.

In: Proceedings of the 19th International Middleware Conference, Pages 7-8.

[56] Lee, S. W., & Sim, K. B. (2021). Design and hardware implementation of

a simpliﬁed DAG-based Blockchain and new AES-CBC algorithm for IoT

security. Electronics, 10(9), 1127.

[57] Li, Q.L., 2010. Constructive Computation in Stochastic Models with Applica-

tions: The RG-Factorizations. Springer.

[58] Li, Q.L., Cao, J. (2004). Two types of RG-factorizations of quasi-birth-

and-death processes and their applications to stochastic integral functionals.

Stochastic Models, 20 (3), 299–340.

[59] Li, Q. L., Chang, Y., Wu, X., & Zhang, G. (2021). A new theoretical frame-

work of pyramid markov processes for Blockchain selﬁsh mining. Journal of

Systems Science and Systems Engineering, 30(6), 667-711.

[60] Li, Q. L., Chang, Y. X., & Zhang, C. (2022). Tree representation, growth rate

of Blockchain and reward allocation in Ethereum with multiple mining pools.

arXiv preprint arXiv:2201.10087.

[61] Li, Y., Cao, B., Peng, M., Zhang, L., Zhang, L., Feng, D., & Yu, J. (2020).

Direct acyclic graph-based ledger for Internet of Things: Performance and

security analysis. IEEE/ACM Transactions on Networking, 28(4), 1643-1656.

[62] Liao, Z., Cheng, S., Zhang, J., Wu, W., Wang, J., & Sharma, P.

K. (2022). GpDB: A graph-partition based storage strategy for DAG-

Blockchain in edge-cloud IIoT. IEEE Transactions on Industrial Informatics.

https://ieeexplore.ieee.org/document/9741329

[63] Lo, S. K., Liu, Y., Chia, S. Y., Xu, X., Lu, Q., Zhu, L., & Ning, H. (2019).

Analysis of Blockchain solutions for IoT: A systematic literature review. IEEE

Access, 7, 58822-58835.

42

[64] Madenouei, N. A. (2020). Exploring the scalability, throughput and security

characteristics of the Tangle distributed ledger technology through simulation

analysis. Master of Science, York University, Canada.

[65] M¨uller, S., Penzkofer, A., Polyanskii, N., Theis, J., Sanders, W., & Moog,

H. (2022). Tangle 2.0: Leaderless Nakamoto consensus on the heaviest DAG.

arXiv preprint arXiv:2205.02177.

[66] Nakamoto, S. (2008). Bitcoin: A peer-to-peer electronic cash system. Decen-

tralized Business Review, 21260.

[67] Nakanishi, R., Zhang, Y., Sasabe, M., & Kasahara, S. (2020). IOTA-based

access control framework for the Internet of Things. In: The 2nd Conference

on Blockchain Research & Applications for Innovative Networks and Services,

Pages 87-95.

[68] Nguyen, Q., Cronje, A., Kong, M., Lysenko, E., & Guzev, A. (2021).

Lachesis: Scalable asynchronous BFT on DAG streams. arXiv preprint

arXiv:2108.01900.

[69] Park, S., & Kim, H. (2019). DAG-based distributed ledger for low-latency

smart grid network. Energies, 12(18), 3570.

[70] Park, S., Oh, S., & Kim, H. (2019). Performance analysis of DAG-based cryp-

tocurrency. In: The IEEE International Conference on Communications work-

shops, Pages 1-6.

[71] Penzkofer, A., Kusmierz, B., Capossele, A., Sanders, W., & Saa, O.

(2020). Parasite chain detection in the IOTA protocol. arXiv preprint

arXiv:2004.13409.

[72] Penzkofer, A., Saa, O., & Dziuba ltowska, D. (2021). Impact of delay classes on

the data structure in IOTA. In: Data Privacy Management, Cryptocurrencies

and Blockchain Technology, Springer, Pages 289-300.

43

[73] Pereˇs´ıni, M., Benˇci´c, F. M., Malinka, K., & Homoliak, I. (2021). DAG-oriented

protocols PHANTOM and GHOSTDAG under incentive attack via transac-

tion selection strategy. arXiv preprint arXiv:2109.01102.

[74] Pervez, H., Muneeb, M., Irfan, M. U., & Haq, I. U. (2018). A comparative

analysis of DAG-based Blockchain architectures. In: The 12th International

Conference on Open Source Systems and Technologies, Pages 27-34.

[75] Popov, S. (2016). The Tangle. Vol. 1. IOTA Foundation Technical Report,

Pages 131–156.

[76] Popov, S. (2018). The Tangle. A white paper, Version 1.4.3, Pages 1-28.

[77] Popov, S., & Buchanan, W. (2019). Fast probabilistic consensus within Byzan-

tine infrastructures. arXiv preprint arXiv: 1905.10895, Pages 1–30.

[78] Popov, S., Moog, H., Camargo, D., et al. (2020). The Coordicide. Vol. 1. No.

1. IOTA Foundation Technical Report, pp. 1–42.

[79] Popov, S., Saa, O., Finardi, P. (2019). Equilibria in the Tangle. Computers &

Industrial Engineering, 136, 160–172.

[80] Reddy, B. S., & Sharma, G. V. V. (2020). Scalable consensus protocols for

PoW based Blockchain and blockDAG. arXiv preprint arXiv:2010.05447.

[81] Ramaswami, V., & Taylor, P.G. (1996). Some properties of the rate perators

in level dependent quasi-birth-and-death processes with countable number of

phases. Stochastic Models, 12(1), 143-164.

[82] Schett, M. A., & Danezis, G. (2021). Embedding a deterministic BFT protocol

in a block DAG. In: Proceedings of the 2021 ACM Symposium on Principles

of Distributed Computing, Pages 177-186.

[83] Shabandri, B., & Maheshwari, P. (2019). Enhancing IoT security and privacy

using distributed ledgers with IOTA and the Tangle. In: The 6th International

Conference on Signal Processing and Integrated Networks, Pages 1069-1075.

44

[84] Siim, J. (2018). DAG-based distributed ledgers. In: Research Seminar in Cryp-

tology.

[85] Silvano, W. F., & Marcelino, R. (2020). Iota Tangle: A cryptocurrency to

communicate Internet-of-Things data. Future Generation Computer Systems,

112, 307-319.

[86] Spiegelman, A., Giridharan, N., Sonnino, A., Kokoris-Kogias, L. (2022). Bull-

shark: DAG BFT protocols made practical. arXiv preprint arXiv:2201.05677.

[87] Staupe, P. (2017). Quasi-analytic parasite chain absorption probabilities in

the Tangle. Vol. 20. IOTA Foundation Technical Report, Pages 15–18.

[88] Tian, H., Lin, H., & Zhang, F. (2020). Design a proof of stake based directed

acyclic graph chain. In: International Conference on Frontiers in Cyber Secu-

rity, Springer, Pages 150-165.

[89] Vigneri, L., Welz, W., Gal, A., & Dimitrov, V. (2019). Achieving fairness in

the Tangle through an adaptive rate control algorithm. In: The IEEE Inter-

national Conference on Blockchain and Cryptocurrency, Pages 146-148.

[90] Viriyasitavat, W., Anuphaptrirong, T., & Hoonsopon, D. (2019). When

blockchain meets Internet of Things: Characteristics, challenges, and busi-

ness opportunities. Journal of industrial information integration, 15, 21-28.

[91] Wang, B., Wang, Q., Chen, S., & Xiang, Y. (2020). Security analysis on

Tangle-based Blockchain through simulation. In: Australasian Conference on

Information Security and Privacy, Springer, Pages 653-663.

[92] Wang, J., Yang, J., & Wang, B. (2021). Dynamic balance tip selection al-

gorithm for IOTA. In: The IEEE 5th Information Technology, Networking,

Electronic and Automation Control Conference, Vol. 5, Pages 360-365.

[93] Wang, Q. (2019). Improving the scalability of Blockchain through DAG. In:

Proceedings of the 20th International Middleware Conference Doctoral Sym-

posium, Pages 34-35.

45

[94] Wang, Q., Wang, T., Shen, Z., Jia, Z., Zhao, M., & Shao, Z. (2019). Re-Tangle:

A reram-based processing-in-memory architecture for

transaction-based

Blockchain. In: The IEEE/ACM International Conference on Computer-

Aided Design, Pages 1-8.

[95] Wang, Q., Yu, J., Chen, S., & Xiang, Y. (2020). SoK: Diving into DAG-based

Blockchain systems. arXiv preprint arXiv:2012.06128.

[96] Wang, T., Wang, Q.,

Shen, Z.,

Jia, Z., & Shao, Z.

(2021).

Understanding characteristics and system implications of DAG-based

Blockchain in IoT environments.

IEEE Internet of Things Journal,

https://ieeexplore.ieee.org/abstract/document/9524824.

[97] Wang, W., Hoang, D. T., Hu, P., et al. (2019). A survey on consensus mecha-

nisms and mining strategy management in blockchain networks. IEEE Access,

7, 22328-22370.

[98] Watanabe, H., Ishida, T., Ohashi, S., Fujimura, S., Nakadaira, A., Hidaka, K.,

& Kishigami, J. (2019). Enhancing Blockchain traceability with DAG-based

tokens. In: The IEEE International Conference on Blockchain, Pages 220-227.

[99] Xiang, F., Huaimin, W., Peichang, S., Xue, O., & Xunhui, Z. (2021).

Jointgraph: A DAG-based eﬃcient consensus algorithm for consortium

Blockchains. Software: Practice and Experience, 51(10), 1987-1999.

[100] Yin, Z., Ruan, A., Wei, M., et al. (2020). Streamnet: A DAG system with

streaming graph computing. In: Proceedings of the Future Technologies Con-

ference, Springer, Pages 499-522.

[101] Zander, M., Waite, T., & Harz, D. (2019). DAGsim: Simulation of DAG-

based distributed ledger protocols. ACM SIGMETRICS Performance Evalu-

ation Review, 46(3), 118-121.

46

[102] Zhang, H., Leng, S., Wu, F., & Chai, H. (2021). A DAG Blockchain enhanced

user-autonomy spectrum sharing framework for 6G-enabled IoT. IEEE Inter-

net of Things Journal, 9(11), 8012-8023.

[103] Zhang, Z., Zhu, D., & Mi, B. (2020). C-DAG: Community-assisted DAG mech-

anism with high throughput and eventual consistency. In: International Con-

ference on Wireless Algorithms, Systems, and Applications, Springer, Pages

113-121.

[104] Zhao, L., & Yu, J. (2019). Evaluating DAG-based Blockchains for IoT. In:

The 18th IEEE International Conference on Trust, Security and Privacy in

Computing and Communications/The 13th IEEE International Conference on

Big Data Science and Engineering, Pages 507-513.

[105] Zhou, T., Li, X., & Zhao, H. (2019). DLattice: A permission-less Blockchain

based on DPoS-BA-DAG consensus for data tokenization. IEEE Access, 7,

39273-39287.

[106] Zhu, Q., Loke, S. W., Trujillo-Rasua, R., Jiang, F., & Xiang, Y. (2019).

Applications of distributed ledger technologies to the internet of things: A

survey. ACM computing surveys, 52(6), 1-34.

[107] Zou, J., Dong, Z., Shao, A., Zhuang, P., Li, W., & Zomaya, A. Y. (2018).

3D-DAG: A high performance DAG network with eventual consistency and ﬁ-

nality. In: The 1st IEEE International Conference on Hot Information-Centric

Networking, Pages 262-263.

47

