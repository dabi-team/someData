2
2
0
2

b
e
F
6
1

]

R
C
.
s
c
[

1
v
4
0
9
7
0
.
2
0
2
2
:
v
i
X
r
a

Blockchain Security when Messages are Lost

Taha Ameen, Suryanarayana Sankagiri, Bruce Hajek
University of Illinois at Urbana-Champaign

Abstract

Security analyses for consensus protocols in blockchain research have primarily focused on the
synchronous model, where point-to-point communication delays are upper bounded by a known ﬁnite
incur
constant. These models are unrealistic in noisy settings, where messages may be lost (i.e.
inﬁnite delay). In this work, we study the impact of message losses on the security of the proof-of-work
longest-chain protocol. We introduce a new communication model to capture the impact of message
loss called the 0-∞ model, and derive a region of tolerable adversarial power under which the consensus
protocol is secure. The guarantees are derived as a simple bound for the probability that a transaction
violates desired security properties. Speciﬁcally, we show that this violation probability decays almost
exponentially in the security parameter. Our approach involves constructing combinatorial objects
from blocktrees, and identifying random variables associated with them that are amenable to analysis.
This approach improves existing bounds and extends the known regime for tolerable adversarial
threshold in settings where messages may be lost.

1

Introduction

Blockchain is the data structure used by peers (miners) in a peer-to-peer network to maintain a common
ledger in a decentralized manner. The consistency of this ledger is ensured through consensus protocols
such as the longest-chain protocol. Following this protocol, an honest miner groups transactions into a
block and appends its block to the longest chain in its view, before broadcasting the new blockchain to
all other peers. Further, the system may have adversarial users that deviate from the protocol arbitrarily.
Despite adversarial users attempting to disrupt the system and peer-to-peer communication incurring
message delays, it is desirable that the parties following the protocol agree on a consistent ledger.

Blockchain security has been studied under various consensus protocols (see [BSAB+19, GK20] for a
survey). Of these, the longest-chain protocol is of great interest, due its heavy use in modern blockchain
implementations. The longest-chain protocol has been modeled under various assumptions: for exam-
ple, discrete time is used in [GKR20, BKM+20], and continuous time dynamics is used in [LGR21,
Ren19, DKT+20]. Further, the protocol has also been studied for a variety of leader election mechanisms
in the consensus protocol. For instance, [PSS17, Ren19, GKL20] assume the proof-of-work mechanism,
whereas [PS17, KRDO17, FZ17] assume a proof-of-stake mechanism. All these works establish security
of the longest-chain protocol for the synchronous communication model, where communication delays
are upper bounded by a known ﬁnite constant. A common theme among these results is that in the
synchronous delay model, the longest-chain protocol is ‘secure’ under suﬃcient honest representation,
with high probability.

In this work, we analyze the impact of message losses on the security of the longest-chain protocol
following proof-of-work leader election, by introducing and analyzing an appropriate communication
network model. We motivate this by reviewing some existing communication models in the literature
and the known security guarantees associated with them.

1.1 Related Work

The underlying communication network can delay the successful delivery of peer-to-peer message broad-
casts. Popular blockchains such as Bitcoin use the Internet as their communication network. Since this
communication is subject to delay, it is natural to model the delays incurred by each block, and study
the impact of delay on the security of the longest-chain protocol.

Let 0 ≤ i < j. Let bi represent the i-th mined honest block. Let delay (bi → bj) denote the time taken
for block bi to reach the miner of block bj, and let β represent the fraction of adversarial computational
power in the system. Finally, let λ be the rate at which blocks are mined in the system. Various
descriptions of delay (bi → bj) lead to diﬀerent communication network models:

1

 
 
 
 
 
 
Instantaneous Model The original white-paper by Satoshi Nakamoto [Nak08] assumes an ideal com-
munication channel, i.e. delay (bi → bj) = 0. In this model, the longest-chain protocol is provably secure
when the honest computational power in the system exceeds the adversarial computational power, i.e.
when β < 1 − β, or equivalently, when β < 1/2.

Synchronous Model The model assumes a deterministic delay for each block that is upper bounded
by a known constant ∆, i.e., delay (bi → bj) ≤ ∆ < ∞. This delay eﬀectively reduces the growth rate of
the chain held by an honest user. Even so, it has been proved [DKT+20, GKR20] that the synchronous
model is secure with high probability if and only if

where λ is the total mining rate of the honest users.

β <

1
1 + (1 − β) λ∆

(1 − β) ,

Partially Synchronous Model The partially synchronous model assumes the existence of some
unknown and adversarially chosen ‘Global Stabilization Time (GST)’ such that the delays are un-
bounded before GST, but bounded after it [DLS88]. Therefore, at any time t, the delay satisﬁes
delay (bi → bj) ≤ ∆ + max (0, GST − t). If certain conditions are met, the partially synchronous model is
known to be secure with high probability after the Global Stabilization Time [NTT21].

Sleepy Model The sleepy model considers the setting where miners may either be online or oﬄine,
and their participation status may change during the execution of the protocol [PS17]. Let hi denote the
miner of block bi. The incurred delay is thus

delay (bi → bj) =

(cid:40)

hj is awake when bi is mined
0
∞ hj is asleep when bi is mined

.

Pass and Shi [PS17] showed that consensus can be achieved in the sleepy model with high probability, if
a majority of the awake miners at any point in time are honest.

Random Delay Model The random delay model assumes that the point-to-point delays are inde-
pendent and identically distributed, i.e. delay (bi → bj) ∼ X, where X is some known distribution. The
longest-chain protocol is shown to be secure with high probability in the random delay model, if the
delay distribution satisﬁes certain conditions and the adversarial representation in the system is below a
certain threshold [SGH21].

Except for the random delay model, none of the above models account for the possibility that point-
to-point communication may incur inﬁnite delay, i.e. messages may be lost at random. For instance,
the sleepy model allows inﬁnite delay for users that are oﬄine, but does not account for noise in the
communication process. In contrast, we introduce and analyze a new communication model to study the
impact of lost messages on blockchain security.

1.2 Contributions

0-∞ Model We introduce the 0-∞ model, where the delays are independent and identically distributed
over the set {0, ∞}. Speciﬁcally, for any i, j ≥ 0 such that i < j:

delay (bi → bj) =

(cid:40)

with probability 1 − d

0
∞ with probability d

.

This simple model postulates that a message sent point-to-point is either immediately received or per-
manently lost. This delay is independent for each user, and for each block. The modeling choice aligns
with our objective of studying the eﬀect of message losses.

We remark that the 0-∞ model is a special case of the i.i.d.

random delay model introduced
in [SGH21], which identiﬁes a region of tolerable adversarial power as a function of the delay distri-
bution. Speciﬁcally, if d is the probability of message loss and β is the fraction of computational power
in the system that is adversarial, it is shown that the 0-∞ model is secure with high probability when
. However, this characterization is not tight for the 0-∞ model, and the analysis in [SGH21]
β < 1−2d
2(1−d)

2

Figure 1: Characterizing the region of tolerable adversarial power

breaks down in the high-noise regime. For example, security of the model cannot be established when
d > 1/2, i.e. more than half the messages are lost on average.

β

It is reasonable to wonder if adversarial computational power can at all be tolerated in the high-noise
regime, for instance, when almost all messages are lost. Our work answers this question in the aﬃrmative,
by expanding the known security threshold for the 0-∞ model. In particular, our suﬃcient condition for
security is

1−β < 1 − d. Figure 1 shows this improvement.

Our method of analysis is signiﬁcantly diﬀerent from that in [SGH21]: we introduce a transmission-
graph that captures the history of communication delays between blocks, and identify special paths in
the graph that are linked to random variables which are amenable to analysis. Speciﬁcally, we identify
special objects such as forward-special and backward-special blocks, and associate with them random
variables such as forward-unheard and backward-unheard. Our technique also presents a new approach
to infer the inclusion of special blocks in the chain held by an honest user through the concept of user-
unheard-criterion. The method of analysis is inspired from [DKT+20], where security of the synchronous
model is established by considering races between honest and adversarial chains. However, our approach
does not rely on message delays being ﬁnite, and we hope that the tools we introduce are of utility in the
study of consensus mechanisms in more general settings, as well as of independent mathematical interest.
Our contributions are summarized as:

• We introduce the 0-∞ model as a playground for studying the impact of message losses. This model

provides a starting step for more complex models involving message losses.

• We introduce combinatorial objects of independent interest such as the transmission-graph. We
also identify random variables (forward-unheard, backward-unheard) associated with this graph
that are amenable to analysis, and introduce the user-unheard-criterion. These concepts may be
utilized in security analysis of blockchain protocols in more general settings.

• We prove that the longest-chain protocol is secure in the 0-∞ model if certain conditions are
met. These conditions are fairly general, and considerably extend the known threshold of tolerable
adversarial power. In this regime, we show that the probability of security violation decays almost
exponentially in the security parameter.

2 System Model

In this section, we describe our system model. We consider the setting where inﬁnitely many miners
participate in the longest-chain protocol for an inﬁnite duration, and use proof-of-work as the leader
election mechanism.

Ledgers, Transactions, Miners, and Blocks Blockchain is the data structure at the heart of the
decentralized mechanism to maintain and update a ledger. The ledger is simply an ordered list of
transactions. Transactions are assumed to be available to all the miners as soon as they are made.

3

0.00.20.40.60.81.0Probability of message loss, d0.00.10.20.30.40.5Tolerable Adversarial Power, This WorkLiterature, [SGH21]Miners verify the validity of transactions, and update the ledger by grouping the transactions into blocks
and linking blocks to form a blockchain. A block is an abstract data structure that contains a hash pointer
to a parent block, a cryptographic signature of the block’s miner, transactions, and other metadata. The
ﬁrst block in the system is called the genesis block.

Longest-Chain Protocol and Proof-of-Work Miners follow the proof-of-work longest-chain proto-
col for consensus. Following this protocol, a miner groups any and all transactions that are not included
in this longest chain into a block, and attempts to append the block to the longest chain in its view. To
do so, it must solve a hash puzzle and include the solution as proof-of-work. If the miner is successful, it
broadcasts its chain as a message to other miners over a peer-to-peer network, subject to a communica-
tion delay. Upon receiving this message, an honest miner adopts the new chain if the received chain is
longer than the chain in the miner’s memory. Ties are broken using any deterministic rule, for example,
by choosing the chain that terminates in the block that hashes to a lower value. The process continues
indeﬁnitely. We assume there are inﬁnitely many miners, and at any ﬁnite time, a miner who successfully
solves the hash puzzle is doing so for the ﬁrst time almost surely.

Parties in the Protocol We refer to parties in the protocol as users. Users that contribute to modi-
fying the ledger through appending blocks to the blockchain are called miners. A miner is either honest
or corrupt. Honest miners follow the longest-chain protocol, whereas corrupt miners may deviate from
the protocol. For simplicity, all corrupt users are grouped into a single entity called the adversary. This
allows corrupt miners to communicate instantaneously, and captures the strong setting of perfect coor-
dination between corrupt miners. The adversary can mine on any previously mined block, but its block
must contain the proof-of-work to be valid. It can reveal its chain to any subset of honest users, and
can delay its message by arbitrary amounts of time. It can also not include all the transactions it knows
about that were not in ancestor blocks. We use β to represent the fraction of computational power in
the system that is adversarial.

Mining Process The mining process is abstracted as follows. Let λ denote the total mining rate of
the system. We consider a continuous time model where blocks are mined as a Poisson process with rate
λ. Since β denotes the fraction of power that is adversarial and since successive mining instances are
independent, adversarial block arrivals follow a Poisson process with rate βλ.

Blockchains and Blocktrees From any block, a unique sequence of blocks leading back to the genesis
block can be identiﬁed via the hash pointers. We call this sequence a blockchain, or simply a chain. The
convention is that the genesis block is the ﬁrst block of a chain, and the terminating block is called the
tip. At any given slot, honest users store a single chain in their memory.

Communication Delays We consider the setting where messages are either instantaneously delivered
or permanently lost in an independent and identically distributed manner. Let delay (bi → bj) denote the
delay incurred by block bi to reach the miner of block bj. It is assumed that:

delay (bi → bj) =

(cid:40)

with probability 1 − d

0,
∞, with probability d

.

Here, d is the probability of message loss in an instance of point-to-point communication.

3 Main Result

In this section, we outline the desired security properties and present our main result. We deﬁne security
on the level of transactions. It is desirable that a transaction eventually makes it to the ledger, and stays
permanently at the same position in the ledger. This notion is formalized in Deﬁnition 3.1.

Deﬁnition 3.1 (Security). Let τ > 0. Let H be any set of honest users. For any h ∈ H, let Ch(t) denote
the chain held by user h at time t. We say that a transaction tx made at some time s is (τ, H)-secure if
for any h1, h2 ∈ H and any s1, s2 > s + τ , it holds that tx is included in a block b that is at the same
position in Ch1(s1) and Ch2(s2).

4

In the literature, security of a transaction is often deﬁned as the conﬂuence of persistence and liveness.
A transaction satisﬁes liveness if it is eventually added to the ledger, and it satisﬁes persistence if it
remains in the same position in the ledger for all future time, after a conﬁrmation time. We remark
that our deﬁnition of security implies these notions of persistence and liveness, and is consistent with
existing deﬁnitions of security, such as in [GKL15, DKT+20]. Speciﬁcally, if a transaction tx satisﬁes
(τ, H)-security, then it is part of the chain held by all users in H before a conﬁrmation time τ time has
elapsed. Furthermore, once this conﬁrmation time elapses, the transaction remains at the same position
in the ledger for all future time. Our main result shows that if certain conditions are satisﬁed, then any
transaction tx satisﬁes (τ, H) security except with a probability that decays almost exponentially in the
conﬁrmation time and scales linearly in the size of H. It is stated as Theorem 3.2.

Theorem 3.2 (Main Result). Let β be the fraction of computational power in the system that is adver-
β
1−β < (1 − d), then for every ε > 0, there exist positive
sarial, and d be the probability of message loss. If
constants a and b such that for all τ ≥ 0 and for any honest transaction tx and any ﬁnite set of honest
users H:

P (tx violates (τ, H)-security) ≤ exp (cid:0)−aτ 1−ε(cid:1) + |H| exp (−bτ ) .

The result states that under a certain threshold of tolerable adversarial power, the probability of
security violation for any transaction and any ﬁnite set of users decays (almost) exponentially in the
conﬁrmation time. Hence, this violation probability can be made arbitrarily small by appropriately
selecting the conﬁrmation time. The suﬃcient condition β
1−β < 1 − d signiﬁcantly improves the known
threshold of tolerable adversarial power for the 0-∞ model (Figure 1). We also remark that our bound
for the probability violation comprises of two terms, the latter of which scales linearly in |H|. This
linear scaling is expected, because no single message is successfully transmitted to all users in the model.
Therefore, requiring a larger set of users to permanently adopt a transaction in their ledger requires a
larger waiting time.

4 Deﬁnitions and Preliminaries

This section introduces key quantities that are used extensively in the analysis.
In Section 4.1, we
introduce the combinatorial objects on which the analysis is performed, such as the main-blocktree and
the transmission-graph. Properties of these objects are presented alongside to motivate their purpose.
In Section 4.2, key random variables that are amenable to analysis, and associated with special paths in
the transmission-graph are identiﬁed. These quantities are illustrated through an example in Section 4.3.
In Section 4.4, these random variables and are used to deﬁne ‘catch-up events’, and the notion of ‘η-
Nakamoto blocks’. Finally, Section 4.5 introduces the ‘user-unheard-criterion’, which is used to infer
useful information about the blockchain held by a user.

4.1 Graphs and Trees

Three combinatorial objects at the core of our analysis are the main-blocktree and the transmission-graph.

Main-blocktree Any block can be uniquely traced back to the ﬁrst block in the system (called genesis
block). The set of all blocks generated (mined) up till time t forms a directed tree, which we refer to as
the main-blocktree and denote it by MB(t). Here, MB(t) = (Vt, Et), where the vertex set Vt is the set of
all blocks mined up till time t and the set of directed edges Et comprises all parent-to-child block pairs.
MB(t) represents the global information about the system, and both honest and adversarial blocks are
included in it. Figure 2(a) shows an example of the vicinity of the j-th honest block, bj in some MB(t).
Deﬁnition 4.1 (Heights). Let bj be the j-th honest block. The height of bj in a blocktree is the length
of the directed path (counting edges) from the genesis block to bj. We denote the height of bj in the
main-blocktree by heightMB (bj).

Transmission-graph At any time t, we associate with the main-blocktree MB(t), a graph consisting
of only honest blocks that we call the transmission-graph. The transmission-graph at time t, denoted
TG(t) is a directed acyclic graph that represents the history of network delays among the honest miners.
Here, TG(t) = (Vt, Et), where the vertex set Vt is the set of honestly mined blocks up till time t. An
edge between bi and bj is present if delay (bi → bj) = 0. A useful observation about TG(T ) is presented
in Lemma 4.2.

5

(a) Main-blocktree

(b) Transmission-graph

Figure 2: Graphs and trees

Lemma 4.2. Let bi and bk be the i-th and k-th honest blocks such that i < k. At any time t, suppose
there exists a path Ai,k of length n from bi to bk in TG(t), i.e.

Then,

Ai,k : bi = v0 − v1 − · · · − vn = bk.

heightMB (bk) − heightMB (bi) ≥ n
Proof. If vi−1 and vi are two blocks in TG(t) such that there is an edge from vi−1 to vi, then the miner
of block vi has heard of block vi−1. Therefore, it adds its block at a height greater than that of vi−1, so
we have

Repeatedly applying this inequality over the path from bi to bk yields the desired result.

heightMB (vi) ≥ heightMB (vi−1) + 1

4.2 Special Sequences of Honest Blocks
Relative to the j-th honest block bj, we deﬁne sequences of special blocks that correspond to forward and
backward paths in TG(t). We also deﬁne notions of ‘forward unheard’ and ‘backward unheard’.

4.2.1 Forward Special Blocks

Relative to the j-th honest block bj, we deﬁne a sequence of ‘forward special (FS)’ blocks as follows.
Deﬁnition 4.3 (j-FS Sequence). Let j ≥ 0 and let bj be the j-th honest block. The j-FS sequence is a
j is the ﬁrst block to hear of bk−1
sequence of blocks (b0
.
We refer to blocks in the j-FS sequence as j-FS blocks. For 0 ≤ j < k, denote by FSj (bk) the number
of j-FS blocks mined between bj and bk (inclusive). Note that FSj (bk−1) ≥ 1, because bj is always a j-FS
block. The j-FS sequence associated with the transmission-graph in Figure 2(b) is shown in Figure 3.
Notice that FSj (bj+5) = 3 and FSj (bj+6) = 4. This example is explored in more detail in Section 4.3.

j = bj, and for all k ≥ 1, bk

j , · · · ) such that b0

j , b2

j , b1

j

6

𝒃𝒋𝒃𝒋"𝟏𝒃𝒋"𝟐𝒃𝒋"𝟑𝒃𝒋"𝟒𝒃𝒋"𝟔𝒃𝒋"𝟕𝒃𝒋*𝟏𝒃𝒋*𝟐𝒃𝒋*𝟑𝒃𝒋*𝟒𝒃𝒋*𝟓𝒃𝒋*𝟔𝒃𝒋"𝟓Adversarial BlockHonest Block𝒃𝒋𝒃𝒋"𝟏𝒃𝒋"𝟐𝒃𝒋"𝟑𝒃𝒋"𝟓𝒃𝒋"𝟒𝒃𝒋"𝟔𝒃𝒋"𝟕𝒃𝒋*𝟏𝒃𝒋*𝟐𝒃𝒋*𝟑𝒃𝒋*𝟒𝒃𝒋*𝟓𝒃𝒋*𝟔Figure 3: j-FS Sequence

Remark 4.4. Let 0 ≤ j ≤ k. Let d be the probability of message loss. The random variable FSj (bk) has
the same distribution as 1 + (cid:80)k−j
i=1 Bei (1 − d), where Bei (1 − d) are i.i.d. Bernoulli random variables
with success probability equal to 1 − d. This is because bj is a j-FS block, and every subsequent block is
independently j-FS with probability 1 − d.

Lemma 4.5. Let j ≥ 0. The j-FS sequence (b0
graph. Further, if k > i ≥ 0, then the heights of the j-FS blocks bi

j , b2

j , b1

j , · · · ) is a forward directed path in the transmission-

j and bk

j satisfy:

heightMB

(cid:0)bk

j

Proof. Let k ≥ 0. Since the miner of bk+1
conclusion follows from Lemma 4.2.

j

(cid:0)bi

(cid:1) − heightMB
has heard of bk
j

j

(cid:1) ≥ k − i

, there is an edge from bk
j

to bk+1
j

. The

Deﬁnition 4.6 (Forward Unheard). Let k ≥ j ≥ 0. The Forward Unheard for block bk with respect
to block bj is denoted FUj (bk) and deﬁned as the number of consecutive j-FS blocks that the miner of
bk has not heard of, going backwards along the j-FS sequence from the last such block mined before bk.
If the miner of bk has not heard of any j-FS block, then we toss independent biased coins (with failure
probability equal to the probability of message loss) and continue to increment the count until a success
is encountered.

Remark 4.7. Let 0 ≤ j ≤ k. Let d be the probability of message loss. The random variable FUj (bk)
has the same distribution as Geom (1 − d) − 1, where Geom(1 − d) is a geometric random variable, with
minimum value 1. Further, if k(cid:48) ≥ 0 such that k(cid:48) (cid:54)= k, then FUj (bk) and FUj (bk(cid:48)) are independent.
The intuition for deﬁning FUj (bk) as above is illustrated through an example in Section 4.3.

4.2.2 Backward Relative Special Honest

Relative to the j-th honest block bj, we deﬁne a sequence of ‘backward special (BS) blocks as follows.
Deﬁnition 4.8 (j-BS Sequence). Let j ≥ 0, and let bj be the j-th honest block. The j-BS sequence is a
sequence of blocks (b0
is the most recently mined block heard by
b−(i−1)
for all i ≥ 1.
j

j = bj and b−i
j

, · · · ) such that b0

j , b−1
j

, b−2
j

For 0 ≤ i ≤ j, denote by BSj (bi) the number of j-BS blocks mined between bi and bj (inclusive). Note
that BSj (bi) ≥ 1, since bj is always a j-BS block. The j-BS sequence associated with the transmission-
graph in Figure 2(b) is shown in Figure 4. Notice that BSj (bj−5) = 4 and BSj (bj−6) = 5. This example
is explored in more detail in Section 4.3.

Remark 4.9. Let 0 ≤ i ≤ j. Let d be the probability of message loss. The random variable BSi (bj) has
the same distribution as 1 + (cid:80)j−i
k=1 Bek (1 − d), where Bek (1 − d) are i.i.d. Bernoulli random variables
with success probability equal to 1 − d. This is because bj is a j-BS block, and every previous block is
independently j-BS with probability 1 − d.

Lemma 4.10. Let j ≥ 0. The j-BS sequence (b0
graph. Further, if k > i ≥ 0, then the heights of the j-BS blocks b−i

, · · · ) is a backward directed path in transmission-
satisfy:

j , b−1
j

, b−2
j

j and b−k

j

heightMB

(cid:0)b−k

j

(cid:1) − heightMB

(cid:0)b−i

j

(cid:1) ≥ k − i

7

𝒃𝒋𝒃𝒋*𝟏𝒃𝒋*𝟐𝒃𝒋*𝟑𝒃𝒋*𝟒𝒃𝒋*𝟓𝒃𝒋*𝟔𝒋-FS BlockHonest BlockFigure 4: j-BS Sequence

Proof. Let i ≥ 0. Since the miner of b−(i−1)
conclusion follows from Lemma 4.2.

j

has heard of b−i
j

, there is an edge from b−i
j

to b−(i−1)
j

. The

Deﬁnition 4.11 (Backward Unheard). Let j ≥ i ≥ 0. The Backward Unheard for block bi with respect
to block bj is denoted BUj (bi) and deﬁned as the number of consecutive j-BS blocks whose miners have
not heard of bi, going backwards along the j-BS sequence from the ﬁrst such block mined after bi. If
none of the miners of j-BS blocks have heard of bi, then we toss independent biased cones (with failure
probability equal to the probability of message loss) and continue to increment the count until a success
is encountered.

Remark 4.12. Let 0 ≤ i ≤ j. Let d be the probability of message loss. The random variable BUj (bi)
has the same distribution as Geom (1 − d) − 1, where Geom(1 − d) is a geometric random variable, with
minimum value 1. Further, if i(cid:48) ≥ 0 such that i(cid:48) (cid:54)= i, then BUj (bi) and BUj (bi(cid:48)) are independent.

The intuition for deﬁning BUj (bi) as above is illustrated through an example in Section 4.3. The

usefulness of these quantities is evident from Lemma 4.13.

Lemma 4.13. Let i < j < k.

(i) If FSj (bk−1) > FUj (bk), then heightMB (bk) − heightMB (bj) ≥ FSj (bk−1) − FUj (bk).

j , b1

(ii) If BSj (bi+1) > BUj (bi), then heightMB (bj) − heightMB (bi) ≥ BSj (bi+1) − BUj (bi).
Proof. We prove statement (i). Let m = FSj (bk−1) − FUj (bk) > 0. Consider the j-FS sequence
j , · · · ). Note that FSj (bk−1) is the number of j-FS blocks mined before bk, and FUj (bk) is
(b0
the number of consecutive blocks from this sequence that were not heard by bk going backward. There-
fore, bk has heard of bm
, and will mine at a greater height. Since the j-FS blocks are all mined at diﬀerent
j
heights, we have

j , · · · , bm

heightMB (bk) − heightMB (bj) > heightMB

(cid:0)bm

j

(cid:1) − heightMB

(cid:0)b0

j

(cid:1) ≥ m = FSj (bk−1) − FUj (bk) ,

as desired. The proof of statement (ii) is essentially the same, because the forward sequences FSj and
FUj map to the backward sequences BSj and BUj under reversing the directions of the edges in the
transmission-graph.

4.3 An Example

Some of the concepts introduced above are best understood through an example. Consider the main-
blocktree in Figure 2(a) and its associated transmission-graph in Figure 2(b). The same transmission-
graph is shown again in Figure 5, where the j-FS and j-BS blocks are highlighted. Recall that in the
transmission-graph, a directed edge from bj to bk indicates that the miner of bk has heard of the block
bj.

j-FS Sequence By deﬁnition, bj is a j-FS block. The miner of the next block bj+1 has heard of the
, so we have
most recent j-FS block bj, so b1
that bj+2 = b2
, so
j
these blocks are not j-FS. Finally, the miner of bj+6 has heard of b2
j = bj+6. Notice
j
that no two j-FS blocks can share the same height.

is also a j-FS block. However, the miners of bj+3, bj+4 and bj+5 have not heard of b2
j

j = bj+1 is a j-FS block. The miner of bj+2 has heard of b1
j

, so we have that b3

8

𝒃𝒋𝒃𝒋"𝟏𝒃𝒋"𝟐𝒃𝒋"𝟑𝒃𝒋"𝟓𝒃𝒋"𝟒𝒃𝒋"𝟔𝒃𝒋"𝟕𝒋-BS BlockHonest BlockFigure 5: Example

Forward Unheard Let us consider FUj (bk) with k = j + 4. Starting from bk, we count the number
of consecutive j-FS blocks that the miner of bk has not heard of, going backwards in the j-FS sequence.
The j-FS sequence at the mining time of bk is (bj, bj+1, bj+2). Going backwards in this sequence, we see
that the miner of bk has not heard of bj+2, but has heard of bj+1. Therefore, we stop the count and have
FUj (bj+4) = 1.

j-BS Sequence By deﬁnition, bj is a j-BS block. Since the miner of the most recent j-BS block (bj)
is a j-BS block. Similarly, the miner of
has heard of the previous block bj+1, we have that bj−1 = b−1
has not
b−1
j
heard of bj−3, and so bj−3 is not a j-BS block. Notice that no two j-BS blocks can share the same height.

has heard of bj−2, so we have that bj−2 = b−2

is a j-BS block. However, the miner of b−2

j

j

j

Backward Unheard Let us consider BUj (bi) with i = j − 3. Starting from the ﬁrst j-BS block mined
after bi, we count the number of consecutive j-BS blocks that have not heard of bi, going backwards in
the j-BS sequence. The j-BS sequence at the mining time of bi is bj, bj−1, bj−2. Going backwards in
this sequence, we see that the miners of bj−2 and bj−1 have not heard of bi, but the miner of bj has.
Therefore, we stop the count and have BUj (bj−3) = 2.

4.4 Catch-up Events and η-Nakamoto Blocks

In this section, we deﬁne catch-up events and η-Nakamoto blocks.

Adversarial arrivals Let a(bi, bj) denote the number of adversarial blocks mined between the mining
times of the i-th and j-th honest blocks. Similarly, let a(bi
j ) denote the number of adversarial blocks
mined between the i-th and k-th j-FS blocks.
Deﬁnition 4.14 (Catch-up Events). Let 0 ≤ i < j < k, and let 0 < η ≤ 1. The forward and backward
catch-up events are respectively deﬁned as:

j, bk

−→
B (η)
←−
B (η)

j,k : a(bj, bk) ≥ η · FSj (bk−1) − FUj (bk)

i,j : a(bi, bj) ≥ η · BSj (bi+1) − BUj (bi)

(1)

(2)

These events are catch-up events in the following sense. If the event

occurs for some j < k
and 0 < η ≤ 1, then more adversarial blocks have been mined in [τj, τk] than eﬀective j-FS blocks. For
instance, when η = 1, more adversarial blocks have been mined in [τj, τk] than the number of blocks in the
j-FS sequence from bj up to the last j-FS block heard by the miner of bk. If these adversarial blocks were
to form a side chain rooted at bj, then there is a possibility that bk mines on this side chain. However,
such an attack would fail if the catch-up events did not occur, because there would necessarily be a chain
longer than the adversarial side chain that the miner of bk is aware of. Here, η is a robustness measure:
If the catch-up event does not occur for a small value of η, then the honest blocks have a considerable
lead over adversarial side chains.

−→
B (η)
j,k

Longest Chains of the main-blocktree A longest chain of the main-blocktree at time t is a path in
MB(t) whose length is no shorter than any path in MB(t). Notice that MB(t) can have multiple longest
chains.

9

𝒃𝒋𝒃𝒋*𝟏𝒃𝒋*𝟐𝒃𝒋*𝟑𝒃𝒋*𝟒𝒃𝒋*𝟓𝒃𝒋*𝟔𝒋-FS Block𝒃𝒋"𝟏𝒃𝒋"𝟐𝒃𝒋"𝟑𝒃𝒋"𝟓𝒃𝒋"𝟒𝒃𝒋"𝟔𝒃𝒋"𝟕𝒋-BS Block−→
B (η)
j,k

η-Nakamoto Blocks A desirable property for honest block bj is the existence of some 0 < η ≤ 1 such
that none of the events
occur for any k > j.
occur for any i < j and none of the events
Intuitively, this ensures that adversarial chains rooted at any block bi with i < j are never long enough
for any block bk with k > j to extend them.
In turn, this suggests that block bj would be in every
longest chain of the main-blocktree right from being mined. We formalize this property using the notion
of η-Nakamoto blocks below, and make this intuition rigorous in Section 5.
Deﬁnition 4.15 (η-Nakamoto Block). Let j ≥ 0 and 0 < η ≤ 1. The j-th honest block bj is said to be
an η-Nakamoto block if the event

←−
B (η)
i,j





N(η)
j

:

(cid:92)

(cid:105)c

(cid:104)←−

B (η)
i,j





(cid:92)





(cid:92)

(cid:105)c

(cid:104)−→

B (η)
j,k





i : i<j

k : k>j

(3)

occurs.

We remark that an η-Nakamoto block is also an η(cid:48)-Nakamoto block, for any η(cid:48) ∈ [η, 1].

4.5 User-unheard-criterion

η-Nakamoto blocks are useful because they belong to every longest chain of the main-blocktree. However,
this is not equivalent to η-Nakamoto blocks belonging to any user’s chain for all future time. This is
because at any given time, a given user has not necessarily heard of all the blocks in MB(t). In this
section, we introduce the tools that are relevant to analyzing the state of a user’s chain with respect to
the main-blocktree. We begin by introducing ‘Unheard’ with respect to a user.

j , b1

(cid:1)). Let j ≥ 0 and let bj be the j-th honest block. Let
Deﬁnition 4.16 (User-unheard, Unheardh
(cid:1)
(cid:0)bk
(b0
j , · · · ) denote the j-FS sequence. Let h be an honest user. For any k ≥ 0, we deﬁne Unheardh
as the number of consecutive j-FS blocks that the user h has not heard of, going backwards along the j-FS
sequence from bk
j . If h has not heard of any j-FS block, then we toss independent biased coins (with failure
probability equal to the probability of message loss) and continue to increment the count until a success
is encountered.

(cid:0)bk

j

j

Remark 4.17. Let j, k ≥ 0. Let h be any honest user and d be the probability of message loss. Let
Geom(1 − d) be a geometric random variable, with minimum value 1. The distribution of the random
variable Unheardh

(cid:1) depends on h:

(cid:0)bk

j

• If h has not mined any block after the mining time of bj, then Unheardh

as Geom (1 − d) − 1.

(cid:0)bk

j

(cid:1) has the same distribution

• If h is a miner of a j-FS block, then h has heard of its own block as well as the j-FS block that
immediately preceded it. However, all other delays from the miners of j-FS blocks to h are still
(cid:1) is stochastically dominated by
independent and identically distributed. In this case, Unheardh
Geom(1 − d).

(cid:0)bk

j

• If h is a miner of a block b(cid:96) with (cid:96) > j, such that b(cid:96) is not a j-FS block, then the delay from the most
recent j-FS block before b(cid:96) to h is inﬁnity. However, all other delays from the miners of j-FS blocks
(cid:1) is stochastically
to h are still independent and identically distributed. In this case, Unheardh
dominated by Geom(1 − d).
(cid:0)bk

(cid:1) ≤ Geom (1 − d), where the ≤ sign indicates stochastic domination.

(cid:0)bk

In all cases, we have Unheardh

j

j

We compare ‘forward-unheard’ (denoted FUj (bk)) and ‘user-unheard’ (denoted Unheardh

(cid:1)). Al-
though similar in spirit, the quantity FUj (bk) counts the number of consecutive j-FS blocks not heard by
the miner of block bk, going backwards in the j-FS sequence from the last such block before bk, whereas
(cid:1) ﬁxes an honest user h and similarly counts the number of consecutive such
the quantity Unheardh
blocks not heard by h. Since bk and b(cid:96) are mined by two diﬀerent miners, then FUj (bk) and FUj (b(cid:96)) are
(cid:0)bk
independent random variables. However, Unheardh
j
Next, we introduce the user-unheard-criterion, which will later allow us to infer useful information

(cid:1) need not be independent.

(cid:1) and Unheardh

(cid:0)bk

(cid:0)bk

(cid:0)b(cid:96)

j

j

j

about the state of a user’s chain from the main-blocktree.

Deﬁnition 4.18 (User-unheard-criterion). Let h be an honest user. Let j ≥ 1, k0 ≥ 1, and 0 < η < 1.
We say that the (h, j, η, k0)-user-unheard-criterion is satisﬁed if

Unheardh

(cid:0)bk

j

(cid:1) <

(cid:19)

(cid:18) 1 − η
2

k,

∀k ≥ k0,

(4)

10

5 Proof Outline

In this section, we present an outline of the proof of Theorem 3.2. First, deterministic and probabilistic
results are stated. These results are used as building blocks in the proof sketch of our main result,
Theorem 3.2 which is presented in Section 5.3. Rigorous proofs of all the results, including the main
result are relegated to the appendix.

5.1 Deterministic Results

Theorem 5.1. Let j ≥ 1 and 0 < η ≤ 1. Let bj be the j-th honest block, and τj be the mining time of
bj. Suppose bj is an η-Nakamoto block. Then:

(i) bj is the unique honest block at its height in MB(t) for all t ≥ τj.

(ii) bj is in every longest chain of MB(t) for all t ≥ τj.

(iii) bj is the unique block at its height in MB(τj).

(iv) For any k such that k > j, bk is a descendant of bj in the main-blocktree.

Proof. See Appendix A.1

(cid:109)
Theorem 5.2. Let h be an honest user. Let j ≥ 1 and 0 < η < 1. Let k0 =
. Let Ch(t) denote the
chain held by h at time t. If bj is an η-Nakamoto block, and if the (h, j, η, k0)-user-unheard-criterion is
satisﬁed, then bj ∈ Ch(t) for all t ≥ τ k0

is the mining time of the k0-th j-FS block.

(cid:108) 2η
1−η

j , where τ k0

j

Proof. See Appendix A.2.

5.2 Probabilistic Results

Lemma 5.3. Let 0 ≤ i < j ≤ j(cid:48) < k, and 0 ≤ η ≤ 1. The events:

•

←−
B (η)

i,j and

−→
B (η)

j(cid:48),k are independent.

•

−→
B (η)

i,j and
Proof. See Appendix B.1.

←−
B (η)

j(cid:48),k are independent.

Theorem 5.4. Let j ≥ 1 and 0 ≤ η ≤ 1. Recall that bj is the j-th honest block and N(η)
bj is an η-Nakamoto block. If

β
1−β < η · (1 − d), then there exists a positive constant p0 > 0 such that

is the event that

j

Proof. See Appendix B.2.

(cid:16)

P

N(η)
j

(cid:17)

≥ p0 > 0

Lemma 5.5. Let 0 < η ≤ 1 and i < j < k. Let
If

β
1−β < η · (1 − d), there exists a constant c > 0 such that

−→
B (η)

j,k and

←−
B (η)

i,j be the catch-up events deﬁned in (1), (2).

P

P

(cid:17)

(cid:16)−→

B (η)
j,k

(cid:17)

(cid:16)←−

B (η)
i,j

≤ e−c(k−j)

≤ e−c(j−i)

Proof. See Appendix B.3.

Theorem 5.6. Let 0 < η ≤ 1. Let β be the fraction of computational power in the system that is
adversarial and d be the probability of message loss. Let B(η)
s,s+t be the event that there are no η-Nakamoto
blocks in [s, s + t]. If

β
1−β < η · (1 − d), then there exists a constant c0 > 0 such that for any s, t ≥ 0,

Proof. See Appendix B.4.

(cid:16)

P

B(η)

s,s+t

(cid:17)

√

t

≤ e−c0

11

Theorem 5.7. Let 0 < η ≤ 1. Let β be the fraction of computational power in the system that is
adversarial and d be the probability of message loss. Let B(η)
s,s+t be the event that there are no η-Nakamoto
β
1−β < η · (1 − d), then for every ε > 0, there exist positive constants A, a such that
blocks in [s, s + t]. If
for any s, t > 0,

Proof. See Appendix B.5.

(cid:16)

P

B(η)

s,s+t

(cid:17)

≤ A exp (cid:0)−at1−ε(cid:1) .

Theorem 5.8. Let 0 < η < 1. Suppose the fraction β of computational power in the system that is
β
1−β < η · (1 − d). Given s ≥ 0, let bJ be the
adversarial, and the probability d of message loss satisﬁes
ﬁrst η-Nakamoto block mined after time s. There exist constants C, c > 0 such that for any honest user
h and for all k(cid:48) ≥ 1,

P ((h, J, η, k(cid:48)) -user-unheard-criterion fails) ≤ Ce−ck(cid:48)

Proof. See Appendix B.6.

5.3 Proof Sketch

η-Nakamoto blocks are special blocks that are part of every longest chain in the main-blocktree, for
all time after they are mined (Theorem 5.1). Therefore, if a transaction is included in an η-Nakamoto
block or in any of its ancestors, then it will be included in every longest chain of the main-blocktree.
Furthermore, if an honest user is up-to-date with the main-blocktree (speciﬁcally, by satisfying a relevant
user-unheard-criterion, and therefore having heard of more forward special blocks with respect to the
η-Nakamoto block, than adversarial blocks), then it is reasonable to expect that the honest user will
also include the transaction in its chain. This idea is formalized in the user-unheard-criterion, and made
rigorous in Theorem 5.2.

The core idea behind the proof of the main result (Theorem 3.2) is to show that η-Nakamoto blocks
occur frequently with high probability (Theorem 5.7). In turn, this implies that a transaction is highly
likely to be included in an η-Nakamoto block or its ancestor, soon after it is made. Theorem 5.8 then
shows that it is also highly likely that a relevant user-unheard-criterion will hold for the honest user, once
a waiting time has elapsed.

To prove Theorem 5.7, we bootstrap from a milder version of it, which is stated as Theorem 5.6.
Inspired by the proof strategy in [DKT+20], we prove Theorem 5.6 by separating catch-up events into
long and short-term catch-up events. We show that long term catch-ups occur rarely as a consequence of
Lemma 5.5, and short-term catch-up probabilities are bounded using a lower bound on the probability
that the j-th block is an η-Nakamoto block (Theorem 5.4), and the fact that non-overlapping catch-up
events are independent (Lemma 5.3). This establishes that a transaction is highly likely to be included
in the main-blocktree for all future time, once a waiting period has elapsed. This proves thereom 5.7.

Next, we show that an honest user is likely to always be up-to-date with the main-blocktree, forever
after a waiting time. This is done by explicitly bounding the probability that a relevant user-unheard-
criterion is violated using tools from stochastic analysis. This proves Theorem 5.8.

Theorems 5.7 and 5.8 together imply the main result. The details of this proof are presented in

Appendix B.7.

6 Conclusion

In this work, we introduced the 0-∞ model: a framework to study the impact of random message losses on
the security of the proof-of-work longest-chain protocol. We investigated the security of this protocol by
analyzing the transmission-graph, a dynamically evolving graph that captures the delays incurred by the
blocks mined by honest miners. Speciﬁcally, we studied special sequences of blocks and identiﬁed random
variables associated with them that are amenable to analysis. These random variables were used to deﬁne
useful objects and desirable events, such as η-Nakamoto blocks and user-unheard-criterion respectively.
These ideas allowed us to generalize analysis techniques from the synchronous delay model to a setting
where delays are possibly inﬁnite. We showed that the condition β
1−β < 1−d is suﬃcient for a transaction
to satisfy desired security properties except with a probability that decays almost exponentially in the
security parameter. This greatly improved the known threshold of the fraction of adversarial power that
is tolerable for a given probability of message loss in an instance of point-to-point communication.

12

References

[BKM+20] Erica Blum, Aggelos Kiayias, Cristopher Moore, Saad Quader, and Alexander Russell. The
combinatorics of the longest-chain rule: Linear consistency for proof-of-stake blockchains. In
Proceedings of the Fourteenth Annual ACM-SIAM Symposium on Discrete Algorithms, pages
1135–1154. SIAM, 2020.

[BSAB+19] Shehar Bano, Alberto Sonnino, Mustafa Al-Bassam, Sarah Azouvi, Patrick McCorry, Sarah
Meiklejohn, and George Danezis. Sok: Consensus in the age of blockchains. In Proceedings
of the 1st ACM Conference on Advances in Financial Technologies, pages 183–198, 2019.

[DKT+20] Amir Dembo, Sreeram Kannan, Ertem Nusret Tas, David Tse, Pramod Viswanath, Xuechao
Wang, and Ofer Zeitouni. Everything is a race and Nakamoto always wins. In Proceedings
of the 2020 ACM SIGSAC Conference on Computer and Communications Security, pages
859–878, 2020.

[DLS88]

[FZ17]

[GK20]

[GKL15]

[GKL20]

[GKR20]

[Kin64]

Cynthia Dwork, Nancy Lynch, and Larry Stockmeyer. Consensus in the presence of partial
synchrony. Journal of the ACM (JACM), 35(2):288–323, 1988.

Lei Fan and Hong-Sheng Zhou. A scalable proof-of-stake blockchain in the open setting (or,
how to mimic nakamoto’s design via proof-of-stake). Technical report, Cryptology ePrint
Archive, Report 2017/656, 2017.

Juan Garay and Aggelos Kiayias. Sok: A consensus taxonomy in the blockchain era. In
Cryptographers’ Track at the RSA Conference, pages 284–318. Springer, 2020.

Juan Garay, Aggelos Kiayias, and Nikos Leonardos. The bitcoin backbone protocol: Anal-
ysis and applications. In Annual international conference on the theory and applications of
cryptographic techniques, pages 281–310. Springer, 2015.

Juan Garay, Aggelos Kiayias, and Nikos Leonardos. Full analysis of nakamoto consensus in
bounded-delay networks. Cryptology ePrint Archive, 2020.

Peter Gaži, Aggelos Kiayias, and Alexander Russell. Tight consistency bounds for bitcoin.
In Proceedings of the 2020 ACM SIGSAC Conference on Computer and Communications
Security, pages 819–838, 2020.

John F Kingman. A martingale inequality in the theory of queues. In Mathematical Proceed-
ings of the Cambridge Philosophical Society, volume 60, pages 359–361. Cambridge University
Press, 1964.

[KRDO17] Aggelos Kiayias, Alexander Russell, Bernardo David, and Roman Oliynykov. Ouroboros:
A provably secure proof-of-stake blockchain protocol. In Annual International Cryptology
Conference, pages 357–388. Springer, 2017.

[LGR21]

[MU17]

[Nak08]

[NTT21]

[PS17]

Jing Li, Dongning Guo, and Ling Ren. Close latency-security trade-oﬀ for the nakamoto
consensus. In Proceedings of the 3rd ACM Conference on Advances in Financial Technologies,
pages 100–113, 2021.

Michael Mitzenmacher and Eli Upfal. Probability and Computing: Randomization and prob-
abilistic techniques in algorithms and data analysis. Cambridge University Press, 2017.

Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash system. Decentralized Business
Review, page 21260, 2008.

Joachim Neu, Ertem Nusret Tas, and David Tse. Ebb-and-ﬂow protocols: A resolution of
the availability-ﬁnality dilemma. In 2021 IEEE Symposium on Security and Privacy (SP),
pages 446–465. IEEE, 2021.

Rafael Pass and Elaine Shi. The sleepy model of consensus. In International Conference on
the Theory and Application of Cryptology and Information Security, pages 380–409. Springer,
2017.

13

[PSS17]

Rafael Pass, Lior Seeman, and Abhi Shelat. Analysis of the blockchain protocol in asyn-
chronous networks. In Annual International Conference on the Theory and Applications of
Cryptographic Techniques, pages 643–673. Springer, 2017.

[Ren19]

Ling Ren. Analysis of nakamoto consensus. IACR Cryptol. ePrint Arch., 2019:943, 2019.

[SGH21]

Suryanarayana Sankagiri, Shreyas Gandlur, and Bruce Hajek. The longest-chain protocol
under random delays. arXiv preprint arXiv:2102.00973, 2021.

A Proofs of Deterministic Results

A.1 Proof of Theorem 5.1

Theorem 5.1. Let j ≥ 1 and 0 < η ≤ 1. Let bj be the j-th honest block, and τj be the mining time of
bj. Suppose bj is an η-Nakamoto block. Then:

(i) bj is the unique honest block at its height in MB(t) for all t ≥ τj.

(ii) bj is in every longest chain of MB(t) for all t ≥ τj.

(iii) bj is the unique block at its height in MB(τj).

(iv) For any k such that k > j, bk is a descendant of bj in the main-blocktree.

Proof. Let N(η)

j

be the event that bj is an η-Nakamoto block. Recall that





N(η)

j =

(cid:92)

(cid:105)c

(cid:104)←−

B (η)
i,j





(cid:92)





(cid:92)

(cid:105)c

(cid:104)−→

B (η)
j,k





i : i<j

k : k>j

Suppose N(η)

j

occurs, so that bj is an η-Nakamoto block.

(i) Let t ≥ τj. We show that bj is the unique honest block at its height in MB(t), i.e. for any i, k ≥ 0

such that i < j < k, we show that

heightMB (bi) < heightMB (bj) < heightMB (bk) .

We begin by proving the ﬁrst inequality in (5). Since N(η)
occurs. Therefore, we have

j

occurs, it follows that the event

(5)

(cid:105)c

(cid:104)←−

B (η)
i,j

heightMB (bj) − heightMB (bi)

(a)
≥ BSj (bi+1) − BUj (bi)
(b)
≥ η · BSj (bi+1) − BUj (bi)
(c)
> a(bi, bj),

(cid:105)c

where (a) is from Lemma 4.13, (b) follows from the fact that η ≤ 1, and (c) is the deﬁnition of
(cid:104)←−
. Since a(bi, bj) ≥ 0, it follows that heightMB (bi) < heightMB (bj). Similarly, the occurrence
(cid:105)c
implies that heightMB (bj) < heightMB (bk). Thus, bj is the unique honest block at its

B (η)
i,j
(cid:104)−→
B (η)
of
j,k
height in MB(t).

(ii) We show that bj is in every longest chain of MB(t). Let V be any longest chain in MB(t), i.e.

V = v0 − v1 − · · · − vheightMB(bj ) − · · · − vm−1 − vm,
where v0 is the genesis block, vheightMB(bj ) =: v is the block at the height of bj, and m is the height
of MB(t). It suﬃces to show that v = bj. In fact, since bj is the unique honest block at its height,
it suﬃces to only show that v must be an honest block. Starting from v and traversing blocks in
V in the backward direction, let bi denote the ﬁrst honest block encountered in V, not including v
itself. Since the genesis block is honest, such a bi exists. Similarly, we also want to traverse blocks
in V along the forward direction. Here, we have two cases:

14

Case 1: There is an honest block in V after v. In this case, let bk be the ﬁrst honest block in V
after v. Let H denote heightMB (bk), and V1 be the sequence bi − · · · − v − · · · − bk.
Case 2: There is no honest block in V after v.
In this case, let bk be the ﬁrst honest block
mined after time t. Let H = m denote the height of the main-blocktree, and V1 be the sequence
bi − · · · − v − · · · − vm.
In both cases, let N denote the number of blocks in V1, not including bi. Notice that the blocks are
at consecutive heights. We have:

N = H − heightMB (bi)

(a)
≥ heightMB (bj) + FSj (bk−1) − FUj (bk) − heightMB (bi)
(b)
≥ (FSj (bk−1) − FUj (bk)) + (BSj (bi+1) − BUj (bi))
(c)
≥ (a(bi, bj) + 1) + (a(bj, bk) + 1)
> a(bi, bk) + 1,

(cid:105)c

(cid:104)−→

(cid:104)←−

B (η)
i,j

where (a) follows from Lemma 4.13 in case 1, and the fact that j-FS blocks are mined at diﬀerent
heights in case 2. Further, (b) is due to Lemma 4.13 and the fact that η ≤ 1, and (c) follows because
the events
occur. However, by deﬁnition of bi and bk, all blocks in V1 after bi
except for bk and possibly v are adversarial. Therefore, there must be at least one honest block in
V1 strictly between bi and bk. Since the only possibility for this is v, it follows that v must be an
honest block. Since bj is the unique honest block at the height of v, we conclude that bj in every
longest chain of MB(t), as desired.

B (η)
j,k

and

(cid:105)c

(iii) Let v be a block in MB(τj) such that heightMB (v) = heightMB (bj). Let T be the tine of ancestors
of v. Traversing blocks along the backward direction starting from v, let bi denote the ﬁrst honest
block encountered. The portion of T between bi and v consists of only adversarial blocks. However,

heightMB (v) − heightMB (bi) = heightMB (bj) − heightMB (bi)
(a)
≥ η · BSj (bi+1) − BUj (bi)
(b)
> a(bi, bj),

where (a) is from Lemma 4.13, and (b) is true because bj is an η-Nakamoto block. Since v is the
only possibility for an honest block in the portion of T after bi, it follows that v must be an honest
block. From (i), we conclude that v = bj. This concludes the proof.

(iv) Let k > j. Since bj is an η-Nakamoto block, we have from the proof of (i) that heightMB (bk) >
heightMB (bj). Let v denote the ancestor of bk at the height of bj in the main-blocktree. Starting from
v and traversing blocks along the ancestors of v, let bi denote the ﬁrst honest block encountered.
This is exactly case 1 in the proof of (ii), and it follows that v = bj.

A.2 Proof of Theorem 5.2

(cid:109)
. Let Ch(t) denote the
Theorem 5.2. Let h be an honest user. Let j ≥ 1 and 0 < η < 1. Let k0 =
chain held by h at time t. If bj is an η-Nakamoto block, and if the (h, j, η, k0)-user-unheard-criterion is
satisﬁed, then bj ∈ Ch(t) for all t ≥ τ k0

is the mining time of the k0-th j-FS block.

(cid:108) 2η
1−η

j , where τ k0

j

Proof. Let |Ch(t)| denote the number of blocks in Ch(t). Let τj denote the mining time of bj, and let τ k
j
denote the mining time of bk
occurs
j
for all k > j. In turn, this implies

. Since bj is an η-Nakamoto block, we know that the event

B (η)
j,k

(cid:104)−→

(cid:105)c

a(b0

j , bk+1
j

) < η · (k + 1)

∀k > 0.

15

However, η (k + 1) ≤ (cid:0) 1+η
(cid:0)bk
we have that Unheardh

2

(cid:1) k whenever k ≥ k0. Further, since (h, j, η, k0)-user-unheard-criterion holds,
(cid:1) < (cid:0) 1−η

(cid:1) k whenever k ≥ k0. These facts imply:

j

2

a(b0

j , bk+1
j

) < k − Unheardh

(cid:1)

(cid:0)bk

j

∀k ≥ k0.

(6)

Since a(b0

Fix k ≥ k0. Let t be such that τ k
j , bk+1
j

j ≤ t < τ k+1
) ≥ 0, it follows from (6) that Unheardh

(cid:1) < k. Therefore, h has heard of at least
one j-FS block. Therefore, |Ch(t)| ≥ heightMB (bj). Let v ∈ Ch(t) be the block at the height of bj. To
show that bj ∈ Ch(t), it suﬃces by statement (iv) in Theorem 5.1 to prove that Ch(t) contains at least
one honest block mined in [τ k

. We show that h includes bj in its chain at time t.

(cid:0)bk

j

j

j , ∞).

Let Ch(t)(cid:100)v denote the sub-chain of Ch(t) starting from v, i.e. Ch(t)(cid:100)v contains blocks of Ch(t) that
are at height no less than that of v. We show that (6) implies that Ch(t)(cid:100)v cannot contain all adversarial
blocks. We know from statement (iii) of Theorem 5.1 that bj is the unique block at its height in MB(τj).
Therefore, all blocks in Ch(t)(cid:100)v are mined at or after time τj. Since t < τ k+1

, we have

j

a(b0

j , bk+1
j

)

(a)
< k − Unheardh

(cid:0)bk

j

(cid:1) (b)

≤ |Ch(t)(cid:100)v|,

(cid:0)bk

, where m = k −
where (a) is the same as (6) and (b) follows from the fact that h has heard of bm
j
(cid:1). Therefore, h adopts a chain that has length at least heightMB (v) + m. We conclude that
Unheardh
there exists an honest block bk ∈ Ch(t)(cid:100)v. From statement (iv) in Theorem 5.1, it follows that Ch(t)
contains bj.

j

The above argument is true for all t ∈ [τ k

j , τ k+1
j

), so it follows that h ∈ Ch(t) for all t ∈ [τ k

j , τ k+1
j

).

Since this is true for all k ≥ k0, it follows that h ∈ Ch(t) for all t ≥ τ k0
j

, as desired.

B Proofs of Probabilistic Results

B.1 Proof of Lemma 5.3

Lemma 5.3. Let 0 ≤ i < j ≤ j(cid:48) < k, and 0 ≤ η ≤ 1. The events:

•

•

←−
B (η)

i,j and

−→
B (η)

i,j and

−→
B (η)

j(cid:48),k are independent.

←−
B (η)

j(cid:48),k are independent.

Proof. We prove only the ﬁrst statement, since the second uses a similar argument. For any m ∈
{i, j, j(cid:48), k}, let τm denote the mining time of bm. The LHS of the event

−→
B (η)

j(cid:48),k : a(bj(cid:48), bk) ≥ η · FSj(cid:48) (bk−1) − FUj(cid:48) (bk)

depends on the number of adversarial arrivals in [τj(cid:48), τk]. Further, the RHS depends on the delays from
bj(cid:48) to all the honest blocks mined in [τj(cid:48), τk).

In contrast, the LHS of the event

←−
B (η)

i,j : a(bi, bj) ≥ η · BSj (bi+1) − BUj (bi)

depends on the number of adversarial arrivals in [τi, τj]. Further, the RHS depends on the delays from
all the honest blocks mined in [τi, τj) to bj.

Since honest and adversarial arrivals are independent Poisson processes, and since the delay associated
with any two blocks in [τi, τj] is independent of the delay associated with any two blocks in [τj(cid:48), τk], and
since the two intervals do not overlap, it follows that

are independent.

and

←−
B (η)
i,j

−→
B (η)
j(cid:48),k

B.2 Proof of Theorem 5.4
Theorem 5.4. Let j ≥ 1 and 0 ≤ η ≤ 1. Recall that bj is the j-th honest block and N(η)
bj is an η-Nakamoto block. If

β
1−β < η · (1 − d), then there exists a positive constant p0 > 0 such that

is the event that

j

(cid:16)

P

N(η)
j

(cid:17)

≥ p0 > 0

16

Proof. Fix j. Recall that the event N(η)

j =

←−
E (η)
j

(cid:84) −→

E (η)
j

, where

(cid:105)c

(cid:104)−→

B (η)
j,k

(cid:84)
k : k>j

. From Lemma 5.3, it follows that

←−
E (η)
j

and

−→
E (η)
j

←−
E (η)

j = (cid:84)

i : i<j

(cid:105)c

(cid:104)←−

B (η)
i,j

and

−→
E (η)

j =

are independent events. Therefore,

(cid:16)

P

N(η)
j

(cid:17)

= P

(cid:16)←−

E (η)
j

(cid:92) −→

E (η)
j

(cid:17)

= P

(cid:17)

(cid:16)←−
E (η)
j

P

(cid:17)

(cid:16)−→

E (η)
j

.

Thus, it suﬃces to show the existence of p > 0 such that P

(cid:17)

(cid:16)←−

E (η)
j

≥ p and P

(cid:17)

(cid:16)−→

E (η)
j

≥ p.

If an i.i.d. random process is a sequence of random variables with known distribution, say
Notation:
Geometric or Bernoulli with parameter q, we refer to the i-th random variable in the sequence as Geomi(q)
or Bei(q) respectively.

Showing P

(cid:17)

(cid:16)−→

E (η)
j

≥ p > 0: By deﬁnition, the event

−→
E (η)
j

occurs if

Notice that the LHS are RHS are independent random variables. The random variables inn the LHS are:

a(bj, bk) − η · FSj (bk−1) < −FUj (bk) ∀k > j.

(7)

a(bj, bk) =

k−j
(cid:88)

i=1

(Geomi (1 − β) − 1) ,

FSj (bk−1) = 1 +

k−j−1
(cid:88)

Bei (1 − d) ,

(8)

(9)

i=1
where equation (8) follows from the fact that there are Geom (1 − β) − 1 adversarial arrivals between
two successive honest arrivals, and the fact that the number of adversarial arrivals in disjoint intervals is
independent. Equation (9) follows from Remark 4.4.

Let (Xi : i ≥ 1) be an i.i.d. random process, with Xi ∼ Geomi (1 − β) − 1 − η · Bei (1 − d). Let Wj =
(cid:80)j
i=1 Xi denote the sum of the ﬁrst j terms of the process (Xi : i ≥ 1). Finally, it follows from Remark 4.7
that (FUj (bk) : k > j) is identical to the i.i.d. random process (Yi : i > 0), with Yi ∼ Geomi (1 − d) − 1.
Using these random variables, equation (7) can be equivalently stated as

k−j
(cid:88)

i=1

Xi < −Yk−j ∀k > j.

(10)

Let γ be a constant to be determined later, such that 0 < γ < η. The inequality in (10) holds if EA ∩ EB
occur, where

EA :

i
(cid:88)

j=1

Xj < −γi ∀i ≥ 1

EB : − γi < −Yi ∀i ≥ 1.

≥ P (EA ∩ EB) = P (EA) P (EB).
Here, EA and EB are independent events. Therefore, we have P
It suﬃces to show the existence of p1, p2 > 0 such that P (EA) ≥ p1 and P (EB) ≥ p2. First, we bound
P (EB).

(cid:17)

(cid:16)−→

E (η)
j

P (EB) = P



{Yi ≤ γi}

 =





(cid:92)

i≥1

∞
(cid:89)

i=1

(cid:0)1 − d1+γi(cid:1) =: p2 > 0,

since (Yi : i ≥ 1) is an i.i.d process with 1 + Yi ∼ Geomi (1 − d). Notice that p2 > 0 for all 0 ≤ d < 1 and
for all γ > 0.

Next, we bound P (EA). Fix some (cid:96) ∈ N, and let c be a positive constant given by c = (η − γ) (cid:96).

Consider the following two desirable events:

G1 : W(cid:96) ≤ −γ(cid:96) − c
G2 : max
m≥0

(W(cid:96)+m − W(cid:96) + γm) < c

17

It is clear that G1 ∩ G2 =⇒ EA, and that G1 and G2 are independent events, since Poisson arrivals
over disjoint intervals are independent. Therefore, it suﬃces to ﬁnd constants p11, p12 > 0 such that
P (G1) ≥ p11 and P (G2) ≥ p12.

P (G1) = P

= P

= P

≥ P

(cid:32) (cid:96)

(cid:88)

i=1
(cid:32) (cid:96)

(cid:88)

i=1
(cid:32) (cid:96)

(cid:88)

i=1

(cid:32) (cid:96)
(cid:92)

i=1

(cid:33)

Xi ≤ −γ(cid:96) − c

(Geomi (1 − β) − 1 − η · Bei (1 − d)) ≤ −γ(cid:96) − c

(cid:33)

(Geomi (1 − β) − η · Bei (1 − d)) ≤ (1 − γ) (cid:96) − c

(cid:33)

[{Geomi (1 − β) = 1} ∩ {Bei (1 − d) = 1}]

(cid:33)

= p11 > 0,

(11)

(12)

(13)

(14)

(15)

for ﬁxed (cid:96), since γ < η and since c is chosen to be suﬃciently small. Here, the inequality in (14) holds
because one way to satisfy the inequality in the event in (13) is when both LHS and RHS of the inequality
equal (1 − η) (cid:96).

It remains to show p12 > 0. Consider the random process (Zi : i ≥ 1), where Zi = Xi + γ.
i=1 Zi : m ≥ 1) and (W(cid:96)+m − W(cid:96) + γm : m ≥ 1) follow the same distribution. The Kingman

Then, ((cid:80)m
bound [Kin64] yields,

where

P (G2) = P

(cid:32)

max
m≥0

m
(cid:88)

i=1

(cid:33)

Zi < c

≥ 1 − e−θ∗c =: p12,

θ∗ = sup (cid:8)θ > 0 : E (cid:2)eθZ1 ≤ 1(cid:3)(cid:9) .

Since c > 0, we see that p12 > 0 if θ∗ > 0. We show that θ∗ > 0 if
yields

β

1−β < η (1 − d). A simple computation

β
1 − β
1−β < η (1 − d), then there exists 0 < γ < η such that E [Z1] < 0. Since E (cid:2)eθZ1 (cid:3)
θ=0 = E [Z1] < 0, we know that there exists θ1 > 0 such that E (cid:2)eθZ1 (cid:3)
E (cid:2)eθZ1 (cid:3)

− η · (1 − d) + γ,

E [Z1] =

β

θ=θ1

If

d
dθ
implies θ∗ > θ1 > 0.

θ=0 = 1, and
< 1, which then

The above argument is summarized as
(cid:17)

(cid:16)−→

P

E (η)
j

≥ P (EA) P (EB) ≥ P (G1) · P (G2) · P (EB) ≥ p11 · p12 · p2 =: p > 0.

(16)

Showing P

≥ p > 0: For any i, k ≥ 0 such that j − i = k − j, it follows from Remarks 4.4, 4.7, 4.9

(cid:16)←−

(cid:17)

E (η)
j
(cid:16)←−

B (η)
i,j

and 4.12 that P

(cid:17)

= P

(cid:17)

(cid:16)−→

B (η)
j,k

. By symmetry, we have

P

(cid:17)

(cid:16)←−
E (η)
j

= P

= P

≥ P

= P

(cid:105)c(cid:33)

(cid:104)←−

B (η)
i,j

(cid:32) j
(cid:92)

i=0









(cid:105)c

(cid:104)−→

B (η)
j,k





2j+1
(cid:92)

k=j+1

(cid:92)

(cid:105)c

(cid:104)−→

B (η)
j,k





(cid:16)−→

k:k>j
(cid:17)

E (η)
j

where the constant p > 0 is the same as in (16). This concludes the proof.

≥ p,

18

B.3 Proof of Lemma 5.5

Lemma 5.5. Let 0 < η ≤ 1 and i < j < k. Let
If

β
1−β < η · (1 − d), there exists a constant c > 0 such that

−→
B (η)

j,k and

←−
B (η)

i,j be the catch-up events deﬁned in (1), (2).

P

P

(cid:17)

(cid:16)−→

B (η)
j,k

(cid:17)

(cid:16)←−

B (η)
i,j

≤ e−c(k−j)

≤ e−c(j−i)

Proof. First, we show the existence of c > 0 such that P
is deﬁned as

(cid:17)

(cid:16)−→

B (η)
j,k

≤ e−c(k−j). Recall that the event

−→
B (η)
j,k

−→
B (η)

j,k : a(bj, bk) ≥ η · FSj (bk−1) − FUj (bk) .

From Remarks 4.4, 4.7, 4.9 and 4.12, these random variables are characterized as:

a(bj, bk) =

k−j
(cid:88)

i=1

FSj (bk−1) = 1 +

(Geomi (1 − β) − 1) ,

k−j−1
(cid:88)

i=1

Bei (1 − d) ,

FUj (bk) = Geom (1 − d) − 1.

Further, the three random variables a(bj, bk), FSj (bk−1) , FUj (bk) are mutually independent. Consider
the following desirable events associated with them.

G1 : a(bj, bk) <

β
1 − β
G2 : FSj (bk−1) > (1 − d) (k − j) (1 − δ)

(k − j) (1 + ε)

G3 : FUj (bk) ≤ (k − j)

(1 − δ) η · (1 − d) −

(cid:20)

(cid:21)

(1 + ε)

β
1 − β

Clearly, G1 ∩ G2 ∩ G3 =⇒

(cid:105)c

(cid:104)−→

B (η)
j,k

. Therefore, we have

P

(cid:16)(cid:104)−→

B (η)
j,k

(cid:105)c(cid:17)

≥ P (G1 ∩ G2 ∩ G3) = P (G1) P (G2) P (G3) .

(17)

It suﬃces to ﬁnd bounds for each term separately in the RHS of (17).

Bounding G1: Since E [a(bj, bk)] = β

1−β (k − j), it follows from the Chernoﬀ bound that
(cid:19)

(cid:18)

P (Gc

1) = P

a(bj, bk) ≥

(k − j) (1 + ε)

≤ e−c1(k−j),

β
1 − β

where c1 =

β
1 − β

(1 + ε) log (1 + ε) +

1
1 − β

(1 + βε) log (1 + βε) > 0

Bounding G2:

It follows from the Hoeﬀding bound that

(cid:32)

P (Gc

2) = P

1 +

k−j−1
(cid:88)

i=1

Bei (1 − d) ≤ (1 − d) (k − j) (1 − δ)

(cid:33)

≤ P

(cid:32)k−j
(cid:88)

i=1

Bei (1 − d) ≤ (1 − d) (k − j) (1 − δ)

(cid:33)

≤ e−c2(k−j),

where c2 = δ2(1−d)

2

> 0.

19

Bounding G3: Consider the quantity c4 =
there exist ε, δ > 0 such that c4 > 0. Since 1 + FUj (bk) follows a geometric distribution, we have

(1 − δ) η · (1 − d) − β

1−β < η (1 − d), then

. If

β

(cid:105)
1−β (1 + ε)

(cid:104)

P (Gc

3) = P (Geom (1 − d) − 1 > c4 (k − j))
= P (Geom (1 − d) > 1 + c4 (k − j))
= 1 − dc4(k−j)
≥ 1 − ec3(k−j),

for some c3 > 0.

Combining these facts together, we revisit (17). We have

P

(cid:16)(cid:104)−→

B (η)
j,k

(cid:105)c(cid:17)

≥ P (G1) P (G2) P (G3)
= (1 − P (Gc

1)) (1 − P (Gc

(cid:16)

(cid:16)

≥

≥

1 − e−c1(k−j)(cid:17) (cid:16)
1 − e−c0(k−j)(cid:17)3

2)) (1 − P (Gc
1 − e−c2(k−j)(cid:17) (cid:16)

3))
1 − e−c3(k−j)(cid:17)

≥ 1 − e−c(k−j),

(18)

(19)

(20)

(21)

(22)

where c0 = max {c1, c2, c3} > 0, and subsequently c > 0. We conclude the existence of c > 0 for which
P

(cid:16)−→

(cid:17)

≤ e−c(k−j).

B (η)
j,k

(cid:17)

(cid:16)←−

B (η)
i,j

≤ e−c(j−i). The proof is very similar, so the details are omitted.

It remains to show that P

Recall that

←−
B (η)

i,j : a(bi, bj) ≥ η · BSj (bi+1) − BUj (bi) ,

where the random variables involved may be written as

a(bi, bj) =

j−i
(cid:88)

k=1

BSj (bi+1) = 1 +

(Geomk (1 − β) − 1) ,

j−i−1
(cid:88)

k=1

Bek (1 − d) ,

BUj (bi) = Geom (1 − d) − 1,

Thus, if k − j = j − i, we see that

• a(bi, bj) and a(bj, bk) follow the same distribution.

• BSj (bi+1) and FSj (bk−1) follow the same distribution.

• BUj (bi) and FUj (bk) follow the same distribution.

Therefore, the same concentration inequalities apply, and we conclude that for the same constant c in (22),
we have P

(cid:16)←−

(cid:17)

B (η)
i,j

≤ e−c(j−i).

B.4 Proof of Theorem 5.6

Theorem 5.6. Let 0 < η ≤ 1. Let β be the fraction of computational power in the system that is
adversarial and d be the probability of message loss. Let B(η)
s,s+t be the event that there are no η-Nakamoto
blocks in [s, s + t]. If

β
1−β < η · (1 − d), then there exists a constant c0 > 0 such that for any s, t ≥ 0,

(cid:16)

P

B(η)

s,s+t

(cid:17)

√

t

≤ e−c0

20

Figure 6: Partitioning [s, s + t] into sub-intervals

Proof. For any i ≥ 0, let τi denote the mining time of block bi. Partition the interval [s, s + t] into
√
√
t/3 groups of
t(cid:3). Further, let S(cid:96) represent

t each. Group these sub-intervals into threes, so that there are

. Thus, I(cid:96) = (cid:2)s + 3 ((cid:96) − 1)

t intervals of length

√

√

√

sub-intervals, namely I1, I2, · · ·, I√
the middle sub-interval of I(cid:96), so that S(cid:96) = [s + (3(cid:96) − 2)

t/3

t], as shown in Figure 6.

t, s + (3(cid:96) − 1)

t, s + 3(cid:96)
√

√

Consider the following desirable events.

G1 :

(cid:92)

√

j : τj ∈[s+

t,s+t−

√

t]

G2 :

√
t/3
(cid:91)

(cid:96)=1

H(cid:96), where H(cid:96) :

(cid:91)

j : τj ∈S(cid:96)

























(cid:92)

(cid:105)c

(cid:104)←−

B (η)
i,j

i<j
τi<τj −

√

(cid:92)

i<j
τi≥τj −

√

t

t

(cid:105)c

(cid:104)←−

B (η)
i,j













(cid:92)

(cid:92)





































(cid:92)

(cid:105)c

(cid:104)−→

B (η)
j,k

k>j
τk>τj +

√

t

(cid:92)

(cid:105)c

(cid:104)−→

B (η)
j,k

k>j
τk≤τj +

√

t

(cid:104)
B(η)

(cid:105)c

s,s+t

, nor
√

−→
B (η)
j,k
t, s + t −

) occur when bi and bk are separated in time by more than

First, observe that G1 ∩ G2 =⇒
←−
B (η)
i,j
in [s +
event occurs whenever i and k are within
This is exactly the event G2. Since ∪(cid:96)S(cid:96) ⊂ (cid:2)s +
Thus,

. This is because G1 ensures that no catch-up events (neither
t from bj, for any bj mined
t]. This means that the existence of a block bj in this interval for which no catch-up
t of τj is suﬃcient to ensure that bj is a Nakamoto block.
(cid:105)c
.

t(cid:3), it follows that G1 ∩ G2 =⇒

t, s + t −

B(η)

s,s+t

√

√

√

√

√

(cid:104)

(cid:16)

P

B(η)

s,s+t

(cid:17)

≤ P (Gc

1) + P (Gc

2) .

Next, we bound the probability of each term in the RHS separately.

Bounding P (Gc

1): Fix δ > 0. Consider the following events:

D1 : {# {i : τi ∈ [s, s + t]} > 2λht} ,

(cid:110)

∃ τi, τk ∈ [s, s + t] : (k − i) < (1 − δ) λh

D2 :

√

t, τk − τi >

√

(cid:111)

t

.

By the tail bound for Poisson random variables, we know that P (D1) ≤ e−c0t for some c0 > 0. We now
show that P (D2) ≤ e−c1
t for some c1 > 0. Let Ti,k := τk − τi be the random variable denoting the time
t. Notice that
between the i-th and k-th mining. Let M (t) = (1 − δ) λh
√

√

√

(cid:92)

(cid:110)

Ti,i+M (t) <

(cid:111)
t

=⇒ Dc
2.

For any honest arrival time τi, we have

i∈[s,s+t]

E (cid:2)Ti,i+M (t)

(cid:3) = E

i+M (t)
(cid:88)





j=i



(τj − τj−1)

 =

= (1 − δ)

√

t.

M (t)
λh

Applying the Chernoﬀ bound, we see that there exists c > 0 such that
√

√

(cid:16)

P

Ti,i+M (t) >

(cid:17)

t

≤ P

(cid:16)

Ti,i+M (t) > (1 − δ)

t + δ

√

(cid:17)
t

√

≤ e−c

t.

21

𝒔𝒔+𝒕𝒔+𝟐𝒕𝒔+𝟑𝒕𝒔+𝟒𝒕𝒔+𝟓𝒕𝒔+𝟔𝒕𝒔+𝒕……𝑰𝟏𝑰𝟐𝑰𝒕/𝟑𝑺𝟏𝑺𝟐𝑺𝒕/𝟑Thus, we get

P (D2) = P





(cid:91)

(cid:110)

Ti,i+M (t) >

√

t

(cid:111)





i : τi∈[s,s+t]




≤ P





(cid:91)

i : τi∈[s,s+t]

(cid:110)

Ti,i+M (t) >

√


(cid:111)
 ∩ Dc
1


 + P (D1)

t

Ti,i+M (t) >

(cid:33)

√

(cid:17)

t

+ e−c0t

(cid:32)2λht
(cid:88)

(cid:16)

P

≤

i=1
√
≤ e−c1

t,

for some c1 > 0. Thus, P (D2) ≤ e−c1

t. We may therefore bound P (Gc

1) as

√

2λht
(cid:88)

j=1

2λht
(cid:88)

j=1

2λht
(cid:88)

j−M (t)
(cid:88)

i=0

j−M (t)
(cid:88)

i=0

∞
(cid:88)















2

P

(cid:16)←−

B (η)
i,j

(cid:17)





 +



∞
(cid:88)

P

(cid:17)

(cid:16)−→

B (η)
j,k









k=j+M (t)





e−c(j−i)

 +



∞
(cid:88)









e−c(k−j)

k=j+M (t)





e−cm

P (Gc

1) ≤ P (D1 ∪ D2) + P (Gc

1 ∩ Dc
1 ∩ Dc
2)
≤ P (D1) + P (D2) + P (Gc
1 ∩ Dc
1 ∩ Dc
2)



≤ e−c0t + e−c1

t +

√

≤ e−c0t + e−c1

√

t +

√

t +

√

t +

√

t +

≤ e−c0t + e−c1

= e−c0t + e−c1

= e−c0t + e−c1
√

≤ e−c3

t,

j=1

m=M (t)

4λht
1 − e−c e−cM (t)
4λht
1 − e−c e−c(1−δ)λh

√

t

for some c3 > 0.

Bounding P (Gc
Lemma 5.3. Recall that

2): We have Gc

2 = (cid:84)

√
t/3
(cid:96)=1 Hc
(cid:96)

. Notice that Hc
(cid:96)

are mutually independent for distinct (cid:96) by

(cid:91)

H(cid:96) =

j, where R(cid:96)
R(cid:96)
j :

j : τj ∈S(cid:96)







(cid:92)

(cid:105)c

(cid:104)←−

B (η)
i,j

i<j
τi≥τj −

√

t







(cid:92)







(cid:92)

(cid:105)c

(cid:104)−→

B (η)
j,k

k>j
τk≤τj +

√

t







.

Let M(cid:96) be the number of honest blocks mined in S(cid:96), and N(cid:96) be the number of η-Nakamoto blocks mined
in S(cid:96). Since H(cid:96) is contained in the event M(cid:96) ≥ 1, we have for each (cid:96) ∈ (cid:8)1, 2, · · · ,

t/3(cid:9):

√

P (H(cid:96)) = P





(cid:91)



R(cid:96)
j



j : τj ∈S(cid:96)




= P





(cid:91)



(cid:92)

R(cid:96)
j





{M(cid:96) ≥ 1}



j : τj ∈S(cid:96)





≥ P

(cid:91)



N(η)
j



j:τj ∈S(cid:96)

≥

p2
0
2

,

22

(23)

where p0 is the lower bound on the probability that bj is an η-Nakamoto block, obtained in Theorem 5.4.
The inequality in (23) deserves some elaboration: Since M(cid:96) is a non-negative integer valued random
variable, we have from the second moment method that

P (N(cid:96) ≥ 1) = P (N(cid:96) > 0) ≥

(E [N(cid:96)])2
E [N 2
(cid:96) ]

≥

λh

√

(cid:0)p0λh
√

t(cid:1)2
t
t(cid:1)2 ≥
√
t + (cid:0)λh
√
t, and E (cid:2)N 2

hp2
λ2
0t
2λ2
ht

(cid:96)

≥

p2
0
2

,

(cid:3) ≤ E (cid:2)M 2

(cid:96)

(cid:3) = λh

√

t +

for suﬃciently large t. Here, we used the fact that E [N(cid:96)] = p0λh
(cid:0)λh

t(cid:1)2.

√

Thus, P (Hc

(cid:96)) ≤ 1 − p2

0

2 < 1, which yields



P (Gc

2) = P



Hc
(cid:96)

 =

√
t/3
(cid:92)

(cid:96)=1

√
t/3
(cid:89)

(cid:96)=1

P (Hc

(cid:96)) ≤

(cid:18)

1 −

p2
0
2

√

(cid:19)

t/3

≤ e−c4

√

t,

for some c4 > 0, since the H(cid:96)’s are mutually independent events. Therefore, we conclude that

(cid:16)

P

B(η)

s,s+t

(cid:17)

≤ P (Gc

1) + P (Gc

2) ≤ e−c3

√

t + e−c4

√

t ≤ e−c0

√

t,

for some c0 > 0, as desired.

B.5 Proof of Theorem 5.7

Theorem 5.7. Let 0 < η ≤ 1. Let β be the fraction of computational power in the system that is
adversarial and d be the probability of message loss. Let B(η)
s,s+t be the event that there are no η-Nakamoto
β
blocks in [s, s + t]. If
1−β < η · (1 − d), then for every ε > 0, there exist positive constants A, a such that
for any s, t > 0,

(cid:16)

P

B(η)

s,s+t

(cid:17)

≤ A exp (cid:0)−at1−ε(cid:1) .

Proof. Fix m > 1. Consider the following statement for m:

S[m] : ∀ θ ≥ m, ∃ aθ > 0, Aθ > 0 such that P

(cid:16)

B(η)

s,s+t

(cid:17)

≤ Aθ exp

(cid:16)

−aθt1/θ(cid:17)

In Theorem 5.6, we proved that S[2] is true. Next, we show the following:

S[m] =⇒ S

(cid:20) 2m − 1
m

(cid:21)

.

Assume S[m] is true. For any i ≥ 0, let τi denote the mining time of block bi. Partition the interval
[s, s + t] into t
2m−1 each. Group these sub-intervals into threes, so that there
are t

2m−1 intervals of length t

. Thus,

m−1

m

groups of sub-intervals, namely I1, I2, · · · , I
t

m−1
2m−1
3

m−1
2m−1 /3

I(cid:96) : = (cid:2)s + 3 ((cid:96) − 1) t
S(cid:96) : = (cid:2)s + (3(cid:96) − 2) t

m

m

2m−1 , s + 3(cid:96)t
m

2m−1 (cid:3) ,
2m−1 , s + (3(cid:96) − 1) t

m

2m−1 (cid:3) .

Consider the following desirable events.





G1 :

(cid:92)

(cid:104)

j : τj ∈

s+t

m

2m−1 ,s+t−t

m
2m−1

(cid:105)

G2 :

t

m−1
2m−1 /3
(cid:91)

(cid:96)=1

H(cid:96), where H(cid:96) :

(cid:91)

j : τj ∈S(cid:96)

Observe that G1 ∩ G2 =⇒

(cid:104)

B(η)

s,s+t

(cid:105)c

.

























(cid:92)

(cid:105)c

(cid:104)←−

B (η)
i,j

i<j
τi<τj −t

m
2m−1

(cid:92)

(cid:105)c

(cid:104)←−

B (η)
i,j

i<j
τi≥τj −t

m
2m−1















(cid:92)

(cid:92)











































(cid:92)

(cid:105)c

(cid:104)−→

B (η)
j,k

k>j
τk>τj +t

m
2m−1

(cid:92)

(cid:105)c

(cid:104)−→

B (η)
j,k

k>j
τk≤τj +t

m
2m−1

23

Bounding P (Gc
in Theorem 5.6. Fix δ > 0 and consider the following events:

1): We show that P (Gc

1) ≤ e−c3t

m

2m−1 for some c3 > 0. This is done following the steps

D1 : {# {i : τi ∈ [s, s + t]} > 2λht} ,
D2 : (cid:8)∃ τi, τk ∈ [s, s + t] : (k − i) < (1 − δ) λht

m

2m−1 , τk − τi > t

m

2m−1 (cid:9) .

By the tail bound for Poisson random variables, we know that P (D1) ≤ e−c0t for some c0 > 0. We now
show that P (D2) ≤ e−c1t
2m−1 for some c1 > 0. Let Ti,k := τk − τi be the random variable denoting the
time between the i-th and k-th mining. Let M (t) = (1 − δ) λht

2m−1 . Notice that

m

m

(cid:92)

(cid:110)

Ti,i+M (t) <

√

(cid:111)
t

=⇒ Dc
2.

i∈[s,s+t]

For any honest arrival time τi, we have

E (cid:2)Ti,i+M (t)

(cid:3) = E

i+M (t)
(cid:88)





j=i



(τj − τj−1)

 =

M (t)
λh

= (1 − δ) t

m
2m−1 .

Applying the Chernoﬀ bound, we see that there exists c > 0 such that

P (cid:0)Ti,i+M (t) > t

m

2m−1 (cid:1) ≤ P (cid:0)Ti,i+M (t) > (1 − δ) t

m

2m−1 + δt

m

2m−1 (cid:1) ≤ e−ct

m

2m−1 .

Thus, we get

P (D2) = P





(cid:91)

(cid:8)Ti,i+M (t) > t

m

2m−1 (cid:9)





i : τi∈[s,s+t]




≤ P





(cid:91)

(cid:8)Ti,i+M (t) > t

m

2m−1 (cid:9)


 ∩ Dc
1


 + P (D1)

i : τi∈[s,s+t]

P (cid:0)Ti,i+M (t) > t

m

2m−1 (cid:1)

(cid:33)

+ e−c0t

(cid:32)2λht
(cid:88)

≤

i=1

≤ e−c1t

m

2m−1 ,

for some c1 > 0. Thus, P (D2) ≤ e−c1t

2m−1 . We may therefore bound P (Gc

1) as

m

P (Gc

1) ≤ P (D1 ∪ D2) + P (Gc

1 ∩ Dc
≤ P (D1) + P (D2) + P (Gc

1 ∩ Dc
2)
1 ∩ Dc
1 ∩ Dc
2)


j−M (t)
(cid:88)

2λht
(cid:88)





≤ e−c0t + e−c1t

m

2m−1 +

≤ e−c0t + e−c1t

m

2m−1 +

≤ e−c0t + e−c1t

m

2m−1 +

P

(cid:17)

(cid:16)←−

B (η)
i,j





 +



∞
(cid:88)

P

(cid:17)

(cid:16)−→

B (η)
j,k









j=1

2λht
(cid:88)

j=1

2λht
(cid:88)

i=0

k=j+M (t)









j−M (t)
(cid:88)





e−c(j−i)

 +



∞
(cid:88)









e−c(k−j)

i=0

∞
(cid:88)



2





e−cm

k=j+M (t)

j=1

m=M (t)

m

2m−1 +

m

2m−1 +

4λht
1 − e−c e−cM (t)
4λht
1 − e−c e−c(1−δ)λht

m
2m−1

= e−c0t + e−c1t

= e−c0t + e−c1t

≤ e−c3t

m

2m−1 ,

for some c3 > 0.

24

Bounding P (Gc
by Lemma 5.3. Since S[m] is true, we have

2): We have Gc

2 = (cid:84)t

(cid:96)=1

m−1
2m−1 /3

Hc
(cid:96)

. Notice that Hc
(cid:96)

are mutually independent for distinct (cid:96)

(cid:18)

P (Hc

(cid:96)) ≤ P

B(η)

s+(3(cid:96)−2)t

m

2m−1 ,s+(3(cid:96)−1)t

m
2m−1

(cid:19)

(cid:18)

≤ Am exp

−am

(cid:0)t

m

2m−1 (cid:1) 1

m

(cid:19)

≤ Am exp

(cid:16)

−amt1/(2m−1)(cid:17)

Therefore, it follows that

P (Gc

2) = P


t



m−1
2m−1 /3
(cid:92)

(cid:96)=1



Hc
(cid:96)


 =

t

m−1
2m−1 /3
(cid:89)

(cid:96)=1

P (Hc

(cid:96)) ≤

(cid:16)

Am exp

(cid:16)

−amt1/(2m−1)(cid:17)(cid:17)t

m−1
2m−1 /3

≤ e−c4t

m

2m−1 ,

for some c4 > 0, since the H(cid:96)’s are mutually independent events. Therefore, we have

(cid:16)

P

B(η)

s,s+t

(cid:17)

≤ P (Gc

1) + P (Gc

2) ≤ e−c3t

m

2m−1 + e−c4t

m

2m−1 ≤ Am(cid:48)e−am(cid:48) t1/m(cid:48)

,

where m(cid:48) = m

2m−1

, and am(cid:48), Am(cid:48) > 0. In turn, this implies that S (cid:2) 2m−1

(cid:3) is true.

m

Finally, consider the recursion given by mk+1 = 2mk−1

, and the initial condition m1 = 2. We have
proved that S[m1] is true and that S [mk+1] is true whenever S[mk] is true. By induction, it follows that
and limk→∞ mk = 1, we conclude that for every ε > 0, there
S[mk] is true for all k ∈ N. Since mk = k+1
k
(cid:16)
≤ A exp (cid:0)−at1−ε(cid:1). This concludes the proof.
exist positive constants A, a such that P

B(η)

mk

(cid:17)

s,s+t

B.6 Proof of Theorem 5.8

Theorem 5.8. Let 0 < η < 1. Suppose the fraction β of computational power in the system that is
β
adversarial, and the probability d of message loss satisﬁes
1−β < η · (1 − d). Given s ≥ 0, let bJ be the
ﬁrst η-Nakamoto block mined after time s. There exist constants C, c > 0 such that for any honest user
h and for all k(cid:48) ≥ 1,

P ((h, J, η, k(cid:48)) -user-unheard-criterion fails) ≤ Ce−ck(cid:48)

Proof. By the union bound, we have

(cid:32) ∞
(cid:91)

(cid:26)

P

k=k(cid:48)

Unheardh

(cid:0)bk

J

(cid:1) >

(cid:18) 1 − η
2

(cid:19)

(cid:27)(cid:33)

k

≤

∞
(cid:88)

(cid:18)

P

k=k(cid:48)

Unheardh

(cid:0)bk

J

(cid:1) >

(cid:18) 1 − η
2

(cid:19)

(cid:19)

k

.

(24)

From remark 4.17, it follows that Unheardh

(cid:0)bk

(cid:1) ≤ Geom (1 − d). Thus, for all k ≥ 1, we have

(cid:18)

P

Unheardh

(cid:0)bk

J

(cid:1) >

J
(cid:18) 1 − η
2

(cid:19)

(cid:19)

k

≤ P

(cid:18)

Geom (1 − d) >

(cid:18) 1 − η
2

(cid:19)

(cid:19)

k

≤ C0 · e−ck,

for some positive constants C0 and c. Combining this with (24) yields

(cid:32) ∞
(cid:91)

(cid:26)

P

k=k(cid:48)

Unheardh

(cid:0)bk

J

(cid:1) >

(cid:18) 1 − η
2

(cid:19)

(cid:27)(cid:33)

k

≤

∞
(cid:88)

k=k(cid:48)

C0 · e−ck = C · e−ck(cid:48)

,

where C = C0

1−e−c is a positive constant. This concludes the proof.

B.7 Proof of Theorem 3.2

Before we prove our main result, we recall a useful lemma about Poisson random variables.

Lemma B.1. Let X be a Poisson random variable with mean µ. Then

(i) P (X ≥ 2µ) ≤ e− 4
3 µ.
2 µ(cid:1) ≤ e− 1
(ii) P (cid:0)X ≤ 1

8 µ.

Proof. The proof follows from Theorem 4.5 in [MU17].

25

We are now ready to state and prove our main result.

Theorem 3.2. Let β be the fraction of computational power in the system that is adversarial, and d be
β
the probability of message loss. If
1−β < (1 − d), then for every ε > 0, there exist positive constants a
and b such that for all τ ≥ 0 and for any honest transaction tx and any ﬁnite set of honest users H:

P (tx violates (τ, H)-security) ≤ exp (cid:0)−aτ 1−ε(cid:1) + |H| exp (−bτ ) .

β

1−β < η · (1 − d). Let k0 =

(cid:109)
, and ﬁx an honest subset of users H.
Proof. Let η be such that
The idea of the proof is as follows: if an η-Nakamoto block bJ is mined in the time interval (s, s + t1),
and k0 number of J-FS blocks are mined before time s + t1 + t2, and if all users h ∈ H satisfy the
(h, J, η, k0)-user-unheard-criterion, then Theorems 5.1 and 5.2 together imply that the η-Nakamoto block
bJ is included in Ch(t) for all t ≥ s + t1 + t2. Since tx must be included in either bJ or its ancestors, tx
satisﬁes (t1 + t2, H)-security.

(cid:108) 2η
1−η

Let bJ be the ﬁrst η-Nakamoto block mined after time s. Let TJ = τJ − s denote the time between
s and the mining time of the ﬁrst η-Nakamoto block. For the r-th honest block br and any time t, let
Nr(t) denote the number of r-FS blocks mined until time t. Consider the following events:

E1 : TJ > t1
2 : The (h, J, η, k0) -user-unheard-criterion is violated
Eh
{Nr (s + t1 + t2) < k0} .
E3 :

(cid:91)

r:τr∈[s,s+t1]

By the ﬁrst paragraph of the proof, the union bound gives

P (tx violates (t1 + t2, H)-security) ≤ P (E1) +

P (cid:0)Eh

2

(cid:1) + P (E3) .

(cid:88)

h∈H

(25)

From Theorem 5.7, we have that for any ε > 0, there exist positive constants A(cid:48), a(cid:48) such that P (E1) ≤

From Theorem 5.8, we have that there exist positive constants C, c(cid:48) such that P (cid:0)Eh

(cid:1) ≤ C exp (−c(cid:48)k0)

2

A(cid:48) (cid:0)exp −a(cid:48)t1−ε

(cid:1).

1

for all h ∈ H.

It remains to bound P (E3). Let λh denote the aggregate mining rate of the honest users. Let
. Let M be the number of honest miners in [s, s + t1], so that M has the Poisson distribution

(1−d)λh

t2 > 2k0
with mean λh (1 − d) t1. Therefore, we have from Lemma B.1 that
(cid:18) −4λht1
3

P (M > 2λht1) ≤ exp

(cid:19)

.

For r ≥ 1, consider the r-th honest miner br after time s and consider the r-FS sequence. Let Ur
denote the number of r-FS blocks mined in [τr, τr + t2]. Then, Ur has the Poisson probability distribution
with mean λh (1 − d) t2. Applying Lemma B.1, we get

P (Ur ≤ k0) ≤ P

(cid:18)

Ur ≤

1
2

(cid:19)

λh (1 − d) t2

≤ exp

(cid:18) −λh (1 − d) t2
8

(cid:19)

.

Therefore, we have

P (E3) = P (E3 ∩ {M > 2λht1}) + P (E3 ∩ {M < 2λht1})
2λht1(cid:88)

≤ P (N > 2λht1) +

P (Ur ≤ k0)

≤ exp

(cid:19)

(cid:18) −4λht1
3

r=1

+ 2λht1 · exp

(cid:18) −λh (1 − d) t2
8

(cid:19)

.

26

Therefore, combining (25) and the bounds on P (E1), P (cid:0)Eh

2

(cid:1), and P (E3) yields

P (tx violates (t1 + t2, H)-security) ≤ P (E1) +

P (cid:0)Eh

2

(cid:1) + P (E3)

(cid:88)

h∈H

≤ A(cid:48) exp (cid:0)−a(cid:48)t1−ε

1

(cid:1) +

(cid:88)

h∈H

C exp (−ct2) + exp

(cid:19)

(cid:18) −4λht1
3

+ 2λht1 exp

(cid:18) −λh (1−d) t2
8

(cid:19)

≤ A exp (cid:0)−at1−ε

1

(cid:1) + B (|H| + t1) exp (−bt2)

for some positive constants A, a, B, and b. The following lemma therefore completes the proof of Theorem
3.2.

Lemma B.2. Let ε > 0. Suppose there exist positive constants A, a, B, b such that for all t1 > 0, t2 > 0
and for any honest transaction tx and any ﬁnite set of honest users H:

P (tx violates (t1 + t2, H)-security) ≤ A exp (cid:0)−at1−ε

1

(cid:1) + B (|H| + t1) exp (−bt2) .

(26)

Then there exist positive constants a(cid:48)(cid:48)(cid:48) and b(cid:48)(cid:48)(cid:48) such that for all τ ≥ 0 and for any honest transaction tx
and any ﬁnite set of honest users H:

P (tx violates (τ, H)-security) ≤ exp (cid:0)−a(cid:48)(cid:48)(cid:48)τ 1−ε(cid:1) + |H| exp (−b(cid:48)(cid:48)(cid:48)τ ) .

(27)

Proof. The lefthand side of (26) is zero if H = ∅ so assume without loss of generality that |H| ≥ 1. Given
τ ≥ 0, let t1 = t2 = τ /2. Then (26) yields

P (tx violates (τ, H)-security) ≤ A exp (cid:0)−(a/21−(cid:15))τ 1−ε(cid:1) + 2B (|H| + τ ) exp (−(b/2)τ ) .

(28)

Let a(cid:48) and b(cid:48) be positive constants such that a(cid:48) < a/21−(cid:15) and b(cid:48) < b/2. Let ¯τ be so large that
A exp (cid:0)−[(a/21−(cid:15)) − a(cid:48)]τ 1−ε(cid:1) ≤ 1 and 2B exp (−[(b/2) − b(cid:48)]τ ) ≤ 1 for all τ ≥ ¯τ . Then for τ ≥ ¯τ

P (tx violates (τ, H)-security) ≤ exp (cid:0)−a(cid:48)τ 1−ε(cid:1) + (|H| + τ ) exp (−b(cid:48)τ )

(29)

Let b(cid:48)(cid:48) be a positive constant with b(cid:48)(cid:48) < b. Then, using the assumption |H| ≥ 1,

(|H| + τ ) exp (−b(cid:48)τ ) = |H| exp (−b(cid:48)(cid:48)τ ) + τ exp (−b(cid:48)τ ) − |H|(exp (−b(cid:48)(cid:48)τ ) − exp (−b(cid:48)τ ))

≤ |H| exp (−b(cid:48)(cid:48)τ ) + τ exp (−b(cid:48)τ ) − (exp (−b(cid:48)(cid:48)τ ) − exp (−b(cid:48)τ ))
= |H| exp (−b(cid:48)(cid:48)τ ) − (exp (−b(cid:48)(cid:48)τ ) − (1 + τ ) exp (−b(cid:48)τ ))
≤ |H| exp (−b(cid:48)(cid:48)τ )

for all τ suﬃciently large

Combining (29) and (30) implies that there exists ¯τ (cid:48) such that

P (tx violates (τ, H)-security) ≤ exp (cid:0)−a(cid:48)τ 1−ε(cid:1) + τ exp (−b(cid:48)(cid:48)τ )

for τ ≥ ¯τ (cid:48)

Select positive constants a(cid:48)(cid:48)(cid:48) and b(cid:48)(cid:48)(cid:48) such that a(cid:48)(cid:48)(cid:48) < a(cid:48) and b(cid:48)(cid:48)(cid:48) < b(cid:48)(cid:48) and

1 ≤ exp (cid:0)−a(cid:48)(cid:48)(cid:48)τ 1−ε(cid:1) + τ exp (−b(cid:48)(cid:48)(cid:48)τ )

for 0 ≤ τ ≤ ¯τ (cid:48)

(30)

(31)

(32)

Combining (31) and (32) yields (27) for all τ ≥ 0.

This concludes the proof of Theorem 3.2.

27

