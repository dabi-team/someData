Reliable Distributed Computing for Metaverse: A
Hierarchical Game-Theoretic Approach

Yuna Jiang, Jiawen Kang, Dusit Niyato, Fellow, IEEE, Xiaohu Ge, Senior Member, IEEE,
Zehui Xiong, Member, IEEE, Chunyan Miao, Senior Member, IEEE, Xuemin(Sherman) Shen, Fellow, IEEE

1

2
2
0
2

r
p
A
5
2

]
I

N
.
s
c
[

2
v
8
4
5
0
1
.
1
1
1
2
:
v
i
X
r
a

Abstract—The metaverse is regarded as a new wave of tech-
nological transformation that provides a virtual space for people
to interact through digital avatars. To achieve immersive user
experiences in the metaverse, real-time rendering is the key tech-
nology. However, computing intensive tasks of real-time rendering
from metaverse service providers cannot be processed efﬁciently
on a single resource-limited mobile device. Alternatively, such
mobile devices can ofﬂoad the metaverse rendering tasks to other
mobile devices by adopting the collaborative computing paradigm
based on Coded Distributed Computing (CDC). Therefore, this
paper introduces a hierarchical game-theoretic CDC framework
for the metaverse services, especially for vehicular metaverse.
In the framework, idle resources from vehicles, acting as CDC
workers, are aggregated to handle intensive computation tasks in
the vehicular metaverse. Speciﬁcally, in the upper layer, a miner
coalition formation game is formulated based on a reputation
metric to select reliable workers. To guarantee the reliable
management of reputation values, the reputation values calcu-
lated based on the subjective logical model are maintained in a
blockchain database. In the lower layer, a Stackelberg game based
incentive mechanism is considered to attract reliable workers
selected in the upper layer to participate in rendering tasks.
The simulation results illustrate that the proposed framework
is resistant to malicious workers. Compared with the best-effort
worker selection scheme, the proposed scheme can improve the
utility of metaverse service provider and average proﬁt of CDC
workers.

Index Terms—Metaverse, Reliable coded distributed comput-
ing, Blockchain, Coalition game, Incentive mechanism, Stackel-
berg game.

I. INTRODUCTION

A. Background and Motivations

The blossom of emerging technologies, such as real-time
rendering technologies, digital twin, artiﬁcial intelligence, 6G
communications and blockchain, has promoted the prolifer-
ation of the metaverse [1]. The metaverse was ﬁrst created

Yuna Jiang and Xiaohu Ge (Corresponding author) are with School of
Electronic Information and Communications, Huazhong University of Science
and Technology, Wuhan 430074, Hubei, China and Shenzhen Huazhong
University of Science and Technology Research Institute, Shenzhen, 518063,
Guangdong, China (e-mail: yunajiang@hust.edu.cn, xhge@mail.hust.edu.cn).
Jiawen Kang is with the School of Automation, Guangdong Uni-
versity of Technology, Guangzhou, 510006, Guangdong, China (e-mail:
kavinkang@gdut.edu.cn).

Dusit Niyato and Chunyan Miao are with the School of Computer Science
and Engineering, Nanyang Technological University, Singapore, 639798 (e-
mail: DNIYATO@ntu.edu.sg, ascymiao@ntu.edu.sg).

Zehui Xiong is with the Pillar of Information Systems Technology and
Design, Singapore University of Technology and Design, Singapore 487372
(e-mail: zehui xiong@sutd.edu.sg).

Xuemin (Sherman) Shen is with the Department of Electrical and Computer
Engineering, University of Waterloo, Waterloo, ON N2L 3G1, Canada (e-mail:
sshen@uwaterloo.ca).

in the science ﬁction named Snow Crash [2], which is a
stereoscopic virtual space parallel to the physical world. Then,
the successful broadcast of the famous ﬁlm Ready Player One
raises the public’s attention in the metaverse again [3]. To
provide immersive experiences for people in the metaverse,
real-time rendering technologies (e.g., extended reality and
spatial sounding rendering) are considered to be the main
interaction interfaces [4]. For the medium graphic and audio
rendering services in the metaverse, the providers may not
have dedicated computing resources. Besides, the intensive
computation from medium metaverse services may be un-
bearable for resource-limited mobile devices [1]. As such, the
distributed collaborative computing has been adopted to solve
computing-intensive tasks in the metaverse [5].

For the distributed computing of metaverse services, multi-
ple mobile devices work collaboratively to complete a large-
scale rendering task. One of the main challenges of the dis-
tributed computing system for metaverse services is the strag-
gler effects. The stragglers refer to the mobile devices whose
computing speed is observably slower than average because
of their limited computing resources or poor communication
link, thus causing long latency and bad immersive experience
for the metaverse, especially the metaverse interactive services
(e.g., online games Minecraft and Roblox). Coded Distributed
Computing (CDC) is a promising distributed computing so-
lution to alleviate the straggler effects and guarantee fault-
tolerance by aggregating the extra computing resources from
mobile devices [6]. CDC introduces computing redundancy
to the metaverse by code techniques, and metaverse service
providers (MSPs) only need to collect the computing results
of graphic and voice rendering tasks from a subset of workers.
Thus CDC can signiﬁcantly reduce the computation latency
and improve the data processing reliability, equivalently al-
leviate the straggler effects. However, there are two critical
problems that need to be addressed: i) The mobile devices
may be unwilling to participate in metaverse services without
a reasonable incentive; ii) Some mobile devices may even
misbehave to damage MSPs’ beneﬁts, thus resulting in bad
user experience. How to select reliable mobile devices and
incentivize them to participate in metaverse services are still
challenging.

B. CDC Use Case in Vehicular Metaverse

The vehicular metaverse integrates extended reality tech-
nologies and real-time motion data seamlessly to blend virtual
and real sapce for drivers and passengers in vehicles, which

 
 
 
 
 
 
2

management and to maintain worker participation records
in the vehicular metaverse. As blockchain can manage the
interactions among entities in the metaverse by a decentralized,
tamper-proof and transparent manner [7]. We summarize the
contributions of this paper as follows.

1) We propose a novel reliable distributed collaborative
computing framework for the metaverse based on CDC
and blockchain technologies, which can support
the
immersive user experiences in the metaverse. Especially,
we consider the use case in the vehicular metaverse.
2) We adopt the reputation values to evaluate the relia-
bility of workers. The miners who form coalitions are
responsible for the calculation of workers’ reputation
values, and the reputation metric is the abstraction and
aggregation of multiple factors that affect the quality of
coalitions.

3) We propose a hierarchical game-theoretic approach to
investigate the reliable and sustainable CDC scheme in
the vehicular metaverse. In the upper layer, the coali-
tion game is innovatively combined with the reputation
metric to choose reliable CDC workers for MSPs. In
the lower layer, the Stackelberg game is formulated to
stimulate the reliable CDC workers to participate in
metaverse services.

4) Numerical results indicate that the proposed hierarchi-
cal game-theoretic scheme is resistant to the malicious
workers. The MSP can obtain higher utility and CDC
workers can obtain higher proﬁts with the proposed
scheme than those of the best-effort worker selection
scheme.

The strcture of this paper is shown as follows. Related
works about CDC and metaverse services are introduced in
Section II. The system model and problem formulations of
the proposed reliable CDC scheme for the vehicular metaverse
are presented in Section III. The worker selection process
based on the reputation model and coalition game is presented
in Section IV. Stackelberg game-based incentive mechanism
is introduced in Section V. Section VI shows performance
evaluation of reliable worker selection and CDC incentive
mechanism. Section VII gives the conclusion of this paper.

II. RELATED WORKS

A. Coded Distributed Computing

The research on CDC mainly focuses on mitigating the
straggler effects and minimizing the communication cost.
Coding theories are the popular methods to solve above issues.
In [8], the authors explore the usage of coding theory to alle-
viate the straggler effect in matrix multiplication and reduce
communication bottlenecks in data shufﬂing. The theoretical
analysis proves that the coded schemes can obtain signiﬁcant
gains compared with uncoded schemes. In [9], the authors
study the distributed matrix multiplication problem in hetero-
geneous environments, where a coding framework is designed
to accelerate distributed matrix multiplication with straggling
devices. In [10], the authors consider that the straggler phe-
nomenon of wireless distributed computing networks is caused
by local computation and wireless transmission. Besides, the

Fig. 1: An example of CDC in vehicular metaverse.

is an emerging in-vehicle entertainment segment for the au-
tomotive market. WayRay’s Holograktor is striving to create
the metaverse vehicle, where passengers and drivers are able to
interact with a different reality during the vehicle ride. Figure 1
shows an example of CDC in the vehicular metaverse. With the
vehicular metaverse services, passengers can entertain them-
selves with hybrid real and virtual environments, which may
cause intensive computation for the resource-limited vehicles
due to the graphic or audio rendering. In such condition,
those vehicles can act as MSPs to cooperate with nearby
vehicles that act as workers. However, this vehicular metaverse
is vulnerable to stragglers due to not only the misbehavior, but
also the highly mobile environments which can make some
workers unable to complete computation tasks and return the
results successfully. Based on the CDC technology, MSPs can
decompose and assign the rendering tasks to workers, and
MSPs only need to collect a subset of workers’ computing
results, which is beneﬁcial for the immersive experience of
users in vehicles.

C. Contributions

In this paper, we mainly investigate the use case of CDC in
vehicular metaverse, but the proposed scheme is not limited
to the vehicular sector. We ﬁrst adopt reputation metric to
assess the reliability of workers in CDC to support vehicular
metaverse services, and a stable coalition of reliable workers
is formed based on reputation values. Moreover, we apply a
hierarchical decision making structure composed of coalition
formation and Stackelberg game to design an efﬁcient incen-
tive mechanism for reliable CDC in the vehicular metaverse.
Blockchain is used to achieve distributed secure reputation

Vehicular Metaverse ServicesIn-Vehicle EntertainmentMSPWorker 2Worker 3Worker 4Worker 1Coded Distributed ComputingVehicular Metaverse ServicesIn-Vehicle EntertainmentMSPWorker 2Worker 3Worker 4Worker 1Coded Distributed Computingstraggling factor for each device is derived. In [11], a coded
computing framework for federated learning is proposed,
which uses structured coding redundancy to alleviate the
straggler effects and speed up the training procedure. In [12],
the authors design the incentive mechanism for the CDC tasks
by formulating a game-theoretic approach. In [13], the authors
design platforms’ incentive mechanisms to encourage workers’
participation in the coded machine learning. However, the
existing works ignore the reliability of CDC workers when
study CDC, which might negatively impact the performance
of CDC. Besides, reliable CDC incentive mechanism for the
metaverse has not been studied.

B. Metaverse Services

Metaverse-related research is still

in its infancy. There
are some works studying the metaverse services in graphic
or audio rendering, extended reality technologies etc. In
[14], the authors propose a vision of the metaverse native
communications that includes encrypted address-based access
model and blockchain. In order to realize the audio/visual and
virtual/reality congruence in metaverse services, the authors in
[15] design the 6-degree-of-freedom interactive audio engines
based on objects. In [16], the authors give a comprehensive
survey on computational arts that blend virtual and physical
environment in the metaverse. The authors in [17] design
a brain-to-speech scheme for smart communication in the
real world, which is also presented as a potential application
in the metaverse. The authors in [18] propose an operating
system for the metaverse based on extended reality, which
integrates hardware, computer vision and extended reality
speciﬁc network. In [19], the authors propose a blockchain-
based framework for the metaverse. The sharding scheme is
used to improve the scalability of blockchain networks. The
authors in [20] give a survey about the Artiﬁcal Intelligence
(AI) for the metaverse, and they especially explore AI-based
methods that have potentials for the metaverse. The above
works have not considered the metaverse services in vehicular
networks. As metaverse might have a profound impact in the
automotive ﬁeld, a great deal of research needs to be done on
the vehicular metaverse, including the distributed computing
that is meaningful for the user immersive experience in the
vehicular metaverse.

III. SYSTEM MODEL AND PROBLEM
FORMULATIONS

A. System Model

The vehicular metaverse mainly includes the virtual world,
the physical world, and the interaction layer that connects the
virtual and physical world. The immersive user experience is
a signiﬁcant part in the interaction layer [3]. To achieve the
immersive user experiences, key technologies (e.g., graphic
and spatial sound rendering) are adopted, which can easily
lead to intensive matrix computation tasks to be processed
by onboard units or devices in vehicles. Those vehicles
can choose to execute rendering tasks by collaborating with
other vehicles within a limited communication distance. In
the metaverse, vehicles that distribute the large-scale matrix

3

computation tasks (e.g., projection and shadow mapping in
graphic rendering [21]) are called MSPs. The vehicles that
execute the computation tasks of metaverse services are called
workers. In order to realize the reliable distributed computing,
the MSP ﬁrst selects workers based on reputation values, and
then allocates the rendering tasks to workers based on the CDC
technology. Blockchain is used to manage reputation values
and to record worker participation, realizing the decentralized
CDC in the vehicular metaverse. RodeSide Units (RSUs)
with sufﬁcient computation and storage resources in vehicular
networks act as miners to perform consensus algorithm. In ad-
dition, miners are stimulated to join the reputation calculation
since they are more trustable entities than vehicles. Miners
that have contributions to the reliable worker selection will
be rewarded by blockchain (e.g., receiving some tokens or
obtaining resource rewards).

Figure 2 shows the whole CDC process in the vehicular
metaverse including the worker selection phase and CDC
rendering task execution phase. In the worker selection phase,
the MSPs select workers based on workers’ reputation values
recorded on blockchain. In the CDC task execution phase,
MSPs distribute the rendering tasks to the selected workers.
The workers process the computation tasks and transmit the
ﬁnal results to MSPs. Then MSPs update workers’ reputation
values and record the updated values on blockchain. Besides,
all
the resource interactions (e.g, workers contribute their
computing resource to MSPs) among MSPs and workers are
recorded on blockchain. The details about the CDC process
are introduced as follows.

th

Step 1: The MSP sends a transaction to blockchain to recruit
workers that are willing to serve for the rendering tasks in the
vehicular metaverse. The transaction contains the requirements
of the MSP, such as the reputation threshold T com
of workers.
Step 2: The workers that are willing to help the MSP with
metaverse services send transactions to respond to the MSP.
The worker set is denoted as W = {1, 2, . . . , w, . . . , W }.
In the metaverse, users have many perception dimensions in
immersive experience due to computations of graphic render-
ing and sound generation. Such perception can be qualitative
and the subjective logical model is suitable. In order to select
trustable workers, the blockchain needs to obtain the compos-
itive reputation opinions of workers based on the subjective
logical model [22]. Miners are stimulated to compute workers’
compositive reputation opinions. The miners that are selected
by blockchain based on their contribution to workers’ repu-
tation calculation will be rewarded by blockchain. The set of
miners is denoted as M = {1, 2, . . . , m, . . . , M }. Miners have
no idea about the reliability of workers before they compute
the reputation values of workers. Each miner randomly selects
several workers and computes workers’ compositive reputation
opinions. The number of workers selected by miner m is
denoted as |Wm|. The workers whose compositive reputation
opinions are lower than T com
are discarded by miners, and
T com
is set based on MSPs’ service requirements [22]. We
th
assume that the number of discarded workers is much smaller
than those of workers that are not abandoned by miners. The
set of workers selected by miner m is denoted as Wm =
(cid:9), where Wm,w is the
(cid:8)Wm,1, Wm,2, . . . , Wm,w, . . . Wm,|Wm|

th

4

Fig. 2: System model: Worker selection and CDC rendering task execution in vehicular metaverse.

identity number of the w-th worker selected by miner m.

Step 3: In order to increase a likelihood to be rewarded by
blockchain, miners that obtain workers’ compositive reputation
opinions form coalitions. The coalition members in each
coalition contain miners and their corresponding worker sets.
When the coalition is selected by blockchain, the compositive
reputation values of workers in the selected coalition will be
recorded on blockchain by miners. Another beneﬁt for the
coalition formation is that multiple reliable workers evaluated
by their reputation can offer larger computational resources to
the MSP.

Step 4: The blockchain returns selected workers’ infor-
including the location information and reputation

mation,
opinions, to the MSP.

Step 5: The MSP distributes the rendering tasks to the
selected workers based on Stackelberg game. In the game,
the MSP acts as the leader to determine the reward strategy,
and workers act as followers to adjust computing speed
strategy. Speciﬁcally, we consider that MSP Pi needs to
render 2D images in RGB color into the needed Field of
Views (FoV). The number of pixels is denoted as np, and
the resolution of the required FoV is np × np. With the
CDC technology, the MSP allocates the rendering task to
workers. The Maximum Distance Separable (MDS) code is
adopted to alleviate the straggler effects in the distributed
computing [6]. The rendering task of MSP Pi is expressed
as yi = Aixi, and Ai ∈ R(3×2×np)×np , where “3” is the
number of colors in RGB model, which contains red, green
and blue colors, “2” is the number of viewpoints [23]. MSP

K

Pi ﬁrst divides the rendering matrix Ai into K equal-sized
submatrices in R (3×2×np )
×np . Then, based on (N, K) MDS
code, the MSP gets N encoded submatrices with the same size
(3×2×np)
× np. Each submatrix is allocated to a worker. MSP
K
Pi can reconstruct the ﬁnal rendering result when receiving
the results from any K(K < N ) workers, which can mitigate
straggler effects.

Step 6: The resource interactions between the MSP and
workers are recorded on blockchain. Then, the workers can
receive the deserved reward from the MSP.

Step 7: After ﬁnishing the CDC rendering tasks,
the
MSP updates the local reputation opinions of workers on
blockchain.

To enable immersive vehicular metaverse experience and
realize the CDC rendering task execution efﬁciently, the MSP
can select workers with the help of blockchain in advance.
When the MSP has distributed computing requirements, the
MSP can distribute the rendering task to workers in time.

B. Transmission Model

We consider that the CDC rendering task execution mainly
contains computing the tasks and transmitting the computing
results to the MSP. Here we establish the transmission model
that vehicle workers transmit the rendering task computation
results to the MSP, where we adopt the orthogonal frequency
division multiple access (OFDMA) scheme. MSP Pi uses
a set of resource blocks for the wireless transmission, and
there is no interference between workers, this assumption is
typically to simply the analysis, but the model can still be

Blockchain layer①Recruit workers② Miners compute reputation opinions of workersVehicles (Worker)RSU(Miner)③ Worker coalition formation Selected coalition ...Worker 2Worker n...MSPAny    results 2yWorker Selection Phase(Coalition game)CDC Rendering Task Execution Phase(Stackelberg game)LeaderFollowers⑤ Stackelberg game  ⑥ Resource interactions ⑦Update reputation opinionsWorker 1StragglerVirtual WorldPhysical WorldInteractionImmersive user experienceGraphic renderingLarge-scale matrix computationVehicular MetaverseMSPHash  ④Information of Selected workersMSP Coalition 2 Coalition 1 Coalition 3BlockHeaderBlock_1Transaction Data(Resource /Reputation Interactions)BlockHeaderBlock_1Transaction Data(Resource /Reputation Interactions)BlockHeaderBlock_2Transaction Data(Resource /Reputation Interactions)BlockHeaderBlock_3Transaction Data(Resource /Reputation Interactions)BlockHeaderBlock_3Transaction Data(Resource /Reputation Interactions)HashyAx=1A2ANA11y=Ax22y=AxNNy=AxKNyBlockchain layer①Recruit workers② Miners compute reputation opinions of workersVehicles (Worker)RSU(Miner)③ Worker coalition formation Selected coalition ...Worker 2Worker n...MSPAny    results 2yWorker Selection Phase(Coalition game)CDC Rendering Task Execution Phase(Stackelberg game)LeaderFollowers⑤ Stackelberg game  ⑥ Resource interactions ⑦Update reputation opinionsWorker 1StragglerVirtual WorldPhysical WorldInteractionImmersive user experienceGraphic renderingLarge-scale matrix computationVehicular MetaverseMSPHash  ④Information of Selected workersMSP Coalition 2 Coalition 1 Coalition 3BlockHeaderBlock_1Transaction Data(Resource /Reputation Interactions)BlockHeaderBlock_2Transaction Data(Resource /Reputation Interactions)BlockHeaderBlock_3Transaction Data(Resource /Reputation Interactions)HashyAx=1A2ANA11y=Ax22y=AxNNy=AxKNystraightforwardly extended with interference. We also consider
the effects of mobility on channel gain between the MSP Pi
and workers. To estimate an accurate mobile channel gain,
the channel state information of mobile link is broadcast to
workers with a period of Tc. The channel states of the wireless
mobile links in the previous and current time interval are
denoted as g and ˆg, respectively. The relationship between g
and ˆg is g = (cid:36)ˆg + κ , where (cid:36) = J0 (2πfDTc) (0 < (cid:36) < 1)
is the channel correlation coefﬁcient. J0 (•) is the zero-order
Bessel function. fD is the maximum Doppler frequency and
(cid:14)3 × 108. |∆v| is the relative
is expressed as fD = |∆v| fc
vehicle speed between the MSP and workers. fc is the carrier
frequency at 5.9GHz. κ is the channel discrepancy coefﬁcient
that follows CN (cid:0)0, 1 − (cid:36)2(cid:1) [24], [25]. Then the channel gain
model between MSP Pi and worker w is expressed as

Hiw = Giw

(cid:16)

((cid:36)iw ˆgiw)2 + |κiw|2(cid:17)

,

(1)

where Giw is the large-scale fading effect between MSP Pi
and worker w. The signal-to-noise between MSP Pi and
worker w is expressed as

ηiw =

pwHiw
˜σ2

,

(2)

where pw is the transmitting power of worker w, ˜σ2 is the
variance of the Gaussian noise. The data rate between worker
w and MSP Pi is expressed as

ciw = Blog2 (1 + ηiw) .

The communication delay of worker w is expressed as

T com−u
w

=

sw
ciw

,

(3)

(4)

where sw is the packet size of computation results transmitted
by worker w.

C. Computation Model

The computation time of each worker follows a 2-parameter
shifted exponential distribution [8], [9]. Then, the cumulative
distribution function of the time T cmp
that worker w ﬁnishes
the rendering task is expressed as

w

Pr (T cmp

w ≤ t) = 1 − e−µw( t

l −aw), ∀t ≥ awl,

(5)

where µw is the average computation speed of worker w, aw
is the start-up time to begin the rendering task computation,
l is the amount of rendering task allocated to each worker,
and l = 3 × 2 × np/K. The probability density function of
the above distribution is

f (t) =

µw
l

e−µw( t

l −aw).

(6)

The average computation time for worker w is expressed as

E (T cmp

w ) =

=

(cid:90) +∞

t

0
leawµw
µw

µw
l

.

e−µw( t

l −aw)dt,

(7)

The average rendering task execution time of worker w is
expressed as

E (Tw) = E (cid:0)T com−u

w

(cid:1) + E (T cmp

w ) .

(8)

D. Hierarchical Game-theoretic CDC Framework for Vehicu-
lar Metaverse

5

Fig. 3: Hierarchical game-theoretic CDC framework for
blockchain assisted vehicular metaverse.

The outline of the proposed hierarchical game is shown
in Fig. 3. Blockchain is utilized to achieve the decentralized
management for CDC in the vehicular metaverse. In order to
realize reliable and sustainable CDC in the vehicular meta-
verse, we adopt a hierarchical game-theoretic approach based
on coalition formation and Stackelberg game. The coalition-
Stackelberg game makes the proposed framework suitable for
reliable CDC in the vehicular metaverse. The description of
the hierarchical game-theoretic approach is as follows:

1) Upper layer: In the upper layer, the coalition formation
game is adopted to investigate the cooperative interactions
among miners that contribute to the computation of workers’
compositive reputation values. The miners compute workers’
compositive reputation values based on reputation opinions
stored on blockchain. Then the miners form coalitions by
maximizing the coalition utility that includes workers’ com-
positive reputation values and cost. In order to be selected by
blockchain, each miner prefers to form coalitions with other
miners to obtain higher coalition utility. Besides, considering
the coalition formation cost, the grand coalition may not be
stable. This is due to the fact that a high communication
overhead discourage all the miners to participate and act as
a coalition. The coalition with the highest coalition utility will
be selected by blockchain, and the workers in the selected
coalition will execute CDC rendering tasks.

2) Lower layer: In the lower layer, the Stackelberg game is
used to incentivize workers selected in the upper layer to al-
locate more computing resource to the MSP’s CDC rendering
tasks. In the Stackelberg game, the MSP acts as a leader to
adjust the reward to workers who ﬁnish the computing tasks
in time, the workers act as followers to adjust the average
computing speed. The strategies of workers also affect their
local reputation values updated by the MSP.

3) Interactions between upper and lower layers: In the upper
layer, the miners who compute workers’ compositive repu-
tation values form coalitions. The coalition with the highest
coalition utility will be selected by blockchain, and the workers
in the selected coalition will execute the CDC rendering tasks

Decentralized management for CDC in the metaverse BlockchainCoded Distributed Computing in the vehicular metaverseAlleviate stragglers effectProvide fault toleranceIncentive mechanismReliable CDCReliableworkers②Coalition gameSelect reliable workers ① Reputation value③Stackelberg gameMaximize utilities of MSPs and workers③Stackelberg gameMaximize utilities of MSPs and workersDecentralized management for CDC in the metaverse BlockchainCoded Distributed Computing in the vehicular metaverseAlleviate stragglers effectProvide fault toleranceIncentive mechanismReliable CDCReliableworkers②Coalition gameSelect reliable workers ① Reputation value③Stackelberg gameMaximize utilities of MSPs and workerspublished by the MSP. Speciﬁcally, without forming coalitions,
the MSP may not be able to identify the workers that are
reliable, which may degrade the utility of the MSP. In order
to motivate the selected workers to contribute their computing
resource to the CDC rendering tasks and guarantee the highest
utility of the MSP, the Stackelberg game is used in the lower
layer. The MSP decides reward strategy, and the selected
coalitions of workers, which are formed in the upper layer,
contribute their computing resource to maximize their utilities.
Besides, in order to increase probabilities to be selected in the
next round of coalition formation game, the workers should
also consider their local reputation values when adjusting the
computing resource strategy. The hierarchical game theoretic
approach ensures that the CDC rendering tasks can be exe-
cuted by reliable workers and maximizing the MSP’s utility.
Meanwhile, the selected reliable workers are incentivized to
contribute their computing resources to the CDC rendering
tasks from vehicular metaverse services.

IV. RELIABLE WORKER SELECTION FOR
VEHICULAR METAVERSE

to model

In the worker selection phase, we mainly focus on two
problems. The ﬁrst one is how to obtain the overall reputation
opinions from the interaction histories between MSPs and
workers. Subjective logic is a popular tool
the
reliability of entities in the vehicular metaverse, as it quantiﬁes
belief, disbelief and uncertainty [26]. Based on the subjective
logic model, both direct and indirect reputations from other
MSPs are combined to derive the compositive reputation opin-
ions of workers. The second problem is how to select reliable
workers based on the reputation opinions of workers in a
distributed way. With the subjective logic model, the reputation
calculation of workers may be not easy for the MSPs, as the
MSPs need to search all the local and recommended reputation
opinions of workers on blockchain, and then compute the
workers’ compositive reputation opinions. We motivate miners
in blockchain to calculate workers’ reputation opinions. Each
miner in M selects several workers from W to compute the
reputation opinions. The miners compute the selected workers’
compositive reputation opinions based on the stored direct
reputation opinions and subjective logic model. The workers
whose compositive reputation opinions are lower than the
reputation threshold T com
are discarded by miners. Then,
miners form coalitions to increase their chance to be rewarded
by blockchain. The blockchain selects the miner coalition with
the highest coalition utility. In this section, the subjective logic
model is introduced, then the miner coalition formation game
is formulated.

th

A. Subjective Logic Model-Based Reputation Calculation

1) Local opinions for subjective logic: The MSPs’ direct
reputation opinions to all workers are recorded on blockchain.
MSP Pi sends a transaction to blockchain to recruit workers.
the workers that are willing to help MSP Pi send
Then,
transactions to respond to MSP Pi. Miners compute the work-
ers’ compositive reputation opinions by combining the direct
reputation opinions updated by MSP Pi, and those updated

6

by other MSPs on blockchain. MSP Pi’s direct reputation
opinions are considered to be local reputation opinions, and
other MSPs’ direct reputation opinions are considered to be
recommended reputation opinions.
The local opinion of MSP Pi

jective logic model
(cid:8)blocal
i→w, ulocal
i→w
represents disbelief and ulocal
blocal
i→w, dlocal
Based on the subjective logic models in [27], blocal
ulocal
i→w are represented as follows:

to worker w in the sub-
i→w =
i→w represents belief, dlocal
i→w
i→w represents uncertainty. Here
i→w = 1.
i→w and

is expressed as a vector Rlocal

i→w + ulocal
i→w, dlocal

i→w ∈ [0, 1], and blocal

(cid:9), where blocal

i→w + dlocal

i→w, ulocal

i→w, dlocal






blocal
i→w =
dlocal
i→w =
ulocal
i→w =

σ1pi→w
σ1pi→w+σ2qi→w+2 ,
σ2qi→w
σ1pi→w+σ2qi→w+2 ,
2
σ1pi→w+σ2qi→w+2 ,

(9)

where pi→w and qi→w are the numbers of positive and nega-
tive interactions between MSP Pi and worker w, respectively.
The MSP regards the resource interaction between itself and
a worker as a positive event if the worker is not a straggler in
the CDC, and returns the effective computation results that is
important for enhancing immersive experience of the vehicular
metaverse services (e.g., graph resolution or audio playback
resolution). The weights of positive and negative interaction
are denoted as σ1 and σ2, respectively, and 0 < σ2 < σ1 < 1.
The local reputation value T local

i→w is expressed as

T local
i→w = blocal

i→w + γulocal
i→w,

(10)

where γ ∈ [0, 1] is the effective coefﬁcient of uncertainty on
the reputation of worker w.

2) Recommended opinions: Apart from MSP Pi’s local
reputation opinions, the miners also need to search for selected
workers’ direct reputation opinions updated by other MSPs on
blockchain to obtain the recommended reputation opinions.
Suppose that miner m receives a number of (cid:60) recommended
opinions of w on blockchain. (cid:60) is also the number of rec-
ommenders. For recommender r ∈ (cid:60), the weight factor ωr is
expressed as [28]

ωr =

r→w + dlocal
r→w

(cid:1)

bi→r × (cid:0)blocal
(cid:80)
r∈(cid:60)

bi→r × (blocal

r→w + dlocal
r→w)

,

(11)

r→w + dlocal

where blocal
r→w represents the familiarity value between
recommender r and worker w. The higher familiarity value
means that the recommended opinions of recommender r on
worker w is more convincing. bi→r is the social tie strength
between MSP Pi and the recommender. When MSP Pi and
the recommender have the same worker set, we consider
ties between MSP Pi and the
that
recommender is strong [29]. The sets of workers that have
provided computing services for MSP Pi and recommender r
are denoted as Γ (Pi) and Γ (r), respectively. Then, bi→r is
expressed as [29]

the strength of social

bi→r =

|Γ (Pi) ∩ Γ (r)|
|Γ (Pi) ∪ Γ (r)|

.

(12)

The overall recommended reputation opinion of w is denoted
as Rrec
i→w}. The recommended rep-
utation opinion of worker w is the combination of all the

i→w = {brec

i→w, urec

i→w, drec

recommenders’ local opinions with their weight ωr, r ∈ (cid:60).
i→w, drec
brec

i→w and urec

i→w are represented as follows:
i→w = (cid:80)
brec
i→w = (cid:80)
drec
i→w = (cid:80)
urec

r∈(cid:60) ωrblocal
r→w,
r∈(cid:60) ωrdlocal
r→w,
r∈(cid:60) ωrulocal
r→w.






(13)

i→w, dcom

i→w = {bcom

3) Combining local opinions with recommend opinions:
Based on the local opinion and recommended opinions from
other MSPs. Miner m can obtain the ﬁnal compositive rep-
utation opinion of MSP Pi to worker w. The compositive
to worker w is represented
reputation opinion of MSP Pi
as Rcom
i→w}. According to [22], bcom
i→w, ucom
i→w,
i→w, ucom
dcom

i→w are expressed as follows:
i→w = blocal
bcom
i→w = dlocal
dcom
ucom
i→w =

i→w+brec
i→w urec
i→w−urec
i→w +urec
ulocal
i→w urec
i→w+drec
i→w−urec
i→w +urec
ulocal
i→wulocal
urec
i→w
i→w−urec
i→w +urec
ulocal
The compositive reputation value of MSP Pi to worker w is
expressed as

i→wulocal
i→wulocal
i→w
i→wulocal
i→w
i→wulocal
i→w





i→wulocal
i→w

(14)

i→w

.

,

,

i→w = bcom
T com

i→w + γucom
i→w.

(15)

For the initialization of workers’ reputation values, the num-
bers of positive and negative interactions between MSPs and
workers are set as 0. Then the initial reputation values of
workers can be obtained based on the above model. According
to the compositive reputation opinions, MSPs can recruit more
workers with high reputation values, promoting the ﬁnish of
CDC rendering tasks. After ﬁnishing a computing task, the
MSP updates the selected workers’ direct reputation opinions
on blockchain.

B. Coalition Formation Game Formulations

In the proposed model, miners cooperate to select reliable
workers for vehicular metaverse services. To achieve suitable
cooperative strategies for miners, the coalition game theory
is used. The combination of coalition game and reputation
metric makes the coalition more multi-dimensional from the
decision making perspective. The formulated model could be
suitable than classical coalition formation game that relies only
on a single value of utility, which may not be known precisely
in reality. The cooperative worker selection problem among
miners is modeled as a coalition formation game with non-
transferable utility (NTU), which means that the value or the
utility of a coalition cannot randomly be divided between the
members in the coalitions [30]. The NTU coalition game is
modeled as G = {M, u}, and u is the utility function. The
blockchain returns the compositive reputation opinions of the
workers in the coalition with the highest utility. We denote
the coalition of miners as Go ∈ M, and o is the index of
the coalition [31]. In the following, we give the deﬁnition of
coalition partition for the coalition formation game.

Deﬁnition 1: A group of mutually disjoint coalitions in M
is represented as Π = {G1, G2, . . . , Go, . . . , GO}, where Go ∩
Go(cid:48) = φ for o (cid:54)= o(cid:48), O is the number of coalitions. If the group
o=1Go = M, the group is
covers all the players in M, i.e., ∪O
called a coalition partition of M [32].

7

set

for

The worker

the coalition Go

Wm, and the number of workers in ∪m∈Go

is denoted as
Wm is
∪m∈Go
Wm|. For the calculation of workers’
denoted as |∪m∈Go
reputation opinions, the contribution value of the coalition Go
is expressed as

Q (Go) = ρc

Wm|

|∪m∈Go
W
Wm|/W is

+ ρr

(cid:80)

m∈Go

(cid:80)|Wm|

w=1 T com
i→w
Wm|

|∪m∈Go

,

(16)

(cid:30)

(cid:80)|Wm|

the percent of workers

where |∪m∈Go
that
the coalition Go has computed, and the second term
(cid:80)
Wm| is the average reputation
values of workers in the coalition Go. ρc and ρr are the
coefﬁcients that maintain the importance of the above two
parts on the contribution value.

w=1 T com
i→w

|∪m∈Go

m∈Go

The communication cost among miners increases with the
growth of the number of miners in the coalition, because
forming a miner coalition requires negotiation and informa-
tion exchange that may bring the cost and reduce the gains
from forming the coalition [33]. For the coalition Go, the
communication cost C (Go) should reﬂect the negotiation and
information exchange overhead, which are determined by the
number of miners in the coalition Go. The communication
cost C (Go) should satisfy the following requirements. Firstly,
the communication cost C (Go) increases monotonically with
respect to |Mo| that is the number of miners in the coalition
Go. Secondly, the slope of C (Go) becomes steeper with the
increase of |Mo|. In order to satisfy the above requirements,
the logarithmic barrier penalty function is adopted to model
the coalition cost [34], [35]. The communication cost C (Go)
is expressed as



(cid:17)2(cid:19)

(cid:18)

if |Mo| ≥ 2,

− log

(cid:16) |Mo|−˜o
M

1 −

,

C (Go) =



0,

otherwise ,

(17)
where ˜o is used to avoid an inﬁnite value of C (Go) when
|Mo| = M , and ˜o = 0.1 [34]. Then, the coalition utility of the
coalition Go is expressed as

u (Go) = Q (Go) − δC (Go) ,

(18)

where δ is the communication cost coefﬁcient.

For the coalition Go, whether the miners in Go can be
rewarded by blockchain depends on the coalition utility u (Go).
We notice that, in the proposed coalition game, the coalition
utility u (Go) is not divisible among the miners, and the utility
of each miner in the coalition Go is equal to u (Go), instead of
a fraction of u (Go). Hence, the proposed coalition formation
game has non-transferable utility. Each miner can choose the
suitable coalition based on the received utility. The deﬁnitation
of preference order is given as follows.

1 , . . . , G1
O

Deﬁnition 2: A preference operator (cid:46) is adopted to compare
Π1 = (cid:8)G1
(cid:9) that are
(cid:9) and Π2 = (cid:8)G2
partitions of the same subset A ⊆ M (i.e., the players in Π1
and Π2 are the same). Then, Π1 (cid:46) Π2 implies that partition Π1
is better than partition Π2 for subset A [36].

1 , . . . , G2
O(cid:48)

Different orders can be adopted to compare relationships
between partitions. We adopt Pareto order in this paper to
compare the preference relation between two partitions.

Deﬁnition 3: For the two partitions Π1 = (cid:8)G1
(cid:9),
1 , . . . , G2
O(cid:48)
1 , . . . , G1
O

and Π2 = (cid:8)G2
the utility of miner m in the
partition Π1 = (cid:8)G1
(cid:9) and Π2 = (cid:8)G2
(cid:9) are
denoted as um (Π1) and um (Π2), respectively. The partition
Π1 is better than Π2 by the Pareto order, which is denoted as
Π1 (cid:46) Π2, if and only if

1 , . . . , G2
O(cid:48)

1 , . . . , G1
O

(cid:9)

um (Π1) ≥ um (Π2) ∀m ⊆ Π1, Π2,

(19)

with at least one strict inequality (>) for a miner m.

Rule:

1) Merge

A coalition formation algorithm based on the simple rules
of merge and split is proposed by using the Pareto order. The
coalition formation process usually needs to execute many
rounds, and all the coalitions are involved in each round to
make sure that the utilities of coalitions increase or remain
stable. The rules of merge and split are given as follows [37]:
coalitions
o=1Go
(cid:46)
{G1, . . . , Go, . . . , GO}
as
denoted
is
(cid:9).
coalitions ∪O
(cid:9),
{G1, . . . , Go, . . . , GO}, which
(cid:9) → {G1, . . . , Go, . . . , GO}.

For
{G1, . . . , Go, . . . , GO},
{G1, . . . , Go, . . . , GO}, merge
o=1Go
which
into
{G1, . . . , Go, . . . , GO} → (cid:8)∪O

{G1, . . . , Go, . . . , GO} (cid:46) (cid:8)∪O
into
(cid:8)∪O

o=1Go, where
split (cid:8)∪O
(cid:9)
denoted
is

2) Split Rule: For

of
(cid:8)∪O

o=1Go

o=1Go

o=1Go

(cid:8)∪L

where

any

any

(cid:9),

set

as

(cid:9)

o=1Go

The coalitions will merge or split if these actions can yield
a preferred collection according to the pareto order. By using
the Pareto order, a coalition will split only if the split operation
makes at least one miner’s utility improved without decreasing
other miners’ utilities. Similarly, the coalitions will merge
only if at least one miner’s utility can be increased without
hurting other miners’ utilities. With the merge-and-split rules,
a stable coalition partition can be obtained, as any coalition
formation algorithm designed with the merge-and-split rules
always converges [32]. Algorithm 1 is the coalition formation
algorithm for miners.

Algorithm 1 Coalition formation algorithm for miners in the
proposed model
Input: Set of miners M = {1, 2, . . . , m, . . . , M }. Workers
selected by miners Wm = (cid:8)Wm,1, Wm,2, . . . , Wm,|Wm|
(cid:9),
1 (cid:54) m (cid:54) M ;

Output: The coalition with the highest coalition utility;

1: Initialization: The partition of miners, where all the miners
are disjoint is selected as the initial state. Each miner
selects several workers and computes selected workers’
compositive reputation value;

2: Merge mechanism: The Coalition Go tries to merge with

Go(cid:48) based on the merge rule;

3: Split mechanism: The Coalition Go tries to split with Go(cid:48)

based on the split rule;

4: Until: Merge and split iteration terminates;
5: Return: The coalition with the highest coalition utility.

For the designed coalition formation game G, the grand
coalition of all the miners seldom forms due to the commu-
nication cost. Besides, the participation of miners that obtain
the low reputation values of workers may degrade the coalition

8

utility, which also prevents the grand coalition formation. Next,
we use the defection function Dhp to analyze the stability of
the ﬁnal coalition partition.

Deﬁnition 4: A partition Π = {G1, G2, . . . , Go, . . . , GO} is
stable if no coalition Go is incentivized to change the current
partition Π by joining another coalition Go(cid:48), where Go ∩ Go(cid:48) =
φ, for o (cid:54)= o(cid:48), or trying to split into smaller disjoint coalitions
[31].

Deﬁnition

5: A partition

of

{G1, G2, . . . , Go, . . . , GO} is Dhp-stable if
following two conditions:

coalitions Π
it meets

=
the

1) For o ∈ {1, . . . , O} and each partition {R1, . . . , Rp} of

coalition Go, we have {R1, . . . , Rp} (cid:54) (cid:46)Go;
2) For S ∈ {1, . . . , O}, we have (cid:83)

where (cid:54) (cid:46) is the opposite rule of (cid:46).

o∈S Go (cid:54) (cid:46) {Go | o ∈ S}.

Theorem 1: The coalition partition under the proposed

scheme is Dhp-stable.
Proof: We ﬁrst

the

consider

condition 1. Π =
{G1, G2, . . . , Go, . . . , GO} is the ﬁnal partition obtained from
the coalition formation algorithm. If for o ∈ {1, . . . , O} and
any partition {R1, . . . , Rp} of Go, there has {R1, . . . , Rp}(cid:46)Go,
then the partition Go will split, which is in contradiction with
the fact that Π is a ﬁnal partition resulted from the merge-
and-split iteration. For condition 2, we still consider the same
ﬁnal coalition set Π = {G1, G2, . . . , Go, . . . , GO}. If for each
S ∈ {1, . . . , O}, there has (cid:83)
o∈S Go (cid:54) (cid:46) {Go | o ∈ S}, then the
partition Π can be modiﬁed through the merge rule, which
is also in contradiction with the fact that Π is a ﬁnal stable
partition. Thus,
the coalition partition under the proposed
scheme is Dhp-stable.

V. STACKELBERG GAME-BASED INCENTIVE
MECHANISM FOR VEHICULAR METAVERSE

K

K

After the worker selection phase, MSP Pi obtains the
information of workers in the selected coalition Go. MSP Pi
selects N workers from the coalition Go based on the workers’
reputation opinions. The set of selected workers is denoted as
Wsel = {1, 2, . . . , w, . . . , N }, and Wsel ⊆ Go. In the CDC ren-
dering task execution phase shown in Fig. 2, MSP Pi divides
the matrix Ai into K equal-sized submatrices R (3×2×np)
×np ,
and then MSP Pi has N encoded submatrices with the same
size (3×2×np)
× np based on the (N, K) MDS code. Each
submatrix is allocated to a worker. The distributed computing
resource interactions between MSP Pi and workers is modeled
as a single-leader multi-followers Stackelberg game. In the
leader game, the MSP selects an optimal computation reward
to motivate workers to execute CDC rendering tasks in the
vehicular metaverse. In the follower game, the workers try to
obtain higher proﬁt by adjusting their computing speed. The
Stackelberg game model can be extended to multiple MSPs
with two approaches. The ﬁrst one is that the MSPs make
decisions on incentive indenpendently and they do not affect
each other as the MSPs may use different applications. The
second one is that MSPs can compete with each other and this
forms a Nash game which can be investigated in the future
work.

A. Proﬁt Function of Workers

We consider that the CDC rendering task execution mainly
contains computing the task and transmitting the computation
result to MSP Pi. In the following, the proﬁt function of
workers is studied.

In order to incentivize workers to join the CDC rendering
task actively, the MSP Pi gives the reward to workers that con-
tribute to vehicular metaverse services. The reward contains
two kinds, i.e., base reward Rbase and competition reward
Rcom. The workers who participate in the CDC rendering task
can receive the reward Rbase. The workers whose average task
execution time is no more than the average task execution time
of the K-th worker can receive the reward Rcom. Similar to
the analysis in [38], we assume that the task execution time of
workers follows a uniform distribution, where Tw
∈ (0, 1),
Tmax
and Tmax is the maximum value of the task execution time.
The normalized task execution time of workers are ranked
and represented by its order statistics, which are expressed
as T1,N , T2,N , . . . , TN,N . TK,N is the K-th highest execution
time among N workers. The cumulative distribution function
of the normalized task execution time is F (T ) = T . The
probability density function of the normalized task execution
time is f (T ) = 1. Based on the order statistics, the probability
density function of Tk,N is given as

f(k) (T ) = N f (T )

(cid:19)

(cid:18) N − 1
k − 1

F (T )k−1(1 − F (T ))N −k,

(20)
which is also a beta distribution Beta (k, N − k + 1). Hence,
the expectation of Tk,N is given as

E (TK,N ) =

K
N + 1

.

(21)

The workers adopt the dynamic voltage scaling technology that
allows workers to adaptively adjust and control the computing
speed [39]. Each selected worker tries to obtain a higher proﬁt.
The proﬁt function of the worker w is expressed as

uw = Rbase + PwRcom − εµwE (T cmp

w ) − ζE (cid:0)T com−u(cid:1) ,
(22)
where ε is the computing cost of the worker per CPU circle,
and ζ is the communication cost of the worker per unit of
communication time. Pw is the probability of worker w getting
the reward from MSP Pi. Pw is expressed as

−µw

Pw = 1 − e

(cid:32) E(TK,N )×Tmax−E(T

com−u

K,N )

l

−aw

(cid:33)

,

(23)

= 1 − e−µwAw ,
(cid:16)

(cid:17)

where E

T com−u
K,N

is the average communication delay of
E(Tk,N )×Tmax−E(T com−u
l

− aw.
the K-th worker, and Aw =
Here, worker w selects the optimal computing speed µw that
maximizes uw.

k,N

)

B. Utility Function of Metaverse Service Provider

To motivate workers to contribute more to the CDC render-
ing tasks, MSP Pi should adjust the reward Rcom to maximize
its utility. The selected workers contribute their computing

9

resources to MSP Pi. The utility that MSP Pi can gain
depends on the computing resource that workers contribute,
the reputation values of workers, and the reward paid to the
workers. The utility function of MSP Pi is expressed as

(cid:88)N

(cid:88)N

w=1

w=1

f (µw) h (T com

uPi = ν

i→w)−N Rbase−

PwRcom,
(24)
where ν is a weight parameter, and f (µw) = log (1 + µw),
which is the utility of MSP Pi gained from the workers’
computation contribution. The log of f (·) reﬂects MSP Pi’s
diminishing return on the computation speed of each selected
worker [40]–[42]. h (·) is the reputation utility of workers and
is expressed as [43]

h (T com

i→w) = α + (1 − α) log

(cid:18)

1 +

(e − 1) (T com
max − T com
T com

i→w − T com
th )

th

(cid:19)

.

(25)
where α is the default reputation utility for the worker with
i→w = T com
T com
is the reputation threshold required by
the MSP. T com

th , T com
max is the maximum reputation value.

th

C. Stackelberg Game-Based Incentive Mechanism

The interactions among the MSP and workers is formulated
as a single-leader multi-followers Stackelberg game. In the
leader game, the MSP sets the optimal computation reward
to motivate workers to execute CDC rendering tasks. In the
follower game, the coalition of workers adjust the computation
speed to maximize their proﬁts. The strategy optimization
problems for the MSP and workers are formulated as follows.
1) Workers’ computing speed strategies in Stage II: In
Stage II, based on the reward strategy of the MSP,
worker w (w ∈ Wsel) determines its computation speed
µw to maximize the proﬁt that is given as

uw (µw; Rcom) = Rbase + Pw (µw) Rcom

− εµwE (T cmp

w ) − ζE (T com u)

.

(26)
The set of workers’ computing speed is µ =
{µ1, . . . , µw, . . . µN }, which are used to derive the com-
putation delay of workers based on (7). The worker
subgame problem is expressed as follows.
Problem 1 (Worker w Subgame):

maximize
µw
subject to

uw,w∈Wsel (µw; Rcom)

µ ≤ µw ≤ ¯µ,

(27)

where µ is the minimum computation speed, and ¯µ is
the maximum computation speed.

2) MSP’s reward strategy in Stage I: In Stage I, according
to workers’ computation speed strategies µ, the MSP
determines the reward strategy to maximize its utility
that is expressed as

uPi (Rcom; µ) = ν

(cid:88)N

w=1

(cid:88)N

w=1

−

f (µw) h (T com

i→w) − N Rbase

.

PwRcom

(28)

The MSP subgame problem is expressed as follows.

Problem 2 (MSP Pi Subgame)

maximize
Rcom

uPi (Rcom ; µ)

subject to Rcom ≤ Rcom ≤ Rcom ,

(29)

where Rcom is the minimum computation reward, Rcom
is the maximum computation reward.

The Stackelberg game is formulated by combining Problem
1 and Problem 2, and the goal of the Stackelberg game is to
ﬁnd the Nash equilibrium solution.

D. Game Equilibrium Analysis

The Stackelberg equilibrium makes sure that the utility of
the MSP is maximized considering that the workers contribute
their computation resource to vehicular metaverse services
based on the best response. This means that the computing
speed strategy of each worker maximize its proﬁt given the
strategies of the other workers and the computing reward
given by the MSP. The Stackelberg equilibrium is expressed
as follows.

Deﬁnition 6: We denote µ∗ and R∗

com as the optimal
computation speed of all the selected workers and optimal
computation reward given by the MSP, respectively. Then, the
strategy (µ∗, R∗
com) is the Stackelberg equilibrium if we have

uw

(cid:0)µ∗

uPi (R∗
−w, R∗

com; µ∗) ≥ uPi (Rcom; µ∗) ,
(cid:0)µw; µ∗
(cid:1) ≥ uw

(30)
(cid:1) , ∀w ∈ Wsel.
(31)
The backward induction is adopted to analyze the Stackel-

−w, R∗

w; µ∗

com

com

berg game.

1) Workers’ optimal strategies as equilibrium in Stage II
Based on the reward strategy Rcom given by the MSP, the
workers determine the optimal computation speed strategy for
proﬁt maximization in Stage II.

Theorem 2: The sub-game perfect equilibrium in the

workers’ subgame is unique.

Proof: We give the ﬁrst-order and second-order derivatives
of the proﬁt function of workers uw (·) with respect to worker’s
strategy µw. The ﬁrst-order derivative of uw (·) is shown as

∂uw
∂µw

= RcomAwe−µwAw − εlaweawµw .

(32)

The second derivative of uw (·) is shown as

∂2uw
∂µw

2 = − (cid:0)A2

we−µwAw Rcom + εla2

weawµw (cid:1) < 0.

(33)

As the second-order derivative of uw (·) is negative, so
the proﬁt function uw (·) is strictly concave with respect to
worker’s computing speed strategy µw. Besides, based on the
ﬁrst-order derivative condition, there is

∂uw
∂µw

= RcomAwe−µwAw − εlaweawµw = 0.

(34)

Then, the best response function of the worker w, i.e., µ∗
shown as

w , is

µ∗

w =

1
aw+Aw

log

(cid:104) RcomAw
εlaw

(cid:105)

.

(35)

We denote Ew =
perfect equilibrium of the workers’ subgame is unique [44].

. Thus, the sub-game

and Fw = Aw
εlaw

1
aw+Aw

2) MSP’s optimal reward strategy in Stage I

10

Based on the optimal computing speed strategies of workers
in Stage II, the MSP acts as the leader to optimize its utility
in Stage I.

Theorem 3: The uniqueness of the proposed Stackelberg

game’s equilibrium can be guaranteed.

com

aw+Aw

1, µ∗

w, . . . , µ∗

and U (µ∗

w) h (T com

< 0, when EwAw < 1, there is

Proof: The utility function of the MSP can be trans-
2, . . . , µ∗
N ) =
formed into (36),
ν (cid:80)N
w=1 f (µ∗
i→w). The ﬁrst-order derivative of the
MSP’s utility function is shown in (37). The second-order
derivative of the MSP’s utility function is shown in (38). As
∂2uPi
∂2U (·)
< 0. Because
∂R2
∂R2
EwAw = Aw
= 1
+1 < 1, the second-order derivative
aw
Aw
< 0,
of the MSP’s utility function always satisﬁes
which indicates that uPi is a concave function. Thus, the MSP
has a unique optimal solution that can be efﬁciently obtained
by bisection method [45]. Based on the optimal strategy of the
MSP, the workers’ optimal strategies can be obtained. Then,
the Stackelberg equilibrium can be obtained in the proposed
model. The MSP can achieve optimal utility and workers can
obtain optimal proﬁt, and neither of them would alter their
strategies to gain higher beneﬁts.

∂2uPi
∂R2

com

com

We design Algorithm 2 to obtain the unique Stackel-
berg equilibrium for the proposed game. In algorithm 2,
the MSP ﬁrst searches the optimal reward strategy, and
(cid:1)(cid:1). Then, each
the complexity is O (cid:0)log2
worker needs to decide its optimal computing speed strategy,
the complexity is O (N ). So the algorithm complexity is
(cid:1)(cid:1).
O (cid:0)N + log2

(cid:0)Rcom − Rcom

(cid:0)Rcom − Rcom

Algorithm 2 Bisection-based algorithm to ﬁnd Stackelberg
equilibrium
Input: Minimum computation reward Rcom , maximum com-

putation reward Rcom , error Ξ ;

Output: Optimal reward strategy of the MSP R∗

com and

optimal computing speed of workers µ∗;

1: MSP ﬁnd the optimal reward strategy based on the fol-

lowing steps.

2: while ∂uPi/∂Rcom × ∂uPi
3:
4:

Rcom = 0.5 × (cid:0)Rcom + Rcom
if ∂uPi/∂Rcom × ∂uPi
Rcom = Rcom;

(cid:14)∂Rcom < 0 do
(cid:1);
(cid:14)∂Rcom < 0 then

5:
6:
7:
8:
9:
10:

else

Rcom = Rcom;

end if
if (cid:12)

(cid:12)Rcom − Rcom
break;

(cid:12)
(cid:12) < Ξ then

end if
11:
12: end while
13: R∗
14: Each worker w decides its computing speed strategy µw

com = 0.5 × (cid:0)Rcom + Rcom

(cid:1);

based on (35);

15: Return: Optimal reward strategy of the MSP R∗

com and

optimal computing speed of workers µ∗;

uPi (Rcom; µ) = U (µ∗

1, . . . , µ∗

w, . . . , µ∗

N ) − N Rbase −

(cid:88)N

w=1

(cid:104)

1 − (FwRcom)−EwAw (cid:105)

Rcom.

∂uPi
∂Rcom

=

∂U (µ∗

1, · · · , µ∗
∂Rcom

w, · · · , µ∗

N )

−

(cid:88)N

w=1

1 + (EwAw − 1) (FwRcom)−EwAw (cid:105)
(cid:104)

.

∂2uPi
∂R2

com

=

∂2U (µ∗

1, · · · , µ∗
∂R2

com

w, · · · , µ∗

N )

−

(cid:88)N

w=1

(cid:104)

−EwAwFw (EwAw − 1) (FwRcom)−EwAw−1(cid:105)
.

11

(36)

(37)

(38)

TABLE I: Parameter settings

Parameter
Number of workers W
Number of miners M
Weight of positive and negative events σ1, σ2
Packet size su
Bandwidth assigned to workers B
pathloss exponent
Log-normal shadowing standard deviation
Variance of the Gaussian noise ˜σ2
Maximum transmitting power of workers p
Feedback period of mobile devices Tc
Threshold of reputation value T com
Workers’ computation cost per CPU circle ε
workers’ communication cost per unit time ζ
Default parameters ν
Maximum relative speed between MSP and workers

th

Value
100
20
0.6, 0.4
400B
10MHz
3
3dB
-30dBm
5w
0.1ms
0.6
0.1
10
10
15m/s

VI. PERFORMANCE ANALYSIS

In this section, we give the numerical results of the coali-
tion game-based worker selection and stackelberg game-based
incentive mechanism for reliable CDC in the vehicular meta-
verse. The parameter values are given in Table I [11] [24].

A. Numerical Results for Reliable worker selection

First, the reputation calculation scheme is simulated and
analyzed. Then, the coalition formation game is analyzed. For
the reputation calculation scheme, we consider an unreliable
worker, which performs well to all MSPs to increase its repu-
tation value to 0.8 at ﬁrst, and keeps such reputation value for
a certain period of time. Then, the unreliable worker keeps per-
forming well to several speciﬁc MSPs, but misbehaves to other
MSPs with the probability of 90%. The proposed blockchain-
enabled reputation scheme is compared with the reputation
scheme without blockchain, and the reputation scheme without
blockchain and recommended opinions. For the reputation
scheme without blockchain, such as the reputation scheme in
[46], workers’ reputation values are all stored in the centralized
platform in which unreliable workers’ negative interaction
behaviors are manipulated into positive interaction behaviors
with the probability of 25%. For the reputation scheme without
blockchain and recommended opinions, workers’ reputation
values only depend on MSPs’ local reputation opinions.
Figure 4 shows the reputation values variation of an unreliable
worker over time. As it can be seen from Fig. 4, when
the unreliable worker begins to misbehave,
the reputation
value signiﬁcantly decreases with the proposed blockchain-
enabled reputation scheme. For the reputation scheme without

Fig. 4: Reputation values variation of an unreliable worker.

Fig. 5: Average reputation values as function of misbehavior
ratio.

blockchain, the reputation value decreases more slowly than
that of the reputation scheme with blockchain. As the cen-
tralized platform manipulates the unreliable workers’ negative
interactions into positive interactions, which increases the
unreliable worker’s reputation value. For the reputation scheme
without blockchain and recommended opinions, the reputation
value of the unreliable worker still increases, as the MSPs that
are served positively by the unreliable worker compute the
reputation value only based on local reputation opinions.

Next, we analyze the coalition formation game. We set the

024681012Time0.40.50.60.70.80.91Reputation valueReputation scheme with blockchainReputation scheme without blockchainWithout blockchain and recommended opinions0.050.10.150.20.250.30.350.40.450.5Misbehavior ratio 0.50.550.60.650.70.750.8Average reputation valuesWith coalition game,1=0.6, M=10With coalition game,1=0.5, M=10With coalition game,1=0.6, M=20With coalition game,1=0.5, M=20Without coalition game,1=0.6Without coalition game,1=0.512

Fig. 6: Number of selected workers as function of
misbehavior ratio.

Fig. 7: Reward strategy of MSP as function of size of
rendering matrix.

number of positive interaction events as 0 ∼ 120, and the
number of negative interaction events as 0 ∼ 40. Then the
compositive reputation values of workers are calculated by
miners based on subjective logical model. Figure 5 shows
the selected workers’ average reputation value as a function
of misbehavior ratio. Misbehavior ratio is the percentage
of workers that are misbehaving to the total number of
workers. From Fig. 5, compared with the scheme without
coalition game, the selected workers’ average reputation value
of the proposed scheme decreases slightly with the growth
of misbehavior ratio. The misbehavior ratio has little effect
on the average reputation value of workers in the selected
worker coalition, as the coalition game-based method helps
to exclude the workers with low reputation values. When the
weight of positive event σ1 is ﬁxed, the number of miners
joining in the reputation calculation does not affect the average
reputation values of selected workers. When the misbehavior
ratio is ﬁxed, the selected workers’ average reputation value
increases with the increase of σ1. Figure 6 shows the number
of selected workers as function of misbehavior ratio. From Fig.
6, when the number of miners is ﬁxed, the number of selected
workers decreases with the rise of misbehavior ratio. When
the misbehavior ratio is ﬁxed, the number of selected workers
increases with the growth of the number of miners. As more
miners can calculate more workers’ reputation values, which
is beneﬁcal to the reliable worker selection.

B. Numerical Analysis for CDC Incentive Scheme

In this section, according to the reliable worker selection
results obtained from coalition formation game, we analyze
the numerical results about Stackelberg game-based CDC in-
centive mechanism in the vehicular metaverse. We assume that
the strat-up time of workers follows the normal distribution.
Figure 7 and Figure 8 show the effects of the size of rendering
matrix on the reward given by the MSP and utility of the
MSP, respectively. From Fig. 7, the reward given by the MSP
increases with the size of rendering matrix. When the number
of returned results K is ﬁxed, a higher value of N results in

Fig. 8: Utility of MSP as function of size of rendering
matrix.

higher reward given by the MSP. When N is ﬁxed, the reward
decreases with the growth of K. As the increase of K means
that the MSP needs to reward more workers, which makes the
reward reduced. From Fig. 8, the utility of the MSP increases
slightly with the size of rendering matrix. A higher value of N
results in higher utility for the MSP, which means that more
workers’ participation is beneﬁcial to the MSP. However, a
higher value of K makes the utility of the MSP reduced. This
indicates that the MSP can achieve higher utility with the CDC
scheme, as the MSP obtains the ﬁnal computing result when
receiving the computing results from K workers, and K < N .
Figure 9 and Figure 10 show the effects of the size of
rendering matrix on the selected workers’ average computation
speed and average proﬁt, respectively. From Fig. 9, the average
computation speed of workers increases with the size of
rendering matrix. When K is ﬁxed, a higher value of N
results in higher average computation speed, as the workers
need to increase their speed to obtain the competition reward.
When N is ﬁxed, a higher value of K results in lower
average computation speed. This is because the increase of

0.050.10.150.20.250.30.350.40.450.5Misbehavior ratio 20304050607080Average number of workers M=5 M=10 M=2025003000350040004500500055006000Size of rendering matrix50100150200250300350Reward given by MSPN=40,K=25N=40,K=30N=45,K=25N=45,K=3025003000350040004500500055006000Size of rendering matrix1950200020502100215022002250230023502400Utility of MSPN=40,K=25N=40,K=30N=45,K=25N=45,K=3013

Fig. 9: Average computation speed of workers as function of
size of rendering matrix.

Fig. 11: Utility of MSP as function of the mean of start-up
time.

Fig. 10: Average proﬁt of workers as function of size of
rendering matrix.

Fig. 12: Average proﬁt of workers as function of the mean
of start-up time.

K reduces the competitiveness among workers. From Fig. 10,
with the growth of the size of rendering matrix, the average
proﬁt of selected workers ﬁrst increases to a peak point and
then decreases. This indicates that when workers face many
rendering tasks with different sizes, workers can choose to
execute the rendering tasks that can maximize their proﬁts.
When K is ﬁxed, the increase of N makes the workers’
average utility increased. This is mainly because the MSP
gives more reward when N increases. When the size of
rendering matrix is less than 3300 for N = 45 and 3500 for
N = 40, a lower value of K results in higher average proﬁt
of workers. Otherwise, a higher value of K results in higher
average proﬁt of workers.

Figure 11 shows the mean of workers’ start-up time on the
utility of the MSP. As shown in Fig. 11, when the computing
cost ε is ﬁxed, the utility of the MSP decreases linearly with
the increase of the mean of workers’ start-up time. Besides, the
utility of the MSP decreases with the increase of ε. Figure 12
show the mean of workers’ start-up time as function of average
proﬁt of workers. From Fig. 12, with the increase of the mean
of workers’ start-up time, the average proﬁt of workers ﬁrst

increases to a peak point and then decreases. The workers can
select suitable strat-up time to execute the computing tasks
from the MSP.

Then, we compare the proposed scheme with the pre-deﬁned
worker selection scheme and best-effort worker selection
scheme. In the pre-deﬁned worker selection scheme, we pre-
select a ﬁxed number of workers based on certain criteria,
such as their similarity [47]. In the best-effort worker selection
scheme that is similar to [48], any workers available will
be allowed to join the CDC progress. When the reputation
values of workers is lower than the reputation threshold
T com
th , the repuatation utility of the worker is expressed as
h (T com
th ) [43]. Figure 13 shows the utility
of the MSP as a function of N under different schemes.
From Fig. 13, the utility of MSP increases with N under all
schemes. The utility of the MSP under the proposed reliable
CDC scheme is higher than those under the pre-deﬁned worker
selection scheme and best-effort worker selection scheme. The
utility of the MSP has been increased by 17% compared with
the best-effort worker selection scheme. Figure 14 shows the
average proﬁt of selected workers as a function of N under

i→w) = αe(T com

i→w−T com

25003000350040004500500055006000Size of rendering matrix160018002000220024002600280030003200Average computation speed of workersN=40,K=25N=40,K=30N=45,K=25N=45,K=3025003000350040004500500055006000Size of rendering matrix60657075808590Average profit of workersN=40,K=25N=40,K=30N=45,K=25N=45,K=30234567Mean of start-up time10-418001850190019502000205021002150Utility of MSP=0.1=0.2=0.3234567Mean of start-up time10-435404550556065707580Average profit of workers=0.1=0.2=0.314

ular metaverse. The utility of the MSP has been increased by
17%, and the average proﬁt of workers has been increased by
14% compared with the best-effort worker selection scheme.
In future works, speciﬁc consensus mechanisms of blockchain
for the vehicular metaverse might be studied.

REFERENCES

[1] Lik-Hang Lee et al., “All One Needs to Know about Metaverse: A
Complete Survey on Technological Singularity, Virtual Ecosystem, and
Research Agenda,” 2021, arxiv: 2110.05352.

[2] J. Joshua, “Information bodies: Computational anxiety in neal stephen-
son’s snow crash,” Interdiscip. Lit. Stud., vol. 19, no. 1, pp. 17–47, Jan.
2017.

[3] Haihan Duan, Jiaye Li, Sizheng Fan, Zhonghao Lin, Xiao Wu, Wei Cai,
“Metaverse for Social Good: A University Campus Prototype,” 2021,
arxiv: 2108.08985.

[4] Wei Chong Ng, Wei Yang Bryan Lim, Jer Shyuan Ng, Zehui Xiong, Dusit
Niyato and Chunyan Miao, “Uniﬁed Resource Allocation Framework for
the Edge Intelligence-Enabled Metaverse,” 2021, arXiv: 2110.14325.
[5] M. Dai, Z. Zheng, S. Zhang, H. Wang and X. Lin, “SAZD: A Low
Computational Load Coded Distributed Computing Framework for IoT
Systems,” IEEE Internet of Things Journal, vol. 7, no. 4, pp. 3640-3649,
April 2020.

[6] J. S. Ng et al., “A Comprehensive Survey on Coded Distributed Com-
puting: Fundamentals, Challenges, and Networking Applications,” IEEE
Communications Surveys & Tutorials, vol. 23, no. 3, pp. 1800-1837,
thirdquarter 2021.

[7] Gadekallu T R, Huynh-The T, Wang W, et al.,“Blockchain for the

Metaverse: A Review,” 2022, arXiv:2203.09738.

[8] K. Lee, M. Lam, R. Pedarsani, D. Papailiopoulos and K. Ramchandran,
“Speeding Up Distributed Machine Learning Using Codes,” IEEE Trans-
actions on Information Theory, vol. 64, no. 3, pp. 1514-1529, March
2018.

[9] A. Reisizadeh, S. Prakash, R. Pedarsani and A. S. Avestimehr, “Coded
Computation Over Heterogeneous Clusters,” IEEE Transactions on Infor-
mation Theory, vol. 65, no. 7, pp. 4227-4242, July 2019.

[10] F. Wu and L. Chen, “Latency Optimization for Coded Computation
Straggled by Wireless Transmission,” IEEE Wireless Communications
Letters, vol. 9, no. 7, pp. 1124-1128, July 2020.

[11] S. Prakash et al., “Coded Computing for Low-Latency Federated Learn-
ing Over Wireless Edge Networks,” IEEE Journal on Selected Areas in
Communications, vol. 39, no. 1, pp. 233-250, Jan. 2021.

[12] J. S. Ng et al., “A Game-theoretic Approach Towards Collaborative

Coded Computation Ofﬂoading,” 2021, arXiv:2102.08667.

[13] N. Ding, Z. Fang, L. Duan and J. Huang, “Incentive Mechanism Design
for Distributed Coded Machine Learning,” IEEE INFOCOM 2021 - IEEE
Conference on Computer Communications, 2021, pp. 1-10.

[14] Hao Xu, Zihao Li, Zongyao Li, Xiaoshuai Zhang, Yao Sun, and Lei
Zhang, “Metaverse Native Communication: A Blockchain and Spectrum
Prospective,” 2022, arXiv: 2203.08355.

[15] Jean-Marc Jot, R´emi Audfray, Mark Hertensteiner, Brian Schmidt,
“Rendering Spatial Sound for Interoperable Experiences in the Audio
Metaverse,” 2021, arxiv: 2109.12471.

[16] Lik-Hang Lee, et al., “When Creators Meet the Metaverse: A Survey

on Computational Arts,” 2021, arxiv: 2111.13486.

[17] Seo-Hyun Lee, Young-Eun Lee, Seong-Whan Lee, “Toward Imagined
Speech based Smart Communication System: Potential Applications on
Metaverse Conditions,” 2022, arXiv:2112.08569.

[18] Tristan Braud, Lik-Hang Lee, Ahmad Alhilal, Carlos Bermejo
Fern´andez, Pan Hui, “DiOS - An Extended Reality Operating System
for the Metaverse,” 2022,arXiv:2201.03256.

[19] Cong T. Nguyen, Dinh Thai Hoang, Diep N. Nguyen, Eryk Dutkiewicz,
“MetaChain: A Novel Blockchain-based Framework for Metaverse Ap-
plications,” 2022, arXiv:2201.00759.

[20] Thien Huynh-The et al.,“Artiﬁcial Intelligence for the Metaverse: A

Survey,” 2022, arXiv:2202.10336.

[21] A. Wiens and G. Domik, “In-Class Exercise for Shadow Mapping
Algorithms,” IEEE Computer Graphics and Applications, vol. 35, no.
3, pp. 15-19, May-June 2015.

[22] J. Kang et al., “Optimizing Task Assignment for Reliable Blockchain-
Empowered Federated Edge Learning,” IEEE Transactions on Vehicular
Technology, vol. 70, no. 2, pp. 1910-1923, Feb. 2021.

Fig. 13: Utility of MSP as function of number of selected
workers.

Fig. 14: Average proﬁt of workers as function of number of
selected workers.

different schemes. From Fig. 14, the average proﬁt of workers
increases with the increase of N under all schemes. The
average proﬁt of workers under the proposed reliable CDC
scheme is higher than those under the pre-deﬁned worker
selection scheme and best-effort worker selection scheme. The
average proﬁt of workers has been increased by 14% compared
with the best-effort worker selection scheme.

VII. CONCLUSION

In this paper, a distributed computing framework is pro-
posed for
the vehicular metaverse based on CDC and
blockchain. The subjective logical model is used to compute
the reputation values of vehicles. A hierarchical game-theoretic
CDC framework is proposed for the vehicular metaverse, the
coalition formation game is combined with the reputation
metric in the upper layer to select reliable workers, and the
Stackelberg game is designed in the lower layer to incentivize
workers to join the CDC rendering tasks. Finally, the hierar-
chical game-based CDC reliable worker incentive mechanism
is simulated and analyzed. Simulation results indicate that the
proposed reliable CDC scheme is resistant to the malicious
workers and is suitable for the decentralized CDC in the vehic-

253035404550Number of selected workers050010001500200025003000Utility of MSPProposed schemePre-defined worker selection schemeBest-effort worker selection scheme253035404550Number of selected workers0102030405060708090Average utility of workersProposed schemePre-defined worker selection schemeBest-effort worker selection scheme15

Hierarchical Game Approach,” IEEE Transactions on Network Science
and Engineering, vol. 7, no. 4, pp. 2363-2377, 1 Oct.-Dec. 2020.

[45] Y. Jiang, Y. Zhong and X. Ge, “IIoT Data Sharing Based on Blockchain:
A Multi-Leader Multi-Follower Stackelberg Game Approach,” IEEE
Internet of Things Journal, 2021.

[46] L. Gao, Z. Yan and L. T. Yang, “Game Theoretical Analysis on Ac-
ceptance of a Cloud Data Access Control System Based on Reputation,”
IEEE Transactions on Cloud Computing, vol. 8, no. 4, pp. 1003-1017, 1
Oct.-Dec. 2020.

[47] H. Xu, J. Li, H. Xiong and H. Lu, “FedMax: Enabling a Highly-
Efﬁcient Federated Learning Framework,” 2020 IEEE 13th International
Conference on Cloud Computing (CLOUD), 2020, pp. 426-434.

[48] G. Shingi, “A federated learning based approach for loan defaults
prediction,” 2020 International Conference on Data Mining Workshops
(ICDMW), 2020, pp. 362-368.

[23] X. Liu, Y. Deng, C. Han and M. D. Renzo, “Learning-Based Pre-
diction, Rendering and Transmission for Interactive Virtual Reality in
RIS-Assisted Terahertz Networks,” IEEE Journal on Selected Areas in
Communications, vol. 40, no. 2, pp. 710-724, Feb. 2022.

[24] Y. -a. Xie, Z. Liu, K. Y. Chan and X. Guan, “Energy-Spectral Efﬁciency
Optimization in Vehicular Communications: Joint Clustering and Pricing-
Based Robust Power Control Approach,” IEEE Transactions on Vehicular
Technology, vol. 69, no. 11, pp. 13673-13685, Nov. 2020.

[25] Z. Liu, Y. Xie, K. Y. Chan, K. Ma and X. Guan,“Chance-Constrained
Optimization in D2D-Based Vehicular Communication Network,” IEEE
Transactions on Vehicular Technology, vol. 68, no. 5, pp. 5045-5058, May
2019.

[26] S. Xu, C. Guo, R. Q. Hu and Y. Qian, ”BlockChain Inspired Secure
Computation Ofﬂoading in a Vehicular Cloud Network,” IEEE Internet
of Things Journal, doi: 10.1109/JIOT.2021.3054866.

[27] Jøsang A, “A logic for uncertain probabilities,” International Journal of
Uncertainty, Fuzziness and Knowledge-Based Systems, vol.9, no. 3, pp.
279-311, 2001.

[28] Y. Liu, K. Li, Y. Zhang, and W. Qu, “A novel reputation computation
model based on subjective logic for mobile ad hoc networks,” Future
Gener. Comput. Syst., vol. 27, no. 5, pp. 547¨C554, 2011.

[29] W. Sun, J. Liu, Y. Yue and Y. Jiang, “Social-Aware Incentive Mech-
anisms for D2D Resource Sharing in IIoT,” IEEE Transactions on
Industrial Informatics, vol. 16, no. 8, pp. 5517-5526, Aug. 2020.

[30] J. Chen et al., “Joint Task Assignment and Spectrum Allocation in
Heterogeneous UAV Communication Networks: A Coalition Formation
Game-Theoretic Approach,” IEEE Transactions on Wireless Communi-
cations, vol. 20, no. 1, pp. 440-452, Jan. 2021.

[31] J. S. Ng et al., “Joint Auction-Coalition Formation Framework for
Communication-Efﬁcient Federated Learning in UAV-Enabled Internet of
Vehicles,” IEEE Transactions on Intelligent Transportation Systems, vol.
22, no. 4, pp. 2326-2344, April 2021.

[32] F. Wang, Y. Li, Z. Wang and Z. Yang, “Social-Community-Aware
Resource Allocation for D2D Communications Underlaying Cellular
Networks,” IEEE Transactions on Vehicular Technology, vol. 65, no. 5,
pp. 3628-3640, May 2016.

[33] W. Saad, Z. Han, M. Debbah, A. Hjorungnes and T. Basar, “Coalitional
game theory for communication networks,” IEEE Signal Processing
Magazine, vol. 26, no. 5, pp. 77-97, September 2009.

[34] R. Zhang, Z. Zhao, X. Cheng and L. Yang, “Overlapping Coalition
Formation Game Based Opportunistic Cooperative Localization Scheme
for Wireless Networks,” IEEE Transactions on Communications, vol. 65,
no. 8, pp. 3629-3642, Aug. 2017.

[35] W. Saad, Z. Han, T. Basar, M. Debbah and A. Hjorungnes, “Coalition
Formation Games for Collaborative Spectrum Sensing,” IEEE Transac-
tions on Vehicular Technology, vol. 60, no. 1, pp. 276-297, Jan. 2011.

[36] W. Saad, Z. Han, M. Debbah and A. Hjorungnes, “A Distributed
Coalition Formation Framework for Fair User Cooperation in Wireless
Networks,” IEEE Transactions on Wireless Communications, vol. 8, no.
9, pp. 4580-4593, September 2009.

[37] R. Yu et al., “Cooperative Resource Management in Cloud-Enabled
Vehicular Networks,” IEEE Transactions on Industrial Electronics, vol.
62, no. 12, pp. 7938-7951, Dec. 2015.

[38] H. Yamanaka, E. Kawai, Y. Teranishi and H. Harai, “Proximity-Aware
IaaS in an Edge Computing Environment With User Dynamics,” IEEE
Transactions on Network and Service Management, vol. 16, no. 3, pp.
1282-1296, Sept. 2019.

[39] N. Kim, D. Kim, J. Lee, D. Niyato and J. K. Choi, “Incentive-Based
Coded Distributed Computing Management for Latency Reduction in IoT
Services: A Game Theoretic Approach,” IEEE Internet of Things Journal,
vol. 8, no. 10, pp. 8259-8278, 15 May15, 2021.

[40] Y. Zhan, C. H. Liu, Y. Zhao, J. Zhang and J. Tang, “Free Market
of Multi-Leader Multi-Follower Mobile Crowdsensing: An Incentive
Mechanism Design by Deep Reinforcement Learning,” IEEE Transactions
on Mobile Computing, vol. 19, no. 10, pp. 2316-2329, 1 Oct. 2020.
[41] Y. Liu, H. Wang, M. Peng, J. Guan and Y. Wang, “An Incentive
Mechanism for Privacy-Preserving Crowdsensing via Deep Reinforce-
ment Learning,” IEEE Internet of Things Journal, vol. 8, no. 10, pp.
8616-8631, 15 May15, 2021.

[42] A. Chakeri and L. G. Jaimes, “An Incentive Mechanism for Crowd-
sensing Markets With Multiple Crowdsourcers,” IEEE Internet of Things
Journal, vol. 5, no. 2, pp. 708-715, April 2018.

[43] J. Hu, K. Yang, K. Wang and K. Zhang, “A Blockchain-Based Reward
Mechanism for Mobile Crowdsensing,” IEEE Transactions on Computa-
tional Social Systems, vol. 7, no. 1, pp. 178-191, Feb. 2020.

[44] Z. Xiong, J. Zhao, D. Niyato, R. Deng and J. Zhang, “Reward Op-
timization for Content Providers With Mobile Data Subsidization: A

