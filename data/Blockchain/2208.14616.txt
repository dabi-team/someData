JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

1

PBAG: A Privacy-Preserving Blockchain-based
Authentication Protocol with Global-updated
Commitment in IoV

Xia Feng, Kaiping Cui and Liangmin Wang, Member, IEEE,

2
2
0
2

g
u
A
1
3

]

R
C
.
s
c
[

1
v
6
1
6
4
1
.
8
0
2
2
:
v
i
X
r
a

Abstract—Internet of Vehicles(IoV) is increasingly used as a medium to propagate critical information via establishing connections
between entities such as vehicles and infrastructures. During message transmission, privacy-preserving authentication is considered
as the ﬁrst line of defence against attackers and malicious information. To achieve a more secure and stable communication
environment, ever-increasing numbers of blockchain-based authentication schemes are proposed. At ﬁrst glance, existing approaches
provide robust architectures and achieve transparent authentication. However, in these schemes, veriﬁers must connect to the
blockchain network in advance and accomplish the authentication with smart contracts, which prolongs the latency. To remedy this
limit, we propose a privacy-preserving blockchain-based authentication protocol(PBAG), where Root Authority(RA) generates a unique
evaluation proof corresponding to the issued certiﬁcate for each authorized vehicle. Meanwhile, RA broadcasts a public global
commitment based on all valid certiﬁcates. Instead of querying certiﬁcates stored in the blockchain, the vehicle will be efﬁciently proved
to be an authorized user by utilizing the global commitment through bilinear pairing. Moreover, our scheme can prevent vehicles
equipped with invalid certiﬁcates from accomplishing the authentication, thus avoiding the time-consuming for checking Certiﬁcate
Revocation List (CRL). Finally, our scheme provides privacy properties such as anonymity and unlinkability. It allows anonymous
authentication based on evaluation proofs and achieves traceability of identity in the event of a dispute. The simulation demonstrates
that the average time of veriﬁcation is 0.36ms under the batch-enabled mechanism, outperforming existing schemes by at least 63.7%.

Index Terms—Blockchain, Authentication, Privacy-preserving, Commitment

(cid:70)

1 INTRODUCTION

T HE Internet of Vehicles (IoV) is the concept of con-

necting vehicles together in the public network, in-
tending to predominantly facilitate the dissemination of
critical information in real-time in the Intelligent Trans-
portation System (ITS) [1]. IoV has tremendous potential
to improve road safety and trafﬁc efﬁciency [2], especially
in various applications such as congestion control, trafﬁc
management, and collision avoidance. The operation of IoV
in the V2X mode enables vehicles to exchange information
such as speed, location, and heading through the dedicated
short-range communication (DSRC) protocol standard [3].
Besides, the cooperative safety applications are a signiﬁ-
cant branch of vehicular networks, where the emergency
message dissemination enables each vehicle to intelligently
perceive surrounding conditions and timely make decisions
about potential dangers [4]. Unfortunately, due to the open-
ness of the wireless channel, malicious users are inevitable
in the networks, which could launch arbitrary attacks.
For instance, the adversaries can cause trafﬁc accidents
and trafﬁc disturbances by snifﬁng, intercepting, replying,
modifying or deleting trafﬁc statutes [5]. Adversaries can
also eavesdrop and collect beacon messages broadcast by
the vehicle to determine the vehicle’s driving route and

• X. Feng and K. Cui are with the School of Automotive and Trafﬁc
Engineering, Jiangsu University, Zhenjiang, 212013, China (e-mail: xi-
azio@ujs.edu.cn).
L. Wang are with School of Cyber Science and Technology, Southeast
University, Nanjing, 211110, China (e-mail: liangmin@seu.edu.cn).

•

Corresponding author: Xia Feng.

track the vehicle’s trajectory [6]. Moreover, adversaries may
attack the vehicle’s control system and take control of
the intruded vehicles. Thus, security and privacy become
crucial and indispensable issues for IoVs. In this context,
reliable authentication schemes are required to effectively
support information dissemination, particularly amid the
transformation of the assisted driving system to self-driving
vehicles.

Identiﬁcation of benign vehicles forms the cryptographic
basis for ensuring security and privacy in IoVs. Numerous
researchers at home and abroad propose various authenti-
cation schemes, which mainly fall into three categories such
as authentication schemes based on Public Key Cryptosys-
tem [7], Identity-based Cryptosystem [8] [9] and Group-
based protocols [10] [11]. Public Key Cryptosystem always
needs an online Certiﬁcate Authority(CA), which often
brings communication time delay and involves certiﬁcate
management problems(e.g., involving a cumbersome certiﬁ-
cate revocation list). While the identity-Based Cryptosystem
scheme can alleviate these problems, they still need to pro-
cess the escrow issues. There is a risk of leakage of the secret
key once Key Generation Center(KGC) is compromised.
Group signature-based scheme protects the true identity,
but its challenges rely on the incurred computational and
communication overheads. Moreover, the ability of privacy
protection depends on the number of attended vehicles. It
is obvious that the optimum number of vehicles joining the
group cannot be guaranteed every time, particularly in rural
areas with sparse vehicles. When the authentication process
is achieved in a centralized manner, vehicles usually access

 
 
 
 
 
 
JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

the centralized server to download the records of the other
vehicles in all these three categories. The centralized archi-
tecture may cause problems such as excessive computing
burden and single point of failure of the central server.

Currently, the emerging blockchain technology has re-
ceived more attention in IoV. Blockchain can provide a
robust and stable communication environment for authen-
tication, effectively avoiding problems such as the sin-
gle point of failure. Therefore, ever-increasing numbers
of blockchain-based authentication schemes are proposed
[12] [13] [14]. Blockchain is mainly utilized to store cer-
tiﬁcates or status change records in such approaches, and
vehicles/infrastructures perform the authentication process
with smart contracts. However, existing approaches face
two major challenges in IoV authentication. Firstly, vehi-
cles/infrastructures must establish a connection with the
blockchain network and accomplish the authentication with
the assistance of blockchain, which prolongs authentication
latency. Secondly, the execution of smart contracts is based
on the consensus mechanism, which causes additional time
overhead in the authentication process.

In this paper, our work is to address the aforementioned
efﬁciency and privacy problem of the existing authentica-
tion schemes. Major contributions of this paper are listed as
follows:

• No interaction with blockchain. The whole au-
thentication process only need one end-to-end (E2E)
wireless transmission between vehicles and veriﬁers,
and vehicles do not need to interact with blockchain.
That’s beneﬁting from the public global commitment
broadcast by the Root Authority(RA), the vehicle will
be efﬁciently proved to be an authorized user by
utilizing it without querying certiﬁcates stored in the
blockchain.

• No need to retrieve CRL. Our proposal does not
need to maintain additional Certiﬁcate Revocation
List (CRL), and avoids the time-consuming for check-
ing CRL in the the authentication process. That’s
because the veriﬁer can prevent vehicles equipped
invalid certiﬁcates from accomplishing the authen-
tication with the assistance of global commitment
generated based on the all valid certiﬁcates in the
network. Besides, we also propose a commitment
update mechanism to guarantee fast update of global
commitments.

• Privacy-preserving properties. Our proposal guar-
antees security such as anonymity and unlinkability
under the security assumptions. Precisely, the zero-
knowledge proof enables authentication between
users to be processed anonymously, and it can
achieve traceability of identity in the event of a dis-
pute. Besides, the veriﬁer cannot link messages with
a particular user during the authentication. Finally,
we conduct security analyses and demonstrations
that our scheme can resist common attacks.

• Theoretical analysis and simulation. Considering
the real-time requirements of IoV communication
scenarios, we conduct extensive simulation in Hy-
perledger Fabric v2.0.0 and ns-2.35 to evaluate our
proposal in terms of authentication latency and in-

2

formation transmission efﬁciency. The performance
evaluation indicates that the proposed protocol can
signiﬁcantly reduce the authentication latency and
message loss rate. With batch authentication, the
authentication latency is reduced by more than 33.8%
comparing with [15] [16] [17]. Besides, the message
loss rate of our scheme is controlled within 9.6%,
outperforming the common scheme and satisfying
the communication requirements in IoV.

The remainder of this paper is organized as follows:
Section 2 reviews some related works. Section 3 introduces
several preliminaries and mathematical assumptions. The
framework and security model are formalized in Section
4. Section 5 presents PBAG, which is a privacy-preserving
authentication scheme suited for IoV. The analysis of the
security and privacy of our model is in Section 6. We analyze
the simulation results of our model and compare PBAG with
the existing schemes in Section 7. Finally, we conclude our
proposal and describe the future work in Section 8.

2 RELATED WORK

Recently, a wide range of research works related to authenti-
cation has been proposed. Existing approaches can be classi-
ﬁed into three categories [18]such as Identity-based cryptog-
raphy, Public key Infrastructure(PKI) and Blockchain-based
schemes.

2.1 Identity-based Authentication Structures

Identity-based authentication schemes have been improved
by diminishing the possibility of identity disclosure, as
in the case of the pseudonym [19] [20] and group-based
schemes [21] [22]. Vijayakumar et al. [19] propose a privacy-
preserving anonymous mutual and batch authentication
scheme. In this scheme, each vehicle can generate anony-
mous certiﬁcate that facilely veriﬁed by other vehicles.
Moreover,
the scheme supports RSU to conduct batch
authentication of multiple vehicles. Nevertheless, duo to
changing pseudonyms frequently for privacy protection
[23], vehicles have to communicate with trust authority(TA),
which cause high computational overhead and communi-
cation cost. Wei et al. [20] propose a conditional privacy-
preserving authentication protocol, which contains two
main institutions, namely registration server(RS) and veri-
ﬁcation server(VS). RS generates the pseudonyms using ho-
momorphic encryption, and VS is responsible for verifying
the legitimacy of pseudonyms. In this scheme, the system
architecture has higher security, reducing the reliance of the
system on the central authority. Unfortunately, this scheme
has the risk of disclosing user privacy information, and the
computation overhead is still relatively high.

Chaum and Heyst [24] ﬁrst propose the concept of group
signature in 1991. Based on the group signature scheme,
signatures can be generated by group members without
revealing their real identity. Azees et al. [21] propose an
EAAP protocol, which supports tracing electric vehicle or
OBU in IoV with the assistance of a conditional tracking
mechanism. However, the scheme do not mention non-
frameability, which cause the adversary can forge or tamper

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

with signatures. For more effcient message signature veri-
ﬁcation, Zhang et al. [22] propose a batch group signature
scheme. This scheme supports fast revocation check by con-
ducting a group session key(GSK)-based revocation strat-
egy(GSSA). GSSA has an excellent performance in terms
of computation time cost, message delay and loss rate.
Besides, GSSA can defend against common attacks, such as
tracking attacks, replay attacks, impersonation attacks and
sybil attacks. However, because the signatures are generated
without challenge value, the trustworthiness of the sender’s
message content cannot be recognized, which further cause
the vehicle not being able to verify the legitimacy of the
response from RSU.

2.2 PKI-based Authentication

PKI-based authentication approaches intend to ensure that
information being forwarded in IoVs is authenticated. The
earlier research reported in [25] [26] use CAs to issue
certiﬁcates and keep track of the certiﬁcates along with
proper veriﬁcation. More concretely, the RSU authenticates
the other vehicle’s identity using its certiﬁcate. However,
RSUs in IoV are prone to commit errors or can be com-
promised by adversaries. In recent years, researchers have
also attempted to optimize the security and performance
of PKI-based communication or authentication approaches
in IoV [27] [28] [29] [30]. Considering the security issues
of the Vehicle-to-Vehicle(V2V) architecture of ITS, Joshi et
al. [27] propose an efﬁcient V2V communication approach.
This scheme constructs one PKI-based mechanism adopting
event-triggered messages transmission. Moreover, they also
address several open issues with the assistance of machine
learning for V2V communication scenario. Asghar et al. [28]
propose a scalable and efﬁcient PKI-based authentication
protocol. Although this scheme constructs the linear-size
CRL and provides efﬁcient authentication, the TA still needs
to maintain a CRL for revoked vehicle certiﬁcates, which
is inﬂexible. Speciﬁcally, the TA need to implement an in-
depth search in CRL to ﬁnd the certiﬁcate of the mali-
cious vehicle sent forged trafﬁc-related messages, which
incurs extra time delay and computational cost. Tangade
et al. [29] propose a decentralized and scalable privacy-
preserving authentication scheme, which achieves privacy
message protection even in-vehicle identity revelation or
information broadcast. However, the forward security of
this scheme is not fully considered. Wang et al. [30] pro-
pose a hybrid conditional privacy-preserving authentication
scheme, which combines PKI and identity-based signature.
In this scheme, the vehicle accomplish authentication pro-
cess using TA-assigned long-term certiﬁcates. Nevertheless,
the PKI certiﬁcates cause huge communication cost during
authentication process.

2.3 Blockchain Based Authentication

Blockchain technology [31] emerges as a promising solu-
tion for decentralized authentication for IoVs. Shrestha [12]
proposed a blockchain-based authentication and revocation
framework in IoVs. In this framework, vehicles obtain the
ID and certiﬁcate from the CA and store them together in
the blockchain. Thereby RSUs can verify the vehicle’s iden-
tity instead of verifying identity with a trusted authority,

3

which can reduce both the computation and communication
cost. Feng et al. [33] propose a Blockchain-assisted privacy-
preserving authentication scheme (BPAS). Constructing
with consortium blockchain, this scheme achieves auto-
matic authentication while privacy protection. In addition,
the scheme achieves message credibility checking, vehicle
behavior monitoring and communication history tracking.
But, their scheme cannot support batch batch authenti-
cation of messages. Yao et al. [34] propose a lightweight
anonymous authentication mechanism to achieve cross-data
center authentication with the assistance of blockchain and
cryptographic functions. However, this scheme do not per-
fect the discussion and analysis of several security features,
such as resistance to masquerading or session key com-
promise, and forward conﬁdentiality. Besides, the scheme
cannot support bidirectional authentication between ser-
vice managers (SMs) and vehicles. In order to achieve the
tamper-resistant and traceability in authentication, Wang
et al. [35] propose a paring-assisted V2I authentication
scheme with trustworthiness scalable computation, which
encrypts the combination of trustworthiness and attributes
of vehicles, and stores ciphertext into the blockchain. How-
ever, bilinear pairing operation incurs high computational
cost during authentication process in this scheme. Xue et
al. [36] propose a blockchain-based tamper-proof roaming
authentication scheme for mobile vehicular networks. The
authors achieve an unforgeable billing scheme by deploying
bloom ﬁlters on blockchain, which contributes to security
and performance validations. Unfortunately, the complex
security framework leads to the relatively high latency
during the authentication process. Son et al. [37] propose a
blockchain-based lightweight V2I handover authentication
scheme, which integrates real-or-random logic and Bur-
rows–Abadi–Needham logic. However, the authors do not
optimize the overhead of block and consensus process.

Most of the blockchain-based authentication approaches
face three major challenges. Firstly, such schemes need to
involve blockchain interaction during the authentication
phase, which leads to longer time delay and huge com-
putation cost. Secondly, lacking of ﬂawless identity man-
agement mechanism. Especially, vehicles need to query a
CRL to check the current status of the certiﬁcate during
the authentication process, which incurs extra communica-
tion overhead. Apart from that, plenty of blockchain-based
authentication schemes have not enough decentralization,
and the single trusted authority has most of permissions.
Therefore, the existing works cannot be fully adapted to the
real-world scenario.

3 PRELIMINARIES AND MATHEMATICAL ASSUMP-
TIONS

In this section, we introduce several preliminaries and math-
ematical assumptions involved in this paper.

3.1 Lagrange Polynomial Interpolation
We can ﬁnd the unique polynomial Ψ(X) for the given n
pairs (xi, yi)i∈[0,n) using Lagrange interpolation [39], and
it satisﬁes Ψ(xi) = yi. Speciﬁcally, the Ψ(X) is computed
as Ψ(X) = (cid:80)
i∈[0,n)Li(X)yi in O(nlog2n) time [40] and its

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015
degree <n, where Li(X) = (cid:81)
. It is crucial
that the Li(X) has property that Li(Xi) = 1 and Li(Xj) =
0, ∀i, j ∈ [0, n) with j (cid:54)= i.

X−xj
xi−xj

j∈[0,n),j(cid:54)=i

3.4 Mathematical Assumptions

We elaborate the following assumptions as the basis for our
scheme.

4

3.2 KZG Polynomial Commitments

The KZG Polynomial Commitments is a constant-sized com-
mitment scheme for degree n polynomials Ψ(X) [41]. KZG
scheme can generate an evaluation proof for any Ψ(xi),
which has been utilized in stateless cryptocurrencies [42].
Besides, the generation of evaluation proof does not depend
on the degree of the committed polynomial. In this paper,
the parameter τ is trapdoor, and we can utilize the MPC
protocol [43] to compute the public parameters (gτ i
)i∈[0,n)
that hides the parameter τ .

)si

i=0siτ i

= g(cid:80)d

i=0(gτ i

• Committing. We deﬁne the polynomial Ψ(X) of
degree d ≤ n with coefﬁcients s0, s1, . . . , sd in Zp.
Therefore, we can generate a KZG commitment to
Ψ(X), that is C = (cid:81)d
= gΨ(τ ),
which takes Θ(d) time to commit Ψ(X). In our
scheme, C is a global commitment(elaborated in 5.1).
• Proving one evaluation. Taking the calculation of
the evaluation proof that Ψ(x) = y as an example.
The KZG utilize the polynomial remainder theorem
to transform the Ψ(x) = y, that is Ψ(x) = y ⇔
∃q(X), Ψ(X)−y = q(X)(X−x). Therefore, the proof
for Ψ(x) = y is just a KZG commitment to q(X): a
single group element π = gq(τ ), which is computed
Θ(d) time. The veriﬁer takes constant time to com-
pute if e(C/gy, g) = e(π, gτ /gx) ⇔ e(gΨ(τ )−y, g) =
e(gq(τ ), gτ −x) ⇔ e(g, g)Ψ(τ )−y = e(g, g)q(τ )(τ −x) ⇔
Ψ(τ ) − y = q(τ )(τ − x).

• Proving multiple evaluation. We deﬁne a set of
points I(|I| ≤ d) and the evaluations of I: Ψ(i)i∈I .
First, the prover computes a(X) = (cid:81)
i∈I (X − i)
in Θ(|I|log2|I|) time. Second, the prover computes
Ψ(X)/a(X), and obtains a quotient q(X) and re-
mainder r(X). After above calculation, the prover
can achieve the equation relation: Ψ(X) = a(X) ·
q(X) + r(X) and the batch proof πI = gq(τ ). The
veriﬁer need to compute the a(X) and r(X) to verify
πI and {Ψ(i)}i∈I against C. In particular, veriﬁer
ﬁrst computes a(X) from I and interpolates r(X)
that satisﬁes r(i) = Ψ(i), ∀i ∈ I in Θ(|I|log2|I|).
Second, the veriﬁer computes ga(τ ) and gr(τ ) and
checks if e(C/gr(τ ), g) = e(πI , ga(τ )) ⇔ e(C/gr(τ ), g)
= e(gq(τ ), ga(τ )) ⇔ e(g, g)Ψ(τ )−r(τ ) = e(g, g)q(τ )a(τ )
⇔ Ψ(X) = a(X) · q(X) + r(X).

3.3 Bilinear Pairing
We deﬁne two basic groups. G1, G2 are additive cyclic group
of prime order q. GT is a multiplicative cyclic group of prime
order q. It is denoted as G1 =< g >, G2 =< g > and
GT =< g >, respectively. Thus, e : G1 × G2 → GT is a
bilinear mapping [44] [45] with the following properties:

• Bilinear: For ∀g1 ∈ G1, ∀g2 ∈ G2, a, b ∈ Zp. It
2) = e(g1, g2)ab.
• Non-degeneracy:∃g1 ∈ G1, ∃g2 ∈ G2, which satisfy

satisﬁes e(ga

1 , gb

e(g1, g2) (cid:54)= 1GT .

• Compatibility: Existing an efﬁcient algorithm for

computing e(g1, g2) for ∀g1 ∈ G1, ∀g2 ∈ G2.

• n-DHE Assumption: For one group G of prime
, γ ← Zq. On input
order q,
(cid:104)g, g1, g2, . . . , gn, gn+2, . . . , g2n(cid:105) ∈ G2n, it is hard to
output gn+1.

let gi = gγi

(n+1)-tuple

• n-SDH Assumption: Let α ∈R Z∗

q. Given as input a
(cid:10)g, gα, . . . , gαn (cid:11) ∈ Gn+1, the probability
(cid:68)
for

An−SDH (g, gα, . . . , gαn

(cid:104)
=(cid:15)(κ)
Pr
∀c ∈ Zp\{−α} and every adversary An−SDH .

) =

c, g

1
α+c

(cid:69)(cid:105)

4

FRAMEWORK AND THREAT MODEL

Because of dynamic topology and high node mobility,
IoV suffers from a range of security vulnerabilities and
privacy issues. In general, vehicles should be responsible
for their disseminated safety and transport messages amid
adversaries or misbehaving nodes trying to forge messages
for their beneﬁts. Herein, vehicles in IoV have a two-
fold requirement. Firstly, vehicles should check the legiti-
macy of the communicating partner; secondly, the vehicle
should build their way of identiﬁcation to showcase their
legitimacy. Considering these requirements, we propose a
privacy-preserving blockchain-based authentication proto-
col(PBAG). This section introduces our security framework,
networks components, security assumption, and threat
model.

4.1 Framework and Components

We intend to provide an efﬁcient authentication protocol
in IoV. The framework of our scheme is shown in Figure
1, which comprises a three-layer architecture. The root
authority in the ﬁrst layer is responsible for the vehicle’s
certiﬁcate issuance and generating system parameters and
key pairs. The second layer is composed of RTAs and
blockchain, which is in charge of authenticating the vehi-
cles or RSUs. Besides, RTAs are equipped with sufﬁcient
computing power to collect and analyze trafﬁc messages.
The third layer is composed of vehicles and RSUs. Vehicles
communicate with others through the DSRC protocol. RSUs
communicate with RTAs or RA via a secure transport proto-
col(e.g., a wired transport layer security protocol) [46]. The
main components are described as follows:

1) Root Authority(RA): RA should be an institution au-
thorized by law, and it is responsible for issuing the digital
certiﬁcate for vehicles. Vehicles intending to join the IoV
should register themselves with the RA ﬁrst. Before issuing
the vehicle’s digital certiﬁcate, RA thoroughly veriﬁes the
vehicle’s information,
including a physical examination.
The information veriﬁed should include but is not limited
to the driver’s license, vehicle owner’s identity, and the
actual license plate. This procedure is usually private but
could be revealed in support of legal evidence under the
circumstances like accidental investigation. Besides, RA is
the only entity that can track the actual ID of vehicles. In our
paper, we assume the RA is a fully trusted institution and
never be compromised and conspired, and it has enough
computing and storage capabilities.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

5

obtain several certiﬁcates using the same encrypted ID to
launch cyber-attacks, which can be hindered by the RA.

Under the security assumption, our model can deal with
the threat arising from the authentication procedure. The
common threats to our scheme are as follows:

• Authentication procedure: The authentication pro-
tocol in IoV does not run in secure channels. The
adversary could launch the attacks, particularly on
the protocols. A successful attack on an authenti-
cation protocol usually does not rely on breaking
the cryptographic complexity algorithm used in the
protocol. Instead, the attacker obtains a certiﬁcate in
an unauthorized way. We list several security issues
and typical attacks below:

– Correctness and integrity: In the authentica-
tion process, the authorized vehicles are able
to provide evaluation proofs that they are
indeed legitimate vehicles. Besides, the man-
agement institutions can prove that messages
sent by authorized vehicles are correct without
being modiﬁed or forged.

– Traceability: In a event of dispute, it is neces-
sary for RA to reveal the identity by associat-
ing with the veriﬁcation messages.

• Privacy-preserving: The proposed scheme must
meet the following basic privacy-preserving require-
ments:

– Anonymity: Anonymity is one of the most
important aspects in wireless authentication
[47]. All vehicles can participate in the IoV
communication without revealing their iden-
tity in the proposed scheme.

– Unlinkability: The vehicle’s ability to hinder
the attacker from linking the relationship be-
tween two or multiple messages that have
been published.

• Resisting attacks: The proposed scheme can resist
the common attacks in IoV, such as the replay attack,
the impersonation attack and the modiﬁcation attack.

– Replay attack: An attacker repeats a previously
transmitted message to intercept and retrans-
mit its modiﬁed version, thereby fooling the
honest authentication party, and gives genuine
uses the illusion that they have successfully
completed the authentication protocol.

–

– Modiﬁcation attack: The attacker modiﬁes the
message or authentication materials. After-
ward, the attacker successfully deceives the
target entity and passes its veriﬁcation.
Impersonation attack. During the certiﬁcate
issuance operation, adversaries are capable of
forging an encrypted ID and trying to register
to the RA to launch an impersonation attack
where possible. Thus, the attack would hin-
der the certiﬁcate issuance of benign vehicles.
While in the update and revocation procedure,
an adversary can pretend to be the holder of
the certiﬁcate and can initiate the update or

Figure 1: The framework of PBAG.

2) Regional Trusted Authority (RTA): RTA can verify the
received message from RSUs or vehicles. The blockchain is
maintained by RTAs and RA. For a reasonable distribution
of computing power, RTAs are responsible for collecting
and analyzing trafﬁc messages with sufﬁcient computing
power, which can help RTAs make sound responses in
critical situations or optimize trafﬁc light control. Besides,
we assume the RTAs are trusted institutions, and have
access to the vehicle’s certiﬁcate information based on the
blockchain. Therefore, RTAs are in charge of updating global
commitment and certiﬁcates, which is elaborated in 5.4.

3) Road Side Units (RSUs): RSUs are located alongside the
roads to organize and coordinate vehicular communications
in an optimized manner. After conﬁrming identity, vehi-
cles apply for certiﬁcates by sending a request message to
nearby RSUs within their communication range. RSU is also
responsible for broadcasting the latest updated global com-
mitment to vehicles within its range and assisting vehicles
to complete the anonymous proof update process. Besides,
RSU also has a certiﬁcate that can prove its legitimacy. In
our scheme, we assume that RSUs are semi-trusted.

4) On-Board Unit (OBU): In this paper, we assume ve-
hicles are untrusted entities.The main computing and com-
munication units in vehicles are OBUs. They are embedded
equipment with limited computing capability, which can be
used to communicate with each other within the range. We
assume an OBU keeps synchronized with the RSUs. OBUs
can carry out the V2V authentication without the help of
RSUs.

4.2 Security Assumption and Threat Model

In our security hypothesis, RA and RTAs are trusted in-
stitutions, while RSUs are semi-trusted. The underlying
cryptographic mechanisms used to set up a genesis block
are secure for blockchain. We assume that vehicles in IoVs
can be rational attackers, and they even have some prior
knowledge when they launch attacks.

The RSUs could be attacked intentionally because they
are deployed in a wild area. The adversaries could collude to
launch attacks like eavesdropping and stealing conﬁdential
information, which could be detected using cryptography.
The malicious vehicles considered in our scheme try to

Certificate issuanceNewest certificateCommitmentOperations:  Update, Verification, Revoke,Retrieve, (cid:258)Zero-Knowledge ProofEidDownloadQueryApplicationAuthenticationRTAs(cid:258)(cid:258)(cid:258)Proof update records, (cid:258)(cid:258)RACertificate issuance, Identity traceability(cid:258)JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

6

revocation operation. The certiﬁcates of the
benign nodes will be updated or revoked un-
expectedly. In other words, the benign nodes
lose control of their certiﬁcates.

5 THE PROPOSED SCHEME
Vehicles transmit time-critical messages such as emergency
braking and lane crossing in IoV to avoid road accidents.
Thus, they should authenticate each other and then transmit
the message as soon as possible to have a broader impact.
To meet these requirements, we propose PBAG considering
the following fundamental principles: 1) reduce latency, 2)
resist attacks, and 3) preserve privacy.

In this section, we will introduce several operations of
the certiﬁcate, including issuance, update, and revocation
in PBAG, which is implemented through smart contracts.
Besides, we would elaborate on the authentication mecha-
nism and a non-interactive zero-knowledge proof protocol
constructed in our scheme.

5.1 Notations and Deﬁnitions

In this subsection, we present several notations and deﬁ-
nitions involved in PBAG. Above all, we choose one cryp-
tographic hash function H : {0, 1}∗ → Zp and deﬁne a
clipping function (cid:101)X = Clip(H(X)) to truncate the ﬁrst n
characters of hashed X and obtain its corresponding value
X .

After that, we calculate the parameters set Pl based on
the certiﬁcate, including the evaluation proof π. The vehicle
obtains the certiﬁcate(Cer), including information such as
Eid, npk, and f pk, after the ﬁrst two stages of the system
initialization process. We can utilize the clipping function to
caculate (cid:103)Eid = Clip(H(Eid)), (cid:103)npk = Clip(H(npk)), and
corresponding value are E and P. Then, we can ﬁnd the
unique polynomial Ψ(X) for the given n pairs (xi, yi)i∈[0,n)
using Lagrange interpolation as described above. In order
to more clearly exhibit the application of KZG in PBAG, we
deﬁne two parameters (ωi, ui)i∈[0,n) for each vehicle, and
calculate the Ψ(X), which satisﬁes Ψ(ωi) = ui. Here, ω
is a primitive n-th root of unity in Zp [38]. Meanwhile, we
deﬁne ui = (Ei||Pi)i∈[0,n) and u(cid:48)
i = [−RP + (Ei||Pi)]i∈[0,n),
where RP is the value corresponding to Clip(r · npk) and r
is a random number. Based on all (ωi, ui)i∈[0,n), the global
commitment C to polynomial Ψ(X) can be generated in
the ﬁnal stage of system initialization. πi is a KZG com-
mitment to qi(X) = Ψ(X)−ui
, that is πi = gqi(τ ). In the
X−ωi
authentication process, πi will be utilized as a proof for
the vehicle to verify the global commitment C. Therefore,
parameters set Pl = (ωi, ui, gωi
, gui , πi) is generated and
stored in the OBU. In addition, we deﬁne the update key
Ukey to assist the vehicle in updating proof πi. Speciﬁcally,
(τ −ωi) , where D(X) = X n − 1 (as shown
we compute ρi = g
in Appendix D). And, we can obtain µi = g
, where
Li(X) = (cid:81)
X−ωj
ωi−ωj , and deﬁne Ukey = (ρi, µi, ωi).
Finally , we assume symmetric pairings where G1 = G2
in Bilinear Pairing. The signatures involved in PBAG are
generated based on elliptic curve digital signature algo-
rithm(ECDSA) [48]. The related notations and deﬁnitions
are listed in Table 1 and Table 2.

Li(τ )−1
τ −ωi

j∈[0,n),j(cid:54)=i

D(τ )

Figure 2: The architecture for initialization.

5.2 System Initialization

In our model, when RA has conﬁrmed the legality of an
enrolled vehicle, RA will generate the vehicle’s Eid via
encrypting its real ID. Meanwhile, RA signs the vehicle’s Eid
with the ofﬂine secret key and obtains σf sk, which would be
utilized in certiﬁcate issuance. Vehicles accomplishing this
initial process acquire the certiﬁcate from the RA. Figure 2
illustrates three phases of Eid and certiﬁcate issuance during
system initialization: Phase I involves RA and OBU and is
performed by two parties and phase II and III need the
cooperation of three parties and is accomplished in 4 steps
and 2 steps, respectively.

1) Phase I: Eid issuance. RA veriﬁes the vehicle’s informa-
tion and initializes the key generation procedure for each ve-
hicle. Vehicles can obtain the encrypted digital license (Eid),
ofﬂine public key (f pk) and signature (σf sk = sig(Eid))
from RA if phase I is accomplished successfully.

master key pairs generation:
• RA deﬁnes an elliptic curve E: y2 = x3 + Ax +
B mod p, in which p > 5 is a prime, where A, B ∈ Zp
and constants with 4A3 + 27B2 (cid:54)= 0. Let a generator
P on elliptic curve E. Besides, the RA publishes E
and P , that is, other entities in the IoV can also obtain
parameters.

• RA randomly chooses a random number a ∈ Z∗

p as
its secret key fsk, and then computes its public key
f pk = aP , which is the master key for the RA.
• With the master key pairs, RA will encrypt the real

ID, Eid = Encrypt(id, f sk).

• RA signs the Eid with the ofﬂine secret key,σf sk =

sig(Eid, f sk).

• RA sends Eid, f pk and σf sk to the vehicle mean-

while reserves the ofﬂine secret key for itself.

In the initialization procedure, Eid issued for vehicles
should contain enough redundancy so that other vehicles
cannot reuse it. RA should retain the vehicle’s conﬁdential
material and its ofﬂine secret key conﬁdentiality. Mean-
while, a vehicle’s online secret key is reserved in the OBU,

(cid:346)(cid:3)License(True ID) (cid:312)Eid issuance(cid:312)(cid:3)Eid Query(cid:346)(cid:3)Application(cid:313)(cid:3)Eid Verification and certificate issue(cid:314) Certificate MatierialPhase I: Eid IssuancePhase II: Certificate IssuanceRSUOBU(Vehicle)RAPhase III: Global Commitment Calculation (cid:311) Calculating and sending of the global commitment (cid:314) Broadcasting commitmentJOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

7

TABLE 1: Cryptographic Algorithms

Notation
CreACC(1k) → (npk, nsk)
Encrypt(id, sk) → Eid
Sig(Eid, sk) → σ
Check(pk, σ, message) → 0, 1
H(X)
D(cid:48)(X)
Clip(H(X)) → (cid:101)X

Deﬁnition

Generate a pair of online public key and secret key separately with a random number k
Encrypt a vehicle’s id with its secret key based on Elliptic Curve cryptography (ECC) [48]
A digital signature algorithm based on ECC, sign Eid with its secret key
Determines whether or not σ is a valid signature on message signed by sk corresponding to pk
Hash operation on X.
Derivative with respect to D(X).
A clipping function to truncate the ﬁrst n characters of ﬁeld X

TABLE 2: Basic Notations of Certiﬁcate Operations

Notation
Eid
(cid:103)Eid
f pk, f sk
σf sk
Texpired
t
r
Pl
Cer

Ukey

E, P
ω

(ωi, ui)

π

Ψ(X)
C

Deﬁnition

Vehicle’s digital license obtained from RA.
The corresponding key of the certiﬁcate stored in the
database.
An master key pair generated by RA.
A signature signed by an ofﬂine secret key.
The expired time for a certiﬁcate.
Timestamp.
Random number.
Parameter set stored in the certiﬁcate.
Vehicle’s certiﬁcate.
The update key to assist the vehicle in updating proof
π.
The corresponding value of quantized (cid:103)Eid, (cid:103)npk.
A primitive n-th root of unity in Zp [38].
The parameters of vehicles for generating global
commitments and performing zero-knowledge proofs,
which is generated with certiﬁcate.
Evaluation proof utilized to verify the global commit-
ment.
Global polynomial generated with total (ωi, ui).
Global commitment generated with global polynomial.

which should be a tamper-proof device [10]. Thus, we as-
sume that there is no privacy disclosure and security attack
risk in this phase.

2) Phase II: Certiﬁcate issuance. The ﬁrst operation for
the vehicle is to complete the certiﬁcate issuance process
in the RA. Once the Eid is issued, the vehicle should be
registered in the RA with the assistance of the nearby RSUs.
The certiﬁcate issuance procedure is shown in Algorithm 1.
The vehicle can obtain the certiﬁcate Cer as its output with
input tuple R.

Step 1-1 (Step 1 in Algorithm 1): The vehicle sends the
tuple R to the RSU located within its communication range.
R = (Eid, register, npkt, Texpired, σf sk)

(1)

Algorithm 1 : Certiﬁcate issuance procedure.
Input: R.
Output: Cer.
1: R ← (Eid, issue, npkt, Texpired, σf sk)
2: if Search(Eid) == N ull then /*check the Eid hasn’t

been registered previously */

3: if Check(f pk, σf sk, Eid) == 1 then /*validate Eid with

RA */

4: Pl ← (ωi, ui, gωi

, gui, πi); /*RA calculates parameters

for authentication*/

5: Cer := (Eid, issue, npkt, Texpired, σf sk); /*generate the

certiﬁcate */

6: Mapping((cid:103)Eid → Cer); /*mapping (cid:103)Eid to the certiﬁcate

*/

7: else if Check(f pk, σf sk, Eid) == 0 then
8: Mapping((cid:103)Eid → pend); /* Eid hasn’t been validated by

RA */

9: else return ⊥;
10: end if
11: end if
12: end if

to retrieve a vehicle’s certiﬁcate based on its encrypted iden-
tity (cid:103)Eid. With the return value, the algorithm determines the
current status of a given vehicle. Otherwise, it returns pend
to imply that the Eid has not been registered.




Cer,
revoke,
pend,

If the vehicle has certiﬁcate



Search((cid:103)Eid) =

If the vehicle has been revoked
If the vehicle hasn’t been validated
(4)
Step1-4: RA calculates the parameters for authentication,
which stored in parameter set Pl.
Pl ← (ωi, ui, gωi

, gui, πi)

(5)

The vehicle selects a random number k ∈ Z∗

p as its online
secret key nsk, and calculates the corresponding public key
npk = kP . Therefore, we denote key generation based on
ECC with a random number k as:

CreACC(1k) → (npk, nsk)

(2)
In which the signatures σf sk is signed by a RA’s ofﬂine
secret key, which is used to prove the correctness of the
vehicle’s identity.

σf sk = sig(Eid, f sk)

(3)

Step 1-2 (Step 2 in Algorithm 1): The function Search used in
step 1-2 is deﬁned by equation (4). This function is leveraged

Step1-6: After verifying the vehicle’s identity, RA generates
the certiﬁcate for the vehicle. In our scheme, certiﬁcates
would be stored in the state database of blockchain with the
smart contract, and the function M apping is constructed to
achieve this procedures. Besides, the vehicle stores Cer in
OBU.

M apping((cid:103)Eid → Cer)

(6)

During the issuance procedure, we have two strategies to
ensure the security and efﬁciency of our scheme. (1) The
vehicles cannot create different certiﬁcates with the same or
fake identity because of unique vehicle-to-certiﬁcate map-
ping. Our scheme guarantees consistency for true identity
and digital license, thereby ensuring the identity retention

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

8

mechanism. (2) Only the RA has the ofﬂine secret key, and
it is the only authority that can reveal the vehicle’s real
identity.

(1) The veriﬁer receives the authentication tuple σ
and message m. It checks the freshness of the
timestamp t and calculates:

Besides, after the issuance procedure, the vehicle selects
a random number r ∈ Z∗
p, and publishes r · npk until one
authentication process is performed, that is, other entities
in IoV can obtain parameter r · npk instead of npk. After
one authentication process is performed, the vehicle selects
another newest random number r(cid:48) and publishes the npk·r(cid:48).
3) Phase III: Generation of global commitment. RA is re-
sponsible for generating the global commitment. In our
scheme, we deﬁne the Ψ(X) is a polynomial with coefﬁ-
cients s0, s1, . . . , sd in Zp for given n pairs (ωi, ui)i∈[0,n).
For efﬁciently, we assume without loss of generality that n
is a power of two. According to the Section II, RA generates
a polynomial Ψ(X) = (cid:80)
i∈[0,n)Li(X)ui using Lagrange
polynomial interpolation for vehicles under management.
Therefore , we can generate a KZG commitment to Ψ(X),
that is C = (cid:81)d
= gΨ(τ ), which
represents the state of total certiﬁcates and plays an sig-
niﬁcant role in the authentication process. Afterward, RA
sends the global commitment C to RSUs and RTAs, and
RSU broadcasts C within its management area.

i=0(gτ i

= g(cid:80)d

i=0siτ i

)si

5.3 Message Authentication

In this subsection, we demonstrate the authentication pro-
cess of vehicle-to-untrusted entity as well as the authen-
tication process of vehicle-to-trusted/semi-trusted entities.
Without loss of generality, we assume participants in the
authentication process are vehicles A(prover) and nearby
vehicles, RSUs and RTAs(veriﬁer).

5.3.1 The vehicle-to-untrusted entity

The speciﬁc authentication process of
untrusted entity is as follows:

the vehicle-to-

• Messages generation

(1) The vehicle A publish the npkA · r publicly,
where r is a random number. The vehicle
generates parameters related to message and
identity as follows:

EA = nskA · f pk · r ⊕ ((cid:103)Eid||t)
MA = rB · npkB · r · nskA ⊕ H(m||t||EA)

(7)

(8)
where rB · npkB is published by the veriﬁer.
(2) The vehicle A calculates the related parame-
ters of the zero-knowledge proof based on the
random number r:
au = (πA)r−1, gωA
πA
au)ωA
au = gu(cid:48)
gu(cid:48)

au = (gωA
, gr−1

A · (πA

(9)

)r

A

Therefore,
au , gu(cid:48)
au, gωA

this algorithm outputs σ =
{πA
au , gr−1, EA, MA, m, t}, as the au-
thentication tuple for the vehicle A that pub-
lishes the message m.

A

• Authentication

H(m||t||EA) ⊕ rB · nskB · r · npkA

?= MA

(10)
If the equation holds and outputs true, which
means valid parameter of m and (nsk, npk)
is a valid key pair. Afterwards, the veriﬁer
would veriﬁes that the message is sent by an
authorized vehicle.

(2) The veriﬁer ﬁrst calculates auxiliary paramete
au = gRP · gu(cid:48)
guA
au , where RP is the value
corresponding to the Clip(r·npkA). Therefore,
the veriﬁer can veriﬁes:

A

e(C/guA

au , gr−1) = e(πA
⇔ e(gΨ(τ )−uA−q(τ )(r−1)ωA

au, gτ /gωA
, gr−1)

au)

= e(gq(τ )(r−1), gτ −ωAr)

⇔ e(g, g)[Ψ(τ )−uA−q(τ )(r−1)ωA]·(r−1)

= e(g, g)q(τ )(τ −ωAr)(r−1)

⇔ Ψ(τ ) − uA = q(τ )(τ − ωAr)

+ q(τ )(r − 1)ωA

⇔ Ψ(τ ) − uA = q(τ )(τ − ωA)

(11)

This algorithm can accomplish the authentica-
tion process for vehicle-to-vehicle. If the equa-
tion holds and outputs true, which means the
message is sent by an authorized vehicle.

5.3.2 The vehicle-to-trusted/semi-trusted institutions

The speciﬁc authentication process of
trusted/semi-trusted institutions is as follows:

the vehicle-to-

• Messages generation

(1) The vehicle A generates veriﬁcation param-
eters related to message and identity as fol-
lows:

EA = nskA · f pk · r ⊕ ((cid:103)Eid||t)
MA = rB · npkB · r · nskA ⊕ H(m||t||EA)

(12)

(13)
where rB · npkB is published by the veriﬁer.
(2) The vehicle A selects the related parameters
set of the zero-knowledge proof, that is Pl =
(ωi, ui, gωi
, gui, πi). Therefore, this authentica-
tion tuple σ = {Pl, EA, MA, m, t} is for the
vehicle to publishes the message.

• Single authentication

(1) The veriﬁer receives the authentication tuple σ
and message m. It checks the freshness of the
timestamp t and veriﬁes:

H(m||t||EA) ⊕ rB · nskB · r · npkA

?= MA (14)

Afterward, The veriﬁer would check that the
message is sent by an authorized vehicle.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

9

A vehicle updates its certiﬁcate with an update strategy.
Firstly, a vehicle must prove that it has been registered
before. Secondly, the updated vehicle must prove that it is
the holder of the previous certiﬁcate. The certiﬁcate update
is divided into two phases. The Phase I is mainly for cer-
tiﬁcate and authentication parameters updates. The Phase II
is mainly for the global commitment update based on the
newest certiﬁcate.

Phase I: Certiﬁcate update. Before updating certiﬁcate, the
vehicle must prove its ownership of the certiﬁcate, which
can prevent attackers from obtaining Eid and npk through
illegal means and updating legitimate certiﬁcates arbitrarily.
The vehicle ﬁrst signs the new online public key with
its old online secrete key, σver
t = Sig(Eid(cid:107)npkt+1, nskt),
then signs the Eid with the new secret key σnsk
t+1 =
Sig(Eid, nskt+1), which are utilized for RTAs to verify
whether the update is initiated by the owner of the previous
certiﬁcate or not. The certiﬁcate update procedure is shown
in Algorithm 1.

, σnsk
t+1)

t

Algorithm 2 :Certiﬁcate update procedure.
Input: U
Output: Cer(cid:48).
1: U ← (Eid, update, npkt, npkt+1, Texpired, σver
2: if Search((cid:103)Eid) == Cer then
3: if Check(npkt, σver

t

, Eid||npkt+1 == 1)
t+1, Eid == 1)

i

i

4: P (cid:48)

, gut+1

, πt+1
i

&&Check(npkt+1, σnsk
&&Check(npkt
ownership */
, gωi
l ← (ωi, ut+1
newest parameters for authentication*/
5: Cer(cid:48) := (Eid, update, npkt+1, Texpired, σnsk
t+1)
6: Mapping ((cid:103)Eid → Cer(cid:48));
7: if Search((cid:103)Eid) == pend then
8: Check(f pk, σf sk, Eid)==1
9: else return ⊥;
10: end if
11: end if
12: end if

?= npk)then /* Check the certiﬁcate’s

); /*RTA calculates

Step 2-1: The vehicle sends the tuple U to the RSU located

within its communication range.

Figure 3: The proof update procedure.

(2) The veriﬁer checks the correctness of the fol-
lowing equation using bilinear pairing:

e(C/gui, g) = e(π, gτ /gωi

)

(15)

where the relevant parameters have been in-
troduced in the previous contents.

• Batch authentication

When the veriﬁer performs the second step of the
authentication process, it can simultaneously verify
messages sent by multiple authorized vehicles. Batch
veriﬁcation is achieved via aggregating proofs with
the assistance of Partial fraction decomposition(See
Appendix D). Speciﬁcally, the veriﬁer can receive
(ωi, ui, πi)i∈I , I ⊂ [0, n). According to previous
work, given the point (ωi, ui), we have Ψ(ωi) =
ui ⇔ ∃qi(X), Ψ(X) − ui = qi(X)(X − ui). The πi
is a commitment to qi(X) = Ψ(X)−ui
, and πI is the
X−ωi
commitment to qI (X), that is πI = gqI (τ ). Thus, the
proof aggregation is as follows:

(1) The veriﬁer calculates R(X) and D(X). R(X)
is computed via Lagrange interpolation and
satisﬁes R(ωi) = ui, i ∈ I. DI (X) =
(cid:81)

i∈I (X − ωi).

(2) Then, the veriﬁer calculates ci = 1/D(cid:48)(ωi)
i∈I πci
i , which can be uti-
i∈I ciqi(X).
the veriﬁer can obtain qI (X) =

and πI = (cid:81)
lized to construct qI (X) = (cid:80)
Thus,
[Ψ(X) − R(X)]/[DI (X)].
Finally, the veriﬁer can achieve the multiple
evaluation proof (according to 3.2):

(3)

e(C/gR(τ ), g) = e(πI , gDI (τ ))

(16)

U = (Eid, update, npkt, npkt+1, Texpired, σver

t

, σnsk
t+1)

(17)

In short, a proof πi for ui
is a KZG evaluation
proof for Ψ(ωi). Similarly, a sub-vector proof πj
for uj,j ∈ I, I ⊆ [0, n) is a KZG batch proof for
all Ψ(ωi)i∈I . Thus, the veriﬁer can verify multiple
authorized vehicles simultaneously. It is worth not-
ing that all proofs (πi)i∈[0,n) can be computed with
the assistance of the Feist-Khovratovich(FK) [49] in
O(nlog n) time. Therefore, I-subvector proofs can be
aggregate in O(|I|log2|I|) time.

5.4 Certiﬁcate Update

In the IoV scenario, vehicles usually update their certiﬁcates
under the following circumstances: (1) The identity owner
initiates the update process for its own good; (2) When the
vehicle intends to stay in the IoV after its certiﬁcate expired.

The vehicle chooses another random number k, obtains its
new online key pair (npkt+1, nskt+1) with Eid.
CreACC(1k) → (npkt+1, nskt+1)

(18)

Step 2-2: Firstly, smart contract leverages the function
Search to check the vehicle’s current status. Only when the
return value is Cer, the process continues.

Step 2-3: The RTA veriﬁes whether the update is initiated
by the owner of the previous certiﬁcate or not. RTA needs
to verify two signatures σver
t+1, and check whether
npkt is consistent with npk stored in the certiﬁcate Cer.

and σnsk

t

Check(npkt, σver

t

Check(npkt+1,σver
?=npk

npkt

,Eid(cid:107)npkt+1) ?= 1
t+1, Eid) ?= 1

(19)

(20)

(21)

Verifyt2Updatet3(cid:266)Verifyt4(cid:266)Vehicle ARec(cid:1)(cid:1)(cid:66)Rec(cid:1)(cid:67)Rec(cid:1)(cid:68)(cid:266)Rec(cid:1)(cid:69)(cid:266)BlockchainThe Vehicle businessUpdatet1The Update RecordsJOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

10

Step 2-4: The RTA calculates newest parameters for authen-
tication. Speciﬁcally, here is mainly the update of the three
parameters, ui, gui and πi, respectively.

For u(cid:48)

(cid:94)npkt+1 =
i, we have (cid:103)Eid = Clip(H(Eid)) and
Clip(H(npkt+1)), and obtain corresponding value Ei and
P t+1
i

and perform the following calculation:

ut+1
i = (Ei||P t+1

i

)

(22)

Therefore, the parameter gui is also updated.
When the status of the vehicle’s certiﬁcate state changes,
assuming that is a change δ to ui, so the newest Ψ(cid:48)(X) =
Ψ(X) + δ · Lj(X) (See Appendix C). Besides, the proof πi also
needs to be updated. In order to express the proof update
scheme explicitly, we assume that i and j are two vehicle
codes. We will discuss both cases local proof update(i = j)
and other proof update(i (cid:54)= j) below.

First, we discuss the case of i = j and deﬁne the this
update situation as local proof update. When one vehicle’s
certiﬁcate state changes, the proof of this vehicle would be
πi → πt+1
. We have known πi is a KZG commitment to
i
qi(X) = Ψ(X)−ui
X−ωi

, then:

q(cid:48)
i(X) =

Ψ(cid:48)(X) − (ui + δ)
X − ωi

ωj −ωi , d2 = 1

where d1 = 1
ρj and ωj from UKey and compute ζi,j = ρd1
we can compute pi,j = (ζi,j)
πt+1
i = πi · (pi,j)δ.

ωi−ωj , obviously. Thus, we obtain
j . Finally,
D(cid:48) (ωj ) and update the proof as

i ρd2

1

Obviously, the calculation of proof πt+1

i

here follows the

case of i = j.

Step 2-5: The Mapping function maps the encrypted
identity (cid:103)Eid to the new certiﬁcate Cer(cid:48). Now, the vehicle
stores Cer(cid:48) in its local OBU.

Step 2-6: If Search returns pend, then RSU will inquire

RTA to validate the vehicle’s identity.

Phase II: Global commitment update. RTA is responsible
for updating global commitment C. In the Phase II, the
newest global C (cid:48) commitment is calculated based on C and
newest certiﬁcate Cer(cid:48). Before generating the newest global
commitment, RTA needs to check validity of the proof held
by the vehicle that update its certiﬁcate. Similar to previous
work, C = gΨ(τ )is a KZG commitment to Ψ(X). For RTA,
we set li = gLi(τ ) [50], which can be utilized to compute
C = (cid:81)n
i=1(li)ui in O(n) time without Ψ(X). We assume
that the value of ui changes by δ. Therefore, the updated
polynomial Ψ(X) is Ψ(X)(cid:48) = Ψ(X) + δ · Li(X) and the
updated of commitment C is C (cid:48) = C · (li)δ. The newest C (cid:48)
is broadcast via RSUs.

=

=

(Ψ(X) + δ · Li(X)) − ui − δ
X − ωi

Ψ(X) − ui
X − ωi +

δ · (Li(X) − 1)
X − ωi
(cid:19)

(cid:18) Li(X) − 1
X − ωi

= qi(X) + δ ·

(23)

5.5 Certiﬁcate Revocation

Therefore, we need a KZG commitment to Li(X)−1
. From
X−ωi
U i
key, we can obtain µi = gβ, β = Li(τ )−1
and compute the
τ −ωi
updated proof: πt+1
i = πi · (µi)δ, which is uncomplicated
to implement. It is worth noting that with the update of the
certiﬁcate, U i
key and δ will be uploaded to the blockchain via
a transaction.

Second, we discuss the case of i (cid:54)= j and deﬁne the this
update situation as other proof update. When other vehicle’s
certiﬁcate(e.g., vehicle j) state changes, the proof of vehicle
i would be πi → πt+1
. Figure 3 shows the update process
in this case. First, we can compute the updated quotient
polynomial q(cid:48)

i

i(X):

(Ψ(X) + δ · Lj(X)) − ui
X − ωi

q(cid:48)
i(X) =

=

Ψ(cid:48)(X) − ui

X − ωi =
Ψ(X) − ui
X − ωi +

= qi(X) + δ ·

δ · (Lj(X))
X − ωi
(cid:19)

(cid:18) Lj(X)
X − ωi

(24)

Lj (X)
X−ωi . We

obviously, we need a KZG commitment to

rewrite:

Φi,j(X) =

Lj(X)
X − ωi =

D(X)
D(cid:48)(ωj)(X − ωj)(X − ωi)
where D(X) = (cid:81)
i∈[0,n)(X − ωi) = X n − 1, D(cid:48)(ωj) =
nω−j. Therefore, we only need a KZG commitment ζi,j
to Υi,j(X) =
(X−ωj )(X−ωi) . Based on the partial fraction
decomposition, we obtain:

D(X)

(25)

Υi,j(X) = d1 · D(X)/(X − ωj)

+d2 · D(X)/(X − ωi) (26)

In the traditional authentication system, certiﬁcates expire
at the time of expiry, or when it is revoked by being added
to Certiﬁcate Revocation List(CRL). In our scheme, a vehicle
revokes its certiﬁcate by redeﬁning the value corresponding
to the key (cid:103)Eid with a smart contract.

A vehicle revokes its certiﬁcate under several circum-
stances:1) The vehicle lost its online secret key; 2)The ve-
hicle’s certiﬁcate expired; 3) The vehicle wants to leave the
network. Before a vehicle revokes its certiﬁcate, it has to be
re or provide an update. A veriﬁcation process should be
included to prevent the vehicle from being revoked mali-
ciously. The vehicle’s certiﬁcate can be revoked by master
key and online key pairs in our scheme. The revocation
message V is initiated upon a receiving request from a given
vehicle. If the vehicle loses its online secret key, it must
revoke the certiﬁcate using the master key and signature.

Algorithm 3 :Certiﬁcate revocation procedure.
Input: V.
Output: ⊥.
1: V ← (Eid, revoke, npk, σrevoke
2: if Search((cid:103)Eid) == Cer then
3: if Check(f pk, σf sk, Eid) == 1 &&
t

, Texpired)

Check(npkt, σrevoke
Check(npkt

?= npk) then

t

, Eid||Texpired) == 1 &&

4: Mapping((cid:103)Eid → revoke) /*mapping the (cid:103)Eid to revoke

*/

5: else return ⊥;
6: end if
7: end if

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

Step 3-1: The vehicle intending to revoke its certiﬁcate

sends a tuple V to RSU.

V = (Eid, npkt, revoke, σrevoke

t

, Texpired)

(27)

The vehicle signs Eid and Texpired with its old online secrete
key,

σrevoke
t

= sig(Eid(cid:107)Texpired, nskt)

(28)

Step 3-2: First, RA leverages the function Search to check
whether the vehicle’s Eid is registered or revoked before.

Step 3-3: RSU veriﬁes whether the revocation is initiated
by the owner of the previous certiﬁcate by validating the
signature σrevoke

.

t
Check(npkt, σrevoke

t

, Eid(cid:107)Texpired) ?= 1

(29)

Step 3-4: RA utilizes the smart contract to update the
mapping (cid:103)Eid → revoke to the blockchain state database.

It should be noted that after the certiﬁcate status
changes, the statuses of vehicle’s proof πi and global com-
mitment C will also change. Then the method of changing
the status of πi and C here is the same as the certiﬁcate
update, just set the change δ to ui.

The certiﬁcate revocation procedure is shown in Algo-
rithm 3. Unlike the existing schemes requiring a CRL list,
our scheme leverages a smart contract to check the current
status of the vehicle’s certiﬁcate. Besides, the mechanism
described in step 3-3 prevents the adversary from revoking
certiﬁcates maliciously.

6 SECURITY ANALYSIS
We assume that the adversary in our model cannot break
the standard cryptographic primitives, for instance, ﬁnding
hash collisions or forging digital signatures on ECC. Further,
the adversary cannot compromise the vehicles’ ofﬂine and
online secret keys. First, we explain how to deal with the
situations when the keys are lost. Then, we demonstrate
that our scheme is secure against attacks in blockchain
constructions considering their operations. We also prove
that our protocol proposed for the messages authentication
process in IoV can resist various attacks. Lastly, we describe
the level of privacy protection mechanism applied in our
scheme.

6.1 Security Proof

Fault-tolerance analysis: Our proposed PBAG scheme
takes advantage of the Hyperledger Fabric to realize the
blockchain construction. As we assumed in Section 4.2,
the RTAs are trusted. Thus, the fault-tolerant mechanism
ensures the security of our scheme, and the frivolous and
misbehaving registrations are hindered. Our scheme is se-
cure against attacks as deﬁned in Section 4.2, and the details
of the proof are described below.

Security in authentication. We deﬁne that attackers at
this stage target the authentication protocol in IoV. We prove
that our scheme is secure.

1) Authentication correctness and integrity:
Proof: The vehicle is authenticated in IoV. Vehicle gener-
ates the authentication tuple σ = {πA
au , gr−1, EA,
MA, m, t}. Without knowing the vehicle’s secret key nskA,
no attacker can forge 1) a valid certiﬁcate, 2) the valid

au , gu(cid:48)

au, gωA

A

11

zero-knowledge proof parameters (ui, gui, πi), 3)the veriﬁ-
cation parameters related to identity and trafﬁc messages
(EA, MA).

2) Challenges in authentication:
Proof: Consider there is a benign vehicle (i.e., possessing
an authorized certiﬁcate) maliciously forging a certiﬁcate
based on its valid key pair and trying to pass a veriﬁcation
equation successfully.

H(m||t||EA) ⊕ rB · nskB · rA · npkA

?= MA

e(C/guA

au , gr−1) = e(πA

au, gτ /gωA

au)

(30)

(31)

We assume that this malicious vehicle has a forgery cer-
tiﬁcate CerF that passes the veriﬁcation equation. To pass
the veriﬁcation equation, the vehicle needs to generate pa-
rameters (uF , guF , πF ) to construct zero-knowledge proof
corresponding to the forged certiﬁcate. However, in the au-
thentication process, the global commitment C is generated
by RTA, which is based on the total authorized certiﬁcate,
that is:

d
(cid:89)

C =

(gτ i

)si = g

(cid:80)d

i=0siτ i

= gΨ(τ )

(32)

i=0

where Ψ(X) is a polynomial of degree d ≤ n with coefﬁ-
cients s0, s1, . . . , sd in Zp. Ψ(X) is generated by Lagrange
interpolation based on (ωi, ui)i∈[0,n). Obviously, the com-
putation set of global commitment C does not contain uF ,
and the vehicle cannot change the state of C. Thus, the
vehicle cannot pass veriﬁcation of global commitment C
using parameters (uF , guF , πF ), that is:
au , gr−1) (cid:54)= e(πF

C (cid:54)= CF ⇒ e(C/guF

au, gτ /gωF

(33)

au)

3) Traceability:
Proof: In our scheme, RA can track and reveal the mali-
cious vehicles. Taking a authentication tuple and the master
secret key fsk, which outputs the Eid||t via computing the
following equation.

(cid:103)Eid||t = npkA · rA · f sk ⊕ EA

(34)

The RA can compute Eid with its secret key to identify
the vehicle with the assistance of blockchain. Consequently,
anyone cannot reveal the vehicle’s real identity without
knowing the RA’s secret key.

6.2 Privacy Analysis

It is worthy of note that our scheme predominantly intends
to preserve the privacy of the identity data. Once the ve-
hicle’s identity data is disclosed, adversaries can combine
the owners’ information with their vehicles. During V2V
authentication, we explore every step taken to showcase the
privacy-preserving property of our scheme.

Theorem 1: The proposed protocol is a non-interactive

zero-knowledge proof on authentication tuple σ

Proof: First, we prove the zero-knowledge property. The
authenticate tuple that the untrusted veriﬁer receives from
the prover is independent of the prover’s real certiﬁcate,
including parameters directly associated with the certiﬁcate,
such as Eid and npk. From the certiﬁcate, the prover can

au, gu(cid:48)

· (πau)ω. Thus, (πau, gω

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015
obtain the parameters (π, gω, gu(cid:48)
) associated with the cer-
tiﬁcate. Therefore, considering one simulator S: choosing
au = (gω)r, gu(cid:48)
random r, and set πau = (π)r−1, gω
au =
au, gu(cid:48)
gu(cid:48)
au) is distributed correctly,
and so the parameters associated with the certiﬁcate is sim-
ulated correctly. The parameters (πau, gω
au, gr−1) in the
authentication tuple σ are related to verifying whether the
vehicle is authorized in Step (2). These parameters satisfy
e(C/gu
au · gRP
. For these parameters, based on the KZG polynomial com-
mitment scheme, veriﬁer executes the veriﬁcation for global
commitment C using above bilinear pairing, that is, the
authorization veriﬁcation of prover is completed. It follows
that there exists a simulator S(cid:48) for this veriﬁcation. The
veriﬁer obtain RP via preforming Clip(r · npk), and set
au, gr−1) ?=
au = gu(cid:48)
au · gRP . The veriﬁer compute e(C/gu
gu
e(πau, gτ /gωau ). Therefore, the bilinear pairing is simulated
correctly, that is, the veriﬁcation process for the authoriza-
tion of the vehicle is completed.

au, gr−1) = e(πau, gτ /gωau), where gu

au = gu(cid:48)

au, gu(cid:48)

, πau, gω

Next, we need to prove that this protocol is a proof
of knowledge. Therefore, we can deﬁne a knowledge ex-
tractor algorithm E, given access to a prover such that
the veriﬁer’s acceptance probability is non-negligible. If the
extractor E outputs the value (π, gω, gu(cid:48)
au), such
au, gu(cid:48)
that the parameters (πau, gω
au) is valid. For a prover,
the extractor proceeds as follows: ﬁrst, it runs the extractor
for the proof of knowledge protocol, and obtain the basic
parameters (π, gω, gu(cid:48)
) from the certiﬁcate. Next, the prover
au) via πau = (π)r−1,
can obtain the parameters (πau, gω
au = (gω)r, gu(cid:48)
au = gu(cid:48)
gω
e(C/gu

au, gu(cid:48)
· (πau)ω. Then:

au, gr−1) = e(πau, gτ /gωau)
au = gu(cid:48)

(35)
au · gRP , therefore the tuple (cid:101)Pl =
au) satisﬁes the above equation and hence are
), so our extractor outputs

And based on gu
au, gu(cid:48)
(πau, gω
the blind parameters on (π, gω, gu(cid:48)
(π, gω, gu(cid:48)

, πau, gω

au, gu(cid:48)

au).

Finally, our protocol is a non-interactive authentication
scheme. There are no interaction between the prover and
veriﬁer during the authentication process, which is suitable
for the wireless scenario.

1) Anonymous:
Proof: The property of anonymity is achieved in three
ways, 1) The combined value generated based on Cer,
Eid, npk is used in the authentication process instead of
the certiﬁcate or Eid, 2) the membership public key npk
is randomized by random number r, 3)the authentication
is implemented with non-interactive zero-knowledge proof.
We can give a proof sketch for anonymity. The adversary
cannot recover certiﬁcate or Eid from the hash and truncated
value. Besides, the random number r and public key(npk)
are non-public, and the adversary cannot parse the public
key and random number from the randomized public key.
Based on the n-DHE assumption and n-SDH assumption,
the adversary cannot compute the random number or the
information to be able to tag the vehicle(e.g., ωi, ui) from
the authentication tuple.

2) Unlinkability:
Proof: The proposed scheme provides unlinkability that
no veriﬁer can tell whether two authentication tuples were
derived from the same vehicle. For the authentication tuple

au, gωA

au , gu(cid:48)

A

σ = {πA
au , gr−1, EA, MA, m, t}, each element is
generated with random number r. Obviously, the attacker
can derive evaluation proof π from the same vehicle if it
obtains the authentication tuple initiator’s secret key nsk or
breaks the n-DHE assumption.

12

6.3 Resistance to Attacks

We analyze several common attacks in IoV and illustrate
that our scheme can resist these attacks.

1) Impersonate attack.
Proof: According to the registration algorithm, the cer-
tiﬁcation posted to the blockchain is composed of a tu-
ple R=(Eid, register, npk, Texpired, σf sk). If an adversary
A tries to forge a certiﬁcate, there are several routines to
follow. First, A attempts to ﬁgure out the real ID of a
benign vehicle. The real ID is issued and reserved by the
RA after a thorough examination in our scheme. There is
no way for A to access the real ID. Second, A aims at Eid,
which is issued by RA but reserved in the vehicle’s OBU.
According to [51], a tamper-proof device installed in the
OBU is responsible for storing conﬁdential material. Third,
the RSUs usually request the RA to perform a validity check
during the registration. The fake ID and (cid:103)Eid cannot pass this
validity check. Thus, we can conclude that our scheme can
resist impersonate attacks during registration.

2) Replay attack:
Proof: An adversary A launches an attack by replaying
the critical identity information between the participants
involved in the authentication process. In our scheme,
the global polynomial commitment C = gΨ(X) is dy-
namic following each vehicle certiﬁcate’s state. Therefore,
for realizing the correspondence between the proof and
the global certiﬁcate status, the proof (e.g., πA) should
be updated before the vehicle implements the authenti-
cation process, as shown in 5.4. It is worth noting that
information required for the proof update is hidden(e.g.,
ωA). Therefore, an attacker cannot utilize the old proof to
pass the veriﬁcation based on the latest commitment and
cannot update the old proof. On the other hand, the tuple
σ = {πA
au , gr−1, EA, MA, m, t} sent by authentica-
tion launcher includes timestamp t, therefore, parameter σ
changes with t, which prevents the outdated message and
resist the replay attack.
3) Modiﬁcation attack:
Proof: According
of
au , gu(cid:48)
au , gr−1, EA, MA, m, t}
A

iﬁcation
au, gωA
{πA
the
veriﬁcation equation(31)(32). Therefore, our scheme can
resist the modiﬁcation attack.

the mod-
=

authentication

Theorem 2,

au , gu(cid:48)

au, gωA

cannot

tuple

pass

the

to

σ

A

7 PERFORMANCE EVALUATION

In this section, we evaluate the performance of our scheme
through extensive simulations, including analyzing the au-
thentication overhead and evaluating the practical viability
of our proposed scheme against the existing state-of-the-art
approaches.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

7.1 Experiment Settings

We simulate PBAG on a machine with an AMD Ryzen 7
5800H with Radeon Graphics CPU @ 3.20GHz CPU and
16GB RAM. The prototype is implemented in Hyperledger
Fabric v2.0.0 with Raft consensus, and its chaincodes are
developed in Golang [52].

Furthermore, we have two organizations, which are
RA and RTAs. RA and RTAs are utilized as endorsing
peers. Following the endorsement policy, when more than
2n + 1signatures from the endorsing peers are valid, one
transaction will be successfully committed. It is worth not-
ing that the vehicle in our scheme would be not as the
endorsing peer and have no rights to access the channels,
due to its mobility and limited computing power. In the
simulation, we construct four peer nodes belonging to two
organizations, namely org1 and org2, three order nodes,
and one client node in one channel.

In our scheme, we implement bilinear pair programs
with the MIRACL library. We construct the symmetric pair-
ing e : G × G → GT , which is built on the security level
of 80 bits. G is an additive group generated by a point ˆp
with the order ˆq, where ˆp is the prime number ˆp = 512
bits and ˆq is a 160 bits prime number. ECC is constructed
at 128 bits security level. In order to simulate the average
communication latency between RTAs and vehicles, the ns-
2.35 is used with the communication protocol IEEE 802.11p
and the routing protocol AODV.

In order to estimate time consumption of certiﬁcate
operations, we run the smart contracts with various number
of vehicles in the network scaled at10, 102, 103, and 104. In
the experiment, we combine the vehicle’s plate with VIN to
form an 18-digit number as their real ID parameter. With
this ID, we apply the crypto series library in Golang to
generate Eid and master key pairs.

7.2 Overhead of blockchain construction

We evaluate the overhead of blockchain construction by
measuring throughput of transactions in the prototype.
Throughput is deﬁned as the rate that transactions are
committed to the ledger [53]. We calculate the average
measured as throughput during the steady state of our sim-
ulations. For example, vehicle revocation is implemented
by calling the smart contract with a new transaction, which
aims to appending the revocation data to the blockchain
state database. Certiﬁcate issuance and update are similar.
Therefore, we pre-determined the transaction size to be
4kb, and the block size is set to contain 10, 25 and 40
transactions respectively. In the simulation, we set the RTA
to receive transactions at a rate of 20 to 140 per second
for write operation. The simulation results are depicted in
Figure 4. For the block with different sizes, we can observe
that throughput improves in a near-linear trend with the
transaction arrival rate increase.

7.3 Certiﬁcate Operation

We carry out simulations to estimate the time consumption
of the certiﬁcate operations in PBAG with smart contracts, as
presented in Figure 5. Speciﬁcally, Figure 5 (a) and (b) show
the time incurred for calling the issuance and updating

13

Figure 4: Transaction throughput for certiﬁcate operation in
Hyperledger Fabric.

contracts, respectively. Figure 5 (c) shows the time dura-
tion for calling revocation with different certiﬁcate scales.
All certiﬁcate operations involve validating whether the
vehicle has a legal signature and an online key. Therefore,
we simulate this veriﬁcation process additionally, and the
related results are shown in Figure 5 (d). We observe that the
data presented in each subﬁgure did not alter signiﬁcantly,
and the data is distributed in a speciﬁc interval. According
to our simulation, the average time consumption for the
contract issuance is 6.95ms, while veriﬁcation is 0.39ms.
This experimental result is due to the issuance and update
process needed to regenerate the certiﬁcate, including the
key generation process, which is relatively time-consuming.
Figure 5 indicates that by withstanding small ﬂuctuations
when between by running the smart contract multiple times
in the Fabric, and our scheme is technically feasible accord-
ing to the cost of time.

Besides, the authentication is accomplished based on
zero-knowledge proof in our scheme. There are three cru-
cial elements involved in the zero-knowledge proof pro-
tocol: certiﬁcate, proof, and global commitment. Proof and
global commitment are elements utilized to implement au-
thentication by the veriﬁer through bilinear pairing, and
both need to be updated following the state of the certiﬁ-
cate(elaborated in 5.4).

• Update of global commitment The update of global
commitment is divided into two phases, the veriﬁ-
cation of evaluation proof and the calculation of the
newest global commitment. We simulate the update
process with smart contracts as shown in Figure
6(e). We can observe that time duration curves of
both phases have an upward trend as numbers of
certiﬁcate update increasing. Based on the batch-
enabled mechanism, when there are 50 certiﬁcate
update records, the time overhead of veriﬁcation is
21.956ms, and the calculation of the newest global
commitment can be accomplished within 35.906ms.
• Update of evaluation proof For vehicles, the situ-
ation of proof update can be divided into two cat-
egories, local proof update and other proof update.

20406080100120140Transaction receiving rate20406080100120140Throughput(tps)Block size:10Block size:25Block size:40JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

14

(a)

(c)

(b)

(d)

Figure 5. The time duration of certiﬁcate operations. The ﬁg.(a), ﬁg.(b),ﬁg.(c) present the time duration of certiﬁcate
issuance, update, revocation, respectively. Fig. (d) presents the time overhead of veriﬁcation involved in the above
operations. The number of vehicles in the simulation scaled at 10, 102, 103, and 104.

We implement the simulation with smart contracts to
estimate the update performance, as shown in Figure
6(f). For local proof update, we can observe that
the time overhead is basically constant at 0.279ms.
Besides, the time duration curve shows an upward
trend for other proof updates as the number of proof
update records increases. The time duration is about
34.95ms when there are 50 proof update records.

7.4 Computation Cost Analysis and Comparison

Here, we analyze the computation cost of our proposed
PBAG scheme, against the state-of-the-art schemes, includ-
ing EADA [15], RCoM [16], P2BA [17]. First, we calculate
the execution time of some basic cryptographic operations
by using the MIRACL library. For the accuracy of the eval-
uation, we run the cryptographic operations 1000 times and
take the average values as the ﬁnal results. The execution
time of the necessary cryptographic parameters and the
authentication overhead of some related schemes are shown
below:

• Tbp is the time required to perform a bilinear pairing,

Tbp ≈ 3.803ms

• Th is the time required to implement the hash func-

tion, Th ≈ 0.001ms

• Tsm is the time required to implement one scalar

multiplication under G1, Tsm ≈ 0.141ms.

• Tex is time required to implement one exponentia-

tion in GT , Tex ≈ 0.138ms.

• Tmpt is time required to implement one MapTo-
Point hash operation of the bilinear pairing, Tmpt ≈
0.092ms.

For describing the authentication process accurately, we
calculate the computation cost of the various phases in the
authentication operation. First, we calculate the computa-
tion cost for generating one authentication message. For one
vehicle, it mainly needs to perform 3 exponentiation oper-
ations and 1 hash operation. Thus, the message generating
time per vehicle is 0.415 ms. Afterward, we evaluate the
performance of the RTA/RSU’s message veriﬁcation phase.
The infrastructure needs to perform 2 bilinear pairing, 2

101102103104Numbers of certificates 6.76.86.977.17.27.37.47.57.6Issuance time duration(ms)Time duration101102103104Numbers of certificates 6.56.66.76.86.977.17.27.37.47.5Update time duration(ms)Time duration101102103104Numbers of certificates 0.480.50.520.540.560.580.60.62Revocation time duration(ms)Time duration101102103104Numbers of certificates 0.360.370.380.390.40.410.420.430.440.45Verification time duration(ms)Time durationJOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

15

(e)

(f)

Figure 6. The time overhead of commitment and proof update. Fig.(e) presents the time duration of global commitment
update, and the batch veriﬁcation operation time involved in the global commitment update process. Fig.(f) presents the
time duration of local proof update(i = j) and other proof update(i (cid:54)= j).

TABLE 3: Comparison For Computational Costs

Scheme

RCoM
EADA
P2BA
Our proposal

Generate one message
7Tbp + 4Tex
2Tbp + 3Tsm + 3Tmtp
2Tbp + 11Tsm + 12Tex
3Tex + Th

For one message authentication
(2s + 6)Tbp + 7Tex
4Tbp + 3Tsm + 4Tmtp
4Tbp + 10Tsm + 10Tex
2Tbp + 2Tsm + Th

For n messages authentication
(2s + 6)nTbp + 7nTex
(3n+1+κ)Tbp +(n+2)Tsm +(3+n+κ)Tmtp
4Tbp + (6n − 1)Tsm
2Tbp + nTsm + (n + 2)Tex + TL + nTh

1 TL:The time to calculate using Lagrangian interpolation.
2 κ:number of compromised edge nodes in EADA.
3 s:number of equivalence class in RCoM.

scalar multiplication, and 1 hash operation when verifying a
single message. Thus, the authentication time per vehicle is
7.889ms. Finally, our scheme supports batch message veriﬁ-
cation, which signiﬁcantly facilitate the authentication per-
formance. We can compute that verifying 100 messages syn-
chronously needs about 36.171 ms. Therefore, our scheme
satisﬁes the requirement latency to support applications in
IoV.

Table III gives the comparison of computation overhead
among recently proposed schemes approaches including
EADA, RCoM, P2BA. The primary operations involved
in the related schemes are Tbp, Tsm, Tex and Tmtp. For
authentication with the EADA scheme, the cryptographic
operations require to perform 4 bilinear pairing operations,
3 scalar multiplication under G1, 4 MapToPoint hash oper-
ations of the bilinear pairing, respectively. Thus, the total
computation cost is 4Tbp + 3Tsm + 4Tmtp ≈ 16.003 ms. For
authentication with the RCoM scheme, the cryptographic
operations require performing 2s + 6 bilinear pairing op-
erations, 7 exponentiation under GT , respectively. Thus, the
total computation cost is (2s+6)Tbp+7Tex ≈ 38.996 ms with
number of equivalence class assumed to be 5. For authen-
tication with P2BA scheme, the cryptographic operations
require to perform 4 bilinear pairing operations, 10 scalar
multiplication under G1, 10 exponentiation under GT of the
bilinear pairing, respectively. Thus, the total computation
cost is 4Tbp + 10Tsm + 10Tex ≈ 18.002 ms. Therefore, our
scheme outperforms above at least 50.70%, 79.77%, 56.18%,

respectively, for EADA, RCoM, and P2BA.

In order to highlight the efﬁciency of the proposed
PBAG, we compare the computation times of n authen-
tication in the proposed scheme with three state-of-art
schemes, EADA, RCoM, P2BA, as shown in Figure 7. It
should be noting that TL is the time to calculate us-
ing Lagrangian interpolation, which is 0.0179ms, 0.0811ms,
0.1696ms, 0.2237ms, 0.2893ms, 0.3672ms, respectively for the
20, 40, 60, 80, 100, 120 vehicles. Speciﬁcally, taking 100 au-
thentication requirements as an example, the authentication
delay is 1180.25ms, 3899.6ms, and 99.671ms respectively
for EADA(κ=3), RCoM(s=2), P2BA. Compared with the
other three schemes, the time delay of the PBAG scheme is
36.171ms, which outperforms above at least 96.94%, 99.07%,
63.7%, respectively for EADA, RCoM and P2BA. Therefore,
the proposed scheme is more efﬁcient than the comparison
schemes.

7.5 Authentication Latency and Comparison

In this subsection, we analyze the authentication delay
based on the more complex authentication scenario that
vehicle to RTA/RSUs. We deﬁne authentication latency
containing three main parts, the computation time of the
vehicle Tgen, the message propagation time Tp, and the
computation time of the veriﬁer Tver. Therefore, the total
authentication latency is Tgen + Tp + Tver involved in the
process from the vehicle generating a message to when the
message is successfully veriﬁed. Among them, Tgen and

101520253035404550Numbers of ceritficate update58.51215.51922.526Batch verification time duration(ms)10152025303540Commitment update time duration(ms)Batch verificationCommitment update101520253035404550Numbers of proof update records00.10.20.30.40.50.6Local proof update duration(ms)051015202530354045Other proof update duration(ms)Local proof updateOther proof updateJOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

16

TABLE 4: Comparison of Authentication Message Size

Scheme

RCoM
EADA
P2BA
Our proposal

Verify a message

Verify n message

vehicle → veriﬁer

veriﬁer → vehicle

vehicle → veriﬁer

veriﬁer → vehicle

1176 bytes
452+964κ bytes
768 bytes
554 bytes

N/A
256 bytes
N/A
N/A

1176n bytes
452+964κ+580n bytes
768n bytes
554n bytes

N/A
256n
N/A
N/A

1 κ:number of edge nodes in EADA.

Figure 7: Comparison of computation cost.

Figure 8: Comparison of authentication latency at different
vehicle speeds.

Tver have been elaborated in the previous subsection. We
will analyze the calculation of Tp detailedly in the following
contents. Besides, for accurately calculating the Tp, we per-
form the simulation based on the road scenario in ns-2.35.

There are three inﬂuencing factors in the message prop-
agation process, message size, vehicle speed, and vehicle
density. First, we analyze the message size in our proposal
and related schemes. The size of message σ = {ω, u, gω, gu,
π, EA, MA, m, t} sent by vehicles is 554 bytes. Besides, we
compare message size at various stages of authentication
with related schemes, which is presented in the Table III. We
can observe that our proposal outperforms other schemes.

Second, we simulate vehicles driving at various speeds
in ns-2.35 and calculate the corresponding authentication
latency. We assume several vehicles(e.g., 20) are distributed
over different lanes, and the speed of vehicles in each lane
is roughly distributed in 5-30 m/s. Figure 8 shows that the
latency data did not alter signiﬁcantly during the simulation
process, which is good evidence that speed only slightly
affects latency.

Finally, we obtain the curve about the relationship be-
tween the average authentication latency and the trafﬁc
density through the simulation presented in Figure 9. For
various approaches, we can observe that the latency has an
upward trend with the increase in vehicle density. However,
the curve matching our scheme has the smallest slope,
which means the average latency of our proposal increases
slowly compared with the other approaches. Besides, our
scheme can authenticate 80 vehicles within 450ms in the
simulation, which is 33.8% better than P2BA, 68.8% better

Figure 9: Comparison of authentication latency at different
vehicle densities.

than EADA, 88.5% better than RCoM, respectively.

7.6 Message Loss Ratio

To better evaluate the performance of our scheme, we cal-
culate the message loss rate via simulation. The loss rate
is deﬁned as the ratio of the number of messages dropped
in the routing layer to the total number of messages sent
in communication process. Figure 10 presents the variation

20406080100120Number of vehicles101102103104Time consumption/msRCoMEADAP2BAOur proposal51015202530Average speed of vehicles (m/s)020040060080010001200Avg latency (ms)RCoMEADAP2BAOur proposal20304050607080Number of vehicles05001000150020002500300035004000Avg latency (ms)RCoMEADAP2BAOur proposalJOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

17

APPENDIX A
CALCULATE THE DERIVATIVE VALUE OF THE FUNC-
TION D(X) WHEN X=ωi

i∈[0,n)(X − ωi) = X n − 1 and ϕ(X) =

let D(X) = (cid:81)
D(X)/(X − ωi), then:
D(cid:48)(X) =

(cid:88)

D(X)/(X − ωj)

j∈[0,n)
⇒ D(cid:48)(ωi) =

(cid:89)

(ωi − ωj) ·

(cid:89)

(ωi − ωr) = ϕ(ωi)

j∈[0,i)

r∈(i,n)

(36)

Thus, rewriting ϕ(X)
X n − 1
X − ωi = (ωi)0X n−1 + (ωi)1X n−2 + (ωi)2X n−3

ϕ(X) =

Figure 10: Average message loss ratio at different vehicle
densities and speeds.

+ . . . + (ωi)n−2X 1 + (ωi)n−1X 0 =

n−1
(cid:88)

(ωi)γX n−1−γ

γ=0

(37)

of the message loss rate following the number and average
speed of vehicles increase. When the vehicle density is 150,
the message loss rate of our scheme is controlled within
9.6%, while in PBAS [10] is about 15%. Accordingly, our
approach outperforms those schemes and satisﬁes the com-
munication requirements in IoV.

Finally, evaluating D(cid:48)(ωi) at X = ωi:
D(cid:48)(ωi) = ϕ(ωi) = (ωi)0ωi(n−1) + (ωi)1ωi(n−2)

+ (ωi)2ωi(n−3) + . . . + (ωi)n−2ω(i·1) + (ωi)n−1ω(i·0)

n−1
(cid:88)

(ωi)γωi(n−1−γ) = nωi(n−1) = n(ωi·n−i) = nω−i

=

γ=0

(38)

Thus, we can compute D(cid:48)(ωi) = nω−i.

8 CONCLUSION AND FUTURE WORK

APPENDIX B
MULTIPLE EVALUATIONS PROVING AND PARAMETER
ci DERIVATION PROCESS

Research on addressing the authentication latency issue
caused by veriﬁers having to connect with the blockchain
network in advance. We propose a privacy-preserving
blockchain-based authentication protocol(PBAG), where RA
broadcasts a public global commitment based on all valid
certiﬁcates. Instead of querying certiﬁcates stored in the
blockchain, the vehicle can be efﬁciently proved to be an au-
thorized user by utilizing this global commitment through
bilinear pairing. Moreover, our scheme can prevent vehicles
equipped invalid certiﬁcates from accomplishing the au-
thentication, thus avoiding the time-consuming for checking
Certiﬁcate Revocation List (CRL). Finally, we conduct the
extra theoretical analysis and simulation to indicate privacy
properties and performance of the proposed scheme. In
future work, we plan to implement our scheme in an auto-
mated way, and facilitate it to interface with real-world data.
Besides, based on the proposed scheme, how to achieve
batch authentication in V2V is also one of our focus.

The ﬁrst is the multiple evaluation proving process. We
have known ci = 1/D(cid:48)(ωi), πI = (cid:81)
i and qI (X) =
Ψ(X)−R(X)
DI (X)

i∈I πci

. That is:

e(C/gR(τ ), g) = e(πI , gDI (τ ))
(cid:89)

⇔ e(C/gR(τ ), g) = e(

πci
i , gDI (τ ))

i∈I
⇔ e(g, g)Ψ(τ )−R(τ ) = e(

(cid:89)

(gqi(τ ))ci, gDI (τ ))

i∈I
(cid:80)

⇔ e(g, g)Ψ(τ )−R(τ ) = e(g
⇔ e(g, g)Ψ(τ )−R(τ ) = e(gqI (τ ), gDI (τ ))
⇔ Ψ(τ ) = qI (τ ) · DI (τ ) + R(τ )

i∈I qi(τ )ci, gDI (τ ))

(39)

According to the construction of multiple evaluation prov-
ing. We will show the process of ﬁnding πI that satisﬁes the

030102520020Average message loss rate %17520150Average speed of vehicles (m/s)30125Number of vehicles151007510502550(45)

(46)

(47)

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

conditions of the multiple evaluation proving:

q(X) =

Ψ(X) − R(X)
DI (X)
1
DI (X)
(cid:88)

= Ψ(X)

− R(X)

= Ψ(X)

1
I (ωi)(X − ωi)

D(cid:48)

i∈I

1
DI (X)

From the properties of Lagrangian polynomials, we know
that Ψ(xi) = yi for the point (xi, yi). Therefore, for the
Ψ(X) = 1, this implies:

18

ΨI (X) = DI (X)

(cid:88)

yi
I (xi)(X − xi)
(cid:88)

=

D(cid:48)

i∈I
1
DI (X)

1
I (xi)(X − xi)

D(cid:48)

i∈I

Ψ(X)=1
=====⇒

− [DI (X)

(cid:88)

i∈I

ui
I (ωi)(X − ωi)

D(cid:48)

] ·

1
DI (X)

1
DI (X)

=

1
i∈I (X − xi)

(cid:81)

=

(cid:88)

i∈I

ci ·

1

X − xi , ci =

1
I (xi)

D(cid:48)

=

=

=

(cid:88)

i∈I
(cid:88)

i∈I
(cid:88)

i∈I

Ψ(X)
D(cid:48)I (ωi)(X − ωi)

(cid:88)

−

i∈I

ui
I (ωi)(X − ωi)

D(cid:48)

1
I (ωi)
1
I (ωi)

D(cid:48)

D(cid:48)

·

Ψ(X) − ui
X − ωi

· qi(X)

Thus, we can compute ci = 1/D(cid:48)
i∈I πci
i .

I (ωi) and πI =

(cid:81)

(40)

APPENDIX C
UPDATE OF FUNCTION Ψ(X)
Without loss of generality, we assume the polynomial Ψ(X)
is generated for given points (xi, yi)i∈[0,n) and satisﬁes
Ψ(xi) = yi. Based on the Lagrangian interpolation, we can
obtain:

Ψ(X) =

(cid:88)

Li(X)yi

(41)

where Li(X) = (cid:81)

j∈[0,n),j(cid:54)=i
We assume the change in yi is δ,then:

i∈[0,n)

X−xj
xi−xj

.

Ψ(cid:48)(X) =

(cid:88)

k∈[0,i)

Lk(X)yk

+ Li(x)(yi + δ) +

(cid:88)

k∈(k,n)

Lk(X)yk

=

(cid:88)

k∈[0,i)

Lk(X)yk

+ Li(x)yi + Li(x)δ +

(cid:88)

k∈(k,n)

Lk(X)yk

(cid:88)

=

k∈[0,n)
= Ψ(X) + Li(x) · δ

Lk(X)yk + Li(x) · δ

(42)
Finally, we can obtain the newest Ψ(cid:48)(X) = Ψ(X)+δ ·Li(x).

APPENDIX D
PARTIAL FRACTION DECOMPOSITION
We deﬁne DI (X) =

(cid:89)

(X − xi), I ⊂ [0, n) and rewriting

the Lagrange polynomial for interpolating Ψ(X) given all
(Ψ(xi))i∈I :

i∈I

Li(X) =

(cid:89)

j∈I,j(cid:54)=i

X − xj
xi − xj =

DI (X)
I (xi)(X − xi)

D(cid:48)

(43)

where D(cid:48)
Noting that D(cid:48)

I (X) = (cid:80)

j∈I DI (X)/(X − xj).

I is the derivative of DI (X) [40]. There-

fore, we can rewrite the Lagrange interpolation as:

ΨI (X) =

(cid:88)

i∈I

Li(X)yi = DI (X)

(cid:88)

i∈I

yi
I (xi)(X − xi)

D(cid:48)

(44)

we can compute the DI (X) in O(|I|log2|I|) time, D(cid:48)

I (X)
in O(|I|) time and evaluated at all xi in O(|I|log2|I|) time
[40]. Thus, all ci’s can be computed in O(|I|log2|I|) time.
When the I = [0, n), we have:
(cid:89)

(X − xi) = X n − 1 and D(cid:48)(xi) = nx−i

DI (X) =

i∈[0,n)

The derivation details of the formula are in Appendix A.

Therefore, we can compute any ci in O(1) time.

REFERENCES

[1]

[2]

[3]

[4]

[5]

[6]

[7]

[8]

[9]

IEEE, 2017, pp. 410–426.

S. Matsumoto and R. M. Reischuk, “Ikp: Turning a pki around
with decentralized automated incentives,” in 2017 IEEE Sympo-
sium on Security and Privacy (SP).
Z. Liu, J. Weng, J. Guo, J. Ma, F. Huang, H. Sun, and Y. Cheng,
“Pptm: A privacy-preserving trust management scheme for
emergency message dissemination in space-air-ground inte-
grated vehicular networks,” IEEE Internet of Things Journal, 2021.
J. Ma, T. Li, J. Cui, Z. Ying, and J. Cheng, “Attribute-based secure
announcement sharing among vehicles using blockchain,” IEEE
Internet of Things Journal, vol. 8, no. 13, pp. 10 873–10 883, 2021.
Z. Liu, J. Weng, J. Ma, J. Guo, B. Feng, Z. Jiang, and K. Wei,
“Tcemd: A trust cascading-based emergency message dissemina-
tion model in vanets,” IEEE Internet of Things Journal, vol. 7, no. 5,
pp. 4028–4048, 2019.
X. Zhou, M. Luo, P. Vijayakumar, C. Peng, and D. He, “Efﬁcient
certiﬁcateless conditional privacy-preserving authentication for
vanets,” IEEE Transactions on Vehicular Technology, 2022.
X. Li, H. Zhang, Y. Ren, S. Ma, B. Luo, J. Weng, J. Ma, and
X. Huang, “Papu: Pseudonym swap with provable unlinkability
based on differential privacy in vanets,” IEEE Internet of Things
Journal, vol. 7, no. 12, pp. 11 789–11 802, 2020.
C. Adams and S. Lloyd, Understanding public-key infrastructure:
concepts, standards, and deployment considerations.
Sams Publish-
ing, 1999.
C. Zhang, R. Lu, X. Lin, P.-H. Ho, and X. Shen, “An efﬁcient
identity-based batch veriﬁcation scheme for vehicular sensor net-
works,” in IEEE INFOCOM 2008-The 27th Conference on Computer
Communications.
L. Wu, J. Fan, Y. Xie, J. Wang, and Q. Liu, “Efﬁcient location-based
conditional privacy-preserving authentication scheme for vehicle
ad hoc networks,” International Journal of Distributed Sensor Net-
works, vol. 13, no. 3, p. 1550147717700899, 2017.

IEEE, 2008, pp. 246–250.

[10] Y. Liu, L. Wang, and H.-H. Chen, “Message authentication using
proxy vehicles in vehicular ad hoc networks,” IEEE Transactions
on vehicular technology, vol. 64, no. 8, pp. 3697–3710, 2014.
[11] C. D. Jung, C. Sur, Y. Park, and K.-H. Rhee, “A robust conditional
privacy-preserving authentication protocol in vanet,” in Interna-
tional Conference on Security and Privacy in Mobile Information and
Communication Systems. Springer, 2009, pp. 35–45.

[12] R. Shrestha, R. Bajracharya, and S. Y. Nam, “Blockchain-based
message dissemination in vanet,” in 2018 IEEE 3rd International
Conference on Computing, Communication and Security (ICCCS).
IEEE, 2018, pp. 161–166.

[13] Z. Lu, Q. Wang, G. Qu, H. Zhang, and Z. Liu, “A blockchain-
based privacy-preserving authentication scheme for vanets,”
IEEE Transactions on Very Large Scale Integration (VLSI) Systems,
vol. 27, no. 12, pp. 2792–2801, 2019.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

19

[34] Y. Yao, X. Chang, J. Miˇsi´c, V. B. Miˇsi´c, and L. Li, “Bla: Blockchain-
assisted lightweight anonymous authentication for distributed
vehicular fog services,” IEEE Internet of Things Journal, vol. 6,
no. 2, pp. 3775–3784, 2019.

[35] C. Wang, J. Shen, J.-F. Lai, and J. Liu, “B-tsca: Blockchain assisted
trustworthiness scalable computation for v2i authentication in
vanets,” IEEE Transactions on Emerging Topics in Computing, vol. 9,
no. 3, pp. 1386–1396, 2020.

[38]

[37]

[36] K. Xue, X. Luo, Y. Ma, J. Li, J. Liu, and D. S. Wei, “A distributed
authentication scheme based on smart contract for roaming ser-
vice in mobile vehicular networks,” IEEE Transactions on Vehicular
Technology, 2022.
S. Son, J. Lee, Y. Park, Y. Park, and A. K. Das, “Design of
blockchain-based lightweight v2i handover authentication pro-
tocol for vanet,” IEEE Transactions on Network Science and Engi-
neering, 2022.
J. Von Zur Gathen and J. Gerhard, Modern computer algebra.
Cambridge university press, 2013.
J.-P. Berrut and L. N. Trefethen, “Barycentric lagrange interpola-
tion,” SIAM review, vol. 46, no. 3, pp. 501–517, 2004.
J. von zur Gathen and J. Gerhard, “Fast polynomial evaluation
and interpolation,” Modern Computer Algebra, pp. 295–310, 2013.
[41] A. Kate, G. M. Zaverucha, and I. Goldberg, “Constant-size com-
mitments to polynomials and their applications,” in International
conference on the theory and application of cryptology and information
security. Springer, 2010, pp. 177–194.

[39]

[40]

[42] A. Tomescu, I. Abraham, V. Buterin, J. Drake, D. Feist, and
D. Khovratovich, “Aggregatable subvector commitments for
stateless cryptocurrencies,” in International Conference on Security
and Cryptography for Networks. Springer, 2020, pp. 45–64.
S. Bowe, A. Gabizon, and I. Miers, “Scalable multi-party com-
putation for zk-snark parameters in the random beacon model,”
Cryptology ePrint Archive, 2017.

[43]

[44] A. Joux, “A one round protocol for tripartite difﬁe–hellman,” in
International algorithmic number theory symposium. Springer, 2000,
pp. 385–393.

[45] A. J. Menezes, T. Okamoto, and S. A. Vanstone, “Reducing elliptic
curve logarithms to logarithms in a ﬁnite ﬁeld,” iEEE Transactions
on information Theory, vol. 39, no. 5, pp. 1639–1646, 1993.

[46] L. Armstrong, “Dedicated short range communications (dsrc)

home,” 2002.

[47] L. Yang, J. Ma, Z. Liu, and R. Zheng, “A trusted authenti-
cation scheme for wireless networks using direct anonymous
attestation,” in 2012 Fourth International Conference on Intelligent
Networking and Collaborative Systems.

IEEE, 2012, pp. 279–285.

[48] D. Johnson, A. Menezes, and S. Vanstone, “The elliptic curve
digital signature algorithm (ecdsa),” International journal of infor-
mation security, vol. 1, no. 1, pp. 36–63, 2001.

[49] D. Feist and D. Khovratovich, “Fast amortized kate proofs,”

[50]

[51]

“Composable

https://github.com/khovratovich/Kate, 2020.
and
J. Camenisch, M. Dubovitskaya, K. Haralambiev,
anonymous
M. Kohlweiss,
credentials: Deﬁnitions
in
International Conference on the Theory & Application of Cryptology
& Information Security, 2015.
I. T. S. Committee et al., “Ieee standard for wireless access in
vehicular environments–security services for applications and
management messages,” IEEE Std, pp. 1609–2, 2013.

and modular

constructions,”

and practical

[52] Golang, url:https://golang.google.cn/, 2022.
[53] P. Thakkar, S. Nathan, and B. Viswanathan, “Performance bench-
marking and optimizing hyperledger fabric blockchain plat-
form,” in 2018 IEEE 26th international symposium on modeling,
analysis, and simulation of computer and telecommunication systems
(MASCOTS).

IEEE, 2018, pp. 264–276.

[14] V. De Maio, R. Brundo Uriarte, and I. Brandic, “Energy and proﬁt-
aware proof-of-stake ofﬂoading in blockchain-based vanets,” in
Proceedings of the 12th IEEE/ACM International Conference on Utility
and Cloud Computing, 2019, pp. 177–186.

[15] A. Yang, J. Weng, K. Yang, C. Huang, and X. Shen, “Delegating
authentication to edge: A decentralized authentication archi-
tecture for vehicular networks,” IEEE Transactions on Intelligent
Transportation Systems, 2020.

[16] Y. Wang, Y. Ding, Q. Wu, Y. Wei, B. Qin, and H. Wang, “Privacy-
preserving cloud-based road condition monitoring with source
authentication in vanets,” IEEE Transactions on Information Foren-
sics and Security, vol. 14, no. 7, pp. 1779–1790, 2018.

[17] X. Feng, Q. Shi, Q. Xie, and L. Wang, “P2ba: A privacy-preserving
protocol with batch authentication against semi-trusted rsus in
vehicular ad hoc networks,” IEEE Transactions on Information
Forensics and Security, vol. 16, pp. 3888–3899, 2021.
J. Shao, X. Lin, R. Lu, and C. Zuo, “A threshold anonymous
authentication protocol for vanets,” IEEE Transactions on vehicular
technology, vol. 65, no. 3, pp. 1711–1720, 2015.

[18]

[19] P. Vijayakumar, V. Chang, L. J. Deborah, B. Balusamy, and
P. Shynu, “Computationally efﬁcient privacy preserving anony-
mous mutual and batch authentication schemes for vehicular ad
hoc networks,” Future generation computer systems, vol. 78, pp.
943–955, 2018.

[20] L. Wei, J. Cui, Y. Xu, J. Cheng, and H. Zhong, “Secure and
lightweight conditional privacy-preserving authentication for se-
curing trafﬁc emergency messages in vanets,” IEEE Transactions
on Information Forensics and Security, vol. 16, pp. 1681–1695, 2020.
[21] M. Azees, P. Vijayakumar, and L. J. Deboarh, “Eaap: Efﬁcient
anonymous authentication with conditional privacy-preserving
scheme for vehicular ad hoc networks,” IEEE Transactions on
Intelligent Transportation Systems, vol. 18, no. 9, pp. 2467–2476,
2017.

[22] C. Zhang, X. Xue, L. Feng, X. Zeng, and J. Ma, “Group-signature
and group session key combined safety message authentication
protocol for vanets,” IEEE Access, vol. 7, pp. 178 310–178 320,
2019.
I. S. Association et al., “Ieee standard for wireless access in
vehicular environments-security services for applications and
management messages,” IEEE Std, pp. 1609–2, 2016.

[23]

[24] D. Chaum and E. v. Heyst, “Group signatures,” in Workshop on
the Theory and Application of of Cryptographic Techniques. Springer,
1991, pp. 257–265.

[25] R. Lu, X. Lin, H. Zhu, P.-H. Ho, and X. Shen, “Ecpp: Efﬁcient
conditional privacy preservation protocol for secure vehicular
communications,” in IEEE INFOCOM 2008-The 27th Conference
on Computer Communications.

IEEE, 2008, pp. 1229–1237.

[26] F. Callegati, W. Cerroni, and M. Ramilli, “Man-in-the-middle
attack to the https protocol,” IEEE Security & Privacy, vol. 7, no. 1,
pp. 78–81, 2009.

[27] A. Joshi, P. Gaonkar, and J. Bapat, “A reliable and secure ap-
proach for efﬁcient car-to-car communication in intelligent trans-
portation systems,” in 2017 International Conference on Wireless
Communications, Signal Processing and Networking (WiSPNET).
IEEE, 2017, pp. 1617–1620.

[29]

IEEE, 2018, pp. 1–3.

[28] M. Asghar, R. R. M. Doss, and L. Pan, “A scalable and efﬁcient
pki based authentication protocol for vanets,” in 2018 28th In-
ternational Telecommunication Networks and Applications Conference
(ITNAC).
S. Tangade, S. S. Manvi, and P. Lorenz, “Decentralized and
scalable privacy-preserving authentication scheme in vanets,”
IEEE Transactions on Vehicular Technology, vol. 67, no. 9, pp. 8647–
8655, 2018.
S. Wang, K. Mao, F. Zhan, and D. Liu, “Hybrid conditional
privacy-preserving authentication scheme for vanets,” Peer-to-
Peer Networking and Applications, vol. 13, no. 5, pp. 1600–1615,
2020.
S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,”
Decentralized Business Review, p. 21260, 2008.

[31]

[30]

[32] R. Sharma and S. Chakraborty, “Blockapp: using blockchain for
authentication and privacy preservation in iov,” in 2018 IEEE
Globecom Workshops (GC Wkshps).

IEEE, 2018, pp. 1–6.

[33] Q. Feng, D. He, S. Zeadally, and K. Liang, “Bpas: Blockchain-
assisted privacy-preserving authentication system for vehicular
ad hoc networks,” IEEE Transactions on Industrial Informatics,
vol. 16, no. 6, pp. 4146–4155, 2019.

