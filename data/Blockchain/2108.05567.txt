JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

1

Combinatorial Resources Auction in Decentralized
Edge-Thing Systems Using Blockchain and
Differential Privacy

Jianxiong Guo, Xingjian Ding, and Weijia Jia, Fellow, IEEE

1
2
0
2

g
u
A
2
1

]
I

N
.
s
c
[

1
v
7
6
5
5
0
.
8
0
1
2
:
v
i
X
r
a

Abstract—With the continuous expansion of Internet of Things
(IoT) devices, edge computing mode has emerged in recent years
to overcome the shortcomings of traditional cloud computing
mode, such as high delay, network congestion, and large resource
consumption. Thus, edge-thing systems will replace the classic
cloud-thing/cloud-edge-thing systems and become mainstream
gradually, where IoT devices can ofﬂoad their tasks to neigh-
boring edge nodes. A common problem is how to utilize edge
computing resources. For the sake of fairness, double auction
can be used in the edge-thing system to achieve an effective
resource allocation and pricing mechanism. Due to the lack of
third-party management agencies and mutual distrust between
nodes, in our edge-thing systems, we introduce blockchains to
prevent malicious nodes from tampering with transaction records
and smart contracts to act as an auctioneer to realize resources
auction. Since the auction results stored in this blockchain-
based system are transparent, they are threatened with inference
attacks. Thus in this paper, we design a differentially private
combinatorial double auction mechanism by exploring the ex-
ponential mechanism such that maximizing the revenue of edge
computing platform, in which each IoT device requests a resource
bundle and edge nodes compete with each other to provide
resources. It can not only guarantee approximate truthfulness
and high revenue, but also ensure privacy security. Through
necessary theoretical analysis and numerical simulations, the
effectiveness of our proposed mechanisms can be validated.

Index Terms—Internet of Things, Blockchain, Smart contract,
Edge-thing system, Combinatorial auction, Truthfulness, Rev-
enue, Differential privacy.

I. INTRODUCTION

W ITH the rapid improvement of electronic equipment

and communication infrastructure, Internet of Things
(IoT) has become a hot research topic connecting the physical
environment to the syberspace system. IoT devices are ubiq-
uitous and play an important role in our lives, such as mobile
phones, cemeras, automobiles, and trafﬁc sensors. In recent
years, the number of IoT devices has exploded. Based on a
survey conducted by Cisco [1] [2], they predicted that more
than 75 billion IoT devices would go into operation before
2025. These IoT devices produce a large amount of data. How

J. Guo and W. Jia are with the BNU-UIC Institute of Artiﬁcial Intelli-
gence and Future Networks, Beijing Normal University at Zhuhai, Zhuhai,
Guangdong 519087, China, and also with the Guangdong Key Lab of AI
and Multi-Modal Data Processing, BNU-HKBU United International Col-
lege, Zhuhai, Guangdong 519087, China. (e-mail: jianxiongguo@bnu.edu.cn;
jiawj@uic.edu.cn)

X. Ding are with the School of Software Engineering, Beijing University

of Technology, Beijing 100124, China. (e-mail: dxj@bjut.edu.cn)

(Corresponding author: Jianxiong Guo.)
Manuscript received April 19, 2005; revised August 26, 2015.

to utilize these data to better serve the society has attracted
more and more attention in academia and industry, and has
driven a series of downstream industries such as smart home,
smart supply chain, healthcare, and product traceability.

It is not easy to process these data to produce valuable
information, which usually involves some artiﬁcial intelligence
algorithms or data mining techniques. It requires IoT devices
to have a certain amount of computing power and storage
space. However, most IoT devices are lightweight, which can
only temporarily store a small amount of data and perform
simple operations. In the traditional cloud-thing system, IoT
devices rely on the computing power, network bandwidth, and
storage space of cloud centers to implement their own func-
tions. Usually, cloud centers are far away from IoT devices,
which leads to high energy consumption and network deley. In
addition, it also faces the threat of the single point of failure [3]
[4], making this system more unreliable. As a result, the cloud-
edge-thing system came into being. There are a lot of edge
servers distributed in every corner of the space evenly. These
edge nodes provide nearby IoT devices with the resources they
need. Thus, IoT devices can ofﬂoad their tasks to neighboring
edge nodes instead of cloud centers. Although it overcomes
some defects, especially long distance transmission, in cloud-
thing systems, the cloud-edge-thing system does not get rid of
the control of cloud centers completely.

Therefore, we focus on the edge-thing system in this paper,
which is completely decentralized without the management
in the resources allocation
of a third-party authority. But
between IoT devices and edge nodes, they do not trust each
other due the conﬂict of interests, in which both entities want
to maximize their own revenues. Moreover, the transaction
records stored in edge nodes may be maliciously tampered
with. With this in mind, blockchain [5] is an opportunity to
provide a secure peer-to-peer (P2P) network. Blockchain is
a distributed ledger for storing real-time data generated by
all active participants in the system. It can not only achieve
complete decentralization, but also has the characteristics of
tampering-proof and transparency. The secure P2P network
proved by blockchain can be used as a supplementary tech-
nique to design our edge-thing system.

In order to reﬂect the real market ﬂuctuation and relation-
ship between supply and demand, auction has been proven to
be effective, so that IoT devices can get the resources they
need at acceptable prices and edge nodes can beneﬁt from
providing resources. In this paper, we design a blockchain-
based edge-thing system, where the resources allocation and

 
 
 
 
 
 
JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

2

pricing are realized by a combinatorial double auction mech-
anism. Here, IoT devices are buyers requesting resources and
edge nodes are sellers providing resources. Because we have
adopted a completely decentralized architecture, there is no
suitable entity to act as an auctioneer responsible for executing
the auction mechanism and deciding auction results. In our
system, the auction mechanism is stored in the smart contract
that is built in the blockchain, which can be run automatically
when receiving all requests from IoT devices and edge nodes.
Different IoT devices have different requirements for each
resource type. For example, a device in smart home needs
more computing power to implement intelligent algorithms,
but a trafﬁc monitor needs more storage space to store road
condition data. Each IoT device ususally request a bundle of
resources according to its task and gives a total bid, which
is the reason for the formulation of a combinatorial double
auction. The core of designing an auction mechanism is to
easure the truthfulness, so as to encourage buyers/sellers to
bid/ask their true valuations.

Since allocation and pricing results are transparent in the
blockchain, it exsits possible risk of exposing bids/asks of
buyers/sellers. The bidding/asking information is their privacy,
which may contain some commercial secrets. Adversaries
could infer others’ bids/asks through comparing the public
auction results in multiple rounds by changing its bid/ask. This
is known as “inference attack” [6] [7]. In order to prevent
players from being trouble by inference attacks, differential
privacy [8] is a promising technology with strong thoeretical
guaranatees that can be introduced in designing auction mech-
anisms. Even though several differential privacy-based auction
mechanisms have been proposed in previous literature [9] [6]
[10] [11] [12] [13], they are very different from the auction
in our edge-thing systems. First, our auction is combinatorial
because every buyer gives a total bid for a bundle of resources.
Second, each edge nodes can only provide a limited amount
of resource for each resource type. Third, the resource request
of an IoT device can only be satisﬁed by one edge node,
and the distance between them is constrained. Consider the
real situation in edge-thing systems, we design a differentially
private combinatorial double auction mechanism by exploring
the exponential mechanism that selects the ﬁnal pricing with
a probability proportional to its corresponding revenue. On
the premise of ensuring that the privacy is not exposed, it
achieves individual rationality, budget balance, computational
efﬁciency, and expected truthfulness at the same time. Our
main contributions can be summarized as follows.

1) We propose an novel edge-thing architecture based on
blockchain technology to achieve complete decentral-
ization and tempering-proof, in which the built-in smart
contract acts as a central coordinator.

2) To model a real edge-thing system, we formulate a
combinatorial double auction model to achieve resources
allocation between IoT devices and edge nodes.

3) We introduce the exponential mechanism in differential
privacy to our auction model so as to ensure privacy
protection, and also achieve the expected truthfulness
and approximately high revenue.

4) We conduct extensive simulations to evaluate the per-
formances of our proposed mechanisms. The simulation
results verify our theoretical analysis.

Orgnizations: In Sec. II, we survey the-state-of-art work. In
Sec. III, we introduce the edge-thing system model and deﬁne
our problem formally. In Sec. IV, we introduce the differential
privacy describe the mechasnism design in detial. In Sec. V,
we give the proofs of related properties. Finally, we evaluate
our mechanisms by numerical simulations in Sec.VI and show
the conclusions in Sec. VII.

II. RELATED WORK

In recent years, the related research on resources allocation
has attract wide attention in academia. Auction theory has been
used in a series of related areas, such as mobile crowdsens-
ing [14] [15] and energy trading [16] [17]. In mobile edge
computing environment, Sun et al. [18] proposed a double
auction mechanism to allocate computing power between IoT
devices and edge nodes, where IoT devices can purchase
computing power from edge nodes. Habiba et al. [19] put
forward a reverse auction framework in mobile edge comput-
ing based on position, which aimed at maximizing the utility
of edge servers. Peng et al. [20] designed a multiattribute-
based double auction mechanism in vehicular edge computing,
where the matching is determined by both price and non-price
factors. However, a trusted auctioneer is essential to realize
the resources allocation by auction mechanisms, especially for
double auction. In P2P distributed edge network, there is no
entity suitable acting as an auctioneer that can guarantee the
security and reliability.

The emergence of blockchain technology has potentially
solved this dilemma. It maintains a decentralized ledger, and
can work as the auctioneer by combining smart contracts. Sun
et al. [21] revised their previous work in [18] by introducing
blockchain to achieve a trustworthy platform. Jiao et al. [22]
proposed an auction-based market model for the allocation
of computing resources between miners and edge servers.
Ding et al. [23] [24] attempted to build a secure blockchain-
based IoT system by attracting more IoT devices to purchase
computing power from edge servers and participate in the
consensus process, where they adopted a multi-leader multi-
follower Stackelberg game. Guo et al. [25] proposed a secure
and efﬁcient charging scheduling system based on DAG-
blockchain and double auction mechanism. However, all the
transaction models in these works are based on the allocation
for a kind of resource. They did not consider the allocation
of multiple resources. Moreover, they did not consider the
potential risk of privacy disclosure.

Because of the public auction results, the sensitive informa-
tion of participants is at risk of being exposed. To prevent
the adversary from inferring players’ sensitive information,
Dwork et al. [8] founded the theory of differential privacy.
McSherry et al. [9] ﬁrst applied the differential privacy to
auction mechanism and made a complete theoretical analysis.
Chen et al. [26] combined the differential privacy with double
spectrum auction design in order to maximize social welfare
approximately. Guo et al. [12] revised their work in [25]

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

3

by introducing differential privacy to avoid the leakage of
bidding/asking information. Besides, differential privacy has
been used in mechanism design of spectrum auction [6]
[7], smart grid [27] [28], and mobile crowdsensing [29].
However, applying differential privacy to our combinatorial
double auction model is very different from the existing work.

III. EDGE-THING SYSTEM MODEL

In this section, we introduce the system model of the edge-
thing architecture and how to integrate the blockchain as an
effective technique to overcome the potential security threats
in detail. Here, we consider the time can be discretized into
time slots, denoted by T = {t1, t2, t3, · · · }, where each time
slot is equal in length. The following discussion is within a
time slot, including the combinatorial auction mechanism and
consensus process. Finally, the objective function and problem
deﬁnition can be formulated.

A. System Description

In the existing intelligent environment, there are a large
number of IoT devices deployed in every corner of our
lives, which undertake their own different
tasks, such as
trafﬁc monitoring, health recording, navigation, and machine
learning training. Because of their lightweight nature (lim-
ited resources) and delay sensitivity, these IoT devices can
attempt to ofﬂoad their tasks to adjacent edge nodes. In order
to quantify the demand for different resources, we assume
there are k kinds of resources in our system, denoted by
R = {r1, r2, · · · , rk}, where each ri ∈ R represents a certain
kind of resource such as computation, memory, storage, or
network bandwidth.

i , d2

A certain number of edge nodes can form an intermediate
layer between the more powerful cloud center and mobile
IoT devices. In our system, there are m IoT devices, denoted
by TD = {T D1, · · · , T Di, · · · , T Dm}. These IoT devices
have limited computing power and storage space, thus not
enough to achieve their goals. In order to upgrade the quality
of service, the resources that are required by the IoT device
T Di can be expressed as Di = {d1
i , · · · , dk
i ∈
i ∈ Di indicates that IoT device T Di re-
[dmin, dmax]. Each dz
quires at least dz
i units of the resource rz. Similarly, there are n
edge nodes, denoted by EN = {EN1, · · · , ENj, · · · , ENn}.
These edge nodes are responsible for providing different re-
sources to IoT devices. The resources that are provided by the
edge node ENj can be expressed as Hj = {h1
j , h2
j },
j ∈ Hj indicates that edge
where hz
node ENj provides at most hz
j units of the resource rz.
Therefore, each resource-limited IoT device has to broadcast
its resource request to the edge service provider in the hope
of getting the resources it wants.

j ∈ [hmin, hmax]. Each hz

i }, where dz

j , · · · , hk

As mentioned earlier, in each time slot, edge nodes make
a proﬁt by selling resources and IoT devices complete their
tasks by buying resources, which has created a double auction
problem. In a double auction model, all players have to submit
their requests to the auctioneer. There is an important question
about who will assume the role of auctioneer. A natural idea is
to let the cloud center be the auctioneer. However, this deviates

Fig. 1. The architecture of our edge-thing system based on blockchain and
smart contract.

from our original intention of getting rid of the cloud centers.
There are several potential security threats when trying out a
centralized cloud center, which can be summarized as follows.
1) Vulnerability: the cloud center is attacked or damaged
by malicious attackers or unexpected disasters. It will
cause the single point of failure.

2) Insecurity: the bidding/asking information submitted by
players could be leaked or tampered with. It will cause
data loss and privacy leakage.

3) Unreliability: the cloud center is biased, and colludes
with some nodes for their own beneﬁts. It will cause
the auction results to be unfair.

4) Communication security and network delay: the cloud
center is physically far away from IoT devices and edge
nodes, which will cause potential security hazards and
network delays in the transmission process.

In order to overcome the above drawbacks and achieve the
decentralization, the blockchain and smart contract are used
as ancillary techniques to prevent tampering and establish a
credible system among unfamilar nodes without the third-party
authority. The transaction between IoT devices and edge nodes
are stored in the blockchain. Figure 1 exhibits the architecture
of our blockchain-enabled edge-thing system. Shown as Figure
1, IoT devices are light nodes that do not store the blockchain
but participate in the transaction. Edge nodes are full nodes
that store the complete blockchain and perform the consensus
process to add new blocks to the blockchain. Moreover, a smart
contract is deployed on the blockchain, which plays the role of
auctioneer by implementing information interaction between
IoT devices and edge nodes, and executing the predeﬁned
auction mechanism automatically. Such a system does not
rely on a third-party authority to act the auctioneer, and also

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

4

inherits the advantages of decentralization, temper resistance,
and transparency in the blockchain.

B. Combinatorial Auction Mechanism

In order to simulate the real situation, we assume that each
IoT device submitted its resource request in a bundled way,
which formulates a combinatorial auction. For example, an
IoT device needs to complete a task of training a deep learning
model, thereby it wants to buy computation and memory from
edge nodes. It is more reasonable to give a total bid according
to its valuation of this task instead of bidding each resource
separately. Furthermore, we ﬁnd that this task can only be
accomplished at one edge node. In other words, computing
and memory resources must come from the same edge node,
which increases the limitation of our model.

j

of each seller ENj is denoted by uEN
. After the auctioneer
determines a clearing price vector p and its corresponding
allocation matrix X, the utilities of all losing players are
equal to zero. Namely, we have uT D
i = 0 for each losing
buyer T Di ∈ TD if (cid:80)n
j = 0 for each
losing seller ENj ∈ EN if (cid:80)m
i=1 xij = 0. The utility of
each winning buyer is the difference between its valuation
and payment toward its requested resources. In summary, for
each buyer T Di ∈ TD, we have

j=1 xij = 0 and uEN

uT D
i = vi −

n
(cid:88)

j=1

xij ·

k
(cid:88)

z=1

pz · dz
i .

(2)

The utility of each winning seller if the difference between
the total payment from buyers and total cost. In summary, for
each seller ENj ∈ EN, we have

In a typical auction, there are three key roles, namely, the
buyer, seller, and auctioneer. In our system, IoT devices are
buyers, thus buyer set is TD; edge nodes are sellers, thus
seller set is EN; and a smart contract is the auctioneer. In
each time slot, the buyer requests a set of resources and gives
the maximum price it is ready to pay to the edge node for
buying these resources. For each buyer T Di ∈ TD, its bidding
information can be denoted by Bi = (Di, bi, dmi) where the
bi ∈ [vmin, vmax] is the total bid (maximum buying price) to
buy a bundle of resources Di, and the dmi is the maximum
tolerant distance from the edge node providing resources to
it. For each seller ENj ∈ EN, its asking information can be
denoted by Aj = (Hj, aj), where the aj = (a1
j ) is
the asking vector where each az
j ∈ aj is the unit ask (minimum
selling price) per resource rz. The bidding information of
buyers and asking information of sellers are submitted to the
auctioneer, therefore this auction can be deﬁned as

j , · · · , ak

j , a2

(cid:16)

Ω =

{Bi}T Di∈TD , {Aj}ENj ∈EN

(cid:17)

.

(1)

j , c2

j , · · · , ck

Besides, for each buyer T Di ∈ TD, its valuation for obtaining
the bundle of resources Di is vi ∈ [vmin, vmax]. For each seller
ENj ∈ EN, it has a cost vector cj = (c1
j ) where
each cz

j ∈ [cmin, cmax] is the unit cost per resource rz.
In each time slot, once collecting the biding and asking
information from players, the auctioneer will determine who
are winning buyers and sellers, and how to allocate resources
between them. The resource allocation is denoted by a binary
matrix X m×n, called “allocation matrix”. For each xij ∈ X,
xij = 1 if the resources requested by T Di are provided
by ENj according to the result; otherwise xij = 0. Be-
sides, the auctioneer needs to determine the clearing price
of each resource, which can be denoted by a price vector
p = (p1, p2, · · · , pk). For each pz ∈ p, it is the unit price
that buyers have to pay to get a unit of resources rz.

Remark 1. Here, we have cz
j ∈ [cmin, cmax] for each resource
rz ∈ R and the price vector p ∈ [cmin, cmax]k. For simplicity,
we denoted by Θ = [cmin, cmax] in the following description.

C. Problem Formulation

According to the above deﬁnitions, we assume that the
and the utility

utility of each buyer T Di is denoted by uT D

i

uEN
j =

k
(cid:88)

(pz − cz

j ) ·

z=1

m
(cid:88)

i=1

xij · dz
i .

(3)

Because the requested resources of a buyer must come from
the same seller, there is a constraint that (cid:80)n
j=1 xij ≤ 1 for
each buyer T Di ∈ TD.

The result of an auction depends on its objective. In this
system, we aim at maximizing the revenue of edge computing
platform. The corresponding optimization problem can be
summarized as to maximize the accumulated utility of all edge
nodes, which is shown as the following problem:

max

s. t.

n
(cid:88)

j=1
n
(cid:88)

j=1
m
(cid:88)

i=1
n
(cid:88)

(cid:34) k

(cid:88)

(pz − az

j ) ·

z=1

(cid:35)

xij · dz
i

m
(cid:88)

i=1

xij ≤ 1, ∀T Di ∈ TD

xij · dz

i ≤ hz

j , ∀rz ∈ R, ∀ENj ∈ EN

xij · δij ≤ dmi, ∀T Di ∈ TD

j=1
xij ∈ {0, 1}, ∀T Di ∈ TD, ∀ENj ∈ EN.

(4)

(4a)

(4b)

(4c)

(4d)

where δij is the transmission distance between buyer T Di
and seller ENj. Constraint (4a) represents the many-to-one
relationship from IoT devices to an edge node. Constraint
(4b) states that the total consumption of each kind of resource
rz cannot be larger than the maximum amount hz
j that can
be provided by an edge node ENj. Constraint (4c) implies
that the distance between an IoT device T Di and the edge
node that provides it with resources cannot be larger than
the maximum distance allowed by this IoT device. This
optimization problem can be classiﬁed as an integer linear
programming problem, thus it is NP-hard.

IV. MECHANISM DESIGN

In this section, we ﬁrst introduce basic principles of de-
signing an effective combinatorial auction mechanism. Due
the transactions in
to the use of blockchain technology,
this system become transparent. That is to say, all auction

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

5

results, including winners and clearing price, will be made
public, which makes the system face the threat of inference
attack. Therefore, we introduce the differential privacy into
our mechanism design to avoid accidental disclosure of users’
bidding/asking information.

A. Design Rationales

An effective auction mechanism has to satisfy the following
four properties: individual rationality, budget balance, compu-
tational efﬁciency, and truthfulness.

Deﬁnition 1 (Individual Rationality). An auction is individ-
ually rational if and only if the utilities of all players are
non-negative. In our auction Ω, we have uT D
i ≥ 0 for each
j ≥ 0 for each seller T Nj ∈ TN,
buyer T Di ∈ TD and uEN
where uT D

are deﬁned in (2) and (3).

and uEN

i

j

Deﬁnition 2 (Budget Balance). An auction is budget balanced
if and only if the auctioneer is proﬁtable. In our auction Ω,
that is

n
(cid:88)

(cid:34) k

(cid:88)

m
(cid:88)

(cid:35)

(pz − az

j ) ·

xij · dz
i

≥ 0.

(5)

j=1

z=1

i=1

Deﬁnition 3 (Computational Efﬁciency). The auction result
can be obtained in polynomial time.

In an auction, players could manipulate their bids/asks in a
strategical sense in order to win the auction. The truthfulness
is a concept that encourages players in an auction to bid/ask
according to their valuations/costs strictly. However in some
cases, it is difﬁcult to reach an exact truthfulness. Thus, we
can consider an approximate truthfulness instead, called γ-
truthfulness [30], which ensures there is no one gaining more
than γ utility when bidding/asking truthfully.

Deﬁnition 4 (γ-truthfulness). An auction is approximately
truthful
if and only if each player bids/asks truthfully is
approximate to one of its dominant strategies. In our auction
Ω, for each buyer T Di ∈ TD, we have
(vi, Ω−i)(cid:3) ≥ E (cid:2)uT D

(bi, Ω−i)(cid:3) − γ

E (cid:2)uT D

(6)

i

where Ω−i is other players’ strategies except T Di. For each
seller ENj ∈ EN, we have
E (cid:2)uEN

(cj, Ω−j)(cid:3) ≥ E (cid:2)uEN

(aj, Ω−j)(cid:3) − γ

(7)

j

i

j

where Ω−j is other players’ strategies except ENj.

When we discuss the truthfulness in our auction, we assume
that the resquested bundle Di submitted by the buyer and the
total resources Hj submitted by the seller are all believable
because they can be monitored. Due to the truthfulness, no
player is motivated to manipulate its strategy to gain more
utility, which makes the strategic decision of players easier
and guarantees a fair competitive environment.

by changing its own bid/ask in continuous auction rounds
and analyzing the relavant auction results. With the help of
other players’ strategies, the attacker is able to make decisions
in their favor and increase its beneﬁts, thus undermining the
fairness. To prevent this kind of threat, we choose to design a
differentially private auction mechanism. Differential privacy
is a technique that makes the attacker not distinguish between
two neighboring inputs with high probability [8]. Two datasets,
s = (s1, s2, · · · , si, · · · ) and s(cid:48) = (s1, s2, · · · , s(cid:48)
i, · · · ), are
neighboring if and only if they have exactly one different
element. For convenience, we denote by the bids of all
buyers b = (b1, b2, · · · , bm) and the asks of all sellers
A = (a1, a2, · · · , an). The deﬁnition of differential privacy
is shown as follows.

Deﬁnition 5 (Differential Privacy). We simplify our auction
mechanism as a function M (·) that maps input bids b and
input asks A to a clearing price p. The mechanism M (·) gives
ε-differential privacy if and only if, for any two neighboring
inputs (b, A) and {(b(cid:48), A) or (b, A(cid:48))}, we have

Pr[M (b, A) = p] ≤ exp(ε) · Pr[(M (b(cid:48), A) = p]

Pr[M (b, A) = p] ≤ exp(ε) · Pr[(M (b, A(cid:48)) = p]

(8)

(9)

where the constant ε is privacy budget.

The privacy budget is a parameter for controlling the degree
of privacy protection that a mechanism gives. Generally speak-
ing, the smaller the privacy budget, the stronger the privacy
protection. By introducing the differential privacy into our
auction mechanism, the change of a player’s bid/ask will not
signiﬁcantly affect the ﬁnal clearing price. Thus, it prevents
us from inference attacks through manipulating strategies and
analyzing auction results.

Exponential mechanism [8] is one of the mainstream meth-
ods to realize practical differential privacy. It depends on
an “score” function Q(·) that maps input/output pairs to
scores. The score function in our auction can be deﬁned as
Q((b, A), p), where a candidate output is more likely to be
chosen if its score is higher. Thus, the exponential mechanism
can be deﬁned as follows.

Deﬁnition 6 (Exponential Mechanism). Given an output
p ∈ Θk, a score function Q(·), and a privacy budget ε, the
exponential mechanism M (b, A) selects p as its output with
a probability that is proportional to its score εQ((b, A), p).
Thus, we have

Pr[M (b, A) = p] ∝ exp

(cid:18) εQ((b, A), p)
2∆Q

(cid:19)

(10)

where ∆Q is the sensitivity of score function Q(·). That is
the largest difference of their sorces for any two neighbor-
ing inputs (b, A) and {(b(cid:48), A) or (b, A(cid:48))}, which can be
denoted by ∆Q = maxp max(b,A),(b(cid:48),A(cid:48)){|Q((b, A), p) −
Q((b(cid:48), A), p)|, |Q((b, A), p) − Q((b, A(cid:48)), p)|}.

B. Differential Privacy

The blockchain applied in our system can only ensure the
security at the physical level, but it cannot prevent inference
attacks. A curious player can infer other players’ strategies

C. Algorithm Design and Description

The design goal of our auction mechanism is to maximize
the revenue of edge computing platform approximately, but

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

6

j=1(cmax − cmin) · (cid:80)k

z=1 hz
j

Algorithm 1 DPAM
Input: ({Bi}T Di∈TD, {Aj}ENj ∈EN), ε, Θ
Output: X p, p
1: Initialize ∆R = (cid:80)n
2: for each p ∈ Θk do
3:
4:
5:
6:
7:
8:

// Winning candidate determination
Initialize xij = 0 for each xij ∈ X p
Initialize TDc ← ∅
for each T Di ∈ TD do
z=1 pz · dz

i ≤ bi then
TDc ← TDc ∪ {T Di}

if (cid:80)k

z=1 dz

2 ≥ · · ·

} where hz
j

(cid:48) = hz

j ∈ Hj

i for each rz ∈ R, δij ≤ dmi, and

1 ≥ (cid:80)k

(cid:48)

(cid:48), h2
j

z=1 dz

(cid:48), · · · , hk
j

end if
end for
Sort the TDc s.t. (cid:80)k
// Assignment
Initialize {h1
j
for each T Di ∈ TDc do
Initialize ENc,i ← ∅
for each ENj ∈ EN do
(cid:48) ≥ dz
if hz
j
(cid:80)k
z=1(pz − az
ENc,i ← ENc,i ∪ {ENj}

j ) · dz

i ≥ 0 then

end if
end for
if ENc,i (cid:54)= ∅ then

9:
10:
11:
12:
13:

14:
15:
16:
17:

18:
19:
20:
21:
22:
23:

ENj∗ ← arg minENj ∈ENc,i{δij}
for each rz ∈ R do
(cid:48) ← hz
(cid:48) − dz
j∗
i

hz
j∗
end for
xij∗ ← 1

end if
end for

24:
25:
26:
27:
28:
29: R((b, A), p) = (cid:80)n
30: end for
31: // Pricing
32: Select a p ∈ Θk according to the selection distribution:

z=1(pz − az

i=1 xijdz
i ]

j=1[(cid:80)k

j ) (cid:80)m

Pr[M (b, A) = p] =

33: return X p, p

exp( εR((b,A),p)

)

(cid:80)

p(cid:48) ∈Θk exp

2∆R
(cid:16) εR((b,A),p(cid:48) )
2∆R

(cid:17)

achieve ε-differential privacy, γ-truthfulness, individual ratio-
nality, budget balance, and computational efﬁciency at the
same time. The mechanism can be divided into three stages,
winning candidate determination, assigment, and pricing. The
procedure is shown in Algorithm 1.

In the winning candidate determination, we ﬁrst select a
subset of TD as winning buyer candidates, which is denoted
by TDc ⊆ TD. Given a price vector p ∈ Θk, we have T Di ∈
TDc if and only if it satisﬁes

k
(cid:88)

z=1

pz · dz

i ≤ bi.

(11)

Then, we sort the set of winning buyer candidates TDc in
a descending order according to their amount of requested
resources. For each buyer T Di ∈ TDc, its amount of requested
resources is deﬁned as (cid:80)k
i . Thus, we sort TDc =
z=1 dz

{T D1, T D2, · · · } where they satisfy (cid:80)k
2 ≥
· · · deﬁnitely. Next, for each buyer T Di ∈ TDc, we need to
determine its winning seller candidates, which is denoted by
ENc,i ∈ EN. We have ENj ∈ ENc,i if and only if it satisﬁes
three conditions.

1 ≥ (cid:80)k

z=1 dz

z=1 dz

1) Its remaining resources H(cid:48)

j are sufﬁcient. In other words,

we have hz
j

i for each rz ∈ R.
2) Its distance from T Di is close enoguh. Thus, we have

(cid:48) ≥ dz

δij ≤ dmi.

Here, we have (cid:80)k

3) It is proﬁtable by providing resources to buyer T Di.
z=1(pz − az) · dz
Conditon (1) and (2) is obvious. If Condition (3) cannot be
satisﬁed, providing resources for T Di by ENj (xij = 1) will
lead to a decrease in the objective value.

i ≥ 0.

Given a buyer T Di ∈ TDc, we can get its winning seller
candidates ENc,i. If |ENc,i| ≥ 1, how can we select the
best one to provide resources? In the assignment stage, we
can think about it in two directions. The ﬁrst strategy is to
consider load balancing, and we try our best to arrange the
edge node with more idle resources to provide service. The
second strategy is to consider saving network bandwidth, and
we try our best to arrange the edge node that is closest to the
target buyer T Di. Because an edge node can provide a variety
of resources, how to quantify ”idle resources” is difﬁcult.
Thus, we use the second strategy here, where we select an
ENj∗ ∈ ENc,i that satisﬁes

ENj∗ = arg min

ENj ∈ENc,i

{δij}

(12)

to provide resources to the buyer T Di.

From the above process, we can obtain winning buyers and
winning sellers, and their corresponding allocation matrix X
given a price vector p. The next pricing stage is to determine
which price vector p ∈ Θk we select. This pricing process
comes from both the uniform pricing [31] and the exponential
mechanism. Given a price vector p, it generates an allocation
matrix X p, then we can calculate the corresponding revenue
of the platform as (4), denoted by

R((b, A), p) =

n
(cid:88)

(cid:34) k

(cid:88)

j=1

z=1

(pz − az

j ) ·

(cid:35)

xij · dz
i

.

(13)

m
(cid:88)

i=1

We make this platform revenue as the score of price p. The
sensitivity of score function R(·) can be formulated as

∆R =

n
(cid:88)

j=1

(cmax − cmin) ·

k
(cid:88)

hz
j

(14)

z=1
i=1 xij ·dz

j ≤ cmax −cmin and (cid:80)m

since pz −az
j . Then, we
repeat the above process to calculate platform revenues under
all possible price p ∈ Θk. To determine the ﬁnal pricing, we
deﬁne the probability distribution of price vectors as follows.

i ≤ hz

Pr[M (b, A) = p] =

exp

(cid:17)

(cid:16) εR((b,A),p)
2∆R
(cid:16) εR((b,A),p(cid:48))
2∆R

(cid:80)

p(cid:48)∈Θk exp

(cid:17)

(15)

where R((b, A), p) is deﬁned in (13) and ∆R is deﬁned in
(14). Given all possible price p ∈ Θk and their scores, in

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

7

the pricing stage, it randomly select a price vector p with the
probability Pr[M (b, A) = p] shown as (15).

V. THEORETICAL ANALYSIS

In this section, we describe the theoretical analysis of
how our proposed mechanism DPAM, shown as Algorithm
1 satisﬁes desirable properties.

Theorem 1. The DPAM achieves ε-differential privacy.
Proof. Given two neighboring inputs (b, A) and (b(cid:48), A), the
mechanism M randomly select a clearing price p from Θk.
Thus, the probability ratio of their corresponding probability
selected by the M is shown as follows.

((vi, Ω−i), p) = uT D

i
the T Di will be not

have uT D
wise,
auction deﬁnitely. Thus, we have uT D
uT D
i

((bi, Ω−i), p) = 0.

((bi, Ω−i), p); Other-
i
in TDc, which loses the
((vi, Ω−i), p) ≥

i

The T Di /∈ TDc if it bids truthfully. There are two sub-

cases we need to concern:

• bi > vi: If (cid:80)k

z=1 pz · dz

i ≤ bi can be satisﬁed, the T Di
will be in TDc. If it can be assigned an edge node in the
assignment stage, its utilty will be uT D
((bi, Ω−i), p) =
vi − (cid:80)k

i
((vi, Ω−i), p).

i < 0 = uT D

z=1 pz · dz

• bi < vi: The T Di will be not

in TDc as well,
which loses the auction deﬁnitely. Thus, we have
uT D
i

((vi, Ω−i), p) = uT D

((bi, Ω−i), p) = 0.

i

i

Pr[M (b, A) = p]
Pr[M (b(cid:48), A) = p]

exp

(cid:17)

exp

(cid:16) εR((b,A),p)
2∆R
(cid:16) εR((b,A),p(cid:48))
p(cid:48)∈Θk exp
2∆R
(cid:18) ε[R((b, A), p) − R((b, A), p)]
2∆R

(cid:17) /

(cid:80)

p(cid:48)∈Θk exp
(cid:19)

·

=

(cid:80)

= exp

(cid:17)

(cid:16) εR((b(cid:48),A),p)
2∆R
(cid:16) εR((b(cid:48),A),p(cid:48))
2∆R

(cid:80)

p(cid:48)∈Θk exp

(cid:80)

p(cid:48)∈Θk exp
(cid:80)

(cid:17)

·

(cid:16) ε
2

≤ exp

(cid:16) εR((b(cid:48),A),p(cid:48))
2∆R
(cid:16) εR((b,A),p(cid:48))
2∆R

(cid:17)

(cid:17)

p(cid:48)∈Θk exp
(cid:80)

p(cid:48)∈Θk exp
(cid:80)

≤ exp

(cid:17)

(cid:16) ε
2

· exp

= exp(ε).

(cid:17)

(cid:16) ε[R((b,A),p(cid:48))+∆R]
2∆R
(cid:16) εR((b,A),p(cid:48))
2∆R

(cid:17)

(cid:17)

·

(cid:16) ε
2

p(cid:48)∈Θk exp

(cid:80)

p(cid:48)∈Θk exp

(cid:16) εR((b,A),p(cid:48))
2∆R
(cid:16) εR((b,A),p(cid:48))
2∆R

(cid:17)

(cid:17)

By symmetry, we have Pr[M (b, A) = p]/ Pr[M (b(cid:48), A) =
p] ≥ exp(−ε). According to Deﬁnition 5, the DPAM is ε-
differentially private to buyers.

Given two neighboring inputs (b, A) and (b, A(cid:48)), by similar

induction procedure as buyers, we have

Pr[M (b, A) = p]/ Pr[M (b, A(cid:48)) = p] ≤ exp(ε).

the DPAM is ε-differentially private to sellers, and

Thus,
Theorem 1 has been proven.

To achieve the γ-truthfulness eventually, we ﬁrst introduce

the following two lemmas as a foreshadowing.

Lemma 1. Given a clearing price p ∈ Θk, for each buyer
T Di ∈ TD, the DPAM achieves

uT D
i

((vi, Ω−i), p) ≥ uT D

i

((bi, Ω−i), p).

(16)

Proof. The T Di ∈ TDc if it bids truthfully. There are two
sub-cases we need to concern:

• bi > vi: The T Di will be in TDc as well. According to
the winner candidate determination and assignment, the
auction result to the T Di will not change. Thus, we have
uT D
i

((vi, Ω−i), p) = uT D

((bi, Ω−i), p).

i

If (cid:80)k

i ≤ bi can be satis-
the T Di will be in TDc as well. Thus, we

z=1 pz · dz

• bi < vi:

ﬁed,

From the above, we always have uT D

((vi, Ω−i), p) ≥

i

uT D
i

((bi, Ω−i), p), and Lemma 1 has been proven.

Lemma 2. Given a clearing price p ∈ Θk, for each buyer
ENj ∈ EN, the DPAM achieves

(cid:17)

uEN
j

((cj, Ω−j), p) ≥ uEN

j

((aj, Ω−j), p).

(17)

Proof. First, “aj > cj” implies there is at least one element in
j > cz∗
these vectors satisfying az∗
j ≥ cz
j
for each rz ∈ R\{rz∗ }. Second, we denoted by xij ∈ X
the allocation when a seller asks truthfully and ¯xij ∈ ¯X the
allocation when a seller asks untruthfully.

and others satisfy az

j

Consider the seller ENj ∈ EN, there are two sub-cases we

need to concern:

• aj > cj: When xij = 1, the auction result will be ¯xij =
i ≥ 0 can be satisﬁed;
((cj, Ω−j), p) ≥

1 as well if (cid:80)k
otherwise ¯xij = 0. Thus, we have uEN
j
uEN
((aj, Ω−j), p) because xij ≥ ¯xij.
j

z=1(pz − az) · dz

z=1(pz − cz) · dz

• aj < cj: When xij = 1, the auction result will be ¯xij = 1
as well. When xij = 0 and (cid:80)k
i ≥ 0, the
auction result to the ¯xij = 0 will not change according to
the assignment. However, when xij = 0 and (cid:80)k
z=1(pz −
i < 0, it is possible to happen (cid:80)k
cz) · dz
z=1(pz − cz) ·
dz
i ≥ 0, and leading to ¯xij = 1 if δij is the minimum
one among this buyer’s winning seller candidates. The
utility gained from T Di less than zero. Thus, we have
uEN
j

((cj, Ω−j), p) ≥ uEN

((aj, Ω−j), p).

j

From the above, we always have uEN

((cj, Ω−j), p) ≥

j

uEN
j

((aj, Ω−j), p), and Lemma 2 has been proven.

Theorem 2. The DPAM achieves γ-truthfulness.
Proof. Given two neighboring inputs (b, A) and (b(cid:48), A), for
any buyer T Di ∈ TD, we assume that vi ∈ b and bi ∈ b(cid:48).
Thus, we have
E (cid:2)uT D
i
(cid:88)

(vi, Ω−i)(cid:3)
Pr[M (b, A) = p] · uT D

((vi, Ω−i), p)

=

i

p∈Θk

≥ exp(−ε) ·

(cid:88)

p∈Θk

Pr[M (b(cid:48), A) = p] · uT D

i

((bi, Ω−i), p)

= exp(−ε) · E (cid:2)uT D
≥ (1 − ε) · E (cid:2)uT D
≥ E (cid:2)uT D

i

i

i

(bi, Ω−i)(cid:3)
(bi, Ω−i)(cid:3)

(bi, Ω−i)(cid:3) − ε · vmax.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

8

(aj, Ω−j)(cid:3) − ε · (cmax − cmin) · k · hmax.

OP T ≤ (cmax − cmin) · n · k · hmax

(20)

For any buyer T Di ∈ TD, we have E[uT D
(bi, Ω−i)] ≤
z=1 dz
maxT Di∈TD{uT D
i } ≤
vmax. Thus, we can conclude that the DPAM achieves ε·vmax-
truthfulness to buyers.

} ≤ vmax −cmin ·minT Di∈TD{(cid:80)k

i

i

Given two neighboring inputs (b, A) and (b, A(cid:48)), for any
seller ENj ∈ EN, we assume that cj ∈ A and aj ∈ A(cid:48).
Similarly as the above, we have
(cj, Ω−j)(cid:3)

E (cid:2)uEN
≥ E (cid:2)uEN

j

j

For any seller ENj ∈ EN, we have E[uEN
(cj, Ω−j)] ≤
j
} ≤ (cmax − cmin) · (cid:80)k
z=1 hz
maxENj ∈EN{uEN
j ≤ (cmax −
cmin)·k·hmax. Thus, we can conclude that the DPAM achieves
ε · (cmax − cmin) · k · hmax-truthfulness to sellers.

j

Giving γ = max{ε · vmax, ε · (cmax − cmin) · k · hmax}, the

DPAM achieve γ-truthfulness.

Theorem 3. The DPAM achieves individual rationality.

Proof. According to Theorem 2, no player has the motivation
to bid/ask untruthfully. We can consider bi = vi for each buyer
T Di ∈ TD and aj = cj for each seller ENj ∈ EN. Based on
the winning candidate determination, each winning buyer T Di
must have (cid:80)k
i ≥ 0. Based
on the assignment, each winning seller ENj that provides
resources to buyer T Di must have (cid:80)k
i ≥ 0,
which means that providing resources to an IoT devices always
bring positive returns. Thus, its utility uEN

i ≤ bi, thus its utility uT D

z=1(pz − az) · dz

z=1 pz · dz

j ≥ 0.

Theorem 4. The DPAM achieves budget balanced.

Proof. The utilities of all edge nodes are positive according
to Theorem 3, thus the sum of them (budget) (cid:80)n
is
greater than zero as well.

j=1 uEN
j

Theorem 5. The DPAM does not achieve computational
efﬁciency.

Proof. The main loop to traverse all possible price vectors
p ∈ Θk contains |Θk| iterations. For each iteration, the dom-
inant step in winning candidate determination is to sort TDc,
which has at most m elements. Thus, sorting TDc is bounded
by O(m log m). Then, in the assignment, it takes O(n) for
each buyer T Di ∈ TDc. Thus, its running time is bounded by
O(mn). The total time complexity of Algorithm 1 is bounded
by O((mn + m log m) · |Θk|). Therefore, the running time
increases exponentially with k instead of polynomial time.

Next, we need to calculate the expected performance of our
proposed mechanism. Based on (13), the expected revenue of
edge computing platform can be expressed as

E[R(b, A)] =

(cid:88)

p∈Θk

Pr[M (b, A) = p] · R((b, A), p).

(18)

To achieve the approximation ratio of the DPAM, we ﬁrst
introduce the following lemma.

Lemma 3. Let OP T be the optimal revenue by solving the
problem deﬁned in (4) and OP T ∗ = maxp∈Θk {R((b, A), p)}
be the maximum revenue obtained by the winning candidate

determination and assignment process of Algorithm 1. Then,
we have

F (Θ) · OP T ≤ OP T ∗ ≤ OP T

where we denoted by F (Θ) =
factor of OP T .

maxp∈Θk {R((b,A),p)}
(cmax−cmin)·n·k·hmax

(19)

as a

Proof. Because the OP T is globally optimal, we must have
OP T ≥ OP T ∗. Based on (4), we have

since each edge node provides at most k · hmax units of
resources and there are total n edge nodes. According to the
deﬁnition of OP T ∗, we have

OP T ∗ = max
p∈Θk

{R((b, A), p)}

≥

maxp∈Θk {R((b, A), p)}
(cmax − cmin) · n · k · hmax

· OP T

= F (Θ) · OP T

since the relationship (20) exists.

In order to achieve the truthfulness, the returned revenue is
not optimal even though there is no differential privacy. This
difference can be bounded by F (Θ). After introducing the
differential privacy, the revenue will be damaged further.

Theorem 6. The expected revenue of edge computing platform
E[R(b, A)] achieved by DPAM and the optimal revenue OP T
satisﬁes that E[R(b, A)] ≥

F (Θ) · OP T −

6∆R
ε

(cid:18)

· ln

e +

εOP T |Θk|
2∆R

(cid:19)

.

(21)

Proof. Let OP T ∗ = maxp∈Θk {R((b, A), p)} be the max-
imum revenue returned by the DPAM. For a small con-
stant t ≥ 0, we deﬁne four sets, which are St = {p :
R((b, A), p) > OP T ∗ − t}, ¯St = {p : R((b, A), p) ≤
OP T ∗ − t}, S2t = {p : R((b, A), p) > OP T ∗ − 2t}, and
¯S2t = {p : R((b, A), p) ≤ OP T ∗ − 2t}. Thus, we have
Pr[M (b, A) ∈ ¯S2t] ≤

≤

=

=

=

Pr[M (b, A) ∈ ¯S2t]
Pr[M (b, A) ∈ St]
(cid:80)

p∈ ¯S2t

(cid:80)

p(cid:48) ∈Θk exp

exp( εR((b,A),p)

)

exp( εR((b,A),p)

(cid:80)

p(cid:48) ∈Θk exp

2∆R
(cid:16) εR((b,A),p(cid:48) )
2∆R
)

2∆R
(cid:16) εR((b,A),p(cid:48) )
2∆R
(cid:17)

(cid:17)

(cid:17)

(cid:16) εR((b,A),p)
2∆R
(cid:16) εR((b,A),p)
2∆R
(cid:19)

(cid:80)

p∈St

(cid:80)

p∈ ¯S2t

exp

(cid:80)

p∈St

exp

| ¯S2t|
|St|

· exp

(cid:18) −εt
2∆R

.

(cid:17) ≤

| ¯S2t| · exp

|St| · exp

(cid:17)

(cid:16) ε(OP T ∗−2t)
2∆R
(cid:16) ε(OP T ∗−t)
2∆R

(cid:17)

Based on (22), we have

Pr[M (b, A) ∈ S2t] ≥ 1 −

| ¯S2t|
|St|

· exp

≥ 1 − |Θk| · exp

(cid:19)

(cid:18) −εt
2∆R
(cid:18) −εt
2∆R

(cid:19)

(22)

(23)

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

9

since Pr[M (b, A) ∈ S2t] + Pr[M (b, A) ∈ ¯S2t] = 1, | ¯S2t| ≤
|Θk|, and |St| ≥ 1. Thus, the expected revenue E[R(b, A)]
can be expressed as

E[R(b, A)] ≥

(cid:88)

p∈S2t

Pr[M (b, A) = p] · R((b, A), p)

≥ Pr[M (b, A) ∈ S2t] · (OP T ∗ − 2t)

(cid:20)
1 − |Θk| · exp

≥

(cid:19)(cid:21)

(cid:18) −εt
2∆R

· (OP T ∗ − 2t)

For any t satisfying

· ln

(cid:18) |Θk|OP T ∗
t

(cid:19)

(24)

t ≥

2∆R
ε
(cid:1) ≤
we have exp (cid:0) −εt
2∆R
(cid:18)

E[R(b, A)] ≥

1 − |Θk| ·

t

OP T ∗|Θk| . Thus,

t
OP T ∗|Θk|
2t2
OP T ∗

= OP T ∗ − 3t +

≥ OP T ∗ − 3t.
(cid:16)

By giving t = 2∆R

ln

ε

e + εOP T ∗|Θk|

2∆R

(cid:19)

· (OP T ∗ − 2t)

(25)

(cid:17)

, we have

t =

≥

≥

2∆R
ε
2∆R
ε
2∆R
ε

(cid:18)

· ln

e +

(cid:19)

εOP T ∗|Θk|
2∆R

· ln

· ln

(cid:16)

(cid:17)

ε
2∆R
(cid:19)

OP T ∗|Θk|
(cid:18) |Θk|OP T ∗
t
(cid:16)
e + εOP T ∗|Θk|
2∆R
(cid:16)

where it satisﬁes (24) because ln

t ≥ 2∆R
into (25), we have

ε

. Finally, we substitute t = 2∆R

·ln

ε

(cid:17)

≥ 1 and
(cid:17)

e + εOP T ∗|Θk|

2∆R

E[R(b, A)] ≥ OP T ∗ − 3t

≥ OP T ∗ −

6∆R
ε

(cid:18)

· ln

e +

(cid:19)

εOP T ∗|Θk|
2∆R

≥ F (Θ) · OP T −

6∆R
ε

(cid:18)

· ln

e +

εOP T |Θk|
2∆R

(cid:19)

.

Therefore, Theorem 6 has been proven.

VI. IMPLEMENTATION AND SIMULATION
Shown as Theorem 5, the running time of Algorithm 1 can
be bounded by |Θk|, which is not computationally efﬁcient.
Thus,
in this section, we ﬁrst discuss an implementation
technique to reduce the time complexity to polynomial time.
Then, we implement and evaluate our proposed mechanism by
extensive simulations.

A. Implementation Technique

In order to reduce the running time, we can learn from the
recent research in [13] to select the unit price of each resource
one by one instead of selecting the price vector. The procedure
is shown in Algorithm 2.

First of all, we deﬁne an average unit bid of each buyer
i ). The main loop that iterates

T Di ∈ TD as ¯bi = bi/((cid:80)k

z=1 dz

7:
8:
9:

10:
11:
12:

13:

14:

15:
16:

17:
18:

19:
20:
21:

22:
23:

24:
25:
26:
27:
28:

29:
30:
31:
32:

Algorithm 2 DPAM-S
Input: ({Bi}T Di∈TD, {Aj}ENj ∈EN), ε, Θ
Output: X p, p
1: Initialize ¯bi = bi/((cid:80)k
2: Initialize ε(cid:48) = ε/k
3: for (cid:96) ← 1 to k do
4:
5:
6:

Initialize ∆R(cid:96) = (cid:80)n
for each p(cid:96) ∈ Θ do

z=1 dz

i ) for each T Di ∈ TD

j=1(cmax − cmin) · (cid:80)(cid:96)

z=1 hz
j

1 ≥ (cid:80)k
z=1 dz
} where hz
j

2 ≥ · · ·
(cid:48) = hz

j ∈ Hj

i for each rz ∈ {r1, · · · , r(cid:96)}, δij ≤

z=1(pz − az) · dz
c,i ∪ {ENj}

c,i ← EN(cid:96)

i ≥ 0 then

c ← ∅

Initialize xij = 0 for each xij ∈ X (cid:96),p(cid:96)
Initialize TD(cid:96)
for each T Di ∈ TD do
z=1 pz · dz
c ← TD(cid:96)

i ≤ ¯bi · (cid:80)(cid:96)
c ∪ {T Di}

z=1 dz

i then

if (cid:80)(cid:96)
TD(cid:96)
end if
end for
Sort the TD(cid:96)
Initialize {h1
j
for each T Di ∈ TD(cid:96)
Initialize EN(cid:96)
for each ENj ∈ EN do
(cid:48) ≥ dz
if hz
j
dmi, and (cid:80)(cid:96)

z=1 dz
(cid:48)
(cid:48), · · · , h(cid:96)
j
c do

c s.t. (cid:80)k
(cid:48), h2
j

c,i ← ∅

EN(cid:96)
end if
end for
if EN(cid:96)

c,i (cid:54)= ∅ then

ENj∗ ← arg minENj ∈EN(cid:96)
for each rz ∈ {r1, · · · , r(cid:96)} do

c,i

{δij}

(cid:48) ← hz
j∗

(cid:48) − dz
i

hz
j∗
end for
xij∗ ← 1

end if
end for
R(cid:96)((b, A), p(cid:96)) = (cid:80)n

j=1[(cid:80)(cid:96)

z=1(pz − az

j ) (cid:80)m

i=1 xijdz
i ]

end for
Select a p(cid:96) ∈ Θ according to the selection distribution:
exp

(cid:19)

(cid:18)

ε(cid:48)R(cid:96) ((b,A),p(cid:96) )
2∆R(cid:96)

Pr[M (cid:96)(b, A) = p(cid:96)] =

(cid:80)

∈Θ exp

p(cid:48)
(cid:96)

(cid:18) ε(cid:48)R(cid:96) ((b,A),p(cid:48)
(cid:96)

(cid:19)

)

2∆R(cid:96)

33: end for
34: return X k,pk , p = {p1, p2, · · · , pk}

k times to check all kinds of resources. When checking the
(cid:96)-th unit price p(cid:96) ∈ Θ (1 ≤ (cid:96) ≤ k), we have known
the previous ﬁrst (cid:96) − 1 unit pricings. A partial price vector
(p1, p2, · · · , p(cid:96)−1) has been determined. Given a unit price
p(cid:96) ∈ Θ, we select partial winning buyer candidates TD(cid:96)
c ⊆ TD
such that for each buyer T Di ∈ TD(cid:96)

(cid:96)
(cid:88)

z=1

pz · dz

i ≤ ¯bi ·

c, we have
(cid:96)
(cid:88)

dz
i .

z=1

(26)

Then, it geneerates an allocation matrix X (cid:96),p(cid:96) similar to the
DPAM. The partial revenue can be calculate by

R(cid:96)((b, A), p(cid:96)) =

n
(cid:88)

(cid:34) (cid:96)

(cid:88)

(pz − az

j ) ·

j=1

z=1

(cid:35)

xij · dz
i

.

(27)

m
(cid:88)

i=1

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

10

Here, the sensitivity of partial score function R(cid:96)(·) can be
written as ∆R(cid:96) = (cid:80)n
j=1(cmax − cmin) · (cid:80)(cid:96)
j . According
to the exponential mechanism, the probability distribution of
selection a unit price p(cid:96) ∈ Θ can be deﬁned as follows.

z=1 hz

Pr[M (cid:96)(b, A) = p(cid:96)] =

exp

(cid:16) ε(cid:48)R(cid:96)((b,A),p(cid:96))
2∆R(cid:96)

(cid:17)

(cid:80)

(cid:96)∈Θ exp
p(cid:48)

(cid:16) ε(cid:48)R(cid:96)((b,A),p(cid:48)
(cid:96))

2∆R(cid:96)

(cid:17)

(28)

where ε(cid:48) = ε/k. Therefore, the time complexity is reduced
from O((mn + m log m) · |Θk|) to O((mn + m log m) · k|Θ|)
according to Algorithm 2.

Theorem 7. The DPAM-S achieves ε-differential privacy, γ-
truthfulness, individual rationality, budget balanced, computa-
tional efﬁciency. Moreover, the expected revenue E[Rk(b, A)]
achieved by DPAM-S satisﬁes that E[Rk(b, A)] ≥
(cid:19)

(cid:18)

F (Θ) · OP T −

· ln

e +

.

(29)

εOP T |Θ|
2∆R

6k∆R
ε

Proof. Based on Theorem 1 to Theorem 6 in this paper and
Theorem 7 in [13], this theorem can be proven.

There are two mechanisms, DPAM and DPAM-S, to max-
imize the revenue of edge computing platform and satisfy
desirable properties. Given a ﬁxed privacy budget ε,
the
revenue achieved by DPAM is better, but the running time
of DPAM-S is better. Which mechanism is better depends on
the requirements between performance and running time.

B. Simulation Setup

To simulate this scenario, we construct a virtual rectangular
region with 1000×1000, where there are m IoT devices and n
edge nodes distributed in this area uniformly. For each T Di ∈
TD, we deﬁne its coordinate as (xi, yi). Similarly, we have
(xj, yj) for each ENj ∈ EN. The distance δij between IoT
device T Di and edge node ENj can be written as δij =
(cid:112)(xi − xj)2 + (yi − yj)2. For each buyer T Di ∈ TD, its
bidding information contains a maximum permitted distance
dmi, which is distributed in [200
2] uniformly since
the maximum distance between IoT devices and edge nodes
is 1000

2 in this area.

2, 1000

√

√

√

Suppose the price of a unit of resources can be normalized
in [0, 1], then Θ = [cmin, cmax] = [0, 1]. To implement our
mechanisms, the ﬁrst step is to discretize this intervel [0, 1]
so as to traverse all possible price vectors in the space Θk.
Here, we deﬁne a concept called “granularity”, denoted by σ.
The σ = 0.02 implies that we divide the interval [0, 1] equally
into ﬁfty parts, that is Θ = {0, 0.02, 0.04, · · · , 0.98, 1}. The
granularity can be used as an effective method to balance
the performance and time complexity. Since Θ = [0, 1],
for each seller ENj ∈ EN and rz ∈ R
we sample az
j
uniformly in [0, 1]. Next, we assume the number of resource
types k ∈ {1, 2, · · · , 5}, and the available range of each
resource [hmin, hmax] = [0, 20]. Therefore, in the simulation,
j ∈ Hj for each seller ENj ∈ EN and rz ∈ R
we make hz
distributed in [10, 20] uniformly. Similarly, we assume the
i ∈ Di for each buyer
[dmin, dmax] = [1, 5], thus we make dz
T Di ∈ TD and rz ∈ R distributed in [1, 5] uniformly.

In the next step, we need to discuss how buyers decide their
total bids. That is, how can we sample a total bid bi for each
buyer T Di ∈ TD. According to our preceding description, the
average price per unit resource is (1 + 0)/2 = 0.5. Here, we
point out a reasonable assumption that the total bid is related
to the total demand of the buyer for resources. Thus, we can
sample the bi for each buyer T Di ∈ TD as follows:

bi = (0.5) ·

k
(cid:88)

z=1

dz
i · U (0.7, 1.3)

(30)

where the U (0.7, 1.3) is a value sampled from the interval
[0.7, 1.3] uniformly.

Due to the introduction of differential privacy, the auction
results have certain randomness. Thus, given a mechanism,
its result is the average value of 500 trials. To analyze the
performance of our mechanisms based on differential privacy,
we need a reference. For example in line 32 of Algorithm 1,
we select a p ∈ Θk such that maximizing R((b, A), p) as the
ﬁnal result. By removing the randomness (differential privacy)
of the DPAM and DPAM-S, we can deﬁne two deterministic
auction mechanisms, marked by “DTAM” and “DTAM-S”, as
references. Here, “DT” implies “deterministic”. Finally, we
select three typical metrics to evaluate the performance of our
proposed mechanisms, which are shown as follows.

1) Expected revenue of edge computing platform: it can be

computed by (18).

2) Expected satisfaction: the ratio of the number of satisﬁed

IoT devices to the total number of IoT devices.
3) Running time: the time taken to execute a trial.

C. Simulation Results and Analysis

In any time slot t ∈ T , there are m IoT devices (buyers)
and n edge nodes. Generally, the number of IoT devices is
much larger than that of edge nodes, thus we assume that
m ≥ n in our following simulations. Our task in this part
can be divided into four parts, which discuss the impact
of granularity, the number of resource types, the number of
IoT devices, and privacy budget on the performance of our
proposed mechanisms respectively.

Granularity: Figure 2 plots the revenues, satisfactions, and
running times of four different mechanisms vary with the
increase of granularity, where we assume m = 100, n = 10,
k = 3, and ε = 200. Shown as Figure 2 (a), we can see
that the revenue will decrease slightly with the increase of
granularity. This is because smaller granularity means higher
accuracy, thus we can compute more price vectors and select
the better one. Similar results are also reﬂected in users’
satisfaction. Shown as Figure 2 (c), the running time will
increase signiﬁcantly with the decrease of granularity. Here,
let us make a rough analysis. Supposing σ1 = 0.1 · σ2, we
have |Θ1| = 10 · |Θ2|. In the DPAM (DTAM), the running
time under the granularity σ1 is 10k times as much as that
under the granularity σ2. And in the DPAM-S (DPTM-S), the
running time under the granularity σ1 is 10·k times as much as
that under the granularity σ2. The simulation results in Figure
3 (c) meets our expectations in general. We have mentioned
that the granularity is a method to balance performance and

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

11

(a) (Expected) Revenue

(b) (Expected) Satisfaction

(c) Running time

Fig. 2. The performances of proposed mechanisms on different granularities, where m = 100, n = 50, k = 3, and ε = 200.

(a) (Expected) Revenue

(b) (Expected) Satisfaction

(c) Running time

Fig. 3. The performances of proposed mechanisms on different number of resourse types, where m = 100, n = 50, σ = 0.1, and ε = 200.

time complexity. Based on the results of Figure 2, we set the
granularity σ = 0.1 in the following simulations.

The number of resource types: Figure 3 plots the per-
formances vary with the increasing number of resource types,
where we assume m = 100, n = 10, σ = 0.1, and ε = 200.
Shown as Figure 3 (a), we observe that the revenue will show
an upward trend with the increase of resource types. This is
because the increase in resource types enables each edge nodes
to sell more resource units. However, there is an exception
when k = 4. From Figure 3 (b), we can see that the users’
satisfaction drops obviously when k = 4. This may be due to
the randomness of data, which makes the resource request of
IoT devices difﬁcult to realize, which leads to the decline of
their satisfaction. In addition, another important discovery is
that the gap between DPAM (DPAM-S) and DTAM (DTAM-
S) increases with the increase of resource types. Under a
larger k, the sample space Θk will become larger, resulting in
higher randomness. In other words, the probability of choosing
the optimal solution will become smaller. Shown as Figure
3 (c), the running time will increase signiﬁcantly with the
increasing number of resource types. Similarly, we suppose
k1 = k2 + 1. In the DPAM (DTAM), the running time under
the k1 is |Θ| times as much as that under the k2 since we
have |Θ|k1 = |Θ|k2 · |Θ|. And in the DPAM-S (DPTM-S),
the running time under the k1 is (k2 + 1)/k2 times as much

as that under the k2. If there are a large number of resource
types, the DPAM (DTAM) is undisirable since its running time
grows exponentially. By contrast, the running time of DPAM-S
(DTAM-S) grows linearly.

The number of IoT devices: Figure 4 plots the revenues,
satisfactions, and running times of four different mechanisms
vary with the increasing number of IoT devices, where we
assume n = 10, k = 3, σ = 0.1, and ε = 200. Shown
as Figure 4 (a) and (b), we can see that the revenue will
increase and the satisfaction will decrease with the increasing
number of IoT devices. This is because there are more feasible
buyer candidates requesting resources, so that the resources
of edge nodes can be more fully utilized. Although more
IoT devices can be satisﬁed, the total number of IoT devices
becomes much more, resulting in a decline in satisfaction.
Shown as Figure 4 (c), the running time will grow linearly
with the increasing number of IoT devices, which meets our
expectations in general.

Privacy budget: Figure 5 plots the performances vary with
the increase of privacy budget, where we assume m = 100,
n = 10, k = 3, and σ = 0.1. Shown as Figure 5
(a) and (b), we observe that
the revenue and satisfaction
remain unchanged in the DTAM and DTAM-S since they
are deterministic mechanisms and have nothing to do with
the value of privacy budget. In the DPAM and DPAM-S, the

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

12

(a) (Expected) Revenue

(b) (Expected) Satisfaction

(c) Running time

Fig. 4. The performances of proposed mechanisms on different number of edge nodes, where n = 50, k = 3, σ = 0.1, and ε = 200.

(a) (Expected) Revenue

(b) (Expected) Satisfaction

(c) Running time

Fig. 5. The performances of proposed mechanisms on different privacy budgets, where m = 100, n = 50, k = 3, and σ = 0.1.

revenue and satisfaction show upward trends with the increase
of privacy budget. Actually, the privacy budget controls the
degree of protection provided by differetial privacy. The higher
the privacy budget, the higher the revenue and satisfaction,
but the degree of privacy protection will be weakened. Shown
as Figure 5 (c), the running time remains the same with the
increase of privacy budget, which indicates that the running
time has no concern with the choice of privacy budget.

Based on the above four tasks, the main conclusions can
be summarized as follows. The granularity affects the running
time signiﬁcantly, and it is usually not necessary to choose
a very small granularity to ensure accuracy. In the case
of a large number of resource types, the DPAM (DTAM)
is not applicable due to the limitation of time complexity.
Under the condition of sufﬁcient network bandwidth, the more
participating IoT devices, the better the revenue. We need
to balance the contradiction between privacy protection and
revenue by choosing a privacy budget.

VII. CONCLUSION

In this paper, we propose an edge-thing system based on
blockchain technology and smart contract, which achieves
complete decentralization and tampering-proof. In order to
model the resources allocation and pricing between IoT de-
vices and edge nodes, we formulate a novel combinatorial

double auction problem. Then, we introduce differential pri-
vacy into the auction so as to prevent privacy leakage further.
First, we design the DPAM mechanism, and prove it satis-
ﬁes ε-differential privacy, γ-truthfulness, individual rationality,
budget balance, but not computational efﬁciency. It is not
suitable to use in the case of too many resource types.
Then, we propose the DPAM-S mechanism to reduce the time
complexity to polynomial time, and satisfy the above desired
properties as well. Finally, we built a virtual region to test
our proposed mechanisms by extensive simulations, which
conﬁrms our theoretical analysis.

ACKNOWLEDGMENT

This work is supported by Guangdong Key Lab of AI
and Multi-modal Data Processing, National Natural Science
Foundation of China (NSFC) Project No. 61872239; BNU-
UIC Institute of Artiﬁcial Intelligence and Future Networks
funded by Beijing Normal University at Zhuhai (BNU Zhuhai)
and AI-DS Research Hub, BNU-HKBU United International
College (UIC), Zhuhai, Guangdong, China.

REFERENCES

[1] J. Ni, K. Zhang, X. Lin, and X. Shen, “Securing fog computing
for internet of things applications: Challenges and solutions,” IEEE
Communications Surveys & Tutorials, vol. 20, no. 1, pp. 601–628, 2017.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

13

[2] A. A. Alli and M. M. Alam, “Secoff-fciot: Machine learning based
secure ofﬂoading in fog-cloud of things for smart city applications,”
Internet of Things, vol. 7, p. 100070, 2019.

[3] N. Z. Aitzhan and D. Svetinovic, “Security and privacy in decentralized
energy trading through multi-signatures, blockchain and anonymous
messaging streams,” IEEE Transactions on Dependable and Secure
Computing, vol. 15, no. 5, pp. 840–852, 2016.

[4] J. Guo, X. Ding, and W. Wu, “A blockchain-enabled ecosystem for
distributed electricity trading in smart city,” IEEE Internet of Things
Journal, vol. 8, no. 3, pp. 2040–2050, 2020.

[5] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” Decen-

tralized Business Review, p. 21260, 2008.

[6] R. Zhu, Z. Li, F. Wu, K. Shin, and G. Chen, “Differentially private spec-
trum auction with approximate revenue maximization,” in Proceedings
of the 15th ACM international symposium on mobile ad hoc networking
and computing, 2014, pp. 185–194.

[7] R. Zhu and K. G. Shin, “Differentially private and strategy-proof
spectrum auction with approximate revenue maximization,” in 2015
IEEE conference on computer communications (INFOCOM).
IEEE,
2015, pp. 918–926.

[8] C. Dwork, “Differential privacy: A survey of results,” in International
conference on theory and applications of models of computation.
Springer, 2008, pp. 1–19.

[9] F. McSherry and K. Talwar, “Mechanism design via differential privacy,”
in 48th Annual IEEE Symposium on Foundations of Computer Science
(FOCS’07).

IEEE, 2007, pp. 94–103.

[10] H. Jin, L. Su, B. Ding, K. Nahrstedt, and N. Borisov, “Enabling
privacy-preserving incentives for mobile crowd sensing systems,” in
2016 IEEE 36th International Conference on Distributed Computing
Systems (ICDCS).

IEEE, 2016, pp. 344–353.
[11] J. Lin, D. Yang, M. Li, J. Xu, and G. Xue, “Bidguard: A framework for
privacy-preserving crowdsensing incentive mechanisms,” in 2016 IEEE
conference on communications and network security (CNS).
IEEE,
2016, pp. 145–153.

[12] J. Guo and W. Wu, “Differential privacy-based online allocations
towards integrating blockchain and edge computing,” arXiv preprint
arXiv:2101.02834, 2021.

[13] T. Ni, Z. Chen, L. Chen, S. Zhang, Y. Xu, and H. Zhong, “Differentially
private combinatorial cloud auction,” IEEE Transactions on Cloud
Computing, pp. 1–1, 2021.

[14] D. Yang, G. Xue, X. Fang, and J. Tang, “Incentive mechanisms for
crowdsensing: Crowdsourcing with smartphones,” IEEE/ACM transac-
tions on networking, vol. 24, no. 3, pp. 1732–1744, 2015.

[15] J. Guo, X. Ding, and W. Wu, “Reliable trafﬁc monitoring mechanisms
based on blockchain in vehicular networks,” IEEE Transactions on
Reliability, pp. 1–1, 2021.

[16] W. Wang, B. Liang, and B. Li, “Designing truthful spectrum double
auctions with local markets,” IEEE Transactions on Mobile Computing,
vol. 13, no. 1, pp. 75–88, 2012.

[17] A. Yassine, M. S. Hossain, G. Muhammad, and M. Guizani, “Double
auction mechanisms for dynamic autonomous electric vehicles energy
trading,” IEEE Transactions on Vehicular Technology, vol. 68, no. 8, pp.
7466–7476, 2019.

[18] W. Sun, J. Liu, Y. Yue, and H. Zhang, “Double auction-based resource
allocation for mobile edge computing in industrial internet of things,”
IEEE Transactions on Industrial Informatics, vol. 14, no. 10, pp. 4692–
4701, 2018.

[19] U. Habiba, S. Maghsudi, and E. Hossain, “A reverse auction model for
efﬁcient resource allocation in mobile edge computation ofﬂoading,” in
2019 IEEE global communications conference (GLOBECOM).
IEEE,
2019, pp. 1–6.

[20] X. Peng, K. Ota, and M. Dong, “Multiattribute-based double auction
toward resource allocation in vehicular fog computing,” IEEE Internet
of Things Journal, vol. 7, no. 4, pp. 3094–3103, 2020.

[21] W. Sun, J. Liu, Y. Yue, and P. Wang, “Joint resource allocation and
incentive design for blockchain-based mobile edge computing,” IEEE
Transactions on Wireless Communications, vol. 19, no. 9, pp. 6050–
6064, 2020.

[22] Y. Jiao, P. Wang, D. Niyato, and K. Suankaewmanee, “Auction mecha-
nisms in cloud/fog computing resource allocation for public blockchain
networks,” IEEE Transactions on Parallel and Distributed Systems,
vol. 30, no. 9, pp. 1975–1989, 2019.

[23] X. Ding, J. Guo, D. Li, and W. Wu, “An incentive mechanism for build-
ing a secure blockchain-based internet of things,” IEEE Transactions on
Network Science and Engineering, vol. 8, no. 1, pp. 477–487, 2020.

[24] ——, “Pricing and budget allocation for iot blockchain with edge

computing,” arXiv preprint arXiv:2008.09724, 2020.

[25] J. Guo, X. Ding, and W. Wu, “A double auction for charging
scheduling among vehicles using dag-blockchains,” arXiv preprint
arXiv:2010.01436, 2020.

[26] Z. Chen, T. Ni, H. Zhong, S. Zhang, and J. Cui, “Differentially private
double spectrum auction with approximate social welfare maximization,”
IEEE Transactions on Information Forensics and Security, vol. 14,
no. 11, pp. 2805–2818, 2019.

[27] Q. Xiang, L. Kong, X. Liu, J. Xu, and W. Wang, “Auc2reserve: A dif-
ferentially private auction for electric vehicle fast charging reservation,”
in 2016 IEEE 22nd International Conference on Embedded and Real-
Time Computing Systems and Applications (RTCSA).
IEEE, 2016, pp.
85–94.

[28] D. Li, Q. Yang, W. Yu, D. An, Y. Zhang, and W. Zhao, “Towards
differential privacy-based online double auction for smart grid,” IEEE
Transactions on Information Forensics and Security, vol. 15, pp. 971–
986, 2019.

[29] G. Gao, M. Xiao, J. Wu, S. Zhang, L. Huang, and G. Xiao, “Dpdt:
A differentially private crowd-sensed data trading mechanism,” IEEE
Internet of Things Journal, vol. 7, no. 1, pp. 751–762, 2019.

[30] A. Gupta, K. Ligett, F. McSherry, A. Roth, and K. Talwar, “Differentially
private combinatorial optimization,” in Proceedings of the twenty-ﬁrst
annual ACM-SIAM symposium on Discrete Algorithms. SIAM, 2010,
pp. 1106–1125.

[31] Y. S. Son, R. Baldick, K.-H. Lee, and S. Siddiqi, “Short-term electricity
market auction game analysis: uniform and pay-as-bid pricing,” IEEE
Transactions on Power Systems, vol. 19, no. 4, pp. 1990–1998, 2004.

Jianxiong Guo received his Ph.D. degree from
the Department of Computer Science, University of
Texas at Dallas, Richardson, TX, USA, in 2021,
and his B.E. degree from the School of Chemistry
and Chemical Engineering, South China University
of Technology, Guangzhou, Guangdong, China, in
2015. He is currently an Assistant Professor with the
BNU-UIC Institute of Artiﬁcial Intelligence and Fu-
ture Networks, Beijing Normal University at Zhuhai,
and also with the Guangdong Key Lab of AI and
Multi-Modal Data Processing, BNU-HKBU United
International College, Zhuhai, Guangdong, China. His research interests
include social networks, algorithm design, data mining, IoT application,
blockchain, and combinatorial optimization.

Xingjian Ding received his B.E. degree in electronic
information engineering from Sichuan University in
2012 and M.S. degree in software engineering from
Beijing Forestry University in 2017. He obtained
his Ph.D. degree from the School of Information,
Renmin University of China in 2021. He is currently
an assistant professor at
the School of Software
Engineering, Beijing University of Technology. His
research interests include wireless rechargeable sen-
sor networks, approximation algorithms design and
analysis, and blockchain.

Weijia Jia is currently a Chair Professor and Direc-
tor of BNU-UIC Institute of Artiﬁcial Intelligence
and future Networks, Beijing Normal University at
Zhuhai; VP for Research of BNU-HKBU United
International College. His contributions have been
recognized as optimal network routing and deploy-
ment, anycast and QoS routing, sensors networking,
AI (knowledge relation extractions; NLP etc.) and
edge computing. He has over 600 publications in
the prestige international journals/conferences and
research books and book chapters. He is the Fellow

of IEEE and the Distinguished Member of CCF.

