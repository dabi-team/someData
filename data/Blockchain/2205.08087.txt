An Empirical Study of Blockchain Repositories in GitHub
Gias Uddin
gias.uddin@ucalgary.ca
DISA Lab, University of Calgary
Calgary, Canada

Ajoy Das
ajoy.das@ucalgary.ca
DISA Lab, University of Calgary
Calgary, Canada

Guenther Ruhe
ruhe@ucalgary.ca
University of Calgary, Canada
Calgary, Canada

2
2
0
2

y
a
M
7
1

]

R
C
.
s
c
[

1
v
7
8
0
8
0
.
5
0
2
2
:
v
i
X
r
a

ABSTRACT
Blockchain is a distributed ledger technique that guarantees the
traceability of transactions. Blockchain is adopted in multiple do-
mains like finance (e.g., cryptocurrency), healthcare, security, and
supply chain. In the open-source software (OSS) portal GitHub, we
observe a growing adoption of Blockchain-based solutions. Given
the rapid emergence of Blockchain-based solutions in our daily life
and the evolving cryptocurrency market, it is important to know
the status quo, how developers generally interact in those repos,
and how much freedom they have in applying code changes. We
report an empirical study of 3,664 Blockchain software repositories
from GitHub. We divide the Blockchain repositories into two cat-
egories: Tool (e.g., SDKs) and Applications (e.g., service/solutions
developed using SDKs). The Application category is further divided
into two sub-categories: Crypto and Non-Crypto applications. In
all Blockchain repository categories, the contribution interactions
on commits are the most common interaction type. We found that
more organizations contributing to the Blockchain repos than indi-
vidual users. The median numbers of internal and external users in
tools are higher than the application repos. We observed a higher
degree of collaboration (e.g., for maintenance efforts) among users
in Blockchain tools than those in the application repos. Among the
artifacts, issues have a greater number of interactions than commits
and pull requests. Related to autonomy we found that less than
half of total project contributions are autonomous. Our findings
offer implications to Blockchain stakeholders, like developers to
stay aware of OSS practices around Blockchain software.

CCS CONCEPTS
• Software and its engineering → Software libraries and reposi-
tories.

KEYWORDS
Blockchain, GitHub, Repositories, Bitcoin, Cryptocurrency

ACM Reference Format:
Ajoy Das, Gias Uddin, and Guenther Ruhe. 2022. An Empirical Study of
Blockchain Repositories in GitHub. In The International Conference on Eval-
uation and Assessment in Software Engineering 2022 (EASE 2022), June
13–15, 2022, Gothenburg, Sweden. ACM, New York, NY, USA, 10 pages.
https://doi.org/10.1145/3530019.3530041

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
EASE 2022, June 13–15, 2022, Gothenburg, Sweden
© 2022 Association for Computing Machinery.
ACM ISBN 978-1-4503-9613-4/22/06. . . $15.00
https://doi.org/10.1145/3530019.3530041

1 INTRODUCTION

Ginni Rometty, CEO, 2019, IBM “What the internet
did for communications, Blockchain will do for trusted
transactions.”

Blockchain is a distributed ledger technology that stores records
as identical copies on multiple computers to ensure security and
transaction traceability [31]. It was invented in 2008 to serve the
public transaction ledger of the Bitcoin cryptocurrency. In 2014,
Marc Andersson wrote a widely cited article in New York Times by
comparing the influence of bitcoin with those of internet during
1993 [7]. He predicted that prominent industry vendors would soon
develop critical solutions using Blockchain. Indeed, by 2016, Block-
chain funding overtook Bitcoin, i.e., Blockchain-based solutions
became more diverse than simply offering cryptocurrency-based
solutions [13].

Many Blockchain projects are open-sourced to promote rapid
growth and adoption. As such, we find an increasing number of
Blockchain-based software repositories (denoted as ‘repos’ from
hereon) in the open-source software (OSS) portal GitHub. As of July
2021, GitHub hosts more than 200M repos from over 65M develop-
ers worldwide. Several studies investigated the source code of the
Blockchain software in GitHub, e.g. [8]. The studies so far focused
on a specific and small number of Blockchain repos like healthcare
operationalization of three cryptocurrencies [27], or the analysis
of 481 Bitcoin repos to learn the Bitcoin-based cryptocurrency as-
pects [9]. However, we are aware of no studies that analyzed the
diverse states and user interactions in the GitHub Blockchain soft-
ware ecosystem. Such insights can complement existing studies
with insights into the overall Blockchain software ecosystem.

This paper reports the results of an empirical study to learn
about the Blockchain OSS ecosystem in GitHub. An open-source
Blockchain project tends to be more secure as many people can
verify security. People can trust such OSS projects more, which is a
crucial factor to ensure the success of a Blockchain-based solution.
Given that Github is the biggest platform to host OSS projects, the
Blockchain repos from Github can offer a comprehensive overview
of the states of the Blockchain OSS ecosystem. In our empirical
study, we analyze total 3,664 Blockchain repos from GitHub. Our
goal is to learn about the states of entities (e.g., users) and interac-
tions among the users as observed in the GitHub Blockchain repos.
Our empirical study has two major phases:

• Phase 1. We manually label the 3,664 Blockchain repos un-
der three categories: Tool, Application (Cryptocurrency vs.
non Cryptocurrency-based). This categorization ensures that
we have a better understanding on the type of Blockchain
OSS software systems being developed in GitHub.

• Phase 2. We use the categories and combine those with the
GitHub repo-based metrics (e.g., star rating, forks, interac-
tions, users) to conduct our empirical study with a focus to

 
 
 
 
 
 
EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Ajoy Das, Gias Uddin, and Guenther Ruhe

understand the status quo of user engagement and interac-
tions for this special class of software systems.

Our study offers several findings as summarized below:

• We find that Ethereum and Bitcoin Blockchain platforms have
the highest number of projects. The Blockchain tools show more
development activities than the Blockchain applications. Even
though crypto applications are more popular, the development
activity of the crypto and non-crypto applications are mostly
similar. This finding corroborates with a sustained focus on cryp-
tocurrencies and the use of Blockchain to create those. Similar
development activities across crypto and non-crypto indicate
the growing emphasis on applying Blockchain-based solutions
across diverse domains (details in Section 3.1).

• Organizations are contributing more to the Blockchain repos
than the individual users. Many organizations (like Ethereum
with mostly tool-based repos and IBM with mostly application-
based) own multiple Blockchain repos (see Section 3.2).

• We see higher degrees of collaboration among the users in Block-
chain tool repos than those in the application repos. The interac-
tions of commit contribution are higher in number than almost
all other types of interactions. Developers interact more via is-
sues than via the other artifacts (commits and pull requests). This
finding indicates that Blockchain OSS repos hosted in GitHub
are being used by users and the users report their issues of using
the OSS by logging or commenting on issues (see Section 3.3).
• We also find that the contributing users of the Blockchain repos
are not autonomous. This means that many internal developers
generally face restrictions in merging code changes. Therefore,
future measures can be taken to improve the autonomy of the
internal developers in these projects (see Section 3.4).

Our study findings offer implications to diverse stakeholders in
the Blockchain ecosystem: (1) Blockchain vendors to improve auton-
omy in their Blockchain repositories, (2) Blockchain developers to
learn about current trends in Blockchain ecosystem, (3) Blockchain
researchers to offer new tools and techniques for quality assurance
of the Blockchain software and the interactions among users.

Replication
BlockchainEmpiricalEASE2022

Package

https://github.com/disa-lab/

2 STUDY DATA COLLECTION
2.1 Project Selection
Picking Blockchain OSS repos from GitHub is a non-trivial task
due to the following reasons: (1) There is no standard label/tag/i-
dentifier in a GitHub repo that can be used to decide whether it is a
Blockchain repo or not. (2) GitHub topic (which is introduced as a
tag) is not universally applied to tag each GitHub repo. (3) A GitHub
topic may use any Blockchain-related label other than simply the
keyword ‘Blockchain’. (4) Searching by the keyword ‘Blockchain’
using GitHub search API will not provide all GitHub repo (e.g.,
when the description does not have Blockchain as the keyword) or
may contain false positives (e.g., when the repo simply mentions
Blockchain while referring to a non-Blockchain feature). We, there-
fore, adopted the following process (see Figure 1) to pick a list of
Blockchain repos. We discuss the steps below.

Figure 1: Steps in Blockchain repos selection process

First, we collect a set of 86 keywords that we can use to search di-
verse Blockchain repos. We produce the keywords using the follow-
ing sources: (1) Top 100 Blockchains-based cryptocurrencies from
CoinMarketCap [2] (Bitcoin, Ethereum, Polkadot, etc), to include
top Blockchain platforms in terms of cryptocurrency market capi-
talization; (2) Top permissioned Blockchain names (Hyperledger
Fabric, Corda, etc.), as permissioned Blockchains generally do not
have cryptocurrencies, we need to add these names so that we don’t
miss them while searching for the Blockchain projects; (3) Popular
Blockchain keywords (smart contract, solidity, dapp, etc.), so that
we can include Blockchain-related tools and applications that do not
have the Blockchain names directly in their descriptions. However,
we needed to exclude some Blockchain names from the keyword
list because they were very common words (e.g., icon, waves), and
they produced a substantial amount of false positives in the project
selection step. But, as we also included popular Blockchain-related
keywords (e.g., blockchain, dapp, smart contract), the projects re-
lated to these Blockchains came up in the project selection even
though the Blockchain platform names were filtered out. Second,
we searched the GHTorrent dataset [18] with the above keywords.
GHTorrent is an offline database that provides a snapshot of the
GitHub database. We used the latest GHTorrent database that was
available during the time of our analysis (January 2021). For each
repo in GHTorrent, we searched the keywords in the project name,
description, and topic fields. This returned 802K GitHub repos.

2.2 Project Filtering
We then filtered the 802K repos to find relevant and informative
Blockchain repos. Specifically, we followed the same sampling cri-
teria used by Gonzalez et al. [17], who previously investigated the
ecosystem of Machine Learning (ML) repositories in GitHub. To fil-
ter out unused, inactive, and non-source code repositories, these cri-
teria have been selected following the best practices [19, 21, 24, 26].
The filtering criteria are as follows: (1) Size: A repo must have a size
greater than 0 (KB) (2) Popularity: Must have ≥ 5 stars (3) Activity:
The last commit of the repo must be on and after January 2019
(4) Data Availability: Project data must be accessible by the GitHub
API and GHTorrent (5) Content: Must be a software project and not

Build a keyword list containing Blockchain related topics, top Cryptocurrency and Blockchain names, and popular Blockchain-related keywordsSearch for repositories in GHTorrent dataset containing any of the keywords in the repository name, description, or topicsFilter out repositories based on metrics suchas popularity measure, activity periodBlockchain-related keywords for searchList of GitHub repos that are potentially Blockchain OSSFilter out non source code repositoriesList of Relevant Blockchain Repos in GitHub3,664 Blockchain RepsAn Empirical Study of Blockchain Repositories in GitHub

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

a tutorial, homework assignment, coding challenge, or ‘resource’
storage. This step returned around 5200 GitHub repos. Not all the
repos returned after the third step are Blockchain-related projects
because few non-Blockchain projects also matched with some key-
words that we used to select the projects initially, we also found
non-source code repositories (such as course lectures) after the
above filtering. So, we manually analyzed each of the 5200 repos to
discard irrelevant repositories. This step resulted in our final list of
3,664 Blockchain repos.

3 EMPIRICAL STUDY
In this section, we answer four research questions (RQ) by analyzing
the data of Blockchain software repositories collected in Section 2.
RQ1. How do the popularity and activity across the Blockchain

repos vary? (Section 3.1)

RQ2. How do different users in the Blockchain repositories vary?

(Section 3.2)

RQ3. How do the different users collaborate in the Blockchain

repositories? (Section 3.3)

RQ4. How autonomous are the internal users in the Blockchain

repositories? (Section 3.4)

Like any OSS project in GitHub, a Blockchain project in GitHub
can have two major entities: (1) Repository (repo), (2) User. The
two entities can show diverse status (e.g., user growth). Therefore,
our RQ1 attempts to offer an understanding of the popularity of
the Blockchain repos in GitHub based on their growth and user ac-
tivity. Given the Blockchain stakeholders can be diverse in GitHub,
RQ2 offers an empirical evidence of the distribution of the different
users observed in the GitHub Blockchain repos and RQ3 investi-
gates how the users collaborate while RQ4 offers insights into how
autonomous the internal users to a repo are, i.e., whether they can
make progress without much help from external users to a repo.

3.1 RQ1. How do the popularity and activity
across the Blockchain repos vary?

3.1.1 Approach. First, we divide the Blockchain repos into two
categories: (1) Tool (i.e., offering a stand-alone API/SDK with Block-
chain algorithm/model), and (2) Application (i.e., offering software
to address specific use case scenario). The definition of the cate-
gories is taken from Gonzalez et al. [17]. Such categorization can
also offer deeper insights into our Blockchain projects. We thus
attempted to categorize our Blockchain repos into two categories
(i.e., Tools and Applications). We can divide the blockchain appli-
cations into two subcategories. Applications that focus on cryp-
tocurrencies that have direct monetary value, applications that
focus on encompassing blockchain features in other various do-
mains (health, business, law, entertainment, etc). Given the current
focus on Blockchain-based cryptocurrencies, we divided the ‘App-
lication’ category into two sub-categories: (1) Application Crypto,
and (2) Application Non-Crypto/Others , to find out whether these
application categories are in fact separate in terms of different met-
rics (e.g., development activities), or we can consider them as a
single group in future studies.

We labeled each Blockchain repo to one of the three categories
in two steps. (1) Automatic categorization: We attempted to label
a repo automatically using a suite of keywords (see Table 1). The

Table 1: Keywords to categorize the Blockchain repos

Category
Tool

Applications
(Crypto)

Applications
(Others)

Keywords
tool, library, stack, client, node, protocol,
helper, utility, , evm, scripts, package
framework, sdk, service, ide, api, miner

exchanges, trading platform, trading bot,
arbitrage, mining pool, payment channels,
crypto/coin/currency/token related,
wallet, wallet extensions

not categorized in tool or crypto application

Table 2: Agreements between coders

Iteration ID # of Repositories Cohen 𝜅
0.63
0.80

40
40

1
2

Table 3: Summary of studied 3,664 repos in our dataset

Project Type
Blockchain Tools
Applications (Crypto)
Applications (Others)

#Repos
2,470
546
648

# Orgs
1,536
253
358

# Users
934
293
290

Total Blockchain Projects

3,664

2,147

1,517

list of keywords is picked based on our manual analysis and by
consulting the keywords for the ‘Tool’ category from Gonzalez et
al. [17]. The automated approach was able to categorize about only
25% of the dataset. (2) Manual labeling: Even though we used an
automated approach, we checked each repo manually to determine
its label. This helped us to fix any misclassification that happened at
the automatic categorization step as well as classify the repos that
the automated approach was not able to classify. A total of three
human coders participated in the labeling process. First, two of the
authors consulted in two iterations to create a labeling guide. In the
first iteration, both authors separately labeled 40 repos. They then
computed the agreement between them using Cohen 𝜅 value and
resolved disagreements by discussing them together. The Cohen 𝜅
value was 0.63 which is considered substantial (see Viera et al. [37]).
This process also helped them update the labeling guide. In the
second phase, both authors again separately labeled 40 repos and
repeated the process of agreement calculation and disagreement
resolution. The Cohen 𝜅 value was 0.80. Therefore, after this stage,
any of the authors could continue with the manual labeling of the
rest of the repos without introducing any individual bias. The first
author then completed the rest of the manual labels. Nevertheless,
we further validated the manual labels by consulting with a third
coder, who is not an author of this paper.

In a Github repository, the owner of the repository can set multi-
ple words describing the summary of a repository, these are called

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Ajoy Das, Gias Uddin, and Guenther Ruhe

topics of the repository. Topics generally mean what the repository
is about. For example, Blockchain-based projects use blockchain,
cryptocurrency, etc. as their topics. We also find these topics in the
GHTorrent [18] dataset that we used to calculate the most common
topics across different repository types.

3.1.2 Results. During the manual labeling step (described in Sec-
tion 2.1), we categorized each repository in the dataset into the
Blockchain platform it belongs to. We found in total 71 Blockchain
platforms in our 3,664 repos (e.g., Ethereum). Figure 2 shows the top
10 of these platforms based on the total number of repos. Ethereum
wins the race, followed by Bitcoin, then follows the “others” cat-
egory (which denotes the rest of the Blockchain-based projects
that we have not explicitly monitored during the classification of
Blockchain platforms). Then comes the multi-Blockchain projects;
these projects are those projects that used or targeted more than
one Blockchain platforms in their development phase.

Figure 2: Top Blockchain platforms by # of projects

Top four topics per project category based on all the repos are:
(a) Tools: blockchain, ethereum, bitcoin, solidity; (b) Applications
(Crypto): bitcoin, ethereum, cryptocurrency, wallet; (c) Applications
(Others): ethereum, blockchain, bitcoin, smart-contracts. Overall,
we can see some cross-cutting topics like Ethereum and Bitcoin
which are mainly Blockchain platform names and these platforms
are used in Blockchain-based application development. We also
see specific topics like ‘wallet’ in Application Crypto, which is to
develop a virtual wallet for the cryptocurrencies.

In Figure 3, we show the violin plot distribution of two popularity
metrics (# of stars and # of forks) per category. Overall, the median
values are similar across the three categories. Still, the differences
in quartiles are greater between Tools and Applications Others,
which are also two categories with the most repos.

In Figure 4, we show the distribution of the commits, issues, and
pull requests per repository type. We can see that, just like the
above popularity measures, tool repos have a higher number of
commits, issues, and pull requests than the application repos.

We performed Kruskal-Wallis tests on both the popularity and
activity measures and found that in both cases distribution of
the measures is not the same across the repository types (p <
0.001). But from the Dunn’s tests (Bonferroni adjustment), we see
both for the # of stars and # of forks, the distributions of Tool
repositories are not significantly different than the Application

Figure 3: Distribution of the repos by # of stars and # of forks

Crypto repositories (p > 0.05). On the other hand, we found from
the Dunn’s tests that the distribution of the activity measures (all
of the commits, issues, and pull requests) of the crypto applications
are not different from the non-crypto ones (p > 0.05). The rest of
the distributions are significantly different from each other. Hence,
we can say, though the popularity of the crypto applications is
similar to the popularity of tools repos, the development activities
of the crypto applications are primarily identical to non-crypto
applications.

RQ1. How do the popularity and activity across the
Blockchain repos vary? (1) Ethereum (31.7%) and Bitcoin
(15.9%) projects occupy a good portion of the total repositories.
(2) The tools based Blockchain repos show more dev activities
(e.g., issue creation) than the application based Blockchain
repos. (3) Though the crypto applications are more popular,
the development activity of the non-crypto applications are
mostly similar to crypto applications.

3.2 RQ2. How do different users in the
Blockchain repositories vary?

3.2.1 Approach. We got the ownership data of the repositories
from the dataset itself. But finding out the internal and external
users was not a straightforward task. Following the steps discussed
by Gonzalez et al. [17], we calculated and summarized each reposi-
tory user’s contribution such as how many issues, pull requests, or
commits the user created, how many of them are closed/merged by
the user himself/herself, how many of them have been processed by
other users instead, etc. After summarizing the degree of a user’s
contribution in a repository, we categorized them into internal and
external users. We marked the internal users with significant par-
ticipation in processing other users’ issues or pull requests as the
maintainers of the repository.

3.2.2 Results. The distributions of project owners by three project
categories are shown on Table 3. We also indicate the number of
total repos, the total number of contributing organizations, and
the total number of users that created those repositories for each
project category. The number of contributing organizations is 2,147
among the total 3664 repositories demonstrating a significant focus
on Blockchain OSS in GitHub from the software vendors.

ethereumbitcoinothersmultieoshyperledgerfabricstellarbinancemonerotezos051015202530Percentage # of all repositoriesToolsApplications(Crypto)Applications(Others)020406080100StarsToolsApplications(Crypto)Applications(Others)01020304050ForksAn Empirical Study of Blockchain Repositories in GitHub

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Figure 4: Violin plots for # of Commits, # of Issues, and # of Pull Requests per repo category

external users (3013). Among non-crypto application repos, con-
denser [6] has the most internal users (82) and monero-gui [5] has
the most external users (560).

The performed Kruskal-Wallis tests denote that the distribution
of the users is significantly different across repo types. But the
Dunn’s tests with Bonferroni adjustment show that the distribution
of the internal users for crypto applications are not significantly
different than the non-crypto repos (p > 0.05). On the other hand,
for the tools and crypto applications, the distributions of the
external users do not differ significantly (p > 0.05).

RQ2. How do different users in the Blockchain reposi-
tories vary? (1) We find more organizations contributing to
the Blockchain repos than individual users. (2) Organizations
like Ethereum and IBM own multiple Blockchain repos. While
Ethereum repos are mostly tool-based, IBM repos are mostly
application-based. (3) The median numbers of internal and
external users in tools are higher than the application repos.

3.3 RQ3. How do the different users collaborate

in the Blockchain repositories?

3.3.1 Approach. We quantify the collaboration among users in a
repo based on five types of interactions defined by Gonzalez et
al. [17]: (1) Contribution, (2) Maintenance, (3) Process, (4) Review,
and (5) Discussion. Description of each of these interaction types
have been provided in Table 4. The goal then is to compute how
frequently users show the above interaction types when interacting
with each other in a repository.

3.3.2 Results. We find that median number of the user per artifact
per repository for (a) Tools are Commits (15.5), Issues (10), Pull
Requests (7); (b) Applications (Crypto) are Commits (10), Issues
(8), Pull Requests (4); (c) Applications (Others) are Commits (12),
Issues (9), Pull Requests (7). Overall, users’ median per artifact is
higher in the Blockchain tools (across all three categories) than the
Blockchain application repos.

In Figures 6, 7, and 8, we quantify the collaboration among
different users in a repo based on the five interaction types defined
in Table 4: (a) Code contribution (blue bar) denotes the frequency
of interaction between the author of a commit and the committer
of that commit. We see that this interaction is the most prevalent
in both tools and non-crypto applications. (b) Maintenance

(a) Distribution of internal users

(b) Distribution of external users

Figure 5: Distribution of (a) Internal users and (b) External
users (outliers omitted)

As we have shown in Table 3, organizations own most of the
Blockchain projects of our analysis (58.6%), the rest are owned by
individual user accounts. In Blockchain repositories, 501 accounts
own more than one repositories (20.9% of the dataset), and 86 ac-
counts own at least 5 repositories (3.6% of the dataset). In fact, the
majority of GitHub accounts with more than five Blockchain repos
are organizational accounts. The top 3 accounts with most Block-
chain repositories are Ethereum (46 repos), IBM (32 repos), and
input-output-hk (30 repos). Here we see, Ethereum is the topmost
contributor, followed by IBM. The organizations are working on
multiple Blockchain-based solutions in GitHub, which signifies
the significant focus on the Blockchain OSS ecosystem from the
industry. Some of these organizations (e.g., Ethereum, Stellar) are
dedicated to support specific Blockchain platforms, while others
offer Blockchain-based solutions (e.g., IBM). The top organization
Ethereum, has mostly tool-based repositories as it works on sup-
porting the infrastructure of the Ethereum Blockchain platform.
On the other hand, IBM works on multiple Blockchains with most
of its repositories are non-crypto applications (56.3%).

Figures 5a and 5b show the distribution of internal and external
users across Blockchain project categories. We see that tool reposi-
tories has higher number of both external and internal users than
the application repositories.

Among the Blockchain tool repos, bitcoin [1] has the most in-
ternal users (614) and go-ethereum [3] has the most external users
(4402). Among the crypto application repos, gekko [36] has the
most internal users (199) and metamask-extension [4] has the most

ToolsApplications(Crypto)Applications(Others)1000100200300400500600700CommitsToolsApplications(Crypto)Applications(Others)0255075100125150175IssuesToolsApplications(Crypto)Applications(Others)020406080100Pull RequestsToolsApplications (Crypto)Applications (Others)05101520Contributing UsersToolsApplications (Crypto)Applications (Others)0510152025External UsersEASE 2022, June 13–15, 2022, Gothenburg, Sweden

Ajoy Das, Gias Uddin, and Guenther Ruhe

Table 4: Interaction types used to measure Collaboration

Type
Contribution

Maintenance

Process

Review

Discussion

Description
Interaction that happens between the author
and the committer of a commit.
Interaction that happens between two users that
initiate any event (i.e. approve, except
commenting) for the same artifact (issue/
pull request), and any user who is not the
creator (opener/reporter) of the artifact.
Interaction that happens between the creator
(opener/reporter) of the artifact and another
user who initiates a maintenance event.
Interaction that happens between a user
who comments on an artifact and it’s creator
(author/reporter/opener).
Interaction that happens between two users
who comments on an artifact and the users
who are not the creator of the artifact.

(brown bar) denotes the frequency of interaction between two
users to approve/comment artifacts like pull requests. We see
issue maintenance interactions are higher than the pull request
maintenance in all repo types. (c) Process (green bar) denotes the
frequency of interactions between the creator and a maintainer
of an artifact. In all repo types, interaction in issue processing
is higher than the pull request processing. (d) Review (red bar)
denotes the frequency of interactions between the creator and a
commenter of an artifact. For tools and non-crypto applications,
reviews in pull requests are higher than the reviews in issues.
(e) Discussion (purple bar) denotes the frequency of interactions
between two users who are not the artifact’s creator but who
nonetheless commented on the artifact. Discussion is the most
prevalent interaction for crypto applications. We see that almost all
of the collaborative interaction types are higher in tool repositories
than the application repos (note that the scale is different in each
graph).

Figure 6: Collaborative interactions per artifact in Block-
chain Tool repositories (outliers omitted)

Figure 7: Collaborative interactions per artifact in Block-
chain Crypto Applications repositories (outliers omitted)

Figure 8: Collaborative interactions per artifact in Block-
chain Others (Non-Crypto) Applications repositories (out-
liers omitted)

RQ3. How do the different users collaborate in the
Blockchain repositories? (1) We observe higher degrees
of collaboration (e.g., for maintenance efforts) among users
in Blockchain tools than those in the application repos. (2)
The amount of interactions that happened in commit contri-
bution are higher in number than almost all other types of
interactions. (3) Among the artifacts, issues has overall greater
number of interactions than commits and pull requests.

3.4 RQ4. How autonomous are the internal

users in the Blockchain repositories?
3.4.1 Approach. To measure the autonomy of a repository, Gon-
zalez et al. [17] divided the users of a repo into (1) Maintainer,
(2) Autonomous contributor, and (3) Dependent contributor. The
definition of these user types is provided in Table 5. The goal is to
find the distribution of the above user types in a repository. Based
on the percentage of users that belong to each group, the autonomy
of the whole project is calculated.

3.4.2 Results. In Figure 9, we show the proportion of three user
types (maintainer, autonomous and dependent contributors as
defined in Table 5) across the Blockchain repo categories. We
see that: (1) The proportion of maintainers in a repo is higher in
crypto applications than both tools and non-crypto applications.

commitsissuespull_requests020406080100120140Interaction per Artifactcontributionmaintenanceprocessreviewdiscussioncommitsissuespull_requests020406080100Interaction per Artifactcontributionmaintenanceprocessreviewdiscussioncommitsissuespull_requests020406080Interaction per ArtifactcontributionmaintenanceprocessreviewdiscussionAn Empirical Study of Blockchain Repositories in GitHub

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Table 5: User types used for Autonomy calculation

Table 6: Summary of Blockchain (BC) vs Non-Blockchain
(Non-BC) Metrics in the studied 7,328 repos in our dataset

Type
Maintainer

Description
A user who has merged or closed artifacts
(issues and/or pull requests) opened by others.

Autonomous A user who committed majority of his/her
Contributor

commits and also and/or self-merged
majority of his/her pull requests.
A user whose majority of the commits were
not committed by others, and/or other users also
merged/closed majority of his/her pull requests.

Dependent
Contributor

(2) The proportion of autonomous users are the same across all
of the repo types. (3) The proportion of dependent contributors
are also the same across all types of repositories. Overall, we see a
lower proportion of autonomous users but a higher proportion of
dependent contributors across all Blockchain repo categories. This
makes the Blockchain repos less autonomous, indicating more
restriction in the Blockchain repos to make quick code changes.
On the other hand, we can find some inherent reasons for this less
autonomy in the Blockchain repositories. Blockchain networks
are generally distributed networks, and no central authority has
control over them. So, updating the network for fixing a bug
becomes difficult because all the relevant parties need to update
the software simultaneously across the network. So making the
systems fault-tolerant and bug-free early on is very important
for Blockchain-based projects, as merging buggy code into the
codebase can be fatal. Hence multiple reviews are generally
performed before the code changes are approved and merged,
which in turn lessen the autonomy of the developers.

RQ4. How autonomous are the internal users in the
Blockchain repositories? (1) There are no significant dif-
ferences in the autonomy of the teams across all repo types.
Less than half of total project contributions are autonomous,
that means that the development teams in Blockchain reposi-
tories are not autonomous in terms of pushing changes to the
code base. (2) The proportion of autonomous and dependent
contributors are equal.

Figure 9: Distribution of user types per project type

Metrics

Commits
Issues
Pull Requests

Internal Users
External Users

Maintainers (%)
Autonomous Contrib (%)
Dependent Contrib (%)

BC

Non-BC

Avg Median Avg Median
18
107
30
4
3
19

53
12
8

32
9
5

5
3

43
32
34

4
1

44
33
33

3
3

54
35
24

3
1

50
40
25

4 DISCUSSIONS
4.1 Blockchain Vs Non-Blockchain

Repositories

Blockchain is a relatively new technology; it is important to know
whether and how the findings we observed could differ from the
non-Blockchain projects. We, therefore, randomly pick an equal
number of non-Blockchain repos (i.e., 3664) from GitHub to com-
pare these two categories. In this subsection, we compare both the
states and the interactions of different entities in Blockchain vs.
non-Blockchain projects using total 7,328 GitHub repos.

Data Collection. At first, we sampled 10k repositories from
Github using Github API after applying the same filtering crite-
ria as of those applied for the Blockchain repositories (described
in Section 2.2). Then we randomly selected an equal number of
non-Blockchain repos (i.e., 3664) for the non-Blockchain GitHub
repository set from the filtered set of 10k repos after removing any
Blockchain repositories from this list.

We show the summary of the calculated metrics of the Block-
chain vs. non-Blockchain repos in Table 6. We can see in Table 6,
the Blockchain repos have a higher number of commits, issues,
and pull requests than the non-Blockchain repos in our dataset,
denoting that Blockchain-based repos in our database are more
actively developed than the non-Blockchain repos. There could be
several reasons for this:

• Larger investment in Blockchain projects in terms of both

time and resources;

• The domain is still actively growing, so rapid development

is going on;

• Blockchain industry’s one of the key selling points is fault
tolerance of the systems, and to catch the bugs in the de-
velopment phase, the artifacts (such as commits and pull
requests) go through a lot of processing;

Users. We find that organizations own 2,147 (58.6%) repos among
3664 Blockchain repos. In comparison, only 913 (24.9%) repos of
3664 non-Blockchain repos are owned by organizations which de-
note that organizations have a significant focus on the Blockchain
software ecosystem. From Table 6 we see, the number of both in-
ternal and external users is higher in the Blockchain repos.

ToolsApplications(Crypto)Applications(Others)0.00.20.40.60.81.0Proportion of Total Project ContributorsMaintainersDependentAutonomousEASE 2022, June 13–15, 2022, Gothenburg, Sweden

Ajoy Das, Gias Uddin, and Guenther Ruhe

Figure 10: Collaborative interactions per artifact in Non-
Blockchain repositories (outliers omitted)

Interactions. Comparing Figure 10 with Figures 6, 7, and 8 we
see that: (1) The median of Contribution (blue bar) frequencies for
Blockchain repos are between 15-20, but it is around 4 for Block-
chain repos. (2) The median of Maintenance (brown bar) is around
5-10 for Blockchain repos and 1-2 for non-Blockchain repos. This
indicates that more non-authors collaborate in the Blockchain arti-
fact maintenance process. (3) The median for Process (green bar) is
around 5 for Blockchain repos and 1-2 for non-Blockchain repos.
(4) The median of Review (red bar) is around 5-10 for Blockchain
repos and 1-2 for non-Blockchain repos. (5) The median for Dis-
cussion (purple bar) is around 10 for Blockchain repos and 2-3 for
non-Blockchain repos. Thus, across all the five interaction types,
we observe higher degrees of collaboration among the users in
Blockchain repos than in non-Blockchain repos.

Autonomy. In Table 6 we see that: (1) The proportion of main-
tainers in a repo is similar between Blockchain and non-Blockchain
repos. (2) The proportion of autonomous users is more in non-Block-
-chain repos (40% vs. 33% in Blockchain repos). (3) The proportion
of dependent contributors is more in Blockchain repos (33% vs. 25%
in non-Blockchain repos). Therefore, the lower proportion of au-
tonomous users but a higher proportion of dependent contributors
make the Blockchain repos less autonomous, which indicates more
restriction in the Blockchain repos to make quick code changes.

4.2 The Case of Archived Blockchain Repos
In software teams, obsolete projects are generally archived. Given
Blockchain is a rapidly evolving paradigm, it is expected that inno-
vative ideas are rapidly implemented in the Blockchain software
ecosystem, with little or no guidance and previous expertise of
developing such solutions. As such, it may happen that some ideas
are less successful than others, resulting in their archival. We in-
vestigated whether a repo is archived using two approaches:

(1) We used Github API to search for the repositories that are
marked as archived (2) We searched for relevant keywords (e.g.,
deprecated, obsolete, archived, no longer maintained, etc) in the
Readme file of the repo. We find total 332 archived Blockchain
repos and 316 archived non-Blockchain repos. Thus, we find a
slightly higher proportion of archived repos in Blockchain than in
non-Blockchain repos (9.1% vs 8.6%).

In Figure 11a, we show the distribution of the archived repos over
time based on their creation time. For the archived Blockchain repos,

(a) Trend of project archival

(b) Trend of project creation

Figure 11: Trend of (1) Archiving Projects (2) New projects

we see a notable upswing between 2017-2018. No such upswing
is visible for the non-Blockchain archived repos. To investigate
the reasons of the upswing in 2017-2018 for the Blockchain repos,
we checked the evolution of all the repos based on their creation
time (see Figure 11b). For both the Blockchain and non-Blockchain
repos (archived + non-archived), we see an upswing between 2017
- 2018, where the upswing is more prominent for Blockchain repos.
This denotes that the more Blockchain repos got created in 2017 -
2018, the more Blockchain repos also got archived at the time. This
indicates rapid evolution and implementation of new ideas in the
Blockchain GitHub repos, which led to the creation of more new
repos as well as the closure (i.e., archival) of old repos compared to
the Blockchain repos.

We analyze the reasons of archival in the repos using 200
randomly sampled repos, 100 each from Blockchain and non-
Blockchain types. The sample size for each type is statistically
significant with a 95% confidence level and 10 confidence interval.
We then checked the description (i.e., Readme) file of each sampled
repo, where the repo owners could provide their archival reasons.
The first two authors analyzed the reasons together. We observed
total of four archival reasons: (1) New repo migration denotes
when a project development has been moved to a new repo due to
change of ownership/name, rebuilding of the project from scratch,
etc. (2) Resource unavailability denotes the lack of resources
(e.g., developers, funding) to continue a repo. (3) Obsolete depen-
dency denotes that an essential dependency (e.g., a Blockchain
platform or an API/SDK) for a repo became obsolete, which led the
project owner closing the project. (4) Obsolete usecases denotes a
project is no longer needed because its use cases are no longer rele-
vant in the evolving Blockchain ecosystem. In Table 7, we present
the distribution of five archival reasons categories across the 200
sampled repos. The archival reasons for more than 50% repos are

commitsissuespull_requests0510152025Interaction per Artifactcontributionmaintenanceprocessreviewdiscussion201020122014201620182020020406080100120# of New Archived RepositoriesBlockchainNon Blockchain20082010201220142016201820200200400600800100012001400# of New RepositoriesBlockchainNon BlockchainAn Empirical Study of Blockchain Repositories in GitHub

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Table 7: Distribution of the archival reasons (in %) of repos

Reason
New repo migration
Resource unavailability
Obsolete dependency
Obsolete usecases
Not mentioned

#Blockchain #Non Blockchain
10
3
4
24
59

16
3
4
26
51

not provided (see ‘Not Mentioned’ in Table 7). Except that, the two
other major archival reasons are ‘Obsolete usecases’ and ‘New repo
migration’, both of which are observed more in the Blockchain
repos.

4.3 Implications of Findings
Our study findings can be instrumental to following stakeholders.
(1) Blockchain Vendors. We find that majority of Blockchain re-
pos in our dataset are owned by organizations (e.g., IBM, Ethereum),
which is more than the user-owned repos (58.6% vs. 41.4%). Com-
pared to the non-Blockchain repos, users in Blockchain repos show
less autonomy while pushing changes in the codebase. This could
indicate that the Blockchain OSS ecosystem is closely guarded by
few users and industry vendors, which then can create a bottleneck
while making rapid progress. Therefore, Blockchain repo owners
in GitHub can create an environment with less restriction so that
users can enjoy more autonomy while creating features.
(2) Blockchain Developers may expect more development activ-
ities and collaborative interaction in tool repos than the application
repos. As the development teams of the repos are not autonomous,
the developers may expect some restrictions (i.e., multiple review
cycles) in applying code changes to the repos.
(3) Blockchain Career Enthusiasts can take note of the growth
of Blockchain repos to stay aware of this rapidly evolving ecosys-
tem. Blockchain repo creation peaked in 2016 - 2018, while we a
high growth rate in the Blockchain repos in 2017 - 2018 (Figure 11b).
Such insights can help career enthusiasts to make decisions like
when to make a career change and when to invest in the ecosystem.
(4) Blockchain Researchers. We observed much more interac-
tions of Blockchain users around issues in GitHub (see Figures 6, 7,
and 8). This denotes that quality assurance of Blockchain repos is
getting attention from Blockchain users. While significant research
in Blockchain-based research has focused on improving security
(e.g., smart-contracts [10, 14]), our results show that research can
develop tools to improve the autonomy in the repos. Autonomy
can be improved by improved collaboration and the generation
of automatic documentation for the Blockchain repos/APIs, e.g.,
by automatically expanding the documentation from online re-
sources [33, 34], where discussions and reviews about new and
emerging techniques are readily available [12, 32]).

5 THREATS TO VALIDITY
Internal validity threats relate to the author bias while conducting
the analysis. We mitigated the bias in our manual labeling of Block-
chain repos by using three human coders. We report the Cohen 𝜅

agreement between the first two coders in two iterations, which
show the substantial to a perfect agreement (according to Viera et
al. [37]) between the coders. Construct Validity threats related
to the potential errors in the study methodologies. To identify the
Blockchain-related projects, we used both topics[17] and the project
description metadata and followed best practices to analyze GitHub
repos (e.g., [17, 19, 26]). External Validity threats relate to the
generalizability of the findings. We study Blockchain projects that
are hosted publicly in GitHub. We followed an extensive sampling
process to collect the Blockchain and non-Blockchain repos (see
Section 2.1). As we noted in Section 2, we picked our Blockchain
repos based on a suite of 86 Blockchain-specific keywords. This
approach was necessary because there is no other way to find the
list of Blockchain repos in GitHub. Although GitHub offers the
‘topic’ feature to tag a repo, not all repos are tagged by the topics.
Many of the Blockchain repos we found do not have any topic tag.
Our keyword-based approach returned 802K GitHub repos. This
large number of repos indicates that our keyword-based approach
is sufficient to find a good number of Blockchain repos.

6 RELATED WORK
Related work can broadly be divided into two types: Studies to
understand the trends in Blockchain software and Techniques de-
veloped to address problems in Blockchain-based solutions.

Studies. In this research, we study the evolution of Blockchain
technology from the perspective of OSS development in GitHub.
Several recent empirical studies on Blockchain used GitHub data.
There have been several systematic literature reviews that dis-
cussed the ongoing software engineering-related research regard-
ing blockchain-based software development [16, 35]. This includes
testing and analysis of smart contracts, performance and security
of DApp, analyzing architecture types used during the blockchain-
based software development, etc. However, no previous studies
performed an empirical analysis of blockchain-based repos in the
wild. Trockman et al. [8] report one year of development activity of
around two hundred cryptocurrencies and observe that the popu-
larity of the repos is associated with a higher market capitalization
of the corresponding platforms. Zheng et al. [39] conducted an ex-
tensive survey on Blockchain taxonomy, consensus algorithms, and
technical challenges. Reyna et al. [29] investigate the challenges and
potential applications for block-chain related IoT applications but
do not analyze the development activity of the Blockchain projects.
Techniques. Analysing and finding vulnerabilities in Block-
chain is an active research area [23, 28]. There are also research
opportunities in Blockchain scalability, i.e., improving throughput
and reducing latency for cryptocurrencies [38, 40]. Researchers
have also presented tools such as Vandal [10], ContractFuzzer [20],
TEETHER [22] to automatically detect security vulnerabilities in
Blockchain smart contacts.

While the above studies limit to either cryptocurrencies or spe-
cific domains (e.g., healthcare), we study the overall Blockchain
OSS ecosystem in GitHub based on a large sample of Blockchain
repos. Similar to our study, many of the recent studies [11, 15, 17]
study Collaboration among developers. Some recent analysis by
Google [25] and Microsoft [30] showed that Autonomy is a crucial
factor for productivity. We thus study both collaboration and au-
tonomy of the users in the Blockchain repos. While they studied

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Ajoy Das, Gias Uddin, and Guenther Ruhe

the states on the ML universe in GitHub, we study the Blockchain
OSS ecosystem in GitHub.

7 CONCLUSIONS
The promise of complete transparency, traceability and data im-
mutability has made Blockchain a promising architecture to use
in software for diverse domains like finance (e.g., cryptocurrency),
supply chain management, security, etc. Given that this is a new
but rapidly evolving ecosystem, it is important to understand the
states of the Blockchain ecosystem. We conduct an empirical study
by analyzing 3,664 Blockchain repositories in GitHub. We find that
this domain is growing rapidly just after the release of the first
Blockchain project in 2010 that peaked up in 2016 - 2018, when
Blockchain-based solutions are adopted in diverse domains besides
cryptocurrency. We find significantly more presence of large orga-
nizations in the Blockchain repos, who own multiple Blockchain
repos in GitHub. Moreover, we also see less autonomy of users in
the Blockchain repos. With a view to foster further innovation in
Blockchain OSS ecosystem, in our future work, we aim to study
more the causes of low autonomy in the Blockchain repo and de-
velop guidelines and tools to improve the user autonomy.

ACKNOWLEDGMENTS
Gias Uddin and Ajoy Das were supported by NSERC Grant (RGPIN-
2021-02575).

REFERENCES
[1] 2021. bitcoin/bitcoin, Bitcoin Core integration/staging tree. https://github.com/

bitcoin/bitcoin.

[2] 2021.

Cryptocurrency Prices, Charts And Market Capitalizations.

https://coinmarketcap.com/.

[3] 2021. ethereum/go-ethereum, Official Go implementation of the Ethereum proto-

col. ethereum.

[4] 2021. MetaMask/metamask-extension, The MetaMask browser extension enables

browsing Ethereum blockchain enabled websites. MetaMask.

[5] 2021. monero-project/monero-gui, Ui for Monero: the secure, private, untraceable

cryptocurrency. The Monero Project.

[6] 2021. steemit/condenser, The greatest application front-end to the Steem Block-

chain. steemit.

[7] Mard

Andreesen.

2014.

Why

Bitcoin

Matters.

https://dealbook.nytimes.com/2014/01/21/why-bitcoin-matters.

[8] Asher Trockman, Rijnard van Tonder, and Bogdan Vasilescu. 2019. Striking Gold
in Software Repositories? An Econometric Study of Cryptocurrencies on GitHub.
In 2019 IEEE/ACM 16th International Conference on Mining Software Repositories
(MSR). IEEE, Montreal, QC, Canada, 181–185.

[9] Matthijs Berkhout, Fons van den Brink, Mart van Zwienen, Paul van Vulpen,
and Slinger Jansen. 2018. Software Ecosystem Health of Cryptocurrencies. In
Software Business (Lecture Notes in Business Information Processing). Springer
International Publishing, Cham, 27–42.

[10] Lexi Brent, Anton Jurisevic, Michael Kong, Eric Liu, Francois Gauthier, Vincent
Gramoli, Ralph Holz, and Bernhard Scholz. 2018. Vandal: A Scalable Security
Analysis Framework for Smart Contracts. arXiv:1809.03981 [cs] (2018).

[11] Marcelo Cataldo, James D Herbsleb, and Kathleen M Carley. 2008. Socio-technical
congruence: a framework for assessing the impact of technical and work de-
pendencies on software development productivity. In Proceedings of the Second
ACM-IEEE international symposium on Empirical software engineering and mea-
surement. 2–11.

[12] Partha Chakraborty, Rifat Shahriyar, Anindya Iqbal, and Gias Uddin. 2021. How
Do Developers Discuss and Support New Programming Languages in Techni-
cal Q&A Site? An Empirical Study of Go, Swift, and Rust in Stack Overflow.
Information and Software Technology (IST) (2021), 19.

[13] CoinDesk. 2016. State of Blockchain Q1 2016. https://www.coindesk.com/state-

of-blockchain-q1-2016.

[14] Christian Colombo, Joshua Ellul, and Gordon J. Pace. 2018. Contracts over Smart
Contracts: Recovering from Violations Dynamically. Leveraging Applications of
Formal Methods, Verification and Validation. Industrial Practice (2018), 300–315.

[15] Laura Dabbish, Colleen Stuart, Jason Tsay, and Jim Herbsleb. 2012. Social coding
in GitHub: transparency and collaboration in an open software repository. In
ACM 2012 conference on computer supported cooperative work. 1277–1286.
[16] Selina Demi, Ricardo Colomo-Palacios, and Mary Sánchez-Gordón. 2021. Software
Engineering Applications Enabled by Blockchain Technology: A Systematic
Mapping Study. Applied Sciences 11, 7 (Jan. 2021), 2960.

[17] Danielle Gonzalez, Thomas Zimmermann, and Nachiappan Nagappan. 2020. The
State of the ML-universe: 10 Years of Artificial Intelligence & Machine Learning
Software Development on GitHub. In Proc. MSR. ACM, Seoul Republic of Korea,
431–442.

[18] Georgios Gousios. 2013. The GHTorent dataset and tool suite. In Proc. MSR (MSR

’13). IEEE Press, 233–236.

[19] Georgios Gousios and Diomidis Spinellis. 2017. Mining Software Engineering

Data from GitHub. In Proc. ICSE. IEEE, 501–502.

[20] Bo Jiang, Ye Liu, and W. K. Chan. 2018. ContractFuzzer: Fuzzing Smart Con-
tracts for Vulnerability Detection. In 33rd ACM/IEEE International Conference on
Automated Software Engineering. 259–269.

[21] Eirini Kalliamvakou, Georgios Gousios, Kelly Blincoe, Leif Singer, Daniel M.
German, and Daniela Damian. 2016. An in-depth study of the promises and perils
of mining GitHub. Empirical Software Engineering 21, 5 (Oct. 2016), 2035–2071.
[22] Johannes Krupp and Christian Rossow. 2018. TEETHER: Gnawing at Ethereum
to Automatically Exploit Smart Contracts. In 27th USENIX Conference on Security
Symposium. 1317–1333.

[23] Xiaoqi Li, Peng Jiang, Ting Chen, Xiapu Luo, and Qiaoyan Wen. 2020. A survey
on the security of blockchain systems. Future Generation Computer Systems 107
(2020), 841–853.

[24] Nuthan Munaiah, Steven Kroh, Craig Cabrey, and Meiyappan Nagappan. 2017.
Curating GitHub for engineered software projects. Empirical Software Engineering
22, 6 (Dec. 2017), 3219–3253.

[25] Emerson Murphy-Hill, Ciera Jaspan, Caitlin Sadowski, David Shepherd, Michael
Phillips, Collin Winter, Andrea Knight, Edward Smith, and Matt Jorde. 2019.
What Predicts Software Developers’ Productivity? IEEE Transactions on Software
Engineering (2019).

[26] Paulo Anselmo da Mota Silveira Neto, Umme Ayda Mannan, Eduardo Santana de
Almeida, Nachiappan Nagappan, David Lo, Pavneet Singh Kochhar, Cuiyun Gao,
and Iftekhar Ahmed. 2020. A Deep Dive on the Impact of COVID-19 in Software
Development. arXiv:2008.07048 [cs] (Aug. 2020). arXiv:2008.07048 [cs]

[27] Khadija Osman. 2020. Studying the Health of the Bitcoin Ecosystem in GitHub.

(2020), 137.

[28] Jin Ho Park and Jong Hyuk Park. 2017. Blockchain security in cloud computing:

Use cases, challenges, and solutions. Symmetry 9, 8 (2017), 164.

[29] Ana Reyna, Cristian Martín, Jaime Chen, Enrique Soler, and Manuel Díaz. 2018.
On blockchain and its integration with IoT. Challenges and opportunities. Future
generation computer systems 88 (2018), 173–190.

[30] Margaret-Anne Storey, Thomas Zimmermann, Christian Bird, Jacek Czerwonka,
Brendan Murphy, and Eirini Kalliamvakou. 2019. Towards a theory of software
developer job satisfaction and perceived productivity.
IEEE Transactions on
Software Engineering (2019).

[31] The Economist. 2015. Blockchains: The great chain of being sure about
https://www.economist.com/briefing/2015/10/31/the-great-chain-of-

things.
being-sure-about-things.

[32] Gias Uddin and Foutse Khomh. 2017. Automatic Summarization of API Re-
views. In Proc. 32nd IEEE/ACM International Conference on Automated Software
Engineering. 12.

[33] Gias Uddin and Foutse Khomh. 2019. Automatic opinion mining from API reviews
from stack overflow. IEEE Transactions on Software Engineering (2019), 35.
[34] Gias Uddin, Foutse Khomh, and Chanchal K Roy. 2020. Automatic Mining of API
Usage Scenarios from Stack Overflow. Information and Software Technology (IST)
(2020), 16.

[35] Anna Vacca, Andrea Di Sorbo, Corrado A. Visaggio, and Gerardo Canfora. 2021.
A Systematic Literature Review of Blockchain and Smart Contract Development:
Techniques, Tools, and Open Challenges. Journal of Systems and Software 174
(April 2021), 110891.

[36] Mike van Rossum. 2021. askmike/gekko, A bitcoin trading bot written in node.

https://github.com/askmike/gekko.

[37] Anthony J. Viera and Joanne M. Garrett. 2005. Understanding interobserver

agreement: The kappa statistic. Family medicine 37, 4 (2005), 360–363.

[38] Junfeng Xie, F Richard Yu, Tao Huang, Renchao Xie, Jiang Liu, and Yunjie Liu.
2019. A survey on the scalability of blockchain systems. IEEE Network 33, 5
(2019), 166–173.

[39] Zibin Zheng, Shaoan Xie, Hong-Ning Dai, Xiangping Chen, and Huaimin Wang.
2018. Blockchain challenges and opportunities: A survey. International Journal
of Web and Grid Services 14, 4 (2018), 352–375.

[40] Qiheng Zhou, Huawei Huang, Zibin Zheng, and Jing Bian. 2020. Solutions to

scalability of blockchain: A survey. IEEE Access 8 (2020), 16440–16455.

