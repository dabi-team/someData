A Cooperative Optimal Mining Model for Bitcoin

David Lajeunesse∗ and Hugo D. Scolnik†
∗†Master in Information Security
†Department of Computer Science and ICC
University of Buenos Aires, Argentina
∗davidlajeunesse1, †hscolnik@gmail.com

1
2
0
2

l
u
J

0
2

]
T
G
.
s
c
[

1
v
7
0
7
9
0
.
7
0
1
2
:
v
i
X
r
a

Abstract—We analyze Bitcoin mining from the perspective of
a game and propose an optimal mining model that maximizes
proﬁts of pools and miners. The model is a two-stage Stackelberg
game in which each stage forms a sub-game. In stage I, pools are
the leaders who assign a computing power to be consumed by
miners. In stage II, miners decide of their power consumption
and distribution. They ﬁnd themselves in a social dilemma
in which they must choose between mining in solo, therefore
prioritizing their individual preferences, and participating in
a pool for the collective interest. The model relies on a pool
protocol based on a simulated game in which the miners compete
for the reward won by the pool. The solutions for the stage I
sub-game and the simulated protocol game are unique and
stable Nash equilibriums while the stage II sub-game leads to
a stable cooperative equilibrium only when miners choose their
strategies according to certain criteria. We conclude that the
cooperative optimal mining model has the potential to favor
Bitcoin decentralization and stability. Mainly, the social dilemma
faced by miners together with the balance of incentives ensure
a certain distribution of the network computing power between
pools and solo miners, while equilibriums in the game solutions
provide stability to the system.

Index Terms—Bitcoin, game theory, optimal mining, social

dilemma, cooperation, decentralization, stability

I. INTRODUCTION

In Bitcoin, miners are responsible for the transactions added
to the chain. Therefore, their role in the system is pivotal
as they determine the owners of the transferred funds. Their
honest behavior is fostered through ﬁnancial incentives: they
receive a ﬁxed reward for every block extending the main
chain and also collect fees associated with the transactions
processed. Miners can mine as lone nodes or participate in a
mining pool in which they combine their resources to solve
the Proof-of-Work (PoW). A solo miner is less likely to solve
the PoW ﬁrst and consequently his income is less constant.
On the contrary, in a pool, rewards are more frequent but they
must be shared among participating miners.

Currently,

in the Bitcoin network, around 65% of the
computing power is controlled by three Chinese pools [1].
This undermines the principle of decentralization on which
relies the security of the system and makes Bitcoin vulnerable
to majority attacks [2] that can be used as levers to alter the
transaction history. Decentralization of the computational work
is hard to ensure when miners mainly seek to satisfy their
personal interests and base their decisions on maximizing their

978-1-6654-3924-4/21/$31.00 ©2021 IEEE

proﬁts using the information at their disposal. In this regard,
the overall
transparency of mining-related data is lacking
as participants have no incentive to share their information.
In consequence, there are not enough elements to base an
optimal economic decision. Ultimately, miners often favor the
income stability offered by pools. A large proportion of miners
participate to a limited number of pools whose modalities of
operation meet their common needs. As a result, the current
mining architecture is insufﬁcient to ensure decentralization
and stability of the system as no robust method supports these
principles beyond the PoW. This work models Bitcoin mining
with game theory. The solution of the game leads to a stable
and decentralized cooperative equilibrium for the beneﬁt of
all: pools, miners, users and investors.

The rest of the paper is organized as follows. Section II
summarizes related work that serves as a basis for the optimal
mining model proposed in section III and its application in a
broader model based on cooperation in section IV. Section V
shows the results of a simulation, section VI discusses and
evaluates the cooperative optimal mining model and ﬁnally,
section VII presents a breve conclusion of this work.

II. RELATED WORK

A. Optimal Mining

Dimitri [3] and Chiu et Koeppl [4] apply game theory to
analyze the optimal power consumption of a mining node.
They assume that miners strive to maximize their utilities, i.e.,
proﬁts, namely revenue minus cost. A similar model has also
been developed by Xiong et al. [5] in an edge computing ser-
vice context in support of a blockchain application for mobile
devices. They call miners’ demand game the noncooperative
competition between miners for the reward. All three analyzes
lead to equivalent results. However, Xiong et al. [5] consider
more parameters: among others, the transaction fees and the
probability of mining an orphan block.

All the studies mentioned above apply a static model to
represent the competition between miners: there is only one
permanent state of the game that results from all the miners’
simultaneous decisions regarding their resource allocation.
Equilibrium is achieved when everyone adopts the equilibrium
strategy, i.e., optimal strategy. Otherwise, at least one miner
can improve his utility by unilaterally changing his strategy.
In reality, Bitcoin is an open network and any miner is
free to connect, disconnect and modify his mining-allocated
resources at any time. The system state and the total computing

 
 
 
 
 
 
power are hence inherently dynamic. Consequently, a static
model fails to take into account the evolving nature of power
consumption resulting from the strategic interactions between
miners.

Dhamal et al. [6] propose a model to evaluate the optimal
power consumption in the dynamic context of players involved
in the mining competition. They model a stochastic game
that ends when a block is successfully mined. Players are the
miners who seek to maximize their utilities and can modify
their investment strategies of computing power according to
the state of the game and the strategies of others. A game
state corresponds to a set of miners present in the system,
which they can join and leave at any time. Therefore, unlike
the static model, theirs considers the possibility that the reward
may not be earned in the current state with the current set of
strategies of the miners involved. The transition between states
is probabilistic and continuous in time. At each transition,
miners reevaluate their strategies and a new set of strategies
is deﬁned for the next state. Two state transitions are deﬁned:
going from state S to state S(cid:48) when a new miner enters the
system or going from state S to state S(cid:48)(cid:48) when one leaves.
The expected utility of a miner in state S is a weighting of
his expected utility if the reward is won in the current state
before any transition, his expected utility if the system transits
to state S(cid:48) and his expected utility if it goes to state S(cid:48)(cid:48). When
a transition occurs, the new state becomes the current one, that
is S, and the expected utility is re-evaluated in the same way.
Therefore, the expected utility function of a miner is recursive,
which facilitates its optimization in order to evaluate the best
response function. By summing all the players, the authors
then determine the Markov perfect equilibrium (MPE) that
corresponds to the equilibrium strategy.

In their work, Dhamal et al. [6] present a general stochastic
model that allows the analysis of investment strategies of
computing power in a distributed system environment. They
analyze two scenarios,
the ﬁrst being a generalization of
the second. In scenario 1, similar to blockchain mining, a
reward is offered for solving a problem. In scenario 2, a
reward is offered to participants based on their individual
contributions to the total computing power, as in the case of a
volunteer computing system for example. In the ﬁrst scenario,
the authors consider that the problem resolution rate varies
depending on the current network computing power, while in
the second scenario the resolution rate is ﬁxed and independent
of the network power. Despite the fact that the Bitcoin protocol
adjusts the PoW resolution rate every 2016 blocks according
to the time it took to generate them, and therefore according
to the network computing power, scenario 2 is better suited
for Bitcoin. The reason is that in the closed framework of a
game, that is to say the mining of a block, the constant rate
of resolution of the PoW is independent of the total network
power.

B. Cooperation in Social Dilemmas

Let us consider a game with n players in which possible
actions are cooperation (C) and desertion (D). We denote the

utility of a cooperating player aj and that of a deserting player
bj, where j is the number of others players who cooperate.
We have the following properties of the utilities of a social
dilemma [7]:

1) Players prefer others to cooperate: aj+1 (cid:62) aj and

bj+1 (cid:62) bj, ∀j

2) Desertion generates an expected utility strictly superior

to cooperation: bj+1 > aj, ∀j

3) Mutual cooperation is promoted at the expense of mutual

desertion: an−1 > b0

Hilbe et al. [8] developed a theory for Zero-Determinant
(ZD) strategies (Press et Dyson [9]) that allows to achieve
cooperative equilibriums in repeated multiplayer social dilem-
mas, unlimited in the number of players1. ZD strategies are
memory-one, which means they are based solely on the result
of the previous iteration of the game. From Akin’s [10]
overall result2 showing the relationship between a memory-one
strategy and the limit distribution, Hilbe et al. [8] demonstrate
the linear relationship between the utility of a player who
applies a ZD strategy of a certain form and that of others,
regardless of their strategies. By choosing well the parameter
values, a player can thus exercise some control over the
relationship between its utilities and those of the rest.

Hilbe et al. [8] show that certain ZD strategies lead to
a stable cooperative Nash equilibrium if they respect two
criteria. One of them infers that when the number of players is
large, they can always achieve such equilibrium if they adopt
a fair ZD strategy of the form p = pRep + φ[gi − g−i].
The vector p = (pC,n−1, . . . , pC,0, pD,n−1, . . . , pD,0) contains
the probabilities pS,j that player i will cooperate in the next
iteration of the game having chosen action S ∈ (C, D) in the
previous one while j others cooperated. The vector gi = (gi
S,j)
comprises the possible utilities for player i during an itera-
tion, and we denote gi
C,j = aj and gi
D,j = bj. Similarly,
g−i = (g−i
S,j) corresponds to the average utilities of others,
D,j = jaj−1+(n−j−1)bj
and g−i
with g−i
.
The parameter φ determines the speed, in terms of number
of iterations of the game, at which utilities converge towards
the linear relationship. As the probabilities of cooperating
pS,j are necessarily between 0 and 1 inclusively, the value
of φ must be chosen accordingly and the permissible values
depend on the type of social dilemma. By applying a fair
strategy, a player ensures that he will have a utility equal to
the average utility of others, regardless of their strategies. If
enough players adopt such a strategy, they can maintain a
stable cooperative equilibrium and prevent mutual desertion
caused by a recalcitrant group or in the event of accidental
desertion.

C,j = jaj +(n−j−1)bj+1

n−1

n−1

1For large groups, the mechanisms developed to maintain equilibrium are
often ineffective because it is difﬁcult for players to analyze the behaviors
of their opponents and have an inﬂuence over them. Therefore, the theory of
Hilbe et al. [8] ﬁts well with the high number of Bitcoin miners.

2(p − pRep) · v = 0, where pRep is the memory-one repeat strategy with
C,j = 1 and pRep
pRep

D,j = 0 and v is the limit distribution.

the MPE that corresponds to the equilibrium strategy, with the
following result (proof in appendix):

x(S)∗

i

= max

(cid:26)

ψ(S)

(cid:18) 1
ki

−

ψ(S)
2βτ (r + θti)e−βziti

ki

(cid:19)

(cid:27)

ci

, 0

(2)

where,

ψ(S) =

| ˆS| − 1 +

(cid:114)

2
(| ˆS| − 1)

+ 4kll
βτ

(cid:80)

j∈ ˆS

cj
kj (r+θtj )e−βzj tj

2
βτ

(cid:80)

j∈ ˆS

cj
kj (r+θtj )e−βzj tj

Based on (2) and following the same reasoning as in [6],
(cid:54)

invest any computing power if

1
ki

2βτ (r+θti)e−βziti ci. To participate in mining, we then have
<

2βτ (r+θti)e−βziti ci or equivalently ci

ψ(S)

>

ki

ki

a player will not
ψ(S)

ki
the condition 1
ki
βτ (r+θti)e−βziti
ψ(S)

. Replacing ψ(S), we obtain:

ci
ki

<

(r + θti)e−βziti · 2 (cid:80)

j∈ ˆS

cj
kj (r+θtj )e−βzj tj

| ˆS| − 1 +

(cid:114)

(| ˆS| − 1)

2

+ 4kll
βτ

(cid:80)

j∈ ˆS

cj
kj (r+θtj )e−βzj tj

(3)
Thus, there is a maximum threshold for the ratio of the
energy cost over the energy efﬁciency that depends on various
parameters and beyond which a player will choose not to mine.

IV. BITCOIN COOPERATIVE OPTIMAL MINING MODEL

The cooperative optimal mining model

is a two-stage
Stackelberg game. Stage I is the pool sub-game, in which
pools are the leaders who work together to determine the
optimal computing power that each should generate. Stage II
is the miners’ dilemma, a sub-game in which miners are the
followers who decide on their participation in a pool and their
investment strategy of computing power. This is schematized
in Fig. 1.

In stage I, pools collaborate together by sharing the infor-
mation necessary to achieve equilibrium and maximize their
utility. The information shared results from the cooperation
among miners; by joining a pool, they agree to share their
marginal cost, maximum computing capacity and energy efﬁ-
ciency, for the beneﬁt of all. This allows the pool to establish
the computational work that each of its members must do

III. BITCOIN OPTIMAL MINING MODEL

We use the stochastic model of Dhamal et al. [6] as the
basis, to which we integrate some parameters of the static
model of Xiong et al. [5] to consider the transaction fees
and the probability of a mined block ending up orphaned. We
introduce an energy efﬁciency factor k to properly model the
probability of wining the reward based on the number of PoW
computed solutions instead of the energy consumed. The value
of k depends on the mining hardware and can be taken from
the product characteristics. For example, the energy efﬁciency
of an Antminer S19 Pro is approximately 1/30 TH/J [11]. The
criterion to fulﬁll is the relative value of the ki factors among
players and not the value in itself. Finally, we break down the
value of the reward by including a currency conversion rate τ
to isolate the impact of the value of the Bitcoin currency on
mining. The rest of the notation is mostly consistent with [6],
as shown in Table I.

The expected utility of player i in state S adopting strategy
x corresponds to its expected revenue minus its expected cost,
as follows:

R(S,x)
i

=

β
D(S,x)

(cid:80)

kix(S)
i
j∈S kjx(S)
j + kll
λj
(cid:88)
D(S,x)

+

j /∈S

−

cix(S)
i
D(S,x)

R(S∪{j},x)

i

τ (r + θti)e−βziti

+

(cid:88)

j∈S

µj
D(S,x)

R(S\{j},x)

i

(1)

The changes we make to the model of Dhamal et al. [6]
have no impact on their demonstration of the existence and
uniqueness of the MPE and it remains valid for our model.
Hence, we use the same methodology as in [6] to determine

TABLE I
NOTATION OF THE BITCOIN OPTIMAL MINING MODEL

U
S
ˆS
x(S)
i
l
λi
µi
β
1
D(S,x)
r
θ
τ
ti
zi
ci
ki
kl

a

Universal set of strategic players, present in the system or not
Set of strategic players currently present in the system
Set of players in S who invest a positive computing power
Computing power investment strategy of player i in state S
Constant power consumption of the nonstrategic players
Arrival rate in the system of strategic player i
Departure rate from the system of strategic player i
Constant rate of resolution of the PoW per unit of time
Sojourn time in state S
Fixed block reward in bitcoins
Average fees of a transaction in a block of player i
Bitcoin currency conversion rate
Number of transactions included in a block of player i
Propagation delay factor of a block in the network
Marginal cost incurred by player i per power and time unit
Energy efﬁciency factor of player i
Average energy efﬁciency factor of the nonstrategic players

aD(S,x) = β + (cid:80)
j /∈S λj + (cid:80)
follow exponential distributions.

j∈S µj , where D(S,x), β, λj and µj

Fig. 1. Stackelberg game of the cooperative optimal mining model for Bitcoin.

this optimal

to maximize his utility. However,
investment
represents a logical course of action for the miners rather than
an obligation, as it cannot be imposed. When the pool wins a
reward, it is shared among miners based on the outcome of a
simulated game, which we call the protocol game. The latter,
the distribution of the computational work and the sharing of
the reward are all components of the pool protocol that governs
the rules of operation between the pool and its miners. The
miners’ dilemma is a noncooperative game between miners in
the Bitcoin network, in which they decide on their participation
in a pool and their investment of computing power.

A. Pool Sub-Game

The pool sub-game is the competition between pools for the
reward associated with the mining of a block extending the
chain. We apply the Bitcoin optimal mining model presented
in section III to analyse the game, where pools are the players.
In (1), we set µj = λj = 0 as pools are considered always
present in the system and, therefore, we obtain a static model.
The equilibrium is given by (2). As for the other parameters,
S is the set of pools present in the system with sufﬁcient
resources to play the optimal strategy; l is the residual network
computing power that is not generated by S; ki is the energy
efﬁciency of pool i and corresponds to an average of the
energy efﬁciencies of its miners weighted by their contribution
to the optimal strategy3; ci is the marginal cost of pool i and
is an average of the marginal costs of its members weighted
by their contribution to the optimal strategy; θ corresponds to
the average fee of a transaction included in a block of pool i;
zi is the propagation delay factor in the network of a block of
pool i. We make the assumption that every major pool invests
a positive computing power supposing a relatively uniform
distribution among miners with different marginal costs and
energy efﬁciencies. Therefore, we deﬁne without distinction
ˆS = S = U.

B. Pool Protocol

1) Distribution of the computational work: The pool cal-
culates the computational work that each miner must do. To
maximize the pool utility, the distribution of the work is carried
out in increasing order of ratios ci/ki and equally among
miners, according to their maximum capacity and until the
pool equilibrium strategy is reached.

2) Protocol game: This component simulates a competition
between miners of the pool for the reward that the latter
earned. The equilibrium is given by (2) and serves to calculate
the reward fraction of each miner. We set θ = ti = zi = 0
since a block is broadcast in the pool sub-game and only
the header is transmitted to the miners to solve the PoW. As
for the other parameters, S is the set of miners registered in
the pool who have sufﬁcient resources to play the optimal
strategy; ki
is the
computing power generated by the miners who fulﬁll condition
(3) but don’t have enough resources to be part of set S (those

is the energy efﬁciency of miner i; l

3Collaboration between pools enables an iterative calculation to evaluate

αi =

miners invest their maximum capacity); λi and µi refer to the
connection/disconnection rates to/from the pool of miner i; ci
is the marginal cost of miner i, and ˆS is the set of miners
in the pool who invest a positive computing power. The latter
set is iteratively established by gradually integrating miners in
increasing order of ratios ci/ki until the condition (3) is met.
3) Sharing of the reward: The reward won by the pool is
shared among miners according to the cost of their resources
and in proportion to the optimal rate of return (ROI)4 they
would have had if they had participated in an intra-pool
competition as modeled by the protocol game. The fraction
of the pool reward distributed to a miner corresponds to the
proportion of his expected reward (E[r]xi
i ) over the expected
pool reward (E[r]x∗
the expected reward
corresponds to the expected utility plus the expected cost.
Hence, the fraction αi of the reward given to miner i is

p ). In each case,

p

x∗
E[r]
i
i
x∗
p
p

=

x∗
p
p +

Ii·R
x∗
p
p +

R

cix∗
i
β
cp x∗
p
β

, where Ii =

I C
i ·I ROI
i
j ·I ROI
j∈P I C
j

(cid:80)

. We

i

x∗
p
p

E[r]
denote I C
the relative cost5 of the resources consumed by
i
miner i; I ROI
is miner i expected relative ROI in the protocol
game; P is the set of miners in the pool; R
is the pool
expected utility calculated in the pool sub-game; x∗
is the
i
optimal computational work for miner i, and x∗
p is the pool
equilibrium strategy in the pool sub-game. Relative costs are
used to equitably share the reward among miners considering
that not all invest the same resources as determined by the
distribution method of the computational work. Relative ROIs
are calculated from miners’ expected utilities in the protocol
game when they adopt their optimal strategy and ensure that
they obtain an optimal rate of return compared to other pool
members. This deterministic method of sharing the reward
based on a simulated game avoids real competition between
miners and the consequent reduction of their expected proﬁts.
Together, the methods for distributing the computational work
and sharing the reward minimize the cost of the pool’s optimal
strategy and maximize its expected utility by ﬁrst allocating
work to the most efﬁcient miners, i.e., those with lower ci/ki
ratios, without affecting their relative optimal ROI.

C. Miners’ Dilemma

(cid:16)

The strategy of a miner is to distribute his resources
between pools and solo mining. Based on the evaluation of
a single block, the expected utility Rx
i of miner i adopting
strategy x corresponds to the sum of his expected utilities
in pools and as a solo miner, and can be expressed as
i = (cid:80)
i,m where Ii,pj is the relative
Rx
+ Rx
xpj
rate Ii, as deﬁned in section IV-B3, of miner i in pool pj; R
pj
is the expected utility of pool pj adopting strategy xpj in state
S in the pool sub-game; Rx
i,m is the expected utility of miner
i with strategy x in state S as a solo miner in the pool sub-
game, in which he is part of set S if he has sufﬁcient resources
to adopt the equilibrium strategy or part of l otherwise.

Ii,pj · R

xpj
pj

j∈S

(cid:17)

4ROI = Expected utility/Expected cost.
5A parameter relative rate for a certain group is the ratio of the parameter

their marginal cost, energy efﬁciency and optimal strategy.

value for that group over that of an arbitrary chosen reference group.

i > Ii,pj · R

For a given pool and in the evaluation of a single iteration
of the game, i.e., a mined block, a miner will choose to
mine in solo if his expected utility is greater than that in a
xpj
pool, that is if Rx
. However, this condition is
pj
always met with the structure established by the cooperative
optimal mining model and is not sufﬁcient for a miner to make
a strategic decision that maximizes his utility over several
iterations. Pools are alliances of miners and allow to analyze
the pool sub-game based on the pools’ actions rather than
those of their members, who may have individual preferences
that differ from those of the group. In the miners’ dilemma,
this divergence of preferences is at the heart of their strategic
choice. Alliances in the pool sub-game reduce competition and
increase expected proﬁts. When all the miners cooperate by
participating in a pool, their expected utility is greater than that
of a noncooperative scenario. However, one who deserts for
mining in solo increases his expected utility by beneﬁting from
the reduced competition in the pool sub-game without having
to share his rewards. Thus, based on individual rationality,
the optimal strategy for a miner is always to desert. However,
if everyone adopts this strategy, cooperation disappears and
the expected utility of everyone decreases because of the high
competition in the pool sub-game. In game theory, this type
of problem constitutes a social dilemma and ﬁnds its name in
the dilemma generated for players, who must choose between
their individual interest and the collective interest.

To properly assess the miners’ dilemma, we need to model
an endlessly repeating game in which the expected utility of a
miner is the sum of his expected utilities over all future iter-
ations. Possible actions are cooperation (C), i.e., participation
in a pool, or desertion (D), i.e., mining in solo. Hence, there
are 2n possible states of an iteration according to the choices
of the n miners present in the system. If the latter have the
same utility structure, the space is then limited to n states. As
the game is repeated endlessly, players cannot use backward
induction6 to determine their strategy. Therefore, they often
rely on the past behavior of their opponents7. Accordingly,
we rely on the theory of Hilbe et al. [8] and state that miners
adopt a fair ZD strategy of the form p = pRep + φ[gi − g−i]
to reach a stable cooperative equilibrium.

When a miner chooses cooperation, his optimal strategy is
to do the computational work assigned by the pool. When
deserting for solo mining, he integrates the pool sub-game. If
he has sufﬁcient resources, he adopts the equilibrium strategy
and is a strategic player of the set S, otherwise, his power
consumption is counted in l. In this case, he will invest his
maximum capacity if he fulﬁlls condition (3), the calculation
of which he must estimate as he does not share information
with the pools as a result of being a nonstrategic player.

6In game theory, backward induction is a common concept of solution

which is based on the actions taken during the last iteration.

7This branch of game theory is called evolutionary game theory (EGT),

which applies to the study of changing populations [12].

V. SIMULATION

A. Pool Sub-Game

We set the following values for the parameters: r = 6.25;
τ = 10, 000; β = 0.1; θ = 0.00012; ti = tj = 2100; |U| =
|S| = | ˆS| = 10; ci = cj = 0.0007; λj = µj = 0; ki = kj =
kl = 1; zi = zj = 0.005/60 and l = 700, 000. Based on (2),
we ﬁnd that with ten strategic pools present in the system,
the optimal strategy is to invest 759, 174.7 kWh/min, which
generates an expected proﬁt of $535.60 per block for each
strategic pool as determined by (1).

B. Pool Protocol

To facilitate calculations, we suppose all miners have
the same marginal cost and energy efﬁciency. We suppose
that 1100 miners are registered in each pool and 1050 are
connected. We set that 500 other miners have a maximum
computing capacity that
impedes adopting the equilibrium
strategy and, therefore, their maximum computing power is
counted in l. Hence, we set the following parameters for the
x∗
protocol game, where E[r]
p
is the expected reward earned
p
by the pool when adopting the optimal strategy x∗
p in the pool
x∗
sub-game: r = E[r]
p
p = 5849.82; τ = 1; β = 0.1; |U| = 600;
|S| = | ˆS| = 550; ci = 0.0007; l = 10, 000; λj = 1; µj = 0.1;
ki = kj = kl = 1, and the other parameters are null.

From the pool optimal power investment calculated in
section V-A, we establish the distribution of the computational
work between miners and derive the work cost per miner
and the relative cost ratios. After, we evaluate the expected
utility of strategic miners in the protocol game. We do the
same for nonstrategic miners, using the same method as for
strategic ones. However, we use a constant power investment
corresponding to their maximum capacity, which is assumed
to be the same for all, that is xi = l/500. Expected utilities in
the protocol game only serve to determine the relative ROIs,
which are used to calculate the reward fraction αi and the
real expected utility of each miner. All the calculations are
performed as described in section IV-B.

Table II presents the relation between miners’ expected
utilities according to three scenarios: mutual cooperation of all
the miners in the ten pools (an−1), unilateral desertion of one
miner in a pool (an−2 and bn−1) and mutual desertion of all
(b0). The results obtained respect the properties of the utilities
in a social dilemma and show that cooperation signiﬁcantly
increases expected utilities.

C. Miners’ Dilemma

A Markov chain Monte Carlo simulation is used to verify
that a stable cooperative Nash equilibrium is achievable.
To simplify, we suppose a parametric network of 10, 000
miners, all with the same proﬁle. The vector of the pos-
sible utilities for the mining of a block is deﬁned gi =
(an−1, ..., a0, bn−1, ..., b0) and we arbitrarily establish an−1 =
$35.00, a0 = $0.04, bn−1 = $70.00 and b0 = $0.05. We
determine the utilities aj and bj, where j ∈ {1, ..., n − 2},
in order to obtain a linear decrease. The resulting vector gi

TABLE II
MINERS’ EXPECTED UTILITIES ACCORDING TO DIFFERENT STRATEGIC PROFILES AND SCENARIOS OF COOPERATION

Type of
Miners
NonStrategic

Strategic

Number of Maximum Capacity

Miners
500
300
200
50

(kWh/min)
20
2000
3000
5000

Assigned Work
(kWh/min)
20
1362
1362
1362

Social Dilemma Property 1 (SDP1)
an−1/an−2
1.000008272
1.000530856
1.000793597
1.001319688

bn/bn−1
1.000026223
1.000287113
1.000431086
1.000718589

SDP2
bn/an−1
1.00015
1.47
2.20
3.67

SDP3
an−1/b0
596.33
526.89
526.89
526.89

respects the properties of the utilities of a social dilemma
and g−i
is calculated according to the formula given in
section II-B. All miners in the network are assumed to adopt
a fair ZD strategy as determined by Hilbe et al. [8] to achieve
a stable cooperative equilibrium.

Fig. 2 shows the evolution of the degree of cooperation
in the network according to different values of φ and initial
cooperation degrees. Fig. 2a,b show that while miners ﬁrst
cooperate at their arrival in the system, a fair strategy leads to
a stable cooperative equilibrium and supports to some extent
strategy deviations (accidental or voluntary). However, Fig.
2b,c show that for a high φ value, the more miners desert in
an iteration, the harder it will be to strike a stable cooperative
equilibrium. This is due to the increased variability in the
probabilities of cooperation when φ is high. On the one hand,
desertion of a minority is punished more severely by gener-
ating further desertions. On the other hand, the probability of
returning to cooperation after deserting decreases signiﬁcantly
with the cooperation degree. As a result, more iterations are
needed to achieve a stable equilibrium and the probability for
the latter to reach mutual desertion increases as the cooperation
decreases. Nevertheless, Fig. 2d shows that a low φ value, or
even one that tends to zero, stabilizes the current degree of

(a)

(c)

(b)

(d)

Fig. 2. Evolution of the cooperation in the network according to different
values of φ and degrees of initial cooperation (IC). (a) 100 simul., φ =
1/ max(gi − g−i), IC = 99.5%. (b) 100 simul., φ = 1/ max(gi − g−i),
IC = 98%. (c) 10 simul., φ = 1/ max(gi − g−i), IC = 80%. (d) 10 simul.,
φ = 1/[100 ∗ max(gi − g−i)], IC = 60%.

cooperation in the network. For instance, in Fig. 2b,c where
all miners apply a strategy with a large φ, some curves are
moving towards mutual desertion and at some point reach a
degree of cooperation of 60%; cooperative miners could then
form an alliance8 and agree to adjust their φ to a very low
value to ensure a minimum degree of cooperation, regardless
of the deserter strategies. The degree of cooperation will thus
stabilize as in Fig. 2d if defectors continue to defect or increase
if they return to cooperation.

VI. DISCUSSION

At equilibrium, the Bitcoin network power consumption
obtained from the simulation is of the order of 4000 TWh an-
nually. This is signiﬁcantly higher than the estimates reported
by [1] and [13], which are around 60 to 75 TWh annually.
This implies that equilibrium would not be reached in the
current Bitcoin environment. However, variations in the model
parameters could change this situation. In particular, the ﬁxed
reward will decrease over time until the transaction fees are
the only economic incentive. Moreover, the Bitcoin conversion
rate directly affects the reward value.

In Table II, simulation results also show that the limited
power consumption that a pool must generate to reach equi-
librium impedes its miners that have additional resources. If
they cannot exploit all of their resources within the pool and
they don’t spend their extra capacity elsewhere, these miners
are those making the biggest sacriﬁce in participating in a
pool. Miners will rationally invest their additional available
resources in other pools that need them to play the equilibrium
strategy or they will mine in solo. It is difﬁcult to estimate
the number of players who would be strategic in the pool
sub-game. The best scenario, that does not seem unlikely and
would ensure decentralization, would be that the implementa-
tion of the model creates a competitive market between pools
somewhere between an oligopoly and a perfect competition,
with a large number of them applying substantially the same
protocol. Nonetheless, this aspect should be studied more.

In each sub-game of the cooperative optimal mining model,
there is an equilibrium. In the pool sub-game and the protocol
game, equilibriums are unique and therefore necessarily stable.
In the miners’ dilemma, a stable cooperative equilibrium is
achievable. In this case, equilibrium does not mean that all
miners cooperate at all times, but rather that their strategies

8Hilbe et al. [8] also demonstrate the inﬂuence that alliances can have on
other players. Depending on its size and strategy, an alliance can even incite
and bring deserters back to cooperation.

are deﬁned to promote cooperation at the expense of desertion.
They can establish a positive probability of defecting from the
pool under certain circumstances, but will ultimately beneﬁt
from going back to cooperation when the desertion rate is
high. The stable cooperative equilibrium ensures that there is
always a certain degree of cooperation in the network, so that
miners who participate in a pool beneﬁt from this cooperation
even if there is a recalcitrant group who defects and whose
expected utility is greater9. On the one hand, the fact that
miners have individual preferences for desertion contributes
to decentralization by distributing power outside the pools. On
the other hand, the collective beneﬁt from cooperation prompts
them to participate in a pool. To this extent, the incentive to
cooperate is essential for the viability of the model. Since
pools are those who implement it, they must beneﬁt from
doing so and be able to attract miners. The stable income
offered by a pool is also an incentive to participate in it.
In short, there is a balance between incentives for cooper-
ation and desertion that leads to a stable and decentralized
cooperative equilibrium of the network power distribution.
However, the existence of equilibriums in game solutions does
not necessarily mean that they are reached. To do so, players
must adopt the equilibrium strategy. This is particularly true
in multiplayer social dilemmas that repeat endlessly, since
players often deﬁne their strategies based on the past behavior
of their opponents such that the evolution of the game can be
difﬁcult to predict.

Additional pool protocol rules could be implemented. This
could include retroactive adjustments to ensure that the re-
wards earned by miners match those of the equilibrium sce-
nario. Likewise, the same mechanism could be implemented
between pools, which would conﬁrm their mutual commitment
to respect the equilibrium strategy. This would add an incentive
for both miners and pools to adhere to the equilibrium strategy
and thus strengthen the stability of the system. The integra-
tion of a parameter to incentivize miners to use renewable
energy could also be considered. Furthermore, pool fees could
correspond to a percentage of the miners’ proﬁts. As the
cooperative optimal mining model seems to have the potential
to signiﬁcantly increase miners’ expected utilities, this would
imply the same for pool proﬁts.

A mining model based on optimal power consumption offers
the advantage to be predictive and brings stability to the
system. For example, the model can anticipate the impact of a
halving on the network power consumption and thus mitigate
the historic uncertainty induced by this operation. Similar
analyzes can be conduced from other parameters and serve as a
tool for system design decision making. For instance, the effect
on mining of modifying the block size limit can be evaluated
from the propagation delay zi and the number of transactions
ti in a block. The model can also help to determine the amount
of transaction fees θ necessary to maintain an incentive for

9This is aligned with the concept of evolutionary stable strategy (ESS)
in symmetric normal form games. A population in which all members play
an ESS is resistant to a small recalcitrant group who plays another mixed
strategy [12].

miners and a sufﬁcient network power to ensure the security
of the system. As well, the increased transparency of mining
information that results from sharing marginal costs, energy
efﬁciencies and maximum capacities facilitates analyzes and
forecasting, which in turns strengthen user conﬁdence and
system stability.

A deterministic and transparent model regarding power
consumption may serve as a preventive or detective tool
against certain known mining-related attacks, such as for
selﬁsh mining [14], [15] or block retention [16]. By knowing
the resources that each one should consume, it is possible to
deduce the rewards that each one should collect and thus detect
dishonest behaviors when miners or pools collect more than
their fair share. Furthermore, a retroactive adjustments system
as suggested above would bring stability and constitute an
indirect commitment from pools and miners to act honestly,
as it would nullify any extra beneﬁts obtained from dishonest
behaviors. However, this should be analyzed in more depth.

VII. CONCLUSION

We believe that the proposed model can improve the de-
centralization, stability and security of Bitcoin. Nevertheless,
more complex simulations should be done to evaluate its
applicability in the current Bitcoin environment. We extend
our conclusions to similar PoW-based blockchains, especially
if incentives are designed considering the model.

Possibly, the implementation could be done through smart
contracts. For example, Ethereum layer 2 solutions that al-
low complex off-chain operations could be considered to
constantly evaluate the optimal power consumption of the
participants. Oracles could provide external information such
as electricity cost, Bitcoin conversion rate and hardware energy
efﬁciency. Furthermore, a decentralized governance system
could decide of the evolution of the protocol.

A. Proof of (2)

APPENDIX

Proof:
[6],

in
Z (S,x)
= β
i
have ∂Z(S,x)
i
∂x(S)
i
=

∂αi
∂x(S)
i

optimizing

Following
(1)
kix(S)
i
j∈S kj x(S)

(cid:80)

D(S,x)

j +kll

the
is

same

same

the
τ (r + θti)e−βziti − cix(S)

reasoning
as

as
optimizing
D(S,x) . We

i

= β
D(S,x) τ (r + θti)e−βziti ∂αi
∂x(S)
i
(cid:16)

(cid:17)

∂
∂x(S)
i

kix(S)
i
j∈S kj x(S)

j +kll

(cid:80)

=

− ci

D(S,x) , where
ki
j∈S kj x(S)

j +kll
D(S,x) τ (r +

−

β

(cid:80)

=

(cid:21)

− ci

D(S,x) .
∗

(cid:0) (cid:80)

2x(S)
ki
j +kll(cid:1)2 . Thus,
i
j∈S kj x(S)
(cid:20)

∂Z(S,x)
i
∂x(S)
i

θti)e−βziti

ki
j∈S kj x(S)

j +kll

(cid:80)

−

(cid:0) (cid:80)

2x(S)
ki
i
j∈S kj x(S)

j +kll(cid:1)2

Equalizing to 0,
(cid:0) (cid:80)
j +kll(cid:1)2
j∈S kj x(S)
ki

2

(cid:80)

j∈S kj x(S)
ki

j +kll

(cid:20)

kll(cid:1)

1
ki

−

the best response function is x(S)
(cid:21)
(cid:20)

i

ci
βτ (r+θti)e−βziti

(cid:80)
(cid:0) (cid:80)

ki
−
j∈S kj x(S)
j +kll
j +kll(cid:1)2
j∈S kj x(S)
2βτ (r+θti)e−βziti = (cid:0) (cid:80)
(cid:21)
.

j +kll(cid:1)ci
j∈S kj x(S)
2βτ (r+θti)e−βziti

ki

ci

−
(cid:0) (cid:80)

ki

Reformulating,

we

j∈S kjx(S)

j +

=

=

(cid:20)

∗

ψ(S)

2βτ (r+θti)e−βziti ci

i

ki

−

1
ki

= ψ(S)
j∈S kjx(S)

have x(S)
ψ(S) = (cid:80)
of
kll on both sides, we get (cid:80)
(cid:80)
ψ(S)

(cid:20)
| ˆS| − ψ(S)
βτ

the equality,

j∈ ˆS

j + kll. By bringing ki
to the left
summing on all players and adding
j + kll =

j∈S kjx(S)
(cid:21)

(cid:21)

where

cj
kj (r+θtj )e−βzj tj
by ψ(S), we
(cid:21)

+ kll. Replacing

obtain ψ(S)

=

+kll, or equivalently,

(cid:80)

j∈S kjx(S)

j
(cid:20)
| ˆS|− ψ(S)
βτ

ψ(S)

+ kll
(cid:80)

(cid:80)

− (| ˆS| − 1)ψ(S) − kll.
0 = 1
βτ
Solving the equation for the positive values of ψ(S), we

j∈ ˆS

j∈ ˆS

cj
kj (r+θtj )e−βzj tj
2
kj (r+θtj )e−βzj tj (ψ(S))

cj

get ψ(S) =

| ˆS|−1+

(cid:114)

(| ˆS|−1)2+ 4kl l
βτ

(cid:80)

j∈ ˆS

cj

cj

kj (r+θtj )e

−βzj tj

.

(cid:80)

2
βτ

j∈ ˆS

kj (r+θtj )e

−βzj tj

Therefore, we have the following equilibrium strategy:
x(S)∗

= max

, where

ψ(S)

, 0

−

(cid:26)

(cid:27)

(cid:18)

(cid:19)

i

| ˆS|−1+

2
(| ˆS|−1)

ψ(S)
(cid:114)

1
ki

ki
+ 4kll
βτ

2βτ (r+θti)e−βziti ci
(cid:80)

cj

kj (r+θtj )e

−βzj tj

j∈ ˆS

cj

2
βτ

(cid:80)

j∈ ˆS

kj (r+θtj )e

−βzj tj

ψ(S) =

B. Values of the parameters for the simulation

1) General parameter β: The constant rate of resolution
of the PoW is set to 0.01 block per minute to generate a new
block on average every ten minutes.

2) Pool sub-game: r: The current reward for mining a
block that is added to the chain is 6.25 bitcoins. τ : The
value of one bitcoin is estimated to $10,000 at
the time
of this work according to [17]. ci: The marginal cost of
electricity is rounded to 0.0007 kWh/min based on the average
marginal cost of electricity estimated to $0.04 kWh in [1]. ti:
The average number of transactions in a block is estimated
to 2100 according to [17] (the number of transactions per
block is generally between 1500 and 2500). θ: The average
transaction fees of $0.00012 per transaction are obtained
by converting in bitcoins (1 bitcoin = 100M satoshis) the
product of the average transaction size (600B) and the average
charge rate per byte (20 satoshis/B). Likewise, transaction fees
are generally between 0.00004 and 0.0012, values estimated
from a minimum transaction size of 400B and a maximum
of 1200B, and from a minimum fee rate of 10 satoshis/B
and a maximum of 100 satoshis/B. All values are estimated
from [17] and [17]. z: Obtained from the analysis of Xiong et
al. [5] and set to 0.005/60 based on a time in minutes, which
corresponds to a propagation time of 10.5 seconds for a block
containing 2100 transactions. During that time, there is a risk
of a fork in the chain. This result is consistent with that of
11.37 seconds estimated in [18]. S, ˆS, U: The number of large
pools that have sufﬁcient resources to play the equilibrium
strategy is estimated to 10 based on [19] on the distribution
of computing power in the Bitcoin network. l: Arbitrarily set to
correspond to the proportion of the network computing power
that does not come from large pools, which is about 1/11 of
the total power according to [19] and [17].

3) Protocol game: λi, µi: According to [20], the number
of nodes present in the system during a 24 hours period varies
between 10, 300 and 10, 600 approximately, with an average of
around 10, 450 connected nodes. To reproduce this distribution
to the miners connected to a pool, we suppose 1100 nodes are
registered in it and that 500 of them are nonstrategic. We apply
an arrival rate in the pool of λi = 1 to the 600 strategic miners
and a departure rate of µi = 0.1. The probability density
distribution obtained for the time spent in each state for a
miner who connects to the system at state S = 550 shows that
almost all the time (99.97%) is spent between states S = 520
and S = 570, which is consistent with [20].

REFERENCES

[1] C. Bendiksen and S. Gibbons, “The bitcoin mining network: trends, av-
erage creation costs, electricity consumption and sources,” CoinShares,
Tech. Rep., December 2019.

[2] M. Saad, J. Spaulding, L. Njilla, C. Kamhoua, S. Shetty, D. Nyang, and
A. Mohaisen, “Exploring the attack surface of blockchain: A systematic
overview,” arXiv preprint arXiv:1904.03487, 2019.

[3] N. Dimitri, “Bitcoin mining as a contest,” Ledger, vol. 2, pp. 31–37,

2017.

[4] J. Chiu and T. Koeppl, “Incentive compatibility on the blockchain,” in

Social Design. Springer, 2019, pp. 323–335.

[5] Z. Xiong, S. Feng, D. Niyato, P. Wang, and Z. Han, “Optimal pricing-
based edge computing resource management in mobile blockchain,” in
2018 IEEE International Conference on Communications (ICC).
IEEE,
2018, pp. 1–6.

[6] S. Dhamal, W. Ben-Ameur, T. Chahed, E. Altman, A. Sunny, and
S. Poojary, “A stochastic game framework for analyzing computa-
tional investment strategies in distributed computing,” arXiv preprint
arXiv:1809.03143, 2019.

[7] B. Kerr, P. Godfrey-Smith, and M. W. Feldman, “What is altruism?”
Trends in ecology & evolution, vol. 19, no. 3, pp. 135–140, 2004.
[8] C. Hilbe, B. Wu, A. Traulsen, and M. A. Nowak, “Cooperation and
control in multiplayer social dilemmas,” Proceedings of the National
Academy of Sciences, vol. 111, no. 46, pp. 16 425–16 430, 2014.
[9] W. H. Press and F. J. Dyson, “Iterated prisoner’s dilemma contains
strategies that dominate any evolutionary opponent,” Proceedings of the
National Academy of Sciences, vol. 109, no. 26, pp. 10 409–10 413,
2012.

[10] E. Akin, “The iterated prisoner’s dilemma: good strategies and their
dynamics,” Ergodic Theory, Advances in Dynamical Systems, pp. 77–
107, 2016.

[11] Bitmain.com.

Accessed

line].
00020201222165500548JAa69Gvu067A

Available:

January

[On-
26,
https://shop.bitmain.com/product/detail?pid=

2021.

[12] W. H. Sandholm, “Evolutionary game theory,” Complex Social and
Behavioral Systems: Game Theory and Agent-Based Models, pp. 573–
608, 2020.

[13] Bitcoin energy consumption index. Digiconomist. Accessed July
27, 2020. [Online]. Available: https://digiconomist.net/bitcoin-energy-
consumption

[14] A. Sapirshtein, Y. Sompolinsky, and A. Zohar, “Optimal selﬁsh mining
strategies in bitcoin,” in International Conference on Financial Cryp-
tography and Data Security. Springer, 2016, pp. 515–532.

[15] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin mining is
vulnerable,” in International conference on ﬁnancial cryptography and
data security. Springer, 2014, pp. 436–454.

[16] I. Eyal, “The miner’s dilemma,” in 2015 IEEE Symposium on Security

and Privacy.

IEEE, 2015, pp. 89–103.
[17] Bitcoin.com. Accessed July 7, 2020.

//charts.bitcoin.com/btc/

[Online]. Available: https:

[18] C. Decker and R. Wattenhofer, “Information propagation in the bitcoin

network,” in IEEE P2P 2013 Proceedings.

IEEE, 2013, pp. 1–10.

[19] Blockchain.com. Accessed July 7, 2020. [Online]. Available: https:

//www.blockchain.com/pools

[20] Bitnodes. Accessed July 8, 2020. [Online]. Available: https://bitnodes.io/

dashboard/

