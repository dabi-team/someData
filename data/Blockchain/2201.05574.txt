2
2
0
2

p
e
S
3

]

N
G
.
n
o
c
e
[

3
v
4
7
5
5
0
.
1
0
2
2
:
v
i
X
r
a

Empirical Analysis of EIP-1559:
Transaction Fees, Waiting Times, and Consensus Security

Yulin Liu‡
SciEcon CIC
United Kingdom
Bochsler Group
Switzerland

Fan Zhang∗†‡
Department of Computer Science
Yale University
United States

Yuxuan Lu‡
Center
on Frontiers of Computing Studies
Peking University
China

Luyao Zhang∗†‡§
Data Science Research
Center and Social Science Division
Duke Kunshan University
China

Kartik Nayak‡
Department of Computer Science
Duke University
United States

Yinhong Zhao‡§
Duke University
United States

ABSTRACT
A transaction fee mechanism (TFM) is an essential component of
a blockchain protocol. However, a systematic evaluation of the
real-world impact of TFMs is still absent. Using rich data from the
Ethereum blockchain, the mempool, and exchanges, we study the
effect of EIP-1559, one of the earliest-deployed TFMs that depart
from the traditional first-price auction paradigm. We conduct a
rigorous and comprehensive empirical study to examine its causal
effect on blockchain transaction fee dynamics, transaction wait-
ing times, and consensus security. Our results show that EIP-1559
improves the user experience by mitigating intrablock differences
in the gas price paid and reducing users’ waiting times. However,
EIP-1559 has only a small effect on gas fee levels and consensus se-
curity. In addition, we find that when Ether’s price is more volatile,
the waiting time is significantly higher. We also verify that a larger
block size increases the presence of siblings. These findings suggest
new directions for improving TFMs.

CCS CONCEPTS
• Applied computing → Economics; • Security and privacy
→ Distributed systems security; • Human-centered comput-
ing → Empirical studies in HCI; • Networks → Peer-to-peer
protocols.

KEYWORDS
EIP-1559, mechanism design, transaction fees, waiting time, con-
sensus security, empirical analysis, causal inference, natural exper-
iments, event studies, bounded rationality

∗Corresponding authors:
Fan Zhang (email: f.zhang@yale.edu, address: 51 Prospect St, New Haven, CT 06520,
United States) and Luyao Zhang (email: lz183@duke.edu, address: Duke Kunshan
University, No.8 Duke Ave. Kunshan, Jiangsu 215316, China.)
†The joint research was completed during the authors’ Duke University and/or Duke
Kunshan University (DKU) appointments.
‡The authors are listed in alphabetical order according to last names and, then, first
names, and these authors contributed equally to this work.
§Also with SciEcon CIC, 71-75 Shelton Street, Covent Garden, London, United
Kingdom, WC2H 9JQ

1 INTRODUCTION
Computation and storage on public blockchains such as Bitcoin
and Ethereum are scarce resources [18]. To allocate blockchain
resources to users, a Transactions Fee Mechanism (TFM) must be
employed. A TFM is an essential component of a blockchain proto-
col that can fundamentally affect the incentive compatibility, user
experience, and security of a blockchain system [27, 35, 37, 44, 79].
Ethereum, for example, used to employ first-price auctions as the
transaction fee mechanism [79].

While many have proposed novel TFMs beyond simple first-price
auctions [15, 37, 51, 75, 90], there was no real-world implementa-
tion until the Ethereum Improvement Proposal 1559 (EIP-1559) [73]
on Ethereum, the second-largest blockchain network by market
capitalization to date.

On August 5th, 2021, Ethereum activated a major upgrade named
the London hard fork [40], which implemented EIP-1559 together
with several other EIPs and overhauled the Ethereum TFM. EIP-
1559 introduced several novel elements while maintaining back-
ward compatibility. Notably, for instance, it includes a base fee
parameter that indicates the minimum gas price users need to pay
in each block, which adjusts dynamically according to the gas used
in the previous block. It also changes how users specify transaction
fee bids. We defer our presentation of more details on EIP-1559
to Section 3.

To the best of our knowledge, EIP-1559 is not only the first major
TFM change on Ethereum but also the first real attempt to depart
from first-price auctions on any major blockchain. The impact of
this upgrade is profound. Multiple prior works have examined EIP-
1559 from a theoretical point of view. Roughgarden [79] gives a
thorough game-theoretical evaluation of the EIP-1559 mechanism
and points out its incentive compatibility for myopic miners. Reijs-
bergen et al. [75] observes the volatile gas usage after EIP-1559 and
proposed modifications to mitigate this issue. The Ethereum com-
munity had analyzed the EIP informally [19, 68] and expected the
upgrade to mitigate economic inefficiencies due to fee volatility, to
prevent over-payment of transaction fees, and to lower transaction
waiting times [73]. However, the real-world impact of a novel TFM
such as EIP-1559 has not been systematically studied.

 
 
 
 
 
 
We aim to close this gap with a comprehensive and rigorous em-
pirical study. As a major and probably the only recent TFM reform,
EIP-1559 presents a unique opportunity to study the causal effects
of TFM changes on blockchain characteristics. While we focus on
Ethereum, the insight we gain can generalize to other blockchains
and future TFM reforms. We aim to answer three questions on the
impact of this TFM reform.
• Does EIP-1559 affect the transaction fee dynamics? Existing theo-
retical studies predict easier fee estimation under the novel TFM
because the Symmetric Ex-post Equilibrium (SEE) is easier to
solve than the Bayesian Nash Equilibrium (BNE) in the previous
first-price auction for bounded rational users. [37, 79]. However,
the rationality of users on Ethereum has yet to be tested. Thus,
it is essential to verify the theoretical implications empirically.
• Does EIP-1559 affect transaction waiting times? The Ethereum
community expects the TFM to reduce transaction delays [19],
but it is unclear whether and how this happens.

• Does EIP-1559 affect consensus security? EIP-1559 introduces
significant changes to the block size (in terms of gas used) and the
incentive system of miners and users. The security implications
are widely debated [20, 27, 68], but little real-world evidence is
known. We aim to settle the arguments with empirical evidence.

Challenges and our approach
To answer these questions, we collected rich data from the Ethereum
blockchain, mempool1 (for computing waiting time), and exchanges
(e.g., intraday ETH prices) [62, 72]. Measurement of many blockchain
characteristics is challenging. For example, measuring the waiting
time of transactions requires accurate observations of the mempool.
We set up a distributed data collection system to monitor the
mempool of Ethereum and capture the timestamps when each trans-
action is submitted to the mempool, thus obtaining a much more
precise measure of transaction waiting time than the measures used
in existing literature.

Empirically, it is difficult to separate the effect of EIP-1559 on
blockchain characteristics from other confounding factors, such
as price volatility, network instability, and the time trend. An em-
pirical study aiming at unbiased estimates must control for these
confounding factors. Thus, we adopt an event study [63] and Regres-
sion Discontinuity Design (RDD) [12, 53] framework that enables
the estimation of causal effects. By comparing observations of data
on either side of the London hard fork, we estimate the local average
treatment effect of EIP-1559.

Our Findings

Transaction fees. We observe that EIP-1559 did not lower the
transaction fee level itself in our data period, but enabled easier fee
estimation for users.

Before EIP-1559, users paid the entirety of their bids, so they
risked overpaying transaction fees if the network condition turned
out to be less congested after they bid. With the new TFM, however,
such risks are avoided, because users can set two parameters in
their bids: a cap on the total fees that they will pay per gas (called
the “max fee per gas”) and a tip for the miner on top of the base

1On Ethereum, mempool is where transactions stay after sent by users and before
being added to a block by miners.

Yulin Liu, Yuxuan Lu, Kartik Nayak, Fan Zhang*, Luyao Zhang*, and Yinhong Zhao

fee (called the “max priority fee per gas”). The actual fee paid is
either the max fee per gas or the sum of the base fee and the max
priority fee per gas, whichever is smaller. More details of EIP-1559
are provided below in Section 3.3.

This separation enables a simple yet optimal bidding strategy
(dubbed the obvious optimal bid in [79]) where users just set the
max fee per gas to their intrinsic value for the transaction and set
the max priority fee per gas to the marginal cost of miners. As we
elaborate in Section 5.2, we observe that the bids that users submit
after EIP-1559 are consistent with this obvious optimal bid. We also
observe that users who adopt EIP-1559 bidding pay a lower fee than
those who stick to legacy bidding. Both findings imply that fee esti-
mation is easier with the new gas fee bidding style. Moreover, our
regression discontinuity analysis in Section 5.2.2 indicates that the
intrablock gas price variance, measured by the standardized inter-
quartile range (IQR), becomes significantly lower as more users
adopt EIP-1559 transactions. Therefore, the variance of intrablock
gas prices decreases with EIP-1559, which also implies easier fee
estimation and less overpayment for users. Our results thus imply
that future mechanism designers should consider players’ bounded
rationality and design mechanisms easier for users to understand.
Transaction waiting times.. We observe that EIP-1559 lowers
transaction waiting time, thus improving the user experience.

We define the waiting time as the difference between the time
when we first observe the transaction in the mempool and when
the transaction is mined. The waiting time determines the latency
of the commit. Moreover, when there are dependent transactions,
users cannot submit new transactions until previous dependent
transactions are successfully included in blocks or canceled. Thus,
the delay has an opportunity cost associated with it.

We find that the waiting time significantly declines after the
London hard fork, possibly as a result of easier gas price bidding
and variable-sized blocks. This benefits both the transactions that
adopt the new bid style and the ones that still adopt legacy bidding.
Thus, EIP-1559 has improved the waiting time for transactions even
though not all users have adopted it. The reduction in waiting times
might also be a consequence of the easier fee estimation under EIP-
1559.The true value of bidding reveals the opportunity cost of time.
With a more obvious optimal bidding strategy, users with more
urgent needs bid higher to have their transactions included in the
next available block.
Consensus security. EIP-1559 changes important consensus pa-
rameters such as the block size and the incentive of miners and users.
To understand its impact on consensus security, we identified three
possible avenues through which the EIP might affect consensus:

• Fork rate. Larger blocks may take more time to propagate through
the p2p network, leading to more forks [30, 76]. However, in
EIP1559, the block size is variable and dynamically adjusted;
thus, its impact on the fork rate is not well understood. Our
results empirically show that the London hard fork increased the
block size on average and led to an approximately 3% rise in fork
rates.

• Network load. We define the network load as the amount of
computational, networking, and storage work that a node must
perform to participate in the blockchain protocol. The commu-
nity debated whether variable block sizes would increase the

Empirical Analysis of EIP-1559: Transaction Fees, Waiting Times, and Consensus Security

network load [19, 20] since processing larger blocks consumes
more resources. Our results show that EIP-1559 does not put
the blockchain system under a significantly higher load for an
extended period than the prior TPM . We do observe load spikes
(periods during which an above-average amount of gas is con-
sumed), but their frequency before or after the London fork is
not significantly different.

• Miner Extractable Value (MEV [31]). MEV refers to the profit that a
miner can make through her ability to arbitrarily include, exclude,
or reorder transactions within the blocks that she produces. Daian
et al. [31] point out that significant MEV can incentivize miners to
deviate from the consensus protocol (e.g., to fork or even rewind
the blockchain to collect profit in MEV [31]), thus destabilizing
consensus. Through our empirical analysis, we find that MEV
becomes a much larger share of miner revenue under EIP-1559,
mainly because the base fees are burnt. This might create an
incentive for miners to invest more in MEV extraction.

The rest of the paper is organized as follows. Section 2 reviews
the related works in three lines of literature. Section 3 introduces
the background and details of the EIP-1559 upgrade. Section 4 in-
troduces our data sources, which we use in Section 5 to derive
our empirical results. Section 6 discusses the results and concludes.
Readers can refer to the working paper version on arXiv for an
Appendix: https://arxiv.org/abs/2201.05574.

The datasets that we built in this paper might be of independent

interest and have been released in [8] and [61].

2 RELATED WORKS
This paper is related to three lines of literature: transaction fee
mechanism design, waiting time modeling in market design, and
consensus security.

2.1 Transaction Fee Mechanism Design
Since EIP-1559 was proposed, four recent papers have specifically
investigated the proposal from different theoretical perspectives.
Roughgarden (2021) [79] provides a general framework for transac-
tion fee mechanism design and proves that the EIP-1559 mechanism
has incentive compatibility for myopic miners and off-chain agree-
ment proofness. That is, myopic miners have incentives to act along
with the allocation rules, and no off-chain agreement or collusion
can give a higher return for miners. In addition to these results,
Roughgarden (2020) [79] analyzes the transaction fee and wait-
ing time characteristics of EIP-1559 and points out that while no
transaction fee mechanism can substantially lower transaction fees,
EIP-1559 should lower the variance in transaction fees and waiting
time through the flexibility of variable size blocks. The paper also
argues that EIP-1559 does not weaken system security regarding
several types of attacks. Leonardos et al. [55] put the EIP-1559
mechanism in a dynamic system framework and study the stability
of the system. They show that the base-fee adjustment parame-
ter is critical to system stability and provide threshold bounds for
the adjustment parameter. Reijsbergen et al. [75] find that since
the London hard fork, block sizes have intense and chaotic oscil-
lations, which they believe could lead to harder fee estimation, and

propose an additive increase and multiplicative decrease (AIMD)
fee-adjusting model that can mitigate the spikes of block gas used.
Our work contributes to a growing economics and computer
science literature on blockchain transaction fee mechanism design.
The white paper of Bitcoin [65] proposed the first-price auction
mechanism for the Bitcoin Payment System (BPS), which was later
widely adopted by other early blockchains (e.g., Ethereum before
the London hard fork, Litecoin). Several papers analyze the supply
and demand equilibrium of the BPS fee dynamics [46, 48, 70, 77, 85],
while others analyze the game-theoretical equilibrium [34]. Alter-
native mechanisms for transaction fees have also been proposed.
For example, Lavi et al. [51] and Yao [90] propose a monopolistic
price mechanism where all transactions in the same block pay the
same transaction fee, determined by the smallest bid. This approach
is akin to the second-price auction. Basu et al. [15] propose Sta-
bleFees, a mechanism also based on a second-price auction with a
more realistic model of miner behavior. Ferreira et al. [37] propose
a modification to EIP-1559 based on a dynamic posted-price mech-
anism that achieves more stability than EIP-1559 by their analysis.
Li [59] proposes a general concept of obviously strategy-proof (OSP)
mechanisms that gives a rationale for providing more obvious mech-
anisms. Zhang and Levin [92] further provide a decision theory
foundation for the OSP mechanism for boundedly rational players.

2.2 Waiting Time Modeling in Market Design
Long waiting times and high transaction costs are major issues
caused by network congestion, which is directly related to the scal-
ability of blockchain [29, 42]. Easley, O’Hara, and Basu [35] provide
a game-theoretical model of the BPS with an important complica-
tion on mempool queuing that relates user welfare to fee levels
and waiting time. Huberman, Leshno, and Moallemi [47] further
link the BPS to monopoly pricing of miners and suggest a protocol
design of adjustable system parameters for efficient congestion
pricing, which coincides with the idea of EIP-1559. Waiting time
auctions and market designs to minimize frictions have been exten-
sively studied in economics and operation research [45, 67, 78]. It is
crucial to shorten waiting times, according to research in consumer
psychology [50, 52] and the transient nature of many DeFi trading
opportunties on blockchain [44].

While the waiting time (delay) is widely used in theoretical mod-
els of users’ utility function, few have found an effective way to
directly measure and analyze it in the blockchain setting. Some
use an external data source on waiting time and mempool size
that is only available for Bitcoin [35]; others use block size or fee
levels as proxies for network congestion [47, 80]. Azevedo Sousa et
al. [13] use an approach similar to our paper’s by directly observing
the mempool of Ethereum, but their data suffer from the negative
waiting time problem because of network latency. Our paper solves
this problem by using the timestamp of the next block after the
transaction concerned is included.

2.3 Consensus Security
The security of blockchain systems has been widely discussed since
their inception [60]. Several papers analyze the incentive system
of the Bitcoin system and propose potential attacks given specific

incentive incompatibilities [24, 36, 54, 56, 71, 82]. Other studies
extend the analysis to proof-of-stake protocols [26, 66].

The frequency of uncle blocks is an important indicator of blockchain

forks that which endanger network security. Uncle blocks in the
Ethereum community refer to blocks submitted for a block height af-
ter that block height is finalized and miners have moved to the next
block height. Ethereum adopts a variation of the Greedy Heaviest
Observed Subtree (GHOST) design [17, 81] that also provides block
rewards to the miners of uncle blocks. Previous studies on Bitcoin
show that a larger block size leads to a longer propagation time, mak-
ing it more likely for some miners to submit an uncle block [33, 81].
A higher uncle rate can lead to less network resilience to double-
spend attacks and selfish mining, thus endangering consensus [41].
Daian et al. [31] first introduced the potential impact of MEV
on security. Many works have analyzed MEV extraction in various
blockchain infrastructures [9, 10, 14]. Chen et al. [25] investigate
and systematize the vulnerabilities, attacks, and defenses of the
Ethereum system security. Qin, Zhou, and Gervais [74] quantify the
specific value of MEV and provide evidence that mining pools are
extracting MEV themselves. In early 2021, the inception of Flash-
bots made it easier to extract MEV and observe MEV extraction. In
just a few months, the adoption rate of Flashbots increased rapidly
and, at the time that this paper was written, was above 95% [38].
More MEV extraction tools and protocols have appeared recently,
including the Eden network and Taichi network [4, 5].

3 BACKGROUND
3.1 Transaction Fees in Ethereum
It takes bandwidth, computational, and memory resources to suc-
cessfully execute operations on the Ethereum network [18]. The
amount of resource consumed is measured in the unit of gas. For
example, it costs 21,000 gas to send a transaction and 53,000 gas to
create a smart contract.2 To prevent malicious users from spamming
the network or deploying hostile infinite loops, every operation is
charged a fee [17]. The gas fee is paid in Ether,3 dubbed ETH, the
native currency of the Ethereum network, and calculated as:

GasFee = GasUsed×GasPrice
Sending a transaction could trigger a series of other operations
on the Turing-complete blockchain. Therefore, the amount of gas
needed for a transaction is usually unknown before execution. To
avoid undue gas consumption, users can specify a gas limit with
their transactions. Unconsumed gas is refunded. Ethereum had a
block gas limit of 15 before the implementation of EIP-1559 that
increased to 30 million after it. The sum of the gas limit of transac-
tions included in a block cannot exceed this block gas limit. In the
following two subsections, we explain the emergence of GasPrice
in the above equation before and after the London hard fork.

3.2 Pre-EIP-1559 Transaction Fee Mechanism
The pre-EIP-1559 legacy transaction fee mechanism is essentially
a first-price auction. Users submit a gas price bid for their trans-
actions to outbid competitors. Miners are incentivized to include

2See Appendix G of Ethereum Yellow Paper,
https://ethereum.github.io/yellowpaper/paper.pdf.
3The gas price is usually measured in Gwei and 1 Gwei = 10−9 ETH.

Yulin Liu, Yuxuan Lu, Kartik Nayak, Fan Zhang*, Luyao Zhang*, and Yinhong Zhao

those with the highest gas prices in a block first. However, the first-
price auction does not have a dominant strategy equilibrium [64],
so users need to make assumptions about their competitors’ bids
to optimize their bid strategy, a process that is impractical and
user-unfriendly. In addition, bidding leads to distorted resource
allocation, such as overpaid and volatile gas fees and unduly long
inclusion times for transactions, which we examine later. To resolve
these issues, a new gas fee mechanism was proposed, discussed,
and implemented as EIP-1559.

3.3 The new TFM in EIP-1559
EIP-1559 [40] introduces four major changes to the transaction fee
mechanism on Ethereum. A list of notations related to EIP-1559 is
presented in Table 1.
Block Size. EIP-1559 changes the fixed-sized blocks to variable-
sized blocks. The block gas limit is doubled from 15 million to 30
million, while the block gas target is still set at 15 million. As we
introduce below, a novel gas price mechanism ensures that the
block gas used remains around the block gas target on average.
Base Fee. EIP-1559 introduces a base fee parameter determined by
network conditions. The base fee is the minimum gas price that
every transaction must pay to be included in a block. The base fee
adjusts in a dynamic Markov process according to the block gas
used in the previous block. If the block gas is greater than the target,
the base fee for the next block increases, and vice versa. The base
fee of the next block is determined solely by its present state. The
dynamics of the base fee are represented as follows:

).

(1)

BaseFeeℎ+1 = BaseFeeℎ (1+

GasUsedℎ −GasTarget
GasTarget

1
8
Here, ℎ refers to the block height. BaseFeeℎ and GasUsedℎ refer
to the base fee and the block gas used in block ℎ. GasTarget is fixed
at 15 million.
User Bidding. How users bid is modified in a backward-compatible
manner. Users can optionally bid two parameters in their transac-
tions, the max priority fee per gas and the max fee per gas. Priority
fees per gas are the tips with which users incentivize miners to
prioritize their transactions. Max fees are the fee caps that users
will pay including both base fees and priority fees. The difference
between the max fee and the sum of the base fee and priority fee,
if any, will be refunded to the user. The actual GasPrices of these
transactions are calculated by:

GasPrice = min{BaseFee+MaxPriorityFee,MaxFee}.

For example, if a user bids (MaxFee,MaxPriorityFee) = (60,2),
then there can be several cases depending on the level of base fee
in the current block:

(1) If BaseFee > 60, the transaction must not be included in this
block. It waits in the mempool until the base fee falls.
(2) If 58 < BaseFee < 60, the miner can choose whether to in-
clude this transaction. If the transaction is included, then
aside from the base fee, the user pays 60Basefee Gwei as a
priority fee to miners. Users pay 60 Gwei per gas in total.
(3) If BaseFee < 58, the miner can choose whether to include
this transaction. If the transaction is included, aside from
the base fee, the user pays 2 Gwei as a priority fee to miners.
Users pay BaseFee+2 Gwei per gas in total.

Empirical Analysis of EIP-1559: Transaction Fees, Waiting Times, and Consensus Security

It is worth noting that users are allowed to follow the legacy bid
style and only bid a gas price, in which case the difference between
gas price and base fee are all taken by miners as tips.
Miners’ Revenue. The base fee is burned, while the priority fee is
remitted to the miners as a reward. Before EIP-1559, miners earned
all gas fees in a block. With EIP-1559 implemented, tips are de facto
mandatory because miners do not earn the base fee; otherwise,
they may mine empty blocks. Miner revenues include mainly static
rewards,4 priority fees in the block, and uncle rewards if they mine
an uncle block. In addition, miners receive profits extracted from
including, omitting, ordering, and inserting transactions, known
as the Miners Extractable Value (MEV) [31].

Notation

Description

BaseFee

The minimum GasUsed multiplier required for a
transaction to be included in a block. The result of
BaseFee times GasUsed is the part of the transaction
fee that is burned

MaxPriorityFee

The maximum GasUsed multiplier that a user is
willing to pay to the miner

MaxFee

GasPrice

The maximum GasUsed multiplier that a user is
willing to pay for a transaction

Only legacy transactions use it, which represents the
GasUsed multiplier that a user is willing to pay for
a transaction

GasUsed

The total amount of gas used by a transaction

GasTarget

The target of gas that blocks are expected to use on
average, which is set by the protocol

GasFee

The actual transaction fee that a user pays

Table 1: Notations related to EIP-1559

4 DATA

Data availability. The final data records are stored and published
on the Harvard Dataverse [61].

4.1 Data Sources and Metadata
We use four data sources. First, we query the blockchain data from
Google Bigquery, which documents the block-level characteristics
and transaction-level characteristics from Ethereum [72]. Second,
we run four Ethereum full nodes geographically distributed around
the world (North Carolina, Los Angeles, Montreal, and Helsinki)
to monitor the mempool of Ethereum constantly so that we can
capture a historical log of the Ethereum mempool. Most users sub-
mit their transactions to the mempool so that miners can consider
their transactions. 5 The data fully capture the submission of each
awaiting transaction in the mempool, including the time submitted
and the bids on gas prices. It is worth mentioning that the Ethereum
mempool data are ephemeral, so our data are not reproducible at a

4The static reward is 2 Ether per block since the Constantinople fork in February
2019 [39].
5There are transactions (e.g., Flashbot bundles) that bypass the mempool, but they are
relatively rare as of the time of writing. According to the Flashbots API [2], around
the time of the London hard fork, there were an average of 2.9 transactions per block
from Flashbots bundles. Etherscan records private transactions in its perspective, and
their number is also small.

Figure 1: Periods and Block Numbers

later time. Third, we query ETH price data at one-minute granular-
ity from Bloomberg Terminal [62]. We use these data to compute
the minute-level price volatility of ETH prices as a control vari-
able, which is an instrument for the demand for transactions on
Ethereum. Fourth, we use the Flashbot API to collect the miner rev-
enues, including Flashbot revenues, in each block. A data dictionary
can be found in Appendix Appendix A.

The time of our data is specified in Fig. 1. For the pre–London
hard fork period, we use data from block numbers 12895000 (2021-
07-20) to 12965000 (2021-08-05, the block of the London hard fork).
For the post-EIP-1559 period, we use data from block number
13035000 (2021-08-16) to block number 13105000 (2021-08-31). We
do not use data from the blocks immediately after EIP-1559 because
it took time for users and miners to upgrade their software to adapt
to the London hard fork change. We set the Start Block of the post-
EIP 1559 period to the block at which adoption reaches 20% . We do
not record mempool data from between 2021-08-05 and 2021-08-16.

4.2 Transaction Fee Data
We obtain blockchain data including the gas price paid for each
transaction (legacy and EIP-1559) and the max fee and max priority
fee bids for each EIP-1559 transaction from Google Bigquery [72].
From transaction-level data, we derive several block-level met-
rics. To measure the gas price of a “representative transaction” in the
block, we use the median of gas prices from all transactions. Mea-
suring the "variation" in gas prices in the block is somewhat trickier
since there are outliers. Standard measures such as the mean and
standard deviation can be misleading and statistically meaningless.
However, measures such as the median and interquartile range (IQR)
are much more robust to outliers, which we encounter frequently
in blockchain data. We use the standardized IQR of gas prices in
blocks to measure the intrablock variance of gas prices, defined as

standardized IQR =

𝑄75 (GasPrice) −𝑄25 (GasPrice)
𝑄50 (GasPrice)

where 𝑄25, 𝑄50, and 𝑄75 refer to the 25th, 50th, and 75th percentiles
of the gas prices paid in a specific block. In addition, our data include
block-level blockchain data such as the miner’s block timestamp,
base fee per gas, block gas used, and block size.

4.3 Waiting Time Data
We define the waiting time of a given transaction TX as the time
that the transaction waits in the mempool, namely
Waiting time of TX =𝑇 TX

−𝑇 TX

block

mempool

where 𝑇 TX is the time when the transaction first appears in the
mempool and 𝑇 TX
Estimating 𝑇 TX. Obtaining an exact 𝑇 TX is challenging because
that would require monitoring the traffic of all (or most) P2P nodes.

block is the time when the transaction is mined.

To obtain a reasonable approximation, we place probing nodes
across the globe to obtain representative samples of the mempool.
Specifically, we modify the Ethereum Geth client [1] so that our
nodes connect to up to 1,000 peers. We deploy 4 geographically
distributed nodes in Durham, Los Angeles, Montreal, and Helsinki.
Our modified Geth client stores a log of mempools whenever they
receive a new transaction from the P2P network. We use the earliest
time when TX is observed in the mempool across all servers as the
estimate of 𝑇 TX.Although we make various efforts to improve the
accuracy of the mempool observations by placing probing nodes in
different locations, increasing their connectivity, and connecting to
well-known nodes such as established mining pools [57], we note
that the estimation may not be perfect. Further improving the mem-
pool observations could be an interesting subject of future work.
Estimating 𝑇 TX. As defined above, 𝑇 TX is the time when the trans-
action appeared in a block. One may attempt to set 𝑇 TX to the
block timestamp given by miners, but that is vastly inaccurate. For
instance, Azevedo-Sousa et al. [13] calculate the waiting time in
this fashion, leading to the wrong conclusion that 50% of trans-
actions have negative waiting times! The reason is that the block
timestamps given by miners are typically when the miner starts the
mining process whereas 𝑇 𝑡 𝑥 is when the mining process ends.

Obtaining a precise 𝑇 TX would require monitoring the traffic
of all (or most) miners, which is very challenging. We bypass this
difficulty by using the timestamp of the next block (i.e., the block
after the one in which TX appeared) as an approximation because
the next miner usually begins the mining process as soon as they
receive the previous block to maximize the success rate.

By the above steps, we reduce the proportion of transactions
with negative waiting times from 50% (as encountered in [13]) to
less than 1%: the percentage of negative waiting time in our data
is 0.4% during "Pre-EIP," 0.3% during "Post-EIP," and 0.8% during
"Afterwords," respectively, for the periods shown in Figure 1. The
remaining negative waiting time may be caused by inaccurate block
timestamps (some miners may add a wrong timestamp accidentally
or maliciously, although it cannot deviate from real time too much
or the block will be ignored by honest nodes [3]) or errors in es-
timating 𝑇 TX (see above). Therefore, we set the waiting time of
those transactions to 0. We aggregate the waiting time to the block
level by taking quartiles in a manner similar to how we aggregate
gas prices. The median waiting times that we mention below are
block-level statistics, representing the median of all transaction
waiting times in a specific block.

4.4 Miners’ Revenue Data
To investigate how EIP-1559 changes miners’ incentives, we col-
lected data about miner revenue.

Miner Revenue (MR) includes block rewards, transaction fees,
and "extracted values" (MEV [31]). We can observe the first two
components of MR on the blockchain, but it is difficult to completely
capture MEV (though previous works, e.g., [74], looked into MEV
from specific attacks). We use the revenue from Flashbots, by far
the largest MEV extraction services [38], as an approximation of
the total MEV.

Flashbot revenue comes in two forms: gas fees of transactions
in so-called Flashbot Bundles (FBBs) and direct payments to the

Yulin Liu, Yuxuan Lu, Kartik Nayak, Fan Zhang*, Luyao Zhang*, and Yinhong Zhao

miners by transactions in FBBs (it is typical for FBB transactions
to pay miners by transferring ETH to the address of the miner
who mines the block). Information about FBBs is publicly available
through the Flashbots API [2].

To observe the long-term effect on Miner Revenue (MR), we col-
lect data in a longer window than that in Fig. 1, from block numbers
12,710,000 to 13,510,000 (800,000 blocks in total), i.e., from 40 days
before the London hard fork to 95 days after. Specifically, we divide
miner revenue into five categories:

(1) Static block rewards: 2 ETH per block
(2) Uncle inclusion rewards: 1
(3) Non-FBB gas fees: total gas fees of transactions not in FBBs
(4) FBB gas fees: total gas fees of transactions in FBBs
(5) FBB coinbase transfer: total amount of direct payments in FBBs

32 ETH for referencing an uncle block

As noted above, this division scheme means that we use the
revenue from Flashbots as an approximation for MEV and use all the
revenue that we can observe as an approximation for miner revenue.

4.5 Fork Rate Data
To understand how the new transaction fee mechanism may affect
consensus security, we collected data about past forks in Ethereum.
The Ethereum blockchain contains pointers to uncle blocks, from
which we derive the number of “siblings” to show the specific time
when forks happen. Specifically, a sibling of a block at height ℎ
refers to the uncle blocks (of a later block) with height ℎ. The sibling
count can reflect how many different blocks compete at a specific
height at a given time.

4.6 Preliminary Visualizations
We first visualize some parameters related to EIP-1559 here.
Base fee dynamics. Figure 2(a) shows that the base fee oscillated
between 30 and 200 Gwei after the London hard fork with occasional
peaks in high-usage periods. With a significant amount of Ether
burned as a base fee, the issuance rate of Ether reduces significantly.
In certain circumstances, blocks could have more Ether burned than
minted, resulting in a negative supply of Ether, as shown in Fig. 2(b).
Base fee burning can create positive feedback between Ethereum
network activity and the Ether price. High demand for Ethereum
resources from users drives up both block gas usage and the base
fee, which burns more Ether. The reduction of Ether supply induces
bullish market sentiment, Ether price appreciation, and ultimately
more users. As a result, the reduction in revenue from transaction
fees might be partly offset by a higher Ether price [49].
Block gas usage. The new transaction fee mechanism led to in-
creases and decreases in the base fee, as shown above, and volatile
block gas usage, as shown in Fig. 3. In periods of high demand
(e.g., Non-fungible token airdrops, market crashes [69, 91]), block
gas used can deviate from its target of 15 million to at most 30
million (or slightly above), in which case the base fee in the next
block will increase by at most 12.5% of that of the current block as
implied by Eq. (1). Given the current block time of approximately
13 seconds, the base fee will double every 80 seconds if a series of
full blocks are produced. The surge in the base fee ensures that the
limited block space is allocated to transactions with higher intrinsic
values. Increasing the base fee screens users with lower intrinsic

Empirical Analysis of EIP-1559: Transaction Fees, Waiting Times, and Consensus Security

(a) The base fee oscillated after the London hard fork with occasional peaks. Each dot
represents a block.

(a) Before the London hard fork, almost all blocks used 15 million gas; since the London
hard fork, the block gas used varies between 0-30 million. Each dot represents a block.

(b) The net supply of ETH dropped after the London hard fork, sometimes to negative
levels. Netsupply is the number of ETH issued to miners minus that burned as base
fees. Each dot represents a block.

Figure 2: Time Series of Base Fee and ETH Net Supply

(b) Approximately 20% of blocks after the London hard fork are full (i.e., consume 30
million gas).

Figure 3: Distribution of Block Gas Used

values and leads to fewer transactions included in a block until the
block gas used is lower than the target.
Adoption rate. Figure 4 shows that the adoption rate of the new
transaction fee mechanism has been steadily increasing. Transac-
tions that adopt the EIP-1559 bidding style with the max fee and
max priority fee are defined to be type-2 (TxnType = 2), while those
that stick to the legacy bidding style are defined to be type-0 or
type-1 (TxnType = 0 or 1), depending on which points on the el-
liptic curve are used. We notice a sharp increase in the adoption
rate around block number 13.05 million, which is possibly related
to the adoption as default on MetaMask [6].

5 EMPIRICAL RESULTS
In this section, we first present an overview of our methodology
in Section 5.1, and then we present empirical results to answer the
following questions:

• Does EIP-1559 affect transaction fee dynamics in terms of the
overall fee level, users’ bidding strategies, and the intrablock
distribution of fees? (Section 5.2)

• Does EIP-1559 affect the distribution of transaction waiting time?

(Section 5.3)

• Does EIP-1559 affect consensus security, in terms of fork rates,

network loads, and MEV? (Section 5.4)

Figure 4: Adoption of EIP-1559-style bidding steadily in-
creased after the London hard fork. Each dot represents a
block.

5.1 Methodology

Code Availability. The code used for the empirical analysis is
available on GitHub: https://github.com/SciEcon/EIP1559.

A key challenge in identifying the effect of EIP-1559 on blockchain
characteristics is that we must isolate the effect of EIP-1559 from
the effects of confounding factors, such as price volatility, net-
work instability, and the time trend. Our approach is to adopt an
event study framework [63] and regression discontinuity design
(RDD) [12, 53] to identify the impact of EIP-1559 on the dynamics of
Ethereum. RDD is a quasi-experimental evaluation method widely

12.9M12.95M13M13.05M13.1M050100150200base feeLondon Hardforkblock numberbase fee (Gwei)12.9M12.95M13M13.05M13.1M−4−20246net supplynet supply moving averageLondon Hard Forkblock numbernet supply12.9M12.95M13M13.05M13.1M05M10M15M20M25M30Mgas limitgas usedLondon Hardforkblock numbergas05M10M15M20M25M30M024681012141618gas usedpercent12.9M12.95M13M13.05M13.1M00.20.40.60.81adoption ratefitted lineLondon Hardforkblock numberadoption rateused in economics, political science, epidemiology, and related dis-
ciplines for causal inference on the impact of an event,6 here the
implementation of EIP-1559. We exploit the gradual adoption of
EIP-1559 several weeks after the London hard fork to set up the
RDD framework, using the event of the London hard fork and EIP-
1559 adoption rate in each block as the independent variables and
estimating both the immediate effects of the London hard fork and
the average treatment effects of EIP-1559 adoption.

We specify the RDD by Eq. (2):

𝑌 =𝛼0 +𝛼11(London hard fork) +𝛼2𝑟EIP +𝛼3X+𝜇ℎ +𝜖.
(2)
Here, 𝛼1 is the coefficient for the indicator variable for the occur-
rence of the London hard fork (affecting block numbers ≥ 12965000).
It represents the immediate effect of EIP-1559 on the outcome vari-
able 𝑌 . 𝛼2 is the coefficient for 𝑟EIP, the percentage of transactions
adopting EIP-1559 after the London hard fork. Since EIP-1559 is
backward compatible, many users still adopted the legacy bidding
style in the few weeks after the upgrade, but the adoption rate
kept rising as we show in Fig. 4. By Nov. 2021, 40% to 60% of all
transactions [49] used the new bid style. Therefore, 𝛼2 represents
the effect of an increase in EIP-1559 adoption.

We include a set of control variables [16] represented as X
in Eq. (2). We control for the block number in our sample to account
for a possible time trend before the London hard fork, defined by

(cid:40)

nblock =

BlockNumber−12895000 pre-EIP period
BlockNumber−12965000 post-EIP period

.

We also control for price volatility, median gas price, and return on
investment (ROI) (the minute-level percentage change in the ETH
price) to account for the variance in demand for transactions on the
Ethereum network. Block size is controlled as a proxy of network
stability. We include an hour fixed-effect term 𝜇ℎ to account for the
seasonality of Ethereum network conditions as we can clearly see
in Fig. 2(a). 𝜖 is an error term.

5.2 Transaction Fee Dynamics
5.2.1 Overview. Transaction fee mechanism design is not intended
to solve blockchain scalability. Thus, the fee level before and after
the London hard fork did not change substantially. However, it
did change how users bid and with users’ bidding strategy largely
coinciding with the predictions made by Roughgarden (2020) [79].
Figure 5(a) shows the time series for the actual gas price paid
quartiles in each block before and after the London hard fork. With
hourly seasonality (intraday oscillation due to the difference in
demand across time zones), the gas price level did not change much
before or immediately after the London hard fork. It is unclear
whether the gas price increases after block number 13.07M was
caused by EIP-1559 or other factors.

Figure 5(b) and Fig. 5(c) further decompose different fee parame-
ters in users’ bids. Figure 5(b) shows that while the median gas price
paid and median max fee bid are volatile and highly correlated with
each other, the max fee bids are usually higher than the gas prices
paid. Meanwhile, Fig. 5(c) shows that the median max priority bid
remains at a low level (almost always < 10 Gwei throughout the
period and < 3 Gwei after block number 13.06M). Overall, these
results are consistent with the predictions in [79] that the obvious

6We refer the readers to pages 5-8 in Athey and Imbens [12] for more details on the
regression discontinuity design.

Yulin Liu, Yuxuan Lu, Kartik Nayak, Fan Zhang*, Luyao Zhang*, and Yinhong Zhao

optimal bid is a max fee that represents the intrinsic value of the
transaction and a max priority fee that represents the marginal cost
of miners’ inclusion of the transaction. If these predictions hold,
then we should observe max fee bids higher than the actual price
paid and a low, stable level of priority fees bid, which is exactly
what we observe. Ferreira et al. [37] express concerns that the EIP-
1559 TFM may degrade to a first-price auction on the priority fee
when the base fee is set too low. However, our empirical results
show that this did not happen much in practice.

(a) The gas price paid by users did not change much immediately after the London
hard fork, but it started to rise approximately two weeks later. We cannot conclude
whether this was caused by EIP-1559. Each dot represents a quartile of the gas price
paid for a block.

(b) Max fee bids were usually much higher than the actual gas prices paid. Each dot
represents a block.

(c) Priority fee bids remained at a low level (< 10 Gwei) in most cases, especially after
block number 13.06 M. Each dot represents a block.

Figure 5: Overview of Fee Dynamics

Moreover, we compare the median prices for different transac-
tion types. As shown in Fig. 6, the median gas price paid of the
EIP-1559 transactions in a block has a distribution to the left of that

12.9M12.95M13M13.05M13.1M05010015020050% quartile actual gas price paidLondon Hardforkblock numbermedian gas price paid (Gwei)12.96M12.98M13M13.02M13.04M13.06M13.08M13.1M050100150200250median gas price paidmedian max fee bidblock numbergas price (Gwei)12.96M12.98M13M13.02M13.04M13.06M13.08M13.1M05101520block numbermedian prfee bid (Gwei)Empirical Analysis of EIP-1559: Transaction Fees, Waiting Times, and Consensus Security

Figure 6: Distributions of median gas prices of a block
for legacy transactions and EIP-1559 transactions. The
distribution of EIP-1559 transactions is overall to the left
of that of legacy transactions, which means that users who
adopt EIP-1559 pay a lower gas price.

of the legacy transactions. The median gas price of EIP-1559 trans-
actions in each block is 45 Gwei, while that of legacy transactions is
54 Gwei. This means that users who adopt EIP-1559 bidding overall
pay less than those who stick to adhere to legacy bidding.

These findings point to the insight that users’ fee estimation
was made easier by EIP-1559. Before EIP-1559, users had to pay the
entirety of the bid if their transactions were included, so they risked
overpaying gas fees if the network was not as congested as they
expected. Due to this concern, users had to carefully estimate gas
prices and might have tended to bid conservatively as a result of the
first-price auction [67]. EIP-1559, however, allows users to set two
parameters in a bid: a priority fee and a max fee (both per gas unit).
Users pay only the smaller of 1) the sum of the base fee and priority
fee bid and 2) the max fee. Therefore, if the network conditions are
better than expected, the user will pay only the base fee plus the
priority fee. This leads to a simple but optimal bidding strategy, as
shown in [79]. Therefore, EIP-1559 makes fee estimation easier.
If users bid in the obvious
5.2.2
optimal bid introduced above, the eventual gas price paid by users
who adopt the EIP-1559 style bid is the base fee plus a small priority
fee, so users who adopt the EIP-1559 style bid tend to pay a similar
gas price. A direct implication of this is that the intrablock variance
of gas prices should have significantly declined after the London
hard fork, especially as more users adopted type-2 transactions.
While we cannot directly measure the ease of fee estimation, we
manage to measure the intrablock variance of gas prices by the
standardized interquartile range (IQR) (defined in Section 4.2).

Intrablock interquartile range.

The relationship between the standardized IQR, the London hard
fork, and EIP-1559 is visualized in Fig. 14, which simulates the stan-
dardized IQR at different levels of EIP-1559 adoption rates based
on Column (4) in Table 7. For the period immediately after the
London hard fork, the standardized IQR increases by approximately
8 percentage points (from 0.26 to 0.34), and the standardized IQR
is predicted to decrease by 24 percentage points (from 0.34 to 0.10)
when all users adopt the new bidding style.

Given the scale of this estimate, EIP-1559 should have a large
negative effect on the intrablock difference of gas price paid as
more users adopt the new bidding style (by Nov. 2021, the EIP-1559

adoption rate was approximately 40%-60% [49]). This implies that
the inequality of intrablock gas prices decreases, especially as more
users adopt EIP-1559 transactions. Thus, we show that the con-
cerns raised by Reijsbergen et al. [75] relating to base fee volatility
making fee estimation more difficult does not hold in practice.

5.3 Waiting Time
The waiting time is widely modeled in the literature as an essential
component of users’ utility function, and a short waiting time is
crucial to the user experience. As a result of easier fee estimation
(see above in Section 5.2), a rational user can simply bid her intrinsic
value of the transaction without risking overpaying. Thus, with the
EIP-1559 upgrade, it should be more straightforward for users to
include their transactions in the next available block. We find that
the waiting time significantly declined after the London hard fork.
This benefits both EIP-1559 and legacy transactions.

The reduction in the waiting time can be observed in Fig. 7,
which demonstrates the distribution of the block median waiting
time before and after the London hard fork. Each observation rep-
resents a block and the median of transaction waiting times in that
block. The distribution shifted leftward after the London hard fork.
The 25th quartile of the median block waiting time decreases from
10.7 seconds to 5.5 seconds, the 50th quartile decreases from 16.9
seconds to 10.4 seconds, and the 75th quartile decreases from 34.0
seconds to 18.6 seconds. Moreover, we observe that the waiting time
of transactions of both types (legacy or EIP-1559 bidding styles)
decreases. The 50th quartile of the median legacy-style transaction
waiting time across blocks is 9.4 seconds for the period after the
London hard fork, while that of the median EIP-1559-style trans-
action waiting time across blocks is 8.9 seconds.7. This implies
that the effect of EIP-1559 adoption spills over even to transac-
tions not adopting the new bidding style by improving the overall
gas bid structure in the mempool. Table 2 further manifests this
finding. Columns (1)–(3) display regression results with the block
median waiting time as the dependent variable and the indicator for
the London hard fork and EIP-1559 adoption rate as independent
variables. The first row in Columns (1)–(3) returns consistent and
significant negative effects of the London hard fork on the waiting
time, while the second row in Columns (1)–(3) returns consistent
and significant negative effects of EIP-1559 adoption on waiting
time. We observe that the London hard fork itself had a significant
negative effect on the median waiting time of all transactions in
blocks and that this effect strengthened over time.

Specifically, the waiting time decreased on average by approx-
imately 9 seconds after the London hard fork, and if we assume a
linear treatment effect, the waiting time should further decrease by
another 6-11 seconds if all users adopt EIP-1559-style bidding. The
relationship between the block median waiting time, London hard
fork, and EIP-1559 adoption rate is visualized in Fig. 13, which sim-
ulates the waiting time at different EIP-1559 adoption rates based
on Column (3) in Table 2.

7Readers may notice that both median legacy-style transaction waiting time and
median EIP-1559-style transactions waiting time are shorter than median all
transaction waiting time after London hard fork. This does not contradict the fact
that in each block, the median waiting time of all transactions is always between the
median waiting time of legacy transactions and the median waiting time of EIP-1559
transactions. The distributions of these three variables are shown in Appendix D Fig. 17

5010015020000.511.522.5 legacy transactions EIP1559 transactionsmedian gas price of transactions in a block (Gwei)percentYulin Liu, Yuxuan Lu, Kartik Nayak, Fan Zhang*, Luyao Zhang*, and Yinhong Zhao

median waiting time

London Hardfork

(1)
All Txs
-9.321∗∗∗
(0.396)
EIP-1559 adoption -6.140∗∗∗
(0.583)
-0.000∗∗∗
(0.000)

nblock

median gas price

90-block volatility

size

ROI

Intercept

28.062∗∗∗
(0.191)

(2)
All Txs
-9.690∗∗∗
(0.396)
-5.956∗∗∗
(0.583)
-0.000∗∗∗
(0.000)
-0.005∗∗∗
(0.001)

(5)

(3)

(0.585)
-0.000∗∗∗
(0.000)
0.000
(0.001)

(4)
All Txs Legacy TxsLegacy Txs
-3.672∗∗∗
-4.377∗∗∗
-8.544∗∗∗
(0.405)
(0.404)
(0.394)
-11.147∗∗∗ -21.889∗∗∗ -26.560∗∗∗
(0.601)
(0.597)
-0.000∗∗∗
-0.000∗
(0.000)
(0.000)
-0.002
(0.001)
133.191∗∗∗
(47.268)
0.000∗∗∗
(0.000)
-217.323∗∗∗
(47.915)
16.363∗∗∗
(0.507)

28.281∗∗∗
(0.196)

(9.332)

-117.532∗∗∗ 140.746∗∗∗
(46.046)
0.000∗∗∗
(0.000)
-232.497∗∗∗
(46.677)
24.300∗∗∗ 15.069∗∗∗
(0.494)
(0.381)

Observations
𝑅2

138,043
0.736

137,795
0.737

137,794
0.744

138,043
0.728

137,794
0.734

Note: Hour fixed effect included.

∗p<0.1; ∗∗p<0.05; ∗∗∗p<0.01

Linear regression with the block median waiting time as the dependent variable
and the indicator for the London hard fork and the EIP-1559 adoption rate as
independent variables, with different sets of controls shown in different columns.
Outcome variable data were trimmed to <300 s to avoid extreme outliers (4% of
the data). Standard errors are in parentheses. The median waiting time dropped
significantly after the London hard fork. It further dropped in the blocks with
a higher adoption rate of EIP-1559 style bidding. The data frequency is by block.
Column (3) of this table is visualized in Appendix D Fig. 13.
Instructions for reading the tables: 1) The table header shows the dependent
variable (i.e., the all-transaction and legacy transaction median waiting time in
each block). 2) The index column presents the independent variables. (i.e., the
London hard fork, EIP-1559 adoption, nblock, etc.). 3) Each column labeled with
a number presents the result of one regression in the form of Eq. (2) Each number
presents the effect of the independent variable (the row index) on the dependent
variable after we control for other independent variables (if in the same column,
the output of that row is not blank); for example, in Column (1), -9.321 presents
the effect of the London hard fork on the all-transaction median waiting time.
5) When the number is positive (negative), the dependent variable increases
(decreases) on average by the absolute value of the number as the independent
variable increases by 1 unit; for example, in Column (1), -9.321 means that when
the London hard fork turns from 0 to 1 (when it happens), the transaction waiting
time decreases by 9.321 on average. 6) The stars show the significance level of a t
test, i.e., the error rate to reject the null hypothesis that the independent variable
has no effect on the dependent variable; for example, in Column (2), there are
three stars for the row with index “EIP-1559 adoption”, which means that if the
null hypothesis is true (EIP-1559 adoption has no effect on the waiting time), there
is only a 1% chance that we will see data as extreme as this. 8) If a cell is left blank,
the variable is not included in the regression presented by the column. With
different cells left blank, we present regression results with different variables
included. These instructions also guide the reading of Table 3 and Table 7.
Table 2: Waiting Time and EIP-1559 Adoption

that the influence of EIP-1559 on the number of uncle blocks is mar-
ginal. We also find that EIP-1559 increased block size on average,
which led to a higher fork rate. Column (1) of Table 3 shows the
results of a linear regression between block size and the London
hard fork. This indicates that the average size increased from 64.05
kbytes (the intercept in Column (1)) before the London hard fork
to 78.01 kbytes (adding the intercept with the coefficient on the
London hard fork) after the London hard fork by 13.96 kbytes (the

Figure 7: Distributions of median waiting time. The distri-
bution moved left after the London hard fork. Users experi-
ence a much lower transaction waiting time with EIP-1559.

Columns (4) and (5) in Table 2 display regression results with
the block median waiting time of only the legacy transactions as
the dependent variable and the indicator for the London hard fork
and EIP-1559 adoption rate as independent variables. Similarly,
the results show that the London hard fork had a consistently
and significantly negative effect on the median waiting time for
legacy transactions. The same is true for the EIP-1559 adoption
rate (second row in Columns (4) and (5)). However, the coefficient
of these two regressions might be biased by the selection of the
adoption of EIP-1559. Early adopters of EIP-1559 are likely to be
more sophisticated users, such as mining pools and institutional
investors. Nonetheless, the spillover effect of EIP-1559 adoption to
legacy transactions is convincing given the descriptive statistics
mentioned above. Additionally, the significantly positive coefficient
on 90-block volatility in Column (3) implies that the waiting time
is longer when Ether price volatility is higher.

Validating robustness with additional data. To check the robust-
ness of the observed waiting time reduction, we repeat the analysis
in a sample extending to two months after the adoption of EIP-1559
. A graph similar to Fig. 7 is included in the appendix (Fig. 18),but
in brief, the results are consistent: when we use data running until
August 27, 2021, the median waiting time decreases by 49.17%; with
data until October 21, 2021, the median waiting time decreases by
41.23%. Both confirm that EIP-1559 significantly reduces waiting
times.

5.4 Consensus Security
The Ethereum community has extensively discussed the security
implications of EIP-1559 [19, 20], and the community has largely
agreed that it should not compromise consensus security. We inves-
tigate three avenues through which EIP-1559 might affect consen-
sus: fork rates, network load, and Miner Extractable Value (MEV).
With existing evidence, we tend to believe that EIP-1559 does not
make the Ethereum system substantially more insecure.

Fork rates. The fork rate is an important indicator for con-
5.4.1
sensus security. The prevalence of forks (or so-called uncle blocks in
Ethereum) can lead to higher vulnerability to double-spend attacks
and selfish mining [41]. EIP-1559 changes the distribution of block
sizes, so we would like to understand its implication for fork rates.
We use the terms “uncle rates” and “fork rates” interchangeably.

We investigate the relationship between EIP-1559, block gas used,
block size, and the number of uncles in this section and conclude

Empirical Analysis of EIP-1559: Transaction Fees, Waiting Times, and Consensus Security

London hard fork coefficient in Column (1)). Still using block size
as the dependent variable and the London hard fork as the indepen-
dent variable, Column (2) further controls for the EIP-1559 adoption
rate, gas used, and the interaction term between the London hard
fork and gas used. The results show that the London hard fork
itself, adoption rate, and gas used are all positively and significantly
associated with block size. With these two columns, we conclude
that block size increased significantly after the London hard fork
and is growing with EIP-1559 adoption.

Column (3) of Table 3 shows the result of logistic regression with
the indicator for whether a block has siblings as the dependent
variable and block size in kbytes as the independent variable. The
result shows that as block size grows, the likelihood that a block
has siblings becomes significantly larger. (The coefficient of block
size in Column (3), 0.0034, is positive and has three asterisks.) To-
gether with those in Columns (1) and (2), our results suggest that
EIP-1559 could also increase the likelihood of sibling appearance
by increasing block size. Column (4) further controls for the event
of the London hard fork and EIP-1559 adoption, suggesting alterna-
tive mechanisms on how EIP-1559 might affect sibling appearance.
After we control for block size, EIP-1559 still has a weak positive
effect (the coefficient of the London hard fork, 0.0704, is positive
with one asterisk, i.e., a larger p value) on sibling appearance, but
EIP-1559 adoption (the coefficient on EIP-1559 adoption, -0.2257,
is negative with three asterisks) has a significantly negative effect.
These estimates present evidence that EIP-1559 affects sibling ap-
pearance mainly through block size with other unknown channels
to be investigated in further research.

5.4.2 Network load. A debated point about the security implica-
tions of EIP-1559 is whether it will put the system under a higher
load [19, 20]—i.e., whether it will require nodes to perform more
computational, networking, and storage work to participate in the
blockchain protocol due to the increased block size cap (from 15
M to 30 M) and skewed distribution of block gas used (see Fig. 3).
The blog post by Buterin (2021) [20] mentions that “block vari-
ance is nothing to worry about”. One of the arguments in favor of
this view is that short-term spikes happened even before the Lon-
don hard fork due to the Poisson process inherent to proof-of-work
mining. This being true, it is unclear how the pre–London hard fork
spikes compare to the post–London hard fork ones, as EIP-1559
introduces larger blocks that might contribute to more frequent
and intense spikes (the stochastic nature of block production would
have the same effect before and after the London hard fork).

We define the average load of the Ethereum system in a given
period 𝑇 as the average of gas consumed per second in 𝑇 . We cal-
culate the average load for varying time intervals (20–120 seconds)
at each block timestamp and compare the distributions before and
after the London hard fork. The results are shown in Fig. 8. In the
appendix, we also select various thresholds to define the load spike
and calculate the percentage of load spikes before and after the
London hard fork, as shown in Table 12. From Fig. 8 and Table 12,
we find that EIP-1559 does not affect the integral network load
or frequency of load spikes to a significant degree, especially not
for an extended period (e.g., 40 seconds or 3 blocks or more). Our
results confirm the argument from Buterin’s blog post [20].

London Hardfork

EIP-1559 adoption

gas used

London Hardfork * gas used

Intercept

Observations
𝑅2

block size

(1)
13960.686∗∗∗
(225.731)

64051.066∗∗∗
(159.455)

(2)
25126.760∗∗∗
(7494.917)
25803.954∗∗∗
(357.959)
0.006∗∗∗
(0.001)
-0.002∗∗∗
(0.001)
-33113.125∗∗∗
(7492.033)

138,055
0.027

138,055
0.726

Standard errors in parentheses. Columns (1) and (2) show the linear regression
with block size (in bytes) as the dependent variable and the London hard fork
and EIP-1559 adoption as independent variables. Block size became larger on
average after the London hard fork, and it was larger when the block had a high
EIP-1559 adoption rate or high gas usage. The data frequency is by block.

block size (kbyte)

London Hardfork

EIP-1559 adoption

Intercept

sibling indicator
(4)
0.0036∗∗∗
(0.0003)
0.0704∗
(0.0400)
-0.2257∗∗∗
(0.0764)
-3.2608∗∗∗
(0.0263)

(3)
0.0034∗∗∗
(0.0003)

-3.2573∗∗∗
(0.0249)

138,055
Observations
Logistic regression used; ∗p<0.1; ∗∗p<0.05; ∗∗∗p<0.01

138,055

Standard errors in parentheses. Columns (3) and (4) show the linear regression
with block size (in bytes) as the dependent variable and the London hard fork
and EIP-1559 adoption as independent variables. Block size became larger on
average after the London hard fork, and it was larger when the block had a high
EIP-1559 adoption rate or high gas usage. The data frequency is by block.
Table 3: Sibling existence, block size, and EIP-1559

Figure 8: Moving averages of block gas used per second for
different time intervals

pre-EIPpost-EIP01M2M3M4M5M6Mpre-EIPpost-EIP01M2M3M4M5M6Mpre-EIPpost-EIP01M2M3M4M5M6Mpre-EIPpost-EIP01M2M3M4M5M6Mpre-EIPpost-EIP01M2M3M4M5M6Mpre-EIPpost-EIP01M2M3M4M5M6M20 sec30 sec40 sec60 sec90 sec120 sec5.4.3 Miner Extractable Value (MEV). MEV refers to the profit that
a miner can make through her ability to arbitrarily include, exclude,
or reorder transactions within the blocks she produces. As [31]
points out, significant MEV can incentivize miners to deviate from
the consensus protocol (e.g., to fork or even rewind the blockchain
to collect profit in MEV [31]). The volume of and changes in MEV
have a profound impact on consensus.

We focus on the MEV data described in Section 4.4 to observe the
impact of EIP-1559 on miner revenue. We notice that miner revenue
from MEV dropped temporarily after the London fork, though it
soon recovered. However, in the end, miner revenue from MEV
became a much larger share of miner revenue. This might create
an incentive for miners to invest more in MEV extraction.

Miner revenue before and after EIP-1559. Figure 9(a) shows to-
tal miner revenue and its composition. Overall, miner revenue
decreased after the EIP, primarily because the base fees are burned.
Figure 9(b) plots the revenue from MEV. After a downturn for less
than 50,000 blocks, MEV revenue quickly recovers. This may have
been for the following reasons: 1) Flashbot searchers needing to up-
date their software after the London hard fork to adapt to EIP-1559,
and 2) the potentially high volatility of miner extractable value due
to network instability in the short term after the London hard fork.

Yulin Liu, Yuxuan Lu, Kartik Nayak, Fan Zhang*, Luyao Zhang*, and Yinhong Zhao

only approximately 3% of total revenue and approximately 15% of
nonstatic revenue.

Distribution of nonstatic revenue before and after EIP-1559. Miners’
nonstatic revenue consists of three parts: uncle inclusion rewards,
revenue from Flashbot bundles (i.e., FBB gas fees plus FBB coinbase
transfers) and non-FBB gas fees. The uncle inclusion reward is typ-
ically sm As Fig. 10 shows, the distribution of nonstatic revenue

(a) Distribution of nonstatic revenue

(a) Source of miners’ revenue

(b) MEV from Flashbots

(c) Ratio of revenue from Flashbots to to-
tal revenue

(d) Ratio of revenue from Flashbots to
nonstatic revenue

Figure 9: Sources of and changes in miner revenue

Figure 9(c) and Fig. 9(d) show the ratio of MEV revenue to total
revenue and to nonstatic revenue (i.e., miner revenue minus the
static block reward), respectively. As the revenue from gas fees
dropped dramatically after the London hard fork while MEV rev-
enue recovered quickly, the ratio between MEV and total revenue in-
creased significantly. Specifically, as shown in Fig. 9(c) and Fig. 9(d),
after the London hard fork, miners’ MEV revenue account for ap-
proximately 4% of total revenue and approximately 30% of nonstatic
revenue, while before the London hard fork, the MEV revenue was

(b) Distribution of MEV from Flashbot
bundles

(c) Distribution of revenue from gas ex-
cept from Flashbot bundles

Figure 10: Distribution of nonstatic revenue before and
after the London hard fork

changed significantly after EIP-1559. Figure 10(b) and Fig. 10(c)
further break the changes down. Figure 10(b) shows the distribu-
tion of revenue from Flashbots bundles, which does not change
much across the periods before and after the London hard fork. Fig-
ure 10(c) shows the distribution of of non-FBB gas fees. This part
of the revenue is very different in the periods before and after the
London hard fork and is the main reason for the change in the
distribution of miner revenue.

From Fig. 10, we conclude that EIP-1559 does not change the
distribution of MEV revenue in the short term, but it significantly
changes that of non-FBB gas fees.

6 CONCLUSION AND DISCUSSION
We demonstrate how a major TFM reform on Ethereum affects
the blockchain dynamics of Ethereum. Our empirical study relates
to and tests implications for a wide range of existing theoretical
research. For instance, our results on users’ bids are consistent
with the predictions in Roughgarden (2020) [79] that the obvious
optimal bid under EIP-1559 is a max fee that represents the intrin-
sic value of the transaction and a max priority fee that represents
the marginal cost of miners’ inclusion of the transaction. Ferreira
et al. [37] are concerned that the EIP-1559 TFM may degrade to
a first-price auction on the priority fee when the base fee is too

127100001296500013510000block number0.00.51.01.52.02.53.0value (Ether)static rewarduncle inclusion rewardnon-FBB gas feeFBB gas feeFBB coinbase transfer127100001296500013510000block number0.000.050.100.150.20value (Ether)FBB gas feeFBB coinbase transfer127100001296500013510000block number0.000.020.040.060.08ratioFBB gas feeFBB coinbase transfer127100001296500013510000block number0.00.10.20.30.40.5ratioFBB gas feeFBB coinbase transfer0.00.51.01.52.0value (Ether)012345densitypre London Hardforkpost London Hardfork0.00.10.20.30.4value (Ether)0510152025303540densitypre London Hardforkpost London Hardfork0.00.51.01.52.0value (Ether)0123456densitypre London Hardforkpost London HardforkEmpirical Analysis of EIP-1559: Transaction Fees, Waiting Times, and Consensus Security

low. Their concern is valid, but our empirical results show that
this rarely happens in reality. Reijsbergen et al. [75] are concerned
that volatility of base fees after EIP-1559 would make it more diffi-
cult for users to estimate transaction fees. In comparison, we show
that the volatility of intrablock gas prices decreases significantly
as more users adopt EIP-1559 transactions, which implies easier
fee estimation and a better user experience. We also improve the
strategy for measuring the transaction waiting time from previous
studies, largely eliminating the influence of negative waiting time
encountered by Azevedo-Sousa et al. [13].

We present several new findings that are absent from existing the-
oretical research. First, our results show that EIP-1559 significantly
reduces waiting times and latency. However, formal modeling that
could explain the effect is absent in the literature. Nonetheless,
understanding waiting times in TFM is essential. Waiting times
affect the user experience. Furthermore, the literature shows that
latency or coexisting market congestion affects important facets
of blockchain security [27, 83]. The queuing theory [43, 58] studies
how different factors, such as arrival rates, affect the waiting time of
a computational system. Future research could study whether EIP-
1559 affects the waiting times via the factors modeled in the queuing
theory. Practically, current scalability solutions for reducing wait-
ing times focus on layer-2 [84]. Future research could consider a
layer-1 solution that improves the EIP-1559 TFM. Second, we find
that when Ether’s price is more volatile, the transaction fee and
waiting time are significantly higher, suggesting that price volatility
can be one policy parameter for the future design of TFMs. Finally,
we also verify that a larger block size increases the presence of
siblings. Even though the effect size through EIP-1559 is negligible,
we shall consider this for future updates.

In the current research, we systematically evaluate the effects
of EIP-1559, focusing on significant facets of the transaction fee,
the waiting time, and consensus security. However, our method-
ology is generally applicable for studying the effect of EIP-1559
in particular or Ethereum Improvement Proposals in general on
blockchain performances in facets such as decentralization [93],
network features [11, 21, 32], and attacks [89]. For example, Cong
et al. (2022) [28] apply the same method of regression discontinuity
to study EIP-1559 and find that it mitigates the identified concen-
tration in mining rewards, token ownership, and transactions via
wealth distribution. Capponi et al.(2021) [23] develop a game theo-
retical model to study the effect of hardware efficiency and mining
rewards on the decentralization level of mining. Future research can
apply our methods to test whether EIP-1559 or other Ethereum im-
provement proposal supports decentralized cryptocurrency mining
empirically. Yaish, Stern, and Zohar (2022) [88] present a risk-less
attack on Ethereum’s consensus mechanism, which could also be
affected by the change in TFM. Capponi et al. (2022) [22] analyze the
incentives for and welfare impacts of dark venue adoptions. Future
research could apply our methods to study the effect of EIP-1559 on
dark venue adoptions and its implications for the welfare of differ-
ent stakeholders. Wang et al. (2022) [86] find that non-professional
users are unaware of potential financial losses due to the lack of
understanding of Sandwich Attacks in the DeFi ecosystem. How
does EIP-1559 impact the financial inclusion of non-professional
users? We leave the question for future research.

7 ACKNOWLEDGMENTS
We benefit from conversations during the invited feature talk at
ETHconomics Devconnect 2022, hosted by Ethereum Foundation
in Amsterdam, Netherland, presented jointly by Fan Zhang and
Luyao Zhang on April 21, 2022. [87] We are grateful for the insight-
ful comments by Profs. Tim Roughgarden, Elaine Shi, Lin William
Cong, Ari Juels, Ittay Eyal, Agostino Capponi, Giulia Fanti, Clau-
dio J. Tessone, Aviv Yash, Ye Wang, Hao Chuang, and Weizhao
Tang. This project is partially supported by Carry the Innovation
Forward Program jointly supported by Duke Learning Innovation
at Duke University and the Center for Teaching and Learning at
Duke Kunshan University. Kartik Nayak was supported in part by
a VMware Early Career Grant, a Novi gift grant and grants from
Ethereum Foundation. Yulin Liu thanks Bochsler Group for gener-
ously supporting his academic research. Luyao Zhang thanks Duke
Kunshan University for persistently supporting her effort in inter-
disciplinary studies and cultivating undergraduate research. Duke
Kunshan University provides the funding support for the article
processing charge (APC) to facilitate the great cause of open access
publication. We thank Tianyu Wu, an advisee of Luyao Zhang at
Duke Kunshan University, for his assistance in checking the repli-
cability of the data and code. Luyao Zhang, Yulin Liu, Kartik Nayak,
and Fan Zhang thank Prof. Robert Calderbank, Prof. Jun Yang, and
Prof. Brandon Fain for their support in Duke CS+ 2022 [7], which
cultivated the interdisciplinary collaboration.

REFERENCES
[1] [n. d.]. ethereum/go-ethereum: Official Go implementation of the Ethereum protocol.

https://github.com/ethereum/go-ethereum

[2] [n. d.]. Flashbots Blocks API. https://blocks.flashbots.net/
[3] [n. d.].
they’re
ethereum/blob/master/consensus/ethash/consensus.go#L46

considered future blocks.

from current

Max seconds

time allowed for blocks, before
https://github.com/ethereum/go-

[4] [n. d.].

Send private transactions by TaiChi on Ethereum.

https:

//github.com/Taichi-Network/docs/blob/master/sendPriveteTx_tutorial.md

[5] 2021. Eden Network. https://www.edennetwork.io/
[6] 2021. MetaMask 1559. https://metamask.io/1559#1559-video
[7] 2021.

SciEcon Insight.

https://insight.sciecon.org/articles/AMA/

DecentralizedFinance:CryptocurrencyandBlockchainontheInternetComputer/

[8] 2022. Data & code for this paper. https://github.com/decensyslab/eip-1559-

empirical-study

[9] Guillermo Angeris, Hsien-Tang Kao, Rei Chiang, Charlie Noyes, and Tarun
Chitra. 2019. An analysis of Uniswap markets. https://arxiv.org/abs/1911.03380
Smart contracts on the blockchain – A bibliomet-
Telematics and Informatics 57 (03 2021), 101519.

[10] Lennart Ante. 2021.

ric analysis and review.
https://doi.org/10.1016/j.tele.2020.101519

[11] Ziqiao Ao, Gergely Horvath, and Luyao Zhang. 2022.

Is decentral-
actually decentralized? A social network analysis of
arxiv.org (06 2022).

ized finance
the Aave protocol on the Ethereum blockchain.
https://doi.org/10.48550/arXiv.2206.08401

[12] Susan Athey and Guido W. Imbens. 2017. The State of Applied Econometrics:
Causality and Policy Evaluation. Journal of Economic Perspectives 31 (05 2017),
3–32. https://doi.org/10.1257/jep.31.2.3

[13] José Eduardo Azevedo Sousa, Vinícius Oliveira, Júlia Valadares, Glauber
Dias Gonçalves, Saulo Moraes Villela, Heder Soares Bernardino, and Alex
Borges Vieira. 2020. An analysis of the fees and pending time correlation
in Ethereum.
International Journal of Network Management 31 (07 2020).
https://doi.org/10.1002/nem.2113

[14] Massimo Bartoletti, James Hsin-yu Chiang, and Alberto Lluch Lafuente. 2021.
SoK: Lending Pools in Decentralized Finance. FC 2021: Financial Cryptography
and Data Security (2021), 553–578. https://doi.org/10.1007/978-3-662-63958-0_40
[15] Soumya Basu, David Easley, Maureen O’Hara, and Emin Sirer. 2021. StableFees:
A Predictable Fee Market for Cryptocurrencies. SSRN Electronic Journal (07
2021). https://doi.org/10.2139/ssrn.3318327

[16] MATTHEW BLACKWELL and ADAM N. GLYNN. 2018. How to Make
Causal Inferences with Time-Series Cross-Sectional Data under Selection
on Observables. American Political Science Review 112 (08 2018), 1067–1082.

https://doi.org/10.1017/s0003055418000357
[17] Vitalik Buterin. 2013. Ethereum Whitepaper.

https://ethereum.org/en/

whitepaper/

[18] Vitalik Buterin. 2018. Blockchain Resource Pricing. https://ethresear.ch/t/draft-

position-paper-on-resource-pricing/2838

[19] Vitalik Buterin. 2021. EIP 1559 FAQ. https://notes.ethereum.org/@vbuterin/eip-
1559-faq#Might-EIP-1559-run-the-risk-of-over-stressing-nodes-and-miners-
during-periods-of-high-usage

[20] Vitalik Buterin. 2021. Why I think EIP 1559 block variance is nothing to worry

about. https://notes.ethereum.org/@vbuterin/eip_1559_spikes

[21] Carlo Campajola, Raffaele Cristodaro, Francesco Maria De Collibus, Tao Yan,
Nicolo’ Vallarano, and Claudio J. Tessone. 2022. The Evolution Of Centralisation
arXiv:2206.05081 [physics, q-fin] (06 2022).
on Cryptocurrency Platforms.
https://arxiv.org/abs/2206.05081

[22] Agostino Capponi, Ruizhe Jia, and Ye Wang. 2022.

arXiv:2202.05779 [q-fin]

The Evolution
(02 2022).

of Blockchain:
https://arxiv.org/abs/2202.05779

from Lit

to Dark.

[23] Agostino Capponi, Sveinn Olafsson, and Humoud Alsabah. 2021. Proof-of-Work
Cryptocurrencies: Does Mining Technology Undermine Decentralization?
arXiv:2106.09783 [q-fin] (06 2021). https://arxiv.org/abs/2106.09783

[24] Miles Carlsten, Harry Kalodner, S. Matthew Weinberg, and Arvind Narayanan.
2016. On the Instability of Bitcoin Without the Block Reward. Proceedings of
the 2016 ACM SIGSAC Conference on Computer and Communications Security
- CCS’16 (2016). https://doi.org/10.1145/2976749.2978408

[25] Huashan Chen, Marcus Pendleton, Laurent Njilla, and Shouhuai Xu. 2020. A
Survey on Ethereum Systems Security. Comput. Surveys 53 (07 2020), 1–43.
https://doi.org/10.1145/3391195

[26] Tarun Chitra. 2020.

On-chain Lending.
//doi.org/10.21428/58320208.9ce1cd26

Competitive Equilibria Between Staking and
https:

Cryptoeconomic Systems

(11 2020).

[27] Hao Chung and Elaine Shi. 2022. Foundations of Transaction Fee Mechanism

Design. https://ideas.repec.org/p/arx/papers/2111.03151.html

[28] Lin William Cong, Ke Tang, Yanxin Wang, and Xi Zhao. 2022. Inclusion and
Democratization Through Web3 and DeFi? Initial Evidence from the Ethereum
Ecosystem. https://ssrn.com/abstract=4162966

[29] Kyle Croman, Christian Decker, Ittay Eyal, Adem Efe Gencer, Ari Juels,
Ahmed Kosba, Andrew Miller, Prateek Saxena, Elaine Shi, Emin Gün Sirer,
On Scaling Decentralized
Dawn Song, and Roger Wattenhofer. 2016.
Blockchains.
Financial Cryptography and Data Security (2016), 106–125.
https://doi.org/10.1007/978-3-662-53357-4_8

[30] Kyle Croman, Christian Decker, Ittay Eyal, Adem Efe Gencer, Ari Juels, Ahmed
Kosba, Andrew Miller, Prateek Saxena, Elaine Shi, Emin Gün Sirer, et al. 2016.
On scaling decentralized blockchains. In International conference on financial
cryptography and data security. Springer, 106–125.

[31] Philip Daian, Steven Goldfeder, Tyler Kell, Yunqi Li, Xueyuan Zhao, Iddo
Bentov, Lorenz Breidenbach, and Ari Juels. 2019. Flash Boys 2.0: Frontrunning,
Transaction Reordering, and Consensus Instability in Decentralized Exchanges.
https://arxiv.org/abs/1904.05234

[32] Francesco Maria De Collibus, Alberto Partida, Matija Piškorec, and Claudio J. Tes-
sone. 2021. Heterogeneous Preferential Attachment in Key Ethereum-Based Cryp-
toassets. Frontiers in Physics 9 (10 2021). https://doi.org/10.3389/fphy.2021.720708
Information prop-
IEEE P2P 2013 Proceedings (09 2013).

[33] Christian Decker and Roger Wattenhofer. 2013.

agation in the Bitcoin network.
https://doi.org/10.1109/p2p.2013.6688704

[34] Nicola Dimitri. 2021. View of Transaction Fees, Block Size Limit, and Auctions
in Bitcoin. Ledger Journal 4 (2021). http://ledger.pitt.edu/ojs/ledger/article/view/
145/153

[35] David Easley, Maureen O’Hara, and Soumya Basu. 2019. From mining to markets:
The evolution of bitcoin transaction fees. Journal of Financial Economics 134
(10 2019), 91–109. https://doi.org/10.1016/j.jfineco.2019.03.004

[36] Ittay Eyal and Emin Gün Sirer. 2014. Majority Is Not Enough: Bitcoin Mining
Financial Cryptography and Data Security (2014), 436–454.

Is Vulnerable.
https://doi.org/10.1007/978-3-662-45472-5_28

[37] Matheus Ferreira, Daniel Moroz, David Parkes, and Mitchell Stern. 2021.
Dynamic Posted-Price Mechanisms for the Blockchain Transaction-Fee Market
*. https://arxiv.org/pdf/2103.14144.pdf

Yulin Liu, Yuxuan Lu, Kartik Nayak, Fan Zhang*, Luyao Zhang*, and Yinhong Zhao

[42] Lewis Gudgeon, Pedro Moreno-Sanchez, Stefanie Roos, Patrick Mc-
SoK: Layer-Two Blockchain Pro-
Financial Cryptography and Data Security (2020), 201–226.

Corry, and Arthur Gervais. 2020.
tocols.
https://doi.org/10.1007/978-3-030-51280-4_12

[43] Mor Harchol-Balter. 2013. Performance Modeling and Design of Computer Systems.
Cambridge University Press. https://doi.org/10.1017/cbo9781139226424
[44] Campbell R Harvey, Ashwin Ramachandran, and Joey Santoro. 2021. Defi And

The Future Of Finance. John Wiley.

[45] Charles A. Holt and Roger Sherman. 1982. Waiting-Line Auctions. Journal of
Political Economy 90 (1982), 280–294. https://www.jstor.org/stable/pdf/1830293.
pdf?refreqid=excelsior%3Addc7a661c657fba8a4a5ec04ca1bb70c

[46] Nicolas Houy. 2014.

The Economics of Bitcoin Transaction Fees.

https://ssrn.com/abstract=2400519

[47] Gur Huberman, Jacob D Leshno, and Ciamac Moallemi. 2021. Monopoly without
a Monopolist: An Economic Analysis of the Bitcoin Payment System. Review
of Economic Studies (03 2021). https://doi.org/10.1093/restud/rdab014

[48] Noyan Ilk Ilk, Guangzhi Shang, Shaokun Fan, and J. Leon Zhao. 2021. Stability
of Transaction Fees in Bitcoin: A Supply and Demand Perspective. MIS Quarterly
45 (06 2021), 563–592. https://doi.org/10.25300/MISQ/2021/15718

[49] Dave Kim. 2021. An Analysis of Ethereum Gas Prices and EIP-1559 Adoption.

https://www.blocknative.com/blog/eip-1559-adoption

[50] Piyush Kumar, Manohar U. Kalwani, and Maqbool Dada. 1997. The Impact
of Waiting Time Guarantees on Customers’ Waiting Experiences. Marketing
Science 16 (11 1997), 295–314. https://doi.org/10.1287/mksc.16.4.295

[51] Ron Lavi, Or Sattath, and Aviv Zohar. 2019.

Redesigning Bitcoin’s
The World Wide Web Conference on - WWW ’19 (2019).

fee market.
https://doi.org/10.1145/3308558.3313454

[52] France Leclerc, Bernd H. Schmitt, and Laurette Dube. 1995. Waiting Time and
Decision Making: Is Time like Money? Journal of Consumer Research 22 (06
1995), 110. https://doi.org/10.1086/209439
[53] David S Lee and Thomas Lemieux. 2010.

Regression Discontinuity De-
Journal of Economic Literature 48 (06 2010), 281–355.

signs in Economics.
https://doi.org/10.1257/jel.48.2.281

[54] Alfred Lehar and Christine A. Parlour. 2020. Miner Collusion and the BitCoin
Protocol. SSRN Electronic Journal (2020). https://doi.org/10.2139/ssrn.3559894
[55] Stefanos Leonardos, Barnabé Monnot, Daniel Reijsbergen, Stratis Skoulakis, and
Georgios Piliouras. 2021. Dynamical Analysis of the EIP-1559 Ethereum Fee
Market. (06 2021). https://arxiv.org/pdf/2102.10567.pdf

[56] Yoad Lewenberg, Yoram Bachrach, Yonatan Sompolinsky, Aviv Zohar,
Bitcoin Mining Pools: A Cooperative
and Jeffrey S. Rosenschein. 2015.
Game Theoretic Analysis.
Proceedings of the 2015 International Confer-
ence on Autonomous Agents and Multiagent Systems (05 2015), 919–927.
https://dl.acm.org/doi/10.5555/2772879.2773270

[57] Kai Li, Yibo Wang, and Yuzhe Tang. 2021. DETER: Denial of Ethereum
Txpool sERvices. In CCS ’21: 2021 ACM SIGSAC Conference on Computer and
Communications Security, Virtual Event, Republic of Korea, November 15 - 19, 2021,
Yongdae Kim, Jong Kim, Giovanni Vigna, and Elaine Shi (Eds.). ACM, 1645–1667.
https://doi.org/10.1145/3460120.3485369

[58] Quan-Lin Li, Jing-Yu Ma, and Yan-Xia Chang. 2018. Blockchain Queueing
Theory. arXiv:1808.01795 [cs, math] (09 2018). https://arxiv.org/abs/1808.01795
[59] Shengwu Li. 2017. Obviously Strategy-Proof Mechanisms. American Economic

Review 107 (11 2017), 3257–3287. https://doi.org/10.1257/aer.20160425

[60] Iuon-Chang Lin and Tzu-Chun Liao. 2017. A Survey of Blockchain Security
International Journal of Network Security 19 (2017),

Issues and Challenges.
653–659. https://doi.org/10.6633/IJNS.201709.19(5).01)

[61] Yulin Liu, Yuxuan Lu, Kartik Nayak, Fan Zhang, Luyao Zhang, and Yinhong Zhao.
2022. Replication Data for: “Empirical Analysis of EIP-1559: Transaction Fees,
Waiting Time, and Consensus Security”. https://doi.org/10.7910/DVN/K7UYPI
https://bba.bloomberg.net/?utm_source=

[62] Bloomberg L.P. 2019. XETUSD.

bloomberg-menu&utm_medium=terminal

[63] A. Craig MacKinlay. 1997. Event Studies in Economics and Finance. Journal of
Economic Literature 35 (1997), 13–39. https://www.jstor.org/stable/pdf/2729691.
pdf?refreqid=excelsior%3A36e33d49e7b7fecea7fbf4ea62ab8ca9

[64] R. Preston McAfee and John McMillan. 1987. Auctions and Bidding. Journal
of Economic Literature 25 (1987), 699–738. https://www.jstor.org/stable/pdf/
2726107.pdf?refreqid=excelsior%3A68c5df3840144cf64d2c59f3545422e7

[38] flashbots. 2021. flashbots/pm: Everything there is to know about Flashbots.

[65] Satoshi Nakamoto. 2008. Bitcoin: a Peer-to-Peer Electronic Cash System.

https://github.com/flashbots/pm

https://bitcoin.org/bitcoin.pdf

[39] Ethereum Foundation. 2019. Ethereum Constantinople/St. Petersburg Up-
https://blog.ethereum.org/2019/02/22/ethereum-

grade Announcement.
constantinople-st-petersburg-upgrade-announcement/

[40] Ethereum Foundation.

2021.

London Mainnet Announcement.

https://blog.ethereum.org/2021/07/15/london-mainnet-announcement/

[41] Arthur Gervais, Ghassan O. Karame, Karl Wüst, Vasileios Glykantzis,
Hubert Ritzdorf, and Srdjan Capkun. 2016. On the Security and Perfor-
mance of Proof of Work Blockchains. Proceedings of the 2016 ACM SIGSAC
Conference on Computer and Communications Security - CCS’16 (2016).
https://doi.org/10.1145/2976749.2978341

[66] Michael Neuder, Daniel J. Moroz, Rithvik Rao, and David C. Parkes. 2020. Selfish
Behavior in the Tezos Proof-of-Stake Protocol. Cryptoeconomic Systems (12
2020). https://doi.org/10.21428/58320208.27350920

[67] Dusit Niyato, Nguyen Cong Luong, Ping Wang, and Zhu Han. 2020. Auction The-
ory for Computer Networks. (05 2020). https://doi.org/10.1017/9781108691079
[68] Fellowship of Ethereum Magicians. 2019. EIP-1559: Fee market change for ETH
1.0 chain. https://ethereum-magicians.org/t/eip-1559-fee-market-change-for-
eth-1-0-chain/2783

[69] Best Owie. 2021. Here’s The Reason Behind The Spike In Ethereum Gas Fees.

https://bitcoinist.com/heres-the-reason-behind-the-spike-in-ethereum-gas-

Empirical Analysis of EIP-1559: Transaction Fees, Waiting Times, and Consensus Security

fees/

[70] Emiliano S Pagnotta. 2021.
and Blockchain Security.
https://doi.org/10.1093/rfs/hhaa149

Decentralizing Money: Bitcoin Prices
The Review of Financial Studies (01 2021).

[71] Rafael Pass and Elaine Shi. 2017.

the
ACM Symposium on Principles of Distributed Computing (07 2017).
https://doi.org/10.1145/3087801.3087809

Proceedings of

FruitChains.

[72] Google Cloud Platform. 2019. Big Query Public Data - crypto_ethereum.

https://cloud.google.com/bigquery/public-data

[73] Ethereum Improvement Proposals. 2021. Ethereum Improvement Proposals.

https://eips.ethereum.org/EIPS/eip-1559

[74] Kaihua Qin, Liyi Zhou, and Arthur Gervais. 2021. Quantifying Blockchain
Extractable Value: How dark is the forest? https://arxiv.org/abs/2101.05511
[75] Daniël Reijsbergen, Shyam Sridhar, Barnabé Monnot, Stefanos Leonardos, Stratis
Skoulakis, and Georgios Piliouras. 2021. Transaction Fees on a Honeymoon:
Ethereum’s EIP-1559 One Month Later. https://arxiv.org/abs/2110.04753
[76] Ling Ren. 2019. Analysis of Nakamoto Consensus. IACR Cryptol. ePrint Arch.

2019 (2019), 943.

[77] Peter Rizun. 2015. A Transaction Fee Market Exists Without a Block Size Limit.

https://www.bitcoinunlimited.info/resources/feemarket.pdf

[78] Alvin E. Roth. 2002. The Economist as Engineer: Game Theory, Experimentation,
and Computation as Tools for Design Economics. Econometrica 70 (07 2002),
1341–1378. https://doi.org/10.1111/1468-0262.00335

[79] Tim Roughgarden. 2020.

Ethereum Blockchain: an Economic Analysis of EIP-1559.
//timroughgarden.org/papers/eip1559.pdf

Transaction Fee Mechanism Design for the
http:

[80] Konstantin Sokolov. 2021.

Ransomware activity and blockchain
Journal of Financial Economics 141 (08 2021), 771–782.

congestion.
https://doi.org/10.1016/j.jfineco.2021.04.015

[81] Yonatan Sompolinsky and Aviv Zohar. 2015. Secure High-Rate Transaction Pro-
cessing in Bitcoin. , 507–527 pages. https://doi.org/10.1007/978-3-662-47854-7_32
[82] Yonatan Sompolinsky and Aviv Zohar. 2017. Bitcoin’s Underlying Incentives

- ACM Queue. https://queue.acm.org/detail.cfm?id=3168362

[83] Weizhao Tang, Lucianna Kiffer, Giulia Fanti, and Ari Juels. 2022. Strategic
Latency Reduction in Blockchain Peer-to-Peer Networks. arXiv:2205.06837 [cs]
(05 2022). https://arxiv.org/abs/2205.06837

[84] Itay Tsabary, Alex Manuskin, and Ittay Eyal. 2022.

LedgerHedger: Gas
Reservation for Smart-Contract Security. Cryptology ePrint Archive (2022).
https://eprint.iacr.org/2022/056

[85] Kwok Ping Tsang and Zichao Yang. 2021. The market for bitcoin transactions.
Journal of International Financial Markets, Institutions and Money 71 (03 2021),
101282. https://doi.org/10.1016/j.intfin.2021.101282

[86] Ye Wang, Patrick Zuest, Yaxing Yao, Zhicong Lu, and Roger Wattenhofer.
2022. Impact and User Perception of Sandwich Attacks in the DeFi Ecosystem.
CHI Conference on Human Factors in Computing Systems (04 2022), 1–15.
https://doi.org/10.1145/3491102.3517585
[87] Tianyu Wu and Luyao Zhang. 2022.

Recap of ETHconomics
2022).

(jun 7

@ Devconnect
2022.
https://ce.pubpub.org/pub/ethconomics2022.

Computational Economics

[88] Aviv Yaish, Gilad Stern, and Aviv Zohar. 2022. Uncle Maker: (Time)Stamping
Out The Competition in Ethereum. Cryptology ePrint Archive, Paper 2022/1020.
https://eprint.iacr.org/2022/1020 https://eprint.iacr.org/2022/1020.

[89] Aviv Yaish, Saar Tochner, and Aviv Zohar. 2022. Blockchain Stretching &
Squeezing: Manipulating Time for Your Best Interest. In Proceedings of the
23rd ACM Conference on Economics and Computation (Boulder, CO, USA)
(EC ’22). Association for Computing Machinery, New York, NY, USA, 65–88.
https://doi.org/10.1145/3490486.3538250

[90] Andrew Chi-Chih Yao. 2018. An Incentive Analysis of some Bitcoin Fee Designs.

https://arxiv.org/pdf/1811.02351.pdf

[91] Martin Young. 2021. NFT Mania Sends Ethereum Gas Prices to 14 Week High.
https://cryptopotato.com/nft-mania-sends-ethereum-gas-prices-to-14-week-
high/

[92] Luyao Zhang and Dan Levin. 2017. Bounded Rationality and Robust Mechanism
Design: An Axiomatic Approach. American Economic Review 107 (5 2017),
235–39. https://doi.org/10.1257/aer.p20171030

[93] Luyao Zhang, Xinshi Ma, and Yulin Liu. 2022. SoK: Blockchain Decentralization.

arXiv preprint arXiv:2205.04256 (2022).

A DATA DICTIONARY
We present a full view of the data sets we use and the variables in
them in Table 4.

B STATISTICS TESTS

Correlation Tests. Figure 11 presents the triangle correlation

heatmap between the control variables we use.

Stationary Tests. Table 5 presents the results of the Augmented
Dickey-Fuller (ADF) test for all variables we use. It proves that they
are all stationary.

Auto-correlation Tests. Figure 12 presents the auto-correlation
test for the dependent variables we put in the regressions. Gas
prices have a significant auto-correlation, while the autocorrelation
of standardized IQR and waiting time are trivial.

Figure 11: Correlation Heatmap for Control Variables

C ROBUSTNESS CHECKS

Fee Dynamics. Table 6 shows that though median gas prices
increased overall after London hard fork without controls, they
dropped if controlling time trend and price volatility.

Table 7 displays the regression outcome with standardized IQR
as the dependent variable, the indicator variable of London hard
fork and EIP-1559 adoption rate as independent variables. Column
(1) displays that the aggregate effect of the network upgrade to the
intrablock price variance is negative. Columns (2) - (4), carrying
an expanding set of control variables, return a consistent estimate
on the immediate and short-term effect of EIP-1559 adoption. As
shown, the coefficients in the first row on London hard fork in
Columns (2) - (4) are consistently and significantly positive. In con-
trast, the coefficients in the second row on EIP-1559 adoption are
similarly and significantly negative.

Table 8 shows that though IQR increased immediately after Lon-
don hard fork, it dropped significantly and in greater scales in the
blocks with more transactions adopting EIP-1559 bidding.

Table 9 shows that our results on standardized IQR are robust

to different volatility measures.

EIPadoptionnblocksizegas_usedvolatility30volatility90volatility180ROIEIPadoptionnblocksizegas_usedvolatility30volatility90volatility180ROI0.780.870.750.160.230.190.0460.0820.0390.84-0.2-0.21-0.22-0.014-0.0096-0.24-0.24-0.26-0.019-0.0120.81-0.27-0.27-0.3-0.025-0.0130.670.88-0.0036-0.00073-0.0036-0.00310.00029-0.0011-0.001-0.00191.000.750.500.250.000.250.500.751.00Yulin Liu, Yuxuan Lu, Kartik Nayak, Fan Zhang*, Luyao Zhang*, and Yinhong Zhao

Column Name

Source

Annotation

Dataset 1: Block Characteristics

block_number

BQ_timestamp

block_hash

sha3_uncles

miner

difficulty

size

gas_limit

gas_used

tr_count

base_fee

BigQuery block data

BigQuery block data

BigQuery block data

BigQuery block data

BigQuery block data

BigQuery block data

BigQuery block data

BigQuery block data

BigQuery block data

BigQuery block data

BigQuery block data

Block number on blockchain; data key

Block timestamp on blockchain

Hash of the block

SHA3 of the uncles data in the block

miner address

Integer of the difficulty for this block

The size of this block in bytes

The maximum gas allowed in this block

The total used gas by all transactions in this block

Number of all transactions included in this block

Protocol base fee per gas

Dataset 2: Fee Dynamics

block_number

BigQuery(BQ) transaction(tx) data

Block number on blockchain; data key

all_gpq[x]

BQ tx data (aggregated on block level)

[x]% quartile of actual gas price paid per gas for all transactions in this block

all_gpcount

BQ tx data (aggregated on block level)

number of transactions with valid gas price paid in this block (= tr_count)

all_prq[x]

BQ tx data (aggregated on block level)

[x]% quartile of priority fee per gas bid by all transactions in this block

all_prcount

BQ tx data (aggregated on block level) number of transactions with valid priority fee bid in this block (= number of txs that adopt EIP1559 style bid)

all_mfq[x]

BQ tx data (aggregated on block level)

[x]% quartile of max fee per gas bid by all transactions in this block

all_mfcount

BQ tx data (aggregated on block level)

number of txs that adopt EIP1559 style bid

legacy_gpq[x]

BQ tx data (aggregated on block level)

[x]% quartile of actual gas price paid per gas for all transactions that adopts legacy style bid in this block

eip_gpq[x]

BQ tx data (aggregated on block level)

[x]% quartile of actual gas price paid per gas for all transactions that adopts EIP1559 style bid in this block

Dataset 3: Waiting Time

block_number

Go Ethereum (Geth)

uncle_cnt

all_cnt

all_latetx_cnt

all_nevertx_cnt

all_wtq[x]

legacy_cnt

legacy_latetx_cnt

legacy_nevertx_cnt

legacy_wtq[x]

eip_cnt

eip_latetx_cnt

eip_nevertx_cnt

eip_wtq[x]

block_number

FBB_coinbase _transfer

FBB_gas_fee

Geth

Geth

Geth

Geth

Geth

Geth

Geth

Geth

Geth

Geth

Geth

Geth

Geth

Geth

Block number on blockchain; data key

Number of uncles of this block

Number of all transactions included in this block

Number of late transactions in this block

Number of never transactions in this block

[x]% quartile of waiting time for all transactions included in this block

Number of transactions that adopt legacy bid style included in this block

Number of late transactions that adopt legacy bid style in this block

Number of never transactions that adopt legacy bid style in this block

[x]% quartile of waiting time for transactions that adopt legacy bid style included in this block

Number of transactions that adopt EIP-1559 bid style included in this block

Number of late transactions that adopt EIP-1559 bid style in this block

Number of never transactions that adopt EIP-1559 bid style in this block

[x]% quartile of waiting time for transactions that adopt EIP-1559 bid style included in this block

Dataset 4: Miner Extractable Value (MEV)

Block number on blockchain; data key

Flashbots API

Flashbots API

Sum of coinbase transfers of all Flashbot bundles (FBB) transactions in this block

Sum of total gas fees paid by all FBB transactions in this block

non_FBB_gas_fee

Geth and Flashbots API

Sum of total gas fees paid to miners (not including burnt fees) by all non-FBB transactions in this block

static_reward

uncle_incl_reward

Geth

Geth

Static reward to miners in this block

Uncle inclusion reward to miners in this block

Table 4: Data dictionary

Empirical Analysis of EIP-1559: Transaction Fees, Waiting Times, and Consensus Security

Variable Name

ADF Statistics

p-value

Stationary

base fee
EIP-1559 adoption
median gas price
IQR
standardized IQR
median waiting time
90min MA volatility
block size
block gas used

-25.65
-7.58
-32.92
-29.24
-34.84
-60.83
-10.99
-24.50
-46.85

0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000

Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes

Table 5: Dickey-Fuller Test for Stationary Variables

The figure visualizes Column (3) in Table 2. The line in the figure shows the
predicted block median waiting time at different levels of the EIP-1559 adoption
rate based on the linear regression outcome controlling for all other factors in
a representative scenario (e.g., median gas price at 39 Gwei, price volatility at
0.005). As the adoption rate grows from 0 to 1, the predicted mean waiting time
gradually decreases from 19.93 seconds to 8.79 seconds. Before the London hard
fork, the average was approximately 28.5 seconds, shown as the red dot on the
left side. The scatters are real data. The figure also includes another trend line
that displays simple linear regression without controlling for any factors.

Figure 13: Simulated relationship between the waiting time
and EIP-1559 adoption

The figure visualizes Column (4) in Table 7. The line in the figure shows the
predicted standardized IQR at different levels of the EIP-1559 adoption rate
based on the linear regression outcome controlling for all other factors in a
representative scenario (e.g., median gas price at 39 Gwei, price volatility at 0.005).
As the adoption rate grows from 0 to 1, the predicted mean of the standardized
interquartile difference gradually decreases from 0.34 to 0.09. For the period
before the London hard fork, the average is approximately 0.27, shown as the red
dot on the left side. The scatters are real data. The figure also includes another
trend line that displays simple linear regression without controlling for any
factors, although it largely coincides with the predicted line.

Figure 14: Simulated relationship between the standardized
interquartile difference and EIP-1559 adoption

Figure 12: Auto-correlation of median gas price, standard-
ized IQR, and median waiting time

Waiting Time. Table 10 shows that least absolute deviation (LAD)
regression results are similar to OLS regressions in Table 2, but the
coefficient estimates are overall smaller in scale.

Column (3) in Table 11 shows that transaction type had trivial

effects on median waiting time.

D ADDITIONAL

TABLES AND VISUALIZATIONS

Distribution of priority fees in Fig. 15 has two peaks at 2 Gwei and
5 Gwei, with a majority of median priority fee bids under 10 Gwei.

Figure 15: Distribution of priority fee bid

 pre-EIP00.20.40.60.8100.20.40.60.81trend linereal data95% confidence intervalpredicted meanEIP-1559 adoption ratestandardized iqdiffpost-EIP051015200510152025block median priority feepercentYulin Liu, Yuxuan Lu, Kartik Nayak, Fan Zhang*, Luyao Zhang*, and Yinhong Zhao

standardized inter-quartile range

standardized IQR

London Hardfork

EIP-1559 adoption

nblock

median gas price

90-block volatility

block size

ROI

Intercept

(1)
-0.02509∗∗∗
(0.00122)

(2)
0.08467∗∗∗
(0.00259)
-0.24024∗∗∗
(0.00370)
-0.00000∗∗∗
(0.00000)

(3)
0.08458∗∗∗
(0.00260)
-0.24191∗∗∗
(0.00371)
-0.00000∗∗∗
(0.00000)
-0.00002∗
(0.00001)
-1.66109∗∗∗
(0.33027)

0.25204∗∗∗
(0.00088)

0.25896∗∗∗
(0.00319)

0.27201∗∗∗
(0.00401)

(4)
0.08603∗∗∗
(0.00260)
-0.24573∗∗∗
(0.00374)
-0.00000∗∗∗
(0.00000)
-0.00001
(0.00001)
-1.75653∗∗∗
(0.33043)
0.00000∗∗∗
(0.00000)
1.44643
(1.18377)
0.26412∗∗∗
(0.00413)

Observations
𝑅2

135,757
0.00310

135,757
0.04446

135,757
0.04467

135,756
0.04510

Note: Hour fixed effect included.

∗p<0.1; ∗∗p<0.05; ∗∗∗p<0.01

Linear regression with standardized IQR as dependent variable, indicator of
London Hardfork and EIP-1559 adoption rate as independent variables, with
different sets of controls shown in different columns. Outcome variable data
deleted if Q50 gas price < 1 to avoid divided by zero error (standardized IQR =
IQR/Q50 gas price). Standard errors are in parentheses. Though standardized
IQR increased immediately after London Hardfork, it dropped significantly and
in greater scale in the blocks with more transactions adopting EIP-1559 bidding.
The long term negative effect outweighs a small short term positive effect. The
data frequency is by block. Column (4) is visualized in Fig. 14.

Table 7: Standardized IQR and EIP-1559 Adoption

London Hardfork

EIP-1559 adoption

nblock

median gas price

30-block volatility

90-block volatility

180-block volatility

block size

ROI

Intercept

(1)
0.08622∗∗∗
(0.00260)
-0.24707∗∗∗
(0.00374)
-0.00000∗∗∗
(0.00000)
-0.00001
(0.00001)
-4.12185∗∗∗
(0.38035)

0.00000∗∗∗
(0.00000)
1.43331
(1.18338)
0.27417∗∗∗
(0.00400)

(2)
0.08603∗∗∗
(0.00260)
-0.24573∗∗∗
(0.00374)
-0.00000∗∗∗
(0.00000)
-0.00001
(0.00001)

-1.75653∗∗∗
(0.33043)

0.00000∗∗∗
(0.00000)
1.44643
(1.18377)
0.26412∗∗∗
(0.00413)

(3)
0.08590∗∗∗
(0.00260)
-0.24471∗∗∗
(0.00375)
-0.00000∗∗∗
(0.00000)
-0.00001
(0.00001)

-0.48006∗∗
(0.21847)
0.00000∗∗∗
(0.00000)
1.45417
(1.18388)
0.25721∗∗∗
(0.00421)

Observations

135,756

135,756

135,756

∗p<0.1; ∗∗p<0.05; ∗∗∗p<0.01

Note: Hour fixed effect included.
Linear regression with standardized IQR as dependent variable, indicator of
London Hardfork and EIP-1559 adoption rate as independent variables, with
different price volatility measures shown in different columns. Standard errors
are in parentheses. Our results are robust to different volatility measures.
Table 9: Intra-block Gas Price Difference and EIP-1559
Adoption - Different Volatility Measures

Gas Price IQR

London Hardfork

EIP-1559 adoption

nblock

median gas price

90-block volatility

block size

ROI

Intercept

(1)
3.48176∗∗∗
(0.05748)

(2)
2.21534∗∗∗
(0.11910)

(3)
(4)
2.97793∗∗∗
3.03930∗∗∗
(0.11384)
(0.11413)
-15.76774∗∗∗ -15.11661∗∗∗ -15.27582∗∗∗
(0.16467)
(0.16326)
0.00008∗∗∗
0.00008∗∗∗
(0.00000)
(0.00000)
0.07041∗∗∗
0.07002∗∗∗
(0.00063)
(0.00063)

(0.17052)
0.00011∗∗∗
(0.00000)

313.22922∗∗∗ 308.95025∗∗∗
(14.46024)
(14.45058)
0.00000∗∗∗
(0.00000)
91.86449∗
(51.68797)
6.34828∗∗∗
(0.18179)

6.67830∗∗∗
(0.17614)

8.94921∗∗∗
(0.04133)

12.71802∗∗∗
(0.14698)

Observations
𝑅2

137,025
0.02566

137,025
0.13203

137,025
0.21020

137,024
0.21053

Note: Hour fixed effect included.

∗p<0.1; ∗∗p<0.05; ∗∗∗p<0.01
Linear regression with gas price IQR as dependent variable, indicator of London
Hardfork and EIP-1559 adoption rate as independent variables, with different sets
of controls shown in different columns. Standard errors are in parentheses. Though
IQR increased immediately after London Hardfork, it dropped significantly and
in greater scales in the blocks with more transactions adopting EIP-1559 bidding.
The long term negative effect outweighs a small short term positive effect.
Table 8: Intra-block Gas Price Difference and EIP-1559
Adoption - Measured by IQR

Figure 17: Median waiting time distribution by transaction
type after London hard fork

010203040506000.20.40.60.811.21.41.6category=Allcategory=Legacycategory=EIPmedian waiting timepercentEmpirical Analysis of EIP-1559: Transaction Fees, Waiting Times, and Consensus Security

Pre London Hardfork

period\threshold 1.0 M 1.2 M 1.4 M 1.6 M 1.8 M 2.0 M 2.2 M 2.4 M
39.99 39.98 39.97 14.64 14.64 14.64 14.59 3.90
4.92
35.29 34.40 34.39 14.67 14.66 5.07
1.78
53.98 30.33 30.32 13.97 13.96 5.39
0.83
2.26
42.22 41.90 24.26 12.37 5.57
0.16
1.05
46.22 30.56 18.37 10.17 5.16
0.03
0.52
2.30
49.20 35.10 14.41 8.25

20 s
30 s
40 s
60 s
90 s
120 s

4.92
5.38
2.23
0.40
0.24

Post London Hardfork

period\threshold 1.0 M 1.2 M 1.4 M 1.6 M 1.8 M 2.0 M 2.2 M 2.4 M
3.38
1.55
0.86
0.32
0.13
0.05

39.11 31.88 25.66 15.12 10.38 7.27
5.01
42.85 29.43 20.41 13.46 8.60
3.35
45.57 31.45 20.46 11.41 6.35
1.76
4.09
52.28 32.70 18.23 8.90
0.80
2.35
57.77 33.83 16.27 6.54
0.45
1.56
61.75 34.23 14.71 5.04

20 s
30 s
40 s
60 s
90 s
120 s

5.00
2.73
1.76
0.74
0.30
0.17

Table 12: Percentage of network spikes for different time
intervals and different thresholds

Figure 18: Distributions of median waiting time. It moved
left after the London hard fork. Users experience a much
lower transaction waiting time with EIP-1559. The result is
robust even after we extend the time range for analysis.

London Hardfork

EIP-1559 adoption

nblock

block size

ROI

90-block volatility

Intercept

Observations
𝑅2

Median Gas Price

(1)
20.2246∗∗∗
(0.3528)

(2)
-11.8181∗∗∗
(0.7543)
-0.5387
(1.0776)
0.0005∗∗∗
(0.0000)

39.4370∗∗∗
(0.2492)

55.5752∗∗∗
(0.3986)

(3)
-10.7044∗∗∗
(0.7509)
-4.7284∗∗∗
(1.0821)
0.0002∗∗∗
(0.0000)
-0.0001∗∗∗
(0.0000)
-76.1414
(343.9860)
3170.0087∗∗∗
(89.8447)
35.6840∗∗∗
(0.7177)

138,043
0.0233

138,043
0.0429

137,769
0.0684

Note: Hour fiex effect included

∗p<0.1; ∗∗p<0.05; ∗∗∗p<0.01

Linear regression with block median gas price as dependent variable, indicator of
London Hardfork and EIP-1559 adoption rate as independent variables with differ-
ent sets of controls shown in different columns. Standard errors are in parentheses.
Results are mixed: median gas prices increased overall after London Hardfork with-
out controls, but they in fact dropped if controlling time trend and price volatility.

Table 6: Median Gas Price and EIP-1559 adoption

Figure 16: Time Series of intrablock gas price IQR and
standardized IQR

Figure 16 shows the time series of IQR and standardized IQR,

the former oscillating with base fee.

Figure 17 shows that the waiting time distribution of legacy and
EIP-1559 transactions after London hard fork, which are similar in
general.

Table 12 shows the percentage of network spikes for different

time intervals and different thresholds.

Figure 18 represents the robustness check for the results on

waiting time.

12.9M12.95M13M13.05M13.1M0102030405012.9M12.95M13M13.05M13.1M00.20.40.60.81block_numberIQRstd IQRYulin Liu, Yuxuan Lu, Kartik Nayak, Fan Zhang*, Luyao Zhang*, and Yinhong Zhao

Median Waiting Time

Median Waiting Time

London Hardfork

EIP-1559 adoption

nblock

median gas price

90-block volatility

block size

ROI

Intercept

(1)
-6.46600∗∗∗
(0.07587)

(2)
-6.07273∗∗∗
(0.16333)
-0.94735∗∗∗
(0.23883)
0.00000
(0.00000)

(3)
-6.18858∗∗∗
(0.16342)
-1.01186∗∗∗
(0.23850)
0.00000∗∗
(0.00000)
-0.00650∗∗∗
(0.00089)
0.12689∗∗∗
(0.00712)

16.77700∗∗∗
(0.19032)

16.80625∗∗∗
(0.20135)

17.15675∗∗∗
(0.20672)

(4)
-3.90310∗∗∗
(0.09868)
-4.75727∗∗∗
(0.14501)
-0.00002∗∗∗
(0.00000)
0.00692∗∗∗
(0.00054)
0.01709∗∗∗
(0.00427)
0.00011∗∗∗
(0.00000)
-0.00036∗∗∗
(0.00003)
8.38608∗∗∗
(0.13158)

Observations

135,513

135,513

135,513

135,512

Note: Hour fixed effect included.

∗p<0.1; ∗∗p<0.05; ∗∗∗p<0.01
Least absolute deviation (LAD) regression with block median waiting time as
dependent variable, indicator of London Hardfork and EIP-1559 adoption rate as
independent variables with different sets of controls shown in different columns.
Standard errors are in parentheses. Results are similar to OLS regressions
in Table 2, but the coefficient estimates are overall smaller in scale.

Table 10: Ethereum Median Waiting Time and EIP-1559
Adoption - LAD Regression

TxType == 2

nblock

EIP-1559 adoption

90-block volatility

block size

ROI

Intercept

Observations
𝑅2

(1)
-0.49933∗∗∗
(0.13514)
0.00005∗∗∗
(0.00000)
-3.83371∗∗∗
(0.30980)

14.76364∗∗∗
(0.15423)

137,780
0.70541

(2)
-1.14876∗∗∗
(0.12950)
0.00001∗∗
(0.00000)
-9.74894∗∗∗
(0.30025)
59.16974
(37.05756)
0.00013∗∗∗
(0.00000)
-125.41390∗∗∗
(36.26787)
5.37660∗∗∗
(0.30356)

137,780
0.73170

(3)

0.00059
(0.00088)

-0.00345
(0.03561)

140,000
0.00000

∗p<0.1; ∗∗p<0.05; ∗∗∗p<0.01

Fixed effect regression with median waiting as dependent variable, indicator of
transaction type as independent variable, with different sets of controls shown
in different columns. Hour fixed effect included in Column (1) and (2), while block
fixed effect included in Column (3). Standard errors are in parentheses. Column
(3) shows that transaction type had trivial effects on median waiting time.
Table 11: Comparison of Waiting Time between Legacy
Style Transactions and EIP-1559 Style Transactions

