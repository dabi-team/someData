2
2
0
2

n
a
J

3
2

]
h
p
-
t
n
a
u
q
[

2
v
3
6
7
2
0
.
0
1
1
2
:
v
i
X
r
a

Quantum Blockchain based on Dimensional Lifting

Generalized Gram-Schmidt Procedure

Kumar Nilesh1 and P.K. Panigrahi2

1Department of Mathematics and Statistics, Indian Institute of Science Education
and Research, Kolkata
2Department of Physical Sciences, Indian Institute of Science Education and
Research, Kolkata

Abstract

The advancement of quantum computers undermines the security of classical blockchain,

necessitating either a post-quantum upgrade of the existing architecture or creation of an inher-

ently quantum blockchain. Here we propose a practically realizable model of a fully quantum

blockchain based on generalized Gram-Schmidt procedure utilizing dimensional lifting. In this

model, information of transactions stored in a multi-qubit state are subsequently encoded using

the generalized Gram-Schmidt process. The chain is generated as a result of the reliance of

orthogonalized state on the sequence of states preceding it. Various forking scenarios and their

countermeasures are considered for the proposed model. It is shown to be secure even against

quantum computing attacks using the no-cloning theorem and non-democratic nature of Gen-

eralized Gram-Schmidt orthogonalization. Finally, we outline a framework for a quantum token

built on the same architecture as our blockchain.

Index terms— Quantum Blockchain, Quantum Token, Generalized Gram-Schmidt

1

Introduction

The initial concept of Distributed Ledger Technology (DLT) can be traced back to Byzantine Gen-
erals Problem [1] before Blockchain and Bitcoin were introduced. The notion of Blockchain that

we know today, i.e., a cryptographically linked decentralized and distributed database that forms a

chain using timestamped electronic data, was ﬁrst pioneered by Stornetta [2] and Bayer [3]. The
accountability and transparency of transactions is a key feature of a blockchain, which makes them

appealing for a wide range of applications [4] such as in healthcare industries [5], government orga-
nizations [6], ﬁnance [7], et cetera. A blockchain contains the following components [8]: (1) Nodes,

which is a form of electronic device that keeps the network running by maintaining local copies
of the blockchain. (2) Blocks, each of which has a cryptographic hash of itself and the previous

1

 
 
 
 
 
 
block, as well as a timestamp and transaction data. The timestamp establishes that the transaction

data existed at the time of the block’s publication. (3) Miners, who create new blocks on the chain
through a process called mining. One of the most important concepts in blockchain technology is

decentralization, in which the authenticity is conﬁrmed by the community of nodes. Further, it is a
distributed ledger in which records are in a shared form, ensuring no single organization controls the

entire system and also eliminating the use of intermediaries. Even though every node has its own
copy of the blockchain, they are transparent, and every action in the ledger can be easily viewed

and veriﬁed. As each block contains information about the previous block, they form a chain. As a
result, blockchains are resistant to data modiﬁcation, as data in a particular block cannot be modi-

ﬁed retroactively without aﬀecting all subsequent blocks. That is, if a hacker attempts to modify a
block, the hash will change, aﬀecting all subsequent blocks.

The debut of Bitcoin [9] in 2008 signaled the start of a new era in blockchain technology. Bitcoin
being a self-suﬃcient, anarchic system, requires the authority of no single central organization.

However, the data which carries monetary value is controlled and authenticated by each peer in the
distributed network. The democratic aspect of the network is determined here by the amount of

processing capacity of each node rather than the number of members. Validation of any transaction

is directly linked with the computational power one carries. Miners who validate the legitimacy of
Bitcoin transactions need to attach a valid SHA256 hash to the block’s header. In return for their

computational work, miners are rewarded with Bitcoin (native token), and this is the mechanism to
introduce new bitcoins into circulation. In addition to its own hash, a block keeps the hash of the

block before it, resulting in the formation of a chain. At any instant, nodes will follow the longest
chain in the network, considering that most cumulative work is done in that chain and discarding

any other chain from their local repository. Blockchains like Bitcoin also allow for the creation
and execution of smart contracts, which are on-chain automated programs with multi-signature and

hashed timelock [10]. As the market capitalization of Bitcoin grows, new cryptocurrencies such as
Ethereum, Ripple, Alastria, and others have begun to appear [8]. Despite the fact that blockchain

and cryptocurrencies have been around for a decade, the distributed technology is still in its infancy
and is ﬁnding new applications in every facet of digital information. The rising expense of mining,

on the other hand, is encouraging investors to consider alternate methods for validation. Further,
conﬁrmation of each transaction takes a lot of time, making transactions very slow.

Quantum computing, a revolutionary paradigm in computation that uses quantum principles

like interference, superposition, and entanglement to solve physical and computational problems,
concurrently outperforming its classical counterpart. In addition, the no-cloning theorem and dis-

turbance caused by quantum measurement have given rise to quantum cryptography protocols such
as BB84 [11] and E91 [12].

A blockchain relies on two asymmetrical cryptography: cryptographic hash functions and digital
signatures [13]. Security based on mathematical complexity is not unique to blockchain. Most of the

current cryptography is based on certain kinds of mathematical encryption that are diﬃcult to solve
with current computational capabilities [14]. Therefore, one of the most intriguing applications of

quantum computers is breaking the mathematical diﬃculty that forms the base for currently used
cryptography [15]. With the discovery of Shor’s algorithm [16], it was apparent that a suﬃciently

2

powerful quantum computer could break the mathematical diﬃculty of asymmetrical cryptography.

Quantum computers can speed up the mining process and crack the SHA256 hash algorithm used
by the Bitcoin network, thus making it vulnerable to 51% attack [17]. Quantum computers could

also completely destroy Bitcoin’s classical signature. Additionally, quantum computers will be able
to modify the data contained in a block without altering the hashing function. When the hash is

unchanged, the chain will appear undisturbed and intact. This seems to make Blockchain completely
pointless and useless in the post-quantum world.

Unless quantum technologies are integrated into blockchain technology, the current classical
blockchain may fail [18]. While several attempts have been made to incorporate post-quantum

cryptography, they do not provide unconditional security [19, 20, 21]. In order to assure authenti-
cation in the post-quantum world is to use quantum computations, which provide (unconditional)

information theoretic security based on presumably unbreakable laws of quantum physics, instead
of some mathematical complexity. And use quantum technologies to quantize the network, which

keep on evolving. Along with the security and robustness, the Quantum Blockchain protocol has
several other advantages over classical blockchain, including immediate veriﬁcation of transactions

and less resource consumption in mining. Here the data is encoded in quantum states, which is then

converted into a quantum block.

Threat from quantum computation inspired many recent studies in the conceptual design of

quantum blockchain. Jogenfors, in 2016 simply introduced a quantum bitcoin scheme for transaction
system [22]. His scheme, however, was ineﬀective. Afterward, Rajan et al. [23] using entanglement

in time gave a conceptual scheme for quantum blockchain. It lacked many details and security anal-
ysis. Furthermore, implementing it on a large scale is diﬃcult. More recently, quantum blockchain

based on weighted hypergraphs was proposed [24]. Although the concept was interesting but the
implementation was not perfect. The consensus was incomplete and there was no way to recover

back the encoded information. As far as we can tell, the research and development of quantum
blockchain is still in its early stage, and there are numerous issues that need to be addressed.

In this article, we propose a quantum blockchain protocol based on dimensional lifting generalized
quantum Gram-Schmidt procedure. The construction of each block in the network is done by

applying a non-democratic orthogonalization procedure to multi-qubit state vectors. The proposed
scheme requires fewer quantum capabilities making it practically realizable even in a small-scale

quantum network.

Section 2 introduces the orthogonalization method used in our protocol. The construction of our
quantum blockchain protocol is then described step by step in sections 3 and 4. Possible forking

scenarios and countermeasures are discussed in Section 5. Section 6 contains a security analysis that
demonstrates robustness not only against currently known quantum computing attacks, but also

against those that may be discovered in the future, potentially making post-quantum cryptographic
schemes vulnerable. Finally, section 7 describes a quantum token based on our proposed quantum

blockchain.

3

2 Genralized Quantum Gram-Schmidt Orthogonalization

The original Gram-Schmidt orthogonalization procedure, that constructs orthogonal states from an
ordered set of linearly independent states, is well known [25]. This is a useful method, which can be
used to produce an orthonormal basis set |w1i , . . . , |wni from an ordered set of states |v1i , . . . , |vni
in the Hilbert space H. We can achieve this deﬁning |w1i ≡ |v1i /k |v1i k, and for 1 ≤ k ≤ n − 1
deﬁne |wk+1i inductively by

|wk+1i ≡

|vk+1i −
k |vk+1i −

k
i=1 hwi | vk+1i |wii
k
i=1 hwi | vk+1i |wii k

.

P

P
Several modiﬁcations have been proposed to enhance its eﬃciency and stability for speciﬁc scenarios
where the original version might not be suitable [26].

In this paper, we will make use of the Havlicek and Svozil’s generalization of Gram-Schmidt
orthogonalization, which employs dimensional lifting [27]. The constraint of linear independence on

the initial states is relaxed in this generalization by extending the dimension of the original Hilbert
Space. As a result, it broadens the range of states for which the Gram-Schmidt orthogonalization

can be used. The end result is demonstrably orthogonal and projecting along the newly added
dimensions returns the initial states. Therefore, the information encoded in the initial states is

preserved in the orthogonalized outcome.

Here we will give an alternative proof for this generalized Gram-Schmidt orthogonalization with

the help of matrices.

Theorem 2.1. Let v1, . . . , vk be an arbitrary ﬁnite set of states (not necessarily linearly independent)
in a Hilbert space H = Cm. Then there exists a set of orthogonal states w1, . . . , wk in the extended
Hilbert space H′ = Cm+k and a surjective partial isometry P : H′ → H such that P wi = vi for all
i = 1, . . . , k.

Proof. Let our initial states be v1, v2, · · · , vk, they might not be linearly independent. And H = Cm
represents the Hilbert space. Using the initial states as columns lets construct a matrix

M =

v1

· · ·

vk

∈ Cm

×

k

(cid:16)

(cid:17)

Now if we deﬁne a new matrix as A := m−
matrix A, we deﬁne a new matrix B as

1M for any ﬁxed m > kM k2, we get kAk2 < 1. With this

B =

Ik − AT A

1/2

∈ Ck

×

k

(cid:1)
where AT is transpose of matrix A and Ik is k × k identity matrix. The existence of B can be easily
veriﬁed as Ik − AT A is a positive deﬁnite matrix. Now observing that

(cid:0)

= AT A + BT B = Ik

AT BT

(cid:16)

(cid:17)

A
B !

4

 
implies

A
B !

has k orthonormal columns and thus can be extended to a orthogonal matrix N ,

forming the ﬁrst k columns of N .

Therefore, it is easy to notice that every (potentially rectangular) matrix M can be extended to

a nonzero scalar multiple of an orthogonal block matrix

N :=

M ∗

∗

∗ !

.

Further the states wj forming the columns of N, are not only mutually orthogonal but also have
equal norm m. The advantage of this technique is that by projecting along the additional dimensions
we can recover the initial states. For i = 1, 2, . . . , k, consider the following map

P = (Im 0m

×

k) M ∈ Cm

(m+k).

×

Then P becomes a surjective partial isometry, deﬁned by P (wj) = vj, which gives back our initial
states.

Gram-Schmidt orthogonalization is easy to implement in Quantum Computers as we already

have Quantum circuits for Gram-Schmidt procedure [28, 29], taking input:
linearly independent
states b1, b2, . . . , bn ∈ Rn and giving output: mutually orthogonal basis states b∗1, b∗2, . . . , b∗n and a
transformation operator M.

3 Quantum Blockchain

Taking into account the protocol’s overall structure, which we will discuss in the following section,
the proposed quantum blockchain is a public and permissionless blockchain, which satisﬁes the

following properties:

1. A Decentralized architecture,

2. A quantum network with a distributed ledger,

3. Each node in this quantum network possesses quantum capabilities such as quantum storage,

quantum state preparation, and quantum communication,

4. Shared common quantum database.

Though blockchain has a wide range of applications, for the sake of illustration, we will use
the example of a blockchain that manages a digital currency called qCoin. New transactions are

proposed by those nodes who wish to transfer their funds to another node and are authenticated
by their digital signature. There are various proposed digital signatures. Unconditionally Secure

digital signatures, such as Toeplitz Group Signature [30] and others, have been proposed and meet

the following criteria : Unforgeability, Transferability, and Non-Repudiation.

5

 
 
The operation of the blockchain consists of the creation of new transactions and construction of

blocks that aggregate them. The process involves signature, broadcast, veriﬁcation, encryption, and
linking. Each transaction includes the information about the sender, receiver, amount, timestamp,

and a list of transaction records demonstrating that the sender has suﬃcient funds to complete
the transaction. The information of blocks containing transactions is encoded in an n− qubit

state. The information is then encrypted using the Generalized Quantum Gram-Schmidt process and
transmitted using quantum key distribution to other nodes in the blockchain network and is collected

in the pool of unconﬁrmed transactions. Each node checks these unconﬁrmed transactions with
respect to their local copy of the blockchain in order to validate the encoded information. Further

validation is performed using voting protocol before the veriﬁer adds the block to its blockchain.

We do not have to presume that every single node is trustworthy in our vote-based consensus.

Instead, the system functions as long as a certain proportion of nodes are trustworthy [31].

4 Protocol for Quantum Blockchain

For a single transaction round, we will now go over each phase of the protocol in detail. Each round
of the protocol consists of the following four phases - the Transaction phase, the Veriﬁcation phase,

Consensus, and the Block Linking phase.

4.1 The Transaction Phase

Deﬁnition 4.1. [30] A transaction Tx is deﬁned as a tuple (S, R, A, T), where S is the sender of
this transaction; R are the receivers of this transaction = {(r1), . . . , (rm)}; A is the amount of the
qCoin to be transmitted. And, T are the sources, which is a list of transactions (T1, . . . , Tn) to be
redeemed by Tx;

Step 1 : Creation of the Transaction.

For this round, we consider a node, say Alice, wish to send qCoin to another node, say Bob.
Because it is Alice who wants to transfer her qCoin, she will initiate a Transaction Tx and sign it
with her digital signature. Then she will encode the information of this transaction Tx containing
her digital signature, Bob’s address, amount to be transferred, and sources of this fund. The encoded
state can be denoted as:

Vi = Tx (S, R, A, T) .

Step 2 : Broadcast.

Once Alice has encoded the transaction, she broadcasts the encoded transaction Vi to the entire
network. We for the practicality of the protocol, unlike other models, assume that not everyone in
the network heard it. Let’s say Charlie receives the broadcast; he will proceed to the veriﬁcation

phase.

We will follow a procedure that is comparable to the original Bitcoin transaction to ﬁnish a

transaction [9]. When Alice spends the fund she received from an earlier transaction (for example,
a transaction that reports Alice receiving 5 qCoin from someone). She wants to send Bob, say 3

6

qcoin. There will be two transactions, one sending 3 qCoin to Bob and the other sending 2 qCoin

to herself, and both will have unique encoding because the message is distinct, necessitating the use
of two diﬀerent state vectors.

4.2 The Veriﬁcation Phase

Once Charlie heard the broadcast, he veriﬁes the authenticity of the transaction based on his
blockchain and voting protocol.

Step 1 : Transaction Veriﬁcation

A transaction Tx is considered to be valid if and only if the following holds [30]:

1. Tx is properly signed by its sender S,

2. The sender of Tx is one of the receivers in each of its source transactions T,

3. The certiﬁcation & signature of Tx evaluates the protection of all its source to be true,

4. None of its source transactions has been redeemed before.

Once the transaction satisﬁes all the above conditions, it is collected in the Log (a collection of

valid but unconﬁrmed transactions that must be agreed upon by a common consensus) owned by
Charlie.

Step 2 : Preliminary Block Creation

Subsequently, the unconﬁrmed transactions from the log are aggregated to form a preliminary

block. The preliminary block after encoding can be written in an n− dimensional state given by:

˜Vi = (V1, · · · , Vk)

where V1 to Vk are the collection of unconﬁrmed transactions (in the transaction pool).

We are abandoning the classical blockchain approach of having blocks produced by individual
nodes called ’miners,’ as it is susceptible to attacks by quantum computers. Otherwise, a miner

will have full freedom to create seemingly valid transactions and put them in a block. Instead, we
propose that blocks be created in a decentralized manner.

4.3 Consensus

Through the consensus mechanism, nodes reach a shared conclusion regarding the transaction en-

coded in the preliminary block. The consensus algorithms employed in blockchain technology can be
categorized into two basic types [32]. The ﬁrst is proof-based consensus algorithms, which we typi-

cally see in permissionless blockchains such as proof-of-work (PoW) employed in Bitcoin. The second
is vote-based consensus algorithms, which are most commonly used in permissioned blockchains and

may include the Byzantine fault tolerance algorithms.

Each round of the consensus consists of the following three steps - the proposing step, the voting

step, and the decision step.

7

Step 1 : The proposing Step After completing the Transaction Veriﬁcation step from the
Veriﬁcation phase, the proposing peer sends the preliminary block proposal to the voting peers. The
proposal is signed by the proposing peer being the sender and all voting peers as receivers.

Step 2 : The Voting Step

The proposal is sent to all voting peers. Voting peers enter the voting phase, during which they

exchange votes across the network. The proposal created by any proposing peer is not sent to all the
members of the network. Instead, using Quantum Random Number Generator, arbitrary r number

of peers are selected as voting peers for each round and for a particular proposing peer. This has two
advantages. First, if each proposing peer only selects a subset of nodes instead of all nodes, it makes

the Voting phase computationally less demanding and much faster. Second, randomly choosing a
subset of voting peers makes it secure against the proxy attack, where the network can be ﬂooded

with proxy nodes by untrusted peers.

Other voting protocols can also be used, but that is not the focus of this paper. This information-

theoretically secure protocol allows us to achieve consensus in the network connected by a quantum
channel, provided that the number of dishonest parties is less than some speciﬁed percentage. The

protocol can be adjusted by increasing r to tolerate more dishonest nodes.

Step 3 : The Decision Step

Votes for a block after the Voting phase are sent to the proposing peer. If any individual trans-

action is not conﬁrmed by any of the voting peers, then a wrong transaction message is broadcasted
to the network, which can be used to implement protocol like Two-phase commit protocol [33]. And

that preliminary block is dropped and the process is repeated.

4.4 Block Creation

Once the Voting step is completed with a positive result, the proposing peers proceed to create the

block and link it to their existing blockchain.
Step 1 : Block Creation & Linking

The ﬁnal blocks are created using the Generalized Quantum Gram-Schmidt orthogonalization.
Because each block are added one by one and in order of their timestamp, let us consider Charlie

already has the following blockchain in his memory :

˜W1, · · · , ˜Wi
−

1

1 represents the block elements of his blockchain.

where ˜W1 to ˜Wi
−

In order to add the ith block ˜Wi in this blockchain, he uses Generalized Gram-Schmidt or-
thogonalization to the preliminary block ˜Vi. As this Generalized Quantum Gram-Schmidt uses
dimensional lifting, additional dimensions, say m, will be added. There is no restriction on m but

it will provide the bond on the maximum size of the blockchain. For a given m the total number of
blocks that can be linked to the blockchain is bounded by 2m, which is exponentially large.
So after the orthogonalization the ﬁnal blockchain that Charlie has is of the form :

˜W1, · · · , ˜Wi
−

1, ˜Wi,

8

where the information of each block is encoded in a k = m+ n dimensional orthogonalized states and
are in order of their timestamp. Also note that since these blocks ˜Wj for 1 ≤ j ≤ i are orthogonal,
they constitutes the a basis set of a subspace of Cn+m.

Step 2 : Encryption

The blockchain that has been created so far is unencrypted and is in computational basis. Now

we will encrypt each block in the blockchain. The encryption scheme is applied to a part of each
block and is unique to each node in the network.

The information of any block is divided into two parts disclosed part and encrypted part. The
Disclosed part, which is the ﬁrst n component of the state encoding the blocks, consists of the

original information of the preliminary block which now encodes the conﬁrmed transactions. This
part remains in computational basis. After Generalized Quantum Gram-Schmidt additional m−

dimensions were added. The encryption scheme is applied to this part of the encoded block.

Encryption Scheme

1. Each member of the network selects a secret number θ ∈ [0, π].

2. Based on their number θ, they create a unitary basis change transformation Uθ.

3. On each of their block the member applies a unitary transformation I ⊗

n ⊗ U ⊗
θ

m

.

By applying encryption scheme the disclosed part of each block remains in computational basis,
0

but the encrypted second part is now encoded in |
. Because the θ is secret and unique to
each member of the network, no other member has access to the encrypted information of the block

θ
e
√2

1
i

i±

|

and is protected by the no-cloning theorem.

5 Forking Condition and their solution

There is also the possibility of two proposing peer mining the diﬀerent blocks at the same time,
resulting in a fork. There will then be ambiguity as to which block is considered the valid one.

The orthogonalization process and consensus used in our protocol make it very easy to tackle
major forking conditions that can arise in a blockchain. Consider the following two major forking

scenarios :

1. Forking due to Double Spending :

Deﬁnition 5.1. Double-spending [34] is a potential ﬂaw in a digital cash scheme in which a
single unit of cryptocurrency is spent simultaneously more than once. This results in a discrepancy

between the transaction record and the available currency. The main reason for double spending is
that classical digital currency can be easily replicated.

Double spending remains a risk in a classical blockchain. The likelihood of a secret block being
inserted into the quantum blockchain is very slim because it has to be accepted and veriﬁed by the

network of voting peers.

Consider Alice has one qCoin and tries to spend it twice in two distinct transactions. She could

attempt to do this by sending the same qCoin to two separate recipients. Both of these transactions

9

will subsequently be added to the pool of unconﬁrmed transactions, which already contain a large

number of unconﬁrmed transactions. As transactions (requests to send the qCoin) are broadcast,
they will arrive at each node at slightly diﬀerent times. If two transactions attempt to spend the

same qCoin, each node will consider the ﬁrst transaction it receives to be valid and the other invalid.
However, once diﬀerent nodes become mismatched, the validation of true balances becomes nearly

impossible. Such a problem can be resolved by the use of a consensus algorithm, which syncs the
various nodes.

Suppose two diﬀerent proposing peers pick both transactions at the same time and start creating
a block. Now suppose if both of them received the voting conﬁrmation at nearly same time. When

the block is conﬁrmed, both will wait for conﬁrmation on their transaction from the Voting Phase of
other proposing peers. Whichever transaction passes Voting Phase more number of proposing peers

will be validated, and another transaction will be pulled out from the network.

It is worth noting that the encrypted blocks of each peer contain the original information of the

transaction, which is publicly available to all other peers in the network. Other members can see
what transaction each peer has added by using appropriate surjective partial isometry, which in this

case is nothing but measuring the ﬁrst n component of the encrypted block in computational basis.

2. Forking due to broadcast :

As for the practicality we have assumed in our model not everyone hears the broadcast of every

transaction or at least not at the same time. So it might happen that one peer hears one transaction
before the next, while another hears the transaction in a diﬀerent order. This is diﬀerent from the

Double-Spending case as here same qCoin is not spent twice and all the transactions are valid.

Say if Charlie notices that the network has a diﬀerent chain, he then investigates which chain

the majority of individuals own. Assuming he was in sync upto the ﬁrst ith block, after which
transactions are in a diﬀerent order due to diﬀerence in broadcast receiving.

Say the blockchain of Charlie is ˜W1, · · · , ˜Wi, ˜Xi+1, · · · , ˜Xn and majority of the network holds the
chain ˜W1, · · · , ˜Wn. He can transform his chain to the majority chain using unitary operation locally
(after validating the authenticity of all the blocks at the tail). As both the chains are essentially
bases of the subspace, as previously stated, such a unitary transaction always exists.

So, as long as transactions are legitimate, no one is obligated to work in the same common chain

at all times since they can turn their chain into a network-wide unique chain at any moment.

6 Security Analysis

The quantum blockchain scheme presented here is secured by the non-democratic nature of the

Generalized Gram-Schmidt orthogonalization and quantum no-cloning theorem.

Recall when the preliminary block ˜Vi = (V1, · · · , Vk) is encoded using Generalized Gram-Schmidt
orthogonalization, we get the ﬁnal block ˜Wi. But if we consider a diﬀerent set of transaction for the
preliminary block then the ﬁnal orthogonalized state will be diﬀerent. I.e., if we consider preliminary
block ˜V ′i = (V ′1 , · · · , V ′k), where at least one for one of the transaction 1 ≤ j ≤ k Vj 6= V ′j then
˜W ′i 6= ˜Wi.

10

Further, if someone tries to alter any transaction from the ith block of Charlie. Then, it imme-

diately invalidates all the successive blocks as they were orthogonalized with respect to the ordered
set containing encoding of the ith block. This means not only the ﬁnal block ˜Wi is changed but all
the successive blocks i.e., ˜Wj for j ≥ i are also changed and hence invalidated. If some peer in the
network, say Charlie, has a diﬀerent transaction encoded in any of their block then by measuring

the disclosed part of the block in computational basis, all the other peers can know that there is an
invalid transaction in the local blockchain owned by Charlie.

In comparison to the standard blockchain protocol where only the hash of previous block is
encoded in the next block by the linearity of the chain. In our case in some sense the information

from all prior blocks that have appeared before the concerned block is encoded. This is because
altering any state immediately invalidates all the encoded blocks that came after it.

Furthermore, the quantum no-cloning theorem makes the proposed blockchain even more robust
than the standard classical blockchain. For a standard vote based consensus algorithm, the security

is provided by algorithms like Byzantine fault tolerance algorithms [35]. Hence if any hacker wants
to change a particular transaction, he needs to hack into at least one third of the network at the

same time. There is a possibility that such attacks are feasible and can be aided by using proxies.

But because of the encryption scheme that we are using in this blockchain protocol, it is not possible
for any hacker to hack into even a single node of the network.

Further as mentioned in Ref.

[31], in earlier models that were proposed, the database is still
somewhat vulnerable while it is locally stored. A possible attack scenario is when a malicious party

equipped with a quantum computer works oﬄine to forge the blockchain. To make the forged version
appear legitimate, it modiﬁes one of the previous transaction records to its proﬁt and runs a Grover

search [36] for a variant of other transactions within the same block such that its hash remains
the same. When the search is complete, it hacks into all or some network nodes and replaces the

legitimate database with the counterfeit version. But in this case, it is not possible for any hacker to
change any of the past transaction, because of the encrypted part of the block. Because the hacker

does not know the value of θ, which is unique for each member in the network and hence he does
not know the quantum states of the encrypted part. Therefore, the quantum no-cloning theorem

prevents such kind of attack. Even if he tries to alter the state to any arbitrary state, the block
encoding will be invalidated. Only the disclosed part of the block encoding is public. But changing

the disclosed part without proper change in the encrypted part will again make the block encoding

invalid and also all the block that follows.

To sum up, the security of the proposed quantum blockchain protocol is ensured by two prop-

erties. Firstly, quantum mechanics principles such as the quantum no-cloning theorem and the
Heisenberg uncertainty principle provide protection against counterfeiting. Secondly, it is secured

by the non-democratic nature of Generalized Quantum Gram-Schmidt orthogonalization. As a re-
sult, even under quantum computing attacks, the proposed quantum blockchain scheme is secure.

11

7 Quantum Token based on quantum blockchain

In this section, based on the proposed quantum blockchain, we present the inner workings of a
Quantum Token called qT oken, a quantum currency with no central authority.

Deﬁnition 7.1. [37] A quantum token is deﬁned by a pair of classical and quantum states
ti = (ci, |qii), where i is a serial number and ci is a transaction record made of classical bits and
transaction is done by using a token machine or passing token to another person.

These classical bits ci and quantum bits (qubits) |qii given to tokens should be in one-to-one
correspondence so that no one can duplicate. Namely, they obey ci 6= cj ⇐⇒ |qii 6= |qji for all
serial numbers i, j.

As is the case with the majority of quantum money schemes, the main idea is based on the

no-cloning theorem, which states that an unknown quantum state cannot be copied. So quantum
mechanics provides obvious advantages for quantum states to be regarded as a cryptocurrency. And

this new type of token oﬀers a further advantage over just quantum blockchain. For example, being
a physical quantity, there is no double-spending scenario.

When one uses the token machine, it implements our quantum blockchain scheme and each such
token machine acts as an automated peer. The orthogonalized state is encoded in the token and the
disclosed part of the block is used as the classical state ci for that token. Hence knowing disclosed
part provide information about the value associated with the token. It can also be used to indicate

the person to which token belongs.

Even though the disclosed part is visible to public as the serial number but the quantum state

encoded in the token is still encrypted. So whenever a token is inserted in a token machine, the
machine recognizes the serial number, i.e., disclosed classical part and retrieves the information

about the corresponding encrypted quantum state vector. Then it is measured in an appropriate
basis to validate its authenticity and completes the transaction.

The internal workings of the device are not accessible to the user. The security of this quantum

token is guaranteed by the same logic as our quantum blockchain. And hence it is secure against
counterfeiting. If the qT oken is not part of our quantum blockchain network, then the transaction

will be objected. The no-cloning theorem, in particular, ensures that quantum tokens cannot be
duplicated or altered, prohibiting counterfeiting.

This system is diﬃcult to hack because even when partial data is exposed or hacked from the
system. The Gram-Schmidt orthogonalization which is highly non-democratic, necessitates the

knowledge of all vectors before orthogonalizing the next vector. So a hacker needs to hack all of the
information in the system, starting with the ﬁrst transaction, which can be prevented easily.

This quantum token based on the quantum blockchain scheme has an advantage over other
quantum token models that work like quantum coins [38, 39] since it contains genuine information

about the transaction rather than arbitrary states. As a result, each coin has a distinct worth instead
of all coins having the same value. A cryptocurrency ATM based on quantum blockchain can also

be prepared by adding a passcode similar to a peer’s private key in the machine, which will prevent
any other peer from using any lost or stolen token without the private key. The most well-known

classical example of such an ATM at the moment is the Bitcoin ATM [40].

12

8 Conclusion

Recent advancements in quantum computing have piqued the curiosity of researchers and develop-
ers towards Distributed Ledger Technologies (DLTs) such as blockchain, which are vulnerable to

quantum computation attacks. In this paper, we have drawn a design to formulate a practically
realizable model of a fully Quantum Blockchain using generalized quantum Gram-Schmidt orthog-

onalization with dimensional lifting. It has reasonably low computational complexity. It is a public
and permissionless blockchain that requires quantum capabilities like quantum storage, quantum

state preparation and quantum transmission. The security of this model is ensured by the quantum

no-cloning theorem and the Gram-Schmidt construction we adopted. Each node carries their own
local copy of the quantum blockchain. However, the information is transparent and every action in

the ledger can be easily viewed and veriﬁed using just projection and measurement in computational
basis. Furthermore, the chain is generated as a result of the reliance of orthogonalized state of blocks

on the sequence of blocks preceding it. We have also examined a few typical forking scenarios such
as double-spending and forking due to broadcast and their countermeasures were provided for the

proposed scheme. Robustness and Security against potentially known quantum computing attacks
were also shown. Finally, using the same methodology, we have outlined a conceptual design for a

quantum token, whose security is assured by both the lack of knowledge and the ordering of the orig-
inal information. This quantum token works without a central authority and just requires quantum

storage.

This proposed quantum blockchain can be regarded as a conceptual design to provide scientiﬁc

development of a practical and fully quantum blockchain. Alternative variants can also be examined
by taking other consensus techniques into account. Because of the protocol’s simplicity, it is much

easier to put into practice in real-world circumstances, in comparison to other proposed methods in
the same direction. Finally, because of faster processing speed, lower resources, and safer transac-

tions, the quantum blockchain has an advantage over the classical blockchain. Therefore, it can be

used for a wide range of applications while maintaining transparency and integrity of transactions,
even under attack using quantum computers.

Acknowledgement

PKP acknowledges support from DST, India through Grant No.: DST/ICPS/QuEST/Theme-
1/2019/6.

References

[1]

Leslie Lamport, Robert Shostak, and Marshall Pease. “The Byzantine Generals Problem”.

In: ACM Transactions on Programming Languages and Systems (1982). doi:10.1145/357172.
357176.

[2]

Stuart Haber and W. Scott Stornetta. “How to Time-Stamp a Digital Document”. In: Journal

of Cryptology (1991), pp. 99–111. doi:10.1007/BF00196791.

13

[3] Dave Bayer, Stuart Haber, and W. Scott Stornetta. “Improving the Eﬃciency and Reliability

of Digital Time-Stamping”. In: Springer, 1993. doi:10.1007/978-1-4613-9323-8-24.

[4] Xiwei Xu, Ingo Weber, and Mark Staples. Architecture for blockchain applications. Springer,

2019.

[5]

Thomas McGhin et al. “Blockchain in healthcare applications: Research challenges and oppor-

tunities”. In: Journal of Network and Computer Applications (2019). doi:10.1016/j.jnca.
2019.02.027.

[6]

“Blockchain in government: Beneﬁts and implications of distributed ledger technol-

information sharing”.

ogy for
doi:https://doi.org/10.1016/j.giq.2017.09.007.

In: Government

Information Quarterly 34.3 (2017),

[7]

Jayanth Rama Varma. “Blockchain in Finance”.

In: Vikalpa 44.1 (2019). doi:10.

1177/0256090919839897.

[8] Michel Rauchs et al. Distributed Ledger Technology Systems: A Conceptual Framework. Tech.
rep. Rochester, NY: Social Science Research Network, 2018. doi:10.2139/ssrn.3230013.

[9]

Satoshi Nakamoto. “Bitcoin: A Peer-to-Peer Electronic Cash System”.

[10] Shuai Wang et al. “Blockchain-Enabled Smart Contracts: Architecture, Applications, and Fu-
ture Trends”. In: IEEE Transactions on Systems, Man, and Cybernetics: Systems 49 (2019).

doi:10.1109/TSMC.2019.2895123.

[11] Charles H. Bennett and Gilles Brassard. “Quantum Cryptography: Public Key Distribu-
tion and Coin Tossing”. In: Theoretical Computer Science 560 (1984). doi:10.1016/j.tcs.2014.

05.025.

[12] Artur K. Ekert. “Quantum cryptography based on Bell’s theorem”. In: Phys. Rev. Lett. 67

(1991). doi:10.1103/PhysRevLett.67.661.

[13] Jan Hendrik Witte. “The Blockchain: a gentle four page introduction”. In: arXiv:1612.06244

(2016).

[14] Bruce Schneier. Applied cryptography: protocols, algorithms, and source code in C. john wiley

& sons, 2007.

[15] Vasileios Mavroeidis et al. “The Impact of Quantum Computing on Present Cryptogra-

phy”. In: International Journal of Advanced Computer Science and Applications 9.3 (2018).
doi:10.14569/IJACSA.2018.090354.

[16] Peter W. Shor. “Polynomial-Time Algorithms

for Prime Factorization and Discrete

Loga- rithms on a Quantum Computer”. In: SIAM Journal on Computing 26 (1997).

doi:10.1137/S0097539795293172.

14

[17] Sarwar Sayeed and Hector Marco-Gisbert. “Assessing blockchain consensus and security mech-

anisms against the 51% attack”. In: Applied Sciences 9.9 (2019).

[18] Aleksey K Fedorov, Evgeniy O Kiktenko, and Alexander I Lvovsky. Quantum computers put

blockchain security at risk. 2018.

[19] Olaf Grote, Andreas Ahrens, and C eesar Benavente-Peces. “A Review of Post-quantum Cryp-

tography and Crypto-agility Strategies”. In: 2019 International Interdisciplinary PhD Work-
shop (IIPhDW). doi:10.1109/IIPHDW.2019.8755433.

[20] Tiago M Fern aandez-Carames and Paula Fraga-Lamas. “Towards post-quantum blockchain:

A review on blockchain cryptography resistant to quantum computing attacks”. In: IEEE
access 8 (2020).

[21] Yu-Long Gao et al. “A secure cryptocurrency scheme based on post-quantum blockchain”. In:

IEEE Access 6 (2018).

[22] Jonathan Jogenfors. “Quantum Bitcoin: An Anonymous, Distributed, and Secure Currency Se-
cured by the No-Cloning Theorem of Quantum Mechanics”. In: 2019 IEEE International Con-

ference on Blockchain and Cryptocurrency (ICBC). 2019. doi:10.1109/ BLOC.2019.8751473.

[23] Del Rajan and Matt Visser. “Quantum Blockchain Using Entanglement in Time”. In: (2019)

doi:10.3390/quantum1010002.

[24] Shreya Banerjee, Arghya Mukherjee, and Prasanta K. Panigrahi. “Quantum Blockchain

Using Weighted Hypergraph States”.
doi:10.1103/PhysRevResearch.2.013322.

In:

Physical Review Research 2

(2020).

[25] Steven J Leon, Ake Bj oorck, and Walter Gander. “Gram-Schmidt orthogonalization: 100

years and more”. In: Numerical Linear Algebra with Applications 20.3 (2013).

[26] Mario Mastriani. “New Version of Gram-Schmidt Process with Inverse for Signal and Image

Processing”. In: (2016) arXiv:1607.04759.

[27] Hans Havlicek and Karl Svozil. “Dimensional Lifting through the Generalized Gram–Schmidt

Process”. In: (2018) doi:10.3390/e20040284.

[28] Kaining Zhang et al. “Eﬃcient State Read-out for Quantum Machine Learning Algorithms”.

In: (2020). arXiv: 2004.06421.

[29] Shaun Miller. “Quantum Resource Counts for Operations Constructed from an Addition
Cir- cuit”. In: 2020 IEEE Computer Society Annual Symposium on VLSI (ISVLSI). 2020.

doi:10.1109/ISVLSI49217.2020.00035

[30] Xin Sun et al. “Towards Quantum-Secured Permissioned Blockchain: Signature, Consensus,

and Logic”. In: Entropy 21 (2019), p. 887. doi:10.3390/e21090887.

15

[31] E. O. Kiktenko et al. “Quantum-Secured Blockchain”.

In:

(2018) doi:10.1088/2058-

9565/aabc6b.

[32] Xin Sun et al. “Quantum-Enhanced Logic-Based Blockchain I: Quantum Honest-Success

Byzantine Agreement and Qulogicoin”. In: arXiv:1805.06768 (2018).

[33] Nadia Nouali, Anne Doucet, and Habiba Drias. “A two-phase commit protocol for mobile

wireless environment”. In: Proceedings of the 16th Australasian database conference. 2005.

[34] Usman W Chohan. “The double spending problem and cryptocurrencies”. In: Available at

SSRN 3090174 (2021).

[35] Kevin Driscoll et al. “Byzantine fault tolerance, from theory to reality”. In: International

Conference on Computer Safety, Reliability, and Security. Springer 2003.

[36] Lov K Grover. “A fast quantum mechanical algorithm for database search”. In: Proceedings

of the twenty-eighth annual ACM symposium on Theory of computing 1996.

[37] Kazuki Ikeda. “qBitcoin: A Peer-to-Peer Quantum Cash System”. In: arXiv:1708.04955

(2019). doi:10.1007/978-3-030-01174-1-58.

[38] Michele Mosca and Douglas Stebila. “Quantum Coins”. In: arXiv:0911.1295 (2009).

[39] Douglas Stebila, Supported Nserc, and Sun Microsystems. “Uncloneable Quantum Money”.

[40] Bitcoin ATM — Find Locations Near You — Bitcoin.Com. en.

16

