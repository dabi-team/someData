1
2
0
2

v
o
N
3
1

]

R
C
.
s
c
[

1
v
0
7
0
7
0
.
1
1
1
2
:
v
i
X
r
a

Sensitivity-Based Optimization for
Blockchain Selﬁsh Mining⋆

Jing-Yu Ma1[0000−0002−0396−1232] and Quan-Lin Li2

1 Bussiness School, Xuzhou University of Technology, Xuzhou 221018, China
mjy0501@126.com

2

School of Economics and Management, Beijing University of Technology,
Beijing 100124, China
liquanlin@tsinghua.edu.cn

Abstract. In this paper, we provide a novel dynamic decision method
of blockchain selﬁsh mining by applying the sensitivity-based optimiza-
tion theory. Our aim is to ﬁnd the optimal dynamic blockchain-pegged
policy of the dishonest mining pool. To study the selﬁsh mining attacks,
two mining pools is designed by means of diﬀerent competitive criteri-
ons, where the honest mining pool follows a two-block leading compet-
itive criterion, while the dishonest mining pool follows a modiﬁcation
of two-block leading competitive criterion through using a blockchain-
pegged policy. To ﬁnd the optimal blockchain-pegged policy, we set up
a policy-based continuous-time Markov process and analyze some key
factors. Based on this, we discuss monotonicity and optimality of the
long-run average proﬁt with respect to the blockchain-pegged reward and
prove the structure of the optimal blockchain-pegged policy. We hope the
methodology and results derived in this paper can shed light on the dy-
namic decision research on the selﬁsh mining attacks of blockchain selﬁsh
mining.

Keywords: Blockchain · Selﬁsh mining · Blockchain-pegged policy ·
Sensitivity-based optimization · Markov decision process.

1

Introduction

Blockchain is used to securely record a public shared ledger of Bitcoin pay-
ment transactions among Internet users in an open P2P network. Though the
security of blockchain is always regarded as the top priority, it is still threatened
by some selﬁsh mining attacks. In the PoW blockchain, the probability that an
individual miner can successfully mine a block becomes lower and lower, as the
number of joined miners increases. This greatly increases the mining risk of each
individual miner. In this situation, some miners willingly form a mining pool.
Blockchain selﬁsh mining leads to colluding miners in dishonest mining pools,

⋆

Supported by the National Natural Science Foundation of China under grant No.
71932002, and by the Beijing Social Science Foundation Research Base Project under
grant No. 19JDGLA004.

 
 
 
 
 
 
2

J.Y. Ma et al.

one of which can obtain a revenue larger than their fair share. The existence of
the selﬁsh mining not only means that it is unfair to solve PoW puzzles but also
is a severe ﬂaw in integrity of blockchain.

The existence of such selﬁsh mining attacks was ﬁrst proposed by Eyal and
Sirer [4], they set up a Markov chain to express the dynamic of the selﬁsh mining
attacks eﬃciently. After then, some researchers extended and generalized such
a similar method to discuss other attack strategies of blockchain. The newest
work is Li et al. [13], which provided a new theoretical framework of pyramid
Markov processes to solve some open and fundamental problems of blockchain
selﬁsh mining under a rigorously mathematical setting. G¨obel et al. [7], Javier
and Fralix [9] used two-dimensional Markov chain to study the selﬁsh mining.
Furthermore, some key research includes stubborn mining by Nayak et al. [16];
Ethereum by Niu and Feng [17]; multiple mining pools by Jain [8]; multi-stage
blockchain by Chang et al. [3]; no block reward by Carlsten et al. [2]; power
adjusting by Gao et al. [5].

In the study of blockchain selﬁsh mining, it is a key to develop eﬀective op-
timal methods and dynamic control techniques. However, little work has been
done on applying Markov decision processes (MDPs) to set up optimal dynamic
control policies for blockchain selﬁsh mining. In general, such a study is more
interesting, diﬃcult and challenging. Based on Eyal and Sirer [4], Sapirshtein et
al. [19] extended the underlying model for selﬁsh mining attacks, and provided
an algorithm to ﬁnd ǫ-optimal policies for attackers within the model through
MDPs. Furthermore, W¨ust [20] provided a quantitative framework based on
MDPs to analyse the security of diﬀerent PoW blockchain instances with var-
ious parameters against selﬁsh mining. Gervais et al. [6] extended the MDP of
Sapirshtein et al. [19] to determine optimal adversarial strategies for selﬁsh min-
ing. Recently, Zur et al. [24] presented a novel technique called ARR (Average
Reward Ratio) MDP to tighten the bound on the threshold for selﬁsh mining in
Ethereum.

The purpose of this paper is to apply the MDPs to set up an optimal pa-
rameterized policy (i.e., blockchain-pegged policy) for blockchain selﬁsh mining.
To do this, we ﬁrst apply the sensitivity-based optimization theory in the study
of blockchain selﬁsh mining, which is an eﬀective tool proposed for performance
optimization of Markov systems by Cao [1]. Li [11] and Li and Cao [10] fur-
ther extended and generalized such a method to a more general framework of
perturbed Markov processes. A key idea in the sensitivity-based optimization
theory is the performance diﬀerence equation that can quantify the performance
diﬀerence of a Markov system under any two diﬀerent policies. The performance
diﬀerence equation gives a straightforward perspective to study the relation of
the system performance between two diﬀerent policies, which provides more sen-
sitivity information. Thus, the sensitivity-based optimization theory has been
applied to performance optimization in many practical areas. For example, the
energy-eﬃcient data centers by Xia et al. [21] and Ma et al. [14, 15]; the in-
ventory rationing by Li et al. [12]; the multi-hop wireless networks by Xia and
Shihada [22] and the ﬁnance by Xia [23].

Sensitivity-Based Optimization for Blockchain Selﬁsh Mining

3

The main contributions of this paper are twofold. The ﬁrst one is to apply the
sensitivity-based optimization theory to study the blockchain selﬁsh mining for
the ﬁrst time, in which we design a modiﬁcation of two-block leading competitive
criterion for the dishonest mining pool. Diﬀerent from previous works in the lit-
erature for applying an ordinary MDP to against the selﬁsh mining attacks, we
propose and develop an easier and more convenient dynamic decision method
for the dishonest mining pool: the sensitivity-based optimization theory. Cru-
cially, this sensitivity-based optimization theory may open a new avenue to the
optimal blockchain-pegged policy of more general blockchain systems. The sec-
ond contribution of this paper is to characterize the optimal blockchain-pegged
policy of the dishonest mining pool. We analyze the monotonicity and optimal-
ity of the long-run average proﬁt with respect to the blockchain-pegged policies
under some restrained rewards. We obtain the structure of optimal blockchain-
pegged policy is related to the blockchain reward. Therefore, the results of this
paper give new insights on understanding not only competitive criterion design
of blockchain selﬁsh mining, but also applying the sensitivity-based optimiza-
tion theory to dynamic decision for the dishonest mining pool. We hope that the
methodology and results given in this paper can shed light on the study of more
general blockchain systems.

The remainder of this paper is organized as follows. In Section 2, we describe a
problem of blockchain selﬁsh mining with two diﬀerent mining pools. In Section
3, we establish a policy-based continuous-time Markov process and introduce
some key factors. In Section 4, we discuss the monotonicity and optimality of
the long-run average proﬁt with respect to the blockchain-pegged policy by the
sensitivity-based optimization theory. Finally, we give some concluding remarks
in Section 5.

2 Problem Description

In this section, we give a problem description of blockchain selﬁsh mining
with two diﬀerent mining pools. Also, we provide system structure, operational
mode and mathematical notations.

Mining pools: There are two diﬀerent mining pools: honest and dishonest

mining pools.

(a) The honest mining pool follows the Bitcoin protocol. If he mines a block,
he will broadcast to whole community immediately. To avoid the 51% attacks,
we assume the honest mining pool are majority in the blockchain system.

(b) The dishonest mining pool has the selﬁsh mining attacks. When the
dishonest mining pool mines a block, he can earn more unfair revenue. Such
revenue will attract some rational honest miners to jump into the dishonest
mining pool. We denote the eﬃciency-increased ratio of the dishonest mining
pool and the net jumping’s mining rate by τ and γ, respectively.

Selﬁsh mining processes: We assume that the blocks mined by the hon-
est and dishonest mining pools have formed two block branches forked a tree
root, and the growths of the two block branches are two Poisson processes with

4

J.Y. Ma et al.

e

α2 (1 + τ ), where

block-generating rates α1 and α2, respectively. In the honest mining pool, the
block-generating rate α1 is equal to the net mining rate, but the situation in the
dishonest mining pool is a bit diﬀerent. The block-generating rate for the dishon-
est mining pool is α2 =
α2 is regarded as the net mining rate
when all the dishonest miners become honest. Following the protocol can not
earn more rewards, the honest miners like to jump to the dishonest mining pool
with the net jumping rate γ, the real mining rates of the honest and dishonest
α2 + γ) (1 + τ ), respectively.
mining pools are given by λ1 = α1 − γ and λ2 = (
Note that mining costs of both mining pools contains two parts: (a) Power
consumption cost. Let cP be the power consumption price per unit of net mining
rate and per unit of time. It is easy to see that the power consumption costs per
unit of time with respect to the honest and dishonest mining pools are given by
cP (α1 − γ) and cP (
α2 + γ), respectively. (b) Administrative cost. Let cA be the
administrative price per unit of real mining rate and per unit of time. Then the
administrative costs per unit of time with respect to the honest and dishonest
mining pools are given by cA (α1 − γ) and cA (

α2 + γ) (1 + τ ), respectively.

e

e

e

Competitive criterions: In the blockchain selﬁsh mining, the honest and
dishonest mining pools compete ﬁercely in ﬁnding the nonces to generate the
blocks, and they publish the blocks to make two block branches forked at a
common tree root. For the two block branches, the longer block branch in the
forked structure is called a main chain, which or the part of which will be pegged
on the blockchain. Under the selﬁsh mining attacks, such two mining pools follow
the diﬀerent competitive criterions.

e

(a) A two-block leading competitive criterion for the honest mining pool. The
honest chain of blocks is taken as the main chain pegged on the blockchain, as
soon as the honest chain of blocks is two blocks ahead of the dishonest chain of
blocks.

(b) A modiﬁcation of two-block leading competitive criterion for the dishon-
est mining pool. Once the dishonest chain of blocks is two blocks ahead of the
honest chain of blocks, the dishonest chain of blocks can be taken as the main
chain. To get more reward, the dishonest mining pool may prefer to keep its
mined blocks secret, and continue to mine more blocks rather than broadcast all
the mined information.

Since the dishonest miners are minority, their mining power is limited, the
dishonest mining pool will not be extend inﬁnitely. We assume that once the dis-
honest main chain contains m blocks, its part n blocks (n ≤ m) must be pegged
on the blockchain immediately. In addition, the limitation of the dishonest main
chain leads to that the honest main chain containing at most n − 2 blocks due
to the two-block leading competitive criterion.

Blockchain-pegged processes: If the main chain is formed, then the min-
ing processes are terminated immediately. The honest main chain or the part
of the dishonest main chain is pegged on the blockchain, and the blockchain-
pegged times are i.i.d. and exponential with mean 1/µ. The mining pool of the
main chain can obtain an appropriate amount of reward (or compensation) from
two diﬀerent parts: A block reward rB by the blockchain system and an average

Sensitivity-Based Optimization for Blockchain Selﬁsh Mining

5

total transaction fee rF in the block. At the same time, all the blocks of the
other non-main chain become orphan and immediately return to the transaction
pool without any new fee. Note that no new blocks are generated during the
blockchain-pegged process of the main chain.

We assume that all the random variables deﬁned above are independent of

each other. Fig. 1 provides an intuitive understanding for the two cases.

Fig. 1. A blockchain selﬁsh mining with two diﬀerent mining pools.

3 Optimization Model Formulation

In this section, we establish an optimization problem to ﬁnd an optimal
blockchain-pegged policy for the dishonest mining pool. To do this, we set up a
policy-based continuous-time Markov process and introduce some key factors.

6

J.Y. Ma et al.

3.1 The states and policies

To study the blockchain-pegged policy of the blockchain selﬁsh mining with
two diﬀerent mining pools, we ﬁrst deﬁne both ‘states’ and ‘policies’ to express
such a stochastic dynamic.

Let N1(t) and N2(t) be the numbers of blocks mined by the honest and
dishonest mining pools at time t, respectively. Then (N1(t), N2(t)) is regarded as
the state of this system at time t. Obviously, all the cases of State (N1(t), N2(t))
form a state space as follows:

m+2

Ω =

Ωk,

k=0
[

where

Ω0= {(0, 0) , (0, 1) , . . . , (0, m)} ,
Ω1= {(1, 0) , (1, 1) , . . . , (1, m)} ,
Ωk= {(k, k − 2) , (k, k − 1) , . . . , (k, m)} , k = 2, 3, . . . , m + 2.

Actually, the blockchain-pegged policy of the dishonest mining pool can be
represented by blockchain-pegged probability p. The dishonest mining pool pegs
the main chain on the blockchain according to the probability p at the state
(n1, n2) for (n1, n2) ∈ Ω. From the problem description in Section 2, it is easy
to see that

a ∈ [0, 1] , n1 = 0, 1, . . . , m − 3, n2 = n1 + 2, n1 + 3, . . . , m − 1,

p =




1,
0,

n1 = 0, 1, . . . , m − 2, n2 = m,
otherwise.

(1)



It is obviously that the Markov process is controlled by the blockchain-pegged
policy (the probability p). Let all the possible probabilities p given in (1) compose
a policy space as follows:

P = {p : p ∈ [0, 1] , for (n1, n2) ∈ Ω} .

It is readily seen that State (0, 0) is a key state, which plays a key role in
setting up the Markov process of two block branches forked at the tree root. In
fact, State (0, 0) describes the tree root as the starting point of the fork attacks,
e.g., see Fig. 2. If the Markov process enters State (0, 0), then the fork attack
ends immediately, and the main chain is pegged on the blockchain.

Now, from Fig. 2, we provide an interpretation for the blockchain-pegged

probability p as follows:

(1) In Part A-1, i.e., n1 = 0, 1, . . . , m−3 and n2 = n1+2, n1+3, . . . , m−1, the
dishonest mining pool follows the modiﬁcation of two-block leading competitive
criterion and forms the dishonest main chain, then the probability p ∈ [0, 1].

(2) In Part A-2, i.e., n1 = 0, 1, . . . , m − 2 and n2 = m, for the limitation
of dishonest mining power, the dishonest main chain must be pegged on the

Sensitivity-Based Optimization for Blockchain Selﬁsh Mining

7

Fig. 2. The state transition relation of the Markov process.

8

J.Y. Ma et al.

blockchain, or there is a risk of getting no reward. It is easy to see that the
probability p is taken as 1.

(3) In the rest of Fig. 2, it is the competitive process of honest and dishonest
mining pools. Therefore, p = 0 for the dishonest main chain hasn’t formed. In
addition, the states in Part B mean that the honest main chain is formed.

Due to the modiﬁcation of two-block leading competitive criterion, the lim-
itation m of the dishonest mining pool must be more than 2, so that there
exist the blockchain-pegged policy for the dishonest mining pool. If m ≥ 5, the
inﬁnitesimal generator has a general expression (note that the special cases of
m = 3 and m = 4 are omitted here). In what follows, we assume m ≥ 5 for
convenience of calculation, but the analysis method is similar.

Let X(p) (t) = (N1(t), N2(t))(p) be the system state at time t under any
given policy p ∈ P. Then
is a policy-based continuous-time
Markov process on the state space Ω whose state transition relation is depicted
in Fig. 2. Obviously, such a Markov process is a special form of the pyramid
Markov process given in Li et al. [13]. Based on this, the inﬁnitesimal generator
of the Markov process

X(p) (t) : t ≥ 0

X(p) (t) : t ≥ 0

is given by

(cid:9)

(cid:8)

(cid:8)
(cid:9)
Q0,0 B0
Q1,0 Q1,1 B1
Q2,0
...
Qm+1,0
Qm+2,0

Q2,2 B2
. . .

. . .

Qm+1,m+1 Bm+1

Qm+2,m+2












Q(p) =












.

(2)

Here, we omit the details of the submatrices in the inﬁnitesimal generator Q(p).

3.2 The stationary probability vector

Based on some special properties of the inﬁnitesimal generator, we provide
the stationary probability vector for the policy-based continuous-time Markov
process

X(p) (t) : t ≥ 0

.

(cid:8)

For n1 = 0, 1, . . . , m − 3, n2 = n1 + 2, n1 + 3, . . . , m − 1 and 0 ≤ p < 1,
it is clear from the ﬁnite states that the policy-based continuous-time Markov
process Q(p) must be irreducible, aperiodic and positive recurrent.
We write the stationary probability vector of the Markov process

X(p) (t) : t ≥ 0

(cid:9)

as follows:

where

π(p)

0 =

π(p)

1 =

π(p)

k =

(cid:16)

(cid:16)

(cid:16)

π(p) =

0 , π(p)
π(p)

1 , . . . , π(p)

m+2

(cid:16)

(cid:8)

(cid:9)

(3)

,

(cid:17)

π(p) (0, 0) , π(p) (0, 1) , . . . , π(p) (0, m)
(cid:17)
π(p) (1, 0) , π(p) (1, 1) , . . . , π(p) (1, m)
(cid:17)

,

,

π(p) (k, k − 2) , π(p) (k, k − 1) , . . . , π(p) (k, m)
(cid:17)

, 2 ≤ k ≤ m + 2.

Sensitivity-Based Optimization for Blockchain Selﬁsh Mining

9

Let

D0 = 1,

Dk = Bk−1 (−Qk,k)

−1 , k = 1, 2, . . . , m + 2.

(4)

Then the following theorem provides an explicit expression for the stationary
probability vector π(p) by means of the system of linear equations: π(p)Q(p) = 0
and π(p)e = 1.
Theorem 1. The stationary probability vector π(p) of the Markov process Q(p)
is given by

k

k = π(p)
π(p)

0

Dl,

l=1
Y

is determined by the system of linear equations

where π(p)

0

(5)

m+2

k

π(p)
0

DlQk,0

k=0
X

l=0
Y
m+2

k

π(p)
0

Dle

k=0
X

l=0
Y

= 0,

= 1.

!

!

3.3 The reward function

A reward function of the dishonest mining pool with respect to both states
and policies is deﬁned as a proﬁt rate (i.e., the total revenues minus the total
costs per unit of time).

Let R = rB + rF and C = (

α + γ) [cP + cA (1 + τ )]. Then R and C denote
the blockchain-pegged reward and the mining cost for the dishonest mining pool,
respectively. According to Fig. 2, the reward function at State (N1 (t) , N2 (t))(p)
under the blockchain-pegged policy p is deﬁned as follows:

e

f (p) (n1, n2) =




n2Rµp − C, if 0 ≤ n1 ≤ m − 3 and n1 + 2 ≤ n2 ≤ m − 1,
if 0 ≤ n1 ≤ m − 2 and n2 = m,
mRµ − C,
otherwise.
−C,

We futher deﬁne a column vector f (p) composed of the elements f (p) (n1, n2) as



f (p) =

f (p)
0

T

,

f (p)
1

T

, . . . ,

(cid:18)(cid:16)

(cid:17)

(cid:16)

(cid:17)

f (p)
m+2
(cid:16)

T

T

,

(cid:19)

(cid:17)

(6)

f (p) (0, 0) , f (p) (0, 1) , . . . , f (p) (0, m)
(cid:17)
f (p) (1, 0) , f (p) (1, 1) , . . . , f (p) (1, m)
(cid:17)

T

T

,

,

f (p) (k, k − 2) , f (p) (k, k − 1) , . . . , f (p) (k, m)
(cid:17)

T

, k = 2, 3, . . . , m + 2.

where

f (p)
0 =

f (p)
1 =

f (p)
k =

(cid:16)

(cid:16)

(cid:16)

 
 
10

J.Y. Ma et al.

In the remainder of this section, the long-run average proﬁt of the dishonest

mining pool under a blockchain-pegged policy p is deﬁned as

ηp = lim

T →+∞

E

T

f (p)

1
T

(

0
Z

(N1 (t) , N2 (t))(p)
(cid:16)

(cid:17)

dt

)

where π(p) and f (p) are given by (5) and (6), respectively.

= π(p)f (p),

(7)

3.4 The performance potential

The sensitivity-based optimization theory has a fundamental quantity called

performance potential by Cao [1], which is deﬁned as

g(p) (n1, n2) = E

+∞

0
(cid:26) Z

f (p)
h

X(p) (t)
(cid:17)
(cid:16)

− ηp

dt

X(p) (0) = (n1, n2)

,

(8)

(cid:27)

where ηp is deﬁned in (7). For any blockchain-pegged policy p ∈ P, g(p) (n1, n2)
quantiﬁes the contribution of the initial State (n1, n2) to the long-run average
proﬁt of the dishonest mining pool. Here, g(p) (n1, n2) is also called the relative
value function or the bias in the traditional MDP theory, see, e.g., Puterman [18].
We further deﬁne a column vector g(p) as

i

(cid:12)
(cid:12)
(cid:12)
(cid:12)

g(p) =

g(p)
0

T

,

g(p)
1

T

, . . . ,

g(p)
m+2

(cid:18)(cid:16)

(cid:17)

(cid:16)

(cid:17)

(cid:16)

T

T

,

(cid:19)

(cid:17)

(9)

where

g(p)
0 =

g(p)
1 =

g(p)
k =

(cid:16)

(cid:16)

T

g(p) (0, 0) , g(p) (0, 1) , . . . , g(p) (0, m)
(cid:17)
T
g(p) (1, 0) , g(p) (1, 1) , . . . , g(p) (1, m)
(cid:17)

,

,

g(p) (k, k − 2) , g(p) (k, k − 1) , . . . , g(p) (k, m)
(cid:17)

(cid:16)

T

, k = 2, 3, . . . , m + 2.

A similar computation to that in Ma et al. [14, 15] is omitted here, we can

provide an expression for the vector g(p)

g(p) = Ra + b,

(10)

where a and b can be given by Q(p), π(p) and f (p). It is seen that all the entries
g(p) (n1, n2) in g(p) are the linear functions of R. Therefore, our objective is
to ﬁnd the optimal blockchain-pegged policy p∗ such that the long-run average
proﬁt of the dishonest mining pool ηp is maximize, that is,

p∗ = arg max

p∈P

{ηp} .

(11)

However, it is very challenging to analyze some interesting structure proper-
ties of the optimal blockchain-pegged policy p∗. In the remainder of this paper,
we will apply the sensitivity-based optimization theory to study such an optimal
problem.

Sensitivity-Based Optimization for Blockchain Selﬁsh Mining

11

4 Monotonicity and Optimality

In this section, we use the the sensitivity-based optimization theory to dis-
cuss monotonicity and optimality of the long-run average proﬁt of the dishonest
mining pool with respect to the blockchain-pegged policy. Based on this, we
obtain the optimal blockchain-pegged policy of the dishonest mining pool.

In an MDP, system policies will aﬀect the element values of inﬁnitesimal gen-
erator and reward function. That is, if the policy p changes, then the inﬁnites-
imal generator Q(p) and the reward function f (p) will have their corresponding
changes. To express such a change mathematically, we take two diﬀerent policies
p, p′ ∈ P, both of which correspond to their inﬁnitesimal generators Q(p) and
Q(p

′), and to their reward functions f (p) and f (p
The following lemma provides the performance diﬀerence equation for the
− ηp of the long-run average performances for any two blockchain-
diﬀerence ηp
pegged policies p, p′ ∈ P. Here, we only restate it without proof, while readers
may refer to Cao [1] and Ma et al. [14] for more details.

′).

′

Lemma 1. For any two blockchain-pegged policies p, p′ ∈ P, we have

f (p
(cid:16)

′

ηp

′)
− ηp = π(p

Q(p

′) − Q(p)

g(p)+

′) − f (p)

.

(12)

h(cid:16)

(cid:17)

(cid:17)i

Therefore, to ﬁnd the optimal blockchain-pegged policy p∗, we consider such
two blockchain-pegged policies p, p′ ∈ P. Suppose the blockchain-pegged pol-
icy is changed from p to p′, which corresponding the states (n1, n2) for n1 =
0, 1, . . . , m − 3 and n2 = n1 + 2, n1 + 3, . . . , m − 1, i.e., Part A-1 of Fig. 2.

Using Lemma 2, we examine the sensitivity of blockchain-pegged policy on
the long-run average proﬁt of the dishonest mining pool. Substituting (2) and
(6) into (12), we have

′

− ηp
ηp
′)
= π(p

h(cid:16)
= (p′ −p)

m−3

(cid:17)
(cid:16)
′) (n1, n2)
π(p

Q(p

′) − Q(p)
m−1

n1=0
X

n2=n1+2
X

g(p)+

f (p

′) − f (p)

(cid:17)i

µ−(µ−λ2) g(p) (n1, n2)−λ2g(p) (n1, n2+1)+n2Rµ
h

(13)

.

i

With the diﬀerence (13), we can easily obtain the following equation

m−3

m−1

=

π(p

′) (n1, n2)

△ηp
△p

n1=0
n2=n1+2
X
X
′
where △ηp = ηp

− ηp and △p = p′ − p. As p′ → p,

µ−(µ − λ2) g(p) (n1, n2)−λ2g(p) (n1, n2+1)+n2Rµ
h

,

i

(14)

= lim
△p→0

△p→0

dηp
dp

(cid:12)
(cid:12)
(cid:12)
(cid:12)

′

ηp

− ηp
△p

,

12

J.Y. Ma et al.

we derive the following derivative equation

m−3

m−1

π(p) (n1, n2)

dηp
dp

=

n1=0
X

n2=n1+2
X

µ−(µ − λ2) g(p) (n1, n2)−λ2g(p) (n1, n2 +1)+n2Rµ
h

.

i

(15)
According to (10), g(p) (n1, n2) and g(p) (n1, n2 + 1) are both linear functions
w.r.t. R. Thus, we denote g(p) (n1, n2) and g(p) (n1, n2 + 1) as an1,n2R + bn1,n2
and an1,n2+1R + bn1,n2+1, respectively. Substituting into (15), we have

dηp
dp

= aR + b,

(16)

where

m−3

m−1

a =

b =

π(p) (n1, n2) [(λ2 − µ) an1,n2 − λ2an1,n2+1 + n2µ] ,

n1=0
X
m−3

n2=n1+2
X
m−1

π(p) (n1, n2) [(λ2 − µ) bn1,n2 + λ2an1,n2+1bn1,n2+1 + µ] .

n2=n1+2
n1=0
X
X
It is clear that dηp
dp is also a linear function w.r.t. R, and depends only on the
current policy.

dηp
Remark 1 It is seen from (16) that we only need to know the sign of
dp , instead
of its precise value. The estimation accuracy of a sign is usually better than that
of a value. Therefore, this feature can help us ﬁnd the optimal blockchain-pegged
policy eﬀectively. Moreover, we see that we do not have to know some prior
system information. Thus, the complete system information is not required in
our approach and this is an advantage during the practical application.

Remark 2 The key idea of the sensitivity-based optimization theory is to utilize
the performance sensitivity information, such as the performance diﬀerence, to
conduct the optimization of stochastic systems. Therefore, even if the competi-
tion criteria become more complicated, it does not aﬀect the applicability of our
method.

The following theorems discuss monotonicity and optimality of the long-run
average proﬁt ηp of the dishonest mining pool with respect to the blockchain-
pegged policy p.

Theorem 2. If R > −b/a, then the long run average proﬁt ηp is strictly mono-
tone increasing with respect to each decision element p ∈ [0, 1], and the optimal
blockchain-pegged policy p∗ = 1.

This theorem follows directly (16). It is seen that the optimal blockchain-
pegged policy p∗ = 1 just corresponding to any State (n1, n1 + 2) in Part A-1
of Fig. 2, and the state transition has changed. In this case, the dishonest chain

Sensitivity-Based Optimization for Blockchain Selﬁsh Mining

13

of blocks is only two blocks ahead of the honest chain of blocks, the dishonest
mining pool should peg on the blockchain, also follows the two-block leading
competitive criterion.

Therefore, when the blockchain-pegged reward is higher with R > −b/a, it
is seen that the dishonest miners become honest, all miners will follow the PoW
protocol and broadcast to the whole community. In this case, the selﬁsh mining
attacks should be invalid.

Theorem 3. If 0 ≤ R < −b/a, then the long run average proﬁt ηp is strictly
monotone decreasing with respect to each decision element p ∈ [0, 1], and the
optimal blockchain-pegged policy p∗ = 0.

Simlar to Theorem 2, this theorem also follows directly (16). It is seen that the
optimal blockchain-pegged policy p∗ = 0 corresponding to any State (n1, n2) in
Part A-1 of Figure 2.

In the blockchain selﬁsh mining, if the dishonest mining pool makes decision
not to peg on the blockchain, i.e., p∗ = 0, the main chain is detained to continue
mining more blocks so that it is not broadcasted in the blockchain network, until
the number of blocks reaches m for the limited mining bound. In this case, the
dishonest mining pool prefer to obtain more mining proﬁt through winning on
mining more blocks, rather than peg on the blockchain prematurely.

Therefore, when the blockchain-pegged reward is lower with 0 ≤ R < −b/a,
it is seen that the dishonest mining pool follows the m-block leading competitive
criterion under the selﬁsh mining attacks.

Theorem 4. If R = −b/a, then the change of blockchain-pegged policy p no
longer improve the long-run average proﬁt ηp.

With Theorem 4, the dishonest miners don’t care about when the main chain
is pegged on the blockchain, thus the blockchain-pegged policy can be chosen
randomly in set [0, 1] .

5 Concluding Remarks

In this paper, we propose a novel dynamic decision method by applying the
sensitivity-based optimization theory to study the optimal blockchain-pegged
policy of blockchain selﬁsh mining with two diﬀerent mining pools.

We describe a more general blockchain selﬁsh mining with a modiﬁcation
of two-block leading competitive criterion, which is related to the blockchain-
pegged policies. To ﬁnd the optimal blockchain-pegged policy of the dishonest
mining pool, we analyze the monotonicity and optimality of the long-run aver-
age proﬁt with respect to the blockchain-pegged policy under some restrained
blockchain-pegged rewards. We prove the structure of optimal blockchain-pegged
policy with respect to the blockchain-pegged rewards. Diﬀerent from those pre-
vious works in the literature on applying the traditional MDP theory to the
blockchain selﬁsh mining, the sensitivity-based optimization theory used in this

14

J.Y. Ma et al.

paper is easier and more convenient in the optimal policy study of blockchain
selﬁsh mining.

Along such a research line of applying the sensitivity-based optimization
theory, there are a number of interesting directions for potential future research,
for example:

• Extending to the blockchain selﬁsh mining with multiple mining pools, for
example, a diﬀerent competitive criterion, no space limitation of the dishonest
pool and so on;

• analyzing non-Poisson inputs such as Markovian arrival processes (MAPs)

and/or non-exponential service times, e.g. the PH distributions;

• discussing the long-run average performance is inﬂuenced by some concave

or convex reward (or cost) functions; and

• studying individual or social optimization for the blockchain selﬁsh mining
from a perspective of combining game theory with the sensitivity-based opti-
mization.

References

1. Cao, X. R.: Stochastic learning and optimization—A sensitivity-based approach.

Springer, New York (2007)

2. Carlsten, M., Kalodner, H. A., Weinberg, S. M., et al.: On the instability of bitcoin
without the block reward. In: ACM SIGSAC Conference on Computer and Commu-
nications Security, pp. 154–167. Association for Computing Machinery, New York
(2016)

3. Chang, D., Hasan, M., Jain, P.: Spy based analysis of selﬁsh mining attack on

multi-stage blockchain. IACR Cryptol, ePrint: 2019/1327, pp. 1–34 (2019)

4. Eyal, I., Sirer, E. G.: Majority is not enough: Bitcoin mining is vulnerable. In:
International Conference on Financial Cryptography and Data Security, pp. 436–
454. Springer, Berlin (2014)

5. Gao, S., Li, Z., Peng, Z. et al.: Power adjusting and bribery racing: Novel mining
attacks in the bitcoin system. In: ACM SIGSAC Conference on Computer and
Communications Security, pp. 833–850. Association for Computing Machinery, New
York (2019)

6. Gervais, A., Karame, G. O., W¨ust, K., et al.: On the security and performance
of Proof of Work blockchains. In: ACM SIGSAC Conference on Computer and
Communications Security, pp. 3–16. Association for Computing Machinery, New
York (2016)

7. G¨obel, J., Keeler, H. P., Krzesinski, A. E., et al.: Bitcoin blockchain dynamics: The
selﬁsh-mine strategy in the presence of propagation delay. Performance Evaluation,
104, 23–41 (2016)

8. Jain, P.: Revenue generation strategy through selﬁsh mining focusing multiple min-
ing pools. Bachelor Thesis, Computer Science & Applied Mathematics, Indraprastha
Institute of Information Technology, India (2019)

9. Javier, K., Fralix, B.: A further study of some Markovian Bitcoin models from G¨obel

et al.. Stochastic Models, 36(2), 223–250 (2020)

10. Li, Q. L., Cao, J.: Two types of RG-factorizations of quasi-birth-and-death pro-
cesses and their applications to stochastic integral functionals. Stochastic Models,
20(3), 299–340 (2004)

Sensitivity-Based Optimization for Blockchain Selﬁsh Mining

15

11. Li, Q. L.: Constructive computation in stochastic models with applications: the

RG factorizations. Springer, Heidelberg (2010)

12. Li, Q. L., Li, Y. M., Ma, J. Y., et al.: A complete algebraic transformational
solution for the optimal dynamic policy in inventory rationing across two demand
classes. arXiv: 1908.09295v1 (2019)

13. Li, Q. L., Chang, Y. X., Wu, X., et al.: A new theoretical framework of pyramid
Markov processes for blockchain selﬁsh mining. Journal of Systems Science and
Systems Engineering, 1–45 (2021)

14. Ma, J. Y., Xia, L., Li, Q. L.: Optimal energy-eﬃcient policies for data centers
through Sensitivity-based optimization. Discrete Event Dynamic Systems, 29(4),
567–606 (2019)

15. Ma, J. Y., Li, Q. L., Xia, L.: Optimal asynchronous dynamic policies in energy-

eﬃcient data centers. arXiv: 1901.03371 (2019)

16. Nayak, K., Kumar, S., Miller A., et al.: Stubborn mining: Generalizing selﬁsh
mining and combining with an eclipse attack. In: IEEE European Symposium on
Security and Privacy, pp. 305–320. IEEE, Saarbruecken (2016)

17. Niu, J., Feng, C.: Selﬁsh mining in Ethereum. arXiv: 1901.04620 (2019)
18. Puterman, M. L.: Markov decision processes: discrete stochastic dynamic program-

ming. John Wiley & Sons, Hoboken (1994)

19. Sapirshtein, A., Sompolinsky, Y., Zohar, A.: Optimal selﬁsh mining strate gies in
Bitcoin. In: The 20th International Conference on Financial Cryptography and Data
Security, pp. 515–532. Springer, Berlin (2016)

20. W¨ust, K.: Security of blockchain technologies. Master Thesis, Department of Com-

puter Science, ETH Z¨urich, Switzerland (2016)

21. Xia, L., Zhang, Z. G., Li, Q. L.: A c/µ-rule for job assignment in heterogeneous

group-server queues. Production and Operations Management, 1–18 (2021)

22. Xia, L., Shihada, B.: A Jackson network model and threshold policy for joint
optimization of energy and delay in multi-hop wireless networks. European Journal
of Operational Research, 242(3), 778–787 (2015)

23. Xia, L.: Risk-sensitive Markov decision processes with combined metrics of mean
and variance. Production and Operations Management, 29(12): 2808–2827 (2020)
24. Zur, R. B., Eyal, I., Tamar, A.: Eﬃcient MDP analysis for selﬁsh-mining in
blockchains. In: The 2nd ACM Conference on Advances in Financial Technologies,
pp. 113–131. Association for Computing Machinery, New York (2020)

