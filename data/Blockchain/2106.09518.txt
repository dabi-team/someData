Multi-Layered Blockchain Governance Game

S

ONG- YOO  MANG

(A

K

) K

IM

ABSTRACT

The research designs a new integrated system for security enhancement of a
decentralized network by preventing damages from attackers particularly for
the  51  percent  attack.  The  concept  of  multiple  layered  design  based  on
Blockchain Governance Games frameworks could handle multiple number of
networks  analytically.  The  Multi-Layered  Blockchain  Governance  Game  is
an  innovative  analytical  model  to  find  the  best  strategies  for  executing  a
safety  operation  to  protect  whole  multiple  layered  network  systems  from
attackers. This research fully analyzes a complex network with the compact
mathematical  forms  and  theoretically  tractable  results  for  predicting  the
moment  of  a  safety  operation  execution  are  fully  obtained.  Additionally,
simulation  results  are  demonstrated  to  obtain  the  optimal  values  of
configuring parameters of a blockchain based security network. The Matlab
codes  for  the  simulations  are  publicly  available  to  help  those  whom  are
constructing an enhanced decentralized security network architecture through
this proposed integrated theoretical framework.

1. INTRODUCTION

Recently,  the  innovative  security  mechanisms  by  adapting  the  blockchain  and  the
game  theory  have  been  designed  by  the  author  [8,  9].  The  Blockchain  Governance
Game (BGG) which has firstly proposed by the author is the stochastic game model
with the fluctuation and the mixed strategy game for analyzing the network to provide
the decision making moment for taking preliminary security actions before attacks [8].
The model is targeted to prevent blockchain based attacks (i.e., the 51 percent attack)
and  keeps  the  network  decentralized.  The  Strategic  Alliance  for  Blockchain
Governance  Game  (SABGG)  is  designed  for  allying  the  nodes  instead  of  keeping
honest  nodes  by  a  defender.  In  the  business,  the  strategic  alliance  is  an  agreement
within two or more parties to pursue a set of agreed upon objectives needed and it has

emerged  to  solve  many  company  business  problems  [9].  The  governance  in  the
Blockchain is followed by the decision making parameter which are includes the prior
time just before an attacker catches more than half of the total nodes. We will not take
any  action  until  the  time  when  it  passes  the  first  passage  time  and  it  still  have  the
chance that  all  nodes are governed by an attacker even an attacker catches less than
the  half  of  nodes.  The  Multi-layer  Blockchain  Governance  Game  (MLBGG)  is  a
combined stochastic model with the sets of the BGG and SABGG models (see Figure
1). The layer 1 is a set of multiple BGG based networks and the other layer (i.e., layer
0) is single SABGG based network.

Figure 1. Multi-layer Blockchain Governance Game structure

This  multiple  layer  framework  makes  the  MLBGG  to  be  adapted  into  various
hierarchical  system  architectures  including  Edge-Fog  computing  [10],  hierarchical
network systems [11] and IoT-Server networks (see Section 3).

2. M

-L

ULTI  AYERED  LOCKCHAIN  OVERNANCE  AME

G

G

B

A  multi-layered  blockchain  governance  game  (MLBGG)  combines  a set  of multiple
BGG networks and single SABGG network which are hierarchically connected. Each
system in the layer 1 is exactly mapped with the BGG and the layer 0 is mapped with
the SABGG (see Figure 2).

Figure 2. BGG and SABGG mapping into MLBGG

l

2.1. Layer-1 Basic Stochastic Model
In  -th blockchain network of the layer 1 (i.e., the second layer), the antagonistic game
of two players (called "A" and "H") are introduced to describe the blockchain network
between a defender and an attacker. Both players compete to build the blocks either
for honest or false ones. Let (
 

be independent  -subalgebras in the  -th layer. Suppose:

 be probability space 

  
l

  

 

,




, 





















           









 














 a.s.

2.1



























 a.s.


         



-measurable marked Poisson processes (


2.2
 




 is a point mass
are 
-measurable and 


 and point independent marking. The game
at  ) with respective intensities 



 

in  this  case  is  a  stochastic  process 
  describing  the  evolution  of  a  conflict

between players A and H known to an observation process  The game is over when on
, the collateral  building blocks to player A exceeds more
the 
th observation epoch 
  of  each  blockchain  network  in  the  layer  1.  To
than  the  half  of  the  total  nodes 
further formalize the game, the


 exit index

 is introduced:

 and 




















             

 inf

           





















































            

 inf

           

2.15

2.16









 otherwise an honest  node generates the correct
Since,  an  attacker  is  win  at time 
blocks.  We  shall  be  targeting  the confined  game  in the view point of player A. The
first  passage  time 
  is  the  associated  exit  time  from  the  confined  game  and  the
formula (2.6) will be modified as





___
___


 
 












  











2.17




which the path of the game from 
of the model observed until 
is as follows:



 


, which gives an exact definition
The joint functional of the blockchain network model



 








            































       









2.18

















 



 











 








 




 



 


0
       



 










  indicates  the  total  number  of  nodes  (or  ledgers)  of  the  -th  blockchain
where 
network in the layer 1. This functional will represent the status of attackers and honest
nodes upon the exit time 
 The latter is of particular interest, we are interested in not
only  the  prediction  of  catching  up  the  blocks  by  attackers  but  also  one  observation
prior to this. The Theorem 1 (BGG-1) establishes in [8] and the first exceed model by
Dshahalow [12] has been adapted and its operators are defined as follows:

 




 
 
            
  
 
            
  
 
 
                      
 










           











 
     





 



2.19




where 

  





 is a sequence, with the inverse













 

 







lim  
 
 

 
 




 







       



(2.20)

otherwise.

Additionally, the new operators for dealing the matrix calculations are introduced. Let
us consider the matrix of a function set 

 as follows:






  


  



  

































(2.21)

(2.22)

and the matrix operations for 






 



 

















 











and

 are defined as follows:


 

 and 










     

     












     









 
    

 
    


 
    




















 







 













 


































  

  


  


















 





































where

             











 

 




 






















 

  





  




















(2.23)












(2.24)

From  (2.18)  and  (2.27),  we  can  find  the  PGFs  (probability  generating  functions)  of




 of each blockchain network in the layer 1.

exit index

) and the 

 (and 





 


 













           

















 



1
   


      











(2.34)

(2.35)

           

























             





(2.36)

The moment of making a decision 



 could be found from (2.4), (2.10) and (2.34):



 






















 

1
  








 











 










   










        



In a conventional BGG, the probability of bursting the  -th blockchain network 
is determined as follows:




  




















 
 










 




DoNothing






  














 


Action




(2.37)

(2.38)

 




(2.39)

  

where 
 is the number of reserved nodes which will be joined in the network.
It  is  noted  that  the  reserved  nodes  depend  on  the  availability  of  other  blockchain
networks  which  are  hooked  as  the  layer  0  (see  Figure  2).  Hence,  the  bursting
probability  when  the  reserved  nodes  are  realized  during  a  safety  mode  is  revised  as
follows:








 























 






 




















where

    




  









 

 












 




 








 






 
 







     







(2.40)

(2.41)

(2.42)

the 

2.2. Layer-0 Basic Stochastic Model
Blockchain network of the layer 0 (i.e., the second layer), the antagonistic game
In 
of  two  players  (called  "Corrupted"  and  "Genuine")  is  set  up  and  players  compete  to
,
build the blocks which are either genuine (or honest) or corrupted (or false). Let (
-
  be  independent 
 


subalgebras. Suppose:

  be  a  probability  space  and 

  


 


 



, 















 




 


         

 a.s.
















           


 








-measurable marked Poisson processes (
are 



) and position independent marking with respective intensities 
at 




-measurable and 









 a.s.



 is a point mass
. Before
 and 




(2.43)

(2.44)

           
 
           
           
 
 
 
 
  
 
 
  
 
specifying (2.43) and (2.44), a third-party observation point process [12] is equivalent
to the duration of the Proof-of-Work (or the Proof-of-Sake) completion [1, 8, 9]:






 



        




To further formalize the game, the

 exit indexes

 are defined as follows:



  inf
             

  inf
            


  inf
             
























 


 


 



 


(2.45)

(2.58)
(2.59)
(2.60)

 is the number of available nodes in the network system (i.e., 

where 
) by the
strategic alliance. Player G might be defeated at  without requesting the alliance but
at  2
  when  the  allied  genuine  nodes  are  supported.
player  G  can  only  be  defeated 
With  the  strategic  alliance,  player  C  could  only  win  the  game  at  time 
  otherwise
player G might beat  player C at 
 when it takes the place beforehand. The game is
  and  the 
over  at 
  can  be
min
   







 (i.e., player C wins first). We shall be targeting
analogously as 



 
 


the  confined  game  of  player C.  The  first  passage  time 
  is  the  associated  exit  time
from the confined game and the formula (2.51) is modified as

-subalgebra  of  the  process 

 

 




















___
 



___

 







  













(2.61)

  without  the  strategic
which  gives  an  exact  definition  of the model  observed  until 
alliance  action   The  joint  functional  of  the  Blockchain  network  model  with  the

strategic alliance is as follows:









 



  

 





        








 







 




 


 





 





 




 


  




(2.62)



 indicates the total number of nodes (or ledgers) in a Blockchain network.



where 
The moment of making a decision 



 could be found from (2.46), (2.54) and (2.77):



 











 






 

1
  

,1




















   












 




 




2.81




2.82




In the layer 0, the probability of bursting blockchain network 
follows:

 




 is determined as


  













 










 




DoNothing













 


















 


Action











2.83







where 
 is an overhead for protecting the layer 0 blockchain network on the top of the
networks  in  the  layer  1.  The  probability  of  bursting  a  Blockchain  network  (i.e.,  an

 
 
 
 
 
 
 
 
 
 
 
attacker  wins  the  game)  under  the  memoryless  properties  becomes  the  Poisson
compound process:

  










where




 







 







 




DoNothing











 















 













 


Action












 









 

















 
 

 










2.84





2.85





3. M

ULTI  AYERED  O

I T-S

L

ERVER ETWORK  ESIGN

 N

D

3.1. Multi-layered IoT-Server Network Architecture
The  networks  which  combines  IoT  networks  and  a  server  network  could  adapt  the
MLBGG. The set of IoT networks is one layer and one set with management servers is
the other layer. The BGG is adapted into IoT networks as the layer 1 and the SABGG
is applied into the network of management servers  (see Figure 3).

Figure 3. IoT-Server network architecture in the MLBGG

3.2. Stochastic Optimization
It  is  noted  that  the  cost  for  the  reserved  nodes  (i.e.,  "Action"  strategy  of  player  H)
should be smaller than the other strategy. Otherwise, player H does not have to spend
the  cost  of  the  governance  protection.  The  number  of  nodes  in  the  layer  0  for
 blockchain networks in the layer 1 depends on the cost function and the
protecting 
1
optimal portion for the blockchain governance 

 could be found as follows:



where

1 

inf

  





 










From (3.1), we have





   





1







 Total




3.1





(3.2)




NoA     





Act

                






































 











 


































 







  







 





3.3

3.4

3.5













We would like to design the enhanced blockchain network governance that can take
 
the action at the decision making moment 
. The governance in the blockchain is

followed by the decision making parameter.


           
1












Act

Total

 



















<















NoA











 















             
































 



  






  












      













 



  










  













where


 



















from (2.41),







  












  


    




  









 

 












 




 





From (3.2)  we have





 






 
 







     









1











Total












Act



 






















<















NoA











 
















3.6





3.7





(3.8)

(3.9)

For  each  blockchain  network  in  the  layer  1,  we  will  not  take any  action  for  the  -th
blockchain network until the time 
 and it still have the chance that all nodes are
governed  by  an  attacker  if  the  attacker  catches  more  than  the  half  of  nodes  at  
 (i.e.,
(i.e., 





. If the attacker catches the less than half of all nodes at 




, then the defender could take the action to avoid the attack at 





























In  the  layer  0,  the  acceptance  rate  of  a  strategic  alliance  in  a  blockchain  network  
depends  on  the  cost  function  and  the  optimal  portion  for  the  strategic  alliance  for
blockchain governance 

 (SABGG) could be found as follows:



 


 

inf

  








NoA


 
 




Act


 




where (at the moment 



),





NoA 




   



Act

 


  




 





    






 


   




 








 



  
  













 










3.10

3.11

3.12

3.13

















From  (3.9)  and  (3.10),  the  optimal  acceptance  rate  for  the  layer  0  is  determined  as
follows:



 

min


 









and the defender will not take any action until the time 
 and there is the chance
that all nodes are governed by the attacker if the attacker catches more than the half of
). If the attacker catches the less than half of all nodes
nodes at 

at 
), then the defender could take the action to avoid the attack
at 
             


 The total cost for developing the enhanced blockchain network is as follows:

 



 


 (i.e., 
 





 (i.e., 


 




 


























Act

 















<









NoA



 











Total



3.14

             

where



 







    

 












  






 



  






  







 















 



 




  









 

.


3.16





The optimal portion for the blockchain governance 

1

 could be found as follows:

Because  
  the probability mass could be found as follows:

      


 
 





 

inf

  





 





  from  (2.21)  is  the  probability  generating  function  of



3.17



   




lim
 















 
 

            





 


.

3.18





From (3.1) and (3.17), the optimal number of the reserved nodes for the layer 0 in the
layer 1 could be found as follows:

 



min


 









3.19





4. SIMULATION RESULTS
The safety mode is considered for protecting a network. Theoretically, the BGG based
network  takes  a  preliminary  action  to  avoid  a  51  percent  attack  by  an  attacker.  The
simulations in this section are targeted to find optimal values of the hyper parameters

3.15





including an optimal number of reserved nodes in the layer 1 and the acceptance rate
for the strategic alliance for the BGG based network in the layer 0.

4.1. Preliminaries
The safety mode is considered for protecting a multi-layered network. Theoretically, a
BGG  based  network  takes  a  preliminary  action  to  avoid  a  51  percent  attack  by  an
attacker. The action may actually happen before governing more than half of nodes by
an attacker or after. Two points of the Proof-Of-Work (POW) are considered as action
points: one is the moment that passes more than a half of nodes in the networks which
are more than 
 for the layer 0. The
other is one step prior to pass more than half nodes in both layers. The best situation
shall be that the safety mode is executed when an attacker takes more than a half of
nodes  but  the  network  is  protected  by  releasing  additional  backup  nodes.  But  it  is
noted that attempting to govern more than a half of nodes may be happened even after
exciting the safety mode.

 for the layer 1 and more than 

       







Figure 4. Operation of the safety mode of the layer 0 (above) and the layer 1 (bottom)

The simulation is processed by following strategies:

1) Two cases (one is with the BGG, the other is without the BGG) per each layer are
simulated.
2) Simulating the 51 percent attack to evaluate whether the nodes in the network are protected
by the BGG or not.
3) If the number of nodes governed by attack is more than a half at 
      ), the networks in the layer 1 are burst.
4) If the number of nodes governed by attack is more than a half at 
network of the layer 0 is burst.
5) The safety modes for each layer are randomly executed based on the Binomial random
variables.
6) The observation (i.e., the duration of the proof-of-work) are same within the same layer.

  

 


 (i.e., 

 (i.e., 

), the

 














4.2. Optimizing backup nodes for the layer 1
This simulation considers that 41 (i.e., 
) IoT networks (as the layer 1) are hooked
up  as  a  single  network  (as  the  layer  0)  and  each  IoT  network  has  up  to  40  backup

  

nodes  for  security  modes.  The  simulation  goes  1000  trials  and  find  the  optimal
number  of  backup  nodes  based  on  the  cost  efficiency.  It  has  been  executed  4  times
with 1000 trials and the optimal values vary (see Figure 5).

Figure 5. Simulation results to find the optimal value of backup nodes

It  shows  that  the  optimal  number  of  backup  nodes  are  ranged  between  35  and  45
nodes. The cost efficiency is around 46 percents which indicates 250 BGG based IoT
networks  is  46  percents  cheaper  than  atypical  IoT  networks  in  terms  of  overall
operating costs.

4.3. Acceptance rate of strategic alliance in the layer 0
In the layer 0, the acceptance rate is a vital matter because the layer 0 network adapts
the  Strategic  Alliance  for  Blockchain  Governance  Game  (SABGG)  [9].  This
simulation  robustly  finds  the  optimal  acceptance  rate  with  correspond  to  number  of
nodes in the layer 0.

Figure 6. Acceptance rate optimization in the layer 0

The simulation shows that around 46 percents acceptance rate will give the best effort
regardless of number of nodes in the layer 0 (see Figure 6).

5. REFERENCES

[1] Nakamoto, S.,  Bitcoin: A Peer-to-Peer Electronic Cash System (2009), retrieved from
http://www.bitcoin.org
[2] Z. Liu, N. C. Luong and et al., A Survey on Applications of Game Theory in Blockchain, [online]
https://arxiv.org/abs/1902.10865, 2019.
[3] Micali, S., Rabin, M. O., Vadhan, S. P. (1999). "Verifiable random functions". Proceedings of the
40th IEEE Symposium on Foundations of Computer Science. pp. 120?130.
[4] Goldberg, S., Reyzin, L. and et al., Verifiable Random Functions, IETF (2021), [online]
https://datatracker.ietf.org/doc/draft-irtf-cfrg-vrf/09/
[5] A Beikverdi and J. Song, Trend of centralization in Bitcoin's distributed network, Proceedings of
The 16th IEEE/ACIS International Conference, pp. 1-6, 2015.
[6] C. Decker and R. Wattenhofer, Information propagation in the Bitcoin network, IEEE P2P 2013
Proceedings, pp. 1-10, 2013.
[7] I. Eyal. and E. Sirer, Majority Is Not Enough: Bitcoin Mining Is Vulnerable. Lecture Notes in
Computer Science, 8437, Springer, Berlin, Germany, pp. 436-454, 2014.
[8] Kim, S.-K., Blockchain Governance Game, Computers & Industrial Engineering 136, pp. 373-380,
2019.
[9] Kim, S.-K. Strategic Alliance for Blockchain Governance Game. Probab. Eng. Inf. Sci. 2020, 1?17
[10] Kim, S.-K., Yeun, C. Y., and et al., New Blockchain Adoptation For Automotive Security by
Using Systematic Innovation, IEEE Proceedings of ITEC Asia-Pacific, 2019, pp. 1-4,
[11] Cisco Networking Academy, Connecting Networks Companion Guide, Cisco Press, Indianapolis,
IN, 2014.
[12] Dshalalow, J. H. and Ke, H. -J., Layers of noncooperative games, Nonlinear Analysis 71, pp. 283-
291, 2009.
[13] Dshalalow, J. H., First excess level process, Advances in Queueing, CRC Press, Boca Raton, FL,
pp 244-261, 1995.
[14] Kim, S.-K., Design of stochastic hitless?prediction router by using the first exceed level theory,
Mathematical methods in the applied sciences 28:12, 1481-1490, 2003.

