2
2
0
2

l
u
J

5

]

R
C
.
s
c
[

1
v
7
0
2
2
0
.
7
0
2
2
:
v
i
X
r
a

None Shall Pass: A blockchain-based federated
identity management system

Shlok Gilda1[0000−0002−9355−4381], Tanvi Jain1, and Aashish Dhalla1

Department of Computer and Information Science and Engineering,
University of Florida, Gainesville FL 32608, USA
{shlokgilda, tjain, aashishdhalla}@ufl.edu

Abstract. Authentication and authorization of a user’s identity are gen-
erally done by the service providers or identity providers. However, these
centralized systems limit the user’s control of their own identity and are
prone to massive data leaks due to their centralized nature. We propose
a blockchain-based identity management system to authenticate and au-
thorize users using attribute-based access control policies and privacy-
preserving algorithms and ﬁnally returning the control of a user’s identity
to the user.
Our proposed system would use a private blockchain, which would store
the re-certiﬁcation events and data access and authorization requests for
users’ identities in a secure, veriﬁable manner, thus ensuring the integrity
of the data. This paper suggests a mechanism to digitize documents such
as passports, driving licenses, electricity bills, etc., issued by any govern-
ment authority or other authority in an immutable and secure manner.
The data owners are responsible for authenticating and propagating the
users’ identities as and when needed using the OpenID Connect proto-
col to enable single sign-on. We use advanced cryptographic algorithms
to provide pseudonyms to the users, thus ensuring their privacy. These
algorithms also ensure the auditability of transactions as and when re-
quired. Our proposed system helps in mitigating some of the issues in
the recent privacy debates. The project ﬁnds its applications in citizen
transfers, inter-country service providence, banks, ownership transfer,
etc. The generic framework can also be extended to a consortium of
banks, hospitals, etc.

Keywords: Blockchain · Identity Management · Authorization · Au-
thentication

1

Introduction

Identity providers or service providers act as third-party operators that authen-
ticate and authorize the user’s identity in an identity management system, and
traditional systems are neither secure nor reliable. Password manager and single-
sign-on provider, OneLogin was hacked, and all customers served by its US data
center were aﬀected 1. Equifax, one of the most signiﬁcant credit bureaus in

1 https://www.zdnet.com/article/onelogin-hit-by-data-breached-exposing-sensitive-

customer-data/

 
 
 
 
 
 
2

S. Gilda et al.

the USA, was the victim of a data breach. Private records of approximately 148
million Americans were compromised in the breach, making it one of the largest
cybercrimes related to identity theft [7]. Even though these digital identities
are portable, they are not secure. Several industries suﬀer from the problems
of current identity management systems. The lack of interoperability between
government departments and government levels takes a toll in the form of exces-
sive bureaucracy. This, in turn, increases processes times and costs. In the ﬁeld
of education, there is a massive problem of fake academic certiﬁcates 2. During
the registration phase, user identity information is stored in a Central Database
(CD). As CD is compromised, user identity information can be leaked. Also, user
identity and passwords are stored on CD for the authentication process, which
could be compromised. Considering the ﬂaw in such cases, we aim to utilize
decentralized blockchain technology to authenticate and authorize users using
privacy-preserving attributes and return control of a user’s identity to the user.
Because of its decentralized structure, visibility, traceability, individual con-
trol of data in blockchain [33,47], it has been introduced in a variety of ap-
plications, including supply chain [16,38], healthcare [45,14], industrial inter-
net of things (IIoT) [46,43,10]. Miners pack the transaction into a package in
a blockchain system, and a consensus algorithm is used to verify the block
construction in a network. After verifying a transaction, a legitimate block is
added at the end of the longest chain of veriﬁed blocks—each node on the
blockchain stores a copy of the distributed ledger. Using the blockchain in the
identity management system solves traditional schemes that rely on trusted
third-party [18,31]. In a standard blockchain system, data is stored as plain
text on the network in some schemes [23,11,2], violating the privacy-preserving
requirement. Our proposed architecture supports attribute-based access control.
The blockchain holds re-certiﬁcation events of the users’ identities and the data
access and authorization request instead of storing the complete user identity
information. These requests stored on the blockchain provide auditability and
traceability of the transactions.

In the traditional identity management systems, users give away too much
information as the complete identity is shared with the service providers. We
want to allow the users to gain control over their identity by choosing what
attributes of their identities they want to share to access the services; this can
be achieved by attribute-based access control (ABAC) system [26]. ABAC is
globally recognized and allows or denies user requests based on any user and
object’s properties and environmental factors that may be more relevant to the
rule in question. Our proposed solution allows us to segregate diﬀerent personas
of a user’s identity and allow them to decide what attributes and which identities
they want to use. Attribute-based access control with OpenID Connect [39]
ensures that we can utilize existing technologies to ensure ﬁne-grained access
control.

We have designed a private blockchain-based system for identity manage-
ment. Our system suggests a mechanism that would digitize documents such

2 https://www.fox46.com/news/easy-to-get-fake-degrees-creating-real-problems/

None Shall Pass

3

as passports, driving licenses, electricity bills, etc., issued by any government
authority or other authority in an immutable and secure manner. Since these
authorities already have access to slivers of our identity, we will not be stor-
ing these identities on the blockchain. Data owners will still be the custodians
of user identity, but users will control how they want to use their identity at-
tributes. Putting personal information on the ledger jeopardizes users’ privacy
and violates current privacy laws (GDPR, right to be forgotten, etc.) A user’s
identiﬁcation traits are also dynamic. Thus, we would associate users’ identities
on the blockchain with the help of pseudo-anonymous identiﬁers. The data own-
ers are responsible for authenticating and propagating the users’ identities as
and when needed. An identity provider could communicate with the consortium
of authorities to validate the users’ claims regarding their identity.

Our contributions can be summarized as follows:

1. We propose a blockchain-based identity management system that
enables easy data authentication and data authorization using mul-
tiple data sources. Our proposed system emulates real-world con-
ditions where the data owner owns identities. The problem of mul-
tiple authentications required by diﬀerent service providers can be
eﬀectively reduced due to our design’s federated identity manage-
ment aspect.

2. A private blockchain ensures the integrity of data. Even though
we do not store the actual identities on the blockchain, we store
data access requests and identity attribute re-certiﬁcation events;
this improves the transparency and traceability of the system.
3. Our proposed system allows users to access diﬀerent personas of
their identity for availing online services based on speciﬁc use-
cases. We propose an attribute-based identity management scheme
that allows ﬁne-grained access control to identity with a trust score
associated with the identity.

4. To ensure user security and conﬁdentiality, we use an identity-
based conditional proxy re-encryption scheme that allows trans-
mission of encrypted identities across our system. We also use hi-
erarchical deterministic keys to improve user privacy and increase
the traceability and auditability of transactions.

The proposed system ﬁnds its applications in citizen transfers, inter-country
service providence, banks, ownership transfer, etc. The generic framework can
also be extended to a consortium of banks, hospitals, etc.

The paper is organized as follows. Section 2 summarizes related work. Sec-
tion 3 gives the overview of the proposed architecture and the various compo-
nents utilized in organizing and deﬁning the end-to-end process proposed in this
paper. In Section 4, we have described the tools and protocols used to draft
the system architecture that has been used to ensure the anonymity of users
and auditability of transactions. In Section 5, we have deﬁned the communica-
tion pattern between user identity providers, service providers, and data owners

4

S. Gilda et al.

residing on the blockchain and hence giving the complete system architecture in-
formation. The impacts of using this system architecture have been discussed in
Section 6. Section 7 concludes our work, presenting our limitations and proposing
future work.

2 Related Work

Earlier, all the user’s data was handled by organizations, as the conventional
identity management systems mostly depended on third parties. As third par-
ties handle the user’s data, there are chances of data being compromised or lost
if third parties crumble. Moreover, the organizations can share the data them-
selves for money or other reasons. The main challenge in centralized systems is
transferring users’ conﬁdential data from one application to another, as the cen-
tralized system is a closed system. There are various proposals given to rectify
this problem of centralization. One of the solutions proposed is to use federated
identity management [34,6,41,4]. In federated identity management, a user with
a single identity can access many applications with a single registration identity.
The problem with these schemes is that the user’s data is stored in plain text
and controlled by a single organization. Hence, more focus is put on the privacy
protection of users’ data.

The user-centric identity management [29,5] emphasizes more on the user-
oriented paradigm, which allows users to select the data they want to share and,
during the authentication process, can present the correct credentials. Laborade
et al. [28] provide a decentralized and user-centric identity management scheme;
in this case, the usability is increased as it eliminates user passwords and, with
regards to privacy and sovereignty, makes the identity more trustworthy. Singh
et al. [42] try to create a privacy-aware personal data storage (P-PDS) that can
take security mindful choices on third parties to get to demand following user in-
clinations. Nevertheless, the user-centric approach is a weak model. We can take
the example of Facebook Connect; here, Facebook is the sole identity provider.
Some blockchain identity management schemes are proposed for a decentralized
system. In other ﬁelds like the ﬁnancial ﬁeld, to not reveal the identity of the
parties involved in the transactions, decentralized coin-mixing-based methods
are suggested [36,37,40].

Similar work in this ﬁeld has been developed by Hardjono T. and Shrier
D. [24] where the researchers present the argument that the use of MIT OPAL
/Enigma for privacy-preserving data sharing oﬀers a better foundation for fu-
ture internet identities based on information about a user. In a similar technical
report by Hardonjo T., et al. [25] the authors address the issue of retaining user
anonymity within a permissioned blockchain. The paper presents the ChainAn-
chor architecture that adds identity and a privacy-preserving layer above the pri-
vate or the public blockchain. Goyal et al. [20] discuss the development of a new
cryptosystem called Key-Policy Attribute-Based Encryption (KP-ABE), where
ciphertexts are labeled with sets of attributes and private keys are associated
with access structures that control which ciphertexts a user can decrypt. Bethen-

None Shall Pass

5

court A. et al. [8] extended this work in their paper, which describes a system
wherein attributes are used to describe a user’s credentials. A party encrypting
data determines a policy for who can decrypt, unlike previous attribute-based
encryption systems that used attributes to describe the encrypted data and built
policies into users’ keys.

Early work by Paul Dunphy et al. [13] provides an early glimpse of the cur-
rent strengths and limitations of applying Distributed Ledger Technology (DLT)
to Identity Management (IDM) using Cameron’s evaluative framework. Xu et
al. [44] produced the idea of blockchain-based identity management and authen-
tication methods for mobile networks in which users create their SSI identity,
and each user will have private and public keys and the user has control over
their identity. Gao et al. [17] came up with a blockchain-based privacy protection
and identity authentication scheme by using diﬀerent algorithms like ECDSA en-
cryption and RSA encryption algorithms. We can reduce the storage as well by
using these algorithms. This proposal gives access to users to hash their iden-
tity and decide whether to store the identity information on a blockchain or
not. Faberet al. [15] gave a high-level architecture and conceptual design for
blockchain-based identity management. This proposal emphasizes giving more
control to users of their data. Rathor and Agarwal [1] used blockchain in a dif-
ferent area where they created three diﬀerent modules to give the information to
the people looking for a job with the data like experience and education, which
helps the organization to verify its employees’ records.[44,17,15,1] can rectify is-
sues like the privacy of user’s data and giving the control of user’s identity back
to a user. However, there is a problem with IP traceability for the IP applications
as they need to trace the IP in case of any disputes. Chuxin et al. [48] proposed a
blockchain-based privacy-preserving and traceability intellectual property (IP)
identity management scheme, in which the user’s real identity information is
processed into multiple shares using improved-Shamir secret sharing, that can
reduce storage overhead and achieve privacy protection. Here, user information
is stored on the blockchain, thus increasing storage and scalability overheads.

Most of the proposed solutions presented here either store the user’s en-
crypted data on the blockchain or do not account for the auditability of transac-
tions. Also, many of the proposed system architectures assume direct communi-
cation between the blockchain and the user. However, this would not be possible
in real-world scenarios, leading to remarkably high API response times. Our pro-
posed system builds on the existing federated authentication and authorization
systems. This paper proposes an architecture where original data owners are
still the custodian of the identity. The user can choose what identities can be
used to avail of online services. Our proposed architecture supports attribute-
based access control. The blockchain holds re-certiﬁcation events of the users’
identities and the data access and authorization request instead of storing the
complete user identity information. These requests stored on the blockchain pro-
vide auditability and traceability of the transactions. This would lead to lower
resistance to adopting the system than in prior work. The attribute-based iden-

6

S. Gilda et al.

tity management system leads to a crucial criterion to minimize identity theft
risk.

3 Preliminaries

The identity of an individual is composed of many facets. Every service provider
does not necessarily need to know every detail about a user’s identity. However,
when we use federated identity providers, we give away so much unnecessary
information about ourselves; this leads to massive privacy violations, as discussed
before.

The system architecture proposed in this paper has four main components:

1. Consortium of authorities on a private blockchain: This could be a
consortium of government authorities, credit bureaus, etc. It will also have
a querying API server (Communication Server) that will be very tightly
coupled to the consortium, allowing an identity provider to query and verify
the identity attributes. The communication server is also a node on the
blockchain, with some additional responsibilities, including communicating
with the outside world.

2. Identity provider (IDP): This module deals with user authentication and
authorization. It would use OpenID Connect Protocol (OIDC) to implement
Single-Sign-On functionality. It will essentially act as an OIDC provider.
3. Service provider (SP): This is essentially any third-part service that a

user would use. They act as OIDC relying parties.

4. User: Users can have diﬀerent privacy-preserving personas, and in our pro-
posed system, users have the liberty to control the persona that they want
to use to interact with IDP and hence giving control back to the user to
decide the facet they want to use.

The consortium of authorities and the individual would be data owners,
whereas the service providers would be data consumers. Our proposed system
allows individuals to gain back control of their digital identities. Our system
uses decentralized public identiﬁers and associated descriptor objects to asso-
ciate user identities on the blockchain. This would ensure that we do not store
any Personally Identiﬁable Information (PII) on the blockchain and always refer
to them using pseudo-identiﬁers. This is critical because a distributed ledger is
immutable, meaning anything added to the ledger cannot be changed or removed.
As a result, no personal information should ever be recorded in the ledger. The
identity providers would communicate with a server associated with the consor-
tium to get details about the credentials as provided by the user. The identity
provider would get user consent to transfer/verify speciﬁc attributes of the users’
identity to the service provider. We recommend using Open ID Connect since it
is the industry standard in federated authentication.

Figure 1 gives an overview of the proposed architecture. Netﬂix, Bank of
Timbuctoo, etc., are examples of service providers. ”Identity Management” is
the identity provider in charge of communicating with the consortiums. Our

None Shall Pass

7

Fig. 1. Architecture Overview

proposed system could have multiple consortiums of identity sources. This would
allow the user to control which identity consortium to use depending on the
speciﬁc use case. For example, a service provider like Netﬂix might not necessarily
need a high trustworthy source of information, so the user could use their social
media networks to provide details about speciﬁc identity attributes. However,
the Bank of Timbuctoo would need very high attestation that the users’ identity
attributes are correct. In this scenario, the user could verify their identity by
the government authorities consortium. This segregation of identity into various
slivers gives users more control over their own identity. Additionally, users can
decide the privacy-preserving persona they want to use to interact with the
identity provider. The blockchain layer stores the re-certiﬁcation events of the
identities and data access and authorization requests, providing auditability and
traceability of the transactions.

4 Tools and Protocols

This section discusses the diﬀerent tools and protocols to design our identity
management system. We suggest using Hyperledger Fabric, a permissioned-
blockchain for storing user transactions. A permissioned blockchain is not pub-
licly accessible and can be accessed only by users with permissions; this provides
an additional level of security over permissionless blockchain systems such as Bit-
coin or Ethereum, as they require an access control layer. Next, we talk about
OpenID Connect, an open and trusted authentication protocol that adds an
identity layer to OAuth 2.0. Clients can utilize OIDC to verify an end user’s
identity utilizing authorization server authentication. We look into the various

8

S. Gilda et al.

cryptographic protocols that our design would use to ensure conﬁdentiality of
data, transparency of transactions, and guarantee privacy, integrity, and non-
repudiation. Lastly, we will look at a mechanism for generating attribute trust
scores. An identity provider computes a time-varying conﬁdence score for an
asserted attribute and includes it in a security assertion returned to a service
provider.

4.1 Hyperledger Fabric

Hyperledger Fabric [3] is a distributed ledger platform that is open, tested, and
enterprise-ready. It is a permissioned ledger with advanced privacy restrictions,
which means that only the data you want to be shared is shared among the
”permissioned” (known) network participants. Fabric allows establishing decen-
tralized trust in a network of known participants rather than an open network of
anonymous participants. The transactions are conﬁdential and only shared with
parties that have permission to read those transactions. The transactions are
kept private and are only shared with parties who have been granted permission
to read them. A ledger resides within the scope of a channel; it can be shared
across the entire network (assuming all participants are using the same shared
channel) or it can be privatized to only include a limited number of participants.
As a result, Fabric is an ideal option for a decentralized but trusted ledger that
protects user privacy.

Hyperledger Fabric’s modular architecture divides the transaction process-
ing workﬂow into three stages: smart contracts, also known as chaincode, con-
sisting of the systems’ distributed logic processing and agreement, transaction
sequencing, and transaction validation and commitment. This separation has
many advantages:

– A reduced number of trust levels and veriﬁcation that keeps the network and

processing clutter-free.

– Improved network scalability.
– Better overall performance.

We suggest using Hyperledger Fabric to build a consortium of blockchains;
this would allow similar entities to be a part of the same consortium. For ex-
ample, a consortium of federal government entities (Passport Authority, DMV,
etc.) could be separate from a consortium of credit bureaus (Experian, Equifax,
etc.). Having separate consortiums of similar entities would allow these entities
to open private channels among them as and when needed, thus allowing more
accessible communication between them while allowing the user to be wary of
these communications.

4.2 Cryptographic Protocols

This section will discuss the various cryptographic protocols and primitives that
our proposed system would use. These protocols ensure data privacy and in-
tegrity while also guaranteeing non-repudiation of transactions. Our proposed

None Shall Pass

9

system uses Hierarchical Deterministic Wallet to generate user keys and Identity
Based Conditional Proxy Re-Encryption to securely store and transmit users’
personal information throughout the system.

Hierarchical Deterministic Wallet Bitcoin and its derivatives use a feature
known as Hierarchical Deterministic Wallets (HD Wallets) that causes your re-
ceiving address to change after being used; this is done by creating a “master”
key known as the Extended Private Key and Extended Public Key. This fea-
ture enhances the privacy as well as security of the users. The Extended Private
Key is the base from which all of your addresses’ private keys are derived. Al-
ternatively, in other words: the Extended Private Key is the master key to all
the Private Keys belonging to an account. Bitcoin Improvement Protocol 32
(BIP-32) 3 describes the speciﬁcation intended to set a standard for determin-
istic wallets. BIP-32 uses elliptic curve cryptography using the ﬁeld and curve
parameters deﬁned by secp256k1 4.

Figure 2 showcases how BIP-32 generates keys hierarchically. In our proposed
system architecture, the user would hold the master key. The user would then
distribute the derived keys as and when needed to relevant authorities/entities in
the system. The user would generate two master keys in this entire process: one
of them would be associated with all communications between the data owners.
In contrast, the other would be associated with authentication with the identity
provider. We describe the entire key generation and key distribution process in
Section 4.5.

Since the user would have access to the master key, they would be able
to monitor all transactions (in this case, data access authorization approvals).
In contrast, the authorities would only be able to monitor transactions from
the keys they have been given access. The changing keys have two signiﬁcant
advantages: increased privacy and increased security. By having multiple keys,
the user would be able to segregate their identities on the diﬀerent consortiums
of blockchains, enhancing user privacy. Also, since the user has diﬀerent keys
across diﬀerent data owners, an adversary would need to get multiple private
keys to access all the diﬀerent identities of the user.

Identity Based Conditional Proxy Re-Encryption Identity-based condi-
tional proxy re-encryption (IBCPRE) is an extension of proxy re-encryption.
It provides conditional proxy encryption and extends the proxy re-encryption
concept to the identity-based public-key cryptography setup. By using condi-
tional proxy re-encryption, a proxy can re-encrypt a ciphertext using an IBCPRE
scheme. However, if a condition is given to the ciphertext and the re-encryption
is satisﬁed, the ciphertext will be well-formed for decryption; this permits ﬁne-
grained proxy re-encryption and can be helpful for applications such as safe
sharing via encrypted storage.

3 https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki
4 http://www.secg.org/sec2-v2.pdf

10

S. Gilda et al.

Fig. 2. Key Generation Scheme [27]

IBCPRE allows users to choose recipients of a message even after encrypting
their messages and uploading them to the server. IBCPRE support end-to-end
as well as one-to-many encryption. The IBCPRE’s conditional ”tag” allows ﬁne-
grained access to encrypted messages. The data owner can control the exact
set of encrypted communications they want to share with any particular system
entity by assigning diﬀerent tag values to distinct encrypted messages.

Liang et al. [30] was the ﬁrst to propose a single-hop Identity Based Condi-
tional Proxy Re-Encryption that was proved secure against adaptive conditions
and adaptive identity chosen-ciphertext attacks in the standard model. We adopt
this scheme for our proposed system and explain it further in Section 4.5.

4.3 Trust Score

Gokhale et al. [19] suggested the use of a time-varying trust score for an asserted
attribute value. The identity provider would compute a time-varying conﬁdence
score for an asserted identity attribute and include it in a security assertion
returned to a service provider. The conﬁdence score typically ”deteriorates” (i.e.,
decreases over time). One or more qualifying attribute veriﬁcation events, on the
other hand, may aﬀect the degree to which the score deteriorates.

In our proposed system, we aim to use the identity attribute scoring frame-
work [19] to assign trust scores to diﬀerent attributes. The identity provider
would get the veriﬁed attribute(s) from the data owner(s). Based on the type of
data owners and attributes, the identity provider would generate a trust score
and return the said trust score in a security assertion to the service provider.
If multiple data owners verify the identity attribute, the trust score could be
higher. The identity provider could also proﬁle the service providers and deter-
mine the threshold values for an attributes’ trust score that the service provider
deems acceptable. Based on this proﬁling, the identity provider could recom-
mend data sources that might be useful for achieving the threshold for a speciﬁc
attribute. The trust score generation methodology could be proprietary to an
identity provider, thus incentivizing multiple identity providers to be a part of
the system.

None Shall Pass

11

We explain the necessity of a trust score with a few speciﬁc identity at-

tributes:

– Name: Governmental data sources would be a more reliable source of in-
formation for truthful data about the attribute “Name” rather than a social
media platform or a delivery service platform. However, suppose the service
provider does not need a high trust score for this attribute. In that case, the
user could choose social media platforms as a source of data information to
satisfy the lower threshold of the service provider.

– Address: A delivery service provider might have more recent addresses as
compared to a government document. Thus, sourcing “address” from a deliv-
ery service provider might result in a higher trust score than a governmental
data agency. However, a recent re-certiﬁcation of this attribute with a gov-
ernmental agency might result in a better trust score. Thus, it is up to the
user to choose relevant data owners to verify their identities based on the
speciﬁc requirements of the service provider.

Our proposed system allows service providers to be more legally compliant.
For example, Facebook requires that its users be at least 13 years of age to be
able to use their platform 5; however, they currently have no way of verifying
this. Our system would let them verify the veracity of the “minimum age” claim
without compromising the user’s identity.

4.4 OpenID Connect Protocol

OpenID Connect (OIDC) is an open authentication protocol that adds an iden-
tity layer to OAuth 2.0 by proﬁling and extending it [39]. Clients can utilize
OIDC to verify an end user’s identity utilizing authorization server authenti-
cation. By layering OIDC on top of OAuth 2.0, a single framework is created
that promises to protect APIs, mobile native apps, and browser apps in a single,
uniﬁed design.

Our system would use OpenID Connect for user authentication and identity
attribute authorization. OIDC allows service providers to verify the end-user’s
identity based on the authentication performed by an identity provider and ob-
tain basic proﬁle information about the end-user in an interoperable and REST-
like manner. The identity provider obtains the user’s basic proﬁle information
from the data owners. After obtaining this information, it calculates the trust
scores for the requested identity attributes and returns those values with the
identity assertions.

4.5 Key Generation

This section describes the various keys and secrets being used throughout our
system. We will look into the key generation, ownership, and distribution process.

5 https://about.fb.com/news/2021/07/age-veriﬁcation/

12

S. Gilda et al.

We assume that the communication channels between all the entities are secure.
We also assume that the user knows the public keys required for IBCPRE of the
identity provider and data owners.

Hierarchical Deterministic Keys The user uses the general idea mentioned
in BIP-32 to generate two private keys: “Data Access Key” and “Data Autho-
rization Key.” The Data Access Key is associated with the data owners, and the
Data Authorization Key is associated with the identity provider. Having two
separate master keys, Data Access Key and Data Authorization Key, allows us
to keep the data owners’ information separate from the identity providers. The
user generates these two keys and keeps them private and safe; leaking a private
key would mean a loss of privacy. A “Child Key Derivation Function” computes
a child key given a parent key and an index i. Modifying i, we can get new child
keys 6.

The user could generate child private keys for individual data sources from
the Data Access Key. These are referred to as “Data Owner Keys”. These data
owner keys are then registered with every data owner, either during the creation
of the identity or later. The data owners have access to the keys they have
and any subsequent keys that the data owners derive from their keys. The data
owners can derive further keys, which can then be used to associate transactions
about a user on the blockchain. That ensures some level of anonymity on the
blockchain. Since these data owner keys are derived from the Data Access Key,
the user would have access to all subsequent keys that the data owner derives
further. Figure 3 explains the key generation process of the Data Access Key.
Our system allows for multiple identity providers. We can derive multiple
“Identity Owner Keys” from the Data Authorization Key. These identity owner
keys can be used to signup with identity providers and be later used for au-
thentication with the identity provider. Figure 4 depicts the key generation and
ownership process. Section 5.4 explains the key distribution process.

There are a few shortcomings in the original BIP-32 protocol. Given the
master public key and any child private key, an attacker can easily extract the
master private key. To tackle this, Gutoski and Stebila [22] came up with a better
version of HD wallets that is not vulnerable. Their proposed system can handle
the leakage of up to m private keys with a master public key size of O(m). In
order to improve the security of BIP-32, Das et al. [12] came up with a minor
modiﬁcation in the key derivation process of ECDSA. They suggested switching
re-randomization in BIP-32 from additive to multiplicative to achieve tighter
security without additional costs. They observed that BIP-32 gives roughly 92
bits of security based on their theorems and a conservative choice of parameters;
however, the multiplicative version of ECDSA gives 114 bits of security with a
similarly eﬃcient scheme. Thus, we recommend using the multiplicative version
instead of the additive version for our system.

6 See footnote 3.

None Shall Pass

13

Fig. 3. Key Generation Process for Data Access Key

Fig. 4. Key Generation Process for Data Authorization Key

Identity Based Conditional Proxy Re-Encryption We propose to use
Liang et al. [30] identity-based proxy re-encryption scheme. Their proposed

Data Access Key(Owned by User) Data Owner Key 1(Owned by Data Owner 1) Data Owner Key 2(Owned by Data Owner 2)Blockchain Transaction Key 1Blockchain Transaction Key 2 Data Authorization Key(Owned by User) Identity Provider Key 1(Owned by Identity Provider 1) Identity Provider Key 2 (Owned by Identity Provider 2)Login Key 2Login Key 1 14

S. Gilda et al.

scheme is collusion resistant, secure against chosen-ciphertext attacks, and sup-
ports conditional re-encryption. By associating a condition with the encryption
key, a sender can enforce ﬁne-grained re-encryption over their initial ciphertexts.
Only the ciphertexts that meet the speciﬁed condition can be re-encrypted by
the proxy holding the corresponding encryption key.

The user would generate a public key and master private key initially. The
user would use the public key of the identity provider and the identity provider’s
identity to encrypt any data that they would want to store/transmit via the
identity provider. Whenever the user wants to share their identities with the
data owners for data veriﬁcation, they would generate a re-encryption key based
on the public key of the data owner and the user’s identity. This ensures that
the identity provider cannot access the identities when transmitting data via
the identity provider. The data owners can decrypt the identities using their
private keys. Liang et al. [30] explains the process of key generation and provide
a security analysis for their proposed scheme. Section 5.3 explains the usage of
IBCPRE while the user tries to log in to the service provider.

5 System Architecture

This section explains the communication patterns between the user, identity
provider, service provider, and the data owners residing on the blockchain. Our
system uses single-sign-on facilities to gain access to online services. We explain
the proposed scheme in four phases:

1. User registration with data owners.
2. User interaction with identity provider(s).

(a) User registration with identity provider.
(b) User login with identity provider.

3. User login with service provider.
4. User identity registration with identity provider.

We assume that the user’s client application has already generated the “Data

Access Key” and “Data Authorization Key” before proceeding further.

5.1 User registration with data owners

This is the ﬁrst stage of the process. In this step, the user registers their identity
keys with the data owner(s) oﬄine. The user uses their “Data Access Key” to
derive individual data owner keys, as can be seen from Fig. 3. The user’s client
application keeps these details safe. These data owner keys are then registered
with respective data owner(s), either during the identity creation or later. These
data owner keys will serve as the pseudo-identiﬁer for the individual on the
blockchain. This would prevent other consortium members on the blockchain
from co-relating these identiﬁers with the user since every data owner will have
their separate data owner key.

None Shall Pass

15

5.2 User interaction with identity provider(s)

This section describes user interaction with the identity provider. We explain
the user registration and sign-in process.

User registration with identity provider We propose a multi-factor authen-
tication system for our system design. Figure 5 details the user signup process
with an identity provider. The user generates an identity provider key from the
”Data Authorization Key,” as shown in Fig. 4. The user chooses a username,
password, and the recently generated identity provider key as signup parameters
with the identity provider. The user also signs up with a TOTP-based [32] 2FA
(Two-factor authentication) authenticator app for added security.

We recommend using multi-factor authentication methods over TOTP-based
authentication methods since there have been multiple incidents where the latter
has proved to be not secure enough 7 8. We also recommend following NIST’s
password policy guidelines [9].

Fig. 5. User Registration with IDP

User login with identity provider This section describes the user login
process with the identity provider(s). Figure 6 can be used as a reference to
understand this process. There are multiple steps in this phase:

1. The user enters the username and password. If veriﬁed, it moves on to the
TOTP-based 2FA screen. If this fails, the user is asked to re-enter the details.
2. Once username and password are veriﬁed, the user veriﬁes the 2FA code. If
approved, we move to the next step; else, we redirect the user to the failed
login state.

3. Once the 2FA code is veriﬁed, the user generates a login key from the iden-
tity provider key of the current identity provider key that the user holds.
The user generates a login key by modifying the index i in the hierarchical
deterministic key generation process. The user sends the login key with the
index i to the identity provider.

4. The identity provider has the identity provider key of the user. It fetches
that and uses the input index i received by the user. If the generated key

7 https://www.theverge.com/2019/8/14/20805194/suprema-biostar-2-security-

system-hack-breach-biometric-info-personal-data
8 https://www.varonis.com/blog/box-mfa-bypass-totp

UserIdentity ProviderUsername, Password, IDP Key 116

S. Gilda et al.

matches the login key that the identity provider got as input from the user,
we can safely say that the user authentication was successful.

This multi-step authentication process adds friction to the sign-in process but
ensures security.

Fig. 6. User Login with IDP

5.3 User login with service provider

Our system uses OpenID Connect for federated authentication and authoriza-
tion. All communication between the identity provider and the consortium of
data owners is through the communication server of the consortium. Figure 7
can be used as a reference.

1. A user can select the identity provider when they try to log in to a service
provider. A user attempting to log in to a service using some IDP is redirected
to that IDP with the required claims whenever they wish to use it.

UserTOTP-based 2FAIdentity ProviderUsername, PasswordVerifiedVerified 2FALogin Key, Index "i"Verified Login KeyNone Shall Pass

17

2. The user logs in to the IDP. The user can select speciﬁc data owners that
they want to use to certify certain attributes of their identity. The user can
choose relevant data owners based on the service they are trying to access
and the required attribute claims. If, for example, a user needs their date
of birth for their social security number, they can use their passport as the
identity source since it is a better source of truth for the said attribute.
However, if a service like an email provider needs a user’s name, users can
use their social media identities to get those attribute claims. Choosing the
data owners depends on the kinds of service the user is trying to avail.

3. The user uses their secret IBCPRE key to encrypt the data identity and the
data owner key. Next, they send these encrypted documents to the identity
provider. We need to note that even the identity provider will not be able
to access these documents at this stage since they are encrypted.

4. The user uses the data owner’s public key to generate a re-encryption key
to re-encrypt the data owner key and identity. These encrypted objects are
sent to the data owners, where they decrypt these objects using their secret
IBCPRE keys and the list of required attributes.

5. The data owner decrypts the objects, fetches the identities stored on their
systems against the received data owner key and veriﬁes information on their
system with the input identity document from the user. If these documents
match, the data owner sends a green signal to the identity provider about
the veracity of the attributes. It also sends information about the latest
re-certiﬁcation event for the said attribute from the blockchain.

6. The data owner adds a new transaction on the blockchain detailing the data
access request. The blockchain transaction holds timing information about
the data access request, identity provider details, service provider details, and
the requested attribute details. The data owner generates a new blockchain
transaction key for the user using the data owner key of the user for the
above transaction.

7. Once the identity provider receives the green signal from the data owners,
the user generates a re-encryption key for the identity provider. The identity
provider can decrypt the already stored documents. Since we are only gen-
erating re-encryption keys (IBCPRE) for the data owner and the identity
provider, the documents sent to the data owner are the same as being used
by the identity provider.

8. Based on the decrypted documents, the identity provider can calculate a
trust score for the required attributes. The identity provider sends over the
asserted attribute values and the trust score for the said attribute back to
the service provider.

9. If the trust score is greater than the threshold set by the service provider for
a threshold, the user is granted access to the service. Else, they will have to
choose a diﬀerent data owner.

18

S. Gilda et al.

Fig. 7. User Login with Service Provider

5.4 User identity registration with identity provider

When the user tries to log in to the service provider via the identity provider,
the user has to furnish their data documents every single time. That becomes
a hassle and adds friction to the entire process. This section proposes a secure
way to store encrypted documents with the identity provider. However, we do
not recommend using this method since we have to trust the identity provider to
some extent here. Despite the apparent security concerns, this method reduces
the time required to verify the identity of a user and reduces the communication
overhead with the data owners consortium.

1. A majority of the steps remain the same as mentioned in Section 5.3. The
user logs in to the IDP, selects data sources, and tries to verify their identities
with the respective data owners.

2. If the user’s identity document is veriﬁed, the data owner sends a green sig-
nal to the identity provider. However, no information about re-certiﬁcation
events is sent since this was not requested.

3. Now, the identity provider stores the veriﬁed but encrypted document in
their systems. The user can use this every time they want to use these
identities to avail of online services.

4. Whenever a user would try to use their identities stored at the identity
provider, the user would generate a re-encryption key using the identity
provider’s IBCPRE public key. The identity provider would decrypt the

Data Owner via BlockchainData owner decryptdocuments, keys, and verifyusers' attributes w.r.t. claimsIdentity ProviderLoginRedirects encrypteddocuments to respective dataownersGenerate trust score basedon received verified claimsService ProviderRedirect to IDP withclaimsYesTrust score >ThresholdProvide service touserUserStartRequest serviceSelect data owners tochoose for claimcertificatesGenerate IBCPRE keys andencrypt data and data ownerkeyEndNoNone Shall Pass

19

stored document and verify the identity attribute claims being requested
by the service provider.

One apparent disadvantage to this method is that the trust score of an at-
tribute might be slightly lower since the identity provider has no information
about the re-certiﬁcation events. Also, the user might not be able to track their
data access requests as they could using the blockchain. Nevertheless, this does
provide a possible business opportunity for the identity providers to lure users
into using their services since they might provide additional features such as
tracking data access requests. Essentially, it is up to the user to decide what
identity provider they want to use.

6 Discussion

In this section, we analyze the security of our proposed scheme and discuss our
contributions with respect to the existing systems.

6.1 Identity Security

Firstly, the users generated the Data Access Key and Data Authorization Key
and stored them locally. Thus, no adversary can obtain them without physical
access to the user’s device. Secondly, the user needs to provide their identity
to the identity provider only when trying to access online services. The identi-
ties are encrypted using IBCPRE, and the user maintains the encryption keys.
Thus, not even the identity provider has access to the documents unless the user
generates the re-encryption keys for the identity provider. The Data Access Key
is also encrypted using the IBCPRE scheme when in transit, thus disallowing
the identity provider from ever gaining access to it. Lastly, Data Access Key
and Data Authorization Key are separate and are used for diﬀerent use-cases al-
together, thus, providing the much-needed barrier between data authentication
and data authorization.

6.2 Data Conﬁdentiality and Privacy

Our proposed system uses state-of-the-art cryptographic algorithms to ensure
the conﬁdentiality of data. Our IBCPRE scheme uses AES-512 to encrypt the
documents/information in transit. Also, a user creates a diﬀerent data owner key
for every data owner, ensuring the segregation of information between the data
owners. Our hierarchical deterministic key generation scheme allows users to
have a separate transaction key on the blockchain every time a new transaction
is committed, thus reducing the chances of data correlation if an adversary gains
unauthorized access to the blockchain. The blockchain does not store any private
information about a user, just metadata about data access requests and re-
certiﬁcation events.

20

S. Gilda et al.

6.3 Data Transparency

The blockchain stores only the identity attributes’ data access requests and re-
certiﬁcation events. Since the transaction keys used for these transactions are
derived from a single parent key, the data owner can trace all the transactions
belonging to the same user. This assures traceability and auditability of transac-
tions as and when needed. Also, the user can trace back their data access requests
since they hold the master Data Access Key; the user can trace transactions on
the blockchain for all data owners.

6.4 Transaction Integrity and Non-Repudiation

Firstly, using a trusted, permissioned blockchain ensures that all consortium
members of a private blockchain trust each other. Since these transactions on the
blockchain are immutable and permanent, they cannot be modiﬁed or deleted,
thus ensuring the system’s integrity. Secondly, only the user holds the Data
Access Key and can thus initiate and ﬁnalize a data access request. This ensures
non-repudiation of the identity.

6.5 Authentication and Authorization

In our proposed scheme, we follow a multi-factor authentication strategy. Sec-
tion 5.2 explains how we maintain security during the login phase. The identity
provider has no idea about the user’s identity but only serves as a trusted proxy
between the user and the service provider. It relies on the data owner to verify
the identity of the users. Our proposed system suggests using attribute-based
access control policies to limit data leakage to the service provider. The service
provider could request as many attributes as they want; however, it is up to
the user to authorize/unauthorize what attribute information needs to be prop-
agated to the service provider. The service provider can make speciﬁc attribute
requirements mandatory and limit access to complete service functionality based
on the approved attributes it receives from the user. For example, suppose the
user does not wish to disclose their age to a media streaming platform. The
media streaming platform could disallow users from viewing adult content on
their platform. Our platform establishes that even though the user has control
over their identity, they would still have to face the consequences of not allowing
access to the required attributes; however, at least the user has a choice.

6.6 Scalability and Availability

Our proposed scheme stores only re-certiﬁcation events and data access requests
on the blockchain and not the complete identity [48]. Hence, this allows us not
to overload the blockchain, thus improving the system’s scalability. In the real-
world, data owners are regarded as data custodians. For example, the passport
of a citizen is still the property of that country’s government and not the user.

None Shall Pass

21

Thus, we extend this same philosophy over the internet and do not focus on self-
sovereign identities like a few previous studies [21,35]. The system can support
large-scale user identity management and authentication by supporting multiple
consortiums of data owners.

One limiting factor in the proposed scheme is the availability of data sources
when needed. If the data sources are oﬄine, the user might be blocked. We can
overcome this by letting users upload their identities on the identity provider
(though not recommended). The system could also be modiﬁed to allow the
identity provider to generate a lower trust score if a data source is unavailable
if they have the user’s consent.

7 Conclusion and Future Work

This paper proposes a blockchain-based, privacy-preserving user identity man-
agement system. In our proposed identity management protocol, users can use
their existing identities to access services using hierarchical deterministic keys
to ensure access to their data and a proxy re-encryption scheme to store and
transmit data securely. Our system uses existing single sign-on facilities with
attribute-based access control for eﬃcient, ﬁne-grained user authentication and
authorization. Furthermore, the user can also trace their authentication and data
access requests as and when needed using a secure, permissioned blockchain. Us-
ing multiple data owners allows users to maintain and control diﬀerent slivers
of their identity. An identity provider assigns a trust score for every asserted
attribute based on the data sources and various attribute re-certiﬁcation events.
This trust score allows service providers to control or limit access to a particular
service aspect based on their internal thresholds for attributes. Our proposed
identity management scheme gives users control over their data, allowing them
to access online services securely.

To that end, there is room for improvement. This study is one of the initial
stages toward the implementation of a fully functional privacy-ﬁrst federated
identity management system. In order to understand and utilize the system, the
interface will need to abstract away most of the blockchain and identity provider
interactions. As a result, more ﬁeldwork in usability testing will be required.
We also need to do some performance testing to see if this system architecture
is feasible in the real world. While there are cryptographic guarantees for the
privacy of the transaction when it is stored, there is always the risk of some data
leakage (e.g., by usage, frequent updates, etc.) that might worry policymakers.
As a result, further security testing would be required. In the future, we want
to resolve these concerns.

References

1. Agrawal, A., Rathor, S.: A robust veriﬁcation system for recruitment process by
using blockchain technology. International Journal of Bifurcation and Chaos 1,
389 (2020) 5

22

S. Gilda et al.

2. Almadhoun, R., Kadadha, M., Alhemeiri, M., Alshehhi, M., Salah, K.: A user
authentication scheme of iot devices using blockchain-enabled fog nodes. In: 2018
IEEE/ACS 15th International Conference on Computer Systems and Applications
(AICCSA). pp. 1–8 (2018). https://doi.org/10.1109/AICCSA.2018.8612856 2
3. Androulaki, E., Barger, A., Bortnikov, V., Cachin, C., Christidis, K., De Caro, A.,
Enyeart, D., Ferris, C., Laventman, G., Manevich, Y., et al.: Hyperledger fabric: a
distributed operating system for permissioned blockchains. In: Proceedings of the
thirteenth EuroSys conference. pp. 1–15 (2018) 8

4. Basney, J., Flanagan, H., Fleury, T., Gaynor, J., Koranda, S., Oshrin, B.: CILogon:
Enabling Federated Identity and Access Management for Scientiﬁc Collaborations.
PoS ISGC2019, 031 (2019). https://doi.org/10.22323/1.351.0031 4

5. Beltran, V., Martinez, J.A., Skarmeta, A.F.: User-centric access control for eﬃcient
security in smart cities. In: 2017 Global Internet of Things Summit (GIoTS). pp. 1–
6. IEEE (2017) 4

6. Bendiab, G., Shiaeles, S.N., Boucherkha, S., Ghita, B.V.: Fcmdt: A novel fuzzy
cognitive maps dynamic trust model for cloud federated identity management.
Comput. Secur. 86, 270–290 (2019) 4

7. Berghel, H.: The equifax hack revisited and repurposed. Computer 53(5), 85–90

(2020) 2

8. Bethencourt, J., Sahai, A., Waters, B.: Ciphertext-policy attribute-based encryp-
tion. In: 2007 IEEE symposium on security and privacy (SP’07). pp. 321–334.
IEEE (2007) 5

9. Burr, W.E., Dodson, D.F., Newton, E.M., Perlner, R.A., Polk, W.T., Gupta, S.,

Nabbus, E.A.: Sp 800-63-1. electronic authentication guideline (2011) 15

10. Cai, X., Geng, S., Zhang, J., Wu, D., Cui, Z., Zhang, W., Chen, J.: A shard-
ing scheme-based many-objective optimization algorithm for enhancing security in
blockchain-enabled industrial internet of things. IEEE Transactions on Industrial
Informatics 17(11), 7650–7658 (2021). https://doi.org/10.1109/TII.2021.3051607
2

11. Cui, Z., XUE, F., Zhang, S., Cai, X., Cao, Y., Zhang, W., Chen,
J.: A hybrid blockchain-based identity authentication scheme for multi-
wsn.
IEEE Transactions on Services Computing 13(2), 241–251 (2020).
https://doi.org/10.1109/TSC.2020.2964537 2

12. Das, P., Erwig, A., Faust, S., Loss, J., Riahi, S.: The exact security of bip32 wallets.
In: Proceedings of the 2021 ACM SIGSAC Conference on Computer and Commu-
nications Security. pp. 1020–1042 (2021) 12

13. Dunphy, P., Petitcolas, F.A.: A ﬁrst look at identity management schemes on the

blockchain. IEEE Security Privacy 16(4), 20–29 (2018) 5

14. Ekblaw, A., Azaria, A., Halamka, J.D., Lippman, A.: A case study for blockchain
in healthcare : “ medrec ” prototype for electronic health records and medical
research data (2016) 2

15. Faber, B., Michelet, G.C., Weidmann, N., Mukkamala, R.R., Vatrapu, R.: Bpdims:
A blockchain-based personal data and identity management system. In: Bui, T.
(ed.) 52nd Hawaii International Conference on System Sciences, HICSS 2019,
Grand Wailea, Maui, Hawaii, USA, January 8-11, 2019. pp. 1–10. ScholarSpace
/ AIS Electronic Library (AISeL) (2019), http://hdl.handle.net/10125/60121
5

16. Francisco, K., Swanson, D.: The supply chain has no clothes: Technology
adoption of blockchain for supply chain transparency. Logistics 2(1) (2018).
https://doi.org/10.3390/logistics2010002, https://www.mdpi.com/2305-6290/2/
1/2 2

None Shall Pass

23

17. Gao, S., Su, Q., Zhang, R., Zhu, J., Sui, Z., Wang, J.: A privacy-preserving iden-
tity authentication scheme based on the blockchain. Security and Communication
Networks 2021 (2021) 5

18. Gao, Z., Xu, L., Turner, G., Patel, B., Diallo, N., Chen, L., Shi, W.: Blockchain-
based identity management with mobile device. Association for Computing Ma-
chinery, New York, NY, USA (2018). https://doi.org/10.1145/3211933.3211945,
https://doi.org/10.1145/3211933.3211945 2

19. Gokhale, P., Malik, S., Gilda, S.S., Rizvi, S.H., Poulose, R.: Identity attribute
conﬁdence scoring while certifying authorization claims (Sep 7 2021), uS Patent
11,115,419 10

20. Goyal, V., Pandey, O., Sahai, A., Waters, B.: Attribute-based encryption for ﬁne-
grained access control of encrypted data. In: Proceedings of the 13th ACM confer-
ence on Computer and communications security. pp. 89–98 (2006) 4

21. Grech, A., Sood, I., Ari˜no, L.: Blockchain, self-sovereign identity and digi-
tal credentials: Promise versus praxis in education. Frontiers in Blockchain
4 (2021). https://doi.org/10.3389/fbloc.2021.616779, https://www.frontiersin.
org/article/10.3389/fbloc.2021.616779 21

22. Gutoski, G., Stebila, D.: Hierarchical deterministic bitcoin wallets that tolerate
key leakage. In: International Conference on Financial Cryptography and Data
Security. pp. 497–504. Springer (2015) 12

23. Hammi, M.T., Hammi, B., Bellot, P., Serhrouchni, A.: Bubbles of trust: A decen-
tralized blockchain-based authentication system for iot. Computers ’&’ Security
78, 126–142 (2018). https://doi.org/https://doi.org/10.1016/j.cose.2018.06.004,
https://www.sciencedirect.com/science/article/pii/S0167404818300890 2

24. Hardjono, T., Pentland, A.: Core identities for future transaction systems. MIT

Press (2019) 4

25. Hardjono, T., Smith, N., Pentland, A.S.: Anonymous identities for permissioned

blockchains (2014) 4

26. Hu, V.C., Kuhn, D.R., Ferraiolo, D.F., Voas, J.: Attribute-based access control.

Computer 48(2), 85–88 (2015). https://doi.org/10.1109/MC.2015.33 2

27. Josh: What methods are used by wallets to generate keys? (Mar 2021), https://
cryptochamp.com/what-methods-are-used-by-wallets-to-generate-keys/ 10
28. Laborde, R., Oglaza, A., Wazan, S., Barrere, F., Benzekri, A., Chadwick, D.W.,
Venant, R.: A user-centric identity management framework based on the w3c ver-
iﬁable credentials and the ﬁdo universal authentication framework. In: 2020 IEEE
17th Annual Consumer Communications Networking Conference (CCNC). pp. 1–8
(2020). https://doi.org/10.1109/CCNC46108.2020.9045440 4

29. Lenz, T., Krnjic, V.: Towards domain-speciﬁc and privacy-preserving qual-
17th IEEE In-
identity model.
iﬁed eid in a user-centric
ternational Conference On Trust, Security And Privacy In Computing
And Communications/ 12th IEEE International Conference On Big Data
Science And Engineering (TrustCom/BigDataSE). pp. 1157–1163 (2018).
https://doi.org/10.1109/TrustCom/BigDataSE.2018.00160 4

2018

In:

30. Liang, K., Liu, Z., Tan, X., Wong, D.S., Tang, C.: A cca-secure identity-based con-
ditional proxy re-encryption without random oracles. In: International Conference
on Information Security and Cryptology. pp. 231–246. Springer (2012) 10, 13, 14
31. Liu, Y., He, D., Obaidat, M.S., Kumar, N., Khan, M.K., Raymond
systems: A re-
102731
https:

Choo, K.K.: Blockchain-based
view.
(2020).
//www.sciencedirect.com/science/article/pii/S1084804520302058 2

https://doi.org/https://doi.org/10.1016/j.jnca.2020.102731,

and Computer Applications 166,

identity management

of Network

Journal

24

S. Gilda et al.

32. M’Raihi, D., Machani, S., Pei, M., Rydell, J.: Totp: Time-based one-time password

algorithm. Tech. rep. (2011) 15

33. Nofer, M., Gomber, P., Hinz, O., Schiereck, D.: Blockchain. Business ’&’ Informa-
tion Systems Engineering 59 (03 2017). https://doi.org/10.1007/s12599-017-0467-3
2

34. Premarathne, U.S., Khalil,

I., Tari, Z., Zomaya, A.: Cloud-based util-
ity service framework for trust negotiations using federated identity man-
agement.
IEEE Transactions on Cloud Computing 5(2), 290–302 (2017).
https://doi.org/10.1109/TCC.2015.2404816 4

35. Rathee, T., Singh, P.: A self-sovereign identity management system using
blockchain. In: Khanna, K., Estrela, V.V., Rodrigues, J.J.P.C. (eds.) Cyber Se-
curity and Digital Forensics. pp. 371–379. Springer Singapore, Singapore (2022)
21

36. Ruﬃng, T., Moreno-Sanchez, P., Kate, A.: Coinshuﬄe: Practical decentralized coin
mixing for bitcoin. In: Kuty(cid:32)lowski, M., Vaidya, J. (eds.) Computer Security - ES-
ORICS 2014. pp. 345–364. Springer International Publishing, Cham (2014) 4
37. Ruﬃng, T., Moreno-Sanchez, P.A., Kate, A.: P 2 p mixing and unlinkable bitcoin
transactions anonymity of the people , by the people , and for the people (2016) 4
38. Saberi, S., Kouhizadeh, M., Sarkis, J., Shen, L.: Blockchain technol-
In-
to sustainable
(2019).
2117–2135
https://doi.org/10.1080/

ogy and its
ternational
https://doi.org/10.1080/00207543.2018.1533261,
00207543.2018.1533261 2

of Production Research 57(7),

supply chain management.

relationships

Journal

39. Sakimura, N., Bradley, J., Jones, M., De Medeiros, B., Mortimore, C.: Openid

connect core 1.0. The OpenID Foundation p. S3 (2014) 2, 11

40. Saxena, A., Misra, J., Dhar, A.: Increasing anonymity in bitcoin. In: B¨ohme, R.,
Brenner, M., Moore, T., Smith, M. (eds.) Financial Cryptography and Data Secu-
rity. pp. 122–139. Springer Berlin Heidelberg, Berlin, Heidelberg (2014) 4

41. Selvanathan, N., Jayakody, D., Damjanovic-Behrendt, V.: Federated identity man-
agement and interoperability for heterogeneous cloud platform ecosystems. Pro-
ceedings of the 14th International Conference on Availability, Reliability and Se-
curity (2019) 4

42. Singh, B.C., Carminati, B., Ferrari, E.: Privacy-aware personal data storage (p-
pds): Learning how to protect user privacy from external applications. IEEE Trans-
actions on Dependable and Secure Computing 18, 889–903 (2021) 4

43. Wang, W., Xu, H., Alazab, M., Gadekallu, T.R., Han, Z., Su, C.: Blockchain-based
reliable and eﬃcient certiﬁcateless signature for iiot devices. IEEE Transactions on
Industrial Informatics pp. 1–1 (2021). https://doi.org/10.1109/TII.2021.3084753 2
44. Xu, J., Xue, K., Tian, H., Hong, J., Wei, D.S.L., Hong, P.: An identity man-
agement and authentication scheme based on redactable blockchain for mobile
networks. IEEE Transactions on Vehicular Technology 69(6), 6688–6698 (2020).
https://doi.org/10.1109/TVT.2020.2986041 5

45. Yaqoob, I., Salah, K., Jayaraman, R., Al-Hammadi, Y.: Blockchain for health-
care data management: Opportunities, challenges, and future recommendations.
Neural Computing and Applications (01 2021). https://doi.org/10.1007/s00521-
020-05519-w 2

46. Yu, K., Tan, L., Aloqaily, M., Yang, H., Jararweh, Y.: Blockchain-
revocation in iiot.
Informatics 17(11), 7669–7678 (2021).

enhanced data
IEEE Transactions on Industrial
https://doi.org/10.1109/TII.2021.3049141 2

sharing with traceable

and direct

None Shall Pass

25

47. Zheng, Z., Xie, S., Dai, H.N., Chen, X., Wang, H.: Blockchain challenges and
opportunities: A survey. International Journal of Web and Grid Services 14, 352
(10 2018). https://doi.org/10.1504/IJWGS.2018.095647 2

48. Zhuang, C., Dai, Q., Zhang, Y.: Bcppt: A blockchain-based privacy-preserving and
traceability identity management scheme for intellectual property. Peer-to-Peer
Networking and Applications 15, 1–15 (01 2022). https://doi.org/10.1007/s12083-
021-01277-1 5, 20

