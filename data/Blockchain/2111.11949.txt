Consensus formation on heterogeneous networks

Edoardo Fadda
Department of Mathematical Sciences, Politecnico di Torino,
ISIRES

Junda He
Information Systems and Technology Cluster,
School of Computing and Information Systems,
Singapore Management University

Claudio J. Tessone
Blockchain & Distributed Ledger Technologies,
UZH Blockchain Center,
University of Zurich

Paolo Barucca∗
Department of Computer Science, University College London
(Dated: March 22, 2022)

Reaching consensus -a macroscopic state where the system constituents display the same micro-
scopic state- is a necessity in multiple complex socio-technical and techno-economic systems: their
correct functioning ultimately depends on it. In many distributed systems -of which blockchain-
based applications are a paradigmatic example- the process of consensus formation is crucial not
only for the emergence of a leading majority but for the very functioning of the system. We build
a minimalistic network model of consensus formation on blockchain systems for quantifying how
central nodes - with respect to their average distance to others - can leverage on their position to
obtain competitive advantage in the consensus process. We show that in a wide range of network
topologies, the probability of forming a majority can signiﬁcantly increase depending on the cen-
trality of nodes that initiate the spreading. Further, we study the role that network topology plays
on the consensus process: we show that central nodes in scale-free networks can win consensus in
the network even if they broadcast states signiﬁcantly later than peripheral ones.

Introduction

Blockchains -and other Distributed Ledger Technologies- [2, 25] staggering success has opened a deep discussion on
the possibility of new social, economic and ﬁnancial disintermediated paradigms. The ambition and the depth of the
range of applications of this technology has required an increased level of scrutiny of the underlying mathematical
mechanisms, which are still little understood, especially in its consensus formation dynamics. The main ingredients
of the technology are cryptographic task distribution and coordination. The absence of coordination and consensus
between users would imply the failure of the protocol to generate a common record of veriﬁed data.
In proof-of-
work based systems, the possibility of immediately communicating the positive outcome of mining from miners in
the distributed network is crucial to minimise the waste of computational power, but on the other hand it serves
to maximise the trust in the system [26]. There are important (little discussed) assumptions in the consensus of
blockchain-based systems, as the analytical derivations rely on negligible propagation times of blocks, and vanishing
path-lengths in the peer-to-peer network [14].

Consensus is the most important trait in the continuously increasing range of blockchain-based systems [23]. Proof-
of-work based open blockchains (of which Bitcoin and Ethereum 1.0 are primary examples) are decentralised platforms
for value exchange through consensus where each participant can contribute to (and is rewarded for) verifying and
diﬀusing the information stored in the common ledger. The reliability of the information is based on the so-called
“mining”, a computationally-intensive problem-solving task that is performed independently by each participant;
when a participant ﬁnds a solution, it shares it with other participating through a peer overlay network. Despite the
fact that the information communication plays a crucial role in the consensus formation and thus in the functionality

∗Electronic address: E-mail: p.barucca@ucl.ac.uk

2
2
0
2

r
a

M
1
2

]
I
S
.
s
c
[

3
v
9
4
9
1
1
.
1
1
1
2
:
v
i
X
r
a

 
 
 
 
 
 
2

of Bitcoin and similar peer networks. With the growth of Proof-of-Stake derivatives (and existing protocols such as
Stellar and Ripple) [9] - which all include clock synchronisation algorithms - it is clear that modelling approaches based
on discrete time steps has an intrinsic validity in this space. With this variety of systems, no systematic studies have
quantiﬁed the role of the network of communication in shaping the behaviour and the functioning of a decentralised
consensus platform.

In this paper we build a complete theoretical framework for understanding competing consensus in distributed ledger
platforms and we establish general results on the emergence of network eﬀects on the system eﬃciency. The main
contribution of this study is to model and simulate both the mining activity and the consensus formation and show how
closeness centrality of nodes can lead to a competitive advantage in winning consensus. The role of network centrality
aﬀects the strategies of users in the system and can compromise the correct functioning of cryptoeconomies, especially
in presence of bandwidth and computational power concentration among a small subset of users. In the following
section we discuss how researchers have investigated the role of network propagation in blockchain technology. In the
model section we introduce the notation and simple formalism that allows us to model both the mining activity and
the consensus formation mechanism. In the results section we present experiments to test the competitive advantage
of central nodes in diﬀerent networks. Finally, we outline possible perspectives on how to extend the model and how
to correctly monitor the eﬃciency and reliability of the networked social systems.

I. LITERATURE REVIEW

The role of communication in the functioning of blockchain protocols has been investigated since the very beginning
of Bitcoin. In [14], as Nakamoto proposed, Bitcoin is enforced with a proof-of-work mechanism. By adjusting the
mining diﬃculty, it limits the block generation rate to around 1 per 10 minutes. According to [14], if two blocks
are received simultaneously, honest miners should always work on their ﬁrst received block before the occurrence of
next block, as miners should always work on the longest chain. In fact, miners can deviate from this behaviour, e.g.
by deciding to mine new blocks for shorter chains.
[13] produced a systematic review of the blockchain consensus
algorithms. The work analysed limitations of the proof-of-work in Bitcoin. One of the limitations is that increasing
mining diﬃculty encourages the formation of mining pools. As a result of forming mining pools, the computational
power can become centralised. The paper [5] evaluated the propagation mechanism on updating the ledger replicas.
They have focused on analysing the relationship between the propagation speed and the blockchain fork rate. By
experimentally modulating the Bitcoin protocol, they have shown that speeding up the dissemination of information
adequately reduce the number of forks. Generally, if a node receives a block which conﬂicts with its previous ledge
replica, it can be ignored. [5] showed that - due to the information propagation times - a node may ﬁnd more convenient
not to pass on the information of new block, in order to increase the probability of mining an alternative one. For
honest miners, a fork is an undesired side-eﬀect of the blockchain protocol. In [24], the authors summarise that the
fork rate is correlated to the performance, capacity, security level and degree of decentralisation of the blockchain
network. Diﬀerent adversarial attacks, such as the celebrated selﬁsh-mining [6], resort on the strategic decision of
the nodes as to when share the newly created block. Empirical analyses [10, 11], and modelling approaches [19] have
found indications that such attacks take place in smaller-sized blockchains. Moreover, the fork rate over a period could
be considered as a highly relevant indicator of the resources utilisation level and malicious behaviours (e.g. selﬁsh
mining) for a particular time period. Based on the orphaned blocks dataset produced by Blockchain.info, a downtrend
on the number of orphaned blocks is observed during the past few years. In [15], the authors suggested that this drop
of the number of forks indicates an improvement of the block propagation mechanism in Bitcoin. They produced an
empirical analysis of forks in the Bitcoin network and concluded that the probability of the earlier propagated block
to be included in the main chain increases linearly with the time advantage it gained over the competing block. Both
[5] and [15] mention that the propagation time of diﬀerent blocks varies. The overall propagation delay is constituted
by the transmission time and veriﬁcation time of the block. From [5]’s measurements, the propagation delay varies
drastically for blocks that are smaller than 20KB meanwhile the delay costs tend to be constant for blocks larger than
20KB. In [4] the statistics of block propagation time is reported in a general evaluation of the problem of scaling of
cryptoeconomies, i.e. the possibility of the decentralised services to keep working when the number of users increase.
Recently, [20, 21] showed in a series of simulations that the block propagation delay has a positive linear relationship
with the block-size and that increasing the number of neighbours and the bandwidth can signiﬁcantly speed the block
propagation in the network. In [20] the authors also evaluate the probability of fork formation and the correspondences
to the block size, average P2P bandwidth, and average number of neighbours per node respectively, based on the
Erd˝os-R´enyi random graph model.

3

II. THE MODEL OF CONSENSUS PROPAGATION

In this Section we present the framework that we use for the numerical experiments as well as for the analytical

calculations.

The model We here deﬁne the network model for discrete-time consensus formation. We consider a graph G =
(V, E), where V is the set of nodes of the network. Nodes represent miners (i.e. validator nodes that may produce
blocks), each node i is characterised by a computational power ci and storing a local copy of the blockchain of a
given height hi. In the following, for convenience, we use the terms miners and nodes interchangeably depending on
whether we are focusing on their mining activity or on their network properties. E is the set of edges and tij ∈ N is
the time it takes for a direct ﬂow of information to go from node i to node j. In the weighted model, tij is discrete
and at each iteration miner j receives the information on the block that miner i had tij steps before.

The propagation time between two generic miners is given by the weighted shortest path between them in the graph,
so that the distribution of propagation times [5] is shaped by the weighted network distances [3]. In the following
we use binary values for tij so that at each time step, each miner receives the blocks from its ﬁrst neighbours in the
network. Nodes are further endowed with a height hi which is the length of the local copy of the blockchain they
store.

For each miner, we sample the time for mining the next block. The times ti are sampled from an exponential
distribution characterised by a rate parameter λi = λ ci and rounded to the nearest integer above. Each iteration, the
mining times are synchronously updated, ti → ti − 1. Miners ﬁnd the next block when their mining time goes to zero.
When a block b is mined by a node i, it gets appended to node i’s local copy of the blockchain, and the node gets
assigned a height hi → hi + 1. It is worth noting that in this model forks can appear and two or more blockchains
with the same or with diﬀerent heights can propagate at the same time within the network. When a block arrives to
a node j, it can perform one of the following actions:

• if the block has a height greater than its blockchain copy, hi, then the node will add it to its blockchain and

start mining the next block

• if the block has a height less than the its blockchain copy then the node will ignore it

• if two blocks with a height greater than its blockchain copy arrive together, then the node will choose to add
the block that is more frequent in its neighbourhood. If both have the same frequency then one at random is
selected.

Mining times are updated either when a node ﬁnds a new block or when it accepts a new block from a neighbouring
node. This interplay between propagation and mining gives an advantage to the nodes that - due to their position in
the network - tend to receive new blocks before others. With this model it is possible to simulate chaotic behaviour of
distributed networks in which the typical mining time is far smaller than the typical propagation time on the network.
The probability of forks Empirical studies on blockchain protocols [7, 18, 22] have shown the emergence of forks,
i.e. the simultaneous existence of multiple - potentially conﬂicting - blockchains among diﬀerent groups of miners. In
this paragraph we aim at giving a simple statistical intuition of this occurrence and its relationship to the interplay
of two characteristic times: the mining times - governed by mining protocols and CPUs - and propagation times -
governed by block sizes and network bandwidth. In general, the possibility of competing blocks depends on the joint
distribution of the order statistics for the smallest mining times, and their relative time gaps. The larger the time
gaps between the smallest times, the less probable is for late blocks to be able to compete in the consensus formation
via the network propagation. For the sake of simplicity, here and in the following sections, each miner is characterised
by the same computational power, ci = 1. The parameter of the exponential distributions λ can be chosen, depending
on the number of miners, so that the expected minimum time is ﬁxed to 10 minutes. The probability distribution
function for the mining time of each miner is

We are interested in the corresponding distribution for the minimum time,

p1(t) = N p(t)C(t)N −1 = N λe−N λt

p(t) = λe−λt.

(1)

(2)

where C(t) is the cumulative distribution function of the mining time of each individual miner. The expected minimum
mining time, i.e. the mining time of the whole system, is then

(cid:104)tmin(cid:105) =

1
N λ

.

(3)

4

Blockchain Block creation time (s) Propagation time (s) Stale blocks rate C(∆)
1.44%
3.51-5.22%
0.68%
1.40%

8.7
0.5-0.75
1.02
0.85

0.41%
6.8%
0.273%
0.619%

BTC
ETH
LTC
DOGE

600
14
150
60

TABLE I: Estimated C(∆) from block creation times and median propagation times for multiple blockchain
systems, compared with the stale blocks rate. Data are taken from [8].

Let us now focus on the joint distribution of the two smallest mining times in our model. Supposing an initial situation
where all miners start mining at the same time, it reads

p(t, t(cid:48)) = N (N − 1)p(t)p(t(cid:48))C(t(cid:48))N −2θ(t(cid:48) − t)

where θ(x) is the Heaviside step function, so that the distribution of the gap ∆ = t(cid:48) − t reads:

(cid:90)

p(∆) =

dtdt(cid:48)δ(∆ − t(cid:48) + t)p(t, t(cid:48)) = λ(N − 1)e−λ(N −1)∆

(4)

(5)

which yields an average (cid:104)∆(cid:105) = 1/λ(N − 1). A more general expression for the case of heterogeneous miners can be
found in the appendix. Moreover, this also implies a cumulative probability C(∆) of a time diﬀerence between the
best two times smaller than ∆:

C(∆) ≈ λ(N − 1)∆

(6)

Based on [5], ∆ can be calibrated based on the empirical distribution of propagation times in real blockchain systems,
e.g. the median for Bitcoin was 8.7 seconds in 2015. For ∆ equal to 8.7 seconds, and substituting λ(N − 1) ≈ 1/600
seconds, then the probability is

C(∆ = 8.7s) ≈ 8.7s/(600s) ∼= 0.0145 = 1.45%

(7)

which is compatible with the old observed value of 1.69% in [5], but less so with the more recent estimate of 0.41%
[8]. Despite the simplifying assumptions, the order statistics of a set of exponential distributions provides a numerical
agreement with the observed statistics of forks in Bitcoin.
The average inter-block time of 10 minutes is on the upper limit of the existing blockchains. Ethereum 1.0, for example,
has an average inter-block time of 14 seconds. For Ethereum, where the propagation time and the block creation
time are comparable [26], we need to compute directly the cumulative distribution function to get the probability
of having competing blocks in the system, estimated by the 6.8% daily ratio between uncle blocks - rewarded, yet
unused, mined blocks - and mined blocks [12]. This uncle ratio is roughly compatible - in this simple model - with an
estimated C(∆) ranging between 3.51% and 5.22%. See Table I for similar estimates for other blockchain systems.
These estimates do not necessarily reﬂect real stale blocks rate, potentially outlining the limits of the assumptions of
our simple model with homogeneous and independent miners.

III. RESULTS

In our experiments we investigate three ensembles of networks: Erd˝os-R´enyi, stochastic block models (SBM), and
Barab´asi-Albert. Erd˝os-R´enyi provides a solid baseline for evaluating the consensus formation process [1]. The
comparison with the SBM, where nodes are divided into communities provides a scenario to evaluate the potential
emergence of persistent forks in diﬀerent communities. The analysis on Barab´asi-Albert networks tests a scenario of
heterogeneously connected miners in which the distribution of distances has a broader support and node centrality
can create great diﬀerences between miners’ ability to propagate their mined blocks. Firstly to monitor the diﬀerence
in propagation and cluster formation in these networks we compute the distribution of sizes for the clusters of
miners keeping the two diﬀerent new blocks. Secondly, we demonstrate through simulations how network centrality
can statistically favour some nodes over others in the case of a competition between blocks during the consensus
formation. The average distance of a miner to other nodes determines which block will prevail in a temporary fork,
closeness centrality quantiﬁes this, as it is deﬁned as the reciprocal of the sum of the distances of a node towards all
the other nodes [17].

Graph Type Diameter Betweenness Closeness Centrality

Erdos
SBM
Barabasi

6 (0.00)
6 (0.00)
6 (0.00)

2.58e-3 (2e-5)
2.03e-3 (3e-5)
2.23e-3 (1e-5)

2.81e-1 (1e-2)
2.71e-1 (1e-2)
3.12e-1 (1e-2)

5

TABLE II: Main Characteristic of the generated graphs. For each value is reported average and std. dev. in
brackets.

We consider graphs with |V | = 1000, this dimension is big enough to achieve stable results for the proposed
experiments and allow us to run several repetitions. In particular, we consider Barab´asi-Albert graphs characterised
by an average degree ¯d = 8, Erd˝os R´enyi graphs characterised by an edge probability pE = 8/1000, and SBM graphs
characterised by four blocks each one containing the same amount of nodes (i.e. p = [0.25, 0.25, 0.25, 0.25]) and the
following connection matrix:

C =








5 1 1 1
1 5 1 1
1 1 5 1
1 1 1 5








,

(8)

where each entry Cab represents the expected number of edges from a node in block a to nodes in block b. These
choices are done in order to set the average degree to be 8, as in the bitcoin network. Technically, the bitcoin protocol
allows to a larger number of connections, nevertheless the default parameters called max connections is set to 4 [16].
The characteristics of the networks are reported in Table II.

We present the results of the experiments in the two following subsections.
Cluster dimension The dimension of the winning cluster is one of the most important features of the competitive
diﬀusion process. Due to its dynamics, the process ends with the winning cluster having all the nodes and the losing
one having no nodes, so to observe diﬀerences we need to look at clusters before convergence. Given a graph with
average degree ¯d, we monitor the sizes of the two clusters for

t∗ =

(cid:25)

(cid:24) ln |V |
ln ¯d

=

(cid:25)

(cid:24) ln 1000
ln 8

= 4

where (cid:100).(cid:101) rounds to the nearest higher integer. This is an estimate for the propagation time that is obtained by
considering a graph with a tree structure with a ﬁxed number of branches ¯d. The histograms of the frequency of each
cluster size are shown in Figure 1a 1b, and 1c for the Erd˝os-R´enyi, SBM, and Barab´asi-Albert graph, respectively.

Each graph shows the histogram of the various cluster sizes at a given time, expressed as percentage of nodes. The
histograms are not strictly symmetric since at time t∗, the propagation process is not ﬁnished and some nodes do not
belong to either of the clusters. In the central region the two histograms present an overlap. This is due to the cases
in which the two clusters have similar size and the one with a lower number of nodes eventually wins the propagation.
In the Erd˝os-R´enyi graphs, at time t∗ the propagation process has not yet a clear winner, thus the dimension of the
cluster are more likely to be similar. In the stochastic block model, the situation is similar, but it is characterised
by a greater variance. Due to the diﬀerent density of edges, it is possible for a cluster to spread across more than
one block, thus gaining in few iterations a big percentage of the network. Finally, in the Barab´asi-Albert graphs the
diﬀusion process at time t∗ is close to the end: the winning cluster has a size close to the whole network and the
losing one has nearly no nodes.

a. Closeness centrality

In the second experiment we consider the frequencies of victories for a node characterised
by a given centrality (measured in terms of quantiles for the network). In order to observe this relation, ﬁrst we
sample a graph and we rank nodes according to their closeness centrality. The distributions of closeness centralities
can be found in the appendix. For each quantile of closeness centrality q we select the corresponding node and we run
a competitive diﬀusion process between this node and another randomly sampled node, repeating this competition for
100 times. Each point in the graph represents the empirical probability of winning the process of competitive diﬀusion
for the selected node. Finally, we average this empirical probabilities over 10 diﬀerent graphs for each ensemble and
obtain the results shown in Figure 2a 2b, and 2c, for the Erd˝os-R´enyi, SBM, and Barab´asi-Albert graph, respectively.
All the graphs present the results for ∆t = 0, ∆t = 1 and ∆t = 2 since for ∆t = 3 the graphs reduces to a constant
zero line. The lower quantiles in the plot correspond to the higher values of closeness centrality. As expected, if a
node has an high centrality it is more likely to win the competitive diﬀusion process. Moreover, the time is of crucial

6

importance since, if ∆t = 1 (i.e., the considered node starts the diﬀusion process one time step after the other) the
probability to win suddenly decreases. All the curves for all the ensembles, for ∆t = 0, present a plateau around 0.5
corresponding to the median closeness centrality values. This is due to the fact that for closeness centrality values
closed to the median, the sampled nodes considered to test the victory probability of a node will be, with equal
probability, both above and below the closeness centrality value of the node being tested.

For ∆t = 1 and ∆t = 2, the results are also diﬀerent for each of the graph ensembles considered. For Erd˝os-R´enyi,
the diﬀerence between the curve with ∆t = 1 and ∆t = 2 is not so big. The Erd˝os-R´enyi model also shows low
variance, i.e. the points tend to be closer to their average values. SBM graphs display similar curves but present an
higher variance. Remarkably, for this ensemble also nodes corresponding to low quantiles are able to reach winning
probability closed to one. These nodes are the ones located near to the intersection of two blocks of the network.
They are characterised by a relatively low degree but they are able to diﬀuse their cluster in two blocks in a short
time. Finally, the Barab´asi-Albert graphs behave quite diﬀerently. The variance is lower than for the SBM graphs
but greater than the Erd˝os-R´enyi graph. Despite the advantage of the ﬁrst node, for ∆t = 1, the second node has
still non-negligible probability to win even for relatively low quantiles of closeness centrality. This is due to the wider
distribution of closeness centrality that characterises Barab´asi-Albert graphs. In fact, such variations increase the
advantage of being a node with relatively high closeness centrality.

IV. CONCLUSIONS

In this study we have shown how information processing and propagation on the heterogeneous overlay network
of a distributed system can generate asymmetries in the contribution of system elements to its functioning. We
have introduced a minimalistic time-discrete model which can be used to investigate detailed scenarios for the role of
networks in selﬁsh and non-cooperative behavior in distributed systems. The numerical results here presented also
address the question on how to identify network features that enable to predict which nodes, or cluster of nodes, will
win a competitive propagation process before the actual full propagation takes place.

This paper opens up a new stream of research with multiple applications to distributed systems, but speciﬁcally to
blockchains and distributed ledger technologies. How these systems reach consensus is a key diﬀerentiating component
in their design and concept. While this paper is focused on proof-of-work, the modelling approach is applicable to
other scenarios. Newer platforms - like those based in variants of delegated-proof-of-stake, voting models (such as
Stellar and Ripple) or others more unique - such as IOTA - depend on round-based systems for their functioning.
In those, a discrete-time approach is even more central to uncover possible adversarial attacks that may hinder the
emergence of trust.

7

V. APPENDIX A: ORDER STATISTICS FOR HETEROGENEOUS MINERS

When miners have diﬀerent computational power, then their distribution of mining times changes. The probability

distribution function for the mining time of any miner is

pi(t) = λie−λit

(9)

where λi can be modelled as proportional to the computational power, i.e. λi = λ ci, measured in a common scale λ.
We are interested in the corresponding distribution for the minimum time, tmin = mini{ti

m}

p1(t) =

(cid:88)

i=1

pi(t)

N
(cid:89)

j(cid:54)=i

Cj(t)

(10)

where Ci(t) are cumulative distribution functions for the mining times of diﬀerent miners. which for the exponential
distributions simply reads

where λ = 1
N

(cid:80)

i=1 λi. The expected minimum mining time, i.e. the mining time of the system, is

p1(t) = N λe−N λt

(cid:104)tmin(cid:105) =

1
(cid:80)
i λi

.

(11)

(12)

Let us now focus on the joint distribution of the two smallest mining times in the heterogeneous case. Supposing
again an initial situation where all miners start mining at the same time, it reads

p(t, t(cid:48)) =

(cid:88)

i(cid:54)=j

pi(t)pj(t(cid:48))

N
(cid:89)

k(cid:54)=i,j

Ck(t(cid:48))θ(t(cid:48) − t)

which for the exponential distributions reads

p(t, t(cid:48)) =

(cid:88)

i(cid:54)=j

λiλje−λi(t−t(cid:48))−(cid:80)

k λkt(cid:48)

θ(t(cid:48) − t).

Finally leading to the following equation for the time gap distribution

p(∆) =

(cid:80)

i(cid:54)=j λiλje− (cid:80)

k(cid:54)=i λk∆

N λ

,

(13)

(14)

(15)

which shows the explicit dependence of the time gaps between new mined blocks - potentially leading to forks - and
the distribution of computational power across miners.

VI. APPENDIX B: CLOSENESS CENTRALITY DISTRIBUTIONS

Closeness centrality distributions for the 3 topologies is represented in Figure 3.

The full simulation code is available on the online repository: gitlab.com/edo.fadda/blockchainsimulator

Availability of data and material

The authors declare that they have no competing interests.

Competing interests

Funding

8

PB acknowledges support from the UCL Centre for Blockchain Technologies. CJT acknowledges funding of SNSF

(Switzerland) through project 200021 182659.

EF, PB, CJT designed the experiment. EF, JH performed all the simulations in the study. JH performed a

preliminary analysis for the study. EF, PB, CJT wrote and edited the ﬁnal manuscript.

Authors’ contributions

The authors would like to thank Dr Paolo Tasca and Kristelle Feghali for insightful discussions.

Acknowledgements

[1] Albert-L´aszl´o Barab´asi and M´arton P´osfai. Network science. Cambridge University Press, Cambridge, 2016.
[2] Andrea Baronchelli. The emergence of consensus: a primer. Royal Society open science, 5(2):172189, 2018.
[3] Vincent D Blondel, Jean-Loup Guillaume, Julien M Hendrickx, and Rapha¨el M Jungers. Distance distribution in random

graphs and application to network exploration. Physical Review E, 76(6):066101, 2007.

[4] Kyle Croman, Christian Decker, Ittay Eyal, Adem Efe Gencer, Ari Juels, Ahmed Kosba, Andrew Miller, Prateek Sax-
ena, Elaine Shi, Emin G¨un Sirer, et al. On scaling decentralized blockchains. In International conference on ﬁnancial
cryptography and data security, pages 106–125. Springer, 2016.

[5] Christian Decker and Roger Wattenhofer. Information propagation in the bitcoin network. In IEEE P2P 2013 Proceedings,

pages 1–10. IEEE, 2013.

[6] Ittay Eyal and Emin G¨un Sirer. Majority is not enough: Bitcoin mining is vulnerable. In International conference on

ﬁnancial cryptography and data security, pages 436–454. Springer, 2014.

[7] Maximiliano Geier, Claudio J. Tessone, Marco Vanotti, Silvio Vileri˜no, David Gonz´alez M´arquez, and Esteban Mocskos.
Using Network Emulation to Study Blockchain Distributed Systems: The Ethereum Case. In Proceedings - 27th Euromicro
International Conference on Parallel, Distributed and Network-Based Processing, PDP 2019, pages 51–58, 2019.

[8] Arthur Gervais. On the Security, Performance and Privacy of Proof of Work Blockchains. PhD thesis, ETH Zurich, 2016.
[9] Bahareh Lashkari and Petr Musilek. A comprehensive review of blockchain consensus mechanisms. IEEE Access, 9:43620–

43652, 2021.

[10] Sheng-Nan Li, Zhao Yang, and Claudio J Tessone. Mining blocks in a row: A statistical study of fairness in bitcoin mining.

In 2020 IEEE International Conference on Blockchain and Cryptocurrency (ICBC), pages 1–4. IEEE, 2020.

[11] Sheng-Nan Li, Zhao Yang, and Claudio J Tessone. Proof-of-work cryptocurrency mining: a statistical approach to fairness.
In 2020 IEEE/CIC International Conference on Communications in China (ICCC Workshops), pages 156–161. IEEE, 2020.
[12] Ingo L¨utkebohle. Y Charts Ethereum Uncle Rate. https://ycharts.com/indicators/ethereum_uncle_rate, 2022. [On-

line; accessed 14-March-2022].

[13] D. Mingxiao, M. Xiaofeng, Z. Zhe, W. Xiangwei, and C. Qijun. A review on consensus algorithm of blockchain. In 2017

IEEE International Conference on Systems, Man, and Cybernetics (SMC), pages 2567–2572, Oct 2017.

[14] Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash system. 2009.
[15] Till Neudecker and Hannes Hartenstein. Short paper: An empirical analysis of blockchain forks in bitcoin. pages 1–8, 03

2019.

[16] Sehyun Park, Seongwon Im, Youhwan Seol, and Jeongyeup Paek. Nodes in the bitcoin network: Comparative measurement

study and survey. IEEE Access, 7:57009–57022, 2019.

[17] Boccaletti S, Latora V, Moreno Y, Chavez M, and Hwang D. Complex networks: Structure and dynamics. Physics Reports,

424(4-5):175–308, February 2006.

[18] Muhammad Saad, Jeﬀrey Spaulding, Laurent Njilla, Charles A Kamhoua, D Nyang, and Aziz Mohaisen. Overview of

attack surfaces in blockchain. Blockchain for distributed systems security, pages 51–66, 2019.

[19] Caspar Schwarz-Schilling, Sheng-Nan Li, and Claudio J Tessone. Agent-based modelling of strategic behavior in pow
protocols. In 2021 Third International Conference on Blockchain Computing and Applications (BCCA), pages 111–118.
IEEE, 2021.

[20] Yahya Shahsavari, Kaiwen Zhang, and Chamseddine Talhi. A theoretical model for fork analysis in the bitcoin network.
[21] Yahya Shahsavari, Kaiwen Zhang, and Chamseddine Talhi. Performance modeling and analysis of the bitcoin inventory

protocol. 2019.

[22] Li Sheng-Nan, Yang Zhao, and J Tessone Claudio. Mining blocks in a row: a statistical study of fairness in bitcoin mining.

In 2020 IEEE International Conference on Blockchain and Cryptocurrency (ICBC), pages 1–4, May 2020.

9

(a) Erdos graphs with |V | = 1000

(b) SBM graphs with |V | = 1000

(c) Barab´asi-Albert graphs with |V | = 1000

FIG. 1: Distribution of cluster dimensions at time t∗ = 4 for the diﬀerent networks

[23] Florian Spychiger, Paolo Tasca, and Claudio J Tessone. Unveiling the importance and evolution of design components

through the “tree of blockchain”. Frontiers in Blockchain, 3:613476, 2021.

[24] Nicholas Stifter, Philipp Schindler, Aljosha Judmayer, Alexei Zamyatin, Andreas Kern, and Edgar Weippl. Echoes of the

past: Recovering blockchain metrics from merged mining. pages 1–23, 02 2019.

[25] Paolo Tasca and Claudio J. Tessone. A taxonomy of blockchain technologies: Principles of identiﬁcation and classiﬁcation.

Ledger, 4, Feb. 2019.

[26] Claudio Tessone, Paolo Tasca, and Flavio Iannelli. Stochastic modelling of blockchain consensus. Available at SSRN

3865040, 2021.

Figures

10

(a) Erd˝os network with |V | = 1000

(b) Stochastic Block network with |V | = 1000

FIG. 2: Probability of winning for diﬀerent values of closeness centrality quantile q and diﬀerent diﬀerence in time
∆t in diﬀerent graphs.

(c) Barab´asi-Albert network with |V | = 1000

11

FIG. 3: Distribution of closeness centrality with |V | = 1000

