Blockchain-based Federated Learning for Industrial
Metaverses: Incentive Scheme with Optimal AoI

Jiawen Kang, Dongdong Ye, Jiangtian Nie, Jiang Xiao, Xianjun Deng, Siming Wang,
Zehui Xiong, Rong Yu, and Dusit Niyato

1

2
2
0
2

g
u
A
8
2

]
T
G
.
s
c
[

2
v
4
8
3
7
0
.
6
0
2
2
:
v
i
X
r
a

Abstract—The emerging industrial metaverses realize the map-
ping and expanding operations of physical industry into virtual
space for signiﬁcantly upgrading intelligent manufacturing. The
industrial metaverses obtain data from various production and
operation lines by Industrial Internet of Things (IIoT), and thus
conduct effective data analysis and decision-making, thereby en-
hancing the production efﬁciency of the physical space, reducing
operating costs, and maximizing commercial value. However,
there still exist bottlenecks when integrating metaverses into IIoT,
such as the privacy leakage of sensitive data with commercial
secrets, IIoT sensing data freshness, and incentives for sharing
these data. In this paper, we design a user-deﬁned privacy-
preserving framework with decentralized federated learning for
the industrial metaverses. To further improve privacy protection
industrial metaverse, a cross-chain empowered federated
of
learning framework is further utilized to perform decentralized,
secure, and privacy-preserving data training on both physical
and virtual spaces through a hierarchical blockchain architec-
ture with a main chain and multiple subchains. Moreover, we
introduce the age of information as the data freshness metric and
thus design an age-based contract model to motivate data sensing
among IIoT nodes. Numerical results indicate the efﬁciency of the
proposed framework and incentive mechanism in the industrial
metaverses.

Index Terms—Metaverse, blockchain, federated learning, con-

tract theory, incentive mechanism, age of information

I. INTRODUCTION

As the current wave of the industrial revolution, the digital
transformation of manufacturing industry has taken place. Dif-
ferent from the traditional industrial digitization to improve the
physical space through digital operations, industrial metaverse

J. Kang, D. Ye, S. Wang and R. Yu are with School of Automation,
Guangdong University of Technology, China. J. Nie and D. Niyato are
with School of Computer Science and Engineering, Nanyang Technological
University, Singapore. J. Xiao and X. Deng are respectively with School of
Computer Science and Technology and the Department of Cyber Science
and Engineering, Huazhong University of Science and Technology, China.
Z. Xiong is with Pillar of Information Systems Technology and Design,
Singapore University of Technology and Design, Singapore.

This research is supported by National Key R&D Program of China (No.
2020YFB1807802), NSFC under grant No. 62102099, Open Research Project
of the State Key Laboratory of Industrial Control Technology, Zhejiang
University, China (No. ICT2022B12), and is also supported, in part, by the
programme DesCartes and is supported by the National Research Foundation,
Prime Minister’s Ofﬁce, Singapore under its Campus for Research Excellence
and Technological Enterprise (CREATE) programme, the National Research
Foundation, Singapore under the AI Singapore Programme (AISG) (AISG2-
RP-2020-019), and Singapore Ministry of Education (MOE) Tier 1 (RG16/20),
and is supported by the National Research Foundation, Singapore and Info-
comm Media Development Authority under its Future Communications Re-
search & Development Programme, and is also supported by the SUTD SRG-
ISTD-2021-165, the SUTD-ZJU IDEA Grant (SUTD-ZJU (VP) 202102), and
the SUTD-ZJU IDEA Seed Grant (SUTD-ZJU (SD) 202101). (Corresponding
author: Zehui Xiong, zehui xiong@sutd.edu.sg)

creates a virtual space by transforming the physical space
based on the real interaction and persistence [1]. One of the
most potential applications of industrial metaverse is 3D simu-
lation, modeling, and architectural design [2]. For instance, an
open platform called Omniverse has been built by NVIDIA
[3]. Multi-user real-time 3D simulation and visualization of
physical entities and properties are supported in a shared
virtual space for industrial applications, such as automotive
design. To build an industrial metaverse, the Industrial Internet
of Things (IIoT) play an essential and foundational role in
networking and communication. The IIoT nodes collect a large
amount of sensing data to bridge the virtual space and physical
space, thus providing users with a completely real, lasting,
and smooth interactive experience in the industrial metaverses
[4]. While the industrial metaverse requires powerful hardware
equipments, rich network resources and advanced Artiﬁcial
Intelligence (AI) technologies as the base. By collaboratively
applying cutting-edge technologies, such as Federated Learn-
ing (FL), blockchain and digital twins, the industrial metaverse
for IIoT can signiﬁcantly modernize digital operations in the
current digital revolution [1].

Although industrial metaverse brings amazing changes to
industrial areas, this technology is still in its infancy. There
exist challenging bottlenecks for wide deployment and future
popularization: 1) The industrial metaverse is prone to leaking
IIoT nodes’ privacy. Since the industrial metaverse will collect
more data from IIoT nodes than ever before, the consequences
will be worse than ever if IIoT nodes’ data is not effectively
protected [2]. Thereby, due to privacy concerns, IIoT nodes
may be unwilling to share data with private information in
industrial metaverses, which hinders the comprehensive data
analysis using machine learning technologies for intelligence
improvement of the industrial metaverse. 2) To ensure im-
mersive services in the industrial metaverse, fresh sensing
data is signiﬁcantly important to enhance the service quality
of time-sensitive services. Since the IIoT nodes are energy-
constrained, they can not respond to each data request of
learning-based metaverse services [5]. As a result, the IIoT
nodes may not provide fresh data or join metaverse services
without a reasonable incentive mechanism. It is still challeng-
ing how to incentivize IIoT nodes with fresh data in industrial
metaverse services.

To address the above challenges, in this paper, we ﬁrst apply
federated learning and cross-chain technologies to design a
user-deﬁned privacy-preserving framework for sensing data
analysis in industrial metaverses. To improve service quality of
industrial metaverse, Age of Information (AoI) is introduced

 
 
 
 
 
 
2

as the data-freshness metric of sensing data for industrial
metaverse services. We then design an age-based contract
model to incentivize data sensing among IIoT nodes. The main
contributions of this paper are summarized as follows:

• We design a new privacy-preserving framework for in-
dustrial metaverse, in which IIoT nodes can customize
to upload non-sensitive sensing data to the virtual space
for learning-based metaverse tasks, and keep the sensitive
sensing data in the physical space for privacy protection.
• To further improve privacy protection of industrial meta-
verse, a cross-chain empowered FL framework is further
utilized to perform decentralized, secure, and privacy-
preserving data training on both physical and virtual
spaces through a hierarchical blockchain architecture with
a main chain and multiple subchains. The cross-chain
interaction is executed to ﬁnish secure model aggregation
and update.

• We apply Age of Information as the data-freshness metric
of sensing data to optimize the time-sensitive learning
tasks in industrial metaverses, along with designing an
optimal age-based contract to incentivize data sensing
among IIoT nodes for industrial metaverse.

The rest of this paper is organized as follows. The pro-
posed cross-chain empowered FL for industrial metaverse is
introduced in Section II. Problem formulation and solutions for
contract-based incentive mechanism are presented in Section
III and Section IV, respectively. Section V shows the perfor-
mance evaluation of the proposed incentive mechanism and
Section VI concludes this paper ﬁnally.

II. CROSS-CHAIN EMPOWERED FEDERATED LEARNING
FRAMEWORK FOR INDUSTRIAL METAVERSES

A. User-deﬁned Privacy-preserving Training Framework

As shown in Fig. 1, a hierarchical blockchain framework for
decentralized federated learning consists of a main chain and
multiple subchains. The main chain works as the parameter
server and the subchains manage local model updates gener-
ated by IIoT nodes acting as workers. There exists a physical
space and a virtual space in the framework. Here, IIoT nodes
in the physical space can be sensors in smart manufacturing
factories or the inspection drones in smart grids. Multiple IIoT
nodes in the physical space are managed by a subchain P
during training. However, due to the privacy concerns, these
physical workers may be not willing to upload all privacy-
sensitive data to the industrial metaverse directly.

The virtual space is established on i) collected data from the
IIoT nodes in the physical space and ii) the online generated
data during node interaction or data analysis. A virtual node in
the industrial metaverse is built by mapping and synchronizing
the data of a physical IIoT node to the virtual space. Multiple
virtual nodes as model training workers are managed by a
subchain V in the virtual space. Since the physical nodes are
reluctant to upload all data with privacy-sensitive information
to the virtual space in the industrial metaverse. The datasets
of virtual nodes are incomplete. If a learning task is only
trained by the virtual nodes, the accuracy of the learning
model will be decreased and the generalization ability will be

poor. To this end, a user-deﬁned privacy-preserving training
framework is designed with FL for industrial metaverses,
in which IIoT nodes can customize to upload non-sensitive
sensing data to the virtual space for learning-based metaverse
tasks or applications, and keep the sensitive sensing data
locally in the physical space for strong privacy protection. The
FL technology breaks data islands between the virtual space
and physical space, and enables collaborative learning among
the virtual and physical nodes.

B. Cross-chain Interaction for Decentralized FL

To further improve privacy protection of industrial meta-
verse, a cross-chain empowered FL framework is further
designed to perform decentralized, secure, and privacy-
preserving data training on both physical and virtual spaces
through the hierarchical blockchain framework with a main
chain and multiple subchains [6]. The cross-chain interaction
is executed to ﬁnish secure model aggregation and update
[7], [8]. In Fig. 1, the workﬂow of the proposed cross-chain
empowered FL framework is presented as follows.

1) Step 1: Publish a federated learning task: Each task
publisher (e.g., a smart manufacturing company) sets up a
learning task (e.g., anomaly prediction of product lines) and
sends the federated learning request to the main chain M (Step
a).

2) Step 2: Allocate the task to the workers: The main chain
M sends the learning task to the relay chain that is a cross-
chain management platform [9]. This platform is responsible
for forwarding, verifying data (e.g., block data), and bridging
connections among blockchains. The relay chain ﬁrst veriﬁes
the task information and sends the learning task to the workers’
subchain V of the virtual space and the subchain P of the
physical space, respectively (Step b).

3) Step 3: Perform a learning task in both virtual space and
physical space: In the physical space, legitimate edge devices
(e.g., industrial robots, IIoT sensors) can join a training task
and perform local model training on their local datasets. Each
dataset is generated from personal applications (e.g., product
line detection services) or from the surrounding environment
(e.g., sensors on smart manufacturing factories). Each node
trains a given global model from its task publisher and
generates local model updates (Step c). Similarly, in the virtual
space, the corresponding legitimate virtual nodes as workers
also participate in the learning task and train the given global
model at the same time.

4) Step 4: Aggregate model and update global model:
When the nodes in the virtual and physical spaces complete
the training task, the updated local models are veriﬁed and
uploaded to their subchains ﬁrstly for secure management.
These models are checked by the relay chain and transmitted to
the main chain (Steps d, e). Then, the updated local models are
aggregated on the main chain to generate a new global model
M (Step f ). Finally, the workers download the latest global
model from their subchains and train the new model for the
next iteration until satisfying the given accuracy requirements.
The ﬁnal global model is sent back to the task publisher, and
the task publisher sends the payments to the workers according
to their contributions [8].

Data

Data

Task publisher

a. Publish a  federated 
learning task

IIoT nodes

3

c. Perform local 
model training

d. Upload local 
model parameters

Subchain V

Virtual space

Physical space

Subchain P

d. Upload local 
model parameters

c. Perform local 
model training

Edge devices

Data

Data

Cross-chain 
Management Platform

f. Aggregate local 
models and generate 
new global model

Main chain M

b. Allocate the task to workers 
through the relay chain

e. Relay updated model parameters in a 
cross-chain management platform

Relay chain

Fig. 1: A cross-chain empowered federated learning framework for the industrial metaverses.

III. PROBLEM FORMULATION

In this section, to incentivize data sharing among IIoT nodes
for time-sensitive FL tasks, we ﬁrst introduce Age of Infor-
mation (AoI) as the metric to evaluate the data freshness. We
then formulate the utility functions of both workers and service
provider (i.e., the task publisher) in industrial metaverse.

We consider a mixed reality based remote monitoring case
as an example of industrial metaverse scenarios with a service
provider and M workers. The service provider acting as task
publisher motivates M workers to participate in learning tasks.
The average time of a global model iteration in the cross-chain
empowered FL consists of three parts: 1) the average time
of completing a global model iteration of federated learning
(denoted as tu); 2) the average time of completing a consensus
process for a global model iteration among blockchains (de-
noted as tc); 3) the average time of collecting and processing
the data for model training (denoted as cmt, cm ∈ N, and
t = tu + tc). We consider that the federated learning is
synchronous, and tu is the same for all the workers [10],
[11]. tc is the same for each global model iteration because
of using the same relay chain [12]. For each worker m, the
time of collecting and processing the data for model training
is a constant [10], [11].

A. Age of Information and Service Latency for Industrial
Metaverse

Recently, Age of Information (AoI) has emerged as a metric
to quantify information freshness at the destination, which is
a promising metric to improve performance of time-critical
applications and services, especially for industrial monitoring
and sensor networks [11]. In FL based remote monitoring,
without loss of generality, we consider a model training request
arrives at the beginning of each epoch. We focus on the AoI
and service latency of the FL with data caching buffer in
workers [10], [11]. Worker m periodically updates its cached

data. The periodic interval θm is independent of the period in
which the request arrives, which is denoted as

θm = cmt + amt, a ∈ N,

(1)

where am is the duration time from ﬁnishing data collection
to the beginning of the next phase of data collection, which
includes multiple time periods, such as service time period or
idle time period [13].

According to [11], if an FL training request is raised at the
zth period belonging to the data collection phase, the service
latency is cmt + t − (z − 1)t. Otherwise, if a request is raised
at any remaining time period in the update cycle, the service
latency is t. Thus, the average service latency Dm [11] of the
blockchain-based FL for worker m is

Dm =

cm
cm + am (cid:20)

cmt
2

(cm + 3)
(cid:21)

+

amt
cm + am

.

(2)

If the FL request is raised during the data collection phase
or at the beginning of phase (cm + 1)t, the AoI is t which is
the minimum value. Otherwise, if a request is raised at period
lt, the AoI will be [l − (cm + 1) + 1]t, where l ≥ (cm + 2)t.
Thus, the average AoI is denoted as

Am =

t
cm + am (cid:20)

cm + 1 +

(am − 1)(am + 2)
2

.

(3)

(cid:21)

When t is ﬁxed, the update cycle θm is affected by cm
or am. In this paper, we consider a general case that has an
adjustable update phase and a ﬁxed idle phase of workers. In
other words, when am = a is ﬁxed, we have cm = θm
t − a.
We replace cm with θm. Thus, Dm and Am are simpliﬁed to

Dm(θm) =

=

cm
cm + am (cid:20)
(θm − at)3
2tθm

cmt
2

+

+

(cm + 3)
(cid:21)
3(θm − at)2
2θm

amt
cm + am
at2
θm

,

+

(4)

4

and

Am(θm) =

=

t
cm + am (cid:20)
tθm
+
θm − at

cm + 1 +

(am − 1)(am + 2)
2

t2
θm − at

a2 − a
2

.

(cid:19)

(cid:18)

The case is established under θm < at, ∀m ∈ M . Since θm =
amt+ cmt, θm > amt always holds. When θm > at, Dm(θm)
is a convex function with respect to θm. When θm > at and
a > 1, Am(θm) is also a convex function with respect to θm.

B. Worker Utility

The utility of worker m is the difference between the
received monetary reward Rm and its cost Cm of participating
in FL training task.

Um = Rm − Cm.

Referring to [13], Cm is deﬁned as

Cm =

δm
θm

,

(6)

(7)

where δm is the unit update cost and is related to data
collection, computation, transmission, and consensus [14].

Thus, the utility of worker m becomes

Um = Rm −

δm
θm

.

(8)

Since the service provider does not know the unit update
cost of each worker, it can sort the workers into discrete
types according to statistical distributions of the worker types
from historical data, and thus optimize the expected utility of
the service provider. Speciﬁcally, we divide the workers into
different types and denote the n-th type worker as δn. The
workers can be classiﬁed into a set ∆ = {δn : 1 ≤ n ≤ N } of
N types. In a non-decreasing order, the workers’ types are
sorted as: δ1 ≥ δ2 ≥ · · · ≥ δN . For the convenience of
explanation, the worker with type n is called the type-n. The
probability that a worker belongs to a certain type-n is Qn
and we have
n∈N Qn = 1. Thus, the utility of the type-n
worker can be rewritten as

P

service provider’s satisfaction function obtained from the type-
n worker is deﬁned as follows,

(cid:21)

(5)

Gn = β log (gn(fn)) ,

(11)

where β is the unit proﬁt for the satisfaction, and gn is the
performance obtained from the type-n worker. Referring to
[13], gn is deﬁned as

g(fn) = αn(K − An) + (1 − αn)(H − Dn),

(12)

where αn is the preference factor on AoI for the service
provider to the type-n worker. The larger αn means the service
provider prefers the AoI more. K and H are the maximum
tolerant AoI and service latency, respectively. According to the
types of workers, the utility of the service provider is

Us =

M Qn(Gn − Rn).

n∈N
X

(13)

IV. OPTIMAL CONTRACT DESIGN

A. Contract Formulation

Noted that the types of workers are private information that
is not visible to the service provider, namely, there exists infor-
mation asymmetry between workers and the service provider.
Under the information asymmetry, the service provider uses
contract theory to ﬁnd out the best workers. Here, the service
provider is the leader for designing contracts, and each worker
selects the best contract item according to its type. The con-
tract item can be denoted as Φ = {(γn, fn, Rn), n ∈ N }, with
item (γn, fn, Rn) for type-n worker. In order to ensure that
each worker automatically selects the contract item designed
for its speciﬁc type, the feasible contract must satisfy the
following Incentive Compatibility (IC) constraint:

fn
γn
and the Individual Rationality (IR) constraint:

≥ Ri −

, ∀n, i ∈ N,

Rn −

fi
γn

(14)

Rn −

fn
γn

≥ 0, ∀n ∈ N.

(15)

Un = Rn −

δn
θn

.

(9)

With the IC and IR constraints, the problem of maximizing
the expected utility of the service provider is formulated as

To simplify the description, we deﬁne the update frequency as
fn = 1
δn . Thus, the the utility of the type-n worker
can be rewritten as

θ , γn = 1

Problem 1: max
f ,R
IC Constraints in(14), IR Constraints in(15),

s.t.

Us

(16)

Un = Rn −

fn
γn

.

(10)

where f = [fn]1×N , and R = [Rn]1×N . There are N IR
constraints and N (N − 1) IC constraints, making it quite
difﬁcult to solve Problem 1 directly (16).

The workers’ types, i.e., δ1 ≥ δ2 ≥ · · · ≥ δN is rewritten as
γ1 ≤ γ2 ≤ · · · ≤ γN .

C. Service Provider Utility

Note that a large AoI and a large service latency lead
to a bad immersive experience and also reduce the service
provider’s satisfaction in industrial metaverses [15]. Thus, the

B. Optimal Contract Solution

We simplify the Problem 1 (16) through the following steps.
Firstly, the IR and IC constraints can be reduced by Lemma
1. Then, the service provider’s optimal reward R∗
n is derived
as shown in Lemma 2. Finally, the optimal contract f ∗
n can
be found. More speciﬁcally,

Algorithm 1: Finding Optimal Contract
for n = 1, . . . , N do

Initialize the iteration index z = 0, the step size ϕ,
the empty vector U s,n, fmin = f z
fmax
while f z

n = 10−5 and

n < fmax do
Compute Us,n(f z
n)
Set U s,n(z) = Us,n(f z
n)
f z
n = f z
n + ϕ
z = z + 1

Get the optimal update frequency f ⋆
worker by using the index of the maximum value
in U s,n

n for type-n

TABLE I: Parameter Setting in the Simulation.

5

Parameter
Time taken for completing a
global iteration and the consensus
process t
Unit of time taken for data
collection and process c
Duration from ﬁnishing data
collection to the beginning of the
next data collection phase a
Unit proﬁt for the satisfaction β
Maximum tolerant AoI K
Maximum tolerant latency H

Setting
2 s

[1,15]

[1,15]

20
200 s
50 s

The optimal reward in (17) is rewritten as

′

Get the vector of the optimal update frequency
n, . . . , f ⋆
f ⋆
if f ⋆

does not satisfy the monotonicity condition then

1 , . . . , f ⋆

= {f ⋆

N }

′

Use ”Bunching and Ironing” algorithm [16] to
adjust f ⋆

and output f ⋆

′

′

if f ⋆

f ⋆ = f ⋆

′

satisﬁes the monotonicity condition then

for n = 1, . . . , N do

Based on Eq. (18), we will compute the optimal
reward R⋆
n

′

Get the vector of the optimal reward
R⋆
= {R⋆
Output f ⋆ and R⋆

n, . . . , R⋆

1, . . . , R⋆

N }

Lemma 1: With weakly incomplete information, a feasible

≥ 0 ;

contract must satisfy the following three conditions:
(a.1)R1 − f1
γ1
(a.2)R1 ≤ · · · ≤ RN and f1 ≤ · · · ≤ fN ;
γn ≥ Rn−1 − fn−1
(a.3)Rn − fn
γn ≥ Rn+1 − fn+1
(a.4)Rn − fn

γn , ∀n ∈ {2, . . . , N };
γn , ∀n ∈ {1, . . . , N − 1}.

proof 1: Please refer to [17].
Constraint (a.1) ensures that the utility of each worker
receiving the contract item of its type is non-negative, which
corresponds to the IR constraints. Constraints (a.2), (a.3) and
(a.4) are related to IC constraints. Constraint (a.2) shows
that a worker type with a lower cost can provide the service
provider with a lower update cycle, while getting more rewards
from the service provider. Constraints (a.3) and (a.4) show
that the IC conditions can be reduced as the Local Downward
Incentive Compatibility (LDIC) and the Local Upward Incen-
tive Compatibility (LUIC) with monotonicity, respectively.

Based on Lemma 1, we can obtain the optimal rewards for

any update cycle by the following Lemma 2:

Lemma 2: For a feasible set of update frequency f satisfying
f1 ≤ f2 ≤ · · · ≤ fn ≤ · · · ≤ fN , we can obtain the optimal
reward by the following formula

R∗

n =

(

f1
, n = 1
γ1
Rn−1 + fn

γn − fn−1

γn , otherwise.

(17)

proof 2: Please refer to [17].

R∗

n =

f1
γ1

n

+

∆i, n ∈ N,

(18)

i=1
X
γi − fi−1
where ∆1 = 0 and ∆i = fi
,i = 2, . . . , N . We substitute
γi
the optimal rewards (18) into the service provider’s utility
and we get the service provider’s utility in terms of f , which
provide the analysis of the optimal update cycle f . Thus, the
optimization problem (16) is rewritten as

Problem 2: max

f

Us

s.t.

f1 ≤ · · · ≤ fN ,

(19)

n∈N Us,n =
where Us =
γn − 1
1
bn = Qn
γn +
P
with n = N .
(cid:16)

γn+1

(cid:17) P

n∈N M (QnGn − bnfn). Here,
N
j=n+1 Qj with n < N , bn = Qn
P

γn

Noted that Us is not a concave function. Thus, we propose
a greedy algorithm to ﬁnd the optimal contract. The detail
of the greedy algorithm is as shown in Algorithm 1. In
order to deploy the algorithm efﬁciently, we could evaluate
its computational complexity, and ﬁnd that its computational
fmax−fmin
). The result indicates
complexity is O(N log
ϕ
that the computational resource consumed by Algorithm 1
is at a moderate level, so it is practical to adopt the proposed
algorithm to the blockchain-based FL applications.

(cid:16)

(cid:17)

r
e
k
r
o
w

f
o
y
t
i
l
i
t

U

60

40

20

0

-20

-40

-60

Type1
Type4
Type7
Type10

2

4
Types of worker

6

8

10

Fig. 2: Utilities of workers under different types.

 
 
940

920

900

880

r
e
d
i
v
o
r
P
e
c
i
v
r
e
S

f
o
y
t
i
l
i
t

U

860

2

0.02

0.01

0

0.8

6

s
e

l

c
y
C
e
t
a
d
p
U

f
o
r
e
b
m
u
N

r
e
d
i
v
o
r
P
e
c
i
v
r
e
S

f
o
y
t
i
l
i
t

U

600

500

400

300

200

100

r
e
k
r
o
W

f
o
s
e
i
t
i
l
i
t

U

0

2

CA
CC
CS

4

6

8

10

12

Duration Parameter a

(b) Utilities of workers.

CA
CC
CS

4

6

8

10

12

Duration Parameter a
(a) Utility of the service provider.

Fig. 3: Utility vs. Duration Parameter a.

d
r
a
w
e
R

8

6

4

2

0

0.8

10987

0.6

0.4

0.6

0.4

Preference Factor α

0.2

654321

Type

0.2
Preference Factor α

10987

654321

Type

(a) Number of update cycles.

(b) Reward.

10

5

0

0.8

0.6

0.4

Preference Factor α

0.2

s
r
e
k
r
o
W

f
o
s
e
i
t
i
l
i
t

U

6

4

2

0

0.8

0.6

0.4

Preference Factor α

0.2

10987

654321

Type

10987

654321

Type

(c) Utility of the service provider.

(d) Utilities of workers.

Fig. 4: Preference Factor α vs. Contract Items and Utilities.

 
 
 
 
 
 
 
 
 
 
 
 
 
7

V. NUMERICAL RESULTS

VI. CONCLUSION

We implement the proposed cross-chain empowered FL
framework by using PySyft and the Fisco Bcos blockchain
with a cross-chain platform named “WeCross”. For the sim-
ulation setting of the proposed incentive mechanism, we
consider M = 20 workers and the type-n follows the uniform
distribution that is distributed in the range of [0.001, 0.01].
Similar to [11], [13], [14], the main parameters are listed in
Table I. We compare the proposed Contract-based incentive
mechanism with Asymmetric information (CA) with other
incentive mechanisms: i) Contract-based incentive mechanism
with Complete information (CC) that
types
of workers are known by the service provider, ii) Contract-
based incentive mechanism with Social maximization (CS)
[18] that the service provider maximizes the social welfare
under information asymmetry [19].

the data cost

Fig. 2 shows the feasibility of contract

items. We can
observe that, the utilities of workers are increasing with the
increasing types of the workers. As expected, each worker
selects the contract item corresponding to its own type that
exactly maximizes its own utility. For example, the type-4
workers obtain the optimal utility only when they choose the
type-4 contract. The utilities of the workers with higher types
are larger than those with lower types. Therefore, the results
in Fig. 2 validate that the contract items meet the IC and IR
conditions in the proposed schemes [19].

Fig. 3 shows the utilities of the service provider and the
workers in terms of duration parameter a under different incen-
tive mechanisms. From Fig. 3, we can observe that the utility
of the service provider ﬁrst increases and then decreases with
the increasing duration parameter a. It means that there exists
an optimal duration parameter a for the workers. For a given
parameter a, the service provider has the best utility under
the CC mechanism with complete information, in which the
service provider can design contract items to only maximize its
beneﬁt and set the beneﬁt of workers as zero, which is not so
practical in the industrial metaverse scenarios. The proposed
CA mechanism is practical in the real world and has better
utility than that of the CS mechanism. Meanwhile, the workers
obtain the optimal utilities under the CS mechanism. And the
utilities of the workers under the CA mechanism are better
than those under the CC mechanism.

Fig. 4 shows the effect of preference factor α on contract
items and utilities under adjustable update phase with ﬁxed
idle phase of workers. For a ﬁxed type, the increasing α
brings a larger number of update cycles and a larger reward.
The reason is that the growing α indicates that the service
provider prefers to small AoI than service delay, which causes
the increase of the update phase. The increase of the update
phase leads to an improved reward and a larger number of
update cycles. As a result, the utilities of the workers also
grow. Moreover, the increasing α improves the utility of the
service provider as well. The reason is that α has a linearly
increasing relationship with the utility of the service provider
when K − An > H − Dn, ∀n ∈ N . Conversely, α has a
linearly decreasing relationship with the utility of the service
provider when K − An < H − Dn, ∀n ∈ N .

In this paper, we studied data privacy protection issues and
incentive mechanism design for the industrial metaverse. We
proposed a privacy-preserving framework for data training by
federated learning on both virtual space and physical space of
the industrial metaverse. Cross-chain technology is utilized to
design a decentralized FL architecture with a main chain and
multiple subchains for secure model training. Furthermore, to
improve service quality of time-sensitive learning tasks, we in-
troduce age of information as the metric of data freshness and
design an AoI based contract theory model for incentivizing
IIoT nodes contributing fresh sensing data. Numerical results
show the efﬁciency of the proposed framework and incentive
mechanism for the industrial metaverses.

REFERENCES

[1] T. Huynh-The, Q.-V. Pham, X.-Q. Pham, T. T. Nguyen, Z. Han, and
D.-S. Kim, “Artiﬁcial intelligence for the metaverse: A survey,” arXiv
preprint arXiv:2202.10336, 2022.

[2] Y. Wang, Z. Su, N. Zhang, D. Liu, R. Xing, T. H. Luan, and X. Shen,
“A survey on metaverse: Fundamentals, security, and privacy,” arXiv
preprint arXiv:2203.02662, 2022.

[3] M. Hummel and K. v. Kooten, “Leveraging nvidia omniverse for in
situ visualization,” in International Conference on High Performance
Computing. Springer, 2019, pp. 634–642.

[4] H. Ning, H. Wang, Y. Lin, W. Wang, S. Dhelim, F. Farha, J. Ding, and
M. Daneshmand, “A survey on metaverse: the state-of-the-art, technolo-
gies, applications, and challenges,” arXiv preprint arXiv:2111.09673,
2021.

[5] L. Corneo, C. Rohner, and P. Gunningberg, “Age of information-aware
scheduling for timely and scalable internet of things applications,” in
IEEE INFOCOM 2019-IEEE Conference on Computer Communications.
IEEE, 2019, pp. 2476–2484.

[6] J. Kang, X. Li, J. Nie, Y. Liu, M. Xu, Z. Xiong, D. Niyato, and
Q. Yan, “Communication-efﬁcient and cross-chain empowered federated
intelligence of things,” IEEE Transactions on
learning for artiﬁcial
Network Science and Engineering, pp. 1–1, 2022.

[7] H. Jin and J. Xiao, “Towards trustworthy blockchain systems in the
era of “internet of value”: development, challenges, and future trends,”
Science China Information Sciences, vol. 65, no. 5, pp. 1–11, 2022.
[8] H. Jin, X. Dai, J. Xiao, B. Li, H. Li, and Y. Zhang, “Cross-cluster
federated learning and blockchain for internet of medical things,” IEEE
Internet of Things Journal, vol. 8, no. 21, pp. 15 776–15 784, 2021.
[9] A. Siriweera and K. Naruse, “Internet of cross-chains: Model-driven
cross-chain as a service platform for the internet of everything in smart
city,” IEEE Consumer Electronics Magazine, 2021.

[10] W. Y. B. Lim, Z. Xiong, C. Miao, D. Niyato, Q. Yang, C. Leung,
and H. V. Poor, “Hierarchical incentive mechanism design for federated
machine learning in mobile networks,” IEEE Internet of Things Journal,
vol. 7, no. 10, pp. 9575–9588, 2020.

[11] W. Y. B. Lim, Z. Xiong, J. Kang, D. Niyato, C. S. Leung, C. Miao, and
S. Shen, “When information freshness meets service latency in federated
learning: A task-aware incentive scheme for smart industries,” IEEE
Transactions on Industrial Informatics, 2020.

[12] M. Shen, H. Liu, L. Zhu, K. Xu, H. Yu, X. Du, and M. Guizani,
“Blockchain-assisted secure device authentication for cross-domain in-
iot,” IEEE Journal on Selected Areas in Communications,
dustrial
vol. 38, no. 5, pp. 942–954, 2020.

[13] X. Zhou, W. Wang, N. U. Hassan, C. Yuen, and D. Niyato, “Towards
small aoi and low latency via operator content platform: A contract
theory based pricing,” IEEE Transactions on Communications, 2021.

[14] S. Zhang, J. Li, H. Luo, J. Gao, L. Zhao, and X. S. Shen, “Towards
fresh and low-latency content delivery in vehicular networks: An edge
caching aspect,” in 2018 10th International Conference on Wireless
Communications and Signal Processing (WCSP).
IEEE, 2018, pp. 1–6.
[15] Y. Jiang, J. Kang, D. Niyato, X. Ge, Z. Xiong, and C. Miao, “Reliable
coded distributed computing for metaverse services: Coalition formation
and incentive mechanism design,” arXiv preprint arXiv:2111.10548,
2021.

8

[16] L. Gao, X. Wang, Y. Xu, and Q. Zhang, “Spectrum trading in cognitive
radio networks: A contract theoretic modeling approach,” IEEE Journal
on Selected Areas in Communications, vol. 29, no. 4, pp. 843–855, Apr
2011.

[17] N. Ding, Z. Fang, and J. Huang, “Optimal contract design for efﬁcient
federated learning with multi dimensional private information,” IEEE
Journal on Selected Areas in Communications, vol. 39, no. 1, pp. 186–
200, 2020.

[18] Z. Xiong, J. Kang, D. Niyato, P. Wang, H. V. Poor, and S. Xie, “A multi
dimensional contract approach for data rewarding in mobile networks,”
IEEE Transactions on Wireless Communications, vol. 19, no. 9, pp.
5779–5793, 2020.

[19] D. Ye, X. Huang, Y. Wu, and R. Yu, “Incentivizing semi-supervised
vehicular federated learning: A multi-dimensional contract approach
with bounded rationality,” IEEE Internet of Things Journal, pp. 1–1,
2022.

