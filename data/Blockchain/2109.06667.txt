A Blockchain based Federated Learning for
Message Dissemination in Vehicular Networks

Ferheen Ayaz, Graduate Student Member, IEEE, Zhengguo Sheng, Senior Member, IEEE, Daxin Tian, Senior
Member, IEEE and Yong Liang Guan, Senior Member, IEEE

1

1
2
0
2

p
e
S
1
1

]

R
C
.
s
c
[

1
v
7
6
6
6
0
.
9
0
1
2
:
v
i
X
r
a

Abstract—Message exchange among vehicles plays an impor-
tant role in ensuring road safety. Emergency message dissem-
ination is usually carried out by broadcasting. However, high
vehicle density and mobility usually lead to challenges in message
dissemination such as broadcasting storm and low probability of
packet reception. This paper proposes a federated learning based
blockchain-assisted message dissemination solution. Similar to
the incentive-based Proof-of-Work consensus in blockchain, ve-
hicles compete to become a relay node (miner) by processing the
proposed Proof-of-Federated-Learning (PoFL) consensus which is
embedded in the smart contract of blockchain. Both theoretical
and practical analysis of the proposed solution are provided.
Speciﬁcally, the proposed blockchain based federated learning
results in more number of vehicles uploading their models in a
given time, which can potentially lead to a more accurate model
in less time as compared to the same solution without using
blockchain. It also outperforms the other blockchain approaches
for message dissemination by reducing 65.2% of time delay
in consensus,
improving at least 8.2% message delivery rate
and preserving privacy of neighbor vehicle more efﬁciently. The
economic model to incentivize vehicles participating in federated
learning and message dissemination is further analyzed using
Stackelberg game model.

Index Terms—blockchain, federated learning, smart contract.

I. INTRODUCTION

T RADITIONAL Vehicular Ad-hoc NETwork (VANET) is

growing into Internet-of-Vehicles (IoV) to manage large
amounts of data transmission, computation and storage and
to meet the increasing requirements of infotainment and road
safety [1]. An IoV enables Vehicle-to-Everything (V2X) com-
munications including Vehicle-to-Vehicle (V2V) and Vehicle-
to-Infrastructure (V2I) communications. V2I communication
usually refers to an infrastructure dependent VANET, where
a cellular base station or a Road Side Unit (RSU) is used to
provide a real-time and reliable trafﬁc information. However, a
large number of RSUs to provide full coverage in urban areas
and high trafﬁc densities require huge installation and mainte-
nance cost [2]. Therefore, effective and reliable infrastructure-
less V2V communication is necessary in emergency situations

This project has received funding from the European Union’s Horizon 2020
research and innovation programme under the Marie Skłodowska-Curie grant
agreement No 101006411.

F. Ayaz and Z. Sheng are with the Department of Engineering and Design,
University of Sussex, Brighton, BN1 9RH, U.K. e-mail: (f.ayaz@sussex.ac.uk,
z.sheng@sussex.ac.uk).

D. Tian is with School of Transportation Science and Engineering, Beihang

University, Beijing, 100191, China. e-mail: (dtian@buaa.edu.cn)

Y. L. Guan is with the School of Electrical and Electronic Engineer-
ing, Nanyang Technological University, 639798, Singapore. e-mail: (eyl-
guan@ntu.edu.sg)

such as accidents and trafﬁc jams, so that trafﬁc information
can be exchanged in real time, even if RSU is out of reach.
In V2V communications, multi-hop relaying is one of the
challenges to successfully deliver a message over a wide area.
Optimal relay selection mechanisms result in better coverage,
more reliable connectivity and less communication overhead
[3]. Various intelligent relay selection schemes depending on
a vehicle’s distance from predecessor, moving direction, speed
and propagation loss in environment have been proposed using
fuzzy logic [4] or machine learning algorithms [5]. Existing
literature shows improved packet delivery ratio by machine
learning algorithms in multi-hop V2V communications [6].
However, artiﬁcial intelligence methods require huge process-
ing power and are often not suitable for a fully distributed
architecture [7].

In a traditional centralized architecture of machine learning,
the data collected by mobile devices is uploaded and processed
in a cloud based server to produce inference models [8].
With potentially large number of autonomous vehicles, where
real-time decisions have to be made within a restricted time
period, a cloud-centric approach is unable to offer acceptable
latency and scalability. Also, a centralized architecture requires
full connectivity which is challenging for vehicular networks.
Federated learning (FL) is a distributed machine learning
approach, in which mobile devices collect data and train their
individual machine learning or deep learning models, called
local models. They send their local models (i.e., models’
weights) to an aggregator. The aggregator averages local
models and produces a global model. Mobile devices further
train the global model individually to create updated local
models and submit them to aggregator. The steps are repeated
in multiple iterations until a desired accuracy of global model
is achieved [9]. FL is considered as a feasible solution for
safety and time critical applications involving autonomous
vehicles [10].

Despite offering a distributed approach, FL still relies
on a central aggregator. Furthermore, it needs a sustainable
economic model to incentivize mobile devices based on their
contributions and prevent adversary attacks. For example, in
IoV, a malicious vehicle may deliberately modify data, causing
poisoning attack [11] or a selﬁsh vehicle may not cooperate
in data collection resulting in inaccurate weights of a local
model. Blockchain can be used with FL to provide a decentral-
ized solution, for managing incentives and ensuring security
and privacy in a trustworthy manner [12]. A blockchain is
a distributed ledger of immutable blocks which are added
after undergoing a set of rules called consensus [13]. Due

 
 
 
 
 
 
TABLE I: FL issues & blockchain solutions.

FL issue
in vehicular networks

Blockchain-based solution

Requires central aggregator
Lacks economic modeling Manages cryptocurrency based incentives
Requires adversary control

Provides security by smart contract

Independent of third party

to its decentralized nature, blockchain complements both FL
and IoV [14]. Furthermore, smart contracts, which are self
executing scripts stored in blockchain to enforce a set of
rules, allow automation of multi-step processes and interaction
among mobile devices [15]. Therefore,
they can be used
to set rules for protecting FL from adversary and security
attacks. The process of transaction veriﬁcation in blockchain
can also be utilized to validate local models in FL [16]. Table I
summarizes the current issues of FL in IoV and corresponding
solutions provided by blockchain.

Practical implementation of blockchain in vehicular net-
works is challenging. Due to limited connectivity duration
in V2V communications, moving vehicles may not always
have an updated blockchain ledger, which leads to possibility
of multiple blocks added in parallel, called forks, as shown
in Fig. I (a). With presence of forks, it is difﬁcult for all
vehicles in a network to attain a synchronized linear structure
of ledger. As a common practice, blockchain picks one of
the parallel blocks to continue, and meanwhile, disqualiﬁes
other forking blocks by longest chain acceptance protocol [17].
Forks also lead to creation of malicious chains [18]. To address
this issue, the hierarchical structure of blockchain is proposed
for vehicles [19], [20]. In a hierarchical structure, there are
two types of blocks: keyblock and microblock. Instead of a
linear ledger, microblocks representing off-chain transactions
are added in parallel, whereas keyblocks are main blocks
which are appended horizontally in a blockchain by a leader
or a central node, for example, RSU. As shown in Fig. I (b),
parallel addition of microblocks does not disturb the main
linear ledger and forks are not disqualiﬁed but accepted as off-
chain micro-transactions recorded in a decentralized manner.
In this paper, we propose a decentralized message dis-
semination solution using a hierarchical blockchain based
FL process. The vehicles train local models and RSU acts
as aggregator to consolidate the global model. The process
uses blockchain for updating local models in a decentralized
manner. The main contributions of the paper are:

• We propose a blockchain based FL process in vehicular
networks, where a smart contract is used to control ad-
versary attacks by malicious and selﬁsh vehicles. Lower
Mean Squared Error (MSE) in less number of iterations
is achieved by the global model produced through FL
if security check is enforced by the smart contract. An
economic model to incentivize relay nodes and vehicles
participating in FL process is also presented together with
its analysis using Stackelberg game.

• Theoretical and simulation analysis in presence and ab-
sence of blockchain are presented. In a given time slot,
the number of local models uploaded through blockchain
based FL are higher than a centralized approach without

2

blockchain, which concludes that the proposed solution
can achieve greater accuracy within less time.

• We propose a Proof-of-FL (PoFL) consensus for a
blockchain-based multi-hop relay selection scheme in
V2V communications. PoFL results averagely in a re-
duced time delay per hop by 65.2%, an improved message
least 8.2% and a more privacy-
delivery ratio by at
preserving approach compared to other blockchain ap-
proaches suitable for message dissemination.

The rest of the paper is organized as follows. Section
II describes related work. Section III explains the proposed
solution of blockchain based FL and PoFL based message
dissemination with discussion on its privacy feature. Section
IV theoretically analyzes training capacity of FL and the
proposed economic model. Simulation results and conclusion
are presented in Section V and Section VI respectively.

II. RELATED WORK

A. Multi-Hop Relay Selection

Relay selection in V2V communications plays a crucial
role in message broadcasting. An inappropriate relay may
cause unacceptable latency or sometimes failure in delivering a
message to a desired number of vehicles or area. Probabilistic
calculations are usually used to predict either the distance
[21] or link stability [22] of a relay node. In [20], a Proof-
of-Quality-Factor (PoQF) is established using probabilistic
estimation of both distance and Signal to Noise Interference
Ratio (SINR) as a merit of relay node selection. However,
probabilistic predictions rely on certain approximations, for
example, number of vehicles within a transmission range,
which may not be highly accurate with varying speeds. In
[23] and [24], the combination of distance of a vehicle from
previous sender and channel quality parameters are used to
determine link stability for relay node selection. It is crucial
to set weights of all parameters according to their impacts on
message delivery in a network.

To make relay selection more adaptive to network changes,
artiﬁcial intelligence based mechanisms are designed. Fuzzy
logic has been used in [4] and [25], which makes decision
according to distance, moving direction and speed of vehicles.
However, fuzzy logic is also dependent on thresholds and
weights to be set in the rule base for making inferences. In [5],
satellite images are used to detect buildings and obstacles to
enable machine learning driven channel characterization. The
path with lowest propagation loss is used for message dissem-
ination in [5]. RSU assisted deep learning based technique
is developed for relay selection in [7]. It is pointed out that
machine learning and deep learning algorithms require large
processing power to handle huge amount of data and therefore
they must require V2I communications and infrastructure
support for implementation.

B. FL in Vehicular Networks

FL is suggested as a promising technique to securely train
intelligent models across smart cars [10] and Unmanned Aerial
Vehicles (UAVs) [26]. It has the feature of reducing network

3

(a) Fork (parallel blocks) in linear blockchain.

(b) Parallel microblocks and linear keyblock.

Fig. 1: Parallel addition of microblocks to resolve forks in blockchain in vehicular networks.

TABLE II: Multi-hop relay selection challenges and solutions
offered by blockchain-based FL.

Approach

Challenge

Solution

Probabilistic
prediction [20], [22]
Fuzzy
logic [4], [25]

Machine
learning [5], [7]

Any scheme without
incentives [21]

Assumptions / rules
are not adaptable
to network
changes

Huge data have to
managed centrally

Relay nodes may
act selﬁsh

Local models trained
with different networks
and the global model
can cater network changes

Distributed learning and
decentralized storage

Blockchain incentives
for motivation

latency by dividing training task among network edges. In
cellular-V2X (C-V2X) communications, FL is proposed to
reduce failure probability by intelligently ofﬂoading high com-
putation tasks to nearby base stations [27]. Resource allocation
and sharing in C-V2X by FL among vehicles has promised
better coverage and Quality-of-Service (QoS) in [28]. FL and
fog-assisted V2X is presented in [29] to improve driving
experience of autonomous vehicles by providing user-end ser-
vices, for example, car sharing, intelligent parking allocation,
infotainment and e-commerce applications. In [30], FL is used
to tackle energy transfer issues of electric vehicles at charging
stations and has resulted in improved accuracy of energy
demand prediction. FL assisted blockchain is proposed in [31]
to adjust block arrival rate in order to reduce communication
latency and consensus delay among vehicles. Applications of
FL in vehicular networks are summarized in [32] and most
of the recent applications focus on resource management,
performance optimization in computing tasks and user-end
services. However, FL can also be promising in message
delivery and relay node selection. Table II summarizes the
challenges of existing multi-hop relay selection schemes and
solutions offered by blockchain-based FL.

C. Economic Modeling in FL

Economic models to strategize incentives and to promote
mobile devices for producing reliable local models have been
developed. For a blockchain based FL in [31], the authors have

suggested to incentivize vehicles for both model training and
block mining. A joint price and reputation based economic
model is proposed in [11] to incentivize devices according
to the size of data contributed and prevent poisoning attack.
The economic model is analyzed using Contract Theory. In
Contract Theory, the contracts are formed between a payer
and a service provider (i.e., devices training local models)
before initiation of FL process. FL among vehicles for image
classiﬁcation is proposed in [33] and contracts are formulated
to incentivize vehicles in proportion to the number of images
used and amount of computation resources consumed.

Stackelberg game approach is used in [34] and [35] to
analyze the actions of players when incentives are distributed
after FL iterations are completed. If relay nodes are involved
in incentive distribution among vehicles, the economic model
is more suited to be analyzed using Stackelberg game model.
Due to varying speed and position of vehicles, it is practically
better to select an appropriate relay node after a message is
originated. Therefore, analysis using Stackelberg game model
is a more feasible option for multi-hop relay selection scheme
than Contract Theory, because formation of contract prior to
FL process initiation or relay selection cannot be materialized.
The existing literature assumes information asymmetry, i.e.
the payer is not aware of the amount of contributions (for
example, data size) upon which the payment is to be made.
However, with public blockchain, where stored transactions
are visible to every member of blockchain, FL can be a case of
symmetric information, i.e., the relevant information is known
to all associated members.

III. THE PROPOSED SOLUTION

As shown in Fig. 2, the proposed solution consists of two

major parts:
(1) FL integrated with blockchain, where vehicles take part
in a blockchain based FL process to form a global model for
relay node selection, and
(2) PoFL based message dissemination, where the global
model produced in ﬁrst part is run by vehicles as PoFL to
ﬁnd their eligibility to become a relay node. Table III lists the
key notations used in this paper.

TABLE III: Key notations.

Deﬁnition

Originator vehicle
Relay node vehicle
Iteration index
Weights of model x (local or global) at kth iteration
Loss function of model x at kth iteration
Time slot to upload local models
Transmission range
Microblock arrival rate per second
Vehicle density per m2
Average distance of vehicles from RSU
Average speed of vehicles
Expected value
No. of vehicles participating in FL
No. of vehicles uploading local models via FL blockchain
No. of vehicles uploading local models without blockchain
No. of vehicles with RSU in transmission range
No. of moving vehicles reaching RSU
No. of relay nodes
Data size of vehicle i
Incentive
Cost of training on data of size si
Utility of x (vehicle i or RLY )
Cost coefﬁcient of vehicle i
Compensation
Probability of using sm
Number of possible sm

Dataset

Distance between vehicle i and x (vehicle or RSU)
Direction of vehicle i w.r.t sender s
Speed of vehicle i
Hop index
Trafﬁc density in transmission range of vehicle i
No. of acknowledgment messages

Notation
ORG
RLY
k
wwwk
x
L(wwwk
x)
T S
R
λM B
λV
µd
µv
E(.)
N
NB
NW B
NV
NM V
NRLY
si
I
C(si)
Ux
αi
β
pm
M

di,x
diri,s
vi
h
γi
NA

A. Blockchain based FL

a) FL Components:

• Hello Packet by designated vehicle: A Central Au-
thority appoints some designated vehicles to regularly
originate a Hello packet and share their position to initiate
dataset collection by vehicles participating in FL. Only
the designated vehicles are allowed to originate Hello
packets. The motivation behind designated vehicles is
two fold: ﬁrst is because they are trusted by Central
Authority to honestly send their actual position without
any malicious change and second is because the identities
of designated vehicles are already shared with other
vehicles, so Hello packet from any other identity is not
recognized by the network.

• Dataset: It refers to the data samples collected by vehicle
i for training local model. In the proposed solution,
dataset collected by vehicle i includes multi-hop relay
selection parameters. After forwarding a Hello packet,
dataset collected by vehicle i consists of the following
parameters mentioned in Table III: di,s, distance from
sender s (designated vehicle or previous relay node).

4

Fig. 2: The proposed steps by vehicles and RSU.

diri,s, moving direction (either towards or away from
sender s). vi, speed at the time of forwarding message.
h, hop number. γi, trafﬁc density within its transmission
range and NA, number of acknowledgments received as
the score of relaying. γi in dataset can be pre-speciﬁed
by Central Authority or estimated by counting average
number of vehicles sending beacon messages per meter
[36]. The process of dataset collection is explained in
detail later in this section.

• Local Model: Each vehicle i participating in FL trains

a Deep Neural Network based local model.

• Global Model:

It is an aggregated model of N local
models, where N also refers to the number of vehicles
participating in FL. In our proposed system, the global
model is consolidated by RSU.
b) FL Blockchain and its Components: FL blockchain is
a blockchain used by vehicles and RSUs to store local and
global models as blocks. Its main components include

• Adversary: We consider the following adversary threats:
– Malicious Vehicles: They may deliberately change
or inject false data so that local model is not trained
accurately. This phenomenon is also known as poi-
soning attack [11].

– Selﬁsh Vehicles: They may not send acknowledg-
ment messages despite receiving forwarded mes-
sages. Therefore, NA cannot be recorded correctly
during dataset collection, leading to an inaccurate
local model produced by vehicle i.

• Security Check:

It is a machine learning algorithm
embedded in smart contract of FL blockchain to detect
adversary before a local model is uploaded as a block by
vehicle i.

• Microblock: A local model is stored in FL blockchain
as a microblock after undergoing a security check. A
microblock is added in parallel to other microblocks, all
containing hash of previous keyblock.

• Keyblock: A global model is stored in FL blockchain
by RSU in the form of a keyblock, containing hashes of
previous N microblocks.

As shown in Fig. 3, the proposed blockchain based FL consists
of the following three stages:

1) Stage 1: Dataset Collection and Local Model Training:
In this stage, vehicles collect dataset for training. Upon receiv-
ing a Hello packet from a designated vehicle, a vehicle i which
aims to collect dataset, generates a random waiting time. When

5

Fig. 3: The proposed stages in blockchain based FL.

Algorithm 1 FL Algorithm for vehicle i
Input: Hello Packet, N vehicles
Output: Global Model

Generate random waiting time
while Time elapsed ≤ random waiting time do

if Forwarded Hello packet received at h then

1: while h ≤ hmax do
2:
3:
4:
5:
6:

break

7:
8:
9:
10:
11:

end if
end while
if Forwarded Hello packet not received at h then

Forward Hello packet
Count acknowledgment packages into NA
Record di,s, vi, diri,s, γi, NA in dataset
break

else

h = h + 1

12:
13:
14:
end if
15:
16: end while
17: if data size == si then
18:
19: else
20:
21: end if
22: while k ≤ kmax do
23:

Train local model

Go to 1

Upload local model through smart contract
Receive updated global model
Re-train local model
k = k + 1

24:
25:
26:
27: end while

the waiting time is complete, it forwards Hello packet with its
encrypted identity. The reason behind a random waiting time
is to prevent multiple vehicles from transmitting at the same
time and avoid packet collision. The limits and probability
distribution of random waiting time are described in [20]. The
vehicles which receive the forwarded Hello packet for the ﬁrst
time share their acknowledgment. An acknowledgment packet
contains encrypted identity of vehicle i, so that it can collect
dataset. A vehicle j, which participates in FL, will broadcast
the received Hello packet again after a random waiting time.

This process continues up to a speciﬁed number of hops, hmax,
as shown in Algorithm 1. Each vehicle produces a local model
based on Deep Neural Network with 7 hidden layers and 256
neurons in each layer.

2) Stage 2: Security Check and FL Blockchain Update: A
vehicle i shares its local model with the network by adding it
into FL blockchain as a microblock. It is added after passing
a security check performed by the smart contract embedded in
FL blockchain. The proposed security check employs a ma-
chine learning algorithm called Isolation Forest [37] to detect
anomaly in a local model caused by adversary. Isolation Forest
is used because it only requires a small number of samples for
training. A true sample is provided by the Central Authority for
its initial training. Later, it can be used in a fully unsupervised
manner to detect anomaly. Moreover, it is computationally
efﬁcient and has low memory requirement [38]. We have used
the security check in three ways. Firstly, the security check
on dataset is conducted by ﬁnding anomalies in dataset of
each vehicle. Secondly, the security check performs anomaly
detection on weights of local models. If a malicious vehicle i
deliberately changes its dataset for training its local model but
shares a true dataset in smart contract, the adversary attack
will be detected by anomaly detection on weights. Thirdly,
the security check on both dataset and weights is performed.
If local models successfully pass the security check, they are
added in FL blockchain in the form of parallel microblocks.
The microblock announcement is broadcasted by vehicle i
and the receiving vehicles will then update their copy of FL
blockchain. Vehicles can exchange new microblock updates
with their neighbors regularly.

3) Stage 3: Global Model Aggregation by RSU: When-
ever a vehicle i ﬁnds an RSU available in its transmission
range, it shares its updated copy of FL blockchain. When
N microblocks are received by RSU in FL blockchain, it
aggregates local models into a global model and uploads it
into a keyblock.

All stages are repeated at each iteration. The goal is to repeat
the process up to kmax iterations for minimizing global loss
function L(wwwk

G), which is deﬁned as

L(wwwk

G) =

1
N

N
(cid:88)

i=1

L(wwwk

i ).

(1)

Algorithm 2 Message Dissemination Algorithm for vehicle i

Input: Incident message, global model
Output: New block announcement in message blockchain

6

1: while h ≤ hmax do
2:
3:
4:
5:
6:

break

Compute score from global model
timer expiry limit = 1/score
while Time elapsed ≤ timer expiry limit do

if New block announced then

7:
8:
9:
10:
11:

end if
end while
if New block not announced then

Announce block
break

else

12:
13:
end if
14:
15: end while

h = h + 1

G are weights of global model and L(wwwk

where wwwk
i ) is the
loss function of local model i and wwwk
i are its corresponding
weights at kth iteration. Neural networks commonly use MSE
as the loss function [10]. The value of kmax is adjusted by
Central Authority to achieve the minimum possible or desired
L(wwwkmax
G

) [9].

B. PoFL based Message Dissemination

The main components of this part include
• Incident Message: It is a message initiated by an orig-
inating vehicle (ORG) in an emergency situation, for
example, incident or trafﬁc jam. It contains time and
position of incident and encrypted identity of ORG.
• PoFL: It is the consensus to elect a relay node (RLY ) for
forwarding an incident message. Global model contained
in the latest keyblock of FL blockchain is used as PoFL.
It is run by a smart contract of message blockchain.

• Message Blockchain:

It contains history of incident
messages. When a RLY is elected by PoFL, it adds a
block in the message blockchain containing the forwarded
incident message. The block also contains time, location
and encrypted identity of the RLY which adds the block.
The motivation behind message blockchain is to record
forwarded incident messages as immutable blocks and
avoid discrepancies during incentive distribution among
RLY s.

When an incident message is initiated by ORG, all receiving
vehicles attempt to become the RLY by competing through
PoFL consensus. Each vehicle i runs PoFL consensus to ﬁnd
its score of being RLY , as shown in Algorithm 2. PoFL is
aimed to assign the highest score to the most appropriate
relay node. The smart contract starts a timer whose length
is inversely proportional to the score of vehicle i. As shown
in Fig. 4, a block is added in the message blockchain and a
block announcement with the forwarded incident message is
initiated by vehicle i if its timer ﬁrst expires. In this case,
vehicle i is assigned as a relay node RLY at h = 1. All other

Fig. 4: Flowchart of actions by vehicle i according to PoFL
based Message Dissemination.

TABLE IV: Parameter-sharing required from neighbor vehi-
cles in multi-hop relay selection.

Approach

Deep learning [7]
Fuzzy logic [25]
Probabilistic prediction [22]
Link Stability [23]
PoQF [20]
PoFL

Position
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)

×

Speed
(cid:88)

×
(cid:88)

×
(cid:88)

×

Other Parameters

Transmission power
×
×
Channel quality
×
×

vehicles continue to compete for becoming RLY at further
hops until the message is forwarded up to hmax number of
hops.

a) Privacy of PoFL based Message Dissemination:

Table IV lists the parameters required to be shared by neighbor
vehicles in various multi-hop relay selection approaches. The
position, speed and heading direction of vehicles are regularly
shared in VANETs using beacon messages and thus create a
threat to privacy [39]. The proposed approach does not require
such information from all neighbor vehicles and can therefore
be considered as a privacy-preserving solution. The position
and direction of only sender is required for dataset collection
in blockchain based FL and for calculating score of relaying
in PoFL based message dissemination. However, identities of
vehicles are kept anonymous using encryption.

IV. THEORETICAL ANALYSIS

A. Training Capacity of FL

This subsection is aimed to analyze the capacity of FL
blockchain to complete one FL iteration in a given amount
of time, compared with the same process without blockchain.
FL without blockchain is referred to as a centralized approach
in which each vehicle i submits its local model directly to RSU
instead of uploading it into FL blockchain. As the convergence
performance of FL improves with increasing number of local
models [40], FL via blockchain is expected to achieve greater
accuracy, provided the number of uploaded local models
are higher as compared to the process carried out without
blockchain within the same time period.

1) FL with blockchain: Let T S be a time slot in which a
vehicle i is required to upload its local model as microblock

TABLE V: Reward gained and payment made by players.

7

Player
ORG
RLY
Vehicle i

Gains

None
βlog(1 + I) from ORG
NRLY Isi from RLY s

Pays
NRLY βlog(1 + I) to RLY s
i=1 Isi to N vehicles
i to train local model

αis2

(cid:80)N

1) Stackelberg Game Formulation: The Stackelberg game
model consists of three types of players: ORG, RLY partic-
ipating in message dissemination and vehicle i participating
in FL. For each incident message initiated by ORG, there are
NRLY number of RLY s which forward the incident message
and N vehicles in the network which train their local models
during blockchain based FL. The proposed economic model
is formulated as a two-stage Stackelberg game. First, at stage
1, ORG pays reward to RLY s for forwarding message. At
stage 2, RLY s pay reward to N vehicles for participating in
FL to form a global model of RLY selection. Since, both FL
and message dissemination processes are blockchain-based,
the contribution of players is stored as immutable timestamped
blocks and cannot be altered for cheating. The transactions of
incentives are also processed in the form blockchain based
virtual currency automatically through smart contracts.

As shown in Table V, the reward to N vehicles is paid in
proportion to the sizes of dataset they have used in training
their local models. Assume that the dataset sizes of N vehi-
cles are sss = {s1, s2, ...., sN }. The utility of each vehicle i
participating in FL process is

Ui(si, I) = NRLY Isi − C(si),

(6)

where I denotes incentive which is constant for every vehicle
i and C(si) is the computational cost of training a local model
on dataset of size si and is modeled as a quadratic function,
i.e.,

C(si) = αis2
i ,

(7)

where αi > 0 denotes cost co-efﬁcient of vehicle i [43]. The
utility of each RLY is

URLY (sss, I) = βlog(1 + I) −

N
(cid:88)

i=1

I · si,

(8)

where βlog(1+I) is paid by ORG for forwarding the incident
message. Here β > 0 and can be assumed as a compensation
amount paid to RLY s present
in an area affected by an
incident or trafﬁc jam caused by ORG.

2) Stackelberg Game Analysis: We consider the case of
information symmetry where every RLY knows data size
used by each vehicle i prior to forwarding a message.

Deﬁnition 1: Assume that s∗
is the optimal data size
i
for each vehicle i and I ∗ is the optimal incentive amount
per data size paid by each RLY to vehicle i, then (s∗
i , I ∗)
is the Nash equilibrium point which satisﬁes the following
conditions

Ui(s∗

i , I ∗) ≥ Ui(si, I ∗),

and

URLY (s∗

i , I ∗) ≥ URLY (s∗

i , I).

(9)

(10)

Fig. 5: Distance between vehicle and RSU.

in FL blockchain, after it has completed training and passed
through security check. Let λM B be the
its local model
microblock arrival rate at RSU or throughput in microblocks/s.
Detailed derivation of λM B can be found in [20]. If mi-
croblock arrival
is modeled using Poisson distribution as
deﬁned in [18], the expected number of vehicles able to upload
thier local models via FL blockchain in T S can be given as
[41]

E(NB) =

λM B T S
(cid:88)

l=1

le−λM B T S (λM BT S)l

l!

.

(2)

2) FL without blockchain: If vehicles are required to upload
their models directly to RSU without blockchain, then it is
necessary that either RSU is in their transmission range or
they are able to reach towards RSU within T S. Consider a
general and dynamic movement of vehicles, the position of
vehicles on road follows Poisson distribution, λV vehicles/m2
is assumed as the density of vehicles on a two dimensional
road segment with no separation of lanes [42], the expected
number of vehicles with RSU in their transmission range is

E(NV ) =

λV πR2
(cid:88)

l=1

le−λV πR2 (λV πR2)l

l!

,

(3)

where transmission range is assumed as a uniform circle with
radius R. Similarly, the expected number of moving vehicles
with RSU not currently in their transmission range but can
travel to reach RSU within T S is

E(NM V ) =

T S
µd−R µv
(cid:88)

l=1

le− T S

µd−R µv

( T S
µd−R µv)l
l!

,

(4)

where µd > R is the mean distance of those vehicles from
RSU which do not have RSU within their transmission range,
as shown in Fig. 5 and µv is their average speed. Therefore,
the expected number of vehicles able to upload their local
models to RSU without blockchain during T S is

E(NW B) = E(NV ) + E(NM V ).

(5)

B. Economic Model

In this section, we deﬁne an economic model of payment to
vehicles contributing in FL and message dissemination. The
feasibility of economic model is analyzed by investigating
strategic behavior of RLY s and vehicles participating in FL
based on their expected utilities through Stackelberg game
model.

Theorem 1: There exists a Nash equilibrium point
a vehicle i with Ui deﬁned in (6).

for

Proof: For a ﬁxed I ∗, Ui is

Ui(si, I ∗) = NRLY · I ∗ · si − αis2
i .

The ﬁrst-order derivative of (11) is

∂Ui(si, I ∗)
∂si
The second-order derivative of (11) is

= NRLY · I ∗ − 2αisi.

∂2Ui(si, I ∗)
∂s2
i

= −2αi.

(11)

(12)

(13)

Since αi > 0, the second-order derivative of Ui is negative
and Ui(si, I ∗) is a strictly concave function, which proves
the existence of Nash equilibrium.

Theorem 2: There exists a Nash equilibrium point
RLY with URLY deﬁned in (8).

for

Proof: The ﬁrst-order derivative of (8) is

∂URLY (sss, I)
∂I

=

β
1 + I

−

N
(cid:88)

i=1

si.

The second-order derivative of (8) is

∂2URLY (sss, I)
∂I 2

=

−β
(1 + I)2 .

(14)

(15)

Since β > 0 and (1 + I)2 > 0, the second-order derivative
of URLY is negative and URLY (sss, I) is a strictly concave
function, which proves the existence of Nash equilibrium.

Based on Theorem 1 and Theorem 2, we can state that
the unique Stackelberg Nash equilibrium point of our model
exists. The Central Authority is responsible to choose values
of I and β such that Nash equilibrium points for all N
vehicles and RLY s become their best response strategies
(i.e, Ui > 0 and URLY > 0) and all players are willing to
cooperate in the proposed game.

The proposed economic model assumes information sym-
metry, i.e., all players have complete information about si.
If private blockchain is used, complete information may not
be visible to every player and the economic model will be
information asymmetric. In this case, players may predict
information through a machine learning method [44] or using
probabilistic assumption [43]. Let sss = {s1, s2, ....sM } be
the sizes of dataset used by vehicles in FL and pm be the
probability that a vehicle i uses sm. (8) can be modiﬁed as

URLY (sss, I) = βlog(1 + I) −

M
(cid:88)

m=1

pmN Ism,

(16)

where M is the total number of possible sm. Similar to
Theorem 2, the existence of Nash Equilibrium point can be
proved for URLY deﬁned in (16).

8

TABLE VI: Simulation Parameters.

Parameters

Values

Parameters

Values

Simulation Time
Size of area
Data rate
Mobility model
Number of RSUs
Number of vehicles
kmax

300 s
2.5 km ×2.5 km
6 Mbps
Krauss
1
100, 200, 300
100, 110

Protocol
Encryption
si
Loss function
R
hmax
µv

IEEE 802.11p
SHA-256
8000
MSE
250 m
6
50 km/hr

TABLE VII: Loss (MSE) of global model after 100 iterations.

si
2000

5000

8000

N = 100 N = 200 N = 300

0.19643

0.17251

0.15297

0.18724

0.17021

0.15101

0.16541

0.16313

0.15085

V. RESULTS AND DISCUSSION

In this section, we discuss simulation results of the proposed
solution using OMNeT++, Python and SUMO (Simulation of
Urban Mobility). An open-source framework VeINS (Vehicles
In Network Simulation) is used to integrate SUMO with
OMNeT++ [45]. Python is employed for carrying out FL
using Tensorﬂow library of machine learning. Python can be
embedded into a C++ program by writing an extension module
[46]. Since OMNeT++ is a modular C++ based network
simulator, it supports dynamic loading of Python script at run
time. The simulation parameters used are listed in Table VI.
Fig. 6 shows the loss (MSE) of global model with respect
to iteration index k, in presence of 50% adversary among the
vehicles participating in FL, consisting of equal percentage of
malicious and selﬁsh vehicles. In all cases, the loss converges
to its lowest possible value until 100 iterations. However, this
convergence is achieved in less number of iterations with 300
vehicles as compared to 100 vehicles, which means that the
maximum accuracy of a global model can be attained faster
with greater number of vehicles. Fig. 6 (a) shows the loss when
no security check is implemented. The convergence rate is
slower without security check and takes more iterations than
those with security checks, as shown in Fig. 6 (b) - (d). It
indicates that the increased computation required to imple-
ment security check can be compensated with less iterations
processed to attain maximum accuracy. Table VII shows loss
of global model after 100 iterations with respect to number of
vehicles participating in FL without any adversary or security
check. As shown in Table VII, the loss is inversely proportional
to both dataset size and number of vehicles.

Fig. 7 shows the loss of global model after 100 iterations
of FL in presence of malicious and selﬁsh vehicles. The
global loss function is the highest if no security check is
employed in smart contract of FL blockchain. Security check
on weights results in less loss as compared to security check
on dataset in presence of malicious vehicles and vice-versa
in case of selﬁsh vehicles. It is because selﬁsh vehicles affect
only NA in dataset by not sending acknowledgments and such
discrepancy is easily detected if security check is applied
on dataset only. On the other hand, malicious vehicles can

9

(a) No security Check.

(b) Security Check on dataset.

(c) Security check on weights.

(d) Security check on both dataset and weights.

Fig. 6: Loss (MSE) of global model with 50% adversary.

(a) Vehicles: 100, Adversary: Malicious.

(b) Vehicles: 200, Adversary: Malicious.

(c) Vehicles: 300, Adversary: Malicious.

(d) Vehicles: 100, Adversary: Selﬁsh.

(e) Vehicles: 200, Adversary: Selﬁsh.

(f) Vehicles: 300, Adversary: Selﬁsh.

Fig. 7: Loss (MSE) of global model after 100 iterations.

TABLE VIII: λM B and µd with respect to λV .

λV (vehicle/m2)
λM B (microblocks/s)
µd (m)

16

2.01

344

32

1.99

298

48

0.98

276

is more appropriate to reduce the effect of selﬁsh behavior.
Nevertheless, malicious vehicles may submit a true dataset for
security check and upload inaccurate local models using a false
dataset. Therefore, in this case, only security check on weights
can prevent adversary caused by malicious vehicles. The loss
function is minimum if security check on both dataset and
weights is used and is suitable for both malicious and selﬁsh
vehicles. As a trade-off, increased computation is required to
run security check twice.

Fig. 8 shows the average number of vehicles over 100

Fig. 8: Number of vehicles uploading local model in T S.

change all parameters in dataset and therefore it is not easy
to detect anomaly on such dataset. It shows that security
check on weights is more suitable to prevent poisoning attack
caused by malicious vehicles and security check on dataset

10

(a) Ui.

(b) URLY at N = 200, β = 0.9 × 107.

(c) URLY at N = 200, β = 1.8 × 107.

Fig. 9: Utility of players in Stackelberg Game with equilibrium points (*).

(a) Maximum speed = 55 km/hr.

(b) Maximum speed = 110 km/hr.

Fig. 10: Message delivery ratio with 300 vehicles.

achieve desired accuracy of a global model faster than FL
carried out without blockchain, because FL blockchain enables
collection of local models from more number of vehicles
within the same time limit.

Fig. 9 proves Deﬁnition 1 at equilibrium points at various
values of αi, β and N . Fig. 9 (a) shows the utility of vehicle
i, Ui, participating in a blockchain based FL. As shown in
Fig. 9 (a), for a given I ∗, there exists only one s∗
i which
results in maximum Ui. Fig. 9 (b) and (c) show URLY at
N = 200 with varying values of si and β. In each case, an
equilibrium point exists where URLY is maximum for a given
I ∗. A Central Authority can select the value of I ∗, which
gives both maximum Ui and URLY . As shown in Fig. 9 (b),
URLY <= 0 for certain values of I, which will motivate
RLY s to become selﬁsh. An appropriate value of β can be
selected to make URLY > 0 for every value of I, as shown in
Fig. 9 (c). A machine learning model can be used to predict the
optimum values of β and I, according to si, which result in
best response strategy of RLY s. This model can be embedded
into smart contract of message blockchain to automate reward
distribution independently without Central Authority.

Fig. 10 shows message delivery ratio among 300 vehicles
at varying percentages of malicious vehicles in the network
as a result of 100 simulation runs. Results are also compared
with PoQF [20] and another voting blockchain based relay
selection method in which an appropriate relay is elected on
the basis of its distance from the sender and channel quality
parameters [23]. PoFL outperfoms voting based relay selection
method and PoQF when security check is applied. However
with low percentage of malicious vehicles and maximum speed
of 55 km/hr, PoQF results in better message delivery ratio
than PoFL when security check on weights is not applied.

Fig. 11: Average time delay per hop.

simulation runs which uploaded their local models during T S,
with and without blockchain at various λV . The simulation
results are matched with expected values derived in (2) and
(5), conﬁrming our theoretical analysis. λM B and µd change
with varying λV and are listed in Table VIII. Fig. 8 shows that
blockchain based approach results in average 18 more vehicles
uploading their local models within same T S compared with
the centralized solution in submitting local models directly
to RSU without blockchain. This is because a copy of FL
blockchain is possessed by each vehicle. A local model by
vehicle i can be entered into FL blockchain without depending
upon RSU. Subsequently, RSU is able to receive an updated
FL blockchain by another vehicle j, containing local models
of both vehicle i and vehicle j. Without blockchain, a vehicle i
has to travel towards RSU within T S to directly share its local
model. In this case, one RSU or small T S may not be sufﬁcient
for receiving local models from large number of vehicles.
Also, as shown in Table VII, the loss of global model decreases
with rising N . It can be concluded that FL blockchain can

Nevertheless, PoFL with security check on both dataset and
weights always outperforms voting based relay selection and
PoQF by an average of 25% and 8.2% increase in message
delivery ratio respectively.

Fig. 11 shows the average time delay per hop in completing
PoFL, PoQF [20] and PoS (Proof-of-Stake) [47] consensus.
PoS is simulated such that it selects relay node on the basis
of reputation of vehicle. A random reputation value following
uniform distribution, ranging from 0 to 100 is assigned to
each vehicle. The average time delay per hop of PoQF
rises with increasing number of vehicles and percentage of
malicious vehicles in the network. This is because PoQF waits
for a threshold number of votes to determine a relay node
and the optimum threshold increases with rising number of
vehicles and malicious vehicles percentage. Time delay of
PoS rises with increasing number of vehicles due to more
time required in accessing large amount of reputation values
but it is independent of percentage of malicious vehicles.
PoFL is run by each vehicle simultaneously and therefore its
time delay is independent of both number of vehicles and
percentage of malicious vehicles. On an average, PoFL is
65.2% faster than PoQF in relay selection and is more suitable
for time-critical emergency situations. As a trade-off, PoQF
only involves Quality Factor calculations but PoFL is based
on a computationally expensive FL process with multiple
iterations. Compared to PoS, PoFL is 15.74% faster when
there are 300 vehicles but 18.93% slower when there are 100
vehicles. This is because PoS consumes time only in accessing
the blockchain to ﬁnd reputation of vehicles. The access time
increases when there is a large number of vehicles registered
in a blockchain network. Although PoS with 100 vehicles
outperforms both PoQF and PoFL, this faster consensus for
block veriﬁcation and addition cannot be run independently
for appropriate relay selection, unlike PoQF and PoFL.

VI. CONCLUSION
In this paper, we have proposed a decentralized FL based
message dissemination, governed by blockchain. The theoreti-
cal and practical performance of uploading local models using
blockchain is compared with a centralized approach without
blockchain. The proposed FL with blockchain can be consid-
ered as a faster approach since it results in greater number
of uploaded local models within a given time as compared to
a solution without blockchain. Smart contract based security
checks are proposed to detect adversary, which result in lower
MSE in less number of iterations achieved by global model
than FL without security check, after 100 iterations. Compared
with other blockchain approaches suitable for relay selection
in vehicular networks, the proposed solution is 65.2% faster
and at least 8.2% more efﬁcient in message dissemination
approach. It also preserves privacy of neighbour vehicles,
unlike other relay selection approaches. An economic model
for blockchain based FL is also proposed and analyzed using
Stackelberg game to determine optimal data size and incentive
which result in the best response strategy of vehicles. Message
dissemination and relay selection can further be improved in
future work by including cross-layer information in dataset,
obtained from physical and MAC layers.

11

REFERENCES

[1] S. Yaqoob, A. Ullah, M. Akbar, M. Imran, and M. Shoaib, “Congestion
avoidance through fog computing in internet of vehicles,” J. Amb. Intel.
Hum. Comp., vol. 10, no. 10, pp.3863-3877, Feb. 2019.

[2] Y. Shi, L. Lv, H. Yu, L. Yu and Z. Zhang, “A Center-Rule-Based
Neighborhood Search Algorithm for Roadside Units Deployment
in
Emergency Scenarios,” Mathematics, vol. 8, no. 10, p.1734, Oct. 2020.
[3] M.F. Feteiha and M.H. Ahmed, “Multihop best-relay selection for vehic-
ular communication over highways trafﬁc,” IEEE Trans. Veh. Technol.,
vol. 67, no. 10, pp.9845-9855, Oct. 2018.

[4] A. Hawbani, E. Torbosh, W. Xingfu, P. Sincak, L. Zhao and A. Y. Al-
Dubai, “Fuzzy based distributed protocol for vehicle to vehicle commu-
nication,” IEEE Trans. Fuzzy Syst, Dec. 2019.

[5] M.E. Morocho-Cayamcela, H. Lee and W. Lim, “Machine Learning to
Improve Multi-hop Searching and Extended Wireless Reach-ability in
V2X,” IEEE Commun. Lett., vol 24, no. 7, pp. 1477-1481, Jul. 2020.
[6] W.K. Lai, M.T. Lin and Y.H. Yang, “A machine learning system for
routing decision-making in urban vehicular ad hoc networks,” Int. J.
Distrib. Sens. N., vol. 11, no. 3, p.374391, Mar. 2015.

[7] A. Mchergui, T. Moulahi and S. Nasri, “Relay Selection Based on
Deep Learning for Broadcasting in VANET,” in Proc. 15th Int. Wireless
Commun. Mobile Comput. Conf., Tangier, Morocco, Jun. 2019, pp. 865-
870.

[8] W. He, G. Yan, and L. D. Xu, “Developing vehicular data cloud services
in the IoT environment,” IEEE Trans. Ind. Informat., vol. 10, no. 2, pp.
1587–1595, May 2014.

[9] H. B. McMahan, E. Moore, D. Ramage, S. Hampson, and B. A. Y. Arcas,
“Communication-efﬁcient learning of deep networks from decentralized
data,” in Proc. 20th Int. Conf. on Artiﬁcial Intelligence and Statistics,
Fort Lauderdale, FL, USA, Apr. 2017, pp. 1–11.

[10] W.Y.B. Lim, N.C. Luong, D.T. Hoang, Y. Jiao, C. Liang, Q. Yang, D.
Niyato and C. Miao, “Federated learning in mobile edge networks: A
comprehensive survey,” IEEE Commun. Surveys Tuts., vol. 22, no. 3, pp.
2031-2063, Apr. 2020.

[11] J. Kang, Z. Xiong, D. Niyato, S. Xie and J. Zhang, “Incentive mech-
anism for reliable federated learning: A joint optimization approach to
combining reputation and contract theory,” IEEE Internet Things J., vol.
6, no. 6, pp.10700-10714, Dec. 2019.

[12] Y. Lu, X. Huang, K. Zhang, S. Maharjan and Y. Zhang, “Low-Latency
Federated Learning and Blockchain for Edge Association in Digital Twin
Empowered 6G Networks,” IEEE Trans. Industr. Inform., vol. 17, no. 7,
pp. 5098-5107, July 2021.

[13] S. Nakamoto. (2008). Bitcoin: A Peer-to-Peer Electronic Cash System.

[Online]. Available: https://bitcoin.org/bitcoin.pdf

[14] S.R. Pokhrel and J. Choi, “Federated learning with blockchain for
autonomous vehicles: Analysis and design challenges,” IEEE Trans.
Comm, vol. 68, no. 8, pp. 4734-4746, Aug. 2020.

[15] K. Christidis and M. Devetsikiotis, “Blockchains and smart contracts for
the Internet of Things,” IEEE Access, vol. 4, pp. 2292–2303, May 2016.
[16] Y. Lu, X. Huang, K. Zhang, S. Maharjan and Y. Zhang,
Permissioned
“Communication-Efﬁcient
Blockchain for Digital Twin Edge Networks,” IEEE Internet Things J.,
vol. 8, no. 4, pp. 2276-2288, 15 Feb.15, 2021.

Federated Learning

and

[17] D. Mingxiao, M. Xiaofeng, Z. Zhe, W. Xiangwei and C. Qijun, “A
review on consensus algorithm of blockchain,” Proc. IEEE Int. Conf.
Systems, Man, and Cybernetics, Banff, AB, Dec. 2017, pp. 2567-2572.
[18] V. Bagaria, S. Kannan, D. Tse, G. Fanti and P. Viswanath, “Prism:
Deconstructing the Blockchain to Approach Physical Limits,” in Proc.
ACM SIGSAC Conference on Computer and Communications Security,
New York, USA, Nov. 2019, pp. 585-602.

[19] W. Dong, Y. Li, R. Hou, X. Lv, H. Li and B. Sun, “A Blockchain-Based
Hierarchical Reputation Management Scheme in Vehicular Network,” in
Proc. IEEE Global Commun. Conf., Waikoloa, HI, USA, Dec. 2019, pp.
1-6.

[20] F. Ayaz, Z. Sheng, D. Tian and Y. L. Guan, “A Proof-of-Quality-Factor
(PoQF) based Blockchain and Edge Computing for Vehicular Message
Dissemination,” IEEE Internet Things J., Dec. 2020.

[21] D. Cao, B. Zheng, B. Ji, Z. Lei and C. Feng, “A robust distance-based
relay selection for message dissemination in vehicular network,” Wireless
Networks, vol. 26 no. 3, pp.1755-1771, Oct. 2018.

[22] S.A. Rashid, L. Audah, M. M. Hamdi and S. Alani, “Prediction Based
Efﬁcient Multi-hop Clustering Approach with Adaptive Relay Node
Selection for VANET,” J. Commun., vol. 15, no. 4, pp. 332-334, Apr.
2020.

12

[47] J. Kang, Z. Xiong, D. Niyato, D. Ye, D. I. Kim, and J. Zhao, “Toward
Secure Blockchain-Enabled Internet of Vehicles: Optimizing Consensus
Management Using Reputation and Contract Theory,” IEEE Trans. Veh.
Technol., vol. 68, no. 3, pp. 2906–2920, Mar. 2019.

[23] F. Ayaz, Z. Sheng, D. Tian, Y. L. Guan and V. Leung, “A voting
blockchain based message dissemination in vehicular ad-hoc networks
(VANETs),” in Proc. IEEE Int. Conf. Commun., Dublin, Ireland, Jun.
2020, pp. 1-6.

[24] F. Ayaz, Z. Sheng, D. Tian and V. Leung, “Blockchain-Enabled Security
and Privacy for Internet-of-Vehicles,” in Internet of Vehicles and its
Applications in Autonomous Driving, N. Gupta, A. Prakash, R. Tripathi,
Cham, Switzerland: Springer, Sep. 2020, pp. 123-148.

[25] C. Wu, S. Ohzahata, Y. Ji and T. Kato, “Joint fuzzy relays and network-
coding-based forwarding for multihop broadcasting in VANETs,” IEEE
Trans. Intell. Transp. Syst., vol. 16, no. 3, pp.1415-1427, Jun. 2015.
[26] K. Yang, Y. Shi, Y. Zhou, Z. Yang, L. Fu and W. Chen, “Federated
Machine Learning for Intelligent IoT via Reconﬁgurable Intelligent
Surface,” IEEE Netw., vol. 34, no. 5, pp. 16-22, Oct. 2020.

[27] K. Xiong, S. Leng, C. Huang, C. Yuen and Y. L. Guan, “Intelligent
Task Ofﬂoading for Heterogeneous V2X Communications,” IEEE Trans.
Intell. Transp. Syst., Aug. 2020.

[28] S. Samarakoon, M. Bennis, W. Saad, and M. Debbah, “Distributed fed-
erated learning for ultra-reliable low-latency vehicular communications,”
IEEE Trans. Comm, vol. 68, no. 2, pp. 1146–1159, Nov. 2019.

[29] M. Rihan, M. Elwekeil, Y. Yang, L. Huang, C. Xu and M.M. Selim,
“Deep-VFog: When Artiﬁcial Intelligence Meets Fog Computing in
V2X,” IEEE Syst. J., Aug. 2020.

[30] Y.M. Saputra, D.T. Hoang, D.N. Nguyen, E. Dutkiewicz, M.D. Mueck
and S. Srikanteswara, “Energy demand prediction with federated learning
for electric vehicle networks,” in Proc. IEEE Global Comm. Conf.,
Waikoloa, HI,USA, Dec. 2019, pp. 1-6.

[31] S. R. Pokhrel and J. Choi, “Federated learning with blockchain for
autonomous vehicles: Analysis and design challenges,” IEEE Trans.
Comm., vol. 68, no. 8, pp. 4734-4746, Aug. 2020.

[32] K. Tan, D. Bremner, J.L. Kernec and M. Imran, “Federated Machine
Learning in Vehicular Networks: A summary of Recent Applications,” in
Proc. IEEE Int. Conf. on UK-China Emerging Technol., Glasgow, UK,
Aug. 2020, pp. 1-4.

[33] D. Ye, R. Yu, M. Pan and Z. Han, “Federated learning in vehicular edge
computing: A selective model aggregation approach,” IEEE Access, vol.
8, pp.23920-23935, Jan. 2020.

[34] Y. Sarikaya and O. Ercetin, “Motivating workers in federated learning: A
Stackelberg game perspective,” IEEE Netw. Lett., vol. 2, no. 1, pp.23-27,
Oct. 2019.

[35] S.R. Pandey, N.H. Tran, M. Bennis, Y.K. Tun, A. Manzoor and C.S.
Hong, “A crowdsourcing framework for on-device federated learning,”
IEEE Trans. on Wirel. Commun., vol. 19, no. 5, pp.3241-3256, Feb. 2020.
[36] R. Stanica, E. Chaput and A.-L. Beylot, “Local density estimation for
contention window adaptation in vehicular networks,” in Proc. 22nd IEEE
Int. Symp. Pers. Indoor Mobile Radio Commun., Toronto, ON, Canada,
Sep. 2011, pp. 730–734.

[37] F.T. Liu, K.M. Ting and Z.H. Zhou, “Isolation forest,” in Proc. 8th IEEE

Int. Conf. on Data Mining,, Pisa, Italy, Dec. 2008, pp. 413-422.

[38] G. A. Susto, A. Beghi and S. McLoone, “Anomaly Detection through on-
line Isolation Forest: An Application to Plasma Etching,” in Proc. 28th
Annual SEMI Advanced Semiconductor Manufacturing Conf., Saratoga
Springs, NY, USA, May 2017, pp. 89–94.

[39] K. Emara, “Safety-Aware Location Privacy in VANET: Evaluation and
Comparison,” IEEE Trans. Veh. Technol., vol. 66, no. 12, pp. 10718-
10731, Dec. 2017.

[40] K. Wei et al., “Federated Learning With Differential Privacy: Algorithms
and Performance Analysis,” IEEE Trans. Inf. Forensics Secur., vol. 15,
pp. 3454-3469, Apr. 2020.

[41] Y. Sun, L. Zhang, G. Feng, B. Yang, B. Cao, and M. A. Imran,
“Blockchain-Enabled Wireless Internet of Things: Performance Analysis
and Optimal Communication Node Deployment,” IEEE Internet Things
J., vol. 6, no. 3, pp. 5791-5802, Jun. 2019.

[42] S. Kim, “Impacts of Mobility on Performance of Blockchain in VANET,”

IEEE Access, vol. 7, pp. 68646-68655, Jun. 2019.

[43] Z. Hou, H. Chen, Y. Li and B. Vucetic, “Incentive Mechanism Design
for Wireless Energy Harvesting-Based Internet of Things,” IEEE Internet
Things J., vol. 5, no. 4, pp. 2620-2632, Aug. 2018.

[44] F. Li, H. Yao, J. Du, C. Jiang and Y. Qian, “Stackelberg Game-Based
Computation Ofﬂoading in Social and Cognitive Industrial Internet of
Things,” IEEE Trans. Industr. Inform., vol. 16, no. 8, pp. 5444-5455,
Aug. 2020.

[45] C. Sommer, R. German and F. Dressler, “Bidirectionally Coupled
Network and Road Trafﬁc Simulation for Improved IVC Analysis,” IEEE
Trans. Mobile Comput., vol. 10, no. 1, pp. 3-15, Jan. 2011.

[46] T. E. Oliphant, “Python for Scientiﬁc Computing,” Comput. Sci. Eng.,

vol. 9, no. 3, pp. 10-20, May-June 2007.

