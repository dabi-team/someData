2
2
0
2

n
u
J

7
1

]

R
C
.
s
c
[

1
v
1
1
0
9
0
.
6
0
2
2
:
v
i
X
r
a

Evolutionary Random Graph for Bitcoin Overlay and
Blockchain Mining Networks

Jacques Bou Abdo1,*, Shuvalaxmi Dass1, Basheer Qolomany1, and Liaquat Hossain1

1University of Nebraska at Kearney, Cyber Systems, Kearney, NE, USA
*bouabdoj@unk.edu

ABSTRACT

The world economy is experiencing the novel adoption of distributed currencies that are free from the control of central banks.
Distributed currencies suffer from extreme volatility, and this can lead to catastrophic implications during future economic crisis.
Understanding the dynamics of this new type of currencies is vital for empowering supervisory bodies from current reactive
and manual incident responders to more proactive and well-informed planners. Bitcoin, the ﬁrst and dominant distributed
cryptocurrency, is still notoriously vague, especially for a ﬁnancial instrument with market value exceeding $1 trillion. Modeling of
bitcoin overlay network poses a number of important theoretical and methodological challenges. Current measuring approaches,
for example, fail to identify the real network size of bitcoin miners. This drastically undermines the ability to predict forks, the
suitable mining difﬁculty and most importantly the resilience of the network supporting bitcoin. In this work, we developed
Evolutionary Random Graph, a theoretical model that describes the network of bitcoin miners. The correctness of this model
has been validated using simulated and measure real bitcoin data. We then predicted forking, optimal mining difﬁculty and
network size.

Introduction

The advent of scale-free networks1–3 evolved attempting to explore the viability of Erdös and Rényi’s random graph4 within the
context of real-world experimental data. Real-world information networks such as bitcoin overlay networks, the network of
miners supporting all bitcoin transactions, do not follow the scale-free characteristics. A number of attempts, using physical
probing, to map bitcoin overlay networks failed due to constraints such as failing to reach the nodes behind proxies and
distinguishing clusters of nodes5–14, which makes it an open research question since 2014. To overcome this, we propose
evolutionary random graph, a theoretical model describing the bitcoin overlay network, that helps in predicting the bitcoin
network topology, correcting existing mapping and predicting its emerging behavior. Our results suggest that the bitcoin overlay
network’s equilibrium size is proportional to bitcoin’s price.

0.1 Bitcoin overlay network

The bitcoin network can be represented as a stack of four layers, as shown in ﬁgures 1, 2, 3 and 4. The lowest layer is the
internet itself (although bitcoin can be hosted in a private network), which is responsible for the physical exchange of messages.
The second layer is the overlay network which is a virtual topology created on top of the physical network to abstract the
underlying network in such a way that physical distances become meaningless. In ﬁgure 4, the underlying network resembles
part of the internet, while the overlay network, ﬁgure 3, creates links (neighboring links) and neighborhoods, represented as red
dotted lines, irrespective of the underlying network structure. Since the links are not restricted by a maximum distance, overlay
networks are free from the spatial-temporal restrictions imposed on the internet. The third layer is the Bitcoin Overlay Network
(BitOverNet) which divides the nodes into two types. The ﬁrst type is the client/wallet (represented as green node in ﬁgure 2),
who requests a transaction through a miner. The second type is the miner (represented as red node in ﬁgure 2) who receives the
request from his/her clients and inform other miners about the received request before competing on generating the new block
of transactions. Since each client is connected to one miner and not connected to other clients, the BitOverNet can be deﬁned
as the network of miners (represented by red nodes and yellow links in ﬁgure 2). The network of miners, the focus of our study,
is the backbone for all bitcoin transactions. The highest layer is the bitcoin transaction network, ﬁgure 1, which is a virtual
network representing the clients involved in bitcoin transactions. The network is virtual since the clients are not connected
using any communication channel, but the clients’ ids are mentioned in the same transaction (like the foreign key relationships
in relational databases). The miners are transparent at this layer and thus considered a network of clients and transactions.

 
 
 
 
 
 
0.2 Mapping the bitcoin overlay network
In bitcoin networks, miners follow a competing/competitive process in generating a valid bitcoin block. When a block is
generated, it gets broadcasted to the successful miner’s neighbors who verify and rebroadcast it until all the miners gets
informed, similar to information diffusion15, 16, contagious diseases17 and other social contagious problems18. This operation is
called consensus and requires convergence time. If two miners independently issue two blocks within an interval shorter than
convergence time, the network fails to reach consensus and the bitcoin forks into two chains, as shown in ﬁgure 6. More on
bitcoin forking and its rate can be seen in19. The system can recover later by selecting the longer blockchain (this is one of the
reasons participating in the probabilistic ﬁnality of the bitcoin transaction). Although the system can recover later, but this has
dramatic consequences on the bitcoin users, such as double spending20.

The rate of block issuance is function of the miners’ computation power (proportional) and mining difﬁculty (inversely-
proportional) i.e. λ = f (computational-power, mining-difﬁculty). The convergence time is function of the network diameter i.e.
Tconv = f (network-diameter). Forking probability thus follows Poisson distribution with rate λ and period Tconv. To decrease
the forking probability, we can either:

1. Increase the mining difﬁculty: This is possible, but risks making mining ﬁnancially infeasible. Currently, this is the

only used option.

2. Decrease the computational power: The computational power is pseudo-following Moore’s law and thus always
increasing (and that’s why mining difﬁculty gets revisited regularly to counter the increase in computational power). So,
this option is not feasible.

3. Decrease the network diameter: this would either require decreasing the number of nodes or changing the network
structure (changing its scalability). In both cases, we need to ﬁrst measure the existing network before recommending
any changes. The implications of changing the network diameter are shown in ﬁgure 5.

Figure 1. Bitcoin transaction network

Figure 2. Bitcoin overlay network (the focus of this study)

2/12

Figure 3. Overlay network (peer-to-peer)

Figure 4. Physical network (Internet)

Knowing the network diameter is vital in understanding the BitOverNet, predicting forks and intervening to prevent crashes
from happening. Mapping it also has implications on improving its security such as its resilience against network attacks21–23
and robustness against selﬁsh24, trail25 and stubborn miners26. As discussed previously, scientists failed in mapping the
BitOverNet5–14 and this hinders progress in protecting it. It is worthy of noting that mapping the BitOverNet, ﬁgure 2, is
radically different than the bitcoin transaction network27–30, ﬁgure 1, and bitcoin lightning31.

1 Evolutionary Random Graph

One of the ﬁrst theorized networks is the random graph by Erdös and Rényi4 where it is generated by having N available nodes
equiprobably connected. For example, each two nodes are connected, using a link, with a probability p, as shown in algorithm
1 at table 1. When node (N + 1) gets introduced, it gets connected to each other node with the same probability p. The number
of nodes having k links nicely follows Poisson distribution, but as shown by Albert and Barabasi1, its elegant model does not
translate into real life applications.

Albert and Barabasi1 theorized the scale-free graph to address the discrepancies between real systems and the properties
of random graphs. Scale-free graph is generated by having N connected nodes. When node (N + 1) gets introduced, it gets
connected to each other node with a probability proportional to node’s properties, as shown in algorithm 2 at table 1.

The BitOverNet is free from spatial-temporal restrictions imposed on physical networks and from human-introduced biases
such as popularity in the case of WWW. It can be modeled as having N connected nodes, when node (N + 1) gets introduced, it
gets connected to each other node with the same probability p(N+1) = p
N , as shown in algorithm 3 at table 1. It is similar to
random networks in the way that a new node connects equiprobably to all existing nodes, but as more nodes join the network,
the probability of connection decreases. In bitcoin, each new node has to establish a ﬁxed number of outgoing connections
called m. It is worth noting that for implementation purposes, every released "Bitcoin Core" version has a hard-coded list of IP

3/12

Figure 5. Bitcoin network equilibrium: Implications of network diameter

Table 1. Link creation algorithms

A l g o r i t h m 1 :
Add_node_random (N+ 1)
{

A l g o r i t h m 2 :
A d d _ n o d e _ s c a l e _ f r e e (N+ 1)
{

A l g o r i t h m 3 :
A d d _ n o d e _ e v o l _ r a n d (N+ 1 )
{

F o r e a c h ( node i

i n N )

F o r e a c h ( node i

i n N)

F o r e a c h ( node i

i n N)

r = Random ( 0 , 1 )
i f (

r < p )

l i n k ( i , N+1)=1

{

}

}

{

}

}

r = Random ( 0 , 1 )
r < p i )
i f (

l i n k ( i , N+1)=1

r = Random ( 0 , 1 )
r < p / N)
i f (

l i n k ( i , N+1)=1

{

}

}

addresses that were available during the time the speciﬁc version was released32. This list does not create any guarantees about
the availability of those addresses, else this centrality results in a fatal ﬂaw.

We propose "Evolutionary Random" graph as a theoretical model that describes how BitOverNet behaves, as shown in

algorithm 3, having a probability density function (expected portion of nodes having k incoming links):

P(x = k) =

N
∑
i=1

mk(HN − Hmax(m,i))k
k! × em(HN −Hmax(m,i))

(1)

Where H is the harmonic number. To measure the accuracy of our bitcoin model, we simulated a BitOverNet (of 1000 miners)
and measured the number of peers having k links. Figure 7 shows the results of the bitcoin network in addition to the predicted
bitcoin model and a ﬁtted power-law distribution. It can be easily shown that BitOverNet does not show scale-free properties and
that evolutionary-random graph nicely predicts the dynamics of the bitcoin network. We can now utilize evolutionary-random
graph as a foundation for understanding the BitOverNet, predicting forks and considering its implications.

2 Network Diameter

Network diameter has been deﬁned by33 as “the maximal distance between any pair of its nodes.” Random graphs have, in
average, the diameter33, 34:

drandom =

ln(N)
ln(pN)

=

ln(N)
ln((cid:104)k(cid:105))

where k is the number of links per node and (cid:104)k(cid:105) is the average number of links. Scale-free networks scale better than random
graphs when it comes to diameter which can be represented as33:

dscale− f ree = A × ln(N − B) +C

where A, B and C are ﬁtting conﬁguration parameters. Its diameter tends asymptotically to

dscale− f ree ∝

(cid:40) ln(N)

ln(ln(N))
ln(N)

λ = 3, (Bollobas and Riordan2)
λ > 3, (Cohen and Havlin35)

4/12

Figure 6. Bitcoin’s blockchain, forking and recovery

BitOverNet’s diameter can be calculated theoretically, following evolutionary random graph, as:

devolutionary−random =

ln(∑∞

k=1

ln(N − 2 × m)
(∑N

i=1

(k+m)×mk
k!

(HN −Hmax(m,i))k
m(HN −Hmax(m,i)) ))
e

+ 2

(2)

To test the predicted network’s accuracy, we simulated the bitcoin network with different sizes (values of N between 100
and 100000) and measured its network diameter averaged over 100 iterations. The values of the measured and predicted
bitcoins can be seen in ﬁgure 8. It is observable that the diameter scales with factor of 10 (linear over log axis), so we can
present a simpliﬁed version of the evolutionary random graph’s diameter before elaborating on its scalability. The evolutionary
random graph’s diameter can be simpliﬁed as follows:

simpli f ied − devolutionary−random = 1 + log(N)

(3)

To verify whether scaling by factor of 10 was serendipitous, we simulated (following the above conﬁguration) the bitcoin
network for different values of m (number of outgoing connections). We found that it scales by factor of “m + 2”. Since

5/12

Figure 7. BitOverNet’s incoming link distribution

bitcoin’s default m is 8, it scaled by factor of 10. Accordingly, we can generalize the simpliﬁed evolutionary random graph’s
diameter, as shown in ﬁgure 9, into:

simpli f ied − devolutionary−random =1+logm+2(N) + ε

(4)

The correctness of BitOverNet’s diameter model has been validated, using measured data, in section 2.1.

2.1 Result veriﬁcation: Block propagation delay
Blocks generated by miners located at the periphery of the network (nodes with low centrality) need d hops to reach all the
networks, where d is the network diameter. The blocks generated by miners located at the center of the network (miners with
high centrality) need less hops than those starting from the periphery (let us call it network radius). Blocks generated by other
miners need a number of hops between network radius and diameter. It is expected that the convergence of those blocks starting
from the center follows a pseudo logarithmic shape, while those starting from the periphery follows a pseudo sigmoidal shape.
Following devolutionary−random, we can deduce the convergence (propagation) of a block based on its source. Accordingly, we
deﬁne the convergence of blocks starting at the center and at the periphery as follows:

converradius =

ln(n)

ln(∑∞

k=1

(k+m)×mk
k!

(∑N

i=1

(HN −Hmax(m,i))k
m(HN −Hmax(m,i)) ))
e

× Shd

converdiameter = (

ln(∑∞

k=1

ln(n − 2 × m)
(∑N

i=1

(k+m)×mk
k!

(HN −Hmax(m,i))k
m(HN −Hmax(m,i)) ))
e

+ 2) × Shd

(5)

(6)

where n is the number of miners the block reached. Full convergence is achieved when n = N . Shd is the "Single hop
delay" which is equivalent to the block’s link propagation between two individual miners and the time needed for the receiving
miner to verify its correctness. The ﬁrst 1000 miners receiving a block are recorded in36, 37 and this provides a great opportunity
to verify our predictions. The correctness of the predictions have been tested for all blocks, but we are only showing illustrative
samples. It can be seen in ﬁgure 10 that the Shd is around 2000ms since the block arrival time is varying in multiples of 2000ms.
Some of the blocks (such as the block with hash starting with a39b5ce4b64...) reach a considerable number of miners in the ﬁrst
Shd and this represents blocks generated by miners with high centrality. Other blocks (such as block with hash starting with
fb78c02...) reach a small number of miners in the ﬁrst Shd and this represents blocks generated by miners with low centrality.
It can be seen in ﬁgure 11 that the convergence equations describe the block propagation of blocks generated by a node with
high/low centrality.

Using the same data, but showing the number of blocks reached at every Shd, as shown in ﬁgure 12, it can be seen that the
block issued by a node with high centrality shows a pseudo logarithmic convergence (only the ﬁrst part is shown since only the
arrival time at the ﬁrst 1000 nodes is logged). Similarly, it can be seen that the block issued by a node with low centrality shows
a pseudo logarithmic convergence.

6/12

Figure 8. BitOverNet vs. Evolutionary Random graph’s diameter

Figure 9. Scaling of Evolutionary Random graph

7/12

Figure 10. Block propagation (ﬁrst 1000 nodes)

Figure 11. Block propagation vs. prediction

Figure 12. Cumulative block propagation (ﬁrst 1000 nodes)

8/12

3 Forking Probability and Mining Difﬁculty

As discussed at the start of this work, forking happens when the inter-arrival time between two mined blocks is less than the
propagation delay. It is not a simple Poisson distribution because when a miner receives a block, from its neighbor, it stops
mining and waits for consensus. This converts the problem into a sequence of Poisson distributions each with less rate λ (since
after every period, less miners remain mining, uninformed of the mined block, until reaching 0 and this when consensus is
achieved). The forking probability is then:

1 −

(cid:100)devol−rand (cid:101)
∏
i=1

e−shd×λmine×ψ i

≤ P( f orking) ≤ 1 −

(cid:98)devol−rand (cid:99)
∏
i=1

e−shd×λmine×ψ i

(7)

(HN −Hmax(m,i))k
where ψ = (∑∞
m(HN −Hmax(m,i)) )), shd is the propagation delay between two miners in addition to the time a
e
miner takes to verify the correctness of the generated block and λmine is the probability of one miner generating a block in a
period of time. λmine can be simpliﬁed as:

(k+m)×mk
k!

(∑N

k=1

i=1

λmine =

computational-speed
mining-difﬁculty

(8)

Knowing the forking probability, we can change the mining difﬁculty proactively in a way that forking probability remains
below set threshold. This is an important upgrade to the reactive way bitcoin has been and is currently being managed.
Radically increasing the mining difﬁculty can drop the forking probability but causes mining to become ﬁnancially infeasible
and this depletes bitcoin of its miners. The developed model helps in calibrating the network parameters. The minimum mining
difﬁculty for keeping forking probability below threshold is:

mining-diff ≥

−computational-speed × ∑

(cid:98)devol−rand (cid:99)
j=1

shd × Ψ j

ln(1 − threshold)

4 Economic Equilibrium

(9)

The BitOverNet will remain stable if the miners are making enough proﬁts to keep them running, but not to attract additional
miners which will decrease the proﬁts generated by all other miners. This is a two-stage equilibrium problem, the ﬁrst is within
the same network diameter where additional miners cause the mining proﬁts to be divided over a larger pool of miners and thus
resulting in less proﬁts per miner. The second stage is when the increase in the number of miners results in drastic increase in
the network diameter. The ﬁrst stage is a classic economics problem, so we will only focus on the second. Let us consider
the proﬁt of mining a block to be Proﬁt-mining. The proﬁt of mining a block is function of the bitcoin price which is not our
interest in this paper and will only be represented as proﬁt-mining. Let the cost of mining be cost-mining:

cost-mining =

c × mining-difﬁculty
computational-speed

(10)

where c is a constant related to costs (such as electricity). Let computational-speed be the average computational speed per
miner. For miners to remain interested in mining, proﬁt-mining – cost-mining should remain positive and thus the number of
miners should remain:

N ≤

proﬁt-mining
c

×

−ln(1 − threshold)

(cid:98)devol−rand (cid:99)
j=1

∑

shd × ψ i

Using the simpliﬁed network diameter, we can conclude that:

N × (1 + log(N)) × e

ln(N−2×m)
log(N)−1 ≤

−ln(1 − threshold) × proﬁt-mining
c

Equilibrium is achieved when proﬁt =0 and thus the stable network size is:

N × (1 + log(N)) × e

ln(N−2×m)
log(N)−1 =

−ln(1 − threshold) × proﬁt-mining
c

(11)

(12)

(13)

9/12

5 Conclusion

The contributions of this work are multi-folded. First, we developed a theoretical model for bitcoin overlay network to overcome
the technical hurdles facing mapping it. Second, we calculated the minimum mining difﬁculty required for limiting forking.
As can be seen in7, the forking rate dropped signiﬁcantly after July 2018, and this is not healthy since it was due to a radical
increase in mining difﬁculty.

Bitcoin mining is an investment which makes it dependent, not just on bitcoin’s price, but on involved risks, revenues
from alternative investments, legal constraints, economic growth and tolerance to risk. In a future work, we will investigate
proﬁt-mining and incorporate it as investment attractiveness38.

References

1. Barabási, A.-L. & Albert, R. Emergence of scaling in random networks. Science 286, 509–512, DOI: 10.1126/science.286.

5439.509 (1999).

2. Bollobas, B. & Riordan, O. The diameter of a scale-free random graph. Combinatorica 24, 5–34, DOI: 10.1007/

s00493-004-0002-2 (2004).

3. Albert, R., Jeong, H. & Barabási, A.-L. Diameter of the world-wide web. Nature 401, 130–131, DOI: 10.1038/43601
(1999). Bandiera_abtest: a Cg_type: Nature Research Journals Number: 6749 Primary_atype: Research Publisher: Nature
Publishing Group.

4. Erd˝os, P. On random graphs i. Publ. Math. Debrecen 290–297 (1959).

5. Lischke, M. & Fabian, B. Analyzing the bitcoin network: The ﬁrst four years. Futur. Internet 8, 7, DOI: 10.3390/ﬁ8010007

(2016). Number: 1 Publisher: Multidisciplinary Digital Publishing Institute.

6. Deshpande, V., Badis, H. & George, L. Btcmap: mapping bitcoin peer-to-peer network topology. In 2018 IFIP/IEEE
International Conference on Performance Evaluation and Modeling in Wired and Wireless Networks (PEMWN), 1–6 (IEEE,
2018).

7. Neudecker, T. & Hartenstein, H. Network layer aspects of permissionless blockchains. IEEE Commun. Surv. Tutorials 21,
838–857, DOI: 10.1109/COMST.2018.2852480 (2019). Conference Name: IEEE Communications Surveys Tutorials.

8. Delgado-Segura, S. et al. TxProbe: Discovering bitcoin’s network topology using orphan transactions. In Goldberg, I. &
Moore, T. (eds.) Financial Cryptography and Data Security, vol. 11598, 550–566, DOI: 10.1007/978-3-030-32101-7_32
(Springer International Publishing, Cham, 2019). Series Title: Lecture Notes in Computer Science.

9. Essaid, M., Park, S. & Ju, H. Visualising bitcoin’s dynamic p2p network topoogy and performance. In 2019 IEEE
International Conference on Blockchain and Cryptocurrency (ICBC), 141–145, DOI: 10.1109/BLOC.2019.8751305
(2019).

10. Ben Mariem, S., Casas, P. & Donnet, B. Vivisecting blockchain p2p networks: Unveiling the bitcoin ip network. In ACM

CoNEXT student workshop (2018).

11. Eisenbarth, J.-P., Cholez, T. & Perrin, O. An open measurement dataset on the bitcoin p2p network. In 2021 IFIP/IEEE

International Symposium on Integrated Network Management (IM), 643–647 (2021). ISSN: 1573-0077.

12. Donet Donet, J. A., Pérez-Solà, C. & Herrera-Joancomartí, J. The bitcoin p2p network. In Böhme, R., Brenner, M., Moore,
T. & Smith, M. (eds.) Financial Cryptography and Data Security, vol. 8438, 87–102, DOI: 10.1007/978-3-662-44774-1_7
(Springer Berlin Heidelberg, Berlin, Heidelberg, 2014). Series Title: Lecture Notes in Computer Science.

13. Park, S., Im, S., Seol, Y. & Paek, J. Nodes in the bitcoin network: Comparative measurement study and survey. IEEE

Access 7, 57009–57022 (2019).

14. Miller, A. K. et al. Discovering bitcoin’s public topology and inﬂuential nodes (2015).

15. Fake news threatens a climate literate world. Nat. Commun. 8, 15460, DOI: 10.1038/ncomms15460 (2017). Bandiera_abtest:
a Cc_license_type: cc_by Cg_type: Nature Research Journals Number: 1 Primary_atype: Editorial Publisher: Nature
Publishing Group Subject_term: Climate change Subject_term_id: climate-change.

16. Rogers, E. M. et al. The innovation journal: The public sector innovation journal, volume 10(3), article 29. COMPLEX

ADAPTIVE SYSTEMS AND THE DIFFUSION OF INNOVATIONS.

17. Cirillo, P. & Taleb, N. N. Tail risk of contagious diseases. Nat. Phys. 16, 606–613, DOI: 10.1038/s41567-020-0921-x
(2020). Bandiera_abtest: a Cg_type: Nature Research Journals Number: 6 Primary_atype: Reviews Publisher: Nature
Publishing Group Subject_term: SARS-CoV-2;Statistics Subject_term_id: sars-cov-2;statistics.

10/12

18. Giles, J. Social science lines up its biggest challenges. Nature 470, 18–19, DOI: 10.1038/470018a (2011). Bandiera_abtest:
a Cg_type: Nature Research Journals Number: 7332 Primary_atype: News Publisher: Nature Publishing Group Sub-
ject_term: Economics;Public health;Society Subject_term_id: economics;public-health;society.

19. Neudecker, T. & Hartenstein, H. Short paper: An empirical analysis of blockchain forks in bitcoin.

In Goldberg,
I. & Moore, T. (eds.) Financial Cryptography and Data Security, Lecture Notes in Computer Science, 84–92, DOI:
10.1007/978-3-030-32101-7_6 (Springer International Publishing, Cham, 2019).

20. Karame, G. O., Androulaki, E., Roeschlin, M., Gervais, A. & ˇCapkun, S. Misbehavior in bitcoin: A study of double-

spending and accountability. ACM Transactions on Inf. Syst. Secur. 18, 2:1–2:32, DOI: 10.1145/2732196 (2015).

21. Saad, M., Cook, V., Nguyen, L., Thai, M. T. & Mohaisen, A. Partitioning attacks on bitcoin: Colliding space, time,
and logic. In 2019 IEEE 39th International Conference on Distributed Computing Systems (ICDCS), 1175–1187, DOI:
10.1109/ICDCS.2019.00119 (2019). ISSN: 2575-8411.

22. Tran, M., Shenoi, A. & Kang, M. S. On the routing-aware peering against network-eclipse attacks in bitcoin. 1253–1270

(2021).

23. Tran, M., Choi, I., Moon, G. J., Vu, A. V. & Kang, M. S. A stealthier partitioning attack against bitcoin peer-to-peer
network. In 2020 IEEE Symposium on Security and Privacy (SP), DOI: 10.1109/SP40000.2020.00027 (2020). ISSN:
2375-1207.

24. Bai, Q. et al. A deep dive into blockchain selﬁsh mining.

In ICC 2019-2019 IEEE International Conference on

Communications (ICC), 1–6 (IEEE, 2019).

25. Grunspan, C. & Pérez-Marco, R. On proﬁtability of trailing mining. arXiv preprint arXiv:1811.09322 (2018).
26. Nayak, K., Kumar, S., Miller, A. & Shi, E. Stubborn mining: Generalizing selﬁsh mining and combining with an eclipse

attack (2015).

27. Serena, L., Ferretti, S. & D’Angelo, G. Cryptocurrencies activity as a complex network: Analysis of transactions graphs.

Peer-to-Peer Netw. Appl. DOI: 10.1007/s12083-021-01220-4 (2021).

28. Tao, B., Ho, I. W.-H. & Dai, H.-N. Complex network analysis of the bitcoin blockchain network.

In 2021 IEEE
International Symposium on Circuits and Systems (ISCAS), 1–5, DOI: 10.1109/ISCAS51556.2021.9401533 (2021). ISSN:
2158-1525.

29. Fischer, J. A., Palechor, A., Dell’Aglio, D., Bernstein, A. & Tessone, C. J. The complex community structure of the bitcoin

address correspondence network. Front. Phys. 9, 363, DOI: 10.3389/fphy.2021.681798 (2021).

30. Michalski, R. & Pieczka, M. Dru: Studying blockchain as a complex network. In 2020 IEEE/ACM International Conference
on Advances in Social Networks Analysis and Mining (ASONAM), 929–932, DOI: 10.1109/ASONAM49781.2020.9381469
(2020). ISSN: 2473-991X.

31. Bartolucci, S., Caccioli, F. & Vivo, P. A percolation model for the emergence of the bitcoin lightning network. Sci.
Reports 10, 4488, DOI: 10.1038/s41598-020-61137-5 (2020). Bandiera_abtest: a Cc_license_type: cc_by Cg_type:
Nature Research Journals Number: 1 Primary_atype: Research Publisher: Nature Publishing Group Subject_term: Applied
mathematics;Complex networks Subject_term_id: applied-mathematics;complex-networks.

32. developer, B. P2p network (2022).
33. Albert, R. & Barabási, A.-L. Statistical mechanics of complex networks. Rev. Mod. Phys. 74, 47–97, DOI: 10.1103/

RevModPhys.74.47 (2002). Publisher: American Physical Society.

34. Chung, F. & Lu, L. The diameter of sparse random graphs. Adv. Appl. Math. 26, 257–279, DOI: 10.1006/aama.2001.0720

(2001).

35. Cohen, R. & Havlin, S. Scale-free networks are ultrasmall. Phys. Rev. Lett. 90, 058701, DOI: 10.1103/PhysRevLett.90.

058701 (2003). Publisher: American Physical Society.

36. Yeow, A. Bitnodes (2022).

37. Blockchain.com. Blockchain charts: The most trusted source for data on the bitcoin blockchain (2022).
38. Elton, E. J., Gruber, M. J., Brown, S. J. & Goetzmann, W. N. Modern portfolio theory and investment analysis (John Wiley

& Sons, 2009).

Author contributions statement

J.B.A. designed the mathematical model, J.B.A. and S.D. developed the simulation, J.B.A. and B.Q. collected the measurements,
J.B.A. and L.H. analysed the results. All authors reviewed the manuscript.

11/12

Additional information

Competing interests
The author(s) declare no competing interests.

12/12

