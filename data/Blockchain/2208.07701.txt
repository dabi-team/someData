Received: Added at production

Revised: Added at production

Accepted: Added at production

DOI: xxx/xxxx

ARTICLE TYPE

Using blockchain in the follow-up of emergency situations related
to events

Alexandra Rivero-García* | Iván Santos-González | Candelaria Hernández-Goya | Pino Caballero-Gil

1Departament of Computer Science and
Systems, University of La Laguna,
Tenerife, Spain

Correspondence
*Alexandra Rivero Garcia. Email:
ariverog@ull.edu.com

Summary

This paper describes a decentralized low-cost system designed to reinforce per-

sonal security in big events in case of emergency. The proposal consists of using
smart contracts supported by blockchain in the management of events. An alterna-

tive communication channel that does not require any cloud service is also provided

with the aim of improving the coordination of emergency services. Peers may use

this emergency support tool to interact with each other through a chat when addi-

tional support is required. Since information security is mandatory in this scenario,

Identity-Based Signcryption schemes are here used in order to guarantee communi-

cation conﬁdentiality, authenticity and integrity. Depending on the communication

mode (peer-to-peer or broadcast), diﬀerent signcryption methods are used. A ﬁrst

implementation of the proposal has produced promising results.

KEYWORDS:
Identity-Based Signcryption, blockchain, smart contract, emergencies, Android

1

INTRODUCTION

The number of massive events in the cities is constantly increasing due to ﬂood risk, protest march, a concert, a ﬁre, etc. and all
of them has to be controlled by the rescue staﬀ (police, ﬁreﬁghters, medical staﬀ, etc.). The fast evolution of the communication
technologies has generated multiple new approaches in diﬀerent scenarios where the use of smartphones to backing the diﬀerent
daily tasks, due to their small size and high performance, is more important every day. One of the most important things of
this small tools is that they are equipped with very powerful communication technologies that can help in diﬀerent scenarios,
including the aforementioned.

The emergence of blockchain technology has driven the introduction of decentralized data structures in multiple scenarios. Its
main point of interest is the possibility of storing huge amounts of data in network nodes, enabling them to verify and approve
any transaction. Integrity protection of the information stored in this data structure is also guaranteed.

This paper presents a decentralized low-cost model based on blockchain and on the establishment of an alternative communi-
cation channel to improve the intervention of emergency services without requiring any cloud service. In particular, the use of a
permissioned blockchain is a fundamental issue in this proposal because write permission is granted only to qualiﬁed members
while the information generated for an event may be accessible and veriﬁable by all personnel involved in it, at any moment. In
particular, only authorized staﬀ can read the blocks, execute a smart contract and verify new blocks. This approach facilitates
coordination among emergency services, because thanks to this if the event is generated by someone that below to an speciﬁc
organization, the rest of the organizations can verify in every moment the generated event without the necessity of a speciﬁc

2
2
0
2

g
u
A
5
1

]

R
C
.
s
c
[

1
v
1
0
7
7
0
.
8
0
2
2
:
v
i
X
r
a

 
 
 
 
 
 
2

Alexandra Rivero-Gracía ET AL

global system. Moreover, everyone can access to the information of the event and manage the information for the coordination
in a private way supposing it an important advantage in relation to the process used nowadays.

The idea behind the proposal is to associate incidents with blocks in a smart contract. Once any member of emergency
organizations detects an incident, a new block is generated to be include in the blockchain after been validated by nearby staﬀ.
Then, alerts are issued to the rest of the assigned emergency staﬀ. As a result of this, the emergency staﬀ has access to the event
information and may act depending on it. The smart contract has to be created by some authorized member of an emergency
body. Initially, formatted information regarding the event and the assigned emergency staﬀ is sent to the smart contract. Part of
this information is related to the security of the communication among workers, based on the event information. Once the event
is in the blockchain, the ﬁrst step is the assignment of diﬀerent emergency service resources to speciﬁc areas to help to preserve
civil security.

We can see an example in Figure 1 where there are three simultaneous events: a cultural event with large ﬂow of people in
green, a protest march in orange and an area with high risk of ﬂood in blue. All this events are veriﬁed and diﬀerent types of
emergency service workers must be assigned to the diﬀerent zones.

FIGURE 1 Geolocation of events.

When an event is generated, the assigned emergency staﬀ may access the block and some pre-shared information related to
the event. Based on this information, workers can participate via mobile phone in a generic event chat associated to the speciﬁc
event to share information related to coordination.

Currently, communications among emergency services are carried out mostly by radio frequency. Here, the use of two diﬀerent
wireless technologies through smartphones: Bluetooth Low Energy (BLE) 1 and Wi-Fi Direct 2 is proposed. In cases of network
congestion, the system will declare “emergency mode” and the communications will proceed directly through these technologies
in registered smartphones. Two communication modes are supported: Peer-TO-Peer (P2P) mode, where the system establishes
a direct channel through Wi-Fi Direct between two registered participants; and broadcast mode, where the system shares a
message through BLE with all the recipients simultaneously.

Since this work deals with critical situations, communication security is essential. That is why an identity-based encryption
scheme is here proposed 3. Speciﬁcally, an identity-based signcryption scheme based on the geolocation and the public iden-
tiﬁcation of emergency service workers is used. All shared messages are signed and encrypted with this scheme. The used

Alexandra Rivero-Gracía ET AL

3

signcryption scheme is a combination of an ID-Based Signcryption Scheme 4 and an ID-Based Signcryption Scheme for Multiple
Receivers 5.

In the proposal, communication is done through two diﬀerent technologies using smartphones: Bluetooth Low Energy (BLE) 1
and via Wi-Fi Direct 2. The features described below will be taken into account to choose the alternative. When possible the
channel created by Wi-Fi Direct, due to its higher rate of speed and its greater range, will be used. Bluetooth Low Energy has
a transmission rate of 25 Mbps and Wi-Fi Direct has a transmission rate of 250 Mbps. The maximum range of Bluetooth Low
Energy Communication is 60 meters, while Wi-Fi Direct has a range of 200 meters. In the same range of Wi-Fi, Wi-Fi Aware
improves the performance of Wi-Fi Direct. Wi-Fi Aware 6 is only available for the latest version of Android 7 and as a preview
mode.

This paper is structured as follows. Section 2 includes a review of publications related to the proposed system. In Section 3
some preliminaries are explained while the proposed system is introduced in Section 4. The event generation using blockchain-
based smart contracts is deﬁned in Section 5, jointly with the details of the used communication scheme and its formal
description. Section 6 deals with the description of the elements included in the implementation. Finally, Section 7 ends the
paper, summarizing the main contributions of the proposal.

2

RELATED WORKS

This paper describes an application of smart contracts in the secure management of emergencies in large events. Today, most
communications deployed in emergency situations are based on RF technology, which can be considered a poor solution because
it only allows audio to be shared on a speciﬁc frequency, and it is not possible to group and share media data eﬀectively.

On the one hand, some solutions based on the modeling and evaluation of emergency management support system has been
created. In 8 a use of case based on a complex edge computing is proposed. On the other hand, multiple solutions based on Wi-
Fi Direct have been proposed, such as 9 where the potential of Wi-Fi Direct in the implementation of mobile P2P systems is
evaluated.

That work includes some examples of the use of Wi-Fi Direct to share text messages, to disseminate information. A middle-
ware for P2P networking is used to distribute hash tables to search for peers. The work 10 proposes generating opportunistic
networks over Wi-Fi Direct by studying the latency at the link layer. That is an extension of 11, where multiple groups are
generated and experimental measurements are presented to conﬁrm the suitability of Wi-Fi Direct for P2P systems.

The use of Wi-Fi Direct for alternative communication in emergency situations was proposed in 12, but not for communication
among emergency services. The main goal of that application is to share the geolocation of victims when they are isolated. A
ﬁrst implementation may be found at 13, where a partial solution for communication in emergencies according to a centralized
model was proposed.

The approach here described diﬀers from others in that it takes into account the distribution, assignment and location of human
resources in big events, and information security is addressed as a global requirement. Blockchain is included as an speciﬁc tool
to address security aspects.

Regarding blockchain background, the ﬁrst application of the concept was in the ﬁnance scenario 14. A decentralized model

to share information, including the concept of transaction is also described there.

Two other more recent contributions to the health and sanitary setting using blockchain are 15 and 16. The ﬁrst one describes a
prototype to allow patients to have access to all their medical data through the integration of data and medical providers according
to diﬀerent roles. The second paper aims to improve the process of data sharing between researchers and health care providers.
The work 17 provides a complete analysis of the use of blockchain in medicine. Although it points out scalability and data
access control as general obstacles, it identiﬁes several promising groups of applications in that scenario. For instance, the
management of electronic health records is highlighted as one of these areas of interest.

Some initiatives, such as Hyperledger, have been used to develop diﬀerent solutions based on blockchain for healthcare and
Internet of Things (IoT). A very detailed analysis of the use of IoT and blockchain has been created on the work 18. There, the
authors analyze all the blockchain mechanisms for IoT security. The work 19 presents a solution based on the monitorization
of IoT sensors in a connected gateway for BLE. Patients may control which users have access to their data through a mobile
application.

In the work 20, a secure attribute-based signature scheme is proposed to store medical health records in a blockchain and to
manage the access to this information based on the attributes of each user. There, multiple authorities are allowed to access

4

Alexandra Rivero-Gracía ET AL

to the blockchain, limiting the accessible data set. In a similar way, the authors of 21 propose the use of blockchain to preserve
privacy of medical data.

Another solution based on the use of smart contracts in healthcare is 22, where patients are monitored to detect events related to
medical conditions. This system allows sending notiﬁcations when conditions change and a record of activities is also provided.

3

PRELIMINARIES

Blockchain

3.1
Roughly speaking, blockchain is a decentralized database that stores a registry of assets and transactions across a computer
network. Speciﬁcally, it can be seen as a P2P network that is secured through strong cryptography. Each item holds a timestamp
and a link to a previous document. In this manner, once this item is sealed, it is theoretically impossible to modify it. Hence, the
information inserted in the blockchain is persistent once it is inserted in the system.

A transaction takes place when the timestamp is obtained. This procedure provides the blockchain with a time registration

mechanism, enabling the possibility of knowing the timeline of information generation.

Blocks represent conﬁrmed transactions. Each block contains a code linking it to the previous block, some information related
to the transaction (involved people, amount of cryptocurrencies, etc.), and another code linking it to the next block. Both codes
are computed with a hash function used to generate a chain. A basic example is shown in Figure 2, where relations between
blocks according to their hash codes is illustrated.

FIGURE 2 Blockchain example.

There is a main block that is the ﬁrst one named genesis block. This block is identiﬁed because the hash value of its previous
block is ’0000’. In a blockchain, a token is a representation of a physical or digital asset built on some native currency. Blockchain
tokens include some speciﬁc properties like a name, a symbol, the initial number of minted units, the maximum number of units,
the severability (because a token can be divisible into smaller units or be indivisible) and a link either to an underlying physical
or virtual value or asset, or to give it power to perform some action.

Alexandra Rivero-Gracía ET AL

5

Smart contracts

3.2
A contract is an agreement between two or more parties, including a set of requirements and execution conditions accepted by the
endorsers. Up to now, contracts have been written documents subject to the laws. Smart contracts extend this concept to computer
programs that execute agreements established between two or more parties when a pre-programmed condition happens.

Due to its nature, a smart contract is valid without the need of authorities because it is a code. Blockchain technology makes
possible to share this code with all network nodes, guaranteeing that it cannot be modiﬁed. Hence, the main features of smart
contracts are decentralization, persistence and transparency.

Many of the latest implementation proposals for smart contracts are based on Ethereum. This option operates on a distributed
computing platform based on a public blockchain using a crypto-currency called ether. Solidity is the language used in Ethereum.
It is a statically typed object-oriented language similar to Java in its syntax.

Identity-based signcryption

3.3
Identity-Based Encryption (IBE) avoids typical problems related to certiﬁcates in public key cryptography because public keys
are information used to identify users of the system (email address, social security number, personal identiﬁer, etc). Thus, the
use of an IBE scheme allows the user to encrypt data with the public identiﬁer associated to the the receiver, and to decrypt the
message, the recipient will use private information that only he/she knows.

Based on this idea, some variants can be found in the scientiﬁc literature. For example, Identity-Based SignCryption (IBSC)
schemes where a composition of an encryption scheme with a signature scheme is deﬁned. This combination allows the system
to guarantee integrity, conﬁdentiality, authenticity and non-repudiation eﬃciently and in a single step.

The best known IBSC schemes are based on bilinear pairings on elliptic curves.

Bilinear pairing

3.4
A bilinear pairing can be deﬁned as follows. Let (𝔾, +) and (𝔾𝕋 , ⋅) be two cycling groups of the same prime order 𝑞. Let 𝑃 be a
generator of 𝔾 and ̂𝑒 ∶ 𝔾 × 𝔾 → 𝔾𝕋

be a bilinear map pairing that satisﬁes the following conditions:

• Bilinear, ∀𝑃 , 𝑄 ∈ 𝔾 and ∀𝑎, 𝑏 ∈ ℤ, ̂𝑒(𝑎𝑃 , 𝑏𝑄) = ̂𝑒(𝑃 , 𝑄)𝑎𝑏.

• Non-degenerate, ∃𝑃1, 𝑃2 ∈ 𝔾 such that ̂𝑒(𝑃1, 𝑃2) ≠ 1. This means that if 𝑃 is a generator of 𝔾, then ̂𝑒(𝑃 , 𝑃 ) is a generator

of 𝔾𝕋

.

• Computability, there exists an algorithm to compute ̂𝑒(𝑃 , 𝑄), ∀𝑃 , 𝑄 ∈ 𝔾.

Elliptic Curve Discrete Logarithm Problem

3.5
Let’s consider the cyclic group {0, 𝑃 , 2𝑃 , 3𝑃 , ...} for any point 𝑃 on an elliptic curve where the operation 𝑘𝑃 is called scalar
multiplication, being 𝑘 an integer. The Elliptic Curve Discrete Logarithm Problem (ECDLP) consists in ﬁnding 𝑘, given the
points 𝑘𝑃 and 𝑃 . Solving the ECDLP for appropriate parameters is computationally infeasible, and is the basis of the proposed
scheme.

4 GLOBAL SYSTEM VIEW

The main idea behind the proposal is to put forward a permissioned blockchain to monitor risk level in big events and to
improve the deployment of material and human resources if an emergency occurs. Permissioned blockchains are those in which
transaction processing is carried out by a list of known and authorized participants (Figure 3).

Participant entities may be hospitals, emergency services, police stations, health centres, ﬁre stations and forest guards and

other governmental authorities, such us municipalities, local, state or national authorities.

The process presented here starts when a member of an emergency body detects an incident and generates a notiﬁcation by
using his/her smartphone to be send to his/her organization. This notiﬁcation contains the geolocation, the kind of incident,

6

Alexandra Rivero-Gracía ET AL

FIGURE 3 Block generation process.

and the estimated level of risk. The proposed signcryption scheme is applied on this notiﬁcation to guarantee its conﬁdentiality,
integrity and authenticity.

Once the corresponding entity veriﬁes the identity of the person who sent the notiﬁcation, it generates the smart contract and
requests ratiﬁcation from other members belonging to the organization located near the incident. If any ratiﬁcation is received,
a new block is generated and inserted into the blockchain with the corresponding output of the smart contract. Consequently,
all the participating entities may access to the incident information through the blockchain (see Figure 4).

After adding the incident to the blockchain, resource allocation to limit possible risks is carried out. The resource inventory

assigned to the incident is made publicly available by including it in the smart contract.

The system uses a permissioned blockchain to distribute keys for secret communication during the event. The personnel may
access the blocks, and a chat service where they may participate because they have some pre-shared information, is enabled for
the event. Thus, the participants do not need any native token because the assets are the speciﬁc resources (staﬀ, machinery,
etc.) owned by the entities. To make it possible, the created network has to have at least the 50% of the users of the blockchain
to have consensus and write new blocks. This is possible because this blockchain is used only in the emergency and most of the
users are there.

In order to prevent network congestion, an alternative communication system for emergency service staﬀ and supported by

mobile phones is provided. It supports two diﬀerent communication modes: P2P and broadcast.

When the emergency mode is activated, it is necessary to share some users’ public information regarding user’s ID. This
information is shared here through BLE using beacon mode (see Figure 5). Every participant has a list of identiﬁers (IDs)
corresponding to nearby people. This list must be made publicly available in order to verify who the legitimate participants are.
This is achieved by including such a list in the smart contract.

Data shared through this new communication channel must be protected. An ID-Based Signcryption scheme is implemented
to complete this task in both communication modes. Participating in secure communications is possible only when possessing
an identiﬁer included in the smart contract list.

There is a central application (mobile application) to handle the event and distributing information among the participant
staﬀ. Its management is collaborative and all the entities involved in the event may participate in it. The initialization steps

Alexandra Rivero-Gracía ET AL

7

FIGURE 4 Flow of the event generation.

FIGURE 5 Sharing identiﬁers through beacon mode.

are as follows. Firstly, the authorized entity generates the event and assigns diﬀerent types of resources to the event. Speciﬁc
information that allows staﬀ participation in the chat system is also provided.

A unique identiﬁer randomly generated is assigned to each event together with its geolocation. In order to prevent the gen-
eration of false multiple events, it is considered that a range of some miles refer to the same event. When a member of the
emergency staﬀ is assigned to an event, the system generates speciﬁc credentials and keys to share data. Users may get from the
mobile application their own location, theirs peers’ locations and the scope area of the event.

8

Alexandra Rivero-Gracía ET AL

The system is designed to allow that emergency staﬀ with heterogeneous communication capabilities may interact and have
access to shared information. The event information can be updated and sent to the blockchain as many times as needed by
generating a new block containing the reference to the event identiﬁer (eventID). Figure 6 describes how the information may
be accessed.

FIGURE 6 Information access.

Among the relevant ﬁelds included in the smart contacts we have the identiﬁer of the person who generates the event (gen-
erator), the entity to which this person belongs, and the rules (privacyPolicy) to access the smart contract. Apart from that, the
system deﬁnes some values like the identiﬁer of the event (eventID) and its geolocation (location).

Events are classiﬁed by using a code in the contract denoted as kind (ﬁre, climate phenomenon, seismic phenomenon, volcanic
phenomenon, ﬂooding, pollution, etc.) in order to estimate what resources it requires. State represents the status of the event:
created (refers to the state in which a person sends the creation of the event before receiving conﬁrmation from the rest of the
participants), veriﬁed (is used when a real event exists and some staﬀ is working in it) and inactive (is the state used when an
event is ﬁnished). State represents the status of the event:

• Created, refers to the state in which a person sends the creation of the event but there is still no conﬁrmation from the rest

of the participants.

• Veriﬁed, is used when a real event exists where some staﬀ is working.

• Inactive, is the state used when a event is ﬁnished.

There are two ﬁelds that refer to the staﬀ assigned to the event: participants stores the identiﬁers of the people who participate
in the event, and numParticipants stores the number of participants. Note that each user has an identiﬁcation (IDentity) associated
to his/her own address (user) and also an entity to which he/she belongs.

Related to the event generation, the contract also includes when the event was generated (EventGeneration()). If people nearby

conﬁrm the event, the contract includes (EventConﬁrmed()); otherwise, it includes (EventAborted()).

Several functions related to the internal operation of the smart contract and the evolution of the event exist. One of the most
important ﬁelds for the communication system is getIDs(), which is used to disseminate staﬀ public identiﬁcation. Besides,
getSharedData() allows users to generate the communication with some speciﬁc pre-shared security information. An example
of the smart contract used in the proposed system is shown in Algorithm 1.

9

Alexandra Rivero-Gracía ET AL

pragma solidity 0.4.16;

contract Event {

address entity ;
address generator ;
address public privacyPolicy ;
string public eventID ;
string public location ;
string kind ;
uint riskLevel ;
enum State { Created , Verified , Inactive }
State public state ;
Worker [] public participants ;
uint public numParticipants ;
struct Worker {

address entity ;
address user ;
string IDentity ;
string enventID ;

}
...
modifier onlyEntity () {...}

event Ev en tGen eration ( eventID ) {...}
event EventConfirmed () ;
event EventAborted () ;

function Event onlyEntity ( string _eventID , address _privacyPolicy , string _location , string _kind , uint

_riskeLevel ) {...}

function Up d at e Pa r ti c ip an t s ( string _eventID , address _privacyPolicy , Workers [] _participants , uint

numParticipants , Worker _participant , address _entity ) {...}

function UpdateState ( string _eventID , uint _riskeLevel , State _state ) {...}
function UpdateAccess ( string _eventID , address _privacyPolicy ) {...}
function kill onlyEntity ( string _eventID ) {...}
function getIDs ( string _eventID , address _privacyPolicy , Worker _participant ) {...}
function getSharedData ( string _eventID , address _privacyPolicy , Worker _participant ) {...}
...

}

Algorithm 1: Pseudo-code of the smart contract to generate an event

5

EMERGENCY COMMUNICATION SCHEME

As it has been mentioned before, an IBSC scheme is used with the aim of guaranteeing communication security. The rationale
behind this selection was its low computational complexity and its high eﬃciency in terms of memory, and usability.

This communication system allows sharing text, images and audio. Emergency service staﬀ is provided with two variants of
IBSC to share information. When the information exchange involves P2P mode, an ID-Based Signcryption is used. Otherwise,
in broadcast mode, an ID-Based Multi-Receiver Signcryption Scheme is implemented.

The features described below were taken into account when choosing the communication technology to be used. The channel is
supported by Wi-Fi Direct whenever possible, due to its higher speed rate and greater range. A second option is BLE technology,
where the transmission rate is of 25 Mbps (while Wi-Fi Direct has a transmission rate of 250 Mbps). Another important diﬀerence
between these technologies that justiﬁes the previous preference refers to the maximum range of BLE, which is 60 meters, while
Wi-Fi Direct has a range of 200 meters.

In order to deﬁne this communication system it is required to share some users’ public information when emergency mode is
activated. This information is user’s ID and it is shared through BLE using beacon mode (see Figure 5). Every person has a list of
identiﬁers (IDs) corresponding to nearby people, this list is published in a smart contract so that the participants can be veriﬁed.
The use of BLE allows generating lists containing peers IDs that may used when P2P communications is required. When a
member of the emergency service receives a new ID, he/she checks if it is included in the smart contract list. It the ID is not in
it, it is not yet included in the contract. Otherwise, it is accepted and stored.

In order to make this section more understandable Table 1 has been added to deﬁne some notations.

10

Alexandra Rivero-Gracía ET AL

TABLE 1 Notations used

Notation
msk
mpk
𝐻𝑖
𝐻𝑖(𝑥||𝑦)
𝑟
𝑥
← 𝑋
𝑥 ⊕ 𝑦
̂𝑒(𝑥, 𝑦)
𝑥 ⋅ 𝑃
𝑟
𝑥
← 𝑆
𝑥 ← 𝑦
𝑎||𝑏

Meaning
master secret key
master public key
cryptographic hash function (digest)
digest of the concatenation of bit-strings 𝑥 and 𝑦
𝑥 is selected uniformly at random from set 𝑋
bitwise XOR of bitstrings 𝑥, 𝑦 of equal length
bilinear map paring of 𝑥 and 𝑦
multiplication of the point 𝑃 times 𝑥
stands for an element 𝑥 randomly selected from a set 𝑆
assignment of the value 𝑦 to 𝑥
is used for concatenation of 𝑎 and 𝑏

Initialization

5.1
At the end of this stage, all the staﬀ participating in the event must be registered, regardless of the organization to which they
belong.

Some elements and basic notation necessary for a detailed description of the system are described below.

𝐻1 ∶ {0, 1}∗ → 𝐺∗, 𝐻2 ∶ {0, 1}∗ → ℤ∗
𝐻4 ∶ {0, 1}𝑛 → {0, 1}|𝑚|, 𝐻5 ∶ 𝐺 × 𝐺 × {0, 1}𝑛 × 𝑍 ∗

𝑞, 𝐻3 ∶ ℤ∗

𝑞 × 𝑍 ∗

𝑞 → {0, 1}𝑛,
𝑞 × ... × 𝑍 ∗

𝑞 → 𝑍 ∗

𝑞

where 𝑛 is the length of the message 𝑚 and 𝑞 is a prime number.

This initialization phase is carried out in each organization for each person in the system.

• Setup: In this ﬁrst step, the server initializes the parameters in order to generate its own keys: master public key (𝑚𝑝𝑘)
and master secret key (𝑚𝑠𝑘). This server plays the role of Private Key Generator (PKG). To achieve it, some private data
are necessary: 𝑘 ∈ ℤ to generate a prime 𝑞 based on it, two groups 𝔾 and 𝔾𝕋
of order 𝑞 and a bilinear pairing map
̂𝑒 ∶ 𝔾 × 𝔾 → 𝔾𝕋
Finally, server keys are generated: 𝑚𝑠𝑘

are selected. Next, 𝑃 ∈ 𝔾 is randomly chosen and ﬁve hash functions are also deﬁned.

and 𝑚𝑝𝑘 ← 𝑚𝑠𝑘 ⋅ 𝑃 .

𝑟
← ℤ∗
𝑞

• After Extract:

In this step, staﬀ identiﬁcation is carried out. Public key 𝑄𝐼𝐷 ∈ 𝐺 is generated through a hash function applied on the
corresponding ID, 𝑄𝐼𝐷 ← 𝐻1(𝐼𝐷).
Private key 𝑆𝐼𝐷
𝑚𝑠𝑘 ⋅ 𝑄𝐼𝐷
session key obtained through an Elliptic Curve Diﬃe-Hellman (ECDH) scheme.

, used for communications with the server 𝑆𝐼𝐷 ∈ 𝐺, is calculated taking into account the 𝑚𝑠𝑘, 𝑆𝐼𝐷 ←
. In the proposal, key exchange between server and staﬀ is done using the stream cipher SNOW3G under the

Event generation

5.2
This phase is carried out by the organization of the user that generated the alert. The information is stored in the blockchain.
𝑟
Each one of the generated events has a unique identiﬁer, 𝐼𝐷𝑒
and some location coordinates, 𝑙𝑎𝑡 and 𝑙𝑜𝑛. In this stage,
← ℤ∗
𝑞
the public key for this event 𝑄𝐼𝐷𝑒 ∈ 𝐺 is generated as:

Then, the secret key for this event corresponds with 𝑆𝐼𝐷𝑒 ← 𝑚𝑠𝑘 ⋅ 𝑄𝐼𝐷𝑒

. To share that private information a secure channel
is created, speciﬁcally in this system the Elliptic Curve Diﬃe-Hellman (ECDH) was implemented. This protocol is a variation
of the original Diﬃe-Hellman protocol, which uses the properties of the elliptic curves deﬁned over ﬁnite ﬁelds.

𝑄𝐼𝐷𝑒 ← 𝐻1(𝐼𝐷||𝐼𝐷𝑒||𝑙𝑎𝑡||𝑙𝑜𝑛)

Alexandra Rivero-Gracía ET AL

11

In this way, the operation of this protocol is based on the fact that two users agree beforehand on the use of a prime number
and a point 𝑃 ∈ 𝐸. Then, the users A and B, in this case a doctor (A) and the server (B),
, this are the secret
. The doctor select 𝑎 ∈ 𝑍𝑝
of them. Later, both of them obtain their public keys multiplying their secret keys by previously agreed point

𝑝, an elliptic curve 𝐸 deﬁned over 𝑍𝑝
choose as secret keys two random numbers belonging to 𝑍𝑝
keys 𝑆𝑘𝑎
𝑃 , obtaining the shared key 𝑆𝐾. See Table 2 for the speciﬁcation of the shared key generation.

and the server 𝑏 ∈ 𝑍𝑝

and 𝑆𝐾𝑏

TABLE 2 Data information related to steps

Steps

Medical staﬀ

Entity server

𝑝, 𝐸, 𝑃 , 𝑍𝑝
𝑟
←←←←← 𝑎 ∈ 𝑍𝑝 𝑆𝑘𝑏

𝑝, 𝐸, 𝑃 , 𝑍𝑝
𝑟
←←←←← 𝑏 ∈ 𝑍𝑝

0: Initialization

1: Secret key generation
2: Public key generation
3: Information exchange
4: Shared key generation 𝐾𝑎 = 𝑎 ⋅ 𝑃 𝑘𝑏
𝑆𝐾 == 𝐾𝑎

𝑆𝑘𝑎
𝑃 𝑘𝑎 ←← 𝑎 ⋅ 𝑃
𝑃 𝑘𝑏

5: Conﬁrmation

𝑃 𝑘𝑏 ←← 𝑏 ⋅ 𝑃
𝑃 𝑘𝑎
𝐾𝑏 = 𝑏 ⋅ 𝑃 𝑘𝑎
𝑆𝐾 == 𝐾𝑏

In order to compute the shared key, the next step is the exchange between them their public keys by multiplying their private

key by the public key of the other user/server, obtaining both the same shared key.

P2P communication scheme in an event

5.3
The proposed scheme can be used in direct communications between two users. The main use of case of this mode is the
communication between two doctors in a direct way. For example, if a doctor has a question about a speciﬁc point of the
emergency or something related to a victim, they can establish a communication channel with this P2P mode. In such a case,
the steps are the following:

• Single Signcryption:

All the messages 𝑚 ∈ {0, 1}𝑛 are encrypted and signed. Receiver’s public key is generated taking into account his/her
← 𝐻1(𝐼𝐷𝑏||𝐼𝐷𝑒||𝑙𝑎𝑡||𝑙𝑜𝑛). Then, some operations are
identiﬁcation and the pre-shared data (𝐼𝐷𝑒
𝑟
developed giving as result 𝜎 (a t-uple of three components: 𝑐, 𝑇 , 𝑈 ). 𝑇 is generated as 𝑥
and 𝑇 ← 𝑥 ⋅ 𝑃 . Then the
← ℤ∗
𝑞
) is denoted as 𝑈 . It is obtained as follows 𝑟 ← 𝐻2(𝑇 ||𝑚), 𝑊 ← 𝑥 ⋅ 𝑚𝑝𝑘 and
signature using sender’s private key (𝑆𝐼𝐷𝑒𝑎
), 𝑘 ← 𝐻3(𝑦),
𝑈 ← 𝑟 ⋅ 𝑆𝐼𝐷𝑒𝑎
𝑐 ← 𝑘 ⊕ 𝑚.

+ 𝑊 . Finally, the encrypted message is denoted as 𝑐, and it is generated as 𝑦 ← ̂𝑒(𝑊 , 𝑄𝐼𝐷𝑒𝑏

, 𝑙𝑎𝑡 and 𝑙𝑜𝑛): 𝑄𝐼𝐷𝑒𝑏

• Single Unsigncryption:

First of all, sender’s public key is generated taking into account 𝐼𝐷𝑒𝑎

and the pre-shared information as:

𝑄𝐼𝐷𝑎

← 𝐻1(𝐼𝐷𝑒𝑎||𝐼𝐷𝑒||𝑙𝑎𝑡||𝑙𝑜𝑛𝑒)

Then 𝜎 is parsed as (𝑐, 𝑇 , 𝑈 ). If everything is right, the message 𝑚 ∈ {0, 1}𝑛 is returned. Otherwise, if any problem in the
signature or in the encryption of 𝑚 is detected, ⊥ is returned. The veriﬁcation consists of :

Thus, the user calculates:

̂𝑒(𝑈 , 𝑃 ) == ̂𝑒(𝑄𝐼𝐷𝑒𝑎

, 𝑚𝑝𝑘)𝑟 ⋅ ̂𝑒(𝑇 , 𝑚𝑝𝑘)

𝑦 ← ̂𝑒(𝑆𝐼𝐷𝑒𝑏

, 𝑇 ), 𝑘 ← 𝑦, 𝑚 ← 𝑘 ⊕ 𝑐, 𝑟 ← 𝐻2(𝑇 ||𝑚)

12

Alexandra Rivero-Gracía ET AL

Broadcast communication scheme in an event

5.4
The proposed scheme can be used when someone wants to share a message. In this case, the main use of case of this mode is
the communication with everybody around a point. For example, if a doctor want to share some planning order or some alert
from their location, he/she can generate a broadcast message by the use of this mode. In such cases, the steps are the following:

• Broadcast Signcryption: In the broadcast mode, there are 𝑛 receivers, so the sender is identiﬁed by 𝐼𝐷𝑒𝑎

by:

and the receivers

𝐼𝐷𝑒1, 𝐼𝐷𝑒2, ..., 𝐼𝐷𝑒𝑛

the broadcast messages 𝑚 ∈ {0, 1}𝑛 are encrypted and signed. Sender’s public key is generated as:
← 𝐻1(𝐼𝐷𝑎||𝐼𝐷𝑒||𝑙𝑎𝑡||𝑙𝑜𝑛). Then, some operations are developed, giving as result 𝜎 (a t-uple of components:
𝑟
← ℤ∗
𝑞

All
𝑄𝐼𝐷𝑒𝑎
𝑐, 𝑇 , 𝑈 , 𝑉 , 𝑊 , 𝑋, 𝑎0, ...𝑎𝑛 − 1). Then, the sender selects some random numbers 𝑟
and then, it operates:

𝑟
← ℤ∗
𝑞

𝑟
← ℤ∗
𝑞

𝑟
← ℤ∗
𝑞

and 𝑝

, 𝑟′

, 𝑠

Receivers’ public keys are generated taking into account all the identiﬁcations 𝐼𝐷1, 𝐼𝐷2, ..., 𝐼𝐷𝑛

, as follows:

𝑇 ← 𝑟 ⋅ 𝑄𝐼𝐷𝑒𝑎

, 𝑈 ← 𝑟 ⋅ 𝑃 , 𝑋 ← 𝑟′ ⋅ 𝑇 , 𝐽 ← 𝑟′ ⋅ 𝑚𝑝𝑘

𝑓 (𝑥) =

𝑛
∏

(𝑥 − 𝑣𝑖) + 𝑝(𝑚𝑜𝑑𝑞) = 𝑎0 + 𝑎1𝑥 + ... + 𝑎𝑛−1𝑥𝑛−1 + 𝑥𝑛

𝑖=0

With 𝑄𝑒𝑖 ← 𝐻1(𝐼𝐷𝑖||𝐼𝐷𝑒||𝑙𝑎𝑡||𝑙𝑜𝑛), 𝑦𝑖 ← ̂𝑒(𝑄𝑖, 𝐽 ) and 𝑣𝑖 ← 𝐻2(𝑦𝑖). Then it calculates 𝑉 ← 𝑠 ⋅ 𝐻(𝑝), the
key 𝑘 as 𝑘 ← 𝐻(𝑠) and the encrypted message 𝑐 as 𝑐 ← 𝑘 ⊕ 𝑚. Finally an authenticator ℎ is generated as ℎ ←
𝐻5(𝑐, 𝑋, 𝑈 , 𝑉 , 𝑎0, 𝑎1, ..., 𝑎𝑛−1) and 𝑊 ← (𝑟′ + ℎ)𝑟 ⋅ 𝑆𝐼𝐷𝑎

.

• Multiple Receiver Unsigncryption:

In this step, two veriﬁcations are carried out, but ﬁrst of all, 𝜎 is parsed as 𝑐, 𝑇 , 𝑈 , 𝑉 , 𝑊 , 𝑋, 𝑎0, ...𝑎𝑛 − 1 and ℎ ←
𝐻5(𝑐, 𝑋, 𝑈 , 𝑉 , 𝑎0, 𝑎1, ..., 𝑎𝑛−1). The ﬁrst veriﬁcation is the public veriﬁcation to check that the ciphertext is valid:

Otherwise, the ciphertext has been damaged or is invalid, and ⊥ is returned. The second veriﬁcation is:

̂𝑒(𝑊 , 𝑃 ) == ̂𝑒(𝑋 + ℎ𝑇 , 𝑚𝑝𝑘)

̂𝑒(𝑊 , 𝑄𝑒𝑖) == ̂𝑒(𝑋 + ℎ𝑇 , 𝑆𝐼𝐷𝑒𝑖

)

This is to check if 𝐼𝐷𝑖
quits the decryption process and ⊥ is returned. To generate the message, some operations are generated: 𝑦𝑖 ← ̂𝑒(𝑆𝐼𝐷𝑒𝑏
𝑣𝑖 ← 𝐻2(𝑦𝑖), 𝑝 ← 𝑓 (𝑣𝑖), 𝑠 ← 𝑉 ⊕ 𝐻3(𝑝), 𝑘 ← 𝐻4(𝑠) and 𝑚 ← 𝑘 ⊕ 𝑐.

is one of the receivers chosen by the sender and if the ciphertext is valid. Otherwise, the receiver
, 𝑈 ),

6

IMPLEMENTATION AND ANALYSIS

A ﬁrst implementation of the proposal has been developed to obtain a prototype as a proof-of-concept. The smart contract has
been implemented using Solidity (Ethereum coding language) on a permissioned blockchain where only authorized entities are
assigned writing permission.

This approach allows emulating a permissioned blockchain without the need to spend real money. In this prototype, the user
interface is managed by a decentralized web application (DApp), which allows user interaction with the smart contract on the
blockchain (see Figure 7).

Moreover, an exhaustive analysis about the performance of the BLE communications has been done. In this case, using the
Opportunistic Network Environment simulator (ONE) 23 a total of 300 people have been randomly deployed over an area of 2𝑘𝑚2.
This tool allows selecting diﬀerent communication technologies, interfaces, node behaviour, node speed, node deployment,
simulation time, etc. Using the diﬀerent parameters available on the tool the behaviour of BLE technology in this scenario has
been simulated.

In Figure 8, the range and communication links of the BLE technology in the simulated area can be observed. Moreover, to
obtain enough and precise data about the BLE technology in this kind of situations, the simulation has been repeated 10 times.

Alexandra Rivero-Gracía ET AL

13

FIGURE 7 Web application.

An important measurement that have to be taken into account in this kind of scenarios is the average of communications reached.
This measure allows us to know how many nodes have received communications by part of the rest of the nodes of the system,
fact that is important because if this measurement is extrapolated we can know the the isolated nodes of the network.

The other measurement taken is the average of communications received by a node. This is an important measurement because

it allows to know haw many communications receive in average every node of the system during the simulation time.

Communications reached
Isolated nodes
Communications received by node

2646.2
17.4
8.82

TABLE 3 BLE communication results in the simulated scenario.

The obtained results can be observed in Table 3, where the an amount of 2646.2 communications of the system have been
reached in average. Moreover, during the simulated time 17.4 nodes were isolated supposing it only the 5.6% of the communica-
tions. Finally, an amount of 8.82 communications have been received by each node of the system in average during the simulated
scenario, supposing it that every node of the system will communicate or will be communicated every 7 minutes approximately.
Security is one of the priorities in order to protect the system against attacks such as Denial of Services (DoS), Man in
the Middle (MitM) and impersonation. DoS attacks are limited because only requests associated with a legitimate number
of members of the Emergency Services take eﬀect. On the other hand, the typical MitM attack, which conveys a successful
authentication to the server with a legitimate identiﬁer is very improbable, since once the legitimate user private key is assigned
to the server, further requests of this kind will not be taken care of. Impersonation will be easily detectable because the number
of members who can make requests to the server is limited to those who are working at the time of the request.

14

Alexandra Rivero-Gracía ET AL

FIGURE 8 BLE simulated scenario.

An analysis of eﬃciency related to the technologies coverage, their range and their transmission eﬃciency was developed. A

beta prototype has been also implemented with Wi-Fi Aware but in the preview mode of the technology.

The elements of the blockchain are replicable on diﬀerent computers, since what underlies is a distributed database. This
justiﬁes that it is impossible to falsify its elements, since all the data are generally found in several servers, and its synchronization
occurs almost simultaneously. In addition, if a falsiﬁcation is achieved with one of the registers, it should be easy to detect it
through the codes that link the blocks and prevent it from spreading.

Before including a transaction into a block it is always veriﬁed. This veriﬁcation is carried out by miners, which are computers

dedicated not only to keep a copy of the data but also to validate nodes’ agreement.

Thus, since the validators of this kind of blockchain are known, there is no risk of successful 51% attack.
Smart contracts are executed and enforced automatically and autonomously without the intervention of third parties. Whats
more, a smart contract can be created and executed by individuals and/or legal entities, but also by machines or other programs
that work autonomously.

Due to its nature, a smart contract is valid without the need of authorities because it is a code. Blockchain technology makes
possible to share this code with all network nodes, guaranteeing that it cannot be modiﬁed. Hence, the main features of smart
contracts are decentralization, persistence and transparency.

The so-called oracles are elements that allow the smart contract to interact with the real world. They are autonomous tools that
allow updating the internal states of a smart contract through external information, usually obtained with APIs. In the proposal
here described, oracles are smart devices used by the emergency services.

The oracles also work autonomously. However, it must be taken into account that the source used by the oracle is a third
party that must be trusted, and that could be corrupted by its owner, crack, or could simply fail your server, something that has
negative implications.

An Android mobile application was developed to improve communication between emergency services in extreme situations
(see Figure 9). This implementation has been tested tested through the generation of some random events located on a map and
assigning ad-hoc users to generated events. Smart contracts were developed with Solidity 24, and deployed using Truﬄe Suite 25.
On the server side, we use nodejs 26 with WEB3JS 27 to connect with the smart contracts trough Ganache 28 and Drizzle 29 on the
front-end.

Alexandra Rivero-Gracía ET AL

15

The prototype requires communication with the PKG only at the initialization stage where the key generation is performed.
Afterwards, users can share messages with their own keys and with the pre-shared information related to the event. An alternative
scheme with direct communications without requiring central server is deployed. Note that this approach can be used when
communications are saturated.

FIGURE 9 Developed prototype.

7

CONCLUSIONS AND FUTURE WORK

In this paper, a decentralized low-cost model has been proposed, which supports the monitoring of risk levels in big events,
aiming at improving resource allocation and staﬀ coordination in case of emergency.

The proposed system is based on blockchain and on the establishment of an alternative communication channel for sharing

information while the emergency situation. An important feature of this system is the no need for cloud services.

The system generates automatically the pre-shared data related to the event to which the staﬀ is assigned.
The proposal includes a web application used to manage all emergency services and incidents that are generated and publicly
notiﬁed through its inclusion in a smart contract and in the blockchain. Hence, once the information regarding an event is
included in this structure, anybody may consult it and its validation remains guaranteed.

A mobile application with an ubiquitous Wi-Fi Direct chat has been implemented where communication security is based
on the use of IDentity-Based Cryptography. BLE in beacon mode is used to support identity exchange among participants.
Emergency services are able to know, through the mobile application, where the event is located and where they must be
deployed, as well as their peers location.

16

Alexandra Rivero-Gracía ET AL

The main objective for which an alternative communication channel is proposed is that emergency personnel can share infor-
mation, either in P2P or broadcast mode, when an incident at a big event saturates the network. ID-Based Signcryption has
been included to guarantee integrity, conﬁdentiality, authenticity and non-repudiation in communications. A beta prototype has
been implemented with Wi-Fi Aware, which is available only on Android 8 and in the preview mode of this technology. The
possible incorporation of LTE-Direct depends on the Native Development Kit because at this moment this code is private. As
part of work in progress, a real test with emergency staﬀ is planned so that the smart contract can change to improve the model
according to the results. As future work, more functionalities will be added to the server, such as statistics, private chats based
on roles, etc. In the short term, the system modeling and the smart contract deﬁnition are expected to be improved on the basis
of the results of real ﬁeld tests to be developed involving emergency personnel. The possibility of adding new functionalities
to the system, such as obtaining and analysing relevant statistics for emergency management and the deﬁnition of private chats
based on roles are issues under study.

ACKNOWLEDGMENTS

This research was funded by the Centre for the Development of Industrial Technology (CDTI) under project C2017/3-9 (UNI-
CRINF), by the Spanish Ministry of Science, Innovation and Universities (MCIU), the State Research Agency (AEI) and the
European Regional Development Fund (ERDF) under project RTI2018-097263-B-I00 (ACTIS) and by the Government of the
Canary Islands through TESIS2015010102 and TESIS-2015010106 grants.

Conﬂict of interest
The authors declare no potential conﬂict of interests.

References

1. Panwar G, Misra S. Inside Bluetooth Low Energy (Gupta, N.) [Book Review]. In: . 24. ; 2017: 2–3.

2. Shen W, Yin B, Cao X, Cai LX, Cheng Y. Secure device-to-device communications over WiFi direct. In: . 30. ; 2016: 4–9.

3. Boneh D, Franklin MK. Identity-Based Encryption from the Weil Pairing. In: . 32. ; 2003: 586–615.

4. Malone-Lee J. Identity-Based Signcryption. In: . 2002. ; 2002: 98.

5. Selvi SSD, Vivek SS, Srinivasan R, Rangan CP. An Eﬃcient Identity-Based Signcryption Scheme for Multiple Receivers.

In: ; 2009: 71–88.

6. Das D, Huang PK, Elad O, Qi EH, Park M. Radio resource allocation in wi-ﬁ aware neighborhood area network data links.

2019. US Patent App. 16/141,313.

7. documentation dA. Wi-Fi Aware on Android. 2019.

8. d’Oro EC, Colombo S, Gribaudo M, Iacono M, Manca D, Piazzolla P. Modeling and evaluating a complex edge
doi:

computing based systems: An emergency management support system case study. Internet of Things 2019; 6.
10.1016/j.iot.2019.100054

9. Motta R, Pasquale J. Wireless P2P: Problem or opportunity?. In: ; 2010: 32–37.

10. Conti M, Delmastro F, Minutiello G, Paris R. Experimenting opportunistic networks with WiFi Direct. In: ; 2013: 1–6.

11. Camps-Mur D, Garcia-Saavedra A, Serrano P. Device-to-device communications with Wi-Fi Direct: overview and

experimentation. In: . 20. IEEE; 2013: 96–104.

12. Santos-González I, Rivero-García A, Caballero-Gil P, Hernández-Goya C. Alternative Communication System for Emer-

gency Situations. In: ; 2014: 397–402.

Alexandra Rivero-Gracía ET AL

17

13. Rivero-García A, Santos-González I, Goya CH, Caballero-Gil P. Secure Communication System for Emergency Services

in Network Congestion Scenarios. In: ; 2018: 63.

14. Nakamoto S. Bitcoin: A peer-to-peer electronic cash system.. In: Working Paper; 2009.

15. Ekblaw A, Azaria A, Halamka JD, Lippman A. A Case Study for Blockchain in Healthcare: MedRec prototype for electronic

health records and medical research data. In: . 13. ; 2016: 13.

16. Dubovitskaya A, Xu Z, Ryu S, Schumacher M, Wang F. Secure and Trustable Electronic Medical Records Sharing using

Blockchain. In: ; 2017.

17. Radanović I, Likić R. Opportunities for Use of Blockchain Technology in Medicine. In: ; 2018.

18. Minoli D, Occhiogrosso B. Blockchain mechanisms for IoT security. Internet of Things 2018; 1-2: 1–13.

doi:

10.1016/j.iot.2018.05.002

19. Cha S, Chen J, Su C, Yeh K. A Blockchain Connected Gateway for BLE-Based Devices in the Internet of Things. In: . 6. ;

2018: 24639–24649.

20. Guo R, Shi H, Zhao Q, Zheng D. Secure Attribute-Based Signature Scheme With Multiple Authorities for Blockchain in

Electronic Health Records Systems. In: . 6. ; 2018: 11676–11686.

21. Yue X, Wang H, Jin D, Li M, Jiang W. Healthcare Data Gateways: Found Healthcare Intelligence on Blockchain with Novel

Privacy Risk Control. In: . 40. ; 2016: 218:1–218:8.

22. Griggs KN, Ossipova O, Kohlios CP, Baccarini AN, Howson EA, Hayajneh T. Healthcare Blockchain System Using Smart

Contracts for Secure Automated Remote Patient Monitoring. In: . 42. ; 2018: 130:1–130:7.

23. Keränen A, Ott J, Kärkkäinen T. The ONE Simulator for DTN Protocol Evaluation. In: ICST; 2009; New York, NY, USA.

24. Ethereum . Solidity. https://solidity-es.readthedocs.io/es/latest/#; 2019. Accessed: Thu, 24 Sep 2019.

25. Suite TBGT. Truﬄe Suite. https://www.truﬄesuite.com/; 2019. Accessed: Thu, 24 Sep 2019.

26. Foundation N. Node.js. https://nodejs.org; 2019. Accessed: Thu, 24 Sep 2019.

27. Ethereum . Web3.js. https://web3js.readthedocs.io/en/1.0/; 2019. Accessed: Thu, 24 Sep 2019.

28. Ganache TBG. Ganache. https://github.com/truﬄesuite/ganache; 2019. Accessed: Thu, 24 Sep 2019.

29. Drizzle TBG. Drizzle. https://github.com/truﬄesuite/drizzle; 2019. Accessed: Thu, 24 Sep 2019.

