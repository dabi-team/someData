Data Trust and IoT 

ABSTRACT 
People’s  IoT  surroundings  have  become  a  valuable  source  of 
information that can impact individuals and society positively. An 
individual’s  IoT  data  can  be  used  for  different  purposes  –  for 
instance, research and improvement of public services. However, 
individuals  lack  governance  power  to  share  their  IoT  data.  Data 
trust  is  a  concept  that  brings  opportunities  in  addressing  data 
sharing  in  IoT.  This  research  reviews  the  concept  of  data  trust. 
Then, we review IoT and its unique characteristics that make the 
implementation  of  data  trust  a  challenge.  We  further  discuss 
blockchain technology and how it can be used to enable data trust 
in IoT. Finally, we introduce a blockchain-based solution for data 
trust in IoT. 

CCS CONCEPTS 
• Information systems • Data management systems 

KEYWORDS 
Data Trust, Data Sharing, Data Governance, IoT, Blockchain 

ACM Reference format: 

FirstName  Surname,  FirstName  Surname  and  FirstName  Surname.  2018. 
Insert  Your  Title  Here:  Insert  Subtitle  Here.  In  Proceedings  of  ACM 
Woodstock conference (WOODSTOCK’18). ACM, New York, NY, USA, 2 
pages. https://doi.org/10.1145/1234567890 

1  Introduction 
In the online environment, where a vast amount of information is 
shared  and  transferred  around  the  world  in  near  real-time,  it 
becomes increasingly difficult for individuals to maintain control 
over  how  their  data  is  shared,  used,  and  the  benefits  that  can  be 
achieved from it.  

There is an increasing demand from individuals to prevent others 
from accessing their IoT data without their consent. Also, there is 
an  emerging  demand  for  mechanisms  that  give  individuals 
decision-making power over the data their IoT systems generate. 
The  following  are  some  of  the  things  that  individuals  are  most 

∗Article Title Footnote needs to be captured as Title Note 
†Author Footnote to be captured as Author Note 
Permission to make digital or hard copies of part or all of this work for personal or 
classroom  use  is  granted  without  fee  provided  that  copies  are  not  made  or 
distributed for profit or commercial advantage and that copies bear this notice and 
the  full  citation  on  the  first  page.  Copyrights  for  third-party  components  of  this 
work must be honored. For all other uses, contact the owner/author(s). 
WOODSTOCK’18, June, 2018, El Paso, Texas USA 
© 2018 Copyright held by the owner/author(s). 978-1-4503-0000-0/18/06...$15.00 
https://doi.org/10.1145/1234567890 

concerned about when sharing their IoT data: 

Transparency 

• 
•  Digital and physical privacy 
• 

Traceability 

Additionally, the data that IoT systems generate has the distinctive 
characteristic  of  being  transmitted  in  near  real-time  (data 
streaming).  The  following  are  some considerations  when sharing 
data streaming: 

•  Data constantly flows through a series of components 
•  A single piece of data is worthless 
• 

Timely, preventive, and reactive decision making 

Not much has been studied about data trust for data sharing. Data 
trust is a data sharing concept that seeks to appoint a steward (aka 
trustee) to manage data for a purpose on behalf of a beneficiary or 
beneficiaries  that  own  the  data  [1].    Data  trust  establishes  the 
rights  and  obligations  that  trustees  and  data  owners  get.  The 
concept  of  data  trust  can  be  used  to  enable  a  mechanism  that 
allows data owners to make free decisions on how they share their 
data.  A  data  trust  platform  would  provide  the  following  benefits 
when sharing data: 

• 

• 

• 

• 

Encourage  interaction  between  people  anywhere  in  the 
world 
Promote digital dialogue between data owners and third 
parties that are interested in using that data. 
Provide  a  context  in  which  to  add  rules  and  comments 
and  provide  clarity  on  what  this  information  really 
means to different people. 
Provide an environment in which it is possible to audit 
how the data has been shared and used. 

When  designing  and  implementing  data  trust  solutions  in  IoT 
some challenges emerge. This research reviews the characteristics 
of IoT, and the data sharing demands. Also, this research proposes 
a data trust platform using blockchain.  

2  IoT 
The internet of things (IoT) is a network of common devices and 
objects  connected  among  them  and  to  the  internet  to  enable 
communication  and  interaction  between  the  physical  world  and 
people [2]. IoT collects data, processes it, and makes use of it to 

 
 
 
 
 
 
WOODSTOCK’18, June, 2018, El Paso, Texas USA 

F. Surname et al. 

detect  something  and  do  something  intelligent  [3].  The  term 
internet of things emerged for the first time in 1999. Kevin Ashton 
coined  it  in  a  presentation  about  linking  the  internet  to  supply 
chain management [4]. Nowadays, the advent of IoT has led to the 
development  of  solutions  for  different  fields,  such  as  healthcare 
[13, 14], smart spaces [15, 16], public services [17, 18], industry 
[19, 20], among others.  

IoT  is  an  active  area  of  research.  Contemporary  researches  have 
pointed out challenges about data sharing and how the benefits of 
IoT data and its derived data are managed [13][14][15][16]:  

•  What happens to the IoT data collected? 
•  Who controls the benefits of the collected data? 
•  Who controls the benefits of the derived data? 

2.1  Challenges of IoT 
IoT  is  cooperation  among  different  hardware  and  software 
technologies [17]. The main goal of IoT is to connect what has not 
been  connected  before  to  enable  an  intelligent  network.  Thus, 
more control of the physical world is enabled, and more advanced 
applications  are  developed  to  enable  rich  communication  and 
interaction  between  objects,  systems,  and  people.  The  principal 
difference among traditional internet and IoT is the generation of 
data  and  how  data  is  used  [18].  Some  of  the  characteristics  that 
define IoT are listed below: 

• 

Pervasive  Networks:  IoT  is  highly  pervasive.  IoT 
enables  connectivity  at  the  constrained  level,  locally. 
IoT  can  get  the  data  from  anywhere,  at  any  time,  and 
under  different  environmental  conditions,  and  humans 
do not even notice it. For example, wearable devices.  
•  Heterogeneous  Environment:  This  heterogeneous 
environment  seeks  to  enable  communication  with  a 
wide  variety  of  devices  using  multiple  communication 
technologies  –  for  instance,  RFID,  Bluetooth  Low 
Energy (BLE), Zigbee, or 5G. 

•  Heterogeneous  Application  Communication  Protocols: 
IoT  enables  communication  by  implementing  multiple 
application  communication  protocols  –  for  instance, 
DDS,  MQTT,  and  CoAP  (these  protocols  will  be 
explained deeply in section 1.7).  

•  Heterogeneous  Data 

IoT 

Streams: 

produces 
heterogeneous  data  streams.  The  variety  of  IoT  data 
generated  involves  structured,  unstructured,  and  semi-
structured data. Also, the variety of data might involve 
different interpretations depending on the context of the 
IoT scenario [19]. The velocity of the generation of data 
allows  us  to  execute  near  real-time  analytics  and  make 
decisions.  
Low Data Rates: IoT constrained networks support low 
data rates and tend to be lossy. 

• 

•  Dynamic  Interoperability:  Device  identification  and 
interoperability when having heterogeneous devices. 

•  Changing  Network:  IoT  is  continuously  changing.  IoT 
devices are plugged in and removed regularly. The state 
of  IoT  devices  can  change  dynamically.  e.g.,  sleeping 
and waking up, connected, and/or disconnected — also, 
the  context  of  devices  changes,  including  location  and 
speed. 
Interaction 
patterns 
IoT 
continuously  change.  A  lot  of  these  patterns  are 
interactions with externally hosted services. 

interaction 

Patterns: 

• 

for 

•  High  Scalability:  IoT  demands  high  scalability.  IoT 
demands  support 
increasing  number  of 
the 
connected devices, data, analytics, applications to adapt 
to changes in the environment and meet the expectation 
of  users  without  degradation  in  the  quality  of  the 
service. 

This research focuses on the challenges that emerge when sharing 
IoT data in the context of a smart home. In a smart home context, 
the following facts are known and obvious: 

•  When data is being collected 
•  By which IoT devices 
•  By which organization  
• 
For what purposes.  

However, when device owners exercise their rights to consent to 
data sharing, the following concerns emerge [20][21]: 

•  What  further  benefits  are  been  obtained  from  the 

collected IoT data? 

•  How  access  to  data  can  be  enabled  integrating  specific 

variables, for instance, operations allowed 

•  How data is being used by others 
•  Users  want  to  understand  what  data  is  being  derived 

from their original data 

•  Users want to receive the benefits of derived data 

IoT has to guarantee trust when data is collected, maintained, and 
shared to realize its full benefits.  

Data trust is a data sharing methodology that can help address the 
previous questions and data sharing challenges  

3  Data Trust 
Data trust represents a way to share data in a trustworthy manner. 
According  to  Rieder  et  al.  [22]  trust  is  the  key  to  build  and 
maintain  a  social  order  as  without  trust  societies  might  collapse. 
However, what we trust and the circumstances in which we trust 
change  over  time  –  for  instance,  nowadays,  people  trust  the 
numbers and statistics obtained by sensors and big data. 

A  preliminary  work  presented  by  the  Oxford  Internet  Institute 
[23]  suggested  that  the  identity  of  entities,  privacy,  and  security 
represent  main  aspects  of  online  trust.  Trust  issues  emerge  from 
the difficulty to identify the identity of users and online services 

 
 
 
 
 
 
 
 
Insert Your Title Here 

WOODSTOCK’18, June, 2018, El Paso, Texas USA 

and  business.  Additionally,  Hoffman  et  al.  [24]  suggest  that 
privacy is the main concern when developing online trust. 

about  what  is  allowed  to  do  over  data.  Also,  trustees  must  do 
exactly what was agreed. 

According  to  Edwards  L.[1],  trust  is  managed  by  an  entity  that 
allows a trustor to transfer property to a trustee. The trustee gets 
rights  thereafter  to  use  the  data,  but  the  trustee  gets  restrictions 
ruled by the terms of the trust and the rights and best interests of 
the beneficiaries (figure 1).  

Figure 1. Overview of a data trust relationship [1]. 

The data trust concept and how it can be implemented to enabling 
data  sharing  have  been  poorly  studied.  Previous  studies  have 
focused  on  the  study  of  trust  to  enhance  consumers’  online  trust 
[25][26],  management  of  event  detection  in  networks  [27],  
management of public services [28] 

 Based  on  the  definition  of  trust  presented  by  Edwards  L.[1], 
when  a  data  trust  relationship  is  established,  there  are  three 
identified actors:  

• 
Trustors 
• 
Trustees 
•  Beneficiaries 

There are three key features of a data trust relationship: 

• 
Transparency 
•  Value delivery 
•  Consequence acceptance 

Transparency  is  the  main  feature  that  enables  trustworthiness. 
Transparency  when  sharing,  looking  after,  and  making  decisions 
about data.  

Value delivery refers to distribute the benefits that arise from data 
equitably  and  giving  the  maximum  value  to  the  actors  on  a  data 
trust relationship. The value delivery is mostly monetary. 

Consequence  acceptance  refers  to  clarifies  the  repercussions  that 
misuse of data can cause. Trustors and trustees must agree exactly 

Based  on  these  previous  implementations  of  data  trust,  this 
research  states 
the  following 
to  enable  data 
requirements have to be addressed: 

trust, 

that 

•  A  mechanism  to  identify  agreement  and  define  shared 

objectives among data trustors and trustees.  

•  A mechanism to allow data owners and organizations to 
define the purpose for which the data will be used. 

•  A  mechanism  to  define  the  specific  rights,  obligations, 
and  limitations  that  organizations  have  on  the  shared 
data. 

•  A  mechanism  to  allow  data  owners  and  organizations 
define the benefits when the data is shared and used to 
create a value. 

•  A mechanism to allow data owners and organizations to 
formally create and validate a data trust relationship that 
includes all the previous explained conditions. 

•  A  mechanism  to  allow  data  owners  and  organizations 
validate compliance with the conditions of the data trust 
relationship. 

•  A mechanism to allow data owners and organizations to 

end their data trust relationships. 

A  data 
trust 
characteristics: 

relationship  should 

include 

the 

following 

•  A clear purpose 
•  A legal structure that includes the previously explained 

actors 
The rights and duties over data 
The benefits and how they are shared 
The consequences for misuse of data 

• 
• 
• 

Any  third  party  willing  to  use  and  individual’s  data  must  state 
exactly  what  it  will  do.  Once,  these  actions  are  agreed  the  third 
party must do exactly what was agreed.  

3.1  Data Trust and IoT 
IoT has to guarantee trust when data is collected, maintained, and 
shared to realize its full benefits.  

In the context of smart homes, data trust is seen as a potential way 
of giving users more control when it comes to the sharing of their 
collected data.  

This research explores the idea of using blockchain technology to 
create  a  data  trust  solution  to  enable  data  sharing  in  IoT.  This 
research  proposes  that  IoT  data  can  be  shared  by  a  data  trust 
implemented in the form of a blockchain technology. 

Data trust for data collection and data sharing. 

 
 
 
 
 
 
 
 
 
 
WOODSTOCK’18, June, 2018, El Paso, Texas USA 

F. Surname et al. 

Khan  et  al.  [29]  presents  the  requirements  that  should  be 
addressed to gain consumer trust when creating IoT systems. This 
study  states  that  privacy  requirements  emerge  at  different  stages 
of  interactions  and  integrate  four  questions  of  privacy:  what, 
where, who, and when. Consumers and vendors must what exactly 
IoT devices sense, where that sensed data is stored, when the data 
is being used, and who can access to the data. 

Access control relies on policies to determine how data is shared 
[30].  Thus,  it  limits  what  users  can  do  directly  or  indirectly  to 
prevent  security  issues  when  sharing  their  data.  Traditional 
internet  management  develops  policies  centrally.  A  central 
administration  entity  is  the  one  that  owns  the  network  and 
manages the level of access that users have.  

Table 1 presents an overview of IoT data interactions. 

Table 1. Data Interactions in IoT 

Parameter 

Traditional Internet 

IoT 

Data creation 
Data consumption 

Data flow 

Data Value 

By humans 
By request (search engines) 
Through 
links 
resources 

that  connect  web 

Answer users’ questions 

By sensors 
By pushing information and triggering actions 
Through  defined  operators  that  connect  devices 
and constrained services 
Action  and  timely  information.  The  value  is 
added by analytics. 

4  Blockchain and Data Trust 
Blockchain  is  a  distributed  ledger  that  enables  the  execution  of 
direct  transactions  without  any  central  verification  authority  and 
stores  transactions  in  the  form  of  blocks  [31].  The  main 
characteristics of blockchain technologies are: 

• 

Immutability.  Blockchain  networks  are  tamper-proof. 
Previously  written  blocks  cannot  be  changed,  which 
makes them immutable. 

•  Reliability.  Blockchain 

technologies 

a 
validation process to validate transactions before writing 
them  on  the  chain.  This  validation  process  is  called 
consensus. 
Provenance.  All transactions are recorded in-chain. 

execute 

• 

This research explores the use of blockchain technology to enable 
data  trust  in  IoT.  Blockchain  technology  can  provide  the  high 
level of transparency, value delivery, and consequence acceptance 
that data trust demands. Thus, data owners can control who they 
share their data with.  

The following features of blockchain guarantee transparency: 

•  Blockchain  distributes  all  transactions  towards  the 
ledger.  The  core  of  transparency  is  represented  by  the 
large blockchain network having identical copies of all 
the transactions. 

•  A blockchain ledger is immutable, which means that it 

remains unaltered and indelible.  

• 

In  a  blockchain  network  all  transactions  are  visible. 
Anyone can query previous executed transactions. 

The following features of blockchain guarantee value delivery: 

• 

The  distributed  ledger  of  a  blockchain  technology  is 
formed  by  nodes  located  in  different  places  around  the 
world. Instead of single entities establishing a data trust 
relationship, it is established by the distributed network. 

•  Blockchain  does  not  have  any  single  point  of  failure, 
making it more resilient, efficient and democratic. 

• 

• 

Transactions  are  grouped  in  a  block,  which  is  secured 
by a cryptographic hashing process that generates a hash 
pointer.  

This hash pointer contains the hash of the current block 
and  the  hash  of  the  previous  block.  This  approach 
ensures  that  all  the  blocks  are  linked  retroactively.  If 
somebody tries to modify the data contained in a block, 
this  modification  will  generate  a  totally  different  hash 
pointer.  Thus,  in  order  to  modify  the  transaction,  you 
would  have  to  redo  the  block's  proof  of  work,  i.e. 
remine the block. Modifying transactions already in the 
blockchain  requires  remining  blocks,  and  after  a 
transaction  already  has  a  few  confirmations,  doing  this 
requires  immense  amounts  of  computing  power.  So 
much  computing  power  is  required  that  modifying 
blocks is effectively impossible to do. 

• 

Transactions  are  validated 
through  a  consensus 
mechanism  that  is  executed  by  all  the  blockchain 
network. 

The  following  features  of  blockchain  guarantee  consequence 
acceptance: 

•  A blockchain ledger is immutable, which means that it 

remains unaltered and indelible.  

 
 
 
 
 
 
Insert Your Title Here 

WOODSTOCK’18, June, 2018, El Paso, Texas USA 

Additionally, blockchain associates a pair of keys (aka addresses) 
to process each transaction in the block. Blockchain associates the 
public key with the transaction and keeps it visible to all. On the 
other  hand,  blockchain  requires  the  private  key  to  authorize  the 
execution of the transaction. The owner of the blockchain account 
is  the  only  one  that  should  know  the  private  key.  On  the  ledger 
that  blockchain  provides,  any  transaction  can  be  queried  by  the 
public key. However, connecting the public to the account owner 
is nearly impossible as the private key is encrypted. 

Contemporary  researchers  have  analyzed  how  blockchain  would 
benefit  IoT  [191,  192]  The  following  paragraphs  review  how 
some  researchers  have  integrated  blockchain  technologies  to 
create systems to manage different aspects of IoT. 

Rifat  et  al.  [34]  follow  the  ADEPT  idea  of  creating  hybrid 
architectures  that  integrate  existing  technologies.  This  work 
proposes  a  blockchain-based  IoT  infrastructure  that  integrates 
LoRas  for  communication  with  IoT  devices,  Swarm  for 
distributed  data  storage,  and  Ethereum  to  store  the  backend 
services in the form of smart contracts. Data about IoT devices is 
stored in Swarm. This approach allows using the public Ethereum 
network instead of configuring a private one. Ethereum stores the 
smart contracts that manage access rules and permissions. 

Samaniego  et  al.  [35]  also  present  a  hybrid  system  for 
autonomous  IoT  management.  This  work  integrates  CLIPS  to 
enhance  the  constrained  network  with  artificial  intelligence 
features  and  Multichain  to  handle  communication.  This  work 
introduces the internet of “smart things” – IoST. Smart things are 
software artifacts provisioned with artificial intelligence features. 
These  features  are  programmed  in  the  form  of  rules  using  the 
can 
language.  The 
CLIPS  programming 
autonomously  analyze  their  state,  infer  knowledge,  and  monitor 
changes. 

things 

smart 

Sheng et al. [36] propose a blockchain-based system that follows 
the attribute-based access control. IoT devices are defined as a set 
of attributes. This work implements Hyperledger Fabric to record 
the  attribute-based  permissions.  Attribute  authorities  record  the 
authorization  of  the  attributes  of  the  IoT  devices  and  the 
permissions associated with them in the form of transactions. 

Novo O. [37] proposes an architecture that integrates blockchain 
to  handle  roles  and  permissions  to  access  IoT  devices.  This 
architecture implements a private Ethereum network that manages 
access through a single, smart contract.  

Samaniego  et  al.  [38]  implement  a  blockchain-based  system  that 
supports  multi-tenant  access  in  IoT.  This  research  presents  the 
design  of  virtual  resources  that  are  hosted  among  edge  devices. 
These  virtual  resources  enable  the  definition  of  views  on  top  of 
existing IoT systems. Each tenant gets its own virtual IoT system. 
This approach offers virtualization at the edge of the constrained 
networks  without  the  high  latency  that  traditional  cloud-based 
systems that support multitenancy involve. This work implements 
IBM Bluemix to store the virtual IoT systems for each tenant. 

Rifi  et  al.  [39]  propose  a  blockchain-based  architecture  to  Uses 
Ethereum smart contracts for authenticating users just once. After 
users  have  been  authenticated,  the  smart  contract  broadcasts  an 
access  token  among  the  IoT  network.  IoT  devices  can  manage 
access based on the copy of the token they have. Thus, users do 
not have to go through the smart contract every time they want to 
access the IoT network. 

Ouaddah  et  al.  [40]  present  an  access  control  framework  for 
authorization  management.  This  work  integrates  Ethereum  smart 
contracts to evaluate contextual information and apply policies to 
make authorization decisions.  

Pinno  et  al.  [41]  present  a  blockchain-based  architecture  to  store 
relationships  between  users  or  groups  of  users  and  devices  to 
enable  access  to  IoT  data.  This  work  defines  two  types  of 
relationship  references,  blockchain-dependent  and  external.  The 
blockchain-dependent  relationship  links  information  about  users 
with information about their authorization stored in a block. This 
approach  helps  to  audit  provenance  information.  The  external 
relationship links information about users with information about 
their  last  access  to  the  system.  This  approach  helps  to  improve 
latency when confirming the permissions of users. 

4.1  Smart Contracts 
Smart  contracts  represent  the  second  generation  of  blockchain 
technologies  [42].  Ethereum  is  the  main  blockchain  technology 
that represents this generation. Ethereum was proposed by Vitalik 
Buterin in 2013 [43]. It was formally launched in 2015. Ethereum 
is  well-known  for  implementing  smart  contracts.  Ethereum  is  a 
public  and  open  source  blockchain  technology  that  allows 
deploying  smart  contracts  to  build  distributed  systems  without  a 
third-party  orchestration.  This  approach  replaces  powerful 
centralized  servers  by  a  distributed  large  network  of  small 
computers located around the world running smart contracts.  

Nick Szabo initially proposed smart contracts in 1994 [44]. Szabo 
states that smart contracts are computerized protocols that execute 
the  conditions  of  a  contract.  Specifically,  he  defined  a  smart 
contract as: “a set of promises, specified in digital form, including 
protocols within which the parties perform on these promises.”  

Ethereum  defines  smart  contracts  as  “systems  that  automatically 
move  digital  assets  according  to  arbitrary  pre-specified  rules” 
[43].  Smart  contracts  directly  manage  the  transfer  of  assets 
between  parties  after  these  parties  have  agreed  to  specific 
conditions. As long as the conditions are met, the result of a smart 
contract  cannot  be  stopped.  For  instance,  a  smart  contract  code 
automatically validates conditions and determines what to do with 
an asset. The smart contract determines whether the asset should 
be transferred to a new person or whether it should be returned to 
the person who sent it originally. 

Smart  contracts  in  blockchain  facilitate  the  agreement  between 
untrusted parties without relying on am unique centralized trusted 
third party. Smart contracts control the execution of transactions, 
and  blockchain  ensures  that  those  transactions  are  trackable  and 
irreversible.   

 
 
WOODSTOCK’18, June, 2018, El Paso, Texas USA 

F. Surname et al. 

Ethereum  smart  contracts  are  deployed  on  the  Ethereum  virtual 
machine. The computing power to run smart contracts is provided 
by all the nodes that are part of the network. Once a smart contract 
is  deployed,  no  one  can  alter  it.  A  smart  contract  may  be 
organically  stopped  if  it  has  an  ending  function  and  if  the 
condition  of  the  ending  function  is  met.  Smart  contracts  can 
facilitate  the  creation  of  data  trust  relationships.  For  instance,  to 
create  an  online  data-trust  service,  we  can  set  up  an  Ethereum 
smart contract that would have the specifications of the actors and 
the  conditions  of  the  relationship.  When  the  smart  contract  is 
signed by the actors and initial conditions are met, then access to 
data  is  enabled.  If  an  actor  violates  some  of  the  conditions,  then 
some actions are triggered. 

In  order  to  deploy  smart  contracts  in  Ethereum,  we  need  Ethers. 
Ether  is  the  cryptocurrency  that  Ethereum  implements.  While 
smart contracts  help  reduce bureaucracy  of  processes,  depending 

on the complexity of the smart contract, the costs of deployment 
and transactions might be high. 

An  alternative  to  smart  contracts  is  chain  code  that  Hyperledger 
Fabric  implements.  Unlike  Ethereum  smart  contracts  that  run  on 
the  distributed  Ethereum  network,  Hyperledger  chain  code  run 
under  the  control  of  a  peer.  A  specific  peer  managed  the  chain 
code.  Unlike  Ethereum  smart  contracts  that  are  immutable, 
Hyperledger  chain  code  are  flexible  because  it  is  managed  by  a 
single  peer  that  can  update  its  state.  While  Ethereum  is  more 
oriented  for  mass  consumption,  Hyperledger  is  oriented  for 
flexibility in business. 

Table 2 presents comparison of the main features of Ethereum and 
technologies.  Table  3  presents  a 
Hyperledger  blockchain 
comparison  among  private,  public,  and  hybrid  blockchain 
networks. 

Attribute 

Participation and 
confidentiality 

Consensus 

Cryptocurrency 

Accounts and Identity 

Table 2. Ethereum vs Hyperledger 

Ethereum  

Public 
Permissionless 

Proof of Work (PoW) 

Ether 
Execute transactions (senders and 
recipients) 
Externally owned 
Contract 

Hyperledger 

Private 
Permissioned 
Execute-Order-Validate 
Zab 
Raft 
N/A 

Membership Service Provider (MSP) 
No pre-defined recipient 

Table 3. Public, private, and consortium blockchain networks for data trust. 

Attribute 

Ethereum Smart Contracts 

Fabric Chaincode 

Transaction Privacy 
Value Delivery 
Consequence Acceptance 
Flexibility 
Deployment Environment 
Programming Languages 

No 
Yes 
Yes 
No 
Distributed (EVM) 
Specialized (e.g.: Solidity) 

Partial 
Partial 
No 
Yes 
Centralized (A peer) 
High level (e.g.: Java, JavaScript, Go) 

4.2  Blockchain Networks 
Buterin  V.  [45]  classifies  blockchain  technologies  in  three 
categories, public, private, and consortium.  

4.2.1. Public Blockchain  

A  public  blockchain  network  is  decentralized.  Therefore,  no 
single entity controls the network. In public blockchain networks, 
the  level  of  access  is  granted  to  all  nodes  in  the  network.  Any 
node  can  read  and  write  transactions.  Also,  any  node  can 
participate  in  the  consensus  process.  Public  blockchain  networks 
provide  low  scalability  as  all  the  nodes  have  to  validate 
transactions, and transactions are processed at a slow rate. Public 

 
 
 
  
 
 
 
 
 
 
Insert Your Title Here 

WOODSTOCK’18, June, 2018, El Paso, Texas USA 

blockchain networks are trustless. Participants must not be trusted. 
Public  blockchain  networks  are  more  secure 
than  private 
blockchain  networks.  The  decentralization  and  constant 
participation  of  nodes  would  make  the  network  secure.  Public 
blockchain networks would consume a high amount of energy as 
all nodes compete against each other to validate blocks.  

4.2.2. Private Blockchain 

nodes  handle  the  validation  process,  and  transactions  can  be 
processed  at  a  higher  rate  than  in  public  blockchain  networks. 
Private  blockchain  networks  are  not  trustless.  Pre-authorized 
nodes  rely  on  the  credibility  of  each  other.  A  private  blockchain 
network  might  offer  less  reliability  than  public  ones.  The  close 
environment  of  validator  nodes  would  make  it  easier  to  expose 
them 
that  might 
compromise the entire network. 

to  hacks,  risks,  and  data  manipulation 

A  private  blockchain  network  is  centralized.  There  is  a  single 
entity that controls the network. In a private blockchain, the level 
of  access  is  granted  to  certain  nodes  in  the  network  previously 
authorized by the central entity. Only these pre-authorized nodes 
can  participate  in  validating  and  writing  transactions.  Also, 
approved  participants  can  read  from  the  chain.  Also,  only  these 
pre-authorized  nodes  can  participate  in  the  consensus  process. 
Private  blockchain  networks  provide  high  scalability  as  a  few 

4.2.3. Consortium Blockchain 

Consortium  blockchain  networks  combine  features  from  public 
and private blockchains. The main difference is that in consortium 
blockchain networks, the level of access is granted by a group of 
entities.  Pre-authorized  nodes  are  all  known  and  belong  to  all 
these entities. Table 4 and 5 present an overview of these groups 
of blockchain [46]. 

Table 4. Technological features of public, private, and consortium blockchain networks. 

Attribute 

Public Blockchain 

Private Blockchain 

Consortium Blockchain 

Permission-less 
Permissioned 
Immutable 
Centralized 

Consensus 

Consensus 
Participants 

Governance 

Read Permission 
Efficiency 
(transactions 
troughput) 

Performance 

Example Technology 

Yes 
No 
Yes 
No 

Proof-of work 

Yes 
Yes 
Yes 
Yes 
Byzantine fault tolerance (BFT) 
Proof-of-stake 

Yes 
Yes 
Yes 
Partial 
Byzantine fault tolerance (BFT) 
Proof-of-stake 

All miners 

Pre-determined group of nodes 

Pre-determined group of nodes 

Open to any entity on the 
internet 
Public 

Single entity 

Group of entities 

Public or restricted 

Public or restricted 

Low 

High 

High 

Higher costs 
Slower transaction speeds 
compare to private 
blockchains 
Bitcoin 
Ethereum 

Cut down costs 
Increase transaction speeds 

Cut down costs 
Increase transaction speeds 

Ethereum 

Ethereum 
Hyperledger Fabric 

Table 5. Public, private, and consortium blockchain networks for data trust. 

Attribute 

Public Blockchain 

Private Blockchain 

Consortium Blockchain 

Transparency 
Value Delivery 
Consequence 
acceptance 
Anonymity 
Transaction Privacy 

Yes 
No 

Yes 

Yes 
No 

No 
Yes 

Yes 

No 
Yes 

Partial 
Partial 

Yes 

Partial 
Partial 

 
 
 
 
Proposed Data Trust Platform 

5 
We  can  use  blockchain  beyond  cryptocurrencies.  The  design 
pattern  and  the  characteristics  of  blockchain  technology  can 
enable  a  decentralized  management  structure  to  manage  IoT 
networks[47]: 

•  A decentralized system to establish rules. 
•  A  copy  of  every  transaction  executed  to  guarantee 

transparency and auditing. 

•  A  decentralized  validation  of  transactions  to  guarantee 

the reliability of the business. 

•  A tamper-proof ledger to guarantee the security. 

The  ability  to  create,  store,  and  transfer  digital  assets  in  a 
distributed,  decentralized,  and  tamper-proof  manner  is  of  a  large 
practical value for IoT. 

The ADEPT (Autonomous Decentralized Peer-to-Peer Telemetry) 
system  [48]  was  the  first  system  to  integrate  blockchain 
technology  to  manage  IoT  networks.  The  ADEPT  system  was 
developed  by  IBM  and  Samsung.  ADEPT  provides  a  hybrid 
architecture  that  eliminates  the  classical  centralized  management 
authority  in  IoT.  The  main  goal  of  ADEPT  is  to  build  a 
decentralized  IoT  management  structure  by  providing  a  hybrid 
following  management 
architecture.  ADEPT  supports 
functions: 

the 

• 

Peer-to-peer  messaging  by 
integrating  Telehash. 
Telehash  is  an  open-source  distributed  hash  table 
the  Kademlia  protocol. 
implementation  (DHT)  of 
Telehash 
to  manage  notifications  among 
is  used 
devices.  

•  Distributed  file  sharing  by 

integrating  BitTorrent. 
BitTorrent  is  a  DHT  file  sharing.  BitTorrent  is  used  to 
distribute content among devices. 

•  Autonomous  device  coordination  by 

integrating 

Ethereum. 

ADEPT  integrates  Ethereum  to  build  a  device-coordination 
framework to handle the following transactions among devices: 

•  Checklists.  Thus,  devices  can  maintain  their  status  to 

prevent failures. 

•  Contracts.  Thus,  devices  can  coordinate  agreements 
about  actions,  controls,  and  complex  transactions  that 
require the exchanging of resources to receive a service. 
Contracts mainly manage the following transactions: 

o 
o 
o 

agreements 
payments 
barter 

•  Rules  of  engagement.  Thus,  devices  can  handle 
complex interactions that require the definition of rules. 
These rules can be based on: 

• 
proximity (e.g., physical, social, or temporal) 
• 
consensus (e.g., selection, validation, or blacklisting) 
• 
triggered actions by other devices simultaneously 
•  Authentication.  Thus,  devices  can  handle  individual 
and 

registration 

functions 

like 

coordination 
authentication 

•  Registration.  Thus,  devices  can  autonomously  handle 
access  verification  before  registration  of  updates 
installation. 

Ethereum  provides  an  environment  with 
characteristics: 

the 

following 

• 
• 
• 
• 

Trust-less network 
Signed transactions 
Public consensus 
Transaction code 

The following characteristics define a smart contract: 

• 
• 
• 
• 

Self-verifying 
Self-enforcing 
Self-executing 
Tamper-proof 

Smart contracts can handle the following tasks: 

•  Automate manual processes. 
• 
• 
• 

Ensure transparency. 
Eliminate relations to central trusted parties. 
Support multi-signature conditions in order to execute a 
transaction.  

•  Manage agreements among unknown parties. 
• 

Provide input to other contracts. 

this 

idea, 

the  ADEPT 

research  proposes 

Following 
the 
development  of  a  hybrid  decentralized  data  trust  platform 
integrating  Ethereum  blockchain.  Figure  4  presents  an  overview 
of  the  architecture  of  the  data  trust  platform  that  this  research 
proposes.  The  architecture  flow  of  the  data  trust  platform  starts 
with  two  parties  interested  in  enabling  a  data-trust  relationship. 
The two parties define the parameters that will rule the data trust 
relationship. The data trust platform has five components: 

• 
Ethereum Blockchain Network. 
•  Off-Chain Distributed Data Storage.  
•  Data Trust Factory.  
•  Data Trust Reviewer 
•  Data Provisioner 
•  Data Streaming Factory 
•  Monitoring Tool 

  
 
 
 
 
 
  
 
WOODSTOCK’18, June, 2018, El Paso, Texas USA 

F. Surname et al. 

Figure 4. Overview of the Architecture of the Data Trust Platform that Integrates Blockchain. 

One of the downsides of using Ethereum smart contracts to create 
a data trust platform is the cost of deploying smart contracts.  
An  alternative  to  save  money  would  be  managing  the  smart 
contracts  in  a  centralized  manner.  A  blockchain  technology  that 
enables  this  approach  is  Hyperledger.  We  can  deploy  in-chain 
code  (equivalent  to  smart  contracts)  centrally.  However,  this 
approach affects the transparency that data trust demands.  

6  Conclusions 
This  research  proposes  a  hybrid  data  trust  platform  for  IoT.  IoT 
has  unique  characteristics  that  make  some  challenges  emerge 
when  implementing  data  trust  –  for  instance,  near  real-time  data 
streaming, low data rates, and heterogenous computing.  

This research proposes the use of blockchain technology to enable 
data  trust  in  IoT.  The  features  of  blockchain  technology  can 
guarantee the transparency, data value delivery, and consequence 
acceptance that data trust demands.  

to  help  decide 

This research also presented a review of blockchain from different 
perspectives 
the  most  suitable  blockchain 
configuration  when  implementing  data  trust  in  IoT.  Public 
permission  less  blockchain  technologies  like  Ethereum  provide 
high  transparency,  value  delivery,  and  consequence  acceptance. 

However, it provides low flexibility and might involve a high cost 
depending on the complexity of smart contracts.  

On the other hand, Hyperledger Fabric chaincode might decrease 
costs  and  enable  flexibility.  However,  as  it  is  private  and 
permissioned,  it  might  guarantee  low  to  medium  transparency, 
value delivery, and consequence acceptance. 

Implementation details and experiments of the proposed data trust 
architecture will be presented on a further research. 

REFERENCES 
[1] 

[2] 

[3] 

[4] 
[5] 

[6] 

[7] 

L.  Edwards,  “Reconstructing  consumer  privacy  protection  on‐line:  a 
modest  proposal,”  Int.  Rev.  Law,  Comput.  Technol.,  vol.  18,  no.  3,  pp. 
313–344, 2004, doi: 10.1080/1360086042000276762. 
F. Firouzi, B. Farahani, M. Weinberger, G. DePace, and F. S. Aliee, “IoT 
Fundamentals:  Definitions,  Architectures,  Challenges,  and  Promises,”  in 
Intelligent Internet of Things, 2020, pp. 3–50. 
M. Ben-Daya, E. Hassini, and Z. Bahroun, “Internet of things and supply 
chain  management:  a  literature  review,”  Int.  J.  Prod.  Res.,  vol.  57,  no. 
15–16, pp. 4719–4742, 2019, doi: 10.1080/00207543.2017.1402140. 
K. Ashton, “That ‘Internet of Things’ Things,” RFiD J., p. 1, 2010. 
R.  De  Michele  and  M.  Furini,  “IoT  Healthcare:  Benefits,  issues  and 
challenges,”  ACM  Int.  Conf.  Proceeding  Ser.,  pp.  160–164,  2019,  doi: 
10.1145/3342428.3342693. 
R.  Mahmud,  F.  L.  Koch,  and  R.  Buyya,  “Cloud-fog  interoperability  in 
IoT-enabled healthcare solutions,” ACM Int. Conf. Proceeding Ser., 2018, 
doi: 10.1145/3154273.3154347. 
S.  Helal  and  S.  Tarkoma,  “Challenges  and  Opportunities  in  Designing 
Smart Spaces,” IEEE Pervasive Comput., vol. 14, no. 2, pp. 22–23, 2015, 
doi: 10.1109/MPRV.2015.40. 

 
 
 
 
 
 
 
 
 
Insert Your Title Here 

WOODSTOCK’18, June, 2018, El Paso, Texas USA 

S.  Nakamoto,  “Bitcoin:  A  Peer-to-Peer  Electronic  Cash  System.” 
Accessed: Jan. 16, 2017. [Online]. Available: www.bitcoin.org. 
X. Wang et al., “Survey on blockchain for Internet of Things,” Comput. 
Commun.,  vol.  136,  no.  August  2018,  pp.  10–29,  2019,  doi: 
10.1016/j.comcom.2019.01.006. 
H.-N. Dai, Z. Zheng, and Y. Zhang, “Blockchain for Internet of Things: 
A  Survey,”  IEEE  Internet  Things  J.,  vol.  6,  no.  5,  pp.  1–19,  2019,  doi: 
10.22667/JISIS.2019.05.31.001. 
K.  R.  Ozyilmaz  and  A.  Yurdakul,  “Designing  a  Blockchain-based  IoT 
with  Ethereum,  swarm,  and  LoRa:  the  software  solution  to  create  high 
availability with minimal security risks,” IEEE Consum. Electron. Mag., 
vol. 8, no. 2, pp. 28–34, 2019. 
M.  Samaniego  and  R.  Deters,  “Internet  of  Smart  Things  -  IoST:  Using 
Blockchain and CLIPS to Make Things Autonomous,” Proc. - 2017 IEEE 
1st  Int.  Conf.  Cogn.  Comput.  ICCC  2017,  pp.  9–16,  2017,  doi: 
10.1109/IEEE.ICCC.2017.9. 
S.  Ding,  J.  Cao,  C.  Li,  K.  Fan,  and  H.  Li,  “A  Novel  Attribute-Based 
Access Control Scheme Using Blockchain for IoT,” IEEE Access, vol. 7, 
pp. 38431–38441, 2019, doi: 10.1109/ACCESS.2019.2905846. 
O.  Novo,  “Blockchain  Meets  IoT:  An  Architecture  for  Scalable  Access 
Management  in  IoT,”  IEEE  Internet  Things  J.,  vol.  5,  no.  2,  pp.  1184–
1195, 2018, doi: 10.1109/JIOT.2018.2812239. 
M.  Samaniego  and  R.  Deters,  “Supporting  IoT  Multi-Tenancy  on  Edge 
Devices,”  Proc.  -  2016  IEEE  Int.  Conf.  Internet  Things;  IEEE  Green 
Comput.  Commun.  IEEE  Cyber,  Phys.  Soc.  Comput.  IEEE  Smart  Data, 
iThings-GreenCom-CPSCom-Smart  Data  2016,  vol.  7,  pp.  66–73,  2017, 
doi: 10.1109/iThings-GreenCom-CPSCom-SmartData.2016.38. 
N.  Rifi,  E.  Rachkidi,  N.  Agoulmine,  and  N.  C.  Taher,  “Towards  Using 
Blockchain  Technology  for  IoT  data  access  protection,”  2017,  doi: 
10.1109/ICABME.2017.8167555. 
A.  Ouaddah,  A.  A.  Elkalam,  and  A.  A.  Ouahman,  “Towards  a  novel 
privacy-preserving access control model based on blockchain technology 
in IoT,” in Europe and MENA Cooperation Advances in Information and 
Communication  Technologies,  2017,  pp.  523–533,  doi:  10.1007/978-3-
319-46568-5. 
O.  J.  A.  Pinno,  A. R.  A.  Gregio,  and  L.  C.  E.  De  Bona, “ControlChain: 
Blockchain as a Central Enabler for Access Control Authorizations in the 
IoT,”  in  2017  IEEE  Global  Communications  Conference,  GLOBECOM 
doi: 
2017 
10.1109/GLOCOM.2017.8254521. 
A.  Pieroni,  N.  Scarpato,  L.  Di  Nunzio,  F.  Fallucchi,  and  M.  Raso, 
“Smarter City: Smart energy grid based on Blockchain technology,” Int. 
J.  Adv.  Sci.  Eng.  Inf.  Technol.,  vol.  8,  no.  1,  pp.  298–306,  2018,  doi: 
10.18517/ijaseit.8.1.4954. 
V.  Buterin,  “A  NEXT  GENERATION  SMART  CONTRACT  & 
DECENTRALIZED  APPLICATION  PLATFORM,”  white  Pap.,  vol.  3, 
no. 37, p. 36, 2014. 
N.  Szabo,  “Smart  contracts:  building  blocks  for  digital  markets,”  J. 
Transhumanist Thought, vol. 16, no. 118, p. 2, 1996. 
V.  Buterin, 
2015. 
https://blog.ethereum.org/2015/08/07/on-public-and-private-blockchains/ 
(accessed May 25, 2020). 
Z.  Zheng,  S.  Xie,  H.  Dai,  X.  Chen,  and  H.  Wang,  “An  Overview  of 
Blockchain  Technology:  Architecture,  Consensus,  and  Future  Trends,” 
Proc.  -  2017  IEEE  6th  Int.  Congr.  Big  Data,  BigData  Congr.  2017,  pp. 
557–564, 2017, doi: 10.1109/BigDataCongress.2017.85. 
T. Alam, “Blockchain and its Role in the Internet of Things (IoT),” Int. J. 
Sci.  Res.  Comput.  Sci.  Eng.  Inf.  Technol.,  vol.  5,  no.  1,  pp.  151–157, 
2019, doi: 10.32628/cseit195137. 
V.  Pureswaran,  S.  Panikkar,  S.  Nair,  and  P.  Brody,  “Empowering  the 
Edge:  Practical  Insights  on  a  Decentralized  Internet  of  Things,”  2015. 
https://www-935.ibm.com/services/multimedia/GBE03662USEN.pdf 
(accessed Nov. 22, 2019). 

and  Private  Blockchains,” 

“On  Public 

Proceedings, 

2017, 

1–6, 

pp. 

- 

[31] 

[32] 

[33] 

[34] 

[35] 

[36] 

[37] 

[38] 

[39] 

[40] 

[41] 

[42] 

[43] 

[44] 

[45] 

[46] 

[47] 

[48] 

[8] 

[9] 

[10] 

[11] 

[12] 

[13] 

[14] 

[15] 

[16] 

[17] 

[18] 

[19] 
[20] 

[21] 

[22] 

[23] 

[24] 

[25] 

[26] 

[27] 

[28] 

[29] 

[30] 

pp. 

vol. 

2018, 

81–98, 

Things, 

D. Mocrii, Y. Chen, and P. Musilek, “IoT-based smart homes: A review 
of system architecture, software, communications, privacy and security,” 
Internet 
doi: 
1–2, 
of 
10.1016/j.iot.2018.08.009. 
F.  Abate,  M.  Carratù,  C.  Liguori,  and  V.  Paciello,  “A  low  cost  smart 
power meter for IoT,” Meas. J. Int. Meas. Confed., vol. 136, pp. 59–66, 
2019, doi: 10.1016/j.measurement.2018.12.069. 
B.  W.  Wirtz,  J.  C.  Weyerer,  and  F.  T.  Schichtel,  “An  integrative  public 
IoT  framework  for  smart  government,”  Gov.  Inf.  Q.,  vol.  36,  no.  2,  pp. 
333–345, 2019, doi: 10.1016/j.giq.2018.07.001. 
E. Manavalan and K. Jayakrishna, “A review of Internet of Things (IoT) 
embedded  sustainable  supply  chain  for  industry  4.0  requirements,” 
Comput. Ind. Eng., vol. 127, no. November 2017, pp. 925–953, 2019, doi: 
10.1016/j.cie.2018.11.030. 
Q. Wang, X. Zhu, Y. Ni, L. Gu, and H. Zhu, “Blockchain for the IoT and 
industrial IoT: A review,” Internet of Things, no. xxxx, p. 100081, 2019, 
doi: 10.1016/j.iot.2019.100081. 
S.  JERNIGAN,  S.  A.  M.  RANSBOTHAM,  and  D.  KIRON,  “Data 
Sharing  and  Analytics  Drive  Success  With  IoT.,”  MIT  Sloan  Manag. 
[Online].  Available: 
Rev.,  vol.  58,  no.  1,  pp.  1–17,  2016, 
http://libweb.ben.edu/login?url=http://search.ebscohost.com/login.aspx?di
rect=true&db=bth&AN=118652586&site=ehost-live. 
J. Strassner and W. W. Diab, “A semantic interoperability architecture for 
Internet  of  Things  data  sharing  and  computing,”  2016  IEEE  3rd  World 
Forum  Internet  Things,  WF-IoT  2016,  pp.  609–614,  2017,  doi: 
10.1109/WF-IoT.2016.7845422. 
Y. Miao, Q. Tong, K. K. R. Choo, X. Liu, R. H. Deng, and H. Li, “Secure 
Online/Offline  Data  Sharing  Framework  for  Cloud-Assisted  Industrial 
Internet of Things,” IEEE Internet Things J., vol. 6, no. 5, pp. 8681–8691, 
2019, doi: 10.1109/JIOT.2019.2923068. 
H.  T.  T.  Truong,  M.  Almeida,  G.  Karame,  and  C.  Soriente,  “Towards 
secure and decentralized sharing of IoT data,” Proc. - 2019 2nd IEEE Int. 
Conf.  Blockchain,  Blockchain  2019,  pp.  176–183,  2019,  doi: 
10.1109/Blockchain.2019.00031. 
J.  H.  Nord,  A.  Koohang,  and  J.  Paliszkiewicz,  “The  Internet  of  Things: 
Review and theoretical framework,” Expert Syst. Appl., vol. 133, pp. 97–
108, 2019, doi: 10.1016/j.eswa.2019.05.014. 
S. Madakam, R. Ramaswamy, and S. Tripathi, “Internet of Things (IoT): 
A Literature Review,” J. Comput. Commun., vol. 03, no. 05, pp. 164–173, 
2015, doi: 10.4236/jcc.2015.35021. 
F. Aziz, S. K. Chalup, and J. Juniper, Big Data in IoT Systems. 2019. 
E.  Zeng  et  al.,  “End  User  Security  and  Privacy  Concerns  with  Smart 
Homes  This  paper  is  included  in  the  Proceedings  of  the  End  User 
Security  &  Privacy  Concerns  with  Smart  Homes,”  Thirteen.  Symp. 
Usable Priv. Secur., no. Soups, pp. 65–80, 2017. 
A. Burrows, D. Coyle, and R. Gooberman-Hill, “Privacy, boundaries and 
smart homes for health: An ethnographic study,” Heal. Place, vol. 50, no. 
May 2017, pp. 112–118, 2018, doi: 10.1016/j.healthplace.2018.01.006. 
G. Rieder and J. Simon, “Datatrust: Or, the political quest for numerical 
evidence and the epistemologies of Big Data,” Big Data Soc., vol. 3, no. 
1, pp. 1–6, 2016, doi: 10.1177/2053951716649398. 
G.  A.  Guerra,  D.  J.  Zizzo,  W.  H.  Dutton,  and  M.  Peltu,  “Economics  of 
Trust  in  the  Information  Economy:  Issues  of  Identity,  Privacy  and 
Security,” SSRN Electron. J., no. 1, 2011, doi: 10.2139/ssrn.723201. 
D. L. Hoffman, T. P. Novak, and M. Peralta, “Building Consumer Trust 
Online,”  Commun.  ACM,  vol.  42,  no.  4,  pp.  80–85,  1999,  doi: 
10.1145/299157.299175. 
P. Punyatoya, “Effects of cognitive and affective trust on online customer 
behavior,”  Mark.  Intell.  Plan.,  vol.  37,  no.  1,  pp.  80–96,  2019,  doi: 
10.1108/MIP-02-2018-0058. 
F.  Mahliza,  “CONSUMER  TRUST 
IN  ONLINE  PURCHASE 
DECISION Febrina,” EPRA Int. J. Multidiscip. Res. (IJMR)-Peer Rev. J., 
vol. 6, no. 2, pp. 142–149, 2020, doi: 10.36713/epra2013. 
N.  Karthik  and  V.  S.  Ananthanarayana,  “Data  trust  model  for  event 
detection in wireless sensor networks using data correlation techniques,” 
2017 4th Int. Conf. Signal Process. Commun. Networking, ICSCN 2017, 
pp. 1–5, 2017, doi: 10.1109/ICSCN.2017.8085701. 
S.  Ma,  O.  Wolfson,  and  J.  Lin,  “A  survey  on  trust  management  for 
intelligent  transportation  system,”  4th  ACM  SIGSPATIAL  Int.  Work. 
Comput. Transp. Sci. 2011, CTS’11, Conjunction with ACM SIGSPATIAL 
GIS 2011, pp. 18–23, 2011, doi: 10.1145/2068984.2068988. 
M. K. Khan and Q. Arshad, “Data and Privacy,” IEEE Consum. Electron. 
Mag., vol. 8, no. march, pp. 35–38, 2019. 
R. S. Sandhu and P. Samarati, “Access control constrains what a user can 
do directly, as well as what programs executing on behalf of the users are 
allowed  to  do.  In  this  way  access  control  seeks  to  prevent  activity  that 
could  lead  to  breach  of  security.,”  IEEE  Commun.  Mag.,  vol.  32,  no. 
September, pp. 40–48, 1994, doi: 10.1109/35.312842. 

 
 
 
 
