On the Byzantine-Fault-Tolerant Consensus for
Blockchain among Connected Vehicles

Seungmo Kim, Senior Member, IEEE, and Byung-Jun Kim

1

1
2
0
2
c
e
D
5
2

]

C
D
.
s
c
[

1
v
8
4
6
3
0
.
1
0
2
2
:
v
i
X
r
a

Abstract—It

is a critical matter for a blockchain system
whether a Byzantine fault tolerance (BFT) can be guaranteed
during a consensus process. Can connected vehicles (CVs) achieve
the BFT consensus when the vehicles keep mobile? This paper
seeks an answer to this fundamental question. It focuses on
characterizing the impact of mobility on the performance of a
BFT consensus among CVs.

Index Terms—Blockchain, Consensus, Byzantine fault toler-

ance, Connected vehicles

I. INTRODUCTION
1) Background: Throughout the short yet rich history of
connected vehicles (CVs), application of blockchain has re-
cently taken the center stage in the evolution. A salient
paradigm in this realm is how to reach a consensus efﬁciently
with the presence of mobility and dynamicity that a network
of CVs inevitably draws.

Every blockchain system employs a consensus mechanism
through which the participating peers reach an agreement on
veriﬁcation of a block [1]. In such a distributed consensus,
the Byzantine fault arises as a challenge, which refers to a
condition where some of the participants may fail and hence
the consensus should be made among the other participants.
While there has been impetus of prior work on the Byzantine
fault tolerance (BFT), this paper puts a particular focus on
the feasibility of achieving a BFT consensus in a blockchain
system formed among CVs. As mentioned earlier, this envi-
ronment exhibits particular challenges due to the mobility of
vehicles: the composition of nodes keeps varying [2].

2) Related Work: One of this paper’s authors has done
fundament studies that can be regarded as the basis of this
work [2][3] where the impact of mobility on the performance
of block exchange in a vehicular network [2] and the feasibility
of permissioned blockchain established on the Hyperledger
Fabric [3] were studied.

Yet small, there exists a body of prior work focusing on the
BFT consensus in a vehicular network. A particular consensus
mechanism called the “proof of eligibility” was proposed as
a means to promote the BFT in consensus among CVs [4].
Another recent study introduced the federated learning for
achieving a BFT consensus among autonomous vehicles [5].
While having addressed the timely issue, the related work
leaving a key question unresolved: How the mobility
still
affects the performance of BFT in reaching a consensus? As
such, the literature is still remaining premature in understand-
ing the fundamental performance of accomplishing a BFT

S. Kim is with the Department of Electrical and Computer Engineering,
Georgia Southern University in Statesboro, GA, USA. B. J. Kim is with the
Department of Mathematical Sciences, Michigan Technological University in
Houghton, MI, USA. The corresponding author is S. Kim who can be reached
at seungmokim@georgiasouthern.edu.

Fig. 1: An example snapshot of vehicles dropped in R2 (λN =
100 vehicles/∣R2∣ and pf = 0.25)

consensus across a network of CVs that dynamically change
the network characteristics.

3) Contributions: In the view of the limitation, this paper
is dedicated to precisely measuring the feasibility of a BFT
consensus in a blockchain network formed among CVs while
they are mobile. Speciﬁcally, it lays out a stochastic analysis
framework that is dedicated to characterizing:

● The number of nodes required to form a BFT consensus
● The latency of a BFT consensus

which shall be formally established as Lemmas 1 and 2,
respectively, in Section III.

II. SYSTEM MODEL
A generalized “square” space is assumed instead of a road-
like setting such as a road segment, for the most generic
form of analysis as done in related literature such as [6].
The environment represented by the system space R2, which
is deﬁned on a rectangular coordinate with the width and
length of D m. Therein, a CV network is deﬁned as a
homogeneous Poisson point process (PPP), denoted by Φ, with
the density of λ(> 0). The position of vehicle i is denoted by
xi = (xi, yi) ∈ R2. Note also that the PPP discussed in this
paper is a stationary point process where the density λ remains
constant according to different points in R2.

The horizontal and vertical positions of a vehicle are
uniform random variables in R2, which is the mathematical
rationale leading the vehicle distribution to a PPP [7]. Fig. 1
illustrates an example drop of vehicles following a PPP with
the intensity of λ = 100. Black squares indicate “legitimate”
vehicles, while green circles give “faulty vehicles. The mean-
ings of the two vehicle types will be elaborated in Section
III-A.

Not all N nodes are in each other’s physical communication
range, which necessitates the propagation via multiple hops
for a consensus when a new block is generated, as shall be
elaborated in Section III-B.

-1000-50005001000x-1000-50005001000y = 100 (vehs/|R2|), pf = 0.25Legit vehiclesFaulty vehicles 
 
 
 
 
 
2

The CVs form a permissionless blockchain system where
all the nodes participants in a process of verifying a newly
generated block. There is no master/slave type of hierarchy
among the nodes nor any selection.

III. STOCHASTIC ANALYSIS ON BFT CONSENSUS
Each of the following subsections provides technical details

on the two contributions identiﬁed in Section I-3.

A. Number of Nodes Required for BFT Consensus

It is well acknowledged that the minimum number of nodes
for a BFT consensus is N = 3f + 1 where f gives the number
of nodes that either (i) fails or (ii) maliciously acts [8]. Now,
the question is how this number has to change in a network of
CVs. The point of the question is that the vehicles constituting
the network are mobile, and hence that N and f have to be
quantiﬁed in such a way to reﬂect the mobility.

Proposition 1 (Distribution of f ). Given the nodes are dis-
tributed following a PPP, the number of nodes N in the system
area R2 follows a Poisson distribution with the intensity of λ.
Provided this, the number of faulty nodes f follows another
Poisson distribution with the intensity of pf λ where pf gives
the probability of a failure for each node.

Fig. 2: Inter-relationship among the variables constituting
Lemma 1

Notice that we deﬁne δN and δf as random variables indicat-
ing the “cumulative” numbers of legit/faulty vehicles ﬂowed
into/out of the network over the last T seconds.

Since the Poisson distribution is closed under addition, the
N given in (1) also follows a Poisson distribution whose
∎
intensity is 3λf − λδN + λδf .

Remark 1 (Meaning of N ). N is the “required” number
of nodes for existence of f faulty nodes, which translates
to “when there are f faulty nodes, how many nodes does
one need to keep the network BFT?” As such, a network
is composed of N nodes where only (N − f ) /N nodes are
capable of participating in a consensus process.

Proof: The proposition can easily be proved predicated on
∎

thinning of a PPP [9].

B. Latency of BFT Consensus

One of the key contributions of this paper is to introduce
new variables characterizing the uniqueness of a network
composed of connected vehicles. We focus on the fact that
the number of nodes constituting a network varies due to
the mobility. We introduce two random variables δN and δf
indicating the change in the number of legitimate and faulty
nodes, respectively.

Fig. 2 illustrates the relationship among the variables that
are used in the formulation of this paper. We start with
reiterating that N and f are Poisson random variables, as has
been discussed in Section II. Now, as being a CV network,
the key characteristic is that the intensities of both N and f
vary due to the mobility of vehicles composing the network.
We denote the in-/decrement of N by δN = N + − N −. The
same formulation applies to f , which yields δf = f + − f −.

Assumption 1 (Arrival and departure of vehicles). Assume
an M/M/1 queue. It yields that both arrival and departure
processes follow a Poisson distribution based on the Burke’s
theorem [10].

Lemma 1 (Distribution of N ). The variable N denoting the
total number of vehicles required to accomplish a BFT con-
sensus follows another Poisson distribution with the intensity
of 3λf − λδN + λδf .

Proof: Considering the mobility of the vehicles, the number
of vehicles to keep the BFT among connected vehicles is
computed as

N > 3f − δN + δf + 1

(1)

Many of recent blockchain systems adopt the gossip proto-
col in their consensus mechanism [11][12]. In what follows,
we refer to the epidemiology [13] as a method to formulate
how a block is disseminated throughout a network via a gossip
protocol.

Here are key variables. We remind that N denotes the
total number of CVs in the network. Now, by rt and rt, we
denote the proportion of vehicles that have “received” and
“not received” the block sent from the source node in the tth
time slot, which yields rt = 1 − rt. We assume that in the ﬁrst
time slot, i.e., t = 0, the source node has a block to propagate,
which is given by r0 = pf where pf gives the probability that
a given node fails in passing a block along. As a result of the
deﬁnition, r0 = 1 − pf is true.

Proposition 2 (Block dissemination rate). With pf denoting
the probability that an arbitrary node fails to receive a block,
we deﬁne the probability that any given node has successfully
received a block for a consensus in time slot t as

N (1−pf )
R = 1 − rt−1p
f

(2)

Proof: We start with formulating the probability that a node
fails to receive a block in time slot t + 1, which can be writen
as

rt = P [No reception as of t − 1] P [No further reception]

N (1−pf )
= rt−1p
f

(3)

where pf denotes the probability that a node fails. We
also clarify that P [No reception as of t − 1] = rt−1 and
N (1−pf )
P [No further reception] = p
. As such, the equation
f

𝑁(cid:2878)𝑁(cid:2879)𝛿(cid:3015)𝛿(cid:3033)𝑓(cid:2878)𝑓(cid:2879)3

Fig. 3: Rate of block dissemination via a gossip protocol
according to the total number of vehicles N = {5, 45, 85, 125}

(a) Base f : δf = δN = 0

(3) translates to the following: in order for a node to remain
having no block received at time t, it must have received no
block at time t−1, either (i.e., rt−1); then, at time t, there has to
be another failure of block delivery (i.e., pf ) from all the other
nodes that are capable of sending a block (i.e., N (1 − pf )).
This can easily be translated to the probability that a node

receives a block in time slot t, which is given by

R ∶= rt = 1 − rt,

which completes the proof.

(4)

∎

Deﬁnition 1 (Latency of block dissemination). We deﬁne the
latency of dissemination of a block throughout a network of
CVs as the number of time slots consumed through the course
of a gossip protocol until the rate of block dissemination
reaches a 1, which is formulated as

T = t∣∣rt−1∣=(cid:15)

(5)

where (cid:15) gives an inﬁnitesmall number that is smaller than the
size of a granule used in the computer. We choose (cid:15) = 10−5
for the results that will be presented in Section IV.

Lemma 2 (Distribution of latency of BFT consensus among
CVs). The distribution of latency is approximated to the beta
distribution.

Proof: The latency predominantly depends on the in-
/outﬂow of legit/faulty vehicles, i.e., δN and δf . A beta random
variable uniquely models a situation where a pair of binary
parameters determine the shape of its PDF.

While this proof does not provide a closed-form expression,
the suitability of beta distribution is presented in Figs. 4 and
∎
5 in Section IV.

IV. RESULTS AND DISCUSSION

A. Rate of Block Dissemination

Fig. 3 shows the rate of dissemination of a block within a
network of CVs, which was formulated as Proposition 2. Each
curve represents a value of N on the length of time taken for
propagation of a block from the block-generating vehicle to the
other vehicles. For instance, the green curve (which is on the

(b) δf < δN

(c) δf > δN

Fig. 4: Distribution of latency with a small f (i.e., f = 6)

very top among the 4 curves) hits 1 when the number of slots
consumed is 8. It means that N = 5 CVs need 8 time slots for
completion of a block propagation among all of the 5 vehicles.
The dissemination latency ranges from 8 to 12 slots depending
on the given numbers of peers–i.e., N = {5, 45, 85, 125}.

Furthermore, it is critical to recall that a consensus con-
sumes the largest proportion in the latency for a block from
being generated to being ﬁnally added to the chain [14]. That
is, it is useful to understand the latency of a BFT consensus
predominates as an effort to fathom the impact of N on the
latency of an entire process of verifying a new block.

B. Distribution of Latency of BFT Consensus

Figs. 4 and 5 describe the distribution of latency T, which
was formulated as Lemma 2. The two ﬁgures provide a

02468101214161820Latency (# time slots needed)00.10.20.30.40.50.60.70.80.91Rate of block disseminationN = 5N = 45N = 85N = 1254

a higher latency.

As such, two key factors elevating the latency of consensus

have been found: (i) a larger f and (ii) δf > δN .

It is also noteworthy that in Figs. 3 through 5 the latency is
given in the number of time slots consumed for propagation of
a block. We stress that one can easily interpret this latency into
the unit of seconds. For instance, in the distributed mode of a
C-V2X network (i.e., mode 4), a message is broadcast every
{50, 100, 200} milliseconds (msec) [15]. This translates a
“time slot” shown in Figs. 3 through 5 to {50, 100, 200} msec.
For instance, λN = 6 yields that the majority of consensuses
are formed with a latency of {250,500,1000} msec. The same
can be applied to the dedicated short-range communications
(DSRC), which sets the inter-message time to 100 msec [16].

V. CONCLUSIONS

This paper studied the problem of achieving a BFT consen-
sus among CVs constituting a blockchain network. It provided
a stochastic analysis on (i) the number of vehicles to guarantee
a BFT consensus and (ii) the latency in forming a consensus.
Through simulation, we conﬁrmed the analytic ﬁndings and
discovered that both the (i) number and (ii) inﬂowing number
of faulty nodes predominate the latency.

REFERENCES

[1] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” Oct.

2008. [Online]. Available: https://bitcoin.org/bitcoin.pdf

[2] S. Kim, “Impacts of mobility on performance of blockchain in VANET,”

IEEE Access, vol. 7, May 2019.

[3] S. Kim and A. S. Ibrahim, “Byzantine-fault-tolerant consensus via
reinforcement learning for permissioned blockchain implemented in a
V2X network,” arXiv:2007.13957, Jul. 2020.

[4] H. Liu, C. W. Lin, E. Kang, S. Shiraishi, and D. M. Blough, “A
Byzantine-tolerant distributed consensus algorithm for connected vehi-
cles using proof-of-eligibility,” in Proc. ACM MSWiM 2019.

[5] J. H. Chen, M. R. Chen, G. Q. Zeng, and J. S. Weng, “BDFL: a
byzantine-fault-tolerance decentralized federated learning method for
autonomous vehicle,” IEEE Trans. Veh. Technol. vol. 70, no. 9, Aug.
2021.

[6] S. Kim and B. J. Kim, “Novel backoff mechanism for mitigation of
congestion in DSRC broadcast,” arXiv preprint arXiv:2005.08921, May
2020.

[7] M. Haenggi, “On distances in uniformly random networks,” IEEE Trans.

Inf. Theory, vol. 51, no. 10, Oct. 2005.

[8] A. Singh, T. Das, P. Maniatis, P. Druschel, and T. Roscoe, “BFT

protocols under ﬁre,” in Proc. USENIX NSDI 2008.

[9] S. Chiu, D. Stoyan, W. Kendall, and J.Mecke, Stochastic Geometry and

its Applications, John Wiley & Sons, Jun. 2013.

[10] O. Ibe, Markov Processes for Stochastic Modeling, Newnes; May 2013.
[11] W. Hu, Y. Hu, W. Yao, and H. Li, “A blockchain-based Byzantine
consensus algorithm for information authentication of the internet of
vehicles,” IEEE Access, Sep. 2019.

[12] E. Buchman, J. Kwon, and Z. Milosevic, “The latest gossip on BFT

consensus,” arXiv preprint arXiv:1807.04938, Jul. 2018.

[13] M. Jelasity, Gossip, Springer Berlin Heidelberg, pp. 139–162, [Online].

Available: http://dx.doi.org/10.1007/978-3-642-17348-6 7

[14] C. Berger and H. P. Reiser, “Scaling byzantine consensus: a broad

analysis,” in Proc. ACM SERIAL 2018.

[15] S. Kim, B. J. Kim, and B. Park, “Environment-adaptive multiple access
for distributed V2X network: A reinforcement learning framework,”
arXiv preprint arXiv:2101.10447, Jan. 2021.

[16] S. Kim and B. J. Kim, “Crash risk-based prioritization of basic safety

message in DSRC,” IEEE Access, vol. 8, Nov. 2020.

(a) Base f : δf = δN = 0

(b) δf < δN

(c) δf > δN

Fig. 5: Distribution of latency with a large f (i.e., f = 18)

comparative look at how the distribution is differentiated
according to the number of faulty nodes, f . Further, each
ﬁgure is composed of three different scenarios: namely, (a)
no change in the numbers of legit and faulty nodes: i.e.,
δf = δN = 0; (b) addition of more legit nodes than faulty
nodes: i.e., δf < δN ; and (c) addition of more faulty nodes
than legit nodes: i.e., δf > δN .

It is also signiﬁcant to note that each of the ﬁgures provides
a comparison between (i) the distribution of latency T and (ii)
plot of a best-ﬁtting PDF for a beta distribution, which are
shown as a histogram and a black curve, respectively.

Comparison between Figs. 4 and 5 clearly manifests that a
larger f causes a higher latency until a consensus is reached.
Looking into each of Figs. 4 and 5, a scenario of δf < δN
generally leads to a lower latency, while that of δf > δN causes

