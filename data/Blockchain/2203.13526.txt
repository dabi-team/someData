Energy-Efﬁcient and Physical Layer Secure
Computation Ofﬂoading in Blockchain-Empowered
Internet of Things

Yiliang Liu, Member, IEEE, Zhou Su, Senior Member, IEEE, and Yuntao Wang, Student Member, IEEE

1

2
2
0
2

r
a

M
5
2

]
P
S
.
s
s
e
e
[

1
v
6
2
5
3
1
.
3
0
2
2
:
v
i
X
r
a

Abstract—This paper investigates computation ofﬂoading in
blockchain-empowered Internet of Things (IoT), where the task
data uploading link from sensors to a base station (BS) is
protected by intelligent reﬂecting surface (IRS)-assisted physical
layer security (PLS). After receiving task data, the BS allo-
cates computational resources provided by mobile edge com-
puting (MEC) servers to help sensors perform tasks. Existing
blockchain-based computation ofﬂoading schemes usually focus
on network performance improvements, such as energy consump-
tion minimization or latency minimization, and neglect the Gas
fee for computation ofﬂoading, resulting in the dissatisfaction of
high Gas providers. Also, the secrecy rate during the data up-
loading process can not be measured by a steady value because of
the time-varying characteristics of IRS-based wireless channels,
thereby computational resources allocation with a secrecy rate
measured before data uploading is inappropriate. In this paper,
we design a Gas-oriented computation ofﬂoading scheme that
guarantees a low degree of dissatisfaction of sensors, while re-
ducing energy consumption. Also, we deduce the ergodic secrecy
rate of IRS-assisted PLS transmission that can represent the
global secrecy performance to allocate computational resources.
The simulations show that the proposed scheme has lower energy
consumption compared to existing schemes, and ensures that the
node paying higher Gas gets stronger computational resources.

Index Terms—Internet of Things, blockchain, physical layer

security, intelligent reﬂecting surface, Gas-oriented.

I. INTRODUCTION

With the rapid development of wireless communications and
sensor manufacturing technologies, the narrowband-enabled
Internet of Things (IoT) technologies, released by 3GPP,
have gained increasing attention in industrial, medical, busi-
ness ﬁelds, etc [1]. Following that,
the security issues of
heterogeneous devices and infrastructures have raised many
concerns. Building on their characteristics of decentralization,
lightweight, and multimoding, the blockchain and physical
layer security are regarded as enabling endogenous security
technologies to simultaneously address trust and conﬁdential-
ity issues of IoT networks [2]–[4].

The typical application of the blockchain-empowered IoT
is the computation ofﬂoading of the tasks of sensor nodes.
Smart contracts perform the automated and trust-free ofﬂoad-
ing process between sensor nodes and mobile edge comput-

Y.

(email:

Liu
(email:

Z.
Su
(email:
yuntao.wang@stu.xjtu.edu.cn) are with the School of Cyber
Science and Engineering, Xi’an Jiaotong University, Xi’an 710049, Shaanxi,
China. (Corresponding author: Z. Su.)

liuyiliang@xjtu.edu.cn),

zhousu@ieee.org),

Y. Wang

and

This work was supported in part by National Natural Science Foundation

of China (Nos. 62101429, U20A20175, and U1808207).

ing (MEC) servers on top of the blockchain to ensure that
transactions cannot be denied and malicious behaviors will
also be traced [5]–[7]. However, existing IoT computation
ofﬂoading schemes have the following two challenges. Firstly,
traditional schemes usually focus on the optimization of com-
putation or communication performance, such as computing
latency minimization, energy consumption minimization, or
network throughput maximization [3], [8]–[10]. The Gas1
factor only affects the block generation speed and is not
considered in computational resource allocation, leading to the
dissatisfaction of sensors as better computational resources are
not allocated to those sensors under the performance priority
strategy even if they pay high Gas. Secondly, the coverage of
the central trusted authority (TA) is limited in dynamic and
pervasive IoT networks. Cryptographic technologies for the
establishment and update of secure communications rely on
TA [11], [12]. Hence, the security of links from the sensors to
the MEC servers cannot be protected effectively. In addition,
due to the cost constraint of sensor devices, traditional PLS
schemes, such as multiple-antenna beamforming or artiﬁcial
noise technologies [13], are not suitable for IoT networks.

To address these problems mentioned above, we present an
intelligent reﬂecting surface (IRS)-assisted secure computation
ofﬂoading scheme to guarantee that the node paying higher
Gas has more opportunities to get a stronger computational
resource, while reducing the energy consumption of
the
computation ofﬂoading process. The main contributions are
summarized as follows.

• We formulate a PLS-assisted computation ofﬂoading
model in blockchain-empowered IoT, where phase shift
matrix adjustment of IRS devices, multiple antenna tech-
nologies at BS, and the allocation of computational
resources of MEC servers with dissatisfaction thresholds
of sensors are jointly considered to reduce the energy
consumption of the computation ofﬂoading process.
• We propose a phase shift matrix adjustment scheme
via manifold optimization to improve the secrecy rate.
Then, we deduce the expression of the ergodic secrecy
rate of this adjustment scheme, which provides a global
metric of secrecy performance for computational resource
allocation.

1Gas refers to the cost necessary to perform transactions on Ethereum,
where Gas price has the unit ETH or Gwei. The fee of a transaction can be
calculated by the amount of Gas × Gas price. Gas price has a transformation
to legal tenders. For instance, a transaction needs 100 Gwei with 6.5 × 10−7
dollar/Gwei.

 
 
 
 
 
 
• We transform the original computational resource al-
location problem into a 2-dimensional matching prob-
lem of bipartite graphs, which is solved by the Kuhn-
Munkres (KM) algorithm. Especially, the edges of the
bipartite graph are restricted with dissatisfaction degrees
of sensors, so the optimal matching achieves the goal
that the sensors with higher Gas payment are prioritized
with better computational resources. After computational
resource allocation, we propose an adaptive PLS coding
method to improve the effective secrecy rate during the
data uploading process.

The remainder of the paper is organized as follows. Section
II surveys the related works. Section III describes the system
model and problem formulation. The IRS-assisted PLS and
computation ofﬂoading schemes are proposed in Section IV
and V, respectively. We show simulation results in Section
VI, and conclude this paper in Section VII.

Notations: Bold uppercase letters, such as A, denote ma-
trices, and bold lowercase letters, such as a, denote column
vectors. AH, AT, and A† represent the conjugate transpose,
transpose, and conjugate transformation of A, respectively. Ia
is an identity matrix with its rank a. CN (µ, σ2) is a complex
normal (Gaussian) distribution with mean µ and variance σ2.
|x| is the Euclidean norm of x. diag(X) is the diagonal matrix
of X. E(·) is the expectation operation. arg(x) is the angle of
complex variable x. ◦ is the Hadamard product. R(x) means
the real part of complex variable x.

II. RELATED WORK

A. Blockchain-empowered IoT

The blockchain technology is now integrated into the IoT
networks to ensure trust and traceability of node behaviors.
Despite the beneﬁt that blockchain brings to traditional IoT
there are still many challenges in its actual
applications,
implementation, such as blockchain data storage, power con-
sumption, and task ofﬂoading. To cope with these issues, many
efforts to adopt blockchain in IoT applications have been
conducted in recent years.

1) Data Storage and Prototype: Yu et al. presented a
multiple-layer storage architecture for large-scale IoT net-
works to meet the storage requirement of massive transaction
data of blockchain [14]. Furthermore, Pyoung et al. proposed
ﬁnite lifetime blocks to reduce storage costs in IoT, where out-
dated transactions and blocks can be safely removed from the
blockchain [15]. Pan et al. designed the prototype of an edge
IoT resource management system based on blockchain and
smart contracts, where all the IoT activities and transactions
are recorded on the blockchain for security purposes [16].

2) Computation Ofﬂoading: In this case, Xu et al. safe-
guarded data integrity during real-time data processing in
blockchain-empowered IoT [17], while considering the im-
balances of computational resource distribution and workload.
Due to the computation and storage constraints of mobile IoT
devices in blockchain-enabled applications, Liu et al. ofﬂoaded
compute-intensive proof-of-work (PoW) mining missions to
nearby edge servers [18]. Chen et al. further investigated

2

joint computation ofﬂoading of mining tasks and data pro-
cessing tasks for industrial IoT (IIoT) devices and used Nash
equilibrium of the game theory to minimize their economic
costs [19]. Feng and Nguyen et al. designed a novel deep
reinforcement learning algorithm to improve the communi-
cation and computation performance during the entire com-
putation ofﬂoading process [20], [21]. Considering the cost
of resources and income of the service provisioning, Fan et
al. used the Stackelberg game where computation resource
providers are set as the leader, and IoT users are followers [22].
The objective of Fan’s scheme is to optimize the revenues
of computation resources. Seng et al. proposed a matching
algorithm between IoT users and edge servers by considering
task execution time and energy consumption, and the matching
algorithm is implemented by smart contracts without relying
on central nodes [23]. Our work focuses on the conﬁdentiality
of the task data uploading process via PLS schemes and the
Gas effect on the computational resource allocation, which are
not discussed in previous researches.

B. IRS-assisted PLS Technologies

IRS devices are usually applied to satellite communications
and radars but are not widely used in the mobile commu-
nication ﬁeld because of cost and fabrication constraints.
Thanks to the development of new material
technologies,
IRS has gradually been used in mobile communications and
networks to improve signal quality and security performance.
In the area of IRS-assisted PLS, many investigations are
conducted to improve the secrecy rate, such as the semideﬁnite
relaxation (SDR)-based and majorization minimization (MM)-
based phase shift matrix optimization methods [24], [25].
However, there are very few researches on expressions of
security performance metrics. Yang and Trigui et al. consid-
ered the IRS-assisted single-input single-output single-antenna
eavesdropper (SISOSE) case, and gave its expressions of
ergodic secrecy rate and secrecy outage probability [26], [27].
For multiple-input single-output multiple-antenna eavesdrop-
per (MISOME) scenarios, the Monte Carlo method is used to
obtain the ergodic secrecy rate with a lot of computational
overhead [28]. Our paper considers the uplink communi-
cations of IoT with a passive multiple-antenna eavesdrop-
per, which obeys IRS-assisted single-input multiple-output
multiple-antenna eavesdropper (SIMOME), and its ergodic
secrecy rate expression is not investigated in existing works.

C. Discussion

The Gas factor is not considered in existing investigations
of computation ofﬂoading in blockchain-empowered IoT net-
works. Besides, the absence of expressions of ergodic secrecy
rate and effective secrecy rate of IRS-assisted SIMOME results
in that computational resource allocation and data uploading
lack optimization objectives and parameters. In this work, we
ﬁrst design a manifold-based phase shift matrix adjustment
scheme for IRS-assisted PLS. Then, we provide its expressions
of ergodic secrecy rate and effective secrecy rate, followed
by a Gas-oriented computational resource allocation scheme
that can reduce the energy consumption, while ensuring the
fairness among sensors.

3

anism involves transactions, mining, block veriﬁcation,
Gas, etc., where Gas is the cost necessary to perform
transactions on Ethereum.

3) Application layer: It involves script codes, smart con-
tracts, and other programmable codes that can be used
to enable diverse Ethereum transactions.

A. Ethereum-Assisted Computation Ofﬂoading Architecture

As the computational resources of sensors are scarce, these
NI sensors ofﬂoad their computational
tasks, denoted by
{Z1, Z2, ..., ZNI },
to MEC servers via the wireless chan-
nels between sensors and the BS. After receiving tasks, the
BS allocates virtual machines provided by MEC servers to
execute these tasks. To record these tasks, sensors store
the indices of publishing tasks on Ethereum via a contract
i.e., task publish contract(·), and the BS stores
function,
the indices of results on Ethereum via the contract function
result upload contract(·). Once the blocks of these contracts
are deployed on Ethereum, no one can repudiate the debts
of transactions, and the results given by MEC servers are
recorded to defend against malicious MEC servers. Our work
adopts the Ethereum-assisted computation ofﬂoading architec-
ture presented in [31], which is described as follows.

1) Transmitting tasks to the BS: The sensor Ui sends the
task data to the BS via IRS-assisted PLS schemes to
resist eavesdropping attacks. To avoid inter-user inter-
ference, sensors use the time-division multiple access
(TDMA) technology during transmission processes.
2) Creating contracts of publishing tasks: At the same time
of task transmission, by following the contract format
of Ethereum, the sensor Ui launches a contract, i.e.,
#1 = task publish contract(Zi), which includes the
hash message corresponding to the ofﬂoaded task Zi
and the signature of Ui. Also,
the contract has the
address information of the transaction parties2, Gas for
this transaction deﬁned by Vi, Gas price, etc. Then, the
contract #1 is broadcast in Ethereum.

3) Computing tasks in MEC server: After receiving tasks,
resources of MEC
the BS allocates computational
servers to perform these tasks. To avoid the complexity
caused by tasks and computing power partition, it is
assumed that a task uses one MEC server to compute
results and an MEC server can be allocated to only one
task. At last, the results are uploaded to the core server
for subsequent services.

4) Generating blocks of contracts of

task publishing:
All nodes in Ethereum synchronize the transaction of
task publish contract(Zi), and check its format and
signature. If passing, Ethereum nodes compete with each
other to win the right of charging the account of the
transaction, then the block is generated in Ethereum
by the winners. All members registered in Ethereum
desiring to get payments can take part in the competition
of account-charging rights.

2The sending address is related to Ui, and the received address is the
constructor of the contract as the contract should be broadcast in Ethereum.

Fig. 1: Secure computation ofﬂoading in IoT networks, where
the sensor Ui sends computation tasks to the BS via IRS
and instantaneously broadcasts the task publishing contracts
(denoted by #1). After receiving tasks, the BS allocates com-
putational resources of MEC server Mk to complete the tasks,
then Mk broadcasts the result uploading contracts (denoted
by #2). Both task publishing and result uploading should be
recorded in blocks via the #1 block generation and #2 block
generation, respectively. The uplink links from sensors to the
BS is protected by an IRS-assisted PLS scheme.

III. SYSTEM MODEL AND PROBLEM FORMULATION

This article considers a blockchain-empowered IoT net-
work, as shown in Fig. 1, which includes NI sensor nodes,
denoted by {U1, U2, ..., UNI }. Each sensor is equipped with
one antenna. A set of NK MEC servers, denoted by
{M1, M2, ..., MNK }, are associated with an Nb-antenna BS
via wired links, and NK ≥ NI . Due to the transmission
power constraints and the large-scale fading effect of sensor
communications, an IRS device is deployed to enhance the
security of the uplink channel from sensors to the BS.

All sensors and MEC servers are registered in Ethereum
and follow the rules of Ethereum. Ethereum is a decentralized,
open-source, and public blockchain platform supporting smart
contracts, including three functional layers [29] [30].

includes

2) Core layer:

1) Underlaying layer: It mainly involves the transmission
and storage mechanisms of transaction and block data, as
well as the blockchain-based cryptographic algorithms,
such as hash and certiﬁcates.
It

incentive, consensus, and
blockchain topology mechanisms. The incentive mech-
anism is based on Ether, which introduces economic
incentives to make the nodes give their efforts to verify
data in Ethereum. The consensus mechanism achieves
information synchronization among untrusted parties in
decentralized systems, such as Proof of Work (PoW),
Proof of Stake (PoS). The blockchain topology mech-

BlockchainMEC serverEveTask publishing#1 block generationComputationTime#1Broadcast contract #1Broadcast contract #2BSSensor#1#2• Secure transmission algorithm (Section IV)• Computation resource allocation algorithm (Section V)Core server#2 block generation#2TimeIRSResult uploadingTask publishingComputation offloading period4

5) Creating contracts of result uploading: Without
the task of Ui,

loss
i.e,
of generality, we assume that
is ofﬂoaded to the MEC server Mk. After
Zi,
completing the task, Mk launches a contract,
i.e.,
result upload contract(Zi), which includes the hash
message of results, the signature of Mk, allocated com-
putational resources, address information, Gas for this
transaction, Gas price, etc.

6) Generating blocks of contracts of result uploading:
Similar to the block generation of contracts of task
publishing, all members registered in Ethereum can take
part in this competition of account-charging right. The
winner can obtain Gas as a payment.

task data, the BS will select an MEC server, such as Mk,
to perform the task of Ui. In this model, when Di-bits data
should be calculated in Mk, the computing period is ckDi/fk,
where ck (CCN/bit) is the CPU cycle number (CCN) per
bit processing at Mk, representing computing efﬁciency of
CPU chips, and fk (CCN/s) is the CCN per second of Mk.
The energy consumption per second of Mk is ηkf 3
k (Joule/s)
[10], where ηk is the computation energy efﬁciency coefﬁcient
of CPU chips in Mk depending on the chip architecture.
The transmission delay of uploading can be expressed as
Di/(RiB), where Ri (bit/s/Hz) is the secrecy rate of uplink
channels, and B is the bandwidth. The energy consumption
of Zi with the assistance of Mk can be formulated as

In this system, the IoT service acquirer should pay sensors
and MEC servers as the original data is generated by sensors
and the data process is done by MEC servers. In this case, an
IoT-enabled business model is established.

B. Communication Model

The article considers an IRS-assisted uplink communication
model with a passive Ne-antenna eavesdropper (Eve), an Nb-
antenna BS, NI single-antenna sensors, and an IRS device.
The IRS device is equipped with N programmable phase
shift elements. All channels are assumed to obey Rayleigh
fading, i.e., the channel from Ui to Eve is deﬁned as gi ∼
CN Ne,1(0, INe ), the wiretap channel aimed at Ui from IRS
to Eve is deﬁned as Zi ∼ CN Ne,N (0, INe ⊗IN ), the direct link
from Ui to BS is deﬁned as li ∼ CN Nb,1(0, INb ), the channel
from Ui to IRS is deﬁned as hi ∼ CN N,1(0, IN ), and the
channel from IRS to BS for the transmission of Ui is deﬁned
as Ai ∼ CN Nb,N (0, INb ⊗ IN ). The instantaneous CSIs of
legitimate devices, including li, hi, and Ai, can be perfectly
obtained via channel estimation, whereas the instantaneous
Eve’s CSIs gi and Zi are unknown.

For the security purpose, IRS controls programmable phase
shift elements via a phase shift matrix, where the phase shift
matrix for the transmission period of Ui is deﬁned as an N ×N
matrix Φi, i.e.,

Qi,k = ηkckDif 2

k +

DiPi
RiB

.

(4)

Note that the computing modules of Ethereum are worldwide
distribution, and are independent of the computation ofﬂoad-
ing system, so the energy consumption of Ethereum is not
considered here.

D. Problem Formulation

In traditional Ethereum systems, Gas payment affects the
time and energy consumption of block generation, but has no
effect on computational resource allocation. In real scenarios,
sensors paying higher Gas have more desire to get better
computational resources, rather than recording their behaviors
on Ethereum. Hence, when Ui is allocated Mk, we deﬁne the
degree of dissatisfaction of Ui as follows,
(cid:18) fk
ck

Oi = Wi,k

r(Vi) − r

(cid:19)(cid:12)
(cid:12)
(cid:12)
(cid:12)

(5)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

,

where Wi,k is the element of the i-th row and k-th column of
W. Wi,k is a binary variable taking 1 when Mk is assigned
to Ui, and 0 otherwise. r(Vi) is the index of the descending
order of Gas set provided by NI sensors, and r(fk/ck) is the
index of the descending order of computing power of NK
MEC servers.

Φi = diag[exp(jθi,1), ..., exp(jθi,n), ..., exp(jθi,N )],

(1)

√

−1, and θi,n ∈ [0, 2π) is the phase introduced
where j =
by the n-th phase shift element of IRS at the i-th period. With
the phase shift matrix Φi, the received signals at the BS and
Eve can be expressed as

yi = αi(li + AiΦihi)xi + ni,
ye,i = αe,i(gi + ZiΦihi)xi + ne,i,

(2)

(3)

where αi is the path loss between the BS and Ui, αe,i is
the path loss between the BS and Eve, xi is the conﬁdential
information-bearing signal from Ui with E(|xi|2) = Pi, and
Pi is the transmission power of Ui. ni and ne,i are the additive
white Gaussian noise (AWGN) obeying CN Nb,1(0, σ2
i INb )
and CN Ne,1(0, σ2
e,iINe ), respectively.

C. Energy Consumption Model

The sensor Ui has the computation task Zi with Di-bits
data that should be uploaded to the BS. After receiving the

With the consideration of the energy consumption and
degrees of dissatisfaction, the problem of the computation
ofﬂoading focuses on the energy consumption minimization
with constraints as follows.
NI(cid:88)

NK(cid:88)

P1: min

Wi,kQi,k,

Φi,∀i,W

i=1

k=1
s.t. Oi ≤ (cid:15), ∀i,

Wi,k = {0 or 1}, ∀i, k,
NI(cid:88)

NK(cid:88)

Wi,k ≤ 1,

Wi,k ≤ 1,

i=1
Eq. (1),

k=1

(6)

(7)

(8)

(9)

(10)

the degrees of dissatisfaction
where Eq. (7) requires that
than a threshold (cid:15) for all sensors, and
should be small
(cid:15) ∈ [0, 1, ..., NI − 1] can be adjusted manually. Eq. (8) is
the binary constraint representing the allocation factor. Eq. (9)
reveals that each sensor can be allocated with only one MEC

5

server, and each MEC server is only assigned to one sensor.
Eq. (10) is the passive phase shift matrix constraint.

It

is obvious that Φi and W are coupled variables in
the optimization of the i-th period, and P1 is non-convex
mixed-integer problem. To tackle the problem, we transform
P1 into two sub-problems, i.e., phase shift optimization and
computational resource allocation, then solve them step-by-
step.

IV. PHASE SHIFT OPTIMIZATION FOR PLS AND ITS
ERGODIC SECRECY RATE
From Eq. (4), we ﬁnd that the energy consumption Qi,k
decreases with the increasing secrecy rate Ri for all sensors.
To reduce the energy consumption in the data uploading
process, we optimize Φi to maximize Ri, ∀i.

A. Phase Shift Optimization

According to Eqs. (2) and (3), the secrecy rate Ri between

Ui and BS is given as follows [13],

of original problem P2, i.e., q∗
i can be found on the complex
circle manifold O. Hence, P2 is equivalently transformed as

P3: min
qi∈O

f (qi).

(20)

P3 is regarded as a complex circle manifold optimization
problem. To ﬁnd q∗
i , we use the Riemannian gradient descent
algorithm presented in [33], where the Riemannian gradient of
a manifold point is decided jointly by the Euclidean gradient
and the tangent space on manifold O at this point. Without
loss of generality, the s-th point (the s-th iteration in gradient
descent) of manifold O is qi(s) ∈ O, and the tangent space
for O at the s-th point can be expressed as

Tqi(s)O = (cid:8)v ∈ CN : R[v ◦ qi(s)†] = 0(cid:9),
where v is the tangent vector at qi(s), ◦ is the Hadamard
product, R(·) means the real part of a complex variable, and
(·)† is the conjugate operation. The objective function f (qi)
with respect to qi is deﬁned in Eq. (18), and the Euclidean
gradient at qi(s) is

(21)

Ri = (Cm,i − Cw,i)+,

where

(cid:18)

Cm,i = log2

1 +

(cid:18)

Cw,i = log2

1 +

|li + AiΦihi|2

(cid:19)
,

|gi + ZiΦihi|2

(cid:19)

.

α2
i Pi
σ2
i
α2
e,iPi
σ2
e,i

(11)

(12)

(13)

The objective is to ﬁnd the optimal Φi to achieve {R∗
i , Φ∗} =
maxΦ Ri. However, it is hard to maximize Ri as gi and Zi
are unknown, so the objective is transformed to maximize the
channel gain between Ui and the BS as follows,

P2: max

Φ

|li + AiΦihi|2,

s.t. Eq. (1).

(14)

(15)

P2 is a classic Boolean quadratic program problem. The
traditional methods to solve P2 are the SDR technique [32]
and manifold optimization [33]. The objective parameter Φi
is the middle of two CSI parameters and is hard to handle.
Hence, refer to [33], AiΦihi can be re-formulated as

AiΦihi = Aidiag(hi)qi = Θiqi,

(16)

where qi = vec(Φi) = [exp(jθi,1), ..., exp(jθi,N )]T. With
Eq. (16), the objective of P2 can be transformed as follows,

|li + AiΦihi|2
i ΘH
= qH

i Θiqi + |li|2 + lH

i Θiqi + qH

i ΘH

i li.

(17)

Then, the minus of the objective in P2 is expressed as a
function with respect to qi, i.e.,
i ΘH
f (qi) = −(qH

i Θiqi + |li|2 + lH

i Θiqi + qH

i li). (18)

i ΘH

The constraint (15) is deﬁned by a complex circle mani-
fold [33], which is given by

O = (cid:8)qi ∈ CN (cid:12)

(cid:12)|[qi]n|2 = 1, n = 1, ..., N (cid:9),

(19)

where [qi]n is the n-th element of qi. It is obvious that
Eq. (19) is equivalent to constraint (15), and the optimal point

(cid:79)qi(s)f (qi) = −2ΘH

i Θiqi(s) − 2ΘH

i li.

(22)

Among all tangent vectors on Tqi(s)O, the one that yields
the fastest increase of the objective function is deﬁned as the
Riemannian gradient [33], i.e., gradqi(s)f (qi), which is the
projection from the Euclidean gradient to the tangent space O
as follows,

gradqi(s)f (qi) = (cid:79)qi(s)f (qi)

− R((cid:79)qi(s)f (qi) ◦ qi(s)†) ◦ qi(s).

(23)

In the Riemannian gradient descent process, the next point of
qi(s) is with the direction of (cid:36)sps, where (cid:36)s is the step size
and ps is the descent direction vector. However, the movement
can not guarantee that the next point qi(s + 1) is on manifold
O. Hence, we introduce the retraction function to map a vector
on Tqi(s)O onto manifold O, which is given as

qi(s + 1) = Rqi(s)((cid:36)sps),

(24)

where a typical retraction is the normalization function, i.e.,
Rx(y) = yi
|yi| , ∀i. Based on the Riemannian gradient and
retraction function, we use the conjugate-gradient descent
method to ﬁnd the optimal phase shift matrix, which is shown
in Algorithm 1. In conjugate-gradient descent algorithm, the
update rule for the search direction on manifolds is given by

ϕs

ps+1 = −gradqi(s+1)f (qi) + ϕsTqi(s)→qi(s+1)(ps),
parameter,

where
and
Tqi(s)→qi(s+1)(ps) is the mapping function of the tangent
vector ps from the tangent space Tqi(s)O to the tangent
space Tqi(s+1)O. The mapping function is given as

Polak-Ribiere

(25)

the

is

Tqi(s)→qi(s+1)(ps)
= Tqi(s)O → Tqi(s+1)O
= ps − R(ps ◦ [qi(s + 1)]†) ◦ qi(s + 1).
i.e., (cid:79)2
qi

Since the second derivative of f (qi),
f (qi) =
−2ΘH
i Θi is positive semideﬁnite, f (qi) is con-
cave, such that Algorithm 1 based on conjugate-gradient

i Θi and ΘH

(26)

Algorithm 1: Phase Shift Matrix Optimization based
on Conjugate-gradient Descent.

6

Data: {li, Ai, hi, ∀i}, N, NI
Result: Φ∗

i , ∀i

1 for i = 1 : 1 : NI do
2

Initialize (cid:36)0 and ϕ0;
Initialize point qi(0), get gradqi(0)f (qi);
while |gradqi(s)f(qi)| ≤ ψ do

Get Riemannian gradient gradqi(s)f (qi) by Eq. (23);
Get conjugate search direction ps by Eq. (25);
Get next point qi(s + 1) by Eq. (24) ;
Determine step size (cid:36)s and ϕs proposed in [35] ;

3

4

5

6

7

8

9

10

i = qi(s);
i );

i = diag(q∗

Get q∗
Φ∗
11 Procedure End

descent cannot be guaranteed to converge to the optimal
point [34]. Hence, the output Φ∗ in Algorithm 1 is the local
optimal result.

The computational complexity of Algorithm 1 is analyzed
as follows. To meet the convergence condition, the conjugate-
gradient descent algorithm requires N 2 iterations [36]. Each
iteration needs the calculations of Eqs. (23), (24), (25), and
the parameter update, i.e., step 8, which requires 2N 2 + 4N ,
N , N , and 4N 2 inner-iterations, respectively. Step 10 needs
N iterations to generate Φ∗. For NI sensors, the number of
total iterations of Algorithm 1 is NI (4N 4 + 6N 3 + N ).

B. Ergodic Secrecy Rate

The secrecy rate can be viewed as the inherent property for
a given instantaneous CSI realization. The ergodic secrecy rate
is the average value of secrecy rates among all realizations of
CSIs, which is a usual metric for PLS schemes [3], [13]. As
the CSIs of wiretap channels are unknown, to calculate the
ergodic secrecy rate, the gain of wiretap channels in Eq. (3),
i.e., |gi + ZiΦihi|2, can be regarded as a random variable X.
The Gamma distribution can deduce the probability density
function (PDF) of X, as shown in Lemma 1. With the
PDF of X, the expression of ergodic secrecy rate can be
derived as security performance metrics for computational
resource allocation. The Gamma distribution can represent the
sum of multiple independent exponentially distributed random
variables, so it is suitable for representing the gain of IRS-
assisted channels, such as [37].

Lemma 1. For an N × N ﬁxed Φ generated by Eq. (1),
three independent random variables g ∼ CN 1,Ne (0, INe ), h ∼
CN N,1(0, IN ), and Z ∼ CN Ne,N (0, INe ⊗ IN ), if we have a
random variable x as

x = |g + ZΦh|2,

(27)

the PDF and cumulative distribution function (CDF) of X ∼

Fig. 2: KS test for Gamma distributions and real distributions
of X ∼ X(Ne, N, Φ) via 105 Monte Carlo simulations, where
Φ is an arbitrary diagonal matrix as deﬁned in Lemma 1.

X(Ne, N, Φ) can be expressed as

fX (x) =

FX (x) = 1 −

1

Γ(µ)νµ xµ−1 exp(−x/ν),
Γ(µ,

x
ν

1
Γ(µ)
Ne(1 + N )2
(1 + N )2 + (1 + Ne)N

),

,

µ =

ν = 1 + N +

(1 + Ne)N
1 + N

,

(28)

(29)

(30)

(31)

where Γ(·) is the Gamma function, and γ((cid:15), η) is the incom-
plete gamma function deﬁned as follows,

γ((cid:15), η) =

(cid:90) η

0

Proof: See Appendix A.

exp(−z)z(cid:15)−1dz.

(32)

In order to examine the ﬁtting performance of Gamma
distributions, we use the KS method to ﬁnd the maximum
divergences between the actual distribution and the Gamma
distribution [38], where statistic Dp is deﬁned as the maximum
divergences of PDF tests as follows,

Dp = max |fX (x) − ˆfX (x)|,
(33)
where ˆfX (x) is the actual PDF of X ∼ X(Ne, N, Φ) obtained
by Monte Carlo simulations. As shown in Fig. 2, Dp is with an
order of magnitude around 10−4, so the Gamma distributions
are in a good agreement with the actual distributions.

With Lemma 1, we deduce the expression of ergodic secrecy
i . The ergodic secrecy

rate with optimal phase shift matrix Φ∗
rate is deﬁned as follows [13],
Ri = [E(Cm,i|Φ∗

i ) − E(Cw,i|Φ∗

i )]+

≤ E[(Cm,i − Cw,i)+|Φ∗
i ],

(34)

(35)

where {=} in Eq. (35) holds if and only if the instantaneous
secrecy rate {Cm,i − Cw,i} is nonnegative in all CSI realiza-
tions. Since Eve’s CSIs gi and Zi are unknown, it is hard to

010020030040050060000.0020.0040.0060.0080.010.012determine whether an instantaneous secrecy rate is nonnegative
or not, so we use the lower bound of real ergodic secrecy
rate as the performance metric for the optimization process,
as shown in Eq. (34).

Theorem 1 (Expression of ergodic secrecy rate). The expres-
sion of ergodic secrecy rate of Ui with Φ∗
i can be expressed
as

¯Ri = [ ¯Cm,i − E(Cw,i|Φ∗

i )]+,

(36)

where

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:19)
,

i ) =

G3,1
2,3

0, 1
0, 0, µ

E(Cw,i|Φ∗

1
ln(2)Γ(µ)

(cid:18) σ2
e,i
νPiα2
e,i
i ) = ¯Cm,i. µ and ν are deﬁned in Eqs. (30)
and E(Cm,i|Φ∗
and (31), respectively. Note that ¯Cm,i is the ergodic channel
capacity between Ui and BS, which can be measured by the
statistical method as the CSIs of Ui, i.e., li, Ai, and hi in
each transmission burst can be obtained perfectly.

(37)

Proof. See Appendix B.

(cid:4)

V. GAS-ORIENTED COMPUTATION OFFLOADING SCHEME

The proposed computation ofﬂoading scheme includes two
processes,
i.e., computational resource allocation and data
uploading. The secrecy rates Ri, ∀i in Eq. (4) are time-variant
as the coherence time is much shorter than the computation of-
ﬂoading duration. In this case, we use ergodic secrecy rate ¯Ri
in Theorem 1 as the metric to allocate computational resource,
i.e., use ¯Ri, ∀i to calculate Qi,k in Eq. (4) instead of Ri, ∀i.
In the data uploading process, the CSIs of legitimate users
are time-variant and can be obtained via channel estimation
in each transmission burst, so adaptive PLS coding should be
designed to improve the efﬁciency of secure transmissions.

A. Computational Resource Allocation

I

I

1) Bipartite graph generation: In order to keep the degrees
of dissatisfaction of each sensor below a threshold, i.e., con-
straint (7), NI sensors are sort as {U1(cid:48), U2(cid:48), ..., UN (cid:48)
} where
their Gas obey V1(cid:48) ≥ V2(cid:48) ≥ ... ≥ VN (cid:48)
. Similarly, the MEC
servers are sort as {M1(cid:48)(cid:48), M2(cid:48)(cid:48) , ..., MN (cid:48)(cid:48)
} where their compu-
tational power obey f1(cid:48)(cid:48) /c1(cid:48)(cid:48) ≥ f2(cid:48)(cid:48) /c2(cid:48)(cid:48) ≥ ... ≥ fN (cid:48)(cid:48)
/cN (cid:48)(cid:48)
by dropping NK − NI weaker MEC servers. We deﬁne
S = {1(cid:48), ..., N (cid:48)
I } as the indices of
the re-ordered sets of sensors and MEC servers, respectively.
Since secrecy rate is time-varying during the computation
ofﬂoading process, Qi,k deﬁned in Eq. (4) can not be mea-
sured. Instead of the secrecy rate, Theorem 1 provides ergodic
secrecy rate that is used to calculate Qi,k for each pair of a
sensor and an MEC server as follows,

I } and M = {1(cid:48)(cid:48), ..., N (cid:48)(cid:48)

I

I

I

Qi,k = ηkckDif 2

k +

DiPi
¯RiB

, i ∈ S, k ∈ M,

(38)

and then a bipartite graph is generated to record all sensor-
MEC combinations, as shown in Fig. 3. To meet constraint
(7), the case of r(Vi) − r(fk/ck) > (cid:15) for any sensor-MEC
pair should not be recorded in the bipartite graph. Hence, if
|i − k| > (cid:15), i ∈ S, k ∈ M, Qi,k is set to be ∞.

7

Fig. 3: Bipartite graph generation with the dissatisfaction
degree constraint, where (cid:15) = 1.

2) Matching process: We set an NI × NI matching matrix
W, whose (i, k)-th element represents an edge, e.g., Wi,k = 1
means that the vertexes i and k are linked. For another edge
Wii,kk, we have i (cid:54)= ii and k (cid:54)= kk to meet the constraint
that any two edges do not share a vertex. With W,
the
computational resource allocation problem can be equivalently
transformed to a 2-dimensional matching problem as
NI(cid:88)

NI(cid:88)

(39)

P4: min
W

i∈S

k∈M

Wi,kQi,k,

s.t. Wi,k = {0 or 1}, ∀i, k,

NI(cid:88)

i∈S

Wi,k ≤ 1,

NI(cid:88)

k∈M

Wi,k ≤ 1.

(40)

(41)

It is obvious that Wi,k is a binary variable taking 1 when Mk
is assigned to Ui, and 0 otherwise. Eq. (41) reveals that each
sensor can be allocated with only one MEC server, and each
MEC server is only assigned to one sensor. The optimization
is to ﬁnd the optimal W to minimize (cid:80)NI
k∈M Wi,kQi,k.
i∈S
P4 is convex and the optimal W can be solved by the Kuhn-
Munkres (KM) algorithm [39].

(cid:80)NI

B. Adaptive PLS Coding

The PLS coding was introduced ﬁrst by Wyner [40], which
is a code scheme to ensure that a coding rate (deﬁned as
the PLS coding rate) below the secrecy rate can achieve
both reliability and information-theoretic security. In the data
uploading process, Ui uses the secrecy outage probability to
adjust the PLS coding rate because Eve’s CSI is unavailable
for Ui, where the secrecy outage probability is regarded as
the probability that the secrecy rate Ri is smaller than the
PLS coding rate of Ui, deﬁned by ˆRi. From [3, Eq. (38)], the
secrecy outage probability is given as

P ( ˆRi) = P (Ri ≤ ˆRi

(cid:12)
(cid:12)decoding correctly and Φ∗
i )

= P (Cw,i ≥ Cm,i − ˆRi

(cid:1),

(42)

where Cw,i and Cm,i are deﬁned in Eqs. (12) and (13) with
Φ∗
i , respectively. Since the instantaneous CSI of li, Ai, and
hi are assumed to be estimated perfectly in each transmission
burst, Ui can adaptively adapt Cm,i such that the codebook can
be decoded correctly. The remaining work is to ﬁnd an optimal
ˆRi with the consideration of secrecy outage probability.

3.454.235.672.877.906.534.123.264.532.344.429.545.321.122.234.119.086.053.452.215.763.335.327.784.44U1'U2'U3'U4'U5'M1''M2''M3''M4''M5''Q2',5''3.454.23∞∞6.534.123.26∞∞∞9.545.321.12∞∞∞6.053.452.21∞∞∞7.784.44U1'U2'U3'U4'U5'M1''M2''M3''M4''M5''If |i-k| > 1Qi,k = ∞∞Bipartite graph generationDissatisfaction degree constraint8

(a) Ergodic secrecy rate in terms of the number of IRS elements.

(b) Effective secrecy rate in terms of PLS coding rates with Nb = 10.

Fig. 4: Theoretical results and Monte Carlo simulations of the ergodic secrecy rate and effective secrecy rate of Ui, where
SNR = 63 dB.

We use the effective secrecy rate as a secrecy metric to
optimize ˆRi, as investigated in [3]. The effective secrecy rate is
an average rate secretly received at BS over many transmission
bursts with the pre-deﬁned ˆRi, which is expressed as

˜Ri = {1 − P ( ˆRi)} ˆRi.
(43)
In order to maximize ˜Ri by adjusting ˆRi, the next work is to
deduce the expression of effective secrecy rate, as shown in
Theorem 2.

Theorem 2 (Effective secrecy rate). The expression of effec-
tive secrecy rate ˜Ri with the pre-deﬁned ˆRi can be expressed
as

(cid:19)(cid:21)

(cid:20)

(cid:18)

Γ

1 −

Ne,

˜Ri( ˆRi) =

φ
1 + |Φ∗

1
Γ(Ne)
e,i(2Cm,i− ˆRi − 1)/(α2
where φ = σ2
Proof. As P ( ˆRi) = 1/Γ(Ne)Γ(Ne, φ/(1 + |Φ∗
i hi|2) [41, Eq.
(23)], it is easy to get the expression of effective secrecy rate
by substituting P ( ˆRi) into Eq. (43).
(cid:4)

e,iPi).

i hi|2

ˆRi,

(44)

According to Theorem 2, the adaptive PLS coding scheme

is designed to maximize the effective secrecy rate, i.e.,

( ˆR∗

i ) = max

ˆRi,P ( ˆRi)≤ε

˜Ri( ˆRi),

(45)

where the optimal PLS coding rate ˆRi, i.e., ˆR∗
i can be found
via the Golden-section search over the function ˜Ri( ˆRi) as the
function ˜Ri( ˆRi) with respect to ˆRi is unimodal, as examined
in Fig. 4b. Note that the secrecy outage probability P ( ˆRi)
should be smaller than a threshold ε to avoid a large secrecy
outage probability in the transmission.

C. Computational Complexity Analysis

In the phase shift matrix optimization process,

the
is NI (4N 4 +
computational complexity to get Φ∗
6N 3 + N ). The computational resource allocation requires

i , ∀i

I

I

}, each of which needs N 2

} and
two bubble sort algorithms to get {U1(cid:48), U2(cid:48), ..., UN (cid:48)
{M1(cid:48)(cid:48) , M2(cid:48)(cid:48) , ..., MN (cid:48)(cid:48)
I iterations.
The KM algorithm needs N 4
I iterations to ﬁnd the optimal
matching W∗ [39]. The computational complexity of the PLS
coding scheme based on the Golden-section search algorithm
is O(log(1/ε)), where ε is the accuracy requirement. In total,
the computational complexity of the ofﬂoading process is
O[NI (4N 4 + 6N 3 + N ) + N 4

I + log(1/ε)].

I + 2N 2

VI. SIMULATIONS

i and σ2

The global simulation parameters are described as follows.
τ
The path loss parameter αi is calculated by αi =
,
2πfcdi
where τ is the speed of light, fc is work spectrum that is set
to 2.4 GHz, di, ∀i is the distance between the BS and Ui is set
to be uniform distribution over [30 m, 50 m]. fk, ∀k, Di, ∀i,
and Vi, ∀i are uniform distributions over [40 GHz, 80 GHz],
[610 KB, 1.8 MB], and [1.5 × 106, 2 × 106]. The AWGN ﬂoor
parameters σ2
e,i are -53 dBm [42]. The transmission
power Pi, ∀i is 10 dBm. The computation energy efﬁciency
coefﬁcient ηk, ∀k is set to be 10−27. Note that all simulation
results are average values from 105 independent runs. The
available radio resource block (RB) has 150 KHz bandwidth.
If two RBs are used for transmission, we have B = 300 KHz.
Here, we examine Theorems 1 and 2 in Figs. 4a and 4b,
respectively. These ﬁgures show the good agreements between
theoretical results (Theo.) and Monte Carlo (MC.) simulation
results from 105 independent runs. From Fig. 4a, we can ﬁnd
that the ergodic secrecy rate increases with the increasing
number of IRS elements. Also, a comparison is taken between
IRS-assisted PLS and the secure beamforming scheme that
uses Nt = N + 1 transmission antennas in the case of Nb = 1
and Ne = 1 [13]. From the comparison simulations, we ﬁnd
that the IRS-assisted PLS outperforms the secure beamforming
scheme because the channel gain by IRS is larger than that
of the beamforming scheme [37]. Fig. 4a also shows that the
number of Eve’s antennas has a strong negative effect on the

20304050601234567823456780123459

Fig. 5: Comparison simulations between the SDR-based
scheme and the manifold optimization scheme.

Fig. 7: Sum energy consumption of 40 sensors in terms of
the number of IRS elements, where the number of RBs is 2,
ck = 10, ∀k, ε = 0.1, and (cid:15) = 8.

Fig. 6: Sum energy consumption of 40 sensors in terms of the
number of RBs, where N = 40, ck = 10, ∀k, ε = 0.1, and
(cid:15) = 8.

Fig. 8: Sum energy consumption of 40 sensors in terms of
CCN per bit processing (c = ck, ∀k), where the number of
RBs is 2, N = 40, ε = 0.1, and (cid:15) = 8.

ergodic secrecy rate. Fig. 4b shows the effective secrecy rate in
terms of PLS coding rate. It is obvious that there is one peak in
each curve, which is consistent with the results shown in [3],
meaning that the unimodal function-aimed search algorithms,
such as golden-section search, can be used to ﬁnd the optimal
PLS coding rate to maximize the effective secrecy rate.

It is hard to obtain the global optimal result of Φi

in
P2 via globally searching algorithms as Φi
is in an N -
continuous dimensional space. Hence, the common way to
solve P2 is based on SDR or manifold optimization, such
as [32] and [33]. The comparison simulations between the
SDR-based scheme and the manifold optimization scheme are
shown in Fig. 5. From this ﬁgure, we can ﬁnd the manifold
optimization has better performance than that in the SDR-
based scheme, because the rank one constraint results in that
the SDR-based scheme just provides a near-optimal result for
Φi while the manifold optimization scheme can give the local
optimal result [32].

The simulations of computational resource allocation are
executed in terms of the number of RBs, the number of IRS
elements N , CNN per bit processing ck, and dissatisfaction
degree (cid:15). The comparison simulations have been done among
four different allocation schemes,
i.e., bidding, grouping,
energy consumption minimization (ECM), and the proposed
scheme, which are described detailedly as follows.

1) Bidding scheme: It

is a traditional strategy that

the
sensor who pays the highest Gas will get
the best
computational resource among the MEC servers. This
scheme requires two bubble sort algorithms and needs
O[NI (4N 4 +6N 3 +N )+2N 2
I +ln(1/ε)] computational
complexity.

2) Group scheme. It is proposed in [31] where sensors are
divided into different groups based on paid Gas, and the
group with higher Gas is prioritized with better compu-
tational resources. The computational complexity of this

0102030405060700123456246810123436384042444620304050603637383940414289101112303540455010

it implies that the best to reduce energy consumption is the
improvement of the efﬁciency of CPU designs.

Fig. 9 is used to check the dissatisfaction degree of sensors
on the sum energy consumption. It is obvious that if the
sensor has the highest dissatisfaction, the proposed scheme has
the same performance as that in the ECM scheme, meaning
that the optimization objective of the proposed scheme is to
minimize the sum energy consumption and the satisfaction of
sensors is no longer considered. Also, if (cid:15) = 0, the sensor
gets the computational resource whose ranking should be
equivalent to the ranking of the paid Gas among all sensors.
Hence, the performance of (cid:15) = 0 is the same as the bidding
scheme. Dissatisfaction degrees are not considered in bidding,
grouping, and ECM schemes, so the simulation lines keep
constant in this ﬁgure.

VII. CONCLUSIONS

In this article, we establish a blockchain-empowered com-
putation ofﬂoading system in an IoT network, where the data is
protected by IRS-assisted PLS methods. Especially, we deduce
the expression of the ergodic secrecy rate of the scheme for
the computational resource allocation. Also, we design a Gas-
oriented energy consumption minimization algorithm where
higher Gas providers are prioritized with better computational
resources, while improving the effective secrecy rate in the
data uploading process. Simulations show that the proposed
scheme reduces the energy consumption while guaranteeing
that the node paying higher Gas has more opportunities to
get a stronger computational resource. In future works, we
will integrate the promising space division multiple access
technologies into this system to further reduce the latency of
the computation ofﬂoading process.

APPENDIX

A. Proof of Lemma 1

Lemma 2 is used to prove Lemma 1.

Lemma 2. [Proved in [43]] For n independent Gaussian
random variables Xi ∼ N (µi, σ2), Y = (cid:80)n
i /σ2 obeys
the noncentral chi-square distribution with degree of freedom
n, and we have the mean and variance of Y as follows,

i=1 X 2

E(Y ) = n + λ, V(Y ) = 2n + 4λ,

(47)

where λ = (cid:80)n

i=1 µ2

i /σ2.

At ﬁrst, we calculate the mean of X ∼ X(Ne, N, Φ) as

follows,

E(x) = E(|g|2) + E(|ZΦh|2).

(48)

It is obvious that E(|g|2) = Ne.

Since Φ is independent with g, Z, and h, we introduce two
auxiliary random variables u1 = Φh and u2 = ZΦh/|Φh|
with u1 ∼ CN N,1(0, IN ) and u2 ∼ CN Ne,1(0, INe), respec-
tively. It is obvious that u1 and u2 are independent, thus,
E(|ZΦh|2) can be transformed to
2(cid:19)

E(|ZΦh|2) = E

E(|Φh|2) a= NeN,

(49)

(cid:18)(cid:12)
(cid:12)
(cid:12)
(cid:12)

ZΦh
|Φh|

(cid:12)
(cid:12)
(cid:12)
(cid:12)

Fig. 9: Sum energy consumption of 40 sensors in terms of the
dissatisfaction degree, where the number of RBs is 2, N = 40,
ck = 10, ∀k, and ε = 0.1.

scheme is O[NI (4N 4 + 6N 3 + N ) + 2N 2
I + NG(Nm +
1)4 + ln(1/ε)], where NG and Nm are the numbers of
groups and sensors in each group, respectively.

3) ECM scheme: In the ECM scheme, the bipartite graph
is generated to record the Qi,k for all sensor-MEC
combinations, then, the KM algorithm is used to ﬁnd the
optimal matching to minimize the energy consumption,
as used in [8]–[10]. The computational complexity of
this scheme is O[NI (4N 4 + 6N 3 + N ) + 2N 2
I +
log(1/ε)].

I + N 4

4) Proposed scheme: This paper uses joint phase shift ma-
trix optimization and Gas-oriented computation ofﬂoad-
ing to reduce the energy consumption while keeping the
dissatisfaction degrees of sensors are below a threshold.
The computational complexity is similar to the ECM
scheme, as discussed in Section V. D.

From Fig. 6, we can check the number of RBs on the sum
energy consumption of 40 sensors, where (cid:15) = 8, N = 40, and
c = 10. It is demonstrated that the sum energy consumption
decreases with the increasing number of RBs, because data
transmission time is reduced with more bandwidth. Then, we
ﬁnd the increasing trend becomes slow when the bandwidth
is enough as the global performance should consider other
factors, such as computing power. Also, the proposed scheme
outperforms the bidding and group schemes, but has more
energy consumption than the ECM scheme.

It is demonstrated that the increasing number of IRS el-
ements will reduce the sum energy consumption, as shown
in Fig. 7. However, we ﬁnd the decline is slow because the
computation ofﬂoading system follows the “cask principle”,
meaning that unilaterally improving the capability of commu-
nication modules cannot give a large gain for the performance
of computation ofﬂoading systems. Fig. 8 shows the sum
energy consumption in terms of CCN per bit processing. There
exists a rough linear rise for sum energy consumption with
the CCN per bit processing. As the CCN per bit processing
is the main metric for the algorithm efﬁciency of CPU chips,

010203040373839404142(cid:90) ∞

0

zρ−1(z + ν)−ηGmn
pq

(cid:18)

µz

(cid:12)
(cid:12)
(cid:12)
(cid:12)

a1, . . . , ap
b1, . . . , bq

(cid:19)

dz =

νρ−η
Γ(η)

Gm+1,n+1
p+1,q+1

(cid:18)

µν

(cid:12)
(cid:12)
(cid:12)
(cid:12)

1 − ρ, a1, . . . , ap
η − ρ, b1, . . . , bq

(cid:19)

11

(46)

a= is achieved because E(| ZΦh

where
E(|Φh|2) = N . Hence, the mean of x can be re-written as

|Φh| |2) = Ne and

E(x) = Ne(1 + N ).

(50)

Then, we will deduce the variance of x, i.e., V(x), which is
given as

V(x) = E(|x|2) − |E(x)|2,

(51)

where E(|x|2) can be expressed as

)

E(x2)
= E((cid:12)
= E((cid:12)
= E((cid:12)
+ E(|gHZΦh|2) + 2E(|g|2|ZΦh|2).

(cid:12)|g + ZΦh|2(cid:12)
2
(cid:12)
(cid:12)|g|2 + |ZΦh|2 + hHΦHZHg + gHZΦh(cid:12)
(cid:12)
(cid:12)|ZΦh|2(cid:12)
(cid:12)|g|2(cid:12)
(cid:12)
(cid:12)

)
) + E(|hHΦHZHg|2)

) + E((cid:12)

2

2

2

(52)

According to the property of noncentral chi-square distribution
deﬁned in Lemma 4, we have

of legitimate users and is independent with gi, Zi, and hi,
E(Cw,i|Φ∗

i ) can be expressed as
(cid:90) ∞

(cid:18)

E(Cw,i|Φ∗

i ) =

log2

1 +

(cid:19)

x

α2
e,iPi
σ2
e,i
α2
e,iPi
σ2
e,i

1 +

(cid:18)

ln

fX (x)dx

(cid:19)

x

fX (x)dx

1
1 + z

(cid:20)
1 − FX

(cid:18) σ2

e,iz
Piα2
e,i

(cid:19)(cid:21)

dz

0
1
ln(2)

1
ln(2)

(cid:90) ∞

0
(cid:90) ∞

0

=

a=

=

1
ln(2)Γ(µ)

(cid:90) ∞

Γ(µ,

σ2
e,iz
νPiα2

e,i

)

0

1 + z

dz,

(57)

where a= is due to a change of variable z =
x. FX (·)
is CDF of the variable X ∼ X(Ne, N, Φ), as deﬁned in Eq.
(29). µ and ν are deﬁned in Eqs. (30) and (31). According
to [44, Eq. (5)], we have

e,i

α2
e,iPi
σ2

Γ(a, x) = G2,0
1,2

(cid:18)

x

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:19)

1
0, a

.

(58)

Jointly considering Eq. (46) [45, 7.812 EI II 418(4)], we get

E((cid:12)

(cid:12)|g|2(cid:12)
(cid:12)

2

) = V(|g|2) + |E(|g|2)|2

= N 2

e + Ne.

Also, we
get
E(|hHΦHZHg|2) = E(|gHZΦh|2) = NeN , and

E(|g|2|ZΦh|2)

can

=

E(|ZΦh|4) = E

4(cid:19)

(cid:18)(cid:12)
(cid:12)
ZΦh
(cid:12)
(cid:12)
(cid:12)
(cid:12)
|Φh|
(cid:12)
(cid:12)
= (Ne + N 2
e )(1 + N )N.

E(|Φh|4),

(cid:90) ∞

Γ(µ,

e,iz
e,iPi

σ2
να2
1 + z

)

dz

(53)

N 2

e N ,

0

=

(cid:90) ∞

0

= G3,1
2,3

(cid:18) σ2

e,iz
νPiα2
e,i
(cid:19)

(cid:19)

1
0, µ

(cid:12)
(cid:12)
(cid:12)
(cid:12)

dz

(1 + z)−1G2,0
1,2

(cid:18) σ2
e,i
νPiα2
e,i

(cid:12)
(cid:12)
(cid:12)
(cid:12)

0, 1
0, 0, µ

.

(59)

(54)

Substituting Eq. (59) into Eq. (57), we get the expression of
the ergodic capacity of between Ui and BS as follows,

Then, according to Eq. (51), we have the variance of x as
follows,

V(x) = Ne(1 + N )2 + (Ne + N 2

e )N.

(55)

According to the deﬁnition of the Gamma distribution [38], the
shape and scale of the Gamma distribution can be expressed
as

µ =

[E(x)]2
V(x)

,

ν =

V(x)
E(x)

,

(56)

then, we get the PDF and CDF of X ∼ X(Ne, N, Φ) as
deﬁned in Eqs. (28) and (29).
The proof is completed.

B. Proof of Theorem 2

Here, we deduce the ergodic capacity between Ui and
is related with CSIs

i ) as follows. Since Φ∗
i

Eve E(Cw,i|Φ∗

E(Cw,i|Φ∗

i ) =

1
ln(2)Γ(µ)

G3,1
2,3

(cid:18) σ2
e,i
νPiα2
e,i

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:19)

0, 1
0, 0, µ

.

(60)

Substituting Eq. (60) into Eq.(36), we obtain the expression

of the ergodic secrecy rate.
The proof is completed.

REFERENCES

[1] J. Gozalvez, “New 3GPP standard for IoT [mobile radio],” IEEE Veh.

Technol. Mag., vol. 11, no. 1, pp. 14–20, Mar. 2016.

[2] Y. Wang, Z. Su, N. Zhang, J. Chen, X. Sun, Z. Ye, and Z. Zhou, “SPDS:
A secure and auditable private data sharing scheme for smart grid based
on blockchain,” IEEE Trans. Ind. Inf., vol. 17, no. 11, pp. 7688–7699,
Nov. 2021.

[3] Y. Liu, W. Wang, H.-H. Chen, F. Lyu, L. Wang, W. Meng, and X. Shen,
“Physical layer security assisted computation ofﬂoading in intelligently
connected vehicle networks,” IEEE Trans. Wireless Commun., vol. 20,
no. 6, pp. 3555–3570, Jun. 2021.

[4] Z. Su, Y. Wang, Q. Xu, and N. Zhang, “LVBS: Lightweight vehicular
blockchain for secure data sharing in disaster rescue,” IEEE Trans.
Dependable Secure Comput., vol. 19, no. 1, pp. 19–32, Jan. 2022.
[5] Y. Wu, H.-N. Dai, and H. Wang, “Convergence of blockchain and edge
computing for secure and scalable IIoT critical infrastructures in industry
4.0,” IEEE Internet Things J., vol. 8, no. 4, pp. 2300–2317, Feb. 2021.

12

systems,” IEEE Trans. Veh. Technol., vol. 69, no. 10, pp. 12 296–12 300,
Oct. 2020.

[27] I. Trigui, W. Ajib, and W.-P. Zhu, “Secrecy outage probability and
average rate of RIS-aided communications using quantized phases,”
IEEE Commun. Lett., vol. 25, no. 6, pp. 1820–1824, Jun. 2021.
[28] B. Feng, Y. Wu, M. Zheng, X.-G. Xia, Y. Wang, and C. Xiao, “Large
intelligent surface aided physical layer security transmission,” IEEE
Trans. Signal Process., vol. 68, pp. 5276–5291, Sep. 2020.

[29] Y. Wu, “Cloud-edge orchestration for the Internet of Things: Architec-
ture and AI-powered data processing,” IEEE Internet Things J., vol. 8,
no. 16, pp. 12 792–12 805, Aug. 2021.

[30] Y. Wu, H.-N. Dai, H. Wang, and K.-K. R. Choo, “Blockchain-based
privacy preservation for 5G-enabled drone communications,” IEEE
Netw., vol. 35, no. 1, pp. 50–56, Jan. 2021.

[31] Y. Liu, Z. Su, and B. Yu. Endogenous security of computation
[Online].

ofﬂoading in blockchain-empowered Internet of Things.
Available: https://arxiv.org/abs/2203.01621

[32] Q. Wu and R. Zhang, “Intelligent reﬂecting surface enhanced wireless
network via joint active and passive beamforming,” IEEE Trans. Wireless
Commun., vol. 18, no. 11, pp. 5394–5409, Nov. 2019.

[33] X. Yu, D. Xu, and R. Schober, “MISO wireless communication systems
via intelligent reﬂecting surfaces : (invited paper),” in 2019 IEEE/CIC
International Conference on Communications in China (ICCC), 2019,
pp. 735–740.

[34] N. Boumal, B. Mishra, P.-A. Absil, and R. Sepulchre, “Manopt, a Matlab
toolbox for optimization on manifolds,” Journal of Machine Learning
Research, vol. 15, no. 42, pp. 1455–1459, Apr. 2014.

[35] P.-A. Absil, R. Mahony, and R. Sepulchre, Optimization algorithms on
Princeton, New Jersey, US: Princeton University

matrix manifolds.
Press, 2009.

[36] J. R. Shewchuk et al., An introduction to the conjugate gradient method
Pittsburgh, PA, USA: Carnegie-Mellon

without the agonizing pain.
University, Department of Computer Science, 1994.

[37] T. Van Chien, L. T. Tu, S. Chatzinotas, and B. Ottersten, “Coverage prob-
ability and ergodic capacity of intelligent reﬂecting surface-enhanced
communication systems,” IEEE Commun. Lett., vol. 25, no. 1, pp. 69–
73, Jan. 2021.

[38] E. W. Weisstein, CRC concise encyclopedia of mathematics.

Boca

Raton, Florida, USA: CRC press, 2002.

[39] R. Duan and H.-H. Su, “A scaling algorithm for maximum weight
matching in bipartite graphs,” in Proceedings of the twenty-third annual
ACM-SIAM symposium on Discrete Algorithms. SIAM, 2012, pp. 1413–
1424.

[40] A. D. Wyner, “The wire-tap channel,” Bell System Technical J., vol. 54,

no. 8, pp. 1355–1367, 1975.

[41] Y. Liu and Z. Su, “Minimization of secrecy outage probability
in intelligent reﬂecting surfaces-assisted MIMOME system.” [Online].
Available: https://github.com/yiliangliu1990/liugit pub/blob/master/IRS/
IRS PLS.pdf

[42] T. Dinc, A. Chakrabarti, and H. Krishnaswamy, “A 60 GHz CMOS
full-duplex transceiver and link with polarization-based antenna and RF
cancellation,” IEEE J. Solid-State Circuits, vol. 51, no. 5, pp. 1125–
1140, May 2016.

[43] P. Patnaik, “The non-central χ 2-and f-distribution and their applica-

tions,” Biometrika, vol. 36, no. 1/2, pp. 202–232, Jun. 1949.

[44] S. Kumar, “Exact evaluations of some Meijer G-functions and proba-
bility of all eigenvalues real for the product of two Gaussian matrices,”
Journal of Physics A: Mathematical and Theoretical, vol. 48, no. 44, p.
445206, Oct 2015.

[45] A. Jeffrey and D. Zwillinger, Table of integrals, series, and products.

Burlington, MA, USA: Elsevier, 2007.

[6] L. Xie, H. T. Luan, Z. Su, Q. Xu, and N. Chen, “A game theoretical
approach for secure crowdsourcing-based indoor navigation system with
reputation mechanism,” Early Access in IEEE Internet Things J., DOI:
10.1109/JIOT.2021.3111999.

[7] M. Dai, Z. Su, Q. Xu, Y. Wang, and N. Lu, “A trust-driven contract
incentive scheme for mobile crowd-sensing networks,” IEEE Trans. Veh.
Technol., vol. 71, no. 2, pp. 1794–1806, Feb. 2022.

[8] S. Mu, Z. Zhong, and D. Zhao, “Energy-efﬁcient and delay-fair mobile
computation ofﬂoading,” IEEE Trans. Veh. Technol., vol. 69, no. 12, pp.
15 746–15 759, Dec. 2020.

[9] H. Hu, Q. Wang, R. Q. Hu, and H. Zhu, “Mobility-aware ofﬂoading
and resource allocation in a MEC-enabled IoT network with energy
harvesting,” IEEE Internet Things J., vol. 8, no. 24, pp. 17 541–17 556,
Dec. 2021.

[10] Y. Dai, D. Xu, S. Maharjan, and Y. Zhang, “Joint computation ofﬂoading
and user association in multi-task mobile edge computing,” IEEE Trans.
Veh. Technol., vol. 67, no. 12, pp. 12 313–12 325, Dec. 2018.

[11] Q. Jiang, N. Zhang, J. Ni, J. Ma, X. Ma, and K.-K. R. Choo, “Uniﬁed
biometric privacy preserving three-factor authentication and key agree-
ment for cloud-assisted autonomous vehicles,” IEEE Tran. Veh. Technol.,
vol. 69, no. 9, pp. 9390–9401, Sep. 2020.

[12] J. Li, Z. Su, D. Guo, K.-K. R. Choo, and Y. Ji, “PSL-MAAKA: Provably
secure and lightweight mutual authentication and key agreement protocol
for fully public channels in internet of medical things,” IEEE Internet
Things J., vol. 8, no. 17, pp. 13 183–13 195, Sep. 2021.

[13] Y. Liu, H.-H. Chen, L. Wang, and W. Meng, “Artiﬁcial noisy MIMO
systems under correlated scattering Rayleigh fading — A physical layer
security approach,” IEEE Syst. J., vol. 14, no. 2, pp. 2121–2132, Jun.
2020.

[14] Y. Yu, S. Liu, P. L. Yeoh, B. Vucetic, and Y. Li, “LayerChain: A
hierarchical edge-cloud blockchain for large-scale low-delay industrial
internet of things applications,” IEEE Trans. Ind. Inf., vol. 17, no. 7, pp.
5077–5086, Jul. 2021.

[15] C. K. Pyoung and S. J. Baek, “Blockchain of ﬁnite-lifetime blocks with
applications to edge-based IoT,” IEEE Internet Things J., vol. 7, no. 3,
pp. 2102–2116, Mar. 2020.

[16] J. Pan, J. Wang, A. Hester, I. Alqerm, Y. Liu, and Y. Zhao, “EdgeChain:
An edge-IoT framework and prototype based on blockchain and smart
contracts,” IEEE Internet Things J., vol. 6, no. 3, pp. 4719–4732, Oct.
2019.

[17] X. Xu, X. Zhang, H. Gao, Y. Xue, L. Qi, and W. Dou, “BeCome:
Blockchain-enabled computation ofﬂoading for IoT in mobile edge
computing,” IEEE Trans. Ind. Inf., vol. 16, no. 6, pp. 4187–4195, Jun.
2020.

[18] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song, “Computation
ofﬂoading and content caching in wireless blockchain networks with
mobile edge computing,” IEEE Trans. Veh. Technol., vol. 67, no. 11,
pp. 11 008–11 021, Nov. 2018.

[19] W. Chen, Z. Zhang, Z. Hong, C. Chen, J. Wu, S. Maharjan, Z. Zheng,
and Y. Zhang, “Cooperative and distributed computation ofﬂoading for
blockchain-empowered industrial Internet of Things,” IEEE Internet
Things J., vol. 6, no. 5, pp. 8433–8446, Oct. 2019.

[20] J. Feng, F. Richard Yu, Q. Pei, X. Chu, J. Du, and L. Zhu, “Cooperative
computation ofﬂoading and resource allocation for blockchain-enabled
mobile-edge computing: A deep reinforcement learning approach,” IEEE
Internet Things J., vol. 7, no. 7, pp. 6214–6228, Jul. 2020.

[21] D. C. Nguyen, P. N. Pathirana, M. Ding, and A. Seneviratne, “Secure
computation ofﬂoading in blockchain based IoT networks with deep
reinforcement learning,” IEEE Trans. Network Sci. Eng., vol. 8, no. 4,
pp. 3192–3208, Oct. 2021.

[22] Y. Fan, L. Wang, W. Wu, and D. Du, “Cloud/edge computing resource
allocation and pricing for mobile blockchain: An iterative greedy and
search approach,” IEEE Trans. Comput. Social Syst., vol. 8, no. 2, pp.
451–463, Apr. 2021.

[23] S. Seng, C. Luo, X. Li, H. Zhang, and H. Ji, “User matching on
blockchain for computation ofﬂoading in ultra-dense wireless networks,”
IEEE Trans. Network Sci. Eng., vol. 8, no. 2, pp. 1167–1177, Apr. 2021.
[24] S. Xu, J. Liu, and Y. Cao, “Intelligent reﬂecting surface empowered
physical-layer security: Signal cancellation or jamming?” IEEE Internet
Things J., vol. 9, no. 2, pp. 1265–1275, Jan. 2022.

[25] Z. Chu, W. Hao, P. Xiao, D. Mi, Z. Liu, M. Khalily, J. R. Kelly, and A. P.
Feresidis, “Secrecy rate optimization for intelligent reﬂecting surface
assisted MIMO system,” IEEE Trans. Inf. Forensics Secur., vol. 16, pp.
1655–1669, 2021.

[26] L. Yang, J. Yang, W. Xie, M. O. Hasna, T. Tsiftsis, and M. D. Renzo,
“Secrecy performance analysis of RIS-aided wireless communication

