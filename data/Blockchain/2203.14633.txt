2
2
0
2

r
a

M
8
2

]

R
C
.
s
c
[

1
v
3
3
6
4
1
.
3
0
2
2
:
v
i
X
r
a

An Effective Framework of Private Ethereum
Blockchain Networks for Smart Grid

Do Hai Son∗
dohaison1998@vnu.edu.vn

Tran Thi Thuy Quynh∗
quynhttt@vnu.edu.vn

Tran Viet Khoa∗†
khoatv.uet@vnu.edu.vn

Dinh Thai Hoang†
hoang.dinh@uts.edu.au

Nguyen Linh Trung∗
linhtrung@vnu.edu.vn

Nguyen Viet Ha∗
hanv@vnu.edu.vn

Dusit Niyato‡
dniyato@ntu.edu.sg

Diep N. Nguyen†
diep.nguyen@uts.edu.au

Eryk Dutkiewicz†
eryk.dutkiewicz@uts.edu.au

∗ AVITECH, VNU University of Engineering and Technology, Vietnam National University, Hanoi, Vietnam
† School of Electrical and Data Engineering, University of Technology Sydney, Australia
‡ Computer Science and Engineering, Nanyang Technological University, Nanyang, Singapore

Abstract—A smart grid is an important application in Industry
4.0 with a lot of new technologies and equipment working
together. Hence, sensitive data stored in the smart grid is vul-
nerable to malicious modiﬁcation and theft. This paper proposes
a framework to build a smart grid based on a highly effective
private Ethereum network. Our framework provides a real smart
grid that includes modern hardware and a smart contract to
secure data in the blockchain network. To obtain high throughput
but a low uncle rate, the difﬁculty calculation method used in the
mining process of the Ethereum consensus mechanism is modiﬁed
to adapt to the practical smart grid setup. The performance in
terms of throughput and latency are evaluated by simulation
and veriﬁed by the real smart grid setup. The enhanced private
Ethereum-based smart grid has signiﬁcantly better performance
than the public one. Moreover, this framework can be applied
to any system used to store data in the Ethereum network.

Index Terms—Smart grid, private Ethereum network, through-

put, latency.

I. INTRODUCTION

In Industry 4.0, a huge amount of data is created from
smart applications. This leads to a serious security threat to
many entities, including users, service providers, and network
operators [1]. Blockchain technology [2] has recently been in-
troduced as a promising solution. It stores data on a distributed
ledger and a consensus mechanism among the nodes to avoid
the ledger being manipulated maliciously.

In 2009, Bitcoin was introduced by Satoshi Nakamoto and
hailed as a radical development in money, being the ﬁrst exam-
ple of a digital asset. Since Bitcoin only intended to serve as a
decentralized payment, the one’s transaction will show up in a
long time. That is why after Bitcoin, blockchain technologies
are blooming with a famous project called “Ethereum” – a
decentralized platform. This technology not only possesses

This work is the output of the ASEAN IVO http://www.nict.go.jp/en/asean
ivo/index.html project “Cyber-Attack Detection and Information Security for
Industry 4.0” and ﬁnancially supported by NICT http://www.nict.go.jp/en/
index.html. Correspondence: Nguyen Linh Trung.

advantages of Bitcoin’s technologies,
i.e., decentralization,
transparency, immutability, and security-and-privacy but also
has some great improvements, i.e., smart contract and GHOST
(Greedy Heaviest Observed Subtree) protocol [3]. It takes only
15 seconds to conﬁrm a new block, approximately 2.5% of
Bitcoin [4]. As a result, the Ethereum network is applied in
many impactful applications, such as smart agriculture [5], [6],
Internet-of-vehicles [7], healthcare [8], [9].

Industry 4.0 also sees the smart grid as an attractive
application, which stores, manages, and exploits the electric
system [10]. A traditional grid is described in [11] with only
one centralized server, controlled by the energy company, in-
teracts with customers with symmetric or asymmetric schemes.
A serious risk of the system is centralization, which leads
to increasing latency and loss of data when cyber-attacks
occur. The Ethereum network can be applied to overcome the
risk [12]–[14]. A typical Ethereum-based smart grid is illus-
trated in Fig. 1. It is a potential system for the future electric
network where users and energy markets are connected.

Several studies related to Ethereum-based smart grid are as
follows. Zhuang et al. [12] reviewed the blockchain technol-
ogy and showed the architecture and platform of a blockchain-
based smart grid for cyber-security. Huang et al. [13] pre-
sented smart grid’s protocols in theory and implemented a
communication system using Sigfox devices, but did not apply
the Ethereum network. Gao et al. [14] introduced a smart
contract for their smart grid, but practical experiments were
not investigated. Besides Ethereum, many studies applied the
smart grid into other blockchain networks. [15] used the
Hyperledger Fabric 1.0 without optimization. [16] proposed
a structure of their SmartChain framework, which used the
concept of Proof-of-Time (PoT), instead of Proof-of-Work
(PoW), for good computational and propagation time versus
conventional blockchain network in simulation, but without
veriﬁcation. [17] proposed an energy trading (ET) framework

 
 
 
 
 
 
Fig. 1. Model of a smart grid in a smart city.

without targeting a speciﬁc blockchain network, however, the
performance was evaluated only in terms of the number of
Hash functions to execute. Thus, it is unclear if this framework
can be implemented in a real blockchain network. Generally,
most of the studies reviewed above and others in the literature
proposed system models or algorithms of the smart contracts
for the smart grid or implementation of a testing system
without the Ethereum network. This motivates us to focus,
in this work, on developing a novel framework to implement
a smart grid with secure data, and improve the efﬁciency of
the private Ethereum network.

As shown in Fig. 1, a smart grid communication infras-
tructure can be separated into three layers: Home Area Node
(HAN) which is the home electrical system, Neighborhood
Area Network (NAN) which includes several HANs, Wide
Area Network (WAN) which is a network of NANs. In
this paper, a prototype of an Ethereum-based smart grid is
implemented at the HAN layer. This prototype includes the
essential components of a smart grid, e.g., smart meters and
an IoT Gateway [18]. To secure data inside the blockchain
network, encryption methods are required. However, asymme-
try schemes would make users reveal their secret keys to the
nodes [19]. Therefore, a symmetric pre-encryption technique
and a simple smart contract are considered to prevent the
encrypted data from being duplicated and to avoid revealing
the secret key.

The system is based on a private Ethereum network instead
of a public Ethereum network. In a small-scale network, the
mining time can be reduced while still ensuring security in
the Ethereum network. By modifying the difﬁculty calcula-
tion method of the Ethereum consensus mechanism [20], the
performance can be improved, with higher throughput, smaller
latency, while keeping an uncle rate the same as that in the

main Ethereum network. To experiment this method, we use
BlockSim – a recently proposed framework for blockchain
systems by Alharby and van Moorsel [21]. The input param-
eters for performance study by simulation are measured from
the real system. Once we have obtained a suitable threshold
of block interval in the consensus layer, the trade-off between
latency and uncle rate, these parameters are then applied to
the prototype to verify the system performance.

The main contribution of this paper is to propose an
effective framework to build a private Ethereum network for
a smart grid. Firstly, a practical Ethereum-based smart grid
is deployed with essential hardware at the home electrical
system. Secondly, a smart contract for authentication in a
securely multi-devices system is proposed. At last, a method to
improve the efﬁciency of an Ethereum-based smart grid setup
in practical work with the support of numerical experiments.

II. OVERVIEW OF ETHEREUM BLOCKCHAIN TECHNOLOGY
A. Ethereum Blockchain Technology

The Ethereum blockchain network was introduced by Vita-
lik Buterin in 2015. Typically, it can be divided into seven
protocol layers: Storage, Data, Network, Protocol, Consen-
sus, Contract, and Application. The Contract Layer and the
GHOST protocol [3] in the Consensus Layer are greatly
upgraded, in comparison with those in the Bitcoin network.

The smart contract in the Contract Layer is the ﬁrst highlight
of Ethereum. A smart contract, being simply a piece of
code running on Ethereum, can be built with the Solidity
language. The Solidity Compiler compiles the smart contract
into Bytecode and Application Binary Interface (ABI). Both
of them are packaged into a transaction and deployed into
the Ethereum network. Bytecode is an executable code on
Ethereum Virtual Machine (EVM) and Contract ABI is an
interface to interact with EVM Bytecode.

          WAN     HANHANNANWANHANHANNANBuiding with storage and solar panelBulk GernertorTranmissionHAN : Home Area NodeNAN : Neighborhood Area NetworkWAN: Wide Area NetworkDistribution Station (Edge Computing Network)Full NodeFull NodeFull NodeFull NodeFull NodeFull NodeFull NodeBoot NodeSM1SM2SM3IoT GatewayCPS200 REOur experiment setup at IDS AVITECH laboratory(including: the HAN system, three Full Nodes, and a Boot Node)ElectricalLoadsElectricalLoadsElectricalLoadsBuiding an EdgeComputing NodeEnergy Market &Incentive mechanismGHOST is a PoW blockchain protocol

like in Bitcoin,
except for the way it resolves the correct blockchain. Instead
of using the longest chain consensus rule in Bitcoin, GHOST
follows the path of the sub-tree with the combined hard-
est proof of work/difﬁculty. The sub-tree is created because
Ethereum allows us to reintroduce orphaned blocks to the
chain as “uncles”. These uncles in the chain allow the network
to reduce the mining time while avoiding multiple forking
of the ledger (51% attacks). But the uncle has no role in
data storage, so if the uncle rate is too high, it will lead to
unnecessary storage effort.

B. Types of Ethereum Nodes

A node is a device/program that communicates with the
Ethereum network, also known as a client. In this prototype,
there are two node types of the Ethereum network. A full
node keeps a ledger, receives or broadcasts transactions to
other nodes. Any full node can be used to conﬁrm blocks
and transactions and get rewards. In this case, it is also called
“miner”. A boot node keeps Ethereum Node Records (ENR) of
many full nodes and is not responsible for keeping the ledger,
mining, or broadcasting transactions. Any node that connects
with a boot node would discover peers in the network.

III. PROPOSED PRIVATE ETHEREUM NETWORK FOR
SMART GRID

A. Private Ethereum Network and Hardware Implementation

At the present, 1 Ether (ETH) is approximately 2000 USD.
If the smart grid is deployed in the public Ethereum network,
at least transaction fees will be charged. There are two ways to
deploy the system and send transaction fees in the Ethereum
network; one uses Ethereum test-nets and the other creates an
own private network.

In the former, test-nets are for free by given ETH coins in
some vaults, and the beneﬁt of this way is that we do not
necessarily run our miners. However, the ETH coins obtained
from vaults are limited. So for a large-scale system, Ethereum
test-nets are not compatible.

In the latter, a private Ethereum network is preferred be-
cause it can overcome the disadvantage of the former. To de-
ploy a private network, the Ethereum developer team provides
a powerful open-source software named Go-ethereum [23]
(Geth). The software includes a number of functions to make
private nodes, make boot nodes, create new accounts, run full
nodes, and so on. Geth v1.10.4 is used in our setup. The private
Ethereum network, as shown in Fig. 2, consists of three full
nodes which are personal computers with processor Intel®
Core™ i7-4800MQ @2.7 GHz, RAM of 16 GB. The network
has been setup by a Cisco switch Catalyst 2950 with 100 Mbps
bandwidth.

As shown in Fig. 1, the proposed prototype of the HAN
layer includes the essential components, i.e., electrical loads,
smart meters, and an IoT gateway CPS 200RE.

XTM35SC is the next generation of electricity meters (smart
meters). It measures how much electricity has been used, and
displays information on a handy in-home display. Furthermore,

Fig. 2. Our experiment system.

data collected from the smart meter can be exploited by other
IoT devices which use the Modbus-RTU protocol. In the
system, data collected from the smart meter will be exploited,
decoded, encrypted, and transmitted through an IoT gateway.
For simplicity, only consumed energy data will be collected.
CPS 200RE is an edge IoT gateway. It is fully integrated
with Fieldbus accessibility, Modbus TCP/RTU, PROFINET®
or EtherNet/IP™, and so on, for extremely easy deployment
of both centralized/decentralized ﬁeld data implementation in
the automation process. The IoT gateway is responsible for the
collection of device identiﬁcation, collection time, and value
of consumed energy.

B. Security Enhanced Smart Contract

After collecting raw data from smart meters,

the gate-
way encrypts the data to avoid malicious tapping of the
data. This work is necessary because the mechanism of the
blockchain makes all data public, requiring pre-encryption
before transmission. Both symmetry and asymmetry schemes
are considered. But in the blockchain, a classical symmetry
scheme named AES-256-CTR [24] is used in the system
because asymmetry schemes would make a user reveal his/her
keyprivate to Ethereum nodes [19]. In the blockchain network,
a pair of keypub and keypri are provided when a user creates
a new account. In this paper, the keyprivate used for AES-
256-CTR is the same as the keypri. At this stage, the privacy
of the raw data is guaranteed.

The smart contract

is given by Algorithm 1 in which
the inputs are encrypted identiﬁcation/collection time/value of
consumed energy F(. . . , keypri) and the outputs are stored
inputs, saving the keypub of the user account that has deployed
the smart contract as the primary account. This account has
permission to add/remove other accounts from the account list,
allowing the added/removed account to push data in smart
contract or not. The data ﬂow of every smart meter to the
private Ethereum network is summarized in Fig 3.

Fig. 3. Data ﬂow from a smart meter to the private Ethereum network.

Algorithm 1
Input: msg.sender (address sending transaction)

id ←− F( id, keypri)
time ←− F( time, keypri)
value ←− F( value, keypri)
Output: push data to the Ethereum network

1: Class SmartFac {
2:
3:
4:

init addr ←− None
total of reco ←− 0
struct Reco { id, time, value }
reco[uint][Reco]
trusted acc[address][bool]
Function constructor( ) {

5:
6:
7:
8:
9:
10:

11:
12:
13:
14:
15:
16:

17:
18:
19:
20:
21:

22:
23:
24:
25:
26:
27:

trusted acc[msg.sender] ←− true
init addr ←− msg.sender

}
Function add acc( addr ) {
if msg.sender (cid:54)= init addr

return Error

trusted acc[ addr] ←− true

}
Function rm acc( addr ) {

if msg.sender (cid:54)= init addr (cid:107) addr == init addr

return Error

delete trusted acc[ addr]

}
Event added reco(addr,
Function new reco(
id,

time, value)
id,
time, value ) {

if trusted acc[msg.sender] (cid:54)= true

return Error

total of reco ←− total of reco + 1
reco[total of reco] ←− Reco { id, time, value}
emit added reco(msg.sender,
time, value)

id,

}

28:
29: }

C. Performance Improvement via Throughput and Latency

The latency of the original Ethereum network is more than
12 seconds because of global scalability [4]. This is not
suitable for low-latency applications. When applied to a smart
grid, with smaller scalability, the system can be improved to

obtain higher throughput and smaller block intervals (T ).

Based on the analysis of 10, 000 consecutive blocks in the
Bitcoin network, on average, the transmission time of a block
which has just been produced from a miner to 50% and 95%
of all nodes are 6.5 seconds and 40 seconds respectively, and
the mean delay is around 12.6 seconds [25]. For a private
Ethereum network with small scalability, the mining time can
be reduced subject to block propagation, which is measured
in this private Ethereum network.

Firstly, we consider the case when the public Ethereum
network keeps the stable block interval described in the
Ethereum yellow paper [20]:

(cid:40)

Di =

D0 = 131072,
max(D0, PD + x × ζ + (cid:15)), otherwise,

if i = 0,

with

x =

(cid:23)

,

(cid:22) PD
2048
(cid:26)

ζ = max

y −

(cid:23)

(cid:22) T
9

(cid:27)

, −99

,

(cid:40)

if (cid:107)PU (cid:107) = 0,

1,
2, otherwise,
2(cid:98)max(i−5000000,0)÷100000(cid:99)−2(cid:107)
(cid:106)

,

y =

(cid:15) =

(1)

(2)

(3)

(4)

(5)

where D is “difﬁculty” which is a scalar value corresponding
to the difﬁculty level of this block, P is the parent of
this block, PD, Ps and PU are “difﬁculty”, “time stamp”,
and “the number of uncles” of P , respectively, (cid:98)·(cid:99) denotes
the the integer division operator, the index i indicates the
current block number, T is the block interval, given by
T = current block time stamp − Ps.

We focus on the case in which (cid:107)PU (cid:107) = 0. By this
constraint, we consider the effect of the propagation time to T .
Simultaneously, when the number of uncles is reduced, the size
of the ledger is decreased while still keeping all transactions.
Moreover, reducing the number of uncles in the ledger also
avoids “selﬁsh mining” in the network when some miners are
simply to mine uncles instead of blocks extending the best
chain [26].

SMidtimestampvalueF        (id, keypri)F (timestamp, keypri)F (value, keypri)Raw dataRaw dataRaw dataRaw dataEncrypted dataEncrypted dataEncrypted data1. Data is encoded according to the smart contract’s ABI.2. Send transaction to the smart contract’s address.IoT Gateway CPS200 RETransactionPrivate Ethereum networkTABLE I
THE PARAMETERS IN THE NETWORK ARE PRE-SETUP BASED ON THE MEASURED AND OUR EXPERIMENTS.

Parameters

Block gas limit
Average transaction size
Average block size
Average block propagation delay
Sync mode
Number of transactions created per second
Number of node

Values

15,000,000 gas
0.759808 kB
60 kB
0.25 seconds
light
100 transactions per second
3 miners

Notes

Same as main Ethereum network at June-6-2021
Based on our smart contract
Same as main Ethereum network at June-6-2021
Based on our experiment measured
Just sync block header

Each miner has 33.33% of the total computing power

We can observe that the Ethereum consensus does not vary
T directly, but indirectly through D and a threshold λ in
replacement of value 9 in (3). In detail, Eq. (1) depends on
Eq. (3), so unless the current block is the ﬁrst one (genesis
block), if T < λ then D is adjusted upwards by (x + (cid:15)), if
λ ≤ T < 2λ then D is unchanged, and if T ≥ 2λ then D is
adjusted downwards proportional to the timestamp difference
by from (−x + (cid:15)) to (−99 × x + (cid:15)). It can be seen that T is
always desired between λ and 2λ seconds, subject to λ in (3).
It should be well noted that this threshold is rooted from [25].
However, in a private Ethereum network of limited size,
T can be reduced while ensuring that the block propagates
through 95% of the nodes. This leads to our modiﬁcation in
the consensus mechanism to improve the block interval. We
propose to modify the source code of Geth [23] by restoring
the use of the threshold λ in [25] as in

(cid:26)

ζ = max

y −

(cid:23)

(cid:22) T
λ

(cid:27)

, −99

(6)

instead of ﬁxing it to 9 as in (3), and obtain the value of λ
based on the practical smart grid setup.

IV. EXPERIMENTS

A. Performance Study by Simulation

Recently, a simulation framework called BlockSim [21]
is used to evaluate a Bitcoin/Ethereum
is introduced. It
blockchain network depending on input parameters. This paper
focuses on evaluating three parameters, i.e., block interval,
throughput (transactions per second), and uncle rate. The
others based on either the main (public) Ethereum network
or measured data from the prototype, and are given in Table I.
The simulation results are shown in Fig. 4. The line with
marker of triangle and that of diamond present uncle rate and
throughput versus block interval, respectively. The results are
averaged over 100 experiments.

Generally, the throughput and the uncle rate both decrease
as the block interval time increases. The system has maximum
performance with throughput of more than 80 transactions per
second (tx/s) and block interval of less than 2 seconds. How-
ever, 7-18% of uncle rate is not good because of increasing
storage. Comparing with the main Ethereum network of 4.81%
on average [27], the proposed network has T = 3 seconds.
At this value of block interval, throughput and uncle rate are
77.72 tx/s and 4.88%, compared with 29.95 tx/s and 1.47%
at T = 12, respectively.

Fig. 4. Performance by simulation: Throughput and uncle rate versus block
interval.

Fig. 5. Real experiment: Throughput and block interval in 7, 000 blocks at
λ = 3.

Besides, other simulation results of a main Ethereum net-
work [25] with 3 full nodes are two scatter points as shown
in Fig. 4 with throughput and uncle rate are 14.05 tx/s and
17.48%, respectively. This throughput is suitable with the real
main Ethereum network.

B. Veriﬁcation by Real Data

From the experiment by simulation, to obtain the block
interval of approximately 3 seconds and the uncle rate of
approximately 4.81%, as shown in Section IV-A, the threshold
λ in Eq. (6) is found to be 3.

0.51234567891011121314151617181920Block interval (s)102030405060708090Average number of transactions per second01234567891011121314151617181920Average Uncle Rate (%)avg transactionsavg Uncle rateavg tx/s with the main Eth setupavg Uncle Rate withthe main Eth setup1000200030004000500060007000Block number050100150200250Average number of transactions per second05101520253035404550Block interval (s)avg transactionsblock intervalTABLE II
EXPERIMENT RESULTS VERSUS THE MAIN ETHEREUM NETWORK

Parameters

Transactions per second
Uncle Rate
Block interval

Avg values
in the private Eth
50.08 tx/s
3.03%
2.7 seconds

Avg values
in the main Eth
16.25 tx/s
4.81%
13.48 seconds

The experimental results from the real prototype are pre-
sented in Fig. 5 with 7, 000 consecutive blocks. The top line
and bottom line show the average number of transactions per
second in a block time and the block interval, respectively.
Here, because the mining process depends on probability,
so in this ﬁgure, we can see that both are not stable at a
speciﬁc value. The average values of both on 7, 000 blocks,
compared to that of the main Ethereum network (found at
www.etherscan.io/chart), are shown in Table II. According
to the real experiment, the proposed framework can handle
50.08 tx/s and 2.7 seconds between two blocks while those of
the main Ethereum network are 16.25 tx/s and 13.48 seconds.
Moreover, the obtained uncle rate is 3.03%, which is smaller
than that of the main Ethereum network.

The throughput of the real experiment is not as good as
that of the simulated experiment by BlockSim but better than
that of the main Ethereum network. While the latency is much
smaller than that of the main Ethereum network. It is clear that
the proposal of changing the consensus mechanism did give
better performance.

However, decreasing T may cause risky scenarios, for
example, a signiﬁcantly faster miner joins the network and
takes all mining jobs. It can lead to a 51% attack by conﬁrming
dishonest transactions. In a private network, there are a few
technical methods provided by Geth to solve this problem,
e.g., whitelist IP, set maxpeers; more details in [23].

V. CONCLUSION
We have proposed an effective framework to build a pri-
vate Ethereum network for smart grid with an own private
Ethereum network and essential hardware of a smart grid
at the home electrical system. The AES-256-CTR standard
is applied to pre-encrypt raw data and a smart contract for
authentication has been proposed. Then, we have shown how
to improve the efﬁciency of a practical smart grid setup and
our veriﬁcation system can obtain throughput of 50.08 tx/s and
latency of 2.7 seconds at an uncle rate of 3.03%. These results
clearly show that our proposed framework can outperform the
original setup for a private Ethereum network. Moreover, this
framework can be applied to any system used to store data
in the Ethereum network with any scale. In the future, other
factors, e.g., the number of nodes, transaction size, will be
investigated to fully evaluate a private Ethereum network.

REFERENCES

[1] V. Alc´acer and V. Cruz-Machado, “Scanning the Industry 4.0: A Litera-
ture Review on Technologies for Manufacturing Systems,” Engineering
Science and Technology, an International Journal, vol. 22, no. 3,
pp. 899-919, 2019.

[2] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” Decen-

tralized Business Review, p. 21260, 2008.

[3] Sompolinsky and A. Zohar, “Secure High-Rate Transaction Processing
in Bitcoin,” in Financial Cryptography and Data Security. FC 2015.
Lecture Notes in Computer Science, B¨ohme R., Okamoto T. Eds.
Springer, Berlin, Heidelberg, 2015, vol. 8975, pp. 507–527.

[4] VitalikButerin, “Toward a 12-second BlockTime,” 2014.

[Online].
toward-a-12-second-block-time/

Available:

https://blog.ethereum.org/2014/07/11/

[5] G. Mirabelli and V. Solina, “Blockchain and agricultural supply chains
traceability: Research trends and future challenges,” Procedia Manufac-
turing, vol. 42, pp. 414–421, 2020.

[6] Shyamala Devi, R. Suguna, et al., “Design of IoT Blockchain Based
Smart Agriculture for Enlightening Safety and Security,” Comm. in
Computer and Information Science, vol. 985, no. 5, pp. 7–19, 2019.
[7] R. Jabbar, M. Kharbeche, K. Al-Khalifa, et al., “Blockchain for the
Internet of Vehicles: A Decentralized IoT Solution for Vehicles Com-
munication Using Ethereum,” Sensors, vol. 20, no. 14, pp. 1–27, 2020.
[8] Drew Ivan, “Blockchain-based Method for Secure Storage of Patient
Records,” ONC Blockchain Ideation Challenge, no. 8, p. 11, 2016.
[9] W. Hersh, A. Totten, et al., “Health Information Dissemination from
Hospital To Community Care: Current State And Next Steps In Ontario,”
Journal of Medical Systems, vol. 63, no. 50, pp. 425–432, 2016.
[10] El-Hawary, Mohamed E., “The smart grid - State-of-the-art and future
trends,” Electric Power Components and Systems, vol. 42, no. 3–4,
pp. 239–250, 2014.

[11] Guan, Z., Zhang, Y., Zhu, L., and et al., “EFFECT: an efﬁcient ﬂexible
privacy-preserving data aggregation scheme with authentication in smart
grid,” Sci. China Inf. Sci., vol. 62, p. 32103, 2019.

[12] P. Zhuang, T. Zamir, and H. Liang, “Blockchain for Cyber Security in
Smart Grid: A Comprehensive Survey,” IEEE Transactions on Industrial
Informatics, vol. 17, no. 1, pp. 3-19, 2021.

[13] Huang, K. Suankaewmanee, J. Kang, D. Niyato, et al., “Development of
reliable wireless communication system for secure blockchain-based en-
ergy trading,” 16th International Joint Conference on Computer Science
and Software Engineering (JCSSE), Thailand, 2019, pp. 126–130.
[14] J. Gao, K. O. Asamoah, E. B. Sifah, A. Smahi, et al., G. Dong,
“GridMonitoring: Secured Sovereign Blockchain Based Monitoring on
Smart Grid,” IEEE Access, vol. 6, pp. 9917–9925, 2018.

[15] K. Gai, Y. Wu, L. Zhu, M. Qiu, M. Shen, “Privacy-Preserving Energy
Trading Using Consortium Blockchain in Smart Grid,” IEEE Transac-
tions on Industrial Informatics, vol. 15, no. 6, pp. 3548-3558, 2019.

[16] G. Bansal, A. Dua, G. S. Aujla, M. Singh and N. Kumar, “SmartChain:
A Smart and Scalable Blockchain Consortium for Smart Grid Systems,”
in 2019 IEEE International Conference on Communications Workshops
(ICC Workshops), China, 2019, pp. 1-6.

[17] A. Kumari, R. Gupta, S. Tanwar, S. Tyagi, N. Kumar, “When Blockchain
Meets Smart Grid: Secure Energy Trading in Demand Response Man-
agement,” IEEE Network, vol. 34, no. 5, pp. 299-305, 2020.

[18] A. Ghasempour, “Internet of Things in Smart Grid: Architecture, Appli-
cations, Services, Key Technologies, and Challenges,” Inventions, vol.
4, no. 1, pp. 1-12, 2019.

[19] M. Raikwar, D. Gligoroski, and K. Kralevska, “SoK of Used Cryptog-
raphy in Blockchain,” IEEE Access, vol. 7, pp. 148 550–148 575, 2019.
[20] G. Wood, “Ethereum: A secure decentralised generalised transaction-
ledger, petersburg version 41c1837,” 2021. [Online serial]. Available:
https://ethereum.github.io/yellowpaper/paper.pdf

[21] M. Alharby, A. van Moorsel, “BlockSim: An Extensible Simulation Tool
for Blockchain Systems,” Frontiers in Blockchain, vol. 3, p. 28, 2020.

[22] Vitalik Buterin, “Ethereum Whitepaper.”

[Online]. Available: https://ethereum.org/en/whitepaper

[23] Ethereum, “Ofﬁcial Go implementation of the Ethereum protocol.”
[Online]. Available: https://github.com/ethereum/go-ethereum

[24] M. Dworkin, “Recommendation for Block Cipher Modes of Operation:
Methods and Techniques,” National Institute of Standards and Technol-
ogy, Gaithersburg, MD, Tech.Rep. 20899-8930, 2001.

[25] C. Decker and R. Wattenhofer, “Information propagation in the bitcoin
network,” in IEEE P2P 2013 Proceedings, Italy, 2013, pp. 1–10.
[26] H. Kang, X. Chang, and et al., “Understanding Selﬁsh Mining in
Imperfect Bitcoin and Ethereum Networks with Extended Forks,” IEEE
Transactions on Network and Service Management (Early Access), 2021.

[27] Ethereum Statistics,“Ethereum Uncle Rate”,

[Online]. Available: https://ycharts.com/indicators/ethereum uncle rate

