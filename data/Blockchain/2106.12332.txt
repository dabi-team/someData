From Grieﬁng to Stability in Blockchain Mining Economies

Yun Kuen Cheung1, Stefanos Leonardos2, Georgios Piliouras2, and Shyam Sridhar2

1Royal Holloway University of London, yunkuen.cheung@rhul.ac.uk

2Singapore University of Technology and Design,

stefanos leonardos, georgios

shyam sridhar@mymail.sutd.edu.sg

{

@sutd.edu.sg,
}

1
2
0
2

n
u
J

3
2

]
T
G
.
s
c
[

1
v
2
3
3
2
1
.
6
0
1
2
:
v
i
X
r
a

Abstract

We study a game-theoretic model of blockchain mining economies and show that grieﬁng,
a practice according to which participants harm other participants at some lesser cost to
themselves, is a prevalent threat at its Nash equilibria. The proof relies on a generalization
of evolutionary stability to non-homogeneous populations via grieﬁng factors (ratios that
measure network losses relative to deviator’s own losses) which leads to a formal theoretical
argument for the dissipation of resources, consolidation of power and high entry barriers
that are currently observed in practice.

A critical assumption in this type of analysis is that miners’ decisions have signiﬁcant
inﬂuence in aggregate network outcomes (such as network hashrate). However, as networks
grow larger, the miner’s interaction more closely resembles a distributed production economy
or Fisher market and its stability properties change. In this case, we derive a proportional
response (PR) update protocol which converges to market equilibria at which grieﬁng is
irrelevant. Convergence holds for a wide range of miners risk proﬁles and various degrees
of resource mobility between blockchains with diﬀerent mining technologies. Our empirical
ﬁndings in a case study with four mineable cryptocurrencies suggest that risk diversiﬁcation,
restricted mobility of resources (as enforced by diﬀerent mining technologies) and network
growth, all are contributing factors to the stability of the inherently volatile blockchain
ecosystem.

1 Introduction

With more than 4000 circulating cryptocurrencies, currently valued above the staggering amount
of $1 trillion [46], and countless other decentralized applications running on them [51], the un-
derlying blockchain technologies are attracting increasing attention. However, a (still persisting)
barrier in their wider public adoption is the uncertainty regarding their stability and long-term
sustainability. Understanding these factors is important both for the success of permissionless
blockchains and for the acceptance of cryptocurrencies as a means for widespread monetary
transactions [12, 4, 32].

The critical actors for the stability of the blockchain ecosystem are the miners who provide
their costly resources (e.g., computational power in Proof of Work (PoW) or units of the native
cryptocurrency in Proof of Stake (PoS) protocols) to secure consensus on the growth of the
blockchain [33, 9, 5]. Miners act in a self-interested, decentralized manner and may enter or
leave these networks at any time. For their service, miners receive monetary rewards in return,
typically in the form of transaction fees and newly minted coins of the native cryptocurrency
in proportion to their individual resources in the network [33, 14, 17].

The total amount of these resources, their distribution among miners, and the consistency in
which they are provided are fundamental factors for the reliability of all blockchain supported
applications. However, despite their importance, miners’ incentives to allocate and distribute

1

 
 
 
 
 
 
their resources among various blockchains are yet far from understood. Existing studies [31, 34,
28, 53] and online resources that reﬂect investor and blockchain related sentiment [42, 54], all
provide compelling evidence that the allocation of mining resources in the blockchain economy
is a still largely under-explored area.

Model and contribution Motivated by the above, we study a game-theoretic model of the
mining economy (comprising a single or multiple co-existing blockchains) and reason about
miners’ resource allocations. Our starting point is the work of [3] who derive the unique Nash
Equilibrium (NE) allocations under the proportional reward scheme that applies to most Proof
of Work (PoW) and Proof of Stake (Pos) protocols (Theorem 1). Our ﬁrst observation is that
at the predicted NE levels, active miners are still incentivised to deviate (by increasing their
resources) in order to achieve higher relative payoﬀs. While behaving sub-optimally in terms of
their absolute payoﬀs, the loss that a deviating miner incurs to themselves is overcompensated
by a larger market share and a higher loss that is incurred to each other individual miner and
hence, to the rest of the network as a whole (Theorem 6, Corollary 7).

This practice, in which participants of a network cause harm to other participants, even
at some cost to themselves, is known as grieﬁng.1 Our main technical insight is that grief-
ing is closely related to the game-theoretic notion of evolutionary stability. Speciﬁcally, we
quantify the eﬀect of a miner’s deviation via the (individual) Grieﬁng Factors (GF), deﬁned
as the ratios of network (or individual) losses over the deviator’s own losses (Deﬁnition 3),
and show that an allocation is evolutionary stable if and only if all its individual GFs are less
than 1 (Lemma 5).2 We call such allocations (individually) non-griefable (Deﬁnition 4). This
equivalence for homogeneous populations (i.e., for miners having equal mining costs) for which
evolutionary stability is deﬁned. However, as GFs are deﬁned for arbitrary populations (not
necessarily homogeneous), it provides a way to generalize evolutionary stable allocations as in-
dividually non-griefable allocations. Rephrased in this framework, our result states that the NE
allocation is always individually griefable by miners who unilaterally increase their resources
(Theorem 6).

The previous evolutionary argument provides a theoretical explanation for the increasing
dissipation of mining resources (above optimal levels) in PoW protocols and an alternative
rationale for the concentration of mining power in few entities that is observed in both PoW
and PoS protocols [3, 39, 40]. A distinctive feature of this over-mining behavior in comparison
to in-protocol adversarial behavior, e.g., [37, 30, 1, 49], is that it does not directly compromise
the functionality of the blockchain. When a single miner increases their resources, the safety
of the blockchain also increases. However, this practice has multiple negative byproducts as it
generates a trend towards market concentration, dissipation of resources and high entry barriers.

With grieﬁng being a concern for instability at the NE allocations (and increased dissipation
of resources being a concern at the non-griefable or evolutionary stable allocations (Section 2.3,
Proposition 8), it is not immediately clear how to extend this model to study allocation of
resources in the general case of multiple co-existing blockchains. A critical observation is that
these types of equilibria (both Nash and evolutionary stable) are derived in a model in which
individual miners are assumed to inﬂuence aggregate market outcomes with their strategic deci-
sions. However, despite the currently observed concentration of mining power, this assumption
may not be satisﬁed in practice as mining networks continue to expand and is certainly not sat-
isﬁed in the originally envisioned architecture in which (permissionless) mining networks were
expected to function in a genuinely decentralized fashion [43]. Thus, the question that naturally

1The term grieﬁng originated in multiplayer games [55] and was recently introduced in blockchain related

settings by [13].

2An allocation has a grieﬁng factor of k if a miner can reduce others’ payoﬀs by $k at a cost of $1 to themselves

by deviating to some other allocation.

2

arises is whether we can reason about the stability of the ecosystem under the assumption of
negligible individual inﬂuence.

To address this question, we extend the initial model to the multiple blockchain setting
under the assumption that each miner has a ﬁnite capacity of resources that is negligible in
comparison to collective network levels (large market assumption [21]). Under these conditions
grieﬁng becomes irrelevant. The ensuing model is mathematically equivalent to a Fisher market
(or production economy [10]) in which miners correspond to buyers, goods to revenues from
diﬀerent cryptocurrencies and prices to aggregate allocated resources (Section 3). We endow
this model with quasi-constant elasticity of substitution (quasi-CES) utilities (parameterized
by a miner-speciﬁc substitution parameter ρi) to account for risk diversiﬁcation and various
degrees of resource mobility between diﬀerent blockchain technologies.

∈

Our main theoretical contribution in this part is the derivation of a Proportional Response
(PR) protocol that converges to the market equilibria of the model for any quasi-CES utilities
with substitution parameters ρi
[0, 1] (Theorem 9). The protocol requires as inputs only
local (i.e., miner speciﬁc) and collective (total revenues and resources, e.g., estimated hashrate)
information which make it particularly suitable for such distributed economies from a practical
perspective (Algorithm 1).3 By contrast, we show that learning protocols that are commonly
used in game-theoretic settings, such as Gradient Ascent (GA) and Best Response (BR) dynam-
ics, exhibit chaotic or highly irregular behavior (Section 3.3). This is true even for large number
of miners and, in the case of GA, even for relative small step-size (as long as miners are assumed
to have inﬂuence via non-binding capacities on collective outcomes). Interestingly, these ﬁnd-
ings establish another source of instability of the equilibria of the game-theoretic model that is
diﬀerent in nature from the previous ones (algorithmic versus incentive driven).

Case Study: We use the (PR) dynamics to study the equilibrium allocations of a representa-
tive miner in a blockchain economy with four popular cryptocurrencies: Bitcoin, Bitcoin Cash,
Ethereum and Litecoin (Section 4). Our empirical results, that are based on empirical data
(daily revenues and hashrates over a period of three years), suggest that the Proportional Prof-
itability Ratio (PPR), which is deﬁned as the normalized ratio of revenue over expenses for each
coin (Deﬁnition 10), is an important metric to understand miner’s behavior in the blockchain
economy. Speciﬁcally, risk neutral miners (equivalently, miners with full mobility of resources)
allocate all their resources to the coin with the highest PPR. However, miners with intermediate
values of risk neutrality (restricted mobility of resources), distributes their resources precisely
in proportion to the PPR of the four available coins (Figure 5). Our ﬁndings suggest that
restricted mobility of resources (as enforced by the use of diﬀerent mining technologies in the
various blockchains), risk diversiﬁcation and growth of the mining networks, are all factors that
contribute to the stability of the emerging blockchain ecosystem.

Other Related Works Our paper main contributes to the growing literature on miners’
incentives in blockchain networks. The two derived sources of instabilities, grieﬁng and ﬂuc-
tuating allocations derived by greedy update rules, complement existing results concerning
inherent protocol instabilities [8, 15, 25], manipulation of the diﬃculty adjustment in PoW pro-
tocols [31, 34, 44] or adversarial behavior [37, 30, 11, 1]. Our ﬁndings in the case of a single
blockchain support the accumulating evidence that decentralization is threatened in permission-
less blockchains [3, 39, 40] and oﬀer an (evolutionary) explanation for the increased dissipation of
resources (above optimal levels) that is observed in the main PoW mining networks [22, 52, 23].
Our market model approach, provides the ﬁrst (to our knowledge) modeling and equilibrium

3While our techniques to derive the (PR) protocol and establish its convergence are based on well-known
approaches, the result is novel and may be of independent theoretical interest in the study of exchange [56, 19]
or distributed production economies [10].

3

analysis of the blockchain mining economy as a whole (multiple co-existing blockchains) and
contributes to the related literature that is still under early development [50, 7, 53].

Technically, our models mirror the model of single or multiple simultaneous Tullock contests
(equivalently all-pay auctions) and the model of Fisher markets with quasi-CES utilities. Thus,
some elements of the paper, in particular the notion of grieﬁng factors and the convergence
of the PR dynamics, may be of independent interest in the study of general evolutionary,
game-theoretic models (in arbitrary non-homogeneous populations) for decentralized markets
[41, 26, 36], and in distributed production economies, respectively [56, 18, 27].

Outline Section 2 presents the strategic model (in a single blockchain) and studies the no-
tions of grieﬁng and evolutionary stability. Section 3 comprises the market model (with multiple
blockchains and negligible individual capacities), the proportional response protocol and a com-
parison between the two models (Section 3.3). Section 4 contains the empirical results and
Section 5 concludes the paper. All proofs of Sections 2 and 3 are deferred to Appendices A
and B, respectively.

2 Allocation of Mining Resources: Strategic Model

For the ﬁrst part of our analysis, we will study mining in a single blockchain. We will introduce
some additional notation in Section 3, when we will study the allocation of mining resources in
multiple blockchains.

2.1 Model and Nash Equilibrium Allocations

}

{

1, 2, . . . , n

miners who allocate their resources, xi

0, to
We consider a network of N =
mine a blockchain-based cryptocurrency. Each miner i
N has an individual per unit cost
ci > 0. For instance, in Proof of Work (PoW) mining, xi corresponds to TeraHashes per second
(TH/s) and ci to the associated costs (energy, amortized cost of hardware etc.) of producing
a TH/s. We will write x = (xi)i∈N to denote the vector of allocated resources of all miners,
and X = (cid:80)n
i=1 xi to denote their sum. We will also write v to denote the total miners’ revenue
(coinbase transaction reward plus transaction fees) in a ﬁxed time period (typically an epoch or
a day in the current paper). The market share of each miner is proportional to their allocated
resources (as is the case in most popular cryptocurrencies, see e.g., [43, 13]). Thus, the utility
of each miner is equal to

≥

∈

v

cixi,

ui (xi, x−i) =

xi
xi + X−i
where, following standard conventions, we write x−i = (xj)j(cid:54)=i and X−i := (cid:80)
j(cid:54)=i xj to denote
the vector and the sum, respectively, of the allocated resources of all miners other than i. In
equation (1), we may normalize v to 1 without loss of generality (by scaling each miner’s utility
by v). We will refer to the game, Γ = (N, (ui, ci)i∈N ), deﬁned by the set of miners N , the utility
N as the mining game Γ. As usual, a Nash
functions ui, i
equilibrium is a vector x∗ of allocations x∗

N and the cost parameters ci, i

N , such that

for all i

(1)

N,

−

∈

∈

∈

i , i

∈

ui (x∗)

≥

(cid:0)xi, x∗

−i

(cid:1) ,

ui

for all xi

= x∗

i , for all miners i

N.

∈

(2)

In terms of its Nash equilibrium, this game has been analyzed by [3]. To formulate the equilib-
rium result, let

ci,

(3)

n
(cid:88)

1

i=1

c∗ :=

n

1

−

4

(cid:54)
and assume for simplicity that c∗ > ci for all i
N . This is a participation constraint and implies
that we consider only miners that are active in equilibrium. The unique Nash equilibrium of Γ
is given in Theorem 1.

∈

Theorem 1 ([3]). At the unique pure strategy Nash equilibrium of the mining game Γ, miner
ci/c∗) /c∗. In particular, the total mining resources, X ∗,
i
allocated at equilibrium are equal to X ∗ = 1/c∗.

N allocates resources x∗

i = (1

−

∈

Theorem 1 is our starting point. Our ﬁrst task is to test the robustness of this Nash equilib-
rium in the context of decentralized and potentially adversarial networks. For instance, while
the Nash equilibrium outcome is well-known to be incentive compatible, an adversary may
decide to harm others by incurring a low(er) cost to himself. In decentralized networks, the
(adversarial) practice of harming others at some lesser own loss is termed grieﬁng [13]. As
we show next, grieﬁng is indeed possible in this case: a miner who increases their allocated
resources above the Nash equilibrium prediction forgoes some of their own proﬁts but incurs a
(considerably) larger loss to the rest of the network. Our proof exploits a link between grieﬁng
and the fact that the Nash equilibrium is not evolutionary stable. To make these statements
explicit, we ﬁrst provide the relevant framework.

2.2 Evolutionary Stable Allocations and Grieﬁng Factors

For this part, we restrict attention to homogeneous populations of miners, for which the notion
of evolutionary stability is deﬁned. Speciﬁcally, we consider a mining game Γ = (N, (ui, ci)i∈N )
N . We will write
such that all miners have equal costs, i.e., ci = c for some c > 0, for all i
Γ = (N, c, ui∈N ) and we will call this mining game symmetric. In this case, c∗ = n
n−1 c and each
miner allocates x∗
n2c resources in the unique (symmetric) pure strategy Nash equilibrium of
Γ. The symmetry assumption implies that ui(x) = uj (x) for all i, j
N and for any allocation
x = (xi)i∈N . The following deﬁnition of evolutionary stability due to [47, 35] requires the weaker
condition that ui(x) = uj (x) for all i, j
N and for any symmetric allocation x = (xi)i∈N . In
the case of the utility functions in equation (1), these two conditions are equivalent.

i = n−1

∈

∈

∈

Deﬁnition 2 (Evolutionary Stable Allocation (ESA), [47, 35]). Let Γ = (N, (ui, ci)i∈N ) be a
mining game such that ui
0. Then,
a symmetric vector xESA = (cid:0)xESA(cid:1)

uj for all i, j

≡

≥

∈

N for all symmetric allocation proﬁles x
i∈N is an evolutionary stable allocation (ESA) if
(cid:0)xi, xESA

= xESA.

for all j

N, xi

= i

(cid:1) ,

(cid:0)xi, xESA

−i

(cid:1) < uj

ui

(4)

−i

∈

∈

N, j

−i ) with j

= i, of any miner i

Deﬁnition 2 implies that an ESA, xESA, maximizes the relative payoﬀ function, ui(xi, xESA
−i )

−
uj(xi, xESA
N . Intuitively, if all miners select an ESA, then
∈
there is no other allocation that could give an individually deviating miner a higher relative
payoﬀ. In other words, if a symmetric allocation xi = x, i
N , is not ESA, then there exists a
= x, so that a single miner who deviates to x(cid:48) has a strictly higher payoﬀ (against x of the
x(cid:48)
other n
2 other miners who
allocate x and the deviator who allocates x(cid:48)) [35].

1 miners) than every other miner who allocates x (against n

−

−

∈

As mentioned above, evolutionary stability is deﬁned for homogeneous populations and may
be, thus, of limited applicability for practical purposes. To study non homogeneous populations,
we will need a proper generalization of evolutionary stability. To achieve this, we introduce the
notion of grieﬁng factors which, as we show, can be used to formulate evolutionary stability
and which is readily generalizable to arbitrary settings. This is done next.4

4In the current setting, the assumption of symmetric miners (miners with equal or at least almost equal cost)
is less restrictive than it seems. The participation constraint ci < c∗ = 1
j=1 cj implies that the costs, ci’s,
n−1
of the active miners in equilibrium cannot be too diﬀerent. This is formalized in Observation 1 in Appendix A.

(cid:80)n

5

(cid:54)
(cid:54)
(cid:54)
(cid:54)
Deﬁnition 3 (Grieﬁng Factors (GF)). Let Γ = (N, (ui, ci)i∈N ) be a mining game (not neces-
sarily symmetric) in which all miners are using the allocations x∗
N , and suppose that a
i , i
i . Then, the grieﬁng factor, (GF), of strategy xi with
miner i deviates to an allocation xi
respect to strategy x∗ is deﬁned by

= x∗

∈

GFi

(cid:0)(cid:0)xi, x∗

−i

(cid:1) ; x∗(cid:1) :=

loss incurred to the network
deviator’s own loss

=

(cid:80)n

j(cid:54)=i

(cid:2)uj (x∗)
ui (x∗)

−
ui

(cid:0)xi, x∗
−i
(cid:1)

uj
(cid:0)xi, x∗

−i

(cid:1)(cid:3)

,

(5)

−

for all i
can be then deﬁned as the supremum over all possible deviations, i.e.,

N , where loss is the same as utility loss. The GF with respect to an allocation x∗

∈

GF (x∗) = sup

i∈N,xi≥0

(cid:8)GFi

(cid:0)(cid:0)xi, x∗

−i

(cid:1) ; x∗(cid:1)(cid:9) .

We can also deﬁne the individual grieﬁng factor of strategy xi with respect to strategy x∗ against
a speciﬁc miner j, as follows

GFij

(cid:0)(cid:0)xi, x∗

−i

(cid:1) ; x∗(cid:1) :=

loss incurred to miner j
deviator’s own loss

=

uj (x∗)
ui (x∗)

uj
ui

−
−

(cid:0)xi, x∗
(cid:0)xi, x∗

(cid:1)
−i
(cid:1)

−i

(6)

for all j
GFi

= i
(cid:0)(cid:0)xi, x∗

−i

N , where as in equation (5), loss is a shorthand for utility loss. It holds that

∈
(cid:1) ; x∗(cid:1) = (cid:80)

j(cid:54)=i GFij

(cid:0)(cid:0)xi, x∗

−i

(cid:1) ; x∗(cid:1).

As mentioned in Deﬁnition 3, the numerator of GF corresponds to the loss of all miners other
than i incurred by i’s deviation to xi, whereas the denominator corresponds to miner i’s own
loss (cf. equation (5)). In decentralized mechanisms (e.g., blockchains), this metric captures an
important incentive compatibility condition: namely, a mechanism is safe against manipulation
if the costs of an attack exceed its potential beneﬁts to the attacker [12, 4, 32]. This motivates
to deﬁne an allocation as griefable if its GF is larger than 1.

Deﬁnition 4 (Griefable and Individually Griefable Allocations). An allocation x∗ = (x∗
is griefable if GF(x∗) > 1. An allocation x∗ = (x∗
i, j
∈
than 1.

i )i∈N
i )i∈N is individually griefable if there exist
(cid:1) ; x∗(cid:1) is larger

0, such that the individual grieﬁng factor GFij

(cid:0)(cid:0)xi, x∗

N and xi

= x∗

i ≥

−i

An important observation is that the condition of evolutionary stability can be expressed
In particular, an allocation xESA is evolutionary
in terms of the individual grieﬁng factors.
stable if and only if all individual grieﬁng factors are less than 1, i.e., if and only if xESA is not
individually griefable. This is formalized in Lemma 5.

Lemma 5. Let Γ = (N, c, ui∈N ) be a symmetric mining game. Then, an allocation xESA =
(cid:0)xESA(cid:1)

i∈N is evolutionary stable if and only if xESA is not griefable, i.e., iﬀ
= xESA.

(cid:1) ; xESA(cid:1) < 1,

(cid:0)(cid:0)xi, xESA

for all j

N, xi

GFij

= i

(7)

−i

∈

uj for all symmetric x and all i, j

N by assumption, we may write equations

Proof. Since ui
(4) as

for all j
∈
for any miner i

= i

≡

∈

(cid:1)

ui

(cid:0)x(cid:48), xESA
−i
N and for all x(cid:48)

(cid:0)xESA(cid:1) < uj
−
= xESA. Since ui
N , we may rewrite the previous equation as

(cid:1)
uj
−
(cid:1) < ui

ui

∈
(cid:0)x(cid:48), xESA
−i
(cid:0)x(cid:48), xESA
−i

(cid:0)xESA(cid:1) ,
(cid:0)xESA(cid:1) for all x

= xESA and

1 >

uj
ui

(cid:0)x(cid:48), xESA
(cid:1)
−i
(cid:0)x(cid:48), xESA
−i

(cid:1)

−

−

(cid:0)xESA(cid:1)
uj
ui (xESA)

= GFij

(cid:0)(cid:0)x(cid:48), xESA
−i

(cid:1) ; xESA(cid:1) ,

for all j

= i

∈

N and for all x(cid:48)

= xESA. This proves the claim.

6

(cid:54)
(cid:54)
(cid:54)
(cid:54)
(cid:54)
(cid:54)
(cid:54)
(cid:54)
(cid:54)
(cid:54)
Thus, Lemma 5 suggests that an allocation is evolutionary stable if and only if it is in-
dividually non-griefable. According to Deﬁnition 4, this is weaker than an allocation being
non-griefable, which is satisﬁed if for all i
N of all individual grieﬁng
factors Gij is less than 1.

N , the sum over j

= i

∈

∈

2.3 Grieﬁng in Mining Games

While immediate, Lemma 5 provides a handy way to generalize the notion of evolutionary
stability. In particular, in general, non-homogeneous populations, we may impose the stability
requirement that an allocation be individually non-griefable or, as mentioned above, the stronger
requirement that an allocation be non-griefable. This brings us to the main result of this section,
which suggests that the Nash equilibrium of Theorem 1 is griefable for both symmetric and
asymmetric populations of miners. In particular, assuming that the network has stabilized at
the x∗ equilibrium allocation, a strategic miner may attack other miners simply by increasing
their own mining resources. Speciﬁcally, if a miner i deviates to a resource allocation x∗
i + ∆ for
(n/∆). Such a deviation reduces the attacking
some ∆ > 0, then this creates a GF equal to
O
miner’s own payoﬀ but, as we will see, it decreases the payoﬀ of all other miners by a larger
margin. This improves the attacking miner’s relative payoﬀ and hence their long-term survival
chances in the blockchain mining network. This is formalized in Theorem 6. All proofs of
Section 2 are presented in Appendix A.

Theorem 6. Let Γ = (N, (ui, ci)i∈N ) be a mining game and let x∗ = (x∗
strategy Nash equilibrium.

i )i∈N be its unique pure

(i) In a homogeneous population, i.e., when all miners have the same cost, ci = c > 0 for
n2c is not evolutionary stable. In
= x∗, so that an individually deviating miner i increases their

N , the unique Nash equilibrium allocation x∗ = n−1

∈

all i
particular, there exists x(cid:48)
(cid:1)
relative payoﬀ ui

(cid:0)x(cid:48), x∗
−i

(cid:0)x(cid:48), x∗
−i

(cid:1).

uj

−

(ii) In a general, non-homogeneous population, the pure Nash equilibrium x∗ is griefable. In
N ,

N are using their equilibrium allocations x∗

particular, assuming that all miners j
the deviation x∗

i + ∆, for some ∆ > 0, of miner i

∈

N , has a grieﬁng factor

j , j

∈

GFi

(cid:0)(cid:0)x∗

i + ∆, x∗
−i

(cid:1) ; x∗(cid:1) =

∆

·

∈
n
1
−
(cid:80)n
j=1 cj

(n/∆) .

=

O

In particular, at the Nash equilibrium allocation, x∗, any single miner may increase their
mining resources and improve their utility in relative terms.

(iii) In both the homogeneous and non-homogeneous populations, the unique individually non-
is the Nash equilibrium

griefable allocation, y = (yi)i∈N , satisﬁes yi = n
N .
allocation of miner i

i , where x∗
i

n−1 x∗

∈

→

∈ {

1, 2, . . . , 100, . . .

0. However, as ∆

Remark. Part (ii) of Theorem 6 reveals one shortcoming of the current deﬁnition of GF. Specif-
0, the absolute total
ically, the GF may grow arbitrarily large as ∆
harm to the network is negligible (even if the relative loss is very large as expressed by the
GF). One possibility to circumvent this problem is to consider discrete increments for ∆, i.e.,
as in e.g., [17]. Alternatively, one may combine GF with the absolute
∆
loss of the network to obtain a more reliable measure. We do not go deeper into this question
at the current moment since it seems to be better suited for a standalone discussion. We leave
this analysis as an intriguing direction for future work.
Remark. Part (iii) of Theorem 6 allows us to reason about the overall expenditure at the
unique individually non-griefable allocation y = (yi)i∈N . In the general case, that of a non-
homogeneous population, the total expenditure at an individually non-griefable allocation y =

→

}

7

(cid:54)
(cid:54)
(yi)i∈N is

E (y) =

(cid:88)

i∈N

ciyi =

n

−
n

1

(cid:88)

i∈N

cix∗

i = n

(cid:34)
1

(n

1)

−

−

(cid:35)

,

(cid:80)
((cid:80)

i c2
i
i ci)2

≤

−

i = (1

ci/c∗)/c∗ and yi = n

1 with equality if and only if ci = c for all i

where we used that x∗
n−1 x∗ by Theorem 1 and part (iii) of
Theorem 6, respectively. Cauchy-Schwarz inequality implies that ((cid:80)
i ci)2
i which
N . Thus, the expenditure in
yields that E(y)
the individually non-griefable allocation is always less than or equal to the aggregate revenue
generated by mining, with equality only if the population is homogeneous. In that case, i.e., if
N , then the unique individually non-griefable
all miners have the same cost ci = c for all i
allocation is also evolutionary stable (cf. Lemma 5), i.e., y = xESA with xESA = 1
nc for all
N (by part (iii) and symmetry). In all cases, the total expenditure E (x∗), at the unique
i
Nash equilibrium x∗ must be equal to E (x∗) = n−1
n E (y) and hence it less than the expenditure
at the unique individually non-griefable allocation and strictly less than the generated revenue
(which is equal to 1).

n (cid:80)

i c2

≤

∈

∈

∈

In the proof of Theorem 6, we have actually shown something slightly stronger. Namely,
miner i’s individual loss due to its own deviation to x∗
i + ∆ is less than the loss of each other
miner j provided that ∆ is not too large. In other words, the individual grieﬁng factors with
respect to the Nash equilibrium allocation are all larger than 1 and hence, the Nash equilibrium
is also individually griefable. This is formalized next.

Corollary 7. For every miner j
1, i.e., the loss of miner j is larger than the individual loss of miner i.

j , it holds that GFij

N such that ∆ < x∗

∈

(cid:0)(cid:0)x∗

i + ∆, x∗
−i

(cid:1) ; x∗(cid:1) >

Theorem 6 and Corollary 7 imply that miners are incentivised to exert higher eﬀorts than
the Nash equilibrium predictions. The eﬀect of this strategy is twofold: it increases their own
relative market share (hence, their long-term payoﬀs) and harms other miners. The notable
feature of this over-mining attack (or deviation from equilibrium) is that it does not undermine
the protocol functionality directly. As miners increase their constructive eﬀort to, security
of the blockchain network also increases. This diﬀerentiates the blockchain paradigm from
conventional contests in which grieﬁng occurs via exclusively destructive eﬀort or deliberate
sabotage against others [38, 2].

However, the over-mining strategy has implicit undesirable eﬀects. As we show next, it leads
to consolidation of power by rendering mining unproﬁtable for miners who would otherwise
remain active at the Nash equilibrium and by raising entry barriers for prospective miners. This
undermines the (intended) decentralized nature of the blockchain networks and creates long-
term risks for its sustainability as a distributed economy. Again, this is a distinctive feature
of decentralized, blockchain-based economies: for the security of the blockchain to increase, it
is necessary that the aggregate resources and their distribution among miners both increase
(which is not the case in the over-mining scenario).

Proposition 8. Let Γ = (N, (ui, ci)i∈N ) be a mining game with unique Nash equilibrium alloca-
tion x∗ = (x∗
N are allocating their equilibrium resources
= i
j , and that miner i allocates x∗
x∗

∈
i + ∆ resources for some ∆ > 0. Then

i )i∈N . Assume that all miners j

(i) the maximum increase ∆i of miner i before miner i’s payoﬀ becomes zero is ∆i = 1

ci −

1
c∗ .

(ii) the absolute losses of all other miners j

cix∗
i .

= i are maximized when ∆ = ∆i and are equal to

Proposition 8 quantiﬁes (i) the maximum possible increase, ∆i, in the mining resources of
a single miner before their proﬁts hit the break-even point (i.e., become zero), and (ii) the

8

(cid:54)
(cid:54)
absolute losses of all other miners when miner i increases their resources by some ∆ up to ∆i.
As intuitively expected, more eﬃcient miners can cause more harm to the network (part (i))
and in absolute terms, this loss can be up to the equilibrium spending cix∗
i of miner i, assuming
that miner i does not mine at a loss (part (ii)). While not surprising these ﬁndings provide a
formal argument that cost asymmetries can be severely punished by more eﬃcient miners and
that eﬃcient miners can grow in size leading ultimately to a centralized mining network.

3 From Oligopoly to Market Equilibria

The previous analysis hinges on an important assumption: namely, that each individual miner
has a signiﬁcant eﬀect on aggregate market outcomes. The utility function in equation (1)

ui (xi, x−i) =

xi
X

v

−

cixi,

for all i

N,

∈

assumes that the allocation, xi, of miner i aﬀects the aggregate market resources, since X =
xi + X−i (in the denominator of the proportional rewards of each miner i
N ). However,
in large networks, individual resources are typically (or ideally) negligible in comparison to
aggregate resources. With this in mind, the results that we derive with these utility functions
can be interpreted as the existence of a positive feedback loop towards centralization: if miners
are relative large to the size of the whole economy then, there are intrinsic motives for miners
to cause grieﬁng to their peers which leads to further concentration of resources in few miners.

∈

This observation bring us to the next part of our analysis which concerns the study of same
problem under the assumption that each miner has an individually insigniﬁcant inﬂuence on
aggregate market outcomes. To study this setting in full generality, i.e., in the presence of
multiple co-existing blockchain networks in which the miners may distribute their resources, we
ﬁrst introduce some additional notation.

3.1 Additional Notation: Large Market Assumption and Quasi-CES Utilities

}

{

}

1, 2, . . . , n

1, 2, . . . , m

denote the set of miners.

As in Section 2.1, let N =

In addition, let M =
denote a set of m mineable cryptocurrencies. Here the word mineable refers
{
to various possible mechanisms, such as Proof of Work, Proof of Stake or any other mining
M denote the
mechanism that requires proof (expense) of scarce resources. Let cik, i
cost of miner i to allocate one unit of resource in cryptocurrency k. Finally, let vk denote the
aggregate revenue generated by cryptocurrency k
M . Typically, vk refers to the newly minted
coins and total transaction fees paid to miners within the study period. In the case of multiple
blockchains, miner i’s utility in equation (1) can be generalized in a straightforward way to the
following quasi-linear utility

N, k

∈

∈

∈

ui (xi, x−i) =

m
(cid:88)

k=1

xik
xik + (cid:80)

j(cid:54)=i xjk

vk

−

m
(cid:88)

k=1

cikxik.

(8)

i∈N xik to denote the aggregate allocated resources in blockchain k

We will write Xk := (cid:80)
∈
M . To make comparisons among diﬀerent cryptocurrencies, it will be convenient to express
all allocations in common monetary units that denote spending rather than individual (and
potential diﬀerent) physical resources. Accordingly, let bik := cikxik denote the spending of
miner i for cryptocurrency k
M . A strategy of miner i will be described by a non-negative
vector bi = (bik)k∈M . Using this notation, we can write equation (8) as

∈

ui (bi, b−i) =

m
(cid:88)

k=1

vk
cikXk ·

cikxik

m
(cid:88)

k=1

−

9

cikxik =

m
(cid:88)

k=1

vikbik

m
(cid:88)

k=1

−

bik,

(9)

∈

∈

N and k
where vik := vk/Xkcik for any i
is the total spending of the network of cryptocurrency k, then vik := (vk/bk)
i

M . Equivalently, if ¯ck is such that bk := ¯ckXk
(¯ck/cik) for any

N, k

M .

∈

∈

·

The utility function in equation (9) assumes that miners are risk-neutral and that resources
can be reallocated eﬀectively in all networks. However, in practice this is not always the case.
First, mining is largely an act of investment and as such it is subject to (considerable) risk.
Each individual cryptocurrency market is subject to both volatile returns (ﬂuctuations in the
vik’s) and uncertainty concerning its future development and success. Thus, it is reasonable
for individual miners to hedge their risks by diversifying their resources. Second, mining of a
speciﬁc cryptocurrency typically requires a commitment in the invested resources (in form of
mining equipment or staked capital). While in some cases, mobility of these resources can be
assumed to be frictionless between diﬀerent blockchains (e.g., when they use the same mining
algorithm and technology), in general, this is not always the case.

To address these considerations, we introduce (as is standard in economics) diminishing
marginal returns from the mining revenues of each individual coin. This is captured via concave
utility functions of the form ui (x) = xρi, for some 0 < ρi
N which when
aggregated, amount to a quasi Constant Elasticity of Substitution (quasi-CES) utility function.
Using this abstraction, miner i’s utility of equation (9) becomes

1, for each miner i

≤

∈

ui (bi, b−i) =

(cid:33)1/ρi

(vikbik)ρi

(cid:32) m
(cid:88)

k=1

m
(cid:88)

k=1

−

bik,

(10)

→

Note that for ρi = 1, we recover the quasi-linear utility of equation (9). The parameters ρi can
be interpreted both as the risk proﬁle of the miner and the mobility of their resources (depending
on whether we view it as utility from consumption or utility from production). For instance,
for ρi
0, the utility (10) becomes a Cobb-Douglas utility which corresponds to maximum
risk diversiﬁcation (or equivalently minimal mobility of resources). In the other extreme, q = 1
implies that the miner is risk neutral and can freely move their resources to the most proﬁtable
(in some correct sense) cryptocurrency. Intermediate values 0 < ρi < 1 yield intermediate risk
proﬁles and degrees of mobility of resources between diﬀerent blockchains. We further discuss
this topic in our case study in Section 4.

∈

Finally, we assume that each miner i

N has a total monetary capacity, Ki > 0, of resources
and make the following important assumption. If the total capacity, Ki, of each individual miner
N is not very large compared to the total allocated resources in each cryptocurrency, Xk :=
i
∈
(cid:80)n
i=1 xik, in each cryptocurrency, then miner i may neglect the eﬀect of her own allocation,
N takes the total mining
xik, in the total mining resources. In other words, each miner i
capacity, Xk of each cryptocurrency k
M , as given in her strategic decision making. This
implies that vik does not depend on the decision of miner i (nor on the decision of any other
miner j
N ) and hence, the utility function in equation (10) is only a function of the bi’s.
We will denote the blockchain mining economy deﬁned by the utilities in equation (10) with
Γ = (cid:0)N, M, (ui, vik, ρi, Ki)i∈N

(cid:1).

∈

∈

∈

3.2 Proportional Response Dynamics and Equilibrium Allocations

The assumption that each individual miner has negligible inﬂuence in aggregate market out-
comes has far-reaching implications in the equilibrium analysis of the blockchain mining econ-
omy Γ. Under this assumption, Γ can be abstractly seen as a Fisher market with quasi-CES
utilities. This provides an alternative approach to determine its equilibria via the convex opti-
mization tools that have been developed for the analysis of such markets [24, 6, 20, 19].

Based on this framework, we derive a Proportional Response (PR) update rule that converges
(0, 1]. Since the utilities in our

to the equilibrium of this economy for any selection of the ρ(cid:48)
is

∈

10

case are quasi-CES, we need to adapt existing techniques (which are available only for linear or
quasi-linear cases). This is topic of this section which leads to the main result that is stated in
Theorem 9. To focus on the interpretation of the results in the blockchain context rather than
on the techniques, we defer all proofs to Appendix B. However, we note that the convergence
result of the PR dynamics applies to any Fisher markets with quasi-CES utilities and may be
thus, of independent interest.

To formulate the proportional response dynamics, we ﬁrst introduce some minimal additional
k=1 uik (t) denote
notation. At time step t
miner i’s utility from cryptocurrency k and aggregate utility (before accounting for expenses),
respectively. Let also wi (t) := Ki
0
and let ˜Ki (t) := Ki
N . Then, for the utility function in (10), we
deﬁne the Proportional Response (PR) Dynamics as follows

0, let uik (t) := (vikbik (t))ρi and ui (t) := (cid:80)m

k=1 bik (t) denote miner i’s unspent budget at time t

(cid:80)m
wi (t))ρi−1 for each i

(Ki

−

≥

−

≥

∈

·

bik (t + 1) := Ki

·

max

uik (t)
ui (t) , ˜Ki (t)
}
{

.

(PR)

A pseudocode implementation for the (PR) dynamics is provided in Algorithm 1.

Algorithm 1 PR-QCES Protocol
Input (network): network hashrate, Xk, and revenue, vk, of each cryptocurrency k
∈
Input (miner): miner i’s unit cost, cik, budget capacity, Ki, and utility parameter, ρi.
Output: equilibrium spending (allocation) bik, k
1: Initialize: spending (allocation) bik > 0 for all k
2: loopover t
0 till convergence
3:

M for each miner i

M .

N .

∈

∈

∈

≥
for each miner i
procedure Auxiliary((Xk, vk, cik)k∈M , Ki, ρi)

N do

∈

M .

vik
wi
˜Ki
uik

←
←
←
←

(cid:80)

k∈M bik

vk/Xkcik
Ki
−
wi)ρi−1
Ki (Ki
−
(vikbik)ρi and ui

←

(cid:80)

k∈M uik

((cid:46)) utilities before subtracting costs

((cid:46)) not invested capital

procedure PR-Dynamics((uik)k∈M , ui, Ki, ˜Ki)

if ui > ˜Ki then

bik

else

←

uikKi/ui

uikKi/ ˜Ki

bik
(cid:80)

←
j∈N bjk

Xk

←

((cid:46)) update network hashrate and repeat

4:

5:

6:

7:

8:

9:

10:

11:

12:

13:

14:

An important feature of the PR update rule is that it has low informational requirements.
It uses as inputs only observable information at network level (aggregate revenue and hashrate)
and local information at a miner’s level (individual capacity and mining cost). Thus, it provides
a protocol that is both feasible to implement in practice and relevant for this particular type of
large, distributed economics.

≥

Intuitively, the update rule PR suggests the following.

If the revenue of miner i is high
˜Ki, then miner i will reallocate all their resources in round
enough at round t, i.e., if ui
t + 1 in proportion to the generated revenues, uik/ui, in round t. By contrast, if ui < ˜Ki, then
miner i will behave cautiously and allocate only a fraction of their resources. This fraction is
precisely equal to the generated revenue at round t, i.e., ui (t) again in proportion to the revenue
generated by each cryptocurrency k
M . The important property of the PR dynamics is that
they converge to the set of equilibrium allocations for any initial strictly positive allocation
vector. This is statement of Theorem 9 which is our main theoretical result.

∈

11

Theorem 9 (Mining Resources Equilibrium Allocation). For any positive initial allocation,
b0 > 0, the (PR)-dynamics converge to the set of equilibrium allocations, b∗, of the blockchain
mining economy Γ.

Theorem 9 will be our main tool to study equilibria in the blockchain mining economy.
Before we proceed with our empirical results in Section 4, a comparison between the oligopoly
model of Section 2.3 and the market model of Section 3 is due.

3.3 Comparing the two Models: Nash vs Market equilibria

When comparing the two models that we considered thus far, the oligopoly model in Section 2.3
and the market model in Section 3, we make the following two main observations.

Bounded versus Unbounded Capacities The ﬁrst observation concerns the capacities of
individual miners and the inﬂuence that they have on aggregate outcomes. In the former case,
that of the oligopoly model, miners are assumed to have large capacities of resources which
if used strategically, aﬀect the welfare of other miners. This generates adversarial incentives
that lead to grieﬁng and destabilize the Nash equilibrium outcome. At the unique evolutionary
stable equilibrium, grieﬁng is not possible, however, at that equilibrium, miners fully dissipate
the reward and cause further consolidation of power that raises entry barriers to prospective
entrants. Thus, the system enters a positive feedback loop towards market concentration.

By contrast, in the latter case, that of the market model, miners are assumed to have individ-
ually negligible resources in comparison to aggregate market levels. Moreover, the comparison
of instances with few large miners to instances with many small miners, necessitates the intro-
duction of capacity limits to the model. Thus, miners cannot arbitrarily increase their allocated
resources to harm others (and beneﬁt themselves in relative terms). This renders grieﬁng ir-
relevant and is the decisive factor that ultimately leads to stabilization (see [45] for a related
argument). One may argue that the oligopoly model is closer to what we observe in practice,
whereas the market model is the ideal model that was envisioned in the paper by Nakamoto
that sparked the interest in the blockchain-based economies [43].

Equilibrium versus Learning Dynamics The second observation concerns the discrepancy
between the static approach in the oligopoly model and the dynamic approach in the market
model. The question that naturally arises is whether typical learning dynamics converge to
the equilibrium of the oligopoly model. The answer to this question is negative and highlights
the necessity of the market assumption (individually negligible resource capacities) to obtain a
stable update rule that converges to equilibrium.

To see this, we consider two greedy update rules, Gradient Ascent and Best Response dy-
namics that are frequently used in such strategic interactions. Recall that the utility of miner
i in the strategic (single blockchain) model is given by

ui (xi, X−i) =

xi

x1 + X−i −

cixi, for all xi

0

≥

and i = 1, 2, . . . , n, where X−i = (cid:80)
update rule is given by

j(cid:54)=i xj (cf. equation (1)). Thus, the Gradient Ascent (GA)

xt+1
i = xt

i + θi

∂
∂xt
i

(cid:0)xt
i

ui

(cid:1) = xt

i + θi

(cid:34)

X t
−i
1 + X t
−i

(cid:0)xt

(cid:1)2 −

(cid:35)

ci

,

(GA)

for all i = 1, 2, . . . , n, where θi is the learning rate of miner i = 1, 2. The bifurcation diagrams in
Figure 1 show the attractor of the dynamics for diﬀerent values of the step-size (assumed here

12

to be equal for all miners for expositional purposes) and for diﬀerent numbers of active miners,
n = 2, 5 and 10, with ci = 1 for all i. The blue dots show the aggregate allocated resources for
400 iterations after a burn-in period of 50 iterations (to ensure that the dynamics have reached
the attractor).

All three plots indicate that the GA dynamics transition from convergence to chaos for
relative small values of the step-size.
Interestingly, as the number of miners increases, the
instabilities emerge for increasingly smaller step-size. This is in sharp contrast to the (PR)
dynamics and their convergence to equilibrium under the large market assumption. The reason
that a growing number of miners does not convey stability to the system is precisely because the
miners are not assumed to have binding capacities. As miners act greedily, their joint actions
drive the system to extreme ﬂuctuations and the larger their number, the easier it is for these
ﬂuctuations to emerge. Finally, while convergence is theoretically established for small step-
sizes in all cases, such step-sizes correspond to very slow adaption and are of lesser practical
relevance.

Figure 1: Bifurcation diagrams for the Gradient Ascent dynamics with n = 2, 5, 10 miners with
respect to the learning parameter θ. As the number of miners grows, the dynamics become
chaotic for even lower step-sizes.

We obtain a qualitatively similar result for the best response dynamics. The Best Response

(BR) update rule is given by

xt+1
i =

(cid:113)

X t

−i/ci

X t

−i,

−

for all i = 1, 2, . . . , n.

(BR)

As above, the bifurcation diagrams in Figure 2 show the aggregate allocated mining resources
for n = 2, 5 and 10 miners. The horizontal axis (i.e., the bifurcation parameter) is now the cost
asymmetry between the representative miner and all other miners which are assumed to have
the same cost (again only for expositional purposes). The plots suggest that the stability of the
dynamics critically depend on the parameters of the system with chaos emerging for various
conﬁgurations.

In sum, the above results indicate the importance of the large market assumption, i.e., that
miners’ individual allocations do not aﬀect aggregate network levels, in the stability of the
blockchain ecosystem. As showcased by the GA and BR dynamics, if miners’ decisions aﬀect
the decisions of other miners and if miners can adjust (increase or decrease) their capacities
to optimize their proﬁts, then common learning dynamics can exhibit arbitrary behavior. In-
stead of converging to the Nash equilibrium (or to some other stable outcome), the aggregate
allocations may oscillate between extreme values or exhibit chaotic trajectories, with adverse
eﬀects on the reliability of the supported applications and the value of the blockchain-based
cryptocurrency. Along with our earlier ﬁndings about grieﬁng, these results paint a more com-
plete picture about the various reasons that can destabilize permissionless blockchain networks
when there is concentration of mining power.

13

Figure 2: Bifurcation diagrams for the Best Response dynamics with n = 2, 5, 10 miners with
respect to the miners cost asymmetry. The dynamics become chaotic typically for intermediate
values of cost asymmetry.

4 Case Study: Allocation of Mining Resources in the Wild

Due to its low informational requirements, the PR protocol allows us to reduce the degrees of
freedom that accompany synthetic data (such as estimates about the numbers of active miners,
their individual capacities, mining costs etc.), and adopt a “single miner’s” perspective against
real data when we study equilibrium allocations in the actual blockchain mining economy. Since
the PR protocol converges to the equilibrium allocations for a wide range of quasi-CES utilities
(as deﬁned by parameters ρi
(0, 1]), we can reason about the eﬀects of risk diversiﬁcation and
resource mobility on miners’ equilibrium allocations. This allows us to extend existing results
[53, 44].

∈

4.1 Data Set and Experimental Setting

We apply the above theoretical framework in the following case study in which we consider four
Proof of Work blockchains (cryptocurrencies): Bitcoin (BTC), Bitcoin Cash (BCH), Ethereum
(ETH) and Litecoin (LTC). Our data set consists of the total daily network hashrate in Tera-
Hashes per second (TH/s) and the aggregate daily miners’ revenue in USD (newly minted coins
and transaction fees) the for the four selected cryptocurrencies in the period between 1/1/2018
and 10/18/2020. The data are visualized in Figures 3 and 4.

Figure 3: Daily estimated hashrate (measured in TeraHashes per day (TH/day)) in the four
cryptocurrencies: Bitcoin (BTC), Bitcoin Cash (BCH), Ethereum (ETH) and Litecoin (LTC).
Source: glassnode.com.

To apply the PR-QCES protocol, we need to derive an estimation for the cost of a represen-
tative miner to produce one unit of resource, i.e., one TH/s for a whole day, in each network.
This is done as follows. For each cryptocurrency, we collect data regarding the state of the art
(or most popular) mining equipment for each calendar year in the considered time period. The
data (and their sources) are presented in Table 1.

14

01/201807/201802/201908/201903/202009/20200.511.5·108HashrateinTH/dayBitcoin(BTC)01/201807/201802/201908/201903/202009/2020246·106BitcoinCash(BCH)01/201807/201802/201908/201903/202009/2020150200250300Ethereum(ETH)01/201807/201802/201908/201903/202009/2020100200300400500Litecoin(LTC)Figure 4: Daily miners’ revenue (aggregate value in USD of newly minted coins and transaction
fees) in the four cryptocurrencies: Bitcoin (BTC), Bitcoin Cash (BCH), Ethereum (ETH) and
Litecoin (LTC). Source: glassnode.com.

Bitcoin/
Bitcoin
Cash

Ethereum

Litecoin

Year Model

2018
2019
2020

2018
2019
2020

Ebang Ebit E11+
Antminer s17
Antminer s19 Pro

PandaMiner B5+
PandaMiner B7
PandaMiner B9

2018 Moonlander 2 L3++
2019
2020

FutureBit Apollo LTC
Antminer s19 Pro

2035W
2520W
3250W

37 TH/s
56 TH/s
110 TH/s

Price (P ) Hashrate (Hs) Power (W )
$2,494
$2,100
$2,507
$2,916
$2,035
$3,280
$65
$500
$300

5 MH/s
120 MH/s
580 MH/s

110 MH/s
230 MH/s
330 MH/s

800W
1150W
950W

10W
200W
1200W

Table 1: Mining equipment. The selected models correspond to the state of the art or most
popular mining rigs for each cryptocurrency. The lifespan, Ls, of all model is assumed to be
2 years. Sources: (asicminervalue.com) for Bitcoin and Bitcoin Cash, (pandaminer.com) for
Ethereum, and (exodus.io) for Litecoin.

The hardest part in the data collection process is the estimation of a single average value for
the average network cost per kWh. According to [22, 23] prices per kWh follow a seasonal trend
(due to weather dependent ﬂuctuations, e.g., in China) and a constant to slightly decreasing
overall trend between 2018 and 2020. The exact values that we used in the experiments are in
Table 2. However, as argued by the referenced papers, these estimates should be accepted with
caution.

Using the above ﬁgures, the cost, c, to produce one TH/s for a whole day is given by the

following formula

c =

365

P
Ls

·

·

+

Hs

(W/1000)

c(kW h)

·
Hs

24

,

·

where, as in Tables 1 and 2, P denotes the acquisition price of the model in USD, Ls the useful
lifespan (assumed to be 2 years for all models), Hs the eﬀective hashrate of the model (in TH/s),
W its power consumption (in Watt) and c(kW h) the average cost per kWh in USD.

The above estimations provide the necessary inputs to run the PR-QCES protocol (cf. Inputs
in Algorithm 1) for a single miner with cost c per kWh and obtain their equilibrium allocations
given the network hashrates and aggregate revenue for each coin. Throughout, we assume that
the miner has a ﬁxed capacity, Ki, which is a small percentage of the aggregate mining resources
in all networks. Diﬀerent values of Ki yield the same equilibrium allocations and are hence not
presented here. In each experiment, we use a diﬀerent parameter, ρi, in the quasi-CES utility of
miner i. This allows us to reason about the eﬀects of a miner’s risk proﬁle or under a diﬀerent

15

01/201807/201802/201908/201903/202009/202012345·107Miners’RevenueBitcoin(BTC)01/201807/201802/201908/201903/202009/20200246·106BitcoinCash(BCH)01/201807/201802/201908/201903/202009/20200123·107Ethereum(ETH)01/201807/201802/201908/201903/202009/202001234·106Litecoin(LTC)Average price per kWh (c(kW h))

01-06/2018
$0.06

07-12/2018
$0.05

01-06/2019
$0.04

07-12/2019
$0.05

01-06/2020
$0.03

07-12/2020
$0.02

Table 2: Average prices per kWh. The ﬁgures are updated every six months (i.e., 01-06 and
07-12 in each year) and concern a global estimated average. They are mainly based on [22, 23].
Scattered online resources oﬀer similar estimates but we refrain from recommending these ﬁgures
as precise. As cautioned by the referenced papers, there are several practical reasons for which
these ﬁgures may have limited accuracy, e.g., diﬀerent bargains achieved by individual (large)
miners, lack of transparency in the exact energy source (renewable or electricity), spatial and
seasonal ﬂuctuations in prices (even within the same country as in the USA or China) etc. In
the context of the current empirical study, the exact trend and values of electricity prices do
not aﬀect the interpretation of the results.

interpretation, of the degree of mobility of their resources, against real data.

4.2 Empirical Results

Our results are summarized in Figure 5. Each row of Figure 5 corresponds to a diﬀerent
parameter ρi and each panel corresponds to each of the four considered coins: Bitcoin (BTC),
Bitcoin Cash (BCH), Ethereum (ETH) and Litecoin (LTC). In each panel, the blue dotted lines
depict the equilibrium allocations of the miner for each day (derived by running the PR-QCES
dynamics) for that coin and the red lines depict the proportional proﬁtability ratio of the coin
which turns out to play an important role in the interpretation of the results. Formally, the
proportional proﬁtability ratio of a coin is deﬁned as follows.

Deﬁnition 10 (Proﬁtability and Proportional Proﬁtability Ratios). Let vk denote the aggregate
network revenue and bk the aggregate network spending (e.g., hashrate times cost to produce
this hashrate) for mining cryptocurrency k = 1, 2, . . . , n in a speciﬁc time period (e.g., one day).
The proﬁtability ratio, (P F Rk), of cryptocurrency k is deﬁned by

P F Rk :=

total network revenue from mining coin k
total network spending for mining coin k

=

vk
bk

.

(11)

The proportional proﬁtability ratio, (P P Rk), of cryptocurrency k is deﬁned as the ratio of P F Rk
over the sum of the P F Rk’s of all considered cryptocurrencies, i.e.,

P P Rk :=

P F Rk
j=1 P F Rj

(cid:80)n

=

vk/bk
j∈M vj/bj

(cid:80)

.

(12)

We this deﬁnition at hand, we return to the interpretation of the results in Figure 5. The
ﬁrst row shows the equilibrium allocations of a risk averse miner with ρi = 0.01. Such a miner
essentially ignores the input data and distributes (approximately) evenly their resources among
the available coins (for ρi = 0, the distribution would be exactly uniform, i.e., 1/4 for each
coin). The second row shows the equilibrium allocations of a miner with ρi = 0.5. This value
of parameter ρi suggests that the miner is still willing to diversify their risks, albeit to a lesser
extent. From a production perspective, ρi = 0.5 implies an intermediate degree in the mobility
of resources. Such a degree may be viewed as realistic in practical applications since there exist
some blockchains that use compatible technology (e.g., Bitcoin and Bitcoin Cash) and certain
mining models which are easily switchable between diﬀerent mining algorithms. Interestingly,
this case reveals the empirical ﬁnding that the a miner with parameter ρi = 0.5 allocates their
resources precisely according to the P P Rk of each coin k = 1, 2, 3, 4 (cf. Deﬁnition 10). Thus,

16

Figure 5: Equilibrium allocations (blue dotted lines) and proportional proﬁtability ratios
(P P Rk’s) (red lines) for the four coins of the case study. Each row corresponds to a diﬀer-
ent parameter ρi of the miner’s quasi-CES utility. When ρi = 0.01, the miner distributes
equally their resources among the available networks (risk aversion). For ρi = 0.5, the equilib-
rium allocations exactly match the P P Rk’s (cf. Deﬁnition 10). For ρ = 1, which corresponds
to risk neutrality (with full mobility of resources), the miner allocates all their resources to the
cryptocurrency with the highest P P Rk.

such a miner can fully determine their allocations from observable network data (aggregate
revenues and hashrate) and local information (their own mining cost and capacity).

The importance of the P P Rk is further highlighted in the last row of the matrix which shows
the equilibrium allocations for a risk neutral miner with ρi = 1. Such a miner allocates on each
day (or period) the entirety of their resources to the cryptocurrency with the highest P P Rk.
This approach is consistent with full or instant mobility of resources and can be, thus, observed
in practice only between cryptocurrencies that use the same mining technology such as Bitcoin

17

and Bitcoin Cash. From a modeling perspective, it highlights the importance of considering
quasi-CES utilities instead of quasi-linear utilities in the case of multiple co-existing blockchains.
From an analytical perspective, it also highlights how the use of diﬀerent mining technologies
by diﬀerent blockchains conveys stability to the blockchain ecosystem as a whole by acting as a
barrier in arbitrary reallocations of resources. Finally, the fourth row includes an intermediate
case with ρi = 0.75.

5 Conclusions

In this paper, we studied resource allocation in blockchain mining networks. We identiﬁed two
very diﬀerent reasons for instabilities in the mining networks when mining power is consoli-
dated in few miners: grieﬁng (which generalizes the notion of evolutionary stability to non-
homogeneous populations) and instability of dynamic allocation rules (such as gradient ascent
or best response). Along with existing in-protocol attacks, such as selﬁsh mining or manipu-
lation of the diﬃculty adjustment in Proof of Work blockchains ([33, 30, 14] and [31, 34, 44]),
these results paint a more complete picture of the inherent instabilities of these decentralized
networks in practice. By contrast, under a large market assumption, which can be met in prac-
tice as more miners enter the blockchain ecosystem, we show that these problems disappear and
we establish convergence of a natural proportional response protocol to non-griefable market
equilibria. The protocol has low informational requirements which make it suitable for such
decentralized settings and converges to the market equilibria for a wide range of miners’ risk
diversiﬁcation and various degrees of resource mobility between diﬀerent blockchain networks.
Our theoretical and empirical results suggest that decentralization, risk diversiﬁcation among
diﬀerent blockchains and restricted mobility of resources (as enforced by the use of diﬀerent min-
ing technologies among diﬀerent blockchains) are all factors that contribute to the stabilization
of this otherwise volatile and unpredictable ecosystem.

Acknowledgments

This research is supported in part by NRF2019-NRF-ANR095 ALIAS grant, grant PIE-SGP-
AI-2018-01, NRF 2018 Fellowship NRF-NRFF2018-07, AME Programmatic Fund (Grant No.
A20H6b0151) from the Agency for Science, Technology and Research (A*STAR) and the Na-
tional Research Foundation, Singapore under its AI Singapore Program (AISG Award No:
AISG2-RP-2020-016).

References

[1] C. Alkalay-Houlihan and N. Shah. The Pure Price of Anarchy of Pool Block Withholding
Attacks in Bitcoin Mining. AAAI Conference on Artiﬁcial Intelligence, AAAI-19, 33(1),
2019.

[2] J.A. Amegashie. Productive versus destructive eﬀorts in contests. European Journal of

Political Economy, 28(4):461–468, 2012.

[3] N. Arnosti and S. M. Weinberg. Bitcoin: A Natural Oligopoly. In Avrim Blum, editor,
10th Innovations in Theoretical Computer Science Conference (ITCS 2019), volume 124,
pages 5:1–5:1, 2018.

[4] R. Auer. Beyond the Doomsday Economics of Proof-of-Work in Cryptocurrencies. Discus-
sion Paper DP13506, London, Centre for Economic Policy Research, February 2019.

18

[5] I. Bentov, A. Gabizon, and A. Mizrahi. Cryptocurrencies without proof of work.

In
Jeremy Clark, Sarah Meiklejohn, Peter Y.A. Ryan, Dan Wallach, Michael Brenner, and
Kurt Rohloﬀ, editors, Financial Cryptography and Data Security, pages 142–157, Berlin,
Heidelberg, 2016. Springer Berlin Heidelberg.

[6] B. Birnbaum, N. R. Devanur, and L. Xiao. Distributed Algorithms via Gradient Descent

for Fisher Markets. In EC’11, pages 127–136. ACM, 2011.

[7] G. Bissias, B. N. Levine, and D. Thibodeau. Greedy but Cautious: Conditions for Miner

Convergence to Resource Allocation Equilibrium, 2019.

[8] J. Bonneau. Why Buy When You Can Rent? Financial Cryptography and Data Security,

pages 19–26, Berlin, Heidelberg, 2016. Springer Berlin Heidelberg.

[9] J. Bonneau, A. Miller, J. Clark, A. Narayanan, J. A. Kroll, and E. W. Felten. SoK: Research
Perspectives and Challenges for Bitcoin and Cryptocurrencies. 2015 IEEE Symposium on
Security and Privacy, pages 104–121, 2015.

[10] S. Brˆanzei, R. Mehta, and N. Nisan. Universal Growth in Production Economies.

In

NeurIPS 2018, volume 31, pages 1973–1973, 2018.

[11] J. Brown-Cohen, A. Narayanan, A. Psomas, and S. M. Weinberg. Formal Barriers to
Longest-Chain Proof-of-Stake Protocols. In Proceedings of the 2019 ACM Conference on
Economics and Computation, EC ’19, page 459–473, New York, NY, USA, 2019. ACM.

[12] E. Budish. The Economic Limits of Bitcoin and the Blockchain. Working Paper 24717,

National Bureau of Economic Research, June 2018.

[13] V. Buterin. A grieﬁng factor analysis model, 2018. ethresear.ch [Online; accessed: 11-

February-2021].

[14] V. Buterin, D. Reijsbergen, S. Leonardos, and G. Piliouras. Incentives in ethereum’s hybrid
casper protocol. In 2019 IEEE International Conference on Blockchain and Cryptocurrency
(ICBC), pages 236–244. IEEE, USA, May 2019.

[15] M. Carlsten, H. Kalodner, S. M. Weinberg, and A. Narayanan. On the Instability of
Bitcoin Without the Block Reward. In Proceedings of the 2016 ACM SIGSAC Conference
on Computer and Communications Security, CCS ’16, page 154–167. ACM, 2016.

[16] G. Chen and M. Teboulle. Convergence Analysis of a Proximal-Like Minimization Algo-

rithm Using Bregman Functions. SIAM J. Optim., 3(3):538–543, 1993.

[17] X. Chen, C. Papadimitriou, and T. Roughgarden. An Axiomatic Approach to Block Re-
wards. In Proceedings of the 1st ACM Conference on Advances in Financial Technologies,
AFT ’19, pages 124–131, New York, NY, USA, 2019. ACM.

[18] Y. K. Cheung, R. Cole, and N. R. Devanur. Tatonnement beyond gross substitutes?
Gradient descent to the rescue. Games and Economic Behavior, 123:295–326, 2020.

[19] Y. K. Cheung, R. Cole, and Y. Tao. Dynamics of Distributed Updating in Fisher Markets.

In EC’18, pages 351–368, New York, NY, USA, 2018. ACM.

[20] R. Cole, N. R. Devanur, V. Gkatzelis, K. Jain, T. Mai, V. V. Vazirani, and S. Yazdanbod.
Convex Program Duality, Fisher Markets, and Nash Social Welfare. In EC’17, pages 459–
460, 2017.

[21] R. Cole and Y. Tao. Large Market Games with Near Optimal Eﬃciency. In EC’16, pages

791–808, New York, NY, USA, 2016. ACM.

[22] A. De Vries. Bitcoin’s Growing Energy Problem. Joule, 2(5):801–805, 2018.

[23] A. De Vries. Bitcoin’s energy consumption is underestimated: A market dynamics ap-

proach. Energy Research & Social Science, 70:101721, 2020.

19

[24] N. R. Devanur. Fisher Markets and Convex Programs. Unpublished manuscript, 2009.

[25] Nicola Dimitri. Bitcoin mining as a contest. Ledger, 2:31–37, 2017.

[26] D. DiPalantino and M. Vojnovic. Crowdsourcing and All-Pay Auctions. In EC ’09, pages

119–128, 2009.

[27] K. Dvijotham, Y. Rabani, and L. J. Schulman. Convergence of incentive-driven dynamics

in Fisher markets. Games and Economic Behavior, 2020.

[28] D. Easley, M. O’Hara, and S. Basu. From mining to markets: The evolution of bitcoin

transaction fees. Journal of Financial Economics, 134(1):91–109, 2019.

[29] E. Eisenberg and D. Gale. Consensus of Subjective Probabilities: The Pari-Mutuel Method.

Ann. Math. Statist., 30(1):165–168, 1959.

[30] I. Eyal and E. G. Sirer. Majority is not enough: Bitcoin mining is vulnerable. Commun.

ACM, 61(7):95–102, 2018.

[31] A. Fiat, A. Karlin, E. Koutsoupias, and C. Papadimitriou. Energy Equilibria in Proof-of-

Work Mining. In EC’19, pages 489–502, New York, NY, USA, 2019. ACM.

[32] N Gandal and J. Gans. More (or Less) Economic Limits of the Blockchain. Discussion

Paper DP14154, London, Centre for Economic Policy Research, November 2019.

[33] J. Garay, A. Kiayias, and N. Leonardos. The Bitcoin Backbone Protocol: Analysis and Ap-
plications. In E. Oswald and M. Fischlin, editors, Advances in Cryptology - EUROCRYPT
2015, pages 281–310, Berlin, Heidelberg, 2015. Springer Berlin Heidelberg.

[34] G. Goren and A. Spiegelman. Mind the Mining. In Proceedings of the 2019 ACM Conference
on Economics and Computation, EC ’19, pages 475–487, New York, NY, USA, 2019. ACM.

[35] B. Hehenkamp, W. Leininger, and A. Possajennikov. Evolutionary equilibrium in Tullock
contests: spite and overdissipation. European Journal of Political Economy, 20(4):1045–
1057, 2004.

[36] J. J. Horton and L. B. Chilton. The Labor Economics of Paid Crowdsourcing. In Pro-
ceedings of the 11th ACM Conference on Electronic Commerce, EC ’10, pages 209–218,
2010.

[37] A. Kiayias, E. Koutsoupias, M. Kyropoulou, and Y. Tselekounis. Blockchain Mining
In Proceedings of the 2016 ACM Conference on Economics and Computation,

Games.
EC ’16, page 365–382, New York, NY, USA, 2016. ACM.

[38] K. A. Konrad. Sabotage in Rent-Seeking Contests. Journal of Law, Economics, & Orga-

nization, 16(1):155–165, 2000.

[39] Y. Kwon, J. Liu, M. Kim, D. Song, and Y. Kim. Impossibility of Full Decentralization
in Permissionless Blockchains. In Proceedings of the 1st ACM Conference on Advances in
Financial Technologies, AFT ’19, pages 110–123, New York, NY, USA, 2019. Association
for Computing Machinery.

[40] N. Leonardos, S. Leonardos, and G. Piliouras. Oceanic Games: Centralization Risks and
Incentives in Blockchain Mining. In P. Pardalos, I. Kotsireas, Y. Guo, and W. Knotten-
belt, editors, Mathematical Research for Blockchain Economy, pages 183–199, Cham, 2020.
Springer International Publishing.

[41] D. Levin, K. LaCurts, N. Spring, and B. Bhattacharjee. Bittorrent is an Auction: Analyzing
and Improving Bittorrent’s Incentives. SIGCOMM Comput. Commun. Rev., 38(4):243–254,
2008.

[42] M. Shen. Crypto Investors Have Ignored Three Straight 51% Attacks on ETC, 2020.

coindesk.com [Online; accessed 11-February-2021].

20

[43] S. Nakamoto. Bitcoin: A Peer-to-Peer Electronic Cash System, 2008.

[Accessed: 31-08-

2020].

[44] S. Noda, K. Okumura, and Y. Hashimoto. An Economic Analysis of Diﬃculty Adjustment
Algorithms in Proof-of-Work Blockchain Systems. In Proceedings of the 21st ACM Con-
ference on Economics and Computation, EC ’20, page 611, New York, NY, USA, 2020.
Association for Computing Machinery.

[45] T. Puu. On the stability of Cournot equilibrium when the number of competitors increases.

Journal of Economic Behavior & Organization, 66(3):445–456, 2008.

[46] Reuters Staﬀ. Crypto market cap surges above $1 trillion for ﬁrst time, 2021. reuters.com

[Online; accessed 11-February-2021].

[47] Mark E. Schaﬀer. Evolutionarily stable strategies for a ﬁnite population and a variable

contest size. Journal of Theoretical Biology, 132(4):469–478, 1988.

[48] V. I. Shmyrev. An algorithm for ﬁnding equilibrium in the linear exchange model with

ﬁxed budgets. Journal of Applied and Industrial Mathematics, 3(4):505, Dec 2009.

[49] R. Singh, A. D. Dwivedi, G. Srivastava, A. Wiszniewska-Matyszkiel, and X. Cheng. A game
theoretic analysis of resource mining in blockchain. Cluster Computing, 23(3):2035–2046,
Sep 2020.

[50] A. Spiegelman, I. Keidar, and M. Tennenholtz. Game of Coins, 2018.

[51] State of the Dapps. Explore Decentralized Applications, 2021. stateofthedapps.com [Online;

accessed 11-February-2021].

[52] C. Stoll, L. Klaaßen, and U. Gallersd¨orfer. The Carbon Footprint of Bitcoin. Joule,

3(7):1647–1661, 2019.

[53] J. Sun, P. Tang, and Y. Zeng. Games of Miners. In Proceedings of the 19th International
Conference on Autonomous Agents and MultiAgent Systems, AAMAS ’20, pages 1323–
1331, Richland, SC, 2020. International Foundation for Autonomous Agents and Multiagent
Systems.

[54] Wave Financial LLC. Ethereum 2.0 staking, a worthwhile investment?, 2021. cityam.com

[Online; accessed 11-February-2021].

[55] Wikipedia contributors. Griefer — Wikipedia, the free encyclopedia. https://en.wikipedia.
[Online; accessed 11-February-

org/w/index.php?title=Griefer&oldid=1006081077, 2021.
2021].

[56] L. Zhang. Proportional response dynamics in the Fisher market. Theoretical Computer
Science, 412(24):2691–2698, 2011. Selected Papers from 36th International Colloquium on
Automata, Languages and Programming (ICALP 2009).

A Omitted Proofs and Materials from Section 2.3

Observation 1. Let cmax := maxi∈N
tive miners and let ¯c = 1
n
(cid:80)n

(cid:80)n

i=1 ci denote the average mining cost. Then, the variance σ2

denote the maximum mining cost among all ac-
c :=

ci
{

}

¯c) of the per unit mining costs of all active miners in equilibrium satisﬁes

i=1 (ci

−

σ2
c < cmax

(cid:18) n
n

−

1 −

(cid:19)

cmax

.

Proof. Since ci < 1 for all i
which is naturally satisﬁed), it holds that (cid:80)n

N (recall that this equivalent to ci < v prior to normalization
i=1 ci. Along with the deﬁnition of c∗,

i < (cid:80)n

i=1 c2

∈

21

cf. (3), this yields

σ2
c =

n

1

1

−

1

n
(cid:88)

i=1

n
(cid:88)

¯c)2 =

(ci

−

n

1

−
n

ci

−

1

−

1

1

n

(cid:32)

n

c2
i −
(cid:33)2

1
n (n

1)

−

(cid:18)
1

= c∗

n
(cid:88)

i=1

n
(cid:88)

1

i=1

ci

(cid:32) n
(cid:88)

(cid:33)2

ci

i=1

n

−
n

−

1

c∗

(cid:19)

.

≤

n

1

i=1

−
−
The participation constraint, ci < c∗ for all i
Moreover, c∗ = 1
n−1
inequality, we obtain that

i=1 ci < n

(cid:80)n

N , implies, in particular, that cmax < c∗.
n−1 cmax. Substituting these in the last expression of the above

∈

c < c∗
σ2

(cid:18)
1

n

−
n

−

(cid:19)

1

c∗

<

n

−

1

n

(cid:18)
1

cmax

n

1

−
n

−

(cid:19)

cmax

= cmax

(cid:18) n
n

−

1 −

(cid:19)

cmax

.

To gain some intuition about the order of magnitude of the bound derived in Observation 1
in real applications, we consider the BTC network. Currently, the cost to produce 1 TH/s
consistently for a whole day is approximately equal to $0.08. On the other hand, the total
miners’ revenue per day is in the order of magnitude of $10million. Thus, in normalized units
(as the ones that we work here), ci would be equal to ci = 0.08/10m = $8e

09.

−

Proof of Theorem 6. Part (i). For ∆ < x∗, Corollary 7 implies that

uj (x∗)

−

uj

(cid:0)x∗ + ∆, x∗
−i

(cid:1) > ui (x∗)

(cid:0)x∗

i + ∆, x∗
−i

(cid:1) .

ui

−

Since ui (x∗) = uj (x∗) for all i, j
(cid:1) > 0 as claimed.
(cid:0)x∗
follows that ui
uj
−
Part (ii). The own loss of miner i by deviating to allocation x∗
their equilibrium allocations x∗

N by the symmetry assumption, ci = c > 0 for all i
∈
(cid:0)x∗ + ∆, x∗
−i

i + ∆, x∗
−i

(cid:1)

−i is equal to

i + ∆ when all other miners use

N , it

∈

ui (x∗)

−

(cid:0)x∗

i + ∆, x∗
−i

(cid:1) =

ui

xi
∗
X ∗ −

cix∗

i −

(cid:20) x∗
i + ∆
X ∗ + ∆ −

ci (x∗

i + ∆)

(cid:21)

(cid:20)

= ∆

ci

X ∗
−i
X ∗ (X ∗ + ∆)

(cid:21)

.

−

By Theorem 1, X ∗ = 1/c∗, and x∗
ci/ (c∗)2. Substituting in the right hand side of the above equality yields

ci/c∗) /c∗, which implies that X ∗

i = (1

−

−i = X ∗

ui (x∗)

−

(cid:0)x∗

i + ∆, x∗
−i

(cid:1) = ∆

ui

(cid:34)

ci/ (c∗)2
(1/c∗ + ∆) /c∗

ci

−

(cid:35)

=

∆2cic∗
1 + c∗∆

.

Similarly, the loss incurred to any miner j

= i by miner i’s deviation is equal to

uj (x∗)

−

uj

(cid:0)x∗

i + ∆, x∗
−i

(cid:1) =

=

x∗
j
X ∗ −
(cid:16)
1
c∗

1

cjx∗

j −
(cid:17)
cj
c∗

·

−

(cid:20)

(cid:21)

cjx∗
j

x∗
j
X ∗ + ∆ −
∆
(1/c∗ + ∆) /c∗ =

=

x∗
j ∆
X ∗ (X ∗ + ∆)
cj)

∆ (c∗

−
1 + c∗∆

.

x∗
i =

−

(13)

(14)

Since cj < c∗ for all miners j
strictly positive loss). Summing over all j

∈

N , the last expression is always positive (i.e., all miners incur a

N with j

= i, equation (14) yields

∈

n
(cid:88)

j(cid:54)=i

(cid:2)uj (x∗)

−

uj

(cid:0)x∗

i + ∆, x∗
−i

(cid:1)(cid:3) =

∆
1 + c∗∆

=

∆
1 + c∗∆



1) c∗

(n

−



1) c∗

(n

−

(cid:88)

j(cid:54)=i

n
(cid:88)

j=1

−

−



cj





cj + ci

 =

∆ci
1 + c∗∆

,

(15)

22

(cid:54)
(cid:54)
where the last equality holds by deﬁnition of c∗, cf. (3). Combining equations (13) and (15),
we obtain

GF (cid:0)x∗; (cid:0)x∗

i + ∆, x∗
−i

(cid:1)(cid:1) =

(cid:18) ∆ci

1 + c∗∆

(cid:19)(cid:30)(cid:18) ∆2cic∗
1 + c∗∆

(cid:19)

=

1
c∗∆

,

which concludes the proof of part (ii).
Part (iii). For an allocation y = (yi)i∈N to be individually non-griefable it must hold that

uj (y)

−

uj (yi + ∆, y−i) < ui (y)

ui (yi + ∆, y−i) ,

−

= j and for all ∆ > 0. This yields the inequality (cf. equation (14) in the

for all i, j
proof of part (ii))

∈

N with i

yj∆
Y (Y + ∆)

(cid:20)

< ∆

ci

−

Y

yi

−
Y (Y + ∆)

(cid:21)

,

for each i, j

N, ∆ > 0,

∈

which after some trivial algebra can be equivalently written as

ci (Y + ∆) Y > Y + yj

yi,

for each i, j

N, ∆ > 0.

∈

−

Since the left hand side is increasing in ∆ and since the above must hold for each ∆ > 0, it
suﬃces to prove the inequality for ∆ = 0 in which case it must hold with equality. This gives
the condition

ciY 2 = Y + yj

yi,

for each i, j

N,

−

∈

which can be now solved for the individually non-griefable allocation y = (yi)i∈N . Summing
over j

N yields

= i

∈

or equivalently

1)ciY 2 = (n

(n

−

−

(cid:20)

1)Y + Y

yi

−

−

(n

−

1)yi,

for each i

N,

∈

yi = Y

1

n

1

−
n

−

(cid:21)

ciY

,

for each i

N.

∈

(16)

Summing equation (16) over all i yields

(cid:34)

Y = Y

n

(cid:35)

n

1

Y

−
n

−

(cid:88)

i∈N

ci

which we can solve for Y to obtain that Y =
can be written as

1
c∗ .
Substituting back in equation (16) yields the unique allocations yi

n
1
−
(cid:80)
i∈N ci

Y =

1 ·

1 ·

−

−

=

n

n

n

n

(cid:80)

n
i∈N ci

. Using the notation of equation (3), this

yi =

(n

(cid:20)
1

n
1)c∗

−

(n

1)ci

−
n

(n

(cid:21)

=

n
1)c∗

n

n

1

−

−
ci/c∗) /c∗ is the Nash equilibrium allocation for each i

−

−

(1

ci/c∗) /c∗ =

n

−

n

x∗
i ,

1

where x∗
This concludes the proof of part (iii).

i = (1

−

N (cf. Theorem 1).

∈

Proof of Corollary 7. By equations (13) and (14), the inequality
(cid:0)x∗

(cid:1) > ui (x∗)

uj (x∗)

i + ∆, x∗
−i

(cid:0)x∗

uj

ui

i + ∆, x∗
−i

(cid:1)

−

−

is equivalent to

∆ (c∗

cj)

−
1 + c∗∆

>

∆2cic∗
1 + c∗∆ ⇐⇒

c∗

−

cj > ∆cic∗

23

(cid:54)
(cid:54)
Since ci < c∗ by assumption, and x∗
inequality satisﬁes

j = 1
c∗

(cid:0)1

−

cj
c∗

(cid:16)

1
ci

1

−

(cid:17)

cj
c∗

>

(cid:16)

1

1
c∗

−

(cid:17)

cj
c∗

= x∗
j .

∆ <

(cid:16)

1

1
ci

(cid:17)

.

cj
c∗

⇐⇒
(cid:1) by Theorem 1, the right hand side of the last

−

This implies that ∆ < x∗
proof.

j is suﬃcient for the initial inequality to hold which concludes the

Proof of Proposition 8. Part (i). Let ∆i > 0 be such that uj

(cid:0)x∗

i + ∆1, x∗
−i

(cid:1) = 0. Then

uj

(cid:0)x∗

i + ∆1, x∗
−i

(cid:1) = 0 =

⇒

=

⇒

=

⇒

Since X ∗ = 1

c∗ by Theorem 1, it follows that

cjx∗

j = 0

x∗
j
X ∗ + ∆1 −
1
X ∗ + ∆1
v
∆1 =
cj −

= cj

X ∗

∆i =

(c∗

ci)

−
(cic∗)

=

1
ci −

1
c∗ .

(17)

N .
The previous equation implies in particular that ∆i < ∆j if and only if ci > cj for any i
Part (ii). From equation (15) in the proof of Theorem 6, we know that the absolute losses, L (∆),
of the network when miner i deviates to x∗

i + ∆ are equal to

= j

∈

L (∆) =

n
(cid:88)

j(cid:54)=i

uj (x∗)

−

uj

(cid:0)x∗

i + ∆, x∗
−i

(cid:1) =

∆ci
1 + c∗∆

.

Taking the derivative of the right hand side expression with respect to ∆, we ﬁnd that

∂
∂∆

L (∆) =

∂
∂∆

∆ci
1 + c∗∆

=

ci

(1 + c∗∆)2 > 0.

This implies that the absolute losses of the network are increasing in ∆. Thus, for ∆
they are maximized at ∆ = ∆i where they are equal to

∈

(0, ∆i],

L (∆i) =

(cid:17)

1
c∗

(cid:16) 1
ci −
1 + c∗ (cid:16) 1

ci −

ci

1
c∗

(cid:17) = ci

(1

·

−

ci/c∗) /c∗ = cix∗
i ,

where the last equality follows from Theorem 1.

B Omitted Proofs from Section 3: Proportional Response Dy-

namics with Quasi-CES Utilities

Our proof of Theorem 9 consists of two parts. The ﬁrst involves the derivation of a convex
program that captures the market equilibrium (ME) spending of quasi-CES Fisher markets.
To obtain this part, we utilize the approach of [6, 20, 19]. The second concerns the derivation
of a general Mirror Descent (MD) algorithm which converges to the optimal solution of this
convex program. Then, the last step is to show that the PR-QCES is an instantiation of this
MD algorithm which concludes the proof.

24

(cid:54)
(EG)

duality

(D)

Program

Description

Variables

qj :=ln pj

(SH-QCES)

duality

(TD)

(EG)
(D)
(TD)
(SH-QCES)

Eisenberg-Gale
Dual
Transformed dual
Shmyrev-type

xij = allocations i
pj = prices
qj = ln (pj)
bij = spending

i

N, j
j
j
N, j

M
M
M
M

∈
∈
∈
∈

∈

∈

Figure 6: Convex programs in the derivation of the PR-QCES protocol via the Mirror Descent
(MD) protocol. Starting from the dual (D) of a generalized Eisenberg-Gale convex program
(EG), we go to the transformed dual (TD) and by convex duality to a Shmyrev-type primal
program (SH-QCES) which is hence, equivalent to the initial program (EG). The objective
function of (SH-QCES) for quasi-CES utilities is 1-Bregman convex which implies convergence
of the MD protocol.

Convex Program Framework. The convex optimization framework that we use to capture
the ME spendings in quasi-CES FM is summarized in Figure 6. Our starting point is a convex
program proposed by [24] that captures ME prices of quasi-linear (a sub-case of quasi-CES)
Fisher markets which belongs to type (D) in Figure 6 [29]. From this, we derive a new convex
program with captures the ME spending of the market which belongs to type (SH) [48]. After
obtaining this new convex program, we follow the approach of [19] to modify it so that it
captures the ME spending of a quasi-CES FM. The convex program is

min
b,w,p

F (b, w, p)

s.t.

n
(cid:88)

i=1
m
(cid:88)

j=1

bij = pj,

bij + wi = Ki,

j
∀

∈

M,

N,

i
∀

∈

bij, wi

0,

≥

N, j

i
∀

∈

∈

M,

(SH-QCES)

where F (b, w, p) is the following function:

F (b, w, p) :=

n
(cid:88)

i=1

1
ρi

m
(cid:88)

j=1

−

bij ln[vij(bij)ρi−1] +

m
(cid:88)

j=1

pj ln pj +

n
(cid:88)

(cid:20)

i=1

wi +

ρi

1

−
ρi

(Ki

·

−

wi) ln(Ki

(cid:21)

wi)

.

−

Recall that bij is the spending of agent i on good j, pj := (cid:80)
i bij, and wi is the amount of
budget/capital of agent i left not spent/invested. We start by showing that the solutions of
(SH-QCES) are solutions to our initial problem, i.e., to ﬁnd the market equilibrium spending.

Lemma 11. Each minimum point of (SH-QCES) corresponds to a market equilibrium spending.

Proof. We verify that the optimality condition of the convex program is the same as the market
equilibrium condition.

Optimality Condition. The partial derivatives of F are

∂
∂bij
∂
∂wi

F (b, w) =

F (b, w) =

1
ρi
1
ρi

(cid:18)
1

vij(bij)ρi−1
(pj)ρi

ln

−

(cid:19)

=

1
ρi

(1

−

ln vij) +

ρi

1

−
ρi

·

ln bij + ln pj

(ρi

[1

−

−

1) ln(Ki

wi)] .

−

ρi)/ρi > 0, limbij(cid:38)0

Since (1
. Hence, at each minimum point, bij must be
−∞
strictly positive. In turn, since bij is in the relative interior of the domain at each minimum
point, and we have the constraint (cid:80)m
F (b, w) are identical

Ki, it must hold that all

ln bij =

−

·

j=1 bij

∂
∂bij

1−ρi
ρi

for all j, for each buyer i. Equivalently,

are identical for all j. Moreover,

≤
vij (bij )ρi−1
(pj )ρi

25

• if Ki > wi > 0, then ∂
∂bij
vij (bij )ρi−1

(pj )ρi = (Ki

i.e.,

F (b, w) = ∂
∂wi
wi)ρi−1 for all j;

F (b, w),

−

• if wi = 0, then ∂
∂bij

F (b, w)

∂
∂wi

≤

F (b, w), i.e.,

vij (bij )ρi−1

(pj )ρi ≥

(Ki

−

wi)ρi−1 for all j.

Market Equilibrium Condition. We are interested in the rate the utility changes w.r.t.
changes in spending on good j. Since prices are considered as independent signals in market,


1/ρi−1



ui(xi; p) =

∂
∂xij

the rate is

1
pj ·
hence, limxij(cid:38)0(xij)ρi−1 = +
hence bij too.

∞



m
(cid:88)

j=1

vij(xij)ρi



·

vij(xij)ρi−1
pj

1. Since ρi

−

−

1 < 0 and,

, at the market equilibrium, xij must be strictly positive, and

Thus, at the market equilibrium, each bij is in the relative interior of the domain, and we
ui(xi; p) are identical for all

Ki, it must be the case that 1

∂
∂xij

pj ·

have the constraint (cid:80)
j. Thus,

j bij

≤

vij(xij)ρi−1
pj

=

vij(bij)ρi−1
(pj)ρi

are identical for all j. We denote this (common) value by zi. Then

1
pj ·

∂
∂xij

ui(xi; p) =





m
(cid:88)

j=1



1/ρi−1

zixijpj



zi

·

−

1

There are two cases:

= (zi)1/ρi(Ki

wi)1/ρi−1

−



1/ρi−1

= (zi)1/ρi





m
(cid:88)

j=1

bij



1

−

1.

−

• If Ki > wi > 0, which means wi is in the relative interior of its domain too, then the

above derivative has to be zero, i.e., zi = (Ki

−

wi)ρi−1 for all i;

• If wi = 0, then the above derivative at market equilibrium is positive or zero, i.e., zi

(Ki

−

wi)ρi−1 for all i.

≥

From Mirror Descent to Proportional Response. A useful observation in (SH-QCES)
is that the ﬁrst and second constraints determine the values of pj, wi in terms of bij’s. Thus,
we may rewrite F (b, w, p) as a function of b only. Then the convex program has variables b
only, and the only constraints on b are bij

0 and (cid:80)m

Ki.

≥

j=1 bij

≤

After deriving the convex program with variables b only, we can compute a ME spending by
using standard optimization method like Mirror Descent (MD). To begin, we introduce some
additional notation and recap a general result about MD [16, 6] below.

Let C be a compact and convex set. The Bregman divergence generated by a convex regu-
rint(C) where rint(C) is the

larizer function h is denoted by dh, deﬁned as: for any b
relative interior of C,

C, a

∈

∈

dh(b, a) := h(b)

[h(a) +

h(a), b

(cid:104)∇

] .

a
(cid:105)

−

−

Due to convexity of the function h, dh(b, a) is convex in b, and its value is always non-
a) :=

negative. The Kullback-Leibler divergence (KL-divergence) between b and a is KL(b
(cid:107)

26

j aj, which is same as the Bregman divergence dh with regularizer
bj). For the problem of minimizing a convex function f (b) subject to
C, the Mirror Descent (MD) method w.r.t. Bregman divergence dh is given by the update

−

ln

(cid:80)

j bj

(cid:80)
bj
aj −
·
h (b) := (cid:80)
j(bj
b
rule in Algorithm 2.

∈

·

j bj + (cid:80)
ln bj

Algorithm 2 MD w.r.t. Bregman-divergence dh
1: procedure MirrorDescent(f, C, Γ, dh)
2:

3:

4:

5:

C

Initialize: b◦
∈
while t > 0, bt, b
C do
∈
(cid:10)
g (cid:0)b, bt(cid:1)
f (bt), b
←
∇
bt+1
arg minb∈C{

←

−
g (cid:0)b, bt(cid:1)

}

bt(cid:11) + dh(b, bt)/Γ

In the MD update rule, 1/Γ > 0 is the step-size, which may vary with t (and typically
diminishes with t). However, in the current application of distributed dynamics, time-varying
step-size and thus, update rule is undesirable or even impracticable, since this will require from
the agents/ﬁrms to keep track with a global clock.

A function f is L-Bregman convex w.r.t. Bregman divergence dh if for any b
rint(C), f (a) +

f (a), b

f (a), b

f (a) +

dh(b, a).

f (b)

+ L

a

C and

∈

(cid:104)∇

−

(cid:105) ≤

≤

(cid:104)∇

a
(cid:105)

−

·

a

∈

Theorem 12. Suppose f is an L-Bregman convex function w.r.t. Bregman divergence dh, and
bT is the point reached after T applications of the mirror descent update rule in Algorithm 2
with parameter Γ = 1/L. Then

f (bT )

f (b∗)

−

L

·

≤

d(b∗, b0)/T.

Using the above, we can now show that the objective function of the (SH-QCES) is a 1-
Bregman convex function w.r.t. the KL-divergence (Lemma 13). Subsequently, we show that
PR-QCES can be derived from Algorithm 2 with a suitable choice of Γ. Then, Theorem 12
guarantees that the updates of PR-QCES converge to an optimal solution of the convex pro-
gram (SH-QCES) and Theorem 9 follows.

Lemma 13. The objective function F of (SH-QCES) is a 1-Bregman convex function w.r.t. the
divergence (cid:80)n

KL(x(cid:48)

xi).

i=1

1
ρi ·

i||

To prove Lemma 13, we need the following technical result.

Lemma 14. Let d = (di)N
e = (e11, . . . , e1M1, . . . , eN 1, . . . , eN MN ), e(cid:48) = (e(cid:48)
with non-negative entries, such that for each 1
Then KL (d(cid:48)

i=1, d(cid:48) = (d(cid:48)

KL (e(cid:48)

i)N

d)

(cid:107)

≤

e).
(cid:107)

i=1 be two vectors with non-negative entries, and let
) be two vectors
ik = d(cid:48)
i.

k=1 eik = di and (cid:80)Mi

1M1, . . . , e(cid:48)
N , (cid:80)Mi

11, . . . , e(cid:48)
i

N 1, . . . , e(cid:48)

k=1 e(cid:48)

N MN

≤

≤

Proof. Note that g(q, r) = q ln(q/r) is a a convex function in q, r when q, r > 0. Thus,

N
(cid:88)

(cid:18)

d(cid:48)
i ln

(cid:19)

d(cid:48)
i + di

KL(d(cid:48)

d) =

(cid:107)

=

≤

i=1
N
(cid:88)

i=1

N
(cid:88)

i=1

d(cid:48)
i
di −
(cid:32)

Mi

Mi

·

·

g

1
Mi

1
Mi
Mi(cid:88)

k=1

Mi(cid:88)

k=1

e(cid:48)
ik,

1
Mi

Mi(cid:88)

k=1

eik

(cid:33)

N
(cid:88)

Mi(cid:88)

e(cid:48)
ik +

N
(cid:88)

Mi(cid:88)

i=1

k=1

eik

−
Mi(cid:88)

N
(cid:88)

i=1

k=1
N
(cid:88)

Mi(cid:88)

e(cid:48)
ik +

eik

i=1

k=1

i=1

k=1

g (cid:0)e(cid:48)

ik, eik

(cid:1)

−

27

N
(cid:88)

Mi(cid:88)

=

e(cid:48)
ik ln

i=1
k=1
= KL(e(cid:48)

e),
(cid:107)

e(cid:48)
ik
eik −

N
(cid:88)

Mi(cid:88)

N
(cid:88)

Mi(cid:88)

eik

e(cid:48)
ik +

i=1

k=1

i=1

k=1

where the inequality follows from the convexity of g.

We can now prove Lemma 13. For convenience, we will use the notation z := (b, w, p) and

(cid:0)z(cid:48), z(cid:1) := F (b(cid:48), w(cid:48), p(cid:48))

dF

F (b, w, p)

−

(cid:10)

−

∇

F (b, w, p), (b(cid:48)

b, w(cid:48)

w, p(cid:48)

p)(cid:11)

−

−

−

Proof of Lemma 13. We begin with the following calculations:

(cid:0)z(cid:48), z(cid:1) =

dF

−

+

−

−

=

−

+

n
(cid:88)

i=1
n
(cid:88)

i=1
n
(cid:88)

i=1
n
(cid:88)

i=1
n
(cid:88)

i=1
n
(cid:88)

i=1

(cid:104)

(w(cid:48)

m
(cid:88)

i −
(b(cid:48)

j=1
(w(cid:48)

i −
ρi

ρi

−
ρi
(cid:20) ρi

1
ρi

m
(cid:88)

j=1

(cid:0)b(cid:48)

ij ln[vij(b(cid:48)

ij)ρi−1]

bij ln[vij(bij)ρi−1](cid:1) +

−

m
(cid:88)

j=1

(cid:0)p(cid:48)

j ln p(cid:48)

j −

pj ln pj

(cid:1)

wi) +

ρi

1

·

−
ρi

(cid:2)(Ki

w(cid:48)
i)

·

−

ln(Ki

w(cid:48)
i)

−

(Ki

−

−

wi) ln(Ki

wi)(cid:3) (cid:105)

−

ij −
ρi

bij)

(cid:0)1

−

ln[vij(bij)ρi−1] + ρi ln pj

(cid:1)

wi)

(1

(ρi

1)

·

−

−

ln(Ki

−

wi))

m
(cid:88)

1

j=1

b(cid:48)
ij ln

b(cid:48)
ij
bij

+

m
(cid:88)

j=1

p(cid:48)
j ln

p(cid:48)
j
pj −

n
(cid:88)

m
(cid:88)

i=1

j=1

1
ρi ·

(b(cid:48)

ij −

bij)

1

(w(cid:48)

i −

ρi

wi)

1

−
ρi

(Ki

·

−

w(cid:48)

i) ln

(cid:21)

.

w(cid:48)
i
wi

Ki
Ki

−
−

−
ρi

(18)

(19)

Let qi = Ki

−

wi and q(cid:48)

i = Ki

−

w(cid:48)

i. Then (19) can be rewritten as

n
(cid:88)

ρi

i=1

1

·

−
ρi

(cid:18)

q(cid:48)
i ln

q(cid:48)
i
qi −

(cid:19)

,

q(cid:48)
i + qi

which equals to (cid:80)n
that ρi−1
ρi

i=1

ρi−1
ρi

KL(q(cid:48)
i(cid:107)

·
< 0. By Proposition 14, we have

qi). Recall that qi = (cid:80)m

j=1 bij and q(cid:48)

i = (cid:80)m

j=1 b(cid:48)

ij, and observe

n
(cid:88)

ρi

i=1

1

−
ρi

0

≥

KL(q(cid:48)
i(cid:107)

qi)

·

≥

n
(cid:88)

ρi

i=1

1

−
ρi

KL(x(cid:48)
i(cid:107)

xi).

·

For (18), there are two ways to rewrite it. Firstly, it can be rewritten as

(18) =

n
(cid:88)

m
(cid:88)

−

i=1

j=1

b(cid:48)
ij ln

b(cid:48)
ij
bij

+

m
(cid:88)

j=1

p(cid:48)
j ln

p(cid:48)
j
pj

+

n
(cid:88)

i=1

1
ρi ·

KL(b(cid:48)
i(cid:107)

bi)

=

−

KL(b(cid:48)

(cid:107)

b) + KL(p(cid:48)

p) +
(cid:107)

n
(cid:88)

i=1

1
ρi ·

KL(b(cid:48)
i(cid:107)

bi)

n
(cid:88)

≤

i=1

1
ρi ·

KL(b(cid:48)
i(cid:107)

bi)

28

where the inequality holds due to Proposition 14. Secondly, it can be rewritten as

(18) =

=

=

n
(cid:88)

1

i=1
n
(cid:88)

i=1
n
(cid:88)

i=1
n
(cid:88)

1

1

1

≥

i=1

ρi

ρi

ρi

ρi

−
ρi

−
ρi

−
ρi

−
ρi

·

·

·

·

KL(b(cid:48)
i(cid:107)

bi)

−

KL(b(cid:48)
i(cid:107)

bi)

−

i=1
m
(cid:88)

j=1

n
(cid:88)

m
(cid:88)

(b(cid:48)

ij −

bij) +

m
(cid:88)

j=1

p(cid:48)
j ln

p(cid:48)
j
pj

j=1

(p(cid:48)

j −

pj) +

m
(cid:88)

j=1

p(cid:48)
j ln

p(cid:48)
j
pj

KL(b(cid:48)
i(cid:107)

bi) + KL(p(cid:48)

p)
(cid:107)

KL(b(cid:48)
i(cid:107)

bi).

Combining all the above inequalities yields

(cid:0)z(cid:48), z(cid:1)

dF

0

≤

n
(cid:88)

i=1

1
ρi ·

≤

KL(b(cid:48)
i(cid:107)

bi),

as claimed.

We now turn to the derivation of the PR-QCES protocol from Mirror Descent algorithm. For

the convex program (SH-QCES), the Mirror Descent rule (Algorithm 2) is

(bt+1, wt+1) = arg min
(b,w)∈C




n
(cid:88)

m
(cid:88)

(bij



i=1

j=1

bt
ij)

−
ρi

(cid:32)

ln

1

−

·

(cid:33)

vij(bt
(pt

ij)ρi−1
j)ρi

+

n
(cid:88)

i=1

1
ρi

(cid:2)1

(ρi

1)

·

−

−

ln(Ki

−

i)(cid:3)
wt

(wi

·

−

wt

i) +

n
(cid:88)

i=1

1
ρi ·

(cid:41)

KL(bi

bt
i)

(cid:107)

.

Since (cid:80)m
j=1 bij +wi is a constant in the domain C, we may ignore any term that does not depend
on b and w, and any positive constant factor in the objective function and simplify the above
update rule to

(bt+1, wt+1) = arg min
(b,w)∈C



−

n
(cid:88)

m
(cid:88)

i=1

j=1

(cid:32)

ln

vij(bt
(pt

ij)ρi−1
j)ρi

bij

·

−

bij ln

bij
bt
ij

(cid:33)

+ bij

+

n
(cid:88)

i=1

(1

−

ρi) ln(Ki

wt
i)

wi

·

−






(cid:44) arg min
(b,w)∈C

F (b, w).

We have

∂
∂bij
∂
∂wi

F (b, w) =

vij(bt
(pt

ij)ρi−1
j)ρi

ln

−

+ ln

bij
bt
ij

= ln bij

ln

−

vij(bt
(pt

ij)ρi
j)ρi

F (b, w) = (1

ρi) ln(Ki

−

wt

i).

−

As before, for each ﬁxed i, the values of ln bij
words, there exists ci > 0 such that

−

ln

vij (bt
(pt

ij )ρi
j )ρi

for all j are identical. In other

bij = ci

vij(bt
(pt

ij)ρi
j)ρi

.

·

As before, there are two cases which depend on Si (cid:44) (cid:80)m
j=1

vij (bt
(pt

ij )ρi
j )ρi

.

29

• If Si

Ki

(Ki

wt

i)ρi−1, then for each j we set bt+1

−

≥

·
At this point, we have
satisﬁed.

∂
∂bij

F (b, w) = ln Ki

Si ≤

∂
∂wi

i = 0.
ij = Ki
F (b, w), so the optimality condition is

ij )ρi
j )ρi /Si, and wt+1

vij (bt
(pt

·

• if Si < Ki
wt+1 = Ki
condition is satisﬁed.

wt
(Ki
−
(cid:80)m
j=1 bt+1

−

·

i)ρi−1, then for each j, we set bt+1
ij > 0. At this point,

∂
∂bij

F (b, w) = ∂
∂wi

ij = (Ki

wt

i)1−ρi

vij (bt
(pt

ij )ρi
j )ρi

, and

−

·
F (b, w), so the optimality

This concludes the proof of Theorem 9 which shows that the (PR) dynamics converge to
the market equilibrium of a Fisher market with quasi-CES utilities. The result holds for any
1. However, the proof cannot be extended in a straightforward way to values of ρi < 0.
0 < ρi
To see this, we rewrite (18) and (19) as:

≤

(cid:0)z(cid:48), z(cid:1) =

dF

n
(cid:88)

1

i=1

ρi

−
ρi

(cid:2)KL(b(cid:48)
i(cid:107)

·

bi)

KL(q(cid:48)
i(cid:107)

−

qi)(cid:3) + KL(p(cid:48)

p).

(cid:107)

(20)

As it happens, the RHS of (20) can be either positive or negative. By Proposition 14,

KL(b(cid:48)
i(cid:107)

bi)

≥

KL(q(cid:48)
i(cid:107)

qi),

and there are situations where the equality holds, and thus the RHS of (20) is positive. On the
other hand, it is not hard to ﬁnd two points b(cid:48)
i = qi for all i 5, then
the RHS of (20) is negative as 1−ρi
ρi

< 0. Thus, F is neither convex nor concave function.

= b such that p(cid:48) = p and q(cid:48)

5For instance, consider b(cid:48), b such that there exists two goods j, k satisfying pj = pk, but there exists i such
ik = bij. A sanity check veriﬁes p(cid:48) = p and

ij = bik and b(cid:48)

that bij (cid:54)= bik. Then set b(cid:48) same as b, except that b(cid:48)
q(cid:48)
i = qi for all i.

30

(cid:54)
