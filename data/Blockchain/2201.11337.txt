Towards a Scalable and Trustworthy Blockchain:
IoT Use Case

Hajar Moudoud ∗‡, Soumaya Cherkaoui ∗, Lyes Khoukhi †
∗ Department of Electrical and Computer Engineering, Universit´e de Sherbrooke, Canada
† GREYC CNRS, ENSICAEN, Normandie University, France
‡ University of Technology of Troyes, France
{hajar.moudoud, soumaya.cherkaoui}@usherbrooke.ca, lyes.khoukhi@ensicaen.fr

2
2
0
2

n
a
J

7
2

]

R
C
.
s
c
[

1
v
7
3
3
1
1
.
1
0
2
2
:
v
i
X
r
a

Abstract—Recently, blockchain has gained momentum as a
novel technology that gives rise to a plethora of new decentral-
ized applications (e.g., Internet of Things (IoT)). However, its
integration with the IoT is still facing several problems (e.g.,
scalability, ﬂexibility). Provisioning resources to enable a large
number of connected IoT devices implies having a scalable and
ﬂexible blockchain. To address these issues, we propose a scalable
and trustworthy blockchain (STB) architecture that is suitable
for the IoT; which uses blockchain sharding and oracles to
establish trust among unreliable IoT devices in a fully distributed
and trustworthy manner. In particular, we design a Peer-To-
Peer oracle network that ensures data reliability, scalability,
ﬂexibility, and trustworthiness. Furthermore, we introduce a
new lightweight consensus algorithm that scales the blockchain
dramatically while ensuring the interoperability among partici-
pants of the blockchain. The results show that our proposed STB
architecture achieves ﬂexibility, efﬁciency, and scalability making
it a promising solution that is suitable for the IoT context.

Keywords—Blockchain,

Internet of Things

(IoT), Oracle,

Sharding, Consensus.

I. INTRODUCTION

With the widespread adoption of blockchain technology
and global endorsement of cryptocurrencies, it is expected
that transaction trafﬁc will skyrock [1]. According to [2], the
worldwide adoption of blockchain technology is expected to
grow from 1.5 billion in 2018 to an estimated 15.9 billion by
2023; this will lead to an exponential growth in the number of
transactions. Giving the inherent characteristics of nowadays
blockchain (i.e., extremely complex computing, low latency,
and lacking dynamic scalability), handling the constantly
growing number of transactions is becoming complex and very
laborious. Blockchain sharding is a concept that was proposed
to improve the blockchain scalability issue, which artiﬁcially
partitions the workload of one single transaction procession to
several members working in parallel. This separation brings
about numerous advantages, including high ﬂexibility, high
throughput, and high scalability. The ﬁrst proposed blockchain
sharding solutions (e.g., [3], [4], [5]) deploy and on-chain
sharding using Byzantine consensus protocol to improve the
shards’ throughput and off-chain sharding moving transactions
off the blockchain. Despite their efﬁciency and simplicity,
these solutions have failed to meet the data validity required
by nowadays applications [6]. The reason is twofold: (1)
with the increasing number of members working on a single
transaction, a malicious member can compromise the work

process, which may lead to security issues; and (2) any minor
mishandling of a transaction may lead to its loss.

Today blockchain applications enable various industry ver-
ticals, such as supply chain management, healthcare, ﬁnance,
and the Internet of Things (IoT). In particular, the blockchain
may play a role in how IoT connected devices communicate
and exchange information with each other. In this case, a
blockchain transaction is deﬁned as the basic communica-
tion primitive to exchange information among IoT connected
devices. Handling a large number of transactions coming
from these devices, particularly when they have heterogeneous
security parameters, put the transaction reliability at risk, and
introduces new security challenges. For instance, a compro-
mised IoT device may deliver falsiﬁed information that will
be stored permanently on the blockchain. This may impact
the reliability of the transactions, which in turn affects the
security of the blockchain.

There have been several researchers have tried to address
the challenges of using blockchain in an IoT context [7, 8]. For
instance, [9] and [10] used a distributed time-based consensus
algorithm to ensure end-to-end security and ensure trustworthy
transactions. Meanwhile, researchers in [11] and [12] have
proposed a trustworthy blockchain to establish reliable and
transparent data. However, the transactions veriﬁcation com-
ing from the outside world is challenging. In this context,
oracles were proposed to verify transactions coming from off-
chain applications. However, using a third party to verify the
data may lead to a single point of failure, especially if the
oracles are jeopardized [13].

To address these challenges, in his paper we present a
scalable and trustworthy blockchain (STB) architecture; which
provides scalable, trustworthy, transparent, and secure data
exchange between unreliable IoT devices.

The main contributions of our paper can be summarized as

follows:

• We design a secure blockchain architecture, called STB,
which is a distributed and hierarchical architecture that is
suitable for IoT applications. STB implements sharding
and oracles to ensure efﬁcient, scalable, and trustworthy
data exchange among unreliable IoT devices.

• We propose a lightweight blockchain consensus that
uses a decentralized trust method; which ensures secure
deployment of the shards and prevents data loss.

 
 
 
 
 
 
• We evaluate the performance of our architecture in terms
of efﬁciency, latency, computing power, and scalability.
The experiment results show that STB architecture can
effectively be used to ensure a trustworthy, scalable, and
efﬁcient data exchange among IoT devices.

The rest of this paper is organized as follows. Section II
surveys some related work. Section III describes the architec-
ture of the scalable and trustworthy blockchain (STB) for IoT
and explains the lightweight blockchain consensus. Section
IV presents a simulation-based case study while Section V
concludes the paper.

II. RELATED WORK

Blockchain technology is considered as the new solution to
establish trust among unreliable entities. Due to the limited
block size and block intervals (i.e., the time needed to forge
a new block) of traditional blockchain; the scalability and
efﬁciency of the blockchain need to be further investigated. To
overcome these problems, several blockchain networks were
introduced to optimize these parameters [14] [15]. In [16],
Kouzinopoulos et al. proposed a new method to improve the
block creation rate, an alteration to the way miners construct
and reorganize blocks. In [17], Lewenberg et al. proposed
increasing the block size limit to improve the performance.
However, increasing the block size or decreasing the block
interval can lead to a stale block rate or double-spending vul-
nerability [18]. In [19], Yang et al. proposed to only delegate
blockchain consensus to a limited number of miners in the
network. Although this solution decreased block intervals, it
is prone to centralize since only a limited number of miners
are responsible for the mining.

Another approach to scale blockchain is to spread the work-
load on multiple blockchains simultaneously, this is referred to
as blockchain sharding. To increase the blockchain scalability,
multiple shards work in parallel. Consequently, this approach
may lead to several security issues (e.g., data loss, single shard
attack). Particularly, a shard may be compromised and lead to
data leakage [20] [21]. Besides the security issues, blockchain
sharding can suffer from a wide range of security challenges,
such as data interoperability or data validity. For instance,
when a transaction is sent to the blockchain shards, each shard
veriﬁes a partition of the transaction, when all the sub-shards
are veriﬁed, the cross-interoperability (i.e., communication) is
difﬁcult.

A major limitation of blockchain technology is its inability
to interact with data outside of the chain (i.e., outside world
data) [22]. To overcome this issue, oracles were proposed to
attest to facts in an effort to bring outside world data into
the chain. In [23], Nelaturu et al. proposed an oracle that
veriﬁes and transfers online data to the blockchain. However,
online data could be maliciously altered or may be disclosed.
In [24], Ritzdorf et al. proposed a zero-knowledge oracle that
authenticates data without disclosing full data. This oracle
eliminates the need for a trusted third party and ensures
data conﬁdentiality. Although useful, their proposal have high
computational costs.

To address the weaknesses of these existing solutions, we
propose STB, a scalable and trustworthy blockchain archi-
tecture that ensure trust among IoT device in a distributed
manner [25]. STB architecture employs multiple shard chains
processing transactions and one main chain to coordinate
between the shards and ensure the transaction interoperabil-
ity. Furthermore, we proposed using a decentralized oracle
network to overcome the problem of single point failure
and ensure a distributed trust among the participants of the
network. And using a using lightweight blockchain consensus,
our architecture is less computing intensive in comparison
with [23][24], making it suitable for IoT constrained device.

III. SCALABLE AND TRUSTHWORTHY
BLOCKCHAIN
STB is a distributed blockchain architecture that enables
devices with constrained resources (e.g., IoT sensors) to
exchange data in a reliable manner [6]. This section ﬁrst
describes STB’s overall architecture and then explains how
the shards and oracles services are carried out.

A. Architecture

As illustrated in Fig.1, this paper considers data exchange
in an IoT environment where a large number of unreliable
IoT devices are connected through a wireless network (i.e.,
LTE, 4G, 5G, etc.) and accessible to the outside world [26].
We propose a scalable and trustworthy blockchain architecture
composed of three layers, as follows:(1) IoT devices respon-
sible for sending data that need to be veriﬁed and stored in
the blockchain; (2) decentralized oracle network responsible
for verifying the external data out of the chain and ensuring
its reliability; and (3) the shards responsible for scaling the
blockchain while keeping security guarantees.

1) Shared Blockchain: The scalability has been a core
problem in the integration of blockchain within the IoT. This
is because the IoT connects a large number of devices that
generate big data. To enable horizontal scalability, blockchain
sharding was proposed, it consists of partitioning each trans-
action into several shards and to process it independently. In
this paper, we propose building clusters with multiple nodes
(i.e., miners) to process each shard in parallel.

Fig.2 shows the 3 main components of the STB sharding,
as follows: (1) the main chain; (2) the master clusters’; and
(3) slave nodes’. The master cluster contains n slave nodes,
that could be either honest or dishonest. Let Ti(x) represents
the ith transaction in a block. To enable the sharding, each
transaction is divided into n disjoint portion. All master clus-
ters are responsible for verifying a portion of the transaction
ti,j(x), where i is the transaction number on a block and j is
the cluster number. All slave nodes could verify a transaction
portion, outputs 0 or 1 indicates invalid and valid transaction,
respectively. Let n denote the total number of slave nodes in a
master cluster j that can tolerate up to t (cid:54) n
3 dishonest node.
We deﬁne a transaction veriﬁcation process as follows:
m
(cid:88)

n
(cid:88)

Ti(x) =

ti,j(x) × Cj,k(x)

(1)

j=0

k=0

Fig. 1: Scalable and Trustworthy Blockchain architecture

the reward for a valid transaction portion and total reward for a
valid transaction. Note that the cluster trust value is only used
to determine rewards and penalties, and does not necessarily
correspond to the cluster output. Consequently, we enable
secure sharding, prevent data loss, and incentive clusters to
behave honestly.

2) Peer-To-Peer Oracle network: We propose using a Peer-
To-Peer (P2P) oracle network to verify the data queries and
authenticate its source. Blockchain cannot access external data
of the network. This is where the blockchain oracle interferes,
it’s a service provider (trusted third party) that veriﬁes the data
authenticity. However, trusting a single third party may lead to
providing corrupt or inaccurate data. To this end, we propose
using a P2P oracle network that ensures the truth value of
IoT retrieved data. We assume each received data sent from
an IoT device could be either valid V or false F . There is
m oracle in the P2P network, only n oracle verify the data.
For each oracle o ∈ [n,m] has a q probability that data d is
correct about a given proposition.

(cid:40)

Oi(d) =

q when data is valid
1 − q when data is false

(3)

The value of oi(d) is independent of oj(d) for all i (cid:54)= j.
In other words, each oracle’s trust values are independent of
other oracles in the network trust values. Furthermore, oracles
need to place a deposit to participate in a random-chosen
veriﬁcation process. First, the oracle submits its veriﬁcation
probability q ∈ [0,1] about a data d. Then, this probability
is applied to a trust weight W ∈ [0,1] that is, informally,

Fig. 2: Scalable and Trustworthy Blockchain sharding

where, Cj,k(x) is the trust value in a clusterj, proportional to
a transaction portion ti,j and (cid:80)m

k=0 Cj,k = 1.

The transaction veriﬁcation process has two possible out-
comes: valid and invalid, each of which carries its own reward
structure. As compensation for their efforts, the clusters are
awarded (R) whenever they verify a transaction correctly. In
the case of correct veriﬁcation, a cluster reward is as follows.

R(Ti,j) =

R(ti,j(x))
R(Ti,T otal(x))

× Cj,k

(2)

where, R(ti,j(x)) and R(Ti,T otal(x)) represents, respectively,

the parameter within the network that veriﬁes the input data
within the network’s hidden layers. Formally:

Wi =

αi
βi

(4)

where αi is the sum of corrected veriﬁcation performed and
βi is the total number of veriﬁcation performed.

V (d) =

n
(cid:88)

i=0

oi(d) × Wi

(5)

Once a data veriﬁcation process V (d) has accumulated sufﬁ-
cient veriﬁability during a maximum of a period of time δ(t),
it is decided. This period of time is a ﬁxed value decided by
network operators. The veriﬁcation process has three possible
outcomes:1) valid (V ), if V (d) value to be strictly positive, 2)
false (f ), if V (d) value to be strictly negative, and 3) undeﬁned
(U ) if V (d) value is equal to zero. In this last case, the data
veriﬁability process is only assigned to the oracle with the
highest trust weight.

Broadly speaking, oracles are rewarded when they partici-
pate in a veriﬁcation process and their veriﬁcation probability
matches it[27]. Conversely, those who gave incorrect veriﬁ-
cation are penalized. In the case of undetermined outcomes,
oracles receive no rewards or penalties. As argued in the paper,
the proposed data veriﬁcation process incentives the oracles
to behave honestly on the validity of data [28, 29].

B. Design Components

The transaction veriﬁcation procedure of our STB consists
of the following (1) Initialization; (2) Consensus; and (3)
Reward. This procedure starts with the initialization and then
proceeds in periods, where each period consists of several
iterations of consensus and ﬁnally the rewarding phase. We
now explain each component in more detail.

1) Initialization: The initial set of participants (i.e., nodes)
are invited to provide a deposit (stake) to validate or endorse
a transaction. That is, a node is given the chance to verify a
transaction chosen uniformly at random from the unveriﬁed
transaction pool. The deposit is placed before the veriﬁcation
process. Because the nodes are grouped in clusters, the out-
come of the transaction veriﬁcation reward is a function of
the sum of the total transaction veriﬁcation reward weighted
by the cluster value in the cluster and the deposits.

2) Consensus: Once nodes of each cluster are done with
the initialization step, they wait for an IoT device to submit
their transactions. The transaction is partitioned uniformly on
n partition. Each transaction partition is sent to a cluster
that forwards the transaction to corresponding nodes. These
clusters run an intra-cluster consensus protocol to approve the
transaction partition. The inter-cluster consensus is a protocol
where each node places a portion of its deposit
in their
conﬁdence of their veriﬁcation being valid.

it

Meanwhile,

is challenging to build a consensus that
processes transactions and ensures interoperability among the
shards. Sharding consensus could lead to possible attacks, and
thus without an efﬁcient and secure cross-shard consensus data

may be compromised and the blockchain interoperability may
be lost. To solve this problem, we propose in this article an
intra-cluster lightweight consensus to approve a transaction
and add it to its ledger. Algorithm 1 illustrates the logic of
this consensus. In STB we have the main chain and shard
chains that accommodate n sub-chains(shard). This consensus
takes as input all partitions of a transaction Ti,j and returns
a new block if the transaction veriﬁcation is valid; otherwise,
it returns false. This intra-shard consensus will be invoked at
the moment when all the collaborators (master clusters) try to
forge a new block into the ledger. A transaction T is parti-
tioned equally among n collaborators. First, we verify that the
transaction has been veriﬁed by the P2P oracle network. We
then calculate the transaction veriﬁcation process according
to Eq.1. If the output is superior to n
3 , we then accept the
transaction; otherwise, it is considered false. Finally, if the
transaction is veriﬁed, we then forge a new block and update
the ledger.

Algorithm 1 Inter-Shard Consensus Algorithm.
Input ∀ti,j(x) ∈ T , Oi ∈ O, Ci,j ∈ C;
Output T , Bi+1; Initialize:

1: T : A transaction from the unveriﬁed transaction pool;
2: n: The number of master clusters;
3: ti,j: A transaction partition;
4: Oi: An oracle form the P2P network;
5: Ci,j: A master cluster trust value;
6: if T.signature == Oi.sigature then
7:
8:

while i (cid:54) n do

while Ci,j ∈ C do

9:
10:
11:
12:
13:
14:

T (x) = ti,j × Ci,j + T (x)
W = W + Ci,j

end while

end while
if W (x) (cid:54)= 1 then

Break;

end if

15:
16: else
17:
18:
19:
20:

21:
22: end if
23: Break

if T (x) (cid:54) n

3 then

AddBlock(Bi+1)
Return V alid T ransaction

end if
Return F alse T ransaction

3) Reward: Broadly speaking, nodes (i.e., miners) are
rewarded for transaction veriﬁcation in which they took part.
Conversely, those who provided false veriﬁcation are penal-
ized. The steps of reward/penalize are depicted in Fig.3. Let
ri denote the reward amount that a node i used to verify that
a transaction partition is equal to 0 or 1. In the case of a valid
veriﬁcation, the reward is as follows:

ri =

R(Ti,j)
T otal

+ αi

(6)

Fig. 3: Adding data to the STB

Fig. 4: Scalability comparison

TABLE I: SIMULATION SETUP PARAMETER

Parameters
Oracles
IP
Master clusters
Slave nodes
Maximum period of time δ(t)
PoW difﬁculty

Value
3
localhost
8
10
10s
4

where, R(Ti,j) is the master cluster reward, T otal refers
to the total number of the cluster node participating in the
veriﬁcation process, and αi node deposit. A node’s reward is
equal to his participating share in the transaction veriﬁcation
process. For instance, if a cluster has a reward equal to 1000,
and the number of participant nodes is equal to 100, the reward
is distributed equally and each node will receive 100 as a
stake. In the case of false veriﬁcation, the node is penalized
and the reward is deducted from its deposit.

IV. EVALUATION

This section presents the evaluation STB architecture. We
compare our STB to other prominent works in terms of
scalability, computing power, and latency [8]. We consider
several variant of the proposed architecture:(1) STB, which
is a blockchain network that implements all of our proposed
components and the proposed lightweight consensus; (2) Bit-
coin [30], which is a basic blockchain network that uses Proof-
of-work(PoW)consensus; and (3) Quarkchain [31], which is a
blockchain network that implements the clustering feature and
employs boson consensus- a blockchain sharding consensus to
scale the network. The simulations were conducted on a laptop
with 2.2 GHz Intel i7 processors and 16GB of memory.

To examine the scalability of different architecture, we
evaluate the computing power needed to add one block to
the chain. Fig. 4 depicts the results. Because Quarkchain
uses the sharding concept, we can observe that the computing
power needed to add blocks decreases with time. This happens
because the block workload is separated among 8 shards. We

clearly observe that the proposed STB architecture is less
computing intensive than others. This happens because the
proposed consensus algorithm does not have a difﬁculty level
that limits block generations.

In Fig. 5, we evaluate the CPU in a function with time
needed to add 10 blocks to the chain. In this experiment, we
only compare STB with Quarkchain. This because, the time
needed to add one block using Pow is much higher than other
architecture. We observe that the local max, which point on
the maximum CPU needed to forge blocks, of STB is less
higher than Quarkchain. This is because, STB implements a
distributed trust model that partition the work load needed to
add blocks on several master clusters. These clusters in their
turn partition the work load on the slave nodes that work in
parallel.

In Fig. 6, we compare the latency of variant blockchains.
As evidenced by the ﬁgure, the PoW latency increases with
the number of blocks to add in the BC. Meanwhile, the time
needed to add block ins Quarkchain is a ﬁxed value 10s and
0.1s for the STB. The results demonstrate the efﬁciency of
STB, in terms of scalability, computing power, and latency in
comparison with other architectures.

V. CONCLUSION

This paper proposed, STB, which is a scalable and trust-
worthy blockchain architecture that is suitable for the IoT.
Because of the large number of IoT unreliable and constrained
device, the integration of the blockchain with the IoT is not
straightforward. To this aim, we ﬁrst design the distributed and
hierarchical blockchain architecture. We then describe the 2
main components of the chain, each of which is responsible
for scaling the blockchain and verifying the reliability of
information before storing them into the chain. Finally, we
propose lightweight blockchain consensus that is suitable with
IoT constrained device. The simulation results demonstrate
that out architecture outperforms existing blockchain in terms
of ﬂexibility, scalability, and latency.

[7] Z. A. E. Houda, A. Haﬁd, and L. Khoukhi, “Blockchain Meets AMI:
Towards Secure Advanced Metering Infrastructures,” in ICC 2020 -
2020 IEEE International Conference on Communications (ICC), Jun.
2020, pp. 1–6.

[8] E. D. N. Ndih and S. Cherkaoui, “Chapter 17 - Simulation methods,
techniques and tools of computer systems and networks,” in Modeling
and Simulation of Computer Networks and Systems, M. S. Obaidat,
P. Nicopolitidis, and F. Zarai, Eds. Boston: Morgan Kaufmann, Jan.
2015, pp. 485–504.

[9] A. Dorri, S. S. Kanhere, R. Jurdak, and P. Gauravaram, “LSB:
A Lightweight Scalable BlockChain for IoT Security and Privacy,”
arXiv:1712.02969 [cs], Dec. 2017.

[10] L. Zhu, Y. Wu, K. Gai, and K.-K. R. Choo, “Controllable and trust-
worthy blockchain-based cloud data management,” Future Generation
Computer Systems, vol. 91, pp. 527–535, Feb. 2019.

[11] C. Cai, H. Duan, and C. Wang, “Tutorial: Building Secure and Trust-

worthy Blockchain Applications,” Sep. 2018, pp. 120–121.

[12] H. Al-Breiki, M. H. U. Rehman, K. Salah, and D. Svetinovic, “Trust-
worthy Blockchain Oracles: Review, Comparison, and Open Research
Challenges,” IEEE Access, vol. 8, pp. 85 675–85 685, 2020.

[13] M. Lakoju, A. Javed, O. Rana, P. Burnap, S. T. Atiba, and S. Cherkaoui,
““Chatty Devices” and edge-based activity classiﬁcation,” Discover
Internet of Things, vol. 1, no. 1, p. 5, Feb. 2021.

[14] Z. Tu and C. Xue, “Effect of bifurcation on the interaction between

Bitcoin and Litecoin,” Finance Research Letters, vol. 31, Dec. 2019.

[15] Y. Kwon, H. Kim, J. Shin, and Y. Kim, “Bitcoin vs. Bitcoin Cash:
Coexistence or Downfall of Bitcoin Cash?” in 2019 IEEE Symposium
on Security and Privacy (SP), May 2019, pp. 935–951.

[16] C. S. Kouzinopoulos, K. M. Giannoutakis, K. Votis, D. Tzovaras,
A. Collen, N. A. Nijdam, D. Konstantas, G. Spathoulas, P. Pandey,
and S. Katsikas, “Implementing a Forms of Consent Smart Contract on
an IoT-based Blockchain to promote user trust,” in 2018 Innovations in
Intelligent Systems and Applications (INISTA), Jul. 2018, pp. 1–6.
[17] Y. Lewenberg, Y. Sompolinsky, and A. Zohar, “Inclusive Block Chain
Protocols,” in Financial Cryptography and Data Security, ser. Lecture
Notes in Computer Science, R. B¨ohme and T. Okamoto, Eds. Berlin,
Heidelberg: Springer, 2015, pp. 528–547.

[18] K. Croman, C. Decker, I. Eyal, A. E. Gencer, A. Juels, A. Kosba,
A. Miller, P. Saxena, E. Shi, E. G¨un Sirer, D. Song, and R. Wattenhofer,
“On Scaling Decentralized Blockchains,” in Financial Cryptography
and Data Security, ser. Lecture Notes in Computer Science, J. Clark,
S. Meiklejohn, P. Y. Ryan, D. Wallach, M. Brenner, and K. Rohloff,
Eds. Berlin, Heidelberg: Springer, 2016, pp. 106–125.

[19] F. Yang, W. Zhou, Q. Wu, R. Long, N. N. Xiong, and M. Zhou,
“Delegated Proof of Stake With Downgrade: A Secure and Efﬁcient
Blockchain Consensus Algorithm With Downgrade Mechanism,” IEEE
Access, vol. 7, pp. 118 541–118 555, 2019.

[20] J. Zhang, Z. Hong, X. Qiu, Y. Zhan, S. Guo, and W. Chen, “SkyChain: A
Deep Reinforcement Learning-Empowered Dynamic Blockchain Shard-
ing System,” in 49th International Conference on Parallel Processing -
ICPP, ser. ICPP ’20. New York, NY, USA: Association for Computing
Machinery, Aug. 2020, pp. 1–11.

[21] A. Chauhan, O. P. Malviya, M. Verma, and T. S. Mor, “Blockchain
and Scalability,” in 2018 IEEE International Conference on Software
Quality, Reliability and Security Companion (QRS-C), Jul. 2018, pp.
122–128.

[22] M. E. Peck, “Blockchains: How they work and why they’ll change the
world,” IEEE Spectrum, vol. 54, no. 10, pp. 26–35, Oct. 2017.
[23] K. Nelaturu, J. Adler, M. Merlini, R. Berryhill, N. Veira, Z. Poulos,
and A. Veneris, “On Public Crowdsource-Based Mechanisms for a
Decentralized Blockchain Oracle,” IEEE Transactions on Engineering
Management, vol. 67, no. 4, pp. 1444–1458, Nov. 2020.

[24] H. Ritzdorf, K. W¨ust, A. Gervais, G. Felley, and S. ˇCapkun, “TLS-
N: Non-repudiation over TLS Enabling Ubiquitous Content Signing for
Disintermediation,” p. 16.

[25] Z. Mlika and S. Cherkaoui, “Massive IoT Access With NOMA in 5G
Networks and Beyond Using Online Competitiveness and Learning,”
IEEE Internet of Things Journal, vol. 8, no. 17, pp. 13 624–13 639,
Sep. 2021.

[26] z. Mlika and S. Cherkaoui, “Competitive Algorithms and Reinforcement
Learning for NOMA in IoT Networks,” in ICC 2021 - IEEE Interna-
tional Conference on Communications, Jun. 2021, pp. 1–6.

[27] A. Rachedi, M. H. Rehmani, S. Cherkaoui, and J. J. P. C. Rodrigues,
“IEEE Access Special Section Editorial: The Plethora of Research in

Fig. 5: Computational power comparison

Fig. 6: Latency comparison

ACKNOWLEDGEMENT

The authors would like to thank the Natural Sciences and
Engineering Research Council of Canada, as well as FEDER
and GrandEst Region in France, for the ﬁnancial support of
this research.

REFERENCES
[1] H. Moudoud, L. Khoukhi, and S. Cherkaoui, “Prediction and Detection
of FDIA and DDoS Attacks in 5G Enabled IoT,” IEEE Network, vol. 35,
no. 2, pp. 194–201, Mar. 2021.

[2] “Blockchain - Statistics & Facts | Statista.”
[3] H. Dang, T. T. A. Dinh, D. Loghin, E.-C. Chang, Q. Lin, and B. C. Ooi,
“Towards Scaling Blockchain Systems via Sharding,” in Proceedings of
the 2019 International Conference on Management of Data - SIGMOD
’19. Amsterdam, Netherlands: ACM Press, 2019, pp. 123–140.
[4] E. Kokoris-Kogias, P. Jovanovic, L. Gasser, N. Gailly, E. Syta, and
B. Ford, “OmniLedger: A Secure, Scale-Out, Decentralized Ledger via
Sharding,” in 2018 IEEE Symposium on Security and Privacy (SP), May
2018, pp. 583–598.

[5] B. Nour, S. Cherkaoui, and Z. Mlika, “Federated Learning and Proactive
Computation Reuse at the Edge of Smart Homes,” IEEE Transactions
on Network Science and Engineering, pp. 1–1, 2021.

[6] H. Moudoud, S. Cherkaoui, and L. Khoukhi, “An IoT Blockchain Ar-
chitecture Using Oracles and Smart Contracts: the Use-Case of a Food
Supply Chain,” in 2019 IEEE 30th Annual International Symposium
on Personal, Indoor and Mobile Radio Communications (PIMRC), Sep.
2019, pp. 1–6.

Internet of Things (IoT),” IEEE Access, vol. 4, pp. 9575–9579, 2016.
[28] E. D. Ngangue Ndih and S. Cherkaoui, “On Enhancing Technology
Coexistence in the IoT Era: ZigBee and 802.11 Case,” IEEE Access,
vol. 4, pp. 1835–1844, 2016.

[29] E. D. Ngangue Ndih, S. Cherkaoui, and I. Dayoub, “Analytic Modeling
of the Coexistence of IEEE 802.15.4 and IEEE 802.11 in Saturation
Conditions,” IEEE Communications Letters, vol. 19, no. 11, pp. 1981–
1984, Nov. 2015.

[30] M. Vukoli´c, “The Quest for Scalable Blockchain Fabric: Proof-of-
Work vs. BFT Replication,” in Open Problems in Network Security,
J. Camenisch and D. Kesdo˘gan, Eds. Cham: Springer International
Publishing, 2016, vol. 9591, pp. 112–125.

[31] J. S. Aldakheel, M. A. AlAhmad, and A. Al-Foudery, “Comparison
Between Bitcoin and Quarkchain,” Journal of Computational and The-
oretical Nanoscience, vol. 16, no. 3, pp. 818–822, Mar. 2019.

