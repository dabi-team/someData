Design, Implementation, and Evaluation of Blockchain-Based Trusted
Achievement Record System for Students in Higher Education

Bakri Awaji1,2, Ellis Solaiman1
1School of Computing, Newcastle University, Newcastle upon Tyne, UK
2Collage of Computer Science and Information Systems, Najran University, Najran, Saudi Arabia
b.h.m.awaji2@newcastle.ac.uk, ellis.solaiman@newcastle.ac.uk

2
2
0
2

r
p
A
6
2

]

R
C
.
s
c
[

1
v
7
4
5
2
1
.
4
0
2
2
:
v
i
X
r
a

Keywords:

Blockchain, Smart Contract, Record System, Trust, Education.

Abstract:

With a growing number of institutions involved in the global education market, it has become increasingly
challenging to verify the authenticity of academic achievements such as CVs and diplomas. Blockchain is an
enabling technology that can play a key role in solving this problem. This study introduces a blockchain-based
achievement record system that produces a veriﬁable record of achievements. The proposed system aims to
facilitate the process of authentication and validation of certiﬁcates reliably, easily and quickly, leveraging the
unique capabilities offered through Blockchain technology (public Ethereum Blockchain) and smart contracts.
We present the design and implementation of the system and its components and tools. We then evaluate the
system through a number of studies to measure the system’s; usability, effectiveness, performance, and cost.
A System Usability Scale (SUS) test gave a scale of 77.1. Through a literature survey we demonstrate that
this system is a signiﬁcant improvement on legacy systems, being both more user-friendly and more efﬁcient.
We also conduct a detailed cost analysis and discuss the positives and limitations of alternative blockchain
solutions.

1 INTRODUCTION

Every higher education student, for example any in-
dividuals in tertiary education studying to complete
an academic degree (Yumna et al., 2019), must have
a university learning record in which their univer-
sity progress is documented. The higher education
system adopts a largely uniﬁed approach to creating
these records and providing ofﬁcial transcripts to val-
idate the students’ academic achievements. A student
is given proof of their performance through an ofﬁ-
cial university transcript (Yumna et al., 2019). Of-
ﬁcial transcripts are important records for determin-
ing an individual’s employment because they allow
potential employers to check their candidate’s educa-
tion. Moreover, employers may evaluate a candidate’s
skills and suitability for the job by asking them to sub-
mit a work portfolio. Research indicates that work
opportunities are signiﬁcantly enhanced through the
provision of adequate achievement record (service-
based or project-based) (Han et al., 2018)(Watters,
2019). Nonetheless, without a reliable achievement-
recording framework, it is difﬁcult to guarantee that
transcripts, or work provided in a portfolio, are gen-
uine works by the candidate. Thus, reliable learn-

ing records can be incredibly valuable. At present,
most people use traditional methods when applying
for jobs, such as the provision of a resume or CV.
There are a number of online sources that can be used
to help individuals to create CVs, and various struc-
tures and styles can be employed. Social network-
ing sites including Facebook and LinkedIn can also
be valuable platforms when it comes to creating CVs.
There are no methods established to date that
can allow employers to validate the achievements
claimed on a candidate’s CV (Cappelli, 2019). Re-
search performed by the Higher Education Degree
Datacheck (2021) revealed that around 30% of stu-
dents and graduates fabricated or exaggerated their
academic achievements (HEDD, 2021). Thus, this is
a great concern faced by employers. NGA HR ser-
vices are a well-known human resources business pro-
cess outsourcing (BPO) company in the UK. They re-
vealed statistics to show that 90% of HR directors had
witnessed exaggerations on a job application (NGA,
2021). Moreover, there are several factors associated
with achievement records and CVs that can cause a
lack of trust, (Jirgensons, 2018) one of which is poor
data continuity. For the most part, learning data re-
mains static, even if students transfer to a different

 
 
 
 
 
 
institution. Each institute has its own independent
Learning Record Stores (LRSs), meaning that data
gathered at previous facilities are unable to be anal-
ysed. This generates a cold-start issue, in which there
is insufﬁcient data held by the current institution to ef-
ﬁciently customize and monitor the progress of their
students (Jirgensons, 2018).

Employers and various other authorities have sig-
niﬁcant concerns regarding the validation of academic
certiﬁcates for a number of reasons. For example,
some institutions are no longer operational or fail
to maintain accurate records. These cases pose sig-
niﬁcant challenges when it comes to validating the
authenticity of educational certiﬁcates. More and
more institutions are becoming involved in the global
education market, and this furthers the difﬁculty of
keeping up-to-date with certiﬁcate veriﬁcation (Vi-
dal et al., 2019). Moreover, a study performed by
Han (Henle et al., 2019) and Vidal (Vidal et al., 2019)
showed that, on average, companies spend as much
as £40,000 per year to address these issues. Fraudu-
lent achievement records cause major issues for em-
ployers and other, honest candidates who are unable
to compete with dishonest candidates. It is thus cru-
cial to develop and implement effective measures to
prevent certiﬁcation fraud.

Research performed by the NGA (2018) high-
lighted a number of common areas in which candi-
dates fabricated or lied about the information on the
achievement records. The ﬁndings showed that 44%
of candidates exaggerated or fabricated their achieve-
ment information, while 43% lied about their work
history. Moreover, 39% of participants lied about
their professional qualiﬁcations and 32% about their
education qualiﬁcations. Additionally, 27% falsiﬁed
their membership to an industry body, whilst 24%
provided false references (NGA, 2021)(Sanmogan,
2018). Poor recording and validation standards of
students’ non-academic achievements is also a fur-
ther matter of concern because these cannot be veri-
ﬁed on ofﬁcial transcripts. Thus, it is impossible to
verify such activities, including extra-curricular ac-
tivities, prizes and employability awards, as well as
voluntary work and positions in student union clubs
and societies. Most studies that have investigated CV
fraud, have found the topic to have a signiﬁcant nega-
tive effect (Henle et al., 2019).

Blockchain technology may play a signiﬁcant role
in addressing the issues outlined above. Blockchain
technology has a number of immutability and security
features that have encouraged researchers to explore
its possible use in various domains, including cloud
computing, banking, IoT and education. One key ad-
vantage of blockchain technology is that smart con-

implementation of

tracts can be programmed to automate data storage
and validation processes (Han et al., 2018). A smart
contract can be deﬁned as an event-condition-action
stateful computer program that can be used on top of
blockchain to create a distributed application that can
be used by numerous parties who are unable to trust
each other (Yumna et al., 2019). In Molina-Jimenez et
al., the key concepts of smart contracts and their use
are discussed in greater detail (Molina-Jimenez et al.,
2018).
The

a blockchain-based
achievement record system would be highly bene-
ﬁcial for students, employers and higher education
institutions as it could enable a veriﬁable record
of achievements to be documented. Through this
system, students would be able to showcase their
achievements to potential employers, which in turn
improves their employability. Moreover, ofﬁcial
transcripts enable students to assess their progress
and plan for their future careers (both individually
and with external party support). This ultimately
helps them to enhance their extra-curricular and
non-academic skills. Moreover, knowing that their
academic achievements are documented in a tran-
script can encourage students to work hard and
maintain strong work records, which adds further
value to their higher education experiences. A trusted
and reliable achievement recording system would
also beneﬁt the education system itself because it can
reduce administrative tasks. It may also improve the
quality standards of student admissions by making
students’ achievements transparent. Moreover, such
systems would also have advantages for employers,
reliable and veriﬁed
including the provision of
achievement records. It would also enable employers
to gain a full, detailed picture of a candidate’s
higher education achievements, which would be
advantageous for the recruitment process.

This paper aims to introduce a blockchain-based
achievement record system that generates a veriﬁ-
able record of achievements for students in higher
education. The proposed system aims to simplify
and expedite the certiﬁcate authentication and vali-
dation process by exploiting the unique capabilities
provided by Blockchain technology (public Ethereum
Blockchain) and smart contracts. This paper de-
scribes the system’s design and implementation and
its components and tools. We then evaluate the sys-
tem’s usability, effectiveness, performance, and cost
through a number of studies.

The remainder of the paper is organised as fol-
lows: Section 2 presents the related work, while sec-
tion 3 discusses the design and implementation of the
proposed system. Then, section 4 presents the evalu-

ation, and ﬁnally, in section 5, the conclusion.

2 RELATED WORK

Several solutions have been suggested and imple-
mented in response to the highlighted issues; as ta-
ble 1 shows. OpenBadge 1 is a standard for digital
credentials established by Mozilla and is now con-
trolled by the IMS Global Learning Consortium. In
open badges, a wallet is created for participants to
add the certiﬁcates as badge. The entity issuing the
certiﬁcate will have provided authentication of it au-
tomatically via the wallet, before it being available.
The certiﬁcate’s inclusion in the retained record of the
wallet only occurs once the legal authentication pro-
cedure has been successfully completed. Therefore,
the wallet’s certiﬁcate list offers veracity for all en-
tities and individuals. Fundamentally, issues such as
damaged or misplaced physical certiﬁcates and their
associated management and printing expenditure both
ﬁnancially and time-wise have been tackled through
OpenBadges. Nevertheless, prospective single-point
failures in the service or database of OpenBadges
pose safety, security, dependability and transparency
issues relating to the platform’s management of the
issued certiﬁcate database. As a result, entities partic-
ularly state institutions that feel they lack control over
the database provided by OpenBadge have shown
reluctance and scepticism over the platform’s adop-
tion (Virkus, 2019).

An alternative program for the issuing and vali-
dation of certiﬁcates that relies on Blockchain is the
cutting-edge, Massachusetts Institute of Technology
(MIT) project called Blockcerts 2 (Schmidt, 2016).
Blockchain can be used to develop programs for is-
suing and validating certiﬁcates through Blockcerts,
which comprises decentralised and open mobile ap-
plications, tools and databases. Various documents,
including practice permits, education certiﬁcates, or
criminal records, can all be incorporated. Despite the
issuer of the certiﬁcate and any other entity not being
involved in the validation process, the certiﬁcates’ de-
pendability is still guaranteed by Blockcerts. More-
over, if Bitcoin continues to exist, then single-point
failures will not be a problem, according to Block-
certs. As a result, continuous accessibility and exe-
cutability of Blockerts’ services have been achieved.
The activities of all users are entirely their own re-
sponsibility because complete user privacy is pro-
moted by Blockcerts. One instance is how certiﬁcate

issuance is permitted solely by issuing entities. The
issuing entity and the owner of the certiﬁcate both
have to consent to a certiﬁcate’s rescindment, with
the irrefutability of such activities being ensured. The
certiﬁcate is represented by the transactions managed
by every Bitcoin address, meaning that a straightfor-
ward process is offered by Blockcerts. Accordingly,
customers may be persuaded to adopt the program,
while its openness is also enhanced. Additionally,
mobile software may be used to undertake every cer-
tiﬁcate management function. Nevertheless, the im-
plementation of Blockcerts is confronted with a num-
ber of difﬁculties (Nguyen et al., 2018). CVTrust 3 ,
Smart Diploma 4 , as well as Block. co 5 are further
applications that engage in certiﬁcate issuance and
validation on the basis of Blockchain. Nevertheless,
their adoption approach and technical resolutions are
not thoroughly clariﬁed.

Table 1: Summary Comparison of Various Solutions.

Systems

Features

n
o
n
i
o
t
a
i
t
t
i
a
d
c
e
ﬁ
r
i
c
r
c
e
A
V
• ⊗
⊗ •
•
•
⊗ •
⊗ ⊗
•
•
•
•

y
c
a
v
i
r
P
•
•
•
•
•
•
•

y
c
n
e
r
a
p
s
n
a
r
T
(cid:11)
•
⊗
⊗
(cid:11)
•
•

e
c
n
e
i
r
e
p
x
E
r
e
s
U
•
•
•
•
•
•
•

d
r
o
c
e
R
g
n
i
r
a
h
S
⊗
•
⊗
⊗
(cid:11)
⊗
•

y
t
i
l
i
b
i
s
s
e
c
c
A
•
•
•
•
•
•
•

OpenBadge
Blockcerts
Block.Co
Smart Diploma
CVTRUST
CVSS
Our System

(cid:11) partially provided, • provided, ⊗ unprovided

3 SYSTEM DESIGN AND
IMPLEMENTATION

A trusted achievement record is a secure system that
aims to record and authenticate certiﬁcates, key learn-
ing activities, and achievements. The system’s con-
ceptual model is designed by gathering important in-
formation on stakeholders’ thoughts and outlooks on
an achievement record system that uses blockchain
and smart contract as described in Awaji et al.(Awaji
et al., 2020c) and (Awaji et al., 2020a).

Figure 1 illustrates the overall system design and
demonstrates the requirements and components, in-
cluding a frontend and backend as described in Awaji

1https://openbadges.org
2https://www.blockcerts.org

3https://www.cvtrust.com
4https://smartdiploma.io
5https://block.co

Figure 1: The System Structure.

et al.(Awaji et al., 2020b). This architectural design
means two ends (frontend and backend) with distinct
set dependencies, known as libraries and frameworks.
While the frontend acts as a presentation layer that the
end-user is introduced with upon entering the site, the
backend provides the data and logic which enables the
frontend to function. The frontend is designed to dis-
play web pages on PC, Tablets, or Smartphones and
contains components that perform different functions
in the system. For example, APPLICATION LOGIC
component which controls the interfaces of the sys-
tem and their contents based on the type of user,
IDENTITY ACCESS MANAGEMENT component
to create a unique ID for each user from the student
type, DATA STORE OFF CHAIN component which
is an off-chain database to store users data and certiﬁ-
cates information in the frontend of system, HASING
algorithm to create a unique hash for each uploaded
certiﬁcate, TRANSACTION MANAGER to initiate
and manage the transactions that send the certiﬁcate
hash and the issuer meta data to the smart contract
on the blockchain, WALLET to store and manage ac-
count keys, broadcast transactions, send and receive
Ethereum tokens, and connect to decentralized ap-
plications, API to connect the frontend of the sys-
tem to the smart contract on the blockchain to store
the metadata of universities and certiﬁcates’ hashes.
The system’s backend relies on the blockchain, a de-
centralized network of computer nodes that conﬁrm
and validate data added to the chain. This process re-
sults in digital data blocks being hashed and added to
the chain via a cryptographic link. Blockchain-based
records are reliably easy and quick to transfer, with
students only needing to share a digital address to link
future employers to their authenticated credentials. To

integrate the blockchain with the frontend of the sys-
tem, a smart contract has been written using Solid-
ity and deployed on the Ethereum Virtual Machine
(EVM) on the blockchain. The smart contract inte-
grates on the front end through the Application Pro-
gramming Interface (API). Four actors interact with
the system, the ﬁrst actor is the system administra-
tor, responsible for executing the smart contract on the
blockchain and the registration of universities on the
system. The second actor is the university or learn-
ing institution, responsible for the authentication of
student records. The third actor is the student, who
utilizes the system to create a record of their achieve-
ments. The fourth actor is an employer, who utilizes
the system to validate the candidate’s certiﬁcation and
assess candidates using their records of achievements.
To illustrates the interaction with the system and de-
ﬁnes the requirement to describe a particular use of
the system, users will interact with the system in dif-
ferent manners.

3.1

Implementation

The frontend of the system is software implemented
using HTML5, CSS3, Javascript, AJAX, and Web3js.
We used HTML5 to design the frontend applica-
tion, By using HTML5, we made usable forms.
In addition, HTML5 supports cross-platform, is de-
signed to display the application pages on PC, Tablet,
and smartphones and keeps CSS better organized.
Javascript is used to allow users to interact with the
system frontend and to implement the frontend com-
ponents. AJAX is used in this platform to allow a
web page only to reload those portions which have
changed, rather than reloading the whole page. This

decentralize application is connected to a smart con-
tract using web3js. Web3js is a collection of li-
braries that allows users to interact with the local or
remote Ethereum node using an HTTP connection.
The database has been designed to contain two cat-
egories of data: public authentication data and pri-
vate certiﬁcate data. The public authentication data is
available and released to the blockchain, the student
data are stored in MySQL, securely protected and iso-
lated in the intranet. The smart contract in this sys-
tem is written by Solidity, a high-level and contract-
It
oriented language used to write smart contracts.
is used for designing and implementing smart con-
tracts. It’s designed to run on the Ethereum Virtual
Machine (EVM), which is hosted on Ethereum Nodes
connected to the blockchain.

3.1.1 Blockchain

A blockchain-based application has been chosen for
this system due to its performance and ability to ver-
ify education certiﬁcations proﬁciently. There are nu-
merous reasons why blockchain is the most appropri-
ate decision, including because it helps to remove the
need for the manual veriﬁcation of transactions since
all necessary information is automatically veriﬁed by
a decentralised network of computers. This informa-
tion is also permanently stored in the blockchain, re-
ducing, if not completely removing, the risk of dele-
tion, meaning that additional security services are not
needed. Importantly, the falsiﬁcation or modiﬁcation
of transactions on the blockchain cannot take place.
The speciﬁc hash system is used to verify certiﬁcates,
and no user is capable of modifying this information
or uploading a false hash into the network. Users,
also known as nodes, can create transactions and then
propagate them over the blockchain network. Miners
are in charge of maintaining the blockchain network’s
ledger by regularly adding new blocks of transactions.
Miners pick and execute a number of pending transac-
tions from their pools to build and attach a new block
to the ledger and then include them in the block by
engaging in a consensus algorithm such as PoW. Sub-
sequently, the created block will be sent to the rest of
the network’s nodes. When a new block is created,
each node must validate it before adding it to its lo-
cal copy of the blockchain. The block will be veriﬁed
and deemed part of the global blockchain ledger if
the majority of nodes in the network accept it, append
it to their local blockchain copies, and build upon
it. The blockchain used for this speciﬁc system is
Ethereum, an open source blockchain with smart con-
tract capabilities. It also supplies a decentralised vir-
tual machine that can complete the necessary scripts
through the use of a system of public nodes. This

Figure 2: Achievement Record Smart Contract.

system is considered to be Turning complete, mean-
ing it can recognise other data sets and is also used as
the internal transaction pricing mechanism. Decen-
tralised applications are connected to the smart con-
tract using web3.js, which is an assortment of archives
that permit the system to interact with remote or lo-
cal Ethereum nodes. The smart contract is of pri-
mary importance within the system, as it connects the
blockchain with the frontend (Molina-Jimenez et al.,
2018) (Crowcroft, 2018). Regarding this speciﬁc plat-
form, the use of smart contracts eliminates the need
for human management as Application Programming
Interface (API) connectivity instructs the smart con-
tract; as in ﬁgure 2; to execute actions on the fron-
tend automatically. This reduces the risk of docu-
mentation fraud for universities and employers. The
primary programming language used when writing
smart contracts that run on Ethereum Blockchains is
Solidity, a contract-oriented language that is responsi-
ble for the secure storage of programming logic dur-
ing a transaction. Solidity is also a high-level lan-
guage and is used in the design, writing, an imple-
mentation of smart contracts to run on the Ethereum
Virtual Machine (EVM), which is held on Ethereum
Nodes that are directly linked to the blockchain, that
in turn is connected to the frontend. A smart contract
allows this platform to register universities and store
the relevant document hash values on the blockchain,
with Solidity and Trufﬂe Framework working to pub-
lish it on the Ethereum Blockchain. It employs au-
tomatically when a command is given on the fron-
tend via API connectivity. First, universities are reg-
istered on the blockchain using an API with the for-
mulated function add uni. Another formulated func-
tion, store hash works to store the relevant document
in the smart contract and was generated by the SHA-
256 encryption algorithm that subsists in the system’s
frontend. The function get hash is used to verify par-
ticular documents on the hash through an API.

3.1.2 Transaction and Gas

Register University, Store Hash, and Verify Hash are
the relevant discussed transactions utilised in this par-
ticular system, and work to initiate transactions by ap-
plying the data in the transaction, the SHA-256 Hash
value (Gueron et al., 2011) (Wood et al., 2014), and

ﬁgure 4.

the Ethereum Address. Once a transaction has been
logged in the blockchain, the details of the transac-
tion, including the asset, price, and ownership, are
immediately conﬁrmed within a matter of seconds
throughout all nodes, with a veriﬁed alteration on one
ledger being instantaneously recorded on every other
ledger. A speciﬁc node on the Ethereum blockchain
is used to create a wallet address, which means that,
with the aid of an API, it is easy to check the balance
of a fee that an admin must pay, and the mining fee
is deduced automatically by the Ethereum wallet ad-
dress (Werner et al., 2020).

3.2 Users Interactions with the System

Figure 4: Admin operations sequence diagram

Users will interact with the system in different man-
ners. Users login with the frontend function and
then access and distribute their documents if they so
choose; ﬁgure 3 shows the system home page where
users can access the system. Users’ documents are
uploaded on the blockchain via the smart contract,
with documents also being uploaded by the university
for veriﬁable purposes. As students can access their
uploaded documents, they can send them to potential
employers, and employers can also verify the docu-
ment using the document hash to search the system.

Figure 3: System Home Page

3.2.1 Admin Interaction with the system

To begin, admins must log in to the system using
the correct login credentials previously supplied to
them before being forwarded to the admin dashboard,
wherein the menus are laid out. Admins from their
home page; as shown in ﬁgure 5; can choose from
‘Add University’, ‘University Manage’, or ‘Student
Manage’. The ‘Add University’ tab allows admins to
add a university into the university database by com-
pleting the form. Later, if necessary, the ‘University
Manage’ tab allows admins to edit and delete univer-
sities. The admin operations sequence presented in

Figure 5: Admin dashboard

3.2.2 University Interaction with the system

The university user must log into the system, again
with correctly supplied credentials, and then will be
taken to the university dashboard; as showed in ﬁgure
7. The user will be presented with speciﬁc menus, in-
cluding ‘Document List’, ‘Upload Document’, ‘Add
Students’, and ‘Manage Students’. By clicking on
‘Document List’, the university user will be able to
view a list of the students’ documents and clicking
on any speciﬁc document will produce information
about the relevant student. The ‘Upload Document’
tab allows the user to upload a student’ document by
entering their details. If the document type is already
available in the system, they can upload the document
straight away. If not, they must ﬁrst add the speciﬁc
document type. The ‘Add Student’ tab enables the
user to add a new student and all of their relevant de-
tails into the database, and the ‘Manage Students’ tab
allows the university user to see a complete list of stu-
dents, editing where necessary. The university opera-
tions sequence presented in ﬁgure 6.

Figure 6: University operations sequence diagram

Figure 9: Student Dashboard.

4 EVALUATION

To appraise our solution, we designed an experiment
to collect data from the end-users of the proposed
system. We mainly aim in this research to provide
the stakeholders with a system that is use-friendly
and trusted. Therefore, we ﬁrst evaluated the system
usability utilising the System Usability Scale (SUS)
test (Brooke, 1996). Also, we analysed the system’s
feasibility in terms of cost and transaction conﬁrma-
tion time. We received responses from 6 universities
and 30 students from those universities who agreed to
participate in our proposed system’s evaluation pro-
cess.

4.1 System Usability Scale (SUS)

To appraise our solution’s usability, we will undertake
a System Usability Scale (SUS) test (Brooke, 1996).
The evaluation process can capture quantitative data.
Usability refers to the quality of a user’s experience
when interacting with the system. Usability is about
effectiveness, efﬁciency and the overall Satisfaction
of the user. The System Usability Scale (SUS) is a re-
liable tool for measuring usability. It consists of a 10-
items questionnaire with ﬁve response options for re-
spondents; from Strongly agree to Strongly disagree.
Initially created by John Brooke in 1986, it allows the
evaluation of a wide variety of products and services,
including hardware, software, mobile devices, web-
sites and applications. SUS has become an industry
standard, with references in over 1300 articles and
publications.

4.1.1 Results

The Likert scale with ﬁve steps was used to gather the
responses of participants for the usability of the sys-
tem. A proper process including few steps was fol-
lowed to determine the response option chosen most

Figure 7: University Dashboard

3.2.3 Student Interaction with the system

The student homepage in ﬁgure 9 allows university
students to register themselves in the system. They
are provided with a unique user ID and password, and,
once entered correctly, will be redirected to the dash-
board. If they enter their details incorrectly, an error
message will be displayed, and they will stay on the
login page until they enter the correct details. Once
successfully logged in, students can see their infor-
mation on the dashboard and are also presented with
a list of certiﬁcates that have been uploaded by uni-
versities. Using the email system, students can share
their documents with different employers, who will
receive a link directing them to a document veriﬁca-
tion page. The student operations sequence presented
in ﬁgure 8.

Figure 8: Student operations sequence diagram.

quently. 36.67% and 40% stated that they would like
to use the system more frequently. Moreover, 43.33%
of participants strongly disagreed and 30% disagreed
when asked if the system was complex. It has also
been found that they do not feel dependent upon any-
one for using the system, for example, no expertise is
required to use the system which shows that the sys-
tem is very user-friendly and this feature is considered
one of the most important considerations to declare
a system effective and usable, 30% and 43.33% dis-
agreed and strongly disagreed to the statement that the
system needs some expertise to use. The responses
of participants have stated that they are satisﬁed with
the usability and efﬁciency of the system while it has
also been found that the system can be learned very
quickly without any training or expert support. Nei-
ther is the system found to be cumbersome and the
participants felt very conﬁdent while using the sys-
tem. Overall, participants stated that there was no
hardship they faced while using the system as it does
not require any expertise or training to use. Hence,
anybody can easily learn how to use the system. Fig-
ure 10 that shows a scale 77.1 which falls under good
and excellent to rate the system. It is grade B which
is a positive indication and rating based on the SUS
scale Interpretation.

4.2 Transactions Conﬁrmation Time

and Transactions Cost

This analysis discusses two variables:

Delay time: Delay time represents the transaction
conﬁrmation time. It refers to the time a transaction
takes from its broadcast to the blockchain and addi-
tion to the distributed ledger.

Transaction cost: The cost represents the mining
fee (Gas). Gas refers to the unit that measures the
computational effort required to execute speciﬁc op-
erations on the Ethereum network. Gas fees are paid
in Ethereum’s native currency, Ether (ETH).

4.2.1 Results

The collected data revealed 219 transactions taking
approximately 17 minutes and 32 seconds to conﬁrm.
The average time to conﬁrm the transaction was 0.24
minutes. The data shown in table 2 represents the to-
tal transaction fee measured as 00.767 Ether, however,
the average transaction fee stood at 0.01097 Ether. On
evaluating the transaction fee in USD, the attained
rate stood at $657.409. Similar to this, the average
transaction fee in USD stood at $6.1574. Thus, the
table 2 below shows the overall summary of the trans-
actions discussed in the study.

Figure 10: The SUS Scale Obtained.

frequently by the participants from strongly disagree
to strongly agree to conclude. When asked if they
think they would like to use the system more often,
36.67% and 40% agreed to the statement indicating
that they are interested in the use. However, when
asked if the system was complex, 43.33% of partici-
pants strongly disagreed and 30% disagreed indicat-
ing that the system was easy to use for them. It has
also been found that most of them already thought
that the system would be easy to use. They were then
asked if they would need the support of any technical
person, it was found that they do not think that they
would need any kind of support while using this sys-
tem, as 30% and 43.33% disagreed and strongly dis-
agreed with the statement. The result also indicated
that participants think that the system has integrated
its various functions. They disagreed with the ques-
tion that there was inconsistency in the system and
agreed with the statement that people can learn us-
ing this system quickly. 63.33% and 23.33% strongly
disagreed and disagreed with the statement that the
system is burdensome to use, and they were also con-
ﬁdent about using the system. Participants also dis-
agreed with the statement that they had to learn a lot
of things before using this system. The overall anal-
ysis indicated that participants found the system very
facilitating and easy to use, they believe that there is
no need for any additional learning and neither does
the system want any expertise to be used. Partici-
pants found the system user-friendly and highly use-
ful which indicates that participants were happy about
the use of this system. The overall results show that
the participants are satisﬁed with the usability of the
system and ﬁnd it user-friendly.

4.1.2 Discussion

The effectiveness of a system is usually assessed by
the feedback of its users as to whether the system fa-
cilitated them, how easy it was to use the system and
how much time and effort did the system take for un-
derstanding. It has been found that the system was
highly useful for them in terms of ease of use due to
which they think they will like to use the system fre-

Table 2: Transaction Times and Costs.

Total Number
of Transactions
Total Conﬁrmation
Time (MM: SS)
Average Conﬁrmation
Time (MM: SS)
Total Transactions
Fee (Ether)
Average Transactions
Fee (Ether)
Total Transactions
Fee (USD)
Average Transactions
Fee (USD)

219

17:32

0.24

0.76703077
Ether
0.01091671
Ether
$657.409294

$6.15745258

Each transaction has also been calculated using
different universities to obtain more complete results.
In total, six universities are targeted. According to
the data obtained, the total number of transactions for
University 1 was 45 transactions, whereas the con-
ﬁrmation time was 10 minutes 5 seconds. Accord-
ingly, the transaction fees were 0.21992263 Ether.
Conversely, the average transaction fee was 0.00549
Ether. Data from University 2 revealed that 17 trans-
actions occurred. Accordingly, the result exhibited
that the total conﬁrmation time was 3 minutes 44 sec-
onds, although the average conﬁrmation time was 14
seconds. Moreover, the transaction fee was in Ether,
with the average transaction fee being 0.00319 Ether.
Figure 11 illustrates the number of transactions while
comparing them with an average conﬁrmation time.
University 1 had 45 transactions. University 2 had 17
transactions, whereas University. 3 had 18. Univer-
sity 4 handled 30 transactions, whereas universities
ﬁve and six had 28 and 8 transactions, respectively.
Universities 1 and 6 took the same time. The num-
ber of transactions for University 1 was 45, whereas
University 6 had just 8. The assessment depends
on not only the time spent but also the number of
transactions. The difference is signiﬁcant. Univer-
sity 2 took 0.009 seconds and performed 17 trans-
actions, University 3 carried out 18 transactions in
0.091 seconds, University 4 undertook 30 transac-
tions in 0.025 seconds, and University 5 completed
28 transactions in 0.005 seconds. The highest number
of transactions was by University 1, with 45 in the
least time taken by any universities. The study estab-
lished that all universities deal with different transac-
tion costs (Ether). University 1 had the highest such
costs with 0.219 Ether, whereas University 2 had the
lowest with a rate of 0.051 Ether. The total transac-
tion cost obtained from University 4 was measured as
0.114 Ether. Meanwhile, University 3 had a transac-

Figure 11: Number of Transactions and Total Cost (US Dol-
lar $)

tion cost of 0.05 Ether. The data analysis compared
the number of transactions and total cost (Ether). The
ﬁndings conﬁrm that University 1 had the highest
number of transactions while dealing with the costs
of 0.219 Ether. The number of transactions result-
ing from University 2 stood at 17, however, its total
cost reached 0.051 Ether. Similarly, the total transac-
tion cost for University 4 was 0.114 Ether, whereas
the number of transactions totals 30. The cost of
Ether varies according to the number of transactions,
with University 1 having the most Ether and Univer-
sity 3 the least. Although universities 3 and 6 had
approximately the same Ether costs, the number of
transactions differed. For instance, University 3 made
18 transactions, whereas University 6 performed 8.
University 2 made 17 transactions in 0.051 seconds,
regarding Ether cost, whilst University 6 conducted
the lowest number of transactions. Accordingly, the
lowest ratio was associated with University 6, which
had 8 transactions. However, the total cost of trans-
actions in US dollars was measured at $0.068. All
universities had different amounts of transactions and
average costs, as reﬂected in the graph below. The
number of transactions at University 1 amounted to
45, and the total cost generated by the university was
$125.25. The highest cost of the transaction generated
by the universities. The cost is high because the uni-
versity made the highest number of transactions in the
least time. The lowest transactions, 8, were made by
University 6. The cost was low with 0.068, because
the institution made the fewest transactions simulta-
neously as University 1. Here, the study determines
the time and amount of transactions in a certain time
count when generating costs, as shown in ﬁgures 12
and 13.

proved different among the universities. This situ-
ation indicates the transactions’ time variations can
evaluate the system’s efﬁciency when added to the
blockchain. By considering the output provided in
the previous section, the study ascertained that the
number of transactions handled by University 3 was
only 18. However, it took 0.09 minutes on average
to complete the transaction. Meanwhile, University
3 had the most transactions, but only 0.01 minutes on
average for transaction conﬁrmation. Hence, the aver-
age conﬁrmation time does not depend upon the num-
ber of transactions handled by the system but the efﬁ-
ciency of the blockchain system and congestion on the
Ethereum blockchain. When a blockchain network
experiences peak trafﬁc, it delays transactions. Other
factors may also delay transaction conﬁrmation, such
as the gas limit. There exists a proportionality be-
tween the gas limit determined by the sender and the
blockchain mining process. Gas prices are denoted in
Gwei, which itself is a denomination of Ether. Trans-
actions with higher gas limits attract miners, there-
fore, operations with lower gas limit values will con-
tinue waiting.

Transaction Cost: The cost is the mining fee,
‘Gas’, which refers to the unit that measures the com-
putational effort required to execute speciﬁc opera-
tions on the Ethereum network. The purpose of gas
is to control the resources that a transaction can use
since it will be processed on computers worldwide.
Gas is separate from ETH to protect the system from
volatility in the value of ETH and manage the ratios
between the costs of various resources that gas pays
for, such as computation, memory and storage. Gas
also rewards the miners for the work they do. The
gas price component of a transaction allows users to
set the price they want to pay in exchange for gas,
where the price is measured in Gwei per gas unit.
Wallets can change the gas price to achieve faster
transaction conﬁrmations—the greater the gas price,
the quicker the transaction conﬁrmation. Accord-
ingly, the gas limit for the transactions sent from the
proposed system stood at 40,000 Gwei (0.004 ETH).
Concerning the volume of data sent in each transac-
tion, this value proves attractive to miners. Conse-
quently, all user transactions during the system eval-
uation required conﬁrmation in a good average time.
Lower priority transactions can use a lower gas price
which means a slower conﬁrmation. The market de-
cides the relationship between the price of ETH and
the cost of computing operations concerning gas. The
gas cost acts as a measure of computation and stor-
age used in the EVM, where the gas has a price mea-
sured in Ether. When sending a transaction, people
can specify the gas price they want to pay in ETH for

Figure 12: Number of Transactions and Average Conﬁrma-
tion Time.

Figure 13: Number of Transactions and Total Cost (Ether).

4.2.2 Discussion

These ﬁndings reveal different average transaction
conﬁrmation times regarding blockchain for each uni-
versity. Similarly, the study notes a difference in
the cost of transactions for each transaction on the
blockchain. Therefore, cost and time to conﬁrm the
transaction represent the variables considered for the
discussion.

Delay Time: Delay time represents the transac-
tion conﬁrmation time. Speciﬁcally, the time a trans-
action takes from its broadcast to the blockchain is
added to the distributed ledger. From the quantita-
tive data analysis in the previous section, the ﬁndings
indicate that for 219 transactions, there exists a ﬂuc-
tuation in the average transaction conﬁrmation time
between the universities. Ethereum network conges-
tion might represent the cause of delay in the trans-
action.
In terms of transaction conﬁrmation times,
the analysis reveals that the average conﬁrmation time

each gas unit. This equation calculates the transaction
fee:

Transaction fee = total gas used

× gas price paid (in Ether)

(1)

This study can explain why each transaction fee
differs. Both factors in the equation play a role in
determining the cost of transitions.

Total gas used: the gas limit has been speciﬁed in
the system for each transaction at the value of 40,000
Gwei (0.004 ETH) to speed up the mining process.
It remains unnecessary to use the speciﬁed gas limit
since transactions must pay for the computational,
bandwidth and storage space they consume in pro-
portion to these gas costs. Although a transaction in-
cludes a limit, any gas not used in a transaction reverts
to the user. In this sense, the value of ‘total gas used’
changes with each transaction and, therefore, the fee
changes accordingly.

Gas price paid (in Ether): gas fees are paid in
Ethereum’s native currency (ETH). Gas prices are de-
noted in Gwei. A Gwei or Gigawei is deﬁned as
1,000,000,000 Wei, the smallest base unit of Ether.
One Gwei equals 0.000000001 or 10-9 ETH. Con-
versely, 1 ETH represents 1 billion Gwei. Conse-
quently, each cost in Ether is different due to the con-
stant change in the value of Ether in the stock mar-
ket. For example, when this study started the system
evaluation process in May 2020, the price of Ether
began at $213.61, meaning that the transaction fee
was 0.004×213.61 = $0.854. Meanwhile, the trans-
action fee in February 2021 was 0.004×2036.55 =
$8.1462. The average fee for transactions. This study
also noted the signiﬁcant difference between the cost
in less than a year, with the price of Ether more than
tripling. Thus, the transaction cost doubled in pro-
portion to the rise of Ether in the price of cryptocur-
rencies in the stock market. Considering this aspect
and the information provided in the previous section,
it remains difﬁcult to ascertain accurate conﬁrmation
times when sending a transaction from one node to
another and adding it to the distributed ledger on the
blockchain. Furthermore, the transaction fee remains
unﬁxed and cannot be determined until conﬁrmation
of the transaction. Such a situation depends on differ-
ent factors. Based on previous ﬁndings and the points
discussed in this section, the irregular transaction time
depends primarily on the efﬁciency of the network
but remains within the acceptable range. However,
this area represents one of the limitations requiring
evaluation in future research. The unﬁxed transac-
tion cost changes depending on crypto prices on the

stock market. This situation may affect the sustain-
able use of the system. When the cost proves too
high, the system will be less attractive to users. Thus,
transaction fees represent another signiﬁcant restric-
tion of the system. Despite the effectiveness in other
regards and its achievement of the research objectives,
the cost and the scalability of blockchain and energy
consumption are negative aspects that open the door
for future research. In our system, we have to exe-
cute various functions on the blockchain, making the
smart contract an essential component in the system
structure. Therefore, the blockchain platforms that
do not support smart contracts are ineffective in tack-
ling this issue. Table 3 illustrates different blockchain
platforms, each has different characteristics and de-
sign decisions. The blockchain platforms listed in ta-
ble 3, Ethereum and Hyperledger, are the only plat-
forms designed to support rich and complex smart
contracts. Ethereum is a permissionless blockchain
platform designed to support creating and deploying
complex smart contracts on blockchains. While Hy-
perledger is an open-source collaborative project aim-
ing to advance permissioned blockchains, it aims to
provide an infrastructure of different modules, such
as smart contract engines, and tools for developing
blockchain platforms.

Table 3: Different Blockchain Platforms and Their Charac-
teristics.

Blockchain
Platform
Bitcoin
Ethereum
Zcash
Litecoin
Dash
Peercoin
Ripple

Monero
MultiChain
Hyperledger

Network
Permission
Permissionless
Permissionless
Permissionless
Permissionless
Permissionless
Permissionless
Permissionless
(controlled)
Permissionless
Permissionled
Permissionled

Smart Contract
Support
No
Yes
No
No
No
No
No

No
No
Yes

In theory, developers can use Ethereum or Hy-
perledger to build the distributed application based
on the system requirements and objectives. How-
ever, integrating the Hyperledger Fabric platform in-
stead of the Ethereum platform into such a system is
an interesting project for future researchers to tackle
the transaction cost issue. From a different perspec-
tive, a private Ethereum blockchain may be an appro-
priate solution to the transaction cost.
It comprises
zero transaction fees and higher scalability, and there
are no restrictions. However, switching from public
to private blockchain requires a range of additions
and modiﬁcations in the design of distributed appli-

cations. When compared against public blockchain,
private blockchain nodes require permission to join
a controlled blockchain and read the chain’s state.
Only users with permission can subscribe to the net-
work and write or send transactions to the blockchain.
Therefore, converting to a private blockchain is an-
other possible solution for future researchers to tackle
the issue.

Table 4: Financial Comparison of CVSS and Our System.

Contract Creation Cost
Number of Transactions
Transaction Cost
Average Transaction
Conﬁrmation Time (mm:ss)
Total Transactions
Conﬁrmations Time (mm:ss)

CVSS Our System

$19
60
$0.15
00:60

$10.76
219
$6.16
00:24

05:00

17:32

CVSS system is the only system that conducted
ﬁnancial analytic transactions, provided an explana-
tion of the transaction cost, while also providing the
time of conﬁrmation of transactions on the Ethereum
blockchain. Therefore, we compared the ﬁnancial
analysis of our system with the CVSS system, as
shown in table 4. According to the principle of trans-
action cost, the cost of deploying the smart contract
on the Ethereum blockchain for the CVSS system is
$19, whereas it is $10.76 for our proposed system be-
cause of the optimisation we carried out in the smart
contract. Accordingly, it only contains those func-
tions that are necessary to be on the blockchain. The
number of transactions conducted in our proposed
system is three times greater than in CVSS. This pro-
vides a clearer perception of the transaction cost when
using the system. Furthermore, we observe that the
cost of a single transaction in the CVSS system is
$0.15, while no clariﬁcation is provided as to whether
this number is ﬁxed per transaction, or that it is the av-
erage cost for 60 transactions sent through the CVSS
system. However, we calculated the mean cost for
219 transactions in our system, due to these transac-
tions being sent at various times over a period greater
than six months, during the system evaluation carried
out by end-users. The mean transaction cost for those
sent from our proposed system is $6.16. We can ex-
plain the cost rise as being a consequence of the rapid
rise in ether’s price during the system evaluation pe-
riod carried out by end-users, as explained previously
in the evaluation section. Regarding the principle of
transaction conﬁrmation time, the mean transaction
conﬁrmation time in the CVSS system was 60 sec-
onds, whereas the average for our proposed system
was 24 seconds, which is deemed acceptable in con-
trast with CVSS. The reason for this may be the gas

limit or the propagation delay due to Ethereum net-
work congestion, as clariﬁed in the evaluation sec-
tion. Additionally, the total transaction conﬁrmation
time in the CVSS system for 60 transactions was ﬁve
minutes. Comparatively, the total transaction conﬁr-
mation time in our proposed 219 transaction system
was approximately 17 minutes, which is an accept-
able number given the total number of transactions.

5 CONCLUSIONS

This research has aimed to demonstrate that the use
of Blockchain technology for the certiﬁcation and
veriﬁcation of achievements in higher education has
great potential in the global market. It is a method
that would be sustainable and advantageous for mul-
tiple parties. Credential fraud is widespread and per-
vasive, having a negative impact on educational in-
stitutions, students, and the wider society. Current
solutions, such as legacy credential veriﬁcation sys-
tems, are clumsy and are not time nor cost-efﬁcient.
In addition to this,
they lack efﬁcacy in their re-
sponse to corrupt practices, such as fraud on the part
of educational institutions and accreditation bodies.
The record of achievements that is proposed with the
use of Blockchain technology is comprehensive in
tackling widespread fraud. This system is signiﬁ-
cantly improved in comparison to legacy systems, be-
ing both more user-friendly and more efﬁcient. The
Blockchain technology method is a solution that ef-
fectively integrates into the existent credential veri-
ﬁcation ecosystem. This work aspires to positively
contribute to ongoing efforts towards the prevention
of credential fraud. Nevertheless, the cost of trans-
actions and energy consumption because of the PoW
algorithm are essential aspects to consider during the
conception of a blockchain-based solution.

Acknowledgements

We are grateful to all of those we have had the plea-
sure to work with during this project and all partic-
ipants who contributed to validating the design.
In
addition, we thank all the participants who answered
the questionnaires and others who participated in the
evaluation and reviewing process.

REFERENCES

Awaji, B., Solaiman, E., and Albshri, A.

(2020a).
Blockchain-based applications in higher education: A

In 2019 International Conference on Cyber-Enabled
Distributed Computing and Knowledge Discovery
(CyberC), pages 28–33. IEEE.

Virkus, S. (2019). The use of open badges in library and
information science education in estonia. Education
for Information, 35(2):155–172.

Watters, A.

(2019).
an introduction.
com/2016/04/07/blockchain-education-guide.

The blockchain for education:
Online at http://hackeducation.

Werner, S. M., Pritz, P. J., and Perez, D. (2020). Step
on the gas? a better approach for recommending the
In Mathematical Research for
ethereum gas price.
Blockchain Economy, pages 161–177. Springer.
Wood, G. et al. (2014). Ethereum: A secure decentralised
generalised transaction ledger. Ethereum project yel-
low paper, 151(2014):1–32.

Yumna, H., Khan, M. M., Ikram, M., and Ilyas, S. (2019).
Use of blockchain in education: a systematic literature
review. In Asian Conference on Intelligent Informa-
tion and Database Systems, pages 191–202. Springer.

systematic mapping study. In Proceedings of the 5th
international conference on information and educa-
tion innovations, pages 96–104.

Awaji, B., Solaiman, E., and Marshall, L.

(2020b).
Blockchain-based trusted achievement record system
design. In Proceedings of the 5th International Con-
ference on Information and Education Innovations,
pages 46–51.

Awaji, B., Solaiman, E., and Marshall, L. (2020c). Inves-
tigating the requirements for building a blockchain-
based achievement record system. In Proceedings of
the 5th International Conference on Information and
Education Innovations, pages 56–60.

Brooke, J. (1996). Sus: a “quick and dirty’usability. Us-

ability evaluation in industry, 189(3).

Cappelli, P. (2019). Your approach to hiring is all wrong.

Harvard Business Review, 97(3):48–58.

Crowcroft, J. (2018). On and off-blockchain enforcement of
smart contracts. In Euro-Par 2018: Parallel Process-
ing Workshops: Euro-Par 2018 International Work-
shops, Turin, Italy, August 27-28, 2018, Revised Se-
lected Papers, volume 11339, page 342. Springer.

Gueron, S., Johnson, S., and Walker, J. (2011).

Sha-
In 2011 Eighth International Conference
512/256.
on Information Technology: New Generations, pages
354–358. IEEE.

Han, M., Li, Z., He, J., Wu, D., Xie, Y., and Baba, A.
(2018). A novel blockchain-based education records
veriﬁcation solution. In Proceedings of the 19th an-
nual SIG conference on information technology edu-
cation, pages 178–183.

HEDD (2021). Higher education degree datacheck. Online

at https://hedd.ac.uk/.

Henle, C. A., Dineen, B. R., and Duffy, M. K. (2019). As-
sessing intentional resume deception: Development
and nomological network of a resume fraud measure.
Journal of Business and Psychology, 34(1):87–106.

Jirgensons, M. (2018).

Blockchain and the future of
digital learning credential assessment and manage-
ment. Journal of teacher education for sustainability,
20(1):145–156.

Molina-Jimenez, C., Sfyrakis, I., Solaiman, E., Ng, I.,
Wong, M. W., Chun, A., and Crowcroft, J. (2018). Im-
plementation of smart contracts using hybrid architec-
tures with on and off–blockchain components. In 2018
IEEE 8th International Symposium on Cloud and Ser-
vice Computing (SC2), pages 83–90. IEEE.

NGA (2021). NGA human resources. NGA.
Nguyen, D.-H., Nguyen-Duc, D.-N., Huynh-Tuong, N., and
Pham, H.-A. (2018). Cvss: a blockchainized certiﬁ-
cate verifying support system. In Proceedings of the
Ninth International Symposium on Information and
Communication Technology, pages 436–442.

Sanmogan, E. (2018). How much does your CV lie? Online

at https://www.theukdomain.uk/much-cv-lie/.

Schmidt, P. (2016). Blockcerts—an open infrastructure for
academic credentials on the blockchain. MLLearning
(24/10/2016).

Vidal, F., Gouveia, F., and Soares, C. (2019). Analy-
sis of blockchain technology for higher education.

