JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

1

Fabric-SCF: A Blockchain-based Secure Storage
and Access Control Scheme for Supply Chain
Finance

Dun Li ID , Dezhi Han ID , Noel Crespi, Roberto Minerva ID , Zhijie Sun ID

1
2
0
2

v
o
N
6
2

]

R
C
.
s
c
[

1
v
8
3
5
3
1
.
1
1
1
2
:
v
i
X
r
a

Abstract—Supply chain ﬁnance(SCF) is committed to provid-
ing credit for small and medium-sized enterprises(SMEs) with
low credit lines and small ﬁnancing scales. The resulting ﬁnancial
credit data and related business transaction data are highly
conﬁdential and private. However, traditional SCF management
schemes mostly use third-party platforms and centralized designs,
which cannot achieve highly reliable secure storage and ﬁne-
grained access control. To ﬁll this gap, this paper designs and
implements Fabric-SCF, a secure storage and access control
system based on blockchain and attribute-based access control
(ABAC) model. This scheme uses distributed consensus to realize
data security, traceability, and immutability. We also use smart
contracts to deﬁne system processes and access policies to ensure
the efﬁcient operation of the system. To verify the performance of
Fabric-SCF, we designed two sets of simulation experiments. The
results show that Fabric-SCF achieves dynamic and ﬁne-grained
access control while maintaining high throughput in a simulated
real-world operating scenario.

Index Terms—Blockchain, Smart Contract, Supply Chain Fi-

nance, ABAC, Hyperledger Fabric.

I. INTRODUCTION

S UPPLY chain ﬁnance(SCF) enables enterprises of differ-

ent sizes to have better opportunities for joint develop-
ment. Under the situation of economic globalization, small
and medium-sized enterprises(SMEs) have gradually become
an important driving force for national economic development
[1]. SMEs need sufﬁcient cash ﬂow for their operations, but
capital inﬂows and expenditures for supply chain operations
occur at different times, so access to ﬁnancing services is
often required to cover shortfalls in capital ﬂow. However,
traditional ﬁnancial services treat SMEs as isolated entities [2],
ignoring their business potential in the supply chain, making
them face long-term ﬁnancing difﬁculties [3]. As a result, SCF
plays a signiﬁcant role in serving the entity economy and
SMEs. SCF combines capital operations with the supply chain
and establishes a sound transaction structure [4]. SCF has
entered the information and intelligent stage [5]. Through the
construction of enterprise information systems, the difﬁculties
of information asymmetry among supply chain stakeholders

Dun Li is with the College of Information Engineering at Shanghai Mar-
itime University, China and Telecom SudParis, IMT, Institut Polytechnique
de Paris, France. E-mail:lidunshmtu@outlook.com. (Corresponding Author)
Dezhi Han is with the College of Information Engineering at Shanghai Mar-
itime University, China. E-mail:dzhan@shmtu.edu.cn (Corresponding Author)
Noel Crespi and Roberto Minerva are with Telecom SudParis 9 Rue Charles

Fourier, 91000 Evry, France. Email: noel.crespi@it-sudparis.eu

Zhijie Sun is with the College of Information Engineering at Shanghai

Maritime University, China. E-mail: S19117157825@163.com.

have been alleviated, the cost of information circulation has
been reduced, and convenient and efﬁcient ﬁnancial services
can be provided [6].

However, SCF involves large amounts of digital data. The
ﬂow of productions, information, and capital is often seen
as isolated across functions and parties. In traditional SCF
the initiation of business processes
management solutions,
depends on sequential input and manual validation. The high
cost and complexity of these solutions, security ﬂaws, and
time-consuming processing have caused the development of
SCF to encounter bottlenecks [7]. In addition,
in the ﬁ-
nancing business of SCF, the credit transmission capacity of
core enterprises is limited. And SMEs have problems such
as irregular ﬁnancial statements and inadequate management
systems. Therefore, it is difﬁcult for ﬁnancial institutions to
effectively control risks through the information provided, and
it is urgent to add effective privacy protection mechanisms
and access control mechanisms to the SCF management plan
to help ﬁnancial institutions obtain information efﬁciently and
securely [8].

Interestingly, blockchain technology can solve the current
problems of information asymmetry, lack of visibility in the
transaction process, and possible joint fraud in the core busi-
ness model. As the underlying technological framework for
cryptocurrencies, blockchain is decentralized and immutable
[9], [10]. Blockchain is a transparent, secure decentralized
system based on an immutable model, so it is seen as a solution
to change the rules in the traditional supply chain industry.
Currently, blockchain projects can be divided into four main
categories which are cryptocurrency, platform, application,
and asset tokenization. Mainstream blockchain platforms have
been widely used in healthcare [11]–[15], smart cities [16]–
[18], energy networks [19]–[22], Internet of Things (IoT)
[23]–[26], Internet of Vehicles (IoV) [27]–[33], and education
[34]–[37]. Thus, a blockchain-based SCF solution is urgently
needed and feasible.

Besides, with the emergence of the smart contract-enabled
blockchain projects such as Ethereum and Hyperledger, the
blockchain has entered the 2.0 era. Smart contracts are pro-
grammable and Turing-complete [38]. The transaction can
be initiated automatically according to the rules set by the
code. The introduction of smart contracts is expected to
change the existing transaction mode of SCF and reconstruct
the breakthrough technology of society from the underlying
infrastructure. Moreover, in a realistic access control strategy,
it is necessary to approve or deny the user’s request based

 
 
 
 
 
 
JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

2

on the environmental conditions implemented by the current
policy. In the open network environment of blockchain, the
attribute-based access control (ABAC) model is suitable and
efﬁcient as a ﬂexible and ﬁne-grained access control method
[39]. This model mainly determines whether the data requester
has the correct attributes to determine the data requester’s
access control rights to private data resources.

So far, scholars have given extensive attention to issues
such as risk pricing, proﬁt enhancement, and business models
for SCF. However, there have been few attempts to apply
blockchain to SCF management systems for optimization and
improvement. In this context, we propose a blockchain-based
SCF management system that digitizes the business processes
in SCF, optimizes them by deploying smart contracts, and
stores them in the blockchain in the form of data streams,
ensuring privacy, immutability, and traceability. We also intro-
duce the ABAC model for access control to ensure efﬁcient
and secure access.

Speciﬁcally, the main contributions of this paper can be

summarized as follows.

• We apply blockchain to SCF management systems, en-
abling decentralized management, secure storage, and
multi-party maintenance of ﬁnancing projects with the
help of distributed consensus and authentication mecha-
nisms.

• Based on the basic framework of blockchain, this paper
designs an auxiliary architecture based on ABAC to
achieve ﬁne-grained access control.

• In this paper, we use smart contracts to deﬁne multi-tier
data structures, access policies, and system workﬂow to
ensure high-speed data storage, retrieval, query, and ﬁne-
grained access control.

• We have completed the preliminary development of
Fabric-SCF and proved its performance through simu-
lation experiments.

The rest of this paper is organized as follows. We ﬁrst
introduce the related work in Section II. Then, in Section III,
we present the relevant preliminaries. Next, we present the
system models, assumptions, and design goals in Section IV.
In Section V, the performance of the proposed model is ana-
lyzed based on experimental results. Finally, the conclusions
and future work are introduced in Section VI.

II. RELATED WORK

In this section, we ﬁrst survey the related works about the
SCF model in Section II-A and then present the application
of blockchain and smart Contract in SCF scenarios in Section
II-B and Section II-C respectively.

A. SCF Model

SCF has long been recognized as an important intersection
between the ﬁelds of trade ﬁnance and supply chain man-
agement. The empirical results show that, a well-structured
SCF solution can signiﬁcantly enhance the efﬁciency of capital
ﬂows for SMEs [40]–[49].

Many researchers have worked to build new models of SCF
that improve the efﬁciency of data ﬂow and privacy protection

mechanisms. To hedge ﬁnancial risk, traditional SCF relies
on credit rating [50]. In [51], [52], authors used multi-agent
simulation technology instead of absolute rationality to design
a SCF simulation model based on Simon’s bounded rationality.
Lu et al. [53] evaluated the bank’s fair pricing rate under
the guarantee model and found that the ﬁnancial model of
third-party guarantees may not always be applicable. Xiao
et al. [54] and Liao et al. [55] try to use entropy weight,
analytic hierarchy process, multi-expert decision model, and
other methods to sort suppliers to improve the efﬁciency of
the model. In [56], big data analytics are applied to build
business processing platforms for SCF and structure business
data. The review of Jia et al. [57] summarized that sustain-
able supply chain ﬁnance (SSCF) can signiﬁcantly enhance
the sustainability and development performance of SMEs.
The work of [58]–[62] conﬁrms this view. Emtehani et al.
[63] proposed an effective SCF decision framework from an
optimization business perspective that assists in operational
ﬁnancing decisions and improves ﬁnancial efﬁciency from
an algorithmic perspective. Then, Sang [64] proposed a risk
assessment strategy based on genetic algorithm and neural
network method to reduce the probability of proﬁt damage
of the fund providers in SCF. Yin et al. [65] proposed an
edge-intelligent SCF model based on B2B platform, which has
obvious efﬁciency advantages in responding to the changing
trend of the parameters related to the SCF model of B2B
platform. Abbasi et al. [66] designed an IoT-based SCF model
and proves that the credit risk measurement model is credible.
The above models incorporate many new techniques in
operations research, machine learning, neural networks, IoT,
and edge computing to try to improve the efﬁciency of SCF
business processes and enhance data security, but they all need
to rely on third-party platforms.

B. Applications of blockchain in SCF

The applications of blockchain technology originally orig-
inated from cryptocurrencies, as the underlying database and
maintenance technology. Due to decentralization, consensus
mechanism, and unalterability, blockchain technology has
broad industrial application prospects.

In [67], [68], authors reviewed the feasibility of applying
blockchain technology in SCF and conﬁrmed that the techni-
cal characteristics of blockchain can effectively promote the
development of SCF. Speciﬁcally, Du et al. [69] proposed
a blockchain-based business management platform for SCF,
which solves the distrust problem among supply chain partici-
pants. Liu et al. [70] proposed a hybrid chain model combining
a public chain-based consistency algorithm and a federated
chain-based consistency algorithm to process each account’s
transactions in parallel, serving the supply chain ﬁnancial
data management of engineering projects and enabling more
efﬁcient transaction authenticity auditing, risk assessment, and
credit delivery for core enterprises. Li et al. [71] proposed a
solution for SCF and showed the operation process of three
SCF models on the platform. Wag et al. [72] proposes a model
that combines blockchain technology and SCF gaming and
uses blockchain to connect banks, other ﬁnancial institutions,

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

3

and core companies. Chen et al. [73] proposed BCAutoSCF,
a blockchain-powered SCF platform dedicated to serving the
automotive retail industry, enabling reliable, transparent, and
traceable business inquiries and data access. Similarly, in [74]–
[84], blockchain technology has been used to enhance the
privacy of business management processes for SCF.

C. Applications of Smart Contracts in SCF

Notably, smart contracts have Turing-complete programma-
bility and can be used to deploy the speciﬁc implementation of
SCF-related business. Kim et al. [85] proposed an ethereum-
based blockchain platform and transformed business processes
into smart contracts to ensure data traceability. Also based on
Etherium, Huertas et al. [86] proposed an intelligent contract-
based ecosystem allowing SMEs to quickly implement be-
spoke SCF solutions called Eximchain, which uses a consensus
protocol and a secondary voting-based governance model to
provide practical, time-limited security guarantees. Ref. [87]–
[89] also proposed similar SCF solutions based on smart
contracts deployed in Etherium. As in this paper, Ma et al.
[90] proposed a Hyperledger Fabric-based solution that adapts
to a wide variety of scenarios and complex business processes
using segmented permissions, privacy protection mechanisms,
etc. In [91], more ﬁnancial models based on smart contracts
are also discussed.

In summary, these models attempt to build decentralized
blockchain-based models from a privacy-preserving perspec-
tive, using smart contracts to implement business processes
in SCF. However, most of these models have been tested on
public chains, and there is a lack of industrial-grade platforms
that can be used in practice.

III. PRELIMINARIES

This section describes the main business processes for SCF.

Tab. I presents the notations used in this paper.

TABLE I
KEY NOTATIONS

Description
Core enterprise
Financial institution i
Financing enterprise i
Supplier i, Distributor j
Credit facility i
Collateral i
Productons i − j
Accounts receivable document i
Prepayment Contract i
Financing order i
Financing Project i
Certiﬁcate Authority
Certiﬁcate i
Conﬁg ﬁle of i
The public key of i
The private key of i
The anonymous credential of entity i
The storage credential of content x
Encrypted content for x
The hash value of x
The encrypted content of x

Notation
CE
F Ii
F Ei
Spi, Dtj
CFi
Coli
Pi−j
ARDi
P Ci
F Oi
F Pi
CA
Cti
Cfi
pubki
priki
σi
RC(x)
CT(x)
HV(x)
ST(x)

A typical SCF framework consists of a core company,
suppliers, distributors, and ﬁnancial institutions. Fig.1 shows
an example.

Fig. 1. An example of SCF framework.

SCF uses self-repaying trade ﬁnance based on the core
enterprise. Compared with traditional credit business, SCF
focuses more on the real
trade background between the
upstream and downstream of the supply chain. In the past,
commercial bank examination, and approval mainly on credit
enterprises due diligence, a full range of examination and
approval of its credit level, whether there is real estate can
be mortgaged, cash ﬂow is stable to ensure the future ability
to pay the debt, although lending will also be entrusted to
pay to ensure the use of funds, less attention to the overall
supply chain. Based on different ﬁnancing directions and
mortgage targets, there are three main types of SCF businesses,
namely accounts receivable ﬁnancing, inventory ﬁnancing, and
prepayment ﬁnancing.

A. Accounts Receivable Financing

The accounts receivable ﬁnancing model

is a ﬁnancing
business provided by a ﬁrm based on accounts receivable
arising from a real trade between a seller and a buyer, which
is repaid by the contracted accounts receivable. Speciﬁcally,
the supplier Spi ﬁrst enters into a transaction with the core
enterprise CEi, which is downstream in the supply chain as
Pi−j−→ CE, and the core enterprise CEi issues an accounts
Sp
receivable document to the supplier Spi as CE ARD−→ Sp. Then,
the supplier Spi assigns the receivables document ARDi to
the ﬁnancial institution F Ii and the downstream supplier in
the supply chain makes a payment commitment to the ﬁnancial
institution F Ii as Sp ARD−→ F I. The ﬁnancial
institution
F Ii provides a credit facility CFi
to the supplier Spi as
F I CF−→ Sp.

B. Inventory Financing

Inventory ﬁnancing uses the productions Pi−j in the trade
process as the collateral Coli for ﬁnancing. Generally, it occurs
when the supply of Spi has a large inventory or slow inventory
turnover, which leads to high pressure on capital turnover and
enterprises use existing products. Pi−j get cash in advance
Pi−j−→ F I. The ﬁnancial institution F Ii can issue the
as Sp
corresponding credit facility CFi based on the evaluation of
the third-party regulatory company as F I CF−→ Sp. If the SME
loses the ability to repay during the repayment period, the
ﬁnancial institution F Ii can ﬁnd the core enterprise CE, sign
Pi−j−→
a purchase agreement with the core enterprise CE as F I
CE, and complete the repayment as CE Cash−→ F I.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

4

C. Prepayment Financing

Based on inventory ﬁnancing, prepayment ﬁnancing has
been developed. The buyer Bri negotiates full payment to
the seller Sri on the condition that a percentage of the
deposit is paid. The seller Sri ships the productions Pi−j
in accordance with the purchase and sale contract and the
cooperation agreement, and the productions Pi−j arrive with
a pledge as security Coli for the ﬁnancial institution F ii.
In the speciﬁc process, the core enterprise CEi provides a
purchase and sale contract P Ci to the distributor Dti. Then
the distributor Dti acts as a ﬁnancing enterprise F Ei to get
Pi−j−→ F I and F ii
CF−→ Dti. Distributor
credit facility as CE
Dti submits the delivery deposit to the ﬁnancial institution F ii
in installments, and the ﬁnancial institution F ii then informs
the core enterprise in installments to deliver the productions
Pi−j to the distributor Dti.

with the core enterprise CE. The Fabric-SCF system uses
the blockchain as a database and is divided into a supply-
side and a distribution-side in terms of business processes
with the core enterprise as the center. Sellers Sri and buyer
Brj can be uniﬁed to supplier Spi and distributor Dtj.
For ﬁnancing business, supplier Spi and distributor Dtj can
be grouped as ﬁnancing companies F Ei or F Ej as users.
The ﬁnancial institution F Ii uses inventory Pi−j, accounts
receivable documents ARDi or prepayment contracts P Ci as
collateral Coli and the ﬁnancing order F Oi to lend credit
facility CFi to the ﬁnancing enterprise F Ei based on the
business transactions between the ﬁnancing enterprise F Ei
and the core enterprise CE. All users and ﬁnancial institutions
F I need to be authorized by CA, and all data access requests
need to go through Admin. The data ﬂow is controlled by smart
contracts, and the corresponding data is stored in the ledger in
the blockchain, thus forming a closed loop of data exchange.

IV. SYSTEM MODEL AND DESIGN

This section introduces the architecture of Fabric-SCF. In
Section IV-A, we present the designed system architecture.
Section IV-B introduces the deﬁned data structure. Section
IV-C shows the details of the smart contract design. In Section
IV-D, we present the workﬂow of Fabric-SCF.

A. System Architecture

The proposed Fabric-SCF is composed of consortium
blockchain, user, admin, and user access to form the underly-
ing structure as shown in Fig. 2.

Blockchain is a distributed network composed of trusted
nodes for data synchronization and storage. In this network,
authentication is realized through digital certiﬁcates to ensure
the security and integrity of data in the system.

User contains business participants. Logically, business
participants contain mainly core enterprise CE, supplier SPi,
and Distributor Dtj.

Admin is responsible for managing the access to blockchain
system. After entering the blockchain system through the
validation of CA, it needs to develop access policies, distribute
user access to data, and maintain access policies.

User Access is a collection of access commands. In this
network, Fabric-SCF allows all parties involved in SCF to be
authorized to send data ﬂows, access data, and perform add(),
query(), update() functions.

B. Data Structure

Blockchain can be summarized as a distributed state ma-
chine. All nodes start from the same creation state, run the
transactions in the block that have reached a consensus in
turn, and drive the states of each node to change according to
the same operation sequence (add, delete, update, and query).
For all nodes in the implementation of the same number of
blocks after the transaction, the state is completely consistent.
To ensure that the world state can be updated quickly when
the transaction is executed, the design and implementation of
the world state scheme should consider the fast search and
efﬁcient update of the state data. To ensure system efﬁciency
and reduce system latency, nine data structures are designed
in this paper. The index relationship is shown in Fig. 3.

Fig. 2. Architecture of Fabric-SCF.

Fig. 3. Relationship between data structures.

The three types of business correspond to different stages
of the supply chain business. All credit facility CFi provided
by ﬁnancial institutions F Ii is based on the stage of business

Deﬁning the data structures in this way facilitates the design
of uniform data access operations and reduces the complexity
of the system. The multiplicity of mappings between data

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

5

structures is shown in Eq. 1.






= 1 : n
U ser → F C Index
F C Index → F iP roject = 1 : 1
= 1 : 1
F C → CE Index
= 1 : 1
F C → F E Index
= 1 : 1
F C → F i Index
= 1 : 1
CE Index → CE
= 1 : 1
F E Index → F E
= 1 : 1
F I Index → F I

it is also needed to check if the user already exists before the
member is registered.

iii) checkU ser(): If user wants to be authorized by an
access policy, it needs to pass veriﬁcation ﬁrst to verify the
Ct, SingnID, P ubk, P rik and U serT ype.

(1)

1) User: The data structure of U ser corresponds to the
system role of U ser, and it mainly contains three parts. Where
U serN ame directly reﬂects the user’s name, and U serT ype
corresponds to the main participants of the system process
SPi, Dtj, CE. U serN umber is calculated by Eq. 2.

U serN umberi = HV (U serN amei, pubKeyi)

(2)

2) FiProject: As the core data block, it contains many
attributes. F iP roject has a one-to-one correspondence with
F iP roject Index. The core segments are as follows.

i) Collateral: The collateral Coli of the ﬁnancing enter-
prise F Ei to the ﬁnancial institution F Ii when handling the
ﬁnancing business includes inventory Pi−j, accounts receiv-
able document ARDi, and prepayment P mi as Eq. 3.

Coli =






Pi−j

ARDi

P mi

(3)

ii) Amout: The interest rate and amount of the credit facility

CFi speciﬁed in the ﬁnancing project.

iii) T ime: The timeline of the credit facility CFi in the

ﬁnancing project F Pi.

iv) Index: The index of the core enterprise CE, Financing
institution F Ii related to the

enterprise F Ii and ﬁnancial
ﬁnancing project F Pi.

C. Smart Contract Design

Smart contract is the key to realizing the business logic
and access control of the system. To maximize the protection
of data privacy and integrity while ensuring the efﬁciency
of the system, this paper mainly designs the smart contract
from the perspective of user management, ﬁnancing project
management, and access control.

1) User Management Contract: In our proposed system,
the management of users mainly involves creation and query.
To ensure the uniqueness of the identity of participants of
multiple organizations, it is stored in the state database of the
blockchain as Fig. ?? shows.

i) createU ser(): U ser registration is the ﬁrst step for to
participate in the system, and createU ser() needs to generate
a U serN umber based on the U serN ame and U serT ype as
a unique identiﬁer.

Fig. 4. An example of member data.

2) Financing Project Management Contract: According
to user requests, related ﬁnancing project data access op-
erations mainly include addF iproject(), queryF iproject(),
updateF iproject(), and deleteF iproject(). Besides, we also
deﬁne checkF iproject() and checkU dvInf o() method to
ensure the legitimacy and reliability. These operations corre-
spond to different entities, different authorizations, and differ-
ent processes.

i) addF iproject(): When a user submits a request to add
a contract, checkF iproject() will be triggered ﬁrst to check
the reasonableness of the contract information. If the contract
information is reasonable, the contract will be published and
the contract and all operations on the contract will be packaged
and written to the blockchain ledger. The adding and judgment
logic is shown in Algorithm. 1.

Algorithm 1 addFiProject()
Require: FiProject(FP)
Ensure: Ok or Error

return Error(BadFP);

1: @implement SmartContract Interface;
2: APIstub ChaincodeStub ← Invoke();
3: if CheckFiProject(FP) == False then
4:
5: end if
6: Id ← Sha256(FP.FiProjectName + FPFiProjectNumber);
7: err ← APIstub.PutState(Id, FP);
8: if err! = null then
9:
10: end if
11: return Ok;

return Error(err.Error());

ii) queryF iproject(): The query function is very com-
mon and all users can implement queries for details re-
lated to the authorized contract data. Both the ﬁnancing
project name F iP rojectN ame and ﬁnancing project number
F iP rojectN umber can be used as the basis for queries.

iii) updateF iproject(): This function updates the order
information. In some special cases, the contract details such
as contract term, interest rate due, etc. need to be changed.
Similar to addF iproject(), the update process ﬁrst triggers
checkU dvInf o() to check the reasonableness of the updated
information and posts the veriﬁed update information, and
updates the ledger.

ii) queryU ser(): Thin function can query the user infor-
mation based on U serN ame and U serN umber. In addition,

iv) deleteF iproject(): Deleting a contract usually happens
by mistake, or when a contract is re-entered. When the user

1234{“userName”: “user1”,“userNumber”: “1a462ae9c1350c24ca8e389090946c7ed517667231c7b6ae22d0fed39ca55dd1”,“userType”: “CE”}5JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

6

to delete an order, checkF iproject() is
issues a request
ﬁrst triggered to check the reasonableness of the contract
information, and then queryF iproject() is called to check
the status of the order.

v)

checkF iproject(): When

submits
this method is used to check whether
information are

the ﬁnancing project

user

the

addF iproject(),
the key ﬁelds of
reasonable.

vi) checkU dvInf o(): This method is used to verify the

legitimacy of the update related to updateF iproject().

3) Access control contract: The access control management
contract is used to verify that a user’s data access request
satisﬁes the access control policy set by the administrator and
consists mainly of Auth(), GetAttrs(), CheckP olicy() and
CheckAccess().

i) Auth(): The public key distributed to the user by Admin
can be used to encrypt the request. Based on this, this method
is used to authenticate the user request and further determine
the user’s identity.

ii) GetAttrs(): The attribute ﬁelds contained in the user’s
request are resolved by calling the GetAttrs() method after
verifying the user’s identity. The attribute ﬁelds contained in
the request are the subject attribute and the object attribute
{S, O}. After further determining the environment attribute
E, the attribute combination can be obtained as {S, O, E}.

iii) CheckAccess(): This method is the core of the im-
plementation of access control management. First, the S, O
attribute is obtained via the GetAttrs() method, then the
QueryP olicy() method is called using the former to obtain
the corresponding ABACPolicy. If the method returns null,
then no policy supports the request and the request is invalid.
Then, the request is veriﬁed by validating the policy that
matches, and if the attributes E and A in the policy are both
satisﬁed, the request passes the veriﬁcation. The pseudo-code
of the CheckAccess() is shown in Algorithm. 2.

Algorithm 2 CheckAccess()
Require: ABAC Request
Ensure: OK or Error
1: {Su, Ou, Eu} ← GetAttrs(ABAC Request);
2: Policy ={P olicy1,...P olicyn} ← QueryP olicy(Su, Ou);
3: if Policy == Null then
return Error();
4:
5: end if
6: for Policy in {P olicy1,...P olicyn} do
{. . . , Pp, Ep} ← Policy
7:
if Value(Pp) == 1 && Eu ∩ Ep !=Null then
8:
9:
10:
11: end for
12: return Error();

return OK;

end if

.
4) Policy Contract: The PC provides the following methods

to operate ABACPolicy.

blockchain after the policy is legal. The details are shown in
Algorithm. 3.

Algorithm 3 AddPolicy()
Require: ABACP
Ensure: OK or Error

return Error(BadPolicy);

1: @implement SmartContract Interface;
2: APIstub ChaincodeStub ← Invoke();
3: if err! = null then
4:
5: end if
6: Id ← Sha256(ABACP.S + ABACP.O);
7: err ← APIstub.PutState(Id, ABACP);
8: if err! = null then
9:
10: end if
11: return OK;

return Error(err.Error());

.
ii) DeleteP olicy(): This method will be called in two ways.
Firstly, the administrator will actively call this method to delete
an ABACPolicy. Secondly, if a policy is found to have expired
during the execution of the CheckAccess() method, then
this method will be called automatically to delete the useless
policy.

iii) U pdateP olicy(): This method will be called in two
ways. Firstly, the administrator will actively call this method
to delete an ABACPolicy. This method is called when the
administrator needs to modify an ABACPolicy. When calling
this method, you need to write a modiﬁed record into the
SDB and blockchain. The method has ﬁnally executed the
addP olicy() method after completing the policy update and
re-increasing the modiﬁed policy into the blockchain.

iv) QueryP olicy(): All strategies are stored in Status
Database CouchDB, and the administrator can query the
details of the ABACPolicy by attribute S or O.

D. Workﬂow

The system workﬂow consists of four parts. 1) Blockchain
network initialization. 2) Access policy deployment. 3) User
registration. 4) Financial project management. 5) User Access
Assignment We present the details of the ﬁve parts in Fig 5.

V. EXPERIMENT AND COMPARISON

This section describes the experimental procedure and the
comparison of results to show the functionality and perfor-
mance of the proposed Fabric-SCF. Section V-A describes
the environment and setup parameters of the experiment. In
Section V-B, we present
the system implementation. The
performance of the proposed system and the experimental
results are demonstrated in Section V-C.

A. System environment and conﬁguration

i) AddP olicy(): The PSC needs to run the CheckP olicy()
method before calling this method to pass it to add the policy,
and the policy can only be written to the SDB and the

The experiments in this paper are mainly conducted in
a single machine environment, and the conﬁguration of the
system is as follows.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

7

1) User management contract: As section IV-C1 presents,
this part of the method focuses on the creation, query, and
deletion of each participant SPi, Dtj, CE in the system.

CreateU ser(): This method can be called if you want to
add a user, this method automatically generates a user number
based on the user name and type, as shown in Fig. 6.

Fig. 6. System response by calling the CreateU ser() method.

QueryU ser(): If you want to query the details of a user,
you can call this method to query the user’s information based
on the user number as shown in Fig. 7.

Fig. 7. System response by calling the QueryU ser() method.

CheckU ser(): This method is used to check the user’s
identity, including his certiﬁcate, private key and identity type,
etc. It returns OK if the check passes, otherwise, it returns
Error as shown in Fig. 8.

Fig. 8. System response by calling the CheckU ser() method.

2) Financing project management contract: As introduced
in section IV-C2, this part of the chaincode mainly realizes the
functions of adding, querying, updating, and deleting ﬁnancial
projects.

AddF iP roject(): This method can be called to write
information

information to the SDB when project

project
needs to be added, as shown in Fig. 9.

QueryF iP roject(): This method can be called to view
information about a particular project by its project number,
thus enabling the retrieval of detailed information about a
ﬁnancial project, as shown in Fig. 10.

U pdateF iP roject(): This method can be called when a
project needs to be updated to modify the information of the
ﬁnancial project, before executing this method you need to
execute the CheckU dvInf o() method to determine if you
have the update permission, as shown in Fig. 11.

DeleteF iP roject(): This method can be executed if the
system needs to delete project information from the SDB as
shown in Fig. 12.

Fig. 5. Workﬂow

TABLE II
NUMBER OF NETWORK NODES

Node name
Fabric-couchdb
Fabric-ca
Fabric-peer
Fabric-orderer
Fabric-tools
PSC
ASC

Discription
Database node
CA node
peer node
orderer node
cli node
policy smart contract node
access smart contract node

Number
4
2
4
1
1
4
4

1) Network architecture: The scheme consists of a total of

eight network nodes, as shown in Tab. II.

2) Chaincode deployment: In Fabric-SCF, all the attribute
delimitation, access control, and system operations are im-
plemented by chaincode. Chaincode setup mainly includes
installation, instantiation, and upgrade

i): Installation: After the initialization of the blockchain
network is completed, the installation of the chaincode can
begin. The installation of chaincode is carried out through Hy-
perledger client nodes, which are used to install the chaincode
into each peer node in turn.

ii): Instantiation: After the installation of the chaincode
is completed, any peer node is designated to instantiate the
installed chaincode.

iii): Update: Before the chaincode can be updated, a new
chaincode must be installed, i.e. the chaincode update is only
valid on the peer node where the new chaincode is installed.

B. System implementation

This section mainly demonstrates the operational effects of
three smart contracts to make a clearer understanding of this
program, and the speciﬁc operation results are as follows.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

8

Fig. 9. System response by calling the AddF iP roject() method.

Fig. 12. System response by calling the DeleteF iP roject() method.

Fig. 10. System response by calling the QueryF iP roject() method.

CheckF iP roject():This method is used to verify the le-
gitimacy of a ﬁnancial project and to write a complete project
message to the SDB once it has been veriﬁed, as shown in
Fig. 13.

3) Access control contract: As section IV-C3 presents, this
part of the chaincode is mainly used to implement auditable
access control for participants.

AddP olicy(): This method is used to store the speciﬁed
policy in the status database after it has been agreed between
the administrator and the user as shown in Fig. 14.

QueryP olicy(): This method can be used to determine if
the user has access rights by querying by user number as
shown in Fig. 15.

U pdateP olicy(): This method can be called to update the
policy once the access requirements have changed as shown
in Fig. 16.

DeleteP olicy(): This method can be called to remove a
policy if it is no longer valid or if you need to force a policy
to be removed as shown in Fig. 17.

CheckAccess(): After receiving a request from the user, the
CheckAccess() method in AC will be called automatically to
verify whether the request is valid or not as shown in Fig. 18.

Fig. 13. System response by calling the CheckF iP roject() method.

Fig. 14. System response by calling the AddP olicy() method.

Fig. 15. System response by calling the QueryP olicy() method.

Fig. 16. System response by calling the U pdateP olicy() method.

Fig. 11. System response by calling the U pdateF iP roject() method.

Fig. 17. System response by calling the DeleteP olicy() method.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

9

Fig. 18. System response by calling the CheckAccess() method.

C. Performance tests and experimental results

To validate the performance of the proposed Fabric-SCF, we
designed two sets of simulation experiments to simulate the
concurrency, transaction time, and throughput of the system
under real-life usage conditions.

1) Execution time of the contract: Following the system
usage logic, we ﬁrst tested the system response time of the
user management contract, the ﬁnancing project management
contract, and the access control contract separately by module,
as shown in Fig. 19. The experimental results show that with
the increase of block size, the contract execution time shows an
orderly growth trend and the growth is controllable. Obviously,
the execution time for add() and update() contracts are higher
than those for query() and delete() contracts due to the data
write operations involved, however the difference is small and
reasonably manageable.

2) TPS of the contract:

In the second group of experi-
ments, we compared the TPS of Fabric-SCF under different
concurrent numbers under simulated real conditions. Under
the Solo and Kafka consensus mechanism, the throughput of
the proposed system can be maintained at a relatively smooth
level, and none of them exceeds the threshold of 550 as shown
in Fig. 20. In conclusion, the Fabric-SCF system maintains
high TPS with relatively consistent performance output under
intensive requests.

VI. CONCLUSION AND FURTHER WORK

This paper proposes a blockchain-based SCF management
system to enable secure data storage and auditable access
control. To accommodate the changing SCF business logic and
increasing privacy requirements, the proposed system enables
cross-organizational data management and access, while en-
suring secure storage, efﬁcient access, and access traceability
of privacy-sensitive data. With the combination of consensus
mechanisms and smart contracts, ﬁnancial project data in SCF
can be securely stored in the blockchain. Meanwhile,
the
access policy of the proposed system supports programma-
bility and can therefore be modiﬁed according to different
business processes. Furthermore, thanks to the ABAC access
control mechanism, participating parties can have auditable
access provided they are fully authorized. Finally, simulation
experiments conﬁrm that Fabric-SCF can guarantee system
stability and TPS at larger business volumes.

Future works can consider the following aspects :
1) The business logic of SCF is relatively simple. In the
future, we consider trying to introduce more complex
business processes to test the universality of the system
in the ﬁnancial ﬁeld.

2) Consider using large-scale test environments such as
changing stand-alone environments to multi-machine en-
vironments, to simulate use scenarios more realistically.
3) Future works can consider combining the data storage
on the chain with the data storage mode under the chain.
4) In the future, researchers can consider deploying on
a wider range of platforms, such as Ethereum, to test
throughput and execution time together with gas con-
sumption.

FUNDING

This research is supported by the National Natural Science
Foundation of China under Grant 61873160, Grant 61672338,
and the Natural Science Foundation of Shanghai under Grant
21ZR1426500.

DECLARATION OF INTERESTS

The authors declare that they have no known competing
ﬁnancial interests or personal relationships that could have
appeared to inﬂuence the work reported in this paper.

REFERENCES

[1] A. Zulqurnain, G. Bi, and A. Mehreen, “Does supply chain ﬁnance
improve smes performance? the moderating role of trade digitization,”
Bus. Process. Manag. J., vol. 26, pp. 150–167, 2020.

[2] H. Yue, J. Xu, J. Wang, D. Wu, and B. Niu, “A general introduction

and overview of supply chain ﬁnance,” 2019.

[3] S. Somjai, S. Vasuvanich, K. Laosillapacharoen, and B. Suteerachai,
“Governing role of trade digitalization in global supply chain ﬁnance,
negotiation and smes performance,” International Journal of Supply
Chain Management, vol. 8, pp. 660–672, 2019.

[4] L. Gelsomino, R. Mangiaracina, A. Perego, and A. Tumino, “Supply
chain ﬁnance: a literature review,” International Journal of Physical
Distribution & Logistics Management, vol. 46, pp. 348–366, 2016.
[5] F. Caniato, M. Henke, and G. Zsidisin, “Supply chain ﬁnance: His-
torical foundations, current research, future developments,” Journal of
Purchasing and Supply Management, vol. 25, pp. 99–104, 2019.
[6] S. Guo and N. Liu, “Inﬂuences of supply chain ﬁnance on the mass
customization program: risk attitudes and cash ﬂow shortage,” Int. Trans.
Oper. Res., vol. 27, pp. 2396–2421, 2020.

[7] Y. Omran, M. Henke, R. Heines, and E. Hofmann, “Blockchain-driven
supply chain ﬁnance: Towards a conceptual framework from a buyer
perspective,” 2017.

[8] D. Li, D. Han, and H. Liu, “Fabric-chain & chain: A blockchain-based
electronic document system for supply chain ﬁnance,” in BlockSys, 2020.
[9] Z. Zheng, S. Xie, H. Dai, X. Chen, and H. Wang, “An overview of
blockchain technology: Architecture, consensus, and future trends,” 2017
IEEE International Congress on Big Data (BigData Congress), pp. 557–
564, 2017.

[10] X. Li, P. Jiang, T. Chen, X. Luo, and Q. Wen, “A survey on the security
of blockchain systems,” Future Gener. Comput. Syst., vol. 107, pp. 841–
853, 2020.

[11] A. Omar, M. Z. A. Bhuiyan, A. Basu, S. Kiyomoto, and M. S.
Rahman, “Privacy-friendly platform for healthcare data in cloud based
on blockchain environment,” Future Gener. Comput. Syst., vol. 95, pp.
511–521, 2019.

[12] S. Tanwar, K. Parekh, and R. Evans, “Blockchain-based electronic
healthcare record system for healthcare 4.0 applications,” J. Inf. Secur.
Appl., vol. 50, 2020.

[13] A. Khatoon, “A blockchain-based smart contract system for healthcare

management,” Electronics, vol. 9, p. 94, 2020.

[14] D. Dimitrov, “Blockchain applications for healthcare data management,”

Healthcare Informatics Research, vol. 25, pp. 51 – 56, 2019.

[15] P. Bhattacharya, S. Tanwar, U. Bodke, S. Tyagi, and N. Kumar, “Bindaas:
Blockchain-based deep-learning as-a-service in healthcare 4.0 applica-
tions,” IEEE Transactions on Network Science and Engineering, pp. 1–1,
2020.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

10

(a) User management contract

(b) Financing project management contract

(c) Access control contract

(d) Check access contract

Fig. 19. Execution time under different block sizes.

[16] B. Bhushan, A. Khamparia, K. Sagayam, S. Sharma, M. Ahad, and
N. Debnath, “Blockchain for smart cities: A review of architectures,
integration trends and future research directions,” Sustainable Cities and
Society, vol. 61, p. 102360, 2020.

[17] P. Sharma and J. H. Park, “Blockchain based hybrid network architecture
for the smart city,” Future Gener. Comput. Syst., vol. 86, pp. 650–655,
2018.

[18] G. Aujla, M. Singh, A. Bose, N. Kumar, G. Han, and R. Buyya,
“Blocksdn: Blockchain-as-a-service for software deﬁned networking in
smart city applications,” IEEE Network, vol. 34, pp. 83–91, 2020.
[19] A. Pieroni, N. Scarpato, L. Nunzio, F. Fallucchi, and M. Raso, “Smarter
city: Smart energy grid based on blockchain technology,” International
Journal on Advanced Science, Engineering and Information Technology,
vol. 8, pp. 298–306, 2018.

[20] E. Munsing, J. Mather, and S. Moura, “Blockchains for decentralized
optimization of energy resources in microgrid networks,” 2017 IEEE
Conference on Control Technology and Applications (CCTA), pp. 2164–
2171, 2017.

[21] D. Li, D. Han, X. Zhang, and L. Zhang, “Panoramic image mosaic
technology based on sift algorithm in power monitoring,” 2019 6th
International Conference on Systems and Informatics (ICSAI), pp. 1329–
1333, 2019.

[22] S. Wang, A. F. Taha, J. Wang, K. Kvaternik, and A. Hahn, “Energy
crowdsourcing and peer-to-peer energy trading in blockchain-enabled
smart grids,” IEEE Transactions on Systems, Man, and Cybernetics:
Systems, vol. 49, pp. 1612–1623, 2019.

[23] A. Dorri, S. Kanhere, R. Jurdak, and P. Gauravaram, “Lsb: A lightweight
scalable blockchain for iot security and privacy,” J. Parallel Distributed
Comput., vol. 134, pp. 180–197, 2019.

[24] S. Ding, J. Cao, C. Li, K. Fan, and H. Li, “A novel attribute-based
access control scheme using blockchain for iot,” IEEE Access, vol. 7,
pp. 38 431–38 441, 2019.

[25] L. Lao, X. Dai, B. Xiao, and S. Guo, “G-pbft: A location-based and
scalable consensus protocol for iot-blockchain applications,” 2020 IEEE
International Parallel and Distributed Processing Symposium (IPDPS),
pp. 664–673, 2020.

[26] H. Liu, D. Han, and D. Li, “Fabric-iot: A blockchain-based access

control system in iot,” IEEE Access, vol. 8, pp. 18 207–18 218, 2020.

[27] J. Kang, Z. Xiong, D. Niyato, D. Ye, D. Kim, and J. Zhao, “Toward
secure blockchain-enabled internet of vehicles: Optimizing consensus
management using reputation and contract theory,” IEEE Transactions
on Vehicular Technology, vol. 68, pp. 2906–2920, 2019.

[28] T. Jiang, H. Fang, and H. Wang, “Blockchain-based internet of vehi-
cles: Distributed network architecture and performance analysis,” IEEE
Internet of Things Journal, vol. 6, pp. 4640–4649, 2019.

[29] U. Javaid, M. Aman, and B. Sikdar, “A scalable protocol for driving trust
management in internet of vehicles with blockchain,” IEEE Internet of
Things Journal, vol. 7, pp. 11 815–11 829, 2020.

[30] X. Wang, P. Zeng, N. J. Patterson, F. Jiang, and R. Doss, “An improved
authentication scheme for internet of vehicles based on blockchain
technology,” IEEE Access, vol. 7, pp. 45 061–45 072, 2019.

[31] H. Liu, D. Han, and D. Li, “Behavior analysis and blockchain based
trust management in vanets,” J. Parallel Distributed Comput., vol. 151,
pp. 61–69, 2021.

[32] Z. Zhou, B. Wang, Y. Guo, and Y. Zhang, “Blockchain and compu-
tational intelligence inspired incentive-compatible demand response in
internet of electric vehicles,” IEEE Transactions on Emerging Topics in
Computational Intelligence, vol. 3, pp. 205–216, 2019.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

11

(a) User management contract

(b) Financing project management contract

(c) Access control contract

(d) Check access contract

Fig. 20. Execution time under different block sizes.

[33] H. Liu, D. Han, and D. Li, “Blockchain based trust management in

vehicular networks,” in BlockSys, 2020.

[34] M. Turkanovic, “Eductx: A blockchain-based higher education credit

platform.”

[35] K. A. Harthy, F. A. Shuhaimi, and K. K. J. A. Ismaily, “The upcoming
blockchain adoption in higher-education: requirements and process,”
2019 4th MEC International Conference on Big Data and Smart City
(ICBDSC), pp. 1–5, 2019.

[36] F. P. Oganda, N. Lutﬁani, Q. Aini, U. Rahardja, and A. Faturahman,
“Blockchain education smart courses of massive online open course
using business model canvas,” 2020 2nd International Conference on
Cybernetics and Intelligent System (ICORIS), pp. 1–6, 2020.

[37] D. Li, D. Han, Z. Zheng, T.-H. Weng, H. Li, H. Liu, A. Castiglione, and
K.-C. Li, “Moocschain: A blockchain-based secure storage and sharing
scheme for moocs learning,” Computer Standards & Interfaces, 2021.
[38] S. Wang, L. Ouyang, Y. Yuan, X. Ni, X. Han, and F. Wang, “Blockchain-
enabled smart contracts: Architecture, applications, and future trends,”
IEEE Transactions on Systems, Man, and Cybernetics: Systems, vol. 49,
pp. 2266–2277, 2019.

[39] J. Li, W. Yao, Y. Zhang, H. Qian, and J. Han, “Flexible and ﬁne-grained
attribute-based data storage in cloud computing,” IEEE Transactions on
Services Computing, vol. 10, pp. 785–796, 2017.

[40] Z. Wang, Q. Wang, Y. Lai, and C. Liang, “Drivers and outcomes of
supply chain ﬁnance adoption: An empirical investigation in china,”
International Journal of Production Economics, vol. 220, p. 107453,
2020.

[41] A. Pan, L. Xu, B. Li, and R. Ling, “The impact of supply chain ﬁnance
on ﬁrm cash holdings: Evidence from china,” Paciﬁc-Basin Finance
Journal, vol. 63, pp. 101 402 – 101 402, 2020.

[42] R. Pellegrino, N. Costantino, and D. Tauro, “Supply chain ﬁnance: A
supply chain-oriented perspective to mitigate commodity risk and pricing
volatility,” Journal of Purchasing and Supply Management, vol. 25, pp.
118–133, 2019.

[43] Q. Lin, Y. Xiao, and J.-H. Zheng, “Selecting the supply chain ﬁnancing
mode under price-sensitive demand: conﬁrmed warehouse ﬁnancing
vs. trade credit,” Journal of Industrial and Management Optimization,
vol. 13, pp. 0–0, 2017.

[44] H. K. Lam and Y. Zhan, “The impacts of supply chain ﬁnance initia-
tives on ﬁrm risk: evidence from service providers listed in the us,”
International Journal of Operations & Production Management, 2021.
[45] Z. Ali, B. Gong-bing, and A. Mehreen, “Predicting supply chain
effectiveness through supply chain ﬁnance: Evidence from small and
medium enterprises,” The International Journal of Logistics Manage-
ment, vol. 30, pp. 488–505, 2019.

[46] C. Garg and V. Kashav, “Modeling the supply chain ﬁnance (scf) barriers
of indian smes using bwm framework,” Journal of Business & Industrial
Marketing, 2021.

[47] J.-N. B. B. Nguema, G. Bi, T. O. Akenroye, and J. E. Baz, “The effects
of supply chain ﬁnance on organizational performance: a moderated and
mediated model,” Supply Chain Management, 2021.

[48] L. Gelsomino, R. D. Boer, M. Steeman, and A. Perego, “An optimisation
strategy for concurrent supply chain ﬁnance schemes,” Journal of
Purchasing and Supply Management, vol. 25, pp. 185–196, 2019.
[49] W. Ding and G. Wan, “Financing and coordinating the supply chain with
a capital-constrained supplier under yield uncertainty,” International
Journal of Production Economics, vol. 230, p. 107813, 2020.

[50] A. Moretto, L. Grassi, F. Caniato, M. Giorgino, and S. Ronchi, “Supply

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

12

chain ﬁnance: From traditional to supply chain credit rating,” Journal
of Purchasing and Supply Management, vol. 25, pp. 197–217, 2019.

[51] Y. Su and N. Lu, “Simulation of game model for supply chain ﬁnance
credit risk based on multi-agent,” Open Journal of Social Sciences,
vol. 03, pp. 31–36, 2015.

[52] Y. Su and B. Zhong, “The credit risk assessment model of internet supply
chain ﬁnance: Multi-criteria decision-making model with the principle
of variable weight,” Journal of Computational Chemistry, vol. 05, pp.
1–11, 2016.

[53] Q. Lu, J. Gu, and J. Huang, “Supply chain ﬁnance with partial credit
guarantee provided by a third-party or a supplier,” Comput. Ind. Eng.,
vol. 135, pp. 440–455, 2019.

[54] Z. Xiao and M. Tan, “Research on smes credit risk evaluation of
supply chain ﬁnance based on the third-party b2b platform,” DEStech
Transactions on Social Science, Education and Human Science, 2019.
[55] H. Liao, Z. Wen, and L. Liu, “Integrating bwm and aras under hesitant
linguistic environment for digital supply chain ﬁnance supplier section,”
Technological and Economic Development of Economy, vol. 25, pp.
1188–1212, 2019.

[56] H. Song, M. Li, and K. Yu, “Big data analytics in digital platforms:
how do ﬁnancial service providers customise supply chain ﬁnance?”
International Journal of Operations & Production Management, 2021.
[57] F. Jia, T. Zhang, and L. Chen, “Sustainable supply chain ﬁnance:towards
a research agenda,” Journal of Cleaner Production, vol. 243, p. 118680,
2020.

[58] M. Abdel-Basset, R. Mohamed, K. M. Sallam, and M. Elhoseny, “A
novel decision-making model for sustainable supply chain ﬁnance under
uncertainty environment,” Journal of Cleaner Production, vol. 269, p.
122324, 2020.

[59] M. Tseng, M. K. Lim, and K.-J. Wu, “Improving the beneﬁts and costs
on sustainable supply chain ﬁnance under uncertainty,” International
Journal of Production Economics, vol. 218, pp. 308–321, 2019.
[60] I. Imronudin and J. Hussain, “Sustainable supply chain ﬁnance process
in delivering ﬁnancing for smes: The case of indonesia,” International
Journal of Supply Chain Management, vol. 9, pp. 867–878, 2020.
[61] M. Tseng, K.-J. Wu, J. Hu, and C.-H. Wang, “Decision-making model
for sustainable supply chain ﬁnance under uncertainties,” International
Journal of Production Economics, vol. 205, pp. 30–36, 2018.

[62] T.-D. Bui, F.-M. Tsai, M. Tseng, R. Tan, K. D. Yu, and M. K. Lim,
“Sustainable supply chain management towards disruption and organi-
zational ambidexterity: A data driven analysis,” Sustainable Production
and Consumption, vol. 26, pp. 373 – 410, 2020.

[63] F. Emtehani, N. Nahavandi, and F. M. Raﬁei, “An operations-ﬁnance
integrated model with ﬁnancial constraints for a manufacturer in a multi-
supplier multi-product supply chain,” Comput. Ind. Eng., vol. 153, p.
107102, 2021.

[64] B. Sang, “Application of genetic algorithm and bp neural network in
supply chain ﬁnance under information sharing,” J. Comput. Appl. Math.,
vol. 384, p. 113170, 2021.

[65] F. Yin, R. Yang, H. Yu, W. Zhou, Y. Zhao, and S. Zhang, “Edge
intelligenceenabled supply chain ﬁnancial model based on businessto-
business ebusiness platforms,” Concurrency and Computation: Practice
and Experience, 2021.

[66] W. Abbasi, Z. Wang, Y. Zhou, and S. Hassan, “Research on measure-
ment of supply chain ﬁnance credit risk based on internet of things,”
International Journal of Distributed Sensor Networks, vol. 15, 2019.

[67] Z. Liu, “Literature review of supply chain ﬁnance based on blockchain
perspective,” Open Journal of Business and Management, vol. 9, pp.
419–429, 2021.

[68] Y. Tribis, A. E. Bouchti, and H. Bouayad, “Supply chain management

based on blockchain: A systematic mapping study,” 2018.

[69] M. Du, Q. Chen, J. Xiao, H. Yang, and X. Ma, “Supply chain ﬁnance
innovation using blockchain,” IEEE Transactions on Engineering Man-
agement, vol. 67, pp. 1045–1058, 2020.

[70] J. Liu, L. Yan, and D. Wang, “A hybrid blockchain model for trusted
data of supply chain ﬁnance,” Wireless Personal Communications, pp.
1 – 25, 2021.

[71] J. Li, S. Zhu, W. Zhang, and L. Yu, “Blockchain-driven supply chain
ﬁnance solution for small and medium enterprises,” Frontiers of Engi-
neering Management, vol. 7, pp. 500–511, 2020.

[72] R. Wang and Y. Wu, “Application of blockchain technology in supply
chain ﬁnance of beibu gulf region,” Mathematical Problems in Engi-
neering, vol. 2021, pp. 1–10, 2021.

[73] J. Chen, T. Cai, W. He, L. Chen, G. Zhao, W. Zou, and L. Guo,
“A blockchain-driven supply chain ﬁnance application for auto retail
industry,” Entropy, vol. 22, 2020.

[74] R. Wang, Y. Peng, and S. Wen, “Research on the application of

blockchain technology in supply chain ﬁnance,” 2020.

[75] Y. Huang, Z. Liang, Y. Wang, and G. Lu, “Research on the application

of blockchain in supply chain ﬁnance,” 2018.

[76] C. Jiang and C. Ru, “Application of blockchain technology in supply
chain ﬁnance,” 2020 5th International Conference on Mechanical,
Control and Computer Engineering (ICMCCE), pp. 1342–1345, 2020.
[77] Y. Wang, “The exploration of blockchain technology in supply chain

ﬁnance,” 2021.

[78] Y. Li and L. Wang, “The role of blockchain technology on supply chain

ﬁnance,” in DSIT, 2020.

[79] L. Yuyan and W. Lan, “The role of blockchain technology on supply
chain ﬁnance,” Proceedings of the 3rd International Conference on Data
Science and Information Technology, 2020.

[80] R. Yaksick, “Overcoming supply chain ﬁnance challenges via blockchain

technology,” 2019.

[81] L. Dong, Y. Qiu, and F. Xu, “Blockchain-enabled deep-tier supply chain

ﬁnance,” Operations Management eJournal, 2021.

[82] Z. Xu and D. Gao, “Research on application of supply chain ﬁnance

based on block chain,” 2020.

[83] J. Zhang, F. Wang, Y. Pu, P. Li, Y. Ma, and Z. Li, “Analysis of the
application of blockchain technology in the ﬁeld of supply chain ﬁnance
in the natural gas industry,” 2021.

[84] T. Fern´andez-Caram´es, ´O. Blanco-Novoa, I. Froiz-M´ıguez, and P. Fraga-
Lamas, “Towards an autonomous industry 4.0 warehouse: A uav and
blockchain-based system for inventory and traceability applications in
big data-driven supply chain management ?” Sensors (Basel, Switzer-
land), vol. 19, 2019.

[85] H. M. Kim and M. Laskowski, “Towards an ontology-driven blockchain
design for supply chain provenance,” ArXiv, vol. abs/1610.02922, 2018.
[86] J. Huertas, H. Liu, and S. Robinson, “Eximchain: Supply chain ﬁnance
solutions on a secured public, permissioned blockchain hybrid,” 2018.
[87] S. Terzi, A. Zacharaki, A. Nizamis, K. Votis, D. Ioannidis, D. Tzovaras,
and I. Stamelos, “Transforming the supply-chain management and
industry logistics with blockchain smart contracts,” Proceedings of the
23rd Pan-Hellenic Conference on Informatics, 2019.

[88] H. Liu, “A novel supply chain model based on smart contract,” Pro-
the 2020 2nd International Electronics Communication

ceedings of
Conference, 2020.

[89] S. Su, K. Wang, and H. Kim, “Smartsupply: Smart contract based
validation for supply chain blockchain,” 2018 IEEE International Con-
ference on Internet of Things (iThings) and IEEE Green Computing
and Communications (GreenCom) and IEEE Cyber, Physical and Social
Computing (CPSCom) and IEEE Smart Data (SmartData), pp. 988–993,
2018.

[90] C. Ma, X. Kong, Q. Lan, and Z. Zhou, “The privacy protection
mechanism of hyperledger fabric and its application in supply chain
ﬁnance,” Cybersecurity, vol. 2, pp. 1–9, 2019.

[91] F. Sch¨ar, “Decentralized ﬁnance: On blockchain- and smart contract-

based ﬁnancial markets,” 2020.

Dun Li received the B.S. degree in Human Re-
source Management from the Huaqiao University,
Quanzhou, China,
in 2013, and the M.S. degree
in Finance from the Macau University of Science
in 2015. He is
and Technology, Macau, China,
currently doing his Ph.D. degree in Information
Management and Information Systems at Shanghai
Maritime University. His main research interests
include smart ﬁnance, big data, machine learning,
IoT, and blockchain.

JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015

13

Dezhi Han received the BS degree from Hefei Uni-
versity of Technology, Hefei, China, the MS degree
and PhD degree from Huazhong University of Sci-
ence and Technology, Wuhan, China. He is currently
a professor of computer science and engineering at
Shanghai Maritime University. His speciﬁc interests
include storage architecture, blockchain technology,
cloud computing security and cloud storage security
technology.

Noel Crespi received the master’s degrees from the
University of Orsay (Paris 11) and the University of
Kent, U.K., the Diplome d’Ingenieur degree from
Telecom ParisTech, and the Ph.D. and Habilitation
degrees from Paris VI University (Paris-Sorbonne).
Since 1993, he has been with CLIP, Bouygues
Telecom, and then with Orange Labs in 1995. He
took leading roles in the creation of new services
with the successful conception and launch of Or-
ange prepaid service, and in standardization (from
rapporteurship of IN standard to coordination of all
mobile standards activities for Orange). In 1999, he joined Nortel Networks
as a Telephony Program Manager, architecting core network products for
the EMEA region. In 2002, he joined the Institut Mines-Telecom and is
currently a Professor and the Program Director, leading the Service Ar-
chitecture Laboratory. He coordinates the standardization activities for the
Institut MinesTelecom, ITU-T, ETSI, and 3GPP. He is an Adjunct Professor
with KAIST, an Afﬁliate Professor with Concordia University, and a Guest
Researcher with the University of Goettingen. He is also the Scientiﬁc Director
of the French-Korean Laboratory ILLUMINE. His current research interests
are in sofwarization, data analysis, and Internet of Things/services

Roberto Minerva is Associated Professor within
the Service Architecture Lab of Institut Mines Tele-
com–Telecom Sud Paris part of Institute Polytech-
nique de Paris. He received the M.S. degree in
computer science from Bari University, Italy and
doctoral degree in Computer Science and Telecom-
munications from the Pierre and Marie Curie Uni-
versity. From 1987 to 1996, he was a researcher in
the Service Architectures and Network Intelligence
area within Telecom Italia Research Center. In the
following years, he was appointed responsible of
several research groups related to Network Intelligence evolution. From 2013
up to 2016 he was in the Strategic Initiatives of TIM. From 2016 he was
the Technical Project Leader of SoftFIRE, a European Project devoted to
the experimentation of NFV, SDN and edge computing. He is author of ¿70
article in journals and international conferences. Dr. Minerva has been the
chairperson of the IEEE IoT Initiative in the period 2014–2016.

Zhijie Sun received the B.S degree in information
management and information system from Henan
Polytechnic University. and he is currently pursuing
the M.S. degree in Shanghai Maritime University.
His main research interests include blockchain tech-
nology and its applications and cryptography.

