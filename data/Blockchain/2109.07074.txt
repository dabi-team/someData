1
2
0
2

p
e
S
5
1

]

R
C
.
s
c
[

1
v
4
7
0
7
0
.
9
0
1
2
:
v
i
X
r
a

Anti-Tamper Protection for Internet of Things System
Using Hyperledger Fabric Blockchain Technology

Adnan Iftekhar

Key Laboratory of Aerospace Information Security and Trusted Computing, Ministry of
Education, Wuhan University, Wuhan 430000, China(e-mail: adnan@whu.edu.cn)

Key Laboratory of Aerospace Information Security and Trusted Computing, Ministry of
Education, Wuhan University, Wuhan 430000, China(e-mail: xcui@whu.edu.cn)

Xiaohui Cui

Abstract

Automated and industrial Internet of Things (IoT) devices are increasing daily.
As the number of IoT devices grows, the volume of data generated by them
will also grow. Managing these rapidly expanding IoT devices and enormous
data eﬃciently to be available to all authorized users without compromising its
integrity will become essential in the near future. On the other side, many in-
formation security incidents have been recorded, increasing the requirement for
countermeasures. While safeguards against hostile third parties have been com-
monplace until now, operators and parties have seen an increase in demand for
data falsiﬁcation detection and blocking. Blockchain technology is well-known
for its privacy, immutability, and decentralized nature. Single-board comput-
ers are becoming more powerful while also becoming more aﬀordable as IoT
platforms. These single-board computers are gaining traction in the automa-
tion industry. This study focuses on a paradigm of IoT-Blockchain integration
where the blockchain node runs autonomously on the IoT platform itself.
It
enables the system to conduct machine-to-machine transactions without the in-
tervention of a person and to exert direct access control over IoT devices. This
paper assumed that the readers are familiar with Hyperledger Fabric basic oper-
ations and focus on the practical approach of integration. A basic introduction
is provided for the newbie on the blockchain.

Keywords:

Internet of Things, IoT, Blockchain

∗Corresponding author
Email address: xcui@whu.edu.cn (Xiaohui Cui)

Preprint submitted to arXiv

September 16, 2021

 
 
 
 
 
 
1. Introduction

The German Government initiated the fourth industrial revolution (Industry
4.0) in 2013 [1]. It seeks to create an intelligent production system utilizing eco-
nomically, ecologically, and socially sustainable cyber-physical systems (CPS)
and human equipment interfaces [2]. Through big data analytics, the Internet of
Things, robotic systems, and artiﬁcial intelligence, Industry4.0 aims to increase
automation, interoperability, actionable insights, and information transparency
[3]. IoT has gained signiﬁcant traction in the automation sector. The Internet
of Things or IoT is a wide term that refers to a variety of intelligent sensors
and microcontrollers that gather data from their surroundings. These sensors
serve as the foundation for contemporary technologies such as smart homes,
smart cities, smart grids, intelligent health systems, and wearable technology
IoT applications provide a smooth cyber world connection with the real
[4].
world. Despite its vast potential, various applications, rapid growth, and future
aspirations, IoT currently confronts challenges. Among the signiﬁcant imped-
iments are data privacy, security, and centralization [5]. Existing Internet of
Things systems are often built on a centralized architecture, with cloud-based
servers and edge servers serving as data analysis and information processing
nodes, respectively. Despite of eﬃcient administration and strong computing
capabilities, the security and privacy concerns connected with such systems are
becoming more prevalent.

Collaboration in centralized systems requires multiple parties to either trust
one another or pay a third party to facilitate the collaboration, preventing the in-
teroperability of diﬀerent Internet of Things apps and services [6]. Alternatively,
if achieved, decentralization would have a number of advantages to centralized
infrastructure, including lower costs. The most important result of decentral-
ization in the Internet of Things is the development of distributed consensus
among IoT devices [7]. If properly controlled, it can signiﬁcantly improve the
IoT system security and oﬀer customers more privacy through adequate data
protection measures. Decentralized Internet of Things solutions, which do not
need the participation of a trusted central authority, are capable of managing
a large number of transactions and scaling to many peers in order to reach
agreement [8]. Notably, the creation of the blockchain has enabled large-scale
applications to overcome distributed consensus limitations in a decentralized
environment [9]. The IoT industry’s security and privacy problems can be ad-
dressed through blockchain technology [10]. At its core, it is used to store a
variety of diﬀerent cryptocurrency transactions. However, it is not restricted to
cryptocurrencies only. Additionally, it may be used to store various other types
of data, including assets, IoT data, and multimedia data [11].

Academia and industry have both shown a signiﬁcant deal of interest in
emerging blockchain technology. Blockchain technology is a distributed, un-
changeable ledger that simpliﬁes the method of documenting transactions and
keeping track of assets over a peer-to-peer network of computers [12]. It can
record tangible and intangible assets like intellectual property, patents, copy-
rights, and many more. Almost everything of value can be monitored and sold

2

on a blockchain network, which mitigates risk and lowers costs for all parties
by eliminating the intermediaries.
In this article, we use Hyperledger Fabric
Blockchain technology to protect an IoT network.
The main contributions of this paper are:

• We examine the typical IoT architecture and assess the security and pri-

vacy concerns associated with IoT systems.

• We formulate how blockchain may be used in conjunction with IoT and

oﬀer a framework for integrating blockchain and IoT.

• The suggested system uses a blockchain-based access control system to

maintain a separation between users and gadgets.

The rest of the article is organized as follows. In Section 2 we discussed the
overview of the blockchain and related studies on blockchain-IoT integration.
We discussed some potential blockchain-IoT conﬁgurations used in the industry.
In Section III, we proposed our IoT-Blockchain integration model. We discussed
the Prototype of our proposed model in Section IV, while section V describes
its working methodology. Section VI discussed the Results and advantages of
our proposed conﬁguration, followed by the Conclusion and future work.

2. Preliminary

Throughout this section, we covered some fundamental blockchain concepts.
We provided a brief description of Hyperledger Fabric blockchain technology
and the work in integrating IoT and blockchain.

2.1. Blockchain Overview

Distributed Ledger Technology (DLT) is a term that refers to a decentral-
ized database that is managed by a large number of individuals [13]. The term
”blockchain” refers to a form of distributed ledger technology in which transac-
tions are recorded using an immutable cryptographic signature known as a hash
[14].
It is simple to understand the concept of a blockchain as a distributed
digital record of transactions that is duplicated and disseminated across the
encrypted blockchain’s network of peer-to-peer computer systems [15]. It is al-
most diﬃcult to modify, hack, or cheat the blockchain system in any signiﬁcant
way. Each block in the chain is made up of a number of diﬀerent transactions.
On the blockchain, every time a new transaction takes place, a record of that
transaction is recorded in the ledger of each participant.

When the block of a blockchain is formed, the cryptographic hash is gener-
ated using a nonce. Unless the block is mined, its data is deemed signed and
will remain permanently associated with the nonce and hash. Every block in a
blockchain has its nonce and hash, but it also references the preceding block’s
hash [Figure 1].

3

Figure 1: Blocks of a blockchain system

This means that if a single block in a chain is changed, it is instantly obvious
that blockchain has been modiﬁed. In order to compromise a blockchain sys-
tem, hackers would have to alter every block across all distributed versions and
regenerate the hash of that block and all the following blocks. Blockchain net-
works are classiﬁed into three types: public, private, and consortium blockchains
[16]. Each of these platforms has several advantages, disadvantages, and optimal
usage. A brief description of blockchain types is given in Table 1.

Table 1: Classiﬁcation of Blockchains [17]

Read Access

Public Blockchain
No permission required
from any authority

Private Blockchain
Read Access is private within
organization participants

Permissioned Blockchain
Public/Participants are permissible
under some legal contract

Write Access

No permission required
from any authority

Write Access is private within
organization participants

Participants are permissible under
some legal contract

Consensus Process

Anyone can join
consensus process

Pre-selected nodes within
organization

Pre-selected nodes within
consortium

2.2. Hyperledger Fabric Blockchain

Fabric is a platform for building business Blockchain applications [15]. It
is open-source and developed by IBM under the Linux Foundation.
It is a
consortium chain; therefore, it is excellent for businesses that do not want their
transactions public and needs faster transactions. Unlike Bitcoin, Fabric is a
permissioned Blockchain that follows a set of protocols [18].

4

2.2.1. Peers

Peers are the basic building blocks of any distributed paradigm [19]. Al-
though peers are simply nodes, they are all equal on public blockchain networks
such as Bitcoin or Ehtereum, but peers are not equal consortium Blockchains.
Each organization in the blockchain network must set up peer nodes. These
peers are all connected to the blockchain network through speciﬁc permissions
and signatures. Peers are essential to the network since they host the ledger and
chaincode. A peer may host a ledger instance without hosting any chaincodes
that access it.

Each organization’s peer has a unique set of behaviors and tasks. Here are

the kinds of peers.

2.2.2. Anchor Peers

The peers of one organization are known to other organisations, so that
they may interact with each other by means of a protocol via Gossip termed
the peers of Anchor. These peers can’t be found by other organizations termed
Non-Anchor peers.

2.2.3. Endorsement Peers

The endorsement policy is determined by who does the endorsing and what
constitutes a valid transaction. The endorsement policy includes a list of peers
who will be involved in signing transaction proposals [20]. Whenever a network
is established at that moment, we have to select which peers should endorse the
transaction or verify the transaction.

2.2.4. Committing Peers

Committing peers are peers that do not require the ChainCode to be de-

ployed but are responsible for maintaining the entire ledger of the records.

2.2.5. Orderer Service

Ordering Peers collect approved transactions, bundle them into blocks, and
distribute them to other peers for validation [21]. While ordering, nodes main-
tain a record of all transactions in their ledger, including valid and invalid
transactions, endorsing peers, and committing peers to maintain a record of
just valid transactions.

2.2.6. Chaincode

Chaincodes are the Fabric Smart Contracts that run the network’s business
logic. Chaincode is the asset’s storing software. Assets are a key-value com-
bination that allows the network to trade practically anything with monetary
worth. Chaincode is a Docker container application and can be developed in
Go or Java programming language [22].

5

2.2.7. Channel

A Hyperledger Fabric channel is a private ”subnet” of communication used
by two or more particular network participants to perform private and conﬁden-
tial transactions [23]. Members (organizations), anchor peers per member, the
shared ledger, chaincode application(s), and the ordering service node all con-
tribute to the deﬁnition of a channel (s). Each transaction on the network takes
place via a channel, which requires each participant to be authenticated and
allowed to transact on. Each peer that enters a channel is assigned a unique
identity by a membership services provider (MSP), which authenticates each
peer with other peers and services in the channel.

2.2.8. Membership Service Provider (MSP)

All the components of Hyperleger Fabric require valid credentials to join the
network. MSPs are a built-in component that gives all the network actors a
credential in an X509 certiﬁcate. Clients use these credentials to authenticate
transactions, while peers use them to authenticate results.

Technology selection is a long-term investment for a business. The great
degree of ﬂexibility allowed by open source code, modular components, and
standard compliance is one of the main advantages of an open source business
application. This allows a business to quickly change technology in order to
achieve true usability. For instance, if an organization currently uses kafka
clusters as their messaging protocol, we may use it as the consensus mechanism
in the Hyperleger Fabric blockchain network instead of the RAFT orderering
service. Additionally, we may use existing consensus algorithms or build our
own lightweight consensus algorithm for IoT-platforms in order to overcome
processing power limitations. Enterprise and corporate networks are not obliged
to employ a single vendor, but may instead choose from the most creative and
active communities, taking advantage of the blockchain technology sector’s fast
pace of innovation.

2.3. Blockchain and IoT Integration

Although blockchain ensures the immutability of data recorded on the dis-
tributed ledger, it does not have the power to verify the validity of data provided
by supply chain actors [24]. To assure data provenance and integrity, the in-
tegration of IoT devices and blockchain technology is being advocated[24, 25].
The danger of malicious data tampering is reduced when data is saved by IoT
devices rather than people on the blockchain system.
It increases the data’s
authenticity and trustworthiness. In this sense, combining blockchain with IoT
is viewed as a viable way to handle data-related concerns of trust, security,
privacy, and integrity [26].

This article oﬀers a permissioned blockchain architecture and protocol suite
for a local IoT network. The design is built on a sealed Sequencer and a Fog
Server that runs Guy Fawkes protocols (post-quantum). Along with any user
data and validity proofs, the blockchain’s blocks are kept in networked Content
Addressable Storage [27].

6

Authors provided a blockchain-based system for diﬀerentially private data
publishing in this study. Two techniques were proposed for disseminating his-
tograms and anonymised data, respectively. By encrypting the collector’s and
requester’s interactions on the blockchain, the suggested protocols can prohibit
the collector from publishing faked data and the requester from renouncing the
payment [28].

To connect huge power Internet of Things devices at the edge of a 5G net-
work, the authors merge blockchain technology with 5G Mobile Edge Computing
[1]. The author explored the method for integrating blockchain and IIoT from
an industrial perspective and developed a blockchain-enabled IIoT architecture
for establishing trust between IIoT components. Additionally, the authors built
a smart contract system for storing and processing data about the interaction
of IIoT model components [29].

The authors presented a system for secure and decentralized IoT data ex-
change that integrates IoT platforms and blockchain, with the Hyperledger Fab-
ric architecture serving as the blockchain back-end. The blockchain is used to
store and make access control decisions. The framework implemented cryptography-
enforced access control through the use of identity-based encryption [30].

The authors presented a blockchain-based cross-domain authentication pro-
cedure for use in an IoT setting. The PBFT algorithm is used in this process.
The authentication process is carried out via a smart contract. To authenticate
and share authentication data securely, an encrypted key sharing technique is
utilized [31].

The authors presented a decentralized access control system for the Internet
of Things based on Blockchain technology (IoT). Permission assignment and
access control for cross-domain users/IoT devices are handled via hierarchical
smart contracts. To search for and obtain user/IoT device platform hashes, the
technique employed a Proof-of-Authenticity/Integrity (PoAI) approach [32].

This study addressed an IoT device access control system built on Hyper-
ledger Fabric. By implementing rules and programmatic access management
in the chaincode, the system separates people and devices. A Raspberry Pi
4B node was used to show the fabric policies, chaincode installation, chaincode
invocation, and solution benchmarking. According to the research, Hyperledger
Fabric blockchain technology comes pre-loaded with IoT device management
features [17].

Using a blockchain-based architecture, the authors suggested a decentralized
data integrity veriﬁcation system for Internet of Things data stored in a semi-
trusted cloud [25]. To guarantee data storage, monitoring, and veriﬁcation are
all reliable, the authors proposed an integrated approach that makes use of
blockchain technology to do so. The suggested virtual machine agent model is
implemented in the cloud utilizing mobile agent technology [33].

2.4. Discussion

Based on their intended application, several types of IoT modules are devel-
oped. As shown in Figure 2, the simplest possible connection between sensors

7

In this kind of setup, the micro-
and the application server is established.
controller to which the sensor is connected can directly communicate with a
server through a network. The data from the sensor is sent to the server via
the controller, and the server that receives it records it in the blockchain, after
In another conﬁguration,
which the relevant application consumes the data.
like ESP8266 or ESP12F controllers, the microcontroller may expose the web
API to the outside world. It is the case where an application gets data from
a controller and stores it on a blockchain, where the relevant application later
consumes it.

Figure 2: Simple IoT Conﬁguration Package

When the communication protocol on the sensor module is designed to re-
duce power consumption and ensure security, a gateway module with a security
protocol is included in the communication protocol. This gateway serves as
a barrier between the rest of the network and the Internet of Things sensors.
In reality, this gateway may serve as an access control protocol for Internet of
Things devices occasionally [Figure 3].

Figure 3: IoT Conﬁguration Package with a Gateway

The adoption of encryption through the Message Queuing Telemetry Trans-
port (MQTT) protocol is the conﬁguration most often used to protect the online
IoT network from being compromised by hackers. The gateway device often per-
forms the function of an MQTT broker. The sensor module sends the data to
the gateway over TLS. The respective application consumes that data as a client
and puts it on the blockchain network [Figure 4].

The data produced by IoT systems may include trade secrets that are di-

8

Figure 4: IoT Conﬁguration Package with an MQTT Broker

rectly linked to the future growth of the organization and that must be kept
private from unrelated parties in order for the company to succeed. It is neces-
sary for the data to stay intact. Cloud storage, for example, can be linked with
the blockchain system, but it has numerous inherent vulnerabilities. The cen-
tral server may become vulnerable. Besides more devices with a central server
may generate many to one traﬃc jam and higher latency and a brick point for
scalability. Adding devices to a central server may cause traﬃc jams, increased
latency, and scalability issues.

The lack of adequate access control to resources and sensitive information
in IoT systems is yet another security concern. A centralized party produces a
suitable key based on access rules in traditional authentication and access con-
trol management. However, as the IoT system develops, centralized approaches
become a bottleneck. The dynamic nature of IoT deployment leads to compli-
cated trust management, compromising system scalability.

An IoT system gathers data from a range of smart devices and sensors in
order to make a complete judgment based on that data and take the actions
in an automated systems. However, privacy is readily breached in the complex
IoT system during data acquisition, raw data processing, and data sharing. As
a result, privacy preservation in Internet of Things systems, both data privacy
and entity privacy, is both critical.

3. IoT-Blockchian Integration Model

The protection of information throughout the whole Internet of Things
ecosystem is a major issue for IoT companies. Customers of the Internet of
Things, who are often a group of business partners, need data and insights from
IoT devices promptly, at a low cost, and they must be trustable. The use of
blockchain technology to store IoT data adds an additional degree of security
to help prevent unwanted assaults. DDoS attacks, malicious attacks, and data
breaches are all possible with IoT devices. Some IoT devices are constantly

9

Figure 5: Hyperledger Fabric docker images on Raspberry Pi.

connected to power and Wi-Fi, while others are not. No small device can oper-
ate a computational and bandwidth-intensive blockchain transaction system. A
gateway or similar device, such as Raspberry Pi single board computers, may
be required. So these ecosystems must be naturally cooperative.

Our model coﬁguration is shown in Figure 6. The system may be split into
three levels. Physical layers comprised the system board itself and the smart
sensors linked directly or across the network through MQTT broker. Our IoT
terminal used a Raspberry Pi 4 Model B (8GB RAM). The IoT terminal runs on
64-bit ARM. The software layer includes the Ubuntu 20.04 stable version with
long-term support (LTS). The next layer is the services layer where we have the
Fabric and Nodejs along side the MQTT, Fabric Software Development Kit and
custom ﬁrmware to interact with sensors. No Hyperledger fabric binaries and
Docker Images are supported by default for arm-based systems. For our IoT
terminal, we got the source code and compiled it [Figure 5]

Our model decrease ineﬃciencies, increase security, and improve transparency
for all parties involved, while also allowing safe machine-to-machine transactions
to take place. The Hyperledger Fabric Policies make us capable of deriving a
complete decentralized access control over the device itself.

4. Prototype Network

The experimental network for IoT-blockchain integration includes four or-
IoT equipment, such
ganizations: Org1, Org2, IoT, and Orderer [Figure 7.
as temperature sensors, and NH3 gas sensors are constantly monitoring the
temperature, humidity and NH3 presence in a grain silo and transmitting the
information to a smart contract that is now in operation. To secure the network

10

Figure 6: IoT Conﬁguration Package over Raspberry Pi

communication, the each organization’s TLS-CA server provides TLS (Trans-
port Layer Security) to the CA (Certiﬁcation Authority) server, peers and all
the client connections to the network. The organization’s CA server provides
X509 certiﬁcates to all components, users and clients in its blockchain network.
It runs on Xen Hypervisor with Xeon E5-2678-V3 X2 and 128 GB RAM. Each
machine has two cores and two gigabytes of RAM and Ubuntu server 20.04 LTS
as base OS. We used the Fabric 2.2.3 LTS as the blockchain network. Table 2
lists the network nodes of our experimental network.

Table 2: Experimental Network Machines
IP Address
10.0.5.10
10.0.5.20
192.168.10.60
10.0.3.10
10.0.3.20
10.0.3.30
10.0.4.10
10.0.4.20
10.0.3.30

Host
IoT-TLS-CA
IoT-CA
peer@IoT
Org1-TLS-CA
Org1-CA
peer@org1
Org2-TLS-CA
Org2-CA
peer@org2
Orderer-TLS-CA 10.0.100.10
10.0.100.20
Orderer-CA
10.0.100.50
solo@orderer

5. Working Process

The suggested architecture is intended to provide for safe administration of
activities in the intelligent technological environment. These activities comprise

11

Figure 7: Hyperledger Fabric Blockchain Network for IoT

system startup, sensors and actuator data collection, and reliable customer con-
trol over the device to perform desired operations. All these procedures are
explained brieﬂy in the following sections.

5.1. Device Registration

All players in the Hyperledger Fabric blockchain network must get network
membership in the form of an x509 certiﬁcate. Our network’s IoT organiza-
tion has its own specialized Membership Service Provider entity. As shown
in the table, the entity maintains two servers, IoT-TLS-CA and IoT-CA. The
IoT-TLS-CA server produces TLS certiﬁcates for our terminal. The IoT ter-
minal obtained its TLS certiﬁcate and membership certiﬁcate as a peer from
the IoT-TLS-CA server. These certiﬁcates are required to join the network.
The required certiﬁcate needs to provide to add in the conﬁguration block of
the blockchain netowrk. The device now can join the blockchain netowork by
joining the required channel.

5.2. Device Access Control

Fabric Policies allow us to restrict access to our resources to those required
by the organization. Our Internet of Things (IoT) devices, for example, are
sensitive. The consortium decided that the chaincode may be invoked only by

12

the administrator of the IoT organization, and the chaincode will only endorse
on the IoT Organization terminals etc. The Hyperledger Fabric policies pro-
vided the basic decentralized control over the device decided and agreed by the
consortium.

5.3. Chaincode Access Control

Hyperledger Fabric provided an explicit library to apply access control over
the cahincode. It needs that the access control must be explicitly implemented in
the chaincode itself. We may encode the access control into the chaincode using
the Hyperledger Fabric client identiﬁcation library. We must manually import
this library into our chaincode since it is not included in the Hyperledger Fabric
blockchain network’s basic functionality.

5.4. Deploy Chaincode

We developed and deployed a Silo Monitoring chaincode on the IoT terminal
as well as other peer nodes in the network. The chaincode may be found on
GitHub, where it can be downloaded [https://github.com/adnanjee/silomonitor.git].
ARM architecture is used in the IoT terminal, therefore we must package the
ARM architecture’s chaincode on the IoT device itself in order for it to function
properly.

6. Results and Discussion

In Internet of Things devices such as the Raspberry Pi, the total performance
of the device is also dependent on the memory type we use, such as the class
of memory card, USB storage, or SSD storage in USB ports, and the amount
of memory we use. We made a basic performance benchmark on our device to
show its performance on the netowrk.

6.1. Performance Benchmark

Several benchmarking tools available, such as Hyperledger Caliper, may be
used to determine performance. At this moment, we are just monitoring the
most basic performance indicators using the Hyperledger Caliper tool, which is
available for free on the Internet. In terms of the reading temperature function,
we are getting about 192 transactions per second. The max latency was 0.62
seconds during extensive testing, the minimum latency was 0.06 seconds, and
the average latency was 0.27 seconds [8].

6.2. Security Factor

Security considerations are concerned with the critical pillars that inﬂuence
the adoption of blockchain in the Internet of Things architecture. The imple-
mentation of appropriate access control and authentication frameworks allows
businesses to identify Internet of Things devices, isolate compromised nodes,
guarantee the integrity of data, authenticate users, and permit various degrees
of data access, among other things. Here the access control system comes handy.

13

Figure 8: Performance Benchmark on IoT Terminal

As our IoT device is a direct node of the blockchain network, we have a com-
pletely decentralized control over our device.

The access control system is derived from consortium planning. To put it
simply, the consortium determines the Hyperledger Fabric regulations and rules
that govern the whole system. The Hyperledger Fabric regulations describe how
to access and update network and channel parameters. The consortium sets the
ﬁrst rules, since it is in charge of providing ﬁne-grained access control throughout
the blockchain network. Fabric Policies allow us to restrict resource access to
meet organizational needs. For example, our IoT devices are sensitive. The
consortium decided that only the IoT organization’s administrator may use the
chaincode. Users can set policies for chaincode execution in Hyperledger Fabric.
These endorsement policies describe which peers must approve a transaction
before it can be recorded.

6.3. Data Privacy and Data Trading

It is signiﬁcant because it controls how data is used and who has access to it.
When it comes to data privacy, blockchain technologies have taken the lead. The
Hyperledger Fabric provides the library to explicitly restrict access to the chi-
ancode. Hyperledger Fabric client identiﬁcation library allows us to implement
access control into chaincode. This library is not part of the core Hyperledger
Fabric blockchain network functionality and must be manually imported.

This access control over the chaincode provides and additional layer of pri-
vacy and improve the data trading model with partner organizations in combi-
nation with the Blockchain Channel. We may speciﬁcally allows a certain user
from a certain organization to control the chaincode as they are using the grain
silo for that moment.

14

6.4. Data integrity

Data assurance, completeness, consistency, and dependability are the pri-
mary goals of this process, which is carried out across the whole data life cycle.
The cloud services that are connected to IoT devices have caused the majority
of the problems with data integrity that have been observed. The blockchain’s
fundamental architecture is a sequence of increasing blocks hashed using cryp-
tography to ensure data integrity while allowing a completely decentralized sys-
tem. Aside from that, out IoT terminal function as a direct blockchain node,
processing and storing data without the need for human involvement or trans-
mission to another system which makes the data more reliable.

6.5. Data Governance

A data strategy, rules, standards, procedures, and matrices are all deﬁned
as part of the data governance process.
It is engaged in the monitoring of
the completion of data management projects and providing data management
services.
In order to manage privacy and other standards for each area of
business, data regulations are constantly being revised and updated.

7. Conclusions & Future Work

The Internet of Things in the industrial sector modernizes smart industries
by integrating the latest technologies. Throughout this article, we propose a
blockchain-based architecture for the Internet of Things devices network.
It
was shown how to conﬁgure the Raspberry Pi 4 so that it may connect to the
blockchain network and act as a blockchain node. We look at the standard In-
ternet of Things architecture and evaluate the security and privacy issues that
come with IoT deployments. We later discussed that how our proposed con-
ﬁguration eliminates many of those issues and facilitates the organizations to
control the IoT devices with data security and privacy. Future work should
include an extensive network of IoT devices such as Raspberry Pi, Odroid XU4,
Asus Tinker Board, and Nvidia Jetson nano. The system must assess hard-
ware capabilities, processor and memory limits, power consumption, network
consensus methods, scalability, and network latency. So we may select where to
install full-scale servers or edge servers, or leverage our existing IoT devices for
diﬀerent purposes, including consensus networks.

8. Data Availability

This article does not fall under the category of data sharing.

9. Conﬂicts of Interest

The authors are not aﬃliated with any entity that has a ﬁnancial stake in

the subject matter addressed in the article, either directly or indirectly.

15

10. Funding Statement

The authors want to express their gratitude for the assistance given by

China’s National Key R&D Program (No. 2018YFC1604000).

References

References

[1] D. Wang, H. Wang, Y. Fu, Blockchain-based iot device identiﬁcation and
management in 5g smart grid, EURASIP Journal on Wireless Communi-
cations and Networking 2021 (1) (2021) 1–19.

[2] M. A. K. Bahrin, M. F. Othman, N. H. N. Azli, M. F. Talib, Industry 4.0:
A review on industrial automation and robotic, Jurnal Teknologi 78 (6-13).

[3] A. Haleem, M. Javaid, Additive manufacturing applications in industry 4.0:
a review, Journal of Industrial Integration and Management 4 (04) (2019)
1930001.

[4] S. Niˇzeti´c, P. ˇSoli´c, D. L.-d.-I. Gonz´alez-de, L. Patrono, et al., Internet
of things (iot): Opportunities, issues and challenges towards a smart and
sustainable future, Journal of Cleaner Production 274 (2020) 122877.

[5] B. K. Mohanta, D. Jena, U. Satapathy, S. Patnaik, Survey on iot security:
Challenges and solution using machine learning, artiﬁcial intelligence and
blockchain technology, Internet of Things 11 (2020) 100227.

[6] A. K. Tyagi, K. Agarwal, D. Goyal, N. Sreenath, A review on security
and privacy issues in internet of things, in: Advances in Computing and
Intelligent Systems, Springer, 2020, pp. 489–502.

[7] U. Bodkhe, D. Mehta, S. Tanwar, P. Bhattacharya, P. K. Singh, W.-C.
Hong, A survey on decentralized consensus mechanisms for cyber physical
systems, IEEE Access 8 (2020) 54371–54401.

[8] A. Iftekhar, X. Cui, Q. Tao, C. Zheng, Hyperledger fabric access control
system for internet of things layer in blockchain-based applications, Entropy
23 (8). doi:10.3390/e23081054.
URL https://www.mdpi.com/1099-4300/23/8/1054

[9] S. S. Panda, B. K. Mohanta, U. Satapathy, D. Jena, D. Gountia, T. K.
Patra, Study of blockchain based decentralized consensus algorithms, in:
TENCON 2019-2019 IEEE Region 10 Conference (TENCON), IEEE, 2019,
pp. 908–913.

[10] Q. Wang, X. Zhu, Y. Ni, L. Gu, H. Zhu, Blockchain for the iot and industrial

iot: A review, Internet of Things 10 (2020) 100081.

16

[11] D. Bhowmik, T. Feng, The multimedia blockchain: A distributed and
tamper-proof media transaction framework, in: 2017 22nd International
Conference on Digital Signal Processing (DSP), IEEE, 2017, pp. 1–5.

[12] M. Nofer, P. Gomber, O. Hinz, D. Schiereck, Blockchain, Business & In-

formation Systems Engineering 59 (3) (2017) 183–187.

[13] A. Sunyaev, Distributed ledger technology,

in:

Internet Computing,

Springer, 2020, pp. 265–299.

[14] A. Kuznetsov, M. Lutsenko, K. Kuznetsova, O. Martyniuk, V. Babenko,
I. Perevozova, Statistical testing of blockchain hash algorithms., in: CMi-
GIN, 2019, pp. 67–79.

[15] E. Androulaki, A. Barger, V. Bortnikov, C. Cachin, K. Christidis,
A. De Caro, D. Enyeart, C. Ferris, G. Laventman, Y. Manevich, et al.,
Hyperledger fabric:
a distributed operating system for permissioned
blockchains, in: Proceedings of the thirteenth EuroSys conference, 2018,
pp. 1–15.

[16] A. Iftekhar, X. Cui, M. Hassan, W. Afzal, Application of blockchain and
internet of things to ensure tamper-proof data availability for food safety,
Journal of Food Quality 2020.

[17] A. Iftekhar, X. Cui, Q. Tao, C. Zheng, Hyperledger fabric access control
system for internet of things layer in blockchain-based applications, Entropy
23 (8) (2021) 1054.

[18] Hyperledger, A blockchain platform for the enterprise — hyperledger-
https://hyperledger-fabric.

fabricdocs master
readthedocs.io/en/release-2.2/, (Accessed on 08/23/2021) (2021).

documentation,

[19] Peers — hyperledger-fabricdocs master

documentation,

https:

//hyperledger-fabric.readthedocs.io/en/release-2.2/peers/
peers.html, (Accessed on 08/29/2021).

[20] Endorsement policies — hyperledger-fabricdocs master documenta-
tion, https://hyperledger-fabric.readthedocs.io/en/release-2.2/
endorsement-policies.html, (Accessed on 08/29/2021).

[21] The ordering service — hyperledger-fabricdocs master documenta-
tion, https://hyperledger-fabric.readthedocs.io/en/release-2.2/
orderer/ordering_service.html, (Accessed on 08/29/2021).

[22] Chaincode tutorials — hyperledger-fabricdocs master documentation,
https://hyperledger-fabric.readthedocs.io/en/release-1.3/
chaincode.html, (Accessed on 08/29/2021).

[23] Channels — hyperledger-fabricdocs master documentation,

https:

//hyperledger-fabric.readthedocs.io/en/release-2.2/channels.
html, (Accessed on 08/29/2021).

17

[24] S. Malik, V. Dedeoglu, S. S. Kanhere, R. Jurdak, Trustchain: Trust man-
agement in blockchain and iot supported supply chains, in: 2019 IEEE
International Conference on Blockchain (Blockchain), IEEE, 2019, pp. 184–
193.

[25] B. Liu, X. L. Yu, S. Chen, X. Xu, L. Zhu, Blockchain based data integrity
service framework for iot data, in: 2017 IEEE International Conference on
Web Services (ICWS), IEEE, 2017, pp. 468–475.

[26] B. Cao, Y. Li, L. Zhang, L. Zhang, S. Mumtaz, Z. Zhou, M. Peng, When
internet of things meets blockchain: Challenges in distributed consensus,
IEEE Network 33 (6) (2019) 133–139.

[27] A. Shafarenko, A pls blockchain for iot applications: protocols and archi-

tecture, Cybersecurity 4 (1) (2021) 1–17.

[28] L. Xu, T. Bao, L. Zhu, Blockchain empowered diﬀerentially private and
auditable data publishing in industrial iot, IEEE Transactions on Industrial
Informatics.

[29] S. Zhao, S. Li, Y. Yao, Blockchain enabled industrial internet of things tech-
nology, IEEE Transactions on Computational Social Systems 6 (6) (2019)
1442–1453.

[30] H. T. T. Truong, M. Almeida, G. Karame, C. Soriente, Towards secure and
decentralized sharing of iot data, in: 2019 IEEE International Conference
on Blockchain (Blockchain), IEEE, 2019, pp. 176–183.

[31] D. Li, J. Yu, X. Gao, N. Al-Nabhan, Research on multidomain authentica-
tion of iot based on cross-chain technology, Security and Communication
Networks 2020.

[32] G. Ali, N. Ahmad, Y. Cao, S. Khan, H. Cruickshank, E. A. Qazi, A. Ali,
xdbauth: Blockchain based cross domain authentication and authorization
framework for internet of things, IEEE Access 8 (2020) 58800–58816.

[33] P. Wei, D. Wang, Y. Zhao, S. K. S. Tyagi, N. Kumar, Blockchain data-based
cloud data integrity protection mechanism, Future Generation Computer
Systems 102 (2020) 902–911.

18

