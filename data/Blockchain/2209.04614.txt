Journal of Information and Telecommunication

ISSN: (Print) (Online) Journal homepage: https://www.tandfonline.com/loi/tjit20

A customer satisfaction centric food delivery
system based on blockchain and smart contract

A. A. Talha Talukder, Md. Anisul Islam Mahmud, Arbiya Sultana, Tahmid
Hasan Pranto, AKM Bahalul Haque & Rashedur M. Rahman

To cite this article: A. A. Talha Talukder, Md. Anisul Islam Mahmud, Arbiya Sultana, Tahmid
Hasan Pranto, AKM Bahalul Haque & Rashedur M. Rahman (2022): A customer satisfaction
centric food delivery system based on blockchain and smart contract, Journal of Information and
Telecommunication, DOI: 10.1080/24751839.2022.2117121

To link to this article:  https://doi.org/10.1080/24751839.2022.2117121

© 2022 The Author(s). Published by Informa
UK Limited, trading as Taylor & Francis
Group

Published online: 09 Sep 2022.

Submit your article to this journal 

View related articles 

View Crossmark data

Full Terms & Conditions of access and use can be found at
https://www.tandfonline.com/action/journalInformation?journalCode=tjit20

JOURNAL OF INFORMATION AND TELECOMMUNICATION
https://doi.org/10.1080/24751839.2022.2117121

A customer satisfaction centric food delivery system based on
blockchain and smart contract

A. A. Talha Talukdera, Md. Anisul Islam Mahmuda, Arbiya Sultanaa,
Tahmid Hasan Prantoa, AKM Bahalul Haqueb and Rashedur M. Rahman

a

aDepartment of Electrical and Computer Engineering, North South University, Dhaka, Bangladesh; bSoftware
Engineering, LENS, LUT University, Lappeenranta, Finland

ARTICLE HISTORY
Received 24 March 2022
Accepted 25 June 2022

KEYWORDS
Blockchain; smart contract;
decentralized food delivery;
commission business control

ABSTRACT
Food delivery systems are gaining popularity recently due to the
expansion of
the increasing
internet connectivity and for
availability of devices. The growing popularity of such systems
has raised concerns regarding (i) Information security, (ii) Business
to business (B2B) deep discounting race, and (iii) Strict policy
enforcement. Sensitive personal data and ﬁnancial information of
the users must be safeguarded. Additionally, in pursuit of gaining
proﬁt, the restaurants tend to oﬀer deep discounts resulting in a
higher volume of orders than usual. Therefore, the restaurants
and the delivery persons fail to maintain the delivery time and
often impair the food quality. In this paper, we have proposed a
blockchain and smart contract-based food delivery system to
remove
The main
address
commission schemes and decrease service delays caused by a
high volume of orders. The protocols have been deployed and
tested on the Ethereum test network. The simulation manifests a
successful
implementation of our desired system; with the
payment being controlled by our system. The actors (restaurant,
delivery-person or consumer) are bound to be compliant with the
policies or penalized otherwise.

issues.

these

goal

to

is

1. Introduction

The food sector is continually evolving with new technologies and business strategies.
The online food delivery system has become a new trend catching popularity. With the
fast-paced lifestyles, there appears to be little time for cooking or even sitting down to
a three-course dinner at a restaurant, unless it is for a special occasion.
Individuals
order online using online applications to multitask and save time and money. Due to
the fact that the third-party applications lack the capability to establish trust among
the participants in a food-delivery ecosystem, it created several complications for custo-
mers. Either the customer receives their food cooked earlier and therefore not warm
during the delivery. It is due to the violation of time constraints or the customer may

rashedur.rahman@northsouth.edu

CONTACT Rashedur M. Rahman
Engineering, North South University, Dhaka 1229, Bangladesh
© 2022 The Author(s). Published by Informa UK Limited, trading as Taylor & Francis Group
This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/
licenses/by/4.0/), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly
cited.

Department of Electrical and Computer

2

A. A. TALHA TALUKDER ET AL.

not receive any food after placing an order. Particularly, forced exertion of policies are
completely missing in third-world countries. On the other hand, customer satisfaction
is critical to the escalating online food delivery sector. Food delivery app organizations,
which establish a link between the customer and the restaurant via their app and delivery-
man now determine the price of food and proﬁt from each transaction. They provide sub-
stantial discounts on foods to attract new customers, which leads to considerable losses
for smaller restaurants (Niharika, 2020). Discounting and lucrative advertisements bring in
more customers. To triumph this race and win over the market, the restaurants take as
much order as they can and often fail to deliver within time. Moreover, rides working
on commission per delivery often mimic the same to gain more money. In both cases, cus-
tomers are the suﬀerers.

Despite being a topic of importance, there exists a lack of focus on their concurrent
impact on customer online loyalty, particularly in the context of online food delivery ser-
vices in comparatively less developed countries (Suhartanto et al., 2018). To address these
issues mentioned above in the online food delivery system, this study will reduce dis-
counting race, issues raised by commission-based services, and focus on increasing cus-
tomer satisfaction and loyalty over online food delivery services. More precisely, this study
seeks to determine:

(1) the direct eﬀect of e-service and food quality on online loyalty; and
(2) the indirect eﬀect of perceived value and customer satisfaction via the mediation role.

The current strategies in online food delivery services lack customer convenience.
Solving these issues within the food delivery system is critical for ensuring customer
loyalty over these platforms (Suhartanto et al., 2018). Blockchain technology (Nakamoto,
2018), when combined with smart contracts (Szabo, 1997), has the potential to alleviate
these challenges by creating a distributed network of restaurants, customers, and delivery
persons. An organization or appropriate body will establish food services and pricing in a
distributed de-centralized application. Using smart contracts, the system will ensure strict
application of the regulation. The contract will then be stored in the Blockchain, which will
be impenetrable to alteration or tampering. The commercial terms and conditions that
govern online food delivery transactions become set in stone and unchangeable. The
paper’s primary contribution is summarized below.

. We propose penalty-based order processing in a decentralized food delivery ecosys-
tem. Penalization in terms of money forces the actors to be compliant with the
regulation.

. We propose a reputation mechanism in accordance with the penalization for increas-

ing trust among the actors.

. We ensure data security throughout the system using blockchain and smart-contract

based decentralized implementation.

. We propose a service that replaces the commission-based service in the online food

delivery sector and increases customer satisfaction.

The remainder of the paper is organized as follows. The following section (section 2)
comprises a detailed discussion of the relevant literature. Section 3 provides an overview

JOURNAL OF INFORMATION AND TELECOMMUNICATION

3

of the proposed work mentioning the system components, actors and their role within
the system. Section 4 describes the implementation details and evaluation process of
our system. Section 5 contains the testing of our system from order placing to delivery
- simulating a complete run of the system and at the same time discusses the advantages
and challanges. The document ends with the concluding remarks in the last section.

2. Literature review

Blockchain and smart contract are two technologies that go hand-in-hand to build
systems that need openness and rigorous proof of documentation. On par with the Block-
chain, which establishes and maintains trust between participants, smart contracts
operate independently of any third party or human being to maintain that trust inside
the blockchain network. This section will brieﬂy outline the background of blockchain
technology, smart contracts, and their possibilities to overcome the current ﬂaws of
online food delivery services.

2.1. Blockchain

Blockchain technology has brought versatility to the fourth industrial revolution (Bodkhe
et al., 2020). This technology gained its much-acclaimed recognition after developing
cryptocurrencies such as Bitcoin to perform peer-to-peer transactions without a third-
party involvement (Nakamoto, 2018). A blockchain is a distributed, immutable, and pre-
vious block, timestamp of the block creation, nonce and transactions represented in
append-only data structure comprising a chronologically and cryptographically linked
series of blocks (Wood Daniel Davis, 2014). Each block contains the pointer (hash) to
the form of Merkel tree (Bodkhe et al., 2020). Blockchain technology can identify,
record, validate, and process all transactions, facilitating the massive ﬂow of information
and securely updating in the network (Wesley, 2017). The structure of a blockchain
network is delineated in Figure 1.

Blockchain technology signiﬁcantly enhances the security of mobile cloud data, and it
is highly beneﬁcial for the upcoming generation (Hassija et al., 2021). Farouk et al. showed
how Blockchain could impact while dealing with sophisticated medical data via IoT in
terms of regulation, privacy preservation and information security while also aiding
secure sharing and analysis of these data (Farouk et al., 2020). The rate of ﬁle loss in exist-
ing cloud storage systems can be as high as 100%, but the rate of ﬁle loss in the Block-
chain is nearly zero (Yang et al., 2019). There is no integrated solution for processing
distributed data autonomously in a blockchain-based context. This is possible through
the use of smart contracts and blockchain technology. Numerous applications rely on
blockchain technology as a foundation because to its inherent resistance to alteration.
In the food business, the blockchain is used to ensure food safety (Tse et al., 2017). Ngam-
suriyaroj et al., (2018) have presented a secure package delivery method based on Block-
chain technology that protects both data and users’ integrity and conﬁdentiality. The
proposed technique was assessed in terms of inserting and reading/writing data. In
terms of security, Blockchain is on par with cloud storage options on the market
(Hasan et al., 2020). Blockchain is by far one of the most secure ways for e-transaction
than any other media. Roeck et al. (2019) shows that Blockchain’s immutable, secure,

4

A. A. TALHA TALUKDER ET AL.

Figure 1. Blockchain structure.

and consensus-based ledger technology possesses the elements needed to reduce the
eﬀect of third parties in a supply chain, and they also provide evidence of Blockchain
being cost-eﬀective to supply chains in the long run.

2.2. Smart contract

A smart contract is a pre-written computer program that enables digital transactions
under particular conditions or terms. Without requiring human interaction, smart con-
tracts enable the tracking and implementation of complex agreements between parties
(Novo, 2018). Smart contracts deployed inside a blockchain-based platform can assist
with the self-execution of business logic to self-execute in a buyer-seller transaction
network (DeCusatis et al., 2018; Valenta & Sandner, 2017). Each node in the network
has its copy of the smart contract that operates autonomously and independently
based on the triggering transaction data (Stanciu, 2017). Figure 2 shows the steps of a
smart contract formulation. Encapsulating and protecting information and keeping it
simple throughout the network is the primary goal of smart contracts. Smart contracts
are used in various use cases; for example, a smart contract may represent an item’s ship-
ping cost, which ﬂuctuates depending on arrival time constraints. According to the terms
agreed upon by both parties and documented in the ledger, monies shift automatically
when an item is received (Yewale, 2018). The critical want for establishing faith
between two individuals may be met via smart contracts (Bader et al., 2019). Hawk is a
framework for developing smart contracts with privacy-preserving features. Hawk

JOURNAL OF INFORMATION AND TELECOMMUNICATION

5

Figure 2. Steps of building a typical smart contract.

compiler is responsible for compiling the software into a cryptographic protocol used to
communicate between the Blockchain and the users (Kosba et al., 2016).

BMC Protector is a music copyright management system built on top of blockchain and
smart contracts. Their smart contract manages all of the system’s critical tasks, from com-
position through royalty distribution. It is exceedingly diﬃcult to compromise and alter a
smart contract that has been distributed inside the blockchain environment, which
justiﬁes ultimate security when implementing a smart contract within the blockchain eco-
system (Bader et al., 2019; Zhao & O’Mahony, 2018). With B-Ride, drivers may oﬀer ride-
sharing on their own, without going to any third-party applications they can provide
their services. It is up to both customers and drivers to decide if they want to share a
ride while preserving their data. As a result, fraudulent individuals might go incognito,
which Blockchain provides to submit several requests to get a better deal (Baza et al.,
2019). To create a block on a blockchain, there must be a common agreement. Smart con-
tracts make it possible for any real-world application to insert business logic into the
process on which the participating actors can relentlessly rely upon. When a block is
created from any connecting node, the block creation information is broadcasted to
every node within the network. Smart contract veriﬁes the data in the new block
against the agreement and, if it is legitimate, and meets the other criteria, then the
block is added to the Blockchain. Following that, the blockchains of each network partici-
pant are updated.

In most cases, smart contracts are used to exert business logic to be checked before
producing a block on the Blockchain (Yewale, 2018). When constructing a smart contract,
it is common to utilize terms such as attributes, functions, modiﬁers, and events. Within a
system, attributes represent storage variables in which values can be stored and modiﬁed.
A function represents a chain of commands or processes. When a function is invoked, it
performs the task indicated in the function’s body. Events and modiﬁers are the next two
in line where events enable the blockchain transaction log to store virtually anything.
After occurring an event, it creates data. The data then goes directly to transaction logs
to preserve the historical data to be retrieved later. This event triggering enables the
structure to be auditable. Modiﬁers allow the modiﬁcation behaviour of the functions
in smart contracts. It has a range of applications, including limiting who can unlock func-
tions after a speciﬁed time, perform a speciﬁc function, and so on (Pranto et al., 2021).
Once the agreement’s requirements are satisﬁed, smart contracts are immediately exe-
cuted. This eliminates the need for a third party such as certain apps (Foodpanda, Hun-
gryNaki, UberEats), banks etc. The smart contract uses its agreement to control the

6

A. A. TALHA TALUKDER ET AL.

system like a business, and the Blockchain gives a safe platform for storing and preserving
data.

2.3. The present centralized system and its issues

(1) The absence of rules governing deep discounting: Food delivery app operators
and aggregators entice users with signiﬁcant discounts (Granheim et al., 2020). Con-
versely, restaurant owners and food industry owners face the brunt of extreme dis-
counts. There are no clear criteria for regulating such situations, which results in
lesser earnings for both sides.

(2) Delayed food delivery: Customer satisfaction is decreased when food is delivered
late (Worku & Legoabe, 2017). As a result, external factors such as traﬃc, order
volume, and weather conditions must be considered. Occasionally, a lack of training,
a staﬃng deﬁcit, inappropriate scheduling, or ineﬃcient route planning might result
in an improperly managed delivery routine. Some customers want foods from
diﬀerent places, which produces a routing and timing problem (Kohar & Jakhar,
2021). Additionally, it requires considerable work on the delivery platform’s customer
care employees to placate clients in such instances.

(3) Chaotic order: For restaurant proprietors, keeping track of internet demand and
available resources becomes challenging. As a result, they receive a high number
of orders and frequently cannot fulﬁl them. Deliverymen rush to the restaurant
because of the multiple orders and waste or are forced to deliver more than one at
a time (Liao et al., 2020). As a result, deliveries are delayed, and food quality
deteriorates.

(4) A scarcity of safe payment methods: Customers will avoid ordering from food deliv-
ery platforms that do not accept various payment methods. They anticipate safe
payment options and an eﬃcient return process. Three signiﬁcant causes have con-
tributed to the growth of food delivery services. One is generation Y’s use of digital
technologies such as mobile phone applications. Second, the rise of new industry
leaders and third-party applications such as Uber Eats and FoodPanda. They are
market leaders, utilizing their centralized platform to manage restaurants, delivery-
man, and customers. Occasionally, deliverymen receive minimal commissions due
to their schemes, which causes them to violate company laws and regulations,
which ultimately harms customers because they are the ones who need food on
time. Third-party applications also have diﬃculties with time since they can adjust
it based on the deliveryman’s position, which varies over time and provides an inac-
curate approximation. This forces the deliveryman to accept many orders concur-
rently, putting the customer
in jeopardy once more. The same is true for
restaurants, which accept numerous orders at a time because third-party apps do
not have a punishment system for being late or failing to deliver food on time. As
a result, the restaurant is forced to accept a large volume of orders and fails to
deliver the food on time to the deliveryman, resulting in an unhappy customer.
The major players generate money by charging for platform usage and managing
their drivers as independent contractors. Thus, the beneﬁts of blockchain technology
may include the ability to transition from a B2B2C business model to a B2C one by

JOURNAL OF INFORMATION AND TELECOMMUNICATION

7

connecting customers directly to restaurants and eliminating service costs associated
with money redistribution. Quality control and continuous improvement are critical in
online food delivery. The application of technology such as Blockchain and smart con-
improve the existing state of food delivery. These enhancements are
tracts will
necessary to maintain a traceable, rigorous, and secure delivery procedure.

2.4. Blockchain integrated food delivery

Blockchain-based technologies are poised to reshape the food delivery sector in ways
never seen before. Thus, the days of people being content just because they received a
free pizza delivered within 30 minutes are over. Customers in the modern-day want con-
venience and quickness. Due to digitization, food delivery services have risen substantially
in the last ﬁve years. One of the most recent technologies accessible is ‘Wooberly Eats,’
which mixes machine learning and blockchain technology. Wooberly utilizes ‘Flutter,’
an open-source UI framework, to provide a variety of capabilities,
including data
exchange with the Customer, Driver, Restaurant, and system administrator(s).

The growing popularity of smartphones and the convenience of purchasing via mobile
applications quickly made them a customer favourite. As a result, an increasing number of
individuals are growing used to ordering foods online for immediate or scheduled deliv-
ery (Liu, 2019). Online food delivery businesses are classiﬁed into two types (Yeo et al.,
2017). The ﬁrst is a restaurant-to-customer delivery business, such as Kentucky Fried
Chicken or McDonald’s, which may oﬀer online food delivery services directly or
through third-party operations. The second is a platform for a platform to customer deliv-
ery services such as Uber Eats, Foodpanda, and Hungrynaki. Online food delivery systems
combine a diverse range of partner restaurants and provide delivery services to them.
Modern life is made better by online food delivery systems. Customers may choose
from a diverse selection of restaurants and cuisines to enjoy delectable meals (Chen
et al., 2021). As new business models for app-based food delivery emerged, further
obstacles became apparent (Lau & Ng, 2019).

The food delivery apps do not maintain time, leading to chaotic orders and dissatisﬁed
customers; thus, the restaurant’s reputation drops. Deliverymen also use this time
manipulation opportunity in hand and take as many foods as possible for multiple deliv-
eries at a time and this causes them to be late for delivering foods. So, again dissatisﬁed
customers and drop of restaurant reputation. In this paper, we are solving this time hin-
drance issue and a chaotic order acceptance by restaurants by using Blockchain and smart
contracts, which will also be a safe transaction method.

3. Proposed blockchain-based model

3.1. System overview

Our primary goal is to demolish the current centralized food distribution system, and
our primary recommended solution will be decentralized. More precisely, we want to
oﬀer a blockchain-based food delivery system. The problems with the present system
have been dealt with, and we want to create a win-win situation for everyone involved,
including the customer, the restaurant, and the delivery guy. The general system over-
view is shown in Figure 3. We present an online food ordering and delivery

8

A. A. TALHA TALUKDER ET AL.

Figure 3. Detailed overview of proposed system.

administration platform that any entrepreneur can utilize to start their own food deliv-
ery business. The system is built on Blockchain technology to address various legiti-
mate concerns that existing online food delivery stages face. It enables transactions
via cryptocurrency, which provides decentralization and security, as discussed in the
research discussion.

Decentralization: The current integrated food aggregators application charges a per-
centage of commission on each request from both the restaurant and deliverymen; Due
to the high cost of commissions and the fact that customers typically pay a lot when they
use an app, the company’s ability to expand is severely limited.

The delivery administration application can be withdrawn oﬀ the chain adopting
blockchain technology, the owner of the external application can be replaced by the pro-
prietor of the eatery, and customers’ commissions can be minimized. At the same time, a
more signiﬁcant portion of the payment is distributed to both delivery drivers and restau-
rants. The problem-speciﬁc blockchain solution is as follows.

(1) Smart contracts regulate commission rates: A smart contract agreement can
develop credibility between service providers and restaurants concerning food

JOURNAL OF INFORMATION AND TELECOMMUNICATION

9

discounts and commission rates. It has the potential to protect restaurants from
imposing excessive commission levels and being prey to greed, taking excess
orders which cannot be served within the time limit. The smart contracts are conﬁ-
gured so that if any of the restaurants violate the regulations, a portion of their com-
mission is ﬁned.

(2) Conﬁdence in the capabilities of delivery partners and service providers: We can
develop conﬁdence between delivery partners and service providers by using block-
chain-based contracts since Blockchain keeps track of all payments and makes sure
none of them are compromised. Similar to restaurants, delivery persons also tend
to accept many orders at once so that they get more commission within the same
timeframe. Similar to restaurants, the delivery persons are also negatively rewarded
for degrading service.

(3) Remuneration by cryptocurrencies: Our system incorporates cryptocurrency while
completing a payment; customers will receive discounts and special oﬀers when they
pay for foods with cryptocurrencies.

(4) Flawless delivery: A customer’s delivery might be inconvenient at times due to the
deliveryman. If the deliveryman is late, he will be penalized. A portion of the delivery
price will be deducted based on the time.

Security: Smart contracts safeguard every transaction. A smart contract is a computer-
ized code that regulates data exchanges within a speciﬁed scope. Nobody, not even the
administrator, can tamper with the data stored in Blockchain, smart contract-managed.
Ledgers and established standards are used to deploy smart contracts. For these afore-
mentioned reasons, blockchain-based systems are more secure than standard data-
base-based applications.

Our system design is illustrated in Figure 3. Figure 3 demonstrates that the system’s
major actors are restaurants, deliverymen, and customers. Initially, the competent auth-
ority publishes the contract on the blockchain system. The steps start from food orders
and end at collecting food delivery fees, and Blockchain holds some critical data. These
steps are chronologically exhibited in Figure 3. Automated checks are done by the
smart contracts on the diﬀerent actors’ data inside the system for security, traceability,
and quality maintenance purpose.

3.2. Design of the system

The system is composed of actors such as food eateries, delivery personnel, and custo-
mers. Moreover, the contract deployer is another actor in this case. There a lot of elements
will be used to create the mechanism of interaction between the actors and the system.
The sections below illustrate the role of each actor and component.

Actors: While many diﬀerent parties are involved, they are all threatened by the same
thing: an unbreakable system that is not subject to change. Our suggested approach
establishes connections between four actors through technical resources. The following
section discusses the qualities of the actors.

(1) Contract owner: The contract owner wields a disproportionate amount of authority
within the system. The owner is in charge of implementing the contract into oper-
ation on the system and ensuring that the rules are followed.

10

A. A. TALHA TALUKDER ET AL.

(2) Restaurants: Cafes, hotels, and many types of food preparation establishments are
covered here. Their major objective is to cook food within a certain time frame and
serve it to customers.

(3) Deliverymen: Food parcels are collected from restaurants and delivered to customers
by the deliveryman. They employ their modes of transportation to ensure food is
delivered on time.

(4) Customer: Customers are the vast majority of individuals who rely on deliverymen to
bring their foods on time and who contribute signiﬁcantly to the system by constantly
increasing demand.

The primary objective is to develop a system in which these actors cooperate in terms

of enhancing the transparency of these items.

Components: Our system comprises many components to implement our system that
has features such as immutability, availability, security, preventing third-party intermedi-
aries, and automating. Blockchain technology and smart contracts are the principal com-
ponents of our proposed system. The components and how they couple within our
system are further explained in detail below.

Blockchain: Blockchain technology contributes to the system’s legitimacy and stability.
One of the primary goals of this eﬀort is to enhance the openness of restaurant food track-
able data, tamper-prooﬁng historical data and abolish commission business within the
food industry. Several events occur at essential phases of the delivery process, and the
data is recorded in the Blockchain’s transaction log. This data can never be edited or tam-
pered with without endangering the Blockchain. Our blockchain implementation has
been done using Ethereum blockchain. Figure 4 demonstrates how our actors and the
system interact in collaboration with the blockchain network.

At the same time, smart contracts automate our functionalities and eliminate the
need for intermediary third parties (market controlling applications) through the use
functions, events, and modiﬁers. Where attributes denote
of a mix of properties,
storage variables, functions denote a particular task execution, events denote the
occurrence of a chosen set of statements, and modiﬁers indicate actor authority
over the system. Our system is composed of three smart contracts developed in the
Solidity programming language and is based on the Ethereum blockchain technology
which we later merged into one. The ﬁrst contract is for the customers. This contract
holds the attributes, functions and modiﬁers related to a customer. The contract is
demonstrated in Figure 5.

The second agreement covers restaurants and the third agreement covers delivery-
man-related functionalities. The customer may place an order with any restaurant and
wait for the deliveryman to come on time. Customers can track the status of their
orders and receive notiﬁcations on the move. Figure 6 depicts the variables, functions,
events, and modiﬁers that restaurant smart contracts contain, acquire, and execute.
The restaurant contract (Figure 6) automates the gathering and keeping a record of cus-
tomer data and placing it on the Blockchain. Self-testing is built into the system for rule
violation from the smart contract and comparing it to the contract’s ideal settings, the
system takes the further action. As a result, the contract functions automatically on the
Blockchain, ensuring veriﬁable information for future purchasers and quality control.
The dates, as well as the amount and quantity sold, will all be recorded in this contract,

JOURNAL OF INFORMATION AND TELECOMMUNICATION

11

Figure 4. System-blockchain interaction.

at each stage from restaurant to customers. The second contract is used to track delivery-
man once they have received the food for delivery which is shown in Figure 7.

One of the primary issues that our solution seeks to address is the legitimacy of order
trackability data and making it auditable to general customers. Additionally, the second
contract may be utilized to monitor deliveryman positions and their time for delivery
and their quality of service (time-keeping) will aﬀect their share of money in an order.

4. Implementation

We implemented and tested the blockchain mechanism in an Ethereum-based block-
chain environment. We chose Solidity to write smart contracts. The Remix environment
the proposed system’s fundamental prototype
was used to develop and test
implementation. Our
the entire system.
focus is not on the development of
However, our research demonstrates an architecture-driven method. We will cover
the implementation in detail in this section and also present the testing result and
simulations.

12

A. A. TALHA TALUKDER ET AL.

Figure 5. Smart contracts used for customers in the system.

Figure 6. Restaurant’s smart contracts in the system.

Our work demonstrates the usability and potential of blockchain technology in the
realm of food delivery systems that ensure that all the actors involved do their job with
honesty and the customers are satisﬁed. The core objective of this research is to depict

JOURNAL OF INFORMATION AND TELECOMMUNICATION

13

Figure 7. Smart contracts used for deliveryman in the system.

how blockchain technology and smart contracts can be applied to automate the process
of ordering food from a restaurant and having the food delivered to the customer’s house
by a deliveryman. Additionally, the system monitors the process’s timing of food delivery.
The connections between system components and actors are evident in Figures 3, 4 and
8. We divided the process into four segments: the registration phase for all actors, the cus-
tomer to restaurant phase, the restaurant to deliveryman phase, and the deliveryman to
customer phase. The operation of each segment is detailed below.

4.1. Registration

All three actors involved within our system, the customer, the restaurant, and the delivery-
man’s package, had to ﬁrst registered to the system. All actors have an identical process.
During the registration phase, our system primarily stores the addresses of customers, res-
taurants, and packages. Additionally, as previously stated, all three actors use a similar
registration process, but the restaurant registration algorithm is slightly diﬀerent. The dis-
tinction is that during restaurant registration, the restaurants need to provide their menu
to the system where the menu is an array containing the food’s id.

4.2. Customer to restaurant

Once a customer places an order in the system, the smart contract ﬁrst checks if the food
item is available or not via the food_available() method. Given that the item is available,
the customer’s order for food is placed to the network by executing the place_order()
method. An ordered hash is generated for each order. Following that, the restaurant
will accept the order by using the accept_order() method.

14

A. A. TALHA TALUKDER ET AL.

Figure 8. Sequence ﬂow diagram for one order.

4.3. Restaurant to deliveryman

Our third phase is the connection between the restaurant and the deliveryman. In
our second phase, the customer places an order and the restaurant accepts it.
Additionally, the Customer to Restaurant process generated an ordered hash.
In
this stage, the deliveryman will get a notiﬁcation showing that restaurant ‘X’ has
a package waiting to be delivered. Accepting the order from the restaurant, the
deliveryman will accept
the food delivery which invokes the accept_package()
method within the system with the order hash being designated to the delivery-
man’s address. Following that,
the restaurant will start preparing the food by
executing the food_making() method and passing the order hash as an argument
for this method. After completing the meal, the deliveryman will receive it as a
package by executing the collect_food() method in the background. Finally, the res-
taurant can only collect the total amount for food by invoking the method food_-
fee_collecting() inside the system. Additionally, we incorporate the concept of food
preparation in a predetermined time frame and maximum order constraint during
If a time violation occurs, or if
the Restaurant to Deliveryman connection phase.

JOURNAL OF INFORMATION AND TELECOMMUNICATION

15

the restaurant takes an excessive number of orders at a time, making delay while
handing the parcel over to the deliveryman, the restaurant’s food preparation
payment will be reduced by a certain percentage which will
increase/decrease
based on the restaurant’s quality control. The algorithm for determining the set
time violation is depicted in Algorithm 1.

Algorithm 1: Time violation and restaurant payment algorithm in phase three

Result: 1. Smart Contract emits time violation.

2. Constraint-based restaurant

01

02

03
04

05
06
07
08
09
10
11

payment.

food_making():

order placement time : block.timestamp while restaurant starts preparing food

collect_food():

order delivery time : block.timestamp while delivering the food.
Food Fee Collection by the Restaurant
food_fee_collecting():

if (delivery time – placement time) is greater than the time
promised to customer then

triggering warning event;
emit warning event in Blockchain;
reduce amount by ‘x’ percentage;

restaurant gets full payment;

else

end

end

4.4. Deliveryman to customer

The ﬁnal phase of our proposed system is the interaction between the Deliveryman and
the Customer. After the food is ready, the deliveryman will receive the package from the
restaurant, and the deliveryman is responsible for delivering the parcel to the customer
within a certain time. The deliveryman application will
invoke the deliver_food()
method in the system, which will create a parcel information block within the Blockchain
with the same hash that was generated while the user created the food request. After
that, the food_arrival() method gets invoked once the customer conﬁrms food arrival.
Finally, only after the customer conﬁrmation, the deliveryman will be able to collect
the delivery fees by invoking the collect_delivery_fee() method in the background.
Additionally, similar to our third phase, the Restaurant to Deliveryman connection
phase, our system implements the constraints of food delivery in a predetermined time
frame and a maximum number of orders received by the deliveryman in this phase,
which is also our system’s ﬁnal phase. If a speciﬁed time violation occurs, or if the delivery-
man takes an excessive amount of time delivering the food or handing it over to the cus-
tomer, the deliveryman’s payment will be reduced as a penalty. No one likes their food
cold and past its prime. Paying extra for having the food in the comfort of home
comes with an expectation of having the food as it just came straight out from the
kitchen. But deliverymen tend to accept arrays of orders to deliver them together
which impairs both qualities of service and food. Algorithm 2 shows the deliveryman con-
straints and fee collection process. At the conclusion of phase four, our entire system had
successfully completed the food delivery process from restaurant to customer. For a clear
understanding, Figure 8 depicts the system’s sequence diagram, which is a graphical ﬂow

16

A. A. TALHA TALUKDER ET AL.

representation of all actors interacting in a food order and delivery process with our
system.

Algorithm 2: time violation and deliveryman payment algorithm in phase four

01

02

03
04

05
06
07
08
09
10
11

Result: 1. Smart Contract emits time violation.

2. Constraint-based deliveryman payment.

collect_food():

delivery start time : block.timestamp while deliveryman
receives the parcel.

food_arrival():

order arrival time : block.timestamp while
customer receives the food.

Food Fee Collection by the Restaurant

delivery_fee_collecting():

if (arrival time–delivery start time) is greater than the time
promised to customer then
triggering warning event;
emit warning event in Blockchain;
reduce amount by ‘x’ percentage;

deliveryman gets full payment;

else

end
end

5. Testing and analysis

5.1. Testing

Our team designed and implemented the system architecture, which included the inter-
face between smart contracts and the Ethereum blockchain. In addition to providing an
Ethereum wallet, accounts that have been pre-loaded with dummy ether cryptocurrency,
and an environment for building smart contracts in the Solidity programming language,
Remix also provides a web-based integrated development environment (IDE). Addition-
ally, Remix oﬀers us with the appropriate infrastructure for executing and deploying
the contract on the Ethereum blockchain, which fulﬁls our requirements and objectives.
We will demonstrate our contracts communicating with the Blockchain in this part and
the process by which they interact.

The three actors within our system communicated within themselves to execute
diﬀerent functionalities and,
in the process make various requests, responses and
checks. Rest of this section will depict a food order by the customer successfully creating
a block inside the blockchain network and the progression will conclude with the custo-
mer receiving the order. During the food making and delivery phase, certain violations
may occur which will end up in penalty for that user which has also been shown. After
all the actors are registered in our system, the second phase can commence which is
the interaction between the customer and the restaurant. During this step, the customer
places an order for food using the place_order() method. As depicted in Figure 9, the logs
contain all the food order process information. The Blockchain logs the food items or food
id, the restaurant id, the order id, and the price along with customer and restaurant
hashes.

The third and last phase of the system ensures that food reaches the customer’s hand
from the restaurant. In these two stages, ﬁrst, the restaurant accepts the order stating its

JOURNAL OF INFORMATION AND TELECOMMUNICATION

17

Figure 9. A Successful order placed inside the blockchain.

availability and the based on the food type, the restaurant will ask for a certain amount of
time to prepare the food. A food request received by the restaurant has been shown in
Figure 10 where relevant information like customer and restaurant address, order
details and food making time is logged inside the Blockchain.

An order placed in a restaurant also notiﬁes the deliveryman and someone accepts the
delivery request. After the restaurant has prepared the food, the deliveryman picks up the
food to deliver it to the customer. The delivery information such as deliveryman and cus-
tomer hash, the food package id (hash) and the delivery time is logged into the network.
Figure 11 shows a successful delivery by the restaurant received by the deliveryman.

The food package’s location and time are tracked along the way till it reaches to the
customer. Figure 12 shows the blockchain logs of an order received by the customer
along with the associated address of the customer, package, and deliveryman.

We previously discussed the time violation event, referred to as a warning() event in
the system, in which restaurants who deliver food late would have a portion of their
payment removed as a penalty while implementing the food_fee_collecting() method.
Similarly, if the deliveryman delivers the food late, they will also be charged a penalty
while implementing the and collect_delivery_fee() method. These two cases are shown
in Figure 13, where 13(a) shows the violation log for the restaurant and 13(b) illustrates
the same scenario for a deliveryman.

5.2. Analysis

This part aims to analyze the proposed system and identify the motivations why Block-
chain-based food delivery should be integrated.

5.2.1. Advantages
Blockchain-Powered food delivery service aimed at resolving industry-wide trust issues.
Referral and loyalty reward programs entice users to stay on the site. Liquidity is

18

A. A. TALHA TALUKDER ET AL.

Figure 10. A successful receive of order by the restaurant.

ensured by cryptocurrency usage. One way to address discernibility diﬃculties and
assure straightforwardness, one solution is to deploy block tie technology to record
information from the consecutive order in a way that makes subsequent control
diﬃcult. There are options such as postponing operational events, trading hard cur-
rency at each counter, and reducing functional proﬁciency. Inadequate data security.
Additional personnel behind the counters. Despite the fact that there is currently a
lack of clarity about the taxation of cryptographic forms of money. Table 1 illustrates

Figure 11. Food package received by the deliveryman.

JOURNAL OF INFORMATION AND TELECOMMUNICATION

19

Figure 12. Food package received by the customer.

Figure 13. Food package received by the customer.

a Comparative examination of our system with previous research employing Blockchain
and smart contracts diﬃculties and advantages exemplify our system’s analysis. The
following are the ﬁndings from the comparison of the system to existing methods indi-
cated above in Table 1.

20

A. A. TALHA TALUKDER ET AL.

Table 1. Comparing the system to existing method.

Outcome

Traceability
Integrity
Smart contracts
Time violation
Penalty
Eliminate third-

party

Shyamala Devi et al.
(2019)
✗
✗
✓
✗
✗
✗

Rani and Vishali
(2021)
✓
✗
✓
✗
✗
✓

Ngamsuriyaroj et al.
(2018)
✗
✓
✓
✗
✗
✗

Bartolini et al.
(2020)
✗
✓
✓
✗
✗
✗

Proposed
system
✓
✓
✓
✓
✓
✓

. To encourage greater adoption of Blockchain, our suggested system incorporated
penalties for time violations. Both the time violation and the penalty are unique to
each of the above methods mentioned.
Immutable data storage and eliminating third-party intermediaries are not typical fea-
tures in all of these methods, but they are in our suggested system, encouraging
greater adoption.

.

5.2.2. Challenges
Though our system tries to prevent faults and blunders in online food delivery systems
with the use of advanced regulatory contracts and immutable and veriﬁable ledger tech-
nology, there are still some systemic issues to resolve. Blockchain technology is still in its
early stages, ﬁnding it challenging to adapt it for real-world applications. Still being
execution-costly, mining time costly, and on the other hand, the distributed network is
computationally expensive while creating a trade-oﬀ between reliability and ease of
use [original 7]. Editing or modifying data on the Blockchain is nearly impossible,
making it impossible to correct errors. While immutability is a core characteristic of Block-
chain, it diﬀers from typical database systems; Blockchain does not enable us to edit the
data associated with a validated transaction owing to its reliable security methods. Smart
contracts are installed to take charge of the system and make the procedures easier to do.
Once it is placed on the Blockchain, it cannot be altered, and the features within it are not
open to addition or modiﬁcation. The initial conﬁguration of the blockchain ecosystem
requires a modest sum of money. There’s also the question of the legality of trading
via cryptocurrency based on country laws. Gas costs to run and execute functions are
shown in Table 2.

Table 2. System costs for execution and transaction.
Task

Actor

Transaction cost

Execution cost

registration()

place_order()
order_accept()
accept_package()
food_making()
collect_food()
food_fee_collecting()
deliver_food()
food_arrival()
collect_delivery_fee()

Restaurant
Customer
Package
Customer
Restaurant
Deliveryman
Restaurant
Deliveryman
Restaurant
Deliveryman
Customer
Deliveryman

385,355
93,566
140,108
223,985
51,981
75,571
55,157
57,026
57,133
28,677
77,356
333,44

385,355
93,566
140,108
223,985
51,981
75,571
55,157
57,026
57,133
28,677
77,356
333,44

JOURNAL OF INFORMATION AND TELECOMMUNICATION

21

6. Conclusion

Blockchain’s role in the food delivery industry was the main focus of this research and how
its use can ensure data’s accessibility, privacy, integrity which also prevents data tamper-
ing and to build trust between restaurants, customers, and deliveryman. Using a penalty
system for food delivery on the blockchain simpliﬁed things for restaurants and consu-
mers alike, as they will be able to produce, deliver, and receive food on time. Customers
can safely assume that they will receive their food on time and that the restaurant and
deliveryman will receive payment as well if they prepare and deliver the food on time.
A commission-based market eventually jeopardizes the rights and advantages from the
customer end while the other actors making a fortune out of the system ﬂaws. To put
an end to these ﬂaws, our study implemented a blockchain and smart contract-based
system and our testing result shows that the implementation tackles the issues tried to
be solved. The entire system is made secure, as blockchain technology ensures its
robust security. The implementation of our study has been made ﬂexible and broad in
reach. Any process may be traced, developed, and enhanced using the same method-
ology. In future work, installing the system on a permissioned blockchain and innovating
features as customers can also get the penalty, checking food quality before it is even pre-
pared, etc. is our long-term goal is our long-term goal.

Disclosure statement

No potential conﬂict of interest was reported by the author(s).

Funding

This work was supported by the Faculty Research Grant [CTRG-21-SEPS-19], North South University,
Bashundhara, Dhaka 1229, Bangladesh.

Notes on contributors

A. A. Talha Talukder is currently studying B.Sc. in the department of Electrical & Computer Engin-
eering, North South University. He is the COO and the founder of a startup named ’Instantkaj.com’
which is for freelancers in Bangladesh. He is also working part-time software developer at an IT
company named Anza Corporation Ltd. He along with his team secured the ﬁrst runner-up position
is the ACM-Innovation Challenge held by the ECE department of North South University for their
undergraduate ﬁnal year design project. His main research interests include data analytics, compu-
ter vision, machine learning and blockchain.

Md. Anisul Islam Mahmud is now pursuing BSc. in Electrical and Computer Engineering at North
South University. He is working as an undergraduate teaching assistant at North South University.
He developed a Bengali language-based chatbot for university students. He and his team secured
the ﬁrst runner-up position is ACM-Innovation Challenge held by the ECE department of North
South University for their undergraduate ﬁnal year design project. His main research interests are
in blockchain, machine learning, deep learning, image processing and computer vision.

Arbiya Sultana is now pursuing B.Sc. in Electrical and Computer Engineering at North South Univer-
sity. She has interest in user interface design and front-end of software architecture. She worked on
many software projects. Apart from her interest in software, she also has great passion for research
and development in the ﬁeld of machine learning and blockchain. She and her team secured the
ﬁrst runner-up position is ACM-Innovation Challenge held by the ECE department of North South

22

A. A. TALHA TALUKDER ET AL.

University for their undergraduate ﬁnal year design project. Her research interests are in blockchain
and machine learning.
Tahmid Hasan Pranto received the bachelor’s degree in computer science and engineering from
North South University, Dhaka, Bangladesh. He is currently working as a Research Assistant at the
ECE Department, North South University, under the supervision of Prof. Dr. Rashedur M. Rahman.
He has keen interest in emerging technologies like blockchain and machine learning. He has pub-
lished research works in peer-reviewed journals like Computer Science (PeerJ), Applied Artiﬁcial
Intelligence, IEEE Access, and Cybernetics and Systems. He has also published in conference pro-
ceedings like IWANN, 2021. His current research explores the scope and feasibility of artiﬁcial intel-
ligence in decentralized platforms by employing incremental machine learning and federated
learning approaches in the blockchain-enabled decentralized systems.

AKM Bahalul Haque is currently a Junior Researcher with the Department of Software Engineering,
LUT University. Earlier, he was a Lecturer at the Department of Electrical and Computer Engineering,
North South University. His works have been accepted and published in international conferences
and peer-reviewed journals,
including IEEE Access, Expert Systems, Cybernetics and Systems,
various international conference proceedings, Taylor and Francis Books, and Springer Book. His
research interests include explainable AI, blockchain, data privacy and protection, and human-com-
puter interaction.

Rashedur M. Rahman (Senior Member, IEEE) received the M.S. degree from the University of Man-
itoba, Winnipeg, MB, Canada, in 2003, and the Ph.D. degree from the University of Calgary, Canada,
in 2007. He currently works as a Professor in the Electrical and Computer Engineering Department at
North South University, Dhaka, Bangladesh. He published more than 200 research articles in the
area of parallel and distributed computing, cloud and grid computing, data and knowledge engin-
eering. His current research interests include cloud load characterization, VM consolidation, and the
application of data mining and fuzzy logic in diﬀerent decision-making problems. He is also on the
editorial committee of many international journals.

ORCID

Rashedur M. Rahman

http://orcid.org/0000-0002-4514-6279

References

Bader, L., Burger, J. C., Matzutt, R., & Wehrle, K. (2019). Smart contract-based car insurance policies.
2018 IEEE Globecom Workshops, GC Wkshps 2018 – Proceedings. https://doi.org/10.1109/
GLOCOMW.2018.8644136.

Bartolini, N., Coletta, A., Maselli, G., & Piva, M. (2020). DRUBER: A trustable decentralized drone-based
delivery system. Proceedings of the 6th ACM Workshop on Micro Aerial Vehicle Networks, Systems,
and Applications, DroNet. https://doi.org/10.1145/3396864.3399706.

Baza, M., Lasla, N., Mahmoud, M., & Abdallah, M. M. (2019). (1) B-Ride: Ride Sharing with privacy-pres-
ervation, trust and fair payment atop public blockchain | request PDF. https://www.researchgate.
net/publication/333993190_B-Ride_Ride_Sharing_with_Privacy-preservation_Trust_and_Fair_
Payment_atop_Public_Blockchain.

Bodkhe, U., Tanwar, S., Parekh, K., Khanpara, P., Tyagi, S., Kumar, N., & Alazab, M. (2020). Blockchain
for Industry 4.0: A comprehensive review. IEEE Access, 8, 79764–800. https://doi.org/10.1109/
ACCESS.2020.2988579

Chen, J.-f., Wang, L., Wang, S., Wang, X., & Ren, H. (2021). An eﬀective matching algorithm with adap-
tive tie-breaking strategy for online food delivery problem. Complex & Intelligent Systems, 8(1),
107–28. https://doi.org/10.1007/S40747-021-00340-X

DeCusatis, C., Zimmermann, M., & Sager, A. (2018). Identity-based network security for commercial
blockchain services. 2018 IEEE 8th Annual Computing and Communication Workshop and
Conference, CCWC (pp. 474–477). https://doi.org/10.1109/CCWC.2018.8301713.

JOURNAL OF INFORMATION AND TELECOMMUNICATION

23

Farouk, A., Alahmadi, A., Ghose, S., & Mashatan, A. (2020). Blockchain platform for industrial health-
care: Vision and future opportunities. Computer Communications, 154(March), 223–35. https://doi.
org/10.1016/J.COMCOM.2020.02.058

Granheim, S. I., Opheim, E., Terragni, L., Torheim, L. E., & Thurston, M. (2020). Mapping the digital
food environment: A scoping review protocol. BMJ Open, 10(4), e036241. https://doi.org/10.
1136/BMJOPEN-2019-036241

Hasan, H. R., Salah, K., Jayaraman, R., Ahmad, R. W., Yaqoob, I., & Omar, M. (2020). Blockchain-based
solution for the traceability of spare parts in manufacturing. IEEE Access, 8, 100308–22. https://doi.
org/10.1109/ACCESS.2020.2998159

Hassija, V., Saxena, V., & Chamola, V. (2021). A mobile data oﬄoading framework based on a com-
bination of blockchain and virtual voting. Software – Practice and Experience, 51(12), 2428–45.
https://doi.org/10.1002/SPE.2786

Kohar, A., & Jakhar, S. K. (2021). A capacitated multi pickup online food delivery problem with time
windows: A branch-and-cut algorithm. Annals of Operations Research, 1–22. https://doi.org/10.
1007/S10479-021-04145-6

Kosba, A., Miller, A., Shi, E., Wen, Z., & Papamanthou, C. (2016). Hawk: The blockchain model of cryp-
tography and privacy-preserving smart contracts. Proceedings – 2016 IEEE Symposium on Security
and Privacy, SP (pp. 839–858). https://doi.org/10.1109/SP.2016.55.

Lau, T.-C., & Ng, D. (2019). (1) (PDF) online food delivery services: Making Food delivery the new
normal. https://www.researchgate.net/publication/334050513_Online_Food_Delivery_Services_
Making_Food_Delivery_the_New_Normal.

Liao, W., Zhang, L., & Wei, Z. (2020). Multi-objective green meal delivery routing problem based on a
two-stage solution strategy. Journal of Cleaner Production, 258(June), 120627. https://doi.org/10.
1016/J.JCLEPRO.2020.120627

Liu, Y. (2019). An optimization-driven dynamic vehicle routing algorithm for on-demand meal deliv-
ery using drones. Computers & Operations Research, 111(November), 1–20. https://doi.org/10.
1016/J.COR.2019.05.024

Nakamoto, S. (2018). Bitcoin: A peer-to-peer electronic cash system. www.bitcoin.org.
Ngamsuriyaroj, S., Likittheerameth, T., Kahutson, A., & Pathummasut, T. (2018). Package delivery
system based on blockchain infrastructure. Proceeding of 2018 7th ICT International Student
Project Conference, ICT-ISPC. https://doi.org/10.1109/ICT-ISPC.2018.8523944.

Niharika, N. P. (2020). A study on consumer behaviour and the impact of food delivery apps on the
college students in Bangalore. https://www.ijresm.com/Vol.3_2020/Vol3_Iss3_March20/IJRESM_
V3_I3_120.pdf.

Novo, O. (2018). Blockchain meets IoT: An architecture for scalable access management in IoT. IEEE

Internet of Things Journal, 5(2), 1184–95. https://doi.org/10.1109/JIOT.2018.2812239

Pranto, T. H., Noman, A. A., Mahmud, A., & Haque, A. B. (2021). Blockchain and smart contract for IoT
enabled smart agriculture. PeerJ Computer Science, 7(March), 1–29. https://doi.org/10.7717/PEERJ-
CS.407/SUPP-1

Rani, K. S., & Vishali, S. (2021). Blockchain driven IoT based Delish2Go decentralized food delivery
application. Proceedings – International Conference on Artiﬁcial Intelligence and Smart Systems,
ICAIS (pp. 1727–1732). https://doi.org/10.1109/ICAIS50930.2021.9395873.

Roeck, D., Sternberg, H., & Hofmann, E. (2019). Distributed ledger technology in supply chains: A
transaction cost perspective. Blockchain in Transport and Logistics, 58(7), 2124–41. https://doi.
org/10.1080/00207543.2019.1657247

Shyamala Devi, M., Aparna Shashikant Joshi, R. S., & Bagate, R. A. (2019). Design of IoT blockchain
based smart agriculture for enlightening safety and security. Communications in Computer and
Information Science, 985(February), 7–19. https://doi.org/10.1007/978-981-13-8300-7_2

Stanciu, A. (2017). Blockchain based distributed control system for edge computing. Proceedings –
2017 21st International Conference on Control Systems and Computer, CSCS (pp. 667–671). https://
doi.org/10.1109/CSCS.2017.102.

Suhartanto, D., Ali, M. H., Tan, K. H., Sjahroeddin, F., & Kusdibyo, L. (2018). Loyalty toward online food
delivery service: The role of e-service quality and food quality. Journal of Foodservice Business
Research, 22(1), 81–97. https://doi.org/10.1080/15378020.2018.1546076

24

A. A. TALHA TALUKDER ET AL.

Szabo, N. (1997). Formalizing and Securing relationships on public networks. First Monday, 2(9), 9.

https://doi.org/10.5210/FM.V2I9.548

Tse, D., Zhang, B., Yang, Y., Cheng, C., & Mu, H. (2017). Blockchain application in food supply infor-
mation security. In 2017 IEEE international conference on industrial engineering and engineering
management (IEEM) (pp. 1357–1361). IEEE.

Valenta, M., & Sandner, P. G. (2017). [PDF] Comparison of ethereum, hyperledger fabric and corda |
https://www.semanticscholar.org/paper/Comparison-of-Ethereum%2C-

semantic
Hyperledger-Fabric-and-Valenta-Sandner/9f4f80c8e596b70ec8e2324f44ede15c48c147b5.

scholar.

Wesley, D. (2017). Is blockchain the invisible answer to your business needs? https://www.forbes.
com/sites/forbestechcouncil/2017/12/11/is-blockchain-the-invisible-answer-to-your-business-
needs/?sh=6385d1db13d0.

Wood Daniel Davis. (2014). [PDF] ethereum: A secure decentralised generalised transaction ledger |
https://www.semanticscholar.org/paper/ETHEREUM%3A-A-SECURE-

scholar.

semantic
DECENTRALISED-GENERALISED-LEDGER-Wood/
da082d8dcb56ade3c632428bfccb88ded0493214.

Worku, Z., & Legoabe, R. (2017). (1) (PDF) factors that undermine service delivery by civil engineers in
South African local municipalities. https://www.researchgate.net/publication/340892769_
Factors_that_Undermine_Service_Delivery_by_Civil_Engineers_in_South_African_Local_
Municipalities.

Yang, Z., Yang, K., Lei, L., Zheng, K., & Leung, V. C. M. (2019). Blockchain-based decentralized trust
management in vehicular networks. IEEE Internet of Things Journal, 6(2), 1495–1505. https://doi.
org/10.1109/JIOT.2018.2836144

Yeo, V. C. S., Goh, S. K., & Rezaei, S. (2017). Consumer experiences, attitude and behavioral intention
toward online food delivery (OFD) services. Journal of Retailing and Consumer Services, 35(March),
150–62. https://doi.org/10.1016/J.JRETCONSER.2016.12.013

Yewale, A. J. (2018). Study of blockchain-as-a-service systems with a case study of hyperledger fabric
implementation on kubernetes. UNLV Theses, Dissertations, Professional Papers, and Capstones,
August, 8–9. https://doi.org/10.34917/14139923.

Zhao, S., & O’Mahony, D. (2018). BMCprotector: A blockchain and smart contract based application
for music copyright protection. ACM International Conference Proceeding Series, December, 1–5.
https://doi.org/10.1145/3301403.3301404.

