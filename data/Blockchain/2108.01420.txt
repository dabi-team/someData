Accountability and Forensics in Blockchains:
XDC Consensus Engine DPoS 2.0

Gerui Wang, Jerome Wang, Liam Lai, Fisher Yu
Hash Laboratories
{gerui.wang, jerome.wang, liam.lai, ﬁsher.yu}@hashlabs.cc

August 2021

Abstract

This document introduces XinFin DPoS 2.0, the proposed next generation decentralized
consensus engine for the XinFin XDC Network. Built upon the most advanced BFT consensus
protocol, this upgrade will empower the XDC Network with military-grade security and per-
formance while consuming extremely low resources, and will be fully backwards-compatible in
terms of APIs. It will also pave the road to the future evolution of the XDC Network.

The core invention is the holistic integration of accountability and forensics in blockchains:
the ability to identify malicious actors with cryptographic integrity directly from the blockchain
records, incorporating the latest peer-reviewed academic research [10] with state of the art
engineering designs and implementation plans.

1
2
0
2

g
u
A
5

]

R
C
.
s
c
[

3
v
0
2
4
1
0
.
8
0
1
2
:
v
i
X
r
a

1

 
 
 
 
 
 
Contents

1 Introduction

2 XDPoS 2.0

2.1 Master Node Election . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2 The HotStuﬀ Protocol
2.2.1 Protocol Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Safety and Liveness Guarantee . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2.2
2.2.3 Performance Guarantees . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.3 Reward Mechanism . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3 What to Expect

3.1 Seamless Upgrade . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2 Military Grade Security and Performance
. . . . . . . . . . . . . . . . . . . . . . . .
3.3 New Feature: Forensic Monitoring . . . . . . . . . . . . . . . . . . . . . . . . . . . .

4 Blockchains with Judiciary: An Outlook to the Future

5 Acknowledgement

3

5
5
6
6
8
8
10

10
10
10
10

13

15

2

1

Introduction

Trust systems are a core construct of human societies. For centuries, mutually distrustful parties
have collaborated to build empires, economies, and social structures. These collaborations and
interactions, however, have historically been managed with opaque systems that are susceptible to
corruption and extreme imbalance of power.

Decentralized trust systems are digital systems in which multiple parties can collaborate on speciﬁc
tasks without requiring parties to trust one another. An example of a task that requires decentralized
trust is that of running a ﬁnancial system, including payments. Decentralized trust systems promise
panacea from the ills of centralization and associated corruptibility. Although decentralized computer
systems have traditionally posed substantial technical challenges (e.g., scalability and security in
peer-to-peer networks), substantial breakthroughs in blockchain technologies in recent years have
paved the way for the mainstream development and deployment of decentralized trust systems:

Timeline of Blockchain developments.

• Blockchain 1.0: Bitcoin and proof of work (PoW) [9]. Highly secure protocol and system design
with guaranteed consensus as long as majority of hash power is honest. The major drawback is
that the system is very ineﬃcient. The ineﬃciencies are in energy as well as in scalability: poor
throughput (only a handful of transactions per second) and poor latency (hour of conﬁrmation
time). Summary: This era resulted in the ﬁrst construction of a permissionless blockchain
that provides an immutable ledger with extremely strong security properties and resistance to
malicious actors, only now being fully explored.

• Blockchain 2.0: Ethereum and programmable smart contracts [11]. This design maintains the
security of Bitcoin (and its scalability deﬁciencies) but adds a general purpose programmable
platform, allowing a large family of applications. Summary: This era resulted in the invention
of EVM (Ethereum Virtual Machine), the “blockchain computer", allowing general purpose
software programs to be implemented atop the blockchain.

• Blockchain 3.0: Proof of Stake (PoS). The PoS protocols eschew the energy consuming PoW
mining process and simultaneously allow high throughput and low latency (e.g., Ouroboros [6],
SnowWhite [4], Algorand [5], Hotstuﬀ [12], Tendermint [7]). The PoS blockchain protocols
have been constructed from a family of protocols guaranteed to provide consensus even when
a fraction of participants act maliciously (so-called Byzantine behavior) - known as BFT
(Byzantine Fault Tolerant) protocols [8] in Computer Science. Summary: This era focused on
the scaling problem of blockchains, improving throughput and latency by orders of magnitudes.

Security of Blockchains. A deﬁning feature of blockchains is its security against adversarial
actions, the so-called Byzantine fault tolerance. A standard format of expressing this security
property is the following:

as long as a fraction x% of participation level is honest, i.e., follows protocol, then the
security of the blockchain is guaranteed.

In PoW blockchains like Bitcoin, the participation level is measured in mining hash power and the
security threshold x is 0.5. In PoS blockchains like Algorand, the participation level is measured in
staking power and security threshold x = 1
. In a BFT protocol such as Hotstuﬀ, the participation
3
. When the Byzantine
level is measured in number of permissioned users and security threshold x = 1
3
participation level crosses the security threshold of x, security is not guaranteed: in fact, such a
scenario represents a doomsday scenario and “all bets are oﬀ".

3

An alternative view point of this state of aﬀairs is provided by anthropological studies of human
governance systems. Over millennia, stable human governance systems have evolved to a three-party
architecture: legislative, executive and judiciary wings. Indeed, this architecture is the dominant
format in all extant governing systems. In the context of blockchains, the legislative aspect is clearly
codiﬁed via the description of the protocol (the longest chain protocol in Bitcoin) and participation
strategies (e.g., proof of work mining in Bitcoin). The executive branch is represented by the incentive
(e.g., block rewards in Bitcoin) and taxing mechanisms (e.g., transaction fees (in Bitcoin and gas fees
(in Ethereum). A striking aspect in all extant blockchain designs is the absence of a judiciary system;
see Figure 1. Addressing this lacuna is the core goal of this whitepaper.

Figure 1: Judiciary, a core component of governance, is missing in extant blockchain designs.
Addressing this lacuna in a systematic manner represents the core goal of this whitepaper.

Blockchain 4.0: Accountability and Attributability. Trust underlies human societies and key
aspects of incentivizing and maintaining trustworthy behavior are the notions of accountability
(viewed internally) and attibutability (imposed externally). As an example, self-reporting ﬁnancial
statements (accountability) and auditing (attribution) are standard checks and balances of all
ﬁnancial systems. Key to mainstream blockchain adoption and usage, especially in the ﬁnancial
services sector, is to build accountability to blockchains. This notion of ﬁnancial accountability was
introduced in blockchains via the notion of slashing conditions in [1] - however, this protocol was
not completely speciﬁed and has since been overtaken by other versions [2] in the development of
Ethereum 2.0. In particular, no extant blockchain, either in production or design stage incorporates
forensics holistically (one notable exception is [3], which aims to design new blockchains). We propose
that the next era of blockchain designs will be focused on this key property, with XDC network
spearheading this revolution, summarized as follows:

XDPoS 2.0 Credo: The blockchain is secure when suﬃcient participation
is honest; conversely if security is breached, then every malicious actor is
identiﬁed (with cryptographic integrity).

In this whitepaper, we detail the design of such a blockchain; we build on very recent academic

research [10] in pursuing this design process.

4

2 XDPoS 2.0

Sitting at the core of the XDC Network, XinFin Delegated Proof-of-Stake consensus protocol 2.0
(XDPoS 2.0) regulates the XDC nodes in maintaining the consistency of a decentralized ledger (the
blockchain) with strong security and performance guarantees. In this section, we provide an overview
of XDPoS 2.0 by introducing its three pillars, including:

1. Master node election, which speciﬁes how the delegation and proof-of-stake works.

2. The consensus engine, namely, the HotStuﬀ state machine replication (SMR) protocol, which is
the state-of-the-art BFT (Byzantine fault-tolerant) SMR (state-machine replication) protocol.
An illustration of its position in XDPoS 2.0 and a brief security analysis will be provided.

3. Reward mechanism, which incentivizes nodes to join and maintain the XDC Network.

2.1 Master Node Election

Unlike proof-of-work (PoW) which wastes resources and has low performance, XDPoS 2.0 uses
Delegated Proof-of-Stake to decide which nodes have the right to create the next block and how
the created block is approved. XinFin nodes that contribute in creating and approving blocks are
referred to as master nodes. Only XinFin nodes that meet certain stake and hardware criteria are
eligible as the master nodes. The eligible criteria are as follows:

• More than 10,000,000 XDC deposited into the XinFin smart contract.

• A suitable wallet to store XDC tokens. Preferably in hardware form.

• A dedicated and stable hardware environment.

• A dedicated Static Public IP address.

• 100% network uptime by IDC network.

• A minimum of tier 3+ IDC environment.

• Virtual Private Server (VPS). Though this optional, this option is highly recommended.

• When using cloud-based services like Amazon EC2 M3, large virtual machine (VM) sizes are
appropriate. Similar conﬁgurations are applicable for the Microsoft Azure Cloud network users.

Once a node meets these criteria, it becomes a master node candidate and is eligible for master
node elections that happen periodically. More speciﬁcally, time is partitioned into epochs. At the
beginning of each epoch, a random set of 108 master candidates are elected as the master nodes
of this epoch. These master nodes forms a BFT committee that is responsible for creating 900
consecutive blocks of the chain (the delegation). Every block is certiﬁcated by the super-majority
of the committee (and thus is ﬁnalized) following the Hotstuﬀ protocol. Sample aforementioned
parameter values are:

VALIDATOR_SET_SIZE=108;

EPOCH=900.

The random election can be achieved via various mechanisms:

1. Rank candidates by deposit and elect the top 108 candidates.

5

2. Using veriﬁable random functions (VRFs) to randomly elect 108 candidates. The probability

of being elected should be proportional to deposit.

XDPoS 2.0 will start with mechanism (1) for backwards compatibility, and can switch to mechanism
(2) seamlessly for added fairness and security.

Once the election is done, all nodes that are not elected will keep listening to messages sent by
the HotStuﬀ BFT committee and passively maintain the blockchain. We now introduce the HotStuﬀ
protocol.

2.2 The HotStuﬀ Protocol

2.2.1 Protocol Description

HotStuﬀ is a state-of-the-art Byzantine fault-tolerant (BFT) state machine replication (SMR)
protocol widely used as an enterprise grade blockchain consensus engine, such as Facebook’s Novi
and Diem (previously known as Libra) projects. Compared to the Nakamoto longest chain (BTC,
ETH, etc), it has two distinct advantages:

1. Deterministic security (a.k.a. ﬁnality), which means zero forking / rollback on conﬁrmed blocks
as long as the fraction of adversary master nodes is less than 1/3. In contrast, Nakamoto only
provides probabilistic security, that is, there is a non-zero chance of rollback.

2. Resiliency to network partial asynchrony, which means that HotStuﬀ remains secure even if
the network is temporarily not synchronous (e.g., temporary large latency between diﬀerent
sets of nodes). In contrast, Nakamoto is insecure under network partial asynchrony.

Setup HotStuﬀ aims at reaching consensus within a BFT committee, which is a deterministic
set of nodes that know each other (recognizing their IP address, account address, and public key,
etc.). In XDPoS 2.0, this BFT committee is the set of master nodes determined at the beginning of
each epoch. Furthermore, these master nodes are ordered (e.g. by ascending order of their account
address) to facilitate the protocol.

The consensus to be reached in XDPoS 2.0 is about an ever-growing list of blocks. Each block
has a parent hash pointer. Thus, together they form a blockchain. The transitive closure of the
parent relation is called ancestors.

The protocol is a leader-based one proceeding in rounds. Each round has a diﬀerent leader, which
is chosen among the ordered master nodes in a round-robin manner. In other words, the leader of
round r (0 (cid:54) r < EP OCH) is the master node whose index is (r mod VALIDATOR_SET_SIZE). The
role of a leader is to propose a new block and collect votes from the remaining nodes.

Data Structure The block data structure is similar to that in Ethereum, except that a parentQC
ﬁeld is added to the block header. Here QC stands for quorum certiﬁcate. It is created by the leader
of round-r for the block in r − 1 (the parent block) when at least tH = (cid:100)VALIDATOR_SET_SIZE × 2/3(cid:101)
master nodes have voted for this parent block, certifying that this parent block has been approved
by the super-majority of the nodes. A QC contains the parent block hash1, the round number, and
the metadata such as signatures of the vote messages. In case of no proposal and/or a timeout
in a round r − 1, nodes will send a "timeout" message for this round, and the leader of round r
will gather tH of them into a timeout certiﬁcate (TC), so that this round can be dropped from the

1This parent hash is the same as header.parentHash. But we do not override header.parentHash for the sake of

backwards-compatibility.

6

blockchain. We note that round number is not the same as block number - round number might be
skipped in the blockchain but block numbers are guaranteed to be consecutive. Figure 2 shows an
example of the main chain with QCs. Note that round r + 2 is skipped in the main chain due to
timeout. The speciﬁcation of data structures is provided in Algorithm 1.

Figure 2: XDC blockchain

Algorithm 1 Data Structures in the protocol

block

parentQC: QC for the parent block, stored in header
parent: short for parentQC.block
. . .: other ﬁelds are the same as XDPoS 1.0

QC

TC

round: the round of the voted block
block: the hash of the voted block
signatures: signatures of votes

round: the round of the timeout
signatures: signatures of timeout

Proposing and Voting Each round of HotStuﬀ follows the proposing-voting paradigm: In each
round r, the leader proposes a block and all master nodes vote. The leader of round r + 1 will collect
these votes and aggregate them into a QC if there are tH votes. The leader of round r + 1 then
proposes a child block of the block proposed in round r, and add the QC of the parent block to its
header. Master nodes should obey the following rules regarding QC and TC:

1. Leader proposal. When a master node is the leader of a round, it must propose a new block

where the parentQC ﬁeld carries the latest QC it has received.

2. The locking rule. When a master node receives a valid proposal of a block with a parentQC ,
it locks on the parentQC contained in the parent block of the proposal, i.e., it locks on the
grandparent block of the proposal. Once it locks on a block, it will ignore all the blocks that
are not the oﬀspring of this block, except under certain conditions (see the voting rule). The
locking rule contributes to the guarantee that the HotStuﬀ protocol has zero forking in ﬁnalized
blocks/blockchain.

7

Round rRound r+1Round r+3Round r+4ParenthashQCBlock headerBlock body3. The voting rule. When a master node receives a proposal of a block, it votes for it only if
it already locks on this block or this block’s ancestor. The only exception happens when the
round of this proposal block’s parent block is higher than the block it locks on.

4. The ﬁnalization rule. Deﬁne a 3-chain as a tuple of 3 blocks [b, b(cid:48), b(cid:48)(cid:48)] such that b = b(cid:48).parent
and b(cid:48) = b(cid:48)(cid:48).parent. When a node (either master or non-master node) receives a 3-chain of
blocks in three consecutive rounds and an extra QC whose parentHash is the hash of b(cid:48)(cid:48), it
ﬁnalizes the ﬁrst block b and all its ancestors.

5. Time out handling. If a master node does not receive any proposal for the current round
within a certain time period, it must send a timeout message for this round. Suﬃcient (2/3 of
the nodes) timeout messages can form a TC that helps master nodes to move on to the next
round.

The protocol is presented in Algorithm 2. Notice that we slightly abuse the notation by referring
qc.block to the actual block instead of the block hash when the context is clear. And we omit the
operations of verifying signatures of signed messages and verifying metadata in QC for simplicity.

2.2.2 Safety and Liveness Guarantee

Safety Safety means any two honest nodes should agree on (ﬁnalize) the same XDC Network
blockchain. And the HotStuﬀ protocol ensures safety in the following two ways: safety within a
round and safety across rounds.

The HotStuﬀ protocol requires that an honest master node only votes once in any round.
Therefore, when the Byzantine adversary does not corrupt more than 1/3 master nodes, there cannot
be two conﬂicting QCs within a round (a.k.a. no equivocation). This is because a valid QC requires
2/3 votes. The existence of two valid QC mean that more than 1/3 master nodes have double voted,
which is not possible since it requires some honest master nodes to double vote together with all the
1/3 adversary nodes.

When the adversary does not corrupt more than 1/3 master nodes, HotStuﬀ ensures safety across
rounds by the use of locks and the voting rule. If a QC for block b exists in round r, at least 2/3
master nodes lock on (r, b). In rounds higher than r, there could not be a QC on a conﬂicting block
whose ancestors don’t include b, since such a QC means more than 1/3 master nodes who lock on
(r, b) have voted for the conﬂicting block. This, in turn, means more than 1/3 master nodes violate
the voting rule, which contradicts with our assumption of 1/3 adversary.

Liveness Liveness means the blockchain makes progress and new transactions are included. When
the leader is honest, the adversary does not corrupt more than 1/3 master nodes, and the network
communication is synchronous, the HotStuﬀ protocol ensures that a valid block with transactions
can be generated. In addition, whenever this condition happens at four consecutive rounds (3-chain
and an extra QC), the ﬁrst two blocks are ﬁnalized.

2.2.3 Performance Guarantees

The HotStuﬀ protocol is optimistically responsive:
in optimistic condition (honest leader and
synchronous network), it only takes 3 block arrival time (BAT) to ﬁnalize a block and the transactions
it contains. In practice, due to our strict network requirement on master nodes eligibility, the
maximum network round-trip latency should be well below 2 seconds. Therefore, we can set BAT to
be 2 seconds. This means that, in optimistic conditions, the ﬁnalization latency is only 6 seconds.

8

5:

6:

7:

8:

9:

10:

11:

12:

13:

14:

15:

18:

19:

20:

21:

24:

25:

Algorithm 2 HotStuﬀ protocol
1: tH ← (cid:100)VALIDATOR_SET_SIZE × 2/3(cid:101)
2: highQC ← qcgenesis; lockQC ← qcgenesis

(cid:46) Optimistic path

3: for curRound ← 1, 2, . . . do
4:

as a leader

(cid:46) constant
(cid:46) the latest QC and lock variable

generate proposal block b∗ containing highQC and block content (transactions, etc.)
broadcast (cid:104)proposal, curRound, b∗(cid:105)

as a master node

on receiving (cid:104)proposal, curRound, b∗(cid:105) from a leader
if b∗ satisﬁes the voting rule then

send (cid:104)vote, curRound, H(b∗)(cid:105) to the next leader

highQC ← maxround{b∗.parentQC, highQC}
lockQC ← maxround{b∗.parentQC.block.parentQC, lockQC}

draw

(cid:46) H() means the hash digest
(cid:46) don’t update in case of a draw
(cid:46) don’t update in case of a

as the next leader

if collect (cid:104)vote, curRound, h∗(cid:105) from tH committee members for the same hash h∗ then

highQC ← QC generated from those vote messages

(cid:46) At any time in round curRound, as either master or non-master nodes

16: upon receiving qc ← QC in proposal message do
17:

b(cid:48)(cid:48) ← qc.block, b(cid:48) ← b(cid:48)(cid:48).parent, b ← b(cid:48).parent
if b, b(cid:48), b(cid:48)(cid:48) are in consecutive rounds then

ﬁnalize blocks through b, execute transactions in the ﬁnalized blocks

if qc.round > curRound then

curRound ← qc.round + 1 and go to the beginning of curRound

(cid:46) Non-optimistic path
22: upon a local timeout do
23:

stop voting for curRound
broadcast (cid:104)timeout, curRound(cid:105) along with highQC
if enter curRound due to a TC tc then

broadcast tc

26:
27: upon receiving tH timeout messages for the same round do
28:
29: upon seeing a TC tc do
30:

generate TC tc from them and broadcast tc

if tc.round > curRound then

31:

curRound ← tc.round + 1 and go to the beginning of curRound

In terms of overhead, the size of QC is only a few kilo bytes (for example, using the ETH 65-byte
signature, a QC from 2/3 master nodes of a 108-node committee is only 65 ∗ 2/3 ∗ 108 = 4.68kB).
This is much smaller than the common block size (e.g., ETH block size is about 60kB and is growing)
and thus is negligible. Moreover, HotStuﬀ’s communication complexity per round is linear to the
product of committee size and block size, which is order-optimal.

9

2.3 Reward Mechanism

One distinct feature of XDPoS 2.0 is that the blocks are ﬁnalized quickly, allowing the reward to be
determined and announced instantly after the block is ﬁnalized. Since the optimal block ﬁnalization
latency is 6 seconds, master nodes can expect to receive the reward in 6 seconds. Apart from the
reduced reward latency, the reward mechanism remains the same as in XDPoS 1.0.

3 What to Expect

3.1 Seamless Upgrade

Figure 3: XDPoS 2.0 upgrade plan

A seamless upgrade is our top priority. Before the upgrade, our QA and product team will
thoroughly test the new consensus engine for at least 3 months in lab Devnet and public testnet.
Once it is proved bulletproof, the team will release a series of prerequisite updates to integrate an
inactive version of XDPoS 2.0 into the system. Once a suﬃcient number of nodes have updated, we
will announce the block number after which XDPoS 2.0 will be activated and only blocks created
using XDPoS 2.0 will be accepted. This enables a seamless upgrade without any interruptions to
the liveness of the system.

The upgrade will be fully backwards-compatible in terms of data and APIs. After the upgrade,
XDC network will continue to extend the current public ledger from the 1.0 era. All the existing
wallet addresses, XDCs, stakes, transactions, and ledger states will be intact and can be used exactly
the same as before. The APIs to wallet, browser, exchanges, etc. will be fully backwards compatible
as well. Therefore, for XinFin customers, the upgrade will be transparent.

3.2 Military Grade Security and Performance

As we have proved in the last section, XinFin DPoS 2.0 guarantees absolute zero forking in the
ﬁnalized blockchain as long as the ratio of adversarial master nodes in each epoch does not exceed
1/3. No network communication issues could cause forking, either.

Performance wise, no resource-intensive mining will be involved at all. The block time will still
be 2 seconds and the throughput will remain the same. The average transaction conﬁrmation latency
will be 3 BATs, i.e., 6 seconds after the inclusion of the transaction in a block. Most importantly,
after the upgrade, conﬁrmation also means ﬁnalization. In other words, transactions can be ﬁnalized
in merely 6 seconds after its inclusion in a block.

3.3 New Feature: Forensic Monitoring

We are also excited to introduce a new feature of XinFin system enabled by the consensus engine
upgrade, namely forensic monitoring.

In the unlikely case where the ratio of Byzantine nodes exceeds 1/3, it is possible for these nodes
to collude and create a security violation — either a safety violation or a liveness violation. However,
they cannot achieve this without being held accountable and punished, thanks to the protocol design.

10

Safety Violation and Forensic Monitoring When the adversary corrupts more than 1/3 master
nodes in the BFT committee of an epoch, it is possible for the adversary to violate the safety and
jeopardize the consensus by creating forks - such as two ﬁnalized blockchains. However, certain
messages need to be signed and sent by these nodes to make this happen, which can be detected by
the system and served as irrefutable evidence of the misbehavior. Those messages are embedded
into the blockchain and can be obtained by querying master nodes for forked blockchains.

This property of XDPoS 2.0 enables our safety forensic feature, which can identify as many
Byzantine master nodes as possible while obtaining the proof from querying as few witnesses as
possible. The process of identifying culpable Byzantine master nodes involve performing appropriate
quorum intersections: since two quorums of tH ≈ VALIDATOR_SET_SIZE × 2/3 master nodes intersect
in at least VALIDATOR_SET_SIZE/3 master nodes, we are able to identify that many Byzantine master
nodes, which is the optimal number we can identify. As for the witnesses, two honest nodes having
access to one of the two conﬂicting blockchains, respectively, are suﬃcient for the proof. Since
non-master nodes also passively monitor the blockchain, they can serve as witnesses as well. This
also implies that as long as there are at least two honest nodes in the XDC network and the adversary
wants to create a safety violation for the two nodes, we can provide this forensic feature.

Once a master node is held culpable by the forensic protocol, the proof should be provided to a

XinFin governance-driven penalty mechanism (e.g. a slashing smart contract).

Liveness Violation and Forensic Monitoring In XDPoS 2.0, Byzantine master nodes can also
slow down the blockchain instead of creating forks. This behavior is called underperforming, and
can take three forms:

1. a master node fails to propose a block when it is the leader;

2. the leader proposes a block but does not use the latest QC as parentQC ;

3. a master node (non-leader) fails to propagate vote messages.

If there are more than 1/3 underperforming master nodes, the performance of XDPoS 2.0 could

be decreased and we call it a liveness violation.

However, unlike safety violation, there is no cryptographic evidence for liveness violation to hold
underperforming master nodes culpable. The handling of liveness violation is thus softer than safety
violation: Master nodes should broadcast a blame message if they believe another master node is
underperforming. Those messages are collected and reported to XinFin governance-driven penalty
mechanism for ﬁnal decision, such as excluding the suspect node from master node election for
certain number of epochs or raising its deposit requirement.

Implementation We plan to implement the corresponding forensic monitoring protocol as a
module on top of the HotStuﬀ protocol. The module consists of three components and this structure
is shown in Figure 4.

• Forensic Storage, a database at the XinFin nodes that stores forensic information.

It
maintains a map from the round number to quorum certiﬁcates, blocks, and their persistent
storage. In addition, it records the blame messages as well. It can be accessed by other
participants of the system, including other nodes (e.g., via RPC requests).

• Detector, which can be run by any participant of XinFin system. It sends requests periodically
to connected nodes and use the returned information for safety and liveness forensic monitoring.

11

Figure 4: Forensic module structure and information ﬂow.

If it ﬁnds enough information to penalize a master node, it will send the information to the
penalty mechanism.

• Penalty Mechanism, a XinFin governance-driven body that decides the penalty for safety
It implements both hard penalty (e.g. slashing Byzantine nodes’
and liveness violation.
deposits via a slashing smart contract or excluding them from master node selection) and soft
penalty (e.g. raising the deposit requirement).

Figure 5: Detector dashboard.

We will build a dashboard for the detectors to visualize the forensic information. Figure 5 is an
artistic impression, which displays information about each node’s blockchain, blame messages, as
well as safety and liveness forensic monitoring results.

12

XinFinNodeXinFinNodeForensicStorageXinFinClientXinFinFoundationDetectorDetectorDetectorPenaltyMechanismXinFinNodeForensicStorageSafety MonitorLiveness MonitorNode 1Node 2Node 3Analysis& ResultRound 12Round 13Round 14Round 150x274C320xD923370x7DDEF80x69E34ARound 12Round 13Round 14Round 150x274C320xD923370x7DDEF80x69E34ARound 12Round 13Round 14Round 150x274C320xD923370x7DDEF80x2AB78FRound 150x2AB78FRound 150x69E34AByzantine master nodes are Node 4,5,…Send to Penalty MechanismBlame Count: 14Blame Count: 0Blame Count: 0Underperforming master nodes are Node 1,…Send to Penalty Mechanism4 Blockchains with Judiciary: An Outlook to the Future

Over the past few years, speculation around crypto-currencies, their valuations and their utility has
created a natural on ramp for crypto into the collective consciousness. While sentiment surrounding
various blockchain ecosystems will remain volatile, there exists an ever-present gravitational pull
towards community-driven adoption, which must be acknowledged and accepted.

We are passing the point of diligent exploration and breaking through to stream entry, where
widescale adoption of these blockchains ecosystems will be carried down the convincing currents
of the mainstream. To prepare for a future of progressive adoption and a growing network eﬀect,
community-driven governance models must also emerge to complement expansion. This will ensure
the crypto industry remains backed by secure, accountable networks, for the integrity of the system
will depend on a balance of incentive-based and judiciary measures.

In the case of the XDC Network, which is positioned to disintermediate the trade ﬁnance industry,
there is a pressing desire to create a security framework that emulates the accountability structure
of correspondent banking systems.

Currently in trade ﬁnance, insuﬃcient levels of collateral and complex regulatory and supply
chain procedures create limitations for lenders. This increases the barrier to entry for institutions
seeking to explore trade ﬁnance options, but more speciﬁcally, makes it diﬃcult for MSMEs to
ﬁnd adequate funding. Due to the increasing costs of compliance and the volatility in the prices of
commodities, there is an emerging pressure on this industry.

For infrastructure development, especially in developing regions, projects need the enhanced
visibility and competitive rates provided by a decentralized blockchain system with enterprise
participants. Without these features, they will remain entrenched in the same systems that have
long stiﬂed their economic growth.

We will call this forensic-enabled system Blockchain 4.0, for it will meet the unique needs of
enterprises, by providing scalability, speed and systemic accountability. A necessary evolution to
blockchain technology, XDPoS 2.0 will kick down the door to further enterprise adoption, which will
enable competitive project funding and improved rates for SME participants. At this next stage,
wide-scale protocol adoption will stem from enterprise participation in a trusted system, where
institutional players maintain a level of control.

Conversely, the narrative propagating early Bitcoin adoption stemmed from libertarian ideals.
Bitcoin, though embraced as a technological marvel in terms of security and decentralization, lacks
the speed and scalability necessary to provide a suitable lending system for the trade ﬁnance industry.
If blockchain is believed to displace the incumbent ﬁnancial powers, and put power back into the
hands of the people, a noble endeavor, how likely is this marketing campaign to encourage enterprise
participation?

Under the current blockchain architecture, which lacks a judiciary system to ensure accountability,
enterprises are asked to trade a material advantage, in this case security and control within their
current system, in exchange for a solution deemed to be morally superior—an arrangement equated
to a reverse Faustian bargain, unlikely to be accepted.

There is little incentive for them to make such a trade, as enterprises have been rewarded for
being a trusted party in the current system and could be punished by joining systems without
accountable verifying parties, in this case validators.

Before institutions can make a substantial commitment to lend, borrow or transact on blockchain
systems, they will ask two questions: (1) What are the beneﬁts? (2) And how bad is the worst-case
scenario?

Alternative lenders, speciﬁcally originators in the trade ﬁnance sector, therefore, stand to beneﬁt
from an answer that not only highlights the beneﬁts, but also suggests in response to question 2:

13

the worst-case scenario is not that bad.

We, therefore, are challenged to create a psychological on-ramp for institutions, an on-ramp not
buoyed by libertarian ideals, but rather reinforced by a promise of security, transparency, reduced
counter-party risk, and cost-eﬃciency. Opportunely, these are all advantages inherent to the XDC
Network. Throughout its established history, the network has clearly demonstrated while transactions
are eﬃcient and aﬀordable, they are also immutable, secure, irreversible and permanently recorded.
In fact, the XDC Network is already designed to withstand beyond a 51% attack, raising the bar,
substantially, to the extent that it would require control of over 75% of network validators in order
to successfully perform such an attack. However, there are other challenges within a Delegated
Proof of Stake consensus mechanism that need to be addressed, such as ensuring security by being
Byzantium Fault Tolerant.

Therefore, the evolution comes with a revolutionary forensics system, which could be equated
to a “new sheriﬀ in town" in conjunction with an “independent" judiciary system implemented via
a forensics function, embedded into the network on a protocol level, which maintains an orderly
ecosystem through systemic checks and balances, has the potential to reign in the wild west of DeFi,
and reduce the time enterprises spend in the purgatory between indecision and adoption.

The new sheriﬀ and judiciary system would honor the moral ideals on which blockchain was
founded, however, also provide a suﬃcient level of accountability and attributability, reliably course-
correcting towards trustworthy cooperation. In the imminent future, DeFi arenas must remain
well-patrolled by the forensic system we have outlined in the preceding sections.

Accountability must cast a wide net and move away from centralized frameworks and control
centers. Instead, it must be issued on a protocol level, by a decentralized ecosystem with living,
breathing participants—a system in which all participants share equal, universal vulnerability.
Among the XDC Network’s greatest strengths will be this decentralized forensics system, which is
designed to issue accountability as unbiased as a hot stove to a child with a curious hand.

The forensics system is a ﬁrst step towards a vision where enterprises and retail users can have

as fear-free an experience as tapping a credit card while buying groceries.

A trade ﬁnance ecosystem with global reach, self-sustained record keeping, instant settlement and
forensic monitoring is the perfect system to kick start the domino eﬀect and force siloed monopolies
on lending to compete with each other to move towards a more accommodating future. In an
ecosystem that oﬀers forensic security and equips institutions with the ability to create funding
guarantees to back a trade, originators are also incentivized by reduced risk.

As blockchain networks of the future continue to rally enterprise interest and bring the promise
of streamlined ﬁnancing and supply chain processes, they also present the opportunity to identify
and ﬁll industry essential positions, reaching towards the libertarian ideals on which Bitcoin was
initially marketed. Though it seems counterintuitive, a system designed for reducing corporate and
institutional overhead, will likely enable workplaces to create retainable employment opportunities
that will prove to be more secure in the coming years.

With these consensus engine enhancements, namely the advent of XDPoS 2.0, participants are
ensured military grade security, augmented by forensic monitoring, which identiﬁes misbehaving
nodes. The network is backed by a perpetual witness, or all-seeing eye. In this system, bad actors
are identiﬁed and penalty mechanisms are swiftly implemented. The network showcases a last line
of defense, course-correcting mechanism to ensure cooperation and containment. Incorporating
Byzantium Fault Tolerance onto a DPoS with forensic capability, coupled with the ability to shutdown
malicious behavior establishes a new height for blockchains on which to aspire.

The industry is in the progressive adoption phase, and the XDC network is prepared to lead the
way with Blockchain 4.0, ensuring network transactions move like water through a stream, rather
than a torch through a relay race, where any one party can fail. Thus, the XDC Network, implements

14

this forensic feature to ensure seamless cooperation. XDPoS 2.0 inherently emulates the security of
traditional trade ﬁnance procedures, with added accountability, on a protocol level, which enables
the preservation of blockchain’s premier advantages: the eﬃciency and cost advantages of a near
instant settlement system; and it paves the way for enterprise adoption at scale.

5 Acknowledgement

The design of incorporating forensics in BFT protocols and the speciﬁc forensic protocol in the
context of the XDPoS protocol are inspired by pioneering research work in Hotstuﬀ [12] and “BFT
Protocol Forensics" [10].

References

[1] Vitalik Buterin and Virgil Griﬃth. Casper the friendly ﬁnality gadget. arXiv preprint

arXiv:1710.09437, 2017.

[2] Vitalik Buterin, Diego Hernandez, Thor Kamphefner, Khiem Pham, Zhi Qiao, Danny Ryan,
Juhyeok Sin, Ying Wang, and Yan X Zhang. Combining ghost and casper. arXiv preprint
arXiv:2003.03052, 2020.

[3] Tyler Crain, Christopher Natoli, and Vincent Gramoli. Red belly: a secure, fair and scalable

open blockchain, 2021.

[4] Phil Daian, Rafael Pass, and Elaine Shi. Snow white: Robustly reconﬁgurable consensus
and applications to provably secure proof of stake. In International Conference on Financial
Cryptography and Data Security, pages 23–41. Springer, 2019.

[5] Yossi Gilad, Rotem Hemo, Silvio Micali, Georgios Vlachos, and Nickolai Zeldovich. Algorand:
Scaling byzantine agreements for cryptocurrencies. In Proceedings of the 26th Symposium on
Operating Systems Principles, pages 51–68, 2017.

[6] Aggelos Kiayias, Alexander Russell, Bernardo David, and Roman Oliynykov. Ouroboros:
In Annual International Cryptology

A provably secure proof-of-stake blockchain protocol.
Conference, pages 357–388. Springer, 2017.

[7] Jae Kwon. Tendermint: Consensus without mining. Draft v. 0.6, fall, 1(11), 2014.

[8] Leslie Lamport, Robert Shostak, and Marshall Pease. The byzantine generals problem. In

Concurrency: the Works of Leslie Lamport, pages 203–226. 2019.

[9] Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash system. Technical report, Manubot,

2019.

[10] Peiyao Sheng, Gerui Wang, Kartik Nayak, Sreeram Kannan, and Pramod Viswanath. Bft
protocol forensics. ACM Conference on Computer and Communications Security, 2021.

[11] Gavin Wood et al. Ethereum: A secure decentralised generalised transaction ledger. Ethereum

project yellow paper, 151(2014):1–32, 2014.

[12] Maofan Yin, Dahlia Malkhi, Michael K Reiter, Guy Golan Gueta, and Ittai Abraham. Hotstuﬀ:
Bft consensus with linearity and responsiveness. In Proceedings of the 2019 ACM Symposium
on Principles of Distributed Computing, pages 347–356, 2019.

15

