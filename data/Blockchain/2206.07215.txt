SPENDER: A Platform for Secure and Privacy-Preserving
Decentralized P2P E-Commerce

Shuhao Zheng
McGill University

Junliang Luo
McGill University

Erqun Dong
McGill University

Can Chen
McGill University

Xue Liu
McGill University

2
2
0
2

n
u
J

5
1

]

R
C
.
s
c
[

1
v
5
1
2
7
0
.
6
0
2
2
:
v
i
X
r
a

Abstract—The blockchain technology empowers secure, trust-
less, and privacy-preserving trading with cryptocurrencies.
However, existing blockchain-based trading platforms only
support
trading cryptocurrencies with digital assets (e.g.,
NFTs). Although several payment service providers have
started to accept cryptocurrency as a payment method for
tangible goods (e.g., Visa, PayPal), customers still need to
trust and hand over their private information to centralized E-
commerce platforms (e.g., Amazon, eBay). To enable trustless
and privacy-preserving trading between cryptocurrencies and
real goods, we propose SPENDER, a smart-contract-based
platform for Secure and Privacy-PresErviNg Decentralized
P2P E-commeRce. The design of our platform enables various
advantageous features and brings unlimited future potential.
Moreover, our platform provides a complete paradigm for
designing real-world Web3 infrastructures on the blockchain,
which broadens the application scope and exploits the intrinsic
values of cryptocurrencies. The platform has been built and
tested on the Terra ecosystem, and we plan to open-source the
code later.

1. Introduction

The blockchain is naturally a secure environment for
anonymous and trustless transactions without involving any
centralized authorities [1]. All these transactions are made
through cryptocurrencies which serve as utility tokens. In
recent years, different blockchains have supported new fea-
tures and functionalities, especially smart contracts [2]. The
smart contracts bolster inﬁnite possibilities for decentralized
applications (DApps) built on-chain. Among the emerging
DApps, platforms that enable trading digital assets with
cryptocurrencies have been increasingly sparking interest
in Web3 communities [3]. For example, OpenSea1,
the
world’s largest marketplace for trading Non-Fungible To-
kens (NFTs), already has an NFT trading volume worth
more than $23 billion2. Other types of digital assets includ-
ing digital contents [4] (e.g., videos and music), data [5],
etc., are also being traded on blockchains.

Although digital asset trading with cryptocurrencies has
been thriving, trading tangible goods with cryptocurrencies,

i.e., decentralized E-commerce, has yet to be developed.
One big challenge in decentralized E-commerce is that no
practical paradigm could facilitate both on-chain commu-
nications and off-chain trading interactions. For one thing,
allowing off-chain interactions will inevitably compromise
the security and privacy already achieved on-chain. For
example, exchanging cryptocurrencies with tangible goods
in a completely ofﬂine peer-to-peer (P2P) manner suffers
from great security risks [6]. For another thing, the lack
of centralized surveillance and arbitration on-chain will
enhance the chances of malicious behaviors in the market
and entail ﬁnancial loss, which will hurt user experience.

To trade real goods with cryptocurrencies, one compro-
mising solution is to integrate cryptocurrency payment into
centralized E-commerce. Large payment services, like Visa
and PayPal, have started to allow users to exchange their
cryptocurrencies with ﬁats based on the instant exchange
rate when paying for tangible goods [7], [8]. Although
this did extend the application scope of cryptocurrencies
to some extent, the trustless and anonymous properties of
on-chain transactions are completely compromised. Users
need to trust and provide their private information to not
only centralized E-commerce platforms as before but also
these payment services. The risk of user data leakage is still
highly present, which can result in huge ﬁnancial loss [9].
To address the challenges mentioned above, we propose
SPENDER, not only a smart-contract-based platform that
enables Secure and Privacy-PresErviNg Decentralized P2P
E-commeRce, but also a complete paradigm for building
real-world Web3 infrastructures on the blockchain. On our
platform, users are not required to submit any personal
information but their encrypted addresses, which can only be
decrypted by shipping service providers. Moreover, we in-
troduce a bidding mechanism for shipping service providers
to bid for shipping fees and delivery time, which helps
build a fair, transparent, and efﬁcient shipping market. We
build the SPENDER platform on Terra3 which is one of
the top-3 decentralized stablecoin providers. Speciﬁcally,
full functionalities of the trading system are empowered
by our smart contract which we have deployed and fully
tested on the Terra testnet Bombay-12 [10]. Furthermore,
we develop the GUI for buyers, sellers, and shippers, as

1. https://opensea.io/
2. https://dappradar.com/multichain/marketplaces/opensea

3. https://www.terra.money/

 
 
 
 
 
 
(a) Buyer’s end

(b) Seller’s end

(c) Shipper’s end

Figure 1. Graphical User Interface (GUI) Design of SPENDER Platform.

shown in Fig. 1, and we use Terra.js4 to facilitate
the communication between Terra wallets and the deployed
smart contract.

In summary, the contribution of this paper is two-fold.
Firstly, we build SPENDER, a fully-functional platform
that supports trading real goods with cryptocurrencies in a
secure, trustless, and privacy-preserving manner. To the best
of our knowledge, we are the ﬁrst to develop a real decen-
tralized E-commerce product that runs on the blockchain.
Secondly, our platform provides a complete paradigm for
designing Web3 infrastructures that require both on-chain
communications and off-chain interactions, where any indi-
vidual that owns a digital wallet can participate. The design
concepts are fully reusable when building other DApps.

2. Background and Related Work

In this section, we ﬁrst present some background knowl-
edge on E-commerce, smart contract, and public-key cryp-
tography. Then, we analyze the pros and cons of existing
centralized E-commerce platforms. Finally, we introduce
some existing Web3 platforms that support trading digital
assets with cryptocurrencies and their limitations which
make up part of the motivation for our work.

2.1. E-commerce

E-commerce, deﬁned as any form of economic ac-
tivity via an electronic network, particularly the Internet,
has been considered to be essential for conducting busi-
ness since the 1990s [11]. E-commerce businesses in-
clude B2C (Business-to-Consumer) such as retail sales that
involve both physical goods and digital contents, B2B
(Business-to-Business) such as electronic data interchange,
C2C (Consumer-to-Consumer) such as auctions, and C2B
(Consumer-to-Business) such as content creation. Today,
big centralized E-commerce platforms such as Amazon and
Alibaba have been dominating the E-commerce market in
some countries and areas [12], [13]. The policy and code of
conduct from these platforms require the buyers and sellers
to trade in a fair and lawful way.

2.2. Smart Contract

A smart contract is a transparent computer program that
is automatically executed on the blockchain [2]. Each smart
contract is an on-chain account itself. The execution of a
smart contract is automatically triggered by the transactions
sent from other accounts, and the transactions must contain
certain formatted data.

Ethereum [14] has become the most popular smart con-
tract platform in terms of market cap and the available
DApps and activities [15]. Ethereum smart contracts are
written in high-level languages such as Solidity5 and Vyper6,
and then compiled into bytecodes to be executed on the
stack-based Ethereum Virtual Machine (EVM). Other smart
contract platforms include Solana [16], Polkadot [17], Hy-
perledger Fabric [18], etc.

2.3. Public-Key Cryptography

As a widely used cryptographic tool for asymmetric
encryption, public-key cryptography was ﬁrst proposed in
1976, known as Difﬁe–Hellman key exchange [19]. Later
on, more advanced public-key schemes were invented,
among which the most famous one is RSA [20]. Other
public-key encryption schemes include elliptic-curve cryp-
tography [21], [22], ECDSA [23], and post-quantum cryp-
tography [24].

Generally, any public-key encryption scheme can be de-
composed into two processes, namely encryption Enc(·, ·)
and decryption Dec(·, ·), with a pair of keys called public
key kpub and private key kpvt. A secret message m can
be ﬁrst encrypted with kpub as c = Enc(m, kpub) and
then decrypted with kpvt as m = Dec(c, kpvt) to create an
encrypted message that can only be decrypted by a speciﬁc
recipient. Alternatively, a secret message m can also be
ﬁrst encrypted with kpvt as c = Enc(m, kpvt) and then
decrypted with kpub as m = Dec(c, kpub) to create a non-
forgeable digital signature that can be veriﬁed by the public.

4. https://terra-money.github.io/terra.js/

5. https://soliditylang.org/
6. https://vyper.readthedocs.io/

Figure 2. SPENDER System Design.

2.4. Centralized E-commerce Platforms

Current E-commerce platforms such as Amazon and
eBay are based on centralized Web2 techniques. The advan-
tage of these platforms is that they can deliver user-speciﬁc
content by utilizing historical records, resolve disputes via
a central control, and easily handle legitimacy issues with
transparent user information. Yet, the interest of these plat-
forms is not always aligned with their users, which can
result in privacy leakage and price discrimination. More
speciﬁcally, one company can disclose their user information
to a third party for proﬁt or present different prices to
different users for the same goods by building user proﬁles
through data.

Moreover, the free shipping provided by Web2 platforms
such as Amazon and Alibaba are established on global labor
exploitation, i.e., the labor squeezing that is happening but
not clearly visible to the public [25]. These platforms pro-
vide the buyers with undeniably good and secure services.
However, in order to remain competitive, businesses utiliz-
ing these platforms lead small producers and employees of
shipping service providers to have few choices for their pay
and working environment [26]. For example, a case study
for the last mile delivery work in the greater Los Angeles
region shows that Amazon contributes to the deterioration
of wages and working conditions [27].

Emerging Web3-based decentralized applications, as the
pioneer of the future Internet, are raising attention by their
potential to resolve issues, including the aforementioned
ones of the Web2-based platforms. Treiblmaier et al. [28]
analyze the impacts that blockchain-based decentralized
techniques can have on E-commerce. Boersma et al. [29]
discuss the potential of using blockchain-based techniques
to address labor exploitation in a global context. The de-
centralized E-commerce platform that we propose explores
a blockchain-based system that unbinds the relationship be-
tween strong traditional E-commerce platforms and shipping
services. In our platform, shippers make bids to decide the

shipping price, which helps achieve a fairer labor reward for
the shippers.

2.5. Web3 Platforms for Trading Digital Assets

Recent work propose to leverage the blockchain mech-
anism [1] to enable trading digital assets with cryptocur-
rencies in a decentralized way. Li et al.
[4] develop
a blockchain-based decentralized content platform where
users can publish, ﬁnd, and pay for contents. This plat-
form can also solve the discovery problem of P2P [30]
by introducing a new naming system that allows users to
index of content metadata. Dixit et al.
access a global
[5] propose a decentralized marketplace to enable fair IoT
data trading and reliable data delivery. Besides these digital
contents, the NFTs (Non-Fungible Token) [3], a special
kind of cryptographic asset with unique identiﬁcations and
public ownership traceability, have also been thriving in
Web3 marketplaces. The NFT ecosystem is also built on
blockchains that serve as a public immutable transaction
ledger. Although these platforms can handle non-tangible
goods such as e-books and music, they cannot handle tan-
gible goods that cannot be transferred in the digital space,
such as equipment, electronic devices, etc. In this paper,
we introduce the shipper role into the decentralized trading
framework and build a smart-contract-based platform to
provide a complete system for trading tangible goods with
cryptocurrencies.

3. System Design

This

section elaborates on the system design of
SPENDER. An illustration is shown in Fig. 2. The stake-
holders involved in the system are the sellers, the buyers,
and the shippers. A whole process of an order contains four
major phases: the ﬁrst is called the Order Creation phase,
the second is the Bidding phase, the third is the Address
Uploading phase, and the fourth is the Shipping phase.

An extra Returning phase will be needed if the buyer is
unsatisﬁed with the delivered item, which will be elaborated
in Sec. 3.5.

3.1. Order Creation Phase

The ﬁrst phase, the order creation phase, starts with a
seller posting an item and an obscured physical address on
the smart contract. All buyers would be able to see the item
among all existing items by querying the smart contract. An
example for all visible items is shown in Fig. 1a. Suppose a
buyer takes an interest in an item. In that case, he can order it
by sending a buy request and depositing the amount of token
that equals the labeled price vitem to the smart contract, and
meanwhile uploading his obscured physical address. Then
the order is created and placed on the blockchain.

3.2. Bidding Phase

The second phase, the bidding phase, begins when the
order is placed. A placed order is visible to all the shippers
on the blockchain, who are not necessarily any postal service
provider but can be any individual or organization. From
the shippers’ side, the following information is available to
them: (1) the item and its details posted; (2) the obscured
physical addresses of both the seller and the buyer. Then,
based on the item information and the obscured addresses,
multiple shippers will decide if they would like to bid
for providing the shipping service. A shipper’s bid is the
shipping fee vship for the service of shipping the item. Along
with submitting the bid, the shipper also needs to deposit
vitem + vtime to the smart contract, which is the shipper’s
guarantee that he will provide delivery for the item worth
vitem within a promised delivery time. If the delivery is not
on time, the vtime part of the deposit will not be refunded
to the shipper but given to the buyer.

The buyer, upon receiving the bids, can then select a
shipper to undertake the shipping task, and deposit twice
the shipping fee, i.e., 2vship to the smart contract. In the
meantime, the unselected shippers are refunded with their
deposit vitem + vtime. For the selected shipper, his deposit
refund will be settled when the item is conﬁrmed to be
received in the shipping phase.

It is worth noting that with this bidding system, the
price of shipping would converge to its market value. If
the shippers bid too high for the shipping fees, they would
be less likely to be selected by the buyer. If the shippers bid
too low, they would not be able to proﬁt from providing the
shipping service.

ﬁrst posts his public key to the smart contract during the
bidding phase. The seller and the buyer then encrypt their
respective detailed addresses with the public key of the
shipper, and post their encrypted addresses on the smart
contract. The shipper reads the encrypted addresses from
the smart contract and decrypts them with his own private
key. The speciﬁc encryption scheme can be declared by
the shipper when uploading the public key, and both the
encryption and decryption processes are totally off-chain.

By doing so, the detailed addresses of the seller and the
buyer are not exposed to the public but only to the shipper.
This way, SPENDER preserves the address privacy of the
seller and the buyer to the maximum.

3.4. Shipping Phase

The fourth phase, the shipping phase, begins when the
shipper goes to the seller’s place and veriﬁes that the item
satisﬁes the description on the item post. If the shipper
cannot verify that the item is the same as that posted on the
smart contract, he can select to discard the order. Then the
smart contract will refund the deposit vitem to the buyer and
vitem + vtime to the shipper and close the order. Otherwise,
if veriﬁcation goes smoothly, the shipper and the seller will
both conﬁrm that the item is shipped on the smart contract.
Next, the shipper picks up the item, goes to the buyer’s
address, and hands the item to the buyer for conﬁrmation.
The shipper then conﬁrms that the item is delivered, and the
buyer, if satisﬁed with the item, conﬁrms that the item is
received on the smart contract. After all the conﬁrmations
are done, the smart contract will transfer the amount of
token that equals the item price, vitem to the seller, and
then transfer the shipping fee vship and also the deposit
vitem + vtime to the shipper. Next, the buyer can submit
ratings and reviews of the order. Finally, the order is closed
automatically by the smart contract.

Besides refunding all the shipper’s deposit, vitem+vtime,
when the item is successfully delivered in the promised
time, other situations can happen with the deposit. If the
item is broken or lost halfway, the shipper will take full
responsibility for it, which means the deposited vitem will
not be refunded to the shipper. In this case, the seller will
be transferred vitem from the shipper’s deposit, and the
buyer will also be refunded his deposit vitem + 2vship.
Additionally, if the shipper delivers the item beyond the
promised time, then only vitem will be refunded to the
shipper.

3.5. Returning Phase

3.3. Address Uploading Phase

The third phase, the address uploading phase, begins
when a shipper is selected by the buyer. The shipper will
now request the detailed addresses of the seller and the
buyer. To achieve this, SPENDER employs the public-key
cryptography schemes introduced in Sec. 2.3. The shipper

It is not always the case that the order is carried out as
described above. Sometimes, the buyer is not satisﬁed with
the item. In this case, the buyer will need to submit a return
request on the smart contract, and the shipper will return
the item back to the seller. It is worth noting that 2vship
is not refunded to the buyer, which is a design to defend
against malicious buyers and will be further explained in

Section 5.1. Instead, the smart contract will give two times
the shipping fee, 2vship, to the shipper.

TABLE 1. SPENDER BACK-END MESSAGES. “SC” STANDS FOR
SMART CONTRACT.

Message Name

Type

Permission

Funds Transfer

Post

Buy

ResetPrice

BidOrder

Execute

Seller

N/A

Execute

Buyer

Buyer

vitem−−−−→ SC

Execute

Seller

N/A

Execute

Shipper

Shipper

vitem−−−−−→
+vtime

SC

ChooseBid

Execute

Buyer

Buyer
SC

2vship
−−−−−→ SC
vitem−−−−−→
+vtime

Other shippers

UploadAddress

Execute

Buyer&
Seller

N/A

DiscardOrder

Execute

Shipper

Conﬁrm

Execute

Everyone

SC

SC

2vship
−−−−−→
+vitem
vitem−−−−−→
+vtime

Buyer

Shipper

Shipper

SC

SC

After buyer conﬁrms
vship−−−−→ Buyer
vship−−−−−→
+vitem
vitem−−−−→ Seller

SC
If time exceeds:
SC
Otherwise:
SC

vtime−−−−→ Buyer

vtime−−−−→ Shipper
2vship
−−−−−→
Buyer
+vitem
vtime−−−−→ Shipper
vitem−−−−→ Seller

ItemLossBroken

Execute

Buyer&
Shipper

SC

SC
SC

ItemUnsatisﬁed

Execute

Buyer

N/A

ReturnConﬁrm

Execute

Seller

SC

SC

vitem−−−−→ Buyer
2vship
−−−−−→ Shipper

SubmitReview

Execute

Buyer

GetGoods

GetOrders

GetOrderDetail

GetAddresses

GetBalance

Query

Query

Query

Query

Query

Everyone

Everyone

Everyone

Everyone

Everyone

N/A

N/A

N/A

N/A

N/A

N/A

4. Implementation

This section elaborates on the details of building the
SPENDER platform, including both the back-end and the
front-end parts.

4.1. Back-end

Back-end design consists of all the logistics in smart
contract interactions. As a smart contract is generally a
there are mainly two types of
message-passing system,

messages to be implemented, namely execution messages
and query messages. Execution messages are messages that
will change the internal states of a smart contract and will be
charged for transaction fees as rewards paid to blockchain
miners. Query messages, on the other hand, are messages
to get the information about the internal states of a smart
contract and are free of charge. TABLE 1 lists all
the
messages implemented in our smart contract, accompanied
by the permissions and funds transferred during execution.
[31]
[32], and
with CosmWasm Software Development Kit
then compiled into WebAssembly [33]
code using
rust-optimizer [34]. Afterwards, the WebAssembly
code is deployed directly onto Terra testnet Bombay-12
[10] for further testing.

is ﬁrst written in Rust

smart contract

Our

4.2. Front-end

As shown in Fig. 1, the front-end of SPENDER consists
of three speciﬁc Graphical User Interfaces (GUI) for sell-
ers, buyers, and shippers, respectively. The GUI is written
in JavaScript. To connect the GUI to Terra’s wallet and
smart contract on the testnet, we adopt the ofﬁcial toolkit
Terra.js [35] which reads and converts messages to
JSON format. To avoid copyright issues, we use the stock
images collected from Shutterstock7 with some dummy
texts.

5. Advantageous Features

In this section, we discuss seven advantageous features
of SPENDER, the ﬁrst decentralized P2P E-commerce plat-
form in the world.

5.1. Malicious Behaviors Resistance

SPENDER has inborn robustness towards some kinds
of malicious behaviors. Besides, SPENDER guarantees that
the other malicious behaviors which SPENDER cannot per-
fectly defend against have little possibility of success.

5.1.1. Malicious seller alone. If a seller sells fake or
broken items deliberately to trick the buyer’s money, the
shipper can simply discard the order upon checking the
item at the seller’s. This way, our system can defend against
the malicious behavior of sellers towards buyers. Plus, our
system can also defend against malicious behavior of sellers
toward shippers, i.e., posting inaccurate item information
and making a shipper travel in vain. For one thing, a seller
cannot target a particular shipper because the shippers are
chosen by the buyers. For another, the seller will have to
pay the gas fee to post the item, which can be prohibitive
for such a prank without any proﬁts.

7. https://www.shutterstock.com

5.1.2. Malicious buyer alone. A buyer can attack a shipper
by deliberately returning the item. However, by our design,
the deposited 2vship will not be refunded to the buyer if the
item is returned. Therefore, buyers have little motivation to
conduct such behavior.

5.1.3. Malicious shipper alone. Our system can also dis-
courage malicious shippers. For SPENDER to function well,
it is desired that the shippers carry out their duty, i.e., they
need to verify the item at the sellers and deliver the item
without breaking or losing it. Therefore, in SPENDER, the
shippers can only earn proﬁts by perfect delivery, which will
not be achieved if an order fails. Plus, the rating system is
also important for encouraging the shippers to carry out their
duty.

5.1.4. Malicious buyer and shipper. Our system can pre-
vent a buyer and a shipper from being complicit in attacking
a seller because they lack incentives. Suppose the buyer
selects the shipper who is complicit. Even if the buyer starts
a malicious return, or the shipper makes damage to the item
intentionally, the shipper and the buyer will have no beneﬁts.
This is because the shipping fee and return fee 2vship are
from the buyer, as shown in Fig. 2, and the shipper has to
pay for the compensation.

5.1.5. Malicious seller and shipper. This situation would
have the potential to cause a shipping fee scam targeting
a buyer if a seller and a shipper are complicit. The seller
and shipper have no motivation to damage the item as the
compensation is paid by the shipper. A possible fraud is
the malicious behavior that forces the buyer to return the
item, considering that the buyer shall provide the return fee.
The seller could intentionally put a defective or wrong item
into the package, and the shipper skips the veriﬁcation when
picking up the item. This malicious behavior will make the
buyer have to make a return so that the shipper will take
the double shipping fee from the buyer. However, this can
happen only if the buyer picks up the malicious shipper from
a list of shippers. Though it is not possible to completely
avoid the situation if the shipper makes a regular bid, still
an abnormally low bid should deﬁnitely alarm the buyer.

5.1.6. Malicious buyer and seller. With this being the case,
a malicious buyer and seller could make some phishing
orders to obtain the compensation by fraud, considering
that
the compensation is paid by the shipper. However,
there is a chance that the shippers can protect themselves
from phishing orders under the bidding system. Suppose
a seller posts a random item selling for a ridiculous price
on purpose, and a buyer who is complicit buys the item to
make an order. Theoretically, if the item arrives damaged,
the shipping service provider has to pay the compensation.
However, shippers can choose not to make a bid and thus
refuse to provide the service if they see an abnormal price.
Moreover, the review system also helps shippers to detect
phishing orders.

5.1.7. Malicious buyer, seller, and shipper. Under the
Web2 environment, a group of malicious buyers, sellers, and
shippers may engage in arbitrage to obtain money from a
Web2 platform. For example, a fraud group can do a fake
business to make a proﬁt by taking advantage of the seller
support promotion from a platform [36]. This problem has
not been evident for Web3 yet but merits further consid-
eration. Another challenge is E-commerce brushing [37],
also known as click farm, which targets to cheat the review
system. A seller may create fake orders to be completed
with the help of some fake buyers and shippers to boost the
ratings. Nevertheless, E-commerce brushing on SPENDER
comes at a cost. A gas fee is charged for any transaction, and
all the details of the fake orders are publicly visible, which
creates the possibility of distinguishing the fake orders for
the users. As the review system remains to be an essential
part of Web3, it is worth proposing new methods for solving
the problem in the future.

5.2. Permissionlessness and Compatibility

SPENDER is designed to allow any individual to partic-
ipate and resist censorship, but this doesn’t mean SPENDER
will invade and threaten the centralized E-commerce mar-
ket. Instead, SPENDER provides perfect compatibility to
traditional E-commerce platforms and shipping service
providers, allowing them to participate as single sellers
and single shippers. In this way, SPENDER becomes an
additional choice for the shareholders in the traditional E-
commerce market. Meanwhile, SPENDER allows individual
sellers and shipping service providers to enter the market
and contribute to market efﬁciency.

5.3. Minimum Privacy Leakage

One of the minimum requirements for a complete de-
livery is that the shipper should know the addresses of
both the buyer and the seller. In SPENDER, the public-
key cryptography guarantees that only the shipper knows
the exact addresses of the buyer and the seller. Except for
the addresses, no private information is required. Moreover,
the randomness of shipper bidding ensures the sparsity of
private information distribution among shippers. Therefore,
we can claim that SPENDER achieves the minimum privacy
leakage in a decentralized E-commerce system.

5.4. Financial Security

Centralized E-commerce platforms usually function as
cash-keepers before orders are ﬁnished. Money paid by
buyers is locked in these platforms for ﬁnancial security.
Even if these cash-keepers are assumed to be one-hundred
percent trustful and safe, they can be completely replaced by
a smart contract on the blockchain. A smart contract is itself
an on-chain account that can keep cryptocurrencies. The
money kept in the smart contract cannot be moved or used
by any individual except the built-in automatic program,

which is totally transparent. As long as the smart contract
is well-written and the blockchain itself is not attacked, the
locked cryptocurrencies are safe. Terra adopts the robust
programming language Rust as the backbone to resolve the
vulnerabilities in smart contracts written in Solidity [38]. At
the same time, Terra runs a Proof-of-Stake (PoS) consensus
protocol to enhance the security of its blockchain [39].

5.5. Price Stability

One outstanding problem in cryptocurrency trading is
the volatility of the price. No seller is willing to see the
price of their goods varies with the cryptocurrency market,
which is out of their control. This is why we choose to build
SPENDER on the Terra ecosystem.

Terra is the world’s top-3 provider of stablecoins, i.e.,
cryptocurrencies whose price is always bound with ﬁats,
unlike BTC and ETH whose price ﬂuctuates a lot. For
example, one TerraUSD (a.k.a. UST) always has the same
value as one USD. Moreover, Terra also provides many other
stablecoins that are bound with other ﬁats in the world,
such as TerraKRW (a.k.a. KRT), which has a value equal
to KRW. This stablecoin ecosystem guarantees the price
stability of SPENDER and will enable international trading
if SPENDER is integrated with Decentralized Exchanges
(DEXs) for currency conversion in the future.

5.6. Transparent Review System

Centralized E-commerce platforms

commonly
equipped with review systems, in which buyers can write
reviews and rate their shopping experience for their orders.
A good review system can help buyers discriminate good
sellers from bad sellers and improve buyers’ shopping ex-
perience.

are

However, there is no guarantee that the statistics of the
review systems in centralized E-commerce are real because
the systems are not transparent. By contrast, in SPENDER,
since all the order details are recorded on the blockchain,
it is very easy to compute the ratings and other statistics
for each participant in a transparent manner. Two examples
are the ratio of perfect delivery for shippers and the ratio of
satisﬁed goods for sellers. In this way, the review system in
SPENDER also encourages sellers and shippers to stay at the
same wallet address and accumulate good reviews, which
achieves the same effect as ﬂagship stores and shipping
services in centralized E-commerce.

5.7. Illegal Goods Prevention

Legitimacy has always been a controversial topic in
decentralized systems. One speciﬁc concern is that illegal
transactions may go wild without centralized regulations.
However, SPENDER is naturally designed to avoid selling
illegal goods. Speciﬁcally, if sellers who are selling illegal
goods are spotted,
law enforcement agencies can easily
conduct entrapment to ﬁnd and arrest the illegal sellers by

acting as the buyer and the shipper simultaneously. This is
made possible by the bidding mechanism in SPENDER, in
which buyers can select speciﬁc shippers, and shippers can
know the addresses of sellers.

6. Future Potential

In this section, we list three promising future directions

in improving the SPENDER platform.

6.1. Decentralized Arbitration via DAO

Disputes can happen wherever the physical world is
involved. Same as in traditional E-commerce, real-world
consensus problems also exist in SPENDER. For example,
shippers may deny they have broken the items and refuse to
compensate. Sellers may sell fake goods and insist that they
are genuine. In such scenarios, arbitration is needed to han-
dle the disputes. However, without centralized authorities,
arbitration can only be executed in a decentralized way.

Decentralized Autonomous Organizations (DAO) are or-
ganizations ruled by automatic and transparent smart con-
tracts without any central authorities [40]. Therefore, DAOs
are perfect for decentralized governance, and arbitration
[41]. When a dispute happens, each involved party can
upload related proofs onto the blockchain to ask for votes via
a DAO. The ﬁnal decision will be achieved democratically
and executed automatically by the smart contract.

6.2. Access Control

In the current design of SPENDER, every detail of the
orders is transparent. However, as also mentioned in [28],
legislation in most countries may regulate the accessibility
and usage of users’ sensitive data. Therefore, it is necessary
to have an access control system in SPENDER to man-
age the access permissions. Several pioneering work have
proposed solutions to on-chain access control using smart
contracts [42], [43]. We plan to design an access control
system based on these existing solutions in the future.

6.3. On-chain Recommendation Services

Personalized recommendation services have become an
essential part of traditional E-commerce platforms, aiming
to alleviate information overload and cater to users’ different
demands. While there are numerous studies and applica-
tions on recommender systems in Web2 E-commerce plat-
forms [44], [45], [46], [47], [48], [49], there are insufﬁcient
studies on deploying recommendation services on Web3
decentralized platforms. Therefore, we also plan to establish
a recommender system for SPENDER in the future.

We intend to develop our recommender system based on
either the purchase records of each wallet or the purchase
records of the wallet groups that share similar transaction
behavior. Additionally, we would also like to allow third-
party recommendation services on-chain. As a result, con-
sumers will have the option of selecting the recommendation

these third-party
service provider they prefer. Moreover,
recommendation service providers can charge fees for better
recommendation results, forming a competitive yet efﬁcient
recommendation market.

7. Conclusion

In this paper, we present SPENDER, a decentralized
P2P E-commerce platform that simultaneously preserves
privacy, transparency, and information security. Specially,
we adopt public-key cryptography to encrypt users’ physical
addresses to prevent the exposure of the shared addresses to
unrelated users, and we utilize the smart-contract-based de-
posit mechanism to ensure ﬁnancial security. Moreover, we
introduce a shipping fee bidding mechanism to attain a fair
shipping market and encourage shippers to provide better
services. We have built SPENDER using Terra CosmWasm
architecture and have fully tested its functionalities on the
Terra testnet. SPENDER shows great advantage in solving
the existing privacy-related issues in traditional E-commerce
platforms and provides a practical paradigm for designing
Web3 applications that require both on-chain communica-
tions and off-chain interactions.

References

[1]

S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” De-
centralized Business Review, p. 21260, 2008.

[2] A. Savelyev, “Contract

law 2.0:‘smart’contracts as the beginning
of the end of classic contract law,” Information & communications
technology law, vol. 26, no. 2, pp. 116–134, 2017.

[3] Q. Wang, R. Li, Q. Wang, and S. Chen, “Non-fungible token (nft):
Overview, evaluation, opportunities and challenges,” arXiv preprint
arXiv:2105.07447, 2021.

[4]

J. Li, A. Grintsvayg, J. Kauffman, and C. Fleming, “Lbry: A
blockchain-based decentralized digital content marketplace,” in 2020
IEEE International Conference on Decentralized Applications and
Infrastructures (DAPPS).

IEEE, 2020, pp. 42–51.

[5] A. Dixit, A. Singh, Y. Rahulamathavan, and M. Rajarajan, “Fast data:
A fair, secure and trusted decentralized iiot data marketplace enabled
by blockchain,” IEEE Internet of Things Journal, 2021.

[6] D. Megan, “Scammers Stole $14 Billion in Crypto in 2021. Here’s

How Investors Can Protect Their Coins,” Time, Nov. 2021.

[7] Z. H. Noor, “Exclusive: Visa moves to allow payment settlements

using cryptocurrency,” Reuters, Mar. 2021.

[8] A. Irrera, “EXCLUSIVE PayPal launches crypto checkout service,”

Reuters, Mar. 2021.

[9] M. Tripathi and A. Mukhopadhyay, “Financial Loss due to a Data
Privacy Breach: An Empirical Analysis,” Journal of Organizational
Computing and Electronic Commerce, vol. 30, pp. 1–20, Sep. 2020.

[14] V. Buterin et al., “A next-generation smart contract and decentralized

application platform,” Whitepaper, vol. 3, no. 37, 2014.

[15] F. Sch¨ar, “Decentralized ﬁnance: On blockchain-and smart contract-

based ﬁnancial markets,” FRB of St. Louis Review, 2021.

[16] A. Yakovenko, “Solana: A new architecture for a high performance

blockchain v0. 8.13,” Whitepaper, 2018.

[17] G. Wood, “Polkadot: Vision for a heterogeneous multi-chain frame-

work,” Whitepaper, vol. 21, pp. 2327–4662, 2016.

[18] E. Androulaki, A. Barger, V. Bortnikov, C. Cachin, K. Christidis,
A. De Caro, D. Enyeart, C. Ferris, G. Laventman, Y. Manevich et al.,
“Hyperledger fabric: a distributed operating system for permissioned
blockchains,” in Proceedings of the thirteenth EuroSys conference,
2018, pp. 1–15.

[19] W. Difﬁe and M. Hellman, “New directions in cryptography,” IEEE
Transactions on Information Theory, vol. 22, no. 6, pp. 644–654,
Nov. 1976.

[20] R. L. Rivest, A. Shamir, and L. Adleman, “A method for obtaining
digital signatures and public-key cryptosystems,” Communications of
the ACM, vol. 21, no. 2, pp. 120–126, 1978.

[21] V. S. Miller, “Use of Elliptic Curves in Cryptography,” in Advances
in Cryptology — CRYPTO ’85 Proceedings, ser. Lecture Notes in
Computer Science, H. C. Williams, Ed., 1986, pp. 417–426.

[22] N. Koblitz, “Elliptic curve cryptosystems,” Mathematics of Compu-

tation, vol. 48, no. 177, pp. 203–209, 1987.

[23] D. Johnson, A. Menezes, and S. Vanstone, “The Elliptic Curve Digital
Signature Algorithm (ECDSA),” International Journal of Information
Security, vol. 1, no. 1, pp. 36–63, Aug. 2001.

[24] L. Chen, L. Chen, S. Jordan, Y.-K. Liu, D. Moody, R. Peralta,
R. Perlner, and D. Smith-Tone, Report on post-quantum cryptography.
US Department of Commerce, National Institute of Standards and
Technology, 2016, vol. 12.

[25] J. Sprague and S. Sathi, Transnational Amazon: Labor Exploitation
and the Rise of E-Commerce in South Asia. Pluto Press, 2020, pp.
50–66.

[26] J. Li, “Open sesame? the paradoxical development of c2c e-commerce
in china,” Review of Radical Political Economics, vol. 53, no. 2, pp.
266–280, 2021.

[27] J. Alimahomed-Wilson, The Amazoniﬁcation of Logistics: E-
Pluto Press,

Commerce, Labor, and Exploitation in the Last Mile.
2020, pp. 69–84.

[28] H. Treiblmaier and C. Sillaber, “The impact of blockchain on e-
commerce: A framework for salient research topics,” Electronic Com-
merce Research and Applications, vol. 48, p. 101054, 2021.

[29] M. Boersma and J. Nolan, “Can blockchain help resolve modern

slavery in supply chains?” AIB Insights, 2020.

[30] A. Chokkalingam and F. Riyaz, “Bittorrent protocol speciﬁcation v

1.0,” CSI 5321, 2004.

[31] N. D. Matsakis and F. S. Klock II, “The rust language,” in ACM
SIGAda Ada Letters, vol. 34, no. 3. ACM, 2014, pp. 103–104.

[32] “CosmWasm,” CosmWasm, Apr. 2022. [Online]. Available: https:

//github.com/CosmWasm/cosmwasm

[10] “Terra Testnets,” Terra, Apr. 2022.
//github.com/terra-money/testnet

[Online]. Available: https:

[33] A. Rossberg, “WebAssembly Core Speciﬁcation,” Dec. 2019.

[Online]. Available: https://www.w3.org/TR/wasm-core-1/

[11] R. T. Wigand, “Electronic commerce: Deﬁnition, theory, and context,”

The information society, vol. 13, no. 1, pp. 1–16, 1997.

[34] “CosmWasm Optimizing Compiler,” CosmWasm, Apr. 2022.
[Online]. Available: https://github.com/cosmwasm/rust-optimizer

[12] J. K. Winn, “The secession of the successful: The rise of amazon as
private global consumer protection regulator,” Ariz. L. Rev., vol. 58,
p. i, 2016.

[13] Y. D. Wei, J. Lin, and L. Zhang, “E-commerce, taobao villages and
regional development in china,” Geographical Review, vol. 110, no. 3,
pp. 380–405, 2020.

[35] “Terra-money/terra.js,” Terra, Apr. 2022. [Online]. Available: https:

//github.com/terra-money/terra.js

[36] H. Xu, D. Liu, H. Wang, and A. Stavrou, “E-commerce reputation
manipulation: The emergence of reputation-escalation-as-a-service,”
in Proceedings of the 24th International Conference on World Wide
Web, 2015, pp. 1296–1306.

[37] C. Jin, L. Yang, and K. Hosanagar, “To brush or not to brush: Product
rankings, customer search and fake orders,” Customer Search and
Fake Orders (September 30, 2019) .NET Institute Working Paper, no.
19-02, 2019.

[38] R. M. Parizi, A. Dehghantanha, K.-K. R. Choo, and A. Singh, “Em-
pirical vulnerability analysis of automated smart contracts security
testing on blockchains,” in Proceedings of the 28th Annual Interna-
tional Conference on Computer Science and Software Engineering,
ser. CASCON ’18, Oct. 2018, pp. 103–113.

[39] E. Kereiakes, M. D. M. Do Kwon, and N. Platias, “Terra money:

Stability and adoption,” Whitepaper, 2019.

[40] R. Beck, C. M¨uller-Bloch, and J. King, “Governance in the
Blockchain Economy: A Framework and Research Agenda,” Journal
of the Association for Information Systems, vol. 19, no. 10, Oct. 2018.

[41] N. Diallo, W. Shi, L. Xu, Z. Gao, L. Chen, Y. Lu, N. Shah, L. Car-
ranco, T.-C. Le, A. B. Surez, and G. Turner, “eGov-DAO: A Bet-
ter Government using Blockchain based Decentralized Autonomous
Organization,” in 2018 International Conference on eDemocracy
eGovernment (ICEDEG), Apr. 2018, pp. 166–171.

[42] M. Steichen, B. Fiz, R. Norvill, W. Shbair, and R. State, “Blockchain-
Based, Decentralized Access Control for IPFS,” in 2018 IEEE In-
ternational Conference on Internet of Things (iThings) and IEEE
Green Computing and Communications (GreenCom) and IEEE Cyber,
Physical and Social Computing (CPSCom) and IEEE Smart Data
(SmartData), Jul. 2018, pp. 1499–1506.

[43] H. Guo, E. Meamari, and C.-C. Shen, “Multi-Authority Attribute-
Based Access Control with Smart Contract,” in Proceedings of the
2019 International Conference on Blockchain Technology, ser. ICBCT
2019, Mar. 2019, pp. 6–11.

[44] H.-T. Cheng, L. Koc, J. Harmsen, T. Shaked, T. Chandra, H. Aradhye,
G. Anderson, G. Corrado, W. Chai, M. Ispir, R. Anil, Z. Haque,
L. Hong, V. Jain, X. Liu, and H. Shah, “Wide &amp; Deep Learning
for Recommender Systems,” in Proceedings of the 1st Workshop on
Deep Learning for Recommender Systems, ser. DLRS 2016, Sep.
2016, pp. 7–10.

[45] P. Covington, J. Adams, and E. Sargin, “Deep neural networks for
youtube recommendations,” in RecSys. ACM, 2016, pp. 191–198.

[46] Y. Guo, M. Wang, and X. Li, “Application of an improved apriori al-
gorithm in a mobile e-commerce recommendation system,” Industrial
Management & Data Systems, vol. 117, pp. 287–303, 2017.

[47] H. Hwangbo, Y. S. Kim, and K. J. Cha, “Recommendation system
development for fashion retail e-commerce,” Electronic Commerce
Research and Applications, vol. 28, pp. 94–101, 2018.

[48] H. Wu, C. Ma, B. Mitra, F. Diaz, and X. Liu, “Multi-fr: A multi-
objective optimization method for achieving two-sided fairness in e-
commerce recommendation,” CoRR, vol. abs/2105.02951, 2021.

[49] C. Ma, L. Ma, Y. Zhang, H. Wu, X. Liu, and M. Coates, “Knowledge-
enhanced top-k recommendation in poincar´e ball,” in AAAI. AAAI
Press, 2021, pp. 4285–4293.

