Consensusless Blockchain: A Promising
High-Performance Blockchain without Consensus

Qing Wang, Jian Zheng, Huawei Huang, Jianru Lin
Email: wangq79@mail.sysu.edu.cn, zhengj79@mail2.sysu.edu.cn
Sun Yat-Sen University, China.

1

2
2
0
2

p
e
S
8
2

]
I

N
.
s
c
[

4
v
1
8
3
2
1
.
8
0
2
2
:
v
i
X
r
a

Abstract

Consensus is unnecessary when the truth is available. In this paper, we present a new perspective of rebuilding
the blockchain without consensus. When the consensus phase is eliminated from a blockchain, transactions could be
canonized quickly using a well-deﬁned universal rule without consuming hashing power. Thus, the transactions per
second (TPS) metric of such the consensusless blockchain can be largely boosted. Although consensus blockchain is
promising, several technical challenges are also crucial. For example, double-spending attacks and frequent forking
events must be prevented, the credit of block’s minting must be carefully deﬁned, and etc. To address those technical
challenges, we propose several solutions for our consensusless blockchain (CB), including a naive monotonic scoring
mechanism to calculate the ranking of each block in the chain, and a two-stage witness mechanism to add new
blocks. The proposed CB chain is promising to offer a simpliﬁed and equipment-cheap infrastructure for rich
real-world decentralized applications.

I. INTRODUCTION
Although Bitcoin’s proof-of-work (PoW) [1] secures the transactions stored in historical blocks, it also
induces extensive criticisms. The most representative criticisms include its low TPS and the extraordinary
amount of energy consumption spending on mining new blocks. The bitcoin’s low TPS is induced by
PoW consensus, in which miners compete with each other to win the opportunity of minting a new block
in each round. The length expectation of each round of consensus is ﬁxed to around 10 minutes. Even
though such difﬁculty-deﬁned mining cycle prevents frequent forking events, it also decides bitcoin’s
TPS as low as 7-10. The other shortcoming of Bitcoin’s blockchain is that the PoW consensus has kept
encouraging miners to upgrade their hashing capability. From CPU to ASIC-assisted mining, enterprises
have developed various off-the-shelf mining hardware. For example, Nvidia’s GPU cards have offered
full power of crypto mining. The worldwide large-scale crypto mining consumes a countless amount of
energy power.

Besides the PoW-based consensus protocols and its variants [2], other popular consensus protocols have
been proposed such as Proof of Stake (PoS) [3]. Although PoS or Delegated PoS (DPoS) mechanisms
are believed as environmental friendly, some argue that people who pledge large amounts of coins may
have a huge inﬂuence on the consensus process, and thus affecting the decentralization of a blockchain.
Given the criticisms aforementioned, various advanced consensus mechanisms [3]–[8] have been pro-
posed. In those consensus protocols, either transaction throughput is improved or transaction latency
is reduced. However, those studies are basically following the direction of Proof-based consensus like
Bitcoin’s PoW. In contrast, we argue that consensus is unnecessary if we know the truth of how to resolve
conﬂicts about all transactions and blocks. We can setup such a truth or a universal rule in a consensusless
blockchain’s protocol, and then the double spending problem can be tackled with a message delivery-
guaranteed method instead of a complex Proof-based consensus protocol. That means if we design a
blockchain in the consensusless way, a bunch of Proof-based consensus protocols such as PoW and its
variants [2], [4], [5], Proof of Stake [3], [8], [9], and byzantine consensus [6], can be dropped. Previous
research has demonstrated the theoretical possibility of consensusless blockchains [10].

Without consensus, TPS can be largely boosted. This is because every block node can propose new
blocks frequently in a parallel way. Those new blocks are added to the chain and do not have to experience
a long consensus process.

 
 
 
 
 
 
2

Although Solana [11] already provides a good TPS as high as 10 thousands, it still exploits consensus
protocols such as proof-of-history and DPoS. Thus, the consensus of Solana is computing-intensive.
Recently, the crypto participants are talking about the frequent outages of Solana. For example, the most
recent outage of Solana was occurred on May 1st. In this outage, the Solana’s blockchain was down and
last for 7 hours due to the decentralized denial-of-service attacks from NFT mint bots. When Solana’s
blockchain recovered, the Solana team decided to reject any NFT minting bots. Many cryptocurrency
players expressed their worries about this blasphemous censorship, which severely damages the decen-
tralization of crypto and blockchain world.

In contrast, our proposed CB chain uses simpler and cheaper solutions than the existing blockchains.
Furthermore, our CB chain does not have a centralized censorship that degrades the spirit of decentralized
world. The proposed CB chain is promising to offer a green and high-performance infrastructure to various
decentralized applications (DApps) in the era of Web3.

II. TRANSACTIONS
The proposed consensusless blockchain does not specify a particular transaction model. System designer
can choose either the account model that is similar to Ethereum [12] or the UTXO model adopted by
Bitcoin [1]. In CB chain, smart contracts are supportable, and transactions could be compatible with
multiple inputs and multiple outputs.

For different account models, CB chain adopts different ways to defend against double-spending attacks.
CB chain has only one valid main chain. Although sometimes forks may occur, there is only one valid
block at any height in the long run. Work nodes (i.e., block proposers) can verify transaction’s validity by
replaying all transactions storing on the entire blockchain starting from the genesis block. For the account-
based model, double-spending attacks are defended by observing whether the nonce of two transactions
are the same. For the UTXO model, double-spending attacks can be defended by verifying whether the
UTXO of a transaction has been spent in another previous transaction.

III. A UNIVERSAL RULE: ENSURING THE TRUTH OF ALL TRANSACTIONS
The universe rule is set to ensure that any honest work node maintains only a single valid chain at
any time. To achieve this goal, we need to provide two basic mechanisms, i.e., Block Scoring and Fork
Handling.

A. Block Scoring Mechanism

Parameter block_score is deﬁned to evaluate the priority among the blocks at the same height. A
block’s block_score can be calculated by a naive monotonic function using both the inputs and outputs
of all the transactions packaged in the block. The block with lowest block_score wins when two blocks
are conﬂict with each other at the same height.

B. Fork Handling

Next we discuss how to address two conﬂict blocks at the same height when a fork forms.
We ﬁrst deﬁne nc as the number of conﬁrmations when a newly proposed block is admitted by the
entire blockchain network. When a fork appears in the CB chain, we let nl denote the number of blocks
in the longer fork branch. When nl ≥ nc, work nodes must ignore the shorter branch as shown in Fig.1.
When nl < nc, work nodes must calculate block_score of the ﬁrst blocks in two branches and choose to
follow the branch whose ﬁrst block has the lower block_score, as shown in Fig.2. If work nodes choose
to switch to the new branch of the fork, work nodes will broadcast a fork-win message to to speed up
the spread of the new branch.

3

Fig. 1. When nl ≥ nc, work nodes need to ignore the new fork branch no matter what the block_score of the ﬁrst block is in the
fork branch.

Fig. 2. When nl < nc, work nodes need to compare block_score of the ﬁrst blocks in two branches.

IV. TWO-STAGE WITNESS
When network latency is extremely low, the universal rule depicted in previous section is guaranteed.
However, the inevitable network latency brings dynamics when new blocks are proposed by work nodes.
Therefore, we also propose a carefully deﬁned two-stage witness mechanism, aiming to enable work
nodes to propose new blocks securely and fairly. This two-stage witness includes the following 2 stages:
transaction collecting and Block Witness and Minting.

A. Collecting Transactions and Proposing a New Block

As shown in Fig. 3, each collector node packages a block by collecting transactions from the transaction
pool. After a block is generated, every collector node can propose a new valid block following the
previously-witnessed block and broadcast the new block to the blockchain network. A valid block proposal
needs to satisfy the following 2 conditions: (i) the block includes at least a number of TXCOUNT (∈ N+)
transactions, all of which are valid; and (ii) there are not other blocks at the same height having lower
block_scores.

Fig. 3. The proposed Two-Stage Witness. We design a function Ask_for_w, aiming to allow a block’s proposer to ask for endorsements
(i.e., witness) from other witness nodes.

4

B. Block Witness and Minting

Work nodes continuously monitor the network. In each round of witness, each work node generates a
new block by packaging valid transactions. Then, the work node broadcasts the new block and waits for
a speciﬁed number of witness signed by other witness nodes.

Every valid block must be veriﬁed by a number m of witness signatures before it is added as a valid
block in the chain. For any valid block, we say a witness event is successful if the following condition
is satisﬁed.

DistanceFunc(PKnode, PKwitness) < THRESHOLDwitness,

(1)

where the DistanceFunc(PKnode, PKwitness) is a function used to select the qualiﬁed other witness
nodes who can sign witness in a newly proposed block. The parameters PKnode and PKwitness are the
public keys of the proposer node and the witness node who provides a witness, respectively. Parameter
THRESHOLDwitness is the customized maximum distance describing the relationship between the proposer
node and another witness node who can provide a witness signature. Thus, DistanceFunc(.) makes
the block minting difﬁcult. When a new block receives a speciﬁed number m of witness signatures from
witness nodes, the block will be accepted by the entire blockchain network and other honest work nodes
will follow it. As shown in Fig.4, when a valid witnessed block receives a number nc of subsequent
following blocks, we say that this block is eventually conﬁrmed by the CB chain.

Fig. 4. When a valid witnessed block receives a number of nc (e.g., 3) subsequent following blocks, this block is eventually conﬁrmed.

V. INCENTIVE
We deliberately decouple the incentive layer from CB chain to make the incentive mechanism neutral.
Any particular incentive mechanism can be plugged into CB via the block mint hooks like the mechanism
called before_block_mint and after_bolck_mint, which will be executed by the minter before or
after a block’s minting, respectively. For example, a Bitcoin-alike incentive method can be plugged in,
by adding coinbase reward transactions for the collector and witnesses into the minting block in the
before_block_mint hook. By extracting the incentive logic from the blockchain-maintenance logic, we
can use CB with any economic model, even run different economic models on the same CB chain
simultaneously.

We disclose more insights under the Bitcoin-alike incentive mode. Such the incentive is used to
encourage collector nodes to propose new blocks. The difference is that the coinbase reward of CB
chain is awarded to the proposer whose proposed new block has received the sufﬁcient number of
witness signatures. The incentive also includes the subsidy paying to the collaborators who offer witness
signatures for any newly proposed block. The incentive helps encourage work nodes to stay honest and be
willing to offer witness signatures for others. If a greedy attacker is able to collude with other collaborators
who can offer quick witness signatures for his new block, he would have to select his collaborators out
of all work nodes. Due to the well-deﬁned DistanceFunc(.), it would be time-consuming to ﬁnd the
target collaborators. He ought to ﬁnd it more proﬁtable to play under the proposed two-stage witness such
that he can be rewarded by more new coins than the manner to collude with his collaborators.

5

A. Security Analysis of Witnessing an Adversarial Block

VI. CALCULATIONS

To avoid Sybil attacks, every work node needs to pledge a certain amount of assets before participating
the CB network. Let q (∈ [0, 1]) represent the proportion of adversarial nodes. Considering that the selection
of witness nodes is random, the probability that a qualiﬁed witness is in fact an adversarial node is also
q. That is,

P r(a qualiﬁed witness node is an adversarial node) = q.

(2)

We then consider an extreme adversarial case, in which an invalid block is witnessed by all adversarial

collaborator nodes. The probability of such extreme case is qm, i.e.,

P r(an invalid block is witnessed) = qm.

(3)

Eq. (3) indicates that an invalid block is almost impossible to win a successful witness when m is large

enough.

B. The Safety of CB Chain versus Message-Delivery Ratio

Hard forks are always undesired in a blockchain. In this part, we analyze the threat to system safety
when a permanent hard fork forms. This is because a part of honest work nodes will be misled by the
hard fork, when the message-delivery ratio is not high. Once any honest work node is misled by the hard
fork, the safety of the blockchain will be weakened.

We then calculate the probability of the situation (denoted by P rmisled) when an honest node is
misled by a hard fork. The related parameters include the message-delivery ratio r (∈ (0, 1)), the number
of conﬁrmation blocks nc, the witness conﬁguration parameter m, and the number of fork-win message
l. Thus, the probability P rmisled is written as follows.

P rmisled = (1 − r)(m+1)∗(nc+1)∗(m+nc+2)+l.
Insight of Eq. (4): In a perfectly-connected network, the message-delivery ratio can approximate 100%.
Even if r is not very high in a real-world blockchain network, Eq. (4) implicates that P rmisled can be
maintained in a very low level by choosing appropriate values of parameters nc and m. Considering
the most conservative design(the number of conﬁrmation blocks nc is 2 and the witness conﬁguration
parameter m is 2), the probability of hard bifurcation of a block from generation to conﬁrmation is less
than 1/1054. Table.I shows that hard forks are almost impossible to occur naturally.

(4)

TABLE I
PROBABILITY OF A HARD FORK UNDER THE SAME SCALE OF EXISTING BLOCKCHAINS

Blockchain
Bitcoin
Ethereum
Solana

Height
751789
15437870
148287091

Time of existence
14 years
7 years
4 years

Probability of a hard fork at the same scale
< 1/1047
< 1/1045
< 1/1044

Expected time for a hard fork
> 1047 years
> 1037 years
> 1035 years

We conduct a simulation to verify the implication of Eq. (4). When nc is set to 3 and the exist
of fork-win message is ignored, Fig.5 shows that the probability P rmisled declines rapidly as the
number of witness conﬁguration parameter m increases, under different settings of message-delivery
ratio r ∈ {0.6, 0.7, 0.8, 0.9}. When r is not high, CB can still obtain a very low P rmisled by setting a
suitable number of conﬁrmation parameter nc and choosing a suitable parameter m.

VII. CONCLUSION
Consensusless blockchain is a game-changing design that is going to lead a new generation of blockchain
protocols in the era of web3. Our proposed CB chain is promising to offer a high-performance trusted
infrastructure for both research scenarios and rich real-world decentralized applications.

6

Fig. 5. The probability P rmisled versus parameter m, given different message-delivery ratio r.

REFERENCES

[1] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” Decentralized Business Review, p. 21260, 2008.
[2] J. Bhosale and S. Mavale, “Volatility of select crypto-currencies: A comparison of bitcoin, ethereum and litecoin,” Annu. Res. J. SCMS,

[3]

[4]

Pune, vol. 6, 2018.
I. Bentov, R. Pass, and E. Shi, “Snow white: Provably secure proofs of stake.” IACR Cryptology ePrint Archive, vol. 2016, p. 919,
2016.
I. Eyal, A. E. Gencer, E. G. Sirer, and R. Van Renesse, “Bitcoin-ng: A scalable blockchain protocol,” in 13th USENIX Symposium on
Networked Systems Design and Implementation (NSDI 16), 2016, pp. 45–59.

[5] J. Wang and H. Wang, “Monoxide: Scale out blockchains with asynchronous consensus zones,” in 16th USENIX Symposium on

Networked Systems Design and Implementation (NSDI 19), 2019, pp. 95–112.

[6] Y. Gilad, R. Hemo, S. Micali, G. Vlachos, and N. Zeldovich, “Algorand: Scaling byzantine agreements for cryptocurrencies,” in

Proceedings of the 26th Symposium on Operating Systems Principles. ACM, 2017, pp. 51–68.

[7] A. Kiayias, A. Russell, B. David, and R. Oliynykov, “Ouroboros: A provably secure proof-of-stake blockchain protocol,” in Annual

International Cryptology Conference. Springer, 2017, pp. 357–388.

[8] B. David, P. Gaˇzi, A. Kiayias, and A. Russell, “Ouroboros praos: An adaptively-secure, semi-synchronous proof-of-stake blockchain,”
in Annual International Conference on the Theory and Applications of Cryptographic Techniques. Springer, 2018, pp. 66–98.

[9] “Casper-proof-of-stake-compendium,” https://github.com/ethereum/wiki/wiki/Casper-Proof-of-Stake-compendium.
[10] R. Guerraoui, P. Kuznetsov, M. Monti, M. Pavloviˇc, and D.-A. Seredinschi, “The consensus number of a cryptocurrency,” in Proceedings

of the 2019 ACM Symposium on Principles of Distributed Computing, 2019, pp. 307–316.

[11] A. Yakovenko, “Solana: A new architecture for a high performance blockchain v0.8.13,” Whitepaper, 2018.
[12] V. Buterin et al., “A next-generation smart contract and decentralized application platform,” white paper, vol. 3, no. 37, pp. 2–1, 2014.

      m                                      Pr=0.6r=0.7r=0.8r=0.9