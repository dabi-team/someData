Edge Computing Meets Millimeter-wave Enabled
VR: Paving the Way to Cutting the Cord
Mohammed S. Elbamby∗, Cristina Perfecto†, Mehdi Bennis∗, and Klaus Doppler‡
∗Centre for Wireless Communications, University of Oulu, Finland.
emails: {mohammed.elbamby,mehdi.bennis}@oulu.ﬁ
†University of the Basque Country (UPV/EHU), Spain. email: cristina.perfecto@ehu.eus
‡Nokia Bell Labs, Sunnyvale, CA, USA. email: klaus.doppler@nokia-bell-labs.com

8
1
0
2

b
e
F
9

]
T
I
.
s
c
[

3
v
4
1
6
7
0
.
1
0
8
1
:
v
i
X
r
a

Abstract—In this paper, a novel proactive computing and
mmWave communication for ultra-reliable and low latency wire-
less virtual reality (VR is proposed. By leveraging information
about users’ poses, proactive computing and caching are used to
pre-compute and store users’ HD video frames to minimize the
computing latency. Furthermore, multi-connectivity is exploited
to ensure reliable mmWave links to deliver users’ requested HD
frames. The performance of the proposed approach is validated
on a VR network serving an interactive gaming arcade, where
dynamic and real-time rendering of HD video frames is needed
and impulse actions of different players impact the content to be
shown. Simulation results show signiﬁcant gains of up to 30%
reduction in end-to-end delay and 50% in the 90th percentile
communication delay.

I. INTRODUCTION

Commercial 5G deployments are not expected to be avail-
able before 2020, however the race to showcase a ﬁrst pre-
standard 5G network is on. Hence, all eyes are set on how
brand new services that promise to deliver entirely new
experiences such as 360-degree immersive virtual reality (VR)
will be offered. However multiple technical challenges need
to be investigated to deal with the latency-sensitivity and
the resource –communications and computing– intensiveness
nature of 4K/8K UHD immersive VR wireless streaming and
to realize the vision of interconnected VR [1].

To accommodate the extensive use of resource-hungry appli-
cations, it is foreseen that a 1000-fold boost will be needed in
system capacity (measured in bps/km2). This will be facilitated
via an increased bandwidth, higher densiﬁcation, and improved
spectral efﬁciency. Zooming on the VR requirements, even
anticipating the use of 265 HEVC 1:600 video compression
rate, a bit rate of up to 1 Gbps [2] would be needed to match
the 2x64 million pixel human-eye accuracy. These rates are
unrealizable in 4G and challenging in 5G for a disruption-
free immersive VR demands. Therefore signiﬁcant research
efforts around VR have focused on reducing bandwidth needs
in mobile/wireless VR, thereby shrinking the amount of data
processed and transmitted. Many approaches leverage head
and eye-gaze tracking to spatially segment 360◦ frames and
deliver in HD only user’s ﬁeld of view (FOV) matching
portion [3], [4]. Alternatively [5] considers a foveated 360◦
transmission where resolution and color depth are gradually
reduced from fovea-centralis area to the peripheral FOV.

Latency is critical for VR; the human eye needs to expe-
rience accurate and smooth movements with low (<20 ms)
motion-to-photon (MTP) latency [4]–[6]. High MTP values
send conﬂicting signals to the Vestibulo-ocular reﬂex (VOR),
and might lead to dizziness or motion sickness. Both comput-
ing (image processing or frame rendering) and communication
(queuing and over-the-air transmission) delays represent a

major bottleneck in VR systems. Heavy image processing
requires high computational power that is often not available
in the local head-mounted device (HMD) GPUs. Ofﬂoading
computing signiﬁcantly relieves the computing burden at the
expense of incurring an additional communication delay in the
downlink (DL) delivery of the processed video frames in full
resolution. Moreover, to ensure responsiveness and real-time
computing through minimal latency, computing servers should
be readily available and located close to the end users.

VR demands a perceptible image-quality degradation-free
uniform experience. However, temporary outages due to im-
pairments in measured signal to interference plus noise ratio
(SINR) are frequent in mobile/wireless environments. In this
regard, an ultra-reliable VR service refers to the timely deliv-
ery of video frames with high success rate. Provisioning for
a higher reliability pays a toll on the use of resources and
allocating more resources for a single user could potentially
impact the experienced latency of the remaining users.

Leveraging ubiquitous caching and computing at the wire-
less network edge will radically change the future mobile
network architecture [7], and alleviate the current bottleneck
for massive content delivery. Research ideas and network en-
gineering geared toward exploiting communications, caching,
and computing (C3) for future content-centric mobile networks
are found in [8]–[10]. This paper exploits the C3 paradigm to
provide an enhanced wireless VR experience. To that end, it
blends together the use of millimeter-wave (mmWave) tech-
nology and fog computing. The former seeks to deliver multi-
Gbps wireless communication between VR headsets and net-
work access points, with reliability guarantees, and the latter
carries out advanced image processing, effectively ofﬂoading
client displays or game consoles while satisfying stringent
latency constraints. The main contribution of this paper is to
propose a joint proactive computing and mmWave resource
allocation scheme under latency and reliability constraints.
Reliability is ensured by leveraging multi-connectivity (MC)
to enhance the performance of users under channel variability,
whereas proactive computing and user association is optimized
to satisfy the latency requirements.

The rest of this paper is organized as follows. Section II
describes the system model and problem formulation. The
proposed joint computing and matching scheme is introduced
in Section III. Section IV analyzes the performance of the
proposed framework. Finally, Section V concludes the paper.

II. SYSTEM MODEL

Consider an indoor, open plan, VR gaming arcade of
dimensions L x W x H m3 where a set A of A mmWave
band access points (mmAP) serves a set U of U virtual reality

 
 
 
 
 
 
VR tracking
volume for pod r′

mmAPa

mmAPa′

H

VRPu′ with
mmHMD

mmAPa′′′

l

VR tracking pod r

l

VRPv′ with
mmHMD

LOS link to
mmAPa

NLOS (blocked) link
to mmAPa′
to mmAPa′

LOS link to
LOS link to
mmAPa′′

Head rotation
→misalignment

VRPv with
mmHMD

W

VRPu with
mmHMD

L

mmAPa′′

Figure 1. Open-plant VR gaming arcade with VRPs moving freely within
their VR tracking pods and getting HD video frames from mmAP.
players (VRP) equipped with wireless mmWave head-mounted
VR displays (mmHMD). VRPs are distributed and move freely
within the limits of the R individual and l x l m2 sized VR
pods such that R ≥ U . The movement of VRPs in the physical
space of each VR pod is tracked and mapped into the virtual
space. An illustration of the system model is shown in Fig. 1.
The system operates in a time-slotted mode. The time-slots
are indexed by t ∈ {1, 2, · · · } with separate scales to account
for scheduling decisions, and for beam alignment.

A. Interactive VR frame rendering model

A set I of impulse actions is deﬁned as the actions generated
during the interactive gaming either by the VRPs or an external
trigger. The arrival of impulse action mi ∈ I impacts the game
play of a subset of VRPs Ui ⊆ U. In this regard, the impact
of the impulse actions on the VRPs’ game play, namely, the
impact matrix, is deﬁned as Θ = [θui], where θui = 1 if
u ∈ Ui, and θui = 0 otherwise.1

Mobile edge computing is used to provide the required com-
putation capabilities. Accordingly, a fog network consisting of
a set E of E edge servers with GPU computing capability ce,
and a storage unit of capacity S HD frames, will perform real-
time VR environment building related computing2 to generate
HD interactive video frames based on the real-time 6D pose3
and the impulse actions of VRPs.

1 , V u

2 . . . , V u

Each VRP u is interested in receiving a unique F -tuple
of HD video frames (V u
F ) throughout its game
play. To render an HD video frame, a processing density of κ
GPU cycles per bit of frame data is required, with HD frame
V u
f having a data size of LHD
f u bits. In this context, mmAPs
act as a two-way middleware between the mmHMDs and
the edge servers in the fog network. mmAPs relay pose and
action inputs from VRPs arriving through the wireless uplink
(UL). After the HD frames are rendered, the mmAPs schedule
mmWave time slots in the DL to deliver the resulting video
frames. To ensure reliable DL transmission, MC is leveraged in
which multiple mmAPs can jointly transmit the same data to a
player with a weak link. Furthermore, to avoid motion sickness

1An example of an impulse action is a player ﬁring a gun in a shooting
game. As the game play of a subset of players is affected by this action, a
computed video frame for any of them needs to be rendered again.

2The terms computing and rendering are used interchangeably throughout

the paper to describe the process of rendering HD video frames.

3A 6D pose is jointly given by the 3D location coordinates and the 3
orientation angles over the X, Y, and Z axes, namely the roll, pitch and yaw.

associated with high MTP delay, computing and schedul-
ing decisions have to guarantee stringent latency constraints.
Therefore, The fog network leverages the predictability of
users’ poses to proactively compute the upcoming HD video
frames within a prediction window Tw. VRPs can receive and
stream the proactively computed video frames as long as they
are not affected by impulse actions arriving afterwards. The
proactive computing time dynamics are depicted in Fig. 2.
Moreover, edge servers exploit their idle times to proactively
render and cache the HD frames of users affected by the
popular impulse actions, such that the computing latency is
minimized. Finally, it is assumed that a low quality (LQ)
version of the video frame, with data size LLQ
f u , can
be processed locally in the mmHMD to ensure smooth game
play if the HD video frame cannot be delivered on time.
B. mmWave communication model

f u ≪ LHD

The mmWave channel is based on measurement results of
LOS and NLOS paths for the 60-GHz indoor channels [11],
and includes both pathloss attenuation lau and small Nakagami
fading with coefﬁcient gau(t). The channel gain hau from
mmAP a to mmHMD in VRP p is thus given by |hau(t)|2 =
lau|gau(t)|2.

The pathloss ℓau is considered LOS when ∄ VRP u′ ∈ U\u
such that the area deﬁned by the d-diameter circle associated
to its head+mmHMD intercepts the ray traced from mmAP
a to mmHMD receiver of VRP u; the path is considered
NLOS otherwise4. Neither external interference leakage into
the ﬁnite area of the arcade nor reﬂections due to walls, ceiling
or the VRPs themselves are explicitly incorporated in the
channel model. They are only accounted for in a coarse way
through the different LOS and NLOS parameters. Accordingly,
the pathloss exponent αau in lau will take value αL if the
link from mmAP a to the mmHMD receiver u is LOS and
value αN otherwise. Similarly, the corresponding Nakagami
shape factor mau will take value mL for LOS and mN for
NLOS paths; it is further assumed that gau(t) is i.i.d. and not
temporally correlated.

For tractability, the radiation pattern of actual directional
antennas is approximated with a 2D sectored antenna model
[12]. Let gTx
au(t)) denote the
transmission and reception antenna gains from mmAP a to
the mmHMD of VRP u as given by

up(t)) and gRx

au(ϕu, ϑRx

au(ϕa, ϑTx

(cid:30)
au(ϕa, ϑ

(cid:30)
au(t)) =

g

2π−(2π−ϕa)gsl
ϕa

,

(cid:26)

gsl,

(cid:30)
au(t)| ≤ ϕa
2 ,

|ϑ
otherwise,

(1)

(cid:30)
with (cid:30) ∈ {Tx, Rx}, and where ϑ
au(t) stands for the angular
deviation from the boresight directions, and gsl is the constant
sidelobe gain with gsl ≪ 1.
High directionality of mmWave communications motivates a
search process to ﬁnd the boresight directions corresponding
to the best path between the mmAP and the mmHMD and take
full advantage of beamforming gains as per (1). To that end,
periodically each of the A mmAPs will sequentially perform

4Capturing the blockage arriving from game-engagement related limb
movements, e.g. VRPs raising their hands and blocking their own or some
other mmWave link is left for future work.

Reactive
Computing

Proactive
Computing

V u
f
requested by
VRP u

Impulse
action arrival
i : Θiu = 1
i : Θij = 0

V u
f +1
requested by
VRP u

V j

f +1
requested by
VRP j

Comp.V u
f

Comm. V u
f

Comp.V u

f +1

Comm. V u

f +1

Comp.V j

f +1 Comm. V j

f +1

Proactively
computed
and cached

If iddle processors:
Proactively compute
f +1∀u ∈ U
and cache V u
z
{
}|

Comp.V u

f +1

Obsolete V u
f +1
due to impulse
action aﬀecting u
recompute

Cached V j
f +1
unaﬀected by
impulse action:
ready to
transmit

Comp.V u
f

Comm. V u
f

Comp.V u

f +1

Comm. V u

f +1

Comm. V j

f +1

Proactivity
Gain

Proactivity
Gain

Proactivity
Gain

Figure 2. Time dynamics for reactive and proactive computing.

time

time

beam training with the |Ua| VRPs within it coverage area,
Ua ⊂ U. After the best steerings for all feasible VRPs have
been learned, and following a transmission interval level VRP
scheduling decision, data transmission begins.
The analog beamformers on the mmAPs and VRPs sides are
determined after a two-stage beam training process [13]. Let
τ = {τ1, τ2, · · · , τA} denote the vector of alignment delays
for the A mmAPs in the system, then on an a priori knowledge
of mmAPs ﬁxed location and of VRPs sector5, the experienced
alignment delay τau due to beam training is τau = ψa
Tp,
ϕa
where Tp is the pilot symbol transmission time and ψa, ϕa
denote the sector-level and beam-level beamwidths for mmAP
a. The overall alignment delay is τ =
To overcome vulnerability to channel intermittency due to
blockage and misalignment, mmHMDs are assumed to be
capable of leveraging MC implemented through coordinated
joint transmission of VR player data from multiple mmAPs.
An indicator variable xau(t) is therefore deﬁned if mmAP a
schedules VRP u at time instant t. The maximum achievable
rate (in Gbps) for mmHMD u is given by

τau.

u∈Ua

a∈A

P

P

′

(2)

∀a

P

P

γu(t) =

au(t)gRx
a′u(t)gRx

ru(t) = (1 − τ ) B log2 (1 + γu(t)) ,
∀a∈A xau(t)pa|hau(t)|2gTx
∈A(1−xau(t))pa′u|ha′u(t)|2gTx

au(t)
a′u(t)+N0B
(3)
where the achievable SINR term γu(t) should, in addition to
the effective received power at mmHMD u from mmAPs a :
xau(t) = 1 and to Gaussian noise, account for the effect of
other interfering mmAPs a′ : xa′u(t) = 0 through channel and
antenna gains, |ha′u(t)|2 and gTx
C. Computing model

a′u respectively.

a′u, gRx

,

The total perceived delay to compute and deliver an HD video
frame is expressed as:

uf (t) + Dcm

Duf (t) = ξf u(Dcp

uf (t) + τ EP),

(4)
where ξf u is a binary function that equals 1 when the HD
video frame is delivered to VRP u and equals 0 if the LQ
frame is delivered, Dcp
uf and Dcm
uf are the computing and
communication delays of HD frame f initiated from user
u, and τ EP is the processing latency which accounts for

5A reasonable assumption due to highly accurate and frequent VRP location

tracking and to the slowness of human movement at ms scale.

the edge server processing, storage processing and the UL
transmission of user pose and action data. Here, we focus
on the effect of computation delay in the edge servers and
the DL communication delay, i.e., the access to the backhaul
is assumed to be wired. Let the computing delay Dcp
uf be
expressed as follows:

Dcp

uf (t) =

κLHD
f u
ce

(cid:18)

+ Wuf (t)

(cid:19)

zf u(t)(1 − yf u(t)),

(5)

where ce is the computation capability of edge server e, zf u(t)
the video frame f of user u is
and yf u(t) indicate that
scheduled for computing, and is cached in the fog network
at time instant t, respectively, and Wuf is the computation
waiting time of HD frame f of user u in the service queue,
deﬁned as Q(t). Furthermore, Let the communications delay
Dcm

uf be as follows:

Dcp

uf (t)+du

Dcm

uf (t)=arg min
du

Ttru(t′) ≥ LHD

,
f u (cid:19)

(cid:18)

(6)

Xt′=Dcp

uf (t)+1
where the arg min function is to ﬁnd the minimum number of
time slots needed for the video frame f to be delivered.
The objective of the proposed approach is to maximize the HD
video frame delivery ξ = [ξf u] subject to latency constraints.
The optimization variables are the scheduling, caching, and
computing matrices, expressed as X(t) = [xua(t)], Y (t) =
[yf u(t)], and Z(t) = [zf u(t)] respectively. The optimization
problem is cast as follows:

max
X(t),Y (t),Z(t)

U

F

Xu=1

Xf =1

ξf u

(7a)

subject to Pr(Duf (t) ≥ Dth)≤ ǫ, ∀f ∈ F , ∀u ∈ U,

(7b)

U

xua(t) ≤ 1, ∀a ∈ A,

Xu=1
U

F

Xu=1
U

Xf =1
F

Xu=1

Xf =1

yf u(t) ≤ S ,

zf u(t) ≤ E,

(7c)

(7d)

(7e)

where (7b) is a probabilistic delay constraint that ensures
the communication latency is bounded by a threshold value
Dth with a probability 1 − ǫ. Constraint (7c) ensures that

Algorithm 1 Joint computing and caching algorithm.

Algorithm 2 VRP-mmAP matching algorithm.

f (t) is not computed

1: Implementation at each time instant t:
2: Repeat ﬁnd v = vacant cloudlet
Priority one: real-time scheduling
3: ﬁnd u where V u
4: v → allocated, zf u(t) → 1
Priority two: predictive computing and caching
5: Find u and t′ where t′ ∈ (t : t + Tw) and V u
6: v → allocated, zf u(t) → 1
f (t′)
7: compute and cache V u
Priority three: predictive impulse computing and caching
8: Sort I by popularity
9: Repeat Select i as the most popular I
10: ﬁnd u:θu,i = 1
11: v → allocated, zf u(t) → 1
12: compute and cache V u
13: Until at least one of the following conditions is true

f (t + 1)

f (t′) is not computed

• no vacant cloudlets
• cache is full
• upcoming frames of impacted users from all I are computed

mmAP serves one VRP at a time. (7d) limits the number of
cached frames to a maximum of S. Constraint (7e) is over the
maximum number of simultaneous computing processes. The
above problem is a combinatorial problem with non-convex
cost function and probabilistic constraints, for which ﬁnding
an optimal solution is computationally complex [14]. The non-
convexity is due to the interference from other mmAPs in the
rate term in the delay equation. To make the problem tractable,
we use the Markov’s inequality to convert the probabilistic
constraint in (7b) to a linear constraint [14] expressed as
E{Duf (t)} ≤ Dthǫ. Hence, it can be rewritten as:

E

Dcp
n

uf (t)+Dcm

uf (t)
o

= E

Dcp
n

uf (t)
o

+E

Dcm
(cid:8)

uf (t)
(cid:9)

≤ Dthǫ

(8)

The above expectation is hard to calculate due to having the
arg min function in the Dcm
uf (t). Therefore, we express the
LHD
Dcm
second expectation as E
f u
Tt ¯ru(t) , where ¯ru(t) is
uf (t)
o
the time-average service rate of VRP u from mmAP p at time
t
instant t, expressed as ¯ru(t) =
τ =1 ra(τ ). Hence, the ultra-
reliable low latency communication (URLLC) constraint can
be rewritten as:

P

=

n

LHD
f u
Tt¯ru(t)

+

κLHD
f u
ce

+ E {Wuf (t)} ≤ Dthǫ.

(9)

Similarly,
E {Wuf (t)} =

the average waiting time can be expressed as

i|V i

f ∈Q(t)

LHD
f i
Tt ¯ri(t) , and (9) rewritten as:

P

LHD
f u
Tt¯ru(t)

≤ Dthǫ −

XV i
f ∈Q(t)

LHD
f i
Tt¯ri(t)

−

κLHD
f u
ce

.

(10)

t
̺=1 ru(̺) = ru(t) +

The average rate ¯ru(t) can be separated into the instan-
taneous time rate at
time instant t and the average rate
in the previous time instants (that can be estimated), i.e.,
t−1
̺=1 ru(̺). In other words,
¯ru(t) =
to reach the desired latency requirement, a maximum value of
LHD
f u
Tt ¯ru(t) that satisﬁes the above formula should be guaranteed
to admit admitted a request to an mmAP.
Next, a joint VRP-mmAP matching and scheduling scheme is
proposed to solve the optimization problem in (7).

P

P

1: Initialization: all players and mmAPs start unmatched.
2: Each mmAP constructs its preference list as per (12)
3: Each player constructs its preference list as per (13)
4: repeat an unmatched player u, i.e., Υ(u) = φ proposes to its most

preferred mmAP a that satisﬁes a ≻u u
if Υ(a) = φ, %not yet matched

else %matched to u′ → Υ(a) = u′

player u removes mmAP a from its preference list

Υ(a) = u, Υ(u) = a. %player u proposal is accepted

if u′ ≻a u %player u proposal is rejected

5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
15:
16:
17:
18: until all players are either matched with γu ≥ γTh or not having mmAPs

else %player u proposal is accepted
Υ(a) = u,Υ(u) = a, Υ(u′) = φ
player u′ removes mmAP a from its preference list

split u into two players u1 and u2, Υ(u2) = φ

end if
if γu < γTh

end if

end if

that satisfy a ≻u u in their preference lists

19: Output: a stable matching Υ

III. JOINT PROACTIVE COMPUTING AND MATCHING

As stated above, the optimization problem in (7) is com-
putationally hard to solve. We rather decouple it into two
subproblems of computation scheduling and VRP association.

A. Computing and caching scheme

During the game play, the edge computing network minimizes
the computing service delay by leveraging the pose prediction
of users to proactively compute their HD video frames as
well as caching the updated HD video frames resulting from
randomly arriving impulse actions. In the case that impulse
action arrives in which the corresponding frames for the
affected users are not computed, the real time computing
is giving the highest priority. Therefore, we propose a three
priority level algorithm to schedule HD frame computing of
users. The detailed algorithm is described in Algorithm 1.

B. Player-Server matching

Our next step is to propose a VRP-mmAP association scheme
that solves the constrained minimization problem in (7). The
association problem is formulated as a matching game [15]
between the mmAPs and the VRPs. In this game, VRPs seek
to maximize their VR experience by competing for mmWave
time slots from different mmAPs. Whenever a player in the
network requests a new HD frame, a new set of matching
pairs is found using the proposed approach. The matching
game consists of a two sets of players and mmAPs, where
each member of one set has a preference proﬁle over the
members of the other sets. Preferences of mmAPs and players
are denoted by ≻a and ≻u, and reﬂect how each member of
a set ranks the members of the other set.
Deﬁnition 1. Given two disjoint sets of mmAPs and players
(A, U), a matching is deﬁned as a one-to-one mapping Υ from
the set E ∪ U into the set of all subsets of A ∪ U, such that
for each a ∈ A and u ∈ U:

1) ∀u ∈ U,Υ(u) ∈ A ∪ u, where Υ(u) = u means that
a player is not associated to a remote server, and will
perform local LQ frame processing.

2) ∀a ∈ A,Υ(a) ∈ U ∪ {a}, where Υ(a) = a means that

the mmAP a have no associated players.

3) | Υ(u) |= 1, | Υ(a) |= 1; 4)Υ(u) = a ⇔ Υ(a) = u.
By inspecting the problem in (7), we can see that the one-
to-one mapping of the matching game satisﬁes the constraint
(7c). Moreover, since preference proﬁles can be deﬁned to
capture the cost function of the matching sets. The utility of
the mmAPs will essentially reﬂect the latency constraint in
(10). Therefore, we deﬁne the utility of associating player u
to mmAP a as:

Φau(t) = Dthǫ −

Xi|V i

f ∈Q(t)

LHD
f i
Tt¯ri(t)

−

κLHD
f u
ce

−

LHD
f u
Tt¯ru(t)

, (11)

au(t)gRx

au(t) < |ha′u(t)|2gTx

and the mmAP preference as:
u ≻a u′ ⇔ Φau(t) > Φau′ (t), a ≻a u ⇔ Φau(t) < 0,

(12)
where the second preference states that a mmAP is not
interested in matching to a player that will violate its latency
constraint. In other words, the utility of each cloudlet is to
seek a matching that maximizes the difference between the
right hand side and the left hand side of the inequality in
(10), such that the constraint is met as a stable matching is
reached. To meet the players’ reliability target, we deﬁne the
preference proﬁles of the players as to maximize their link
quality as follows:
a ≻u a′ ⇔ |hau(t)|2gTx
a′u(t).(13)
Since users may not always ﬁnd a single reliable link, we
propose to split
the users that are matched but with an
SINR below a predeﬁned threshold γTh into multiple players,
allowing to be matched to multiple mmAPs and satisfy their
link reliability requirements subject to mmAP availability.
Next, matching stability is deﬁned and an efﬁcient multi-stage
algorithm based on deferred-acceptance (DA)[16] to solve it.
Deﬁnition 2. Given a matching Υ with Υ(a) = u and Υ(u) =
a, and a pair (u′, a′) with Υ(a) 6= u′ and Υ(u) 6= a′, (u′, a′)
is said to be blocking the matching Υ and form a blocking
pair if: 1) u′ ≻a u, 2) a′ ≻u a. A matching Υ∗ is stable if
there is no blocking pair.
Remark 1. The algorithm described in Algorithm 2, converges
to a two-sided stable matching of players to mmAPs or to
their local servers [16].

a′u(t)gRx

IV. SIMULATION RESULTS
In this section, we numerically validate the effectiveness of the
proposed solution. We also compare the proposed approach
against two benchmarking schemes:

1) Baseline 1, with neither MC nor proactive computing
and caching. Requests are computed in real time after
they are initiated, and are transmitted through single-
connectivity links.

2) Baseline 2, without MC, but assumes proactive comput-

ing and caching capabilities.

We consider a gaming arcade with a capacity of 8x8 VR
pods and a set of default parameters6 unless stated otherwise.

6We consider 100 impulse actions with popularity parameter z = 0.8, a
uniformly distributed impact matrix θ, Dth = 100 ms ǫ = 0.1, 10 dBm
f = ∼ exp(2) Gbit, κ/ce = 5 ∗ 10−8, S/A = 20
mmAP transmit power, LHD
video frames, and Tw = 100 ms.

Impulse actions arrive following the Zipf popularity model of
parameter z [17]. Accordingly, the arrival rate for the ith most
popular action is proportional to 1/iz.

A. Impact of number of players

First, we investigate the performance of the proposed approach
when the number of players increases. We ﬁx the number of
mmAPs and servers to 16. In Fig. 3, we show the average and
the 90th percentile communication delay (Dcm
uf 90 pctl) for
different schemes, which all increase with the network density.
This is due to the increase in offered load, as compared to
the network capacity, and the higher levels of interference.
As the number of players increases, the proposed approach
achieves up to 25% reduction in the Dcm
uf 90 pctl, due to
the MC gain that allows users with weak links to receive
from multiple servers. This reduction is more evident in dense
network conditions associated with high interference/blockage
levels. In Fig. 4, we show the change in the average computing
delay. Both the proposed approach and Baseline 2 achieve
signiﬁcant reduction in the computing delay, due to leveraging
the proactivity to cut down the rendering latency.

B. Impact of number of mmAPs and servers

Next, we investigate the performance of the proposed approach
as the number of mmAPs and servers increase, while ﬁxing the
number of players to the maximum arcade capacity of 64. We
assume the number of servers in the fog network also matches
the number of mmAPs. First, Fig. 5 shows the average and
Dcm
uf 90 pctl communication delay performance. Intuitively,
low number of mmAPs will incur higher communication delay
due to having higher offered load than what the mmAPs can
serve. However, we observe that at low number of mmAPs,
the average delay can be reduced by up to 33% whereas the
Dcm
uf 90 pctl can be halved using the proposed approach.
Finally, Fig. 6, shows the computing and communication delay
performance. We can see that, at low number of servers, the
computing delay is always high, due to not having enough
computing resources to serve the high number of players. The
network can hardly serve the real-time computing requests,
leaving no room for proactive computing. Accordingly, higher
number of servers are needed to achieve proactive computing
gains.

V. CONCLUSIONS

In this paper, we have studied the problem of ultra-reliable
and low latency wireless VR networks. A joint proactive com-
puting and user association scheme is proposed in mmWave
enabled VR for interactive gaming. In the proposed scheme,
information about the game players’ upcoming pose and game
action is leveraged to proactively render their HD video frames
such that computing latency is minimized. To ensure reliable
and low latency communication, a matching algorithm has
been proposed to associate players to mmAPs and enable
multi-connectivity, in which multiple mmAPs jointly transmit
the video frames to players to overcome the effect of channel
variability. Simulation results have shown that the proposed
scheme achieves signiﬁcant reduction in both computing and

)
s
m

(

l

y
a
e
d

i

n
o
i
t
a
c
n
u
m
m
o
C

8

7.5

7

6.5

6

5.5

5

4.5

90th pctl (Proposed)
90th pctl (Baseline 1)
90th pctl (Baseline 2)
Average (Proposed)
Average (Baseline 1)
Average (Baseline 1)

25%
reduction

15%
reduction

10

20

30

40

50

60

70

Number of players

)
s
m

(

l

y
a
e
d
g
n
i
t
u
p
m
o
c
e
g
a
r
e
v
A

10

9

8

7

6

5

4

3

2

1

0

Proposed
Baseline 1
Baseline 2

0

10

20

30

40

50

60

70

Number of players

Figure 3. Average (dashed lines) and 90th percentile (solid lines)
communication delay versus number of players, for 16 mmAPs.

Figure 4. Average computing delay versus number of players, for 16
mmAPs.

)
s
m

(

l

y
a
e
d

i

n
o
i
t
a
c
n
u
m
m
o
C

16

14

12

10

8

6

4

90th pctl (Proposed)
90th pctl (Baseline 1)
90th pctl (Baseline 2)
Average (Proposed)
Average (Baseline 1)
Average (Baseline 2)

25

20

15

10

5

)
s
m

(

l

y
a
e
d

g
n
i
t
u
p
m
o
c

e
g
a
r
e
v
A

5

10
Number of mmAPs

15

20

25

0

4

6

8

10

14

12
Number of servers

16

18

Proposed
Baseline 1
Baseline 2

20

22

24

Figure 5. Average (dashed lines) and 90th percentile (solid lines)
communication delay versus number of mmAPs, for 64 players.

Figure 6. Average computing delay versus number of servers, for 64
players.

communication latency under different network conditions, as
compared to different baseline schemes.

VI. ACKNOWLEDGMENTS

This research was partially supported by the Academy of Fin-
land project CARMA, the NOKIA donation project FOGGY
and by the Spanish MINECO under grant TEC2016-80090-
C2-2-R (5RANVIR).

REFERENCES

[1] E. Ba¸stu˘g, M. Bennis, M. Médard et al., “Toward interconnected virtual
reality: Opportunities, challenges, and enablers,” IEEE Commun. Mag.,
vol. 55, no. 6, pp. 110–117, June 2017.

[2] M. S. ElBamby, C. Perfecto, M. Bennis et al., “Towards low-latency
and ultra-reliable virtual reality,” IEEE Network, 2017, to appear.
[3] F. Qian, L. Ji, B. Han et al., “Optimizing 360◦ video delivery over
cellular networks,” in Proc. Int. Conf. Mobile Comp. and Networking
(MOBICOM), New York, NY, USA, 2016, pp. 1–6.

[4] R. Ju, J. He, F. Sun et al., “Ultra Wide View Based Panoramic VR
Streaming,” in Proc. ACM SIGCOMM. Workshop on Virtual Reality and
Augmented Reality Network (VR/AR Network), 2017.

[5] K. Doppler, E. Torkildson, and J. Bouwen, “On wireless networks for
the era of mixed reality,” in Proc. Eur. Conf. on Networks and Commun.
(EuCNC), June 2017, pp. 1–6.

[6] M. Chen, W. Saad, and C. Yin, “Virtual reality over wireless networks:
Quality-of-service model and learning-based resource management,”
CoRR, vol. abs/1703.04209, 2017.

[7] E. Zeydan, E. Bastug, M. Bennis et al., “Big data caching for network-
ing: Moving from cloud to edge,” IEEE Communications Magazine,
vol. 54, no. 9, pp. 36–42, September 2016.

[8] F. Bonomi, R. Milito, J. Zhu et al., “Fog computing and its role in the
internet of things,” in Proc. 1st Edition of the MCC Workshop on Mobile
Cloud Computing, ser. MCC ’12, 2012, pp. 13–16.

[9] M. S. Elbamby, M. Bennis, and W. Saad, “Proactive edge computing in
latency-constrained fog networks,” in Proc. Eur. Conf. on Networks and
Commun. (EuCNC), June 2017, pp. 1–6.

[10] Y. Mao, C. You, J. Zhang et al., “A survey on mobile edge computing:
The communication perspective,” IEEE Commun. Surveys Tuts., vol. PP,
no. 99, pp. 1–1, Aug. 2017.

[11] H. Xu, V. Kukshya, and T. S. Rappaport, “Spatial and temporal char-
acteristics of 60-GHz indoor channels,” IEEE J. Sel. Areas Commun.,
vol. 20, no. 3, pp. 620–630, Apr. 2002.

[12] J. Wildman, P. H. J. Nardelli, M. Latva-aho et al., “On the joint impact
of beamwidth and orientation error on throughput in directional wireless
poisson networks,” IEEE Trans. Wireless Commun., vol. 13, no. 12, pp.
7072–7085, Dec. 2014.

[13] J. Wang, Z. Lan, C.-W. Pyu et al., “Beam codebook based beamforming
protocol for multi-Gbps millimeter-wave WPAN systems,” IEEE J. Sel.
Areas Commun., vol. 27, no. 8, pp. 1390–1399, Oct 2009.

[14] A. Mukherjee, “Queue-aware dynamic on/off switching of small cells
in dense heterogeneous networks,” in IEEE Globecom Workshops (GC
Wkshps), Dec. 2013, pp. 182–187.

[15] O. Semiari, W. Saad, S. Valentin et al., “Matching theory for priority-
based cell association in the downlink of wireless small cell networks,”
in 2014 IEEE Int. Conf. on Acoustics, Speech and Signal Processing
(ICASSP), May 2014, pp. 444–448.

[16] A. Roth and M. Sotomayor, “Two-sided matching: A study in game-

theoretic modeling and analysis,” Cambridge University Press, 1992.

[17] E. Ba¸stu˘g, M. Bennis, and M. Debbah, “Living on the edge: The role
of proactive caching in 5G wireless networks,” IEEE Commun. Mag.,
vol. 52, no. 8, pp. 82–89, Aug. 2014.

 
 
 
 
 
 
 
 
 
 
