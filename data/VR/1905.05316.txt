Wireless Edge Computing with Latency
and Reliability Guarantees

Mohammed S. Elbamby, Cristina Perfecto, Chen-Feng Liu, Student Member, IEEE,
Jihong Park, Sumudu Samarakoon, Xianfu Chen, Member, IEEE and Mehdi Bennis, Senior Member, IEEE

1

(cid:70)

9
1
0
2

y
a
M
3
1

]
I

N
.
s
c
[

1
v
6
1
3
5
0
.
5
0
9
1
:
v
i
X
r
a

Abstract—Edge computing is an emerging concept based on distribut-
ing computing, storage, and control services closer to end network
nodes. Edge computing lies at the heart of the ﬁfth generation (5G)
wireless systems and beyond. While current state-of-the-art networks
communicate, compute, and process data in a centralized manner (at
the cloud), for latency and compute-centric applications, both radio ac-
cess and computational resources must be brought closer to the edge,
harnessing the availability of computing and storage-enabled small cell
base stations in proximity to the end devices. Furthermore, the network
infrastructure must enable a distributed edge decision-making service
that learns to adapt to the network dynamics with minimal latency and
optimize network deployment and operation accordingly. This article will
provide a fresh look to the concept of edge computing by ﬁrst discussing
the applications that the network edge must provide, with a special
emphasis on the ensuing challenges in enabling ultra-reliable and low-
latency edge computing services for mission-critical applications such
as virtual reality (VR), vehicle-to-everything (V2X), edge artiﬁcial intelli-
gence (AI), and so forth. Furthermore, several case studies where the
edge is key are explored followed by insights and prospect for future
work.

1 INTRODUCTION

T HE ever increasing requirements of wireless services in

Media & Entertainment (M&E), as well as in healthcare
and wellbeing demands are transforming the way data is
communicated and processed. Future networks are antic-
ipated to support massive number of connected devices
requesting a variety of different services such as mobile
video streaming, virtual and augmented reality (AR/VR),
as well as mission-critical applications. Such services require
data, computation, and storage to be performed more often
with ultra-high success rate and minimal latency. Multi-
access edge computing (MEC) has emerged as an infras-
tructure that enables data processing and storage at the
network edge as a means to cut down the latency between
the network nodes and the remote servers that typically
existed in cloud computing architectures [1]. Instead, edge

Mohammed S. Elbamby, Chen-Feng Liu, Jihong Park, and Sumudu Sama-
rakoon are with the Centre for Wireless Communications, University of Oulu,
90014 Oulu, Finland (emails: ﬁrstname.surname@oulu.ﬁ).
Mehdi Bennis is with the Centre for Wireless Communications, University
of Oulu, 90014 Oulu, Finland, and also with the Department of Computer
Science and Engineering, Kyung Hee University, Seoul 17104, South Korea
(e-mail: mehdi.bennis@oulu.).
Cristina Perfecto, is with the University of the Basque Country (UPV/EHU),
Spain. (email: cristina.perfecto@ehu.eus)
Xianfu Chen is with VTT Technical Research Centre of Finland, P.O. Box
1100, FI-90571 Oulu, Finland (e-mail: xianfu.chen@vtt.ﬁ).

computing can be provided as a service at the network edge
to minimize the service latency, network complexity, and
save the device nodes’ energy and battery consumption.

Edge networking in cellular systems aims to efﬁciently
provide the required connectivity, data access, bandwidth,
and computation resources to end devices [2], [3]. Edge base
stations in proximity of network users will not only relay
content from and to the network core, but will help execute
the users processing tasks, provide customized content and
computing services, and control the connectivity and inter-
action between coupled network nodes.

In essence, the performance of edge computing is pre-
dominantly assessed through two main components, com-
munication between the edge server and the end device,
and the processing at the edge server. Further, several
optimization aspects are considered to optimize these two
components. Optimizing the communication part can be
explored through wireless bandwidth and power allocation,
edge server selection, computation task distribution, task
splitting, and partial task ofﬂoading. For the processing part,
computation cycle allocation, task queuing and prioritiza-
tion, joint computing, and predictive computing are critical
factors to optimize the computing efﬁciency.

The focus of the ﬁfth generation (5G) cellular networks
has shifted from merely increasing the data communication
rate to providing service-speciﬁc performance guarantees in
terms of ultra-reliability and low latency. This shift is fueled
by the emergence of new use cases that require genuine
support to critical and latency-sensitive communication ser-
vices. Nonetheless, ultra-reliability and low latency are often
seen as contradictory requirements [4], compelling the use
of distinctive set of tools to be efﬁciently realized. Yet, these
individually challenging per se requirements are anticipated
to be met together for networks of diverse topologies and
heterogeneous services.

This article discusses the feasibility and potential of
providing edge computing services with latency and reli-
ability guarantees. In particular, it ﬁrst sheds light on the
services that can be offered from edge computing networks.
It follows by looking into how ultra reliable low latency
communication (URLLC) contributes to and beneﬁts from
edge computing. The article proceeds by presenting selected
use cases that reﬂect the interplay between edge computing
and URLLC. Finally, the article ends with our concluding
remarks and future works.

 
 
 
 
 
 
2 EDGE COMPUTING SERVICES

Legacy network architectures relied on centrally located and
centrally-controlled servers with high computational and
storage powers to provide on-demand computing to net-
work devices [5]. These servers could support high number
of network nodes over a large geographical area. However,
the large distance between the cloud computing server and
end-user device results in higher service latency. Moreover,
the centralized architecture limited the ability to provide
context-aware service, and to preserve the user data privacy.
Future wireless networks are evolving towards supporting
new set of applications that require minimal latency and
high level of service personalization. This motivated the
shift towards distributed networking architectures where
the network resources are available close to users at the
network edge. Edge computing aims to provide comput-
ing, content, and connectivity services closer to the data
source and consumption points. It is applicable to scenarios
with different network environments and use cases. This
diversity led to several implementations that did not follow
speciﬁc standard or interoperability. The European Telecom-
munications Standards Institute (ETSI) has been working on
solving this issue through providing an efﬁcient standard-
ized MEC that can be integrated across several applications
and service providers [6]. MEC also enables providers to
deploy edge computing services on top of wireless mobile
networks. This will allow cellular operators to integrate
computing into the services provided to their users. In this
regard, the term edge networking refers to the action and
process of serving a user or device at the network edge.

2.1 Content at the Edge

The idea of leveraging the network edge as a content
storage has gained popularity in the last few years [7].
Existing popularity patterns on the contents requested by
network users motivated developing proactive networks.
A proactive server can predict popular contents, prefetch
them from the core network, and have them stored and
readily available at the network edge, hence cutting down
delivery times once users request them. Proactive networks
require efﬁcient methods to predict the popularity of the
content to be cached, as well as high storage capacity to
cache this content. Edge caching not only minimizes the
service latency but also the load on the backhaul network
by prefetching the popular content in the off-peak times [8]–
[10]. Further, we envision that the notion of edge content
will be extended to include new types of data that can
be served from the network edge to support the new use
cases. One application to which the future network edge
will provide information is the distributed machine learning
application. The tight latency requirements and the need for
minimizing the information exchange mandate the develop-
ment of distributed machine intelligence schemes in which
edge servers play a major rule. Edge machine learning
[11], [12] will allow end users to locally develop their own
machine learning models instead of relying on centralized
approaches. However, ”machine learning applications” rely
on information from other network nodes that affect their
state and utility. The network edge role here will be to bring

2

the information necessary for enhancing or complementing
the local model close to the user.

2.2 Computing at the Edge

Processing is becoming as an important commodity to
cellular applications as content. The use of applications
ranging from smart factory, self-driving vehicles, to virtual
and augmented reality are growing by the day and are
becoming more resource greedy and less latency tolerant.
While part of the computing load of these applications is
served using their local processing units, constraints on size,
portability, battery life-time or lack of full access to task
data limit the ability to locally execute computing tasks.
Edge computing promises to pool powerful yet proximate
computing resources at the network edge, as well as to
provide connectivity and seamless information exchange
between neighboring nodes. It is also set to allow for the
realization of various 5G verticals that require low-latency
and high-reliable computing, such as virtual reality (VR)
and mission-critical Internet of Things (IoT) applications.
Yet, there are several components that need to be addressed
to realize low-latency and high-reliable edge computing.
Executing computing tasks at the edge often requires the
task data to be ofﬂoaded to the edge server before execu-
tion. This introduces communication delay that adds to the
service latency. In addition, how to queue and schedule the
computing tasks at the edge server plays a major role in
the queuing and processing latency. Our vision is that the
availability of more data and computing power will shape
how the edge network performs computing. Similar in vein
to proactive content caching, where knowledge of users
preferences and future interests allow for prefeching of their
content, data availability and machine learning will help to
speed up computing the tasks of network nodes. Predicting
vehicles future locations and path allows the edge network
to proactively render and deliver its high-deﬁnition live
map. In VR applications, predicting users future ﬁeld of
view (FoV) allows rendering the corresponding part of its
360◦ frame with minimal latency. Several other enablers are
vital to achieve ultra-reliable and low-latency computing,
such as task replications, parallel, and coded computing,
which will be addressed in detail in the following section.

2.3 Control at the Edge

Most of the existing cloud and edge computing architectures
rely on centralized decision-making schemes which requires
all the network nodes to send their local states data to a
central controller. Instead, distributed decision making, in
which the decision-making process is distributed among the
edge servers will allow for low latency, and privacy pre-
serving operation [13], which is essential for mission-critical
applications. Indeed, the control of the network devices
performance requires policies that adapt to their local states.
This can be challenging for scenarios where the local state
dynamically varies due to highly dynamic environment or
due to the nature of the application, such as in mission-
critical applications. Reinforcement learning (RL) solutions
can provide efﬁcient control policies that maximize the
system rewards by ﬁnding policies that map those dynam-
ically changing states into actions. These decision-making

3

Figure 1. Breakdown of key URLLC enablers for edge computing, exempliﬁed over an Industry 4.0/Smart Factory ecosystem that includes cyber-
physical systems, IoT and MEC.

policies need to take into account the effect of actions on
the environment and update the reward accordingly. In
centralized architectures, classical reinforcement learning is
often performed ofﬂine, not taking into account reliability
in decision making for example under noisy feedback. Edge
control can provide robust decision-making, where multi-
agent RL architectures can be used to provide communi-
cations efﬁcient methods that take latency and reliability
into account in dynamic and mission-critical environments.
Latency stems from the local state exchanges between edge
devices, in which the overhead due to the state exchange
increases exponentially with the number of devices. This can
be addressed using the mean-ﬁeld game (MFG) theory [14],
which can tackle this by approximating the average state as
a collection of agents’ instantaneous states.

3 URLLC ENABLERS AND CHALLENGES

3.1 URLLC overview

The prime focus of the recent groundswell of mission crit-
ical applications such as autonomous vehicles, immersive
VR/AR experiences, industrial automation, and robotics,
is to provide services with guaranteed high reliability and
low latency. Therein, latency deductions in channel estima-
tions, information exchange among the network elements,
decision making, computation tasks completion, and mem-
ory access within devices have utmost importance. Along
with them, guaranteed low-latency in operations, ensuring
connectivity, and speed-precision-and-accuracy of computa-
tions are essential to assure the reliability of mission critical
applications. Due to the on-device constraints on storage,
processing capability, and availability and accessibility of
network resources,
it is mandatory to utilize the edge
servers to maintain the quality-of-service in mission critical
applications. To support the communication among user

devices within mission critical applications and the edge
servers, URLLC, that has been introduced as one of the main
service in 5G systems, plays a pivotal role. In this section,
we identify the key enablers of reliability and low-latency
in wireless edge computing networks, and the challenges
towards realizing each of them. Moreover, in Table 1, we
summarize the issues and enablers of providing latency and
reliability guarantees in wireless edge computing networks,
as well as the applications and use cases these enablers are
targeting.

3.2 URLLC Enablers for Edge Computing

3.2.1 Low latency Enablers

There are several components that contribute to latency in
edge networking. In this regard, enabling low latency re-
quires several techniques to be implemented and integrated
together at different levels of edge networking systems. At
the communication level, proximity-based computing and
millimeter wave (mmWave) links play major roles in reduc-
ing task ofﬂoading latency from edge devices to servers by
reducing distance attenuation and providing broad band-
width with high directionality, respectively. In addition,
mmWave also enables wireless backhauling [15], [16] that
facilitates edge servers’ prefetching popular content with
low latency. At the processing level, proactive computing
provides signiﬁcant latency reduction while maximizing
resource efﬁciency by avoiding repetitive and redundant
on-demand computing [17]–[19]. Next, coded computing
is effective in reducing parallel computing latency, which
eliminates the dependency of processing tasks, thereby min-
imizing the worst-case latency due to a straggling task. Last
but not least, machine learning (ML) is crucial in supporting
low-latency mission critical applications, by empowering

URLLCEnablersforEdgeComputingControlPanelproximity-basedcomputinghighcapacitylinks(mmWave)proactivecomputingedgeML&federatedlearningmulti-connectivitytaskreplicationparallelandcodedcomputingextremeeventcontrolDemands/Challenges

bandwidth, backhauls

Enablers

mmWave

Low la-
tency

low propagation delay

proximity based computing

parallel and coded computing

4

MEC applications and use cases

extended reality, vehicular edge com-
puting (Sec. 4.1.1 and Sec. 4.1.2)
deep reinforcement learning based task
ofﬂoading (Sec. 4.2, use case 4)
[50], [51]

task

computing power,
dependency
low propagation delay,
energy efﬁciency
low prediction delay

proactive computing

use case 6 in Sec. 4.2

edge machine learning

edge computing for federated learning
(use case 1 in Sec. 4.2)

channel intermittency

multi-connectivity, task replication

use case 6 in Sec. 4.2 and [19], [44]

High
relia-
bility

low communication cost,
data privacy
rare event detection

federated learning

extreme event control

edge computing for federated learning
(use case 4 in Sec. 4.2)
extreme value theoretic edge comput-
ing and vehicular federated learning
(use cases 2 and 3 in Sec. 4.2)

Table 1
Challenges and enablers of realizing low latency and high reliability in wireless edge computing.

edge servers and devices to locally carry out their decision-
making.

Low Latency Enabler 1. High capacity mmWave links:
Driven by the spectrum shortage below 6 GHz, communi-
cations in the radio frequencies encompassing the electro-
magnetic spectrum from 30 to 300 GHz, i.e. the mmWave or
International Telecommunications Union (ITU)’s extremely
high frequency (EHF) band, have been attracting a growing
attention [20]–[22], to the point of being currently consid-
ered the most important technology to achieve the 10 Gbps
peak data rates foreseen for the upcoming 5G systems [23].
Having abundant available spectrum, the main appeal of
mmWave communications comes from the use of generous
bandwidths that –ranging from the 0.85GHz in the 28GHz
band to 5 GHz in the 73GHz band–are more than ten times
greater than Long Term Evolution (LTE)’s 20 MHz cellular
channel [24], and grant an important channel capacity in-
crease [25].

However, signal propagation at these frequencies is
harsh and inherently different from that at the microwave
band [26] experiencing 1) higher pathloss for equal antenna
gains due to a stronger atmospheric attenuation whereby
signals are more prone to being absorbed by foliage and
rain, 2) higher penetration losses as mmWaves are blocked
when trying to pass through walls, buildings, or obsta-
cles, and 3) higher transmit power consumptions than in
lower bands to preserve an equal signal-to-noise ratio (SNR)
unless directional antennas together with advanced sig-
nal processing that includes massive input massive output
(MIMO) [27] and beamforming (BF) techniques are used.
Notably, due to the shorter wavelengths in mmWave bands
it is possible to pack more antennas at the transmitter and
receiver devices and, thanks to the spatial degrees of free-
dom afforded, use analog or hybrid BF –fully digital BF im-
plies having one dedicated radio-frequency (RF) chain per
antenna which currently discourages its use in mmWaves

due to the unaffordable power consumption and costs– to
build a radiation pattern with narrow beams which will be
subsequently steered towards the receivers while the energy
radiated through the sidelobes is minimized or negligible.

To administer high capacity links with mmWaves, trans-
mitters’ and receivers’ mainlobes need to be precisely
aligned towards each other if favored with a clear, unob-
structed, line-of-sight (LOS) path. In practice, when a mobile
user equipment (MUE) is in the connected state, uplink (UL)
control channels are used to periodically feed back to the
base station (BS) its best transmit beam index; similarly
downlink (DL) control channels are used to report MUEs’
best transmit beams. Data transmission is then performed
through the best beam pair. However, during initial access
and handover, i.e. in random access, such information on
the best beams is not available which hinders taking full
beneﬁt from BF. Henceforth, in analog BF, to discover and
then maintain the best transmit-receive beam pairs, a series
of techniques referred to as beamtraining or beamsearching,
are applied. Then, beam tracking is performed to adapt
the beamforming, e.g., due to MUEs’ movement leading
to transmitter-receiver beam misalignments. Nevertheless,
a full new directional channel discovery process will need
to be triggered if the signal-to-interference-plus-noise ratio
(SINR) drops below a certain threshold due to e.g., block-
ages and/or interference [28]. As analog BF employs a single
RF chain, it is challenging to adjust the beam to channel
conditions, leading to some performance loss. Moreover,
analog BF does not provide multiplexing gains as it can
only operate a single data stream. Therefore, to bring all
the beneﬁts of mmWave while beneﬁting from multiplexing
gains for MEC, MIMO hybrid BF architectures, which strike
a balance between performance, complexity, and power con-
sumption, should be considered. Finally, as adaptive beam-
forming requires precise channel state information (CSI),
one of the key challenges for mmWave to work as a low-
latency enabler for MEC lies on the availability of expedited

CSI acquisition schemes together with directionality-aware
mobility and beam management procedures [29].

In the next subsection a series of reliability enablers
will be discussed to reduce the delay incurred to coun-
teract the intermittent blockages and temporal disruptions
of the mmWave channel. Largely, these techniques are in
line with the idea of overbooking radio resources as a
protection against channel vulnerability [30] or to consider
risk-sensitive approaches [31].

Low Latency Enabler 2. Proximity-based Computing: Re-
ducing the distance between the application and the MEC
server is a key latency enabler. This idea is motivated by the
concept of bringing the transmitter and the receiver closer
to one another yielding capacity improvements [21]. With
the low proximity between the application and MEC server,
over-the-air latency that has a signiﬁcant contribution to the
end-to-end (E2E), sometimes dominating over the comput-
ing latency, can be greatly minimized.

Network densiﬁcation, the concept of dense deployment
of small cells, remote radio units, and relay heads that has
been an attractive research interest during recent years [32]–
[37], plays a major role in proximity-based computing.
While boosting the capacity and coverage, the dense de-
ployment of access points offers the opportunity of intro-
ducing additional computing resources at the network edge.
Henceforth, the user devices in the network are capable of
uploading their computational tasks to access points and
download the corresponding outputs after the processing
with high data rates yielding lower latencies.

Another proximity-based computing technique is mobil-
ity assisted MEC. Therein, networks of connected vehicles,
unmanned autonomous vehicle (UAV), and robots with
high processing power can assist the computational tasks
of the users [38], [39]. The high processing power of above
devices that are dedicated to users provides low computa-
tional latencies. Moreover, their ﬂexible connectivity with
the users due to the mobility and high data rates therein
due to the proximity offer lower communication latencies,
yielding reduced E2E latencies.

Computing location swapping is another proximity-
based computing method. Therein, groups of users coexist
in either physical (located close by) or virtual spaces (in-
teract and/or share computing tasks). In his regard, prox-
imity alone provides low communication latency, yet could
yield poorly utilized computational resources. Combining
the user groups in virtual space and their physical loca-
tions, some users can swap their associated MEC servers
to improve both computing and communication latencies,
resulting better E2E performance [40].

Although the proximity-based computing enables low
latency in MEC, the concept itself brings up new challenges
to the network design and resource optimization therein.
The increased interference is one of the challenges in both
network densiﬁcation and computing location swapping.
Due to the limited availability of both communication and
computation resource, increased interference may degrade
both uplink and downlink communication yielding in-
creased E2E latency [41]. In this regard, interference avoid-
ance, management, and mitigation techniques as well as use
of higher frequency channels are viable remedies. Another

5

challenge is the frequent handover due to the dynamics
of environment and user mobility [41], [42]. While han-
dover may incur undesirable latencies, the concept of multi-
connectivity (MC) can be utilized, in which users receive
computing assistance from several MEC servers.

Low Latency Enabler 3. Edge Machine Learning: Inference
(or prediction) capabilities with low latency is one of the
main reason for ML to be popular in MEC as well as
several other communication applications such as coding,
beamforming, resource optimization, caching, scheduling,
routing, and security [43]–[46]. While the majority of the
ML-based communication system design literature is rooted
on the centralized and ofﬂine ML techniques, the upturn
of mission critical applications for massive number of con-
nected devices demands for the intelligence at the network
edge [11], [47]. In contrast to conventional centralized ML
designs, the edge ML is capable of generating inference
within an instance at the edge devices, presenting the op-
portunity to greatly reduce the E2E latency in MEC appli-
cations. Such intelligence at the edge devices can 1) predict
the uncertainties in channel dynamics, communication and
computation resource availability, interference, and network
congestion at the local devices; 2) explore and learn about
the network environment with minimal additional signal-
ing overheads; and 3) characterize and model the network
behavior in which the system performance is analyzed.
At the MEC servers, such prior knowledge provides the
opportunities to smartly schedule their computing resources
and share the results with the corresponding user devices.
Furthermore, at the events of connectivity losses, edge ML
at the user devices allows the decision making within the
devices using the forecast on system behaviors, allowing
uninterrupted end-user service experiences. This ability to
operate ofﬂine/off-grid can reduce the number of latency-
critical parallel tasks at the MEC server, in which network-
wide end user experience is improved.

The challenge of enabling low latency in MEC via edge
ML relies on the training latency and inference accuracy
therein. In the distributed setting, each edge device lacks
the access to the large global training data set, in which
training over local data can degrade the inference accu-
racy. To improve the inference accuracy, edge ML devices
may need often cooperation among one another or with
a centralized helper, which incurs additional overheads
and thus, increased training latency. In this regard, further
investigations need to be carried out to optimize the tradeoff
between training latency and inference accuracy depending
on the design architectures, communication models, and
application requirement.

Low Latency Enabler 4. Proactive Computing: Although
edge computing is capable of minimizing the latency in-
duced due to the high propagation delay of cloud com-
puting, it still experiences delay due to ofﬂoading the task
data to the edge server, processing delay, as well a queuing
delay for both operations. While these delays are inevitable
in some cases, there exists situations in which the task has
already been executed before for another user at a different
time. Take for example an AR case in which visitors of a
speciﬁc spot in an exhibition or museum request a speciﬁc
task of augmenting an object to the view of this spot, or

the task of object identiﬁcation by multiple vehicles in an
intelligent transportation systems (ITSs) system. Executing
these tasks redundantly each time it is requested is certainly
not resource efﬁcient, and is causing higher delays to these
tasks as well as other tasks sharing these resources. Here,
executing and caching the results of these tasks in advance,
such that they are served when requested with minimal
latency, can be a major latency minimizer.

The ideas of prefetching tasks [48] and proactive com-
puting [17], [18] aim to develop techniques that learns
and predicts which tasks are to be requested in the future
and pre-compute them. Indeed, the success of proactive
computing lies on a well-aimed choice of which tasks to
proactively compute and which are to leave for real-time
processing. Essentially, this involves developing efﬁcient
prediction methods that studies the popularity patterns of
the computing tasks to decide on which tasks to prefetch.
The idea also relies on the availability of storage capabilities
at the edge servers [49].

Low Latency Enabler 5. Parallel and Coded Computing:
The computing task data can be distributed over multiple
servers in different edge computing scenarios. For example,
in a smart vehicle scenario where the navigation map data
can be partly stored in several edge servers. Parallel execu-
tion of computing tasks over multiple servers signiﬁcantly
impacts the efﬁciency and speed of task execution. More-
over, it eliminates the need to collect the full task dataset in a
single entity. For example, partial ofﬂoading can be performed
where only a partition of the task is ofﬂoaded to where its
required input data is available [5]. The implementation of
parallel computing depends on the correlation between the
task partitions, i.e., only partitions that are not dependent on
each other can be executed in parallel, whereas dependent
tasks have to be executed sequentially. task dependency
graph models and task partitioning [5], [50] are used to
tackle the inter-dependency between the different task par-
titions.

A challenge in realizing parallel computing, however, is
the resulting high inter-server communication load. More-
over, it suffers from the straggling effect, where a missing
result from a single node delays the entire computation
process. The concept of coded computing has shown to
address both of these challenges [51]. Through exploiting
the redundancy in the task partitions execution at differ-
ent servers, coded multicast messages, e.g. via maximum
distance separable (MDS) codes, can be used to deliver the
results of the missing partitions simultaneously to multiple
servers. This approach signiﬁcantly reduced the amount
of data that has to be communicated between the servers,
at the expense of more redundant task executions at each
server. Coded computing also helps in minimizing the over-
all computing latency through minimum latency codes. In
conventional parallel computing task, each server executes
a partition of the task and returns its result to the client. In
this model, one delayed or failed partition will cause a delay
or failure to the entire task. Alternatively, by generating
redundant task data that are coded combinations of the
original task data and executing these coded tasks, the result
can be recovered by decoding the data from only a subset
of the servers, eliminating the effect of a delayed or failed

6

result. Optimizing the creation of the redundant coded tasks
enables an inverse linear trade-off between the computing
latency and computing load [52].

3.2.2 High Reliability Enablers

For MEC to fulﬁll its role and run applications on devices
behalf, i.e. ofﬂoading the computing, it needs to be able
to operate below stringent latency values, which are un-
achievable in traditional mobile cloud computing (MCC)
systems or too demanding to be run locally due to excessive
computational and communication power

In this regard, to exploit both the high capacity of 5G
mobile connections and the extensive computing capabili-
ties located at the edge cloud, the concept of reliability is
introduced with a two-fold interpretation: In the ﬁrst place,
we ﬁnd the classical notion of reliability related to error-
robustness guarantees. As such, it allows to be tackled at
different layers, including the reliability of the wireless link
at the physical layer (PHY). Another fundamental notion
of reliability, that has been widely adopted for wireless
communications and standardization bodies as the Third
Partnership Project (3GPP), is that of reliability understood
as a probabilistic bound over the latency.

Understood in its most classical form, it is common
that a toll in return for ensuring high reliability will have
to be paid in the form additional/increased delays. For
instance, at the PHY layer the use of parity, redundancy,
and re-transmission will increase the latency. Also, in multi-
user environments allocating multiple sources to a single
user while clearly beneﬁcial at an individual level, could
potentially impact the experienced latency of the remaining
users.

Next, we will set forth some of the enablers for both

notions of reliability.

High Reliability Enabler 1. Multi-Connectivity: Compared
to wired transmissions, in wireless environments temporary
outages are common due to impairments in the SINR. These
originate from, among others, stochasticity of the wireless
channels, ﬂuctuating levels of interference, or mobility of the
MUEs. The term multi-connectivity (MC) [53] encompasses
several techniques developed with the overarching aim of
enhancing effective data rates and the mobility robustness,
i.e. the reliability, of wireless links. For that purpose, MC
exploits different forms of diversity to cut down on the num-
ber of failed handovers, dropped connections and, generally
speaking, radio-link failures (RLFs) that might cause service
interruptions [54], [55].

MC solutions are classiﬁed as intra or inter frequency,
i.e., depending on whether they operate using the same fre-
quency or, otherwise, combine multiple carrier frequencies.
Examples of the former include coordinated multi-point
(CoMP) [56] transmissions and single frequency networks
(SFNs) [57]. CoMP involves a set of techniques that exploit
rather than mitigate inter-cell interference (ICI) to improve
the performance at the cell edge. On performing joint pro-
cessing, dynamic point selection (JP/DPS) or coordinated
scheduling and beamforming (CS/CB) in the UL/DL, BSs
effectively operate as if assembled in a distributed multiple
antenna system. SFNs embody a form of synchronous mul-
ticell transmission whereby various sources use the same

time and frequency resource to non-coherently transmit
signals to a receiver. The multiple received copies will be
then constructively combined if their propagation delays are
tightly bounded or, else, will induce inter-symbol interfer-
ence (ISI) [58].

As for inter-frequency MC, carrier aggregation (CA) [59]
and dual connectivity (DC) are its most noteworthy ex-
amples. In CA contiguous or non-contiguous component
carriers, possibly allocated to several different BSs, are
combined and the scheduling and interference manage-
ment orchestrated over these frequency bands aiming to
enhance the resulting system’s capacity. As for DC, this
framework provides solutions for inter-frequency, for het-
erogeneous networks (HetNets) scenarios, and for different
wireless standards MC so that a user equipment (UE) will
be simultaneously connected, respectively, in two different
frequencies, to two different types of BSs or two differ-
ent wireless standards [60]. Recently, the idea of DC for
mmWave and microwave bands has been proposed [33],
[61] as an effective approach to facilitate cellular mmWave
initial access (IA) [62] as well as mmWave handover [63].
In like manner, mmWave and sub 6 GHz DC can team
together to augment the reliability of the mmWave work-
ing as fallback to compensate eventual mmWave channel
vulnerability, e.g. to blocking events. Finally, the beneﬁts of
integrating communication interface diversity for reliability
purposes are also studied in [64] in the context of machine
type communications (MTC).

SFN operation is proposed in use case 6 detailed in
Section 4.2. The goal is to protect against mmWave channel
intermittence by increasing the rate of those links between
the millimeter wave access points (mmAPs) and the virtual
reality players (VRPs) that, otherwise, would jeopardize the
immersive experience.

High Reliability Enabler 2. Task Replication: While MC
can boost the reliability in the presence of channel ﬂuctua-
tions, it requires coordination between the different servers
that are connected to the end user. However, when coor-
dination is not possible, reliability can still be enhanced
through the task replication. Similar to packet replication in
data communication, a user can ofﬂoad a computing task
to multiple servers that are not connected to each other
and receive the result from whichever has the result ready
ﬁrst. This mechanism provides more guarantees of task
execution, at the expense of reduced system capacity, due to
the under-utilization of computing servers. One realization
of this concept is proposed in [65], namely, hedged requests,
is when the user sends one replica of the task to the server
that is believed to be most suitable, then follows by sending
another replica to an additional server after some delay.
Completion pending remaining requests are canceled once
a result is received from any server.

While task replication is can be efﬁcient in ensuring the
reliability in in the case of channel dynamics, it incurs sig-
niﬁcant additional load. To combat this, one can ofﬂoad the
task to an additional server only when the delay from the
ﬁrst server exceeds a certain threshold [65] This approach
is investigated in [19]. Therein, it shown that imposing
such condition can signiﬁcantly curb the latency variability

7

without inducing much additional load.

High Reliability Enabler 3. Federated Machine Learning:
While performing ML inference at the network edge yields
low latency, distributed training of their ML models across
different edge nodes improves the inference reliability. To be
speciﬁc, each learning agent optimizes its ML model during
the training phase so as to maximize the inference accuracy
over locally available training data. The measured inference
accuracy at the training phase is however not always identi-
cal to the inference accuracy at the test phase, primarily be-
cause of unseen training data samples. This accuracy gap is
known as the generalization error that measures the inference
reliability under unseen data samples [66]. A straightfor-
ward way to reduce the generalization error is exchanging
training data samples among edge nodes. Data exchange,
however, incurs extra communication and computation cost,
and may not be available for user-generated private data. To
address this problem, federated learning (FL) has recently
been proposed [67], [68], in which edge nodes exchange and
aggregate their local ML models, thereby preserving data
privacy, avoiding extra computation, and reducing com-
munication overhead when ML model sizes are sufﬁciently
smaller than data sizes.

FL is still a nascent ﬁeld of research, calling for co-
designing communication, computation, and ML architec-
tures [11], [47]. For instance, the original FL algorithm has
the communication payload size being proportional to the
ML model sizes, and thus cannot deal with deep neural
network models. Proper model compression and parameter
quantization techniques are thus needed, while trading the
increased communication efﬁciency off against the reduced
accuracy. Furthermore, the server in current FL algorithms
simply aggregates uploaded local models, although it has
higher computation resources compared to the edge devices.
Along with these FL architectures, computing task ofﬂoad-
ing, task scheduling, and resource allocations should be
jointly optimized towards achieving reliability under uncer-
tainties on MEC operations, including unseen data samples,
channel ﬂuctuations, and time-varying communication and
computation resources.

High Reliability Enabler 4. Extreme Event Control: As
mentioned previously, one reliability notion is the proba-
bility of violation or failure over a latency bound, which
can be mathematically expressed as Pr(Latency > Lbound).
This probability ranges from 10−3 to 10−9, depending on
the mission-critical application in 5G networks [69]. To
meet the ultra-reliability requirements, we should focus on
the extreme events with very low occurrence probabilities.
However, in classical communication systems, the designed
approaches are based on the expected metrics, e.g., average
rate and average latency, in which the random event real-
izations with higher probability distribution function (PDF)
values dominate the system performance. In other words,
the conventional average-based approaches are inadequate
for enhancing reliability performance, and instead we need
to take into account the metrics or statistics, which are
related to or affect the extreme events, such as

• worst-case measurement, e.g., largest latency in the

network,

• tail/decay behavior of the complementary cumulative

distribution function (CCDF),

• very low bound violation probability,
• threshold deviation and its higher-order statistics, e.g.,

variance,

while designing the URLLC-enabled MEC systems. To ana-
lytically analyze these metrics and statistics, extreme value
theory (EVT) [70], [71] is a useful methodology for math-
ematical characterization and, thus, provides a powerful
framework for extreme event control. Let us introduce the
fundamental theorems in EVT as follows, which character-
ize the aforementioned metrics and their statistics.

Theorem 1 (Fisher–Tippett–Gnedenko theorem [70]). We
consider n independent and identically distributed (i.i.d.) samples
i.i.d.∼ X and deﬁne
from a random variable X, i.e., X1, · · · , Xn
Zn := max{X1, · · · , Xn}. If Zn converges to a non-degenerate
distribution as n → ∞, we can approximate the limit as a gen-
eralized extreme value (GEV) distribution which is characterized
by a location parameter µ ∈ R, a scale parameter σ > 0, and a
shape parameter ξ ∈ R.

Among them, the shape parameter governs the GEV
distributions’ tail behaviors [71], which are sorted into three
types depending on the value of ξ.

1) When ξ > 0, the GEV distribution has a heavy-tailed
CCDF which is more weighted than an exponential
function.

2) When ξ = 0, the GEV distribution has a light tail, in
which the CCDF has a thinner tail than an exponential
function.

3) When ξ < 0, the GEV distribution is short-tailed. That is,
the CCDF has a ﬁnite upper endpoint at z = µ − σ/ξ.

When ξ ≥ 0, the upper endpoint of the CCDF approaches
inﬁnity.

In Theorem
Theorem 2 (von Mises conditions [71]).
1, the characteristic parameters (µ, σ, ξ) of the approximated
GEV distribution can be asymptotically found as per µ =
lim
, and ξ =
n→∞
−1 − lim
x→∞

X (1 − 1/n), σ = lim
n→∞

[1−FX (x)]f
[fX (x)]2

1
nfX (F −1

X (1−1/n))

F −1

(cid:48)
X (x)

.

Theorem 3 (Pickands–Balkema–de Haan theorem [70]).
Consider the random variable X in Theorem 1 and a threshold
d. As d → F −1
X (1), the CCDF of the excess value Y |X>d =
X − d > 0 can be approximated as a generalized Pareto dis-
tribution (GPD) whose mean and variance are ˜σ/(1 − ξ) and
(1−ξ)2(1−2ξ) , respectively.

˜σ2

Analogously to the GEV distribution, the GPD is char-
acterized by a scale parameter ˜σ > 0 and a shape pa-
rameter ξ ∈ R. In Theorems 1 and 3, ξ is identical while
σ = ˜σ + ξ(µ − d). Note that Theorems 1 and 2 provide a way
to characterize the worst-case metric and its tail behavior,
whereas Theorem 3 is directly related to the bound violation
and its statistics. Since the characteristic parameters of the
GEV distribution and GPD are identical or related, the
results of these three theorems are complementary to one
another.

Nevertheless, some tradeoffs and dilemmas exist when
we apply the results of EVT and estimate the characteristic

8

parameters. For example, we need to trade off data availabil-
ity, which affects the performance, convergence speed, and
estimation accuracy. Speciﬁcally, given N i.i.d. realizations
of X (i.e., N/n realizations of Zn), larger n theoretically
gives the better approximation of the GEV distribution
but slows down the convergence of parameter estimations
due to the less availability of data samples of Zn. The
similar tradeoff between high threshold d and availability
of threshold-exceeding data can be found from Theorem 3.
Additionally, if the distribution of X, e.g., delay of a single
user, is unknown beforehand, this agnostic makes Theorem
2 difﬁcult to characterize the network-wide largest delay.
Fortunately, thanks to the mature development in the ML
ﬁeld, the aforementioned issues can be tackled by using the
ML approaches, in which unsupervised learning provides
a way to infer a mathematical expression of the unknown
distribution, while the lack of available data is addressed in
an FL manner by aggregating and averaging the estimated
characteristic parameters of all distributed devices.

4 APPLICATIONS AND USE CASES

In this section, we elaborate on some of the prospective
services and applications for whom ofﬂoading their com-
puting tasks to the edge signiﬁcantly improves their per-
formance in terms of latency and reliability. In particular,
we focus on two scenarios where ofﬂoading task computing
to the network edge will be beneﬁcial: 1) when end users
have limited computing capabilities, e.g., VR head mounted
devices (HMDs)); and 2) when end users have sufﬁcient
computing and energy resources, but are accessible only
to a fraction of the entire information for the computation
input, e.g., vehicular edge computing scenarios. We follow
by presenting different edge computing use cases in which
the URLLC enablers are utilized.

4.1 Edge Computing Applications

4.1.1 Extended Reality

Extended reality (XR) is an umbrella term that covers all
virtual or combined real-virtual environments, including
VR, AR and mixed reality (MR). These environments differ
in the nature of the content a user sees or interacts with.
While VR describes environments where users are fully
immerse in a virtual world, AR refers to the view of a virtual
environment that is merged or supplemented by elements
or inputs from the real-world. AR can be categorized as a
special case of the more general MR, which refers to the
environments that mixes together real and virtual elements
that can interact with each other.

XR is anticipated to be one of the leading applications to
leverage edge computing. Providing high quality XR expe-
rience comes with high computation resource demand. At
the same time, XR applications are highly sensitive to delay.
Typically, a maximum E2E delay, also known as motion-to-
photon (MTP) delay, of 15-20 milliseconds can be tolerated
in VR. Higher delay values trigger what is known as motion
sickness, resulting from a visual-motor sensory conﬂict. This
makes it unrealistic to rely on remote cloud servers for
processing. On the other hand, Processing XR locally on
the user device has several complications. First, XR devices,

such as HMDs and smartphones are often equipped with
limited compute capabilities. This limitation is due to the
device size, manufacturing cost, as well as to limit the
heat generated from powering the device. Second, running
applications on different types of devices, with different
hardware, operating systems, and platforms is a challenging
task. For these reasons, existing standalone XR devices often
provide limited content quality. Standalone VR headsets
operate with reduced frame resolution and frame rate [72],
whereas AR headsets such as Microsoft HoloLens restrict
the amount of renderable polygons [73].

For these reasons, the success of XR requires providing
high computation and storage resources close to the end
users. In this regard, edge computing is an intuitive solution
to provide such services [74]. Today’s most powerful VR
headsets rely on edge computers to perform sophisticated
rendering. However, wired connections are still used be-
tween the headsets and the edge servers, due to the high rate
requirement of VR applications. This limits the mobility and
convenience of VR users and hence decrease the quality-of-
experience (QoE).

The need for a better XR QoE and the advancement in
wireless communication capabilities motivate the develop-
ment of wireless XR systems that incorporate powerful edge
computers and high capacity wireless links [44], [74]–[77].
MmWave communication can provide large spectrum and
high data rates, making it a solid candidate for wireless
XR. Moreover, the directionality of mmWave links allow
for leveraging multi-user transmission techniques such as
multicasting and broadcasting to deliver common and cor-
related content to multiple users in a way that minimizes
the communication delay. However, directional mmWave
links suffer outages due to signal blockage. This affects
the link signal quality and increases the channel variability,
and hence decreases the link reliability. MC can be a viable
solution to provide robust mmWave communication. Using
MC, an XR user maintains multiple simultaneous commu-
nication links with multiple servers.

4.1.2 Vehicular Edge Computing and V2X/V2V for ADAS:

Future autonomous driving vehicles comprised as nodes
of the Internet of Vehicles (IoV), a larger mobility network
which can be considered as an extended application of the
IoT to ITSs [78], will operate as hubs integrating multiple
technologies and consuming and producing massive vol-
umes of data [79]. The advanced driver-assistance systems
(ADASs) to be equipped in these vehicles, especially those
pertaining to the area of trafﬁc safety, heavily depend on
reliable and instantaneous decision-making processes that
hinge on inputs from multiple sensory data sources, includ-
ing laser imaging detection and ranging (LIDAR), automo-
tive radar, image processing, computer vision, etc. [80]. As
an example, we can think of successful object identiﬁcation
from LIDAR point clouds or speed and trajectory predic-
tion for dynamic objects moving within a vehicle’s vicin-
ity. Hereof, it is essential that these vehicles are equipped
with powerful computing and processing capabilities to
swiftly handle high data volumes rather than solely re-
lying on cloud services that, in the above example, may

9

classify the objects or predict trajectories from raw data
with higher accuracy but, possibly, incurring to do so in
unacceptable delays. Moreover, for next-generation ADAS
it is envisaged that vehicles will communicate with each
other as well as with an increasingly intelligent roadway in-
frastructure through the use of vehicle-to-everything (V2X)
and vehicle-to-vehicle (V2V) communications, ultimately
exploiting high capacity mmWave links [81], [82]. Conse-
quently, the cumbersome volume of locally generated data
could be exacerbated by the acquisition of data from both
the environment and from surrounding vehicles.

Indeed, vehicular edge computing will play a pivotal
role to support delay-sensitive as well as future emerging
multimedia-rich applications in vehicular networks, which
is buttressed by the growing body of literature devoted to
the area of content-centric applications of vehicular MEC
[83]–[86] that are frequently combined with ML to provide
reliability as edge analytics [87], to leverage huge volumes
of information [86] or to provide an integrated framework
for dynamic orchestration of networking, caching, and com-
puting resources in next generation vehicular networks [88].
Being not nearly as tightly constrained by size or by the
access to a power supply as their counterpart IoT devices
or smartphones, the computational and storage capabilities
in vehicular terminals could allow them to run locally or
collaboratively, using vehicles as the infrastructures for com-
munication and computation as proposed in [89], resource-
hungry applications1. In this regard, provided that com-
puting and processing capabilities may not be the limiting
factor, a second advantage of running these applications in
the network edge is substantiated by the availability of data
collected from multiple vehicles in edge servers. Access to
this information raw or preprocessed can augment individ-
ual vehicles’ situational awareness by extending their own
sensing range. Resorting to edge contents can thus provide
a bigger picture at acceptable delays.

The later idea is exempliﬁed in the third usecase in
upcoming Section 4.2 where the information from different
vehicles is combined in the network edge following FL
principles and used to reﬁne a global model for transmission
queue length distribution for the purpose of providing ultra-
reliable low-latency V2V communications.

4.2 Use Cases

Next, we present different case studies in which the URLLC
enablers are utilized in edge computing settings.

Use case 1. Edge Computing for Federated Machine Learn-
ing: As addressed in Sect. 3.2.1 and 3.2.2, edge ML is
envisaged to be a key enabler for URLLC, in which both
inference and training processes of ML models, e.g., neural
networks (NNs), are pushed down to the network edge [11].
This direction of edgeML has been fueled by FL [67], [68],
[91]–[94] under a data split architecture (see Fig. 2(a)), where
edge devices collectively train local models with their own
user-generated data via a coordinating edge server that

1. However, the longer product’s life-span in the automotive indus-
try, according to the US Department of Transportation as of 2018 the
average age of on-the-road vehicles is over 11 years [90], could quickly
turn onboard central processing unit (CPU)/graphical processing unit
(GPU) processing capabilities obsolete.

10

(a) Communication cost.

(b) Test accuracy.

Figure 3. Communication cost and inference accuracy of federated
learning (FL) and federated distillation (FD) with or without federated
augmentation (FAug) in the MNIST classiﬁcation problem, where each
device stores a 5-layer convolutional neural network (CNN). For FAug,
the conditional generative adversarial network (GAN) consists of a 4-
layer generator NN and another 4-layer discriminator NN.

Use case 2. Extreme Event-Controlled MEC: For the ex-
treme event-controlling computation and communication
co-design in [99], [100], we studied a multi-user MEC sce-
nario as shown in Fig. 4, in which multiple MEC servers
with different computation capabilities are deployed. In this
setting, the UE manages its local resource (i.e., total power
budget) for computation and communication, i.e., task of-
ﬂoading, while the MEC server schedules its computational
resources for the UEs’ ofﬂoaded tasks. Herein, we consider
the length of the task queue as a latency measurement since
queuing latency can be reﬂected by the queue length. For
the reliability concerns, we are concerned about the bound
violation probability and higher-order statistics of threshold
deviation as highlighted in high reliability enabler 4. In this
regard, we ﬁrst impose a constraint on the queue length2
bound violation probability as

lim
T →∞

1
T

T
(cid:88)

t=1

Pr (cid:0)Q(t) > d(cid:1) ≤ (cid:15) (cid:28) 1.

(1)

2. The notation Q generalizes the lengths of all task queues at the

UEs and MEC servers.

(a) Data split.

(b) Model split.

Figure 2. Edge ML architectural splits: (a) data split and (b) model split.

aggregates locally computed model updates, referred to as
model state information (MSI). The MEC framework can
further improve FL by its co-design with training architec-
tures and algorithms. In view of this, on the one hand, each
edge device is able to optimize the MSI type depending
on the NN model size and channel quality. As done in
FL, one can exchange the model parameter MSI whose
payload size is proportional to the model size, which is
not feasible for deep NNs under poor channel conditions.
Alternatively, one can exchange model output MSI whose
payload size is independent of the model size, referred to
as federated distillation (FD) [95]. As shown in Fig. 3(a),
this fundamentally results in FD’s incomparably smaller
communication payload per MSI exchange than FL, and can
thereby better cope with poor channel conditions.

On the other hand, the edge server can assist in the train-
ing process by exploiting its extra computation and commu-
nication resources. A compelling example is to rectify the
non-IID training dataset incurred by the user-generated na-
ture of data, wherein entirely un-correlated (non-identical)
and/or too similar (non-independent) data samples across
devices negate the beneﬁt of distributed training [96]. To
this end, in federated augmentation (FAug) [95], the edge
server ﬁrst collects few seed samples from edge devices,
and oversamples them (e.g., via Google’s image search for
visual data) through its fast connection to the Internet. Then,
the edge server can utilize its high computing power for
training a generative model (e.g., conditional generative
adversarial network (GAN) [97]). Downloading the trained
generator empowers each device to locally augment deﬁ-
cient data samples until reaching an IID training dataset.
With FAug, both FL and FD yield higher test accuracy as
shown in Fig. 3(b), at the cost of slight increase in commu-
nication cost as illustrated in Fig. 3(a).

Lastly, a very deep NN (e.g., Inception V4 NN model
consuming 44.3 GB [98]) cannot ﬁt into a single device’s
memory, and has to be partitioned into multiple segments
stored across edge devices and server, i.e., model split (see
Fig.2(b)). Here, the model’s local and ofﬂoaded computa-
tions should be orchestrated over wireless links, by optimiz-
ing the partitioning strategy based on the NN’s topology
and constituent layers. This calls for a novel MEC frame-
work that takes into account not only communication and
computation resources but also NN forward and backward
propagation dynamics intertwined with channel dynamics.

devicecloud serverMSIensemble➁sample➀➂training dataedge serverensemblelocal MSI➀➁➁global MSIedge serveraggregateintermediate MSI➀➁devicecloud serverMSIensemble➁sample➀➂training dataedge serverensemblelocal MSI➀➁➁global MSIedge serveraggregate➀➁intermediate MSI➂45678910Number of Devices10510610710810910101011Sum Communication Cost (bits/epoch)FL+FAug (IID)FL (non-IID)FD+FAug (IID)FD (non-IID)FDFLnon-IID45678910Number of Devices0.650.70.750.80.850.90.951Test AccuracyFL+FAug (IID)FL (non-IID)FL+FAug (IID)FL (non-IID)FLFDnon-IID11

Figure 4. Extreme Event-Controlled MEC architecture.

(a)

(b)

(c)

Figure 5. (a) Tail distributions of the excess queue length and the approximated GPD of exceedances, (b) 99th percentile of the queue length, and
(c) mean and standard deviation of exceedances over the 99th percentile queue length, versus processing density.

(cid:0)X(t)|Q(t) > d(cid:1) ≈

Here, d and (cid:15) are the given bound and tolerable violation
probability. Let us further focus on the excess value over the
bound d, which is denoted by X(t)|Q(t)>d = Q(t) − d > 0.
By applying Theorem 3, we approximate the exceedances
as a GPD with the characteristic parameters (˜σ, ξ). The
mean and variance are E(cid:2)X(t)|Q(t) > d(cid:3) ≈ ˜σ
1−ξ and
Var
(1−ξ)2(1−2ξ) , respectively. We can
ﬁnd that the smaller ˜σ and ξ are, the smaller the mean
value and variance. Since the approximated GPD is just
characterized by the scale and shape parameters, we im-
pose thresholds on these two parameters, i.e., ˜σ ≤ ˜σth
and ξ ≤ ξth. Subsequently, applying the two parameter
thresholds and Var(X) = E[(X)2] − E[X]2, we consider the
conditional constraints on the mean and second moment of
the excess queue length

˜σ2

lim
T →∞

1
T

T
(cid:88)

E(cid:2)X(t)|Q(t) > d(cid:3) ≤

˜σth
1 − ξth ,

(2)

t=1
T
(cid:88)

1
T

E(cid:2)[X(t)]2|Q(t) > d(cid:3) ≤

lim
T →∞

(cid:0)1 − ξth(cid:1)(cid:0)1 − 2ξth(cid:1) . (3)
Taking into account the above three requirements for the
extreme events, we trade off the UE’s computation power

t=1

2(cid:0)˜σth(cid:1)2

and communication power in the extreme event-controlling
computation and communication co-design.

The effectiveness of characterizing threshold deviation
by the Pickands–Balkema–de Haan theorem, i.e., Theorem 3,
is veriﬁed in Fig. 5(a). Therein, Pr(Q > d) = 3.4×10−3 with
d = 3.96 × 104. Additionally, in contrast with the schemes
without edge computing and without local computation
capability, the extreme event-controlling approach achieves
the better performance, in terms of the extreme event-related
metrics shown in Fig. 5(b) and Fig. 5(c), in the considered
MEC system.

Use case 3. EVT/FL Ultra-Reliable Low-Latency V2V Com-
munication: The idea of how to combine extreme value
theory (EVT) and FL to enable URLLC in vehicular com-
munication networks, referred as extFL, is discussed in our
preliminary study [101], and illustrated in Fig. 6. Here, vehi-
cles observe their queue length samples and utilize the tail
distribution of queue lengths at the vehicular transmitters
over the whole edge network to optimize their transmission
decisions such that the worst-case queue lengths are mini-
mized while ensuring reliability in terms of queuing latency.
The analytical parametric model of the aforementioned tail

Local-computation queue𝑄𝑄(𝑡𝑡)Outgoing tasks for computationQueue length𝐴𝐴(𝑡𝑡)𝑅𝑅(𝑡𝑡)Task arrivalsMEC serverUEMEC serverMEC serverUEUEOffloaded-task queue0102030405060708090100110120ExcessqueuelengthX|Q>3.96×104(kbit)00.10.20.30.40.50.60.70.80.91CCDFNumerialresultApproximatedGPDwith(σ,ξ)=(9×103,0.23)00.40.81.21.622.42.83.23.64Processingdensity(cycle/bit)×10402040608010012014016018020099thpercentile(kbit)Non-MECFully-oﬄoading,30UEsLocal-computationqueue,30UEsTask-oﬄoadingqueue,30UEs0.40.81.21.622.42.83.23.64Processingdensity(cycle/bit)×104100101102Meanandstandarddeviation(SD)ofexceedance(kbit)Mean,fully-oﬄoadingSD,fully-oﬄoadingMean,Task-oﬄoadingqueueSD,Task-oﬄoadingqueue12

Figure 6. Operational structure of EVT parametric FL (extFL).

distribution is obtained via EVT. Naturally, the evaluation
of above parameters is carried out by gathering all queue
length samples at a central controller, the MEC server, with
the additional costs of communication and computation
overheads. In contrast to the centralized approach, here, FL
is used to reduce the communication payload by allowing
individual vehicles to learn the tail distribution by exchang-
ing a simpliﬁed model (two gradient values) instead of their
raw local queue length samples, i.e. enabling URLLC with
the aid of ML at the edge devices.

The goal is thus to minimize the network-wide power
consumption of a set of vehicular user equipments (vUEs)
while ensuring low queuing latencies with high reliability.
However, there still exists worst-case vUEs experiencing
high latencies with a low probability whose performance
losses are captured by extreme events pertaining to vehicles
queue lengths exceeding a predeﬁned threshold with non-
negligible probability. The principles of EVT characterize the
tail distribution of the queue lengths exceeding a predeﬁned
threshold by a generalized Pareto distribution with two
parameters scale and shape, respectively. The concepts in
maximum likelihood estimate (MLE) are used along FL to
estimate the scale and shape parameters of the queue tail
distribution locally at each vUEs over the queue length
samples. Therein, occasionally, local estimations and the
gradients of MLE, known as local model at each vUEs are
shared with the MEC server. The MEC server does model
averaging and shares the global model with the vUEs to
update their local estimations. Using the knowledge of the
tail distribution over the network, the transmit power of
each vUE is optimized to reduce the worst-case queuing
delays.

Fig. 7(a) compares the amount of data exchanged and
the achieved V2V communication reliability of extFL with
a centralized tail distribution estimation model, denoted as

CEN. Note that the CEN method requires all vUEs to upload
all their queue length samples to the RSU and to receive
the estimated GPD parameters. In contrast, in extFL, vUEs
upload their locally estimated learning models and receive
the global estimation of the model. As a result, extFL
yields equivalent or better end user reliability compared
to CEN for denser networks while reducing the amount
of data exchange among vUEs and the RSU. The worst-
case vUEs queue lengths, i.e., queue lengths exceeding q0,
are compared in Fig. 7(b). Here, the mean indicates the
average queuing latency of the worst-case vUEs while the
variance highlights the uncertainty of the latency. As the
number of vUEs increases, it can be noted that both the
mean and variance in extFL are lower than the ones in CEN.
The reason for above improvement is the reduced training
latency in extFL over CEN.

Use case 4. Deep Reinforcement Learning for Optimized
Edge Computing Task Ofﬂoading: The task ofﬂoading
decision-making in edge computing networks is a chal-
lenging task in the presence of environmental dynamics.
This situation is aggravated in ultra-dense networks, where
solutions to break the curse of dimensionality is desperately
needed. In the works [102], [103], a discrete-time Markov
decision process was adopted to model the problem of
expected long-term MEC performance optimization in an
ultra-dense radio access network, where a number of BSs are
available for computation task ofﬂoading. For a represen-
tative wireless charging enabled MUE, whether to execute
an arriving computation task at the local mobile device
or to ofﬂoad the task for edge server execution via one
of the BSs should adapt to the environment dynamics in
an intelligent manner. These environment dynamics may
consist of random computation task arrivals, time-varying
communication qualities between the MU and the BSs and
the sporadic energy availability at the mobile device. The

1Collectfromvehiclesexcesssamples2Uploadlocalmodel(∇dfduu,du,|Qu|)3Downloadglobalmodel(∇dfd,d,(cid:80)u|Qu|)4CalculateTxpowerandRBallocationforV2Vcommun.BasedonthelocalortheglobalmodelVUEu···V2VlinkPerformModelAveraging(cid:55)→GlobalModel···FederatedLearningaUpdatelocallearningmodel(∇dfduu,du,|Qu|)bEnforcenewpolicyVUEutransmissionqueuelengthq0queuethresholdtime······························RSUVehicularNetwork···············GoalLearnσ,ξfromdistributedlycontributedqueueexcesssamplestoimprovetheaccuracyq0distributionGPD(σ,ξ)13

reinforcement learning for MEC performance optimization
is brieﬂy depicted as in Fig. 8.

In Fig. 9, we compare the average cost performance from
the Proposed deep reinforcement learning algorithm with
three baselines: 1) Local – Whenever a computation task
arrives, the MUE executes it at the local mobile device
using the queued energy units; 2) Server – All arriving
computation tasks are ofﬂoaded to the edge server for com-
puting via the BSs with the best communication qualities;
and 3) Greedy – When the computation task queue as
well as the energy queue are not empty at a time slot, the
MUE decides to execute the task locally or at the cloud to
achieve the minimum immediate cost. We conﬁgure a DQN
of one hidden layer with 512 neurons. The replay memory
is assumed to have a capacity of 5000 and we select the
size of the mini-batch as 100. From Fig. 9, we can clearly
see that compared to the baselines, the deep reinforcement
learning algorithm realizes best performance in average
cost. A higher task arriving probability ρ indicates a longer
average task execution delay, hence a larger average cost.
As the average energy arrival rate increases, the average
cost improves due to the decreased failure of processing an
arriving computation task.

Use case 5. Edge ML Enabled 360◦ VR Multicast Transmis-
sion

Our previous work in [44] considered merging ML and
mmWave multicasting to optimize the proactive wireless
streaming of FoV-based high deﬁnition (HD) 360◦ videos in
a multi-user VR environment with low latency guarantees.
Hereof, the use of edge ML to predict users’ FoV in advance
is pivotal to leverage inter-user correlations and curb the
latency. These predicted correlations will ultimately drive
both how contents are transmitted and the beamforming
decisions at the mmWave base stations.

A VR theater scenario consisting of a network of VR
users watching different HD 360◦ VR videos streamed in
the mmWave band over a set of distributed small cell
base stations (SBSs) is studied. The SBSs will report users’
6 degrees-of-freedom (6DoF) pose as well as CSI and pro-
duce multiple spatially orthogonal beams to serve shared
FoV video content to groups of users (multicast) or a single
beam (unicast) following the scheduling decisions adopted
at the edge controller. By optimizing video frame admission
and user scheduling, the goal is to provide a highly reliable
broadband service for VR users that deliver HD videos with
a latency that is below the MTP latency limits with very high
probability.

To achieve this proactive content transmission and per-
form a head movement pattern recognition predicting users’
upcoming tiled-FoV, a sequential
learning model based
on gated recurrent units (GRUs) [105], [106] is selected.
Speciﬁcally, GRUs are a form of recurrent neural networks
(RNNs) that include a double gating mechanism to govern
the impact of past hidden states over the new output states
and effectively tackle long-term dependencies. To that pur-
pose, an architecture based on 2 layers of GRU cells with
a hidden state size equal to 512 separated by a rectiﬁed
linear unit (ReLU) activation are stacked. The output is then
fed to a serial to parallel (S/P) layer and to a dense neural
layer. Given the multi-label nature of the learning model, a

(a)

(b)

Figure 7. Comparison between CEN and extFL. (a) The amount of
data exchanged between RSU and VUEs (left axis) and the achieved
reliability (right axis). (b) Mean and variance of the worst-case VUE
queue lengths.

challenges for the problem-solving lie in the lack of any
a priori knowledge of any environment dynamic statistics
along with the high dimensional state space. A deep rein-
forcement learning technique shows the power of achieving
an optimal solution.

More speciﬁcally, the objective of the MUE is to minimize

an expected inﬁnite-horizon discounted cost given by

(cid:34) ∞
(cid:88)

Q(s, a) = E

(cid:35)
(γ)t−1 · c(cid:0)st, at(cid:1) |s1 = s, a1 = a

,

(4)

t=1

where γ ∈ [0, 1) is the discount factor, while the immediate
cost c(st, at) after performing an action at under a state
st at each time slot t takes into account the incurred task
execution delay and the penalty of failing to process an
arriving computation task. Once we obtain the optimal Q-
function, the optimal action a∗ can be made by the MUE
following a∗ = arg mina Q(s, a) under a state s. Instead
of using a conventional Q-learning to ﬁnd the optimal
Q-function, we resort to a deep-Q network (DQN) [104]
Q(s, a; θ) to approximate Q(s, a) with θ being the set of pa-
rameters of the neural network. The procedure of the deep

14

Figure 8. Illustration of deep reinforcement learning for mobile-edge computing performance optimization.

incorporates a penalty whereby quality is trade in exchange
for not violating a maximum latency bound. For simulation
purposes, a small size theatre with capacity for 50 users
with SBSs are located at ceiling level in its upper 4 corners
is selected. Fig. 11 evaluates the impact of the requested
HD video quality by representing the average and 99th
percentile delay, the HD delivery rate and Jaccard index
measured while 30 users watch one out of the 3 available
VR videos for an increasing requested video chunk size.

Fig. 11 clearly shows the tradeoff between frame delay
and HD streaming rate. As the chunk size increases, the
average and 99th percentile delays increase for the differ-
ent schemes. Moreover, comparing UREAC with the other
schemes, it is shown that multicasting brings 40 − 50%
increase in the HD rate and 33 − 70% latency reduction
through the utilization of shared FoVs of different users.
By delivering the predicted frames in advance, both the
MPROAC and MPROAC+ minimize the average delay without
sacriﬁcing the HD quality rate. Moreover, our proposed
MPROAC+ scheme is shown to also keep the worst delay
values bounded due to imposing the constraint over the
latency.

The tradeoff between frame delay and quality is further
illustrated the results for different values of the Lyapunov
parameter Vδ are compared; as Vδ increases, the scheduling
algorithm prioritizes maximizing users’ HD delivery rate,
whereas at lower values of the scheduler prioritizes keeping
the delay bounded with high probability. This comes at the
expense of having lower HD delivery rate.

Lastly, the Jaccard similarity in Fig. 11(d) illustrates the
tradeoffs between effective vs. transmitted contents. At low
trafﬁc loads, the Jaccard index is low, which is due to the
large amount of excess data delivered due to transmitting
an estimated user/cluster level FoV. As the trafﬁc load
increases, the proactive schemes transmit more real-time
frames, which increases the Jaccard index. The Jaccard index
decreases again at higher trafﬁc loads as the effect of missed
frames increases (once the average delay is close to reaching
the deadline, as can be seen in Fig. 11(a)).

Figure 9. Average cost per time slot versus average energy arrival rate
under MILD (ρ = 0.3) and HEAVY (ρ = 0.5) task arrival probabilities,
respectively represented with solid and dashed lines.

sigmoid activation layer maps the N sized dense output to
the N logits, one for each tile in the equirectangular (EQR)
projection of the 360◦ VR video frame, which are binarized
with a cutoff layer such that

(cid:98)yfp
u,n =

(cid:40)

1, σ(Wdh(2)
0, otherwise,

f + bd)n ≥ γth,

(5)

where Wd, bd are the weights and biases of the dense fully-
connected layer and γth is the threshold value for the cutoff
layer. The predicted FoV for a user u and frame index
fp = f + TH is retrieved as (cid:99)N fp
u,n =
1}.

u = {n ∈ [1, ..., N ]: (cid:98)yfp

Fig. 10 provides an overview of the building. The output
of the DRNN is fed to a user clustering module and The
former constitutes one of the inputs for a scheduler the Lya-
punov Drift plus penalty approach. In addition to our pro-
posed scheme MPROAC+, the performance of three reference
baselines with reactive unicast and multicast, and proactive
multicast transmission capabilities, correspondingly, UREAC,
MREAC, and MPROAC is evaluated. Our proposed approach

InternetEdge ServerFiber LinksBase StationsComputationOffloadingMobile UserWireless ChargingEnergy QueueTask QueueCurrent  StateLoss and GradientParameter Updatingɛ-Greedy PolicyMini-Batch⁞ ⁞ ⁞ ⁞ DQN⁞ ⁞ ⁞ ⁞ Target DQNReplay MemoryCurrent StateActionImmediate CostNext StateCurrent StateActionImmediate CostNext StateCopyActionDeep Reinforcement Learning Loop15

Figure 10. Operational structure and building blocks of the edge controller that coordinates the DRNN FoV prediction-aided proactive content quality
adaptation for the mmWave 360◦ VR video streaming.

Figure 11. (a) Average delay, (b) 99th percentile delay, (c) HD delivery rate and (d) Jaccard index performance in sT-3v, respectively, as a function
of the HD chunk size, for V = 3 videos, K = 2 ×V clusters, TH = 5 frames, and Lyapunov trade-off Vδ = 1·108 and Vδ = 1·109.

Use case 6. MEC Enabled Multi-User VR Gaming Arcade
We consider a practical use case of wireless VR to deliver
a low latency service to multi-user scenario of users play-
ing VR video games in a gaming arcade. This scenario,
that is fully detailed in our previous work [74], is highly
demanding due to the tight latency tolerance in VR as
well as the state dynamics of the user due to the game-
speciﬁc actions taken by themselves or by other players that
affect what content should be shown to them. The users are
served wirelessly through multiple mmAPs wired to edge
computing and storage servers. These servers receive the
users 3-dimensional (3D) location coordinates, their 3D pose
that consists of roll, pitch, and yaw angles, and their game-
related actions. The servers will render the corresponding
frames in HD resolution and deliver it wirelessly to users.
Hence, the latency consists of the processing latency at the
server and the communication latency to deliver the HD
frames expressed as

Duf (t) = ξf u(Dcp

uf (t) + Dcm

uf (t) + τ EP),

(6)

where ξf u represents a binary indicator that equals 1 when
the HD video frame is delivered to VRP u and equals 0 if the
low quality (LQ) frame is delivered, Dcp
uf are the
computing and communication delays of HD frame f ini-
tiated from user u, and τ EP is the processing latency which

uf and Dcm

accounts for the edge server processing, storage processing,
and the UL transmission of user pose and action data. Let
the computing delay Dcp

uf be expressed as follows:

Dcp

uf (t) =

(cid:18) κLHD
f u
ce

(cid:19)

+ Wuf (t)

zf u(t)(1 − yf u(t)),

(7)

where ce is the computation capability of edge server e,
zf u(t) and yf u(t) indicate that the video frame f of user u is
scheduled for computing, and is cached in the fog network
at time instant t, respectively, and Wuf is the computation
waiting time of HD frame f of user u in the service queue,
deﬁned as Q(t). Furthermore, let the communications delay
Dcm

uf be given as

Dcm

uf (t)=arg min
du

Dcp

uf (t)+du
(cid:88)

t(cid:48)=Dcp

uf (t)+1

(cid:18)

Ttru(t(cid:48)) ≥ LHD
f u

(cid:19)

,

(8)

where the arg min function is to ﬁnd the minimum number
of time slots needed for the video frame f to be delivered.

Here, we study two enablers to minimize the latency
and boost the reliability of the VR gaming experience. For
the computing latency, we investigate how prior knowledge
of users’ future pose using prediction methods affects the
computing the latency. We leverage results from previous
works as in [107] that state that the user’s future pose in
the next hundreds of milliseconds can be predicted with
high accuracy to proactively predict, render, and cache the

SchedulerEdgeControllerDeepRecurrentNeuralNetworkwithGRUunitsUserClusteringOUT:Schedulingcontents&users(cid:55)→SBSsReportCSICoordinatedHDvideochunktransmissionLatency-awareOptimizationVRVRVRSBSb1SBSb2SBSb3VRVRVRVRVRVRVRInputlayerOutputlayerHiddenlayersReal-timerequestsRecursivefeedbackWired/wirelesslinktoedgecontrollerOUT:Tiled(multilabel)FoVPredictionOUT:Userclusters&ClusterlevelFoV3DoFposeReport6DoFposeproactivemulticastreal-timeunicastVRTiled-FoVproactivemulticast···}Headorientationangles(yaw,pitch,roll)16

Figure 12. Representation of a group of VR gaming arcades where HD frame computation is ofﬂoaded to a MEC platform such that input actions
of the VRPs might impact the virtual environment shown to a subset of the remaining VRPs. The detailed view of the bottom arcade also illustrates
several LOS and NLOS mmWave link states e.g., link blockage and VRP and mmAP beam misalignment.

users upcoming frames, subject to computation and storage
resource availability. For the communication parts, the use
of MC is considered to associate a user with more than one
mmAPs if the SINR with its serving mmAP falls below a
given threshold. Speciﬁcally, SFN operation is considered
where multiple mmAP use the same frequency and time
resource to transmit to the intended user.

Fig. 13 compares the communications and computing la-
tency of our PROPOSED scheme that considers both enablers
of proactive computing and MC, with BASELINE-1 that
does not have either of the two enablers, and BASELINE-2
that considers only proactive computing. By looking into
the computing latency in Fig. 13, we can see that the
schemes with proactive computing signiﬁcantly minimizes
the computing latency, whereas a look at the communication
latency shows the gain achieved using MC. Comparing the
communication latency of BASELINE-1 and BASELINE-2
also shows that the proactive computing, that improved the
computing performance, also slightly increases the commu-
nication latency. This is due to having to send additional
data due to the errors in prediction, in which the correct
data has to be retransmitted in real time.

5 CONCLUSIONS AND FUTURE OUTLOOK
Edge computing is an essential component of future wire-
less networks,
in which several challenges need to be
overcome to realize the vision of ultra-reliable and low-
latency edge computing. Chief to this vision is leveraging
multiple high reliability and low-latency enablers applied
for different types of services and use cases. In this article,
we have discussed edge networking services and examined
key enablers to achieve low-latency and high reliability
networking. Moreover, we showcased how the network
resources can be optimized for a selection of use cases
characterized by their shared need for edge networking.

Figure 13. The communication delay (solid lines) and computing delay
(dashed lines) for different schemes as the number of players varies for
an arcade of 16 mmAPs, each equipped with an edge computing unit.

As the vision of 5G starts to materialize beyond its initial
inception towards imminent ﬁrst commercial deployments,
we envision a realization of edge computing hand in hand
with the development of URLLC and distributed artiﬁcial
intelligence (AI) able to deal with dynamic and heteroge-
neous environments, provide seamless computing, content,
and control services, while preserving data privacy and
security.

REFERENCES

[1] W. Shi, J. Cao, Q. Zhang, Y. Li, and L. Xu, “Edge computing:
Vision and challenges,” IEEE Internet of Things Journal, vol. 3,
no. 5, pp. 637–646, Oct 2016.

EdgeComputingandStoragePlatformmmAPa(cid:48)mmAPaDetailviewoftheGamingArcadeLOSlinktommAPaLOSlinktommAPa(cid:48)(cid:48)NLOS(blocked)linktommAPa(cid:48)mmAPa(cid:48)(cid:48)(cid:48)TemporalbeammisalignmenttommAPa(cid:48)GamingArcadeGamingArcadeGamingArcadeGamingArcade[2]

[3]

[4]

[5]

[6]

[7]

[8]

[9]

IEEE, 2014, pp. 1391–1396.

G. Klas, “Edge computing and the role of cellular networks,”
Computer, vol. 50, no. 10, pp. 40–49, 2017.
A. Ndikumana, N. H. Tran, T. M. Ho, Z. Han, W. Saad, D. Niyato,
and C. S. Hong, “Joint communication, computation, caching,
and control in big data multi-access edge computing,” ArXiv
preprint, vol. abs/1803.11512, 2018.
B. Soret, P. Mogensen, K. I. Pedersen, and M. C. Aguayo-Torres,
“Fundamental tradeoffs among reliability, latency and through-
put in cellular networks,” in 2014 IEEE Globecom Workshops (GC
Wkshps).
Y. Mao, C. You, J. Zhang, K. Huang, and K. B. Letaief, “A
survey on mobile edge computing: The communication perspec-
tive,” IEEE Commun. Surveys Tuts., vol. 19, no. 4, pp. 2322–2358,
Fourthquarter 2017.
ETSI, “Multi-access Edge Computing (MEC),” https://www.etsi.
org/technologies/multi-access-edge-computing, 2018, [Online;
accessed 04-02-2019].
E. Bastug, M. Bennis, and M. Debbah, “Living on the edge: The
role of proactive caching in 5g wireless networks,” IEEE Commun.
Mag., vol. 52, no. 8, pp. 82–89, Aug. 2014.
E. Bastug, M. Bennis, and M. Debbah, “Social and spatial proac-
tive caching for mobile data ofﬂoading,” in 2014 IEEE Interna-
tional Conference on Communications Workshops (ICC), June 2014,
pp. 581–586.
S. Tamoor-ul-Hassan, M. Bennis, P. H. J. Nardelli, and M. Latva-
aho, “Caching in wireless small cell networks: A storage-
bandwidth tradeoff,” IEEE Communications Letters, vol. 20, no. 6,
pp. 1175–1178, June 2016.

[10] M. S. ElBamby, M. Bennis, W. Saad, and M. Latva-aho, “Content-
aware user clustering and caching in wireless small cell net-
works,” in 2014 11th International Symposium on Wireless Commu-
nications Systems (ISWCS), Aug 2014, pp. 945–949.
J. Park, S. Samarakoon, M. Bennis, and M. Debbah, “Wireless net-
work intelligence at the edge,” Proceedings of the IEEE (submitted)
[Online]. Arxiv preprint, vol. abs/1812.02858, Dec. 2018.

[11]

[12] E. Li, Z. Zhou, and X. Chen, “Edge intelligence: On-demand
deep learning model co-inference with device-edge synergy,” in
Proceedings of the Workshop on Mobile Edge Communications, ser.
MECOMM ’18. ACM, 2018.

[13] Y. Sahni, J. Cao, S. Zhang, and L. Yang, “Edge mesh: A new
paradigm to enable distributed intelligence in internet of things,”
IEEE Access, vol. 5, pp. 16 441–16 458, 2017.
J.-M. Lasry and P.-L. Lions, “Mean ﬁeld games,” Japanese Journal
of Mathematics, vol. 2, no. 1, pp. 229–260, Mar. 2007. [Online].
Available: https://doi.org/10.1007/s11537-007-0657-8

[14]

[15] C. Dehos, J. L. Gonzlez, A. D. Domenico, D. Ktnas, and L. Dus-
sopt, “Millimeter-wave access and backhauling: the solution to
the exponential data trafﬁc increase in 5G mobile communica-
tions systems?” IEEE Commun. Mag., vol. 52, no. 9, pp. 88–95,
Sep. 2014.

[16] T. K. Vu, M. Bennis, S. Samarakoon, M. Debbah, and M. Latva-
aho, “Joint in-band backhauling and interference mitigation in
5G heterogeneous networks,” in European Wireless 2016; 22th
European Wireless Conference. VDE, 2016, pp. 1–6.

[17] M. S. Elbamby, M. Bennis, and W. Saad, “Proactive edge com-
puting in latency-constrained fog networks,” in 2017 European
Conference on Networks and Communications (EuCNC), June 2017,
pp. 1–6.
J. Oueis, “Joint communication and computation resources
allocation for cloud-empowered future wireless networks,”
Theses, Universit´e Grenoble Alpes, Feb. 2016.
[Online].
Available: https://tel.archives-ouvertes.fr/tel-01366449

[18]

[19] M. S. Elbamby, M. Bennis, W. Saad, M. Latva-aho, and C. S. Hong,
“Proactive edge computing in fog networks with latency and reli-
ability guarantees,” EURASIP Journal on Wireless Communications
and Networking, vol. 2018, no. 1, p. 209, Aug 2018.

[20] T. S. Rappaport, S. Sun, R. Mayzus, H. Zhao, Y. Azar, K. Wang,
G. N. Wong, J. K. Schulz, M. Samimi, and F. Gutierrez, “Millime-
ter wave mobile communications for 5G cellular: It will work!”
IEEE Access, vol. 1, pp. 335–349, 2013.
J. G. Andrews, S. Buzzi, W. Choi, S. V. Hanly, A. Lozano, A. C. K.
Soong, and J. C. Zhang, “What Will 5G Be?” IEEE J. Sel. Areas
Commun., vol. 32, no. 6, pp. 1065–1082, 6 2014.

[21]

[22] F. Boccardi, R. W. Heath, A. Lozano, T. Marzetta, and P. Popovski,
“Five disruptive technology directions for 5G,” IEEE Commun.
Mag., vol. 52, no. 2, pp. 74–80, Feb. 2014.

17

[23] M. Xiao, S. Mumtaz, Y. Huang, L. Dai, Y. Li, M. Matthaiou,
G. K. Karagiannidis, E. Bjrnson, K. Yang, C. I, and A. Ghosh,
“Millimeter wave communications for future mobile networks,”
IEEE J. Sel. Areas Commun., vol. 35, no. 9, pp. 1909–1935, 9 2017.

[24] T. S. Rappaport, Y. Xing, G. R. MacCartney, A. F. Molisch,
E. Mellios, and J. Zhang, “Overview of millimeter wave com-
munications for ﬁfth-generation (5g) wireless networkswith a
focus on propagation models,” IEEE Transactions on Antennas and
Propagation, vol. 65, no. 12, pp. 6213–6230, Dec 2017.

[25] M. R. Akdeniz, Y. Liu, M. K. Samimi, S. Sun, S. Rangan, T. S.
Rappaport, and E. Erkip, “Millimeter wave channel modeling
and cellular capacity evaluation,” IEEE J. Sel. Areas Commun.,
vol. 32, no. 6, pp. 1164–1179, Jun. 2014.
I. A. Hemadeh, K. Satyanarayana, M. El-Hajjar, and L. Hanzo,
“Millimeter-wave communications: Physical channel models, de-
sign considerations, antenna constructions, and link-budget,”
IEEE Commun. Surveys Tuts., vol. 20, no. 2, pp. 870–913, Sec-
ondquarter 2018.

[26]

[27] A. L. Swindlehurst, E. Ayanoglu, P. Heydari, and F. Capolino,
“Millimeter-wave massive MIMO: the next wireless revolution?”
IEEE Commun. Mag., vol. 52, no. 9, pp. 56–62, Sep. 2014.

[28] M. Rebato, J. Park, P. Popovski, E. D. Carvalho, , and M. Zorzi,
“Stochastic geometric coverage analysis in mmWave cellular
networks with realistic channel and antenna radiation models,”
ArXiv preprint, vol. abs/1806.04193, Jun. 2018.

[30]

[29] M. Giordani, M. Polese, A. Roy, D. Castor, and M. Zorzi,
“A tutorial on beam management for 3GPP NR at mmWave
frequencies,” IEEE Commun. Surveys Tuts., 2019.
[Online].
Available: https://ieeexplore.ieee.org/document/8458146
S. Barbarossa, E. Ceci, and M. Merluzzi, “Overbooking Radio
and Computation Resources in mmW-Mobile Edge Computing
to Reduce Vulnerability to Channel Intermittency,” in Proc. Eur.
Conf. on Networks and Commun. (EuCNC), 2017, pp. 1–5. [Online].
Available: https://doi.org/10.1109/EuCNC.2017.7980746
[31] T. K. Vu, M. Bennis, M. Debbah, M. Latva-aho, and C. S. Hong,
“Ultra-reliable communication in 5G mmWave networks: A risk-
sensitive approach,” IEEE Communications Letters, vol. 22, no. 4,
pp. 708–711, Apr. 2018.

[33]

[32] M. Kamel, W. Hamouda, and A. Youssef, “Ultra-dense networks:
A survey,” IEEE Trans. Control Syst. Technol., vol. 18, no. 4, pp.
2522–2545, Fourthquarter 2016.
J. Park, S.-L. Kim, and J. Zander, “Tractable resource management
with uplink decoupled millimeter-wave overlay in ultra-dense
cellular networks,” IEEE Trans. Wireless Commun., vol. 15, no. 6,
pp. 4362–4379, Jun. 2016.
J. Park, S. Jung, S.-L. Kim, M. Bennis, and M. Debbah, “User-
centric mobility management in ultra-dense cellular networks
under spatio-temporal dynamics,” in Proc. of IEEE GLOBECOM,
Washington, DC, USA, Dec. 2016.
J. Park, , S.-L. Kim, M. Bennis, and M. Debbah, “Spatio-temporal
network dynamics framework for energy-efﬁcient ultra-dense
cellular networks,” in Proc. of IEEE GLOBECOM, Washington,
DC, USA, Dec. 2016.

[34]

[35]

[36] H. Kim, J. Park, M. Bennis, S. Kim, and M. Debbah, “Ultra-
dense edge caching under spatio-temporal demand and network
dynamics,” in Proc. of IEEE ICC, Paris, France, May 2017, pp. 1–7.
S. Samarakoon, M. Bennis, W. Saad, M. Debbah, and M. Latva-
aho, “Ultra dense small cell networks: Turning density into
energy efﬁciency,” IEEE J. Sel. Areas Commun., vol. 34, no. 5, pp.
1267–1280, May 2016.

[37]

[38] B. Li, Z. Fei, and Y. Zhang, “UAV communications for 5G and
beyond: Recent advances and future trends,” IEEE Internet of
Things Journal, pp. 1–1, 2019.

[40]

[39] F. Hagenauer, C. Sommer, T. Higuchi, O. Altintas, and F. Dressler,
“Vehicular micro clouds as virtual edge servers for efﬁcient data
collection,” in Proceedings of the 2Nd ACM International Workshop
on Smart, Autonomous, and Connected Vehicular Systems and Ser-
vices, ser. CarSys ’17. New York, NY, USA: ACM, 2017, pp.
31–35.
J. Park, P. Popovski, and O. Simeone, “Minimizing latency to
support VR social interactions over wireless cellular systems via
bandwidth allocation,” vol. 7, no. 5, pp. 776–779, Oct 2018.
[41] B. Romanous, N. Bitar, A. Imran, and H. Refai, “Network den-
siﬁcation: Challenges and opportunities in enabling 5G,” in 2015
IEEE 20th International Workshop on Computer Aided Modelling and
Design of Communication Links and Networks (CAMAD), Sep. 2015,
pp. 129–134.

[42] R. Arshad, H. ElSawy, S. Sorour, T. Y. Al-Naffouri, and
M. Alouini, “Handover management in dense cellular networks:
A stochastic geometry approach,” in 2016 IEEE International
Conference on Communications (ICC), May 2016, pp. 1–7.

[43] Y. Wang, M. Narasimha, and R. W. H. Jr, “MmWave beam predic-
tion with situational awareness: A machine learning approach,”
ArXiv preprint, vol. abs/1805.08912, May 2018.

[44] C. Perfecto, M. S. ElBamby, J. Del Ser, and M. Bennis, “Taming
the latency in multi-user VR 360◦: A QoE-aware deep learning-
aided multicast framework,” ArXiv preprint, vol. abs/1811.07388,
2018.

[45] N. Kato, Z. M. Fadlullah, B. Mao, F. Tang, O. Akashi, T. Inoue,
and K. Mizutani, “The deep learning vision for heterogeneous
network trafﬁc control: Proposal, challenges, and future perspec-
tive,” IEEE Wireless Commun. Mag., vol. 24, no. 3, pp. 146–153,
June 2017.

[46] Q. Mao, F. Hu, and Q. Hao, “Deep learning for intelligent wire-
less networks: A comprehensive survey,” IEEE Communications
Surveys Tutorials, vol. 20, no. 4, pp. 2595–2621, jun 2018.

[47] G. Zhu, D. Liu, Y. Du, C. You, J. Zhang, and K. Huang, “Towards
an intelligent edge: Wireless communication meets machine
learning,” ArXiv preprint, vol. abs/1809.00343, 2018.
S. Ko, K. Huang, S. Kim, and H. Chae, “Live prefetching for
mobile computation ofﬂoading,” IEEE Trans. Wireless Commun.,
vol. 16, no. 5, pp. 3057–3071, May 2017.

[48]

[49] E. Bastug, M. Bennis, M. Medard, and M. Debbah, “Toward
interconnected virtual reality: Opportunities, challenges, and en-
ablers,” IEEE Commun. Mag., vol. 55, no. 6, pp. 110–117, June
2017.

[51]

[50] X. Chen, Q. Shi, L. Yang, and J. Xu, “Thriftyedge: Resource-
efﬁcient edge computing for intelligent iot applications,” IEEE
Netw., vol. 32, no. 1, pp. 61–65, Jan 2018.
S. Li, M. A. Maddah-Ali, and A. S. Avestimehr, “Coded mapre-
duce,” in 2015 53rd Annual Allerton Conference on Communication,
Control, and Computing (Allerton), Sep. 2015, pp. 964–971.
[52] ——, “Coding for distributed fog computing,” IEEE Commun.

Mag., vol. 55, no. 4, pp. 34–40, April 2017.

[53] A. Ravanshid, P. Rost, D. S. Michalopoulos, V. V. Phan, H. Bakker,
D. Aziz, S. Tayade, H. D. Schotten, S. Wong, and O. Holland,
“Multi-connectivity functional architectures in 5g,” in IEEE Int.
Conf. Commun. Workshops (ICC), May 2016, pp. 187–192.

[54] B. Soret, P. Mogensen, K. I. Pedersen, and M. C. Aguayo-Torres,
“Fundamental tradeoffs among reliability, latency and through-
put in cellular networks,” in Proc. IEEE Global Telecommun. Conf.
(GLOBECOM) Workshops, 2014, pp. 1391–1396.

[55] A. Wolf, P. Schulz, M. Drpinghaus, J. C. S. S. Filho, and G. Fet-
tweis, “How reliable and capable is multi-connectivity?” IEEE
Trans. Commun., pp. 1–1, 2018.
3GPP TR36.819, “Coordinated multi-point operation for LTE
physical layer aspects,” Tech. Rep. 36.819 Rel-11, 9 2013.

[56]

[57] M. Eriksson, “Dynamic single frequency networks,” IEEE J. Sel.

Areas Commun., vol. 19, no. 10, pp. 1905–1914, Oct 2001.

[58] F. B. Tesema, A. Awada, I. Viering, M. Simsek, and G. P. Fettweis,
“Multiconnectivity for Mobility Robustness in Standalone 5G
Ultra Dense Networks with Intrafrequency Cloud Radio Access,”
Wirel. Commun. Mob. Comput., vol. 2017, pp. 1–17, Jan 2017.
3GPP TR 36.823, “Evolved Universal Terrestrial Radio Access (E-
UTRA); Carrier Aggregation Enhancements; UE and BS radio
transmission and reception,” Tech. Rep. 36.823 Rel-11, 11 2013.

[59]

[60] F. B. Tesema, A. Awada, I. Viering, M. Simsek, and G. P. Fet-
tweis, “Mobility modeling and performance evaluation of multi-
connectivity in 5g intra-frequency networks,” in 2015 IEEE Globe-
com Workshops (GC Wkshps), Dec 2015, pp. 1–6.

[61] M. Giordani, M. Mezzavilla, S. Rangan, and M. Zorzi, “Multi-
connectivity in 5G mmWave cellular networks,” in 2016 Mediter-
ranean Ad Hoc Networking Workshop (Med-Hoc-Net), June 2016, pp.
1–7.

[62] M. Giordani, M. Mezzavilla, and M. Zorzi, “Initial access in 5G
mmWave cellular networks,” IEEE Commun. Mag., vol. 54, no. 11,
pp. 40–47, Nov 2016.

[63] M. Polese, M. Giordani, M. Mezzavilla, S. Rangan, and M. Zorzi,
“Improved handover through dual connectivity in 5G mmWave
mobile networks,” IEEE J. Sel. Areas Commun., vol. 35, no. 9, pp.
2069–2084, Sep. 2017.
J. J. Nielsen and P. Popovski, “Latency analysis of systems with
multiple interfaces for ultra-reliable M2M communication,” in

[64]

2016 IEEE 17th International Workshop on Signal Processing Ad-
vances in Wireless Communications (SPAWC), July 2016, pp. 1–6.
J. Dean and L. A. Barroso, “The tail at scale,” Commun. ACM,
vol. 56, no. 2, pp. 74–80, Feb. 2013.

[65]

18

[66] O. Bousquet, U. von Luxburg, and G. R¨atsch, Introduction to
Berlin, Heidelberg: Springer Berlin

Statistical Learning Theory.
Heidelberg, 2004, pp. 169–207.
J. Konecny, H. B. McMahan, F. X. Yu, P. Richtarik, A. T. Suresh,
and D. Bacon, “Federated learning: strategies for improving com-
munication efﬁciency,” in Proc. of NIPS Wksp. PMPML, Barcelona,
Spain, Dec. 2016.

[67]

[68] H. B. McMahan, E. Moore, D. Ramage, S. Hampson, and B. A.
y Arcas, “Communication-efﬁcient learning of deep networks
from decentralized data,” in Proc. of AISTATS, Fort Lauderdale,
FL, USA, Apr. 2017.

[69] M. Bennis, M. Debbah, and V. Poor, “Ultra-reliable and low-
latency wireless communication: Tail, risk and scale,” Proc. IEEE,
vol. 106, no. 10, pp. 1834–1853, Oct. 2018.
S. Coles, An Introduction to Statistical Modeling of Extreme Values.
London, U.K.: Springer, 2001.

[70]

[71] L. de Haan and A. Ferreira, Extreme Value Theory: An Introduction.

New York, NY, USA: Springer, 2006.

[72] M. S. Elbamby, C. Perfecto, M. Bennis, and K. Doppler, “Toward
low-latency and ultra-reliable virtual reality,” IEEE Netw., vol. 32,
no. 2, pp. 78–84, Mar. 2018.

[73] M. Schneider, J. Rambach, and D. Stricker, “Augmented reality
based on edge computing using the example of remote live sup-
port,” in 2017 IEEE International Conference on Industrial Technology
(ICIT), Mar. 2017, pp. 1277–1282.

[74] M. S. Elbamby, C. Perfecto, M. Bennis, and K. Doppler, “Edge
computing meets millimeter-wave enabled VR: Paving the way
to cutting the cord,” in 2018 IEEE Wireless Commun. and Netw.
Conf. (WCNC), 4 2018, pp. 1–6.

[75] ABI Research and Qualcomm, “Augmented and virtual reality:
The ﬁrst wave of 5g killer apps,” White paper, Feb. 2017.
J. Park and M. Bennis, “URLLC-eMBB slicing to support VR
multimodal perceptions over wireless cellular systems,” ArXiv
preprint, vol. abs/1805.00142, May 2018.

[76]

[77] A. AL-Shuwaili and O. Simeone, “Energy-efﬁcient resource al-
location for mobile edge computing-based augmented reality
applications,” vol. 6, no. 3, pp. 398–401, apr 2017.

[78] L. Nanjie, “Internet of vehicles: Your next connection,” in WinWin

Magazine, Huawei Communicate, Ed., Dec. 2011.

the

[79] P. Gao, R. Hensley,
for
2014.

future
Oct.

to
Quarterly,
//www.mckinsey.com/industries/automotive-and-assembly/
our-insights/a-road-map-to-the-future-for-the-auto-industry

and A. Zielke,
auto
the
[Online].

“A road map
industry,” McKinsey
https:

Available:

[80] C. Perfecto, J. Del Ser, M. Bennis, and M. N. Bilbao, “Beyond
WYSIWYG: Sharing contextual sensing data through mmWave
V2V communications,” in 2017 Eur. Conf. on Netw. and Commun.
(EuCNC), 6 2017, pp. 1–6.

[81] C. Perfecto, J. Del Ser, and M. Bennis, “Millimeter-wave V2V
communications: Distributed association and beam alignment,”
IEEE J. Sel. Areas Commun., vol. 35, no. 9, pp. 2148–2162, 9 2017.

[82] C. Perfecto, J. Del Ser, and M. Bennis, “On the interplay between
scheduling interval and beamwidth selection for low-latency and
reliable v2v mmwave communications,” in 2017 20th Conf. on
Innovations in Clouds, Internet and Networks (ICIN).
IEEE, 2017,
pp. 1–8.

[83] M. Amadeo, C. Campolo, and A. Molinaro, “Information-centric
networking for connected vehicles: a survey and future perspec-
tives,” IEEE Commun. Mag., vol. 54, no. 2, pp. 98–104, 2 2016.
[84] K. Zhang, Y. Mao, S. Leng, Y. He, and Y. Zhang, “Mobile-
edge computing for vehicular networks: A promising network
paradigm with predictive off-loading,” IEEE Veh. Technol. Mag.,
vol. 12, no. 2, pp. 36–44, 6 2017.

[85] Q. Yuan, H. Zhou, J. Li, Z. Liu, F. Yang, and X. S. Shen, “Toward
efﬁcient content delivery for automated driving services: An edge
computing solution,” IEEE Netw., vol. 32, no. 1, pp. 80–86, 1 2018.
[86] Z. Zhou, H. Yu, C. Xu, Z. Chang, S. Mumtaz, and J. Rodriguez,
“Begin: Big data enabled energy-efﬁcient vehicular edge comput-
ing,” IEEE Commun. Mag., vol. 56, no. 12, pp. 82–89, 12 2018.
[87] A. F. Khosrowshah, U. Challita, and W. Saad, “Deep learning
for reliable mobile edge analytics in intelligent transportation
systems: An overview,” IEEE Veh. Technol. Mag., pp. 1–1, 2019.

[88] Y. He, N. Zhao, and H. Yin, “Integrated networking, caching, and
computing for connected vehicles: A deep reinforcement learning
approach,” IEEE Trans. Veh. Technol., vol. 67, no. 1, pp. 44–55, 1
2018.

[90]

[89] X. Hou, Y. Li, M. Chen, D. Wu, D. Jin, and S. Chen, “Vehicular
fog computing: A viewpoint of vehicles as the infrastructures,”
IEEE Trans. Veh. Technol., vol. 65, no. 6, pp. 3860–3873, Jun. 2016.
“Consumer Reports - Make Your Car Last 200,000 Miles,” [on-
line, Accessed: 2019-01-15], https://www.consumerreports.org/
car-repair-maintenance/make-your-car-last-200-000-miles/.
[91] H. Kim, J. Park, M. Bennis, and S.-L. Kim, “On-device federated
learning via blockchain and its latency analysis,” ArXiv preprint,
vol. abs/1808.03949, Aug. 2018.

[93]

[92] M. M. Amiri and D. Gunduz, “Machine learning at the wireless
edge: Distributed stochastic gradient descent over-the-air,” ArXiv
preprint, vol. abs/1901:00844, Jan. 2019.
S. Ha, J. Zhang, O. Simeone, and J. Kang, “Coded federated
computing in wireless networks with straggling devices and
imperfect csi,” ArXiv preprint, vol. abs/1901.05239, 2019.
S. Wang, T. Tuor, T. Salonidis, and K. K. Leung, “Adaptive feder-
ated learning in resource constrained edge computing systems,”
ArXiv preprint, vol. abs/1804.05271, Aug. 2018.

[94]

[95] E. Jeong, S. Oh, H. Kim, J. Park, M. Bennis, and S.-L. Kim,
“Federated distillation and augmentation under non-IID private
data,” presented at NIPS Wksp. MLPCD, Dec. 2018.
I. Goodfellow, Y. Bengio, and A. Courville, Deep Learning. MIT
Press, 2016.

[96]

[97] M. Mirza and S. Osindero, “Conditional generative adversarial

nets,” ArXiv preprint, vol. abs/1411.1784, Nov. 2014.

[98] L. Wang,

J. Ye, Y. Zhao, W. Wu, A. Li, S. L. Song,
Z. Xu, and T. Kraska, “Superneurons: Dynamic gpu memory
management for training deep neural networks,” The ACM
Interest Group on Programming Languages, vol. 53,
Special
no. 1, pp. 41–53, Feb. 2018.
[Online]. Available: http:
//doi.acm.org/10.1145/3200691.3178491

[99] C.-F. Liu, M. Bennis, and H. V. Poor, “Latency and reliability-
aware task ofﬂoading and resource allocation for mobile edge
computing,” in Proc. IEEE Global Commun. Conf. Workshops, Dec.
2017, pp. 1–7.

[100] C.-F. Liu, M. Bennis, M. Debbah, and H. V. Poor, “Dynamic task
ofﬂoading and resource allocation for ultra-reliable low-latency
edge computing,” IEEE Trans. Commun., vol. 67, 2019. [Online].
Available: http://arxiv.org/abs/1812.08076

[101] S. Samarakoon, M. Bennis, W. Saad, and M. Debbah, “Distributed
federated learning for ultra-reliable low-latency vehicular com-
munications,” ArXiv preprint, vol. abs/1807.08127, Jul. 2018.
[102] X. Chen, H. Zhang, C. Wu, S. Mao, Y. Ji, and M. Bennis,
“Performance optimization in mobile-edge computing via deep
reinforcement learning,” in 2018 IEEE 88th Vehicular Technology
Conference (VTC-Fall), Aug. 2018.

[103] ——, “Optimized computation ofﬂoading performance in virtual
edge computing systems via deep reinforcement learning,” IEEE
Internet Things J., Early Access Article 2018.

[104] V. Mnih, K. Kavukcuoglu, D. Silver, A. A. Rusu, J. Veness, M. G.
Bellemare, A. Graves, M. Riedmiller, A. K. Fidjeland, G. Ostro-
vski, S. Petersen, C. Beattie, A. Sadik, I. Antonoglou, H. King,
D. Kumaran, D. Wierstra, S. Legg, , and D. Hassabis, “Human-
level control through deep reinforcement learning,” Nature, vol.
518, no. 7540, pp. 529–533, February 2015.

[105] K. Cho, B. van Merri¨enboer, C¸ . G ¨ulc¸ehre, D. Bahdanau,
F. Bougares, H. Schwenk, and Y. Bengio, “Learning phrase rep-
resentations using RNN encoder–decoder for statistical machine
translation,” in Proc. Conf. Emp. Methods Natural Lang. Process.
(EMNLP), Oct. 2014, pp. 1724–1734.

[106] J. Chung, C. Gulcehre, K. Cho, and Y. Bengio, “Empirical evalua-
tion of gated recurrent neural networks on sequence modeling,”
in NIPS 2014 Wksh. on Deep Learning, 2014.

[107] F. Qian, L. Ji, B. Han, and V. Gopalakrishnan, “Optimizing 360◦
video delivery over cellular networks,” in Proc. 5th Workshop
on All Things Cellular: Operations, Applications and Challenges, ser.
ATC ’16, New York, NY, USA, 2016, pp. 1–6.

19

Mohammed S. Elbamby received the B.Sc. de-
gree (Hons.) in Electronics and Communications
Engineering from the Institute of Aviation En-
gineering and Technology, Egypt, in 2010, and
the M.Sc. degree in Communications Engineer-
ing from Cairo University, Egypt, in 2013. He
is currently pursuing the Dr.Tech. degree with
the University of Oulu. After receiving the M.Sc.
degree, he joined the Centre for Wireless Com-
munications, University of Oulu. His research in-
terests include resource optimization, uplink and
downlink conﬁguration, fog networking, and caching in wireless cellular
networks. He received the Best Student Paper Award from the European
Conference on Networks and Communications in 2017.

Cristina Perfecto (S’15) received her B.Sc.
in Telecommunication Engineering
and M.Sc.
from the University of
the Basque Country
(UPV/EHU) in 2000. She is currently a col-
lege associate professor with the Department of
Communications Engineering at the UPV/EHU.
Her research interests lie on millimeter wave
communications and in the application of ma-
chine learning in 5G networks. She is currently
working towards her Ph.D. focused on the ap-
plication of multidisciplinary computational intel-

ligence techniques in radio resource management for 5G.

Chen-Feng Liu (S’17) received the B.S. degree
from National Tsing Hua University, Hsinchu,
Taiwan, in 2009, and the M.S. degree in com-
munications engineering from National Chiao
Tung University, Hsinchu, in 2011. He is cur-
rently pursuing the Ph.D. degree with the Uni-
versity of Oulu, Oulu, Finland. In 2012, he joined
Academia Sinica as a Research Assistant. In
2014, he was a Visiting Researcher with the
Singapore University of Technology and Design,
Singapore. He was also a Visiting Ph.D. Student
with the University of Houston, Houston, TX, USA, and New York Uni-
versity, New York, NY, USA, in 2016 and 2018, respectively. His current
research interests include 5G communications, mobile edge computing,
ultra-reliable low latency communications, and wireless artiﬁcial intelli-
gence.

Jihong Park received the B.S. and Ph.D. de-
grees from Yonsei University, Seoul, South Ko-
rea, in 2009 and 2016, respectively. From 2016
to 2017, he was a Post-Doctoral Researcher
with Aalborg University, Denmark. He was a
Visiting Researcher with Hong Kong Polytech-
nic University; KTH, Sweden; Aalborg University,
Denmark; and New Jersey Institute of Technol-
ogy, USA, in 2013, 2015, 2016, and 2017, re-
spectively. He is currently a Post-Doctoral Re-
searcher with the University of Oulu, Finland.
His research interests include ultra-dense/ultra-reliable/massive-MIMO
system designs using stochastic geometry and network economics. His
papers on tractable ultra-dense network analysis received the IEEE
GLOBECOM Student Travel Grant in 2014, the IEEE Seoul Section
Student Paper Contest Bronze Prize in 2014, and the 6th IDIS-ETNEWS
(The Electronic Times) Paper Contest Award sponsored by the Ministry
of Science, ICT, and Future Planning of Korea.

20

Mehdi Bennis (S’07-AM’08-SM’15) received his
M.Sc. degree in Electrical Engineering jointly
from the EPFL, Switzerland and the Eurecom
Institute, France in 2002. From 2002 to 2004,
he worked as a research engineer at IMRA-
EUROPE investigating adaptive equalization al-
gorithms for mobile digital TV. In 2004, he joined
the Centre for Wireless Communications (CWC)
at the University of Oulu, Finland as a research
scientist. In 2008, he was a visiting researcher
at the Alcatel-Lucent chair on ﬂexible radio, SU-
PELEC. He obtained his Ph.D. in December 2009 on spectrum sharing
for future mobile cellular systems. Currently Dr. Bennis is an Associate
Professor at the University of Oulu and Academy of Finland research
fellow. His main research interests are in radio resource management,
heterogeneous networks, game theory and machine learning in 5G
networks and beyond. He has co-authored one book and published
more than 100 research papers in international conferences, journals
and book chapters. He was the recipient of the prestigious 2015 Fred
W. Ellersick Prize from the IEEE Communications Society, the 2016
Best Tutorial Prize from the IEEE Communications Society and the
2017 EURASIP Best paper Award for the Journal of Wireless Commu-
nications and Networks. Dr. Bennis serves as an editor for the IEEE
Transactions on Wireless Communication.

Sumudu Samarakoon (S’08-AM’18) received
his B. Sc. Degree (Hons.) in Electronic and
Telecommunication Engineering from the Uni-
versity of Moratuwa, Sri Lanka in 2009, the M.
Eng. degree from the Asian Institute of Tech-
nology, Thailand in 2011, and Ph. D. degree in
Communication Engineering from University of
Oulu, Finland in 2017. He is currently working in
Centre for Wireless Communications, University
of Oulu, Finland as a post doctoral researcher.
His main research interests are in heteroge-
neous networks, small cells, radio resource management, reinforcement
learning, and game theory. In 2016, he received the Best Paper Award at
the European Wireless Conference and Excellence Awards for innova-
tors and the outstanding doctoral student in the Radio Technology Unit,
CWC, University of Oulu.

Xianfu Chen received his Ph.D. degree in Sig-
nal and Information Processing, from the De-
partment of Information Science and Electronic
Engineering at Zhejiang University, Hangzhou,
China, in March 2012. He is currently a Senior
Scientist with the VTT Technical Research Cen-
tre of Finland Ltd, Oulu, Finland. His research
interests cover various aspects of wireless com-
munications and networking, with emphasis on
network virtualization, software-deﬁned radio ac-
cess networks, green communications, central-
ized and decentralized resource allocation, dynamic spectrum access,
and the application of machine learning to wireless communications.

