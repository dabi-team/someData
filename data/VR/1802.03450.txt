Minimizing Latency to Support VR Social Interactions
over Wireless Cellular Systems via Bandwidth Allocation

Jihong Park, †Petar Popovski, and ‡Osvaldo Simeone

8
1
0
2

r
p
A
4

]
T
I
.
s
c
[

2
v
0
5
4
3
0
.
2
0
8
1
:
v
i
X
r
a

Abstract—Immersive social interactions of mobile users are
soon to be enabled within a virtual space, by means of virtual
reality (VR) technologies and wireless cellular systems. In a VR
mobile social network, the states of all interacting users should
be updated synchronously and with low latency via two-way
communications with edge computing servers. The resulting end-
to-end latency depends on the relationship between the virtual
and physical locations of the wireless VR users and of the edge
servers. In this work, the problem of analyzing and optimizing the
end-to-end latency is investigated for a simple network topology,
yielding important insights into the interplay between physical
and virtual geometries.

Index Terms—Virtual reality (VR), social network,

latency,

resource management.

I. INTRODUCTION

Virtual reality (VR) is a key use case for 5G [1]–[4]. Its
emergence is powered by the recent advances in computing,
which enable immersive real-time interactions with virtual ob-
jects. As announced by Facebook [5] and Microsoft [6], users
will soon be able to interact with each other within virtual
communities using VR technologies. In this paper, we consider
the problem of supporting VR-based mobile social networks
over cellular systems by means of edge computing [1]–[4].

A key new element of this challenging problem is the
discrepancy between virtual and physical
locations of the
participating users. In fact, trafﬁc is generated by VR commu-
nities in a virtual space, but the supporting network resource
for communication and computation are located within the
physical network infrastructure. Therefore, the users in the
same VR community may not always be co-located in the
physical space. For example in Fig. 1, user C belonging to
VR community 1 is close in the physical space to user D
afﬁliated to VR community 2, but far from users A and B in
VR community 1. This spatial difference between virtual and
physical topologies affects the operation of resource allocation
and transmission techniques over both Radio Access Network
(RAN) and backhaul.

To elaborate, consider VR mobile users that interact in a
virtual space. In order for these interactions to be perceived
as natural, the network needs to guarantee low latency of e.g.
10 ms for tactile interactions [1]. At the same time, all user
states should be properly synchronized in the shared virtual
environment. Each user’s end-to-end latency is thus dominated
by the user from the VR community that experiences the worst
latency, accrued due to communication and processing. This,
in turn, depends on the physical distribution of users belonging
to the same VR community and on the spatial availability of
communication and computation resources within the physical
network infrastructure.

J. Park was with Aalborg University, and now he is with Centre for Wireless
Communications, University of Oulu, Finland (email: jihong.park@oulu.ﬁ).
†P. Popovski is with Department of Electronic Systems, Aalborg University,

Denmark (email: petarp@es.aau.dk).

‡O. Simeone is with Department of Informatics, King’s College London,

United Kingdom (email: osvaldo.simeone@kcl.ac.uk).

This work has been supported by the European Research Council (ERC

Grant Nos. 648382 and 725731) within the Horizon 2020 Program.

Fig. 1. Illustration of VR mobile social network, where the trafﬁc is generated
by virtual-space user interactions and supported by a physical cellular network.

In this work, we study the problem of supporting a VR
mobile social network over a multi-cell wireless cellular
system with the goal of minimizing the end-to-end latency.
Speciﬁcally, we focus on the problem of minimizing the end-
to-end latency via the bandwidth allocation of the uplink and
downlink channels used for communication between users and
computing servers. To this end, we formulate a simple model
based on a linear cellular topology that captures the interplay
between the social interactions within the VR mobile social
network and the location of the computation and communica-
tion resources within the physical network. The average end-
to-end latency is evaluated by accounting for the contributions
of uplink, downlink, and backhaul transmissions, as well as
for processing times at the servers. The resulting latency is
minimized through a stochastic optimization technique.

Related Works – Current VR headsets provide wireless
connections via WiFi and/or WiGig (60 GHz) technologies
using unlicensed frequency bands [7]. The resulting short-
range barrier can be overcome by enabling 5G wireless con-
nections. For such 5G-enabled VR headsets, computing tasks
will be conceivably ofﬂoaded to edge-cloud servers, in order
to overcome the restrictions brought by the limited computing
capability and battery capacity of mobile devices.

The required wireless capacity needed to support immersive
VR experiences has recently been investigated in [2]. To
minimize the VR trafﬁc volume, a caching approach has been
proposed in [3]. In a VR theater scenario, a multicast design
has been studied in [4]. These works [2]–[4] focus only on op-
timizing the downlink operations. For augmented reality (AR)
applications, the optimization of both uplink and downlink
transmissions in terms of end-to-end latency has been studied
in [8] for a single-cell scenario. Due to the focus on AR,
end-to-end latency model of reference [8] does not take into
account virtual social interactions. Finally, virtual social inter-
actions underlie Massively Multiplayer Online game (MMO)
applications such as Second Life [9]. Within more restricted
virtual spaces, immersive VR social interactions have been
recently provisioned by Facebook and Microsoft [5], [6].

VR community 1VR community 2CACBvirtual spacephysical spacebase stationAEbackhaulcomputing serverBCEDDE 
 
 
 
 
 
results, all users are assumed to lie at the maximum distance d.
Extensions of the analysis to the more general scenario of
arbitrary user-BS distances that are upper bounded by d are
possible, but call for more cumbersome notation.

Users in the subsets Nij with j (cid:54)= i, denoted as cross-
type users, are in VR community Vi, but are associated with
BS Bj. The uplink data of these cross-type users must be
forwarded through a wired backhaul to BS Bi in order to
be processed by its attached server. As deﬁned below, each
backhaul transmission entails a random delay with the average
value proportional to the distance D and the data size.

For the given physical distance d between a BS and the
assigned user, the signal-to-noise ratio (SNR) is determined
by path loss attenuation d−α for α ≥ 2 and by independent
Rayleigh fading. Therefore, the SNR in uplink or downlink
for a given user is

SNRX = P X d−αg/σ2,

(1)

where P X denotes transmit power and σ2 indicates the noise
variance. The term g represents a small-scale fading coefﬁcient
that follows an exponential distribution with unitary mean.
These coefﬁcients are independently and identically distributed
(i.i.d.) across users in uplink and downlink. We assume the use
of type-I Hybrid Automatic Repeat reQuest (HARQ), while
the instantaneous SNR information is unknown at the BSs.

B. Virtual Space Trafﬁc

In the virtual space, all the Ni VR users in community Vi
are assumed to interact with each other, directly or indirectly,
as seen in Fig. 2. In order to enable these virtual interactions,
each user uploads its uplink state update message with size bup
at regular time intervals, and all the Ni users download the
common downlink update message with size bdn. We hereafter
consider a ﬁxed users’ allocation in physical and virtual spaces
given by N = {Nij}. With this given user conﬁguration N, we
focus on a reference user o. This user o is uniformly randomly
selected in the set of N users, and thus has a type Nij with
probability pij = Nij/N . For a single state update, the VR
trafﬁc of user o is characterized by the following phases.

• Step 1 (Upload) – The user o ∈ Nij uploads its update
message with size bup bits to the associated BS Bj. If
user o is of cross-type, i.e. j (cid:54)= i, the uplink data is
forwarded to the desired computing server at Bi through
the inter-BS wired backhaul;

• Step 2 (Compute) – The computing server at BS Bi
collects all
input data from user o as well as from
its interacting NVi − 1 users, and then produces their
synchronous output states;

• Step 3 (Download) – The output states are updated with a
common message of size bdn bits to all NVi users through
wireless and, for cross-type users, backhaul links.

Note that, in order to carry out Step 2, the computing server
needs to collect data from all NVi users in VR community Vi.
For this reason, the delay prior to computing is limited by the
user with the worst uploading delay in VR community Vi, as
described next.

C. Physical Space Delay

In this section, we ﬁx the user conﬁguration N and the
spectrum allocation w = {wup, wdn} with wup = {wup
ij } and
wdn = {wdn
ij } for i, j ∈ {1, 2}, and analyze the latency of
a reference user o with a ﬁxed type Nij. According to the
described VR input/output data ﬂow, conditioned on N, w,
and the reference user’s type, the average end-to-end latency

Fig. 2. An illustration of a virtual space trafﬁc ﬂows in a one-dimensional
physical network model. In the virtual space, VR users A, B, and C interact
with each other within VR community V1. Their uplink updates a, b, and c
are sent to the cloud computing server at B1 via unicast transmissions. The
resulting downlink update needs to be sent to all three users for synchronous
interactions via multicast transmissions.

II. SYSTEM MODEL
This section describes the physical network infrastructure,
including RAN, backhaul, and computation resources, as well
as the VR data trafﬁc model. To focus on the key ideas, we
consider a one-dimensional physical network model with two
VR communities, as well as two base stations (BSs) in the
physical space, as illustrated in Fig. 2.

We use the subscript i ∈ {1, 2} to indicate VR communities
1 or 2. The subscript j ∈ {1, 2} identiﬁes the two BSs. The su-
perscript X ∈ {up, dn} describes uplink (up) or downlink (dn)
operations at a BS.

A. Physical Network and Channel Model

The network under study comprises a set of users K =
{1, 2, · · · , N } and two BSs B1 and B2. Each BS is equipped
with a computing server that supports a single VR commu-
nity. The computing server for VR community Vi is located
at BS Bi, unless otherwise speciﬁed. In the virtual space,
includes a subset of users Vi =
each VR community Vi
{1, 2, · · · , NVi} ⊆ K, representing a fraction pVi = NVi/N of
the set of users, with pV1 + pV 2 = 1. Furthermore, a subset of
users Bj = {1, 2, · · · , NBj } ⊆ K associates with BS Bj for
both uplink and downlink transmissions in the physical space,
representing a fraction pBj = NBj /N , with pB1 + pB2 = 1.
There are four types of possible user assignments in the virtual
and physical spaces, partitioning the set of users into four
subsets that are deﬁned as Nij = Vi ∩ Bj with i ∈ {1, 2} and
j ∈ {1, 2}. Each type Nij includes Nij ≤ min{NVi, NBj }
users, representing a fraction pij = Nij/N . Note that we have
the equalities pi1 + pi2 = pVi , and p1j + p2j = pBj .

The two BSs are located at the edges of a one-dimensional
physical space with length D, and are connected by a wired
backhaul. The BSs use disjoint spectrum bands, hence not
interfering with each other. BS Bj assigns orthogonal bands
W up to uplink and to W dn downlink following Frequency
Division Duplex (FDD). In the uplink, BS Bj serves each
of the NBj associated users via Frequency Division Multiple
Access (FDMA) using unicast transmissions. In the downlink,
instead, each BS Bj uses orthogonal multicast transmissions
in order to update the users in the two VR communities. For
a given user conﬁguration N = {N11, N12, N21, N22}, we
denote by wup
ij the bandwidth allocated in the uplink to each
user from the subset Nij and by wdn
ij the bandwidth allocated
for multicasting to all users in Nij. The users associated with
any BS are located at a distance d ≤ D/2 as illustrated in
Fig. 2. For the purpose of obtaining worst-case performance

virtual spaceaindependent  uplink updatesbDbdABVR communityVR communityCAphysical spaceBshared  downlink updatesCV2V1interactingusersB1B2dcTij(N, w) of user o ∈ Nij consists of the average uploading
delay T up
i (N), and downloading
delay T dn

i (N, wup), computing delay T c
ij (wdn) as in
Tij(N, w) = T up

i (N, wup) + T c

i (N) + T dn

ij (wdn).

(2)

We now discuss the three terms in (2). First, the average
uploading delay T up
i (N, wup) is, as discussed, the worst user’s
uploading delay for the NVi users in VR community Vi.
Denoting by Dw.up
the instantaneous uplink
wireless and backhaul delays for any user (cid:96) ∈ Vi, the average
uploading delay is given as

(wup) and Db.up

(cid:96)

(cid:96)

(Upload) T up

i (N, wup) = E(cid:2) max

(cid:8)Dw.up

(cid:96)

(wup) + Db.up

(cid:96)

(cid:9)(cid:3).

(3)

(cid:96)∈Vi

In (3), the expectation is taken over the random number of
transmission time slots required by the HARQ process as well
as the random backhaul delay, as detailed next.

The uplink wireless delay Dw.up

(wup) in (3) depends on
the instantaneous uplink SNRs, which are random due to
the small-scale fading coefﬁcients in (1). Speciﬁcally, if the
instantaneous SNRup is no smaller than a target threshold
θup, the received signal is successfully decoded; otherwise, a
retransmission occurs. For a target success probability η, such
that Pr(SNRup ≥ θup) = η, the threshold is given as

(cid:96)

(4)

(cid:0)η−1(cid:1) /(dασ2).

θup = P up log2
As a result, the number M up
of transmission attempts by
(cid:96)
the (cid:96)-th user follows a geometric distribution with mean
1/η. Measuring the achievable rate via Shannon capacity,
each transmission lasts for bup/[wup
(cid:96) log2(1 + θup)] seconds,
where the uplink spectrum allocation equals wup
ij if
user (cid:96) ∈ Nij. The total uplink wireless transmission delay of
the user (cid:96) is hence given as
Dw.up
(wup) = M up
(cid:96)

(cid:96) log2(1 + θup)] ,

(cid:96) = wup

(cid:96) bup/ [wup

(5)

where M up

(cid:96) ∼ Geometric (η).
The uplink backhaul delay Db.up

in (3) is non-zero only for
(cid:96)
a cross-type user (cid:96) ∈ Nij, with j (cid:54)= i. We deﬁne the indicator
δ(cid:96) such that δ(cid:96) = 1 if user (cid:96) is of cross-type, and otherwise we
have δ(cid:96) = 0. Following [10], we model the random backhaul
delay for cross-type users to follow a Gamma distribution

Db.up

(cid:96) = δ(cid:96)Bup,
(6)
where Bup ∼ Gamma(D, cbbup). The constant cb > 0
represents the propagation delay per bit and unit backhaul
length, e.g., cb = 10−8 seconds [10]. Note that the average
backhaul delay of cross-type users is cbDbup, and is hence
proportional to D and bup.

Second, the average computing delay T c

i (N) of user o ∈
Nij in (2) is the server processing time required to update
the VR model based on input data from the NVi users in
community Vi. With the clock speed fs, the processing of the
VR input data of size bup per user requires bup/fs seconds.
The average computing delay is thereby given as:

(Compute) T c

i (N) = bupNi/fs.

Finally, the average downloading delay T dn

(7)
ij (wdn) of user o
in (2) comprises the average downlink wireless transmission
delay induced by the HARQ process and the wired backhaul
delay. Denoting as Dw.dn(wdn) and Db.dn the instantaneous
downlink wireless transmission and backhaul delays, the av-
erage downloading delay for user o is computed as
ij (wdn) = E[Dw.dn(wdn)] + E[Db.dn],

(Download) T dn

(8)

where the two terms are discussed next.

For downlink transmissions, BS Bj keeps multicasting
to the associated Nij users until all of them successfully
decode the output update message. Nevertheless, the latency
for user o ∈ Nij depends solely on its own decoding process.
Following the same reasoning as for (5), the number M dn
of transmission attempts follows a Geometric distribution,
resulting in the average downlink wireless transmission delay
(9)

E[Dw.dn(wdn)] = bdn/[wdn

ij η log2(1 + θdn

ij )].

The downlink SNR threshold θdn
ij in (9) is set such that all
Nij users can successfully decode their received multicast
signals with probability η. Denoting SNR(cid:96) as user (cid:96)’s SNR,
this implies the condition Pr(min(cid:96)∈Nij {SNR(cid:96)} ≥ θdn
ij ) = η,
which yields

ij = P dn log2
θdn

(cid:0)η−1(cid:1) /(dασ2Nij).

(10)

For the backhaul term, as in (6), a backhaul transfer occurs
when the user o is of cross-type. This entails a random delay
following Gamma(D, cbbdn) distribution, yielding the average
downlink backhaul delay

E[Db.dn] = δocbbdnD,

(11)

where δo = 1 if user o is of cross-type, and δo = 0 otherwise.

III. END-TO-END LATENCY MINIMIZATION
The objective of this section is to tackle the minimization of
the average end-to-end latency studied in the previous section
with respect to the spectrum allocation w for a given user
conﬁguration N. Besides the average taken in (2) over HARQ
and backhaul delays, here we further consider the expectation
over the choice of a reference user o. Assuming a uniformly
distributed selection, user o belongs to the type Nij with prob-
ability pij = Nij/N , in which case it experiences the average
end-to-end latency Tij(N, w) in (2). The optimal spectrum
allocation w∗ = {wdn∗
} minimizing the average end-
to-end latency of user o is then given as

, wup∗

w∗ = arg min
{wdn,wup}

2
(cid:88)

2
(cid:88)

j=1

i=1

pijTij(N, w)

s.t.

2
(cid:88)

i=1

wdn

ij = W dn, wdn

ij ≥ 0 ∀j ∈ {1, 2}

2
(cid:88)

i=1

wup

ij Nij = W up, wup

ij ≥ 0 ∀j ∈ {1, 2}.

(12)

(13)

(14)

The constraints (13) and (14) impose that each BS entirely
allocates its available bandwidth for downlink multicast and
uplink unicast transmissions, respectively.

Due to the additive form of the end-to-end latency (2) and
to the distinct constraints (13) and (14), the optimal allocation
w∗ can be achieved by minimizing (12) separately with respect
to the downlink allocation wdn and the uplink allocation wup.
For the downlink, using (8), one needs to equivalently
minimize the objective function N1j/wdn
2j under
the constraint (13). This convex problem can be solved by
applying the Karush-Kuhn-Tucker (KKT) conditions, yielding
the optimal downlink allocation
ij = W dn(cid:112)Nij/((cid:112)N1j + (cid:112)N2j).
wdn∗
For uplink spectrum allocation, using (3), the said prob-
to minimizing the objective function
lem is equivalent
(cid:80)2
(cid:96) /wup
}] under the con-
straint (14), with a = bup/ log2(1 + θup). This is a convex
but non-differentiable stochastic problem. It can be tackled by

i=1 NVi E[max(cid:96)∈Vi{aM up

1j + N2j/wdn

(cid:96) + Db.up

(15)

(cid:96)

means of the stochastic approximation method, whereby the
objective function is estimated via its empirical mean with
a number T of independent samples of the relevant random
variables [11], as further detailed below. The resulting problem
can be solved by applying the projected subgradient method
with some number K of iterations [12]. Convergence to the
global optimum wup∗
is guaranteed for sufﬁciently large T
and K under suitable technical conditions [11], [12].

t=1

(cid:96) + Db.up

i=1 NVi max(cid:96)∈Vi {aM up
∈ {wup(k)
ij

To elaborate, we draw T independent samples of the
transmission attempt numbers {M up
(cid:96),t} and of the backhaul
delays {Db.up
(cid:96),t }, and consider the empirical objective function
(cid:80)2
1/T (cid:80)T
(cid:96),t/wup
(cid:96),t }. For a given
spectrum allocation wup(k)
} at the k-th iteration of
the subgradient method, we deﬁne the index (cid:96)(k)
i,t of the user
inducing the worst uploading delay in VR community Vi for
the t-th sample as (cid:96)(k)
(cid:96),t }.
The subgradient g(k)
for
the next (k + 1)-th iteration, prior to the enforcement of the
constraint (14), are then given as
T
(cid:88)

ij and the uplink allocation ˜wup(k+1)

i,t = arg max(cid:96)∈Vi {aM up

(cid:96),t/wup(k)

+ Db.up

ij

(cid:96)

(cid:96)

δ(k)
ij M up

(k)
i,t ,t
(cid:96)

and

(16)

ij

t=1

(17)

˜wup(k+1)

ij = 1 if (cid:96)(k)

)2
ij − βg(k),
respectively with a step size β > 0. The indicator function
i,t ∈ Nij, and δ(k)
equals δ(k)
ij = 0, otherwise.
The next-iterate uplink allocation {wup(k+1)
} is ﬁnally ob-
ij
, ˜wup(k+1)
tained by projecting { ˜wup(k+1)
} in (17) onto the
2j
(14). This can be easily seen to yield as fol-
segment
lows: (i) if ˜wup(k+1)
− W up/N2j)N1j/N2j, then
wup(k+1)
<
2j
( ˜wup(k+1)
= W up/N1j and
1j
wup(k+1)

< ( ˜wup(k+1)
2j
= 0 and wup(k+1)
− W up/N1j)N2j/N1j, then wup(k+1)
= 0; and (iii) otherwise,

= W up/N2j; (ii) if ˜wup(k+1)

1j

1j

1j

1j

2j

2j

aNVi
T (wup(k)
ij
= wup(k)

g(k)
ij = −

N1jW up − N1jN2j ˜wup(k+1)

+ (N2j)2 ˜wup(k+1)

wup(k+1)

1j

=

wup(k+1)

2j

=

N2jW up − N1jN2j ˜wup(k+1)

+ (N1j)2 ˜wup(k+1)

2j
(N1j)2 + (N2j)2

1j
(N1j)2 + (N2j)2

1j

2j

, (18)

. (19)

In the next section, the optimal allocation scheme is com-
pared with the equal allocation baselines for downlink multi-
cast and uplink unicast, which are given as
ij = W dn/2 and (Equal Up) wup
(Equal Dn) wdn

ij = W up/NBj . (20)

IV. NUMERICAL RESULTS AND DISCUSSION
In this section, we evaluate the end-to-end latency of a
VR mobile social network under different user conﬁgura-
tions in virtual and physical spaces. The virtual and physical
geometries determine the number of cross-type users. To
capture this important parameter, we deﬁne 0 ≤ ρc ≤ 1
as the ratio of cross-type users. Speciﬁcally, we consider
the symmetric setting with equal loads of the two BSs and
with an equal fraction of cross-type users for each BS, i.e.
p12 = p21 = ρc/2 and p11 = p22 = (1−ρc)/2, which satisﬁes
pVi = pBj = 0.5. Other simulation parameters are given as:
i = 1 kbit, cb = 10−8 seconds, fs = 2 GHz,
N = 50, bX
W X = 1 GHz, η = 0.7, P up/σ2 = 20 dB, P dn/σ2 = 30 dB,
α = 3, D = 500 m, and d = 15 m. For the proposed stochastic
optimization method, we set T = K = 50.

Fig. 3 shows that the average end-to-end latency versus the
cross-type user ratio ρc. The latency is seen to increase mono-
tonically with ρc, owing to the increasing backhaul delays

Fig. 3. Average end-to-end latency of a uniformly randomly selected user o
as cross-type ratio ρc increases, where cross-type users connect to the BS that
does not run the corresponding VR community.

of cross-type users. The proposed optimal uplink spectrum
allocation is able to partially compensate for the backhaul
delays by providing more spectrum to cross-type users. As
seen in the ﬁgure, this yields up to 25.1% latency reduction
as compared to the equal allocation in the uplink for the
intermediate value of ρc. Note that optimal uplink spectrum
allocation cannot improve the latency performance when we
have ρc = 0, i.e., no cross-type users, or ρc = 1, i.e., all
cross-type users. For such cases, all uploading user delays are
identically distributed, and it is thus not possible to prioritize
spectrum allocation to any group of users.

We also observe that the mentioned gains are achieved by
and large even with equal downlink bandwidth allocation,
since the end-to-end latency is mostly dictated by the worst
uploading delay. This is due to the fact
thanks to
multicasting and to the larger transmission power of the BSs,
downlink transmission delays are typically shorter than unicast
uplink transmission delays.

that,

Finally, for ρc > 0.5, it is beneﬁcial to support VR commu-
nity Vi on the computing server at BS Bj with j (cid:54)= i, as seen
via the dotted curves in Fig. 3. This is obtained by swapping
the two VR communities V1 and V2. The said observation
emphasizes the importance of the computing server locations,
which is an interesting topic for further research. Another
possible extension of this work is to incorporate stochastic VR
interactions that depend on the virtual-space user locations.

REFERENCES
[1] ABI Research and Qualcomm, “Augmented and Virtual Reality: The

First Wave of 5G Killer Apps,” White Paper, Feb. 2017.

[2] E. Bas¸tu˘g, M. Bennis, M. M´edard, and M. Debbah, “Towards Intercon-
nected Virtual Reality: Opportunities, Challenges and Enablers,” IEEE
Commun. Mag., vol. 55, pp. 110–117, Jun. 2017.

[3] M. S. Elbamby, C. Perfecto, M. Bennis, and K. Doppler, “Edge Com-
puting Meets Millimeter-wave Enabled VR: Paving the Way to Cutting
the Cord,” to appear in Proc. IEEE WCNC 2018.

[4] Athul Prasad, Mikko A. Uusitalo, David Navr´atil, and Mikko S¨aily,
“Challenges for Enabling Virtual Reality Broadcast Using 5G Small Cell
Network,” to appear in Proc. IEEE WCNC Wksp. CmMmW5G 2018.

[5] Facebook Spaces, Webpage [Online]. URL: http://facebook.com/spaces.
[Online]. URL:
“AltspaceVR joins Microsoft,”
[6] AltspaceVR,

http://altvr.com/joining-microsoft.

[7] Displaylink, Webpage [Online]. URL: http://www.displaylink.com/vr.
[8] A. AL-Shuwaili and O. Simeone, “Energy-Efﬁcient Resource Allocation
for Mobile Edge Computing-Based Augmented Reality Applications,”
IEEE Wireless Commun. Lett., vol. 6, pp. 398–401, Apr. 2017.

[9] Second Life, Webpage [Online]. URL: http://secondlife.com.
[10] G. Zhang, T. Q. S. Quek, M. Kountouris, A. Huang, and H. Shan,
“Fundamentals of Heterogeneous Backhaul Design Analysis and Op-
timization,” IEEE Trans. Commun., vol. 64, pp. 876–889, Feb. 2016.

[11] S. Shalev-Shwartz, O. Shamir, N. Srebro, and K. Sridharan, “Stochastic

Convex Optimization,” Proc. COLT, 2009.

[12] S. Boyd, “Subgradient Methods,” notes for EE394b, Stanford University,

Spring 2013-2014.

00.10.20.30.40.50.60.70.80.910.0040.0060.0080.010.0120.0140.016Equal Up + Equal DnEqual Up + Optimal DnOptimal Up + Equal DnOptimal Up + Optimal DnAverage End-to-End Latency (sec)Cross-Type Ratio,w.o. VR community swapw. VR community swapEqual Up     + Equal DnEqual Up     + Optimal DnOptimal Up + Equal DnOptimal Up + Optimal Dn00.10.20.30.40.50.60.70.80.910.010.0120.0140.0160.0180.020.022Equal Up + Equal DnEqual Up + Optimal DnOptimal Up + Equal DnOptimal Up + Optimal Dn