An Algorithm for Transmitting VR Video Based on
Adaptive Modulation

Jie Feng, Yongpeng Wu, Guangtao Zhai, Ning Liu, and Wenjun Zhang

9
1
0
2

n
u
J

7
2

]
I

N
.
s
c
[

1
v
2
0
4
1
1
.
6
0
9
1
:
v
i
X
r
a

Abstract—Virtual reality (VR) is making waves around the
world recently. However,
traditional video streaming is not
suitable for VR video because of the huge size and view switch
requirements of VR videos. Since the view of each user is limited,
it is unnecessary to send the whole 360-degree scene at high
quality which can be a heavy burden for the transmission system.
Assuming ﬁled-of-view (FoV) of each user can be predicted with
high probability, we can divide the video screen into partitions
and send those partitions which will appear in FoV at high
quality. Hence, we propose an novel strategy for VR video
streaming. First, we deﬁne a quality-of-experience metric to
measure the viewing experience of users and deﬁne a channel
model to reﬂect the ﬂuctuation of the wireless channel. Next,
we formulate the optimization problem and ﬁnd its feasible
solution by convex optimization. In order to improve bandwidth
efﬁciency, we also add adaptive modulation to this part. Finally,
we compare our algorithm with other VR streaming algorithm
in the simulation. It turns out that our algorithm outperforms
other algorithms.

Index Terms—virtual reality, FoV prediction, QoE optimiza-

tion, convex optimization, adaptive modulation

Fig. 1.

Illustration of the tile division.(Blue tiles represents the FoV area.)

I. INTRODUCTION

B. Related work

A. Background

Virtual reality (VR) promises to revolutionize the way
people interact with media. Providing users with an immersive
experience in a virtual world by transmitting panoramic video
streams, VR is drawing more and more attentions and has
been applied to many ﬁelds such as entertainment, medical
application, education, and so on. A research report on Chinese
VR market indicates that the VR market is expected to exceed
$15.9 billion in 2019 and reach $30 billion in 2020 [1].

However, current technologies for streaming try to fetch all
the portion of the chunks in the same quality, which results
in a high bandwidth utilization [2] and a limitation on content
generation. It is clear that traditional video streaming strategies
cannot be directly applied to VR video steaming. This is
because the traditional method does not consider VR’s unique
features such as its huge size and view switch requirements.
Moreover, video quality, transmission errors and delay should
be considered especially when a VR video is transmitted over
unstable band-limited wireless channels. Hence, transmission
algorithms are required to save resources and ensure the
quality of experience (QoE) of the users.

J. Feng, Y. Wu, G. Zhai, N. Liu,

and W. Zhang are with
Jiao Tong Uni-
the Department of Electronic Engineering, Shanghai
versity, Minhang 200240, China (e-mail:
search4meaning@sjtu.edu.cn;
yongpeng.wu@sjtu.edu.cn; zhaiguangtao@sjtu.edu.cn; ningliu@sjtu.edu.cn;
zhangwenjun@sjtu.edu.cn)(Corresponding author: Yongpeng Wu.).

The most common way adopted by researches on VR video
streaming is to divide the initial large imagine into smaller
pieces (often called tiles). Given that each time users can only
watch a certain part of a panoramic video which is called
Field of View (FoV), there is no need to transmit all the tiles
in high quality. Fig.1 shows an illustration of tile division.
And lots of bandwidth can be saved by only setting tiles in
FoV to high quality. Many works have been done on this
basis. Hosseini proposed an adaptive view-aware bandwidth-
efﬁcient VR video streaming framework based on the tiling
features of spatial relationship description [3]. A rate adaption
algorithm was proposed in [4]. Its basic idea is to fetch the
invisible portion of a video at the lowest quality based on users
head movement prediction, and to adaptively decide the video
playback quality for the visible portion based on bandwidth
prediction. Liu et al. considered unequal error protection for
FoV and formulated the inherent error resilient VR video
transmission problem into a joint source and channel coding
problem [5].

Besides, there are also many researches on resource al-
location with multiple users. Chen et al. proposed a novel
VR model based on multi-attribute utility theory and for-
mulate the resource allocation problem as a noncooperative
game. A distributed algorithm based on the machine learning
framework of echo state networks was proposed to solve the
resource allocation problem [6]. Since keeping sending real

 
 
 
 
 
 
time tracking information about users FoV will lead to a
signiﬁcant burden for a communication system, some work
has been done on FoV prediction. Zhu et al. established a
model to predict the saliency maps and scanpaths for the
users’ head movement and eye motion data and scan paths
data, respectively [7].

II. SYSTEM MODEL

In this section, we introduce the system model considered
in this paper. In general, we incorporate saliency map, wireless
channel, and adaptive modulation scheme to the system model
in [4].

A. Evaluation metrics for video quality

C. Our work

The intention of our work is to present a bandwidth-efﬁcient
VR video transmission strategy with relatively high QoE under
changeable channel conditions. In particular, we propose our
model and design an algorithm that can adaptively adjust
encoded bitrate according to the wireless channel condition.

We ﬁrst deﬁne a QoE metric. Two issues are considered
when deﬁning the QoE metric. One is the video quality, and
the other is the stall time during adjacent chunks due to bad
channel condition. Intuitively, high encoded bitrate can lead
to severe stall time. In our QoE metric, we adopt the idea of
saliency map to reﬂect the video quality and use the stall time
deﬁnition in [4]. The QoE metric shows a trade-off between
video quality and play-back delay.

Secondly, we formulate the optimization problem to maxi-
mize the QoE metric. With some relaxations, we convert the
original problem to a convex one. Based on the solution of
the convex problem, we use our algorithm to get the feasible
solution of the original problem.

Next, we provide simulations to examine the proposed algo-
rithm. Numerical results indicate that the proposed algorithm
performs better comparing to two existing algorithms in [4].
Moreover, adaptive modulation brings additional performance
gains.

In general,the contributions of our work are summarized as

follows:

• We formulate the QoE metric for VR video streaming on

the basis of saliency map.

• We convert the optimization problem of QoE to a relaxed
convex one and propose an algorithm to ﬁnd the feasible
solution.

• We employ adaptive modulation to take the fading effect
of wireless channel into consideration when designing the
transmission strategy.

• Numerical results are provided to illustrate the effective-
ness of the proposed algorithm. The proposed algorithm
achieves signiﬁcant performance gains comparing to the
existing algorithms in [4].

The rest of this paper is organized as follows. In Section II,
we propose our system model. In Section III, we formulate the
QoE maximization problem and provide an algorithm to ﬁnd
its feasible solution. Numerical results are provided in Section
IV. Finally, conclusions are drawn in Section V.

Notation: Lowercase letters x and uppercase letters X
denote scalars. The Euclidean norm operator is denoted by
(cid:107)·(cid:107). Let z ∼ CN (0, σ2) denote a complex Gaussian random
variable z with zero mean and variance σ2.

i∈Vk

We assume the video is composed of K chunks. Each
chunk lasts L seconds. Then,
the total video duration is
KL. For each chunk k ∈ {1, 2, ..., K}, there are N tiles in
total. The tile i within chunk k can be encoded at the rate
Ri,k ∈ {R1, R2, ..., Rmax} where R1 < R2 < ... < Rmax.
(Note that tiles can only be encoded with optional discrete
rates.) Then the total size of the chunk k can be calculated
as L (cid:80)N
1 Ri,k. The set of the serial number of M tiles in the
FoV area of chunk k is denoted as Vk. So the size of the FoV
area in chunk k is calculated as L (cid:80)

Ri,k.

Next, we present evaluation metrics to measure users’
viewing experience according to the encoding rate. Note that
here we just take encoding rate as a reﬂection of the picture
quality of a VR video without considering the stall time.
Functions like EM (R) = aRb(a > 0, 0 < b < 1) can be
good choices. The constraint on the range of a and b ensures
that the function is a strictly increasing convex function, and
its ﬁrst derivative decreases with the increase of independent
variable R, which is very close to the actual situation. With
the encoding rate increasing, users will get higher quality of
experience. But this upward trend keeps weakening when the
encoding rate reaches higher levels. In terms of human brain
characteristics, the perception of an entire scene is achieved
in the brain by merging together individual images captured
at various ﬁxation points throughout successive saccadic eye
movements. In general, tiles with distinctive features are more
likely to attract users and play a greater role in brain imaging.
Ri,k as a dominant opti-
Therefore, instead of regarding min
i∈Vk
mization metric as in [4], we introduce the concept of saliency
map in this paper. In real experiments [8], users’ eye-gaze data
can be stored and analyzed to build a saliency map in witch
tile i in chunk k is attached with weight wi,k. Finally, the
evaluation metrics for video quality of chunk k can be written
as:

(cid:88)

wi,kEM (Ri,k) .

(1)

i∈Vk

B. Wireless channel model

To meet the increasing demand of VR, we need to consider
the wireless transmission of VR in a large space. Hence, we
should consider the impact of the wireless channel on trans-
mission. In our model, we consider a channel with additive
white Gaussian noise affected by both large scale fading and
small scale fading

h ∼ αhr,

(2)

α is subject to a uniform distribution, representing the large
scale fading. hr ∼ CN (0, 1) represents the small scale fading.

where the bandwidth B also equals to the symbol rate. mk−1B
is the downloading rate. L (cid:80)N
i=1 Ri,k−1 is the total size of
chunk k.

Chunk k can only be played after it is downloaded to the
buffer and chunk k − 1 has been played. Let (cid:101)tk denote the
play time of chunk k. For k > 1, we have
L (cid:80)N

(cid:41)

(cid:40)

(cid:101)tk = max

(cid:101)tk−1 + L, tk +

i=1 Ri,k
mkB

= max






(cid:101)tk−1 + L, t1 + L

k
(cid:88)

j=1

(cid:80)N

i=1 Ri,j
mjB






.

(5)

Since the start time is considered to be when users see the
ﬁrst chunk being played, we simply set t1 = (cid:101)t1 = t2 = 0.

Stall time will appear if the play of chunk k −1 ends before
chunk k is downloaded to the buffer. Denote the stall time
between chunk k − 1 and chunk k as ∆tk (∆t1 = 0) and we
have

∆tk = (cid:101)tk − (cid:101)tk−1 − L
k−1
(cid:88)

(cid:110)

= max

0, L

j=1

(cid:80)N

i=1 Ri,j
mjB

(cid:111)

− (cid:101)tk−1 − L

= max

k−1
(cid:88)

(cid:110)
0,L

j=1

(cid:80)N

i=1 Ri,j
mjB

(cid:111)
−((cid:101)tk−2 +L+∆tk−1)−L

(6)

(cid:110)

= max

0, L(

k−1
(cid:88)

j=2

(cid:80)N

i=1 Ri,j
mjB

(

−

∆tj
L

− 1)

+

(cid:80)N

i=1 Ri,k
mkB

(cid:111)
.

− 1)

III. QOE OPTIMIZATION

Fig. 2. BER for various modulations level as a function of short-term average
SNR.

C. Adaptive modulation

Adaptive modulation is widely used in today’s wireless
transmission and has been adopted in our transmission strategy
to improve bandwidth utilization. The basic idea is the most
bandwidth-efﬁcient modulation is used at a guaranteed low bit
error ratio (BER). Fig.2 shows BER for various modulations
the receiver.
as a function of short-term average SNR at
Suppose the symbol rate and transmitted power are ﬁxed, we
can determine the modulation mode according to the detected
channel condition. Let mk be the spectral efﬁciency for chunk
k, and it can be mathematically expressed as:
(cid:40)
i : S(Pe, i) (cid:54) (cid:107)h(cid:107)2 Pt
BNo

mk = max

(3)

(cid:41)

.

In the above equation, i ∈ {1, 2, 4, 6} represents the spectral
efﬁciency of BPSK, QPSK, 16-QAM and 64-QAM. S(Pe, i)
gives the threshold value of SNR for modulation mode cor-
responding to i with BER equal to Pe. B is the channel
bandwidth.

D. Stall time

VR video chunks are ﬁrst downloaded to users’ local buffer
before they are played. In practice, the buffer capacity is
limited. However, considering the large amount of VR video
data, the downloading speed is too limited for the cache to
hold multiple chunks at the same time. So we do not consider
the limitation of buffer capacity on our model. Chunk k can
only be downloaded after chunk k − 1 has been downloaded.
Let tk denotes the start time of downloading chunk k and
suppose there is no gap between downloading two chunks.
Then, for k > 1, we have

tk = tk−1 +

L (cid:80)N

i=1 Ri,k−1
mk−1B

= t1 + L

k−1
(cid:88)

j=1

(cid:80)N

i=1 Ri,j
mjB

,

(4)

In this section, we ﬁrst deﬁne our QoE metrics and formu-
late the optimization problem. Next, we design an algorithm
to ﬁnd the feasible solution.

A. QoE maximization problem

The quality of users’ experience should be determined in
two ways. One is the encoding rate at FoV area which directly
affects the quality of the video scene, and the other is the stall
time when video is played. Obviously, we need a steaming
strategy that makes the former term larger while the latter
smaller. Thus, we deﬁne the QoE metrics of chunk k as follow:

QoE =

(cid:88)

i∈Vk

wi,kEM (Ri,k) − λ∆tk.

(7)

the same time, we would like to make the following

At
explanations to this optimization target:

• λ > 0 is the weight of stall time ∆tk. As λ increases, the
stall time and average bitrate in FOV will both decrease
in the optimal solution.

• In our model, our optimization target is speciﬁc to each
chunk. And the optimal result for chunk k is based on
chunk 1, · · · , k − 1. So the ﬁnal solution may not be the
optimal for the whole video. However, due to technical
limitations, it is impossible to achieve channel detection
and FoV prediction for a long time like a whole video
it makes sense to narrow down the
duration. Hence,
optimization time interval.

• When solving the optimization problem, we suppose
that the FoV area is correctly predicted. However, it is
quite possible to predict a wrong area. And this is also
the reason why we encode tiles outside FoV at bitrate
R1 (lowest optional rate).

So far, we formulate our optimization problem for chunk k

maximize
Ri,k,i∈Vk

(cid:88)

i∈Vk

wi,kEM (Ri,k) − λ∆tk

s.t. ∆t = max

0, L(

(cid:110)

k−1
(cid:88)

j=2

(cid:80)N

i=1 Ri,j
mjB

(

−

∆tj
L

− 1)

+

(cid:80)N

i=1 Ri,k
mkB

(cid:111)
,

− 1)

Ri,k ∈ {R1, · · · , Rm} .

in which constrain (6) is also equivalent to the following two
inequalities

∆tk ≥ 0,

(8)

∆tk ≥ L(

k−1
(cid:88)
(

j=2

(cid:80)N

i=1 Ri,j
mjB

−

∆tj
L

−1)+

(cid:80)N

i=1 Ri,k
mkB

−1).

(9)

And the reformulated optimization problem is
(cid:88)

wi,kEM (Ri,k) − λ∆tk

maximize
Ri,k,i∈Vk

i∈Vk
s.t. ∆tk ≥ 0,

Algorithm 1 The main algorithm for ﬁnding feasible solutions
for chunk k to the QoE opimization problem.

(cid:110)

Rj : Rj ≤ R∗
i,k
Rj : Rj ≥ R∗
i,k
i,k − Ri,k);

(cid:111)

(cid:111)

;

;

1: Initialization: Tk = 0.
2: for each i ∈ Vk do
(cid:110)
3:

Ri,k ← max

4:

Ri,k ← min
Tk ← Tk + (R∗

5:
6: end for
7: if Tk = 0 then
exit;
8:
9: end if
10: for j = 1, · · · , M do
11:

i ← (cid:8)q : wq,k is the jth largest weight for tiles in Vk
Tk ← Tk − (Ri,k − Ri,k);
if Tk ≥ 0 then

(cid:9) ;

12:
13:

Ri,k ← Ri,k;

else

14:
15:
16:
17:
18: end for

end if

break;

this will still be a waste of bandwidth. Thus, we provide
an algorithm with higher bandwidth efﬁciency and solutions
closer to the optimal.

The basic idea of the algorithm is that we try to increase
the encoding rate according to the priority of weights in the
saliency map without increasing the delay. Since EM (·) is
convex, the improvement in QoE slows down as the encoding
rate increases. And generally the overall quality improvement
at FOV is better than only one highlighted. Thus, rather than
setting the encoding rate of one tile two levels up, we prefer
to set both two tiles one level up.

IV. SIMULATIONS AND RESULTS

In this section, we evaluate our algorithm in simulations, and
compare it with other VR streaming algorithms. (Note that the
curves obtained by our algorithm is marked as “main” in the
ﬁgure notes.)

∆tk ≥ L(

k−1
(cid:88)
(

(cid:80)N

i=1 Ri,j
mjB

−

∆tj
L

−1)

j=2
(cid:80)N

+

i=1 Ri,k
mkB

−1),

A. Parameter setup

Ri,k ∈ {R1, · · · , Rm} .

B. Feasible solution

The optimization problem mentioned above is not a typical
convex one because the range of variables Ri,k is discrete. In
this subsection, we present our algorithm that ﬁnds a feasible
solution to the problem.

Suppose now the range of Ri,k is continuous from R1 to
Rm, the original problem reduces to a convex optimization
problem where the optimal value is denoted as R∗
i,k. If we
choose Ri,k = max
, we will get a solution
which is close to the optimal solution. However in most cases,

Rj : Rj ≤ R∗
i,k

(cid:111)

(cid:110)

In simulation, the VR video is divided into 4 × 8 tiles.
And the FoV area is consists of 2 × 3 tiles. The duration
of each chunk is 2 seconds. And for the number of chunks
K = 1000, the whole length of the VR video is around 36
minutes. And we set each tile’s rate Ri,j ∈ {1, 2, 3, 4}Mbps.
Half the weights wi,k are set at 1 and the rest are randomly
set between 1 and 2.

The channel bandwidth is 20Mbps with a 25% ﬂuctuation.
We change α every 40 seconds and hr every 2 seconds based
on their distribution to simulate the channel condition.

The probability of FoV being correctly predicted is denoted
as β. And in our simulations, we set the value of β to vary
between 0.5 and 0.9.

Fig. 3. The variation of the normalized QoE with β.

Fig. 4. The variation of the average bitrate in FoV with β.

Fig. 5. The distribution of the bitrates for FoV when β = 0.8.

Fig. 6. The distribution of the bitrates for the whole video when β = 0.8.

We also simulate algorithms mentioned in [4] for VR
streaming. In the baseline algorithm [9], all the tiles within
a chunk is encoded at a same rate although most tiles will not
be seen. And greedy algorithm [10] only sends those tiles with
highest probability to be the apart of FoV and ignores the rest
ones, which may result in users seeing blank tiles when FoV
prediction fails. Apart from these, we also use our algorithm
on the situation when bits are only QPSK modulated [4] to
see how adaptive modulation will beneﬁt the system. Unless
otherwise noted, by saying “our algorithm”, we refer to our
algorithm with adaptive modulation.

B. Results and discussions

greedy algorithm selects a larger potential FoV area than our
algorithm at the cost of rest tiles unsent. In other words,
in greedy algorithm, bandwidth resources are centralized for
a certain portion of tiles rather than all of them. When β
is low, blank tiles may be sent
in FoV by using greedy
algorithm, resulting in low QoE. However, as β increases
and FoV prediction error decreases, greedy algorithm shows a
faster growth. The curve of baseline algorithm remains ﬂat be-
cause its performance only depends on the channel condition.
Comparing the performance of our algorithm under different
modulation schemes, we verify that adaptive modulation is
superior to QPSK. Additionally, the advantage of adaptive
modulation over QPSK keeps expanding as β increases.

We observe from Fig. 3 that as the FoV prediction proba-
bility β increases, both our algorithm and greedy algorithm
increase QoE. The performance of our algorithm is better
than greedy algorithm and baseline algorithm. As β increases,
greedy algorithm approaches our algorithm. This is because

The average bitrate of tiles in the FoV area vs. β is shown
in Fig. 4. It is illustrated in Fig. 4 that except for baseline
algorithm, the average bitrate increases monotonically with
β for other algorithms. And our algorithm outperforms other
algorithms by at least 23%. Compared with QPSK modulation,

[7] Y. Zhu, G. Zhai, and X. Min, “The prediction of head and eye movement
for 360 degree images,” J. Signal Processing: Image Communication
(2018). [Online]. Available: http://doi.org/10.1016/j.image.2018.05.010.
[8] P. Lungaro, R. Sj¨oberg, A. J. F. Valero, A. Mittal, and K. Tollmar,
“Gaze-Aware streaming solutions for the next generation of mobile VR
experiences,” IEEE Trans. Visual. Comput. Graphics, vol. 24, no. 4, pp.
1535-1544, Apr. 2018.

[9] F. Qian, L. Ji, B. Han, and V. Gopalakrishnan, “Optimizing 360 video
delivery over cellular networks,” in Proc. 5th Workshop on All Things
Cellular: Operations, Applications and Challenges, ser. ATC 16. New
York, NY, USA: ACM, 2016.

[10] E. Kuzyakov and D. Pio.
encoding techniques
https://code.facebook.com/posts/1126354007399553/
video-encoding-techniques-for-360-video-and-vr/.

(2017, Jan. 28) Next-generation video
[Online]. Available:
next-generation-

for 360 video and vr.

our algorithm with adaptive modulation provides signiﬁcant
improvement of average bitrate in FoV.

Fig. 5 shows the distribution of tiles with different encoding
levels in the FoV area. Of all the algorithms, our algorithm
provides the highest proportion of 4Mbps tiles. For baseline
algorithm, 1Mbps tiles dominate. One unique feature of greedy
algorithm is that it is the only algorithm that have 0Mbps
tiles. This is because blank tiles will appear in the actual FoV
area when prediction error occurs according to the encoding
scheme of greedy algorithm. It is also illustrated in Fig. 5
that with adaptive modulation, our algorithm fetches more
percentage of 4Mbps tiles and fewer 1 or 2Mbps tiles than
QPSK modulation.

the dominant

Fig. 6 plots the percentage of tiles encoded in different
levels for the whole video. For algorithms that encode all
the tiles, 1Mbps tiles have the largest proportion. While in
greedy algorithm,
tiles are blank tiles. The
percentage of 4Mbps tiles of greedy algorithm exceeds that
of our algorithm because it selects a larger potential FoV area
than our algorithm at the cost of rest tiles unsent. However,
greedy algorithm still performs poorer than our algorithm in
QoE because FoV can not be predicted 100% correctly and
blank tiles will cause severe impact on QoE.

V. CONCLUSION

In this paper, we propose a novel strategy for VR video
streaming based on adaptive modulation. We deﬁne a QoE
metric according to features of brain imaging and provide an
algorithm to ﬁnd feasible solution of the QoE maximization
problem. We evaluate our algorithm in simulations to compare
it with baseline algorithm and greedy algorithm. In addition,
we use our algorithm under QPSK modulation to see the
advantage of adaptive modulation. Numerical results indicate
that our algorithm outperforms other algorithms. Besides,
compared to QPSK modulation, our algorithm improves the
QoE by at least 13% using adaptive modulation. In the future,
we expect to evaluate our algorithm in real VR videos.

REFERENCES

[1] Prospective
market
China
https://bg.qianzhan.com/report/detail/7fbbfaa066164817.html.

Industrial
and
reality

Research
investment

Institute.
strategy

outlook
virtual

[Online].

industry.

Report
planning

of
on
Availeble:

[2] B. Begole.
burst when
http://www.forbes.com/sites/valleyvoices/2016/02/09/why-the-internet-
pipes-will-burst-if-virtual-reality-takes-off.

internet
pipes will
[Online]. Available:

27) Why
takes

(2017,
virtual

the
off.

reality

Jan.

[3] M. Hosseini, “View-aware tile-based adaptations in 360 virtual reality
video streaming,” in Proc. IEEE Virtual Reality (VR), Los Angeles, CA,
2017, pp. 423-424.

[4] A. Ghosh, V. Aggarwal, and F. Qian, “A rate adaption algorithm for tile-
based 360-degree video streaming,” arXiv preprint arXiv:1704.08215,
2017.

[5] Z. Liu, S. Ishihara, Y. Cui, Y. Ji, and Y. Tanaka, “JET: Joint source
and channel coding for error resilient virtual reality video wireless
transmission,” J. Signal Processing, no. 147, pp. 154-162, 2018.
[6] M. Chen, W. Saad, and C. Yin, “Virtual reality over wireless networks:
quality-of-service model and learning-based resource management,”
IEEE Trans. Commun., vol. 66, no. 11, pp. 5621-5635, Nov. 2018.

