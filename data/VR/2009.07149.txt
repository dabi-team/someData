CoVR: A Large-Scale Force-Feedback Robotic Interface for
Non-Deterministic Scenarios in VR

Elodie Bouzbib1,2

Gilles Bailly1

Sinan Haliyo1

Pascal Frey2

1Sorbonne Université, CNRS, ISIR. Paris, France
2Sorbonne Université, ISCD. Paris, France

0
2
0
2

p
e
S
5
1

]

C
H
.
s
c
[

1
v
9
4
1
7
0
.
9
0
0
2
:
v
i
X
r
a

Figure 1. CoVR is a physical column mounted on a 2D Cartesian ceiling robot to provide strong kinesthetic feedback (> 100N) in a room-scale VR arena.
The column panels are interchangeable and its movements can safely reach any location in the VR arena thanks to XY displacements and trajectory
generations avoiding collisions with the user. When CoVR is static, it can resist to body-scaled users’ actions, such as (A) users pushing on a static
tangible rigid wall with a high force or (B) leaning on it; When CoVR is dynamic, it can act on users. (C) CoVR can pull the users to provide large
force-feedback or even (D) transport the users.

ABSTRACT
We present CoVR, a novel robotic interface providing strong
kinesthetic feedback (100 N) in a room-scale VR arena. It
consists of a physical column mounted on a 2D Cartesian
ceiling robot (XY displacements) with the capacity of (1)
resisting to body-scaled users’ actions such as pushing or
leaning; (2) acting on the users by pulling or transporting them
as well as (3) carrying multiple potentially heavy objects (up
to 80kg) that users can freely manipulate or make interact
with each other. We describe its implementation and deﬁne a
trajectory generation algorithm based on a novel user intention
model to support non-deterministic scenarios, where the users
are free to interact with any virtual object of interest with no
regards to the scenarios’ progress. A technical evaluation and
a user study demonstrate the feasibility and usability of CoVR,
as well as the relevance of whole-body interactions involving
strong forces, such as being pulled through or transported.

Author Keywords
Virtual Reality; Haptics; Kinesthetic Feedback; Actuated
device; Tangible User Interface; Encountered-type Haptic
Devices; Robotic Graphics

ACM ISBN 978-1-4503-2138-9.
DOI: 10.1145/1235

INTRODUCTION
While visual and auditory displays in Virtual Reality (VR)
have reached a level where the produced stimuli are quite
convincing, haptic technology is still poor compared to the rich
ways humans can interact with their environment. Multiple
directions have been envisioned to enhance the users’ haptic
experiences in VR, through hand-held controllers or wearables
simulating the environment [22, 11], or through the direct
manipulation of passive props [37, 14].

In these regards, McNeely introduced Robotic Graphics and
more speciﬁcally Robotic Shape Displays (RSD) [45] in 1993
as a concept for providing force-feedback in VR. It explores
the use of a robotic interface in the VR arena to provide haptic
experiences, while the user remains unencumbered (no wear-
ables, no controllers) [67]. It aims to stay out of reach when
no interaction is required, and to displace passive props to
dynamically overlay virtual ones otherwise.

Multiple expanding ﬁelds such as Gaming, Training or Simula-
tion could beneﬁt from this concept. Several approaches have
already been conducted to instantiate it, from human actuators
[19] to drones [5]. However, they often suffer from several
technical trade-offs (e.g. cost, real workspace, embedded
mass, speed, accuracy) that grow into interaction challenges
(e.g. locomotion whole body interaction, force-feedback, free
manipulation of multiple props).
In this paper, we propose CoVR1, a novel Robotic Shape
Display providing whole-body interactions and strong force

1CoVR, pronounced "Cover", stands for a Column in VR which
physically covers for virtual objects

 
 
 
 
 
 
feedback in room-scale arenas. We detail our approach from
three complementary perspectives:

From a mechanical perspective, CoVR is a 2D Cartesian ceil-
ing robot, carrying a column. With only two single degrees of
freedom (XY displacements), CoVR is a large-scale grounded
robot which exhibits notable mechanical capabilities: high lat-
eral and vertical force feedback and perceived stiffness (over
100 N) and load capabilities (over 80 kg). It hence can trans-
port a variety of potentially heavy props and objects to stand
in for their virtual counterparts. We demonstrate that our im-
plementation is fast (over 1.0 m/s) and accurate (under 2 cm
in a 30 m3 arena).

From a software perspective, while it is easy to control Carte-
sian robots as they only rely on XY displacements, deﬁning
the robot target positions can be challenging. The system has
to predict where the next interaction will occur, while avoid-
ing the user for unexpected collisions. We thus elaborate a
user intention model to make CoVR always available prior
to the users’ interactions, even in non-deterministic scenarios,
i.e. where users are free to interact with any virtual object of
interest with no regards to the scenarios’ progress. Given the
position and orientation of the user as well as the objects of
interest’s, the model estimates the best positions for the robot
and its optimal trajectories to reach an object of interest while
respecting safety constraints (e.g. safe-zones around the user).

A technical evaluation demonstrates that (1) user intentions
can be captured using available data from a single HMD with
no additional apparatus in a room-scale VR arena and that (2)
our system successfully reaches targets prior to interactions in
most of non-deterministic scenarios with randomly distributed
targets and distractors.

From the interaction perspective, CoVR offers (1) body-scaled
interactions such as leaning or pushing involving strong forces
with a static column (Figure 1 - A, B), or (2) dynamic inter-
actions such as being pulled through by large traction forces
(Figure 1 - C). CoVR can displace over 80kg of embedded
mass, which enables (3) interactions with potentially heavy
objects that users can freely manipulate but also (4) transport
of the users themselves (Figure 1 - D).

We report on a user study demonstrating (1) the robustness
of both CoVR mechanical and software implementations, (2)
the beneﬁts of a robotic interface providing body-scale inter-
actions and strong forces and (3) in particular "being trans-
ported", which was the favourite one.

RELATED WORK
Approaches to provide physical interactions in virtual reality
are to either simulate physical objects or to exploit the ones
available from the environment. CoVR is part of a hybrid
approach, which uses robotic devices to displace or render
physical objects.

[27, 23] but can render high quality kinesthetic feedback (over
30N) [53]. Most of these solutions provide stimulation at the
scale of the hand without any regards concerning whole-body
interactions. To widen the workspace, alternatives attach the
device to mobile platforms [41, 24, 52, 48, 25, 40, 26, 25],
which remain slow and require to be held continuously whilst
moving (which is opposed to Krueger’s postulate to develop
unencumbered artiﬁcial realities [67]).

In contrast, several low-cost haptic devices have been proposed
in HCI. Typically, wearable or hand-held devices [4, 1, 44, 8,
11, 68, 21, 61, 31, 57, 42, 22, 6, 20] are naturally compatible
with large environments. They can simulate various haptic
features (weight, stiffness, shape, texture) on different body
parts. However, they provide limited kinesthetic feedback and
they need to be held continuously.

Exploiting physical objects
The second approach exploits directly physical objects placed
in the VR arena, following Insko’s postulate that passive props
enhance virtual environments [37]. For instance, one solu-
tion is for each virtual object to annex a physical object with
similar properties in the VR arena [32]. Another solution is
to use human actuators [19] who execute a subtle choregra-
phy to move the physical objects at the right place and time.
The choregraphy is rather costly and time-consuming. Some
solutions aim to reduce the number of human actuators to
move physical objects by using other users [17, 16] or even
the users themselves [15] at the cost of reducing the number
of interactive features.

Robotic Shape Displays
The concept of Robotic Shape Displays (RSD) [45] focuses on
the mobile, unencumbered and untethered aspect of the human
[67]. It consists of using a robot to overlay virtual objects with
physical props. We distinguish the robotic system (hardware)
from their trajectory generation algorithms (software):

Robotic system. Recently, several classes of prototypes aimed
to instantiate the original Robotic Shape Display concept by
displacing objects [58, 5, 30, 38, 36] or simulating them [56]
to meet the users without impairing their movements.

Drones can transport objects that users can explore [70, 39,
33] or manipulate [5] in a theoretically unlimited workspace
(in practice, the workspace is limited to 2.5 m3 because of
technical constraints). This approach only provides a small
amount of force feedback as state-of-the-art drones can not
resist to human actions. Moreover, this technology has several
technical limitations including speed (< 0.5ms/s), accuracy
(> 7cm), autonomy and safety. Moreover, the accuracy and
reliability of these systems decrease with the embedded mass
of the props, which reduces the range of available scenarios
with high kinesthetic feedback.

Simulating physical objects
Several devices have been proposed to simulate physical ob-
jects in VR, with a trade-off between the quality of the haptic
rendering, especially kinesthetic feedback and the workspace
size [53]. These devices are usually limited to desktop usage

Lightweight mobile robots [30, 58, 66]) or lightweight robotic
arms [7, 65, 73, 45, 69, 55, 35] provide a medium amount
of force feedback, but lack an efﬁciency of displacements.
Mobile robots are limited in speed (< 0.5 m/s) and autonomy
while robotic arms are limited to desktop usage.

Only few prototypes provide a high amount of force feed-
back. TilePop [62] or LiftTiles[59] modify the ﬂoor topology
with a large inﬂatable mat covering the surface of the VR arena.
This provides high vertical force feedback and hence supports
whole-body interactions below 1m (eg user sitting [74]), de-
spite slow inﬂation (5s) and deﬂation (20s) times. Relying on a
robust robotic arm such as a Kuka [38, 46], can produce a high
blocking force and hence provide large kinesthetic feedback
at a body-scale, in spite of its cost. This robustness obviously
goes along with strong software safety considerations around
the user. These prototypes do not easily scale to VR arenas
and do not let users freely manipulate a wide range of props.

Trajectory Generation. The quality of the interaction does
not only depend on the hardware implementation (eg speed)
but also on the algorithm to generate trajectories, especially
in non-deterministic scenarios2. When the device does not
know in advance which virtual object to physically overlay,
it is thus necessary to (1) build a user intention model (e.g.
[12]) to estimate what will be next object to overlay and (2) a
path planning algorithm (e.g. [18]) to displace the robot to
the target location without colliding obstacles. Only few of
the above systems [38, 72, 73] rely on these components to
support non-deterministic scenarios. However, they require
multiple robots [58, 65] or speciﬁc devices (e.g. eye-tracker
[12]). In contrast, we elaborate a low-computational intention
model working with common HMDs.

In summary, Robotic Shape Display systems still face multiple
interaction (e.g. whole body interaction, locomotion, force
feedback, free manipulation of multiple props) and technical
challenges (speed, accuracy, safety, price). CoVR addresses
many of these challenges and focuses on providing large force-
feedback (100N). CoVR supports whole-body interactions
while letting users physically unencumbered. It is designed for
Gaming or Training purposes in large virtual arenas (≈30m3).
CoVR can carry potentially heavy physical props to match
virtual objects the user is about to interact with, without sacri-
ﬁcing speed, accuracy, safety or price.

DESIGN AND IMPLEMENTATION OF CoVR
When designing our Robotic Shape Display, CoVR, we primar-
ily focused on force feedback and workspace size as design
considerations (which is a challenging trade-off for haptic de-
vices [53]) as well as speed, interaction opportunities, price
and safety. We initially considered mobile robots such as [29].
However, these interfaces are limited by a compromise be-
tween force-feedback, speed and autonomy. More particularly,
we decided to focus on enabling strong force feedback at a
whole-body scale and allowing different body postures. We
then deliberated upon a grounded solution, a 2D Cartesian
ceiling-mounted robot, which can be integrated into a room-
scale arena3 (4x4x2.5m; LxWxH). The advantages are speed,
accuracy, force-feedback, while allowing to move potentially

2Non-deterministic scenarios consist of scenarios where multiple
virtual objects are available at the same time, and the user is free to
interact with any of them. The system does not know in advance
which one to physically overlay.
3The robot can be mounted on the ceiling or on an external truss
structure (triangle aluminum Global Truss) as shown in Figure 2.

heavy physical objects without the embedded mass affecting
its displacements.

Another important consideration was the number of degrees of
freedom (DoF) of the robot (X −Y planar motion, Z elevation,
W rotation around Z, 6DoF Robotic arm...). When dealing
with robotic interfaces, a trade-off between price, complexity
and interaction possibilities can be drawn. We realised that
2D planar motion carrying a modular structure already allows
quite a large variety of scenarios while keeping a low technical
complexity and cost. However, our chosen architecture can be
extended with additional DoFs (for instance, by attaching a
6DoF Kuka robotic arm; see section Discussion).

In the following sections, we describe the main components
of the ﬁnal4 version of our system. We then evaluate CoVR
in a technical evaluation validating its control through a user-
intention based algorithm.

Robotic system
Robot. CoVR relies on a 2D Cartesian ceiling robot (Figure
2), actuated with DC Motors (Dunkermotoren 55x30, KPL43
gearbox,1.81Nm torque for X-axis, Dunkermotoren 63x55,
KPL57 gearbox, 9.75Nm torque for Y-axis) trough a pulley-
belt mechanism (Figure 2). We chose a pulley-belt mechanism
because it is simple to implement and can easily be scaled to
larger VR arena. The robot moves a 15x15cm2 carriage on
which is attached a modular structure (see below).

The robot is controlled in speed with a Roboclaw 2x30A
V5E motor controller and AEAT-601B-F06 encoders, mounted
on a custom-designed 3D-printed support. The Roboclaw
controller is connected to an Arduino MEGA 2560 micro-
controller. It provides closed loop control with a PIV 5 scheme.
The total price of the robot (motors, rails and pulley-belt) is
under 1500euros.

Speed. The speed of the robot depends on the distance to
travel. For large distances (> 1 m), the speed is over 1.1 m/s,

4We used an iterative process to design CoVR. At each iteration, we
improved key features such as robustness, accuracy, speed, safety,
while widening the interaction possibilities.
5Proportional position loop Integral and proportional Velocity loop

Figure 2. Top isometric view of CoVR setup: (A) Structure; (B) Skeleton,
modular column-like structure to attach props and panels; (C) CoVR
panel; (D) Carriage; (E) X-axis rail; (F) 1: X-Pulley-belt system and
Motor, 1: Y -Pulley-belt system and Motor, 3 - Electronics (Arduino and
RoboClaw); (G) Y -direction rail.

which is approximately a normal human walk speed. For small
distances (< 80 cm), speed is about 0.5 m/s, which remains
faster than current mobile solutions (e.g. [58, 30]).

Noise. At full speed, CoVR’s average noise is 55 dB average
(max: 65 dB).

Weights and Forces Capabilities. The carriage can support a
total weight of 800N vertically (≈ 80kg) and 1000N horizon-
tally. The embedded mass the carriage can support is large
enough to support a human lying on it or even to be pushed by
it (Figure 1-A,B) without causing any damage to the structure.
The system can also provide high traction force to pull the
user (-C) or even transport her (-D).

Column
A column-like modular structure (Figure 3-A) is attached to
the moving carriage. Different surfaces in arbitrary positions,
shapes, orientations6 and sizes can be attached using a simple
clamping mechanism. It is similar to stage designing in real
theatres [49], where a limited number of decors can quickly
be replaced. Another advantage is to easily support DIY:
the stage designer can use cardboard or props with different
mass, textures and shapes that users can freely manipulate
at different heights of the column. The positions and shapes
of the physical objects are then communicated to the VR
designer in a calibration phase. In summary, the column has
been designed to be ﬂexible enough to support a wide range
of interactions. Figure 3-B and -C show two examples of
implemented columns. The section Interactions and Demo
Applications detail interactions with these columns.

Figure 3. Column design.
(A) Modular structure attached to the 2D
ceiling robot to provide a wide variety of surfaces and props. (B) The 3-
side column used in the user study with a chair (left), a cylinder attached
to a spring virtually representing a broom (front), a large cardboard
simulating a wall and piece of fabric representing a ghost (right). (C) A
4-side column implemented with a lever attached to the structure with
an elastic (left), haptic code made in cardboard and glue (front), and a
tray with a large and small cube (back) to insert into the locker (right).

Display and Tracking
We use the Oculus Rift S [2] HMD because it is not sensitive
to occlusion problems and it allows interactions under or even
in the column (Figure 8). We used Unity3D to create virtual
scenes. It centralises the communication and synchronisation
between different components though plugins (SteamVR, Ar-
duino/Roboclaw). In particular, the SteamVR plugin asset [3]
is used for the Oculus communication and the Uduino package
[63] for fast prototyping between Arduino and Unity.

6This feature made the W rotation partially redundant.

Safety
As users are invited to move around an active large-scale me-
chanical system, safety measures had to be established. These
were planned on several levels, from the structure conception
to the motions around the users during interactions.

Carriage: One risk is the fall of the carriage. The carriage can
support both larger axial (800N) and radial (1000N) forces
than those required for the envisioned scenarios. A security
coefﬁcient of 2.5 was introduced for elastic deformation cal-
culations in the conception process.

Column motions: Hardware, software and electronic emer-
gency stops are implemented. The carriage motion is restricted
on both ends with spring-based mechanical stops. The soft-
ware stops the motors when the column is within 2cm of these
limits. The controller electronically shuts down when the
motor’s current exceeds 5A. More importantly, the column
immediately stops if the user is not tracked for more than 0.5s.
Finally, the game master has a manual emergency stop button
that turns the system off, keeping it electrically grounded to
avoid potential shocks. Finally, given the power and speed of
the robot, it is important to ensure the column will not acci-
dentally physically collide with the user. We thus developed
an algorithm to generate the robot trajectories.

Robot Motion Control
We present a model to control the robot displacements7. While
trajectories are easily generated by the Cartesian structure (XY
displacements), the algorithm inputs for scenarios involving
multiple objects of interest need to be deﬁned and safety mea-
sures around the user need to be implemented. The main idea
is to attach the robot to a virtual proxy (a ball with mass and
gravity) with a spring-damper model. The ball’s displace-
ments depend on (1) the user’s location to avoid collisions,
(2) the user intentions and (3) the progress of the scenario to
attract the ball towards the objects users are most likely to
interact with next. A key contribution regarding our trajectory
generation model is the elaboration of a low-computational
user intention model working with common HMDs. We now
detail our approach to generate trajectories.

Trajectory generation. Each virtual object of interest i within
the scene gets a weight Wi which depends on its likeliness to
be interacted with next. The virtual proxy (ball) and CoVR
command position CoV R(x, y) is hence a weighted average of
the positions of each object of interest:

CoV R(x, y) =

∑N

i=1 Wi ∗ (xi, yi)
i=1 Wi

∑N

(1)

where N is the number of virtual objects of interest (VOI)
in the scene, (xi, yi) the cartesian coordinates of the VOI i
and Wi its weight, estimated given a user intention model (see
below). A virtual spring between the proxy and the command
position is then deﬁned, and the according spring force is
applied for the proxy to reach this position. We use Unity3D’s
physics engine to automatically generate the proxy trajectories
to reach a target. The target position is not necessarily the

7The algorithms, models, scripts and user data are available on this
repository: https://www.bouzbib.com/CoVR/

1234ABCback sideposition of a virtual object. If the scene contains two objects of
same interests, CoVR will automatically place itself between
these two objects’ positions, hence the displacement when
one becomes the chosen object of interest is minimised and
CoVR is more likely to reach it prior to user interaction. As
the proxy is also attached to the CoVR, its resulting motion
takes naturally into account the robots speed limitations.

Scenario-based model
Depending on the progress of their scenario, designers can
estimate the prior probability of an object to be interacted
with: in a basketball game for instance, the user is more likely
to interact with the ball ﬁrst than with the hoop. We let the
possibility to designers to deﬁne their own scenario-based
model by reﬁning the estimation of Wi:

Wi = Pi ×Wi(d, θ )

(4)

where Pi is the prior probability of the VOI i to be interacted
with from the progress of the given scenario. We will discuss
the use of these probabilities in the Discussion section of our
Technical Evaluation below.

TECHNICAL EVALUATION
The primary aim of this technical evaluation is to determine
the ω parameter of the user intention model, i.e. the optimal
contribution of the distance over the orientation to estimate
which object of interest is more likely to be interacted with.
We are also interested in studying CoVR’s success rate as
a function of the number of objects of interest (distractors)
within the scene. Indeed, we anticipated that the performance
of the user intention model and the value of ω depend on the
number of distractors within the scene. Finally, we want to
conﬁrm that CoVR’s speed is sufﬁcient enough to reach a
virtual object of interest even when the user does not have a
decision to make (number of VOI = 1).

We ﬁrst perform a data collection over a panel of users to better
understand how intentions can be quantiﬁed as a function
of both distance and orientation. We then perform multiple
physical simulations to ﬁnd the best ω parameter that matches
users’ behaviors.

Data Collection
Participants and Apparatus. 6 participants (3 male, 1 left-
handed) aged from 26 to 32 (average = 28; std = 2.0) vol-
unteered for this experiment. All participants were familiar
with VR and were asked to wear the Oculus Rift S. Users
also wore Optitrack markers on their dominant hand. The
Oculus headset was also equipped with Optitrack markers, for
an accurate tracking in space. The virtual scene was created
using Unity3D game engine.

Experimental Design
Task and Stimuli. We considered an exploratory task, such
as the ones users would perform in games, i.e. users take
their time, observe the decors, avoid virtual obstacles and face
their objects of interest whenever interacting. To replicate
these game features and to capture the corresponding users’
behaviors, we created an empty scene where virtual numbered
balls appear simultaneously at random locations with random
orientations (see Figure 5). Instructions are written on the
walls surrounding the users, and tell them to touch a given
numbered virtual target. Users are then asked to face the
targets whenever touching them.

at less than 20 degrees from the user’s HMD direction or when the
object is at a distance below 20cm from the user. It allows for CoVR
to stay at the closest VOI as long as the user remains in its vicinity.

Figure 4. Control algorithm relying on a physical model: (a) The virtual
proxy of the physical CoVR column is connected to all virtual objects
of interest (VOIs) with weights depending on the users’ intentions to in-
teract with them. The user and other forbidden zones are covered by a
rigid cone-like obstacle to be repulsive. (b) Whenever the user is about
to interact with a VOI, the proxy/CoVR move towards it, while naturally
avoiding obstacles (e.g the user).
We also created virtual obstacles to cover all forbidden areas
in the arena (user, external people, furniture). Indeed, we
designed a cone-like rigid shape that we attached to the user’s
position as shown in Figure 4. The size of the cone (diameter
= 90cm) was chosen to avoid collisions even if the users’ arms
are open. Thanks to the contact mechanics and gravity in Unity,
the proxy is naturally pushed and rolls away from the obstacle.
The obstacle’s curvature ensures a smooth deceleration of the
proxy when this latter is getting to close to it. The radius of the
obstacle decreases (20cm) when the user comes near a object
of interest, so the proxy is not pushed away.
User-intention model
We elaborated a user intention model
to support non-
deterministic scenarios, i.e. scenarios where the system does
not know beforehand which object to physically overlay. The
model inputs are the positions of the virtual objects of interest
(VOI) as well as the available data from the users’ apparatus:
the HMD’s position and orientation. It hence does not require
additional hardware such as eye-tracker or ﬁnger/hand tracker.

We deﬁned the total weight Wi of the VOI i to be a function of
the user’s distance D to a VOI, and her orientation (O).

Wi(d, θ ) = ω ∗ D(d) + (1 − ω) ∗ O(θ )
1
1 + d

Wi(d, θ ) = ω ∗

+ (1 − ω) ∗ e(cos(θ )−1)

(2)

(3)

where ω is the contribution of the distance over the orientation.
D(d) and O(θ )’s ranges are between 0 and 1, hence Wi’s range
is from 0 to 1 too. O(θ ) is equal to 1 whenever the user’s
HMD orientation is colliding with any surface point of the
VOI’s mesh, and is decreasing exponentially whenever the
user’s orientation moves further away. On the same principle,
D(d) is equal to 1 whenever the user is close to a target, and
decreases with the same regards8.
8We also increase the stability of the column in the vicinity of the
VOI. When Wi > 0.8, Wi is rounded to 1, typically when an object is

VOI1VOI2VOI3Proxy/CoVRObstacleUserVOI1VOI2VOI3User movementProxy/CoVR trajectoryObject of Interest(a)(b)Conditions. In this experiment, we control the number of
distractors within the scene from 0 to 4 (number of balls is
from 1 to 5). This allows us to understand the performance
of CoVR over the number of available VOIs. The minimum
distance between two targets is their diameter - 10cm (eg they
cannot overlap) and they cannot appear at the user’s location.
As long as the user does not touch the target ball, nothing
changes in the scene. As soon as the target ball is interacted
with, another condition starts.

Design. We used a within design. All participants tested all
ﬁve conditions (0,1,2,3,4 distractors). The order of appearance
of each condition was randomized within the blocks. Partic-
ipants performed 10 blocks. The duration of the experiment
was about 12 minutes per participant (std = 2.6). In summary,
the experimental design is: 6 participants × 10 blocks × 5
conditions = 300 trials.

For each trial, we measure the users’ position and orientation
at each frame, with a frame rate of 75 fps.

mately 100% (only 1/300 targets missed) when there is only
one VOI in the scene, indicating that the system is at least
as fast as the participant when the target position is known
(i.e. the system does not rely on the users’ intention). The
results also conﬁrmed that the success rate decreases with the
number of distractors. Figure 6 also shows that we obtain the
best average success rate (80%) with ω = 0.175 (CI=14%)
regardless of the number of distractors. Success rate remains
above 80% up to 2 distractors.

We also note that the success rate per user decreased with
the time spent in the experiment (88% success for a 14mn
experiment vs 74% for an 8mn experiment).

Target distance. We measured the average distance between
the carriage and the target centres when the user was collid-
ing with the virtual target. The average distance among all
the trials is 1.8cm (95% CI = 0.33 cm) demonstrating the
repeatability of our implementation.

Detection time. We also measured the time difference between
the target’s weight reaching 1 and the user colliding with it.
Results show that this detection time does not depend on the
distractors, with a 7s average (std = 0.6s) and a 96% accuracy.
We note that if the detection time is below 4s, it results in a
failure of the overlaying, as CoVR struggles to get around the
user (especially the obstacle) and place itself properly.

Figure 5. Technical Evaluation "Simulation" Virtual Scene example af-
ter the Data Collection. (A) User looks for the target (according to the
walls’ instruction). Weights change according to her position and orien-
tation. (B) Intention Detection: User chooses a target and its weight goes
to 1. (C) Trajectory: The proxy (blue ball) moves accordingly with the
centroid of all the objects’ of interest’s weights towards the chosen one
(weight = 1), while avoiding the user obstacle. When the proxy reaches
the chosen ball, the user obstacle size decreases.

Parameter Fitting
We used the data collection to replicate the users’ displace-
ments into a Simulation virtual scene. The robotic system
physically moved accordingly with our "user intention model"
(section above). Each simulation corresponded to a differ-
ent ω. We simulated all the data from the 6 participants (i.e.
including the 5 conditions). We ﬁrst performed a broad explo-
ration of ω (step= 0.25) and then reﬁned it to ﬁnd the optimal
one for each condition (number of distractors in the scene).
We tested 13 parameters over 6 users, which resulted in more
than 17 hours of simulation.

Our main measurement was the success rate of CoVR reaching
a VOI before the user, i.e. when CoVR’s distance to the target
was below its diameter (10cm) when the user was touching it.

Results
Success Rate. Figure 6 shows the success rate as a function of
ω and the number of distractors. The success rate is approxi-

Figure 6. Success Rate of CoVR reaching the chosen VOI prior to the
user interaction, function of ω and the number of distractors. Error
bars indicate 95% conﬁdence interval with a T-Distribution. The table
shows the Success Rate with the optimal parameter, ω = 0.175, as func-
tion of the number of distractors.

Number of users collision. No collision between the user and
CoVR were noted during the simulations.

Accuracy. Finally, we measured the distance between the
virtual proxy and the physical column. The mean distance
over all users and conditions is 0.94 cm (CI 95% = 0.99 cm),
which ensures they share the same trajectory, and hence a safe
user environment around CoVR.

Table 1. Accuracy, measured by the distance between CoVR and the
proxy, with ω = 0.175.

Discussion
This evaluation tested CoVR in an uncontrolled environment,
with random locations and orientations for each target and
distractor and a user-intention based model. Despite this en-
vironment, our system had a high success rate (> 80%) with

100%80%60%40%20%0%00.050.10.150.20.250.30.350.40.450.50 Distractor1 Distractor2 Distractors3 Distrators4 DistractorsAverage (%)98.388.381.768.368.395% CI (T-Distribution)0.00.10.10.20.10 Distractor1 Distractor2 Distractors3 Distractors4 DistractorsAverage0 Distractor1 Distractor2 Distractors3 Distrators4 DistractorsAverage (cm)0.60.91.01.21.0STD (cm)0.40.70.81.01.0three virtual objects of interest while preserving the user’s
safety (no collision). Multiple directions can be envisioned to
increase this success rate in non-deterministic scenarios.

Adding a scenario-based model. According to the Equation
4, we can add "prior probabilities" to the different VOIs, de-
pending on the progress of the scenario. After selecting our
optimal parameter ω = 0.175, we ran the robotic simulation
by adding to the actual target a 75% probability to be inter-
acted with. The distractors were hence splitting the remaining
25% of interaction probability. The results are summarized in
the Table 2 and conﬁrm that adding a scenario-based model
improves the prediction with a success rate higher than 93%
even with four distractors.

Table 2. Success Rate and Distance to Target with ω = 0.175, and a 75%
probability to be interacted with added on the target.

Assigning multiple VOI to the same Physical position. Thanks
to its size and shape, CoVR can contain multiple objects on
different panels and at different heights. We can take advan-
tage of this feature to assign multiple virtual objects of interest
to the same physical location, hence reducing the amount of
CoVR displacements and the risk of spatial mismatches.

Adding visual effects. When a spatial mismatch is likely to
occur, literature usually proposes to cater for it with visual
effects [19] or dynamic redirection techniques [?, 50, 9]. These
respectively distract the users and give spare time to the robot
to reach the target location or dynamically correct the users
and CoVR’s interaction positions.

INTERACTING WITH CoVR
The technical evaluation showed that CoVR is able to move at
a sufﬁcient speed to follow users at a natural walk speed.

When no interaction is required, CoVR remains out of reach
and the users can wander in the whole arena. CoVR thus
does not interfere with users’ natural behavior. Letting the
users truly walk (instead of using a metaphor for locomotion)
reinforces the immersion [64].

When interactions are required, a key aspect of CoVR is to
allow interactions involving strong kinesthetic feedback at a
body scale. We distinguish two main uses of CoVR: static use
where users transmit forces when interacting with the column
(e.g. exploration, manipulation) and dynamic use, where
users are receiving forces enabled by CoVR’s displacements
during the interaction (e.g. leading through forces, transport).
We now detail these two uses of CoVR.

Static Use of CoVR
Hand exploration: Hands remain the primary body part for
exploring the world and the most sensitive one. Users can
probe objects directly with their bare-hands. As such, interac-
tions are not limited to one ﬁnger: surfaces can be realistically
touched and their texture fully felt with the whole hand. In

particular, users can interact with the palm, which contributes
to a sense of tangible presence, as it enables kinesthesia on
top of tactile cues [47]. Moreover, the explored surface can
be large and not limited to a speciﬁc orientation or shape. For
instance, users can perform large hand movements to ﬁnd a
speciﬁc tactile pattern on a wall for instance (Figure 7-A).

Figure 7. (A) Tactile Exploration: The user tactilely explores large sur-
faces, for instance, to ﬁnd a hidden code over a human-sized wall. (B) Di-
rected Manipulation: The user pulls a lever which is attached to CoVR
with an elastic, letting it a single degree of freedom, providing a mechan-
ical manipulation of props.

Whole-body interactions: Users can apply strong forces with
any part of their body: users can lean on a ﬁxed wall (Figure 1
- B), push hard on it with their hands or shoulders (Figure 10)
or even kick it. CoVR is rigid and robust enough to remain
still during all of these interactions.

Figure 8. Postures; The user (1) goes through an obstacle with constrains
below and beneath her (2) or crouches.

Postures: CoVR also supports a variety of users’ postures
with interactions at different heights such as crouching under a
table, going through obstacles with physical props both below
and above the users (Figure 8), sitting on a chair [74, 60] or
climbing a stair to reach a high target (Figure 10).

Manipulation: Manipulation of real objects and passive props
improves interaction ﬁdelity [51, 37]. CoVR enables different
types of object manipulation:

• Free manipulation. CoVR can carry untethered objects
which users can grab and freely manipulate. A large variety
of samples (Figure 9-B) of any textures is possible, as long
as dimensions and weights are compatible. Thanks to the
CoVR’s grounding and high motor torques, it can carry
large masses without compromising its speed or accuracy.
• Contact. Objects can also be manipulated to interact with
each other. For instance, in Figure 9-C, the big cube does
not physically ﬁt in the locker. The user hence needs to ﬁnd
a smaller one.

0 Distractor1 Distractor2 Distractors3 Distrators4 DistractorsAverage % (95% CI T- Distribution)98.3 (1.8)95.0 (2.4)93.3 (4.4)96.7 (3.5)93.3 (3.5)Average Distance to Target  (STD Distance, in cm)0.4 (1.4)0.7 (1.7)0.6 (1.6)1.0 (1.8)1.2 (2.2)• Directed manipulation. Users can interact with objects
tethered to CoVR. Its structure allows for mechanical ma-
nipulation of objects and for users to actuate them. For
instance, in Figure 7-B, the user actuates a lever mounted
on the column, simulating a slot machine. By attaching
objects on CoVR’s skeleton, mechanical manipulation with
multiple numbers of degrees of freedom is possible.

A single physical object can overlay multiple virtual ones of
similar primitives [32]. Instead of using visual effects such as
[10], CoVR physically moves a single prop to overlay multiple
virtual ones. For instance, one physical door can overlay three
virtual ones (Figure 9-A). These mappings were previously
seen in the literature [30, 29].

DEMO APPLICATIONS
We created a two-scene demo application to demonstrate the in-
teraction possibilities offered by CoVR. It relied on the 3-side
column illustrated in Figure 3-B and involved 5 interactions, 7
virtual objects but only 5 props. In the following subsections,
user interactions will be displayed in bold while the motions
and CoVR’s interactions will be displayed in italics.

Escaping the Room
We created a ﬁrst scene where the users need to escape a room.

Reaching for the Light
First, Bob is in a dark room where the only thing visible is a
light bulb, at a 2.5m height, in a small cupboard. Bob hence
climbs in the cupboard to touch the bulb, which then turns on
the lights. In the physical world, he hence goes into CoVR,
which remains still and touches the top of CoVR’s skeleton.

Figure 9. (A) Directed manipulation; User opens three virtual doors -
but only a single physical one, cut through a panel cardboard. (B) Free
manipulation; User ﬁnds a teddy bear. (C) Free manipulation and Con-
tact; The user manipulates a cube which is too big to ﬁt in the locker.
She realises she needs to ﬁnd a smaller cube.

Dynamic Use of CoVR
In the previous section, CoVR was motionless during the
interaction (static). The following interactions require the
system to move in the user’s vicinity (dynamic).

Receiving Physical Contact: CoVR can physically touch the
users and produce impact force feedback [66]. It is thus initiat-
ing the haptic interaction, instead of the user. As receiving an
interaction might be surprising in VR, we recommend attach-
ing props at a distance from CoVR’s main skeleton, to produce
light impact forces. For instance, a fabric (60cm away from
the main skeleton) can lightly brush the users to simulate the
crossing of a ghost (Figure 12) through them. Users can also
be touched by a virtual agent trying to catch their attention,
providing a sense of physical presence [43, 34].

Leading through forces: Users can be led by CoVR through
body-scaled tension and traction forces. For instance, in Figure
1-C, the user physically holds a cylinder attached by a spring to
the column, virtually represented by a broom, which provides
her with a large force-feedback and leads her the way in the
virtual environment. She is pulled by the broom when CoVR
moves. Another example is inspired from [17], involving a
ﬁshing pole where the line is attached to the column. The
motion of the column creates the illusion of a ﬁsh biting.

Transport: Finally, CoVR mechanical properties open up a
new range of interactions in VR. Indeed, CoVR can transport
the users. For instance, it can move a chair with a sitting user
to a different location (Figure 11) as CoVR can handle large
embedded masses. We envision other scenarios transporting
the user, such as Wind-surﬁng or Water-skiing [71].

Figure 10. "Escaping the Room". Reaching for the Light: User climbs in
the cupboard to reach the virtual light bulb; The Magic Wall: (A) User
chooses a wall. CoVR moves accordingly with the user’s intentions. User
pushes on the wall. We note that none of the users touched the "ghost" by
accident during the experiment. (B) The wall remains static, and changes
color to encourage the user to maintain contact. (C) After 10seconds of
maintained contact, the Magic Wall moves, giving the user the impres-
sion of having pushed it herself.

The Magic Wall
Bob then sees a carpet with the words "Start". Once he reaches
it, three walls appear. A sign informs him he needs to push
them. Bob chooses a wall, but can change his mind and pick
another one if he wants. He then has to maintain contact and
keep pushing for 10 seconds. The walls’ color changes from
green to red (accordingly with the timer), to indicate Bob he
needs to keep pushing and that a maintained contact is needed.

When the walls appear, CoVR hence uses the users’ intentions-
based algorithm in order to place itself at the chosen wall.
When Bob pushes a wall, CoVR remains static. Once the
timer is ﬁnished, CoVR steps backwards, which gives Bob the
impression of having pushed the wall himself.

Travelling in the Clouds
After pushing the walls, dust starts ﬂying around Bob, who is
then teleported in a forest.

The Magic Broom
The user now sees a magic broom. He holds it tightly, and is
now pulled by CoVR, through the forest to the clouds. CoVR
pulls the user with a strong force-feedback, as the broom is
actually a cylinder attached to CoVR with a string and a spring
(see Figure 1 - C).

Moving in the Clouds
Once the travel is over, a "Continue" panel appears. When
Bob touches it, a chair appears. Bob then sits comfortably in
the chair, and CoVR transports him through the clouds.

Figure 11. Moving in the Clouds: User is sitting in a chair and physically
transported through the clouds.

The Ghosts
The user, in the clouds, is now surrounded by ghosts. He then
sees a halo, in which he decides to go into. When he reaches
it, he then sees a huge ghost about to go through him. Bob
remains still while CoVR initiates the interaction by brushing
his head with a piece of fabric.

Figure 12. The Ghosts: (A) User enters the halo. (B) A piece of fabric
lightly brushes the user’s head. (C) The ghost ﬂies away.

USER STUDY
The goal of this study is three-fold: (1) validating the imple-
mentation of CoVR, (2) investigating how users experience
(i.e. apply and receive) strong forces and (3) collect feedback
on the interactions of the demo application.

Participants. 8 participants (4 male) aged from 22 to 30 (std
= 2.8) volunteered to test the demo application. 4 of the

participants were familiar with VR technologies, 2 had only
tried VR once and the remaining 2 had never experienced VR.

Procedure. Participants were informed they were going to
interact with physical props and were asked not to rush within
the scene. They were asked to wear an Oculus Rift S HMD
as well as Optitrack markers on their dominant hand. They all
were introduced to CoVR and saw it moving beforehand. A
game master was present during all the experiments, to ensure
the participants’ safety and activate some of the interactions.
After the experiment, participants ﬁlled a Likert-scale ques-
tionnaire about their enjoyment on each demo interaction and
then participated in a semi-structured interview. They gave
approximately 20 minutes of their time.

Results
Quantitative results.
Participants ranked their global enjoyment with a 6.0/7 grade
(std = 0.5).

Favourite interactions. Users were asked to choose their
two favourite interactions in terms of enjoyment, among the
ﬁve that were provided. 62.5% of the participants said their
favourite interaction was the transport, while the remaining
37.5% preferred the magic broom (being pulled). The second
favourite interactions were evenly split between pushing walls,
the magic broom, transport and being gone through by ghosts.

Figure 13. Enjoyment results per interaction, ranked on a 7-point Likert
scale - 1 indicates "not enjoyable", 7 indicates "very enjoyable". Error
bars indicate the standard deviation of the grades in the users’ panel.

Force-feedback. All of the participants ranked the force they
applied (wall) or applied to them (broom) compared to their
maximum force on a 7-point Likert scale (1 = pretty soft, 7 =
very hard). The forces they applied to the walls was ranked
with an average of 5.5 (std = 0.75, min = 5/7, max = 7/7) while
the force applied to them with the magic broom was ranked
with an average of 6.1 (std=0.64). In particular, 87.5% of
the participants (7/8) ranked the force applied to them with
travelling with the magic broom between 6 and 7/7 (the last
participant attributed a 5/7 grade).

Spatial Mismatches. None of the participants experienced
spatial mismatches, even with the non-deterministic scenario
involving multiple doors.

Apprehension. The participants ranked their fear of being
around a moving platform with a Likert scale (1 = not scary at
all; 7 = frightening). The average fear was 3.6/7 (std = 1.5). P2
(expert VR user) told us that he would have liked to have noise
cancelling ear-puffs and ranked his scare with a 6/7 grade, as

Reaching for the LightThe Magic WallThe Magic BroomMoving in the CloudsThe GhostsGlobal Enjoyment1234567the noise was keeping him from being fully immersed. All of
the non-expert users ranked their scare with a 2 or 3/7 grade
and dove into the VR environment without apprehension.

Qualitative results.
Whole-body Interactions. In our semi-structured interview, we
discussed the users’ game preferences. All of the participants
told us that they prefer whole-body interactions in exploration
games, where performances do no matter. They all informed
us they enjoyed our game and the interactions it provided, and
were mostly surprised to be pulled by the broom or transported.

Force-feedback. They were especially surprised by the force
provided by the broom, as it was the ﬁrst dynamic interaction
they were experiencing. P5 said that she was afraid of heights
in the virtual scene, so when the broom started pulling her,
she felt quite stressed out. P4 told us she enjoyed the use of
passive props and direct manipulation [14].

Future Interactions Opportunities. We asked participants to
give us feedback on interactions they would like to experience
in VR with CoVR. Two external expert users told us that they
would enjoy climbing on a wall. P4 mentioned virtual escape
game, where she could truly beneﬁt from passive haptics, ma-
nipulate objects and feel force-feedback. P2 and P6 suggested
war games, where they could lean on the walls to get some
rest, or hide from enemies. P7 added he would enjoy having
more modalities involved, for instance he would appreciate
having a sensation of wind when climbing (on a stair or else)
to increase his immersion.

Discussion
We now summarize and discuss our main ﬁndings.

CoVR implementation. The experiment conﬁrmed the robust-
ness of CoVR as it did not show any failure during the expe-
riences: Our robotic system applied or received strong forces
by the participants without damage. Moreover none of the
participants experienced collision or spatial mismatches while
they were freely walking in the entire room-scale arena thanks
to our trajectory generation algorithm and more particularly
our user-intention model.

Experiencing strong forces. The experiment also revealed the
beneﬁts of robotic interfaces and more speciﬁcally robotic
shape displays providing strong forces. Indeed, participants
spontaneously applied 5.5/7 of their maximum forces when
pushing on the walls. One participant reported having applied
"very hard" forces (7/7). Moreover, participants perceived
the strong (6.1/7) tension forces when interacting with the
broom and enjoyed them (second favourite interaction, and an
average of 6/7). Seven participants reported having received
"very strong" forces (>6/7).

Transporting the user. The favourite interaction was "trans-
port" (6.6/7) where a user was sitting on a chair moving in
the VR arena. This interaction requires both a large arena
and a robotic system able to displace heavy embedded masses,
which are unique features of CoVR.

In summary, this experiment revealed that whole-body inter-
actions involving strong forces (applying forces, receiving

forces or embedding heavy masses) are a promising direction
for future Robotic Shape Displays.

CONCLUSION AND FUTURE WORK
We presented CoVR a novel Robotic Shape Display for room-
scale VR arena providing whole-body interactions and strong
force feedback. We also proposed a low-computational user
intention model compatible with common HMDs to support
non-deterministic scenarios. The technical evaluation and the
user study demonstrated the feasability of the approach, its
usability and the relevance of interactions involving strong
forces. While CoVR addresses several interactions and techni-
cal challenges, we see several directions for future work.

Adding multiple columns. A main limitation of our current
setup is the use of a single column in the VR arena. One
approach consists of mounting additional 2D Cartesian robots
on the sides of the VR arena to control horizontal columns.
Another one is to add a second ceiling robot (the robots can
share the rails). These two approaches limit the work-area
of the additional columns but appropriate control strategies
can optimize trajectories and augment interaction possibilities,
especially with multiple users (see below).

Combining multiple RSDs. Our approach is compatible with
previous Robotic Shape Display solutions. For instance, we
envision a VR arena combining CoVR with a swarm of mobile
robots such as [58, 30, 66]. These ones can collect objects on
the ground and bring them back to CoVR. Our CoVR’s trajec-
tory generation algorithm remains valid in such conﬁgurations.
More DoFs could also be integrated to CoVR by coupling it
with a Kuka robotic arm or a Snake Charmer [7] interface.

Augmenting I/O capabilities. We will investigate how addi-
tional capabilities can improve user experience. For instance,
it would be interesting to augment a column with sensors (e.g.
touch input, force sensors, proximity sensors, etc.).Adding a
depth camera could enable the detection of untracked moving
bodies, such as an unexpected pet in the VR arena. Hap-
tic stimuli can be expanded to vibrations, sliding, textures,
temperatures, or to shape changing illusions. For instance,
heat-lamps or wind-blowers could also be integrated [54].

Collaboration. Finally, our system is currently designed for a
single user interaction. We plan to investigate remote-presence
interaction: a second identical structure can for instance be
assembled in another room. Users in each room can interact
with different VOIs, share mutual physical contact or collab-
oratively manipulate objects [13, 30]. We also plan to inves-
tigate which scenarios (e.g. a master and a slave) and which
interactions would support collaborative interaction in a sin-
gle arena. Our software implementation can already support
several users in the same arena - each user being considered
as an obstacle, but collaborative interactions raise multiple
challenges [28].

ACKNOWLEDGEMENTS
We would like to thank M. Teyssier, C. Rigaud, B. Geslain,
S. Sakr, M. Serrano, J. Müller, J. Gugenheimer as well as the
participants of the studies.

REFERENCES
[1] 2019a. CyberGrasp. (2019).

http://www.cyberglovesystems.com/cybergrasp

[2] 2019b. Oculus Rift S. (2019).

https://www.oculus.com/rift-s/?locale=fr_FR

[3] 2019c. SteamVR - Valve Corporation. (2019).

https://www.steamvr.com/en/

[4] 2019d. Teslasuit | Full body haptic VR suit for motion
capture and training. (2019). https://teslasuit.io/

[5] Parastoo Abtahi, Benoit Landry, Jackie (Junrui) Yang,
Marco Pavone, Sean Follmer, and James A. Landay.
2019. Beyond The Force: Using Quadcopters to
Appropriate Objects and the Environment for Haptics in
Virtual Reality. In Proceedings of the 2019 CHI
Conference on Human Factors in Computing Systems -
CHI ’19. ACM Press, Glasgow, Scotland Uk, 1–13. DOI:
http://dx.doi.org/10.1145/3290605.3300589

[6] E. Amirpour, M. Savabi, A. Saboukhi, M. Rahimi Gorii,
H. Ghafarirad, R. Fesharakifard, and S. Mehdi Rezaei.
2019. Design and Optimization of a Multi-DOF Hand
Exoskeleton for Haptic Applications. In 2019 7th
International Conference on Robotics and Mechatronics
(ICRoM). 270–275. DOI:
http://dx.doi.org/10.1109/ICRoM48714.2019.9071884
ISSN: 2572-6889.

[7] Bruno Araujo, Ricardo Jota, Varun Perumal, Jia Xian
Yao, Karan Singh, and Daniel Wigdor. 2016. Snake
Charmer: Physically Enabling Virtual Objects. In
Proceedings of the TEI ’16: Tenth International
Conference on Tangible, Embedded, and Embodied
Interaction - TEI ’16. ACM Press, Eindhoven,
Netherlands, 218–226. DOI:
http://dx.doi.org/10.1145/2839462.2839484

[8] Jonas Auda, Max Pascher, and Stefan Schneegass. 2019.
Around the (Virtual) World: Inﬁnite Walking in Virtual
Reality Using Electrical Muscle Stimulation. In
Proceedings of the 2019 CHI Conference on Human
Factors in Computing Systems - CHI ’19. ACM Press,
Glasgow, Scotland Uk, 1–8. DOI:
http://dx.doi.org/10.1145/3290605.3300661

[9] Mahdi Azmandian, Mark Hancock, Hrvoje Benko, Eyal

Ofek, and Andrew D. Wilson. 2016a. Haptic
Retargeting: Dynamic Repurposing of Passive Haptics
for Enhanced Virtual Reality Experiences. In
Proceedings of the 2016 CHI Conference on Human
Factors in Computing Systems - CHI ’16. ACM Press,
Santa Clara, California, USA, 1968–1979. DOI:
http://dx.doi.org/10.1145/2858036.2858226

[10] Mahdi Azmandian, Mark Hancock, Hrvoje Benko, Eyal

Ofek, and Andrew D. Wilson. 2016b. Haptic
Retargeting: Dynamic Repurposing of Passive Haptics
for Enhanced Virtual Reality Experiences. In
Proceedings of the 2016 CHI Conference on Human
Factors in Computing Systems - CHI ’16. ACM Press,
Santa Clara, California, USA, 1968–1979. DOI:
http://dx.doi.org/10.1145/2858036.2858226

[11] Hrvoje Benko, Christian Holz, Mike Sinclair, and Eyal

Ofek. 2016. NormalTouch and TextureTouch:
High-ﬁdelity 3D Haptic Shape Rendering on Handheld
Virtual Reality Controllers. In Proceedings of the 29th
Annual Symposium on User Interface Software and
Technology - UIST ’16. ACM Press, Tokyo, Japan,
717–728. DOI:
http://dx.doi.org/10.1145/2984511.2984526

[12] Gordon Binsted, Romeo Chua, Werner Helsen, and
Digby Elliott. 2001. Eye–hand coordination in
goal-directed aiming. Human Movement Science 20, 4-5
(Nov. 2001), 563–585. DOI:
http://dx.doi.org/10.1016/S0167-9457(01)00068-9

[13] Scott Brave, Hiroshi Ishii, and Andrew Dahley. 1998.
Tangible interfaces for remote collaboration and
communication. In Proceedings of the 1998 ACM
conference on Computer supported cooperative work -
CSCW ’98. ACM Press, Seattle, Washington, United
States, 169–178. DOI:
http://dx.doi.org/10.1145/289444.289491

[14] Steve Bryson. 2005. Direct Manipulation in Virtual

Reality. In Visualization Handbook. Elsevier, 413–430.
DOI:
http://dx.doi.org/10.1016/B978-012387582-2/50023-X

[15] Lung-Pan Cheng, Li Chang, Sebastian Marwecki, and

Patrick Baudisch. 2018. iTurk: Turning Passive Haptics
into Active Haptics by Making Users Reconﬁgure Props
in Virtual Reality. In Proceedings of the 2018 CHI
Conference on Human Factors in Computing Systems -
CHI ’18. ACM Press, Montreal QC, Canada, 1–10. DOI:
http://dx.doi.org/10.1145/3173574.3173663

[16] Lung-Pan Cheng, Patrick Lühne, Pedro Lopes,

Christoph Sterz, and Patrick Baudisch. 2014. Haptic
Turk: a Motion Platform Based on People. (2014), 11.

[17] Lung-Pan Cheng, Sebastian Marwecki, and Patrick
Baudisch. 2017a. Mutual Human Actuation. In
Proceedings of the 30th Annual ACM Symposium on
User Interface Software and Technology - UIST ’17.
ACM Press, Qu&#233;bec City, QC, Canada, 797–805.
DOI:http://dx.doi.org/10.1145/3126594.3126667

[18] Lung-Pan Cheng, Eyal Ofek, Christian Holz, Hrvoje
Benko, and Andrew D. Wilson. 2017b. Sparse Haptic
Proxy: Touch Feedback in Virtual Environments Using a
General Passive Prop. In Proceedings of the 2017 CHI
Conference on Human Factors in Computing Systems -
CHI ’17. ACM Press, Denver, Colorado, USA,
3718–3728. DOI:
http://dx.doi.org/10.1145/3025453.3025753

[19] Lung-Pan Cheng, Thijs Roumen, Hannes Rantzsch,

Sven Köhler, Patrick Schmidt, Robert Kovacs, Johannes
Jasper, Jonas Kemper, and Patrick Baudisch. 2015.
TurkDeck: Physical Virtual Reality Based on People. In
Proceedings of the 28th Annual ACM Symposium on
User Interface Software & Technology - UIST ’15. ACM
Press, Daegu, Kyungpook, Republic of Korea, 417–426.
DOI:http://dx.doi.org/10.1145/2807442.2807463

[20] Inrak Choi, Heather Culbertson, Mark R. Miller, Alex
Olwal, and Sean Follmer. 2017. Grabity: A Wearable
Haptic Interface for Simulating Weight and Grasping in
Virtual Reality. In Proceedings of the 30th Annual ACM
Symposium on User Interface Software and Technology -
UIST ’17. ACM Press, Qu&#233;bec City, QC, Canada,
119–130. DOI:
http://dx.doi.org/10.1145/3126594.3126599

[21] Inrak Choi, Eyal Ofek, Hrvoje Benko, Mike Sinclair,
and Christian Holz. 2018. CLAW: A Multifunctional
Handheld Haptic Controller for Grasping, Touching, and
Triggering in Virtual Reality. In Proceedings of the 2018
CHI Conference on Human Factors in Computing
Systems - CHI ’18. ACM Press, Montreal QC, Canada,
1–13. DOI:http://dx.doi.org/10.1145/3173574.3174228

[22] Xavier de Tinguy, Thomas Howard, Claudio

Pacchierotti, Maud Marchal, and Anatole Lécuyer. 2020.
WeATaViX: WEarable Actuated TAngibles for VIrtual
reality eXperiences. (2020), 9.

[23] Force Dimension. 2019. Force Dimension - products.

(2019). http://www.forcedimension.com/

[24] A. Formaglio, A. Giannitrapani, M. Franzini, D.

Prattichizzo, and F. Barbagli. 2005. Performance of
Mobile Haptic Interfaces. In Proceedings of the 44th
IEEE Conference on Decision and Control. 8343–8348.
DOI:http://dx.doi.org/10.1109/CDC.2005.1583513

[25] F. Gosselin, C. Andriot, F. Bergez, and X. Merlhiot.

2007. Widening 6-DOF haptic devices workspace with
an additional degree of freedom. In Second Joint
EuroHaptics Conference and Symposium on Haptic
Interfaces for Virtual Environment and Teleoperator
Systems (WHC’07). 452–457. DOI:
http://dx.doi.org/10.1109/WHC.2007.127

[26] Haption. 2019a. Scale1™ - HAPTION SA. (2019).

https:
//www.haption.com/en/products-en/scale-one-en.html

[27] Haption. 2019b. Virtuose™ 6D - HAPTION SA. (2019).

https:
//www.haption.com/en/products-en/virtuose-6d-en.html

[28] Zhenyi He and Ken Perlin. 2019. CollaboVR: A
Reconﬁgurable Framework for Multi-user to
Communicate in Virtual Reality. arXiv:1912.03863 [cs]
(Dec. 2019). http://arxiv.org/abs/1912.03863 arXiv:
1912.03863.

[29] Zhenyi He, Fengyuan Zhu, Aaron Gaudette, and Ken

Perlin. 2017b. Robotic Haptic Proxies for Collaborative
Virtual Reality. arXiv:1701.08879 [cs] (Jan. 2017).
http://arxiv.org/abs/1701.08879 arXiv: 1701.08879.

[30] Zhenyi He, Fengyuan Zhu, and Ken Perlin. 2017a.
PhyShare: Sharing Physical Interaction in Virtual
Reality. arXiv:1708.04139 [cs] (Aug. 2017).
http://arxiv.org/abs/1708.04139 arXiv: 1708.04139.

[31] Seongkook Heo, Christina Chung, Geehyuk Lee, and

Daniel Wigdor. 2018. Thor’s Hammer: An Ungrounded
Force Feedback Device Utilizing Propeller-Induced

Propulsive Force. In Proceedings of the 2018 CHI
Conference on Human Factors in Computing Systems -
CHI ’18. ACM Press, Montreal QC, Canada, 1–11. DOI:
http://dx.doi.org/10.1145/3173574.3174099

[32] Anuruddha Hettiarachchi and Daniel Wigdor. 2016.

Annexing Reality: Enabling Opportunistic Use of
Everyday Objects as Tangible Proxies in Augmented
Reality. In Proceedings of the 2016 CHI Conference on
Human Factors in Computing Systems - CHI ’16. ACM
Press, Santa Clara, California, USA, 1957–1967. DOI:
http://dx.doi.org/10.1145/2858036.2858134

[33] Matthias Hoppe, Pascal Knierim, Thomas Kosch,

Markus Funk, Lauren Futami, Stefan Schneegass, Niels
Henze, Albrecht Schmidt, and Tonja Machulla. 2018.
VRHapticDrones: Providing Haptics in Virtual Reality
through Quadcopters. In Proceedings of the 17th
International Conference on Mobile and Ubiquitous
Multimedia - MUM 2018. ACM Press, Cairo, Egypt,
7–18. DOI:http://dx.doi.org/10.1145/3282894.3282898

[34] Matthias Hoppe, Beat Rossmy, Daniel Peter Neumann,
Stephan Streuber, Albrecht Schmidt, and Tonja-Katrin
Machulla. 2020. A Human Touch: Social Touch
Increases the Perceived Human-likeness of Agents in
Virtual Reality. (2020), 11.

[35] Hiroshi Hoshino. 1995. A Contruction MEthod of

Virtual Haptic Space. (1995). http://www.files.tachilab.
org/publications/intconf1900/hoshino199511ICAT.pdf

[36] Hsin-Yu Huang, Chih-Wei Ning, Po-Yao (Cosmos)
Wang, Jen-Hao Cheng, and Lung-Pan Cheng. 2020.
Haptic-go-round: A surrounding Platform for
EncounterType Haptic in VR experienes. (2020).
https://dl.acm.org/doi/pdf/10.1145/3334480.3383136

[37] Brent Edward Insko. 2001. Passive Haptics Signiﬁcantly

Enhances Virtual Environments. (2001), 111.

[38] Yaesol Kim, Hyun Jung Kim, and Young J. Kim. 2018.

Encountered-type haptic display for large VR
environment using per-plane reachability maps:
Encountered-type Haptic Display for Large VR
Environment. Computer Animation and Virtual Worlds
29, 3-4 (May 2018), e1814. DOI:
http://dx.doi.org/10.1002/cav.1814

[39] Pascal Knierim, Thomas Kosch, Valentin Schwind,

Markus Funk, Francisco Kiss, Stefan Schneegass, and
Niels Henze. 2017. Tactile Drones - Providing
Immersive Tactile Feedback in Virtual Reality through
Quadcopters. In Proceedings of the 2017 CHI
Conference Extended Abstracts on Human Factors in
Computing Systems - CHI EA ’17. ACM Press, Denver,
Colorado, USA, 433–436. DOI:
http://dx.doi.org/10.1145/3027063.3050426

[40] Chaehyun Lee, Min Sik Hong, In Lee, Oh Kyu Choi,
Kyung-Lyong Han, Yoo Yeon Kim, Seungmoon Choi,
and Jin S Lee. 2007. Mobile Haptic Interface for Large
Immersive Virtual Environments: PoMHI v0.5. (2007),
2.

[41] In Lee, Inwook Hwang, Kyung-Lyoung Han, Oh Kyu
Choi, Seungmoon Choi, and Jin S. Lee. 2009. System
improvements in Mobile Haptic Interface. In World
Haptics 2009 - Third Joint EuroHaptics conference and
Symposium on Haptic Interfaces for Virtual Environment
and Teleoperator Systems. IEEE, Salt Lake City, UT,
USA, 109–114. DOI:
http://dx.doi.org/10.1109/WHC.2009.4810834

[42] Jaeyeon Lee, Mike Sinclair, Mar Gonzalez-Franco, Eyal
Ofek, and Christian Holz. 2019. TORC: A Virtual
Reality Controller for In-Hand High-Dexterity Finger
Interaction. In Proceedings of the 2019 CHI Conference
on Human Factors in Computing Systems - CHI ’19.
ACM Press, Glasgow, Scotland Uk, 1–13. DOI:
http://dx.doi.org/10.1145/3290605.3300301

[43] Jean-Claude Lepecq, Lionel Bringoux, Jean-Marie
Pergandi, Thelma Coyle, and Daniel Mestre. 2008.
Afforded Actions as a Behavioral Assessment of
Physical Presence. (2008), 8.

[44] Pedro Lopes, Alexandra Ion, and Patrick Baudisch. 2015.
Impacto: Simulating Physical Impact by Combining
Tactile Stimulation with Electrical Muscle Stimulation.
In Proceedings of the 28th Annual ACM Symposium on
User Interface Software & Technology - UIST ’15. ACM
Press, Daegu, Kyungpook, Republic of Korea, 11–19.
DOI:http://dx.doi.org/10.1145/2807442.2807443

[45] W. A. McNeely. 1993. Robotic graphics: a new
approach to force feedback for virtual reality. In
Proceedings of IEEE Virtual Reality Annual
International Symposium. 336–341. DOI:
http://dx.doi.org/10.1109/VRAIS.1993.380761

[46] Víctor Mercado and Univ Rennes. 2020. Design and

Evaluation of Interaction Techniques Dedicated to
Integrate Encountered-Type Haptic Displays in Virtual
Environments. (2020), 9.

[47] Kouta Minamizawa, Domenico Prattichizzo, and

Susumu Tachi. 2010. Simpliﬁed design of haptic display
by extending one-point kinesthetic feedback to
multipoint tactile feedback. In 2010 IEEE Haptics
Symposium. IEEE, Waltham, MA, USA, 257–260. DOI:
http://dx.doi.org/10.1109/HAPTIC.2010.5444646

[48] Norbert Nitzsche, Uwe D. Hanebeck, and G. Schmidt.

2003. Design issues of mobile haptic interfaces. Journal
of Robotic Systems 20, 9 (Sept. 2003), 549–556. DOI:
http://dx.doi.org/10.1002/rob.10105

[49] J. Pair, U. Neumann, D. Piepol, and B. Swartout. 2003.
FlatWorld: combining Hollywood set-design techniques
with VR. IEEE Computer Graphics and Applications 23,
1 (Jan. 2003), 12–15. DOI:
http://dx.doi.org/10.1109/MCG.2003.1159607

[50] Sharif Razzaque, Zachariah Kohn, and Mary C. Whitton.
2001. EUROGRAPHICS 2001 / Jonathan C. Roberts
Short Presentation © The Eurographics Association
2001. Redirected Walking.

[51] Katja Rogers, Jana Funke, Julian Frommel, Sven Stamm,
and Michael Weber. 2019. Exploring Interaction Fidelity

in Virtual Reality: Object Manipulation and
Whole-Body Movements. In Proceedings of the 2019
CHI Conference on Human Factors in Computing
Systems - CHI ’19. ACM Press, Glasgow, Scotland Uk,
1–14. DOI:http://dx.doi.org/10.1145/3290605.3300644

[52] Massimo Satler, Carlo A. Avizzano, and Emanuele
Ruffaldi. 2011. Control of a desktop mobile haptic
interface. In 2011 IEEE World Haptics Conference.
IEEE, Istanbul, 415–420. DOI:
http://dx.doi.org/10.1109/WHC.2011.5945522

[53] Hasti Seiﬁ, Farimah Fazlollahi, Michael Oppermann,
John Andrew Sastrillo, Jessica Ip, Ashutosh Agrawal,
Gunhyuk Park, Katherine J. Kuchenbecker, and Karon E.
MacLean. 2019. Haptipedia: Accelerating Haptic
Device Discovery to Support Interaction & Engineering
Design. In Proceedings of the 2019 CHI Conference on
Human Factors in Computing Systems - CHI ’19. ACM
Press, Glasgow, Scotland Uk, 1–12. DOI:
http://dx.doi.org/10.1145/3290605.3300788

[54] Emily Shaw, Tessa Roper, Tommy Nilsson, Glyn

Lawson, Sue V. G. Cobb, and Daniel Miller. 2019. The
Heat is On: Exploring User Behaviour in a Multisensory
Virtual Environment for Fire Evacuation. Proceedings of
the 2019 CHI Conference on Human Factors in
Computing Systems - CHI ’19 (2019), 1–13. DOI:
http://dx.doi.org/10.1145/3290605.3300856 arXiv:
1902.04573.

[55] Ken Shigeta, Yuji Sato, and Yasuyoshi Yokokohji. 2007.
Motion Planning of Encountered-type Haptic Device for
Multiple Fingertips Based on Minimum Distance Point
Information. In Second Joint EuroHaptics Conference
and Symposium on Haptic Interfaces for Virtual
Environment and Teleoperator Systems (WHC’07).
IEEE, Tsukaba, 188–193. DOI:
http://dx.doi.org/10.1109/WHC.2007.85

[56] Alexa F. Siu, Eric J. Gonzalez, Shenli Yuan, Jason B.

Ginsberg, and Sean Follmer. 2018. shapeShift: 2D
Spatial Manipulation and Self-Actuation of Tabletop
Shape Displays for Tangible and Haptic Interaction. In
Proceedings of the 2018 CHI Conference on Human
Factors in Computing Systems - CHI ’18. ACM Press,
Montreal QC, Canada, 1–13. DOI:
http://dx.doi.org/10.1145/3173574.3173865

[57] Evan Strasnick, Christian Holz, Eyal Ofek, Mike
Sinclair, and Hrvoje Benko. 2018. Haptic Links:
Bimanual Haptics for Virtual Reality Using Variable
Stiffness Actuation. In Proceedings of the 2018 CHI
Conference on Human Factors in Computing Systems -
CHI ’18. ACM Press, Montreal QC, Canada, 1–12. DOI:
http://dx.doi.org/10.1145/3173574.3174218

[58] Ryo Suzuki, Hooman Hedayati, Clement Zheng, James
Bohn, Daniel Szaﬁr, Ellen Yi-Luen Do, Mark D Gross,
and Daniel Leithinger. 2020a. RoomShift: Room-scale
Dynamic Haptics for VR with Furniture-moving Swarm
Robots. (2020), 11.

[59] Ryo Suzuki, Ryosuke Nakayama, Dan Liu, Yasuaki

[67] Alan Wexelblat. 1993. Virtual reality: applications and

Kakehi, Mark D. Gross, and Daniel Leithinger. 2020b.
LiftTiles: Constructive Building Blocks for Prototyping
Room-scale Shape-changing Interfaces. In Proceedings
of the Fourteenth International Conference on Tangible,
Embedded, and Embodied Interaction. ACM, Sydney
NSW Australia, 143–151. DOI:
http://dx.doi.org/10.1145/3374920.3374941

[60] Shan-Yuan Teng, Da-Yuan Huang, Chi Wang, Jun Gong,
Teddy Seyed, Xing-Dong Yang, and Bing-Yu Chen.
2019. Aarnio: Passive Kinesthetic Force Output for
Foreground Interactions on an Interactive Chair. In
Proceedings of the 2019 CHI Conference on Human
Factors in Computing Systems - CHI ’19. ACM Press,
Glasgow, Scotland Uk, 1–13. DOI:
http://dx.doi.org/10.1145/3290605.3300902

[61] Shan-Yuan Teng, Tzu-Sheng Kuo, Chi Wang, Chi-huan
Chiang, Da-Yuan Huang, Liwei Chan, and Bing-Yu
Chen. 2018. PuPoP: Pop-up Prop on Palm for Virtual
Reality. In The 31st Annual ACM Symposium on User
Interface Software and Technology - UIST ’18. ACM
Press, Berlin, Germany, 5–17. DOI:
http://dx.doi.org/10.1145/3242587.3242628

[62] Shan-Yuan Teng, Cheng-Lung Lin, Chi-huan Chiang,

Tzu-Sheng Kuo, Liwei Chan, Da-Yuan Huang, and
Bing-Yu Chen. 2019. TilePoP: Tile-type Pop-up Prop for
Virtual Reality. (2019), 11.

[63] Marc Teyssier. 2019. Uduino | Home. (2019).

https://marcteyssier.com/uduino/

[64] Martin Usoh, Kevin Arthur, Mary C. Whitton, Rui

Bastos, Anthony Steed, Mel Slater, and Frederick P.
Brooks. 1999. Walking > walking-in-place > ﬂying, in
virtual environments. In Proceedings of the 26th annual
conference on Computer graphics and interactive
techniques - SIGGRAPH ’99. ACM Press, Not Known,
359–364. DOI:
http://dx.doi.org/10.1145/311535.311589

[65] Emanuel Vonach, Clemens Gatterer, and Hannes

Kaufmann. 2017. VRRobot: Robot actuated props in an
inﬁnite virtual environment. In 2017 IEEE Virtual
Reality (VR). IEEE, Los Angeles, CA, USA, 74–83.
DOI:http://dx.doi.org/10.1109/VR.2017.7892233

[66] Yuntao Wang, Hanchuan Li, Zhengyi Cao, Huiyi Luo,
Ke Ou, John Raiti, Chun Yu, Shwetak Patel, and
Yuanchun Shi. 2020. MoveVR: Enabling Multiform
Force Feedback in Virtual Reality using Household
Cleaning Robot. (2020), 12.

explorations. (1993). http://libertar.io/lab/
wp-content/uploads/2016/02/Virtual.Reality.-.
Applications.And_.Explorations.pdf/page=164 Myron
Krueger, Artiﬁcial reality 2 An easy entry to Virtual
reality Chap 7.

[68] Eric Whitmire, Hrvoje Benko, Christian Holz, Eyal

Ofek, and Mike Sinclair. 2018. Haptic Revolver: Touch,
Shear, Texture, and Shape Rendering on a
Reconﬁgurable Virtual Reality Controller. In
Proceedings of the 2018 CHI Conference on Human
Factors in Computing Systems - CHI ’18. ACM Press,
Montreal QC, Canada, 1–12. DOI:
http://dx.doi.org/10.1145/3173574.3173660

[69] M. Yafune and Y. Yokokohji. 2011. Haptically rendering
different switches arranged on a virtual control panel by
using an encountered-type haptic device. In 2011 IEEE
World Haptics Conference. 551–556. DOI:
http://dx.doi.org/10.1109/WHC.2011.5945545

[70] Kotaro Yamaguchi, Ginga Kato, Yoshihiro Kuroda,
Kiyoshi Kiyokawa, and Haruo Takemura. 2016. A
Non-grounded and Encountered-type Haptic Display
Using a Drone. In Proceedings of the 2016 Symposium
on Spatial User Interaction - SUI ’16. ACM Press,
Tokyo, Japan, 43–46. DOI:
http://dx.doi.org/10.1145/2983310.2985746

[71] Yuan-Syun Ye, Hsin-Yu Chen, and Liwei Chan. 2019.
Pull-Ups: Enhancing Suspension Activities in Virtual
Reality with Body-Scale Kinesthetic Force Feedback. In
Proceedings of the 32nd Annual ACM Symposium on
User Interface Software and Technology - UIST ’19.
ACM Press, New Orleans, LA, USA, 791–801. DOI:
http://dx.doi.org/10.1145/3332165.3347874

[72] Yasuyoshi Yokokohji, Ralph L. Hollis, and Takeo

Kanade. 1999. WYSIWYF Display: A Visual/Haptic
Interface to Virtual Environment. Presence:
Teleoperators and Virtual Environments 8, 4 (Aug.
1999), 412–434. DOI:
http://dx.doi.org/10.1162/105474699566314

[73] Y. Yokokohji, J. Kinoshita, and T. Yoshikawa. 2001.

Path planning for encountered-type haptic devices that
render multiple objects in 3D space. In Proceedings
IEEE Virtual Reality 2001. 271–278. DOI:
http://dx.doi.org/10.1109/VR.2001.913796

[74] Daniel Zielasko and Bernhard E Riecke. 2020. Either
Give Me a Reason to Stand or an Opportunity to Sit in
VR. (2020), 3.

