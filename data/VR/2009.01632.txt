Optimal Wireless Streaming of Multi-Quality 360
VR Video by Exploiting Natural, Relative
Smoothness-enabled and Transcoding-enabled
Multicast Opportunities

Kaixuan Long, Ying Cui,

Chencheng Ye,

Zhi Liu

0
2
0
2

p
e
S
2

]
T
I
.
s
c
[

1
v
2
3
6
1
0
.
9
0
0
2
:
v
i
X
r
a

Abstract—In this paper, we would like to investigate optimal
wireless streaming ofamulti-quality tiled 360 virtual reality
(VR) video from a server to multiple users. To this end, we
propose to maximally exploit potential multicast opportunities
by effectivelyutilizing characteristics ofmulti-quality tiled 360 VR
videos and computation resources at the users side. Inparticular,
we consider two requirements for quality variation in one ﬁeld-
of-view (FoV), i.e., the absolute smoothnessrequirement and the
relative smoothness requirement, and two video playback modes,
i.e., the direct-playback mode (without user transcoding) and
transcode-playback mode (with user transcoding).Besides natu-
ral multicast opportunities, we introducetwo new types of multi-
cast opportunities, namely, relative smoothness-enabled multicast
opportunities, which allow ﬂexibletradeoff between viewing qual-
ity and communications resource consumption,and transcoding-
enabled multicast opportunities,which allow ﬂexibletradeoffbe-
tween computation and communications resource consumptions.
Then, we establish a novel mathematical model that reﬂects the
impacts ofnatural, relativesmoothness-enabled andtranscoding-
enabledmulticastopportunitieson the average transmission en-
ergy and transcoding energy. Based on this model, we optimize
the transmission resource allocation, playback quality level
selection and transmission quality level selection to minimize the
energy consumption in the four cases with differentrequirements
for quality variation and video playback modes. By comparing
the optimal values in the four cases, we prove that the energy
consumption reduces when more multicast opportunities can be
utilized. Finally, numerical results show substantial gains of the
proposed solutions over existing schemes, and demonstrate the
importance of effective exploitation of the three types of multicast
opportunities.

Index Terms—Wireless streaming, virtual reality, 360 video,
multi-quality, multicast, smoothness, transcoding, convex opti-
mization, DC programming.

I. INTRODUCTION

Virtual reality (VR) video is generated by capturing a
scene of interest in every direction at the same time using
omnidirectional cameras. A captured video is stitched and
warped onto a 3D sphere, and then projected onto a 2D map
using projection methods such as equirectangular projection,
cubemap projection and pyramid projection. The resulting
video is referred to as 360 VR video. The most commonly

K. Long, Y. Cui and C. Ye are with Shanghai Jiao Tong University, China.
Z. Liu is with Shizuoka University, Japan. This paper was presented in part
at the IEEE GLOBECOM 2019 [1].

used projection method is equirectangular projection which
projects a 3D sphere onto a rectangle [2]. A user wearing a
VR headset or head mounted display (HMD) can freely watch
the scene of interest in any viewing direction at any time,
hence enjoying immersive viewing experience. VR has vast
applications in entertainment, education, medicine, etc. VR
videos are becoming increasingly accessible, as several large
video sharing websites and social media platforms have started
providing VR services. It is predicted that the VR market will
reach 87.97 billion USD by 2025 [3].

Most existing VR headsets connect to personal computers
(PCs) via cables, which greatly limits user mobility and
experience. Increasing efforts have been devoted to wireless
transmission of 360 VR videos. A 360 VR video is of a much
larger size than a traditional video [4]. Thus, transmitting
an entire 360 VR video brings a heavy burden to wireless
networks. In addition, at any moment a user watching a 360
VR video is interested in only one viewing direction. Thus,
transmitting an entire 360 VR video is also unnecessary. To
improve transmission efﬁciency for 360 VR videos, tiling
technique is widely adopted [4]–[6]. Speciﬁcally, a 360 VR
video is divided into smaller rectangular segments of the same
size, referred to as tiles. Transmitting the set of tiles covering a
user’s ﬁeld-of-view (FoV) can save communications resource,
without degrading the user’s quality of experience (QoE). This
relies on viewing direction (or FoV) prediction, as a VR user
may change viewing directions from time to time. Commonly
adopted viewing direction prediction methods deal with the
prediction of an individual user’s viewing direction based
on his historical head movement [7]–[10], or the prediction
of popular viewing directions based on the head movement
trajectories of multiple users [11], [12]. Typically, the angular
rate of human’s head rotation is limited (below 100◦/s) [13].
Thus, viewing direction can be well predicted in a time
interval of 0.1s-0.5s. The prediction accuracy increases as
the prediction time interval reduces. To deal with possible
prediction errors under tiling, two basic transmission schemes
are commonly adopted. One is to transmit the tiles in the
predicted FoV plus a safe margin at the desired quality [14]–
[21]. Note that the size of the safe margin can adapt to the
FoV prediction accuracy. The other is to transmit the tiles in

 
 
 
 
 
 
the predicted FoV at the desired quality and the remaining
tiles at low quality [22]–[27]. The former one has higher
spectrum efﬁciency than the latter one, and can provide tiles
of uniform quality, when the prediction accuracy is not quite
low. In contrast, the latter one can guarantee that the tiles
in the actual FoV can always be delivered. Obviously, such
two basic transmission schemes can be combined to achieve
complementary advantages. In particular, one can transmit the
tiles in the predicted FoV plus a safe margin at the desired
quality and the remaining tiles at low quality. When the size of
the margin reduces to zero, the combined transmission scheme
degenerates to the second basic transmission scheme.

In [14], [15], the authors consider streaming of single-
quality 360 VR videos in single-user wireless networks.
The proposed solutions in [14], [15] may not yield efﬁcient
transmission for single-quality 360 VR videos in multi-user
wireless networks, as optimal resource sharing among users
with heterogeneous channel conditions is not considered.
Furthermore, when multiple users are watching one 360 VR
video simultaneously, transmission efﬁciency can be improved
by exploiting potential multicast opportunities. In our previous
works [16], [17], we consider optimal streaming of a single-
quality tiled 360 VR video in a Time Division Multiple Ac-
cess (TDMA) system and an Orthogonal Frequency Division
Multiple Access (OFDMA) system, respectively, by exploiting
natural multicast opportunities. Speciﬁcally, we consider the
optimal transmission resource allocation to minimize the aver-
age transmission energy for given video quality requirements
of all users; and we also consider the optimization of the
encoding rate of each tile to maximize the received video
quality for a given transmission energy budget for the serving
node.

In [18]–[20], [22]–[26], the authors consider streaming of
multi-quality tiled 360 VR videos in singer-user wireless net-
works. The main focus of [18]–[20], [22]–[26] is the quality
level selection for each tile to be transmitted. Speciﬁcally, the
proposed schemes in [22], [23] are heuristic, while those in
[18]–[20], [24]–[26] are optimization based, with distortion,
bandwidth, utility, etc. being the objective functions or con-
straint functions. Similarly, the proposed solutions in [18]–
[20], [22]–[26] may not result in efﬁcient transmission design
for multi-quality tiled 360 VR videos in multi-user wireless
networks, especially for the case where multiple users are
watching the same 360 VR video. In [21], [27], wireless
streaming of a multi-quality tiled 360 VR video to multiple
users is considered, and quality variation for tiles in an FoV is
allowed so that more multicast opportunities can be exploited
for efﬁcient transmission. Speciﬁcally, [27] optimizes the qual-
ity level selection for each tile to be transmitted to maximize
the total utility of all users under some communications
resource constraints. The size of the optimization problem
is unnecessarily large, as tiles are considered separately. In
addition, without any constraints on quality variation, the
obtained quality levels of adjacent tiles may vary signiﬁcantly,
leading to poor viewing experience. In our previous work [21],
we study the optimal quality level selection to maximize

2

the total utility of all users under communications resource
constraints and quality smoothness constraints which limit
the quality variation for any two adjacent tiles. However, the
quality smoothness constraints for adjacent tiles in [21] still
cannot effectively control the level of quality variation in an
FoV. Furthermore, the number of the smoothness constraints
for adjacent tiles is huge, resulting in a substantial increase
in the computational complexity for solving the optimization
problem. Besides, [21], [27] neglect the fact that channel
conditions of users change much faster than their FoVs, and
hence the proposed solutions in [21], [27] may not yield
desired performance in practical systems.

In this paper, we would like to minimize the energy
consumption for wireless streaming of a multi-quality tiled
360 VR video to multiple users. To this end, we propose
to maximally exploit potential multicast opportunities by
effectively utilizing characteristics of multi-quality tiled 360
VR videos and computation resources at the users side. In
particular, we consider two requirements for quality variation
in one FoV, i.e., the absolute smoothness requirement and
the relative smoothness requirement, and two video playback
modes, i.e., the direct-playback mode (without user transcod-
ing) and transcode-playback mode (with user transcoding),
and investigate potential multicast opportunities for optimal
wireless streaming in the four cases with different require-
ments for quality variation and video playback modes. The
main contributions of this paper are summarized below.1

• We introduce an elegant notation system for partitioning
all tiles into subsets, each for a particular group of users,
and specifying the relation between a subset of tiles
and their target user group. This new notation system is
more tractable and intuitive than the one in our previous
works [16], [17], [21].

• We introduce two new types of multicast opportunities
in transmission of the multi-quality tiled 360 VR video,
namely, relative smoothness-enabled multicast opportu-
nities, which allow ﬂexible tradeoff between viewing
quality and communications resource consumption, and
transcoding-enabled multicast opportunities, which allow
ﬂexible tradeoff between computation and communica-
tions resource consumptions. Furthermore, we establish
a novel mathematical model that reﬂects the impacts
of multicast opportunities on the average transmission
energy and transcoding energy under controllable quality
variation for tiles in an FoV, and thus greatly facilitates
optimal exploitation of potential multicast opportunities
for energy minimization. To the best of our knowledge,
neither relative smoothness-enabled multicast opportuni-
ties nor transcoding-enabled multicast opportunities have

1This paper extends the results under the absolute smoothness requirement
in the conference version [1] to those under the relative smoothness require-
ment. Besides the two cases with the absolute smoothness requirement and
the natural and the transcoding-enabled multicast opportunities investigated
in [1], in this paper, we also study the two cases with the relative smoothness
requirement and the relative smoothness-enabled multicast opportunities.

been recognized to improve the efﬁciency of wireless
streaming of a 360 VR video to multiple users.

• We minimize the average transmission energy in the
two cases without user transcoding. In particular, under
the absolute smoothness requirement, we optimize the
transmission resource, leading to a non-convex problem.
We develop an efﬁcient algorithm to obtain an opti-
mal solution using transformation techniques and con-
vex optimization techniques. Under the relative smooth-
ness requirement, we optimize the transmission resource
and transmission quality level selection, resulting in
a challenging mixed discrete-continuous optimization.
We develop an algorithm to obtain a suboptimal solu-
tion by convex concave procedure. We also minimize
the weighted sum of the average transmission energy
and the transcoding energy in the two cases with user
transcoding. Speciﬁcally, under the absolute smoothness
requirement, we optimize the transmission resource al-
location and transmission quality level selection, while
under the relative smoothness requirement, we optimize
the transmission resource allocation, playback quality
level selection and transmission quality level selection.
Both problems are challenging mixed discrete-continuous
optimization problems, and we obtain their suboptimal
solutions using convex concave procedure. By comparing
the optimal values in the four cases, we prove that
the energy consumption reduces when more multicast
opportunities can be utilized.

• Numerical results show substantial gains of the proposed
solutions over existing schemes in all four cases, and
demonstrate the importance of effective exploitation of
the three types of multicast opportunities for energy
efﬁcient wireless streaming of a multi-quality tiled 360
VR video to multiple users.

II. SYSTEM MODEL
As illustrated in Fig. 1, we consider wireless streaming of a
multi-quality tiled 360 VR video from a single-antenna server
(e.g., base station or access point) to K (≥ 1) single-antenna
users, each wearing a VR headset, in a TDMA system.2 Let
K , {1, ..., K} denote the set of user indices. At any time,
each VR user is watching a rectangular part of the 360 VR
video, referred to as FoV, the center of which is referred to as
the viewing direction. A user may be interested in one FoV
at sometime, and can freely switch to another FoV after a
while. Viewing direction (or FoV) prediction has been widely
studied. In this paper, we focus on transmission design for
given prediction results. The proposed framework does not
rely on any particular prediction method.

A. Multi-Quality Tiled 360 VR Video

We consider tiling to enable ﬂexible transmission of nec-
essary tiles so as to improve transmission efﬁciency of the

2TDMA is more analytically tractable and has applications in WiFi systems.
The proposed multicast transmission schemes and optimization frameworks
for TDMA systems can be extended to OFDMA systems, multi-user MIMO
systems, etc.

3

360 VR video. Speciﬁcally, the 360 VR video with a frame
rate of R (in frames per second) is divided into M × N
rectangular segments of the same size, referred to as tiles,
where M and N represent the numbers of segments in each
column and row, respectively. Deﬁne M , {1, ..., M } and
N , {1, ..., N }. The (m, n)-th tile refers to the tile in the
m-th row and the n-th column, for all m ∈ M and n ∈ N .
Considering user heterogeneity (e.g., in cellular usage costs,
display resolutions of devices, channel conditions, etc.), we
pre-encode each tile into L representations corresponding to L
quality levels using HEVC or H.264, as in Dynamic Adaptive
Streaming over HTTP (DASH). Let L , {1, ..., L} denote
the set of quality levels. For all l ∈ L, the l-th representation
of each tile corresponds to the l-th lowest quality. For ease
of exposition, assume that tiles with the same quality level
have the same encoding rate. The encoding rate of the l-th
representation of a tile is denoted by Dl (in bits/s). Note that
D1 < D2 < ... < DL. We study the system for the duration
of the playback time of multiple groups of pictures (GOPs),3
over which the FoV of each user does not change. Let rk ∈ L
denote the quality requirement of user k ∈ K which is ﬁxed
within the considered duration.

To deal with possible prediction errors, for each user, the
set of tiles that cover the predicted FoV plus a safe margin,
denoted by Gk, are delivered, as in [14]–[21]. The size of
the safe margin can be chosen according to the prediction
accuracy, so that for all k ∈ K, Gk covers all tiles in the
actual FoV of user k with a very high probability that meets
the QoE requirement. Let G ,
k∈K Gk denote the set of
indices of the tiles that need to be transmitted considering all
S
K users. For all S ⊆ K, S 6= ∅, let

PS ,

Gk

G −



Gk



!

k∈S
\

\
denote the set of indices of the tiles that need to be transmitted
to all users in S and are not needed by any user in K \ S.4
Deﬁne





[k∈K\S

P , {PS | PS 6= ∅, S ⊆ K, S 6= ∅} ,
I , {S | PS 6= ∅, S ⊆ K, S 6= ∅} .

Then P forms a partition of G and I speciﬁes the user
sets corresponding to the partition. In contrast with [27], for
all S ∈ I, we jointly consider the tiles in PS instead of
treating them separately to signiﬁcantly reduce computational
complexity for optimal wireless streaming. In addition, for
ease of implementation, we assume that the quality levels of
all tiles in PS transmitted to or played by user k are the same,
for all S ∈ I, k ∈ S.

Example 1 (Illustration of P and I): As illustrated
in Fig. 1, we consider K = 4, M = 4, N = 8,
L = 3, G1 = {(1, 1), (2, 1), (1, 2), (2, 2), (1, 3), (2, 3)},

3The duration of the playback time of one GOP is usually 0.5-1 second.
4Note that for all S ⊆ K, S 6= ∅ with PS 6= ∅, the quality levels of the

tiles in PS needed by the users in S may be different.

 
(cid:23449)(cid:23468)(cid:23463)(cid:23464)(cid:23474)(cid:23395)(cid:23478)(cid:23479)(cid:23468)(cid:23479)(cid:23462)(cid:23467)(cid:23468)(cid:23473)(cid:23466)
(cid:23432)(cid:23463)(cid:23468)(cid:23479)(cid:23468)(cid:23473)(cid:23466)
(cid:23432)(cid:23473)(cid:23462)(cid:23474)(cid:23463)(cid:23468)(cid:23473)(cid:23466)

(cid:23449)(cid:23445)(cid:23395)(cid:23462)(cid:23460)(cid:23475)(cid:23479)(cid:23480)(cid:23477)(cid:23464)(cid:23395)
(cid:23478)(cid:23484)(cid:23478)(cid:23479)(cid:23464)(cid:23472)

(cid:23447)(cid:23468)(cid:23471)(cid:23464)(cid:23463)(cid:23395)(cid:23475)(cid:23477)(cid:23474)(cid:23469)(cid:23464)(cid:23462)(cid:23479)(cid:23464)(cid:23463)(cid:23395)(cid:23414)(cid:23417)(cid:23411)(cid:23395)
(cid:23481)(cid:23468)(cid:23463)(cid:23464)(cid:23474)(cid:23395)(cid:23468)(cid:23473)(cid:23395)(cid:23463)(cid:23468)(cid:23465)(cid:23465)(cid:23464)(cid:23477)(cid:23464)(cid:23473)(cid:23479)(cid:23395)
(cid:23476)(cid:23480)(cid:23460)(cid:23471)(cid:23468)(cid:23479)(cid:23468)(cid:23464)(cid:23478)

l=3

l=2

l=1

4

(cid:23446)(cid:23464)(cid:23477)(cid:23481)(cid:23464)(cid:23477)

1 2 3 4 5 6 7 8

1
2
3
4

m

n

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23412)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23413)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23414)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23415)

Fig. 1: System model. K=4, M =4, N =8, L=3, G1={(1, 1),(2, 1),(1, 2),(2, 2),(1, 3),(2, 3)}, G2={(1, 3),(2, 3),(1, 4),(2, 4),(1, 5),(2, 5)},
G3={(2, 4),(3, 4),(2, 5),(3, 5),(2, 6),(3, 6)}, G4= {(3, 5),(4, 5),(3, 6),(4, 6),(3, 7),(4, 7)},r1=3, r2=1, r3=2 and r4=2.

G2 = {(1, 3), (2, 3), (1, 4), (2, 4), (1, 5), (2, 5)}, G3 = {(2, 4),
(3, 4), (2, 5), (3, 5), (2, 6), (3, 6)}, G4 = {(3, 5), (4, 5), (3, 6),
(4, 6), (3, 7), (4, 7)}. Then, we have P{1} = {(1, 1), (2, 1),
(1, 2), (2, 2)}, P{2} = {(1, 4), (1, 5)}, P{3} = {(3, 4), (2, 6)},
P{4} = {(4, 5), (4, 6), (3, 7), (4, 7)}, P{1,2} = {(1, 3), (2, 3)},
P{2,3} = {(2, 4), (2, 5)}, P{3,4} = {(3, 5), (3, 6)}, P =
{P{1}, P{2}, P{3}, P{4}, P{1,2}, P{2,3}, P{3,4}} and I =
{{1}, {2}, {3}, {4}, {1, 2}, {2, 3}, {3, 4}}.

B. Transmission and Playback

Let xS,k denote the playback quality level selection variable
with respect to the tiles in PS to be played by user k, where

xS,k ∈ L, S ∈ I, k ∈ S.

(1)

Denote x , (xS,k)S∈I,k∈S. When neighboring tiles have very
different qualities, there are obvious seams, which severely
affect the user perceived quality [28]. To guarantee QoE, we
consider two requirements for quality variation in an FoV,
the absolute smoothness requirement and the relative
i.e.,
smoothness requirement.

• Under the absolute smoothness requirement, all tiles in
a user’s FoV must be played at the same quality level.
Considering the quality requirement of user k, we have:

xS,k = rk, S ∈ I, k ∈ S.

(2)

• Under the relative smoothness requirement, tiles in a
user’s FoV can be played at quality levels within a
certain range, as a user usually cannot tell slight quality
variation for tiles in his FoV [29]. Considering the quality
requirement of user k, we have:

rk ≤ xS,k ≤ rk + ∆, S ∈ I, k ∈ S,

(3)

Comparing (2) and (3), it is clear that the constraints in
(3) are less restrictive than the constraints in (2). That is, the
relative smoothness requirement is a relaxed version of the
absolute smoothness requirement.

Let yS,k,l denote the transmission quality level selection
variable with respect to quality level l and the tiles in PS to
be transmitted to user k, where

yS,k,l ∈ {0, 1}, S ∈ I, k ∈ S, l ∈ L,

yS,k,l = 1, S ∈ I, k ∈ S.

l∈L

(4)

(5)

X

Here, yS,k,l = 1 indicates that the quality level of all tiles
in PS to be transmitted to user k is l, and yS,k,l = 0
otherwise. Note that (5) ensures that the server transmits only
one representation of each tile in PS to user k ∈ S. Denote
y , (yS,k,l)S∈I,k∈S,l∈L. The quality level of all tiles in PS
l∈L lyS,k,l. Transcoding refers to
transmitted to user k is
decoding a video source (that has already been encoded) into
an intermediate uncompressed format and then re-encoding it
into the target format. It can be used for bit rate, frame rate and
resolution reduction, and hence can be used to perform video
quality reduction. We consider two video playback modes,
i.e., the direct-playback mode (without user transcoding) and
the transcode-playback mode (with user transcoding).5

P

• In the direct-playback mode, the server has to transmit
the xS,k-th representations of the tiles in PS to user k,
i.e.,

lyS,k,l = xS,k, S ∈ I, k ∈ S.

(6)

l∈L

X

• In the transcode-playback mode, each user can convert
a representation of a tile at a certain quality level to a
representation at a lower quality level. Hence, it only

where ∆ represents the tolerance for quality variation in
an FoV.

5Many chips for mobile devices, such as Qualcomm’s chips for mobile
phones, Ambarella’s chips for camcorders and Intel’s chips for portable
computer or tablet computer, can perform transcoding.

requires the server to transmit the tiles in PS at a quality
level no smaller than xS,k to user k, i.e.,

lyS,k,l ≥ xS,k, S ∈ I, k ∈ S.

(7)

l∈L

X

Note that user transcoding involves computation and
consumes energy. For ease of exposition, we assume that
for each tile, reducing the quality level of a video frame
by one has computation load c (in CPU cycles).6 Let fk
(in CPU cycles/s) represent the computing capability of
user k. Considering heterogeneous hardware conditions
at different users, we allow fk, k ∈ K to be different.
Thus, the transcoding power at user k for reducing the
quality level of a tile by one is Pk , κkcR(fk)2 (in
Watt), where κk is the energy coefﬁcient depending on
the total
the chip architecture at user k [30]. Then,
transcoding power at all users is

|PS|Pk

lyS,k,l − xS,k

k∈S
XS∈I X

l∈L
X

.

!

Comparing (6) and (7), it is obvious that the constraints
in (7) are less restrictive than the constraints in (6). In other
words, the transcode-playback mode is more ﬂexible than the
direct-playback mode.

In summary, considering two smoothness requirements and
two video playback modes, we have four cases, namely,
the case without user transcoding and with the absolute
smoothness requirement, the case without user transcoding
and with the relative smoothness requirement, the case with
user transcoding and with the absolute smoothness require-
ment, and the case with user transcoding and with the relative
smoothness requirement, which possess different multicast
opportunities. In the following, we introduce three types of
multicast opportunities in wireless streaming of the multi-
quality tiled 360 VR video, as illustrated in Fig. 2. Consider
any S ∈ I.

• Natural multicast opportunities: If there exists S ⊆ S
with |S| ≥ 2 such that L(w/o,a)
,
k∈S {rk} 6= ∅
(i.e., rk, k ∈ S are the same),
then the server can
multicast the lS-th representations of the tiles in PS to
simultaneously serve the users in S, where lS ∈ L(w/o,a)
(i.e., lS = rk, k ∈ S). We refer to this type of multicast
opportunities as natural multicast opportunities.

T

S

S

S

,

• Relative smoothness-enabled multicast opportunities: If
there exists S ⊆ S with |S| ≥ 2 such that L(w/o,a)
= ∅
and L(r)
k∈S {rk, rk + 1, ..., rk + ∆} 6= ∅, then the
S
server can multicast the lS-th representations of the tiles
in PS to simultaneously serve the users in S, where lS ∈
L(r)
S . As for all k ∈ S, rk ≤ lS ≤ rk +∆ is satisﬁed, user
k can directly play the received lS-th representations of
the tiles in PS under the relative smoothness requirement.
We refer to this type of multicast opportunities as relative
smoothness-enabled multicast opportunities.

T

6This can be generalized without affecting the optimization framework.

5

S

,

T

• Transcoding-enabled multicast opportunities: If there ex-
ists S ⊆ S with |S| ≥ 2 such that L(w/o,a)
= ∅ and
L(w)
k∈S{rk, rk + 1, ..., L} 6= ∅, then the server
S
can multicast the lS-th representations of the tiles in PS
to simultaneously serve the users in S, where lS ∈ L(w)
S .
Under the absolute smoothness requirement, for all k ∈ S
with rk = lS, user k directly plays the received lS-th
representations of the tiles in PS; for all k ∈ S with
rk < lS, user k converts the lS-th representations of the
tiles in PS to the rk-th representations, and then plays
them. Under the relative smoothness requirement, for all
k ∈ S with rk ≤ lS ≤ rk + ∆, user k directly plays
the received lS-th representations of the tiles in PS; for
all k ∈ S with lS > rk + ∆, user k converts the lS-
th representations of the tiles in PS to the (rk + ∆)-th
representations, and then plays them. We refer to this
type of multicast opportunities as transcoding-enabled
multicast opportunities.

Note that natural multicast opportunities may exist in each
of the four cases; relative smoothness-enabled multicast op-
portunities may exist in each case with the relative smoothness
requirement; transcoding-enabled multicast opportunities may
exist in each case with user transcoding.

Example 2 (Illustration of Multicast Opportunities): As
shown in Fig. 2, consider the same setup as in Example 1
and suppose ∆ = 1.

• In each of the four cases, the server can multicast the
second representations of the tiles in P{3,4} to user 3
and user 4, by exploiting natural multicast opportunities.
Both user 3 and user 4 directly play the received second
representations of the tiles (as r3 = r4 = 2).

• In the two cases with the relative smoothness requirement
(as shown in Fig. 2 (b) and Fig. 2 (d)), the server can
multicast the second representations of the tiles in P{2,3}
to user 2 and user 3, by exploiting relative smoothness-
enabled multicast opportunities. Both user 2 and user 3
directly play the received second representations of the
tiles (as r2 + ∆ = 1 + 1 = 2 and r3 = 2).

• In the two cases with user transcoding (as shown in Fig. 2
(c) and Fig. 2 (d)), the server can multicast the third
representations of the tiles in P{1,2} to user 1 and user
2, by exploiting transcoding-enabled multicast opportu-
nities. In the case with user transcoding and with the
absolute smoothness requirement (as shown in Fig. 2 (c)),
user 1 directly plays the received third representations
of the tiles (as r1 = 3), and user 2 converts the third
representations to the ﬁrst representations and then plays
them (as r2 = 1). In the case with user transcoding and
with the relative smoothness requirement (as shown in
Fig. 2 (d)), user 1 directly plays the received third rep-
resentations of the tiles (as r1 = 3), and user 2 converts
the third representations to the second representations and
then plays them (as r2 + ∆ = 1 + 1 = 2).

 
6

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23412)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23413)

(cid:23440)(cid:23480)(cid:23471)(cid:23479)(cid:23468)(cid:23462)(cid:23460)(cid:23478)(cid:23479)

(cid:23480)(cid:23473)(cid:23468)(cid:23462)(cid:23460)(cid:23478)(cid:23479)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23414)

(cid:23440)(cid:23480)(cid:23471)(cid:23479)(cid:23468)(cid:23462)(cid:23460)(cid:23478)(cid:23479)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23415)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23412)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23413)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23414)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23415)

(cid:23440)(cid:23480)(cid:23471)(cid:23479)(cid:23468)(cid:23462)(cid:23460)(cid:23478)(cid:23479)

(a) Case without user transcoding and with the absolute smoothness
requirement. x{1,2},2 = 1, x{2,3},2 = 1, y{1,2},2,1 = y{2,3},2,1 = 1,
y{1,2},2,2 = y{1,2},2,3 = y{2,3},2,2 = y{2,3},2,3 = 0.

(b) Case without user transcoding and with the relative smoothness
requirement. x{1,2},2 = 1, x{2,3},2 = 2, y{1,2},2,1 = y{2,3},2,2 = 1,
y{1,2},2,2 = y{1,2},2,3 = y{2,3},2,1 = y{2,3},2,3 = 0.

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23412)

(cid:23440)(cid:23480)(cid:23471)(cid:23479)(cid:23468)(cid:23462)(cid:23460)(cid:23478)(cid:23479)

(cid:23480)(cid:23473)(cid:23468)(cid:23462)(cid:23460)(cid:23478)(cid:23479)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23413)

(cid:23479)(cid:23477)(cid:23460)(cid:23473)(cid:23478)(cid:23462)(cid:23474)(cid:23463)(cid:23468)(cid:23473)(cid:23466)

(cid:23440)(cid:23480)(cid:23471)(cid:23479)(cid:23468)(cid:23462)(cid:23460)(cid:23478)(cid:23479)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23414)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23415)

(cid:23479)(cid:23477)(cid:23460)(cid:23473)(cid:23478)(cid:23462)(cid:23474)(cid:23463)(cid:23468)(cid:23473)(cid:23466)

(cid:23440)(cid:23480)(cid:23471)(cid:23479)(cid:23468)(cid:23462)(cid:23460)(cid:23478)(cid:23479)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23412)

(cid:23440)(cid:23480)(cid:23471)(cid:23479)(cid:23468)(cid:23462)(cid:23460)(cid:23478)(cid:23479)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23413)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23414)

(cid:23440)(cid:23480)(cid:23471)(cid:23479)(cid:23468)(cid:23462)(cid:23460)(cid:23478)(cid:23479)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23415)

(c) Case with user transcoding and with the absolute smoothness require-
ment. x{1,2},2 = 1, x{2,3},2 = 1, y{1,2},2,3 = y{2,3},2,1 = 1,
y{1,2},2,1 = y{1,2},2,2 = y{2,3},2,2 = y{2,3},2,3 = 0.

(d) Case with user transcoding and with the relative smoothness require-
ment. x{1,2},2 = 2, x{2,3},2 = 2, y{1,2},2,3 = y{2,3},2,2 = 1,
y{1,2},2,1 = y{1,2},2,2 = y{2,3},2,1 = y{2,3},2,3 = 0.

Fig. 2: Illustration of three types of multicast opportunities. The setup is the same as that in Fig. 1 and ∆ = 1. In Fig. 2 (a), (b), (c) and (d),
x{1},1 = 3, x{2},2 = 1, x{3},3 = 2, x{4},4 = 2, x{1,2},1 = 3, x{2,3},3 = 2, x{3,4},3 = 2, x{3,4},4 = 2, y{1},1,3 = y{2},2,1 = y{3},3,2 =
y{4},4,2 = y{1,2},1,3 = y{2,3},3,2 = y{3,4},3,2 = y{3,4},4,2 = 1. yS,k,l = 0 for all other S ∈ I, k ∈ S, l ∈ L.

C. TDMA Systems

We consider a discrete narrowband system with time frame
of duration T (in seconds)7 and bandwidth B (in Hz). Con-
sider the block fading channel model, i.e., assume the channel
of each user does not change within each time frame. For an
arbitrary time frame, let Hk ∈ H denote the random channel
state of user k, representing the power of the channel between
user k and the server, where H denotes the ﬁnite8 channel state

7Note that T is about 0.005-0.05 second.
8Note that we consider a ﬁnite channel state space for tractability of
optimization. In addition, note that due to limited accuracy for channel
estimation (and channel feedback), the operational channel state space in
practical systems is ﬁnite.

space.9 Let H , (Hk)k∈K ∈ HK denote the random system
channel state in an arbitrary time frame, where HK represents
the ﬁnite system channel state space. We assume that the
server is aware of the system channel state H at each time
frame. Suppose that the random system channel states over
time frames are i.i.d. The probability of the random system

9The overall attenuation over one path is the product of the attenuation
factors due to the antenna pattern of the transmitter and the receiver, the
nature of the reﬂector, as well as the path loss from the transmitting antenna
to the receive antenna. The overall attenuations and propagation delays over
different paths can be different and the channel power is a function of
the overall attenuations and propagation delays over multiple paths [31].
In cellular systems, a base station can directly obtain a channel state by
performing channel estimation.

channel state H at each time frame being h , (hk)k∈K ∈ HK
is given by qH(h) , Pr[H = h].

We consider TDMA for transmitting the set of tiles PS, S ∈
I. To save communications resource by making use of mul-
ticast opportunities, the server transmits one representation of
each tile in PS, S ∈ I at most once. The time allocated to
transmit the l-th representations of the tiles in PS under h,
denoted by th,S,l, satisﬁes:

th,S,l ≥ 0, h ∈ HK, S ∈ I, l ∈ L.

(8)

In addition, we have the following total
constraint under h:

time allocation

S∈I

l∈L

th,S,l ≤ T, h ∈ HK.

(9)

X

X

The power allocated to transmit the l-th representations of the
tiles in PS under h, denoted by ph,S,l, satisﬁes:
ph,S,l ≥ 0, h ∈ HK, S ∈ I, l ∈ L.

(10)

The transmission energy per time frame under h at the server
l∈L th,S,lph,S,l, and the average transmission en-
is
ergy per time frame is
P

S∈I

P

E

"

l∈L
XS∈I X

tH,S,lpH,S,l

,

#

where the expectation is taken over H ∈ HK. The maximum
transmission rate of the l-th representations of the tiles in
PS to user k under h is given by Bth,S,l
(in bits/s) [31], [32], where n0 is the power of the complex
(cid:17)
additive white Gaussian channel noise at each receiver. To
reduce the chance of stall (i.e., the chance that a playback
buffer is empty) during the video playback at each user, we
have the following successful transmission constraints [32]:

1 + ph,S,lhk
(cid:16)

log2

n0

T

Hence, the successful transmission constraints in (11) become:

7

|PS|Drk ≤

E

B
T

(cid:20)

tH,S,rk log2

1 +

(cid:18)

pH,S,rk Hk
n0

(cid:19)(cid:21)
S ∈ I, k ∈ S.

,

(13)

We would like to optimize the transmission time allocation
t , (th)h∈HK and transmission power allocation p ,
(ph)h∈HK to minimize the average transmission energy sub-
ject to the transmission time allocation constraints in (8),
(9), transmission power constraints in (10), and successful
transmission constraints in (13).

Problem 1 (Without User Transcoding and with Absolute

Smoothness Requirement):

E(w/o,a)⋆ , min
t,p

s.t.

E

"

l∈L
XS∈I X
(8), (9), (10), (13).

tH,S,lpH,S,l

#

t(w/o,a)⋆, p(w/o,a)⋆

denote an optimal solution of Prob-

(cid:1)

Problem 1 is non-convex. In the following, we develop an
algorithm to obtain an optimal solution of Problem 1. First,
by a change of variables, i.e., using eh,S,l , th,S,lph,S,l
(representing the transmission energy per time frame for the l-
th representations of the tiles in PS under h) instead of ph,S,l,
for all h ∈ HK, S ∈ I, l ∈ L, we can equivalently convert
Problem 1 to the following convex problem.

Problem 2 (Convex Formulation of Problem 1):

Let
lem 1.
(cid:0)

E

E(w/o,a)⋆ , min
t,e

s.t.

eH,S,l

#

l∈L
XS∈I X

"
(8), (9),
eh,S,l ≥ 0, h ∈ HK, S ∈ I, l ∈ L, (14)

|PS|DlyS,k,l ≤

E

B
T

(cid:20)

tH,S,l log2

1 +

pH,S,lHk
n0

,

(cid:18)

(cid:19)(cid:21)
S ∈ I, k ∈ S, l ∈ L,

where |PS| denotes the number of tiles in PS.

III. OPTIMAL WIRELESS STREAMING WITHOUT USER
TRANSCODING

In this section, we consider optimal wireless streaming
without user transcoding, and minimize the average trans-
mission energy under the absolute and relative smoothness
requirements, separately, by exploiting respective multicast
opportunities.

A. Case without User Transcoding and with Absolute Smooth-
ness Requirement

In this part, we consider the case without user transcoding
and with the absolute smoothness requirement. Note that in
this case, x is given by (2). By (2), (4), (5) and (6), we have:

yS,k,l =

1,
0,

(

l = rk
l 6= rk

, S ∈ I, k ∈ S.

(12)

|PS|Drk ≤

(11)

E

B
T

(cid:20)

tH,S,rk log2

1 +

(cid:18)

eH,S,rk Hk
tH,S,rk n0 (cid:19)(cid:21)
S ∈ I, k ∈ S.

,

(15)

Let
lem 2.
(cid:0)

t(w/o,a)⋆, e(w/o,a)⋆

denote an optimal solution of Prob-

(cid:1)

Due to the equivalence between Problem 1 and Problem 2,

we have:

h,S,l = e(w/o,a)⋆
p(w/o,a)⋆

h,S,l /t(w/o,a)⋆

h,S,l

, h ∈ HK, S ∈ I, l ∈ L.

As Problem 2 is convex, an optimal solution of it can be
obtained using standard convex optimization techniques [33].
When H and K are large, the numbers of variables and
constraints in Problem 2 are huge, leading to prohibitively
high computational complexity. Divide variables (t, e) into
blocks (th, eh), h ∈ HK, one for each h ∈ HK. Note that
the objective and the constraints in (8), (9), (14) of Problem 2
are block separable, and the constraints in (15) are the
only coupling constraints that involve variables from different
blocks. In addition, note that Problem 2 is convex and strictly
feasible, implying that Slaters condition holds, and hence the

duality gap is zero. Therefore, we can adopt partial dual
decomposition and perform parallel computation to accelerate
the speed for solving Problem 2 [34]. Speciﬁcally, by relaxing
the coupling constraints in (15), we can obtain a decomposable
partial dual problem of Problem 2, which shares the same
optimal value as Problem 2.

Problem 3 (Partial Dual Decomposition of Problem 2):

where D(λ) ,
Dh(λ) ,

min
th,eh

D(λ)

max
λ
s.t. λS,k ≥ 0, S ∈ I, k ∈ S,
h∈HK qH(h)Dh(λ) and

(16)

P

eh,S,l −

λS,k

l∈L
XS∈I X
B
×
T

(cid:18)

th,S,rk log2

k∈S
XS∈I X
1 +

(cid:18)

eh,S,rkhk
th,S,rkn0 (cid:19)

− |PS|Drk

(cid:19)(17)

s.t.

th,S,l ≥ 0, S ∈ I, l ∈ L,

th,S,l ≤ T,

l ∈ L,

S∈I

X
eh,S,l ≥ 0, S ∈ I, l ∈ L.

h

(λ), e(w/o,a)⋆
h

Here, λ , (λS,k)S∈I,k∈S, th , (th,S,l)S∈I,l∈L and eh ,
(eh,S,l)S∈I,l∈L. Let λ(w/o,a)⋆ denote an optimal solution of
the optimization in (16) and let (t(w/o,a)⋆
(λ))
the optimization in (17),
denote an optimal solution of
where t(w/o,a)⋆
(λ) ,
h
(e(w/o,a)⋆
(λ))S∈I,l∈L.
h,S,l
Theorem 1 (Relationship between Problem 3 and Prob-
lem 2): t(w/o,a)⋆ = t(w/o,a)⋆(λ(w/o,a)⋆) and e(w/o,a)⋆ =
e(w/o,a)⋆(λ(w/o,a)⋆), where t(w/o,a)⋆(λ) , (t(w/o,a)⋆
(λ))h∈HK
and e(w/o,a)⋆(λ) , (e(w/o,a)⋆

(λ))S∈I,l∈L and e(w/o,a)⋆

(λ) , (t(w/o,a)⋆

(λ))h∈HK .
h
Proof: Please refer to Appendix A.

h,S,l

h

h

the optimization in (16)

By Theorem 1, we can obtain an optimal solution of
Problem 2 by solving Problem 3. As the optimizations
in (17) for all h ∈ HK are convex and can be solved
in parallel using standard convex optimization techniques,
we can compute (t(w/o,a)⋆(λ), e(w/o,a)⋆(λ)) efﬁciently. In ad-
is convex and can be
dition,
solved using the subgradient method [35]. Denote λ(n) ,
(λS,k(n))S∈I,k∈S. The details are summarized in Algo-
rithm 1. It has been shown in [35] that, for all initial points
λ(0) (cid:23) 0, λ(n) → λ(w/o,a)⋆, (t(w/o,a)⋆
(λ(n)))h∈HK →t(w/o,a)⋆
and (e(w/o,a)⋆
h

h
(λ(n)))h∈HK →e(w/o,a)⋆, as n → ∞.
B. Case without User Transcoding and with Relative Smooth-
ness Requirement

8

Algorithm 1 Algorithm for Obtaining an Optimal Solution of
Problem 1
1: Set n = 0, and choose any λ(0) (cid:23) 0.
2: repeat
3:
4:

Set n = n + 1.
For all h ∈ HK , obtain (t(w/o,a)⋆
(λ(n))) by
h
solving the optimization in (17) using standard convex optimization
techniques.
For all S ∈ I and k ∈ S, update λS,k(n) according to λS,k(n +
1) = max{λS,k(n) + ηS,k(n)sS,k(λ(n)), 0}, where

(λ(n)), e(w/o,a)⋆

5:

h

sS,k(λ(n)) , |PS |Drk −

(λ(n))

B

T Xh∈HK qH(h)t(w/o,a)⋆
h,S,rk
(λ(n))hk
(λ(n))n0

e(w/o,a)⋆
h,S,rk
t(w/o,a)⋆
h,S,rk

× log2

1 +





,





and {ηS,k(n)} is a step size sequence satisfying ηS,k(n) >
∞
∞
n=0 η2
0,
n=0 ηS,k(n) = ∞,
6: until some convergence criterion is met.

S,k(n) < ∞.

P

P

allocation p to minimize the average transmission energy
subject to the transmission quality level selection constraints
in (4), (5), (18), transmission time allocation constraints in
(8), (9), transmission power constraints in (10), and successful
transmission constraints in (11).

Problem 4 (Without User Transcoding and with Relative

Smoothness Requirement):

E(w/o,r)⋆ , min
y,t,p

E

tH,S,lpH,S,l

#

"
l∈L
XS∈I X

s.t.

(4), (5), (8), (9), (10), (11), (18).

Let (y(w/o,r)⋆, t(w/o,r)⋆, p(w/o,r)⋆) denote an optimal solution of
Problem 4.

Problem 4 is a challenging mixed discrete-continuous opti-
mization problem. In the following, we develop an algorithm
to obtain a suboptimal solution of Problem 4 using convex
concave procedure.

First, we convert Problem 4 to a penalized DC program-
ming. Similarly, by a change of variables, we use e instead
of p. Besides, we equivalently convert the discrete constraints
in (4) to the following continuous constraints:

0 ≤ yS,k,l ≤ 1, S ∈ I, k ∈ S, l ∈ L,
yS,k,l(1 − yS,k,l) ≤ 0, S ∈ I, k ∈ S, l ∈ L.

(19)
(20)

By disregarding the constraints in (20) and adding to the
objective function a penalty for violating them, we can convert
Problem 4 to the following problem.

Problem 5 (Penalized DC Programming of Problem 4):

In this part, we consider the case without user transcoding
and with the relative smoothness requirement. By (6), x can
be determined by y, and the constraints in (3) become:

min
y,t,e

s.t.

rk ≤

l∈L

lyS,k,l ≤ rk + ∆, S ∈ I, k ∈ S.

(18)

X

We would like to optimize the transmission quality level selec-
tion y, transmission time allocation t and transmission power

E

"
l∈L
XS∈I X

eH,S,l

#

+ ρP (y)

(5), (8), (9), (14), (18), (19),

|PS|DlyS,k,l ≤

E

B
T

(cid:20)

tH,S,l log2

1 +

eH,S,lHk
tH,S,ln0 (cid:19)(cid:21)
(21)

,

(cid:18)

S ∈ I, k ∈ S, l ∈ L,

where the penalty parameter ρ > 0 and the penalty function
P (y) is given by

P (y) ,

yS,k,l(1 − yS,k,l).

(22)

XS∈I X

l∈L
k∈S X

Note that the objective function of Problem 5 can be viewed
as a difference of two convex functions and the feasible set
of Problem 5 is convex. Thus, Problem 5 can be viewed as a
penalized DC programming of Problem 4. An optimal solution
of Problem 5 with zero penalty is also optimal for Problem 4.
Next, we solve Problem 5 instead of Problem 4 by using
convex concave procedure [36]. The main idea is to iteratively
solve a sequence of convex approximations of Problem 5, each
of which is obtained by linearizing the penalty function P (y)
in (22). Speciﬁcally, the convex approximation of Problem 5
at the j-th iteration is given below.

Problem 6 (Convex Approximation of Problem 5 at j-th

Iteration):

(y(j), t(j), e(j)) ,

arg min
y,t,e

E

s.t.

where

+ ρ

P (y, y(j−1))

eH,S,l

#

"
l∈L
XS∈I X

(5), (8), (9), (14), (18), (19), (21),

b

ˆP (y, y(j−1)) , P (y(j−1)) + ∇P (y(j−1))T (y − y(j−1))

=

1 − 2y(j−1)
S,k,l

yS,k,l +

y(j−1)
S,k,l

2

,

l∈L
k∈S X

XS∈I X
and y(j−1) ,
tion of Problem 6 at the (j − 1)-th iteration.
(cid:17)

(cid:0)(cid:0)
y(j−1)
S,k,l
(cid:16)

S∈I,k∈S,l∈L

(cid:0)

(cid:1)

(cid:1)
denotes an optimal solu-

(cid:1)

Problem 6 is a convex optimization problem and can
be solved using standard convex optimization techniques or
partial dual decomposition and parallel computation as in
Section III-A. It is known that the sequence {(y(j), t(j), e(j))}
generated by convex concave procedure is convergent, and
the limit point of {(y(j), t(j), e(j))} is a stationary point
of Problem 5. We can run convex concave procedure
multiple times, each with a random initial feasible point
of Problem 5, and select
the stationary point with the
minimum energy among those with zero penalty, denoted
by (y(w/o,r)†, t(w/o,r)†, e(w/o,r)†). Due to the equivalence be-
tween Problem 4 and Problem 5, for sufﬁciently large ρ,
y(w/o,r)†, t(w/o,r)†, p(w/o,r)†
can be treated as a suboptimal so-
lution of Problem 4, where p(w/o,r)† , (p(w/o,r)†
h,S,l )h∈HK ,S∈I,l∈L
(cid:0)
with p(w/o,r)†
. The details for obtaining
a suboptimal solution of Problem 4 using convex concave
procedure are summarized in Algorithm 2.

(cid:1)
h,S,l /t(w/o,r)†

h,S,l = e(w/o,r)†

h,S,l

IV. OPTIMAL WIRELESS STREAMING WITH USER
TRANSCODING

In this section, we consider optimal wireless streaming
with user transcoding, and minimize the weighted sum of the

9

Algorithm 2 Algorithm for Obtaining a Suboptimal Solution
of Problem 4
Input: c ≥ 1.
1: Set E = +∞.
2: while c > 0 do
3:

Find a random feasible point of Problem 4 as the initial point
(y(0), t(0), e(0)), choose a sufﬁciently large ρ, and set j = 0.
repeat

Set j = j + 1.
Obtain (y(j), t(j), e(j)) by solving Problem 6 using standard
convex optimization techniques or partial dual decomposition and
parallel computation.

until some convergence criterion is met.
if P (y(j)) = 0 then
Set c = c − 1.
if E[

PS∈I Pl∈L e(j)
H,S,l] < E then
E[
and
h,S,l/t(j)
h,S,l = e(j)

Set E
=
t(w/o,r)†=t(j)
with p(w/o,r)†

PS∈I Pl∈L e(j)

p(w/o,r)†=(p(w/o,r)†
h,S,l.

H,S,l], y(w/o,r)†=y(j),
h,S,l )h∈HK ,S∈I,l∈L

4:
5:
6:

7:
8:
9:
10:

11:

end if

12:
end if
13:
14: end while

average transmission energy and the transcoding energy per
time frame, i.e.,

E

"

l∈L
XS∈I X

tH,S,lpH,S,l

#

+ β

|PS|PkT

lyS,k,l − xS,k

k∈S
XS∈I X

l∈L
X

,

!

(23)

under the absolute and relative smoothness requirements sep-
arately, by exploiting respective multicast opportunities. Here,
β ≥ 1 with β > 1 meaning imposing a higher cost on
the energy consumption for user devices due to their limited
battery powers.

A. Case with User Transcoding and with Absolute Smoothness
Requirement

In this part, we consider the case with user transcoding and
with the absolute smoothness requirement. Note that in this
case, x is given by (2). By (2), the constraints in (7) become:

lyS,k,l ≥ rk, S ∈ I, k ∈ S,

(24)

l∈L

and the weighted sum average energy per time frame in (23)
becomes:

X

E

"
l∈L
XS∈I X

tH,S,lpH,S,l

#

+ β

|PS|PkT

lyS,k,l − rk

k∈S
XS∈I X

l∈L
X

.

!

We would like to optimize the transmission quality level selec-
tion y, transmission time allocation t and transmission power
allocation p to minimize the weighted sum average energy
subject to the transmission quality level selection constraints
in (4), (5), (24), transmission time allocation constraints in
(8), (9), transmission power constraints in (10), and successful
transmission constraints in (11).

 
 
Problem 7 (With User Transcoding and with Absolute

Smoothness Requirement):

(cid:23460)(cid:23461)(cid:23478)(cid:23474)(cid:23471)(cid:23480)(cid:23479)(cid:23464)(cid:23395)
(cid:23478)(cid:23472)(cid:23474)(cid:23474)(cid:23479)(cid:23467)(cid:23473)(cid:23464)(cid:23478)(cid:23478)(cid:23395)

(cid:23477)(cid:23464)(cid:23471)(cid:23460)(cid:23479)(cid:23468)(cid:23481)(cid:23464)(cid:23395)
(cid:23478)(cid:23472)(cid:23474)(cid:23474)(cid:23479)(cid:23467)(cid:23473)(cid:23464)(cid:23478)(cid:23478)(cid:23395)

10

E(w,a)⋆ , min
y,t,p

E

tH,S,lpH,S,l

#

"

l∈L
XS∈I X

+ β

|PS|PkT

lyS,k,l − rk

k∈S
XS∈I X

l∈L
X

s.t.

(4), (5), (8), (9), (10), (11), (24).

!

Let (y(w,a)⋆, t(w,a)⋆, p(w,a)⋆) denote an optimal solution of
Problem 7.

Similar to Problem 4, Problem 7 is a challenging mixed
discrete-continuous optimization problem. We can obtain a
suboptimal solution of it using an algorithm similar to Al-
gorithm 2. Speciﬁcally, by a change of variables, we use e
instead of p. In addition, we equivalently convert the discrete
constraints in (4) to the continuous constraints in (19) and
(20). By disregarding the constraints in (20) and adding the
penalty function P (y) in (22) to the objective function of
Problem 7, we can convert Problem 7 to a penalized DC
programming. Then, we can obtain a suboptimal solution
of the penalized DC programming by using convex concave
procedure.

B. Case with User Transcoding and with Relative Smoothness
Requirement

We would like to optimize the playback quality level se-
lection x, transmission quality level selection y, transmission
time allocation t and transmission power allocation p to min-
imize the weighted sum average energy subject to the quality
level selection constraints in (1), (3), (4), (5), (7), transmission
time allocation constraints in (8), (9),
transmission power
constraints in (10), and successful transmission constraints in
(11).

Problem 8 (With User Transcoding and with Relative

Smoothness Requirement):

(cid:23395)(cid:23482)(cid:23468)(cid:23479)(cid:23467)(cid:23474)(cid:23480)(cid:23479)(cid:23395)(cid:23395)
(cid:23480)(cid:23478)(cid:23464)(cid:23477)(cid:23395)
(cid:23479)(cid:23477)(cid:23460)(cid:23473)(cid:23478)(cid:23462)(cid:23474)(cid:23463)(cid:23468)(cid:23473)(cid:23466)

(cid:23395)(cid:23482)(cid:23468)(cid:23479)(cid:23467)
(cid:23480)(cid:23478)(cid:23464)(cid:23477)(cid:23395)
(cid:23479)(cid:23477)(cid:23460)(cid:23473)(cid:23478)(cid:23462)(cid:23474)(cid:23463)(cid:23468)(cid:23473)(cid:23466)

Fig. 3: Comparison of optimal designs in the four cases.

Theorem 2 (Optimality Properties of Problem 8): The

optimal solution of Problem 8 satisﬁes:

x(w,r)⋆
S,k = min

(

r(w,r)
k + ∆,

ly(w,r)⋆
S,k,l

l∈L
X

, S ∈ I, k ∈ S.

)

(25)

Proof: Please refer to Appendix B.

By Theorem 2, we can eliminate x in Problem 8 without
loss of optimality. Thus, we can equivalently convert Prob-
lem 8 to the following problem.

Problem 9 (Equivalent Problem of Problem 8):

tH,S,lpH,S,l

+ β

#

k∈S
XS∈I X

|PS|

E

"
l∈L
XS∈I X
× PkT max

E(w,r)⋆ , min
y,t,p

s.t.

(

l∈L
X
(4), (5), (8), (9), (10), (11), (24).

lyS,k,l − (rk + ∆), 0

)

As max

l∈L lyS,k,l − (rk + ∆), 0

is convex with re-
spect to yS,k,l, l ∈ L, the structure of Problem 9 is the same
as that of Problem 7. Therefore, similarly, we can convert
Problem 9 to a penalized DC programming and obtain a
suboptimal solution using convex concave procedure.

(cid:8)P

(cid:9)

E(w,r)⋆ , min
x,y,t,p

E

tH,S,lpH,S,l

#

"
l∈L
XS∈I X

+ β

|PS|PkT

lyS,k,l − xS,k

k∈S
XS∈I X

l∈L
X

s.t.

(1), (3), (4), (5), (7), (8), (9), (10), (11).

Let (x(w,r)⋆, y(w,r)⋆, t(w,r)⋆, p(w,r)⋆) denote an optimal solution
of Problem 8, where x(w,r)⋆ , (x(w,r)⋆
S,k )S∈I,k∈S, y(w,r)⋆ ,
S,k,l )S∈I,k∈S,l∈L, t(w,r)⋆ , (t(w,r)⋆
(y(w,r)⋆
h,S,l )h∈HK ,S∈I,l∈L and
p(w,r)⋆ , (p(w,r)⋆
h,S,l )h∈HK ,S∈I,l∈L.

Problem 8 is also a challenging mixed discrete-continuous
optimization problem. First, we analyze optimality properties
of Problem 8 to reduce computational complexity for solving
Problem 8.

V. DISCUSSION

A. Comparison of Optimal Designs in Four Cases

!

In Section III and Section IV, we have investigated the
optimal wireless streaming in the four cases. As illustrated
in Fig. 3, besides the optimal transmission time and power
allocation considered in all four cases, the optimal playback
quality level selection is optimized in the case with user
transcoding and with the relative smoothness requirement, and
the optimal transmission quality level selection is optimized
in the three cases with user transcoding or with the relative
smoothness requirement. As the optimization range increases,
the optimal value reduces, as illustrated in Fig. 3 and summa-
rized in the following theorem.

 
 
Theorem 3 (Comparison of Problem 1, Problem 4, Prob-
lem 7 and Problem 8): E(w/o,r)⋆ ≤ E(w/o,a)⋆, E(w,r)⋆ ≤ E(w,a)⋆,
E(w,a)⋆ ≤ E(w/o,a)⋆ and E(w,r)⋆ ≤ E(w/o,r)⋆, where E(w/o,a)⋆,
E(w/o,r)⋆, E(w,a)⋆ and E(w,r)⋆ are the optimal values of Prob-
lem 1, Problem 4, Problem 7 and Problem 8, respectively.

Proof: Please refer to Appendix C.

B. Extension

11

TABLE I: Per tile encoding rates and quantization parameters for
different quality levels.

Quality level
Quantization parameter
Encoding rate (×105bit/s)

1
42
6.66

2
35
16.18

3
28
24.29

4
21
32.01

5
14
40.23

S

k∈K

In this paper, we adopt the ﬁrst transmission scheme (which
is illustrated in Section I) to demonstrate the key ideas. The
proposed solution framework can be easily extended to the
second transmission scheme or the combined transmission
scheme (which are illustrated in Section I). In particular,
additionally, the ﬁrst representations of the tiles in ¯Gk ,
M × N − Gk are delivered to user k, for all k ∈ K.
Analogously, we can derive a partition of ¯G ,
¯Gk
and the corresponding user sets, and introduce the respective
optimization variables. The corresponding playback quality
level selection variables and transmission quality level selec-
tion variables can be determined as in the case without user
transcoding and with the absolute smoothness requirement.
The objective functions of Problem 1, Problem 4, Problem 7
and Problem 8 in the four cases as well as the transmission
time allocation constraints in (8), (9), the transmission power
constraint in (10) and the successful transmission constraints
in (11) can be modiﬁed to incorporate the additional trans-
mission for the ﬁrst representations of the sets of tiles in the
partition of ¯G. Therefore, for the second transmission scheme
or the combined transmission scheme, we can formulate the
optimization problems in the four cases which are similar
to Problem 1, Problem 4, Problem 7 and Problem 8, and
solve them using the proposed methods in Section III and
Section IV.

VI. NUMERICAL RESULTS

In this section, we evaluate the proposed solutions in the
four cases: the case without user transcoding and with the
absolute smoothness requirement, i.e., case-(w/o,a), the case
without user transcoding and with the relative smoothness
requirement, i.e., case-(w/o,r), the case with user transcoding
and with the absolute smoothness requirement, i.e., case-(w,a),
and the case with user transcoding and with the relative
smoothness requirement, i.e., case-(w,r). In the simulation,
we set B = 150 MHz,10 T = 50ms, Pk = 2 × 10−5
Watt, Uk(rk) = rk, k ∈ K and n0 = BkBT0, where kB =
1.38 × 10−23 Joule/Kelvin is the Boltzmann constant and
T0 = 300 Kelvin is the temperature. For ease of simulation,
we consider two channel states for each user, i.e., a good
channel state and a bad channel state, and set H = {d, 2d},
Pr[Hk = d] = 0.5, and Pr[Hk = 2d] = 0.5 for all k ∈ K,
where d = 10−6 reﬂects the path loss. For ease of comparison,
we set β = 1 and refer to the performance metric in each case
as energy for short. We use Kvazaar as the 360 VR video
encoder and video sequence Reframe Iran from YouTube as

10We consider a multi-carrier TDMA with 150 channels, each with

bandwidth 1 MHz.

(cid:23449)(cid:23431)(cid:23395)(cid:23414)

(cid:23449)(cid:23431)(cid:23395)(cid:23416)

(cid:23449)(cid:23431)(cid:23395)(cid:23412)

(cid:23449)(cid:23431)(cid:23395)(cid:23413)

(cid:23449)(cid:23431)(cid:23395)(cid:23415)

Fig. 4: 5 possible viewing directions.

the video source. We set horizontal and vertical angular spans
of each FoV as 100◦ × 100◦ [13]. To avoid view switch
delay in the presence of view changes, besides each requested
FoV, we transmit an extra 10◦ in every direction. We set
M = 18, N = 36 and L = 5. The encoding rates per tile
and quantization parameters for the quality levels are shown
in TABLE I. In addition, for ease of exposition, we consider
5 possible viewing directions as shown in Fig. 4, and assume
that K users randomly choose their viewing directions in
an i.i.d. manner. To capture the impact of the concentration
of the viewing directions, assume Gk, k ∈ K follow a Zipf
distribution, as in [16], [17].11 In particular, the v-th popular
v−γ
Pv∈{1,...,5} v−γ ,
viewing direction is chosen with probability
where v ∈ {1, ..., 5} and γ is the Zipf exponent. When γ
is large (small), the concentration of the viewing directions
there are more
of all users is high (low),
(fewer) multicast opportunities. We assume rk, k ∈ K follow
the uniform distribution in {rlb, rlb + 1, ..., rub} with mean
r = rlb+rub
, where rlb, rub ∈ L and rlb < rub. We consider
200 random choices for Gk, k ∈ K and rk, k ∈ K, and evaluate
the average performance over these realizations.

implying that

2

We consider three baseline schemes, namely Baseline-
unicast, Baseline-(w,a) and Baseline-(w,r).
In Baseline-
unicast, all users are served separately using unicast no matter
whether Gk, k ∈ K are disjoint or not, and optimal power and
time allocation is conducted by solving a problem similar to
Problem 1. In Baseline-(w,a) and Baseline-(w,r), the rS,max-
th representations of the tiles in PS are transmitted to all
users in S using multicast, where rS,max , maxk∈S rk. In
Baseline-(w,a), any user k ∈ S with rk = rS,max directly
plays the received rS,max-th representations of the tiles in
PS; any user k ∈ S with rk < rS,max converts the rS,max-th
representations of the tiles in PS to the rk-th representations,

11Note that different 360 VR videos in general have different popularity
distributions for viewing directions. Zipf distribution has been widely used to
model content popularity in Internet and wireless networks. In particular, a
larger Zipf exponent indicates a smaller tail of the popularity distribution,
implying that Zipf exponent can reﬂect the concentration of requests for
contents. In addition, note that the proposed solutions and their properties
in this paper do not rely on a speciﬁc popularity distribution.

Proposed-(w/o,a)
Proposed-(w/o,r)
Proposed-(w,a)
Proposed-(w,r)
Baseline-(w,a)
Baseline-(w,r)
Baseline-unicast

)

3
-

0
1
(

y
g
r
e
n
E

80

60

40

20

0

2

1

3
Number of users K
(a) Energy versus K at γ = 0, ∆ = 1, rlb = 1 and
rub = 5.

4

5

Proposed-(w/o,a)
Proposed-(w/o,r)
Proposed-(w,a)
Proposed-(w,r)
Baseline-(w,a)
Baseline-(w,r)

)

3
-

0
1
(
y
g
r
e
n
E

5.5

4.5

3.5

2.5

1.5

0.5

0

0.5

1
Zipf exponent 
(c) Energy versus γ at K = 3, ∆ = 1, rlb = 1 and
rub = 5.

1.5

2

12

Proposed-(w/o,a)
Proposed-(w/o,r)
Proposed-(w,a)
Proposed-(w,r)
Baseline-(w,a)
Baseline-(w,r)

)

3
-

0
1
(

y
g
r
e
n
E

12

10

8

6

4

2

0

2

3

4

(b) Energy versus r at γ = 0, K = 3, ∆ = 1, and
rub = rlb + 2.

Proposed-(w/o,a)
Proposed-(w/o,r)
Proposed-(w,a)

Proposed-(w/o,a)
Proposed-(w/o,a)
Proposed-(w/o,r)
Proposed-(w/o,r)
Proposed-(w,r)
Proposed-(w,r)

Proposed-(w,r)
Proposed-(w,r)
Baseline-(w,a)
Baseline-(w,a)
Baseline-(w,r)
Baseline-(w,r)

)
)
)

3
3
3
-
-
-

0
0
0
1
1
1
(
(
(
y
y
y
g
g
g
r
r
r
e
e
e
n
n
n
E
E
E

5
5
5

4
4
4

3
3
3

2
2
2

1
1
1

0
0
0

0
0
0

1
1
1

2
2
2

(d) Energy versus ∆ at γ = 0, K = 3, rlb = 1 and
rub = 5.

Fig. 5: Energy comparison between the proposed solutions and baseline schemes.

and then plays them; the corresponding optimal power and
time allocation is obtained by solving Problem 7 with y given
by

yS,k,l =

1,
0,

(

l = rS,max
l 6= rS,max

, S ∈ I, k ∈ S.

(26)

In Baseline-(w,r), any user k ∈ S with rS,max ≤ rk + ∆
directly plays the received rS,max-th representations of the
tiles in PS; any user k ∈ S with rS,max > rk +∆ converts the
rS,max-th representations of the tiles in PS to the (rk + ∆)-
th representations, and then plays them; the corresponding
optimal power and time allocation is obtained by solving
Problem 9 with y given by (26). Note that Baseline-unicast
does not exploit any multicast opportunities and can be
used in each case; Baseline-(w,a) exploits natural multicast
opportunities and transcoding-enabled multicast opportunities,
and is applicable for case-(w,a); Baseline-(w,r) exploits all
three types of multicast opportunities, and can be utilized in
case-(w,r).

Fig. 5 illustrates the energy versus the number of users K,
the mean quality level r, Zipf exponent γ and the tolerance for
quality variation ∆. From Fig. 5 (a), we can see that Baseline-
unicast is much worse than the other schemes, revealing the
importance of utilizing multicast opportunities in reducing

energy consumption. To better compare the other competitive
schemes, in the remaining ﬁgures, we no longer show the
energy of Baseline-unicast which is much higher. From Fig. 5
(a) and Fig. 5 (b), we can see that the energy of each scheme
increases with K and with r, as the trafﬁc load increases
with K and with r. From Fig. 5 (c), we can see that the
energy of each scheme that utilizes multicast opportunities
decreases with γ, due to the increment of multicast opportu-
nities with γ. From Fig. 5 (d), we can see that the energy
of each scheme that utilizes relative smoothness-enabled mul-
ticast opportunities decreases with ∆, due to the increment
of relative smoothness-enabled multicast opportunities with
∆. Furthermore, from Fig. 5, we can make the following
observations. Proposed-(w/o,r) outperforms Proposed-(w/o,a),
Proposed-(w,r) outperforms Proposed-(w,a), indicating that the
relative smoothness requirement corresponds to more multi-
cast opportunities than the absolute smoothness requirement.
Proposed-(w,a) outperforms Proposed-(w/o,a) and Proposed-
(w,r) outperforms Proposed-(w/o,r), demonstrating that user
transcoding can create multicast opportunities. Proposed-(w,a)
outperforms Baseline-(w,a) and Proposed-(w,r) outperforms
Baseline-(w,r), showing the importance of optimally exploit-
ing transcoding-enabled multicast opportunities in reducing
energy consumption.

 
 
 
 
 
 
VII. CONCLUSION

APPENDIX B: PROOF OF THEOREM 2

13

In this paper, we investigated optimal wireless streaming of
a multi-quality tiled 360 VR video to multiple users in wire-
less networks, by effectivelyutilizing characteristics ofmulti-
quality tiled 360 VR videos and computation resources at
the users side. In particular, we considered two requirements
for quality variation in one FoV, i.e., the absolute smooth-
nessrequirement and the relative smoothness requirement, and
two video playback modes, i.e., the direct-playback mode and
transcode-playback mode.Besides natural multicast opportuni-
ties, we introducedtwo new types of multicast opportunities,
i.e., relative smoothness-enabled multicast opportunities,and
transcoding-enabled multicast opportunities, and established
a novel mathematical model that reﬂects their impacts on the
average transmission energy and transcoding energy. Then,
we optimized the transmission resource allocation, playback
quality level selection and transmission quality level selection
to minimize the energy consumption in the four cases with
differentrequirements for quality variation and video playback
modes, by maximally exploiting potential multicast opportu-
nities. By comparing the optimal values in the four cases,
we proved that the energy consumption reduces when more
multicast opportunities can be utilized. Finally, numerical
results demonstrated the importance of effective exploitation
of the three types of multicast opportunities. To the best
of our knowledge,this is the ﬁrst work that successfully
utilizes relative smoothness-enabled multicast opportunities
(with an effective guarantee for quality variation in each FoV)
andtranscoding-enabled multicast opportunities for optimal
transmission of a multi-quality tiled 360 VR video to multiple
users in wireless networks.

APPENDIX A: PROOF OF THEOREM 1

P

we

the

the

relax

First,

partial

coupling

constraints

(15)
and
L(t, e, λ)

h∈HK
S∈I
|PS|Drk − B
T

obtain
,
k∈S λS,k
=
(cid:0)

in
Lagrange
function
l∈L qH(h)eh,S,l +
1 +
tH,S,rk log2
S∈I
eH,S,rk Hk
h∈HK qH(h)Lh(th, eh, λ), where
P
P
tH,S,rk n0
λS,k, S ∈ I, k ∈ S denote the Lagrange multipliers with
(cid:1)(cid:3)(cid:1)
to the constraints in (15) and Lh(th, eh, λ) ,
respect
1 +
l∈L eh,S,l −
S∈I
eh,S,rk
. Next, we obtain the corresponding
− |PS|Drk
(cid:0)
P
P
th,S,rk
partial dual function of Problem 2:
(cid:1)

B
T th,S,rk log2

hk
P
n0
(cid:1)

k∈S λS,k

E
P
(cid:2)

S∈I

P

P

P

(cid:0)

(cid:0)

D(λ) , min
t,e
s.t.

L(t, e, λ)

(8), (9), (10), (14).

As the objective function and constraints are separable, this
problem can be equivalently decomposed into the optimization
in (17), one for each h ∈ HK. As the duality gap for
Problem 2 is zero, we can show Theorem 1.

(28)

(29)

(30)

(31)

We

prove Theorem 2

by

(x(w,r)⋆, y(w,r)⋆) does not
exists S′ ∈ I, k′ ∈ K such that

contradiction. Suppose
there

satisfy (25). That

is,

x(w,r)⋆
S ′,k′

6= min

r(w,r)
k′ + ∆,

(

ly(w,r)⋆
S ′,k′,l

.

)

(27)

l∈L
X

As (x(w,r)⋆, y(w,r)⋆) satisﬁes (3) and (7), we know

x(w,r)⋆
S,k ≤ min

(

r(w,r)
k + ∆,

ly(w,r)⋆
S,k,l

l∈L
X

, S ∈ I, k ∈ S.

)

By (27) and (28), we know for some S′ ∈ I, k′ ∈ K,

x(w,r)⋆
S ′,k′ < min

r(w,r)
k′ + ∆,

(

ly(w,r)⋆
S ′,k′,l

.

)

l∈L
X

Construct x‡ , (x‡

S,k)S∈I,k∈S, where

x‡
S,k = min

(

r(w,r)
k + ∆,

ly(w,r)⋆
S,k,l

l∈L
X

, S ∈ I, k ∈ S.

)

By (3) and (7), we know
ly(w,r)⋆

l∈L

S,k,l ≥ rk, S ∈ I, k ∈ S.

X

By (30), (31), and the fact that y(w,r)⋆ satisﬁes (4) and (5),
we know that (x‡, y(w,r)⋆) satisﬁes (1), (3) and (7). Thus,
(x‡, y(w,r)⋆, t(w,r)⋆, p(w,r)⋆) is a feasible solution of Problem 8.
In addition, by (29) and (30), x(w,r)⋆
S ′,k′ for some
S′ ∈ I, k′ ∈ K. Thus, the objective value of Problem 8 at
(x‡, y(w,r)⋆, t(w,r)⋆, p(w,r)⋆) is smaller than the optimal value.
Therefore, by contradiction, we complete the proof of Theo-
rem 2.

S ′,k′ < x‡

APPENDIX C: PROOF OF THEOREM 3
First, we show that E(w/o,r)⋆ ≤ E(w/o,a)⋆. Construct y‡ ,
S,k,l)S∈I,k∈S,l∈L, where

(y‡

y‡
S,k,l =

1,
0,

(

l = rk
l 6= rk

, S ∈ I, k ∈ S.

(32)

It is clear that y‡ satisﬁes (4), (5) and (18). By (32) and the
fact that (t(w/o,a)⋆, p(w/o,a)⋆) satisﬁes (13), we can show that
(y‡, t(w/o,a)⋆, p(w/o,a)⋆) satisﬁes (11). As an optimal solution of
Problem 1, (t(w/o,a)⋆, p(w/o,a)⋆) satisﬁes (8), (9) and (10). Thus,
(y‡, t(w/o,a)⋆, p(w/o,a)⋆) is a feasible solution of Problem 4, with
objective value E(w/o,a)⋆. Thus, we have E(w/o,r)⋆ ≤ E(w/o,a)⋆.
Then, we show that E(w,r)⋆ ≤ E(w,a)⋆. Construct x‡ ,
S,k)S∈I,k∈S, where

(x‡

x‡
S,k = rk, S ∈ I, k ∈ S.

(33)

that x‡

is clear

satisﬁes (1) and (3). By (33) and
It
that y(w/o,r)⋆ satisﬁes (24), we can show that
the fact
(x‡, y(w,a)⋆) satisﬁes (7). As an optimal solution of Problem 7,
(y(w,a)⋆, t(w,a)⋆, p(w,a)⋆) satisﬁes (4), (5), (8), (9), (10) and

(11). Thus, (x‡, y(w,a)⋆, t(w,a)⋆, p(w,a)⋆) is a feasible solution
of Problem 8, with objective value E(w,a)⋆. Thus, we have
E(w,r)⋆ ≤ E(w,a)⋆.

S,k,l given by (32). It

Next, we show that E(w,a)⋆ ≤ E(w/o,a)⋆. Construct y‡ ,
(y‡
S,k,l)S∈I,k∈S,l∈L with y‡
is clear
that y‡ satisﬁes (4), (5) and (7). By (32) and the fact
that (t(w/o,a)⋆, p(w/o,a)⋆) satisﬁes (13), we can show that
(y‡, t(w/o,a)⋆, p(w/o,a)⋆) satisﬁes (11). As an optimal solution of
Problem 1, (t(w/o,a)⋆, p(w/o,a)⋆) satisﬁes (8), (9) and (10). Thus,
(y‡, t(w/o,a)⋆, p(w/o,a)⋆) is a feasible solution of Problem 7, with
objective value E(w/o,a)⋆. Thus, we have E(w,a)⋆ ≤ E(w/o,a)⋆.
Finally, we show that E(w,r)⋆ ≤ E(w/o,r)⋆. Construct ¯x‡ ,
S,k)S∈I,k∈S, where

(¯x‡

¯x‡
S,k =

ly(w/o,a)⋆
S,k,l

l∈L

, S ∈ I, k ∈ S.

(34)

X

It is clear that ¯x‡ satisﬁes (1) and (7). By (34) and the
fact that y(w/o,r)⋆ satisﬁes (18), we can show that ¯x‡ sat-
isﬁes (3). As an optimal solution of Problem 4, (y(w/o,r)⋆,
t(w/o,r)⋆, p(w/o,r)⋆) satisﬁes (4), (5), (8), (9), (10) and (11).
Thus, (¯x‡, y(w/o,r)⋆, t(w/o,r)⋆, p(w/o,r)⋆) is a feasible solution of
Problem 8, with objective value E(w/o,r)⋆. Thus, we have
E(w,r)⋆ ≤ E(w/o,r)⋆.

Therefore, we complete the proof of Theorem 3.

REFERENCES

[1] K. Long, Y. Cui, C. Ye, and Z. Liu, “Optimal transmission of multi-
quality tiled 360 VR video by exploiting multicast opportunities,” in
Proc. IEEE GLOBECOM, Dec. 2019, pp. 1–6.

[2] M. Zink, R. Sitaraman, and K. Nahrstedt, “Scalable 360o video stream
delivery: Challenges, solutions, and opportunities,” Proc. IEEE, pp.
639–650, Feb. 2019.
[3] Mordor Intelligence,

- Growth,
Trends, and Forecast
(2020 - 2025),” [Online]. Available: https:
//www.mordorintelligence.com/industry-reports/virtual-reality-market/,
[Accessed: 23-Jan-2020].

“Virtual Reality

(VR) Market

[4] J. Song, F. Yang, W. Zhang, W. Zou, Y. Fan, and P. Di, “A fast
FoV-switching DASH system based on tiling mechanism for practical
omnidirectional video services,” IEEE Trans. Multimedia, 2019.
[5] V. R. Gaddam, M. Riegler, R. Eg, C. Griwodz, and P. Halvorsen,
“Tiling in interactive panoramic video: Approaches and evaluation,”
IEEE Trans. Multimedia, vol. 18, no. 9, pp. 1819–1831, 2016.

[6] P. Maniotis, E. Bourtsoulatze, and N. Thomos, “Tile-based joint caching
and delivery of 360o videos in heterogeneous networks,” IEEE Trans.
Multimedia, 2019.

[7] F. Qian, L. Ji, B. Han, and V. Gopalakrishnan, “Optimizing 360 video
delivery over cellular networks,” in Proceedings of the 5th Workshop on
All Things Cellular: Operations, Applications and Challenges. ACM,
Oct. 2016, pp. 1–6.

[8] F. Qian, B. Han, Q. Xiao, and V. Gopalakrishnan, “Flare: Practical
viewport-adaptive 360-degree video streaming for mobile devices,” in
Proceedings of the 24th Annual International Conference on Mobile
Computing and Networking. ACM, Oct. 2018, pp. 99–114.

[9] Y. Bao, H. Wu, T. Zhang, A. A. Ramli, and X. Liu, “Shooting a moving
target: Motion-prediction-based transmission for 360-degree videos,” in
Proc. IEEE Big Data, Feb. 2016, pp. 1161–1170.

[10] C. Fan, S. Yen, C. Huang, and C. Hsu, “Optimizing ﬁxation prediction
using recurrent neural networks for 360o video streaming in head-
mounted virtual reality,” IEEE Trans. Multimedia, 2019.

[11] X. Liu, Q. Xiao, V. Gopalakrishnan, B. Han, F. Qian, and M. Varvello,
“360 innovations for panoramic video streaming,” in Proceedings of the
16th ACM Workshop on Hot Topics in Networks. ACM, Nov. 2017,
pp. 50–56.

[12] J. Chakareski, R. Aksu, X. Corbillon, G. Simon, and V. Swaminathan,
“Viewport-driven rate-distortion optimized 360o video streaming,” in
Proc. IEEE ICC, Jul. 2018, pp. 1–7.

14

[13] R. Ju, J. He, F. Sun, J. Li, F. Li, J. Zhu, and L. Han, “Ultra wide view
based panoramic VR streaming,” in Proceedings of the Workshop on
Virtual Reality and Augmented Reality Network, Aug. 2017, pp. 19–23.
[14] C. Zhou, M. Xiao, and Y. Liu, “Clustile: Toward minimizing bandwidth
in 360-degree video streaming,” in Proc. IEEE INFOCOM, Apr. 2018,
pp. 962–970.

[15] G. Cheung, Z. Liu, Z. Ma, and J. Z. Tan, “Multi-stream switching for
interactive virtual reality video streaming,” in Proc. IEEE ICIP, Feb.
2017, pp. 2179–2183.

[16] C. Guo, Y. Cui, and Z. Liu, “Optimal multicast of tiled 360 VR video,”
IEEE Wireless Commun. Lett., vol. 8, no. 1, pp. 145–148, Aug. 2019.
[17] ——, “Optimal multicast of tiled 360 VR video in OFDMA systems,”

IEEE Commun. Lett., vol. 22, no. 12, pp. 2563–2566, 2018.

[18] L. Xie, Z. Xu, Y. Ban, X. Zhang, and Z. Guo, “360probDASH: Im-
proving QoE: of 360 video streaming using tile-based HTTP: Adaptive
streaming,” in Proceedings of the 2017 ACM on Multimedia Conference.
ACM, Oct. 2017, pp. 315–323.

[19] D. He, C. Westphal, and J. J. Garcia-Luna-Aceves, “Joint rate and fov
adaptation in immersive video streaming,” in Proceedings of the 2018
Morning Workshop on Virtual Reality and Augmented Reality Network.
ACM, Aug. 2018, pp. 27–32.

[20] D. V. Nguyen, H. T. Tran, A. T. Pham, and T. C. Thang, “An optimal
tile-based approach for viewport-adaptive 360-degree video streaming,”
IEEE Trans.Emerging Sel. Top. Circuits Syst, pp. 29–42, 2019.
[21] K. Long, C. Ye, Y. Cui, and Z. Liu, “Optimal multi-quality multicast
for 360 virtual reality video,” in Proc. IEEE GLOBECOM, Dec. 2018,
pp. 1–6.

[22] X. Corbillon, G. Simon, A. Devlic, and J. Chakareski, “Viewport-
adaptive navigable 360-degree video delivery,” in Proc. IEEE ICC, May.
2017, pp. 1–7.

[23] C. Ozcinar, A. De Abreu, and A. Smolic, “Viewport-aware adaptive 360
video streaming using tiles for virtual reality,” in Proc. IEEE ICIP, Feb.
2017, pp. 2174–2178.

[24] S. Rossi and L. Toni, “Navigation-aware adaptive streaming strategies
for omnidirectional video,” in Proc. IEEE MMSP, Dec. 2017, pp. 1–6.
[25] M. Xiao, C. Zhou, V. Swaminathan, Y. Liu, and S. Chen, “Bas-360:
Exploring spatial and temporal adaptability in 360-degree videos over
http/2,” in Proc. IEEE INFOCOM, Oct. 2018, pp. 953–961.

[26] Z. Liu, S. Ishihara, Y. Cui, Y. Ji, and Y. Tanaka, “Jet: Joint source
and channel coding for error resilient virtual reality video wireless
transmission,” Signal Processing, vol. 147, pp. 154–162, Nov. 2018.

[27] H. Ahmadi, O. Eltobgy, and M. Hefeeda, “Adaptive multicast streaming
of virtual reality content to mobile users,” in Proceedings of the on
Thematic Workshops of ACM Multimedia 2017. ACM, Oct. 2017, pp.
170–178.

[28] M. Yu, H. Lakshman, and B. Girod, “Content adaptive representations
of omnidirectional videos for cinematic virtual reality,” in Proceedings
of the 3rd International Workshop on Immersive Media Experiences.
ACM, Oct. 2015, pp. 1–6.

[29] H. Wang, V.-T. Nguyen, W. T. Ooi, and M. C. Chan, “Mixing tile reso-
lutions in tiled video: A perceptual quality assessment,” in Proceedings
of Network and Operating System Support on Digital Audio and Video
Workshop. ACM, Mar. 2014, p. 25.

[30] T. X. Tran and D. Pompili, “Joint task ofﬂoading and resource allocation
for multi-server mobile-edge computing networks,” IEEE Trans. Veh.
Technol., vol. 68, no. 1, pp. 856–868, 2018.

[31] D. Tse and P. Viswanath, Fundamentals of wireless communication.

Cambridge university press, 2005.

[32] W. Xu, Y. Cui, and Z. Liu, “Optimal multi-view video transmission in
multiuser wireless networks by exploiting natural and view synthesis-
enabled multicast opportunities,” IEEE Trans. Commun, vol. 68, no. 3,
pp. 1494–1507, 2019.

[33] S. Boyd and L. Vandenberghe, Convex optimization.

Cambridge

university press, 2004.

[34] S. Boyd, L. Xiao, A. Mutapcic, and J. Mattingley, “Notes on decom-
position methods,” Notes for EE364B, Stanford University, pp. 1–36,
2007.

[35] D. P. Bertsekas, Nonlinear programming. Athena scientiﬁc Belmont,

1999.

[36] T. Lipp and S. Boyd, “Variations and extension of the convex–concave
procedure,” Optimization and Engineering, vol. 17, no. 2, pp. 263–287,
Jun. 2016.

