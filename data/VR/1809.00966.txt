Energy-Efﬁcient Mobile-Edge Computation
Ofﬂoading for Applications with Shared Data

Xiangyu He, Hong Xing, Yue Chen, Arumugam Nallanathan
School of Electronic Engineering and Computer Science
Queen Mary University of London, London, UK
Email: {xiangyu.he, h.xing, yue.chen, a.nallanathan}@qmul.ac.uk

8
1
0
2

p
e
S
4

]
T
I
.
s
c
[

1
v
6
6
9
0
0
.
9
0
8
1
:
v
i
X
r
a

Abstract—Mobile-edge computation ofﬂoading (MECO) has
been recognized as a promising solution to alleviate the burden
of resource-limited Internet of Thing (IoT) devices by ofﬂoad-
ing computation tasks to the edge of cellular networks (also
known as cloudlet). Speciﬁcally, latency-critical applications
such as virtual reality (VR) and augmented reality (AR) have
inherent collaborative properties since part of the input/output
data are shared by different users in proximity. In this paper,
we consider a multi-user fog computing system,
in which
multiple single-antenna mobile users running applications fea-
turing shared data can choose between (partially) ofﬂoading
their individual tasks to a nearby single-antenna cloudlet for
remote execution and performing pure local computation. The
mobile users’ energy minimization is formulated as a convex
problem, subject to the total computing latency constraint, the
total energy constraints for individual data downloading, and
the computing frequency constraints for local computing, for
which classical Lagrangian duality can be applied to ﬁnd the
optimal solution. Based upon the semi-closed form solution,
the shared data proves to be transmitted by only one of the
mobile users instead of multiple ones. Besides, compared to
those baseline algorithms without considering the shared data
property or the mobile users’ local computing capabilities,
the proposed joint computation ofﬂoading and communications
resource allocation provides signiﬁcant energy saving.

I. INTRODUCTION

With the advent of the era of Internet of Things (IoT),
the unprecedented growth of latency-critical applications
are nevertheless hardly satisﬁed by mobile cloud computing
(MCC) alone. To cater for the low-latency requirements
while alleviating the burden over backhaul networks, mobile-
edge computing (MEC), also interchangeably known as fog
computing has aroused a paradigm shift by extending cloud
capabilities to the very edge within the radio access network
(RAN) (see [1] and the references therein).

Both industry and academia have devoted constant effort
to providing the next generation mobile networks with
ultra-reliable low latency communications (uRLLC). Among
pioneering industrialization on fog computing, Cisco has
proposed fog computing as a promising candidate for IoT
architecture [2]. In academics, [3]–[6] focused on one-to-
one ofﬂoading scheme where there is one mobile user and
one corresponding cloudlet, [7] [8] presented multiple-user
cases where there are multiple edge servers, while [9] related
to multiple-to-one scenarios where multiple mobile users
ofﬂoad computing to one edge server.

Recently, the intrinsic collaborative properties of the in-
put data for computation ofﬂoading was investigated for
augmented reality (AR) in [10]. In fact, in many mobile
applications such as augmented reality (AR) and virtual re-
ality (VR), multiple mobile devices share parts of computing
input/output in common, thus making it possible for further
reducing computing latency at the edge. In [11], some impor-
tant insights on the interplay among the social interactions in
the VR mobile social network was revealed, and a signiﬁcant
reduce on the end-to-end latency was achieved through
stochastic optimization technique. [12] investigated potential
spatial data correlation for VR applications to minimize the
delay of accomplishing computation.

On another front, joint optimization of computation of-
ﬂoading with communications resources (such as power,
bandwidth, and rate) proves to improve the performance
of fog computing by explicitly taking channel conditions
and communications constraints into account. In an early
research [13], the ofﬂoading decision making was examined
through the estimation of bandwidth data without consider-
ing the allocation of communication resources and channel
conditions. For communications-aware computation ofﬂoad-
ing, [14] minimized the local user’s computation latency
in a multi-user cooperative scenario, while [15] minimized
the energy consumption of remote fog computing nodes.
However, these line of work have not taken the shared data
feature aforementioned into account, thus failing to fully
reap the advantage of fog computing.

In this paper, we consider a multi-user fog computing
system, in which multiple single-antenna mobile users run-
ning applications featuring shared data can choose between
(partially) ofﬂoading their computing tasks to a nearby
single-antenna cloudlet and executing them locally, and then
download the results from the cloudlet. Mobile users’ overall
energy consumption is minimized via joint optimization of
computation ofﬂoading and communications resource allo-
cation. Compared with existing literature, e.g., [10], although
it investigated the energy minimization problem of shared-
data featured ofﬂoading, it did not ﬁnd the optimal solution.
Moreover, it did not draw explicit conclusion regarding the
channel condition’s inﬂuence in the computation ofﬂoading.
From this point of view, our work provides in-depth un-
derstanding of the shared-data featured ofﬂoading in MEC
systems.

 
 
 
 
 
 
II. SYSTEM MODEL

We consider a mobile-edge system that consists of U
mobile users running AR applications, denoted as U =
{1, ..., U }, and one base station (BS) equipped with com-
puting facilities working as a cloudlet. All of the mobile
users and the BS are assumed to be equipped with single
antenna.

The input data size for user u is denoted by DI

u, ∀u ∈ U,
in which one fraction data size of DI
S bits are the shared
data that is the same across all U mobile users and the other
fraction of DL
u bits are the data executed locally by user u.
The shared data can be transmitted from each user by part,
denoted by DI
u,S = DI
S.
The amount of input data that is exclusively transmitted by
u is thus given by ¯DI
u − DI

u,S, ∀u ∈ U, such that

P
S − DL
u , ∀u ∈ U.

U
u=1 DI

u = DI

transmission power given by pul
data rate for ofﬂoading the shared data is expressed as:

u,S, the achievable individual

Rul

u,S = W ul

u log2(1 +

pul
u,S|hu|2
N0

), ∀u ∈ U,

(1)

u = W ul

U with W ul denoting the overall band-
where W ul
width available for the uplink transmission, and N0 is the
additive white Gaussian noise (AWGN) power. Accordingly,
tul
u,S = DI
u,S, and the energy consumed by the u-th
user in the shared data ofﬂoading sub-phase is given as

u,S/Rul

Eul

u,S = tul

u,Spul

u,S =

tul
u,S
|hu|2 f (

u,S

DI
tul
u,S

), ∀u ∈ U,

(2)

where the function f (x) is deﬁned as f (x) = N0(2

x
W ul
u −1).
Similarly, the energy consumption for the u-th user in the

individual data ofﬂoading sub-phase is expressed as:

Eul

u = tul

u pul

u =

tul
u
|hu|2 f (

DI

S − DL
u − DI
u
tul
u

), ∀u ∈ U.

(3)

B. Computation Model

Based on the energy model in [9], given the local com-
u , the energy consumption for executing local

puting bits DL
computation is given by:

EC

u = κ0

(λ0DL
u )3
2
tC
u,L

, ∀u ∈ U,

(4)

where λ0 (in cycles/bit) denotes the number of CPU cycles
needed for processing one bit of input data, and κ0 is the
energy consumption capacitance coefﬁcient.

Fig. 1. Timing illustration for the considered multi-user MEC system.

C. Downlink Transmission

It can be seen from Fig. 1 that there are two consecu-
tive sub-phases for both input data ofﬂoading and results
the shared and the individual data
downloading phases:
transmission. The transmission duration for ofﬂoading the
shared input data is denoted by tul
u,S, ∀u ∈ U; the ofﬂoading
duration for the individual data is denoted as tul
u , ∀u ∈ U;
and the durations for downloading the shared and the in-
dividual output data are tdl
u , ∀u ∈ U respectively.
The remote computation time are also illustrated in Fig. 1,
where tC
u , ∀u ∈ U, denote that for the shared and
the individual data transmitted to the cloudlet, respectively.
Similarly, F and fu, ∀u ∈ U, denote the computational
frequency (in cycles/s) allocated to the shared and the
individual tasks, respectively, by the cloudlet. In addition,
the local computation time is denoted by tC

u,S and tdl

S and tC

u,L, ∀u ∈ U.

A. Uplink Transmission

As observed from Fig. 1, there are two consecutive uplink
transmission sub-phases: the shared data and the individual
data ofﬂoading [10]. Each mobile user ofﬂoads its com-
putation task to the cloudlet server via frequency division
multiple access (FDMA). The channel coefﬁcient from user
u is given by hu, ∀u ∈ U, which is assumed to remain
unchanged during the uplink transmission duration. With the

Similar to the uplink transmission, the downlink trans-
mission phase also has two separate sub-phases: the shared
and the individual results downloading. The shared output
data are multicasted to the mobile users by the cloudlet
at its maximum transmitting power Pmax. The achievable
individual rate for the shared data downloading is thus given
by

Rdl

u,S = W dl

u log2(1 +

), ∀u ∈ U,

(5)

Pmax|gu|2
N0

u = W dl

where W dl
U with W dl denotes the overall bandwidth
available for downlink transmission. The downlink channel
coefﬁcient is given by gu, ∀u ∈ U. The relation between
the shared output data and the input data is given by
DO
S, where a0 is the factor representing the
number of output bits for executing one bit of input data.
Accordingly, tdl
u,S, ∀u ∈ U, and thus the latency
for transmitting the shared output data to all mobile users is
given by

S = a0DI

u,S = DO

S /Rdl

tdl
S = max
u∈U

{tdl

u,S}.

(6)

This is because the individual results downloading cannot
be initiated until the shared data has ﬁnished transmission.
After the multicasting transmission, the individual output
data is sent to each mobile user via FDMA. Denoting the

downlink transmitting power for the u-th individual data by
pdl
u , the achievable rate for individual data downloading is
thus expressed as:

Rdl

u = W dl

u log2(1 +

pdl
u |gu|2
N0

), ∀u ∈ U.

(7)

u = a0(DI

u = a0 ¯DI

Similarly, denoting the individual output data size by DO
u ,
∀u ∈ U, DO
u =
u /Rdl
DO
u .
For energy consumption, the overall energy consumed for
decoding the result sent back by the cloudlet at the u-th
mobile user is given by [10]

u ), and tdl

S − DL

u − DI

Edl

u = (tdl

u,S + tdl

u )ρdl

u , ∀u ∈ U,

(8)

where ρdl
per second.

u (in Joules/second) captures the energy expenditure

In addition, the total energy consumed by the BS for

results transmission is given by,

tdl
u
|gu|2 f (

u∈U
X

a0(DI

u − DI
tdl
u

S − DL
u )

), ∀u ∈ U,

(9)

which is required not to exceed Emax by the BS operator.

D. Total Latency

Next, we consider the overall computing latency. As
is observed the individual data
illustrated in Fig. 1,
it
downloading in Phase II cannot start until
the cloudlet
completes individual data computing, and the BS ﬁnishes
the shared data transmission over the downlink. Moreover,
for the individual data computing, it cannot start before
either the corresponding individual data ﬁnishes ofﬂoading
or the cloudlet completes the shared data computing, i.e.,
u,S} + tC
max{tul
S }. Furthermore, also seen
from Fig. 1, for the shared data results, it can only start
being transmitted in the downlink after the cloudlet com-
pletes the shared data computing and all the individual data

u,S + tul

u , max
u∈U

{tul

ﬁnishes ofﬂoading in the uplink, i.e., max

{tul

u,S} +

max
u∈U

(cid:26)

{tul

u,S + tul
u }

tC
S , max
u∈U
(cid:27)
computing latency is expressed as follows:

. Combining the above facts, the total

τu = max

(

max{tul

u,S + tul

u , max
u∈U

{tul

u,S} + tC

S } + tC
u ,

max
u∈U

max

(cid:26)
∀u ∈ U.

{tul

u,S} + tC

S , max
u∈U

{tul

u,S + tul
u }

+ tdl
S

(cid:27)

+ tdl
u ,

)

(10)

III. PROBLEM FORMULATION

The overall energy consumption at

the mobile users
consists of three parts: data ofﬂoading over the uplink (c.f.

(2) and (3)), local computing (c.f. (4)), and results retrieving
(c.f. (8)), which is thus given by

Etotal =

κ0

u∈U
X
tul
u
|hu|2 f (

+

u∈U
X

u )3
2 +

(λ0DL
tC
u∈U
u,L
X
S − DL
u − DI
u
tul
u

DI

tul
u,S
|hu|2 f (

u,S

DI
tul
u,S

)

) +

(tdl

u,S + tdl

u )ρdl
u .

u∈U
X

(11)

The objective is to minimize the overall energy con-
sumption given by Etotal, subject to the computing latency
constraints, the maximum local computing frequencies, and
the total energy consumption on the individual data at the
BS. Speciﬁcally, the optimization problem is formulated as
below:

(P1) :
{tul

u,S ,tul

min
u,L,tdl

u ,DL

u ,DI

u,S }

Etotal

u ,tC
s.t.

τu ≤ Tmax, ∀u ∈ U,

S − DL
u )

a0(DI

u − DI
tdl
u

tdl
u
|gu|2 f (
u,L ≤ Tmax, ∀u ∈ U,
u ≤ tC
u,Lfu,max,
u − DI
S, DI

u ≤ DI
u,S = DI

u∈U
X
0 ≤ tC
λ0DL
0 ≤ DL
DI

S, ∀u ∈ U,
u,S ≥ 0,

(12a)

(12b)

) ≤ Emax,

(12c)

(12d)

(12e)

(12f)

(12g)

u∈U
X
u,S ≥ 0, tul
tul

(12h)

u ≥ 0, tC

u ≥ 0, ∀u ∈ U.

u,L ≥ 0, tdl
Constraint (12b) and (12d) gives the latency constraints
that the time taken for accomplishing computing tasks can-
not excess the maximum allowed length, both for ofﬂoading
and local computing. (12c) tells that the available energy for
downlink transmission of remote computing node should be
lower than a maximum level. (12e) restricts the number of
allowable local computing bits imposed by local computing
capabilities. Besides, (12g) puts that adding all the shared
data bits ofﬂoaded by all mobile users respectively, the value
should be equal to the exact amount of shared bits existing
in the same user group.

IV. OPTIMAL SCHEME FOR JOINT OFFLOADING AND
COMMUNICATION RESOURCE ALLOCATION

A. Problem Reformulation

Although the latency expression (10) looks complex in
its from, (12b) is still a convex constraint. For the ease
of exposition, we assume herein that the cloudlet executes
the shared and the individual computing within the duration
of the individual data ofﬂoading and the shared results
downloading, respectively, i.e., tC
u ≪ tdl
u,S,
∀u ∈ U 1. As a result, (12b) can be simpliﬁed as below:
S + tdl

u ≤ Tmax, ∀u ∈ U.

u , and tc

u,S + tul

S ≪ tul

u } + tdl

max{tul

(13)

1We assume herein that

the cloudlet
is relatively much higher than those at the mobile users, and thus the
computing time taken is much shorter than the data transmission time.

the computation capacities at

)

ˆtdl =

0,

βu −

σu > 0,




Tmax − tdl
S ,

u∈U
X
otherwise;

u∈U
X

(22)

(tdl

u,S + tdl

u )ρdl

u +

βu(tul
u,S

and the optimal local computing data size is given by



tul
u,S + tul
Notice that EC

by introducing the auxiliary variable tdl, which satisﬁes
u ≤ tdl, ∀u ∈ U, (13) reduces to
tdl
u ≤ Tmax − tdl
u ’s (c.f. (4)) is monotonically decreases
with respect to the local computing time tC
u,L for each
mobile user. To obtain the minimal energy consumption, it
is obvious that tC
u,L = Tmax, ∀u ∈ U. Then the optimization
problem to be solved is reformulated as:

S − tdl, ∀u ∈ U.

(14)

by

(P1′) :
{tul

u,S ,tul

min
u ,tdl,DL

u ,DI

u,S }

Etotal

u ,tdl
s.t.

(15a)

(12c − 12h), (14).
tdl
u ≤ tdl, ∀u ∈ U.
B. Joint ofﬂoading and communication resource allocation
Introducing dual variables β, ω, σ, ν, the Lagrangian of

(15c)

(15b)

problem (P 1′) is presented as:

u,S

) +

L(β, ω, σ, ν, tul
u,S, tul
tul
DI
u,S
|hu|2 f (
tul
u,S
(λ0DL
u )3
2 +
tC
u∈U
u,L
X
u − Tmax + tdl
+ tul

u∈U
X
+

κ0

u , tdl

u , tdl, DL
tul
u
|hu|2 f (

u , DI
u,S) =
u − DI
S − DL
DI
u
tul
u

u∈U
X

u∈U
X
S + tdl) +

u∈U
X

ωu(λ0DL
u

− tC

u,Lfu,max) +

tdl
u
|gu|2 f (

+ ν[

u∈U
X

u∈U
X
u − tdl)

σu(tdl

u∈U
X
a0(DI

S − DL
u )

u − DI
tdl
u

) − Emax],

(16)

where β = {β1, ..., βU } are dual variables associated with
the latency constraint (14), ω = {ω1, ..., ωU } are asso-
ciated with local computing bits constraint (12e)), σ =
{σ1, ..., σU } are connected with the constraint for auxiliary
variable tdl, and ν catches the downlink transmission en-
ergy constraint (12c). Hence, we have the Lagrangian dual
function expressed as:

g(β, ω, σ, ν)

=
{tul
u , DI
DL

u,S ,tul
u,S),

min
u ,tdl,DL

u ,tdl

u ,DI

u,S }

L(β, ω, σ, ν, tul

u,S, tul

u , tdl

u , tdl,

s.t.

(12f-12h).

Consequently, the corresponding dual problem is formu-

(17)

lated as:

s.t.

max
{β,ω,σ,ν}

g(β, ω, σ, ν)

(18)

β (cid:23) 0, ω (cid:23) 0, σ (cid:23) 0, ν ≥ 0.

Proposition 1. Given a determined set of dual variables
β, ω, σ, ν,
the optimal solution to the Lagrangian dual
problem (16) can be determined as follows.

The optimal primal variables tul

u,S, tul

u , and tdl

u , are given

ˆtul
u,S =

ˆDI
u,S
βu|hu|2
N0

1
e

(

W ul
u
ln2

[W0(

− 1)) + 1]

, ∀u ∈ U.

(19)

ˆtul
u =

W ul
u
ln2

S − ˆDL

u

DI
u − DI
1
e

βu|hu|2
N0

(

[W0(

− 1)) + 1]

, ∀u ∈ U.

(20)

, ∀u ∈ U.

ˆtdl
u =

a0(DI
1
e

S − ˆDL
u − DI
u )
(ρdl
u + σu)|gu|2
νN0

(

W dl
u
a0ln2

[W0(

− 1)) + 1]

(21)
where W0(x) is the principle branch of the Lambert W
function deﬁned as the solution for W0(x)eW0(x) = x [15],
e is the base of the natural logarithm; the optimal auxiliary
variable tdl is given by:

ˆDL

u =

min

(

3 (

N0ln2
3κ0λ0

Tmaxv
u
u
u
t
, ∀u ∈ U,

(cid:20)

, DI

u − DI
S

)

ˆrul
u
W ul
u

2
u |hu|2 +
W ul

a0 ˆrdl
u
W dl
u

νa0 · 2
W dl

u |gu|2 ) −

+

ωu
3κ0λ2

0 (cid:21)

where ˆrul
W dl
a0ln2 [W0( 1
u

u = W ul
e ( (ρdl

ln2 [W0( 1
u +σu)|gu|
νN0

u

2

2

N0 − 1)) + 1] and ˆrdl

e ( βu|hu|
− 1)) + 1], ∀u ∈ U.

u =

Proof: Please refer to Appendix A.

In fact, on one hand, ˆrul

u ’s and ˆrdl
u ’s can be interpreted as
the optimum transmission rate for the shared/individual data
ofﬂoading and the individual data downloading, respectively,
given the dual variables. On the other hand, for each user
u, the optimal transmission rate for the shared data is seen
to be identical to that of the individual data over the uplink,
given that the uplink channel gains remain unchanged during
the whole ofﬂoading phase.

Next, to obtain the optimal ofﬂoading bits of the shared
u,S, we need the following lemma.

data for each user, i.e., ˆDI

Lemma 1. The optimal ofﬂoaded shared data for user u is
expressed as,

ˆDI

u,S =

DI
S,
0,

(

ˆu = arg min
1≤u≤U
otherwise,

∆u,

(23)

where ∆u =

u,S)

f (ˆrul
u,S |hu|2 + βu
ˆrul
Proof: Please refer to Appendix B.

, ∀u ∈ U.

ˆrul
u,S

Notable, it is easily observed from Lemma 1 that the
shared data is optimally ofﬂoaded by one speciﬁc user
instead of multiple ones.

Based on Proposition 1, the dual problem can thus be
iteratively solved according to ellipsoid method (with con-
straints), the detail of which can be referred to [16]. The
algorithm for solving (P1′) is summarized in Table I.

TABLE I
ALGORITHM I FOR SOLVING (P1′)

Require: (β(0), ω(0), σ(0), ν(0))
1: repeat
2:

3:

u , ˆDI

u,S , ˆtul

u , ˆtdl, ˆDL

Solve (17) given (β(i), ω(i), σ(i), ν(i)) according to Proposi-
tion 1 and obtain {ˆtul
u , ˆtdl
update the subgradient of β, ω, σ, ν respectively, i.e., tul
u,S } + tdl, λ0DL
{tdl
u − tC
Tmax + max
u∈U
u − DI
S − DL
a0(DI
u )
tdl
u
|gu|2 f (
tdl
u

Pu∈U
with the ellipsoid method [16];

) − Emax in accordance

u −
u − tdl,

u,Lfu,max, tdl

u,S + tul

u,S};

4: until the predeﬁned accuracy threshold is satisﬁed.
Ensure: The
dual

variables

the

to

dual

problem (18)

optimal
(β∗, ω∗, σ∗, ν∗)

5: Solve (17) again with (β∗, ω∗, σ∗, ν∗)
Ensure: {tul∗
u , tdl∗
u,S}

u , tdl∗, DL∗

u,S , tul∗

u , D∗

V. NUMERICAL RESULTS

In this section, the numerical results of the proposed
algorithm together with other baseline algorithms are pre-
sented. Except for the local computing only scheme where
users execute all the data bits locally, there are three other
ofﬂoading schemes presented as baseline algorithms: 1)
Ofﬂoading without considering the shared data: the collabo-
rative properties are ignored, every user makes the ofﬂoading
decision without coordination among other users; 2) Full
ofﬂoading only: the shared data is taken into consideration,
but the whole chunks of input data of every user are forced to
be ofﬂoaded to the edge computing node, excluding the local
computing capability from participating in the computation
tasks; 3) Ofﬂoading with equal
taking the
correlated data into consideration, the data ofﬂoading and
downloading are performed for each user with equal time
length, with optimal solutions obtained through CVX.

time length:

In the simulation, the bandwidth avaialble is assumed to
be W ul = W dl=10MHz, the maximum downlink transmit
power Pmax = 1W , and the input data size DI
u = 10kbits
for all users. The spectral density of the (AWGN) power is
-169 dBm/Hz. The mobile energy expenditure per second
in the downlink is ρdl
u =0.625 J/s [10], the maximum local
computing capability fu,max = 1GHz. Besides, λ0 =
1 × 103 cycle/bit, a0 = 1, κ0 = 10−26. The pathloss
model is P L = 128.1 + 37.6log10(du), where du represents
the distance between user u and edge computing node in
kilometers.

Fig.2 depicts how the energy consumption changes with
different latency constraints. The energy consumption are
becoming lower as the latency requirement gets longer for
all listed ofﬂoading algorithms. Only the proposed ofﬂoading
scheme can give the lowest energy consuming performance.

12

11

10

9

8

7

6

5

4

3

)
J

3
-

0
1

(

n
o
i
t
p
m
u
s
n
o
c

y
g
r
e
n
E

2
0.01

0.02

0.03

0.04

Offloading without considering shared data
Full Offloading Only
Proposed Shared data Offloading ALgorithm
Offloading with equal time length

0.05

0.06
Latency Constraint T

max

0.07

0.08

0.09

0.1

 (s)

Fig. 2. Energy consumption versus different latency constraints

The best energy saving improvement can only be achieved
through the joint participation of local computing and shared
data coordination. Besides, even though the equal
time
length ofﬂoading has lower complexity than the proposed
algorithm, it cannot compete with the proposed one in terms
of energy saving. Recalling our conclusion that the best way
to achieve the energy saving is to let these correlated bits
transmitted by one speciﬁc user, the reason is that forcing
ofﬂoading time duration to be equal makes the shared data
to be transmitted by all users simultaneously.

The energy consumed for computing one data bit in-
creases exponentially as the latency constraint diminishes.
Hence for the local computing only scheme, when latency
constraint comes to 0.01 second the energy taken to ﬁnish
the computation tasks, which is 1000 mJoules, can reach up
to nearly 100 times more than those of all the ofﬂoading
algorithms. Then it drops exponentially to 10 mJoules when
the latency constraint goes to 0.1 second. As a result, the
curve representing local computing only is not added in
Fig.2, otherwise the comparison of the ofﬂoading schemes
will not be clear.

In Fig.3, the energy consumption changes with the per-
centage of shared data is demonstrated. Apparently, as long
as we take the shared data into consideration when making
ofﬂoading decisions, the lower overall energy consumption
is achieved when the proportion of shared data gets higher.
More energy will be saved when the percentage of shared
data gets higher for proposed ofﬂoading scheme compared to
the scheme without considering the existence of shared data.
This trend applies to the full ofﬂoading only algorithm as
well, because it also cares about the existence of shared data
when making ofﬂoading decisions. The energy consump-
tions for full ofﬂoading only do not always go under that of
ofﬂoading without considering shared data. That is because
when given speciﬁc latency constraint, the importance of
local computing capabilities diminishes in saving mobile
users’ energy consumption as the share of common data
increases. Since most of the data will be ofﬂoaded to the
edge node, few input bits would remain local for computing.
Then the energy consumption of the full ofﬂoading only
scenario represents that it get closer to that of the proposed
algorithm when the percentage of shared data increases.
Similar trend applies to the equal time length ofﬂoading as
well.

S = λ0DI
tC

S/F

(24)

 
 
 
 
12

10

8

6

4

2

)
J

3
-

0
1

(
n
o

i
t

p
m
u
s
n
o
c

y
g
r
e
n
E

0

0

0.1

0.2

0.3

Offloading without considering shared data
Offloading with equal time length
Full Offloading Only
Proposed Shared Data Offloading Algorithm

0.4

0.5
Percentage of shared data (%)

0.6

0.7

0.8

0.9

1

Fig. 3. Energy consumption versus different percentage of shared data

VI. CONCLUSIONS

In this paper, a multi-user fog computing system was
considered, in which multiple single-antenna mobile users
running applications featuring shared data can partially
ofﬂoad their individual computation tasks to a nearby single-
antenna cloudlet and then download the results from it. The
mobile users’ energy consumption minimization problem
subject to the total latency, the total downlink transmission
energy and the local computing constraints was formulated
as a convex problem with the optimal solution obtained
by classical Lagrangian duality method. Based upon the
semi-closed form solution, it was proved that the shared
data is optimally transmitted by only one of the mobile
users instead of multiple ones collaboratively. The proposed
joint computation ofﬂoading and communications resource
allocation was veriﬁed by simulations against other baseline
algorithms that ignore the shared data property or the mobile
users’ own computing capabilities..

APPENDIX A

,

u,S

u,S

∂L
∂DI

, ∂L
∂tul

, ∂L
∂tdl
u

, ∂L
∂tul
u

In order

solutions of

to ﬁnd the optimal

the primary
problem, we need to examine the related partial derivatives
∂L
, ∂L
∂tdl , ∀u ∈ U. After obtaining
∂DL
u
these partial derivatives, the KKT conditions can be applied to
ﬁnd the optimal solutions. For example, let
be
equal to 0. The inverse function of y = f (x) − xf ′(x) for x > 0
is given by x = W ul
eN0 − 1
e ) + 1]. Then it follows that
u f ′(ˆrul
u ) − ˆrul
u,Sf ′(ˆrul
f (ˆrul
u ) = −βu|hu|2, and
the optimal uplink transmission rate of the shared data ˆrul
u,S and
that of the exclusively ofﬂoaded data ˆrul
u are thus derived. Then the
expressions of the optimal primary variables are readily obtained
as shown in (19), (20), (21), (22), (23), and (23).

ln2 [W0(− y
u,S) = f (ˆrul

u,S) − ˆrul

∂L
∂DL
u

∂L
∂DI

and

u,S

u

APPENDIX B

To obtain how the shared input data ofﬂoading ˆDI

u,S are
distributed among users, we need to examine the partial Lagrangian
regarding DI
u,S. Replacing the shared data ofﬂoading time

u,S and tul

tul
u,S with

DI
u,S
ˆrul
u

, the partial Lagrangian is expressed as

min

{DI

u,S }

L = X
u∈U

[

tul
u,S
|hu|2 f (

u,S

DI
tul
u,S

) + βutul

u,S]

[

u,S

DI
u,S|hu|2 f (ˆrul
ˆrul
∆u · DI

u,S

u,S) + βu

u,S

DI
ˆrul
u,S

]

DI

u,S = DI

S, DI

u,S ≥ 0, ∀u ∈ U,

= X
u∈U

= X
u∈U

X
u∈U

s.t.

(24a)

(24b)

where we deﬁne ∆u =

f (ˆrul
u,S)
u,S|hu|2 +
ˆrul
dual variable βu’s. As a result, the optimal solution to the linear
programming (LP) (24) is easily obtained as shown in (23).

as a constant given the

βu
ˆrul
u,S

REFERENCES

[1] Y. Mao, C. You, J. Zhang, K. Huang, and K. B. Letaief, “A survey on
mobile edge computing: The communication perspective,” Commun.
Surveys Tuts., vol. 19, pp. 2322–2358, Fourth Quarter 2017.

[2] F. Bonomi, R. Milito, J. Zhu, and S. Addepalli, “Fog computing and
its role in the Internet of Things,” in Proc. ACM SIGCOMM Workshop
on Mobile Cloud Computing (MCC), (Helsinki, Finland), Aug. 2012.
[3] W. Zhang, Y. Wen, K. Guan, D. Kilper, H. Luo, and D. O. Wu,
“Energy-optimal mobile cloud computing under stochastic wireless
channel,” IEEE Trans. Wireless Commun., vol. 12, pp. 4569–4581,
September 2013.

[4] J. Kwak, Y. Kim, J. Lee, and S. Chong, “Dream: Dynamic resource
and task allocation for energy minimization in mobile cloud systems,”
IEEE J. Sel. Areas Commun., vol. 33, pp. 2510–2523, Dec 2015.
[5] C. You, K. Huang, and H. Chae, “Energy efﬁcient mobile cloud
computing powered by wireless energy transfer,” IEEE J. Sel. Areas
Commun., vol. 34, pp. 1757–1771, May 2016.

[6] Y. D. Lin, E. T. H. Chu, Y. C. Lai, and T. J. Huang, “Time-and-energy-
aware computation ofﬂoading in handheld devices to coprocessors and
clouds,” IEEE Syst. J., vol. 9, pp. 393–405, June 2015.

[7] R. Kaewpuang, D. Niyato, P. Wang, and E. Hossain, “A framework for
cooperative resource management in mobile cloud computing,” IEEE
J. Sel. Areas Commun., vol. 31, pp. 2685–2700, December 2013.
[8] J. Cheng, Y. Shi, B. Bai, and W. Chen, “Computation ofﬂoading in
cloud-RAN based mobile cloud computing system,” in 2016 IEEE
International Conference on Communications (ICC), pp. 1–6, May
2016.

[9] X. Chen, “Decentralized computation ofﬂoading game for mobile
cloud computing,” IEEE Trans. Parallel Distrib. Syst., vol. 26,
pp. 974–983, April 2015.

[10] A. Al-Shuwaili and O. Simeone, “Energy-efﬁcient resource allocation
for mobile edge computing-based augmented reality applications,”
IEEE Wireless Commun. Lett., vol. 6, pp. 398–401, June 2017.
[11] J. Park, P. Popovski, and O. Simeone, “Minimizing latency to support
VR social interactions over wireless cellular systems via bandwidth
allocation,” IEEE Wireless Commun. Lett., pp. 1–1, 2018.

[12] M. Chen, W. Saad, C. Yin, and M. Debbah, “Echo state transfer
learning for data correlation aware resource allocation in wireless
virtual reality,” in 2017 51st Asilomar Conference on Signals, Systems,
and Computers, pp. 1852–1856, Oct 2017.

[13] R. Wolski, S. Gurun, C. Krintz, and D. Nurmi, “Using bandwidth
data to make computation ofﬂoading decisions,” in 2008 IEEE Inter-
national Symposium on Parallel and Distributed Processing, pp. 1–8,
April 2008.

[14] H. Xing, L. Liu, J. Xu, and A. Nallanathan, “Joint task assignment and
wireless resource allocation for cooperative mobile-edge computing,”
Proc. IEEE International Conference on Communications (ICC), May
2018.

[15] F. Wang, J. Xu, X. Wang, and S. Cui, “Joint ofﬂoading and computing
optimization in wireless powered mobile-edge computing systems,”
IEEE Trans. on Wireless Commun., vol. 17, pp. 1784–1797, March
2018.

[16] S. Boyd, “Lecture notes for EE364b: Convex Optimization II.”

 
 
 
