5
0
0
2

c
e
D
7
2

]
h
p
-
o
e
g
.
s
c
i
s
y
h
p
[

1
v
7
4
2
2
1
5
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Virtual Reality Visualization by CAVE
with VFIVE and VTK

Nobuaki Ohno, Akira Kageyama, and Kanya Kusano
Earth Simulator Center,
Japan Agency for Marine-Earth Science and Technology
3173-25 Showa-machi, Kanazawa-ku,
Yokohama, 236-0001 Japan

The CAVE-type virtual reality (VR) system was introduced for scientiﬁc visualization of large
scale data in the plasma simulation community about a decade ago. Since then, we have been
developing a VR visualization software, VFIVE, for general CAVE systems. Recently, we have inte-
grated an open source visualization library, the Visualization Toolkit (VTK), into VFIVE. Various
visualization methods of VTK can be incorporated and used interactively in VFIVE.

I.

INTRODUCTION

Simulation science is supported by two key technologies; the computation and visualization. While the computer
technology still keeps the exponential growth, its counterpart, the visualization technology, does not. Therefore the
gap between the two key technologies is exponentially growing. It is becoming harder for simulation scientists to
understand the output data by means of the traditional visualization technology based on graphic workstations or
PCs. We believe that the modern virtual reality (VR) technology provides the solution to this technological imbalance.
Among various VR systems developed to date, the CAVE-type VR system is especially suited to our purpose, i.e.,
the visualization of complicated 3-D simulation data. The CAVE is a room-sized, cubic-shaped VR system developed

FIG. 1: (a) Our CAVE system, “BRAVE”. (b) Liquid crystal shutter glasses. (c) A portable controller, “wand”.

at University of Illinois, Chicago ([Cruz-Neira et al. 1993]). We installed a CAVE system “BRAVE” which is shown
in Fig. 1(a), in our facility in 2003. Stereo Images are projected onto its 3m×3m screens of the walls and the ﬂoor.
The viewer stands in the CAVE’s room wearing a liquid crystal shutter glasses shown in Fig. 1(b). A magnetic sensor
is attached to the glasses so that the projected images are automatically adjusted to the viewer’s position in real
time. The stereo images for the four screens (3 walls + 1 ﬂoor) are generated by four DLP projectors. Since they
are projected seamlessly on their borders, everything looks natural from the viewer inside the CAVE and feels a deep
immersion in the VR world. The viewer interacts with the simulation data through a portable controller, “wand”,
shown in Fig. 1(c). Another magnetic sensor is attached to the wand to detect its position and direction.

II. VFIVE AND VTK

VFIVE is our original virtual reality visualization software for CAVE systems ([Kageyama et al. 1999], 2000). The
major visualization methods of VFIVE are listed in Table I. VFIVE is a fully interactive visualization tool; we can
control the isosurface level by the vertical motion of the wand in the CAVE room; we can start new tracer particles
from the tip of the wand by pressing a wand button; and a spotlight is emitted by the wand and thousands of tracer
particles are ﬂying in the cone-shaped light. In the original version, VFIVE has only basic visualization methods
In order to add a new visualization method to VFIVE, one had to write a
such as Isosurface and Field Lines.
subset of computer graphics (CG) software with OpenGL and CAVELib. In contrast to usual CG programs, a CAVE
application programmer does not have to write the projection part of the software since the CAVELib automatically
takes care about that part. The programmer writes the display process part and the application computation process

 
 
 
 
 
 
2

TABLE I: Major visualization methods of VFIVE

For Scalar data
Isosurface
Color Contour
Local Slice Plane
Contour Lines (VTK) Spotlighted Particles

For Vector data
Field Lines
Particle Tracer
Vector Allows

Stream Surfaces (VTK)
Stream Tubes (VTK)

part. The former is to draw images on the screens and the latter is for calculations, e.g., the orbits of tracer particles.
Therefore, simulation researchers who want a new visualization method in VFIVE for their own analysis need a fairly
good knowledge and experience of programming with OpenGL and CAVELib but it is clearly overwhelming for most
simulation researchers. This has been a hurdle for VFIVE to become an actively used research tool in the simulation
science. To resolve this problem, we have made a major upgrade of VFIVE by incorporating a general visualization
library, the Visualization Toolkit (VTK).

VTK ([Shroeder et al. 2002]) is an open source, freely available visualization software including many sophisticated
visualization methods for scalar, vector, and tensor ﬁelds. They are implemented as a C++ class library. The usage
is very simple: Choose the modules in the library and combine them by the so called “VTK pipeline”, then you will
get a full set of high performance visualization program without a detailed knowledge of the visualization algorithm
and OpenGL. It is an attractive idea for CAVE users to integrate VTK into CAVE applications ([Leigh et al. 1998]).

III.

INTEGRATING VTK INTO VFIVE

Many visualization methods of VTK are based on the polygon-based rendering. This means that each visualization
module converts the input ﬁeld data to a set of numerous numbers of discrete polygons. The polygonal data consists
of the vertex positions, vertex colors, and the normal vectors. In order to combine VTK with VFIVE, we need to
show the VTK polygons in the CAVE’s 3-D virtual space. However, to use VTK with the CAVELib is not easy due
to the design mismatch between these two libraries.

To use VTK in the CAVE, Rajlich (1998) created a software “vtkActorToPF” to pull out polygonal data of VTK
and render them using IRIS Performer (or OpenGL Performer). Hall (1999) created “vtk2CAVE”, in which the
display processes access the vtkActor copied in shared memory and draw its polygonal data by OpenGL. Shamonin
(2002) created a library “VtkCave”, which makes it possible to create a CAVE application with VTK.

We took another approach to combine VTK into our CAVE program, VFIVE. Basically, we have followed the idea
of “vtkActorToPF”, but we did not want to use IRIS Performer because VFIVE is written directly on OpenGL,
without IRIS Performer. Therefore, we have revised VFIVE in such a way that the application computation process
can make the polygonal data by using VTK and send them via hard disk drive to the display processes, and the display
processes can receive the output polygonal data of VTK and draw them by OpenGL. In this way we have succeeded to
integrate important polygon-based visualization methods of VTK, for example, Contour Lines and Stream Surfaces.
It is easy to integrate other VTK modules into VFIVE.

Here we show the power of revised VFIVE enhanced by VTK in the applications to MHD simulations. Figure 2(a)
shows a VTK visualization of a geodynamo simulation data by Stream Surfaces. This method visualizes a 3-D vector
ﬁeld by ribbon-like surfaces created by multiple ﬁeld lines started from a line segment. The colors of the ribbons
indicate the magnitudes of the vector ﬁeld. Figure 2(b) shows another VTK visualization, Stream Tubes. This method
also visualizes a 3-D vector ﬁeld by a ﬁeld line wrapped by a tube by which more information than a simple 1-D ﬁeld
line can be conveyed. The colors of the tube indicate the magnitudes of the vector ﬁeld and its radius depends on the
vector magnitude. Figure 2(c) shows Contour Lines of the electric current magnitude of a solar coronal simulation.
This is also a VTK visualization method. Figure 3 shows a mixed application of the two VTK visualization methods,
Stream Surfaces and Contour Lines.

We have integrated VTK into our virtual reality software VFIVE for 3-D, interactive visualization in the CAVE
system. The purpose of this improvement is to reduce the hurdle to add a new visualization function into VFIVE.

IV. CONCLUSIONS

3

(a) Stream Surfaces of the ﬂow velocity of a geodynamo simulation.

(b) Stream Tubes of the ﬂow velocity of a
FIG. 2:
geodynamo simulation. (c) Contour Lines of the magnitude of the electric current and Field Lines of the ﬂow velocity of a solar
coronal simulation.

FIG. 3: Stream Surfaces of the ﬂow velocity and Contour Lines of the pressure of the Earth’s magnetosphere simulation.

VTK was chosen because of its rich and sophisticated visualization methods.

We believe that the development of an easy-to-use and easy-to-extend software for VR visualization in the CAVE,

like our VFIVE, is important for simulation science in future.

We would like to thank Prof. T. Ogino for providing us the simulation data of the Earth’s magnetosphere.

Acknowledgments

[Cruz-Neira et al. 1993] Cruz-Neira, C., Sandin, D. J. and DeFanti, T. A. 1993 Proc. SIGGRAPH ’93 Computer Graphics Conf.,

135.

[Hall 1999] Hall, M. 1999 “vtk2CAVE” Translator,

http://www.cave.vt.edu/people/shore/vtk/vtk2CAVE/

[Kageyama et al. 1999] Kageyama, A., Tamura, Y. and Sato, T. 1999 Trans. Virtual Reality Soc. Japan. 4, 717.
[Kageyama et al. 2000] Kageyama, A., Tamura, Y. and Sato, T. 2000 Progress Theor. Phys. Suppl. 138, 664.
[Leigh et al. 1998] Leigh, J., Rajlich, P., Stein, R., Johnson, A. E., DeFanti T. A. 1998 CDROM proceedings of IEEE Visual-

izatonf98

[Rajlich 1998] Rajlich, P. 1998 “vtkActorToPF” Translator,
http://brighton.ncsa.uiuc.edu/˜prajlich/vtkActorToPF/

[Shamonin 2002] Shamonin, D. 2002 “VtkCave” library,

http://staﬀ.science.uva.nl/˜dshamoni/myprojects/VtkCave.html

[Shroeder et al. 2002] Shroeder, W., Martin, K. and Lorensen, B. 2002 The Visualization Toolkit, 3rd Edition. Kitware Inc.,

New York.

