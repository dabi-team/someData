Virtual Reality Gaming on the Cloud:
A Reality Check

Sihao Zhao‡, Hatem Abou-zeid∗, Ramy Atawia∗,
Yoga Suhas Kuruba Manjunath‡, Akram Bin Sediq∗, Xiao-Ping Zhang‡
‡Department of Electrical, Computer and Biomedical Engineering, Ryerson University, Toronto, ON, Canada
*Ericsson Canada, Ottawa, Canada

1
2
0
2

p
e
S
1
2

]
P
S
.
s
s
e
e
[

1
v
4
1
1
0
1
.
9
0
1
2
:
v
i
X
r
a

Abstract—Cloud virtual reality (VR) gaming trafﬁc character-
istics such as frame size, inter-arrival time, and latency need to
be carefully studied as a ﬁrst step toward scalable VR cloud
service provisioning. To this end, in this paper we analyze the
behavior of VR gaming trafﬁc and Quality of Service (QoS)
when VR rendering is conducted remotely in the cloud. We ﬁrst
build a VR testbed utilizing a cloud server, a commercial VR
headset, and an off-the-shelf WiFi router. Using this testbed, we
collect and process cloud VR gaming trafﬁc data from different
games under a number of network conditions and ﬁxed and
adaptive video encoding schemes. To analyze the application-
level characteristics such as video frame size, frame inter-arrival
time, frame loss and frame latency, we develop an interval
threshold based identiﬁcation method for video frames. Based
on the frame identiﬁcation results, we present two statistical
models that capture the behaviour of the VR gaming video
trafﬁc. The models can be used by researchers and practitioners
to generate VR trafﬁc models for simulations and experiments
- and are paramount in designing advanced radio resource
management (RRM) and network optimization for cloud VR
gaming services. To the best of the authors’ knowledge, this
is the ﬁrst measurement study and analysis conducted using a
commercial cloud VR gaming platform, and under both ﬁxed
and adaptive bitrate streaming. We make our VR trafﬁc data-
sets publicly available for further research by the community.

Index Terms—virtual reality (VR), cloud gaming, network

trafﬁc, video frame, statistical model

I. INTRODUCTION

Virtual reality (VR) is becoming popular in a variety of
applications such as gaming, healthcare and education [1]–
[3]. In the VR gaming sector, the user needs a head mounted
display (HMD) device or headset and controllers to build an
immersive and interactive gaming environment. VR games
require intensive computational resources to render and display
the video frames in a short motion-to-photon time so that the
players can obtain a real-time immersive experience. This is
challenging for wearable headsets, that are constrained by size,
weight and power consumption. As an alternative solution,
headset products such as Valve Index [4], Oculus Rift [5],
HTC Vive [6], and Sony PlayStation VR [7] enable a gaming
PC with dedicated graphic processing units (GPUs) to run
the VR games and stream the rendered videos to the headset

This work is supported in part by the Ontario Center of Innovation (OCI)
ENCQOR 5G development program and the Natural Sciences and Engineering
Research Council of Canada (NSERC) under Grant RGPIN-2020-04661.
(Corresponding author: Xiao-Ping Zhang, e-mail: xzhang@ryerson.ca)

via cable or wireless connection. More recently, the latest
product of Oculus Quest 2 HMD offers the capability of
both standalone game running and remote VR rendering via
wireless connectivity to the network [5].

By ofﬂoading the rendering task to a gaming PC, the burden
of the headset is relieved. However, a higher data transfer rate
is required to transmit the VR video frames, which are much
larger than typical videos, to the headset. This data transfer
link can be the Internet, local cable network, WiFi and USB,
among others. In the case when the gaming PC is connected
to the headset via the Internet, it is referred to as cloud VR
gaming. Nowadays, there are a number of cloud VR gaming
service providers such as Shadow [8], Maximum Settings [9]
and Paperspace [10]. They provide dedicated gaming PCs with
several hundreds of mega bit per second Internet access.

In the existing literature of the cloud gaming testbeds,
Xue et al. investigated the performance of the CloudUnion
gaming service and found that there was large queuing delay,
conservative video rate recommendations were adopted, and
the difference between UDP and TCP data transmission [11].
Huang et al. developed a cloud gaming platform, which offered
shorter frame processing delay compared with other cloud
gaming services [12]. Chen et al. measured the latency of two
cloud gaming services and found over 100 ms delay for both
of them [13]. These studies only consider the ordinary PC
games rather than VR games.

There are few recent studies on the VR gaming trafﬁc. Li
et al. build a local VR gaming testbed based on the ALVR
software to evaluate the impact of latency, bandwidth and
packet loss on the the quality of service (QoS) and quality
of experience (QoE) [14]. The study in [15] aims to reduce
the latency in a wireless VR system, and a testbed is developed
to evaluate the end-to-end latency and frame loss. However,
they only emulate the cloud gaming scheme by using local
work stations.

In this paper, we aim to understand the behavior of VR
gaming trafﬁc and QoS when VR rendering is conducted
remotely in the cloud. To this end, we have implemented
a testbed using a commercial cloud gaming server [10], the
Oculus Quest 2 (one of the latest VR headsets) [5], and
an off-the-shelf 5GHz WiFi router. Using this testbed, we
collect and process cloud VR gaming trafﬁc data from different
games under a number of network conditions and ﬁxed and

 
 
 
 
 
 
adaptive video encoding schemes. We also capture and identify
all the trafﬁc ﬂows involved in the VR gaming application
including video, audio, and control data ﬂows. To analyze
the application-level characteristics such as video frame size,
frame inter-arrival time, frame loss and frame latency, we
develop an interval threshold based identiﬁcation method for
video frames. We ﬁnd that adaptive bit rate encoding provides
a more stable gaming performance under stricter bandwidth
throttling than ﬁxed bit rates. Based on the frame identiﬁcation
results, we present
two statistical models that capture the
behaviour of the VR gaming video trafﬁc. The models can be
used by researchers and practitioners to generate VR trafﬁc
models for simulations and experiments - and are helpful
in designing advanced radio resource management (RRM)
and network optimization for cloud VR gaming services. In
summary the contributions of this paper are:

• We measure and analyze the impact of limited bandwidth
on VR game video frame metrics and latency using a
commercial cloud gaming server under different video
encoding and bit rate settings.

• We show that the VR video frame size and inter-arrival
time can be modeled as loglogistic and Burr distributions,
respectively. These mathematical representations of VR
frames have not been presented in literature using traces
collected from a commercial cloud testbed.

• We develop an interval threshold-based method to iden-
tify the application-level video frame characteristics using
only the raw data packets. This avoids the need for packet
decoding or deep packet inspection.

• Our VR trafﬁc data and performance measurements under
different data rate throttling settings at the WiFi router,
with both ﬁxed and adaptive video bit rate transmission
schemes, are publicly available for further analysis by the
research community [16].

II. TESTBED IMPLEMENTATION

A. Cloud Gaming Testbed

As shown in the top left in Fig. 1, we use the Paperspace
cloud PC to run the VR games. The cloud PC is equipped
with Intel Xeon E5-2623 CPU with 30 GB RAM, and Nvidia
P4000 GPU with 8 GB memory, which is sufﬁcient for VR
game rendering. The Internet access bandwidth is 120 Mbps.
The gateway device is a 5 GHz band WiFi router, which offers
up to 866 Mbps wireless bandwidth. The Internet is connected
to the router through cable. The VR headset used is the latest
Oculus Quest 2 with 256 GB storage space and connected
directly to the WiFi gateway through 5 GHz frequency band.
We install Virtual Desktop software [17] on the cloud PC.
The client is installed at the headset to transmit and receive VR
gaming data. Wireshark [18] is installed on the cloud server
to capture all the communication ﬂows to and from the server.

B. Local Gaming Setup

We also setup a local VR gaming system to collect trafﬁc
and latency measurements for performance comparison to the
cloud setup. This is illustrated in Fig. 1 with the local server

Fig. 1. Cloud and local gaming diagram

connection. A laptop with i7 9750H CPU, 32GB RAM, and
Nvidia Quadro T1000 GPU with 4GB memory is used to run
the VR games locally. The laptop is connected to the LAN
port on the WiFi router by cable and supports 1000 Mbps
bandwidth.

As in the cloud setup, we also install Virtual Desktop
software on the local laptop to work with the client on the
headset for gaming data streaming. We use Wireshark on the
local laptop to capture the gaming trafﬁc.

C. VR Games for Test

We use two VR games, namely Beat Saber and Steam VR
Home for test. Beat Saber is a sports game with real-time
control and fast moving objects in the ﬁeld of view. The Steam
VR Home is a relatively stationary room scene with a few
moving objects such as birds and clouds.

D. Streaming Settings

The main parameters set in the Virtual Desktop software are
“90 Hz” frame rate, “High” graphics quality, and “40 Mbps”
streaming bit rate limit. Enabling the adaptive video bit rate
setting will result in a varying rate below the maximum based
on the available bandwidth and latency. On the other hand,
disabling the adaptive video bit rate results in a ﬁxed streaming
rate at the maximum value of 40 Mbps. We use Wireshark to
record about 30 s of trafﬁc data from the two VR games with
both ﬁxed and adaptive video bit rate setting, in both the local
and cloud gaming cases.

III. VR GAMING TRAFFIC FLOWS

We have identiﬁed three port pairs used by Virtual Desktop
between the cloud/local server and the VR headset. The ﬁrst
port pair is used to transfer video frame data, and has the
largest data volume. The other two port pairs are used for
audio data transfer between the server and the headset, and
for control data ﬂow from the headset to the server as well
as their acknowledgments. We will analyze these three data
ﬂows with a focus on the video ﬂow.

A. Video Flow

We observe that most of the packets in both the cloud and
local streaming cases have a length of 1514 bytes. There is a
series of the 1514-byte packets followed by a smaller packet.
All these packets in such a group are transmitted at the same
instant. There are usually two groups of these packets that
are sent successively. We infer that these two groups are for

Internet5GHz WiFiCloud server Headset Control data processingGame renderingPanorama displayControl data collectionVideo/audio dataControl/audio dataVR gamesVirtual DesktopWireshark120 Mbps866 MbpsVirtual Desktop ClientdownlinkuplinkLocal serverVR gamesVirtual DesktopWiresharkthe views on left and right eyes, and they belong to the same
frame. Since H.264 or HEVC encoding is used, we also infer
that the seldom groups with larger total sizes are I or P-frames
and the other smaller groups are B-frames. The probability
density function (PDF) of the downlink or server-to-headset
video packet transmission interval for the VR game Beat Saber
are shown in Fig. 2.

The data trafﬁc from the headset to the server or uplink
contains only ACK packets. For both cloud and local cases,
the packet size remains constant at 60 byte, and the data rate
is lower than 0.1 Mbps.

B. Control Flow

In the uplink of this data ﬂow, the headset sends control
data from both the headset and the controllers to the server.
In the downlink, the server sends ACK packets to the headset.
The uplink packets have a constant size of 358 byte and a data
rate smaller than 0.4 Mbps. The downlink packets are ACK
packets with ﬁxed size of 54 byte.

C. Audio Flow

In this ﬂow, there are audio data packets in both the uplink
and downlink. The server sends 1222-byte audio packets to the
headset in the downlink and the headset sends 60-byte ACKs
in the uplink. The headset sends 390-byte packets to the server
and the server sends 54-byte ACKs in the downlink. The data
rates of the uplink and the downlink are about 0.33 Mbps and
1.57 Mbps, respectively.

IV. VR VIDEO FRAME IDENTIFICATION METHOD

Among the three VR gaming ﬂows, we are most interested
in the video trafﬁc stream. It has a large data rate and volume
and affects the user experience the most. In this section, we
propose a method to identify the video frame size and inter-
arrival time. Then, based on the identiﬁed frames, we further
compute the video frame loss and frame latency.

A. Video Frame Size and Inter-arrival Time Identiﬁcation

Without decoding the trafﬁc data, we are not able to obtain
knowledge on the application-level information such as VR
frame sizes and inter-arrival time of the frames. However, by
observing the trafﬁc, we infer that the data packets within
one frame are temporally close. We have observed that there
are several 1514-byte packets along with a smaller packet
transferred at the same time, and there are two such successive
sequences, which are temporally close to each other. We
therefore infer that these two successive sequences of packets
form a VR video frame. For both the cloud and local gaming
cases, the trafﬁc patterns are found to be similar.

As can be seen from the histogram of the packet interval
in Fig. 2, a lot of packets in both cloud and local cases have
zero interval. These are the data packets transmitted at the
same instant. In the same ﬁgure, the second largest peak from
the left represents the interval between two packet sequences
with several 1514-byte packets followed by a smaller packet.
The other two lower peaks on the right represent the intervals

Fig. 2. PDF of video data packet transmission interval for local and cloud
streaming (Beat Saber). The actual peak value at 0 ms is over 0.9, but is
limited by the ﬁgure scale.

between successive video frames. The left two higher peaks
and the right two lower peaks represent inner and inter frame
intervals, respectively. They have a clear gap between 3 and 5
ms. The other game show similar patterns. This will help us
to identify the video frames from the raw packets.

Based on the above observation and analysis, we use an
interval threshold, denoted by ∆tthr to cluster the packets that
are close to each other into one “video frame”. Speciﬁcally,
we treat the successive packets that have an interval shorter
than ∆tthr = 3 ms as within the same video frame. In this
way, we are able to identify each frame and estimate the frame
size. The frame inter-arrival time is estimated by subtracting
the transmission times of the very ﬁrst two data packets in
two successive frames.

B. Frame Loss Rate

Note that the trafﬁc data is collected at the server side.
Normally, the server receives ACK packets if the headset
receives one or more video packets. If the server does not
receive any ACK, we know that
the video frame is not
transferred successfully. Based on the identiﬁcation of frames,
we try to ﬁnd the ACK packets for every identiﬁed video
frame. Particularly, if there is no ACK for a certain frame,
then we treat this frame as lost. Therefore, the frame loss rate
is expressed as

Frame Loss Rate =

Number of Frames without ACK
Total Number of Frames

.

C. Frame Latency

Based on the frame identiﬁcation, we compute the interval
between the transmission of the ﬁrst data packet and the
reception of the last ACK packet in one frame, i.e.,

Frame Latency =
(RX Time of last ACK) − (TX Time of 1st data packet).

V. VR VIDEO FRAME CHARACTERIZATION WITH FIXED
BIT RATE

A. Metrics without Data Rate Limit

We use the method presented in Section IV-A to iden-
tify video frame size and inter-arrival time. The cumulative

051015Packet interval (ms)00.0050.010.015PDFLocalCloudFig. 3. Identiﬁed video frame metrics for local and cloud cases (Beat Saber).
(a) CDF of identiﬁed frame size. (b) Identiﬁed frame latency vs. time. (c) CDF
of identiﬁed frame inter-arrival time. (d) CDF of identiﬁed frame latency.

Fig. 4. PDF of Identiﬁed video frame size and inter-arrival time for cloud
streaming under data rate limit (Beat Saber, ﬁxed video bit rate setting).

distribution functions (CDFs) for the frame size and inter-
arrival time in both local and cloud cases are shown in Fig.
3 (a) and (c). We ﬁnd that the identiﬁed frame sizes have the
same statistical properties for both cloud and local cases. The
frame inter-arrival time of the local case is consistent with
the 90 Hz setting (11.1 ms frame interval). This result veriﬁes
the correctness of our method to identify video frames. The
data from the other game, Steam VR Home shows similar
patterns. The identiﬁed frame size, data rate and inter-arrival
time are also shown in the ﬁrst three “Normal” rows in Table
I, respectively. The data rates are lower than the 40 Mbps
streaming bit rate setting. This may be caused by the different
internal frame generation mechanisms within different games.
Using the method in Section IV-B, we compute the frame
loss rates of the two games. The results are shown in the
“Frame loss rate - Normal” row in Table I. We can see that
the local case has very small frame loss rate, indicating a stable
network. The loss rate for the cloud case is slightly larger, but
is still a small number. It does not affect the quality of gaming
experience.

The video frame latency results from the method in Section
IV-C are illustrated in Fig. 3 (b) and (d). The cloud gaming
trafﬁc data has on average 21.4 ms larger latency than the
local gaming does. Results for both games in both local and
cloud cases are listed in the “Avg. frame latency - Normal”
row in Table I. This demonstrates a greater latency in cloud
VR video streaming as expected.

B. Metrics with Data Rate Limit

We apply different data rate throttling by setting the WiFi
router’s data rate limit to 54, 40.5, and 27 Mbps. At the same
time, we keep the streaming bit rate setting of Virtual Desktop
as ﬁxed to 40 Mbps. We use the same method to identify the
video frame size, frame inter-arrival time, frame loss rate, and
frame latency as summarized in Table I.

The probability density function (PDF) curves of the iden-
tiﬁed video frame size and the frame inter-arrival time for
the cloud streaming case with ﬁxed video bit rate setting are
shown in Fig. 4. We can see that with a stricter data rate

TABLE I
VR TRAFFIC CHARACTERISTICS WITH FIXED VIDEO BIT RATE

Metrics

Avg. frame
size (byte)

Data rate
(Mbps)

Avg. frame
inter-arrival
time (ms)

Frame loss
rate (%)

Avg. frame
latency (ms)

Data Rate
Limit (Mbps)
Normal
54
40.5
27
Normal
54
40.5
27
Normal
54
40.5
27
Normal
54
40.5
27
Normal
54
40.5
27

Beat Saber

Local
58087
57613
58146
49228
39.76
38.38
32.66
21.83
11.1
11.5
13.6
17.2
0.04
0.03
0.20
0.72
6.2
18.2
55.3
293.9

Cloud
58420
57820
57519
49602
39.04
37.04
31.52
21.85
11.4
11.9
13.9
17.3
0.75
5.06
14.96
28.30
27.6
36.4
63.3
280.0

Steam VR Home
Cloud
Local
58300
57957
58394
58933
58228
57591
43737
51567
33.46
34.37
29.26
33.30
29.70
30.48
21.87
21.80
13.3
12.9
15.2
13.5
15.0
14.6
15.3
18.0
0.75
0.04
1.29
0.04
10.56
0.09
32.51
1.78
31.9
5.9
35.4
14.3
43.1
29.2
279.4
287.9

Note: The metrics are computed by the video frame identiﬁcation algorithm.
“Normal” represent no limitation on the data rate.

limit, the actual streaming data rate is decreasing. When the
throttling is down to 27 Mbps, the video packets from various
frames are queued and packets are dropped. In this setup the
delay is very high and the VR service is not usable. The two
tested games under both cloud and local case show similar
patterns in frame size and inter-arrival time.

The frame latency results of Steam VR Home in the cloud
streaming case without a data rate limit are shown in Fig. 5
(a1) and (a2). We can see that the video frame latency and
frame loss rate (the last column in Table I) increase when
we apply tighter data rate throttling. With 40.5 Mbps limit,
the actual streaming data rate drops considerably below the
40 Mbps setting, causing discontinuity in video frames and
perceivable latency. When the data rate limit is 27 Mbps, the
identiﬁed frame loss rate is up to 32.51% and the latency is
around 280 ms, which causes an unacceptable VR gaming
experience.

00.511.522.5Identified frame size (byte)(a)10500.51CDFLocal. mean: 58086Cloud. mean: 584200204060Identified frame inter-arrival time (ms)(c)00.51CDFLocal.  mean: 11.1msCloud.  mean: 11.4ms0102030Time (s)(b)010203040Identified frame latency (ms)Local.Cloud.020406080100Identified frame latency (ms)(d)00.51CDFLocal. mean:6.2Cloud. mean:27.600.20.40.60.811.21.41.61.82Identified frame size (byte)10500.020.040.06PDFNormal. mean: 58420, data rate:39.04Mbps54Mbps. mean: 57820, data rate:37.04Mbps40.5Mbps. mean: 57519, data rate:31.52Mbps51015202530Identified frame inter-arrival time (ms)00.050.1PDFNormal.  mean: 11.4ms54Mbps.  mean: 11.9ms40.5Mbps.  mean: 13.9msTABLE II
VR TRAFFIC CHARACTERISTICS WITH ADAPTIVE VIDEO BIT RATE

Metrics

Avg. frame
size (byte)

Data rate
(Mbps)

Avg. frame
inter-arrival
time (ms)

Frame loss
rate (%)

Avg. frame
latency (ms)

Data Rate
Limit (Mbps)
Normal
54
40.5
27
Normal
54
40.5
27
Normal
54
40.5
27
Normal
54
40.5
27
Normal
54
40.5
27

Beat Saber

Local
57376
53052
40668
29103
39.46
36.09
27.32
19.13
11.1
11.2
11.4
11.6
0.03
0.07
0.03
0.07
6.8
14.7
16.9
23.1

Cloud
57719
46976
39093
24808
39.58
31.55
26.10
18.46
11.1
11.4
11.4
11.8
1.56
1.91
2.24
5.12
31.9
32.3
34.1
37.5

Steam VR Home
Cloud
Local
57943
57896
48771
52403
38985
40888
28468
29488
32.62
33.90
28.40
29.53
21.65
22.85
15.83
16.00
13.6
13.0
13.1
13.5
13.7
13.7
13.7
14.1
1.06
0.04
3.05
0.04
3.53
0.04
4.78
0.04
32.0
6.1
36.4
13.2
35.8
13.7
38.5
15.3

time have asymmetric distributions with heavier tails on the
right side, which is similar to the feature of loglogistic and
Burr distributions.

We model the video frame size as loglogistic distribution,

which has the general form of PDF written as

loglogistic: f (x) =

exp ( ln x−µ

σ

)

1 + exp ( ln x−µ

σ

(cid:16)

σx

(cid:17)2 , x ≥ 0,
)

(1)

where parameter µ is the mean of the logarithmic values and
σ is the scale parameter [20]. The hump of the PDF curve
will be lower and wider in the +x direction with a larger µ.
A larger σ will reduce the height of the hump and make both
the left and right tails heavier.

We use the Burr distribution to model the video frame inter-

arrival time. The PDF of Burr distribution is

Burr: f (x) =

kc
α

(cid:0) x
α

(cid:0)1 + (cid:0) x

α

(cid:1)c−1
(cid:1)c(cid:1)k+1 , x ≥ 0,

(2)

where c and k are the shape parameters and α is the scale
parameter [20]. The peak of the curve becomes higher and
the right tail becomes heavier when c and k increase. Given
a larger α, the peak will be shorter and the curve will move
toward +x.

The computed distribution parameters for frame size and
inter-arrival time with different data rate limits in both local
and cloud cases are listed in Table III. As an example, we
show in Fig. 6 the ﬁtted PDF curves and the corresponding
identiﬁed parameters of frame size and inter-arrival time for
Beat Saber in the cloud case with adaptive video bit rate. The
coefﬁcient of determination R2 [21] is also larger than 0.95 in
the ﬁgure. We can see that the PDF curves of the loglogistic
and Burr distributions ﬁt the data well, demonstrating that the
statistical models represent the real trafﬁc behavior.

Fig. 5.
Identiﬁed video frame latency under different data rate throttling
(Steam VR Home, cloud streaming). (a1) and (a2): Fixed video bit rate
setting, (b1) and (b2): Adaptive video bit rate setting. “Normal” stands for no
throttling.

VI. VR VIDEO FRAME IDENTIFICATION AND MODELING
WITH ADAPTIVE BIT RATE

A. Identiﬁed Metrics

We change the setting of Virtual Desktop to “Adaptive bit
rate” with the maximum unchanged at 40 Mbps. We collect
data in different throttling conditions for both local and cloud
gaming schemes. The video frame latency and frame loss rate
of Steam VR home in the cloud case are shown in Fig. 5 (b1)
and (b2). We can see that compared with the ﬁxed bit rate
setting, the frame latency does not change much with varying
data rate limit. Especially for 27 Mbps throttling, the frame
latency does not surge as much as in the ﬁxed video bit rate
case. All the computed metrics are listed in Table II.

As can be seen from Table II, similar to the ﬁxed video bit
rate case in Section V, the frame size and data rate decreases
with reducing data rate limit. The inter-arrival time remains
stable for all cases, showing the adaptive adjustment on the
frame size according to the available data rate. The frame loss
rate remains stable in the local case for both games, and is
much smaller than the ﬁxed bit rate case for both games in
both the local and cloud schemes as shown in Table I. In the
cloud case for both games, the frame loss is larger than that in
the local case, and is increasing with smaller data rate limit.
The frame latency also remains a small number even with
low data rate. This results in a smooth game play with lower
image quality even in the stringent 27 Mbps throttling case.
From the player’s perspective, the game is running smoothly
with unnoticeable latency and frame loss although the graphic
quality is lowered.

B. Statistical Modeling

We present the statistical models for the identiﬁed frame
size and inter-arrival time. Since in practice, there are limita-
tions in security and privacy, it is important to model the trafﬁc
using limited features [19]. With these models, researchers are
able to generate the VR video trafﬁc by simulation.

By observing the PDF curves shown by the solid lines in
Fig 6, we can see that both the frame size and inter-arrival

0102030Time (s)(a1)0100200300400Identified frame latency (ms)0100200300400Identified frame latency (ms)(a2)00.51CDF0102030Time (s)(b1)0100200300400Identified frame latency (ms)406080100120140Identified frame latency (ms)(b2)00.51CDFNormal54Mbps40.5Mbps27Mbpshelpful in VR trafﬁc simulation and are useful in real-world
applications such as RRM and network optimization. Our VR
trafﬁc data-sets are available at [16].

We ﬁnd that varying latency and data rate limit are chal-
lenging factors for the quality of cloud VR gaming services.
Therefore, future cloud VR gaming servers need to have a
more resilient design to reduce the latency and combat the
instability of the Internet, so as to offer better visual quality
and immersive experience to VR players.

In the future, we will investigate the relation among the
trafﬁc characteristics such as the joint distribution of the frame
size and inter-arrival
time, study more cases with diverse
setting combinations, such as more different games, adaptive
throttling, and varying user motion, and validate the frame size
and inter-arrival time models that we developed in these cases.

REFERENCES

[1] M. S. Elbamby, C. Perfecto, M. Bennis, and K. Doppler, “Toward low-
latency and ultra-reliable virtual reality,” IEEE Network, vol. 32, no. 2,
pp. 78–84, 2018.

[2] Z. Lai, Y. C. Hu, Y. Cui, L. Sun, N. Dai, and H.-S. Lee, “Furion:
Engineering high-quality immersive virtual reality on today’s mobile
devices,” IEEE Trans. Mobile Comput., vol. 19, no. 7, pp. 1586–1602,
2019.

[3] Y. Sun, Z. Chen, M. Tao, and H. Liu, “Communications, caching, and
computing for mobile virtual reality: Modeling and tradeoff,” IEEE
Trans. Commun., vol. 67, no. 11, pp. 7573–7586, 2019.

[4] “Valve Index,” https://www.valvesoftware.com/, accessed: 2021-04-10.
[5] “Oculus,” https://www.oculus.com/, accessed: 2021-04-10.
[6] “HTC Vive,” https://www.vive.com/, accessed: 2021-04-10.
[7] “Sony Play Station,” https://www.playstation.com/, accessed: 2021-04-

19.

[8] “Shadow,” https://shadow.tech/, accessed: 2021-04-20.
[9] “MaximumSettings,” https://maximumsettings.com/, accessed: 2021-04-

20.

[10] “Paperspace,” https://paperspace.com/, accessed: 2021-05-20.
[11] Z. Xue, D. Wu, J. He, X. Hei, and Y. Liu, “Playing high-end video
games in the cloud: A measurement study,” IEEE Trans. Circuits Syst.
Video Technol., vol. 25, no. 12, pp. 2013–2025, 2014.

[12] C.-Y. Huang, C.-H. Hsu, Y.-C. Chang, and K.-T. Chen, “Gamingany-
where: An open cloud gaming system,” in Proceedings of the 4th ACM
multimedia systems conference, 2013, pp. 36–47.

[13] K.-T. Chen, Y.-C. Chang, P.-H. Tseng, C.-Y. Huang, and C.-L. Lei,
“Measuring the latency of cloud gaming systems,” in Proceedings of
the 19th ACM international conference on Multimedia, 2011, pp. 1269–
1272.

[14] Y.-C. Li, C.-H. Hsu, Y.-C. Lin, and C.-H. Hsu, “Performance mea-
surements on a cloud VR gaming platform,” in Proceedings of the
1st Workshop on Quality of Experience (QoE) in Visual Multimedia
Applications, 2020, pp. 37–45.

[15] L. Liu, R. Zhong, W. Zhang, Y. Liu, J. Zhang, L. Zhang, and
M. Gruteser, “Cutting the cord: Designing a high-quality untethered vr
system with low latency remote rendering,” in Proceedings of the 16th
Annual International Conference on Mobile Systems, Applications, and
Services, 2018, pp. 68–80.
trafﬁc
vr-gaming-network-trafﬁc.

https://www.kaggle.com/szhao2020/

[16] “VR

data,”

[17] “Virtual Desktop,” https://www.vrdesktop.net/, accessed: 2021-04-10.
[18] “Wireshark,” https://www.wireshark.org/, accessed: 2021-04-10.
[19] J. Navarro-Ortiz, P. Romero-Diaz, S. Sendra, P. Ameigeiras, J. J. Ramos-
Munoz, and J. M. Lopez-Soler, “A survey on 5G usage scenarios and
trafﬁc models,” IEEE Commun. Surveys Tuts., vol. 22, no. 2, pp. 905–
929, 2020.

[20] P. R. Tadikamalla, “A look at

the Burr and related distributions,”
International Statistical Review/Revue Internationale de Statistique, pp.
337–344, 1980.

[21] N. J. Nagelkerke et al., “A note on a general deﬁnition of the coefﬁcient
of determination,” Biometrika, vol. 78, no. 3, pp. 691–692, 1991.

Fig. 6. Statistical modeling for frame size and inter-arrival time (Beat Saber,
cloud streaming with adaptive video bit rate). “loglogistic” and “Burr” in the
legend are names of the ﬁtted distributions, followed by R2 and corresponding
parameters.

TABLE III
STATISTICAL MODEL PARAMETERS OF VR VIDEO TRAFFIC

Game

Beat
Saber

Steam
VR
Home

Data Rate
Limit (Mbps)*
Normal/L
54/L
40.5/L
27/L
Normal/C
54/C
40.5/C
27/C
Normal/L
54/L
40.5M/L
27/L
Normal/C
54/C
40.5/C
27/C

Frame Size
σ
0.11
0.10
0.12
0.14
0.13
0.12
0.13
0.13
0.12
0.17
0.16
0.16
0.19
0.20
0.25
0.19

µ
10.95
10.86
10.59
10.24
10.94
10.73
10.54
10.22
10.96
10.83
10.58
10.25
10.91
10.74
10.47
10.91

Inter-arrival Time

α
9.72
9.41
9.23
9.12
10.56
10.38
9.82
9.78
12.35
12.97
12.98
13.17
13.27
12.10
12.82
12.34

c
21.29
21.91
25.22
23.97
19.21
26.11
28.88
29.49
39.47
12.49
26.14
33.48
24.91
46.94
27.87
30.96

k
0.33
0.26
0.20
0.19
0.61
0.38
0.24
0.21
0.39
0.79
0.55
0.39
0.76
0.26
0.44
0.30

Note: * “/L” and “/C” represent the local and cloud streaming cases, respec-
tively. The frame size and the inter-arrival time are modeled as loglogistic
(µ and σ) and Burr (α, c and k) distributions, respectively.

VII. CONCLUSION AND FUTURE WORK

Cloud gaming is becoming a promising technique, which
enables users to play high quality VR games without equipping
high end gaming PCs. We take a very ﬁrst step to understand
the cloud VR gaming trafﬁc data using a real commercial
cloud gaming server. We implement a testbed for trafﬁc
data collection based on the Paperspace cloud server,
the
Oculus Quest 2 VR headset, and an off-the-shelf WiFi router.
We analyze the cloud gaming trafﬁc data characteristics for
video, audio and control data ﬂows from different games, and
compare them with the local streaming scheme. We develop
a method to identify the application-layer video frames using
only the information from raw packets without decoding or
packet inspection. With the frame identiﬁcation result, we
evaluate the trafﬁc behaviors and ﬁnd that the adaptive bit
rate enables shorter latency and less frame loss and thus a
better gaming experience than the ﬁxed bit rate. We show that
the video frame size and inter-arrival time can be modeled
as loglogistic and Burr distributions, respectively, which are

0.511.52Identified frame size (byte)10500.020.040.060.08PDFNormal. mean: 57719, data rate:39.58MbpsFitted PDF: loglogistic, R2=0.97. =10.94 =0.1354Mbps. mean: 46976, data rate:31.55MbpsFitted PDF: loglogistic, R2=0.97. :10.73 :0.1240.5Mbps. mean: 39093, data rate:26.10MbpsFitted PDF: loglogistic, R2=0.97. :10.54 :0.1327Mbps. mean: 28480, data rate:18.46MbpsFitted PDF: loglogistic, R2=0.98. :10.22 :0.1351015202530Identified frame inter-arrival time (ms)00.050.1PDFNormal.  mean: 11.1msFitted PDF: Burr, R2=0.98. : 10.56 c: 19.21 k: 0.6154Mbps.  mean: 11.4msFitted PDF: Burr, R2=0.98. : 10.38 c: 26.11 k: 0.3840.5Mbps.  mean: 11.4msFitted PDF: Burr, R2=0.97. : 9.82 c: 28.88 k: 0.2427Mbps.  mean: 11.8msFitted PDF: Burr, R2=0.95. : 9.78 c: 29.49 k: 0.21