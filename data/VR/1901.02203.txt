Optimal Multi-Quality Multicast for 360 Virtual
Reality Video

Kaixuan Long, Chencheng Ye, Ying Cui
Shanghai Jiao Tong University, China

Zhi Liu
Shizuoka University, Japan

9
1
0
2

n
a
J

8

]
T
I
.
s
c
[

1
v
3
0
2
2
0
.
1
0
9
1
:
v
i
X
r
a

Abstract—A 360 virtual reality (VR) video, recording a scene
of interest in every direction, provides VR users with immersive
viewing experience. However, transmission of a 360 VR video
which is of a much larger size than a traditional video to
mobile users brings a heavy burden to a wireless network. In
this paper, we consider multi-quality multicast of a 360 VR
video from a single server to multiple users using time division
multiple access (TDMA). To improve transmission efﬁciency,
tiling is adopted, and each tile is pre-encoded into multiple
representations with different qualities. We optimize the quality
level selection, transmission time allocation and transmission
power allocation to maximize the total utility of all users under
the transmission time and power allocation constraints as well
as the quality smoothness constraints for mixed-quality tiles.
The problem is a challenging mixed discrete-continuous opti-
mization problem. We propose two low-complexity algorithms
to obtain two suboptimal solutions, using continuous relaxation
and DC programming, respectively. Finally, numerical results
demonstrate the advantage of the proposed solutions.

Index Terms—virtual reality, 360 video, multi-quality multi-

cast, convex optimization, difference of convex programming.

I. INTRODUCTION

A 360 virtual reality (VR) video is generated by capturing
a scene of interest in every direction at the same time using
omnidirectional cameras. A user wearing a VR headset (or
Head Mounted Display (HMD)) can freely watch the scene of
interest in any viewing direction at any time, hence enjoying
immersing viewing experience. VR has vast applications in
entertainment, education, medicine, etc. [1]. It is predicted
that the global market of VR related products will reach 30
billion USD by 2020 [2]. A 360 VR video is of a much larger
size than a traditional video. Thus, transmitting an entire 360
VR video brings a heavy burden to wireless networks. At any
moment, a user watching a 360 VR video is interested in
only one viewing direction, corresponding to one part of the
360 VR video, referred to as ﬁeld-of-view (FoV). Tiling is a
technique proposed to enable ﬂexible transmission of FoVs
and improve transmission efﬁciency of a 360 VR video [1],
[3]–[6]. Speciﬁcally, a 360 VR video is divided into smaller
rectangular segments of the same size, referred to as tiles,
and any FoV can be composed by a set of tiles. A VR user
currently watching one FoV may switch to another FoV in a
short time. To avoid view switch delay, the set of tiles covering

The work of Y. Cui was supported by NSFC grant 61401272 and grant
61521062. The work of Z. Liu was supported by JSPS KAKENHI Grant
JP16H02817 and JP18K18036 as well as National Institute of Informatics
(NII) open collaborative research fund FY2018.

a user’s current FoV and the FoVs that may be watched shortly
should be transmitted simultaneously.

Considering heterogenous channel conditions and limited
transmission resource, [7]–[10] pre-encode each tile into mul-
tiple representations with different quality levels and consider
quality adaptation in 360 VR video transmission. Speciﬁcally,
[7]–[9] consider multi-quality 360 VR video transmission in
single-user wireless networks. The proposed solutions in [7]–
[9] do not imply efﬁcient designs for multi-user wireless
networks. As far as we know, [10] is the only work that
considers multi-quality 360 VR video transmission in multi-
user wireless networks and exploits multicast opportunities to
improve transmission efﬁciency. In particular, [10] optimizes
the quality level of each transmitted tile to maximize the total
utility of all users, which reﬂects quality of experience (QoE)
of all users. The size of the optimization problem is unneces-
sarily large, as the modulation and coding scheme (reﬂecting
the quality level) of each tile is optimized separately, and
the proposed heuristic algorithm may not provide desirable
performance and complexity. In addition, the quality levels of
adjacent tiles may vary signiﬁcantly, leading to poor viewing
experience.

In this paper, we would like to address the above limi-
tations in multi-quality multicast for a 360 VR video in a
wireless network with a single server and multiple users.
Speciﬁcally, we divide the 360 VR video into tiles and pre-
encode each tile into multiple representations with different
qualities using HEVC or H.264. For each user, we deliver a
set of tiles that cover the user’s current FoV and the FoVs
that may be watched shortly. We partition the set of tiles to
be transmitted to users into subsets and multicast different
subsets of tiles to different groups of users using Time
Division Multiple Access (TDMA). We optimize the quality
level selection, transmission time allocation and transmission
power allocation for each subset of tiles to maximize the
total utility of all users under the transmission time and
power allocation constraints as well as the quality smoothness
constraints for mixed-quality tiles. Note that considering the
optimization for each subset of tiles instead of each tile can
reduce complexity signiﬁcantly, without loss of optimality.
In addition, note that considering the quality smoothness
constraints can effectively avoid large quality variations for
adjacent tiles, hence improving viewing experience. The prob-
lem is a challenging mixed discrete-continuous optimization
problem. We propose two low-complexity algorithms to obtain

 
 
 
 
 
 
2

(cid:23449)(cid:23468)(cid:23463)(cid:23464)(cid:23474)(cid:23395)(cid:23478)(cid:23479)(cid:23468)(cid:23479)(cid:23462)(cid:23467)(cid:23468)(cid:23473)(cid:23466)
(cid:23432)(cid:23463)(cid:23468)(cid:23479)(cid:23468)(cid:23473)(cid:23466)
(cid:23432)(cid:23473)(cid:23462)(cid:23474)(cid:23463)(cid:23468)(cid:23473)(cid:23466)

(cid:23449)(cid:23445)(cid:23395)(cid:23462)(cid:23460)(cid:23475)(cid:23479)(cid:23480)(cid:23477)(cid:23464)(cid:23395)(cid:23478)(cid:23484)(cid:23478)(cid:23479)(cid:23464)(cid:23472)

(cid:23447)(cid:23468)(cid:23471)(cid:23464)(cid:23463)(cid:23395)(cid:23475)(cid:23477)(cid:23474)(cid:23469)(cid:23464)(cid:23462)(cid:23479)(cid:23464)(cid:23463)(cid:23395)(cid:23414)(cid:23417)(cid:23411)(cid:23395)
(cid:23481)(cid:23468)(cid:23463)(cid:23464)(cid:23474)(cid:23395)(cid:23468)(cid:23473)(cid:23395)(cid:23463)(cid:23468)(cid:23465)(cid:23465)(cid:23464)(cid:23477)(cid:23464)(cid:23473)(cid:23479)(cid:23395)
(cid:23476)(cid:23480)(cid:23460)(cid:23471)(cid:23468)(cid:23479)(cid:23468)(cid:23464)(cid:23478)

(cid:23446)(cid:23464)(cid:23477)(cid:23481)(cid:23464)(cid:23477)

n

   1     2     3     4     5     6      7     8

1

2

3

4

m

(cid:23472)(cid:23480)(cid:23471)(cid:23479)(cid:23468)(cid:23462)(cid:23460)(cid:23478)(cid:23479)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23412)

(cid:23448)(cid:23478)(cid:23464)(cid:23477)(cid:23413)

Fig. 1: System model of multi-quality multicast of 360 VR video for 2 users.

two suboptimal solutions. Speciﬁcally, the ﬁrst suboptimal
solution is obtained by transforming the continuous relaxation
of the original problem into a convex problem and rounding
the optimal solution of the convex problem. The second
suboptimal solution is obtained by transforming the original
problem into a Difference of Convex (DC) programming
problem and providing a stationary point using a DC algorithm
[11]. The second suboptimal solution achieves a higher total
utility with a higher computational complexity than the ﬁrst
suboptimal solution. Finally, numerical results demonstrate the
advantage of the proposed suboptimal solutions. Note that this
work extends our previous work [1] on optimal single-quality
multicast for 360 VR video in TDMA systems. To the best of
our knowledge, this is the ﬁrst work providing low-complexity
optimization-based multi-quality multicast for 360 VR video
with quality smoothness guarantee.

II. SYSTEM MODEL

As illustrated in Fig. 1, we consider downlink transmission
of a 360 VR video from a single-antenna server (e.g., base
station or access point) to K (≥ 1) single-antenna users.
Let K , {1, ..., K} denote the set of user indices. Suppose
the locations of all users do not change (in the considered
timeframe). A user wearing a VR headset may be interested
in one viewing direction, i.e., the center of one rectangular
part of the 360 VR video, referred to as FoV, at sometime,
and freely turn to another viewing direction after a while. The
horizontal and vertical angular spans of each FoV are denoted
by Fh and Fv.

We consider tiling to enable ﬂexible transmission of nec-
essary FoVs and improve transmission efﬁciency of the 360
VR video. Speciﬁcally, the 360 VR video is divided into
M × N rectangular segments of the same size, referred to
as tiles, where M and N represent the numbers of segments
in each column and each row, respectively. The (m, n)-th
tile refers to the tile in the m-th row and n-th column.
Deﬁne M , {1, ..., M } and N , {1, ..., N }. Let Vh and
Vv denote the horizontal and vertical angular spans of each
tile. Considering heterogenous channel conditions of different
users and limited transmission resource, we pre-encode each
tile into L representations corresponding to L quality levels
using HEVC or H.264, as in Dynamic Adaptive Streaming
over HTTP (DASH), and will optimize the quality levels of

the tiles that will be transmitted. Let L , {1, ..., L} denote
the set of quality levels. For all l ∈ L, the l-th representation
of each tile corresponds to the l-th lowest quality. For ease of
exposition, assume that tiles with the same quality level have
the same encoding rate. Let Dl denote the encoding rate of
the l-th representation. We have D1 < D2 < ... < DL.

S

To avoid view switch delay, for each user, the set of tiles
that cover its current FoV and the FoVs that may be watched
shortly will be delivered. Let Φk denote the set of indices
of tiles transmitted to user k, and let Φ ,
k∈K Φk denote
the set of tiles transmitted to users. In order to make use of
multicasting opportunities and avoid redundant transmissions,
we divide Φ into I disjoint non-empty subsets Si, i ∈ I ,
{1, ..., I}, where for all i, j ∈ I, i 6= j, Si and Sj are for
different groups of users [1]. Let Ki and Ki = |Ki| denote
the set and the number of users in the i-th group, for all
i ∈ I. When Ki = 1, the server unicasts the tiles in Si to
the single user in Ki; when Ki > 1, the server multicasts the
tiles in Si to the users in Ki. Without loss of generality, we
refer to this transmission as multicast, although both unicast
and multicast may happen. Later, we shall see that the tile
sets Si, i ∈ I instead of tiles serve as optimization units,
enabling complexity reduction compared with [10], without
loss of optimality.

1,

in

Fig.

1: As

Example

illustrated

consider
transmission of a 360 VR video from a single-antenna
to 2 single-antenna users. K = 2, M = 4,
server
N = 8, Φ1={(1, 3),(2, 3),(1, 4),(2, 4),(1, 5),(2, 5)}, Φ2=
{(2, 4),(3, 4),(2, 5),(3, 5),(2, 6),(3, 6)} and Φ = Φ1
Φ2 =
{(1, 3),(2, 3),(1, 4),(2, 4),(1, 5),(2, 5),(2, 6),(3, 4),(3, 5),(3, 6)}.
S
Divide
subsets
disjoint
S1 = {(1, 3), (2, 3), (1, 4), (1, 5)}, S2 = {(2, 4), (2, 5)}
and S3 = {(3, 4), (3, 5), (2, 6), (3, 6)}. S1 is unicasted to
K1 = {1}, S3 is unicasted to K3 = {2}, and S2 is multicasted
to K2 = {1, 2}.

non-empty

into

Φ

3

We consider time division multiple access (TDMA). Each
TDMA frame has a duration of T (in seconds). Consider
one frame. The time allocated to transmit the tiles in Si is
denoted by ti. Thus, we have the following transmission time

allocation constraints:

ti ≥ 0,

i ∈ I,

ti ≤ T.

Xi∈I

(1)

(2)

We consider a narrow band system with bandwidth B (in
Hz), and assume block fading, i.e., each channel state (over
bandwidth B) does not change within one frame. Let hk
denote the power of the channel between user k and the
server. Let pi denote the transmission power of the symbols for
the tiles in Si. We impose the following transmission power
allocation constraints:

pi ≥ 0,

i ∈ I,

tipi ≤ Q,

Xi∈I

(3)

(4)

where Q represents the transmission energy limit for one
frame. For all k ∈ Ki, i ∈ I,
the maximum achievable
transmission rate (in bit/s) for the tiles in Si to user k is given
, where n0 is the power of the complex
by B log2
additive white Gaussian channel noise at each receiver.

1 + pihk
n0

(cid:16)

(cid:17)

Let xm,n denote the selected quality level for tile (m, n) ∈

Φ, where

xm,n ∈ L, (m, n) ∈ Φ.

(5)

P

(m,n)∈Si xm,n represents the sum of the selected
Note that
quality levels of the tiles in Si. Let γ , maxl∈L
Dl
l denote
the maximum ratio of encoding rate and quality level for all
quality levels. Let hi,min , mink∈Ki hk denote the minimum
channel power for all users in Ki. To guarantee that all users
in Ki can successfully receive the tiles in Si of the selected
quality levels, we require:1

γT

X(m,n)∈Si

xm,n ≤ tiB log2 (cid:18)

1 +

pihi,min

n0 (cid:19)

,

i ∈ I. (6)

(m,n)∈Φk xm,n stands for the sum of the se-
In addition,
lected quality levels of the tiles in Φk and can be treated
as a measure of the QoE for user k. A larger value of
(m,n)∈Φk xm,n indicates higher QoE for user k. Therefore,

P

the total utility of all K users is given by:
P

U (x) =

xm,n.

(7)

Xk∈K X(m,n)∈Φk

To smooth border effects of mixed-quality tiles, we require
that the quality difference between any two adjacent tiles is
bounded by a parameter ∆ ∈ L
{0}. In addition, considering
that the ﬁrst column of tiles are connected to the last column

S

1Note that the conservative constraints in (6) are for analytical tractability,

and will not lead to much performance degradation, as shown in Sec. IV.

3

of tiles in a 360 VR video, we have the following smoothness
constraints:

|xm,n − xm,(n+1) mod N | ≤ ∆,

(m, n) ∈ Φ, (m, (n + 1) mod N ) ∈ Φ,

(8)

|xm,n − xm+1,n| ≤ ∆,

(m, n) ∈ Φ, ((m + 1), n) ∈ Φ.

(9)

Note that quality smoothness guarantee is not considered
in [10].

III. PROBLEM FORMULATION AND SUBOPTIMAL
SOLUTIONS

In this paper, we would like to optimize the quality selection
x , (xm,n)(m,n)∈Φ, transmission time allocation t , (ti)i∈I
and transmission power allocation p , (pi)i∈I , to maximize
the total utility U (x) in (7) subject to the quality selection
constraints in (5), (6), transmission time allocation constraints
in (1), (2), transmission power allocation constraints in (3),
(4), and quality smoothness constraints in (8), (9).

Problem 1 (Total Utility Maxmization):

U ∗ , max
x,t,p

s.t.

xm,n

Xk∈K X(m,n)∈Φk
(1), (2), (3), (4), (5), (6), (8), (9).

Due to the discrete constraints in (5), Problem 1 is a mixed
discrete-continuous optimization problem, which is NP-hard
in general. In the following, we propose two low-complexity
algorithms to obtain two suboptimal solutions of Problem 1.

A. Suboptimal Solution based on Continuous Relaxation

In this part, we obtain a suboptimal solution of Problem 1
by continuous relaxation. Speciﬁcally, by relaxing the discrete
constraints in (5) to

xm,n ∈ [1, L],

(m, n) ∈ Φ,

(10)

we can obtain the continuous relaxation of Problem 1. As
the constraint functions in (6) are non-convex, the continuous
relaxation of Problem 1 is non-convex. In general, we can
only obtain a stationary point of a non-convex problem. By
introducing auxiliary variables ei = tipi, i ∈ I, we can
equivalently transform the constraints in (3), (4) and (6) to

ei ≥ 0,

i ∈ I,

ei ≤ Q,

(11)

(12)

Xi∈I

γT

X(m,n)∈Si

xm,n ≤ tiB log2 (cid:18)

1 +

eihi,min

tin0 (cid:19)

,

i ∈ I.

(13)

Denote e , (ei)i∈I . Then, we can obtain an equivalent convex
formulation of the continuous relaxation of Problem 1 as
follows.

Problem 2 (Convex Formulation of Relaxed Problem 1):

Problem 3 (DC Problem of Problem 1):

¯U ∗ , max
x,t,e

s.t.

xm,n

Xk∈K X(m,n)∈Φk
(1), (2), (8), (9), (10), (11), (12), (13).

U ∗ = max
y,t,e

s.t.

ym,n,l

Xk∈K X(m,n)∈Φk Xl∈L
(1), (2), (8), (9), (11), (12), (13), (16), (17),

4

Let (x∗, t∗, e∗) denote an optimal solution of Problem 2.

Note that ¯U ∗ ≥ U ∗. An optimal solution of Problem 2
can be obtained efﬁciently using standard convex optimiza-
tion techniques. But it is usually not in the feasible set of
Problem 1, as we have relaxed the discrete constraints in (5)
of Problem 1. Round down x∗ to ⌊x∗⌋ , (⌊x∗
m,n⌋)(m,n)∈Φ,
where ⌊x⌋ denotes the greatest integer less than or equal to
x, and construct p∗ , (p∗
for all i ∈ I.
We have the following result.
1
(Suboptimal
(⌊x∗⌋, t∗, p∗) satisﬁes all
and U ∗ − U (⌊x∗⌋) ≤

of Problem 1):
the constraints in Problem 1,

i )i∈I , where p∗
i

, e∗
i
t∗
i

Solution

Lemma

m,n − ⌊x∗

(m,n)∈Φk (x∗

m,n⌋).

Therefore, (⌊x∗⌋, t∗, p∗) can be treated as a suboptimal
P
solution of Problem 1, and an upper bound on its performance
m,n⌋), can be easily
gap, i.e.,
evaluated. The details of the above procedures are summarized
in Algorithm 1.

(m,n)∈Φk (x∗

m,n − ⌊x∗

k∈K

k∈K

P

P

P

Algorithm 1 Suboptimal Solution of Problem 1 based on
Continuous Relaxation
Output (⌊x∗⌋, t∗, p∗).
1: Compute (x∗, t∗, e∗) of Problem 2 using standard convex optimization

techniques.

2: Set ⌊x∗⌋ = (⌊x∗

m,n⌋)(m,n)∈Φ, and p∗ = (

∗
e
i
t∗
i

)i∈I .

B. Suboptimal Solution based on DC programming

In this part, we obtain a suboptimal solution by DC pro-
gramming. First, introduce variables y , (ym,n,l)(m,n)∈Φ,l∈L,
where

ym,n,l ∈ {0, 1},

(m, n) ∈ Φ, l ∈ L.

(14)

l∈L ym,n,l as xm,n for all (m, n) ∈ Φ, the
Then, treating
constraints in (5) can be equivalently expressed in terms of y
as follows:

P

where xm,n in (8), (9), (13) is given by xm,n =
for all (m, n) ∈ Φ.

P

l∈L ym,n,l,

Note that the objective function of Problem 3 is convex,
the constraint functions in (17) are concave, and the other
constraint functions are convex. Thus, Problem 3 is a dif-
ference of convex (DC) problem [11]. In the following, we
adopt the DC method in [12] to obtain a stationary point of
Problem 3. First, we approximate Problem 3 by disregarding
the constraint in (17) and adding to the objective function a
penalty for violating the constraint in (17).

Problem 4 (Penalized Problem of Problem 3):

max
y,t,e

s.t.

ym,n,l − ρP (y)

Xk∈K X(m,n)∈Φk Xl∈L
(1), (2), (8), (9), (11), (12), (13), (16),

where the penalty parameter ρ > 0 and the penalty function
P (y) is given by

P (y) =

ym,n,l(1 − ym,n,l).

(18)

X(m,n)∈Φ Xl∈L

There exists ρ0 > 0 such that for all ρ > ρ0, Problem 4
is equivalent to Problem 3 [12]. Now, we solve Problem 4
instead of Problem 3 by using a DC algorithm. Speciﬁcally,
at the j-th iteration, we update the solution (y(j), t(j), e(j))
by solving the following approximate problem.

Problem 5: (Convex Approximation of Problem 4 at j-th

Iteration):

(y(j), t(j),e(j)) ,

arg max

y,t,e Xk∈K X(m,n)∈Φk Xl∈L

ym,n,l − ρ ˆP (y; y(j−1))

s.t.

(1), (2), (8), (9), (11), (12), (13), (16),

where

ˆP (y; y(j−1)) , P (y(j−1)) + ∇P (y(j−1))T (y − y(j−1))

ym,n,l ≥ 1,

(m, n) ∈ Φ.

(15)

=

Xl∈L

1 − 2y(j−1)
m,n,l

X(m,n)∈Φ Xl∈L (cid:16)(cid:0)

ym,n,l +
(cid:1)

(cid:0)

y(j−1)
m,n,l

2

.

(cid:17)

(cid:1)

The discrete constraints in (14) can be rewritten as the
following continuous constraints:

Here, y(j−1) ,

y(j−1)
m,n,l

(cid:17)(m,n)∈Φ,l∈L
Problem 5 at the (j − 1)-th iteration.

(cid:16)

denotes the solution of

ym,n,l ∈ [0, 1],

(m, n) ∈ Φ, l ∈ L,

ym,n,l(1 − ym,n,l) ≤ 0.

(16)

(17)

X(m,n)∈Φ Xl∈L

As in Problem 2, we optimize e instead of p. Then,
Problem 1 can be equivalently transformed to the following
problem.

It has been shown that the DC algorithm can obtain a
stationary point of Problem 4, denoted by (y⋆, t⋆, e⋆). Due
to the equivalence among Problems 1, 3 and 4, (x⋆, t⋆, p⋆)
can be treated as a suboptimal solution of Problem 1, where
x⋆ , (x⋆
m,n)(m,n)∈Φ with x⋆
l∈L y⋆
m,n,l for all
m,n =
i = e⋆
(m, n) ∈ Φ, and p⋆ , (pi)i∈I with p⋆
P
i
for all i ∈ I.
t⋆
i
The details are summarized in Algorithm 2.

900

800

700

600

500

y
t
i
l
i
t
u

l
a
t
o
T

400

20

Upperbound

DC programming

Continuous relaxation

Baseline 1 (DC)

Baseline 1 (CR)

Baseline 2 (DC)

Baseline 2 (CR)

21

22
B (MHz)

23

24

(a) Total utility vs bandwidth at Q = 0.05 J and T =
0.05 s.

5

Upperbound

DC programming

Continuous relaxation

Baseline 1 (DC)

Baseline 1 (CR)

Baseline 2 (DC)

Baseline 2 (CR)

900

800

700

600

500

y
t
i
l
i
t
u

l
a
t
o
T

400

0.05

0.09

0.13
Q (J)
(b) Total utility vs transmission energy limit at B = 20
MHz and T = 0.05 s.

0.21

0.17

Upperbound

DC programming

Continuous relaxation

Baseline 1 (DC)

Baseline 1 (CR)

Baseline 2 (DC)

Baseline 2 (CR)

1200

1000

y
t
i
l
i
t
u

l
a
t
o
T

800

600

DC programming

Continuous relaxation

Baseline 1 (DC)

Baseline 1 (CR)

Baseline 2 (DC)

Baseline 2 (CR)

34

30

26

22

)

B
d
(

R
N
S
P
e
g
a
r
e
v
A

400

0.05

0.06

0.07
T (s)

0.08

0.09

(c) Total utility vs frame duration at Q = 0.05 J and
B = 20 MHz.

DC programming

Continuous relaxation

Baseline 1 (DC)

Baseline 1 (CR)

Baseline 2 (DC)

Baseline 2 (CR)

34

30

26

22

)

B
d
(

R
N
S
P
e
g
a
r
e
v
A

18
0.05

0.09

0.13
Q (J)

0.17

0.21

(e) Average PSNR vs transmission energy limit at B =
20 MHz and T = 0.05 s.

18

20

21

22
B (MHz)
(d) Average PSNR vs bandwidth at Q = 0.05 J and
T = 0.05 s.

24

23

DC programming

Continuous relaxation

Baseline 1 (DC)

Baseline 1 (CR)

Baseline 2 (DC)

Baseline 2 (CR)

38

34

30

26

22

)

B
d
(

R
N
S
P
e
g
a
r
e
v
A

18
0.05

0.06

0.07
T (s)
(f) Average PSNR vs frame duration at Q = 0.05 J and
B = 20 MHz.

0.09

0.08

Fig. 2: Comparison between the proposed suboptimal solutions and four baseline schemes.

Algorithm 2 Suboptimal Solution of Problem 1 based on DC
Programming
Output (x⋆,t⋆,p⋆).
1: Initial Step: Find an initial feasible point (y(0), t(0), e(0)) of Problem 4,

choose a sufﬁciently large ρ, and set j = 0.

2: repeat
3: Set j = j + 1.
4: Obtain (y(j), t(j), e(j)) of Problem 5 using standard convex optimiza-

tion techniques.

5: until convergence criteria is met.
6: Set (y⋆, t⋆, e⋆) = (y(j), t(j), e(j)).
7: Set x⋆ = (Pl∈L y⋆

m,n,l)(m,n)∈Φ, and p⋆ = (

⋆
e
i
t⋆
i

)i∈I .

IV. SIMULATION

In the simulation, we consider the following setting. Con-
sider K = 2 and both path loss and small-scale Rayleigh
fading. For all k ∈ K, assume channel power hk follows
the exponential distribution with mean 10−3 (which is to
reﬂect the path loss). The complex additive white Gaussian
channel noise is n0 = BkBT0, where kB = 1.38 × 10−23
Joule/Kelvin is the Boltzmann constant and T0 = 300 Kelvin
is the temperature. Consider ∆ = 1. We set the horizontal
and vertical angular spans of each FoV as Fh = Fv = 100◦
[4]. Considering possible view changes in a short period,

 
 
 
 
 
 
 
 
 
besides each FoV we transmit an extra 10◦ in every direction.
Consider M × N = 18 × 36, Φ1 = {(m, n) | 2 ≤ m ≤
13, m ∈ M, 10 ≤ n ≤ 21, n ∈ N } and Φ2 = {(m, n) |
7 ≤ m ≤ 18, m ∈ M, 15 ≤ n ≤ 26, n ∈ N }. We use
360 video sequence Reframe Iran from YouTube as the video
source and divide it into tiles with L = 6 quality levels. The
parameters are shown in TABLE I. The encoding is done
with the HEVC codec Kvazaar. From TABLE I, we know
γ , maxl∈L
Dl
l = 8.408 × 105. Besides the total utility
deﬁned in the paper, we also consider the average PSNR
for each FoV as the performance measure. We generate 100
random independent channel realizations, and evaluate the
average performance over these realizations. We use Matlab
software and cvx tool box to implement Algorithm 1 and
Algorithm 2.

TABLE I: Encoding rate and PSNR of a tile at different quality
levels.

Quality level
Quantization parameter
Encoding rate (×105)
PSNR

1
42
6.66
15.82

2
35
16.18
25.24

3
28
24.29
32.86

4
21
32.01
39.96

5
14
40.23
46.11

6
7
50.45
50.96

I and pi = |Si|

In the simulation, we compare two proposed suboptimal
solutions with four baseline schemes. Baseline 1 (CR) and
Baseline 1 (DC) both consider multicast opportunities and
quality level optimization but with equal transmission time
and power allocation, i.e., ti = T
Pi |Si| Q for all
i ∈ I, where |Si| denotes the number of tiles in Si. Given the
equal transmission time and power allocation, Baseline 1 (CR)
corresponds to a suboptimal quality level selection based on
continuous relaxation (similar to Algorithm 1) and Baseline 2
(DC) corresponds to a suboptimal quality level selection based
on DC programming (similar to Algorithm 2). Baseline 2
(CR) and Baseline 2 (DC) both consider optimal quality level
selection, as well as transmission time and power allocation
but without exploiting multicast opportunities, i.e., different
users are served separately no matter whether Φk, k ∈ K are
disjoint or not. The optimization problem for unicast can be
formulated in a similar way to Problem 1. Baseline 2 (CR)
corresponds to a suboptimal solution of this new problem
based on continuous relaxation (similar to Algorithm 1), and
Baseline 2 (DC) corresponds to a suboptimal solution based
on DC programming (similar to Algorithm 2). The benchmark
Upperbound corresponds to the optimal value of Problem 2,
i.e., ¯U ∗.

Fig. 2 illustrates the total utility and the average PSNR (for
each FoV) versus the bandwidth B, the transmission energy
limit Q and the frame duration T , respectively. From Fig. 2,
we can see that the total utility and the average PSNR of each
scheme both increase with B, Q and T . In addition, we can
see that each scheme based on DC programming outperforms
the corresponding scheme based on continuous relaxation, due
to the performance loss caused by rounding in the continuous
relaxation approach. As illustrated in TABLE II, the contin-
uous relaxation approach has a lower complexity than the

6

DC programming approach. Finally, we can see that the two
proposed suboptimal solutions outperform all the baselines
and achieve near optimal performance (as their performances
are close to the upperbound of the optimal performance),
demonstrating the effectiveness of the suboptimal solutions.

TABLE II: Computation times and total utilities of the two
suboptimal solutions at Q = 0.05 J, B = 20 MHz and T =
0.05 s.

Continuous relaxation
DC programming

Computation time (s)
9.84
282.98

total utility
527.76
534.61

V. CONCLUSIONS

In this paper, we consider multi-quality multicast of a 360
VR video from a single server to multiple users using TDMA.
To improve transmission efﬁciency, tiling is adopted, and each
tile is pre-encoded into multiple representations with different
qualities. Sets of tiles that are transmitted to different groups
of users are considered to enable complexity reduction without
out loss of optimality. We optimize the quality level selection,
transmission time allocation and transmission power allocation
for the tile sets to maximize the total utility of all users
under the transmission time and power allocation constraints
as well as the quality smoothness constraints for mixed-quality
tiles. The problem is a challenging mixed discrete-continuous
optimization problem. We propose two low-complexity al-
gorithms to obtain two suboptimal solutions, using contin-
uous relaxation and DC programming, respectively. Finally,
numerical results demonstrate the advantage of the proposed
suboptimal solutions. To the best of our knowledge, this is the
ﬁrst work providing low-complexity optimization-based multi-
quality multicast for 360 VR video with quality smoothness
guarantee.

REFERENCES

[1] C. Guo, Y. Cui, and Z. Liu, “Optimal multicast of tiled 360 VR video,”

IEEE Wireless Communications Letters, to be published.

[2] “Augmented virtual reality revenue forecast revised to hit 120 billion

by 2020,” https://goo.gl/nw9mtP, 2016.

[3] V. R. Gaddam, M. Riegler, R. Eg, C. Griwodz, and P. Halvorsen,
“Tiling in interactive panoramic video: Approaches and evaluation,”
IEEE Transactions on Multimedia, vol. 18, no. 9, pp. 1819–1831, Sep.
2016.

[4] R. Ju, J. He, F. Sun, J. Li, F. Li, J. Zhu, and L. Han, “Ultra wide
view based panoramic VR streaming,” in Proceedings of the Workshop
on Virtual Reality and Augmented Reality Network, August. 2017, pp.
19–23.

[5] T. El-Ganainy, “Spatiotemporal rate adaptive tiled scheme for 360
sports events,” CoRR, vol. abs/1705.04911, 2017. [Online]. Available:
http://arxiv.org/abs/1705.04911

[6] J. Li, Z. Wen, S. Li, Y. Zhao, B. Guo, and J. Wen, “Novel tile segmen-
tation scheme for omnidirectional video,” in 2016 IEEE International
Conference on Image Processing (ICIP), Sep. 2016, pp. 370–374.
[7] M. Inoue, H. Kimata, K. Fukazawa, and N. Matsuura, “Interactive
panoramic video streaming system over restricted bandwidth network,”
in Proceedings of the 18th ACM international conference on Multime-
dia, October. 2010, pp. 1191–1194.

[8] L. Xie, Z. Xu, Y. Ban, X. Zhang, and Z. Guo, “360probDASH: Im-
proving QoE: of 360 video streaming using tile-based HTTP: Adaptive
streaming,” in Proceedings of the 2017 ACM on Multimedia Conference,
October. 2017, pp. 315–323.

[9] A. Ghosh, V. Aggarwal, and F. Qian, “A rate adaptation algorithm for
tile-based 360-degree video streaming,” CoRR, vol. abs/1704.08215,
2017. [Online]. Available: http://arxiv.org/abs/1704.08215

[10] H. Ahmadi, O. Eltobgy, and M. Hefeeda, “Adaptive multicast streaming
of virtual reality content to mobile users,” in Proceedings of the on
Thematic Workshops of ACM Multimedia 2017, October. 2017, pp. 170–
178.

[11] T. Lipp and S. Boyd, “Variations and extension of the convex–concave
procedure,” Optimization and Engineering, vol. 17, no. 2, pp. 263–287,
Jun. 2016.

[12] H. A. Le Thi, T. Pham Dinh, and H. V. Ngai, “Exact penalty and error
bounds in DC programming,” Journal of Global Optimization, vol. 52,
no. 3, pp. 509–535, Mar. 2012.

7

