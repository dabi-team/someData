A Path Planning Framework for a Flying Robot in Close Proximity of
Humans

Hyung-Jin Yoon, Christopher Widdowson, Thiago Marinho, Ranxiao Frances Wang and Naira Hovakimyan

9
1
0
2

r
a

M
2
1

]

O
R
.
s
c
[

1
v
6
5
1
5
0
.
3
0
9
1
:
v
i
X
r
a

Abstract— We present a path planning framework that takes
into account the human’s safety perception in the presence
of a ﬂying robot. The framework addresses two objectives:
(i) estimation of the uncertain parameters of the proposed
safety perception model based on test data collected using
Virtual Reality (VR) testbed, and (ii) ofﬂine optimal control
computation using the estimated safety perception model. Due
it is not
to the unknown factors in the human tests data,
suitable to use standard regression techniques that minimize
the mean squared error (MSE). We propose to use a Hidden
Markov model (HMM) approach where human’s attention
is considered as a hidden state to infer whether the data
samples are relevant to learn the safety perception model.
The HMM approach improved log-likelihood over the standard
least squares solution. For path planning, we use Bernstein
polynomials for discretization, as the resulting path remains
within the convex hull of the control points, providing guar-
antees for deconﬂiction with obstacles at low computational
cost. An example of optimal trajectory generation using the
learned human model
is presented. The optimal trajectory
generated using the proposed model results in reasonable safety
distance from the human. In contrast, the paths generated
using the standard regression model have undesirable shapes
due to overﬁtting. The example demonstrates that the HMM
approach has robustness to the unknown factors compared to
the standard MSE model.

I. INTRODUCTION

In the last decade, multi-rotor copters have seen immense
growth in popularity, not only as a research platform, but also
as a commercial and industrial device. By 2020, the market
for these devices is expected to attain a value of $11.2 billion
with an annual growth of over 30% [1]. The mechanical sim-
plicity, the ability to hover and the maneuverability of these
ﬂying robots justify their use in civilian applications such as
media production, inspection, and precision agriculture. The
inclusion of these micro unmanned aerial vehicles (UAVs)
in our day-to-day lives brings immediate beneﬁts to society.
As an example, by using fast and cheap UAVs, delivery
from major retailers like Amazon and Walmart, can keep
a reduced inventory resulting in cost-effective warehouse
management. Additionally, by exploring their small and
lightweight form factor and substantially leveraging their
agility and reliability, applications in elderly care, medicine,
transportation and mobile surveillance are being developed.
In all these examples, it is important to ﬂy safely near people

Research supported by NSF NRI initiative #1528036.
Hyung-Jin Yoon, Thiago Marinho and Naira Hovakimyan are with
the Department of Mechanical Science and Engineering, University of
Illinois at Urbana-Champaign (UIUC), Urbana, IL 61801, USA. Christo-
pher Widdowson and Ranxiao Wang are with Psychology Depart-
ment in UIUC. {hyoon33, widdwsn2, marinho, wang18,
nhovakim}@illinois.edu

and navigate in densely populated areas. Unlike current
mobile robots that autonomously operate without considering
humans, these ﬂying collocated and cooperative robots (co-
robots) are intended to interact and cooperate with people in
a shared and constrained environment.

It is a long tradition in robot control and motion planning
to focus on the robot’s actual safety, i.e., the ability to gener-
ate safe paths that avoid collisions with obstacles. However,
this is insufﬁcient for robots operating in human congested
areas. Studies of human perception have shown that there is
a sharp distinction between human perceived safety and the
actual safety. This paper presents a path planning framework
that takes into account the human’s safety perception in
the presence of a ﬂying robot. Human’s safety perception
is predicted based on data collected from physiological
experiments in a virtual reality (VR) environment. In the
VR experiment, the participants experience a robot ﬂying in
the proximity, and the physiological signals and the position
coordinates of the ﬂying robot are recorded simultaneously.
The target variable is the physiological arousal signal, and the
feature variables are the position and the velocity coordinates
of the ﬂying robot.

There are a number of unknown factors present in the
data collected from these experiments. Naively assuming the
unknown factor to be an independent identically distributed
(i.i.d.) Gaussian noise model would not be suitable for the
data where only partial observation of the state of the system
is provided. However, the i.i.d. Gaussian noise assumption
is popularly used for regression tasks, since maximizing the
likelihood for estimation task conveniently reduces to the
mean squared error (MSE) minimization problem. In [2], a
recurrent neural network (RNN) is applied to predict music
mood (valence), where the coefﬁcient of determination1 with
a recurrent neural network (RNN) is at most 50% [2]. The
undesired goodness of ﬁt despite the highly complex models
used in the previous papers suggests that the other factors
not contained in the data may inﬂuence the outcome of the
human test. To overcome the issue, we propose to use a
Hidden Markov Model [3] approach, which divides the data
samples into two clusters: (i) relevant samples where the
target variable (physiological arousal) can be predicted as a
function of the feature (robot’s position and velocity); (ii)
irrelevant samples where it is better predicted by a random
source than a function of the feature. The prediction model

1The coefﬁcient of determination R2 is a performance metric used in
ˆyi)2
¯y)2 , where ¯y denotes empirical mean and ˆyi

regression task. R2 = 1
denotes the prediction of the target variable given a feature variable xi.

∑i(yi
∑i(yi

−
−

−

 
 
 
 
 
 
estimated with the help of the relevant samples is incorpo-
rated in the optimal path planning framework to take into
account the human’s safety perception. In the optimal path
planning, the ﬂight path is parameterized using Bernstein
polynomials, which ensures that the path remains inside the
convex hull of its control points [4]. This feature helps to
have collision avoidance guarantees at low computational
cost.

A. BACKGROUND

Human’s perception of a ﬂying robot dependent upon its
spatial and temporal variables (e.g. distance and speed) has
been studied using virtual reality testbed, and as well using
a real ﬂying robot. A comfortable distance for a ﬂying robot
to approach a human was studied in [5], where the authors
tested the effects of the size of the robot on the comfort levels
of the human subjects using behavioral, physiological, and
survey measures. Distancing with the robot and interaction
preference between two differently behaving robots were
investigated for speed and repeating behavior (cyclicity)
using VR experiments, [6].

On the other hand, various design approaches to the
human-aerial-robot system have been explored again for the
purpose of ensuring comfort for humans. Laban effort2 is
employed to design affective locomotion for a ﬂying robot
in [8], and the effect on arousal and valence due to the
design parameter of the locomotion is tested. Emotional
encoding in a ﬂight path of a robot was investigated in [9],
where the encoding is derived from characterizing stereo-
types of personality and motion parameters using interaction
vocabulary. In [10], the authors propose a ﬂight path design
approach, which improves the ease of human’s perception of
the robot’s motion, and the proposed design is tested using
survey measures. A signaling device that resembles the turn
signals of a car is proposed to communicate the robot’s intent
to humans, [11]. Using gestures to communicate the user’s
intent to the robot is investigated in [12].

In the papers cited above, the focus is on either discovering
a general model in human-aerial-robot interaction based on
the empirical data or devising a heuristic method to improve
the acceptability of the robot for humans. However, the
sparse and qualitative model stated in the form of null hy-
pothesis testing is not straightforward to apply for engineers,
who intend to use it with an optimal design technique. In the
proposed framework, we estimate the uncertain parameters
of a human’s physiological signal model, then the estimated
parametric model is considered as a cost to minimize in the
optimal path planning task.

The remainder of the paper is organized as follows. In
Section II, the VR experiment set-up is described, and the
preliminary ﬁnding that relates the physiological arousal to
the perceived safety is introduced. In Section III, we propose
a model to address the inﬂuence of unknown factors and
validate it against the VR experimental data. In Section
IV, the optimal path planning that takes into account the

2A method to interpret human motion used in choreography [7]

human arousal model is presented. Section V summarizes
and discusses future directions.

II. VR EXPERIMENT AND DATASET
GENERATION

Flying

1:
environment

Fig.
VR
illustration
https://youtu.be/XnaXzdHlxUA).

robot

(an

observed

in
video

the
at

Virtual Reality offers a safe, low-cost, and time efﬁcient
method to collect data [6]. For example, the precise coordi-
nates of the human and robot can easily be recorded in real-
time, which is useful for studying spatial-temporal variables
in human behavior. To this end, we have developed a VR
test environment to explore human-aerial-robot interactions
in a variety of experimental scenarios [13], [14]. Concurrent
psychophysiological reactions of participants are recorded in
terms of head motion kinematics and electrodermal activ-
ity (EDA), and time-aligned with attributes of the robot’s
ﬂight path, e.g. velocity, altitude, and audio proﬁle. During
the experiment, participants were introduced to the virtual
environment (VE) and told that they would experience a
simulation of an urban scene lasting approximately ten min-
utes. Participants were seated at the junction of a three-way
intersection with unoccluded paths in the forward, left, and
right direction. Three arbitrary trajectories conforming to the
shape of the intersection were chosen and reversed, for a total
of six unique trajectories (1.6 m altitude) (see Figure 2a).
The simulation started with a 90 seconds baseline period –
without any ﬂying robot – allowing time for the EDA signal
to plateau. The ﬁrst robot then appeared and completed its
trajectory. After a pause of 30 to 40 seconds, the next robot
appeared, and the process repeated itself for the duration
of the entire experiment. Figure 2b shows the position and
velocity proﬁles of all these ﬂying robots. We collected the
data from 56 participants (20 males / 36 females) recruited
from our university.

The skin conductance signal

is preprocessed by EDA
analysis package, Ledalab, to generate the phasic activation
signal [15]. The EDA toolbox decomposes the skin conduc-
tance signal into phasic and tonic signal as shown in Figure 3.
The phasic signal is then deconvolved to determine phasic ac-
tivation; phasic activation represents an instantaneous arousal
response.

To our knowledge, there has been no standard index of
perceived safety in the literature. Although physiological
measurements of arousal (e.g., EDA) alone are not neces-
sarily equivalent to people’s perceived safety, several pieces
of evidence suggest that the EDA measure of physiological

(a) Flight paths.

Fig. 3: EDA analysis result (phasic/tonic decomposition and
deconvolution to determine phasic activation).

(b) Human-aerial robot interaction events. x, y,
z denote position coordinates and d denotes the
distance between the robot and the human. Also,
˙x, ˙y, ˙z denote velocity coordinates and ˙d denotes
the rate of change of the distance.

Fig. 2: Test events and ﬂight paths.

arousal in our study is closely related to people’s anxiety
induced by the approaching drone. For example, in a follow-
up experiment examining the effects of path height on
people’s EDA responses, we found that the EDA phasic
response was signiﬁcantly stronger for a drone approaching
at eye-height, where a potential collision was possible, than
when the drone was ﬂying at a height beyond the observer’s
head, where there is no danger of collision, even though all
other characteristics of the drone movement were the same.
These results suggest that such arousal was most likely due
to people’s anxiety in response to approaching danger rather
than general excitement caused by watching ﬂying robots.
Moreover, analysis of the simultaneous head motion showed
that as the EDA signal increased with the approaching drone,
people made characteristic collision-avoidance movements
by jerking their heads away from the drone. These ﬁndings
again suggest that the physiological arousal signals observed
in our study are most likely a result of people’s anxiety to
avoid impeding danger, rather than general excitement. Thus,
in the following sections we consider the EDA signal as an
operational approximation of the human’s perceived safety
for the optimal path generation algorithm.

III. THE PROPOSED MODEL

We aim to develop a data-driven model that predicts the
phasic activation (arousal), given the robot’s position and

∈

∈

R denote the phasic activation, where n
velocity. Let yn
is the time index. The input (feature) variable, denoted by
R8, is the vector that contains the distance to the robot,
xn
the rate of change of the distance, the Cartesian position
coordinates, and the velocity coordinates. Despite the high-
ﬁdelity test environment, it is impossible to measure every
stimulus on the subject, i.e. there are unknown factors in the
data. As an example, one of our collected datasets, shown
in Figure 4, illustrates the unknown factors’ presence in the
data. One can notice an increase in the phasic activation in
the shaded area, although the ﬂying robot is far away and
virtually invisible to the subject.

Fig. 4: Phasic activation signal induced by the ﬂying robot.
The shaded box indicates the response, where the robot is in
far distance (greater than 60 [m]).

To account for the unknown factors in the data, we
hypothesize that the unexpected spike of the phasic activation
in Figure 4 is due to the change of the participant’s focus of
attention, i.e. the participant is distracted by some other stim-
ulus. Inspired by the work in [16], we model the sequential
dependence of the (hidden) human’s focus of attention using
a Hidden Markov Model (HMM). The HMM has two states
represented by the latent variable that models the human’s
attention state, which we denote by

zn :=

1,
2,

(cid:26)

if the human is attentive to the robot,
otherwise.

Then zn is modeled by a homogeneous Markov chain with
the following probability transition equation:

πn+1 = πnA.

(1)

The vector πk := [p(zn = 1), p(zn = 2)] is the stochastic
row vector for the distribution over the state zn, and A
∈
R2
2 denotes the transition probability matrix of the Markov
chain3. The initial distributions π0 and A are the parameters
of the Markov chain.

×

The attention state variable zn assigns one of the two
output emission models fβ(xn)+ε or an independent random
source δ as follows
yn = 1

( fβ(xn) +ε) + 1

(2)

δ,

zn=1
}
{

zn=2
}
{

→

R is
where 1A denotes the indicator function, and fβ : R8
a function fβ(x) := β⊤φ(x), which is linearly parameterized
N (0,σ2), and δ denotes the
with β and basis φ(x)4, ε
random source. As seen in (2), yn depends on xn when
zn = 1; however, yn = δ when zn = 2, i.e. it is modeled as an
independent random signal. In (2), it can be seen that one
of the two regression functions of the models yn = fβ(xn)
and yn = δ is chosen based on the likelihood given the
observation (xn, yn).

∼

In addition to the hypothetical binary HMM that models
the change of human’s attention, we further hypothesize
that the unexpected spike of the activation signal follows a
multimodal distribution. We employ a mixture of Gaussians
to model δ for the multimodal distribution. The Gaussian
mixture model (GMM) allows a multi-modal and skewed
distribution in contrast to the Gaussian distribution. The
density of the mixture model for δ is deﬁned by another
latent variable wn

as follows:

1, . . . , K

∈ {
}
µk, σ2
wn = k) = N (δ
|

k ),

p(δ
|

p(wn = k) = ck,

(3)

where ck are the mixing coefﬁcients such that ∑K
k=1 ck = 1,
N (δ
µ, σ) denotes a Gaussian density function of δ with
|
the mean µ and the variance σ2. We assume that wn is
independent and identically distributed. Also, it is assumed
that wn and zn are independent, and furthermore, wn and zn
are conditionally independent, given the observation (xn, yn).

A. Model Parameter Estimation

The model deﬁned by (1) - (3) has a set of parameters
K
β,µ,σ,π1, A,
ci,µi,σi
denoted by θ :=
. Given the
i=1}
{
}
{
and y :=
dataset x :=
y1, . . . , yN
x1, . . . , xN
, the parameter
}
{
of the model is estimated by the maximum likelihood esti-
mation (MLE) through the following conditional likelihood
equation:

}

{

argmax
θ

p(y
|

x,θ) = argmax

θ

∑
z

∑
w

p(y, z, w

x,θ),

|

(4)

z1, . . . , zN

where the summation takes place over all possible
sequences z :=
. The
number of terms for the summation is 2NKN, which makes
the optimization intractable for large number of samples.
Due to this challenge, Expectation-Maximization (EM)
algorithm [17] is widely used to obtain the MLE for HMM.

w1, . . . , wN

and w :=

}

{

{

}

the Markov chain property as deﬁned in (1), the conditional
likelihood is calculated as follows:

p(y, z, w

|

p(z1

π1)
|

x,θ) =
N
∏
n=2

"

p(zn

zn

1, A)

|

−

N
∏
n=1

#

p(wn

θ)p(yn
|

|

zn, wn, xn,θ),

(5)

}

z1, . . . , zN

w1, . . . , wN

and w :=
where z :=
. The EM
{
{
algorithm iteratively maximizes the likelihood using the pos-
x, y,θold) and the likelihood for the supposed
terior p(z, w
complete data p(y, z, w
x,θ), as summarized in Algorithm 1.
The detailed calculation of EM algorithm for the proposed
model is in Appendix.

}

|

|

In contrast to standard regressions that minimize the mean
squared error (MSE),
the latent variable model (HMM)
determines the parameter of the prediction model fβ(x) as
the weighted least squared error solution with the weight of
x, y,θold) as follows:
the posterior P(zn,1

|

β∗ := argmin

β

N
∑
n=1

P(zn,1

|

x, y,θold )(yn

fβ(xn))2,

−

x, y,θold). The
x, y,θold) denotes P(zn = 1
where P(zn,1
proposed method puts greater weight on the samples, which
are more relevant to the input based on the posterior of the
attention state.

|

|

Algorithm 1 EM Algorithm for MLE of θ
Initialize the parameter, θold with θ0.

repeat

1. Determine the posterior, p(z, w
2. Calculate Q(θ,θold):
Q(θ,θold) := ∑
z,w

p(z, w

|

x, y,θold) log p(y, z, w

x,θ),

|

x, y,θold).

|

which is the expectation of log p(y, z, w
to the posterior.

|

x,θ) with respect

3. Find the maximizer, θ∗

θ∗ = argmax

Q(θ,θold),

θ
4. Update θold with θ∗.

until convergence.

B. RESULT

We choose the following initial parameter θ0:
1) β0 := argminβ ∑N
fβ(xn))2, and σ0 = 0.5,
1/2
2) A0 :=
1/2
k = 1, and µk are randomly chosen from the

−
, and π0
(cid:21)

1 := [1/2, 1/2],

n=1(yn

1/2
1/2

3) c0

(cid:20)
k = 1/K, σ0
1, 1],
interval,[

−

where K is the number of the Gaussian basis of the GMM.
For the linear function fβ(x) := β⊤φ(x), we choose the basis
functions φ(x) as polynomials with degree 3.

EM Algorithm: Assume the complete data (x, y, z, w) is
available. Using the independence assumption on wn, zn and

3We used p(

) for both probability and probability density; its distinction
·
easily follows from the context.

43rd order polynomial basis functions were chosen for the φ(

).
·

The i.i.d. Gaussian noise model (MSE minimization ap-
proach) is contained in the proposed model structure as
a special case, p(zn = 1) = 1, i.e. the arousal is always
explained by fβ(x) than the random source δ. We would
like to know whether the proposed model is better than

the MSE minimization approach. Likelihood ratio test is
typically used to decide if the additional complexity in the
modeling is desired compared to a simple model (e.g. i.i.d.
Gaussian noise model), [18]. Since HMM is non-identiﬁable
in general [19], the likelihood ratio model comparison test
with the training dataset does not apply. To determine which
model is more suitable, we calculate the likelihood with test
dataset by employing the approach from [20]. We randomly
partition the data from 56 subjects into a training set with 38
subjects and a test set with the other 18 subjects. Figure 6
shows the log-likelihood with test data set for the models:
(i) the Gaussian i.i.d. noise model, (ii) the proposed model
with a different basis K of GMM. We see that there is
a signiﬁcant increase in the likelihood using the proposed
model as compared to the Gaussian i.i.d. noise model (or
the MSE minimization model).

Remark 1: The improvement of the log-likelihood by us-
ing the proposed model suggests that the null hypothesis5
is not true. By rejecting the null hypothesis, we show that
the proposed model is more suitable than the Gaussian noise
model. Consider the following log-likelihood ratio test (see
11.7.4 in [18]):

H0 : ϕ

∈

Θ0

versus H1 : ϕ

Θ1,

∈

where ϕ denotes the true parameter, Θ0 denotes the set of
parameters for the Gaussian noise model, and Θ1 denotes
the set of parameters for the proposed model. Note that
the Gaussian noise model is a special case of the proposed
Θ1. The likelihood ratio statistics λ is
model, i.e. Θ0
calculated as

⊆

λ = 2 log

supθ
∈
supθ
∈

Θ1

Θ0

L (θ)
L (θ)

,

(cid:19)

(cid:18)
where L (θ) := p(y, z, w
x,θ) denotes the likelihood for θ
in (5). Figure 6 shows that λ > 4000. The relative degree is
r = 10, as the proposed model has 10 more parameters than
the Gaussian noise model. The likelihood ratio test is: reject
H0, when λ > χ2
Θ0 with p-value at
0.01.

r,α. We reject H0 : ϕ

∈

|

We ﬁx the proposed model with K = 2, since a greater
number of basis does not result in signiﬁcant improvement
in likelihood, as shown in Figure 6. The function fβ with the
ﬁxed model is used to predict the phasic activation (arousal)
as shown in Figure 5a. Figure 5b shows that the MSE
minimization approach has signs of over-ﬁtting (oscillation
and spiky shape). In the following section, optimal path
planning with the prediction model is presented.

IV. OPTIMAL PATH PLANNING

The ability to generate a safe path while considering
human’s safety perception (using the prediction function
fβ(
)) is necessary for our optimal path planning task. To
·
meet the requirement, we employ the trajectory generation
method from [4], [21]. To ensure spatial separation of the
robot’s path from obstacles, we use Bernstein polynomials
to discretize trajectories. Bernstein polynomials are useful
for checking collision avoidance, as the convex hull of the

5The null hypothesis assumes that the true parameter ϕ is in the set of

parameters Θ0, which corresponds to the Gaussian i.i.d. noise model.

phasic activation
the proposed
MSE minimization

(a) On entire experiment data.

the proposed
MSE minimization

(b) Closer look on an event.

Fig. 5: Prediction, ˆy = fβ(x), where the phasic activation
signals, are normalized for each subject.

Gaussian Noise
Model

K=1

Proposed Model
K=2

K=3

0

-500

-1000

-1500

-2000

-2500

-3000

-3500

-4000

d
o
o
h

i
l

e
k

i
l
-
g
o
L

Fig. 6: Log-Likelihood with Test Data. K denotes the number
of Gaussian basis in the equation (3).

vertices determined from the coefﬁcients of the Bernstein
polynomial contains the ﬂight path, Figure 7. The convex
hull is used to check for collision between the vehicle and
the obstacles, as demonstrated in [4].

Polynomial interpolation of state trajectories has been used
to determine numerical approximate solutions to optimal path
planning. For example, an interpolation polynomial with the
Legendre-Gauss-Lobatto (LGL) time nodes has been used
to solve an optimal control problem in [23], [24]. In [21]
it is shown that using Bernstein polynomials the optimal
control solution can be approximated sufﬁciently closely
as the number of time-nodes increases, while at the same
time ensuring spatial separation from obstacles. In our path

is

J( ¯p0, . . . , ¯pn,t f )

the LGL quadrature

of
where
t f
0 L(p(t), ˙p(t))dt
calculated by the method in [23],
and L(p(t), ˙p(t)) is the running cost to be minimized in time
R
average. Constraint equations for collision avoidance and
velocity acceleration can be written as functions of control
points ¯p0, . . . , ¯pn by following the methodology in [4].

B. Optimal Path Planning in the Presence of Humans

∈

R8 contains the distance to the robot,

Deﬁne x(t) in the same way as we deﬁned xn in (2),
where x(t)
the
rate of change of the distance, the position coordinates and
time t. Notice that with the
the velocity coordinates at
polynomial path p(t) and ˙p(t) one can directly construct
x(t). For this reason, to simplify the notation we can use
x(t) and (p(t), ˙p(t)) interchangeability as arguments of the
functions fβ(
).
·

), J(
·
In the optimal path planning, we only consider values of
fβ larger than a threshold ba, where ba
0 is essentially a
tuning parameter. Intuitively, we ignore arousal levels below
the threshold. To make the optimization problem tractable,
instead of adding a strict constraint to the minimization
problem, the constraint is incorporated in the running cost
as a penalty function [25]:

) and L(
·

≥

L(p(t), ˙p(t)) := 1 +γmax(0, fβ(x(t))

ba)2,

−

(6)

where γ is the penalty coefﬁcient. The corresponding cost
function J( ¯p0, . . . , ¯pn,t f ) becomes

J( ¯p0, . . . , ¯pn,t f ) = t f +γ

t f

0

Z

max(0, fβ(x(t))

−

ba)2dt.

(7)

The two arousal prediction functions are used in the
optimal ﬂight trajectory generation, as shown in Figure 8
and Figure 9. The smaller value of ba results in a path that
is more safety conscious, as intended by the running cost
function in (6). Flight paths generated with the proposed
model show the desirable behavior, as shown in Figure 5a
(decreasing ba results in greater distance from the human).
However, the paths with the MSE minimization model have
unconvincing shapes. This undesirable behaviour of the MSE
minimization model is due to over-ﬁtting, as we have seen in
Figure 5b. It shows that the arousal prediction model which
only minimizes MSE does not generalize in the optimal path
generation task.

V. CONCLUSION

We present a path planning framework that takes into ac-
count human’s safety perception. Psychophysiological reac-
tions for different paths of ﬂying robots in VR were collected
to estimate the arousal prediction model. To consider the
unknown factor in the data, we proposed a hidden Markov
model approach. Compared to the mean squared error (MSE)
minimization approach (due to i.i.d. Gaussian noise model),
the proposed model has improved the likelihood signiﬁcantly.
When the arousal prediction functions are implemented in
the optimal path planning, the ﬂight paths with the proposed
model show desirable behaviors, in contrast to the uncon-
vincing ﬂight paths with the MSE minimization approach.

Fig. 7: Convex hulls (gray) containing the ﬂight path (blue).
Splitting the Bernstein polynomial curve with De Casteljau’s
algorithm [22], we can determine the convex hulls that tightly
contain the curve.

planning framework, we use the LGL quadrature [23] to
approximately calculate the cost to minimize, and we use
Bernstein polynomials to check for collision avoidance [4].

A. Finite Dimensional Optimization

Both Bernstein polynomial curves and interpolation
polynomial curves with LGL nodes are two equivalent
parametrizations for a polynomial trajectory. Consider a 2D
trajectory time function p(t) := [x(t), y(t)]⊤ as an nth order
polynomial in x(t) and y(t). We present a brief overview of
both equivalent representations.

1) A degree n Bernstein polynomial is given by:

¯pkbn

n
∑
k=0
k(ζ) :=

p(t) =

k(ζ(t)), ζ : [0,t f ]

[0, 1], ζ(t) :=

→

t
t f

,

n
k

(1

where bn
[0, 1], represents
−
−
the polynomial basis, and the coefﬁcients ¯pk are called
control points6 of the Bernstein polynomial.

(cid:1)
2) The interpolation curve is represented as:

kζk, ζ

ζ)n

∈

(cid:0)

p(t) =

n
∑
k=0

pkℓk(η(t)), η : [0,t f ]

[

→

1, 1], η(t) :=

−

2t
t f −

1,

n,i

=k

η(ti)
η(ti)

where pk are interpolation points at time nodes tk, and
η(t)
ℓk(η(t)) := ∏0
are the Lagrange
−
i
η(tk)
≤
≤
−
polynomial basis.

(cid:16)
The nth order polynomial trajectories can be parameterized
by either n + 1 control points ¯pk, or n + 1 interpolation points
pk, and the transformation between the control points and the
interpolation points can be done using matrix multiplication.
The optimal path planning is formulated as the following

(cid:17)

ﬁnite dimensional optimization:

argmin
¯p0,..., ¯pn,t f

J( ¯p0, . . . , ¯pn,t f ),

subject to collision avoidance constraint,

velocity and acceleration constraint,

6Note that the polynomial is a vector equation, so the coefﬁcient ¯pk is

also a vector.

6
Deﬁne a(zn,i) and b(zn,i) as follows:

a(zn,i) := p(y1, . . . , yn, zn,i),
b(zn,i) := p(yn+1, . . . , yN

zn,i, x),

where zn,i denotes the event
posterior, the following recursive equations are used:

. To calculate the

{

|
zn = i
}

a(zn,i) = p(yn

zn,i, x,θold)

|

2
∑
k=1

a(zn

1,k)p(zn

−

zn

1,k, Aold),
−

|

b(zn,i) =

2
∑
k=1

b(zn+1,k)p(yn+1

|

zn+1,k, x,θold)p(zn+1,k

zn,i, Aold),

|

where p(yn

zn,i, x,θold) is calculated using (2) as

|
p(yn

=

zn,i, x,θ)
|
N (yn
0, σ2),
fβ(xn)
−
|
k=1 φkN (yn
∑K
µk, σ2
k ),
|

(cid:26)

if i = 1
if i = 2.

The boundary values a(z1) and b(zN) are determined as
x,θold) and b(zN) = 1. After calculat-
a(z1) = p(z1
ing a(zn) recursively and b(zn), the posterior is determined
as follows:

π1)p(y1
|

|

x, y,θold ) =

p(zn

|

a(zn)b(zn)
x,θold)
p(y
|

,

(9)

p(zn

1, j, zn,k

−

x, y,θold) =

|

a(zn

1, j)p(yn

−

zn,k, xn,θold)A jkb(zn,k)
|
p(y
|

x,θold )

,

(10)

where the likelihood is calculated as

x,θold) =

p(y

|

2
∑
k=1

a(zN,k).

(11)

for

the GMM: Due

conditional
the poste-
xn, yn,θold) is calculated independently from
x, y,θold), by directly using the result on GMM

Posterior
independence assumption of wn
rior p(wn,i
p(zn
from [26] as follows

to the
and zn,

|

|

p(wn,i

|

xn, yn,θold) =

µi,σ2
i )
|
µk,σ2
k )
|

∑K

φiN (yn
k=1 φkN (yn
wn = i
.
}

,

(12)

where wn,i denotes the event

{
2) Calculate Q(θ,θold): Using the poseterior calculated
in (9) and (12) and the likelihood in (5), Q(θ,θold) in
Algorithm 1 is calculated by expanding the log term:

p(z, w

x, y,θold ) log p(y, z, w

|

x,θ)

|

p(z1,i

x, y,θold) logπ1,i

|

Q(θ,θold)
:= ∑
z,w
2
∑
i=1
2
∑
i=1

N
∑
n=2

2
∑
j=1

=

+

+

N
∑
n=1

2
∑
i=1

K
∑
k=1

p(zn

1,i, zn, j

−

x, y,θold) log Ai, j

|

p(zn,i, wn,k

|

x, y,θold) log p(wn

φk)p(yn
|

|

zn,i, wn,k, xn,θ),

where zn,i denotes the event
wn = k

(13)
, wn,k denotes the event
is the (i, j) element of the matrix A, and

zn = i
}

, Ai, j

{

{

}

Fig. 8: Flight paths generated with the proposed model.

Fig. 9: Flight paths generated with the MSE minimization
model.

APPENDIX

The EM algorithm for the proposed model is calculated

by the following three subsequent steps:
1) Determine the Posterior p(z, w

x, y,θold): Using the
conditional independence assumption of the latent variables,
the posterior is factorized as

|

p(z, w

x, y,θold) = p(z

|

|
Now, we can calculate p(z
separately.

x, y,θold)p(w

|

x, y,θold).

(8)

x, y,θold) and p(w

x, y,θold)

|

|

Forward-Backward Algorithm [26]:

zn,i, wn,k, xn,θ) is calculated using the model equation

p(yn
(2) as follows

|

p(yn

=

zn,i, wn,k, xn,θ)
|
N (yn
µ, σ2),
fβ(xn)
|
N (yn
k ),

−
µk, σ2
|

(cid:26)

if i = 1
if i = 2.

(14)

3) Find the maximizer θ∗: As seen in (13) and (14),
each term has a distinct set of parameters. Hence, we can
determine the maximizer for each term independently from
the other terms. From [26] we have the maximizers as
follows:

π∗1,i =

p(z1,i
j=1 p(z1, j

|

∑2

x, y,θold)

x, y,θold)

∑N
l=1 ∑N
∑2

n=2 p(zn
−
n=2 p(zn
−

|
1, j, zn,k

|
1, j, zn,l

x, y,θold)

x, y,θold )

|

A∗j,k =

,

(15)

.

(16)

The maximizer for the last term in (13) is calculated using
the model equation (2). Let L denote the last term in (13).
Using (14), L is written as follows:

p(zn,i,wn,k

x,y,θold ) log p(wn
|

φk)p(yn
|

zn,i,wn,k,xn,θ)
|

K
i=1)
}

L(β,σ,

φi ,µi,σi
{
K
2
∑
∑
i=1
k=1
K
∑
k=1

p(wn,k

N
∑
n=1
N
∑
n=1

x,y,θold ) logφk
|

:=

=

+

+

N
∑
n=1

p(zn,1

x,y,θold ) log
|

1
σ√2π

N
∑
n=1

K
∑
k=1

p(zn,2,wn,k

x,y,θold ) log
|

exp

 −
1
σk√2π

(yn

−

fβ(xn))2
2σ2

exp

(yn

−

−
2σ2
k

!!
µk)2

.

(cid:19)(cid:19)
The variable β∗ := argmaxβ Q(β,θold) is calculated as

(cid:18)

(cid:18)

β∗ := argmin

β

N
∑
n=1

P(zn,1

|

x, y,θold)(yn

−

fβ(xn))2.

(17)

The φ∗i , µ∗i , σ∗i , and σnew are determined using KKT

(Karush-Kuhn-Tucker) condition as follows:

φnew
i =

µnew
i =

n=1 p(wn,i

∑N
n=1 ∑K
∑N

k=1 p(wn,k

|

∑N
n=1 p(zn,2, wn,i
|
∑N
n=1 p(zn,2, wn,i

x, y,θold )

x, y,θold)

|
x, y,θold) yn
x, y,θold )

,

,

∑N

n=1 p(zn,2, wn,i
∑N

|
n=1 p(zn,2, wn,i

|
x, y,θold) (yn

−
x, y,θold )

|

µnew
i

)2

,

∑N

x, y,θold) (yn

n=1 p(zn,1
|
∑N
n=1 p(zn,1

−
x, y,θold )

fβnew (xn))2

.

|

σnew

i =

σnew =

REFERENCES

[1] (2017) Gartner says almost 3 million personal and commercial
[Online]. Available:

drones will
http://www.gartner.com/newsroom/id/3602317

shipped

2017.

be

in

[2] F. Weninger, F. Eyben, and B. Schuller, “On-line continuous-time
music mood regression with deep recurrent neural networks,” in IEEE
International Conference on Acoustics, Speech and Signal Processing
(ICASSP).

IEEE, 2014, pp. 5412–5416.

[3] Z. Ghahramani, “An introduction to hidden markov models and
bayesian networks,” International journal of pattern recognition and
artiﬁcial intelligence, vol. 15, no. 01, pp. 9–42, 2001.

[4] R. Choe, J. Puig, V. Cichella, E. Xargay, and N. Hovakimyan,
“Trajectory generation using spatial pythagorean hodograph bézier
curves,” in AIAA Guidance, Navigation, and Control Conference ,
2015, p. 0597.

[5] B. A. Duncan and R. R. Murphy, “Comfortable approach distance with
small unmanned aerial vehicles,” in IEEE International Conference on
Robot and Human Interactive Communication .
IEEE, 2013, pp. 786–
792.

[6] ——, “Effects of speed, cyclicity, and dimensionality on distancing,
time, and preference in human-aerial vehicle interactions,” ACM
Transactions on Interactive Intelligent Systems (TIIS), vol. 7, no. 3,
p. 13, 2017.

[7] R. Laban and L. Ullmann, “The mastery of movement.” 1971.
[8] M. Sharma, D. Hildebrandt, G. Newman, J. E. Young, and R. Es-
kicioglu, “Communicating affect via ﬂight path: exploring use of
the Laban effort system for designing affective locomotion paths,”
in ACM/IEEE International Conference on Human-Robot Interaction .
ACM, 2013, pp. 293–300.

[9] J. R. Cauchard, K. Y. Zhai, M. Spadafora, and J. A. Landay, “Emotion
encoding in human-drone interaction,” in ACM/IEEE International
Conference on Human-Robot Interaction . ACM, 2016, pp. 263–270.
[10] D. Szaﬁr, B. Mutlu, and T. Fong, “Communicating directionality in ﬂy-
ing robots,” in ACM/IEEE International Conference on Human-Robot
Interaction. ACM, 2015, pp. 19–26.

[11] ——, “Communication of intent in assistive free ﬂyers,” in ACM/IEEE
International Conference on Human-Robot Interaction . ACM, 2014,
pp. 358–365.

[12] J. R. Cauchard, K. Y. Zhai, J. A. Landay, et al., “Drone & me: an ex-
ploration into natural human-drone interaction,” in ACM International
Joint Conference on Pervasive and Ubiquitous Computing . ACM,
2015, pp. 361–365.

[13] C. Widdowson, H.-J. Yoon, V. Cichella, F. Wang, and N. Hovakimyan,
“VR environment for the study of collocated interaction between small
uavs and humans,” in International Conference on Applied Human
Factors and Ergonomics. Springer, 2017, pp. 348–355.

[14] T. Marinho, A. Lakshmanan, V. Cichella, C. Widdowson, H. Cui,
R. M. Jones, B. Sebastian, and C. Goudeseune, “VR study of human-
multicopter interaction in a residential setting,” in IEEE Virtual Reality
(VR), March 2016, pp. 331–331.

[15] M. Benedek and C. Kaernbach, “A continuous measure of phasic
electrodermal activity,” Journal of Neuroscience Methods , vol. 190,
no. 1, pp. 80–91, 2010.

[16] M. C. Mozer, S. Kinoshita, and M. Shettel, “Sequential dependencies
in human behavior offer insights into cognitive control,” Integrated
Models of Cognitive Systems, pp. 180–193, 2007.

[17] A. P. Dempster, N. M. Laird, and D. B. Rubin, “Maximum likelihood
from incomplete data via the EM algorithm,” Journal of the Royal
Statistical Society. Series B (methodological) , pp. 1–38, 1977.
[18] L. Wasserman, All of statistics: a concise course in statistical inference .

Springer Science & Business Media, 2013.

[19] K. Yamazaki and S. Watanabe, “Stochastic complexities of hidden
Markov models,” in Neural Networks for Signal Processing, 2003.
IEEE, 2003, pp. 179–188.
NNSP’03. 2003 IEEE 13th Workshop on.
[20] B. Uria, M. Côté, K. Gregor, I. Murray, and H. Larochelle, “Neural
autoregressive distribution estimation,” Journal of Machine Learning
Research, vol. 17, no. 205, pp. 1–37, 2016.

[21] V. Cichella, I. Kaminer, C. Walton, and N. Hovakimyan, “Optimal
motion planning for differentially ﬂat systems using Bernstein approx-
imation,” IEEE Control Systems Letters, vol. 2, no. 1, pp. 181–186,
2018.

[22] G. E. Farin and D. Hansford, The essentials of CAGD. AK Peters

Natick, MA, 2000.

[23] G. Elnagar, M. A. Kazemi, and M. Razzaghi, “The pseudospectral
legendre method for discretizing optimal control problems,” IEEE
Transactions on Automatic Control, vol. 40, no. 10, pp. 1793–1796,
1995.

[24] I. M. Ross and M. Karpenko, “A review of pseudospectral optimal
control: From theory to ﬂight,” Annual Reviews in Control, vol. 36,
no. 2, pp. 182–197, 2012.

[25] W. I. Zangwill, “Non-linear programming via penalty functions,”

Management science, vol. 13, no. 5, pp. 344–358, 1967.

[26] C. M. Bishop, Pattern recognition and machine learning . Springer,

2006.

 
