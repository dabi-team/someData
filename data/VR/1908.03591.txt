9
1
0
2

g
u
A
9

]

C
H
.
s
c
[

1
v
1
9
5
3
0
.
8
0
9
1
:
v
i
X
r
a

Toward a Taxonomy of Inventory
Systems for Virtual Reality Games

Sebastian Cmentowski
University of Duisburg-Essen
Duisburg, 47057, Germany
sebastian.cmentowski@uni-
due.de

Andrey Krekhov
University of Duisburg-Essen
Duisburg, 47057, Germany
andrey.krekhov@uni-due.de

Ann-Marie Müller
University of Duisburg-Essen
Duisburg, 47057, Germany
ann-marie.mueller@stud.uni-
due.de

Jens Krüger
University of Duisburg-Essen
Duisburg, 47057, Germany
jens.krueger@uni-due.de

Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).

Copyright held by the owner/author(s).
CHI PLAY EA ’19, October 22–25, 2019, Barcelona, Spain
ACM 978-1-4503-6871-1/19/10.
https://doi.org/10.1145/3341215.3356285

Abstract
Virtual reality (VR) games are gradually becoming more
elaborated and feature-rich, but fail to reach the complex-
ity of traditional digital games. One common feature that is
used to extend and organize complex gameplay is the in-
game inventory, which allows players to obtain and carry
new tools and items throughout their journey. However, VR
imposes additional requirements and challenges that im-
pede the implementation of this important feature and hin-
der games to unleash their full potential. Our current work
focuses on the design space of inventories in VR games.
We introduce this sparsely researched topic by construct-
ing a ﬁrst taxonomy of the underlying design considerations
and building blocks. Furthermore, we present three differ-
ent inventories that were designed using our taxonomy and
evaluate them in an early qualitative study. The results un-
derline the importance of our research and reveal promising
insights that show the huge potential for VR games.

Author Keywords
Virtual Reality Games; Inventory; Taxonomy; Interaction;
User Interfaces; Virtual Environments; Usability

CCS Concepts
•Human-centered computing → Virtual reality; Graphical
user interfaces; •Software and its engineering → Interac-
tive games; Virtual worlds software;

 
 
 
 
 
 
Motivation
More and more players immerse themselves in virtual en-
vironments. Head-mounted displays (HMDs) and tracked
hand controllers enable unmatched levels of agency and
interactivity and can provide an enjoying experience in vir-
tual reality (VR). In an effort to enrich the player experience
even further, latest research work has already tackled a
broad set of challenges: Novel navigation techniques [4,
9] allow the players to explore vast open worlds on their
own and intuitive controller designs [10, 18] transform these
worlds into interesting and interactive experiences.

However, many VR games still fail to reach the complexity
of traditional digital games. One example of typically over-
looked features is the in-game inventory [17]. It allows play-
ers to acquire new tools and goods throughout their journey
and plays an important role in character development. In
this work, we establish a starting point for this important
topic. Our main contribution is the construction of a ﬁrst
taxonomy covering the broad design space of inventories
in VR games, including the different requirements and de-
sign possibilities. Based on this preliminary taxonomy, we
present three different inventory systems: Flat Grid, Vir-
tual Drawers, and Magnetic Surface. The prototypes were
evaluated in a small-scale qualitative study to gather ﬁrst
insights. The player feedback is used to generate early de-
sign implications and potential future research questions.

Design Considerations for Inventories
The use of inventories dates back to the beginning of dig-
ital games as such [6, 13]. They have yet evolved into a
standard feature that is used in a majority of current games.
Even though the use of VR introduces additional challenges
and novel design possibilities, the major purpose of these
interfaces stays the same: storing items. The success of a
particular implementation depends on various design de-

cisions that impact four crucial factors: comprehensibility,
interactivity, contextual embedding, and personalization.

Comprehensibility. The information for every item that is
currently stored in an inventory needs to be displayed in
a comprehensible manner. Displaying too many items or
meta-information at once on a limited screen can easily
lead to visual cluttering. This increases the necessary men-
tal effort and processing time exponentially and can easily
spoil the whole gameplay [15].

Interactivity. In general, managing and interacting with the
inventory and the stored items should be as easy and quick
as possible. In extreme cases, situation-dependent controls
could be used to simplify the necessary user actions to a
minimum. However, such game designs bear the risk of re-
ducing the feeling of agency [15]. Especially, in VR games,
players like to interact with the environment and to feel in
control over the resulting actions.

Contextual Embedding. Ultimately, each inventory needs
to ﬁt the game’s context and purpose. Most implementa-
tions can be subdivided into two general groups: The carry
mode focuses on few, quickly accessible items, whereas
the loot mode requires easily manageable storage [8, 15].
A typical example of a pure carry mode is the game Fort-
nite [7], whereas the inventory system of Diablo III [2] is a
perfect remedy for loot-based games.

Personalization. The role of inventories as personal and
individual space has a huge impact on the game experi-
ence. Especially in linear games, players usually have little
to no chance to individualize their gameplay. The only true
exception is an inventory, where they have complete free-
dom over content and organization [15]. Therefore, freely
manageable inventories can provide signiﬁcant advantages
to character identiﬁcation and presence.

Figure 1: Virtual backpack used
as inventory in the game The
Gallery - Episode 1: Call of the
Starseed [3].

Figure 2: The linear quick bar for
frequently used items in the
game Minecraft [12].

Figure 3: The inventory of the
game Green Hell [5] is structured
by the player alone.

Taxonomy of Inventories

(1) Inventory Interface:
• type: overlays, virtual ob-

jects, real proxies

• position: static or moveable
• style: thematic or realistic

(2) Item Representation:
• design: realistic or abstract
• scale: scale-preserving,

miniaturizing, normalizing

(3) Item Arrangement:
• layout: linear, grid, ring,

slots, unrestricted

• capacity: unlimited, ﬁxed,

dynamic

• ordering: unstructured,

sortable, sorted

• improvements: categories,
hierarchies, stackability

(4) Interaction:
• open/close: click or gesture
• adding items: automatic or

manual

• item manipulation: raycast-
based or physical action

Building Blocks of Inventories for VR
Inventories are more than simple user interfaces and con-
sist of multiple different components that need to be taken
into consideration. In this section, we decompose the inven-
tory into atomic building blocks for a better understanding
and analysis.

Inventory Interface
The interface is the basic building block that contains all
storage items and determines the position, shape, and de-
sign of the whole inventory. In contrast to traditional digital
games, the use of VR introduces a whole range of possi-
ble interface types. Apart from simple overlays such as the
2D user interface in SteamVR Home [16], the inventory
could be presented as a virtual object in the world. This in-
cludes moveable items such as the backpack inventory in
The Gallery [3] (cf. Figure 1) and ﬁxed access points, e.g,
chests or mailboxes. Alternatively, it is possible to attach
the inventory directly to the player. A typical example is the
virtual belt in the game Batman: Arkham VR [14]. Another
intriguing approach to further increase realism and agency
is the use of a collection of real physical proxies [10, 18].

Inventories in VR games must be placed in a 3D virtual
environment which introduces the depth as an additional
parameter. Depending on the positioning in relation to the
player, the inventory might be occluded by the surrounding
or could obstruct the player’s view. Both cases usually lead
to frustration and decreased usability. Therefore, it might be
favorable to give the player the chance to move the storage
freely or hide it completely. This feature could also provide
further beneﬁts in terms of personalization and interactivity.

Usually, VR applications would try to maximize the player’s
immersion into the virtual scenery and to avoid any the-
matic cuts. Therefore, it seems natural to match the in-
ventory’s style as closely as possible to the surrounding

environment. On the other hand, abstract menus offer the
advantage of prior knowledge: Most people have already
experienced a storage interface of any kind and should be
proﬁcient to a certain degree. Therefore, a more abstract
design could help to reduce the necessary cognitive load.

Item Representation
Every in-game item placed within the inventory needs a
graphical or textual representation. The chosen concept
strongly inﬂuences the type and amount of information
that is conveyed to the player. Realistic designs allow for
detailed conclusions on the object’s shape and physical
properties, while also merging into the virtual scenario. In
return, a more abstract style, e.g., icons or texts, reduce
the visual clutter and make it possible to increase the in-
formation density for each item. It is to note that the choice
between a 2D and 3D representation is not directly linked
to the degree of realism. Instead, this decision is usually
based on the type of inventory interface being used.

One key aspect of the chosen representation is the dis-
played size: Preserving the original physical scale of ob-
jects does not only allow players to draw conclusions on
relative ratios and actual sizes but makes it possible to re-
move any discrepancy between the real item and its rep-
resentation in the inventory. However, this design choice
bears the risk to quickly ﬁll the limited inventory space with
large items and introduce new problems such as item oc-
clusion. The alternative is to miniaturize or normalize the
item’s scale when adding the object to the inventory.

Item Arrangement
The arrangement of the various items in the inventory is
at least as important as the representation itself. Depend-
ing on the actual use case, the layout should be focused
on either accessibility, management, or overview of the
content. In digital games, the most common choices are

linear shapes for carry -inventories, such as the quick bar
in Minecraft [12] (cf. Figure 2), and grids, e.g., in World of
Warcraft [1], when dealing with larger amounts of items.
Other possible designs include ring menus or ﬁxed slots.
For immersive experiences aiming to increase presence
and personalization, it seems likely to provide more free-
dom to the player. However, free object placement bares
the risk to produce obstructive and chaotic inventories that
miss the forced ordering through grids. Nevertheless, this
drawback could be used as a gameplay mechanic, like in
the survival game Green Hell [5] (cf. Figure 3).

A common problem of many games is a cluttered inventory
providing poor comprehensibility and overview. Reasons
are either massive storage sizes or extreme information
densities. The easiest solution is a limitation of the inven-
tory capacity or a reduction of the provided information per
item. Many games decide to include an additional feature
to extend the maximum storage during the journey. How-
ever, this step should be combined with an increase of the
interface size to preserve the relative information density.

In addition to the particular item arrangement strategy, in-
ventories provide different amounts of automatic ordering.
This ranges from complete ﬂexibility and self-administered
organization, through optional sorting techniques, to ﬁxed
arrangements such as the LIFO (last in, ﬁrst out) approach.
After all, inventories in VR should maximize the player’s
freedom and control over the item arrangement without sac-
riﬁcing too much comprehensibility. The overview could be
improved by including optional concepts such as different
categories, hierarchies, or stackability of items. Nonethe-
less, only the minority of these features have been used in
VR games yet and it remains to be investigated whether
these can be combined with other aspects such as realistic
item representation or free object arrangement.

Interaction with Inventory
VR offers completely new interaction approaches using
tracked controllers and spatial movements. Therefore, the
underlying interactions with the inventory are by far the
most intriguing difference in comparison to non-VR games.
Instead of using a simple button click, games could imple-
ment more natural and interactive ways to open the inven-
tory. A perfect example is The Gallery [3], where players
reach behind themselves to retrieve a virtual backpack. Ad-
ditionally, it is easy to give the players full control over the
position and orientation of the inventory and allow them to
drag it around freely. This opens novel design concepts and
provides a very high level of interactivity.

The by far most important mechanism is adding and re-
moving items in the inventory. Many non-VR games tend
to collect items automatically. However, this approach is
less favorable for VR-games. Instead, they could greatly
proﬁt from a manual pick-up-process to improve the player’s
agency. This could be achieved either through more ab-
stract raycast-aiming or more natural and physical gestures.
Especially direct interactions with virtual objects outperform
distant object selection and manipulation signiﬁcantly [11].

Inventory Designs
The main goal for designing different inventories was to
cover the most interesting aspects of the taxonomy and
gather ﬁrst valuable insights. The chosen number of three
implementations avoids binary opinions and instead en-
courages players to provide detailed and in-depth feedback.
At the same time, the limited amount prevents subjects from
getting lost and potentially frustrated. Our designs differ in
various aspects, such as the interface type, item style, or
underlying interaction concept. To avoid arbitrary feedback
and ensure comparable results, we deﬁned a set of three
rules that are shared between all prototypes:

Figure 4: Items are added to the
Flat Grid using raycast aiming.

Figure 5: The Virtual Drawers
contain equally-scaled items.

Figure 6: Players can move the
inventory using a handle.

1. A realistic and consistent style is preserved.
2. The inventory is activated with a single button click
and starts at a ﬁxed position in the virtual world de-
pending on the player’s view.

3. There are no additional features such as sorting, cat-

egories, hierarchies, or item stackability.

Flat Grid
The ﬁrst inventory design is a ﬂat two-dimensional over-
lay that is placed at a static position 1.5m in front of the
player’s head upon activation. The stored items are ar-
ranged using a regular grid of three times three virtual slots.
This ﬁxed size is chosen to provide some degree of vari-
ety for object placement while also mimicking the case of a
limited inventory. Each object in the inventory is presented
as a realistic 2D image. This prototype closely matches the
most common menus in current VR games (cf. SteamVR
Home [16]). It should provide a simple and comprehensible
design that lacks realism and free object placement.

The interaction with the inventory uses raycast pointing:
Players could point at an occupied slot and press the button
for grabbing objects to retrieve the item. Similarly, releasing
an object while pointing at an empty slot would insert the
item into the inventory (cf. Figure 4). This interaction design
is consistent with the other prototypes in terms of the nec-
essary buttons and expected behavior but replaces natural
grabbing through an abstract raycast aiming.

Virtual Drawers
The second design shares the same grid of nine slots as
the Flat Grid inventory. However, it is displayed as a vir-
tual 3D shelf ﬂoating in the world (cf. Figure 5). The stored
items are placed on one of the shelf boards as realistic 3D
shapes that are scaled to a normalized size to ﬁt the avail-
able space. The items are added to the inventory by placing

them physically into one of the slots instead of using ray-
casts. Players have the opportunity to grab the whole inven-
tory using a handle located at one side and move it freely
within the environment (cf. Figure 6). In contrast to the Flat
Grid, this design features a more realistic appearance and
includes more natural and direct interaction.

Magnetic Surface
The last inventory is a simple metallic work-plate ﬂoating
at a convenient position to the player’s side (cf. Figure 7).
Similarly to the Virtual Drawers, the plate can be positioned
freely in the world using an attached handle. This inven-
tory provides the most freedom and control to the user: it
avoids any forced organization in the form of grids but uses
a magnetic force to stick all stored items to the surface of
the work-plate (cf. Figure 8). Players can simply put any
object onto the plate using natural interaction and it will pre-
serve the chosen position and rotation, as well as the item’s
original scale and shape. Consequently, this inventory has
no maximum capacity or ﬁxed density. Instead, the players
are in full control over item arrangement and positioning.
They can even use the physical properties of held items to
push other stored items around.

Evaluation and Discussion
We executed an early qualitative study with 8 participants (3
female, mean age: 29.1, SD = 6.19) to gather insights into
how players would use and experience the different inven-
tories. The used scenario was a virtual construction ground
featuring all kinds of tools and materials (cf. Figure 9). This
provided a suitable testbed for the evaluation as it allowed
the participants to interact with various different items and
simulate different uses of inventories (cf. Figure 10). During
the study, the subjects were brieﬂy introduced to all three
prototypes in random order. They were encouraged to ex-
plore the different features on their own and provide feed-

Figure 7: The Magnetic Surface
allows for ﬁne-graded positioning.

Figure 8: Items stick to the
Magnetic Surface until removed.

Figure 9: The construction
scenario used as testbed game.

back in an audio-recorded think-aloud process. After exam-
ining all aspects of the current inventory to a full degree, the
subjects could move on to the next implementation while
having the option to return at a later time.

In general, the feedback for all inventories was very pos-
itive. Every participant was able to learn the underlying
concepts quickly and provide detailed feedback. One ma-
jor concern with all designs was the occlusion problem
between environment and inventory. As VR inventories
have to be placed within a 3D scenario, they can easily ob-
struct important content or appear behind other objects.
This weakness was partially ﬁxed by the option to grab and
move the inventory to custom spots. This technique allowed
for more personalization and was the most appreciated fea-
ture throughout the study. An interesting request from one
participant was to reduce the setup time by "restoring the
previously adjusted position relative to the head"(P3).

Being asked for their personal favorites, almost all partic-
ipants gave a similar ranking beginning with the Flat Grid
as the least interesting choice and the Magnetic Surface
as the clear winner. At ﬁrst sight, this contradicts the feed-
back for the Magnetic Surface being described as the least
scaleable, structured, and productive of all three inven-
tories. However, players clearly emphasized the impor-
tance of interactivity, authenticity, and realism. One of the
explicitly-named inﬂuencing factors was the shape- and
size-preserving behavior of the Magnetic Surface prototype.
A common suggestion was to implement this feature into
the Virtual Drawers by "resizing the shelf boards automati-
cally to ﬁt any item at its original scale"(P5).

Even though most VR applications use raycasts to interact
with menus, most participants initially tried to use the Flat
Grid by placing items with physical grabbing. This is a clear
sign towards the superiority of natural interactions.

Finally, we asked the subjects to propose use-cases for ev-
ery inventory. The broad consensus was to choose the Flat
Grid for efﬁciency in larger and more loot-based games.
One participant mentioned an interesting approach to in-
crease the performance even further: "inserting an item to
an occupied slot should swap both items to avoid additional
steps"(P1). The virtual drawers were generally preferred as
a more interactive alternative that is best suited for larger
worlds and manageable item counts. Both approaches
were described as "storage inventories"(P7) for less often
used items. Finally, the Magnetic Surface was sometimes
called "working storage"(P8) and was preferred for few reg-
ularly used carry-items. Interestingly, some participants
liked the idea of using this inventory in multiplayer games to
provide mutual storage shared by all players.

Conclusion and Future Work
We proposed a ﬁrst step toward the use of inventories in
virtual environments. Our preliminary taxonomy explains
the necessary considerations, building blocks, and potential
design choices to be considered when creating invento-
ries for VR games. Our qualitative study supports our ba-
sic assumption that these interfaces could provide novel
game mechanics and improve game experience and en-
joyment. The detailed player feedback revealed ﬁrst inter-
esting insights backing our taxonomy approach and hinting
toward additional parameters and design considerations
such as the occlusion problem. In our future work, we will
reﬁne and extend the existing taxonomy to incorporate ad-
ditional player and developer input. Additionally, we suggest
investigating the overall signiﬁcance of storage systems
in VR games to explore the effects of these interfaces on
the game experience. The ultimate goal is to build a fun-
damental research body on VR inventories incorporating a
comprehensive taxonomy and a set of design guidelines to
be used by researchers and practitioners.

Figure 10: Players used various
items to test the inventories.

"The abstract nature of
the ﬂat grid somehow con-
tradicts my expectations
towards an immersive VR-
game." (P1)

"I would love to empty the
virtual drawers by turning
them upside down." (P2)

"I miss the stackability of
similar items." (P5)

"The magnetic surface is like
a scratchpad where I can
arrange everything to my
needs." (P8)

REFERENCES
1. Blizzard Entertainment. 2004. World of Warcraft. Game
[PC]. (23 November 2004). Vivendi, Paris, France.

Proceedings of the 2018 Annual Symposium on
Computer-Human Interaction in Play. ACM, ACM, New
York, NY, USA, 243–256.

2. Blizzard Entertainment. 2012. Diablo 3. Game [PC].

10. Andrey Krekhov, Katharina Emmerich, Philipp

(15 May 2012). Blizzard Entertainment, Irvine,
California, United States.

3. Cloudhead Games Ltd. 2016. The Gallery - Episode 1:
Call of the Starseed. Game [SteamVR]. (5 April 2016).
Cloudhead Games Ltd., Vancouver Island, Canada.

4. Sebastian Cmentowski, Andrey Krekhov, and Jens

Krüger. 2019. Outstanding: A Perspective-Switching
Technique for Covering Large Distances in VR Games.
In Extended Abstracts of the 2019 CHI Conference on
Human Factors in Computing Systems. ACM, ACM,
New York, NY, USA, LBW1612.

5. Creepy Jar. 2018. Green Hell. Game [PC]. (29 August

2018). Creepy Jar, Warsaw, Poland.

6. Doug Dyment. 1968. Hamurabi. Game [PC]. (1968).

7. Epic Games and People Can Fly. 2017. Fortnite. Game

[PC]. (25 July 2017). Epic Games and Gearbox
Publishing, Raleigh, North Carolina, United States.

8. Juho Hamari and Vili Lehdonvirta. 2010. Game design
as marketing: How game mechanics create demand for
virtual goods. International Journal of Business
Science & Applied Management 5, 1 (2010), 14–29.

9. Andrey Krekhov, Sebastian Cmentowski, Katharina
Emmerich, Maic Masuch, and Jens Krüger. 2018.
GulliVR: A walking-oriented technique for navigation in
virtual reality games based on virtual body resizing. In

Bergmann, Sebastian Cmentowski, and Jens Krüger.
2017. Self-transforming controllers for virtual reality ﬁrst
person shooters. In Proceedings of the Annual
Symposium on Computer-Human Interaction in Play.
ACM, ACM, New York, NY, USA, 517–529.

11. Mark R Mine, Frederick P Brooks Jr, and Carlo H
Sequin. 1997. Moving objects in space: exploiting
proprioception in virtual-environment interaction.. In
SIGGRAPH, Vol. 97. ACM Press/Addison-Wesley
Publishing Co., New York, NY, USA, 19–26.

12. Mojang. 2009. Minecraft. Game [PC]. (17 May 2009).

Mojang, Stockholm, Sweden.

13. Don Rawitsch, Bill Heinemann, and Paul Dillenberger.
1971. The Oregon Trail. Game [PC]. (3 December
1971). Minnesota Educational Computing Consortium
and The Learning Company, Minnesota.

14. Rocksteady Studios. 2016. Batman: Arkham VR.

Game [PS4 VR]. (13 October 2016). Warner Bros.
Interactive Entertainment, Burbank, California, United
States.

15. Paul Sztajer. 2010. Mechanical Breakdown: The

Inventory. (August 2010). Retrieved July 4, 2019 from
https://kotaku.com/
mechanical-breakdown-the-inventory-5612149

16. Valve. 2014. SteamVR. Software [PC]. (January 2014).
Valve, Bellevue, Washington State, United States.

17. Konstantin Wegner, Sven Seele, Helmut Buhler,

18. André Zenner and Antonio Krüger. 2019. Drag: on: A

Sebastian Misztal, Rainer Herpers, and Jonas Schild.
2017. Comparison of two inventory design concepts in
a collaborative virtual reality serious game. In Extended
Abstracts Publication of the Annual Symposium on
Computer-Human Interaction in Play. ACM, ACM, New
York, NY, USA, 323–329.

Virtual Reality Controller Providing Haptic Feedback
Based on Drag and Weight Shift. In Proceedings of the
2019 CHI Conference on Human Factors in Computing
Systems. ACM, ACM, New York, NY, USA, 211.

