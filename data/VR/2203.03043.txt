High Speed Emulation in a Vehicle-in-the-Loop
Driving Simulator

Elliot Weiss and J. Christian Gerdes

1

2
2
0
2

r
a

M
1
2

]

Y
S
.
s
s
e
e
[

2
v
3
4
0
3
0
.
3
0
2
2
:
v
i
X
r
a

Abstract—Rendering accurate multisensory feedback is critical
to ensure natural user behavior in driving simulators. In this
work, we present a virtual reality (VR)-based Vehicle-in-the-
Loop (ViL) simulator that provides visual, vestibular, and haptic
feedback to drivers in high speed driving conditions. Designing
our simulator around a four-wheel steer-by-wire vehicle enables
us to emulate the dynamics of a vehicle traveling signiﬁcantly
faster than the test vehicle and to transmit corresponding haptic
steering feedback to the driver. By scaling the speed of the test
vehicle through a combination of VR visuals, vehicle dynamics
emulation, and steering wheel force feedback, we can safely
and immersively run experiments up to highway speeds within
a limited driving space. In double lane change and highway
weaving experiments, our high speed emulation method tracks
yaw motion within human perception limits and provides sensory
feedback comparable to the same maneuvers driven manually.

Index Terms—Driving simulator, virtual reality, vehicle-in-the-

loop, four-wheel steering, haptic feedback.

I. INTRODUCTION

D RIVING simulators are indispensable tools for under-

standing driver behavior and designing driver assistance
systems. They enable the simulation of scenarios that are too
dangerous to replicate in real life, such as overtaking on the
highway. High speed scenarios are critical for testing driver
assistance systems, as drivers must make quick and precise
decisions to avoid other vehicles while keeping their vehicle
stable. By designing a driving simulator speciﬁcally for high
speed scenarios, we can better understand and assist drivers
in risky situations on the highway.

A central challenge in the design of driving simulators is
providing sensory feedback that elicits natural driving behavior
from users. Beyond visual feedback, drivers rely on their
internal perception of vehicle motion – sensed by the vestibular
system in the inner ear – and the forces felt on their hands
from the steering wheel for effective vehicle control. Repa et
al. observe the importance of lateral motion cues in studies
of driver lane keeping in the presence of random wind gust
disturbances, ﬁnding yaw motion to be particularly important
in highly dynamic maneuvers [1]. Reymond et al. additionally
demonstrate that drivers rely on lateral acceleration cues to
modulate speed while driving on curved roads [2]. Regarding
haptic feedback, Tofﬁn et al. have studied driver adaptation
to changes in haptic steering wheel feedback in driving
simulators, ﬁnding that lateral vehicle control can be greatly
inﬂuenced by changes in haptic feedback [3]. Cutlip et al.
explore the importance of steering feedback when switching

The authors are with the Department of Mechanical Engineering, Stan-
ford University, Stanford, CA 94305 USA (e-mail: elliotdw@stanford.edu,
gerdes@stanford.edu).

from autonomous to manual control in driving simulators and
report both fewer collisions and a greater awareness of control
transitions among study participants when appropriate haptic
feedback is present [4].

Moving platform driving simulators can provide multisen-
sory feedback in high speed settings but typically at great
cost and with limitations on the accelerations and angular
velocities rendered to users. Yaw motion tends to be limited on
hexapod-style platforms, which are commonly used in driving
simulators. For example, Qazani et al. run experiments with
a hexapod simulator that can only rotate ±20◦ about the yaw
axis [5]. Moreover, great research effort has gone into the
development of motion cueing algorithms that reproduce ve-
hicle motion within a limited simulator workspace. Reymond
and Kemeny present a common method of ﬁltering reference
accelerations into high and low frequency components for
replication on the simulator via transient platform motion
and tilting, respectively [6]. This approach works well for
smaller transient accelerations but fails to replicate motion
once the platform can no longer accelerate in a given direction.
In response to this limitation, simulator designers commonly
build large facilities and use washout algorithms that slowly
return the driver to the center of the simulator below their
threshold of motion perception. Although more sophisticated
motion cueing algorithms based on optimal and learning-based
control have been developed for moving platforms, as shown
by Garrett and Best [7] and by Asadi et al. [8], the same
limitations on rendering accelerations and rotations still exist.
Vehicle-in-the-Loop (ViL) simulators represent an alterna-
tive approach to simulator design by placing the driver in a
moving vehicle while viewing a virtually rendered driving
scene. Bock et al. developed an early ViL system using
an augmented reality (AR) head-mounted display (HMD) to
simulate other trafﬁc participants [9]. Similarly, Moussa et
al. describe an AR system using see-through video to run
scenarios with other vehicles and variable weather conditions
such as fog [10]. Several other ViL simulators, such as those
presented by Karl et al. [11], Goedicke et al. [12], and
Park et al. [13], use virtual reality (VR) to visually immerse
drivers. Contrasted with moving platform simulators, drivers
experience the full motion of the vehicle across a wide range
of frequencies in ViL and interact with the steering wheel of a
real vehicle, enabling a more immersive experience. However,
in parallel to motion platforms, ViL simulators have physical
constraints on the range of motion available while testing
based on the size of the track or proving ground in which tests
take place. This limitation constrains the speed of the ViL test
vehicle, as the space needed for safe testing increases with
vehicle speed given the larger runway needed to accelerate to

 
 
 
 
 
 
and decelerate from high speeds during an experiment.

We propose a method to overcome this limitation for ViL
simulators that we call high speed emulation. In this method,
we visually render the virtual vehicle seen by the driver
through a VR HMD at a faster speed than the real vehicle. This
idea is motivated by the observation that humans can perceive
rotations and accelerations via their vestibular system but
cannot easily distinguish between different velocities without
a visual reference. To create a fully immersive experience
while emulating high speeds, we use a four-wheel steer-by-
wire (SBW) system to reproduce the yaw rate and lateral
acceleration of the virtual vehicle driving at a higher speed
while the real vehicle travels safely at a lower speed. Russell
and Gerdes show that, with a four-wheel steer vehicle, the
vehicle’s motion can be altered to emulate a vehicle with
different handling characteristics [14]. Akar and Kalkkuhl use
four-wheel steering to mimic the handling of buses and vans
[15], and Russell and Gerdes demonstrate its use for reproduc-
ing the dynamics of driving on low friction surfaces [16]. We
apply similar techniques for emulating the lateral dynamics of
a faster moving vehicle, thus providing appropriate vestibular
feedback for the driver. Further, we use SBW technology
to generate custom haptic feedback on the steering wheel
regardless of the front road wheel angle, which may differ
greatly from the driver’s steering command when emulating
high speeds.

In this paper, we present a ViL driving simulator designed
with a four-wheel SBW vehicle that provides realistic multi-
sensory feedback to drivers. To the best of our knowledge, this
is the ﬁrst work showing a ViL system that uses four-wheel
steer or SBW technology. We demonstrate that this driving
simulator is capable of providing accurate visual, vestibular,
and haptic feedback while emulating the motion of a high
speed vehicle. Our high speed emulation approach enables
experiments to take place within a limited testing area, greatly
increasing safety while the driver is immersed in scenarios
up to highway speeds. We further show that the four-wheel
steering controller used to track lateral motion has stable error
tracking dynamics. We verify our approach with ISO double
lane change and highway weaving experiments at a range of
lateral accelerations and speeds.

The remainder of this paper is structured in the following
way. Section II provides a description of our ViL system
architecture and an overview of high speed emulation. Section
III presents the vehicle dynamics reference model used to
simulate motion at a scaled speed. Section IV then describes
our method for rendering visual, vestibular, and haptic feed-
back associated with the high speed reference model. Next,
Section V demonstrates our high speed emulation method with
results from various experiments. Section VI concludes with
a discussion of limitations and future applications.

II. SYSTEM ARCHITECTURE

A. Hardware and Software

The ViL system combines a virtual driving environment
shown to the driver through a VR HMD with a full-sized
four-wheel SBW vehicle. We use X1, a student-built research

2

TABLE I
RELEVANT X1 PARAMETERS

Name
mass
yaw moment of inertia
distance between CoM and front axle
distance between CoM and rear axle
track width
steering ratio
front tire stiffness
rear tire stiffness
friction coefﬁcient
maximum front steering angle
maximum rear steering angle

Symbol
m
Iz
a
b
d
SR
Cf
Cr
µ
δf max
δrmax

Value
2000
2400
1.52
1.35
1.63
15
75000
110000
0.9
18
33

Units
kg
kg·m2
m
m
m
-
N/rad
N/rad
-
deg
deg

vehicle, as the physical testbed in this work. X1 is an all-
electric steer-, throttle-, and brake-by-wire vehicle. The steer-
ing wheel and road wheels are mechanically decoupled, and
a dedicated motor connected to the steering wheel provides
haptic feedback to the driver. X1 has an OxTS RT4003
transmits high
dual antenna GPS/INS unit on board that
precision position, orientation, linear and rotational velocity,
and acceleration measurements in real time. Table I lists X1’s
parameters.

To create a stereo rendering of the virtual world for the
driver, we use Virtual Test Drive (VTD), a proprietary driving
simulation software package [17]. In VTD, we can set up
safe experiments with other virtual road users in a variety
of environments and update the simulation in real time based
on measurements and computations on board X1. The virtual
scene is displayed to the driver through an Oculus Rift
Development Kit 2 VR HMD. The virtual camera’s roll, pitch,
and yaw angles update according to the orientation of the
driver’s head, which is computed as a fusion of three-axis
accelerometer, gyroscope, and magnetometer measurements
on the HMD, following work by LaValle et al. [18]. The
Robot Operating System (ROS) software package facilitates
real time communication between the VTD simulation, the
Oculus Rift HMD, and X1’s sensors and actuators through
multiple on board computers. Fig. 1 shows a front view of
our ViL platform.

B. Control System Overview

The ﬂow of signals for high speed emulation on X1 is
depicted as a block diagram in Fig. 2. Beginning with the
driver, sensors on X1 measure their steering, throttle, and
brake commands for input to a reference dynamics model. The
reference model additionally takes as input a measurement
of X1’s current speed. This speed is scaled by a constant
factor in the reference model, enabling the model to simulate
the motion of X1 as if it were traveling at a higher speed.
The reference model simulates the tire forces and motion
of a vehicle traveling at the scaled speed. State information
from the reference model feeds into three different modules
that provide sensory feedback to the driver. The position
and heading from the reference model update the motion of
the vehicle in the virtual world, providing the driver visual
feedback associated with the higher speed vehicle motion. The
yaw rate and lateral acceleration of the reference model are

3

Fig. 1. A driver in the ViL simulator on X1.

Fig. 3. A schematic diagram of the double track vehicle model used to
simulate the high speed reference dynamics.

where f > 1 is a user deﬁned scaling factor. Directly scaling
the speed enables the driver to maintain longitudinal control
of the vehicle starting from rest.

tracked using four-wheel steering on X1 to render accurate
vestibular feedback to the driver. The tracking controller uses
tire forces generated in the reference model as feedforward
terms and the real rotation and acceleration of X1 for feedback.
Finally, the front slip angle from the reference model is an
input to a force feedback model used to compute the steering
wheel torque needed for appropriate haptic feedback. The
details of the reference model and the methods used to provide
multisensory feedback to the driver are described in more
detail in the following sections.

A. Lateral Vehicle Dynamics

The lateral motion of the vehicle is more sensitive to steer-
ing inputs at higher speeds. This comes from the observation
that it only requires a small steering input to change lanes on
the highway, while large steering angles are needed to move
the vehicle the same amount laterally at low speeds, such as
in a parking lot. To simulate the lateral dynamics, we use
two states: yaw rate ˜r and lateral velocity ˜uy. The equations
of motion for these states are written in terms of the total
moment ˜Mz and total lateral force ˜Fy as

˙˜r =

˜Mz
Iz
˜Fy
m
We compute the total moment and lateral force on the vehicle
in terms of forces at each tire’s contact patch with the ground

− ˜r˜ux.

˙˜uy =

(2)

˜Mz = a( ˜Fxf l sin ˜δf l + ˜Fyf l cos ˜δf l) ...

+ a( ˜Fxf r sin ˜δf r + ˜Fyf r cos ˜δf r) − b( ˜Fyrl + ˜Fyrr) ...

Fig. 2. Overview of the system used to emulate high speeds.

−

+

d
2
d
2

( ˜Fxf l cos ˜δf l − ˜Fyf l sin ˜δf l) ...

( ˜Fxf r cos ˜δf r − ˜Fyf r sin ˜δf r − ˜Fxrl + ˜Fxrr)

˜Fy = ˜Fxf l sin ˜δf l + ˜Fyf l cos ˜δf l ...

III. REFERENCE DYNAMICS MODEL
The reference dynamics model is central to this work, as
the vehicle state computed by this model directly contributes
to the rendering of visual, vestibular, and haptic feedback. We
base our double track reference model on work by Russell and
Gerdes, who use a similar model for modifying the handling
dynamics of a four-wheel steer vehicle [14]. For clarity, we
print the variables computed within the reference model with
a tilde symbol over top. Fig. 3. shows the reference model
diagrammatically.

The speed in the high speed reference model is the longi-

tudinal velocity measured on X1, ux, scaled by a constant

˜ux = f ux,

(1)

+ ˜Fxf r sin ˜δf r + ˜Fyf r cos ˜δf r + ˜Fyrl + ˜Fyrr.

(3)
Summing moments and forces in this way is useful, as we
use ˜Mz and ˜Fy to compute feedforward forces in the tracking
controller. The front road wheel angles directly relay the
driver’s steering command as ˜δf r = ˜δf l = δhw/SR, where
δhw is the measured hand wheel angle.

Derived from 2D rigid body kinematics, the lateral acceler-

ation at the vehicle’s center of mass is
˜ay = ˙˜uy + ˜r˜ux.

(4)

These two terms arise from modeling the vehicle as a trans-
lating and rotating rigid body that experiences both linear and
centripetal acceleration components.

Reference rotation, acceleration, and tire forcesVR HeadsetFront and rear steering anglesSteering wheel FFB torqueDriverReference Dynamics ModelFFB ModelTracking ControllerHaptic feedbackVestibular feedbackVisual feedbackDriver control inputsReference front slip angleReference position and headingReal rotation and accelerationReal longitudinal velocityVehicle (X1)Steering WheelB. Tire Model

The heading and position coordinates of the virtual vehicle

4

To determine the forces used in the equations of motion,
we need to compute slips and forces for each tire based on
vehicle state and control input values. We use a coupled slip
tire model to simultaneously calculate the longitudinal and
lateral forces on each tire. The longitudinal slip ˜σx and lateral
slip ˜σy have a combined magnitude of ˜σ =
y. The
slips are inputs to a coupled slip form of Pacejka’s brush tire
model [19], which computes the forces on each tire as

x + ˜σ2
˜σ2

(cid:113)

˜Fx =

˜σx
˜σ

˜F , ˜Fy =

˜σy
˜σ

˜F ,

where

˜F =

(cid:40)

˜σC − ˜σ2C2
3µFz
µFz,

+ ˜σ3C3
27µ2F 2
z

,

˜σ ≤ σsl
˜σ > σsl,

(5)

(6)

and σsl = (3µFz/C) is the peak slip magnitude before the
tire is fully sliding. We assume an isotropic cornering stiffness
C on each tire, deﬁned for the front and rear axles in Table I.
Slips arise from the deformation of rubber along each tire’s
x and y axes. We compute longitudinal slip ˜σx from the
driver’s longitudinal force input on each wheel by inverting the
coupled slip model in (5) and (6) with ˜σy = 0, following the
approach presented by Russell and Gerdes in [14]. The driver’s
throttle and braking commands linearly map to longitudinal
forces on each tire using a symmetric force distribution
between the left and right tires of each axle. Lateral tire slip is
calculated as a function of longitudinal tire slip following the
geometric relationship ˜σy = (˜σx − 1) tan ˜α, where ˜α is the
slip angle. We compute ˜α for each tire as the angle between
its velocity vector and its centerline, for example on the front
left tire

evolve according to

˙˜ψ = ˜r
˙˜E = −˜ux sin ˜ψ − ˜uy cos ˜ψ
˙˜N = ˜ux cos ˜ψ − ˜uy sin ˜ψ,

(8)

where ˜ψ is the reference vehicle’s heading angle relative
to north, and ( ˜E, ˜N ) are the reference vehicle’s position
coordinates in an inertial reference frame. No matter the
motion of the real vehicle, the rotations and velocities of the
virtual vehicle seen by the driver in the VR HMD match the
dynamics of the reference model. In addition, the reference
speed ˜ux is shown on a heads up display in the virtual vehicle.
Fig. 4 shows the driver’s virtual view during a high speed
maneuver overlaid with a ﬁrst-person view inside X1.

Fig. 4. The real and virtual worlds overlaid during a test.

˜αf l = tan−1

(cid:32)

(cid:33)

˜uy + a˜r
˜ux − ˜r d
2

− ˜δf l.

(7)

B. Vestibular Feedback

This method provides sufﬁcient detail for computing tire
slips and forces in our double track reference model. Other
methods that capture tire nonlinearities, for example those
that incorporate wheel speed dynamics, could also be used
to model tire forces in this approach.

IV. MULTISENSORY FEEDBACK

We use the states and forces computed in the reference
model to render cohesive visual, vestibular, and haptic feed-
back to the driver. Our goal is to fully immerse the driver in
the high speed setting while driving at a lower speed.

Drivers take cues from their vehicle’s motion to maneuver
safely on the road. We track yaw rate ˜r and lateral acceleration
˜ay, so that the driver receives vestibular feedback consistent
with the high speed motion of the reference vehicle. We have
developed a controller that computes the front and rear steering
inputs needed to track these values. Note that the longitudinal
inputs to the vehicle are controlled directly by the driver
through throttle and brake commands. We base the steering
controller on a planar four-wheel steer, single track vehicle
model that captures the relevant dynamics on X1, shown in
Fig. 5. Note that the haptic feedback method in Section IV-C
also uses the single track vehicle model.

A. Visual Feedback

Perhaps more than any other sense, humans use visual
feedback to stay on the road and avoid collisions with other
road users. When emulating high speeds,
to
give the driver the visual perception of moving at the faster
reference speed ˜ux. The driver should also see lateral vehicle
motion according to the reference yaw rate ˜r and lateral
velocity ˜uy.

is critical

it

Fig. 5. The single track model used for steering control and haptic feedback.

1) Control Law: We implement a feedforward-feedback
controller to compute front and rear steering commands.
Together, these two actuators track the two reference states
of interest. Similar to the method proposed by Russell and
Gerdes for handling emulation on four-wheel steer vehicles,
the controller ﬁrst computes body-ﬁxed tire forces F1y and
F2y and then converts these forces into steering commands on
each axle [14]. In terms of these tire forces, the equations of
motion for the real vehicle are

˙r =

˙uy =

aF1y − bF2y
Iz
F1y + F2y
m

− rux.

(9)

The lateral acceleration of the real vehicle ay has the same
linear and rotational components as the reference vehicle,
shown in (4). To track the reference lateral acceleration, we set
˜ay = ay and solve for ˙uydes, the desired derivative of lateral
velocity on the vehicle, as

˙˜uy + ˜r˜ux = ˙uy + rux ⇒ ˙uydes = ˙˜uy + ˜r˜ux − rux.

(10)

Since we track the reference yaw rate at a slower speed on
the real vehicle, |˜r˜ux| > |rux| during lateral maneuvers. To
compensate for this decrease in the rotational component of
lateral acceleration, the linear component increases on the
vehicle. Thus, the desired ˙uydes tends to exceed the reference
˙˜uy in magnitude. This increase in ˙uy leads to exaggerated
lateral motion, which can be achieved with the four-wheel
steer capability of X1. For use in the tracking controller, we
integrate the value of ˙uydes in (10) to compute the desired
lateral velocity

(cid:90)

uydes =

(cid:0) ˙˜uy + ˜r˜ux − rux

(cid:1) dt.

(11)

Critically, this integration introduces a pure integrator into
the closed-loop system, and the system is not stable when
only using proportional feedback. Due to the pure integrator,
steady-state errors in one variable become ramp errors in
others. On a four-wheel SBW vehicle, a small misalignment
in the steering system may introduce a steady-state yaw rate
error, which causes the lateral velocity error to grow and the
vehicle to drift sideways during tests.

To resolve this issue, we use the following control law with

both proportional and integral feedback terms:

F1y =

b ˜Fy
L

+

˜Mz
L

+ K1rer + K1rI

(cid:90)

+ K1uyeuy + K1uyI

euy dt

(12)

F2y =

a ˜Fy
L

−

˜Mz
L

+ K2rer + K2rI

(cid:90)

+ K2uyeuy + K2uyI

euy dt,

er dt ...
(cid:90)

er dt ...
(cid:90)

where the error states used in feedback are deﬁned as
er = ˜r − r
euy = uydes − uy.
The feedforward terms use ˜Fy and ˜Mz to match the desired
lateral forces on the front and rear axles. The feedback terms

(13)

5

correct for unmodeled dynamics and ensure system stability
by accounting for steady-state errors with integral feedback.
2) Stability Analysis: Although the desired lateral forces
computed in (12) are not perfectly achieved given model
mismatch in the conversion from forces to steering angles,
we can analyze the closed-loop system to understand the
stability of the error dynamics. If the system is stable, errors
in tracking reference states will decay over time. Taking the
derivative of error states in (13) and substituting the dynamics
in (2) and (9) and the deﬁnition of uydes in (11), we get the
following expressions for the dynamics of the yaw rate and
lateral velocity error states in terms of moments and forces:

˙er =

˙euy =

˜Mz − aF1y + bF2y
Iz
˜Fy − F1y − F2y
m

.

(14)

We also analyze the dynamics of lateral acceleration error
eay = ˜ay − ay. Using the deﬁnition of lateral acceleration
in (4) and the equations of motion in (2) and (9), the lateral
acceleration error dynamics are

˙eay =

˙˜Fy − ˙F1y − ˙F2y
m

= ¨euy.

(15)

By calculating the desired lateral velocity required to track
the reference lateral acceleration, the dynamics on eay are
simply the derivative of the dynamics on euy. We only track
the desired lateral velocity uydes to match the reference lateral
acceleration, and thus lateral velocity error dynamics operate
independently of yaw rate error dynamics. To form a closed-
loop system in terms of error states, we substitute the control
law from (12) into the derivatives of error dynamics in (14)
and (15). Additionally differentiating the expression for ˙er in
(14), we derive a linear 4th order system of the form







=







¨er
˙er
˙eay
˙euy







0

K1 K2 K3 K4
0
1
K5 K6 K7 K8
0
0

0

0

1













˙er
er
eay
euy







,

(16)

where matrix elements K1 through K8 are deﬁned in terms
of the proportional and integral feedback gains in the control
law. We can select
these gains such that all eigenvalues
of the dynamics matrix have negative real parts, ensuring
an asymptotically stable system. Note that, by including ˙er,
we achieve stable error dynamics on yaw acceleration ˙r, in
addition to yaw rate, lateral acceleration, and lateral velocity.
Within the set of gains resulting in system stability, we choose
values that result in good transient tracking behavior on the
vehicle. The deﬁnitions of matrix elements and gain values
tuned in our experiments are shown in Table II.

3) Computing Steering Commands: We convert the lateral
forces computed in (12) to road wheel angle inputs on each
axle δf and δr for lateral control on X1. To make this
conversion, we ﬁrst transform the body-ﬁxed forces to tire-

TABLE II
FEEDBACK GAIN VALUES

Matrix Element

K1

K2

K3

K4

K5

K6

K7

K8

Deﬁnition
−aK1r +bK2r
Iz
−aK1rI +bK2rI
Iz
−aK1uy +bK2uy
Iz
−aK1uyI +bK2uyI
Iz
−K1r −K2r
m
−K1rI −K2rI
m
−K1uy −K2uy
m
−K1uyI −K2uyI
m

Value

Units

-24.9

-74.7

1.2

3.6

3.0

9.0

-15.0

-45.0

1
s
1
s2
1
m·s
1
m·s2
m
s
m
s2
1
s
1
s2

ﬁxed coordinates. Using the steering angles shown in Fig. 5,
the tire-ﬁxed forces are

Fyf =

Fyr =

F1y − Fxf sin δf
cos δf
F2y − Fxr sin δr
cos δr

,

(17)

where Fxf and Fxr are the driver’s longitudinal control inputs
to the vehicle’s drive motor and brake-by-wire system.

To determine the steering angles that will produce the lateral
tire forces Fyf and Fyr, we invert the brush tire model in
(5) and (6) with σx = 0 to compute lateral slip angles αf
and αr, assuming minimal longitudinal slip and tire forces
lumped together in the single track model. The accelerations
achieved while emulating high speeds coincide with forces in
the nonlinear regime of the tires, thus requiring an inversion
of the brush tire model. We lastly use a single track deﬁnition
of slip angles to calculate steering angles using the computed
αf and αr values and measurements of velocity states on X1

δf = −αf + tan−1

δr = −αr + tan−1

(cid:19)

(cid:18) uy + ar
ux
(cid:18) uy − br
ux

(cid:19)

(18)

.

With these two steering inputs, the controller tracks the refer-
ence yaw rate ˜r and lateral acceleration ˜ay while accounting
for nonlinearities inherent to the road wheel angles and tire
forces of the vehicle.

4) Actuator Saturation: When emulating high speeds, the
rear wheels tend to steer in the same direction as the front
wheels. This enables the signiﬁcant lateral motion needed to
track the reference lateral acceleration on the vehicle. To track
the reference yaw rate, the front wheels usually steer with
slightly greater magnitude than the rear wheels during transient
maneuvers. As a result, the front axle, which has about half
the maximum steering angle of the rear axle, reaches its limit
ﬁrst.

To account for front steering saturation, we follow a similar
approach to that outlined by Russell and Gerdes in the case of
rear axle steering saturation during low friction emulation [14].
When δf exceeds its limit δf max, we can only modify rear
steering for control and choose to prioritize tracking yaw rate
at the expense of lateral acceleration. If we kept tracking lateral

6

acceleration, the rear wheels would over-rotate the vehicle,
causing it to change heading signiﬁcantly and risk driving out
of a safe testing space. In contrast, tracking yaw rate maintains
a real world heading angle that closely matches that of the
virtual vehicle.

To track reference yaw rate when the front steering angle
lateral force
saturates, we ﬁrst estimate the current front
by computing the front slip angle using measured states on
the vehicle, solving for αf in (18). We then compute the
corresponding lateral force with the brush tire model in (5)
and (6) assuming lateral only slip and lumped tire forces.
Next, we convert the estimated tire-ﬁxed lateral force Fyf
to an estimated body-ﬁxed lateral force F1y following the
geometric relationship for the front axle in (17). The key step is
to compute the rear lateral force F2y required to track ˜r given
the estimated front lateral force. We implement the following
control law:

F2y =

− ˜Mz + aF1y + Krsater
b

,

(19)

which uses proportional feedback Krsat to track the reference
yaw rate. Substituting this equation into the expression for ˙er
in (14), there are stable error dynamics on yaw rate

˙er =

Krsater
Iz

(20)

if Krsat < 0. For this work, we choose a value of Krsat =
−12000 Nm · s. The ﬁnal step is to convert F2y to a rear
steering command δr by following the calculations in (17)
and (18).

5) Acceleration at Driver’s Seat Position: For accurate
vestibular feedback,
the yaw rate and lateral acceleration
should match the reference values at the position of the driver’s
seat. Following principles of rigid body dynamics, the rotation
rate is the same everywhere on the vehicle, and the lateral
acceleration at a location ∆x in front of and ∆y to the left of
the center of mass is

aydriver = ay + ˙r∆x − r2∆y.

(21)

We derive this kinematic relationship in the appendix. By
tracking ˜r and ˜ay at
the center of mass, we also track
lateral acceleration at the driver’s position, since aydriver only
depends on ay, r, and ˙r, which are tracked by our controller.

C. Haptic Feedback

In addition to visual and vestibular feedback, drivers use the
torque felt on the steering wheel to understand their vehicle’s
response to steering inputs and the conditions of the road.
In this section, we describe the design of a steering force
feedback system that transmits realistic road feel to drivers
corresponding to the high speed reference model. The haptic
steering system in our ViL simulator follows a similar structure
to the artiﬁcial steering feel model in SBW vehicles presented
by Balachandran and Gerdes [20]. Here, the single track model
shown in Fig. 5 provides the relevant dynamics for our force
feedback model.

To replicate the haptic feedback of a conventional road
vehicle that mechanically links the steering wheel with the

road wheels, the force feedback motor applies the following
torque on the hand wheel:

τhw = τdamp + τinertia + Wf (˜αf )(τalign(˜αf ) + τjack), (22)

where Wf and τalign are both functions of the reference front
slip angle ˜αf , which is calculated using the ﬁrst expression in
(18) with values in the reference model.

The ﬁrst two terms in (22) replicate the inherent damping
and inertia of a steering column and rack in a typical vehicle.
The third term multiplies aligning and jacking torques caused
by forces on the road wheels with a weighting function Wf ,
which emulates a power steering assist system. The weighting
function Wf is a Gaussian function centered with unity value
at ˜αf = 0 and quickly dropping off to 0.2 with increasing
slip angle magnitude, which mimics power steering. The
aligning torque τalign captures the effect of the front tires’
lateral forces, tending to self-center the wheels at high speeds.
Together with the jacking torque τjack, which is a function of
the driver’s steering wheel angle, this last term gives the driver
a feel for the dynamics of the reference vehicle through slip
angles and tire forces at the front axle. Complete details of
the artiﬁcial steering feel model can be found in [20].

V. EXPERIMENTS

We conducted experiments on a 110 m by 200 m skid
pad at Thunderhill Raceway Park in Willows, CA. We tested
our system with double lane change and highway weaving
maneuvers that are difﬁcult for drivers to navigate without
multisensory feedback. Most of the plots below show data
as a function of forward distance along the virtual road
s. We have plotted relevant vehicle states, steering inputs,
and steering wheel torque to demonstrate the multisensory
feedback experienced by the driver in each experiment and
the controller used to emulate high speed dynamics.

A. Yaw Motion Thresholds

In the analysis of our experimental data, models of the hu-
man vestibular system are useful for quantifying how well we
reproduce rotations on the vehicle. Speciﬁcally, we investigate
whether drivers can detect errors between the reference yaw
rate and the yaw rate felt in the car. Nesti et al. present a useful
model for computing yaw rate perception thresholds based on
human subjects studies in which participants were tasked with
discriminating between yaw motions of different amplitudes
using both visual and vestibular cues [21]. They demonstrate
a nonlinear increase in yaw rate detection threshold with ref-
erence signal amplitude that is consistent with other studies of
yaw perception, for example the ﬁndings of Mallery et al. who
tested participants with vestibular only cues [22]. Bruschetta et
al. use the model presented by Nesti et al. to validate an MPC-
based motion cueing approach on a moving platform driving
simulator [23]. Although Valente Pais et al. ﬁnd that humans
may consider visual and vestibular yaw motion to be coherent
up to a fairly wide 10 deg/s of divergence [24], we follow the
example in [23] and use Nesti et al.’s more conservative yaw
rate threshold model.

7

B. Double Lane Change Experiment

In our ﬁrst experiment, the driver completes an ISO 3888-2
double lane change, which requires two rapid lane changes
over a 61 m course [25]. We expect to see high amplitudes of
yaw rate and lateral acceleration that change direction quickly
during the maneuver and four-wheel steering on X1 that tracks
these reference signals closely. Fig. 6. shows data from a
double lane change driven at a reference speed ˜ux = 30
mph with a speed scaling factor f = 2 (and thus the real
vehicle’s speed ux = 15 mph). This experiment demonstrates
the performance of our platform at high yaw rates and lateral
accelerations, as driving the double lane change at 30 mph
requires relatively aggressive steering inputs from the driver.
The top subplot shows the reference and measured yaw
rates alongside the yaw detection threshold derived from Nesti
et al. of 3.35 deg/s based on the reference signal amplitude.
Aside from a few brief time steps where yaw rate error slightly
exceeds detection thresholds, the yaw rate felt by the driver
stays within the bounds predicted by the perception model,
emulating rotations up to 20.6 deg/s. The middle subplot
shows lateral acceleration tracking at
the driver’s position
on the car, computed with (21). The mean of the measured
lateral acceleration signal tracks the reference signal well up
to a maximum value of 4.4 m/s2 and superimposes higher
frequency content, which is analyzed in more detail below. The
bottom subplot shows the driver’s commanded steering angle
overlaid with the front and rear steering angles sent to X1.
Both axles tend to steer in the same direction and with greater
magnitude than the driver’s steering command throughout the
maneuver, resulting in the exaggerated lateral motion needed
to track the reference lateral acceleration at the slower speed
on the real vehicle. The difference between the front and rear
steering angles creates a positive yaw moment for leftward
rotations and negative for rightward rotations, enabling the
vehicle to track the reference yaw motion.

The front axle gets close to its maximum steering angle
of 18◦ at approximately s = 193 m. The front steering
geometry on X1 limits the amount of lateral acceleration
that can be achieved during tests, as both axles need to
increase steering angle to match the lateral motion required
for acceleration tracking. We can widen this limitation by
increasing the stiffness or adhesion of the tires (for example,
high performance tires on race cars have friction coefﬁcients
upwards of µ ≈ 1.3-1.6) or using a four-wheel steer vehicle
with greater available steering angle on the front axle. In
contrast to efforts needed to overcome the acceleration limits
of moving platform simulators, which typically require the
construction of larger facilities, these modiﬁcations to X1 are
relatively cheap.

C. Highway Weaving Experiment

We additionally demonstrate the high speed emulation
method in a much faster highway setting by running a test
at a reference speed ˜ux = 60 mph with a speed scaling factor
f = 3. Here, the driver switches between two lanes as if they
were aggressively weaving between trafﬁc on the highway. We
display data from this experiment in Fig. 8.

8

Fig. 6. Yaw rate (top), lateral acceleration (middle), and steering (bottom) data from a double lane change at 30 mph with speed scaled by f = 2.

Similar to the double lane change experiment, the measured
yaw rate stays within the perception threshold computed with
Nesti et al.’s model of 2.65 deg/s for the vast majority of the
test. With higher speed trafﬁc weaving, the vehicle tends to
rotate less during lane changes, achieving a maximum yaw
rate of 12.8 deg/s. The vehicle tracks the reference lateral
acceleration closely, reproducing accelerations up to 5.25 m/s2.
The steering angle plot shows a similar sequence of control
inputs on X1, where the front and rear axles steer in the
same direction but with asymmetry in values that reproduces
the reference yaw motion. Looking at the x-axis, we drive
at a perceived speed of 60 mph over 450 m of longitudinal
distance, expanding the effective testing area of the skid pad.

Fig. 7. Frequency analysis of real and reference lateral acceleration signals for
the 30 mph double lane change (top) and 60 mph highway weaving experiment
(bottom).

D. Frequency Analysis of Lateral Acceleration Data

We also analyze lateral acceleration data in the frequency
domain through a discrete Fourier transform. Fig. 7 plots
the amplitudes of each transformed signal versus frequency
for the double lane change and the highway trafﬁc weaving
experiments.

In this representation, the low frequency behavior of the
reference and measured data closely match. In the double lane
change on the top subplot, there are larger acceleration ampli-
tudes around 0.3 Hz and 0.7 Hz. For the highway weaving ex-
periment in the bottom subplot with slightly higher frequency
lane changes by the driver, frequency content matches well
between the two signals up to 1 Hz. Hence, we reproduce
the lower frequency lateral acceleration associated with the
maneuvers themselves on the vehicle. Above approximately 1
Hz, although the reference model does not compute higher
frequency content, the vehicle measures nonzero values in
lateral acceleration. This frequency content represents high
frequency accelerations associated with the rough road surface
and the resulting suspension motion that we don’t include in
the reference model. The driver experiences the low frequency
accelerations associated with the reference model superim-
posed with the high frequency accelerations one expects while
driving a real vehicle. This high frequency content is important
for immersing drivers in a simulator, especially when emulat-
ing highway speed motion.

E. Comparison With Manual Tests

Our ﬁnal set of tests compares the high speed emulation
method with an equivalent manual driving experience. We
use the ISO double lane change as a benchmark for these

9

Fig. 8. Yaw rate (top), lateral acceleration (middle), and steering (bottom) data from a highway weaving experiment at 60 mph with speed scaled by f = 3.

Fig. 9. Yaw rate (top) and lateral acceleration (bottom) overlaid for ﬁve
manual and ﬁve high speed emulation double lane changes at 20-22 mph
with speed scaled by f = 2. Manual trials are grey solid lines, and high
speed emulation trials are colored dashed lines.

Fig. 10. Driver steering input (top) and steering wheel haptic feedback
(bottom) overlaid for the same ﬁve manual and ﬁve high speed emulation
double lane changes.

experiments. We expect similar driving behavior and sensory
feedback between the two conditions, indicating that they are
indistinguishable from one another to the driver.

A driver ﬁrst completed ﬁve trials of the double lane
change with ˜ux between 20-22 mph and f = 2 in the high
speed emulation condition. Using a lower speed for these
tests reduces the demanded lateral acceleration, ensuring that
the front steering angle isn’t saturated. The same driver then
completed ﬁve trials of the double lane change at 20-22 mph
controlling the ViL simulator fully manually. In the manual
driving condition, the virtual vehicle’s motion corresponds
exactly to the real vehicle’s motion,
the driver’s steering
commands directly control X1 using front-wheel steering only,
and the haptic feedback model on the steering wheel uses the

front slip angle αf measured on the vehicle. Figs. 9 and 10
show measured data on X1 from this set of experiments.

Across the plots, there is overlap between the yaw rate,
lateral acceleration, steering command, and steering wheel
torque measured in the high speed emulation maneuvers and
the manual maneuvers. The range in yaw rate and lateral
acceleration experienced by the driver through the maneuver
doesn’t vary signiﬁcantly between the two conditions. In
general, the spread in data between the trials tends to be greater
for the manual condition. This emerges most clearly in the
steering command plot at the top of Fig. 10, where there is
higher variance in the driver’s control input from s = 170 m
to 190 m than in the high speed emulation trials. The variance
in vestibular and haptic feedback data for the manual trials

corresponds to this spread in control input data, indicating
that the dynamics of the vehicle and the force feedback model
used to emulate high speeds closely match those of a manually
driven vehicle at the same speed. The haptic feedback model
in particular provides very similar steering wheel torques at
the points of greatest force feedback at 160 m and 185 m along
the path. The small but visible difference in driving behavior
could be caused by a number of factors, including the trial
ordering, and would require a study with more participants to
discern underlying causes. The lack of clear clustering of data
between the two conditions, however, demonstrates the realism
of our high speed emulation approach through its similarity to
manual experiments driven at the same speed.

F. Discussion

In this paper, we demonstrate a method for generating
haptic and vestibular cues that meet objective performance
measures. While it is common to conduct human subjects
studies to validate novel driving simulator designs, objective
criteria set clear standards for evaluating drivers’ level of
immersion that can be applied even if the simulator design
changes. Underscoring this approach, recent work by Grottoli
et al. [26] and by Biemelt et al. [27] use objective metrics of
vestibular feedback quality and known perception thresholds to
assess the effectiveness of different motion cueing algorithms.
In our method, the vestibular feedback experienced by the
driver is veriﬁed objectively by comparing the difference
between the real and reference yaw rate to known yaw
perception thresholds derived by Nesti et al. from human
subjects studies [21]. Motion perception thresholds play an
important role in the development and evaluation of many
motion cueing algorithms and are central to analysis of the
vestibular feedback experienced by the driver in our high speed
emulation method. Further, the haptic feedback is designed and
tuned to match objective steering characteristics. Following
the approach presented by Balachandran and Gerdes,
the
artiﬁcial steering feel model meets objective measures such
as returnability, on-center feel, and steering sensitivity [20].
Ultimately, our system enables a wide range of immersive
tests that may be too costly or unsafe to perform at full
speeds. We show that objective measures for vestibular and
haptic feedback are met in double lane change and highway
weaving maneuvers at various speeds. Further testing, which
can be objective or subjective, may be required to validate this
simulation platform for a particular experiment.

VI. CONCLUSION

We have developed a novel ViL driving simulator using a
four-wheel SBW vehicle that renders multisensory feedback
to drivers in high speed driving conditions. Building on prior
work in vehicle dynamics emulation and artiﬁcial steering feel,
we demonstrate a method for simulating the dynamics of a
faster moving vehicle and rendering the corresponding visual,
vestibular, and haptic feedback to the driver. We tested this
system with double lane change and highway trafﬁc weaving
experiments. These tests show that we can render yaw rates
within drivers’ perceptual thresholds, recreate accurate lateral

10

accelerations across a broad frequency spectrum, and generate
an equivalent driving experience while navigating the same
double lane change at full speed.

We note that there are a few limitations to this approach. By
scaling the speed of the vehicle, we also scale the longitudinal
acceleration, causing the driver to experience a mismatch
between the longitudinal acceleration seen in the VR HMD
and felt in their vestibular system. We run tests at relatively
constant speeds, leaving this mismatch to only occur when
speeding up to or slowing down from the target speed of
the experiment. Additionally, the high speed emulation system
does not easily handle steady-state lateral accelerations, as we
˙uydes on the vehicle for long before
cannot track a constant
the wheels run out of additional steering angle needed to
increase lateral velocity. We therefore run tests along straight
roads involving transient lateral maneuvers at constant speeds.
Within this set of maneuvers, however, we can simulate many
relevant scenarios such as emergency double lane changes and
vehicle overtaking on the highway.

Our ViL platform is useful for safely studying driver behav-
ior in extreme driving scenarios at a large range of speeds. In
the future, we plan to study emergency highway lane changes
in more detail to develop and test advanced driver assistance
systems that can keep drivers safe despite the challenges of
controlling a high speed vehicle and uncertain behavior from
other road users.

ACKNOWLEDGMENTS

We would like to thank Alessandra Napoli, John Talbot,
and Larry Cathey for help with experiments, Markus Steimle
for insights on developing our ViL platform, and Virtual Test
Drive for providing academic licenses and software support.
Toyota Research Institute provided funds to support this work.

APPENDIX
DERIVATION OF ACCELERATION AT DRIVER’S POSITION

From analysis of a rotating and translating rigid body, we
obtain the following expression for the acceleration of a point
p on the body in a reference frame ﬁxed to the body

ap = aCoM + ˙ω × r + ω × (ω × r),

(23)

where aCoM is the acceleration vector at the center of mass,
ω is the rotational velocity vector, and r is the position of
the point p relative to the center of mass, all in body-ﬁxed
coordinates. We deﬁne these vectors for the planar vehicle
model as

aCoM =





ax
ay
0



 , ω =



0
0
 , r =

r





∆x
∆y
0



 .

(24)

Using these deﬁnitions, the acceleration vector at the position
p in the frame of the vehicle is

ap =





ax − ˙r∆y − r2∆x
ay + ˙r∆x − r2∆y
0



 .

(25)

11

in AIAA Modeling and Simulation Technologies Conference, 2010, p.
8093.

[25] ISO 3888-2 Passenger cars – Test

track for a severe lane-change
manoeuvre – Part 2: Obstacle avoidance, International Organization for
Standardization, 2011.

[26] M. Grottoli, D. Cleij, P. Pretto, Y. Lemmens, R. Happee, and H. H.
B¨ulthoff, “Objective evaluation of prediction strategies for optimization-
based motion cueing,” Simulation, vol. 95, no. 8, pp. 707–724, 2019.

[27] P. Biemelt, S. Mertin, N. R¨uddenklau, S. Gausemeier, and A. Tr¨achtler,
“Objective evaluation of a novel ﬁlter-based motion cueing algorithm
in comparison to optimization-based control in interactive driving sim-
ulation,” in International Conference on Advances in System Simulation
(SIMUL), 2019, pp. 25–31.

REFERENCES

[1] B. S. Repa, P. M. Leucht, and W. W. Wierwille, “The inﬂuence of motion
cues on driver-vehicle performance in a simulator,” in Proceedings of
the 17th annual conference on manual control, 1981.

[2] G. Reymond, A. Kemeny, J. Droulez, and A. Berthoz, “Role of lateral
acceleration in curve driving: Driver model and experiments on a real
vehicle and a driving simulator,” Human factors, vol. 43, no. 3, pp.
483–495, 2001.

[3] D. Tofﬁn, G. Reymond, A. Kemeny, and J. Droulez, “Role of steering
wheel feedback on driver performance: driving simulator and modeling
analysis,” Vehicle System Dynamics, vol. 45, no. 4, pp. 375–388, 2007.
[4] S. Cutlip, Y. Wan, N. Sarter, and R. B. Gillespie, “The effects of haptic
feedback and transition type on transfer of control between drivers and
vehicle automation,” IEEE Transactions on Human-Machine Systems,
2021.

[5] M. R. C. Qazani, H. Asadi, S. Khoo, and S. Nahavandi, “A linear
time-varying model predictive control-based motion cueing algorithm
for hexapod simulation-based motion platform,” IEEE Transactions on
Systems, Man, and Cybernetics: Systems, 2019.

[6] G. Reymond and A. Kemeny, “Motion cueing in the renault driving
simulator,” Vehicle System Dynamics, vol. 34, no. 4, pp. 249–259, 2000.
[7] N. J. Garrett and M. Best, “Driving simulator motion cueing algorithms–
a survey of the state of the art,” in Proceedings of the 10th International
Symposium on Advanced Vehicle Control (AVEC), 2010.

[8] H. Asadi, A. Mohammadi, S. Mohamed, M. R. C. Qazani, C. P.
Lim, A. Khosravi, and S. Nahavandi, “A model predictive control-
based motion cueing algorithm using an optimized nonlinear scaling for
driving simulators,” in 2019 IEEE International Conference on Systems,
Man and Cybernetics (SMC).

IEEE, 2019, pp. 1245–1250.

[9] T. Bock, M. Maurer, and G. Farber, “Validation of the vehicle in the
loop (vil); a milestone for the simulation of driver assistance systems,” in
2007 IEEE Intelligent vehicles symposium.
IEEE, 2007, pp. 612–617.
[10] G. Moussa, E. Radwan, and K. Hussain, “Augmented reality vehicle
system: Left-turn maneuver study,” Transportation research part C:
emerging technologies, vol. 21, no. 1, pp. 1–16, 2012.

[11] I. Karl, G. Berg, F. Ruger, and B. Farber, “Driving behavior and
simulator sickness while driving the vehicle in the loop: Validation of
longitudinal driving behavior,” IEEE intelligent transportation systems
magazine, vol. 5, no. 1, pp. 42–57, 2013.

[12] D. Goedicke, J. Li, V. Evers, and W. Ju, “Vr-oom: Virtual reality on-
road driving simulation,” in Proceedings of the 2018 CHI Conference
on Human Factors in Computing Systems, 2018, pp. 1–11.

[13] C. Park, S. Chung, and H. Lee, “Vehicle-in-the-loop in global coordi-
nates for advanced driver assistance system,” Applied Sciences, vol. 10,
no. 8, 2020.

[14] H. E. Russell and J. C. Gerdes, “Design of variable vehicle handling
characteristics using four-wheel steer-by-wire,” IEEE Transactions on
Control Systems Technology, vol. 24, no. 5, pp. 1529–1540, 2015.
[15] M. Akar and J. C. Kalkkuhl, “Lateral dynamics emulation via a four-
wheel steering vehicle,” Vehicle System Dynamics, vol. 46, no. 9, pp.
803–829, 2008.

[16] H. E. Russell and J. C. Gerdes, “Low friction emulation of lateral vehicle
dynamics using four-wheel steer-by-wire,” in 2014 American Control
Conference.

IEEE, 2014, pp. 3924–3929.

[17] K. von Neumann-Cosel, M. Dupuis, and C. Weiss, “Virtual test drive-
provision of a consistent tool-set for [d, h, s, v]-in-the-loop,” in Pro-
ceedings of the driving simulation conference Monaco, 2009.

[18] S. M. LaValle, A. Yershova, M. Katsev, and M. Antonov, “Head tracking
for the oculus rift,” in 2014 IEEE International Conference on Robotics
and Automation (ICRA).

IEEE, 2014, pp. 187–194.

[19] H. Pacejka, Tire and Vehicle Dynamics Ed. 3. Elsevier Science, 2012.
[20] A. Balachandran and J. C. Gerdes, “Designing steering feel for steer-
by-wire vehicles using objective measures,” IEEE/ASME Transactions
on Mechatronics, vol. 20, no. 1, pp. 373–383, 2014.

[21] A. Nesti, K. A. Beykirch, P. Pretto, and H. H. B¨ulthoff, “Human dis-
crimination of head-centred visual–inertial yaw rotations,” Experimental
brain research, vol. 233, no. 12, pp. 3553–3564, 2015.

[22] R. M. Mallery, O. U. Olomu, R. M. Uchanski, V. A. Militchin, and T. E.
Hullar, “Human discrimination of rotational velocities,” Experimental
brain research, vol. 204, no. 1, pp. 11–20, 2010.

[23] M. Bruschetta, F. Maran, and A. Beghi, “A fast implementation of
mpc-based motion cueing algorithms for mid-size road vehicle motion
simulators,” Vehicle system dynamics, vol. 55, no. 6, pp. 802–826, 2017.
[24] A. R. Valente Pais, M. van Paassen, M. Mulder, and M. Wentink,
“Perception of combined visual and inertial low-frequency yaw motion,”

