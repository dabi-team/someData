Parametric Modelling Within Immersive Environments

Building a Bridge Between Existing Tools and Virtual Reality Headsets

Adrien Coppens1, Tom Mens2, Mohamed-Anis Gallas3
1,2Software Engineering Lab, University of Mons 3Architectural Design Unit, Uni-
versity of Mons
1,2,3{adrien.coppens|tom.mens|mohamed-anis}@umons.ac.be

Even though architectural modelling radically evolved over the course of its
history, the current integration of Augmented Reality (AR) and Virtual Reality
(VR) components in the corresponding design tasks is mostly limited to enhancing
visualisation. Little to none of these tools attempt to tackle the challenge of
modelling within immersive environments, that calls for new input modalities in
order to move away from the traditional mouse and keyboard combination. In
fact, relying on 2D devices for 3D manipulations does not seem to be effective as
it does not offer the same degrees of freedom. We therefore present a solution that
brings VR modelling capabilities to Grasshopper, a popular parametric design
tool. Together with its associated proof-of-concept application, our extension
offers a glimpse at new perspectives in that field. By taking advantage of them,
one can edit geometries with real-time feedback on the generated models, without
ever leaving the virtual environment. The distinctive characteristics of VR
applications provide a range of benefits without obstructing design activities. The
designer can indeed experience the architectural models at full scale from a
realistic point-of-view and truly feels immersed right next to them.

Keywords: Computer-aided Design, Parametric modelling, Virtual Reality,
Architectural modelling, Human-Computer Interaction

INTRODUCTION
The AEC (Architecture, Engineering and Construc-
tion) industry has radically evolved due to technolog-
ical improvements that gave rise to advanced auto-
mated tools for the corresponding design tasks. Tra-
ditional paper drawings and scale models are now
accompanied by 2D and 3D modelling software, but
also by real-time (lighting, structural) simulations and
photo-realistic renderings of architectural designs.

While these tools are constantly improving in terms
of performance and accuracy, their modalities of user
interaction do not follow the same trend.

Experiences combining virtual and real ele-
ments, labelled as Mixed Reality (MR), can be placed
on Milgram’s Reality-Virtuality continuum (Milgram
and Kishino 1994). An extended version of that con-
tinuum is depicted in Figure 1 and encompasses ex-
periences that range from “close to reality” to “almost

VR, AR & VISUALISATION | Experiments - Volume 2 - eCAADe 36 | 711

entirely virtual”. Augmented Reality (superimposing
virtual elements on real world objects) and Virtual Re-
ality (complete immersion in a virtual environment)
elements have started to appear in CAAD. However,
their purpose is mostly limited to enhancing the visu-
alisation of models designed using desktop software.
Humans are accustomed to manipulating 3D ob-
jects intuitively in the real world as the corresponding
interactions are also 3-dimensional. However, virtual
models designed with computer software are typi-
cally harder to deal with because most tools still rely
on a traditional mouse and keyboard combination to
express user intent. The current state of the practice
in CAAD is no diﬀerent: users need to work around
the limitations imposed by lower-dimensional inter-
action devices. For example, to navigate through 3D
models, one often needs to switch between “modes”
(e.g.
translation and rotation) that may be further
subdivided in 3 dimensions, whereas 3D navigation
can happen much more seamlessly in the real or VR
world. As a concrete illustration, rotating objects in
the Rhino 3D modeller generally involves the use of
a rotation tool that only controls one axis at a time.
To rotate a model around all 3 “standard” axes (tra-
ditional x, y and z axes), one typically performs three
separate actions, which means that it is necessary to
anticipate the eﬀect of those rotations. There is also
a special tool that allows users to deﬁne an arbitrary
axis and rotate around it. Even though this feature
permits single rotations that involve all 3 standard
axes, there still is only one degree of freedom (you
cannot rotate around another axis at the same time)
and deﬁning that axis according to the foreseen rota-
tion is generally a diﬃcult task.

The above shortcomings, as well as potential so-
lutions, have been pointed out for over two decades
(Chu et al. 1997) but these solutions have not been
integrated yet in contemporary CAAD software. As a
result, very few tools tackle the challenge of architec-
tural modelling within 3D immersive environments,
as this requires new input modalities that go beyond
the traditional interaction paradigms.

Parametric modelling already transforms the de-

sign process by relying on visual algorithms to de-
ﬁne models. As a ﬁrst step towards bringing that ap-
proach in VR, we built an extension for Grasshopper,
a parametric design plug-in for Rhino. This extension
allows users to see and modify 3D geometries using
an HTC Vive VR headset, to beneﬁt from real-time in-
teraction with, and feedback on, the generated mod-
els.

RELATED WORK
Several tools attempted to provide annotation and
sketching capabilities for architectural models in VR.
IrisVR Prospect provides compatibility with many
popular tools. Similarly, Twinmotion includes the
ability to create VR visualisations from models de-
signed with the system. Hyve-3D (Dorta et al. 2016)
suggests the use of a tablet, controlling a 3D cursor
to move around and enable sketching.

Integrating VR solutions with traditional CAAD
tools necessitates an automatic synchronisation be-
tween that tool’s model and its VR counterpart. Forc-
ing the user to alternate between the desktop ap-
plication and the VR tool through an edit-export-
validate procedure for every modiﬁcation is obtru-
sive to the design process.

Previous work [1] proposed a one-way synchro-
nisation from Grasshopper to the Unity game engine.
Using this solution, one can create VR applications to
visualise geometries generated from Grasshopper al-
gorithms, with automatic updates when the model
changes. However, at this point, the VR application
only receives meshes (i.e. simpliﬁed 3D models used
for graphical rendering). No semantic information is
exchanged about the underlying algorithm and the
only way to edit the model is within Grasshopper.

As far as we know, no previous contribution pro-
vides parametric modelling capabilities within VR
and that ﬁeld therefore has yet to be explored.

PROPOSED SOLUTION
Our ﬁrst eﬀort in ﬁlling that void involved the de-
velopment of three software components. The ﬁrst
one is a plug-in that connects Grasshopper to a Web-

712 | eCAADe 36 - VR, AR & VISUALISATION | Experiments - Volume 2

Figure 1
Milgram et al’s RV
continuum
encompassing
mixed reality
experiences

Socket server in order to enable communication with
client applications. The second component is the
web server, which acts as a relay between the plug-
in and the client application. The third component
is the client application itself. We developed a proof-
of-concept of such an application running on the HTC
Vive VR headset.

The Grasshopper plug-in converts meshes to a
binary format and sends them to the server for each
change.
It also announces what parameters can be
modiﬁed by the client application (including its type,
the corresponding restrictions and its current value).
Once the client application receives that information,
the given models can be rendered and their corre-
sponding parameter controls (e.g.
sliders) can be
displayed and interacted with. As some Grasshop-
per parameters have an excessive amount of possi-
ble values for a proper interaction in VR, we need to
reduce the number of available steps in the VR inter-
face (we chose to set the limit at approximately 20
fairly distributed steps). Modiﬁcations made to those
values are sent back to the Grasshopper plug-in that
replicates them on the actual model parameters. A
video [2] accompanying this paper demonstrates the
use of our proof-of-concept application while Figure
2 provides a general overview.

The interconnections between those compo-
nents allow the designer to modify values and ob-
serve the resulting model changes in real-time, tak-
ing advantage of VR characteristics without hav-

ing to endure a more complex and time-consuming
workﬂow of juggling with the VR application and
Grasshopper.
VR enables to move the architec-
tural modelling process another step closer to user-
centred design, involving end-users earlier in the pro-
cess. Indeed, it is much easier for non-experts to vi-
sualise and understand a designed element based on
a 3D virtual model as opposed to its multiple 2D pro-
jections. The proposed tool therefore enables a much
easier collaboration that allows to ﬁne-tune designed
models with direct feedback from the client.

SWOT ANALYSIS
A SWOT (Strengths, Weaknesses, Opportunities,
Threats) analysis is a technique often used to evalu-
ate business strategies. It studies the Strengths and
Weaknesses of an approach as well as the Opportu-
nities and Threats coming from its surrounding envi-
ronment. For this reason, conducting such an anal-
ysis helps in assessing the relevance and the consis-
tency of a speciﬁc strategic decision. In our case, we
use a SWOT analysis to evaluate how the use of VR
compares with traditional CAAD tools as well as to
identify the beneﬁts our proposed solution can pro-
vide and the concerns it may raise.

The outcome of that analysis is described in the
remaining parts of this section, while Table 1 presents
a summary overview.

VR, AR & VISUALISATION | Experiments - Volume 2 - eCAADe 36 | 713

hancements are suggested, the designer must return
to the desktop software to carry out the correspond-
ing modiﬁcations. He can only visualise them in VR
by going through the export process once again. Our
solution simpliﬁes that feedback loop through a real-
time synchronisation between the desktop software
and the VR application. This minimises the overhead
on the design process while enabling live interac-
tions with the user.

Threats
Despite the expected beneﬁts, some factors might
limit the adoption of VR in CAAD solutions. Current
threats include the additional cost of the hardware; as
well as possible resistance to change by experienced
designers that are accustomed to traditional desk-
top based tools. Even though compelling VR systems
have become aﬀordable, potential users may remain
sceptical due to past experiences with less optimal
devices.

Table 1
Summarised SWOT
analysis for the
proposed solution

Figure 2
Overview of our
proof-of-concept
VR application

Strengths
VR enhances our ability to visualise conceptual mod-
els with a set of interesting characteristics. Being able
to see full-scale models from a realistic perspective
helps users in having a better idea of what the ﬁnal
products will look like. The sense of presence also
makes it possible to experience being next to or even
inside that model.

Existing VR integrations generally require a set of
actions from the user to export a model to the virtual
environment. Once problems are detected or en-

714 | eCAADe 36 - VR, AR & VISUALISATION | Experiments - Volume 2

FUTURE WORK
In its current state, our proposed solution only al-
lows to modify parameter values and assess the re-
sulting eﬀects. This already opens new perspectives
for parametric modelling but we aim to push the con-
cept even further by allowing designers to modify
the underlying 6algorithm that describes the para-
metric model (and that is interpreted by Grasshop-
per to produce the geometry), without ever leaving
the virtual environment. Figure 3 compares our VR
application to the standard Rhino 3D + Grasshopper
combination in terms of which kind of information is
available about the designed model. While our solu-
tion permits parameter sharing (it will later allow to
edit the algorithm as well; hence the dashed lines on
the ﬁgure), only the rendering-ready (mesh) version
of the model is shared. There is no plan on integrat-
ing any kind of intermediary “semantic” model such
as a boundary representation into the VR application.
Generating the designed model from the algorithm
will continue to be performed by Grasshopper.

Table 2
Available or
required degrees of
freedom depending
on the device or
transformation type

Figure 3
Comparing
Grasshopper (with
Rhino 3D) and our
VR application in
terms of available
information

Opportunities
On the input level, the mismatch between 3D manip-
ulations and traditional 2D devices could be solved
by relying on gestural interaction. This technique of-
ten accompanies VR headsets thanks to 6-DoF (de-
grees of freedom) trackers that can capture 3D trans-
lations and rotations. This allows for a much more
natural and intuitive manipulation of 3D models and
enables simultaneous positional and rotational mod-
iﬁcations. Table 2 compares the standard computer
mouse to the Vive 6-DoF controller in terms of de-
grees of freedom to point out how adapted they
seem to be to perform 2D and 3D transformations.

On another note, a VR visualisation of an architec-
tural model is much easier to understand than a tra-
ditional plan from a layman point of view. This means
clients can be involved in the design process by giv-
ing feedback much earlier, which would enable a
User-Centred Design (UCD) approach.

Weaknesses
Aside from a potential discomfort for long exposures,
the beneﬁts in terms of easier manipulation and intu-
itiveness are generally assumed to go along with a re-
duced accuracy when performing such movements.
(Bérard et al. 2009) tend to concur with that state-
ment; while others (McMahan et al. 2006; Hinck-
ley et al. 1997) suggest that devices with more de-
grees of freedom are more appropriate than a stan-
dard mouse for 3-dimensional transformations.

Since those publications, signiﬁcant progress in
terms of hardware has been achieved, and new so-
lutions focused on VR for CA(A)D solutions have
emerged. Hence it may be interesting to carry out
new usability studies in such modern settings.

VR, AR & VISUALISATION | Experiments - Volume 2 - eCAADe 36 | 715

REFERENCES
Bérard, F, Ip, J, Benovoy, M, El-Shimy, D, Blum, JR and
Cooperstock, JR 2009 ’Did “Minority Report‘’ Get It
Wrong?’, IFIP Conference on Human-Computer Inter-
action, pp. 400-414

Chu, CCP, Dani, TH and Gadh, R 1997,

’Multi-Sensory
User Interface for a Virtual-Reality-Based Computer-
aided Design System’, Computer-Aided Design,
29(10), pp. 709-725

Dorta, T, Kinayoglu, G and Hoﬀmann, M 2016, ’Hyve-
3D and the 3D Cursor: Architectural Co-Design with
Freedom in Virtual Reality’, International Journal of
Architectural Computing, 14(2), pp. 87-102

Hinckley, K, Tullio, J, Pausch, R, Proﬃtt, D and Kassell, N
1997 ’Usability Analysis of 3D Rotation Techniques’,
Proceedings of the 10th Annual ACM Symposium on
User Interface Software and Technology, pp. 1-10
McMahan, RP, Gorton, D, Gresock, J, McConnell, W and
Bowman, DA 2006 ’Separating the Eﬀects of Level of
Immersion and 3D Interaction Techniques’, Proceed-
ings of the ACM Symposium on Virtual Reality Software
and Technology, pp. 108-111

Milgram, P and Kishino, F 1994, ’A Taxonomy of Mixed
Reality Visual Displays’, IEICE TRANSACTIONS on Infor-
mation and Systems, 77(12), pp. 1321-1329

[1] https://github.com/jhorikawa/MeshStreamingGrass
hopper
[2] http://informatique.umons.ac.be/staff/Coppens.Adr
ien/?video=eCAADe2018

As for the Human-Computer Interaction aspect, the
user interface of our current proof-of-concept is lim-
ited since it is represented using object-space WIMP
(Windows, Icons, Menus and Pointing device): it ba-
sically positions ﬂat screen-like controls in the virtual
3D space. We aim to integrate more advanced inter-
action paradigms based on post-WIMP interfaces, re-
lying on a combination of gestures and voice com-
mands.

Such interfaces will allow to extend the VR func-
tionality beyond parameter sharing, with features en-
abling zooming and scaling as well as component se-
lection and editing.

On a shorter notice, we plan on adding collabo-
rative capabilities to our solution as design processes
often involve multiple participants. Adding such fea-
tures means that several challenges will need to be
addressed such as conﬂicting intents and connectivi-
ty/latency issues. Furthermore, the impact of those
issues (and therefore the importance of properly
managing them) strongly increases when it comes to
remote (distant) collaboration.

CONCLUSION
We presented a proof-of-concept prototype for para-
metric modelling within immersive environments by
building a bridge between Grasshopper and a VR
headset. We compared it with existing work and
considered the potential beneﬁts and the associated
drawbacks, by carrying out a SWOT analysis. Prelim-
inary tests, with users having a few years of experi-
ence in architectural design, has collected promising
feedback on the present set of features.

But, as mentioned in the “future work” section,
further development is to be expected in terms of
functionality and usability.
It seems necessary to
go beyond traditional types of interfaces and the
urge to embrace new interaction paradigms is in-
deed strengthened by the tendency of desktop-
based CAD interfaces to quickly become very com-
plex.

716 | eCAADe 36 - VR, AR & VISUALISATION | Experiments - Volume 2

