Adversary Helps: Gradient-based Device-Free
Domain-Independent Gesture Recognition

1st Jianwei Liu
Zhejiang University
Hangzhou, China
liujianwei@stu.xjtu.edu.cn

2nd Jinsong Han
Zhejiang University
Hangzhou, China
hanjinsong@zju.edu.cn

3rd Feng Lin
Zhejiang University
Hangzhou, China
ﬂin@zju.edu.cn

4th Kui Ren
Zhejiang University
Hangzhou, China
kuiren@zju.edu.cn

0
2
0
2

r
p
A
8

]

V
C
.
s
c
[

1
v
1
6
9
3
0
.
4
0
0
2
:
v
i
X
r
a

Abstract—Wireless signal-based gesture recognition has pro-
moted the developments of VR game, smart home, etc. However,
traditional approaches suffer from the inﬂuence of the domain
gap. Low recognition accuracy occurs when the recognition model
is trained in one domain but is used in another domain. Though
some solutions, such as adversarial learning, transfer learning
and body-coordinate velocity proﬁle, have been proposed to
achieve cross-domain recognition, these solutions more or less
have ﬂaws.

In this paper, we deﬁne the concept of domain gap and then
propose a more promising solution, namely DI, to eliminate
domain gap and further achieve domain-independent gesture
recognition. DI leverages the sign map of the gradient map as
the domain gap eliminator to improve the recognition accuracy.
We conduct experiments with ten domains and ten gestures.
The experiment results show that DI can achieve the recognition
accuracies of 87.13%, 90.12% and 94.45% on KNN, SVM and
CNN, which outperforms existing solutions.

Index Terms—Gesture recognition, Domain gap eliminator,

Deep learning

I.

INTRODUCTION

Human gesture recognition plays a core role in human
computer interaction, meanwhile,
it enables many human-
centered applications such as patient surveillance, smart home
and virtual reality gam. Though traditional approaches have
they are de-
outstanding gesture recognition effectiveness,
fective more or less. For example, camera-based approaches
[1], [2] have to obtain the visual body information of the
user, which may causes the invasion of visual privacy. Sonar-
based approaches [3], [4] would not make users under visual
surveillance, however, they require high-cost and cumbersome
hardware. Wearable sensor-based approaches [5], [6], though
are light and visual information-needless, they face the ﬂaws
of limit of sensing range and relatively bad user-friendness.

Later on, with the rapid development of the wireless sensing
technique, a more promising and attractive solution becomes
WiFi signal-based non-intrusive gesture recognition. For in-
stance, E-eyes [7] is the pioneer to utilize WiFi signal as
gesture sensing media, which is followed by massive similar
attempts such as WiGest [8], WIMU [9] and CSI-Net [10].
However, traditional solutions only focus on the high recog-
nition accuracy under single domain but neglect the impact
of domain gap. If there are multiple domains involved in the
recognition requirement, the recognition effectiveness would
drop continuously with the increase of domains. The reason

behind is that signals are not only distorted by gestures but
also changed by domains. Thus, there are two gaps in the
multi-domain data distribution caused by gesture difference
and domain difference: gesture gap and domain gap. Tra-
ditional solutions work by utilizing the gesture gap as the
boundary between gestures, yet the domain gap would make
the boundary ambiguous and further reduce the recognition
accuracy.

Recently, several works are dedicated to cross-domain ges-
ture recognition. EI [11] extracts environment-independent
features by using an adversarial network. CrossSense [12]
utilizes transfer learning and ensemble learning to alleviate
the impact of domains. WiAG [13] learns a translation func-
tion to transform data between domains. Widar3.0 [14] ex-
tracts the body-coordinate velocity proﬁle to achieve domain-
independent gesture recognition. Nevertheless, these works
have obvious ﬂaws. EI adds the constraint loss of activity
percentage on the classiﬁer, but the activity percentages may
be different in different scenarios. The learning models used in
CrossSense are ponderous and lack of computing-friendness.
Widar3.0 is incapable to recognize static gestures because they
have no velocity component. WiAG needs to generate virtual
samples for all possible domains and gestures, which is not
computing-friendly when domain number is large. Meanwhile,
the recognition accuracies of EI and CrossSense are relatively
low.

In this paper, we propose DI, which does not have above
ﬂaws but can achieve comparable recognition accuracy with
Widar3.0 and WiAG. Speciﬁcally, DI utilizes a novel deep
model, namely AH-Net, to convert domain-speciﬁc samples
into domain-independent sample. AH-Net achieve conversion
goal by leveraging the technique of fast gradient sign method-
based adversarial sample to eliminate the domain gap. After
conversion, k-nearest neighbours (KNN), support vector ma-
chine (SVM) and convolutional neural network (CNN) are all
options which can be used as gesture recognizer.

We evaluate DI with ten gestures and ten domains. The
experiment results show that DI can reach the accuracy of
87.13%, 90.12% and 94.45% on KNN, SVM and CNN, which
outperforms previous works. In summary, our contributions are
listed as followings:

• We proposes a novel framework named DI to achieve

domain-independent gesture recognition.

 
 
 
 
 
 
• We propose a novel deep model, namely AH-Net, to
convert domain speciﬁc samples into domain-independent
samples.

• We conducted experiments with ten gestures and ten do-
mains, the results show that DI can achieve the accuracy
of 94%+, which outperforms existing works.

II. RELATED WORK

Learning-based RF technique: With the development of
deep learning, massive works have utilized deep model to
solve tough problems in RF sensing. CSI-Net [10] is a novel
convolutional neural network (CNN)-based deep model specif-
ically designed for WiFi-based gesture recognition. Person-
in-wiﬁ [15] devises a U-net based deep model to estimate
ﬁne-grained human skeletons and gestures. Wang et al. [16]
leverage CNN to localize the in-air input written in front of a
tag array. E-eyes [7] employs commercial WiFi system and K-
nearest neighbours algorithm to conduct activity recognition.
wang [17] use HMM as learning model to identify activities,
the input feature is the power distribution extracted from
Doppler frequency shift components. Wisee [18] also uses
Doppler frequency shift to achieve whole-home and device-
free activity recognition.

Different from above works, DI is the pioneer that proves
the avalibility of adversarial sample technique in RF ﬁeld.
Meanwhile, DI not only focus on recognition accuracy but
also the cross-domain ability.

Domain-independent RF techniques: Recently,

re-
searchers have noticed the drawback of the diversity caused
by multi-domain settings and proposed several solutions.
Butterﬂy [19] overcomes the diversity of environments in
RFID identiﬁcations by using a pair of tags which nearly
experience the same environment. Virmani [13] shows that
one can leverage a translation function to map signals to
target domain features. In order to obtain the ability of
activity recognition in multiple environments, EI [11] utilizes
an adversarial network to extract environment-independent
features from original signals. CrossSense [12] simultaneously
utilize transfer-learning and ensemble learning to achieve
cross-site activity recognition. Zheng et al. [14] ﬁrst propose
the concept of body-coordinate velocity proﬁle (BVP) and
extract BVP from Doppler frequency shift to cross-domain
recognize gestures.

Different from EI. DI does not add any loss constraints
on activity number rate. Moreover, the multiple algoritms in
CrossSense makes it less explainable and cost much time
during training, yet DI only employs one model. BVP is an
effective way for dynamic gesture recognition. However, it can
not work on static gestures like DI can do.

III. MOTIVATION AND PRELIMINARY

In this section, we ﬁrst introduce the impact of domain
in RF-based activity/gesture recognition. Then we brieﬂy
introduce the principle and the application of FGSM.

Fig. 1. The signal sample is separated by both gesture gap and domain gap..

A. The impact of domain

Though RF-based activity/gesture recognition has been per-
vasively studied in recent years, the practical use and landing
are not well promoted. The reason behind is the diversity
of the implementation domain, including person domain and
environment. Since each speciﬁc domain has its own unique
signal embedding scheme, in different domains, even the same
gesture would yield different signal distortions. In this case,
two signal measures of the same gesture, which are collected
in two different domains, have a domain gap between each
other. If those two signals are collected under not only different
gesture settings but also different domian settings, there will be
two categories of gaps between them: domain gap and gesture
gap. As illustrated in Fig. 1, we plot some signal samples
after dimension reduction by t-SNE [20]. Different colors
represent different gestures and different patterns represent
different domains. Apparently, signal samples which belong
to two gestures are divided into four clusters according to
both the diversity of gestures and the diversity of domains.
However, normal learning algorithm can only learn the gap
between gestures yet neglect the gap between. Thus, normal
learning algorithm can not deal with multi-domain signals.
Motivated by this issue, we propose DI to eliminate the gap
between domain by adding domain-eliminating factors. In this
way, even traditional machine learning algorithms are qualiﬁed
to recognize activities/gestures domain-independently.

B. Fast Gradient Sign Method

Adversarial sample attack falls into two categories accord-
ing to whether the attacker has knowledge about the target
model architecture or not: whitebox attack and blackbox
attack. Fast gradient sign method (FGSM) [21] is one of
the classic whitebox adversarial sample generation methods.
Basically, adding perturbation on normal sample is the core of
FGSM. This perturbation is calculated based on the signs of
gradients. Speciﬁcally, the procedure to generate a adversarial
sample by using FGSM can be segmented into three steps:
1) Training a normal deep model M which can correctly
classify sample x. 2) Calculating the gradient map of x by
back propagating on M and obtaining the sign map s of this

Gesture1Domain1Gesture2Domain1Gesture2Domain2Gesture1Domain2DomainGapGestureGapgradient map. 3) Determining a factor (cid:15) and calculating xa
by:

xa = x + (cid:15) × s.

(1)

If xa is incorrectly classiﬁed by M , X a is qualiﬁed as an
adversarial sample towards model M .

Interestingly, in DI, the sign map of the gradient map is
leveraged as a domain gap eliminator (DGE) rather than a
deep model adversarial sample generator.

IV. DI OVERVIEW
In this section we ﬁrst brieﬂy introduce the workﬂow of DI

and then each module of DI is elaborated.

As shown in Fig. 2, DI contains two modules: data ac-
quisition and AH-Net processing. Data acquisition is uti-
lized to collect raw CSI data and conduct preprocessing of
donoising. The output of data acquisition, denoised amplitude,
is the input of AH-Net processing. AH-Net processing aims
to generate DGE for each original domain-speciﬁc sample.
Afterwards, traditional machine learning algorithm and deep
learning model are all optional gesture recognizer. The details
are elaborated as followings:

• Data acquisition: This module is the ﬁrst module of
DI. Due to that DI is a learning-based system, training
set collection is the ﬁrst step of data acquisition. In
this step, signals are collected when the user is acting
a gesture between the transmitter and the receiver. Then
signals are transformed as CSI data by using CSI tool
[22]. Afterwards, CSI data is denoised through ﬁltering.
Kalman ﬁlter [23] is an outstanding candidate in our
empirical study. Further, DI calculates amplitude for
each CSI sample and inputs amplitude samples into next
module.

• AH-Net processing: In this module DI mainly trains
the core of DI, namely AH-Net, and generates DGE for
each sample. Speciﬁcally, DI ﬁrst accepts the amplitude
samples which are outputted from data acquisition mod-
ule as training set. Since AH-Net is mainly composed
of a DCNN, i.e., domain DCNN, DI sufﬁciently trains
the DCNN by using the training set. Thereafter, DI
achieves the ability of DGE generation for any sample.
Actually, AH-Net is the tool of DI to calculate DGE. In
case each sample is added by its corresponding DGE,
each sample becomes domain-independent. Afterwards,
DI can select one of the learning algorithms from KNN,
SVM and CNN as ﬁnal recognizer. Comparing with KNN
and SVM, CNN can reach higher recognition accuracy.
However, KNN and SVM are more lightweight. The
ﬁnal recognizer can be determined according to the
conﬁguration of the application scenario.

V. METHODOLOGY
This section elaborates the training set construction method
in the ﬁrst part. Then the architecture of AH-Net is introduced
in detail. At
last, we introduce the optimization objective
function and training method. We arrange the details of DI
usage in the last part.

Fig. 2. The workﬂow of DI. It consists of two modules: data acquisition and
AH-Net processing.

A. Training set construction

Training set is of importance for a learning-based algorithm.
The training sample of DI is special because domain is also a
recognition target except for gesture. Speciﬁcally, each training
sample has two labels: domain label and gesture label. When
collecting training samples, each gesture is posing in every
domain for several times. If there are 10 gestures and 10
domains, training set should contains 10 × 10 categories of
training samples. After marking each sample with two labels,
training set is constructed and utilized for domain DCNN
training and gesture recognizer learning.

B. AH-Net architecture

As shown in Fig. 3, AH-Net mainly has a domain deep
convolutional neural network and a procedure of domain-
independent sample generation. Domain DCNN has three
convolutional layers and two fully connected layers. Each
layer is followed by a batch normalization
convolutional
function and a ReLU activation function. The kernel sizes
of the ﬁrst, the second and the third convolutional layer are
16 × 3 × 3, 32 × 3 × 3 and 64 × 3 × 3 respectively. Each fully
connected layer is followed by a Sigmoid activation function
to increase nonlinearity.

The procedure of domain-independent sample generation is
composed of three steps. First, for a sample x, DI obtains
sign map for input x through backpropagation in well-trained
domain DCNN. Then the sign map is multiplied by a hyper-
parameter α, which generates a DGE for x. At last, x is added
by the DGE and becomes a domain-independent sample.

CSI Collection Data Acquisition CSI Filtering Amplitude Calculation AH-Net Processing Gap Eliminator Calculation Domain-Independent Sample Acquisition Original Sample  α Selection Domain DCNN KNN SVM CNN Fig. 3. The architecture of AH-Net. Two DCNN are trained to generate domain gap eliminator.

C. Objective function and training method

Objective function: For domain DCNN, DI utilizes cross

entropy loss to optimize it, which can be formulated by:

LOSSd = −

N
(cid:88)

c=1

yc log(Pc).

(2)

In this formula, N is the number of domains. yc is the
indication variable and Pc denotes the probability that the
input is classiﬁed as domain c. If the the user chose CNN
rather than KNN and SVM as the ﬁnal gesture recognizer,
the optimization objective function of gesture CNN is cross
entropy loss as well, which is represented by:

LOSSg = −

M
(cid:88)

c=1

yc log(Pc),

(3)

where M is the number of gestures. yc and Pc have similar
representations with them in Eq. 2.

Training method: There are two parts of learning -based
model need to be trainined in DI. DI ﬁrst trains the do-
main DCNN with training samples and their domain labels
by optimizing according to above mentioned loss function.
Afterwards, DI needs to select an algorithm from KNN, SVM
and CNN to recognize gestures. If CNN is the ﬁnal chose, it
would be trained via above mentioned loss function as well.

D. DI usage

For training samples, they have two labels: domain labels
and gesture labels. DI uses training samples and domain labels
to train AH-Net. Then gradient map for each training sample
is calculated through backpropagation. Afterwards, DI obtains
sign map for each gradient map. Further, each sign map is
multiplied by well-selected α and becomes a DGE. At last,
each training sample is added by its own DGE and becomes a
domain-independent sample. DI converts all training samples
into domain-independent training samples (DITS) and trains
the gesture recognizer with DITS.

When DI receives a recognition request with a CSI sample,
it ﬁrst processes the CSI sample and obtains amplitude sample
x using data acquisition module. Afterwards, x is fed into
domain DCNN and its domain y is obtained. Thereafter, DI
calculates x’s gradient map g and g’s sign map s with the
formula:

s = sign((cid:53)xf (Θ, x, y)),

(4)

Fig. 4. The gender, hight and weight of volunteers.

Fig. 5. Experiment setup.

in which sign(·) means obtaining the sign for each element.
(cid:53)x means calculating gradient map for x. f (Θ, ·, ·) represents
domain DCNN. Further, a domain-independent xDI is calcu-
lated by:

xDI = x + α × sign((cid:53)xf (Θ, x, y)).

(5)

At last, DI inputs xDI into gesture recognizer and obtain
corresponding gesture index.

VI. IMPLEMENTATION AND EVALUATION

We conducted experiments with a commodity WiFi system
with 10 volunteers, i.e., 10 domains, and 10 gestures. The
information of 10 volunteers are displayed in Fig. 4. The
scatter plot of domains are dicentralized, which proves the
validity of the domain. The hyper-parameter α is set as 0.1 by
default.

Hardware: Both the transmitter and the receiver we used
have three antennas. The receiver is a commercial WiFi

64×3×3 32×3×3 16×3×3 Flat 1×S×T Gradients Calculation - - - + + + + + + × ε + Domain  Sign Map Domain Gap Eliminator Domain-Independent  Sample Input Sample Input Sample Input Obtain - - 155160165170175180185Height (cm)5060708090Weight (kg)MaleFemaleTransmitter Receiver Wooden Desk router,
the type of which is TPLink WDR7500-V3. Both
the transmitter and the receiver are equipped with Atheros
AR9500 Chips. We employ a computer with a i7-8700k CPU
to collect signals.

Software: The operation system for signal collection is
Ubuntu 14.04. We use the Linux CSI tool provided by [22]
to obtain CSI measurement. The collected CSI is then pro-
cessed by Matlab and Eclipse. Our deep learning model is
programmed by Python language and Pytorch framework. We
run the model process on CUDA8.0.

Experiment setup: As shown in the top part of Fig. 5, the
volunteer is posing a gesture between the transmitter and the
receiver. Both the transmitter and the receiver are 60cm away
from the volunteer and 80cm off the ground. Ten gestures from
zero to nine are displayed in the bottom part of Fig. 5.

Evaluation metric: The metric that commonly used for
gesture recognition system evaluation is the accuracy, which
can be formulated as:

accuracy =

Ncor
Nall

.

(6)

Ncor is the number of correctly recognized test samples and
Nall is the number of all test samples.

A. Evaluation with default α

Recalling that DI can convert each domain-speciﬁc sample
into domain-independent sample, we use t-SNE [20] to reduce
the dimension of four categories of domain-independent sam-
ples and plot them in Fig. 6. Different colors represent different
gestures and different shapes represent different domains.
Apparently, the gap of domain is effectively eliminated.

In order to show the superiority of domain-independent
samples, we separately train KNN, SVM and CNN and then
display the recognition accuracy in Fig. 7(a). Before DI
processing, the accuracy of KNN, SVM and CNN are 73.63%,
56.32% and 9.89%, which are signiﬁcantly low for a gesture
recognition system. After DI processing, the accuracy of KNN,
SVM and CNN increase to 84.65%, 84.89% and 90.92%,
respectively. The noticeable increase of the accuracy indicates
that DI is efﬁcient at domain gap eliminating.

Fig. 6. The domain gap is effectively eliminated.

TABLE I
COMPARING DI WITH EI, CROSSSENSE, WIAG AND WIDAR3.0.

Approach

DI

EI

CrossSense WiAG Widar3.0

Accuracy
S. G. P.
B M. L. T.
G. P. C.

94.45% ≤ 90%

Yes
Yes
No

Yes
Yes
Yes

90%+
Yes
No
No

91.40%
Yes
Yes
No

92.70%
No
Yes
No

B. Effect of α on CNN

In order to explore the effect of the hyper-parameter α on
CNN, we varied α from 0.04 to 0.20 with a stride of 0.01. The
experiment results are shown i Fig. 7(b). with the decrease of
α from 0.04 to 0.20, the general variation trend of the mean
accuracy curve is negative, i.e., smaller α can yield higher
accuracy. When α is 0.04, the accuracy reaches the maximum
94.45%. The reason that we did not reduce α since 0.04 is
that the DGE is decreasingly effective when α becomes lower
since 0.04. We draw this conclusion from two observations:
1) when we trained AH-Net (when α is 0.02 or 0.03) for
many times, the accuracy sometimes is lower than 10% (i.e.,
dommain gap eliminator is sometimes ineffective), 2) when α
is 0.01, the accuracy is always lower than 10% (i.e., the DGE
is always ineffective). In brief, DI can bring a recognition
accuracy increase of 80%+ on CNN.

C. Effect of α on KNN

Similar to the experiments on CNN, we varied α from 0.05
to 0.25 with a stride of 0.01. The experiment results shown
in Fig. 8(a). The general variation trend of the accuracy is:
with the increase of α before 0.19, the accuracy is increasing,
afterwards the accurac is decreasing with the increase of α.
When α, the accuracy curve reaches its peak 87.33%. This
accuracy outperforms EI.

D. Effect of α on SVM

Similar to the experiment on KNN, we show the results in
Fig. 8(b). The variation trend of the SVM accuracy is similar
to the KNN accuracy. SVM achieves the best accuracy 90,12%
when α is 0.19.

E. Comparison with existing works

We compared DI with four state-of-the-art approaches: EI,
CrossSense, WiAG and Widar3.0. The comparison results are
shown in Table I. S. G. P. in the ﬁrst column means that
static gesture is permitted. B. M. L. T. means that the number
of basic learning models is less than three. G. P. C. means
the gesture percentage constraint. As one can see from Table
I, DI achieve the highest accuracy and the least recognition
constraints.

VII. CONCLUSION

This paper ﬁrst presented the concept of domain gap in
WiFi-based gesture recognition and then proposed a frame-
work DI to eliminate domain gap. DI employs a novel deep

domain1domain2(a) DI improves the recognition accuracy.

(b) The effect of α on CNN.

Fig. 7.

(a) The validity of DI and (b) the effect of α.

(a) The effect of α on KNN.

(b) The effect of α on SVM.

Fig. 8. The effects of α on (a) KNN and (b) SVM.

model, namely AH-Net, to generate domain gap eliminator,
further to achieve domain-independent gesture recognition.
The experiments on ten domains and ten gestures show that
DI can achieve the recognition accuracy of 94.45%, which is
better than previous works.

REFERENCES

[1] G. Gkioxari, R. B. Girshick, P. Doll´ar, and K. He, “Detecting and rec-
ognizing human-object interactions,” in IEEE Conference on Computer
Vision and Pattern Recognition, CVPR, 2018, pp. 8359–8367.

[2] T. Li, Q. Liu, and X. Zhou, “Practical human sensing in the light,”
GetMobile Mob. Comput. Commun., vol. 20, no. 4, pp. 28–33, 2016.
[3] K. Kalgaonkar and B. Raj, “One-handed gesture recognition using
ultrasonic doppler sonar,” in Proceedings of the IEEE International
Conference on Acoustics, Speech, and Signal Processing, ICASSP, 2009,
pp. 1889–1892.

[4] R. Nandakumar, A. Takakuwa, T. Kohno, and S. Gollakota, “Covertband:
Activity information leakage using music,” IMWUT, vol. 1, no. 3, pp.
87:1–87:24, 2017.

[5] Y. Guan and T. Pl¨otz, “Ensembles of deep LSTM learners for activity
recognition using wearables,” IMWUT, vol. 1, no. 2, pp. 11:1–11:28,
2017.

[6] A. Bulling, U. Blanke, and B. Schiele, “A tutorial on human activity
recognition using body-worn inertial sensors,” ACM Comput. Surv.,
vol. 46, no. 3, pp. 33:1–33:33, 2014.

[7] Y. Wang, J. Liu, Y. Chen, M. Gruteser, J. Yang, and H. Liu, “E-eyes:
device-free location-oriented activity identiﬁcation using ﬁne-grained
wiﬁ signatures,” in The 20th Annual International Conference on Mobile
Computing and Networking, MobiCom’14, 2014, pp. 617–628.

[8] H. Abdelnasser, M. Youssef, and K. A. Harras, “Wigest: A ubiquitous
wiﬁ-based gesture recognition system,” in 2015 IEEE Conference on
Computer Communications, INFOCOM, 2015, pp. 1472–1480.

[9] R. H. Venkatnarayan, G. Page, and M. Shahzad, “Multi-user gesture
recognition using wiﬁ,” in Proceedings of the 16th Annual International
Conference on Mobile Systems, Applications, and Services, MobiSys,
2018, pp. 401–413.

[10] F. Wang, J. Han, S. Zhang, X. He, and D. Huang, “Csi-net: Uniﬁed
human body characterization and pose recognition,” arXiv preprint
arXiv:1810.03064, 2018.

[11] W. Jiang, C. Miao, F. Ma, S. Yao, Y. Wang, Y. Yuan, H. Xue, C. Song,
X. Ma, D. Koutsonikolas, W. Xu, and L. Su, “Towards environment
independent device free human activity recognition,” in Proceedings of
the 24th Annual International Conference on Mobile Computing and
Networking, MobiCom, 2018, pp. 289–304.

[12] R. da Rosa Righi, G. Goldschmidt, R. Kunst, C. Deon, and C. A.
da Costa, “Towards combining data prediction and internet of things
to manage milk production on dairy cows,” Comput. Electron. Agric.,
vol. 169, p. 105156, 2020.

[13] A. Virmani and M. Shahzad, “Position and orientation agnostic gesture
recognition using wiﬁ,” in Proceedings of the 15th Annual International
Conference on Mobile Systems, Applications, and Services, MobiSys’17,
2017, pp. 252–264.

[14] Y. Zheng, Y. Zhang, K. Qian, G. Zhang, Y. Liu, C. Wu, and Z. Yang,
“Zero-effort cross-domain gesture recognition with wi-ﬁ,” in Proceed-
ings of the 17th Annual International Conference on Mobile Systems,
Applications, and Services, MobiSys, 2019, pp. 313–325.

[15] F. Wang, S. Zhou, S. Panev, J. Han, and D. Huang, “Person-in-wiﬁ: Fine-
grained person perception using wiﬁ,” in 2019 IEEE/CVF International
Conference on Computer Vision, ICCV, 2019, pp. 5451–5460.

[16] C. Wang, J. Liu, Y. Chen, H. Liu, L. Xie, W. Wang, B. He, and
S. Lu, “Multi - touch in the air: Device-free ﬁnger tracking and
gesture recognition via COTS RFID,” in IEEE Conference on Computer
Communications, INFOCOM, 2018, pp. 1691–1699.

[17] W. Wang, A. X. Liu, M. Shahzad, K. Ling, and S. Lu, “Device-
free human activity recognition using commercial wiﬁ devices,” IEEE
Journal on Selected Areas in Communications, vol. 35, no. 5, pp. 1118–
1131, 2017.

[18] Q. Pu, S. Gupta, S. Gollakota, and S. Patel, “Whole-home gesture

KNNSVMCNNLearning Model0102030405060708090100Accuracy (%)UnprocessedDI0.040.050.060.070.080.090.100.110.120.130.140.150.160.170.180.190.20The hyper-parameter 405060708090100Accuracy (%)Mean accuracy0.050.060.070.080.090.100.110.120.130.140.150.160.170.180.190.200.210.220.230.240.25The hyper-parameter 0102030405060708090100Accuracy (%)81.8281.2080.9683.6483.8184.6583.1284.4884.0885.5084.5583.9283.8185.3387.1384.9183.4083.4084.2483.7283.330.050.060.070.080.090.100.110.120.130.140.150.160.170.180.190.200.210.220.230.240.25The hyper-parameter 0102030405060708090100Accuracy (%)80.2379.3979.6084.8484.3184.8985.3385.0186.1787.6888.1286.3786.8188.0090.1288.4086.4187.6488.4588.6286.27recognition using wireless signals,” in The 19th Annual International
Conference on Mobile Computing and Networking, MobiCom’13, 2013,
pp. 27–38.

[19] J. Han, C. Qian, Y. Yang, G. Wang, H. Ding, X. Li, and K. Ren,
“Butterﬂy: Environment-independent physical-layer authentication for
passive RFID,” IMWUT, vol. 2, no. 4, pp. 166:1–166:21, 2018.
[20] T. Horrocks, E. Holden, D. Wedge, C. Wijns, and M. Fiorentini,
“Geochemical characterisation of rock hydration processes using t-sne,”
Comput. Geosci., vol. 124, pp. 46–57, 2019.

[21] I. J. Goodfellow, J. Shlens, and C. Szegedy, “Explaining and harnessing
adversarial examples,” in 3rd International Conference on Learning
Representations, ICLR, 2015.

[22] D. Halperin, W. Hu, A. Sheth, and D. Wetherall, “Tool release: gathering
802.11n traces with channel state information,” Computer Communica-
tion Review, vol. 41, no. 1, p. 53, 2011.

[23] Y. Kang, Z. Shi, H. Zhang, D. Zhen, and F. Gu, “A novel method for
the dynamic coefﬁcients identiﬁcation of journal bearings using kalman
ﬁlter,” Sensors, vol. 20, no. 2, p. 565, 2020.

