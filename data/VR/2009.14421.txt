0
2
0
2

p
e
S
0
3

]

C
H
.
s
c
[

1
v
1
2
4
4
1
.
9
0
0
2
:
v
i
X
r
a

A Virtual Reality Game as a Tool to Assess
Physiological Correlations of Stress

Daniel H. Lee∗and Tzyy-Ping Jung
Institute for Neural Computation
University of California, San Diego
9500 Gilman Drive, San Diego, CA 92093
danielhlee02@gmail.com, tpjung@ucsd.edu

Abstract

The objective of this study is to develop and use a virtual reality game as a
tool to assess the effects of realistic stress on the behavioral and physiological
responses of participants. The game is based on a popular Steam game called
Keep Talking Nobody Explodes, where the player collaborates with another person
to defuse a bomb. Varying levels of difﬁculties in solving a puzzle and time
pressures will result in different stress levels that can be measured in terms of
errors, response time lengths, and other physiological measurements. The game
was developed using 3D programming tools including Blender and virtual reality
development kit (VRTK). To measure response times accurately, we added LSL
(Lab Stream Layer) Markers to collect and synchronize physiological signals,
behavioral data, and the timing of game events. We recorded Electrocardiogram
(ECG) data during gameplay to assess heart rate and heart-rate variability (HRV)
that have been shown as reliable indicators of stress. Our empirical results showed
that heart rate increased signiﬁcantly while HRV reduced signiﬁcantly when the
participants under high stress, which are consistent with the prior mainstream stress
research. We further experimented with other tools to enhance communication
between two players under adverse conditions and found that an automatic speech
recognition software effectively enhanced the communication between the players
by displaying keywords into the player’s headset that lead to the facilitation of
ﬁnding the solution of the puzzles or modules. This VR game framework is
publicly available in Github and allows researchers to measure and synchronize
other physiological signals such as electroencephalogram, electromyogram, and
pupillometry.

1

Introduction

Various real-life stress can induce homeostatic changes in human behavior, brain, and body. For
instance, associations have been reported between achievement on tests of memory and attention
and the experience of every day minor stressful events(1; 2). To modify the amount of stress that
a person has, researchers have been relying on manipulating the various factors of their subjects’
lives, such as their sleep quality and workload. However, it is unrealistic to control every aspect
of the subjects’ lives, and they may always be more or less stressed than the researchers think they
are, varying the data from the experiment. Furthermore, stress research to date centers on simpliﬁed
stimulus-response paradigms conducted in highly controlled environments that do not resemble
authentic settings, where real-life stress typically takes place. We propose developing a controlled
virtual-reality (VR) environment that can allow for greater control over the subjects’ stress and

∗currently at Westview High School

 
 
 
 
 
 
performance when completing tasks(3). These types of games are known as games with a purpose
(GWAP). They are tools for helping scientists perform experiments and collect data (4).

1.1 Games With A Purpose

There are many examples of GWAP, and most of them were designed to collect data from a large
player base to build on research or improve programs(4). An example of such a game is the Airport
Scanner game, which makes players ﬁnd airport contraband using an X-ray scanner. This data set was
used by researchers to investigate how well baggage screening can be performed. Games have also
been created for studying performance in cognitive tasks. An example of this is Luminosity, where
players play simple games that train various aspects of cognition. Scientists hope to use this database
to gain better insights into how people think and what factors affect cognitive ability. In addition,
games like Foldit (5) or Eyewire (6) use players to advance scientiﬁc studies, such as folding complex
proteins or mapping out the synapses of the brain, respectively. Using these games while adding
neural and physiological measurements is expected to introduce a new dimension to user interaction
and monitoring experiments (7).

This study modiﬁed a popular VR game, Keep Talking and Nobody Explodes (8), to test participants
in a controlled environment. Keep Talking Nobody Explodes is a VR game where one player disarms
a bomb while communicating with another player, a bomb-defusing expert, who has the bomb
defusing instructions. The modules or puzzles for disarming the bomb include certain wires that must
be cut, buttons that must be pressed at certain times, and keypads that must be pressed in a certain
order. The player will need a VR headset (e.g. Oculus or HTC Vive) and controllers to play the game.
Only the player can see the puzzles and bomb in VR, while the bomb-defusing expert can only check
a manual to ﬁnd instructions to solve the puzzles. The player and the bomb-defusing expert must
communicate effectively to defuse the bomb.

1.2 Research Goals of our GWAP

The ultimate goal of this research is to ﬁnd methods to reduce stress and improve performance at a
certain task. The present study aims to ﬁnd physiological markers under stressful and harsh conditions
relating to potential real-life situations. Finding ways to measure stress and how it affects performance
is difﬁcult in the way that it is difﬁcult to control a subject’s stress level. This study develops a VR
game framework that can be used to measure and synchronize physiological signals, behavioral data,
and the timing of game events. The framework needs to be ﬂexible enough to expand to multiple
data modalities and it needs to be able to include tools to assist in solving the tasks. In essence, this
game was meant to be a different version of an already existing game meant for entertainment. It
was a recreation of an existing game and re-purposed as a game with a scientiﬁc purpose so that
researchers could use this game as a tool for studying stress in-depth in a controlled environment.
Furthermore, this game needs to be enjoyable enough so that its players are willing to return to play
the game with different parameters multiple times. The scientists then can acquire sufﬁcient data
over different days/times to allow the researchers to study the variability in the stress-performance
associations across different individuals and times within an individual.

2 Methodology

To create a controlled environment where researchers can measure the performance of a task and
manipulate how well the subject performs, we designed a VR game based on the game Keep Talking
and Nobody Explodes (8), which measures the subjects’ reaction times, communication times, and
precision and recall of tasks. There are multiple levels of difﬁculty expressed in more puzzles
(modules) and less time to solve them. There are many ways to measure stress and among those one
of the most widely studied methods is to measure heart rate and HRV derived from ECG recordings
(9). We developed a simple framework where we can record the ECG signals while playing the
game under varying stress conditions and mark the ECG signals with start and end times of solving
a game module or events that are triggered within the game. The event markers are created by the
Lab Streaming Layer (LSL), a recording and annotation software (10) that synchronizes the recorded
signals with events during the game.

2

Our method is also extendable with the inclusion of other physiological data such as Electroen-
cephalogram (EEG), electromyogram (EMG), and pupilometry. Similar to ECG, the EEG/EMG data
can be integrated with this game through the LSL software.

2.1 Overview of the VR Game Design of Keep Talking and Nobody Explodes

The game we created originates from a popular social game called Keep Talking and Nobody
Explodes, where one player disarms a bomb based on another player’s instructions. The player giving
the instructions has a bomb-defusing manual that has instructions to solving each puzzle module, and
when all the puzzle modules are solved, the bomb is disarmed. The player who has the instructions,
or the bomb-defusing expert, cannot see the bomb or the puzzles, and the player who can see the
bomb does not have the instructions. Therefore, the two players must collaborate and communicate
effectively to disarm the bomb.

In our version of the game, we implemented the following ﬁve types of modules: Wires, Keypad,
Simon Says, Button and Venting Gas. Figure 1 shows the image of the bomb with the ﬁve types of
modules. The timer at the top of the bomb indicates the time before the bomb explodes, and how
many mistakes the player has made (marked as an x per mistake, which is not shown in the ﬁgure).
The timer was implemented using the Unity time.time function. For the Wire module (shown in the
top left, top right, and two in the middle right), the player is required to cut a certain wire based on the
color of the wires and how many there are. For the Keypad module (shown at the bottom right), the
player must press the keypad in a certain order depending on the symbols displayed on the keypad.
For the Simon Says module (shown in the top and bottom middle), the player must press the buttons
in a certain order based on which button is blinking. For the Button module (shown in the leftmost
middle row), the player must press the button at a certain time to solve it. The Venting Gas module,
in the bottom left, is a “needy module” that captures the player’s attention and causes more stress.

These modules are solved based on our version of the bomb-defusing manual, part of which is shown
in Figure 2. When playing this game, one player with the VR headset can see the bomb, as shown in
Figure 1, while the other player reads this manual to instruct the player who is disarming the bomb.

In our initial implementation, there were three difﬁculty levels: easy, with four modules to solve in
ﬁve minutes, medium, with six modules to solve in two minutes, and hard, with nine modules to
solve in one and a half minutes, as shown in Table 1. Because this study focuses on the physiological
correlates (e.g. HR and HRV) of stress levels (easy vs hard), we simpliﬁed the difﬁculty levels of
our GWAP so that the players were instructed to solve a random puzzle in two minutes (easy) or
twenty seconds (hard) to simulate non-stressful and stressful conditions, respectively. We describe
this experiment and its results in more detail in the following sections.

Figure 1: An image of the bomb in the VR game. The top left, right and middle portions of the bomb
are the wire modules. The top middle and bottom middle modules are the Simon Says modules. The
solution manual is depicted in Figure 2 (A). The module in the bottom right is the keypad module,
the module in the middle left is the button module, and the module in the bottom left is the venting
gas module. The solution to the keypad module is depicted in Figure 2 (B).

.

3

Figure 2: Two sample pages of the bomb manual used in this study. The purpose is to allow the bomb-
defusing expert to explain to the player how to solve the puzzles in the game. (A) the bomb-defusing
instructions for the Simon Says module; (B) the bomb-defusing instructions for the keypad.

.

Table 1: Difﬁculty Table for our initial version of Keep Talking and Nobody Explodes

Difﬁculty
Time
Number of Modules

Easy Medium Hard
5 min
4

2 min
6

1.5 min
9

2.2 Software Tools Used to Develop the VR Game

We used Unity (11), a popular game engine tool because it uses a well-known programming language
and has a simple UI. We also used Blender (12), an open-source rendering tool, because of its
popularity and vast amounts of resources online.

We made 3D models such as the bomb itself in blender and imported them into Unity. Afterward,
the textures were applied to the game objects in Unity. After applying these textures found from the
Unity store and online, we started to create the codes in the game. We ﬁrst implemented the ﬁve
types of modules (Wire, Button, Simon Says, Keypad, and Venting Gas, which are described in the
previous section) in C#.

To convert our game into VR, we used VR Toolkit (13), a VR library compatible with Unity. Some
of the functions (such as grabbing an object and moving it) were already included in the VR library,
but we had to modify others so that our game would work with those VR functions that allowed the
player to use the game objects.

2.3 Adding Event Markers into the VR GWAP for Time Measurements

Lab Streaming Layer (LSL) (10) is a scientiﬁc tool used to synchronize streaming data for live
analysis or recording. We used LSL Markers to indicate when certain events triggered, like when the
player pressed a speciﬁc button or cut a speciﬁc wire. LSL is a cost-efﬁcient data acquisition and
synchronization framework for distributed systems with a focus on reliability, near-real-time access,
and time-synchronization. We used the Unity LSL library to mark and broadcast certain events and
output timestamps with those events. In our GWAP game, the event markers included when the
player started each session (resting, hard, easy sessions), when the player pressed a button or cut a
wire, when the player solved a module, and when each session ended.

4

Figure 3: The code used for outputting an event marker and using VR functions like grabbing and
moving an object.

.

Figure 3 shows a sample code used to output an event marker when the button module is pressed.
Lines 73 to 79 deﬁne the function StartUsing, which is called when the button is pressed in VR.
Line 76 is where the event marker itself is sent out. Lines 82 to 91 deﬁne the function StopUsing,
which is called when the button is released and checks whether the player has solved the module or
not. The rest of the codes can be viewed through the GitHub link (14).

2.4 Recording and Analyzing Electrocardiogram Data

This section presents how physiological data can be used in conjunction with this game. To measure
the electrical signal of the heart, we used a wearable ECG device called Heartypatch and its recording
software(15). Figure 5 shows a sample ECG recording obtained from the device and its software.

The trials we recorded were split into two-minute or twenty-second sessions, with a one-minute break
in between sessions. Each session required the player to solve a random puzzle module, from cutting
wires to pressing buttons. The two-minute sessions were the easy sessions with little stress, while
the twenty-second sessions were meant to be stressful (hard) sessions that tested the player’s ability
to solve puzzles under a very short time limit. Figure 4 shows ECG data synchronized with event
markers from the game, revealing the various levels of ECG signal depending on how stressful the
player was at key points in the game.

2.5 HRV Measurements

Heart rate is the number of heartbeats per minute. Heart rate variability is the ﬂuctuation in the time
intervals between adjacent heartbeats (16). To calculate HRV, we ﬁrst ﬁnd the time intervals between
the consecutive heartbeats using the findpeaks function in MATLAB. Figure 5 shows heartbeats
and time intervals between consecutive heartbeats of a sample ECG recording. We then compute
the differences between the adjacent time intervals and then square them. Finally, we add all those
squared differences, divide it by the total number of the squared differences to ﬁnd the mean, and then
take the square root of the mean to ﬁnd the HRV. This process is succinctly shown in the following
equations:

y =

n−1
(cid:88)

i=1

(ti − ti+1)2

HRV = (cid:112)y/(n − 1),

(1)

(2)

where the ti is the i-th time interval (the difference in time in milliseconds) between two consecutive
heartbeats and n is the total number of the time intervals.

5

Figure 4: We recorded the ECG of the player using the HeartyPatch sensor while the player was
playing the game, and overlaid it with the event markers. The total recording is four minutes and
thirty seconds. For the ﬁrst minute, the player is resting to normalize their heartbeat. Afterward, for
two minutes the player is playing the non-stressful version of the game (easy mode). The player then
takes a minute rest and starts the stressful version of the game for twenty seconds (hard mode).

.

Figure 5: We recorded the ECG of the player using the wearable HeartyPatch while the player was
playing the VR game. The time intervals between consecutive heartbeats are depicted to demonstrate
the variability of the time intervals.

.

6

Figure 6: This MATLAB code takes an xdf data ﬁle recorded from LSL and plots the ECG with
Event Markers from playing the VR game. It also ﬁnds the HRV across multiple sections of the data
separated by event markers and plots the HRV values as a bar graph.

.

3 Experimental Results

This section presents our initial experimental ﬁndings that relate the variability in time stress with the
physiological responses such as heart rates and HRV.

3.1 Experimental Results with HRV Measurements

The goal of this pilot study was to explore how variability in time stress relates to variability in
physiological responses (e.g. heart rate and HRV) of healthy individuals. To this end, we recorded the
event markers, the players’ ECG, and their behavioral data under three conditions: stressful (hard),
non-stressful (easy), and resting conditions. The stressful (hard) condition required the player to
solve a puzzle module in twenty seconds, while the non-stressful (easy) condition allowed the player
to solve a puzzle module in two minutes and the resting condition allowed the player to take a break
for one minute between two sessions. In each experiment, the participants played four hard sessions,
four easy sessions, and eight resting sessions. The easy and hard sessions were played in random
sequence in the experiment. Two healthy individuals participated in this pilot study, resulting in the
ECG signal data for a total of eight hard, eight easy, and 16 resting sessions.

After collecting the data through LSL from our experiment, we split the data using the event markers
from the game. We identiﬁed which sections of the ECG data correspond to easy, hard, or resting
sessions. We then analyzed the data from the separated and categorized (easy, hard, or resting)
sessions to ﬁnd the average heart rate and HRV values for the easy, hard, or resting conditions using
MATLAB as shown in Figure 6.

Figure 7 shows the average heart-rate values under the three (resting, hard, and easy) conditions.
The hard (stressful) sessions have the highest average heart rate of 96 bpm. The resting and easy
(non-stressful) sessions have average heart rates of 84 and 82 bpm, respectively. The difference
between the average heart rates of easy and resting sessions is small, but the error bar for the easy
sessions is larger, indicating that the variation of heart rates in the easy sessions is larger.

7

Figure 7: This ﬁgure shows the average heart rates in beats per minute for two subjects for the 16
resting sessions, eight easy (non-stressful) sessions, and eight hard (stressful) sessions. The error bars
denote the variations in the heart rates within the resting, easy and hard sessions.

Figure 8 shows the average HRV in milliseconds, along with error bars, under the three (resting,
hard, and easy) conditions. As shown in the bar graph, the average HRV value under stressful (hard)
condition is around 30 milliseconds while those under the non-stressful (easy) and resting conditions
are around 40 milliseconds and 50 milliseconds, respectively. Thus the difference between the average
HRV values of the resting and easy conditions is around ten milliseconds, and the difference between
those under the easy and hard conditions is also ten milliseconds, which makes the difference between
the average HRV values under hard and resting conditions to be about 20 milliseconds. We also note
that the average HRV value under stressful (hard) condition is the lowest.

We used statistical tests to examine if the differences in HRV between conditions are statistically
signiﬁcant. To calculate statistical signiﬁcance, we determined the null hypothesis and an alternate
hypothesis. Since the level of statistical signiﬁcance is often expressed as a p-value between zero and
one, we calculated p-value to show that our results are statistically signiﬁcant. Typically, a p-value
less than 0.05 is considered statistically signiﬁcant. We thus used a one-tailed hypothesis with a
signiﬁcance level of 0.05.

To calculate the p-values, we ﬁrst calculated the standard deviation for both sets of data under the
statistical comparison. Then, we calculated the t-score and the degrees of freedom using the number
of samples in each data set (17). Finally, we used a p-value calculator to ﬁnd the p-value using the
t-score and the degrees of freedom (18).

For example, to ﬁnd the p-value between hard (group 1) and easy (group 2) sessions, we used the
following steps:

First, we determined the null hypothesis and the alternative hypothesis as follows: The null hypothesis:
"There is no signiﬁcant difference in the data sets (HRV values) of group 1 (hard sessions) and group
2 (easy sessions)." The alternative hypothesis: "There is a signiﬁcant difference in the data sets (HRV
values) of group 1 (hard sessions) and group 2 (easy sessions)."

Second, we calculated the standard deviation σ of the HRV values (data sets) for the hard sessions
and easy sessions using the following formula:

σ =

(cid:118)
(cid:117)
(cid:117)
(cid:116)(

N
(cid:88)

i=1

(xi − µ)2)/(N − 1),

(3)

8

where xi is an individual data value in the given group (hard or easy), µ is the mean of the data for
the given group (hard or easy), and N is the total sample size of the given group (hard or easy).

Third, we calculated the standard error s between group 1 (hard) and group 2 (easy) sessions using
the following formula:

s = (cid:112)(σ1/N1) + (σ2/N2),
where σ1 is the standard deviation for the data in group 1 (hard), N1 is the sample size of group 1 (8
for hard), σ2 is the standard deviation for the data in group 2 (easy), and N2 is the sample size of
group 2 (8 for easy).

(4)

Fourth, we calculated the t-score using the following formula:

t = |µ1 − µ2|/s,

(5)

where µ1 is the mean of the data for group 1 (hard), µ2 is the mean of the data for group 2 (easy),
and s is the standard error between group 1 and group 2.

Next, we calculated the degrees of freedom d using the following formula:

d = N1 + N2 − 2,

(6)

where N1 is the sample size of group 1 (8 for hard), and N2 is the sample size of group 2 (8 for easy).

Finally, we used the p-value calculator (18) to ﬁnd the p-value based on the t-score and the degrees
of freedom d.

As shown in Figure 8, the p-value for the null hypothesis that there is no signiﬁcant difference
between the average HRV values in hard and easy sessions is p = 0.00244, which is less than the
signiﬁcance level of 0.05.

This means that the difference between these values is statistically signiﬁcant and unlikely to happen
by chance. The HRV differences between resting and hard groups and between resting and easy
groups are also statistically signiﬁcant since their p-value is much less than 0.05 (p < 0.00001).

Hence, our experimental results showed that the average HRV value is the lowest under the stressful
conditions with statistical signiﬁcance.

Figure 8: This ﬁgure shows the average HRV values under three conditions for two subjects. The
statistical testings show that the HRV differences in the resting vs hard, resting vs easy, and easy vs
hard are all signiﬁcant.

9

3.2 Comparison with Other Results on Heart Rate Variability Under Stressful Conditions

We compared our ﬁndings of the lower HRV values under stress to prior work such as (19), which
analyzed the inﬂuences on HRV Values in athletes, and (9), which analyzed the relationship between
HRV and regional cerebral blood ﬂow. Both studies showed the stress in athletes and higher blood
ﬂow was correlated with lower HRV values.

In the study (20), researchers evaluated the effect of real-life stress on the cardiac response of
the subjects. They concluded that stress increases arterial pressure and impairs cardiovascular
homeostasis.

Furthermore, in another study (21), participants performed tasks that either had a physical, mental,
or combined load, while their HRV was measured. The study concluded that HRV is affected by
changes in physical or mental states, and they were also able to differentiate between resting, physical
and mental conditions through the characteristics of HRV.

Researchers surveyed London-based civil servants (aged from 35 to 55) (22) to evaluate the stress
levels due to their work. They reported correlations between high work stress, low physical activity,
poor diet, and most importantly lower heart rate variability.

4 Use of Automatic Speech Recognition as a Tool to Support

Communication

When playing the game, we realized a problem that affected the communication between two players.
The player often had to ask the bomb-defusing expert to clarify their instructions multiple times to
make sure that they had conﬁdence in what wires needed to be cut or what button sequence needed
to be pressed. This process of double-checking resulted in delays and possible confusions while
disarming the bomb. This issue becomes more signiﬁcant for harder modules such as cutting several
wires in a sequence where the bomb defuser has to correctly memorize the sequence.

This section describes how the use of an Artiﬁcial Intelligence (AI) assistant in the form of an
automatic speech recognition system can help the player to visualize the instructions inside the VR
headset.

4.1 Use of Speech Recognition During Game Play

To showcase our concept, we decided to use a readily available speech recognition system in the
Unity library called DictionRecognizer. This tool in Unity listens to speech input and returns a string
of words it recognizes in the speech input.

To provide just the precise information to the player, we used a dictionary of keywords that are
used for solving the puzzle to check if the recognized spoken words are part of the keywords. This
game-speciﬁc dictionary ﬁlters out unimportant sentences and words to display only keywords such
as “wire”, “bomb” or names of colors, so that the player can focus on the important instructions only.
We came up with 20 keywords that were important to solve the puzzles and stored them in an arraylist.
Each recognized word is then compared against the words that are in the arraylist to determine if they
should be shown in the headset display. Figure 9 shows the sequence of this speech-to-text program,
the keyword ﬁltering, and how the words appear in the display.

10

Figure 9: The game records the speech signal and sends it to the Automatic Speech Recognition
program in Unity. The program converts the speech signal to text and sends it through the game-
speciﬁc dictionary ﬁlter, where sentences and phrases that do not contain keywords are cut out. The
resulting keywords are displayed in the VR headset.

.

For time-sensitive tasks such as the tasks in this game, we believe that the use of the speech recognition
system with a keyword ﬁlter can signiﬁcantly facilitate the communication between the player who
disarms the bomb and the player (the bomb-defusing expert) who gives the instruction.

4.2 Recording ECG and Audio While Using the Speech Recognition Tool

To demonstrate how the speech recognition tool can be used in conjunction with the heart-rate
measurements, we developed the above-described speech recognition tool as a feature in the game
that can be enabled or disabled while playing the game.

Figure 10: A sample recording shows the synchronized ECG, audio signals, the output of the AI-based
speech-recognition system, and behavioral data during the gameplay. The bomb-defusing expert told
the player what to do, "um, it’s a white button." The AI-based speech-recognition system detected the
keywords, "White button" and displayed it in the VR headset. The player pressed a button at the very
end of the allotted time.

.

We recorded the player’s ECG signals while the player tried to solve the puzzles and disarmed the
bomb and at the same time, we also recorded the audio signal of the other player who gives the
instructions. Afterward, we overlaid the event markers with both the audio and ECG streams, and
synchronized them on the same x axis as shown in Figure 10.

11

This illustration is intuitive and we expect this tool to improve performance during the gameplay and
also believe that it can result in reduced stress which can be measured by the HRV values. Further
experiments and studies with multiple subjects are required to quantify our measurements and verify
this conjecture.

5 Conclusions and Next Steps

In conclusion, we created a VR GWAP framework based on the game "Keep Talking and Nobody
Explodes" intending to relate physiological data and stress levels. The framework includes event
markers so that the physiological, behavioral, and audio data streams and events in the game are totally
synchronized. We used ECG to show how this VR GWAP can be used to assess the physiological
correlates of stress. The empirical results were consistent with those reported in prior studies that the
HRV values decrease with increasing levels of stress (9; 16; 21; 22).

Our game is meant to be a framework for experimentation so that other researchers can add more
tools or sensors. We used ECG to measure heart rate variability as it is known to be correlated with
stress. However, this framework can be extended to sensors such as electroencephalogram (EEG)
to measure brain activities that are correlated with stress, or eye gaze/pupillometry to ﬁnd other
physiological correlates of stress. This framework also allows a thorough investigation into the speech
characteristics of players under stress, for example, to extract features such as pitch or loudness. We
believe that this framework can facilitate further research on the connection between physiological
signals and stress (and other mental and cognitive states).

Acknowledgments

This work was supported in part by grants from US NSF (CBET-1935860, NCS-1734883, IP-1719130,
and SMA-1540943) and US Army Research Lab STRONG Program to TPJ. The authors want to
thank Robin Xu for helping with the VR game code and Kuanjung Chiang for helping with the Data
Analysis in MATLAB.

References

[1] S. Neupert, D. Almeida, D. Mroczek, and A. Spiro, “Daily stressors and memory failures in a
naturalistic setting: Findings from the va normative aging study,” Psychology and Aging, vol. 21,
pp. 424–429, June 2006.

[2] R. S. Stawski, J. Mogle, and M. J. Sliwinski, “Intraindividual Coupling of Daily Stressors
and Cognitive Interference in Old Age,” The Journals of Gerontology: Series B, vol. 66B,
pp. i121–i129, 07 2011.

[3] J. Bailenson, Experience On Demand: What Virtual Reality Is, How It Works, and What It Can

Do. W.W. Norton & Company, 2019.

[4] B. Lance, “Towards Serious Games for Improved BCI.” http://liinc.bme.columbia.edu/

publications/towards-serious-games-for-improved-bci/.

[5] S. Cooper, F. Khatib, A. Treuille, J. Barbero, J. Lee, M. Beenen, A. Leaver-Fay, D. Baker, and
Z. Popovi´c, “Predicting Protein Structures with a Multiplayer Online Game,” Nature News,
2010. https://www.nature.com/articles/nature09304.

[6] J. S. Kim, M. J. Greene, A. Zlateski, K. Lee, M. Richardson, S. C. Turaga, M. Purcaro,
M. Balkam, A. Robinson, B. F. Behabadi, and et al., “Space–time wiring speciﬁcity supports
direction selectivity in the retina,” Nature News, May 2014. https://www.nature.com/
articles/nature13240.

[7] J. K. Zao, T.-P. Jung, H.-M. Chang, T.-T. Gan, Y.-T. Wang, Y.-P. Lin, W.-H. Liu, G.-Y. Zheng,
C.-K. Lin, C.-H. Lin, Y.-Y. Chien, F.-C. Lin, Y.-P. Huang, S. J. Rodríguez Méndez, and F. A.
Medeiros, “Augmenting VR/AR Applications with EEG/EOG Monitoring and Oculo-Vestibular
Recoupling,” in Foundations of Augmented Cognition: Neuroergonomics and Operational
Neuroscience (D. D. Schmorrow and C. M. Fidopiastis, eds.), (Cham), pp. 121–131, Springer
International Publishing, 2016.

12

[8] “Keep Talking and Nobody Explodes,” Jul 2015. https://keeptalkinggame.com/.

[9] H. G. Kim, E. J. Cheon, D. S. Bai, Y. H. Lee, and B. H. Koo, “Stress and Heart Rate Variability:
A Meta-Analysis and Review of the Literature,” Psychiatry Investigation, vol. 15, no. 3, pp. 235–
245, 2018. https://doi.org/10.30773/pi.2017.08.17.

[10] “Lab Streaming Layer,” 2018. https://github.com/sccn/labstreaminglayer.

[11] “Download Unity,” 2004. https://unity3d.com/get-unity/download.

[12] “Download Blender,” 2002. https://www.blender.org/download/.

[13] “VRTK - Virtual Reality Toolkit

Integration: Unity asset
store,” Jun 2016. https://assetstore.unity.com/packages/tools/integration/
vrtk-virtual-reality-toolkit-vr-toolkit-64131.

[ VR Toolkit

]:

-

[14] D. Lee and R. Xu, “Keep-talking-vr-1.0,” 2020. https://github.com/daniel-lee-user/

Keep-Talking-VR-1.0.

[15] K. Chiang, “Heartypatch,” 2020. https://github.com/q89123003/HeartyPatch.

[16] F. Shaffer and J. Ginsberg, “An Overview of Heart Rate Variability Metrics and Norms,”
Frontiers in Public Health, vol. 5, no. 258, 2017. https://doi.org/10.3389/fpubh.2017.
00258.

[17] “How to Calculate Statistical Signiﬁcance (Plus What

Is and Why It’s Impor-
tant),” Feb 2020. https://www.indeed.com/career-advice/career-development/
how-to-calculate-statistical-significance.

It

[18] “Social Science Statistics,” 2002.

https://www.socscistatistics.com/pvalues/

tdistribution.aspxr.

[19] A. Aubert, B. Seps, and F. Beckers, “Heart Rate Variability in Athletes,” Sports Med, vol. 33,

p. 889–919, 2003. https://doi.org/10.2165/00007256-200333120-00003.

[20] D. Lucini, G. Norbiato , M. Clerici , and M. Pagani, “Hemodynamic and autonomic adjustments

to real life stress conditions in humans,” Hypertension, vol. 39, p. 184–188, 2002.

[21] J. Taelman, S. Vandeput, I. Gligorijevic, A. Spaepen, and S. Van Huffel, “Timefrequency
heart rate variability characteristics of young adults during physical, mental and combined
stress in laboratory environment,” Conf Proc IEEE Eng Med Biol Soc, p. 1973–1976, 2011.
https://doi.org/10.2165/00007256-200333120-00003.

[22] T. Chandola, A. Britton, E. Brunner, H. Hemingway, M. Malik, M. Kumari, E. Badrick, M. Kivi-
maki, and M. Marmot, “Work stress and coronary heart disease: what are the mechanisms?,”
European Heart Journal, vol. 29, pp. 640–648, 01 2008.

13

