1
2
0
2

v
o
N
3

]
h
p
-
d
e
.
s
c
i
s
y
h
p
[

1
v
3
7
9
1
0
.
1
1
1
2
:
v
i
X
r
a

Teaching Math with the help of Virtual Reality

Marco Simonetti1 ORCID:0000−0003−2923−5519
Damiano Perri1 ORCID:0000−0001−6815−6659
Natale Amato2 ORCID:0000−0001−5104−9494
Osvaldo Gervasi3 ORCID:0000−0003−4327−520X

1 University of Florence, Dept. of Mathematics and Computer Science, Florence,
Italy
2 University of Bari, Bari (Italy)
3 University of Perugia, Dept. of Mathematics and Computer Science, Perugia, Italy

Abstract. In the present work we intend to introduce a system based
on VR (Virtual Reality) for examining analytical-geometric structures
that occur in the study of mathematics and physics concepts in the last
high school classes.
In our opinion, an immersive study environment has several advantages
over traditional two-dimensional environments (such as a book or the
simple screen of a PC or tablet), such as the spatial understanding of
the concepts exposed, more peripheral awareness and moreover an evi-
dent decreasing in the information dispersion phenomenon. This does not
mean that our pedagogical approach is a substitute for traditional ped-
agogical approaches, but is simply meant to be a robust support. In the
ﬁrst phase of our research we have tried to understand which mathemat-
ical objects and which tools to use to enhance mathematical teaching,
to demonstrate that the use of VR techniques signiﬁcantly increase the
level of understanding of the mathematical subject investigated by the
students.
The system which provides for the integration of two machine levels,
hardware and software, was subsequently tested by a representative sam-
ple of students who returned various food for thought through a ques-
tionnaire.

Keywords: Virtual Reality, Unity3D, Blender

1

Introduction

Much progress has been made in the ﬁeld of VR since it was introduced in
the early 70s of the last century and in many ﬁelds it has found innumer-
able applications such as entertainment[1], teaching[2], tourism[3][4], manufac-
turing industry[5][6], networking and communications[7][8], microelectronic and
hi-performances hardware industries[9][10], e-commerce[11], medicine[12][13].
Today, we have reached a certain maturity of VR techniques and in this work we

 
 
 
 
 
 
intend to deepen some themes concerning simple VR and even AR (Augmented
Reality) experiences in the teaching of mathematics.
During our work, we were struck several times by a precise thought: the possi-
bility of giving real form to the ideal objects of mathematics has always been
a dream caressed by the mind of man who felt the need to convey his ideas to
others without losing their purity and meaningfulness.
From the primitive cave representations of simple arithmetic objects, to the ele-
gant structures of the symbolic algebra of the seventeenth century, through the
imposing constructions of mathematical analysis and modern geometry, to get to
the current and amazing views of numerical analysis through computer graphics.
So, we set out to investigate the possibility of extending students’ understand-
ing of the concept of link between an algebraic-set structure and its geometric
representation on an orthogonal Cartesian space (function).
Obviously, in the ﬁrst phase of the work, the attention was focused on a limited
number of functions, signiﬁcant for the students of the terminal classes, some
representing trajectories in the Cartesian plane, others as surfaces in the three-
dimensional space.
The very ﬁrst proposed functions are as follows:

• y = sin x

The sine function is well known by students who are currently using it to
solve analytical and geometric problems, as well as is commonly used in
physics to model periodic phenomena such as sound and light waves or
even changes in average temperature during the day or the year[14]. As
showed in ﬁg.1

Fig. 1. sinewave

• z = x2 − y2

This function is a classical example of a saddle surface that it is a smooth

surface containing one or more saddle points.
Saddle surfaces have negative Gaussian curvature which distinguish them
from convex/elliptical surfaces which have positive Gaussian curvature

and are very important in the study of non-Euclidean geometry and in
the theory of general relativity[15]. As showed in ﬁg.2

• z = xy

This function is an example of hyperbolic paraboloid[15]. As showed in

ﬁg.2

Fig. 2. Saddle Surface (left) and Hyperbolic Paraboloid (right)
Real and Imaginary part respectively of the function f (z) = z2

• z = ln(x2 + y2)

This function is an example of bi-dimensional logarithm, useful to de-

scribe astrophysical objects. As showed in ﬁg.3

Fig. 3. Bi-dimensional Natural Logarithm

• z =

sin(x2 + y2)
x2 + y2

This function is an example of bi-dimensional dumped sine, useful to
describe objects in ﬂuid dynamics, electronics and telecommunications.
As showed in ﬁg.4

Fig. 4. Dumped Sine

2 Related works

Stimulating multiple sensory dimensions during the learning process of a con-
cept or idea makes the result particularly incisive; our mind needs to experience
the reality that surrounds it through multiple experiential levels: looking, listen-
ing, touching allow us to build a complex conceptual structure that founds and
strengthens our knowledge[16][17].
In our opinion, an immersive study environment has several advantages over tra-
ditional two-dimensional environments (such as a book or the simple screen of a
PC or tablet), such as the spatial understanding of the concepts exposed, more
peripheral awareness or more useful information bandwidth and decreasing in
the information dispersion phenomenon[18]. Several works have been proposed
to achieve the purpose, especially in the natural sciences: chemistry[19], biol-
ogy[20], physiology[21], physics[22].
The idea may therefore be to create digital environments to enhance skills, knowl-
edge and competences in math, avoiding anxiety and bad results[23].
Mathematics can be considered one of the most diﬃcult subjects for many stu-
dents. A recent study asks questions about traditional way of learning and rec-
ommends more active and attractive learning approaches[24].
Studies have shown that immersion in a digital environment can improve ed-
ucation in several ways, because, as we said before, multiple perspectives are
activated[25]; this fact has a signiﬁcant value in all areas of mathematics[26].
In several works it has been seen that despite the mathematical simplicity of
the concept of function[27], many students ﬁnd it diﬃcult to relate its analytical
form to the relative graph, as if the intermediate layers existing between the set
concept and the analytic-geometric one prevented a clear understanding of the
bond[28][29].
It has recently been proven that the use of software capable of explicitly repre-
senting the analytic-geometric link existing in the functions can help students
develop a positive attitude towards mathematics itself, in terms of attitude, mo-

tivation, interest and competence[30], but we believe that new researches need
to be done to grasp the profound implications that exist.

3 The Architecture of the system

We have created two diﬀerent user experiences. One uses the VR, while the
other uses the AR. In both cases the graphic engine used is the same, Unity3D.
This software allows the composition of virtual environments starting from basic
elements called Assets which the scene is composed with. It also takes care of
rendering, real-time lighting calculation and user interaction management. The
fundamental tools that have been used are the following:

• the game objects, i.e. the basic elements that make up the scene you want

the user to view.

• the scripts, code ﬁles written in C# language which you can execute prede-
ﬁned tasks by, such as managing the appearance of objects on the displayed
scene, or the camera movement as a key on the keyboard gets pressed.

• the colliders, that prevent intersection or collision between the character user

is controlling and the objects in the scene

The generation of the shapes is realized with two C# scripts that allow to
model any mathematical function in two or three dimensions. The ﬁrst script
generates the vertices. The second script receives in input a list of vertices, and
generates a three-dimensional ﬁgure.
so, let us suppose we want to render a three-dimensional function, for example :
f (z) = x∗y. As we all know a standard mathematical function like this is deﬁned
in the continuum space, so if we wanted it to be represented we should need an
inﬁnite number of points: the aim is therefore to make the scenario as plausible
as possible in a discreet environment, by appropriately choosing the points to be
drawn. So to do that, it must be chosen a well-deﬁned length along the X, Y and
Z axis, and the number of points (i.e. the number of vertices) that compose the
graph must be predetermined. In other words, we need to deﬁne a grid of points
that will deﬁne the level of maximum detail we want to achieve. In addition, it
must be kept in mind that the greater the level of detail, the more calculations
the user’s device will have to perform to display the object on the screen. Deﬁn-
ing a grid of points is equivalent to deﬁning a sampling rate. This is the same
as when you are processing an electronic signal (e.g. an audio signal) and want
to convert from a continuous signal to its discrete representation. If the number
of samples is too low we can in fact obtain Aliasing, obtaining an inaccurate
representation of the mathematical function we want to show. It is possible to
run the program already with the code just described. However, this requires
to recalculate all forms at runtime each time. To improve performance we have
therefore saved the forms generated with Unity3D inside the ﬁlesystem so that
they can directly be reloaded at program start, with no need to recalculate all
objects from the beginning. We then processed the shapes with Blender in order
to reduce polygonal complexity without changing their information content. In

other words, the complexity of the ﬁgures in terms of vertices has been reduced
but an user who observed them would not notice any diﬀerence. This is possible
using Blender, a software made to process models and three-dimensional objects.
Finally, we have included them again in the Unity3D project.
The VR environment has generated and compiled by WebGL technology. This
means that the application is compatible with all devices (computers or smart-
phones) on the market since the environment is usable through a web browser.
The graphic quality of the scene adapts according to the computational power
of the device, while remaining undemanding in terms of hardware requirements.
The scene can be observed through a virtual reality viewer, such as HTC Vive,
or through a normal computer monitor. The user has the possibility to move
around the virtual environment using mouse and keyboard. Inside the environ-
ment are visible three-dimensional geometric shapes that allow to understand
some mathematical functions otherwise diﬃcult to draw. The AR environment

Fig. 5. VR Example

uses the Vuforia framework. The program created is an apk, installable on An-
droid smartphones with 7.0+ operating system. Vuforia is an SDK that allows
you to analyze the video stream recorded in real time by the phone camera.
Vuforia allows you to create a database of markers (called Vumark). These have
manually been associated to the game objects of the scene. When one of the
markers present in the database is framed by the camera of the user’s device,

Vuforia tells Unity to show on the scene (and then on the user’s screen) the
game object associated with the framed Vumark. Moreover, this SDK manages
the spatial orientation of the object according to the user’s position with respect
to the Vumark. If we frame a Vumark and move around it, the object associated
with it will rotate as well, allowing us to appreciate it in a realistic way.

4 The Virtual World made on Unity3D, Blender and

Vuforia

Suppose we want to represent a three-dimensional function within a virtual world
created with Unity3D. The creation of the ﬁgures is done through two scripts.
First of all it is deﬁned the resolution, that is the level of detail, that the ﬁgure
must have.
If for example we set a resolution equal to 100, then we will have a matrix of
100x100 points. In this way we will scroll the variable X and the variable Y along
the grid. Then the step is deﬁned, i.e. how much space must elapse between one
point and the next. The step variable has been ﬁxed at 0.1f. By means of a
nested double ”for cycle”, where the ﬁrst takes care of the X variable and the
second the Z variable, we can calculate the Y value in the grid.

The code we made allows to obtain the list of points that makes up the ﬁgure.
The next step is to calculate the list of triangles. Triangles are a fundamental
element in computer graphics. They allow you to specify how the points are
interconnected to each other and how they should be rendered on screen.
Each ”game object” and its ﬁgure have associated a script of this type. The
diﬀerence among the various scripts therefore remains in ability to calculate the
getY function. In fact every time it was necessary to change the graph to be
represented, it would be suﬃcient to specify how to calculate the Y to obtain
the change of the shown ﬁgure; in all cases the unique thing to be done would be
to scan the grid (in our example a 100x100 matrix) and recalculate the correct
values. The fundamental diﬀerence is in the case of two-dimensional functions,
like the periodic sine function which is mentioned in chapter 2. In that case only
one ”for cycle” was suﬃcient and a depth ﬁxed at 0.05f. In this way we can
represent a two-dimensional function as if it were a tube, which allows us to
observe it better when we move around it.
The next step is the generation of the three-dimensional mesh from the vertices
and triangles calculated in the previous step. To do this, a generic script has
been created, which can be recalled from all the codes present in the Unity3D
project. Since a three-dimensional object has been generated inside the program,
it is necessary to calculate how the light should behave in order to make it visible
to the user’s camera.
The hard work would therefore seem how to illuminate the object in the right
way: that means that it is necessary to calculate a light intensity value for each
polygon which makes up the entire object structure.

Actually, this calculation, which seems very complex, is carried out very quickly
in Unity3D. The calculation is carried out in two phases. At the beginning, a
call to a function integrated in the Unity libraries doubles up triangles in the
ﬁgure, so each of them has got a ”specular twin”, with the normal straight line
to the surface with opposite direction to its homologous, so that ﬂow of incident
light can correctly be obtained.
Finally, a mesh object is created and vertices, normals and triangles are assigned
to it. At the end of this operation the ﬁgure (also called mesh) is ready to be
shown on screen.

We have then divided the following work into two diﬀerent ramiﬁcations, in-
volving Virtual Reality and Augmented Reality respectively. In ﬁrst case a room
has been created, and inside the room the three-dimensional ﬁgures have been
positioned, as shown in ﬁgure 5.
The project has then been compiled in WebGL in order to be easily used by a
web browser and not have any dependence on a speciﬁc operating system (Win-
dows, Linux, Android, iOS, etc). As far as the use with augmented reality is
concerned, Vuforia software has been used instead. Vuforia is a framework that
integrates within Unity3D. Vuforia allows you to create projects that use aug-
mented reality by providing all the functions essential for operation on mobile
phones.
In particular we focused on smartphones with Android operating system.

5 Conclusions and future works

In the ﬁrst phase of our research we tried to understand which mathematical
objects and which tools to use to enhance mathematical teaching, having sensed
that the use of VR techniques signiﬁcantly increase the level of understanding
of the subject studied by the students.
We would like to expand our research towards the ﬁeld of immersive learning,
in particular those applications that allow the user to be immersed in virtual
worlds so that he can increase brain stimulation during the learning phase.
Our approach aims to give the student a wider environment of objects to study
and deepen, by selecting among them the ones of greatest interest and didactic
utility. Furthermore, we ﬁnd it interesting to know the degree of interest and
empathic response of students to the system: sensations, disturbances, emotions
aroused; we do not intend to neglect any advice from them to make the environ-
ment more livable and attractive.
That’s why the next step we are considering is to allow high school students to
evaluate the quality of the work done by ﬁlling out a questionnaire.
If the number of students is high enough, we can draw objective conclusions and
understand how much virtual reality can aﬀect their perception of mathemat-
ics. We are therefore going to select a signiﬁcant sample of them, homogeneous
by social and cultural level, in order to obtain a set of coherent and indicative
answers.

As far as the generation of functions is concerned, the current system is able
to display objects that are only statically compiled at compiling-time: for the
future we intend to design a dynamic system for the generation of mathematical
functions that allows the mathematics teacher to draw arbitrarily any three-
dimensional or two-dimensional graph without the need to print a new Vumark
every time.
What we want to achieve is a dynamic platform that allows us to understand
how far the freedom of choice of a function by the user, as well as a complete
experience of immersion in the mathematical object itself and in its speciﬁc
characteristics and properties, develops and increases in students a high level of
understanding of the topics covered.

References

[1] Valentina Franzoni and Osvaldo Gervasi. “Guidelines for Web Usability
and Accessibility on the Nintendo Wii”. In: Transactions on Computa-
tional Science VI. Ed. by Marina L. Gavrilova and C. J. Kenneth Tan.
Berlin, Heidelberg: Springer Berlin Heidelberg, 2009, pp. 19–40. isbn: 978-
3-642-10649-1. doi: 10 . 1007 / 978 - 3 - 642 - 10649 - 1 _ 2. url: https :
//doi.org/10.1007/978-3-642-10649-1_2.

[2] G¨urkan Yildirim, Mehmet Elban, and Serkan Yildirim. “Analysis of Use
of Virtual Reality Technologies in History Education: A Case Study”. In:
Asian Journal of Education and Training 4 (Jan. 2018), pp. 62–69. doi:
10.20448/journal.522.2018.42.62.69.

[3] Paul Williams and JS Perry Hobson. “Virtual reality and tourism: fact
or fantasy?” In: Tourism Management 16.6 (1995), pp. 423–427. issn:
0261-5177. doi: https : / / doi . org / 10 . 1016 / 0261 - 5177(95 ) 00050 -
X. url: http : / / www . sciencedirect . com / science / article / pii /
026151779500050X.

[4] Ryan Yung and Catheryn Khoo-Lattimore. “New realities: a systematic
literature review on virtual reality and augmented reality in tourism re-
search”. In: Current Issues in Tourism 22.17 (2019), pp. 2056–2081. doi:
10.1080/13683500.2017.1417359. eprint: https://doi.org/10.1080/
13683500.2017.1417359. url: https://doi.org/10.1080/13683500.
2017.1417359.

[5] F. Doil et al. “Augmented Reality for Manufacturing Planning”. In: Pro-
ceedings of the Workshop on Virtual Environments 2003. EGVE ’03. Zurich,
Switzerland: Association for Computing Machinery, 2003, pp. 71–76. isbn:
1581136862. doi: 10.1145/769953.769962. url: https://doi.org/10.
1145/769953.769962.

[6] T.S. Mujber, T. Szecsi, and M.S.J. Hashmi. “Virtual reality applications
in manufacturing process simulation”. In: Journal of Materials Processing
Technology 155-156 (2004). Proceedings of the International Conference on
Advances in Materials and Processing Technologies: Part 2, pp. 1834–1838.
issn: 0924-0136. doi: https://doi.org/10.1016/j.jmatprotec.2004.

04.401. url: http://www.sciencedirect.com/science/article/pii/
S0924013604005618.

[7] A. A. Lazar et al. “Exploiting virtual reality for network management”.
In: [Proceedings] Singapore ICCS/ISITA ‘92. 1992, 979–983 vol.3. doi:
10.1109/ICCS.1992.255116.

[8] Russell M. Taylor et al. “VRPN: A Device-Independent, Network-Transparent
VR Peripheral System”. In: Proceedings of the ACM Symposium on Vir-
tual Reality Software and Technology. VRST ’01. Baniﬀ, Alberta, Canada:
Association for Computing Machinery, 2001, pp. 55–61. isbn: 1581134274.
doi: 10.1145/505008.505019. url: https://doi.org/10.1145/505008.
505019.

[9] O. Gervasi, D. Russo, and F. Vella. “The AES Implantation Based on
OpenCL for Multi/many Core Architecture”. In: 2010 International Con-
ference on Computational Science and Its Applications. 2010, pp. 129–134.
doi: 10.1109/ICCSA.2010.44.

[10] Flavio Vella et al. “A Simulation Framework for Scheduling Performance
Evaluation on CPU-GPU Heterogeneous System”. In: vol. 7336. June 2012.
doi: 10.1007/978-3-642-31128-4_34.

[11] Panagiota Papadopoulou. “Applying virtual reality for trust-building e-
commerce environments”. In: Virtual Reality 11 (June 2007), pp. 107–127.
doi: 10.1007/s10055-006-0059-x.

[12] Osvaldo Gervasi, Riccardo Magni, and Mauro Zampolini. “Nu!RehaVR:
Virtual reality in neuro tele-rehabilitation of patients with traumatic brain
injury and stroke”. In: Virtual Reality 14 (June 2010), pp. 131–141. doi:
10.1007/s10055-009-0149-7.

[13] Sheng Bin, Saleha Masood, and Younhyun Jung. “Chapter Twenty - Vir-
tual and augmented reality in medicine”. In: Biomedical Information Tech-
nology (Second Edition). Ed. by David Dagan Feng. Second Edition. Biomed-
ical Engineering. Academic Press, 2020, pp. 673–686. isbn: 978-0-12-816034-
3. doi: https : / / doi . org / 10 . 1016 / B978 - 0 - 12 - 816034 - 3 . 00020 -
1. url: http : / / www . sciencedirect . com / science / article / pii /
B9780128160343000201.

[14] Carl B. Boyer Uta C. Merzbach. A History of Mathematics. 3rd ed. John

Wiley & Sons, 2011.

[15] R. Creighton Buck. Advanced Calculus. 3rd ed. Long Grove, IL: Waveland

Press., 2003. isbn: ISBN 1-57766-302-0.

[16] Michael Meehan et al. “Physiological measures of presence in stressful
virtual environments”. In: Acm transactions on graphics (tog) 21.3 (2002),
pp. 645–652.

[17] Dheva Raja et al. “Exploring the beneﬁts of immersion in abstract informa-
tion visualization”. In: Proc. Immersive Projection Technology Workshop.
2004, pp. 61–69.

[18] Doug A Bowman and Ryan P McMahan. “Virtual reality: how much im-

mersion is enough?” In: Computer 40.7 (2007), pp. 36–43.

[19] J Georgiou, K Dimitropoulos, and A Manitsaris. “A virtual reality labo-
ratory for distance education in chemistry”. In: International Journal of
Social Sciences 2.1 (2007), pp. 34–41.

[20] Sandra Tan and Russell Waugh. “Use of virtual-reality in teaching and
learning molecular biology”. In: 3D immersive and interactive learning.
Springer, 2013, pp. 17–43.

[21] John Ryan et al. “A virtual reality electrocardiography teaching tool”. In:
Proceedings of the Second International Conference, Biomedical Engineer-
ing, Innsbruck. 2004, pp. 250–253.

[22] Craig Savage et al. “Teaching physics using virtual reality”. In: AIP Con-
ference Proceedings. Vol. 1263. 1. American Institute of Physics. 2010,
pp. 126–129.

[23] Hyesang Chang and Sian L Beilock. “The math anxiety-math performance
link and its relation to individual and environmental factors: a review of
current behavioral and psychophysiological research”. In: Current Opinion
in Behavioral Sciences 10 (2016). Neuroscience of education, pp. 33–38.
issn: 2352-1546. doi: https://doi.org/10.1016/j.cobeha.2016.04.
011. url: http : / / www . sciencedirect . com / science / article / pii /
S2352154616300882.

[24] Scott Freeman et al. “Active learning increases student performance in
science, engineering, and mathematics”. In: Proceedings of the National
Academy of Sciences 111.23 (2014), pp. 8410–8415. issn: 0027-8424. doi:
10.1073/pnas.1319030111. eprint: https://www.pnas.org/content/
111/23/8410.full.pdf. url: https://www.pnas.org/content/111/
23/8410.

[25] Chris Dede. “Immersive Interfaces for Engagement and Learning”. In: Sci-
ence 323.5910 (2009), pp. 66–69. issn: 0036-8075. doi: 10.1126/science.
1167311. eprint: https : / / science . sciencemag . org / content / 323 /
5910/66.full.pdf. url: https://science.sciencemag.org/content/
323/5910/66.

[26] Adriano Pasqualotti and Carla Maria dal Sasso Freitas. “MAT3D: a virtual
reality modeling language environment for the teaching and learning of
mathematics”. In: CyberPsychology & Behavior 5.5 (2002), pp. 409–422.
[27] Hatice Akko¸c and David Tall. “The simplicity, complexity and complica-
tion of the function concept”. In: PME conference. Vol. 2. 2002, pp. 2–
025.

[28] Daniel Breidenbach et al. “Development of the process conception of func-

tion”. In: Educational studies in mathematics 23.3 (1992), pp. 247–285.

[29] Hatice Akko¸c and David Tall. “The function concept: Comprehension and
complication”. In: Proceedings of the British Society for Research into
Learning Mathematic 23.1 (2003), pp. 1–6.

[30] Alessandra King. “Using Desmos to Draw in Mathematics.” In: Australian

Mathematics Teacher 73.2 (2017), pp. 33–37.

