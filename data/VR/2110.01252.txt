Cybersickness-aware Tile-based Adaptive 360°
Video Streaming

Chiao-Wen Lin†, Chih-Hang Wang(cid:93), De-Nian Yang(cid:93), and Wanjiun Liao†
†Department of Electrical Engineering, National Taiwan University, Taiwan
(cid:93)Institute of Information Science, Academia Sinica, Taiwan
E-mail: d09921012@ntu.edu.tw, {superwch7805, dnyang}@iis.sinica.edu.tw, and wjliao@ntu.edu.tw

1
2
0
2

t
c
O
4

]
I

N
.
s
c
[

1
v
2
5
2
1
0
.
0
1
1
2
:
v
i
X
r
a

Abstract—In contrast to traditional videos, the imaging in
virtual reality (VR) is 360°, and it consumes larger bandwidth
to transmit video contents. To reduce bandwidth consumption,
tile-based streaming has been proposed to deliver the focused
part of the video, instead of the whole one. On the other hand,
the techniques to alleviate cybersickness, which is akin to motion
sickness and happens when using digital displays, have not been
jointly explored with the tile selection in VR. In this paper, we
investigate Tile Selection with Cybersickness Control (TSCC)
in an adaptive 360° video streaming system with cybersickness
alleviation. We propose an m-competitive online algorithm with
Cybersickness Indicator (CI) and Video Loss Indicator (VLI)
to evaluate instant cybersickness and the total
loss of video
quality. Moreover, the algorithm exploits Sickness Migration
Indicator (SMI) to evaluate the cybersickness accumulated over
time and the increase of optical ﬂow to improve the tile quality
assignment. Simulations with a real network dataset show that
our algorithm outperforms the baselines regarding video quality
and cybersickness accumulation.

I. INTRODUCTION

Expedited by the Covid-19 pandemic in 2020, much of
the world has been transformed into collaboratively operating
in a virtual environment [1]. It markedly accelerates the
growth of virtual reality (VR) by necessity. For example,
Facebook has launched Facebook Horizon to allow people
to engage in a variety of activities like riding roller coasters
with different themes. Users can play fast-paced shooting and
car racing games with SteamVR.1 Equipped with VR head-
mounted displays (HMDs), such as Oculus Rift, HTC VIVE,
and Google Cardboard,2 a user can arbitrarily choose a view of
the 360° video displaying the virtual world by moving her head
dynamically. However, the bandwidth demand for streaming
a 360° video is an order of magnitude larger than traditional
static videos (e.g., movies) [2].

To reduce bandwidth consumption,

tile-based streaming
is proposed to stream a part of a video (i.e., video tiles)
displayed [3]–[7]. It ﬁrst cuts a 360° video into multiple tiles
spatially and further encodes these tiles into different quality
for adaptive streaming. Xie et al. [3] chose tiles and decided
their quality based on viewport distortion, quality variance, and
buffer control. Qian et al. [4] selected tiles according to the
tile ranking and classing to maximize the utility function under
the consideration of inter-chunk switch, intra-chunk switch,

1Facebook Horizon: https://www.oculus.com/facebook-horizon/, SteamVR:

https://store.steampowered.com/app/250820/SteamVR/

2Oculus Rift: https://www.oculus.com, HTC VIVE: https://www.vive.com,

Google Cardboard: https://arvr.google.com/cardboard

and stall duration. Xiao et al. [5] combined tiles into macro-
streaming units and chose quality levels to reduce bandwidth
waste. Sun et al. [6] dynamically adjusted the rate allocation
and buffer length based on the network bandwidth statistics
and viewport prediction. However, these works only focused
on bandwidth reduction but did not explore cybersickness
during the tile selection and buffer management in VR.

Cybersickness is akin to motion sickness, but it happens
when using VR HMDs, and the user may have symptoms
of headaches, nausea, and so on [8]. Since these feelings
degrade the user’s experience with VR, it is vital to examine
cybersickness during the tile selection in VR [2]. Several
crucial factors lead to cybersickness. 1) User head movement.
Faster head rotations incur more cybersickness [9]. When the
user rotates head faster, the Motion-to-photon (MTP) delay
increases due to the rapid change of frames. MTP delay is
the time difference between the user’s head movement and
the VR frame display (reﬂecting the user’s movement) [2].
2) Magnitude of optical ﬂow. Optical ﬂow is the velocity
distribution of apparent movements and changes in brightness
patterns between two similar images. The fast motions and
rapid changes of brightness and color of objects induce a large
amount of optical ﬂow. A VR scene with a large magnitude of
optical ﬂow triggers cybersickness because it contains massive
visual information, amplifying the mismatch between the real
world and the VR scene [10]. 3) Task duration. Longer
task duration to use VR induces more cybersickness since
cybersickness accumulates over time [8], [9], [11].

To alleviate cybersickness, ﬁeld of view (FoV) shrinking
[12], [13] and depth of ﬁeld (DoF) simulation [9], [14]
have been demonstrated as two promising approaches. FoV
shrinking slightly and temporarily reduces the size of the
viewport by masking the outer part of the original video [12],
[13]. Smaller FoV induces less cybersickness with the side
effect of lowering the sense of immersion, since it reduces
the amount of visual information received. On the other hand,
DoF simulation further blurs the out-of-focus parts of a video
to decrease the magnitude of optical ﬂow when the view
changes rapidly [9], [14]. However, these works only veriﬁed
the effectiveness of FoV shrinking and DoF simulation but
did not explore the trade-off between cybersickness and video
quality in mobile VR.

In this paper, we explore Tile Selection with Cybersickness
Control (TSCC) in an adaptive 360° video streaming system.
Unlike previous research of 360° video streaming ignoring

 
 
 
 
 
 
the impact of cybersickness [3]–[7], TSCC minimizes the
video quality loss and cybersickness accumulation by jointly
fetching tiles, shrinking the user’s viewport, and determining
the activation of DoF simulation. TSCC is challenging due
to the following new research issues. 1) Trade-off between
cybersickness and video quality. A high-quality video contains
a large magnitude of optical ﬂow, which induces severe cyber-
sickness [10]. Hence, when users feel dizzy, it is necessary to
constrain cybersickness by slightly limiting the viewport size
with FoV shrinking and blurring out-of-focus tiles with DoF
simulation to reduce the magnitude of optical ﬂow. The joint
conﬁguration of the quality of video tiles (at different regions),
FoV shrinking, and DoF simulation is crucial
to VR. 2)
Cybersickness accumulation. As the user keeps enjoying VR
without pauses, cybersickness will aggravate over time since
the accumulation is mostly faster than the speed of human
adaptation to VR [8], [11]. However, activating FoV shrink-
ing and DoF simulation for a long period will dramatically
decrease the user’s experience with the video. Therefore, it is
crucial to decide the activation and stop time of FoV shrinking
and DoF simulation carefully. 3) Packet queue control. High-
quality tiles consume much bandwidth and lead to longer
transmission time, which may cause video stalls (i.e., the
packet queue underﬂows). Most research [3], [6] controls the
packet queue based on only the network bandwidth and aims
to maximize video quality. However, it is necessary to examine
user behaviors (e.g., head rotation) when controlling the packet
queue in VR since they may induce higher cybersickness
(which needs to be compensated by lowering video quality).
Therefore, the packet queue management becomes much more
complicated to avoid the overﬂow and underﬂow of the queue.

To address the above issues, we design an m-competitive3
online algorithm, named Effective Tile Selection and Cyber-
sickness Alleviation Algorithm (ETSCAA). ETSCAA intro-
duces Cybersickness Indicator (CI) and Video Loss Indicator
(VLI) to evaluate the instant cybersickness and the total loss
of video quality by carefully assessing the impacts of FoV
shrinking and DoF simulation at different
tiles. Equipped
with CI and VLI, ETSCAA assigns tile quality according
to the induced costs (including expected viewport distortion
and cybersickness accumulation) and the available bandwidth
to control
the packet queue growth. Moreover, ETSCAA
introduces Sickness Migration Indicator (SMI) to evaluate
the cybersickness accumulated over time and the increase of
optical ﬂow. ETSCAA adjusts tile quality to jointly alleviate
cybersickness and optimize video quality based on SMI.

The rest of this paper is organized as follows. Section II
introduces the 360° video streaming system and Section III
formulates TSCC. Section IV presents the online algorithm
ETSCAA and proves its competitive ratio. Section V shows
the simulation results, and Section VI concludes this paper.

II. SYSTEM MODEL
Following [2], [5], [7], a 360° video is ﬁrst segmented into
small chunks for storage. Next, each chunk is cropped into

3m is the ratio of number of tiles chosen by ETSCAA to the optimal policy.

tiles spatially, and each tile is encoded into multiple bitrates
by the video compression, such as H.264 or H.265, and stored
in a mobile proxy server [2]. When a user request arrives, the
server will combine the fetched tiles in the cache to render
the required video frames, where the cached tiles were chosen
from the server based on the user viewport prediction [2].

To alleviate cybersickness,

the system is equipped with
FoV shrinking [12], [13] and DoF simulation [9], [14]. After
combining the tiles to form a complete video, the requested
view is extracted from the video. The bokeh blur ﬁlter [14] is
then applied to the viewport to create the DoF simulation,
followed by slightly masking the upper and lower side of
the viewport
the video quality
degradation caused by FoV shrinking and DoF simulation can
be evaluated according to structural similarity (SSIM) index
and bitrate [15], [16].

to shrink FoV. Afterward,

The system includes a packet queue and a sickness queue
maintained on the user side. The packet queue stores the video
rendered from the fetched tiles for smooth playback4 [3]–
[6], and the queue length increases and decreases when new
frames are downloaded and the video is played, respectively.
The sickness queue (derived according to the Time-varying
Cybersickness Model [8]–[14] and detailed in Section III)
records cybersickness accumulation when the video is played.
According to [8], [9], [11], we measure cybersickness severity
by the Simulator Sickness Questionnaire (SSQ) metric, which
can be calculated by the magnitude of optical ﬂow and user
head rotation speed, monitored by eye and neck movement
tracking schemes in VR HMDs [9]. The queue length increases
when the magnitude of optical ﬂow and user head rotation
speed increase, whereas it constantly decreases due to the user
adaptation to VR. The packet queue and the sickness queue
affect each other when the available bandwidth, user behavior,
or the amount of video optical ﬂow changes.

III. PROBLEM FORMULATION

Due to the space constraint, the notation table is provided in
[17]. We formulate TSCC for the tile selection and cybersick-
ness control in a 360° video streaming system. Speciﬁcally,
the system includes a 360° video divided into multiple chunks
with the duration T [7], and each chunk is spatially cropped
into N tiles [7], where each tile is encoded into L quality
levels [7]. Let (i, j) represent tile i with quality j. Each tile
(i, j) induces bandwidth consumption bi,j, distortion di,j, and
the magnitude of optical ﬂow fi,j, which are speciﬁed in the
video metadata [3]. We describe the system status at time slot
t as St = {Rt, Dt, QP
t are
the status of user head rotation, expected viewport distortion,
packet queue occupancy, and sickness queue occupancy at time
slot t, respectively, introduced as follows.

t }, where Rt, Dt, QP

t , and QS

t , QS

1) The status of user head rotation Rt = (ωy

t , ωp
t ) includes
the angular speed of yaw rotation ωy
t and the angular speed of
pitch rotation ωp
t [3]–[6]. Let pi,t be the viewing probability
of tile i at time slot t, which can be derived by the viewport

4To avoid cybersickness caused by MTP delay, it is necessary to maintain

the occupancy of packet queue (detailed later) [2], [3].

prediction with the stochastic model and historical data of user
head rotation [3], [4].

ΣN

i=1ΣL

j=1xi,j pi,tdi,j
j=1xi,j pi,t

2) The
i=1ΣL
ΣN

expected viewport distortion [3] Dt =
can be expressed as the average video
quality distortion represented by the distortion of each tile i
weighted by its viewing probability pi,t at time slot t, where
xi,j ∈ {0, 1} is a decision variable indicating whether tile
(i, j) is fetched. The distortion of each tile is derived as the
reciprocal of its SSIM index [15], and a tile with higher quality
has smaller distortion [15], [16].

3) Let Bt be the bandwidth,5 Cp denotes the packet queue
capacity,6 and γ is the bandwidth consumption of the viewport.
Since the packet queue length decreases when the download
time of video chunk is longer than its duration T (i.e.,
the video consumption rate is faster than download speed),
following [3], the packet queue occupancy QP
t−1 +
T
). QP
t−1 is the current occupancy, and
Cp
T
) represents the amount of occupancy
Cp
change.7 ydof ∈ {0, 1} is a decision variable indicating
whether DoF simulation is activated, and kdof is the ratio
of the bandwidth consumption reduced by DoF simulation.
Following [12], [13], sf ov ∈ [0.7, 1] is a decision variable
representing the ratio of the shrunken viewport size to the
original size when activating FoV shrinking.

(1− sf ov(1−kdof ydof )γ
(1− sf ov(1−kdof ydof )γ

t = QP

Bt

Bt

4) When the user enjoys VR over time, cybersickness
accumulates and the length of the sickness queue increases due
to the head rotation [9], [12] and optical ﬂow [10]. However,
the user may gradually adapt to VR as time elapses. Let
Ω be the consumption rate of the sickness queue (i.e., user
adaptation to VR).8 Following [8], [11], the sickness queue
occupancy QS
is derived according to i) QS
t−1, ii) increasing
t
occupancy caused by head rotation [9], [12] and optical
ﬂow [10], and iii) decreasing occupancy Ω
t =
Cs
p
t )2

. That is, QS

√

ΣN

(ω

(

y
t )2+(ω
√
2
100

+

i=1ΣL
ΣN

j=1xi,j pi,tfi,j
ΣL

xi,j pi,t

QS
−
t−1 +
Ω
, where Cs is the sickness queue capacity,8 and the optical
Cs
ﬂow of each tile is weighted by its viewing probability.
√

j=1
Cs

i=1

)sf ov(1−kdof ydof )

(ωy

t )2+(ωp
√
2
100

t )2

is the normalized head rotation speed [4].
sf ov(1 − kdof ydof ) describes the percentage of cybersickness
decreased due to FoV shrinking and DoF simulation.9

TSCC has the following constraints. 1) Fetching constraint.
The system fetches only one level for each tile at any instant to
avoid tile redundancy, i.e., ΣL
j=1xi,j ≤ 1, ∀i. 2) Packet queue

5The bandwidth can be allocated by exploiting machine learning models,
such as support vector machine and artiﬁcial neural network, that learn the
relation between bandwidth allocation and quality of service [18].

6Due to the short-term constraint of viewport prediction, tile-based stream-
ing keeps a small packet queue capacity, whose unit is second, to store
predicted viewports in the next few seconds [3], [7].

7The decreasing occupancy estimated by the download time is subtracted

from the increasing occupancy T
Cp

evaluated by the video chunk duration.

8According to [19], the values of Ω and Cs for each user can be determined
based on age, gender, and familiarity with VR contents. For example, seniors
and people that are not familiar with VR contents tend to have a lower
tolerance of cybersickness, and smaller Ω and Cs are required.

9The cybersickness reduction is inversely proportional to the viewport size

[13] and the degree of video blurring [14].

i=1ΣL

t−1−λ)+T )

length constraint. To prevent video rebuffering and control
MTP delay, the queue occupancy QP
t must be no less than the
targeted queue occupancy λ, i.e., QP
t ≥ λ [3], [6]. By properly
reformulating the above equation (detailed in [17]), we can
transform the packet queue length constraint into the band-
width constraint for fetching tiles, i.e., ΣN
j=1xi,jbi,j ≤
Bt(Cp(QP
sf ov(1−kdof ydof )T . The objective function includes two parts:
1) video quality loss Φt and 2) cybersickness accumulation QS
t
(i.e., sickness queue occupancy). The video quality deteriorates
if the viewport distortion is larger [3] and the viewport
size (narrowed down by FoV shrinking) becomes smaller
[13]. Also, DoF simulation undermines video quality since
it blurs the out-of-focus parts of video [9], [14]. Accordingly,
Dt
following [3], the video quality loss is Φt =
sf ov(1−kdof ydof ) .
Therefore, the objective is ξΦt+ρQS
t , where ξ and ρ are tuning
knobs to trade-off video quality against cybersickness.10 TSCC
is formulated as follows.

Deﬁnition 1 (TSCC). Given the duration T of each video
chunk cropped into N tiles with L quality levels in a frame,
video metadata (bi,j,di,j,fi,j), packet queue occupancy QP
t ,
sickness queue occupancy QS
t , and bandwidth Bt, TSCC ﬁnds
1) the fetched tiles and their quality, 2) the size of viewport
(conﬁgured by FoV shrinking), and 3) the activation of DoF
simulation, under the 1) fetching, 2) packet queue length, and
3) bandwidth constraints. The objective is to minimize the cost
function of video quality loss and cybersickness accumulation
over time, i.e., min (cid:80)∞
t=1 ξΦt + ρQS
t .
IV. ONLINE ALGORITHM

To minimize the video quality loss, an intuitive approach is
to classify the tiles into multiple groups with different prior-
ities according to estimated viewing probability, and a group
is assigned a higher quality if it has a higher priority [4]–[6].
However, the above approach does not use FoV shrinking and
DoF simulation to alleviate cybersickness. We design an m-
competitive online algorithm ETSCAA to minimize the long-
term video quality loss and cybersickness accumulation by
examining Cybersickness Indicator (CI), Video Loss Indicator
(VLI), and Sickness Migration Indicator (SMI) in every time
slot. CI and VLI respectively evaluate the instant cybersickness
and the video quality loss. Equipped with CI and VLI,
ETSCAA assigns the tile quality by evaluating the cost of the
joint conﬁguration of quality assignment, FoV shrinking, and
DoF simulation for each tile in the viewport. When the packet
queue overﬂows, it tends to choose high-quality tiles (requiring
a longer transmission time) to slow down packet queue growth,
and the faster cybersickness accumulation (due to a larger
magnitude of optical ﬂow) also needs to be alleviated by FoV
shrinking and DoF simulation. Moreover, ETSCAA introduces
SMI to jointly adjust tile quality and control the growth of
sickness queue by evaluating the accumulated cybersickness
and the increased optical ﬂow. ETSCAA includes three phases:

10For the videos with highly dynamic contents (e.g., action movies), we
can set a larger ρ to focus more on cybersickness since they contain a large
amount of optical ﬂow and aggravate cybersickness more easily. For static
videos like dramas, we can focus more on video quality and set a larger ξ.

Fig. 1: An example of VPTS

1) Viewport Prediction and Tile Selection (VPTS), 2) Tile
Quality Assignment (TQA), and 3) Cybersickness and Tile
Quality Control (CTQC). The pseudocode of ETSCAA is
presented in [17] due to the limited space.

A. Viewport Prediction and Tile Selection (VPTS)

t T, θp

t + ωp

t + ωy

t T )° of yaw rotation and (ωp

To adapt to user head rotation, VPTS derives the viewing
probability pi,t+1 for all tiles by the following steps: 1) VPTS
ﬁrst predicts the most likely viewport position in the next T
seconds. Speciﬁcally, let (θy
t , θp
t ) be the viewport position at
time slot t, where θy
t and θp
t are the horizontal (yaw) and
vertical (pitch) angles of the viewport, respectively. VPTS
evaluates the viewport position at time slot t + 1 by applying
(ωy
t T )° of pitch rotation from the
current viewport position. The predicted viewport position is
(θy
t T ). 2) VPTS extracts adjacent viewports
to ensure that the fetched tiles can fully cover the user’s view
during the head rotation, based on the Gaussian distributions
of yaw-axis and pitch-axis with the standard deviations σy
and σp, respectively [3]. 3) For each tile i, VPTS sums the
viewing probability P (θy
t+1) of each predicted viewport
position (θy
t+1, θp
t+1) that overlaps with tile i to derive pi,t+1.
That is, pi,t+1 = (cid:80)
t+1), where Θ is
the set of all the predicted viewport positions that overlap
with tile i. VPTS then constructs a set of fetched tiles
V = {v | pv,t+1 > 0} and examines the boundary subsets
of V to identify the tiles unlikely to be seen. Let GV be the
boundary subset of V formed by a row (column) of tiles11
in V . If pg,t+1 < (cid:15), ∀g ∈ GV holds, we remove GV from
V , where (cid:15) is the probability threshold to discard tiles.12 For
example, in Fig. 1, the boundary subset removed is {12, 18}
and the fetched tiles are V = {10, 11, 16, 17}. Due to the space
constraint, the detailed calculation of this and the remaining
examples are provided in [17].

t+1)∈Θ P (θy

t+1, θp

t+1, θp

t+1,θp

(θy

B. Tile Quality Assignment (TQA)

TQA assigns a quality level to each tile in V based on the
induced cost of the tile quality assignment and the bandwidth
constraint. We introduce Cybersickness Indicator (CI) and
Video Loss Indicator (VLI), weighted by the viewing proba-
bility pi,t+1, to approximately evaluate the cybersickness and
video quality loss. A tile with more visual information has a
larger size and more optical ﬂow, which induces cybersickness.
To alleviate cybersickness, FoV shrinking and DoF simulation
reduce the size and resolution of the viewport such that the

11Since the viewport, composed of multiple tiles, needs to be rectangular
[2], a row (column) of tiles in a set is deﬁned as the tiles sharing the same
horizontal (vertical) coordinate, such as tiles 1, 7, 13 in Fig. 1.

12Following [6], [7], a smaller (cid:15) allows the mobile proxy to transmit a

larger viewport to avoid the interruption caused by head rotation.

visual information (video size) decreases. Therefore, we deﬁne
CI = fi,j sf ov(1−kdof ydof )pi,t+1
to measure the cybersickness
induced by each tile regarding the effect of optical ﬂow fi,j,
FoV shrinking sf ov, and DoF simulation (1 − kdof ydof ).

Σn∈V (pn,t+1)

pi,t+1di,j

The video quality becomes worse when the distortion is
larger and the viewport size and resolution are smaller (con-
ﬁgured by FoV shrinking and DoF simulation). Hence, the
video quality drops by the reciprocal of sf ov(1 − kdof ydof ).
We deﬁne V LI =
sf ov(1−kdof ydof )Σn∈V (pn,t+1) to measure the
video quality loss induced by each tile regarding the effect of
distortion di,j, FoV shrinking sf ov, and DoF simulation (1 −
kdof ydof ). Therefore, the cost of assigning quality j to tile i in
V with a certain conﬁguration of FoV shrinking and DoF sim-
ulation (sf ov, ydof )13 can be evaluated by τ (i, j, sf ov, ydof ) =
ξV LI(i, j, sf ov, ydof ) + ρCI(i, j, sf ov, ydof ). The function τ
trades off the video quality against cybersickness.

The optimal quality of each tile may not be identical because
the distortion and magnitude of optical ﬂow of each tile vary.
A tile with more visual information has a larger difference
in the magnitude of optical ﬂow between adjacent quality
levels. Therefore, to jointly minimize the video quality loss and
cybersickness accumulation, our idea is to iteratively derive
the dynamic programming state of each quality assignment
with the joint conﬁguration of FoV shrinking and DoF simu-
lation. Let M (n, β) be the minimum total cost of the quality
assignment An,β for the ﬁrst n tiles in V under the bandwidth
constraint β. TQA systematically derives M (n, β) according
to the following two cases. 1) When n = 0 (i.e., no tile
needs to be assigned quality), the total cost is 0. 2) When
n > 0, TQA considers different quality assignments, which
consume bandwidth no more than β, for tile vn ∈ V . For
each tile vn, TQA recursively examines M (n − 1, β − bvn,j),
which is the minimum total cost of the quality assignment
before assigning quality to vn. Then, it chooses the minimum
M (n−1, β−bvn,j)+τ (vn, j, sf ov, ydof ) to minimize the video
quality loss and cybersickness accumulation. Accordingly,

(cid:40)

that

if n = 0

t−1−λ)+T )

t−1−λ)+T )

M (n, β) =

0,
min{M (n − 1, β − bvn,j) + τ }, ∀ bvn,j ≤ β.
(1)
the total bandwidth for fetching tiles can-
Recall
Bt(Cp(QP
not exceed
sf ov(1−kdof ydof )T to control the growth of the
packet queue (detailed in Section III), and we let B =
Bt(Cp(QP
sf ov(1−kdof ydof )T . Hence, we can obtain the minimum total
cost of the quality assignment for tile set V by calculating
M (n = |V |, β = B). Based on (1), TQA extracts a quality
assignment to minimize the video quality loss and cybersick-
ness accumulation. TQA ﬁrst constructs a table to store the
bandwidth of each tile. Speciﬁcally, TQA stores the bandwidth
bvn,j of tile vn into the table with a label (n, β) when it
examines M (n, β) = M (n−1, β−bvn,j)+τ (vn, j, sf ov, ydof )
during the recursive process. Afterward, TQA iteratively
queries the table to construct An,β since the bandwidth of

13We iteratively examine each conﬁguration of (sf ov, ydof ), and the
number of iterations is small since ydof ∈ {0, 1} and there are usually
7 levels of sf ov [12], [13].

each tile can be mapped to a certain quality and TQA can
obtain the bandwidth of vn−1 by querying the value labeled
(n − 1, β − bvn,j).

Example 1. Recall

that we have obtained V =
{10, 11, 16, 17} in VPTS. Assume that Bt = 8, Cp = 4,
QP
t−1 = 0.65, λ = 0.5, T = 1, kdof = 0.1 and all possible
conﬁgurations of (sf ov, ydof ) are (1, 0), (1, 1), (0.7, 0), and
(0.7, 1), which results in B = 13, 14, 18, and 20, respec-
tively. When B = 13, let {τ, bi,1} = {8, 1}, {τ, bi,2} =
{4, 2}, {τ, bi,3} = {2, 3}, and {τ, bi,4} = {1, 4}, ∀i. Then,
M (4, 13) = min{M (3, 9) + 1, M (3, 10) + 2, M (3, 11) +
4, M (3, 12) + 8}. After the recurrence, the quality assigned
to the tile set {10, 11, 16, 17} is {4, 3, 3, 3}, since it induces
the minimum total cost 1+2+2+2 = 7. Similarly, for B = 14,
18, and 20, we have {4, 4, 3, 3}, {4, 4, 4, 4}, and {4, 4, 4, 4}
as the quality levels of tile set {10, 11, 16, 17}, respectively.

C. Cybersickness and Tile Quality Control (CTQC)

(QS

i∈V,j∈∆V

To adjust the tile quality, we deﬁne ∆(cid:48)

To alleviate cybersickness accumulated over time, CTQC
iteratively adjusts the tile quality assignment to slow down
the growth of the sickness queue. When the cybersickness has
accumulated massively, even slightly increasing optical ﬂow
can lead to the sickness queue overﬂow (i.e., the user will
immediately quit watching 360° videos since the symptoms
of cybersickness become unbearable [8], [11]). On the other
hand, when the sickness queue occupancy is small, higher tile
quality (which leads to more optical ﬂow) can be used to re-
duce the video quality loss. Therefore, we introduce the Sick-
ness Migration Indicator SM I = (cid:80)
t−1(fi,j(t +
1) − fi,j(t)) + V LI) integrated with VLI to jointly examine
cybersickness and video quality, where ∆V is the set of quality
levels assigned to tile set V , fi,j(t+1) is the optical ﬂow of tile
(i, j) at time slot t+1 (obtained from the video metadata). SMI
evaluates the impact of accumulated cybersickness (QS
t−1) and
future optical ﬂow fi,j(t + 1) on the tile quality assignment,
and fi,j(t + 1) − fi,j(t) increases when j becomes larger [10].
V , a neighbor of ∆V ,
as a quality assignment (satisfying the bandwidth constraint)
that only one quality is different from ∆V and the level dif-
ference is 1. For example, ∆(cid:48)
V is a neighbor of ∆V = {(cid:96)1, (cid:96)2}
if ∆(cid:48)
V = {(cid:96)1 ± 1, (cid:96)2} or {(cid:96)1, (cid:96)2 ± 1}. In the beginning, we
let ∆V be the quality assignment obtained in TQA and regard
it as the center set ∆C for searching its neighbors to adjust
tile quality. To avoid re-examining the same assignment in
the next few iterations and improve the searching efﬁciency,
CTQC maintains a neighbor search list (NSL) and inserts ∆C
into it.14 CTQC ﬁrst ﬁnds the neighbor ∆(cid:48)
C (of the center set
∆C), which induces the minimum SMI among the neighbors
and is not in the NSL, as the center set in the next iteration.
Then, CTQC inserts ∆(cid:48)
C into the NSL to avoid re-evaluating it
in the next few iterations. If the list is full, CTQC will remove
the oldest assignment. If ∆(cid:48)
C induces a smaller SMI than ∆V ,
CTQC will replace ∆V by ∆(cid:48)
C. CTQC iteratively examines
the above process until a certain quality assignment has been
examined for α times, where α can be adjusted to prevent
excessive computation time.

14The size of NSL can be adjusted based on the number of neighbors.

Example 2. Following Example 1, when B = 13, 14,
18, and 20, we have {4, 3, 3, 3}, {4, 4, 3, 3}, {4, 4, 4, 4},
tile set V =
and {4, 4, 4, 4} as the quality levels of
{10, 11, 16, 17}, respectively. Let ∆V = {4, 3, 3, 3} and its
neighbor ∆(cid:48)
V = {3, 3, 3, 3}. When (sf ov, ydof ) = (1, 0), the
result of CTQC is ∆(cid:48)
V since it has the minimum SMI. As for
the other (sf ov, ydof ) pairs, the quality assignments obtained
from TQA remain the same in CTQC.

Last, ETSCAA repeats TQA and CTQC with all possible
FoV shrinking and DoF simulation conﬁgurations (sf ov, ydof )
to minimize the video quality loss and cybersickness accumu-
lation by selecting the tile quality assignment inducing the
minimum ξΦt + ρQS
t . Following Example 2, after repeating
TQA and CTQC for (sf ov, ydof ) = (1, 0), (1, 1), (0.7, 0), and
(0.7, 1), we choose {4, 4, 4, 4} with (sf ov, ydof ) = (0.7, 0)
since it induces the minimum ξΦt + ρQS
t .

Theorem 1. ETSCAA is
in
O(N B +N 2) time, where r is the minimum SSIM of all tiles,
smin is the minimum value of sf ov, and B = max∀t{Bt}.

smin(1−kdof )r -competitive

1

Proof. The proof is presented in [17] due to the limited space.

Theorem 2. ETSCAA is m-competitive if L → ∞.

Proof. The proof is presented in [17] due to the limited space.

V. SIMULATIONS
Due to the space constraint, some results and the user study

are presented in [17].

A. Simulation Setup

We evaluate the performance of ETSCAA with the video
metadata extracted from 4K 360° videos [20]. The network
bandwidth traces are extracted from the dataset HSDPA [21],
and the mean value of the bandwidth is scaled from 3Mbps
to 11Mbps [7]. Following [3], [7], we cut the video into
multiple chunks with the same duration of 1 second and split
each chunk spatially into 6 × 8 tiles in default. Each tile
includes 5 quality levels [3], [4], [7] and is encoded with
H.264 using Constant Rate Factor (CRF) 43, 38, 33, 28, and
23 [4] for level 1 to 5, respectively. We exploit the viewport
prediction technique in [3] by formulating the prediction error
with Gaussian distributions. The original viewport size is set to
100°×100°in default [7]. Following [3], the capacity of packet
queue is set to Cp = 4s and the targeted queue occupancy
is set to λ = 0.5. kdof is set to 0.1 based on the result
of applying DoF simulation to the videos [9], [14]. For the
sickness queue, we follow [8] to set the capacity to Cs = 1000
with the user adaptation to VR set to Ω = 0.05 in default.
The default settings of ξ and ρ are 1 and 2.5, respectively. We
compare ETSCAA with three tile selection algorithms for 360°
video streaming systems: 1) EPASS360 [7], 2) BAS [5], and
3) Flare [4]. To evaluate ETSCAA, we change the following
parameters: 1) network bandwidth and 2) user adaptation to
VR (Ω), and we measure the performance metrics: 1) total
cost, 2) video quality loss, 3) sickness queue occupancy, and
4) SSIM. Each result is averaged over 100 samples, and each
sample includes 1,000+ video downloads.

(a)

(c)

(e)

(b)

(d)

(f)

Fig. 2: Performance evaluation with different parameters.

B. Simulation Results

In Fig. 2(a), the total cost increases as the bandwidth grows
since more tiles with higher quality (i.e., less distortion) are
chosen, which leads to more accumulated cybersickness (see
Fig. 2(c)). When the bandwidth is sufﬁcient, ETSCAA tends
to choose high-quality tiles to reduce the video quality loss.
However, it examines CI and VLI to activate FoV shrinking
and DoF simulation to slightly mask and blur the outer part of
the video for cybersickness alleviation. Therefore, ETSCAA
generates a much smaller sickness queue occupancy by de-
grading only a little video quality in Fig. 2(c). Comparing Figs.
2(b) and 2(c), the baselines lead to a smaller video quality loss
but much higher sickness queue occupancy than ETSCAA,
because they maximize video quality by choosing the tiles with
higher quality and viewing probability. In contrast, ETSCAA
exploits CI and VLI to carefully examine FoV shrinking and
DoF simulation at different tiles, and they only sacriﬁce a
little video quality (no more than 0.01 SSIM [15]) in Fig.
2(d) to achieve better cybersickness alleviation in Fig. 2(c).
Figs. 2(e) and 2(f) explore the impact of user adaptation to
VR (i.e, Ω). The total cost and sickness queue occupancy
plummet as Ω increases since users can adapt to VR more
to the baselines maximizing the video
easily. In contrast
quality, ETSCAA evaluates the change of sickness queue
occupancy over time by SMI to deal with the trade-off between
cybersickness and video quality. Moreover, it exploits NSL to
avoid re-evaluating recent tile quality conﬁgurations to ensure
a better quality assignment in the next iteration. In general,
ETSCAA results in a smaller total cost and can reduce the
cybersickness by more than 25% compared to the baselines.

VI. CONCLUSION

This paper leverages FoV shrinking and DoF simulation
to alleviate cybersickness in a 360° video streaming system.
We formulate a new optimization problem TSCC to minimize
the video quality loss and cybersickness accumulation. To
effectively solve TSCC, we propose an m-competitive online
algorithm ETSCAA with CI, VLI, and SMI to support tile
selection and cybersickness control. Simulations with a real
network dataset demonstrate that ETSCAA can reduce more
than 25% of sickness queue occupancy against the state-of-the-
art tile selection algorithms for 360° video streaming systems.

ACKNOWLEDGMENT

We thank to National Center for High-performance Com-
puting (NCHC) of National Applied Research Laboratories
(NARLabs) in Taiwan for providing computational and storage
resources.

REFERENCES

[1] (2020) Emerging virtual realities in industry, government and academia.

[Online]. Available: https://reurl.cc/bRjpg6

[2] M. Zink, R. Sitaraman, and K. Nahrstedt, “Scalable 360° video stream
delivery: Challenges, solutions, and opportunities,” Proceedings of the
IEEE, vol. 107, no. 4, pp. 639–650, 2019.

[3] L. Xie, Z. Xu, Y. Ban, X. Zhang, and Z. Guo, “360ProbDASH:
Improving QoE of 360 video streaming using tile-based HTTP adaptive
streaming,” in Proc. ACM Multimedia, 2017.

[4] F. Qian, B. Han, Q. Xiao, and V. Gopalakrishnan, “Flare: Practical
viewport-adaptive 360-degree video streaming for mobile devices,” in
Proc. ACM Mobicom, 2018.

[5] M. Xiao, C. Zhou, V. Swaminathan, Y. Liu, and S. Chen, “BAS-360°:
Exploring spatial and temporal adaptability in 360-degree videos over
HTTP/2,” in Proc. IEEE INFOCOM, 2018.

[6] L. Sun et al., “A two-tier system for on-demand streaming of 360 degree
video over dynamic networks,” IEEE J. Emerging Sel. Top. Circuits
Syst., vol. 9, no. 1, pp. 43–57, 2019.

[7] Y. Zhang et al., “EPASS360: QoE-aware 360-degree video streaming
over mobile devices,” IEEE Trans. Mob. Comput., pp. 1–15, 2020.
[8] D. N., S. P., and S. A., “Can simulator sickness be avoided? a review on
temporal aspects of simulator sickness.” Frontiers in psychology, 2018.
[9] T. M. Porcino, E. W. G. Clua, D. G. Trevisan, C. N. Vasconcelos,
and L. Valente, “Minimizing cyber sickness in head mounted display
systems: Design guidelines and applications,” Proc. IEEE SeGAH, 2017.
[10] J. Kim and T. Park, “The onset threshold of cybersickness in constant
and accelerating optical ﬂow,” Applied Sciences, vol. 10, no. 21, 2020.
[11] G. Wang and A. Suh, “User adaptation to cybersickness in virtual reality:

A qualitative study,” in Proc. ECIS, 2019.

[12] A. S. Fernandes and S. K. Feiner, “Combating VR sickness through
subtle dynamic ﬁeld-of-view modiﬁcation,” in Proc. IEEE 3DUI, 2016.
[13] S. Kim et al., “An effective FoV restriction approach to mitigate VR
sickness on mobile devices: An effective approach to mitigate VR
sickness,” J. Soc. Inf. Disp., vol. 26, 2018.

[14] K. Carnegie and T. Rhee, “Reducing visual discomfort with HMDs using
dynamic depth of ﬁeld,” IEEE Comput. Graphics Appl., vol. 35, no. 5,
pp. 34–41, 2015.

[15] Y. Li and X. Mou, “Joint optimization for SSIM-based CTU-level bit
allocation and rate distortion optimization,” IEEE Trans. Broadcast., pp.
1–12, 2021.

[16] H. Yuan, Q. Wang, Q. Liu, J. Huo, and P. Li, “Hybrid distortion-based
rate-distortion optimization and rate control for h.265/HEVC,” IEEE
Trans. Consum. Electron., pp. 1–1, 2021.

[17] C.-W. Lin, C.-H. Wang, D.-N. Yang, and W. Liao, “Cybersickness-
aware tile-based adaptive 360° video streaming (full version),”
National Taiwan University, Tech. Rep., 2021. [Online]. Available:
https://kiki.ee.ntu.edu.tw/%7Ed09921012/VRCybersickness.pdf

[18] L. Ruan, M. P. I. Dias, and E. Wong, “Enhancing latency performance
through intelligent bandwidth allocation decisions: a survey and compar-
ative study of machine learning techniques,” IEEE/OSA J. Opt. Commun.
Networking, vol. 12, no. 4, pp. B20–B32, 2020.

[19] K. Petri, K. Feuerstein, S. Folster, and F. Bariszlovich, “Effects of age,
gender, familiarity with the content, and exposure time on cybersickness
in immersive head-mounted display based virtual reality,” American
Journal of Biomedical Sciences, pp. 107–121, 11 2020.

[20] C. Wu, Z. Tan, Z. Wang, and S. Yang, “A dataset for exploring user
behaviors in vr spherical video streaming,” in Proc. ACM MMSys, 2017.
[21] H. Riiser et al., “Commute path bandwidth traces from 3g networks:

Analysis and applications,” in Proc. ACM MMSys, 2013.

