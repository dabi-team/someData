9
1
0
2

b
e
F
4
1

]
T
I
.
s
c
[

1
v
1
8
1
5
0
.
2
0
9
1
:
v
i
X
r
a

Data Correlation-Aware Resource Management in

Wireless Virtual Reality (VR): An Echo State

1

Transfer Learning Approach

Mingzhe Chen∗, Walid Saad†, Changchuan Yin∗, and Mérouane Debbah‡

∗Beijing Key Laboratory of Network System Architecture and Convergence,

Beijing University of Posts and Telecommunications, Beijing, China 100876,

Emails: chenmingzhe@bupt.edu.cn, ccyin@ieee.org.
†Wireless@VT, Bradley Department of Electrical and Computer Engineering, Virginia Tech, Blacksburg, VA,

USA, Email: walids@vt.edu.
‡Mathematical and Algorithmic Sciences Lab, Huawei France R & D, Paris, France,

Email: merouane.debbah@huawei.com.

Abstract

Providing seamless connectivity for wireless virtual reality (VR) users has emerged as a key

challenge for future cloud-enabled cellular networks. In this paper, the problem of wireless VR resource

management is investigated for a wireless VR network in which VR contents are sent by a cloud to

cellular small base stations (SBSs). The SBSs will collect tracking data from the VR users, over the

uplink, in order to generate the VR content and transmit it to the end-users using downlink cellular links.

For this model, the data requested or transmitted by the users can exhibit correlation, since the VR users

may engage in the same immersive virtual environment with different locations and orientations. As

such, the proposed resource management framework can factor in such spatial data correlation, so as to

better manage uplink and downlink trafﬁc. This potential spatial data correlation can be factored into the

resource allocation problem to reduce the trafﬁc load in both uplink and downlink. In the downlink, the

cloud can transmit 360◦ contents or speciﬁc visible contents (e.g., user ﬁeld of view) that are extracted

from the original 360◦ contents to the users according to the users’ data correlation so as to reduce the

backhaul trafﬁc load. In the uplink, each SBS can associate with the users that have similar tracking

information so as to reduce the tracking data size. This data correlation-aware resource management

problem is formulated as an optimization problem whose goal is to maximize the users’ successful

A preliminary version of this work was published in [1].

 
 
 
 
 
 
2

transmission probability, deﬁned as the probability that the content transmission delay of each user

satisﬁes an instantaneous VR delay target. To solve this problem, a machine learning algorithm that uses

echo state networks (ESNs) with transfer learning is introduced. By smartly transferring information

on the SBS’s utility, the proposed transfer-based ESN algorithm can quickly cope with changes in

the wireless networking environment due to users’ content requests and content request distributions.

Simulation results demonstrate that the developed algorithm achieves up to 15.8% and 29.4% gains in

terms of successful transmission probability compared to Q-learning with data correlation and Q-learning

without data correlation.

Index Terms— virtual reality; resource allocation; echo state networks; transfer learning.

I. INTRODUCTION

Augmented and virtual reality applications will be an integral component of tomorrow’s

wireless networks [2]. Indeed, it is envisioned that by using wireless virtual reality (VR) services,

users can engage in unimaginable virtual adventures and games within the conﬁnes of their

own home. As a VR device is operated over a wireless network, the VR users must send

tracking information that includes the users’ locations and orientations to the small base stations

(SBSs) and, then, the SBSs will use the tracking information to construct 360◦ images and send

these images to the users. Therefore, for wireless VR applications, the uplink and downlink

transmissions must be jointly considered. Moreover, in contrast to traditional video that consists

of 120◦ images, a VR video consists of high-resolution 360◦ vision with three-dimensional

surround stereo. This new type of VR video requires a much higher data rate than that of

traditional mobile video. In consequence, to enable a seamless and pervasive wireless VR

experience, it is imperative to address many wireless networking challenges that range from

low latency and reliable networking to effective communication, computation, and resource

management [3].

To address these challenges, a number of recent works on wireless VR recently appeared such

as in [1]–[12]. In [2] and [3], qualitative surveys are provided to motivate the use of VR over

wireless networks and to present the associated opportunities. The authors in [4] proposed an

efﬁcient wireless VR communication scheme using a wireless local area network. The work in

[5] studied the problem of VR tracking and positioning. However, the works in [4] and [5] only

analyze a single VR metric such as tracking accuracy and do not develop a speciﬁc wireless-

centric VR model. In [6], the authors proposed a new algorithm for cached content replacement

3

to minimize transmission delay. The work in [7] introduced a model for wireless VR services

that takes into account the tracking accuracy, processing latency, and wireless transmission

latency and, then, developed a game-theoretic approach for VR resource management. The

authors in [8] studied the resource allocation problem with a brain-aware QoS constraint. In

[9], the authors investigated the problem of concurrent support of visual and haptic perceptions

over wireless cellular networks. In [10], the authors developed a framework for mobile VR

delivery by leveraging the caching and computing capabilities of mobile VR devices in order to

alleviate the trafﬁc burden over wireless networks. A communications-constrained mobile edge

computing framework is proposed in [11] to reduce wireless resource consumption. The authors

in [12] presented a new scheme for proactive computing and millimeter wave transmission for

wireless VR networks. However, the works in [6]–[12] ignore the correlation between the data

of VR users. In fact, VR data (tracking data or VR image data) pertaining to different users can

be potentially correlated because the users share a common virtual environment. For example,

when the VR users are watching an event from different perspectives, the cloud has to only

send one 360◦ image to the SBSs who, in turn, can rotate the image and send it to the various

users. For such scenarios, one can reduce the trafﬁc load on the cellular network, by exploiting

such correlation of views among users. Note that, in [1], we have studied the problem of data

correlation-aware resource allocation in VR networks. However, our work in [1] considered only

data correlation among two users and it relied on a very preliminary model that does not consider

360◦ and visible contents transmission for the cloud. In practice, for a given user, a 360◦ VR

content can be divided into visible and invisible components. A visible content is deﬁned as the

component of a 360◦ content that is visible (in the ﬁeld of view) to a given user. Moreover, our

work in [1] used a more rudimentary learning algorithm for resource allocation.

The main contribution of this paper is to address the resource allocation problem for wireless

VR networks while taking into account potential correlation among users. We introduce a novel

model and associated solution approach using ESN-based transfer learning that enable SBSs to

effectively allocate the uplink and downlink resource blocks to the VR users considering the data

correlation among the uplink tracking information data and downlink VR content data so as to

maximize VR users’ successful transmission probabilities. To our best knowledge, this is the ﬁrst

work to use ESNs as transfer learning for data correlation-aware resource block management

and visible content transmission in wireless VR networks. The primary contributions of this work

4

can thus be summarized as follows:

• We introduce a new model for VR in which the cloud can transmit 360◦ or visible contents

to the SBSs and the SBSs will transmit the visible contents to VR users. Meanwhile, the

users will cooperatively transmit tracking information to the SBSs so as to enable them to

extract the visible contents from original 360◦ contents.

• We then investigate how the cloud can jointly optimize uplink and downlink data transmis-

sion and resource block allocation. We formulate this joint content transmission and resource

block allocation problem as an optimization problem. The goal of this optimization problem

is to maximize the users’ successful transmission probability.

• To address this problem, we propose a transfer learning algorithm [13] based on ESNs [14].

This algorithm is able to smartly transfer information on the learned successful transmission

probability across time so as to adapt to the dynamics of the wireless environment due to

factors such as changes in the users’ data correlation and content request distribution.

• We analyze how the cloud determines the transmission format (360◦ or 120◦ content) of

each VR content that is transmitted over the cloud-SBSs backhaul links. Analytical results

show that the transmission format of each VR content depends on the number of users that

request different visible contents, the data correlation among the users, and the backhaul

data rate of each VR user.

• We perform fundamental analysis on the gain, in terms of the successful transmission

probability, resulting from the changes of resource block allocation and content transmission

format. This analytical result can provide guidance for action selection in the proposed

machine learning approach.

• Simulation results demonstrate that our proposed algorithm can achieve, respectively, 15.8%

and 29.4% gains in terms of the total successful transmission probability compared to Q-

learning with data correlation and Q-learning without data correlation. The results also

show that the proposed transfer learning algorithm needs 10% and 14.3% less iterations

for convergence compared to Q-learning with data correlation and Q-learning without data

correlation.

The rest of this paper is organized as follows. The system model and problem formulation are

presented in Section II. The ESN-based transfer learning algorithm for resource block allocation

5

(cid:38)(cid:79)(cid:82)(cid:88)(cid:71)

360 or visible 
content transmission

Tracking 
information 
transmission

Fig. 1. The architecture of a VR network that consists of the cloud, SBSs, and VR users.

is proposed in Section III. In Section IV, numerical simulation results are presented and analyzed.

Finally, conclusions are drawn in Section V.

II. SYSTEM MODEL AND PROBLEM FORMULATION

Consider the wireless network shown in Fig. 1 that is composed of a set K of K SBSs that

serve, in both uplink and downlink, a set U of U users. In this network, uplink transmissions

are used to carry tracking information (e.g., VR user location and orientation) from the users to

the network. Meanwhile, downlink transmissions will carry the actual VR content (e.g., images)

to the users. A capacity-constrained backhaul connection is considered between the SBSs and

the cloud. To serve the VR users, the SBSs will use the cellular band. The cloud can directly

transmit the 360◦ contents to the SBSs or extract the visible contents from the 360◦ contents and

transmit them to the SBSs, as shown in Fig. 2. In our model, a 360◦ VR content that consists of

360◦ images while a visible content is composed of 120◦ horizontal and 120◦ vertical images1, as

shown in Fig. 3. If the cloud wants to transmit visible contents to the SBSs, it needs to acquire

the users’ tracking information from the SBSs. Let G120◦ be the data size of each visible content
and G360◦ be the data size of each 360◦ content. To reduce the trafﬁc load over SBS-users links,

the SBSs will only transmit visible contents to the users, as shown in Fig. 2.

1Here, the degree of the visible contents of a user depends on the devices that the users used for engaging in the VR

applications. 120◦ is typically used with HTC Vive [15].

6

Cloud

360 or visible content transmission

considering data correlation

 SBSs

Tracking information transmission
considering data correlation

VR Users

 Visible content transmission

Fig. 2. The content and tracking information transmissions in a VR network.

Data Correlation

Visible 
content ai

Visible 
content aj

User i

User j

Fig. 3. An illustrative example of 360◦ and visible contents. Here, ai and aj represent the visible content requested by users

i and j, respectively. The red region shows the similarities between ai and aj.

We adopt an orthogonal division multiple access (OFDMA) scheme. The SBSs use a set V

of V resource blocks for the uplink and a set S of S resource blocks for the downlink. We

assume that each SBS has a circular coverage area of radius r. We also assume that the resource

blocks of each SBS are all allocated to the users. We also consider that each SBS will allocate

all of its resource blocks to its associated users. Let qin = [qin,1, . . . , qin,NC ] be the content
request distribution [16] of user i during a period n where qin,k represents the probability that

user i requests content k and NC is the total number of contents that each user can request. For

different periods, the content request distribution of each user will be different. We also assume

that the users will immediately request a new VR content once they completely receive one

content.

7

Notation

Description

Notation

Description

TABLE I
LIST OF NOTATIONS

U

K

PU

y′

j (t)

Ca

U

K

yj (t)

cij

PB

NW

G120◦

G360◦
cUL
ij

xj (t)

aj

Nja

Number of VR users

Number of SBSs

Transmit power of each user

Output b) of ESN

Set of data correlation

Set of VR users

Set of SBSs

Output a) of ESN

Downlink data rate of user i

Transmit power of each SBS

Number of neurons in ESN

Data size of each visible content

Data size of each 360◦ content

hk
ij

B

Naik

Caik

υ2

gja

σij

V B
i

S

Dij

DU
ij

Qit

Pi

Path loss between user i and SBS j

Bandwidth of each resource block

Data size of different pixels between visible contents ai and ak

Data correlation between user i and k

Variance of the Gaussian noise

Content transmission format

Covariance of tracking information

Fronthaul transmission rate of each user i

Number of downlink resource blocks

Delay of content transmission

Delay of tracking information transmission

Successful transmission of user i at time t

Successful transmission probability of user i

Uplink data rate of user i

Input of ESN at time t

An action of SBS j

Number of actions of SBS j

M (gja)

Ki (σmax
i

)

V

dij

Data size of content a with transmission format gja

Data size of tracking information

Number of uplink resource blocks

Distance between BS j and user i

A. Proposed Model for VR Data Correlation

1) Model for Data Correlation in the Downlink: In the downlink, the cloud will transmit

VR contents to the SBSs. For VR applications, each VR content consists of 360◦ images, which

means that the cloud must transmit all of the surrounding virtual environment information to each

SBS. When the users engage in the same VR activity or play the same immersive games, they

will share the same virtual environment information thus making their downlink data correlated.

The network can better manage its backhaul trafﬁc if it exploits the correlation of data for users

that are engaged in the same VR game or activity. For instance, as the users are engaged in

a common virtual football or basketball game, the cloud can directly transmit the entire 360◦

contents to the SBSs. Then, the SBSs can extract the unique visible contents from the 360◦ data

and transmit them to the users. However, if the users are engaged in different VR activities,

then, their VR data correlation between the users is low and, therefore, different VR contents

must be sent to those users.

8

To properly deﬁne VR data correlation, we consider that the VR users that request the similar

360◦ content will request different visible contents. This is because the users may have different

location and orientation. In consequence, they may observe different components of a 360◦

content. Let ai be the visible content that is extracted from 360◦ content a and requested by

user i. Let Caik be the fraction of the same pixels between visible contents ai and ak that users

i and k request, respectively. In this context, as users i and k are connected to the same SBS,

the cloud needs to only transmit G120◦ (2 − Caik) Mbits data of visible contents to that SBS.
Let Cn

a be the set of data correlation among any n users that request different visible contents
extracted from 360◦ content a. For example, for a given SBS that is serving three users (users

1, 2, and 3), C2

a = {Ca123}. The cloud can select the appropriate
content format (visible or 360◦ content) for each content transmission. Let gja ∈ {120◦, 360◦} be

a = {Ca12, Ca13, Ca23} and C3

the content transmission format. gja = 120◦ implies that the cloud will transmit visible contents

that are extracted from 360◦ content a to SBS j, otherwise, the cloud will transmit 360◦ content

a to SBS j.

2) Data Correlation Model for the Uplink: In the uplink, the tracking information is collected

by the sensors that are located at the VR users’ headsets. The VR user sensors need to scan

their environment and send the information related to their environment to the SBSs. Therefore,

the VR users’ sensors will collect data from a similar environment and, hence, this data will be

correlated [17]. In consequence, the tracking information of wireless VR users will have data

correlation. To model each user’s tracking information that is collected by the VR sensors, we

adopt a Gaussian ﬁeld model similar to the one use in [18]. Let the tracking data, Xi, gathered

by each VR user i be a Gaussian random variable with variance σ2

i and mean µi. This model
for each user’s tracking information is constructed based on the historical tracking information

collected by the SBSs. The SBSs can use the expectation maximization algorithms in [19] to

determine the parameters of the Gaussian ﬁeld model. In VR applications, observations from

neighboring VR devices will often be correlated. For example, VR users that are located close

in proximity or within a common location (VR theater or stadium) may request similar visible

VR contents. Based on the model of tracking information, we employ the power exponential

model [20] to model the spatial correlation of the VR tracking data since the power exponential

model can capture how the distance between two users impacts data correlation. Consequently,

for any two VR users i and j located at a distance dij, the covariance σij, will be given by [21]:

σij = cov (Xi, Xj) = σiσje−dα

ij/κ,

(1)

where α and κ are parameters that capture how sensitive data correlation will be to distance

9

variations.

B. Transmission Model

In the studied model, the cloud will ﬁrst transmit the VR contents requested by the users to

the SBSs. Then, the SBSs will transmit the contents received from the cloud to its associated

users. Meanwhile, the users will transmit their tracking information to the SBSs. If the cloud

determines that it needs to transmit the visible contents to the SBSs, the SBSs must transmit

the tracking information to to the cloud. However, in the uplink, we only consider the tracking

information transmission over the wireless SBS-users links and ignore the delay of tracking

information transmission over wired backhaul links. This is due to the large capacity of the

wired backhaul and the relatively small data size of tracking information compared to the VR

content data size. For each user i, the transmission rate of each VR content from the cloud to

the SBS can be given by [22]:

V B
i =

V B
U

,

(2)

where V B is the maximum downlink backhaul link rate, for all VR users. We assume that the

backhaul rates for all users are equal and we do not consider backhaul transmission optimization.

In a VR model, we need to capture the VR transmission requirements such as high data rate,

low delay, and accurate tracking. Hence, we consider the transmission delay as the main VR

QoS metric of interest. For user i associated with SBS j, the downlink rate can be given by:

S

cij (sij) =

sij,kBlog2 (1 + γij,k),

(3)

where sij = [sij,1, . . . , sij,S] represents the resource blocks vector with sij,k ∈ {0, 1}. sij,k = 1 in-

k=1
X

dicates that SBS j allocates resource block k to user i, and sij,k = 0, otherwise. γij,k =

υ2+

represents the signal-to-interference-plus-noise ratio (SINR) between SBS j and user i on re-

PB hk
ij

l∈K,l6=j
P

PB hk
il

source block k. B represents the bandwidth of each resource block and PB represents each

SBS j’s transmit power. Moreover,

l∈K,l6=j
P

PBhk

il is the interference caused by other SBSs using

resource block k for VR content transmission. υ2 represents the variance of the Gaussian noise

10

ijd−β

ij

and hk

ij = gk

ij being the Rayleigh
fading parameter. dij represents the distance between SBS j and user i, and β represents the

represents the path loss between SBS j and user i with gk

path loss exponent. For user i associated with SBS j, the delay of transmitting content a from

the cloud to user i is:

Dij (sij, gja) =

G120◦
cij (sij)

+

M (gja)
UjaV B
i

,

(4)

where Uja is the number of users that are associated with SBS j and request visible contents a.

M (gja) is the data size of content a must be transmitted from the cloud to SBS j. The ﬁrst term

in (4) is the time that SBS j uses to transmit content a to user i and the second term in (4) is

the time that the cloud uses to transmit content a to SBS j. From (4), we can see that if several

users request the same content, the cloud will perform only one transmission over the backhaul

using the sum backhaul data rate of these users. We let PU be the transmit power of each user

and B be the bandwidth of each uplink resource block. In this case, for user i connected to SBS

j, the uplink data rate can be given by:

V

cij (vij) =

vij,kBlog2

1 + γu

ij,k

,

(5)

where vij = [vij,1, . . . , vij,V ] represents the vector of uplink resource blocks that SBS j allocates

k=1
X

(cid:0)

(cid:1)

to user i with vij,k ∈ {0, 1}. vij,k = 1 indicates that SBS j allocates uplink resource block k to
user i, vij,k = 0, otherwise. γu

represents the SINR between SBS j and user

PU hk
ij

ij,k =

υ2+

i on resource block k. Here, U k is the set of VR users that transmit their tracking information

over uplink resource block k. The time that user i needs to transmit tracking information to SBS

j can be given by:

DU

ij (vij, σmax

i

) =

Ki (σmax
i
cij (vij)

)

,

(6)

where Ki (σmax

i

) is the size of tracking information data that user i needs to transmit and

σmax
i = max

k∈Uj,k6=i

(σik) represents the maximum covariance for each user i. From (6), we can see

that ﬁnding data correlation among the users allows minimizing the uplink data trafﬁc that the

users need to transmit.

C. Model of Successful Transmission Probability

Next, we derive the successful transmission probability.

PU hk
il

l∈U k,l6=j
P

For each user i that requests content ait at time t, a successful transmission is deﬁned as:

11

Qit(ait, sij, vij, gjait, σmax

i

) = 1{Dijt(sij ,gjait)+DU

ijt(vij ,σmax

i

)≤γD},

(7)

where Dijt and DU

ijt represent the delay of downlink and uplink transmission at time t, respec-
tively. γD is the delay requirement for each VR user. Based on (7), the probability of successful

transmission can be given by:

Pi (sij, vij) =

1
T

t=1
X

T

Qit(ait, sij, vij, gjait, σmax

i

) ,

(8)

where T denotes the number of time slots used to evaluate the successful transmission probability

of each user. Now, given the resource block vectors sij and vij, users association can be

determined. Once the user association is determined, the data correlation of each user is also

determined, since the data correlation depends on the user association and the data request by

each user. In consequence, one can consider only the optimization of the resource block allocation

for each SBS to maximize the successful transmission probability of each user. To capture the

gain that stems from the allocation of the resource blocks, we state the following result:

Theorem 1. Given the uplink and downlink resource blocks vij and sij as well as the uplink

and downlink data correlation σmax

i

and M (gja), the gain of user i’s successful transmission

probability due to an increase in the amount of allocated resource blocks and the change of

content transmission format includes:

i) The gain due to an increase of the number of uplink resource blocks, ∆Pi, is given by:

T

1{γDU−cij(∆vij )≤cij(vij )<γDU},

(9)

∆Pi =

1
T

t=1
X

where ∆Pi represents the change of the successful transmission probability of each user i and

γDU =

Ki(σmax
γD−Dijt(sij ,gjait)

)

i

.

ii) The gain due to an increase of the number of downlink resource blocks, ∆Pi, is given by:

∆Pi =

1
T

where γDD =

G120◦

γD−DU

ijt(vij ,σmax

i

)−

M(gja)
V D
i

1{γDD−cij(∆sij )≤cij(sij )<γDD}

(10)

T

t=1
X

.

iii) The gain due to the change of content transmission format, gja, ∆Pi, can be given by:

12

1
T

1
T

T

t=1
P
T

t=1
P

1

1

(

(

M (120◦)6

γD−

M (360◦)6

γD−

G120◦
cij(s
ij)

G120◦
cij(s
ij)
0,

−DU

ijt(vij ,σmax

i

−DU

ijt(vij ,σmax

i

, if M (360◦) > M (120◦),

, if M (360◦) < M (120◦),

)

!

)

!

V B
i <M (360◦)

)

V B
i <M (120◦)

)

if M (360◦) = M (120◦).

(11)

∆Pi=






Proof. See Appendix A.

Theorem 1 shows that the resource block allocation scheme and content transmission format

will jointly determine the users’ successful transmission probability. Indeed, Theorem 1 can

provide guidance for action selection in the machine learning approach proposed in Section

III. Theorem 1 also shows that, as M (120◦) = M (360◦), the users’ successful transmission

probability will remain constant as the content transmission format changes. The reason behind

this is that, as the number of users that request the same content increases or the data correlation

among the users decreases, the data size of visible contents that the cloud needs to transmit will

be equal to or larger than the data size of a 360◦ content.

D. Problem Formulation

Having deﬁned our system model, the next step is to introduce a resource management

mechanism to effectively allocate the downlink and uplink resources so as to maximize the

successful transmission probability of all users. This problem will be:

max
sijn,vijn,gjan,σmax

i

N

n=1
X

j∈B
X

i∈Uj
X

Pin (sijn, vijn) ,

s. t.

vijn,k ∈ {0, 1} , ∀j ∈ B, i ∈ Uj,

sijn,k ∈ {0, 1} , ∀j ∈ B, i ∈ Uj,

gjan ∈ {120◦, 360◦} , ∀i ∈ Uj, a ∈ C,

(12)

(12a)

(12b)

(12c)

where Pin represents the successful transmission probability during a period n that consists

of T time slots. sijn and vijn represent the resource block allocation during period n. Here,

 
 
13

the content request distribution of each user will change as period n varies. (12a) and (12b)

indicate that each uplink and downlink resource block k can be only allocated to one user. (12c)

indicates that the cloud can transmit visible or 360◦ contents to the SBSs. From (12), we can see

that the successful transmission probability Pin is optimized over N periods. The users’ content

request distributions and data correlation will change as period n varies. Since the content request

distribution of each user changes during each period, each SBS needs to change its resource

allocation strategy so as to optimize the successful transmission probability during each period.

Moreover, from (12a) to (12c), we can see that the optimization variables vijn,k and sijn,k are

binary, and gjan is discrete. Consequently, we cannot differentiate the optimization function.

Thus, the problem in (12) cannot be readily solved by conventional optimization algorithms. In

addition, from (1), we can see that user association (the number of users that request different

visible content a) and data correlation are coupled. Meanwhile, from (4) and (6), we can see that

resource allocation and data correlation jointly determine the transmission delay of each user.

Hence, in (12), the user association, resource allocation, and data correlation are interdependent

and we cannot divide the optimization problem into three separate optimization problems. Also,

from (3) and (5), we can see that the data rate of each user i depends on not only the resource

allocation scheme that is implemented by its associated SBS but also on the resource allocation

schemes performed by other SBSs. Finally, since Pi (sij , vij) = 1
T

T

)≤γD}
)≤γD} are non-convex functions, the problem in (12) is challenging

1{Dijt(sij ,gjait)+DU

ijt(vij ,σmax

t=1
P

i

and 1{Dijt(sij ,gjait)+DU
to solve.

ijt(vij ,σmax

i

III. ECHO STATE NETWORKS FOR SELF-ORGANIZING RESOURCE ALLOCATION

In this section, a transfer reinforcement learning (RL) algorithm based on the neural network

framework of ESNs [23]–[25] is introduced. The proposed transfer RL algorithm can be used

to ﬁnd the optimal resource block allocation during each period so as to maximize the users’

successful transmission probability. Conventional learning approaches such as Q-learning usually

use a matrix to record the information related to the users and networks. As a result, the

information that the Q-learning approach must record will exponentially increase, when the

number of SBSs and users in the network increases. In consequence, the Q-learning approach

cannot record all of the information related to the users and network. However, the ESN-based

transfer RL algorithm exploits a function approximation method to record all of the information

Input

ESN Model

Output

Output a)

14

Output b
Output b)

Fig. 4. The components of the ESN-based transfer RL algorithm. Here, output a) combined with the input and the ESN model

is used as an RL algorithm so as to ﬁnd the optimal resource allocation scheme while output b) combined with the input and

the ESN model acts as a transfer learning algorithm to transfer the alreadly learned information to new environments.

related to the network and users. Hence, the proposed ESN-based transfer RL algorithm can

be used for large networks with dense users. Moreover, the users’ content request distributions

and data correlation will change as time elapses. Traditional learning approaches such as [26]

must re-implement the learning process as the users’ content request distribution and data

correlation change. However, the ESN-based transfer RL algorithm can transform the already

learned resource block allocation policy into the new resource block allocation policy that must

be learned as the users’ content request distribution and data correlation change so as to improve

the convergence speed.

A. Components of ESN-based Transfer RL Algorithm

The ESN-based transfer RL algorithm of each SBS j consists of four components: (a) input,

(b) action, (c) output, and d) ESN model, as shown in Fig. 4, which can be given by:

• Input: The input of the ESN-based transfer RL algorithm the strategy index of the SBSs and
period n, which is xj (t) = [π1 (t) , · · · , πB (t) , n]T where πk (t) is the index of a strategy
that SBS k uses at time t. Here, the strategies of each SBS are determined by the ǫ-greedy

mechanism [27].

• Action: The action aj of each SBS j consists of downlink resource allocation vector

sj =

s1j, s2j, . . . , sUjj

and uplink resource allocation vector vj =

v1j, v2j, . . . , vUjj

.

15

Uj represents the number of VR users located within the coverage of SBS j.

(cid:2)

(cid:3)

(cid:2)

(cid:3)

• Output: The output of the ESN-based transfer RL algorithm consists of two components:

a) predicted successful transmission probability and b) predicted variation in the successful

transmission probability when the users’ content request distribution and data correlation

change. Output a) is used to ﬁnd the relationship between the strategies πj, actions aj,

and users’ successful transmission probability

Pin(aj (t)). Therefore, output a) of the

ESN-based transfer RL algorithm can be given by yj (t) =
Here, yjajn (t) represents the predicted total successful transmission probability of SBS j

yjaj1 (t) , · · · , yjajNja
h

(t)

i

.

T

i∈Uj
P

using action ajn. Nja is the total number of actions of each SBS j.

To calculate

Pin(aj (t)), we need to determine the transmission format of each content.

Given action aj (t), the user association will be determined. In consequence, for the cloud,

i∈Uj
P

the choice of visible or 360◦ content transmission can be given by the following theorem:

Theorem 2. Given action aj (t), the maximum downlink backhaul link rate V B, the set Uja
of Uja users that request different visible contents extracted from 360◦ content a, and the

set of data correlation Ca =

Uja

– If G360◦ > La (Ca), gja = 120◦.
– If G360◦ < La (Ca), gja = 360◦.

n=2
S

Cn
a , the transmission format of content a can be given by:

Here, La (Ca) = G120◦

Uja −

Proof. See Appendix B.

Uja

n=2
P

Ca∈Cn
a
P

(−1)n−1Ca

.

!

Theorem 2 shows that the choice of 360◦ and visible content transmission depends on the

data size of the 360◦ and visible contents, the data correlation among the users, and the

number of users that request the same content. When the data correlation among the users

increases, the cloud prefers to transmit visible contents to the SBSs. In contrast, as the

number of users that request the same content decreases, the cloud prefers to transmit the

360◦ content. Based on Theorem 2 and action aj (t),

Pin(aj (t)) can be computed.

The output b) is used to ﬁnd the relationship between Pin(aj (t)) and Pin+1(aj (t)) when

i∈Uj
P

SBS j only knows Pin(aj (t)). This means that the proposed algorithm can transfer the

 
information from the already learned successful transmission probability Pin(aj (t)) to

the new successful transmission probability Pin+1(aj (t)) that must be learned. The out-

put b) of the ESN-based transfer learning algorithm at time t is the predicted variation

16

in the successful transmission probability when the users’ information changes y′

j (t) =

jaj1 (t) , · · · , y′
y′

jajNja

(t)

T

with y′

jajk (t) = Pin(ajk (t)) −Pin−1(ajk (t)).

• ESN Model: An ESN model of the learning approach can approximate the function of the

i

h

ESN input xj (t) and output yj (t) as well as output y′
j (t). The ESN model is composed
j ∈ RNw×(B+1) be the
of two output weight matrices W out
j
input weight matrix and W j ∈ RNw×Nw be the recurrent matrix with Nw being the number

′out
j ∈ RNja×(Nw+B+1). Let W in

, W

of the neurons. Mathematically, W j can be given by:

W l =

,

(13)

0

0

· · · w

w 0
. . .

0

0

0

0

0

0

0

w 0



















where w ∈ [0, 1] is a constant. Here, the recurrent weight matrix W j combined with the

output weight matrices can store the historical information of ESN. This information that

includes ESN input, neuron states, and output can be used to ﬁnd the relationship between

the ESN input and output.

B. ESN-based Transfer RL for Resource Allocation

Next, we introduce the process that uses the ESN-based transfer RL algorithm to solve the

problem in (12). At each time slot t, each SBS j will broadcast its strategy to other SBSs. Then,

each SBS can set the input of the ESN-based transfer algorithm. Given the input xj (t), each

ESN needs to update the states of the neurons located in the ESN model. The states of the

neurons will be given by:

µj (t) = f

W jµj (t − 1) + W in

j xj (t)

,

(14)

where µj (t − 1) is the neuron state vector at time slot t − 1 and f (x) = ex−e−x
ex+e−x is the tanh
function. From (14), we can see that the states of the neurons depend not only on the recurrent

(cid:0)

(cid:1)

input but also on the historical states. In consequence, the ESN model can record historical

information related to the inputs, states, and outputs of each ESN. Based on the states of the

neurons, the ESN-based transfer RL algorithm will combine with the output weight matrix W out
j

to predict the successful transmission probability of each SBS, which can be given by:

17

yj (t) = W out
j

(t)



µj (t)
xj (t) 




,

(15)

where W out
j

(t) is the output weight matrix at time slot t. Meanwhile, the proposed transfer RL

approach combined with W

′out
j

(t) will predict the variation in the successful transmission prob-

ability when the users’ content request distribution and data correlation change. This prediction

process can be given by:

y′

j (t) = W

′out
j

(t)



µj (t)
xj (t) 




.

(16)

From (15) and (16), we can see that, to enable an ESN to predict different outputs (i.e., y′

j (t)
or yj (t)), we only need to adjust the output weight matrix of a given ESN. The adjustment of
the output weight matrix W out
j

can be given by:

W out

jk (t + 1) = W out

jk (t)+λ

Pin(ajk (t)) − yjajk(t) (t)

µT

j (t),





i∈Uj
X





(17)

(t + 1),

where λ is the learning rate, W out

jk (t + 1) is row k of the output weight matrix W out

j

and

Pin(ajk (t)) is the actual successful transmission probability resulting from SBS j using

i∈Uj
P

action ajk (t). Similarly, W

′out
j

can be adjusted based on the following equation:

W

′out
jk (t + 1) = W

′out
jk (t) + λ′



Pin(ajk (t))−

i∈Uj
X

i∈Uj
X



Pin−1(ajk (t)) − yjajk(t) (t)

µT

j (t), (18)





where λ′ is the learning rate (λ′ ≪ λ). Based on (14)-(18), the ESN-based transfer RL algorithm

can predict: a) the successful transmission probability resulting from each action that SBS j

takes and b) the variation in the successful transmission probability when the users’ information

changes. In consequence, each SBS j will ﬁrst use the output a) of the ESN-based transfer RL

algorithm to ﬁnd the optimal resource allocation scheme so as to maximize the users’ successful

transmission probability. Then, as the users’ content request distribution or data correlation

change, each SBS j can use the outputs b) to ﬁnd the relationship between the already learned

successful transmission probability and the new successful transmission probability that must

be learned. In consequence, each SBS j can directly transfer the already learned successful

transmission probability to the new successful transmission probability so as to increase the

convergence speed. The proposed approach that is implemented by each SBS j is summarized

18

in Table I.

C. Complexity and Convergence

With regards to the computational complexity, the complexity of the proposed algorithm

depends on the action that is performed at each iteration. The proposed algorithm is used to ﬁnd

the optimal action. As the number of iterations needed to ﬁnd and perform the optimal action

increases, the complexity of the proposed algorithm increases. However, the action selection

depends on the ǫ-greedy mechanism which will also change with time. Therefore, for a very

general case, we cannot quantitatively analyze the complexity of the proposed algorithm. Hence,

we can only analyze the worst-case complexity of the proposed algorithm. Since the worst-case

for each SBS is to traverse all actions, the worst-case complexity of the proposed algorithm is

O(|A1| × · · · × |AK|) where |Aj| denotes the total number of actions of each SBS j. However,

the worst-case complexity pertains to a rather unlikely scenario in which all SBSs choose their

optimal resource allocation schemes after traversing all other resource allocation schemes during

each period n. Moreover, the proposed algorithm uses a function approximation method to ﬁnd

the relationship between the actions, states, and utilities. In this context, the proposed algorithm

will not need to traverse all actions to ﬁnd this relationship. In addition, ESNs are a type of

recurrent neural networks which can use historical input data to ﬁnd the relationship between

actions, states, and utilities which can reduce the training complexity. Furthermore, unlike the

existing learning algorithms such as long short term memory based RL algorithms [28] that need

to calculate the gradients of all neurons in the hidden and input layers, the proposed algorithm

only need to update the output weight matrix. Moreover, at each iteration, the proposed transfer

learning algorithm only needs to update one row of each output weight matrix. In particular, since
′out
jk ∈ R1×(Nw+B+1).
W out
j
This will also signiﬁcantly reduce the training complexity of our algorithm. Finally, compared

′out
j ∈ RNja×(Nw+B+1), the proposed algorithm must update W out

jk , W

, W

to the existing RL algorithms, the proposed transfer RL algorithm can transform the already

learned resource allocation policy into the new resource allocation policy that must be learned

so as to reduce the number of iterations needed for training.

For the convergence of the ESN-based transfer RL approach, we can directly use the result

19

of [7, Theorem 2] which showed that, for each action ajk (t), the outputs of a given ESN will

converge to Pin(ajk (t)) and Pin(ajk (t)) −Pin−1(ajk (t)) via adjusting the values of the input

and output weight matrices, as follows.

Corollary 1 (follows from [7]). The ESN-based transfer learning algorithm of each SBS j

converges to the utility values Pin(ajk (t)) and Pin(ajk (t)) − Pin−1(ajk (t)), if any following

conditions is satisﬁed:

i) λ and λ′ are constant, and

min
ji,xτ,j,x′

W in

τ,j

W in
ji

xτ,j − x′

τ ′,j

≥ 2, where W in

ji represents the

row i of W in
j .

(cid:0)

(cid:1)

ii) λ and λ′ satisfy the Robbins-Monro conditions (λ (t) > 0,

∞
t=0 λ (t) = +∞,

∞
t=0 λ2 (t) < +∞

where λ (t) is the learning rate at time t.) [23].

P

P

Since the convergence of the ESN-based algorithm depends on the values of the learning rates,

input weight matrix, and recurrent weight matrix, the proof in [7] will still hold for the proposed

algorithm which converges to the utility values Pin(ajk (t)) and Pin(ajk (t)) − Pin−1(ajk (t)).

Based on Corollary 1, the proposed transfer learning algorithm can adjust the value of input

weight matrix of the ESN and the values of learning rates λ and λ′ to guarantee the convergence

of the proposed algorithm.

IV. SIMULATION RESULTS

For simulations, a cellular network deployed within a circular area with radius r = 500 m is

considered. In this network, K = 5 SBSs and U = 25 VR users are uniformly distributed. The

bandwidth B of each resource block is set to 10 × 180 kHz. We use typical wireless network

parameters such as in [29]–[31], as listed in Table III. All of the simulation data related to VR

is collected from wired HTC Vive VR devices [15]. We use 5 VR videos and 5 VR games as

the total number of contents that can be provided by the cloud. Each user will request its visible

contents according to its head movement. The tracking information of each user is extracted

from the sensors of the HTC Vive VR devices. For comparison purposes, we use two baselines:

• The ﬁrst baseline is the Q-learning algorithm in [27] with data correlation, which we refer

to as “Q-learning with data correlation”. For this Q-learning algorithm, the state is set to the

ESN’s input xj, the actions of Q-learning are the actions deﬁned in our ESN algorithm, and

the reward function r (xj, aj) is the total successful transmission probability in (13). At each

TABLE II
ESN-BASED TRANSFER RL ALGORITHM FOR RESOURCE ALLOCATION

20

for each time t do.

(a) Each SBS j predicts Pin based on (15).

if t = 1

(b) Set the policy of the action selection πj (1) uniformly.

else

(c) Set πj (t) based on the ǫ-greedy mechanism.

end if

(d) Broadcast the action selection policy index to other SBSs.

(e) Receive the action selection policy index as ESN input xj (t).

(f) Perform an action based on the policy of action selection πj (t).

(g) Calculate the actual successful transmission probability.

(h) Update the states of the neurons based on (14).

(i) Adjust W out

j based on (17).

if n > 1

(j) Estimate the value of Pin+1 −Pin based on (16).

(k) Calculate the actual value of Pin+1 −Pin.

(l) Adjust W

′

out
j

based on (18).

end if

end for

iteration, this Q-learning algorithm will select an action based on the ǫ-greedy mechanism

and, then, use a Q-table to record the states, actions, and the successful transmission

probabilities resulting from the actions that the SBSs have implemented. Finally, each SBS

will update its Q-table by the following equation: Qt (xj, aj) = (1 − ζ) Qt−1 (xj, aj) +

ζr (xj, aj), where ζ is the learning rate.

• The second baseline is the Q-learning algorithm in [27] without data correlation, which we

refer to as “Q-learning without data correlation”. The settings of the Q-learning without

data correlation are similar to the Q-learning algorithm with data correlation. However,

in the Q-learning without data correlation algorithm, the cloud will directly transmit 360◦

contents to the SBSs and the users will directly transmit their tracking information to their

associated SBSs without the consideration of data correlation.

21

TABLE III

SYSTEM PARAMETERS

Parameters
NW
T
χσLoS
G360◦
S
κ
λ′
υ2
α

Values
100
1000
5.3
50 Mbits
5
5
0.03
-105 dBm
2

Parameters
λ
N
PU
PB
V
V B
γD
G120◦
Nw

Values
0.3
100
20 dBm
30 dBm
5
10 Gbits/s
20 ms
12 Mbits
100

ESN-based transfer RL algorithm
ESN without data correlation
Q-learning with data correlation
Q-learning without data correlation

2

4

6

8

Number of SBSs

20

15

10

5

y
t
i
l
i

b
a
b
o
r
p

i

i

n
o
s
s
m
s
n
a
r
t

l

u
f
s
s
e
c
c
u
s

l

a
t
o
T

Fig. 5. Total successful transmission probability as the number of SBSs varies.

• The third baseline is the ESN-based transfer RL without data correlation, which we refer

to as “ESN-based RL without data correlation”. The setting of this algorithm is similar to

the proposed algorithm. However, this algorithm does not consider the data correlation for

downlink VR content transmission and uplink tracking information transmission.

All statistical results are averaged over a large number of independent runs. In simulation ﬁgures,

total successful transmission probability indicates the total successful transmission probability

of all the users that are associated with the SBS.

Fig. 5 shows how the total successful transmission probability varies as the number of SBSs

 
 
 
22

ESN-based transfer RL algorithm
ESN without data correlation
Q-learning with data correlation
Q-learning without data correlation

y
t
i
l
i

18

b
a
b
o
r
p
n
o
s
s
m
s
n
a
r
t

i

i

l

u

f
s
s
e
c
c
u
s

l

t

a
o
T

16

14

12

10

8

15

20

25
Number of users

30

35

Fig. 6. Total successful transmission probability as the number of users varies.

changes. Fig. 5 shows that, as the number of SBSs increases, the total successful transmission

probability of all considered algorithms increases. The reason behind this is that the users have

more SBS choices and the number of users located in each SBS’s coverage decreases when the

number of SBSs increases. Fig. 5 also shows that the ESN-based transfer RL algorithm can

yield up to 15.8% and 29.4% gains in terms of the total successful transmission probability

compared to the Q-learning with data correlation and Q-learning without data correlation for a

network with 9 SBSs. This is because the ESN-based transfer RL approach can record historical

information related to the users’ data correlation and content request distribution so as to ﬁnd

the optimal resource block allocation policy.

In Fig. 6, we show how the total successful transmission probability changes as the number of

users varies. Fig. 6 shows that, as the number of users increases, the total successful transmission

probability of all considered algorithms increases. This implies that, as the number of users

increases, the SBSs have more choices of users to service. Fig. 6 also shows that, as the number

of users increases, the ESN-based algorithm can achieve more gain in terms of total successful

transmission probability compared to the Q-learning with data correlation. The reason behind this

is that the ESN-based transfer RL algorithm uses an approximation method to record historical

information while Q-learning uses a Q-table to record the historical information. In consequence,

 
 
 
23

ESN-based transfer RL algorithm
ESN without data correlation
Q-learning with data correlation
Q-learning without data correlation

16

14

12

10

8

6

5

10
20
15
Backhaul data rate (Gbits/s)

25

y
t
i
l
i

b
a
b
o
r
p
n
o
s
s
m
s
n
a
r
t

i

i

l

u

f
s
s
e
c
c
u
s

l

t

a
o
T

Fig. 7. Total successful transmission probability as the backhaul data rate varies.

the ESN-based transfer RL algorithm can record more historical information compared to Q-

learning and, hence, it can accurately predict the total successful transmission probability. Fig.

6 also shows that, as the number of users increases, the gap between Q-learning with data

correlation and Q-learning without data correlation increases. The main reason behind this is

that, as the number of users increases, the probability that the users request the same content

increases and, hence, the data correlation among the users increases.

Fig. 7 shows how the total successful transmission probability changes as the total data rate

of the backhaul varies. From Fig. 7, we can see that, as the data rate of the backhaul increases,

the total successful transmission probability of all considered algorithms increases. This implies

that as the data rate of backhaul increases, the transmission delay over backhaul links decreases.

Fig. 7 also shows that the gap between the proposed ESN-based transfer RL algorithm and

Q-learning with data correlation decreases. This is due to the fact that, as the data rate of the

backhaul increases, the data rate of each user for content transmission increases. In consequence,

the effect of using data correlation to reduce the data trafﬁc over backhaul links decreases.

In Fig. 8, we show the cumulative distribution function (CDF) for the total successful trans-

mission probability resulting from all of the considered algorithms. Fig. 8 shows that the ESN-

based transfer RL algorithm improves the CDF of by to 45% and 56% compared, respectively,

 
 
 
24

ESN-based transfer RL algorithm
ESN without data correlation
Q-learning with data correlation
Q-learning without data correlation

0.1 

0.05
0.9 
0.3 
Successful transmission probability

0.5 

1   

1

0.8

0.6

0.4

0.2

F
D
C

0
0.01

Fig. 8. CDFs of the delay resulting from the different algorithms.

to Q-learning with data correlation and Q-learning without data correlation at a successful

transmission probability of 0.5. These gains stem from the fact that the proposed ESN-based

transfer RL algorithm can record more historical information related to the states of the network

and users compared to Q-learning. Moreover, the ESN-based transfer RL algorithm can transfer

the resource allocation schemes that have been learned in the previous period for the new resource

allocation schemes that must be learned in the next period. In consequence, the proposed ESN-

based transfer RL algorithm can predict the successful transmission probability more accurately

compared to Q-learning and ﬁnd a better solution for the successful transmission probability

maximization.

In Fig. 9, we show how the data correlations of uplink tracking information and downlink

VR contents of user i change as the number of VR users varies. In this ﬁgure, user i is

randomly choosen from the network. The uplink data correlation is σmax

i

= max

k∈Uj,k6=i

(σik),

which represents the maximum covariance for each user i. The downlink data correlation is
(−1)n−1Ca, which represents the data correlation among the users that request

Uja −

Uja

content a. For uplink, we consider the data correlation between only two users while for

n=2
P

Ca∈Cn
a
P

downlink, we consider the data correlation among multiple VR users. From this ﬁgure, we

can see that, as the number of users increases, both the data correlations over uplink and

 
25

Downlink
Uplink

20

25
Number of users

30

35

6

5

4

3

2

1

n
o

i
t

l

a
e
r
r
o
c

t

a
a
D

0
15

Fig. 9. Data correlation as the number of users varies.

downlink increase. An increase in uplink data correlation is because the distance between two

users decreases and the maximum covariance increases as the number of users increases. An

increase in downlink data correlation is due to the fact that the number of users that request the

same contents increases. Fig. 9 also shows that the value of uplink data correlation is below 1

while the downlink data correlation is larger than 1. This is due to the fact that, in uplink, the

data correlation is considered between only two users. However, in downlink, the data correlation

is considered among multiple users.

Fig. 10 shows how the transmission format of a given content a changes as the data size

of visible contents that the cloud needs to transmit to an SBS varies. Here, the change of the

data size of visible contents indicates the change of the data correlation among the users that

request content a. From Fig. 10, we can see that, as the data size of visible contents does not

exceed 50 Mbits, the cloud will transmit visible contents that are extracted from 360◦ content a

to the SBS. In contrast, when the data size of visible contents exceeds 50 Mbits, the cloud will

transmit 360◦ content a to the SBS. This is because the cloud will always transmit the content

that has a smaller data size. Fig. 10 also shows that, for the Q-learning algorithm without data

correlation, the cloud will always transmit 360◦ contents to the SBS. This is because, for the

Q-learning algorithm without data correlation, the cloud will not consider the data correlation

 
26

ESN-based transfer RL algorithm
ESN without data correlation
Q-learning with data correlation
Q-learning without data correlation

30

40
Data size of a visible content a 

50

60

450

°)

(

a

t

t

n
e
n
o
c

a

f

o

t

a
m
r
o

f

i

i

n
o
s
s
m
s
n
a
r
T

400

350

300

250

200

150

20

Fig. 10. Transmission format of a given content as the data size of the visible contents that the cloud needs to transmit varies.

r
e
s
u

r
e
p

y
t
i
l
i

b
a
b
o
r
p

i

i

n
o
s
s
m
s
n
a
r
t

ESN-based transfer RL algorithm
ESN without data correlation
Q-learning with data correlation
Q-learning without data correlation

0.85

0.8

0.75

0.7

0.65

l

u
f
s
s
e
c
c
u
S

0.6

1

2
4
3
Maximum covariance  max

5

Fig. 11. Successful transmission probability per user as σmax varies.

among the users.

In Fig. 11, we show how the successful transmission probability per user varies as the uplink

maximum covariance σmax changes. Here, an increase in σmax indicates that the maximum uplink

data correlation decreases. In contrast, an increase in σmax indicates that the maximum uplink

 
 
 
 
 
 
 
 
 
 
7

6

5

4

3

2

1

0

1

27

ESN-based transfer RL algorithm
Q-learning with data correlation
Convergence point

2

3

Period n

y
t
i
l
i

b
a
b
o
r
p
n
o
s
s
m
s
n
a
r
t

i

i

l

u

f
s
s
e
c
c
u
s

l

t

a
o
T

Fig. 12. Convergence of learning algorithms.

data correlation increases. From Fig. 11, we can see that, as σmax increases (the maximum uplink

data correlation decreases), the successful transmission probability per user resulting from all of

the considered algorithms decreases. This is due to the fact that, as σmax increases, the data size of

the tracking information that the users needs to transmit to the SBS increases. In consequence,

the delay of the transmitting tracking information increases. Fig. 11 also shows that the gap

between the Q-learning with data correlation and Q-learning without data correlation decreases

because, as σmax continues to increase, the data correlation of tracking information decreases.

In Fig. 12, we show the number of iterations needed for convergence as period n changes.

In this ﬁgure, the users’ data correlation and content request distribution change with period

n. The convergence point indicates that each SBS ﬁnds its optimal resource allocation vector

during each period and the total successful transmission probability of all users associated with

this SBS is maximized. From Fig. 12, we can see that the successful transmission probability

per SBS for all considered algorithms increases and, then, converges as time elapses. We can

also see that the proposed ESN-based transfer RL algorithm needs 33% less iterations to reach

convergence compared to Q-learning with data correlation at period 3. Meanwhile, the proposed

algorithm at period 3 uses 33% less iterations to reach convergence compared to the proposed

algorithm at period 1. These gains are due to the fact that the proposed ESN-based transfer RL

 
 
 
28

ESN-based transfer RL algorithm
ESN without data correlation
Q-learning with data correlation
Q-learning without data correlation

900

850

800

750

700

s
n
o

i
t

a
r
e

t
i

f

o
r
e
b
m
u
N

1

3

5
Period n

7

9

Fig. 13. Number of iterations needed for convergence as period varies.

algorithm can use the already learned successful transmission probability for learning the new

successful transmission probability thus increasing the learning speed.

Fig. 13 shows how the number of iterations changes as the period varies. From Fig. 13,

we can see that, as the period increases, the number of iterations needed for convergence of

the Q-learning with data correlation and Q-learning without data correlation do not change

signiﬁcantly. However, the number of iterations needed for the convergence of the proposed

algorithm decreases as the period increases. Fig. 13 also shows that the proposed algorithm

can achieve up to 9.6% and 14.3% gains in terms of the number of iterations needed for

convergence compared to the Q-learning with data correlation and Q-learning without data

correlation schemes, during period 9. This is due to the fact that, as the period changes, the

content request distribution of each user changes. Hence, the data correlation among the users

will change and each SBS needs to retrain the Q-learning algorithms so as to ﬁnd the optimal

resource allocation. However, the proposed transfer learning algorithm can directly build the

relationship between the actions, states and utility values via transferring the information that

was already learned in previous periods. Fig. 13 also shows that the number of iterations needed

for the convergence of the Q-learning with data correlation is larger than for the Q-learning

without data correlation. Meanwhile, the number of iterations needed for the convergence of the

 
 
29

Q-learning without data correlation changes slightly as the period changes. This is because the

Q-learning without data correlation does not consider the data correlation among the users.

V. CONCLUSION

In this paper, we have studied the problem of resource management in a network of VR

users whose data can be correlated. We have formulated this data correlation-aware resource

management problem as an optimization problem whose goal is to maximize the VR users’

successful transmission probability. To solve this problem, we have developed a neural network

reinforcement learning algorithm that uses echo state networks along with transfer learning to ﬁnd

the most suitable resource block allocations. We have then shown that, by using transfer learning,

the proposed algorithm can exploit VR user data correlation to intelligently ﬁnd the optimal

resource allocation strategy as the VR users’ content request distribution and data correlation

change. Simulation results have evaluated the performance of the proposed approach and shown

considerable gains, in terms of total successful transmission probability compared to a classical

Q-learning algorithm. Future work can consider additional delay components, such as those

related to handover and user association.

A. Proof of Theorem 1

APPENDIX

To simplify the proof, we use s, v, DU

ijt, and Dijt. For i), the
gain that stems from an increase in the allocated uplink resource blocks, ∆Pi can be given by:

t , and Dt to refer to sij, vij, DU

∆Pi = Pi (s, v + ∆v) − Pi (s, v)

=

1
T

T

t=1
X

T

1
T

t=1
X
t (v, σmax
i

1{Dt(s,gjait)+DU

t (v+∆v,σmax

i

)≤γD} −

1{Dt(s,gjait)+DU

t (v,σmax

i

)≤γD}.

(19)

From (19), we note that DU

t (v + ∆v, σmax

i

) ≤ DU

). This is due to the fact that SBS j

allocates more uplink resource blocks ∆v to user i and, hence, the total delay of user i decreases.

From (19), we can see that,

∆Pi = 0, if Dt (s, gjait) + DU

t (v, σmax

i

) ≤ γD.

(20)

The is because as Dt (s, gjait) + DU
consequence, as Dt(s, gjait) + DU

t (v, σmax

i

t (v, σmax

i

) ≤ γD, Dt(s, gjait)+DU

t (v+∆v, σmax

i

30

) ≤ γD. In

) ≤ γD, ∆Pi = 0. From (23), we can also see that,

∆Pi = 0, if Dt(s, gjait)+DU

t (v+ ∆v, σmax

i

) > γD.

(21)

This is because as Dt(s, gjait)+DU
as Dt (s, gjait) + DU
t (v + ∆v, σmax
i
γD and Dt(s, gjait) + DU
t (v, σmax

i

t (v+∆v, σmax

i

) > γD, then Dt(s, gjait)+DU

) > γD, ∆Pi = 0. Finally, as Dt (s, gjait)+DU
) > γD, ∆Pi will be given by:

i

t (v, σmax

). Hence,
t (v + ∆v, σmax

i

) ≤

∆Pi =

1
T

1{Dt(s+∆s,gjait)+DU

t (v,σmax

i

)≤γD},

T

t=1
X
T

(a)
=

1
T

1

t=1
X

(

Ki(σmax
γD −Dt(s,gjait)

)

i

−cij(∆v)6cij(vij )<

where (a) is obtained from the fact that, when Dt (s, gjait) + DU
t (v, σmax

Ki(σmax
−cij (∆v). Similarly, as Dt(s, gjait)+DU
γD−Dt(s,gjait)
The proof of case ii) is similar to the proof of case i).

)

i

i

(22)

,

i

)

Ki(σmax
γD −Dt(s,gjait))
t (v + ∆v, σmax
) > γD and cij (v) <

i

) ≤ γD, cij (v) >

Ki(σmax
γD−Dt(s,gjait)

)

i

.

For case iii), we ﬁrst need to determine the size of visible and 360◦ contents. If M (120◦) <

M (360◦), the gain due to the change of content transmission format, gja can be given by:

T

t=1
X

∆Pi =

1
T

1{Dt(s,120◦)+DU

t (v,σmax

i

)≤γD} −

1
T

1{Dt(s,360◦)+DU

t (v,σmax

i

)≤γD}.

(23)

Here, since M (120◦) < M (360◦), then Dt (s, 360◦) > Dt(s, 120◦). In consequence, when
Dt (s, 360◦) + DU

) ≤ γD, Dt(s, 120◦) + DU

) < γD. Hence,

t (v, σmax

t (v, σmax

i

i

T

t=1
X

1{Dt(s,360◦)+DU

t (v,σmax

i

)≤γD} − 1{Dt(s,120◦)+DU

t (v,σmax

i

)≤γD} = 0.

(24)

Similarly, If Dt(s, 120◦) + DU

t (v, σmax

i

) > γD, then Dt (s, 360◦) + DU

t (v, σmax

i

) > γD. Hence,

1{Dt(s,360◦)+DU

t (v,σmax

i

)≤γD} − 1{Dt(s,120◦)+DU

t (v,σmax

i

)≤γD} = 0.

(25)

Finally, if Dt(s, 120◦) + DU

t (v, σmax

i

) 6 γD and Dt (s, 360◦) + DU

t (v, σmax

i

) > γD, then ∆Pi

can be given by:

∆Pi =

1
T

T

t=1
X

1{Dt(s,120◦)+DU

t (v,σmax

i

)≤γD} =

1
T

T

t=1
X

1

M (120◦)6

γD−

(cid:26)

(cid:18)

G120◦
cij (s) −DU

t (v,σmax

i

,

(26)

)

V B
i

(cid:19)

(cid:27)

(26) is hold as Dt (s, 360◦) + DU
) > γD. In consequence, M (360◦) will be larger than
t (v, σmax
γD − G120◦
V B
i . We can use the same method to prove the case as M (120◦) >
(cid:17)
(cid:16)
M (360◦). When M (120◦) = M (360◦), we can obtain that

cij (s) − DU

t (v, σmax

)

i

i

31

1{Dt(s,360◦)+DU

t (v,σmax

i

)≤γD} − 1{Dt(s,120◦)+DU

t (v,σmax

i

)≤γD} = 0.

(27)

Therefore, ∆Pi = 0. This completes the proof.

B. Proof of Theorem 2

To prove Theorem 2, we must ﬁrst calculate the data size La (Ca) of visible contents extracted

from 360◦ content a using an enumeration method. Let Uja = 2. If users i and j that are associated

with SBS j request visible contents ai and aj, respectively, the set of the data correlation between

these two users is Caik. This means that users i and k have Caik portion of visible content that

is similar. In consequence, when the cloud transmits visible contents ai and aj to SBS j, the

size of the data that the cloud needs to transmit is given by:

La (Ca) = G120◦ (Uja−Caik) = G120◦

Uja−



,

(28)

XCa∈C2

a

Ca


where Ca = C2

a = {Caik}. Similarly, if users i, j, and k that are associated with SBS j request
visible contents ai, aj, and ak, respectively, (Uja = 3), the size of the data that the cloud needs



to transmit can be given by:

La (Ca) = G120◦ (Uja−Caik −Caij − Cajk + Caijk) = G120◦

where Ca = C2

a with C2
Uja = 4, the cloud needs to transmit is given by:

a = {Caik, Caij, Cajk} and C3

a ∩ C3

Uja−

Ca+

,

(29)

XCa∈C2

a

XCa∈C3

a

Ca


a = {Caijk} . We can also see that if





La (Ca) = G120◦

Uja −





Ca+

Ca −

XCa∈C2

a

XCa∈C3

a

XCa∈C4

a

Ca


Uja

,

(30)

where Ca = C2

a∩C3

a∩C4

a. Hence, we can obtain that La (Ca) = G120◦

Uja −

!
The cloud will select the content transmission format that can minimize the size of the data

Ca∈Cn
a
P

n=2
P

(−1)n−1Ca

.

transmitted over cloud-SBS links. In consequence, if G360◦ > La (Ca), the cloud will transmit
visible contents that are extracted from 360◦ content a, G360◦ 6 La (Ca), otherwise. This

completes the proof.

 
32

REFERENCES

[1] M. Chen, W. Saad, C. Yin, and M. Debbah, “Echo state transfer learning for data correlation aware resource allocation in
wireless virtual reality,” in Proc. of Asilomar Conference on Signals, Systems and Computers, Paciﬁc Grove, CA, USA,
Oct. 2017.

[2] E. Ba¸stu˘g, M. Bennis, M. Médard, and M. Debbah, “Towards interconnected virtual reality: Opportunities, challenges and

enablers,” IEEE Communications Magazine, vol. 55, no. 6, pp. 110–117, Jan. 2017.

[3] P. Rosedale, “Virtual reality: The next disruptor: A new kind of worldwide communication,” IEEE Consumer Electronics

Magazine, vol. 6, no. 1, pp. 48–50, Jan. 2017.

[4] J. Ahn, Y. Yong Kim, and R. Y. Kim, “Delay oriented VR mode WLAN for efﬁcient wireless multi-user virtual reality

device,” in Proc. of IEEE International Conference on Consumer Electronics, Las Vegas, NV, USA, March 2017.

[5] M. Singh and B. Jung, “High-deﬁnition wireless personal area tracking using AC magnetic ﬁeld for virtual reality,” in

Proc. of IEEE Virtual Reality, Los Angeles, California, USA, March 2017.

[6] J. Chakareski, “VR/AR immersive communication: Caching, edge computing, and transmission trade-offs,” in Proc. of

the Workshop on Virtual Reality and Augmented Reality Network, Los Angeles, CA, USA, Aug. 2017.

[7] M. Chen, W. Saad, and C. Yin, “Virtual reality over wireless networks: Quality-of-service model and learning-based

resource management,” IEEE Transactions on Communications, to appear, 2018.

[8] A. Taleb Zadeh Kasgari, W. Saad, and M. Debbah, “Human-in-the-loop wireless communications: Machine learning and

brain-aware resource management,” arXiv preprint arXiv:1804.00209, March 2018.

[9] J. Park and M. Bennis, “URLLC-eMBB slicing to support VR multimodal perceptions over wireless cellular systems,”

available online: arxiv.org/abs/1805.00142, May 2018.

[10] Y. Sun, Z. Chen, M. Tao, and H. Liu, “Communication, computing and caching for mobile VR delivery: Modeling and

trade-off,” arXiv preprint arXiv:1804.10335, April 2018.

[11] X. Yang, Z. Chen, K. Li, Y. Sun, N. Liu, W. Xie, and Y. Zhao, “Communication-constrained mobile edge computing
systems for wireless virtual reality: Scheduling and tradeoff,” IEEE Access, vol. 6, pp. 16665–16677, March 2018.
[12] M. S. Elbamby, C. Perfecto, M. Bennis, and K. Doppler, “Edge computing meets millimeter-wave enabled VR: Paving
the way to cutting the cord,” in Proc. of IEEE Wireless Communications and Networking Conference, Barcelona, Spain,
April 2018.

[13] S. J. Pan and Q. Yang, “A survey on transfer learning,” IEEE Transactions on Knowledge and Data Engineering, vol. 22,

no. 10, pp. 1345–1359, Oct 2010.

[14] M. Chen, U. Challita, W. Saad, C. Yin, and M. Debbah, “Machine learning for wireless networks with artiﬁcial intelligence:

A tutorial on neural networks,” available online: arxiv.org/abs/1710.02913, Oct. 2017.

[15] HTC, “HTC vive,” https://www.vive.com/us/.
[16] Z. Yang, C. Pan, Y. Pan, Y. Wu, W. Xu, M. Shikh-Bahaei, and M. Chen, “Cache placement in two-tier HetNets with
limited storage capacity: Cache or buffer?,” IEEE Transactions on Communications, vol. 66, no. 11, pp. 5415–5429, Nov.
2018.

[17] C. Wu, Z. Tan, Z. Wang, and S. Yang, “A dataset for exploring user behaviors in VR spherical video streaming,” in Proc.

of the ACM on Multimedia Systems Conference, New York, NY, USA, 2017.

[18] N. Cressie and C. K. Wikle, Statistics for Spatio-Temporal Data, John Wiley & Sons, 2015.
[19] C. M. Bishop and N. M. Nasrabadi, Pattern Recognition and Machine Learning, Springer„ 2006.
[20] M. C. Vuran, O. B. Akan, and I. F. Akyildiz, “Spatio-temporal correlation: theory and applications for wireless sensor

networks,” Computer Networks, vol. 45, no. 3, pp. 245–259, June 2004.

[21] K. Hamidouche, W. Saad, and M. Debbah, “Popular matching games for correlation-aware resource allocation in the

internet of things,” in Proc. of IEEE Global Communications Conference, Singapore, Dec 2017.

[22] Z. Zhao, M. Peng, Z. Ding, W. Wang, and H. V. Poor, “Cluster content caching: An energy-efﬁcient approach to improve
quality of service in cloud radio access networks,” IEEE Journal on Selected Areas in Communications, vol. 34, no. 5,
pp. 1207–1221, May 2016.
I. Szita, V. Gyenes, and A. L˝orincz, “Reinforcement learning with echo state networks,” Lecture Notes in Computer
Science, vol. 4131, pp. 830–839, 2006.

[23]

[24] M. Chen, M. Mozaffari, W. Saad, C. Yin, M. Debbah, and C. S. Hong, “Caching in the sky: Proactive deployment
of cache-enabled unmanned aerial vehicles for optimized quality-of-experience,” IEEE Journal on Selected Areas on
Communications (JSAC), vol. 35, no. 5, pp. 1046–1061, May 2017.

[25] M. Luko˘sevicius, A Practical Guide to Applying Echo State Networks, Springer Berlin Heidelberg, 2012.
[26] M. Chu, H. Li, X. Liao, and S. Cui, “Reinforcement learning based multi-access control and battery prediction with energy

harvesting in IoT systems,” arXiv preprint arXiv:1805.05929, May 2018.

[27] M. Bennis and D. Niyato, “A Q-learning based approach to interference avoidance in self-organized femtocell networks,”
in Proc. of IEEE Global Commun. Conference (GLOBECOM) Workshop on Femtocell Networks, Miami, FL, USA, Dec.
2010.

[28] U. Challita, L. Dong, and W. Saad, “Proactive resource management for LTE in unlicensed spectrum: A deep learning

perspective,” IEEE Transactions on Wireless Communications, vol. 17, no. 7, pp. 4674–4689, July 2018.

[29] Z. Yang, C. Pan, W. Xu, Y. Pan, M. Chen, and M. Elkashlan, “Power control for multi-cell networks with non-orthogonal

multiple access,” IEEE Transactions on Wireless Communications, vol. 17, no. 2, pp. 927–942, Feb 2018.

[30] 3GPP, “Evolved Universal Terrestrial Radio Access (E-UTRA); Further advancements for E-UTRA physical layer aspects,”

Technical Report (TR) 36.814, 3rd Generation Partnership Project (3GPP), 03 2017, Version 9.2.0.

[31] M. Mozaffari, W. Saad, M. Bennis, and M. Debbah,

“Unmanned aerial vehicle with underlaid device-to-device
communications: Performance and tradeoffs,” IEEE Transactions on Wireless Communications, vol. 15, no. 6, pp. 3949–
3963, June 2016.

