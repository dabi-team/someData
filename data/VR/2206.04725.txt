2
2
0
2

n
u
J

9

]
T
A
.
h
t
a
m

[

1
v
5
2
7
4
0
.
6
0
2
2
:
v
i
X
r
a

Manuscript submitted to AIMS Journal

doi:10.3934/xx.xxxxxxx

PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR
FILTRATIONS REVEALS TOPOLOGICAL CONVERGENCE OF
PAGERANK

Minh Quang Le∗ and Dane Taylor∗
Department of Mathematics
University at Buﬀalo, State University of New York
USA

(Communicated by the associate editor name)

Abstract. Graph-based representations of point-cloud data are widely used
in data science and machine learning, including (cid:15)-graphs that contain edges
between pairs of data points that are nearer than (cid:15) and kNN-graphs that con-
nect each point to its k nearest neighbors. Recently, topological data analysis
has emerged as a family of mathematical and computational techniques to in-
vestigate topological features of data using simplicial complexes. These are a
higher-order generalization of graphs and many techniques such as Vietoris-
Rips (VR) ﬁltrations are also parameterized by a distance (cid:15). Here, we develop
kNN complexes as a generalization of kNN graphs, leading to kNN-based per-
sistent homology techniques for which we develop stability and convergence
results. We apply this technique to characterize the convergence properties
PageRank, highlighting how the perspective of discrete topology complements
traditional geometrical-based analyses of convergence. Speciﬁcally, we show
that convergence of relative positions (i.e., ranks) is captured by kNN persis-
tent homology, whereas persistent homology with VR ﬁltrations coincides with
vector-norm convergence. Beyond PageRank, kNN-based persistent homology
is expected to be useful to other data-science applications in which the relative
positioning of data points is more important than their precise locations.

1. Introduction. Topological data analysis (TDA) is a rapidly growing ﬁeld of
applied mathematics in which techniques from computational and applied topology
are applied to extract structural information about the “shape” of data. TDA has
been applied to numerous contexts ranging from visualization and dimensionality
reduction [6, 23] and time series analyses [32] to applications in cosmology [37, 40],
physical processes over networks [25, 38, 22, 21], neuroscience [33, 13, 8, 30], and
systems biology [35, 26, 19, 18]. One of the main tools is the study of persistent ho-
mology, which can eﬀectively reveal multiscale topological properties of data. This
approach relies on examining how the homology of a topological space evolves as
one applies a ﬁltration, which is one of the basic notions in topology. There are
many types of ﬁltrations [1, 34, 17, 7, 12], however we will focus on the widely used

2020 Mathematics Subject Classiﬁcation. Primary: 58F15, 58F17; Secondary: 53C35.
Key words and phrases. Bottleneck distance, stability theorem, kNN ﬁltration, kNN-preserving

transformation.

The ﬁrst author is supported by NSF grant xx-xxxx.

1

 
 
 
 
 
 
2

MINH QUANG LE AND DANE TAYLOR

Figure 1. Visualizations of simplicial complexes and graphs re-
sulting from (A) a Vietoris-Rips (VR) ﬁltration and (B) our pro-
posed k-nearest-neighbor (kNN) ﬁltration. As shown in the second
column, VR ﬁltrations are parameterized by the radius (cid:15) of (cid:15)-balls
that are centered at the points, whereas kNN ﬁltrations are param-
eterized by the number k of nearest neighbors. (Dotted lines depict
the nearest-neighbor orderings for node i = 4.) The third column
depicts simplicial complexes that are obtained at some (cid:15) and k.
The fourth columns shows their 1-skeletons, which are graphs in
which k-simplices of k > 1 are discarded.

Vietoris-Rips (VR) ﬁltration [10].
In general, diﬀerent ﬁltrations reveal comple-
mentary insights, and it is important to develop additional ﬁltrations that cater to
diﬀerent applications.

In the prototypical setting, one aims to construct and study empirical topolog-
ical features for a set of data points, or point cloud. The approach involves using
points to construct a ﬁltered topological space, which is often represented by a sim-
plicial complex in which the data points are 0-simplices, and higher-dimensional
k-simplices are constructed via some set of rules. Often, k-simplices are added ac-
cording to the pairwise distances between 0-simplices. As an example, in Fig. 1(A),
we visualize one of the most commonly studied point-cloud ﬁltrations, the Vietoris-
Rips (VR) ﬁltration. As shown, VR ﬁltrations are constructed by considering sim-
plicial complexes in which k-simplices are added between 0-simplices that are less
that (cid:15) > 0 distance apart.

In Fig. 1(B), we illustrate a diﬀerent ﬁltration that we develop in this paper: kNN
ﬁltrations, whereby k-simplices are created according to k-nearest-neighbor sets. We
note that while (cid:15) and kNN graphs are both very prevalent in the data-science and
machine-learning literatures, TDA methods largely focus on (cid:15)-based simplicial com-
plexes and ﬁltrations, thereby limiting their potential utility to new applications.
We develop kNN-based simplicial complexes as a generalization of kNN graphs, al-
lowing us to develop kNN-based TDA methods including kNN persistent homology.
We formulate and study persistent homology under kNN ﬁltrations, constructing
persistence diagrams and studying their robustness properties. We also deﬁne and
study several local version of kNN complexes, ﬁltrations, and persistent homology.
By constructing ﬁltrations using discrete sets, our approach relies on discrete topol-
ogy, thereby contrasting approaches that are tied to continuous topological spaces

1st NN5th NN4th NN2nd3rd NN(A)(B)Point CloudsFiltrationsSimplicial Complexes1-Skeletons (i.e., Graphs)012345012345PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

3

Figure 2.
proximate PageRank values xi(t)

(left) An example graph. (right) Convergence of ap-

πi with t iterations.

→

Nodes Ri(0) Ri(1) Ri(2) Ri(3) Ri(4) Ri(5) Ri(6) Ri(7) Ri(8) Ri(9) Ri(∞)
4
i = 0
2
i = 1
3
i = 2
5
i = 3
1
i = 4

4
3
2
5
1

4
2
3
5
1

4
2
3
5
1

4
3
2
5
1

4
3
2
5
1

4
2
3
5
1

4
3
1
5
2

1
4
3
5
2

4
1
3
5
2

5
4
3
2
1

Table 1. The relative orderings (i.e., node ranks Ri(t)) converge
9. For each t, we indicate the top-ranked node by Ri(t) = 1.
at t

≥

[20]. In addition, we further analyze and explore homological features for converg-
ing sequences of point sets, exploring how the convergence of persistent diagrams
for kNN ﬁltrations contrasts that for VR ﬁltrations.

We apply kNN persistent homology to study the ranking of nodes in graphs, and
in particular, we study the convergence of rankings given by approximate PageRank
values that are obtained by the power iteration method. Our work establishes a
new connection between TDA and PageRank, and provides a topological approach
for determining how many iterations are required for the node rankings to conver-
gence. We visualize this application and motivation in Fig. 2. In this application,
approximate PageRank values xi(t)
πi asymptotically converge to their ﬁnal val-
→
π
exponentially decays. However, as highlighted
ues and the normed error
||
in Table 1, the orderings (i.e., node ranks) according to xi(t) values converge after
only t = 9 iterations, even though
> 0 for all t. We apply kNN-based
−
persistent homology to study of convergence for these relative orderings, which is
a property that is crucial to PageRank and which is not revealed through VR ﬁl-
trations. Although we focus here on PageRank, we expect kNN-based TDA to be
widely useful to other applications in which the relative positioning of points—as
opposed to the precise locations—is a property of main interest.

x(t)

x(t)

−

π

||

||

||

This paper is organized as follows. We provide background information in Sec. 2
and our main ﬁndings in Sec. 3. In Sec. 4, we apply this approach to study conver-
gence for the PageRank algorithm. We provide a discussion in Sec. 5.

2. Background information. In Sec. 2.1, we discuss simplicial complexes that
In Sec. 2.2, we deﬁne homology and persistent
are derived from point clouds.
homology for simplicial complexes. In Sec. 2.3, we discuss the notions of stability
and convergence for persistence diagrams.

01234012345678910iteration, t0.100.150.200.250.30approximate PageRank ,xi(t)Node 0Node 1Node 2Node 3Node 44

MINH QUANG LE AND DANE TAYLOR

2.1. Simplicial complexes derived from point clouds.

2.1.1. Simplicial complexes. We will deﬁne simplicial complexes in a geometric way
by considering a set of points, or “point cloud” [36]. Consider a ﬁnite set
=
) in a p-dimensional
yi} ∈
}
{
space that we equip with the Euclidean metric.

Rp of N points (which we enumerate i

1, . . . , N

∈ V

=

Y

{

Deﬁnition 2.1 (Euclidean Metric Space). Let Rp be the set of all ordered p-tuples,
or vectors, over the real numbers and d : Rp

Rp be the Euclidean metric

d(x, y) =

x

||

y

||2 =

−

(xi −

yi)2,

×
(cid:118)
(cid:117)
(cid:117)
(cid:116)

p
(cid:88)

i=1

where x = (x1, .., xp), y = (y1, .., yp)
by (Rp, d).

∈

Rp. Then the Euclidean metric space is given

To facilitate later discussion, it is also helpful to deﬁne the following distance-

related concepts.

Deﬁnition 2.2 (Euclidean Ball, or (cid:15)-ball). A p-dimensional Euclidean ball
centered at x with radius (cid:15) is deﬁned by

B(cid:15)(x)

B(cid:15)(x) =

y

{

∈

Rp : d(x, y)

(cid:15)

≤
}
yi}i
{

Rp be a ﬁnite set of
Deﬁnition 2.3 (Pairwise-Distance Map). Let
N points in a Euclidean metric space (Rp, d). Then we deﬁne the “pairwise-distance
to encode the distances between all pairs of points so that
map” f :
+ for each row i of matrix
fij(
Y
[fij] by fi :

) = d(yi, yj). We similarly deﬁne a map fi :

)]j = fij(

+ so that [fi(

∈V ⊂

Y →

Y →

RN
+

RN

RN

=

Y

).

N

×

Y →

Y

Y

}

S

Y

=

yi}
V

1, . . . , N
{

=
{
k is deﬁned by a subset of

Given a point-cloud, we deﬁne a simplicial complex as a collection of k-simplices
. A k-dimensional
of vertices with locations
involving a set
V
simplex—or simply k-simplex—
having cardinality
k +1. For example, each 0-simplex is a vertex, each 1-simplex is an edge, 2-simplices
are informally “triangles” that must be deﬁned using k+1 = 3 vertices. Because the
vertices are spatially embedded in Rp, each k-simplex is a k-dimensional geometrical
1)-dimensional faces, which can be
object. It is then natural to consider their (k
deﬁned as follows. A face of a k-simplex Sk is a subset of Sk with cardinality k,
i.e , with one of the elements of Sk omitted. If Sk
is a face of simplex Sk, then
f
1
Sk is called coface of Sk
. For example, the 0-simplices at the start and end of a
f
1-simplex are its faces, and the set of 1-simplices that are adjacent to a 0-simplex
are its cofaces.

−

−

−

1

∈

A simplicial complex X is a collection of k-simplices with the property that if
Sk
X, then all the faces of Sk are also members of X. The notions of face
and coface can also be extended to abstract simplicial complexes that lack spatial
coordinates, and one can also deﬁne connections between k-simplices of the same
dimension by considering if their faces and cofaces overlap. Two k-simplices Sk
i and
Sk
j are said to be lower adjacent if they have a common face, and they are upper
adjacent if they are both faces of a common (k + 1)-simplex. For any Sk
X we
deﬁne its degree, denote by deg(Sk), to be the number of cofaces of Sk. We use X k
to denote the subset of k-simplices in X.

⊂

PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

5

≤

Note that a graph, while typically deﬁned via two sets (vertices, edges), can also
be interpreted as a 1-dimensional abstract simplicial complex, since it contains k-
simplices of dimension k
1. Moreover, for any simplicial complex, one can obtain
an associated graph that is its 1-skeleton, whereby one discards any k-simplices
of dimension k > 1. More generally, a κ-skeleton of a simplicial complex X can
be obtained by discarding all k-simplices of dimension k > κ. Thus, a simplicial
complex can be understood as a generalization of a graph that allows for higher-
order relationships between vertices. To emphasize this connection, we will make no
distinction between 1-simplices in a simplical complex X and the edges of a graph,
and we will refer to them interchangeably.

Y

2.1.2. Two simplicial complexes based on (cid:15). There are many ways in which one can
construct a set of simplices involving the vertices
associated with a given a set
V
Rp. Most approaches stem from considering (cid:15)-balls centered
=
of points
yi} ∈
{
at the points
. Here, we present two closely related simplicial complexes that are
Y
parameterized by a distance threshold (cid:15) and are often motivated by the assumption
that the point cloud lies on a low-dimensional manifold.
Deﬁnition 2.4 ( ˇCech Complex [4]). Given a collection of points
the ˇCech complex,
determined by the unordered (k + 1)-tuples of points
{
ball neighborhoods have a point of common intersection.

Rp,
yi}
{
C(cid:15), is the abstract simplicial complex whose k-simplices are
k+1
i=1 whose closed ((cid:15)/2)-

N
i=1 ∈

yi}

=

Y

The Vietoris-Rips (VR) complex is closely related and is deﬁned as follows.

N
i=1 ∈

Deﬁnition 2.5 (Vietoris-Rips Complex [2]). Given a collection of points
yi}
{
simplices correspond to unordered (k + 1)-tuples of points C =
pairwise distance satisfy

=
R(cid:15), is the abstract simplicial complex whose k-
i=1 ∈ R(cid:15) whose
C.

Rp, the Rips complex,

yi}
{

k+1

Y

yi −
||

yj||2 ≤

(cid:15) for any yi, yj ∈

Y

Notably, ˇCech complexes are sometimes preferred over VR complexes because of
their relation to the a continuous topological space that is associated with unions
of (cid:15)-balls, as established in the following Theorem.
Theorem 2.6 ( ˇCech theorem [20]). The ˇCech theorem (or, equivalently, the
“Nerve theorem”) states that a ˇCech complex
C(cid:15) has the homotopy type of the union
.
of closed ((cid:15)/2)-balls about the point set
yi}
=
{

This result is somewhat surprising since a ˇCech complex

C(cid:15) is an abstract sim-
plicial complex, which is a discrete topological space of potentially high dimension.
In contrast, the union of closed ((cid:15)/2)-balls is a continuous topological space (i.e.,
subset of Rp), and so it is interesting that these two spaces have the same homotopy
type. While an identical relation has not been identiﬁed for VR complexes, it has
been shown that they are very closely related ˇCech complexes through the following
interleaving result.
Lemma 2.7 (Relation between ˇCech complex and Vietoris-Rips complex [20] ). For
any (cid:15) > 0, there is a chain of inclusion maps for ˇCech complexes and VR complexes
R(cid:15) ⊆ C(cid:15)√2 ⊆ R(cid:15)√2.
From a practical perspective, applications involving TDA often focus on VR
complexes because they are more computationally eﬃcient to compute than ˇCech
complexes. That is, it is easier to compute whether the distance between two points

6

MINH QUANG LE AND DANE TAYLOR

is less than (cid:15) versus check whether the intersection of (cid:15)-balls is nonempty. As such,
TDA methods based on VR complexes are very popular in applied settings, and we
will later conduct numerical experiments that use them as a baseline for comparison.
Given the relations between VR and ˇCech complexes and the unions of (cid:15)-balls, these
all may approximate the structure of a manifold, assuming all data points lie on
the manifold. Such an assumption, however, is not appropriate for every data set.
Before continuing, we note that simplicial complexes can be constructed in ways
that do not require a set of points. For example, one can construct abstract simpli-
cial complexes based on a given graph.

Deﬁnition 2.8 (Clique Complex [42]). The clique complex Cl(G) of an undi-
rected graph G = (
are vertices of G and
) is a simplicial complex where
each k-clique (i.e. a complete subgraph with k vertices) in G corresponds to a
(k

1)-simplex in Cl(G). More precisely, it is the simplicial complex

V

V

E

,

−

Cl(G) =

V ∪ E ∪
(cid:1)

(cid:19)

(cid:26)

(cid:18)σ
2
|

σ

⊆ E

(cid:27)

,

denotes the set of pairs that can be
where σ
obtained by selecting two 0-simplices from σ (which must be an edge in the graph).

∈ V × V

⊂ V

2

denotes a simplex and (cid:0)σ

It is worth noting that the 1-skeleton (i.e., 0-simplices and 1-simplices) of any
). That is, the construction

clique complex recovers its associated graph G = (
of a graph’s clique complex is an invertible transformation.

V

E

,

2.2. Homology and persistent homology. After representing a data set by a
simplicial complex, one can study its topological structure via its homology. To
obtain multiscale insights, it is also useful to study how that homology changes and
persists as one varies a parameter, such as a distance threshold (cid:15).

C

is a collection

N such that ∂k

∂k : Ck −→
{

2.2.1. Homology. We formulate homology by considering functions deﬁned over k-
simplices within a simplicial complex. A chain complex over a ﬁeld F is a tuple
N of vector spaces together with a collection ∂
(
; ∂) where
{Ck}k
C
∈
of F-linear maps
∂k = 0 for all integers
Ck
1 ◦
1}k
−
k. The maps ∂k are called boundary maps. The k-cycles of the complex are the
elements that are sent to zero by the map ∂k; the k-boundaries are the elements in
the image of ∂k+1. A map of chain complexes f : (C; ∂)
(C (cid:48); ∂(cid:48)) is a collection
fk for all natural
fk : Ck −→
1 ◦
{
numbers k .
The k-cycles form a vector space, and so do the k-boundaries; we denote these
vector spaces by Zk and Bk, respectively. The kth homology of a chain complex
(C, ∂) over a ﬁeld F is the quotient vector space

N of F-linear map such that fk

−→
∂k = ∂(cid:48)k ◦

Ck(cid:48)

}k

−

−

∈

∈

The number

Hk((C, ∂)) = Zk/Bk.

dim(Hk(C, ∂)) = dimZk −
is called the k-th Betti number. For a geometric intuition, the dimension of Hk(X)
can be thought of as the number of ‘k-dimensional holes’ of X:

dimBk

βk(C)

≡

The 0th Betti number β0 is the number of connected components.
The 1st Betti number β1 counts the number of loops, or 1-cycles.
The 2nd Betti number β2 counts the number of voids, or 2-cycles.

•
•
•

PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

7

The dimension of a simplicial complex is the maximum over the dimensions of its
d.
simplices. If X is a simplicial complex of dimension d then Hk(X) = 0 for all k
(C (cid:48); ∂(cid:48)) induces a linear map on

Any map of chain complexes Ξ : (C, ∂)

≥

homology:

H(Ξ) : Hk((C, ∂))

To simplify notation, we later use Ξ in place of H(Ξ).

−→

Hk((C (cid:48), ∂(cid:48)))

−→

2.2.2. Filtrations. To discuss how homology changes and persists, it is necessary
to deﬁne a ﬁltration for simplicial complexes. Given a simplicial complex X, a
ﬁltration is a totally ordered set of subcomplexes Xi of X, indexed by the nonneg-
Xj [39] (or equivalently a sequence of
ative integers, such that if i
Xl = X). The totally order-
simplicial complexes X1, ..., Xl such that X1 ⊆ · · · ⊆
ing itself is called a ﬁlter. We call a simplicial complex together with a ﬁltration a
ﬁltered simplicial complex.

j then Xi ⊂

≤

There are diﬀerent ways to deﬁne a ﬁltration [1], and we will focus herein on the

popular Vietoris-Rips ﬁltration.

∈ V

Deﬁnition 2.9 (Vietoris-Rips Filtration [1]). Let G = (V, E) be an undirected
p in a metric space with
graph in which each vertex i
metric d. Consider a weight function W :
so
that W (i, j) = d(xi, xj) encodes the distance between xi and xj. Let Cl(G) be the
R, the 1-skeleton Gδ = (V, Eδ)
associated clique complex for G(
E includes only the edges such that
is deﬁned as the subgraph of G where Eδ ⊆
d(xi, xj)

has a position xi ∈ R
V × V −→

V
R, we deﬁne the Vietoris-Rips ﬁltration by
δ(cid:48).

R deﬁned on the edges

δ. Then, for any δ

). For any δ

Cl(Gδ(cid:48))

≤

∈

E

E

,

δ

∈
Cl(Gδ)
{

−→

}0

≤

≤

In this work, we will only consider when the distance function is the Euclidean
metric, although one can in principle use other metrics. That said, we note in pass-
ing that one can also construct ﬁltrations in a variety of ways including functional
metric ﬁltrations [1], vertex-based clique ﬁltrations [34], k-clique ﬁltrations [34],
weighted simplex ﬁltrations [17], vertex function based ﬁltrations [1], Dowker sink
and source ﬁltration [7], and the intrinsic ˇCech ﬁltrations [12].

∈

≤

→

−→

Hk(Xi) with x

j the inclusion maps Xi (cid:44)

2.2.3. Persistent homology. Persistent homology involves studying how homology
changes (or more precisely, identiﬁes when it does not change) during a ﬁltration.
Xj induce
Consider a simplicial complex, for all i
F-linear maps Ξi,j : Hk(Xi)
Hk(Xj) on simplicial homology. For a generator
= 0, we say that x dies in Hk(Xj) if j > i is the smallest
x
index for which Ξi,j(x) = 0. We similarly say that x
Hk(Xi) is born in Hk(Xi)
1
t,i (x) = 0 for all t < i. We can represent the lifetime of x by the half open
if Ξ−
l, then we say that x lives forever and
interval [i, j). If Ξi,j(x)
).
we represent its lifetime by the interval [i;

≤
∞
The k-th persistent homology vector spaces of a ﬁltered simplicial complex X
are deﬁned as H i,j
k = img(Ξi,j), and the total kth persistent homology of X is
l
i=1Hk(Xi). By the Correspondence Theorem of Persistent Homology
deﬁned as
⊕
[43], for each k we can assign to the total k-th persistent homology vector space
a ﬁnite well-deﬁned collection of half open intervals, i.e., its so called barcode. An
alternative way to represent persistent homology graphically is given by persistence
diagrams, in which case each open interval [i, j) is represented by the point (i, j)
in R2. See Fig. 3 for an example persistence diagram, which we will more formally
deﬁne in the next section.

= 0 for all i < j

∈

(cid:54)
(cid:54)
8

MINH QUANG LE AND DANE TAYLOR

Figure 3. Example of stability for persistence diagrams resulting
and
from Vietoris-Rips ﬁltrations. (left) Two point-cloud sets
norm. The center and right
,

Z
panels depict their associated persistence diagrams D
which are also close with respect to the bottleneck distance.

are close with respect to the L

and D

Y

∞

Z

Y

2.3. Stability and convergence of persistence diagrams. Persistence dia-
grams and barcodes are widely used as a concise representation for the multiscale
homological features of a point-cloud data set. As such, it is important to under-
stand their robustness to perturbations, which can represent data error or noise [9].
One can also study for a converging sequence of point clouds whether their asso-
ciated persistence diagrams also converge. In this section, we present basic results
related to stability and convergence.

2.3.1. Stability. We ﬁrst discuss stability in a general setting, which requires several
deﬁnitions. Let X be a simplicial complex and g : X

−→

R be a tame function.
R is tame if it has a ﬁnite
, a))

1(

Deﬁnition 2.10 (Tame [9]). A function g : X
number of homological critical values and the homology groups Hk(g−
Z and a
are ﬁnite-dimensional for all k

−→

R.

∈

∈
In particular, Morse functions on compact manifolds are tame, as well as piece-
wise linear functions on ﬁnite simplicial complexes and, more generally, Morse func-
tions on compact Whitney-stratiﬁed spaces [15]. Assuming a ﬁxed integer k, we
, x]), and for any x < y, we let gy
deﬁne Gx = Hk(g−
Gy be the map
induced by inclusion of the sub-level set of x in that of y.

x : Gx −→

−∞

1(

−∞

Lemma 2.11 (Critical Value Lemma [9]). If some closed interval [x, y] contains
no homological critical value of g, then gy

x is an isomorphism for every integer k.

We now formally deﬁne a persistence diagram. Using the same notation as
x) for the image of Gx in Gy. By convention, we
x is called the persistent

whenever x or y is inﬁnite. The group Gy

x = img(gy

R be a tame function and denote (ai)i=1,...,n as its homological
1 < ai < bi
. For two integers

critical values, and let (bi)i=0..n be an interleaved sequence in which bi
for all i. We set b
0

and bn+1 = an+1 = +

1 = a0 =

i < j

−∞

−→

∞

−

−

n + 1, we deﬁne the multiplicity of the pair (ai, aj) by:
bi + βbj−1
βbj

i = βbj
µj

βbj−1
bi−1

≤

≤

bi−1 −

bi −

above, we write Gy
set Gy
x =
homology group.
Let g : X

0
}

{

-1.0-0.50.00.51.0-1.00-0.75-0.50-0.250.000.250.500.751.000.00.51.01.5Birth0.0000.5001.0001.500+∞DeathPersistence diagram0.00.51.01.5Birth0.0000.2500.5000.7501.0001.2501.5001.750+∞DeathPersistence diagramPERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

9

x = dim(F y

x ) denotes the persistent Betti numbers for all

−∞ ≤

x

y

≤

≤

where βy
.
+

∞

Deﬁnition 2.12 (Persistence Diagram [9]). The persistence diagram D(
of a ﬁltered topological space
multiplicity µj
i < j
are counted with inﬁnite multiplicity.

R2
is the set of points (ai, aj), which are counted with
n + 1, along with all points on the diagonal, which

i for 0

A
≤

)
A

⊂

≤

Given two persistence diagrams, we can quantify their dissimilarity using various

metrics. In particular, we will consider the following metric.

Deﬁnition 2.13 (Bottleneck Distance [9]). The bottleneck distance between two
point sets

is given by

and

Y

Z

dB(

,

Y

Z

) = inf
γ

sup

y
y (cid:107)

−

γ(y)

(cid:107)∞

,

(1)

where y
to

and z

range over all points and γ ranges over all bijections from
∈ Y
. Here, we interpret each point with multiplicity k as k individual points

∈ Z

Y
and the bijection is between the resulting sets.

Z

Next, we present triangulable spaces. As in [11], an underlying space of a sim-
K σ. If there exists a simplicial complex

plicial complex K is deﬁned as (cid:83) K = (cid:83)
K such that (cid:83) K is homeomorphic to X, then X is triangulable.

∈

σ

In Fig. 3, we show that it two point clouds are similar, then their associated
persistence diagrams are similar. That is, persistence diagrams are ‘stable’ with
respect to small changes, which can be quantiﬁed through the bottleneck distance.

Theorem 2.14 (Stability Theorem [5] ). Let X be a triangulable space with con-
R, and let Dg and Dh denote their associated
tinuous tame functions g, h : X
persistence diagrams obtained using a height ﬁltration. Then the bottleneck distance
between these persistence diagrams satisﬁes a global uniform bound

−→

dB(Dg, Dh)

g
≤ (cid:107)
While Thm. 2.14 describes the stability of persistence diagrams with respect
to changes to the functions to which ﬁltrations are applied, one can also use it
to equivalently prove the stability of persistence diagrams for when the function
changes due to perturbations of points. We present the following example.

(cid:107)∞

−

h

.

Rd with

Corollary 1 (Stability of VR Persistence Diagrams to Point Perturbations). Let
(cid:48) =
Y
(cid:15) for all i. If
yj||2
yi −
) =
||
≤

y(cid:48)i||2 ≤
denotes the pairwise distance function in which gij(
Y
Rn
y(cid:48)i −
+
||

1, ..., N
∈V ∈
{
Rd be a set of perturbed points such that
Rn
+

denote a set of N points, and let
yi −
||

y(cid:48)j||2. It then follows that dB(Dg, Dh)

yi}i
=
{
Y
y(cid:48)i}i
{
∈V ∈
g :
Y −→
and h :
Y
2(cid:15).

with hij(

(cid:48)) =

−→

=

Y

V

}

×

×

n

n

(cid:48)

Proof.

dB(Dg, Dh)

g
≤ ||

−

h

||∞

However, if we deﬁne y(cid:48)i = yi + ei, then
yj) + (ei −

y(cid:48)j||2 =

(yi −
||

y(cid:48)i −
||

= max
i,j
∈V
= max
i,j
∈V

g(yi, yj)
|
−
(cid:12)
yj||2 − ||
yi −
(cid:12)
||
(cid:15) for any i
ei||2 ≤
||
(yi −
ej)
||2 ≤ ||

h(y(cid:48)i, y(cid:48)j)
|
y(cid:48)j||2
and
(ei −
||

∈ V
||2 +

y(cid:48)i −

yj)

(cid:12)
(cid:12) .

ej)

||2.

10

MINH QUANG LE AND DANE TAYLOR

It follows that

yi −
||
which subsequently also bounds dB(Dg, Dh).

yj||2 − ||

y(cid:48)j||2

y(cid:48)i −

(cid:12)
(cid:12)

(cid:12)
(cid:12)

(ei −

ej)

||2 ≤

2(cid:15),

≤ ||

m =

2.3.2. Convergence. The stability of persistence diagrams also has important conse-
quences for the convergence of a sequence of persistence diagrams that is associated
with convergent sequence of point clouds. Focusing on VR ﬁltrations, consider a
N+
sequence of point clouds
∈
with ym
yi such
i ∈
ym
that
1/m. Note that such a convergence criterion can be ensured by
i −
considering a subsequence in which each subsequent element is chosen so that the
. Let Dfm and Df be the persistent diagrams
bound is true for all i
}
for VR ﬁltrations using the pairwise distance functions fm and f , which are respec-
tively deﬁned using the respective point clouds
. The Stability Theorem
and Corollary 1 imply convergence of the associated persistence diagrams since

Rp. Assume for each point i that the sequence converges ym
yi(cid:107)2 ≤

N
i=1 of ﬁxed size N =

for each m

ym
i }
{

1, . . . , N

m and

i →

∈ {

|Y

Y

Y

Y

(cid:107)

m

|

dB(Dfm , Df )

fm −

f

(cid:107)∞ ≤

ym
2
i −
(cid:107)

yi(cid:107)2 ≤

2
m

,

which converges to 0 as m

≤ (cid:107)
.
→ ∞

3. Topological data analysis using kNN orderings. We now present our main
ﬁndings: an approach for persistent homology that is based on the relative posi-
tioning of points according to their k-nearest-neighbor (kNN) sets. Our approach
N+,
introduces kNN complexes and ﬁltrations using a ﬁltration parameter k
thereby contrasting VR and other ﬁltrations that use a distance threshold (cid:15) as the
ﬁltration parameter. We will show that kNN-based persistent homology has certain
advantages that can beneﬁt applications for which the relative positioning of data
points is important, i.e., as opposed to their precise locations.

∈

This section is organized as follows.

In Sec. 3.1, we deﬁne kNN orderings of
points. In Sec. 3.2, we develop kNN ﬁltrations, use them to study kNN persistent
homology, and compare them to the study of VR ﬁltrations. In Sec. 3.3, we analyze
the stability and convergence of persistence diagrams resulting from kNN ﬁltrations.

3.1. kNN orderings, neighborhoods, and symmetrization. We begin with
a deﬁnition for kNN orderings. One complication is that the ordering of nearest
neighbors is not necessarily symmetric, and so we will also describe additional trans-
formations that we will use to symmetrize orderings prior to constructing ﬁltrations.

Y

=

yi}i
{

Rp in a normed metric space and

Deﬁnition 3.1 (k-Nearest-Neighbor Orderings). Let
enumerate
a set of points
yi −
||
be their pairwise distances resulting from the pairwise distance map given in
yj||2}
Deﬁnition 2.3. For each i, let kij denote the nearest-neighbor order of yj with
0). The ordering
respect to yi so that yj is the (kij)-th nearest neighbor of yi (kii ≡
NN
is formally deﬁned for each ﬁxed i by
is the “argsort function”.

j=1), where φ : RN

}
fij =
{

N
j=1 = φ(

kij}
{

fij}
{

1, . . . , N

∈V ∈

−→

=

V

{

N

, the entries in the set

In the above, we assume that the orderings are well-deﬁned in that for a given
N
i
j=1 are unique. In practice, if two distances fij
and fij(cid:48) are the same and they correspond or order k, then we assign an ordering at
random so that either kij = k and kij(cid:48) = k + 1, or vice versa. If even more distances

fij}
{

∈ V

PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

11

are the same, then we similarly assign them a relative ordering uniformly at random.
In principle, the argsort function φ can be deﬁned in a variety ways to handle the
ordering of repeated entries. Given the above deﬁnition of kNN orderings, we now
introduce an associated map between a set of points and an associated matrix with
entries kij.

V

1, 2, ..., N

Deﬁnition 3.2 (kNN Ordering Function). Let
2
yi}i
{
in a Euclidean metric space and recall the row-deﬁned
points with
=
RN
pairwise distance function fi :
+ given in Deﬁnition 2.3. Letting φ be
the argsort function, we deﬁne the map k-nearest-neighbor (kNN) ordering
as the matrix-valued function F = [F1, . . . , FN ]T in
function F :
which each row Fi is deﬁned by Fi = φ

denote a set of N

Y −→

Y −→

NN
+

fi :

≥

=

∈V

Y

{

}

N

×

NN
+ .

◦

Y −→

We will use kNN orderings of points to deﬁne local neighborhoods

Nik for each
, noting that any nested sequence of neighborhoods deﬁnes a local

point i
ﬁltration of the vertices

∈ V

.

V

Deﬁnition 3.3 (kNN Neighborhoods). Given a set of kNN orderings
i, j
each i

, we deﬁne the kNN neighborhoods as the sets
.

Nik =

and k

kij}
{
k
kij ≤
}

∈ V

j
{

N

|

for
for

∈ V

0
} ∪ V \ {
∈ {

}

∈ Nik does not imply i

Importantly, the kNN orderings and kNN neighborhoods are not symmetric—
that is, j
∈ Njk. Because we would like to use the kNN
neighborhood sets to construct ﬁltrations of simplicial complexes that contain undi-
rected simplices, we will now describe how to construct symmetric kNN neighbor-
hoods.

Deﬁnition 3.4 (Symmetrized kNN Orderings and Neighborhoods). We deﬁne three
max
types of symmetrized kNN neighborhoods—
ik —that
N
use, respectively, the following three symmetrizations of kNN orderings
:
kij}
{
˜kij = min
kij, kji}
{
kij = (kij + kji)/2
ˆkij = max
.
kij, kji}
{

trans
ik

min
ik

and

(2)

N

N

,

Notably, these kNN neighborhoods satisfy the following nestedness relation.

Lemma 3.5 (Nestedness of Symmetrized kNN Neighborhoods). Consider ﬁxed k
and i. Then the neighborhood sets
satisfy the following nest-
,
edness relationships:

trans
ik

max
ik

min
ik

N

N

N

,

Proof. For any kij, kji ∈
max functions. If j
∈ N
trans
j
ik
⊆ N

min
ik ⊆ N

max
ik

max
ik

trans
ik

N

max
ik ⊆ N
R, one has ˜kij ≤
, then ˆkij ≤
.

.

min
ik
ˆkij by deﬁnition of the min and
k, and so
kij ≤

ˆkij ≤

k. This implies ˜kij ≤

⊆ N
kij ≤

∈ N
We now deﬁne graphs and clique complexes using symmetrized kNN orderings

and neighborhoods.

, let

Deﬁnition 3.6 (Symmetrized kNN Graph). Given a set of points enumerated
be a set of undirected edges connecting
by
∈ Nik}
pairs of nearest neighbors, which are symmetrically deﬁned by choosing
Nik ∈
Ek), depending on

. We denote the respective graphs

Ek =
,

(i, j)
|
{

Gk(
V

trans
ik

max
ik

min
ik

∈ V

, j

N

N

V

}

i

,

,

{N
symmetrization method, by

, and

,

.

min
k
G

trans
k
G

max
k
G

12

MINH QUANG LE AND DANE TAYLOR

Deﬁnition 3.7 (Symmetrized kNN Clique Complex). Given a symmetrized kNN
graph
Ek, we construct its
with vertices
,
V
associated clique complex Xk = Cl(
Gk), and we similarly use a superscript to
, X trans
denote the method of symmetrization, i.e., X min
k

min
Gk ∈ {G
k

, and X max

and edges

max
k
G

trans
k

G

}

k

k

,

.

Corollary 2 (Nestedness of Symmetrized kNN Graphs and kNN Complexes). Sym-
metrized kNN graphs and kNN complexes satisfy the following nestedness relations
trans
(cid:44)
k
→ G
(cid:44)
→

min
(cid:44)
k
→ G
X min
(cid:44)
k
→

max
k
G
X max
k

X trans
k

(3)

.

Proof. The results follow immediately from Lemma 3.5, which proved the nestedness
of kNN neighborhoods.

Corollary 2 implies that
. Similarly, X max

max
k

G

is a subgraph of

trans
k
G

, which is a subgraph of
, which is a subcomplex of X min
.

k

is a subcomplex of X trans

min
k
G
3.2. Filtrations and persistent homology using kNN complexes. We now
formulate ﬁltrations and persistent homology using symmetrized kNN complexes.
Varying k gives rise to a sequence of nested sets called a ﬁltration, and we will deﬁne
several types based on the diﬀerent symmetrization methods. We will also deﬁne
local and global versions of ﬁltrations.

k

k

Figure 4. Visualization of kNN-ﬁltered simplicial complexes for a
point cloud using the three types of symmetrization given by Def-
inition 3.4. Comparing across the columns, observe the nestedness
property given by Corollary 2.

Deﬁnition 3.8 (Global kNN Filtration). Let Xk, Xk(cid:48)
be
kNN complexes with the same symmetrization method. Then we deﬁne a kNN-
ﬁltered simplicial complex

, X trans
k

, X max
k

X min
k

∈ {

}

Xk −→
{

Xk(cid:48)

k

}0
≤

k(cid:48)

≤

N

≤

1.

−

kNN, min012345k=0012345k=1012345k=2012345k=3012345k=4012345k=5kNN, transpose012345k=0012345k=1012345k=2012345k=3012345k=4012345k=5kNN, max012345k=0012345k=1012345k=2012345k=3012345k=4012345k=5PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

13

Figure 5. Comparison of persistent homology for an example
point cloud using two diﬀerent ﬁltrations: (left) our proposed kNN
ﬁltration; and (right) a VR ﬁltration. The red and blue persistence
barcodes indicate 0-dimensional and 1-dimensional cycles, respec-
tively. Observe that the kNN ﬁltration reveals a 1-cycle, whereas
the VR ﬁltration does not.

In Fig. 4, we illustrate global kNN ﬁltrations with the three diﬀerent symmetriza-
tion methods given by Deﬁnition 3.4. For simplicity, we only visualize 0-simplices
and 1-simplices. By comparing the kNN complexes across a given column, one can
observe the nestedness relations deﬁned by Corollary 2.

We formulate persistent homology for kNN ﬁltrations of a simplicial complex
anaologous to that deﬁned for a VR ﬁltrations (recall Sec. 2.2), and in Fig. 5, we
visualize persistence diagrams for both (left) a kNN ﬁltration and (right) a VR
ﬁltration for an example point cloud. The red and blue persistence barcodes indi-
cate 0-dimensional and 1-dimensional cycles, respectively. Observe that the kNN
ﬁltration reveals a 1-cycle, whereas the VR ﬁltration does not. Hence, ﬁltrations of
simplicial complexes (speciﬁcally clique complexes) according to pairwise distances
and kNN provide complementary homological information.

∈

In the next sections, we will further compare persistence diagrams resulting from
kNN and VR ﬁltrations; however, it’s worth highlighting several diﬀerences here.
First, one beneﬁt of using kNN sets versus a distance threshold (cid:15) is that ﬁltrations
are standardized. That is, the ﬁltration parameter range k
[0, N ] for kNN ﬁltra-
tions is always the same for a set of N points. In contrast, diﬀerent point clouds
have diﬀerent lengths scales, and so the range of a distance-based ﬁltration param-
eter is in general not standardized. One could seek to standardize the ranges of VR
ﬁltration parameters by standardizing distances; however, there are many ways to
normalize a point cloud, such as dividing by the mean distance or by the distances’
standard deviation. Given that one could implement a variety of normalization
approaches, comparing VR ﬁltrations across diﬀerent point clouds that have diﬀer-
ent length scales or diﬀerent dimensions is not straightforward. In contrast, kNN
ﬁltrations are standardized by deﬁnition.
Second, the ﬁltration parameter (cid:15)

R+ for VR ﬁltrations can in principle take
can only take on inte-
on any positive number.
ger values (or in the case of the symmetrization method of trans, half integers as
well). Potentially, this reduced space of possible ﬁltration parameters could beneﬁt

In contrast, k

0, . . . , N

1
}

∈ {

−

∈

kNN filtration012345k=0012345k=1012345k=2012345k=3012345k=4012345k=5VR filtration012345=0012345=0.94012345=1.25012345=2.16012345=2.45012345=3.110.00.51.01.52.02.53.0neighbor,k01234567featureidPersistentHomologyforkNNFiltration0.00.51.01.52.02.53.0ﬁltrationparameter,(cid:15)0123456featureidPersistentHomologyforVietoris-RipsFiltration14

MINH QUANG LE AND DANE TAYLOR

the computationally eﬃciency of implementing kNN ﬁltrations, although we don’t
explore that pursuit herein. That said, our experiments generally ﬁnd kNN ﬁltra-
tions to have higher computational complexity, since they require both computing
pairwise distances as well as their orderings.

3.3. Stability and convergence of kNN homology. Here, we will study two
key properties for the space of persistence diagrams that follow from kNN ﬁltrations:
stability and convergence.

3.3.1. kNN-preserving transformations. We observe that if points undergo pertur-
bations that are suﬃciently small, then it is possible to move points without chang-
ing any of the neighbor orderings. To make this more precise, we deﬁne a family of
point-cloud transformations that have this property.

×

∈V
N

Deﬁnition 3.9 (Local and Global kNN-Preserving Transformations). Let
Rp be a set of points that are enumerated
, f :
yi}i
with yi ∈
}
{
RN
be the pairwise distance function given by Def. 2.3, and F :
+
Y −→
be the neighbor-ordering function given by Def. 3.2. We deﬁne a transformation
h :
(cid:48) with h(x) = (h1(y1), ..., hn(yn)) = (y(cid:48)1, ..., y(cid:48)n) and deﬁne two types of
preservation properties:

Y
Y −→
NN
N
×
+

Y −→ Y

1, ..., N

=

=

V

{

•

•

h is local kNN-preserving for some i
for ﬁxed i and j
h is global kNN-preserving if and only if it is local kNN-preserving for all
i

if and only if (F

) = Fij(

h)ij(

∈ V

∈ V

Y

Y

◦

)

.

.

∈ V

Note that local kNN-preservation implies that the neighbor orderings are pre-
served for a particular point xi, while global-kNN preservation implies that all
neighbor orderings are preserved for all points. We also note that local and global
kNN-preserving transformations can also be similarly deﬁned for the three sym-
metrized versions of kNN orderings. We also deﬁne a slight variation in which the
preservation of orderings is only required for the nearest neighbor orderings up to a
ﬁnite size k
K, which we refer to as “K-bounded” local and global kNN-preserving
transformations.

As one example, consider a set of three points xi ∈ {
0, 2.1, 3
}
{
→

R and the trans-
It is both local and global kNN-preserving,
) =
0, 2, 3
formation h(
}
{
since the perturbation 2
2.1 is suﬃciently small such that none of the neighbor
orderings change. In fact, all isometric transformations including (i.e., translation,
rotation, reﬂection and glide reﬂection) are global kNN-preserving transformations
because they leave the pairwise distances unchanged.

0, 2, 3

} ⊂

≤

.

Figure 6. Example with 3 points
1,
(cid:15) or (B) b = (cid:15). Note that the
xc = 1 and either (A) xb =
−
perturbation can be made arbitrarily small for any (cid:15) > 0, and the
nearest-neighbor orderings are diﬀerent. (See Tables 2 and 3.)

xa, xb, xc}
{

with xa =

−

=

Y

abcabc(A)(B)PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

15

However, there are many transformations that are not kNN preserving. In Fig. 6,
we illustrate an example where a small perturbation to one point can change the
=
neighbor ordering in a discontinuous way. Consider a set of points
a, b, c
}
{
(cid:15) (for some
xa, xb, xc} ⊂
with locations
1, xc = 1 and xb =
=
{
1). Then the neighbor ordering matrix is given in Table 2.
small value 0 < (cid:15)
(cid:28)
Now consider the transformation h1(xa) = xa, h2(xb) = xb + 2(cid:15), and h3(xc) = xc,
then the neighbor ordering matrix changes, as shown in Table 3.

R where xa =

V
−

−

Y

point a
point b
point c

point a point b point c
2
2
0

1
0
0
1
2
1
Table 2. kNN
orderings before
transformation
h.

point a
point b
point c

point a point b point c
2
1
0

1
0
0
2
1
2
Table 3. kNN
after
orderings
transformation
h.

Given the deﬁnitions of local and global kNN-preserving transformations, we can

also deﬁne equivalence classes for any ﬁnite set of points

=

yi} ⊂
{

Y

Rp.

Deﬁnition 3.10 (kNN Equivalence of Point Sets). Let F denote the neighbor-
and
ordering function given by Def. 3.2. Any two point clouds
(cid:48) =
∈V
Rp are said to be kNN-equivalent if F (
(cid:48)). We denote
with yi, y(cid:48)i ∈
y(cid:48)i}i
{
the equivalence by
as the
kNN-equivalence class of

(cid:48). Furthermore, we have [
Y ∼ Y
.
Y

=
Y
) = F (
Y
] =

yi}i
Y
(cid:48)

∼ Y}

{Y

|Y

∈V

Y

Y

{

(cid:48)

Indeed, one can show

•

•

•

(cid:48)

.

(cid:48).

Y

Y

∼ Y

Y ∼ Y

Y ∼ Y

(cid:48) then

(cid:48) be a global kNN-preserving transformation. Then (F
) and h is a one-to-one function. Let h−

Y −→ Y
) = (Fij)(
Y

Reﬂexivity:
It is trivial. Take h(t) = id as the kNN-preserving transformation.
Symmetry: if
Let h :
h)ij(
function of h. So, we have: (F
kNN-preserving transformation from
Transitivity: if
(cid:48) and
Y ∼ Y
Let h(t) be kNN-preserving transformation between
preserving transformation between
(cid:48)(cid:48).
transformation between

(cid:48)) = (Fij)(
Y
.
(cid:48) to
Y
Y
(cid:48)(cid:48) then

Y
(cid:48)(cid:48), then g
◦

and
(cid:48), g(t) be kNN-
h be kNN-preserving

◦
1 be the inverse
1 is the global

(cid:48)), thus h−

Y ∼ Y

(cid:48) and

1)ij(

∼ Y

and

h−

(cid:48)(cid:48).

Y

Y

Y

Y

Y

◦

(cid:48)

Y

Y

The equivalence of kNN orderings implies that kNN ﬁltrations and kNN-based
persistent homology are identical for any two point clouds within a given equivalence
class. Thus, persistence diagrams for kNN persistent homology are robust to (and in
fact, unaﬀected by) any kNN-preserving transformation. That said, such persistence
diagrams can also be unstable to other types of perturbations, as we explore below.

3.3.2. Stability of kNN persistence diagrams. In analogy to the stability theorem for
HV R of persistence diagrams obtained using VR ﬁltrations, we consider
the space
whether the space
HkN N of persistence diagrams using kNN ﬁltrations is also stable
with respect to perturbations of the associated point cloud. We ﬁst show that

16

MINH QUANG LE AND DANE TAYLOR

persistence diagrams resulting from kNN ﬁltrations are do not satisfy the same
stability condition as that for VR ﬁltrations.

Y

=

=

Theorem 3.11 (kNN Persistence Diagrams are not Uniformly Globally Stable
be a point cloud with
with
to Point Changes). Let
1, ..., N
yi}i
{
V
{
∈V
RN
is the pairwise
f , where f :
a neighbor-ordering function F = φ
×
+
◦
NN
distance function and φ : RN
is the ‘argsort’ function. Further let
+
+
−→
be a second point cloud with the neighbor-ordering function G =
g. Further let DF and DG denote the persistence diagrams of kNN ﬁltrations
(cid:48). Further, deﬁne the metric for two enumerated point clouds
y(cid:48)i||2. Then there does not exist a uniform global bound

(cid:107)Y − Y
on the bottleneck distance between persistence diagrams of the form:

y(cid:48)i}i
Y
{
φ
applied to

and
Y
Y
= maxi
∈V ||

}
Y −→

yi −

(cid:48) =

(cid:107)∞

∈V

◦

N

N

N

×

×

(cid:48)

dB(DF , DG)

F

≤ (cid:107)

G

(cid:107)∞

=

f

φ
(cid:107)

◦

φ

g

◦

−

−

(cid:107)∞ (cid:54)≤

L

(cid:107)Y − Y

.

(cid:48)

(cid:107)∞

Proof. The ﬁrst inequality is satisﬁed by applying the original statement of the
stability theorem: persistence diagrams are uniformly bound by the maximal diﬀer-
ence between the functions that are ﬁltered. By deﬁnition, the neighbor-ordering
(cid:48)),
function yields a matrix of k nearest neighbors, [kij] = F (
implying

) and [k(cid:48)ij] = G(

Y

Y

F
(cid:107)

−

G

(cid:107)∞ ≡

max
ij

kij −

|

.
k(cid:48)ij|

That is, the diﬀerence in persistence diagrams is bound by the maximum diﬀerence
in neighbor orderings. However, the stability of persistent homology with respect
to neighbor-ordering changes does not imply stability with respect to point-location
changes.

To disprove the last inequality, we provide a counter example. Recall the sets of
R
1,
a, b, c
N = 3 points in Fig. 6 with
{
}
{
= 1 for any small (cid:15), but
F
1, (cid:15), 1
and
{
= 2(cid:15). Suppose there did exist a uniform bound with Lipschitz constant
(cid:48) with any (cid:15) < 1/2L yields a contradiction since
Y
< 1.

Y
(cid:107)Y − Y
L > 1, then the points

=
R. By construction,

and locations

= 1 and

(cid:48) =
(cid:48)

} ∈

and

} ∈

(cid:48) =

||∞

(cid:15), 1

(cid:107)∞

G

G

−

=

−

Y

Y

F

V

V

||

||

−

||∞

||Y − Y

||∞

(cid:48)

3.3.3. Topological convergence of kNN orderings. In this section, we will use the
neighbor-ordering function to deﬁne a discrete-topological notion of convergence
for a sequence of point sets using kNN persistent homology.

)

}

V

∈

Y

Y

Y

N

=

(t))

Fij(

Fij(

(t) =

i ∈

iﬀ limt

and y(t)

1, ..., N
{

i
|
∈ V}
(t)
{Y
}
(t)) = F (

y(t)
i
{
Rp. We say that the sequence
F (

Deﬁnition 3.12. Consider a sequence of point sets
with t
has global
and
convergence in kNN topology to the limit
), where
F is the neighbor-ordering function. More precisely, for any (cid:15), there exists a t∗ such
that maxij |
Y
Deﬁnition 3.13. Consider a sequence of point sets
with t
∈ V}
and y(t)
has κ-bounded
and
convergence in kNN topology to a limit
iﬀ limt
) for all
Y
Y
min
are symmetrized
,
i
Nk ∈ {N
ik
neighborhoods that are deﬁned in Def. 3.3. More precisely, for any (cid:15), there exists a
(t))
t∗ such that maxi
|

y(t)
i
i
|
{
(t)
{Y
}
(t)) = Fij(
Fij(
Y
max
,
ik

(t) =
Rp. We say that the sequence

}
∈ Nik, where k

< (cid:15) for all t > t∗.

< (cid:15) for all t > t∗.

1, ..., N
{

→∞
trans
ik

κ and

i ∈

and j

Fij(

Fij(

∈ V

ik |

→∞

∈N

N

N

−

−

≤

=

∈V

N

Y

Y

Y

Y

Y

∈

V

}

,j

)

|

PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

17

Remark 1. Note that κ-bounded convergence is inclusive so that convergence for
a given κ also implies convergence for any κ(cid:48)
κ. In particular, global convergence
in kNN topology implies κ-bounded convergence for any κ.

≤

We now deﬁne local variants of kNN topological convergence.
y(t)
i
{
Rp. We say that the sequence
Fij(

Deﬁnition 3.14. Consider a sequence of point sets
and
convergence in kNN topology to a limit
i, j
Fij(

< (cid:15) for all t > t∗.

. More precisely, for any (cid:15), there exists a t∗ such that maxi,j

i
∈ V}
|
(t)
has
{Y
}
(t)) = Fij(

and y(t)

iﬀ limt

1, ..., N

i ∈

(t) =

→∞

=

Y

Y

Y

V

{

}

N

with t

∈
-local
U
) for all
Y
Fij(
∈U |

−

Y

)

∈ U ⊆ V
(t))
|
Y

Deﬁnition 3.15. Consider a sequence of point sets
and

(t) =
Rp. We say that the sequence

and y(t)

=

1, ..., N
{

}

V

i ∈

-local convergence in kNN topology to a limit

Y

N

y(t)
i
i
|
{
(t)
}
{Y
iﬀ limt

with t
∈ V}
has κ-bounded
(t)) =
Y
∈ Nik, where the symmetrized neighborhoods
κ. More precisely, for
≤
(t))
< (cid:15) for all t > t∗.
Fij(
|
Y

Fij(

Fij(

∈V |

→∞

−

∈U

Y

Y

∈

,j

)

are given in Def. 3.3 and k

U
Fij(
Y
Nk ∈ {N
any (cid:15), there exists a t∗ such that maxi

∈ U ⊆ V
max
trans
,
ik
ik
N

) for all i
min
ik

and j

N

}

,

∈ V

and j

) = Fij(
Nik). Speciﬁcally, we can choose (cid:15)

Note for any point set that convergences in global kNN topology (or k-bounded
(t)) for
convergence in kNN topology), that there exists a t∗ such that Fij(
(0, 1).
(or i
all t > t∗ and i, j
N for any point set
< (cid:15) implies
Since Fij(
∈
(t)) = 0 for all t > t∗. That is, kNN convergence is a discrete property
Fij(
)
Y
that is exactly obtained for suﬃciently large t > t∗. This signiﬁcantly contrasts the
notion of convergence in norm, which is often asymptotically approached rather than
exactly obtained. The next theorem more precisely establishes a relation between
convergence in a normed metric space and convergence in kNN topology.

, the condition

)
Y
Fij(

Fij(
|

(t))
|

Fij(

Y
∈

∈ V

−

−

Y

Y

Y

Y

Y

∈

)

Y

i
|

(t) =

y(t)
i
{

Theorem 3.16 (Convergence in Norm Implies Convergence in kNN Topology).
Rp be an element of a sequence of point clouds in which
Let
y(t)
.
each point converges in norm to some limit, limt
i −
∈ V
(t)
Deﬁne
in kNN topology,
i
yi|
Y
and there exists a t∗ such that F (
) for any t > t∗, where F is the
Y
neighbor-ordering given by Def. 3.2.

→∞ ||
Rp as that limit. Then
(t)) = F (

yi||
→ Y

= 0 for each i

∈ V} ⊂

∈ V} ⊂

=

Y

Y

{

If

Y

Y

Y

(t))

∈ V

)
ij =
∞

Y
. Letting d(t)

) for some i, j
)
)
∞
∞
ij −

= Fij(
yj||2, this implies d(

(t) does not converge
in kNN-topology, then for any t, there exists at least one neighbor ordering

y(t)
y(t)
ij =
||2
i −
j
||
d(t)
ik > 0 but d(t)
d(
0 for some
ik ≤
. (This must be true of the distances if the neighbor orderings diﬀer.) Let
for each i, there

Proof. To prove this theorem, we use a contradiction.
to
that diﬀers, i.e., Fij(
and d(
yi −
||
i, j, k
∈ V
d(
)
δ∗ = maxi,j,k |
∞
ij −
exists a t∗ such that
)
d(t)
ij −
|

d(
)
y(t)
. However, because limt
∞
i −
ik |
y(t)
yi||∞
< (cid:15)/4 for all i when t > t∗. It then follows that
i −
||
d(t)
d(
)
< (cid:15)/2 and
∞
ik |
ik −
|
ik > d(t)
d(t)
d(t)
ij −
> (d(
= d(
= δ∗

< (cid:15)/2. Now suppose d(

ik + (cid:15)/2)
∞
(d(

(cid:15)/2)
d(
)
∞
ik −

d(
ik > 0. Then
∞

)
ik + (cid:15)/2)
∞

)
∞
ij −

d(
∞
ij

ij −

→∞ ||

yi||

(d(

(4)

−

(cid:15)

|

)

)

ij −
)
∞
ij −
)
∞
ij −
(cid:15).
−

(cid:54)
18

MINH QUANG LE AND DANE TAYLOR

This is true for any (cid:15), so we may choose (cid:15) < δ∗, which implies d(t)
contradicting the above statement.

ij −

d(t)
ik > 0,

Finally, we prove that the reverse property does not necessarily hold.

Theorem 3.17 (Convergence in kNN Topology Does Not Imply Convergence in
y(t)
Rp be an element of a sequence of point sets that
Norm). Let
i
{
converges in kNN topology. Then each y(t)
i may or may not converge to some limit
yi as t

∈ V} ⊂

(t) =

Y

i

|

.
→ ∞

Proof. See the proof to Thm. 3.11 for a counter example in which points converge
as (cid:15)

0, but not for kNN topology, which remains bounded below by 1.

→

4. kNN persistent homology reveals topological convergence of pageR-
ank algorithm. In this section, we study the convergence of an iterative method
for approximating Google’s PageRank an use kNN persistent homology to develop
a perspective from discrete topology—that is, as opposed to the typical geomet-
ric perspective of convergence under a vector norm.
In Sec. 4.1, we present the
PageRank algorithm. In Sec. 4.2, we present numerical experiments for an empiri-
cal network: a dolphin social network. In Sec. 4.3, we study PageRank for the same
network using local versions of kNN topological convergence.

4.1. PageRank. Google developed PageRank to solve the problem of web search
and ranking for the World Wide Web [3]. Their aim was to create an importance
measure for each webpage distinguish highly recognizable, relevant pages from those
that are less known. There are many derivations of PageRank [24, 16], all of which
stem from modeling ‘websurﬁng’ (i.e., how people navigate the web) as a Markov
chain. In this analogy, the fraction of random websurfers at a particular web page
is given by the stationary distribution of a Markov chain.

A main challenge for this formulation is that in practice, a network connecting
webpages via their hyperlinks does not usually consist of a single connected compo-
nent. Instead, there are isolated webpages that cannot be navigated to, or navigated
from. To address this issue, the Google founders introduced ‘teleportation’ so that
with probability α, websurfers click a hyperlink to move between webpages, and
with probability 1
α, websurfers randomly jump to webpage i with probability vi.
Parameter α is called as teleportation parameter or damping factor. In the original
formulation, a walker would jump uniformly at random to another webpage so that
the transition probability to each webpage is the same: vi = vj = 1/N , where N is
the number of webpages. It is also beneﬁcial to allow the vi values to be heteroge-
neous to bias the random websurﬁng to remain near a particular set of webpages.
Such dynamics is called ‘personalized’ PageRank, and v is called the personalization
vector.

−

Both PageRank and personalized PageRank can be formulated as a discrete-time

Markov chain in which the transition matrix is given by the Google matrix:

G = αP + (1

α)evT ,

(5)

−

where e is a vector of ones and each entry Pij gives the probability of transitioning
from webpage i to webpage j following a hyperlink. The matrices P , evT and G are
all row-stochastic transition matrices. The stationary distribution of the Markov

PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

19

Figure 7. (A) A social network of interactions among N = 62 dol-
phins in New Zealand. (B) Node colors indicate the nodes’ respec-
tive PageRank values. In both panels, nodes with larger/smaller
size have more/fewer connecting edges.

chain with transition matrix G is called the PageRank vector π
limit of the iterative equation

∈

RN , which is the

x(t + 1)T = x(t)T G,

(6)

for which the ﬁxed point is the solution to the eigenvalue problem GT π = π.

The PageRank algorithm has contributed toward Google’s rise as a leading tech-
nology company, but it’s worth noting that it has also been applied in a wide variety
of domains beyond web search [14]. In any context, the practical usage of PageR-
ank comes with various challenges. For example, what α value should be used?
The PageRank vector can be integrated with a machine learning framework for web
search [29], used to help ﬁt functions over directed graphs [41], and can be used
to predict missing genes and protein functions [18, 28]. In these various cases, α
must be separately chosen as appropriate. As in [31], the author suggests choosing
α = 0.15 for correlated discovery in a multimedia database. Google historically set
α = 0.85, which often remains as the default choice in the literature.

In our paper, we explore a diﬀerent challenge that arises when considering how
many times to iterate Eq. (6). The iterated values x(t)
, but
a more practical questions involves studying how many iterations are required for
the associated ranks to converge. That is, if one ranks webpages from top to bottom
based on their πi values, then one only needs to iterate Eq. (6) until those ranks
converge. Understanding the asymptotic convergence rate and asymptotic error is
not immediately relevant when considering this practical question, and we propose
kNN persistent homology as a mathematically principled technique to study the
convergence of rankings (and relative orderings more generally).

π converge as t

→ ∞

→

4.2. Ranking nodes in a dolphin social network. In this section, we consider
the convergence of the iterative method for computing PageRank. We will study
the convergence of persistence diagrams associated with converging approximate
π, comparing the result for kNN ﬁltrations to those of
PageRank values x(t)
VR ﬁltrations. We will show that the convergence of persistence diagrams for
VR ﬁltrations closely relates to the convergence in vector norm (i.e., due to the

→

BeakBeescratchBumperCCLCrossDN16DN21DN63DoubleFeatherFishFiveForkGallatinGrinHaeckselHookJetJonahKnitKringelMN105MN23MN60MN83MusNotchNumber1OscarPatchbackPLQuasiRippleflukeScabsShmuddelSMN5SN100SN4SN63SN89SN9SN90SN96StripesThumperToplessTR120TR77TR82TR88TR99TriggerTSN103TSN83UpbangVauWaveWebWhitetipZapZigZipfel20

MINH QUANG LE AND DANE TAYLOR

≈

πi for the iterative method with diﬀerent t

Figure 8. Visualization of the approximate PageRank values
xi(t)
.
3, 6, 9, 12
}
Node colors indicate the xi(t) values. The black circles around
nodes indicate the ranks Ri(x(t)) that have already converged to
their limiting rank Ri(π). For each node i, we deﬁne t∗i to be the
time step for which Ri(x(t)) = Ri(π) for t
t∗. Observe that most
π
ranks converge after 12 time steps, even though

> 0.

∈ {

≥

x

||

−

||

In contrast, we the convergence of persistence diagrams for
stability theorem).
kNN ﬁltrations more closely resembles the convergence of rank orderings. In other
words, convergence of kNN persistent homology can be used to predict how many
iterations are required for x(t) to be suﬃciently close to π such that the ranking of
nodes—i.e., from 1 to N—has converged.

We present our results for an empirical network in which undirected, unweighted
edges encode social interactions among N = 62 bottlenose dolphins living near
Doubtful Sound in New Zealand [27]. We apply the iterative PageRank algorithm
with teleportation parameter α = 0.85 to the network with an initial condition
given by xi(0) = i/((cid:80)N
j=1 j). In the Figure 7, we illustrate the dolphin network and
indicate the nodes’ converged PageRank values by node color.

We formally deﬁne the converged rank order according to PageRank by

[Ri(π)] = φ(

π),

−

}

→ {

1, . . . , N

where φ : R
is the ‘argsort’ function. Recall that the function φ was
previously deﬁned to sort the pairwise distances in ascending order. By multiplying
π by negative one, we now sort the πi values in descending order so that Ri(π) =
1 for the top-ranked node i = argmaxjπj, which is considered to be the most
important dolphin in the social network. Similarly, Ri(π) = N for the lowest-
ranked node i = argminjπj, which is the least important dolphin. ( For each time
t, we similarly deﬁne the approximate rank orderings

[Ri(x(t))] = φ(

x(t)).

−

→

1, . . . , N

We note that the rank orderings satisfy Ri(x(t)), Ri(π)
. Because
}
π, the approximate rank orderings Ri(x(t)) converge to their ﬁnal rank
x(t)
orderings Ri(π). Moreover, for each node i, the rank Ri(x(t)) can converge to
Ri(π) at a diﬀerent time step t. Therefore, we deﬁne t∗i to be the iteration of
rank convergence, which is the value of t at which Ri(x(t)) = Ri(π) for all
t

t∗i .
In Fig. 8, we illustrate the convergence for the approximate PageRank values
xi(t)
, we
}
use node color to indicate the values xi(t). Moreover, we use black circles to indicate

πi for diﬀerent time steps. That is, for the time steps t

3, 6, 9, 12

∈ {

∈ {

≈

≥

t=3t=6t=9t=12PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

21

Figure 9. (left) Convergence of nodes’ rank orderings Ri(x(t))
→
Ri(π) versus time step t. (right) Scatter plot comparing t∗i and πi
across the nodes i.

which nodes have already obtained their limiting rank, i.e., Ri(x(t)) = R(π)i for
t

t∗i . Most ranks converge after 12 time steps.
≥
In Fig. 9, we further study the convergence of the rank orderings Ri(x(t))

→
Ri(π) for the dolphin network.
In Fig. 9(left), observe that the Ri(x(t)) values
change up until a time step t∗i , which is potentially diﬀerent for each node i. In
Fig. 9(left), we depict a scatter plot comparing t∗i and πi, noting that we do not see
any strong correlation. From a practical perspective, one is often most interested
in the top-ranked nodes, and so one is primarily interested in how many iterations
are required for the top-ranks to converge. However, there is no guarantee that the
top-rank nodes converge before the lower-ranked ones do, or vice versa.

We now study the convergence of persistence diagrams for the converging xi(t)
→
πi values, comparing persistence diagrams resulting from kNN ﬁltrations to those
of VR ﬁltrations. More precisely, we deﬁne DV R(x) and DkN N (x) to be the per-
sistence diagrams according to VR and kNN ﬁltrations, respectively. We will also
study kNN ﬁltrations with two types of symmetrization for k-nearest neighbor sets:
the minimum and maximum approaches. Given the persistence diagrams for π
and x(t), we study homological convergence through the bottleneck distance, e.g.,
d(DV R(x(t))

DV R(π)).

In Fig. 10, we illustrate the convergence of persistence diagrams for (left) VR
ﬁltrations and (right) kNN ﬁltrations. We compare these two converging topological
π
spaces, respectively, with the normed approximation error,
, and the total
||
diﬀerence in rank orderings, (cid:80)
. Observe in Fig. 10(left) that
|
x(t)
π
, whereas kNN persistent
VR persistent homology converges similarly to
−
||
homology converges similarly to (cid:80)
Ri(x(t))
Ri(π)
. That is, kNN topological
|
convergence can be used as a proxy to estimate the number of iterations required
for the rank orderings to converge to exactly their ﬁnal values.

Ri(x(t))

Ri(π)

x(t)

i |

i |

−

−

−

||

||

−

4.3. U-local convergence of dolphin social network. Before concluding, we
further study the homological convergence of PageRank for the dolphin network,
except we now focus on our notion of
-local topological convergence, which we
In this context, we focus on convergence for a subset
presented in Sec. 3.3.3.
of the nodes, and we will consider two subsets: a randomly selected set
Rippleﬂuke, Zig, Feather, Gallatin, SN90, DN16, Wave, DN21,
{
U2 is the set of 10 nodes that have the top PageRank values.
and

U ⊂ V
of nodes—
Web, Upbang

U1 =
}

U

010203040time,t0102030405060nodeindex,iNodeRankvsTime0.000.010.020.030.04pagerank,πi2468101214convergediteration,t∗iIndividualRankConvergences0102030405060noderank,ri22

MINH QUANG LE AND DANE TAYLOR

π

x(t)

Figure 10. Homological convergence of an iterative algorithm for
PageRank for the dolphin social network.
(left) Convergence of
persistent homology for VR ﬁltrations coincides with a geometrical
notion of convergence
0 due to the stability theorem.
|| →
Both asymptotically approach 0 with exponential decay. (right)
In contrast, convergence of persistent homology for kNN ﬁltrations
more closely resembles the convergence of the rank ordering, which
exactly converges after t = 14 time steps in this case. Observe
the kNN persistence diagrams for the max and min methods of
symmetrization for kNN sets converge at around the same number
of iterations.

−

||

U

Figure 11.
-local topological convergence for the following sub-
Rippleﬂuke, Zig, Feather, Gallatin, SN90,
set of nodes:
U1 =
DN16, Wave, DN21, Web, Upbang
. Similar to Fig. 10, the left
}
and right panels depict convergence of persistence diagrams for VR
and kNN ﬁltrations, respectively.

{

Note that we still compute the iterative approximation to PageRank in the usual
way, except that we only consider the values πi and xi(t) for which i

.

In Fig. 11(left) and (right), we depict convergence of VR and kNN persistence
homology, respectively for the subset of nodes
U1. Observer that convergence for
VR persistent homology is similar to that for the full system.
In contrast, ob-
serve in Fig. 11(right) that the kNN homology and rank orderings converge after
approximately t = 5 iterations for this subset.

∈ U

In Fig. 12, we depict the same information, except that we now consider the
U2 of nodes with top PageRank values. In this case, the VR convergence

subset

0510152025303540iteration,t10−710−610−510−410−310−210−1pagerankvectorerrorGeometricalConvergence||x(t)−π||2d(DVR(x(t)),DVR(π))0510152025303540iteration,t0.02.55.07.510.012.515.017.520.0numberofunconvergedranksDiscrete-TopologyConvergence||R(x(t))−R(π)||1d(DkNN,max(x(t)),DkNN,max(π))d(DkNN,min(x(t)),DkNN,min(π))0510152025iteration,t10−610−510−410−310−2pagerankvectorerrorLocalGeometricalConvergence||x(t)−π||2d(DVRl(x(t)),DVRl(π))0510152025iteration,t0246810numberofunconvergedranksLocalDiscreteTopologicalConvergence||R(x(t))−R(π)||1d(DkNNl,max(x(t)),DkNNl,max(π))d(DkNNl,min(x(t)),DkNNl,min(π))PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

23

Figure 12. Same information as in Fig. 11, except we consider
the subset

U1 of nodes that have the largest PageRank values.

more closely aligns with
or the subset
after approximately t = 9 iterations in this case.

of nodes
U1. Moreover, the kNN homology and the rank orderings converge

than when we considered the full set

−

V

||

||

x(t)

π

5. Discussion. In this paper, we developed an approach for topological data anal-
ysis (TDA) that utilizes k-nearest neighbor sets to deﬁne kNN complexes, kNN
ﬁltrations, and kNN persistent homology. Our approach was developed in the spirit
of discrete topology and by examining the relative ordering of points, as opposed
to the precise distances between points. Although kNN orderings are related to
pairwise distances, we provided theory and many experiments highlighting impor-
tant diﬀerences between persistent homology that is based on kNN ﬁltrations versus
Vietoris-Rips (VR) ﬁltrations.

To gain theoretical insights into kNN-based TDA, we investigated stability prop-
erties for the resulting persistence diagrams in Sec. 3.3.2 and convergence properties
in Sec. 3.3.3. While persistence diagrams resulting from kNN ﬁltrations do not sat-
isfy a stability theorem involving a universal bound on perturbed point sets (see
Theorem 3.11), we identiﬁed and characterized diﬀerent notions of stability and
convergence by identifying equivalence classes as well as bounds on the bottleneck
distance between persistence diagrams for kNN homology that are based on the
maximum diﬀerence for a kNN ordering. Our formulation of convergence also led
to several types including global convergence, κ-bounded convergence and
-local
convergence. Moreover, we identiﬁed some relations among these types as in The-
orem 3.16 and Theorem 3.17.

U

As a concrete application, we applied persistent homology to study the topo-
logical convergence of an iterative method for solving PageRank. We showed that
the convergence of persistence diagrams for VR ﬁltrations closely relates to the
convergence in vector norm (i.e., due to the stability theorem).
In contrast, the
convergence of persistence diagrams for kNN ﬁltrations more closely resembles the
convergence of rank ordering. In other words, convergence of kNN persistent ho-
mology can be used to predict how many iterations are required for x(t) to be
suﬃciently close to π such that the ranking of nodes—i.e., from 1 to N—has con-
verged. Although we have focused on the PageRank algorithm, iterative algorithms
for solving systems (e.g., root ﬁnding) are some of the most widely used numeri-
cal algorithms. We have shown that the existing TDA approach of VR ﬁltrations

0510152025iteration,t10−510−410−310−2pagerankvectorerrorLocalGeometricalConvergence||x(t)−π||2d(DVRl(x(t)),DVRl(π))0510152025iteration,t0246810numberofunconvergedranksLocalDiscreteTopologicalConvergence||R(x(t))−R(π)||1d(DkNNl,max(x(t)),DkNNl,max(π))d(DkNNl,min(x(t)),DkNNl,min(π))24

MINH QUANG LE AND DANE TAYLOR

coincides with geometrical (i.e., normed) convergence and thereby provides one per-
spective for the convergence of numerical algorithms. In contrast, kNN ﬁltrations
provide complementary insights from the perspective of a discrete topological space
that is associated with the relative positioning of points. As such, we expect kNN
complexes, ﬁltrations, and persistent homology to have many applications for con-
verging numerical algorithms beyond PageRank.

Acknowledgments. M.Q.L. and D.T. were supported in part by the Simons Foun-
dation (Grant No. 578333). D.T also acknowledges the National Science Foundation
(Grants No. DMS-2052720 and No. EDT-1551069).

REFERENCES

[1] Mehmet E Aktas, Esra Akbas, and Ahmed El Fatmaoui. Persistence homology of networks:

methods and applications. Applied Network Science, 4(1):61, 2019.

[2] Dominique Attali, Andr´e Lieutier, and David Salinas. Vietoris–rips complexes also provide
topologically correct reconstructions of sampled shapes. Computational Geometry, 46(4):448–
465, 2013.

[3] Sergey Brin and Lawrence Page. The anatomy of a large-scale hypertextual web search engine.

Computer networks and ISDN systems, 30(1-7):107–117, 1998.

[4] Peter Bubenik. Statistical topological data analysis using persistence landscapes. The Journal

of Machine Learning Research, 16(1):77–102, 2015.

[5] Anuraag Bukkuri, Noemi Andor, and Isabel K Darcy. Applications of topological data analysis

in oncology. Frontiers in Artiﬁcial Intelligence, 4:38, 2021.

[6] Gunnar Carlsson. Topology and data. Bulletin of the American Mathematical Society,

46(2):255–308, 2009.

[7] Samir Chowdhury and Facundo M´emoli. A functorial dowker theorem and persistent homol-
ogy of asymmetric networks. Journal of Applied and Computational Topology, 2(1):115–175,
2018.

[8] Moo K Chung, Peter Bubenik, and Peter T Kim. Persistence diagrams of cortical surface data.
In International Conference on Information Processing in Medical Imaging, pages 386–397.
Springer, 2009.

[9] David Cohen-Steiner, Herbert Edelsbrunner, and John Harer. Stability of persistence dia-

grams. Discrete & Computational Geometry, 37(1):103–120, 2007.

[10] Herbert Edelsbrunner and John Harer. Persistent homology-a survey. Contemporary mathe-

matics, 453:257–282, 2008.

[11] Herbert Edelsbrunner and Nimish R Shah. Triangulating topological spaces. International

Journal of Computational Geometry & Applications, 7(04):365–378, 1997.

[12] Ellen Gasparovic, Maria Gommel, Emilie Purvine, Radmila Sazdanovic, Bei Wang, Yusu
Wang, and Lori Ziegelmeier. The relationship between the intrinsic cech and persistence
distortion distances for metric graphs. arXiv preprint arXiv:1812.05282, 2018.

[13] Chad Giusti, Eva Pastalkova, Carina Curto, and Vladimir Itskov. Clique topology reveals
intrinsic geometric structure in neural correlations. Proceedings of the National Academy of
Sciences, 112(44):13455–13460, 2015.

[14] David F Gleich. Pagerank beyond the web. siam REVIEW, 57(3):321–363, 2015.
[15] Mark Goresky and Robert MacPherson. Stratiﬁed morse theory. In Stratiﬁed Morse Theory,

pages 3–22. Springer, 1988.

[16] Desmond J Higham. Google pagerank as mean playing time for pinball on the reverse web.

Applied Mathematics Letters, 18(12):1359–1362, 2005.

[17] Weiyu Huang and Alejandro Ribeiro. Persistent homology lower bounds on high-order network

distances. IEEE Transactions on Signal Processing, 65(2):319–334, 2016.

[18] Takashi Ichinomiya, Ippei Obayashi, and Yasuaki Hiraoka. Protein-folding analysis using
features obtained by persistent homology. Biophysical Journal, 118(12):2926–2937, 2020.
[19] Peter M Kasson, Afra Zomorodian, Sanghyun Park, Nina Singhal, Leonidas J Guibas, and
Vijay S Pande. Persistent voids: a new structural metric for membrane fusion. Bioinformatics,
23(14):1753–1759, 2007.

PERSISTENT HOMOLOGY WITH K-NEAREST-NEIGHBOR FILTRATIONS

25

[20] Jisu Kim, Jaehyeok Shin, Fr´ed´eric Chazal, Alessandro Rinaldo, and Larry Wasserman. Ho-
motopy reconstruction via the cech complex and the vietoris-rips complex. arXiv preprint
arXiv:1903.06955, 2019.

[21] L Kondic, A Goullet, CS O’Hern, M Kramar, Konstantin Mischaikow, and RP Behringer.
Topology of force networks in compressed granular media. EPL (Europhysics Letters),
97(5):54001, 2012.

[22] M Kramar, Arnaud Goullet, Lou Kondic, and Konstantin Mischaikow. Persistence of force

networks in compressed granular media. Physical Review E, 87(4):042207, 2013.

[23] Genki Kusano, Yasuaki Hiraoka, and Kenji Fukumizu. Persistence weighted gaussian kernel
for topological data analysis. In International Conference on Machine Learning, pages 2004–
2013. PMLR, 2016.

[24] Amy N Langville and Carl D Meyer. Updating markov chains with an eye on google’s pager-

ank. SIAM journal on matrix analysis and applications, 27(4):968–987, 2006.

[25] Minh Quang Le and Dane Taylor. Persistent homology of convection cycles in network ﬂows.

Physical Review E, 105:044311, 2021.

[26] Jie Liang, Herbert Edelsbrunner, Ping Fu, Pamidighantam V Sudhakar, and Shankar Sub-
ramaniam. Analytical shape computation of macromolecules: I. molecular area and volume
through alpha shape. Proteins: Structure, Function, and Bioinformatics, 33(1):1–17, 1998.

[27] David Lusseau, Karsten Schneider, Oliver J Boisseau, Patti Haase, Elisabeth Slooten, and
Steve M Dawson. The bottlenose dolphin community of doubtful sound features a large pro-
portion of long-lasting associations. Behavioral Ecology and Sociobiology, 54(4):396–405, 2003.
[28] Julie L Morrison, Rainer Breitling, Desmond J Higham, and David R Gilbert. Generank: using
search engine technology for the analysis of microarray experiments. BMC bioinformatics,
6(1):1–14, 2005.

[29] Marc A Najork, Hugo Zaragoza, and Michael J Taylor. Hits on the web: How does it compare?
In Proceedings of the 30th annual international ACM SIGIR conference on Research and
development in information retrieval, pages 471–478, 2007.

[30] Jessica L Nielson, Shelly R Cooper, John K Yue, Marco D Sorani, Tomoo Inoue, Esther L
Yuh, Pratik Mukherjee, Tanya C Petrossian, Jesse Paquette, Pek Y Lum, et al. Uncovering
precision phenotype-biomarker associations in traumatic brain injury using topological data
analysis. PloS one, 12(3):e0169490, 2017.

[31] Jia-Yu Pan, Hyung-Jeong Yang, Christos Faloutsos, and Pinar Duygulu. Automatic multime-
dia cross-modal correlation discovery. In Proceedings of the tenth ACM SIGKDD international
conference on Knowledge discovery and data mining, pages 653–658, 2004.

[32] Jose A Perea and John Harer. Sliding windows and persistence: An application of topological
methods to signal analysis. Foundations of Computational Mathematics, 15(3):799–838, 2015.
[33] Giovanni Petri, Paul Expert, Federico Turkheimer, Robin Carhart-Harris, David Nutt, Peter J
Hellyer, and Francesco Vaccarino. Homological scaﬀolds of brain functional networks. Journal
of The Royal Society Interface, 11(101):20140873, 2014.

[34] Bastian Rieck, Ulderico Fugacci, Jonas Lukasczyk, and Heike Leitte. Clique community per-
sistence: A topological visual analysis approach for complex networks. IEEE transactions on
visualization and computer graphics, 24(1):822–831, 2017.

[35] Matteo Rucco, Lorenzo Falsetti, Damir Herman, Tanya Petrossian, Emanuela Merelli, Cinzia
Nitti, and Aldo Salvi. Using topological data analysis for diagnosis pulmonary embolism.
arXiv preprint arXiv:1409.5020, 2014.

[36] Michael T Schaub, Austin R Benson, Paul Horn, Gabor Lippner, and Ali Jadbabaie. Ran-
dom walks on simplicial complexes and the normalized hodge laplacian. arXiv preprint
arXiv:1807.05044, 2018.

[37] Thierry Sousbie. The persistent cosmic web and its ﬁlamentary structure–i. theory and im-
plementation. Monthly Notices of the Royal Astronomical Society, 414(1):350–383, 2011.
[38] Dane Taylor, Florian Klimm, Heather A Harrington, Miroslav Kram´ar, Konstantin Mis-
chaikow, Mason A Porter, and Peter J Mucha. Topological data analysis of contagion maps
for examining spreading processes on networks. Nature communications, 6:7723, 2015.

[39] KAIRUI GLEN Wang. The basic theory of persistent homology, 2012.
[40] Rien van de Weygaert, Gert Vegter, Herbert Edelsbrunner, Bernard JT Jones, Pratyush
Pranav, Changbom Park, Wojciech A Hellwing, Bob Eldering, Nico Kruithof, EGP Bos,
et al. Alpha, betti and the megaparsec universe: on the topology of the cosmic web. In
Transactions on computational science XIV, pages 60–101. Springer, 2011.

26

MINH QUANG LE AND DANE TAYLOR

[41] Dengyong Zhou, Jiayuan Huang, and Bernhard Sch¨olkopf. Learning from labeled and un-
labeled data on a directed graph. In Proceedings of the 22nd international conference on
Machine learning, pages 1036–1043, 2005.

[42] Afra Zomorodian. Fast construction of the vietoris-rips complex. Computers & Graphics,

34(3):263–271, 2010.

[43] Afra Zomorodian and Gunnar Carlsson. Computing persistent homology. Discrete & Com-

putational Geometry, 33(2):249–274, 2005.

Received xxxx 20xx; revised xxxx 20xx; early access xxxx 20xx.

E-mail address: minhquan@buffalo.edu
E-mail address: danet@buffalo.edu

