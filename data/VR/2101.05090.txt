A novel approach to ﬂuid-structure interaction
simulations involving large translation and
contact

Daniel Hilger, Norbert Hosters, Fabian Key, Stefanie Elgeti and Marek Behr

Abstract In this work, we present a novel method for the mesh update in ﬂow
problems with moving boundaries, the phantom domain deformation mesh update
method (PD-DMUM). The PD-DMUM is designed to avoid remeshing; even in the
event of large, unidirectional displacements of boundaries. The method combines
the concept of two mesh adaptation approaches: (1) The virtual ring shear-slip mesh
update method (VR-SSMUM); and (2) the elastic mesh update method (EMUM). As
in the VR-SSMUM, the PD-DMUM extends the ﬂuid domain by a phantom domain;
the PD-DMUM can thus locally adapt the element density. Combined with the
EMUM, the PD-DMUM allows the consideration of arbitrary boundary movements.
In this work, we apply the PD-DMUM in two test cases. Within the ﬁrst test case,
we validate the PD-DMUM in a 2D Poiseuille ﬂow on a moving background mesh.
Subsequently the ﬂuid-structure interaction (FSI) problem in the second test case
serves as a proof of concept. More, we stress the advantages of the novel method
with regard to conventional mesh update approaches.

1 Introduction

Many ﬂow phenomena in technical processes, e.g., ﬂows in liquid storage tanks,
valve and piston ﬂows, and in general all ﬂuid-structure interaction problems involve
moving boundaries. The moving boundaries cause topological changes of the ﬂuid
domain which are important to consider when solving the ﬂow problem.

The changes of the ﬂuid domain can be described either implicitly or explicitly
[3]. In the implicit description–also called interface capturing–the boundary defor-
mations are recorded on a ﬁxed background mesh. This strategy has the advantage

1
2
0
2

n
a
J

3
1

]

A
N
.
h
t
a
m

[

1
v
0
9
0
5
0
.
1
0
1
2
:
v
i
X
r
a

D. Hilger, N. Hosters, F. Key, S. Elgeti and M. Behr
Chair
Schinkelstraße 2, 52062 Aachen, {hilger}{hosters}{key}{elgeti}{behr}@cats.rwth-aachen.de

technical Systems RWTH Aachen University,

computational Analysis of

for

1

 
 
 
 
 
 
2

D. Hilger, N. Hosters, F. Key, S. Elgeti and M. Behr

that complex topology changes, e.g., breaking waves, can be resolved easily. Yet, the
treatment of discontinuities, conservation of mass, and the imposition of boundary
conditions are still challenging. Examples of interface-capturing methods are the
volume-of-ﬂuid method [5] or the level-set method [11]. In the explicit description–
called interface tracking–the domain deformations are described directly through
the movements of its boundaries. The mesh is restricted to the ﬂuid domain and
conforms with its boundaries. This ensures an accurate approximation of the ﬂuid
interface and allows the imposition of boundary conditions along the moving bound-
ary. However, every time the topology of the domain is changed, the mesh must be
adapted accordingly.

The straightforward approach to incorporate the domain deformation is remesh-
ing, but since remeshing is always connected to a projection of the solution between
the old and the new mesh conﬁgurations, it should be avoided if possible [9]. As an
alternative to remeshing, mesh update methods can be used, where the current mesh
is adapted to the changes of the domain.

Mesh update methods can be categorized into two groups: (1) Methods in which the
position of the mesh nodes are updated according to a predeﬁned deformation rule,
and (2) those where the mesh update is described by an additional set of equations
[17]. In order to implement mesh update methods based on a predeﬁned deformation
rule, the changes of the ﬂuid must be known in advance. If this is not the case, the
mesh update must be described by an additional equation. One of the most commonly
used methods of this type is the elastic mesh update method (EMUM) introduced
in [9]. Therein, the mesh is treated as an elastic body that deforms according to the
motion of its boundaries. For boundary movements that result in strongly constricted
or expanded parts of the initial mesh, as it happens for example in valve ﬂows, a
mesh update will not provide a satisfactory solution. This is because the existing
mesh cells are either heavily squished or stretched. In this case, remeshing of the
ﬂuid domain becomes inevitable..

In order to avoid the need for remeshing, we propose a new mesh deformation
method for large unidirectional mesh movements on boundary conforming meshes.
Therefore, we combine the EMUM and the recently introduced virtual ring shear-slip
mesh update method (VR-SSMUM) [10]. The basic idea is here to perform the mesh
update by means of the EMUM, but allow additional mesh cells to enter or exit the
ﬂuid domain. Thus, the squeezing and the stretching of mesh cells is prevented by the
possibility to increase or decrease the local number of ﬁnite elements (FE). The new
method is employed in conjunction with the deforming-spatial-domain/stabilized
space-time (DSD/SST) approach [15], which is used to solve the ﬂow problem on
the changing domain.

The structure of this paper is as follows: In Section 2, we provide the governing
equations of the ﬂow problems we want to consider in the scope of this work. Fur-
ther, we brieﬂy summarize the DSD/SST method and the EMUM. The concept and

The phantom domain deformation mesh update method

3

the implementation of the new mesh update method are explained in Section 3. In
Section 4, the validation and testing of the mesh update method is discussed by
means of two test cases.

2 Governing equations of ﬂuid dynamics

The proposed mesh update method is developed speciﬁcally for ﬂow problems with
boundary conforming meshes involving large unidirectional boundary movements.
In this section, we present the governing equations of the ﬂow problems examined
within this work and further, we give a brief summary on the numerical methods
employed to solve them.

2.1 Governing equations of ﬂuid dynamics

Consider an incompressible ﬂuid covering the deformable ﬂuid domain Ω 𝑓
𝑡 ⊂ R𝑛𝑠𝑑 ,
with 𝑛𝑠𝑑 indicating the number of spatial dimensions. At every time instant 𝑡 ∈ [0, 𝑇],
the ﬂuid’s unknown velocity u(x, 𝑡) and pressure 𝑝(x, 𝑡) are governed by the Navier-
Stokes equations for incompressible ﬂuids:

𝜌 𝑓

𝜕u 𝑓
𝜕𝑡

(cid:18)

+ u 𝑓

· ∇u 𝑓 − f 𝑓

(cid:19)

− ∇ · 𝝈 𝑓 = 0

on Ω 𝑓

𝑡 , ∀𝑡 ∈ (0, 𝑇) ,

∇ · u 𝑓 = 0

on Ω 𝑓

𝑡 , ∀𝑡 ∈ (0, 𝑇) ,

(1a)

(1b)

with 𝜌 𝑓 denoting the ﬂuid density and f 𝑓 representing all external body forces per
unit mass. For Newtonian ﬂuids, the stress tensor 𝝈 𝑓 is deﬁned as

with

𝝈 𝑓 = −𝑝 𝑓 I + 2𝜌 𝑓 𝜈 𝑓 𝜺 𝑓 (u 𝑓 ),

𝜺 𝑓 (u 𝑓 ) = 1
2 (cid:18)

∇u 𝑓 +

∇u 𝑓

(cid:16)

𝑇

(cid:17)

,

(cid:19)

(2)

(3)

where 𝜈 𝑓 denotes the dynamic viscosity. A well-posed system is obtained when
boundary conditions are imposed on the external boundary Γ 𝑓
𝑡 . Here, we distinguish
between Dirichlet and Neumann boundary conditions given by:

u 𝑓 = g 𝑓

n 𝑓

· 𝝈 𝑓 = h 𝑓

on Γ 𝑓
on Γ 𝑓

𝑡 ,𝑔,
𝑡 ,ℎ,

(4a)

(4b)

4

D. Hilger, N. Hosters, F. Key, S. Elgeti and M. Behr

where g 𝑓 and h 𝑓 prescribe the velocity and stress values on complementary subsets
of Γ 𝑓
in time, the DSD/SST
method is applied to solve the Navier-Stokes equations.

𝑡 . With regard to deformation of the ﬂuid domain Ω 𝑓

𝑡

2.2 Deforming-spatial-domain/stabilized space-time method

The DSD/SST method is a space-time-based ﬁnite-element (FE) method, i.e., a FE
discretization is applied to space and time. It was ﬁrst applied to ﬂow problems with
moving boundaries in [15, 16].

The advantage of the DSD/SST method is, that the variational form of the gov-
erning equations implicitly incorporates the deformations of the domain. In order
to construct the interpolation and weighting function spaces used in the variational
formulation of the problem, the time interval (0, 𝑇) is split into 𝑁 subintervals
𝐼𝑛 = [𝑡𝑛, 𝑡𝑛+1], where 𝑡𝑛 and 𝑡𝑛+1 belong to an ordered series of time levels. Thus,
the space-time continuum is divided into 𝑁 space-time slabs 𝑄𝑛 as depicted in Figure
1, bounded by the spatial conﬁgurations Ω𝑡 at time 𝑡𝑛 and 𝑡𝑛+1, and 𝑃𝑛 describing the
course of the spatial boundary Γ 𝑓
𝑡 as 𝑡 traverses 𝐼𝑛. The boundary 𝑃𝑛 can be decom-

t

y

Pn

Pn

Qtn+1

Qtn

x

Fig. 1 Space-time slab.

posed into two complementary subsets (𝑃𝑛)𝑔 and (𝑃𝑛)ℎ, representing the Dirichlet
and Neumann boundary conditions of Γ 𝑓
𝑡 ∀𝑡 ∈ 𝐼𝑛. The space-time slabs are weakly
coupled along their interfaces using jump terms. For the spatial approximation Ω 𝑓
𝑡 ,ℎ
of the domain Ω 𝑓
𝑡 , the following ﬁnite element trial and weighting function spaces
are constructed:

The phantom domain deformation mesh update method

H 1ℎ (𝑄𝑛) :=
𝑢 :=
Sℎ

V ℎ :=

(cid:8)

n

wℎ ∈ H 1 (𝑄𝑛)
uℎ |uℎ ∈

wℎ
𝑇
(cid:12)
(cid:12)
H 1ℎ (𝑄𝑛)
(cid:12)
(cid:12)

is a ﬁrst-order polynominal ∀𝑇 ∈ T ℎ
𝑛𝑠𝑑

wℎ |wℎ ∈

(cid:2)

(cid:3)
H 1ℎ (𝑄𝑛)

𝑛𝑠𝑑

n
= V ℎ

𝑝 :=

Sℎ
𝑝

(cid:2)

𝑞ℎ |𝑞ℎ ∈ H 1ℎ (𝑄𝑛)

.

(cid:3)

, uℎ = g on (𝑃𝑛)𝑔

o
, wℎ = 0 on (𝑃𝑛)𝑔

,

,

o

(cid:9)

5

,

(5a)

(5b)

(5c)

(5d)

The interpolation functions are globally continuous in space, but discontinuous in
time. Using the following notational convention,

(cid:8)

(cid:9)

uℎ

(cid:16)

±

𝑛

(cid:17)

· · · d𝑄 =

= 𝑙𝑖𝑚
𝜖 →0

u (𝑡𝑛 ± 𝜖)

· · · dΩd𝑡,

∫𝐼𝑛 ∫Ω𝑡

∫𝑄𝑛

· · · d𝑃 =

∫( 𝑃𝑛)

∫𝐼𝑛 ∫Γ𝑡

· · · dΓd𝑡,

(6a)

(6b)

(6c)

and following references [15, 8, 12], the stabilized variational formulation of the
= u0, ﬁnd uℎ ∈ Sℎ
Navier Stokes equations is obtained: Given
u
u , ∀𝑞 ∈ V ℎ
𝑝 such that ∀wℎ ∈ V ℎ
and 𝑝ℎ ∈ Sℎ
𝑃 :
(cid:0)

−
𝑛 with

uℎ

uℎ

−
0

(cid:0)

(cid:1)

(cid:1)

wℎ · 𝜌 𝑓

∫𝑄𝑛

𝜕uℎ
𝜕𝑡

(cid:18)

+ u · ∇ · uℎ − f

d𝑄 +

(cid:19)

∫𝑄𝑛

∇wℎ : 𝝈( 𝑝ℎ, uℎ)d𝑄

𝑞ℎ∇ · uℎd𝑄 +

+

∫𝑄𝑛

𝑛𝑒𝑙

wℎ

+

𝑛

(cid:17)

· 𝜌 𝑓

uℎ

(cid:16)(cid:16)

+

𝑛

(cid:17)

−

uℎ

(cid:16)

−

𝑛 (cid:17)

(cid:17)

dΩ

∫Ω𝑛 (cid:16)

1
𝜌 𝑓

+

𝑛

Õ𝑒=1 ∫𝑄𝑒
𝜕uℎ
𝜕𝑡

𝜌 𝑓

·

(cid:20)

(cid:18)

+ u · ∇ · uℎ − f

𝜏𝑀 𝑂𝑀

𝜌 𝑓 uℎ · ∇wℎ + ∇𝑞ℎ

(cid:2)

− ∇ · 𝝈( 𝑝ℎ, uℎ)

(cid:19)

(cid:3)

dΩ

(cid:21)

𝑛𝑒𝑙

+

Õ𝑒=1 ∫𝑄𝑒

𝑛

∇ · wℎ 𝜌 𝑓 𝜏𝐶𝑂𝑁 𝑇 ∇ · uℎdΩ

=

∫( 𝑃𝑛) ℎ

wℎ · hℎd𝑃.

(7)

In Equation (7), the ﬁrst three terms and the last term directly result from the
variational formulation of Equation (1), whereas the fourth term denotes the jump
terms between the space-time slabs. Terms ﬁve and six result from a Galerkin-Least
Squares (GLS) stabilization applied to the Navier-Stokes equations. The stabilization
approach used within this work and the choice of the stabilization parameters 𝜏𝐶𝑂𝑁 𝑇
and 𝜏𝑀 𝑂𝑀 are described in detail in [12].

Though the DSD/SST method implicitly accounts for the domain deformations in

6

D. Hilger, N. Hosters, F. Key, S. Elgeti and M. Behr

one time slab, a deformation rule is needed to deform the FE mesh according to the
boundary movements.

2.3 Elastic mesh update method

One approach for the automatic mesh update in boundary conforming meshes is the
elastic mesh update method (EMUM) introduced by [9], where the mesh is under-
stood as an elastic body occupying the bounded region Ω# ⊂ R𝑛𝑠𝑑 with boundary Γ#.
Thus, the deformation of the mesh is expressed in terms of the nodal displacements
d# governed by the equilibrium equation of elasticity:

where 𝝈# corresponds to the Cauchy stress tensor,

∇ · 𝝈# = 0,

𝝈# = 𝜆

𝑡𝑟𝝐 #

I + 2𝜇𝝐 # ,

(cid:16)

(cid:17)

𝝐 # = 1

2 (cid:18)

∇d# +

∇d#

(cid:16)

𝑇

(cid:17)

.

(cid:19)

(8)

(9)

The imposition of Dirichlet and Neumann boundary conditions yields a well-posed
problem for the mesh deformation:

d# = g#
n · 𝝈# = h#

on (Γ)#
𝑔 ,
on (Γ)#
ℎ ,

(10)

(11)

where g# and h# prescribe the displacements and normal stresses on the mesh bound-
aries.

The elasticity problem is solved with the Galerkin FE method and the resulting
displacements are applied to the mesh nodes representing the upper mesh conﬁgu-
ration of the current space-time slab.

3 The phantom domain mesh deformation method

The aim of the newly proposed method is to extend the usability of boundary-
conforming meshes for deforming domains with large, unidirectional deformations.
The speciﬁc target are applications with large, unidirectional deformations (imagine
an object sinking within a ﬂuid or the ﬂow through a valve). So far, the ﬂuid domain
is enclosed within two types of boundaries: (1) deforming, and (2) ﬁxed. The de-
forming boundaries are handled in a standard interface tracking way, meaning that
the boundary deforms according to its relevant deformation rule – e.g., determined
by the structure in an FSI context or a free-surface motion – while the inner nodes
adapt to this motion. As depicted in Figure 2, a predominantly unidirectional defor-

The phantom domain deformation mesh update method

7

mation, however, soon results in a situation where one side of the mesh contains very
compressed elements, whereas the other side is comprised of very stretched elements.

In our proposed method, this is counteracted via the implementation of a new
boundary condition that allows mesh cells to exit and enter the ﬂuid domain as
needed. The implementation of this boundary condition is based on the concept of
the VR-SSMUM presented in [10]. As with the VR-SSMUM, the mesh is extended
by additional mesh cells. As sketched in Figure 2, these cells are positioned in a
phantom domain which is located outside of the ﬂuid domain. In the following we
will therefore refer to this method as the phantom domain deformation mesh update
method (PD-DMUM).

Ωf

t+n

Ωf

t+n

ΓI

domain deformation

ΓI

ΓI

ΓI

M
U
M
E

M
U
M
D
D
P

-

phantom domain

Ωf
t

phantom domain

Ωf

t+n

phantom domain

Fig. 2 Mesh deformation with PD-DMUM vs. EMUM

Since not all mesh cells are positioned within the ﬂuid domain, an activity pattern,
as illustrated in Figure 3, is used to determine which elements are used in the com-
putation of the ﬂow problem. Here, elements that intersect with the ﬂuid domain are
considered as activated elements whereas the remaining elements are deactivated.
Activated and deactivated elements have a common interface Γ𝐼 . The interface is
a boundary of the ﬂuid domain, which requires the deﬁnition of boundary values.
The boundary value prescribed at the element nodes of the interface is of a new
boundary type. The element nodes associated with the new boundary type have the
special characteristic that they prescribe boundary values to the ﬂow problem, but
function as internal nodes in the mesh update method. Consequently, the mesh of
the phantom domain and the ﬂuid domain are considered as one coherent mesh in
the mesh deformation process.

Now that the mesh is deformed according to the underlying deformation rule, ele-

8

D. Hilger, N. Hosters, F. Key, S. Elgeti and M. Behr

Shift of ΓI

ΓP F /ΓI

ΓI /ΓP F

ΓI /ΓP F

ΓI /ΓP F

active elements

active mesh cells

deactivated mesh cells

interface ΓI

Ωf
t

ﬂuid boundary ΓP F

Fig. 3 Activity pattern on mesh with initial and corrected course of interface Γ𝐼 .

ments from the phantom domain can slide across the prescribed ﬂuid boundary Γ𝑃𝐹
into the ﬂuid domain or vice versa. This changes the composition of elements that
intersect with the ﬂuid domain, so that the activity pattern of the elements must be
re-determined. In the space-time approach used here, one space-time slab is bounded
by two diﬀerent mesh conﬁgurations. This can lead to the situation shown in Figure
4a, where an element is located inside the ﬂuid domain on the upper time level, yet
positioned outside at the lower time level. Therefore, we deﬁne here that the mesh
conﬁguration at the upper time level always determines which elements represent the
ﬂuid domain. Based on the updated activity pattern, the new location of the interface
Γ𝐼 is determined within the mesh. The position of Γ𝐼 usually does not correspond
to the position of the predeﬁned ﬂuid boundary Γ𝑃𝐹 .

−
Ωt
n
#

−
Ωt
n
#

−
Ωt
n
F

Ωt+

n
F

−
t
n+1
F

Ω

−
Ωt
n
F

Ωt+

n
F

−
t
n+1
F

Ω

t−
n

t+
n

−
n+1

t

t−
n

t+
n

−
n+1

t

Qn+1
(a) uncorrected boundary Γ𝐼 .

Qn+1
(b) corrected boundary Γ𝐼 .

Fig. 4 Shifting of Γ𝐼 for boundary conformity in space-time slab.

The boundary conformity of the mesh for Γ𝑃𝐹 is now obtained by a closest point
projection of all mesh nodes on Γ𝐼 to the prescribed contour of the ﬂuid boundary.
It is important to note the special case of those elements which were not yet part

The phantom domain deformation mesh update method

9

of the ﬂuid discretization in the previous time step, because these elements require
a projection of the old solution onto the new boundary nodes. This is necessary to
calculate the jump terms in Equation (1). This means that the new method does not
require remeshing, yet the projection between two mesh conﬁgurations cannot be
completely avoided. However, the projection is limited to single elements when they
enter the ﬂuid domain.

The sequence of the individual steps within the PD-DMUM can be summarized
as follows:

1. Update mesh according to moving boundaries.
2. Identify activated and deactivated elements.
3. Adapt the boundaries to the prescribed position of the ﬂuid domain.
4. Set boundary values for the nodes on the redeﬁned interface Γ𝐼 .
5. Project the solution of the previous time step for all newly activated elements.
6. Solve ﬂow problem on active elements.

In direct comparison with a conventional update strategy for boundary conforming
meshes, such as the EMUM, steps (2)–(5) are those which are additionally required.

Depending on the boundary movements, the PD-DMUM can be complemented
with additional mesh update strategies. In case of large unidirectional boundary
movements, we can employ the concept of the virtual ring presented in [10]. The
objective of the virtual ring is to reduce the size of the phantom domain in the mesh
update. For this purpose, we connect the mesh along the outward facing boundaries
of two oppositely positioned phantom domains. This connection results in a coher-
ent mesh, forming a virtual ring as illustrated in Figure 5. The mesh update can
now transfer elements between the connected phantom domains, while moving them
along the virtual ring. Consequentially, elements can exit the ﬂuid domain on one
side and re-enter the domain on the other side. Therefore, the phantom domains can
be reduced to a thin layer of elements. The reduction of the phantom domains results
in a signiﬁcant decrease of computational cost for the mesh deformation problem.

4 Computational results

The implementation of the PD-DMUM is applied to two test cases. In a ﬁrst step,
we validate the mesh update method by examining its inﬂuence on the solution of
a two dimensional Poiseuille ﬂow. In the second test case we show, by means of an
example from the ﬁeld of FSI, the advantages of the PD-DMUM.

10

D. Hilger, N. Hosters, F. Key, S. Elgeti and M. Behr

element transfer

Γshif t

ΓP F

ΓP F

deactivated virtual region

activated ﬂuid domain ΩF

ΓT

Fig. 5 Illustration of the virtual ring concept.

4.1 2D Poiseuille ﬂow on moving background mesh

In the ﬁrst test case we examine the inﬂuence of the PD-DMUM on a ﬂow prob-
lem with a well-known solution. For this purpose, we consider a two-dimensional
Poiseuille ﬂow in a tube. The topology of the ﬂuid domain remains unchanged, yet
a predeﬁned motion is applied to the underlying mesh. The PD-DMUM is used to
perform the mesh update, but should not aﬀect the ﬂow ﬁeld within the tube.

The geometric dimensions of the tube are chosen according to Figure 6. In the
middle of the domain, we position a mesh section Γ𝑇 by means of which the prede-
ﬁned mesh motion is imposed as a Dirichlet boundary condition. The boundary Γ𝑇
has no physical impact with respect to the ﬂow problem. The additional phantom
domains required within the PD-DMUM are positioned along the upper and lower
boundary of the tube. The material properties of the ﬂuid are chosen according to
Table 1. Regarding boundary conditions of the ﬂow, we impose no-slip condition

Parameter
density
viscosity
mean velocity

Identiﬁer
𝜌
𝜈
𝑈

Value
1.0 [kg/m3]
0.001 [kg/m·s]
2.5 [m/s]

Table 1 Properties of ﬂuid in 2D Poiseuille ﬂow.

along the walls of the tube. This also applies to the boundary section Γ𝑃𝐹 at the
interface between the phantom domain and the ﬂuid domain. A parabolic inﬂow
proﬁle for the velocity is given at the inlet of the tube:

The phantom domain deformation mesh update method

1.0 m

0.2 m

deactivated elements

(0,0)

0.5 m

Fig. 6 Tube geometry for Poiseuille ﬂow.

ΓP F

ΓT

ΓP F

1.2 m

u(𝑦) =

4𝑈𝑦(𝐻 − 𝑦)
𝐻2

(cid:18)

, 0

.

(cid:19)

active domain

0.5 m

11

0.20 m

0.40 m

0.20 m

(12)

With respect to the mesh update, the position of the nodes at the inlet, the outlet,
and the tube walls are ﬁxed. However, this does not apply to Γ𝑃𝐹 and the remaining
boundaries of the phantom domain, as these nodes should be able to move freely.
For the boundary Γ𝑇 we prescribe the following sinusoidal movement:

d(𝑡) =

(cid:18)

0 , 0.1 · sin

2 𝜋 𝑡
𝑇 (cid:19) (cid:19)

(cid:18)

.

(13)

The mesh deformation is examined for a period of 𝑇 = 8[s]. The time step size is
Δ𝑡 = 0.02 [s]. Initially, a fully developed ﬂow proﬁle is already present in the pipe.

The Poiseuille ﬂow is computed on four mesh conﬁgurations with the PD-DMUM
and for the purpose of comparison for one conﬁguration by the EMUM. For the
comparison of the solutions we use the ﬂow velocity. The velocity is measured at a
probe positioned at point (1.1 , 0.2) inside the tube. Together with the given analyti-
cal solution of the Poiseille ﬂow, the relative error can be computed for the diﬀerent
mesh conﬁgurations.

In a ﬁrst step, the relative error of the computed velocity is evaluated for the probe
position. In Figure 7 it can be observed that the relative error decreases as the mesh
is reﬁned. The comparison between the solution of the EMUM and the PD-DMUM
on similar grids shows that the relative error for the calculated velocity is of the
same order of magnitude. The ﬂuctuations that can be observed for all computations
can be explained by the linear interpolation of the parabolic velocity proﬁle at the
probe position. In Figure 8, we can observe that the numerical solution converges
for the PD-DMUM towards the analytic solution of the Poiseuille problem. Both,
the convergence of the PD-DMUM and the comparable results to the EMUM for
moderate mesh deformations indicate that the PD-DMUM provides a valid mesh
update.

12

D. Hilger, N. Hosters, F. Key, S. Elgeti and M. Behr

20 k elements
·10−2

5 k elements

1 k elements

20 k elements with simple EMUM

r
o
r
r
E
e
v
i
t
a
l
e
R

1.5

1

0.5

0

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

Time [s]

Fig. 7 Relative error of velocity at probe position.

10−2

10−3

1

2

10−4

103

r
o
r
r
E
e
v
i
t
a
l
e
R

104
Number of Elements

105

Fig. 8 Average relative error for diﬀerent mesh resolutions.

4.2 Falling ring in a ﬂuid-ﬁlled container

The second test case is used to illustrate possible applications of the PD-DMUM.
For this purpose, we consider a ﬂuid-structure interaction with large translational
boundary movement. More precisely, we simulate an elastic ring that falls inside
a ﬂuid-ﬁlled container until it hits the ground and rebounds. Concerning the mesh
deformation, this is a demanding process, since the number of mesh cells, which
are initially positioned between the ring and the bottom, must be reduced to zero
by the time of contact. Using previous mesh update methods it is not possible to
simulate this process on boundary conforming meshes without frequent remeshing
of the ﬂuid domain.

The phantom domain deformation mesh update method

13

The geometric dimensions of the container and the ring are chosen according to
Figure 9. The ring is represented by a non-uniform rational B-spline (NURBS) [13]
with 721 elements and second-order basis functions. In total 13448 elements are
used to discretize the ﬂuid domain and the additional phantom domains. In the ﬂow
problem no-slip conditions are prescribed along the walls and the bottom of the
container, whereas the top of the container is assumed to be open. The ﬂuid velocity
at the ring surface corresponds to the structural velocity. In terms of the mesh defor-
mation problem the mesh nodes on the container and walls of the phantom domains
are restricted to a vertical movement. The structural deformation is prescribed as a
Dirichlet value for the ring boundary.

phantom domain

0.4 m

0.75 m

0.16 m

0.08 m

1.0 m

phantom domain

0.4 m

1.0 m

0.5m

Fig. 9 Geometry of container with ring.

The FSI problem is solved in a partitioned solution approach [4]. On the structural
side, the deformation of the ring are represented by a linear elastic problem solved
with isogeometric analysis (IGA) [7]. The contact interaction between the ring and
the bottom of the container is considered via the penalty method [14]. The ﬂow ﬁeld
induced by the motion of the ring is described by the Navier-Stokes equations which
are solved by the DSD/SST approach in combination with the presented PD-DMUM.
The two ﬁeld problems are strongly coupled in time [17], and for the spatial coupling
we apply a NURBS-based coupling following [6].

In Figures 10 to 13, we present snapshots of the simulation at diﬀerent points in
time, starting from the initial position of the ring, via the moment when the ring is in
contact with the bottom of the container, up to the point of maximal altitude after the
ﬁrst contact interaction. As it can be guessed from the snapshot in Figure 12, one ele-
ment remains between the bottom of the container and the falling ring. This element

14

D. Hilger, N. Hosters, F. Key, S. Elgeti and M. Behr

will not be removed because we cannot exactly comply with the contact conditions
using the penalty method. Nevertheless, it can be observed in every snapshot, that
mesh cells experience large displacements but only little deformations. Due to the
application of the PD-DMUM, the entire FSI problem was solved without remeshing.

Fig. 10 Velocity at 𝑡 = 0 s.

Fig. 11 Velocity at 𝑡 = 0.55 s.

Fig. 12 Velocity at 𝑡 = 0.75 s.

Fig. 13 Velocity at 𝑡 = 1.0 s.

Fig. 13 Velocity at 𝑡 = 1.45 s.

The phantom domain deformation mesh update method

15

5 Discussion

In this paper, we presented a novel approach for the mesh update of boundary
conforming meshes, particularly developed for problems with large unidirectional
boundary movements, the PD-DMUM. Subsequent to the description, we evaluated
the PD-DMUM in two test cases. In the ﬁrst test case we showed by means of a
Poiseuille ﬂow the general agreement of the PD-DMUM with results of consisting
methods. In the ﬂuid-structure interaction problem presented in the second test case
we emphasised the applicability of the PD-DMUM in complex processes with mov-
ing boundaries.

Both test cases yielded consistently good results. Although, the PD-DMUM still
requires interpolation at single element nodes, it meets its two major challenges: (1)
Even in complex processes as structural contact, remeshing of the domain is entirely
avoided, and (2) the computed solution of the ﬂow problems is in accordance with
solutions computed by conventional mesh update methods.

In summary we successfully introduced a new mesh update approach, where the
ﬁrst test cases congruently showed good results. Further this method bears potential
for problem speciﬁc improvements of the computational eﬀort, by combination of
the PD-DMUM with the virtual ring or other mesh update approaches that reduce
the deforming mesh area.

Acknowledgements This work was supported by the German Research Foundation under the
Cluster of Excellence "Integrative production technology for high-wage countries" (EXC128) as
well as the German Research Foundation under the Cluster of Excellence "Internet of Production".
Computing resources were provided by the AICES graduate school and RWTH Aachen University
Center for Computing.

References

1. F. Alauzet: Eﬃcient moving mesh technique using generalized swapping. Proceedings of the

21st International Meshing Roundtable. Springer, Berlin, Heidelberg, 17–37 (2003).

2. J.T. Batina: Unsteady Euler airfoil solutions using unstructured dynamic meshes. AIAA jour-

nal, vol. 28, 1381–1388 (1990).

3. S. Elgeti, and H. Sauerland: Deforming ﬂuid domains within the ﬁnite element method:
ﬁve mesh-based tracking methods in comparison. Archives of Computational Methods in
Engineering, vol. 23, 323–361, (2016).

4. C.A. Felippa, K.C. Park, and C. Farhat: Partitioned analysis of coupled mechanical systems.
Computer methods in applied mechanics and engineering, vol. 190, 3247–3270 (2001).
5. C.W. Hirt, and B.D. Nichols: Volume of ﬂuid (VOF) method for the dynamics of free bound-

aries. Journal of computational physics, vol. 39 201–225 (1981).

16

D. Hilger, N. Hosters, F. Key, S. Elgeti and M. Behr

6. N. Hosters, J. Helmig, A. Stavrev, M. Behr, and S. Elgeti: Fluid-Structure Interaction with
NURBS-Based Coupling. Computer Methods in Applied Mechanics and Engineering, vol.
332 520-539 (2018).

7. T.J.R. Hughes, J.A. Cottrell, and Y. Bazileves. Isogeometric analysis: CAD, ﬁnite elements,
NURBS, exact geometry and mesh reﬁnement. Computer Methods in Applied Mechanics and
Engineering, vol. 194, 4135–4195 (2005).

8. T.J.R. Hughes, L.P. Franca, and G.M. Hulbert: A new ﬁnite element formulation for com-
putational ﬂuid dynamics: VIII. The Galerkin/least-squares method for advective-diﬀusive
equations. Computer Methods in Applied Mechanics and Engineering, vol. 73, 173–189
(1989).

9. A.A. Johnson, and T.E. Tezduyar: Mesh update strategies in parallel ﬁnite element compu-
tations of ﬂow problems with moving boundaries and interfaces. Computational Methods in
Applied Mechanical Engineering, vol. 119 73–94 (1994).

10. F. Key, L. Pauli, and S. Elgeti: The Virtual Ring Shear-Slip Mesh Update Method. Computer

and Fluids, vol. 172, 352–361 (2018).

11. S. Osher, and J.A. Sethian: Fronts propagating with curvature-dependent speed: algorithms
based on Hamilton-Jacobi formulations. Journal of computational physics, vol. 79 12–49
(1988).

12. L. Pauli, and M. Behr: On stabilized space-time FEM for anisotropic meshes: Incompressible
Navier–Stokes equations and applications to blood ﬂow in medical devices. International
Journal for Numerical Methods in Fluids, vol. 85, 189–209 (2017).
13. L. Piegl, and W. Tiller: The NURBS book. Springer, Berlin, (1997).
14. I. Temizer, P. Wriggers, and T.J.R. Hughes: Contact Treatment in Isogeometric Analysis with
NURBS". Computer Methods in Applied Mechanics and Engineering vol. 200, 1100–1112
(2011).

15. T.E. Tezduyar, M. Behr, and J. Liou: A new strategy for ﬁnite element computations involving
moving boundaries and interaces – the deforming-spatial-domain/space-time procedure: I The
concept and the preliminary numerical tests. Computational Methods in Applied Mechanical
Engineering, vol. 94, 339–351 (1992).

16. T.E. Tezduyar, M. Behr, S. Mittal, and J. Liou: A new strategy for ﬁnite element computations
involving moving boundaries and interaces – the deforming-spatial-domain/space-time proce-
dure: II Computations of free-surface ﬂows, two-liquid ﬂows, and ﬂows with drifting cylinders.
Computational Methods in Applied Mechanical Engineering, vol. 94, 353–371 (1992).
17. W.A. Wall: Fluid-Struktur-Interaktionen mit stabilisierten Finiten Elementen". Institut für

Baustatistik der Universität Stuttgart, (1999).

18. L. Wang, and PO. Persson: A high-order discontinuous Galerkin method with unstructured
space-time meshes for two-dimensional compressible ﬂows on domains with large deforma-
tions. Computers & Fluids, vol. 118, 53–68 (2015).

