© 2022 IEEE. This is the author’s version of the article that has been published in IEEE Transactions on Visualization and
Computer Graphics. The ﬁnal version of this record is available at: xx.xxxx/TVCG.201x.xxxxxxx/

Strolling in Room-Scale VR: Hex-Core-MK1 Omnidirectional
Treadmill

Ziyao Wang, Chiyi Liu, Jialiang Chen, Yao Yao, Dazheng Fang, Zhiyi Shi,
Rui Yan, Yiye Wang, KanJian Zhang, Hai Wang, Haikun Wei*

2
2
0
2

r
p
A
8
1

]

C
H
.
s
c
[

1
v
7
3
4
8
0
.
4
0
2
2
:
v
i
X
r
a

Fig. 1. The left picture shows the complete Hex-Core-MK1 system and the right 4 pictures show the working status of the user walking
along different directions. HCMK1 allows user to explore the inﬁnite virtual world naturally in a small room without space constraints.

Abstract— The natural locomotion interface is critical to the development of many VR applications. For household VR applications,
there are two basic requirements: natural immersive experience and minimized space occupation. The existing locomotion strategies
generally do not simultaneously satisfy these two requirements well. This paper presents a novel omnidirectional treadmill (ODT)
system, named Hex-Core-MK1 (HCMK1). By implementing two kinds of mirror symmetrical spiral rollers to generate the omnidirectional
velocity ﬁeld, this proposed system is capable of providing real walking experiences with a full-degree of freedom in an area as small
as 1.76 m2, while delivering great advantages over several existing ODT systems in terms of weight, volume, latency and dynamic
performance. Compared with the sizes of Inﬁnadeck and HCP, the two best motor-driven ODTs so far, the 8 cm height of HCMK1 is
only 20% of Inﬁnadeck and 50% of HCP. In addition, HCMK1 is a lightweight device weighing only 110 kg, which provides possibilities
of further expanding VR scenarios, such as terrain simulation. The latency of HCMK1 is only 23ms. The experiments show that HCMK1
can deliver on a starting acceleration of 16.00 m/s2 and a braking acceleration of 30.00 m/s2.

Index Terms—Omnidirectional Treadmill, Locomotion Devices, Locomotion Interfaces, Room-Scale VR

1 INTRODUCTION

With the development of virtual reality technology in recent years, the
science ﬁction world in movies has gradually become a reality [41].In
2016, the virtual reality (VR) industry enjoyed a big explosion; then in
2017 and 2018, however, the industry’s bubbles went into burst, mainly
due to such reasons as high prices of equipment, dearth of content and
imperfect user experience (UX) [5, 21, 35]. The natural locomotion
interface (NLI) [14, 18, 45, 50] is one of the subdivisions about the user
experience in VR. Currently, limited by natural locomotion, most of the
VR scenes are restricted to a ﬁxed location or a small-scale local area,
also compromising the richness of content. Problems with NLI have
become a bottleneck for the development of many VR applications.
Household VR applications often have to achieve natural locomotion in
VR within a small physical space when trying to completely immerse
users in the VR world. Deploying a small NLI solution with an im-
mersive locomotion experience is crucial for further advancing the VR
industry.

• Ziyao Wang, Chiyi Liu, Jialiang Chen, Yao Yao, Dazheng Fang, Zhiyi Shi,
Rui Yan, Yiye Wang, KanJian Zhang and Haikun Wei are at Southeast
University, China. E-mail: {zy wang|cy liu|chenjialiang|yaoyao|
fangdazheng|shizhiyi|yan rui|wangyiye|kjzhang|hkwei}@seu.edu.cn

• Hai Wang is at Saint Mary’s University, Canada, E-mail: hwang@smu.ca.
• Haikui Wei is the corresponding author.
Manuscript received xx xxx. 201x; accepted xx xxx. 201x. Date of Publication
xx xxx. 201x; date of current version xx xxx. 201x. For information on
obtaining reprints of this article, please send e-mail to: reprints@ieee.org.
Digital Object Identiﬁer: xx.xxxx/TVCG.201x.xxxxxxx

The NLI problem has been extensively studied. Several strategies
based on different principles have been proposed, such as the controller-
based methods, the walking in large space methods, the walking in
place methods, the redirected walking methods and the omnidirectional
treadmill(ODT) methods [1]. Although these strategies can provide
locomotion in VR, most cannot guarantee a reasonably good UX. The
main limitations include motion sickness, low degree of freedom, high
latency, and occupies a lot of space.

For example, one simple controller-based locomotion method uses
the controller, such as the touchpad, to control the movement in the
virtual environment (VE), just like the classic control method “WASD”1
or joystick in computer games. It can lead to a serious 3D motion
sickness [24–26] due to the conﬂict between visual perception and inner
ear perception [27]. Another controller-based method is teleportation
[25]. The limitation includes the lack of awareness on the intermediate
path, which will affect the body’s positioning of the current location
and led to getting lost. Besides, the user may have to repeat additional
operations to arrive at a proper position when they are reaching an
object.

The Walk-in-place (WiP) methods replace natural walking with
some speciﬁed actions, such as arm swinging [34, 55], jogging [13, 23,
30, 33], etc. Since the WiP methods have the process of simulating
walking, their UX is better than that of the handheld controller-based
methods [13, 49, 55]. Generally, each proxy action can represent only
one orientation movement. Basic movements like forward, backward
and lateral movements (right and left) [52] will need 4 proxy actions.
Different orientation movements usually take the current view direction
as a reference to apply different proxy actions [48]. Hence, it’s difﬁcult

1https://en.wikipedia.org/wiki/WASD

1

 
 
 
 
 
 
for users to move in a straight line when looking around. In addition, the
starting and stopping latency is a challenge for the WiP methods [12,47],
i.e., how long it takes the VR locomotion to start or stop after the user
takes a step or stops their steps, or, to put it simply, the latency between
the VR scene and the user’s actual intended locomotion. Latency in
WiP is the result of adding a low-frequency ﬁlter or increasing the
detection threshold in the data process, which aims to improve the
detection accuracy and reduce the false triggers [12, 54]. For example,
the ﬁrst proposed WiP method [42] does not start the VR locomotion
until 4 consecutive steps had been taken. VR-STEP [49] averages every
5 samples to ﬁlter the signal, and the latency is about 100ms to 200ms.
LLCM-WIP [12] chooses a cut-off frequency of 5Hz, which adds about
100ms of latency to both starting and stopping. After applying offsetting
operation, the ﬁnal starting latency reaches 138ms and the stopping
latency of 96ms. Generally, the WiP methods seek a compromise
between false triggers and latency which are inevitable and difﬁcult to
eliminate.

Moving in VE with our own legs is the most natural way of lo-
comotion interfaces [14, 18, 45]. Based on the low latency tracking
technology, walking in large space [51] is an intuitive solution. Gen-
erally, the navigation space in VE is equal to the physical space. The
limitation of this method is that the real-world space will limit the
virtual world space. If users moved close to the boundary of the phys-
ical space, they could not take more steps. In order to make full use
of the limited space, the space compression technology, such as the
redirected walking (RDW) approach, has been extensively studied in
recent years. Based on the human body’s insensitivity to slight rotation
and translation, the RDW approach can leverage visual dominance to
subtly manipulate the user’s physical path [4, 6]. When the user walks
in a straight line in VE, the RDW approach guides the user to walk on a
circle in the physical space. This is an effective strategy to compress the
limitless virtual space to a limited physical space [28,33,38]. Generally,
the RDW approach uses unperceived curvature gains to manipulate
the user’s path [44]. It has been shown that the minimum demand
for space is about 7m in radius or 200m2 [6]. To further reduce the
space required, Telewalk [37] uses perceivable gains deliberately which
highly reduces the space requirement to 3m×3m. Since the Telewalk
approach uses very high RDW gains which can lead to motion sickness
symptoms [37], it sacriﬁces UX in exchange for the space reduction.

Strategies with auxiliary equipment usually have a much better per-
formance in terms of the UX and space requirements. Omnidirectional
treadmills (ODT) are a representative type of auxiliary equipment.
The main idea is to keep the users’ bodies stationary when they are
walking [1]. Comparing with the walking in large space and RDW
approaches, ODT could provide a similar walking experience, but re-
quires much less space, and does not have any boundary restrictions.
Comparing with the WiP methods, ODT occupies a slightly larger area
but eliminates the limitations of the WiP strategy. For example, the VR
locomotion of ODT is independent of the view direction, and the user
can move in any direction without constraints. Hence, ODT achieves a
higher degree of freedom than the WiP methods. In addition, ODT usu-
ally doesn’t need to consider the false trigger problem associated with
the WiP methods, so the starting and stopping latency is much lower. In
general, as an auxiliary device, the ODT is capable of simultaneously
ensuring the UX and space occupation, and it has been demonstrated to
be an effective solution to the NLI problem in VR [1].

Currently, a lot of different ODT design schemes have been proposed,
and they can preliminarily achieve the basic functions. However, these
design schemes have different limitations, such as laborious to use,
dead zone, low degree of freedom, and bulkiness. These limitations
are inherent shortcomings of the design and are difﬁcult to eliminate
through optimization of the manufacturing process.

To overcome these aforementioned limitations, this paper proposes
a novel ODT design scheme, i.e., the 45-degree wheel-based scheme
with the spiral rollers as the carrier, which has signiﬁcant advantages in
terms of the UX and volume. Based on this design scheme, we create
the Hex-Core-MK1 (HCMK1) system. On the premise of providing the
most natural locomotion experience, HCMK1 is a very small device
that only occupies 1.76m2 area and 8.0cm height. The small volume

indicates that it is suitable for the room-scale VR. The 110kg weight
ensures high dynamic performance and provides capabilities for many
VR applications like terrain simulations. In addition, the starting and
stopping latency of HCMK1 is only 23ms. Low latency ensures the VR
scenes can be consistent with the user’s actual intention in real-time.
This paper further also analyzes the main factors affecting the UX,
includes the OVF(omnidirectional velocity ﬁeld) working delay and
the height of the user’s center of gravity, which may guide the design
of the controller to further improve the UX.

The main contributions of this paper are as follows:
• Proposing a novel design scheme of driven based ODT.
• Developing the HCMK1 system based on the proposed scheme,
which has the state of the art performance in terms of volume,
weight, latency and dynamic performance.

• Analyzing the main factors affecting the UX based on the survey

and the experimental data.

The remainder of the paper is organized as follows. Section 2
describes the related work. Section 3 presents the proposed novel
design scheme of the HCMK1 system. Section 4 compares the proposed
HCMK1 system with other driven-based ODTs. Section 5 presents
an experimental study, and Section 6 presents the limitation of the
proposed HCMK1 system, respectively. Finally, Section 7 summarizes
the results and highlights the future work. In addition, several videos
about an application demo and part of the experiments are attached in
the supplementary material.

2 RELATED WORK

The main feature of ODT is to keep the user stationary when the user
is walking. A simple and crude method is slide in place, i.e., the low-
friction surface scheme [2, 8, 15]. Generally, the user’s waist is tied to
the machine. The user needs to wear a pair of roller shoes or stand on
a special surface with suitable low-friction, such as the polytetraﬂuo-
roethylene (PTFE) surface, the ball-bearing surface. When walking
forward, the user’s feet will slide on the surface with the assistance of
their waist. The commercial products based on this principle include
Kat Walk, Virtuix Omni, Cyberith Virtualizer, etc. The main problem
of this strategy is that overcoming the friction is too laborious, imagine
the user needs to moonwalk on the surface like Jackson all the time.
Users can slide forward laboriously but too hard to slide backwards or
sideways [8]. The walking tutorial of Kat Walk 2 shows the user needs
to combine the WiP proxy actions to realize the backward and sideways.
Besides, since the gait action is abnormal, it is hard to track the gait
distance accurately. Kat Walk 3 and Virtuix Omni 4 use the inertial
measurement unit (IMU) to count the number of steps and indirectly
calculate the movement distance, which further reduces the accuracy
of gait matching or even appears the reverse direction gaits.

Like the traditional treadmill in the gym, if ODT can automatically
carry users back to the center, the UX will be much better. This
kind of ODTs also called driven based ODT. CirculaFloor [19] uses
4 independent autonomous circulating robots to carry the user back.
The user always stands on 2 robots and another 2 robots move to the
position of the user’s next step. String Walker [20] uses several strings
to pull the shoes back to the center. CyberCarpet [11,40] and StriderVR
are two similar ODTs. They all lay a layer of steel balls on a traditional
treadmill. The main difference is that when the user turns, CyberCarpet
rotates the traditional treadmill in the same direction to provide velocity
in a proper direction, but StriderVR rotates the steel-ball layer to the
inverse direction to eliminate the user’s rotation. The main problems of
these ODTs are the low dynamic performance and the low degree of
freedom (DOF).

The fast-responding and continuous omnidirectional velocity ﬁeld
(OVF) is the key to driven-based ODTs [53]. Omnideck [7] can gener-
ate a ﬁxed inwardly contracting OVF based on a number of inwardly
rotating rollers. The ﬁxed OVF causes the user can only walk on the

2https://download.katvr.com/product/literature/KAT Walk mini Walking Tu-

torials1575006763475.mp4

3https://www.manualslib.com/manual/1474138/Kat-Vr-Walk.html
4https://www.roadtovr.com/virtuix-omni-preview-production-model-video/

2

© 2022 IEEE. This is the author’s version of the article that has been published in IEEE Transactions on Visualization and
Computer Graphics. The ﬁnal version of this record is available at: xx.xxxx/TVCG.201x.xxxxxxx/

Fig. 2. The ﬂow chart of HCMK1 system. The orange dash line shows the complete working process, which interacts with human. The external
disturbance is the changes in the body’s position caused by motions. HCMK1 aims to reduce this disturbance by carrying the user back to the
center. The positioning system detects the body’s position to calculate the current off-center distance. Based on the off-center distance, the system
controller controls the servo motors’ rotation speed. The special mechanical structure further converts the parallel rotation speed into OVF, which
ﬁnally provides the driving force to carry the user back to the center in any direction. The rotation distance of servo motors reﬂects the distance of
OVF provides. The physical locomotion distance of the user could be calculated by the OVF distance and their local position. When applying the
physical locomotion distance to the VE, a mapping process is necessary, which mainly transforms the coordinate, adjusts the locomotion gains, or
introduces some nonlinear functions to improve the UX.

outer ring of the surface, which leads to low area utilization and large
area occupation. An ideal OVF should be parallel, continuous, and able
to quickly respond to direction changes. A traditional scheme is the
belt-based ODT [9], which can be simply understood as a big tread-
mill (x-axis) carrying several small treadmills (y-axis). This scheme
has been applied in several previous works, such as the Torus [17],
Cyberwalk [39, 43] and F-ODT [29, 36]. The commercial product Inﬁ-
nadeck [31] is also based on this scheme. This scheme could provide a
real walking experience with full DOF. The only drawback is that it is
hard to miniaturize due to its double-layer structure. As a commercial
product, Inﬁnadeck has been optimized for several years and still has
40cm height and 225kg weight. The large volume limits its application
areas. Another scheme is the 45-degree wheel-based scheme [53]. Hex-
Core-Prototype (HCP) is a much thinner and smaller ODT based on
this scheme. The main components of HCP are the mirror-symmetrical
chain and the small wheels arranged at 45 degrees on the chain. It can
generate the ideal OVF based on the principle of the decomposition
and composition of the velocity. HCP has reduced the height to 16cm
and the weight to 150kg, which proves that the 45-degree wheel-based
scheme has more competitive than the belt-based scheme in terms of
miniaturization. However, the chain usually stretches soon which leads
to the tooth-jumping problem. Taking the chains as carrier still is a
double-layer structure, therefore, the volume could be further reduced.

3 SYSTEM DESIGN

HCMK1 is also based on the 45-degree wheel-based scheme. The main
improvement is on the carriers of the 45-degree wheels. We design a
pair of spiral rollers to support the 45-degree wheels. Compared with
the mirror-symmetrical chains, the spiral rollers have a more compact
structure and more stable performance. It reduces the weight of the
rotation components and greatly reduces the moment of inertia through
a small rotation radius, only 1.71cm. Therefore, HCMK1 has a much
better dynamic performance.

Figure 2 presents the workﬂow of HCMK1. As a closed-loop control
system, HCMK1 consists of 4 main parts, i.e., the omnidirectional
velocity ﬁeld, the positioning system, the system controller and the
locomotion calculation process. This section discusses these 4 parts as
well as the analysis the latency.

3.1 Notations

In this paper, we use x, x to denote the scalar and vector values respec-
tively. The subscript of a notation indicates the source of the symbol,
which is usually the ﬁrst letter or abbreviation. Table 1 summarizes the
notations used in this paper.

3

3.2 Design of Omnidirectional Velocity Field

The advantages of HCMK1 in terms of the UX and volume depend on
the design of OVF. The left part of Figure 3 shows the main compo-
nents, that is the mirror-symmetrical spiral rollers. The roller body is
embedded with a number of small wheels, which are arranged at an
angle of ± 45 degrees. Compared with the mirror-symmetrical chain in
the HCP system [53], this is a more compact structure with a radius of
only 1.71cm. Therefore, the overall volume and weight of the HCMK1
system can be further reduced.

Notation

wr1, vr1, v∗
r1
wr2, vr2, v∗
r2
θr1, θr2
dr
ovf, θ ∗, α
v∗

putrl

ptg,qtg

pug

pref

poff

n1 (t), n2 (t)
λ
D∗
ovf(t)
Dovf(t)

Dpe(t), Dve(t)

Drm(t)

Tm, Trm, Tovf

Tc

Ts

β1, β2

Table 1. Notations in this paper.

Meaning

(cid:5) Angular velocity, the surface linear velocity and the re-
tained velocity that along the wheel’s axis of Roller1.
(cid:5) The same meanings as above but of Roller2.
(cid:5) Angle of the wheels on Roller1 and Roller2.
(cid:5) Diameter of Roller1 and Roller2.
(cid:5) Velocity of OVF with the direction of θ ∗ and the ampli-
tude of α.
(cid:5) User’s position in the tracker’s coordinate system, i.e.,
XtrYtrZtr coordinate system.
(cid:5) Tracker’s position and spatial attitude in the global coor-
dinate system.
(cid:5) User’s position in the global coordinate system.
(cid:5) A preset point on X-Z plane. User will be sent to this
point.
(cid:5) The offset position between user’s position and the preset
reference point.
(cid:5) The number of revolutions of servo motor1 and motor2.
(cid:5) Reduction ratio of servo motors.
(cid:5) The locomotion distance provided by the OVF.
(cid:5) The user’s locomotion distance that offset by the OVF.
(cid:5) The user’s locomotion distance in physical environment
and virtual environment.
(cid:5) The user’s local locomotion distance that has not been
offset by the OVF.
(cid:5) The latency of the total measurements, the positioning
measurement, and the motor measurement.
(cid:5) The latency of serial communication.
(cid:5) The latency of the system or the latency between the VR
scenes and the user’s intended locomotion.
(cid:5) Gains of the platform OVF locomotion and the user’s
local locomotion.

VRLocomotionOVFDistanceRotation DistanceOmnidirectional Velocity FieldPositioning SystemSystemControllerOff-Center DistanceServo MotorsGenerate Velocity Field VirtualEnvironmentPlatform CenterBody Position+Human Motions-LocalPositionCoordinate TransformationHex-Core-MK1 Omnidirectional TreadmillMappingPhysicalLocomotionFig. 3. The mechanical design of the omnidirectional velocity ﬁeld. The left image demonstrates the core components of our scheme, i.e., the
mirror-symmetrical spiral rollers. The roller body is embedded with a number of small wheels which are arranged at an angle of ± 45 degrees.
This is a compact structure and the radius is only 1.71cm. The mid image shows that these two kinds of rollers are driven by two identical servo
motors respectively. The right ﬁgure shows the system surface structure after arranging the two kinds of rollers alternately and demonstrates the
composition process of the OVF velocity.

To put it simply, OVF is composed of two types of rollers, i.e.,
Roller1 type and Roller2 type in the left image of Figure 3, which are
alternately densely arranged. All rollers of the same type are connected
by timing belts and driven by the same motor, so they have the same
speed. The main difference between these two types of rollers is the
direction of the wheel embedded on the surface. All of the wheels are
not powered and can rotate around their axes freely. Therefore, for the
external speed, the wheel can counteract the speed component in the
direction of rotation, and only the axial speed component is retained.
This is similar to the principle of the Mecanum wheel [16]. After such
a decomposition process, the remained speed components of these two
types of rollers are perpendicular to each other. By adjusting the speed
amplitude, the OVF speed in any direction is composited.

The following discussion is based on the right-handed coordinate
system in the ﬁgure. When the Roller1 rotates around the z-axis at
the angular velocity of wr1, the linear velocity on the surface, i.e., the
x-z plane, is vr1. Since the 45-degree wheel rotates freely, vr1 can
be decomposed into two mutually perpendicular velocities, where the
velocity perpendicular to the wheel’s axis will be counteracted, and
another velocity that along the wheel’s axis, i.e., the blue dash line, v∗
r1,
is retained. Similarly, when the Roller2 rotates at the angular velocity
of wr2, the surface linear velocity is vr2, only v∗
r2, i.e., the red dash
line, is retained. Based on the spiral rollers, the originally two parallel
velocities vr1 and vr2 are decomposed into two mutually perpendicular
velocities v∗
r2, which could be calculated by

r1 and v∗

dr
2

, 0); vr2 = wr2 × (0,

vr1 = wr1 × (0,
v∗
r1 = (cid:104)(cos(θr1), 0, sin(θr1)) , vr1(cid:105) × (cos(θr1), 0, sin(θr1)) ;
v∗
r2 = (cid:104)(cos(θr2), 0, sin(θr2)) , vr2(cid:105) × (cos(θr2), 0, sin(θr2)) .

, 0);

(1)

dr
2

Here dr = 3.42cm denotes the diameter of the rollers, θr1 = π
4 and
θr2 = − π
4 denote the angle of the wheels on Roller1 and Roller2. wr1
and wr2 denotes the angular velocities which point along the z-axis, the
preset conditions are wr1 = (0, 0, wr1) and wr2 = (0, 0, wr2).

Arranging these two kinds of rollers alternately could construct a
surface shown in the middle of Figure 3. The same type rollers are
connected in series using a row of timing belts and driven by one servo
motor. Therefore, HCMK1 only needs two motors to construct the
OVF, and the same type rollers have the same velocity.

The right part of Figure 3 presents the composition process of OVF.
v∗
r1 and v∗
r2 are staggered on the plane. When these two velocities act on
the same object and ignore the torque caused by the non-coincidence
of the acting positions, it is easy to get the composited velocity v∗
ovf =
r2. Conversely, when a velocity with the direction of θ ∗ and an
r1 + v∗
v∗
ovf = (α cos(θ ∗), 0, α sin(θ ∗)), these
amplitude of α is required, i.e., v∗

4

two type spiral rollers need to be set at the angular velocities

wr1 = (0, 0, −

wr2 = (0, 0, −

2α
dr
2α
dr

cos(θ ∗) −

cos(θ ∗) −

2α
dr
2α
dr

sin(θ ∗) tan(θr1));

sin(θ ∗) tan(θr2)).

(2)

Fig. 4. The wearing method of vive tracker. In this way, the center point of
the human body is a ﬁxed point relative to the tracker coordinate system.

3.3 Positioning System
High accuracy and low-latency positioning signals are important to the
control performance. The HCMK1 system uses the Vive Tracker 5 to
track the user’s position. It is based on the SteamVR tracking technol-
ogy, which has a latency of less than 20 milliseconds and millimetre-
scale positioning accuracy.

Since the active area of the platform is about 1.2m in diameter, it is
essential to take an accurate method to represent the user’s position. As
shown in ﬁgure 4, we chose the center point to represent the whole body.
Because the balance of the human body is determined by the position
of the center of the mass, measuring the position of the center portion
is sufﬁcient to represent the position of the human body. Though
introduce the position information of the knees and feet could help
to analyze the users’ intention, but it is much more complicated, and
it could be taken as an improvement of the positioning system in the
future work.

The tracker is worn around the waist to track the center point’s
real-time position in the global coordinate system, i.e., in the XY Z-
coordinate system.
In this way of wearing, the center point is ap-
proximately ﬁxed in the local coordinate system of the tracker, i.e.,

5https://www.vive.com/us/accessory/vive-tracker/

WheelRoller 1Roller 2𝒗𝑟1𝒗𝒓𝟏∗𝒗𝑟2𝒗𝒓𝟐∗𝑤𝑟2Motor2Motor1Timing belt𝒗𝒓𝟐∗𝒗𝒓𝟏∗𝒗∗𝑤𝑟2𝒗𝑟1𝒗𝑟2ZYXZYXZXYtrXtrZtrCenter PointCenter PointVive Tracker© 2022 IEEE. This is the author’s version of the article that has been published in IEEE Transactions on Visualization and
Computer Graphics. The ﬁnal version of this record is available at: xx.xxxx/TVCG.201x.xxxxxxx/

the XtrYtrZtr-coordinate system. Record the local position of the cen-
ter point in XtrYtrZtr-coordinate system as putrl, which is a constant.
Record the global spatial position of the tracker as ptg and use the
quaternion to record the global spatial attitude as qtg. Here we chose
the quaternion to avoid the gimbal lock of Euler angles and to get a
more stable and more efﬁcient calculation process than rotation ma-
trices. Based on the arithmetic rules of quaternion, the global spatial
position of the center point is denoted by

pug = ptg + vector(qtg ∗ Quaternion(0, putrl) ∗ q−1

tg ),

(3)

where the Quaternion(w, (x, y, z)) means generating a quaternion, i.e.,
w + xi + y j + zk and vector(·) means to extract the vector part of
the quaternion. putrl is an approximate value, and preset as putrl =
(0, −0.1, 0).

3.4 Basic Controller
An ideal experience of ODTs is when the user abruptly starts walking
or stops walking at a normal speed, the body always keep stationary.
This is a complex human-computer interaction problem that has a high
requirement for the dynamic performance of the platform and it also
needs to combine the kinematic model of the human body.

To preliminary verify this design scheme, we designed a basic con-
troller. This is a simple proportional controller with offset. When the
user is at the position pug, set the OVF at the velocity

Dovf(t) is mainly affected by the slippage during transmission. In-
troducing a matrix, denoted by SL(t) ∈ R3×3, to represent the impact
of the sliding process, i.e.,

Dovf(t) =

(cid:90) t

0

SL(x)v∗

ovf(x)dx.

(9)

0 v∗

ovf(t) denotes the velocity of OVF and satisﬁes (cid:82) t
v∗
ovf(x)dx =
D∗
ovf(t). SL(t) is a time-varying variable that is related to various
factors, such as speed, direction and the material contacted to the
platform. Since the maximum acceleration of human in daily life is
about 1.44m/s2 [46], even for the world 100m dash champion like
Usain Bolt6 is about 3.09m/s2, an assumption in this paper is that the
user has no slippage when walking on the OVF, and the following
discussions based on this assumption.

In this case, SL(x) could be simpliﬁed as a unit matrix,i.e., SL(x) ≈

I3×3, and

Dovf(t) ≈

(cid:90) t

0

I3×3v∗

ovf(x)dx = D∗

ovf(t).

Drm(t) can be measured by tracking the user’s position, i.e.,

Drm(t) = pug(t) − pref.

(10)

(11)

v∗
ovf = α ·



poff =



1
0
0

0
0
0

0
0
1

.

poff
(cid:107)poff(cid:107)2

 · (cid:0)pref − pug

(cid:1) ,

According to the control strategy, Drm(t) can be kept within a certain

range, but it does not need to be zero when stable.

Equation 8 gives the locomotion distance in the physical environ-
ment, and the locomotion distance in VE can be obtained by the map-
ping process, i.e.,

(4)

(5)

(cid:26)

α =

0
Kp · ((cid:107)poff(cid:107)2 − Dth)

for
for

(cid:107)poff(cid:107)2 < Dth
(cid:107)poff(cid:107)2 ≥ Dth

.

(6)

Here (cid:107) · (cid:107) denotes the Euclidean norm of vectors, poff denotes the offset
position between the projection of the user’s position on the X-Z plane
and a preset reference point, i.e., pref. In this basic controller, we set
pref as the center of the OVF. α denotes the amplitude of the velocity.
It is set as a piecewise function to avoid frequent adjustments when the
user close to the reference point. This is based on the control threshold
Dth. According to the experiments, setting Dth = 0.08 is sufﬁcient
to avoid frequent adjustments. Considering the safety factor, we set
Kp = 2, which denotes the proportional gain. This is a ﬁxed control
strategy. The velocity of the OVF always points to the reference point,
and the amplitude is determined only by the user’s position.

3.5 Locomotion Calculation
The servo motors can measure the number of revolutions, i.e., n1 (t) and
n2 (t), based on a rotary encoder. The locomotion distance provided by
the OVF is denoted by D∗
ovf(t), which is a linear function of n1 (t) and
n2 (t):



D∗



ovf(t)=



drπ cos2(θr1)
λ
0
drπ cos(θr1) sin(θr1)
λ

drπ cos2(θr2)
0
λ
0
0
0 drπ cos(θr2) sin(θr2)
λ











.

n1 (t)
0
n2 (t)

(7)

Here λ denotes the reduction ratio of the servo motors.

Record the cumulative locomotion distance of the user in the physical
environment and in VE as Dpe(t) and Dve(t). Since the user walks on
the OVF, part of Dpe(t) is the user’s locomotion distance that is offset by
the OVF, which is denoted by Dovf(t), and another part is the remaining
distance, which is denoted by Drm(t), Therefore,

Dve(t) = ψ (cid:0)Dpe(t), Θ(t)(cid:1) ,

(12)

Here ψ (x) denotes a preset function and Θ(t) denotes the external
parameters and variables. ψ (x) = x is the simplest function, which
means 1:1 mapping from Dpe(t) to Dve(t). In addition, the ψ (x) could
have some other formations, such as adding proportional gain, non-
linear function, or even introducing the redirected-walking algorithm
to get a better experience.

When the system is working, the control rate is 20Hz. The Algo-
rithm1 shows the framework of the HCMK1 system. The future work
to improve the performance could based on this framework.

Algorithm 1 HCMK1 Program Algorithm
Input: functions: SL(x), ψ (x); parameters: θr1, θr2, dr, λ , putrl, pref,
Kp, Dth, T
Output: locomotion distance in VE: Dve(t)
1: Initial servo motors and tracker.
2: t = 0
3: for each cycle period with an interval of T , do
Receive ptg(t) and qtg(t) from tracker
4:
Calculate pug(t) based on Equation 3
5:
Calculate v∗ based on Equation 4-6
6:
Calculate wr1 and wr2 based on Equation 2
7:
Send the target rotation speed λ wr1 to servo motor1 and λ wr2
8:

to servo motor2

9:
10:
11:
12:
13:
14:
15:

Receive n1 (t) and n2 (t) from servo motors
Calculate Dpe(t) based on Equation 8-11
Map Dpe(t) to Dve(t) based on Equation 12
Output Dve(t)
t = t + T
if Stop then
Quit

Dpe(t) = −Dovf(t) + Drm(t).

(8)

5

6https://www.wired.com/2012/08/maximum-acceleration-in-the-100-m-

dash/

3. At the 15th cycle, the user’s local velocity equals to the platform’s
velocity, the user’s actual intended velocity is decreased to 0,
and the actual intended distance remains unchanged. Since the
amplitudes of both the user’s local velocity and the platform’s
velocity are equal but with opposite signs, the calculated velocity
drops to 0, and the calculated distance no longer increases.
4. Afterwards, the user is gradually carried back to the center by the
OVF, while the user’s local distance is slowly reduced, but the
platform distance is slowly increased. Finally, the platform stops
working, and the user’s local velocity is reduced to 0.

Assuming that the user has no slippage when walking on the OVF, a
part of the user’s actual locomotion is eliminated by the OVF and the
remaining part is the user’s local locomotion relative to the platform,
which can be measured with millimeter accuracy by the positioning
system. Therefore, the calculated locomotion is accurate, meaning that
the black and green dash lines are equal in value. However, due to the
system latency, the calculated locomotion always lags behind the user’s
actual intended locomotion. In the worst case, the maximum latency
would reach Ts = 23ms.When applying the calculated locomotion to
the VR scene, there is about 23ms latency for which the VR scene lags
behind the user’s actual intended locomotion.

Different from the 100ms VR scene latency, which is perceivable in
the WiP strategy, the 23ms VR scene latency of HCMK1 is so much
less perceptible that it can be approximately regarded as synchronized.
However, it is worth noting that the working delay caused by the
controller, as shown in Figure 5 for the machine stopping stage, is the
time the platform continues to work after the user stops their steps.
And the working delay is also caused by the inability of the simple
proportional controller to accurately track the user’s actual intended
velocity. Although this delay does not affect the correct and real-time
mapping of the user’s actual intended locomotion to the VR scene, it
will result in some discomforts, such as body shaking of users, thus
leading to insecurity. In a word, how to diminish the working delay is a
challenge to the control strategy.

Fig. 6. The photographs of the HCMK1 system construction process.
The OVF is consisted of 32 rollers which are driven by the two identical
0.6kW servo motors. The timing belts are set on the periphery to facilitate
maintenance. The right part shows the overall view of the HCMK1
system. The height is only 8cm and the diameter is 1.5m. The total
weight, including the security fence, is 110kg.

4 HIGH-LEVEL COMPARISONS WITH OTHER SYSTEMS

Fig. 5. Latency analysis of HCMK1. The left part demonstrates the
latency in different measurements during the calculation process of the
VR locomotion, includes the positioning latency and motor latency. The
right part shows the schematic diagram when the user abruptly stops.
The calculated locomotion, i.e., the black dash line, only takes a minor
lag to the user’s actual intended locomotion,i.e., the green dash line.

3.6 Analysis of Latency
Like the WiP method, HCMK1 also has a starting and a stopping la-
tency [12, 47], both of which are only 23ms. A notable difference is
the working delay caused by the controller in HCMK1, and this delay
is deﬁned as the time needed for the device to stop working after the
user stops. Figure 5 shows the sources of the latency of HCMK1. As
indicated by the left part, when calculating the locomotion distance in
physical environment, i.e., Dpe(t), the bottom layer needs to determine
the remaining locomotion of the user by making the positioning mea-
surement, i.e., Drm(t), while deciding the offset distance of the OVF
by making the motor measurement, i.e., Dovf(t). The latency in the po-
sitioning measurement is about 22ms [22, 32]. The motor measurement
involves 2 servo motors, with RS485 serial communication bus adopted
in accordance with the Modbus protocol. The latency in this process is
about 8ms. In a multi-threaded program, the above two measurements
could be performed simultaneously; therefore, the latency of the total
measurement in the worst case would be Tm = max(Trm, Tovf) = 22ms.
Then, upload the measured data to a PC through its serial port for fur-
ther calculations; the communication latency in this process is Tc = 1ms.
In total, the maximum system latency caused by measurements and
communication transmissions is Ts = 23ms.

The right part of Figure 5 shows the schematic diagram of each
kind of data when the simple proportional controller in Subsection
3.4 is applied. The green dash line denotes the user’s actual intended
locomotion, while the red solid line denotes the user’s local locomotion
relative to the platform, i.e., Drm(t). In addition, the blue solid line
denotes the locomotion of the OVF on the platform, i.e., Dovf(t). the
black dash line is the sum of the red solid line and the blue solid
line, denoting the calculated locomotion in physical environment, i.e.,
Dpe(t).

As shown by the green dash line, at ﬁrst, the user walks on the
platform at a constant velocity of 1 and starts to stop at the 5th cycle.
After a deceleration process, the user stops at approximately the 10th
cycle, and then the actual intended velocity remains 0. The actual
intended distance ﬁrst increases in a linear manner, then gradually
slows down, and ﬁnally remains unchanged.

Generally, this process can be divided into 4 stages, as observed in

the subsequent experiment data:

1. Since the platform offsets the user’s velocity, the user’s local
velocity is 0, and the local distance remains 1. The platform
distance increases linearly.

2. At the 5th cycle, the user’s actual intended velocity is decreased.
Since the platform velocity is still kept at a high value, the user’s
local velocity will increase but the local distance will decrease,
resulting in a diminished platform velocity; accordingly, the in-
crease of platform distance is slowed down.

A working HCMK1 system is shown in Figure 6. Since the OVF
should be isotropic, a circular structure is more reasonable than a
square structure. The mirror-symmetrical spiral rollers make it easier to
design the platform close to a circle. In HCMK1, the OVF is designed
as a regular octagon, and it saves the waste area on the diagonal of the
square structure. Figure 7 shows the comparison of HCMK1 with the
Inﬁnadeck and the HCP system. It shows HCMK1 is a much lighter
device and is more suitable for the room-scale VR.

6

Calculated Locomotion(𝐃𝑝𝑒)VRLocomotion(𝐃𝑣𝑒)MappingOVF distance or velocity (𝐃ovf∗) PositioningMeasurementMotorMeasurementLatency 𝐓𝑟𝑚Latency 𝐓ovfSystem Latency 𝐓𝑠=𝐓𝑐+𝐓𝑚Update Rate 90Hz VR SceneCycleDistanceVelocityScene StoppingStageMachineStoppingStageRemaininglocomotion(𝐃𝑟𝑚)OVF offset locomotion(𝐃ovf)Communication Latency 𝐓𝑐Measurement Latency 𝐓𝑚=𝒎𝒂𝒙(𝐓𝑟𝑚,𝐓ovf)Sliding  LossVive TrackerOmnidirectionalVelocity FieldMotor 1Motor 2OmnidirectionalVelocity FieldServo motor controllerSecurity FenceTiming BeltRoller1Roller2© 2022 IEEE. This is the author’s version of the article that has been published in IEEE Transactions on Visualization and
Computer Graphics. The ﬁnal version of this record is available at: xx.xxxx/TVCG.201x.xxxxxxx/

Table 2. Comparison with different omnidirectional treadmills.

Device

Motor

Active Area

Height Weight

Maximum Speed Maximum Acceleration

CyberWalk

F-ODT

Inﬁnadeck

HCP

HCMK1

X-axis
Y-axis
X-axis
Y-axis
X-axis
Y-axis
X-axis
Y-axis
X-axis
Y-axis

40kW(4EA)
37.7kW(25EA)
8.8kW(2EA)
3.6kW(2EA)
-
-
0.5kW(1EA)
0.5kW(1EA)
0.6kW(1EA)
0.6kW(1EA)

6.5*6.5m

1.45m

12000kg

2m/s

2.5*2.5m

0.64m

576kg

1.2*1.5m

0.4m

225kg

1*1.2m

0.16m

150kg

2.5m/s

>2m/s

1.6m/s

Radius 0.575m, 1.10m2

0.08m

110kg

1.78m/s

0.75m/s2

3m/s2

-

1.3m/s2

25.00m/s2

Table 3. The detail parameters of HCMK1 system.

Motor Model

Rated Power
Rated Speed

0.6 kW
3000 rpm Gear Ratio

Torque

1.9 NM
3:1

Device Parameter

Total Power
Height
Maximum Speed
Active Area

1.2kW
0.08m
1.78m/s
1.10m2

Total Area
Weight
Maximum Acceleration
User Acceleration (100kg)

1.76m2
110kg
25.00m/s2
4.84m/s2

The detailed parameters of HCMK1 is shown in Table 3. We applied
two 0.6kW servo motors and the gear ratio is 3:1. The rotation part
of HCMK1, i.e., the spiral rollers and synchronous wheels, is about
48kg weight totally and the rotation radius is 1.71cm. Therefore, the
moment of inertia is only 0.007kg · m2. The small moment of inertia
ensures that even applying low power motors can obtain sufﬁcient
dynamic performance. Theoretically, when assuming the transmission
efﬁciency is 90%, the maximum acceleration can reach 25.00m/s2, and
for a user with 100kg weight, the acceleration can reach 4.84m/s2. The
experiment in the next section shows the maximum starting acceleration
is about 16.00m/s2 and the maximum braking acceleration can reach
30.00m/s2. The transmission efﬁciency is about 88% and the torque
caused by rotating friction is about 2.5NM.

Table 2 demonstrates the detail parameters of several systems that
can generate parallel OVF. Cyberwalk [39, 43], F-ODT [29, 36], Inﬁ-
nadeck [31] are three belt-based ODTs. Huge volume and weight lead
to large inertia, which puts much more pressure on the actuator and
reduces the dynamic performance. To produce enough power, Cyber-
walk and F-ODT set several motors at one axis. Therefore, they need to
solve synchronization errors [36] between different motors. In addition,
the motors in X-axis and Y-axis are different and always have different
electrical characteristics, such as the rated speed, the torque etc. All
these will bring difﬁculties to the controller.

HCP [53] applied the 45-degree wheel-based scheme and reduced
the volume and weight a lot based on the mirror-symmetrical chains.
HCMK1 proposes a novel carrier, i.e., the mirror-symmetrical spiral
rollers, to replace the chains in HCP. It signiﬁcantly reduces the device
weight and moment of inertia. Therefore, although the total power
is only 1.2kW , the dynamic performance can be greatly improved.
Furthermore, the mirror-symmetrical structure ensures the identical
motors can be applied in different axes.

5 EXPERIMENT RESULT

5.1 Acceleration Experiment

Sufﬁcient dynamic performance is the basis for designing a good con-
troller. Given HCMK1 delivers a small moment of inertia, as described
in Section 4, the platform can theoretically achieve an acceleration of
25.00m/s2. In this subsection, several experiments are made to test
the actual acceleration performance. The experiments record the start-
ing and braking process from 0 to the maximum speed, i.e., 1.78m/s,

Fig. 7. The comparison of HCMK1 with Inﬁnadeck and HCP system.
HCMK1 is much more compact, and has only 20% of the height of
Inﬁnadeck and 50% of the HCP. It means the corresponding volume will
reduce at least 80% and 50% respectively.

without additional load imposed, but with different upper limits of the
motor acceleration applied.

Figure 8 demonstrates the results of these experiments. The ﬁrst one
mainly tests the maximum acceleration of the platform. The upper limit
is set to 65535(r/min)/s, corresponding to 39.32m/s2 on the surface
of the OVF, a ﬁgure that is much greater than the theoretical value
of 25.00m/s2. As indicated in Figure 8 (a), the starting acceleration
is about 16.00m/s2 and the braking acceleration is about 30.00m/s2.
It may be caused by the rotating friction. From this result, it can be
calculated that the transmission efﬁciency is about 88% and the torque
caused by rotating friction is about 2.5NM.

In the second experiment, as demonstrated in Figure 8 (b), when
the upper limit is set to 20000(r/min)/s, i.e., 12.00m/s2, the starting
and braking accelerations of OVF are almost the same, about 12.5m/s2,
indicating that the OVF is fully controllable in this range. For the
design of high-level controllers, the driving force is sufﬁcient to directly
control the acceleration, while ignoring the rotating friction.

The third experiment implements the upper limit of 6000(r/min)/s,
i.e., 3.6m/s2. Figure 8 (c) indicates that the starting and braking ac-
celerations are both around 3.8m/s2 which is more stable than in the
second experiment. Actually, excessive acceleration will cause users to
lose balance; therefore, limiting the acceleration to a certain range is
essential for improving the UX.

Figure 8 further demonstrates that the X and Z axes have the same
dynamic performance, which results from the mirror-symmetric spiral
roller structure of HCMK1.

5.2 Locomotion Experiment
This experiment is designed to verify the effectiveness of the system in
terms of space expansion, participated in by a skilled male experimenter
with a height of 174cm and a weight of 72kg participated in this test.
The locomotion experiment includes two sub-experiments, in which the
user will try to walk along a circular trajectory and a square trajectory
on the platform, with the recorded data shown in Figure 9 where, the

7

40cm16cm8cmInfinadeckHCPHCMK1Fig. 8. Three acceleration experiments. Each column demonstrates the recorded data of the X and Z axes with different upper limits of the servo
motors’ acceleration. For each experiment, we conduct four starting-braking operations along each axis. The collected data includes the distance,
velocity and acceleration of the platform.

Fig. 9. User’s locomotion experiments. Each row represents an experiment in which the user walks along a certain trajectory. The ﬁrst column is the
user’s local position relative to the platform. The second column is the user’s VR position relative to the coordinate system in VE. The green point
denotes the start point and the red point denotes the endpoint. The third and fourth columns represent the corresponding spatial information in the
VE coordinate system along the X and Z axis respectively.

ﬁrst row shows the circle trajectory’s experiment result and the second
row shows the square trajectory’s experiment result. The user starts
to move at the green point and stops at the red point. The ﬂuctuations
in the trajectory are caused by the swings of the human body when
moving. The results in all of the experiment prove that the platform
can effectively expand the limited physical locomotion to limitless VR
locomotion.

5.3 Locomotion Gains and Scene Latency

It is found in the latency analysis that the VR scenes and the user’s
actual intentions are almost synchronized. That is based on the Equa-
tion 8, i.e., the gains of the platform OVF locomotion and the user’s
local locomotion is 1:1. The mutual elimination of these two sets of
locomotion ensures that the working delay would not affect the scene
latency. As described in Equation 12, changing the mapping function
can introduce different algorithms or achieve special effects. However,
the ratio of gains should be 1:1 in this mapping function; otherwise, the
working delay will enhance the scene latency.

8

In this experiment, we use

Dpe(t) = −β1 · Dovf(t) + β2 · Drm(t).

(13)

to analyze the inﬂuence of different gains on the scene latency. Based
on Figure 11, the following simple inferences can be acquired:

1. When the user stops, if β1 < β2, the locomotion of platform
OVF cannot completely eliminate the user’s local locomotion;
therefore, the VR scene would slide in the backward direction;
2. If β1 = β2, the locomotion of platform OVF would eliminate the
user’s local locomotion exactly; therefore, the VR scene will stop
synchronously;

3. If β1 > β2, the locomotion of platform OVF would excessively
eliminate the user’s local locomotion, therefore, the VR scene
will continue to slide in the forward direction.

One participant in this experiment has a height of 174cm and a
weight of 72kg. The HMD is HTC Vive. Since human bodies will
inevitably shake when the platform is working, in order to relieve the
impact of body shaking on VR scenes, the experimenter is required to

a) Upper limit 65535(r/min)/sb) Upper limit 20000(r/min)/sc) Upper limit 6000(r/min)/sm or m/s or m/s2Time/sX-axism or m/s or m/s2Z-axism or m/s or m/s2m or m/s or m/s2m or m/s or m/s2m or m/s or m/s2Time/sTime/sTime/sTime/sTime/sCircleSquareVR x-axis /m or m/s or m/s2Time/sTime/sTime/sTime/sVR x-axis /m or m/s or m/s2VR z-axis /m or m/s or m/s2VR z-axis /m or m/s or m/s2VR z-axis /mVR z-axis /mVR x-axis /mVR x-axis /mLocal z-axis /mLocal x-axis /mLocal x-axis /mLocal z-axis /m© 2022 IEEE. This is the author’s version of the article that has been published in IEEE Transactions on Visualization and
Computer Graphics. The ﬁnal version of this record is available at: xx.xxxx/TVCG.201x.xxxxxxx/

Fig. 10. The screenshots of the process from the user stops until the platform carries the user back to the center. Each column applies a different
gains ratio. The green and red boxes show the zoomed part of the VR scene, includes the position of the user on the platform and the salient
reference objects. It is obvious that, after the user stops, the VR scenes slide backward in the left column, stop immediately in the middle column and
slide forward in the right column

objects in the scenes are zoomed in. It can be clearly observed that
when β1 (cid:54)= β2, the VR scenes’ stops always lag signiﬁcantly behind the
user’s stop actions. This ﬁnding is consistent with the inference above:
when β1 < β2, the VR scenes would slide backward; when β1 > β2,
the VR scenes would continue to slide forward; and when β1 = β2, the
VR scenes would stop immediately.

This experiment demonstrate that when calculating a user’s locomo-
tion or introducing mapping functions as Equation 12, it is necessary
to ensure that the gains of the platform OVF locomotion and the user’s
local locomotion are equal. Otherwise, it will bring about a large scene
latency between the VR scene and the user’s intention.

5.4 Main Factors Affecting Users’ Experience
At present, a total of 30 participants (including 5 females and 25 males)
have experienced the VR interaction on this system. Age range: 20
to 45 (27.67±7.68). Height range: 155 to 198cm (172.03±8.01cm).
Weight range: 45 to 99kg (67.82±12.73kg). All of the participants
were ﬁrst-time users. After walking on the treadmill for about 1min
without wearing HMD, they then entered the same VR scenes to have
a free interaction. Aside from reminding about the security handrail,
no other guidance or instructions are given. The average experiencing
time is 10 minutes. An example of the interaction process is shown in
the attached application demo video. After completing the experience,
each of the participants were inquired whether they had experienced
motion sickness or any other discomforts.

The inquiry ﬁnds that 29 participants acquired good experiences
without motion sickness, with only one encountering slight motion
sickness, who is 198cm tall and weight 99kg. Besides, during the exper-
iments, 4 participants attempted to release the security handrail when
walking. Among them, two found it was hard to stabilize their bod-
ies when stopping and turning around, with a feeling of falling down;
another two indicated no abnormalities. None of these 4 participants
experienced motion sickness.

According to the above results, the UX needs to be further improved.

Fig. 11. The schematic diagram of different gains ratios. If the gain of the
user’s local locomotion mismatches the gain of the platform locomotion,
the working delay will increase the scene latency, causing the VR scenes
to slide backward or forward.

keep stable after stopping his moves. The ratio between β1 and β2 is
set as 0.5:1, 1:1 and 5:1. By selecting the data with less body shaking,
the results in Figure 10 are obtained. The frame rate is 29.97Hz. The
1st, 5th and 10th frames of the user’s stopping process are extracted.
The continuous experimental video is attached in the supplementary
material.

Different gain ratios are applied in different columns in Figure 10.
The positions of the user on the platform and the salient reference

9

Frame1510𝛽1=5.0, 𝛽2=1.0𝛽1=1.0, 𝛽2=1.0𝛽1=0.5, 𝛽2=1.0Fig. 12. Each row demonstrates the spatial information of the user walking along different axes on the platform. Each experiment contains 3 stages,
among which, the beginning and the end are the main stages that affect the UX.

Although HCMK1 has many advantages in its design, like other driven-
based ODTs, the UX would ultimately depend on the performance of
the controller [3, 10]. This is a human–computer interaction problem.
The ideal UX is that no matter when a user starts or stops moving at
any speed, his/her body can always keep stationary at the center of the
platform. Obviously, there are still a certain gap between the current
experiences and the ideal cases. To further pinpoint the causes of the
above results to boost the controller’s performance, this study collects
and analyzes the actual data through additional experiments.

The experiments include two independent start-stop movements
along the X-axis and Z-axis by one participant at a height of 174cm
and weight of 72kg, wearing HTC VIVE HMD and tracker. The
data sampling rate is 20Hz. The participant was asked to accelerate
from a stationary state, walk at a constant speed for a while, and then
immediately stop steps and remain stationary until the platform stops
running. During the whole process, the user moved without the help of
handrails. Unlike the scene latency experiment in Subsection 5.3, in
this experiment, participant was only asked to walk naturally, without
deliberately keeping the body stable. The data collected include the
user’s local distance and velocity, the platform OVF velocity, and the
calculated VR velocity. The calculation process is based on Equation 8,
i.e., β1 = β2 = 1.0.

Figure 12 demonstrates part of the continuously recorded experiment
data. The start-stop process corresponds to the three dark-red dash-line
boxes, i.e., 1(cid:13), 2(cid:13), 3(cid:13). Since the results about the X and Z axes are
almost the same, the discussion will be mainly focused on the X-axis.
In the ﬁrst stage, i.e., Box 1(cid:13), when the user starts walking but within
the threshold of the controller, the platform keeps stationary. The user’s
local velocity increases until the user’s position exceeds the threshold.
Then, the platform starts to carry the user to go backwards and thus
slows down the user’s local velocity; however, the user’s VR velocity
still rises as indicated by the actual intention, therefore leading to the
peak of the red dash-line.

When the user’s local velocity decreases to approach 0, the second
stage starts and the user’s actual intended velocity is eliminated by
the platform velocity. When the user steps, the local velocity presents
ﬂuctuations, but the average value is approximate to 0.

The third stage starts when the user suddenly stops. The local
velocity is lowered to a negative value due to the inﬂuence of the
platform velocity. Then the user enters the threshold scope and the
platform stops working. It is worth noting that, although the peak of
VR velocity, as shown by the blue dashed line in Box 3(cid:13) resembles the

case of β1 < β2 in Figure 11, when the OVF velocity decreases to 0,
the user’s local velocity is not 0. From this ﬁnding, it can be inferred
that the peak is not caused by the unmatching gains in the calculation
process, but because of the shaking of body. In contrast, in Box 4(cid:13), the
user keeps the body shaking at a low level during the stop stage. When
the platform OVF velocity falls to 0, the user’s local velocity becomes
substantially 0, while the calculated VR velocity drops to 0 earlier than
the platform.

In both X-axis and Z-axis, it can be observed that the shaking of body
during the stop stage is a common problem. Due to the working delay,
the platform OVF velocity fails to track the user’s intended velocity
quickly. After the user stops, the platform has to take some time to send
the user back to the center. Meanwhile, the center of gravity of the user
is far above the ground. As a result, after the platform sends the user
back to the center and stops working, the body still moves at a certain
speed due to inertia, which leads to shakes of body. Besides, the higher
the user’s center of gravity, the more intense the shaking phenomenon.
Once the shakes reach a certain extent, the sense of motion sickness
will appear. The fall-down feeling appearing when stopping and turning
without holding the handrail can also be explained with the same reason.
In addition, physiological studies reveal that humans are much more
sensitive to lateral acceleration [10]; therefore, body shaking caused by
the working delay will become even more serious when turning around.
Although previous researches [3] have found that the main factor
affecting the UX is users’ position errors in the abrupt stop stage.
This study maintains that such errors are just one of the main reasons
affecting the UX, and other reasons also include the system’s working
delay and the height of the center of gravity. The distance for OVF to
send users back to the center can be shortened by cutting users’ local
distance in Stage 2(cid:13). Therefore, minimizing the initial position errors
of users during the abrupt stop stage can lower the working delay for
a while. Another method to reduce the working delay is to predict
users’ stopping action in advance and set the platform OVF velocity
to 0, so that the platform OVF can quickly follow the users to stop.
In addition, in order to obtain a good UX, body shaking caused by
inertia is unacceptable. Therefore, when designing the controller, it is
necessary to consider inhibiting the inﬂuence of the height of the center
of gravity.

6 LIMITATIONS

Although HCMK1 is superior to other similar systems, it still has some
limitations with respect to the mechanism, algorithms and the metrics

10

1234© 2022 IEEE. This is the author’s version of the article that has been published in IEEE Transactions on Visualization and
Computer Graphics. The ﬁnal version of this record is available at: xx.xxxx/TVCG.201x.xxxxxxx/

of UX. These limitations may limits the possible application scenarios
of HCMK1.

We noticed that the working noise of HCMK1 was relatively large,
which might have a negative effect on the UX. The noise was mainly
caused by the power supply fan and mechanical transmission. More-
over, the security handrail might negatively affect the user to use the
controller for VR interaction.

The control algorithm is the key problem that needs to be studied
and solved urgently in the current system. This paper simply uses the
proportional control for veriﬁcation, whose ﬁnal performance is not
satisfactory. Because the large working delay might have a negative
impact on the UX, the proportional control algorithm that we used in
HCMK1 should be replaced by better control algorithms for optimal
performances.

In addition, current evaluation of UX only stays at a subjective level,
that is, the judgment is made by inquiries. The lack of a quantitative
metric leads to it is difﬁcult to distinguish different UX brought by
different algorithms.

7 CONCLUSIONS AND FUTURE WORK
This paper has proposed and developed a novel ODT system, namely
HCMK1, suitable for household VR applications. The design scheme
not only provides a natural walking experience but also has great ad-
vantages with respect to the weight, volume, dynamic performance,
and scene latency, making it possible to achieve real immersion in
Room-Scale VR. Through the experiments and analysis, this paper has
systematically validated that when the gains of OVF’s locomotion and
the user’s local locomotion match, HCMK1 has only a minor scene
delay of 23ms. By analyzing the results of the UX, this paper has
identiﬁed several main factors, including the working delay and the
height of the center of gravity. These results may help design better
controllers to improve UX in the future.

Our study opens new directions for future work. The controller
designing of ODT is a typical human-computer interaction problem.
Due to the randomness of human motion and ODT directly affects
human walking, the research in this area will involve the estimation of
human motion and complex control theory. We plan to introduce the
height of the center of gravity into the controller designing to achieve
a better control effect. Moreover, in order to improve the prediction
performance of the controller, the estimation of human motion will
be added to the controller as auxiliary information. Furthermore, we
will consider applying reinforcement learning strategies to solve such
human-computer interaction problems. As for the UX evaluation, in
order to be able to distinguish and to improve the UX brought by
different controllers, we will build a single quantitative metric that can
directly reﬂect the UX. The metric can be used to objectively guide the
design of the controller and help to formulate a reward function in the
reinforcement learning strategy.

ACKNOWLEDGMENTS
This work was supported by the National Natural Science Foundation
of China (Grant No. 61773118, Grant No. 61973083), Science and
Technology Project of State Grid Corporation of China (Intelligent
operation and maintenance technology of distributed photovoltaic sys-
tem SGTJDK00DYJS2000148), the Key Laboratory of Measurement
and Control of Complex Systems of Engineering, Ministry of Educa-
tion, Nanjing, 210096, P. R. China, the Open Project Program of State
Key Laboratory of Virtual Reality Technology and Systems, Beihang
University (No. VRLAB2021C04) .

REFERENCES

[1] M. Al Zayer, P. MacNeilage, and E. Folmer. Virtual locomotion: a survey.

IEEE transactions on visualization and computer graphics, 2018.

[2] Y. Y. Ang, P. S. Sulaiman, R. W. O. Rahmat, and N. M. Norowi. Put down
the controller, enable “walking” in a virtual reality (vr) environment: A
review. In Ambient Communications and Computer Systems, pp. 367–379.
Springer, 2018.

[3] H. J. Asl, S.-H. Pyo, and J. Yoon. An intelligent control scheme to facilitate
abrupt stopping on self-adjustable treadmills. In 2018 IEEE International

Conference on Robotics and Automation (ICRA), pp. 1639–1644. IEEE,
2018.

[4] E. R. Bachmann, E. Hodgson, C. Hoffbauer, and J. Messinger. Multi-user
redirected walking and resetting using artiﬁcial potential ﬁelds. IEEE
transactions on visualization and computer graphics, 25(5):2022–2031,
2019.

[5] A. Benjamin. Why virtual reality lack of content?

EB/OL, Aug.
2021. https://ﬁlmora.wondershare.com/virtual-reality/why-virtual-reality-
lack-of-content.html.

[6] L. B¨olling, N. Stein, F. Steinicke, and M. Lappe. Shrinking circles: Adap-
tation to increased curvature gain in redirected walking. IEEE transactions
on visualization and computer graphics, 25(5):2032–2039, 2019.

[7] H. Brinks and M. Bruins. Redesign of the omnideck platform: With

respect to dfa and modularity, 2016.

[8] T. Cakmak and H. Hager. Cyberith virtualizer: a locomotion device for
virtual reality. In ACM SIGGRAPH 2014 Emerging Technologies, p. 6.
ACM, 2014.

[9] R. P. Darken, W. R. Cockayne, and D. Carmein. The omni-directional
treadmill: a locomotion device for virtual worlds. In Proceedings of the
10th annual ACM symposium on User interface software and technology,
pp. 213–221, 1997.

[10] A. De Luca, R. Mattone, P. R. Giordano, and H. H. B¨ulthoff. Control
design and experimental evaluation of the 2d cyberwalk platform. In 2009
IEEE/RSJ International Conference on Intelligent Robots and Systems, pp.
5051–5058. IEEE, 2009.

[11] A. De Luca, R. Mattone, P. R. Giordano, H. Ulbrich, M. Schwaiger,
M. Van den Bergh, E. Koller-Meier, and L. Van Gool. Motion control of the
cybercarpet platform. IEEE Transactions on Control Systems Technology,
21(2):410–427, 2012.

[12] J. Feasel, M. C. Whitton, and J. D. Wendt. Llcm-wip: Low-latency,
continuous-motion walking-in-place. In 2008 IEEE symposium on 3D
user interfaces, pp. 97–104. IEEE, 2008.

[13] S. Hanson, R. A. Paris, H. A. Adams, and B. Bodenheimer. Improving
walking in place methods with individualization and deep networks. In
2019 IEEE Conference on Virtual Reality and 3D User Interfaces (VR),
pp. 367–376. IEEE, 2019.

[14] J. M. Hollerbach. Locomotion interfaces. In Handbook of Virtual Envi-

ronments, pp. 279–294. CRC Press, 2002.

[15] J.-Y. Huang. An omnidirectional stroll-based virtual reality interface
and its application on overhead crane training. IEEE Transactions on
Multimedia, 5(1):39–51, 2003.

[16] B. E. Ilon. Wheels for a course stable selfpropelling vehicle movable in
any desired direction on the ground or some other base, Apr. 8 1975. US
Patent 3,876,255.

[17] H. Iwata. Walking about virtual environments on an inﬁnite ﬂoor. In
Proceedings IEEE Virtual Reality (Cat. No. 99CB36316), pp. 286–293.
IEEE, 1999.

[18] H. Iwata. Locomotion interface for virtual environments. In Robotics

Research, pp. 275–282. Springer, 2000.

[19] H. Iwata, H. Yano, H. Fukushima, and H. Noma. Circulaﬂoor [locomotion
interface]. IEEE Computer Graphics and Applications, 25(1):64–67, 2005.
[20] H. Iwata, H. Yano, and M. Tomiyoshi. String walker. In ACM SIGGRAPH

2007 emerging technologies, pp. 20–es. 2007.

[21] A. Jenkins. The fall and rise of vr: The struggle to make virtual reality
get real. EB/OL, June 2019. https://ﬁnance.yahoo.com/news/fall-rise-vr-
struggle-virtual-103009561.html.

[22] J. A. Jones, E. Luckett, T. Key, and N. Newsome. Latency measurement in
head-mounted virtual environments. In 2019 IEEE Conference on Virtual
Reality and 3D User Interfaces (VR), pp. 1000–1001. IEEE, 2019.
[23] A. Kitson, A. M. Hashemian, E. R. Stepanova, E. Kruijff, and B. E.
Riecke. Comparing leaning-based motion cueing interfaces for virtual
In 2017 IEEE Symposium on 3D User Interfaces
reality locomotion.
(3DUI), pp. 73–82. IEEE, 2017.

[24] E. M. Kolasinski. Simulator sickness in virtual environments. Techni-
cal report, Army Research Inst for the Behavioral and Social Sciences
Alexandria Va, 1995.

[25] E. Langbehn, P. Lubos, and F. Steinicke. Evaluation of locomotion tech-
niques for room-scale vr: Joystick, teleportation, and redirected walking.
In Proceedings of the Virtual Reality International Conference-Laval Vir-
tual, p. 4. ACM, 2018.

[26] J. J. LaViola Jr. A discussion of cybersickness in virtual environments.

ACM Sigchi Bulletin, 32(1):47–56, 2000.

11

[27] B. Lawson. Motion sickness symptomatology and origins. In Handbook
of Virtual Environments: Design, Implementation, and Applications. Boca
Raton, FL: CRCPress, 2014.

[28] D.-Y. Lee, Y.-H. Cho, and I.-K. Lee. Real-time optimal planning for
redirected walking using deep q-learning. In 2019 IEEE Conference on
Virtual Reality and 3D User Interfaces (VR), pp. 63–71. IEEE, 2019.
[29] H. Lee, S. Pyo, S. Park, and J. Yoon. Design of the omni directional
treadmill based on an omni-pulley mechanism. In 2016 13th International
Conference on Ubiquitous Robots and Ambient Intelligence (URAI), pp.
889–894. IEEE, 2016.

[30] J. Lee, S. Ahn, and J.-I. Hwang. A walking-in-place method for virtual
reality using position and orientation tracking. Sensors, 18(9):2832, 2018.
[31] V. Metsis, K. S. Smith, and D. Gobert. Integration of virtual reality with
an omnidirectional treadmill system for multi-directional balance skills
intervention. In 2017 International Symposium on Wearable Robotics and
Rehabilitation (WeRob), pp. 1–2. IEEE, 2017.

[32] D. C. Niehorster, L. Li, and M. Lappe. The accuracy and precision of
position and orientation tracking in the htc vive virtual reality system for
scientiﬁc research. i-Perception, 8(3):2041669517708205, 2017.
[33] N. C. Nilsson, S. Seraﬁn, F. Steinicke, and R. Nordahl. Natural walking in
virtual reality: A review. Computers in Entertainment (CIE), 16(2):1–22,
2018.

[34] Y. S. Pai and K. Kunze. Armswing: Using arm swings for accessible
and immersive navigation in ar/vr spaces. In Proceedings of the 16th
International Conference on Mobile and Ubiquitous Multimedia, pp. 189–
198. ACM, 2017.

[35] K. Parrish. Pricing and lack of content are still barriers against the adoption
of vr. EB/OL, Aug. 2018. https://www.digitaltrends.com/computing/vr-
pros-see-pricing-and-content-as-mainstream-barriers/.

[36] S. H. Pyo, H. S. Lee, B. M. Phu, S. J. Park, and J. W. Yoon. Development
of an fast-omnidirectional treadmill (f-odt) for immersive locomotion inter-
face. In 2018 IEEE International Conference on Robotics and Automation
(ICRA), pp. 760–766. IEEE, 2018.

[37] M. Rietzler, M. Deubzer, T. Dreja, and E. Rukzio. Telewalk: Towards free
and endless walking in room-scale virtual reality. In Proceedings of the
2020 CHI Conference on Human Factors in Computing Systems, pp. 1–9,
2020.

[38] P. Schmitz, J. Hildebrandt, A. C. Valdez, L. Kobbelt, and M. Zieﬂe. You
spin my head right round: Threshold of limited immersion for rotation
IEEE transactions on visualization and
gains in redirected walking.
computer graphics, 24(4):1623–1632, 2018.

[39] M. C. Schwaiger, T. Thuimmel, and H. Ulbrich. Cyberwalk: An advanced
prototype of a belt array platform. In 2007 IEEE International Workshop
on Haptic, Audio and Visual Environments and Games, pp. 50–55. IEEE,
2007.

[40] M. C. Schwaiger, T. Thummel, and H. Ulbrich. A 2d-motion platform:
The cybercarpet. In Second Joint EuroHaptics Conference and Symposium
on Haptic Interfaces for Virtual Environment and Teleoperator Systems
(WHC’07), pp. 415–420. IEEE, 2007.

[41] M. Slater and M. V. Sanchez-Vives. Enhancing our lives with immersive

virtual reality. Frontiers in Robotics and AI, 3:74, 2016.

[42] M. Slater, M. Usoh, and A. Steed. Steps and ladders in virtual reality.
In Virtual Reality Software And Technology, pp. 45–54. World Scientiﬁc,
1994.

[43] J. L. Souman, P. R. Giordano, M. Schwaiger, I. Frissen, T. Th¨ummel,
H. Ulbrich, A. D. Luca, H. H. B¨ulthoff, and M. O. Ernst. Cyberwalk:
Enabling unconstrained omnidirectional walking through virtual environ-
ments. ACM Transactions on Applied Perception (TAP), 8(4):25, 2011.

[44] F. Steinicke, G. Bruder, J. Jerald, H. Frenz, and M. Lappe. Estimation of
detection thresholds for redirected walking techniques. IEEE transactions
on visualization and computer graphics, 16(1):17–27, 2009.

[45] F. Steinicke, Y. Visell, J. Campos, and A. L´ecuyer. Human walking in

virtual environments, vol. 2. Springer, 2013.

[46] K. Teknomo. Microscopic Pedestrian Flow Characteristics: Development
of an Image Processing Data Collection and Simulation Model. PhD
thesis, 03 2002.

[47] J. N. Templeman, P. S. Denbrook, and L. E. Sibert. Virtual locomotion:
Walking in place through virtual environments. Presence, 8(6):598–617,
1999.

[48] J. N. Templeman, L. E. Sibert, R. C. Page, and P. S. Denbrook. Immersive
simulation to train urban infantry combat. Technical report, NAVAL RE-
SEARCH LAB WASHINGTON DC INFORMATION TECHNOLOGY
DIV, 2006.

[49] S. Tregillus and E. Folmer. Vr-step: Walking-in-place using inertial sens-
ing for hands free navigation in mobile vr environments. In Proceedings
of the 2016 CHI Conference on Human Factors in Computing Systems, pp.
1250–1255. ACM, 2016.

[50] M. Usoh, K. Arthur, M. C. Whitton, R. Bastos, A. Steed, M. Slater, and F. P.
Brooks Jr. Walking> walking-in-place> ﬂying, in virtual environments.
In Proceedings of the 26th annual conference on Computer graphics
and interactive techniques, pp. 359–364. ACM Press/Addison-Wesley
Publishing Co., 1999.

[51] D. Waller, E. Bachmann, E. Hodgson, and A. C. Beall. The hive: A huge
immersive virtual environment for research in spatial cognition. Behavior
Research Methods, 39(4):835–843, 2007.

[52] C. Wang, O. A. Dogaru, P. L. Strandholt, N. C. Nilsson, R. Nordahl, and
S. Seraﬁn. Step aside: an initial exploration of gestural input for lateral
movement during walking-in-place locomotion. In Proceedings of the
24th ACM Symposium on Virtual Reality Software and Technology, pp.
1–5, 2018.

[53] Z. Wang, H. Wei, K. Zhang, and L. Xie. Real walking in place: Hex-core-
prototype omnidirectional treadmill. In 2020 IEEE Conference on Virtual
Reality and 3D User Interfaces (VR), pp. 382–387. IEEE, 2020.

[54] J. D. Wendt, M. C. Whitton, and F. P. Brooks. Gud wip: Gait-
In 2010 IEEE Virtual Reality

understanding-driven walking-in-place.
Conference (VR), pp. 51–58. IEEE, 2010.

[55] P. T. Wilson, W. Kalescky, A. MacLaughlin, and B. Williams. Vr loco-
motion: walking¿ walking in place¿ arm swinging. In Proceedings of the
15th ACM SIGGRAPH Conference on Virtual-Reality Continuum and Its
Applications in Industry-Volume 1, pp. 243–249. ACM, 2016.

12

