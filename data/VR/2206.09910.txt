Timeline Design Space for
Immersive Exploration of Time-Varying Spatial 3D Data

Gwendal Fouch ´e, Ferran Argelaguet, Emmanuel Faure and Charles Kervrann

2
2
0
2

n
u
J

0
2

]

C
H
.
s
c
[

1
v
0
1
9
9
0
.
6
0
2
2
:
v
i
X
r
a

Fig. 1: Illustration of the proposed 3D timeline design space for immersive exploration of time-varying spatial 3D data. The ﬁrst row
showcases different timeline representations, i.e. guiding curve of the timeline; while the second row showcases different support
conﬁgurations. The rightmost image ilustrates the use of an helicoid representation for the exploration of an time-varying embryo
imaging dataset. The viridis colormap is used to encode the elongation ratio of cells involved in morphogenetic movements.

Abstract— Timelines are common visualizations to represent and manipulate temporal data, from historical events storytelling to
animation authoring. However, timeline visualizations rarely consider spatio-temporal 3D data (e.g. mesh or volumetric models) directly,
which are typically explored using 3D visualizers only displaying one time-step at a time. In this paper, leveraging the increased
workspace and 3D interaction capabilities of virtual reality (VR), we propose to use timelines for the visualization of 3D temporal data
to support exploration and analysis. First, we propose a timeline design space for 3D temporal data extending the timeline design
space proposed by Brehmer et al. [5]. The proposed design space adapts the scale, layout and representation dimensions to account
for the depth dimension and how the 3D temporal data can be partitioned and structured. In our approach, an additional dimension
is introduced, the support, which further characterizes the 3D dimension of the visualization. To complement the design space and
the interaction capabilities of VR systems, we discuss the interaction methods required for the efﬁcient visualization of 3D timelines.
Then, to evaluate the beneﬁts of 3D timelines, we conducted a formal evaluation (n=21) with two main objectives: comparing the
proposed visualization with a traditional visualization method (using a temporal slider); exploring how users interact with different
3D timeline designs. Four tasks, relevant with temporal data, were considered: locating a time point, counting occurrences, ﬁnding
temporal patterns and ﬁnding a global maximum. Our results showed that time-related tasks can be achieved more comfortably using
timelines, and more efﬁciently for speciﬁc tasks requiring the analysis of the surrounding temporal context. Though the comparison
between the different timeline designs were inconclusive, participants reported a clear preference towards the timeline design that
did not occupy the vertical space. Finally, we illustrate the use of the 3D timelines to a real use-case on the analysis of biological 3D
temporal datasets in which domain experts in cell imaging were involved in the design and evaluation process.

Index Terms—Timelines, 3D temporal data, Multidimensional data, Virtual Reality

1 INTRODUCTION

In the biology and medical domain, 3D imaging breakthroughs have
notably increased the availability of time-varying spatial 3D data creat-
ing roadblocks and new challenges for researchers in image analysis,
and visualization in order to fully exploit the large amount of data
being produced [31,35]. However, while automatic and semi-automatic

• Gwendal Fouch´e and Ferran Argelaguet are with Inria, Univ Rennes, IRISA,

CNRS, Rennes, France.

• Charles Kervrann is with Inria Centre Rennes-Bretagne Atlantique,
UMR144 CNRS Institut Curie, PSL Research University, Sorbonne
Universit´es, Paris, France.
E-mail: name.surname@inria.fr.

• Emmanuel Faure is with LIRMM,CNRS,Montpellier, France. E-mail:

emmanuel.faure@lirmm.fr.

methods can be used to analyze such datasets, the direct exploration by
domain experts remains a necessary step during the analysis process.
The most common approaches for the visualization of time-varying
spatial 3D data, remain the use of temporal sliders [21], animation [27]
or juxtaposition of time points [37]. However, such method presents
a number of limitations, such as relying on the short term memory
to assess the temporal changes, and the limit of time points that can
be juxtaposed due to the limitations of display size. One potential
solution is to consider timeline visualizations to represent the evolution
of the temporal dimension, however, while timelines are powerful vi-
sualizations for temporal events, they are less adapted for 3D spatial
data.

This paper proposes a extended timeline design space for immersive
3D temporal data, inspired from the design space described by Brehmer
et al. [5]. Our design space extends the original design space, adapting
them to additional workspace dimension, deﬁning how data can be
partitioned and structured in a 3D environment. Moreover, due to
the speciﬁc characteristics of interaction of immersive contexts and in

1

 
 
 
 
 
 
order to take full advantage of 3D timelines, we discuss the basic set
of interaction techniques to explore and manipulate them, relying on
methods of the ﬁeld of Immersive Analytics [23], and propose a set of
design criteria to drive the design process.

In order to explore the potential beneﬁts of 3D timelines, we con-
ducted two evaluations. The ﬁrst evaluation, was a formal summative
evaluation, which explored how 3D timelines could improve data explo-
ration tasks. For this evaluation, mainly VR experts were considered,
and we mainly focused on performance and usability. The second
evaluation, was a qualitative evaluation conducted in collaboration with
experts in biology. The objective was to gather feedback on how 3D
timelines could be included in their analysis workﬂow, precisely, on
how they could take advantage of 3D timelines to ease the exploration
and validation process on their 3D temporal imaging data.

difﬁculties with rendering, but also issues with level-of-detail [38] and
occlusion [22], that can disturb the exploration of the data.

For example, Duran et al. [21] proposed a tool to visualize 3D tempo-
ral datasets of molecule simulations, juxtaposing a 3D data render with
charts to visualize one-dimensional numerical information. The small
multiple approach pushes this method to the extreme by coordinating a
partition of the data. Bento Box [27] juxtaposed multiple instances of
a same volumetric dataset under different parameters. Relying on an
immersive environment and 3D user interface, the different views are
displayed as a grid, interactions on time and rotation are coordinated.
The visualization of S4D data typically considers the visualization
individual time-steps, yet, the visualization of multiple time-steps could
enable a better identiﬁcation of temporal events, thus a 3D timeline
could be directly use.

2 RELATED WORK
2.1 Visualization of High Dimensional Data
High dimensional data poses a challenging visualization problem not
only due to the raw data size but also due to the heterogeneity of the
different dimensions constituting these datasets. These dimensions
are spatially and temporally referenced, represent numerical or cate-
gorical information, and come from various sources, such as imaging,
simulations or annotation processes. Andrienko et al. [3] presented
various approaches to handle this challenge: data aggregation and more
generally dimensionality reduction; semi or fully automatic feature
extraction; and juxtaposition.

First, dimensionality reduction approaches focus on extracting and
displaying the most relevant information with a lower-dimensional
representation in order to make it easier to apprehend or to help in
classiﬁcation tasks. For example, Demˇsar and Virrantaus [16] visual-
ize ocean vessels trajectory sets by aggregating and summarizing the
data as a volume by computing the density of movement. The result
is thus less cluttered and more legible. Woodring and Shen [52] pro-
posed a general visualization scheme allowing the projection of several
variables, combined with different volume operations into a 3D vol-
ume. Dimensionality reduction can also rely on linear transformations.
Principal component analysis is a classic example in the analysis of
multidimensional points clouds. Derived algorithms [13, 26] further im-
proved the method, better conserving the variance of the original data.
Other methods use non-linear transformations to reduce dimensions,
such as methods based on Fisher Linear Discriminant Analysis [40]
or the locally linear embedding [44]. The second approach consists in
extracting speciﬁc features or patterns from the data. This can result
in abstract representations that may complete the analysis on a direct
depiction of the data. For example, TransGraph [24] extracts transitions
in features or data items in time-varying volumetric data to produce a
graph juxtaposed with the 3D rendering. Finally, juxtaposition helps
representing and exploring high dimensional data by displaying differ-
ent views and projection of the data separately. Regarding this topic,
Munzner [42] proposed four design choices for coordinated juxtaposed
views. The different models were characterized by whether the encod-
ing used is different or not, and whether the data displayed in each
view is complete, a sub-set or a partition. Respectively in accordance
with the rules of Diversity and Consistency proposed by Baldonado et
al. [47], juxtaposing and coordinating several dimensionality-reduced
views is a reliable option to visualize high dimensional data.

2.2 Visualization of Time-Varying Spatial 3D Data
Kim et al. [29] deﬁne spatial 3D data as “data with an inherent, mean-
ingful width, height, and depth, where the relative position of things,
their length, surface size and shape, etc. all might matter to a user”, and
extend this deﬁnition to time-varying spatial 3D data, shortened respec-
tively as S3D and S4D. S3D data considers four main categories: 3D
paths (e.g. curves, trajectories), glyph or point clouds, surface data and
volumetric data [29]. Moreover, categorical or numerical data are often
present in such datasets, added through automatic or manual annotation
processes, which increase the complexity of the data and the repre-
sentation. The visualization of S4D data is challenging, as their large
size, high resolution and high density imply not only potential technical

2.3 Timeline

Timelines are a classic visualization for temporal data, which are mainly
used to represent series of events linearly or in form of a tree. Timelines
have a wide range of design choices [5], and this range allows to create
expressive representations. Hence, they are often used for summarizing
events, storytelling or historical summaries, but also for planning, using
calendars or Gantt charts for instance. Narrative visualizations are also
often used to present data and information in an attractive yet under-
standable way, and timelines can be designed to balance perceptual and
narrative effectiveness for this purpose. For example, TimelineJS [2]
and TimelineSetter [45] are tools used in general media to generate
slideshow timelines to describe long narratives, gathering numerous
major events. In a context of data analysis, Lifeﬂow [51] and Time-
lineTrees [8] aggregate data using tree structures, and use timelines to
explore the temporal aspect of these data.

Brehmer et al. [5] proposed a classiﬁcation of timelines based on
a review of 263 timeline designs, proposing a 3-dimension design
space. The ﬁrst dimension is the Representation of the timeline, i.e.
its “most visually salient aspect, its guiding visual metaphor”. The
most common and versatile representation of a timeline is linear, yet
radial or spiral representations can be more adapted to show periodic
data. Other representations can rely on grids, as for calendars, or on
arbitrary curves designed to support a narrative. The second dimension
is the Scale, which determines the link between temporal and displayed
distance; it is characterized notably by its reference point and the
function mapping the temporal dimension (e.g. linear or logarithmic).
The third dimension is the Layout, which describes if the display shows
one timeline or multiple faceted ones, if the timelines are segmented or
not. This design space includes some non-viable designs, yet describes
comprehensively most timeline designs. Nonetheless, 3D timeline
designs are not approached in this design space, and are actually lightly
explored in the literature. The few examples include Beedocs [1], a
timeline authoring tool using 3D animations to explore a 2D timeline,
HeloVis [9] which displays radar signal data on an helical visualization
or works by Kullberg et al. [32], who use the horizontal space of a 3D
environment to display time.

To help the exploration of timelines, interaction methods adapted to
the visualization have been developed. The most common interaction
is based on scrolling or sliders to move in time. For example, works by
Charles et al. [11] or Card et al. [10] use timelines to give an overview
of events while using sliders to explore data in time, that is displayed in
a juxtaposed view. TimeZoom [15] also relies on horizontal scrolling
to move in time, yet also base several other interactions on regions
of focus. Such interactions include scrolling in time by dragging the
region, zooming on the region or the whole timeline in order to variate
levels of detail, and ﬁnally means of creation, deletion and edition
of such regions. The need of enhanced interactivity led to the use
of various user interfaces for timelines. As such, Morawa et al. [41]
proposed Time Beads to interact with the timeline using a touch user
interface to support intuitive manipulation of time points, and Drossis
et al. [19] proposed to explore the temporal information through a
time-tunnel, displayed in an immersive 3D environment.

However, S4D data is rarely considered on timeline visualizations.
A few examples can be found in contexts of 3D model editors, as

2

proposed by Denning et al. [17] or Doboˇs et al. [18], that use timelines
to display the step-by-step construction of the model. Although, S4D
visualization tools sometimes use timelines as sliders, juxtaposing 1-
dimension additional information with the 3D spatial data, as in Duran
et al. [21] work or RubberSlider [12], which uses a VR adjustable
slider to explore a timeline and display 3D data. The lack of design
guidelines for the visualization of S4D data using timelines motivated
the extension of the design space from Brehmer et al. [5]. Yet, the
visualization of such 3D timelines would require large displays to
ensure that a reasonable number of time points can be explored and
visualized efﬁciently, thus, we leveraged the increased workspace size,
depth cues [36] and navigation techniques [33] provided by immersive
virtual reality systems to provide efﬁcient visualization methods.

3 A TIMELINE IN A 3D ENVIRONMENT

This section introduces our design space for 3D timelines, which ex-
tends the 2D timeline design space [5] for 3D environments, and notably
immersive environments. The extension considers the additional spatial
dimension in which data can be laid enabling the direct display of the
temporal dimension of the data.

As mentioned in the introduction, we focus on S4D datasets. We
assume that the temporal component of such dataset is discrete, or at
least it can be discretized. As such, we can construct a timeline in
which every time point is populated by a 3D snapshot, i.e. the state of
the 3D temporal dataset at an instant. We consider that some datasets
are composed of a set of objects, i.e. shapes with the own semantic
value, and deﬁne, assuming sufﬁcient tracking information, 4D objects
that span along multiple time points. These objects can be deﬁned
by segmentation process for imaging data [25], or by construction in a
surface-based 3D model [17, 18].

Finally, in order to exploit the interaction capabilities provided by
IVR systems and to take advantage of the 3D timelines, we detail the
set of interaction tasks needed for their exploration.

3.1 Extending the 2D Timeline Design Space

As presented in Section 2, Brehmer et al. [5] proposed a design space
for 2D timelines with the three following dimensions: scale, layout and
representation In this part, we adapt the design space to 3D timelines.
The two ﬁrst characteristics are mainly similar for 2D and 3D timelines,
we added those parts for completeness of the design space, also adding
a discussion for 3D temporal data. Then, we extended the design space
by adapting the representation dimension choices, yet also proposing
other types of guiding curves adapted to a 3D environment. Finally, we
introduce a fourth dimension to this design space, as a result of using
a 3D display, which describes the supporting plane on which timeline
branches are laid: the support dimension.

3.1.1 Scale: Displaying Time

The scale dimension represents the relation between the displayed
distance and the temporal distance. Although events will be laid in 3D
space, this relation will remain. Therefore, the scale dimension remains
characterized as deﬁned by Brehmer et al. [5]:

• A chronological scale spaces time points according to the actual
temporal distance, either linearly or logarithmically, depending
on the distribution of the events.

• A relative scale arranges the time points according to a baseline
It can notably be used to compare multiple timelines

event.
regarding this event.

• With a sequential scale, the distance between time points is ﬁxed
and does not correspond to the temporal distance. A similar
approach consist in encoding the duration between time points on
the timeline as well.

3

3.1.2 Layout: Arranging Time Points
The layout dimension corresponds to how the timeline is partitioned
in the display. Brehmer [5] describes several characteristics of a 2D
timeline layout. A ﬁrst main characteristic of a layout is whether
it is segmented or not. Segmentation is used to cope with spatial
organization issues, such as the limitation in size of a 2D display, but
also for analytic purposes, for example to separate the timeline to make
some periodic events more salient. The timeline layout can also be
qualiﬁed as uniﬁed or faceted, i.e. showing a timeline with one or
several lines; the latter can be useful for comparing data from different
sources over time. Whether derived from segmentation or faceting, we
refer to timeline parts as branches.

These two characteristics can be used to describe 3D timelines as
well. Similar factors are taken into account for the choice in layout.
Segmentation helps in solving issues of juxtaposition of visualization
and optimization of the large workspace offered by 3D environments.
Its analytical purpose is notably relevant in case of periodic data. On the
other hand, the choice between faceted or uniﬁed layout relies on the
nature of the data and use case. A uniﬁed timeline design is more suited
to focus on the dynamic features of one region of interest or group of
objects, while a faceted layout allow the comparison of several ones.
Faceted layouts are also adapted to compare of multiple datasets, as in
such cases, the most common task is comparison. In any case, faceting
or segmenting the layout tends to clutter the workspace. Attention
should be given to properly indicate the origin and characteristics of
each facet or segment as not to overwhelm the user.

3.1.3 Representation: Shaping the Timeline
The representation of a timeline corresponds to the shape, the guiding
curve along which are placed the time points. This curve is therefore an
equivalent of a time axis. In most cases, timelines are represented lin-
early [5], as for history timelines. This type of representation maintains
a single orientation, often horizontal and following reading direction,
for simplicity purpose. Other designs use radial representation, to
emphasize cyclic repetitions, or spirals, often used to get compact visu-
alizations. Depending on the goal of the author of the timeline, some
other types of representation can be designed for aesthetic, density or
pedagogic purposes. From these representations used in 2D designs,
we propose representations that take advantage of the 3D environment.
First, the linear representation could be extended to a 3D curve. Three
main possibilities emerge:

Flat curve. The most direct extension of the linear representation
in 2D would be to use a simple ﬂat curve, as seen in Figure 2-A. In
terms of representation, there is no limit to the amount of time points
displayable in the environment. The main drawback is that the further
the curve goes, the harder it is to reach or interact with the time points.

Convex curve. This representation displays the time points around
the user. Several types of curve could be considered. An arc of a circle
centered on the user would place all time points at the same distance,
enabling the same capacity of interaction and observation for each time
point. Such curve is shown in Figure 2-B. This counters the primary
issue of the ﬂat curve representation, yet the radius of the circle will
increase with the amount of time points, limiting the proximity required
for interaction. To compromise between proximity and amount of time
points, the user could be brought closer from a part of the arc of circle.
Another approach would be to use a parabolic curve, as in Figure 2-C.
In both those cases, a local temporal context is brought very close
from the user for interaction and observation, yet the other time points
remain at a reasonable distance.

Concave curve. As opposed to the previous ones, a concave
curve can be used to display close from the user a few time
points, and sending the other ones that are further in time, even
further in the environment.
This representation emphasizes a
local temporal context, frees some radial space around the user
and decreases the density of information in their ﬁeld of view.
In this sense, the amount of time points displayed is potentially
unlimited, yet harder to access. Similarly to convex curves, concave
curves could rely on parabolas, as in Figure 2-D, or arc of circles,

juxtaposed and the next circle of the helicoid. Other representations
using either different curves or volume could be used, that may be
tailored for speciﬁc analysis use cases, for an aesthetic purpose or to
create mnemonic designs. Changing the orientation in either axis can
also be a way to explore original representations.

3.1.4 Support: Exploiting the 3D Environment

In usual displays, timeline branches are most usually laid out on the dis-
play plane. As mentioned in part 2.3, a few works explored displaying
timelines in 3D environments. Beedocs [1] includes 3D perspective to
animate and display the timeline at a different orientation for aesthetic
purpose, while Kullberg et al. [32] even lays the timeline on the hori-
zontal plane of a 3D environment, using the vertical plane to display
the content of the time points.

As we propose to display 3D timelines in VR, we introduce an
additional dimension, the support, to refer to the 3D shape that supports
the timeline branches in such 3D environment. We describe here the
main choices that will mostly inﬂuence the timeline design. This
includes shape, size, position, and also count of supports on which the
timeline branches are displayed.We propose the following choices for
this dimension:

Vertical plane. The branches are laid on a plane vertically in front

of the user, like a classic 2D display.

Horizontal plane. The branches are laid on a plane parallel to
the ﬂoor. Horizontal head movements and ﬁeld of view are usually
preferred over vertical ones, thus this design choice could be beneﬁcial
compared to a vertical plane support in some cases, such as for com-
parison at one time point of multiple branches. The main drawback is
occlusion, since branches are displayed one in front of the others.

Multiple Planes. As opposed to the previous design choices in-
volving a single plane, here the branches are displayed on several ones.
This can be useful to optimize application design, or separate clearly
facets and segments.

Cubic. The branches are laid along multiple vertical or horizontal
planes. Such layouts can be useful to organize branches along 2 param-
eters, much like a 2 dimensional array. While very meaningful in this
purpose, this design is quite dense, which can be overwhelming for a
user and cause difﬁculties in the exploration.

Concentric cylinders. The branches are displayed on multiple
isoradial planes centered on the user. In terms of exploration, it is quite
similar to horizontal planes, yet ﬁlls the space around the user, which
can serve aesthetic purpose.

Each of these dimension choices are illustrated in Figure 1, second
line, in order. While this dimension is unnecessary for timelines with a
uniﬁed layout, these design choices can be useful for some speciﬁc use
cases, for application design, notably in terms of workspace usage, or
for aesthetics. Yet, some of these designs can also involve signiﬁcant
occlusion issues. Adapted navigation and application controls might be
required when using these design choices.

3.2 Interacting with 3D Timelines

This section discuses the interaction methods required for the explo-
ration and manipulation of a 3D timeline. First, we consider methods
enabling the free exploration of the timeline, supporting consume and
search tasks. Then, we consider tasks than allow the manipulation
of the timeline, in order to modify the arrangement of the timeline.
The discussed interactions consider that the user is using an immersive
virtual reality setup (e.g. head-mounted display), in which the user can
move physically to explore the virtual environment and that additional
input capabilities are provided by hand-held devices (e.g. controller).
For the sake of generalization, we will not discuss how the interactions
can be implemented, but which parameters (e.g. distance among time
points) could be modiﬁed.

The timeline is arranged in the environment in such a way as to have
one time point, that we will call from now on central time point of the

Fig. 2: Third person views of options for the representation dimension
of the 3D timeline design space. These illustrations show A) linear,
B) convex arc of circle, C) convex parabola, D) concave parabola,
E) helicoid and F) spherical representations.

depending on the amount of time points that need to be close to the user.

Other designs for 2D timelines rely on circular or spiral represen-
tation. These representations are particularly adapted to provide an
insightful representation of periodicity in time. For example, a spiral
layout can be used to represent several occurrences of a same periodic
event, as demonstrated in Weber et al. work [49]. However, because
of the varying radius of a spiral loop, the number of period has to be
limited. Nonetheless, spirals are also intrinsically space-ﬁlling, thus
producing dense representations, and can be engaging or even playful.
Consequently, we propose two additional representations adapted to
the design of a 3D timeline:

Helicoid. This representation coils the time points around a cylin-
der base. It can be centered on the user, displaying every time point
close from the user, as shown in Figure 2-E. Similarly to the 2D spiral
representation, this shape invites the display of several occurrences of
periodic data, without the drawback of a varying radius between each
period. For example, manipulating the scale dimension of the design,
the circular periods of the helicoid could be aligned according to the
occurrence of a particular event, for comparison purpose.

Spherical. Similarly, a spherical representation, as shown in
Figure 2-F, coils around a sphere base. The time points are thus
displayed around the user at the exact same distance, reducing
distortions, in size of orientation for instance, implied by distance
or perspective. This representation shares very similar advantages
and drawbacks with the 2D spiral. It is aesthetically interesting, but
the varying radius between two circular periods restrains its use for
periodic data.

These two representations share several other characteristics. The
exploration of the timeline is no longer horizontal as in the curve
representation, but rather radial and vertical, allowing fast jumps in time.
It is compact and takes full advantage of the 3D work space. However,
due to the use of the spatial upward axis, it can limit the use of faceted
layouts, as it could lead to confusion between the timeline branches

4

timeline, that is the closest from the user, as shown in Figure 5. Time
points are identiﬁed by an indicator beneath the objects represented.

3.2.1 Exploring the Timeline

First, the user can physically move (e.g. walk) in order to approach
the time point of interest. However, the range of time points that can
be explored will be dependent on the shape of the timeline and the
workspace of the virtual reality setup. Some timeline designs covering
an important part of the work space around the user, for example
when using convex curves or spherical representation, will enable the
direct exploration of all time points without requiring a large physical
workspace. In contrast, linear or parabolic representations can spread
far away for the user, and faceted or segmented layouts might display
data too high, limiting the number of time points that the user can
access. To overcome this limitation, one solution is to consider virtual
navigation methods [33], that enable the user to virtually (without
physically moving) navigate. Potential good candidates are scene-in-
hand methods [48] or virtual steering [7] which will allow users to
reach time points arbitrarily far away from them. Yet, the choice in the
virtual navigation method will depend on the implementation of the
timeline, the data represented and the end user proﬁle.

Finally, another alternative to enable a full exploration of the timeline
is to move the timeline along its time axis, thus changing the central
time point. This can be done continuously by scrolling the time points
(e.g. using a temporal slider), or directly by selecting a time point from
afar (e.g. using a ray-based selection method [4]). These methods will
minimize the user’s physical motion.

3.2.2 Manipulating the Timeline

There are numerous continuous parameters involved in the display of
the timeline, such as the space between time points, the center and
radius of curvature for curved representations, the height for helicoid
representations or the distance between timeline branches for faceted
and segmented layouts. These values can strongly vary, notably de-
pending on the amount time points displayed in the timeline. For this
reason, the user could be able to choose among pre-deﬁned conﬁgura-
tions of timeline designs. Nonetheless, to increase the ﬂexibility of the
visualization, the user should be able to adjust the parameters of the
timeline display in order to better ﬁt their use-case requirements. The
modiﬁcation of these values can be done using graphical user interfaces
or speciﬁc 3D widgets [14]. Moreover, in order to control the infor-
mation contained in the environment level-of-detail options are also
relevant. The user should be able to choose to display only a proportion
of the time points selected regularly along the timeline, and to directly
choose time zones to collapse or extend via manual selection.

3.2.3 Manipulating the Content of the Time Points

The ﬁnal interaction category relies on how the content of the time
points could be modiﬁed. First, the 3D objects at each time point
can be rotated and scaled, in order to enable the user to explore them
from different orientations. To ensure consistency, we advocate to link
the rotations and scale for all time points, thus obtaining a consistent
orientation for all time points. Such manipulation could be achieved
using bi-manual manipulation methods [39].

Second, operations to reduce the information at each time point can
also be considered. (A) Cut-away views deﬁned by a clipping plane or
a 3D volume (e.g. cube) operators. The user could deﬁne the position
and orientation of the cutaway operator in the central time point, a
corresponding cut-away view could be applied as well on each of the
other object or group of objects, relatively to their barycenter. Standard
3D manipulation techniques can be used to control the cutaway opera-
tor [39]. (B) Object and value ﬁltering operations. These operations
will be highly dependent on the available data of the S3D. For example,
if the data for each time point is composed by a set of 3D objects
(e.g. different 3D meshes, segmented 3D volume), individual objects
could be removed from the timeline by selecting them. Moreover, if
the individual objects are linked with other objects at different time
points (e.g. same object appearing at different time points), the selected

objects and their linked objects could also be hidden. Finally, if addi-
tional categorical, ordinal or numerical attributes are available for each
object (e.g. volume of a given object), ﬁltering operations could also
be deﬁned (e.g. hide the objects with a volume lower than a threshold).
These operations to reduce the displayed information could be of great
relevance to reduce the amount of displayed information, reducing
clutter. These interactions could be designed considering existing 3D
selection methods [4] and 3D graphical user interfaces [14].

3.3 Choosing a Timeline Design
In this part, we propose an set of design criteria that will drive the
design choices of 3D timelines. Focusing on the constraints that can
be introduced due to the attributes of the data (topology, resolution,
rendering method), application design constraints and more importantly
the narration, storytelling and expressiveness purpose, we identiﬁed the
following key criteria:

Preferred exploration. Designs will favor exploration of the time-
line simply through head rotation, or through virtual navigation and
manipulation of the timeline.

Limit of time points. The amount of time points displayable ob-
jects easily discernible can be limited, depending on how the design
partitions the workspace.

Workspace usage and visual clutter. Designs occupy more or
less radial and vertical space around the user, which can cause occlusion
and application design issues.

Periodicity in the data. Periodicity and temporal patterns are often
important characteristics in data analysis, and some design choices,
such as segmentation or helicoids can emphasize such characteristic.

Aesthetics, originality, playfulness. The attractiveness of a
visualization can be crucial when trying to convey information. The
design can be adapted to the use case and the public for this purpose.

Innovative designs might create more adapted visualizations or more
catchy aesthetics. Yet, it should be noted that exotic designs might also
be more difﬁcult to interpret, as stated by Brehmer et al. [5], it is thus
recommended limit the unfamiliar choices in the design of the timeline.
On the other hand, in some cases design choices are interlocked together
between several dimensions. For example, a helicoid representation
strongly implies the use of a cylinder support.

4 EVALUATION
The previous section discussed a wide range of potential 3D timeline
representations, yet, from the design on itself, it remains unclear how
users will leverage the 3D timeline to explore S4D data. Thus, we
conducted a user evaluation in order to assess the potential beneﬁts
of 3D timelines for the exploration of S4D data. Our objective was
to assess representative 3D timeline designs to explore how users will
perform exploration tasks.

4.1 Dataset and Task Design
The S4D dataset used in the evaluation was generated procedurally in
order to keep the experiment accessible but also to limit the potential
bias between users in the approach of complex S4D and in the manipu-
lation of 3D models (see Figure 3). As such, we limited the number of
time points and objects ensuring that users will be able to apprehend the
dataset. The objects were represented by spheres, and their position did
not change over time. The dataset was composed of 6 objects evolving
over time, and depending on the task (see below) having either 40 or
80 time points. The size of the objects increased monotonously, so
that users could keep points of reference when exploring over time.
In order to enrich the dataset, objects were annotated with 2 types of
information. First, a categorical information describing the afﬁliation
of each object to one of 5 groups, which could change over time (see
Figure 3, center), was encoded with different colors. We introduced
randomly several occurrences of a speciﬁc pattern in the group infor-
mation, on which we can evaluate success and error rates for the related
task. Second, a continuous information (ﬂoat value) evolving over

5

Fig. 3: Environment for the user experiment. The right image shows the Locating time point task in the No timeline condition; the middle
one shows the Counting occurrences task in the Curved condition; the left one shows the Finding a global maximum task in the Helicoid
condition, where the objects are colored using the viridis colormap.

time, encoded with the viridis color map (see Figure 3, right). This
value was generated by adding 4 random Gaussian functions, one on
each 20-time-point segment of the dataset.

During the experiment, the objective was to let participants to ex-
plore the dataset and perform different tasks. We deﬁned four data
exploration tasks that corresponded to common tasks for the explo-
ration of time-varying data: locating a time point, counting occurrences
of a particular event, ﬁnding temporal patterns or ﬁnding a global max-
imum. For the location task, a dataset of 80 time points was used.
Participants had to ﬁnd random deﬁned time points between 0 and 79.
They had to reach the indicated time point by using the time explo-
ration technique available, described below. For the counting task, a
dataset of 40 time points, annotated with the group information was
used. Participants had to count the number of objects of a given group
in all time points. To limit the length of the task, it was limited to 3
minutes. For the pattern task, a dataset of 40 time points, annotated
with the group information was used. Participants had to count the ap-
pearances of a speciﬁc 3-time-point-long temporal pattern that objects
might follow in the 40 time points displayed. The task was limited to
3 minutes of exploration. Finally, for the maximum task, a dataset of
80 time points, annotated with the continuous information was used.
Participants must ﬁnd the time point exhibiting the maximum value.
For simplicity, all objects from the same time point had the same value.

4.2 Hypotheses

The two ﬁrst tasks (location and counting) did not require temporal
context. Indeed, the information to ﬁnd was punctual in time, thus any
method allowing scrolling through time could be sufﬁcient. Thus, we
did not expect timelines to be particularly efﬁcient for this type of task.
Although having too much information can be overwhelming for the
user, we argue that the added temporal context could still be beneﬁcial.
On the other hand, the two other tasks (pattern and maximum) required
information from previous or following time points. As such, we
expected better outcomes using timelines. The result could also be
strongly dependent on the timeline design, as how the information is
displayed and accessed. We expect that denser timeline designs would
allow to access larger temporal context and could thus perform well
when it is required, while also being useful to handle higher amounts of
time points. Accordingly, we chose different timeline designs, which
are detailed in Section 4.4. In summary, our hypotheses were:

H1a Tasks that did not require exploring the temporal context will be

achieved at comparable performance with or without timeline.

H1b Tasks that did not require exploring the temporal context will be

achieved more comfortably with a timeline.

H2 Tasks that require exploring the temporal context will be achieved

better using a timeline.

H3 Denser timeline designs will more adequate for achieving the tasks.

4.3 Apparatus and Participants

The material used for the tests and experiences described throughout
this paper was as follow: a HTC Vive Pro HMD with 2 Vive controllers,
a PC with Windows 10, an Intel Xeon W-2104 CPU (4 cores, 3.2 Ghz
base frequency) and a Nvidia RTX 2080 GPU. The VR application
runs on Unity 2019.4.5f1.

This experiment included 21 participants, 5 women and 16 men,
aged from 22 to 42, mostly recruited from the local laboratory. Two of
them had low experience with VR, the others were expert VR users.

4.4 Independent and Dependent Variables

The experiment followed a within-subject design in which participants
had to perform the different tasks using 3 different visual conditions.
The ﬁrst one was the No timeline condition, in which only a snapshot
of the dataset at an instant was displayed. The two others used timeline
designs which took advantage of the 3D workspance, a helicoid uniﬁed
and a circular convex uniﬁed timelines. They will be referred to as
respectively Helicoid and Curved conditions.

For all tasks, we measured the time to complete the task, as well as
the movements and the time using the different available VR interaction
tools. For the locate task, we also computed the difference between the
selected time point with the target time point. For the counting task, we
also computed the error rate. For the pattern task, we further evaluated
the precision and recall. Finally, for the maximum tasks, we evaluated
the accuracy.

4.5 Experimental Protocol

At the beginning of the experiment, participants signed a consent form
and ﬁlled a demographic information questionnaire. Participants re-
ceived an explanation of the VR system and the available interactions.
We mainly considered interactions that allowed the users to achieve
the designed tasks. As such, object selection and task validation was
done using a virtual laser pointer, and object manipulation was done
using a bi-manual control. Time exploration in the No timeline condi-
tion was done by scrolling on the controller touchpad or using a direct
manipulation on a slider (see Figure 3, left). In the other conditions,
scrolling made the timeline move along its directing curve, and a direct
selection based on a gaze and click interaction was available, users had
to orient their head towards the time point and press a controller button.
We let them get used to the tools and application layout for 10 minutes.
The participant then proceeds to the tasks in order, in which the display
condition was counterbalanced using a Latin Square.

After each condition, participants were asked to ﬁll the SUS [6] ques-
tionnaire to evaluate usability, and the CSQ-VR [30] and FMSS [28]
questionnaires to assess cybersickness. Finally, to subjectively assess
the timelines, for each task and condition we asked the following ques-
tions: “What condition felt the most comfortable for this task?” and
“What condition seemed the most efﬁcient for this task?”.

6

        (a) Comfort

(b) Efﬁciency

Fig. 4: Subjective results for each timeline design and task. (a) Ranking results for the question “What condition felt the most comfortable for this
task?”. (b) Ranking results for the question “What condition seemed the most efﬁcient for this task?”

4.6 Results

For each task, we obtained a total of 63 observations, characterized by
the 3-level between-subjects factor Order and 3-level within-subjects
factor Condition. We used repeated measures two-way ANOVA to
analyze the results. When the normality assumption was violated
(Shapiro-Wilk normality test) we transform the data using the Aligned
Rank Transform (ART) [50] prior conducting the ANOVA analysis.
Post-hoc pairwise tests with Bonferroni correction (α = 0.05) were
used when needed.

4.6.1 Main Effects for Condition

Locate task. This task was the ﬁrst of each condition, thus we removed
the two ﬁrst trials of each participant, which might have induced too
much variability, as users were still getting used to the method, and
averaged the 8 other observations. The users made almost no errors
(Avg=0.018; SD=0.077), showing that participants were able to perform
the task accurately. In addition, the ART ANOVA order and condition
vs average time showed a signiﬁcant effect of the condition (F(2,36) =
13.87; p <0.001). Post-hoc tests validated lower times during the No
timeline condition (Avg=7.12; SD=1.86) compared to the two others
(Curved Avg=8.75; SD=2.38; p <0.001, Helicoid Avg=9.57; SD=4.13;
p <0.001), yet no signiﬁcant difference between the latter. This tend to
invalidate H1a, since performance was lower using timelines.

Counting Task. While the task was limited in time, the limit was
never reached. The ART ANOVA order and condition vs time showed
a signiﬁcant effect of the condition (F(2,36) = 11.99; p <0.001). Post-
hoc tests validated that the No timeline condition (Avg=106.8; SD=40.4)
gave signiﬁcantly higher times than the two others (Curved Avg=76.8;
SD=42.2; p <0.01, Helicoid Avg=68.4; SD=32.7; p <0.001), yet no
signiﬁcant difference between the latter. This tends to invalidate H1a,
since performance was higher with timelines. The ART ANOVA order
and condition vs error rate gave no signiﬁcant results.

Pattern task. Participants were able to achieve the task with al-
most no errors showing that all methods allowed to perform the task
(Avg=0.993; SD=0.025). Moreover, the ANOVA order and condition
vs recall showed a signiﬁcant condition effect (F(1.63,29.36) = 6.23;
p <0.01; η 2
p=0.26). Post-hoc tests validated a signiﬁcantly lower recall
between the No timeline condition (Avg=0.652; SD=.201) and the two
others (Curved Avg=0.798; SD=0.15; p <0.05, Helicoid Avg=0.818;
SD=0.17; p <0.01), yet no signiﬁcant difference between the latter was
found. This tends to support H2.

The ART ANOVA order and condition vs time showed a signif-
icant main effect on condition (F(2,36) = 12.5; p <0.001). Post-
hoc tests showed signiﬁcantly lower times for the Helicoid condi-

tion (Avg=157; SD=38.8) against the No timeline condition (Avg=192;
SD=20.9; p <0.001), and also against the Curved condition (Avg=180;
SD=28.5; p <0.05), yet no signiﬁcant difference between the latter.
This tends to support H3.

Maximum task. We averaged the measured values of each of the
5 trials of each participant on each condition. The measured error
rate was always close to 1 (M = 0.997, Min=0.98), participants were
able to accurately perform the task with all conditions. Furthermore,
the ANOVA order and condition vs average time showed a signiﬁ-
cant effect of the condition (F(1.69,30.43) = 8.27; p <0.01; η 2
p=0.31).
Post-hoc validated signiﬁcantly higher times for the No timeline con-
dition (Avg=32.5; SD=10.54) than the Helicoid condition (Avg=26.1;
SD=9.12; p <0.05) and the Curved condition (Avg=22.8; SD=9.19;
p <0.001). This tends to support H2.

Questionnaires. According to the CSQ-VR and FMSS results (re-
spectively Avg=0.76/36; SD=0.85 and Avg=1.7/20; SD=1.5), partic-
ipants did not suffer a signiﬁcant increase on cybersickness . The
ANOVA order and condition for the SUS scores showed a signiﬁcant
effect of condition (p < 0.05). Post-hoc tests only showed a signiﬁcant
effect for the Curved condition (Avg=81.9; SD=11.7) against the No
timeline condition (Avg=70.4; SD=12.2; p <0.01).

Figure 4 provides a summary for comfort and efﬁciency assessment
for each condition. In terms of comfort, the users generally preferred
the Curved condition for every task. The No timeline condition was
second only in the Timepoint task, for the other tasks the Helicoid
condition was preferred. About subjective estimation of efﬁciency, the
Curved condition was still preferred in all tasks, except in the Finding
Timepoint task, for which the No timeline condition was arguably even.
However, the second place was more clearly attributed to the Helicoid
condition for this criteria.

4.6.2 Order and Interaction Effects
We analyzed potential order and interaction effects for each test. For
most, the order effect was not signiﬁcant, or could not be conﬁrmed by
post-hoc tests. However, we did ﬁnd signiﬁcant effects for some cases.
The ART ANOVA order and condition vs average time on the
Finding Timepoint task showed a signiﬁcant order effect (F(2,18) =
5.00; p <0.05), which was validated by a post-hoc test as a difference
when the Helicoid was the ﬁrst condition (Avg=10.05; SD=4.26) and
when it was the last (Avg=7.1; SD=1.24), p < 0.05. Judging from the
important standard deviation, we hypothesise that starting with the
Helicoid might have been overwhelming to some users during their
familiarization with the system, causing higher achieving times in this
ﬁrst task of the experiment. This interpretation is further supported as
the Helicoid was judged the least comfortable condition for this task.

7

0%20%40%60%80%100%No timelineHelicoidCurveNo timelineHelicoidCurveNo timelineHelicoidCurveNo timelineHelicoidCurveTimepointCountingPatternMaxMost comfortable condition estimated for each task 1st choice2nd choice3rd choice0%20%40%60%80%100%No timelineHelicoidCurveNo timelineHelicoidCurveNo timelineHelicoidCurveNo timelineHelicoidCurveTimepointCountingPatternMaxMost efficient condition estimated for each task 1st choice2nd choice3rd choice100%1st choice2nd choice3rd choiceThe ANOVA order and condition vs average time on the maxi-
mum task showed a signiﬁcant interaction effect (F(1.69,30.43) = 8.27;
p <0.01; η 2
p=0.31). Post-hoc tests conﬁrmed that the results from the
No timeline condition as ﬁrst condition of a participant were signiﬁ-
cantly lower than any other case when the participant executes the task
in the second timeline condition. This can be explained by a learning
effect on the use of timelines, which becomes signiﬁcant when achiev-
ing the task with a second design. Though, the condition effect showed
that both Curved and Helicoid conditions obtained signiﬁcantly lower
times regardless of order, so this did not alter our conclusion on H2.

4.7 Discussion
The results from the two ﬁrst tasks, that did not essentially require
temporal context, were mitigated, so we must reject H1a, . The results
from the questionnaire however support H1b, as users did report pref-
erence for timelines for these tasks. Several results from the tasks of
ﬁnding patterns and global maximum support H2, that we can accept.
Finally, results from the task of ﬁnding patterns supports H3.

Overall, these results showed signiﬁcant beneﬁts of using timeline
designs over classic visualization for temporal exploration tasks, in
terms of time and quality of completion, yet also in user experience.
Nonetheless, we expected a more signiﬁcant difference between the two
timeline designs, notably regarding the different number of time points
between the tasks. We explain this lack of differences due to the choice
of using a Latin Square ordering method: in two out of three orderings,
the Curved condition was tested after the Helicoid. As learning effects
did disturb some results, we think that extending this study with the 6
other ordering possibilities might make such effect appear clearly, but
would however require a large number of participants.

5 3D TIMELINES TO EXPLORE 3D TEMPORAL IMAGERY
In order to illustrate the 3D timeline usage in a real application, we
considered spatio-temporal datasets acquired through live embryo mi-
croscopy imaging. Our goal was to gather domain users feedback, on
how 3D timelines could be used for the exploration of real datasets. A
total of 20 biology experts participated, among which 5 were familiar
with the dataset or experts in embryology, and the others are specialized
in other domains, which allowed us to gather their feedback on the
usage of 3D timelines for data analytic purposes. They all had low to
no experience with VR.

5.1 Presentation of the Use Cases
The dataset we focused on (see Figure 5) is a live recording of the
embryonic development of a Phallusia Mammillata, a tunicate of the
ascidian class. The ascidian embryos are characterized by their fast
development and low number of cells (a few hundreds). These species
presents particularly transparent membranes, a lack of cell migration
and apoptosis, i.e. programmed cell death, in its early development, sim-
plifying the imaging process and the tracking computation. The acqui-
sition was made using confocal multiview light-sheet microscopy [25].
It generated 180 3D images, taken once every 89 seconds. The output
data was then segmented and the object tracking, or cell lineage, was
computed using the ASTEC pipeline [25], resulting in a surface-based
spatio-temporal dataset of a few hundred megabytes. Additional cate-
gorical and numerical data were added through automatic and manual
process by the community of biologist working with these data. More
information on the dataset is available on MorphoNet website [34].

The visualization of the post-processed dataset is an important part
of the analytical process. Initially, as most of the image processing and
annotations are automatic, users need to be able to validate, correct
and add data manually, for instance to check for errors in segmentation
which could lead to abnormal cell shapes. Then, the 3D nature of
the data and high temporal resolution allows a general observation of
the main dynamics involved in biological processes through different
angles, giving insight and understanding of the evolution of the embryo.
Speciﬁc regions of interest can be identiﬁed through the exploration of
the cells, their surrounding and their evolution in time. Thus, informa-
tion such as outliers or asymmetrical behaviours between sister cells
can be extracted, as shown in Figure 6, to be ultimately compared either

Fig. 5: Embryo at the 30th time point. The snapshot at the central
time point shows 2 groups of are selected symmetrically as to compare
their individual evolution. They are displayed on a Circular Convex
Faceted timeline, linear scale, vertical plane. The information color-
mapped is the remaining lifespan before division (colormap viridis).

with a ground truth, a model, or other samples potentially acquired in
different setups.

5.2 Application and Timeline Design

The application used in the experiment was extended in order to better
support the analysis of the S4D dataset. First, the user could choose the
annotated information displayed through a 3D GUI. Their choice will
change the color-mapped information. Second, we also implemented an
object ﬁlter operation to decrease the amount of information displayed
on the timeline. User could select a cell on the 3D snapshot to select
the whole 4D object, i.e. each occurrence of the cell (including parent
and child cells) at each time point. Only the selected 4D objects were
displayed (see Figure 5).

From the dataset and the different use case analyzed, we proposed
the following timeline design. As the dataset observed comes from
imaging taken at regular time step, the scale dimension of our design is
thus intrinsically chronological and sequential. Considering the tasks
described in the previous section, we considered two layout choices,
one that could allow comparison between cells, and another for an
analysis of the spatial context, respectively faceted and uniﬁed layout.
The choice in representation is inﬂuenced by the amount of time points
and the size at which the objects have to be displayed for a proper
visualization. A helicoid representation could handle the amount of
time points, yet it is not optimal to use with a faceted layout if the
user wants to compare many cells, in which case we preferred a curved
representation. Finally, we end up with two 3D timeline designs: (1)
helicoid uniﬁed, chronological and sequential, cylinder support and (2)
curved faceted, chronological and sequential, vertical plane support.

Finally, taking advantage of the large work space offered by immer-
sive environment, we juxtaposed the 3D timeline with the 3D snapshot
at an instant or interest, as shown in Figure 5. The timeline provides
with temporal context, and the 3D snapshot provides with spatial con-
text, giving a more complete point of view to the user. In the following,
we will describe examples of processes for analysis relying on the
timeline visualization. The accompanying video provides additional
insights on the different examples.

5.3 Finding Regions of Interests in Large Datasets

Deﬁning a region of interest is a classic visualization task, especially
difﬁcult when exploring large multidimensional datasets. On this use
case, region of interests were deﬁned both in the 3D space and in time.
We proposed an iterative interaction process to deﬁne and reﬁne them,
both in time and in space, using 3D timelines in VR.

Initially, the user selects a few objects via ray-based selection as well
as an adapted layout for the 3D timeline. The ﬁrst step of the exploration
consists in a broad overview of the objects and color-mapped values
displayed over the timeline, supported by the exploration techniques
detailed in Section 3.2.1. During this step, the 3D snapshot will follow
the gaze of the user, in order to keep spatial context while exploring the
global temporal context. Such global exploration can help eliminating

8

lineage tree [46] displaying and allowing comparison of the cell shape
evolution, which was one of the main tasks detailed for the use case.

5.6 Testing and Expert Feedback

In this section, we gather and summarize the feedback obtained during
the evaluation sessions. They participated in sessions of about an hour
by groups of 2 or 3, in order to try the application and discuss potential
application of 3D timeline visualizations in their respective ﬁelds. We
presented them the dataset used and the application controls, and let
them explore the data using the timeline designs proposed and the
analytic techniques described previously.

The embryology specialists were overall positive about the visual-
ization. They could analyse easily value evolution over different cells,
as in Figure 1, identify outlier behaviors, and obtain information about
a cell differentiation, as shown in Figure 6, where an undetermined
cell is selected and differentiate itself after division. They also consid-
ered how such visualization could be beneﬁcial in comparing multiple
embryos, which they can difﬁcultly do with their current visualization
tools. The specialists from other domains could not go into such details
with this dataset, yet they projected how they could beneﬁt from 3D
timelines for their own data. They quoted several examples of adapted
use case with other S4D datasets such as imaging of organoids [20], in
context of immunology or cancer research. They also mentioned how
3D timelines could be helpful to visualize colocalization over time of
objects of different nature in multi-channel imaging.

Most of the drawbacks reported were about improving the applica-
tion design to integrate it in the analysis workﬂow. Several key points
in the analysis process should be included to answer completely the
use case, including raw data visualization, standard data formatting
or annotation options. The integration of VR equipment is also an
obstacle, yet several people mentioned they would be willing integrate
it in their work stations if the mentioned options were implemented.

6 GENERAL DISCUSSION AND CONCLUSION

In this paper, we proposed an extension of the 2D timeline design
space proposed by Brehmer et al. [5] into a 3D timeline design space,
focusing on their use for S4D dataset visualization. To do so, we
extended the representation dimension, using 3D curves as guiding
lines for timelines, and introduced an additional dimension describing
the 3D geometry on which several timeline branches could be displayed,
named support dimension. We proposed to use these timelines in a
VR environment, leveraging the beneﬁts of the material to enhance
the exploration and interaction with such structures. We tested two
3D timeline designs against a baseline visualization based on a 3D
render and time slider, on tasks oriented toward the exploration of
a S4D dataset. The experiment results led us to conclude that 3D
timelines signiﬁcantly improved the achievements of tasks requiring
large temporal context, yet could not conclude on the beneﬁts of one or
the other timeline. Finally, an application implementing 3D timelines
and adequate interaction methods on a embryo S4D dataset was tested
by 20 biologists. Their feedback was very positive, both for this speciﬁc
dataset but also opening to various use cases in other biology domains.
As opposed to the design space proposed by Brehmer, we are not
classifying existing examples of timelines. By extending the 2D design
space, we could propose a mostly usable and general 3D design space,
yet it also implies our design space might be less exhaustive. We
expect that both the representation and support dimension could be
even further explored, as they exploit the 3-dimension space, and could
be used for more innovative or use-case speciﬁc design choices in each
of these design choices. Nonetheless, S4D data are extremely varied,
and the different topology, resolution, temporal characteristics might
be obstacles in the encoding of such data as time point information.
Yet, once this obstacle overtaken, this variety in the data and in the
associated analysis use-cases could inspire other design choices, which
would also enrich our design space.

Similarly, future works could improve and enrich the interaction pal-
let we provided. The use of 6-degree-of-freedom 3D interface allowed
us to implement efﬁcient yet basic exploration and manipulation of
S4D datasets for general tasks. However, the literature proposes ﬁner

Fig. 6: Two sister cells are selected and displayed on the timeline. The
information color-mapped corresponds to the fate of the cells. The
selected ones start without annotation and are determined after a ﬁrst
division. The tree-like structure of the timeline shows the asymmetry
of the division, with one cell signiﬁcantly larger than the other.

some features, through value ﬁltering or by collapsing the timeline at
places nothing of interest happens, as described in Section 3.2.3, and
identify some time points of interest. In the second step of this process,
a time point can be brought in front of the user easily through a gaze
and click interaction. The user is thus near a selected local temporal
context, visible on the timeline, and the 3D snapshot is displayed in
front of the user, allowing the reﬁnement of the object selection, i.e.
of the local spatial context. Further reﬁnement of the spatio-temporal
context can be done by repeating this process.

Overall, the timeline should give enough temporal context to ﬁnd
times of interest, and the 3D snapshot enough spatial context to ﬁnd
regions of interest. The juxtaposition and synchronisation of interaction
of the two visualizations, the timeline and the 3D snapshot, allows the
search and deﬁnition of a spatio-temporal region of interest.

5.4 Comparing Objects

Comparison is also a usual analysis task in visualization, yet Kim et
al. [29] report that this topic is quite underexplored in the case of S4D
datasets. Timeline visualizations intrinsically juxtapose and allow a
comparison between the selected objects or regions of interest at various
time points. Depending on the temporal distance, such comparison can
be supported by adequate 3D timeline designs, especially in the case
of periodic data, as discussed in Section 3.3. Otherwise, interactive
level-of-detail and timeline collapse methods described in Section 3.2.2
allow to choose speciﬁc time points to compare.

However, the task of comparing 4D objects is more complex, re-
quiring to compare both temporal and spatial features that need to be
identiﬁable in each of the compared objects. For example, using a
faceted layout, the 3D timeline visualization allows the comparison
of selected 4D objects or regions of interest, extracted from one or
more datasets. The user can create a side-by-side view of the objects of
interest, and manipulate them in coordination, according to methods
described in Section 3.2.3. It enables a direct comparison of the 4D
objects through several timeline branches, allowing to compare both
the spatial information at each time point, and the evolution over time
of the objects.

5.5 Fusion and Fission

A particularity of the considered dataset is the notion of lifespan, as
cell fusion and ﬁssion events will modify the number of 3D objects in
a given time point. We approached this issue considering that selected
4D objects comprise all of the 3D objects involved in the event, creating
different branches. In case of a fusion event, the object will have two
branches before and one after the event; in case of a ﬁssion, there
will be one branch before and two after the event. We propose an
adapted layout for the 3D timeline design to represent the branches.
The resulting layout is a graph of temporal relation between the objects
in the dataset. In our speciﬁc use case, as there is mostly ﬁssion events,
i.e. cell divisions, we end up with a tree visualization, oriented along
a timeline, as shown in Figure 6. This visualization is similar to a

9

techniques, notably for selection and navigation [33], that could be
more adapted depending on the characteristics of the data or the 3D
timeline design choices. Our interaction pallet allows to approach most
of the Immersive Analytics tasks described by Fonnet and Pri´e [23],
yet some of them were left out. Notably, the biologist who tested the
application regretted the lack of annotation functionalities, as such
task is key in the analysis process. We suggest that such limitation, as
well as the obstacle that is the integration of VR material in analysts
workspace, could be overcome through asymmetric collaborative visu-
alization systems, as described by Reski et al [43], with one user on a
desktop application and the other in VR.

REFERENCES

[1] Beedocs 3d timeline. http://www.beedocs.com/timeline3D.
[2] Timelinejs.

Northwestern University Knight Lab,

2013.

http://timeline.knightlab.com/.

[3] G. Andrienko, N. Andrienko, U. Demsar, D. Dransch, J. Dykes, S. I. Fab-
rikant, M. Jern, M.-J. Kraak, H. Schumann, and C. Tominski. Space, time
and visual analytics. International Journal of Geographical Information
Science, 24(10):1577–1600, 2010.

[4] F. Argelaguet and C. Andujar. A survey of 3D object selection techniques
for virtual environments. Computers & Graphics, 37(3):121–136, 2013.
[5] M. Brehmer, B. Lee, B. Bach, N. H. Riche, and T. Munzner. Timelines
revisited: A design space and considerations for expressive storytelling.
23(9):2151–2164.

[6] J. Brooke. SUS: A quick and dirty usability. Usability evaluation in

industry, 189(3), 1996.

[7] H. Brument, A.-H. Olivier, M. Marchal, and F. Argelaguet. Does the
control law matter? Characterization and evaluation of control laws for
virtual steering navigation. In ICAT-EGVE 2020-International Conference
on Artiﬁcial Reality and Telexistence & Eurographics Symposium on
Virtual Environments, pp. 1–10, 2020.

[8] M. Burch, F. Beck, and S. Diehl. Timeline trees: Visualizing sequences
of transactions in information hierarchies. In Proceedings of the working
conference on Advanced visual interfaces, AVI ’08, pp. 75–82. ACM.
[9] A. Cantu, T. Duval, O. Grisvard, and G. Coppin. Helovis: A helical
visualization for sigint analysis using 3d immersion. In 2018 IEEE Paciﬁc
Visualization Symposium (PaciﬁcVis), pp. 175–179. IEEE, 2018.

[10] S. K. Card, B. Suh, B. A. Pendleton, J. Heer, and J. W. Bodnar. Time tree:
Exploring time changing hierarchies. In 2006 IEEE Symposium On Visual
Analytics Science And Technology, pp. 3–10.

[11] F. Charles, J. Porteous, M. Cavazza, and J. Teutenberg. Timeline-based
navigation for interactive narratives. In Proceedings of the 8th Interna-
tional Conference on Advances in Computer Entertainment Technology,
ACE ’11, pp. 1–8. ACM.

[12] A. Cheymol, G. Fouch´e, L. Gramoli, Y. Hirao, E. Hummel, M. Mavromatis,
Y. Moullec, F. Argelaguet Sanz, and F. Nouviale. The rubber slider
metaphor: Visualisation of temporal and geolocated data. In 2022 IEEE
Conference on Virtual Reality and 3D User Interfaces Abstracts and
Workshops (VRW), p. 2, 2022.

[13] P. Comon. Independent component analysis. In J-L.Lacoume, ed., Higher-

Order Statistics, pp. 29–38. Elsevier.

[14] R. Dachselt and A. H¨ubner. Three-dimensional menus: A survey and

taxonomy. Computers & Graphics, 31(1):53–65, 2007.

[15] R. Dachselt and M. Weiland. TimeZoom: a ﬂexible detail and context
timeline. In CHI ’06 Extended Abstracts on Human Factors in Computing
Systems, CHI EA ’06, pp. 682–687. ACM.

[16] U. Demˇsar and K. Virrantaus. Space–time density of trajectories: exploring
International Journal of

spatio-temporal patterns in movement data.
Geographical Information Science, 24(10):1527–1542, 2010.

[17] J. D. Denning, W. B. Kerr, and F. Pellacini. MeshFlow: Interactive
visualization of mesh construction sequences. In ACM SIGGRAPH 2011
papers, pp. 1–8.

[18] J. Doboˇs, N. J. Mitra, and A. Steed. 3D Timeline: Reverse engineering
of a part-based provenance from consecutive 3D models. 33(2):135–144.
doi: 10.1111/cgf.12311

[19] G. Drossis, D. Grammenos, I. Adami, and C. Stephanidis. 3d visualization
and multimodal interaction with temporal information using timelines. In
IFIP Conference on Human-Computer Interaction, pp. 214–231. Springer,
2013.

[20] J. Drost and H. Clevers. Organoids in cancer research. Nature Reviews

Cancer, 18(7):407–418, 2018.

[21] D. Duran, P. Hermosilla, T. Ropinski, B. Kozlikova, A. Vinacua, and P.-P.
Vazquez. Visualization of large molecular trajectories. IEEE Transactions
on Visualization and Computer Graphics, 25(1):987–996.

[22] N. Elmqvist and P. Tsigas. A taxonomy of 3d occlusion management for
visualization. IEEE transactions on visualization and computer graphics,
14(5):1095–1109, 2008.

[23] A. Fonnet and Y. Pri´e. Survey of immersive analytics. IEEE Transactions
on Visualization and Computer Graphics, 27(3):2101–2122, 2021.
[24] Y. Gu and C. Wang. TransGraph: Hierarchical exploration of transition
IEEE Transactions on

relationships in time-varying volumetric data.
Visualization and Computer Graphics, 17(12):2015–2024.

[25] L. Guignard, U.-M. Fi´uza, B. Leggio, J. Laussu, E. Faure, G. Miche-
lin, K. Biasuz, L. Hufnagel, G. Malandain, C. Godin, et al. Contact
area–dependent cell communication and the morphological invariance of
ascidian embryogenesis. Science, 369(6500):eaar5663, 2020.

[26] G. Ivosev, L. Burton, and R. Bonner. Dimensionality reduction and
visualization in principal component analysis. Analytical Chemistry,
80(13):4933–4944. American Chemical Society.

[27] S. Johnson, D. Orban, H. B. Runesha, L. Meng, B. Juhnke, A. Erdman,
F. Samsel, and D. F. Keefe. Bento Box: An Interactive and Zoomable
Small Multiples Technique for Visualizing 4D Simulation Ensembles in
Virtual Reality. Frontiers in Robotics and AI, 6.

[28] B. Keshavarz and H. Hecht. Validating an efﬁcient method to quantify

motion sickness. Human factors, 53(4):415–426, 2011.

[29] K. Kim, J. V. Carlis, and D. F. Keefe. Comparison techniques utilized
in spatial 3D and 4D data visualizations: A survey and future directions.
Computers & Graphics, 67:138–147.

[30] P. Kourtesis, S. Collina, L. A. Doumas, and S. E. MacPherson. Validation
of the virtual reality neuroscience questionnaire: maximum duration of
immersive virtual reality sessions without the presence of pertinent adverse
symptomatology. Frontiers in Human Neuroscience, 13:417, 2019.
[31] J. Kriston-Vizi and H. Flotow. Getting the whole picture: High con-
tent screening using three-dimensional cellular model systems and whole
animal assays. Cytometry Part A, 91(2):152–159, 2017.

[32] R. L. Kullberg. Dynamic timelines: Visualizing historical information
in three dimensions. PhD thesis, Massachusetts Institute of Technology,
1995.

[33] J. J. LaViola Jr, E. Kruijff, R. P. McMahan, D. Bowman, and I. P. Poupyrev.
3D user interfaces: theory and practice. Addison-Wesley Professional,
2017.

[34] B. Leggio, J. Laussu, A. Carlier, C. Godin, P. Lemaire, and E. Faure.
MorphoNet : an interactive online morphological browser to explore
complex multi-scale data. 10(1):1–8. https://morphonet.org/.

[35] G. Li, D. Citrin, R. W. Miller, K. Camphausen, B. Mueller, B. Mychalczak,
and Y. Song. 3D and 4D medical image registration combined with
image segmentation and visualization. In Clinical Technologies: Concepts,
Methodologies, Tools and Applications, pp. 885–894. IGI Global, 2011.
[36] J. Loomis and J. Knapp. Visual perception of egocentric distance in
In Virtual and adaptive environments:
real and virtual environments.
Applications, implications, and human performance issues, pp. 21–46.
Lawrence Erlbaum Associates Publishers.

[37] A. Lu and H.-W. Shen. Interactive storyboard for overall time-varying data
visualization. In 2008 IEEE Paciﬁc visualization symposium, pp. 143–150,
2008.

[38] D. Luebke, M. Reddy, J. D. Cohen, A. Varshney, B. Watson, and R. Hueb-

ner. Level of detail for 3D graphics. Morgan Kaufmann, 2003.

[39] D. Mendes, F. M. Caputo, A. Giachetti, A. Ferreira, and J. Jorge. A survey
on 3D virtual object manipulation: From the desktop to immersive virtual
environments. In Computer graphics forum, vol. 38, pp. 21–45. Wiley
Online Library, 2019.

[40] S. Mika, G. Ratsch, J. Weston, B. Scholkopf, and K. Mullers. Fisher dis-
criminant analysis with kernels. In Neural Networks for Signal Processing
IX: Proceedings of the 1999 IEEE Signal Processing Society Workshop,
pp. 41–48.

[41] R. Morawa, T. Horak, U. Kister, A. Mitschick, and R. Dachselt. Combin-
ing timeline and graph visualization. In Proceedings of the Ninth ACM
International Conference on Interactive Tabletops and Surfaces, ITS ’14,
pp. 345–350.

[42] T. Munzner. Visualization Analysis and Design. CRC Press.
[43] N. Reski, A. Alissandrakis, and A. Kerren. An empirical evaluation of
asymmetric synchronous collaboration combining immersive and non-
immersive interfaces within the context of immersive analytics. Frontiers
in Virtual Reality, 2:1–29, 2022.

10

[44] S. T. Roweis and L. K. Saul. Nonlinear dimensionality reduction by locally
linear embedding. Science, 290(5500):2323–2326. American Association
for the Advancement of Science Section: Report.

[45] A. Shaw,

and B. Welsh.
https://propublica.github.io/timeline-setter/.

J. Larson,

Timelinesetter, 2011.

[46] J. E. Sulston, E. Schierenberg, J. G. White, J. N. Thomson, et al. The
embryonic cell lineage of the nematode caenorhabditis elegans. Develop-
mental biology, 100(1):64–119, 1983.

[47] M. Q. Wang Baldonado, A. Woodruff, and A. Kuchinsky. Guidelines for
using multiple views in information visualization. In Proceedings of the
working conference on Advanced visual interfaces, AVI ’00, pp. 110–119.
ACM.

[48] C. Ware. Using hand position for virtual object placement. The Visual

Computer, 6(5):245–253, 1990.

[49] M. Weber, M. Alexa, and W. M¨uller. Visualizing time-series on spirals. In

Infovis, vol. 1, pp. 7–14, 2001.

[50] J. O. Wobbrock, L. Findlater, D. Gergle, and J. J. Higgins. The aligned
rank transform for nonparametric factorial analyses using only anova
procedures. In Proceedings of the SIGCHI conference on human factors
in computing systems, pp. 143–146, 2011.

[51] K. Wongsuphasawat, J. A. Guerra G´omez, C. Plaisant, T. D. Wang,
M. Taieb-Maimon, and B. Shneiderman. LifeFlow: visualizing an
In Proceedings of the SIGCHI Confer-
overview of event sequences.
ence on Human Factors in Computing Systems, CHI ’11, pp. 1747–1756.
ACM.

[52] J. Woodring and H. Shen. Multi-variate, time varying, and comparative
visualization with contextual cues. IEEE Transactions on Visualization
and Computer Graphics, 12(5):909–916.

11

