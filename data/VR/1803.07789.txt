8
1
0
2

r
a

M
1
2

]

M
M

.
s
c
[

1
v
9
8
7
7
0
.
3
0
8
1
:
v
i
X
r
a

1

QoE-Oriented Resource Allocation for 360-degree
Video Transmission over Heterogeneous Networks
Wei Huang∗, Lianghui Ding∗, Hung-Yu Wei‡ Member, IEEE,
Jenq-Neng Hwang† Fellow, IEEE, Yiling Xu∗, and Wenjun Zhang∗ Fellow, IEEE,
∗Cooperative Media Network Innovation Center, Shanghai Jiao Tong University, Shanghai, China
†Department of Electrical Engineering, University of Washington, Seattle WA, USA
‡Department of Electrical Engineering, National Taiwan University, Taipei, Taiwan

Abstract—Immersive media streaming, especially virtual real-
ity (VR)/360-degree video streaming which is very bandwidth
demanding, has become more and more popular due to the
rapid growth of the multimedia and networking deployments. To
better explore the usage of resource and achieve better quality
of experience (QoE) perceived by users, this paper develops
an application-layer scheme to jointly exploit
the available
bandwidth from the LTE and Wi-Fi networks in 360-degree video
streaming. This newly proposed scheme and the corresponding
solution algorithms utilize the saliency of video, prediction of
users’ view and the status information of users to obtain an
optimal association of the users with different Wi-Fi access
points (APs) for maximizing the system’s utility. Besides, a novel
buffer strategy is proposed to mitigate the inﬂuence of short-
time prediction problem for transmitting 360-degree videos in
time-varying networks. The promising performance and low
complexity of the proposed scheme and algorithms are validated
in simulations with various 360-degree videos.

Index Terms—Virtual reality (VR)/360-degree video; quality
of experience (QoE); ﬁeld of view (FoV); saliency; resource
allocation; multiple access technology; buffer management.

I. INTRODUCTION

R ECENTLY, immersive media has gained increasing pop-

ularity, including 360-degree/VR videos and argument
reality/holograms, since they can provide people personalized
and immersive experience. Especially 360-degree/VR videos
can now be easily perceived by users through head-mounted
displays (HMDs). Most 360-degree/VR videos have a res-
olution higher than 4K to provide a real
immersive feel,
therefore the desire for better immersion and presence has
placed new demands on the network in terms of its quality
and performance, especially the quality of experience (QoE)
perceived by users. However, bandwidth requirements will
become increasingly imperative correspondingly for a high-
quality virtual reality experience. According to the data from
[1], VR trafﬁc is poised to grow 20-fold by 2021. Providers
need to take a note of the new demands and enhance the
experience of users with limited bandwidth.

Tile-based videos have been widely used in immersive
media to enable the adaptive video transmission based on
user’s region of interests (ROIs). Typically, in 360-degree/VR
videos, users can only see parts of the video at a certain
time. If the server transmits the whole video, most bandwidth

This paper has been submitted to Digital Signal Processing.

will be wasted to transmit the video not visible to users. A
tile-based method spatially partitions a 360-degree/VR video
into multiple segments, which are called tiles. Some papers
have proposed methods to transmit the tiles according to the
user’s ﬁeld of view (FoV) [2]–[8]. By predicting the users’
behavior and getting the FoV of users, only tiles in the FoV are
transmitted with high quality while minimizing the quality of
the rest of the video to save bandwidth. However, the existing
algorithms only consider a single user in transmission and
cannot be easily extended to wireless VR transmission with
multiple users, since the server needs to consider the rate
allocation on users and on tiles simultaneously. Besides, they
use a constant number of tiles in the FoV, ignoring the fact
that the number of tiles corresponding to the FoV will change
depending on the viewpoint [4]. Moreover, users will pay more
attention on parts of the 360-degree videos corresponding to
their FoV. These features in 360-degree video will drastically
change the transmission strategies.

Researchers have investigated the saliency in 360-degree
videos [9]–[11], which is used to denote the most probable
areas in a video an average person will look at. Furthermore,
it is pointed out that average motion in a 360-degree video is
less than that for a regular video [12]. These characteristics can
be highly beneﬁcial for reducing the bandwidth consumption
in 360-degree video transmission, nonetheless, few papers
investigate how to utilize these characteristics collectively with
resource allocation in wireless VR transmission.

The evolution of 5G technology has contributed to providing
massive improvements for 360-degree videos in terms of
bandwidth and reliability. A lot of researchers have tried
to better exploit
the bandwidth by utilizing the heteroge-
neous LTE and WLAN multi-radio networks. They allow
users access to such heterogeneous bandwidth by operating
the multi-radio interfaces simultaneously. Typical solutions
include LTE-WLAN aggregation technology [13]–[15] and
software-deﬁned networking (SDN) used to help further ex-
ploit the heterogeneous resource ﬂexibly [16], [17]. However,
applying these technologies to 360-degree videos requires
solving a series of problems, such as jointly optimizing the
spatial and temporal domains, controlling network association
with multiple users, combining the saliency and users’ ﬁeld of
view, and achieving low complexity. Some researchers have
investigated the 360-degree video streaming with these new
technologies [18]–[21]. Nonetheless, their works are based

 
 
 
 
 
 
on single user and detailed resource allocation schemes are
missing.

The aforementioned technologies and methods rely on the
prior information of channel states. If the feedback fails to
estimate the ﬂuctuation in time-varying networks, users may
see a frozen/blank screen and wait for the arrival of the next
frame, resulting in a big drop of QoE. Playback buffer can
tackle this problem by storing videos in advance [22]–[24].
However,
the scheme is not suitable for FoV-driven 360-
degree videos since it is difﬁcult to predict the FoV for a
long time in the buffer, the server needs to transmit the whole
video for those poorly predicted frames. Nonetheless, a short
buffer can cause frequent re-buffering events and result in the
video pause and low QoE when the client’s playback buffer
goes empty [25]. On the other hand, a long buffer can incur
poor prediction results and also result in low QoE or wasted
bandwidth.

In this paper, we propose an application-layer (APP-layer)
resource allocation scheme for 360-degree/VR video transmis-
sions over multi-RAT systems with multiple users. We jointly
consider how saliency and FoV positions inﬂuence the tile-
based 360-degree videos in streaming. More speciﬁcally, we
propose algorithms to decide which user should be connected
to which Wi-Fi AP, and choose appropriate transmission rates
for each tile of each video, so that the overall system QoE
(utility) can be maximized. Additionally, to address the buffer
problem of FoV-driven 360-degree video networking schemes,
we propose a novel buffer strategy to achieve a good tradeoff
between the video quality and the buffer length. The strategy
can be combined with our proposed resource allocation algo-
rithms and achieve better QoE for time-varying networks. In
summary, our work makes contributions as follows:

1) We propose a new 360-degree video transmission
scheme, which combines saliency and FoV in wireless
multi-RAT networks, to best improve overall QoE.
2) To solve the mixed integer NP-hard problem, we propose
algorithms to ﬁnd promising solutions. Particularly, we
propose a novel heuristic algorithm which can solve the
NP-hard problem effectively with very low complexity.
3) We jointly consider the spatial and temporal domains.
By investigating the impact of buffer length on FoV-
driven 360-degree video transmissions, a novel hierar-
chical buffer updating strategy is proposed to ensure a
robust buffer size with relatively high utility.

4) We show via simulations with 360-degree videos that the
proposed algorithms yield signiﬁcant QoE improvement
over existing counterparts. The amount of performance
enhancement is more pronounced when the network is
crowded.

The rest of the paper is organized as follows: Section II
introduces tile-based 360-degree VR video and the system
framework. Section III presents the problem formulation.
Section IV tackles the problem and proposes effective algo-
rithms to solve it. Section V addresses the buffer management
problem in time-varying network with novel buffer strategy.
Experiment results and performance evaluations are shown
in Section VI, followed by conclusions and future works in

2

TABLE I
SYMBOLS AND NOTATIONS

User index
Total number of users
The Utility of user n
Normalization coefﬁcients of Un
Tile index
Total number of tiles in one video
Normalization coefﬁcients of Un
Tile representation level index
Total Number of tile representation
Video rate of tile representation m
The prediction ﬁled of view on sphere
Azimuth angle in spherical coordinate
Polar angle in spherical coordinate
Guarantee probability of FoV prediction
Probable FoV index
Total number of probable FoV for user n
The probability of probable FoV n for user n
Video rate of tile j on user n
Tile representation index
Total number of tile representation in server
Total transmission rate of user n through LTE and WLAN
Transmission rate of user n through LTE channel
Transmission rate of user n on AP i
Achievable rate of user n through LTE channel
Achievable rate of user n when connected to AP i
Saliecny weight of tile j on user n
Cost of tile j on user n when m-th representation is selected
Improvement utility of tile j on user n when m-th represen-
tation is selected
Utility over cost of tile j on user n when m-th representation
is selected
Buffer threshold length
Buffer maximum length
Current buffer length
Coefﬁcient of QoE metric
Coefﬁcient of buffer strategy
Coefﬁcient of penalty function

n
N
Un
A, B
j
J
A, B
m
M
Dm
θ0
ϕ
θ
ρ
y
Yn
P (n)
y
Dn,j
m
M
dn
dLT E
n
dwif i
n,i
rLT E
n
rwif i
n,i
Wn,j
Cm
n,j
˜U m
n,j

νm
n,j

B1
B2
Bc
µ
l
σ

Section VII.

Notations: The symbols and notations used in this paper are

summarized in Table I.

II. PRELIMINARY AND SYSTEM MODEL

A. Tile-Based 360-degree VR Video

To make a tiled 360-degree VR video, one can resort
to either multiple source camera setup or partitioning of a
single video into multiple frames of smaller resolution. An
example of a tile-based 360-degree VR video is shown in
Figure 1(a), where the video is cut into 8 tiles, By specifying
spatial relationship description in the ﬁle, the server can assign
different networking resources to those tiles. In this paper, we
jointly consider the saliency in the videos, FoV of users and
various channel status to allocate the resources.

Saliency can be used in 360-degree videos to further im-
prove the QoE [26], [27]. Compared with saliency in tradi-
tional videos, saliency in 360-degree videos also takes into
account the position and projection [9]–[11], so that a saliency
map can highlight the regions where most people will look at.
An example of the saliency map is shown in Figure 1(b). On
one hand, users have a higher chance to look at those parts
with higher saliency. On the other hand, when users looking
at the higher-saliency portion of video, they will look more

3

When it comes to 360-degree video, as we illustrated, the
utility is only meaningful in the FoV. Besides, the ﬁnal utility
in the FoV is not only related to the sum of utilities of all tiles.
More speciﬁcally, it has been pointed out when the difference
of rates between neighboring tiles is too large, the user can
be disturbed by the lowest rate in the FoV [4]. The overall
QoE will be mainly affected by that tile with bad quality even
though the rest of the tiles are of good qualities. Based on such
deﬁnition, combing FoV and saliency weighting, we deﬁne the
video quality of a user n as:

(cid:88)

j∈FoV

Un,j ∗ Wn,j + µminj∈FoV(U (Dn,j)),

(2)

where µ ≥ 0 is a tradeoff coefﬁcient, j is the index of tiles in
each video. Dn,j denotes the rate of tile j in user n. The ﬁrst
part is the traditional utility used in 360-degree video, which
sums the individual utilities of all tiles in the FoV. Wn,j is
the saliency weight for the tile j in user n, which denotes the
importance of visual perception the tile has. With the method
in [9], [10], we can derive the saliency score of each pixel in
the 2D-screen for a 360-degree video. By giving normalized
score according to the saliency results and calculating the sum
of every pixel in each tile, we can derive the saliency weight
of each tile as shown in Figure 1(b). The second part is used
to make sure that the differences of rates in user’s view are
not too large. Thus, users will have a pleasant experience as
we shown in the experimental results. The tradeoff coefﬁcient
µ should be content dependent and is empirically determined
in this paper.

(a)

(b)

Fig. 1.
weights associated with each title.

(a) A 360-degree video is partitioned into 8 titles. (b) The saliency

carefully on those parts, where distortions are easily perceived
as more annoying and as such will receive a lower subjective
quality score [28]. Therefore, we need to allocate more rates
on tiles with higher saliency weights.

However, a user can only view a part of the whole 360-
degree video at a certain time, i.e., the FoV. A 360-degree
video may have several high-saliency weighted tiles which
are not in the FoV. Besides, some users may have their own
interests to look at videos. During the transmission, those tiles
out of the FoV will be meaningless to have higher rates. To
best utilize the bandwidth, we should consider the saliency in
the FoV to improve the QoE.

B. Utility Model

We use the QoE as the performance metric in our paper,
since it has been widely used for video networking quality
evaluation [29]–[31]. It is known that the user experience is
not linearly proportional to the video rate, since it saturates at
higher rates [32], [33]. Therefore, the utility according to the
rate can be deﬁned as [34].

U (D) = A log B

D
DM

,

(1)

where U denotes the utility of the video, D denotes video
rate; video rate D ∈ {D1, · · · , DM } belongs to one of the
M predeﬁned DASH-VR rate representations [35], [36] with
DM being the maximum rate the server can provide.

C. The system of Tile-based 360-degree Video Transmission
in Multi-RAT Network

Thanks to the easy deployment of Wi-Fi APs, it is common
that users have access to several APs in the coverage of a LTE
station. To best explore the resource and utilize Wi-Fi APs
around users, we consider a heterogeneous network to unicast
multiple 360-degree videos to multi-users. The schemes and
algorithms we proposed can also be extended to multi-casting
and broadcasting scenarios by utilizing grouping methods.
Figure 2 illustrates the detailed transmission of tile-based 360-
degree VR videos. At the server side, the raw 360-degree
videos will be divided into tiles after projections. The encoder
will generate different kinds of representations for each tile.
Saliency detection is also carried out at the server side to
get the saliency weight of each tile. All the tiles of 360-
degree videos will be transmitted through a heterogeneous
LTE/WLAN multi-radio network. In this network, all users
can gain access to the LTE base-station (BS) and one of
the Wi-Fi APs simultaneously. This scenario can be realized
by LTE-WLAN aggregation technology [13], [14] or SDN-
based LTE-WLAN multi-radio networks [17]. In this paper,
our proposed scheme and algorithms are focused on APP-
layer design, the architecture and the physical layer to support
such centralized heterogeneous system is out of the scope
of this paper. At the client side, all tiles will be combined
together after decoding. Then rendering is used to help the
360-degree videos to present to users. Buffer model is also

0.10.30.210.070.040.130.130.024

Fig. 2. The system model of the proposed tile-based 360-degree video streaming over a multi-RAT network.

applied to cope with the problem when the channel of network
is varying. Besides, a feedback link is used to derive the
achievable rate based on the channel state information of each
user [37], [38], as well as the behavior of users (such as head-
tracking results) for helping predict the FoVs. With all these
information, the centralized heterogeneous network controller
will help the video server to decide the rate allocation for each
tile and the Wi-Fi AP association.

III. RESOURCE ALLOCATION IN A MULTI-RAT NETWORK

In the beginning of our transmission, users need initial
frames to attract them to see the videos. Therefore, we allocate
the rate on tiles based only on the derived saliency weights.
With the transmission proceeding, users will have their own
interests on the contents. Prediction is used and combined with
the saliency weights to further save the bandwidth. To avoid
the user viewing a blank screen when the prediction algorithm
is not reliable on some users, the server will transmit all the
tiles at least in a very low representation. Our task is to decide
the associations of users to Wi-Fi APs as well as the rate
allocation for each tile through the heterogeneous network to
maximize the total QoE. Thus, we formulate our FoV-driven
transmission in a multi-RAT system with multi-users in this
section.

A. FoV Probability

In this paper, we segment the 360-degree VR video into
tiles and adopt equirectangular projection (ERP), which is
widely used in 360-degree video data representation. There
are techniques developed to estimate the FoV for a shorter
duration ahead by analyzing users’ viewing history and head
movements (yaw and pitch as shown in Figure 3) [3], [39],
[40]. However, the prediction may not be accurate, thus, if we
use prediction with low accuracy, the total QoE of users will
have a high probability of being extremely bad. Researches
have also been done to give the predicted position θ0 on sphere
view with the corresponding prediction accuracy γ [3], [39].
Note that, throughout this paper, we assume that the FoV
always contains the whole tiles exactly and if only part of a tile

is in the FoV, it will be treated as a whole tile. Therefore, there
are always integral number of tiles in the FoV. Importantly,
when equirectangular projection is used, the number of tiles
associated with the FoV is varying depending on the position
of FoV, e.g., the number increases as the viewpoint deviates
from the equator. This can be resolved by rotating sphere
geometry prior to projection, however, which needs to prepare
much more representations with an optimal set of rotation
parameters. Therefore, without rotation with respect to the
FoV, we need to map the predicted FoV on sphere (with φ and
θ to describe the positions) to the tiles on 2D screen according
to the omnidirectional projection relationship provided by
MPEG as shown in Figure 3 [41].

Combining the prediction angles, prediction accuracy and
the projection relationship, we can derive the viewing prob-
ability of each probable FoV: P = P(θ0, γ, φ, θ). Note that
based on the prediction, only several kinds of FoV have non-
zero probability to be seen by users. We sort them with the
probability in a descending order (indexed by y). They may
contain different number of tiles based on their position, and
here we only consider Yn kinds of predicted FoV which satisfy
(cid:80)Yn
y P ≥ ρ, where ρ is the guarantee probability. Then, the

expected QoE of a speciﬁc user n is:

Yn(cid:88)





(cid:88)

y

j∈FoVy

U (Dn,j) ∗ Wn,j + µ min
j∈FoVy

(U (Dn,j))

 Py



(3)
where Py denotes the viewing probability of F OVy in a 2D
screen. (cid:80)
U (Dn,j) ∗ Wn,j + µ minj∈FoVy (U (Dn,j) is
the corresponding QoE for F OVy as illustrated in Eq. (2).
We use the expected QoE as the objective function of the
optimization throughout this paper.

j∈FoVy

B. Problem Formulation

Suppose there are one LTE, I Wi-Fi APs (indexed by
i), and N users (indexed by n). Denote rLTE
the maximum
achievable rate of user n based on its LTE channel quality,
and rwiﬁ
n,i the maximum achievable rate user n can use when
connected to Wi-Fi i. Every 360-degree video is cut into J

n

 CentralizedHeterogeneous Network ControllerWi-Fi AP 3Encoding tiles into multiple qualitiesRaw videosProjections andSaliency DetectionBuffer and displayDecodingRenderingServerMake RepresentationsFeedback ChannelHead/eye trackingNetwork informationBuffer information   Client SideServer SideUserUserUserUserResource Allocation and PredictionLTE BSWi-Fi AP 2Wi-Fi AP1tiles (indexed by j). The video rate Dn,j of each tile in each
user can be chosen from {D1, ..., DM }. W denotes the weight
of each tile based on saliency results. Py refers the viewing
probability of probable FoV. The optimization variables are
LTE transmission rates dLTE
n , n = 1, ..., N , Wi-Fi transmission
rates dwiﬁ
n,i , n = 1, ..., N, i = 1, ..., I, the video rates Dn,j, n =
1, ..., N, j = 1, ..., J for each tile of each user, and users’
associations on Wi-Fi AP. To maximize the expected QoE of
all users according to our QoE metric deﬁned in Eq. (3), the
tile-based 360-degree video transmission problem formulation
can be written as follows:

OPT-1 :

N
(cid:88)


Yn(cid:88)






(cid:88)

max

n
(cid:88)

s.t.

y

j∈FoVy

Dn,j ≤ dn, ∀n,

U (Dn,j)Wn,j +µ min
j∈FoVy

U (Dn,j)

Py

,





j
dn = dLTE

n +

(cid:88)

dwiﬁ
n,i ,

i

(cid:88)

(cid:88)

n

≤ 1,

dLTE
n
rLTE
n
dwiﬁ
n,i
rwiﬁ
n,i
card((cid:2)dwiﬁ
Dn,j ∈ {D1, · · · , DM }.

n,1, · · · , dwiﬁ
n,I

≤ 1, ∀i,

n

(cid:3)) = 1,

Eq. (4) implies that for a certain user, the sum of the
video rates of each tile Dn,j should not exceed the total
transmission rate dn allocated to it. Video rates of each tile
can only be chosen from the representations in the server as
speciﬁed in Eq. (9). The transmission rate can be aggregated
from LTE and WLAN networks as illustrated in Section
II.B. Eq. (6) models the competition among all users for the
limited bandwidth of LTE network: the sum of all transmission
rates dLTE
is upper bounded by 1. The
competition for the Wi-Fi APs is speciﬁed by the constraints
in Eq. (7). The constraint in Eq. (8) means only one element
of {dwiﬁ
n,I } is nonzero, which enforces that each user
n can only be connected to a single Wi-Fi AP.

normalized by rLTE

n,1, · · · , dwiﬁ

n

n

5

the optimal solution which also satisﬁes all the constraints.
It is a mixed-integer NP-hard problem which similar to the
well-known traveling salesman problem (TSP) [42]. In the
following, we consider to relax the discrete search space of
OPT-1: Dn,j ∈ {D1, · · · , Dm} to continuous search space
D1 ≤ Dn,j ≤ Dm, so as to make the problem computationally
tractable. Note that, after the relaxation, if we ﬁx the Wi-Fi
AP connection for each user, the problem becomes convex and
thus can be solved by the convex optimization methods. An
exhaustive search algorithm can be used to test all the possible
Wi-Fi associations and perform the rate optimization for each
association. Although the exhaustive search can guarantee
to locate the optimal solution of AP association, it has a
complexity of O(I N ).

A. Greedy Algorithm

Algorithm 1 Greedy Algorithm
Variable deﬁnition:

QB: the set of ﬁxed users and corresponding association;
QC:the set of users have not been placed;
(n, i): the user n is connected to Wi-Fi AP i;

Initial: QB = Φ, QC = {1, 2, · · · , N } ;

1: while QC! = Φ do
2:

sum = 0; j = 0; t = 0;
for n = 1, n ≤ N, n + + do

if n ∈ QC then

for i = 1, i ≤ I, i + + do

solve the OPT-1 when user n is ﬁxed to Wi-Fi
AP i;
temp = max UQB +{(n,i)},
D∗ ← arg max UQB +{(n,i)};
if temp > sum then

sum = temp; j = n, t = i;

end if
end for

11:
12:
13:

end if
end for
update QB ← QB + {(j, t)}; QC ← QB − {j} and
D∗;
14: end while
15: Round D∗ to appropriate representation.

3:
4:
5:
6:

7:
8:
9:
10:

(4)

(5)

(6)

(7)

(8)

(9)

IV. RESOURCE ALLOCATION ALGORITHMS

The method proposed in [2] is effective to solve the 360-
degree video transmission with a single user. However, it is
not applicable to such scenario with multi-user and multi-RAT
taken into consideration, since the bandwidth/rate allocated
to each user is unknown. Because the FoV and the content
viewed by users can inﬂuence the rate allocation, we cannot
consider the rate for a user in a heterogeneous network and the
rate for each tile separately. A systematic algorithm needs to
decide them simultaneously. Besides, as seen from Eq. (5), the
transmission rate d is jointly contributed by the Wi-Fi and LTE
rates for each user, with only one Wi-Fi being chosen for each
user. As a result, we can calculate the total QoE for any Wi-
Fi association so as to check all possible associations to ﬁnd

To avoid the exhaustive search, we ﬁrst propose a greedy
algorithm to ﬁnd a feasible solution, which starts with the
number of user is 0 in the system. It places each user into the
system and ﬁxes them on each Wi-Fi AP. Solve the OPT-1
for N ∗ I times to ﬁnd one feasible solution that improves
the objective function most. Then we repeat the search for
(N − 1) ∗ I times with the previous connection ﬁxed. Repeat
the iterations until all the users are assigned. In each iteration,
it is a convex problem and can be solved by the convex
optimization method.

Let D∗ be an optimal solution of the relaxed optimization
of OPT-1. However, we have to discretize the solution as
{D1, · · · , Dm}. A simple algorithm is quantizing D∗ to the
closet value Df that belongs to one of {D1, · · · , Dm}, and

6

U (Dn,j) +

(cid:88)

j∈FoVy

U (Dn,j)Wn,j)Py





OPT-2 :

N
(cid:88)





max

Yn(cid:88)

n

y

(µ min
j∈FoVy

(cid:118)
(cid:117)
(cid:117)
(cid:116)

(cid:88)

(cid:32)

(cid:88)

− σ

(cid:33)2

dwiﬁ
n,i

n

i

s.t.

(cid:88)

j

Dn,j ≤ dn, ∀n,

(cid:88)

(cid:88)

n

≤ 1,

dLTE
n
rLTE
n
dwiﬁ
n,i
rwiﬁ
n,i
n
d ≥ 0,
D1 ≤ Dn,j ≤ Dm.

≤ 1, ∀i,

(10)

(11)

(12)

(13)

(14)

i dwiﬁ

n,1, · · · , dwiﬁ

n,1, · · · , dwiﬁ

where σ is the coefﬁcient of the penalty function and we
empirically set it as 0.1 through this paper. The cardinality
card([dwiﬁ
n,I ]) = 1 constraint for each user n is
relaxed as an (cid:96)1 norm constraint, i.e., (cid:107)[dwiﬁ
n,I ](cid:107)1 =
(cid:80)
n,i ≤ 1. Note that (cid:96)1 norm constraint promotes the
sparsity of the vector [dwiﬁ
n,I ], and forces many dwiﬁ
n,1, · · · , dwiﬁ
n,i
to be zero. Instead of imposing a number of strict constraints,
we penalize the Euclidean norm of the (cid:96)1 norm, which can
collectively force [dwiﬁ
n,I ] to be sparse. In many cases,
only one nonzero element that gives an assignment of user n to
a speciﬁc Wi-Fi i is obtained. Based on this new formulation,
we can get the video rates Dn,j on each tile of each user if
the problem is convex.

n,1, · · · , dwiﬁ

Thus, we theoretically analyze the OPT-2 and ﬁnd the
objective function is convex, the set of the constraints are
convex and the Slater condition is satisﬁed. It is a convex
optimization problem which can be effectively solved by
existing convex optimization methods [43], [44].

Notice that the solution can potentially make users connect
to more than one AP after the relaxation of the constraints.
Although some users are still assigned to more than a single
AP, we can ﬁnd that due to the penalty function, only one
element of [dwiﬁ
n,I ] is large enough and the rest are

n,1, · · · , dwiﬁ

Fig. 3. FoV projection and rotating sphere geometry.

Algorithm 2 Heuristic Algorithm with Penalty Function

1: Convert OPT-1 to OPT-2 with penalty function;
2: Solve OPT-2 and get dwiﬁ
n,i ;
3: Find the K users (indexed by k) connected to more than

a single AP;

4: for k = 1, n ≤ K, k + + do
5:

Use greedy approach only on these users while ﬁxed
others and update D∗;

6: end for
7: Round D∗ to appropriate representation.

j D∗

j Df

making sure that Df satisﬁes the constraint (cid:80)
(cid:80)

n,j ≤
n,j, otherwise, lower the level of Df . Note that some
bandwidth will be wasted after the quantization in some cases.
If we want to utilize the wasted bandwidth, we need to further
consider which user can utilize the bandwidth effectively based
on their achievable rates on each network. We can allocate
rates to the tile which can improve the objective function most.
However, through simulations, we found that since our method
is a centralized method which fully utilizes the resources
and we adopt a large number of representations, the feasible
solution obtained by quantizing method has already been very
promising in most cases. This further step can only achieve a
small promotion with increasing the complexity. Thus, through
this paper, we will just quantize the result without further
utilizing the small wasted bandwidth. The greedy algorithm
is illustrated in Algorithm 1.

B. Heuristic Algorithm with Penalty Function

However, the greedy approach still has a complexity of
O(N 2I), which is not effective as will be evidenced in the
simulations. To further reduce the algorithmic complexity and
improve performance, we propose a provably near-optimal
solution by introducing a penalty function into the problem and
relaxing the OPT-1 into a convex problem. To be speciﬁc, the
penalty function is a regularization term, which is the square
root of the (cid:96)1 norm of vectors (cid:107)[dwiﬁ
n,I ](cid:107)1. Thus, the
problem can be written as:

n,1, · · · , dwiﬁ

ZYXpitchyawroll(cid:169)0 (cid:207) ((cid:207),(cid:169) ) (cid:169) relatively small. We can identify users who are still connected
to more than one AP with dwiﬁ
larger than a small pre-set
n,i
threshold. After that, we can use search methods on users with
more than one assigned APs while keeping the associations of
other users ﬁxed to ﬁnd a sub-optimal solution. Then we apply
the quantization method, same as that of the Algorithm 1, to
discretize the solution as {D1, · · · , Dm}. The procedure is
summarized in Algorithm 2.

From Algorithm 2, we can ﬁnd that the complexity of this
heuristic algorithm is very low when compared with the greedy
algorithm. According to our simulations, in a 15-user system,
no more than 3 users will be assigned to multiple APs after
the ﬁrst step. The algorithm can be included as a module of
the multi-RAN controller, which decides the allocation and
association for several frames based on the prediction. For
each iteration, convergence loop is continuously iterated from
the previous point, rather than from an initial point. Thus, the
controller can respond to users’ behaviors quickly with fast
convergence.

C. Decomposition Algorithm

An algorithm that decomposes the problem is proposed
here to derive the solution as quickly as Algorithm 2 without
relaxing the discrete strategy space. More speciﬁcally, the
problem OPT-1 can be decomposed into two optimization
problems, OPT-3 and OPT-4, as follows:

OPT-3 :

max

N
(cid:88)

n



Un(dn)

Yn(cid:88)



Wn,j)Py



(cid:88)

(
j∈FoVy

s.t. dn = dLTE

n +

dwiﬁ
n,i ,

y
(cid:88)

i

≤ 1,

≤ 1, ∀i,

n

(cid:88)

dLTE
n
rLTE
n
dwiﬁ
n,i
rwiﬁ
n,i
card((cid:2)dwiﬁ

(cid:88)

n

n,1, · · · , dwiﬁ
n,I

(cid:3)) = 1.

µ min
j∈FoVy

U (Dn,j) +

(cid:88)

j∈FoVy

U (Dn,j)Wn,j





Yn(cid:88)

OPT-4 :


max

s.t.



y
(cid:88)

Dn,j ≤ dn,

j

Dn,j ∈ {D1, · · · , DM }.

(15)

(16)

(17)

(18)

(19)

(20)

OPT-3 combines the saliency weight and FoV probability
with the channel state information of users, it is aiming to
derive the Wi-Fi AP association and rate allocation for each
user. OPT-3 can be effectively solved by applying penalty
function-based method as Algorithm 2. The proposed problem
OPT-4 is used to optimize the rate allocation on each tile

Algorithm 3 Decomposition Algorithm

7

1: Solve OPT-3, get dn and Wi-Fi AP allocation;
2: for n = 1, n ≤ N, n + + do
3:

sort the utility over the cost of each tile νm
dcurrent = 0;
while dcurrent ≤ dn do

n,j and set

update the representation level to each tile according
to the utility over the cost continuously ;
update dcurrent = dcurrent + dconsumed;

4:
5:

6:
7:
8: end for

end while

for a certain user based on the results from OPT-3. We can
solve the knapsack problem OPT-4 for each user with greedy
approach similar to [2]. By sorting the utility over cost for
each tile with probable representation Dn,j ∈ {D1, · · · , DM }
and continuously updating the representations until all rates
the feasible solution Dn,j
are consumed up, we can get
for each tile of users. The cost function C m
n,j shows the
cost to pay for choosing the m-th representation on tile j.
After the ﬁrst representation is selected, the algorithm can
improve the representation, and it only needs to pay the
difference between the allocated representation and the new
representation. Therefore, it can be iterated quickly if we want
to update the representation with more bandwidth/rates.

The cost is deﬁned as:

C m

n,j =

(cid:26)Dm

n,j − Dm−1
Dm
n,j,

n,j

, m ≥ 2
m = 1

The utility gain is deﬁned as:

˜U (Dm

n,j)) =

(cid:26)U m

n,j − U m−1
U m
n,j,

n,j

, m (cid:62) 2
m = 1

(21)

(22)

The utility over cost denotes the utility gain when m-th
representation is selected for tile j of each user n per cost,
which is deﬁned as:

νm
n,j =

˜U (Dm
C m

n,j))Wn,j
n,j/rn

,

(23)

note that the utility over cost deﬁned here is different from that
in [2]. It is because our system has multiple users, and different
users have different extents of ability to utilize the bandwidth.
The decomposition algorithm is summarized in Algorithm 3.
Although the algorithm decomposes the original problem
OPT-1, it allows us to use discrete strategy space without
relaxation. The results are also promising in some scenarios.
What is more, the iteration in this algorithm can also converge
quickly from current result and is useful for updating the buffer
which will be discussed in next section.

Note that, if the server cannot utilize a feedback link to get
the users’ behavior information to obtain predict the FoV, all
the three algorithms are still applicable by using broadcasting.
By applying our algorithms without FoV prediction and FoV
probability results, the server can broadcast each video to users
just according to the saliency weight.

8

Instead of only using adaptive rate allocation for the subse-
quent optimization, we integrate our transmission algorithms
with buffer-based scheme to achieve better QoE. Informally,
we should make the rate selection more conservative and lower
down the rate for updating the frames in the buffer when
the buffer is at risk of underrunning. On the other hand,
more aggressive rate selection and more rates on updating
when the buffer is close to full. Thus,
the rate we can
allocate for the subsequent optimization is in proportion to
the estimated throughput and current buffer size dsubsequent =
f (destimated, Bc) [45], [46]. In this paper, we denote the pro-
portional relationship as follows:

dsubsequent = l destimated
B2−Bc

,

(24)

where l ≥ 0 is the proportional coefﬁcient, which can be
decided by sever as [45].

Our hierarchical buffer updating strategy for 360-degree VR

videos can be summarized as follows:

If the current buffer size satisﬁes Bc < B1, the buffer is at
a risk of running out. We use Algorithm 2 or 3 to transmit
frames during [0, B1]. In this step, we only transmit the whole
frames during [Bc, B1]. For those frames during [0, Bc], we
only update those tiles that need a higher level representation
based on the results and keep using other tiles already in the
buffer, while the rates are equally allocated to tiles for the
frames after B1.

If the current buffer size satisﬁes Bc > B1, the buffer is
considered full enough. We will ﬁrst use Algorithm 2 or 3 to
update the tiles during [0, B1]. Then we transmit the tiles with
equal rates for frames after Bc, until all estimated rates are
consumed up.

This strategy can ensure enough tiles in the buffer and
always update the upcoming playout tiles if there are enough
rates for allocation. It makes a good trade-off between updat-
ing existing frames and downloading new frames. Besides, the
maximum buffer length is a bit smaller than traditional video
buffer to reduce the inﬂuence of bad prediction in a long-
length buffer. In future work, we will investigate the optimal
size of B1 and B2 to achieve better performance.

Since MPEG (Moving Picture Experts Group) has already
supported the tiling scheme in the Media Presentation Descrip-
tion (MPD) ﬁle [35], our buffer scheme can be easily applied
to the system. By specifying spatial relationship description
(SRD) in the MPD ﬁle, the server can transmit certain tiles
with certain rates to users [47].

VI. SIMULATIONS

In this section, the effectiveness and favorable performance
of our proposed immersive media transmission scheme is
validated via simulations. Overall, the achieved utilities of our
proposed algorithms are much higher than other benchmark
techniques. The amount of improvement in resource allocation
is evaluated with bandwidth and number of users in the system.
The performance of buffer strategy is evaluated through a
time-varying network. We begin with describing the simulation
setup used in the later evaluations.

Fig. 4. A hierarchical updating buffer.

V. BUFFER MANAGEMENT STRATEGY

Without a playback buffer, a user may see a frozen/blank
screen and has to wait for the arrival of the subsequent
if we cannot estimate the states accurately
video frames,
under a time-varying channel condition. This would result
in poor QoE. However, as illustrated in Section I, buffer
management schemes for traditional videos are not appropriate
for 360-degree videos due to the short-time prediction nature
of FoV. To save bandwidth and attain high QoE, the FoV-
driven schemes can only be applied in a short time from
current view (about 2s) [3], while a robust buffer to avoid
the re-buffering events requires a relatively long buffer length.
Therefore, in this section, we propose a novel hierarchical
buffer updating strategy, built upon our proposed resource
allocation algorithms, to solve this problem for FoV-driven
360-degree videos.

The hierarchical updating buffer is shown in Figure 4,
where B1 is the buffer length threshold that is set according
to the lowest accuracy the server can accept. Therefore, the
prediction-based scheme is acceptable only if the the buffer has
less than B1 frames. If not, it is hard to predict the behavior
of users and the server needs to transmit all the tiles equally.
B2 is the maximum buffer length which is set to avoid the
re-buffering events in time-varying networks.

We can adopt

transmission schemes with our proposed
algorithms for frames during [0, B1] in the buffer, while only
streaming the low representations equally for all tiles of the
frames during [B1, B2]. However, when the frames based on
the prediction are consumed up, users will see the low-quality
frames even if the channel is good enough for higher quality
frames. To solve this problem, we can update the qualities of
tiles with low representation if we have more bandwidth for
updating and the frames in the buffer are sufﬁcient to avoid the
re-buffering events. Thus, the rate/bandwidth we can allocate
for subsequent optimization is decomposed into two parts, one
is used for updating the arriving tiles for playout to maximize
the QoE, and the other is used for storing more frames to
minimize the probability of re-buffering events.

B2BCB1Current ViewPlayoutFeedbackServerNew framesTABLE II
VIDEOS USED FOR EVALUATION

Name
AerialCity
Balboa
BranCastle
Broadway
ChairliftRide
Diving with sharks
DrivingInCity
DrivingInCountry
Gaslamp
Harbor
KiteFlite
Landing
Polevault
SkateboardInLot
SkateboardTrick
Surrounded by Wild Elephants
Train
Trolley

Source Quality
1080P
1080P/4K
1080P/4K
1080P/4K
4K
4K
1080P
1080P
1080P/4K
4K
4K
4K
1080P
4K
4K
4K
4K
4K

A. Simulation Setup

To prove the efﬁciency of our scheme and show the gen-
erality, we use 18 distinct 360-degree videos from MPEG-
JVET (Joint Video Exploring Team) 360-degree VR video
datasets and YouTube (as shown in Table. II) to evaluate
our proposed scheme. All videos are used equirectangular
projection and segmented into 4 ∗ 8 = 32 tiles. The server
can provide 10 different-bitrate representations for each tile:
{0.1, 0.2, · · · , 0.9, 1}Mbps (indexed from 1 to 10) and the
guaranteed probability ρ is set as 0.95. The frame rate is set
as 30fps, and 15 frames are in one Group of Pictures (GoP).
B1 and B2 are set as 2s and 5s respectively. The 360-degree
videos are viewed by users through head-mounted displays
(HMD), such as HTC Vives. The FoV is about 120*90 degrees.
As we explained in Section III. A, we assume that the FoV
contains the whole tiles exactly. The number of tiles in the
FoV will be changed through the position due to the ERP
we used. Thus, in our case the FoV consists 6 tiles at least
and 12 tiles at most. Video contents are requested randomly by
users, whose motions are recorded and converted to prediction
results as method in [3]. The transmission part is simulated in
NS-3, IEEE 802.11n Wi-Fi APs and default LTE parameters
are used in the module. The users are uniformly distributed
around 5 Wi-Fi APs within the coverage of LTE BS within
200m. When more users are involved into the system, they
will be set close to AP 1 to simulate the congestion scenario.
All users can access any one of the Wi-Fi APs and LTE at the
same time and their achievable rates can be calculated based
on positions and channel quality information. Total bandwidth
can be changed from 10MHz to 70MHz.

To prove the superior performance, we compare our scheme
(Centralized + Probable FoV + Algorithm 1, Centralized +
Probable FoV + Algorithm 2 and Centralized + Probable
FoV + Algorithm 3) with the following competing schemes:

1) Centralized + One FoV + Algorithm 2: It utilizes
the heterogeneous network we mentioned in Section II,
which can centralized control the resource to transmit
the videos. However, only the most probable FoV is

9

taken into consideration without prediction accuracy
(FoV probability results).

2) Decentralized + Probable FoV: It considers all the
factors as our proposed method except it optimizes the
LTE and WLAN resource separately in a decentralized
network.

3) Centralized + Probable FoV + Exhaustive Search:
It utilizes our heterogeneous network to transmit the
videos. However, it tests all possible Wi-Fi AP asso-
ciations and optimizes resource allocation for each.
4) Centralized + Probable FoV + Equal Rate Allocation:
It utilizes our heterogeneous network to transmit the
videos. However, it allocates rates equally in the FoV
and ignores the saliency contribution.

5) Short Buffer-Based Strategy: It utilizes our Algo-
rithm 2 in streaming, but the buffer is only 2s length.
Therefore, the prediction accuracy of FoV is acceptable
for all frames in the buffer.

6) Long Buffer-Based Strategy: It

is similar to short
buffer-based scheme, whereas the buffer size is 5s. The
prediction accuracy of FoV decreases with the increase
of contents in buffer. For all the frames with prediction
accuracy is 0, the server will transmit equal rates to all
tiles.

B. Simulation Results

Figure 5 illustrates the utility of all methods with respect
to the available bandwidth and number of users. We can
clearly see that our proposed scheme performs much better
than others, especially the performance of our scheme with
Algorithm 2 is very close to that of the exhaustive method. Our
scheme with Algorithm 3 performs well when the bandwidth
is small as shown in Figure 5(a). However, it separates the
problem and tries to fetch the bandwidth ﬁrst for users. As
a result, the performance is not so promising when there is
enough bandwidth to improve the quality in the FoV. Besides,
our scheme with Algorithm 1 also performs well until the
number of users increases to 13 (see Figure 5(b)), where
congestion starts to occur on Wi-Fi AP 1.

It is worthwhile to point out that the total utility (QoE)
begins to drop because the server wants to ensure every
user get at least a lowest representation. Users cannot get
enough rates on high saliency parts. Consequently, the total
QoE decreases. Our scheme with heuristic algorithm drops
(until the number of users increases to 15) later than others,
since it can consider the saliency, FoV prediction and users’
channel states collectively. As expected, decentralized method
performs badly because it utilizes the two networks separately.
When there is a congestion in one of the network, the server
cannot allocate the resource effectively.

The simulation results also reveal that saliency is a signiﬁ-
cant factor to inﬂuence the QoE when users cannot get enough
rates. When there are 15 users in the system, the utility of
equal rate allocation method is even worse than decentralized
method. In such scenario, each user can only get small rates
due to the congestion, the equal allocation method wastes the
limited resource on those lower saliency parts, resulting in

10

(a)

(b)

Fig. 6. (a) The saliency and FoV example. (b) The performance of 360-degree
video.

(a)

(b)

Fig. 5. The performance of different methods. (a) Utility with bandwidth. (b)
Utility with number of users.

TABLE III
THE REPRESENTATION LEVEL OF EACH TILE IN FIGURE 6

1
1
1
1

1
1
1
1

1
1
1
1

2
3
3
3

2
9
9
4

2
8
8
5

2
7
6
5

2
2
4
4

a poor utility. On the other hand, when there are less users
or more bandwidth, equal rate allocation becomes better than
decentralized method.

Impact of Saliency and FoV: We demonstrate the video
performance with our scheme (Heterogeneous + Probable FoV
+ Algorithm 2) in Figure 6. Figure 6(a) shows the saliency
map and two exemplar FoVs among all probable FoVs from
the prediction of one user. Figure 6(b) demonstrates the video
quality of all tiles. It can be seen that FoV 1 has the highest
quality due to the high probability and high saliency weight.
Although FoV 2 has a similar viewing probability as FoV 1,
we can ﬁnd FoV 2 contains more tiles since it is close to
the pole on the sphere. Besides, the levels of representations
allocated to FoV 2 are smaller than on FoV 1 as shown in
Table III. It is because that the saliency weight in FoV 1 is
much larger than that in FoV 2. By contrast, even tile 6 has
a low saliency weight, due to the QoE metric used, the rate

Fig. 7. Rate allocation of each tile on each user.

difference in the FoV will not be big. Since users are more
likely to be attracted by the high saliency object (e.g., the
elephant) in the FoV, it is hard to detect the visual discrepancy
with small rate difference as shown in Figure 6(b). There is
another elephant we can see on the left of the 2D screen.
Despite the high saliency on that, it is not in the predicted
FoV, resulting in a lowest rate. What is interesting, tiles 4-8’s
rates are much lower than others’. However, most users can
still enjoy the video even they are viewing FoV 2, it is hard
to detect the visual discrepancy since they will not put more
attention on the low saliency object (e.g. the sky).

Impact on Different Users: Detailed rate allocation on
each user is depicted in Figure 7. Although all the saliency is

10203040506070Bandwidth (MHz)051015Total UtilityCentralized+Probable FoV+Algorithm 2Decentralized+Probable FoVCentralized+One FoV +Algorithm 2Centralized+Probable FoV+EqualCentralized+Probable FoV+Algorithm 1Centralized+Probable FoV+Algorithm 3Centralized+Probable FoV+Exhaustive Search56789101112131415User Number 789101112131415Total UtilityCentralized+Probable FoV+Algorithm 2Decentralized+Probable FoVCentralized+One FoV +Algorithm 2Centralized+Probable FoV+EqualCentralized+Probable FoV+Algorithm 1Centralized+Probable FoV+Algorithm 3Centralized+Probable FoV+Exhaustive SearchFoV1FoV219172523456781011121131415161819202122232426272829303132323028262422201816140120105248610681041221416User IndexRepresentation LevelTile Index11

Fig. 9. Buffer details with hierarchical buffer updating strategy.

VII. CONCLUSION

In this paper, we propose a tile-based 360-degree VR
video transmission scheme and a corresponding buffer strategy
on heterogeneous networks with multi-user access. To better
improve the experience of users, we jointly consider saliency
in videos, ﬁled of view and the channel quality states of users.
The proposed scheme adaptively chooses the most appropriate
Wi-Fi AP connection and allocates heterogeneous LTE/WLAN
resources at the same time for each tile of each user. Besides,
we proposed a highly effective heuristic search algorithm to
solve an NP-hard mixed-integer problem with low complexity.
Moreover, a novel buffer updating strategy is proposed to
tackle the buffering problem of FoV-driven 360-degree videos.
The simulation results show that our proposed scheme and
algorithms outperform other methods.

ACKNOWLEDGMENT

This work was supported in part by the National Natural
Science Foundation of China under Grant 61420106008, Grant
61671301, Grant 61521062, Grant 61650101, in part by the
National High Technology Research and Development Pro-
gram (863 Program) under Grant 2015AA015802.

REFERENCES

[1]

“Cisco visual networking index: Forecast

and methodology,

2016−2021”, 2016.

[2] P. Rondao Alface, M. Jean-Francois, and V. Nico “Interactive omni-
directional video delivery: a bandwidt effective approach,” Bell Labs
Technical Journal,vol.16, no.4, pp.135-147, 2012

[3] Y. Bao, H. Wu, T. Zhang, A.A. Ramli,and X. Liu, “Shooting a moving
target: Motion-prediction-based transmission for 360-degree videos,”
IEEE International Conference on Big Data (Big Data), pp.1161-1170,
2016.

[4] A. Ghosh, V. Aggarwal,and F. Qian, “A rate adaptation algorithm for tile-
based 360-degree video streaming,” arXiv preprint arXiv:1704.08215.,
2017.

[5] X. Corbillon, G. Simon, A. Devlic, and J. Chakareski,

“Viewport-
IEEE International

adaptive navigable 360-degree video delivery,”
Conference on Communications (ICC), pp. 1-7, 2017.

[6] M. Hosseini and V. Swaminathan, “Adaptive 360 VR video streaming:
Divide and conquer,” IEEE International Symposium on Multimedia
(ISM), pp. 107-110, 2016.

[7] S. Kim, H. Lee, D. Jeon, and S. Lee, “Reduction in encoding redundancy
for overlapped FOVs over wireless visual sensor networks,” Digital
Signal Processing, 50, pp. 135-149, 2016.

(a)

(b)

Fig. 8. (a) The time-varying network (b) Utility of different buffer strategies
in the time-varying network.

normalized for each 360-degree video, the user can still look
at distinct kinds of views and their behaviors are different. The
achievable rates of users 14 and 15 are very close and both
are looking at the same video. However, they are looking at
different FoVs, therefore user 14 gets higher rate due to the
inﬂuence of the saliency and FoV as shown in Figure 7.

Buffer Strategy: Figure 8(a) shows the channel ﬂuctuation
in the network. In such scenario, we assume that we only
have the current channel states information of the network.
However, we do not have an estimation of future states. The
server adopts buffer strategy always according to the current
states. Figure 8(b) demonstrates the utility of one user along
the network ﬂuctuation with two benchmark buffer strategies.
We can ﬁnd that our hierarchical buffer updating strategy
performs much better than others. Short-buffer strategy can
achieve high quality when the buffer is not empty. However,
it is easy to pause and re-buffering when the performance of
network becomes bad. Besides, when the network recovers, it
takes longer time than our hierarchical buffer updating strategy
to get a high utility since there is no updating.

By contrast, long-buffer strategy can avoid the re-buffering
events effectively. The current buffer size is always larger than
B1. Nonetheless, the cost is that it always keeps a low quality
(even worse than short-buffer strategy sometimes) since the
poor prediction in the buffer’s area after B1.

Our hierarchical updating strategy can achieve a good
tradeoff between the prediction accuracy and the buffer size,
as a result, it achieves a high average utility.

The detailed information of buffering with our hierarchical
buffer updating strategy is demonstrated in Figure 9. Here we
just show one of the frame in each GoP due to the limit of
space. We can ﬁnd that the levels of representations of some
tiles are high in current view and upcoming frames, while it
is relatively low after B1. Those high level representation tiles
are likely to be FoV according to the high accuracy prediction.
Thus, our strategy can make users’ FOV a high quality when
the bandwidth is enough as well as avoid the buffer being
empty when the performance of network turns bad.

012345sec0510Throughput (bps)(cid:1)107Throughput Changes012345sec00.51Normalized UtilityHierarchical Buffer Upadating StrategyShort Buffer-based StrategyLong Buffer-based Strategy24681012140161820252242462610288301032Tile IndexRepresentation LevelGoP IndexCurrent View12

[33] L. Qian, Z. Cheng, Z. Fang, L. Ding, F. Yang and W. Huang “A QoE-
driven encoder adaptation scheme for multi-user video streaming in
wireless networks,” IEEE Transactions on Broadcasting, vol. 63, no.
1, pp.20-31, 2017.

[34] W. Zhang, Y. Wen, Z. Chen, and A. Khisti, “QoE-Driven cache man-
agement for HTTP adaptive bit rate streaming over wireless networks,”
IEEE Transactions on Multimedia , vol. 15, no. 6, pp.1431-1445, 2013.
[35] T. Stockhammer, “Dynamic adaptive streaming over HTTP,” ISO/IEC,

MPEG Draft International Standard, 2011.

[36] L. Yu, T. Tillo, and J. Xiao,

streaming strategy with future information,”
Broadcasting, vol. 61, no. 4, pp.651-665, 2015.

“QoE-driven dynamic adaptive video
IEEE Transactions on

[37] L. Song, Z. Han, Z. Zhang, and B. Jiao, “Non-cooperative feedback-
rate control game for channel state information in wireless networks,”
IEEE Journal on Selected Areas in Communications, vol. 30, no. 1,
pp.188-197, 2012.

[38] Q. Xu, S. Mehrotra, Z. Mao, and J. Li,

formance forecast for real-time, interactive mobile applications,”
Proceeding of
systems, ACM, pp. 347-360, 2013.

“PROTEUS: network per-
In
international conference on Mobile

the 11th annual

[39] F. Qian, L. Ji, B. Han, and V. Gopalakrishnan, “Optimizing 360 video
delivery over cellular networks,” In Proceedings of the 5th Workshop
on All Things Cellular: Operations, Applications and Challenges, ACM,
pp. 1-6, 2016.

[40] C.L. Fan, J. Lee, W.C. Lo, C.Y. Huang, K.T. Chen, and C.H. Hsu,
“Fixation prediction for 360 video streaming in head-mounted virtual
reality,” In Proceedings of the 27th Workshop on Network and Operating
Systems Support for Digital Audio and Video, ACM, pp. 67-72, 2017.
“Information technology - Coded representation of immersive me-
ISO/IEC

dia (MPEG-I) - Part 2: Omnidirectional media format”
JTC1/SC29/WG11 MPEG Draft International Standard, 2017.

[41]

[42] K. L. Hoffman, M. Padberg, and G. Rinaldi,

“Traveling salesman
In Encyclopedia of operations research and management

problem,”
science, Springer US, pp. 1573-1578, 2013.

[43] S. Boyd and L. Vanderberghe, “ Convex Optimization,” Cambridge

university press, 2004.

[44] M. Grant, S. Boyd and Y. Ye “Convex Optimization,” CVX: MATLAB

software for disciplined convex programming, 2008

[45] T.Y. Huang, R. Johari, N. McKeown, M. Trunnell and M. Watson, “A
buffer-based approach to rate adaptation: Evidence from a large video
streaming service,” ACM SIGCOMM Computer Communication Review,
vol.44, no.4, pp.187-198, 2015.

[46] K. Spiteri, R. Urgaonkar, and R.K. Sitaraman, “BOLA: near-optimal
bitrate adaptation for online videos,” IEEE INFOCOM 2016-The 35th
Annual, pp.1-9, 2016.

[47] O.A. Niamut, E. Thomas, L. D’Acunto, C. Concolato, F. Denoual and
In
S.Y. Lim,
Proceedings of the 7th International Conference on Multimedia Systems,
ACM, pp.5, 2016.

“MPEG DASH srd: Spatial relationship description,”

[8] A. Zare, A. Aminlou, M.M. Hannuksela, and M. Gabbouj, “HEVC-
compliant tile-based streaming of panoramic video for virtual reality
applications,” ACM on Multimedia Conference, pp. 601-605, 2016.
[9] V. Sitzmann, A. Serrano, A. Pavel, M. Agrawala, D. Gutierrez, and G.
Wetzstein, “Saliency in VR: How do people explore virtual environ-
ments?,” arXiv preprint arXiv:1612.04335, 2016.

[10] R. Monroy, S. Lutz, T. Chalasani and A. Smolic, “Saliency maps for
omni-directional images with CNN,” arXiv preprint arXiv:1709.06505,
2017.

[11] C. Zhu, K. Huang, and G. Li, “Automatic salient object detection for
panoramic images using region growing and ﬁxation prediction model,”
arXiv preprint arXiv:1710.04071, 2017.

[12] S. Afzal, J. Chen, and K.K. Ramakrishnan, “Characterization of 360-
degree Videos,” ACM Workshop on Virtual Reality and Augmented
Reality Network, pp.1-6, 2017.

[13] D. Krishnaswamy, D. Zhang, S.Soliman, and B. Mohanty, “ Concurrent
IEEE Computing,

bandwidth aggregation over wireless networks,”
Networking and Communications (ICNC), 2012.

[14] C. Cano, and D.J. Leith, “Coexistence of WiFi and LTE in unlicensed
bands: A proportional fair allocation scheme,” IEEE Communication
Workshop (ICCW), 2015.

[15] R. Zhang, M. Wang, L.X Cai,and Z.Zheng,

the
future of spectrum aggregation for cellular networks,” IEEE Wireless
Communications, vol.22, no.3, pp.150-159, 2015.

“LTE-unlicensed:

[16] V.G. Nguyen, T.X. Do, and YH. Kim,

“SDN and virtualization-
based LTE mobile network architectures: A comprehensive survey,”
Communications Surveys & Tutorials, vol.86, no.3, pp.1401-1438, 2016.
[17] S. Kang, W. Yoon, “SDN-based resource allocation for heterogeneous
LTE and WLAN multi-radio networks,” The Journal of Supercomputing,
vol. 72, no. 4, pp. 1342- 1362, Feb. 2016.

[18] S. Mangiante, G. Klas, A. Navon, Z. GuanHua, J. Ran, and M.D.
Silva, “VR is on the Edge: How to deliver 360-dgeree videos in mobile
networks,” ACM Workshop on Virtual Reality and Augmented Reality
Network, pp.30-35, 2016.

[19] C. Westphal, “Challenges in networking to support augmented reality

and virtual reality,” ICNC, 2017.

[20] S. Zhao, and D. Medhi, “SDN-assisted adaptive streaming framework
for tile-based immersive content using MPEG-DASH,” researchgate.net,
2017.

[21] E. Bastug, M. Bennis, M. Mdard, and M. Debbah, “Toward intercon-
nected virtual reality: Opportunities, challenges, and enablers,” IEEE
Communications Magazine, vol.55, no.6, pp.110-117, 2017.

[22] J. Jiang, V. Sekar, and H. Zhang, “Improving fairness, efﬁciency, and
stability in http-based adaptive video streaming with festive,” ACM on
Emerging networking experiments and technologies, pp.97-108, 2012.

[23] L. D. Cicco, V. Caldaralo, V. Palmisano, and S. Mascolo,, “Elastic: A
client-side controller for dynamic adaptive streaming over http (DASH),”
IEEE Packet Video Workshop (PV), pp.1-8, 2013.

[24] Z. Li, A.C. Begen, J. Gahm, Y. Shan, B. Osler, and D. Oran, “Streaming
video over HTTP with consistent quality,” ACM Multimedia Systems
Conference, pp.248-258, 2014.

[25] T. D. Pessemier, K. D. Moor, W. Joseph, L. D. Marez and L. Martens
“Quantifying the inﬂuence of rebuffering interruptions on the user’s
quality of experience during mobile video watching,” IEEE Transactions
on Broadcasting, vol.59, no.1, pp.47-61, 2013.

[26] A. Papushoy, and A. G. Bors,

“Image retrieval based on query by

saliency content,” Digital Signal Processing, 36, pp.156-173. 2015.

[27] M. Du, X. Wu, W. Chen, and Z. Li,

“Supervised training and
contextually guided salient object detection,” Digital Signal Processing,
63, pp.44-55. 2017.

[28] U. Engelke, M. Barkowsky, P. Le Callet, and H. J. Zepernick, “Mod-
elling saliency awareness for objective video quality assessment,” IEEE
In Quality of Multimedia Experience (QoMEX), pp. 212-217, 2010.

[29] A. Aldahdooh, E. Masala, G. Van Wallendael, and M. Barkowsky,
“Framework for reproducible objective video quality research with case
study on PSNR implementations,” Digital Signal Processing, 2017.
[30] Y. Liu, J. Yang, Q. Meng, Z. Lv, Z. Song, and Z. Gao, “Stereoscopic im-
age quality assessment method based on binocular combination saliency
model,” Signal Processing, 125, pp.237-248, 2016.

[31] F. Shao, G. Y. Jiang, M. Yu, F. Li, Z. Peng, and R. Fu, “Binocular energy
response based quality assessment of stereoscopic images,” Digital
Signal Processing, 29, pp.45-53, 2014.

[32] P. Reichl, S. Egger, R. Schatz, and A. D’Alconzo, “The logarithmic na-
ture of QoE and the role of the Weber-Fechner law in QoE assessment,”
IEEE International Conference on Communications (ICC),2010.

