7
1
0
2

r
a

M
3

]

O
R
.
s
c
[

1
v
0
7
2
1
0
.
3
0
7
1
:
v
i
X
r
a

Baxter’s Homunculus: Virtual Reality Spaces for Teleoperation in
Manufacturing

Jeffrey I Lipton1, Aidan J Fay1, and Daniela Rus1

Abstract— Expensive specialized systems have hampered de-
velopment of telerobotic systems for manufacturing systems.
In this paper we demonstrate a telerobotic system which can
reduce the cost of such system by leveraging commercial virtual
reality(VR) technology and integrating it with existing robotics
control software. The system runs on a commercial gaming
engine using off the shelf VR hardware. This system can be
deployed on multiple network architectures from a wired local
network to a wireless network connection over the Internet. The
system is based on the homunculus model of mind wherein we
embed the user in a virtual reality control room. The control
room allows for multiple sensor display, dynamic mapping
between the user and robot, does not require the production
of duals for the robot, or its environment. The control room is
mapped to a space inside the robot to provide a sense of co-
location within the robot. We compared our system with state
of the art automation algorithms for assembly tasks, showing a
100% success rate for our system compared with a 66% success
rate for automated systems. We demonstrate that our system
can be used for pick and place, assembly, and manufacturing
tasks.

I. INTRODUCTION

We believe that the future of manufacturing will require a
combination of robots and people, interacting in the physical
and virtual worlds to allow humans and robots to enhance
each other’s capabilities. Humans could supervise the robots
from a distance and, when necessary, connect seamlessly to
the robots task space. There they could control the robot to
do the task, teach the robot to do a new task, or help the
robot to recover from a failure or an unexpected situation.
We demonstrate a system for achieving such human-robot
collaboration using the homunculus model of mind. The
homunculus is a logical fallacy illustrated in the ”Cartesian
Theater” criticism of Descartes’s mind body dualism[1][2].
It is said to be the thing sitting in a control room inside of a
persons head, looking through a person’s eyes, controlling
their actions. It
is a non-terminating recursive deﬁnition
because inside each homunculus it is implied there is another
smaller homunculus. While this is a terrible deﬁnition of
human intelligence, it is an appropriate deﬁnition of the
intelligence of a teleoperated robot. Inside the robot there is
a human which is aware, in a control room, seeing through
its eyes and controlling its actions. Our homunculus-inspired
approach enables the human user to have the same view point
and feel co-located with the robot, without the need for the
user and the robot to have tightly coupled states.

Unlike current and past attempts to apply VR systems
with teleoperation, our system uses a virtual reality control

1Computer Science and Artiﬁcial Intelligence Lab, 32 Vassar Street,

Cambridge, MA, 02139, USA jlipton at mit.edu

room (VRCR) to decouple the user’s and robot’s inputs
and outputs and provides an adjustable mapping between
them. This VRCR is mapped to a space inside of the
robotic system space. Our system uses current consumer
virtual reality (VR) systems, allowing us to leverage existing
commercial solutions along with gaming infrastructure to
perform manufacturing tasks. We providing the user’s senses
stimuli from a local machine, while remote operating the
robotic system. This has allowed us to run over a local wired
network, a wireless connection in the same building, and
control a robot over a hotel’s wireless connection from a
different city.

We tested our system by having it pick an item and stack it
for assembly with greater accuracy and comparable speed to
state of the art In-hand Object Localization (IOL) systems
[3]. Our system had a 100% success rate with an average
time of 52 seconds in 20 trials, compared with a 66% success
rate reported for the state of the art algorithm. We also used
the system to perform ﬁxture-less assembly tasks, and to
manipulate and secure wires onto wooden structures with
a commercial staple gun. The system can pick up screws,
handle ﬂexible materials, and complex shapes by leveraging
the VR infrastructure and human intelligence.

In this paper we contribute:

• A method for applying the homunculus model of the
mind for teleoperation systems to enable user and robot
virtual co-location

• A new virtual reality based telerobotic architecture for

control of robotic systems

• A series of demonstrations of the telerobotic system
with comparisons to current automation techniques.

II. BACKGROUND

k ) and eyes (EU

Teleoperation systems map objects between the user’s
space U to the robot’s space R. The state of the user’s
hands (HU
k ) are affected by and effect a
robot’s grippers (GR
i ) and sensors (SR
i ) using a series of
mappings(M ) shown in Figure 1. The user and robot may
have completely different degrees of freedom, ranges of
joints and number of states, making mapping methods critical
to system function[4]. We can model each item as having a
position −→r , and orientation ( ˆn, θ ) with super script denoting
reference frame, ﬁrst subscript referencing the object (H,E,S,
or G) and the second subscript referencing the item index.
Various teleoperation systems have different mappings and
required latencies between action and feedback. Engaging
a person’s proprioception is what causes a person to feel

 
 
 
 
 
 
Fig. 1. Telerobotic System’s Mapping Models. Each class of system maps different amounts of information from the robotic space and user space into
each other, or into a virtual space. Mapping direction is denoted by an arrow and the mapping is named by M with subscripts. The piloting and mimicking
models can have signiﬁcant delays or have limiting mappings. The Cyber-Physical model introduced either a separate virtual space or have the user interact
directly with a dual of the robot and the environment. Our Homunculus model combines the best of all three other methods. The virtual space decouples
the human from the robot, and the mappings for sensors and grippers need not be identical. This allows the user to feel as if they inhabit the space inside
the robot without the discomfort of the piloting and mimicking models, transmit less data, and have more information available to them. We also allow
the mapping MHG to be changed by the user as needed

present in a virtual reality environment [5]. However, un-
expected incongruities, such as delays or relative motions,
between proprioception and vision can lead to the nausea
and motion sickness known as simulator sickness. [6]. This
means quickly mapping user eye movement and hand move-
ment to an new stimulus is critical to user experience.

In piloting systems, a user operates a standard control
such as a keyboard and mouse, haptic pen, or video game
controller [7][8][4]. As seen in Figure 1A, We can model
Mes as simply delivering camera data to a display without
receiving any feedback from the user states. We can model
the mapping from eyes to sensors ( Mes ) as :
−→
O U
S,i(t + ∆r) = ¯Cr ¯TRU
E,k

E,k(t)δik +

−→r U

−→r R

(1)

S,i(t + ∆n) = ¯Cn ¯TRU ˆnU
ˆnR

E,k(t)δik

S,i(t + ∆n) = ¯Cθ θ U
θ R

E,k(t)δik

(2)

(3)

¯TRU is the transform from the U system to the R system of
the form ¯TRU = λRU ¯RRU , where λRU is a scale factor and ¯RRU
is the rotation of the coordinate systems. ∆ represents delays
in the system,δ is the Kronecker delta, and ¯C represents the
coupling of the system’s component’s states as either ¯0 or ¯I.
Telepresence systems can give an immersive experience
by using a mimicking model. In these systems there is a

direct connection between a user’s state and the robots as
seen in Figure 1B. The user is meant to feel co-located with
the robot, by closely mapping their states to each other. If
the cameras are stationary relative to the robot then ¯Cr, ¯Cn,
and ¯Cθ are ¯0, and the mapping Mes is only valid if one holds
one’s head perfectly still. The user’s mind constantly expects
motion and does not receive it because of the bad mapping.
This can lead to user fatigue and nausea.

An alternative is to have the mapping Mes include move-
ment feedback. If only orientation feedback is used, the
mapping does not compensate for non-rotating movements
of the users head, and ¯Cn, and ¯Cθ are ¯I. This requires the user
to maintain position for the mapping to be valid. The UPenn
developed Dora platform attempts to mimic the position and
orientation of the user’s eyes with a moving camera system
[9]. The large and complex nature of the camera rig limits its
viability. Additionally, a hardware-in-the-loop solution will
have to eliminate the delays from the network transmission
and hardware response since it will need to update the user
with appropriate stimuli every 90th of a second.

Mimicking the body movements of a user can also be
problematic. To provide a complete measurement of the
states HU
the body movements can be captured using hand
k
controllers, Kinect sensors, Vicon systems, or robotic arm

UserRobot𝐻𝑘𝑈𝑡𝑘∈[0,1]𝐺𝑖𝑅(𝑡+Δ)𝑖∈[0…𝑛𝑔𝑟𝑖𝑝𝑝𝑒𝑟𝑠]𝑆𝑖𝑅(𝑡)𝑖∈0…𝑛𝑠𝑒𝑛𝑠𝑜𝑟EyeSensorHandGripperℳ𝑒𝑠UserRobot𝐻𝑘𝑈𝑡𝑘∈[0,1]𝐺𝑖𝑅(𝑡+Δ)𝑖∈[0…𝑛𝑔𝑟𝑖𝑝𝑝𝑒𝑟𝑠]𝑆𝑖𝑅(𝑡)𝑖∈0…𝑛𝑠𝑒𝑛𝑠𝑜𝑟𝐸𝑘𝑈𝑡+Δ𝑘∈[0,1]EyeSensorHandGripperℳ𝑔ℎℳ𝑒𝑠UserRobotVirtual𝐻𝑘𝑈𝑡𝑘∈[0,1]𝐺𝑖𝑅(𝑡+Δ)𝑖∈[0…𝑛𝑔𝑟𝑖𝑝𝑝𝑒𝑟𝑠]𝑅𝑉(𝑡)ℳ𝑉𝑅ℳ𝑈𝑉𝑆𝑖𝑅(𝑡)𝑖∈0…𝑛𝑠𝑒𝑛𝑠𝑜𝑟𝐸𝑘𝑈𝑡𝑘∈[0,1]ℳ𝑉𝑅ℳ𝑈𝑉EyeSensorHandGripperUserRobotVirtual𝐻𝑘𝑈𝑡𝑘∈[0,1]𝐺𝑖𝑅(𝑡+Δ)𝑖∈[0…𝑛𝑔𝑟𝑖𝑝𝑝𝑒𝑟𝑠]𝐻𝑘𝑉𝑡𝑘∈[0,1]𝐺𝑖𝑉(𝑡)i∈0…𝑛𝑔𝑟𝑖𝑝𝑝𝑒𝑟𝑠ℳ𝐺𝐺ℳ𝑈𝑉ℳ𝐻𝐺𝑆𝑖𝑅(𝑡)𝑖∈0…𝑛𝑠𝑒𝑛𝑠𝑜𝑟𝐸𝑘𝑈𝑡𝑘∈[0,1]𝐶𝑘𝑉(𝑡)𝑘∈0,1𝐷𝑖𝑉𝑡+Δi∈0…𝑛𝑠𝑒𝑛𝑠𝑜𝑟ℳ𝐷𝑆ℳ𝑈𝑉ℳ𝐶𝐷EyeSensorHandGripperPiloting ModelMimicking ModelCyber-Physical ModelHomunculus ModelABCDCameraDisplay𝐸𝑘𝑈𝑡+Δ𝑘∈[0,1]𝐸𝑉(𝑡)systems [10][11][12][13]. The incongruities between a user’s
body shape and the robots can be limiting. Mgh is of a similar
form to equations 1, 2, and 3. Robot arms can have different
numbers of joints, degrees of freedom, sizes, and ranges
from human arms. Mapping movements directly can lead
to user discomfort or failure to utilize the entire work-space.
Baxter for example can reach positions and contortions that
are painful or impossible for a user, such as putting both arms
behind itself. One solution for these systems is to closely
mirror the abilities of a human user by changing the shape
and design of the robot. The JUSTIN system, for example, is
designed to closely mimic human form [14]. However this
level of mirroring is not compatible with a wide range of
common cheap robots, and limits the system applicability.

A third approach is the Cyber-Physical System (CPS)
approach(See Figure 1. In these systems a virtual dual of
the robotic system(RV ) and environment(EV ) and dual of
the user is represented in a computer [15]. The mappings
MUV from the user space and MV R from the robot space
are similar.

The user receives stimuli from the dual model of the robot
and environment, as the duals are constantly updated from
the actual robot and environment. This requires making a
complete model of the robot and environment, and transmit-
ting updates to the models over the network. A version of
this has used to generate a shared virtual space by embedding
the dual of the robot environment and user in a globally
shared virtual space [16]. This relaxes the requirements on
the mappings for the user and the robot states. The users see
themselves as separate from the arm but both are inhabiting
a shared virtual space. This is a great
tool for training
robotic systems and teaching repetitive tasks, it lacks the
human in the loop of the controls, making it difﬁcult to
respond to constantly changing situations[16]. It also requires
a large amount of data to capture the environment for virtual
representation, or a signiﬁcant amount of a priori knowledge
for building models of the environment.

III. DESIGN OF VR ENVIRONMENTS FOR THE
HOMUNCULUS MODEL

In the homunculus model, a virtual reality control room
(VRCR) provides a means of displaying information, pre-
senting controls, while feeling present inside the robot(see
Figure 2). The human user space is mapped into the virtual
space, and the virtual space is then mapped into the robot
space. The virtual cameras allow the system to compensate
for head movement. Since the VRCR is rendered on a local
computer, in a separate loop from the robot movements and
sensor feeds, it is possible to rapidly update the users stimuli.
VR applications have a minimum frame rate of 60Hz to
prevent simulator sickness [17]. Using commercial VR game
engines to render most of the environment allows for the
use of previously developed solutions such as Asynchronous
Timewarp [18].

Unlike the CPS model the space is not shared with a
virtual dual of the robot, nor does the user interact with a
complete dual of the robot. Instead the user interacts with

controls and markers that represent the last known position
and orientation of the robot. This decouples the mapping
MV R into MGG and MDS. MGG is of the form:
G,k(t) = ¯TGG

G,k(t) +

−→
O R

−→r R

−→r V

(4)

G,k

(6)

(5)

(7)

−→r V

G,k(t)

G,k(t)

H,k(t)

G,k(t) = ¯TGG ˆnR
ˆnV
G,k(t) = θ R
θ V
¯TGG is of the form λGG ¯RGG where λGG is a scale factor and
¯RGG is the rotation of the coordinate systems. MDS is of a
similar form but with ¯TDS = λDS ¯RDS. We set λDS >> λGG
due to the parallax of the 3D camera system and its scaling,
and the scaling in the virtual space. This allows the user to
see the objects in the window as much larger than themselves
. the mapping MHG is of the form:
−→r V

G,k(t) = ¯Cr
G,k(t) = ¯Cn ˆnR
ˆnV
G,k(t) = ¯Cθ θ V
θ V
This allows the hands to selectively engage their connection
to the grippers for position and orientation. The user is then
free to move, ﬁdget, or change their focus without effecting
the state of the robot. The position and orientation of the
robot arms’ end-effectors are represented in the virtual space
by objects which can be manipulated by the user to give
commands to the robot. In Algorithm 1, we see that the user
can select the mapping MHG they will use. Once selected,
the user can grab the virtual gripper object to couple their
movements to the robots. When released, the system uses a
motion planning solver to ﬁnd the joint states. If a solution is
not found, the object is turned to an error state. If the virtual
gripper is not coupled, the user’s position and actions do not
effect the robots arm state.

H,k(t)

H,k(t)

(8)

(9)

Rather than reconstruct the dual of the physical environ-
ment, we can provide stereo views from which the user’s
brain can extract the 3D data. This reduces the amount of
data which must be streamed and processed by the system.
The VRCR is modeled after the head of the robot with
a window displaying a stereo camera feed of the robot’s
work space. The virtual cameras can ﬂoat and respond to
movement, while the virtual window displays the physical
cameras’ data. Unlike the mimicking model many different
sensors can be displayed in a VRCR without overlaying on
top of other camera and sensor feeds. Multiple types and
sources of information can be arranged in a virtual space.

Together these abilities represent a powerful

tool for
interfacing with a robot. A User is capable of selectively
changing the focus of their attention between the whole
system and a single arm by shifting their body. A user can
turn towards a single side of the room and focus on a single
arm’s camera and range ﬁnder, while maintaining sight of
the arm in 3D with their peripheral vision. A user can plan
movements based on the relative distance between the arm’s
current location marker and their hand while looking at the
live display of the arm. Relative positioning of the arms to

Fig. 2. Telerobotic system for Homunculus Model. A Baxter robot is outﬁtted with a stereo camera rig and various end effectors. In Unity, a virtual
control room is established which uses an Oculus Rift CV1 headset and Razer Hydra hand trackers for inputs and displays. This allows the User to feel
as if they are inside Baxter’s head while operating it. Displays from each hand’s sensors can be integrated into the control center. Only information from
the cameras and commands, and state information need to be sent over the network. The transmission component can be non-existent, or a Canopy system
for internetwork communications. The ROS nodes can be on the same machine, or different machines. 3D reconstruction from the stereo HD cameras are
done by the humans visual cortex rather than by a GPU or CPU.

each other can be achieved by seeing the current location
markers and commanded end points of both arms at the same
time.

i with hand HV
k

¯Cr ← I3, ¯Cn ← I3, ¯Cθ ← I1

¯Cr ← I3, ¯Cn ← ¯O3, ¯Cθ ← ¯O1

Algorithm 1 Control of Arm
1: User selects type of model MHG by positioning ﬁngers
2: User grabs virtual gripper GV
3: if TYPE(MHG) is position and orientation then
4:
5: else if TYPE(MHG) is position only then
6:
7: end if
8: User releases GV
i
9: Joints solution A ← PLANNER(−→r R
10: if A is valid then
11:
12: else
13:
14: end if

∀ joints J, Ji ← Ai

COLOR(GV

i , error)

G,i, θ R

G,i, ˆnR

G,i)

IV. THE HOMUNCULUS MODEL SYSTEM

For our particular system we used an Oculus Rift as the
VR headset and touch controllers, and a Baxter robot. Early

in development Razer hydra controllers were also used for
hand controllers. We chose the Baxter robot because it is
commonly available, and though it looks humanoid, the range
and DOF of the arms are distinctly not human like. Baxter
provides a camera and range sensor in each arm. The Baxter
robot was conﬁgured with either two parallel plate grippers
or a gripper and a staple gun. Two Logitech C930e cameras
were placed on Baxter’s head as a stereo camera feed.

As seen in Figure 2 each arm’s sensor information was
displayed as a video screen and progress bar which indicated
the range sensors value. These displays were on either side
of the central window. This allowed a user to see through
the hand camera, read the range sensor value, and see a
stereoscopic view of an arm at the same time.

To represent the control interface for the arm, we placed
one glowing orb per arm in the space along with a marker
for the arms current state. The orb is red if the robot was
commanded to reach an unobtainable conﬁguration, and blue
if commanded to a valid position and orientation. The marker
for each arm’s current position and orientation was added to
allow the user to compare changes in position. Additionally
a virtual grid space was placed in the VRCR as a virtual
reference surface.

We allow the user to change the mapping MHG to suit

Staple gunGripperCamerasRobotic systemVirtual Reality Control RoomVR systemSystem Diagramthe task by changing how they held the controllers (See
Algorithm 1. Often a robot like Baxter keeps the grippers
faced downwards towards a surface. This is an uncomfortable
position for a human to hold. By selecting a different trans-
form, the user can switch form having the gripper match the
hands position and orientation, to simple matching position,
with orientation ﬁxed into the downwards position. This
makes the system easier to use in pick and place operations.
Using the touch system, if a user grabbed a control orb while
their index ﬁnger was pointing out, the system would attempt
to mimic the position and orientation of the user hand. If
instead a user grabbed the control with their whole hand,
the arm would only mimic the position, while maintaining a
downward orientation.

Figure 2 shows the system diagram. Since the Oculus
and other consumer VR head sets use the Unity framework,
a Windows PC is needed for the user. Since Baxter uses
ROS and Ubuntu, we needed a messaging system which
could communicate between the systems in a fast man-
ner. Lightweight Communications and Marshalling (LCM),
developed by MIT and University of Michigan proved a
sufﬁcient solution [19]. LCM however can only work over
a small subnet,(IE on the same router). To enable inter-
network operations,
the Canopy framework was used to
relay ROS massages between ROS master nodes on different
networks[20]. The Canopy framework subscribes to ROS
topics, broadcasts them to server, and then transmits them
to other ROS Master nodes that connect to the same server
with the same group. This allows several ROS networks with
separate master nodes to communicate to each other. This
is represented in Figure 2 as the transmission element. The
network with the User would convert LCM messages and
ROS commands into each other for rebroadcast. For high
deﬁnition video, the LCM/ROS infrastructure was insufﬁ-
cient. We used the NDI system by NewTek for transmitting
and receiving a compressed HD video stream from the HD
cameras. These streams were then integrated into Unity as
a texture. Two planes, one displayed to each eye, have the
camera feeds overlaid on them to provide a stereoscopic view
out of the VRCR main window.

V. RESULTS AND DISCUSSION

In order to test the system we devised a series of tasks
for an expert user to perform. We focused on assembly,
pick-and-place, and manufacturing tasks for the system. For
pick-and-place operations, we tested the system’s ability to
handle objects of different shape and compliance. The user
was tasked with picking up each item, transferring them from
the left hand to the right hand, and then depositing them into
a bin. This required the user to identify locations to grasp
the object from, align the hands, re-grasp, and transfer to
the bin. This is a non-trivial set of operations for a robotic
system since it must be able to predict the movements of
the cloth in response to grasping, understand the presence
of the overhangs on the reel, and plan to drag the reel
into a position where it can be grasped from the side. By
contrast, a user is able to quickly execute these tasks in the

Fig. 3.
Manipulating Various Shapes and Flexibilities. Users often
have very astute perception and knowledge of an object’s shape material
properties. In this example a user is able to pick up a cylinder, a piece of
cloth and a reel, hand them to the other hand, and place them in a bucket.
The user needs to grasp from multiple angles, drag objects, and coordinate
transfer to accomplish the task. In hard to see images, the item is circled
in orange.

Pickup cylinderHandoffPlace in basketPickup clothDrop clothSlide reelSlide reelPickup reelHandoffDrop reelFig. 4. Block Assembly. A series of blocks are grasped and stacked as a test of the system performance. A User can use the stereo cameras and hand
cameras at the same time to approach, grasp, align and then assemble two blocks.

teleoperation framework by leveraging their intuition for the
objects’ response to stimuli. It was useful to the user to be
able to both visualize the overall space through the stereo
window, and to be able to look through the hand camera to
gauge the sense of alignment and distance to a target grasping
location. In the supplementary video we see an expert user is
able to use the hand cameras and virtual window to pick and
place screws into a bin and lift and place a wire. Overall the
system was able to handle many different types of items. We
conducted evaluations with 8 different objects. This mode of
operation is made possible by the separation of MV R into the
MGG and MDS of the homunculus model. With the controls
for the robot separated from a virtual representation of the
robot, the multiple large displays can be placed further from
the user in virtual space and the controls can be conﬁned an
appropriately mapped region of interest.

TABLE I

THE SUCCESS RATE OF ASSEMBLY TASKS RELATIVE TO AUTOMATED
PROCEDURES WITH AND WITHOUT IN-HAND OBJECT LOCALIZATION
(IOL)

Measured

Automated

Automated

Teleoperated

without IOL

with IOL

VR System

Successful grasping

Successful Assembly

100%

41%

100%

66%

100%

100%

Recently researchers at MIT had Baxter perform an assem-
bly task using in-hand object localization (IOL) with a prime-
sense sensor. Once an object was grasped in the hand, it was
localized to improve the accuracy of an assembly task[3].
We conducted teh same experiment using the Homonculus
system (see Figure 4) and measured performance over 20
trials.In table I, we can see the success rate of using Baxter
with a hard parallel plate gripper hand to grasp and assemble
large blocks. While the state-of-the-art IOL algorithm can
dramatically improve the success rate for the task, a human

user had a perfect performance for a similar amount of
execution time. A user took on average 52 seconds for
the task with a 15 second standard deviation. In order to
complete the task, it is useful to point Baxter’s hand down
towards the table. Our ability to vary MHG aided the user in
this task. By pressing a button the Razer, the MHG would
ignore the rotation information from the users hands, and
only track position. This made grasping an object from above
much more comfortable. A variant of this task is seen in
Figure 5. Here the user switches between two different MHG
to complete a ﬁxture-less assembly task. When grasping
items from the table, the rotation information is ﬁxed, but
when assembling in free space or handing the items off
between hands, the rotation of the users hands are directly
mapped to the robots.

For manufacturing a task, we had the user staple a wire
to a board. We also tested the importance of the relative
utility of the hand cameras. The user needed to be able to
pick and place a wire onto a board with one arm, place a
staple gun with the other, and ﬁre the gun several times to
lock the wire in place. As seen in Figure 6 the staple gun
was attached to the side of the robot arm as an end-effector.
This prevented the use of the hand camera when aligning
the staple gun. The user was able to easily align with and
pick up the wire while using the hand camera Without the
hand camera, alignment of the staple gun was inaccurate, and
the user needed 5 attempts to secure 2 staples. Despite this
handicap, the user was able to use the 3D depth information
from the virtual window to align the hand to the wire and
staple the object. Future version of the system could include
a pressure sensor and display to allow the user to know the
force they are applying to the surface as well as a map of
the pressure over the contact surface. This would allow the
user to be sure the tool is lying evenly with enough force on
the surface.

In order to test systems ability over multiple network
architectures, we controlled the robot in several different

ApproachingGraspingAligningAssemblycommunication, the system was set up at the Hyatt Regency
Crystal City in Arlington, VA for the 2016 PI meeting of
the National Robotics Initiative. There users were able to
pilot a Baxter at MIT over the hotel’s wireless Internet. This
required limiting the frame rate on the hand cameras to 1Hz
and the range update to 5Hz and reducing the resolution of
the stereo cameras to 800x600. This was done to meet the 5
Mbps cap on the connection.

VI. CONCLUSION

In this paper we have developed a system for VR based
telerobotics systems based on the homunculus model of
mind. The system is highly ﬂexible across network archi-
tectures and bandwidth allotments. By being able to rapidly
change the mappings between human inputs and robot state
and robot state to human inputs, we can improve utility
and ergonomics. The ability of this architecture to leverage
existing consumer grade hardware and software frameworks
to remote operate existing robot systems provides it an ability
to scale into wider deployment. Teleoperated robotic systems
will allow humans the ability to work at scales and in
environments which they cannot accomplish today. Barriers
to working such as physical health, location, or security
clearance could be reduced by decoupling physicality from
manufacturing tasks.

VII. ACKNOWLEDGMENT

We would like to thank the Boeing Corporation for
their support for the project. We would also like to thank
Changhyun Choi for his assistance with the Baxter system
and for sharing his data on assembly.

REFERENCES

[1] R. L. Gregory and O. L. Zangwill, The Oxford companion to the mind.

Oxford University Press, 1987.

[2] D. C. Dennett and M. Kinsbourne, “Time and the observer: The
where and when of consciousness in the brain,” Behavioral and Brain
Sciences, vol. 15, no. 02, pp. 183–201, 1992.

[3] C. Choi, J. DelPreto, and D. Rus, “Using vision for pre- and post-
grasping object localization for soft hands,” in International Sympo-
sium on Experimental Robotics (ISER), 2016.

[4] X. Wang, C. Yang, H. Ma, and L. Cheng, “Shared control for tele-
operation enhanced by autonomous obstacle avoidance of robot ma-
nipulator,” in Intelligent Robots and Systems (IROS), 2015 IEEE/RSJ
International Conference on.

IEEE, 2015, pp. 4575–4580.

[5] M. R. Mine, F. P. Brooks Jr, and C. H. Sequin, “Moving objects in
space: exploiting proprioception in virtual-environment interaction,” in
Proceedings of the 24th annual conference on Computer graphics and
interactive techniques. ACM Press/Addison-Wesley Publishing Co.,
1997, pp. 19–26.

[6] R. S. Kennedy and K. M. Stanney, “Postural instability induced by
virtual reality exposure: Development of a certiﬁcation protocol,”
International Journal of Human-Computer Interaction, vol. 8, no. 1,
pp. 25–47, 1996.

[7] M. Stilman, K. Nishiwaki, and S. Kagami, “Humanoid teleoperation
for whole body manipulation,” in Robotics and Automation, 2008.
ICRA 2008. IEEE International Conference on.
IEEE, 2008, pp.
3175–3180.

[8] T. Rodehutskors, M. Schwarz, and S. Behnke, “Intuitive bimanual
telemanipulation under communication restrictions by immersive 3d
visualization and motion tracking,” in Humanoid Robots (Humanoids),
2015 IEEE-RAS 15th International Conference on.
IEEE, 2015, pp.
276–283.

Fig. 5. Fixture-less Assembly by Teleoperation. A user is able to pick up
a block, hand it off to the other hand, pick up a second block and stack
them together. This requires the use of multiple MHG to complete.

network conﬁgurations. The test above were done on a
local network using a wired connection. We also controlled
the robot in the same building over different networks via
a wireless connection This required decreasing the update
rate on the hand cameras to 5Hz. As a test of long range

GraspHand offAssemblyRobotVR[9] E. Ackerman, “Oculus rift-based system brings true immersion
[Online]. Avail-
http://spectrum.ieee.org/automaton/robotics/robotics-hardware/

to telepresence robots,” IEEE Spectrum, 2015.
able:
upenn-dora-platform

[10] U. L. R. Lab, “Baxter hydra rift teleop,” August 2014. [Online]. Avail-

able: http://sdk.rethinkrobotics.com/wiki/Baxter Hydra Rift Teleop

[11] L. Fritsche, F. Unverzag, J. Peters, and R. Calandra, “First-person tele-
operation of a humanoid robot,” in Humanoid Robots (Humanoids),
2015 IEEE-RAS 15th International Conference on.
IEEE, 2015, pp.
997–1002.

[12] H. Reddivari, C. Yang, Z. Ju, P. Liang, Z. Li, and B. Xu, “Teleoperation
control of baxter robot using body motion tracking,” in Multisensor
Fusion and Information Integration for Intelligent Systems (MFI),
2014 International Conference on.

IEEE, 2014, pp. 1–6.

[13] J. Kofman, X. Wu, T. J. Luu, and S. Verma, “Teleoperation of a
robot manipulator using a vision-based human-robot interface,” IEEE
transactions on industrial electronics, vol. 52, no. 5, pp. 1206–1219,
2005.

[14] P. Kremer, T. Wimbock, J. Artigas, S. Schatzle, K. Johl, F. Schmidt,
C. Preusche, and G. Hirzinger, “Multimodal telepresent control of
dlr’s rollin’justin,” in Robotics and Automation, 2009. ICRA’09. IEEE
International Conference on.

IEEE, 2009, pp. 1601–1602.

[15] C. Passenberg, A. Peer, and M. Buss, “A survey of environment-
, operator-, and task-adapted controllers for teleoperation systems,”
Mechatronics, vol. 20, no. 7, pp. 787–801, 2010.

[16] K. R. Guerin, S. D. Riedel, J. Bohren, and G. D. Hager, “Adjutant:
A framework for ﬂexible human-machine collaborative systems,” in
2014 IEEE/RSJ International Conference on Intelligent Robots and
Systems.

IEEE, 2014, pp. 1392–1399.

[17] M. Borg, S. S. Johansen, K. S. Krog, D. L. Thomsen, and M. Kraus,
“Using a graphics turing test to evaluate the effect of frame rate and
motion blur on telepresence of animated objects,” in 8th International
Conference on Computer Graphics Theory and Applications (Grapp
2013), 2013, pp. 283–287.

[18] M. Antonov,
March 2015.
blog/asynchronous-timewarp-examined/

online,
[Online]. Available: https://developer3.oculus.com/

“Asynchronous

examined,”

timewarp

[19] A. S. Huang, E. Olson, and D. C. Moore, “Lcm: Lightweight commu-
nications and marshalling,” in Intelligent robots and systems (IROS),
2010 IEEE/RSJ international conference on.
IEEE, 2010, pp. 4057–
4062.

[20] R. C. Alex Wallar, “Canopy: The ros cloud robotics framework
and cloud computing platform service,” 2 2017. [Online]. Available:
https://github.com/canopy-ros

Fig. 6. Stapling wire to a board. A user is able to place a thin wire with
the gripper tool on the left arm and staple it in place with the right arm
(A). From the virtual control room (B), the user can align the staple gun
using their stereo vision.

AB