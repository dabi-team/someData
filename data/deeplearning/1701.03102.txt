LINEAR DISENTANGLED REPRESENTATION LEARNING FOR FACIAL ACTIONS

Xiang Xiang1 and Trac D. Tran2

1Dept. of Computer Science
2Dept. of Electrical & Computer Engineering
Johns Hopkins University, 3400 N. Charles Street, Baltimore, MD 21218, USA

7
1
0
2

n
a
J

1
1

]

V
C
.
s
c
[

1
v
2
0
1
3
0
.
1
0
7
1
:
v
i
X
r
a

Fig. 1. The separability of the neutral face yn and expression
component ye. We ﬁnd yn is better for identity recognition
than y and ye is better for expression recognition than y.

ABSTRACT

Limited annotated data available for the recognition of facial
expression and action units embarrasses the training of deep
networks, which can learn disentangled invariant features.
However, a linear model with just several parameters nor-
mally is not demanding in terms of training data. In this paper,
we propose an elegant linear model to untangle confounding
factors in challenging realistic multichannel signals such as
2D face videos. The simple yet powerful model does not
rely on huge training data and is natural for recognizing
facial actions without explicitly disentangling the identity.
Base on well-understood intuitive linear models such as
Sparse Representation based Classiﬁcation (SRC), previous
attempts require a prepossessing of explicit decoupling which
is practically inexact.
Instead, we exploit the low-rank
property across frames to subtract the underlying neutral
faces which are modeled jointly with sparse representation
on the action components with group sparsity enforced.
On the extended Cohn-Kanade dataset (CK+), our one-shot
automatic method on raw face videos performs as competitive
as SRC applied on manually prepared action components and
performs even better than SRC in terms of true positive rate.
We apply the model to the even more challenging task of
facial action unit recognition, veriﬁed on the MPI Face Video
Database (MPI-VDB) achieving a decent performance. All
the programs and data have been made publicly available.

1. INTRODUCTION

In this paper, the problem is recognizing facial actions given
a face video and action categories in the granularity of
either the holistic expression (emotion, see Fig.1) or action

Fig. 2. Action unit number and FACS name shown using
images from MPI-VDB with 27 distinct AUs. The peak frame
is shown. AU12L and AU12R are distinct; similar for AU14.

units (AU, see Fig. 2). The widely-used 6 basic emotions
deﬁned by Paul Ekman include surprise, sadness, disgust,
anger, fear and happiness. He also deﬁnes the Facial Action
Coding System (FACS), using which we can code almost
any expression. Recently, feature learning [1, 2, 3] using
auto-encoder or adversarial training has shown to be able to
disentangle facial expression from identity and pose. Unlike
face recognition, limited labelled training data are available
for facial expressions and AUs in particular.

As shown in Fig.1, an expressive face can be separated
into a principal component of the neutral face encoding
identity cues and an action component encoding motion cues
such as the highlighted brow, cheek, lip, lid and nose which
relate to AUs in FACS. As recognition is always broken down
into measuring similarity [4], a similar identity can confuse a
similar action. To decouple them, [5] ﬁrst rules out the neural
face explicitly and then discriminate between different action
components [6] instead of raw faces [7]. The ﬁrst step is based
on the observation that the underlying neutral face stays the
same. If we stack vectors of neutral faces over the time of an
action as a matrix, it should be low-rank, ideally with rank
1. While theoretically the low-rank Principal Component
Pursuit [8] can be exact under certain conditions, it is of
approximate nature in practice. Their second step is based
on the idea of describing an action component as a sparse
representation over an over-complete dictionary formed by
action components of all categories.

Our intuition is to remain both facets in a joint manner.

 
 
 
 
 
 
For one thing, we implicitly get rid of the neutral face. For an-
other, we use equally-spaced sampled frames, since all frames
collaboratively yet redundantly represent the expression and
neutral face. Then, the sparse coefﬁcient vectors form a
joint-sparse coefﬁcient matrix. That drives us to induce both
the joint Sparse representation [9, 10] and the implicit Low-
Rank approximation [8] in one model (SLR) [11], which also
induces consistent classiﬁcations across frames.

Furthermore, ideally non-zero coefﬁcients all drop to the
ground-truth category. Therefore, the class-level sparsity is 1
and the coefﬁcient matrix exhibits group sparsity. However,
coefﬁcient vectors share class-wise yet not necessarily atom-
wise sparsity [12]. Thus, we prefer enforcing both the group
sparsity and atom-wise sparsity. We name this extended
model Collaborative-Hierarchical Sparse and Low-Rank (C-
HiSLR) model [11] following the naming of C-HiLasso [12].
In Sec. 2, we review the classic idea of learning a sparse
representation for classiﬁcation and its related application on
expression recognition. In the remainder, we ﬁrst elaborate
our model in Sec. 3, then discuss solving the model via joint
optimization in Sec. 4, and ﬁnally quantitatively evaluate our
model in Sec. 5, with a conclusion followed in Sec. 6.

2. RELATED WORKS

Among non-linear models, one line of work is kernel-based
methods [13] while another is deep learning [14, 15, 16, 1].
Similar ideas with disentangling factors have been presented
in [3, 2, 1]. By introducing extra cues, one line of works is 3D
models [17] while another is multi-modal models [18]. But in
the linear world, observing a random signal y for recognition,
we just hope to send the classiﬁer a discriminative compact
representation x over a dictionary D such that Dx = y.
Normally x is computed by pursuing the best reconstruction.
For example, when D is under-complete (skinny), a closed-
form approximate solution can be obtained by Least-Squares:

x∗ = arg minx (cid:107)y − Dx(cid:107)2

2 ≈ (DT D)−1DT y.

When D is over-complete (fat), add a Tikhonov regularizer:
x∗ = arg minx (cid:107)y − Dx(cid:107)2
where (cid:101)y = [y, 0]T and (cid:101)D = [D,
Notably, x∗ = (DT D + λrI)−1DT y is generally dense.

2 = arg minx (cid:107)(cid:101)y − (cid:101)Dx(cid:107)2
λrI]T is under-complete.

2 + λr(cid:107)x(cid:107)2

√

2

Alternatively, we can seek a sparse usage of D. Sparse
Representation based Classiﬁcation [9] (SRC) expresses a
test sample y as a weighted linear combination y = Dx of
training samples simply stacked columnwise in the dictionary
D. Presumably, non-zero weight coefﬁcients drop to the
ground-truth class, which induces a sparse coefﬁcient vector
or the so-called sparse representation. In practice, non-zero
coefﬁcients also drop to other classes due to noises and
correlations among classes. Once adding an error term e, we
can form an dictionary (cid:101)D which is always over-complete:

[x∗, e∗]T = arg min

s.t.

y = Dx + e = [ D | I ] ×

(cid:101)x sparsity((cid:101)x)
(cid:21)
(cid:20) x
e

= (cid:101)D(cid:101)x.

SRC evaluates which class leads to the minimum reconstruc-

tion error, which can be seen as a max-margin classiﬁer.

Particularly for facial actions, we treat videos as multi-
channel signals [10, 19], different from image-based methods
[5, 6].
[5] explicitly separates the neutral face and action
component, and then exploits the class-wise sparsity sepa-
rately for the recognition of identity from neutral faces and
expression from action components. Differently, with the
focus of facial actions we exploit the low-rank property for
disentangling identity as well as structured sparsity by inter-
channel observation. Furthermore, there is tradeoff between
simplicity and performance. As videos are sequential signals,
the above appearance-based methods including ours cannot
model the dynamics given by a temporal model [20] or spatio-
temporal models [21, 22, 23]. Other linear models include
ordinal regression [24, 25, 26] and boosting [27].

3. LINEAR REPRESENTATION MODEL

In this section, we explain how to model X using Y and
training data D, which contains K ∈ Z+ types of actions.
We would like to classify a test video as one of the K classes.

3.1. SLR: joint Sparse representation and Low-Rankness
First of all, we need an explicit representation Y of an expres-
sive face. The matrix Y ∈ Rd×τ can be an arrangement of
d-dimensional feature vectors y ∈ Rd (i = 1, 2, ..., τ ) of the
τ frames: Y = (cid:2)Y1|...|Yτ
(cid:3)
d×τ . We emphasize our model’s
power by simply using the raw pixel intensities.

Now, we seek an implicit latent representation X ∈ Rn×τ
of an input test face’s emotion Ye ∈ Rd×τ as a sparse linear
combination of prepared ﬁxed training emotions D ∈ Rd×n:

Ye = DX.

Since an expressive face y = ye + yn is a superposition of
an emotion ye ∈ Rd and a neutral face yn ∈ Rd, we have
Y = Ye + L,
where L ∈ Rd×τ is ideally τ -times repetition of the column
vector of a neutral face yn ∈ Rd.
Presumably L =
(cid:2)yn|...|yn

(cid:3)
d×τ . As shown in Fig. 3, X subjects to
Y = DX + L,
where the dictionary matrix Dd×n is an arrangement of all
sub-matrices D[j], j = 1, ..., (cid:98) n
τ (cid:99). Only for training, we
have (cid:98) n
τ (cid:99) training emotions with neutral faces subtracted. The
above constraint of X characterizes an afﬁne transformation
from the latent representation X to the observation Y.

If we write X and Y in the homogeneous form, we have

(cid:20) Yd×τ
11×τ

(cid:21)

=

(cid:20)Dd×n
01×n

(cid:1)

(cid:0)yn
1

(cid:21)

d×1

×

(cid:20) Xn×τ
11×τ

(cid:21)
.

In the ideal case with rank(L) = 1, if the neutral face yn is
pre-obtained [6, 5], it is trival to solve for X. Normally, yn
is unknown and L is not with rank 1 due to noises. As X is
supposed to be sparse and rank(L) is expected to be as small
as possible (maybe even 1), intuitively our objective is to

minX,L sparsity(X) + λL · rank(L),
where rank(L) can be seen as the sparsity of the vector
formed by the singular values of L. Here λL is a non-
negative weighting parameter we need to tune. When λL = 0,

Fig. 3. Pictorial illustration of the linear constraint of the
proposed model shown for disgust. D is prepared and simply
ﬁxed. Depending on the objectve the model has two versions.

as the Schatten (cid:96)2 matrix norm and can be seen as a group’s
magnitude. λG is a non-negative weighting parameter for the
group regularizer, which is generalized from an (cid:96)1 regularizer
(consider G = (cid:8){1}, {2}, ..., {n}(cid:9) for singleton groups) [12].
When λG = 0, C-HiSLR degenerates into SLR. When λL =
0, we get back to collaborative Sparse Group Lasso.
3.3. Classiﬁcation
Following SRC, for each class c ∈ {1, 2, ..., K}, let D[Gc] de-
note the sub-matrix of D which consists of all the columns of
D that correspond to emotion class c and similarly for X[Gc].
We classify Y by assigning it to the class with minimal resid-
ual as c∗ = arg minc rc(Y) := ||Y − D[Gc]X[Gc] − L||F .
4. OPTIMIZATION

Both SLR and C-HiSLR models can be seen as solving

min
X,L

f (X) + λL(cid:107)L(cid:107)∗

s.t. Y = DX + L

(3)

To follow a standard iterative ADMM procedure, we write

down the augmented Lagrangian function for (3) as

Fig. 4. Pictorial illustration of the group sparsity in C-HiSLR.

L(X, L, Λ) = f (X) + λL||L||∗

the optimization problem reduces to that in SRC. With both
terms relaxed to be convex norms, we alternatively solve
minX,L (cid:107)X(cid:107)1 + λL(cid:107)L(cid:107)∗,
where (cid:107) · (cid:107)1 is the entry-wise (cid:96)1 matrix norm, whereas (cid:107) · (cid:107)∗ is
the Schatten (cid:96)1 matrix norm (nuclear norm, trace norm) which
can be seen as applying (cid:96)1 norm to the vector of singular
values. Now, the proposed joint SLR model is expressed as

min
X,L

(cid:107)X(cid:107)1 + λL(cid:107)L(cid:107)∗

s.t. Y = DX + L

(1)

We solve (1) for matrices X and L by the Alternating
Direction Method of Multipliers (ADMM) (see Sec. 4).

3.2. C-HiSLR: a Collaborative-Hierarchical SLR model
If there is no low-rank term L, (1) becomes a problem of
multi-channel Lasso (Least Absolute Shrinkage and Selection
Operator). For a single-channel signal, Group Lasso has
explored the group structure for Lasso yet does not enforce
sparsity within a group, while Sparse Group Lasso yields an
atom-wise sparsity as well as a group sparsity. Then, [12]
extends Sparse Group Lasso to multichannel, resulting in a
Collaborative-Hierarchical Lasso (C-HiLasso) model. For
our problem, we do need L, which induces a Collaborative-
Hierarchical Sparse and Low-Rank (C-HiSLR) model:

min
X,L

(cid:107)X(cid:107)1 + λL(cid:107)L(cid:107)∗ + λG

(cid:88)

G∈G

(cid:107)X[G](cid:107)F

(2)

s.t. Y = DX + L

where X[G] is the sub-matrix formed by all the rows indexed
by the elements in group G ⊆ {1, ...,n}. As shown in Fig. 4,
given a group G of indices, the sub-dictionary of columns
indexed by G is denoted as D[G]. G = {G1, ..., GK} is a
non-overlapping partition of {1, ..., n}. Here (cid:107) · (cid:107)F denotes
the Frobenius norm, which is the entry-wise (cid:96)2 norm as well

+ (cid:104)Λ, Y − DX − L(cid:105) +

β
2

||Y − DX − L||2
F ,

(4)

where Λ is the matrix of multipliers, (cid:104)·, ·(cid:105) is inner product,
and β is a positive weighting parameter for the penalty
(augmentation). A single update at the k-th iteration includes

Lk+1 = arg min

L

λL||L||∗ +

β
2

||Y − DXk − L +

Xk+1 = arg min

X

f (X) +

β
2

||Y − DX − Lk+1 +

Λk+1 = Λk + β(Y − DXk+1 − Lk+1).

1
β
1
β

Λk||2
F

Λk||2
F

The sub-step of solving (5) has a closed-form solution:

Lk+1 = D λL

β

(Y − DXk +

1
β

Λk),

(5)

(6)

(7)

(8)

where D is the shrinkage thresholding operator. In SLR where
f (X) = (cid:107)X(cid:107)1, (6) is a Lasso problem, which we solve by
using the Illinois fast solver. When f (X) follows (2) of C-
HiSLR, computing Xk+1 needs an approximation based on
the Taylor expansion at Xk [28, 12]. We refer the reader to
[12] for the convergence analysis and recovery guarantee.

5. EXPERIMENTAL RESULTS

We evaluate our model on expressions (CK+) and action units
(MPI-VDB). Images are cropped using the Viola-Jones face
detector. Per category accuracies are averaged over 20 runs.
5.1. Holistic facial expression recognition

Experiments are conducted on the CK+ dataset [29] consist-
ing of 321 videos with labels1. For SLR and C-HiSLR, we
assume no prior knowledge of the neutral face. A testing unit
contains the last (τtst −1) frames together with the ﬁrst frame,
which is not explicitly known a priori as a neutral face. But

1Contempt is discarded in [5, 6] due to its confusion with anger and
disgust but we choose to keep it is for the completeness of the experiment on
CK+. See https://github.com/eglxiang/icassp15_emotion
for cropped face data and programs of C-HiSLR, SLR, SRC and Eigenface.

An
0.77
0.08
0.05
0.09
0.01
0.19
0

Co
0.01
0.84
0
0.01
0.02
0.02
0.02

Di
0.09
0
0.93
0.03
0.01
0.02
0

Fe
0.02
0
0.01
0.53
0.02
0.05
0.02

Ha
0
0.03
0.01
0.12
0.93
0
0

Sa
0.07
0.04
0.01
0.07
0
0.65
0.02

Su
0.04
0
0
0.15
0.03
0.07
0.95

An
Co
Di
Fe
Ha
Sa
Su

Table 1. Confusion matrix for C-HiSLR on CK+ without
explicitly knowing neutral faces. The optimizer runs for 600
iterations and the recognition rate is 0.80 with a std of 0.05.

An
0.51
0.03
0.04
0.08
0
0.09
0

Co
0
0.63
0
0
0.01
0
0.01

Di
0.10
0.03
0.74
0.01
0
0.04
0

Fe
0.02
0
0.02
0.51
0.03
0.04
0.02

Ha
0
0.04
0.01
0.03
0.85
0
0.01

Sa
0.31
0.26
0.15
0.19
0.08
0.70
0.02

Su
0.06
0.01
0.04
0.18
0.03
0.13
0.94

An
Co
Di
Fe
Ha
Sa
Su

Table 2. Confusion matrix for SLR on CK+. We let the
optimizer run for 100 iters and Lasso run for 100 iters. The
total recognition rate is 0.70 with a std of 0.14.

(i.e., forming dictionary) and the other 5 for testing (namely
τtrn = 5 and τtst = 5). In this way, the dataset is divided into
a training set and a disjoint testing set both with 5 sub-videos
per category. When λL = 15, SLR’s performance is shown
in Fig. 6 with an average recognition rate of 0.80. When
λG = 4.5, C-HiSLR’s performance is shown in Fig. with a
average recognition rate of 0.84. They both perform poorly
on AU10R (right upper lip raiser), which confuse with 12R
(right lip corner), 13 (cheek puffer), 14R (right dimpler) and
15 (lip corner depressor) because they are all about lips.

6. CONCLUSION
In this paper, we propose a identity-decoupled linear model
to learn a facial action representation, unlike [6] requiring
neutral faces as inputs and [5] generating labels of the identity
and facial action as mutual by-products yet with extra efforts.

Fig. 6. Confusion matrix for SLR (left) and CHi-SLR (right)
on 27 AUs from MPI-VDB. SLR achieves a recognition rate
of 0.80 when the optimizer runs for 30 iters and Lasso run for
3 iters. CHi-SLR achieves a recognition rate of 0.84 when the
optimizer runs for 1000 iters. In both case the std is 0.04.

Fig. 5. Effect of group sparsity. τtrn = 8. (a) is the test input
Y. (b)(c) are recovered L and DX, given by C-HiSLR which
correctly classiﬁes (a) as contempt. (d)(e) are recovery results
given by SLR which mis-classiﬁes (a) as sadness. (i),(ii),(iii)
denote results of frame #1, #4, #8 respectively, whereas (iv)
displays the recovered X (left for C-HiSLR and right for
SLR). X given by C-HiSLR is group-sparse as we expected.

for forming the dictionary, we subtract the ﬁrst frame from the
last τtrn frames per video. The parameters are set as τtrn = 8,
τtst = 8, λL = 10 and λG = 4.5. We randomly choose
10 videos for training and 5 for testing per class. Fig. 5
visualizes the recovery results given by C-HiSLR. Table 1 and
2 present their confusion matrix, respectively. Columns are
predictions and rows are ground truths. Table 4 summarizes
the true positive rate (i.e., sensitivity). We have anticipated
that SLR (0.70) performs worse than SRC (0.80) since SRC
is equipped with neutral faces. However, C-HiSLR’s result
(0.80) is comparable with SRC’s. C-HiSLR performs even
better in terms of sensitivity, which veriﬁes that the group
sparsity indeed boosts the performance.

As a comparsion, we replicate the image-based SRC used
in [5, 6, 7] and assume the neutral face is provided. We
represent an action component by subtracting the neutral face
which is the ﬁrst frame from the last frame per video. We
choose half of CK+ for training and the other half for testing
per class. When sparsity level is set to 35%, SRC achieves
a recognition rate of 0.80 shown by Table 3. Accuracies for
fear & sad are low as they confuse each other.
5.2. Facial action unit recognition

To be pose-independant, the following experiments are con-
ducted on a proﬁle view of MPI-VDB 2 containing 27 long
video all with over 100 frames (1 video per category, see Fig.
2). From each video we sample 10 disjoint sub-videos each of
which contains 10 equally-spaced sampled frames. Different
from Sec. 5.1, all frames are directly used without subtracting
the ﬁrst frame as the sub-videos do not start with neutral
states. However,
there implicitly exist underlying neural
states and presumably the proposed model is still valid. Then
we randomly sample 5 sub-videos from the 10 for training

2See http://vdb.kyb.tuebingen.mpg.de for the raw data and
https://github.com/eglxiang/FacialAU for cropped face data.

An
0.71
0.07
0.04
0.16
0.01
0.22
0

Co
0.01
0.60
0
0
0
0
0.01

Di
0.07
0.02
0.93
0.09
0
0.13
0

Fe
0.02
0
0.02
0.25
0.01
0.01
0

Ha
0.01
0.16
0.01
0.25
0.96
0.04
0.01

Sa
0.03
0.03
0
0
0
0.24
0

Su
0.16
0.12
0
0.26
0.02
0.35
0.98

An
Co
Di
Fe
Ha
Sa
Su

Table 3. Confusion matrix for SRC [9] on CK+ with neutral
faces explicitly provided. Recognition rate is 0.80 (std: 0.05).

Co
0.60
0.63
0.84

Model
SRC
SLR

An
0.71
0.51
C-HiSLR 0.77

Di
0.93
0.74
0.93
Table 4. Comparison of sensitivity. The bold and italics
denote the highest and lowest respectively. Difference within
0.05 is treated as comparable. C-HiSLR performs the best.

Su
0.98
0.94
0.95

Sa
0.24
0.70
0.65

Fe
0.25
0.51
0.53

Ha
0.96
0.85
0.93

First, we do not recover
Our contribution is two-fold.
the action component explicitly.
Instead, the video-based
sparse representation is jointly modelled with the low-rank
property across frames so that the neutral face underneath
is automatically subtracted. Second, we preserve the label
consistency by enforcing atom-wise as well as group sparsity.
For the CK+ dataset, C-HiSLR’s performance on raw faces
is comparable with SRC given neutral faces, which veriﬁes
that action components are automatically separable from raw
faces as well as sparsely representable by training data. We
also apply the model on recognizing actions units with limited
training data, which may embarrass deep learning techniques.

7. REFERENCES

[1] Salah Rifai, Yoshua Bengio, Aaron Courville, Pascal Vincent, and
Mehdi Mirza, “Disentangling factors of variation for facial expression
recognition,” in ECCV. Springer, 2012, pp. 808–822. 1, 2

[2] Scott Reed, Kihyuk Sohn, Yuting Zhang, and Honglak Lee, “Learning
to disentangle factors of variation with manifold interaction,” in ICML,
2014, pp. 1431–1439. 1, 2

[3] Ping Liu, Joey Tianyi Zhou, Ivor Wai-Hung Tsang, Zibo Meng,
Shizhong Han, and Yan Tong, “Feature disentangling machine-a novel
approach of feature selection and disentangling in facial expression
analysis,” in ECCV. Springer, 2014, pp. 151–166. 1, 2

[4] Xiang Xiang and Trac D. Tran,

“Pose-selective max pooling for

measuring similarity,” in ICPR workshops, 2016. 1

[5] Sima Taheri, Visha M. Patel, and Rama Chellappa, “Component-based
recognition of faces and facial expressions,” IEEE Trans. on Affective
Computing, vol. 4, no. 4, pp. 360–371, 2013. 1, 2, 3, 4

[6] Stefanos Zafeiriou and Maria Petrou, “Sparse representations for facial
expressions recognition via l1 optimization,” in IEEE CVPR Workshop,
2010. 1, 2, 3, 4

[7] Raymond Ptucha, Grigorios Tsagkatakis, and Andreas Savakis, “Man-
ifold based sparse representation for robust expression recognition
without neutral subtraction,” in IEEE ICCV Workshops, 2011. 1, 4

[8] Emmanuel J. Candes, Xiaodong Li, Yi Ma, and John Wright, “Robust
principal component analysis?,” Journal of the ACM, vol. 58, no. 3, pp.
1–37, 2011. 1, 2

[9] John Wright, Allen Y. Yang, Arvind Ganesh, Shankar S Sastry, and
Yi Ma, “Robust face recognition via sparse representation,” IEEE T-
PAMI, vol. 31, no. 2, pp. 210–227, 2009. 2, 5

[10] Yonina C. Eldar and Holger Rauhut,

“Average case analysis of
multichannel sparse recovery using convex relaxation,” IEEE Trans.
Inf. Theory, vol. 56, no. 1, pp. 505–519, 2010. 2

[11] Xiang Xiang, Minh Dao, Gregory D Hager, and Trac D Tran,
“Hierarchical sparse and collaborative low-rank representation for
emotion recognition,” in ICASSP. IEEE, 2015, pp. 3811–3815. 2
[12] Pablo Sprechmann, Ignacio Ramrez, Guillermo Sapiro, and Yonina
“C-HiLasso: A collaborative hierarchical sparse modeling
Eldar,
framework,” IEEE Trans. Sig. Proc., vol. 59, no. 9, pp. 4183–4198,
2011. 2, 3

[13] C. Fabian Benitez-Quiroz, Ramprakash Srinivasan, and Aleix M.
Martinez,
“Emotionet: An accurate, real-time algorithm for the
automatic annotation of a million facial expressions in the wild,” in
CVPR, June 2016. 2

[14] Xiangyun Zhao, Xiaodan Liang, Luoqi Liu, Teng Li, Yugang Han,
Nuno Vasconcelos, and Shuicheng Yan, “Peak-piloted deep network
for facial expression recognition,” in ECCV, 2016, pp. 425–442. 2
[15] Heechul Jung, Sihaeng Lee, Junho Yim, Sunjeong Park, and Junmo
Kim, “Joint ﬁne-tuning in deep neural networks for facial expression
recognition,” in ICCV, December 2015. 2

[16] Ping Liu, Shizhong Han, Zibo Meng, and Yan Tong, “Facial expression
recognition via a boosted deep belief network,” in CVPR, 2014. 2
[17] Hui Chen, Jiangdong Li, Fengjun Zhang, Yang Li, and Hongan Wang,
“3d model-based continuous emotion recognition,” in CVPR, 2015. 2
[18] Zheng Zhang, Jeff M. Girard, Yue Wu, Xing Zhang, Peng Liu, Umur
Ciftci, Shaun Canavan, Michael Reale, Andy Horowitz, Huiyuan Yang,
Jeffrey F. Cohn, Qiang Ji, and Lijun Yin, “Multimodal spontaneous
emotion corpus for human behavior analysis,” in CVPR, June 2016. 2
[19] Kaili Zhao, Wen-Sheng Chu, Fernando De la Torre, Jeffrey F. Cohn,
and Honggang Zhang, “Joint patch and multi-label learning for facial
action unit detection,” in CVPR, June 2015. 2

[20] Arnaud Dapogny, Kevin Bailly, and Severine Dubuisson, “Pairwise
conditional random forests for facial expression recognition,” in ICCV,
2015. 2

[21] Mengyi Liu, Shiguang Shan, Ruiping Wang, and Xilin Chen,
“Learning expressionlets on spatio-temporal manifold for dynamic
facial expression recognition,” in CVPR, 2014, pp. 1749–1756. 2

[22] Ziheng Wang, Shangfei Wang, and Qiang Ji,

“Capturing complex
spatio-temporal relations among facial muscles for facial expression
recognition,” in CVPR, 2013, pp. 3422–3429. 2

[23] Yimo Guo, Guoying Zhao, and Matti Pietik¨ainen, “Dynamic facial
expression recognition using longitudinal facial expression atlases,” in
ECCV, pp. 631–644. Springer, 2012. 2

[24] Rui Zhao, Quan Gan, Shangfei Wang, and Qiang Ji, “Facial expression
intensity estimation using ordinal information,” in CVPR, June 2016. 2
[25] Ognjen Rudovic, Vladimir Pavlovic, and Maja Pantic, “Multi-output
laplacian dynamic ordinal regression for facial expression recognition
and intensity estimation,” in CVPR. IEEE, 2012, pp. 2634–2641. 2

[26] Minyoung Kim and Vladimir Pavlovic,

“Structured output ordinal
regression for dynamic facial emotion intensity prediction,” in ECCV.
Springer, 2010, pp. 649–662. 2

[27] Peng Yang, Qingshan Liu, and Dimitris N Metaxas, “Exploring facial
expressions with compositional features,” in CVPR. IEEE, 2010. 2
[28] Minh Dao, Nam H Nguyen, Nasser M Nasrabadi, and Trac D
“Collaborative multi-sensor classiﬁcation via sparsity-based

Tran,
representation,” IEEE Trans. on Sig. Proc., vol. 64, no. 9. 3

[29] Patrick Lucey, Jeffrey F. Cohn, Takeo Kanade, Jason Saragih, and Zara
Ambadar, “The Extended Cohn-Kanade Dataset (CK+): A complete
in IEEE
dataset for action unit and emotion-speciﬁed expression,”
CVPR, 2010. 3

