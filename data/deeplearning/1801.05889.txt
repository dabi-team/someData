Perceived Audiovisual Quality Modelling based on
Decison Trees, Genetic Programming and Neural
Networks

Edip Demirbilek, Jean-Charles Gr´egoire

1

7
1
0
2
c
e
D
6

]

M
M

.
s
c
[

1
v
9
8
8
5
0
.
1
0
8
1
:
v
i
X
r
a

Abstract—Our objective is to build machine learning based
models that predict audiovisual quality directly from a set
of correlated parameters that are extracted from a target
quality dataset. We have used the bitstream version of the
INRS audiovisual quality dataset that reﬂects contemporary real-
time conﬁgurations for video frame rate, video quantization,
noise reduction parameters and network packet loss rate. We
have utilized this dataset to build bitstream perceived quality
estimation models based on the Random Forests, Bagging, Deep
Learning and Genetic Programming methods.

We have taken an empirical approach and have generated
models varying from very simple to the most complex depending
on the number of features used from the quality dataset. Random
Forests and Bagging models have overall generated the most
accurate results in terms of RMSE and Pearson correlation
coefﬁcient values. Deep Learning and Genetic Programming
based bitstream models have also achieved good results but that
high performance was observed only with a limited range of
features. We have also obtained the epsilon-insensitive RMSE
values for each model and have computed the signiﬁcance of the
difference between the correlation coefﬁcients.

Overall we conclude that computing the bitstream information
is worth the effort it takes to generate and helps to build more
accurate models for real-time communications. However, it is
useful only for the deployment of the right algorithms with the
carefully selected subset of the features. The dataset and tools that
have been developed during this research are publicly available
for research and development purposes.

Index Terms—Perceived quality, audiovisual dataset, bitstream

model, machine learning.

I. INTRODUCTION

One of the standard quality assessment methods of multi-
media communications is called Quality of Service (QoS) and
is based on the measure of parameters such as throughput,
delay, jitter and packet loss rate [1]. When analyzing the
characteristics of a real-time multimedia communication, it is
necessary to have a clear understanding of changes in these
parameters. This is of particular importance in environments
where the multimedia streams are traversing resources that
have limited and ﬂuctuating bandwidth capacity, such as
wireless networks [2].

In order to cope with ever-changing situations during a
multi-party multimedia interaction, one of the standard ap-
proaches is to periodically measure various QoS parameters
and feed them back to the transmission endpoint in order to

This work is supported by NSERC and Summit-Tech Inc., under the

Collaborative Research and Development grant programme.

E. Demirbilek and JC. Gr´egoire are with Institut National de la Recherche

Scientiﬁque (INRS), Montr´eal, CANADA

control the rate and characteristics of the streamed multimedia.
Such an adaptation model generally improves the quality of
audiovisual communications. These QoS measurements can
also be reported for quality monitoring.

There has been signiﬁcant research about the QoS feedback
control in both application and network layers and various
management tools and approaches have been developed [3].
However, in recent years, the convergence of the digital media
industry and the information and communications technology
(ICT) industry has led to a paradigm shift away from QoS
towards perceived multimedia presentation quality [1].

In perceived quality based multimedia adaptation, although
a better QoS usually provides a higher presentation quality,
there are cases where QoS trade-offs are needed to maximize
the overall perceived quality [2]. These trade-offs could be
made statically and dynamically for a real-time communica-
tion.

Figure 1 depicts a sample architecture of a multimedia
communication system where QoS parameters are measured
at regular intervals and reported for monitoring as well as
for parameter tuning to the transmission endpoint along with
the perceived quality predictions. Here, audio and video data
streams are generated and encoded on the transmission end-
point and then forwarded to the network. On the receiver
endpoint, the data stream is ﬁrst decoded at the channel level
and then at the media level, and ﬁnally presented to the end-
user in conventional ways. While this process takes place,
in a closed loop, these measured QoS parameter values and
the quality predictions are evaluated by the transmission rate
control, and media and channel encoding parameters modiﬁed
to improve the user experience. Service Providers can enhance
their service monitoring and reporting processes dramatically
by exploiting such quality predictions. This sample archi-
tecture assumes that perceived quality modeling is already
implemented properly and this is the main concern of this
paper.

The classic approach to audiovisual quality modeling is to
develop functions to predict audio and video quality indepen-
dently and then combine them using another function to pre-
dict the overall audiovisual perceived quality. The alternative
way is to build models that predict the audiovisual quality
directly without any intermediate functions. Machine learning
based modeling approaches have been successfully applied to
estimating perceived quality [4] [5]. In this research, we have
taken the second approach and have built machine learning
based models that predict the overall audiovisual quality in

 
 
 
 
 
 
2

Fig. 1. Sample Architecture: Perceived quality modeling and perceived quality based multimedia quality adaptation for real-time communications.

one single function.

The rest of this paper is organized as follows. In sections
II, III and IV, we present some background information on
various aspects of the audiovisual quality modeling and the
machine learning algorithms we have used. The bitstream
version of the INRS audiovisual quality dataset is introduced
in Section V. Reduced-reference bitstream audiovisual quality
prediction models are presented in details in Section VI. We
sum up the work in the conclusion section.

II. PERCEIVED QUALITY MODELLING

The European Network on Quality of Experience in Multi-
media Systems and Services (Qualinet) whitepaper [6] deﬁnes
Quality of Experience (QoE) as follows: Quality of Experience
(QoE) is the degree of delight or annoyance of the user of an
application or service. It results from the fulﬁllment of his or
her expectations with respect to the utility and/or enjoyment of
the application or service in the light of the users personality
and current state.

Additionally, it deﬁnes the characteristics of a user, service,
application, or context whose actual state or setting may
have an inﬂuence on the QoE. These inﬂuence factors may
be interrelated but still can be broadly classiﬁed into three
categories, namely Human Inﬂuence Factors (IF), System
Inﬂuence Factors, and Context Inﬂuence Factors.

Human IFs are complex and strongly interrelated and related
to demographic and socio-economic background, physical and
mental constitution, or emotional state [6].

System IFs describe the properties and characteristics that
determine the technically produced quality of an application
or service. These factors are related to media capture, coding,
transmission, storage, rendering, and reproduction/display, as
well as to the communication of information itselffrom content
production to userand can be further sub-grouped into 4

categories: (1) Content-related System IFs, (2) Media-related
System IFs, (3) Network-related System IFs and (4) Device-
related System IFs [6].

Context IFs are related to situational properties that describe
the users’ environment in terms of physical, temporal, social,
economic, task, and technical characteristics [6].

The deﬁnition for QoE and its characteristics described by
the Qualinet whitepaper reﬂects the most recent standardized
work in the literature. There have been many attempts to
model, predict or ﬁnd a correlation between QoE and IFs. Most
authors concentrate on network-oriented QoS parameters such
as Packet Loss Rate, Jitter, Delay, and Throughput that are a
subset of the System IFs [7] [8]. In this research, we will also
focus on System IFs and therefore use the term “perceived
quality” rather than “Quality of Experience” as the IFs we
analyze are only a subset of all potential IFs.

Collecting the opinion of a set of users via subjective
experiments is one of the standard ways of measuring the
perceived quality of telecommunication systems. However,
conducting such experiments is costly and time-consuming,
and harder to perform for real-time communications [9], which
is the focus of our research. An alternative approach is to
conduct these experiments once to collect quality scores and
then develop instrumental methods to predict the mean of the
users’ perception of service quality.

Predicting the perceived quality from objective measure-
ments provides only partial solutions. However, these partial
solutions do provide insight on how perceived quality is
affected by network QoS parameters. It is possible to correlate
the QoS parameters with the measured perceived quality
metrics and build an effective perceived quality-aware QoS
model [10].

In the following sections, we will revisit this topic in more
detail when discussing the standardized perceived quality esti-
mation models. As we see from published approaches, quality

assessment systems that exploit machine learning paradigms
very promisingly attain a high degree of prediction accuracy
[4]. Machine learning based approaches provide a theoretical
and methodological framework to quantify the relationship
between perceived quality and network QoS.

A. Quality Models

Audiovisual quality relies on audio and video quality and
their interactions. The overall audiovisual quality can be esti-
mated via a function directly regardless of how degradations
affect audio and video quality individually. An alternative
approach is to predict intermediate audio and video quality
individually and then integrate these into an overall audiovisual
quality. Raake et al. [11] suggest
that a complex model
that uses the intermediate audio and video functions would
generate more accurate predictions.

There are different approaches in building audiovisual qual-
ity models. Raake et al. [11] have categorized the models based
on the type of data they use.

• Parametric quality models predict the impact of encoding
conﬁgurations and network impairments on multimedia
quality. They typically use information extracted from
packet headers and have no access to the packet payload
data. These methods are well suited to the cases where
the payload data is encrypted [12].

• Planning models are similar to the parametric models
but differ on where the input information is acquired
from. Planning models are based on service information
available during the planning phase while parametric
models take the input
information acquired from an
existing service.

• Media or signal-based models include aspects of human
perception and assess the physical characteristics of the
dispatched signal. They utilize the decoded signal as input
to calculate a quality score.

• Bitstream based models exploit

information from the
elementary stream. These models typically process both
the headers and the payload of the video bitstream. They
process the bitstream header to extract transport-related
information such as Transport Stream (TS) and/or Real-
time Transport Protocol (RTP) time stamps and sequence
numbers for packet
loss detection. They process the
payload of the video bitstream to extract a number of fea-
tures such as picture type, number of slices, Quantization
Parameter (QP), motion vector, type of each macroblock
(MB) and its partitions, and the transform coefﬁcients of
the prediction residual.

• Hybrid quality assessment models exploit information
from packet headers,
the elementary stream and the
reconstructed pictures. The information for the recon-
structed pictures is obtained from the processed video
sequence generated by an external decoder rather than
from an internal decoder within the model.

Quality models can also be grouped relying on the type
of additional information they process. Full-Reference (FR)
models typically process the original source sequence while
Reduced-Reference (RR) models use only a limited amount of

3

information derived from the source sequence. No-Reference
(NR) models use transmitted sequences without using any
information from the original signal.

One important aspect of perceived quality modeling is that
an objective model
is not expected to predict an average
subjective opinion more accurately than an average test sub-
ject. The uncertainty of the subjective votes is calculated via
standard deviation and its corresponding Conﬁdence Interval
(CI) [13].

B. Statistical Metrics

Traditionally, the performance of a model is evaluated using
three statistical metrics which are used to report the model per-
formance’s accuracy, consistency, and linearity/monotonicity
[13].

The accuracy of a model is usually determined by a statis-
tical interpretation of the difference between the MOS values
of the subjective test and its prediction on a generalized scale.
An accurate model aims to make predictions with the lowest
error in terms of “Root Mean Square Error” (RMSE) used
during the subjective tests [13] [14]. ITU-T P.1401 suggests
to compute the epsilon-insensitive RMSE (RMSE∗) to take the
uncertainty of the subjective scores as well.

The perceived quality predictions have to have consistently
low error margins over the range of test subjects. The model’s
consistency is reported by calculating either the residual error
distribution or outlier ratio. Computing the outlier ratio re-
quires ﬁnding the outliers that are determined as the points for
which prediction error surpasses the 95% conﬁdence interval
[13] [14].

In the literature,

there are two commonly used metrics
for computing the linearity of a model: the Spearman rank
coefﬁcient and the Pearson correlation coefﬁcient. The Pearson
correlation coefﬁcient is used whenever the sampled data has
a near-normal distribution. In other cases, the Spearman rank
is utilized to qualify the linearity between the
coefﬁcient
predicted and the actual subjective quality scores [14]. ITU-T
P.1401 additionally recommends to compute the signiﬁcance
of the difference between correlation coefﬁcients using the
Fisher-z transformation which is determined for each compar-
ison and evaluated against the 95% t-Student value.

C. Cross Validation

Quality model predictions are compared to the actual quality
scores to evaluate the performance of the models. However,
in the case of limited amount of training and test data set, K-
fold or “leave-one-out cross-validation” is used to report the
performance of the quality model.

In the K-fold approach, the available data is split into K
mutually exclusive subsets. In each step, K-1 subsets are used
to train the data and the single remaining subset is used to
measure the accuracy of the model. This procedure is repeated
K times using a different portion of the available data as
test data. Data splitting can be done randomly as well as by
stratifying the subsets. Stratiﬁcation process often improves
the representativeness of the selected subset. Depending on
the selected K subsets, the outcome of the model might vary.

In order to make the predictions more robust and independent
of the selected K subsets, it is recommended to repeat the
procedure several times and then take the average of these
runs for each metric. In this research, we have followed
Kohavi’s [15] recommendation of using stratiﬁed ten-fold
cross-validation for model selection.

In the leave-one-out cross-validation, K is equaled to the
number of data points in the dataset and in each iteration, one
data point is used to measure the accuracy of the model while
all other data points are used to train the model [15].

III. STANDARDIZED AUDIOVISUAL QUALITY PREDICTION
MODELS

Some of

the standardized methods have been created
through conducting competitions and selecting the models that
have achieved the highest prediction accuracy. In this section,
three audiovisual quality prediction models for streaming ser-
vices and video telephony applications are brieﬂy explained.
The ITU-T G.1071 [16] model is recommended for network
planning of audio and video streaming services. This recom-
mendation addresses higher resolution application areas like
IPTV and lower resolution application areas like mobile TV.
The application of the models is limited to QoE/QoS planning,
and quality benchmarking and monitoring is outside the scope
of this recommendation. The model takes network planning
assumptions such as video resolution, audio, and video codec
types and proﬁles, audio and video bitrates, packet-loss rate
and distribution as input. As for output, it provides the separate
predictions of audio, video and audiovisual quality deﬁned
on the ﬁve-point MOS scale. Use cases such as re-buffering
degradation of audio, and video, transcoding situations, the
effects of audio level, noise and delay, audiovisual streaming
with signiﬁcant rate adaptation are not covered by the model.
It has been tested for low-resolution areas with ITU-T P.1201.1
training and validation databases and has achieved 0.50 RMSE
and 0.83 Pearson correlation for audiovisual quality estima-
tion. For high-resolution areas, it was tested on the ITU-T
P.1201.2 training and validation databases and has achieved
0.51 RMSE and 0.87 Pearson correlation for audiovisual
quality estimation.

The ITU-T G.1070 [17] is a planning model recommended
for video telephony. In this model, overall multimedia quality
is computed from network and application parameters as well
as terminal equipment parameters. It proposes an algorithm
that estimates videophone quality for the quality of experience
and quality of service planners. It provides estimates of
multimedia quality that take interactivity into account to allow
planners to avoid under-engineering. The model contains three
main functions for assessing speech quality, video quality,
and overall multimedia quality. The speech quality estimation
function is similar to the E-model [18] and takes speech codec
type, packet loss rate, bit rate, and talker echo loudness rating
as input parameters. The video function is generated for head-
and-shoulders content and takes video format, display size
and codec type, packet loss rate, bit rate, key frame interval
and frame rate as input parameters. The multimedia function
integrates video alone and speech alone quality measures

4

by including the audiovisual asynchrony and the end-to-end
delay. The accuracy of the multimedia communication quality
assessment model in terms of Pearson correlation was 0.83
for QVGA and 0.91 for QQVGA resolution on the given
datasets. Application of the model is limited to QoE and QoS
planning and other applications such as quality benchmarking
and monitoring are not covered by the recommendation.

The ITU-T P.1201 [19] model is intended for estimating
the audiovisual quality of streaming services. It is a non-
intrusive packet-header information based model for the ser-
vice monitoring and benchmarking of User Datagram Protocol
(UDP) based streaming. The model supports both lower res-
olution applications such as mobile TV and higher resolution
applications such as Internet Protocol television (IPTV). It
uses the information retrieved from the packet header as well
as information provided out of band. It provides separate
predictions of audio, video, and audiovisual quality as output
in terms of the ﬁve-point MOS scale. It has been validated
for compression, packet loss and re-buffering impairments of
audio and video with different bitrates. Video content of differ-
ent spatiotemporal complexity with different keyframes, frame
rates, and video resolutions is selected. It was tested over 1166
samples at lower resolutions and tested over 3190 samples at
higher resolutions. RMSE and Pearson correlation [14] values
for audiovisual modeling were evaluated as 0.470 and 0.852,
respectively for lower resolution applications and 0.435 and
0.911, respectively for higher resolution applications. Detailed
performance ﬁgures are included in [19].

The ITU-T P.1201 model recommended for higher res-
olution applications [20] is a combination of the quality
impairment based models where the quality model is based on
the audio and video quality terms, and the impairment model
is based on the audio and video impairment factor terms linked
to the degree of compression and the transmission errors. The
overall model takes the following mathematical form:

QAV = ω1.QAV + ω2.IFAV

(1)

where ω1 and ω2 are constants, QAV denotes quality model

and IFAV denotes the impairment model.

Both quality and impairment models consist of complex
mathematical forms that can be found in [20]. The impairment
model requires the calculation of averaged number of bits
per pixel (BitPerPixel) and scene-complexity (SceneComp) pa-
rameters. The scene-complexity parameter is calculated using
video resolution, video frame rate, the number of scenes in the
video sequence and the number of GOPs in the scene [20].
The implementation of the calculation of these parameters is
given in the partial implementation of the ITU-T P.1201.2
audiovisual quality estimation tool in [21]. We have integrated
the BitPerPixel and SceneComp parameter evaluations from
this tool into the generation of the bitstream version of the
INRS audiovisual quality dataset.

ITU-T Rec. P.1201, G.1070, and G.1071 have achieved
high prediction accuracy against the respective test datasets
provided. However, these methods have by deﬁnition lim-
ited application areas and cover limited coding technologies.

5

Therefore, researchers have been attempting to improve these
models ever since [14] [22].

In standardized models, audio, video, and audiovisual pre-
dictions are performed by their respective functions whose
output is then forwarded to the audiovisual function to predict
overall audiovisual quality. An alternative approach is to
implement the audiovisual function in a way that would not
require intermediate predictions for audio and video quality
and still be able to capture all those complex interrelations
between inﬂuence factors. Machine learning based techniques
have been successfully applied in implementing these func-
tions [5] [23]. With machine learning techniques, we can
with less effort build prediction models that ﬁt speciﬁc use
cases and achieve high accuracy. Historically, Neural Networks
(NN) based approaches have been used extensively. In this
research,
in addition to the Deep Learning (DL) models,
we evaluate Decision Tree (DT) based ensemble methods
and Genetic Programming (GP) to implement the audiovisual
quality function to predict the perceived quality directly from
the parameters extracted from the application and network lay-
ers. The machine learning based models capture the complex
relationships between inﬂuence factors no matter if the dataset
is generated for IPTV services or video-telephony in mind.

IV. MACHINE LEARNING ALGORITHMS

class. An RF model collects all votes and then picks the class
with the highest number of votes. That behavior reduces the
high variance issues we have mentioned above. However, since
there is a tradeoff between bias and variance, RF classiﬁcation
introduces a small increase in bias while reducing variance.
Overall it still provides signiﬁcant improvements in terms of
classiﬁcation accuracy [25] [26].

Rather than searching for a single superior model, re-
searchers have noticed that combining many variations pro-
duce better results with a little extra effort. As we see for
the Random Forests, ensemble learning models generate many
classiﬁers and combine their results. This approach has been
gaining a lot of interest recently. Two well-known methods of
ensemble learning are boosting and bagging. In both methods,
the learning algorithm combines the predictions of multiple
base models [27] [28] [29].

When we compare the Decision Trees based models with
Bagging methods, each tree is constructed with a random vari-
ation of the training data set. The prediction is accomplished
by the simple majority vote to improve stability and accuracy.
This approach greatly reduces the variance as well as helping
to avoid over-ﬁtting issues, but it slightly increases the bias.
Although it is usually applied to Decision Trees, it can be used
with any type of method as well [27] [28].

A. Decision Tree Based Ensemble Methods

B. Symbolic Regression and Genetic Programming

Decision Trees (DT) are hierarchical data structures that can
be used for classiﬁcation and regression problems effectively
using the divide-and-conquer strategy. A Decision Tree is
composed of internal decision nodes where a test is applied
to a given input and branches to a classiﬁcation or regression
value by the leaf nodes. The estimation process originates at
the root node, traverses the decision nodes until a leaf node is
hit [24] [25].

The tree structure allows a fast discovery of nodes that
cover an input. In a binary tree, traversing each decision nodes
exclude half of the cases ideally, if the tree is balanced. Due to
fast convergence and ease of interpretation, they are sometimes
preferred over more accurate methods [24].

The estimation can be computed in a parametric model as
well as a nonparametric model. In parametric estimation, the
model is built over the whole input space from the training
data and a static tree structure is formed. Then the same
model is used to make estimations as test data arrives. In the
nonparametric approach, the tree structure is not static and,
during the learning process, it grows as branches and leaves
are added [24].

Decision Trees have low bias and very high variance which
bring over-ﬁtting issues when they grow very deep. To re-
duce variance, Decision Tree-based ensemble methods have
been developed. Random Forests (RF) are such an ensemble
learning method for classiﬁcation and regression that utilize
several Decision Trees models to obtain a better prediction
performance. During training, an array of Decision Trees
formed and a randomly chosen subset of training data is used
to train each tree. In a classiﬁcation problem, the inputs are
submitted to every tree in the RF in order to get a vote for a

Symbolic regression techniques aim to identify an un-
derlying mathematical expression that best ﬁts a dataset. It
consists of simultaneously ﬁnding both the form of equations
and their parameters. Symbolic Regression starts by forming
an initial expression by randomly combining mathematical
building blocks and then continue forming new equations by
recombining previous equations using Genetic Programming
(GP) [30].

GP is a computation technique that enables us to ﬁnd a
solution to a problem without knowing the form of the solution
in advance. It
is based on the evolution of a population
of computer programs where populations are transformed
stochastically into new populations generation by generation
[31].

GP discovers the performance of a program by running
it, measuring its outcome, and then comparing the result
to some objective. This comparison is called ﬁtness. In the
machine learning domain this would be equal to ﬁnding the
score, error or loss. In each generation, the programs that
do well are marked to breed and then are used to produce
new programs for the following generation. Crossover and
mutation are the main genetic operations for creating new
programs from existing ones. In the crossover, a child program
is generated by joining randomly chosen parts from two
selected programs from the previous generation. In a mutation,
however, a child program is created from a single parent from
the previous generation by randomly modifying a randomly
selected segment [31].

GP usually utilizes trees in order to manipulate the pro-
grams. In the tree, function calls are represented by nodes
and values associated with the functions are represented by

leaves [32]. GP programs combine multiple components in
more advanced forms as well [31].

Similar to the ensemble methods we have seen in the
previous section, initial GP populations are typically randomly
generated as well. These initial populations are categorized as
full, grow and ramped half-and-half depending on their depth
[31].

Both full and grow methods limit the maximum depth of the
initial individuals generated. They differ from each other with
respect to the size and the shape of the trees generated. In the
full method, trees are generated where all the leaves are at the
same depth. In the grow method, trees are generated in various
sizes and shapes. Ramped half-and-half method proposes a
combination of both full and grow methods. In this approach,
the full method is used to construct the half of the initial
population and the grow method is used to construct the other
half of the initial population [31].

GP selects the individuals probabilistically based on their
ﬁtness and then applies the genetic operations to them. This
process causes better individuals to have likely more child
programs than inferior individuals. Two common individual
selection methods in GP are tournament selection and ﬁtness
proportionate selection [31].

C. Deep Learning

Deep Learning dates back to the 1940s and has been re-
branded many times, reﬂecting the inﬂuence of different re-
searchers and newer perspectives. it has only recently become
Deep Learning [33].

A typical example of a Deep Learning model

is the
feedforward Deep Network or Multi-Layer perceptron (MLP)
[33]. A Multi-Layer Perceptron makes no assumptions about
relationships among variables. In general, these models use
three main layers: one input neurons layer that represents the
input vector, one or more intermediator hidden layers and
output neurons that represent the output vector. Nodes in each
layer are linked to all nodes in adjoining layers. These links
are used to forward signals from one neuron to the other [25]
[34].

Nonlinearities are represented in the network by the activa-
tion and transfer functions in each node. Each node handles a
basic computation while its links enable an overall computa-
tion. The overall behavior of a Neural network is inﬂuenced
by the number of layers, the number of neurons in each layer,
how the neurons are linked and the weights associated with
each link. The weight associated with each link deﬁnes how a
ﬁrst neuron inﬂuences the second neuron. During the training
period, the weights are revised. With that approach, hidden
layers capture the complexities in the data while the weights
are adjusted in each iteration in order to obtain the lowest
error in the output. The learning algorithm used most often is
gradient descent backpropagation [25] [33] [34].

In the back propagation approach, during the forward phase,
the input signal is propagated through the network layer by
layer. In the output node, the error signal is computed and then
this error signal is sent to the network in backward direction
which is called the backward phase. During this backward

6

TABLE I
MEDIA COMPRESSION PARAMETERS AND NETWORK IMPAIRMENTS.

FPS
QP
NR
PLR (%)

Video
10, 15, 20, 25
23, 27, 31, 35
0, 999
0, 0.1, 0.5, 1, 5

Audio
Mono, 16kHz, 24 kbps
Mono, 16kHz, 24 kbps
Mono, 16kHz, 24 kbps
0, 0.1, 0.5, 1, 5

phase, network parameters are modiﬁed in order to minimize
the signal error [35]. Deep Learning methods can be used in
regression problems as well as clustering and classiﬁcation
applications.

In Section VI we will look into the details of these algo-
rithms once again but this time from an implementation point
of view and mention their speciﬁc conﬁgurations targeting
regression usage. However, before that, we need to look at
the INRS audiovisual quality dataset to see which information
is available to us when attempting to build perceived quality
estimation models.

V. THE INRS AUDIOVISUAL QUALITY DATASET

The Qualinet Multimedia Databases set v5.5 [36] provides
a list of some publicly available audiovisual databases such as
University of Plymouth [37], TUM 1080p50 [38], VQEG [39],
Made for Mobile [40] and VTT [5] datasets. Additionally, the
TVM and P.NAMS training and validation datasets [14] have
led to ITU-T standards P.1201 [19] and G.1071 [16].

Existing audiovisual datasets are invaluable for building
perceived quality estimation models for one-way streaming
based services. However, some of these datasets have some
limitations in terms of real-time communication use cases,
mainly because they have been generated with a different
scope in mind. The University of Plymouth dataset is interest-
ing with respect to real-time communications; however, video
frame rates and the video resolution selected no longer reﬂect
contemporary applications. In this research, we speciﬁcally
target one-to-one real-time communications while exploring
the encoding conﬁgurations -H.264 video codec, AMR-WB
audio codec for speech signals, range of video frame rate,
quantization and noise reduction parameters- and network
impairments -range of packet loss rate for video and audio
streams- often seen in contemporary video-telephony applica-
tions.

The INRS audiovisual quality dataset has been designed to
span the most important compression and network distortion
inﬂuence factors. These factors are typically video frame rate,
quantization and ﬁlters, and network packet loss rate. We have
chosen the range of these parameters for the H.264 video
encoding as follows: 0, 0.1, 0.5, 1 and 5% for network packet
loss rate (PLR) in both video and audio streams, 10, 15, 20 and
25 FPS for video frame rate, 23, 27, 31 and 35 for quantization
parameter (QP), and 0 and 999 for the noise reduction (NR)
ﬁlter (Table I).

The original 42 seconds long audiovisual raw source was
encoded with the H.264/AVC video codec and the AMR-
WB audio codec and then multiplexed into a 3gp container
with the GStreamer open source multimedia framework [41].

Video streams were encoded with the constrained-baseline
proﬁle at a 720p progressive video resolution. Audio encoding
settings were kept the same -mono channel, 16 kHz sample
rate, and 24Kbps bit rate- for all audiovisual sequences. The
multimedia framework, GStreamer, uses only the jitter buffer
mechanism to smooth out the packet ﬂow and has no forward
error correction strategy. Hence in our dataset we assume that
the packet loss ﬁgures reported are the residual packet losses.
An emulated network was used to transmit and record the
audiovisual sequences. The audio and videos streams were
captured with our GStreamer based custom developed software
which enabled us to gather detailed RTCP statistics and report
the exact network packet loss values for video and audio
streams separately. This software is freely available to public
access [42] and detailed information on the technical imple-
mentation of this testbed and how each of these conﬁguration
settings is implemented is presented in [43]. The Netem net-
work emulator was deployed to produce network packet loss
conditions. Network packet loss was only activated after the
ﬁrst second of the audio and video transmission. This allowed
us to be sure that communications were initiated, especially for
the video stream. get more realistic results. A custom video
player was developed to collect the subjective scores [44].
Thirty observers have rated the overall audiovisual quality on
the Absolute Category Rating (ACR) 5-level quality scale in a
controlled environment. It is important to note that the required
number of observers as well as post-processing of scores
submitted by each observer used in this research are based
on the latest ITU-T Recommendation P.913 [45]. However,
evolution of the contribution of subjective assessment factors
such as subjective bias, subject inaccuracy, stimulus scoring,
personal and cultural traits on perception and consequently
how subjective experiments should be conducted is a matter
of ongoing research.

From our earlier work on the parametric models [46], we
know that the change in the network packet loss rate has
dramatic effects on the perceived quality. Moreover, video
frame rate and quantization parameter have also a moderate
inﬂuence on MOS value and model behavior. However, in
the values of these
the parametric version of the dataset,
parameters are reported globally, for each ﬁle. We would
expect that incorporating the inﬂuence of these parameters per
video I and P frames, and per audio frames would improve
the accuracy of the machine learning-based perceived quality
prediction models. In the rest of this section, we will discuss
the bitstream version of the INRS audiovisual quality dataset
that we have created in order to gather packet loss rate and
bit rate changes on the individual or group of frames.

In light of these goals, we have used the FFmpeg multimedia
system [47] to obtain the bit rates for audio and video streams,
number of frames, and the duration of the streams.

Using the partial implementation of the ITU-T P.1201.2
audiovisual quality estimation tool at [21], we have computed
the BitPerPixel and SceneComp parameters for video ﬁles in
the INRS audiovisual quality dataset.

Additionally, we have reported the size and the loss percent-
age during the transmission of video I-frames individually as
there is only one I frame every 10 seconds in the reference

7

TABLE II
BITSTREAM DATASET FEATURES.

Noise Reduction
Video Packet Loss Rate
Video Start PTS
Video Bit Rate
Audio Duration TS
Audio Bit Rate
Video Bits (Pixel*Frame)
Content Complexity
pFrame Count
iFrame Count Diff
aFrame Count Diff

Video Frame Rate
Quantization Parameter
Audio Packet Loss Rate
Video Duration TS
Video NB Frames
Audio Duration
Audio NB Frames
iFrames Per Scene
iFrame Count
aFrame Count
pFrame Count Diff
iFrame0 Size ... iFrame4 Size
iFrame0 Size Diff ... iFrame4 Size Diff
S0 pFrame Count Diff ... S30 pFrame Count Diff
S0 pFrame Mean Diff ... S30 pFrame Mean Diff
S0 aFrame Count Diff ... S30 aFrame Count Diff

videos. We have however taken a different approach for
the audio frames and video P frames. Instead of reporting
each individual frame, we have grouped these frames on
per second basis and reported the loss percentage in the
count of audio frames and the loss percentage in the count
and the average size of video P frames. During our initial
experiments with machine learning based modeling, we have
realized that reporting values for the ﬁrst three video I-frame
periods (i.e. the ﬁrst 30 seconds) is sufﬁcient for improving
the model performance and the two remaining video I-frame
periods would just make the model unnecessarily complex
without any signiﬁcant improvement in the model accuracy.
The signiﬁcance of the ﬁrst 30 seconds is also in line with the
analysis in [48] that the observers did not watch the videos
until to the end during the subjective assessment.

The newly generated bitstream dataset contains base param-
eters (5 features) from the Table I and an additional 120 new
features. The complete list of all features is given in the Table
II and explanations regarding the meaning of their names will
be given later.

The models that use the bitstream version of the INRS au-
diovisual quality dataset would qualify as Reduced-Reference
quality models since we have used the limited amount of
information from original video ﬁles when calculating the
effect of the packet loss on the audio frames and video I and P
frames. The bitstream version of the INRS audiovisual quality
dataset is publicly available at [49]. More detailed information
on the INRS audiovisual quality dataset regarding the selected
video sequence, test methodology and comparison to the other
publicly available datasets is given in [46] and [48].

As recent developments show [5] [11] [14] [22] [23]
[37], No-Reference and Reduced-Reference parametric models
achieve high accuracy in estimating perceived quality with
limited resources. In the next Section, we try to build and
analyze similar models by estimating the audiovisual quality
based on the INRS audiovisual quality dataset directly using
Random Forest, Bagging, Genetic Programming and Deep
Learning machine learning methods.

VI. REDUCED-REFERENCE BITSTREAM AUDIOVISUAL
QUALITY PREDICTION MODELS

In earlier research [46], we have used the INRS audio-
visual quality dataset for building several machine learning
based perceived quality estimation models. We have built
No-Reference parametric perceived quality estimation models
based on the Random Forests, Bagging, Deep Learning and
Genetic Programming methods. We have observed that all
of the mentioned methods have achieved high accuracy in
terms of RMSE and Pearson correlation. Random Forests
and Bagging based models have shown a small edge over
Deep Learning with respect to the accuracy they provide on
the INRS dataset. Genetic Programming based models have
fallen behind even though their accuracy was impressive as
well. In this paper, we present the reduced-reference bitstream
audiovisual quality prediction models developed based on the
algorithms used in our previous work.

Random Forests and Bagging ensemble models are based
on decision trees. Genetic Programming models via Sym-
bolic Regression generate models composed of mathematical
equations. Deep Learning models are based on the multiple
layers of Neural Networks. In Section IV, we have discussed
in details these different models’ structures as well as the
theoretical foundations of these algorithms.

A. Feature Selection

In order to empirically test the increased number of the
features selected, we have used the feature importance infor-
mation provided by the Random Forests based algorithm.

We have run leave-one-out cross-validation for every data-
point in the bitstream dataset using the Random Forests based
algorithm and have obtained the feature importance from each
model. Afterwards, we have computed the overall feature
importance by averaging the data we have collected from
individual models. These averaged top 25 feature importance
values are depicted in Figure 2. Here, many parameter names
are intuitive and self explanatory. However, some other pa-
rameters might require additional discussion.
Some of these parameters are given below.
• pFrameCount: Total count of P-frames in video stream.
loss rate in the count of P-
• pFrameCountDiff: Total

frames.

• S10pFrameMeanDiff: Loss rate in the average size of the

P-frames for the 10th second.

• S2pFrameCountDiff: Loss rate in the count of P-frames

for the 2nd second.

• aFrameCount: Total count of audio frames.
• aFrameCountDiff: Total loss rate in the count of audio

frames.

• S1aFrameCountDiff: Loss rate in the count of audio

frames for the 1st second.

Video packet loss rate inﬂuences the model performance
more than other features by a great margin followed by the
difference in the video P frame count difference. Additionally,
we observe the video and audio bit rate, audio and video P
frame count, audio packet loss rate, the difference in the audio
frame count and BitPerPixel in the top 25 most inﬂuential

8

Fig. 2. Feature importance for the Random Forests model.

features based on the Random Forests feature importance. The
rest of list consists of the effects of the packet loss rate on
the individual per-second basis measurements. The order of
seconds in the ﬁgure points to another quite important ﬁnding:
Almost all most inﬂuential one second periods come right after
the video I-frame transmission. This reﬂects the cumulative
effect of packet loss and the importance of packet loss at
the beginning of a period vs. at the middle or at the end of
periods between two video I-frames. The appearance of the 9th
seconds seems to contradict this conclusion. However, when
we have carefully analyzed the bitstream dataset, for high
packet loss rates, we have observed that for the transmitted
video, some video I and P frames that are supposed to be in
the 10th second period appear earlier in the 9th second period
due to the way GStreamer framework handles high packet loss
rates.

Another important ﬁnding is the absence of certain param-
eters in the 25 most inﬂuential features list. Quantization,
video frame rate, and noise reduction have less inﬂuence on
model behavior compared to other features. This behavior is
due to the correlation of features: Random Forests feature
selection prefers variables with more classes and when one
of the correlated features is used, the importance of the other
correlated features is reduced [50]. We also observe the lack
of the Scene-Complexity feature that we have computed in
previous section. This behavior is easily explained by the fact
that the INRS audiovisual quality dataset includes only one
type of content.

These ﬁndings point to the following conclusions:

• Packet loss rate is by a great margin the most dominant
factor in modeling the perceived quality estimation.

TABLE III
KERAS DEEP LEARNING CONFIGURATIONS.

Variable
Model Type
Neural network Layers
Activation Function
Initialization Function
Optimizer
Loss Function
Batch Size
Epoch Size

Value
Sequential
Dense
Tanh and Softplus
Uniform
Adadelta
MSE
4
440

• The effect of the packet loss is accumulated until the next
video I frame and the packet loss at the beginning of the
period is more important than at the middle or at the end
of a period.

We have reorganized the dataset columns based on the ﬁnd-
ings from leave-one-out cross-validation by placing the most
inﬂuential feature (VideoPacketLossRate) on the ﬁrst column
followed by the second most inﬂuential feature (pFrameCount-
Diff) in the second column and the rest of the columns sorted
following the same logic. Sorting the dataset in this way
has simpliﬁed our eventual Machine Learning models’ source
codes that we introduce in the following section.

B. Decision Trees Based Models

We have used the Python scikit-learn’s implementation of
Random Forests (RF) and Bagging (BG). We have generated
Random Forest and Bagging models that used the bitstream
dataset with 125 features.

Initially, we have tuned our Random Forests and Bagging
based model parameters using the 5 base parameters listed
in Table I. Please note that packet loss rates are reported
separately for audio and video streams. For the Bagging
models, we have set the tree size to 166 and max features
to 1.0 and max sample to 0.4 when looking for the best split
and no limits on the tree depth. These parameters were 166
for tree size, 0.4 for max features and 0.8 for max sample to
0.8 for all Random Forests based models.

To compare the effectiveness of models, we have generated
125 models using the Random Forest and 125 models using the
Bagging algorithm where the 1st model used only the most
inﬂuential feature, the 2nd model used two most inﬂuential
features... and the 125th model used all of the features in the
bitstream dataset. We have run each model 10 times using the
10-fold cross-validation and have reported statistical metrics
averaged over these 10 runs.

C. Deep Learning Based Models

We have generated the Deep Learning (DL) models using
the Keras Deep Learning library that run on top of the
Theano library. Similar to Decision Trees based models, we
have initially tuned the DL model parameters using the 5
features listed in Table I. Eventually, we have obtained the DL
model conﬁguration listed in Table III using only one hidden
layer and have generated 125 models based on the increased
number of features. Note that eventhough our ﬁnal DL model

9

TABLE IV
GPLEARN GENETIC PROGRAMMING CONFIGURATIONS.

Variable
Model Type
Population Size
Generations
Tournament Size
Stopping Criteria
Init Method
Transformer
Comparison
Trigonometric
Metric
Parsimony Coefﬁcient
P Crossover
P Subtree Mutation
P Hoist Mutation
P Point Mutation
P Point Replace
Max Samples
Jobs
Random State

Value
Symbolic Regression
5000
200
20
0.0
full
True
True
False
RMSE
0.001
0.9
0.01
0.01
0.01
0.05
0.8
1
None

conﬁguration does not consist of multiple hidden layers, we
kept the naming as is as multiple hidden layers did not provide
a superior performance. For the DL models, we have run each
model 10 times using the 4-fold cross validation and have
reported statistical metrics averaged over these 10 runs.

D. Genetic Programming Based Models

We have used the gplearn library to implement genetic Pro-
gramming (GP) based models. The gplearn library is similar to
scikit-learn ﬁt/predict API and works with the existing scikit-
learn pipeline. We have used the SymbolicRegressor with the
conﬁgurations listed in the Table IV. Similar to the DL models,
we have run each model 10 times using the 4-Fold cross
validation.

E. Results

Figure 3 depicts the Pearson correlation coefﬁcient, RMSE
and RMSE∗ values obtained for each algorithm. The values for
125 models are shown on the left side while a closer look at
the metrics for models generated up to the top 25 features
is shown on the right side. Table V shows the maximum
Pearson correlation, minimum RMSE and RMSE∗ values and
the number of features used for each of these models with
each algorithm.

Random Forests and Bagging based models perform best
using around the top 20 features while Deep Learning and
Genetic Programming based models reach to their maximum
with the 7 top features in terms of Pearson Correlation
coefﬁcient. Decision Trees based models more or less perform
similarly with increased number of features. However, both
Deep Learning and Genetic Programming based models suffer
signiﬁcantly from increased number of features in terms of
all metrics we have used. Overall, looking at the Pearson
Correlation and RMSE ﬁgures, we can conclude that Decision
Trees based models make more accurate estimations of MOS
values followed by Genetic Programming and then Deep
Learning models.

TABLE V
BEST PERFORMING MODELS FOR RF, BG, DL AND GP ALGORITHMS.

Algorithm
Random Forests
Bagging
Deep Learning
Genetic Programming

Max Pearson Cor.
0.9328
0.9332
0.9130
0.8928

Features Min RMSE
18
20
7
7

0.3514
0.3547
0.3970
0.4364

Features Min RMSE∗
18
11
7
7

0.1478
0.1565
0.1711
0.1787

Features
15
8
16
7

10

Fig. 3. Pearson Correlation, RMSE and RMSE∗ for RF, BG, DL and GP Models.

RMSE∗ graphs show the difference between each algorithm
more clearly. Although all models perform very similarly with
the top 2 features, increasing the number of the features sets
them apart. Random Forests based models overall perform best
followed by the Bagging, Deep Learning and then Genetic
Programming models respectively.

In light of this information, let us revisit Figure 2. Both

Deep Learning and Genetic Programming based models per-
form best with the top 7 features. This is in line with our
expectations that Deep Learning based models do not perform
well with an increased number of features and require prior
feature engineering. Decision Trees based models are capable
of integrating per-second basis reduced-reference parameters
and achieve to their highest potential with about the top 20

features.

Since we have shufﬂed the order of the rows in the dataset
the results that we
each time before running the models,
have obtained had different values depending on the training
and tests sets selected and algorithm utilized. To reduce the
variation in metrics, we have run each model consecutively
10 times (with the entire dataset shufﬂed before each run)
and have taken the average of the measured statistical metrics
in these 10 runs for every reported performance indicators
(Figure 3). Random Forest and Bagging based models have
not only achieved the highest accuracy in terms of Pearson
correlation and RMSE but are also more precise and have less
variation in measured metrics.

Another important and related dimension of the modeling
is ﬁnding if two performance metrics are statistically signif-
icantly different. In Section II-B we have seen that ITU-T
P.1401 [13] recommends computing the signiﬁcance of the
difference between correlation coefﬁcients using the Fisher-z
transformation. In order to achieve that, we have conducted
two statistical test for each individual model. First, for each
algorithm, we have found the best performing model in terms
of Pearson correlation coefﬁcient and then we have compared
the other 124 models based on the same algorithm with
that selected best performing model. Second, we have found
that the globally best performing model in terms of Pearson
correlation is the Bagging model using the top 20 features,
and we have compared it with the all of other models and
reported the P-values [51]. These computations are depicted in
the Figure 4 where the graphs on the left show the evolution
of the P-value with increasing number of features for each
algorithm while graphs on the right focus on the ﬁrst 25
features. The signiﬁcance level α for a given hypothesis test
is a value for which a P-value less than or equal to α is
considered statistically signiﬁcant [51]. Typical values for α
are 0.1, 0.05 and 0.01. In the ﬁgures, we have shown the
standard cutoff value of P at 0.05. When computing these
values, we have used the sample size as 160 even though
the Pearson Correlation coefﬁcients values reported are the
average of 10 runs. In general, the difference between two
correlation coefﬁcient tend to be statistically more signiﬁcant
with the increased sample size. Therefore, the results shown
in the Figure 4 should be considered with the given sample
size in mind.

In our experiments, we have observed that Decision Trees
based models perform better in accuracy and precision and
also required less effort to generate. Random Forests algo-
rithms also provide feature importance ranking which was
invaluable for feature selection.

VII. DISCUSSION
The standardized models for IPTV [16] [19] and video
telephony [17] aim to provide a model for as many use cases
as possible. They typically utilize a very small subset of the
features available such as packet loss percentage, frame rate
and compression rate, and content complexity for bitstream
models. In our earlier work [46] we have discussed these
standardized models in details. In this research, we have gen-
erated audiovisual perceived quality estimation models using

11

both the traditional small set of features used in standardized
models and the correlated data that we have extracted from
the videos included in the publicly available dataset. One
of the main difference between these standard models and
the approach we have taken here is taking advantage of the
correlated data. Based on the results that we have obtained
in this research as well as results we have obtained in our
earlier work, we know that extracting additional correlated data
from the dataset helps us to generate more accurate models.
However, this correlated data depends on various factors such
as the audio and video codec used, the tool used to extract the
correlated data and number of features. For similar research,
we recommend following the approach we have taken here
rather than pinpointing speciﬁc parameters. In our previous
work [46], we have also tested the Random Forest based
models on the University of Plymouth [37], TUM 1080p50
[38] and VQEG datasets [39] and achieved the comparable
results with the original studies on these datasets.

In this research, we have chosen media and channel encod-
ing parameters that reﬂects contemporary real- time conﬁgura-
tions for video frame rate, video quantization, noise reduction
parameters and network packet loss rate. Therefore, the models
we have developed in our research are comparable to the ITU-
T G.1070 [17], G.1071 [16] and P.1201 [19] standard models.
Running ﬁrst two models on our dataset was not possible as
these models have limited coverage and do not support the
AMR-WB audio codec combined with H.264 video codec at
720p video resolution. The ITU-T G.1071 model supports
AMR codec only in low resolutions up to HVGA (480 x
320) resolution. The ITU-T G.1070 model provides model
constants, m, only for 2.1 and 4.2-inch video display sizes
and also does not provide speech coding-distortion and packet-
loss-robustness constants for AMR codec. Comparison with
the ITU-T P.1201 model is not given as it does not support
the AMR-WB codec.

VIII. CONCLUSION

We have developed bitstream perceived quality estimation
models based on the Random Forests, Bagging, Deep Learning
and Genetic Programming methods using the bitstream version
of the INRS audiovisual quality dataset which includes media
compression and network degradations typically seen in real-
time communications.

During the model generation, instead of selecting a speciﬁc
subset of features, we have taken an empirical approach and
have generated models varying from very simple to the most
complex depending on the number of features used from the
quality dataset to ﬁnd out how each algorithm perform with
the correlated data.

The bitstream version of the INRS audiovisual quality
dataset consists of 125 features. In order to rank the features,
we have initially run leave-one-out cross-validation for every
data-point in the bitstream dataset using the Random Forests
based algorithm and have obtained the feature importance
from each model. Afterward, we have computed the overall
feature importance by averaging the data we have collected
from individual models. Then, using this feature importance

12

Fig. 4. Statistical Signiﬁcance Test for RF, BG, DL and GP Models. The graphs on the left show the evolution of the P-value with increasing number of
features for each algorithm and the graphs on the right focus on the ﬁrst 25 features.

information, we have generated 125 models for each algorithm
where the 1st model used only the most inﬂuential feature, the
2nd model used the two most inﬂuential features... and the
125th model used all of the features in the bitstream dataset.

Random Forests and Bagging based models perform best
using around the top 20 features while Deep Learning and
Genetic Programming based models reach to their maximum

with the 7 top features in terms of RMSE values and Pearson
Correlation coefﬁcient. We have additionally computed the
RMSE∗ values and have computed the signiﬁcance of the
difference between correlation coefﬁcients using the Fisher-z
transformation. RMSE∗ values showed that, although all mod-
els perform very similarly with the top 2 features, increasing
the number of the features makes a difference. Random Forests

based models overall perform best followed by the Bagging,
Deep Learning and then Genetic Programming models respec-
tively. It is also important to note that, generating decision trees
based models require signiﬁcantly less effort and less time
due to a low number of conﬁguration parameters they require.
On the other hand, Genetic Programming models required the
most effort to tune, the most computing resources to deploy
and the longest training time.

Overall we conclude that computing the bitstream informa-
tion is worth the effort it takes to generate and helps to build
more accurate models for real-time communications. However,
it is useful only for the deployment of the right algorithms
with the carefully selected subset of the features. Our studies
have proved that Decision Trees based algorithms are well
suited to the No-Reference parametric models as well as to
the Reduced-Reference bitstream models.

REFERENCES

[1] A. Perkis, “Electronic imaging & signal processing quality of experience

(QoE) in multimedia applications,” 2016.

[2] J. P. Hansen, S. Hissam et al., “Assessing QoS trade-offs for real-
time video,” in World of Wireless, Mobile and Multimedia Networks
(WoWMoM), 2013 IEEE 14th International Symposium and Workshops
on a.

IEEE, 2013.

[3] A. Bordetsky, K. Brown, and L. Christianson, “A feedback control
model for managing quality of service in multimedia communications,”
Telecommunication Systems, vol. 17, no. 3, 2001.

[4] S. Aroussi and A. Mellouk, “Survey on machine learning-based qoe-qos
correlation models,” in Computing, Management and Telecommunica-
tions (ComManTel), 2014 International Conference on.

IEEE, 2014.

[5] T. Maki, D. Kukolj, D. Dordevic, and M. Varela, “A reduced-reference
parametric model for audiovisual quality of iptv services,” in Quality of
Multimedia Experience (QoMEX), 2013 Fifth International Workshop
on.

IEEE, 2013.

[6] P. Le Callet, S. M¨oller, A. Perkis et al., “Qualinet white paper on
deﬁnitions of quality of experience,” European Network on Quality of
Experience in Multimedia Systems and Services (COST Action IC 1003),
2012.

[7] O. B. Maia, H. C. Yehia, and L. de Errico, “A concise review of
the quality of experience assessment for video streaming,” Computer
Communications, 2014.

[8] P. Paudyal, F. Battisti, and M. Carli, “A study on the effects of quality
of service parameters on perceived video quality,” in Fifth European
workshop on visual information processing (EUVIP), 2014.

[9] W. Li, J. Wang, C. Xing, Z. Fei, and J. Kuang, “A real-time QoE
methodology for AMR codec voice in mobile network,” Science China
Information Sciences, vol. 57, no. 4, 2014.

[10] H. Rifai, S. Mohammed, and A. Mellouk, “A brief synthesis of QoS-
QoE methodologies,” in Programming and Systems (ISPS), 2011 10th
International Symposium on.

IEEE, 2011.

[11] A. Raake, J. Gustafsson, S. Argyropoulos, M. Garcia, D. Lindegren,
G. Heikkila, M. Pettersson, P. List, B. Feiten et al., “Ip-based mobile and
ﬁxed network audiovisual media services,” Signal Processing Magazine,
IEEE, vol. 28, no. 6, 2011.

[12] R. Dubin, A. Dvir, O. Pele, and O. Hadar, “Real time video quality
representation classiﬁcation of encrypted http adaptive video streaming-
the case of safari,” arXiv preprint arXiv:1602.00489, 2016.

[13] ITU-T P.1401, “ITU-T RECOMMENDATION P.1401: Methods, metrics
and procedures for statistical evaluation, qualiﬁcation and comparison
of objective quality prediction models,” 2012.

[14] M.-N. Garcia, Parametric Packet-based Audiovisual Quality Model for

IPTV Services. Springer, 2014.

[15] R. Kohavi et al., “A study of cross-validation and bootstrap for accuracy

estimation and model selection,” in Ijcai, vol. 14, no. 2, 1995.

[16] ITU-T G.1071, “ITU-T RECOMMENDATION G.1071: Opinion model
for network planning of video and audio streaming applications,” 2015.
[17] ITU-T G.1070, “ITU-T RECOMMENDATION G.1070: Opinion model

for video-telephony applications,” 2012.

13

[19] ITU-T P.1201, “ITU-T RECOMMENDATION P.1201: Parametric non-
intrusive assessment of audiovisual media streaming quality.” 2012.
[20] ITU-T P.1201.2, “ITU-T RECOMMENDATION P.1201.2: Parametric
non-intrusive assessment of audiovisual media streaming quality - higher
resolution application area.” 2012.
[21] Deutsche Telekom AG: T-LABS,

“ITU-T P.1201.2 audiovisual
[Online]. Available: http:

quality estimation tool,” Online, 2016.
//vqegstl.ugent.be/?q=P.1201.2

[22] B. Belmudez, Audiovisual Quality Assessment and Prediction for

Videotelephony. Springer, 2015.

[23] P. Gastaldo, R. Zunino, and J. Redi, “Supporting visual quality assess-
ment with machine learning,” EURASIP Journal on Image and Video
Processing, vol. 2013, no. 1, 2013.

[24] E. Alpaydin, Introduction to machine learning. MIT press, 2014.
[25] M. S. Mushtaq, B. Augustin, and A. Mellouk, “Empirical study based
on machine learning approach to assess the qos/qoe correlation,” in
Networks and Optical Communications (NOC), 2012 17th European
Conference on.

IEEE, 2012.

[26] L. Breiman, “Random forests,” Machine learning, vol. 45, no. 1, 2001.
[27] P. Domingos, “A few useful things to know about machine learning,”

Communications of the ACM, vol. 55, no. 10, 2012.

[28] A. Liaw and M. Wiener, “Classiﬁcation and regression by randomforest,”

R news, vol. 2, no. 3, 2002.

[29] N. C. Oza, “Online bagging and boosting,” in Systems, man and
IEEE,

cybernetics, 2005 IEEE international conference on, vol. 3.
2005.

[30] M. Schmidt and H. Lipson, “Symbolic regression of implicit equations,”

in Genetic Programming Theory and Practice VII. Springer, 2010.

[31] R. Poli, W. B. Langdon, N. F. McPhee, and J. R. Koza, A ﬁeld guide to

genetic programming. Lulu.com, 2008.

[32] J. R. Koza, Genetic programming: on the programming of computers by

means of natural selection. MIT press, 1992, vol. 1.

[33] Y. Bengio, I. J. Goodfellow, and A. Courville, “Deep learning,” An MIT

Press book in preparation, 2015.

[34] A. C. Comrie, “Comparing neural networks and regression models for
ozone forecasting,” Journal of the Air & Waste Management Association,
vol. 47, no. 6, 1997.

[35] H. Du, C. Guo, Y. Liu, and Y. Liu, “Research on relationship between
qoe and qos based on bp neural network,” in Network Infrastructure and
Digital Content, 2009. IC-NIDC 2009. IEEE International Conference
on.

IEEE, 2009.

[36] K. Fliegel, “Qualinet multimedia databases v5. 5,” 2014.
[37] M. Goudarzi, L. Sun, and E. Ifeachor, “Audiovisual quality estimation
for video calls in wireless applications,” in Global Telecommunications
Conference (GLOBECOM 2010), 2010 IEEE.

IEEE, 2010.

[38] C. Keimel, A. Redl, and K. Diepold, “The tum high deﬁnition video
datasets,” in Quality of Multimedia Experience (QoMEX), 2012 Fourth
International Workshop on.
IEEE, 2012.

[39] M. Pinson, L. Janowski, R. P´epion, Q. Huynh-Thu, C. Schmidmer,
P. Corriveau, A. Younkin, P. L. Callet, M. Barkowsky, and W. Ingram,
“The inﬂuence of subjects and environment on audiovisual subjective
tests: An international study,” Selected Topics in Signal Processing, IEEE
Journal of, vol. 6, no. 6, 2012.

[40] W. Robitza, Y. Pitrey, M. Nezveda, S. Buchinger, and H. Hlavacs, “Made
for mobile: a video database designed for mobile television,” in Sixth
International Workshop on Video Processing and Quality Metrics for
Consumer Electronics (VPQM), 2012.

[41] GStreamer Team, “Gstreamer: open source multimedia framework,”
Online, 2016. [Online]. Available: https://gstreamer.freedesktop.org/

[42] E. Demirbilek,
line, 2016.
GStreamerMultimediaQualityTestbed

“GStreamer multimedia

testbed,” On-
[Online]. Available: https://github.com/edipdemirbilek/

quality

[43] E. Demirbilek and J.-C. Gr´egoire, “Multimedia communication quality

assessment testbeds,” arXiv preprint arXiv:1609.06612, 2016.

[44] E. Demirbilek,
line, 2016.
SubjectiveAssesmentVideoPlayer

“Subjective

player,” On-
[Online]. Available: https://github.com/edipdemirbilek/

assesment

video

[45] ITU-T P.913, “ITU-T RECOMMENDATION P.913: Methods for the
subjective assessment of video quality, audio quality and audiovisual
quality of internet video and distribution quality television in any
environment,” 2016.

[46] E. Demirbilek and J.-C. Gr´egoire, “Machine learning–based parametric
audiovisual quality prediction models for real-time communications,”
ACM Transactions on Multimedia Computing, Communications, and
Applications (TOMM), vol. 13, no. 2, 2017.

[18] ITU-T G.107, “ITU-T RECOMMENDATION G.107: The e model, a

[47] F. Bellard, “FFmpeg multimedia system,” Online, 2005.

[Online].

computational model for use in transmission planning,” 2003.

Available: https://www.ffmpeg.org/about.html

[48] E. Demirbilek and J.-C. Gr´egoire, “Inrs audiovisual quality dataset,” in

ACM Multimedia Conference 2016, 2016.

14

[49] E. Demirbilek,

dataset,”
Online, 2016. [Online]. Available: https://github.com/edipdemirbilek/
TheINRSAudiovisualQualityDataset

audiovisual

quality

INRS

“The

[50] C. Strobl, A.-L. Boulesteix, A. Zeileis, and T. Hothorn, “Bias in
random forest variable importance measures: Illustrations, sources and
a solution,” BMC bioinformatics, vol. 8, no. 1, 2007.

[51] T. Sellke, M. Bayarri, and J. O. Berger, “Calibration of ρ values for
testing precise null hypotheses,” The American Statistician, vol. 55,
no. 1, 2001.

