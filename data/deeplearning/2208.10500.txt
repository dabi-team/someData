2
2
0
2

g
u
A
2
2

]

G
L
.
s
c
[

1
v
0
0
5
0
1
.
8
0
2
2
:
v
i
X
r
a

Towards an AI-based Early Warning System for Bridge Scour

Negin Yousefpour1 and Oscar Correa2

1Department of Infrastructure Engineering, The University of Melbourne. Email:
negin.yousefpour@unimelb.edu.au
2School of Computing and Information Systems, The University of Melbourne. Email:
oscar.correa@unimelb.edu.au

ABSTRACT

Scour is the number one cause of bridge failure in many parts of the world. Consid-
ering the lack of reliability in existing empirical equations for scour depth estimation
and the complexity and uncertainty of scour as a physical phenomenon, it is essential to
develop more reliable solutions for scour risk assessment. This study introduces a novel
AI approach for early forecast of scour based on real-time monitoring data obtained from
sonar and stage sensors installed at bridge piers. Long-short Term Memory networks
(LSTMs), a prominent Deep Learning algorithm successfully used for time-series fore-
casting in other Ô¨Åelds, were developed and trained using river stage and bed elevation
readings for more than 11 years, obtained from Alaska scour monitoring program. The
capability of the AI models in scour prediction is shown for three case-study bridges.
Results show that LSTMs can capture the temporal and seasonal patterns of both Ô¨Çow
and river bed variations around bridge piers, through cycles of scour and Ô¨Ålling and
can provide reasonable predictions of upcoming scour depth as early as seven days in
advance. It is expected that the proposed solution can be implemented by transporta-
tion authorities for development of emerging AI-based early warning systems, enabling
superior bridge scour management.

INTRODUCTION

Scour at bridge piers has been a global challenge. It is the number one cause of
bridge failure in many countries. With more than 26,000 scour critical bridges in the
US, scour accounts for around 60% of bridge failures (Wardhana and Hadipriono 2003).
In Australia, many bridge failures have been reported in recent years, mainly due
to extreme weather conditions, in particular Ô¨Çooding (Lebbe and Zhang 2014). The
annual probability of a scour-related bridge failure in the UK has been estimated at
around 30% (Van Leeuwen and Lamb 2014; Dikanski et al. 2016). In Taiwan, in 2009
alone, approximately 150 bridges collapsed during extreme Ô¨Çooding (Hong et al. 2012).

1

 
 
 
 
 
 
Scour is known as a highly uncertain physical phenomenon due to complexity of
Ô¨Çow, structure, and soil interaction. Despite numerous eÔ¨Äorts, the assessment of exist-
ing empirical scour models shows that the majority can result in signiÔ¨Åcant errors, in
particular over-prediction of scour. These regression models have been calibrated based
on limited laboratory test results under certain conditions with limited Ô¨Åeld veriÔ¨Åca-
tion (Mueller and Wagner 2005; Sheppard et al. 2014). The most commonly used scour
equation for bridge design has been the HEC-18, which has evolved throughout the past
two decades (Arneson et al. 2012). A recent review of the HEC-18 model by Schuring
et al. (2017) reveals several limitations, the most important of which are (I) insensitivity
to a broad range of geological conditions, especially very coarse granular particles, (II)
impracticality of proposed solutions for cohesive soils, (III) lack of recommendations
for future scour potential for existing bridges, i.e. Ô¨Åeld performance over the time.

To date, numerous research studies have worked on development of scour predictive
models using "classical" Machine Learning (ML), as opposed to "modern" ML or Deep
Learning (DL), trained based on both lab and Ô¨Åeld data (Zounemat-Kermani et al. 2009;
Azamathulla et al. 2010; Kim et al. 2015; Ebtehaj et al. 2016). Sharafati et al. (2021)
have provided a comprehensive review on the most recent ML models for scour and
their merits and limitations. These models generally provide more accurate maxi-
mum scour depth predictions compared with the empirical scour models. However,
like any classical ML model, their extrapolation capacity is limited and the accuracy
of predictions decay signiÔ¨Åcantly outside the convex hull of the training dataset, i.e.
poor generalization to unseen data outside the training data (McCartney et al. 2020;
Yousefzadeh and Cao 2022). Moreover, these models are often high-dimensional, in-
corporating a large number of bridge, Ô¨Çow, and soil characteristics as the predictive
variables (input parameters), and are often trained using data compiled from various
scattered locations, therefore only validated under certain data domain ranges. These
factors further expose these models to extrapolation risk, rendering less reliability in
scour predictions for an unseen bridge (Balestriero et al. 2021).

In addition to limitations of the current scour prediction models, there are other
factors to blame for scour failure, among which are: lack of proper design and analysis
method for older bridges subjected to scour; hydraulic uncertainties, especially increase
in Ô¨Çood intensity and climate change impacts (Khandel and Soliman 2019); and com-
plexity of riverbed sediment and morphological behaviour (Lamb et al. 2017). Given
the aforementioned limitations, bridge authorities have resorted to monitoring solutions
to manage the scour risk. This includes both regular surveys and inspections as well as
real-time monitoring using advanced sensor technologies.

Real-time scour monitoring have become increasingly prevalent in recent years
and have enabled more reliable scour risk management for critical and large-scale
bridges (Lagasse 1997; NCHRP 2009; Briaud et al. 2011; Prendergast and Gavin 2014).
Chang et al. (2014) proposed a real-time monitoring solution using micro-cameras in-
stalled at bridge piers and advanced image processing and pattern recognition methods
to monitor bed level variations in real-time. They validated the method through labora-
tory experiments and reported that image data reliably captured monitored scour-depth
evolution. Maroni et al. (2020) proposed a scour hazard model for road and railway
bridges, using Bayesian networks calibrated based on limited data from scour moni-

2

toring systems on a bridge network in Scotland. They reported the Bayesian network
approach to signiÔ¨Åcantly reduce the uncertainty in the scour depth assessment at unmon-
itored bridges. Lin et al. (2021) introduced a new scour monitoring technology using
vibration-based arrayed sensors, Internet of Things (IoT), and artiÔ¨Åcial intelligence (AI).
The water level changes around the bridge pier were captured using real-time CCTV im-
ages and processed using deep learning methods. The monitoring system was validated
through laboratory Ô¨Çume experimentation and Ô¨Åeld measurements.

Yousefpour et al. (2020) investigated scour prediction using AI/ML, based on moni-
toring data in collaboration with USGS and some of the US departments of transportation
(DOTs). Three ML methods for real-time forecast and prediction of maximum depth of
scour were developed. The developed models showed promising results in scour depth
prediction based on real-time monitoring data. The data included river bed elevation
measurements through sonar sensors (ùë¶ùë†ùëú) and river stage (Ô¨Çood/water level) measure-
ments through stage sensors (ùë¶ùë†ùë°) installed on more than 20 bridges in Alaska between
2001 to 2017. The preliminary results showed great potential for Deep Learning (DL)
using Long-short term memory networks (LSTMs) for real-time scour forecast.

Following this study, in this paper we introduce an innovative AI-based, early
warning solution for scour assessment that can be integrated with the real-time scour
monitoring systems, such as those installed for many bridges in various states in the
USA (e.g. Alaska, Oregon, Colorado, Idaho). Novel LSTM algorithms are developed
and trained to recognize the inherent scour and Ô¨Çood patterns in the historic monitoring
data, i.e. time series of river stage and bed elevation. The AI models can process the
monitoring data in real-time and generate intelligent forecasts on upcoming scour depth
enabling a superior scour risk management system.

The essence of our research is creating a bridge-speciÔ¨Åc expert system for scour
assessment, based on its historical and real-time sonar and stage sensor readings without
the need to involve all the physical parameters typically used in scour equations, such
as pier geometry, velocity and soil condition (particle size). We base our data-driven
solution on the fact that DL models can learn complex physical processes from the data,
without exposure to explicit physics knowledge of the process (Kiarashinejad et al. 2019;
Schwartz 2021), while proving our hypothesis which is: the historic time-series of scour
and Ô¨Çow depth and their cross-correlations embody the physical interactions of the soil,
Ô¨Çow, and structure for a given bridge, which can be assimilated by modern deep-learning
methods to provide useful insights on upcoming scour events.

The theoretical bases for such hypothesis and the underlying assumptions lies with
the scour physical process: (I) the DL models are developed to be bridge-speciÔ¨Åc,
i.e. learning cannot be transferred to another bridge, therefore the physical parameters
that are site-speciÔ¨Åc and not temporally variable, such as bridge/pier geometry and soil
condition/geology are not incorporated; (II) the Ô¨Çow velocity is directly correlated with
the Ô¨Çow depth (‚âà ùë¶ùë†ùë° ‚àí ùë¶ùë†ùëú), therefore it is not considered as an input to the AI model
(see velocity impact analysis in section 3); (III) the soil condition impacts on the scour
process is implicitly encoded in the historic river bed and Ô¨Çow variation patterns.

Note that the aim of this research is not generating a ML model for maximum scour
depth prediction, rather introducing an early-warning solution by integrating AI with
the scour monitoring technology to provide predictive insights for risk assessments

3

of upcoming scour events. The proposed solution is demonstrated in the following
sections for three case study bridges in Alaska: Chilkat River (bridge ID: 742), Knik
River (bridge ID: 539), and Sheridan Glacier No.3 (bridge ID: 230). These were the
bridges with the most signiÔ¨Åcant scour and Ô¨Ålling associated with seasonal high Ô¨Çows
and Ô¨Çood events, and for which the sensor readings were consistently available.

APPROACH

Scour Monitoring Data

The sonar and stage sensor readings have been provided by USGS and DOTs accom-
panied by short cover reports highlighting the major scour and Ô¨Çooding events, newly
installed sensors, and replacements or damages to sensors on monitored bridges, among
other details. The real-time monitoring data for Alaska bridges can be accessed through
the online monitoring platform available at USGS Alaska Science Center.

Prior to using the sensor data for model development, extensive pre-processing was
performed to generate smooth continuous time series with synchronized steps between
sonar and stage readings. In some cases, a small portion of data was missing due to issues
with the sensors (damages due to debris, vandalism, etc.) or the readings were noisy
and erroneous. Also, sensor reading intervals were not uniform across all the bridges
and years of monitoring. The following main steps were taken for pre-processing of
data. See (Yousefpour et al. 2020) for a full description of the data and pre-processing
methods:

‚Ä¢ Apparent bias shifts in the sensors were corrected based on manual inspection.
‚Ä¢ Outliers were removed via median Ô¨Åltering.
‚Ä¢ Timestamps were made uniform (1hr) throughout the dataset and synchronized

between sonar and stage.

‚Ä¢ Denoising/Ô¨Åltering technics including Moving Average and Low Pass Filter were

applied to remove high-frequency noises and to capture the actual trend.

‚Ä¢ Missing data were imputed using polynomial interpolation and Gaussian Pro-

cess.

Figure 1 shows the map of the bridges with installed sensors across Alaska as part of
the USGS real-time monitoring program. Sounding survey results from 2001 to present
with an image of the bridge with installed sensors for bridges 742, 539 and 230, are
shown in Figure 2, Figure 5, and Figure 7 respectively. Also, Figure 3, Figure 6, and
Figure 8 provide the raw versus processed data for recent years. Note that all the original
data were provided in US units (ft for sensor readings of elevation). Exploring the data
shows similar yearly periodicity across bridges in Alaska. Most bridges experience
two major high Ô¨Çow/Ô¨Çooding around July/August and September/October. There is no
reading due to frozen waters between November and March, hence the gaps (or straight
lines) between the years.

4

Fig. 1. Map of Alaska bridges with active real-time monitoring systems, case study bridges
highlighted

Bridge 742 - Chilkat River

As observed from Figure 2 and Figure 3, historical sounding and sensor data for
bridge 742 shows cyclic scour and Ô¨Ålling of up to 4m due to seasonal high Ô¨Çows (Ô¨Çoods)
happening around July/August and September/October each year and the bed elevation
Ô¨Çuctuating between 33m to 37m (see also Figure 19a). The sounding surveys allowed
for cross-validating the readings from sonar and ensuring the maximum depth of scour
is captured across the channel. Sonar has been installed on the third pier from the left
bank, which is closest, among the nine piers, to the major scour hole across the river
bed.

Figure 4 provides the histogram of the processed stage and sonar readings for bridge
742 from 2007 to 2017. The negative correlation between the two features can be
observed in the joint histogram.

5

(a)

(b)

Fig. 2. Scour monitoring of bridge 742, a) a photo showing sensors mounted on the third pier
from the left bank

6

2014-07

2015-01

2015-07

2016-01

2016-07

2017-01

2017-07

2014-07

2015-01

2015-07

2016-07

2017-01

2017-07

2016-01

Time (hr)

(a)

stage
sonar

stage
sonar

)

m

(

n
o
i
t
a
v
e
E

l

)

m

(

n
o
i
t
a
v
e
E

l

39

38

37

36

35

34

39

38

37

36

35

34

33

)

m

(

n
o
i
t
a
v
e
E

l

39

38

37

36

35

34

33

32

2017-05-15

2017-06-01

2017-06-15

2017-07-01

2017-07-15

2017-08-01

2017-08-15

2017-09-01

2017-09-15

2017-10-01

Time (hr)

(b)

Fig. 3. Bridge 742 - sample of sensor data from continuous real-time monitoring: a) top:
processed; bottom: raw, b) 2017 data - processed (line) and raw (dots)

7

 
 
 
sonar

stage

36

37

38

39

40

Elevation (m)

2500

2000

1500

1000

500

0

33

34

35
Elevation (m)

36

3000

2500

2000

1500

1000

500

0

35

37

(a)

(b)

Fig. 4. a) Individual and b) joint histograms of sonar and stage readings - bridge 742

Bridge 539 - Knik River

As shown in Figure 5 and 6, bridge 539 goes through cyclic scour and Ô¨Ålling between
summer and fall up to a maximum of 6m, with the river bed Ô¨Çuctuating between 4m to
10m elevations (see also Figure 20a). The sonar has been installed on the pier closest
to the right bank.

Due to the 2006 major Ô¨Çood and damage to sensors, the Stage readings were un-

available in 2006.

8

(a)

(b)

Fig. 5. Scour monitoring of bridge 539, a) a photo showing sensors mounted on pier closest to
the right bank

9

stage
sonar

2013-07

2014-01

2014-07

2015-01

2015-07

2016-01

2016-07

2013-07

2014-01

2014-07

2015-07

2016-01

2016-07

2015-01

Time (hr)

(a)

stage
sonar

)

m

(

n
o
i
t
a
v
e
E

l

12

10

8

6

4

)

m

(

n
o
i
t
a
v
e
E

l

12

10

8

6

4

)

m

(

n
o
i
t
a
v
e
E

l

14

12

10

8

6

4

2016-07-01

2016-07-15

2016-08-01

2016-08-15
Time (hr)

(b)

2016-09-01

2016-09-15

2016-10-01

Fig. 6. Bridge 539 - Sample of sensor data from continuous real-time monitoring, a) top:
processed; bottom: raw, b) 2016 data - processed (line) and raw (dots)

Bridge 230 - Sheridan Glacier

Bridge 230 has gone through several over-topping episodes during major Ô¨Çoods
between 2001 to 2017, with a Ô¨Çood exceeding 100-year return period in 2006. As
shown in Figure 7 and Figure 8, the sonar has been installed on the pier closest to the
right. The sonar recordings show up to 5m cycles of scour and Ô¨Ålling and bed elevation
variation between 6m to 11m (see also Figure 21a).

Due to the sensors malfunction, the readings were not used in 2009 and 2010.

10

 
 
 
(a)

(b)

Fig. 7. Scour monitoring of bridge 230, a) a photo showing sensors mounted on pier closest to
the right bank

11

stage
sonar

2014-07

2015-01

2015-07

2016-01

2016-07

2017-01

2017-07

2018-01

2014-07

2015-01

2015-07

2016-01

2016-07

2017-01

2017-07

2018-01

Time (hr)

(a)

stage
sonar

)

m

(

n
o
i
t
a
v
e
E

l

)

m

(

n
o
i
t
a
v
e
E

l

14

13

12

11

10

9

8

7

6

14

13

12

11

10

9

8

7

6

15

14

13

12

)

m

(

n
o
i
t
a
v
e
E

l

11

10

9

8

7

6

2017-07-15

2017-08-01

2017-08-15

2017-09-01

2017-09-15

2017-10-01

Time (hr)

(b)

Fig. 8. Bridge 230 - sample of sensor data from continuous real-time monitoring, a) top:
processed; bottom: raw, b) 2017 data - processed (line) and raw (dots)

Early Warning Solution Framework

Figure 9 presents a schematic of the AI early warning solution framework we propose
in this paper. The Ô¨Årst and second steps i.e. real-time monitoring of scour and pre-
processing of the historic scour monitoring data were explained in the previous section.
The third step is developing AI algorithms that learn from past to predict the future, i.e.
the variation of bed elevation across a pre-deÔ¨Åned forecast window. In the forth step,
the upcoming maximum scour depth is estimated based on the probability distribution
function (PDF) of predictions generated by the AI model. Finally, in the last step the

12

 
 
 
Fig. 9. AI-Based early warning framework for bridge scour using real-time monitoring data

predicted scour depth is evaluated with respect to a set of threshold deÔ¨Åned based on
failure risk assessments, considering the as-built design of the foundation. This process
involves subtracting the predicted scour depth for a target probability of exceedance
(e.g. < 10%) from the as-built embedment depth of the foundation to assess the residual
bearing capacity. In this paper we focus on step-3, where we introduce LSTM networks
as surrogate models for scour forecast as explained in the following sections.

Deep Learning

One of the most prominent deep learning models to approach a time series fore-
casting problem is Recurrent Neural Networks (RNNs), capable of "remembering". In
addition to feed-forward connections between computational units (neurons), RNNs
have recurrent connections where the output of a unit is fed back to itself with a weight
and a time delay, which provides the algorithm with a memory of past activations. This
is the backbone idea of the solution proposed in this paper.

In processing the time-series data, RNNs iterate through the sequential elements
(time-steps) while maintaining a memory state of the activation at each step. The
sequence, in this study, corresponds to a vector of two features: river stage (stage) and
river bed elevation (sonar).

13

Long Short-Term Memory Networks

LSTM networks are special types of RNNs with an internal memory unit that can
maintain short and long temporal patterns of past time-series data and incorporate
them into future predictions (Hochreiter and Schmidhuber 1997; Deng and Yu 2014).
Stacking memory units in such networks enables learning higher levels of temporal
patterns in sequential data. LSTMs have been successfully applied in a wide range
of applications, such as stock market forecast, text, language, and voice recognition
(Ray et al. 2015), and recently used in some geotechnical engineering applications
(Xie et al. 2019; Zhang et al. ; Zhang et al. 2021; Yousefpour and Pouragha 2022).

One of the main advantages of LSTMs over simple RNNs is that the LSTM memory
unit can overcome the vanishing gradient problem, as it allows the past information
to be re-injected at a later time. Vanishing gradient is a common learning pitfall
in deep recurrent neural networks, where the gradient of weights becomes too small
or too large, if the network is unfolded for too many time steps (Bengio et al. 1994;
Hochreiter and Schmidhuber 1997).

The LSTM algorithms in this study were developed using the TensorFlow library
in Python. For time-intensive computations and conÔ¨Åguration optimization, codes
were run on several GPUs of Spartan, the high-performance computing system at The
University of Melbourne. Figure 10 shows a diagram of the LSTM architecture used in
this study.

14

(a)

(b)

(c)

Fig. 10. a) LSTM network architecture, b) LSTM unit architecture; symbols are as follows: ùë•ùë° :
input, ùëêùë° : cell memory state, ‚Ñéùë° : hidden state or output at time step ùë°; ùúé: sigmoid activation
function; ùë°ùëéùëõ‚Ñé: hyperbolic tangent function, c) LSTM unit unfolded in time.

To train the LSTMs, the time-series data are Ô¨Årst sliced into smaller sequences
through a sliding window.
In each slice, a certain number of time-steps are treated
as input (input width) to the network while a number of time-steps into the future is
predicted (label width). The total length for each data sequence is the sum of the input
and label widths (see Figure 11a). Note that no shift was considered in between the
input and label chains in this study (oÔ¨Äset width = label width).

15

(a)

(b)

(c)

Fig. 11. a) DeÔ¨Ånition of input, label and oÔ¨Äset in time series data slicing scheme, b) Single-shot
variant, c) Feedback (Google 2020)

For the training process, the sequences in each subset of data (training, validation,
and test) are divided into a number of batches. A maximum of 32 sequences are
selected for each batch (batch size = 32). The LSTM performance is evaluated via the
mean squared error (loss) and the mean absolute error (MAE) of predictions over the
label width for all the batches in a dataset. The network is trained using the training
dataset over a large number of epochs (100) until the error (loss) on the validation
dataset meets the stopping criteria. The most commonly activated stopping criteria is
the threshold number for error increase recurrence (patience parameter). In addition
to monitoring the training over the validation dataset, the Drop-out technique is also
explored to overcome the over-Ô¨Åtting issue. The performance of the models for unseen
data is evaluated through the test dataset.

Three LSTM variants were investigated as explained in the following sections:

1. Single-Shot (ss)
2. Feedback or Auto-regressive (fd)
3. Two-Layer, Single-Shot (ss2)

16

Single-Shot Model

In this variant, all the time steps are predicted at once with no oÔ¨Äset as depicted in
Figure 11b. The Python implementation of the model using TensorFlow comprises of
three layers: an LSTM layer of units with sigmoid activation, a Dense layer, contain-
ing units with ReLU activation function: ùëöùëéùë•(0, ùë•), and a Reshape layer, containing
linear units to adjust the output dimensions at the end. The Dense layer has as many
units as the number of time-steps to be predicted (label_width) times the number of
features (n_LabelFeat). The output from the Dense layer, which has two dimensions
(batch size, label_width * n_LabelFeat), is reshaped into a tensor of three
dimensions (batch size, label_width, n_LabelFeat), where the prediction of
the label features is set up.

Feedback (Auto-regressive) Model

Similar to Single-Shot, this variant also has one LSTM layer, however, instead of
predicting the output time-steps all at once, predictions are made one step at a time.
The hypothesis is whether feeding back the model‚Äôs output into itself at each step, i.e.,
conditioning prediction at each time-step on the previous one, increases the accuracy.
As shown in Figure 11c, the model predicts only one hour in the future, and then that
prediction is the input for the prediction of the next time-step.

An obvious advantage of this model is that the number of time-steps to be predicted

in the future is unbounded.

Two-Layer, Single-Shot Model

This model is a Single-Shot variant with two LSTM layers. It is sometimes useful
to stack several LSTM layers to increase the representational power of a network,
as it is also common in feed-forward neural networks. The trade-oÔ¨Ä is between the
computational cost and representational power of the model. Just to give an idea of
how eÔ¨Äective this strategy could be: Google Translate algorithms is a stack of seven
large LSTM layers. It is generally a good idea to increase the network‚Äôs capacity, i.e.,
stacking layers, until over-Ô¨Åtting becomes an obstacle.

LSTM ConÔ¨Ågurations and Hyper-Parameters

A number of LSTM conÔ¨Ågurations were analysed in this study, considering possible
combination scenarios for input features, model variants and other hyper-parameters.
Using the grid-search method, the most optimum models were identiÔ¨Åed by compar-
ing numerous combinations of hyper-parameters. Table 1 presents the main hyper-
parameters and their investigated values.

17

Table 1. LSTM hyper-parameters and their values

Hyper-Parameter
Time Feature
No. of LSTM layers
No. of hidden units
Optimization Algorithm
Drop-out Rate
Inputs, Labels (Sliding Window)

Range of Tested Values
Yes, No
1, 2
32, 64, 128, 256
SGDM, Adam and RMSProp
0, 20%
(336, 168), (720, 168), (720, 336)

Selected Value
No
1
Variable
Adam
0
(336, 168)

Features

The scour data has clear yearly periodicity (e.g. frozen waters, seasonal variations of
river stage/Ô¨Çooding and scour/Ô¨Ålling), therefore we incorporate two additional features
representing "time of the year" by applying ùë†ùëñùëõ(¬∑) and ùëêùëúùë†(¬∑) functions to time-stamps.
Hence, the two feature combinations are:

1. With the time features (ssy): [sonar, stage, year sin, year cos]
2. Without time features (ss): [sonar, stage]

Sliding Window

The sliding-window hyper-parameter refers to the number of time-steps taken as
input and label, i.e., input and label width. The following input-label widths were
considered:

1.
2.
3.

(336, 168): Two weeks of history, one week of predictions
(720, 168): Four weeks of history, one week of predictions
(720, 336): Four weeks of history, two weeks of prediction

Although initially increasing the input width may beneÔ¨Åt the prediction accuracy,
having long sequences will limit the number of sequences from the already small training
dataset. A good trade-oÔ¨Ä between input width and the number of sequences is one of
the key elements of optimal training. With respect to the number of steps to be predicted
(label width), the problem itself sets a minimum range, which is 168 to 336 hrs (one to
two weeks). This is considered as the minimum required time for bridge authorities to
take countermeasures and devise a plan of action to manage the scour risk (conÔ¨Årmed
in a meeting with various DOT bridge managers).

Number of Epochs

The number of epochs is set to 100, and the training was set to stop when monitored
metrics stopped improving (the loss function stopped decreasing) . The parameter
patience was set to 5, which is the number of consecutive epochs with no improvement,
after which training is stopped.

Number of Units

Similar to feed-forward neural networks, increasing the number of units (hidden
neurons) increases the predictive capacity of the network, yet at the risk of over-Ô¨Åtting

18

and increased computational cost. The chosen values for this parameter are powers of
two: 32, 64, 128, and 256.

Regularisation: Drop-out

The drop-out rate is the proportion of units whose inputs are zeroed out in order to
break random correlations in the training data. The drop-out version for RNNs is called
recurrent drop-out. Both drop-out and recurrent drop-out rates need to be optimally
selected (Semeniuta et al. 2016). Two values of 0 and 20% were considered in the
grid-search.

LSTMs as Surrogate Models for Scour Forecast

In this section we explain, through a mathematical representation, how the LSTMs
can act as a surrogate model for physics-based, empirical equations for scour forecast.
For this purpose we use HEC-18 as the most commonly used scour equation. Let‚Äôs
consider an individual pier as shown in Figure 12, for an arbitrary bridge ùëÅ. The scour
depth (in SI units), ùë¶ùë†, can be written as function of two variables, ùë¶1, the Ô¨Çow depth
directly upstream of the pier and ùëâ, the mean velocity of Ô¨Çow directly upstream of the
pier:

Fig. 12.
ters (Arneson et al. 2012)

Schematic of Ô¨Çow and scour around a bridge pier, showing relevant parame-

ùë¶ùë† = ùõºùë¶0.13

1 ùëâ 0.43

1

(1)

where, ùõº is a constant for bridge ùëÅ, dependent on pier geometry, angle of attack, and
river-bed condition at the pier location. Based on Manning‚Äôs equation for open channel
Ô¨Çow, one can write:

ùëâ = ùëÖ0.67ùë†0.5
= ùõΩ ùëì (ùúáùë¶1)

ùëõ

(2)

(3)

where, ùëÖ is the hydraulic radius, which assuming the channel width to be constant, can
be written as a function of Ô¨Çow depth: ùëì (ùúáùë¶1), in which ùõΩ = ùë†0.5/ùëõ, where ùë† and ùëõ are

19

the channel slope and Manning‚Äôs roughness coeÔ¨Écient, and ùúá is a constant for bridge
ùëÅ at the pier location.
ùë¶ùëñ
ùë†ùë°
Considering h
ùë†ùëú i, the vector representing sonar and stage readings at time-step
ùë¶ùëñ
= min{ùë¶ùëñ
ùë°ùëñ, and ùë¶‚Ä≤
ùëñ=ùëõ, the maximum and minimum of
ùë†ùë°
readings corresponding to maximum Ô¨Çow and scour depth during the forecast window
of t = {ùë°ùëñ}ùëò

= {ùë°ùëõ, ¬∑ ¬∑ ¬∑ , ùë° ùëò }, one can write:

ùëñ=ùëõ and ùë¶‚Ä≤
ùë†ùëú

= max{ùë¶ùëñ

ùë†ùëú }ùëò

ùë†ùë° }ùëò

ùëñ=ùëõ

ùë¶ùë† + ùë¶1 ‚âà ùë¶‚Ä≤

ùë†ùë° ‚àí ùë¶‚Ä≤

ùë†ùëú ‚àí‚Üí ùë¶1 ‚âà ùë¶‚Ä≤

ùë†ùë° ‚àí ùë¶‚Ä≤

ùë†ùëú ‚àí ùë¶ùë†

(4)

Replacing ùë¶1 from Eq.4 in Eq.3, and replacing ùëâ from Eq.3 in Eq.1, the maximum scour
depth given by the empirical equation can be written as:

ùë¶ùë† = ùúÇùëî(ùë¶‚Ä≤

ùë†ùë°, ùë¶‚Ä≤

ùë†ùëú)

(5)

where ùúÇ represents a constant for bridge ùëÅ, and ùëî is a function of the stage and sonar
readings.

Meanwhile, the AI forecast model using LSTM can be written as:

ùë¶ùëñ
ùë†ùë°
ùë†ùëú i o
ùë¶ùëñ

ùëò

ùëñ=ùëõ

n h

= ùúì (cid:16)n h

ùë¶ùëñ
ùë†ùë°
ùë†ùëú i o
ùë¶ùëñ

ùëõ‚àí1

ùëñ=ùëö

, W, b(cid:17)

(6)

ùëõ‚àí1

ùë¶ùëñ
ùë†ùë°
ùë¶ùëñ
ùë†ùëúi o

ùëñ=ùëö

are the sensor readings in the past {ùë°ùëñ}ùëõ‚àí1
ùëñ=ùëö

where, n h
are the input features for the LSTM model and W and b are the matrix of weights and
biases of the network, which get adjusted during the training process. Therefore, ùë¶ùë†, i.e.
the maximum scour depth in the forecast window of t can be obtained from a function
like ùúí, representing the AI surrogate function that can approximate the scour empirical
equation presented in Eq.5:

= {ùë°ùëö, ¬∑ ¬∑ ¬∑ , ùë°ùëõ‚àí1} which

ùë†ùëú) ùëò
ùë†ùë° ‚àí ùë¶ùëñ
ùë¶ùë† = max(ùë¶ùëñ
ùëñ=ùëõ ‚àí ùë¶1
ùë¶ùëñ
ùëõ‚àí1
= ùúí hùúì (cid:16) h
, W, b(cid:17)i ‚âà ùúÇùëî(ùë¶‚Ä≤
ùë†ùë°
ùë¶ùëñ
ùë†ùëúi

ùëñ=ùëö

ùë†ùë°, ùë¶‚Ä≤

ùë†ùëú)

(7)

(8)

.

RESULTS

LSTM Performance Comparison

A preliminary analysis was done to better demonstrate the LSTM capability over
a baseline linear model and a Dense model. The Dense model includes only a single
Dense layer with ReLU activation function. The baseline model was deÔ¨Åned as a model
that at each time-step predicts the same value as the last time-step. The performance
of the models was compared based on MAE over the test dataset on a smaller fraction
of the data for bridge 742. Figure 13 shows that LSTM signiÔ¨Åcantly outperforms the
baseline and the Dense model, demonstrating LSTM superiority in forecast compared
to the other models.

20

Fig. 13. Comparison of Baseline, Dense, and LSTM models (MAE is normalized)

Model Optimization and Hyper-Parameter Tuning

Grid-search analyses were computationally-intensive; however, the computational
time was signiÔ¨Åcantly reduced by running the codes on the GPU clusters. Each training
epoch took about 400-500 seconds on two GPU node. For each conÔ¨Åguration, the
LSTM network was retrained from scratch for a large number of times to evaluate the
uncertainty in the training process. Figure 14 to 16 provide the box-plots of MAE values
for various LSTM conÔ¨Ågurations. Note that the MAE values are based on normalized
data (therefore unitless). ConÔ¨Ågurations were encoded as follows:

[features]-[model]-[window]-[units]-[drop-out]

For example, ssy-ss-(336,168)-256-0 corresponds to the conÔ¨Åguration that
includes time features, uses the Single-Shot model, has 336 time-steps as input and
168 time-steps for labels, includes 256 units, and does not have drop-out regularisation.
The best conÔ¨Ågurations were selected based on the smallest MAE mean and standard
deviation (see Table 1 for selected hyper-parameter values).

The following observations were made from these analyses:

‚Ä¢

‚Ä¢ Adding time features did not improve the LSTM predictions of bed elevation,
yet their presence showed to slightly improve the predictions of river stage for
bridge 742.
Increasing the input width from 336 hrs (14 days) to 720 hrs (30 days) while
keeping the label width (forecast window) constant did not improve the prediction
accuracy and showed to amplify the variability in model predictions.
Increasing the label width (forecast window) from 7 days to 14 days showed to
consistently increase the average prediction error.
Increasing the LSTM layers to two didn‚Äôt show a meaningful improvement in the
accuracy of predictions but increased the variability of predictions. This may be
due to over-Ô¨Åtting, where the more complex model (more nonlinear units) learns
better on the training data but fails to generalize on the test data.

‚Ä¢

‚Ä¢

21

‚Ä¢ The Feedback model did not outperform the Single-Shot model. This could be
related to the error cascade eÔ¨Äect from the initial steps within the label sequence
to the next time steps. As the analyses have been performed on a limited number
of bridges, the Feedback model may outperform the Single-Shot model in other
bridges, depending on the training data.

‚Ä¢ Using the drop-out method (0.2 ratio) did not improve the accuracy of predic-

tions.

‚Ä¢ The optimum number of units showed to vary from bridge to bridge and de-
pendant on the other hyper-parameters of the model (e.g., feature combination,
model variant, and architecture).

22

(a)

(b)

Fig. 14. Grid-search results showing, a) stage MAE and b) sonar MAE boxplots for various
conÔ¨Ågurations, with the top three models highlighted - bridge 742 (MAE is normalized)

23

(a)

(b)

Fig. 15. Grid-search results showing, a) stage MAE and b) sonar MAE boxplots for various
conÔ¨Ågurations, with the top three models highlighted - bridge 539 (MAE is normalized)

24

(a)

(b)

Fig. 16. Grid-search results showing, a) stage MAE and b) sonar MAE boxplots for various
conÔ¨Ågurations, with the top three models highlighted - bridge 230 (MAE is normalized)

25

Training

Figure 17 provides the graphs of the training process for a number of LSTM con-
Ô¨Ågurations, showing the variation of MAE in training and validation versus the number
of epochs. As mentioned earlier, the stopping criteria was applied based on the error
progression over validation dataset to avoid over-Ô¨Åtting. Note that the MAE is based
on the standard-normalized values. Figure 18 provides a comparison between the two
evaluation metrics, loss(MSE) and MAE across training epochs. Both metrics show
consistency in their trends across epochs. The main diÔ¨Äerence between these two met-
rics is that, loss (MSE) is calculated based on the error on the vector of features, i.e.
both sonar and stage predictions, whereas MAE is calculated separately for sonar and
stage to better evaluate of scour prediction accuracy.

Fig. 17. Training history plots: variation of the MAE for sonar prediction with epochs for
training and validation datasets

0.7

0.6

0.5

0.7

0.6

0.5

Ss_Ss_336_168_256_0 Train
Ss_Ss_336_168_256_0 Val

E
S
M

0.4

0.3

E
A
M

0.4

0.3

0.2

0.1

0.0

0

1

2

3

4
Epochs

Ss_Ss_336_168_256_0 Train
Ss_Ss_336_168_256_0 Val

5

6

7

8

0.2

0.1

0.0

0

1

2

3

4
Epochs

5

6

7

8

Fig. 18. Comparison between MSE and MAE variations with number of epochs during training

Prediction Results

The AI forecast of river stage and bed elevation variation for the three case study
bridges are presented and discussed in this section. The forecast results are shown for
the test dataset, which is the last year of bridge monitoring data. The results pertain to
the most optimum model selected through the grid-search analyses, as explained in the
previous section.

26

Chilkat River Bridge - 742

Figure 19a shows the data division for training, validation, and test datasets. Figure
19b presents bed elevation and river stage predictions throughout 2017 (test dataset).
The top graph shows the processed sensor readings and a shade created by the prediction
of the time-steps for every data sequence over the label width. For bridge 742, the shade
shows the predictions of 168 time-steps (7 days) into the future for every 336 time-
steps of history (14 days), each of which is shifted to the right by one time-step. The
shades closely follow the trends of the actual readings for both sonar and stage, showing
the model‚Äôs eÔ¨Äectiveness for scour forecast. On the bottom part, besides the actual
readings, the average and 95% conÔ¨Ådence interval of the predictions are shown. The
mean absolute error of bed elevation (sonar) predictions over the test dataset is 0.19m.
Also the variability of predictions is within acceptable limits, with a standard deviation
less than 0.3m (1ft).

As mentioned earlier, bridge 742 shows a seasonal variation of bed elevation of up
to 3m, including about 2m scour from June to August and subsequent 3m of Ô¨Ålling from
August to October. The LSTM model shows to successfully follow the seasonal trend of
scour and Ô¨Ålling throughout 2017, having learned from long-term patterns in the training
data from 2007 through 2016. During the scour episodes, the lower bound predictions
consistently provide an accurate assessment of bed elevation variation, and upper bound
predictions closely track the bed elevation variations during Ô¨Ålling episodes. Using the
lower bound for scour and upper bound for Ô¨Ålling episodes, the AI predictions show to
provide an accurate conservative estimate of the bed elevation (hence scour assessment)
at any given time.

27

(a)

(b)

Fig. 19. a) Data partitioning for AI training, b) AI predictions, mean, and conÔ¨Ådence intervals
over the test dataset- bridge 742.

Knik River Bridge - 539

The data division for training is shown in Figure 20a. The bed elevation and river
stage predictions throughout 2016 (test dataset) is shown in Figure 20b. Similar to
bridge 742, the forecast is performed 7 days (168hrs) in advance with 14 days (336hrs)
of history. The shades of LSTM predictions closely follow the trend of the actual sonar
and stage readings. The mean absolute error of bed elevation prediction is about 0.25m
over the test dataset. The variability of predictions is within acceptable limits with a
standard deviation less than 0.3m (1ft).

28

Similar to bridge 742, the AI predictions successfully follow the seasonal scour
and Ô¨Ålling trends throughout 2016, even during the acute changes between August to
September with about 4m variation of bed elevation. The variability in bed elevation
predictions is small, with a maximum standard deviation below half a meter during the
pick of Ô¨Ålling in September 2016.

(a)

(b)

Fig. 20. a) Data partitioning for AI training, b) AI predictions, mean, and conÔ¨Ådence intervals
over the test dataset - bridge 539.

29

Sheridan Glacier Bridge - 230

The data division and AI predictions for bridge 230 are shown in Figure 21a and 21b.
More variability in bed elevation and river stage predictions is observed for bridge 230
compared to the other two bridges; nevertheless the trend (mean) of predictions follows
the scour and Ô¨Ålling episodes throughout 2017 (test dataset). This includes consecutive
scour and Ô¨Ålling episodes happening between August and September, with a maximum
bed elevation variation of about 2m (6.5ft). Similar to the other two bridges, the forecast
is performed 7 days (168hrs) in advance with 14 days (336hrs) of history. The mean
absolute error of bed elevation prediction is less than 0.37m over the test dataset. It
is worth noting that although the mean of prediction provides a reasonable forecast of
scour at the bridge pier, the higher variability in predictions have resulted in the lower
bound to indicate larger (more conservative) scour depth in some episodes, for e.g.,
around end of August and mid-September 2017.

30

(a)

(b)

Fig. 21. a) Data partitioning for AI training, b) AI predictions, mean, and conÔ¨Ådence intervals
over the test dataset - bridge 230.

Discussion on the Performance of the LSTM Models

Table 2 summarizes the performance of the selected LSTM models for each bridge
based on MAE for sonar and stage predictions. The average prediction error for bed
elevation varies between 0.2 to 0.4m and for stage water between 0.1 to 0.2m. The
average scour error percentage (= sonar MAE / max depth of scour) is less than 10%
for bridge 742 and 539 but jumps higher to 25% for bridge 230. The reason for this
larger error lies with a considerable amount of missing data (year 2008 and 2009) for
bridge 230, as opposed to the other bridges. To provide a comparison basis with best of

31

Table 2. Performance summary of the LSTM models over test dataset

Bridge Sonar MAE-m Stage MAE-m Max Scour Depth-m Scour Error-%

742
539
230

0.19
0.25
0.37

0.19
0.13
0.08

2.1
3.3
1.5

9
7.5
25

Table 3. Maximum prediction error for scour (troughs) and Ô¨Ålling (peaks) across the
test dataset

Bridge Mean Error (m) LB error (m) Mean Error (m) UB Error (m)

742
539
230

Scour
0.7
0.6
0.5

Scour
0.2
0.6
0.9

Filling
0.4
1.7
0.4

Filling
0
0.8
1.4

the empirical models, according to Sheppard et a. (2014), HEC-18 mean absolute error
percentage over a substantially large lab dataset has been estimated around 21%.

The maximum error in scour trough and Ô¨Ålling peak forecasts are provided in Table
3 and graphically shown in Figure 22. The maximum error based on the mean of
predictions varies between 0.5m to 0.7m for scour troughs and 0.4m to 1.7m for Ô¨Ålling
peaks. The lower bound (LB) and upper bound (UB) errors show a reasonable degree
of variability in the LSTM predictions, varying between 0.2m to 0.9m for scour, and
0m to 1.4m for Ô¨Ålling.

Impact of Flow Velocity (Discharge)

In order to explore whether velocity is a critical feature in presence of stage time-
series, we incorporated the discharge measurements (discharge), obtained from the
USGS website, into the LSTM models for bridge 742 as an input feature and com-
pared the performance among three diÔ¨Äerent feature combinations: ssd:[sonar,
stage, discharge], sd:[sonar, discharge], and ss:[sonar, stage]. Dis-
charge is computed based on gage-height records (Ô¨Çow velocity) multiplied the river
cross-section area. Gage-height records are obtained by systematic observation of a
non-recording gage, or with automatic water level sensors relayed by remote gagging
stations (Sauer and Turnipseed 2010).

Figure 23 provides histograms of the discharge time-series for bridge 742 and its
cross-correlation with sonar and stage. Stage and discharge show a large positive
correlation as observed both in Figure 23 and Figure 24.

32

(a)

(b)

(c)

Fig. 22. DeÔ¨Ånition of maximum errors based on mean and LB/UB predictions for scour troughs
and Ô¨Ålling peaks: a) bridge 742, b) bridge 539, c) bridge 230

33

800

700

600

500

400

300

200

100

0

discharge

)
s
m
c
(

e
g
r
a
h
c
s
i
d

400

350

300

250

200

150

100

50

70

60

50

40

30

20

10

0

100

200
Discharge (cms)

300

400

33.5

34.0

34.5

35.0
sonar (m)

35.5

36.0

36.5

)
s
m
c
(

e
g
r
a
h
c
s
i
d

400

350

300

250

200

150

100

50

70

60

50

40

30

20

10

0

37.0

37.5
stage (m)

38.0

38.5

Fig. 23. Histograms of discharge data - bridge 742

34

 
 
n
o
i
t
a
v
e
E

l

2

1

0

‚àí1

‚àí2

stage
sonar
discharge

3

2

1

0

‚àí1

‚àí2

2

2

2

2

2

2

2

2

2

2

0

0

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

1

1

6

6

6

6

6

6

6

6

6

6

-

-

-

-

-

-

-

-

-

-

0

0

0

0

0

0

0

0

0

1

5

6

6

7

7

8

8

9

9

0

-

-

-

-

-

-

-

-

-

-

1

0

1

0

1

0

1

0

1

0

5

1

5

1

5

1

5

1

5

1

n
o
i
t
a
v
e
E

l

2

1

0

‚àí1

‚àí2

stage
sonar
discharge

3

2

1

0

‚àí1

‚àí2

e
g
r
a
h
c
s
i
D

e
g
r
a
h
c
s
i
D

2

2

2

2

2

2

2

2

2

2

0

0

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

1

1

7

7

7

7

7

7

7

7

7

7

-

-

-

-

-

-

-

-

-

-

0

0

0

0

0

0

0

0

0

1

5

6

6

7

7

8

8

9

9

0

-

-

-

-

-

-

-

-

-

-

1

0

1

0

1

0

1

0

1

0

5

1

5

1

5

1

5

1

5

1

Fig. 24. Sample of discharge, stage and sonar time-series - bridge 742

As shown in Figure 25, the LSTM performance is not improved by adding discharge
as an additional input feature. Replacing stage with discharge did not contribute to better
performance either. This outcome conÔ¨Årms the validity of our approach in excluding
discharge (or velocity) from the AI models, as it is highly correlated with stage, hence
a redundant input feature.

0.55

0.50

0.45

E
A
M

0.55

0.50

0.45

E
A
M

r
a
n
o
S

0.40

0.35

r
a
n
o
S

0.40

0.35

0.30

0.25

]
d
s
s
[

]
d
s
[

]
s
s
[

0.30

0.25

]
d
s
s
[

]
d
s
[

]
s
s
[

Model Configuration

Model Configuration

Fig. 25. Comparing the LSTM model performance with diÔ¨Äerent feature combinations including
discharge for, left) validation dataset, right) test dataset - bridge 742

35

 
 
CONCLUSIONS

This study introduces a novel AI approach for the real-time forecast of scour around
bridge piers, as a basis for an AI-based early warning system using scour monitoring
sensors. Many scour-critical bridges across the US have been monitored since early
2000s using stage and sonar sensors, as well as frequent soundings and surveys. A
collaborative research eÔ¨Äort with USGS and DOTs enabled access to some of this data.
The data from a number of these bridges in Alaska was utilized in this study to train AI
algorithms to predict both river stage (Ô¨Çood/water level) and bed elevation variations
as early as seven days in advance. The proposed solution was validated using several
bridges in Alaska, and case studies were shown for three of these bridges with the most
signiÔ¨Åcant scour and Ô¨Çood events.

LSTMs were trained using historical monitoring data including 11 years of sonar
and stage time-series and were shown to provide reliable early forecasts of scour with
reasonable variability (uncertainty). Results showed that LSTMs can learn the long-term
seasonal patterns in both stage and sonar data and make reasonably accurate predictions
for upcoming changes. The uncertainty of predictions was assessed by training the
LSTM models for many repetitions. The mean of the predictions was shown to capture
the trend of variations of bed elevation during seasonal cycles of scour and Ô¨Ålling,
happening between July to October each year in Alaska. Also, the upper and lower
bound of predictions provided reliable, conservative estimates of scour and Ô¨Ålling depth
during abrupt changes due to high Ô¨Çows and Ô¨Çood events.

Given that each bridge has its particular trends of scour and Ô¨Çooding depending on
the location, bridge structure, river Ô¨Çow, and river bed material and condition, training
was performed individually for each bridge. It was shown also through mathematical
representation and machine-learning experimentation that LSTMs using the two feature
time-series of bed elevation and water level (sonar and stage) can provide scour surrogate
models capable of reasonably accurate assessment of scour trend as early as 7 days
in advance. The other relevant parameters in typical scour empirical models such
as riverbed/soil condition and pier geometry are not temporally variable, therefore
excluded from LSTM input features, allowing for low-dimensional models. The only
other relevant feature changing with time, i.e. velocity was shown to be highly correlated
with stage, also an inferior predictor as compared with stage, hence not included in the
Ô¨Ånal selected input feature combination.

Using GPU clusters, around 300 diÔ¨Äerent conÔ¨Ågurations of LSTMs were trained and
tested to Ô¨Ånd the optimum algorithm for each bridge. The best conÔ¨Åguration showed
to vary from one bridge to another, however the optimum LSTM model performance
was in the same range with an average scour prediction error between 0.2-0.35m. In
comparison with empirical models, the proposed LSTM models oÔ¨Äer the following
advantages for scour forecast:

‚Ä¢ The LSTM scour forecast models are able to provide real-time prediction of

upcoming scour, within a pre-deÔ¨Åned forecast window.

‚Ä¢ The average error of scour prediction using the LSTM models is 7.5-25%,
showing a competitive performance against the empirical models with an error
range of 7-170% (Sheppard et al. 2014).

36

‚Ä¢ The LSTM scour forecast models are developed and trained for individual
bridges, therefore inherently aware of the trend of scour particular to a pier
location through learning from historic Ô¨Çow and bed elevation variation pat-
terns.

‚Ä¢ Unlike the empirical models which involve several parameters, LSTM models
are only dependant of two main time-series features, i.e. bed elevation and stage
elevation, eliminating the need for measurements of other parameters, such as
velocity and particle size.

Finally, the cost of implementing the proposed AI-based early warning solution
using the already installed stage and sonar sensors for individual bridges is negligible
compared to bridge failure costs, especially for critical bridges that are subjected to
frequent and/or extreme Ô¨Çooding.
It is expected that transportation authorities can
beneÔ¨Åt from the proposed solution in this study to enhance the existing risk management
systems for scour-critical bridges.

Data Availability Statement

Some or all data used for this study are available from the corresponding author
upon request. Models, or codes generated or used during the study are proprietary or
conÔ¨Ådential in nature and may only be provided with restrictions.

Acknowledgments

This study was funded by Arup Global Research Grant (2020-2021). The authors
also would like to thank Tony Marshall, Matt Carter, and Dr Will Cavendish from Arup
and Dr Farbod Taymouri from The University of Melbourne, for their valuable advice
and support throughout the project.

REFERENCES
Arneson, L., Zevenbergen, L., Lagasse, P., and Clopper, P. (2012). Evaluating Scour
at Bridges-Fifth Edition, Hydraulic Engineering Circular No. 18. Federal Highway
Administration (FHWA).

Azamathulla, H. M., Ghani, A. A., Zakaria, N. A., and Guven, A. (2010). ‚ÄúGenetic
programming to predict bridge pier scour.‚Äù Journal of Hydraulic Engineering, 136(3),
165‚Äì169.

Balestriero, R., Pesenti, J., and LeCun, Y. (2021). ‚ÄúLearning in high dimension always

amounts to extrapolation.‚Äù CoRR, abs/2110.09485.

Bengio, Y., Simard, P., and Frasconi, P. (1994). ‚ÄúLearning long-term dependencies with
gradient descent is diÔ¨Écult.‚Äù IEEE transactions on neural networks, 5(2), 157‚Äì166.
Briaud, J.-L., Hurlebaus, S., Chang, K., Yao, C., Sharma, H., Yu, O-Y., D. C., Hunt, B.,
and Price, G. (2011). ‚ÄúReal-time monitoring of bridge scour using remote monitoring
technology.‚Äù Rep. No. 0-6060-1, Texas A&M University/TTI.

CHANG, W.-Y., LAI, J.-S., YU, T.-Y., LIN, F., LEE, L.-C., TSAI, W.-F., and LOH, C.-
H. (2014). ‚ÄúPier scour monitoring system by bed-level image tracking.‚Äù International
Journal of Sediment Research, 29(2), 269‚Äì277.

Deng, L. and Yu, D. (2014). ‚ÄúDeep learning: Methods and applications.‚Äù Report no.,

Microsoft (May).

37

Dikanski, H., Hagen-Zanker, A., Imam, B., and Avery, K. (2016). ‚ÄúClimate change
impacts on railway structures: Bridge scour.‚Äù Proceedings of the Institution of Civil
Engineers - Engineering Sustainability, 170.

Ebtehaj, I., Sattar, A. M. A., Bonakdari, H., and Zaji, A. H. (2016). ‚ÄúPrediction of scour
depth around bridge piers using self-adaptive extreme learning machine.‚Äù Journal of
Hydroinformatics, 19(2), 207‚Äì224.
Google (2020). ‚ÄúTime series forecasting.
Hochreiter, S. and Schmidhuber, J. (1997). ‚ÄúLong short-term memory.‚Äù Neural compu-

tation, 9(8), 1735‚Äì1780.

Hong, J.-H., Chiew, Y.-M., Lu, J.-Y., Lai, J.-S., and Lin, Y.-B. (2012). ‚ÄúHoufeng bridge

failure in taiwan.‚Äù Journal of Hydraulic Engineering, 138(2), 186‚Äì198.

Khandel, O. and Soliman, M. (2019). ‚ÄúIntegrated framework for quantifying the eÔ¨Äect
of climate change on the risk of bridge failure due to Ô¨Çoods and Ô¨Çood-induced scour.‚Äù
Journal of bridge engineering, 24(9), 04019090.

Kiarashinejad, Y., Abdollahramezani, S., Zandehshahvar, M., Hemmatyar, O., and
Adibi, A. (2019). ‚ÄúDeep learning reveals underlying physics of light‚Äìmatter interac-
tions in nanophotonic devices.‚Äù Advanced Theory and Simulations, 2(9), 1900088.
Kim, I., Fard, M. Y., and Chattopadhyay, A. (2015). ‚ÄúInvestigation of a bridge pier scour
prediction model for safe design and inspection.‚Äù Journal of Bridge Engineering,
20(6), 04014088.

Lagasse, P F, R. E. V. S. J. D. P. G. R. (1997). INSTRUMENTATION FOR MEASURING
SCOUR AT BRIDGE PIERS AND ABUTMENTS. Transportation Research Board
(TRB), Washington, D.C.

Lamb, R., Aspinall, W., Odbert, H., and Wagener, T. (2017). ‚ÄúVulnerability of bridges to
scour: insights from an international expert elicitation workshop.‚Äù Natural Hazards
and Earth System Sciences, 17(8), 1393‚Äì1409.

Lebbe, M. F., L. W. S. S. and Zhang, K. (2014). ‚ÄúFailure mechanisms of bridge infras-
tructure in an extreme Ô¨Çood event.‚Äù Proceedings of the First International Conference
on Infrastructure Failures and Consequences, Melbourne, Australia.

Lin, Y.-B., Lee, F.-Z., Chang, K.-C., Lai, J.-S., Lo, S.-W., Wu, J.-H., and Lin, T.-K.
(2021). ‚ÄúThe artiÔ¨Åcial intelligence of things sensing system of real-time bridge scour
monitoring for early warning during Ô¨Çoods.‚Äù Sensors, 21(14).

Maroni, A., Tubaldi, E., Val, D. V., McDonald, H., and Zonta, D. (2020). ‚ÄúUsing
bayesian networks for the assessment of underwater scour for road and railway
bridges.‚Äù Structural Health Monitoring, 0(0), 1475921720956579.

McCartney, M., Haeringer, M., and Polifke, W. (2020). ‚ÄúComparison of Machine
Learning Algorithms in the Interpolation and Extrapolation of Flame Describing
Functions.‚Äù Journal of Engineering for Gas Turbines and Power, 142(6).

Mueller, D. S. and Wagner, C. R. (2005). ‚ÄúField observations and evaluations of

streambed scour at bridges.‚Äù Report no., Washington, D.C.

Prendergast, L. and Gavin, K. (2014). ‚ÄúA review of bridge scour monitoring techniques.‚Äù

Journal of Rock Mechanics and Geotechnical Engineering, 6(2), 138‚Äì149.

Ray, A., Rajeswar, S., and Chaudhury, S. (2015). ‚ÄúText recognition using deep blstm
networks.‚Äù 2015 Eighth International Conference on Advances in Pattern Recognition
(ICAPR), 1‚Äì6.

38

Sauer, V. and Turnipseed, D. (2010). Stage measurement at gaging stations. U.S. Geo-

logical Survey (USGS).

Schuring, J. R., Dresnack, R., and Golub, E. (2017). Design and Evaluation of Scour for
Bridges Using HEC-18. New Jersey Department of Transport and Federal Highway
Administration (FHWA).

Schwartz, M. D. (2021). ‚ÄúModern machine learning and particle physics.‚Äù Harvard

Data Science Review.

Semeniuta, S., Severyn, A., and Barth, E. (2016). ‚ÄúRecurrent dropout without memory

loss.‚Äù arXiv preprint arXiv:1603.05118.

Sharafati, A., Haghbin, M., Motta, D., and Yaseen, Z. M. (2021). ‚ÄúThe application of
soft computing models and empirical formulations for hydraulic structure scouring
depth simulation: a comprehensive review, assessment and possible future research
direction.‚Äù Archives of computational methods in engineering, 28(2), 423‚Äì447.

Sheppard, D. M., Melville, B., and Demir, H. (2014). ‚ÄúEvaluation of existing equations
for local scour at bridge piers.‚Äù Journal of Hydraulic Engineering, 140(1), 14‚Äì23.
Transportation Research Board (TRB) (2009). Monitoring scour critical bridges.

NCHRP Synthesis of Highway Practice 396, Washington, D.C.

Van Leeuwen, Z. and Lamb, R. (2014). ‚ÄúFlood and scour related failure incidents at

railway assets between 1846 and 2013.‚Äù Railway Safety & Standards Board.

Wardhana, K. and Hadipriono, F. C. (2003). ‚ÄúAnalysis of recent bridge failures in the
united states.‚Äù Journal of Performance of Constructed Facilities, 17(3), 144‚Äì150.
Xie, P., Zhou, A., and Chai, B. (2019). ‚ÄúThe application of long short-term mem-
ory(lstm) method on displacement prediction of multifactor-induced landslides.‚Äù
IEEE Access, 7, 54305‚Äì54311.

Yousefpour, N., Downie, S., Walker, S., Perkins, N., and Dikanski, H. (2020). ‚ÄúMachine
learning solutions for bridge scour forecast based on monitoring data.‚Äù Transportation
Research Record.

Yousefpour, N. and Pouragha, M. (2022). ‚ÄúPrediction of the post-failure behavior of
rocks: Combining artiÔ¨Åcial intelligence and acoustic emission sensing.‚Äù International
Journal for Numerical and Analytical Methods in Geomechanics, 46(10), 1874‚Äì1894.
Yousefzadeh, R. and Cao, X. (2022). ‚ÄúTo what extent should we trust AI models when

they extrapolate?.‚Äù CoRR, abs/2201.11260.

Zhang, N., Shen, S.-L., Zhou, A., and Jin, Y.-F. (2021). ‚ÄúApplication of lstm approach
for modelling stress‚Äìstrain behaviour of soil.‚Äù Applied Soft Computing, 100, 106959.
Zhang, P., Yin, Z.-Y., Jin, Y.-F., and Ye, G.-L. ‚ÄúAn ai-based model for describing
cyclic characteristics of granular materials.‚Äù International Journal for Numerical
and Analytical Methods in Geomechanics, 44(9), 1315‚Äì1335.

Zounemat-Kermani, M., Beheshti, A.-A., Ataie-Ashtiani, B., and Sabbagh-Yazdi, S.-R.
(2009). ‚ÄúEstimation of current-induced scour depth around pile groups using neural
network and adaptive neuro-fuzzy inference system.‚Äù Applied Soft Computing, 9(2),
746‚Äì755.

39

