CardioLearn: A Cloud Deep Learning Service for Cardiac Disease
Detection from Electrocardiogram

Shenda Hong1, Zhaoji Fu1,2, Rongbo Zhou1, Jie Yu1, Yongkui Li1, Kai Wang1, Guanlin Cheng1
1HeartVoice Medical Technology, Hefei, China
2University of Science and Technology of China, Hefei, China

0
2
0
2

l
u
J

4

]
P
S
.
s
s
e
e
[

1
v
5
6
1
2
0
.
7
0
0
2
:
v
i
X
r
a

ABSTRACT
Electrocardiogram (ECG) is one of the most convenient and non-
invasive tools for monitoring peoples’ heart condition, which can
use for diagnosing a wide range of heart diseases, including Cardiac
Arrhythmia, Acute Coronary Syndrome, et al. However, traditional
ECG disease detection models show substantial rates of misdiag-
nosis due to the limitations of the abilities of extracted features.
Recent deep learning methods have shown significant advantages,
but they do not provide publicly available services for those who
have no training data or computational resources.

In this paper, we demonstrate our work on building, training, and
serving such out-of-the-box cloud deep learning service for cardiac
disease detection from ECG named CardioLearn. The analytic
ability of any other ECG recording devices can be enhanced by
connecting to the Internet and invoke our open API. As a practical
example, we also design a portable smart hardware device along
with an interactive mobile program, which can collect ECG and
detect potential cardiac diseases anytime and anywhere.

KEYWORDS
Deep learning, Healthcare, Electrocardiogram

1 INTRODUCTION
The Electrocardiogram (ECG) is one of the most convenient and
non-invasive tools for monitoring peoples’ heart condition. It is a
kind of physiological signal that records electrical activities of car-
diac muscle over a period of time by placing electrodes and leads on
the human body. ECG can use for diagnosing a wide range of heart
diseases, including Cardiac Arrhythmia, Acute Coronary Syndrome,
et al [2, 18]. It is estimated that more than 300 million ECGs are
recorded worldwide every year [4], which is a tremendous amount
of data for Cardiologists to analyze. Thus, many computer-aided
ECG disease detection methods based on feature extraction and ma-
chine learning have been proposed over the past 50 years, and they
have been used in commercial medical devices. However, existing
commercial ECG disease detection methods still show substantial
rates of misdiagnosis [3, 13, 14], due to the limitations of the abili-
ties of extracted features, and the lack of generalizability which are
tuned for their specific medical devices.

Recently, deep learning methods have shown great potential in
healthcare and medical area [11, 16]. Specifically, there are some pi-
oneer works that show successes of deep learning methods on ECG
disease detection [1, 4, 6, 7, 15, 17, 19] (see [8] for a survey). How-
ever, these methods are still far away from practical applications
because none of these models have been deployed for providing
publicly available ECG disease detection services. Besides, most of

Figure 1: The workflow of CardioLearn ECG disease detec-
tion cloud deep learning service.

these models only trained on single lead 1 ECG data thus, they only
support single lead ECG disease detection, which is insufficient in
most medical area applications.

This demonstration provides CardioLearn, a publicly available
out-of-the-box cloud deep learning service that can be used for
cardiac disease detection from ECG. Any existing ECG recording
devices can be enhanced with cardiac disease detection ability by
connecting to the Internet and invoke our open API. To further
demonstrate such practical usage, we also design a portable smart
hardware device along with an interactive mobile program, so that
people can easily collect their ECG records and detect potential
cardiac diseases anytime and anywhere.

2 SYSTEM DESIGN
This section introduces our system in detail. We first introduce the
details of our deep learning model and the performance tested on
a publicly available open-source dataset. Then we show how we
deploy the model and serve it as a cloud service.

The framework of CardioLearn is shown in Figure 1. We first
build and train two deep neural network models to support applica-
tions in the healthcare environment (outside the hospital, usually
single lead) and medical environment (inside the hospital, usually
12-lead). We are then serving the model by providing an open API
using the HTTP protocol. Moreover, we also design a portable hard-
ware device along with an interactive mobile program as a practical
application.

1Here “lead” means “channel”.

 
 
 
 
 
 
block (AVBI), Left bundle branch block (LBBB), Right bundle branch
block (RBBB), Premature atrial contraction (PAC) and Premature
ventricular contraction (PVC). We report the Receiver Operating
Characteristic curve (ROC curve) and the area under ROC (ROC-
AUC score) for each disease. The results are shown in Table 1 and
Figure 3. We can see that both models achieve higher than 0.93
ROC-AUC scores on almost all diseases. We also notice that AF
detection is even higher than 0.97.

AF

AVBI

LBBB

RBBB

PAC

PVC

Single Lead
12-lead

0.9857
0.9789

0.9508
0.9579

0.9597
0.9385

0.8927
0.9655

0.9343
0.9462

0.9578
0.9609

Table 1: ROC-AUC scores on 2018 China Physiological Sig-
nal Challenge dataset.

2.1 A Deep Learning Model for ECG Disease

Detection

The ECG data usually has two forms of inputs, which are single lead
(inside the hospital, see Figure 5) and 12-lead (outside the hospital,
see Figure 6). Here “lead” has the same meaning as “channel”. To
handle them both, we build two deep neural network models for
each kind using TensorFlow. Their input layers are different, while
the other layers remain the same. In detail, as shown in Figure 2, the
input ECG recording is segmented into several short segments, and
each segment goes through 32-layers of stacked one-dimensional
convolutional layers (CNN) to capture local ECG patterns and shifts.
One recurrent layer (RNN) is then built on top of the convolutional
layers to capture long term variations. Finally, the model applies
multiple dense layers (Dense) on the output of the recurrent layer
to get the predictions of each disease. The objective of the model is
a multi-label learning task because multiple diseases might occur
in the same ECG recording. Moreover, we also introduce shortcut
connections [5] at every two convolutional layers to address the
problems of vanishing/exploding gradients when training a very
deep neural network. The input dimension is downsampled at every
four convolutional layers, and the number of filters increases at
every eight convolutional layers. The CNNs have shared weights
between segments.

Figure 2: Model architecture.

To train the deep model, we collected the training data from
several hospitals, which are 12-lead ECG recordings lasting from 20
s to several minutes. The corresponding diagnosis results were writ-
ten by cardiologists using narrative language; we extract keywords
and integrate them into diagnostic labels based on standard ECG
disease detection systems like [10]. We use Lead I as single lead
data while also collect extra single lead data from mobile devices.
Finally, our 12-lead model can support 43 types of diseases, and a
single-lead model can support 18 types of diseases, both covering
over 99% of total abnormalities in our training data. We optimze the
loss function by reducing the learning rate by a factor of 0.1 when
the validation performance is not improving for 5,000 batches of
each task. We are continuously saving and updating the best model
for each label as the final model.

We tested our model on a publicly available open-source dataset
from 2018 China Physiological Signal Challenge 2 [9]. The challenge
ECG recordings were collected from 11 hospitals sampled as 500
Hz, which contains 6,877 (3178 female, 3699 male) 12-lead ECG
recordings lasting from 6 s to just 60 s. These recordings are never
being used to train our model. We test the model performance
on detecting Atrial fibrillation (AF), First-degree atrioventricular

2http://2018.icbeb.org/Challenge.html

Figure 3: ROC curves on 2018 China Physiological Signal
Challenge dataset.

2.2 Serving Deep Model as a Cloud Engine
We deploy our models using TensorFlow Serving [12] on four cloud
servers. Specifically, we use the Java Client TensorFlow Serving
gRPC API. Each cloud server is equipped with 4-core Intel Xeon
Skylake 6146 3.2 GHz CPU 16GB RAM, and 3 Tesla P4 GPU for
model inference. The information transmission between servers
and clients is based on HTTP protocol. One request of HTTP includ-
ing HEADER and POST. The HEADER includes content type like
“JSON” and authorization information. The authority is a unique
token given by the server. The POST is content type format includes
sampleRate (HZ, sample frequence of ECG signal), adcGain (Analog-
to-Digital Converter gain), dataI, dataII, dataIII, dataAVR, dataAVL,
dataAVF, dataV1, dataV2, dataV3, dataV4, dataV5, dataV6 represents
12 standard leads. One can only fill in dataI and leave others null
for requesting single lead model. The returned result is also in JSON
format. One can easily parse the JSON result and integrate to their
own systems.

The master server maintains a global task queue Q, which con-
sists of all requests from clients. The task queue implements the
First In First Out (FIFO) order. Each request contains authorization
token T , analysis parameters P (sampling rate, for example), and
ECG data D. The disease detection process includes three steps:
(1) authorization, (2) preprocessing, and (3) invoking deep model.
Authorization validates the legality of the request by checking its
unique token T . Once authorization success, the requests are added

Figure 4: Results of stress test.

into the Q and wait for the computation resources. Then, the engine
resamples the original ECG and removes high-frequency noise as
well as low frequency wandering by band-pass filters. After that,
the engine invokes GPU and inference to get the results. If any step
raises exception due to some errors, the request is added into task
queue Q again and wait for the next round analysis. If the process
fails or timeout, the server returns a failure execution information.
Notice that models are served by multiple concurrent processes so
that the time delay of retry is expected to be short.

We run the stress test to validate the performance of cloud serv-
ing using Apache Jmeter 3. We prepare 20,000 samples 12-lead 30
seconds ECG recordings. The number of concurrent processes of
each server is set to 15. The results are shown in Figure 4. The
left figure shows the distribution of process time, and we can see
that almost 99% of requests can be returned within 2.5 seconds.
This time cost shows a promising real-world application because
it reduces one report of ECG disease detection from minutes (by
Cardiologists) to seconds. The right figure shows the test summary.
We can see that the total throughput is 11.5 records per second,
which means CardioLearn can analyze nearly 1 million 30-second
ECG recordings per day. Notice that when handing long term ECG
recordings, we can still keep a comparable execution time, by cut-
ting long term ECG recordings into short recordings and batching
them, where each batch can contain hundreds of short recordings.

3 DEMONSTRATION
Our demonstration consists of two parts: 1) a website of an ECG
analytic tool that provides an out-of-the-box cloud deep learning
service, and 2) a portable hardware device to record ECG as well as
an interactive mobile application to display results 4.

Figure 5 shows the webpage of the ECG analytics tool. It consists
of three steps to get analysis results. First of all, users should pro-
vide necessary parameters of their ECG data, including sampling
frequency, ADC Gain, and baseline voltage. Then, users have two
ways to upload their ECG data: 1) upload comma-separated values
(CSV) file from their computer or 2) copy and paste CSV file into
the website textbox directly. Besides, we also provide a variety of
ECG records as example data. Finally, after clicking “Analysis” bot-
tom, the formatted ECG report, including ECG records and analysis
results, shows on the bottom as in Figure 5. In the ECG report,
the middle main part shows ECG recordings, with pink mesh grid

3https://jmeter.apache.org
4For more information, please visit https://github.com/hsd1503/CardioLearn.

Figure 5: Demo of Webpage for Cloud Deep Learning Service
(12-lead ECG).

background that helps cardiologists to measure and review the
reports. The left bottom shows disease detection results given by
CardioLearn, which is Atrial Fibrillation in this case. The upper
part shows ECG measurements like PR interval, QRS width, et al.,
which also help cardiologists for a better review.

Figure 6 shows our portable hardware device and interactive
mobile application. The portable hardware device weighs around
10 g, and the size is 75 mm length, 25 mm width, and 4.5 mm height,
which is very convenient to carry on in daily life. A Bluetooth mod-
ule is equipped on the chip for connecting with a mobile phone.
The interactive mobile application is developed based on WeChat
Mini Program so that it can support any mobile phone, including
Android or iOS, if they can install WeChat. The usage is simplified
to only one step: just put the user’s fingers on the metal electrodes
and wait for 30 seconds. The device records ECG and sends the
data to the application via Bluetooth transmission, the mobile appli-
cation then sending the request to CardioLearn for analysis, and
finally display the returned results on the user’s mobile phone. The
ECG records and results can also be retrospected from the mobile
application.

4 CONCLUSION
In this paper, we introduce CardioLearn, a publicly available out-
of-the-box cloud deep learning service for cardiac disease detec-
tion from ECG, which can help improve the analytic ability of
existing ECG recording devices. Besides, we also design a portable

Figure 6: Demo of Portable Hardware Device and Mobile Application (Single Lead ECG).

smart hardware device along with an interactive mobile program
to demonstrate such practical usage. We wish everyone can easily
and early detect potential cardiac diseases anytime and anywhere.

REFERENCES
[1] Zachi I Attia, Suraj Kapa, Francisco Lopez-Jimenez, Paul M McKie, Dorothy J
Ladewig, Gaurav Satam, Patricia A Pellikka, Maurice Enriquez-Sarano, Peter A
Noseworthy, Thomas M Munger, et al. 2019. Screening for cardiac contractile
dysfunction using an artificial intelligence–enabled electrocardiogram. Nature
medicine 25, 1 (2019), 70.

[2] Tomas B Garcia. 2014. Introduction to 12-lead ECG: The art of interpretation. Jones

& Bartlett Publishers.

[3] Maya E Guglin and Deepak Thatai. 2006. Common errors in computer elec-
trocardiogram interpretation. International journal of cardiology 106, 2 (2006),
232–237.

[4] Awni Y Hannun, Pranav Rajpurkar, Masoumeh Haghpanahi, Geoffrey H Tison,
Codie Bourn, Mintu P Turakhia, and Andrew Y Ng. 2019. Cardiologist-level
arrhythmia detection and classification in ambulatory electrocardiograms using
a deep neural network. Nature medicine 25, 1 (2019), 65.

[5] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. 2016. Identity mappings
in deep residual networks. In European conference on computer vision. Springer,
630–645.

[6] Shenda Hong, Meng Wu, Yuxi Zhou, Qingyun Wang, Junyuan Shang, Hongyan Li,
and Junqing Xie. 2017. ENCASE: An ENsemble ClASsifiEr for ECG classification
using expert features and deep neural networks. In 2017 Computing in Cardiology
(CinC). IEEE, 1–4.

[7] Shenda Hong, Cao Xiao, Tengfei Ma, Hongyan Li, and Jimeng Sun. 2019. MINA:
multilevel knowledge-guided attention for modeling electrocardiography signals.
In Proceedings of the 28th International Joint Conference on Artificial Intelligence.
AAAI Press, 5888–5894.

[8] Shenda Hong, Yuxi Zhou, Junyuan Shang, Cao Xiao, and Jimeng Sun. 2019.
Opportunities and Challenges in Deep Learning Methods on Electrocardiogram
Data: A Systematic Review. arXiv preprint arXiv:2001.01550 (2019).

[9] Feifei Liu, Chengyu Liu, Lina Zhao, Xiangyu Zhang, Xiaoling Wu, Xiaoyan
Xu, Yulin Liu, Caiyun Ma, Shoushui Wei, Zhiqiang He, et al. 2018. An Open
Access Database for Evaluating the Algorithms of Electrocardiogram Rhythm
and Morphology Abnormality Detection. Journal of Medical Imaging and Health
Informatics 8, 7 (2018), 1368–1373.

[10] Jay W Mason, E William Hancock, and Leonard S Gettes. 2007. Recommenda-
tions for the standardization and interpretation of the electrocardiogram: part
II: electrocardiography diagnostic statement list a scientific statement from the
American Heart Association Electrocardiography and Arrhythmias Committee,
Council on Clinical Cardiology; the American College of Cardiology Foundation;
and the Heart Rhythm Society Endorsed by the International Society for Com-
puterized Electrocardiology. Journal of the American College of Cardiology 49, 10
(2007), 1128–1135.

[11] Riccardo Miotto, Fei Wang, Shuang Wang, Xiaoqian Jiang, and Joel T Dudley. 2017.
Deep learning for healthcare: review, opportunities and challenges. Briefings in
bioinformatics 19, 6 (2017), 1236–1246.

[12] Christopher Olston, Noah Fiedel, Kiril Gorovoy, Jeremiah Harmsen, Li Lao, Fang-
wei Li, Vinu Rajashekhar, Sukriti Ramesh, and Jordan Soyke. 2017. Tensorflow-
serving: Flexible, high-performance ml serving. arXiv preprint arXiv:1712.06139
(2017).

[13] Jürg Schläpfer and Hein J Wellens. 2017. Computer-interpreted electrocardio-
grams: benefits and limitations. Journal of the American College of Cardiology 70,
9 (2017), 1183–1192.

[14] Atman P Shah and Stanley A Rubin. 2007. Errors in the computerized electro-
cardiogram interpretation of cardiac rhythm. Journal of electrocardiology 40, 5
(2007), 385–390.

[15] Supreeth P Shashikumar, Amit J Shah, Gari D Clifford, and Shamim Nemati. 2018.
Detection of paroxysmal atrial fibrillation using attention-based bidirectional
recurrent neural networks. In Proceedings of the 24th ACM SIGKDD International
Conference on Knowledge Discovery & Data Mining. ACM, 715–723.

[16] Cao Xiao, Edward Choi, and Jimeng Sun. 2018. Opportunities and challenges in
developing deep learning models using electronic health records data: a system-
atic review. Journal of the American Medical Informatics Association 25, 10 (2018),
1419–1428.

[17] Yanbo Xu, Siddharth Biswal, Shriprasad R Deshpande, Kevin O Maher, and Jimeng
Sun. 2018. Raim: Recurrent attentive and intensive model of multimodal patient
monitoring data. In Proceedings of the 24th ACM SIGKDD International Conference
on Knowledge Discovery & Data Mining. ACM, 2565–2573.

[18] Frank G Yanowitz. 2012. Introduction to ECG interpretation. LDS Hospital and

Intermountain Medical Center (2012).

[19] Yuxi Zhou, Shenda Hong, Junyuan Shang, Meng Wu, Qingyun Wang, Hongyan
Li, and Junqing Xie. 2019. K-margin-based residual-convolution-recurrent neural
network for atrial fibrillation detection. In Proceedings of the 28th International
Joint Conference on Artificial Intelligence. AAAI Press, 6057–6063.

