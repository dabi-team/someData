Deep-Learning Based Auction-Driven Beamforming

for Wireless Information and Power Transfer

Ali Bayat, Student Member, IEEE, and Sonia A¨ıssa, Fellow, IEEE

1

1
2
0
2

l
u
J

7

]
P
S
.
s
s
e
e
[

1
v
6
8
9
2
0
.
7
0
1
2
:
v
i
X
r
a

Abstract

In this paper, we design a deep learning based resource allocation framework, in the form of an

auction, for simultaneous information and power transfer from a hybrid access point (AP) to information

devices and energy harvesting devices, respectively. Using Myerson’s lemma and the concept of virtual

welfare maximization, we develop an optimal dominant-strategy incentive-compatible mechanism for

the AP to maximize its expected revenue, based on the devices’ bid proﬁles, valuation distributions,

demand proﬁles, and channel state information. In so doing, we formulate the revenue maximization

problem, which is a mixed-integer non-linear program, and propose an efﬁcient Branch-and-Bound

(BnB) algorithm to solve the problem using semideﬁnite relaxation technique in each branch. Since

the problem has exponential time complexity, using BnB algorithms can be impractical for real-time

applications. To circumvent this, a deep neural network (DNN) is proposed, and trained to predict

the optimal mechanism for beamforming the data and the energy towards the information and energy

devices, respectively. We use the BnB algorithm to solve the problem ofﬂine and populate the training

dataset. The proposed DNN architecture is indeed a multi-layer perceptron, which is trained well to map

the heterogeneous input to the desired output with high accuracy. Furthermore, we propose a heuristic

iterative solution whose accuracy performance is comparable to that of the DNN-based solution. The

heuristic solution has polynomial time complexity whereas the DNN-based solution has linear time

complexity.

Index Terms

Auction theory; Beamforming; Deep learning; Simultaneous wireless information and power transfer

(SWIPT).

The authors are with the Institut National de la Recherche Scientiﬁque (INRS), Montreal, QC, Canada (e-mail:

ali.bayat@inrs.ca; sonia.aissa@inrs.ca).

This work was supported by a Discovery Grant from the Natural Sciences and Engineering Research Council (NSERC) of

Canada.

 
 
 
 
 
 
2

A. Context and Motivation

I. INTRODUCTION

In the era of massive machine-type communications and the Internet of Things, simultaneous

wireless information and power transfer (SWIPT) is arising as a chief technology for supply-

ing energy to, and information exchange with, numerous low-power devices in a plethora of

applications. By judiciously superposing information and power transfer, SWIPT is not only

envisioned to help in improving system performance and service quality, e.g., in terms of

spectral efﬁciency, time delay, and energy efﬁciency, but also in managing interferences, thereby

increasing substantiality [1].

In spite of many theoretical advances for implementing SWIPT systems (cf. [2] and references

therein), in order to take beneﬁt of SWIPT technology and materialize its large-scale penetration

in wireless systems and networks, several challenges remain to be addressed. A chief challenge is

the design of beamforming-based resource allocation algorithms of low computational complexity

and suitable for real-time applications. One such complexity happens when looking for the

optimal set of user equipments (UEs) in the network,1 including information receivers (IRs) and

energy receivers (ERs), to maximize a speciﬁc objective function, e.g., revenue of the service

provider or social welfare of the users. In these instances, the optimization problem generally

lies in the class of mixed-integer non-linear programming (MINLP) problems.

The main issue is how to manage and allocate the limited network resources in an efﬁcient

way. Resource management/allocation in wireless networks are envisioned to be mainly based

on user-centric online service provisioning schemes, where users act as economical agents that

compete for their target services according to competition market models such as auctions [3],

[4]. Auctions are probably the best marketing model when entities tend to behave selﬁshly to

maximize their own utility. The inclusion of the economical behavior of the agents in managing

the resources grants the agents more degrees of freedom to bid for their desired service based on

their demands and their monetary budgets. It is foreseen that marketing and pricing tasks will

no more be settled statistically in an ofﬂine service-level agreement, but rather be of dynamic,

online, and cross-layered design nature [4]–[7].

In this context, there is a large body of work on the application of game theory and auction

theory for the design and analysis of resource allocation mechanisms in wireless communication

1The terms user, UE, and device, will be used interchangeably throughout the paper.

3

networks [3], [4], [7]. In particular, a good survey on auction approaches for resource allocation

in wireless systems is carried out in [3]. In [7], the authors conducted a contemporary survey on

the application of auction mechanisms for the virtualization of wireless networks, in particular

5G cellular networks. When it comes to the application of game (auction) theory in wireless

powered communications, the works in [8]–[15] are important to recall. In the said works, a

wireless power transfer system (WPT) in which a central unit transmits energy to ERs via energy

beamforming is considered. So far, and to the best of our knowledge, leveraging the merits of

auctions for the design of SWIPT systems remains unexplored.

As aforementioned, one major challenge in designing dynamic auction mechanisms for wire-

less systems is the computational complexity that may hinder real-time implementation. As an

example, when the mechanism objective is to maximize the revenue of the service provider, e.g.,

the AP in a SWIPT network, ﬁnding the optimal set of users that satisﬁes this objective is usually

formulated as a MINLP problem, which is in general NP-hard with no efﬁcient global optimal

algorithm available. The optimal solutions to MINLP problems are usually achieved by the

Branch-and-Bound (BnB) algorithms. However, the computational complexity of such algorithms

is exponential, making them impractical for real-time implementation. Sub-optimal solutions,

such as heuristic algorithms, can certainly reduce the computational complexity, however, they

usually suffer two problems: i) the difﬁculty in controlling the performance gap between the

sub-optimal solution and the optimal one, and ii) although they converge faster than the BnB

algorithms, most of them are still too computationally complex to be suitable for real-time

implementation.

One promising solution approach to tackle these computational complexities is by applying

machine learning (ML) techniques, in particular deep learning (DL), which is considered as the

key branch of ML, with focus on learning and prediction by means of training (deep) neural

networks (DNNs). In [16], the authors modeled multi-item auctions as a multi-layer neural

network and framed an optimal auction design as a constrained learning problem. The proposed

DNN, called RegretNet, works for bidders with discrete additive, unit-demand, and combinatorial

valuations. As such, it is not applicable for bidders with continuous demand and bid values. Also,

RegretNet is not directly applicable for time-varying environments like in the case of wireless

networks, where the availability of the commodities depend hugely on the channel conditions. In

[17], a DL-based resource allocation scheme for device-to-device communications was proposed.

Therein, DL was leveraged for learning efﬁcient pruning policies in BnB algorithms aimed for

4

solving the corresponding MINLP problem. DL was also leveraged in [17] to ﬁnd the optimal

branching of the corresponding BnB algorithm in an iterative algorithm. It is noted that the latter

work does not address computational analysis. In [18], a resource allocation algorithm based on

deep transfer learning was proposed for ultra-reliable low-latency communications.

Though there are works such as [19] and [20] that applied DL and reinforcement learning

techniques in SWIPT systems, none is related to ﬁnding the optimal resource allocation solution

while tackling the computational complexity issue. For instance, in [19], the authors aimed

for the optimal modulations for point-to-point SWIPT system via the application of NN-based

auto-encoders; [20] proposed an adaptive rate and energy harvesting interval control algorithm

based on the model-free reinforcement learning technique for SWIPT; and [21] applied deep

reinforcement learning for simultaneous energy harvesting and information transmission in a

MIMO (multi-input multi-output) full-duplex system.

B. Contributions

Focused on SWIPT, in this work we consider a single-band heterogeneous SWIPT network,

in which a multi-antenna AP attempts to maximize its revenue by beamforming the information

and energy towards the single-antenna IRs and ERs, respectively. The network operates in an

auction framework. Based on the bids, requested service levels, learned valuation distributions,

and CSI of the users, the AP—as the auctioneer and the seller—aims to ﬁnd the optimal set

of users and the optimal pricing that maximize its revenue while encouraging the users to bid

truthfully.

We formulate this mechanism design problem as a MINLP problem, and solve it by using

a proposed efﬁcient BnB algorithm while applying semideﬁnite programming (SDP) technique

in each branch. Since solving this problem via the BnB algorithm is time-greedy, particularly

when the number of devices in the network is fairly large, the branching algorithms are no more

practical due to their excessive computation delays—exponential time complexity. We tackle

the time complexity problem by applying DL, particularly DNNs, to output the solution almost

in real time. Before that, we ﬁrst propose a heuristic iterative algorithm based on goodness

factors which are separately deﬁned for the two types of users, i.e., IRs and ERs. In spite of

the good accuracy of the heuristic algorithm, we reach for the more computational-efﬁcient DL-

based solutions. For such, we ﬁrst interpret the problem of ﬁnding the optimal set of users as a

multi-label classiﬁcation ML problem. Then, we propose a DNN-based architecture—multi-layer

5

perceptron (MLP) to be more speciﬁc—to solve the classiﬁcation problem and ﬁnd the desired

optimal set of users, after which the optimal beamforming vectors can be found by one-time

running of a semideﬁnite relaxation (SDR)-based algorithm or a faster uplink-downlink duality

(UDD)-based one [22], [23].

To gather the required training data, we solve the MINLP problem ofﬂine for a very large

number of realizations of the heterogeneous input data to the AP, save the training dataset and

the obtained training labels in a database, and then use the latter to train the proposed DNN

so as to estimate the allocation rule, i.e., the optimal set of users, of the proposed revenue-

maximizing auction mechanism. In stack contrast to most DL-based approaches in the ﬁeld of

wireless communications, where the input data is homogeneous, e.g., the channel matrix, here we

face a heterogeneous input data which makes the decision-making on the best DNN architecture

and input pre-processing layers very challenging.

After trying several network architecture candidates, including convolutional neural networks,

residual neural networks, and mixed-input neural networks, we found the MLP architecture

with the goodness factor-based preprocessing layer to be the most promising. We analytically

compare the computational complexity of the global optimal BnB algorithm (with the inner

branch algorithms being SDR or UDD) to that of the heuristic algorithm and the DNN-based

solution. In particular, we show that the heuristic algorithm follows the accuracy performance of

the DNN-based solution but with polynomial time complexity compared to the linear complexity

of the DNN approach.2

C. Organization

In detailing the aforementioned contributions, the remainder of the paper is organized as

follows. Section II models the SWIPT network, both physically and economically. In Section III,

we formulate the revenue maximization problem. In Section IV, we ﬁnd the feasible allocation

set as part of the solution of the revenue-maximization problem using SDR-based technique.

2While this work was in progress, preliminary results related to the special case where the network is comprised of information

devices only and, speciﬁcally, on the application of DL for the data beamforming to IRs with the objective of maximizing the

social welfare of the users, were submitted to IEEE Globecom 2020 [24]. The present paper has the following key differences

with the latter: i) designing revenue-maximizing mechanism for a SWIPT network whereas [24] proposes a DNN for social

welfare maximization in a wireless information transfer (WIT) network, ii) here, an efﬁcient BnB algorithm to ﬁnd the optimal

solutions is proposed, and iii) a heuristic goodness-based algorithm is also proposed and its performance is compared for different

numbers of served IR and ER devices.

6

Therein, we also investigate the two particular cases of the SWIPT model: WIT and WPT.

In section V, the optimal revenue-maximizing mechanism is obtained. Section VI presents an

efﬁcient BnB algorithm to obtain the optimal allocation rule along with a heuristic iterative

algorithm which delivers a sub-optimal solution. Section VII presents the proposed DNN-based

solution, and discusses its architecture and training. Therein, a computational complexity analysis

is also provided. In section VIII, we evaluate the performance of the proposed DNN for three

network operation modes: SWIPT, WIT, and WPT. We also compare the accuracy of the proposed

DNN-based and heuristic methods. Finally, Section IX concludes the paper.

Notations: The following set of notations will be adopted throughout the paper. Vectors and

matrices are written with bold lower- and upper-case letters, respectively. Symbols (.)T and (.)H

denote the transpose and conjugate transpose operators. The identity matrix of order m is denoted

by Im, tr(A) is the trace of square matrix A, and 0 is a zero vector with proper dimension. The
l1-norm and l2-norm (Euclidean) are denoted by (cid:107).(cid:107)1 and (cid:107).(cid:107), respectively, and E[.] stands for

mathematical expectation.

II. THE SWIPT NETWORK MODELING

Modeling the SWIPT network consists of the physical modeling of the network elements, the

economical (bidding) behavioral modeling of the devices, and the framework of the auction.

A. Physical Modeling

The SWIPT network consists of a AP serving multiple devices within a shared spectrum band.

The AP is equipped with M antennas, and has a power budget of P Watts. A total number of

K = I + J UEs coexist in the network, with I denoting the number of IRs, and J being

the number of ERs. Set I = {1, . . . , I} contains the indices of the information devices, and

J = {1, . . . , J} is the index set of the energy devices. All devices are equipped with single

antennas, and work in half-duplex mode similar to the AP. The AP is to provide wireless energy

to ERs, and to send data to IRs. Without loss of generality, we consider linear precoding at

the AP, such that each ER/IR is assigned with one dedicated energy/information transmission

beam.3 The signal transmitted from the AP is given by

x =

(cid:88)

i∈I

wisIRi +

(cid:88)

j∈J

vjsERj ,

(1)

3Later in Section IV, we will show that only one beamforing vector is sufﬁcient for all ERs.

7

where, for any IRi, i ∈ I, wi ∈ CM ×1 is the beamforming vector and sIRi is the information-
bearing signal, and where, for any ERj, j ∈ J , vj ∈ CM ×1 is the beamforming vector and sERj
is the energy-carrying signal.

For the information signals, we assume Gaussian inputs, i.e., the sIRi’s are i.i.d. circularly-

symmetric complex Gaussian (CSCG) random variables with zero mean and unit variance,

denoted by sIRi ∼ CN (0, 1), i ∈ I. For the energy signals, since sERj , j ∈ J , carries no

information, it can be any arbitrary signal that satisﬁes the radio regulations on microwave

radiation [25]. Without loss of generality, we assume that the sERj ’s are independent white
sequences from an arbitrary distribution with E (cid:2)|sERj |2(cid:3) = 1, j ∈ J . Given the limit P on the
AP’s transmit power, the constraint E (cid:2)xHx(cid:3) = (cid:80)

j∈J (cid:107)vj(cid:107)2 ≤ P must hold.

i∈I (cid:107)wi(cid:107)2 + (cid:80)

The fading channels between the transmitter and the receivers are quasi-static, i.e., chan-

nel coefﬁcients are assumed to be ﬁxed during the channel coherence time. Denote hi =
(hi,1, . . . , hi,M )T and gj = (gj,1, . . . , gj,M )T as the channel vectors from the AP to IRi and ERj,
respectively, where (cid:107)hi(cid:107)2 = σ2

gj for i ∈ I and j ∈ J . The channel vectors
hi, i ∈ I, and gj, j ∈ J , are drawn independently from continuous distribution functions Fhi(hi)
and Fgj (gj), with hi,m and gj,m being the complex channel gains from the mth antenna of the
AP array, m ∈ {1, . . . , M }, to IRi and ERj, respectively. These channel vectors are assumed to

hi and (cid:107)gj(cid:107)2 = σ2

be perfectly tracked at the devices and fed back to the AP via an error-free zero-delay feedback

channel.

The received base-band equivalent signal at IRi, i ∈ I, is

yi = hT

i x + zi,

(2)

where zi ∼ CN (0, σ2

i ) is the i.i.d. Gaussian noise. Therefore, the signal-to-interference-plus-noise

ratio (SINR) of information receiver IRi, i ∈ I, can be written as

Γi =

(cid:80)

k∈I,k(cid:54)=i |hT

j∈J |hT

i vj|2 + σ2
i

|hT
i wi|2
i wk|2 + (cid:80)
wH
i Riwi
k Riwk + (cid:80)

=

(cid:80)

j∈J vH
i ] is the covariance matrix, which for the case of full CSI knowledge becomes

j Rivj + σ2
i

k∈I,k(cid:54)=i wH

,

(3)

where Ri = E[hihH
Ri = hihH
i .

The SINR is directly related to the device’s performance indicators such as the bit error rate

(BER) and the data rate. For example, under a ﬁxed BER and assuming quadrature-amplitude

modulation, a practical achievable rate can be computed as Ri = log(1+Γi/Υ) bps/Hz, in which

8

Υ denotes the SNR (signal-to-noise ratio) gap to capacity. The SNR gap is always greater than

1 (0 dB), and it gives an approximate relation between the SINR and the rate.

The received power at ERj, j ∈ J , is given by

Qj =

=

(cid:88)

i∈I
(cid:88)

i∈I

|gT

j wi|2 +

(cid:88)

k∈J

|gT

j vk|2

wH

i Cjwi +

(cid:88)

k∈J

vH

k Cjvk,

(4)

where Cj = E[gjgH
Cj = gjgH
j .

j ] is the covariance matrix, which for the case of full CSI knowledge becomes

B. Bidding Modeling

The AP as the service seller plays the role of the auctioneer as well. The devices play the roles

of bidders which have different service valuations sending their bids in each round of auction

to get served by the AP. The AP solicits the devices’ bids in a sealed fashion, i.e., the devices

are not aware of each others’ bids.

It is assumed that all devices have non-zero service requests and play in all auction rounds.

Each IRi, i ∈ I, sends its service request in the form of the minimum SINR, γi, required to

receive its data in the auction duration τa, by bidding bIRi. Each ERj, j ∈ J , requests qj units

of energy for the auction duration τa by bidding bERj . The AP knows in advance that IRi and

ERj draw their private valuations νIRi and νERj from the distributions FIRi and FERj in each
round of auction.4 These distributions are assumed independent, but not necessarily identical.

Without loss of generality, we set τa = 1. Also, let γ = (γ1, . . . , γI)T and q = (q1, . . . , qJ )T
denote the demand proﬁles of IRs and ERs, respectively, and denote bIR = (bIR1, . . . , bIRI )T and
bER = (bER1, . . . , bERJ )T as the bid proﬁles of IRs and ERs, respectively.

C. Auction Framework

We consider a single-parameter (or single-dimensional) auction environment, where the out-

comes of the AP as the auction mechanism designer are two rules: (i) the allocation rule a =
( aIR
aER), where aIR = (aIR1, . . . , aIRI )T and aER = (aER1, . . . , aERJ )T , with each element of vector

4By private values, it is meant that the values are unknown to the seller (AP) and to other bidders. Valuation is the maximum

willingness-to-pay of an agent for the commodity being sold. Also, the distributions FIRi and FERj can be estimated (learned)

from the UEs’ bids history in the past auctions [26], [27].

9

aIR (aER) being an indicator for whether IRi (ERj) is to be served or not and, thus, aIR ∈ {0, 1}I
(aER ∈ {0, 1}J ); and (ii) the payment rule p = ( pIR
pER), where pIR = (pIR1, . . . , pIRI )T and
pER = (pER1, . . . , pERJ )T , with each element of vector pIR (pER) denoting the amount that IRi
(ERj) is required to pay the auctioneer, i.e., the AP, during any round of auction. As depicted in

Fig. 1, each round of auction is composed of four parts: (i) bids-and-demands (B&D) acquisition,

(ii) CSI acquisition, (iii) auction results announcing, and (iv) beamforming.

Fig. 1. Breakout of each auction round.

To ﬁnd the optimal beamforming vectors w(cid:63)

j , j ∈ J , the key step is to ﬁnd the
optimal allocation vector a(cid:63) and the optimal payment vector p(cid:63) that maximize the revenue of

i , i ∈ I, and v(cid:63)

the AP. Then, the AP sends the pairs (a(cid:63)

IRi, p(cid:63)
IRi

) and (a(cid:63)

ERj , p(cid:63)

ERj

) to IRi and ERj, respectively,

as the auction result to let them know whether they have won the auction and how much they

should pay in case of a win.5

At the beginning of each auction round, the AP solicits the UEs for their demands and

their corresponding bids during the B&D-acquisition period. Then, the AP acquires the CSI.6

Afterwards, the AP solves for the optimal allocation rule and payment rule that maximize

its expected revenue while keeping the devices incentivized to play truthfully, announces the

allocation-payment rules to all UEs to let them know who are going to get service and how

much to pay for it and, ﬁnally, performs joint beamforming to transfer the information and

power to the chosen UEs.

5Allocation (payment) “rule” and allocation (payment) “vector” are used interchangeably throughout this paper.

6To estimate the CSI, one can consider either one-way training by assuming channel reciprocity, or two-way training which

requires each receiver to perform channel estimation followed by feedback to the AP, which in turn will consume additional

energy. In practice, there exists a design tradeoff especially for the ERs: higher accuracy for both channel estimation and feedback

reporting may lead to higher harvested energy due to the transmit beamforming gain, but also induces higher energy consumption

that can even offset the harvested energy gain [28]. For simplicity, in this work we assume that such energy consumption at ERs

is negligible compared to their harvested energy, and that the training time is also negligible compared to the auction period. It

is assumed that the auction duration is equal to the channel coherence time, and is much larger that the CSI acquisition duration.

CSIacquisitionB&D acquisitionAnnouncingauction resultsAuction duration, τaJoint information and energy beamformingD. Utility Functions

First off, for ease of writing, let us deﬁne K = {1, . . . , I − 1, I, I + 1, . . . , I + J} as the

ordered set of all the UEs in the SWIPT network. With this notational convention, UEk = IRk

10

for k ∈ I and UEk = ERk−I when k ∈ {I + 1, . . . , I + J}. We also denote the bid vector by
b = ( bIR
bER

), and the demand vector by d = (γ

q).

In designing optimal mechanisms for auctions, there are two fundamental objectives: social

welfare, a.k.a. social surplus, and revenue, a.k.a. proﬁt.

Revenue generated from the allocation-payment pair (a, p) constitutes the utility of the AP.

Speciﬁcally, it is the cumulative payment of the bidders minus the service cost c:7

uAP =

(cid:88)

k∈K

pk − c.

(5)

For UEk, k ∈ K, with valuation νk

8 , the utility—assuming the quasi-linear model [29]—is

deﬁned as follows:9

uk = νk ak − pk.

(6)

It should be emphasized that ak and pk depend on the bid proﬁle b.

The social welfare, resulting from the allocation rule a, is the cumulative valuations of all

agents in the auction minus the service cost, i.e.,

S(ν, a) =

(cid:88)

k∈K

νk ak − c = aT ν − c,

(7)

where vector ν = ( νIR

νER), in which νIR = (νIR1, . . . , νIRI )T and νER = (νER1, . . . , νERJ )T ,
holds the valuations of the UEs. The CSI acquisition costs can be regarded as part of the total

service cost c. In this work, just for simplicity and without affecting the contributions of the
paper, the cost function is assumed zero. Thus, uAP = (cid:80)
T νIR + aER
S(ν, a) = aT ν = aIR

k∈K pk = (cid:80)
j∈J pERj , and
T νER. Bid bk is the number that UEk, k ∈ K, declares to the

i∈I pIRi + (cid:80)

AP as payment for its demand dk, whereas valuation νk is the true belief of the device about its

demand dk.

7Note that the service cost c depends on the allocation rule a.

8This parameter should not be mistaken with the energy beamforming vector vj of ERj.

9In quasi-linear utility model, an agent goal is to choose a bid that maximizes the difference between his valuation and his

payment.

11

III. THE PROBLEM FORMULATION

Finding the optimal revenue maximizing (Rmax) mechanism is equivalent to ﬁnding the

optimal allocation and payment rules. These rules can be obtained by solving the following

Rmax problem:

Eν [uAP] = Eν

max
a∈AF

(cid:35)

pk

,

(cid:34)

(cid:88)

k∈K

(8)

where the expectation is w.r.t. the distribution FK = (cid:81)
j∈J FERj over
the bidders’ valuations νk, k ∈ K. In (8), AF is the set of all feasible allocation vectors, which

k∈K Fk = (cid:81)

i∈I FIRi

(cid:81)

depends on the CSI of the channels hi, i ∈ I, and gj, j ∈ J , and on the devices’ demand

proﬁle d. An allocation vector is deemed feasible if the minimum power required to satisfy the

demand constraints of the subset of devices represented by that allocation vector is less than the

power budget of the AP.

The problem in (8) states that the optimal allocation vector a(cid:63) corresponds to the feasible

set of users that results in the largest sum-payment. However, the payment rule p itself should

be carefully found to keep the devices incentivized to play truthfully. In fact, there are three

unknowns in (8): a(cid:63), p(cid:63) and AF. The latter is independent of the ﬁrst two unknowns and is

what is ﬁrstly obtained in Section IV. The revenue-maximizing mechanism which constitutes

the optimal pair (a(cid:63), p(cid:63)) will be obtained in Section V.

IV. FINDING THE FEASIBLE ALLOCATION SET AF

In order for the AP to ﬁnd the feasible allocation vectors out of all possible realizations of

allocation vectors a(l) ∈ {0, 1}K, l ∈ {0, 1, . . . , 2K − 1}, a series of non-convex optimization
problems should be solved. Let us correspond a subset A(l) ⊂ K to each a(l) = (a(l)
K )T
for any l ∈ {0, 1, . . . , 2K − 1}, so that UEk ∈ A(l) iff a(l)
k = 1, k ∈ K. Superscript l is the
decimal representation of the binary vector a(l). We put the IR-type and the ER-type devices in
A(l) into the subsets A(l)
ER, respectively. Similarly, a(l) =
In general, we face a MINLP problem. In the worst-case, there would be 2K − 1 optimization

IR and A(l)

1 , . . . , a(l)

a(l)
IR
a(l)
ER

(cid:19)
.

(cid:18)

problems to solve in order to ﬁnd AF. Hence, the problem has exponential time complexity.

To illustrate how a(l) is interpreted, consider the example of I = 3 and J = 1, which results

in K = 4 devices and the index set K = {1, 2, 3, 4}. Then, a(0) = (0, 0, 0, 0)T corresponds to

A(0) = ∅, meaning that no devices are chosen for allocation; a(1) = (0, 0, 0, 1)T corresponds

to A(1) = {4}, meaning that no IR devices are chosen and the only ER device is selected for

12

allocation; and a(2) = (0, 0, 1, 0)T corresponds to A(2) = {3} which means that only IR3 is

chosen for allocation.

Each problem corresponding to a(l) is a power minimization problem, which consists of ﬁnding

the minimum transmit power required by the AP to fulﬁll the demands of the chosen UEs in

subset A(l), and is formulated as follows

P min

A(l) = min

wi, i∈A(l)
IR
vj , j∈A(l)
ER

(cid:88)

i∈A(l)
IR

(cid:107)wi(cid:107)2 +

(cid:88)

(cid:107)vj(cid:107)2,

j∈A(l)
ER

s.t. : Γi ≥ γi, i ∈ A(l)
IR

Qj ≥ qj, j ∈ A(l)
ER,

(9)

where Γi and Qj are shown in (3) and (4), respectively. We recall that the γ-parameters imply

the SINRs required for achieving certain data rates at the IRs, and that the q-parameters describe

the amount of input power needed by ERs to meet an equivalent output DC power requirement.

If the found P min
A(l)

in (9) is within the AP’s power budget P , then the corresponding A(l) is

a feasible subset of UEs and, equivalently, a(l) ∈ AF. Furthermore, the feasible subsets are

downward-closed, which means that subsets of feasible sets are feasible themselves.
i , i ∈ I, and Vj = vjvH

j , j ∈ J , we can write the original
quadratically-constraint quadratic problem (QCQP) (9) in the following format which can be

By deﬁning Wi = wiwH

efﬁciently solved by SDR techniques.

P min

A(l) = min

Wi, i∈A(l)
IR
Vj , j∈A(l)
ER

tr(Wi) +

(cid:88)

i∈A(l)
IR

s.t. : tr(RiWi) − γi

(cid:16) (cid:88)

(l)

k∈AIR
k(cid:54)=i

tr(Vj)

(cid:88)

j∈A(l)
ER

tr(RiWk) +

(cid:17)

tr(RiVj)

≥ γiσ2

i , i ∈ A(l)
IR,

(cid:88)

j∈A(l)
ER

tr(CjVk) ≥ qj, j ∈ A(l)
ER,

(10)

tr(CjWk) +

(cid:88)

k∈A(l)
IR

(cid:88)

k∈A(l)
ER

Wi (cid:23) 0, i ∈ A(l)
IR,

Vj (cid:23) 0, j ∈ A(l)
ER,

where Ri (cid:23) 0 and Ci (cid:23) 0. The optimization problem in (10) is of conic form, and can be solved

using standard tools such as CVX [30]. It can be understood from [23] that the SDR problem

in (10) is tight meaning that the solutions W(cid:63)

i ’s and V(cid:63)

j ’s are rank-1 maximum. This will be

further explained in subsection IV-C.

13

Next, to further discuss the solution to (10), we study two particular models of the network:

(i) the WIT scenario, where only IR devices are active, and (ii) the WPT scenario, which

corresponds to the network where only the ER devices are active. After solving the problem

related to either scenario with conventional optimization tools and techniques, we argue the

inherent time-greediness feature of these techniques for real-time applications like our network

model, which makes such techniques loose their applicability. We propose alternative sub-optimal

solutions in subsection VI-B for each scenario.

A. Wireless Information Transfer Network

Considering IR devices only in the network, i.e., K = I, problem (9) becomes

P min

A(l) = min

wi, i∈A(l)

(cid:107)wi(cid:107)2

(cid:88)

i∈A(l)

(11)

s.t. : Γi ≥ γi, i ∈ A(l).

Two well-known methods can be used to solve the sub-problems in (11): semideﬁnite relaxation

based technique [31], and uplink-downlink duality based algorithm [22].

1) SDR-Based Solution: Recalling Wi = wiwH

i , i ∈ K, and relaxing the rank-1 constraint
rank(Wi) = 1, i ∈ K, we can write the second-order cone program (SOCP) shown in (11) in

the semideﬁnite relaxed program format shown in (12). The resulting problem can be solved by

standard tools such as CVX [30].

P min

A(l) = min

Wi, i∈A(l)

(cid:88)

i∈A(l)

tr(Wi)

s.t. : tr(RiWi) − γi

(cid:88)

k∈A(l)
k(cid:54)=i

Wi (cid:23) 0, i ∈ A(l).

tr(RiWk) ≥ γiσ2, i ∈ A(l),

(12)

Interestingly, it turns out that the SDR form (12) and the original problem (11) are equivalent

[32]. Therefore, the solution to the SDR problem outputs rank-1 matrices. However, it should be

noted that, in general, an SDR problem gives a lower-bound on the optimal objective function.

2) UDD-Based Solution: While the SDR method gives out the optimal solution for the

problem in (12), a more efﬁcient solver is a fast iterative algorithm based on the uplink-downlink

duality [22]. The optimization in the SDR method is performed over the M -by-M Wi matrices,

which have more unknowns than the original M -element beamforming vectors, i.e., the wi’s.

Hence, the SDR solution comes at the cost of a relatively high computational complexity. To

take advantage of the UDD method, we re-write the problem (11) by using the normalized

beamforming vectors, i.e., ui = wi/(cid:107)wi(cid:107), and putting them in the matrix U = (u1, . . . , uK),
while denoting ρi = (cid:107)wi(cid:107)2. Accordingly, the problem becomes

14

P min

A(l) =min
U, ρ

(cid:107)ρ(cid:107)1

s.t. : Γi(U, ρ) ≥ γi, (cid:107)ui(cid:107)1 = 1, i ∈ A(l),

(13)

√

ρiui in (3). Then, the

where ρ = (ρ1, . . . , ρK)T , and Γi(U, ρ) is obtained by replacing wi =
minimum powers, ρ(cid:63)

i ’s, and the normalized beamforming vectors, u(cid:63)

i ’s, can be found by applying

the algorithm in [22, Table II].

Remark 1: In order for problem (11) to always have a solution, the rank of the channel matrix

H = [h1, . . . , hK] should be greater than or equal to the number of UEs. For well-conditioned

channels, the latter condition becomes M ≥ K. Of course, there may be solutions for cases in

which M < K, depending on the devices’ required SINRs, i.e., the γi’s, and their channels, i.e.,

the hi’s.

A brief interpretation of Remark 1 is as follows. A solution P min

A(l) < ∞ for (13) depends on
the SINR demands as well as the channel coefﬁcients of the users. For example, when two users

(UE1 and UE2) are exactly beside each other, they will have same channel coefﬁcients, i.e.,

h1 = h2. In this case, the problem in (13) will have a solution iff γ1 < 1 and γ2 < 1. Intuitively,

in this example, the power signal to a user produces the same amount of interference to the other.

So it is required that the users be spatially separated, i.e., each has its own independent beam, in

order for the problem to always have a solution. The maximum number of independent beams is

equal to the rank of H [33], which for a well-conditioned matrix is equal to min{M, K}. Similar

to an M × M point-to-point link which is capable of multiplexing M independent streams, for

M < K the maximum number of independent beams is K and, in this case, there might be

users with correlated channel coefﬁcients.

With either method, i.e., SDR or UDD, the AP should solve the subproblems in (11) for at

most 2K − 1 times to obtain the optimal allocation vector a(cid:63). While using the iterative algorithm

in [22] is faster than solving with the SDR-based method, the exponential dependence of either

of the two solution methods on the number of UEs makes them time-consuming, especially

when the number of UEs is large. Sub-optimal solvers can be applied to overcome this issue. In

subsection VI-B, we propose an iterative suboptimal solution with polynomial time complexity.

Later in Section VII, we propose a DNN-based suboptimal solution which outputs the allocation

15

vector in real time, and is applicable for complex systems where conventional iterative solvers

lose their validity.

Remark 2 [Monotonicity]: Fixing the beamforming matrix to ˜U, it is clear that by increasing

the AP’s maximum power P , the SINR constraints of all devices are better guaranteed. This is
an immediate consequence of Γi( ˜U, αP ) ≥ Γi( ˜U, P ), where α > 1 [22].

B. Wireless Power Transfer Network

In this operating scenario, there are only ER devices, i.e., K = J . In this case, the optimization

problem (9) boils down to the following separable QCQP problem:

P min

A(l) = min

vj , j∈A(l)

(cid:88)

(cid:107)vj(cid:107)2

j∈A(l)

(14)

which can be converted to the following SDR program after relaxing the rank-1 constraint:

s.t. : Qj ≥ qj, j ∈ A(l),

P min

A(l) = min

Vj , j∈A(l)

(cid:88)

j∈A(l)

tr(Vj)

s.t. : tr(CjVj) ≥ qj, j ∈ A(l),

Vj (cid:23) 0, j ∈ A(l),

(15)

which can be solved using CVX. Noting that in the separable QCQP problem (15), the number

of constraints is equal to the number of summation terms of the objective function, the SDR

problem is tight, i.e., solving the SDR in (15) is equivalent to solving the original QCQP in (14).

Thus, the solution of the SDR problem results in rank-1 matrices corresponding to the unique

optimal beamforming vectors [34]. Also, it is interesting to note that irrespective of the number

rank-1 matrix V(cid:63)

of energy constraints, the optimal V(cid:63)
j = v(cid:63)

j ’s are equal to each other, and recalling that the optimal
1 for all ERs in A(l).
Remark 3 [Robustness of the Solution]: Problem (15) always has a solution for any M , gj’s,

H, the optimal beamforming vector would be v(cid:63)

j v(cid:63)
j

qj’s, and for any number of ERs. This is true because the interference from other devices are

beneﬁcial leakage resources of energy, in contrast to the IR-only scenario where the interference

from other devices has a destructive effect on the SINR of a speciﬁc device.

C. SWIPT Network

Remark 4 [Number of Required Beams]: Recall that for the problem in (10) to have a

solution, the number of AP antennas should be at least equal to the number of IRs (cf. Remark

16

1). The problem would have a solution even if we take vj = 0, j ∈ J . This is due to the

monotonicity of the Γi’s, i ∈ I (cf. Remark 2) and the beneﬁcial type of interference for the

ERs (cf. Remark 3). Hence, if the energy leakage from the information beams to the ERs satisfy

their own demands, then vj, j ∈ J , will be zero, i.e., no dedicated energy beams are needed to

fulﬁll the ERs’ demands. Otherwise, only one energy beam will be needed for all ERs, similar

to the case of the ER-only network (cf. subsection IV-B). Thus, our network always needs to ﬁnd

a maximum of I + 1 beamforming vectors instead of I + J.

V. REVENUE-MAXIMIZING MECHANISM

In the previous section, we obtained the feasible allocation set AF. Now, we aim to ﬁnd

the optimal allocation rule a(cid:63) and the optimal payment rule p(cid:63), which together constitute the

Rmax mechanism. To ﬁnd the Rmax mechanism, it is initially required that the social-welfare

maximization (SWmax) mechanism be obtained because the SWmax solution is applied in

obtaining the Rmax mechanism [29]. Next, we obtain the SWmax mechanism, based on which

and by applying Myerson’s lemma, we ﬁnd the Rmax mechanism in subsection V-B.

A. Social-Welfare Maximization—VCG Auction

Dominant strategy incentive compatible (DSIC) auctions are those desired auctions in which

the seller needs no strategy, i.e., need not know the valuation distributions of the UEs to design

the auction; and each UE, independent of other agents’ bidding strategies, should play truthfully

to maximize its own beneﬁt, i.e., bk = νk for k ∈ K. For single-parameter environments, the

SWmax mechanism, which will be obtained shortly, is DSIC and is often called Vickrey-Clarke-

Groves (VCG) mechanism in the auction literature [26].

1) Optimal Allocation Rule for the SWmax Mechanism: The optimal allocation vector a(cid:63) =

argmaxa∈AFS(b, a) corresponds to the feasible set of users that yields the largest sum of bid
values. In other words, given the bid proﬁle b, the maximum social welfare S(b) which is equal

to S(b, a(cid:63)) is simply found by looking up the table of all social-welfare values corresponding

to all allocation vectors in the feasible set AF and selecting the maximum.

2) Optimal Payment Rule for the SWmax Mechanism: According to [29, Lemma 3.1], for

each UEk, k ∈ K, all bid values of other UEs, i.e., b−k, is a non-decreasing step function in
terms of bk. The critical value of this step function is ˜bk = S(0, b−k) − S−k(∞, b−k), where
S(0, b−k) is the optimal social welfare from UEs other than UEk assuming the latter is not

17

served; and S−k(∞, b−k) is the optimal social welfare from UEs other than UEk assuming that

UEk is served [29]. Consequently, the AP’s SWmax mechanism, based on the bid proﬁle b from

the UEs, is described by [29]

a(cid:63) = argmax

S(b, a),

a∈AF

p(cid:63)
k =




˜bk



0

if a(cid:63)

k = 1

if a(cid:63)

k = 0

,

k ∈ K,

(16a)

(16b)

where (16b) is the optimal payment rule.

Here, it is worth noting that social welfare maximization is singular among objectives in

that there is a single mechanism that is optimal regardless of the distributional assumptions

for the agents’ valuations. In fact, the agents’ incentives are already aligned with the seller’s

objective, and one only needs to derive the appropriate payments, i.e., the critical values. For

general objectives, e.g., revenue maximization which will be obtained in the next subsection, the

optimal mechanism is distribution-dependent!

B. Revenue Maximization Mechanism—Mayerson Mechanism

We place two standard assumptions on our mechanisms: (i) they are individually rational,

meaning that no agent has negative expected utility for taking part in the auction; and (ii)

agents who do not win, pay nothing, i.e., ak = 0 → pk = 0. A mechanism is DSIC (also
called truthful) in expectation iff E[uk(νk, b−k)] ≥ E[uk(bi, b−k)], which for single parameter

environments translates into a mechanism having the following conditions [26]: (i) ak(bk, b−k) is
monotone non-decreasing in bk assuming b−k is ﬁxed,10 and (ii) pk(bk, b−k) = bkak(bk, b−k) −
(cid:82) bk
0 ak(z, b−k)dz (a.k.a. Myerson’s payment identity). Thus, once the allocation rule is ﬁxed, the
payment rule is found by applying the Myerson’s payment identity.

As aforementioned, private valuation νk, k ∈ K, is drawn from the distribution Fk(νk) with

density function fk(νk). By taking expectation of both sides of the the Myerson’s payment

identity, and summing over all agents, we end up with the following key relation
(cid:35)

(cid:34)

(cid:34)

(cid:35)

(cid:88)

Eν

pk(ν)

= Eν

(cid:88)

φk(νk)ak(ν)

,

(17)

k∈K

k∈K

10With a non-decreasing monotone allocation rule, bidding less does not cause a bidder to get more of the commodity.

18

where φk(νk) = νk − 1−Fk(νk)
fk(νk)

is the virtual valuation for every UEk, k ∈ K.

Referring to (cid:80)

k∈K φk(νk)ak(ν) as the virtual social welfare of an auction on the valuation
proﬁle ν, (17) states that the expected revenue equals the expected virtual social welfare. Thus,

the virtual social-welfare-maximizing (VSM) allocation rule is one which chooses the feasible
allocation that maximizes the virtual social welfare (cid:80)

k∈K φk(νk)ak(ν) for each valuation proﬁle
ν. For the VSM mechanism to be truthful, the obtained allocation rule has to be monotone non-

decreasing, which holds true when the virtual valuations φk(vk) are monotone non-decreasing.11

Therefore, the optimal Rmax mechanism, a.k.a. Mayerson mechanism, can be described as

follows [29]

(a(cid:63), p(cid:48)) = VCG(cid:48)(b(cid:48))

p(cid:63)
k =




φ−1
k (p(cid:48)
k)

if a(cid:63)

k = 1



0

if a(cid:63)

k = 0

, k ∈ K,

(18a)

(18b)

where b(cid:48)

k = φk(bk), k ∈ K, are the elements of the virtual bid proﬁle b(cid:48), and where VCG(cid:48)(b(cid:48)) is
the generalized version of the SWmax mechanism function described in (16). In fact, since the

virtual bids can have negative values, the generalized SWmax mechanism, which takes as input

the virtual bid proﬁle b(cid:48) and outputs (a(cid:63), p(cid:48)), is deﬁned as follows:

a(cid:63) =




argmax
a∈AF



0,

S(b(cid:48), a),

if S(b(cid:48), a(cid:63)) > 0,

Otherwise,

(19a)

p(cid:48)
k =




S(−∞, b(cid:48)

−k) − S(cid:63)

−k(∞, b(cid:48)

−k),



0,

if a(cid:63)

k = 1

if a(cid:63)

k = 0

, k ∈ K,

(19b)

where S(−∞, b(cid:48)

−k(∞, b(cid:48)
is not served; and S(cid:63)
that UEk is served. Hence, p(cid:48)

−k) is the optimal social welfare from UEs other than UEk, assuming the latter
−k) is the optimal social welfare from UEs other than UEk, assuming
k ≥ 0 for k ∈ K.

The pair (a(cid:63), p(cid:63)) that is obtained from (18a) and (18b), constitutes the Rmax mechanism which

can be described in algorithmic steps as follows: (i) given the bid proﬁle b and the distributions

11A sufﬁcient condition for monotone virtual valuations is implied by the monotone hazard rate assumption. If the hazard

rate of distribution Fk, deﬁned as fk(νk)/(1 − Fk(νk)), is monotone non-decreasing, then the virtual valuations are monotone

nondecreasing as well.

19

Fig. 2. Flow diagram of ﬁnding the optimal revenue maximization mechanism.

Fk, k ∈ K, compute virtual bids b(cid:48)
virtual bids b(cid:48) to get a(cid:63) and p(cid:48), (iii) compute p(cid:63)

k by applying (18b), and (iv) output (a(cid:63), p(cid:63)).
The ﬂow diagram of Fig. 2 illustrates the whole process of ﬁnding the optimal mechanism.

k = φk(bk), k ∈ K, (ii) run VCG(cid:48) described in (19) on the

VI. ITERATIVE ALGORITHMS FOR FINDING THE ALLOCATION RULE

A. Branch-and-Bound Algorithm

Let Lk(K), k ∈ {0, 1, . . . , |K|}, hold all the k-element subsets of set K, where |K| is the

cardinality of K. Mathematically speaking, we have Lk(K) = {s|s ⊂ P(K), |s| = k} where
P(K) is the power set of K, and |Lk(K)| = (|K|

k ) is the cardinality of Lk(K). Considering these
notations, the efﬁcient BnB algorithm, i.e., Algorithm 1, can be applied to ﬁnd the optimal
allocation rule a(cid:63) = ( a(cid:63)
). One should note that the ﬁrst breadth level of the search tree of the
a(cid:63)
proposed BnB algorithm starts with the largest subset of users, i.e., (cid:0)L|I|(I), L|J |(J )(cid:1). In other
words, the branches are formed based on the exclusion of a user rather than inclusion. This

ER

IR

approach is inspired by the fact that all feasible subsets are downward-closed.

Calculating the optimal allocation rule a* Calculating p' using (19b)b' a* Calculating p* using (18b)(.)H, G, d b B&D and CSI  acquisitionCalculation of a* and p* Announcingauction resultsp*a* Finding the beamforming vectors using SDR- or UDD-based methodsJoint information and energy beamformingwi , i ϵ I vj , j ϵ J It is this calculation that can be performed through the following algorithms:- BnB- Goodness-based- DNN-basedφAlgorithm 1 The efﬁcient Branch-and-Bound algorithm for ﬁnding a(cid:63).

1: Initialize: AIR = {}, AER = {}, U = 0, O = {({}, {})}
2: Compute b(cid:48)

k, k ∈ K, using the corresponding valuation functions

3: for m = I to 0 do

20

4:

5:

6:

7:

8:

9:

10:

11:

12:

13:

14:

for each subset X in Lm(I) do

for n = J to 0 do

for each subset Y in Ln(J ) do
if {(X, Y )} (cid:42) O then

Find P (cid:48) by solving (10) for the subset {(X, Y )} via CVX
U (cid:48) ← (cid:80)
if U (cid:48) > U and P (cid:48) < P then

i + (cid:80)

j∈Y b(cid:48)
j

i∈X b(cid:48)

AIR ← X

AER ← Y
U ← U (cid:48)

UPDATEO(X, Y )

15: Output ( aIR

aER) corresponding to {AIR, AER} as the optimal allocation rule a(cid:63)

16: procedure UPDATEO(X, Y )

17:

18:

19:

20:

21:

22:

for i = |X| to 0 do

for each subset X (cid:48) in Li(X) do

for j = |Y | to 0 do

for each subset Y (cid:48) in Lj(Y ) do
if {(X (cid:48), Y (cid:48))} (cid:42) O then
Add (X (cid:48), Y (cid:48)) to O

B. Heuristic Sub-Optimal Iterative Solutions

The BnB algorithm to ﬁnd the feasible set AF has exponential time complexity in terms of the

number of devices, i.e., K. Apart from the very simplistic method of random allocation, next

we present an iterative heuristic suboptimal solution which has polynomial-time complexity.

Thereafter, we will propose a real-time DNN-based sub-optimal solution.
hib(cid:48)

This allocation strategy is based on the the goodness factors λi = σ2

i/γi for the IRs, i ∈ I,
j/qj for the ERs, j ∈ J . In this method, the AP starts with the largest subset

and µj = σ2

hj b(cid:48)

21

LK(K) and obtains the solution of the optimization problem (9). If the subset is found unfeasible,

the AP would drop the device (either IR or ER) having the least goodness value. Then, the AP

checks the feasibility of the remaining subset. This procedure is repeated until the ﬁrst feasible

set is obtained. This method converges to a suboptimal solution in a maximum of K − 1 running

times of the iterative optimization method, either SDR-based or UDD-based. The goodness-based

algorithm is depicted in Algorithm 2.

The goodness factor is more meaningful when there are only IRs or ERs in the network.

For the WIT scenario investigated in subsection IV-A, the goodness-based (here called λ-based)

algorithm converges in I − 1 runs of the problem solver algorithm, e.g., the efﬁcient UDD-based

method, in the worst case. In the WPT scenario discussed in subsection IV-B, the goodness-

based (called µ-based here) algorithm converges in J − 1 runs of the applied problem solver,

e.g., SDR-based standard tool CVX, at worst case.

Algorithm 2 The heuristic goodness-based algorithm for ﬁnding a(cid:63).

1: Initialize: A = {}; U = 0; a(cid:63) = 0

2: Compute b(cid:48)
3: Make the ordered set K(cid:48) sorted increasingly based on λi = σ2
4: while K(cid:48) (cid:54)= ∅ do

k, k ∈ K, using the corresponding valuation functions
hib(cid:48)

i/γi and µj = σ2

hj b(cid:48)

j/qj

5:

6:

7:

8:

9:

10:

Find the minimum power P (cid:48) by solving (10) for the set K(cid:48) via CVX
U (cid:48) ← (cid:80)
k∈K(cid:48) b(cid:48)
k
if U (cid:48) > U and P (cid:48) < P then

Break

else

Drop the ﬁrst element of K(cid:48) with the least value of goodness factor.

11: Output a(cid:63) = ( aIR

aER) corresponding to K(cid:48) as the optimal allocation rule

VII. DEEP LEARNING BASED ALLOCATION RULE

As observed in Section IV, the time-greedy part of designing the optimal mechanism for

the SWIPT network under consideration is due to the many runs of the optimization methods

needed to ﬁnd the allocation rule. In fact, once the optimal allocation rule is found, ﬁnding the

optimal payment rule is straightforward by applying (18) and (19). One solution to overcome

the complexity of ﬁnding the allocation vector is through the use of DNNs.

To solve a(cid:63) = argmaxa∈AFS(b(cid:48), a) via deep learning, we observe that it can be regarded as an
unknown function mapping from the ensemble of the network parameters of interest, i.e., b(cid:48), d,

22

and M, where M = [H, G] with H = [h1, . . . , hI] and G = [g1, . . . , gJ ], to the corresponding
optimal allocation rule a(cid:63) = ( a(cid:63)
a(cid:63)

). Note that the mapping depends on hk’s and dk’s through AF.

IR

ER

Indeed, DNNs can be viewed as universal approximators: if properly trained, they are able to

learn the input-output relationship between the parameters and the desired allocation vector. This

means that we can optimize a desired performance function for given parameters without having

to explicitly solve any optimization problem via SDR, UDD, or any other iterative optimization

method, but rather letting the DNN compute the allocation vector.

A. The Proposed Deep Neural Network Architecture

After trying several core architectures, such as fully-connected neural network (FcNN), convo-

lutional neural network (CNN), and residual neural network (ResNet), the FcNN model showed

the best performance in terms of accuracy.

Fig. 3. The DNN used for ﬁnding the allocation vector.

is [b(cid:48)

The schematic of the proposed DNN architecture is depicted in Fig. 3. The input to the DNN
ER, q, |G|, ∠G], where |H| (|G|) and ∠H (∠G) denote matrices holding
the absolute value and angle of the complex elements of matrix H (G). The input data is fed

IR, γ, |H|, ∠H, b(cid:48)

to a preprocessing unit composed of four main operations: transforming, sorting, ﬂattening, and

normalizing. In transforming, we use the criteria employed in the proposed heuristic method

aIRaERPreprocessing: Flattener & Normalizingl1-Regularizer + ReLUSigmoid activatedMultiple dense layers with Batch-norm + ReLUMultiple dense layers(Batch-norm + Activation)bIR,  , |HIR|, ∠HIR, bER, q, |HER|, ∠HER 23

to replace the values of the virtual bids with their corresponding goodness factors. Then, the

resulting goodness factors are sorted in ascending (or descending) order. The introduction of these

two preprocessing operations makes the training process converge faster and result in a more

accurate network at the end of the training. With ﬂattening, the input data are placed in a column

vector, and by the normalization operation the ﬂattened data are shifted and scaled according

to standard Normal distribution. To explain the latter more, for each input data sample x, the
normalizing unit operates x−µx
σx

x are the standard mean and variance
functions, both of which are obtained from the training data samples. The output layer has
K = I + J nodes, which corresponds to the dimension of the allocation vector a = ( aIR

on x, where µx and σ2

aER). The

output layer, after being activated by the sigmoid (logistic) function, will take values between

0 and 1. In fact, since our network is a multi-label multi-class classiﬁer, the activation function

of the output layer should be sigmoid function f (x) =
value x ∈ R to (0, 1).

1

1+exp(−x) that maps the summation node

When using the trained DNN for prediction, we should revert the sorted data back to its original

form based on the sorting index set obtained in the sorting operation of the preprocessing unit.

Also, we round this output to only take binary values, since the allocation vector is a binary

vector.

To train the proposed DNN, we need to populate the training dataset and the corresponding

labels. To this end, we solve the corresponding optimization problems for many network realiza-

tions using standard semideﬁnite problem solvers like CVX [30] in the proposed efﬁcient BnB

algorithm. We used the TensorFlow interface [35] for building and training our DNN model. We

tuned the hyper-parameters of the DNN using the recently released hyper-parameter optimization

framework Keras-tuner [36], which tries a preset number of trials looking for the best possible

set of hyper-parameters with built-in search algorithms.

B. Computational Complexity

The iterative-based algorithms, SDR- and UDD-based, have exponential time complexity. In

Table I, the computational complexity of the proposed goodness-based DNN-based methods and

the conventional SDR-based and UDD-based methods are compared. In computing complexity, it

is assumed that for the SDR-based case the interior-point algorithm [37] is used for each branch

k ∈ {1, . . . , 2K − 1} of the proposed BnB algorithm, i.e., Algorithm 1, and that for the UDD-

based method the iterative algorithm in [22] is used in each branch of the BnB algorithm for the

24

case of the WIT system. As can be seen from Table I, in terms of the number of antennas, M , the

conventional methods as well as the goodness-based method have polynomial time complexity,

whereas the proposed DNN-based method has linear time complexity. Importantly, while the

conventional algorithms both have exponential time complexity in terms of the number UEs, K,

the heuristic method has polynomial time complexity, and the DNN-based method has linear

complexity.

TABLE I

COMPARISON OF THE COMPUTATIONAL COMPLEXITY

SDR

UDD

Goodness

DNN

O (cid:0)K(M 3 + KM 2) 2K (cid:1) O (cid:0)K(M 3 + KM ) 2K (cid:1) O (cid:0)K 2(M 3 + KM )(cid:1) O(M K)

VIII. PERFORMANCE EVALUATION AND DISCUSSION

We evaluate the accuracy of the proposed DNN architecture in predicting the exact allocation

vectors. We instantiate our DNN from the architecture presented in Fig. 3 targeted for a system

operation where transmissions undergo Rayleigh fading. Speciﬁcally, hi ∼ CN (0, σ2
hi
σ2
hi

∼ U(−80, −60) dB, i ∈ I, and gj ∼ CN (0, σ2
gj

IM ) where σ2
gj

∼ U(−60, −40) dB, j ∈ J .

IM ) where

Unless otherwise stated, the SWIPT network parameters are as follows: Pmax = 3 W, I = 4,
J = 2, M = 8, σ2

i = −50 dBm, i ∈ I, bk ∼ U(0.1, 1) for k ∈ K, γi ∼ U(5, 35) dB for i ∈ I,
and qj ∼ U(−20, 0) dB for j ∈ J . U(a, b) denotes the uniform distribution in the interval (a, b).

LAYOUT OF THE PROPOSED DNN ARCHITECTURE (# TRAINABLE PARAMETERS: 201,454; # NON-TRAINABLE

TABLE II

PARAMETERS: 1,376)

Layer

Output Dimension

Input (after preprocessing)

Dense + Regularizer + tanh

Dense + Batch normalization + tanh

Dense + Batch normalization + ReLU

Dense + sigmoid

108

200

296

392

6

We ﬁrst populate the training data by solving the optimization problem (8) ofﬂine, to ﬁnd the

optimal allocation vectors (as target labels) using the standard semideﬁnite problem solver tool

CVX [30] for 194, 000 realizations of the network model with the aforementioned parameters.

25

The proper set of hyper-parameters found are shown in Table II. We dedicated 20% of the data

for testing purposes, and split the remaining 80% into 80% for the training and 20% for the

validation. While the training and validation sets are used in plotting Fig. 4, the testing data is

used in plotting Figs. 5-7.

As depicted in Fig. 3, our DNN has three hidden layers, each of which is described in Table II.

The regularizer used in the ﬁrst hidden layer is the l1-activity-regularizer with parameter l1 set

to 0.001. Activity regularizers allow us to apply penalties on layer activity during optimization.

These penalties are incorporated in the binary cross-entropy loss function that the DNN tries

to minimize during training. By doing this, we avoid over-ﬁtting of the model. We used the

well-known Adam optimizer [38] with initial learning rate 0.01 and a decay rate of 0.0027. The

batch size for training is set to 16. The last layer has a sigmoid activation layer as explained

before.

(a)

(b)

Fig. 4. (a) The binary cross-entropy metric versus each epoch of training the DNN; (b) The accuracy metric versus each epoch

of training the DNN.

Figure 4a shows the loss value of the training and validation datasets. As observed, the curves

intersect at almost the last epoch, after which over-ﬁtting will occur. Fig. 4b shows the accuracy

related to the training and validation datasets. The accuracy metric used here differs from the

built-in binary accuracy metric in the Keras library which counts the fraction of all matches

between each element of the predicted allocation vector with its corresponding true allocation

vector. This is a customized metric to measure the fraction of exact match between the target data

and the predicted output data of the DNN. Fig. 4b reveals that an accuracy of 76% is reached with

the proposed DNN for the SWIPT network. It should be noted that the AP can get paid even if

there is no exact match between the predicted allocation vector and the true one. For example, let

26

the true and predicted allocation vectors be atrue = (1, 1, 1, 0, 0, 0)T and apred = (1, 1, 0, 0, 0, 0)T .

Then, there happens an error in prediction. However, since the predicted allocation vector is a

subset of the true allocation vector, the AP will get some proﬁt from this fault prediction. It is

also interesting to note that even if the predicted vector is not a subset of the true allocation

vector or even if it is not a feasible allocation, the AP still has the chance to make proﬁt. Recall

that a subset A(l) is unfeasible if all the constraints of the subset cannot be covered with the

AP’s power budget P . However, it is still possible that the beamforming vectors found based on

that subset do cover the constraints of a fraction of the devices. Therefore, the customized exact

accuracy provides a lower-bound on the performance of the AP. It is interesting to mention that

the achieved 76% exact accuracy is equivalent to the built-in Keras binary accuracy of 95%. For

the example mentioned above, the binary accuracy is 83.33% but the exact accuracy is 0%.

Fig. 5. Comparison of the DNN-based and λ-based methods: (a) The mean square error; (b) The exact accuracy.

(a)

(b)

Figure 5 compares the accuracy and the mean square error (MSE) of the DNN-based solver

with the proposed iterative λ-based approach for a WIT system with the same default system

setting except that here I = 6 and J = 0. The curves are plotted in terms of the density of 1’s

in the label test dataset. As Fig. 5b shows, the accuracy of the λ-based method is comparable

to the DNN-based method while the density of UEs in the system is either very low or very

high. The low-density happens when the UEs’ constraints cannot be well satisﬁed with the power

budget of the AP; otherwise a high-density happens. In the middle-density range, the DNN-based

outperforms the heuristic method.

Figure 6 compares the accuracy and the MSE of the DNN-based solver with the proposed

iterative µ-based approach for a WPT system with the same default system setting except that

27

Fig. 6. Comparison of the DNN-based and µ-based methods: (a) The mean square error; (b) The exact accuracy.

(a)

(b)

Fig. 7. The normalized confusion matrix of the trained DNN.

here J = 6 and I = 0. As observed, the accuracy of the heuristic method outperforms the DNN-

based method particularly for extreme densities. Compared to the user density approach, the

more exact way of demonstrating the accuracy of a network for a speciﬁc target label is by use

of confusion matrices. These matrices are usable only for multi-class single-label classiﬁcations.

However, by decoding our model’s binary target labels to decimal-valued target labels, we can

use the confusion matrix to evaluate the accuracy of the DNN for different classes. In fact, such

decoded target labels are the same as subscript l in a(l). Fig. 7 shows the normalized confusion

063Predicted label063True labelNormalized Confusion Matrix0.00.10.20.30.40.50.60.70.8matrix for the same default system setting. Thus, the decoded (One-Hot) targets will have 64

labels. As can be inferred from the colors of the main diagonal of the confusion matrix, the

normalized correct predictions range roughly from 70% to 90%.

28

ACCURACY OF THE DNN-BASED METHOD FOR DIFFERENT SYSTEM MODELS

TABLE III

Binary accuracy

Exact accuracy

SWIPT

WIT

WPT

95%

97%

97%

76%

80%

79%

Table III reveals the performance of the proposed DNN for three different user conﬁgurations

with K = 6 UEs: 1) the SWIPT system with I = 4 and J = 2; 2) the WIT system with I = 6

IRs and no ERs; and the WPT system with J = 6 ERs and no IRs.

TABLE IV

TIME COMPLEXITY OF THE METHODS

BnB-SDR BnB-UDD Heuristic-UDD DNN-UDD

K = 4

K = 6

K = 8

1.73

10.55

57.77

0.11

0.47

3.13

0.03

0.11

0.18

0.04

0.05

0.06

Table IV compares numerically the time complexity of the proposed methods with that of the

BnB method for a WIT system. In BnB-SDR, each optimization problem related to each BnB

branch is solved using the SDR technique [31], whereas in BnB-UDD, the UDD technique [22]

is applied to solve each BnB branch problem. As expected, since the UDD technique is much

faster than the SDR technique, BnB-UDD is order of magnitudes less running-time complex

than the BnB-SDR. We used our proposed BnB algorithm in Algorithm 1 (cf. Section VI) for

both BnB-SDR and BnB-UDD. The Heuristic-UDD and DNN-UDD methods are our proposed

solutions. In Heuristic-UDD, the UDD method is used in each iteration of Algorithm 2. For

K = 8 devices in the system, 8 runs of the UDD algorithm are required at worst-case, whereas

in the BnB-UDD method 255 runs of the UDD algorithm are required at worst-case. Hence,

we see the huge difference between 0.18 and 3.13. In DNN-UDD, after ﬁnding the optimal set

29

of devices by using the DNN-based approach12, the UDD algorithm is run once to output the

optimal beamforming vector. The simulations are averaged over 1000 random realizations of the

network setting. For small values of K, e.g., K = 4, the heuristic method is a bit faster than

the DNN-based method. For the larger value K = 8, the DNN-based method runs three times

faster than the heuristic method, 50 times faster than BnB-UDD, and about 1000 times faster

than BnB-SDR.

Last but not least, it should be noted that while the DNN-based method outputs the solution

in fewer clock cycles, the heuristic method has two attractive properties: i) it does not require

training, and ii) it can easily scale to any network setting with arbitrarily number of devices.

IX. CONCLUSION

We tackled the problem of ﬁnding the optimal revenue maximizing dominant-strategy incentive-

compatible mechanism, namely, the allocation and payment rules, for a SWIPT network wherein

a multi-antenna AP sells its spatially-multiplexed radio links to SINR-constrained information de-

vices, and its power to energy harvesting devices. Having solved the MINLP revenue maximiza-

tion problem by applying a proposed efﬁcient Branch-and-Bound algorithm and by leveraging

conventional optimization techniques, namely, semideﬁnite relaxation or uplink-downlink duality

methods in each branch, we highlighted the time-greediness of such techniques for ﬁnding the

optimal allocation rule, especially as the number of network devices increases. We also proposed

an iterative suboptimal heuristic solution method with polynomial time complexity. Then, we

designed and trained a DNN to ﬁnd the allocation rule with linear time complexity and an

accuracy of 76%.

REFERENCES

[1]

I. Krikidis, S. Timotheou, S. Nikolaou, G. Zheng, D. W. K. Ng, and R. Schober, “Simultaneous wireless information and

power transfer in modern communication systems,” IEEE Commun. Mag., vol. 52, no. 11, pp. 104–110, Nov. 2014.

[2] B. Clerckx, R. Zhang, R. Schober, D. W. K. Ng, D. I. Kim, and H. V. Poor, “Fundamentals of wireless information and

power transfer: From RF energy harvester models to signal and system designs,” IEEE J. Sel. Areas Commun., vol. 37,

no. 1, pp. 4–33, Jan. 2019.

[3] Y. Zhang, C. Lee, D. Niyato, and P. Wang, “Auction approaches for resource allocation in wireless systems: A survey,”

IEEE Commun. Surveys Tuts., vol. 15, no. 3, pp. 1020–1041, third quarter 2013.

12The same DNN architecture of Table II is used, except that the input and output layers are modiﬁed according to the value

of K

30

[4] N. Tadayon and S. A¨ıssa, “Radio resource allocation and pricing: Auction-based design and applications,” IEEE Trans.

Signal Process., vol. 66, no. 20, pp. 5240–5254, Oct. 2018.

[5] D. Niyato, E. Hossain, and Z. Han, “Dynamic spectrum access in IEEE 802.22-based cognitive wireless networks: a game

theoretic model for competitive spectrum bidding and pricing,” IEEE Wireless Commun., vol. 16, no. 2, pp. 16–23, Apr.

2009.

[6] Y. Zhang, D. Niyato, P. Wang, and E. Hossain, “Auction-based resource allocation in cognitive radio systems,” IEEE

Commun. Mag., vol. 50, no. 11, pp. 108–120, Nov. 2012.

[7] U. Habiba and E. Hossain, “Auction mechanisms for virtualization in 5G cellular networks: Basics, trends, and open

challenges,” IEEE Commun. Surveys Tuts., vol. 20, no. 3, pp. 2264–2293, third quarter 2018.

[8] D. Niyato and P. Wang, “Competitive wireless energy transfer bidding: A game theoretic approach,” in Proc. IEEE Proc.

Intl. Conf. on Commun. (ICC), Jun. 2014, pp. 1–6.

[9] H. Chen, Y. Li, Z. Han, and B. Vucetic, “A Stackelberg game-based energy trading scheme for power beacon-assisted

wireless-powered communication,” in Proc. IEEE Intl. Conf. on Acoustics, Speech and Sig. Proc. (ICASSP), Apr. 2015,

pp. 3177–3181.

[10] S. Sarma, K. Kandhway, and J. Kuri, “Robust energy harvesting based on a Stackelberg game,” IEEE Wireless Commun.

Lett., vol. 5, no. 3, pp. 336–339, Jun. 2016.

[11] Z. Zheng, L. Song, D. Niyato, and Z. Han, “Resource allocation in wireless powered relay networks: A bargaining game

approach,” IEEE Trans. Veh. Technol., vol. 66, no. 7, pp. 6310–6323, July 2017.

[12] A. Bayat and S. A¨ıssa, “Admission control and power allocation in wireless power charging networks,” in Proc. IEEE Int.

Symp. Pers. Indoor Mobile Radio Commun. (PIMRC), Oct. 2017, pp. 1–5.

[13] ——, “Auction-based design and analysis of wireless power transfer network with critical users,” IEEE Commun. Lett.,

vol. 22, no. 11, pp. 2374–2377, Nov. 2018.

[14] Z. Mohamed and S. A¨ıssa, “Coordinated energy beamforming: Wireless power coverage and transmission probability,” in

Proc. IEEE Wireless Commun. and Netw. Conf. (WCNC’21), Nanjing, China, Apr. 2021.

[15] S. Najmeddin, S. Tahar, and S. A¨ıssa, “Energy-efﬁcient resource allocation for UAV-enabled information and power transfer

with NOMA,” in Proc. IEEE Global Commun. Conference (GC’2020), Taipei, Taiwan, Dec. 2020.

[16] P. D¨utting, Z. Feng, H. Narasimhan, D. Parkes, and S. S. Ravindranath, “Optimal auctions through deep learning,” in Intl.

Conf. on Machine Learning (PMLR), May 2019, pp. 1706–1715.

[17] M. Lee, G. Yu, and G. Y. Li, “Learning to branch: Accelerating resource allocation in wireless networks,” IEEE Trans.

Veh. Technol., vol. 69, no. 1, pp. 958–970, Jan. 2020.

[18] R. Dong, C. She, W. Hardjawana, Y. Li, and B. Vucetic, “Deep learning for radio resource allocation with diverse quality-

of-service requirements in 5G,” IEEE Trans. Wireless Commun., vol. 20, no. 4, pp. 2309–2324, Apr. 2021.

[19] M. Varasteh, J. Hoydis, and B. Clerckx, “Learning modulation design for SWIPT with nonlinear energy harvester: Large

and small signal power regimes,” in Proc. IEEE Intl. Workshop on Sig. Proc. Advances in Wireless Commun. (SPAWC),

July 2019, pp. 1–5.

[20] C. Chun, J. Kang, and I. Kim, “Adaptive rate and energy harvesting interval control based on reinforcement learning for

SWIPT,” IEEE Commun. Lett., vol. 22, no. 12, pp. 2571–2574, Dec. 2018.

[21] Y. Al-Eryani, M. Akrout, and E. Hossain, “Simultaneous energy harvesting and information transmission in

a MIMO full-duplex system: A machine learning-based design,” arXiv:2002.06193, 2020.

[Online]. Available:

https://arxiv.org/abs/2002.06193

[22] M. Schubert and H. Boche, “Solution of the multiuser downlink beamforming problem with individual SINR constraints,”

IEEE Trans. Veh. Technol., vol. 53, no. 1, pp. 18–28, Jan. 2004.

31

[23] J. Xu, L. Liu, and R. Zhang, “Multiuser MISO beamforming for simultaneous wireless information and power transfer,”

IEEE Trans. Signal Process., vol. 62, no. 18, pp. 4798–4810, Sep. 2014.

[24] A. Bayat and S. A¨ıssa, “Auction-driven multiuser beamforming with deep learning,” in Proc. IEEE Global Commun.

Conference (GC’2020), Taipei, Taiwan, Dec. 2020.

[25] M. Xia and S. A¨ıssa, “On the efﬁciency of far-ﬁeld wireless power transfer,” IEEE Trans. Signal Process., vol. 63, no. 11,

pp. 2835–2847, Jun. 2015.

[26] N. Nisan et al., “Introduction to mechanism design (for computer scientists),” Algorithmic game theory, vol. 9, pp. 209–242,

2007.

[27] A. X. Jiang and K. Leyton-Brown, “Estimating bidders’ valuation distributions in online auctions,” in Proc. IJCAI Workshop

on Game Theoretic and Decision Theoretic Agents, 2005, pp. 98–107.

[28] J. Xu and R. Zhang, “Energy beamforming with one-bit feedback,” IEEE Trans. Signal Process., vol. 62, no. 20, pp.

5370–5381, Oct. 2014.

[29] J. D. Hartline, “Mechanism design and approximation,” Book draft. October, vol. 122, 2013.

[30] M. Grant and S. Boyd, “CVX: Matlab software for disciplined convex programming, version 2.1,” 2014.

[31] M. Bengtsson and B. Ottersten, “Optimal downlink beamforming using semideﬁnite optimization,” in Proc. Annual Allerton

Conf. on Commun., Control and Computing, 1999, pp. 987–996.

[32] A. B. Gershman, N. D. Sidiropoulos, S. Shahbazpanahi, M. Bengtsson, and B. Ottersten, “Convex optimization-based

beamforming,” IEEE Signal Process. Mag., vol. 27, no. 3, pp. 62–75, May 2010.

[33] D. Tse and P. Viswanath, Fundamentals of wireless communication. Cambridge university press, 2005.

[34] Z. Luo, W. Ma, A. M. So, Y. Ye, and S. Zhang, “Semideﬁnite relaxation of quadratic optimization problems,” IEEE Signal

Process. Mag., vol. 27, no. 3, pp. 20–34, May 2010.

[35] M. Abadi et al., “Tensorﬂow: Large-scale machine learning on heterogeneous systems,” 2015. [Online]. Available:

https://www.tensorﬂow.org

[36] Keras Tuner. [Online]. Available: https://keras-team.github.io/keras-tuner

[37] L. Vandenberghe, V. R. Balakrishnan, R. Wallin, A. Hansson, and T. Roh, “Interior-point algorithms for semideﬁnite

programming problems derived from the KYP lemma,” in Positive polynomials in control. Springer, 2005, pp. 195–238.

[38] D. P. Kingma and J. Ba, “Adam: A method for stochastic optimization,” arXiv:1412.6980, 2014. [Online]. Available:

https://arxiv.org/abs/1412.6980

