8
1
0
2
c
e
D
3
1

]
E
S
.
s
c
[

1
v
9
3
3
5
0
.
2
1
8
1
:
v
i
X
r
a

DeepCruiser: Automated Guided Testing for Stateful
Deep Learning Systems

Xiaoning Du1, Xiaofei Xie1, Yi Li1, Lei Ma2, Jianjun Zhao3, and Yang Liu1

1 Nanyang Technological University
2 Harbin Institute of Technology
3 Kyushu University

Abstract. Deep learning (DL) deﬁnes a data-driven programming paradigm that
automatically composes the system decision logic from the training data. In com-
pany with the data explosion and hardware acceleration during the past decade,
DL achieves tremendous success in many cutting-edge applications. However,
even the state-of-the-art DL systems still suffer from quality and reliability issues.
It was only until recently that some preliminary progress was made in testing
feed-forward DL systems.In contrast to feed-forward DL systems, recurrent neu-
ral networks (RNN) follow a very different architectural design, implementing
temporal behaviours and “memory” with loops and internal states. Such stateful
nature of RNN contributes to its success in handling sequential inputs such as
audio, natural languages and video processing, but also poses new challenges for
quality assurance.
In this paper, we initiate the very ﬁrst step towards testing RNN-based stateful DL
systems. We model RNN as an abstract state transition system, based on which we
deﬁne a set of test coverage criteria specialized for stateful DL systems. Moreover,
we propose an automated testing framework, DeepCruiser, which systematically
generates tests in large scale to uncover defects of stateful DL systems with
coverage guidance. Our in-depth evaluation on a state-of-the-art speech-to-text
DL system demonstrates the effectiveness of our technique in improving quality
and reliability of stateful DL systems.

1

Introduction

Deep learning (DL) experiences signiﬁcant progress over the past decades in achieving
competitive performance of human intelligence in many cutting-edge applications such as
image processing [1], speech recognition [2], autonomous driving [3], medical diagnosis
[4] and pharmaceutical discovery [5], which until several years ago were still notoriously
difﬁcult to solve programmatically. DL has been continuously redeﬁning the landscape
of industry, in penetrating and reshaping almost every aspect of our society and daily
life. For example, Automated Speech Recognition (ASR) currently becomes one of
the most effective ways for human computer interaction and communication, and is
widely integrated in intelligent assistants on everyday mobile device (e.g., Apple Siri [6],
Amazon Alexa [7], Google Assistant [8], and Microsoft Cortana [9]). Although Hidden
Markov Models (HMM) were widely used in ASR, DL models are the current state-of-
the-art solutions in tasks including speech recognition and generation [10–12].

 
 
 
 
 
 
2

Xiaoning Du, Xiaofei Xie, Yi Li, Lei Ma, Jianjun Zhao, and Yang Liu

However, the current state-of-the-art DL system still suffers from quality, reliability
and security issues, which could potentially lead to accidents and catastrophic events
when deployed to safety- and security-critical systems. With the demanding industry
trends for real-world deployment of DL solutions, we have witnessed many quality and
security issues, such as one pixel attack [13], Alexa/Siri manipulation with hidden voice
command [14], and the Google/Uber autonomous car accident [15, 16]. Unfortunately,
the quality assurance techniques and tool chains for DL systems are still immature,
which could potentially hinder future industry scale applications of DL solutions towards
the goal of Software 2.0 [17].

For traditional software, the software development and quality assurance process are
well established over past several decades, but the existing techniques and tool chains
could not be directly applied to DL systems. This is mainly due to the fundamental
differences in programming paradigms, development processes, as well as structures
and logic representations of the software artifacts (e.g., architectures) [18, 19]. To bridge
the gap between quality assurance of DL system and its practical applications, some
recent work on testing and veriﬁcation of feed-forward DL systems (e.g. Convolution
Neural Network (CNN)) of image processing started to emerge, ranging from testing
criteria design [18–20], test generation [21, 22], and metamorphic relation based testing
oracle [23], to abstract interpretation based formal analysis [24].

Yet, such practices are hardly applicable to the testing of Recurrent Neural Networks
(RNN) due to the very different architectural designs, often with loops involved, that
introduces internal states and enables the “memorization” of what could be observed
before or after [11]. Information ﬂows not only from front neural layers to the rear
ones, but also from the current iteration to the subsequent ones. This makes RNN more
suitable to process sequential input streams, such as audios, natural language texts and
videos, instead of monolithic data such as images. Although it is tempting to unroll the
network and test the unfolded RNN as if it is a feed-forward neural network [23], such a
simple approach ignores the internal states of RNNs and therefore could not precisely
reﬂect the dynamic behaviors for a time sequence. Furthermore, the unrolled networks
would contain different numbers of layers given inputs of various lengths, making the
calculation of coverage problematic.

As a typical application of RNN, ASR is faced with the problem of inadequate testing,
security threats and attacks [25–28]. Despite the urgent demands, it is unfortunate that
there exists no systematic techniques specialized for RNN-based stateful deep learning
systems at the moment. To address these challenges, in this paper, we propose a coverage-
guided automated testing framework for RNN-based stateful DL systems. Considering
the unique features of RNN and the input structures it often processes, we ﬁrst propose
to formalize and model a RNN-based DL system as Markov Decision Process (MDP).
Based on the MDP model, we design a set of testing criteria specialized for RNN-based
DL systems to capture its dynamic state transition behaviours. The proposed testing
criteria enable the quantitative evaluation on how extensive the RNN’s internal behaviors
are covered by test data.

DeepCruiser: Automated Guided Testing for Stateful Deep Learning Systems

3

Based on this, we further propose an automated testing framework for RNN-based
DL system guided by proposed coverage. In this paper, we focus on the ASR domain4,
and incorporate 8 metamorphic transformations to generate new audio test inputs. Due
to the huge test input generation space, we leverage the coverage feedback to guide
the testing direction towards systematically cover the major functional behaviors and
corner cases of a RNN. We implement our testing framework, DeepCruiser, and perform
in-depth evaluation on a state-of-the-art practical RNN based ASR system to demonstrate
the usefulness.

To the best of our knowledge, this paper makes several novel contributions summa-

rized as follows.

– We formalize a stateful DL system as a MDP, which is able to characterize the

internal states and dynamic behaviors of RNN-based stateful DL systems.

– Based on the MDP abstraction, we design a set of specialized testing criteria for
stateful DL systems, including two state-level criteria and three transition-level
criteria. This is the very ﬁrst set of testing criteria specially designed for RNNs.
– We evaluate the usefulness of the criteria on a real-world ASR application, and
conﬁrm that more precise abstraction can better discriminate different test sequences,
and generating tests towards increasing coverage is helpful for defect detection.
– We implement a coverage-guided testing framework, DeepCruiser. As the ﬁrst
testing framework for audio-based DL systems, we also designed a set of meta-
morphic transformations tailored for audio inputs, inspired by real-world scenarios
such as background noise, volume variation, etc. Experimental results demonstrate
the effectiveness of DeepCruiser in terms of generating high-coverage tests and
discovering defects on practical ASR systems.

The rest of this paper is organized as follows. Section 2 introduces the background
of RNN-based stateful deep learning systems and one of its successful application
domain, ASR, concerned in this paper. Section 3 presents the high-level workﬂow of our
coverage-guided testing framework and tool implementation DeepCruiser for stateful
DL systems. Section 4 discusses the detailed state transition modeling and formalization
of RNN and Section 5 proposes the testing criteria specialized for RNN-based stateful
DL systems. Based on these, Section 6 proposes a coverage-guided testing framework
for defect detection in stateful DL systems. Section 7 performs a large scale evaluation
of our proposed technique on a practical end-to-end RNN-based ASR system. Finally,
we discuss the related work in Section 8 and concludes the paper with some possible
future directions in Section 9.

2 Background

In this section, we introduce background of RNN and its applications in automated
speech recognition.

4Although we focus on testing RNNs of ASR domain due to the currently urgent industry demands,
the techniques and testing framework proposed in this paper can be generalized to other RNN-
based stateful DL systems.

4

Xiaoning Du, Xiaofei Xie, Yi Li, Lei Ma, Jianjun Zhao, and Yang Liu

Fig. 1: Architecture of simpliﬁed RNN.

2.1 Recurrent Neural Network

Different from the feed-forward DL systems (e.g, CNN), Recurrent Neural Networks
(RNNs) implement temporal behaviors with loops and memorization with internal states
to take into account inﬂuence of previous (or future) observations. Such stateful nature
of RNN contributes to its huge advantage and success in handling sequential inputs, and
leads to its domination in current industrial applications on audio, natural languages and
video processing, making huge impact on our daily life. A simpliﬁed version of the RNN
architecture is illustrated in Figure 1. A basic RNN is a network of neuron-like nodes
organized into successive iterations (or loops). It takes as inputs both the data stream
to process and the internal state vector maintained. Instead of taking the input data as
a whole, RNN processes a small chunk of data as it arrives, and sequentially produces
outputs at each iteration and updates the state vector. For each individual input sequence,
the state vector is ﬁrst initialized to s0 (usually a vector of zeros), and the state vector
from previous iteration is passed to the next iteration. At the high level, the sequence
of state vectors can be seen as a trace recording the underlying temporal dynamics of
RNNs, thus providing a witness for the overall characteristics of the network.

With the loop design, the “vanishing gradient problem” [29] becomes more severe
on RNN, where gradient used in back propagation of training can either vanish to zero
or becomes extremely large when the number of iterations increases, causing the model
difﬁcult to be optimized. Long Short-Term Memory (LSTM) [30] and Gated Recurrent
Unit (GRU) [31] are designed to overcome this problem. Their network structures are
much more complicated than the basic RNN shown in Figure 1, but all shares the simple
basic principle of RNN design and implements the state vectors for memorization.

2.2 Automated Speech Recognition

ASR plays an important role in intelligent voice assistants, e.g., Amazon Alexa, Google
Assistant and Apple Siri. The essential component of an ASR is a transcribing module
responsible for converting speech features to texts. Historically, developing the transcrib-
ing module requires signiﬁcant manual efforts in deriving the phonetic alignment of
audios and texts, which severally limits the scale of the training data. With advanced
training loss functions, such as “Connectionist Temporal Classiﬁcation” (CTC) loss [32],
the alignment can be handled internally by an end-to-end approach. The transcribing
modules in current end-to-end ASRs are mostly equipped with a RNN kernel which
may also be accompanied by some auxiliary CNN layers. Most popular open source

DeepCruiser: Automated Guided Testing for Stateful Deep Learning Systems

5

Fig. 2: General training and predicting workﬂow of end-to-end ASR systems.

end-to-end ASR systems, including DeepSpeech [11] and EESEN [33], are powered by
RNN-based models.

A general workﬂow of the end-to-end ASR system is demonstrated in Figure 2, with
training and predicting procedures highlighted, respectively. These two procedures share
the same feature extraction module, where a raw audio is transformed to numerical fea-
tures (e.g., Mel-Frequency Cepstral Coefﬁcients (MFCC) features). During the training
stage, feature vectors and text transcriptions are fed directly into the RNN-based model,
skipping the acoustic model for phonetic analysis. As for prediction, the pipeline is com-
posed of three major components, a feature extraction module, a RNN-based translation
module and a language model-based correction module. Usually, the language model is
provided externally and requires no training. Audios are ﬁrst transformed into numerical
feature vectors, and then passed to the DNN model to obtain initial transcriptions, which
can be further reﬁned or corrected by the language model. For example, in Figure 2, the
spelling errors in the character sequence are easily rectiﬁed.

3 The Overview of Coverage-guided Testing Framework

DeepCruiser

Figure 3 summarizes the workﬂow of our approach, including the abstract model con-
struction of RNN, the coverage criteria deﬁned over the RNN model, and a coverage-
guided automated testing framework to generate tests for defect and vulnerability detec-
tion of RNNs.

The abstract model construction module takes a trained RNN as input and analyzes
its internal runtime behaviors through proﬁling. The quality of the proﬁling largely
depends on the input data used. The ideal choice of inputs for proﬁling is the training
data (or part of them), which best reﬂect the internal dynamics of a trained RNN model.
Speciﬁcally, each input sequence is proﬁled to derive a trace, i.e., a sequence of RNN

6

Xiaoning Du, Xiaofei Xie, Yi Li, Lei Ma, Jianjun Zhao, and Yang Liu

Fig. 3: High-level workﬂow of DeepCruiser.

state vectors. After all the provided inputs are proﬁled, we will get a set of traces which
describe the major states visited and transitions taken by an RNN.

In practice, the internal state space of an RNN and the number of traces enabled
by the training data are often beyond our analysis capability. Therefore, we perform
abstraction over the states and traces to obtain an abstract model capturing the global
characteristics of the trained network. At the state level, we apply Principle Component
Analysis (PCA) [34] to reduce the dimensions of the vectors and keeps the ﬁrst k
dominant components. For each of the k dimensions, we further partition them into m
equal intervals. At the transition level, we consolidate concrete transitions into abstract
ones according to the state abstraction. We also take into account the frequencies of
different transitions under various inputs and effectively derive a Markov Decision
Process (MDP) [35] model for the trained RNN.

Based on the abstract model, ﬁve coverage criteria are then designed to facilitate
the systematic testing of RNN. These include two state-level coverage criteria – the
basic state coverage (BSCov) and the k-step state boundary coverage (k-SBCov), and

DeepCruiser: Automated Guided Testing for Stateful Deep Learning Systems

7

three transition-level criteria – the basic transition coverage (BTCov), the input space
coverage (ISCov) and the weighted input coverage (WICov). These criteria are used to
guide test case generation in our evaluation with the aim to uncover defects in the RNN
under test (see Section 7).

The testing framework is designed to make use of the above criteria to facilitate
the defect discovery of RNN-based systems. With a chosen coverage criterion, the
testing process starts with a set of initial seeds (some audios under practical ASR testing
scenarios), namely the seed pool. Then in each iteration, we select an audio based on
heuristics and generate a mutant from it by applying certain transformations. If the
generated mutant triggers some defects, e.g., the transcription shows a large difference
from the expectation, it is labeled as a failing test. Otherwise, we check whether the
mutant improves the test coverage with respect to the chosen criteria and include it into
the seed pool if so.

4 State Transition Modeling of Recurrent Neural Network

RNN models are inherently stateful [36]. In this section, we formalize the internal states
and state transitions of RNNs, and describe an abstract model used to capture the global
characteristics of the trained RNN models.

4.1 RNN Internal States and State Transitions

Following [37], we represent a neural network abstractly as a differentiable parameterized
function f (·). The input to a RNN is a sequence x ∈ X N , where X is the input domain
and N is the length of the sequence. Let xi ∈ X be the i-th element of that sequence.
Then, when passing x into a RNN, it maintains a state vector s ∈ S N with s0 = 0 and
(si+1, yi) = f (si, xi), where S is the domain of the hidden state, si ∈ S is the hidden
state of RNN at the i-th iteration, and yi ∈ O is the corresponding output at that step.
We use sd

i to denote the d-th dimension of the state vector si.

Naturally, each input sequence x induces a ﬁnite sequence of state transitions t,
which we deﬁne as a trace. The i-th element in a trace t, denoted by ti, is the transition
from si to si+1 after accepting an input xi and producing an output yi. A Finite State
Transducer (FST) [38] can be used to represent a collection of traces more compactly [39]
as deﬁned below.

Deﬁnition 1. A FST is a tuple (S, X , O, I, F, δ) such that S is a non-empty ﬁnite set of
states, X is the input alphabet, O is the output alphabet, I ⊆ S is the set of initial states,
F ⊆ S is the set of ﬁnal states, and δ ⊆ S × X × O × S is the transition relation.

For example, Fig. 4 shows a simple FST representing two traces, namely, s0s1s2s3
and s0s1s(cid:48)2s3 with s0 being the initial state and s3 being the ﬁnal state. The ﬁrst trace
takes an input sequence x0x1x2 and emits an output sequence y0y1y2; the second trace
takes an input sequence x0x(cid:48)1x2 and emits an output sequence y0y(cid:48)1y2.

8

Xiaoning Du, Xiaofei Xie, Yi Li, Lei Ma, Jianjun Zhao, and Yang Liu

Fig. 4: An example FST representing two traces.

4.2 Abstract State Transition Model

The number of states and traces enabled while training a RNN can be huge. To effectively
capture the behaviors triggered by a large number of input sequences and better capture
the global characteristics of the trained network, we introduce an abstract state transition
model in this paper. The abstract model over-approximates the observed traces induced
of an RNN and has a much smaller set of states and transitions compared with the
original one. The abstraction is also conﬁgurable – one can trade-off between the size
and precision of the model so that the abstract model is still able to maintain useful
information of the input sequences for particular analysis tasks. To obtain an abstract
model for a trained RNN, we abstract over both the states and the transitions.
State Abstraction. Each concrete state si is represented as a vector (s1
i ), usu-
ally in high dimension (i.e., m could be a large number). Intuitively, an abstract state
represents a set of concrete states which are close in space. To obtain such a state ab-
straction, we ﬁrst apply the Principle Component Analysis (PCA) [34] to perform an
orthogonal transformation on the concrete states – ﬁnding the ﬁrst k principle compo-
nents (i.e., axes) which best distinguish the given state vectors and ignore their differences
on the other components. This is effectively to project all concrete states onto the chosen
k-dimensional component basis.

i , . . . , sm

Then, we split the new k-dimensional space into mk regular grids [40] such that
there are m equal-length intervals on each axis: where ed
i represents the i-th interval on
the d-th dimension, lbd and ubd are the lower and upper bounds of all state vectors on
the d-th dimension, respectively. In this way, all concrete states si which fall within the
same grid are mapped to the same abstract state: ˆs = {si|s1
_ }. We
denote the set of all abstract states as ˆS. Noticeably, the precision of the state abstraction
can easily be conﬁgured by tuning the parameters k and m.

_ ∧ · · · ∧ sk

i ∈ ek

i ∈ e1

Let j = I d(ˆs) be the index of ˆs on the d-th dimension such that for all s ∈ ˆs, sd falls
j (0 ≤ j < m). For any two abstract states ˆs and ˆs(cid:48), we deﬁne their distance as:

in ed

Dist(ˆs, ˆs(cid:48)) = Σk

d=1|I d(ˆs) − I d(ˆs(cid:48))|.

This deﬁnition can also be generalized to include space beyond the lower and upper
bounds.

Transition Abstraction. Once the state abstraction is computed, a concrete transition
between two concrete states can be mapped as a part of an abstract transition. An
abstract transition represents a set of concrete transitions which share the same source

x0:y0<latexit sha1_base64="rS/pAAHbjpW5p0DBuq8Qbfng8ek=">AAAB8HicbZDLSgMxFIbP1Futt6pLN8EiuCozIiiuim5cVrAXaYchk2ba0CQzJBlxGPoUblwo4tbHcefbmLaz0NYfAh//OYec84cJZ9q47rdTWlldW98ob1a2tnd296r7B20dp4rQFol5rLoh1pQzSVuGGU67iaJYhJx2wvHNtN55pEqzWN6bLKG+wEPJIkawsdbDU+CiK5QFblCtuXV3JrQMXgE1KNQMql/9QUxSQaUhHGvd89zE+DlWhhFOJ5V+qmmCyRgPac+ixIJqP58tPEEn1hmgKFb2SYNm7u+JHAutMxHaToHNSC/WpuZ/tV5qoks/ZzJJDZVk/lGUcmRiNL0eDZiixPDMAiaK2V0RGWGFibEZVWwI3uLJy9A+q3uW785rjesijjIcwTGcggcX0IBbaEILCAh4hld4c5Tz4rw7H/PWklPMHMIfOZ8/OlSPXQ==</latexit><latexit sha1_base64="rS/pAAHbjpW5p0DBuq8Qbfng8ek=">AAAB8HicbZDLSgMxFIbP1Futt6pLN8EiuCozIiiuim5cVrAXaYchk2ba0CQzJBlxGPoUblwo4tbHcefbmLaz0NYfAh//OYec84cJZ9q47rdTWlldW98ob1a2tnd296r7B20dp4rQFol5rLoh1pQzSVuGGU67iaJYhJx2wvHNtN55pEqzWN6bLKG+wEPJIkawsdbDU+CiK5QFblCtuXV3JrQMXgE1KNQMql/9QUxSQaUhHGvd89zE+DlWhhFOJ5V+qmmCyRgPac+ixIJqP58tPEEn1hmgKFb2SYNm7u+JHAutMxHaToHNSC/WpuZ/tV5qoks/ZzJJDZVk/lGUcmRiNL0eDZiixPDMAiaK2V0RGWGFibEZVWwI3uLJy9A+q3uW785rjesijjIcwTGcggcX0IBbaEILCAh4hld4c5Tz4rw7H/PWklPMHMIfOZ8/OlSPXQ==</latexit><latexit sha1_base64="rS/pAAHbjpW5p0DBuq8Qbfng8ek=">AAAB8HicbZDLSgMxFIbP1Futt6pLN8EiuCozIiiuim5cVrAXaYchk2ba0CQzJBlxGPoUblwo4tbHcefbmLaz0NYfAh//OYec84cJZ9q47rdTWlldW98ob1a2tnd296r7B20dp4rQFol5rLoh1pQzSVuGGU67iaJYhJx2wvHNtN55pEqzWN6bLKG+wEPJIkawsdbDU+CiK5QFblCtuXV3JrQMXgE1KNQMql/9QUxSQaUhHGvd89zE+DlWhhFOJ5V+qmmCyRgPac+ixIJqP58tPEEn1hmgKFb2SYNm7u+JHAutMxHaToHNSC/WpuZ/tV5qoks/ZzJJDZVk/lGUcmRiNL0eDZiixPDMAiaK2V0RGWGFibEZVWwI3uLJy9A+q3uW785rjesijjIcwTGcggcX0IBbaEILCAh4hld4c5Tz4rw7H/PWklPMHMIfOZ8/OlSPXQ==</latexit><latexit sha1_base64="rS/pAAHbjpW5p0DBuq8Qbfng8ek=">AAAB8HicbZDLSgMxFIbP1Futt6pLN8EiuCozIiiuim5cVrAXaYchk2ba0CQzJBlxGPoUblwo4tbHcefbmLaz0NYfAh//OYec84cJZ9q47rdTWlldW98ob1a2tnd296r7B20dp4rQFol5rLoh1pQzSVuGGU67iaJYhJx2wvHNtN55pEqzWN6bLKG+wEPJIkawsdbDU+CiK5QFblCtuXV3JrQMXgE1KNQMql/9QUxSQaUhHGvd89zE+DlWhhFOJ5V+qmmCyRgPac+ixIJqP58tPEEn1hmgKFb2SYNm7u+JHAutMxHaToHNSC/WpuZ/tV5qoks/ZzJJDZVk/lGUcmRiNL0eDZiixPDMAiaK2V0RGWGFibEZVWwI3uLJy9A+q3uW785rjesijjIcwTGcggcX0IBbaEILCAh4hld4c5Tz4rw7H/PWklPMHMIfOZ8/OlSPXQ==</latexit>s0<latexit sha1_base64="5RglIVPaGIZS566Od0dWx+E2ZAo=">AAAB6nicbZBNS8NAEIYn9avWr6hHL4tF8FQSEfRY9OKxov2ANpTNdtMu3WzC7kQooT/BiwdFvPqLvPlv3LY5aOsLCw/vzLAzb5hKYdDzvp3S2vrG5lZ5u7Kzu7d/4B4etUySacabLJGJ7oTUcCkUb6JAyTup5jQOJW+H49tZvf3EtRGJesRJyoOYDpWIBKNorQfT9/pu1at5c5FV8AuoQqFG3/3qDRKWxVwhk9SYru+lGORUo2CSTyu9zPCUsjEd8q5FRWNugny+6pScWWdAokTbp5DM3d8TOY2NmcSh7YwpjsxybWb+V+tmGF0HuVBphlyxxUdRJgkmZHY3GQjNGcqJBcq0sLsSNqKaMrTpVGwI/vLJq9C6qPmW7y+r9ZsijjKcwCmcgw9XUIc7aEATGAzhGV7hzZHOi/PufCxaS04xcwx/5Hz+AAKQjZo=</latexit><latexit sha1_base64="5RglIVPaGIZS566Od0dWx+E2ZAo=">AAAB6nicbZBNS8NAEIYn9avWr6hHL4tF8FQSEfRY9OKxov2ANpTNdtMu3WzC7kQooT/BiwdFvPqLvPlv3LY5aOsLCw/vzLAzb5hKYdDzvp3S2vrG5lZ5u7Kzu7d/4B4etUySacabLJGJ7oTUcCkUb6JAyTup5jQOJW+H49tZvf3EtRGJesRJyoOYDpWIBKNorQfT9/pu1at5c5FV8AuoQqFG3/3qDRKWxVwhk9SYru+lGORUo2CSTyu9zPCUsjEd8q5FRWNugny+6pScWWdAokTbp5DM3d8TOY2NmcSh7YwpjsxybWb+V+tmGF0HuVBphlyxxUdRJgkmZHY3GQjNGcqJBcq0sLsSNqKaMrTpVGwI/vLJq9C6qPmW7y+r9ZsijjKcwCmcgw9XUIc7aEATGAzhGV7hzZHOi/PufCxaS04xcwx/5Hz+AAKQjZo=</latexit><latexit sha1_base64="5RglIVPaGIZS566Od0dWx+E2ZAo=">AAAB6nicbZBNS8NAEIYn9avWr6hHL4tF8FQSEfRY9OKxov2ANpTNdtMu3WzC7kQooT/BiwdFvPqLvPlv3LY5aOsLCw/vzLAzb5hKYdDzvp3S2vrG5lZ5u7Kzu7d/4B4etUySacabLJGJ7oTUcCkUb6JAyTup5jQOJW+H49tZvf3EtRGJesRJyoOYDpWIBKNorQfT9/pu1at5c5FV8AuoQqFG3/3qDRKWxVwhk9SYru+lGORUo2CSTyu9zPCUsjEd8q5FRWNugny+6pScWWdAokTbp5DM3d8TOY2NmcSh7YwpjsxybWb+V+tmGF0HuVBphlyxxUdRJgkmZHY3GQjNGcqJBcq0sLsSNqKaMrTpVGwI/vLJq9C6qPmW7y+r9ZsijjKcwCmcgw9XUIc7aEATGAzhGV7hzZHOi/PufCxaS04xcwx/5Hz+AAKQjZo=</latexit><latexit sha1_base64="5RglIVPaGIZS566Od0dWx+E2ZAo=">AAAB6nicbZBNS8NAEIYn9avWr6hHL4tF8FQSEfRY9OKxov2ANpTNdtMu3WzC7kQooT/BiwdFvPqLvPlv3LY5aOsLCw/vzLAzb5hKYdDzvp3S2vrG5lZ5u7Kzu7d/4B4etUySacabLJGJ7oTUcCkUb6JAyTup5jQOJW+H49tZvf3EtRGJesRJyoOYDpWIBKNorQfT9/pu1at5c5FV8AuoQqFG3/3qDRKWxVwhk9SYru+lGORUo2CSTyu9zPCUsjEd8q5FRWNugny+6pScWWdAokTbp5DM3d8TOY2NmcSh7YwpjsxybWb+V+tmGF0HuVBphlyxxUdRJgkmZHY3GQjNGcqJBcq0sLsSNqKaMrTpVGwI/vLJq9C6qPmW7y+r9ZsijjKcwCmcgw9XUIc7aEATGAzhGV7hzZHOi/PufCxaS04xcwx/5Hz+AAKQjZo=</latexit>s1<latexit sha1_base64="RWexdmHm1B4IFVP4A7xkvKvI624=">AAAB6nicbZBNS8NAEIYn9avWr6hHL4tF8FQSEfRY9OKxov2ANpTNdtIu3WzC7kYooT/BiwdFvPqLvPlv3LY5aOsLCw/vzLAzb5gKro3nfTultfWNza3ydmVnd2//wD08aukkUwybLBGJ6oRUo+ASm4YbgZ1UIY1Dge1wfDurt59QaZ7IRzNJMYjpUPKIM2qs9aD7ft+tejVvLrIKfgFVKNTou1+9QcKyGKVhgmrd9b3UBDlVhjOB00ov05hSNqZD7FqUNEYd5PNVp+TMOgMSJco+acjc/T2R01jrSRzazpiakV6uzcz/at3MRNdBzmWaGZRs8VGUCWISMrubDLhCZsTEAmWK210JG1FFmbHpVGwI/vLJq9C6qPmW7y+r9ZsijjKcwCmcgw9XUIc7aEATGAzhGV7hzRHOi/PufCxaS04xcwx/5Hz+AAQUjZs=</latexit><latexit sha1_base64="RWexdmHm1B4IFVP4A7xkvKvI624=">AAAB6nicbZBNS8NAEIYn9avWr6hHL4tF8FQSEfRY9OKxov2ANpTNdtIu3WzC7kYooT/BiwdFvPqLvPlv3LY5aOsLCw/vzLAzb5gKro3nfTultfWNza3ydmVnd2//wD08aukkUwybLBGJ6oRUo+ASm4YbgZ1UIY1Dge1wfDurt59QaZ7IRzNJMYjpUPKIM2qs9aD7ft+tejVvLrIKfgFVKNTou1+9QcKyGKVhgmrd9b3UBDlVhjOB00ov05hSNqZD7FqUNEYd5PNVp+TMOgMSJco+acjc/T2R01jrSRzazpiakV6uzcz/at3MRNdBzmWaGZRs8VGUCWISMrubDLhCZsTEAmWK210JG1FFmbHpVGwI/vLJq9C6qPmW7y+r9ZsijjKcwCmcgw9XUIc7aEATGAzhGV7hzRHOi/PufCxaS04xcwx/5Hz+AAQUjZs=</latexit><latexit sha1_base64="RWexdmHm1B4IFVP4A7xkvKvI624=">AAAB6nicbZBNS8NAEIYn9avWr6hHL4tF8FQSEfRY9OKxov2ANpTNdtIu3WzC7kYooT/BiwdFvPqLvPlv3LY5aOsLCw/vzLAzb5gKro3nfTultfWNza3ydmVnd2//wD08aukkUwybLBGJ6oRUo+ASm4YbgZ1UIY1Dge1wfDurt59QaZ7IRzNJMYjpUPKIM2qs9aD7ft+tejVvLrIKfgFVKNTou1+9QcKyGKVhgmrd9b3UBDlVhjOB00ov05hSNqZD7FqUNEYd5PNVp+TMOgMSJco+acjc/T2R01jrSRzazpiakV6uzcz/at3MRNdBzmWaGZRs8VGUCWISMrubDLhCZsTEAmWK210JG1FFmbHpVGwI/vLJq9C6qPmW7y+r9ZsijjKcwCmcgw9XUIc7aEATGAzhGV7hzRHOi/PufCxaS04xcwx/5Hz+AAQUjZs=</latexit><latexit sha1_base64="RWexdmHm1B4IFVP4A7xkvKvI624=">AAAB6nicbZBNS8NAEIYn9avWr6hHL4tF8FQSEfRY9OKxov2ANpTNdtIu3WzC7kYooT/BiwdFvPqLvPlv3LY5aOsLCw/vzLAzb5gKro3nfTultfWNza3ydmVnd2//wD08aukkUwybLBGJ6oRUo+ASm4YbgZ1UIY1Dge1wfDurt59QaZ7IRzNJMYjpUPKIM2qs9aD7ft+tejVvLrIKfgFVKNTou1+9QcKyGKVhgmrd9b3UBDlVhjOB00ov05hSNqZD7FqUNEYd5PNVp+TMOgMSJco+acjc/T2R01jrSRzazpiakV6uzcz/at3MRNdBzmWaGZRs8VGUCWISMrubDLhCZsTEAmWK210JG1FFmbHpVGwI/vLJq9C6qPmW7y+r9ZsijjKcwCmcgw9XUIc7aEATGAzhGV7hzRHOi/PufCxaS04xcwx/5Hz+AAQUjZs=</latexit>s2<latexit sha1_base64="Gc3QakCjTW+GjTaNq5NAFvL5Dt0=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FSSItRj0YvHivYD2lA22027dLMJuxOhhP4ELx4U8eov8ua/cdvmoK0vLDy8M8POvEEihUHX/XYKG5tb2zvF3dLe/sHhUfn4pG3iVDPeYrGMdTeghkuheAsFSt5NNKdRIHknmNzO650nro2I1SNOE+5HdKREKBhFaz2YQW1QrrhVdyGyDl4OFcjVHJS/+sOYpRFXyCQ1pue5CfoZ1SiY5LNSPzU8oWxCR7xnUdGIGz9brDojF9YZkjDW9ikkC/f3REYjY6ZRYDsjimOzWpub/9V6KYbXfiZUkiJXbPlRmEqCMZnfTYZCc4ZyaoEyLeyuhI2ppgxtOiUbgrd68jq0a1XP8v1VpXGTx1GEMziHS/CgDg24gya0gMEInuEV3hzpvDjvzseyteDkM6fwR87nDwWYjZw=</latexit><latexit sha1_base64="Gc3QakCjTW+GjTaNq5NAFvL5Dt0=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FSSItRj0YvHivYD2lA22027dLMJuxOhhP4ELx4U8eov8ua/cdvmoK0vLDy8M8POvEEihUHX/XYKG5tb2zvF3dLe/sHhUfn4pG3iVDPeYrGMdTeghkuheAsFSt5NNKdRIHknmNzO650nro2I1SNOE+5HdKREKBhFaz2YQW1QrrhVdyGyDl4OFcjVHJS/+sOYpRFXyCQ1pue5CfoZ1SiY5LNSPzU8oWxCR7xnUdGIGz9brDojF9YZkjDW9ikkC/f3REYjY6ZRYDsjimOzWpub/9V6KYbXfiZUkiJXbPlRmEqCMZnfTYZCc4ZyaoEyLeyuhI2ppgxtOiUbgrd68jq0a1XP8v1VpXGTx1GEMziHS/CgDg24gya0gMEInuEV3hzpvDjvzseyteDkM6fwR87nDwWYjZw=</latexit><latexit sha1_base64="Gc3QakCjTW+GjTaNq5NAFvL5Dt0=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FSSItRj0YvHivYD2lA22027dLMJuxOhhP4ELx4U8eov8ua/cdvmoK0vLDy8M8POvEEihUHX/XYKG5tb2zvF3dLe/sHhUfn4pG3iVDPeYrGMdTeghkuheAsFSt5NNKdRIHknmNzO650nro2I1SNOE+5HdKREKBhFaz2YQW1QrrhVdyGyDl4OFcjVHJS/+sOYpRFXyCQ1pue5CfoZ1SiY5LNSPzU8oWxCR7xnUdGIGz9brDojF9YZkjDW9ikkC/f3REYjY6ZRYDsjimOzWpub/9V6KYbXfiZUkiJXbPlRmEqCMZnfTYZCc4ZyaoEyLeyuhI2ppgxtOiUbgrd68jq0a1XP8v1VpXGTx1GEMziHS/CgDg24gya0gMEInuEV3hzpvDjvzseyteDkM6fwR87nDwWYjZw=</latexit><latexit sha1_base64="Gc3QakCjTW+GjTaNq5NAFvL5Dt0=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FSSItRj0YvHivYD2lA22027dLMJuxOhhP4ELx4U8eov8ua/cdvmoK0vLDy8M8POvEEihUHX/XYKG5tb2zvF3dLe/sHhUfn4pG3iVDPeYrGMdTeghkuheAsFSt5NNKdRIHknmNzO650nro2I1SNOE+5HdKREKBhFaz2YQW1QrrhVdyGyDl4OFcjVHJS/+sOYpRFXyCQ1pue5CfoZ1SiY5LNSPzU8oWxCR7xnUdGIGz9brDojF9YZkjDW9ikkC/f3REYjY6ZRYDsjimOzWpub/9V6KYbXfiZUkiJXbPlRmEqCMZnfTYZCc4ZyaoEyLeyuhI2ppgxtOiUbgrd68jq0a1XP8v1VpXGTx1GEMziHS/CgDg24gya0gMEInuEV3hzpvDjvzseyteDkM6fwR87nDwWYjZw=</latexit>s02<latexit sha1_base64="VFJfgwr//97jp/VyqXJBHsy39MQ=">AAAB63icbZDLSgMxFIZPvNZ6q7p0EyyiqzJTBF0W3bisYC/QDiWTZtrQJDMkGaEMfQU3LhRx6wu5823MtLPQ1h8CH/85h5zzh4ngxnreN1pb39jc2i7tlHf39g8OK0fHbROnmrIWjUWsuyExTHDFWpZbwbqJZkSGgnXCyV1e7zwxbXisHu00YYEkI8UjTonNLTOoXwwqVa/mzYVXwS+gCoWag8pXfxjTVDJlqSDG9HwvsUFGtOVUsFm5nxqWEDohI9ZzqIhkJsjmu87wuXOGOIq1e8riuft7IiPSmKkMXackdmyWa7n5X62X2ugmyLhKUssUXXwUpQLbGOeH4yHXjFoxdUCo5m5XTMdEE2pdPGUXgr988iq06zXf8cNVtXFbxFGCUziDS/DhGhpwD01oAYUxPMMrvCGJXtA7+li0rqFi5gT+CH3+AGagjc0=</latexit><latexit sha1_base64="VFJfgwr//97jp/VyqXJBHsy39MQ=">AAAB63icbZDLSgMxFIZPvNZ6q7p0EyyiqzJTBF0W3bisYC/QDiWTZtrQJDMkGaEMfQU3LhRx6wu5823MtLPQ1h8CH/85h5zzh4ngxnreN1pb39jc2i7tlHf39g8OK0fHbROnmrIWjUWsuyExTHDFWpZbwbqJZkSGgnXCyV1e7zwxbXisHu00YYEkI8UjTonNLTOoXwwqVa/mzYVXwS+gCoWag8pXfxjTVDJlqSDG9HwvsUFGtOVUsFm5nxqWEDohI9ZzqIhkJsjmu87wuXOGOIq1e8riuft7IiPSmKkMXackdmyWa7n5X62X2ugmyLhKUssUXXwUpQLbGOeH4yHXjFoxdUCo5m5XTMdEE2pdPGUXgr988iq06zXf8cNVtXFbxFGCUziDS/DhGhpwD01oAYUxPMMrvCGJXtA7+li0rqFi5gT+CH3+AGagjc0=</latexit><latexit sha1_base64="VFJfgwr//97jp/VyqXJBHsy39MQ=">AAAB63icbZDLSgMxFIZPvNZ6q7p0EyyiqzJTBF0W3bisYC/QDiWTZtrQJDMkGaEMfQU3LhRx6wu5823MtLPQ1h8CH/85h5zzh4ngxnreN1pb39jc2i7tlHf39g8OK0fHbROnmrIWjUWsuyExTHDFWpZbwbqJZkSGgnXCyV1e7zwxbXisHu00YYEkI8UjTonNLTOoXwwqVa/mzYVXwS+gCoWag8pXfxjTVDJlqSDG9HwvsUFGtOVUsFm5nxqWEDohI9ZzqIhkJsjmu87wuXOGOIq1e8riuft7IiPSmKkMXackdmyWa7n5X62X2ugmyLhKUssUXXwUpQLbGOeH4yHXjFoxdUCo5m5XTMdEE2pdPGUXgr988iq06zXf8cNVtXFbxFGCUziDS/DhGhpwD01oAYUxPMMrvCGJXtA7+li0rqFi5gT+CH3+AGagjc0=</latexit><latexit sha1_base64="VFJfgwr//97jp/VyqXJBHsy39MQ=">AAAB63icbZDLSgMxFIZPvNZ6q7p0EyyiqzJTBF0W3bisYC/QDiWTZtrQJDMkGaEMfQU3LhRx6wu5823MtLPQ1h8CH/85h5zzh4ngxnreN1pb39jc2i7tlHf39g8OK0fHbROnmrIWjUWsuyExTHDFWpZbwbqJZkSGgnXCyV1e7zwxbXisHu00YYEkI8UjTonNLTOoXwwqVa/mzYVXwS+gCoWag8pXfxjTVDJlqSDG9HwvsUFGtOVUsFm5nxqWEDohI9ZzqIhkJsjmu87wuXOGOIq1e8riuft7IiPSmKkMXackdmyWa7n5X62X2ugmyLhKUssUXXwUpQLbGOeH4yHXjFoxdUCo5m5XTMdEE2pdPGUXgr988iq06zXf8cNVtXFbxFGCUziDS/DhGhpwD01oAYUxPMMrvCGJXtA7+li0rqFi5gT+CH3+AGagjc0=</latexit>s3<latexit sha1_base64="YcoR3xqQJZQUEvZdaUaV4n881Ws=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSLeix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oPuX/bLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5ftapX6Tx1GEEziFc/DgCupwBw1oAoMhPMMrvDnCeXHenY9Fa8HJZ47hj5zPHwccjZ0=</latexit><latexit sha1_base64="YcoR3xqQJZQUEvZdaUaV4n881Ws=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSLeix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oPuX/bLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5ftapX6Tx1GEEziFc/DgCupwBw1oAoMhPMMrvDnCeXHenY9Fa8HJZ47hj5zPHwccjZ0=</latexit><latexit sha1_base64="YcoR3xqQJZQUEvZdaUaV4n881Ws=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSLeix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oPuX/bLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5ftapX6Tx1GEEziFc/DgCupwBw1oAoMhPMMrvDnCeXHenY9Fa8HJZ47hj5zPHwccjZ0=</latexit><latexit sha1_base64="YcoR3xqQJZQUEvZdaUaV4n881Ws=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSLeix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oPuX/bLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5ftapX6Tx1GEEziFc/DgCupwBw1oAoMhPMMrvDnCeXHenY9Fa8HJZ47hj5zPHwccjZ0=</latexit>x1:y1<latexit sha1_base64="kx/I1xTRMto7rTTCnvxTny30Eho=">AAAB8HicbZDLSgMxFIbP1Futt6pLN8EiuCozIiiuim5cVrAXaYchk2ba0CQzJBlxGPoUblwo4tbHcefbmLaz0NYfAh//OYec84cJZ9q47rdTWlldW98ob1a2tnd296r7B20dp4rQFol5rLoh1pQzSVuGGU67iaJYhJx2wvHNtN55pEqzWN6bLKG+wEPJIkawsdbDU+ChK5QFXlCtuXV3JrQMXgE1KNQMql/9QUxSQaUhHGvd89zE+DlWhhFOJ5V+qmmCyRgPac+ixIJqP58tPEEn1hmgKFb2SYNm7u+JHAutMxHaToHNSC/WpuZ/tV5qoks/ZzJJDZVk/lGUcmRiNL0eDZiixPDMAiaK2V0RGWGFibEZVWwI3uLJy9A+q3uW785rjesijjIcwTGcggcX0IBbaEILCAh4hld4c5Tz4rw7H/PWklPMHMIfOZ8/PWKPXw==</latexit><latexit sha1_base64="kx/I1xTRMto7rTTCnvxTny30Eho=">AAAB8HicbZDLSgMxFIbP1Futt6pLN8EiuCozIiiuim5cVrAXaYchk2ba0CQzJBlxGPoUblwo4tbHcefbmLaz0NYfAh//OYec84cJZ9q47rdTWlldW98ob1a2tnd296r7B20dp4rQFol5rLoh1pQzSVuGGU67iaJYhJx2wvHNtN55pEqzWN6bLKG+wEPJIkawsdbDU+ChK5QFXlCtuXV3JrQMXgE1KNQMql/9QUxSQaUhHGvd89zE+DlWhhFOJ5V+qmmCyRgPac+ixIJqP58tPEEn1hmgKFb2SYNm7u+JHAutMxHaToHNSC/WpuZ/tV5qoks/ZzJJDZVk/lGUcmRiNL0eDZiixPDMAiaK2V0RGWGFibEZVWwI3uLJy9A+q3uW785rjesijjIcwTGcggcX0IBbaEILCAh4hld4c5Tz4rw7H/PWklPMHMIfOZ8/PWKPXw==</latexit><latexit sha1_base64="kx/I1xTRMto7rTTCnvxTny30Eho=">AAAB8HicbZDLSgMxFIbP1Futt6pLN8EiuCozIiiuim5cVrAXaYchk2ba0CQzJBlxGPoUblwo4tbHcefbmLaz0NYfAh//OYec84cJZ9q47rdTWlldW98ob1a2tnd296r7B20dp4rQFol5rLoh1pQzSVuGGU67iaJYhJx2wvHNtN55pEqzWN6bLKG+wEPJIkawsdbDU+ChK5QFXlCtuXV3JrQMXgE1KNQMql/9QUxSQaUhHGvd89zE+DlWhhFOJ5V+qmmCyRgPac+ixIJqP58tPEEn1hmgKFb2SYNm7u+JHAutMxHaToHNSC/WpuZ/tV5qoks/ZzJJDZVk/lGUcmRiNL0eDZiixPDMAiaK2V0RGWGFibEZVWwI3uLJy9A+q3uW785rjesijjIcwTGcggcX0IBbaEILCAh4hld4c5Tz4rw7H/PWklPMHMIfOZ8/PWKPXw==</latexit><latexit sha1_base64="kx/I1xTRMto7rTTCnvxTny30Eho=">AAAB8HicbZDLSgMxFIbP1Futt6pLN8EiuCozIiiuim5cVrAXaYchk2ba0CQzJBlxGPoUblwo4tbHcefbmLaz0NYfAh//OYec84cJZ9q47rdTWlldW98ob1a2tnd296r7B20dp4rQFol5rLoh1pQzSVuGGU67iaJYhJx2wvHNtN55pEqzWN6bLKG+wEPJIkawsdbDU+ChK5QFXlCtuXV3JrQMXgE1KNQMql/9QUxSQaUhHGvd89zE+DlWhhFOJ5V+qmmCyRgPac+ixIJqP58tPEEn1hmgKFb2SYNm7u+JHAutMxHaToHNSC/WpuZ/tV5qoks/ZzJJDZVk/lGUcmRiNL0eDZiixPDMAiaK2V0RGWGFibEZVWwI3uLJy9A+q3uW785rjesijjIcwTGcggcX0IBbaEILCAh4hld4c5Tz4rw7H/PWklPMHMIfOZ8/PWKPXw==</latexit>x2:y2<latexit sha1_base64="uCeRd0WUAor9I/vLewo5Ie1ApSY=">AAAB8HicbZDLSgMxFIbPeK31VnXpJlgEV2WmCIqrohuXFexF2mHIpJk2NMkMSUYchj6FGxeKuPVx3Pk2pu0stPWHwMd/ziHn/GHCmTau++2srK6tb2yWtsrbO7t7+5WDw7aOU0Voi8Q8Vt0Qa8qZpC3DDKfdRFEsQk474fhmWu88UqVZLO9NllBf4KFkESPYWOvhKaijK5QF9aBSdWvuTGgZvAKqUKgZVL76g5ikgkpDONa657mJ8XOsDCOcTsr9VNMEkzEe0p5FiQXVfj5beIJOrTNAUazskwbN3N8TORZaZyK0nQKbkV6sTc3/ar3URJd+zmSSGirJ/KMo5cjEaHo9GjBFieGZBUwUs7siMsIKE2MzKtsQvMWTl6Fdr3mW786rjesijhIcwwmcgQcX0IBbaEILCAh4hld4c5Tz4rw7H/PWFaeYOYI/cj5/AEBwj2E=</latexit><latexit sha1_base64="uCeRd0WUAor9I/vLewo5Ie1ApSY=">AAAB8HicbZDLSgMxFIbPeK31VnXpJlgEV2WmCIqrohuXFexF2mHIpJk2NMkMSUYchj6FGxeKuPVx3Pk2pu0stPWHwMd/ziHn/GHCmTau++2srK6tb2yWtsrbO7t7+5WDw7aOU0Voi8Q8Vt0Qa8qZpC3DDKfdRFEsQk474fhmWu88UqVZLO9NllBf4KFkESPYWOvhKaijK5QF9aBSdWvuTGgZvAKqUKgZVL76g5ikgkpDONa657mJ8XOsDCOcTsr9VNMEkzEe0p5FiQXVfj5beIJOrTNAUazskwbN3N8TORZaZyK0nQKbkV6sTc3/ar3URJd+zmSSGirJ/KMo5cjEaHo9GjBFieGZBUwUs7siMsIKE2MzKtsQvMWTl6Fdr3mW786rjesijhIcwwmcgQcX0IBbaEILCAh4hld4c5Tz4rw7H/PWFaeYOYI/cj5/AEBwj2E=</latexit><latexit sha1_base64="uCeRd0WUAor9I/vLewo5Ie1ApSY=">AAAB8HicbZDLSgMxFIbPeK31VnXpJlgEV2WmCIqrohuXFexF2mHIpJk2NMkMSUYchj6FGxeKuPVx3Pk2pu0stPWHwMd/ziHn/GHCmTau++2srK6tb2yWtsrbO7t7+5WDw7aOU0Voi8Q8Vt0Qa8qZpC3DDKfdRFEsQk474fhmWu88UqVZLO9NllBf4KFkESPYWOvhKaijK5QF9aBSdWvuTGgZvAKqUKgZVL76g5ikgkpDONa657mJ8XOsDCOcTsr9VNMEkzEe0p5FiQXVfj5beIJOrTNAUazskwbN3N8TORZaZyK0nQKbkV6sTc3/ar3URJd+zmSSGirJ/KMo5cjEaHo9GjBFieGZBUwUs7siMsIKE2MzKtsQvMWTl6Fdr3mW786rjesijhIcwwmcgQcX0IBbaEILCAh4hld4c5Tz4rw7H/PWFaeYOYI/cj5/AEBwj2E=</latexit><latexit sha1_base64="uCeRd0WUAor9I/vLewo5Ie1ApSY=">AAAB8HicbZDLSgMxFIbPeK31VnXpJlgEV2WmCIqrohuXFexF2mHIpJk2NMkMSUYchj6FGxeKuPVx3Pk2pu0stPWHwMd/ziHn/GHCmTau++2srK6tb2yWtsrbO7t7+5WDw7aOU0Voi8Q8Vt0Qa8qZpC3DDKfdRFEsQk474fhmWu88UqVZLO9NllBf4KFkESPYWOvhKaijK5QF9aBSdWvuTGgZvAKqUKgZVL76g5ikgkpDONa657mJ8XOsDCOcTsr9VNMEkzEe0p5FiQXVfj5beIJOrTNAUazskwbN3N8TORZaZyK0nQKbkV6sTc3/ar3URJd+zmSSGirJ/KMo5cjEaHo9GjBFieGZBUwUs7siMsIKE2MzKtsQvMWTl6Fdr3mW786rjesijhIcwwmcgQcX0IBbaEILCAh4hld4c5Tz4rw7H/PWFaeYOYI/cj5/AEBwj2E=</latexit>x02:y02<latexit sha1_base64="mSjrBQp161BwFL57s7MIGNbI4JY=">AAAB8nicbVDLSgMxFM34rPVVdekmWERXZaYIiquiG5cV7AOmQ8mkmTY0kwzJHXEY+hluXCji1q9x59+YtrPQ1gMhh3Pu5d57wkRwA6777aysrq1vbJa2yts7u3v7lYPDtlGppqxFlVC6GxLDBJesBRwE6yaakTgUrBOOb6d+55Fpw5V8gCxhQUyGkkecErCS/9Svn+FrnNmvX6m6NXcGvEy8glRRgWa/8tUbKJrGTAIVxBjfcxMIcqKBU8Em5V5qWELomAyZb6kkMTNBPlt5gk+tMsCR0vZJwDP1d0dOYmOyOLSVMYGRWfSm4n+en0J0FeRcJikwSeeDolRgUHh6Px5wzSiIzBJCNbe7YjoimlCwKZVtCN7iycukXa95lt9fVBs3RRwldIxO0Dny0CVqoDvURC1EkULP6BW9OeC8OO/Ox7x0xSl6jtAfOJ8/BUiPww==</latexit><latexit sha1_base64="mSjrBQp161BwFL57s7MIGNbI4JY=">AAAB8nicbVDLSgMxFM34rPVVdekmWERXZaYIiquiG5cV7AOmQ8mkmTY0kwzJHXEY+hluXCji1q9x59+YtrPQ1gMhh3Pu5d57wkRwA6777aysrq1vbJa2yts7u3v7lYPDtlGppqxFlVC6GxLDBJesBRwE6yaakTgUrBOOb6d+55Fpw5V8gCxhQUyGkkecErCS/9Svn+FrnNmvX6m6NXcGvEy8glRRgWa/8tUbKJrGTAIVxBjfcxMIcqKBU8Em5V5qWELomAyZb6kkMTNBPlt5gk+tMsCR0vZJwDP1d0dOYmOyOLSVMYGRWfSm4n+en0J0FeRcJikwSeeDolRgUHh6Px5wzSiIzBJCNbe7YjoimlCwKZVtCN7iycukXa95lt9fVBs3RRwldIxO0Dny0CVqoDvURC1EkULP6BW9OeC8OO/Ox7x0xSl6jtAfOJ8/BUiPww==</latexit><latexit sha1_base64="mSjrBQp161BwFL57s7MIGNbI4JY=">AAAB8nicbVDLSgMxFM34rPVVdekmWERXZaYIiquiG5cV7AOmQ8mkmTY0kwzJHXEY+hluXCji1q9x59+YtrPQ1gMhh3Pu5d57wkRwA6777aysrq1vbJa2yts7u3v7lYPDtlGppqxFlVC6GxLDBJesBRwE6yaakTgUrBOOb6d+55Fpw5V8gCxhQUyGkkecErCS/9Svn+FrnNmvX6m6NXcGvEy8glRRgWa/8tUbKJrGTAIVxBjfcxMIcqKBU8Em5V5qWELomAyZb6kkMTNBPlt5gk+tMsCR0vZJwDP1d0dOYmOyOLSVMYGRWfSm4n+en0J0FeRcJikwSeeDolRgUHh6Px5wzSiIzBJCNbe7YjoimlCwKZVtCN7iycukXa95lt9fVBs3RRwldIxO0Dny0CVqoDvURC1EkULP6BW9OeC8OO/Ox7x0xSl6jtAfOJ8/BUiPww==</latexit><latexit sha1_base64="mSjrBQp161BwFL57s7MIGNbI4JY=">AAAB8nicbVDLSgMxFM34rPVVdekmWERXZaYIiquiG5cV7AOmQ8mkmTY0kwzJHXEY+hluXCji1q9x59+YtrPQ1gMhh3Pu5d57wkRwA6777aysrq1vbJa2yts7u3v7lYPDtlGppqxFlVC6GxLDBJesBRwE6yaakTgUrBOOb6d+55Fpw5V8gCxhQUyGkkecErCS/9Svn+FrnNmvX6m6NXcGvEy8glRRgWa/8tUbKJrGTAIVxBjfcxMIcqKBU8Em5V5qWELomAyZb6kkMTNBPlt5gk+tMsCR0vZJwDP1d0dOYmOyOLSVMYGRWfSm4n+en0J0FeRcJikwSeeDolRgUHh6Px5wzSiIzBJCNbe7YjoimlCwKZVtCN7iycukXa95lt9fVBs3RRwldIxO0Dny0CVqoDvURC1EkULP6BW9OeC8OO/Ox7x0xSl6jtAfOJ8/BUiPww==</latexit>x01:y01<latexit sha1_base64="oql6XjpnCnfH61+X/63F0jQ6Ru0=">AAAB8nicbVDLSgMxFM3UV62vqks3wSK6KjMiKK6KblxWsA+YDiWTZtrQTDIkd8Rh6Ge4caGIW7/GnX9j2s5CWw+EHM65l3vvCRPBDbjut1NaWV1b3yhvVra2d3b3qvsHbaNSTVmLKqF0NySGCS5ZCzgI1k00I3EoWCcc3079ziPThiv5AFnCgpgMJY84JWAl/6nvneJrnNmvX625dXcGvEy8gtRQgWa/+tUbKJrGTAIVxBjfcxMIcqKBU8EmlV5qWELomAyZb6kkMTNBPlt5gk+sMsCR0vZJwDP1d0dOYmOyOLSVMYGRWfSm4n+en0J0FeRcJikwSeeDolRgUHh6Px5wzSiIzBJCNbe7YjoimlCwKVVsCN7iycukfV73LL+/qDVuijjK6AgdozPkoUvUQHeoiVqIIoWe0St6c8B5cd6dj3lpySl6DtEfOJ8/AjePwQ==</latexit><latexit sha1_base64="oql6XjpnCnfH61+X/63F0jQ6Ru0=">AAAB8nicbVDLSgMxFM3UV62vqks3wSK6KjMiKK6KblxWsA+YDiWTZtrQTDIkd8Rh6Ge4caGIW7/GnX9j2s5CWw+EHM65l3vvCRPBDbjut1NaWV1b3yhvVra2d3b3qvsHbaNSTVmLKqF0NySGCS5ZCzgI1k00I3EoWCcc3079ziPThiv5AFnCgpgMJY84JWAl/6nvneJrnNmvX625dXcGvEy8gtRQgWa/+tUbKJrGTAIVxBjfcxMIcqKBU8EmlV5qWELomAyZb6kkMTNBPlt5gk+sMsCR0vZJwDP1d0dOYmOyOLSVMYGRWfSm4n+en0J0FeRcJikwSeeDolRgUHh6Px5wzSiIzBJCNbe7YjoimlCwKVVsCN7iycukfV73LL+/qDVuijjK6AgdozPkoUvUQHeoiVqIIoWe0St6c8B5cd6dj3lpySl6DtEfOJ8/AjePwQ==</latexit><latexit sha1_base64="oql6XjpnCnfH61+X/63F0jQ6Ru0=">AAAB8nicbVDLSgMxFM3UV62vqks3wSK6KjMiKK6KblxWsA+YDiWTZtrQTDIkd8Rh6Ge4caGIW7/GnX9j2s5CWw+EHM65l3vvCRPBDbjut1NaWV1b3yhvVra2d3b3qvsHbaNSTVmLKqF0NySGCS5ZCzgI1k00I3EoWCcc3079ziPThiv5AFnCgpgMJY84JWAl/6nvneJrnNmvX625dXcGvEy8gtRQgWa/+tUbKJrGTAIVxBjfcxMIcqKBU8EmlV5qWELomAyZb6kkMTNBPlt5gk+sMsCR0vZJwDP1d0dOYmOyOLSVMYGRWfSm4n+en0J0FeRcJikwSeeDolRgUHh6Px5wzSiIzBJCNbe7YjoimlCwKVVsCN7iycukfV73LL+/qDVuijjK6AgdozPkoUvUQHeoiVqIIoWe0St6c8B5cd6dj3lpySl6DtEfOJ8/AjePwQ==</latexit><latexit sha1_base64="oql6XjpnCnfH61+X/63F0jQ6Ru0=">AAAB8nicbVDLSgMxFM3UV62vqks3wSK6KjMiKK6KblxWsA+YDiWTZtrQTDIkd8Rh6Ge4caGIW7/GnX9j2s5CWw+EHM65l3vvCRPBDbjut1NaWV1b3yhvVra2d3b3qvsHbaNSTVmLKqF0NySGCS5ZCzgI1k00I3EoWCcc3079ziPThiv5AFnCgpgMJY84JWAl/6nvneJrnNmvX625dXcGvEy8gtRQgWa/+tUbKJrGTAIVxBjfcxMIcqKBU8EmlV5qWELomAyZb6kkMTNBPlt5gk+sMsCR0vZJwDP1d0dOYmOyOLSVMYGRWfSm4n+en0J0FeRcJikwSeeDolRgUHh6Px5wzSiIzBJCNbe7YjoimlCwKVVsCN7iycukfV73LL+/qDVuijjK6AgdozPkoUvUQHeoiVqIIoWe0St6c8B5cd6dj3lpySl6DtEfOJ8/AjePwQ==</latexit>DeepCruiser: Automated Guided Testing for Stateful Deep Learning Systems

9

(a) Concrete traces.

Fig. 5: A set of concrete traces and their corresponding abstract state transition model.

(b) MDP abstraction.

and destination abstract states. In other words, there is an abstract transition between
two abstract states ˆs and ˆs(cid:48) if and only if there exists a concrete transition between s and
s(cid:48) such that s ∈ ˆs ∧ s(cid:48) ∈ ˆs(cid:48). The set of all abstract transitions is denoted as ˆδ ⊆ ˆS × ˆS.
For instance, Figure 5a depicts three concrete traces, i.e., t1, t2 and t3, where states
are shown as dots and transitions are directed edges connecting dots. The grids drawn in
dashed lines represent the abstract states, i.e., ˆs0, ˆs1, ˆs2, and ˆs3, each of which is mapped
to a set of concrete states inside the corresponding grid. The set of abstract transitions is,
therefore, {(ˆs0, ˆs1), (ˆs1, ˆs0), (ˆs1, ˆs1), (ˆs1, ˆs2), (ˆs1, ˆs3), (ˆs3, ˆs3)}.

4.3 Representing Trained RNN as a Markov Decision Process

Each input sequence in the training set yields a concrete trace of the RNN model. The
abstract state transition model captures all the concrete traces enabled from training
data (or its representative parts) and other potential traces which have not been enabled.
Because of the ways how the state and transition abstractions are deﬁned, the resulting
abstract model represents an over-approximation and generalization of the observed
behaviors of the trained RNN model.

To also take into account the likelihood of abstract transitions under different in-
puts, we augment the abstract model with transition probabilities and non-deterministic
choices, effectively making it a Markov Decision Process (MDP) [35] without costs.

Deﬁnition 2. A MDP is a tuple ( ˆS, I, ˆT ), where ˆS is a set of abstract states, I is a set
of initial states, and ˆT : ˆS × ˆX (cid:55)→ Dist( ˆS) is the transition probability function such
that ˆX represent the (abstract) input space and Dist( ˆS) is the set of discrete probability
distributions over the set of abstract states.

ˆs0<latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="ck8pdC+ekZH4nUmSP+ZG7r8lEyk=">AAAB2XicbZDNSgMxFIXv1L86Vq1rN8EiuCozbnQpuHFZwbZCO5RM5k4bmskMyR2hDH0BF25EfC93vo3pz0JbDwQ+zknIvSculLQUBN9ebWd3b/+gfugfNfzjk9Nmo2fz0gjsilzl5jnmFpXU2CVJCp8LgzyLFfbj6f0i77+gsTLXTzQrMMr4WMtUCk7O6oyaraAdLMW2IVxDC9YaNb+GSS7KDDUJxa0dhEFBUcUNSaFw7g9LiwUXUz7GgUPNM7RRtRxzzi6dk7A0N+5oYkv394uKZ9bOstjdzDhN7Ga2MP/LBiWlt1EldVESarH6KC0Vo5wtdmaJNChIzRxwYaSblYkJN1yQa8Z3HYSbG29D77odOn4MoA7ncAFXEMIN3MEDdKALAhJ4hXdv4r15H6uuat66tDP4I+/zBzjGijg=</latexit><latexit sha1_base64="n7gE7Cq/3kMQHJJYLVzJCH9i2cQ=">AAAB5XicbZBLSwMxFIXv1FetVatbN8EiuCoZN7oU3LisYB/SDiWTZtrQJDMkd4Qy9Fe4caGIf8md/8b0sdDWA4GPcxJy74kzJR1S+h2UtrZ3dvfK+5WD6uHRce2k2nZpbrlo8VSlthszJ5Q0ooUSlehmVjAdK9GJJ3fzvPMsrJOpecRpJiLNRkYmkjP01lN/zLBwswEd1Oq0QRcimxCuoA4rNQe1r/4w5bkWBrlizvVCmmFUMIuSKzGr9HMnMsYnbCR6Hg3TwkXFYuAZufDOkCSp9ccgWbi/XxRMOzfVsb+pGY7dejY3/8t6OSY3USFNlqMwfPlRkiuCKZlvT4bSCo5q6oFxK/2shI+ZZRx9RxVfQri+8ia0rxqh5wcKZTiDc7iEEK7hFu6hCS3goOEF3uA9sMFr8LGsqxSsejuFPwo+fwCY6o8M</latexit><latexit sha1_base64="n7gE7Cq/3kMQHJJYLVzJCH9i2cQ=">AAAB5XicbZBLSwMxFIXv1FetVatbN8EiuCoZN7oU3LisYB/SDiWTZtrQJDMkd4Qy9Fe4caGIf8md/8b0sdDWA4GPcxJy74kzJR1S+h2UtrZ3dvfK+5WD6uHRce2k2nZpbrlo8VSlthszJ5Q0ooUSlehmVjAdK9GJJ3fzvPMsrJOpecRpJiLNRkYmkjP01lN/zLBwswEd1Oq0QRcimxCuoA4rNQe1r/4w5bkWBrlizvVCmmFUMIuSKzGr9HMnMsYnbCR6Hg3TwkXFYuAZufDOkCSp9ccgWbi/XxRMOzfVsb+pGY7dejY3/8t6OSY3USFNlqMwfPlRkiuCKZlvT4bSCo5q6oFxK/2shI+ZZRx9RxVfQri+8ia0rxqh5wcKZTiDc7iEEK7hFu6hCS3goOEF3uA9sMFr8LGsqxSsejuFPwo+fwCY6o8M</latexit><latexit sha1_base64="sfBfFOrr483jlRYwBvT+aEL/vOA=">AAAB8HicbZBNTwIxEIZn8QvxC/XopZGYeCK7XvRI9OIREwENbEi3dKGh7W7aWROy4Vd48aAxXv053vw3FtiDgm/S5Mk7M+nMG6VSWPT9b6+0tr6xuVXeruzs7u0fVA+P2jbJDOMtlsjEPETUcik0b6FAyR9Sw6mKJO9E45tZvfPEjRWJvsdJykNFh1rEglF01mNvRDG3077fr9b8uj8XWYWggBoUavarX71BwjLFNTJJre0GfophTg0KJvm00sssTykb0yHvOtRUcRvm84Wn5Mw5AxInxj2NZO7+nsipsnaiItepKI7scm1m/lfrZhhfhbnQaYZcs8VHcSYJJmR2PRkIwxnKiQPKjHC7EjaihjJ0GVVcCMHyyavQvqgHju/8WuO6iKMMJ3AK5xDAJTTgFprQAgYKnuEV3jzjvXjv3seiteQVM8fwR97nD9B5kGM=</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit>ˆs1<latexit sha1_base64="CwDA/KaHmbSikjCS0Xxhh703Hyc=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZaS/olSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDTPZBo</latexit><latexit sha1_base64="CwDA/KaHmbSikjCS0Xxhh703Hyc=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZaS/olSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDTPZBo</latexit><latexit sha1_base64="CwDA/KaHmbSikjCS0Xxhh703Hyc=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZaS/olSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDTPZBo</latexit><latexit sha1_base64="CwDA/KaHmbSikjCS0Xxhh703Hyc=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZaS/olSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDTPZBo</latexit>ˆs3<latexit sha1_base64="vPn2+9xmIhi99bpMVgce74JWBYo=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2VdBj0YvHCrZW2lKyabYNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyZSWPT9b6+wsrq2vlHcLG1t7+zulfcPmjZODeMNFsvYtEJquRSaN1Cg5K3EcKpCyR/C0c20/vDEjRWxvsdxwruKDrSIBKPorMfOkGJmJ73zXrniV/2ZyDIEOVQgV71X/ur0Y5YqrpFJam078BPsZtSgYJJPSp3U8oSyER3wtkNNFbfdbLbwhJw4p0+i2Linkczc3xMZVdaOVeg6FcWhXaxNzf9q7RSjq24mdJIi12z+UZRKgjGZXk/6wnCGcuyAMiPcroQNqaEMXUYlF0KwePIyNM+qgeO7i0rtOo+jCEdwDKcQwCXU4Bbq0AAGCp7hFd484714797HvLXg5TOH8Efe5w/WRZBq</latexit><latexit sha1_base64="vPn2+9xmIhi99bpMVgce74JWBYo=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2VdBj0YvHCrZW2lKyabYNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyZSWPT9b6+wsrq2vlHcLG1t7+zulfcPmjZODeMNFsvYtEJquRSaN1Cg5K3EcKpCyR/C0c20/vDEjRWxvsdxwruKDrSIBKPorMfOkGJmJ73zXrniV/2ZyDIEOVQgV71X/ur0Y5YqrpFJam078BPsZtSgYJJPSp3U8oSyER3wtkNNFbfdbLbwhJw4p0+i2Linkczc3xMZVdaOVeg6FcWhXaxNzf9q7RSjq24mdJIi12z+UZRKgjGZXk/6wnCGcuyAMiPcroQNqaEMXUYlF0KwePIyNM+qgeO7i0rtOo+jCEdwDKcQwCXU4Bbq0AAGCp7hFd484714797HvLXg5TOH8Efe5w/WRZBq</latexit><latexit sha1_base64="vPn2+9xmIhi99bpMVgce74JWBYo=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2VdBj0YvHCrZW2lKyabYNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyZSWPT9b6+wsrq2vlHcLG1t7+zulfcPmjZODeMNFsvYtEJquRSaN1Cg5K3EcKpCyR/C0c20/vDEjRWxvsdxwruKDrSIBKPorMfOkGJmJ73zXrniV/2ZyDIEOVQgV71X/ur0Y5YqrpFJam078BPsZtSgYJJPSp3U8oSyER3wtkNNFbfdbLbwhJw4p0+i2Linkczc3xMZVdaOVeg6FcWhXaxNzf9q7RSjq24mdJIi12z+UZRKgjGZXk/6wnCGcuyAMiPcroQNqaEMXUYlF0KwePIyNM+qgeO7i0rtOo+jCEdwDKcQwCXU4Bbq0AAGCp7hFd484714797HvLXg5TOH8Efe5w/WRZBq</latexit><latexit sha1_base64="vPn2+9xmIhi99bpMVgce74JWBYo=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2VdBj0YvHCrZW2lKyabYNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyZSWPT9b6+wsrq2vlHcLG1t7+zulfcPmjZODeMNFsvYtEJquRSaN1Cg5K3EcKpCyR/C0c20/vDEjRWxvsdxwruKDrSIBKPorMfOkGJmJ73zXrniV/2ZyDIEOVQgV71X/ur0Y5YqrpFJam078BPsZtSgYJJPSp3U8oSyER3wtkNNFbfdbLbwhJw4p0+i2Linkczc3xMZVdaOVeg6FcWhXaxNzf9q7RSjq24mdJIi12z+UZRKgjGZXk/6wnCGcuyAMiPcroQNqaEMXUYlF0KwePIyNM+qgeO7i0rtOo+jCEdwDKcQwCXU4Bbq0AAGCp7hFd484714797HvLXg5TOH8Efe5w/WRZBq</latexit>ˆs2<latexit sha1_base64="Z6T4SX73i1UO/WvGAiIZsweIERI=">AAAB8HicbZBNSwMxEIZn/az1q+rRS7AInspuEfRY9OKxgv2QdinZNG1Dk+ySzApl6a/w4kERr/4cb/4b03YP2vpC4OGdGTLzRokUFn3/21tb39jc2i7sFHf39g8OS0fHTRunhvEGi2Vs2hG1XArNGyhQ8nZiOFWR5K1ofDurt564sSLWDzhJeKjoUIuBYBSd9dgdUczstFftlcp+xZ+LrEKQQxly1Xulr24/ZqniGpmk1nYCP8EwowYFk3xa7KaWJ5SN6ZB3HGqquA2z+cJTcu6cPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVR0IQTLJ69Cs1oJHN9flms3eRwFOIUzuIAArqAGd1CHBjBQ8Ayv8OYZ78V79z4WrWtePnMCf+R9/gDUwZBp</latexit><latexit sha1_base64="Z6T4SX73i1UO/WvGAiIZsweIERI=">AAAB8HicbZBNSwMxEIZn/az1q+rRS7AInspuEfRY9OKxgv2QdinZNG1Dk+ySzApl6a/w4kERr/4cb/4b03YP2vpC4OGdGTLzRokUFn3/21tb39jc2i7sFHf39g8OS0fHTRunhvEGi2Vs2hG1XArNGyhQ8nZiOFWR5K1ofDurt564sSLWDzhJeKjoUIuBYBSd9dgdUczstFftlcp+xZ+LrEKQQxly1Xulr24/ZqniGpmk1nYCP8EwowYFk3xa7KaWJ5SN6ZB3HGqquA2z+cJTcu6cPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVR0IQTLJ69Cs1oJHN9flms3eRwFOIUzuIAArqAGd1CHBjBQ8Ayv8OYZ78V79z4WrWtePnMCf+R9/gDUwZBp</latexit><latexit sha1_base64="Z6T4SX73i1UO/WvGAiIZsweIERI=">AAAB8HicbZBNSwMxEIZn/az1q+rRS7AInspuEfRY9OKxgv2QdinZNG1Dk+ySzApl6a/w4kERr/4cb/4b03YP2vpC4OGdGTLzRokUFn3/21tb39jc2i7sFHf39g8OS0fHTRunhvEGi2Vs2hG1XArNGyhQ8nZiOFWR5K1ofDurt564sSLWDzhJeKjoUIuBYBSd9dgdUczstFftlcp+xZ+LrEKQQxly1Xulr24/ZqniGpmk1nYCP8EwowYFk3xa7KaWJ5SN6ZB3HGqquA2z+cJTcu6cPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVR0IQTLJ69Cs1oJHN9flms3eRwFOIUzuIAArqAGd1CHBjBQ8Ayv8OYZ78V79z4WrWtePnMCf+R9/gDUwZBp</latexit><latexit sha1_base64="Z6T4SX73i1UO/WvGAiIZsweIERI=">AAAB8HicbZBNSwMxEIZn/az1q+rRS7AInspuEfRY9OKxgv2QdinZNG1Dk+ySzApl6a/w4kERr/4cb/4b03YP2vpC4OGdGTLzRokUFn3/21tb39jc2i7sFHf39g8OS0fHTRunhvEGi2Vs2hG1XArNGyhQ8nZiOFWR5K1ofDurt564sSLWDzhJeKjoUIuBYBSd9dgdUczstFftlcp+xZ+LrEKQQxly1Xulr24/ZqniGpmk1nYCP8EwowYFk3xa7KaWJ5SN6ZB3HGqquA2z+cJTcu6cPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVR0IQTLJ69Cs1oJHN9flms3eRwFOIUzuIAArqAGd1CHBjBQ8Ayv8OYZ78V79z4WrWtePnMCf+R9/gDUwZBp</latexit>t1<latexit sha1_base64="XxuvMtdrYk4PhcyvEo6jB54MNL0=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSEfRY9OKxgmkLbSib7aZdutnE3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3jCVwqDrfjultfWNza3ydmVnd2//oHp41DJJphn3WSIT3Qmp4VIo7qNAyTup5jQOJW+H49tZvf3EtRGJesBJyoOYDpWIBKNorU4vjHKc9r1+tebW3bnIKngF1KBQs1/96g0SlsVcIZPUmK7nphjkVKNgkk8rvczwlLIxHfKuRUVjboJ8vu+UnFlnQKJE26eQzN3fEzmNjZnEoe2MKY7Mcm1m/lfrZhhdB7lQaYZcscVHUSYJJmR2PBkIzRnKiQXKtLC7EjaimjK0EVVsCN7yyavQuqh7lu8va42bIo4ynMApnIMHV9CAO2iCDwwkPMMrvDmPzovz7nwsWktOMXMMf+R8/gD6+4/q</latexit><latexit sha1_base64="XxuvMtdrYk4PhcyvEo6jB54MNL0=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSEfRY9OKxgmkLbSib7aZdutnE3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3jCVwqDrfjultfWNza3ydmVnd2//oHp41DJJphn3WSIT3Qmp4VIo7qNAyTup5jQOJW+H49tZvf3EtRGJesBJyoOYDpWIBKNorU4vjHKc9r1+tebW3bnIKngF1KBQs1/96g0SlsVcIZPUmK7nphjkVKNgkk8rvczwlLIxHfKuRUVjboJ8vu+UnFlnQKJE26eQzN3fEzmNjZnEoe2MKY7Mcm1m/lfrZhhdB7lQaYZcscVHUSYJJmR2PBkIzRnKiQXKtLC7EjaimjK0EVVsCN7yyavQuqh7lu8va42bIo4ynMApnIMHV9CAO2iCDwwkPMMrvDmPzovz7nwsWktOMXMMf+R8/gD6+4/q</latexit><latexit sha1_base64="XxuvMtdrYk4PhcyvEo6jB54MNL0=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSEfRY9OKxgmkLbSib7aZdutnE3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3jCVwqDrfjultfWNza3ydmVnd2//oHp41DJJphn3WSIT3Qmp4VIo7qNAyTup5jQOJW+H49tZvf3EtRGJesBJyoOYDpWIBKNorU4vjHKc9r1+tebW3bnIKngF1KBQs1/96g0SlsVcIZPUmK7nphjkVKNgkk8rvczwlLIxHfKuRUVjboJ8vu+UnFlnQKJE26eQzN3fEzmNjZnEoe2MKY7Mcm1m/lfrZhhdB7lQaYZcscVHUSYJJmR2PBkIzRnKiQXKtLC7EjaimjK0EVVsCN7yyavQuqh7lu8va42bIo4ynMApnIMHV9CAO2iCDwwkPMMrvDmPzovz7nwsWktOMXMMf+R8/gD6+4/q</latexit><latexit sha1_base64="ck8pdC+ekZH4nUmSP+ZG7r8lEyk=">AAAB2XicbZDNSgMxFIXv1L86Vq1rN8EiuCozbnQpuHFZwbZCO5RM5k4bmskMyR2hDH0BF25EfC93vo3pz0JbDwQ+zknIvSculLQUBN9ebWd3b/+gfugfNfzjk9Nmo2fz0gjsilzl5jnmFpXU2CVJCp8LgzyLFfbj6f0i77+gsTLXTzQrMMr4WMtUCk7O6oyaraAdLMW2IVxDC9YaNb+GSS7KDDUJxa0dhEFBUcUNSaFw7g9LiwUXUz7GgUPNM7RRtRxzzi6dk7A0N+5oYkv394uKZ9bOstjdzDhN7Ga2MP/LBiWlt1EldVESarH6KC0Vo5wtdmaJNChIzRxwYaSblYkJN1yQa8Z3HYSbG29D77odOn4MoA7ncAFXEMIN3MEDdKALAhJ4hXdv4r15H6uuat66tDP4I+/zBzjGijg=</latexit><latexit sha1_base64="CJ6Wu8tzlmU7yNQ9dVRb5lS4gAQ=">AAAB5HicbZBLSwMxFIXv1FetVatbN8EiuCozbnQpuHFZwT6gHUomvdOGZjJjckcoQ/+EGxeK+Jvc+W9MHwttPRD4OCch954oU9KS7397pa3tnd298n7loHp4dFw7qbZtmhuBLZGq1HQjblFJjS2SpLCbGeRJpLATTe7meecZjZWpfqRphmHCR1rGUnByVrcfxQXNBsGgVvcb/kJsE4IV1GGl5qD21R+mIk9Qk1Dc2l7gZxQW3JAUCmeVfm4x42LCR9hzqHmCNiwW887YhXOGLE6NO5rYwv39ouCJtdMkcjcTTmO7ns3N/7JeTvFNWEid5YRaLD+Kc8UoZfPl2VAaFKSmDrgw0s3KxJgbLshVVHElBOsrb0L7qhE4fvChDGdwDpcQwDXcwj00oQUCFLzAG7x7T96r97Gsq+StejuFP/I+fwDHXY6Q</latexit><latexit sha1_base64="CJ6Wu8tzlmU7yNQ9dVRb5lS4gAQ=">AAAB5HicbZBLSwMxFIXv1FetVatbN8EiuCozbnQpuHFZwT6gHUomvdOGZjJjckcoQ/+EGxeK+Jvc+W9MHwttPRD4OCch954oU9KS7397pa3tnd298n7loHp4dFw7qbZtmhuBLZGq1HQjblFJjS2SpLCbGeRJpLATTe7meecZjZWpfqRphmHCR1rGUnByVrcfxQXNBsGgVvcb/kJsE4IV1GGl5qD21R+mIk9Qk1Dc2l7gZxQW3JAUCmeVfm4x42LCR9hzqHmCNiwW887YhXOGLE6NO5rYwv39ouCJtdMkcjcTTmO7ns3N/7JeTvFNWEid5YRaLD+Kc8UoZfPl2VAaFKSmDrgw0s3KxJgbLshVVHElBOsrb0L7qhE4fvChDGdwDpcQwDXcwj00oQUCFLzAG7x7T96r97Gsq+StejuFP/I+fwDHXY6Q</latexit><latexit sha1_base64="wLGtRRNUctcCdtpkkEhaItqq2ns=">AAAB73icbZBNSwMxEIZn/az1q+rRS7AInsquFz0WvXisYD+gXUo2zbah2WRNZoWy9E948aCIV/+ON/+NabsHbX0h8PDODJl5o1QKi77/7a2tb2xubZd2yrt7+weHlaPjltWZYbzJtNSmE1HLpVC8iQIl76SG0ySSvB2Nb2f19hM3Vmj1gJOUhwkdKhELRtFZnV4U5zjtB/1K1a/5c5FVCAqoQqFGv/LVG2iWJVwhk9TabuCnGObUoGCST8u9zPKUsjEd8q5DRRNuw3y+75ScO2dAYm3cU0jm7u+JnCbWTpLIdSYUR3a5NjP/q3UzjK/DXKg0Q67Y4qM4kwQ1mR1PBsJwhnLigDIj3K6EjaihDF1EZRdCsHzyKrQua4Hje79avyniKMEpnMEFBHAFdbiDBjSBgYRneIU379F78d69j0XrmlfMnMAfeZ8/+buP5g==</latexit><latexit sha1_base64="XxuvMtdrYk4PhcyvEo6jB54MNL0=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSEfRY9OKxgmkLbSib7aZdutnE3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3jCVwqDrfjultfWNza3ydmVnd2//oHp41DJJphn3WSIT3Qmp4VIo7qNAyTup5jQOJW+H49tZvf3EtRGJesBJyoOYDpWIBKNorU4vjHKc9r1+tebW3bnIKngF1KBQs1/96g0SlsVcIZPUmK7nphjkVKNgkk8rvczwlLIxHfKuRUVjboJ8vu+UnFlnQKJE26eQzN3fEzmNjZnEoe2MKY7Mcm1m/lfrZhhdB7lQaYZcscVHUSYJJmR2PBkIzRnKiQXKtLC7EjaimjK0EVVsCN7yyavQuqh7lu8va42bIo4ynMApnIMHV9CAO2iCDwwkPMMrvDmPzovz7nwsWktOMXMMf+R8/gD6+4/q</latexit><latexit sha1_base64="XxuvMtdrYk4PhcyvEo6jB54MNL0=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSEfRY9OKxgmkLbSib7aZdutnE3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3jCVwqDrfjultfWNza3ydmVnd2//oHp41DJJphn3WSIT3Qmp4VIo7qNAyTup5jQOJW+H49tZvf3EtRGJesBJyoOYDpWIBKNorU4vjHKc9r1+tebW3bnIKngF1KBQs1/96g0SlsVcIZPUmK7nphjkVKNgkk8rvczwlLIxHfKuRUVjboJ8vu+UnFlnQKJE26eQzN3fEzmNjZnEoe2MKY7Mcm1m/lfrZhhdB7lQaYZcscVHUSYJJmR2PBkIzRnKiQXKtLC7EjaimjK0EVVsCN7yyavQuqh7lu8va42bIo4ynMApnIMHV9CAO2iCDwwkPMMrvDmPzovz7nwsWktOMXMMf+R8/gD6+4/q</latexit><latexit sha1_base64="XxuvMtdrYk4PhcyvEo6jB54MNL0=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSEfRY9OKxgmkLbSib7aZdutnE3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3jCVwqDrfjultfWNza3ydmVnd2//oHp41DJJphn3WSIT3Qmp4VIo7qNAyTup5jQOJW+H49tZvf3EtRGJesBJyoOYDpWIBKNorU4vjHKc9r1+tebW3bnIKngF1KBQs1/96g0SlsVcIZPUmK7nphjkVKNgkk8rvczwlLIxHfKuRUVjboJ8vu+UnFlnQKJE26eQzN3fEzmNjZnEoe2MKY7Mcm1m/lfrZhhdB7lQaYZcscVHUSYJJmR2PBkIzRnKiQXKtLC7EjaimjK0EVVsCN7yyavQuqh7lu8va42bIo4ynMApnIMHV9CAO2iCDwwkPMMrvDmPzovz7nwsWktOMXMMf+R8/gD6+4/q</latexit><latexit sha1_base64="XxuvMtdrYk4PhcyvEo6jB54MNL0=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSEfRY9OKxgmkLbSib7aZdutnE3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3jCVwqDrfjultfWNza3ydmVnd2//oHp41DJJphn3WSIT3Qmp4VIo7qNAyTup5jQOJW+H49tZvf3EtRGJesBJyoOYDpWIBKNorU4vjHKc9r1+tebW3bnIKngF1KBQs1/96g0SlsVcIZPUmK7nphjkVKNgkk8rvczwlLIxHfKuRUVjboJ8vu+UnFlnQKJE26eQzN3fEzmNjZnEoe2MKY7Mcm1m/lfrZhhdB7lQaYZcscVHUSYJJmR2PBkIzRnKiQXKtLC7EjaimjK0EVVsCN7yyavQuqh7lu8va42bIo4ynMApnIMHV9CAO2iCDwwkPMMrvDmPzovz7nwsWktOMXMMf+R8/gD6+4/q</latexit><latexit sha1_base64="XxuvMtdrYk4PhcyvEo6jB54MNL0=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSEfRY9OKxgmkLbSib7aZdutnE3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3jCVwqDrfjultfWNza3ydmVnd2//oHp41DJJphn3WSIT3Qmp4VIo7qNAyTup5jQOJW+H49tZvf3EtRGJesBJyoOYDpWIBKNorU4vjHKc9r1+tebW3bnIKngF1KBQs1/96g0SlsVcIZPUmK7nphjkVKNgkk8rvczwlLIxHfKuRUVjboJ8vu+UnFlnQKJE26eQzN3fEzmNjZnEoe2MKY7Mcm1m/lfrZhhdB7lQaYZcscVHUSYJJmR2PBkIzRnKiQXKtLC7EjaimjK0EVVsCN7yyavQuqh7lu8va42bIo4ynMApnIMHV9CAO2iCDwwkPMMrvDmPzovz7nwsWktOMXMMf+R8/gD6+4/q</latexit><latexit sha1_base64="XxuvMtdrYk4PhcyvEo6jB54MNL0=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSEfRY9OKxgmkLbSib7aZdutnE3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3jCVwqDrfjultfWNza3ydmVnd2//oHp41DJJphn3WSIT3Qmp4VIo7qNAyTup5jQOJW+H49tZvf3EtRGJesBJyoOYDpWIBKNorU4vjHKc9r1+tebW3bnIKngF1KBQs1/96g0SlsVcIZPUmK7nphjkVKNgkk8rvczwlLIxHfKuRUVjboJ8vu+UnFlnQKJE26eQzN3fEzmNjZnEoe2MKY7Mcm1m/lfrZhhdB7lQaYZcscVHUSYJJmR2PBkIzRnKiQXKtLC7EjaimjK0EVVsCN7yyavQuqh7lu8va42bIo4ynMApnIMHV9CAO2iCDwwkPMMrvDmPzovz7nwsWktOMXMMf+R8/gD6+4/q</latexit>t2<latexit sha1_base64="/yehB9q3tX6XkorUvrRlaK430ak=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FSSIuix6MVjBfsBbSib7aZdutmkuxOhhP4JLx4U8erf8ea/cdvmoK0vLDy8M8POvEEihUHX/XYKG5tb2zvF3dLe/sHhUfn4pGXiVDPeZLGMdSeghkuheBMFSt5JNKdRIHk7GN/N6+0nro2I1SNOE+5HdKhEKBhFa3V6QZjhrF/rlytu1V2IrIOXQwVyNfrlr94gZmnEFTJJjel6boJ+RjUKJvms1EsNTygb0yHvWlQ04sbPFvvOyIV1BiSMtX0KycL9PZHRyJhpFNjOiOLIrNbm5n+1borhjZ8JlaTIFVt+FKaSYEzmx5OB0JyhnFqgTAu7K2EjqilDG1HJhuCtnrwOrVrVs/xwVanf5nEU4QzO4RI8uIY63EMDmsBAwjO8wpszcV6cd+dj2Vpw8plT+CPn8wf8f4/r</latexit><latexit sha1_base64="/yehB9q3tX6XkorUvrRlaK430ak=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FSSIuix6MVjBfsBbSib7aZdutmkuxOhhP4JLx4U8erf8ea/cdvmoK0vLDy8M8POvEEihUHX/XYKG5tb2zvF3dLe/sHhUfn4pGXiVDPeZLGMdSeghkuheBMFSt5JNKdRIHk7GN/N6+0nro2I1SNOE+5HdKhEKBhFa3V6QZjhrF/rlytu1V2IrIOXQwVyNfrlr94gZmnEFTJJjel6boJ+RjUKJvms1EsNTygb0yHvWlQ04sbPFvvOyIV1BiSMtX0KycL9PZHRyJhpFNjOiOLIrNbm5n+1borhjZ8JlaTIFVt+FKaSYEzmx5OB0JyhnFqgTAu7K2EjqilDG1HJhuCtnrwOrVrVs/xwVanf5nEU4QzO4RI8uIY63EMDmsBAwjO8wpszcV6cd+dj2Vpw8plT+CPn8wf8f4/r</latexit><latexit sha1_base64="/yehB9q3tX6XkorUvrRlaK430ak=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FSSIuix6MVjBfsBbSib7aZdutmkuxOhhP4JLx4U8erf8ea/cdvmoK0vLDy8M8POvEEihUHX/XYKG5tb2zvF3dLe/sHhUfn4pGXiVDPeZLGMdSeghkuheBMFSt5JNKdRIHk7GN/N6+0nro2I1SNOE+5HdKhEKBhFa3V6QZjhrF/rlytu1V2IrIOXQwVyNfrlr94gZmnEFTJJjel6boJ+RjUKJvms1EsNTygb0yHvWlQ04sbPFvvOyIV1BiSMtX0KycL9PZHRyJhpFNjOiOLIrNbm5n+1borhjZ8JlaTIFVt+FKaSYEzmx5OB0JyhnFqgTAu7K2EjqilDG1HJhuCtnrwOrVrVs/xwVanf5nEU4QzO4RI8uIY63EMDmsBAwjO8wpszcV6cd+dj2Vpw8plT+CPn8wf8f4/r</latexit><latexit sha1_base64="/yehB9q3tX6XkorUvrRlaK430ak=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FSSIuix6MVjBfsBbSib7aZdutmkuxOhhP4JLx4U8erf8ea/cdvmoK0vLDy8M8POvEEihUHX/XYKG5tb2zvF3dLe/sHhUfn4pGXiVDPeZLGMdSeghkuheBMFSt5JNKdRIHk7GN/N6+0nro2I1SNOE+5HdKhEKBhFa3V6QZjhrF/rlytu1V2IrIOXQwVyNfrlr94gZmnEFTJJjel6boJ+RjUKJvms1EsNTygb0yHvWlQ04sbPFvvOyIV1BiSMtX0KycL9PZHRyJhpFNjOiOLIrNbm5n+1borhjZ8JlaTIFVt+FKaSYEzmx5OB0JyhnFqgTAu7K2EjqilDG1HJhuCtnrwOrVrVs/xwVanf5nEU4QzO4RI8uIY63EMDmsBAwjO8wpszcV6cd+dj2Vpw8plT+CPn8wf8f4/r</latexit>t3<latexit sha1_base64="e4+HeXCuxzrDDavXr90Djw4l9jI=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSFfRY9OKxgv2ANpTNdtMu3WzS3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3iCRwqDrfjuFtfWNza3idmlnd2//oHx41DRxqhlvsFjGuh1Qw6VQvIECJW8nmtMokLwVjO5m9dYT10bE6hEnCfcjOlAiFIyitdrdIMxw2rvslStu1Z2LrIKXQwVy1Xvlr24/ZmnEFTJJjel4boJ+RjUKJvm01E0NTygb0QHvWFQ04sbP5vtOyZl1+iSMtX0Kydz9PZHRyJhJFNjOiOLQLNdm5n+1TorhjZ8JlaTIFVt8FKaSYExmx5O+0JyhnFigTAu7K2FDqilDG1HJhuAtn7wKzYuqZ/nhqlK7zeMowgmcwjl4cA01uIc6NICBhGd4hTdn7Lw4787HorXg5DPH8EfO5w/+A4/s</latexit><latexit sha1_base64="e4+HeXCuxzrDDavXr90Djw4l9jI=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSFfRY9OKxgv2ANpTNdtMu3WzS3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3iCRwqDrfjuFtfWNza3idmlnd2//oHx41DRxqhlvsFjGuh1Qw6VQvIECJW8nmtMokLwVjO5m9dYT10bE6hEnCfcjOlAiFIyitdrdIMxw2rvslStu1Z2LrIKXQwVy1Xvlr24/ZmnEFTJJjel4boJ+RjUKJvm01E0NTygb0QHvWFQ04sbP5vtOyZl1+iSMtX0Kydz9PZHRyJhJFNjOiOLQLNdm5n+1TorhjZ8JlaTIFVt8FKaSYExmx5O+0JyhnFigTAu7K2FDqilDG1HJhuAtn7wKzYuqZ/nhqlK7zeMowgmcwjl4cA01uIc6NICBhGd4hTdn7Lw4787HorXg5DPH8EfO5w/+A4/s</latexit><latexit sha1_base64="e4+HeXCuxzrDDavXr90Djw4l9jI=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSFfRY9OKxgv2ANpTNdtMu3WzS3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3iCRwqDrfjuFtfWNza3idmlnd2//oHx41DRxqhlvsFjGuh1Qw6VQvIECJW8nmtMokLwVjO5m9dYT10bE6hEnCfcjOlAiFIyitdrdIMxw2rvslStu1Z2LrIKXQwVy1Xvlr24/ZmnEFTJJjel4boJ+RjUKJvm01E0NTygb0QHvWFQ04sbP5vtOyZl1+iSMtX0Kydz9PZHRyJhJFNjOiOLQLNdm5n+1TorhjZ8JlaTIFVt8FKaSYExmx5O+0JyhnFigTAu7K2FDqilDG1HJhuAtn7wKzYuqZ/nhqlK7zeMowgmcwjl4cA01uIc6NICBhGd4hTdn7Lw4787HorXg5DPH8EfO5w/+A4/s</latexit><latexit sha1_base64="e4+HeXCuxzrDDavXr90Djw4l9jI=">AAAB73icbZBNS8NAEIYn9avWr6pHL4tF8FQSFfRY9OKxgv2ANpTNdtMu3WzS3YlQQv+EFw+KePXvePPfuG1z0NYXFh7emWFn3iCRwqDrfjuFtfWNza3idmlnd2//oHx41DRxqhlvsFjGuh1Qw6VQvIECJW8nmtMokLwVjO5m9dYT10bE6hEnCfcjOlAiFIyitdrdIMxw2rvslStu1Z2LrIKXQwVy1Xvlr24/ZmnEFTJJjel4boJ+RjUKJvm01E0NTygb0QHvWFQ04sbP5vtOyZl1+iSMtX0Kydz9PZHRyJhJFNjOiOLQLNdm5n+1TorhjZ8JlaTIFVt8FKaSYExmx5O+0JyhnFigTAu7K2FDqilDG1HJhuAtn7wKzYuqZ/nhqlK7zeMowgmcwjl4cA01uIc6NICBhGd4hTdn7Lw4787HorXg5DPH8EfO5w/+A4/s</latexit>ˆx0<latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit><latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit><latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit><latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit>ˆx0<latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit><latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit><latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit><latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit>ˆx<latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit><latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit><latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit><latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit>ˆx<latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit><latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit><latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit><latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit>ˆs0<latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="ck8pdC+ekZH4nUmSP+ZG7r8lEyk=">AAAB2XicbZDNSgMxFIXv1L86Vq1rN8EiuCozbnQpuHFZwbZCO5RM5k4bmskMyR2hDH0BF25EfC93vo3pz0JbDwQ+zknIvSculLQUBN9ebWd3b/+gfugfNfzjk9Nmo2fz0gjsilzl5jnmFpXU2CVJCp8LgzyLFfbj6f0i77+gsTLXTzQrMMr4WMtUCk7O6oyaraAdLMW2IVxDC9YaNb+GSS7KDDUJxa0dhEFBUcUNSaFw7g9LiwUXUz7GgUPNM7RRtRxzzi6dk7A0N+5oYkv394uKZ9bOstjdzDhN7Ga2MP/LBiWlt1EldVESarH6KC0Vo5wtdmaJNChIzRxwYaSblYkJN1yQa8Z3HYSbG29D77odOn4MoA7ncAFXEMIN3MEDdKALAhJ4hXdv4r15H6uuat66tDP4I+/zBzjGijg=</latexit><latexit sha1_base64="n7gE7Cq/3kMQHJJYLVzJCH9i2cQ=">AAAB5XicbZBLSwMxFIXv1FetVatbN8EiuCoZN7oU3LisYB/SDiWTZtrQJDMkd4Qy9Fe4caGIf8md/8b0sdDWA4GPcxJy74kzJR1S+h2UtrZ3dvfK+5WD6uHRce2k2nZpbrlo8VSlthszJ5Q0ooUSlehmVjAdK9GJJ3fzvPMsrJOpecRpJiLNRkYmkjP01lN/zLBwswEd1Oq0QRcimxCuoA4rNQe1r/4w5bkWBrlizvVCmmFUMIuSKzGr9HMnMsYnbCR6Hg3TwkXFYuAZufDOkCSp9ccgWbi/XxRMOzfVsb+pGY7dejY3/8t6OSY3USFNlqMwfPlRkiuCKZlvT4bSCo5q6oFxK/2shI+ZZRx9RxVfQri+8ia0rxqh5wcKZTiDc7iEEK7hFu6hCS3goOEF3uA9sMFr8LGsqxSsejuFPwo+fwCY6o8M</latexit><latexit sha1_base64="n7gE7Cq/3kMQHJJYLVzJCH9i2cQ=">AAAB5XicbZBLSwMxFIXv1FetVatbN8EiuCoZN7oU3LisYB/SDiWTZtrQJDMkd4Qy9Fe4caGIf8md/8b0sdDWA4GPcxJy74kzJR1S+h2UtrZ3dvfK+5WD6uHRce2k2nZpbrlo8VSlthszJ5Q0ooUSlehmVjAdK9GJJ3fzvPMsrJOpecRpJiLNRkYmkjP01lN/zLBwswEd1Oq0QRcimxCuoA4rNQe1r/4w5bkWBrlizvVCmmFUMIuSKzGr9HMnMsYnbCR6Hg3TwkXFYuAZufDOkCSp9ccgWbi/XxRMOzfVsb+pGY7dejY3/8t6OSY3USFNlqMwfPlRkiuCKZlvT4bSCo5q6oFxK/2shI+ZZRx9RxVfQri+8ia0rxqh5wcKZTiDc7iEEK7hFu6hCS3goOEF3uA9sMFr8LGsqxSsejuFPwo+fwCY6o8M</latexit><latexit sha1_base64="sfBfFOrr483jlRYwBvT+aEL/vOA=">AAAB8HicbZBNTwIxEIZn8QvxC/XopZGYeCK7XvRI9OIREwENbEi3dKGh7W7aWROy4Vd48aAxXv053vw3FtiDgm/S5Mk7M+nMG6VSWPT9b6+0tr6xuVXeruzs7u0fVA+P2jbJDOMtlsjEPETUcik0b6FAyR9Sw6mKJO9E45tZvfPEjRWJvsdJykNFh1rEglF01mNvRDG3077fr9b8uj8XWYWggBoUavarX71BwjLFNTJJre0GfophTg0KJvm00sssTykb0yHvOtRUcRvm84Wn5Mw5AxInxj2NZO7+nsipsnaiItepKI7scm1m/lfrZhhfhbnQaYZcs8VHcSYJJmR2PRkIwxnKiQPKjHC7EjaihjJ0GVVcCMHyyavQvqgHju/8WuO6iKMMJ3AK5xDAJTTgFprQAgYKnuEV3jzjvXjv3seiteQVM8fwR97nD9B5kGM=</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit><latexit sha1_base64="Voz8+sfuHGCt87KrdCVHqyKUNaY=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZac/vlSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDRuZBn</latexit>ˆs1<latexit sha1_base64="CwDA/KaHmbSikjCS0Xxhh703Hyc=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZaS/olSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDTPZBo</latexit><latexit sha1_base64="CwDA/KaHmbSikjCS0Xxhh703Hyc=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZaS/olSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDTPZBo</latexit><latexit sha1_base64="CwDA/KaHmbSikjCS0Xxhh703Hyc=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZaS/olSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDTPZBo</latexit><latexit sha1_base64="CwDA/KaHmbSikjCS0Xxhh703Hyc=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2RdBj0YvHCvZD2qVk07QNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyVSWPT9b6+wtr6xuVXcLu3s7u0flA+PmjZODeMNFsvYtCNquRSaN1Cg5O3EcKoiyVvR+HZWbz1xY0WsH3CS8FDRoRYDwSg667E7opjZaS/olSt+1Z+LrEKQQwVy1Xvlr24/ZqniGpmk1nYCP8EwowYFk3xa6qaWJ5SN6ZB3HGqquA2z+cJTcuacPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVRyIQTLJ69C86IaOL6/rNRu8jiKcAKncA4BXEEN7qAODWCg4Ble4c0z3ov37n0sWgtePnMMf+R9/gDTPZBo</latexit>ˆs2<latexit sha1_base64="Z6T4SX73i1UO/WvGAiIZsweIERI=">AAAB8HicbZBNSwMxEIZn/az1q+rRS7AInspuEfRY9OKxgv2QdinZNG1Dk+ySzApl6a/w4kERr/4cb/4b03YP2vpC4OGdGTLzRokUFn3/21tb39jc2i7sFHf39g8OS0fHTRunhvEGi2Vs2hG1XArNGyhQ8nZiOFWR5K1ofDurt564sSLWDzhJeKjoUIuBYBSd9dgdUczstFftlcp+xZ+LrEKQQxly1Xulr24/ZqniGpmk1nYCP8EwowYFk3xa7KaWJ5SN6ZB3HGqquA2z+cJTcu6cPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVR0IQTLJ69Cs1oJHN9flms3eRwFOIUzuIAArqAGd1CHBjBQ8Ayv8OYZ78V79z4WrWtePnMCf+R9/gDUwZBp</latexit><latexit sha1_base64="Z6T4SX73i1UO/WvGAiIZsweIERI=">AAAB8HicbZBNSwMxEIZn/az1q+rRS7AInspuEfRY9OKxgv2QdinZNG1Dk+ySzApl6a/w4kERr/4cb/4b03YP2vpC4OGdGTLzRokUFn3/21tb39jc2i7sFHf39g8OS0fHTRunhvEGi2Vs2hG1XArNGyhQ8nZiOFWR5K1ofDurt564sSLWDzhJeKjoUIuBYBSd9dgdUczstFftlcp+xZ+LrEKQQxly1Xulr24/ZqniGpmk1nYCP8EwowYFk3xa7KaWJ5SN6ZB3HGqquA2z+cJTcu6cPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVR0IQTLJ69Cs1oJHN9flms3eRwFOIUzuIAArqAGd1CHBjBQ8Ayv8OYZ78V79z4WrWtePnMCf+R9/gDUwZBp</latexit><latexit sha1_base64="Z6T4SX73i1UO/WvGAiIZsweIERI=">AAAB8HicbZBNSwMxEIZn/az1q+rRS7AInspuEfRY9OKxgv2QdinZNG1Dk+ySzApl6a/w4kERr/4cb/4b03YP2vpC4OGdGTLzRokUFn3/21tb39jc2i7sFHf39g8OS0fHTRunhvEGi2Vs2hG1XArNGyhQ8nZiOFWR5K1ofDurt564sSLWDzhJeKjoUIuBYBSd9dgdUczstFftlcp+xZ+LrEKQQxly1Xulr24/ZqniGpmk1nYCP8EwowYFk3xa7KaWJ5SN6ZB3HGqquA2z+cJTcu6cPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVR0IQTLJ69Cs1oJHN9flms3eRwFOIUzuIAArqAGd1CHBjBQ8Ayv8OYZ78V79z4WrWtePnMCf+R9/gDUwZBp</latexit><latexit sha1_base64="Z6T4SX73i1UO/WvGAiIZsweIERI=">AAAB8HicbZBNSwMxEIZn/az1q+rRS7AInspuEfRY9OKxgv2QdinZNG1Dk+ySzApl6a/w4kERr/4cb/4b03YP2vpC4OGdGTLzRokUFn3/21tb39jc2i7sFHf39g8OS0fHTRunhvEGi2Vs2hG1XArNGyhQ8nZiOFWR5K1ofDurt564sSLWDzhJeKjoUIuBYBSd9dgdUczstFftlcp+xZ+LrEKQQxly1Xulr24/ZqniGpmk1nYCP8EwowYFk3xa7KaWJ5SN6ZB3HGqquA2z+cJTcu6cPhnExj2NZO7+nsiosnaiItepKI7scm1m/lfrpDi4DjOhkxS5ZouPBqkkGJPZ9aQvDGcoJw4oM8LtStiIGsrQZVR0IQTLJ69Cs1oJHN9flms3eRwFOIUzuIAArqAGd1CHBjBQ8Ayv8OYZ78V79z4WrWtePnMCf+R9/gDUwZBp</latexit>ˆs3<latexit sha1_base64="vPn2+9xmIhi99bpMVgce74JWBYo=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2VdBj0YvHCrZW2lKyabYNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyZSWPT9b6+wsrq2vlHcLG1t7+zulfcPmjZODeMNFsvYtEJquRSaN1Cg5K3EcKpCyR/C0c20/vDEjRWxvsdxwruKDrSIBKPorMfOkGJmJ73zXrniV/2ZyDIEOVQgV71X/ur0Y5YqrpFJam078BPsZtSgYJJPSp3U8oSyER3wtkNNFbfdbLbwhJw4p0+i2Linkczc3xMZVdaOVeg6FcWhXaxNzf9q7RSjq24mdJIi12z+UZRKgjGZXk/6wnCGcuyAMiPcroQNqaEMXUYlF0KwePIyNM+qgeO7i0rtOo+jCEdwDKcQwCXU4Bbq0AAGCp7hFd484714797HvLXg5TOH8Efe5w/WRZBq</latexit><latexit sha1_base64="vPn2+9xmIhi99bpMVgce74JWBYo=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2VdBj0YvHCrZW2lKyabYNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyZSWPT9b6+wsrq2vlHcLG1t7+zulfcPmjZODeMNFsvYtEJquRSaN1Cg5K3EcKpCyR/C0c20/vDEjRWxvsdxwruKDrSIBKPorMfOkGJmJ73zXrniV/2ZyDIEOVQgV71X/ur0Y5YqrpFJam078BPsZtSgYJJPSp3U8oSyER3wtkNNFbfdbLbwhJw4p0+i2Linkczc3xMZVdaOVeg6FcWhXaxNzf9q7RSjq24mdJIi12z+UZRKgjGZXk/6wnCGcuyAMiPcroQNqaEMXUYlF0KwePIyNM+qgeO7i0rtOo+jCEdwDKcQwCXU4Bbq0AAGCp7hFd484714797HvLXg5TOH8Efe5w/WRZBq</latexit><latexit sha1_base64="vPn2+9xmIhi99bpMVgce74JWBYo=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2VdBj0YvHCrZW2lKyabYNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyZSWPT9b6+wsrq2vlHcLG1t7+zulfcPmjZODeMNFsvYtEJquRSaN1Cg5K3EcKpCyR/C0c20/vDEjRWxvsdxwruKDrSIBKPorMfOkGJmJ73zXrniV/2ZyDIEOVQgV71X/ur0Y5YqrpFJam078BPsZtSgYJJPSp3U8oSyER3wtkNNFbfdbLbwhJw4p0+i2Linkczc3xMZVdaOVeg6FcWhXaxNzf9q7RSjq24mdJIi12z+UZRKgjGZXk/6wnCGcuyAMiPcroQNqaEMXUYlF0KwePIyNM+qgeO7i0rtOo+jCEdwDKcQwCXU4Bbq0AAGCp7hFd484714797HvLXg5TOH8Efe5w/WRZBq</latexit><latexit sha1_base64="vPn2+9xmIhi99bpMVgce74JWBYo=">AAAB8HicbZBNSwMxEIZn61etX1WPXoJF8FR2VdBj0YvHCrZW2lKyabYNTbJLMiuUpb/CiwdFvPpzvPlvTNs9aOsLgYd3ZsjMGyZSWPT9b6+wsrq2vlHcLG1t7+zulfcPmjZODeMNFsvYtEJquRSaN1Cg5K3EcKpCyR/C0c20/vDEjRWxvsdxwruKDrSIBKPorMfOkGJmJ73zXrniV/2ZyDIEOVQgV71X/ur0Y5YqrpFJam078BPsZtSgYJJPSp3U8oSyER3wtkNNFbfdbLbwhJw4p0+i2Linkczc3xMZVdaOVeg6FcWhXaxNzf9q7RSjq24mdJIi12z+UZRKgjGZXk/6wnCGcuyAMiPcroQNqaEMXUYlF0KwePIyNM+qgeO7i0rtOo+jCEdwDKcQwCXU4Bbq0AAGCp7hFd484714797HvLXg5TOH8Efe5w/WRZBq</latexit>0.5<latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit>0.5<latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit>1<latexit sha1_base64="qp47xzdgavbzDAujuQrfWObrWms=">AAAB6HicbZBNS8NAEIYn9avWr6pHL4tF8FQSEeqx6MVjC/YD2lA220m7drMJuxuhhP4CLx4U8epP8ua/cdvmoK0vLDy8M8POvEEiuDau++0UNja3tneKu6W9/YPDo/LxSVvHqWLYYrGIVTegGgWX2DLcCOwmCmkUCOwEk7t5vfOESvNYPphpgn5ER5KHnFFjraY3KFfcqrsQWQcvhwrkagzKX/1hzNIIpWGCat3z3MT4GVWGM4GzUj/VmFA2oSPsWZQ0Qu1ni0Vn5MI6QxLGyj5pyML9PZHRSOtpFNjOiJqxXq3Nzf9qvdSEN37GZZIalGz5UZgKYmIyv5oMuUJmxNQCZYrbXQkbU0WZsdmUbAje6snr0L6qepab15X6bR5HEc7gHC7BgxrU4R4a0AIGCM/wCm/Oo/PivDsfy9aCk8+cwh85nz96n4y1</latexit><latexit sha1_base64="qp47xzdgavbzDAujuQrfWObrWms=">AAAB6HicbZBNS8NAEIYn9avWr6pHL4tF8FQSEeqx6MVjC/YD2lA220m7drMJuxuhhP4CLx4U8epP8ua/cdvmoK0vLDy8M8POvEEiuDau++0UNja3tneKu6W9/YPDo/LxSVvHqWLYYrGIVTegGgWX2DLcCOwmCmkUCOwEk7t5vfOESvNYPphpgn5ER5KHnFFjraY3KFfcqrsQWQcvhwrkagzKX/1hzNIIpWGCat3z3MT4GVWGM4GzUj/VmFA2oSPsWZQ0Qu1ni0Vn5MI6QxLGyj5pyML9PZHRSOtpFNjOiJqxXq3Nzf9qvdSEN37GZZIalGz5UZgKYmIyv5oMuUJmxNQCZYrbXQkbU0WZsdmUbAje6snr0L6qepab15X6bR5HEc7gHC7BgxrU4R4a0AIGCM/wCm/Oo/PivDsfy9aCk8+cwh85nz96n4y1</latexit><latexit sha1_base64="qp47xzdgavbzDAujuQrfWObrWms=">AAAB6HicbZBNS8NAEIYn9avWr6pHL4tF8FQSEeqx6MVjC/YD2lA220m7drMJuxuhhP4CLx4U8epP8ua/cdvmoK0vLDy8M8POvEEiuDau++0UNja3tneKu6W9/YPDo/LxSVvHqWLYYrGIVTegGgWX2DLcCOwmCmkUCOwEk7t5vfOESvNYPphpgn5ER5KHnFFjraY3KFfcqrsQWQcvhwrkagzKX/1hzNIIpWGCat3z3MT4GVWGM4GzUj/VmFA2oSPsWZQ0Qu1ni0Vn5MI6QxLGyj5pyML9PZHRSOtpFNjOiJqxXq3Nzf9qvdSEN37GZZIalGz5UZgKYmIyv5oMuUJmxNQCZYrbXQkbU0WZsdmUbAje6snr0L6qepab15X6bR5HEc7gHC7BgxrU4R4a0AIGCM/wCm/Oo/PivDsfy9aCk8+cwh85nz96n4y1</latexit><latexit sha1_base64="qp47xzdgavbzDAujuQrfWObrWms=">AAAB6HicbZBNS8NAEIYn9avWr6pHL4tF8FQSEeqx6MVjC/YD2lA220m7drMJuxuhhP4CLx4U8epP8ua/cdvmoK0vLDy8M8POvEEiuDau++0UNja3tneKu6W9/YPDo/LxSVvHqWLYYrGIVTegGgWX2DLcCOwmCmkUCOwEk7t5vfOESvNYPphpgn5ER5KHnFFjraY3KFfcqrsQWQcvhwrkagzKX/1hzNIIpWGCat3z3MT4GVWGM4GzUj/VmFA2oSPsWZQ0Qu1ni0Vn5MI6QxLGyj5pyML9PZHRSOtpFNjOiJqxXq3Nzf9qvdSEN37GZZIalGz5UZgKYmIyv5oMuUJmxNQCZYrbXQkbU0WZsdmUbAje6snr0L6qepab15X6bR5HEc7gHC7BgxrU4R4a0AIGCM/wCm/Oo/PivDsfy9aCk8+cwh85nz96n4y1</latexit>0.5<latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit>0.5<latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit><latexit sha1_base64="qkAQn5m5P3J7fJAYkGPBttEfntg=">AAAB6nicbZBNS8NAEIYn9avWr6pHL4tF8FQSseix6MVjRfsBbSib7aRdutmE3Y1QQn+CFw+KePUXefPfuG1z0NYXFh7emWFn3iARXBvX/XYKa+sbm1vF7dLO7t7+QfnwqKXjVDFssljEqhNQjYJLbBpuBHYShTQKBLaD8e2s3n5CpXksH80kQT+iQ8lDzqix1oNbrfXLFbfqzkVWwcuhArka/fJXbxCzNEJpmKBadz03MX5GleFM4LTUSzUmlI3pELsWJY1Q+9l81Sk5s86AhLGyTxoyd39PZDTSehIFtjOiZqSXazPzv1o3NeG1n3GZpAYlW3wUpoKYmMzuJgOukBkxsUCZ4nZXwkZUUWZsOiUbgrd88iq0Lqqe5fvLSv0mj6MIJ3AK5+DBFdThDhrQBAZDeIZXeHOE8+K8Ox+L1oKTzxzDHzmfP1mOjSs=</latexit>1<latexit sha1_base64="qp47xzdgavbzDAujuQrfWObrWms=">AAAB6HicbZBNS8NAEIYn9avWr6pHL4tF8FQSEeqx6MVjC/YD2lA220m7drMJuxuhhP4CLx4U8epP8ua/cdvmoK0vLDy8M8POvEEiuDau++0UNja3tneKu6W9/YPDo/LxSVvHqWLYYrGIVTegGgWX2DLcCOwmCmkUCOwEk7t5vfOESvNYPphpgn5ER5KHnFFjraY3KFfcqrsQWQcvhwrkagzKX/1hzNIIpWGCat3z3MT4GVWGM4GzUj/VmFA2oSPsWZQ0Qu1ni0Vn5MI6QxLGyj5pyML9PZHRSOtpFNjOiJqxXq3Nzf9qvdSEN37GZZIalGz5UZgKYmIyv5oMuUJmxNQCZYrbXQkbU0WZsdmUbAje6snr0L6qepab15X6bR5HEc7gHC7BgxrU4R4a0AIGCM/wCm/Oo/PivDsfy9aCk8+cwh85nz96n4y1</latexit><latexit sha1_base64="qp47xzdgavbzDAujuQrfWObrWms=">AAAB6HicbZBNS8NAEIYn9avWr6pHL4tF8FQSEeqx6MVjC/YD2lA220m7drMJuxuhhP4CLx4U8epP8ua/cdvmoK0vLDy8M8POvEEiuDau++0UNja3tneKu6W9/YPDo/LxSVvHqWLYYrGIVTegGgWX2DLcCOwmCmkUCOwEk7t5vfOESvNYPphpgn5ER5KHnFFjraY3KFfcqrsQWQcvhwrkagzKX/1hzNIIpWGCat3z3MT4GVWGM4GzUj/VmFA2oSPsWZQ0Qu1ni0Vn5MI6QxLGyj5pyML9PZHRSOtpFNjOiJqxXq3Nzf9qvdSEN37GZZIalGz5UZgKYmIyv5oMuUJmxNQCZYrbXQkbU0WZsdmUbAje6snr0L6qepab15X6bR5HEc7gHC7BgxrU4R4a0AIGCM/wCm/Oo/PivDsfy9aCk8+cwh85nz96n4y1</latexit><latexit sha1_base64="qp47xzdgavbzDAujuQrfWObrWms=">AAAB6HicbZBNS8NAEIYn9avWr6pHL4tF8FQSEeqx6MVjC/YD2lA220m7drMJuxuhhP4CLx4U8epP8ua/cdvmoK0vLDy8M8POvEEiuDau++0UNja3tneKu6W9/YPDo/LxSVvHqWLYYrGIVTegGgWX2DLcCOwmCmkUCOwEk7t5vfOESvNYPphpgn5ER5KHnFFjraY3KFfcqrsQWQcvhwrkagzKX/1hzNIIpWGCat3z3MT4GVWGM4GzUj/VmFA2oSPsWZQ0Qu1ni0Vn5MI6QxLGyj5pyML9PZHRSOtpFNjOiJqxXq3Nzf9qvdSEN37GZZIalGz5UZgKYmIyv5oMuUJmxNQCZYrbXQkbU0WZsdmUbAje6snr0L6qepab15X6bR5HEc7gHC7BgxrU4R4a0AIGCM/wCm/Oo/PivDsfy9aCk8+cwh85nz96n4y1</latexit><latexit sha1_base64="qp47xzdgavbzDAujuQrfWObrWms=">AAAB6HicbZBNS8NAEIYn9avWr6pHL4tF8FQSEeqx6MVjC/YD2lA220m7drMJuxuhhP4CLx4U8epP8ua/cdvmoK0vLDy8M8POvEEiuDau++0UNja3tneKu6W9/YPDo/LxSVvHqWLYYrGIVTegGgWX2DLcCOwmCmkUCOwEk7t5vfOESvNYPphpgn5ER5KHnFFjraY3KFfcqrsQWQcvhwrkagzKX/1hzNIIpWGCat3z3MT4GVWGM4GzUj/VmFA2oSPsWZQ0Qu1ni0Vn5MI6QxLGyj5pyML9PZHRSOtpFNjOiJqxXq3Nzf9qvdSEN37GZZIalGz5UZgKYmIyv5oMuUJmxNQCZYrbXQkbU0WZsdmUbAje6snr0L6qepab15X6bR5HEc7gHC7BgxrU4R4a0AIGCM/wCm/Oo/PivDsfy9aCk8+cwh85nz96n4y1</latexit>ˆx<latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit><latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit><latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit><latexit sha1_base64="KKaXq1DRH3bprdfdkqAYBXzc5rw=">AAAB73icbZBNS8NAEIYnftb6VfXoZbEInkoigh6LXjxWsB/QhrLZbtqlm03cnYgl9E948aCIV/+ON/+NmzYHbX1h4eGdGXbmDRIpDLrut7Oyura+sVnaKm/v7O7tVw4OWyZONeNNFstYdwJquBSKN1Gg5J1EcxoFkreD8U1ebz9ybUSs7nGScD+iQyVCwShaq9MbUcyepuV+perW3JnIMngFVKFQo1/56g1ilkZcIZPUmK7nJuhnVKNgkk/LvdTwhLIxHfKuRUUjbvxstu+UnFpnQMJY26eQzNzfExmNjJlEge2MKI7MYi03/6t1Uwyv/EyoJEWu2PyjMJUEY5IfTwZCc4ZyYoEyLeyuhI2opgxtRHkI3uLJy9A6r3mW7y6q9esijhIcwwmcgQeXUIdbaEATGEh4hld4cx6cF+fd+Zi3rjjFzBH8kfP5A+dfj90=</latexit>ˆx0<latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit><latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit><latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit><latexit sha1_base64="ccwwRAFu5tktlTZuS5prfqDUFCo=">AAAB8HicbZBNS8NAEIYn9avWr6pHL4tF9FQSEfRY9OKxgv2QNpTNdtsu3U3C7kQsob/CiwdFvPpzvPlv3LQ5aOsLCw/vzLAzbxBLYdB1v53Cyura+kZxs7S1vbO7V94/aJoo0Yw3WCQj3Q6o4VKEvIECJW/HmlMVSN4KxjdZvfXItRFReI+TmPuKDkMxEIyitR66I4rp0/S01CtX3Ko7E1kGL4cK5Kr3yl/dfsQSxUNkkhrT8dwY/ZRqFEzyaambGB5TNqZD3rEYUsWNn84WnpIT6/TJINL2hUhm7u+JlCpjJiqwnYriyCzWMvO/WifBwZWfijBOkIds/tEgkQQjkl1P+kJzhnJigTIt7K6EjaimDG1GWQje4snL0DyvepbvLiq16zyOIhzBMZyBB5dQg1uoQwMYKHiGV3hztPPivDsf89aCk88cwh85nz9KrJAO</latexit>10

Xiaoning Du, Xiaofei Xie, Yi Li, Lei Ma, Jianjun Zhao, and Yang Liu

The space of choices at a state ˆs is given by the set of inputs ˆX (ˆs) enabled at that
state, which is abstracted in the same way as the states. We write Prˆx(ˆs, ˆs(cid:48)) to denote
the conditional probability of visiting ˆs(cid:48) given the current state ˆs with input ˆx, such that
Prˆx(ˆs, ˆs(cid:48)) = 1. We deﬁne the transition probability as the number of concrete
Σˆs(cid:48)
transitions from ˆs to ˆs(cid:48) over the number of all outgoing concrete transitions from ˆs given
the input ˆx, i.e.,

ˆ
S

∈

(ˆs, ˆs(cid:48)) =

Pr
ˆx

|{(s, s(cid:48), x)|s ∈ ˆs ∧ x ∈ ˆx ∧ s(cid:48) ∈ ˆs(cid:48)}|
|{(s, _, x)|s ∈ ˆs ∧ x ∈ ˆx}|

.

For example, Figure 5b shows the abstract state transition model for the concrete
traces in Figure 5a as a MDP. The abstract transitions are labeled with their transition
probabilities. For instance, since all outgoing transitions at ˆs0 end in ˆs1, the transition
probability from ˆs0 to ˆs1 is one. There are two choices of inputs at ˆs1, i.e., ˆX (ˆs1) =
{ˆx, ˆx(cid:48)}. When the given input at ˆs1 is ˆx, the transition probabilities are computed as
Prˆx(ˆs1, ˆs2) = 1
2 . The computation for the case when the input is
ˆx(cid:48) is similar.

2 and Prˆx(ˆs1, ˆs3) = 1

As is shown in the example, a MDP model is constructed by ﬁrst applying the state
and transition abstractions on a set of concrete traces, and then computing transition
probability distributions for each input at every abstract state. The time complexity of
the abstraction step depends on the number of concrete traces, while the complexity for
computing the transition probabilities only depends on the number of abstract transitions.

5 Coverage Criteria of Stateful Recurrent Neural Network

Inspired by traditional software testing, we propose a set of testing coverage criteria for
RNNs based on the abstract state transition model. The goal of the RNN coverage criteria
is to measure the completeness and thoroughness of test data in exercising the trained as
well as the unseen behaviors. The state and transition abstractions are designed to reﬂect
the internal network conﬁgurations at a certain point as well as the temporal behaviors
of the network over time, respectively. Therefore, to maximize the chance of discovering
defects in stateful neural networks, one should combine coverage criteria based on both
the state and transition abstractions to systematically generate comprehensive and diverse
test suites.

Let M = ( ˆS, I, ˆT ) be an abstract model of the trained RNN represented as a MDP.
Let T = {x0, . . . , xn} be a set of test input sequences. We deﬁne both the state-level
and transition-level coverage of T to measure how extensively T exercises the states and
transitions of M , respectively.

5.1 State-Level Coverage Criteria

The state-level coverage criteria focuses on the internal states of the RNN. The set of
abstract states ˆS represents a space generalization of the visited states obtained from
training data (or its representative parts), which is referred to as the major function
region [19]. The space outside the major function region is never visited by the training
data, and thus represents the corner-case region [19]. The test data should cover the major

DeepCruiser: Automated Guided Testing for Stateful Deep Learning Systems

11

function region extensively to validate the trained behaviors and cover the corner-case
region sufﬁciently in order to discover defects in unseen behaviors.

Basic State Coverage. Given a RNN abstract model M and a set of test inputs T , the
basic state coverage measures how thoroughly T covers the major function region visited
while training. To quantify this, we compare the set of abstract states visited by the
training inputs and the test inputs, denoted by ˆSM and ˆST , respectively. Then the basic
state coverage is given by the number of abstract states visited by both the training and
the test inputs over the number of states visited by the training inputs:

BSCOV(T, M ) =

| ˆST ∩ ˆSM |
| ˆSM |

.

k-Step State Boundary Coverage. The test data may also trigger new states which
are never visited during training. The k-step state boundary coverage measures how
well the corner-case regions are covered by the test inputs T . The corner-case regions
ˆSM c are the set of abstract states outside of ˆSM , which have non-zero distances from
any states in ˆSM . Then ˆSM c can be further divided into different boundary regions
deﬁned by their distances from ˆSM c. For example, the k-step boundary region, ˆSM c(k),
contains all abstract states which have a minimal distance k from ˆSM , or more formally,
ˆSM c(k) = {ˆs ∈ ˆSM c| minˆs(cid:48)
Dist(ˆs, ˆs(cid:48)) = k}.

The k-step state boundary coverage is deﬁned as the ratio of states visited by the test

ˆ
M
S

∈

inputs in the boundary regions of at most k steps away from ˆSM :

k-SBCOV(T, M ) =

| ˆST ∩ (cid:83)k
| (cid:83)k

i=1

ˆSM c (i)|

i=1
ˆSM c (i)|

.

5.2 Transition-Level Coverage Criteria

The state-level coverage indicates how thorough the internal states of an RNN are
exercised but it does not reﬂect the different ways transitions have happened among
states in successive time steps. The transition-level coverage criteria targets at the abstract
transitions activated by various input sequences and a higher transition coverage shows
that the inputs are more adequate in triggering diverse temporal dynamic behaviors.

Basic Transition Coverage. To quantify transition coverage, we compare the abstract
transitions exercised during both the training and testing stages, written as ˆδM and ˆδT ,
respectively. Then the basic transition coverage is given by:

BTCOV(T, M ) =

|ˆδT ∩ ˆδM |
|ˆδM |

.

The basic transition coverage subsumes the basic state coverage. In other words, for any
abstract model M , every test input T satisﬁes basic transition coverage with respect to
M , also satisﬁes the basic state coverage.
Input Space Coverage. The input space at an abstract state ˆs is given as ˆXˆs, which
represents the set of abstract inputs accepted at ˆs while training. The test inputs should

12

Xiaoning Du, Xiaofei Xie, Yi Li, Lei Ma, Jianjun Zhao, and Yang Liu

cover the input space at each state as much as possible to exercise the different subsequent
transitions. More formally, let the input spaces for the training and test data at ˆs be ˆXM (ˆs)
and ˆXT (ˆs), respectively. Then the input space coverage is deﬁned as:

ISCOV(T, M ) =

Σˆs
ˆ
T
∈
S
Σˆs
∈

∩
ˆ
M
S

| ˆXT (ˆs)|

ˆ
M
S
| ˆXM (ˆs)|

.

Note that the input space coverage is incomparable to the basic transition coverage –
achieving the input coverage does not guarantee the transition coverage, and vice versa.

Weighted Input Coverage. Our abstract model also encodes the frequencies of different
transitions given a particular input, observed during training. More frequently triggered
transitions have a higher transition probability, which is given by the transition probability
function ˆT . The weighted input coverage considers not only the different choices at
a state, but also the range of possible subsequent transitions when a speciﬁc input is
chosen. More formally, it is deﬁned as:

WICOV(T, M ) =

Σˆs
∈

ˆ
T
S

ˆ
M
S

∩

Σˆx

∈

ˆT (ˆs, ˆx, ˆs(cid:48))

ˆδT (ˆs)

M (ˆs)Σˆs(cid:48)
ˆ
X
∈
| ˆXM (ˆs)|

ˆ
T (ˆs)
X
Σˆs
∈

∩

ˆ
M
S

The weighted input coverage is stronger than both the basic transition coverage and the
input space coverage.

6 Coverage-Guided Testing Framework

In this section, we introduce the coverage-guided testing framework. We ﬁrst describe a
group of metamorphic transformations specialized for audio signals (Section 6.1) and
then present a mutation-based test generation algorithm which is guided by the coverage
criteria proposed in Section 5.

6.1 Metamorphic Transformations of Audio Signals

ASR performs general transformation from audio speeches to the corresponding natural-
language texts, and is often expected to work properly on speeches with various volume,
speed and voice characteristics. Also, these speech audio signals may be mixed with
noises coming from ambient sounds and not well-insulated receivers. Inspired by these
practical scenarios, we derive a set of transformation operators to mimic the environment
interference. Overall, they can be classiﬁed into four categories:

– Volume-related transformations (VRT): ChangeVolume, LowPassFilter, HighPassFil-

ter.

– Speed-related transformations (SRT): PitchShift, ChangeSpeed.
– Clearness-related transformations (CRT): AddWhiteNoise, ExtractHarmonic
– Unaffected transformations (UAT): DRC, Trim.

DeepCruiser: Automated Guided Testing for Stateful Deep Learning Systems

13

Table 1: Transformations for audio signals.

Transformation

Description

2 PitchShift

1 AddWhiteNoise Randomly add white noise in the audio
Pitch-shift the waveform of the audio to
raise or lower the pitch of an audio signal
by a random interval
Trim leading and trailing silence from
an audio signal

3 Trim

6 DRC

4 ChangeSpeed Randomly speed up or slow down the audio
5 ChangeVolume Randomly adjust the volume of the audio
Dynamic range compression (DRC), that
reduces the volume of loud sounds or
ampliﬁes quiet sounds thus reducing or
compressing an audio signal’s dynamic range
Pass signals with a frequency lower than a
random selected cutoff frequency and
attenuates signals with frequencies higher
than the cutoff frequency
Pass signals with a frequency higher than a
random cutoff frequency and attenuates
signals with frequencies lower than the
cutoff frequency

8 HighPassFilter

7 LowPassFilter

Categories VRT, SRT and CRT affect the volume, speed and clearness of an audio signal,
respectively; and Category UAT contains transformations that affect neither of them, but
still makes minor changes to the speech signal. Table 1 summarizes the transformations
with brief descriptions.

For defect detection, our goal is to generate audios which sounds normal to human
but are incorrectly transcribed by ASRs. With a diverse collection of transformations, an
audio can be mutated to generate new audios, among which there could be ones trigger
new traces in the trained network and lead to potential defects in the ASR. However,
a violent transformations with signiﬁcant perturbations may result in an audio which
is not recognizable even by human. For instance, the volume may become too low or
the frequency may become too high. To generate suitable defect-triggering candidates,
we apply the transformations with restraints to ensure that the audio seeds and the
corresponding mutants sound the same to human beings. Transformation operators
satisfying the above requirements are said to keep a metamorphic relation [41] and we
refer to them as metamorphic transformations. Now we propose a strategy to perform
transformations made by DeepCruiser with the best effort to preserve its text information
of the audio before and after transformation.

In general, volume, speed and clearness transformations have no effect on the au-
dio semantics, when applied individually and controlled under a certain degree. How-
ever, when an audio input a0 is processed with a sequence of transformations (e.g.,
a0 (cid:44)→ a1, . . . , (cid:44)→ ai), there is a higher chance that the audio cannot be well recognized
by human due to accumulated distortions. We propose a strategy to conservatively select

14

Xiaoning Du, Xiaofei Xie, Yi Li, Lei Ma, Jianjun Zhao, and Yang Liu

transformations for generating defect candidates indistinguishable to human before and
after the transformations: (1) we carefully set the parameters to ensure that a single
step transformation (on volume, speed or clearness) does not violate the metamorphic
relations (i.e., human hearing are not affected); and (2) an audio, generated by mutating
from a seed after a sequence of transformations T , is limited to be mutated by a trans-
formation t ∈ S ∪ UAT such that ({t} ∪ S) ∩ T = ∅, where S ∈ {V R, SRT , CRT }.
Intuitively, the constraints make sure that a mutant is generated by altering the volume,
speed or clearness of a seed input at most once. If this constraints is unsatisﬁed, the
audio will not be transformed further.

6.2 Coverage-Guided Testing

Algorithm 1 presents the general procedure to test RNN-based DL systems with various
conﬁgurable feedback. It is consistent with the testing framework diagram shown in
Fig. 3. The inputs of DeepCruiser include initial seeds I and the RNN-based deep
learning system R. The outputs are regression tests with higher coverage and failed
tests that are incorrectly handled. The initial test queue only contains initial seeds.
For each time, DeepCruiser selects one input a (i.e., an speech audio) from the test
queue. Based on the already selected transformations of a, DeepCruiser randomly picks
one transformation t (c.f. Section 6.1). If no further transformation is allowed to be
picked (i.e., t = null) under the metamorphic relation constraints, DeepCruiser will
select next input from the queue. For a picked transformation t, a random parameter is
picked. DeepCruiser will generate a new audio a(cid:48) with transformation t and perform the
transformation with the deep learning system R. If the prediction result is inconsistent
with the original seed, a(cid:48) will be added into the failed tests. For audio in ASR, we decide
a failed test by checking whether the Word/Character Error Rate (W/CER) exceeds a
certain threshold. If the mutated test is not a failed test and increases the overall coverage,
DeepCruiser adds it into the test queue and updates the coverage of tests in the test
queue.

7 Evaluation

In this section, we evaluate the effectiveness of the proposed abstract state transition
model and test coverage criteria, and the performance of our coverage-guided testing
framework. Through various experiments, we aim to answer the following research
questions:
RQ1: Could the abstract model distinguish internal behaviours of RNN when handling
different inputs? How precise is the distinction with different abstraction conﬁgurations?
RQ2: Is there a correlation between the proposed criteria and erroneous behaviors of the
RNN?
RQ3: How effective is DeepCruiser for generating high-coverage tests?
RQ4: How useful is DeepCruiser for defect detection in RNN-based ASR systems?

DeepCruiser: Automated Guided Testing for Stateful Deep Learning Systems

15

Algorithm 1: DeepCruiser

:I: Initial seeds, R, RNN-based stateful deep learning system
:F : Failed tests, Q: Test queue

input
output
1 F ← ∅;
2 Q ← I;
3 while a ← Select(Q) do
4

t ← P ickT ransf orm(a) ;
if t is null then
continue :;

5

6

7

8

9

10

11

12

13

Randomly pick parameter p for t ;
a(cid:48) = mutate(t, a)vt;
cov, result ← P redicate(R, a(cid:48));
if Failed(a’, result) then
F ← F (cid:83){a(cid:48)}

else if CoverageIncrease(cov, Q) then

Q ← Q (cid:83) a(cid:48);
U pdateCoverage(Q);

Table 2: Conﬁgurations of abstract model.

Name

M{3,10} M{3,20} M{3,50} M{3,100}

#Dimensions (k)
#Partitions (m)
#States (| ˆS|)

3
10

3
20

3
50

3
100

553

3,291 40,589 263,106

7.1 Datasets and Experiment Setup

Datasets. We selected Mozilla’s implementation of DeepSpeech-0.3.0 [42] which
produces one of the state-of-the-art open source ASR models. All our experiments were
conducted on a pre-trained English model released along with DeepSpeech-0.3.0,
which was trained with Fisher [43], LibriSpeech [44], Switchboard [45], and a pre-
release snapshot of the English Common Voice training corpus [46]. It achieves an 11%
WER on the LibriSpeech clean test corpus. In their implementation, the RNN-based
model (see the part highlighted in Fig 2) is specialized with a LSTM kernel. Its state
vector has 2048 dimensional 64-bit ﬂoating point, which is the major target for abstract
model construction.

Experiment Setup. To construct the abstract model, we randomly selected 20% of the
training data to perform the proﬁling considering our limited computation resource.
Even though, after proﬁling, we still get a huge set of state vectors (about 90 billion
64-bit ﬂoats). In the next step, we perform Principle Component Analysis to analyze
the principle components of the vector space, based on which the abstract model and
transition space are constructed.

16

Xiaoning Du, Xiaofei Xie, Yi Li, Lei Ma, Jianjun Zhao, and Yang Liu

(a) Under M{3,10}

(b) Under M{3,20}

(c) Under M{3,50}

(d) Under M{3,100}

Fig. 6: Results of input similarities under different abstraction conﬁgurations.

(a) Under M{3,10}

(b) Under M{3,20}

(c) Under M{3,50}

(d) Under M{3,100}

Fig. 7: Correlation between basic state variation and relative WER under different
abstraction conﬁgurations.

The model abstraction parameters k and m for the can be conﬁgured to generate
abstract models with different precision. To analyze the potential inﬂuence on these
parameters on model precision, we select four different conﬁgurations listed in Table 2.
We use M
to represent the conﬁguration with k dimensions and m partitions. The
last row shows the number of states under different conﬁgurations.

k,m

{

}

7.2 RQ1: Evaluation on Abstract Model Precision

Since our testing criteria are designed based on the abstract model, the precision of the
abstract model would directly inﬂuence the precision of the testing criteria in distin-
guishing the internal behaviours of RNN given different inputs. An accurate parameter
conﬁguration of testing criteria would allow to distinguish on the internal behaviours
of RNN on even highly similar inputs. To generate new tests, we perform metamorphic
transformations (Section 6.1) with very small changes to keep the metamorphic con-
straints with the best effort. Speciﬁcally, in this evaluation, we randomly select 100 inputs
from the test data. For each audio, 100 inputs are generated using different metamorphic
transformations. Finally, we have 100 original input and 10,000 new inputs.

To quantify the similarity between two inputs, we adopt the Jaccard index to measure
their coverage similarity. Given an abstract model M and an instance x, we denote the
set of basic states covered by x as ˆSx. Then the Jaccard Index JM(x, y) for inputs x and
y is calculated as:

JM(x, y) =

| ˆSx ∩ ˆSy|
| ˆSx ∪ ˆSy|

Jaccard Index ranges over [0, 1], and 0 indicates no overlapping (i.e., x and y is totally
different) between two sets while 1 for totally duplicate sets (i.e., x and y is very similar).

DeepCruiser: Automated Guided Testing for Stateful Deep Learning Systems

17

Note that when Jaccard Index is 1, it does not imply that x and y are absolutely the same
as the transitions may be different.

For each one of the new inputs and the corresponding original input, we compute a
Jaccard Index value. Figure 6 shows the distribution of the 10,000 Jaccard Index values
under different abstraction conﬁgurations. Under the conﬁguration M
, some of
inputs cannot be be well differentiated as the conﬁguration is too coarse. For exmaple,
more than 90% of Jaccard Index values are greater or equal than 0.3, and even more
than 5% values are distributed in the range [0.9, 1.0]. After the abstraction is reﬁned (i.e.,
the grids are more ﬁne-grained), most of the Jaccard Index values become smaller. For
, more than 85% of values are distributed in the range [0.0, 0.1].
example, under M

3,10

{

}

3,100

}

{

Answer to RQ 1: The abstract model can distinguish internal behaviors of RNN
for different inputs effectively, even for the inputs with small differences (e.g., the
inputs with metamorphic relations). The accuracy of abstract models under different
abstraction conﬁgurations also varies. Abstraction with more ﬁne-grained grids
distinguishes the outputs better.

7.3 RQ2: Correlation Between Testing Criteria and Erroneous Behaviors of the

RNN

With RQ1, we already know that the minor differences in the inputs can be captured by
the abstract model. Based on the abstract model, we proposed diverse testing criteria.
In this section, we aim to evaluate whether the testing criteria can help to ﬁnd potential
defects and issues in RNNs, i.e., is there some correlation between testing coverage5 and
erroneous behavior of the RNN?

We sample 100 audio from the test data whose Word Error Rates (WERs) are 0. The
WER of the audio represents the error rate for the transcripts from RNN. In other words,
the sampled audio could be perfectly processed by the RNN. Based on the 100 audio
(seeds), we randomly generate 10,000 audio (with different WER) by metamorphic
transformations.

Figure 7 shows the distribution of the 10,000 audio under different abstraction
conﬁgurations. The x-axis is WER and the y-axis is the Jaccard Index value. The results
show that, in general, test cases with higher relative WER tend to have lower Jaccard
index, which means they are less similar with the original seed input. The more ﬁne-
grained the abstract model is, the more obvious is such phenomenon. Intuitively, by
increasing the state coverage, we can generate more data which have lower Jaccard index.
Thereby attempting to increase the coverage on state offers more possibility to detect
more erroneous behaviors of the RNN.

5In this paper, we focus on the basic state coverage, leaving the evaluation of other criteria in the
future work.

18

Xiaoning Du, Xiaofei Xie, Yi Li, Lei Ma, Jianjun Zhao, and Yang Liu

Table 3: Basic state coverage increase with DeepCruiser.

Conﬁg.

Ini. Cov. 12h Cov. Increase

M{3,10}
M{3,20}
M{3,50}
M{3,100}

26.1
20.1
12.3
5.5

43.2
65.5%
40.5 101.5%
36.2 194.3%
28.4 416.4%

Answer to RQ 2: There is a strong correlation between the state variation (i.e., the
Jaccard Index) and erroneous behaviors of the RNN (i.e., WER). The transformed
audio is likely to trigger more erroneous behaviors if it covers more different states
comparing with the original audio. By improving BSC coverage, more states are
covered and more erroneous behaviors would potentially be captured.

7.4 RQ3: Effectiveness of DeepCruiser for coverage improvement

DeepCruiser is designed to generate test cases with high coverage based on the coverage
feedback. We evaluate the effectiveness of DeepCruiser in generating high-coverage tests
with BSC guidance. Experimentally, we sample 100 audio as the initial seeds and run
DeepCruiser for 12 hours. Table 3 shows the increase of BSC with different abstraction
conﬁgurations. Columns “Ini. Cov.” and “12h Cov.” present the initial coverage of
seeds and the coverage achieved after 12 hours’ testing, respectively. Column “Increase”
shows the coverage increases with respect to the initial values. The results show that
DeepCruiser can increase the coverage effectively. As the conﬁguration becomes more
and more ﬁne-grained (from M
), the initial coverage is smaller because
the states are more in the abstract model. At the same time, the increment of the coverage
becomes larger.

to M

3,100

3,10

}

{

}

{

Answer to RQ 3: DeepCruiser can obviously improve the state coverage. Further-
more, it is more effective when the abstract model is more ﬁne-grained.

7.5 RQ4: Erroneous Behavior Detection

To answer the question, we measure the WER of the generated audio in Fig. 8. WER
represents the erroneous degree of the RNN prediction. Fig. 8 shows the average WER
of generated audio under different abstraction conﬁgurations. The results show that the
average WER is higher for more ﬁne-grained abstract model. It can be explained by the
answer to RQ2. With more ﬁne-grained abstract model, DeepCruiser will generate test
cases that can cover more states of the model. Thus, the test cases are more different
with the original seed input (i.e., the Jaccard Index is smaller). Finally, it is more likely
to generate test cases with higher WER.

DeepCruiser: Automated Guided Testing for Stateful Deep Learning Systems

19

Fig. 8: Average WER of inputs generated with DeepCruiser.

Answer to RQ 4: DeepCruiser can effectively generate tests to trigger erroneous
behaviors of the RNN. For more ﬁne-grained abstract model, it will capture more
erroneous behaviors (i.e., higher WER) of the RNN.

7.6 Threats to Validity

We list factors which could affect the validity of the experiments. Due to resource
constraints, we did not use all of the training data for constructing the abstract model.
This may result in a abstract model which does not fully reﬂect the actual trained network
behaviors. To mitigate this problem, we randomly select samples from the training set
and follow the distribution of training data approximately. We adopt a conservative
metamorphic transformation strategy to make small changes on the original audio such
that DeepCruiser will generate realistic audio. However, it may still cause false positives
especially for the low-quality input (i.e., the audio is not clear such as low volume, too
much noise). To mitigate this problem, we manually check and make sure the selected
inputs (i.e., the 100 audio in RQ1, RQ2, RQ3 and RQ4) are of high quality.

8 Related Work

In this section, we compare our work with other testing and abstraction techniques for
DL systems.

Testing of DNN. The lack of robustness places a major threat to the commercialization
and wide adoption of DL systems. Researchers have devoted a great amount of efforts to
investigate effective and systematic approaches to test DL systems, led by the pioneer
work of Pei et al. [18]. The authors designed the ﬁrst set of testing criteria – neuron
coverage – to measure how much internal logic of the DNN has been examined by a
given set of test data. Several new criteria have been proposed since then, including a
set of adapted MC/DC test criteria by Sun et al. [47], a set of multi-granularity testing
criteria by Ma et al. [19], and combinatorial testing criteria [48]. So far, the proposed
coverage criteria are used to guide the metamorphic mutation-based testing [23], concolic

20

Xiaoning Du, Xiaofei Xie, Yi Li, Lei Ma, Jianjun Zhao, and Yang Liu

testing [49], and coverage-guided testing of DNN [50, 51]. In addition, mutation testing
techniques are also proposed to evaluate the test data quality through injecting faults into
DL models [52].

The usefulness of MC/DC criteria is limited by the scalability issue, and other criteria
are more suitable for the feedforward neural network architecture, even through they
are partially applicable to RNN via unrolling. The experimental results reported in [23]
demonstrated that the neuron coverage works effectively on CNN but far from ideal on
RNN when used to guide the generation of test cases. This indicates that RNN are not
simple folding of CNN, and existing criteria may not be well suited for RNN. Currently,
there is still a lack of customized testing criteria specially designed for RNN, which are
able to capture the statefulness of RNN and measure the thoroughness of the testing
efforts.

Abstraction of RNN. Many approaches have been proposed to model RNN, usually in
the form of Finite State Automaton (FSA), in order to understand the internal dynamics
of RNN. FSA represents the internal state transitions explicitly and thus can be used to
interpret the underlying decision rules embedded in RNN. MDP has similar properties
in that sense, and it also captures state transition distributions under different inputs,
making it a more precise model. Constructing a FSA from RNN requires two steps:
(1) state space partition over the real-valued numerical vectors; and (2) automaton
construction based on the partitions. Various partitioning strategies and automaton
construction algorithms have been proposed. Omlin and Giles [53] proposed to divide
each dimension of the state vector into equal intervals, so as to divide the state space
into regular grids. Unsupervised classiﬁcation algorithms were also applied for state
space partitions. For example, k-means and its variants were studied in [54–56]. Weiss et
al. [24] devised an algorithm to dynamically create partitions, where an SVM classiﬁer
with an RBF kernel is ﬁtted to separate several state vectors from its original partitions.
Recent studies [24,55,56] have focused more on the LSTM and GRU, demonstrating that
the same abstraction techniques also work on RNN variants. When applied to real-world
tasks, including natural language processing and speech recognition, the state space of
the trained RNN model could be tremendously large. This makes scalability an issue
for partition techniques such as k-means and kernel algorithms. Therefore, we adopted
the much cheaper interval abstraction and we could also beneﬁt from its ﬂexibility in
precision adjustment.

9 Conclusion

Vulnerabilities of current DL systems, such as autonomous vehicles and voice assistants,
are threatening the trust and mass adoption of these technologies. As such, much research
efforts have been focused on the testing of DL systems to ensure their reliability and
robustness. Yet, little work has been done on the testing of stateful DL systems. As the
ﬁrst work along this line, we designed a set of test coverage criteria, which can be used
to guide the systematic testing of software systems powered by stateful neural networks.
Furthermore, we proposed a set of metamorphic transformations on audios inspired
by real-world scenarios, and implemented a general fuzzing framework to discover
defects in ASRs. We conﬁrmed the usefulness of the proposed criteria on ASRs and

DeepCruiser: Automated Guided Testing for Stateful Deep Learning Systems

21

showed that the fuzzing framework is effective in exposing real-world defects. In the
future, we plan to evaluate our techniques on more diverse application domains, towards
providing quality assurance solution for DL systems life-cycle [57].

References

1. D. Ciregan, U. Meier, and J. Schmidhuber, “Multi-column deep neural networks for image

classiﬁcation,” in CVPR, 2012, pp. 3642–3649.

2. G. Hinton, L. Deng, D. Yu, G. E. Dahl, A.-r. Mohamed, N. Jaitly, A. Senior, V. Vanhoucke,
P. Nguyen, T. N. Sainath et al., “Deep Neural Networks for Acoustic Modeling in Speech
Recognition: The Shared Views of Four Research Groups,” IEEE Signal Processing Magazine,
vol. 29, no. 6, pp. 82–97, 2012.

3. B. Huval, T. Wang, S. Tandon, J. Kiske, W. Song, J. Pazhayampallil, M. Andriluka,
P. Rajpurkar, T. Migimatsu, R. Cheng-Yue, F. Mujica, A. Coates, and A. Y. Ng, “An empirical
evaluation of deep learning on highway driving,” CoRR, vol. abs/1504.01716, 2015. [Online].
Available: http://arxiv.org/abs/1504.01716

4. D. Ciresan, A. Giusti, L. M. Gambardella, and J. Schmidhuber, “Deep Neural Networks
Segment Neuronal Membranes in Electron Microscopy Images,” in NIPS, 2012, pp. 2843–
2851.

5. H. Chen, O. Engkvist, Y. Wang, M. Olivecrona, and T. Blaschke, “The Rise of Deep Learning

in Drug Discovery,” Drug Discovery Today, vol. 23, no. 6, pp. 1241 – 1250, 2018.

6. “Apple Siri.” [Online]. Available: https://www.apple.com/ios/siri
7. “Amazon Alexa.” [Online]. Available: https://developer.amazon.com/alexa
8. “Google Assistant.” [Online]. Available: https://assistant.google.com
9. “Microsoft Cortana.” [Online]. Available: https://www.microsoft.com/en-us/cortana
10. A. Graves, A.-r. Mohamed, and G. Hinton, “Speech Recognition with Deep Recurrent Neural

Networks,” mar 2013. [Online]. Available: https://arxiv.org/abs/1303.5778

11. A. Hannun, C. Case, J. Casper, B. Catanzaro, G. Diamos, E. Elsen, R. Prenger, S. Satheesh,
S. Sengupta, A. Coates, and A. Y. Ng, “Deep Speech: Scaling up end-to-end speech
recognition,” dec 2014. [Online]. Available: http://arxiv.org/abs/1412.5567

12. A. van den Oord, S. Dieleman, H. Zen, K. Simonyan, O. Vinyals, A. Graves, N. Kalchbrenner,
A. Senior, and K. Kavukcuoglu, “WaveNet: A Generative Model for Raw Audio,” sep 2016.
[Online]. Available: https://arxiv.org/abs/1609.03499

13. The BBC, “AI image recognition fooled by single pixel change,” 2016. [Online]. Available:

https://www.bbc.com/news/technology-41845878

14. The New York Times, “Alexa and Siri Can Hear This Hidden Command. You
[Online]. Available: https://www.nytimes.com/2018/05/10/technology/

Can’t,” 2016.
alexa-siri-hidden-command-audio-attacks.html

15. Google Accident,

“A Google
[Online]. Available:

self-driving car

the ﬁrst
https://www.theverge.com/2016/2/29/11134344/

crash for

caused a

2016.

time,”
google-self-driving-car-crash-report

16. Uber Accident, “After Fatal Uber Crash, a Self-Driving Start-Up Moves For-
[Online]. Available: https://www.nytimes.com/2018/05/07/technology/

ward,” 2018.
uber-crash-autonomous-driveai.html

17. A. Karpathy, “Software 2.0,” https://medium.com/@karpathy/software-2-0-a64152b37c35,

2018.

18. K. Pei, Y. Cao, J. Yang, and S. Jana, “Deepxplore: Automated whitebox testing of deep
learning systems,” in Proceedings of the 26th Symposium on Operating Systems Principles,
2017, pp. 1–18.

22

Xiaoning Du, Xiaofei Xie, Yi Li, Lei Ma, Jianjun Zhao, and Yang Liu

19. L. Ma, F. Juefei-Xu, J. Sun, C. Chen, T. Su, F. Zhang, M. Xue, B. Li, L. Li, Y. Liu et al.,
“Deepgauge: Multi-granularity testing criteria for deep learning systems,” The 33rd IEEE/ACM
International Conference on Automated Software Engineering (ASE 2018), 2018.

20. J. Kim, R. Feldt, and S. Yoo, “Guiding Deep Learning System Testing using Surprise Ade-

quacy,” ArXiv e-prints, Aug. 2018.

21. T. Dreossi, S. Ghosh, A. Sangiovanni-Vincentelli, and S. A. Seshia, “Systematic Testing of
Convolutional Neural Networks for Autonomous Driving,” in Reliable Machine Learning in
the Wild, 2017.

22. M. Zhang, Y. Zhang, L. Zhang, C. Liu, and S. Khurshid, “Deeproad: Gan-based metamorphic
testing and input validation framework for autonomous driving systems,” in Proceedings of
the 33rd ACM/IEEE International Conference on Automated Software Engineering, ser. ASE
2018, 2018.

23. Y. Tian, K. Pei, S. Jana, and B. Ray, “Deeptest: Automated testing of deep-neural-network-
driven autonomous cars,” in Proceedings of the 40th International Conference on Software
Engineering. ACM, 2018, pp. 303–314.

24. G. Weiss, Y. Goldberg, and E. Yahav, “Extracting automata from recurrent neural networks

using queries and counterexamples,” arXiv preprint arXiv:1711.09576, 2017.

25. N. Carlini and D. Wagner, “Audio Adversarial Examples: Targeted Attacks on Speech-to-Text,”

jan 2018. [Online]. Available: http://arxiv.org/abs/1801.01944

26. X. Yuan, Y. Chen, Y. Zhao, Y. Long, X. Liu, K. Chen, S. Zhang, H. Huang,
X. Wang, and C. A. Gunter, “CommanderSong: A Systematic Approach for Practical
Adversarial Voice Recognition,” in 27th USENIX Security Symposium (USENIX Security
18). Baltimore, MD: USENIX Association, 2018, pp. 49–64. [Online]. Available:
https://www.usenix.org/conference/usenixsecurity18/presentation/yuan-xuejing

27. C. Kereliuk, B. L. Sturm, and J. Larsen, “Deep Learning and Music Adversaries,” ArXiv

e-prints, Jul. 2015.

28. Y. Gong and C. Poellabauer, “Crafting Adversarial Examples For Speech Paralinguistics

Applications,” ArXiv e-prints, Nov. 2017.

29. S. Hochreiter, Y. Bengio, P. Frasconi, J. Schmidhuber et al., “Gradient ﬂow in recurrent nets:

the difﬁculty of learning long-term dependencies,” 2001.

30. S. Hochreiter and J. Schmidhuber, “Long Short-Term Memory,” Neural computation, vol. 9,

no. 8, pp. 1735–1780, 1997.

31. K. Cho, B. Van Merriënboer, D. Bahdanau, and Y. Bengio, “On the properties of neural
machine translation: Encoder-decoder approaches,” arXiv preprint arXiv:1409.1259, 2014.

32. A. Graves, S. Fernández, F. Gomez, and J. Schmidhuber, “Connectionist temporal classiﬁca-
tion: labelling unsegmented sequence data with recurrent neural networks,” in Proceedings of
the 23rd international conference on Machine learning, 2006, pp. 369–376.

33. Y. Miao, M. Gowayyed, and F. Metze, “Eesen: End-to-end speech recognition using deep
rnn models and wfst-based decoding,” in Automatic Speech Recognition and Understanding
(ASRU), 2015 IEEE Workshop on.

IEEE, 2015, pp. 167–174.

34. I. Jolliffe, “Principal Component Analysis,” in International Encyclopedia of Statistical

Science. Springer, 2011, pp. 1094–1096.

35. M. L. Puterman, Markov Decision Processes: Discrete Stochastic Dynamic Programming,

1st ed. New York, NY, USA: John Wiley & Sons, Inc., 1994.

36. C. W. Omlin and C. L. Giles, “Constructing Deterministic Finite-State Automata in Recurrent

Neural Networks,” Journal of the ACM (JACM), vol. 43, no. 6, pp. 937–972, 1996.

37. P. Rastogi, R. Cotterell, and J. Eisner, “Weighting Finite-State Transductions with Neural
Context,” in Proceedings of the 2016 Conference of the North American Chapter of the
Association for Computational Linguistics: Human Language Technologies, 2016, pp. 623–
633.

DeepCruiser: Automated Guided Testing for Stateful Deep Learning Systems

23

38. A. Gill, Introduction to the Theory of Finite-State Machines, ser. McGraw-Hill electronic
sciences series. McGraw-Hill, 1962. [Online]. Available: https://books.google.com.sg/
books?id=2IzQAAAAMAAJ

39. B. G. Horne, C. L. Giles, P. C. Collingwood, S. O. Computing, M. Sci, P. Tino, and P. Tino,
“Finite State Machines and Recurrent Neural Networks – Automata and Dynamical Systems
Approaches,” in Neural Networks and Pattern Recognition. Academic Press, 1998, pp.
171–220.

40. J. F. Thompson, B. K. Soni, and N. P. Weatherill, Handbook of Grid Generation. CRC press,

1998.

41. T. Y. Chen, S. C. Cheung, and S. M. Yiu, “Metamorphic testing: a new approach for generating
next test cases,” Technical Report HKUST-CS98-01, Department of Computer Science, Hong
Kong University of Science and Technology, Hong Kong, Tech. Rep., 1998.

42. “Mozilla’s DeepSpeech,” https://github.com/mozilla/DeepSpeech, 2018.
43. C. Cieri, D. Miller, and K. Walker, “The ﬁsher corpus: a resource for the next generations of

speech-to-text.” in LREC, vol. 4, 2004, pp. 69–71.

44. V. Panayotov, G. Chen, D. Povey, and S. Khudanpur, “Librispeech: an asr corpus based on
public domain audio books,” in Acoustics, Speech and Signal Processing (ICASSP), 2015
IEEE International Conference on.

IEEE, 2015, pp. 5206–5210.

45. J. J. Godfrey, E. C. Holliman, and J. McDaniel, “Switchboard: Telephone speech corpus for
research and development,” in Acoustics, Speech, and Signal Processing, 1992. ICASSP-92.,
1992 IEEE International Conference on, vol. 1.

IEEE, 1992, pp. 517–520.

46. “Commom Voice Dataset.” [Online]. Available: https://voice.mozilla.org/en/datasets
47. Y. Sun, X. Huang, and D. Kroening, “Testing deep neural networks,” arXiv preprint

arXiv:1803.04792, 2018.

48. L. Ma, F. Zhang, M. Xue, B. Li, Y. Liu, J. Zhao, and Y. Wang, “Combinatorial Testing for

Deep Learning Systems,” arXiv e-prints, p. arXiv:1806.07723, Jun. 2018.

49. Y. Sun, M. Wu, W. Ruan, X. Huang, M. Kwiatkowska, and D. Kroening, “Concolic Testing

for Deep Neural Networks,” 2018.

50. A. Odena and I. Goodfellow, “TensorFuzz: Debugging Neural Networks with Coverage-

Guided Fuzzing,” 2018.

51. X. Xie, L. Ma, F. Juefei-Xu, H. Chen, M. Xue, B. Li, Y. Liu, J. Zhao, J. Yin, and S. See,
“Coverage-Guided Fuzzing for Deep Neural Networks,” sep 2018. [Online]. Available:
http://arxiv.org/abs/1809.01266

52. L. Ma, F. Zhang, J. Sun, M. Xue, B. Li, F. Juefei-Xu, C. Xie, L. Li, Y. Liu, J. Zhao, and
Y. Wang, “Deepmutation: Mutation testing of deep learning systems,” in 2018 IEEE 29th
International Symposium on Software Reliability Engineering (ISSRE), Oct 2018, pp. 100–
111.

53. C. W. Omlin and C. L. Giles, “Extraction of rules from discrete-time recurrent neural networks,”

Neural networks, vol. 9, no. 1, pp. 41–52, 1996.

54. A. L. Cechin, D. R. P. Simon, and K. Stertz, “State Automata Extraction from Recurrent
Neural Nets Using k-Means and Fuzzy Clustering,” in Proceedings of the XXIII International
Conference of the Chilean Computer Science Society, 2003, p. 73.

55. Q. Wang, K. Zhang, A. G. Ororbia,

II, X. Xing, X. Liu, and C. L. Giles,
“An empirical evaluation of rule extraction from recurrent neural networks,” Neural
Comput., vol. 30, no. 9, pp. 2568–2591, Sep. 2018.
[Online]. Available: https:
//doi-org.ezlibproxy1.ntu.edu.sg/10.1162/neco_a_01111

56. B.-J. Hou and Z.-H. Zhou, “Learning with Interpretable Structure from RNN,” oct 2018.

[Online]. Available: http://arxiv.org/abs/1810.10708

57. L. Ma, F. Juefei-Xu, M. Xue, Q. Hu, S. Chen, B. Li, Y. Liu, J. Zhao, J. Yin, and S. See, “Secure
Deep Learning Engineering: A Software Quality Assurance Perspective,” arXiv e-prints, p.
arXiv:1810.04538, Oct. 2018.

