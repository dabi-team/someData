Data-Driven and Deep Learning Methodology for
Deceptive Advertising and Phone Scams Detection

†TonTon Hsien-De Huang, ∗Chia-Mu Yu, and ∗†Hung-Yu Kao
†Leopard Mobile Inc.
∗Department of Computer Science and Engineering, National Chung Hsing University, Taiwan
† ∗†Department of Computer Science and Information Engineering, National Cheng Kung University, Taiwan

7
1
0
2

t
c
O
5
1

]

R
C
.
s
c
[

1
v
5
0
3
5
0
.
0
1
7
1
:
v
i
X
r
a

Abstract—The advance of smartphones and cellular networks
boosts the need of mobile advertising and targeted marketing.
However, it also triggers the unseen security threats. We found
that the phone scams with fake calling numbers of very short
lifetime are increasingly popular and have been used to trick
the users. The harm is worldwide. On the other hand, deceptive
advertising (deceptive ads), the fake ads that tricks users to
install unnecessary apps via either alluring or daunting texts
and pictures, is an emerging threat that seriously harms the
reputation of the advertiser. To counter against these two new
threats, the conventional blacklist (or whitelist) approach and
the machine learning approach with predeﬁned features have
been proven useless. Nevertheless, due to the success of deep
learning in developing the highly intelligent program, our system
can efﬁciently and effectively detect phone scams and deceptive
ads by taking advantage of our uniﬁed framework on deep neural
network (DNN) and convolutional neural network (CNN). The
proposed system has been deployed for operational use and the
experimental results proved the effectiveness of our proposed
system. Furthermore, we keep our research results and release
experiment material on http://DeceptiveAds.TWMAN.ORG and
http://PhoneScams.TWMAN.ORG if there is any update.

Index Terms—Deep Learning, Phone Scams, Deceptive Adver-

tising, Neural Network

I. INTRODUCTION

Federal Trade Commission (FTC) indicated that phone scam
is the most popular type of scams in United States and there
are more than 150 million of disputes. In particular, in 2014,
the amount of monetary loss from phone scam is more than
1.7 billion. 46 percent of victims can clearly indicate how they
are tricked but 54 percent of victims claimed to be tricked by
phone scam. At the same time, the strike against robocalls
by FTC is supported by primary companies such as AT&T
and Google etc. On the other hand, there are cases where the
college students in China are tricked to give away their tuition
fees. According to the report, there are approximately 1.6
million of people conducting scam business and the revenue
of this business is more than 110 billion RMB. In addition,
there are similar cases in Japan where the amount of monetary
loss is more than 50 billion Yen. As shown in Fig. 1, in the
case of non-repeated calling numbers, all of the phone scams
intensively occur during the weekdays. More speciﬁcally,
compared to such an intensive amount of phone scams during
the weekdays, only approximately one third of phone scams
occurs during the weekend in the United States, India, and
Taiwan. In the case of repeated calling numbers, the situation

remains unchanged; very little portion of phone scams occurs
during the weekend.

Fig. 1. The current situation of the phone scams analysis.

The Ministry of Public Security, China, reported in 2016
that phone scams should account for the signiﬁcant ﬁnancial
losses (more than 2M RMB). In addition, recently each online
user receives 21.3 harassing calls in average per week. Among
them, 20% of harassing calls are dialed by Internet phone
or fake numbers. However, this occupies 60% of the total
ﬁnancial loss, reported by the Internet Society of China. Such
a large number of phone scams can be attributed to the fact
of the massive leakage of personal information. Thus, FTC
announced a list of dialing numbers for reference; once the
call is from those numbers, it is likely to be a harassing call.
Nonetheless, the reality is far more complicated; for example,
the list announced by FTC is not working for the call from
non-US area. Actually, phone scams can be categorized as
follows [2]:

1) Free Vacations and Prizes
2) Loan Scams
3) Phony Debt Collectors
4) Fake Charities
5) Medical Alert/Scams
6) Targeting Seniors

213733595215500111244225856221951142949993800010320004800010320004473861202385974385742764000816000264000816000243118918824114187120390100000200000300000400000500000600000700000800000Work Day(Benign)Holiday(Benign)Work Day(Maclicious)Holiday(Malicious)Work Day(Non‐Repeated& Benign)Holiday (Non‐Repeated &Benign)Work Day(Non‐Repeated& Malicious)Holiday (Non‐Repeated &Malicious)TWUSIN 
 
 
 
 
 
7) Warrant Threats
8) IRS Calls

Fig. 3. Procedures of deceptive ads.

Fig. 2. Examples of deceptive ads.

When you are doing web surﬁng, you might have ex-
perience on being informed that your cellphone is infected
by malware/virus or on being forced to download unknown
Apps. Deceptive ads, a particular type of ads,
is the use
of false or misleading statements in advertising, and may
cause negative impact on stakeholders. Deceptive ads is a
particular type of malicious advertising [1] that tricks you to
download unnecessary Apps. Deceptive ads might give you
false alarms, saying you are infected or your cellphone needs
to be updated. These false alarms sometimes cannot be turned
off by refreshing the webpage, making you uncomfortable
with the status of the cellphone. Such deceptive ads is pretty
annoying; the advertisers may in turn gain reverse effect (e.g.,
awful reputation) by adopting deceptive ads. The detection
and even capture of deceptive ads is deﬁnitely not easy;
the contents and wordings varied in different regions, time
zones, and countries. Phone scams and deceptive ads are not
a new threat; however, since mobile devices are always on
and carried 24/7, such a threat has quickly ascended on the
list of everyday Internet threats. Deceptive ads exhibit fast-
ﬂux behavior, while phone scams exhibit caller ID spooﬁng
behavior and therefore is more difﬁcult to be caught. Fig.
2 shows examples of deceptive ads whose pop-up ads show
falsiﬁed information and instructions.

On the other hand, we found that deceptive ads is increasing
its impact on cellphone. In general, the typical procedures of
how deceptive ads work are shown as follows (see Fig. 3).

1) Browse the porn website and click the temptation ads.
2) Pop up a false or misleading statement.
3) Orientate user towards the anti-virus App on Google

Play.

Among the deceptive ads, three main categories in terms of
the contents will be displayed (see Fig. 4).

• Pretend to have an alert for malware/virus infection.
• Pretend to have a notiﬁcation for updating Android sys-

tem.

Fig. 4. Three categories of deceptive ads.

• Pretend to have a notiﬁcation for patching the critical

vulnerability.

Note that among the three categories, fake infection alert
occupies almost the half. Only a few deceptive ads are the
fake patching notiﬁcation. Note also that through the analysis
of advertising alliance trafﬁc of April 2016, we discovered
that deceptive ads occupy up to 21% in the global advertising
alliance trafﬁc.

Google is one of the biggest victims from the false and
misleading contents perspective. In essence, the tool Apps,
such as security and power-saving Apps, suffers the most, in
terms of App categories. Most of the deceptive ads falsely
warn the user about malware/virus infection or battery dying.
An observation from our collected ads is that the targets of
deceptive ads are mostly emerging companies. An explanation
to such an observation is that the deceptive ads are usually as-
sociated with the tool Apps. The emerging companies such as
Qihoo 360 and Cheetah Mobile have developed and published
a number of tool Apps as strategic software for expanding the
market, and then deceptive ads have more impact on emerging
companies. As a result, the investment of the advertising will
turn to have negative impact on the reputation. Based on our
study, we ﬁnd that the porn websites are the major sources of
the deceptive ads. Of course, the rest of the deceptive ads are
mainly from the game portal, ﬁle hosting service, and news
websites. The typical scenario is that a banner showing an
alert about the malware/virus infection jumps out, once the
user clicks the ads, it will be directed to Google Play. The
user may click to check and then will be directed to download

the unnecessary App (see Fig. 3).

II. DEEP LEARNING APPROACH FOR PROBLEM SOLVING

Deep learning allows computational models that are com-
posed of multiple processing layers to learn representations
of data with multiple levels of abstraction [3]. Recently,
Alpha Go from Google DeepMind gains a huge success in
Computer Go. The deep learning behind the Alpha Go receives
huge attentions from both publics and academics [4]. Neural
network mimics how human brain works and can apply to
perform pattern recognition. Therefore, the image can be input
to the neural network and the burdensome procedures such as
feature extraction and data model can be omitted. Based on
the convolutional layer and pooling layey, CNN strenghtens
the effectiveness of pattern recognition. The most well-known
convolutional neural network (CNN) models are AlexNet [5],
VGG [6], GoogleNet [7], and ResNet in ImageNet Large
Scale Visual Recognition Challenge (ILSVRC). Due to the
use of deceptive ads, the existence of bad actors may lead
to the vicious competition, and therefore the benign actors
haves less earning. We observe that the deceptive ads mutate
very frequently, almost in real time. Thus, in the case of no
dedicated real-time detection, it is very difﬁcult to promise the
contents of the ads.

The technical challenge in differentiating between benign
and deceptive ads is that the contents of deceptive ads is not
ﬁxed; instead, the contents of deceptive ads vary according to
the factors such as the region, time zone, language, etc. The
conventional detections are useless in detecting deceptive ads.
Our previous research results have adopted machine learning
approach (with automated feature extraction for further text-
mining and pattern recognitions to handle multilingual decep-
tive ads) and integrated it with techniques including Ontology,
Type-2 Fuzzy Logic etc. However, our previous mechanism
was unable to smoothly handle these fast ﬂux-like behaviors
as above technical challenge [8]. Thus, our goal is to increase
expressiveness of our mechanism, while smoothly handling
these fast ﬂux-like behaviors of the deceptive ads challenge.
The most frequently used method of detecting deceptive
behavior includes phone scams and deceptive ads. There have
only been few research efforts for yellow pages, blacklist,
detecting malicious ads and phishing on malicious URLs. For
example, the pre-deﬁned features or ﬁxed delimiters for feature
selection and reactive URL or phone number blacklisting can
be used for the detection [9] [10]. However, these techniques
are inefﬁcient in detecting phone scams or deceptive ads due
to the short lifetime of deceptive behavior. In fact, the most
common type of phone scams is fake phone number which
makes phone calls from outside and deceptive ads exhibit a
fast ﬂux-like and region-aware behaviors. The former means
that the phone number exhibit caller ID spooﬁng behavior,
while the latter means that the deceptive ads would be valid
for only a very short time interval and by visiting the same
deceptive ads URL, the browsers in different countries or even
the same browser with different language settings may see

different contents12 (see Fig. 2). These two features make
tracking down the deceptive behavior much more difﬁcult.

III. OUR PROPOSED SYSTEM

Our system try to combine the novel techniques on users
cellphone (client-side), and deep learning, a branch of machine
learning based on a set of algorithms that attempt to model
high-level abstractions in data by using multiple processing
layers, with complex structures or otherwise, composed of
multiple non-linear transformations, on our back-end system
(server-side) to address the challenge of accurately detect-
ing phone scams for the loss of money and deceptive ads
for the product reputation, and the ads cost saving. Based
on the DNN and CNN in deep learning, we proposed a
mechanism to detect phone scams and deceptive ads. Our
system is a cloud-assisted host-based detection. One may
see that once the user device (e.g., smartphone) is reached
by a unknown people or goes to an URL, the encoded or
hashed information about the browsing (e.g., URL) will be
sent to the cloud service implemented with our detection core.
Afterwards, the cloud will return the detection result to the
user device. Our mechanism is featured by both the client-
side real-time lightweight defense and the cloud-side deep
inspection. Such a hybrid detection mechanism aims to detect
the deceptive ads with signiﬁcantly low false positives and
false negatives. As the ﬁrst step toward the detection, our
system is implemented by Python language and integrated
with some open source projects such as asynchronous and
customizable analysis platform: IRMA3, Elasticsearch which
provides the most powerful full-text search capabilities4 and
Kibana which easily visualizes data5. We also provide a simple
RESTful API using JSON formatted report over HTTP.

Here, the unknown calling data refers to the calling data
contributed only by the strangers. In our system implemen-
tation, for detecting phone scams, ﬁrst we collect a huge set
of unknown calling data from users feedback, based on our
user-base and back-end system. We collected 1500 thousands
of unknown calling data in July, 2016 from countries such as
Brasil, Italy, UK and France etc., and then captured the feature
as the input to our system to learn the difference between
benign and deceptive phone numbers.

More speciﬁcally, as shown in Fig. 5, the user received the
call from the strangers. Our App on the users cellphone sent
a feedback to the back-end system (step 1). On the way to the
back-end system, an online database with regional data was
checked. In our mechanism, the aim of doing so is to trigger
the region-speciﬁc and country-speciﬁc phone scams, with the
observation that certain phone scams may check where the
user is from and shows different behavior (step 2). And then,
our mechanism extracted the time length of ringing, speaking
time, user action, hanging out, picking up, timeout, blacklist,

1https://www.youtube.com/watch?v=qxqvtKrrVBA
2https://www.youtube.com/watch?v=16nvbkUdX6k
3http://irma.quarkslab.com
4https://www.elastic.co
5https://www.elastic.co/products/kibana

Fig. 5. The architecture of our phone scams detection system.

Fig. 6. The architecture of our Ads detection system.

and calling time etc. from the phone numbers records as
features and then feed to our DNN system (step 3). Afterwards,
we obtain the classiﬁcation results from DNN (step 4, via
Googles TensorFlow [11]).

More precisely, all of the phone numbers records’ feature
from the unknown calling data were input to neural network
and the layers of neural network learned the best results. The
neural network ran many times until the overall error rate
reached the minimum. Thus, in the records of phone number,
deep learning helped us ﬁnd the results for the classiﬁcation.
After that, both the cloud-side system and client-side defense
were updated (step 5). A brief description of our model is
shown as followings:

1) the activation function is relu.
2) for the ﬁrst layer, the number of input neurons is 9 while

the number of output neurons is 14.

3) for the second layer, the number of input neurons is 14

while the number of output neurons is 9.

4) for the third layer, the number of input neurons is 9

while the number of output neurons is 5.
layer is the output

5) the last

layer with the sigmoid

activation function.

On the other hand, for detecting deceptive ads, ﬁrst we
collected a huge number of ads from the Internet, based on
our user base and back-end system. We collected more than
150 thousand advertising URLs daily, and then captured the
advertising ﬁgures and texts as the input to our system to
learn the difference between benign and deceptive ads. More
speciﬁcally, as shown in Fig. 6, the user browsed the web-
pages. Our App on the users cellphone sent a feedback to the
back-end system (step 1). On the way to the back-end system,
an online database with regional data were checked. In our
mechanism, we deployed virtual private servers (VPSs) around
the world. The aim of doing so is to trigger the region-speciﬁc
and country-speciﬁc deceptive ads, with the observation that
certain deceptive ads may check where the clicking user is
from and shows different contents (step 2). After the VPS,

Fig. 7. Our deceptive ads analysis report.

our mechanism extracted the ﬁgures, texts, and HTML source
ﬁle from the ads for deep learning (step 3). Afterwards, we
obtained the classiﬁcation results from deep learning (re-train
and ﬁne-tune Google’s Inception-V3 model6 via TensorFlow
[11]). More precisely, all of images are input to neural network
and the layers of neural network may automatically generate
the best features,
instead of manually extracting features.
The neural network ran many times until the overall error
rate reached the minimum (step 4). In the structure of our
mechanism, one can see that more convolutional layers implied
more capabilities of recognizing the object
in an abstract
sense. Thus, in the context of ads, deep learning helps us ﬁnd
the features for the classiﬁcation. After that, both the cloud-
side system and client-side defense were updated (step 5). In
addition, we also offered RESTful API for checking whether
deceptive ads cause economic impacts on their business that

6. It is trained for the ImageNet Large Visual Recognition Challenge using
the data from 2012. AlexNet achieved by setting a top-5 error rate of 15.3% on
the 2012 validation data set; BN-Inception-v2 achieved 6.66%; Inception-v3
reaches 3.46%

Step 1Step 2Region BehaviorStep 5StartStep 3Step 4User DeviceUser FeedbackRepositoryPhone NumberRepositoryPhone CallBehavior MiningDeepNeural Network, DNNStep 1Region DataConvolutional Neural Network, CNNRecurrent Neural Network, RNNStartStep 2User DeviceWWWUser FeedbackRepositoryWWWWWWScreenshot / TextsStep 3Step 5Step 4showed how destination URL, original URL, screenshot and
date and time helped in detection, as shown in Fig. 7.

IV. EVALUATION RESULTS

Fig. 8. The average of collection of phone numbers in 1 day.

Fig. 9. The average of collection of phone numbers in 1 day.

Fig. 10. Our mini experiment results.

Our featured products have reached 38 billion installations
globally with 623 million monthly active users each month

Fig. 11. Our experiment results.

by December, 2016. For phone scams, our core product has
80 million daily active users, and 23 million daily active
users have received phone call from strangers including 10%
phone scams. Fig. 8 and Fig. 9 show the average of collec-
tion of phone numbers in one day. We found that during
the so-called malicious calling such as
the working time,
telemarketing, scams and insurance could be a
harassing,
huge portion. We also found that the normal calling from,
for example, express, service center, occupy only less than
10%. According to the data above, we created and adapted
our DNN model. Fig. 10 shows our mini experiment results,
which are analyzed by Logistic Regression, Decision Tree,
Random Forest and SVM algorithms with DNN. We found
that accuracy and precision of DNN are more stable. Thus we
included more countries in our experiment. According to our
experiment, we can perceive except for the arithmetic mean of
deep neural network which has reached 85%. The rests of the
Logistic Regression, Decision Tree, Random Forest algorithm
only reached between 70% and 80%, and SVM only reached
75% (shown as Fig. 11). Moreover, the standard deviation is
applied to evaluate the stability of each learning method. Our
DNN model has a low standard deviation which indicated
that the data points tend to be close to the mean. With the
consideration of long term defense and system maintenance of
phone scams and the consideration of the detection accuracy
of deep neural network, we are pretty sure that the adapted
deep learning approach is better than conventional machine
learning approaches.

Usually, we can collect 150 thousand URLs including
the advertising screenshots and texts per day. According to
the data above, we integrated and adapted Googles deep
learning model that has previously trained Inception-v3 for
screenshots via TensorFlow. At the same time, due to Android
Fragmentation, we found that deceptive ads also has the same
Location Based Service (LBS) function of benign advertising.
Therefore, we focused on TOP 10 mobile brands market
share and further discussed the difference between feature
extractions, as shown in Fig. 12. For instance, Samsung has
huge amount of users in the United State, and Huawei also

0.00%10.00%20.00%30.00%40.00%50.00%60.00%70.00%80.00%8910111213141516171819HarassingTelemarketingScamsInsurance0.00%1.00%2.00%3.00%4.00%5.00%6.00%7.00%8910111213141516171819ExpressService Center75.927597.09583.2384.25583.622589.90582.067590.267583.8388.250102030405060708090100LF‐AccuracyLF‐PrecisionDT‐AccuracyDT‐PrecisionRF‐AccuracyRF‐PrecisionSVM‐AccuracySVM‐PrecisionDNN‐AccuracyDNN‐PrecisionTEST‐01TEST‐02TEST‐03Average79.98887.78581.57262.95882.18970.76879.35573.31584.05175.1770102030405060708090100LF‐AccuracyLF‐PrecisionDT‐AccuracyDT‐PrecisionRF‐AccuracyRF‐PrecisionSVM‐AccuracySVM‐PrecisionDNN‐AccuracyDNN‐PrecisionTWCNUSRUBRINAveragevery well to detect phone scams and deceptive ads. Also,
we have published the system to our core product to provide
convenient usage scenarios for end-users or enterprises. The
future work is the improvement of our deep learning model
and to reduce the complex task and to train a high performance
system for the phone scams and deceptive ads from a huge
amount of computation burden.

Fig. 12. TOP 10 mobile brands’ MarketShare.

Fig. 13. The experiment result.

has a lot of users in the Germany and Mexico which cannot
be ignored. Fig. 13 shows our experiment results, which
are analyzed by Logistic Regression, Decision Tree, Random
Forest and SVM algorithms with Inception-V3. According to
our experiment, we can perceive except for the arithmetic
mean of Inception-v3 that has reached 90%. The rests of the
Logistic Regression, Decision Tree, Random Forest algorithm
only reached between 70% and 85%, and SVM only reached
50%. Moreover, the standard deviation is applied to evaluate
the stability of each learning method. The Inception-V3 had a
low standard deviation which indicated the data points tend to
be close to the mean. With the consideration of long term
defense and system maintenance of deceptive ads and the
consideration of the detection accuracy of Inception-V3, we
are pretty sure that the adapted deep learning approach is better
than conventional machine learning approaches. Furthermore,
our ﬁeld test shows that Kaspersky, AVG, Avast, ESET and
Chrome failed to detect the deceptive ads.

V. CONCLUSION AND FUTURE WORK

The proposed proof-of-concept system was tested in our
internal environment. Fig. 14 shows the analyzed result, re-
spectively. The results show that our detection system works

Fig. 14. The analyzed results of our proof-of-concept system.

ACKNOWLEDGMENT
Many thanks to the Leopard Mobile, Cheetah Mobile and
Security Master (a.k.a CM Security, an Android application)
for their valuable dataset.

REFERENCES

[1] Z. Li, K. Zhang, Y. Xie, F. Yu, and X. Wang. Knowing your enemy: un-
derstanding and detecting malicious web Advertising. ACM Conference
on Computer and Communications Security (CCS), 2012.

[2] The Federal Trade Commission (FTC). (2014). Phone Scams. Available:

https://www.consumer.ftc.gov/articles/0076-phone-scams

[3] LeCun, Y., Bengio, Y. and Hinton, G. E., ”Deep Learning,” Nature, Vol.

521, pp 436-444, 2015.

[4] D. Silver, A. Huang, C. J. Maddison, A. Guez, L. Sifre, G. van den
Driessche, et al., ”Mastering the game of Go with deep neural networks
and tree search,” Nature, vol. 529, pp. 484-489, 2016.

[5] Krizhevsky, A., et al. (2012). ImageNet Classiﬁcation with Deep Convo-
lutional Neural Networks. Advances in Neural Information Processing
Systems 25 (NIPS 2012), Harrahs and Harveys, Lake Tahoe.

[6] K. Simonyan, A. Z. (2015). Very Deep Convolutional Networks for
Large-Scale Image Recognition. International Conference on Learning
Representations 2015 (ICLR2015), San Diego, CA.

[7] C. Szegedy, V. Vanhoucke, S. Ioffe, J. Shlens, and Z. Wojna.,”Rethinking
the Inception Architecture for Computer Vision.” in Proc. of the IEEE
Conference on Computer Vision and Pattern Recognition (CVPR), WA,
USA, June 2016.

[8] H.-D. Huang, C.-M. Yu, ”Poster: Adaptive Data-Driven and Region-
Aware Detection for Deceptive Advertising”, IEEE Symposium on
Security and Privacy 2016, San Jose, CA, May 23-25, 2016.

[9] Marchal, S., et al. (2014). ”PhishStorm: Detecting Phishing With
Streaming Analytics.” IEEE Transactions on Network and Service
Management 11(4): 458-471.

[10] Huang, D., et al. (2014). Malicious URL detection by dynamically
mining patterns without pre-deﬁned elements. World Wide Web. Seoul,
Korea. 17: 1375-1394.

[11] Google. (2015). TensorFlow is an Open Source Software Library for

Machine Intelligence. Available: https://www.tensorﬂow.org

0%10%20%30%40%50%60%70%80%90%100%USBRDETRMXFRITTHKRINGBTWPHESIDRUJPMYSGAUCNSamsungLenovo+MotorolaHuaweiLGESonyTCLZTEhtcASUSacer90.56682.5505776.204281.239971.527484.97118885.161477.4039250.7821601020304050607080901000102030405060708090100Deep Learning-PrecisionLogistic Regression-AccuracyLogistic Regression-PrecisionDecision Tree-AccuracyDecision Tree-PrecisionRandom Forest-AccuracyRandom Forest-PrecisionSVM-AccuracySVM-PrecisionTest001Test002Test003Test004Test005Test006Test007Test008Test009Test010Average