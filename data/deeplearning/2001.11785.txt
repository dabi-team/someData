0
2
0
2

b
e
F
3

]

A
M

.
s
c
[

2
v
5
8
7
1
1
.
1
0
0
2
:
v
i
X
r
a

A Deep Reinforcement Learning Approach to Concurrent Bilateral Negotiation
Pallavi Bagga1 , Nicola Paoletti2 , Bedour Alrayes3 and Kostas Stathis4
1,2,4Royal Holloway, University of London
3King Saud University, Saudi Arabia
{pallavi.bagga.20171, nicola.paoletti2, kostas.stathis4}@rhul.ac.uk, balrayes@ksu.edu.sa3

Abstract

We present a novel negotiation model that allows
an agent to learn how to negotiate during con-
current bilateral negotiations in unknown and dy-
namic e-markets. The agent uses an actor-critic
architecture with model-free reinforcement learn-
ing to learn a strategy expressed as a deep neu-
ral network. We pre-train the strategy by supervi-
sion from synthetic market data, thereby decreasing
the exploration time required for learning during
negotiation. As a result, we can build automated
agents for concurrent negotiations that can adapt
to different e-market settings without the need to
be pre-programmed. Our experimental evaluation
shows that our deep reinforcement learning based
agents outperform two existing well-known negoti-
ation strategies in one-to-many concurrent bilateral
negotiations for a range of e-market settings.

1 Introduction
We are concerned with the problem of learning a strategy for
a buyer agent to engage in concurrent bilateral negotiations
with unknown seller agents in open and dynamic e-markets
such as E-bay1. Previous work in concurrent bilateral ne-
gotiation has mainly focused on heuristic strategies [Nguyen
and Jennings, 2004; Mansour and Kowalczyk, 2014; An et
al., 2006], some of which adapt to changes in the environ-
ment [Williams et al., 2012]. Different bilateral negotia-
tions are managed in such strategies through a coordinator
agent [Rahwan et al., 2002] or by coordinating multiple di-
alogues internally [Alrayes and Stathis, 2013], but do not
support agent learning which is our main focus. Other ap-
proaches use agent learning based on Genetic Algorithms
(GA) [Oliver, 1996; Zou et al., 2014], but they require a
huge number of trials before obtaining a good strategy, which
makes them infeasible for online negotiation settings. Rein-
forcement Learning (RL)-based negotiation approaches typ-
ically employ Q-learning [Papangelis and Georgila, 2015;
Bakker et al., 2019; Rodriguez-Fernandez et al., 2019] which
does not support continuous actions. This is an important lim-
itation in our setting because we want the agent to learn how
much to concede e.g. on the price of an item for sale, which
in turn naturally leads to a continuous action space. Conse-
quently, the design of autonomous agents capable of learning

1https://www.ebay.com/

a strategy from concurrent negotiations with other agents is
still an important open problem.

We propose, to the best of our knowledge, the ﬁrst Deep
Reinforcement Learning (DRL) approach for one-to-many
concurrent bilateral negotiations in open, dynamic and un-
known e-market settings.
In particular, we deﬁne a novel
DRL-inspired agent model called ANEGMA, which allows
the buyer to develop an adaptive strategy to effectively use
against its opponents (which use ﬁxed-but-unknown strate-
gies) during concurrent negotiations in an environment with
incomplete information. We choose deep neural networks as
they provide a rich class of strategy functions to capture the
complex decisions-making behind negotiation.

Since RL approaches need a long time to ﬁnd an optimal
policy from scratch we pre-train our deep negotiation strate-
gies using supervised learning (SL) from a set of training ex-
amples. To overcome the lack of real-world negotiation data
for the initial training, we generate synthetic datasets using
the simulation environment in [Alrayes et al., 2016] and two
well-known strategies for concurrent bilateral negotiation de-
scribed in [Alrayes et al., 2018] and [Williams et al., 2012]
respectively.

With this work, we empirically demonstrate three impor-
tant beneﬁts of our deep learning framework for automated
negotiations: 1) existing negotiation strategies can be accu-
rately approximated using neural networks; 2) evolving a pre-
trained strategy using DRL with additional negotiation expe-
rience yields strategies that even outperform the teachers, i.e.,
the strategies used for supervision; 3) buyer strategies trained
assuming a particular seller strategy quickly adapt via DRL
to different (and unknown) sellers’ behaviours.

In summary, our contribution is threefold: we propose a
novel agent model for one-to-many concurrent bilateral nego-
tiations based on DRL and SL; we extend the existing simu-
lation environment [Alrayes et al., 2016] to generate data and
perform experiments that support agent learning for negotia-
tion; and we run an extensive experiments showing that our
approach outperforms the existing strategies and produces
adaptable agents that can transfer to a range of e-market set-
tings.

2 Related work
The existing body of automated negotiations differs from ours
in one or more of the following ways:
the application do-
main, the focus (or goal of the research), and the way and
what machine learning approach has been used to improve
the autonomous decision making performance of an agent.

 
 
 
 
 
 
The work in [Lau et al., 2006] uses GAs to derive a heuris-
tic search over a set of potential solutions in order to ﬁnd the
mutually acceptable offers. Also, in [Choudhary and Bharad-
waj, 2018], the authors propose a GA-based learning tech-
nique for multi-agent negotiation but with regard to making
recommendations to a group of persons based on their pref-
erences. Since we are dealing with an environment with lim-
ited information, another relevant consideration is related to
RL. In [Bakker et al., 2019], the authors study a modular
RL based BOA (Bidding strategy, Opponent model and Ac-
ceptance condition) framework which is an extension of the
work done in [Baarslag et al., 2016]. This framework imple-
ments an agent that uses tabular Q-learning to learn the bid-
ding strategy by discretizing the continuous state/action space
(not an optimal solution for large state/action spaces as it may
lead to curse of dimensionality and cause the loss of relevant
information about the state/action domain structure too). Q-
learning is also used in [Rodriguez-Fernandez et al., 2019]
to provide a decision support system for the Energy market.
In addition, the work in [Sunder et al., 2018] uses a variable
reward function for an RL approach called REINFORCE to
model the pro-social or selﬁsh behaviour of agents. Further-
more, the work of [Hindriks and Tykhonov, 2008; Zeng and
Sycara, 1998] uses Bayesian Learning to learn the opponent
preferences instead of the negotiation strategy.

Previous work also consider the combination of differ-
ent learning approaches to determine an optimal negotiation
strategy for an agent. In [Zou et al., 2014], the authors pro-
pose the fusion of evolutionary algorithms (EAs) and RL that
outperforms classic EAs; here the replicator dynamics is used
with a GA to adjust the probabilities of strategies.
In this
work, the experiments have shown that different weights as-
signed to the historical and current payoffs (due to change
in environment dynamics) while learning impact both the
negotiation performance and the learning to a great extent.
Another relevant work is [Lewis et al., 2017], which com-
bines SL (Recurrent Neural Network (RNN)) and RL (RE-
INFORCE) to train on human dialogues. We also combine
SL and RL but with the main focus on autonomy of negotia-
tions rather than Natural Language Processing (NLP). Also,
we differ with respect to the combination of ML approaches
(i.e. Artiﬁcial Neural Network (ANN) for SL and Actor-
Critic model called DDPG [Lillicrap et al., 2017] for RL),
which will be explained in subsequent sections.

In addition and independently of the approach, numerous
works in the domain of bilateral negotiation rely on the Al-
ternating Offers protocol [Rubinstein, 1982] as the negotia-
tion mechanism, which, despite its simplicity does not cap-
ture many realistic bargaining scenarios.

3 Proposed Work
In this section, we formulate the negotiation environment
and introduce our agent negotiation model called ANEGMA
(Adaptive NEGotiation model for e-MArkets).

3.1 Negotiation Environment
We consider e-marketplaces like E-bay where the competition
is visible, i.e. a buyer can observe the number of competitors

that are dealing with the same resource from the same seller.
We assume that the environment consists of a single e-market
m with P agents, with a non-empty set of buyers Bm and a
non-empty set of sellers Sm – these sets need not be mutually
exclusive. For a buyer b ∈ Bm and resource r, we denote
with St
b,r ⊆ Sm the set of sellers from market m which, at
time point t, negotiate with b for a resource r (over a range
of issues I). The buyer b uses |St
b,r| negotiation threads, in
order to negotiate concurrently with each seller ∈ St
b,r. We
assume that no agent can be both buyer and seller for the same
resource at the same time, that is, ∀b, r, t. s ∈ St
b,r =⇒
St
b,r = {b(cid:48) (cid:54)= b ∈ Bm | St
s,r = ∅. C t
b(cid:48),r (cid:54)= ∅} is the set of
competitors of b, i.e. those agents negotiating with the same
sellers and for the same resource r as that of b.

As we are interested in practical settings, we adopt the ne-
gotiation protocol of [Alrayes et al., 2018], since it supports
concurrent bilateral negotiations. This protocol assumes an
open e-market environment, i.e., where agents can enter or
leave the negotiation at their own will. A buyer b always
starts the negotiation by making an offer whose start time
is tstart . Any negotiation is for a resource r, since we in-
dex the negotiation thread with the name of the seller s and
the resource r, and can last for up to time tb, the maxi-
mum time b can negotiate for. The deadline for b is, thus,
tend = tstart + tb, which for simplicity we assume for all
the resources being negotiated. Information about the dead-
line tb, Initial Price IP b and Reservation Price RPb is pri-
vate to each b ∈ Bm. Each seller s also has its own Ini-
tial Price IP s, Reservation Price RP s and maximum negoti-
ation duration parameter ts (which are not visible by other
agents). The protocol is turn-based and allows agents to
take actions from a pool Actions at each negotiation state
(from S1 to S5, see [Alrayes et al., 2018]) where Actions =
reserve, cancel , conﬁrm,
{ oﬀer (x ),
accept, exit }.

reqToReserve,

3.2 ANEGMA Components
Our proposed agent negotiation model supports learning dur-
ing concurrent bilateral negotiations with unknown oppo-
nents in dynamic and complex e-marketplaces. In this model,
we use a centralized approach in which the coordination is
done internally to the agent via multi-threading synchroniza-
tion. This approach minimizes the agent communication
overhead and thus, improve the run-time performance. The
different components of the proposed model are shown in
Figure 1 and explained below.

Physical Capabilities:
These are the sensors and actuators of the agent that enable
it to access an e-marketplace. More speciﬁcally, they allow a
buyer b to perceive the current (external) state of the environ-
ment st and represent that state locally in the form of internal
attributes as shown in Table 1. Some of these attributes (N Sr,
N Cr) are perceived by the agent using its sensors, some of
them (IPb, RPb, tend ) are stored locally in its knowledge
base and some of the them (Sneg , Xbest , Tleft ) are obtained
while interacting with other seller agents during a negotiation.
At time t, the internal agent representation of the environment
is st, which is used by the agent to decide what action at to

Table 1: Agent’s State Attributes

Attribute Description

N Sr

N Cr

Sneg

Xbest
Tleft

IPb

RPb

b,r|).

b,r|).

Number of sellers that b is concurrently deal-
ing for resource r at time t (|St
Number of buyer agents competing with b
for resource r at time t (|C t
Current state of the negotiation protocol (S1
to S5 [Alrayes et al., 2018])).
Best offer made by either b or s in Sneg .
Time left for b to reach tend after the last
action of s.
Minimum price which b can offer at the start
of the negotiation.
Maximum price which b can offer to s.

N ) past negotiation experiences fetched from the database.
Also, the learning process of b is retrospective since it de-
pends on the feedback or scalar reward rt (and r(cid:48)
t) obtained
from the e-market environment by performing action at at
state st which is calculated using (3) and (4) to evaluate the
discrete and continuous action made by Decide component at
time t respectively. Our design of reward functions acceler-
ate agent learning by allowing b to receive rewards after every
action it performs in the environment instead of at the end of
the negotiation.

rt (during classiﬁcation) =






Ub(x, t),
−1,
r(cid:48)
t
0,

if t ≤ tend , Agreement
if t ≤ tend , No Deal
if at = Counter-offer
otherwise

(3)

r(cid:48)
t (during regression) =






Ub(x, t),
−1,
0,

if t ≤ tend , x ≤ ∀i ∈ Ot
if t ≤ tend , x > ∀i ∈ Ot
otherwise

(4)

In (3) and (4), Ub(x, t) refers to the utility value of offer x
(generated using (2)) at time t and is calculated using Initial
Price (IPb), Reservation Price (RPb), agreement offer (x) and
temporal discount factor (dt ∈ [0, 1]) [Williams et al., 2012]
as deﬁned in (5) . The parameter dt encourages b to negotiate
without delay. The reward function r(cid:48)
t in (4) helps b learn
that it should not offer greater than what active sellers have
already offered it. Ot refers to a list of preferred offers of
∀s ∈ St

b,r at time t.

Ub(x, t) =

(cid:18) RPb − x
RPb − IPb

(cid:19)

(cid:18) t
tend

.

(cid:19)dt

(5)

In our experiments, the value of dt is set to 0.6. Higher the

dt value, higher is the penalty due to delay.

4 Materials and Methods
In this section, we describe the data set collected for training
the SL model (used for pre-training the ANEGMA agent), var-
ious performance measures (used for evaluating the negotia-
tion process) and ML models (used for the learning process).

Figure 1: The Architecture of ANEGMA

execute using its actuators. Action execution then changes
the state of the environment to st+1.

Learning Capabilities:
The foundation of our model is a component providing learn-
ing capabilities similar to those in the Actor-Critic architec-
ture as in [Lillicrap et al., 2017].
It consists of three sub-
components: Negotiation Experience, Decide and Evaluate.
Negotiation Experience stores historical information about
previous negotiation experiences which involve the interac-
tions of an agent with other agents in the market. Experience
elements are of the form (cid:104)st, at, rt, st+1(cid:105), where st is the state
of the e-market environment, at is action performed by b at
st, rt is scalar reward or feedback received from the environ-
ment and st+1 is new e-market state after executing at.

Decide refers to a negotiation strategy which helps b to
choose an optimal action at among a set of actions (Actions)
at a particular state st. In particular, it consists of two differ-
ent functions fc and fr. fc take state st as an input and re-
turns a discrete action among counter-offer, accept, conﬁrm,
reqToReserve and exit, see (1). When fc decides to perform
a counter-offer action, fr is used to compute, given an in-
put state st, the value of the counter-offer, see (2). From a
machine learning perspective, deriving fc corresponds to a
classiﬁcation problem, deriving fr to a regression problem.

fc(st) = at, at ∈ Actions

(1)

fr(st) = x, x ∈ [IPb, RPb]
(2)
Evaluate refers to a critic which helps b learn and evolve
the negotiation strategy for unknown and dynamic environ-
ments. More speciﬁcally, it is a function of random K (K <

4.1 Data set collection
In order to collect the data set to train ANEGMA agent using
an SL model, we have used a simulation environment [Al-
rayes et al., 2016] that supports concurrent negotiations be-
tween buyers and sellers. The buyers use two different strate-
gies presented in [Alrayes et al., 2018] and [Williams et
al., 2012]; whereas the sellers use the strategies described
in [Faratin et al., 1998]. We could have also collected the
negotiation examples for training using other buyer strategies
for concurrent negotiation which can deal with same envi-
ronment as ours, or any real-world market data; however, to
the best of our knowledge none of these had readily avail-
able implementations. We have selected the input features
for the dataset manually, and this set of features correspond
to the agent’s state attributes in Table 1. To avoid choosing
overlapping features, we have then applied the Pearson Cor-
relation coefﬁcient [Lee Rodgers and Nicewander, 1988] and
ensured no correlation (with all correlation coefﬁcients be-
tween −0.16 and 0.16; most are closer to 0) between the se-
lected features.

4.2 Performance Evaluation Measures
To successfully evaluate the performance of ANEGMA and
compare it with other negotiation approaches, it is necessary
to identify the appropriate performance metrics. For our ex-
periments, we have used the following widely adopted met-
rics [Williams et al., 2012; Faratin et al., 1998; Nguyen and
Jennings, 2004; Alrayes et al., 2018]: Average utility rate
(Uavg ), Average negotiation time (Tavg ) and Percentage of
successful negotiations (S%), which are described in Table 2.
Our main motive behind calculating the Uavg is to calculate
the agent proﬁt over only successful negotiations, hence we
exclude the unsuccessful ones in this metric. We capture the
(un)successful negotiations in a separate metric called S%.

4.3 Methodology
During our experiments, the buyer negotiates with ﬁxed-but-
unknown seller strategies in an e-market. Also, the com-
petitor buyers use only a single ﬁxed-but-unknown strategy
which can be learnt by the buyers after some simulation runs.
Hence, we consider our negotiation environment as fully-
observable. Following this, for our dynamic (agents leave and
enter the market at any time) and episodic (the negotiation
terminates at some point) environment, we use a model-free,
off-policy RL approach which generates a deterministic pol-
icy based on the policy gradient method to support continu-
ous control. More speciﬁcally, we use the Deep Deterministic
Policy Gradient algorithm (DDPG), which is an actor-critic
RL approach and generates a deterministic action selection
policy for the buyer (see [Lillicrap et al., 2017] for more de-
tails, due to lack of space). We consider a model-free RL
approach because our buyer is more concerned with deter-
mining what action to take given a particular state rather than
predicting a new state of the environment. This is because
the strategies of sellers and competitor buyers are unknown
in the environment. On the other hand, we consider the off-
policy approach for efﬁcient and independent exploration of
continuous action spaces. Furthermore, we, instead of initial-
izing the RL policy randomly, use a policy generated by an

Artiﬁcial Neural Network (ANN) [Goodfellow et al., 2016]
due to its compatibility with DRL in order to speed up and
reduce the cost of the RL process. To reduce the over-ﬁtting
and generalization errors, we also apply regularization tech-
niques (dropout) during the training of the neural network.

5 Experimental Setup and Results
We use ANEGMA to build autonomous buyers that negoti-
ate against unknown opponents in different e-market settings.
Our experiments make the following hypotheses.

Hypothesis A: The Market Density (MD), the Market ra-
tio or Demand/Supply Ratio (MR), the Zone of Agreement
(ZoA) and the Buyer’s Deadline (tend ) have a considerable
effect on the success of negotiations. Here,

• MD is the total agents in the e-market at any given time
dealing with the same resource as that of our buyer.
• MR is the ratio of the total number of buyers over the

sellers in the e-market.

• ZoA refers to the intersection between the price ranges

of buyers and sellers for them to agree.

In practice, buyers have no control over these parameters ex-
cept the deadline, which can be decided by the user or con-
strained by a higher-level goal the buyer is trying to achieve.
Hypothesis B: The ANEGMA buyer outperforms SL, CO-
NAN, and Williams’ negotiation strategies in terms of Uavg ,
Tavg and S% in a range of e-market settings.

Hypothesis C: An ANEGMA buyer if trained against a spe-
ciﬁc seller strategy, still performs well against other ﬁxed-
but-unknown seller strategies. This shows that the ANEGMA
agent behaviour is adaptive in that the agent transfers knowl-
edge from previous experience to unknown e-market settings.

5.1 Design of the Experiments
To carry out our experiments, we have extended the simula-
tion environment RECON [Alrayes et al., 2016] with a new
online learning component for ANEGMA.

Seller Strategies
For the purpose of training our SL model and conduct-
ing large-scale quantitative evaluations, we have used two
groups of ﬁxed seller strategies developed by Faratin et
[1998]: Time-Dependent (Linear, Conceder and Boul-
al.
ware) and Behaviour-Dependent (Relative tit-for-tat, Random
Absolute tit-for-tat and Averaged tit-for-tat). Each seller’s
deadline is assumed to be same as that of buyer but private
to the seller. Other parameters such as IP s and RP s are de-
termined by the ZoA parameter, as shown in Table 3.

Simulation Parameters
We assume that the buyer negotiates with multiple sellers
concurrently to buy a second-hand laptop (r = Laptop)
based only on a single issue Price (I = {P rice}). We
stress that the single-issue assumption is realistic in sev-
eral real-world e-markets. The simulated market allows the
agents to enter and leave the market at their own will. The
maximum number of agents allowed in the market, the de-
mand/supply ratio, the buyer’s deadline and the ZoAs are
simulation-dependent.

Table 2: Performance Evaluation Metrics

Metric Deﬁnition

Uavg
Tavg

S%

Sum of all the utilities of the buyer averaged over the successful negotiations.
Total time taken by the buyer (in milliseconds) averaged over all successful negotiations to reach the
agreement.
Proportion of total negotiations in which the buyer reaches an agreement successfully with one of the
concurrent sellers.

Ideal Value

High(1.0)
Low(≈1000ms)

High(100%)

Table 3: Simulation Parameter Values

Values

IPb
[300 − 350]
RPb
[500 − 550]
100%[500 − 550], 60%[580 − 630], 10%[680 − 730]
IPs
RPs 100%[300 − 350], 60%[380 − 430], 10%[480 − 530]
MD H{30, 40, 50}, A{18, 23, 28}, L{8, 10, 12}
MR H{10:1, 1:1, 1:10}, A{5:1, 1:1, 1:5}, L{2:1, 1:1, 1:2}
tend Lg[151s –210s], A[91s –150s], Sh[30s –90s]
ZoA H(100%), A(60%), L(10%)

As in [Alrayes et al., 2018], three qualitative values are
considered for each parameter during simulations, e.g., High
(H), Average (A) and Low (L) for MD or Long (Lg), Aver-
age (A) and Short (Sh) for tend . Parameters are reported in
Table 3. The user can select one of such qualitative values for
each parameter. Each qualitative value corresponds to a set
of three quantitative values, of which only one is chosen at
random for each each simulation (e.g., setting H for param-
eter MD corresponds to choosing at random among 30, 40,
and 50). The only exception is parameter ZoA, which maps
to a range of uniformly distributed quantitative values for the
seller’s initial price IP s and reservation price RP s (e.g., se-
lecting A for ZoA leads to a value of IP s uniformly sampled
in the interval [580, 630]). Therefore, the total number of sim-
ulation settings is 81, as we consider 3 possible settings for
each of MD, MR, tend , and ZoA (see Table 3).

5.2 Empirical Evaluation

We evaluate hypotheses A, B and C as described at the begin-
ning of this section.

Hypothesis A (MD, MR, ZoA and tend have signiﬁcant
impact on negotiations)
We experimented with 81 different e-market settings, by
considering,
for each setting, both time-dependent and
behaviour-dependent seller strategies over 500 simulations
using the CONAN buyer strategy. As shown in Figure 2,
these experiments suggest that MD and ZoA have a consider-
able effect on S%. From our observations, when MD is low,
the agents reach more negotiation agreements. Also, there
is not much difference in the agreement rate for 60% ZoA
and 100% ZoA when MD is low. The very low number of
successful negotiations for 10% ZoA is not unexpected since
only a minority of agents is willing to concede more in such a
small ZoA. On the other hand, MR and tend have, according

Figure 2: Effect of Market Density (MD) and Zone of Agree-
ment (ZoA) on Proportion of Successful Negotiations (S%) using
time-dependent strategies (left) and behaviour-dependent strategies
(right).

to our experiments, a comparably minor impact on the nego-
tiation success (only some effect of MR on S% is observed
under behaviour-dependent strategies and low MD as shown
in Figure 3). These results support our hypothesis.

Hypothesis B (ANEGMA outperforms SL and CONAN)
We performed simulations for our ANEGMA agent in low
MD, 60% and 100% ZoA, high MR and a long tend be-
cause these settings yielded the best performance in terms of
S% in our experiments for Hypothesis A. We have used these
settings against Conceder Time Dependent and Relative Tit
for Tat Behaviour Dependent seller strategies. Firstly, we col-
lected training data for our SL approach (ANN) using two dis-
tinct strategies for supervision, viz. CONAN [Alrayes et al.,
2018] and Williams [Williams et al., 2012]. Both were run
for 500 simulations and with the same settings. Table 4 com-
pares the performances of CONAN’s and Williams’ models.
CONAN outperforms Williams’ strategy in these settings.

Then, the resulting trained ANN models – called ANN-C
and ANN-W respectively – were used as the initial strate-
gies in our DRL approach (based on DDPG), where strategies
are evolved using negotiation experience from additional 500
simulations. In the remainder, we will abbreviate this model
by ANEGMA(SL+RL).

Finally, we use test data from 100 simulations to compare
the performance of such derived ANEGMA(SL+RL) buyers
against CONAN, Williams’ model, ANN-C, ANN-W, and the
so-called ANEGMA(RL) model, which uses DDPG but ini-

Table 4: Performance comparison of CONAN and Williams’ model. Best results are in bold.

Metric CONAN

Williams’

Conceder Time Dependent Seller Strategy

60% ZoA
0.27 ± 0.03
172942.78 ± 15177.77
80.76

0.25 ± 0.03
175198.93 ± 14193.23
80.69

Uavg
Tavg
S%

Uavg
Tavg
S%

60% ZoA
0.18 ± 0.08
177091.09 ± 15304.90
78.21

100% ZoA
0.25 ± 0.07
174611.43 ± 15139.52
79.08
Relative Tit For Tat Behaviour Seller Strategy
0.24 ± 0.04
179529.47 ± 14651.15
79.90

0.22 ± 0.05
176334.65 ± 14683.03
73.00

100% ZoA
0.17 ± 0.04
174468.311 ± 15365.11
78.05

0.21 ± 0.06
176468.31 ± 15365.11
73.21

Table 5: Performance comparison of ANN VS ANEGMA(SL+RL) VS ANEGMA(RL) when ZoA is 60%. Best results are in bold.
ANN-C and ANN-W correspond to ANN trained using data set collected from CONAN and Williams’ approach respectively, whereas
ANEGMA(SL+RL)-C and ANEGMA(SL+RL)-W correspond to ANEGMA(DDPG) initialized with ANN-C and ANN-W respectively.

Metric ANN

ANEGMA(SL+RL)

ANEGMA(RL)

Trained and Tested on Conceder Time Dependent Seller Strategy

ANN-C
0.27 ± 0.04
173529.47 ± 14651.15
80.80

ANN-W
0.21 ± 0.08
171096.09 ± 14584.90
80.34

ANEGMA(SL+RL)-C
0.29 ± 0.04
67750.62± 37628.57
87.12

ANEGMA(SL+RL)-W
0.21 ± 0.04
132477.71 ± 26601.48
81.72

Trained and Tested on Relative Tit for Tat Behaviour Dependent Seller Strategy

ANN-C
0.26 ± 0.03
176018.69 ± 14380.28
81.86

ANN-W
0.23 ± 0.05
169334.65 ± 12389.03
74.80

ANEGMA(SL+RL)-C
0.29 ± 0.03
36331.34 ± 70247.33
86.03

ANEGMA(SL+RL)-W
0.23 ± 0.14
41225.17 ± 72938.79
74.57

Uavg
Tavg
S%

Uavg
Tavg
S%

-0.38 ± 0.14
768.55 ± 373.65
64.54

-0.19 ± 0.42
755.74 ± 292.29
61.51

Table 6: Performance comparison of ANN VS ANEGMA(SL+RL) VS ANEGMA(RL) when ZoA is 100%. Best results are in bold.
ANN-C and ANN-W correspond to ANN trained using data set collected from CONAN and Williams’ approach respectively, whereas
ANEGMA(SL+RL)-C and ANEGMA(SL+RL)-W correspond to ANEGMA(DDPG) initialized with ANN-C and ANN-W respectively.

Metric ANN

ANEGMA(SL+RL)

ANEGMA(RL)

Trained and Tested on Conceder Time Dependent Seller Strategy

ANN-C
0.23 ± 0.04
172234.73 ± 14516.15
79.80

ANN-W
0.17 ± 0.08
170969.09 ± 14464.09
78.49

ANEGMA(SL+RL)-C
0.27 ± 0.51
171266.64 ± 11573.38
79.73

ANEGMA(SL+RL)-W
0.21 ± 0.71
185425.74 ± 19909.06
74.61

Trained and Tested on Relative Tit for Tat Behaviour Dependent Seller Strategy

ANN-C
0.26 ± 0.30
160178.98 ± 14809.18
75.61

ANN-W
0.18 ± 0.55
163943.05 ± 12895.03
74.02

ANEGMA(SL+RL)-C
0.29 ± 0.35
33695.16 ± 64292.37
80.81

ANEGMA(SL+RL)-W
0.23 ± 0.84
23528.25 ± 61440.37
72.53

Uavg
Tavg
S%

Uavg
Tavg
S%

-0.88 ± 0.16
1021.95 ± 771.47
59.41

-0.24 ± 0.55
817.67±523.67
58.09

Table 7: Performance comparison for the adaptive behaviour of ANN VS ANEGMA(SL+RL) VS ANEGMA(RL). Best results are in bold.
ANN-C and ANN-W correspond to ANN trained using data set collected from CONAN and Williams’ approach respectively, whereas
ANEGMA(SL+RL)-C and ANEGMA(SL+RL)-W correspond to ANEGMA(DDPG) initialized with ANN-C and ANN-W respectively.

Metric ANN

ANEGMA(SL+RL)

ANEGMA(RL)

ANN-W
0.17 ± 0.04
174035.91 ± 14627.59
69.54

Trained on Relative Tit for Tat Behaviour Dependent and Tested on Conceder Time Dependent Seller Strategy
ANN-C
0.16 ± 0.05
174139.30 ± 14655.42
70.51
Trained on Conceder Time Dependent and Tested on Relative Tit for Tat Behaviour Dependent Seller Strategy
ANN-C
0.25 ± 0.05
176048.05 ± 14423.36
79.67

ANN-W
0.21 ± 0.04
175170.19 ± 14623.53
76.50

ANEGMA(SL+RL)-W
0.23 ± 0.07
108051.11 ± 57755.84
81.32

ANEGMA(SL+RL)-W
0.21 ± 0.08
114510.0 ± 64667.79
71.37

ANEGMA(SL+RL)-C
0.28 ± 0.01
19295.84 ± 53767.54
84.72

ANEGMA(SL+RL)-C
0.26 ± 0.06
38402.78± 64367.45
86.72

-0.28 ± 0.51
806.83 ± 375.51
51.89

-0.36 ± 0.12
738.55 ± 279.65
54.54

Uavg
Tavg
S%

Uavg
Tavg
S%

tialized with a random strategy.

According to our results shown in Tables 5 and 6, the per-
formance of ANN-C is comparable to that of CONAN for
both 60% and 100% ZoAs (see Table 4), and we observe the
same for ANN-W and the Williams’ strategy. So, we con-
clude that our approach can successfully produce neural net-
work strategies which are able to imitate the behaviour and
the performance of CONAN and Williams’ models (more-
over, the training accuracy’s were in the range between 93.0%
and 98.0% as shown in Figure 4).

Even more importantly,

the results demonstrate that
ANEGMA(SL+RL)-C (i.e. DDPG initialized with ANN-
DDPG initialized
C) and ANEGMA(SL+RL)-W (i.e.
with ANN-W) improve on their respective initial ANN
strategies obtained by SL, and outperform the DRL agent
ANEGMA(RL) initialized at random for both 60% and 100%
ZoAs, see Tables 5 and 6. This proves that both the evo-
lution of the strategies via DRL and the initial supervi-
sion are beneﬁcial. Furthermore, ANEGMA(SL+RL)-C and
ANEGMA(SL+RL)-W also outperform the existing “teacher
strategies” (CONAN and Williams) used for the initial super-
vision and hence can improve on them, see Table 4.

Hypothesis C (ANEGMA is adaptable)
In this ﬁnal test, we evaluate how well our ANEGMA agents
can adapt
to environments different from those used at
training-time. Speciﬁcally, we deploy strategies trained using
Conceder Time Dependent opponents into an environment
with Relative Tit for Tat Behaviour Dependent opponents, and
viceversa. The ANEGMA agents use experience from 500
simulations to adapt to the new environment. Results are pre-
sented in Table 7 for 60% ZoA and show clear superiority of
the ANEGMA agents over the ANN-C and ANN-W strate-
gies which, without online retraining, cannot maintain their
performance in the new environment. This conﬁrms our hy-
pothesis that ANEGMA agents can learn to adapt at run-time
to different unknown seller strategies.

Further discussion
Pondering over
the negative average utility values of
ANEGMA(RL) (see Tables 5 and 6), recall that we deﬁne
the utility value as per Equation (5) but without the discount
factor term. Therefore, if an agent concedes a lot to make a

Figure 3: Effect of Market Density (MD) and Market Ratio (MR)
Proportion of Successful Negotiations (S%) using time-dependent
strategies (left) and behaviour-dependent strategies (right).

Figure 4: Training Accuracy’s of ANN when trained using datasets
collected by negotiating CONAN and Williams’ buyer strategy
(for different ZoAs) against time-dependent strategies (left) and
behaviour-dependent strategies (right).

deal, it will collect a negative utility. This is precisely what
happens to the initial random (and inefﬁcient) strategy used
in the ANEGMA(RL) conﬁguration. The combination of SL
and DRL prevents this very problem as it uses an initial pre-
trained strategy which is much less likely to incur negative
utility values.

For the same reason, we observe a consistently shorter av-
erage negotiation time for ANEGMA(RL), which is caused
by the buyer that concedes more to reach the agreement with-
out negotiating for a long time with the seller. Hence, a
shorter Tavg alone does not generally imply a better nego-
tiation performance.

An additional advantage of our approach is that it allevi-
ates the common limitation of RL that an RL agent needs a
non-trivial amount of experience before reaching a satisfac-
tory performance.

6 Conclusions and Future Work
We have proposed ANEGMA, a novel agent negotiation
model that supports agent learning and adaptation during con-
current bilateral negotiations for a class of e-markets such as
E-bay. Our approach derives an initial neural network strat-
egy via supervision from well-known existing negotiation
models, and evolves the strategy via DRL. We have empir-
ically evaluated the performance of ANEGMA against ﬁxed-
but-unknown seller strategies in different e-market settings,
showing that ANEGMA outperforms the well-known existing
“teacher strategies”, the strategies trained with SL only and
those trained with DRL only. Crucially, our model also ex-
hibit adaptive behaviour, as it can transfer to environments
with unknown sellers’ behaviours different from training.

As future work, we plan to consider more complex mar-
ket settings including multi-issue negotiations and dynamic
opponent strategies.

References
[Alrayes and Stathis, 2013] Bedour Alrayes

and Kostas
Stathis. An agent architecture for concurrent bilateral
In Decision Support Systems III-Impact of
negotiations.
Decision Support Systems for Global Environments, pages
79–89. Springer, 2013.

[Alrayes et al., 2016] Bedour Alrayes,

¨Ozg¨ur Kafalı, and
Kostas Stathis. Recon: a robust multi-agent environ-
In Recent
ment for simulating concurrent negotiations.
advances in agent-based complex automated negotiation,
pages 157–174. Springer, 2016.
[Alrayes et al., 2018] Bedour Alrayes,

¨Ozg¨ur Kafalı, and
Kostas Stathis. Concurrent bilateral negotiation for open
e-markets: the conan strategy. Knowledge and Information
Systems, 56(2):463–501, 2018.

[An et al., 2006] Bo An, Kwang Mong Sim, Liang Gui Tang,
Shuang Qing Li, and Dai Jie Cheng. Continuous-time ne-
gotiation mechanism for software agents. IEEE Transac-
tions on Systems, Man, and Cybernetics, Part B (Cyber-
netics), 36(6):1261–1272, 2006.

[Baarslag et al., 2016] Tim Baarslag, Mark JC Hendrikx,
Koen V Hindriks, and Catholijn M Jonker. Learning

about the opponent in automated bilateral negotiation: a
comprehensive survey of opponent modeling techniques.
Autonomous Agents and Multi-Agent Systems, 30(5):849–
898, 2016.

[Bakker et al., 2019] Jasper Bakker, Aron Hammond, Daan
Bloembergen, and Tim Baarslag. Rlboa: A modular re-
inforcement learning framework for autonomous negotiat-
ing agents. In Proceedings of the 18th International Con-
ference on Autonomous Agents and MultiAgent Systems,
pages 260–268. International Foundation for Autonomous
Agents and Multiagent Systems, 2019.

[Choudhary and Bharadwaj, 2018] Nirmal Choudhary and
KK Bharadwaj. Evolutionary learning approach to multi-
agent negotiation for group recommender systems. Multi-
media Tools and Applications, pages 1–23, 2018.

[Faratin et al., 1998] Peyman Faratin, Carles Sierra, and
Nick R Jennings. Negotiation decision functions for au-
tonomous agents. Robotics and Autonomous Systems,
24(3-4):159–182, 1998.

[Goodfellow et al., 2016] Ian Goodfellow, Yoshua Bengio,
and Aaron Courville. Deep learning. MIT press, 2016.
[Hindriks and Tykhonov, 2008] Koen Hindriks and Dmytro
Tykhonov. Opponent modelling in automated multi-issue
negotiation using bayesian learning. In Proceedings of the
7th international joint conference on Autonomous agents
and multiagent systems-Volume 1, pages 331–338. Interna-
tional Foundation for Autonomous Agents and Multiagent
Systems, 2008.

[Lau et al., 2006] Raymond YK Lau, Maolin Tang,
On Wong, Stephen W Milliner, and Yi-Ping Phoebe
Chen. An evolutionary learning approach for adaptive
International Journal of Intelligent
negotiation agents.
Systems, 21(1):41–72, 2006.

[Lee Rodgers and Nicewander, 1988] Joseph Lee Rodgers
and W Alan Nicewander. Thirteen ways to look at the cor-
relation coefﬁcient. The American Statistician, 42(1):59–
66, 1988.

[Lewis et al., 2017] Mike Lewis, Denis Yarats, Yann N
Dauphin, Devi Parikh, and Dhruv Batra. Deal or no
deal? end-to-end learning for negotiation dialogues. arXiv
preprint arXiv:1706.05125, 2017.

Paul

[Lillicrap et al., 2017] Timothy

Lillicrap,
Jonathan James Hunt, Alexander Pritzel, Nicolas
Manfred Otto Heess, Tom Erez, Yuval Tassa, David
Silver, and Daniel Pieter Wierstra. Continuous control
with deep reinforcement learning, January 26 2017. US
Patent App. 15/217,758.

[Mansour and Kowalczyk, 2014] Khalid Mansour

and
Ryszard Kowalczyk. Coordinating the bidding strategy
in multiissue multiobject negotiation with single and
IEEE transactions on cybernetics,
multiple providers.
45(10):2261–2272, 2014.

[Nguyen and Jennings, 2004] Thuc Duong Nguyen and
Nicholas R Jennings. Coordinating multiple concurrent
In Proceedings of the Third International
negotiations.

Joint Conference on Autonomous Agents and Multiagent
Systems-Volume 3, pages 1064–1071. IEEE Computer
Society, 2004.

[Oliver, 1996] Jim R Oliver. A machine-learning approach to
automated negotiation and prospects for electronic com-
Journal of management information systems,
merce.
13(3):83–112, 1996.

[Papangelis and Georgila, 2015] Alexandros Papangelis and
Kallirroi Georgila. Reinforcement learning of multi-issue
negotiation dialogue policies. In Proceedings of the 16th
Annual Meeting of the Special Interest Group on Dis-
course and Dialogue, pages 154–158, 2015.

[Rahwan et al., 2002] Iyad Rahwan, Ryszard Kowalczyk,
and Ha Hai Pham. Intelligent agents for automated one-
In Australian Com-
to-many e-commerce negotiation.
puter Science Communications, volume 24, pages 197–
204. Australian Computer Society, Inc., 2002.

[Rodriguez-Fernandez et al., 2019] J Rodriguez-Fernandez,
T Pinto, F Silva, I Prac¸a, Z Vale, and JM Corchado. Con-
text aware q-learning-based model for decision support in
International Jour-
the negotiation of energy contracts.
nal of Electrical Power & Energy Systems, 104:489–501,
2019.

[Rubinstein, 1982] Ariel Rubinstein. Perfect equilibrium in
a bargaining model. Econometrica: Journal of the Econo-
metric Society, pages 97–109, 1982.

[Sunder et al., 2018] Vishal Sunder, Lovekesh Vig, Arnab
Prosocial or self-
agents with different behaviors for contract ne-
arXiv preprint

Chatterjee, and Gautam Shroff.
ish?
gotiation using reinforcement learning.
arXiv:1809.07066, 2018.

[Williams et al., 2012] Colin R Williams, Valentin Robu,
Enrico H Gerding, and Nicholas R Jennings. Negotiating
concurrently with unknown opponents in complex, real-
time domains. 2012.

[Zeng and Sycara, 1998] Dajun Zeng and Katia Sycara.
International Journal

Bayesian learning in negotiation.
of Human-Computer Studies, 48(1):125–141, 1998.

[Zou et al., 2014] Yi Zou, Wenjie Zhan, and Yuan Shao.
learning in negotiation.

Evolution with reinforcement
PLOS one, 9(7):e102840, 2014.

