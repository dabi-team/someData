Extracting low energy signals from raw LArTPC waveforms using deep learning
techniques — A proof of concept

Lorenzo Uboldia, David Ruthb, Michael Andrewsc, Michael H. L. S. Wangd,∗, Hans-Joachim Wenzeld, Wanwei Wud,
Tingjun Yangd

aCERN, The European Organization for Nuclear Research, 1211 Meyrin, Switzerland
bNiles North High School, Skokie, IL 60077, USA
cCarnegie Mellon University, Pittsburgh, PA 15213, USA
dFermi National Accelerator Laboratory, Batavia, IL 60510, USA

1
2
0
2

n
u
J

8
1

]
t
e
d
-
s
n
i
.
s
c
i
s
y
h
p
[

1
v
1
1
9
9
0
.
6
0
1
2
:
v
i
X
r
a

Abstract

We investigate the feasibility of using deep learning techniques, in the form of a one-dimensional convolutional neural network
(1D-CNN), for the extraction of signals from the raw waveforms produced by the individual channels of liquid argon time projec-
tion chamber (LArTPC) detectors. A minimal generic LArTPC detector model is developed to generate realistic noise and signal
waveforms used to train and test the 1D-CNN, and evaluate its performance on low-level signals. We demonstrate that our ap-
proach overcomes the inherent shortcomings of traditional cut-based methods by extending sensitivity to signals with ADC values
below their imposed thresholds. This approach exhibits great promise in enhancing the capabilities of future generation neutrino
experiments like DUNE to carry out their low-energy neutrino physics programs.

Keywords: Low-energy neutrinos, LArTPC, Triggering, Signal processing, Machine learning, Convolutional neural networks

1. Introduction

The liquid argon time projection chamber (LArTPC) has
been successfully deployed in a number of recent and currently
running neutrino experiments and is the technology of choice
for massive, next-generation neutrino experiments like the Deep
Underground Neutrino Experiment (DUNE) [1]. Born out of
combining the novel three-dimensional imaging capabilities of
the time projection chamber (TPC) [2] with the unique prop-
erties of liqueﬁed noble gases like liquid argon (LAr), it rep-
resents the modern, electronic equivalent of the bubble cham-
ber [3].

Unlike the latter, LArTPC detectors are “always-on” de-
vices, continuously detecting and acquiring signals induced by
ionization charges on wire planes at the end of the drift path.
Furthermore, the electronic readout of these signals from multi-
ple wire planes with diﬀerent angular orientations that provide 2
spatial coordinates, together with a third determined from drift
times, enables the automated reconstruction of detailed topolo-
gies, while simultaneously performing calorimetry from the in-
tegrated charge.

Alongside the unique beneﬁts provided by the TPC are the
excellent characteristics of LAr which include high ionization
and scintillation yields. The ability to transport electrons ef-
ﬁciently across long drift distances due to the vanishing elec-
tronegativity and low dispersion in LAr permits the high spatial
resolution possible with ﬁnely segmented wire planes. This al-
lows very large detectors like the DUNE far detectors [1] to be

∗Corresponding author
Email address: mwang@fnal.gov (Michael H. L. S. Wang)

built. Finally, the high density of LAr makes it an ideal neu-
trino detector due to the low neutrino-nucleon interaction cross
sections.

The powerful capabilities of the LArTPC make it an ex-
cellent choice for DUNE’s long baseline physics program with
goals that include determining the neutrino mass hierarchy, ob-
serving CP violation in the lepton sector, and making precise
measurements of the oscillation parameters using the wide-band
beam from Fermilab [4, 5]. Performing these measurements
with a LArTPC will not be too challenging due to the rela-
tively high incident neutrino energies, ranging from hundreds
of MeVs to a few GeVs, and the reduced background levels
from cosmogenic and atmospheric sources made possible by
the deep underground location of the far detectors.

Beyond its long-baseline program, DUNE’s physics goals
also include the detection of neutrinos from core-collapse su-
pernovas, searches for nucleon decay, studies of solar neutri-
nos, and atmospheric neutrino oscillation studies to supplement
the long-baseline measurements [6–8]. Of these, the solar and
core-collapse supernova neutrinos involve low energy neutrinos
in the 1 MeV (solar) to 10 MeV (supernova) range. Ioniza-
tion from the products of their interactions in the LAr can in-
duce signals that are close to the noise threshold, making them
challenging to detect. This is further exacerbated by the con-
ventional approach of applying minimum ADC threshold cuts
to discriminate signal waveforms from noise which results in
poor low-energy eﬃciency.

In this paper, we take a deep learning (DL) approach to ad-
dress the drawbacks of conventional threshold-based methods
and to optimize the eﬃciency to low-energy neutrinos. We de-

1

 
 
 
 
 
 
(a)

(b)

(c)

(d)

Figure 1: Plots (a) and (b) show simulated wire waveforms for the Ar
sample in the induction and collection planes, respectively. Plots (c) and (d) show simulated
wire waveforms for the isotropic electron sample in the induction and collection planes, respectively. The ﬁrst row in each plot shows the pure signal waveform,
followed by the noise waveform in the second row, and the sum of these two components in the third row. Details on the simulation of these waveforms is described
in Section 2 of the text.

39

velop deep learning techniques and apply them to the raw wave-
forms from individual LArTPC wires, to detect the presence of
a signal and narrow down its location in the full waveform in
terms of a region of interest (ROI). While DL methods have
been applied to LArTPC data, they tend to be applied at later
stages in oﬄine reconstruction and on 2D “images” based on
wire plane views. To our knowledge, this is the ﬁrst attempt to
apply such methods directly to the raw waveforms associated
with single LArTPC wires. This implies potentially promising
applications of this method in low-level ﬁltering and triggering
in online DAQ systems.

In the discussion that follows, we begin by describing a
minimalist but realistic toy LArTPC detector that we created
and used to develop and test our deep learning models. This
is followed by a detailed description of the neural network ar-
chitecture. The model’s performance on training and validation
sets is presented. It is then tested on an independent sample to
determine various performance metrics including the detection
eﬃciency as functions of energy deposited and ADC counts
produced. The main purpose of this paper is to demonstrate a
proof-of-principle for using deep learning networks in extract-
ing signals from raw LArTPC waveforms. After successfully
accomplishing this, we conclude by summarizing the results
and discussing future work and application of the method.

2. A minimal toy LArTPC detector

To test the idea of using DL-based methods for extracting
signals from raw LArTPC waveforms, we ﬁrst developed a soft-
ware simulation of a minimal toy LArTPC detector.
It con-
sists of a LAr volume deﬁned by a rectangular prism measuring
50 × 50 × 180 cm3, with the long dimension oriented along the
z axis and the two shorter ones along the x and y axes, cen-
tered at (x, y) = (25, 0). There are two instrumented anode wire

2

planes lying in the y − z plane consisting of an induction plane
at x = 0.075 cm and a collection plane at x = −0.075 cm. Both
planes consist of 280 equally spaced parallel wires with a pitch
of 0.25 cm, and whose axes are oriented at +60◦and −60◦with
respect to the y axis for the induction and collection planes, re-
spectively. A uniform electric ﬁeld is oriented along the x axis
with a ﬁeld strength of 500 V/cm in the main drift region.

The propagation of particles through the LAr volume was
simulated using the Geant4 simulation toolkit [9, 10] with a
step limit of 100 microns through the LArG4 package in the
LArSoft framework [11]. If the particle’s interaction with the
medium in a given step led to energy deposition, the amount of
this energy and the position of the interaction was recorded in
a SimEnergyDeposit object. This information from the Geant4
simulation was passed on to the next stage which simulated the
propagation of electrons to the readout planes and the response
of the detector that ultimately produced the digitized raw wire
waveforms from the LArTPC electronics.

The detector response was simulated by ﬁrst calculating the
initial number of ionization electrons resulting from the en-
ergy deposition, based on the ionization work function in LAr
(# electrons/GeV = 1/2.36×10−8GeV) [12]. Electron-ion recombination
eﬀects were taken into account by multiplying this initial num-
ber by a factor determined from the box model of recombina-
tion [13] modiﬁed to extend into the low dE/dx region [14].
Diﬀusion eﬀects were then simulated by ﬁrst splitting up the
total number of electrons after recombination into clusters of a
given size. The initial drift time for all clusters was calculated
from the drift velocity and the distance between the original en-
ergy deposition and the wire plane. Diﬀusion in the longitudi-
nal direction was simulated by smearing this drift time accord-
ing to a Gaussian distribution for each cluster. Diﬀusion in the
transverse direction was simulated by smearing the transverse

505pure signalInduction, Ar39505ADCnoise050100150200Time tick505signalwaveform20246pure signalCollection, Ar3920246ADCnoise050100150200Time tick20246signalwaveform201001020pure signalInduction, Iso El201001020ADCnoise050100150200Time tick201001020signalwaveform0102030pure signalCollection, Iso El0102030ADCnoise050100150200Time tick0102030signalwaveformFigure 2: Architecture of the one-dimensional convolutional neural network used to recognize signals in LArTPC waveforms.

positions of the original energy deposition by a Gaussian distri-
bution for each cluster, providing their spatial coordinates at the
wire planes. These smeared coordinates were used to determine
the wire closest to a cluster in a plane, on which an induced sig-
nal would be simulated. The amount of energy and number
of electrons for that cluster were recorded in a SimChannels
object, and were identiﬁed by the channel number correspond-
ing to the wire. Only channels associated with clusters were
stored in the object, and the cluster information was saved in
the time bin (TDC) corresponding to its drift time. The wave-
forms from all LArTPC wires were assumed to be digitized at
a rate of 5.05 MHz (198 ns/sample), starting from the instant
energy was deposited by the Geant4 simulated tracks (assumed
to all occur simultaneously), and lasting for a duration corre-
sponding to 2,048 samples.

To simulate the waveforms produced by the LArTPC wires,
we modeled the ﬁeld response of the wire planes, as a func-
tion of j’th TDC bin, with a quadratic (∝ j2) for the collection
plane, and with an asymmetric sinusoid, where the amplitude of
the negative-going half cycle was 10% larger, for the induction
plane. The electronics response was modeled using the parame-
terization described in Reference [15]. For each LArTPC wire,
the charge in each TDC bin, determined from the total num-
ber of ionization electrons stored in the SimChannels object for
that bin, was convoluted with the ﬁeld response function for
the appropriate wire plane and the electronics response in order
to produce what we will refer to as the pure signal waveform.
Noise was modeled by parameterizing the modulus r of its com-
plex frequency components according to:

r = |re−iφ| = p0 × e

(cid:19)2

(cid:18) f −p1
p2

− 1
2

(cid:19)p4

(cid:18)

f
p3

− 1
2

× e

+ p5 + e−p6( f −p7)

(1)

where f represents the midpoint of the j’th frequency bin in
kHz and the parameters pk are given by p0 = 4450, p1 = −530,
p2 = 280, p3 = 110, p4 = −0.85, p5 = 18, p6 = 0.064,
and p7 = 74. The modulus r was ﬂuctuated according to a
modiﬁed Poisson distribution of the form P(x) = e−µµx/(x − 1)!
with µ = 0.28, while the phase φ was generated uniformly from
0 → 2π. The parameters used in this model were chosen to

3

generate noise very similar to that observed in actual detectors
like that described in Reference [16].

The waveform produced by transforming this randomly gen-
erated noise into the time domain is what we will refer to as the
noise waveform, which was generated uniquely for each chan-
nel and for every event. The pure signal waveform was added
to the noise waveform to produce the simulated LArTPC wave-
form for a wire if it was associated with a SimChannels object;
otherwise, only the noise waveform was used. From here on,
we will refer to the simulated waveform formed from the sum
of a pure signal and a noise waveform simply as a signal wave-
form. Examples of these simulated waveforms are shown in
Figure 1 for the generated samples used in training and test-
ing the DL model described below and in evaluating its perfor-
mance.

3. Deep learning approach to LArTPC waveform recogni-

tion

3.1. 1D-CNN model architecture

The architecture of the neural network we developed for de-
tecting signal waveforms in a LArTPC is the one-dimensional
convolutional neural network (1D-CNN) shown in Figure 2.
Starting on the left is the waveform presented to the input of
the network, which consists of three one-dimensional convo-
lutional layers (Conv1Ds), all of which use rectiﬁed linear unit
(ReLU) activation functions, deﬁned by f (x) = max(0, x). Each
Conv1D is immediately followed by a pooling layer that re-
duces the size of the input feature map. The ﬁrst two are maxi-
mum pooling layers with pool sizes of 2, and the last is a global
pooling layer. There are 16, 32, and 64 ﬁlters or kernels in the
ﬁrst, second, and third Conv1D layers, respectively. The kernel
sizes in this sequence of three layers are 3, 5, and 9, respec-
tively, with stride lengths of 2 for the ﬁrst two and 1 for the last.
Two dropout layers are used, one with a dropout fraction of 0.1
after the second maximum pooling layer, and the other with a
dropout fraction of 0.2 after the global pooling layer. By ran-
domly ignoring a fraction of their inputs, dropout layers help

1DConv 16  +ReLU1DConv 32  +ReLU1DConv 64  +ReLUMaxPool  size=2MaxPool  size=2GlobalPoolingSigmoidDropout: 0.1Dropout: 0.2kernel size: 9     stride: 1kernel size: 5     stride: 2kernel size: 3     stride: 2Input waveformoutput1D-CNN LArTPC Waveform Recognition(a)

(b)

(c)

(d)

Figure 3: Plots (a) and (b) show how accuracy and loss evolve as a function of training epoch for the induction plane. Plots (c) and (d) shows the evolution of the
same quantities as a function of training epoch for the collection plane.

prevent the formation of co-adaptations between layers, which
do not generalize well to unseen data and could therefore cause
overﬁtting [17]. The outputs of the global pooling layer termi-
nate into a dense layer with a single node that is activated by
a sigmoid function, deﬁned by f (x) = 1/(1 + e−x). This func-
tion yields an output bounded between 0 and 1, which can be
conveniently interpreted as the probability that the waveform
contains a signal or not. This network has a total of 21,217
trainable parameters.

3.2. Training the model

39

To create the simulated sample of digitized LArTPC wave-
forms used to train the model, radiological events from the β
nuclide contaminating LAr were ﬁrst gener-
decay of the Ar
ated. The interactions of the particles produced in these events
with the LAr volume were then simulated using the Geant4
toolkit, followed by the detector response simulation, both of
which are described in Section 2. Next, all the particles in an
event that deposited energy in the LAr, leading to a detectable
signal from at least one wire, were then identiﬁed. This was
ensured by requiring the maximum ADC value of the pure sig-
nal component of the digitized wire waveform to be > 3 ADC
counts. In addition, the minimum energy of the parent ioniz-
ing particle was required to be ≥ 50 keV, and the maximum
number of ionization electrons associated with the signal was
required to be < 11, 000. For each particle identiﬁed above, we
randomly selected a single wire channel among all those with
signals associated with this particle, satisfying the requirements
above. This was done in order to minimize possible correla-
tions between signals from neighboring wires originating from
the same particle, which could impact the training process neg-
atively. Since there can be multiple signal contributions from
diﬀerent particles in a given channel, only the largest contribu-
tion, based on the energy deposited, was selected. A cutout of
the full waveform consisting of 200 time bins, with the selected
signal region randomly positioned within it, was then created.
The training set used in the procedure described below con-
sisted of such 200-tick waveforms.

The model was trained separately for the induction and col-
lection planes of the LArTPC described in Section 2. The to-
tal number of samples used to train the model was ≈2.88 M

4

(≈3.30 M) for the induction (collection) plane. A separate vali-
dation sample of ≈721 K (≈824 K) in the induction (collection)
plane was not used to train the model directly, but to monitor its
performance in the course of training. Both training and valida-
tion samples were split roughly equally between signal wave-
forms and noise waveforms. Prior to feeding the waveforms
to the model, the mean ¯x and standard deviation σ of all ADC
values over all waveforms in the sample were ﬁrst computed.
Each waveform, identiﬁed by the index i, was then standard-
ized by scaling its ADC values xi by a factor si = (xi − ¯x)/σ.
To ﬁt for the optimal model weights in the training process,
we made use of the Adam (adaptive moment estimation) op-
timization algorithm [18]. This is an extension of the mini-
batch stochastic gradient method that uses per-parameter learn-
ing rates, whose values are adapted based on how quickly the
weights have been changing. The weights were determined
and updated iteratively using random batches of 2,048 wave-
forms (batch size), in which a full pass over the entire sample
was completed in one epoch. A total of 8 (12) training epochs
were performed for the induction (collection) plane. We used
the binary cross-entropy loss function, calculated according to
i=1 yi · log(pi) + (1 − yi) · log(1 − pi), where the index i
L = − 1
N
runs over the number of observations N. pi is the model output
representing the predicted probability for observation i to con-
tain a signal, and yi is the correct label for that observation (1
for signal and 0 otherwise).

(cid:80)N

TP+TN

The evolution of the accuracy and the loss as a function of
training epoch is shown separately in Figure 3 for the induction
(blue) and collection (green) planes. We deﬁne accuracy =
TP+FN+TN+FP , where TP, TN, FP, and FN are the number of true
positives, true negatives, false positives, and false negatives, re-
spectively. Loss is as deﬁned above. For each plane, the accu-
racy and loss curves are shown for both the training (solid) and
validation (dashed) samples. In all cases, the validation curves
follow the general trend of the training curves, reassuring us
that overﬁtting is not an issue. The values for TN, FP, FN, and
TP (elements of the 2 × 2 confusion matrix) at the end of the
ﬁnal training epoch are shown for the training and validation
samples in the ﬁrst two rows of Table 1.

24681012Epoch0.9080.9100.9120.9140.9160.9180.9200.9220.924AccuracyAccuracy vs Epoch (induction plane)trainingvalidation24681012Epoch0.1900.1950.2000.2050.2100.2150.2200.2250.230LossLoss vs Epoch (induction plane)trainingvalidation24681012Epoch0.9400.9420.9440.9460.9480.9500.9520.9540.956AccuracyAccuracy vs Epoch (collection plane)trainingvalidation24681012Epoch0.1100.1150.1200.1250.1300.1350.1400.1450.150LossLoss vs Epoch (collection plane)trainingvalidationInduction Plane

Collection Plane

Sample

TN

FP

FN

TP

TN

FP

FN

TP

training
validation
testing

0.477
0.476
0.476

0.023
0.024
0.024

0.052
0.052
0.052

0.448
0.448
0.448

0.483
0.482
0.483

0.017
0.017
0.017

0.028
0.028
0.028

0.472
0.473
0.472

Table 1: The table above shows the elements of the confusion matrix when applying the fully trained 1D-CNN model on the training, validation, and testing samples.
Results are shown for both planes.

3.3. Verifying with independent test set

39

When the training and validation samples were created, a
separate and independent test sample of Ar
waveforms was
also generated. This served as an unbiased sample that was not
used to train the sample and did not inﬂuence the hyperparam-
eter choices for the model. The size of this sample was ≈899
K (≈1.29 M) for the induction (collection) plane, consisting of
roughly equal portions of signal and noise waveforms. We ap-
plied the fully trained model described in Section 3.2 to the test
sample after scaling its ADC values with the same standardiza-
tion parameters used for the training sample. The results, in
terms of the elements of the confusion matrix, are shown in the
last row of Table 1. From these numbers, we calculate preci-
sion = p = TP
TN+FN ,
TP+FN , speciﬁcity = s = TN
recall = r =
TN+FP , and accuracy
as deﬁned previously. The values for these metrics for the test
sample are shown in Table 2. In Figure 4, the true positive rate
is plotted against the false positive rate to show the receiver
operating characteristic curves (ROCs) from applying the fully
trained model on the test sample for each plane. The diagonal
dash-dotted line in each plot represents the reference case when
a model has absolutely no ability to tell two classes apart, in
In
which case the area under the ROC curve (AUC) is 0.5.
comparison, our model is able to achieve AUC=0.97 on the
induction plane and AUC=0.99 on the collection plane, indi-
cating useful discriminating power between signal and noise
waveforms.

TP+FP , negative predictive value = npv = TN

TP

4. Region of interest ﬁnding and model performance

4.1. Extending the model to localize signals

The results presented in Section 3.3 demonstrate that our
1D-CNN model can make useful predictions about whether 200-
tick waveform snippets contain signals or not. This section de-
scribes how we extended this capability to the localization of
signals within the full waveforms in terms of ROIs. This was

done in a straightforward manner by simply scanning a window
across the entire waveform starting from the leftmost edge and
shifting it repeatedly to the right with some ﬁnite stride length
until it reached the rightmost edge. By performing an inference
on the portion of the waveform contained within the window
at each step, the signal region could eﬀectively be localized.
In our implementation in this paper, the full 2,048-tick sim-
ulated LArTPC waveform was subdivided into 14 overlapping
200-tick windows, beginning with the ﬁrst, whose left edge was
aligned with the start of the waveform. Each of the 12 subse-
quent windows after the ﬁrst was oﬀset from the previous one
by a stride length of 150 ticks, while the last window (13th after
the ﬁrst) was oﬀset from the preceding one by 48 ticks, so that
its right edge aligned with the last tick of the full waveform. An
inference was then performed on each of these 14 windows to
identify the ROI/s within the full waveform. Examples of such
ROIs are shown in Figure 5.

4.2. Evaluating eﬃciency with single electrons

To further quantify the performance and capabilities of our
1D-CNN model, we generated a single electron sample with
electron momenta ranging from 1 MeV to 1 GeV. The initial
position of each electron was generated uniformly within a rect-
angular prism that centered on the LAr volume and which mea-
sures 30 × 30 × 90 cm3, with the long dimension oriented along
the z axis and the two shorter ones along the x and y axes.
The initial direction of each electron was generated pseudo-
isotropically with angles θxz and ϕyz distributed uniformly within
±180◦ and ±90◦, respectively. After this, the electrons were
propagated through the detector using Geant4 and the detector
response simulated as described in Section 2, to produce the
raw LArTPC wire waveforms. The fully trained 1D-CNN, de-
scribed in Section 3.2, was then applied to each waveform to
ﬁnd the signal ROI as detailed in Section 4.1.

The signal detection eﬃciency for the isotropic electron sam-
ple is presented here as a function of the peak ADC value as-

Metric

Induction Plane Collection Plane

precision
negative predictive value
recall
speciﬁcity
accuracy

0.950
0.901
0.896
0.953
0.924

0.965
0.946
0.944
0.966
0.955

Table 2: The table above summarizes the performance of the fully trained 1D-CNN model on the test sample.

5

(a)

(b)

Figure 4: Receiver operating characteristic curves (ROCs) and the associated areas under the ROC curves (AUCs) for the independent test set are shown for the
induction plane in (a) and the collection plane in (b). Shown for reference in each plot is the dash-dotted line representing the case when there is absolutely no
discriminating power.

(a)

(b)

Figure 5: Two examples each of simulated full (2,048-tick) waveforms are shown for the (a) induction and the (b) collection planes. Regions-of-interest (ROIs) that
localize the signals within the full waveforms, using the method described in Section 4.1, are indicated by the rectangular pulses drawn in red.

6

0.00.20.40.60.81.0False Positive Rate0.00.20.40.60.81.0True Positive RateROC curve (induction plane)test set (AUC=0.97)reference (AUC=0.5)0.00.20.40.60.81.0False Positive Rate0.00.20.40.60.81.0True Positive RateROC curve (collection plane)test set (AUC=0.99)reference (AUC=0.5)201001020Induction plane, ROI finding025050075010001250150017502000Time Tick201001020ADC201001020Collection plane, ROI finding025050075010001250150017502000Time Tick201001020ADC(a)

(b)

Figure 6: Eﬃciencies of the 1D-CNN ROI ﬁnder as a function of ADCpk determined using the isotropic electron sample for the (a) induction and (b) collection
planes. Results are shown in each case for the traditional over-ADC-threshold and the 1D-CNN based approaches. The average energy deposited in MeV and the
average number of electrons associated with the signal, for each ADCpk bin, are shown below each plot.

sociated with the pure signal component of a digitized wave-
form, which shall be referred to hereon as ADCpk. We choose
to work with ADC values because they are ultimately what the
1D-CNN directly “sees”. This avoids the need to convert from
some other quantity like energy to ADC values, which would
be experiment speciﬁc.

To calculate eﬃciency, two histograms are created to rep-
resent the numerator (HN) and denominator (HD) of the ratio.
Each histogram has 12 bins representing ADCpk ranging from 1
to 12. If a signal is present within the full 2,048-tick waveform,
an entry is made in the HD bin corresponding to the ADCpk as-
sociated with the signal. In case multiple signals are present
within the full waveform, only the one with the largest ADCpk
is selected for calculating eﬃciency. Following the procedure
described in Section 4.1, the 1D-CNN is used to scan the entire
waveform for ROIs.
If the signal lies within an ROI identi-
ﬁed by the 1D-CNN, an entry is also made in the same bin of
HN. Once the two histograms are ﬁlled, their ratio is taken to
yield the eﬃciency as a function of ADCpk. This is done sep-
arately for the induction and collection planes, and the results
are shown in red in Figure 6. The average energy deposited
and average number of ionization electrons associated with the
signal, for each bin of ADCpk, are also shown below each plot.
The CNN output is required to be > 0.91 (> 0.95) in order
to classify a waveform as a signal in the induction (collection)
plane.

Also shown for comparison in each plot are the eﬃciencies
(in blue) for the traditional over-ADC-threshold approach. In
this case, signal waveforms are discriminated from noise by re-
quiring the measured ADC values in a region containing the
signal to be above noise threshold. The mean ADC value of
the pure noise waveforms generated as described in Section 2
is 1.77, with a standard deviation of 1.05. In these plots, we
require |ADC| > 6 counts for the induction plane and ADC > 6
counts for the collection plane. These correspond to ≈ 4 stan-

dard deviations above the noise average. Such a requirement
achieves a background rejection rate of 0.926 (0.962) on the
induction (collection) plane, which closely matches the rate of
0.931 (0.966) from the CNN-based method when requiring the
output to be > 0.91 (> 0.95).

The fact that the eﬃciency plots for the over-ADC-threshold
method do not exhibit a sharp cutoﬀ at ADCpk = 6 might seem
counter-intuitive at ﬁrst. However, this is to be expected be-
cause ADCpk represents the ADC value associated with the pure
signal prior to any noise ﬂuctuations. A signal with ADCpk ≤ 6
could satisfy the requirement of ADC > 6 if it ﬂuctuates above
this threshold after the addition of noise. To demonstrate more
clearly how the 1D-CNN is able to detect signals in regions in-
accessible to the traditional approach, the 1D-CNN eﬃciencies
are shown as a function of the actual ADC value produced by
the detector (ADCpk + noise) in Figure 7. The blue hatched re-
gion represents the region above the ADC cut that is accessible
to the over-ADC-threshold method.

It is not diﬃcult to see from Figure 6 that the CNN-based
method outperforms the traditional approach throughout the range
from ADCpk = 2 to 8, after which both achieve essentially
100% eﬃciency. The former begins to achieve better than 90%
eﬃciency at ADCpk = 6, while the latter only reaches this level
at around ADCpk = 8.

5. Conclusion

In this work, we have successfully demonstrated that deep
learning methods can be applied directly to the raw wire wave-
forms produced by the individual channels in a LArTPC detec-
tor in order to discriminate signal waveforms from background.
This was achieved using a 1D-CNN which was implemented in
a way that allowed the ROI of the signal to be identiﬁed within
the full waveform. The discriminating power of CNNs derives

7

12345678910111213peak ADC of pure signal00.20.40.60.81efficiencyOver-ADC-threshold method1D-CNN based methodInduction plane0.0650.1170.1720.2270.3200.3570.5130.7010.9221.1891.5011.557average energy deposited (MeV)  834 1831 2910 4026 5774 6555 95641288716560216352746328099average number of ionization electrons12345678910111213peak ADC of pure signal00.20.40.60.81efficiencyOver-ADC-threshold method1D-CNN based methodCollection plane0.0470.0800.1090.1400.1700.2020.2290.2610.2890.3210.3460.373average energy deposited (MeV)  519 1103 1689 2299 2901 3507 4111 4718 5309 5898 6462 7073average number of ionization electrons(a)

(b)

Figure 7: Eﬃciencies of the 1D-CNN ROI ﬁnder for the (a) induction and (b) collection planes as a function of the actual ADC value produced by the detector,
which is the sum ADCpk + noise. The blue hatched region represents the eﬃciency of the over-ADC-threshold method.

from their ability to learn and detect subtle features that distin-
guish signal from background such as, but not limited to, shape
characteristics. Because of this, they are not constrained by user
deﬁned cuts imposed in traditional threshold based signal ROI
ﬁnders and can maintain signal sensitivity in energy regions in-
accessible to such methods. The implications are signiﬁcant for
the rich low-energy physics program of future neutrino experi-
ments like DUNE.

A major advantage of our approach over other ML-based
ones, is its use of a simple neural network architecture consist-
ing of a mere ≈20K trainable parameters compared with the
millions found on typical designs. The low resource utilization
makes it feasible for deployment near the detector front end or
in edge applications, as part of an online trigger system or for
implementing an intelligent zero-suppression ﬁlter. Such appli-
cations of this 1D-CNN at the very early stages of the DAQ sys-
tem can help achieve optimal signal eﬃciency and background
rejection that will surely beneﬁt and complement downstream
selection algorithms, including more complex ML-based ones.
This paper set out to establish a proof-of-concept and pro-
vide a detailed description of the methodology, and it has suc-
ceeded in this task. In subsequent and related papers, this method
will be used in actual applications, including those involving
real experimental data [16].

6. Acknowledgements

We wish to thank Brian Nord and Gabe Perdue of Fermi-
lab for useful discussions on machine learning techniques. This
manuscript has been authored by Fermi Research Alliance, LLC
under Contract No. DE-AC02-07CH11359 with the U.S. De-
partment of Energy, Oﬃce of Science, Oﬃce of High Energy
Physics. This work has received funding from the European
Union’s Horizon 2020 Research and Innovation Programme un-
der grant agreement number 858199, “INTENSE”.

References

[1] S. Jones, et al., Deep Underground Neutrino Experiment (DUNE), Far
Detector Technical Design Report, Volume 1 Introduction to DUNE
(2020). arXiv:2002.02967.

[2] J. N. Marx, D. R. Nygren, The Time Projection Chamber, Phys. Today

31N10 (1978) 46–53. doi:10.1063/1.2994775.

[3] C. Rubbia, The Liquid Argon Time Projection Chamber: A New Concept

for Neutrino Detectors (5 1977).

[4] X. Qian, P. Vogel, Neutrino mass hierarchy, Progress in Particle and Nu-
clear Physics 83 (2015) 1–30. doi:https://doi.org/10.1016/j.
ppnp.2015.05.002.
URL https://www.sciencedirect.com/science/article/pii/
S0146641015000307

[5] H. Nunokawa, S. Parke, J. W. Valle, CP violation and neutrino oscilla-
tions, Progress in Particle and Nuclear Physics 60 (2) (2008) 338–402.
doi:https://doi.org/10.1016/j.ppnp.2007.10.001.
URL https://www.sciencedirect.com/science/article/pii/
S014664100700083X

[6] B. Abi, et al., Supernova neutrino burst detection with the Deep Under-
ground Neutrino Experiment, The European Physical Journal C 81 (5)
(May 2021). doi:10.1140/epjc/s10052-021-09166-w.
URL http://dx.doi.org/10.1140/epjc/s10052-021-09166-w

[7] V. A. Kudryavtsev, et al., Underground physics with DUNE, Journal of
Physics: Conference Series 718 (6) (2016) 062032. doi:10.1088/
1742-6596/718/6/062032.
URL https://doi.org/10.1088/1742-6596/718/6/062032
[8] F. Capozzi, S. W. Li, G. Zhu, J. F. Beacom, DUNE as the Next-
Generation Solar Neutrino Experiment, Phys. Rev. Lett. 123 (2019)
131803. doi:10.1103/PhysRevLett.123.131803.
URL https://link.aps.org/doi/10.1103/PhysRevLett.123.
131803

[9] S. Agostinelli, et al., Geant4–a simulation toolkit, Nuclear Instruments
and Methods in Physics Research Section A: Accelerators, Spectrom-
eters, Detectors and Associated Equipment 506 (3) (2003) 250–303.
doi:https://doi.org/10.1016/S0168-9002(03)01368-8.
URL https://www.sciencedirect.com/science/article/pii/
S0168900203013688

[10] J. Allison, et al., Recent developments in Geant4, Nuclear Instruments
and Methods in Physics Research Section A: Accelerators, Spectrome-
ters, Detectors and Associated Equipment 835 (2016) 186–225. doi:
https://doi.org/10.1016/j.nima.2016.06.125.
URL https://www.sciencedirect.com/science/article/pii/
S0168900216306957

[11] E. Snider, G. Petrillo, LArSoft: Toolkit for Simulation, Reconstruction

8

24681012peak ADC of pure signal + noise00.20.40.60.81efficiencyADC>6Induction planeOver-ADC-threshold method1D-CNN based method24681012peak ADC of pure signal + noise00.20.40.60.81efficiencyADC>6Collection planeOver-ADC-threshold method1D-CNN based methodand Analysis of Liquid Argon TPC Neutrino Detectors, J. Phys. Conf. Ser.
898 (4) (2017) 042057. doi:10.1088/1742-6596/898/4/042057.

[12] M. Miyajima, T. Takahashi, S. Konno, T. Hamada, S. Kubota, H. Shiba-
mura, T. Doke, Average energy expended per ion pair in liquid argon,
Phys. Rev. A 9 (1974) 1438–1443. doi:10.1103/PhysRevA.9.1438.
[13] J. Thomas, D. A. Imel, Recombination of electron-ion pairs in liquid ar-
gon and liquid xenon, Phys. Rev. A 36 (1987) 614–616. doi:10.1103/
PhysRevA.36.614.
URL https://link.aps.org/doi/10.1103/PhysRevA.36.614
[14] R. Acciarri, A study of electron recombination using highly ionizing
particles in the ArgoNeuT liquid argon TPC, Journal of Instrumenta-
tion 8 (08) (2013) P08005–P08005. doi:10.1088/1748-0221/8/08/
p08005.
URL https://doi.org/10.1088/1748-0221/8/08/p08005
[15] C. Adams, et al., Ionization electron signal processing in single phase
LArTPCs. part II. data/simulation comparison and performance in Mi-
croBooNE, Journal of Instrumentation 13 (07) (2018) P07007–P07007.
doi:10.1088/1748-0221/13/07/p07007.
URL https://doi.org/10.1088/1748-0221/13/07/p07007
[16] R. Acciarri, et al., A deep-learning based raw waveform region-of-interest
ﬁnder for the liquid argon time projection chamber (2021). arXiv:2103.
06391.

[17] N. Srivastava, G. Hinton, A. Krizhevsky, I. Sutskever, R. Salakhutdinov,
Dropout: A simple way to prevent neural networks from overﬁtting, Jour-
nal of Machine Learning Research 15 (2014) 1929–1958.
URL http://jmlr.org/papers/v15/srivastava14a.html
[18] D. P. Kingma, J. Ba, Adam: A method for stochastic optimization, in: 3rd
International Conference on Learning Representations, ICLR 2015, San
Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings, 2015.
URL http://arxiv.org/abs/1412.6980

9

