9
1
0
2

y
a
M
5
2

]

R

I
.
s
c
[

1
v
6
3
5
0
1
.
5
0
9
1
:
v
i
X
r
a

DeepRec: An Open-source Toolkit for Deep Learning based Recommendation∗
Shuai Zhang1 , Yi Tay2 , Lina Yao1 , Bin Wu3 , Aixin Sun2
1University of New South Wales
2Nanyang Technological University
3Zhengzhou Univeristy
{shuai.zhang@student., lina.yao@}unsw.edu.au,
{ytay017@e., axsun@}ntu.edu.sg, wubin@gs.zzu.edu.cn

Abstract

Deep learning based recommender systems have
been extensively explored in recent years. How-
ever, the large number of models proposed each
year poses a big challenge for both researchers
and practitioners in reproducing the results for
further comparisons. Although a portion of pa-
pers provides source code, they adopted different
programming languages or different deep learn-
ing packages, which also raises the bar in grasp-
ing the ideas. To alleviate this problem, we re-
leased the open source project: DeepRec. In this
toolkit, we have implemented a number of deep
learning based recommendation algorithms using
Python and the widely used deep learning pack-
age - Tensorﬂow. Three major recommendation
scenarios: rating prediction, top-N recommenda-
tion (item ranking) and sequential recommenda-
tion, were considered. Meanwhile, DeepRec main-
tains good modularity and extensibility to easily in-
corporate new models into the framework. It is dis-
tributed under the terms of the GNU General Pub-
lic License. The source code is available at github:
https://github.com/cheungdaven/DeepRec

1 Introduction

In recent years, deep learning has achieved tremendous suc-
cess in many application domains, such as computer vi-
sion, natural language processing, and speech recognition.
Inspired by the effectiveness of deep neural networks, re-
searchers and practitioners started to apply deep learning
techniques to recommendation tasks and have achieved a
huge improvement on many recommendation tasks. Mean-
while,
the number of publications on deep neural net-
work based recommendation models also increases exponen-
tially [Zhang et al., 2019]. Moreover, many companies re-
sort to deep learning techniques to improve their recommen-
dation quality for better user experience and increasing rev-
enue [Covington et al., 2016; Cheng et al., 2016]. In general,
deep learning techniques can be utilized to learn representa-
tions for user and item side information (e.g., user proﬁle,

∗Accepted by IJCAI-19 Demonstrations Track

item content, etc.), introduce nonlinearities to recommenda-
tion models and model the sequential patterns of user con-
sumption history. In addition, deep neural networks are of
high ﬂexibility, which makes it possible to develop more pow-
erful models by combining different neural networks.

However,

this hype also poses a big challenge to re-
searchers and practitioners, that it, reproducing results for
those proposed deep learning based models. Although some
authors provide source code for reproductivity, many of them
are written in different programming languages, or use differ-
ent deep learning packages, let alone a large portion of work
do not provide source code, which makes it hard to under-
stand and hinder the process of justifying newly proposed
methods. To this end, we start the project - DeepRec. Our
goal is to make reproducing results easier and lower the bar
of developing deep learning based recommendation models
and increase their practicality.

Although there are some open source recommendation
packages available, such as MyMediaLite1, LibRec [Guo et
al., 2015], Suprise2 and OpenRec [Yang et al., 2018], most
of them only include traditional recommendation algorithms
or have not updated for a long time. The OpenRec library
do provide several deep neural network based recommenda-
tion models, the number is still very small (only four models
implemented) compared with DeepRec.

To this end, we develop an open-source toolkit named
‘DeepRec’. This toolkit provides a ﬂexible framework and
uniﬁed interfaces for deep learning based recommendation
models. The prime features of DeepRec are twofold:

• In this toolkit, we addressed three common scenarios in
recommendation research: rating prediction, top-n rec-
ommendation (item ranking) and sequence-aware rec-
ommendation.
It offers state-of-the-art algorithms for
those three tasks.

• DeepRec is extensible, adaptable and efﬁcient. Users
could add algorithm easily. Moreover, DeepRec is able
to make use of the computation power of GPUs, making
it scalable to large-scale datasets.

1http://mymedialite.net/index.html
2http://surpriselib.com/

 
 
 
 
 
 
multilayer-perceptron (MLP), generalized matrix factoriza-
tion (GMF) and neural collaborative ﬁltering (NeuMF) [?],
NeuRec [Zhang et al., 2018b] and latent relational metric
learning [Tay et al., 2018].

Sequential Recommendation Models
For sequence-aware recommendation models, we imple-
mented the personalized ranking metric embedding model
[Feng et al., 2015], LSTM and GRU based
(PRME)
methods [Hidasi et al., 2015], convolution based model
(Caser) [Tang and Wang, 2018], and self-attention based ap-
proach (AttRec) [Zhang et al., 2018a].

2.3 Evaluation Metrics
Several commonly used evaluation metrics were included
in this toolkit.
For rating prediction, we can use Root
Mean Square Error (RMSE) and Mean Average Error (MAE)
to measure the effectiveness. For top-n recommendation
and sequence-aware recommendation, we included several
ranking-aware metrics, including, Recall@n, Precision@n,
Normalized Discounted Cumulative Gain (NDCG) and Mean
Reciprocal Rank (MRR) to measure both the accuracy and
quality of ranking lists. For detailed deﬁnitions, readers are
referred to [Shani and Gunawardana, 2011].

2.4 Comparison with Other Frameworks

Library
Suprise
MyMediaLite
LibRec
OpenRec
DeepRec

backend
SciKits
N/A
N/A
Tensorﬂow
Tensorﬂow

GPUs
N
N
N
Y
Y

3 scenarios
N
N
N
N
Y

#DL
0
0
0
4
> 20

Table 1: Comparison with existing libraries. “3 scenarios” means
whether the library can deal with the above mentioned three different
tasks. “#DL” means the number of neural networks based methods.

Table 1 summarizes the difference between our toolkit and
other existing Toolkits. Suprise, MyMedialite, LibRec do
not include neural network based models and can not utilize
the computation power of GPUs. OpenRec also adopts Ten-
sorﬂow as the backend, but it only implemented four rank-
ing based recommendation methods, while DeepRec includes
over twenty state-of-the-art deep learning based recommen-
dation model. In addition, DeepRec is the ﬁrst library that
includes sequence-aware models.

3 Conclusion
In this demo paper, we introduce the open-source library
DeepRec, in the hope that it could ease the burden of re-
searchers and practitioners on reproducing existing models.
DeepRec is a ﬂexible, extensible and efﬁcient framework
which includes a number of state-of-the-art deep learning
based recommendation algorithms.

Moving forward, future work will include: implementing
more models and evaluation measures, improving the docu-
mentation and tutorials as well as updating it to follow the
scheme of Tensorﬂow 2.0.

Figure 1: Architecture of DeepRec. It consists of three important
components: recommender, backend and utility.

2 Introduction to DeepRec
In this section, we brieﬂy introduce the archecture of the
DeepRec, plus implemented recommendation algorithms and
comparison with other frameworks.

2.1 Architecture of DeepRec
recommender,
DeepRec is made up of three components:
backend and utility. We adopt the widely used deep learn-
ing framework Tensorﬂow and several other frequent used
scientiﬁc calculation libraries such as Numpy, Scipy, Sklearn
and Pandas as the core backend; A number of representative
and advanced algorithms deep learning based recommenda-
tion models forms the recommender components. We split
the algorithms into three categories: rating prediction, top-n
recommendation and sequence-aware recommendation. We
put the common evaluators and data preprocess functions into
the utility component.

Implemented Algorithms

2.2
A number of algorithms that were implemented in the current
version are listed below. Note that a few non deep learning
methods (e.g., biasedSVD, Factorization Machines, BPRMF)
are also implemented with Tensorﬂow.

Rating Prediction Models
In this category, we implemented methods like classical
method like biasedSVD (or MF) [Koren et al., 2009], Factor-
ization Machines (FM) [Rendle, 2010], user and item based
AutoRec [Sedhain et al., 2015], neural network matrix fac-
torization (NNMF) [Dziugaite and Roy, 2015], neural rating
regression (NRR) [Li et al., 2017], neural factorization ma-
chines (NFM) [He and Chua, 2017] and attentive factoriza-
tion machines (AFM) [Xiao et al., 2017]. For factorization
machines, we use the same feature format as libfm [Rendle,
2012] to make them compatible.

Top-n Recommendation Models
Here, we included classical pairwise personalized rank-
ing methods BPRMF [Rendle et al., 2009], collaborative
metric learning (CML) [Hsieh et al., 2017], collabora-
tive denoising auto-Encoder (CDAE) [Wu et al., 2016],

Recommendation Algorithms Rating PredictionTop-NRecommendation Sequence-aware  Recommendation  MF FM NNMF U-AutoRec   I-AutoRec NRR NFM AFM ⋄⋄⋄⋄⋄⋄⋄⋄ BPRMF CML CDAE MLP GMF NeuMF LRML ⋄⋄⋄⋄⋄⋄⋄ PRME LSTMGRU4RecCASERAttRec⋄⋄⋄⋄⋄Evaluators RMSE MAE Recall Precision NDCG MRR  ⋄⋄⋄⋄⋄⋄DataPreprocess RecommenderBackendUtilityTensorﬂow, Numpy, Scipy, Sklearn, PandasReferences
[Cheng et al., 2016] Heng-Tze

Cheng,

Levent Koc,
Jeremiah Harmsen, Tal Shaked, Tushar Chandra,
Hrishi Aradhye, Glen Anderson, Greg Corrado, Wei Chai,
Mustafa Ispir, et al. Wide & deep learning for recom-
In Proceedings of the 1st workshop
mender systems.
on deep learning for recommender systems, pages 7–10.
ACM, 2016.

[Covington et al., 2016] Paul Covington, Jay Adams, and
Emre Sargin. Deep neural networks for youtube recom-
mendations. In Proceedings of the 10th ACM conference
on recommender systems, pages 191–198. ACM, 2016.
[Dziugaite and Roy, 2015] Gintare Karolina Dziugaite and
Daniel M. Roy. Neural network matrix factorization.
CoRR, abs/1511.06443, 2015.

[Feng et al., 2015] Shanshan Feng, Xutao Li, Yifeng Zeng,
Gao Cong, Yeow Meng Chee, and Quan Yuan. Person-
alized ranking metric embedding for next new poi recom-
mendation. In Twenty-Fourth International Joint Confer-
ence on Artiﬁcial Intelligence, 2015.

[Guo et al., 2015] Guibing Guo, Jie Zhang, Zhu Sun, and
Neil Yorke-Smith. Librec: A java library for recommender
systems. In UMAP Workshops, volume 4, 2015.

[He and Chua, 2017] Xiangnan He and Tat-Seng Chua. Neu-
ral factorization machines for sparse predictive analytics.
In Proceedings of the 40th International ACM SIGIR con-
ference on Research and Development in Information Re-
trieval, pages 355–364. ACM, 2017.

[Hidasi et al., 2015] Bal´azs Hidasi, Alexandros Karat-
zoglou, Linas Baltrunas, and Domonkos Tikk. Session-
based recommendations with recurrent neural networks.
arXiv preprint arXiv:1511.06939, 2015.

[Hsieh et al., 2017] Cheng-Kang Hsieh, Longqi Yang, Yin
Cui, Tsung-Yi Lin, Serge Belongie, and Deborah Estrin.
Collaborative metric learning. In Proceedings of the 26th
international conference on world wide web, pages 193–
201. International World Wide Web Conferences Steering
Committee, 2017.

[Koren et al., 2009] Yehuda Koren, Robert Bell, and Chris
Volinsky. Matrix factorization techniques for recom-
mender systems. Computer, (8):30–37, 2009.

[Li et al., 2017] Piji Li, Zihao Wang, Zhaochun Ren, Lidong
Bing, and Wai Lam. Neural rating regression with abstrac-
tive tips generation for recommendation. In Proceedings
of the 40th International ACM SIGIR conference on Re-
search and Development in Information Retrieval, pages
345–354. ACM, 2017.

[Rendle et al., 2009] Steffen Rendle, Christoph Freuden-
thaler, Zeno Gantner, and Lars Schmidt-Thieme. Bpr:
Bayesian personalized ranking from implicit feedback. In
UAI, 2009.

[Rendle, 2010] Steffen Rendle. Factorization machines. In
2010 IEEE International Conference on Data Mining,
pages 995–1000. IEEE, 2010.

[Rendle, 2012] Steffen Rendle. Factorization machines with
libfm. ACM Transactions on Intelligent Systems and Tech-
nology (TIST), 3(3):57, 2012.

[Sedhain et al., 2015] Suvash Sedhain, Aditya Krishna
Menon, Scott Sanner, and Lexing Xie. Autorec: Au-
In WWW,
toencoders meet collaborative ﬁltering.
2015.

[Shani and Gunawardana, 2011] Guy Shani and Asela Gu-
nawardana. Evaluating recommendation systems. In Rec-
ommender systems handbook, pages 257–297. Springer,
2011.

[Tang and Wang, 2018] Jiaxi Tang and Ke Wang. Person-
alized top-n sequential recommendation via convolutional
sequence embedding. In Proceedings of the Eleventh ACM
International Conference on Web Search and Data Min-
ing, pages 565–573. ACM, 2018.

[Tay et al., 2018] Yi Tay, Luu Anh Tuan, and Siu Cheung
Hui. Latent relational metric learning via memory-based
attention for collaborative ranking. In Proceedings of the
2018 World Wide Web Conference on World Wide Web,
pages 729–739. International World Wide Web Confer-
ences Steering Committee, 2018.

[Wu et al., 2016] Yao Wu, Christopher DuBois, Alice X
Zheng, and Martin Ester. Collaborative denoising auto-
encoders for top-n recommender systems. In Proceedings
of the Ninth ACM International Conference on Web Search
and Data Mining, pages 153–162. ACM, 2016.

[Xiao et al., 2017] Jun Xiao, Hao Ye, Xiangnan He, Han-
wang Zhang, Fei Wu, and Tat-Seng Chua.
Atten-
tional factorization machines: Learning the weight of fea-
ture interactions via attention networks. arXiv preprint
arXiv:1708.04617, 2017.

[Yang et al., 2018] Longqi Yang, Eugene Bagdasaryan,
Joshua Gruenstein, Cheng-Kang Hsieh, and Deborah Es-
trin. Openrec: A modular framework for extensible and
In Proceedings
adaptable recommendation algorithms.
of the Eleventh ACM International Conference on Web
Search and Data Mining, pages 664–672. ACM, 2018.
[Zhang et al., 2018a] Shuai Zhang, Yi Tay, Lina Yao, and
Aixin Sun. Next item recommendation with self-attention.
arXiv preprint arXiv:1808.06414, 2018.

[Zhang et al., 2018b] Shuai Zhang, Lina Yao, Aixin Sun,
Sen Wang, Guodong Long, and Manqing Dong. Neurec:
on nonlinear transformation for personalized ranking. In
Proceedings of the 27th International Joint Conference
on Artiﬁcial Intelligence, pages 3669–3675. AAAI Press,
2018.

[Zhang et al., 2019] Shuai Zhang, Lina Yao, Aixin Sun, and
Yi Tay. Deep learning based recommender system: A sur-
vey and new perspectives. ACM Comput. Surv., 52(1):5:1–
5:38, February 2019.

