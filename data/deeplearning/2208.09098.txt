2
2
0
2

g
u
A
9
1

]

M

I
.
h
p
-
o
r
t
s
a
[

1
v
8
9
0
9
0
.
8
0
2
2
:
v
i
X
r
a

MNRAS 000, 1–14 (2022)

Preprint 22 August 2022

Compiled using MNRAS LATEX style ﬁle v3.0

Discovering Faint and High Apparent Motion Rate Near-Earth Asteroids
Using A Deep Learning Program

Franklin Wang1,2, ★ Jian Ge3, † Kevin Willis1
1Science Talent Training Center, Gainesville, FL 32606, USA
2Palo Alto Senior High School, 50 Embarcadero Road, CA 94301, USA
3Division of Optical Astronomical Instrumentation, Shanghai Astronomical Observatory, 80 Nandan Road, 200030, China

Accepted 2022 August 16. Received 2022 August 05; in original form 2022 June 03

ABSTRACT
Although many near-Earth objects have been found by ground-based telescopes, some fast-moving ones, especially those near
detection limits, have been missed by observatories. We developed a convolutional neural network for detecting faint fast-moving
near-Earth objects. It was trained with artiﬁcial streaks generated from simulations and was able to ﬁnd these asteroid streaks
with an accuracy of 98.7% and a false positive rate of 0.02% on simulated data. This program was used to search image data
from the Zwicky Transient Facility (ZTF) in four nights in 2019, and it identiﬁed six previously undiscovered asteroids. The
visual magnitudes of our detections range from ∼19.0-20.3 and motion rates range from ∼6.8-24 deg/day, which is very faint
compared to other ZTF detections moving at similar motion rates. Our asteroids are also ∼1 - 51 m diameter in size and ∼5 - 60
lunar distances away at close approach, assuming their albedo values follow the albedo distribution function of known asteroids.
The use of a purely simulated dataset to train our model enables the program to gain sensitivity in detecting faint and fast-moving
objects while still being able to recover nearly all discoveries made by previously designed neural networks which used real
detections to train neural networks. Our approach can be adopted by any observatory for detecting fast-moving asteroid streaks.

Key words: minor planets, asteroids: general – methods: data analysis

1 INTRODUCTION

Near-Earth objects (NEOs), which consist of asteroids and comets
that have a perihelion distance of less than 1.3 AU, are of signiﬁcant
interest to the general public due to the impacts with Earth. Most
notably, around 65 million years ago, an impact from a 5 to 15
km diameter asteroid is believed to have led to the extinction of
the dinosaurs (Alvarez et al. 1980). There have however, also been
notable asteroid collisions within the last century. For instance, the
∼19 m Chelyabinsk meteor in 2013 exploded over a city in Russia,
injuring many people, and the ∼40 m Tunguska meteor in 1908
exploded above a Siberian forest, ﬂattening 80 million trees and
generating an explosion at least ten times larger than the Chelyabinsk
meteor. Based on past impacts, asteroids 19 m and larger are predicted
to collide with Earth roughly every 25 years, and thus pose a threat
to Earth (Brown et al. 2013).

Because of the danger NEOs pose, NASA’s goal, set in 2005,
was to be able to ﬁnd 90% of asteroids above 140 m in diameter
before 2020 (NASA 2007). However, so far only around 30% of the
predicted 25,000 near Earth asteroids between 140 m and 1 km in
diameter have been found. This is extremely concerning, as asteroids
below 140 m have even less detection completeness and still pose a
signiﬁcant risk to the Earth. For instance, just 0.1% of the predicted
number of near Earth asteroids between 19 m and 44 m have been
discovered (B612 Foundation 2020).

★ E-mail: wfrankw9@gmail.com
† E-mail: jge@shao.ac.cn

© 2022 The Authors

Being able to discover NEOs also allows us to better understand
solar system formation, such as through sample collection missions
like OSIRIS-REx (Lauretta et al. 2017) and through improved un-
derstandings of asteroid parameter distributions (DeMeo & Carry
2014).

Asteroids with a high enough apparent motion will leave “streaks"
on telescope exposures as they move signiﬁcantly during a telescope
exposure. By speciﬁcally searching for these streaks, we can improve
our ability to detect fast moving asteroids as streaks allow us to
measure the approximate direction and speed of travel, making it
much easier to link detections together.

There have been many examples of streak detection algorithms
that leverage conventional computer vision techniques. For instance,
Nir et al. (2018) uses an approach based on the Radon transform to
ﬁnd asteroid streaks and Dawson et al. (2016) uses an approach that
leverages signal-matched-ﬁlters. These works are able to eﬀectively
detect very dim streaks, but they are intended for use on streaks
hundreds of pixels in length, and do not work as well for shorter
streaks (Nir et al. 2018; Dawson et al. 2016).

To overcome this issue, one strategy that has been recently adopted
is the use of Convolutional Neural Networks (CNNs), a type of
deep learning model that is highly eﬀective for image classiﬁcation.
CNNs have been used by the Asteroid Terrestrial-impact Last Alert
System (ATLAS) in Rabeendran & Denneau (2021) and the Zwicky
Transient Facility (ZTF) in Duev et al. (2019a) to reduce the number
of possible asteroid streak candidates that human scanners have to
review.

However, both of these methods have the drawback of incorporat-

 
 
 
 
 
 
2

F. Wang et al.

ing real asteroid streak images in their datasets, which limited the
size of their training datasets and likely biased them towards bright
streaks. This is because asteroid streaks can be somewhat rare and
it is much easier to ﬁnd bright asteroid streaks than fainter ones (Ye
et al. 2019). For instance, the dataset used to train the CNN classi-
ﬁer for ATLAS only contains around 500 streaks and the dataset for
ZTF only has roughly 15,000 streaks, even though it combines both
simulated streaks and real data (Rabeendran & Denneau 2021; Duev
et al. 2019a). The use of real streaks as opposed to simulated streaks
also makes it diﬃcult for these approaches to be applied to other
observatories, who may not already have access to a large labelled
dataset of streaks.

To overcome these limitations, this work strives to use a large,
purely simulated dataset of asteroid streaks that focuses on fainter,
harder to detect asteroid streaks. While using a purely simulated
dataset for asteroid streak detection has been pursued by Lieu et al.
(2019) in preparation for the future Euclid mission, their model has
diﬃculty detecting short streaks (only 50% accuracy for streaks 15
to 30 pixels in length) and has not yet been applied to real datasets.
Because ZTF has released full nights of data to the public from
past years, and to provide a comparison between this work and the
research conducted by ZTF, we utilize publicly released data from
ZTF spanning from 2018 to 2019.

In this paper, we describe our data collection and simulations,
neural network, false positive reduction, and full detection pipeline
methodology in section 2; our results and discoveries in section 3;
and discussion and summary in section 4.

2 METHODOLOGY

The most optimal way to detect asteroid streaks would be to simulate
every possible streak – all the possible orientations, lengths, and
brightnesses – and see how closely every region in an image matches
that streak (Nir et al. 2018). This is, obviously, not feasible due
to the high computational power required. Instead, our approach
is to generate a large dataset of simulated streaks and then create a
classiﬁer using a convolutional neural network to distinguish between
images with or without a true streak.

2.1 Dataset Collection and Simulations

2.1.1 Real Streak Data Collection

To ensure our dataset of simulated streaks adequately matches real
asteroid streaks, we collect a small dataset of real streaks by ﬁrst
collecting a list of the asteroids which made a close approach to
Earth of within 30 lunar distances during the ZTF survey’s timeframe
using the NASA CNEOS NEO Earth Close Approaches database1.
We then use the Moving Object Search Tool provided by IRSA
to extract all occurrences of these asteroids within ZTF’s survey
images where the asteroid will be moving fast enough to leave a
trail longer than 10 pixels in length (Yau et al. 2011). From this
we have found the distributions for the streak lengths and widths
described by the Gaussian PSF 𝜎 parameter (see Equation 1) shown
in Figures 1 and 2. These distributions are used in the next section to
help sample streak parameters, although we later decided to include
shorter streaks less than 10 pixels in length in our dataset to ensure
that shorter streaks could also be detected. This dataset of real streaks
is not used to directly train the model. Instead, the training dataset

1 https://cneos.jpl.nasa.gov/ca/

MNRAS 000, 1–14 (2022)

Figure 1. Normalized histogram of lengths of asteroid streaks from our set
of real asteroid streaks.

Figure 2. Normalized histogram of the Gaussian PSF 𝜎 parameter (see
Equation 1) of asteroid streaks from our set of real asteroid streaks.

we use is completely simulated, which helps ensure there is no bias
due to real streaks tending to be brighter.

2.1.2 Streak Simulation

In order to generate simulated images of asteroid streaks, we model
an image from an asteroid as being generated according to a 2D
Gaussian PSF, which has been shown to accurately model asteroid
streaks in Vereš et al. (2012). Because the asteroid moves during
the 30-second exposure, we can calculate the pixel intensities by
convolving a line of pixels by a 2D Gaussian kernel, which results in
the following equation from Ye et al. (2019) for the ﬂux at position
𝑥, 𝑦 for a streak with angle to the horizontal 𝜃, PSF width 𝜎, length
𝐿, center 𝑥0, 𝑦0 and total ﬂux Φ

𝐹 (𝑥, 𝑦) =

Φ
√
2𝜎𝐿

2𝜋

exp

(cid:18)

−

𝑦(cid:48)2
2𝜎2

(cid:19) (cid:32)

erf

(cid:33)

(cid:32) 𝑥(cid:48) + 𝐿
2
√
𝜎
2

− erf

(cid:33)(cid:33)

(cid:32) 𝑥(cid:48) − 𝐿
2
√
𝜎
2

where we deﬁne erf(𝑧) as
∫ 𝑧

erf(𝑧) =

2
𝜋

0

𝑒𝑡 2 𝑑𝑡

and 𝑥(cid:48) and 𝑦(cid:48) as
𝑥(cid:48) = (𝑥 − 𝑥0) cos 𝜃 + (𝑦 − 𝑦0) sin 𝜃
𝑦(cid:48) = −(𝑥 − 𝑥0) sin 𝜃 + (𝑦 − 𝑦0) cos 𝜃

(1)

(2)

(3)

(4)

1020304050PixelLength0.0000.0250.0500.0750.1000.125Proportion0123PSFσ0.000.020.040.060.080.100.12ProportionZTF’s data consists of science images, which are individual ob-
served data frames; reference images, which are combined images
containing static background stars; and diﬀerence images, which con-
sist of transients generated by subtracting the science images from the
reference images. In order to generate a training sample, a streak is
generated using the 2D Gaussian PSF model and then implanted into
a randomly selected 80 by 80 pixel region of a science image. The
corresponding 80 by 80 pixel region of the reference image is also
extracted. This gives us a science-reference pair of images, which
will be input into a convolutional neural network. Though past work
by ZTF (Duev et al. 2019a) and ATLAS (Rabeendran & Denneau
2021) only input diﬀerence image cutouts into their machine learning
models, we have found that by using science and reference images,
more information is conserved as image subtraction causes informa-
tion from the science and reference images to be lost. Science and
reference image cutouts are also used by more recent works by ZTF
such as Duev et al. (2019b) and Duev et al. (2021).

To generate a full dataset of asteroid streaks, we repeat the streak
creation and implanting process multiple times by randomly sam-
pling the required parameters. Firstly, the rotations are sampled ran-
domly from 0 to 360 degrees to ensure streaks of all orientations can
be found. The center of the asteroid streak is then randomly paced
within 10 pixels of the center of the image. This is to account for the
fact that when we deploy the model, some of the streaks input into
the model might not be perfectly centered.

The lengths of each streak are randomly sampled using the fol-
lowing procedure. The distribution of real streak lengths allows us to
ensure that the synthetic streaks will roughly match real streaks and
the other half of the dataset is to ensure that short and long streaks
can still be eﬀectively detected. Although streaks can be longer than
50 pixels, oftentimes they will belong to satellites which move ex-
tremely quickly in the sky. Thus, in order to reduce the number of
false positives, we set 50 pixels as the maximum limit and focus on
shorter streaks.

(i) 50% are sampled from a distribution of streak lengths obtained

from a set of real asteroid streaks.

(ii) 30% are randomly sampled from a uniform distribution that
is between 7 to 12 pixels, which allows us to better target shorter
asteroid streaks that are more common than longer ones.

(iii) 20% are randomly sampled from a uniform distribution that
is between 30 to 50 pixels, which allows us to also ensure longer ones
can still be detected.

The brightnesses of each streak are then randomly sampled in the
following steps. This allows us to create a dataset that targets faint
streaks while still including some brighter streaks which are easier
to ﬁnd.

(i) We ﬁrst ﬁnd the approximate minimum visible streak ampli-
tude by multiplying the standard deviation for the region of pixels
behind where we want to implant the streak by 3.25. We have ex-
perimented with the cutoﬀ and have found that 3.25 is roughly the
minimum factor needed for the streak to be visible by a human view-
ing the image, otherwise the streak is too dim and is hard to tell apart
from noise.

(ii) This minimum amplitude is then multiplied by a randomly
chosen “factor". For 80% of streaks, this factor is randomly selected
from the right half of a normal distribution (so we only get numbers
above the mean) with mean 1 and standard deviation 0.5. For 20% of
streaks, this factor is randomly selected uniformly from 1.75 to 3.5.
(iii) For shorter asteroids (<12 pixels), we increase the factor by

Deep Learning for Asteroid Streak Detection

3

Figure 3. Example of a diﬀraction spike. By not generating streaks which
are on top of bright stars, the number of diﬀraction spike detections drops
signiﬁcantly.

Figure 4. Examples of synthetic streaks and the parameters used to create
them. Notice when the brightness factor is close to 1 (top left), the streak is
extremely faint. The PSF width parameter corresponds to roughly half of the
overall width of the streak, but if the streak is very bright it may have a larger
width than expected.

30% since otherwise they will not be visible due to the small area
that they cover.

The widths of each streak are sampled from a distribution of streak
widths obtained from a set of real streaks. Generally, the widths of
streaks do not vary immensely, as there usually are not any extremely
thin or wide streaks, and thus we do not use any other special sampling
besides the distribution of widths of real streaks.

To prevent detections of diﬀraction spikes (see Figure 3), asteroid
streaks are prevented from being inserted on top of a large area
which contains pixels 5𝜎 above the background. This prevents the
model from recognizing streak-like objects which overlap extremely
bright stars, which are largely diﬀraction spike artifacts produced
by extremely saturated stars. The introduction of this change to the
dataset has resulted in a signiﬁcant drop in the number of diﬀraction
spike detections.

Overall, we generate roughly 400,000 streaks (see Figure 4) to
train our machine learning model. The extremely large size of this
dataset ensures that the model is able to be exposed to a large variety
of streaks, especially faint ones, and also prevents the model from
overﬁtting on the data, which is where the model simply memorizes
each data sample rather than learning how to extrapolate the results
to unseen data.

In addition, to ensure that the CNN will not simply recognize
streak-like objects in the science image, but will also make sure
that they are a transient object not present in the reference image,

MNRAS 000, 1–14 (2022)

Length:26BrightnessFactor:1.1PSFWidth:0.9Length:11BrightnessFactor:1.5PSFWidth:0.8Length:19BrightnessFactor:1.8PSFWidth:1.3Length:51BrightnessFactor:1.4PSFWidth:1.0Length:17BrightnessFactor:1.1PSFWidth:0.8Length:12BrightnessFactor:3.2PSFWidth:1.14

F. Wang et al.

we generate ∼100,000 negative samples consisting of a science and
reference pair with the same streak inserted into both pictures. This
prevents the CNN from falsely detecting streak-like objects such as
galaxies which are not transients and will appear in both the science
and reference images.

2.1.3 Diﬀerence Image Preprocessing

In order to reduce the number of regions the machine learning model
has to look at, an initial preprocessing step is used to ﬁnd potential
transients in the diﬀerence images which are then fed into the machine
learning model. These transients include asteroid streaks but will
largely consist of false positives like artifacts, which is why we need a
CNN that will take in these transients to determine if they are asteroid
streaks. This preprocessing lets us avoid having to search every region
of every image, thus reducing the processing time required, and works
as follows:

(i) The diﬀerence image’s background and background standard

deviation is computed using the sep library (Barbary 2016).

(ii) A mask containing only pixels 1.3 standard deviations above

the background is created, which allows us to ﬁnd bright pixels.

(iii) Contiguous regions with at least 15 pixels and a fullness
greater than 0.5, are kept while other regions are rejected. The fullness
is computed by dividing the number of pixels in the region by the
number of pixels of the convex hull of the region, which allows us
to ﬁlter out badly subtracted stars which usually have empty regions
within them. We also reject any regions with a fullness exactly equal
to 1, since those are usually artifacts shaped like perfect rectangles.
(iv) The pixel positions of the centers of each region are stored
and then projected onto the respective reference images (this step is
to align the pixel positions of the transients on the diﬀerence image
to the reference image since they will not be perfectly aligned). These
projected positions are the output of the pipeline.

This preprocessing method has signiﬁcant advantages over
ZStreak, ZTF’s streak processing pipeline, as it can detect vertical
and horizontal streaks because it does not use the Pearson correlation
coeﬃcient for ﬁltering and has much less restrictions on the prop-
erties of streaks. For instance, ZStreak employs a threshold of 1.5
𝜎 while we only use a 1.3𝜎 threshold, allowing for dimmer objects
to be found (Duev et al. 2019a). Our method is also extremely fast
due to its simplicity and the fact that it does not use any complex
algorithms like streak ﬁtting. In addition, the thresholds imposed on
their properties of the transients are very relaxed, allowing for more
complete detections of streaks. The thresholds were tuned so that
roughly 98% of streaks in our real streaks dataset would be detected
(only 9 out of 402 streaks failed). Examples of streaks which are
detected by the preprocessing step can be found in Figure 5 and ones
which are not can be found in Figure 6. The ones that were not de-
tected were all extremely short and faint, barely visible to the human
eye.

The vast majority of the detections produced by this pipeline are
not real asteroid streaks. Because of this, we run this pipeline on
random diﬀerence images, then extract the respective science and
reference image regions corresponding to the positions returned to
create negative samples for our dataset, totaling to around 400,000
negative samples to be used for our convolutional neural network.
These negative samples overwhelmingly consist of artifacts and ran-
dom noise. Additionally, we use the astcheck program to ensure that
these negative samples do not contain any known asteroids, greatly
reducing the number of incorrect training samples as it is extremely

MNRAS 000, 1–14 (2022)

Figure 5. Examples of very faint real asteroid streaks detected by the diﬀer-
ence image preprocessing algorithm.

Figure 6. Examples of real asteroid streaks missed by the diﬀerence image
preprocessing algorithm. All of the missed detections consist of extremely
short and faint streaks.

unlikely for there to be an undiscovered asteroid streak in the negative
samples2.

2.2 Neural Network Model

The classiﬁer that we use in this paper to ﬁnd asteroid streaks is a
convolutional neural network (CNN), speciﬁcally a modiﬁed version
of EﬃcientNet-B1 (Tan & Le 2019). CNNs have had much success
in being able to diﬀerentiate between diﬀerent classes of images
and achieve state-of-the-art performance on classiﬁcation tasks like
ImageNet, which involves classiﬁcation of images into object cate-
gories like birds, cars, and screwdrivers (Russakovsky et al. 2015).

2 https://www.projectpluto.com/astcheck.htm

Deep Learning for Asteroid Streak Detection

5

Layer

Input Shape

Output Shape

# Params

EﬃcientNet-B1 Backbone
Global Avg Pooling
Fully Connected
Fully Connected

(80, 80, 2)
(3, 3, 1280)
1280
256

(3, 3, 1280)
1280
256
1

6574944
0
327936
257

Table 1. The modiﬁed EﬃcientNet-B1 architecture that we use.

Figure 8. Example of a cosmic ray artifact (left image), which is then removed
using AstroSCRAPPY (right image). Notice how the cosmic ray has very
sharp edges while asteroid streaks have soft edges, which reﬂects the diﬀering
PSFs that can be exploited to detect and remove cosmic rays.

apply a dropout rate of 0.2, which causes 20% of neurons in the CNN
to be randomly omitted during each iteration of training. Dropout has
been shown to be eﬀective in reducing overﬁtting by making it harder
for neural networks to reliably memorize training data (Srivastava
et al. 2014).

This model was implemented using the Keras (Chollet et al. 2015)
and EﬃcientNet Python libraries3. To train the CNN, we used the
binary cross-entropy loss function, a smaller batch size of size 32
to further reduce overﬁtting (Masters & Luschi 2018) and the Adam
optimizer (Kingma & Ba 2014). We used an NVIDIA 2080 TI GPU
to increase training speed.

2.3 False Positive Reduction

To reduce the number of false positives the model outputs, artifacts
which may be detected as a false positive must be removed. The three
types of false positives prevalent in ZTF data are cosmic rays, ghosts,
and crosstalk.

Cosmic rays are produced when highly energized particles strike
CCDs. This produces transient streak-like objects in the images (see
Figure 8). One of the weaknesses of our normalization algorithm
is that it is hard for the CNN to diﬀerentiate asteroid streaks and
cosmic rays since cosmic rays are distinct in that they are very bright
and their pixels are not distributed according to a standard point
spread function, but these nuances are lost due to the clipping of
bright pixels. However, there have been many algorithms developed
that can eﬀectively exploit the unique appearances of cosmic rays
to remove them from images. To remove cosmic rays, we employ
the AstroSCRAPPY library, which is based upon the LA Cosmic
algorithm (McCully et al. 2018). The LA Cosmic algorithm uses
Laplacian edge detection to diﬀerentiate cosmic rays from other
sources of light (van Dokkum 2001). This allows us to detect cosmic
rays in an image, and then mask them out, as is done in Figure 8.

Ghosts are created by charge spillages from saturated pixels in
the same image. These ghosts are horizontal streaks located at a set

Figure 7. Example of using the normalization algorithm to normalize an
image region. Notice how in the left image the bright stars on the bottom left
dominate the image, making the rest of the image almost invisible. When we
normalize the image (as shown on the right), those bright pixel values are
clipped, and thus we can better see the rest of the image.

CNNs accomplish this through combination of many diﬀerent “lay-
ers" which are trained to recognize images using training data and
gradient descent.

EﬃcientNet is a family of CNN models that currently has one
of the highest accuracy to performance ratios, which is important
as we want a model that runs quickly and has high accuracy at
the same time. EﬃcientNet is able to achieve its high eﬃciency
by computationally searching for the best model conﬁguration and
method for scaling up the size of the CNN (Tan & Le 2019).

We chose to use EﬃcientNet-B1 (the 2nd smallest version of the
model) in order to allow for higher accuracy than the B0 model (the
smallest version) while still allowing the CNN to be run quickly on
most GPUs. Because the EﬃcientNet model is intended to be used
on RGB images from the ImageNet dataset, we modify the inputs
to contain two 80 by 80 images – the science and reference cutouts
– and the output to be a probability from 0 to 1 – representing the
probability the image contains an asteroid streak. This is done using
an EﬃcientNet-B1 backbone and then modifying the ﬁnal layers to
use global pooling and fully connected layers to process the feature
vector output by EﬃcientNet (see Table 1).

The raw image data can not be passed directly into the machine
learning model as the pixel values can vary widely due to extremely
bright stars. If we input these numbers directly into a neural network,
we may run into overﬂow errors. Moreover, extremely bright stars
will dominate images and make dim streaks almost invisible in com-
parison (see Figure 7). However, the full range of brightnesses is not
necessary, especially since this paper focuses on fainter asteroids.

To normalize both the science and reference images, the image
background intensity and background RMS is computed using the
sep library, which is based upon the popular Source Extractor library
(Barbary 2016; Bertin & Arnouts 1996). This allows us to standardize
each pixel in the image by computing the diﬀerence between the
pixel and the background intensity and then dividing that diﬀerence
by the standard deviation. Pixel values below −5 and above 5 are
clipped to −5 and 5, respectively, since extremely low and high pixel
values do not provide much useful information, allowing us to focus
on dimmer pixels which may belong to streaks. This gives us the
following equation for normalizing each pixel 𝑝:
(cid:18)

(cid:19)(cid:19)

(cid:18)

𝑝norm = max

−5, min

5,

(5)

𝑝 − 𝜇bkg
𝜎bkg

To reduce overﬁtting, where the CNN “memorizes" the training
data rather than learning how to extrapolate to unseen samples, we

3 https://github.com/qubvel/efficientnet

MNRAS 000, 1–14 (2022)

0100200050100150200250BeforeNormalization0100200050100150200250AfterNormalization6

F. Wang et al.

Figure 9. Example of a ghost artifact, which appears as a horizontal streak-
like object on the right of the top image. The top image shows how saturated
pixels of a star in one area of an image can cause charge spillage ghosts to
appear in another area of the image. The second row of images shows how
the saturated pixels can be extracted and converted to a mask. The ﬁnal row
shows how this mask can be applied to remove ghost artifacts.

distance in front of or behind a cluster of saturated pixels and are
typically up to 50 pixels in width (Zwicky Transient Facility 2020).
To remove these, we mask out pixels which are a certain distance
in front of or behind a saturated pixel and the 50 pixels in front
and behind it to account for the width (see Figure 9). Although this
sometimes leads to masking of pixels without ghosts, since charge
spillage does not always occur, the number of pixels masked in an
image is extremely small compared to the total number of pixels in
the image (<1%).

Crosstalk is an artifact produced when a strong signal in one CCD
quadrant (channel) is electronically replicated onto another quadrant.
To remove such artifacts, the pixel locations of strong signals (e.g.
saturated pixels) are masked in both quadrants aﬀected by crosstalk
(see Figure 10). We observed that the CCD pairs aﬀected by bi-
directional crosstalk are quadrants 1-2 and 3-4.

2.4 Full Pipeline

The components used for training the neural network are combined
together to create a pipeline for detecting asteroids. To process one
night of data, we use the following procedure on every single triplet
of the corresponding science, reference, and diﬀerence images to
search for asteroid streaks. The result of this is a large set of potential
asteroid streak candidates.

(i) The diﬀerence image preprocessing pipeline is used to extract
transient objects, which will include asteroid streaks but mostly arti-
facts and other non-streak transients. The positions of these transients
are projected from the diﬀerence image onto the reference image.

(ii) The science image is aligned to the reference image using
the SWarp program (Bertin 2010). This is to account for diﬀerences
in rotation and position of the science and reference images. The
positions obtained from Step 1 are used to extract 80 by 80 pixel
crops from the aligned science and reference images, where the
center of the crop corresponds to the center of the transients.

(iii) All the crops are normalized using the normalization process

MNRAS 000, 1–14 (2022)

Figure 10. Example of crosstalk. The aggressor pixels on the top left image
(quadrant 2), create crosstalk artifacts in the bottom left image (quadrant 1).
A mask, as shown by the top right image, is generated from saturated pixels
in quadrant 2 and is used to mask out the crosstalk to get the image in the
bottom right image. Note that there are two stars on top of the crosstalk on
the bottom half of the artifact which may make it appear as if the artifact was
not completely masked out.

described in Section 2.2 and Equation 5. These normalized images
are then inputted into the trained convolutional neural network, which
outputs probabilities for each science-reference pair.

(iv) These probabilities are thresholded using a threshold of 0.85,
so that probabilities above 0.85 are considered to be positive detec-
tions and ones below 0.85 are considered to be negative detections.
This gives us a set of images which the CNN believes contain asteroid
streaks.

(v) Cosmic rays, crosstalk, and ghosts are removed from the orig-
inal un-normalized images of the positive detections if present and
the cleaned images are re-normalized and re-inputted into the CNN.
This allows us to reduce computation time by only running the false
positive reduction on the small subset of positive detections from the
CNN.

Each streak candidate is then visually checked and false positives
are removed. Detections with the same orientation and length along
with a corresponding motion rate and movement direction are linked
together. The astcheck4 program is then used to check if the detec-
tion corresponds to a previously discovered asteroid and the sat_id5
program is used to ensure it does not correspond to a known artiﬁcial
satellite.

3 RESULTS

3.1 CNN Training Results

The validation dataset that we use consists of a subset of our dataset
which is set aside and not trained on, so that we can evaluate the

4 https://www.projectpluto.com/astcheck.htm
5 https://www.projectpluto.com/sat_id.htm

AggressorImageRegionSaturatedPixelsMaskGhostArtifactMaskedImageAggressorImageRegionMaskCrosstalkArtifactMaskedImageVal. Acc

False Positive Rate

True Positive Rate

ROC AUC

Date

Asteroid

# of Detections

98.7%

0.02%

97.0%

99.99%

2019/06/05

ZTF03XO

53

Deep Learning for Asteroid Streak Detection

7

Table 2. Metrics showing the performance of the convolutional neural net-
work. The ROC AUC is the area under the curve of the receiving operator
characteristic which plots the true positive rate against the false positive rate
for diﬀerent thresholds (see Figure 11).

Figure 11. The receiving operator characteristic plot which shows the true
positive rate required to have a certain false positive rate. Overall, the false
positive rate is extremely small for true positive rates less than 98%.

performance of our model on unseen data. We generate additional
positive and negative samples so that in total, 30% of our data is used
for the validation set, which is abnormally high for most machine
learning research. However since our false positive rate is extremely
low (∼0.02%), we must ensure that we have enough data to obtain
an accurate estimate of the false positive rate.

The ﬁnal performance of the CNN on the validation dataset can
be evaluated on the metrics in Table 2 and the receiving operator
characteristic (ROC) curve which plots the true positive rate against
the corresponding false positive rate (see Figure 11). Overall, the
accuracy for the validation dataset is extremely high at 98.7% while
still maintaining an extremely low false positive rate of just 0.02%.
This low false positive rate is critical to reducing the number of
images outputted by the CNN per night since the vast majority of
images do not contain asteroid streaks.

3.2 CNN Performance on ZTF’s Reported Streaks

We collected a set of real streaks from ZTF’s submissions to the
Minor Planet Center. The submissions falling within the date range
of ZTF’s publicly available data were then kept, and cutouts of the
corresponding streaks are extracted. This dataset of real streaks dif-
fers from the one used to generate the distributions of our simulated
data since it only uses streak detections which ZTF has veriﬁed and
reported to the MPC. This allows us to directly compare our model’s
performance on streaks which ZTF’s DeepStreaks model (Duev et al.
2019a) has successfully detected. We incorporate data from detec-
tions of conﬁrmed asteroids and unconﬁrmed asteroids (which are
objects with a short observational arc located in the MPC’s Isolated
Tracklet File). Since this research focuses on shorter streaks, we
remove streaks longer than 50 pixels in length.

After running our CNN on the original images that contain these
previously detected streaks, we plotted the visual magnitude and

2019/06/06

2019/06/07

New NEO #1
New NEO #2
New NEO #3
ZTF03c6
2014 MF18

New NEO #4
New NEO #5
2019 KA4
2019 LW4
2014 MF18

3
2
2
2
3

2
4
5
6
5

2019/06/08

New NEO #6

103

Table 3. Summary of all detections from each of the four nights.

motion rates (lengths of streaks) of the correct and incorrect classiﬁ-
cations (see Figure 12). Overall, our detection completeness is very
high, roughly matching the true positive rate for simulated data. The
detection completeness for conﬁrmed asteroids is 97.4% and 95.6%
for unconﬁrmed asteroids. For simulated data the true positive rate
is 97.0%. We plot the missed detections in Figures 13 and 14.

3.3 Discoveries Overview

Our pipeline was run on the following nights of data from the ZTF
public data releases: 2019/06/05-08. The DeepStreaks algorithm be-
gan making discoveries in November of 2018, so the data from 2019
allows us to verify that the streaks which we detect were not found by
DeepStreaks, thus demonstrating improvement over their algorithm.
Our new discoveries of asteroids and detections of previously
discovered ones are summarized in Table 3. In just four nights of
data, we were able to ﬁnd six new NEOs and detections of ﬁve
asteroids ZTF and others have discovered previously. Images of these
new asteroids are shown in Figure 15. Note that only two streaked
detections of an asteroid are needed to consider it a discovery since
each streak contributes two sets of positions and time (one at each
endpoint of the streak, which correspond to the start and end of the
exposure). This gives us four sets of astrometry which is enough to
ﬁt a preliminary orbit.

3.4 Streak Discovery Parameters

For each of our streaks, we ﬁt a Gaussian PSF model (see Equation 1)
using the Markov chain Monte Carlo (MCMC) method to minimize
the mean squared error between the pixels in the diﬀerence image
and the model. To accomplish this, the approximate locations of the
ends of the streak are identiﬁed by hand. Then, a pill shaped mask is
generated by ﬁnding all the pixels within 5 pixels of the line segment
connecting the two points. The pixels in the mask are then used to
perform the MCMC least-squares ﬁt, which is done using the emcee
library (Foreman-Mackey et al. 2013). Using MCMC allows us to
quantify the uncertainties in each of the parameters. An example
of a corner plot created from the MCMC sampled streak ﬁtting
parameters can be found in Figure 16.

We also use the mask as a pill aperture for measuring the visual
magnitude of our streaks. This is done by directly summing over the
diﬀerence image (which roughly has a background of 0) pixels that
are within the aperture using Equation 7, where 𝐹𝑖 𝑗 refers to diﬀer-
ence image pixel intensity (in ADUs), ZP is the photometric zero

MNRAS 000, 1–14 (2022)

0.00000.00020.00040.00060.00080.0010FalsePositiveRate0.900.920.940.960.981.00TruePositiveRate8

F. Wang et al.

Figure 12. Visual magnitude and length of streaks discovered by ZTF in addition to whether our CNN was able to detect them. These streaks are divided into
conﬁrmed and unconﬁrmed (which tend to be fainter and thus more diﬃcult to obtain a longer observational arc).

Figure 13. All images of conﬁrmed streaks discovered by ZTF that
were incorrectly classiﬁed by our model. Left column consists of science
images and right column consists of reference images.

Figure 14. A random sample of ﬁve images of unconﬁrmed streaks
discovered by ZTF that were incorrectly classiﬁed by our model. Left
column consists of science images and right column consists of reference
images. The ﬁnal streak is heavily occluded by a star.

MNRAS 000, 1–14 (2022)

1020304050Length(arcsec)1617181920VisualMagnitude(mag)DetectionCompletenessConﬁrmed:97.4%DetectionCompletenessUnconﬁrmed:95.6%ConﬁrmedDiscoveries:DetectedConﬁrmedDiscoveries:MissedUnconﬁrmedDiscoveries:DetectedUnconﬁrmedDiscoveries:Missed050050050050050050050050050050050050050050050050050050050050050050050050050050050050Deep Learning for Asteroid Streak Detection

9

Figure 15. Science, reference, and diﬀerence image cutouts of our new asteroid discoveries. For asteroid #2, the diﬀerence cutout region for detection #2 was not
available from ZTF. Since we did not have access to the image diﬀerencing algorithm that ZTF uses, we were unable to calculate the diﬀerence image ourselves.
For brevity, we have only included four images of asteroid #6.

point, and AP_COR is the visual magnitude correction required for
an aperture with a radius of 5 pixels. These photometric parameters
are calculated by ZTF and included in headers of the diﬀerence im-
age FITS ﬁles. The uncertainty calculation is shown in Equation 9,
where 𝐹𝑠𝑐𝑖,𝑖 𝑗 is the science image pixel intensity (which produces
the shot noise), 𝑛 is the number of pixels, 𝑅 is the read noise (in e−),
𝐺 is the gain of the CCD (in e−/ADU), 𝐷 is the dark current (in
e−/sec), and 𝑡 is the exposure time (in seconds).

𝐹total =

∑︁ 𝐹𝑖 𝑗

𝑉 = −2.5 log10 (𝐹total) + ZP + AP_COR

𝐹total,err =

√︃

𝐺 (cid:205) 𝐹𝑠𝑐𝑖,𝑖 𝑗 + 𝑛𝑅2 + 𝑛𝐷𝑡
𝐺

√︄

𝑉err =

(cid:18) 2.5
ln 10

𝐹total,err
𝐹total

(cid:19)2

+ ZP2

err + AP_COR2
err

(6)

(7)

(8)

(9)

MNRAS 000, 1–14 (2022)

0500204060Ast.#1Det.#1Science0500204060Reference0500204060Diﬀerence0500204060Ast.#1Det.#2050020406005002040600500204060Ast.#1Det.#3050020406005002040600500204060Ast.#2Det.#1Science0500204060Reference0500204060Diﬀerence0500204060Ast.#2Det.#2050020406005002040600500204060Ast.#3Det.#1Science0500204060Reference0500204060Diﬀerence0500204060Ast.#3Det.#2050020406005002040600500204060Ast.#4Det.#1Science0500204060Reference0500204060Diﬀerence0500204060Ast.#4Det.#2050020406005002040600500204060Ast.#5Det.#1Science0500204060Reference0500204060Diﬀerence0500204060Ast.#5Det.#2050020406005002040600500204060Ast.#5Det.#3050020406005002040600500204060Ast.#5Det.#4050020406005002040600500204060Ast.#6Det.#1Science0500204060Reference0500204060Diﬀerence0500204060Ast.#6Det.#19050020406005002040600500204060Ast.#6Det.#55050020406005002040600500204060Ast.#6Det.#980500204060050020406010

F. Wang et al.

Figure 16. Example of corner plot of the streak ﬁtting parameter distribution for one of our asteroid discoveries (Asteroid #3, Detection #1) using the MCMC
algorithm. 𝑥1, 𝑥2, 𝑦1, and 𝑦2 correspond to the coordinates of each endpoint of the streak; ﬂux is the net ﬂux of the streak (in ADU); and psf 𝜎 is the 𝜎 of
the Gaussian PSF used to model the streak. The histograms for each parameter allow us to measure uncertainties using the percentiles. The 16th, 50th, and 84th
percentiles are shown as dashed lines while the PDF peak is shown in red.

From the MCMC ﬁts and photometry, we have obtained the as-
trometry, the length, the 𝜎 parameter of the Gaussian PSF kernel,
and the visual magnitude of each streak. We then use the astrometry
and visual magnitude to ﬁt orbits to each of our asteroids. Since our
observation arcs are extremely short, there is signiﬁcant uncertainity
in these orbits, and so we use the OpenOrb library, which uses statis-
tical orbital ranging to generate thousands of possible orbits (Granvik
et al. 2009). These orbits can be then sampled to ﬁnd the probability
distributions of the closest approach distances and H magnitudes.
The H magnitudes can then be converted to an approximate diameter
using the following formula from Bowell et al. (1989), where 𝑑 is the
diameter, 𝑎 is the albedo, and 𝐻 is the H magnitude. This formula
assumes that the asteroid is roughly spherical in shape and has a
uniform surface. We sample the albedo values from the distrbution
derived from WISE data in Wright et al. (2016) (see Figure 17).
𝑑 = 103.1236−0.5 log10

𝑎−0.2𝐻

(10)

MNRAS 000, 1–14 (2022)

Figure 17. The probability density function for the albedos of near-Earth
asteroids from Wright et al. (2016).

x1 = 37.57+0.240.2335.536.036.537.037.5y1y1 = 36.72+0.270.2947.047.548.048.5x2x2 = 47.96+0.200.2047.047.548.048.549.0y2y2 = 47.86+0.250.25240280320360fluxflux = 289.79+16.8616.4236.537.037.538.038.5x10.60.70.80.9psf35.536.036.537.037.5y147.047.548.048.5x247.047.548.048.549.0y2240280320360flux0.60.70.80.9psfpsf = 0.77+0.050.040.00.20.40.60.81.0Albedo0123456PDFDeep Learning for Asteroid Streak Detection

11

Figure 19. Probability distribution of diameter estimates for each asteroid
calculated from the H-magnitude estimates in Figure 18. The horizontal axis
denotes the asteroid diameter (in meters) while the vertical axis denotes the
probability density. The albedo is sampled from the distribution found in
Wright et al. (2016). Asteroid #2 is not included due to poor photometric
data.

Figure 20. Probability distribution of close approach distances of each as-
teroid. The horizontal axis denotes the close approach distance (minimum
distance to Earth around the time of detection, in lunar distances) while the
vertical axis denotes the probability density.

nearly matches the 97% true positive rate of our simulated data
(Figure 12). We theorize that the lower detection completeness for
the unconﬁrmed asteroids is possibly due to the shortage of long
streaks in our dataset as the majority of streaks we generate are less
than 20 pixels in length. As shown by the missed detections in Figures
13 and 14, it seems that some longer streaks have the potential to be
missed by our CNN. Another major issue was streaks that experience
heavy occlusion from other stars, such as the last streak in Figure 14.
The diﬃculty in detecting these occluded streaks likely lies in how we
remove simulated streaks which overlap a star signiﬁcantly to reduce
diﬀraction spike detections. If we further improved our algorithm
to ﬁnd occluded streaks, it is possible that we would detect more
diﬀraction spike false positives. In the future it may be beneﬁcial to
try to simulate diﬀraction spike negative samples rather than remove
occluded simulated streaks.

MNRAS 000, 1–14 (2022)

Figure 18. Probability distibution of H-magnitude estimates for each as-
teroid, where the horizontal axis denotes the H magnitude and the vertical
axis denotes the probability density. This is compared against the distribu-
tion of the H-magnitudes of all known asteroids (shown in brown) in addi-
tion to the discovery completeness for each H-magnitude range (shown as
the dotted line). The expected total population of asteroids at a given H-
magnitude used to ﬁnd this discovery completeness were taken from Harris
& D’Abramo (2015) while the H-magnitudes of known asteroids were taken
from the Minor Planet Center (https://www.minorplanetcenter.net/
iau/MPCORB/NEA.txt). Asteroid #2 is not included due to poor photometric
data.

The attributes of each new streak detection is shown in Table 4. The
probability distributions of the H-magnitudes, diameters, and close
approach distances are also shown in Figures 18, 19, and 20, respec-
tively. Due to the short observation arcs and the large variability in the
possible albedos, the diameter and close approach distances have very
high uncertainty. In Figure 18, we also compare the H-magnitudes
of our asteroids to the discovery completeness of asteroids at those
H-magnitude ranges. From the ﬁgure, we can see that our asteroids
mostly correspond to small asteroids with high H-magnitudes that
have a low detection completeness. By speciﬁcally targeting faint
streaks, our algorithm is able to ﬁnd these smaller asteroids, most of
which currently have very low discovery completeness of less than
around 10%.

4 DISCUSSION

Using our purely synthetic data-based approach and just four nights
of data, we were able to ﬁnd 6 new NEOs which other observatories,
including ZTF, did not ﬁnd, in addition to several NEOs that other
observatories have already discovered. This is the ﬁrst ever successful
use of a machine learning algorithm that does not necessitate the use
of manual collection of training data in order to detect new asteroid
streaks, thus overcoming the limitations that manually annotated
data has. By having to use manually collected data to train a CNN,
observatories are limited to a training dataset proportional to the size
of their collected data, they can not speciﬁcally target dim streaks or
streaks of a certain length, and they have to spend lots of time hand
labeling each image. This research shows that synthetically generated
streaks can accurately match the appearance of real asteroid streaks
to the point where a CNN can be only trained on synthetic streaks
and still be able to detect real undiscovered asteroids.

Applying our machine learning model to past streaks detected by
ZTF, we are able to attain extremely high detection completeness
(97.4% for conﬁrmed and 95.6% for unconﬁrmed asteroids) which

18202224262830H MagnitudeAst. #1Ast. #3Ast. #4Ast. #5Ast. #6All Known0.00.20.40.60.81.0Discovery Completeness10−210−1100101102103104Diameter (Meters)Ast. #1Ast. #3Ast. #4Ast. #5Ast. #6020406080100120140Distance (Lunar Distances)Ast. #1Ast. #2Ast. #3Ast. #4Ast. #5Ast. #612

F. Wang et al.

Ast. #

Det. #

Visual Mag

Length

Diameter (m)

Closest Dist. (LD)

1

2

3

4

5

1
2

3

1
2

1
2

1
2

19.97 ± 0.11
19.32 ± 0.05
19.25 ± 0.06

18.94 ± 0.05

19.62 ± 0.08
18.91 ± 0.05

19.15 ± 0.05
19.17 ± 0.06

1
2
3
4

20.53 ± 0.14
19.70 ± 0.07
19.14 ± 0.04
19.58 ± 0.06

20.5+1.2
−0.9
20.1+1.7
−1.0
19.7+0.3
−0.4
20.5+0.7
−0.6

15.2+0.5
−0.5
16.6+0.4
−0.4
23.1+0.6
−0.7
29.2+3.4
−2.0
8.2+0.4
−0.4
9.0+0.3
−0.3

57+59
−31

70+81
−45

25+30
−17

16+12
−10

7+4
−4

18+17
−13

5+5
−3

157+168
−91

58+38
−34

1
19

8.5+0.2
−0.2
8.1+0.3
−0.3
7.3+0.3
−0.3
7.8+0.2
−0.2
7.6+0.3
−0.3
7.5+0.3
−0.3
Table 4. Parameters of the detections of our newly discovered asteroid streaks. For the length and size parameters, an upper and lower 𝜎 is calculated using
the 15.9 and 84.1 percentiles to account for the non-normal probability distribution. The length is given in pixels, where each pixel is approximately equal to
1 arcsecond (with an exposure time of 30 seconds). For Asteroid #2, the diﬀerence image from ZTF was masked out for detection #2, so we were unable to
perform a streak ﬁt and calculate a size estimate. For Asteroid #6, only ﬁve detections are shown for brevity.

19.40 ± 0.06
19.07 ± 0.04
19.39 ± 0.05
19.66 ± 0.06
20.08 ± 0.09

55
98
102

38+37
−17

21+7
−9

6

We collected motion rate and visual magnitude data from all the
Minor Planet Electronic Circulars (MPECs) of 2020, which consist
of discoveries of unusual minor planets – primarily near-Earth Ob-
jects. This data is plotted against our discoveries in Figure 21. We
only use the initial discovery detections from the MPECs so that we
can speciﬁcally compare discoveries as opposed to follow-up obser-
vations of known objects. We also created a similar graph comparing
our discoveries to ZTF’s, both conﬁrmed and unconﬁrmed by the
MPC (Figure 22). From both these ﬁgures, we can see that relative to
other asteroids travelling at similar speeds, our asteroids tend to be
somewhat fainter. By focusing the brightness distribution of streaks
in our dataset on fainter asteroids, the machine learning model is
able to robustly detect these faint objects. Compared to the MPEC
results, our asteroids tend to be on the faster side as most NEOs are
detected as slow moving, point-source objects. However, compared
to ZTF discoveries, our asteroid streaks are on the shorter side but
still fainter, suggesting that our model may be eﬀective at detecting
short and faint asteroid streaks.

Although we largely used parameter distributions of real asteroids
to create artiﬁcial training datasets, these datasets are likely biased
towards those asteroids which could be easily detected by previous
methods. Our training samples and ﬁnally detected samples are likely
biased towards these asteroids. In order to have a more complete
detection of streaks (such as long streaks) with our method, training
samples with large weights towards rare groups are necessary to help
detect them.

4.1 Limitations and Drawbacks

Because archival data was used in our search for NEOs, we were
unable to obtain the follow-up observations required for most of
our streak detections to be conﬁrmed by the Minor Planet Center

MNRAS 000, 1–14 (2022)

Figure 21. Comparison of asteroid discovery circumstances in the 2020
MPECs to our asteroids.

(MPC). If we had access to more recent data, it is possible that
other observatories would have done follow-up observations of these
streaks, satisfying the MPC’s 24 hour observation arc requirement.
However, we were able to ﬁnd additional observations of Asteroid
#6 on 2019/06/09, partly due to the asteroid being located in a high
cadence ﬁeld which allowed us to obtain over 100 observations on the
ﬁrst night (see Kupfer et al. (2021) for more details). This NEO has
now been given the designation 2019 LH27 by the MPC. In the future
we plan to continue exploring high cadence data from ZTF’s archives
to ﬁnd asteroids which may potentially appear across multiple nights
in ZTF data.

In this work, we only focused on shorter and fainter streaks. How-
ever, if we expanded our simulated dataset to include more bright
and long streaks we likely would have better detection complete-

01020304050MotionRate(deg/day)14161820222426VisualMagnitudeAsteroid#0Asteroid#1Asteroid#2Asteroid#3Asteroid#4Asteroid#5Deep Learning for Asteroid Streak Detection

13

4.2 Future Potential Applications

As all the data we use to train the model is simulated, this approach
can be more easily applied to other transient surveys than approaches
that require real data. For instance, ZTF is a prototype for the future
Vera C. Rubin Observatory. Applying our method to the Rubin Ob-
servatory, which has a higher limiting magnitude of roughly 24.7 for
the red band ﬁlter as opposed to 20.4 for ZTF, fainter asteroids would
appear at a higher SNR, making it much easier for our algorithm to
detect them. Quantitatively, we can compare the étendue and vol-
umetric survey speed6 of both telescopes. The Rubin Observatory
has an étendue of 319.5 m2 deg2 and a volumetric survey speed of
3.7 × 105 Mpc3/s while ZTF only has an étendue of 53.1 m2 deg2
and a volumetric survey speed of 2.5×104 Mpc3/s (Bellm 2016). Us-
ing our method, faint asteroid streaks can be more robustly detected,
allowing us to take advantage of the increased detection capabilities
to the fullest extent possible.

ACKNOWLEDGEMENTS

Based on observations obtained with the Samuel Oschin 48-inch
Telescope at the Palomar Observatory as part of the Zwicky Tran-
sient Facility project. ZTF is supported by the National Science
Foundation under Grant No. AST-1440341 and a collaboration in-
cluding Caltech, IPAC, the Weizmann Institute for Science, the Oskar
Klein Center at Stockholm University, the University of Maryland,
the University of Washington, Deutsches Elektronen-Synchrotron
and Humboldt University, Los Alamos National Laboratories, the
TANGO Consortium of Taiwan, the University of Wisconsin at Mil-
waukee, and Lawrence Berkeley National Laboratories. Operations
are conducted by COO, IPAC, and UW.

This research has made use of data and/or services provided by

the International Astronomical Union’s Minor Planet Center.

The authors would like to thank Quanzhi Ye and Bryce Bolin
for their helpful discussions and the anonymous referee who has
provided valuable suggestions which helped improve the quality of
this paper.

DATA AVAILABILITY STATEMENT

The data underlying this article were accessed from the Zwicky Tran-
sient Facility’s public data releases (https://www.ztf.caltech.
edu/). The derived data generated in this research will be shared on
reasonable request to the corresponding author.

REFERENCES

Alvarez L. W., Alvarez W., Asaro F., Michel H. V., 1980, Science, 208, 1095
B612 Foundation
Institute Annual Progress Re-
https://issuu.com/b612foundation/docs/
2020,

2020, Asteroid

port
b612annualreport2020reducedspreads/1

Barbary K., 2016, Journal of Open Source Software, 1, 58
Bellm E. C., 2016, Publications of the Astronomical Society of the Paciﬁc,

128, 084501

6 The volumetric survey speed roughly quantiﬁes the volume of space where
an object of a certain absolute magnitude can be detected divided by the time
per exposure, allowing us to take into account survey speed (see Bellm (2016)
for details)

MNRAS 000, 1–14 (2022)

Figure 22. Comparison of all conﬁrmed and unconﬁrmed (observation arc
too short for MPC to assign a designation) ZTF asteroid streak discoveries to
our discoveries.

ness for the ZTF discoveries we missed, as described in Section 3.2.
For longer streaks however, it may become necessary to model the
brightness ﬂuctuations of asteroids due to rotation as small asteroids
tend to have very short rotation periods on the order of minutes that
would become more pronounced with longer streaks (Hergenrother
& Whiteley 2011).

While using the science and reference images rather than the dif-
ference images potentially allows our model to have access to more
information, our normalization algorithm can cause bright pixels to
be clipped, making it diﬃcult to detect streaks signiﬁcantly overlap-
ping with bright stars. Because of this, it may be helpful to provide
science, reference, and diﬀerence images to the machine learning
model, as the diﬀerence images would subtract out stars that are
overlapping with a streak. Increasing the clipping range to be larger
than -5 to 5 could also allow for better detections.

It is important to note that ZTF’s algorithm uses a diﬀerent pre-
processing algorithm for extracting potential streak candidates to be
fed into their CNN model. Their algorithm focuses on longer aster-
oid streaks and also has stricter thresholds to reduce false positives.
Because of this diﬀerence in preprocessing, our CNN and synthetic
training approach is not necessarily better at streak detection com-
pared to ZTF’s algorithm. In particular, the 5th and 6th asteroids
which we found were likely missed by ZTF since they are shorter
than the streaks they tended to focus on during that time period of
the survey. Nevertheless, the fact that we are able to recover most of
ZTF’s discoveries using no real image data for the training set and are
also able to detect undiscovered objects, suggests that our approach
allows for the very robust detection of asteroid streaks based on the
distributions that we target our dataset towards. Our work has shown
that real image data is not necessary to train an eﬀective asteroid
streak detection system and that a purely simulated dataset may al-
low for the detection of asteroid streak distributions like faint streaks
or short streaks for which detection completeness is low.

Given diﬀerent strengths for both algorithms, we would suggest to
ZTF that our pipeline could be a potential supplement which runs in
addition to their current DeepStreaks algorithm by targeting speciﬁc
distributions of streaks which may be harder to detect. Moreover, we
believe the main beneﬁt of our algorithm is derived from the removal
of the need for real asteroid streak data collection, which allows other
surveys besides ZTF to much more easily adopt streak detection.

01020304050MotionRate(deg/day)1214161820VisualMagnitudeConﬁrmedUnconﬁrmedAsteroid#0Asteroid#1Asteroid#2Asteroid#3Asteroid#4Asteroid#514

F. Wang et al.

Bertin E., 2010, SWarp: Resampling and Co-adding FITS Images Together

(ascl:1010.068)

Bertin E., Arnouts S., 1996, A&AS, 117, 393
Bowell E., Hapke B., Domingue D., Lumme K., Peltoniemi J., Harris A. W.,
1989, in Binzel R. P., Gehrels T., Matthews M. S., eds, Asteroids II. pp
524–556

Brown P. G., et al., 2013, Nature, 503, 238
Chollet F., et al., 2015, Keras, https://keras.io
Dawson W. A., Schneider M. D., Kamath C., 2016, arXiv:1609.07158 [astro-

ph, physics:physics]

DeMeo F. E., Carry B., 2014, Nature, 505, 629
Duev D. A., et al., 2019a, Monthly Notices of the Royal Astronomical Society,

486, 4158

Duev D. A., et al., 2019b, Monthly Notices of the Royal Astronomical Society,

489, 3582

Duev D. A., et al., 2021, The Astronomical Journal, 161, 218
Foreman-Mackey D., Hogg D. W., Lang D., Goodman J., 2013, PASP, 125,

306

Granvik M., Virtanen J., Oszkiewicz D., Muinonen K., 2009, Meteoritics &

Planetary Science, 44, 1853

Harris A. W., D’Abramo G., 2015, Icarus, 257, 302
Hergenrother C. W., Whiteley R. J., 2011, Icarus, 214, 194
Kingma D. P., Ba J., 2014, arXiv e-prints, p. arXiv:1412.6980
Kupfer T., et al., 2021, Monthly Notices of the Royal Astronomical Society,

505, 1254

Lauretta D. S., et al., 2017, Space Science Reviews, 212, 925
Lieu M., Conversi L., Altieri B., Carry B., 2019, Monthly Notices of the

Royal Astronomical Society, 485, 5831

Masters D., Luschi C., 2018, arXiv e-prints, p. arXiv:1804.07612
McCully C., et al., 2018, astropy/astroscrappy: v1.0.5 Zenodo Release,
doi:10.5281/zenodo.1482019, https://doi.org/10.5281/zenodo.
1482019

NASA 2007, Technical report, Near-Earth Object Survey and Deﬂection
Analysis of Alternatives, https://www.nasa.gov/pdf/171331main_
NEO_report_march07.pdf. NASA, https://www.nasa.gov/pdf/
171331main_NEO_report_march07.pdf

Nir G., Zackay B., Ofek E. O., 2018, The Astronomical Journal, 156, 229
Rabeendran A. C., Denneau L., 2021, Publications of the Astronomical So-

ciety of the Paciﬁc, 133, 034501

Russakovsky O., et al., 2015, International Journal of Computer Vision, 115,

211

Srivastava N., Hinton G., Krizhevsky A., Sutskever I., Salakhutdinov R.,

2014, Journal of Machine Learning Research, 15, 1929

Tan M., Le Q., 2019, in Chaudhuri K., Salakhutdinov R., eds, Proceed-
ings of Machine Learning Research Vol. 97, Proceedings of the 36th
International Conference on Machine Learning. PMLR, pp 6105–6114,
https://proceedings.mlr.press/v97/tan19a.html

Vereš P., Jedicke R., Denneau L., Wainscoat R., Holman M. J., Lin H.-W.,
2012, Publications of the Astronomical Society of the Paciﬁc, 124, 1197

Wright E. L., Mainzer A., Masiero J., Grav T., Bauer J., 2016, AJ, 152, 79
Yau K. K., Groom S., Teplitz H., Cutri R., Mainzer A., 2011, in American

Astronomical Society Meeting Abstracts #217. p. 333.18

Ye Q., et al., 2019, Publications of the Astronomical Society of the Paciﬁc,

131, 078002

Zwicky Transient Facility 2020, ZTF Charge Spillage Ghosts, http://

nesssi.cacr.caltech.edu/ZTF/Web/Ghosts.html

van Dokkum P. G., 2001, Publications of the Astronomical Society of the

Paciﬁc, 113, 1420

This paper has been typeset from a TEX/LATEX ﬁle prepared by the author.

MNRAS 000, 1–14 (2022)

