0
2
0
2

r
p
A
6
1

]

Y
S
.
s
s
e
e
[

1
v
6
7
8
7
0
.
4
0
0
2
:
v
i
X
r
a

Reach-SDP: Reachability Analysis of Closed-Loop
Systems with Neural Network Controllers via
Semideﬁnite Programming

Haimin Hu, Mahyar Fazlyab, Manfred Morari, and George J. Pappas ∗

Abstract

There has been an increasing interest in using neural networks in closed-loop control systems
to improve performance and reduce computational costs for on-line implementation. However,
providing safety and stability guarantees for these systems is challenging due to the nonlinear
and compositional structure of neural networks.
In this paper, we propose a novel forward
reachability analysis method for the safety veriﬁcation of linear time-varying systems with neu-
ral networks in feedback interconnection. Our technical approach relies on abstracting the
nonlinear activation functions by quadratic constraints, which leads to an outer-approximation
of forward reachable sets of the closed-loop system. We show that we can compute these approx-
imate reachable sets using semideﬁnite programming. We illustrate our method in a quadrotor
example, in which we ﬁrst approximate a nonlinear model predictive controller via a deep neu-
ral network and then apply our analysis tool to certify ﬁnite-time reachability and constraint
satisfaction of the closed-loop system.

1 Introduction

Deep neural networks (DNN) have seen renewed interest in recent years due to the proliferation of
data and access to more computational power. In autonomous systems, DNNs are either used as
feedback controllers [17, 35], motion planners [31], perception modules, or end-to-end controllers
[5, 28]. Despite their high performance, DNN-driven autonomous systems lack formal safety and
stability guarantees. Indeed, recent studies show that DNNs can be vulnerable to small pertur-
bations or adversarial attacks [23, 29]. This issue is more pronounced in closed-loop systems, as
a small perturbation in the loop can dramatically change the behavior of the closed-loop system
over time. Therefore, it is of utmost importance to develop tools for veriﬁcation of DNN-driven
control systems. The goal of this paper is to develop a methodology, based on semideﬁnite pro-
gramming, for safety veriﬁcation and reachability analysis of linear dynamical systems in feedback
interconnection with DNNs.

Safety veriﬁcation or reachability analysis aims to show that starting from a set of initial con-
ditions, a dynamical system cannot evolve to an unsafe region in the state space. Methods for
reachability analysis can be categorized into exact (complete) or approximate (incomplete), which
compute the reachable sets exactly and approximately, respectively. Veriﬁcation of dynamical sys-
tems has been extensively studied in the past [2, 3, 24, 30, 33]. More recently, the problem of

∗Work supported by the NSF under grants DARPA Assured Autonomy and NSF CPS 1837210. The au-
thors are with the Department of Electrical and Systems Engineering, University of Pennsylvania. Email:
{haiminhu,mahyarfa,morari,pappasg}@seas.upenn.edu.

1

 
 
 
 
 
 
output range analysis of neural networks has been addressed in [9, 10, 12, 13, 19, 21, 22, 26, 32],
mainly motivated by robustness analysis of DNNs against adversarial attacks [23]. Compared to
these bodies of work, veriﬁcation of closed-loop systems with neural network controllers has been
less explored [8, 18, 20].
In [20], a method for veriﬁcation of sigmoid-based neural networks in
feedback with a hybrid system is proposed, in which the neural network is transformed into a
hybrid system and then a standard veriﬁcation tool for hybrid systems is invoked. In [18], a new
reachability analysis approach based on Bernstein polynomials is proposed that can verify DNN-
controlled systems with Lipschitz continuous activation functions. Dutta et al. [8] use a ﬂow pipe
construction scheme to over approximate the reachable sets. A piecewise polynomial model is used
to provide an approximation of the input-output mapping of the controller and an error bound on
the approximation. This approach, however, is only applicable to Rectiﬁed Linear Unit (ReLU)
activation functions.

Contributions. In this paper, we propose a semideﬁnite program (SDP) for reachability anal-
ysis of linear time-varying dynamical systems in feedback interconnection with neural network
controllers equipped with a projection operator, which projects the output of the neural network
(the control action) onto a speciﬁed set of control inputs. Our technical approach relies on abstract-
ing the nonlinear activation functions as well as the projection operator by quadratic constraints
[12], which leads to an outer-approximation of forward reachable sets of the closed-loop system.
We show that we can compute these approximate reachable sets using semideﬁnite programming.
Our approach can be used to analyze control policies learned by neural networks in, for example,
model predictive control (MPC) [7] and constrained reinforcement learning [34]. To the best of
our knowledge, our result is the ﬁrst convex-optimization-based method for reachability analysis of
closed-loop systems with neural networks in the loop. We illustrate the utility of our approach in
two numerical examples, in which we certify ﬁnite-time reachability and constraint satisfaction of
a double integrator and a quadrotor.

1.1 Notation and Preliminaries

We denote the set of real numbers by R, the set of real n-dimensional vectors by Rn, the set of
n-dimensional matrices by Rm×n, and the n-dimensional identity matrix by In. We denote by
m
×
+, and Sn
Sn, Sn
++ the sets of n-by-n symmetric, positive semideﬁnite, and positive deﬁnite matrices,
respectively. For A
0 means all entries of A are non-negative. For
A

0 means A is positive semideﬁnite.

Rm×n, the inequality A

Sn, the inequality A

≥

∈

∈

(cid:23)

Deﬁnition 1 (Sector-bounded nonlinearity). A nonlinear function ϕ : R
R,
on [α, β], where 0

β, if the following inequality holds for all x

α

≤

≤

∈

which can be equivalently expressed as the quadratic inequality

α

ϕ(x)

≤

x ≤

β,

(cid:21)(cid:62) (cid:20)

(cid:20) x
ϕ(x)

−
α + β

2αβ α + β

2
−

(cid:21)

(cid:21) (cid:20) x
ϕ(x)

0.

≥

Deﬁnition 2 (Slope-restricted nonlinearity). A nonlinear function ϕ : R
on [α, β], where 0

β, if for any pairs of (x, ϕ(x)) and (x(cid:63), ϕ (x(cid:63))),

α

≤

≤

ϕ(x(cid:63))
x(cid:63)

β,

≤

ϕ(x)
x

α

≤

−
−

2

R is sector-bounded

→

(1)

(2)

R is slope-restricted

→

(3)

which can be equivalently expressed as

(cid:20)

x
ϕ(x)

−
−

x(cid:63)
ϕ(x(cid:63))

(cid:21)(cid:62) (cid:20)

2αβ α + β

−
α + β

(cid:21) (cid:20)

x
ϕ(x)

−
−

(cid:21)

x(cid:63)
ϕ(x(cid:63))

0.

≥

2
−

2 Problem Formulation

2.1 Neural Network Control System

We consider a discrete-time linear time-varying system

P : xt+1 = Atxt + Btut + ct,

(4)

(5)

where xt
We assume that the system (5) is subject to input constraints,

Rnu are the state and control vectors, and ct

Rnx, ut

∈

∈

Rnx is an exogenous input.

∈

ut

t, t = 0, 1,

∈ U

.

· · ·

(6)

which represent, for example, actuator limits that are naturally satisﬁed or hard constraints that
must be satisﬁed by a control design speciﬁcation. A specialization that we consider in this paper is
. Furthermore, we assume a state-feedback controller
input box constraint
}
Rnu parameterized by a multi-layer feed-forward fully-connected neural network.
π (xt) : Rnx
π(x) is described by the following equations,
The map x

ut ≤

t =

ut

¯ut

ut

≤

U

{

|

→
(cid:55)→

x0 = x

xk+1 = φ(W kxk + bk) k = 0,
π(x) = W (cid:96)x(cid:96) + b(cid:96),

, (cid:96)

1

−

· · ·

(7)

Rnk+1×nk , bk

where W k
The nonlinear activation function φ(
·

∈

∈

Rnk+1 are the weight matrix and bias vector of the (k + 1)-th layer.
) is applied component-wise to the pre-activation vectors, i.e.,

φ(x) := [ϕ(x1)

ϕ(xd)](cid:62), x

Rd,

∈

· · ·

(8)

→

where ϕ : R
R is the activation function of each individual neuron. Common choices include
ReLU, sigmoid, tanh, leaky ReLU, etc. In this paper, we consider ReLU activation functions in our
technical derivations but we can address other activation functions following the framework of [12].
To ensure that output of neural network respects the input constraint, we consider a projection
operator in the loop and deﬁne the control input as

ut = ProjUt (π(xt)) ,

(9)

We denote the closed-loop system with dynamics (5) and the projected neural network control
policy (9) by

xt+1 = fπ (xt) ,

(10)

which is a non-smooth nonlinear system because of the presence of the nonlinear activation functions
in the neural network and the projection operator.

Remark 1. In this paper, we only consider box constraints for the input and leave more sophis-
ticated constraints such as polytopes to future work. These constraints are useful in, for example,
MPC design problems. In [17] a robust MPC controller is approximated by a neural network equipped
with a projection operator to ensure satisfaction of polytopic input constraints.

3

For the closed-loop system (10) subject to the input constraint in (6), we denote by
forward reachable set at time t from a given set of initial conditions
the recursion

0) the
Rnx, which is deﬁned by

0
X

R

⊆

t(

X

as illustrated in Figure 1.

t+1(

X

R

0) := fπ(

R

0)),

t(

X

0(

R

0) =

X

0.

X

(11)

Figure 1: An illustration of closed-loop reachability with the initial set
reachable set

X
0) shown in magenta.

0), and its over-approximation ¯
R

R

t(

t(

X

X

0, the t-step forward

2.2 Finite-Time Reach-Avoid Veriﬁcation Problem

In this paper, we are interested in verifying the ﬁnite-time reach-avoid properties of the closed-loop
Rnx, we
system (10). More speciﬁcally, given a goal set
⊆
would like to test if all initial states x0
in a ﬁnite
time horizon N

Rnx and a sequence of avoid sets
t
A
0 of the closed-loop system (10) can reach
G
, N . This is equivalent to test if,

0, while avoiding

t for all t = 0,

G ⊆

∈ X

≥

· · ·

A
N (
t(

0)
X
0)

R

⊆ G

X

R

t =

,
∅
holds true for (10). There exist eﬃcient methods [4] and software implementations [16] for testing
set inclusion (12a) and set intersection (12b). However, computing exact reachable sets for the
nonlinear closed-loop system (10) is, in general, computationally intractable. Therefore, we resort
to ﬁnding outer-approximations of the closed-loop reachable sets, ¯
0), and use them
R
to test if,

t = 0,

(12b)

⊇ R

∩ A

, N

· · ·

0)

t(

t(

X

X

∀

N (
t(

0)
X
0)

¯
R
¯
R

⊆ G

,
∅
is true. Note that (13) are suﬃcient conditions for (12). To obtain meaningful certiﬁcates, we want
the approximations ¯
0) to be as tight as possible. Thus our goal is to compute the tightest
R
outer-approximations of the t-step reachable sets. This can be addressed, for example, by solving
the following optimization problem,

t = 0,

(13b)

∩ A

t =

, N

· · ·

t(

X

X

∀

(12a)

(13a)

(14)

minimize Volume (cid:0) ¯
t(
X
R
¯
t(
subject to
R

0)

⊆

t(

0)(cid:1)
0).

X
The solution to the above problem is the minimum-volume outer-approximation of the t-step reach-
able set of the closed-loop system (10). In the following sections, we will derive a convex relaxation
to the optimization problem (14).

R

X

4

23X0<latexit sha1_base64="MOq+V/svorhcoXvoLw53Ij/NhnU=">AAAB9HicbVDLSsNAFL2pr1pfVZduBovgqiQi6LLgxmUF+4A2lMl00g6dTOLMTaGEfocbF4q49WPc+TdO2iy09cDA4Zx7uWdOkEhh0HW/ndLG5tb2Tnm3srd/cHhUPT5pmzjVjLdYLGPdDajhUijeQoGSdxPNaRRI3gkmd7nfmXJtRKwecZZwP6IjJULBKFrJ70cUx4zKrDsfuINqza27C5B14hWkBgWag+pXfxizNOIKmaTG9Dw3QT+jGgWTfF7pp4YnlE3oiPcsVTTixs8WoefkwipDEsbaPoVkof7eyGhkzCwK7GQe0qx6ufif10sxvPUzoZIUuWLLQ2EqCcYkb4AMheYM5cwSyrSwWQkbU00Z2p4qtgRv9cvrpH1V97y693Bda9SLOspwBudwCR7cQAPuoQktYPAEz/AKb87UeXHenY/laMkpdk7hD5zPH7m5kf4=</latexit><latexit sha1_base64="MOq+V/svorhcoXvoLw53Ij/NhnU=">AAAB9HicbVDLSsNAFL2pr1pfVZduBovgqiQi6LLgxmUF+4A2lMl00g6dTOLMTaGEfocbF4q49WPc+TdO2iy09cDA4Zx7uWdOkEhh0HW/ndLG5tb2Tnm3srd/cHhUPT5pmzjVjLdYLGPdDajhUijeQoGSdxPNaRRI3gkmd7nfmXJtRKwecZZwP6IjJULBKFrJ70cUx4zKrDsfuINqza27C5B14hWkBgWag+pXfxizNOIKmaTG9Dw3QT+jGgWTfF7pp4YnlE3oiPcsVTTixs8WoefkwipDEsbaPoVkof7eyGhkzCwK7GQe0qx6ufif10sxvPUzoZIUuWLLQ2EqCcYkb4AMheYM5cwSyrSwWQkbU00Z2p4qtgRv9cvrpH1V97y693Bda9SLOspwBudwCR7cQAPuoQktYPAEz/AKb87UeXHenY/laMkpdk7hD5zPH7m5kf4=</latexit><latexit sha1_base64="MOq+V/svorhcoXvoLw53Ij/NhnU=">AAAB9HicbVDLSsNAFL2pr1pfVZduBovgqiQi6LLgxmUF+4A2lMl00g6dTOLMTaGEfocbF4q49WPc+TdO2iy09cDA4Zx7uWdOkEhh0HW/ndLG5tb2Tnm3srd/cHhUPT5pmzjVjLdYLGPdDajhUijeQoGSdxPNaRRI3gkmd7nfmXJtRKwecZZwP6IjJULBKFrJ70cUx4zKrDsfuINqza27C5B14hWkBgWag+pXfxizNOIKmaTG9Dw3QT+jGgWTfF7pp4YnlE3oiPcsVTTixs8WoefkwipDEsbaPoVkof7eyGhkzCwK7GQe0qx6ufif10sxvPUzoZIUuWLLQ2EqCcYkb4AMheYM5cwSyrSwWQkbU00Z2p4qtgRv9cvrpH1V97y693Bda9SLOspwBudwCR7cQAPuoQktYPAEz/AKb87UeXHenY/laMkpdk7hD5zPH7m5kf4=</latexit><latexit sha1_base64="MOq+V/svorhcoXvoLw53Ij/NhnU=">AAAB9HicbVDLSsNAFL2pr1pfVZduBovgqiQi6LLgxmUF+4A2lMl00g6dTOLMTaGEfocbF4q49WPc+TdO2iy09cDA4Zx7uWdOkEhh0HW/ndLG5tb2Tnm3srd/cHhUPT5pmzjVjLdYLGPdDajhUijeQoGSdxPNaRRI3gkmd7nfmXJtRKwecZZwP6IjJULBKFrJ70cUx4zKrDsfuINqza27C5B14hWkBgWag+pXfxizNOIKmaTG9Dw3QT+jGgWTfF7pp4YnlE3oiPcsVTTixs8WoefkwipDEsbaPoVkof7eyGhkzCwK7GQe0qx6ufif10sxvPUzoZIUuWLLQ2EqCcYkb4AMheYM5cwSyrSwWQkbU00Z2p4qtgRv9cvrpH1V97y693Bda9SLOspwBudwCR7cQAPuoQktYPAEz/AKb87UeXHenY/laMkpdk7hD5zPH7m5kf4=</latexit>ProjU<latexit sha1_base64="M9vYDqIs44qMrKxZtOpSfoxcN6g=">AAACCnicbVBNS8NAEN3Ur1q/oh69rBbBU0hE0GPBi8cKpi20IWy2m3btZjfsboQScvbiX/HiQRGv/gJv/hs3bQ7a+mDg8d4MM/OilFGlXffbqq2srq1v1DcbW9s7u3v2/kFHiUxi4mPBhOxFSBFGOfE11Yz0UklQEjHSjSbXpd99IFJRwe/0NCVBgkacxhQjbaTQPh6IlEikheQoIXlbivsizAcJ0mOMWO4XRWg3XcedAS4TryJNUKEd2l+DocBZQrjGDCnV99xUBzmSmmJGisYgUyRFeIJGpG9ouVcF+eyVAp4aZQhjIU1xDWfq74kcJUpNk8h0ljeqRa8U//P6mY6vgpzyNNOE4/miOGNQC1jmAodUEqzZ1BCEJTW3QjxGEmFt0muYELzFl5dJ59zxPMe7vWi2nCqOOjgCJ+AMeOAStMANaAMfYPAInsEreLOerBfr3fqYt9asauYQ/IH1+QMa5pu4</latexit><latexit sha1_base64="M9vYDqIs44qMrKxZtOpSfoxcN6g=">AAACCnicbVBNS8NAEN3Ur1q/oh69rBbBU0hE0GPBi8cKpi20IWy2m3btZjfsboQScvbiX/HiQRGv/gJv/hs3bQ7a+mDg8d4MM/OilFGlXffbqq2srq1v1DcbW9s7u3v2/kFHiUxi4mPBhOxFSBFGOfE11Yz0UklQEjHSjSbXpd99IFJRwe/0NCVBgkacxhQjbaTQPh6IlEikheQoIXlbivsizAcJ0mOMWO4XRWg3XcedAS4TryJNUKEd2l+DocBZQrjGDCnV99xUBzmSmmJGisYgUyRFeIJGpG9ouVcF+eyVAp4aZQhjIU1xDWfq74kcJUpNk8h0ljeqRa8U//P6mY6vgpzyNNOE4/miOGNQC1jmAodUEqzZ1BCEJTW3QjxGEmFt0muYELzFl5dJ59zxPMe7vWi2nCqOOjgCJ+AMeOAStMANaAMfYPAInsEreLOerBfr3fqYt9asauYQ/IH1+QMa5pu4</latexit><latexit sha1_base64="M9vYDqIs44qMrKxZtOpSfoxcN6g=">AAACCnicbVBNS8NAEN3Ur1q/oh69rBbBU0hE0GPBi8cKpi20IWy2m3btZjfsboQScvbiX/HiQRGv/gJv/hs3bQ7a+mDg8d4MM/OilFGlXffbqq2srq1v1DcbW9s7u3v2/kFHiUxi4mPBhOxFSBFGOfE11Yz0UklQEjHSjSbXpd99IFJRwe/0NCVBgkacxhQjbaTQPh6IlEikheQoIXlbivsizAcJ0mOMWO4XRWg3XcedAS4TryJNUKEd2l+DocBZQrjGDCnV99xUBzmSmmJGisYgUyRFeIJGpG9ouVcF+eyVAp4aZQhjIU1xDWfq74kcJUpNk8h0ljeqRa8U//P6mY6vgpzyNNOE4/miOGNQC1jmAodUEqzZ1BCEJTW3QjxGEmFt0muYELzFl5dJ59zxPMe7vWi2nCqOOjgCJ+AMeOAStMANaAMfYPAInsEreLOerBfr3fqYt9asauYQ/IH1+QMa5pu4</latexit><latexit sha1_base64="M9vYDqIs44qMrKxZtOpSfoxcN6g=">AAACCnicbVBNS8NAEN3Ur1q/oh69rBbBU0hE0GPBi8cKpi20IWy2m3btZjfsboQScvbiX/HiQRGv/gJv/hs3bQ7a+mDg8d4MM/OilFGlXffbqq2srq1v1DcbW9s7u3v2/kFHiUxi4mPBhOxFSBFGOfE11Yz0UklQEjHSjSbXpd99IFJRwe/0NCVBgkacxhQjbaTQPh6IlEikheQoIXlbivsizAcJ0mOMWO4XRWg3XcedAS4TryJNUKEd2l+DocBZQrjGDCnV99xUBzmSmmJGisYgUyRFeIJGpG9ouVcF+eyVAp4aZQhjIU1xDWfq74kcJUpNk8h0ljeqRa8U//P6mY6vgpzyNNOE4/miOGNQC1jmAodUEqzZ1BCEJTW3QjxGEmFt0muYELzFl5dJ59zxPMe7vWi2nCqOOjgCJ+AMeOAStMANaAMfYPAInsEreLOerBfr3fqYt9asauYQ/IH1+QMa5pu4</latexit>¯Rt(X0)<latexit sha1_base64="VDneT1bLFDfD4sa+NgGPWiEXRZU=">AAACGnicbZDLSsNAFIYn9VbrLerSTbAIdVMyIuiy4MZlFXuBJoTJdNIOnVyYORFKyHO48VXcuFDEnbjxbZy0QbT1h4Gf75zDnPP7ieAKbPvLqKysrq1vVDdrW9s7u3vm/kFXxamkrENjEcu+TxQTPGId4CBYP5GMhL5gPX9yVdR790wqHkd3ME2YG5JRxANOCWjkmdjxicyckMCYEpHd5rmXQe4IFkDjh/Y1tHNH8tEYTj2zbjftmaxlg0tTR6XanvnhDGOahiwCKohSA2wn4GZEAqeC5TUnVSwhdEJGbKBtREKm3Gx2Wm6daDK0gljqF4E1o78nMhIqNQ193VlsqxZrBfyvNkghuHQzHiUpsIjOPwpSYUFsFTlZQy4ZBTHVhlDJ9a4WHRNJKOg0azoEvHjysumeNTFu4pvzeqtZxlFFR+gYNRBGF6iFrlEbdRBFD+gJvaBX49F4Nt6M93lrxShnDtEfGZ/fV6aiNQ==</latexit><latexit sha1_base64="VDneT1bLFDfD4sa+NgGPWiEXRZU=">AAACGnicbZDLSsNAFIYn9VbrLerSTbAIdVMyIuiy4MZlFXuBJoTJdNIOnVyYORFKyHO48VXcuFDEnbjxbZy0QbT1h4Gf75zDnPP7ieAKbPvLqKysrq1vVDdrW9s7u3vm/kFXxamkrENjEcu+TxQTPGId4CBYP5GMhL5gPX9yVdR790wqHkd3ME2YG5JRxANOCWjkmdjxicyckMCYEpHd5rmXQe4IFkDjh/Y1tHNH8tEYTj2zbjftmaxlg0tTR6XanvnhDGOahiwCKohSA2wn4GZEAqeC5TUnVSwhdEJGbKBtREKm3Gx2Wm6daDK0gljqF4E1o78nMhIqNQ193VlsqxZrBfyvNkghuHQzHiUpsIjOPwpSYUFsFTlZQy4ZBTHVhlDJ9a4WHRNJKOg0azoEvHjysumeNTFu4pvzeqtZxlFFR+gYNRBGF6iFrlEbdRBFD+gJvaBX49F4Nt6M93lrxShnDtEfGZ/fV6aiNQ==</latexit><latexit sha1_base64="VDneT1bLFDfD4sa+NgGPWiEXRZU=">AAACGnicbZDLSsNAFIYn9VbrLerSTbAIdVMyIuiy4MZlFXuBJoTJdNIOnVyYORFKyHO48VXcuFDEnbjxbZy0QbT1h4Gf75zDnPP7ieAKbPvLqKysrq1vVDdrW9s7u3vm/kFXxamkrENjEcu+TxQTPGId4CBYP5GMhL5gPX9yVdR790wqHkd3ME2YG5JRxANOCWjkmdjxicyckMCYEpHd5rmXQe4IFkDjh/Y1tHNH8tEYTj2zbjftmaxlg0tTR6XanvnhDGOahiwCKohSA2wn4GZEAqeC5TUnVSwhdEJGbKBtREKm3Gx2Wm6daDK0gljqF4E1o78nMhIqNQ193VlsqxZrBfyvNkghuHQzHiUpsIjOPwpSYUFsFTlZQy4ZBTHVhlDJ9a4WHRNJKOg0azoEvHjysumeNTFu4pvzeqtZxlFFR+gYNRBGF6iFrlEbdRBFD+gJvaBX49F4Nt6M93lrxShnDtEfGZ/fV6aiNQ==</latexit><latexit sha1_base64="VDneT1bLFDfD4sa+NgGPWiEXRZU=">AAACGnicbZDLSsNAFIYn9VbrLerSTbAIdVMyIuiy4MZlFXuBJoTJdNIOnVyYORFKyHO48VXcuFDEnbjxbZy0QbT1h4Gf75zDnPP7ieAKbPvLqKysrq1vVDdrW9s7u3vm/kFXxamkrENjEcu+TxQTPGId4CBYP5GMhL5gPX9yVdR790wqHkd3ME2YG5JRxANOCWjkmdjxicyckMCYEpHd5rmXQe4IFkDjh/Y1tHNH8tEYTj2zbjftmaxlg0tTR6XanvnhDGOahiwCKohSA2wn4GZEAqeC5TUnVSwhdEJGbKBtREKm3Gx2Wm6daDK0gljqF4E1o78nMhIqNQ193VlsqxZrBfyvNkghuHQzHiUpsIjOPwpSYUFsFTlZQy4ZBTHVhlDJ9a4WHRNJKOg0azoEvHjysumeNTFu4pvzeqtZxlFFR+gYNRBGF6iFrlEbdRBFD+gJvaBX49F4Nt6M93lrxShnDtEfGZ/fV6aiNQ==</latexit>Rt(X0)<latexit sha1_base64="Y82G2Wheoy2GTMs7ILU300LvLAc=">AAACFHicbZDLSsNAFIYnXmu9RV26GSxCRSiJCLosuHFZxV6gCWEynbRDJxdmToQS8hBufBU3LhRx68Kdb+OkDaKtPwz8fOcc5pzfTwRXYFlfxtLyyuraemWjurm1vbNr7u13VJxKyto0FrHs+UQxwSPWBg6C9RLJSOgL1vXHV0W9e8+k4nF0B5OEuSEZRjzglIBGnnnqhARGlIjsNvcyyB3BAqj/wJ6GVu5IPhzBiWfWrIY1FV40dmlqqFTLMz+dQUzTkEVABVGqb1sJuBmRwKlgedVJFUsIHZMh62sbkZApN5seleNjTQY4iKV+EeAp/T2RkVCpSejrzmJbNV8r4H+1fgrBpZvxKEmBRXT2UZAKDDEuEsIDLhkFMdGGUMn1rpiOiCQUdI5VHYI9f/Ki6Zw1bLth35zXmo0yjgo6REeojmx0gZroGrVQG1H0gJ7QC3o1Ho1n4814n7UuGeXMAfoj4+MbLZWfcA==</latexit><latexit sha1_base64="Y82G2Wheoy2GTMs7ILU300LvLAc=">AAACFHicbZDLSsNAFIYnXmu9RV26GSxCRSiJCLosuHFZxV6gCWEynbRDJxdmToQS8hBufBU3LhRx68Kdb+OkDaKtPwz8fOcc5pzfTwRXYFlfxtLyyuraemWjurm1vbNr7u13VJxKyto0FrHs+UQxwSPWBg6C9RLJSOgL1vXHV0W9e8+k4nF0B5OEuSEZRjzglIBGnnnqhARGlIjsNvcyyB3BAqj/wJ6GVu5IPhzBiWfWrIY1FV40dmlqqFTLMz+dQUzTkEVABVGqb1sJuBmRwKlgedVJFUsIHZMh62sbkZApN5seleNjTQY4iKV+EeAp/T2RkVCpSejrzmJbNV8r4H+1fgrBpZvxKEmBRXT2UZAKDDEuEsIDLhkFMdGGUMn1rpiOiCQUdI5VHYI9f/Ki6Zw1bLth35zXmo0yjgo6REeojmx0gZroGrVQG1H0gJ7QC3o1Ho1n4814n7UuGeXMAfoj4+MbLZWfcA==</latexit><latexit sha1_base64="Y82G2Wheoy2GTMs7ILU300LvLAc=">AAACFHicbZDLSsNAFIYnXmu9RV26GSxCRSiJCLosuHFZxV6gCWEynbRDJxdmToQS8hBufBU3LhRx68Kdb+OkDaKtPwz8fOcc5pzfTwRXYFlfxtLyyuraemWjurm1vbNr7u13VJxKyto0FrHs+UQxwSPWBg6C9RLJSOgL1vXHV0W9e8+k4nF0B5OEuSEZRjzglIBGnnnqhARGlIjsNvcyyB3BAqj/wJ6GVu5IPhzBiWfWrIY1FV40dmlqqFTLMz+dQUzTkEVABVGqb1sJuBmRwKlgedVJFUsIHZMh62sbkZApN5seleNjTQY4iKV+EeAp/T2RkVCpSejrzmJbNV8r4H+1fgrBpZvxKEmBRXT2UZAKDDEuEsIDLhkFMdGGUMn1rpiOiCQUdI5VHYI9f/Ki6Zw1bLth35zXmo0yjgo6REeojmx0gZroGrVQG1H0gJ7QC3o1Ho1n4814n7UuGeXMAfoj4+MbLZWfcA==</latexit><latexit sha1_base64="Y82G2Wheoy2GTMs7ILU300LvLAc=">AAACFHicbZDLSsNAFIYnXmu9RV26GSxCRSiJCLosuHFZxV6gCWEynbRDJxdmToQS8hBufBU3LhRx68Kdb+OkDaKtPwz8fOcc5pzfTwRXYFlfxtLyyuraemWjurm1vbNr7u13VJxKyto0FrHs+UQxwSPWBg6C9RLJSOgL1vXHV0W9e8+k4nF0B5OEuSEZRjzglIBGnnnqhARGlIjsNvcyyB3BAqj/wJ6GVu5IPhzBiWfWrIY1FV40dmlqqFTLMz+dQUzTkEVABVGqb1sJuBmRwKlgedVJFUsIHZMh62sbkZApN5seleNjTQY4iKV+EeAp/T2RkVCpSejrzmJbNV8r4H+1fgrBpZvxKEmBRXT2UZAKDDEuEsIDLhkFMdGGUMn1rpiOiCQUdI5VHYI9f/Ki6Zw1bLth35zXmo0yjgo6REeojmx0gZroGrVQG1H0gJ7QC3o1Ho1n4814n7UuGeXMAfoj4+MbLZWfcA==</latexit>P<latexit sha1_base64="qjGYCLJVxT+fuGjaGVwHMWSJUc4=">AAAB6HicbVDLSsNAFL2pr1pfVZduBovgqiQi6LLoxmUL9gFtkMn0ph07mYSZiVBCv8CNC0Xc+knu/BsnbRbaemDgcM65zL0nSATXxnW/ndLa+sbmVnm7srO7t39QPTzq6DhVDNssFrHqBVSj4BLbhhuBvUQhjQKB3WBym/vdJ1Sax/LeTBP0IzqSPOSMGiu1mg/Vmlt35yCrxCtIDQrY/NdgGLM0QmmYoFr3PTcxfkaV4UzgrDJINSaUTegI+5ZKGqH2s/miM3JmlSEJY2WfNGSu/p7IaKT1NApsMqJmrJe9XPzP66cmvPYzLpPUoGSLj8JUEBOT/Goy5AqZEVNLKFPc7krYmCrKjO2mYkvwlk9eJZ2LuufVvdZlrXFT1FGGEziFc/DgChpwB01oAwOEZ3iFN+fReXHenY9FtOQUM8fwB87nD6ntjNU=</latexit><latexit sha1_base64="qjGYCLJVxT+fuGjaGVwHMWSJUc4=">AAAB6HicbVDLSsNAFL2pr1pfVZduBovgqiQi6LLoxmUL9gFtkMn0ph07mYSZiVBCv8CNC0Xc+knu/BsnbRbaemDgcM65zL0nSATXxnW/ndLa+sbmVnm7srO7t39QPTzq6DhVDNssFrHqBVSj4BLbhhuBvUQhjQKB3WBym/vdJ1Sax/LeTBP0IzqSPOSMGiu1mg/Vmlt35yCrxCtIDQrY/NdgGLM0QmmYoFr3PTcxfkaV4UzgrDJINSaUTegI+5ZKGqH2s/miM3JmlSEJY2WfNGSu/p7IaKT1NApsMqJmrJe9XPzP66cmvPYzLpPUoGSLj8JUEBOT/Goy5AqZEVNLKFPc7krYmCrKjO2mYkvwlk9eJZ2LuufVvdZlrXFT1FGGEziFc/DgChpwB01oAwOEZ3iFN+fReXHenY9FtOQUM8fwB87nD6ntjNU=</latexit><latexit sha1_base64="qjGYCLJVxT+fuGjaGVwHMWSJUc4=">AAAB6HicbVDLSsNAFL2pr1pfVZduBovgqiQi6LLoxmUL9gFtkMn0ph07mYSZiVBCv8CNC0Xc+knu/BsnbRbaemDgcM65zL0nSATXxnW/ndLa+sbmVnm7srO7t39QPTzq6DhVDNssFrHqBVSj4BLbhhuBvUQhjQKB3WBym/vdJ1Sax/LeTBP0IzqSPOSMGiu1mg/Vmlt35yCrxCtIDQrY/NdgGLM0QmmYoFr3PTcxfkaV4UzgrDJINSaUTegI+5ZKGqH2s/miM3JmlSEJY2WfNGSu/p7IaKT1NApsMqJmrJe9XPzP66cmvPYzLpPUoGSLj8JUEBOT/Goy5AqZEVNLKFPc7krYmCrKjO2mYkvwlk9eJZ2LuufVvdZlrXFT1FGGEziFc/DgChpwB01oAwOEZ3iFN+fReXHenY9FtOQUM8fwB87nD6ntjNU=</latexit><latexit sha1_base64="qjGYCLJVxT+fuGjaGVwHMWSJUc4=">AAAB6HicbVDLSsNAFL2pr1pfVZduBovgqiQi6LLoxmUL9gFtkMn0ph07mYSZiVBCv8CNC0Xc+knu/BsnbRbaemDgcM65zL0nSATXxnW/ndLa+sbmVnm7srO7t39QPTzq6DhVDNssFrHqBVSj4BLbhhuBvUQhjQKB3WBym/vdJ1Sax/LeTBP0IzqSPOSMGiu1mg/Vmlt35yCrxCtIDQrY/NdgGLM0QmmYoFr3PTcxfkaV4UzgrDJINSaUTegI+5ZKGqH2s/miM3JmlSEJY2WfNGSu/p7IaKT1NApsMqJmrJe9XPzP66cmvPYzLpPUoGSLj8JUEBOT/Goy5AqZEVNLKFPc7krYmCrKjO2mYkvwlk9eJZ2LuufVvdZlrXFT1FGGEziFc/DgChpwB01oAwOEZ3iFN+fReXHenY9FtOQUM8fwB87nD6ntjNU=</latexit>x<latexit sha1_base64="oX/22GYmL27AIpdbsabNoGA3aag=">AAAB6HicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCF48t2A9oQ9lsJ+3azSbsbsQS+gu8eFDEqz/Jm//GbZuDtj4YeLw3w8y8IBFcG9f9dgobm1vbO8Xd0t7+weFR+fikreNUMWyxWMSqG1CNgktsGW4EdhOFNAoEdoLJ7dzvPKLSPJb3ZpqgH9GR5CFn1Fip+TQoV9yquwBZJ15OKpCjMSh/9YcxSyOUhgmqdc9zE+NnVBnOBM5K/VRjQtmEjrBnqaQRaj9bHDojF1YZkjBWtqQhC/X3REYjradRYDsjasZ61ZuL/3m91IQ3fsZlkhqUbLkoTAUxMZl/TYZcITNiagllittbCRtTRZmx2ZRsCN7qy+ukXat6XtVrXlXqtTyOIpzBOVyCB9dQhztoQAsYIDzDK7w5D86L8+58LFsLTj5zCn/gfP4A4b2M7Q==</latexit><latexit sha1_base64="oX/22GYmL27AIpdbsabNoGA3aag=">AAAB6HicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCF48t2A9oQ9lsJ+3azSbsbsQS+gu8eFDEqz/Jm//GbZuDtj4YeLw3w8y8IBFcG9f9dgobm1vbO8Xd0t7+weFR+fikreNUMWyxWMSqG1CNgktsGW4EdhOFNAoEdoLJ7dzvPKLSPJb3ZpqgH9GR5CFn1Fip+TQoV9yquwBZJ15OKpCjMSh/9YcxSyOUhgmqdc9zE+NnVBnOBM5K/VRjQtmEjrBnqaQRaj9bHDojF1YZkjBWtqQhC/X3REYjradRYDsjasZ61ZuL/3m91IQ3fsZlkhqUbLkoTAUxMZl/TYZcITNiagllittbCRtTRZmx2ZRsCN7qy+ukXat6XtVrXlXqtTyOIpzBOVyCB9dQhztoQAsYIDzDK7w5D86L8+58LFsLTj5zCn/gfP4A4b2M7Q==</latexit><latexit sha1_base64="oX/22GYmL27AIpdbsabNoGA3aag=">AAAB6HicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCF48t2A9oQ9lsJ+3azSbsbsQS+gu8eFDEqz/Jm//GbZuDtj4YeLw3w8y8IBFcG9f9dgobm1vbO8Xd0t7+weFR+fikreNUMWyxWMSqG1CNgktsGW4EdhOFNAoEdoLJ7dzvPKLSPJb3ZpqgH9GR5CFn1Fip+TQoV9yquwBZJ15OKpCjMSh/9YcxSyOUhgmqdc9zE+NnVBnOBM5K/VRjQtmEjrBnqaQRaj9bHDojF1YZkjBWtqQhC/X3REYjradRYDsjasZ61ZuL/3m91IQ3fsZlkhqUbLkoTAUxMZl/TYZcITNiagllittbCRtTRZmx2ZRsCN7qy+ukXat6XtVrXlXqtTyOIpzBOVyCB9dQhztoQAsYIDzDK7w5D86L8+58LFsLTj5zCn/gfP4A4b2M7Q==</latexit><latexit sha1_base64="oX/22GYmL27AIpdbsabNoGA3aag=">AAAB6HicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCF48t2A9oQ9lsJ+3azSbsbsQS+gu8eFDEqz/Jm//GbZuDtj4YeLw3w8y8IBFcG9f9dgobm1vbO8Xd0t7+weFR+fikreNUMWyxWMSqG1CNgktsGW4EdhOFNAoEdoLJ7dzvPKLSPJb3ZpqgH9GR5CFn1Fip+TQoV9yquwBZJ15OKpCjMSh/9YcxSyOUhgmqdc9zE+NnVBnOBM5K/VRjQtmEjrBnqaQRaj9bHDojF1YZkjBWtqQhC/X3REYjradRYDsjasZ61ZuL/3m91IQ3fsZlkhqUbLkoTAUxMZl/TYZcITNiagllittbCRtTRZmx2ZRsCN7qy+ukXat6XtVrXlXqtTyOIpzBOVyCB9dQhztoQAsYIDzDK7w5D86L8+58LFsLTj5zCn/gfP4A4b2M7Q==</latexit>x0<latexit sha1_base64="jcE9KXd+QNhAV/g4PhH7YolvhqA=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKUI8FLx4r2g9oQ9lsN+3SzSbsTsQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8IJHCoOt+O4WNza3tneJuaW//4PCofHzSNnGqGW+xWMa6G1DDpVC8hQIl7yaa0yiQvBNMbuZ+55FrI2L1gNOE+xEdKREKRtFK908Dd1CuuFV3AbJOvJxUIEdzUP7qD2OWRlwhk9SYnucm6GdUo2CSz0r91PCEsgkd8Z6likbc+Nni1Bm5sMqQhLG2pZAs1N8TGY2MmUaB7Ywojs2qNxf/83ophtd+JlSSIldsuShMJcGYzP8mQ6E5Qzm1hDIt7K2EjammDG06JRuCt/ryOmnXqp5X9e6uKo1aHkcRzuAcLsGDOjTgFprQAgYjeIZXeHOk8+K8Ox/L1oKTz5zCHzifPwWwjZA=</latexit><latexit sha1_base64="jcE9KXd+QNhAV/g4PhH7YolvhqA=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKUI8FLx4r2g9oQ9lsN+3SzSbsTsQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8IJHCoOt+O4WNza3tneJuaW//4PCofHzSNnGqGW+xWMa6G1DDpVC8hQIl7yaa0yiQvBNMbuZ+55FrI2L1gNOE+xEdKREKRtFK908Dd1CuuFV3AbJOvJxUIEdzUP7qD2OWRlwhk9SYnucm6GdUo2CSz0r91PCEsgkd8Z6likbc+Nni1Bm5sMqQhLG2pZAs1N8TGY2MmUaB7Ywojs2qNxf/83ophtd+JlSSIldsuShMJcGYzP8mQ6E5Qzm1hDIt7K2EjammDG06JRuCt/ryOmnXqp5X9e6uKo1aHkcRzuAcLsGDOjTgFprQAgYjeIZXeHOk8+K8Ox/L1oKTz5zCHzifPwWwjZA=</latexit><latexit sha1_base64="jcE9KXd+QNhAV/g4PhH7YolvhqA=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKUI8FLx4r2g9oQ9lsN+3SzSbsTsQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8IJHCoOt+O4WNza3tneJuaW//4PCofHzSNnGqGW+xWMa6G1DDpVC8hQIl7yaa0yiQvBNMbuZ+55FrI2L1gNOE+xEdKREKRtFK908Dd1CuuFV3AbJOvJxUIEdzUP7qD2OWRlwhk9SYnucm6GdUo2CSz0r91PCEsgkd8Z6likbc+Nni1Bm5sMqQhLG2pZAs1N8TGY2MmUaB7Ywojs2qNxf/83ophtd+JlSSIldsuShMJcGYzP8mQ6E5Qzm1hDIt7K2EjammDG06JRuCt/ryOmnXqp5X9e6uKo1aHkcRzuAcLsGDOjTgFprQAgYjeIZXeHOk8+K8Ox/L1oKTz5zCHzifPwWwjZA=</latexit><latexit sha1_base64="jcE9KXd+QNhAV/g4PhH7YolvhqA=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKUI8FLx4r2g9oQ9lsN+3SzSbsTsQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8IJHCoOt+O4WNza3tneJuaW//4PCofHzSNnGqGW+xWMa6G1DDpVC8hQIl7yaa0yiQvBNMbuZ+55FrI2L1gNOE+xEdKREKRtFK908Dd1CuuFV3AbJOvJxUIEdzUP7qD2OWRlwhk9SYnucm6GdUo2CSz0r91PCEsgkd8Z6likbc+Nni1Bm5sMqQhLG2pZAs1N8TGY2MmUaB7Ywojs2qNxf/83ophtd+JlSSIldsuShMJcGYzP8mQ6E5Qzm1hDIt7K2EjammDG06JRuCt/ryOmnXqp5X9e6uKo1aHkcRzuAcLsGDOjTgFprQAgYjeIZXeHOk8+K8Ox/L1oKTz5zCHzifPwWwjZA=</latexit>xt<latexit sha1_base64="ZHb2kzP+Dll2KHks8eaRrkXqlDs=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKUI8FLx4r2g9oQ9lsN+3SzSbsTsQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8IJHCoOt+O4WNza3tneJuaW//4PCofHzSNnGqGW+xWMa6G1DDpVC8hQIl7yaa0yiQvBNMbuZ+55FrI2L1gNOE+xEdKREKRtFK908DHJQrbtVdgKwTLycVyNEclL/6w5ilEVfIJDWm57kJ+hnVKJjks1I/NTyhbEJHvGepohE3frY4dUYurDIkYaxtKSQL9fdERiNjplFgOyOKY7PqzcX/vF6K4bWfCZWkyBVbLgpTSTAm87/JUGjOUE4toUwLeythY6opQ5tOyYbgrb68Ttq1qudVvburSqOWx1GEMziHS/CgDg24hSa0gMEInuEV3hzpvDjvzseyteDkM6fwB87nD2zAjdQ=</latexit><latexit sha1_base64="ZHb2kzP+Dll2KHks8eaRrkXqlDs=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKUI8FLx4r2g9oQ9lsN+3SzSbsTsQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8IJHCoOt+O4WNza3tneJuaW//4PCofHzSNnGqGW+xWMa6G1DDpVC8hQIl7yaa0yiQvBNMbuZ+55FrI2L1gNOE+xEdKREKRtFK908DHJQrbtVdgKwTLycVyNEclL/6w5ilEVfIJDWm57kJ+hnVKJjks1I/NTyhbEJHvGepohE3frY4dUYurDIkYaxtKSQL9fdERiNjplFgOyOKY7PqzcX/vF6K4bWfCZWkyBVbLgpTSTAm87/JUGjOUE4toUwLeythY6opQ5tOyYbgrb68Ttq1qudVvburSqOWx1GEMziHS/CgDg24hSa0gMEInuEV3hzpvDjvzseyteDkM6fwB87nD2zAjdQ=</latexit><latexit sha1_base64="ZHb2kzP+Dll2KHks8eaRrkXqlDs=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKUI8FLx4r2g9oQ9lsN+3SzSbsTsQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8IJHCoOt+O4WNza3tneJuaW//4PCofHzSNnGqGW+xWMa6G1DDpVC8hQIl7yaa0yiQvBNMbuZ+55FrI2L1gNOE+xEdKREKRtFK908DHJQrbtVdgKwTLycVyNEclL/6w5ilEVfIJDWm57kJ+hnVKJjks1I/NTyhbEJHvGepohE3frY4dUYurDIkYaxtKSQL9fdERiNjplFgOyOKY7PqzcX/vF6K4bWfCZWkyBVbLgpTSTAm87/JUGjOUE4toUwLeythY6opQ5tOyYbgrb68Ttq1qudVvburSqOWx1GEMziHS/CgDg24hSa0gMEInuEV3hzpvDjvzseyteDkM6fwB87nD2zAjdQ=</latexit><latexit sha1_base64="ZHb2kzP+Dll2KHks8eaRrkXqlDs=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKUI8FLx4r2g9oQ9lsN+3SzSbsTsQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8IJHCoOt+O4WNza3tneJuaW//4PCofHzSNnGqGW+xWMa6G1DDpVC8hQIl7yaa0yiQvBNMbuZ+55FrI2L1gNOE+xEdKREKRtFK908DHJQrbtVdgKwTLycVyNEclL/6w5ilEVfIJDWm57kJ+hnVKJjks1I/NTyhbEJHvGepohE3frY4dUYurDIkYaxtKSQL9fdERiNjplFgOyOKY7PqzcX/vF6K4bWfCZWkyBVbLgpTSTAm87/JUGjOUE4toUwLeythY6opQ5tOyYbgrb68Ttq1qudVvburSqOWx1GEMziHS/CgDg24hSa0gMEInuEV3hzpvDjvzseyteDkM6fwB87nD2zAjdQ=</latexit>⇡<latexit sha1_base64="EL9Bd6rOvBdqBneGD4B7rD9DbYY=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCF48VTVtoQ9lsJ+3SzSbsboQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8MBVcG9f9dkobm1vbO+Xdyt7+weFR9fikrZNMMfRZIhLVDalGwSX6hhuB3VQhjUOBnXByO/c7T6g0T+SjmaYYxHQkecQZNVZ66Kd8UK25dXcBsk68gtSgQGtQ/eoPE5bFKA0TVOue56YmyKkynAmcVfqZxpSyCR1hz1JJY9RBvjh1Ri6sMiRRomxJQxbq74mcxlpP49B2xtSM9ao3F//zepmJboKcyzQzKNlyUZQJYhIy/5sMuUJmxNQSyhS3txI2pooyY9Op2BC81ZfXSbtR97y6d39VazaKOMpwBudwCR5cQxPuoAU+MBjBM7zCmyOcF+fd+Vi2lpxi5hT+wPn8AUtBjb4=</latexit><latexit sha1_base64="EL9Bd6rOvBdqBneGD4B7rD9DbYY=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCF48VTVtoQ9lsJ+3SzSbsboQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8MBVcG9f9dkobm1vbO+Xdyt7+weFR9fikrZNMMfRZIhLVDalGwSX6hhuB3VQhjUOBnXByO/c7T6g0T+SjmaYYxHQkecQZNVZ66Kd8UK25dXcBsk68gtSgQGtQ/eoPE5bFKA0TVOue56YmyKkynAmcVfqZxpSyCR1hz1JJY9RBvjh1Ri6sMiRRomxJQxbq74mcxlpP49B2xtSM9ao3F//zepmJboKcyzQzKNlyUZQJYhIy/5sMuUJmxNQSyhS3txI2pooyY9Op2BC81ZfXSbtR97y6d39VazaKOMpwBudwCR5cQxPuoAU+MBjBM7zCmyOcF+fd+Vi2lpxi5hT+wPn8AUtBjb4=</latexit><latexit sha1_base64="EL9Bd6rOvBdqBneGD4B7rD9DbYY=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCF48VTVtoQ9lsJ+3SzSbsboQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8MBVcG9f9dkobm1vbO+Xdyt7+weFR9fikrZNMMfRZIhLVDalGwSX6hhuB3VQhjUOBnXByO/c7T6g0T+SjmaYYxHQkecQZNVZ66Kd8UK25dXcBsk68gtSgQGtQ/eoPE5bFKA0TVOue56YmyKkynAmcVfqZxpSyCR1hz1JJY9RBvjh1Ri6sMiRRomxJQxbq74mcxlpP49B2xtSM9ao3F//zepmJboKcyzQzKNlyUZQJYhIy/5sMuUJmxNQSyhS3txI2pooyY9Op2BC81ZfXSbtR97y6d39VazaKOMpwBudwCR5cQxPuoAU+MBjBM7zCmyOcF+fd+Vi2lpxi5hT+wPn8AUtBjb4=</latexit><latexit sha1_base64="EL9Bd6rOvBdqBneGD4B7rD9DbYY=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCF48VTVtoQ9lsJ+3SzSbsboQS+hO8eFDEq7/Im//GbZuDtj4YeLw3w8y8MBVcG9f9dkobm1vbO+Xdyt7+weFR9fikrZNMMfRZIhLVDalGwSX6hhuB3VQhjUOBnXByO/c7T6g0T+SjmaYYxHQkecQZNVZ66Kd8UK25dXcBsk68gtSgQGtQ/eoPE5bFKA0TVOue56YmyKkynAmcVfqZxpSyCR1hz1JJY9RBvjh1Ri6sMiRRomxJQxbq74mcxlpP49B2xtSM9ao3F//zepmJboKcyzQzKNlyUZQJYhIy/5sMuUJmxNQSyhS3txI2pooyY9Op2BC81ZfXSbtR97y6d39VazaKOMpwBudwCR5cQxPuoAU+MBjBM7zCmyOcF+fd+Vi2lpxi5hT+wPn8AUtBjb4=</latexit>3 Problem Abstraction via Quadratic Constraints

This section focuses on estimating the one-step forward reachable set ¯
0). The main idea is to
R
replace the original closed-loop system fπ with an abstracted system ˜fπ in the sense that ˜fπ over-
0) = fπ(
(
approximates the output of the original system for any given initial set
R
⊆
˜fπ(
0) via semideﬁnite
programming (SDP). In the following, we will develop such an abstraction using the framework of
Quadratic Constraints (QCs).

0, i.e.
0). Based on this abstracted system, we can then compute ¯
(
R

0) = ¯
(
X
R

(
X

0)

X

X

X

X

X

3.1 Initial Set

We begin with a formal deﬁnition of QCs for sets [12].

Deﬁnition 3 (Quadratic Constraints). Let
all symmetric, but possibly indeﬁnite matrices Q such that the inequality

Rd be a nonempty set and

X ⊂

(cid:21)(cid:62)

(cid:20)x
1

(cid:21)

(cid:20)x
1

Q

0,

≥

Sd+1 be the set of

Q ⊂

(15)

holds for all x
the basis of this QC.

∈ X

. Then we say

satisﬁes the QC deﬁned by

X

. The vector (cid:2)x(cid:62) 1(cid:3)(cid:62) is called

Q

Here, for each ﬁxed Q, the set of x’s satisfying (15) is a superset of

(cid:92)

X ⊆

Q∈Q

(cid:40)

Rd

x

∈

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:20)x
1

(cid:21)(cid:62)

(cid:21)

(cid:20)x
1

Q

≥

. Indeed, we have that

X

(cid:41)

0

.

(16)

0. Nonetheless, as addressed
In this paper, we mainly use polytopes and ellipsoids as the initial set
by [12], other types of sets such as hyper-rectangles and zonotopes are also applicable in this setting.

X

Proposition 1 (QC for polytope). Suppose the initial set
x

0 satisﬁes the QC deﬁned by

. Then

Rnx

Ax

{

∈

|

b
}

≤

0 is a polytope deﬁned by

X

X
(cid:26)

=

P

P

(cid:12)
(cid:12)
(cid:12)
(cid:12)

P =

(cid:20) A(cid:62)ΓA

(cid:21)
A(cid:62)Γb
b(cid:62)ΓA b(cid:62)Γb

−

−

Sm, Γ

, Γ

∈

≥

(cid:27)
0

,

0 =

X

(17)

where m is the dimension of b. The basis is (cid:2)x(cid:62) 1(cid:3)(cid:62).

Proposition 2 (QC for ellipsoid). Suppose the initial set
, where A
x
}

Ax + b
2
(cid:107)

Snx and b

X
Rnx. Then

Rnx

| (cid:107)

≤

∈

∈

1

{

X

0 is an ellipsoid deﬁned by
0 satisﬁes the QC deﬁned by

X

0 =

(cid:20)

∈
A(cid:62)A
−
b(cid:62)A 1
−

−
−

(cid:21)
A(cid:62)b
b(cid:62)b

(cid:27)

0

,

, µ

≥

(18)

(cid:26)

=

P

(cid:12)
(cid:12)
(cid:12)
(cid:12)

P

P = µ

with basis (cid:2)x(cid:62) 1(cid:3)(cid:62).

To this end, we have over-approximated the initial set
in Section 4 that the matrix P
degree of freedom towards a less conservative estimation of the reachable set ¯
R

0 and represented it as QCs. We will see
appears as a decision variable in the SDP. It provides an extra

0).

(
X

∈ P

X

5

3.2 Reachable Set

In order to facilitate the relaxation of the volume-minimization problem in (14), we assume the
candidate set ¯
0) is represented by the intersection of ﬁnitely
(
X
R
many quadratic inequalities:

0) that over-approximates

(
X

R

¯
(
X
R

0) =

m
(cid:92)

i=1

(cid:40)

Rnx

x

∈

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:20)x
1

(cid:21)(cid:62)

(cid:21)

(cid:20)x
1

Si

≤

(cid:41)
0

,

(19)

S2nx+1 capture the shape and volume of the reachable set and will appear as
where matrices Si
decision variables in the SDP problem. Typically, (19) is able to describe polytopic and ellipsoidal
sets, which we discuss in detail now.

∈

3.2.1 Polytopic reachable set

If the reachable set is to be over-approximated by a polytope, i.e. ¯
(
X
R
then,

0) =

x

{

∈

Rnx

|

Afπ(x)

,

b
}

≤

(cid:20) 0
a(cid:62)
i
ai
2bi
Rm. Here, we
Rm×nx and bi
where ai
require the A matrix, which determines the orientation of each facet of the polytope, to be given
while we leave bi’s as decision variables in the SDP problem.

R1×nx is the i-th row of A

R is the i-th entry of b

Si =

(20)

−

∈

∈

∈

∈

(cid:21)

,

3.2.2 Ellipsoidal reachable set

If the reachable set is to be described by an ellipsoid, i.e. ¯
R
then,
A(cid:62)b

(cid:20) A(cid:62)A

Rnx

x
{

∈

Afπ(x) + b
(cid:107)

| (cid:107)

2

,

1
}

≤

0) =

(
X
(cid:21)

Si = S =

,

1
Rnx are decision variables describing the center, orientation, and volume of

−

b(cid:62)A b(cid:62)b

(21)

where A
the ellipsoid.

∈

Snx and b

∈

Remark 2. For polytopic reachable sets, if the facets ai are properly chosen, the resulting outer-
approximations can be very tight, as we will see in Section 5.1. However, ﬁnding facets of a higher
dimensional polytope can be prohibitively challenging. Ellipsoidal reachable sets scale better and
therefore are more suitable in this case.

3.3 ReLU Neural Networks with Projection

In this subsection, we show how to abstract the nonlinear activation functions of the neural network
by QCs. We will focus on the ReLU function throughout the paper. Other types of activation
functions such as sigmoid and tanh can also be represented by QCs. See [12] for details. Recall
that the input constraint sets are

. Consider the following recursion,

t =

¯ut

ut

ut
{

ut ≤

≤

}

|

U
x0
t = xt
xk+1
t = max(W kxk
x(cid:96)+1
t = max(W (cid:96)x(cid:96)
x(cid:96)+2
max(¯ut
t =

−

−

t + bk, 0) k = 0,
t + b(cid:96)
ut, 0) + ut
−
x(cid:96)+1
, 0) + ¯ut.
t

6

, (cid:96)

1

−

(22)

· · ·

Then it is not hard to show that x(cid:96)+2
the projection operator (9) as two additional layers into the neural network.

t = ut = ProjUt (π(xt)). In other words, we have embedded

Now, we derive the QCs for the ReLU activation function, φ(x) = max(0, x), x

Rd, which is
the nonlinearity used in the hidden layers of the projected neural network. Note that for d = 1,
this function is on the boundary of the sector [0, 1]. More precisely, we can describe it by taking
the intersection of three quadratic and/or aﬃne constraints:

∈

yi = max(0, xi)

yi

≥

⇔

xi, yi

≥

0, y2

i = xiyi,

(23)

for all i = 1,
nonlinearity. This allows us to write (4) with α = 0 and β = 1,

, d.

· · ·

In addition, the ReLU φ(x) is also slope-restricted on [0, 1] with repeated

By taking a weighted sum of the constraints (23) and (24), we obtain the single quadratic constraint,

yi)2

(yj

−

(yj

≤

−

yi)(xj

xi),

= j.

i
∀

−

(24)

d
(cid:88)

λi(y2

i=1

(cid:88)

i(cid:54)=j

i −

xiyi) + νi(yi

xi) + ηiyi

−

−

λij

(cid:0)(yj

yi)2

−

(yj

−

−

yi)(xj

−

xi)(cid:1)

0,

≥

(25)

which holds for any multipliers (λi, νi, ηi, λij)
· · ·
shows how to express the above constraint in a standard-form QC (15).
Lemma 1 (QC for ReLU function). The ReLU function φ(x) = max(0, x) : Rd
QC deﬁned by

+ and i, j

∈ {

×

1,

∈

R

R3

. The following lemma
, d
}

Rd satisﬁes the

→

.

(26)

with basis [x(cid:62) φ(x)(cid:62) 1](cid:62). Here, η, ν

≥






(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

=

Q

Q

Q =





T
2T

0
T
−
ν(cid:62) ν(cid:62) + η(cid:62)
Sd
+ is given by

ν
−
ν + η
0










−
0 and T

T =

d
(cid:88)

i=1

d−1
(cid:88)

λieie(cid:62)

i +

i=1

j>i

∈
d
(cid:88)

λij(ei

ej)(ei

−

−

ej)(cid:62),

where λij

0 and ei

≥

Proof. See [12].

Rd has 1 in the i-th entry and 0 everywhere else.

∈

As we will see in Section 4, the Q matrix in (26) will appear as a decision variable in the SDP
problem. Note that there are many ways to reﬁne (26) to yield a tighter relaxation for a speciﬁc
region in the state-space, such as using interval arithmetic [11, 12] or linear programming [22].

4 Reach-SDP: Computing Forward Reachable Sets via Semideﬁ-

nite Programming

In this section, we propose Reach-SDP, an optimization-based approach that uses the QC abstrac-
tion developed in the previous section to estimate the reachable set of the closed-loop system (10).
Speciﬁcally, the N -step reachable set is estimated using the following recursive computations,
0) = Reach SDP (cid:0) ¯
R

0)(cid:1) ,

t+1(

(27)

¯
R

t(

X

X

for t = 0,

, N

−

· · ·

1. In the sequel, we discuss how to implement Reach SDP in detail.

7

(cid:54)
4.1 Change of Basis

In the previous section, we have abstracted the initial set, the reachable set and the projected neural
network with QCs or quadratic inequalities, each with a diﬀerent basis vector. For Reach-SDP, we
unify those quadratic terms with the same basis vector:

[x(cid:62) 1](cid:62) := [x0
t

(cid:62)

(cid:62)

x1
t

(cid:62)

x(cid:96)+2
t

1](cid:62)

∈

· · ·

Rnx+nn+2nu+1,

(28)

k=1 nk is the total number of neurons in the neural network. Then, the uniﬁed QC

≥
Snx+nn+1. The following lemma shows how to change the basis of a QC by a congruence

(29)

(cid:21)(cid:62)

(cid:20)x
1

M

(cid:21)

(cid:20)x
1

0,

where nn = (cid:80)(cid:96)
is in the form:

where M
transformation.

∈

Lemma 2. The QC deﬁned by
QC deﬁned by
The matrix E
Proof. Substitute Eξb = xb into x(cid:62)

Q
= (cid:8)M
ξ(cid:62)
b M ξb
Rn×d is the change-of-basis matrix.

M
∈

Sd
x(cid:62)
b Qxb
∈
≥
0(cid:9) with basis ξb

0 and we have x(cid:62)

Sn

≥

∈

∈

|

|

b Qxb

= (cid:8)Q

0(cid:9) with basis xb

Rd is equivalent to the
Rn, where M = E(cid:62)QE and Eξb = xb.

∈

Proposition 3. The QC deﬁned by
to the QC deﬁned by
The change-of-basis matrix is

P
in = (cid:8)Min(P )

M

b E(cid:62)QExb = ξ(cid:62)

b M ξb

0.

≥
≥
in (17) or (18), satisﬁed by the initial set
Min(P ) = E(cid:62)

Snx+nn+1

inP Ein

0, is equivalent
0(cid:9) with basis [x(cid:62) 1](cid:62).

X

≥

(cid:21)

.

0 0
0 1

(30)

∈
(cid:20)Inx
0

0
0

Ein =

|

· · ·
· · ·

Proposition 4. The quadratic inequalities (19) deﬁned by matrices Si in (20) or (21), describing
the candidate set ¯
0), are equivalent to the quadratic inequalities deﬁned by matrices Mout(Si) =
(
R
E(cid:62)

X

outSiEout with basis [x(cid:62) 1](cid:62). The change-of-basis matrix is
0 Bt
0
0

(cid:20)At 0
0
0

Eout =

· · ·
· · ·

(cid:21)

.

ct
1

(31)

Proposition 5. The QC deﬁned by
(7), is equivalent to the QC deﬁned by
with basis [x(cid:62) 1](cid:62). The change-of-basis matrix is


Q
M

in (26), satisﬁed by the neural network controller π(xt) in
0(cid:9)
mid = (cid:8)Mmid(Q)

Mmid(Q) = E(cid:62)

Snx+nn+1

midQEmid

∈

|

≥

Emid =





 .

A a
B b
1
0










(32)

(33)

where

A =

B =










W 0
...
0
0
0



0 In1
...
...



0
0


0
0

0
0

0
...
W (cid:96)−1

0
...
0
0 W (cid:96)
0
0

· · ·
. . .

· · ·
· · ·
· · ·

0
...
In(cid:96)
0
0

· · ·
. . .

· · ·
· · ·
· · ·

0
...
0
Inu
0

8


0
...



0


0

0

0
...
0
0
Inu

−

0
...
0
0
Inu

−










a =

b =










b0
...
b(cid:96)−1
b(cid:96)
ut

−
¯ut











0
...
0
ut
−
¯ut








.

Proof. See Appendix A.

4.2 Over-Approximating the One-Step Reachable Set

In the next theorem, we state our main result for over-approximating the one-step reachable set

X

0) for the closed-loop system (10).

(
R
Theorem 1 (SDP for one-step reachable set). Consider the closed-loop system (10). Suppose the
)) satisfy the QCs deﬁned by
initial set
0 and the projected neural network controller ProjUt(π(
·
in and
mid, respectively, as in Proposition 3 and 5. Let Mout(S) describe a candidate set
M
¯
0)
(
R

X
M
Rnx as in Proposition 4 with S = Si

Snx+1. If the following LMI

⊆

X

∈

is feasible for some matrices (P, Q, S)

Proof. Since the initial set

Min(P ) + Mmid(Q) + Mout(S)

0,

(cid:22)

∈ P × Q ×
0 satisﬁes the QC deﬁned by

Snx+1, then

0)

¯
(
R
R
X
in, we have,

⊆

M

X

(cid:21)(cid:62)

(cid:20)x
1

Min

(cid:21)

(cid:20)x
1

0,

≥

0).

(
X

(34)

(35)

for all x0
deﬁned by

0. Similarly, the projected neural network controller ProjUt(π(
·
mid implies that,

∈ X
M

)) satisfying the QC

(cid:21)(cid:62)

(cid:20)x
1

Mmid

(cid:21)

(cid:20)x
1

0,

≥

x

∀

∈

Rnx+nn.

(36)

By left- and right-multiplying both sides of (34) by [x(cid:62) 1] and [x(cid:62) 1](cid:62), the basis vector in (28),
we have

(cid:21)(cid:62)

(cid:20)x
1

Min

(cid:21)

(cid:20)x
1

(cid:21)(cid:62)

(cid:20)x
1

+

Mmid

(cid:21)

(cid:20)x
1

(cid:21)(cid:62)

(cid:20)x
1

+

Mout

(cid:21)

(cid:20)x
1

The ﬁrst two quadratic terms in (37) are nonnegative for any x0
Consequently, the last quadratic term must be nonpositive for all x0

∈ X

(cid:21)(cid:62)

(cid:20)x
1

Mout

(cid:21)

(cid:20)x
1

0.

≤

By Proposition 4, the above condition is equivalent to

(cid:21)(cid:62)

(cid:20)y
1

(cid:21)

(cid:20)y
1

S

0,

≤

0.

≤

(37)

0 by (35) and (36), respectively.

0,

∈ X

(38)

(39)

y
∈ {

y = fπ(x0), x0

for all ¯y
0). Recall from (19) that the set of all points y that
=
0
∈ X
}
satisﬁes (39) is the candidate set ¯
0). Therefore, we conclude that ¯
(
0) must be a superset of
(
X
R
X
R
¯
0), i.e.
(
the exact one-step reachable set
R
X
R

(
X
R

(
R

(
X

0).

0)

⊆

X

|

9

4.3 Minimum-Volume Approximate Reachable Set

Theorem 1 provides a suﬃcient condition for over-approximating the one-step reachable set
0).
Now we can use this result to reformulate problem (14), which ﬁnds a minimum-volume approximate
reachable set ¯
R

If the approximate reachable set is parametrized by a polytope as in (20), it is diﬃcult to ﬁnd a
Rm×nx that describes the facets

minimum-volume polytope directly. However, given a matrix A
of the polytope, we can solve the following SDP problem,

(
R

(
X

0).

X

∈

minimize
P ∈P, Q∈Q, bi∈R

bi

subject to (34),

(40)

Rnx in A, SDP (40) ﬁnds the tightest halfspace
0). Finally, the polytopic approximate reachable set is given by

i ∈

for all i = 1,
bi
aiy

, m. For each ﬁxed facet a(cid:62)
(
X

that contains
y
{
the intersection of those halfsapces, i.e. ¯
(
R

· · ·
}

R

≤

X

|

y
{
If the approximate reachable set is parametrized by an ellipsoid as in (21), we can easily obtain

, as in Section 3.2.
b
}

0) =

Ay

≤

|

a minimum-volume ellipsoid that encloses

0) by solving,

(
X

R

minimize
P ∈P, Q∈Q,
A∈Snx , b∈Rnx

−

log det(A)

subject to (34).

(41)

Note that (34) is not convex in A and b. Nonetheless we can ﬁnd a convex constraint equivalent to
(34) using Schur complement. See [11] for detail.

Remark 3. In [9], an MILP-based approach is proposed for estimating forward reachable sets of
dynamical systems in closed-loop with neural network controllers. If the facets are given with the
same directions as the ones of the true reachable sets, then the estimated reachable sets are exact.
However, this method only works for polytopic reachable sets and does not scale well with the size
of the neural network, the volume, and the dimension of the initial set.

5 Numerical Experiments

In this section, we demonstrate our approach with two application examples. The controllers used
to generate training data were implemented in YALMIP [25]. All neural network controllers were
trained with ReLU activation functions and the Adam algorithm in PyTorch. We used MATLAB,
CVX [15] and Mosek [1] to solve the Reach-SDP problems.

5.1 Double Integrator

We ﬁrst consider a double integrator system

xt+1 =

xt +

(cid:21)

(cid:20)1 1
0 1
(cid:124) (cid:123)(cid:122) (cid:125)
A

ut

(cid:21)
(cid:20)0.5
1
(cid:124) (cid:123)(cid:122) (cid:125)
B

(42)

= [

1, 1] and

discretized with sampling time ts = 1s and subject to state and input constraints,
[
−
a prediction horizon NMPC = 10, weighting matrices Q = I2, R = 1, the terminal region
and the terminal weighting matrix P∞ synthesized from the discrete-time algebraic Riccati equa-
tion. The MPC is designed as a stabilizing controller which steers the system to the origin while

×
1, 1], respectively. We implemented a standard linear MPC following [6] with
LQR
∞

5, 5]

A

O

−

−

U

(cid:123) = [

10

satisfying the constraints. We then use the MPC to generate 2420 samples of state and input
pairs (x, πMPC(x)) for learning. The neural network has 2 hidden layers with 10 and 5 neurons,
respectively. Our goal is to verify if all initial states in
0.25, 0.25] can reach
the set
0.25, 0.25], a region near the origin, in N = 6 steps while avoid-
[
G
−
at all times. We computed the minimum-volume polytopic approximate reachable sets
ing
¯
1(
0) using the Reach-SDP introduced in Section 4. The matrix that determines
R
the direction of the facets is chosen as

−
, ¯
6(
R

0 = [2.5, 3]

0.25, 0.25]

A
X

= [

· · ·

0),

×

×

−

X

X

[

Ain =

(cid:20)1
0

1 0
−
1
0

0
1
−

1
1
−

1 1
−
1
1

(cid:21)(cid:62)

1
−
1
−

As shown in Figure 2, our approach yielded a tight outer-approximation of the reachable sets and
successfully veriﬁed the safety properties sought.

Figure 2:
Illustration of the exact reachable sets (blue), the over-approximated reachable sets
computed by Reach-SDP (red) and the goal set (green) of the double integrator. The solid black
line represents the state constraint x2

1.

≥ −

5.2 6D Quadrotor

In the second example, we apply Reach-SDP to the 6D quadrotor model in [27]. In order to have
a linear model as in (5), we rewrite the nonlinear quadrotor dynamics in [27] as follows,

˙x =

I3

(cid:20)03×3
03×3 03×3
(cid:123)(cid:122)
A

(cid:124)

x +

(cid:21)

(cid:125)



0
0


0


g


0

0

(cid:124)


0
0
0
0


0
0


0
0


g 0

−
0
1
(cid:123)(cid:122)
B

(cid:125)





(cid:124)

tan(θ)
tan(φ)
τ
(cid:123)(cid:122)
u



+



(cid:125)

(cid:21)

(cid:20)05×1
g
−
(cid:124) (cid:123)(cid:122) (cid:125)c

(43)

where g is the gravitational acceleration, the state vector x = [px, py, pz, vx, vy, vz](cid:62) include positions
and velocities of the quadrotor in the 3D space and the control vector u is a function of θ (pitch),
φ (roll) and τ (thrust), which are the control inputs of the original model. The control task is

11

2-0.500.511.522.53-2-1.5-1-0.500.51Reach-SDP<latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit><latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit><latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit><latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit>Exact<latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit><latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit><latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit><latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit>Goal<latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit><latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit><latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit><latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit>(cid:123) = [
A
−
π/9, π/9]

[

∈

×

×

−

×

×

5, 5]

1, 1]

1, 1]

[
−

[
−

[
−

5, 5]
[
−

5, 5]
[
×
−
π/9, π/9]

to steer the quadrotor to the origin while respecting the state constraints
×
1, 1] and the actuator constraints [θ, φ, τ ](cid:62)
[
×
−
[0, 2g]. We implemented a nonlinear MPC with a prediction horizon NMPC = 30, a least-squares
objective function that penalizes both states and inputs with weighting matrices Q = I6, R = I4
and the terminal constraint xNMPC = 0. We used the original nonlinear dynamics in [27] as
the prediction model in MPC, which is discretized with a sampling time ts = 0.1s using the
RungeKutta 4th order method. The nonlinear MPC problems were solved using SNOPT [14]. A
total number of 4531 feasible samples of state and input pairs (x, πMPC(x)) were generated and
used to train a neural network with 2 hidden layers and 32 neurons in each layer. The initial
(q0, Q0), where q0 = [4.7 4.7 3 0.95 0 0](cid:62) is the center and
set is given as an ellipsoid
Q0 = diag(0.052, 0.052, 0.052, 0.012, 0.012, 0.012) is the shape matrix. Here, we want to verify if all
[1.2, 2.6], which is deﬁned in the
initial states in
G
(px, py, pz)-space, in t = 1 second subject to the state and input constraints. We approximated
the ellipsoidal forward reachable sets ¯
0) using the Reach-SDP. The resulting
· · ·
R
approximate reachable sets are plotted in Figure 3 and 4 which shows that our method is able to
verify the given reach-avoid speciﬁcations.

0 can reach the set

= [3.7, 4.1]

×
, ¯
R

[2.5, 3.5]

0 =

10(

0),

1(

×

X

X

X

X

E

Figure 3:
(px, py)-space. The solid black line represents the state constraint px

Illustration of the exact and approximate reachable sets of the quadrotor system in the

5.

≤

Figure 4:
(px, pz)-space.

Illustration of the exact and approximate reachable sets of the quadrotor system in the

12

8Reach-SDP<latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit><latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit><latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit><latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit>Exact<latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit><latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit><latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit><latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit>Goal<latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit><latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit><latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit><latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit>3.844.24.44.64.855.22.533.544.559Reach-SDP<latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit><latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit><latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit><latexit sha1_base64="INYVofVWjVqyL5D4CF0JpXhSQyw=">AAAB+XicbVBNS8NAEN34WetX1KOXYBG8WJIi6LGgB4/1ox/QhrLZTtqlm03YnRRL6D/x4kERr/4Tb/4bt20O2vpg4PHeDDPzgkRwja77ba2srq1vbBa2its7u3v79sFhQ8epYlBnsYhVK6AaBJdQR44CWokCGgUCmsHweuo3R6A0j+UjjhPwI9qXPOSMopG6tt1BeMLsHigbnD/c1CZdu+SW3RmcZeLlpERy1Lr2V6cXszQCiUxQrduem6CfUYWcCZgUO6mGhLIh7UPbUEkj0H42u3zinBql54SxMiXRmam/JzIaaT2OAtMZURzoRW8q/ue1Uwyv/IzLJEWQbL4oTIWDsTONwelxBQzF2BDKFDe3OmxAFWVowiqaELzFl5dJo1L2vLJ3d1GqVvI4CuSYnJAz4pFLUiW3pEbqhJEReSav5M3KrBfr3fqYt65Y+cwR+QPr8wcuqpNM</latexit>Exact<latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit><latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit><latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit><latexit sha1_base64="8sys9lTxuDUTkGItRQb1zHJpqp0=">AAAB83icbVBNS8NAEJ3Ur1q/qh69LBbBU0mKoMeCCB4r2A9oQtlst+3SzSbsTqQl9G948aCIV/+MN/+N2zYHbX0w8Hhvhpl5YSKFQdf9dgobm1vbO8Xd0t7+weFR+fikZeJUM95ksYx1J6SGS6F4EwVK3kk0p1EoeTsc38799hPXRsTqEacJDyI6VGIgGEUr+T7yCWZ3E8pw1itX3Kq7AFknXk4qkKPRK3/5/ZilEVfIJDWm67kJBhnVKJjks5KfGp5QNqZD3rVU0YibIFvcPCMXVumTQaxtKSQL9fdERiNjplFoOyOKI7PqzcX/vG6Kg5sgEypJkSu2XDRIJcGYzAMgfaE5Qzm1hDIt7K2Ejai2CdiYSjYEb/XlddKqVT2v6j1cVeq1PI4inME5XIIH11CHe2hAExgk8Ayv8Oakzovz7nwsWwtOPnMKf+B8/gCHQ5Hx</latexit>Goal<latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit><latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit><latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit><latexit sha1_base64="9WAo8ulDcRIcqH1wCKdMhx/Qg0U=">AAAB8nicbVBNS8NAEN34WetX1aOXxSJ4KkkR9FjwoMcK9gPSUDbbSbt0kw27E7GE/gwvHhTx6q/x5r9x2+agrQ8GHu/NMDMvTKUw6Lrfztr6xubWdmmnvLu3f3BYOTpuG5VpDi2upNLdkBmQIoEWCpTQTTWwOJTQCcc3M7/zCNoIlTzgJIUgZsNERIIztJLfQ3jC/FYxOe1Xqm7NnYOuEq8gVVKg2a989QaKZzEkyCUzxvfcFIOcaRRcwrTcywykjI/ZEHxLExaDCfL5yVN6bpUBjZS2lSCdq78nchYbM4lD2xkzHJllbyb+5/kZRtdBLpI0Q0j4YlGUSYqKzv6nA6GBo5xYwrgW9lbKR0wzjjalsg3BW355lbTrNc+refeX1Ua9iKNETskZuSAeuSINckeapEU4UeSZvJI3B50X5935WLSuOcXMCfkD5/MHsNmRdQ==</latexit>3.844.24.44.64.855.21.21.41.61.822.22.42.62.833.26 Conclusions

In this paper, we propose the ﬁrst convex-optimization-based reachability analysis method for lin-
ear systems in feedback interconnection with neural network controllers. Our approach relies on
abstracting the nonlinear components of the closed-loop system by quadratic constraints. Then we
show that we can compute the approximate reachable sets via semideﬁnite programming. Future
work includes extending the current approach to incorporate nonlinear dynamics and to approxi-
mate backward reachable sets, which is useful for certifying invariance properties.

A Proof of Proposition 5

Assuming the same activation function for all neurons throughout the entire network, we can write
(22) compactly as

(44)
Rnx+nn+2nu is used to deﬁne the basis vector in (28). Now, we introduce two auxiliary
where x
variables y and z such that y = Ax + a and z = Bx + b. By Lemma 1, the neural network
in (26) with basis [y(cid:62) z(cid:62) 1](cid:62). Consider the congruence
in (44) satisﬁes the QC deﬁned by
transformation,

Bx + b = φ(Ax + a)

Q

∈







y
z
1

 = Emid

(cid:21)

(cid:20)x
1

.

(45)

By Lemma 2 the neural network (22) satisﬁes the QC deﬁned by
concludes the proof.

M

mid with basis [x(cid:62) 1](cid:62), which

References

[1] MOSEK ApS. The MOSEK optimization toolbox for MATLAB manual. Version 8.1., 2017.

[2] Alberto Bemporad and Manfred Morari. Veriﬁcation of hybrid systems via mathematical
In International Workshop on Hybrid Systems: Computation and Control,

programming.
pages 31–45. Springer, 1999.

[3] Alberto Bemporad, Fabio Danilo Torrisi, and Manfred Morari. Optimization-based veriﬁca-
In International

tion and stability characterization of piecewise aﬃne and hybrid systems.
Workshop on Hybrid Systems: Computation and Control, pages 45–58. Springer, 2000.

[4] Franco Blanchini and Stefano Miani. Set-theoretic methods in control. Springer, 2008.

[5] Mariusz Bojarski, Davide Del Testa, Daniel Dworakowski, Bernhard Firner, Beat Flepp, Pra-
soon Goyal, Lawrence D Jackel, Mathew Monfort, Urs Muller, Jiakai Zhang, et al. End to end
learning for self-driving cars. arXiv preprint arXiv:1604.07316, 2016.

[6] Francesco Borrelli, Alberto Bemporad, and Manfred Morari. Predictive control for linear and

hybrid systems. Cambridge University Press, 2017.

[7] Steven Chen, Kelsey Saulnier, Nikolay Atanasov, Daniel D Lee, Vijay Kumar, George J Pap-
pas, and Manfred Morari. Approximating explicit model predictive control using constrained
neural networks. In 2018 Annual American control conference (ACC), pages 1520–1527. IEEE,
2018.

13

[8] Souradeep Dutta, Xin Chen, and Sriram Sankaranarayanan. Reachability analysis for neural
feedback systems using regressive polynomial rule inference. In Proceedings of the 22nd ACM
International Conference on Hybrid Systems: Computation and Control, pages 157–168, 2019.

[9] Souradeep Dutta, Susmit Jha, Sriram Sanakaranarayanan, and Ashish Tiwari. Output range

analysis for deep neural networks. arXiv preprint arXiv:1709.09130, 2017.

[10] Ruediger Ehlers. Formal veriﬁcation of piece-wise linear feed-forward neural networks.

In
International Symposium on Automated Technology for Veriﬁcation and Analysis, pages 269–
286. Springer, 2017.

[11] Mahyar Fazlyab, Manfred Morari, and George J Pappas. Probabilistic veriﬁcation and
arXiv preprint

reachability analysis of neural networks via semideﬁnite programming.
arXiv:1910.04249, 2019.

[12] Mahyar Fazlyab, Manfred Morari, and George J Pappas. Safety veriﬁcation and robustness
analysis of neural networks via quadratic constraints and semideﬁnite programming. arXiv
preprint arXiv:1903.01287, 2019.

[13] Mahyar Fazlyab, Alexander Robey, Hamed Hassani, Manfred Morari, and George Pappas.
Eﬃcient and accurate estimation of lipschitz constants for deep neural networks. In Advances
in Neural Information Processing Systems, pages 11423–11434, 2019.

[14] Philip E. Gill, Walter Murray, and Michael A. Saunders. SNOPT: An SQP algorithm for

large-scale constrained optimization. SIAM Rev., 47:99–131, 2005.

[15] Michael Grant, Stephen Boyd, and Yinyu Ye. Cvx: Matlab software for disciplined convex

programming, 2009.

[16] M. Herceg, M. Kvasnica, C.N. Jones, and M. Morari. Multi-Parametric Toolbox 3.0. In Proc. of
the European Control Conference, pages 502–510, Z¨urich, Switzerland, July 17–19 2013.

[17] Michael Hertneck, Johannes K¨ohler, Sebastian Trimpe, and Frank Allg¨ower. Learning an
IEEE Control Systems Letters,

approximate model predictive controller with guarantees.
2(3):543–548, 2018.

[18] Chao Huang, Jiameng Fan, Wenchao Li, Xin Chen, and Qi Zhu. Reachnn: Reachability
analysis of neural-network controlled systems. ACM Transactions on Embedded Computing
Systems (TECS), 18(5s):1–22, 2019.

[19] Xiaowei Huang, Marta Kwiatkowska, Sen Wang, and Min Wu. Safety veriﬁcation of deep
In International Conference on Computer Aided Veriﬁcation, pages 3–29.

neural networks.
Springer, 2017.

[20] Radoslav Ivanov, James Weimer, Rajeev Alur, George J Pappas, and Insup Lee. Verisig:
verifying safety properties of hybrid systems with neural network controllers. In Proceedings of
the 22nd ACM International Conference on Hybrid Systems: Computation and Control, pages
169–178, 2019.

[21] Guy Katz, Clark Barrett, David L Dill, Kyle Julian, and Mykel J Kochenderfer. Reluplex:
In International Conference on

An eﬃcient smt solver for verifying deep neural networks.
Computer Aided Veriﬁcation, pages 97–117. Springer, 2017.

14

[22] J Zico Kolter and Eric Wong. Provable defenses against adversarial examples via the convex

outer adversarial polytope. arXiv preprint arXiv:1711.00851, 1(2):3, 2017.

[23] Alexey Kurakin, Ian Goodfellow, and Samy Bengio. Adversarial examples in the physical

world. arXiv preprint arXiv:1607.02533, 2016.

[24] Robert P Kurshan. Computer-aided veriﬁcation of coordinating processes:

the automata-

theoretic approach. Princeton university press, 2014.

[25] Johan Lofberg. Yalmip: A toolbox for modeling and optimization in matlab. In 2004 IEEE
international conference on robotics and automation (IEEE Cat. No. 04CH37508), pages 284–
289. IEEE, 2004.

[26] Alessio Lomuscio and Lalit Maganti. An approach to reachability analysis for feed-forward

relu neural networks. arXiv preprint arXiv:1706.07351, 2017.

[27] Diego Manzanas Lopez, Patrick Musau, Hoang-Dung Tran, and Taylor T. Johnson. Veriﬁca-
tion of closed-loop systems with neural network controllers. In Goran Frehse and Matthias
Althoﬀ, editors, ARCH19. 6th International Workshop on Applied Veriﬁcation of Continuous
and Hybrid Systems, volume 61 of EPiC Series in Computing, pages 201–210. EasyChair, 2019.

[28] Yunpeng Pan, Ching-An Cheng, Kamil Saigol, Keuntaek Lee, Xinyan Yan, Evangelos
Theodorou, and Byron Boots. Agile autonomous driving using end-to-end deep imitation
learning. arXiv preprint arXiv:1709.07174, 2017.

[29] Nicolas Papernot, Patrick McDaniel, Somesh Jha, Matt Fredrikson, Z Berkay Celik, and Anan-
thram Swami. The limitations of deep learning in adversarial settings. In Security and Privacy
(EuroS&P), 2016 IEEE European Symposium on, pages 372–387. IEEE, 2016.

[30] Stephen Prajna and Ali Jadbabaie. Safety veriﬁcation of hybrid systems using barrier cer-
In International Workshop on Hybrid Systems: Computation and Control, pages

tiﬁcates.
477–492. Springer, 2004.

[31] Ahmed H Qureshi, Anthony Simeonov, Mayur J Bency, and Michael C Yip. Motion planning
networks. In 2019 International Conference on Robotics and Automation (ICRA), pages 2118–
2124. IEEE, 2019.

[32] Aditi Raghunathan, Jacob Steinhardt, and Percy S Liang. Semideﬁnite relaxations for cer-
In Advances in Neural Information Processing

tifying robustness to adversarial examples.
Systems, pages 10900–10910, 2018.

[33] Claire J Tomlin, Ian Mitchell, Alexandre M Bayen, and Meeko Oishi. Computational tech-
niques for the veriﬁcation of hybrid systems. Proceedings of the IEEE, 91(7):986–1001, 2003.

[34] Min Wen and Ufuk Topcu. Constrained cross-entropy method for safe reinforcement learning.

In Advances in Neural Information Processing Systems, pages 7450–7460, 2018.

[35] Tianhao Zhang, Gregory Kahn, Sergey Levine, and Pieter Abbeel. Learning deep control poli-
cies for autonomous aerial vehicles with mpc-guided policy search. In 2016 IEEE international
conference on robotics and automation (ICRA), pages 528–535. IEEE, 2016.

15

