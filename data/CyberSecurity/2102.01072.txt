MalNet: A Large-Scale Image Database of Malicious Software

Scott Freitas∗
safreita1@gmail.com
Georgia Institute of Technology
Atlanta, GA, USA

Rahul Duggal
rahulduggal@gatech.edu
Georgia Institute of Technology
Atlanta, Georgia, USA

Duen Horng Chau
polo@gatech.edu
Georgia Institute of Technology
Atlanta, Georgia, USA

2
2
0
2

p
e
S
4

]

R
C
.
s
c
[

2
v
2
7
0
1
0
.
2
0
1
2
:
v
i
X
r
a

ABSTRACT
Computer vision is playing an increasingly important role in auto-
mated malware detection with the rise of the image-based binary
representation. These binary images are fast to generate, require no
feature engineering, and are resilient to popular obfuscation meth-
ods. Significant research has been conducted in this area, however, it
has been restricted to small-scale or private datasets that only a few
industry labs and research teams have access to. This lack of avail-
ability hinders examination of existing work, development of new
research, and dissemination of ideas. We release MALNET-IMAGE,
the largest public cybersecurity image database, offering 24× more
images and 70× more classes than existing databases (available at
https://mal-net.org). MALNET-IMAGE contains over 1.2 million mal-
ware images—across 47 types and 696 families—democratizing
image-based malware capabilities by enabling researchers and prac-
titioners to evaluate techniques that were previously reported in
propriety settings. We report the first million-scale malware detec-
tion results on binary images. MALNET-IMAGE unlocks new and
unique opportunities to advance the frontiers of machine learning,
enabling new research directions into vision-based cyber defenses,
multi-class imbalanced classification, and interpretable security.

CCS CONCEPTS
• Security and privacy → Malware and its mitigation; • Com-
puting methodologies → Neural networks; Supervised learning by
classification.

KEYWORDS
Dataset, deep learning, supervised learning, computer vision, im-
balanced classification, cybersecurity, malware detection, binary
image

INTRODUCTION

1
Attack campaigns from criminal organizations and nation state ac-
tors are one of the most powerful forms of disruption, costing the
U.S. economy as much as $109 billion a year [40]. These cyber at-
tacks are highly sophisticated, targeting governments and large-scale

* Now at Microsoft, work completed when at Georgia Tech.

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CIKM ’22, October 17–21, 2022, Atlanta, GA, USA
© 2022 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-9236-5/22/10. . . $15.00
https://doi.org/10.1145/3511808.3557533

Dataset

Images

Classes

c
i
l
b
u
P

e
t
a
v
i
r
P

MALNET-IMAGE

1,262,024

Virus-MNIST [39]

Malimg [38]

Stamina [7]

McAfee [20]

Kancherla [28]

Choi [8]

Fu [19]

Han [21]

IoT DDoS [48]

51,880

9,458

782,224

367,183

27,000

12,000

7,087

1,000

365

696

10

25

2

2

2

2

15

50

3

Table 1: MALNET-IMAGE: a state-of-the-art cybersecurity im-
age database containing over 1.2 million binary images across a
hierarchy of 47 types and 696 families.

enterprises to interrupt critical services and steal intellectual prop-
erty [18]. Defending against these attacks requires the development
of strong antivirus tools to identify new variants of malicious soft-
ware before they can infect a network. Unfortunately, as a majority
of newly identified malware is polymorphic in nature, where a few
subtle source code changes result in significantly different compiled
code (e.g., instruction reordering, branch inversion, register alloca-
tion) [15, 53], the predominant signature-based form of malware
detection is rendered inert [46].

To combat these issues, the cybersecurity industry [7] has turned
to image-based malware representations as they are quick to generate,
require no feature engineering, and are resilient to common obfus-
cation techniques (e.g., section encryption [37], file packing [38]).
For all of these reasons, image-based malware detection and classifi-
cation research has surged in popularity. Unfortunately, a majority
of this research uses small-scale or private data repositories, mak-
ing it increasingly difficult to characterize and differentiate existing
work, develop new research methodologies, and disseminate new
ideas [7, 9, 16, 19–21, 32, 33, 37, 38, 42]. To address these issues,
we constructed MALNET-IMAGE, the first large-scale ontology of
malicious software images.

1.1 Contributions
1. Largest Cybersecurity Image Database. MALNET-IMAGE con-
tains over 1.2 million software images across a hierarchy of 47 types
and 696 families, enabling researchers and practitioners to conduct
experiments on an industry scale dataset, and evaluate techniques

 
 
 
 
 
 
CIKM ’22, October 17–21, 2022, Atlanta, GA, USA

Scott Freitas, Rahul Duggal, & Duen Horng Chau

that were previously reported in propriety settings. Compared to the
next large public database [39], MALNET-IMAGE offers 24× more
images and nearly 70× more classes (see Table 1). We report the
first public large-scale malware detection and classification results
on binary images, where we are able to detect malicious files with
an AUC of 0.94 and classify them across 47 types and 696 families
with a macro-F1 score of 0.49 and 0.45, respectively.

2. Permissive Licensing & Open Source Code. We release MALNET-
IMAGE with a CC-BY license, allowing researchers and practitioners
to share and adapt the database to their needs. We open-source the
code to create the images and run the experiments on Github.

3. Visual Exploration Without Downloading. We develop MALNET-
IMAGE EXPLORER, an image exploration and visualization tool that
enables researchers and practitioners to easily study the data without
installation or download. MALNET-IMAGE EXPLORER is available
online at: https://mal-net.org.

4. Community Impact. MALNET-IMAGE offers new and unique
opportunities to advance the frontiers of cybersecurity research. In
particular, MALNET-IMAGE offers researchers a chance to study
imbalanced classification on a large-scale cybersecurity database
with a natural imbalance ratio of 16, 901× (see Figure 1); and explore
explainability research in a high impact domain, where it is critical
that security analysts can interpret and trust the model.

2 ADVANCING THE STATE-OF-THE-ART
Aside from MALNET-IMAGE, there are only two publicly avail-
able binary-image based cybersecurity datasets— Malimg [38] and
Virus-MNIST [39]—containing 9,458 images across 25 classes,
and 51,880 images across 10 classes, respectively. In surveying
the malware detection and classification literature [3–8, 16, 19–
21, 26, 28, 29, 33–35, 38, 43, 48, 54], we observed that almost
all experiments were conducted on small-scale or private data. As
the field advances, large-scale public databases are necessary to
develop the next generation of algorithms. In Table 1, we compare
MALNET-IMAGE with other public and private cybersecurity image
datasets. We find that that MALNET-IMAGE offers 24× more images
and 70× the classes, compared to the largest alternative public binary
image database (Virus-MNIST [39]); and 479, 800 more images and
694 more classes than the largest private database (Stamina [7]).
We do not compare against repositories of malicious binaries such
as AndroZoo [30], AMD [50], Microsoft-BIG [45], Malicia [36],
VirusShare, and VirusTotal in this discussion, as none of them have
images available to use.

Security Implications. With the release of MALNET-IMAGE, re-
searchers will now have access to a critical resource to develop
advanced, image-based malware detection and classification algo-
rithms. Like most open data resources, there is a potential for misuse
by malicious actors who aim to craft new variants to evade detec-
tion. We believe MALNET-IMAGE’s contribution to the research
community significantly outweighs such risk.

Figure 1: Class imbalance distribution for type and family.

representation learning database MALNET [17], offering signifi-
cant new malware detection capabilities. Below, we describe the
provenance and construction of MALNET-IMAGE.

Collecting Candidate Images. We construct MALNET-IMAGE us-
ing the Android ecosystem due to its large market share [41], easy
accessibility [30] and diversity of malicious software [1]. With the
generous permission of AndroZoo [2, 30], we collected 1,262,024
Android APK files, specifically selecting APKs containing both a
family and type label obtained from Euphony [25], a state-of-the-
art malware labeling system that aggregates and learns from the
labelling results of up to 70 antivirus vendors from VirusTotal [49].

Processing the Images. The first step in constructing the image
representation was to extract the DEX file (bytecode) from each
Android APK. The extracted DEX file was then converted into a
1D array of 8 bit unsigned integers. Each entry in the array is in
the range [0, 255] where 0 corresponds to a black pixel and 255 a
white pixel. We then convert each 1D byte array into a 2D array
using standard linear plotting where the width of the image is fixed

2.1 Constructing MalNet-Image
MALNET-IMAGE is an ambitious project to collect and process over
1.2 million binary images, and is a major extension to the graph

Figure 2: Left: Android DEX file structure, composed of three
major components—(1) header, (2) ids, and (3) data. Right: bi-
nary image representation of the DEX file.

10k100k100101k1M10k100k10000700461k1M#ImagesTypeIndexFamilyIndexImageDistributionAcross47TypesImageDistributionAcross696Families7,827ximbalance16,901ximbalanceMalNet: A Large-Scale Image Database of Malicious Software

CIKM ’22, October 17–21, 2022, Atlanta, GA, USA

and the height is allowed to vary based on the file size. We use the
same image width proposed in the seminal work [37] (and follow
up work [11, 27, 44, 51]), and scale each image to 256 × 256 using a
standard Lanczos filter from the Pillow library. Finally, we color each
byte according to its use, adding a layer of semantic information on
top of the raw bytecode. While a variety of techniques can be used
to encode semantic information into the image, there is currently
no accepted standard. We follow [20] and assign each byte to a
particular RGB channel depending on its position in the DEX file
structure—(i) header, (ii) identifiers and class definitions, and (iii)
data (see Figure 2). Distributed across Google Cloud’s General-
purpose (N2) machine with 16 cores running 24 hours a day, this
process took approximately a week. We release the source code used
to process the APKs on Github.

MalNet-Image Tiny. We construct MALNET-IMAGE TINY, con-
taining 61, 201 training, 8, 743 validation and 17, 486 test images, for
type level classification experiments by removing the 4 largest types
in MALNET-IMAGE. The goal of MALNET-IMAGE-TINY is to en-
able users to rapidly prototype new ideas, since it requires only a
fraction of the time needed to train a new model. MALNET-IMAGE
TINY is released alongside the full dataset at https://mal-net.org.

3 MALNET-IMAGE APPLICATIONS
MALNET-IMAGE offers new and unique opportunities to advance
the frontiers of cybersecurity research. As examples, we show three
exciting new applications made possible by the MALNET-IMAGE
database—(1) as a state-of-the-art cybersecurity image benchmark
in Section 3.1; (2) as the first large-scale public analysis of malicious
software detection using binary images in Section 3.2; and (3) how
to categorize high-risk malware threats (e.g., is this Ransomware
or Spyware?) in Section 3.3. Then, in Section 3.4 we highlight new
research directions enabled by MALNET-IMAGE.

Application Setup. We divide MALNET-IMAGE into three stratified
sets of data, with a training-validation-test split of 70-10-20 respec-
tively; repeated for both type and family labels (suggested splits
available at https://mal-net.org). In addition, we conduct malware de-
tection experiments by grouping all 46 malicious software images
into one type while the benign type maintains its original label. We
evaluate 3 common architectures—ResNet [22], DenseNet [24] and
MobileNet [23], based on its macro-F1 score, as is typical for highly
imbalanced datasets [12–14, 17]. Each model is trained for 100
epochs using cross entropy loss (unless specified otherwise) and an
Adam optimizer on an Nvidia DGX-1 containing 8 V100 GPUs and
512GB of RAM using Keras with a Tensorflow backend.

3.1 Application 1: Benchmarking Techniques
Leveraging the unprecedented scale and diversity of MALNET-
IMAGE, we evaluate numerous malware detection and classification
techniques that have previously been studied using only private or
small-scale databases. Specifically, we evaluate recent techniques
including: (a) semantic information encoding via colored channels,
(b) model architecture, (c) imbalanced classification techniques, and
(d) the performance of MALNET-IMAGE TINY, a small-scale ver-
sion of MALNET-IMAGE. We detail the setup, results, and analysis
of each experiment below.

Binary

Type

Family

Model

Param GFlop F1

P

R F1

P

R F1

P

R

RN18

RN50

RN101

DN121

DN169

12M

26M

45M

7.9M

14M

1.8 .86 .89 .84 .47 .56 .42 .45 .54 .42

3.9 .85 .91 .81 .48 .57 .44 .47 .54 .44

7.6 .86 .88 .84 .48 .59 .44 .47 .54 .44

2.9 .86 .90 .83 .47 .56 .43 .46 .53 .44

3.4 .86 .89 .84 .48 .57 .43 .46 .55 .43

MN2(x.5)

1.9M

0.1 .86 .89 .83 .46 .55 .42 .45 .53 .42

MN2(x1)

3.5M

0.3 .85 .89 .83 .45 .53 .42 .44 .53 .41

Table 2: We evaluate the performance of 3 architectures—
ResNet, DenseNet and MobileNetV2—on its macro-F1, macro-
precision, and macro-recall. We conduct the remaining experi-
ments using the ResNet18 model as it provides a strong balance
between performance and efficiency.

Semantic Information Encoding. We evaluate the effect of in-
formation encoding in the classification process by training two
ResNet18 models—one on the RGB images, where each byte is
assigned to a particular color channel depending on its position in
the DEX file structure as proposed in [20], and another on grayscale
converted images. We find no improvement in the macro-F1 score
using semantically encoded RGB images compared to grayscale
ones. As there are alternative encoding techniques [20], we believe
comparing the effects of different encodings could be an interest-
ing future research direction. Going forward, all models are trained
using grayscale images.

Evaluating Model Architectures. We evaluate malware detection
and classification performance on 3 popular deep learning archi-
tectures (ResNet, DenseNet and MobileNetV2) across a variety of
model sizes, using grayscale encoded images, and cross entropy loss.
In Table 2, we report the macro-F1, macro-precision, and macro-
recall of each model. We find that all models obtain similar macro-F1
scores, indicating that a small model has enough capacity to learn
the features present in the binary images. Going forward, all experi-
ments use a ResNet18 model due to its strong performance and fast
training time.

Accounting for Class Imbalance. We evaluate 3 imbalanced clas-
sification techniques—(1) class reweighting with cross entropy loss,
(2) focal loss, and (3) class reweighting with focal loss; and compare
this to a model trained using cross entropy loss without class weight-
ing. For class reweighting, each example of a class 𝑐 is weighted
1−𝛽
1−𝛽𝑛𝑐 , where 𝑛𝑐 is the number
according to it’s effective number
of images in class 𝑐 and 𝛽 = 0.999 is selected through a line search
across standard values [10] of {0.9, 0.99, 0.999, 0.9999}. For focal
loss [31], a regularization technique that tackles imbalance by estab-
lishing margins based on the class size, we set the hyperparameter
𝛾 = 2 as suggested in [31].

Analyzing the results, we find that cross entropy loss with class
reweighting improves the type macro-F1 score by 0.021, but lowers
the binary and family classification scores by 0.002 and 0.006, re-
spectively. In particular, we notice that MALNET-IMAGE’s smallest

CIKM ’22, October 17–21, 2022, Atlanta, GA, USA

Scott Freitas, Rahul Duggal, & Duen Horng Chau

types benefit the most from class reweighting, where the ‘Click’ type
(113 examples), sees its F1 score rise from 0 to 0.91. On the other
hand, focal loss shows no improvement over the baseline model,
likely due to its design for use in dense object detectors like R-CNN.
Going forward, all experiments use cross entropy loss with class
reweighting due to the strong improvement in smaller malware types.

MALNET-IMAGE TINY Performance. We train a ResNet18 model
on grayscale images using cross entropy loss and class reweighting,
and achieve a macro-F1 score of 0.65. Compared to full dataset, the
macro-F1 score is significantly higher 0.65 vs 0.49; which is unsur-
prising since the largest 4 types contained a significant proportion of
the image diversity (based on the number of families), resulting in
an easier classification task.

Limitations. Methods that work well on other datasets may not
work well on MALNET-IMAGE due to structural differences in the
images; vice-versa, methods that work on MALNET-IMAGE may
not transfer well to other datasets. We hope this work inspires new
research in the binary image domain, enabling the development of
methods that generalize across key domains such as cybersecurity.

3.2 Application 2: Malware Detection
Researchers and practitioners can now conduct malware detection
experiments on an industry scale dataset, evaluating things that were
previously reported in propriety settings. Using the model selected in
Section 3.1—a ResNet18 model trained on grayscale images using
cross entropy loss and class reweighting—we perform an in-depth
analysis of this highly imbalanced detection problem containing
1, 182, 905 malicious and 79, 119 benign images. We find that the
model is able to obtain a strong macro-F1 score of 0.86, macro-
precision of 0.89 and a macro-recall of 0.84. We further study the
model’s detection capabilities by analyzing its ROC curve, where
the model achieves an AUC score of 0.94, and is able to identify 84%
of all malicious files with a false positive rate of 10% (a common
threshold used in security [7]). This first of its kind analysis allows
researchers insight into malware detection that is usually restricted
to handful of industry labs.

MALNET-IMAGE also opens new opportunities in the nascent and
promising research direction of analyzing attention maps to interpret
malware detection results. Yakura et al. [51, 52] showed that specific
byte sequences found in the attention map closely correlate with
malicious code payloads. We evaluate the potential of attention maps
on MALNET-IMAGE using the popular Grad-Cam [47] technique
to highlight regions of interest across 3 types of malware and be-
nignware in Figure 3. In the malware images (left three), we see the
attention map is focused on thin regions of bytecode in the data sec-
tion (where malicious payloads are often stored), while in the benign
images (right side) the attention map is dispersed across the larger
data region. This type of visual analysis can significantly reduce the
amount of time and effort required to manually investigate a file by
guiding security analysts to suspicious regions of the bytecode.

3.3 Application 3: Malware Classification
MALNET-IMAGE opens up new research into binary images as a tool
for multi-class malware classification (e.g., is this file Ransomware
or Spyware?). Using the model selected in Section 3.1, we perform

Figure 3: Model attention patterns across 4 malware types (each
with 2 images). Ransom++Trojan: focus on thin region of data
section. Benign: wide range of attention across data section. Ad-
ware: attention on circular bytecode “hotspots”. Monitor: focus
on “empty” black region of data section.

an in-depth analysis of its multi-class classification capability across
47 types and 696 families of malware. We find the model is able to
classify the malware type and malware family with a macro-F1 score
of 0.49 and 0.45, respectively.

In Figure 4, we conduct an in-depth analysis into type level clas-
sification performance through a confusion matrix heatmap. A dark
diagonal indicates strong classifier performance, where a dark off-
diagonal entry indicates poor performance. Each square in the di-
agonal indicates the percent of examples correctly classified for a
particular malware type, and each off-diagonal row entry indicates
the percent of incorrectly classified examples for a particular mal-
ware type. We find that four types of malware comprise the majority
of misclassifications: Adware, Benign, Riskware, and Trojan. Un-
surprisingly, these are the 4 largest types of malware (based on the
number of images in each class), indicating the strong effect that
data imbalance has in the malware classification process. In addition,
the heatmap can be used to identify potential naming disagreements
between vendor labels (e.g., “adware” and “adsware”), serving as
the basis for merging certain types of malware. To the best of our
knowledge, this is the first public large-scale analysis of malware
classification, providing a new state-of-the-art benchmark to com-
pare against.

3.4 Enabling New Research Directions
The scale and diversity of MALNET-IMAGE opens up new exciting
research opportunities to the ML and security communities. Below,
we present 3 promising directions (R1-R3).

R1. Advancing Vision Based Cybersecurity Research. Research
into developing image-based malware detection and classifi-
cation algorithms has recently surged across industry (e.g.,
Intel-Microsoft collaboration on Stamina [7], security compa-
nies [20, 39]) and academia [3–6, 8, 16, 19, 21, 26, 28, 29, 33–
35, 43, 48, 54]. However, existing public datasets contain only
a handful of classes and thousands of images, and as the field
advances, larger and more challenging datasets are needed for

BenignAdwareMonitorRansom++TrojanVisualizingModelAttentionRegionsMalNet: A Large-Scale Image Database of Malicious Software

CIKM ’22, October 17–21, 2022, Atlanta, GA, USA

Figure 4: Malware classification results using confusion matrix heatmap (classes in descending order of number of samples). We
analyze type level classification performance, where a dark diagonal indicates strong performance, and a dark off-diagonal indicates
poor performance. Each square in the diagonal indicates the percent of examples correctly classified for a particular malware type,
and each off-diagonal entry indicates the percent of incorrectly classified examples for a particular type.

adwaretrojanbenignriskwareaddisplaysprspywareexploitdownloadersmssend++trojantrojsmssendclicker++trojanadswaremalwareadware++adwarerogspymonitorransom++trojanbanker++trojantrjgrayadware++grayware++virusfakeinst++trojanmalware++trjbackdoordropper++trojantrojandownloaderhacktoolfakeappclickfraud++riskwareadloadaddisplay++adwareadware++virusclickerfakeapp++trojanriskware++smssendrootnik++trojanwormfakeangryvirustrojandropperrisktool++riskware++virusadwarearespy++trojanclick.92.04.01.01.01000000000000000000000000000000000000000000.3.59.03.03.01.0100.0100000000000000000000000000000000000000.18.07.7200000000000000000000000000000000000000000000.24.18.01.540.0100000000000000000000000000000000000000000.44.09.01.01.44000000000000000000000000000000000000000000.25.14.02.020.53000.01.01000000000000000000000000000000000000.22.12.01.02.010.590000.01000000000000000.010000000000000000000.07.04.040000.84000000000000000000000000000000000000000.04.32.02.010000.5600000.0200000000.0100000000000000.0100000000.3.11.03.020.06000.460000000000000000000000000000000000000.36.2.05.030.02.02000.230000.010.030000.010000000.01.01000000000000000.16.2.01.020.0200000.5800000000000000000000000000000000000.100000000000.8900.010000000000000000000000000000000.79.04.070000000000.09000000000000000000000000000000000.25.21.09.02.0200.06.0500000.210000000.01.0300000000000000.0300000000.28.09.04.010.01.2000.010.0100.350000000000000000000000000000000.17.1.08.01.01000.0100000.010.59000000.0100000000000000000000000.17.06.0100.01000.010000000.73.0100000000000000000000000000000.040000000000000000.94000000000000000000.010000000.010.06.03.080000000000000000.82.0100000000000000000000000000.12.09.22.01000000000000000.01.5500000000000000000000000000.3.15.04.050.01.010.01.01.01000.0100000.01.35.010000.01000.01.0200000000000000.2.24.08.210.0200.010.03000.010000000.2000000000000000000000000.15.13.08.020.0100.0400000.1300000000.400000000000000.0300000000.12.12.07.010.020.0100000.0100000.020000.6200000000000000000000000000000000000000000000000.9800.02000000000000000000.62.07.0300.020000.0200000.01000000000.220000000.01000000000000.13.3500.010.010.0300000.02000000000000.4400000000000000.010000.03.11.080000000000000000000000.3700.42000000000000000000.24.44.0300.0400000000000000000000000.2600000000000000000.24.32.020.0400000.010000000000000000000.3600000.010000000000.01.0700000000000000000000000000000.92000000000000000.1.030.0100000000000000000.120000000000.7300000000000000.75.07.05000000000000000000000000000000.140000000000000.45.18.02.0200.020.0200000.0200000000.020000000000.25000000000000.64.17.0200000000000000000000000000000000.1700000000000.08.06.35000000000000000000000000000000000.510000000000.27.27.0800000.0200000.02000.02000000000000000000.33000000000.16.180.040.07000.130000000000000.1600000000000000.2700000000.32.11.3200.020000.02000.020.02000000000.02000000000000.140000000.57.070000000000000.02000000000000000000000000.33000000.13.08.05.030000000000000000000000000000000000000.7100000.2.29.06.0300000000000000000000000.0300000000000000.40000.33.2.1300000.070000000000000000000000000000000000.27000.55.1.0300000000000000000000000000000000000000000.3200.25.25.17.0400000000000000000000000000000000000000000.2900.0900000000000000000000000000000000000000000000.9101fractionofexamplesPredictedLabelTrueLabelClassificationPerformance:ImageTypeCIKM ’22, October 17–21, 2022, Atlanta, GA, USA

Scott Freitas, Rahul Duggal, & Duen Horng Chau

the next generation of models. With the release of MALNET-
IMAGE, researchers have access to a critical resource to develop
and benchmark advanced image-based malware detection and
classification algorithms, previously restricted to a few industry
labs and research teams.

R2. Extending Imbalanced Classification to a New Domain. Only
preliminary work has studied binary-image malware classifi-
cation under data imbalance [54] due to the limited number of
classes and images available in public datasets. As a result, it
is unknown whether many techniques may generalize to the
binary-image domain, and how they will perform in highly im-
balanced classification scenarios. We take a first step in this
direction in Section 3.1, where we show that classes containing
only a few examples typically underperform relative to their
more populous counterparts—highlighting the significant chal-
lenge of imbalanced classification in the cybersecurity domain.
By releasing MALNET-IMAGE, one of the largest naturally
imbalanced databases to date, we hope to foster new interest
in this important research area, enabling the machine learning
community to impact and generalize across domains.

R3. Interpretable Cybersecurity Research. Preliminary research
has demonstrated the importance of attention mechanisms in
binary-image malware classification, where extracted regions
can provide strong indicators to human analysts, helping guide
them to suspicious parts of the bytecode for additional anal-
ysis [51, 52]. This includes recent research in salience based
methods that automatically discover concepts, helping to iden-
tify correlated regions of bytecode [55]. Prior to MALNET-
IMAGE, researchers were limited to a small number of mali-
cious families and types, hindering their ability to conduct large-
scale explainability studies. With MALNET-IMAGE’s nearly
700 classes, researchers can explore a wide variety of mali-
cious software, enabling new breakthroughs and discoveries.
For example, researchers might discover that new types of visu-
alization and sense-making techniques are needed to accurately
summarize large volumes of binary-image data to enhance se-
curity analysts decision making capabilities.

4 CONCLUSION
Computer vision research into binary-image malware detection and
classification is a crucial tool in protecting enterprise networks and
governments from cyber attacks seeking to interrupt critical services
and steal intellectual property. Leveraging MALNET-IMAGE’s scale
and diversity—containing 1, 262, 024 binary images across a hierar-
chy of 47 types and 696 families—researchers and practitioners can
now conduct experiments that were previously restricted to a few in-
dustry labs and research teams. We hope MALNET-IMAGE becomes
a central resource for a broad range of research into vision-based cy-
ber defenses, multi-class imbalanced classification, and interpretable
security.

ACKNOWLEDGMENTS
We thank Kevin Allix and AndroZoo colleagues for generously
allowing us to use their data in this research; this work was in part

supported by NSF grant IIS-1563816, CNS-1704701, GRFP (DGE-
1650044), a Raytheon research fellowship, and an IBM fellowship.

REFERENCES
[1] 2018. Nokia Threat Intelligence Report. Network Security (2018). https://doi.

org/10.1016/S1353-4858(18)30122-3

[2] Kevin Allix, Tegawendé F Bissyandé, Jacques Klein, and Yves Le Traon. 2016.
Androzoo: Collecting millions of android apps for the research community. In
2016 IEEE/ACM 13th Working Conference on Mining Software Repositories
(MSR). IEEE, 468–471.

[3] Ahmad Azab and Mahmoud Khasawneh. 2020. MSIC: Malware Spectrogram

Image Classification. IEEE Access 8 (2020), 102007–102021.

[4] Roland Burks, Kazi Aminul Islam, Yan Lu, and Jiang Li. 2019. Data Augmentation
with Generative Models for Improved Malware Detection: A Comparative Study.
In UEMCON. IEEE, 0660–0665.

[5] Ferhat Ozgur Catak, Javed Ahmed, Kevser Sahinbas, and Zahid Hussain Khand.
2020. Data Augmentation Based Malware Detection using Convolutional Neural
Networks. arXiv preprint arXiv:2010.01862 (2020).

[6] Li Chen. 2018. Deep transfer learning for static malware classification. arXiv

preprint arXiv:1812.07606 (2018).

[7] Li Chen, Ravi Sahita, Jugal Parikh, and Marc Marino. [n.d.]. Stamina: scalable
deep learning approach for malware classification. Intel White Paper ([n. d.]).
[8] Sunoh Choi, Sungwook Jang, Youngsoo Kim, and Jonghyun Kim. 2017. Malware

detection using malware image and deep learning. In ICTC. IEEE, 1193–1195.
[9] Gregory Conti, Sergey Bratus, Anna Shubina, Andrew Lichtenberg, Roy Ragsdale,
Robert Perez-Alemany, Benjamin Sangster, and Matthew Supan. 2010. A visual
study of primitive binary fragment types. Black Hat USA (2010).

[10] Yin Cui, Menglin Jia, Tsung-Yi Lin, Yang Song, and Serge Belongie. 2019. Class-
balanced loss based on effective number of samples. In CVPR. 9268–9277.
[11] Zhihua Cui, Fei Xue, Xingjuan Cai, Yang Cao, Gai-ge Wang, and Jinjun Chen.
2018. Detection of malicious code variants based on deep learning. IEEE Trans-
actions on Industrial Informatics 14, 7 (2018), 3187–3196.

[12] Rahul Duggal, Scott Freitas, Sunny Dhamnani, Duen Horng Chau, and Jimeng
Sun. 2021. HAR: Hardness Aware Reweighting for Imbalanced Datasets. In 2021
IEEE International Conference on Big Data (Big Data). IEEE, 735–745.
[13] Rahul Duggal, Scott Freitas, Sunny Dhamnani, Duen Horng, Jimeng Sun,
et al. 2020. ELF: An Early-Exiting Framework for Long-Tailed Classification.
arXiv:2006.11979 (2020).

[14] Rahul Duggal, Scott Freitas, Cao Xiao, Duen Horng Chau, and Jimeng Sun. 2020.
REST: Robust and Efficient Neural Networks for Sleep Monitoring in the Wild.
In Proceedings of The Web Conference 2020. 1704–1714.

[15] Thomas Dullien and Rolf Rolles. 2005. Graph-based comparison of executable

objects. SSTIC (2005).

[16] Yong Fang, Yangchen Gao, Fan Jing, and Lei Zhang. 2020. Android Malware
Familial Classification Based on DEX File Section Features. IEEE Access 8
(2020), 10614–10627.

[17] Scott Freitas, Yuxiao Dong, Joshua Neil, and Duen Horng Chau. 2020. A
arXiv preprint

Large-Scale Database for Graph Representation Learning.
arXiv:2011.07682 (2020).

[18] Scott Freitas, Andrew Wicker, Duen Horng Chau, and Joshua Neil. 2020. D2M:
Dynamic Defense and Modeling of Adversarial Movement in Networks. In Pro-
ceedings of the 2020 SIAM International Conference on Data Mining. SIAM.
[19] Jianwen Fu, Jingfeng Xue, Yong Wang, Zhenyan Liu, and Chun Shan. 2018.
IEEE Access 6 (2018),

Malware visualization for fine-grained classification.
14510–14523.

[20] Jordy Gennissen, Lorenzo Cavallaro, Veelasha Moonsamy, and Lejla Batina. 2017.

Gamut: Sifting through Images to Detect Android Malware.

[21] Kyoung Soo Han, Jae Hyun Lim, Boojoong Kang, and Eul Gyu Im. 2015. Malware
analysis using visualized images and entropy graphs. International Journal of
Information Security 14, 1 (2015), 1–14.

[22] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. 2016. Deep resid-
ual learning for image recognition. In Proceedings of the IEEE conference on
computer vision and pattern recognition. 770–778.

[23] Andrew G Howard, Menglong Zhu, Bo Chen, Dmitry Kalenichenko, Weijun
Wang, Tobias Weyand, Marco Andreetto, and Hartwig Adam. 2017. Mobilenets:
Efficient convolutional neural networks for mobile vision applications. arXiv
preprint arXiv:1704.04861 (2017).

[24] Gao Huang, Zhuang Liu, Laurens Van Der Maaten, and Kilian Q Weinberger.
2017. Densely connected convolutional networks. In Proceedings of the IEEE
conference on computer vision and pattern recognition. 4700–4708.

[25] Médéric Hurier, Guillermo Suarez-Tangil, Santanu Kumar Dash, Tegawendé F
Bissyandé, Yves Le Traon, Jacques Klein, and Lorenzo Cavallaro. 2017. Euphony:
Harmonious unification of cacophonous anti-virus vendor labels for Android
malware. In 2017 IEEE/ACM 14th International Conference on Mining Software
Repositories (MSR). IEEE.

MalNet: A Large-Scale Image Database of Malicious Software

CIKM ’22, October 17–21, 2022, Atlanta, GA, USA

[52] Hiromu Yakura, Shinnosuke Shinozaki, Reon Nishimura, Yoshihiro Oyama, and
Jun Sakuma. 2019. Neural malware analysis with attention mechanism. Computers
& Security (2019).

[53] Ilsun You and Kangbin Yim. 2010. Malware obfuscation techniques: A brief

survey. In BWCCA. IEEE, 297–300.

[54] Songqing Yue. 2017. Imbalanced malware images classification: a CNN based

approach. arXiv:1708.08042 (2017).

[55] Rui Zhao, Wanli Ouyang, Hongsheng Li, and Xiaogang Wang. 2015. Saliency

detection by multi-context deep learning. In CVPR. 1265–1274.

[26] Ashutosh Jain, Hugo Gonzalez, and Natalia Stakhanova. 2015. Enriching reverse
engineering through visual exploration of Android binaries. In Proceedings of the
5th Program Protection and Reverse Engineering Workshop. 1–9.

[27] Mahmoud Kalash, Mrigank Rochan, Noman Mohammed, Neil DB Bruce, Yang
Wang, and Farkhund Iqbal. 2018. Malware classification with deep convolutional
neural networks. In NTMS. IEEE, 1–5.

[28] Kesav Kancherla and Srinivas Mukkamala. 2013.

Image visualization based
malware detection. In 2013 IEEE Symposium on Computational Intelligence in
Cyber Security (CICS). IEEE, 40–44.

[29] Ajit Kumar, K Pramod Sagar, KS Kuppusamy, and G Aghila. 2016. Machine
learning based malware classification for Android applications using multimodal
image representations. In ISCO. IEEE, 1–6.

[30] Li Li, Jun Gao, Médéric Hurier, Pingfan Kong, Tegawendé F Bissyandé, Alexandre
Bartel, Jacques Klein, and Yves Le Traon. 2017. Androzoo++: Collecting millions
of android apps and their metadata for the research community. arXiv preprint
arXiv:1709.05281 (2017).

[31] Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Dollár. 2017.
Focal loss for dense object detection. In Proceedings of the IEEE international
conference on computer vision. 2980–2988.

[32] Shuqiang Lu, Lingyun Ying, Wenjie Lin, Yu Wang, Meining Nie, Kaiwen Shen, Lu
Liu, and Haixin Duan. 2019. New Era of Deeplearning-Based Malware Intrusion
Detection: The Malware Detection and Prediction Based On Deep Learning. arXiv
preprint arXiv:1907.08356 (2019).

[33] Jhu-Sin Luo and Dan Chia-Tien Lo. 2017. Binary malware image classification
using machine learning with local binary pattern. In 2017 IEEE International
Conference on Big Data (Big Data). IEEE, 4664–4667.

[34] Niall McLaughlin, Jesus Martinez del Rincon, BooJoong Kang, Suleiman Yerima,
Paul Miller, Sakir Sezer, Yeganeh Safaei, Erik Trickel, Ziming Zhao, Adam Doupé,
et al. 2017. Deep android malware detection. In CODASPY. ACM, 301–308.
[35] Francesco Mercaldo and Antonella Santone. 2020. Deep learning for image-based
mobile malware detection. Journal of Computer Virology and Hacking Techniques
(2020).

[36] Antonio Nappa, M Zubair Rafique, and Juan Caballero. 2013. Driving in the cloud:
An analysis of drive-by download operations and abuse reporting. In DIMVA.
[37] Lakshmanan Nataraj, Sreejith Karthikeyan, Gregoire Jacob, and Bangalore S
Manjunath. 2011. Malware images: visualization and automatic classification. In
international symposium on visualization for cyber security.

[38] Lakshmanan Nataraj, Vinod Yegneswaran, Phillip Porras, and Jian Zhang. 2011.
A comparative assessment of malware classification using binary texture analysis
and dynamic analysis. In Proceedings of the 4th ACM Workshop on Security and
Artificial Intelligence. 21–30.

[39] David Noever and Samantha E Miller Noever. 2021. Virus-MNIST: A Benchmark

Malware Dataset. arXiv preprint arXiv:2103.00602 (2021).

[40] The Council of Economic Advisers. 2018. The Cost of Malicious Cyber Activity

to the U.S. Economy. (2018).

[41] Ben Popper. 2017. Google announces over 2 billion monthly active devices on
https://www.theverge.com/2017/5/17/15654454/android-reaches-2-

Android.
billion-monthly-active-users

[42] Edward Raff, Jon Barker, Jared Sylvester, Robert Brandon, Bryan Catanzaro, and
Charles K Nicholas. 2018. Malware detection by eating a whole exe. In Workshops
at the Thirty-Second AAAI Conference on Artificial Intelligence.

[43] Zhongru Ren, Haomin Wu, Qian Ning, Iftikhar Hussain, and Bingcai Chen. 2020.
End-to-end malware detection for android IoT devices using deep learning. Ad
Hoc Networks (2020).

[44] Edmar Rezende, Guilherme Ruppert, Tiago Carvalho, Antonio Theophilo, Fabio
Ramos, and Paulo de Geus. 2018. Malicious software classification using VGG16
deep neural network’s bottleneck features. In Information Technology-New Gener-
ations. Springer, 51–59.

[45] Royi Ronen, Marian Radu, Corina Feuerstein, Elad Yom-Tov, and Mansour
Ahmadi. 2018. Microsoft malware classification challenge. arXiv preprint
arXiv:1802.10135 (2018).

[46] V Sai Sathyanarayan, Pankaj Kohli, and Bezawada Bruhadeshwar. 2008. Signature
generation and detection of malware families. In ACISP. Springer, 336–349.
[47] Ramprasaath R Selvaraju, Michael Cogswell, Abhishek Das, Ramakrishna Vedan-
tam, Devi Parikh, and Dhruv Batra. 2017. Grad-cam: Visual explanations from
deep networks via gradient-based localization. In Proceedings of the IEEE inter-
national conference on computer vision. 618–626.

[48] Jiawei Su, Vargas Danilo Vasconcellos, Sanjiva Prasad, Sgandurra Daniele, Yaokai
Feng, and Kouichi Sakurai. 2018. Lightweight classification of IoT malware based
on image recognition. In COMPSAC, Vol. 2. IEEE, 664–669.

[49] Virus Total. 2012. Virustotal-free online virus, malware and url scanner. Online:

https://www. virustotal. com/en (2012).

[50] Fengguo Wei, Yuping Li, Sankardas Roy, Xinming Ou, and Wu Zhou. 2017. Deep

ground truth analysis of current android malware. In DIMVA.

[51] Hiromu Yakura, Shinnosuke Shinozaki, Reon Nishimura, Yoshihiro Oyama, and
Jun Sakuma. 2018. Malware analysis of imaged binary samples by convolutional
neural network with attention mechanism. In CODASPY. 127–134.

