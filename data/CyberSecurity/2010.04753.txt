0
2
0
2

t
c
O
9

]

Y
S
.
s
s
e
e
[

1
v
3
5
7
4
0
.
0
1
0
2
:
v
i
X
r
a

Impact Evaluation of Falsiﬁed Data Attacks on Connected Vehicle
Based Traﬃc Signal Control

Shihong Ed Huanga, Wai Wonga, Yiheng Fengb,Qi Alfred Chenc, Z. Morley Maod,
and Henry X. Liua,e

aDepartment of Civil and Environmental Engineering, University of Michigan, Ann Arbor,
MI 48109, USA; bLyles School of Civil Engineering, Purdue University, West Lafayette, IN
47907, USA; cDepartment of Computer Science, University of California, Irvine, CA 92617,
USA; dDepartment of Electrical Engineering and Computer Science, University of Michigan,
Ann Arbor, MI 48109, USA; eUniversity of Michigan Transportation Research Institute,
University of Michigan, Ann Arbor, MI 48109, USA

ARTICLE HISTORY
Compiled October 13, 2020

ABSTRACT
Connected vehicle (CV) technology enables data exchange between vehicles and
transportation infrastructure and therefore has great potentials to improve current
traﬃc signal control systems. However, this connectivity might also bring cyber
security concerns. As the ﬁrst step in investigating the cyber security of CV-based
traﬃc signal control (CV-TSC) systems, potential cyber threats need to be identiﬁed
and corresponding impact needs to be evaluated. In this paper, we aim to evaluate
the impact of cyber attacks on CV-TSC systems by considering a realistic attack
scenario in which the control logic of a CV-TSC system is unavailable to attackers.
Our threat model presumes that an attacker may learn the control logic using a
surrogate model. Based on the surrogate model, the attacker may launch falsiﬁed
data attacks to inﬂuence signal control decisions. In the case study, we realistically
evaluate the impact of falsiﬁed data attacks on an existing CV-TSC system (i.e.,
I-SIG).

KEYWORDS
Connected vehicle; traﬃc signal control; cyber security; falsiﬁed data attack;
impact evaluation;

Word count: 8132

1.

Introduction

We are moving into the era of the Internet of Things, in which almost all physical
devices will be connected and exchanging data. The same trend is emerging in trans-
portation systems, wherein vehicles and infrastructure are being connected through
advanced wireless communication technology, such as Dedicated Short-Range Commu-
nications (DSRC) (Kenney 2011) or Cellular Vehicle-to-Everything (C-V2X) (Wang,
Mao, and Gong 2017). Connected Vehicles (CVs) are capable of communicating with
other CVs through Vehicle-to-Vehicle (V2V) communication and with infrastructure

CONTACT Yiheng Feng. Email: feng333@purdue.edu

 
 
 
 
 
 
through Vehicle-to-Infrastructure (V2I) communication. The adoption of CV technol-
ogy has gradually become a national eﬀort, supported by the U.S. Department of
Transportation (USDOT), state DOTs, and local DOTs. For instance, three CV pilot
programs at New York City, Tampa, and Wyoming have been launched by USDOT
in 2016 to deploy and test CV-based applications (USDOT 2019a).

CVs have great potential to improve a variety of mobility applications, including
traﬃc signal control (TSC), a critical component in urban traﬃc operation. CV-based
TSC (CV-TSC) systems usually utilize CV trajectories as the data source and can
allocate green time more eﬃciently to accommodate real-time traﬃc conditions. In
terms of both cost and performance, CV-TSC systems have signiﬁcant improvement
over conventional TSC systems, which mostly rely on ﬁxed-location sensors (e.g., loop
detectors, cameras) for data collection and decision making. Because of these beneﬁts,
it is envisioned that CV-TSC systems may gradually replace the conventional TSC
systems in the future (USDOT 2019b). Over the past decade, various CV-TSC mod-
els have been proposed to optimize signal timing plans based on real-time CV data
(Goodall, Smith, and Park 2013; Feng et al. 2015; He, Head, and Ding 2012; Priemer
and Friedrich 2009; He, Head, and Ding 2014; Lee, Park, and Yun 2013; Guler, Menen-
dez, and Meier 2014; Pandit et al. 2013; Li and Ban 2018; Beak, Head, and Feng 2017;
Feng, Zheng, and Liu 2018; Zheng et al. 2018; Yu et al. 2018; Feng, Yu, and Liu 2018;
Yu et al. 2019; Yang et al. 2019).

Despite great improvement in system performance, the new trait — connectivity
between vehicles and infrastructure — might open a new door to cyber attacks. The
beneﬁts of CV-TSC systems can be achieved only if the systems are secure in cy-
berspace. Therefore, cyber security is a crucial component when developing CV-TSC
systems. However, most of the existing CV-TSC models are designed without con-
sidering cyber security issues and thus may be vulnerable to cyber attacks. Before
developing defense strategies, it is important to identify potential cyber threats and
investigate the impact of cyber attacks in terms of system performance. Existing stud-
ies on this topic usually consider a ‘white-box’ attack scenario, which assumes that
attackers have full access to the traﬃc control system and/or control logic so that they
can manipulate the traﬃc signal phasing and timing freely (Ghena et al. 2014; Laszka
et al. 2016; Ghafouri et al. 2016; Feng et al. 2018; Chen et al. 2018; Yen et al. 2018;
Perrine et al. 2019). For example, Perrine et al. (2019) assumes that the traﬃc signals
can be selectively disabled to ﬂashing-red status (equivalent to a four-way stop-sign
intersection) without explaining how to make this happen. Chen et al. (2018) assumes
that the source code of the signal control model is known to the attacker so a compre-
hensive analysis can be performed. However, this is not a common setting. The major
drawback of the white-box attack scenario is that it cannot realistically evaluate the
impact of cyber attacks. Although it can provide the upper bound of the system im-
pact under cyber attacks, ‘manipulating signal phasing and timing freely’ is a very
strong and unrealistic assumption. For most of the commercial traﬃc control systems,
various levels of protection from hardware (e.g., Malfunction Monitoring Unit) to soft-
ware (e.g., controller ﬁrmware) are designed to prevent such manipulations. In fact,
the conﬁdentiality and complexity of the control logic themselves imply certain levels
of system security. Thus, it is necessary to realistically evaluate the impact of cyber
attacks under real-world scenarios where the controller hardware and control logic are
inaccessible.

In this paper, we aim to evaluate the impact of cyber attacks on CV-TSC systems by
considering a more realistic attack scenario. We assume that the attackers do not know
the details of the signal control system and do not have physical access to the system

2

Figure 1. Illustration of a connected vehicle based traﬃc signal control system

(e.g., signal control cabinet). Hence, we name our study as ‘black-box’ attack scenario.
Attackers are assumed to learn the signal control logic using a surrogate model. With
the learned model, the signal timing plan can be predicted based on critical traﬃc
features that are obtained from real-time traﬃc conditions. The critical traﬃc features
and subsequently the signal timing plan can be manipulated by attackers who may
inject falsiﬁed CV data into the system. The impact of cyber attacks is measured by
comparing the system performance with and without attacks. In the case study, we
realistically evaluate the impact of cyber attacks on I-SIG, an existing CV-TSC system.
Results show that falsiﬁed data attacks can create excessive delay at the intersection
and degrade the performance of the CV-TSC system. We also brieﬂy discuss two
defense strategies.

The rest of this paper is organized as follows. The background of CV-TSC systems
and related studies regarding cyber attacks are introduced in Section 2. The threat
model, which deﬁnes the operating environment and attackers’ capabilities, is pre-
sented in Section 3. Section 4 assumes that attackers may learn the signal control
logic using a surrogate model. Section 5 presents a comprehensive case study, which
realistically evaluates the impact of cyber attacks on I-SIG. Finally, conclusions are
drawn in Section 6.

2. Background

In this section, we will ﬁrst give a brief description of a general CV-TSC system and
then introduce related studies regarding cyber attacks on traﬃc signal control systems.

2.1. Connected Vehicle Based Traﬃc Signal Control

A typical CV-TSC system is illustrated in Figure 1. Each CV is equipped with an On-
Board Unit (OBU), which broadcasts Basic Safety Messages (BSMs). A BSM records
a CV’s information such as speed, location, heading, and acceleration. Consecutive
BSMs represent the vehicle trajectory. On the infrastructure side, an intersection is

3

SPaTDSRC	or	C-V2XBSMCV1RoadsideUnitSignalControllerTrafficSignalsTransportationManagement	CenterBSMBSMSPaTBSMWired	connectionCV2equipped with a Roadside Unit (RSU), a signal controller, and traﬃc signals. The RSU
receives BSMs, which are used as inputs to optimize traﬃc signal timing plans. In this
paper, we consider the RSU not only can transmit communication messages, but also
has computational powers to run signal optimization models and generate optimal
signal timing plans. The signal controller executes the optimal signal timing plans
and controls the traﬃc signals to display corresponding colors. The signal controller
is connected with a transportation management center (TMC), which can remotely
send commands to the signal controller. Meanwhile, the RSU continuously broadcasts
Signal Phase and Timing (SPaT) messages, which record current signal status (i.e.,
green/yellow/red) and remaining time. The CV-TSC system responds to real-time
traﬃc demand and updates the signal timing plans over time based on continuously
received BSMs.

2.2. Related Work

Based on the general structure of a CV-TSC system in Figure 1, three attack surfaces
can be identiﬁed at a connected intersection: the transportation infrastructure (RSU,
signal controller, and traﬃc signals), the TMC, and the CVs. Usually, the transporta-
tion infrastructure is deployed in an agency’s local network with ﬁrewall protection.
It is diﬃcult to access the infrastructure devices remotely from the public domain.
In order to initiate an attack, attackers have to open up the signal control cabinet
and establish a wired connection to the devices. Once attackers gain access to the
system, they can directly manipulate the signal timing. Alternatively, attackers may
trespass into the TMC and send control commands to the signal controller from the
TMC. These attacks are referred to as direct attacks, which have been investigated
by previous studies (Ghena et al. 2014; Ernst and Michaels 2017; Laszka et al. 2016;
Reilly et al. 2016; Perrine et al. 2019). These studies mainly focus on conventional traf-
ﬁc control systems, for instances, ﬁxed-timing signal control (Laszka et al. 2016) and
ramp metering control (Reilly et al. 2016). Direct attacks, which require conspicuous
physical access, can be easily discovered.

The other type of attack is called indirect attacks, in which attackers try to inﬂu-
ence signal control decisions by injecting falsiﬁed data. Indirect attacks can be launched
from the vehicle side. By exploiting software vulnerabilities, it is practically feasible
that attackers hack into the communication devices in their own CVs and broadcast
falsiﬁed BSMs. This is similar to compromising other Electronic Control Units as
demonstrated in the literature (Koscher et al. 2010; Checkoway et al. 2011). Alterna-
tively, attackers may hack into their vehicles’ internal networks. This can be achieved
in many ways. For example, attackers may hack into the infotainment system of the
vehicle (Mazloom et al. 2016). Once attackers are in the vehicle’s internal network,
they would be able to take control of a wide range of vehicle functions (Koscher et al.
2010), including sending malicious BSMs that contain falsiﬁed data elements. Because
attackers have arbitrary access to their own vehicles, indirect attacks are much more
achievable. Recent studies have shown that falsiﬁed input data can indeed inﬂuence
system control decisions and signiﬁcantly downgrade the system performance. For ex-
ample, inﬂuencing routing decisions in social navigation systems by generating virtual
traﬃc jams (e.g., Google map, Waze) (Jeske 2013; Sinai et al. 2014), or increasing
total travel delay by aﬀecting signal control decisions (Ghafouri et al. 2016; Feng et al.
2018; Chen et al. 2018; Yen et al. 2018; Oza et al. 2020). Compared to direct attacks,
indirect attacks are more realistic, and thus are the focus of this study.

4

Figure 2. Illustration of the threat model

3. Threat Model

For cyber security research, establishing a realistic threat model is an important pre-
requisite. A threat model deﬁnes an attacker’s capabilities, as well as the most relevant
and realistic threats to the system. For a CV-TSC system, falsiﬁed data attack (i.e.,
indirect attack) is typically considered as the most plausible type of attack.

Figure 2 illustrates the threat model considered in this study. It is similar to Figure
1, except that CV2 is now assumed to be compromised by an attacker. Because all the
communications in the vehicular network are in broadcast mode, the attacker receives
the same information that other CVs would receive. After analyzing the received BSMs
(i.e., trajectories) and SPaT messages (i.e., signal timing), the attacker may ‘learn’ the
control logic using a surrogate model f (·). The surrogate model predicts the signal
timing plan based on critical traﬃc features X that are obtained from BSMs (the
details on the critical traﬃc features and surrogate model are introduced in Section
4).

Then the attacker may launch cyber attacks by broadcasting falsiﬁed BSMs using
the compromised communication device (i.e., OBU). Based on the received BSMs, the
attacker may evaluate the observed critical traﬃc features Xo (e.g., queue length)
and use the surrogate model to predict the signal timing plan, i.e., f (Xo). We refer
to f (Xo) as the pseudo-optimal timing plan because it is not the exact timing plan
generated from the actual control logic, but a plan predicted by the trained surrogate
model. By injecting falsiﬁed BSMs, the attacker tries to alter the values of the critical

5

SPaTDSRC	or	C-V2XBSMCV1RoadsideUnitSignalControllerTrafficSignalsTransportationManagement	CenterBSMBSMSPaTBSMWired	connectionCV2AttackerObserved	criticaltraffic	features	Altered	criticaltraffic	features	features from Xo to Xa. Similarly, the attacker may predict the signal timing plan
with the altered critical feature, i.e., f (Xa). The dissimilarity between the pseudo-
optimal timing plan and the timing plan under attack can be computed using the L2
norm. The attacker’s goal is to maximize the dissimilarity by generating falsiﬁed BSMs
that can alter the values of the critical features, as shown in the following problem
(P1):

P1:
max
Xa
s.t. Xa ∈ ΩXa|Xo

(cid:107)f (Xo) − f (Xa)(cid:107)2

(1)

(2)

In P1, the feasible region ΩXa|Xo is dependent on Xo. For example, after injecting
a falsiﬁed stopped vehicle (a falsiﬁed vehicle has a legitimate trajectory in the form
of BSMs but is not physically on road), the new queue length cannot be smaller than
the originally observed queue length.

The falsiﬁed BSMs are mixed with the BSMs from regular CVs. The RSU collects
all the BSMs and uses them as input data for real-time traﬃc signal optimization. The
generated signal timing plans are inﬂuenced by the falsiﬁed BSMs, and thus are no
longer optimal. Vehicles spend extra time passing the intersection and hence the total
travel time is increased. Our threat model aligns with a recent study on black-box
attacks against unknown machine learning models (Papernot et al. 2017). By using a
surrogate model, the attacker in that study crafts adversarial images to fool a target
model so that the target model would output erroneous predictions.

It should be noted that falsiﬁed data attacks may only inﬂuence the timing (e.g.,
green time and/or sequence) of the traﬃc signals. The phase conﬁgurations remain
the same. For example, the attacker is not able to change the minimum and maximum
green time of each phase, turn the intersection into ﬂashing-red status, or enable con-
ﬂicting phases to be green at the same time. This is because the phase conﬁgurations
are protected by the Malfunction Monitoring Unit and Cabinet Monitor Unit in the
signal control cabinet.

We claim that this threat model is realistic for three reasons. First, it is practically
feasible. As discussed in the previous section, the attacker may hack into his/her own
CV and OBU to send falsiﬁed BSMs. This is similar to spooﬁng location data on
private phones when playing Pok´emon Go (Zhao and Chen 2017).

Second, this threat model considers falsiﬁed data attacks, which are diﬃcult to be
perceived. The attacker uses a legitimate communication device to transmit falsiﬁed
BSMs with valid digital certiﬁcates. This means that the attacker does not need to
spoof sender’s identity, which is protected by the Security and Credential Management
System (SCMS) (Whyte et al. 2013; Brecht et al. 2018), but only modiﬁes the contents
of the messages (e.g., speed and location data). Falsiﬁed BSMs can be correctly signed
to pass the SCMS identity check when they are received by the RSU and utilized for
signal timing optimization. In other words, the SCMS cannot detect such falsiﬁed data
attacks.

Third, this threat model minimizes the chance of exposure. In reality, the attacker
not only wants to launch eﬀective attacks, but also wants to minimize the possibility of
being identiﬁed. Falsiﬁed data attacks do not require the attacker to physically access
transportation infrastructure or remotely connect to the agency’s internal network.
The attacker only needs to compromise a CV to broadcast falsiﬁed messages. Moreover,
the compromised CV (CV2 in Figure 2) does not need to stay on the road to launch

6

Figure 3. The process of learning control logic

attacks, as long as it is within the communication range of the RSU.

In the following section, we will detail the training of the surrogate model to learn
the control logic and the selection of the critical traﬃc features to launch eﬀective
attacks. Given the primary objective of the current study is to evaluate the impact
of cyber attacks on CV-TSC systems, we will focus on the investigation of how the
altered critical traﬃc features impact the signal timing plan. The falsiﬁed trajectory
generation mechanisms adopted by the attacker are beyond the scope of this study.

4. Learning Control Logic

In a real-world implementation, the CV-TSC system utilizes vehicle trajectories (ob-
tained from BSMs) as the input and generates optimal signal control decisions. Both
vehicle trajectories and signal control decisions are observable to the attacker in the
forms of BSMs and SPaT messages respectively. The actual signal control logic, how-
ever, is unknown to the attacker. The attacker may adopt a surrogate model to learn
the signal control logic. The surrogate model takes the same trajectories as the input
and outputs predicted signal timing plan. Historical BSM and SPaT data can be used
to train the surrogate model. The attacker uses the surrogate model as the replace-
ment of the real control logic when launching attacks. The whole learning process is
illustrated in Figure 3.

4.1. Traﬃc Signal Setting

This study assumes that the CV-TSC system uses a ring-barrier phasing. The ring-
barrier structure (Koonce and Rodegerdts 2008) illustrated in Figure 4 is the standard
traﬃc signal setting in North America. Starting from the major street and moving
clockwise, the through phases are labeled as phases 2, 4, 6, and 8. Starting from the
left-turn phase that is next to phase 6 and moving clockwise, the left-turn phases are
labeled as phases 1, 3, 5, and 7. Ring 1 includes phases 1 to 4 and ring 2 includes phases
5 to 8. A barrier separates major street phases (phases 1, 2, 5, and 6) from minor street
phases (phases 3, 4, 7, and 8). A barrier may also refer to the four phases of the major
street or the four phases of the minor street. The phase that operates ﬁrst within a
barrier is called lead phase and the other one is called lag phase, therefore a barrier
includes two lead phases and two lag phases. Usually the signal optimization algorithms
change phase sequence and allocate green time of each phase to minimize/maximize
predeﬁned performance indexes.

7

VehicletrajectoriesSignal	controldecisionsObservableObservableControl	logicUnknownSurrogatemodelInputOutputMimicFigure 4. Illustration of the ring-barrier structure

4.2. Surrogate Model

A signal timing plan includes two parts, green time of each phase and phase sequence.
The prediction of green time can be considered as a regression problem because green
time is continuous. In contrast, the prediction of phase sequence is a classiﬁcation
problem since there is a ﬁnite number of possibilities for phase sequences. In this
study, decision tree regression/classiﬁcation (Breiman 2017) is adopted to be the sur-
rogate model that could potentially be leveraged by the attacker. Decision tree models
are chosen because they are easy to implement and their output always falls within
the feasible ranges, i.e., minimum and maximum green time. Most importantly, de-
cision tree models possess inherent ‘if-then-else’ structures and can eﬀectively map
nonlinear relationships, making signal control algorithms particularly easy to ﬁt into
programmatic structures.

The decision tree model is brieﬂy introduced. The goal of a decision tree regression
model is to predict y, the green time of a phase or the length of a barrier, based on a d-
dimensional feature vector X = [x1, x2, ..., xd]T, which are extracted from trajectories
(see Section 4.3 for more details on features). The training data consists of n obser-
vations with their corresponding labels {y1, y2, ..., yn} and features {X1, X2, ..., Xn}.
During the learning process, the decision tree algorithm partitions the entire feature
space into diﬀerent sub-regions based on the training dataset. Figure 5 shows a simple
example of a trained decision tree with two features. In this example, the ﬁrst step is
to divide the entire space into two sub-regions according to whether queue length is
greater than 9. Similarly, in the second step, the left region is further divided into two
sub-regions according to whether vehicle delay is greater than 12. Every step is called
branching. For each sub-region, mean squared error (MSE), presented in Equation 3,
is calculated to evaluate the prediction performance of that branched sub-region based
on the training data:

eD =

1
|D|

(cid:88)

j∈D

(yj − yD)2

(3)

where D is the set of all observations in this sub-region; eD is the MSE of set D; |D|
is the cardinality of set D; and yD is the mean value of the labels in set D.

Each time one performs branching, a node is split into two nodes. Each node repre-
sents a sub-region that contains data satisfying associated conditions. For each branch-
ing, the parent node is denoted as Dp and the two child nodes are DC1 and DC2. Then
the reduction in MSE due to a branching from a parent node into two child nodes,

8

Figure 5. Illustration of decision tree model

∆I, is deﬁned as follows in Equation 4:

∆I = eDp − eDC1 − eDC2

(4)

All the observations in the parent data set are used as splitting candidates for the
next level of branching. One can enumerate all the possible features and possible splits
and calculate the corresponding ∆I. The feature and the split with the maximum ∆I
are chosen to branch the parent node. The branching process is repeated until the
maximum number of iteration is reached.

For predictions of green time, one can start from the top of the tree, which is the
root node, and ﬁnd the path down to the ﬁnal node, called the leaf node, based on the
criteria of each node. The mean value of the labels in the ﬁnal data set is the predicted
green time.

The process for the prediction of phase sequence is similar to that of green time.
Because it is a classiﬁcation problem, the majority vote of the labels is taken as the
prediction.

4.3. Critical Traﬃc Features

Diﬀerent CV-TSC systems use diﬀerent objectives and performance indexes to opti-
mize the signal timing plan. Since the objectives are typically functions of one or more
traﬃc features, the signal timing plan should be closely related to these associated traf-
ﬁc features, e.g., queue length (a signal controller allocates green time based on the
queue length of each phase) and headway (a signal controller terminates a green phase
when there is a large headway). A list of common traﬃc features applied in existing
studies include queue length (QL) (Priemer and Friedrich 2009), number of approach-
ing vehicles (NAV) (Goodall, Smith, and Park 2013), headway (HW) (Koonce and
Rodegerdts 2008), estimated time of arrival (ETA) (He, Head, and Ding 2012, 2014),
vehicle delay (VD) (Wu et al. 2017), and ﬂow rate (FR) (Zheng et al. 2018).

For a particular CV-TSC system, not all traﬃc features are utilized to optimize the
signal timing. We deﬁne the traﬃc features that determine the signal timing plan as
critical features. When falsiﬁed data alter the values of these critical features, signal
control decisions are changed accordingly. As a result, the attacker needs to identify
the critical features that have a signiﬁcant impact on the signal timing plan before
launching attacks. Identifying critical features from the list of features is a feature
selection problem. In this study, a sequential forward selection algorithm (SFS) is
applied (Bow 2002). Starting from an empty feature set, SFS greedily searches for

9

the best features that can improve the prediction performance. John, Kohavi, and
Pﬂeger (1994)’s study suggests using SFS for identifying useful features and shows
that SFS can improve the performance of decision tree models. The pseudo code of
SFS is illustrated in Algorithm 1. The output of SFS is a set that contains all the
critical features. Note that in Section 4.2, only critical features are used as the input
features of the decision tree models.

Algorithm 1: Sequential forward selection algorithm

Initialize two sets, S and R. S contains a complete list of features and R is

empty. Denote e(Q) as the error when using feature subset Q. Initialize e(R)
to be a large number;
while S is not empty do

ﬁnd s∗ = mins∈S e(s ∪ R);
if e(s∗ ∪ R) < e(R) then
Remove s∗ from S;
Add s∗ to R;

else

break while;

end

end
Result: Set R contains all the critical features

5. Case Study

Through a case study in simulation, we realistically evaluate the impact of cyber
attacks on a CV-TSC system under the black-box attack scenario. I-SIG system from
the Multi-Modal Intelligent Traﬃc Signal System (MMITSS) project is selected as the
targeted CV-TSCS system (USDOT 2019b). Both simulation and ﬁeld experiments
have demonstrated the eﬀectiveness of I-SIG in terms of delay reduction and mobility
improvement (Feng et al. 2015).

5.1. Control Logic of I-SIG

The control logic of I-SIG system is brieﬂy introduced in this subsection. For more
details, please refer to Feng et al. (2015) and Sen and Head (1997). At the beginning
of each barrier, I-SIG takes a snapshot of the trajectories received from all the CVs
within the RSU’s communication range. Each trajectory is converted to ETA, which is
calculated as the CV’s distance to stop bar divided by its speed. Based on the ETAs,
I-SIG solves a two-level optimization problem to ﬁnd the optimal signal timing plan.
At the lower level, I-SIG solves a utility minimization problem given the barrier length.
The outputs of the lower level are the optimal green time and phase sequence. At the
upper level, a dynamic programming (DP) problem is formulated with the objective
to minimize total vehicle delay or total queue length. The decision variable at the
upper level is the barrier length, which is considered as a stage in the DP formulation.
Ideally, I-SIG should plan as many stages as needed so that all the vehicles can be
properly served. For real-world implementations, however, I-SIG plans only two stages
(i.e., one signal cycle) because of computational limitations in the RSU and real-time

10

Table 1. Deﬁnitions of the traﬃc features associated with trees 1 and tree 2

performance requirement. I-SIG then executes the timing plan of the ﬁrst stage (the
four phases in the current barrier) and arranges the phase sequence of the second stage
(the four phases in the next barrier). When a new barrier starts, I-SIG repeats this
optimization process.

5.2. Simulation Setup

A simulation environment is built using Matlab (MATLAB 2018). A typical 4-leg
intersection with eight phases is modeled. Each approach has one left-turn lane and
one through lane. For simplicity, right-turn lanes are not explicitly modeled. The car-
following model from the NGSIM project is used to model vehicle motions (Yeo et al.
2008). The minimum green time and the maximum green time are set to be 5 seconds
and 30 seconds for each phase, respectively. The transition time between phases (i.e.,
the yellow and red clearance time) is 4 seconds. The traﬃc demand for each movement
is 400 vehicles per hour. The communication range is set to be 300 meters. The free ﬂow
speed is 15.65 meters per second (35 miles per hour). The resolution of the simulation
is 10 Hz, which is consistent with the frequency of CV communication (SAE 2009).
Attacks are launched every time I-SIG optimizes the signal timing plan.

5.3. Learning Control Logic

Because I-SIG only executes the optimized signal timing for one barrier each time, the
surrogate model only needs to predict the green time of the four phases in the current
barrier. Phase sequence can be obtained directly from SPaT messages.

The surrogate model consists of two decision tree regression models. The output of
the ﬁrst decision tree model (labeled as Tree 1) is the barrier length (i.e., lead phase
plus lag phase). The second decision tree model (labeled as Tree 2) outputs the green
time of a lead phase. The green time of a lag phase is calculated by subtracting that of
the corresponding lead phase from the barrier. The detailed deﬁnitions of the potential
traﬃc features for the two decision tree models are shown in Table 1.

A 30-hour simulation is run to generate a data set needed for both training and
validation. Totally, 2206 optimizations are conducted. Mean absolute error (MAE),

11

Traffic FeatureTree 1 (Barrier)Tree 2 (Lead Phase)Queue length (QL)The maximum QL of Ring 1 and Ring 2 (lead phase plus lag phase, the same thereafter)QL of the lead phaseNumber of approaching vehicles (NAV)The maximum NAV of Ring 1 and Ring 2NAV of the lead phaseHeadway (HW)Time of arrival of the first large HW (2 seconds) of the two lag phasesTime of arrival of the first large HW (2 seconds) of the lead phaseEstimated time of arrival (ETA)ETA of the last vehicle of the two lag phasesETA of the last vehicle of the lead phaseVehicle delay (VD)Average VD of the two lag phasesAverage VD of the lead phaseFlow rate (FR)The maximum FR of Ring 1 and Ring 2FR of the lead phaseTable 2. Applying SFS for identifying critical traﬃc features

mean absolute percentage error (MAPE) and root mean square error (RMSE) are
utilized to quantify errors for a given set of traﬃc features. Monte Carlo cross validation
(Xu and Liang 2001) is applied. 80% of the data are randomly chosen for training,
while the remaining 20% are used for validation. The 80-20 process is repeated 10
times and the mean errors are recorded. The SFS is applied and the results are shown
in Table 2. In the ﬁrst round, only one feature is used for ﬁtting the decision tree
models. The model with NAV has the least error for both trees. Therefore, NAV is
added to the critical feature set. In the second round, two features are used for ﬁtting
the decision tree models, with one feature ﬁxed to be NAV. The model with NAV
and ETA has the least error. Thus, ETA is chosen as the second feature and added
to the critical feature set. This process is repeated to ﬁnd the third feature. However,
the models with three features are all worse than the best model in the second round.
Thus, SFS stops searching. NAV and ETA are identiﬁed as critical features. We note
that the two identiﬁed critical features are consistent with the ﬁndings from a previous
vulnerability analysis on I-SIG (Chen et al. 2018).

Figure 6 shows the eﬀectiveness of the trained surrogate model. The prediction by
the trained surrogate model and the ground truth generated by I-SIG are compared
in the ﬁgure. The color depth represents the density of the data. The majority of the
data lie on or near the 45-degree line, indicating that the surrogate model provides

12

Feature setMAE[s]MAPERMSE[s]Feature setMAE[s]MAPERMSE[s]QL 3.67719.32%4.6842 QL 2.669014.34%3.6185NAV 1.39673.46%2.3786  NAV 1.18886.82%2.2235HW 6.061815.53%7.5209 HW 3.348417.76%4.4968ETA 5.460814.04%6.7911 ETA 3.829019.84%4.6471VD 6.435316.45%8.0939 VD 4.885825.85%6.0647FR 4.634111.76%5.7694 FR 3.428517.85%4.2815NAV+QL 1.63864.06%3.0106 NAV+QL 1.23757.01%2.6973NAV+HW 1.58423.89%2.8640 NAV+HW 1.11516.29%2.3574NAV+ETA 1.32873.26%2.3469 NAV+ETA 0.52052.95%1.5097NAV+VD 1.61773.97%2.9335 NAV+VD 1.32577.64%2.8670NAV+FR 1.51623.74%2.5721 NAV+FR 1.19486.86%2.2860NAV+ETA+QL 1.39593.46%2.5778 NAV+ETA+QL 0.55133.10%1.7964NAV+ETA+HW 1.40653.48%2.5982 NAV+ETA+HW 0.53983.07%1.7040NAV+ETA+VD 1.39773.44%2.5750 NAV+ETA+VD 0.54043.02%1.7978NAV+ETA+FR 1.40593.49%2.4968 NAV+ETA+FR 0.53983.04%1.6367Tree 1 (Barrier)Tree 2 (Lead Phase)Round 1Round 2Round 3Figure 6. Comparison between I-SIG and the trained surrogate model

a good prediction accuracy. The prediction of the lag phase has a relatively greater
error because it is estimated indirectly from the barrier and the lead phase.

5.4. Evaluating the Impact of Cyber Attacks

To evaluate the impact of cyber attacks, attacks are launched based on the assumed
threat model. In Section 5.3, two critical features have been identiﬁed. Therefore, two
attack cases are considered, with either ETA or NAV being the targeted critical feature.
The prediction by the surrogate model (i.e., the predicted signal timing plan) includes
the green time of the two lead phases and two lag phases in the current barrier, and
is denoted as f (X) = [gd1, gd2, gg1, gg2]T.

In the ﬁrst case, the attacker is assumed to alter ETA by manipulating the location
and speed data in the falsiﬁed BSMs. The attacker solves the following problem (P2)
to maximize the dissimilarity between the pseudo-optimal timing plan and the timing
plan under attack.

13

0102030405060Prediction by surrogate model [s]0102030405060Ground truth by I-SIG [s]Barrier0102030Prediction by surrogate model [s]051015202530Ground truth by I-SIG [s]Lead phase0102030Prediction by surrogate model [s]051015202530Ground truth by I-SIG [s]Lag phaseP2:
max (cid:107)f (Xo) − f (Xa)(cid:107)2
s.t. Xo = [td1, td2, tg1, tg2, nd1, nd2, ng1, ng2]T

(5)

(6)

Xa = [td1 + τd1δd1, td2 + τd2δd2, tg1 + τg1δg1, tg2 + τg2δg2,
nd1 + δd1, nd2 + δd2, ng1 + δg1, ng2 + δg2]T
td1 + τd1δd1, td2 + τd2δd2 ∈ Tlead
tg1 + τg1δg1, tg2 + τg2δg2 ∈ Tlag
δd1 + δd2 + δg1 + δg2 = 1
τd1, τd2, τg1, τg2 ≥ 0
δd1, δd2, δg1, δg2 ∈ {0, 1}
τd1, τd2, τg1, τg2, δd1, δd2, δg1, δg2

(7)
(8)
(9)
(10)
(11)
(12)
(13)

Decision variables

The observed critical features Xo include the ETAs of the two lead phases (td1, td2)
and two lags phases (tg1, tg2) as well as the NAVs of the two lead phases (nd1, nd2)
and two lag phases (ng1, ng2) (Equation 6). Similarly, the altered critical features
Xa also include corresponding ETAs and NAVs (Equation 7). The binary variables
δd1, δd2, δg1, δg2 indicate the phase to which the falsiﬁed trajectory is injected (Equation
12). We assume that the attacker can only inject one falsiﬁed trajectory per attack
(Equation 10). Tlead and Tlag are the sets of candidate ETAs for the lead phase and
lag phase (Equation 8 and 9). Tlead and Tlag can be obtained from historical data.
Equation 11 indicates that the attacker intends to launch attacks by increasing the
ETA.

In the second case, the attacker is assumed to alter NAV by injecting falsiﬁed
trajectories to diﬀerent phases. Denote δd1, δd2, δg1, δg2 to be the number of falsiﬁed
trajectories injected to each phase. The attacker is assumed to have a budget limit
B = 10 (Equation 17), i.e., the maximum number of falsiﬁed trajectories. Similar to
the previous case, the attacker solves the following problem (P3) to maximizes the
dissimilarity.

P3:
max (cid:107)f (Xo) − f (Xa)(cid:107)2
s.t. Xo = [td1, td2, tg1, tg2, nd1, nd2, ng1, ng2]T

Xa = [td1, td2, tg1, tg2,
nd1 + δd1, nd2 + δd2, ng1 + δg1, ng2 + δg2]T
δd1 + δd2 + δg1 + δg2 ≤ B
δd1, δd2, δg1, δg2 ∈ Z+
δd1, δd2, δg1, δg2

Decision variables

(14)

(15)

(16)
(17)

(18)
(19)

Four simulation experiments are conducted to assess the impact of cyber attacks.
Each experiment lasts for 5 hours, with the exact same traﬃc demand and vehicle
arrival patterns. The total delay for each experiment is shown in Figure 7.

In Experiment I, the original I-SIG system operates normally without being at-

14

Figure 7. Total delay for each experiment

tacked. This experiment serves as the benchmark for all the other experiments. In
Experiment II, the trained surrogate model is used to generate signal timing plans
and control the traﬃc signal. However, no falsiﬁed CV data are injected to the sys-
tem. As evidenced by a small increase of 1.5%, the total delay is very close to the
benchmark. This indicates that the trained surrogate model could eﬀectively mimic
the actual signal control logic. In Experiment III, the attacker is assumed to attack
I-SIG based on the feature ETA. It is worth noting that only one falsiﬁed trajectory
is injected into the system per attack. The total delay increases by 19%. This implies
that the attacker may cause signiﬁcant damage to the CV-TSC system even without
knowing the signal control logic. In Experiment IV, the attacker is assumed to attack
I-SIG based on the feature NAV. Multiple falsiﬁed trajectories can be injected into
the system per attack. The total delay increases by 23%. When suﬃcient resources are
given, the attacker may cause even more damage to the system. These experiment re-
sults show that the attacker may learn the signal control logic with a surrogate model.
It is possible to attack a CV-TSC system without knowing the exact control logic.
The falsiﬁed data attacks can result in severe consequences with a limited budget.

5.5. Defense Strategy Discussion

Although the focus of this study is on the impact evaluation of cyber attacks, defense
strategies are brieﬂy discussed. Because the attacker needs to learn the control logic
before attack, one natural defense strategy is to interfere with the learning process. For
example, we may add noise to the optimized signal timing plans. This may mislead
the attacker’s surrogate model. However, when the environment is benign (i.e., no
attacks), adding noise makes the system operate under sub-optimal conditions. Thus,
a trade-oﬀ needs to be made between security and eﬃciency.

Another defense strategy is to proactively identify falsiﬁed trajectories before they
are utilized by the optimization model. The falsiﬁed trajectories are generated to alter
the values of the critical features. For example, in our case study, to alter ETA to a
large value, the attacker needs to generate a falsiﬁed trajectory which shows that the
falsiﬁed vehicle approaches the intersection with a low speed. Such falsiﬁed trajectories

15

0%+1.5%+19%+23%IIIIIIIVExperiment5.566.577.58Total Delay [s]105I: I-SIGII: Trained surrogate model III: ETA attack (I-SIG)IV: NAV attack (I-SIG)are behaviorally diﬀerent from normal trajectories. By monitoring abnormal behavior,
we may be able to identify abnormal (falsiﬁed) trajectories. We will investigate this
defense strategy in our future research.

6. Conclusion

In this study, we focus on evaluating the impact of cyber attacks on CV-TSC systems.
Compared to the literature, this study considers a more realistic attack scenario in
which the control logic of CV-TSC systems is unavailable to the attacker. We assume
that the attacker may learn the signal control logic using a surrogate model and
identify critical traﬃc features. With the learned model, the signal timing plan can be
predicted by the attacker based on the identiﬁed critical traﬃc features. Falsiﬁed BSMs
can be generated by the attacker to alter the values of the critical traﬃc features to
launch real-time attacks. Consequently, the signal control decisions are inﬂuenced. The
attacker is assumed to ﬁnd the ‘optimal’ value of the critical features by maximizing the
dissimilarity between the pseudo-optimal timing plan and the resultant signal timing
plan under attack. We evaluate the impact by comparing the system performance with
and without attacks.

A comprehensive case study is conducted with I-SIG as the selected CV-TSC sys-
tem. We ﬁnd that the surrogate model can eﬀectively mimic the actual control logic of
I-SIG, which is sensitive to two critical traﬃc features: ETA (estimated time of arrival)
and NAV (number of approaching vehicles). Two types of attacks are launched based
on these two features. Simulation experiments show that the total delay increases by
19% and 23%. This indicates that even though the control logic is unknown, an at-
tacker is still able to cause severe damage to the CV-TSC system. To protect the
system, two defense strategies are brieﬂy discussed.

Based on the ﬁndings of this paper, future work will focus on the proactive defense
strategy to safeguard CV-TSC systems from cyber attacks. The goal of the defense
strategy is to detect anomaly in BSMs and ﬁlter out falsiﬁed trajectories before using
them in any CV-based applications.

Funding

This research is supported in part by the U.S. National Science Foundation through
Grant SaTC #1930041 and Mcity at the University of Michigan for ﬁnancial support.
The views presented in this paper are those of the authors alone.

References

Beak, Byungho, K Larry Head, and Yiheng Feng. 2017. “Adaptive coordination based on

connected vehicle technology.” Transportation Research Record 2619 (1): 1–12.

Bow, Sing-Tze. 2002. Pattern recognition and image preprocessing. Marcel Dekker New York.
Brecht, Benedikt, Dean Therriault, Andr´e Weimerskirch, William Whyte, Virendra Kumar,
Thorsten Hehn, and Roy Goudy. 2018. “A Security Credential Management System for
V2X Communications.” IEEE Transactions on Intelligent Transportation Systems 19 (12):
3850–3871.

Breiman, Leo. 2017. Classiﬁcation and regression trees. Routledge.

16

Checkoway, Stephen, Damon McCoy, Brian Kantor, Danny Anderson, Hovav Shacham, Stefan
Savage, Karl Koscher, et al. 2011. “Comprehensive experimental analyses of automotive
attack surfaces.” In USENIX Security Symposium, Vol. 4. San Francisco.

Chen, Qi Alfred, Yucheng Yin, Yiheng Feng, Z Morley Mao, and Henry X Liu. 2018. “Ex-
posing Congestion Attack on Emerging Connected Vehicle based Traﬃc Signal Control.” In
Network and Distributed Systems Security (NDSS) Symposium, .

Ernst, Joseph M, and Alan J Michaels. 2017. “Framework for evaluating the severity of cy-
bervulnerability of a traﬃc cabinet.” Transportation Research Record 2619 (1): 55–63.
Feng, Yiheng, K Larry Head, Shayan Khoshmagham, and Mehdi Zamanipour. 2015. “A real-
time adaptive signal control in a connected vehicle environment.” Transportation Research
Part C: Emerging Technologies 55: 460–473.

Feng, Yiheng, Shihong Huang, Qi Alfred Chen, Henry X Liu, and Z Morley Mao. 2018. “Vul-
nerability of traﬃc control system under cyberattacks with falsiﬁed data.” Transportation
research record 2672 (1): 1–11.

Feng, Yiheng, Chunhui Yu, and Henry X Liu. 2018. “Spatiotemporal intersection control in a
connected and automated vehicle environment.” Transportation Research Part C: Emerging
Technologies 89: 364–383.

Feng, Yiheng, Jianfeng Zheng, and Henry X Liu. 2018. “Real-Time Detector-Free Adaptive Sig-
nal Control with Low Penetration of Connected Vehicles.” Transportation Research Record
2672 (18): 35–44.

Ghafouri, Amin, Waseem Abbas, Yevgeniy Vorobeychik, and Xenofon Koutsoukos. 2016. “Vul-
nerability of ﬁxed-time control of signalized intersections to cyber-tampering.” In 2016 Re-
silience Week (RWS), 130–135. IEEE.

Ghena, Branden, William Beyer, Allen Hillaker, Jonathan Pevarnek, and J Alex Halder-
man. 2014. “Green lights forever: Analyzing the security of traﬃc infrastructure.” In 8th
{USENIX} Workshop on Oﬀensive Technologies ({WOOT} 14), .

Goodall, Noah J, Brian L Smith, and Byungkyu Park. 2013. “Traﬃc signal control with con-

nected vehicles.” Transportation Research Record 2381 (1): 65–72.

Guler, S Ilgin, Monica Menendez, and Linus Meier. 2014. “Using connected vehicle technol-
ogy to improve the eﬃciency of intersections.” Transportation Research Part C: Emerging
Technologies 46: 121–131.

He, Qing, K Larry Head, and Jun Ding. 2012. “PAMSCOD: Platoon-based arterial multi-modal
signal control with online data.” Transportation Research Part C: Emerging Technologies
20 (1): 164–184.

He, Qing, K Larry Head, and Jun Ding. 2014. “Multi-modal traﬃc signal control with priority,
signal actuation and coordination.” Transportation Research Part C: Emerging Technologies
46: 65–82.

Jeske, Tobias. 2013. “Floating car data from smartphones: What google and waze know about

you and how hackers can control traﬃc.” Proc. of the BlackHat Europe 1–12.

John, George H, Ron Kohavi, and Karl Pﬂeger. 1994. “Irrelevant features and the subset

selection problem.” In Machine Learning Proceedings 1994, 121–129. Elsevier.

Kenney, John B. 2011. “Dedicated short-range communications (DSRC) standards in the

United States.” Proceedings of the IEEE 99 (7): 1162–1182.

Koonce, Peter, and Lee Rodegerdts. 2008. Traﬃc signal timing manual. Technical Report.

United States Federal Highway Administration.

Koscher, Karl, Alexei Czeskis, Franziska Roesner, Shwetak Patel, Tadayoshi Kohno, Stephen
Checkoway, Damon McCoy, et al. 2010. “Experimental security analysis of a modern auto-
mobile.” In 2010 IEEE Symposium on Security and Privacy, 447–462. IEEE.

Laszka, Aron, Bradley Potteiger, Yevgeniy Vorobeychik, Saurabh Amin, and Xenofon Kout-
soukos. 2016. “Vulnerability of transportation networks to traﬃc-signal tampering.” In 2016
ACM/IEEE 7th International conference on Cyber-Physical Systems (ICCPS), 1–10. IEEE.
Lee, Joyoung, Byungkyu Park, and Ilsoo Yun. 2013. “Cumulative travel-time responsive real-
time intersection control algorithm in the connected vehicle environment.” Journal of Trans-
portation Engineering 139 (10): 1020–1029.

17

Li, Wan, and Xuegang Ban. 2018. “Connected Vehicles Based Traﬃc Signal Timing Optimiza-

tion.” IEEE Transactions on Intelligent Transportation Systems .

MATLAB. 2018. 9.7.0.1190202 (R2019b). Natick, Massachusetts: The MathWorks Inc.
Mazloom, Sahar, Mohammad Rezaeirad, Aaron Hunter, and Damon McCoy. 2016. “A security
analysis of an in-vehicle infotainment and app platform.” In 10th {USENIX} Workshop on
Oﬀensive Technologies ({WOOT} 16), .

Oza, Pratham, Mahsa Foruhandeh, Ryan Gerdes, and Thidapat Chantem. 2020. “Secure Traf-
ﬁc Lights: Replay Attack Detection for Model-based Smart Traﬃc Controllers.” In Proceed-
ings of the Second ACM Workshop on Automotive and Aerial Vehicle Security, 5–10.

Pandit, Kartik, Dipak Ghosal, H Michael Zhang, and Chen-Nee Chuah. 2013. “Adaptive traﬃc
signal control with vehicular ad hoc networks.” IEEE Transactions on Vehicular Technology
62 (4): 1459–1471.

Papernot, Nicolas, Patrick McDaniel, Ian Goodfellow, Somesh Jha, Z Berkay Celik, and Anan-
thram Swami. 2017. “Practical black-box attacks against machine learning.” In Proceedings
of the 2017 ACM on Asia conference on computer and communications security, 506–519.
Perrine, Kenneth A, Michael W Levin, Cesar N Yahia, Melissa Duell, and Stephen D Boyles.
2019. “Implications of traﬃc signal cybersecurity on potential deliberate traﬃc disruptions.”
Transportation research part A: policy and practice 120: 58–70.

Priemer, Christian, and Bernhard Friedrich. 2009. “A decentralized adaptive traﬃc signal
control using V2I communication data.” In 2009 12th International IEEE Conference on
Intelligent Transportation Systems, 1–6. IEEE.

Reilly, Jack, S´ebastien Martin, Mathias Payer, and Alexandre M Bayen. 2016. “Creating com-
plex congestion patterns via multi-objective optimal freeway traﬃc control with application
to cyber-security.” Transportation Research Part B: Methodological 91: 366–382.

SAE, Draft. 2009. “J2735 dedicated short range communications (dsrc) message set dictio-

nary.” Society of Automotive Engineers, DSRC Committee .

Sen, Suvrajeet, and K Larry Head. 1997. “Controlled optimization of phases at an intersection.”

Transportation science 31 (1): 5–17.

Sinai, Meital Ben, Nimrod Partush, Shir Yadid, and Eran Yahav. 2014. “Exploiting social

navigation.” arXiv preprint arXiv:1410.0151 .

USDOT. 2019a. “Connected vehicle pilot deployment program.” https://www.its.dot.gov/

pilots/. Online; Accessed: 2019-05-21.

USDOT. 2019b. “Multi-Modal Intelligent Traﬃc Safety System.” https://www.its.dot.gov/

research_archives/dma/bundle/mmitss_plan.htm. Online; Accessed: 2019-05-21.

Wang, Xuyu, Shiwen Mao, and Michelle X Gong. 2017. “An overview of 3GPP cellular vehicle-
to-everything standards.” GetMobile: Mobile Computing and Communications 21 (3): 19–25.
Whyte, William, Andr´e Weimerskirch, Virendra Kumar, and Thorsten Hehn. 2013. “A se-
curity credential management system for V2V communications.” In 2013 IEEE Vehicular
Networking Conference, 1–8. IEEE.

Wu, Jian, Dipak Ghosal, Michael Zhang, and Chen-Nee Chuah. 2017. “Delay-based traﬃc
signal control for throughput optimality and fairness at an isolated intersection.” IEEE
Transactions on Vehicular Technology 67 (2): 896–909.

Xu, Qing-Song, and Yi-Zeng Liang. 2001. “Monte Carlo cross validation.” Chemometrics and

Intelligent Laboratory Systems 56 (1): 1–11.

Yang, Zhen, Yiheng Feng, Xun Gong, Ding Zhao, and Jing Sun. 2019. “Eco-trajectory Plan-
ning with Consideration of Queue Along Congested Corridor for Hybrid Electric Vehicles.”
Transportation Research Record 2673 (9): 277–286.

Yen, Chia-Cheng, Dipak Ghosal, Michael Zhang, Chen-Nee Chuah, and Hao Chen. 2018. “Fal-
siﬁed Data Attack on Backpressure-based Traﬃc Signal Control Algorithms.” In 2018 IEEE
Vehicular Networking Conference (VNC), 1–8. IEEE.

Yeo, Hwasoo, Alexander Skabardonis, John Halkias, James Colyar, and Vassili Alexiadis. 2008.
“Oversaturated freeway ﬂow algorithm for use in next generation simulation.” Transporta-
tion Research Record 2088 (1): 68–79.

Yu, Chunhui, Yiheng Feng, Henry X Liu, Wanjing Ma, and Xiaoguang Yang. 2018. “Integrated

18

optimization of traﬃc signals and vehicle trajectories at isolated urban intersections.” Trans-
portation research part B: methodological 112: 89–112.

Yu, Chunhui, Yiheng Feng, Henry X Liu, Wanjing Ma, and Xiaoguang Yang. 2019. “Cor-
ridor level cooperative trajectory optimization with connected and automated vehicles.”
Transportation Research Part C: Emerging Technologies 105: 405–421.

Zhao, Bo, and Qinying Chen. 2017. “Location spooﬁng in a location-based game: A case study

of Pok´emon Go.” In International Cartographic Conference, 21–32. Springer.

Zheng, Jianfeng, Weili Sun, Shihong Huang, Shengyin Shen, Chunhui Yu, Jinqing Zhu, Bing-
bing Liu, and Henry X Liu. 2018. Traﬃc Signal Optimization Using Crowdsourced Vehicle
Trajectory Data. Technical Report. Transportation Research Board.

19

