Crown Jewels Analysis using Reinforcement
Learning with Attack Graphs

Rohit Gangupantulua, Tyler Codyb∗, Abdul Rahmanb,
Christopher Redinoc, Ryan Clarkc, Paul Parka
aDeloitte Consulting, LLC
bHume Center for National Security and Technology, Virginia Polytechnic University
cDeloitte & Touche LLP
∗Corresponding author: Tyler Cody; tcody@vt.edu

1
2
0
2

g
u
A
0
2

]

R
C
.
s
c
[

1
v
8
5
3
9
0
.
8
0
1
2
:
v
i
X
r
a

Abstract—Cyber attacks pose existential threats to nations and
enterprises. Current practice favors piece-wise analysis using
threat-models in the stead of rigorous cyber terrain analy-
sis and intelligence preparation of the battleﬁeld. Automated
penetration testing using reinforcement learning offers a new
and promising approach for developing methodologies that are
driven by network structure and cyber terrain, that can be later
interpreted in terms of threat-models, but that are principally
network-driven analyses. This paper presents a novel method for
crown jewel analysis termed CJA-RL that uses reinforcement
learning to identify key terrain and avenues of approach for
exploiting crown jewels. In our experiment, CJA-RL identiﬁed
ideal entry points, choke points, and pivots for exploiting a
network with multiple crown jewels, exemplifying how CJA-RL
and reinforcement learning for penetration testing generally can
beneﬁt computer network operations workﬂows.

Index Terms—attack graphs, reinforcement learning, cyber
terrain, crown jewels, crown jewel analysis, MITRE ATT&CK

I. INTRODUCTION

Cyber attacks pose existential, nation-level threats to electri-
cal and ﬁnancial infrastructure [1], [2], thereby directly chal-
lenging societal stability and domestic prosperity. Importantly,
cyber attacks, such as the infamous Colonial Pipeline Hack [3],
target domestic prosperity by way of enterprises [2].

Enterprises and organizations generally depend on key in-
formation technology (IT) systems, known as crown jewels
(CJs), operating as designed. The criticality and importance
of CJs can be described in terms of the function and data they
host [4]. According to MITRE [5], “Crown Jewels Analysis
(CJA) is also an informal name for Mission-Based Critical
Information Technology Asset Identiﬁcation. It is a subset
of broader analyses that identify all types of mission-critical
assets.” Commonly, adversaries compromise CJs not by way
of ingenious technical methods, but rather by the apt use of
cyber terrain [6]. Adversaries often gain access to key terrain
slowly over time [7].

There has been a growing interest in using notions of cyber
terrain in cyber engineering practice [6]–[8]. Chief among the
reasons is an increasing appreciation for the integral roles that
networks, their structure and conﬁguration, and the paths taken
in them play in engineering for cybersecurity, deterrence, and
cyber resilience. While the MITRE ATT&CK framework [9],
for example, provides a temporally organized compendium

of tactics and techniques used by adversaries, it is not clear
that attack campaigns and defensive measures can be well
engineered by selecting and aggregating elements from the
framework. An ordered list of techniques may provide a
meaningful post-hoc accounting of attack campaigns. But, for
most operators, information regarding a network’s structure,
e.g., as captured by an attack graph, an understanding of a
network’s cyber terrain, and the overall path structure within
the network are foundational to operational application of
MITRE ATT&CK and similar frameworks.

This paper presents a novel method for using reinforcement
learning in crown jewel analysis, termed CJA-RL, that incor-
porates network structure, cyber terrain, and path structure to
enhance operator workﬂow by automating the construction
and analysis of attack campaigns from various entry points
or initial nodes to a CJ’s 2-hop network. Initial nodes and
terminal nodes in the 2-hop network are analyzed in terms of
footprint or quietness, i.e., the number of hops, as well as the
efﬁcient use of exploits and vulnerabilities, and, furthermore,
paths are analyzed for pivot and choke points [6].

In the cybersecurity literature, although cyber terrain has
been advocated for [6]–[8], [10], it has not been widely applied
to automated methods like machine learning. Gangupantulu
et al. present methods for building cyber terrain into Markov
Decision Process (MDP) models of attack graphs [11]. Specif-
ically, ﬁrewalls are treated as cyber obstacles 1. In contrast,
this paper contributes a method for identifying key terrain
and avenues of approach by probing networks with RL. As
such, CJA-RL introduces cyber terrain to penetration testing
by way of the speciﬁc use of RL, as opposed to augmenting
state dynamics or rewards in MDP models of attack graphs.
Since methods of modeling attack graphs and MDPs can
vary between networks and enterprises, this CJA-RL approach
provides a more general mechanism for incorporating terrain,
albeit different terrain, than prior work [11].

The paper is structured as follows. First, a background
is given on crown jewels, reinforcement learning, and rein-
forcement learning for penetration testing. Then, the CJA-
RL method is presented and results are discussed. The paper

1Obstacles are part of the OAKOC intelligence preparation of the battleﬁeld

framework described in [6]

 
 
 
 
 
 
concludes with a synopsis and remarks on how CJA-RL can
augment cybersecurity practices.

II. BACKGROUND

A. Crown Jewels

Typically, mission assurance and resiliency processes start
with CJA as a methodology to align an organization’s mission
with their critical cyber assets [5]. Prior to initiating such an
analysis, the critical needs of the business mission must be
deﬁned. These ﬁndings can be employed to scope and size
the infrastructure required to fulﬁll the mission need. The
IT assets that align to this mission are considered to be the
most important and of the highest value; they are the “Crown
Jewels” of the organization.

The assignment of a mission relevance value for these IT
assets lies at the heart of CJA [5]. The depth of such an
analysis depends on the functional use of the IT asset by the
organization. For example, a payroll system may be a target
as it has not only information related to salaries but highly
sought after personal identifying information (PII) in a single
location. Such data, once exﬁltrated, can be sold at a high price
or used for nefarious purposes. By measuring the importance
of these IT assets, the organization is capable of assigning
risk and value scores for each, and CJs can be determined
computationally [7].

In real-world cases of penetration testing and adversary
emulation, attackers do not always follow direct or expected
attack paths [12], [13]. The assumption that attackers will
follow direct paths when performing CJA creates gaps in as-
signed risks and values. While MITRE’s ATT&CK Framework
highlights methodologies used to exploit these gaps [9], orga-
nizations struggle to derive the secondary or tertiary effects of
these exploits. As a result, such gaps create a situation where
reconnaissance and access exploits during late-stage attacks
can appear to have little impact on an organization’s CJs, when
in reality adversaries are using them to position themselves
near key terrain and avenues of approach to further their attack
campaign goals. Consider the following example of such a
phenomena.

1) Motivating Example: A common cause of gaps between
true and assigned risks and values is the mis-evaluation of the
risk associated with visibility and network exposure. A real-
world example of this is a print server. In evaluating a print
server in CJA, an organization may make the assumption that
printing services being inoperable or degraded will have no
immediate impact on the organization’s business, nor impact
other critical IT assets. However, the print server could serve
as a pivot point2 within the network as it may lie within a 1- or
2-hop graph of a target CJ. By inappropriately identifying the
risk and value of a print server within close proximity to a CJ,
the organization will underestimate its value in an adversarial
attack campaign. This failure results from ignoring the need
for identifying exploitable terrain (i.e. print servers and other
infrastructure) within the breadth of the enterprise integrated

2Pivot points are footholds in networks for lateral movement.

services in complex infrastructures [14], [15]. In addition to
printing, users in the midst of their day-to-day tasks depend
on services like authentication through identity and access
management (IdAM), network access to key business shares,
and connectivity to the internet from within the enterprise [6].
The integration of such services forms tertiary yet key aspects
in the analysis of CJ that are critical to business function. The
method in this paper, CJA-RL, offers a means of decreasing
these tangential attack opportunities by identifying key terrain
and avenues of approach and by identifying risks based on
network structure and cyber terrain; contrary to most gap-
prone threat-model-driven assessments.

B. Reinforcement Learning

RL concerns agents who learn by taking actions in an
environment and receiving rewards [16]. An agent interacts
with an environment E by taking actions at and receiving
states st+1 and rewards rt+1. Typically an MDP is used to
model E. A ﬁnite MDP is a tuple (cid:104)S, A, Φ, P, R(cid:105), where S
is a set of states, A is a set of actions, Φ ⊂ S × A is the
set of admissible state-action pairs, P : Φ × S → [0, 1] is
the transition probability function, and R : Φ → R is the
expected reward function where R is the set of real numbers.
P (st, at, st+1) denotes the transition probability from state st
to state st+1 under action at, and R(s, a) denotes the expected
reward from taking action a in state s.

RL agents learn by maximizing expected future rewards.

Speciﬁcally, the discounted sum of future rewards is

Rt =

∞
(cid:88)

k=0

γkrt+k

the action value function is

Qπ(s, a) = E[Rt|st = s, a]

and the optimal action-value function is

Q∗(s, a) = max

π

Qπ(s, a)

(1)

(2)

(3)

where γ ∈ (0, 1) is a discount factor and π is a policy mapping
states and actions (s, a) to the probability of picking action a
in state s.

In this paper, Deep Q-learning (DQN) is used to approx-
imate Q∗ with a neural network Q(s, a; θ), where θ are
parameters of the neural network [17], [18]. DQN has been
widely used in the penetration testing literature [11], [19]–[21].

C. Reinforcement Learning for Penetration Testing

RL has seen recent interest by the cybersecurity community
for its variety of beneﬁts. Penetration testing is multi-faceted
[22], and RL is general enough to be the basis for many
tools for the various types of penetration testing, e.g., external
testing, internal testing, blind testing, and double-blind testing
[23]. Additionally, RL solution methods can scale penetration
testing to the challenges of future networks, such as payload
mutation and intelligent entry-point crawling [13].

So far, RL methods for penetration testing use the attack
graph model [11], [19]–[21], [24]–[27]. Figure 1 depicts

Fig. 1: The Process of Deploying RL on MDPs Modeled using Attack Graph Representations of Networks.

the high-level process of deploying RL on a network. Most
authors treat E as an MDP, as is done herein, where network
structure and conﬁguration are observable. While treating E
as a partially observable MDP (POMDP), where structure and
conﬁguration are uncertain, is more realistic, such approaches
have not been shown to scale to large networks and require
modeling many prior probability distributions [28]. RL agents
are trained in an episodic fashion where terminal states are the
targets of penetration testing.

Similar to previous literature, vulnerability information is
used to construct
the MDP [11], [20], [21], [27]. More
speciﬁcally, following Gangupantulu et al. [11], the MDPs
used in this paper incorporate notions of cyber terrain by
treating ﬁrewalls as cyber obstacles by lowering corresponding
transition probabilities in MDPs. In contrast to prior work, a
larger network is used herein relative to previous literature on
RL for penetration testing, as reported in Table I.

The attack graph is constructed by passing network infor-
mation to MulVal [29]. MulVal uses a reasoning engine to
conduct vulnerability analysis and generate a graphical net-
work representation. In modeling MDPs using attack graphs,
the state space S consists of the attack graph’s vertices
and the actions A consist of its edges. The vertices can
be components of the network or means of traversal, e.g.,
intermediary ﬁle servers or interaction rules, respectively, and
connections between components and means of traversal are
the actions A.

The Common Vulnerability Scoring System (CVSS) [30]
is used to model the transition probabilities P and rewards
R. The CVSS is an open and industry-standard method of
measuring cybersecurity vulnerabilities by using a database of
known exploits. The CVSS offers an automated approach to
constructing attack graphs and MDPs for RL that is common
in the literature [11], [20], [21], [27]. In this paper, following
Hu et al. and Gangupantulu et al. [11], [21], the transition
probabilities P (st, at, st+1) are modeled as 0.9, 0.6, and 0.3
of transitioning out of st when the attack complexity of st+1
is low, medium, and high, respectively. The reward rt+1 is
given by

Base Score(st+1) +

Exploitability Score(st+1)
10

(4)

when the agent successfully transitions and 0 otherwise. In
addition to this reward, reward of 100 is given for arriving
in the terminal node and a reward linearly scaled from 0
to 100 is given for arriving at each node along the depth
ﬁrst search path from the initial to terminal node. Lastly,
cyber terrain is including in the MDP via treating ﬁrewalls
as cyber obstacles. Following Gangupantulu et al., ﬁrewall
information is included in the modeling of the MDP by
downwardly adjusting transition probabilities corresponding to
whether FTP, SMTP, HTTP, or SSH is used [11].

III. METHODS

Performing CJA using RL involves multiple steps of domain
understanding and graph analysis. The attack graph extracted
using MulVal is parsed multiple ways. Firstly, following [11],
the input.p ﬁle to the attack graph generator as well as the
resultant set of attack graphs is examined. The input.p ﬁle
contains valuable information about the nature of the network,
such as subnets and their connections, ﬁrewalls, and sensitive
hosts. The attack graph is a snapshot of the network oriented
towards a representing the capabilities available to a penetra-
tion tester, such as privilege escalation opportunities, the range
of exploits available, and the level of vulnerabilities that lie
in a network. Using domain understanding, CJs are found by
assessing their importance to the system and its operational
ability as a whole. In this work, these CJs were either Linux-
based objects within a system, such as a wireless server or
the root user account, or Active Directory objects, such as a
speciﬁc machine in an organization’s network infrastructure.
Upon identifying the CJ within the attack graph, the next
steps are to construct the network’s MDP and to identify the
CJ’s 2-hop network. Then, the set of initial nodes wherefrom
the CJ’s 2-hop network is reachable is identiﬁed. This involves
iteratively assessing possible paths to the 2-hop network. Once
a set of reachable initial nodes is established, the CJA-RL
algorithm can be run.

CJA-RL takes the MDP, CJ node, and reachable initial nodes
as inputs. The CJ’s 2-hop network is found, then for each
initial node and each node in the CJ’s 2-hop network, an RL
agent is episodically trained until total reward converges. The
optimal learned policy, i.e., Q∗ in Equation 3, is used to ﬁnd
the optimal path. The paths are collected and then analyzed

Paper

Network Description(s)

Ghanem and Chen [24]
Schwartz and Kurniawati [19]
Ghanem and Chen [25]
Chaudhary et al. [26]
Youseﬁ et al. [27]
Chowdary et al. [20]
Hu et al. [21]
Gangupantulu et al. [11]
Our largest network

100 machine local area network
50 machines with unknown services and 18 machines with 50 services
100 machine local area network
Not reported
Attack graph with 44 vertices and 43 edges
Attack graph with 109 vertices, edges unknown, and a 300 host ﬂat network
Attack graph with 44 vertices and 52 edges
Attack graph with 955 vertices and 2350 edges
Attack graph with 1617 vertices and 4331 edges

TABLE I: The largest network sizes in the RL penetration testing literature as reported in [11].

Algorithm 1 Crown Jewel Analysis via RL (CJA-RL)

Input: MDP, CJ node, reachable initial nodes
Output: Paths to CJ’s 2-hop network and analysis

2-hop ← f2-hop(CJ)
for i in reachable initial nodes do

(cid:46) Get nodes in 2-hop network

for j in 2-hop do

path ← fRL(M DP, i, j)
paths ← store(path)

end for

end for
return paths, analysis(paths)

(cid:46) Optimal path i → j

using statistics and manual inspection. Algorithm 8 follows
this description and Figure 2 provides depictions of CJA-RL.
High reward corresponds to efﬁcient use of exploits and
low number of hops corresponds to being low-footprint or
quiet. These metrics can be used to analyze key terrain by
ranking initial nodes, i.e., network entry points, and terminal
nodes, i.e., pivots to the CJ. Also, nodes frequently while
traversing the network can be used to characterize avenues
of approach, e.g., choke points. The outcome of CJA-RL is
cyber-terrain-oriented understanding of the hosts in a network
that are advantageous or otherwise useful for a malicious actor
to compromise in order to gain access to CJs.

IV. RESULTS

Our formalism for CJ path determination illuminates those
avenues of approach for an actor that hopes to access incon-
spicuous hosts on the road to exploiting key IT assets while
remaining undetected. Hosts that lie within the 2-hop graph
of a CJ, that possess vulnerabilities, applications, or elements
that can be exploited, offer real value in adversarial attack
campaigns. Gaining footholds within proximity of a CJ is often
a needed intermediate step for launching additional capabilities
needed to fully exﬁltrate or compromise a CJ [6].

it

is prudent

When assessing the performance of the approaches that
this is not a one-
were taken,
dimensional assessment of rewards accrued by the agent - as
that would fail to paint clear context behind the CJ and its
neighborhood. Instead, CJA-RL is applied to a few examples

to note that

Fig. 2: Depiction of CJA-RL.

of different CJs that have been identiﬁed in a network. The
results assess both the nature of the network itself that is being
utilized, as well as the validity of CJA-RL and how it can
help drive realistic outcomes during the exercise of penetration
testing.

Analysis identiﬁed the best terminal nodes, most visited
nodes, and best initial nodes for a set of CJs. The terminal
node that has the least number of hops of traversal needed to
reach that node, while maximizing the reward, has the beneﬁt
of being the quietest staging node in which to gain a foothold.
It also ends up becoming the ideal candidate from which
to stage an attack campaign on a CJ. This kind of analysis
introduces the concept of cover and concealment, found often
in cyber terrain analysis [6]. The most visited nodes has the
importance of being ideal candidates for sensors/trackers. It is
also important to consider the proportion of paths that utilize
the most visited node in designing sensor/tracker systems. The
statistics regarding RL performance from the different initial
nodes can be used to identify which entry points are best for
which CJs. Additionally, initial nodes can be studied on an
aggregate basis to assess if there lies a single initial node that
is best for attacking multiple CJs. This is particularly useful
information for penetration testers looking to launch attack
campaigns which pivot laterally across the enterprise.

Table II give a snapshot of CJA-RL applied to multiple CJs
in our network. It appears that the most visited node tends to
be an interaction rule of either an active session or an active

Crown Jewel

Best Initial Node

Best Terminal Node

Most Visited Node

AD Computer - comp00384

attack on abraniff00503 in comp00384

ruleHasActiveSession(cclinker00753)

RULE 1 (Exploit active session)

AD Computer - ﬂlabdc

attack on lcopa00557 in ﬂlabdc

attack on misby00484 in ﬂlabdc

RULE 1 (Exploit active session)

AD Group - administrators

Active Session exploited for lrainer00755

attack on sfordham00591 in comp00001

RULE 28 (Users with active login sessions)

Object in subnet network core

attack on machine dbranstad00508

root access to cloud conn mgmt

RULE 1 (Exploit active session)

mail server object in any subnet

attack on efeltus00249 in comp00955

attack on wfeagins00889

RULE 28 (Users with active login sessions)

TABLE II: The table shows the statistics behind the RL execution for a variety of crown jewels, indicating their best initial
node, best terminal node, and most visited node. Here, the ‘best’ nodes are determined by minimizing the number of hops to
reach the crown jewel neighborhood while maximizing the total reward.

login session. These are easily exploitable means of navigating
the network across subnets to enter the CJ’s neighborhood.
Both network defenders and adversaries could consider this
type of host as an excellent candidate to pivot laterally across
the network, thus driving subsequent methods for exploitation
or defense. Additionally, attacks on various host computers
within a subnet tend to be the best terminal nodes. This tells
us that within an attack graph setting, engaging via interaction
rules is the way of preferred traversal and the gateway into a
speciﬁc CJ target. This illuminates some of the subtle methods
used by attackers to traverse networks while not triggering
deployed countermeasures. Awareness of where these hosts
exist are critical for suggesting the path an adversary could use
to compromise a CJ or how defenders can deploy defensive
countermeasures for CJ protection.

Additionally, following the OAKOC cyber terrain principles
of key terrain and avenues of approach [6], by looking at what
nodes in the CJ’s neighborhood require the least number of
hops to get to. In our case, these nodes where an augmentation
of a Bloodhound-based Active Directory domain [31], through
a relationship established between nodes in the attack graph.

V. CONCLUSION

This paper presents methods enhancing previous use of
cyber terrain in reinforcement learning for penetration testing
[11] by using the concept of a crown jewel to identify advan-
tageous hosts within a network. Our methodology maintains
an automated, scale-oriented approach to constructing MDPs,
while introducing notions of cyber terrain and path analysis
that help users understand their networks on a deeper level.

CJA-RL is a kind of cyber terrain analysis and is based
on cyber terrain methodologies within intelligence preparation
of the battleﬁeld. We showed how CJA-RL can be used
to ﬁnd some of the most critical hosts within a network,
including: ideal entry points, ideal pivots for sensors/trackers,
ideal footholds nearby crown jewels, and hosts that could be
used to compromise an entire system, i.e., multiple CJs, if
penetrated.

CJA-RL’s rich, empirical, and automated output allows
operators and engineers to quickly develop an understanding
of network and terrain, allowing them to focus their time and
expert knowledge elsewhere. Two examples of this are (1)
building richer attack campaigns that couple threat models
with the terrain and paths to CJs identiﬁed by CJA-RL or

(2) instituting defensive measures near key terrain and related
avenues of approach.

Future work should consider how more elements of cyber
terrain can be folded into MDP construction to increase
quality of advantageous host predictions. One approach is
to use a labeling procedure. A labeling procedure would
have the added beneﬁt of producing further context for path
recommendations within a neighborhood. However, if labeling
is introduced, it should carefully consider how it limits the
scale the size of attack graphs. CJA-RL can be applied to richer
attack graphs and MDPs, and such an extension would further
validate CJA-RL as well as the use of intelligence preparation
of the battleﬁeld principles in creating realistic contexts for
penetration testing. Methods should be developed that quantify
the impact of a crown jewel in a more meaningful way than
the CVSS-based reward paradigm. In addition, CJA-RL can
be integrated with security incident and event management
(SIEM) systems and/or security-focused data lakes as a means
to recommending weaknesses within the network that are
candidates for defense or countermeasure deployments.

VI. ACKNOWLEDGEMENTS

This work was made possible through the collaboration
between Dr. Michael Ambroso, Lead for the AI/ML for Cy-
ber Testing Innovation Pipeline group—funded by Deloitte’s
Cyber Strategic Growth Offering led by Deborah Golden,
and Dr. Laura Freeman, Director of the Hume Center for
National Security and Technology’s Intelligent Systems Lab
at the Virginia Polytechnic Institute and State University.

REFERENCES

[1] C. Glenn, D. Sterbentz, and A. Wright, “Cyber threat and vulnerability
analysis of the us electric sector,” Idaho National Lab.(INL), Idaho Falls,
ID (United States), Tech. Rep., 2016.

[2] S. Varga, J. Brynielsson, and U. Franke, “Cyber-threat perception and
risk management in the swedish ﬁnancial sector,” Computers & Security,
vol. 105, p. 102239, 2021.

[3] J. R. Reeder and C. T. Hall, “Cybersecurity’s pearl harbor moment:
Lessons learned from the colonial pipeline ransomware attack,” 2021.
[4] S. Musman, M. Tanner, A. Temin, E. Elsaesser, and L. Loren, “A
systems engineering approach for crown jewels estimation and mission
assurance decision making,” in 2011 IEEE Symposium on Computational
Intelligence in Cyber Security (CICS), 2011, pp. 210–216.

[5] MITRE. Mitre crown jewels analysis

(cja).

[Online]. Available:

https://www.mitre.org/publications/systems-engineering-guide/
enterprise-engineering/systems-engineering-for-mission-assurance/
crown-jewels-analysis

[6] G. Conti and D. Raymond, On cyber: towards an operational art for

cyber conﬂict. Kopidion Press, 2018.

[Online].
bloodhound-a-tool-for-exploring-active-directory-domain-security

https://latesthackingnews.com/2018/09/25/

Available:

[7] J. Guion and M. Reith, “Cyber terrain mission mapping: Tools and
methodologies,” in 2017 International Conference on Cyber Conﬂict
(CyCon U.S.), 2017, pp. 105–111.

[8] S. D. Applegate, C. L. Carpenter, and D. C. West, “Searching for digital
hilltops,” Joint Force Quarterly, vol. 84, no. 1, pp. 18–23, 2017.
[9] B. E. Strom, A. Applebaum, D. P. Miller, K. C. Nickels, A. G.
Pennington, and C. B. Thomas, “Mitre att&ck: Design and philosophy,”
Technical report, 2018.

[10] R. Larkin, S. Jensen, D. Koranek, B. Mullins, and M. Reith, “Towards
dynamically shifting cyber terrain with software-deﬁned networking and
moving target defense,” in International Conference on Cyber Warfare
and Security. Academic Conferences International Limited, 2021, pp.
535–XIII.

[11] R. Gangupantulu, T. Cody, P. Park, A. Rahman, L. Eisenbeiser,
D. Radke, and R. Clark, “Using cyber terrain in reinforcement learning
for penetration testing,” 2021.

[12] C. Weissman, “Penetration testing,” Information security: An integrated

collection of essays, vol. 6, pp. 269–296, 1995.

[13] C.-K. Chen, Z.-K. Zhang, S.-H. Lee, and S. Shieh, “Penetration testing

in the iot age,” computer, vol. 51, no. 4, pp. 82–85, 2018.

[14] D. Geer and J. Harthorne, “Penetration testing: A duet,” in 18th Annual
Computer Security Applications Conference, 2002. Proceedings.
IEEE,
2002, pp. 185–195.

[15] M. Denis, C. Zena, and T. Hayajneh, “Penetration testing: Concepts,
attack methods, and defense strategies,” in 2016 IEEE Long Island
Systems, Applications and Technology Conference (LISAT). IEEE, 2016,
pp. 1–6.

[16] R. S. Sutton and A. G. Barto, Reinforcement learning: An introduction.

MIT press, 2018.

[17] V. Mnih, K. Kavukcuoglu, D. Silver, A. Graves, I. Antonoglou, D. Wier-
stra, and M. Riedmiller, “Playing atari with deep reinforcement learn-
ing,” arXiv preprint arXiv:1312.5602, 2013.

[18] V. Mnih, K. Kavukcuoglu, D. Silver, A. A. Rusu, J. Veness, M. G.
Bellemare, A. Graves, M. Riedmiller, A. K. Fidjeland, G. Ostrovski
et al., “Human-level control
learning,”
Nature, vol. 518, no. 7540, pp. 529–533, 2015.

through deep reinforcement

[19] J. Schwartz and H. Kurniawati, “Autonomous penetration testing using
reinforcement learning,” arXiv preprint arXiv:1905.05965, 2019.
[20] A. Chowdary, D. Huang, J. S. Mahendran, D. Romo, Y. Deng, and
A. Sabur, “Autonomous security analysis and penetration testing,” 2020.
[21] Z. Hu, R. Beuran, and Y. Tan, “Automated penetration testing using
deep reinforcement learning,” in 2020 IEEE European Symposium on
Security and Privacy Workshops (EuroS&PW).
IEEE, 2020, pp. 2–10.
[22] A. Austin and L. Williams, “One technique is not enough: A comparison
of vulnerability discovery techniques,” in 2011 International Symposium
on Empirical Software Engineering and Measurement.
IEEE, 2011, pp.
97–106.

[23] C. Weissman, “Security penetration testing guideline,” Naval Research

Laboratory, Unisys Government Systems, vol. 12010, 1995.

[24] M. C. Ghanem and T. M. Chen, “Reinforcement learning for intelligent
penetration testing,” in 2018 Second World Conference on Smart Trends
in Systems, Security and Sustainability (WorldS4).
IEEE, 2018, pp.
185–192.

[25] ——, “Reinforcement learning for efﬁcient network penetration testing,”

Information, vol. 11, no. 1, p. 6, 2020.

[26] S. Chaudhary, A. O’Brien, and S. Xu, “Automated post-breach penetra-
tion testing through reinforcement learning,” in 2020 IEEE Conference
on Communications and Network Security (CNS).
IEEE, 2020, pp. 1–2.
[27] M. Youseﬁ, N. Mtetwa, Y. Zhang, and H. Tianﬁeld, “A reinforcement
learning approach for attack graph analysis,” in 2018 17th IEEE In-
ternational Conference On Trust, Security And Privacy In Computing
And Communications/12th IEEE International Conference On Big Data
Science And Engineering (TrustCom/BigDataSE). IEEE, 2018, pp. 212–
217.

[28] D. Shmaryahu, G. Shani, J. Hoffmann, and M. Steinmetz, “Constructing
plan trees for simulated penetration testing,” in The 26th international
conference on automated planning and scheduling, vol. 121, 2016.
[29] X. Ou, S. Govindavajhala, and A. Appel, “Mulval: A logic-based

network security analyzer,” pp. 8–8, 07 2005.

[30] P. Mell, K. Scarfone, and S. Romanosky, “Common vulnerability scoring
system,” IEEE Security & Privacy, vol. 4, no. 6, pp. 85–89, 2006.

[31] (2018,
for

September)

exploring

active

Bloodhound
directory

–
domain

a

tool
security.

