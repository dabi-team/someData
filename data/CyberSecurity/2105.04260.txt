EPICTWIN: An Electric Power Digital Twin for Cyber Security Testing, Research and
Education

Nandha Kumar Kandasamy, Sarad Venugopalan, Tin Kit Wong, Leu Junming Nicholas

Singapore University of Technology and Design

1
2
0
2

y
a
M
0
1

]

R
C
.
s
c
[

1
v
0
6
2
4
0
.
5
0
1
2
:
v
i
X
r
a

Abstract

Cyber-Physical Systems (CPS) rely on advanced communication and control technologies to efﬁciently manage devices and the
ﬂow of information in the system. However, a wide variety of potential security challenges has emerged due to the evolution of
critical infrastructures (CI) from siloed sub-systems into connected and integrated networks. This is also the case for CI such as a
smart grid. Smart grid security studies are carried out on physical test-beds to provide its users a platform to train and test cyber
attacks, in a safe and controlled environment. However, it has limitations w.r.t modifying physical conﬁguration and difﬁculty to
scale.

To overcome these shortcomings, we built a digital power twin for a physical test-bed that is used for cyber security studies on
smart grids. On the developed twin, the users can deploy real world attacks and countermeasures, to test and study its effectiveness.
The difference from the physical test-bed is that its users may easily modify their power system components and conﬁgurations.
Further, reproducing the twin for using and advancing the research is signiﬁcantly cheaper. The developed twin has advanced
features compared to any equivalent system in the literature. To illustrate a typical use case, we present a case study where a cyber
attack is launched and discuss its implications.

Keywords: Cyber Physical System, smartgrid, security, digital twin, test-bed.

1. Introduction

It is impractical to test real world security vulnerabilities,
countermeasures and performance impact on a live system with-
out interrupting critical functions that may affect grid opera-
tions [1]. Test-beds that can represent the realistically operation
of critical infrastructures are of signiﬁcant value to researchers
and system operators. Description on many such test-beds are
available in literature along with examples of their use cases
for research in the design of secure smart-grids. From the sur-
vey in Cintuglu et al. [2], it was observed that having the de-
fense mechanisms evaluated in a physical test-bed facilitates
smoother translation of developed technologies. However, the
feasibility is relatively low for reproducing, scaling and modify-
ing such test-beds. Particularly, for researchers working on cy-
ber security technologies lower than TRL6 (technology readi-
ness level 6), it is unrealistically expensive to reproduce such
test-beds. Majority of the test-beds surveyed in a European
commission report [3], were seen to typically cost around 2
million euros in initial capital expenditure. The overall costs
including the operation and maintenance cost, restricts the use
case to a smaller community of researchers.

In education, skills pertaining to the information security
of a smartgrid (besides traditional power engineering curricula)
are not commonly taught or a core focus of the course [4, 5].
The capex and opex for setting up a physical test-bed and main-
taining it may be infeasible for smaller universities and educa-
tional institutions. Hence, there is a practical need for Digital

Preprint submitted to Elsevier

Twins (DTs) that can offer sufﬁcient ﬁdelity of the physical sys-
tem and emulated virtual network which is equivalent to a phys-
ical test-bed. Such DTs will eliminate the need for expensive
test-beds for non-essential cases and enables the infrastructure
to be available to a wider group of students, researchers and op-
erator trainees. The feasibility to reproduce, scale and modify
is another critical advantage of such DTs. Though we present a
DT for a particular test-bed, the procedure used for creating the
DT in this paper can be extended to any type of system whether
a test-bed or an actual plant.

The DT developed and presented in this paper is a digital
equivalent of the physical micro-grid test-bed used in Adepu
et al [6] and is called as Electric Power and Intelligent Control
(EPIC) test-bed. The EPIC test-bed allows its users to validate
the security and safe operation of critical components. We em-
phasize that our twin is primarily focused on security training
and research. Its behavior is closely modeled to approximate
the physical test-bed — to study its impact on security. It pro-
vides users a more realistic view and reduce the gap between
physical and simulated test-bed environments for security test-
ing. The digital components (corresponding to a physical sys-
tem) and its internal conﬁguration are easy to modify, scale and
interconnect. The user is not expected to have in-depth pro-
gramming knowledge. A system expert will be able to dupli-
cate existing modules, change parameters, and plug-and-play
into the DT. Our DT supports a number of communication pro-
tocols (e.g., mms, goose, mqtt, opc-ua, modbus). The network
topologies, trafﬁc ﬂow and other parameters can be changed

 
 
 
 
 
 
easily. It also allows external software modules to be added to
our DT. A modular and ﬂexible approach is incorporated into
our DT to support ‘end to end security testing(cid:48) for different test
cases.

Our DT allows users to deploy attacks and countermea-
sures. Some of the capabilities (but not limited to) of our DT
are listed below.

i) No hardware components are required.
ii) At the service layer, the software (application) under con-

sideration may be tested for vulnerabilities.

iii) It is able to send/receive data via a (virtual) network, en-
abling analysis on network trafﬁc with physical process
data.

iv) At the network layer, we use virtual switching with a switch-
ing stack for hardware virtualization. It supports standard
network protocols allowing its user to easily test out and
validate attacks.

v) At the device layer, a ﬁrmware emulator may be used to
test and patch device exploits or alternately connect to phys-
ical components in a hybrid setup.

vi) Since separate data bus is used for the physical signal, in-
tegrating with physical test-beds for creating hybrid-twins
is also enabled.

Our contributions are unique from the following aspects,

1. The test-beds available in literature are either hardware
test-beds or digital test-beds and in some cases a hybrid.
There are no known systems available in literature which
are a digital twin of an existing cyber-security test-bed or
plant. Hence, the system presented in the paper, to the
best of our knowledge is the ﬁrst of its kind.

2. The paper presents a digital equivalent for an existing
physical test-bed with a procedure that can be used for
twining any test-bed/actual plant meant for cyber-security
studies.

3. We provide an attacker designer (AD) and attack launcher
(AL) for launching systematic attacks on the twin. The
AD and AL are unique from the aspect that the researchers
without a background in offensive security testing could
utilize them to validate and improvise the developed de-
fense mechanisms. E.g., security researchers with exper-
tise in machine learning working on grid anomaly detec-
tion.

The rest of the paper is organized as follows, the back-
ground required for understanding paper is presented in Sec-
tion 2 followed by the architecture of the twin in Section 3. A
case study is presented in Section 4 and the discussion on the
features is presented in Section 5. Section 6 presents the related
work and the conclusions are drawn in Section 7.

2. Background

2.1. Use Cases

In our DT, the following use cases can be realized and these
use cases are listed as critical requirements for DTs by Bergman
et al.[7] & Ashok et al.[8]:

i) Training operator trainees, students and researchers for op-

erating and using a test-bed or actual plant,

ii

ii) Model & library development for a test-bed or actual plant,
iii) Threat & vulnerability assessment of different components

in a test-bed or actual plant,

iv) Threat analysis & mitigation for different components and

vulnerabilities, and

v) Development, testing, deployment and rapid prototyping
of different technologies, control strategies and topologies.

2.2. Architecture of Physical Test-Bed Considered for Twining

2.2.1. Test-bed overview

The EPIC test-bed [6] mainly consists of four zones namely,
generation, micro-grid, transmission and smart home. All the
four zones are equipped with intelligent electronic devices (IEDs)
to collect Current, Voltage, Power and Frequency for the three
phases buses. Further, advanced metering infrastructure (AMI)
meters are also physically co-located with IEDs and collect
Current, Voltage, Power and Frequency for all the three phases
at different electrical nodes.

• Generation: Generation stage is driven by electric mo-

tors connected to the main power supply.

• Micro-Grid: Photo-voltaic (PV) cells, inverters and bat-
teries compose this stage to supplement the generation of
power.

• Transmission: This stage is composed of buses to trans-

port power to the smart home unit.

• Smart Home: Programmable load banks containing RLC1
loads represents a home load environment. Besides, there
are two water test-beds [9, 10] connected to the EPIC
test-bed as the load.

2.2.2. Electrical Layout

The test-bed consists of the following components as shown
in Figure. 1. It has i) two conventional generators (10KVA each)
driven by 15kW VSD driven motors to represent the conven-
tional combination of prime-mover and generator. ii) a 34kW
solar PV system is available along with an 18kW battery system
to represent power generation from the intermittent Renewable
Energy Source (RES). iii) a 105kVA 3 phase voltage regulator
for representing power supply from a transmission system. iv)
two load banks capable of emulating 45kVA load to represent
critical and non-critical loads. It can supply power to the other
two water test-beds. v) a 10kW motor-generator load to rep-
resent spinning load and vi) industrial standard Molded Case
Circuit Breakers used for short-circuit protection and switching
functions.

A picture of the control room is shown in Figure. 3. A digi-
tal equivalent of this test-bed will be presented in the following
sections.

1Resistor-Inductor-Capacitor

Figure 1: Electrical layout of the EPIC (actual) test-bed. Electrical power lines are shown in red color lines. MC - Mechanical coupling, CB - Circuit Breaker,
IEDs - intelligent electronic devices, the preﬁx G, M T and S stands for Generation, Micro-grid, Transmission and Smart Home respectively.

Figure 2: A simpliﬁed network diagram for EPIC test-bed is shown. This is to help the associated network traces. IP addresses in the network traces correspond
to respected devices shown in the ﬁgure. Each dotted box represents a subnet with the respective IP addresses. A X in the IP address means that a device in
that subnet would have the similar subnet mask and then unique X as its own IP. Typical devices are PLCs and Intelligent Electronic Devices. The connection
M SW 1 − − > S SW 1 − − > C SW 1 − − > T SW 1 − − > G SW 1 − − > M SW 1 is a High-availability Seamless Redundancy (HSR) ring.

2.2.3. Communication Layout

Figure 2 shows the communication network architecture in
EPIC test-bed. It shows four major control zones, namely, power
generation, transmission, micro-grid, and smart home. All four
zones have IEDs and other devices controlled by dedicated Pro-

grammable Logic Controllers (PLCs). For example smart home
also contains AMI meters that can communicate with the PLCs
and then can route the data through a central switch to the histo-
rian server and a SCADA workstation. The map of IP addresses
of the speciﬁc devices in the test-bed to the twin is shown in

iii

172.16.3.1172.16.1.1172.16.4.1172.16.2.1172.16.5.1172.16.3.X172.16.1.X172.16.4.X172.16.2.XM_SW1G_SW1S_SW1T_SW1C_SW2C_SW1Microgrid Smart HomeGenerationTransmissionHistorian ServerSCADA System172.18.5.100172.18.5.60Figure 3: EPIC control room, 360-degree view.The picture shows different physical components including the SCADA workstation, IED and Breaker
panel, PLC panel, Historian server, Advanced Metering Infrastructure (AMI) and the Monitoring screen.

Figure 4: A sample network trafﬁc ﬂow between different devices.

Figure. 6. For details on the test-bed related information, an
interested reader is referred to the EPIC test-bed papers [6, 11].
Figure 4 shows the sequence of communication between the
different devices in the EPIC network. In the sequence diagram
it can be seen that the SCADA2 workstation (IP: 172.18.5.60)
holds a central position and send data transfer requests to the
rest of the PLCs.

3. Architecture of the EPIC Digital Twin

3.1. Overview

The architecture of the DT is shown in Figure. 5. The physi-
cal components in Figure. 1 are simulated on SPEEDGOAT and
the physical signals are transferred using a data-bus to the IED-
s/AMIs which act as the interface between physical and net-
work components. The controllers required for the components
in Figure. 2 are simulated using a standard LENOVO laptop3
with the aid of virtual machines (VMs) running on the host
machine. Different software are used to achieve the functions
of ﬁrmware, control logic and communication protocols. We
have integrated AD and Attack Launcher AL on the VMs im-
plementing the switch/router functionalities. Different software
used for achieving the functions of the physical test-bed in dis-
cussed in Section. 3.2 and the design consideration is discussed
in Section. 3.3.

2Supervisory control and data acquisition.
3Intel i7-6600 CPU 2.60GHz, 8 GiB RAM and 500 GB of SSD storage.

3.2. Software to Simulate System & Communication Compo-

nents

Physical Components and Electrical Connections: The phys-
ical components in actual test-bed along with the electrical con-
nections were simulated using MATLAB-SIMULINK4 in real-
time mode. The connection to controller simulation is achieved
through an UDP data-bus. Two separate python programs han-
dle the data ﬂow between the simulation and rest of the sys-
tem and are executed on the development computer that is con-
nected to the SPEEDGOAT real-time machine.
PLCs, IEDs and Network Switches: The controllers repre-
senting PLCs, IEDs and Network switches are simulated on
headless Ubuntu 18.04.5 LTS virtual Machines. We used a sin-
gle operating system (OS) for scalability purposes and avoid
the need for any associated license issues. However, if the users
have access to the actual operating system or ﬁrmware of the re-
spective controller it is feasible to replace the current OS with
the actual OS and ﬁrmware of the respective controllers. We
used Virtual-Box as the hypervisor for creating and running the
VMs. Our host machine also runs on Ubuntu 18.04.5 LTS.
Run-time: The run-time for the PLCs and IEDs are created
using Node-RED platform. Node-RED is a ﬂow-based devel-
opment tool for visual programming developed originally by
IBM for wiring together hardware devices, APIs and online ser-
vices as part of the Internet of Things. Node-RED provides
a web browser-based ﬂow editor, which can be used to create
JavaScript functions. Node-Red functions as the central point

4The model is available as a supplementary ﬁle and can executed on

SIMULINK Real-time Desktop environment with relevant settings.

iv

Figure 5: Architecture of the Digital Twin. Figure. 1 is simulated on SPEEDGOAT and Figure 2 is simulated using a workstation. Different software
are used to achieve the functions of the whole system.

for coordinating all the servers, clients, protocol implementa-
tion and other functionalities of the respective controllers such
as IEDs and PLCs (more details on NODE-RED in Section 5.1).
AMI Meters: Ubuntu 32-bit docker containers are used for
simulating the AMI controllers (this could also be replaced by
VMs), The implementation is similar to PLCs and IEDs in other
aspects.
Network: Open virtual switches (OVS) is used for implement-
ing the network of the actual test-bed in twin. We use Generic
Routing Encapsulation (GRE) tunnels for IP assignment and
network routing.
SCADA: The SCADA functionalities i.e., supervisory control
and all data acquisition are implemented using Node-Red. Clients
for respective protocols, and the server for Open Platform Com-
munications (OPC) 5 are co-ordinated using Node-red. The IEC
clients are implemented using C and OPC server using python
script.
Historian: Historian is implemented using Node-Red and SQLite
database. The historian also provides visualization for the data
similar to the actual plant.
IEC61850: The protocol IEC61850 used in the actual plant is
implemented using libIEC61850 C programming library. Ded-
icated servers and clients are created for each controller, e.g.,
a PLC or an IED. As mentioned before, the co-ordination is
carried out using Node-Red which also provides the run-time
functions.
OPC protocol: The OPC protocol used for data transfer from
SCADA to Historian (same as the actual plant) is implemented
using python scripts and Node-Red.
Attack Designer and Attack Launcher: The AD is imple-
mented on the host machine using python scripts and it inte-
grates the ALs implemented on individual switches to realize
the attack intended. The ALs rely on Ettercap [12] API for im-
plementing the packet manipulations.

5OPC is used to enable the communication between historian and HMI,

similar to the actual test-bed

3.3. Design Considerations

Figure. 7 presents the illustration on how the physical pro-
cess data is made available to the IEDs/AMIs and how other
controllers on the network communicates with IEDs/AMIs. Two
different network interfaces are used to achieve this implemen-
tation, i.e., Vbox IP and EPIC IP in Figure. 6. We leverage on
Message Queuing Telemetry Transport (MQTT) protocol to en-
able the connection between the physical process and the IED-
s/AMIs. MQTT is a publisher-subscriber modelled network
protocol for communicating between devices [13], and highly
suitable for non-synchronous communication that is required
for a data-bus.

3.3.1. Communication Protocols

We categorize the protocols into two groups, i) the proto-
cols used in the actual test-bed, and ii) The protocols which are
used to achieve other functions (say data-bus to represent phys-
ical connections). This section gives a brief overview of the
protocols used in the DT.

With respect to the choice of information transfer protocols,
we highlight the features and properties of two widely used net-
work communication models — the client/server model and the
publisher/subscriber model. Next, we use it as a reference to
choose an approach best suited to meet the network require-
ments. Further, we look at approaches (MQTT, IEC61850 and
GOOSE) under these two models and compare it to bring out
their features and properties (see Table 1).

• MQTT is not used in the physical test-bed, it is used in
DT to achieve the data-bus functions. In MQTT, the de-
vices are connected through an intermediate centralized
broker (e.g., a host running on a cloud). A device is able
to subscribe to topic(s) on the broker. The topic is a string
used to tag the communication of interest to the device.

• IEC61850 manufacturing message speciﬁcation (MMS)
uses Client/Server for real time communication of mes-
sages between networked devices or computers [14]. The

v

Figure 6: EPIC digital twin network diagram. The AMI are implemented on docker containers, The IEDs and PLCs run on VMs. The connections are made via
virtual switches. The SCADA runs on the host machine. The IP map gives the mapping between 192.168.1.x IPs for VMs communication with the external MQTT
broker (not shown in Figure) and 172.16.x.x IPs for communications within the switched network. Refer Figure. 7 for detailed structure of the individual IEDs e.g.,
GIED1.

physical test-bed uses MMS for communication between
SCADA, PLCs and IEDs. MMS is used for control, mea-
surement and status read. Unlike a publisher/subscriber
model that involves multiple communication endpoints, a
client/server model uses a 1:1 communication at the pro-
tocol level. Our DT also uses MMS for communication.

• Generic Object Oriented Substation Events (GOOSE)

is an IEC61850 deﬁned control and measurement com-
munication model in real time (typically under 4 millisec-
onds) over electric substation networks [15]. In the phys-
ical test-bed GOOSE is used for communication between
the IEDs. GOOSE is used for time critical communica-
tion between IEDs to alert of anomalies and take imme-
diate measures to protect the physical device(s). Our DT
also uses GOOSE for communication.

vi

GIED2GIED1GENERATION(HSR)172.16.1.12172.16.1.11172.16.1.2GPLC172.16.1.41TSW2TIED1TIED2TRANSMISSION(HSR)172.16.2.2172.16.2.11172.16.2.12TPLC172.16.2.41CSW2172.16.5.2SSW1172.16.4.1SIED2SIED1SIED3SIED4172.16.4.12172.16.4.14172.16.4.11172.16.4.13SMARTHOME(HSR)SPLC172.16.4.41172.16.3.2MPLC172.16.3.41MIED1MIED2172.16.3.11172.16.3.12MICROGRID(HSR)IP Mapping SCADA[hostmachine]172.16.5.60AMI SW1GAMI1172.17.0.2GAMI2172.17.03MAMI1172.17.0.4MAMI2172.17.0.5MAMI3172.17.0.6SAMI1172.17.0.7SAMI2172.17.0.8SAMI3172.17.0.9SAMI4172.17.0.10TAMI1172.17.0.11TAMI2172.16.5.12172.17.0.1HistorianAttackLauncher (AL)on switch AttackDesignerAPI to call  attacklauncherALALALALCPLC172.16.5.41ALFigure 7: Illustration of process used to link the IED/AMI controllers with the physical process data on one interface and the controller network data on the other
interface. CT: Current Transformer, the IED rectangle shown in grey color is one of the VMs in Figure. 6 say GIED1 and the two network interfaces
EPIC IP and Vbox IP can be observed in IP mapping table.

t / S

n

v

r

e

P
(cid:51)
(cid:55)
(cid:51)

C li e
(cid:55)
(cid:51)
(cid:55)

r
b li s

e

u

e

h

c

P

s
b
u
r / S
T C P / I

(cid:51)
(cid:51)
(cid:55)

r

e

r i b

E t
(cid:55)
(cid:55)
(cid:51)

t

e

n

r

e

h

H a
(cid:55)
(cid:55)
(cid:51)

R e

d

r

T i m e
e
k
o

r

r

a l
B
(cid:51)
(cid:55)
(cid:55)

Approach

MQTT
IEC61850
GOOSE

Table 1: A comparison of features and properties of network protocols used in
digital twin.

Figure 8: Connection from physical simulation on SPEEDGOAT to develop-
ment computer for AWS MQTT connection and OPC data viewing on Histo-
rian. Refer Figure. 6 for controller network and the details on IP mapping with
vbox IP, and Figure. 7 for detailed conﬁguration of a single IED.

3.3.2. Device Communication on the Network

The main control devices in our system are typically IEDs
and PLCs. Communication wrappers are used in our DT. The
IEDs on our DT uses MMS and GOOSE similar to the physical
test-bed. The IEC client is able to directly fetch and set values
on the server (see Figure 7). The IEC61850 server communica-
tion is wrapped using a MQTT subscriber and publisher at the
data in and out endpoints respectively. The wrapper allows for
multi-cast communications between devices without disturbing
existing methods used in communication.

3.3.3. Representing Physical Connections

As mentioned above, none of the test-beds available in lit-
erature considers the interface between the physical signals and
the controllers such as IEDs/AMIs. In many cases the physicals
signals are represented by IEC61850 GOOSE6 signals, though
some of the modern substations could be represented using such
architecture, most of legacy and non-modern smart grid systems
cannot be replicated. We use a dedicated data-bus (see Fig. 5)
for representing the physical connections such as current/volt-
age sensors (transformers) to IEDs/AMIs.

3.3.4. Eliminating Specialized Hardware

Though we have used SPEEDGOAT for real-time simula-
tion, it is feasible to run the simulation on a general purpose
computer with Simulink Desktop real-time. Such a setup is
feasible because we use UDP packet communication for data
bus (may also be deployed using serial ports). Hence, replica-
tion of the DT does not require any specialized hardware, and
is signiﬁcantly cheaper and scalable.

6Generic object oriented substation events.

vii

IEC61850 ServerMQTT  SubscribertelemetryIn.filereadMQTTPublisherIEC61850 ClientE.g., PLC, SCADAetc...measures &status valuesMQTT PublisherwritereadMQTTSubscribercontrolvaluesSpeedGoatPhysical Process Simulationmeasures & statusvaluesUDPMQTT Brokercontrol valueswriteIEDtelemetryOut.fileEquivalent of physicalconnection e.g., CTEPIC IP, e.g.,172.16.1.41Vbox IP, e.g.,192.168.1.953.3.5. MQTT vs MODBUS

Other protocols such as MODBUS were also explored for
data-bus and we observed that the performance was not affected
by the choice. However, MQTT with a cloud-broker has the
capability to enable multiple users to use the same simulation
platform given the input/output (I/O) list is available. For ex-
ample, researchers from any part of the world would be able
to control the SPEEDGOAT simulation in our lab, if they have
access to the I/O list and our cloud-broker’s IP address.

The detailed architecture of the DT from end to end is shown7
in Figure. 8. A detailed document explaining the step-by-step
process to recreate the DT is also available in the supplementary
ﬁles 8.

4. Case Study

As mentioned in Section. 2, the use case of the DT is for
cyber security studies. Hence, in this section, we demonstrate
a complete and coherent attack on the smart home zone. Con-
sider a load (e.g., a aggregated heat pump) attached to the smart
home zone consisting of multiple homes. The operator is able
to read the SCADA display GUI (see Fig. 9) by logging in via
an application. The status indicator will show the position of
the switch controlling the aggregated heat pump. The color red
indicates the status OFF and green represents ON. The owner
(victim) sends a control signal to turn off the pump.

However, a man-in-the-middle (MITM) attacker mounts an
attack to maintain the status of the heat pump as ON. To cover
their trail, a command to display the status of the pump as OFF
is passed to the SCADA. As a result, the operator sees the status
of the pump as OFF. This may be insufﬁcient to go unnoticed
when the current and voltage values are also part of the owners
GUI visuals. It would appear that a higher current is still being
drawn by the load despite appearing to be turned off. To correct
it, the attacker also spoofs the measurement values to replicate
the conditions when the load was disconnected.

To demonstrate this, we developed EpicSploit (see Fig. 10)
— an attack designer tool for EPIC’s [6] DT. The goal of the
tool is to exhibit fast and easy active man-in-the-middle attacks
on speciﬁed points within EPIC twin via a command line in-
terface that users can conveniently navigate and spoof values
to represent an attacker. EpicSploit is a generic and compos-
able tool not limited to the attack scenario described above. As
seen in Fig. 6, EpicSploit is a plug-and-play tool running on the
EPIC’s DT. The tool is made up of two main components: the
attack designer and the attack launcher. The AD (for this im-
plementation) is located on the SCADA workstation, and will
provide a simple user interface on which users can design and
run attacks on EPIC DT as an attacker. The AL may also run
on any other component between the attacked points. The AL
can be on the controllers, say PLC to realize attacks originating
from edge devices, arising from its vulnerabilities.

Once the attacker enters their commands to EpicSploit, it
makes API calls to the attack launchers located on the net-
work switches within EPIC DT. Here, virtual machines rep-
resent the network switches. These attack launchers run the
scripts to carry out active MITM attacks on the target points.
Using EpicSploit— measurement, control and status values pass-
ing through the network are manipulated. For the smart home
attack described earlier, the EpicSploit tool allows an attacker
to select a ON/OFF switch. E.g., Q4 1 from Smart Home (See
Fig. 9). Further, the attacker selects the payload (whether it
stays on or is turned off). The tool will run an attack command
on the target network switch and reﬂect on the SCADA, the
readings corresponding to the attack payload.

When the operator has sent a command to that switch, Epic-
Sploit will automatically run status and measurement attacks to
spoof the respective values associated with the target switch.
The operator is made to believe a successful response for the
command sent had the desired effect. However, the tool had
intercepted and modiﬁed the command in the background. The
users can develop and test their defense (say an intrusion detec-
tion system (IDS)) mechanism using EpicSploit. The IDS could
either be based on design centric approach (using OPC or MMS
data), data centric approach (using OPC or MMS data), process
based, network based or a combination of multiple methods.
The readers are directed to refer [6, 16, 17] for examples. The
IDS can be deployed on any of the VMs in the DT. However,
IDS implementation was not considered in the scope of this pa-
per. A screen video recording of the attack is available in one
of the supplementary ﬁles.

5. Discussion

5.1. Programming Flexibility

Node-Red is a visual programming tool [18] used for wiring
together (but not limited to) hardware devices. It provides on-
line services (e.g., MQTT-in and MQTT-out) and supports a
wide variety of APIs for applications that are either pre-built
with the installation or downloadable from its library. The ap-
plications are also highly conﬁgurable from the GUI. Node-Red
is ideal for building and editing small to medium sized work-
ﬂow.
It empowers users by supplying a powerful substitute
to command-line batching through process workﬂow visualiza-
tion. The availability of a large library of ready to use nodes
and its ﬂexibility to insert user built nodes, and to interconnect
them makes it a powerful tool for real time workﬂow automa-
tion, monitoring and debugging. Since headless VMs are used
in our implementation, we have installed Node-Red (with web
server support) on the VMs. A web browser (on the host ma-
chine) connects to the Node-Red server on the VM and acts a
visual interface to control and display the execution of the bina-
ries located on the VM. Our implementation of the DT makes
extensive use of Node-Red for workﬂow automation.

7Red-dotted lines will be explained in Section. 5.4
8The procedure will be updated on acceptance, as we want to protect the

procedure until the paper is made public

5.2. Messaging Scalability

MQTT is found to develop communication latencies when
a large number of devices are subscribed to the broker or when

viii

Figure 9: SCADA GUI before the attack.

visible latencies were observed from the use of MQTT in our
DT.

5.3. Virtual Machine vs Container

We attempted to implement the entire system using con-
tainers in place of VMs to further limit resource consumption.
However, due to unavailability of containers that can be used
for MITM attacks and due to ﬁltering limitation of Ettercap for
docker container data trafﬁc, container based implementation
was found to be not practical for DT focusing on cyber security
studies. However, if the DT is used for other applications say
‘Energy Management’, container based implementation may be
a prudent solution.

5.4. Differences between the DT and physical test-bed

Though in an ideal scenario the expectation is to create a
exact equivalent of the physical test-bed, there are conditions
that limit certain features to be reproduced. The differences
along with practical constraints that resulted in the deviation
are listed below.

i) HSR ring is used in the physical test-bed for creating the
internal (within the dotted box) and external rings as shown
Figure. 2. HSR rings provide protection against a single
point of failure in the data network. However, in our DT —
since we rely on OVS to recreate the network, recreating
HSR is not feasible at this point of time. Hence, we have
not removed the links shown in red-dotted line in Figure. 6
to enable the stability of the virtual network created.

ii) Each zone in the physical network has two switches (e.g.,
Micro-grid has MSW1 and MSW2) in the the physical test-
bed.
In the DT, we have implemented the functions of
these two switches on a single VM to optimize the com-
putation resources.

iii) AMI meter data in the physical test-bed is made available
to SCADA in the following sequence, AMI meter (DLMS9

9(Device Language Message Speciﬁcation)

ix

Figure 10: An attacker using the EpicSploit tool to spoof control, status and
measurement values send to the SCADA.

there are multiple publishers (or a combination of both). From
prior experimentation in Aichernig and Schumi [19], it was ob-
served that MQTT implementations such as Mosquitto (used in
this work) have a reasonably low latency of 100 milliseconds
with around 90% of the 100 mosquitto devices able to meet
this latency threshold (for the usage proﬁles tested). A latency
of 100 to 1000 milliseconds is considered acceptable for natu-
ral progression of the task (e.g., time to loading webpages or
changing views) [20]. The EPIC DT uses a total of 20 VMs,
with most of them running a MQTT publisher/subscriber. No

protocol) → RaspberryPi ( DLMS to MODBUS protocol)
→ AMI Switch → PLC (MODBUS - IEC61850 MMS)
→ SCADA. In our DT, the data is directly made available
in IEC61850 MMS format from the docker containers to
SCADA.

iv) The passive loads in physical test-bed are controllable through
discrete values such as 5kW, 2kW, 1kW (also equivalent
kVAr).
In our DT, it is controllable from 0 to 100% in
steps of 10%.

v) The water test-beds are ﬁxed loads in the DT whereas

they are real dynamic loads in the physical test-bed.
vi) Solar PV and Battery system is modeled as PQ source in
the DT without any power electronic components. This is
to optimize the computation load on the real-time machine.
vii) I/O list of the DT is similar to the physical test-bed in the
functions but actual I/O list is not used due to conﬁden-
tiality constraints. The I/O list corresponds to the actual
variable names used to control and monitor the plant.

6. Related work

Security and privacy issues in smart grids have been dis-
cussed in literature [21, 22, 23, 24]. We discuss the existing
test-beds whose focus is on smartgrid security. Finally, we com-
pare them with the EPIC digital twin to highlight its beneﬁts.

Cybersecurity test-bed comparisons: A number of hard-
ware [25, 26, 27], hybrid [28] and simulator [29, 30, 31] CPS
smart grid test-beds are available. However, the test-bed plat-
forms of interest are those where their targeted research area is
cybersecurity. The PRIME test-bed [32] uses a similar archi-
tecture to our twin, the differences are three fold i.e., no attack
tool (similar to our AD and AL) is available, needs specialised
hardware (Compact Rio) and software (such as Labview) for
implementation and it is not a digital twin of any existing sys-
tem. The DETER test-bed [33] and National SCADA test-bed
Program [34] are hardware cybersecurity test-beds. Due to
their physical nature, it is not straightforward to explore dif-
ferent architectures, modify or scale. The University College
Dublin test-bed [35] is a hybrid where the power system is sim-
ulated whereas the IEDs and circuit breakers at the substation
level are physical devices. Their power system simulator and
user interface communicates via Object Linking and Embedded
Process Control (OPC). IEC61850 based protocols are used be-
tween substation user interface and IEDs. The use of physical
devices limits its scalability and adds to the cost of the test-bed.
The TASSCS test-bed [36] uses a number of commercial tools
to build their simulator. They use OPNET tool to simulate com-
puter networks and PowerWorld simulation system to simulate
operation segments in the electric grid, and Modbus RSim to
simulate Modbus servers.

The use of commercial tools as opposed to open source re-
stricts its audience. The work in Yang et al [37], focuses on
fuzz testing for IEC61850 based IEDs but use physical IEDs
and network switches. Texas A&M University supplies [38]
a real-time cyber-physical security test-bed. It uses real time
digital simulator (RTDS) to simulate the power system and its
controllers, OPNET to simulate network communications and

Labview PXI plaltform to bridge RTDS and OPNET in real
time. The proposed architecture shows the use of physical IEDs
and physical networking devices. This results in scalability and
cost issues associated with physical devices. The work in Dayal
et al [39] presents VSCADA, a virtual SCADA infrastructure.
However, they use OPC for communication both at the SCADA
front and backend. SCADASim [40], a real time test-bed sim-
ulator has 3 main components — a message synchronization
scheduler, a communication mechanism, and simulation ob-
jects to represent external components in the simulation envi-
ronment. It is built in top of OMNET++ (a discrete event sim-
ulator). However, MODBUS/TCP simulated protocols cannot
be used as its socket stack is not supported and is replaced by
INET, a library that simulates the TCP/IP protocol. The work
in Koutsandria [41] focuses on network intrusion detection and
uses a rasberry pi as a network tap — typically used to monitor
trafﬁc between two systems connected via a physical cable.

In the case of EPIC DT, all network switches, components
and their interconnections are virtual. I.e., the network switches,
IEDs and PLCs run on VMs. Th EPIC DT requires no addi-
tional physical resources to carry out MITM attacks or to in-
clude an intrusion detection system. The use of libiec61850 C
library ensures that the protocol stack remains consistent with
the real test-bed.

7. Conclusions

In this paper a DT for an existing ICS plant was presented
and in the developed DT the ICS components such as IEDs,
PLCs and network switches are realised on virtual machines,
and AMIs on docker containers. The interconnecting virtual
network was established using OVS. As a result, the software
components are open source, easy to scale and the trace from a
packet sniffer is similar to that on a physical test-bed. In com-
parison, other network simulators may not trivially support the
required communication stack and the sniffer trace may not be
identical to a physical test-bed. This causes overheads in secu-
rity testing and training. Unlike other simulated test-beds re-
viewed, the EPIC digital twin was designed to closely resemble
the outcome of security testing carried out on a physical test-
bed. The developed test-bed was also designed with AD and
AL capable of enabling systematic testing and bench-marking
of IDS that are developed using data-centric and design cen-
tric approaches. EPICTWIN in conjunction with the existing
digital test-beds, would be a useful tool for generating process
and network data that might be impossible with real plants or
actual test-beds. Overall, our simulation required two standard
off-the-shelf laptops and is an attractive low cost solution for
the grid security development and testing, and can be extended
to other types of ICS.

8. Acknowledgment

This work was supported in part by the National Research
Foundation (NRF), Prime Minister’s Ofﬁce, Singapore, under
its National Cybersecurity R&D Programme (Award No. NRF2018

x

- NCR - NSOE005 - 0001) and administered by the National
Cybersecurity R&D Directorate.

References

[1] M. Khan, O. Rehman, I. M. H. Rahman, S. Ali, Lightweight testbed for
cybersecurity experiments in scada-based systems, in: 2020 International
Conference on Computing and Information Technology (ICCIT-1441),
2020, pp. 1–5. doi:10.1109/ICCIT-144147971.2020.9213791.
[2] M. H. Cintuglu, O. A. Mohammed, K. Akkaya, A. S. Uluagac, A sur-
vey on smart grid cyber-physical system testbeds, IEEE Communications
Surveys & Tutorials 19 (1) (2016) 446–464.

[3] N. Andreado, Smart grid laboratories inventory 2016: European commis-

sion jrc science for policy report., [Online] (2016).

[4] V. Namboodiri, V. Aravinthan, S. Joseph, E. Sawan, W. Jewell, Five heads
are better than one: An interdisciplinary graduate course on smart grids:
Lessons, challenges, and opportunities, IEEE Power and Energy Maga-
zine 11 (1) (2013) 44–50. doi:10.1109/MPE.2012.2225231.

[5] T. Strasser, M. Stifter, F. Andr´en, P. Palensky, Co-simulation training plat-
form for smart grids, IEEE Transactions on Power Systems 29 (4) (2014)
1989–1997. doi:10.1109/TPWRS.2014.2305740.

[6] S. Adepu, N. K. Kandasamy, A. Mathur, Epic: An electric power testbed
for research and training in cyber physical systems security, in: S. K. Kat-
sikas, F. Cuppens, N. Cuppens, C. Lambrinoudakis, A. Ant´on, S. Gritza-
lis, J. Mylopoulos, C. Kalloniatis (Eds.), Computer Security, Springer In-
ternational Publishing, Cham, 2019, pp. 37–52.

[7] D. C. Bergman, D. Jin, D. M. Nicol, T. Yardley, The virtual power
system testbed and inter-testbed integration, in: 2nd Workshop on Cyber
Security Experimentation and Test (CSET 09), USENIX Association,
Montreal, Canada, 2009.
URL
virtual-power-system-testbed-and-inter-testbed-integration

https://www.usenix.org/conference/cset-09/

[8] A. Ashok, S. Krishnaswamy, M. Govindarasu, Powercyber: A remotely
accessible testbed for cyber physical security of the smart grid, in: 2016
IEEE Power Energy Society Innovative Smart Grid Technologies Confer-
ence (ISGT), 2016, pp. 1–5. doi:10.1109/ISGT.2016.7781277.
[9] A. P. Mathur, N. O. Tippenhauer, Swat: a water treatment testbed for
research and training on ics security, in: 2016 International Workshop on
Cyber-physical Systems for Smart Water Networks (CySWater), 2016,
pp. 31–36. doi:10.1109/CySWater.2016.7469060.

[10] C. M. Ahmed, V. R. Palleti, A. P. Mathur, Wadi: A water distribu-
tion testbed for research in the design of secure cyber physical sys-
tems, in: Proceedings of the 3rd International Workshop on Cyber-
Physical Systems for Smart Water Networks, CySWATER ’17, Associ-
ation for Computing Machinery, New York, NY, USA, 2017, p. 25–28.
doi:10.1145/3055366.3055375.
URL https://doi.org/10.1145/3055366.3055375

[11] C. M. Ahmed, N. K. Kandasamy, A comprehensive dataset from a smart
grid testbed for machine learning based cps security research, in: H. Abie,
S. Ranise, L. Verderame, E. Cambiaso, R. Ugarelli, G. Giunta, I. Prac¸a,
F. Battisti (Eds.), Cyber-Physical Security for Critical Infrastructures Pro-
tection, Springer International Publishing, Cham, 2021, pp. 123–135.

[12] Ettercap, Ettercap project, [Online] (2021).
[13] Oasis, Mqtt version 5.0, [Online] (2019).
[14] SISCO, Overview and introductionto the manufacturing message speciﬁ-

cation (mms): Revision 2, [Online] (1995).

[15] C. Kriger, S. Behardien, J.-C. Retonda-Modiya, A detailed analysis of
the goose message structure in an iec 61850 standard-based substation
automation system, INTERNATIONAL JOURNAL OF COMPUTERS
COMMUNICATIONS & CONTROL 8 (5) (2013) 708–721. doi:10.
15837/ijccc.2013.5.329.

[16] S. Adepu, N. K. Kandasamy, J. Zhou, A. Mathur, Attacks on smart grid:
power supply interruption and malicious power generation, International
Journal of Information Security (2019) 1–23.

[17] N. K. Kandasamy, An investigation on feasibility and security for cy-
berattacks on generator synchronization process, IEEE Transactions on
Industrial Informatics 16 (9) (2019) 5825–5834.

[18] N. O’Leary, D. Conway-Jones, Node-red, [Online] (2020).
[19] B. K. Aichernig, R. Schumi, How fast is mqtt?, in: A. McIver, A. Hor-
vath (Eds.), Quantitative Evaluation of Systems, Springer International
Publishing, Cham, 2018, pp. 36–52.

[20] RailModel, Measure performance with the rail model, [Online] (2021).
[21] Y. Yan, Y. Qian, H. Sharif, D. Tipper, A survey on cyber security for smart
grid communications, IEEE Communications Surveys Tutorials 14 (4)
(2012) 998–1010. doi:10.1109/SURV.2012.010912.00035.

[22] J. Liu, Y. Xiao, S. Li, W. Liang, C. L. P. Chen, Cyber security and privacy
issues in smart grids, IEEE Communications Surveys Tutorials 14 (4)
(2012) 981–997. doi:10.1109/SURV.2011.122111.00145.

[23] W. Wang, Z. Lu, Cyber security in the smart grid: Survey and chal-
lenges, Comput. Networks 57 (5) (2013) 1344–1371. doi:10.1016/
j.comnet.2012.12.017.
URL https://doi.org/10.1016/j.comnet.2012.12.017

[24] N. Komninos, E. Philippou, A. Pitsillides, Survey in smart grid and smart
home security: Issues, challenges and countermeasures, IEEE Commu-
nications Surveys Tutorials 16 (4) (2014) 1933–1954. doi:10.1109/
COMST.2014.2320093.

[25] NREL, National renewable energy laboratory (nrel), [Online] (2021).
[26] GSMA, South korea: Jeju island smart grid test-bed developing next gen-

eration utility networks., [Online] (2021).

[27] M. Shahidehpour, M. Khodayar, Cutting campus energy costs with hier-
archical control: The economical and reliable operation of a microgrid,
IEEE Electriﬁcation Magazine 1 (2013) 40–56.

[28] C. Molitor, A. Benigni, A. Helmedag, K. Chen, D. Cal`ı, P. Jahangiri,
D. M¨uller, A. Monti, Multiphysics test bed for renewable energy systems
in smart homes, IEEE Trans. Ind. Electron. 60 (3) (2013) 1235–1248.
doi:10.1109/TIE.2012.2190254.
URL https://doi.org/10.1109/TIE.2012.2190254

[29] M. J. Stanovich, I. Leonard, K. Sanjeev, M. Steurer, T. P. Roth, S. Jackson,
M. Bruce, Development of a smart-grid cyber-physical systems testbed,
in: 2013 IEEE PES Innovative Smart Grid Technologies Conference
(ISGT), 2013, pp. 1–6. doi:10.1109/ISGT.2013.6497874.

[30] V. P. Tran, S. Kamalasadan, J. Enslin, Real-time modeling and model
validation of synchronous generator using synchrophasor measurements,
in: 2013 North American Power Symposium (NAPS), 2013, pp. 1–5.
doi:10.1109/NAPS.2013.6666965.

[31] D. M. E. Ingram, D. A. Campbell, P. Schaub, G. Ledwich, Test and eval-
uation system for multi-protocol sampled value protection schemes, in:
2011 IEEE Trondheim PowerTech, 2011, pp. 1–7. doi:10.1109/PTC.
2011.6019243.

[32] T. Becejac, C. Eppinger, A. Ashok, U. Agrawal, J. O’Brien, PRIME:
a real-time cyber-physical systems testbed:
from wide-area monitor-
ing, protection, and control prototyping to operator training and be-
yond, IET Cyper-Phys. Syst.: Theory & Appl. 5 (2) (2020) 186–195.
doi:10.1049/iet-cps.2019.0049.
URL https://doi.org/10.1049/iet-cps.2019.0049

[33] J. Mirkovic, T. V. Benzel, T. Faber, R. Braden, J. T. Wroclawski,
S. Schwab, The deter project: Advancing the science of cyber security
experimentation and test, [Online] (2013).

[34] INL, National scada test bed substation automation evaluation report,

[Online] (2009).

[35] J. Hong, S. Wu, A. Stefanov, A. Fshosha, C. Liu, P. Gladyshev, M. Govin-
darasu, An intrusion and defense testbed in a cyber-power system envi-
ronment, in: 2011 IEEE Power and Energy Society General Meeting,
2011, pp. 1–5. doi:10.1109/PES.2011.6039375.

[36] M. Mallouhi, Y. Al-Nashif, D. Cox, T. Chadaga, S. Hariri, A testbed for
analyzing security of scada control systems (tasscs), in: ISGT 2011, 2011,
pp. 1–7. doi:10.1109/ISGT.2011.5759169.

[37] Y. Yang, H. T. Jiang, K. McLaughlin, L. Gao, Y. B. Yuan, W. Huang,
S. Sezer, Cybersecurity test-bed for iec 61850 based smart substations,
in: 2015 IEEE Power Energy Society General Meeting, 2015, pp. 1–5.
doi:10.1109/PESGM.2015.7286357.

[38] B. Chen, K. L. Butler-Purry, A. Goulart, D. Kundur, Implementing a real-
time cyber-physical system test bed in rtds and opnet, in: 2014 North
American Power Symposium (NAPS), 2014, pp. 1–6. doi:10.1109/
NAPS.2014.6965381.

[39] A. Dayal, Yi Deng, A. Tbaileh, S. Shukla, Vscada: A reconﬁgurable vir-
tual scada test-bed for simulating power utility control center operations,
in: 2015 IEEE Power Energy Society General Meeting, 2015, pp. 1–5.
doi:10.1109/PESGM.2015.7285822.

[40] C. Queiroz, A. Mahmood, Z. Tari, Scadasim—a framework for building
scada simulations, IEEE Transactions on Smart Grid 2 (4) (2011) 589–
597. doi:10.1109/TSG.2011.2162432.

xi

[41] G. Koutsandria, R. Gentz, M. Jamei, A. Scaglione, S. Peisert, C. McPar-
land, A real-time testbed environment for cyber-physical security on the
power grid, in: I. Ray, R. K. Thomas, A. A. C´ardenas (Eds.), Proceed-
ings of the First ACM Workshop on Cyber-Physical Systems-Security
and/or PrivaCy, CPS-SPC 2015, Denver, Colorado, USA, October 16,
2015, ACM, 2015, pp. 67–78. doi:10.1145/2808705.2808707.
URL https://doi.org/10.1145/2808705.2808707

xii

