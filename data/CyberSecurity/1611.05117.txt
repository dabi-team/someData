6
1
0
2

v
o
N
6
1

]
P
A

.
t
a
t
s
[

1
v
7
1
1
5
0
.
1
1
6
1
:
v
i
X
r
a

IEEE TRANSACTIONS ON COMMUNICATIONS

1

Estimation Theory Based Robust Phase Offset

Estimation in the Presence of Delay Attacks

Anantha K. Karthik, Student Member, IEEE, and Rick S. Blum, Fellow, IEEE

Abstract

This paper addresses the problem of robust clock phase offset estimation for the IEEE 1588 precision

time protocol (PTP) in the presence of delay attacks. Delay attacks are one of the most effective cyber

attacks in PTP, as they cannot be mitigated using typical security measures. In this paper, we consider

the case where the slave node can exchange synchronization messages with multiple master nodes

synchronized to the same clock. We ﬁrst provide lower bounds on the best achievable performance for

any phase offset estimation scheme in the presence of delay attacks. We then present a novel phase

offset estimation scheme that employs the Expectation-Maximization algorithm for detecting which of

the master-slave communication links have been subject to delay attacks. After discarding information

from the links identiﬁed as attacked, which we show to be optimal, the optimal vector location parameter

estimator is employed to estimate the phase offset of the slave node. Simulation results are presented to

show that the proposed phase offset estimation scheme exhibits performance close to the lower bounds

in a wide variety of scenarios.

This work was supported in part by the U.S. Army Research Laboratory and the U. S. Army Research ofﬁce under grant

number W911NF-14-1-0245 and by Pennsylvania Infrastructure Technology Alliance (PITA), a partnership of Carnegie Mellon

University, Lehigh University, Bethlehem, PA, USA, and the Commonwealth of Pennsylvania, Department of Economic and

Community Development (DCED).

A. K. Karthik and R. S. Blum are with the Department of Electrical and Computer Engineering, Lehigh University, Bethlehem,

PA 18015 USA (e-mail: akk314lehigh.edu; rblum@lehigh.edu).

August 8, 2018

DRAFT

 
 
 
 
 
 
IEEE TRANSACTIONS ON COMMUNICATIONS

2

Index Terms

Delay attacks, precision time protocol, phase offset estimation, time synchronization, multiple

masters.

I. INTRODUCTION

The ability to precisely synchronize clocks among distributed components is critical in many

vital ﬁelds such as electrical power systems, industrial automation, and telecommunications.

The IEEE 1588 “Precision Time Protocol” (PTP) [1] is a widely used clock synchronization

protocol for networked measurement and control systems. Although existing protocols such as

the Network Time Protocol (NTP) [2] and the Global Positioning System (GPS) are available

for synchronizing clocks in some cases, PTP offers an inexpensive alternative achieving sub-

microsecond precision in meaningful scenarios. NTP restricts the underlying network to be

IP-based, while GPS requires line-of-sight. PTP does not have these restrictions and is often far

more cost effective in many applications. In fact, packet-based synchronization techniques based

on PTP are a frequently employed alternative for achieving synchronization in many applications.

For example, PTP is extremely popular in powerline networks [3], and in backhaul networks

employed for connecting cell towers in 4G Long Term Evolution (LTE) mobile networks [4].

In PTP, as with any two-way message exchange schemes, the slave node exchanges a series

of synchronization packets with its master node so the packet timestamps can be employed to

estimate the phase offset relative to the master node. The synchronization packets can encounter

several intermediate switches and routers along the network path between the master and the slave

node. The main factors contributing to the overall end-to-end delay for a synchronization packet

are the constant propagation delay over the entire path, the processing delays at the intermediate

nodes, and the random queuing delays at each such node. The problem of estimating the phase

offset of the slave node in the presence of random queuing delays is referred to as the phase

offset estimation (POE) problem [5].

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

3

Due to their widespread use, synchronization protocols such as PTP could become the target

for attackers trying to disrupt a network. One of the most effective cyber attacks threatening

PTP is the delay attack [6]. In a delay attack, a malicious intermediate node deliberately delays

the transmission of synchronization messages in order to alter the estimated phase offset at the

slave node. In this paper, we consider developing robust POE schemes to combat delay attacks.

Garderer et. al [7] – [9] studied various security aspects of clock synchronization in PTP.

They proposed an idea of using a group of masters rather than a single master for synchronizing

the slave node. The group of masters coordinate in a ﬁrst stage of their approach. Afterwards,

a speaker node representing the group exchanges timing messages with the slave node. The

proposed POE scheme works in the presence of a master failure, or a malicious master, however

it requires prior information regarding the number of master nodes that have been attacked or

failed. This information might not be available in many scenarios.

Sun et. al [10] proposed a robust POE scheme that uses the median of the observed timing

offsets from different master nodes to estimate the phase offset. The proposed POE scheme

is robust to attacks, however there is a loss in performance due to the signiﬁcant amount of

information being discarded. Song et. al [11] proposed a robust POE scheme that employs

the Grubb outliers test to identify the observations that have been attacked. After discarding the

observations identiﬁed as attacked, the phase offset is estimated from the remaining observations

using the sample mean estimator.

Mizrahi [12] – [13] proposed a POE scheme that uses multiple master-slave communication

links to improve the accuracy of the phase offset estimate. They also discussed using multiple

master-slave communication links to help protect against delay attacks. In the proposed POE

scheme, the slave node initially estimates the phase offset corresponding to each master-slave

communication link. A master-slave communication link is identiﬁed as attacked, if the difference

between its phase offset estimate and the average of the remaining phase offset estimates is

greater than a certain threshold. The information from links identiﬁed as attacked are discarded

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

4

and the phase offset is estimated using information from the unattacked links. In the above POE

schemes [7] – [13], the information from multiple unattacked sources are fused using the sample

mean estimator. Though asymptotically consistent, the sample mean estimator might not be the

optimal approach for fusing information in many scenarios with a ﬁnite number of observations.

Building on the work of [12] – [13], in the presented work, we consider the case where the

slave node communicates with multiple master nodes whose clocks are already synchronized. We

assume that fewer than half of the master-slave links are attacked1. Under the stated assumptions,

we ﬁrst derive a lower bound on the best achievable performance for any POE scheme in the

presence of delay attacks by extending the work done in [5]. We then present a novel robust

POE scheme to combat delay attacks in LTE backhaul networks.

Under these assumptions, we present a POE scheme that does not require prior information

regarding the number of master-slave communication links that are attacked and employs the

optimal approach for fusing information from unattacked multiple master nodes if the probability

density functions (pdf) are estimated correctly. In backhaul networks, the background trafﬁc

from other users in the network often results in random queuing delays for the synchronization

messages. Based on previous simulation studies [14] – [16], we model the density function of

the random queuing delays as a mixture of Gamma random variables, a very general model.

Using the Expectation-Maximization (EM) algorithm, our POE approach will ﬁrst determine the

master-slave communication links which are compromised due to delay attacks. At the same time,

the EM algorithm will estimate the mixture coefﬁcients describing the pdf of the random queuing

delays [17]. Then motivated by [18], we only use the information from links determined to be

unattacked to estimate the phase offset. We employ the optimal estimator for fusing information

from the unattacked links. We carry out extensive simulations to examine the performance of

1Either this or some information must be provided to allow the estimator to distinugush between sets of unattacked and sets

of similarly attacked links.

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

5

the proposed POE scheme under various scenarios in the presence of delay attacks. Simulation

results show that the proposed POE scheme performs better than the conventional POE schemes

available in the literature and exhibits a mean square estimation error close to the lower bounds

in a wide variety of scenarios.

The rest of the paper is organized as follows. In Section II, we brieﬂy discuss PTP and the

considered problem statement. In Section III, we describe the EM-algorithm used for identifying

the attacked links and the mixture components, along with the optimal approach for fusing

information from multiple master nodes which are unattacked and the pdfs are all estimated

correctly. In Section IV, we give some numerical results highlighting the performance of the

proposed approach. Finally in Section V, we present our conclusions.

II. PROBLEM FORMULATION

In this section, we brieﬂy describe the two-way message exchange mechanism employed in

PTP, along with the considered problem statement. We assume the slave node can exchange

synchronization messages with N master nodes synchronized to the same clock. Assuming a

total of P rounds of two-way message exchanges between the slave and each master node;

the following sequence of messages are exchanged between the ith master node and the slave

during the jth round of message exchange. The master node initiates the exchange by sending

a sync packet to the slave at time t1ij. The value of t1ij is later communicated to the slave via

a follow up message. The slave node records the time of reception of the sync message as t2ij

and sends a delay req message to the master at time t3ij. The master records the time of arrival

of the delay req packet at time t4ij and this value is later communicated to the slave using a

delay resp packet. This procedure can be mathematically modeled as [5], [19]– [20]

uij = di + δ + w1ij,

vij = di − δ + w2ij,

(1)

(2)

DRAFT

August 8, 2018

IEEE TRANSACTIONS ON COMMUNICATIONS

6

where uij = (t2ij − t1ij) and vij = (t4ij − t3ij) in (1) and (2). δ denotes the unknown phase

offset between the master and slave node clocks, di is the unknown ﬁxed delay at the ith master-

slave communication link, {w1ij, w2ij} represent the random queuing delays in the forward- and

reverse-path respectively. The random queuing delays {wkij}P

j=1 have a pdf given by fki(w) for

i = 1, 2, · · · , N and k = 1, 2. To launch a delay attack at the ith master-slave link, a malicious

node adds a ﬁnite amount of constant delay to either the forward or reverse path, so we have

uij = (di + δ + w1ij + τi) ,

vij = (di − δ + w2ij) ,

(3)

(4)

where the variable τi represents the magnitude of the delay attack2. When the ith master-slave

link is not attacked, the forward-path delay uij has a pdf given by fuij (uij|di, δ) = f1i(uij −di−δ)

which depends on the unknown parameters di and δ. When the ith master-slave link is attacked,

uij has a pdf given by fuij (uij|di, δ, τi) = f1i(uij − di − δ − τi). Similarly, the reverse-path delay

vij has a pdf given by fvij (vij|di, δ) = f2i(vij − di + δ) depending on the unknown parameters

di and δ. In this paper, we model the random queuing delays in the backhaul networks as a

mixture of Gamma random variables to allow a very general representation which ﬁts data from

realistic simulations well [14] – [16]. This approximation is useful in scenarios where we do

not have complete knowledge of the queuing delay distributions and we want to estimate with

a model with only a few parameters. So we have

f1i(w) =

f2i(w) =

Mi(cid:88)

k=1

Li(cid:88)

l=1

αikha1ik,b1ik(w),

βilha2il,b2il(w)

(5)

(6)

for i = 1, 2, · · · , N . In (5) and (6), Mi and Li represent the number of mixture components in

the forward- and reverse path of the ith master-slave link respectively. The variables {αik}Mi
k=1

2If the master-slave link is not attacked, then τi = 0.

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

7

l=1 represent the unknown mixing coefﬁcients at the forward- and reverse path of

and {βil}Li
the ith master-slave link respectively with (cid:80)Mi

k=1 αik = 1 and (cid:80)Li

l=1 βil = 1 and the variables

{a1ik, b1ik}Mi

k=1, {a2il, b2il}Li

l=1 represent the corresponding unknown parameters of the Gamma

distributions. Let Θ denote the vector containing the desired parameter to be estimated δ, the set

of unknown ﬁxed delays {di}N

i=1, the set of unknown delay attack magnitudes for the master-slave

links {τi}N

i=1, the set of unknown mixing coefﬁcients {αi1, · · · , αiMi}N

i=1, {βi1, · · · , βiLi}N

i=1,

the set of unknown Gamma distributions parameters {a1i1, · · · , a1iMi}N

i=1, {b1i1, · · · , b1iMi}N

i=1,

{a2i1, · · · , a2iLi}N

i=1, {b2i1, · · · , b2iLi}N

i=1, and the set of unknown binary state variables {ηi}

deﬁned shortly. We have

where

Θ = [ΨT, αT, βT, ηT]T,

Ψ = (cid:2)δ, d1, · · · , dN , τ1, · · · , τN , aT

1, bT

1, aT

2, bT
2

(cid:3)T ,

a1 = [a111, · · · , a11M1, a121, · · · , a12M2, · · · , a1N MN ]T ,

b1 = [b111, · · · , b11M1, b121, · · · , b12M2, · · · , b1N MN ]T ,

a2 = [a211, · · · , a21L1, a221, · · · , a22L2, · · · , a2N LN ]T ,

b2 = [b211, · · · , b21L1, b221, · · · , b22L2, · · · , b2N LN ]T ,

α = [α11, · · · , α1M1, α21, · · · , α2M2, · · · , αN MN ]T ,

β = [β11, · · · , β1L1, β21, · · · , β2L2, · · · , βN LN ]T ,

η = [η1, η2, · · · , ηN ]T.

(7)

(8)

(9)

(10)

(11)

(12)

(13)

(14)

(15)

The ith element of η is 1 if the ith master-slave link is attacked, otherwise it has a value 0

indicating that the link is not attacked. Let u and v denote the vectors of all the forward and

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

reverse observations at the slave node. We can represent them by

and

u = [u11, · · · , u1P , u21, · · · , uN P ]T,

v = [v11, · · · , v1P , v21, · · · , vN P ]T,

y = [uT, vT]T.

8

(16)

(17)

(18)

In our work, we seek an estimator ˆδ(y) of the phase offset δ based on the observations y which

are generally effected by all the deterministic parameters in Θ. We characterize the performance

of ˆδ(y) via the conditional mean squared error (MSE) metric deﬁned as

(cid:16)ˆδ(y), δ

(cid:17)

R

= E

where E {.} denotes the expectation operator.

(cid:26)(cid:104)

δ − ˆδ(y)

(cid:105)2(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:27)

Θ

,

(19)

III. ATTACK IDENTIFICATION AND DATA FUSION

In this section, we develop our robust approach. First, we present the optimum scheme for

fusing information exchanged with the various master nodes when we know which master-slave

communication links are attacked. The approach employs our previous results on unattacked links

and on when to use data from attacked links in general estimation problems. To pull together these

ideas, a modiﬁed EM algorithm for identifying the links which have been attacked incorporates

our developed theory on fusing the attacked and unattacked data. We ﬁrst present an important

theorem, which we use for the remainder of this paper.

Theorem 1. There is no gain in estimating δ using the information from the attacked master-slave

communication links (For proof: See Theorem 1 of [18]).

As a consequence of Theorem 1, we see that discarding the observations from the attacked

links does not affect the performance of an estimator of the phase offset δ.

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

9

A. Genie approach

Let’s assume that we have prior knowledge of the master-slave links which have been attacked,

as well as complete knowledge of the forward- and reverse queuing delay pdfs f1i(w) and f2i(w)

for all N master-slave links i = 1, 2, · · · , N . Following Theorem 1, we discard the observations

from the attacked links. We employ the unattacked minimax optimum estimator presented in

[5] to present an approach which can provide a very useful but generally unachievable genie

lower bound on the performance of estimating δ in our general problem. We ﬁrst present some

deﬁnitions and results from [5].

Deﬁnition 1. (Vector location Parameter problem): Suppose we want to estimate a linear

combination cT θ of the unknown parameters contained in the components of the vector θ ∈ RM

(where c ∈ RM is a constant vector), based on observations x ∈ RN . If the observations have

a pdf of the form

f (x|θ) = f0(x − Gθ)

(20)

for some N × M matrix G, and function f0(.), such a problem is referred to as a vector location

parameter problem [5].

Deﬁnition 2. We say that an estimator g(x) of cT θ is shift invariant if for the same matrix G

used in (20),

for all h ∈ RM [5].

g(x + Gh) = g(x) + cT h

(21)

The conditional MSE of an estimator g(x) of cT θ can be written as

R(g(x), cT θ) =

(cid:90)

RN

[g(x) − cT θ]2f (x|θ)dx

(22)

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

and the maximum MSE is deﬁned as

M(g(x)) = sup
θ∈RM

R(g(x), cT θ).

10

(23)

While the conditional and maximum MSE are in general different for an estimator, it was shown

in [5] that for a shift invariant estimator they are equal. Guruswamy et. al [5] derived a useful

optimum estimator for the vector location parameter estimation problem without any attacks.

The optimum estimator is presented below for convenience.

Theorem 2. For the vector location parameter problem, the estimator

g∗(x) =

(cid:82)

RM [cT θ]f (x|θ)dθ
(cid:82)
RM f (x|θ)dθ

,

(24)

satisﬁes the following properties:

• g∗(x) is shift invariant. In fact, all the estimators used in practice for POE are shift invariant.

• g∗(x) minimizes the maximum MSE for any estimate cT θ.

• Among all estimators of cT θ that are shift invariant, g∗(x) achieves the minimum conditional

MSE.

• g∗(x) is unbiased, i.e., E (cid:8)(cid:2)g∗(x) − cT θ(cid:3) |θ(cid:9) = 0.

For proof, see [5].

The estimator g∗(x) presented in (24) of cT θ is optimum in terms of minimizing the conditional

mean-squared estimation error over all values of the unknown parameters among shift invariant

estimators. In this paper, we use the optimum vector location parameter estimator presented in

Theorem 2 along with the result from Theorem 1 to get a lower bound on the MSE for a POE

scheme in the presence of delay attacks.

If we have prior information regarding the links which have been attacked, Theorem 1 tells

us to only retain information from the unattacked links. Without loss of generality, let us assume

that the K master-slave links indexed by {nk}K

k=1 are unattacked, the observed data from these

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

links can be represented as

uK = [un11, · · · , un1P , un21, · · · , unK P ]T,

vK = [vn11, · · · , vn1P , vn21, · · · , vnK P ]T,

yK = [uT

K, vT

K]T.

From (3) and (4), we can represent yK as

yK = Gθ + wK,

11

(25)

(26)

(27)

(28)

where θ = [δ, dn1, · · · , dnK ]T represents the vector of unknown parameters and wK is a random

KP × 1 vector given by wK = [w1n11, w1n12, · · · , w1n1P , w1n21, · · · , w1nK P , w2n11, w2n12, · · · ,

w2n1P , w2n21, · · · , w2nK P ]T. The matrix G is given by



G =




1KP×1 AKP×K

−1KP×1 AKP×K






(29)

where 1KP×1 represents a vector of size KP × 1 with all the elements equal to 1, AKP×K =

1P×1 ⊗ IK×K, with ⊗ representing the Kronecker delta product, and IK×K represents an identity

matrix of size K. We observe that (28) has a pdf which can be represented as

fyK (yK|θ) = fw(yK − Gθ).

(30)

Assuming the components of the vector w in (28) are independent and identically distributed,

fw(w) is given by

fw(w) =

K
(cid:89)

P
(cid:89)

i=1

j=1

f1ni(w1nij)f2ni(w2nij).

(31)

So our problem of fusing known-attack-status information from multiple master nodes falls

under the class of vector location parameter estimation problems. Therefore, we use the optimal

estimator given in Theorem 2 to obtain the phase offset estimate.

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

12

In our problem, we have θ = [δ, dn1, · · · , dnK ]T, so we employ c = [1, 0, · · · 0]T. By applying

Theorem 2, we can then obtain the optimum estimator of δ from the observations yK as
(cid:82)
δ δΩ(δ, uK, vK)dδ
(cid:82)
δ Ω(δ, uK, vK)dδ

ˆδ(yK) =

,

(32)

where Ω(δ, uK, vK) is deﬁned as follows

Ω(δ, uK, vK) =

K
(cid:89)

(cid:90)

P
(cid:89)

i=1

dni

j=1

[f1ni(unij − δ − dni)f2ni(vnij + δ − dni)] d(dni).

We refer to the estimator presented in (32) as the genie-optimum estimator. The genie optimum

estimator gives us a lower bound on the MSE for a POE scheme in the presence of delay attacks.

We use this bound to evaluate the performance of our proposed POE scheme.

B. EM-algorithm

In practice, we do not have prior information regarding the links which have been attacked.

It is necessary to identify these links before applying the optimal estimator presented in (32).

In our work, we use the EM algorithm combined with the random relaxation proposed in [17]

for identifying these links. For ease of notation, we deﬁne ha,b(w|θ1, θ2) = ha,b(w − θ1 − θ2),

where θ1 and θ2 represent unknown deterministic parameters. The log-likelihood function of Θ

evaluated using the observed data y is given by

L(Θ|y) =

N
(cid:88)

P
(cid:88)

i=1

j=1

ηi ln

= +(1 − ηi) ln

(cid:34) Mi(cid:88)

k=1

(cid:34) Mi(cid:88)

k=1

αikha1ik,b1ik(uij|δ, di, τi)

(cid:35)
βilha2il,b2il(vij| − δ, di)

Li(cid:88)

l=1

αikha1ik,b1ik(uij|δ, di)

(cid:35)
βilha2il,b2il(vij| − δ, di)

.

(33)

Li(cid:88)

l=1

Recall ηi represents an unknown deterministic binary variable. Based on the power of a post

processing (to be discussed later) which is able to undo this modiﬁcation, we introduce a

relaxation that essentially replaces each ηi with a real valued variable πi = Pr(ηi = 1) ∈ [0, 1]

which represents the probability of the ith link being attacked. Let Θπ = [ΨT, αT, βT, πT]T,

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

13

where π = [π1, π2, · · · , πN ]T. The log-likelihood function of Θπ given the observed vector y is

given by

L(Θπ|y) =

N
(cid:88)

P
(cid:88)

(cid:34)

ln

πi

Mi(cid:88)

Li(cid:88)

i=1

j=1

k=1

l=1

αikha1ik,b1ik(uij|δ, di, τi)βilha2il,b2il(vij| − δ, di)

= + (1 − πi)

Mi(cid:88)

Li(cid:88)

k=1

l=1

(cid:35)
αikha1ik,b1ik(uij|δ, di)βilha2il,b2il(vij| − δ, di)

.

A maximum-likelihood estimate of Θπ can then be obtained using

ˆΘπ = arg max

L(Θπ|y).

(34)

(35)

Θπ
We use the EM algorithm to evaluate (35) to get the maximum likelihood estimate ˆΘπ. We

introduce the latent vector z = [z11, z12, · · · , z1P , z21, · · · , zN P ]T, where zij = 1 indicates that the

jth two-way timing exchange at the ith master-slave link was attacked, while zij = 0 indicates that

it was not attacked, and the latent vector r = [r11, r12, · · · , r1P , r21, · · · , rN P ]T where rij = k in-

dicates that uij is from the kth mixture component in the ith forward queuing delay pdf, and rij ∈

{1, 2, · · · , Mi}. Similarly we introduce the latent vector s = [s11, s12, · · · , s1P , s21, · · · , sN P ]T

where sij = k indicates that vij is from the kth mixture component in the ith reverse queuing delay

pdf, and sij ∈ {1, 2, · · · , Li}. The EM algorithm is an iterative approach which alternates between

performing an expectation (E) step and a maximization (M) step to calculate the maximum-

likelihood estimate of a parameter. The steps of the algorithm are described below:

1) Q-step: In this step, we evaluate the expected log-likelihood function Q(Θπ|Θg

π) averaged

over the unknown data {z, r, s}, and conditioned on the current estimate of Θπ represented

by Θg

π. We have

Q(Θπ|Θg

π) = E (cid:8)L (cid:0)Θπ|z, r, s, y)(cid:12)

(cid:12)y, Θ(g)(cid:1)(cid:9) ,

(36)

DRAFT

August 8, 2018

IEEE TRANSACTIONS ON COMMUNICATIONS

14

where L(Ωπ|z, r, s, y) is deﬁned as

L(Θπ|z, r, s, y) =

N
(cid:88)

P
(cid:88)

i=1

j=1

χ{zij =1} ln

(cid:104)
πiαrij βsij ha1rij b1rij

(uij|δ, di, τi)ha2sij b2sij

(cid:105)
(vij| − δ, di)

+χ{zij =0} ln

(cid:104)
(1 − πi)αrij βsij ha1rij b1rij

(uij|δ, di)ha2sij b2sij

(cid:105)
(vij| − δ, di)

,

where y is deﬁned in (18), and χzij represents the indicator function deﬁned as



if zij = 1

1

χ{zij =1} =



0 otherwise.

(37)

(38)

The expected log-likelihood function Q(Θπ|Θg

π) can then be expressed as

Q(Θπ|Θg

π) =

N
(cid:88)

P
(cid:88)

Mi(cid:88)

Li(cid:88)

a(1)
ijkl ln [πiαikβilha1ik,b1ik(uij|δ, di, τi)ha2il,b2il(vij| − δ, di)]

j=1

k=1

l=1

i=1
+a(0)

ijkl ln [(1 − πi)αikβilha1ik,b1ik(uij|δ, di)ha2il,b2il(vij| − δ, di)] ,

(39)

where a(1)

ijkl and a(0)

ijkl are deﬁned as

a(1)
ijkl = Prob{χ{zij =1} = 1, αik = rij, βil = sij|Θg

π},

1ik

=

ki=1

ilhag

i , τ g

i )hag

i αg
πg
ikβg
(cid:80)Mi

(uij|δg, dg
βg
hag
ili

1ik,bg
(cid:80)Li
li=1 αg
a(0)
ijkl = Prob{χ{zij =1} = 0, αik = rij, βil = sij|Θg
ilhag
1ik,bg
li=1 αg

(uij|δg, dg
βg
hag
ili

(1 − πg
(cid:80)Mi

ikβg
(cid:80)Li

i )αg

i )hag

2il,bg

ki=1

2il,bg
(vij| − δg, dg

(vij| − δg, dg

=

,bg

,bg

2ili

2ili

iki

iki

1ik

2il

2il

2ili

2ili

π},
(vij| − δg, dg
i )
i )Dki

,

(vij| − δg, dg
i )

,

i )Dki

Dki =

(cid:104)

πg
i hag

1iki

,bg

1iki

(uij|δg, dg

i , τ g

i ) + (1 − πg

i )hag

2iki

(cid:105)
(uij|δg, dg
i )

.

,bg

2iki

(40)

2) M-step: After we calculate the expected log-likelihood with respect to the unknown data,

we update the value of the vector parameter ˆΘπ by maximizing the expected log-likelihood

function Q(Θπ|Θg

π). We have

ˆΘπ =

(cid:104) ˆΨT, ˆαT, ˆβT, ˆπT(cid:105)

= arg max

Θπ

Q(Θπ|Θg

π).

August 8, 2018

(41)

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

We ﬁrst solve the maximization problem to update ˆπi, we have

∂Q(Θπ|Θg
π)
dπi

a(1)
ijkl
πi

−

a(0)
ijkl
1 − πi

= 0,

= 0.

P
(cid:88)

Mi(cid:88)

Li(cid:88)

j=1

k=1

l=1

Solving the above equation, we get the updated estimate of πi as

ˆπi =

1
P

P
(cid:88)

Mi(cid:88)

Li(cid:88)

j=1

k=1

l=1

a(1)
ijkl.

15

(42)

(43)

(44)

To estimate the mixing coefﬁcient ˆαik, we introduce the Lagrange multiplier with the
constraint (cid:80)Mi

ki=1 αiki = 1, and solve the equation
(cid:32) Mi(cid:88)

(cid:34)
Q(Θπ|Θg

π) − λ

∂
∂αik

ki=1

(cid:33)(cid:35)

αiki − 1

= 0.

We then have

P
(cid:88)

Li(cid:88)

j=1

l=1

1
αik

(cid:16)
ijkl + a(0)
a(1)

ijkl

(cid:17)

− λ = 0,

P
(cid:88)

Li(cid:88)

(cid:16)

j=1

l=1

ijkl + a(0)
a(1)

ijkl

(cid:17)

= λαik.

Summing over k on both sides, we can ﬁnd the value of λ. We have

λ

Mi(cid:88)

k=1

αik =

λ =

Mi(cid:88)

P
(cid:88)

Li(cid:88)

(cid:16)

k=1

j=1

l=1

Mi(cid:88)

P
(cid:88)

Li(cid:88)

(cid:16)

ijkl + a(0)
a(1)

ijkl

ijkl + a(0)
a(1)

ijkl

(cid:17)

(cid:17)

j=1

l=1

k=1
= P.

So, the updated estimate is given by

ˆαik =

1
P

P
(cid:88)

Li(cid:88)

(cid:16)

j=1

l=1

ijkl + a(0)
a(1)

ijkl

(cid:17)

.

Following a similar process for βil, we can get the updated estimate of ˆβil as

ˆβil =

1
P

P
(cid:88)

Mi(cid:88)

(cid:16)

j=1

k=1

ijkl + a(0)
a(1)

ijkl

(cid:17)

.

August 8, 2018

(45)

(46)

(47)

(48)

(49)

(50)

(51)

(52)

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

16

Calculating the just described updates for all the N master-slave links, we obtain the

updated estimate of ˆα and ˆβ. An updated estimate of ˆΨ can be obtained by solving the

equation

∇ΨQ(Θπ|Θg

π) = 0.

(53)

In order to solve (53), we use the Newton-Raphson method to get an updated estimate of

the parameter ˆΨ. We choose the initial point as Ψ(0) = ˆΨg. We then update the value at

the (t + 1)th stage using

ˆΨ(t+1) = ˆΨ(t) − κt

(cid:2)∇2

ΨQ(Θ(t)

π |Θg

π)(cid:3)−1

∇ΨQ(Θ(t)

π |Θg

π),

(54)

where Θ(t)

π = [ ˆΨT, ˆαT, ˆβT, ˆπT]T and κt ∈ (0, 1) is the tth step-size computed using a

backtracking line search [21]. Repeating the calculation in (54) until ˆΨ(t) converges, the

limit is a solution for (53).

The convergence analysis for the EM algorithm appears in [22]. By iteratively alternating between

the E-step and M-step, we obtain the maximum-likelihood estimate of Θπ. We then classify the

links based on the converged value of ˆπ. Speciﬁcally, we declare the ith master-slave link as

attacked if πi > (1 − πi), else we declare the link as unattacked. Following Theorem 1, we

discard the observations from the attacked links. We then use the estimated values of ˆa1, ˆb1, ˆa2,

ˆb2, ˆα and ˆβ in the optimal estimator presented in (32) to estimate the phase offset δ. As our

problem is not necessarily convex, proper initialization of the various parameters is crucial for

the EM algorithm to ensure convergence to the global minimum instead of a local minimums.

We present a simple ad-hoc approach in Section III-C for initializing the parameters for the EM

algorithm. We observe from simulations that the proposed ad-hoc scheme seems to avoid local

minimums. The complete algorithm is summarized in Section III-D.

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

17

C. Initialization for the EM-algorithm

We now present a simple ad-hoc approach to ﬁx the initial values of Θπ denoted by Θ(g)
π

for the EM algorithm described in Section III. We assume prior knowledge regarding the

mean and covariance of the forward- and reverse queuing delays for each of the master-slave

communication links. Consider the ith master-slave communication link:

(cid:110)

α(g)
ik

(cid:111)Mi

k=1

as 1/Mi and the

1) Initialization of α(g) and β(g): We set the initial values of

initial values of

(cid:110)

β(g)
il

(cid:111)Li

l=1

as 1/Li. This procedure is repeated for all the master-slave

communication links in both the forward- and reverse path to get α(g) and β(g).

2) Initialization of a(g)

1 , b(g)

1 , a(g)

2 , b(g)

2 : The queuing delay pdf in the forward path is given

by (5). Since we have prior information regarding the mean (µ1i) and variance (σ2

1i) of the

queuing delay distributions, we have
Mi(cid:88)

a1ikb1ik
Mi

,

µ1i =

σ2
1i =

k=1

Mi(cid:88)

k=1

(a1ikb2

1ikb2

1ik)

1ik + a2
Mi

− a2

1ikb2

1ik.

(55)

(56)

Solving the above equations, we can get our estimate of {a(g)

a similar procedure for the reverse path, we obtain {a(g)

1ik}Li
k=1 and {b(g)

k=1 and {b(g)
2il }Li

2ik}Mi

1il }Li

l=1. Following

l=1. This procedure

is repeated for all the master-slave communication links in both the forward- and reverse

path to get a(g)

1 , b(g)

1 , a(g)

2 , and b(g)
2 .

3) Initialization of π: We use the POE scheme proposed in [20] in our ad-hoc scheme to

initialize π(g). The POE scheme presented in [20], referred to as an L-estimator is based

on a linear combination of the order statistics. These POE schemes offer near optimal

performance and only require information regarding the mean and covariance matrix of

the queuing delays3. The steps to ﬁx π(g) are as follows:

3A brief discussion of the POE scheme proposed in [20] is presented in Appendix A.

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

18

• We determine the relative phase offset ˆδi for all the N master-slave communication

links using the L-estimators.

• Since less than half of the master-slave links are attacked, the median of these N

phase offsets should correspond to a phase offset estimate which is unattacked. We

represent this value by ˆδmed.

• Representing the root mean sqaure error of the phase offset estimate determined by the

median as σmedP (See (73) in Appendix). If we observe that

(cid:12)
(cid:12)
(cid:12)

ˆδmed − ˆδi

(cid:12)
(cid:12)
(cid:12) ≥ 2σmedP,

we declare the link as attacked, else we declare the link as unattacked.

4) Initialization of δ: We ﬁx the value of δ(g) as ˆδmed.

5) Initialization of d, τ : If the ith master-slave link is identiﬁed as unattacked, we ﬁx the

initial values of di and τi as follows:

d(g)
i

=

1
2P

P
(cid:88)

j=1

(uij + vij) −

(µ1i + µ2i)
2

,

τ (g)
i

= 0.

If the ith master-slave link is identiﬁed as attacked, we have

d(g)
i

=

τ (g)
i

=

1
P

1
P

P
(cid:88)

j=1

P
(cid:88)

j=1

vij + δ(g) − µ2i,

uij − δ(g) − d(g)

i − µ1i.

(57)

(58)

(59)

(60)

This procedure is repeated for all the master-slave communication links to get d(g) and

τ (g).

D. Final Algorithm

The steps of the proposed POE scheme is presented in this section. We repeat the algorithm

until the difference between the complete data log likelihood at consecutive iterations becomes

less than some threshold.

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

19

1: Initialize the parameter vector Θπ as Θ(g)
π .

2: Initialize the present value of the log likelihood LLFpres using (34) and Θ(g)
π .

3: Initialize the previous value of the log likelihood LLFprev = −∞ and ﬁx a threshold value

(cid:15) to determine when to stop.

4: while |LLFpres − LLFprev| ≥ (cid:15) do

5:

6:

7:

8:

9:

10:

11:

12:

13:

14:

15:

16:

17:

18:

19:

20:

for i = 1 : N ; k = 1 : Mi; l = 1 : Li; j = 1 : P do

compute a(1)

ijkl and a(0)

ijkl using (40) based on current estimate Θ(g)
π .

end for

for i = 1 : N do

update the current estimate of ˆπi using (44).

end for

for i = 1 : N, k = 1 : Mi do

update the current estimate of ˆαik using (51).

end for

for i = 1 : N, l = 1 : Li do

update the current estimate of ˆβil using (52).

end for

Update the current estimate of ˆΨ by solving (53).

Update LLFprev ← LLFpres.

Update Θ(g)

π based on the updated values of ˆΨ, ˆα, ˆβ, ˆπ.

Update the log likelihood LLFpres using (34) and the updated Θ(g)
π .

21: end while

22: for i = 1 : N do

23:

24:

25:

if ˆπi ≥ (1 − ˆπi) then

Identify the ith master-slave communication link as attacked.

else

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

20

26:

27:

Identify the ith master-slave communication link as unattacked.

end if

28: end for

29: Discard the information from master-slave communication links identiﬁed as attacked.

30: Using the maximum likelihood estimates of ˆa1, ˆb1, ˆa2, ˆb2, ˆα and ˆβ, compute the estimate

of phase offset using (32).

In summary, we use the EM algorithm for identifying the master-slave communication links

which have been subject to delay attacks, and employ the optimal vector location parameter

estimator to estimate the phase offset of the slave node.

IV. SIMULATION RESULTS

In this section, we evaluate the performance of the proposed POE scheme under various net-

work scenarios. We compare the performance of the proposed POE scheme to other conventional

robust POE schemes available in the literature along with the lower bounds presented in Section

III.

A. Generating the random queuing delays

We follow the approach given in [5], [20] for generating the random queuing delays in the

backhaul networks. We assume a Gigabit ethernet network consisting of a cascade of 10 switches

between the master and slave node. Each switch is assumed to be a store-and-forward switch

that implements strict priority queuing. We mainly consider the background cross trafﬁc ﬂows.

In cross trafﬁc ﬂows, fresh background trafﬁc is injected at each switch along the master-

slave path, and this trafﬁc exits the master-slave path at the subsequent switch [see 3-switch

example in Fig. 1]. The arrival times and sizes of background trafﬁc packets injected at each

switch were assumed to be statistically independent of trafﬁc at other switches. In the context

of LTE backhaul networks, the trafﬁc generated by other users of the network can be typically

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

21

Traf. Model

Packet Sizes (in Bytes) % of total load

TM-1

TM-2

{64, 576, 1518}

{80%, 5%, 15%}

{64, 576, 1518}

{30%, 10%, 60%}

TABLE I: Composition of background packets in the trafﬁc models

modeled as cross trafﬁc ﬂows. With regard to the packet size distributions of background trafﬁc,

we use Trafﬁc Models 1 (TM1) and 2 (TM2) from the ITU-T recommendation G.8261 [23]

for cross trafﬁc ﬂows, as described in Table I. For the load factor, i.e., the percentage of the

link capacity consumed by background trafﬁc, we consider values between 20–80% of the link

capacity. We assume that the interarrival times between packets in all background trafﬁc ﬂows

follow exponential distributions, and set the rate parameter of each exponential distribution

to obtain the desired load factor [5]. Empirical pdfs of the queuing delays, shown in Fig. 2,

were obtained using a custom MATLAB-based network simulator. Our simulations assumed

that all switches were store-and-forward switches that implemented strict priority queuing. In

our simulations, we consider scenarios where the distribution of queuing delays in the forward

and reverse paths are symmetrical and equal for all the master-slave communication links, i.e.,

f1i(w) = f2i(w) = fw(w).

B. Approaches from the literature employed for comparison

We now describe the various approaches that we compare in our simulations:

1) Genie optimum approach: In this POE scheme, we have prior knowledge of the links which

have been attacked, and discard the information from these links. The phase offset ˆδ(y)

is then estimated using (32). We should mention here that this approach gives a bound on

the best achievable performance of a POE scheme.

2) EM minimax approach-I: In this POE scheme, we have prior knowledge of the density

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

22

functions of the queuing delays. We try to identify the links which have been attacked

using the EM algorithm, and fuse information from the unattacked links using (32).

3) EM minimax approach-II: In this POE scheme, we try to identify the links which have

been attacked as well as the mixture components of the queuing delays using the EM

algorithm, and fuse information from the unattacked links using (32).

4) Fault-tolerant algorithm approach: This POE scheme was proposed in [9]. In this scheme,

we have prior knowledge regarding the number of attackers (say M ). We ﬁrst calculate

the phase offset estimate for each of the individual master-slave links (using the sample

mean), and we discard the M lowest and M largest values of the phase offset, and form

the estimate of ˆδ(y) from the remaining links deemed to be non-faulty.

5) Median approach: This POE scheme was proposed in [10]. In this scheme, we ﬁrst estimate

the phase offset for each of the individual master-slave links (using the sample mean). We

then estimate ˆδ(y) as the median of estimated phase offsets from the N master-slave links.

C. Simulation results

We carried out simulations for various network scenarios under both TM-1 and TM-2 for

different loads and for various sample sizes. In our simulations, the delay attack magnitude for

each attacker is chosen uniformly from the interval [0.5, 2.0] (cid:83)[−2.0, −0.5] µs. The results are

presented in Figure 3–4. In the case of 20% load, under both TM-1 and TM-2, we approximate

the queuing delay distribution by an exponential random variable (Gamma distribution with shape

parameter as 1), while for the remaining cases, we approximate the queuing delay distribution

by a 2-component Gamma mixture. As we can see from the results, the proposed POE scheme

performs quite well under all scenarios and is relatively close to the genie optimum estimator

under both network models. We brieﬂy discuss the results:

1) In Figure 3, we study the case of N = 3 with one master-slave communication link being

attacked under TM-1 for different loads. The proposed POE schemes perform signiﬁcantly

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

23

better than the median and fault tolerant algorithm (FTA) approaches under various loads.

We also observe that there is no noticeable difference in performance between the median

and FTA approaches. This is mainly due to the fact that in both these approaches, the

smallest and largest phase offset estimates are discarded in this particular scenario.

2) In Figure 4, we study the case of N = 3 with one master-slave communication link being

attacked under TM-2 for different loads. In this scenario, we see a noticeable gain in

performance for the proposed POE scheme under low loads (20% and 40%), while at high

loads all the POE schemes exhibit an estimation error close to the lower bounds. This

could be due to the queuing distributions approximating a Gaussian distribution under

high loads in TM-2. In such a scenario, the sample mean becomes the optimum method

for fusing information from multiple master-slave communication links.

V. CONCLUSION

In this paper, we have provided a useful lower bound on the MSE for any phase offset

estimation scheme in the presence of delay attacks and we show approaches that provide

performance close to the bound. In particular, we presented a robust POE scheme that employs the

EM algorithm along with the optimal approach for fusing information from multiple unattacked

master nodes when all pdfs in the model are known. The proposed scheme does not require

complete information regarding the distributions of the queuing delays, performs better than

the conventional schemes available in the literature and exhibits a mean square estimation error

close to the lower bounds in a number of network scenarios. Furthermore, the two-way message

exchange is employed in a number of synchronization protocols including NTP [2], TinySeRSync

[10] and the Timing-sync Protocol for Sensor Networks (TPSN) [25]. The proposed POE scheme

can be easily modiﬁed for these protocols.

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

24

APPENDIX

BRIEF DISCUSSION REGARDING THE L-ESTIMATORS

The POE scheme presented in [20], referred to as an L-estimator is based on a linear

combination of the order statistics. The general form of these estimators for estimating the

phase offset in the ith master-slave communication link is given by

ˆδi = cT

1 ˜ui − cT

2 ˜vi + η,

where we have

ui = [ui1, ui2, · · · , uiP ]T

vi = [vi1, vi2, · · · , viP ]T

w1i = [w1i1, w1i2, · · · , w1iP ]T

w2i = [w2i1, w2i2, · · · , w2iP ]T

(61)

(62)

(63)

(64)

(65)

and ˜ui and ˜vi contains all the order statistics of ui and vi respectively, ordered from smallest

to largest and deﬁned as follows:

˜ui = [min{ui}, · · · , max{ui}]T .

c1, c2 are weight vectors and η is a scalar constant. Deﬁne

µki = E[ ˜wki];

Ski = cov[ ˜wki],

S12i = E [( ˜w1i − µ1i) ( ˜w2i − µ2i)]

for k = 1, 2. Let







c =




c1

c2


 ,

Si =




S1i −S12i

−ST
12i

S2i




 .

(66)

(67)

(68)

(69)

We now present an important result from [20] that is used for estimating the optimal values of

c1 and c2 which minimize the MSE of the estimator given in (61).

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

25

Fig. 1: Example of a three switch network with cross trafﬁc ﬂows. The solid red lines indicate

network links, dashed blue lines indicate the direction of background trafﬁc ﬂows, and dotted

green line represents the direction of synchronization trafﬁc ﬂow.

Theorem 3. The optimum values of c1, c2 and η that minimize the mean square error (MSE)

of the estimator given in (61), under the constraint of constant bias4 are

 = S−1


i AT (AS−1

i AT )γ,




c1



c2

η = cT

1 µ2i − cT

2 µ1i,

where,

A =






1T
P

1T
P

P −1T
1T
P




 ,

γ = [1, 0]T ,

and the resultant optimum estimator has an MSE given by

MSE(ˆδi) = γT (AS−1

i AT )−1γ.

For proof, see [20].

4The bias can become unbounded if not unbiased.

(70)

(71)

(72)

(73)

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

26

(a)

(b)

(c)

(d)

Fig. 2: Empirical pdf of queuing delays under various loads. (a) TM-1 network model. (b) TM-2

network model. (c) TM-1 network model. (d) TM-2 network model.

REFERENCES

[1]

IEEE, “Standard for a precision clock synchronization protocol for networked measurements and control systems,” IEEE

1588 (v2, 2008).

[2] D. Mills, “Network Time Protocol (Version 3) Speciﬁcation, Implementation,” RFC 1305, March 1992.

[3] G. Gaderer, T. Sauter and G. Bumiller, “Clock synchronization in powerline networks,” Proceedings of International

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

27

(a)

(b)

(c)

(d)

Fig. 3: Standard deviation of estimator error with 10 switches and cross trafﬁc ﬂows under

varying load factors in TM-1 for number of master-slave communication links = 3 and number

of communication links attacked = 1. (a) 20% load. (b) 40% load. (c) 60% load. (d) 80% load.

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

28

(a)

(c)

(b)

(d)

Fig. 4: Standard deviation of estimator error with 10 switches and cross trafﬁc ﬂows under

varying load factors in TM-2 for number of master-slave communication links = 3 and number

of communication links attacked = 1. (a) 20% load. (b) 40% load. (c) 60% load. (d) 80% load.

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

29

Symposium on Power Line Communications and Its Application, pp. 71–75, 2005.

[4]

I. Hadzic, D. R. Morgan and Z. Sayeed, “A synchronization algorithm for packet mans,” IEEE Trans. Commun., vol. 59,

no. 4, pp. 1142–1153, April 2011.

[5] A. Guruswamy, R. S. Blum, S. Kishore and M. Bordogna, “Minimax Optimum Estimators for Phase Synchronization in

IEEE 1588,” IEEE Transactions on Communications, Vol. 63 , No. 9, pp. 3350 – 3362, Dec. 2015.

[6] M. Ullmann and M. Vogeler, “Delay Attacks - Implication on NTP and PTP Time Synchronization,” Precision Clock

Synchronization for Measurement, Control and Communication, 2009. ISPCS 2009. IEEE International Symposium on,

vol., no., pp. 1–6, October 2008.

[7] G. Gaderer, A. Treytl and T. Sauter, “Security Aspects for IEEE 1588 based Clock Synchronization Protocols,” IEEE

International Workshop on Factory Communication Systems, pp. 247–250, 2006.

[8] G. Gaderer, S. Rinaldi and N. Ker¨o, “Master Failures in the Precision Time Protocol,” Precision Clock Synchronization for

Measurement, Control and Communication, 2007. ISPCS 2008. IEEE International Symposium on, vol., no., pp. 59–64,

September 2008.

[9] G. Gaderer, P. Loschmidt and T. Sauter, “Improving Fault Tolerance in High-Precision Clock Synchronization,” Industrial

Informatics, IEEE Transactions on, vol. 6, no. 2, pp. 206–215, May 2010.

[10] K. Sun, P. Ning, and C. Wang, “TinySeRSync: Secure and resilient time synchronization in wireless sensor networks,”

Proceeding of the 13th ACM conference on Computer and communications security, pp. 264-277, 2006.

[11] H. Song, S. Zhu and G. Cao, “Attack-resilient time synchronization for wireless sensor networks,” Mobile Adhoc and

Sensor Systems Conference, 2005. IEEE International Conference on , vol., no., Nov. 2005.

[12] Mizrahi, T., “Slave diversity: Using multiple paths to improve the accuracy of clock synchronization protocols,” Precision

Clock Synchronization for Measurement Control and Communication (ISPCS), 2012 International IEEE Symposium on ,

vol., no., pp.1–6, 2012.

[13] Mizrahi, T., “A game theoretic analysis of delay attacks against

time synchronization protocols,” Precision Clock

Synchronization for Measurement Control and Communication (ISPCS), 2012 International IEEE Symposium on , vol.,

no., pp.1–6, 2012.

[14] Y. Fang and I. Chlamtac, “Teletrafﬁc analysis and mobility modeling of PCS networks,” in IEEE Transactions on

Communications, vol. 47, no. 7, pp. 1062–1072, July 1999.

[15] Y. Fang, “Hyper-Erlang Distribution Model and Its Application in Wireless Mobile Networks,” Wireless Networks, vol. 7,

pp. 211–219, 2001.

[16] H. C. Tijms, A First Course in Stochastic Models, John Wiley & Sons Ltd, Chichester, 2003.

[17] J. Zhang and R. S. Blum, “Distributed joint spooﬁng attack identiﬁcation and estimation in sensor networks,” in Signal and

Information Processing (ChinaSIP), 2015 IEEE China Summit and International Conference on , vol., no., pp. 701-705,

12–15 July 2015.

[18] B. Alnajjab, J. Zhang and R. S. Blum, “Attacks on Sensor Network Parameter Estimation Systems with Quantization:

August 8, 2018

DRAFT

IEEE TRANSACTIONS ON COMMUNICATIONS

30

Performance and Asymptotically Optimum Processing,” IEEE Transactions on Signal Processing, Vol. 63 , Issue 24, Dec.

2015, pp. 6659 - 6672.

[19] Y. C. Wu, Q. Chaudhrai and E. Serpedin, “Clock Synchronization of Wireless Sensor Networks,” in IEEE Signal Processing

Magazine, vol.28, no.1, pp.124–138, Jan. 2011.

[20] A. Guruswamy, R. S. Blum, S. Kishore and M. Bordogna, “On the Optimum Design of L-Estimators for Phase Offset

Estimation in IEEE 1588,” IEEE Transactions on Communications, Vol. 63 , No. 9, pp. 5101 – 5115, Dec. 2015.

[21] S. P. Boyd and L. Vandenberghe, Convex optimization, Cambridge university pressm 2004.

[22] C. F. J. Wu, “On the convergence properties of the EM algorithm,” Anna. Statist., vol. 14, no. 1, pp. 95–103, 1983.

[23] “Timing and Synchronization Aspects in Packet Networks,” Telecommunication Standardization Sector, International

Telecommunication Union (ITU), ITU-T Recommendation G.8261, April 2008.

[24] OPNET Modeler [Online; accessed December 2013]. [Online]. Available: www.opnet.com.

[25] S. Ganeriwal, R. Kumar and M. B. Srivastava, “Timing-sync protocol for sensor networks,” in Proc. SenSys 03, Los

Angeles, CA, pp. 138–149, Nov. 2003.

August 8, 2018

DRAFT

