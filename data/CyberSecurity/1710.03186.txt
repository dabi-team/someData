Optimization of Privacy-Utility Trade-oﬀs under Informational
Self-determination

Thomas Asikisa, Evangelos Pournarasa

aProfessorship of Computational Social Science
ETH Zurich, Zurich, Switzerland
{asikist,epournaras}@ethz.ch

8
1
0
2

y
a
M
6

]

R
C
.
s
c
[

2
v
6
8
1
3
0
.
0
1
7
1
:
v
i
X
r
a

Abstract

The pervasiveness of Internet of Things results in vast volumes of personal data generated by smart devices
of users (data producers) such as smart phones, wearables and other embedded sensors. It is a common
requirement, especially for Big Data analytics systems, to transfer these large in scale and distributed data
to centralized computational systems for analysis. Nevertheless, third parties that run and manage these
systems (data consumers) do not always guarantee users’ privacy. Their primary interest is to improve
utility that is usually a metric related to the performance, costs and the quality of service. There are
several techniques that mask user-generated data to ensure privacy, e.g. diﬀerential privacy. Setting up a
process for masking data, referred to in this paper as a ‘privacy setting’, decreases on the one hand the
utility of data analytics, while, on the other hand, increases privacy. This paper studies parameterizations
of privacy settings that regulate the trade-oﬀ between maximum utility, minimum privacy and minimum
utility, maximum privacy, where utility refers to the accuracy in the estimations of aggregation functions.
Privacy settings can be universally applied as system-wide parameterizations and policies (homogeneous data
sharing). Nonetheless they can also be applied autonomously by each user or decided under the inﬂuence of
(monetary) incentives (heterogeneous data sharing). This latter diversity in data sharing by informational
self-determination plays a key role on the privacy-utility trajectories as shown in this paper both theoretically
and empirically. A generic and novel computational framework is introduced for measuring privacy-utility
trade-oﬀs and their Pareto optimization. The framework computes a broad spectrum of such trade-oﬀs that
form privacy-utility trajectories under homogeneous and heterogeneous data sharing. The practical use of
the framework is experimentally evaluated using real-world data from a Smart Grid pilot project in which
energy consumers protect their privacy by regulating the quality of the shared power demand data, while
utility companies make accurate estimations of the aggregate load in the network to manage the power grid.
Over 20, 000 diﬀerential privacy settings are applied to shape the computational trajectories that in turn
provide a vast potential for data consumers and producers to participate in viable participatory data sharing
systems.

Keywords: data sharing, privacy, utility, trade-oﬀ, optimization, masking, diﬀerential privacy, data
transformation, diversity, Internet of Things, Big Data,

1. Introduction

High data volumes are generated in real-time
from users’ smart devices such as smartphones,
wearables and embedded sensors. Big Data sys-
tems process these data, generate information and
enable services that support critical sectors of econ-
omy, e.g. health, energy, transportation etc. Such
systems often rely on centralized servers or cloud

computing systems. They are managed by corpo-
rate third parties referred to in this paper as data
consumers who collect the data of users referred
to respectively as data producers. Data consumers
perform data analytics for decision-making and au-
tomation of business processes. However, data pro-
ducers are not always aware of how their data are
used and processed. Terms of Use are shown to be
limited and ineﬀective [4, 32]. Security and privacy

Preprint submitted to Elsevier

May 8, 2018

 
 
 
 
 
 
of users’ data depend entirely on data consumers
information
and as a result misuse of personal
is possible, for instance, discrimination or limited
freedom and autonomy by personalized persuasive
systems [22, 7, 24, 21]. Giving control back to data
producers by self-regulating the amount/quality of
shared data can limit these threats [37]. Incentiviz-
ing the sharing of higher amount/quality of data
results in improved quality of service, i.e. higher
accuracy in predictions [44, 10, 26]. At the same
time, data sharing empowers data producers with
an economic value to claim.

Several applications do not require storage of the
individual data generated by data producers.
In-
stead, data consumers may only require aggregated
data. For instance, Smart Grid utility companies
compute the total daily power load or the average
voltage stability to prevent possible network fail-
ures, bottlenecks, predict future power demand, op-
timize power production and design pricing policies
[27, 6]. Privacy-preserving masking mechanisms [1],
i.e. diﬀerential privacy, accurately approximate the
actual aggregate values without transmitting the
privacy-sensitive individual data of data producers.
Masking is a numerical transformation of the sen-
sor values that usually relies on the generation of
random noise and is irreversible1.

Privacy-preserving masking mechanisms are
studied by calculating metrics of privacy q and util-
ity u. The former represents the amount of personal
information that a data producer preserves when
sharing a masked data value. The latter represents
the beneﬁt that a data consumer preserves when
using certain masked data for aggregation, e.g. ac-
curacy in data analytics. Literature work [1, 30, 25]
shows that privacy and utility are negatively corre-
lated, meaning that an increase on one results in
decrease on the other. This paper studies the op-
timization of computational trade-oﬀs between pri-
vacy and utility that can be used to model infor-
mation sharing as supply-demand systems run by
computational markets [37, 29]. These trade-oﬀs
can be measured by the opportunity cost between
privacy-preservation and the performance of algo-
rithms operating on masked data, i.e. prediction
accuracy. Trade-oﬀs can be made by choosing dif-
ferent parameters for diﬀerent masking mechanisms
each inﬂuencing the mean or the variance of the
generated noise distributions [1]. Each parameteri-

1It is computationally infeasible to compute the original

data using the transformed data.

zation results in a pair of privacy and utility values
within a trajectory of possible privacy-utility val-
ues.

The selection of parameters for masking mecha-
nisms that maximize privacy and utility is studied
in this paper as an optimization problem [30, 25].
In contrast to related work that exclusively focuses
on universal optimal privacy settings (homogeneous
data sharing), this paper studies the optimization
of privacy-utility trade-oﬀs under diversity in data
sharing (heterogeneous data sharing). This is a
challenging but more realistic scenario for partic-
ipatory data sharing systems that allow informa-
tional self-determination via a freedom and auton-
omy in the amount/quality of data shared by each
data producer. A novel computational framework
is introduced to compute the privacy settings that
realize diﬀerent privacy-utility trade-oﬀs.

The main contributions of this article are the
following:
(i) The introduction of a general-
ized, domain-independent, data-driven optimiza-
tion framework, which selects privacy settings that
maximize privacy and utility. (ii) A formal proof
on how high utility can be achieved under informa-
tional self-determination (heterogeneous data shar-
ing) originated from the diversity in the privacy set-
tings selected by the users. (iii) The introduction
of new privacy and utility metrics based on statis-
tical properties of the generated noise.
(iv) The
introduction of a new masking mechanism. (v) An
empirical analysis of privacy-utility trajectories of
more than 20, 000 privacy settings computed using
real-world data from a Smart Grid pilot project.

This paper is outlined as follows: Section 2 in-
cludes related work on privacy masking mecha-
nisms, privacy-utility trade-oﬀ as well as privacy-
utility maximization problems. Section 3 deﬁnes
the optimization problem and illustrates the re-
search challenge that this paper tackles. Section
4 introduces the proposed optimization framework.
Section 5 outlines the experimental settings on
which the proposed framework is tested and eval-
uated. Section 6 shows the results of the experi-
mental evaluation. Finally, Section 7 concludes this
paper and outlines future work.

2. Related Work

Several algorithms are proposed to perform data
aggregation without transmitting the raw data.
The basic idea behind such algorithms is to irre-

2

versibly transform2 the data, so that the original
values cannot be estimated. While doing so, some
of the properties of the data should be preserved to
accurately estimate aggregation functions such as
sum, count or multiplication [1, 10, 37, 18, 11]. The
masking process enables the data producers to con-
trol the amount of personal information sent to data
consumers. These methods also ensure that the
data remain private even when a non-authorized
party acquires them, for example in the case of a
man-in-the-middle attack.

2.1. Privacy-preserving mechanisms

An overview of privacy-preserving mechanisms is

illustrated below:

2.1.1. Pertrubative masking mechanisms

Perturbative masking mechanisms allow the data
producers to share their data after masking individ-
ual values. Each value is perturbed by replacing it
with a new value that is usually generated via a
process of random noise generation or vector quan-
tization techniques on current and past data val-
ues [1]. Some of the most well-known perturbative
masking methods are the following:

Additive noise: A privacy-preserving approach
is the addition of randomized noise [11, 12, 46].
This approach is often used in diﬀerential privacy
schemes [12]. Diﬀerential privacy is ensured when
the masking process prohibits the estimation of the
real data values, even if the data consumer can uti-
lize previously known data values or the identity
of the individual who sends the data [13]. Algo-
rithms that achieve diﬀerential privacy rely on the
notion that the change of a single element in a
database does not aﬀect the probability distribu-
tion of the elements in the database [11, 13, 46, 47].
Furthermore, the removed element cannot be iden-
tiﬁed when comparing the version of the database
before and after the removal. This is achieved by
adding a randomly generated noise to each data
value. The distribution of the random noise is pa-
rameterized and usually is symmetric around 0 and
relies on the cancellation of noises with opposite
values. Increasing the number of noise values also
increases the noise cancellation, since a larger num-
ber of opposite values are sampled. This property
can be used to combine diﬀerential privacy mech-
anisms in order to ensure privacy while achieving

high utility [23]. Statistical aggregation queries on
the masked data return an approximate numerical
result, which is close to the actual result. Diﬀer-
ential privacy can be applied to discrete and con-
tinuous variables for the calculation of several ag-
gregation functions [10]. Diﬀerential privacy can
be combined with the usage of deep neural net-
works [43, 35], to apply more complex aggregation
operations on statistical databases. Furthemore,
several additive noise implementations are suscep-
tible to noise ﬁltering attacks, such as the use of
Kalman ﬁlters [20] or reconstruction attacks [14].
These attacks can be prevented when the noise is
not autocorrelated or the distribution of its auto-
correlation is approximately uniform.

Microaggregation: Microaggregation relies on
the replacement of each data value with a repre-
sentative data value that is derived from the sta-
tistical properties of the dataset it belongs to. A
well-known application of microaggregation is K-
anonimity. K-anonymity relies on the notion that
at least K original data values are mapped to the
same value [40]. When a crisp clustering algorithm
is applied on the data, each data value is mapped
to the cluster centroid it belongs to. K is the min-
imum number of elements in a cluster. Using crisp
clustering techniques3 may result in vulnerabilities
to speciﬁc attacks, so membership or fuzzy cluster-
ing is preferred instead [33]. Membership cluster-
ing assigns a data point to multiple clusters with
a probability that is often proportional to the dis-
tance from each cluster centroid. For membership
clustering techniques, usually large amounts of data
are required. The storage and computational ca-
pacity of sensor devices cannot usually support such
processes [33, 1].

Synthetic microdata generation An new
dataset is synthesized based on the original data
and multiple imputations [1]. The “synthetic”
dataset is used instead of the original one for ag-
gregation calculations. The application of synthetic
microdata generation on sensor devices may pro-
duce prohibitive processing and storage costs. Fur-
thermore, the availability of historical data on each
sensor device may not be adequate for such methods
to achieve comparable performance and eﬃciency
with the perturbative masking methods [1].

2A process also known as masking.

3Such as K-Means.

3

2.1.2. Encryption

Several approaches use encryption to produce an
encrypted set of numbers or symbols, known as
ciphers. The aggregation operations can be per-
formed on the ciphers and produce an encrypted
aggregation value. The encrypted aggregate value
can then be decrypted to the original aggregate
one, with the usage of the corresponding private
and public keys and decryption schemes, provid-
ing maximum utility and privacy to the recipient.
The encrypted individual values cannot be trans-
formed to the original values without the usage of
the appropriate keys from an adversary, so max-
imum privacy is ensured. Currently, there is ex-
tensive research on this area, and there has been a
recent breakthrough with the development of fully
homomorphic encryption schemes [15, 16, 18, 19].
Homomorphic encryption schemes though require
high computational and communication costs, es-
pecially when applied in large scale networks [17, 9].

2.1.3. Multi-party computation

Multi-Party Computation (MPC) [48, 3] can also
be used for privacy-preservation [8] by moving data
from one device to another. In such an approach,
security and integrity of the data depend on the re-
silience and security of the network. Most of the
methods that rely on encryption can calculate the
exact sum of the data, but they can also be vio-
lated if an attacker manages to have access to the
private key or uses an algorithm that can guess it.
Furthermore, in most cases they rely on communi-
cation protocols that burden the system with ex-
tra computational and communication costs [38].
These costs are often prohibitive for devices such
as IoT sensors and smartphone wearables in which
computational power and storage are limited [3].

2.2. Privacy and computational markets

A supply-demand system operating on a compu-
tational market of data, can be created with the in-
troduction of self-regulatory privacy-preserving in-
formation systems [37]. Privacy preservation is uti-
lized to create such systems, for instance by using
K-means for microaggregation and diﬀerent num-
bers of clusters for each sensor. Varying the num-
ber of clusters produces diﬀerent levels of privacy
and utility. The resulting trade-oﬀ between privacy
and utility is used to create a reward system, where
data consumers oﬀer rewards for the data provided
by the data producers. The rewards are based on

4

the demand of transformed data that enables the
estimation of more accurate aggregate values.

A reward system can be combined with pricing
strategies from existing literature on pricing pri-
vate data [29], in which three actors are introduced:
Various pricing functions are proposed to the Mar-
ket Maker so that the privacy-utility of both data
consumers and data producers are satisﬁed. The
optimization framework of the current paper can
utilize any parametric masking mechanism of the
literature mentioned in Section 2.1. The output
of the optimization can be used along with pricing
functions on participatory computational markets,
to create fully functional and self-regulatory data
markets.

2.3. Comparison and positioning

The challenge of an automated selection of pri-
vacy settings that satisfy diﬀerent trade-oﬀs is
not tackled in the aforementioned mechanisms.
Privacy-utility trajectories have not been earlier
studied extensively and empirically as in the rest
of this paper. The optimization of privacy-utility
trade-oﬀs under diversity in data sharing originated
from informational self-determination is the chal-
lenge tackled in this paper. To the best of the au-
thors’ knowledge, this challenge is not the focus of
earlier work.

3. Problem Deﬁnition

Related work [25, 44, 30, 41, 37] on privacy-utility
trade-oﬀs focuses on the parameter optimization of
a single masking mechanism. A masking mecha-
nism is often a noise generation process, which sam-
ples random noise values from a laplace distribu-
tion and then it aggregates it to the data, for in-
stance the sampled noise is then added to the data
to achieve diﬀerential privacy [11]. The result of the
optimization is usually a vector of parameter values
θη,k, for a masking mechanism η and parameter in-
dex k. The pair of the masking mechanism and
the parameter values is referred as a privacy setting
fη (S, θη,k) of a set of sensor values S ∈ R1. This
privacy setting produces a pair of privacy-utility
values ˆq , ˆu, such that:

ˆq → max (Q)

ˆu → max (U )

(1)

(2)

Where (ˆq, ˆu) is a (sub-optimal) privacy-utility pair
of values, which is computed by an optimization

algorithm that searches for the optimal privacy-
utility values pair. max (Q), max (U ) are the max-
imum privacy and utility values of a privacy value
set Q and a utility value set U . These sets are gen-
erated by the application of a masking mechanism.
The optimization of an objective function that
satisﬁes both Relations (1) and (2) simultaneously
is an NP-hard problem [25], in the case that pri-
vacy and utility are orthogonal (q ⊥ u) or oppo-
site4 (q ↑, u ↓), and often intractable to solve, since
privacy-utility trade-oﬀs prohibit the satisfaction
of both Relations (1) and (2). Particularly, max-
imizing simultaneously utility and privacy usually
yields sub-optimal values, which are lower than the
corresponding optimal values computed by optimiz-
ing each metric separately [25]. Furthermore, such
optimization is applicable for statistical databases
[13, 1], where data are stored in a centralized sys-
tem. In such case, a speciﬁc privacy setting is cho-
sen by the designer/administrator of the system.
As a result, this approach relies on the assumption
that a speciﬁc privacy setting should be used by all
data producers.

However, remaining to a ﬁxed privacy setting
may be limited for data producers, especially when
a data producer wishes to switch to a diﬀerent pri-
In this
vacy setting to improve privacy further.
case, the optimization of diﬀerent objective func-
tions is formalized in the following inequalities:

q∗ > ˆq + δ ∧ u∗ > ˆu + c

(3)

Where δ measures the change in privacy, which de-
notes whether the data producers require higher
privacy, δ > 0, or lower privacy δ < 0, from the
system. c measures the change in utility, which de-
notes whether the data consumer demands lower
utility, c > 0, or higher utility c < 0, from the sys-
tem. Finally, (q∗, u∗) denotes a new (sub-optimal)
pair of privacy-utility values, computed by an op-
timization algorithm that searches for the optimal
pair of privacy-utility values with respect to the pri-
vacy requirements of data producer and the utility
requirements of data consumer expressed by c and
δ respectively.

The optimization of an objective function to sat-
isfy Relation (3) is also based on the assumption
that all data producers agree to use the same pri-
vacy setting. This means that data producers may
acquire a diﬀerent privacy level by changing the
value of δ via the collective selection of a diﬀer-
ent privacy setting. Consequently, a single pri-
vacy setting is generated and it produces a pair
of privacy-utility values, which satisfy Inequality
(3). The value of δ is determined via a collective
decision-making process applied by the data pro-
ducers, e.g. voting between diﬀerent privacy-utility
requirements. Such a system is referred to as a ho-
mogeneous privacy system, where data producers
are able to inﬂuence the amount of privacy applied
on the data by actively participating in the mar-
ket, nevertheless they all share the same value for
δ. The data consumer can bargain for higher utility
by oﬀering higher rewards to the data producers to
lower their privacy requirements.

Another challenge that arises is the optimization
between privacy and utility when each user decides
and self-determines a preferred privacy setting in-
stead of using a universal privacy setting. In such
a scenario, inequality (3) is substituted by the fol-
lowing set of inequalities:

(q∗

(4)

(q∗

1 > ˆq + δ1) ∧ . . . ∧
n > ˆq + δ|N |) ∧ (u∗ > ˆu + c)
Where δn measures the change in privacy which
denotes whether a data producer n belonging to
a set of users N requires higher privacy, δn > 0,
or lower privacy δn < 0. q∗
n denotes a new (sub-
optimal) privacy value for each data producer n.
The value is computed by an optimization algo-
rithm that searches for the optimal privacy value
with respect the data producer’s privacy require-
ments expressed by δn.

A system in which the inequalities of Relation
(4) hold is referred to as an heterogeneous privacy
system, where each data producer self-determines
and autonomously applies a privacy setting based
on a preferred privacy value and an expected reward
for increasing system utility.

4In the case that privacy and utility are positive corre-
lated (q ↑, u ↑), the problem is reduced to NTIME-hard, and
especially in the case privacy and utility are proportional
q ∝ u to DTIME-hard [5]. The solution of the problem is
provided by linearly evaluating all pairs of privacy and utility
values once without comparing to all other pairs.

The design of a new privacy preserving opti-
mization framework is introduced in this section
to tackle the challenges posed in Section 3. Ad-
ditive noise masking mechanisms require a lower

4. Framework

5

number of parameters in general and they are of-
ten used in privacy-utility optimization [1, 13, 25].
Each privacy setting is illustrated as an ellipse5 in
Figure 1a. Each point within the ellipse is a possi-
ble privacy-utility pair of values. The ellipse center
is chosen based on the privacy and utility mode of
the setting. The mode is the value with the high-
est density. In symmetric distributions, it can be
measured via the mean. The vertical radius of the
ellipse denotes the dispersion of utility values, while
horizontal radius denotes the dispersion of privacy
values. Additive noise is stochastic, which means
that applying the same privacy setting on the same
dataset yields varying privacy-utility values. The
choice of an optimal privacy-utility pair cannot be
achieved by only evaluating the mode of privacy
and utility for each privacy setting. If the privacy-
utility values of a privacy setting with high utility
mode are varying to a large extend, there is high
probability that unexpected non-optimal values are
observed. To overcome this challenge, the objective
function of the parameter optimization algorithm
selects the parameters that minimize the disper-
sion6 of privacy-utility values while maximizing the
expected utility.

A data producer selects any privacy setting,
among diﬀerent ones, that satisﬁes personal privacy
requirements. The proposed framework divides the
range of privacy values in a number of equally sized
bins, as illustrated in Figure 1b. Within each bin,
a ﬁtness value is calculated for each privacy set-
ting, based on privacy-utility mode and dispersion
Each privacy setting produces privacy values with
low dispersion. This is done by applying a lower
bound constraint on privacy and utility constraint
on the dispersion of privacy values and evaluating
only privacy settings that satisfy this constraint,
as shown in Figure 1c. The optimization frame-
work evaluates several privacy settings, to ﬁnd the
parameters that achieve maximum privacy-utility
values that vary as little as possible. This is illus-
trated in Figure 1d in which the ellipses with the
highest utility mode and lowest utility dispersion
are ﬁltered for each privacy bin.

(a) Privacy-utility trajec-
tory

(b) Binning of the privacy
range

(c) Evaluation via objective
function

(d) Bin optimization

(e) Objective function scale

Figure 1: A graphical representation of the algorithm.
Each ellipse denotes the privacy-utility values of a pri-
vacy setting.
In Figures 1c and 1d the varying color
denotes the ﬁtness value. A lighter red color denotes
higher ﬁtness.

In a homogeneous data sharing system, a uni-
versal privacy setting is selected by the data pro-
ducers, via, for instance, voting [34]. Alternatively,
in a heterogeneous system, the data producers self-
determine the privacy setting independently. Theo-
rem 1 below proves that aggregation functions can
be accurately approximated (utility can be maxi-
mized) even if diﬀerent privacy settings from the
same of diﬀerent masking mechanisms are selected.

5The elliptical shape is chosen for the sake of illustration
and it indicates a symmetrical distribution of privacy-utility
values, generated by a privacy setting, within the ellipse area.
6This refers to the dispersion measures of the privacy and
utility distributions. If the values belong to a gaussian dis-
tribution, then the standard deviation is used to measure the
dispersion. Since this is not always the case, other measures
of scale can be used, such as the Inter-Quantile Range(IQR).

Theorem 1. Let the transformation of |I| disjoint
subsets of sensor values Si into the respective sub-
sets of masked values Mi using a certain privacy
settings fi for each such transformation. It holds
that the aggregation of the generated multisets of
masked values Mi approximates the aggregation of
the sensor values multiset Si:

6

PrivacyUtilityPrivacyUtilityPrivacyUtilityPrivacyUtilityObjective Function ValueLowHighg(

|I|
(cid:91)

i=1

Mi) → g(S),

(5)

given that the commutative and associative proper-
ties hold between each of the privacy settings fi and
the aggregation function g.

Proof. Let a multiset of real sensor values S ⊆ R1
and |I| disjoint subsets of S such that:

|I|
(cid:91)

i=1

Si = S, Si (cid:54)= ∅ ∀ i ∈ {1, ..., |I|}

(6)

Let a privacy setting f : S, Ψ → M be a pairwise
element operation between a set of sensor values S
and a set of noise values Ψ, that transforms each
sensor value s ∈ S by aggregating it with a ran-
domly selected noise value ψ from Ψ to produce a
masked value m:

f (S, Ψ) = g(S ∪ Ψ) = M ⇔

f (s, ψ) = g({s, ψ}) = m

(7)

Let g : A → R1 be an aggregation function
which aggregates all elements of real values mul-
tisets S, Ψ, M ⊆ A ⊆ R1 into a single real value
g(A) = zA ∈ R1. Assume that g : A → R1 is de-
ﬁned in a recursive manner so that it satisﬁes the
following equation for a multiset A and any union
of all possible combinations of disjoint subsets Ai
that satisfy Relation (6):

g(A) = g(

|I|
(cid:91)

|I|
(cid:91)

Ai) = g(

i=1

i=1

g(Ai))

(8)

According to literature [2] the family of aggrega-
tion functions that Relation 8 applies to is referred
to as extended aggregation functions7. The pair-
wise operation between s and ψ in f is designed in
such way that it satisﬁes the commutative and asso-
ciative properties when combined with the pairwise
operation of g:

g(f (S, Ψ))

7,8
= f (g(S), g(Ψ))

(9)

where g(Ψ) → ι, ι is the strong neutral element of
the extended aggregation function g, such that:

g(g(A) ∪ ι) = g(A) ⇒

g(g(A) ∪ g(Ψ)) → g(A)

(10)

7A subset of those functions are the averaging func-
tions, which include aggregations such as the mean, weighted
mean, Gini mean, Bonferoni mean, Choquet integrals etc.

7

This property is used in the noise cancellation of
Section 2.1.1. Let |I| multisets Ψi of noise that
satisfy Relation 6, then the following relation holds:

g(Mi) = g(f (Si, Ψi))

g(Mi) = f (g(Si), g(Ψi))

g(Mi) → g(Si),

(9)
⇔

(10,7)
⇔

(11)

which means that each noise multiset Ψi is gener-
ated in such a way that the aggregation of g(Mi) ap-
proximates the aggregation of g(Si). An illustrative
example is the laplace noise used in the literature
for the aggregation functions of count or summa-
tion [11, 9], which satisﬁes Relations 7, 8 and 10.
Now it can be proven that:

g(

|I|
(cid:91)

i=1

fi(Si, Ψi))

|I|
(cid:91)

(8)
= g(

g(fi(Si, Ψi)))

(11)
⇐⇒

i=1

|I|
(cid:91)

Mi) → g(

i=1

g(

|I|
(cid:91)

i=1

g(Si)))

(6),(8)
⇐⇒

(12)

g(

|I|
(cid:91)

i=1

Mi) → g(S)

Thus, Theorem 1 is proven.

The practical implication of Theorem 1 is that
the aggregation of sensor values is approximated by
the aggregation of masked values produced by dif-
ferent privacy settings. The approximation stands
as long as the noise values produced by the dif-
ferent privacy settings satisfy Relations 9 and 10.
According to Relation 6, each subset of sensor val-
ues should be masked by one privacy setting. Re-
garding the complexity of these operations, apply-
ing the masking on top of sensor values is linearly
depended to the number of sensor values |Si| as-
signed to each privacy setting. Due to Relation 6,
applying the proposed framework in real time in-
creases computational complexity by O(|S|). The
original values are not stored or transmitted at run-
time, thus the storage and communication complex-
ity does not change. During optimization all the
privacy settings i ∈ I are applied to a training set
of sensor values S. In that case real sensor values
are stored and transmitted as well along with the
masked values for each setting. The storage and
communication costs increase by O(|I| · |S|). The
computation costs also increase to O(|I|· |S|), which
is a quadratic complexity in the worst case |I| = |S|.

In most real world applications, it is safe to assume
that the sensor values have considerably higher vol-
ume to the evaluated privacy settings |I| << |S|,
thus the expected computational, storage and com-
munication complexity are linear to the number of
sensor values.

The framework can be applied as a multi-agent
system. It requires two types of agents represent-
ing the data consumers and data producers. This
scheme can be applied in both centralized and de-
centralized aggregation services, such as MySQL or
DIAS [36]. Finally in both heterogeneous and ho-
mogeneous systems, the data consumer can inﬂu-
ence the data producer’s choice by oﬀering a higher
amount of reward to achieve a higher utility.

5. Experimental Settings

This section illustrates the experimental settings,
which are used to empirically evaluate the proposed
framework. A set of sensor values S is used for the
evaluation. Each sensor value sn,t belongs to a user
n and is generated at time t. For each sensor value,
a privacy setting that operates on the device of the
data producer masks the sensor value fη (sn,t, θη,k)
by using the masking mechanism η with parameters
θη,k. Two metrics are used to evaluate privacy and
utility.

5.1. Privacy evaluation

The main metric, which is used to calculate pri-
vacy, is the diﬀerence of the masked value and the
original value, which is deﬁned as the local error:

εn,t =

(cid:12)
(cid:12)
(cid:12)
(cid:12)

fη (sn,t, θη,k) − sn,t
sn,t

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(13)

For a privacy setting to achieve a high privacy,
a data consumer should not be able to estimate
the local error for the sensor values sent by data
producers. This is achieved by choosing privacy
settings that generate noise that is diﬃcult to esti-
mate. As it is shown in the literature [37, 25, 13, 1],
the noise is diﬃcult to estimate, if it is highly ran-
dom and causes a signiﬁcant change in the original
value. To avoid noise ﬁtering attacks, noise with
low or no autocorrelation is generated. The range
of autocorrelation values can be determined analyt-
ically when the noise generation function is deﬁned.
In case this is not possible, a metric quantifying
the color of noise can be included in the objective
function. Randomness is evaluated by measuring

the Shannon entropy [42] H (E ) of the local error
for all local error values E . The entropy is calcu-
lated by creating a histogram of the error values
and then applying the discrete Shannon entropy
calculation. Each bin of the histogram has a size
of 0.001. The signiﬁcance of change is measured by
calculating the mean local error µ(E ) and standard
deviation σ(E ). When comparing privacy settings,
higher mean, variance and entropy indicate higher
privacy [1]. In this article, the objective function
that measures privacy for a privacy setting fη,k is
deﬁned as follows8:

q = α1

µ(Eη,k)
max (µ(Eη,k))

+ α2

σ(Eη,k)
max (σ(Eη,k))

+ α3

H (Eη,k)
max (H (Eη,k))

(14)

Where α1, α2, α3 are weighting parameters used to
control the eﬀect of each metric in the privacy ob-
jective function. max (•) is the maximum observed
value for a metric during the experiments. This
value is produced by evaluating all privacy settings
fη,k. Dividing by this value, normalizes the met-
rics in [0, 1], so that the objective function is not
aﬀected by the scale of the metric.

5.2. Utility evaluation

The utility of the system is estimated by measur-
ing the error the system accumulates within a time
period, by computing an aggregation function g (•)
on the masked sensor values. Examples of such ag-
gregation functions are the daily total, daily aver-
age and weekly variance of the sensor values. The
accumulated error is referred to as global error[8]
and is deﬁned as:

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:15)t =

g (Mt) − St
g (St)
A sample set of global error values (cid:15) is created by
applying the masking process for a number of time
periods of the dataset. The mean, entropy and vari-
ance of the global error of a privacy setting fη,k is
calculated over this sample. The mean global error

(15)

8The error function described in (13) and (15) is also
known in literature as absolute percentage error (APE) [31].
The error values are easy to interpret, as APE measures the
relative change of the sensor values and aggregate values by
using masking. Yet, when the denominator of the function
is approaching zero, then the absolute relative error cannot
be calculated. If the sensor values are sparse, then another
error function can be used, such as MAPE.

8

µ((cid:15)η,k) indicates the expected error between the
masked and actual aggregate. The standard devia-
tion σ((cid:15)η,k) and the entropy H ((cid:15)η,k) of the global
error, indicate how much and how often the masked
aggregate diverges from the expected value. Min-
imizing all three quantities to 0, ensures that the
masked aggregate approximates the actual aggre-
gate eﬃciently. Thus, after the global error sample
is created for each privacy setting, the correspond-
ing utility objective function is calculated:

(cid:18)

u = 1−

γ1

µ((cid:15)η,k)
max (µ((cid:15)η,k))

+γ2

σ((cid:15)η,k)
max (σ((cid:15)η,k))
(cid:19)

(16)

+ γ3

H ((cid:15)η,k)
H (max ((cid:15)η,k))

Where the weighting parameters γ1, γ2, γ3 are used
to control the eﬀect of each metric in the utility ob-
jective function. max (•) is the maximum observed
value for a metric during the experiments. This
value is produced by evaluating all privacy settings
fη,k. Dividing by this value, normalizes the met-
rics in [0, 1], so that the objective function is not
aﬀected by the scale of the metric.

Recall from Section 4 that utility and privacy
vary, when repeating the masking process for the
same privacy setting and dataset due to the ran-
domness of the noise. A large sample to mea-
sure this variance is created, by applying each pri-
vacy setting over three times on the same dataset.
Then the framework of Section 4 ﬁlters the pri-
vacy settings based on the mode and the scale of
the privacy-utility sample, as illustrated in Figure
1c. The privacy-utility samples for a privacy setting
may not follow a symmetrical or normal distribu-
tion9. As a result, the maximization of the following
objective function is based on utility:

perc (U, 50) + perc (U, 10)

(17)

Where perc(U, i) calculates the ith percentile of a
set of utility values U produced by the application
of a privacy setting.

The factors that maximize Relation (17) are: (i)
the value of the mode, which is assumed to be ap-
proximated by the median and (ii) the dispersion

9It is conﬁrmed in some experimental settings that some
privacy settings generate samples of privacy-utility values
that do not pass a Kolmogorov Smirnoﬀ normality test [39],
and are also non-symmetrical.

9

towards values lower than the median, which is ex-
pressed by adding the 10th percentile to the median.
The objective function evaluates the median and
the negative dispersion (10th percentile) of utility
values. Positive dispersion is not taken into account
in the optimization, since the abstract objective of
the optimization is to ensure the least expected util-
ity of a privacy setting for the data consumers. The
privacy is constrained by evaluating only privacy
settings in which the 10th percentile diﬀers from
the privacy median for at most ω, as shown in In-
equality (18). The value of ω is constrained to be
lower or equal to the bin size of the optimization to
ensure low privacy dispersion:

perc (Q, 50) − perc (Q, 10) < ω,

(18)

Where perc(Q, i) calculates the ith percentile of a
set a set of privacy values Q produced by the ap-
plication of a privacy setting.

6. Experimental Evaluation

The proposed framework is evaluated experimen-
tally by applying it to a real-world dataset. Privacy
and utility are evaluated using over 20, 000 privacy
settings for empirical evaluation.

6.1. Electricity Customer Behavior Trial dataset

The Electricity Customer Behavior Trial (ECBT)
dataset contains sensor data that measure the en-
ergy consumption for 6, 435 energy data producers.
The data are sampled every 30 minutes daily for
536 days. For the proposed framework, a set of
sensor values S of |N | = 6, 435 users and |T | = 536
time periods. The total number of sensor values in
the set is |S| = 165, 559, 680. The sensor data are
considered private and the utility company manag-
ing the energy network uses them to calculate daily
total consumption in the grid, to predict possible
failures and plan power production. The daily total
consumption is an aggregation that can be deﬁned
as the sum of all the sensor values generated during
the day: g (St) = (cid:80)6435
n=1 sn,t. Around 10% of the
daily measurements are missing values, and are not
included in the experiments. The signiﬁcance of the
missing values reduces as the aggregation interval
increases. Therefore, a daily summation is chosen
over more granular summation.

During the experiments, the local error of Rela-
tion (13) results in a non-ﬁnite10 number only for
a low number of maskings. Hence, these values are
excluded from the experiments, so that the calcu-
lation of ﬁnite local error values is feasible. Con-
cluding, the proposed framework operates on 90%
of the ECBT dataset.

6.2. Privacy mechanisms

Among several masking mechanisms [1], two ones
are used for the evaluation of the framework. Each
mechanism is parameterized using the grid search
algorithm11 [28]. The majority of masking mech-
anisms are parameterized with real numerical val-
ues. A grid search discretizes these values, and then
evaluates exhaustively all possible combinations of
parameter values.

6.2.1. Laplace masking mechanism

This mechanism is widely used in literature
[13, 1, 10]. The noise in the experiments of this
paper is generated by sampling a laplace distribu-
tion with zero mean. The scale parameter b of the
distribution is selected to ensure maximum privacy.
Part of privacy can be sacriﬁced to increase utility
if the privacy requirements from the data produc-
ers are not high. In this masking mechanism, this
is achieved by reducing the b. The scale parameter
for each laplace masking setting, is generated from
value b = 0.001 and during the parameter sweep
the value increases by 0.001 until it reaches b = 10.

6.2.2. Sine polyonym masking mechanism

This mechanism is introduced in this paper. The
mechanism generates random noise that can be
added to each sensor value. Assume a uniform ran-
dom variable υ. The noise generated from the intro-
duced masking mechanism is calculated as follows:

|Ξ|
(cid:88)

[θξ sin(2πυ)]2ξ+1

m =

ξ=0

(19)

The coeﬃcients of the polyonym are denoted as θξ,
and ξ denotes the index of the coeﬃcient. Both
the length of the polyonym |Ξ| and the individual

0

(cid:12)[θξ sin(2πυ)]2ξ+1(cid:12)

coeﬃcient values can be tuned to optimize the re-
sulting privacy-utility values of the masking mech-
anism. The generated noise is symmetrically dis-
tributed around zero, because the odd power of the
sine function produces both negative and positive
noise with equal probability. The sine function and
its odd powers are always symmetrical towards the
horizontal axis, meaning that (cid:12)
(cid:12) =
(cid:12)
(cid:12)[−θξ sin(2πυ)]2ξ+1(cid:12)
(cid:12) . Hence, the integral of each
factor is zero (cid:82) 1.0
[θξ sin(2πυ)]2ξ+1dυ = 0. There-
fore the distribution of generated values is symmet-
rical around zero for υ ∈ [0, 1], which denotes that
the global error mean is approximating zero.
In-
creasing the length of the polyonym and the values
of its coeﬃcients, increases the magnitude of the lo-
cal error, without aﬀecting the global error, indicat-
ing that higher utility can be achieved without sac-
riﬁcing privacy. These properties make polyonyms
of trigonometric functions, such as sine and cosine,
elligible canditates for additive noise optimization.
By increasing the polyonym length and tuning the
coeﬃcient values, a larger space of privacy settings
is searched to maximize privacy and utility.

Each coeﬃcient is assigned to a value in the space
[0.01, 1.8]. The grid search in that space starts with
a step of 0.03 until the value of 0.3, to evaluate set-
tings that create low noise. Then the step changes
to 0.3 until the value of 1.8, to evaluate privacy
settings that generate higher values of noise. The
sine polyonym masking settings are generated by
creating all possible permutations of these values
for 5 coeﬃcients. This yields around 10,000 mask-
ing settings. Preliminary analysis on the autocor-
relation and the spectrograms of the proposed sine
polyonym noise does not show autocorrelation and
recurring patterns over diﬀerent spectrograms12.

6.3. Error analysis

Each privacy setting that results from parame-
terization of the mechanisms is evaluated by ana-
lyzing the local and the global error that they gen-
erate on varying subset sizes of the ECBT dataset.
By sampling varying sizes of the dataset, the util-
ity and privacy dispersion metrics are evaluated on
a varying number of sensor values, measuring the
eﬀect of varying participation in the system. To

10The original sensor value is zero, therefore the result of
Relation (13) is inﬁnite for non-zero noise or indeﬁnite for
zero-noise.

11Also known as parameter sweep.

12Further analysis on this, is possible future work and is
out of the scope of this article. This can be evaluated by
introducing a metric that measures noise color in the privacy
function.

10

create a random subset of the ECBT dataset, a
subset of users N test is chosen. In each repetition
the users are chosen randomly. All users use a uni-
versal privacy setting. The initial size of the subset
is 50 users, and then it increases by 50 users until
|N test| = 500 users. Then, the size of the subset
increases by 500 users until |N test| = 6, 435. This
process generates several local and global error val-
ues. The average, standard deviation and entropy
of the local error and global error are calculated for
all samples generated from the above process. The
empirical cumulative distribution function13 (CDF)
is shown for each metric in Figure 2.

The sine polyonym mechanism can produce a
wider range of local and global error values com-
pared to the laplace mechanism, since almost every
sine polyonym CDF curve is covering a wider do-
main range on the domain axis compared to the
respective laplace CDF curves. The majority of
the range axis values of the sine polyonym CDF
curve are higher than the corresponding range val-
ues of the laplace CDF curve. This indicates that
it is more probable to generate lower global or local
error value by using a sine polyonym setting com-
pared to a laplace setting. Concluding, the sine
polyonym settings are expected to produce a wider
range of privacy-utility trade-oﬀs. Based on the
CDF charts, sine polyonym settings are more likely
to achieve higher utility, whereas laplace settings
are expected to achieve higher privacy.

6.4. Parameter analysis

For the experiments, α and γ parameters are de-
ﬁned to calculate the privacy and utility. The choice
of these parameters may vary based on the distri-
bution of the sensor values and the kind of aggrega-
tion. Also data producers and data consumers may
have varying requirements that aﬀect the choice of
those values. In this paper, these values are deter-
mined empirically, to showcase an empirical eval-
uation. If a data consumer successfully calculates
the local error mean by acquiring the corresponding
original values of a masked set, then it is possible to
estimate the original sensor values of other masked
sets as well, by subtracting the calculated mean.
This challenge is addressed by using privacy set-
tings with high noise variance. Still, high variance

13The cumulative distribution function denotes the prob-
ability of a generated value being lower or equal than the
corresponding domain axis value [45].

11

(a) Local error mean

(b) Global error mean

(c) Standard deviation of lo-
cal error

(d) Standard deviation of
global error

(e) Local error entropy

(f) Global error entropy

Figure 2: Cumulative distribution function of each local
and global error metric computed by all settings of each
masking mechanism.

does not guarantee that the masking process is not
irreversible. If noise varies between a small ﬁnite
number of real values, then the data consumer can
also estimate the original value of the data by sub-
tracting the variance. To overcome this challenge,
privacy settings that produce noise with high en-
tropy, therefore high randomness, are chosen. Con-
sequently, a lower value for the coeﬃcient of local
error mean is chosen as α1 = 0.2, while entropy and
standard deviation of the local error share a higher
coeﬃcient value of α2 = α3 = 0.4.

Assigning values to the utility coeﬃcients de-
pends highly on the preferences of the data con-
sumer. In the case of sum, the global error mean
should be near 0, unless the data consumer esti-
mates the mean and then subtracts it from the ag-

510152025Local Error Mean0.00.20.40.60.81.0Cumulative Probabilitylaplacesine0.020.040.06Global Error Mean0.00.20.40.60.81.0Cumulative Probabilitylaplacesine0.01030507090Local Error St. Deviation0.20.40.60.81.0Cumulative ProbabilitylaplacesineGlobal Error St. Deviation0.000.020.040.060.20.40.60.81.0Cumulative Probabilitylaplacesine26101418Local Error Entropy0.00.20.40.60.81.0Cumulative Probabilitylaplacesine0.013579Global Error Entropy0.20.40.60.81.0Cumulative Probabilitylaplacesinegregation result. For this paper the main concern is
to keep a global error mean near zero, to avoid the
aforementioned correction process. Standard devi-
ation and entropy are assigned with equal weight.
Therefore, a very high coeﬃcient of γ1 = 0.6 for the
global error mean is chosen, whereas the coeﬃcients
of γ2 = γ3 = 0.2 for global error, standard deviation
and entropy are chosen. To avoid evaluating mech-
anisms with high utility dispersion and low utility
mode values, a hard constraint is applied and only
mechanisms that generate mean µ((cid:15)) < 0.1 and
standard deviation values σ((cid:15)) < 0.1 are evaluated.
The normalizing factors of Relations (16) and (14)
are chosen after the application of this constraint.
A sensitivity analysis of the parameters for each
masking mechanism is performed to evaluate the ef-
fect of diﬀerent parameter values on the privacy and
utility output of each masking mechanism. In the
increasing the scale
laplace masking mechanism,
parameter b of the distribution, also increases the
total noise added to the dataset. In the sine mech-
anism, increasing the number and values of the co-
eﬃcients, also increases the total generated noise.
In Figure 3, a comparison of privacy and utility is
shown between the two types of mechanisms. The
values of utility and privacy are generated as shown
in Section 6.3. The total noise is generated by mea-
suring the noise level of each privacy setting on a
sample of 100,000 sensor values14. The lines are
smoothed by applying a moving average, to make
the comparison clearer. For the same amount of
total absolute generated noise (cid:80)
t |ψt|, the laplace
privacy settings achieve higher privacy, often more
than 1% over the sine polyonym privacy settings.
The sine polyonym privacy settings achieve higher
utility around 1% over the laplace privacy settings.
Therefore the results illustrated in Figure 2 are re-
ﬂected in the privacy and utility values generated
from the above parameterization. Moreover, the
trade-oﬀ between privacy and utility is observable,
as privacy increases with the decrease of utility and
vice versa for both mechanisms.

6.5. Homogeneous system evaluation

All the generated privacy settings are evaluated
via the framework proposed in Section 4. The pro-
posed framework ﬁlters out ﬁve privacy settings for

14This sample size is chosen to be large enough for statis-
tical signiﬁcance and small enough to reduce computation
costs.

12

Figure 3: Comparison of sine polyonym and laplace
masking mechanisms in terms of privacy and utility.

Table 1: A table summarizing the performance of the
ﬁve optimal privacy settings based on the parameters of
the sine polyonym denoting the coeﬃcient value for each
factor of the polyonym or the scale value for a laplace
mechanism. In case of the sine polyonym, the ﬁrst num-
ber from right is mapped to the ﬁrst factor (ξ = 1) and
so on.

ID Masking
A
B
C
D
E
N

cosine
laplace
cosine
cosine
cosine
none

Parameters
0.0-0.0-0.0-0.18-0.0
0.005
0.6-0.6-0.0-0.9-0.3
1.2-0.3-0.6-1.2-0.9
1.5-1.5-1.2-0.3-1.2
-

Privacy Utility

0.01
0.20
0.40
0.60
0.80
0.00

0.99
0.98
0.84
0.76
0.68
1.00

ﬁve privacy bins of size 0.2. The constraint value
for evaluating privacy settings is chosen empirically
to be half of the bin size ω = 0.1, to ensure low
privacy dispersion, based on Relation (18). The re-
sulting privacy settings are summarized in Table 1.
The last two columns of the table, illustrate the
median privacy and utility values for each masking
mechanism. The ﬁrst column shows the id of each
setting, which is used as reference in Figures 4 & 5.
Figure 4a shows the generated privacy-utility val-
ues for all the privacy settings tested. Each color
is mapped to the masking mechanism that is used
to produce this setting. The line denotes the me-
dian value of utility at the given privacy value. The
non-median privacy-utility values occur in the semi-
transparent area. Upper and lower edges of the area
denote the minimum and maximum utility value for
the corresponding privacy value. Lower utility val-
ues for a given privacy point are generated from
applications of the privacy setting on small subsets
of the ECBT datasets, where |N | ≤ 1000. The
number of sensor values decreases with the num-
ber of users. Therefore, the noise cancellation is

100,000200,000300,000Total Absolute Noise0.00.20.40.60.81.0Privacy/Utilitysine-privacysine-utilitylaplace-privacylaplace-utilityalso reduced, as mentioned in Section 2.1.1. Hence,
subsets with a lower number of sensor values pro-
duce lower utility values. The trade-oﬀ between
privacy and utility is quantiﬁed, since the median
curve and the edges of the surrounding area indicate
a decrease in utility with the increase of privacy. In
Figure 4b, the area of privacy-utility values of 5
privacy settings produced by the optimization pro-
cess is shown in Section 5.2. Furthermore the “no
masking” privacy setting is also considered, where
users choose to use no privacy setting and send the
values unmasked.

As it is shown, the privacy values of each privacy
setting are within a range of lower than 0.2 privacy.
The dispersion of utility increases for privacy set-
tings that achieve higher privacy. The importance
of oﬀering more rewards for the usage of higher util-
ity mechanisms is validated, since high dispersion
of utility is restrictive for accurate sum calculations
by the data consumers. Figures 4c and 4d illus-
trate the privacy-utility trajectories for more than
1,000 users. It is evident that a data consumer can
also increase utility and reduce its dispersion by at-
tracting more users. Higher rewards in general, can
also attract more users, so the utility dispersion is
expected to decrease even more.

6.6. Heterogeneous system evaluation

In an heterogeneous system, the framework per-
formance is evaluated under the use of diﬀerent pri-
vacy settings from each user. The diﬀerence of pri-
vacy and utility between homogeneous and hetero-
geneous systems is quantiﬁed. This quantiﬁcation is
done by performing an exhaustive simulation. The
simulation combines the ECBT dataset and the six
privacy settings in Table 1. Every user of the ECBT
dataset is assigned a privacy setting from Table 1.
The percentage of users that are assigned each pri-
vacy setting is parameterized A histogram with six
bins is created. Each bin corresponds to the ID of a
speciﬁc privacy setting from Table 1. The percent-
age assigned to a bin denotes the percentage of users
using the respective privacy setting at this time
point. To generate several possible scenarios for dif-
ferent distributions of user choices, the histogram is
parameterized via a parameter sweep of all possi-
ble percentage values for each setting, with a step
of 12.5%. This process produces over 1000 possible
histograms. In ﬁgures 5a - 5d the heatmaps show

(a) Trajectory for all user set
sizes

(b) Optimization results for
all user set sizes

(c) Trajectory for all user sets
with more than 1000 users

(d) Optimization results for
user sets with more than 1000
users

Figure 4: Figures 4a & 4c show the privacy-utility tra-
jectory of the privacy settings grouped by masking mech-
anisms in the same color. Figures 4b & 4d illustrate the
trajectories of the privacy settings, which are generated
by the proposed framework.

the median and the interquantile range (IQR)15 of
privacy and utility for all histograms that the pri-
vacy setting has a higher percentage of users com-
pared to the others. Such a setting is referred to as
dominant setting. This sorting of settings is done
to examine the privacy-utility changes while users
move from a higher to the next lower utility set-
ting. The top row of the heatmap shows the ho-
mogeneous scenario case, where 100% of the users
chose only one setting.

The analysis of the heatmap in Figure 5a shows
an increase in privacy when the majority of users
choose the more privacy-preserving settings of the
homogeneous scenario. This eﬀect is observed for
any percentage of users for a dominant setting. A
decrease in utility median is conﬁrmed in 5c, when
the majority of users shifts from less private to more
private settings. The trade-oﬀ between privacy and

15IQR is considered a robust measure of scale, which is
especially used for non-symmetric distributions. It measures
the range between the 25th and the 75th quantiles.

13

0.20.40.60.81.0Privacy0.00.20.40.60.81.0UtilitylaplacesinePrivacy0.20.40.60.81.00.00.20.40.60.81.0UtilityABCDEPrivacy0.20.40.60.81.00.00.20.40.60.81.0UtilitylaplacesinePrivacy0.20.40.60.81.00.00.20.40.60.81.0UtilityABCDEutility is preserved in the heterogeneous scenario,
regardless of the percentage of users that choose
the dominant setting. Privacy values disperse more
in heterogeneous systems, according to Figure 5b,
as the percentage assigned to the dominant setting
drops. The dispersion of privacy can reach up to
0.16, which is still lower than the bin range.
In
terms of utility, the dispersion is much lower on av-
erage. There is a dispersion of around 0.1 for high
utility mechanisms when they are dominant with
87.5% of users. A possible explanation for this is
the reduction of noise cancellation of high privacy
settings, due to the low percentage of users choos-
ing them. Concluding, changing from a homoge-
neous system to a heterogeneous system preserves
the trade-oﬀ between privacy and utility in the me-
dian values. Furthermore, the change to a hetero-
geneous system increases the dispersion of privacy-
utility values for all the mechanisms, so the data
consumer should expect the aggregates to be less
accurate. Still, utility remains over 0.76 even if
the IQR is subtracted from the median, indicat-
ing that the aggregate is still approximated even
in the heterogeneous case. This validates empiri-
cally Theorem 1.
In both cases it is eﬃcient for
the data consumer to shift user privacy choices to
high utility mechanisms by oﬀering them higher re-
wards. The randomness of the generated noise in an
heterogeneous system does not create high variance
or high expected global errors. Individual privacy
is still preserved for all users and their privacy set-
tings. The individual privacy value does not change
between heterogeneous and homogeneous systems,
since the privacy-setting choice of one user does not
aﬀect the added noise to the sensor values of the
other ones.

7. Conclusion and Future Work

An optimization framework for the selection of
privacy settings is introduced in this paper. The
framework computes privacy settings that maxi-
mize utility for diﬀerent values of privacy. This
framework can be utilized in privacy-preserving sys-
tems that calculate aggregation functions over pri-
vatized sensor data. The data producers of such
system can self-determine the privacy setting of
their choice, since it is guaranteed that it produces
the desired privacy with very low deviation. For
the data consumer of the system, it is guaranteed
that if the data producers are incentivized to use
low-privacy settings and high utility settings, the

(a) Privacy Median

(b) Privacy IQR

(c) Utility Median

(d) Utility IQR

Figure 5: The heatmaps in Figures 5a-5d show the pri-
vacy and utility median and IQR values, for various
distributions of privacy setting choices among the users.

approximated aggregate is highly accurate. Ana-
lytical as well as empirical evaluation using over
20, 000 privacy settings and real-world data from
a Smart Grid pilot project conﬁrm the viability of
participatory data sharing under informational self-
determination.

For future work, the proposed framework can
be improved by incorporating a machine learning
process that computes personalized recommenda-
tions of privacy settings to each data producer,
by identifying the prior distribution of the sensor
data and also the preferences of the data producer.
Further empirical evaluations of framework can be
performed by implementing other aggregation func-
tions and using diﬀerent datasets. Finally, an ana-
lytical proof that the sine polyonym additive noise
is not colored and diﬀerentially private can be per-
formed.

8. Acknowledgments

This work is supported by European Communi-
tys H2020 Program under the scheme ’ICT-10-2015
RIA’, grant agreement #688364 ASSET: Instant
Gratiﬁcation for Collective Awareness and Sustain-

14

00.130.270.40.540.670.81NABCDEPrivacy Settings25.037.550.062.575.087.5100.0% Users00.030.050.080.110.140.16NABCDEPrivacy Settings25.037.550.062.575.087.5100.0% Users0.730.780.830.880.930.99NABCDEPrivacy Settings25.037.550.062.575.087.5100.0% Users00.030.060.10.130.160.19NABCDEPrivacy Settings25.037.550.062.575.087.5100.0% Usersable Consumerism16.

9. References

References

[1] Aggarwal, C. C. and Yu, P. S., editors (2008). Privacy-
Preserving Data Mining, volume 34 of Advances in
Database Systems. Springer US, Boston, MA.

[2] Beliakov, G., Pradera, A., and Calvo, T. (2007). Aggre-
gation functions: A guide for practitioners. In Studies in
Fuzziness and Soft Computing.

[3] Bennati, S. and Pournaras, E. (2018). Privacy-enhancing
aggregation of internet of things data via sensors grouping.
Sustainable Cities and Society, 39:387 – 400.

[4] Bhatia, J. and Breaux, T. D. (2015). Towards an infor-
mation type lexicon for privacy policies. In 2015 IEEE
Eighth International Workshop on Requirements Engi-
neering and Law (RELAW), pages 19–24.

[5] Book, R. V. (1974). Comparing complexity classes. Jour-
nal of Computer and System Sciences, 9(2):213 – 229.
[6] Burns, A. C. and Bush, R. F. (2014). Marketing research.

Pearson.

[7] Carmichael, L., Stalla-Bourdillon, S., and Staab, S.
(2016). Data Mining and Automated Discrimination: A
Mixed Legal/Technical Perspective. IEEE Intelligent Sys-
tems, 31(6):51–55.

[8] Du, W. and Atallah, M. J. (2001). Secure multi-party
computation problems and their applications. In Proceed-
ings of the 2001 workshop on New security paradigms -
NSPW ’01, page 13, New York, New York, USA. ACM
Press.

[9] Duan, Y. (2009). Diﬀerential privacy for sum queries
without external noise. In ACM Conference on Informa-
tion and Knowledge Management (CIKM).

[10] Duan, Y. and Yitao (2009). Privacy without noise. In
Proceeding of the 18th ACM conference on Information
and knowledge management - CIKM ’09, page 1517, New
York, New York, USA. ACM Press.

[11] Dwork, C. (2006). Diﬀerential privacy. Proceedings
of the 33rd International Colloquium on Automata, Lan-
guages and Programming, pages 1–12.

[12] Dwork, C. (2008). Diﬀerential Privacy: A Survey of
Results. In Theory and Applications of Models of Com-
putation, pages 1–19. Springer Berlin Heidelberg, Berlin,
Heidelberg.

[13] Dwork, C. and Roth, A. (2014). The algorithmic foun-
dations of diﬀerential privacy. Found. Trends Theor.
Comput. Sci., 9:211–407.

[14] Dwork, C., Smith, A., Steinke, T., and Ullman, J.
(2017). Exposed! a survey of attacks on private data.
Annual Review of Statistics and Its Application, 4(1):61–
84.

[15] Gentry, C. (2009a). A fully homomorphic encryp-
tion scheme. PhD thesis, Stanford University. crypto.
stanford.edu/craig.

[16] Gentry, C. (2009b). Fully homomorphic encryption us-
ing ideal lattices. In Proceedings of the Forty-ﬁrst Annual
ACM Symposium on Theory of Computing, STOC ’09,
pages 169–178, New York, NY, USA. ACM.

16http://www.asset-consumerism.eu/

15

[17] Gentry, C. (2009c). Fully homomorphic encryption us-
ing ideal lattices. Proceedings of the 41st annual ACM
symposium on Symposium on theory of computing STOC
09, 19(September):169.

[18] Gentry, C. (2010). Computing arbitrary functions of

encrypted data. Commun. ACM, 53(3):97–105.

[19] Gentry, C. and Halevi, S. (2011). Implementing Gen-
try’s Fully-Homomorphic Encryption Scheme, pages 129–
148. Springer Berlin Heidelberg, Berlin, Heidelberg.

[20] Gibson, J. D., Koo, B., and Gray, S. D. (1991). Filtering
of colored noise for speech enhancement and coding. IEEE
Transactions on Signal Processing, 39(8):1732–1742.
[21] Gkika, S. and Lekakos, G. (2014). Investigating the ef-
fectiveness of persuasion strategies on recommender sys-
tems. In 2014 9th International Workshop on Semantic
and Social Media Adaptation and Personalization, pages
94–97.

[22] Helbing, D. and Pournaras, E. (2015). Build digital

democracy. Nature, 527(7576):33–34.

[23] Kairouz, P., Oh, S., and Viswanath, P. (2017). The
composition theorem for diﬀerential privacy. IEEE Trans-
actions on Information Theory, 63(6):4037–4049.

[24] Kitchin, R. (2014). The Data Revolution: Big Data,
Open Data, Data Infrastructures and Their Conse-
quences. SAGE Publications.

[25] Krause, A. and Horvitz, E. (2008). A utility-theoretic
approach to privacy and personalization. In Proceedings
of the 23rd National Conference on Artiﬁcial Intelligence
- Volume 2, AAAI’08, pages 1181–1188. AAAI Press.
[26] Krutz, R. L. and Vines, R. D. (2010). Cloud Security: A
Comprehensive Guide to Secure Cloud Computing. Wiley
Publishing.

[27] Kursawe, K., Danezis, G., and Kohlweiss, M. (2011).
Privacy-Friendly Aggregation for the Smart-Grid, pages
175–191. Springer Berlin Heidelberg, Berlin, Heidelberg.
[28] Lerman, P. M. (1980). Fitting Segmented Regression

Models by Grid Search. Applied Statistics, 29(1):77.

[29] Li, C., Li, D. Y., Miklau, G., and Suciu, D. (2014). A
Theory of Pricing Private Data. ACM Transactions on
Database Systems, 39(4):1–28.

[30] Li, T. and Li, N. (2009). On the tradeoﬀ between pri-
vacy and utility in data publishing. In Proceedings of the
15th ACM SIGKDD international conference on Knowl-
edge discovery and data mining - KDD ’09, page 517,
New York, New York, USA. ACM Press.

[31] Makridakis, S. (1993). Accuracy measures: theoretical
and practical concerns. International Journal of Forecast-
ing, 9(4):527 – 529.

[32] McDonald, A. M. and Cranor, L. F. (2008). The Cost
of Reading Privacy Policies. A Journal of Law and Policy
for the Information Society, 4(3):543–568.

[33] Nin, J., Herranz, J., and Torra, V. (2008). On the
disclosure risk of multivariate microaggregation. Data &
Knowledge Engineering, 67(3):399–412.

[34] Nurmi, H. (2012). Comparing Voting Systems. Theory

and Decision Library A:. Springer Netherlands.

[35] Phan, N., Wang, Y., Wu, X., and Dou, D. (2016). Dif-
ferential Privacy Preservation for Deep Auto-Encoders :
An Application of Human Behavior Prediction. Proceed-
ings of the Thirtieth AAAI Conference on Artiﬁcial In-
telligence (AAAI-16), pages 1309–1316.

[36] Pournaras, E., Nikolic, J., Omerzel, A., and Helbing, D.
(2017). Engineering democratization in internet of things
data analytics. In 2017 IEEE 31st International Confer-
ence on Advanced Information Networking and Applica-

min (A) The minimum value of all elements of a
set, where ai ∈ A.
H (A) The Shanon’s entropy value for all elements
of a set, where ai ∈ A.
ˆa A suboptimal value that approaches an optimal
value, e.g. ˆa → max (A) or ˆa → min (A).
a∗ A new suboptimal value that approaches an ex-
isting suboptimal value ˆa.
n A user
N A set of users
t A time index
sn,t A sensor value generated in time t by the user
n
η a masking mechanism, which consists of a para-
metric algorithm that masks the sensor values of
a multiset S.
θη,k A parameterization k for a masking mecha-
nism η.
υ A uniformly distributed variable.
fη (S, θη,k) a privacy setting consisting of a mask-
ing mechanism η parameterized with parame-
ters θη,k and operating on a set of sensor val-
ues S. It produces a masked set of sensor values
fη (S, θη,k) = M , such that |S| = |M |.
Q A multiset of privacy values.
αi A parameter that weights the importance of
privacy factors for calculating the privacy values.
δ A parameter that denotes the amount of privacy
that the data producer sacriﬁces or gains over the
existing privacy.
c A parameter that denotes the amount of utility
that a data consumer sacriﬁces or gains over the
existing utility value.
U A multiset of utility values.
αi A parameter that weights the importance of
privacy factors for calculating the utility values.
γi A parameter that weights the importance of
utility factors for calculating the utility values.

tions (AINA), pages 994–1003.

[37] Pournaras, E., Nikolic, J., Vel´asquez, P., Trovati, M.,
Bessis, N., and Helbing, D. (2016). Self-regulatory infor-
mation sharing in participatory social sensing. EPJ Data
Science, 5(1):1–24.

[38] Prabhakaran, M. and Rosulek, M. (2008). Crypto-
graphic Complexity of Multi-Party Computation Prob-
lems: Classiﬁcations and Separations, pages 262–279.
Springer Berlin Heidelberg, Berlin, Heidelberg.

[39] Rao, P. V., Schuster, E. F., and Littell, R. C. (1975).
Estimation of shift and center of symmetry based on
kolmogorov-smirnov statistics. The Annals of Statistics,
3(4):862–873.

[40] Samarati, P. and Sweeney, L. (1998). Protecting privacy
when disclosing information: k-anonymity and its enforce-
ment through generalization and suppression. Technical
report, Computer Science Laboratory, SRI Internation.
[41] S´anchez, D., Domingo-Ferrer, J., and Mart´ınez, S.
(2014). Improving the Utility of Diﬀerential Privacy via
Univariate Microaggregation. In Lecture Notes in Com-
puter Science, pages 130–142. Springer, Cham.

[42] Shannon, C. E. (1948). A mathematical theory of com-
munication. The Bell System Technical Journal, 27(July
1928):379–423.

[43] Shokri, R. and Shmatikov, V. (2015).

Privacy-
Preserving Deep Learning.
In Proceedings of the 22nd
ACM SIGSAC Conference on Computer and Communi-
cations Security - CCS ’15, pages 1310–1321, New York,
New York, USA. ACM Press.

[44] Soria-Comas, J., Domingo-Ferrer, J., Snchez, D., and
Megas, D. (2017).
Individual diﬀerential privacy: A
utility-preserving formulation of diﬀerential privacy guar-
antees. IEEE Transactions on Information Forensics and
Security, 12(6):1418–1429.

[45] Spiegel, M. (1992). Schaum’s Outline of Statistics.
[46] Wang, Z., Fan, K., Zhang, J., and Wang, L. (2013). Ef-
ﬁcient Algorithm for Privately Releasing Smooth Queries.
[47] Wang, Z., Jin, C., Fan, K., Zhang, J., Huang, J., Zhong,
Y., and Wang, L. (2016). Diﬀerentially Private Data Re-
leasing for Smooth Queries. Journal of Machine Learning
Research, 17(51):1–42.

[48] Yao, A. C. (1982). Protocols for secure computations.
In Proceedings of the 23rd Annual Symposium on Foun-
dations of Computer Science, SFCS ’82, pages 160–164,
Washington, DC, USA. IEEE Computer Society.

Nomenclature

A A multiset of real values. Any capital letter is
treated as a multiset of real values, unless stated
otherwise.
g (A) a function that aggregates all elements of a
set A into a real value. e.g. for sum: gsum (A) =
(cid:80)|A|

i=0 ai

µ(A) The mean value of all elements of a set, where
ai ∈ A.
m (A) The median value of all elements of a set,
where ai ∈ A.
max (A) The maximum value of all elements of a
set, where ai ∈ A.

16

