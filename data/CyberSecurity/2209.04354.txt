Sen et al.

RESEARCH

On Speciﬁcation-based Cyber-Attack Detection
in Smart Grids
¨Omer Sen1,2*, Dennis van der Velde1,2, Maik L¨uhman1, Florian Spr¨unken1, Immanuel Hacker1,2, Andreas
Ulbig1,2, Michael Andres1,2 and Martin Henze3,4

*Correspondence:
o.sen@iaew.rwth-aachen.de
1High Voltage Equipment and
Grids, Digitalization and Energy
Economics, RWTH Aachen
University, Schinkelstraße 6, 52062
Aachen, Germany
2Fraunhofer Institute for Applied
Information Technology FIT,
Schloss Birlinghoven,
Konrad-Adenauer-Straße, 53757
Sankt Augustin, Germany
Full list of author information is
available at the end of the article

2
2
0
2

p
e
S
9

]

R
C
.
s
c
[

1
v
4
5
3
4
0
.
9
0
2
2
:
v
i
X
r
a

Abstract

The transformation of power grids into intelligent cyber-physical systems brings
numerous beneﬁts, but also signiﬁcantly increases the surface for cyber-attacks,
demanding appropriate countermeasures. However, the development, validation,
and testing of data-driven countermeasures against cyber-attacks, such as
machine learning-based detection approaches, lack important data from
real-world cyber incidents. Unlike attack data from real-world cyber incidents,
infrastructure knowledge and standards are accessible through expert and domain
knowledge. Our proposed approach uses domain knowledge to deﬁne the behavior
of a smart grid under non-attack conditions and detect attack patterns and
anomalies. Using a graph-based speciﬁcation formalism, we combine cross-domain
knowledge that enables the generation of whitelisting rules not only for statically
deﬁned protocol ﬁelds but also for communication ﬂows and technical operation
boundaries. Finally, we evaluate our speciﬁcation-based intrusion detection system
against various attack scenarios and assess detection quality and performance. In
particular, we investigate a data manipulation attack in a future-orientated use
case of an IEC 60870-based SCADA system that controls distributed energy
resources in the distribution grid. Our approach can detect severe data
manipulation attacks with high accuracy in a timely and reliable manner.

Keywords: Cyber Security; Cyber Physical Systems; Intrusion Detection Systems

Introduction
The paradigm shift that is taking place in the energy sector as part of the en-
ergy transition due to the increasing penetration of Distributed Energy Resources
(DERs) poses new challenges for grid operators, especially at the distribution grid
level [1]. To meet these challenges, a more active role of the distribution grid opera-
tor is required through increased expansion of sensors and actuators, which provide
telecontrol connections via Information and Communication Technologies (ICTs) to
resources such as controllable DERs [2]. This transformation from traditional grid
structures to intelligent networked energy information systems – Smart Grids (SGs)
– using ICTs not only opens up new opportunities and solutions to master the en-
ergy transition, but also new dangers that threaten resilience and cyber-security [3].
Reliable and secure grid operation increasingly depends on properly functioning
communication technologies and processes due to the high penetration of ICTs,
making it more vulnerable to failures and cyber-attacks [4]. In particular in the
context of Industrial Control System (ICS), which also includes process networks
of power grids, a threat landscape against cyber-attacks becomes apparent, which

 
 
 
 
 
 
Sen et al.

Page 2 of 20

is essentially characterized by a long lifetime of assets and the use of legacy com-
ponents with limited security mechanisms [5]: In 2015, unauthorized third parties
exploited these vulnerabilities to gain control of remotely controlled equipment, such
as circuit breakers, to disrupt the power supply of more than 225,000 customers [6].
To counter new threats such as cyber-attacks, and to protect basic security objec-
tives, i.e., conﬁdentiality, availability, and integrity, cyber-security countermeasures
are required, which are divided into preventive and reactive or active and passive
measures. Various guidelines and standards, e.g., the IEC 62531 series of stan-
dards [7], specify countermeasures such as the use of cryptography and authentica-
tion procedures in the telecontrol protocols. However, given the long-standing legacy
devices with performance and resource constraints, countermeasures with high per-
formance overhead involve high expenditures and costs to implement upgrades or
workarounds [8]. More passive and reactive security measures are network-based
Intrusion Detection Systems (IDSs), which passively record communication traﬃc
and perform attack detection within the process networks at selected points [9].

Intrusion detection methods can be broadly divided into blacklisting, in which ob-
servations are compared with known attack signatures, and whitelisting, in which
observations are compared with the established understanding of the system’s char-
acteristics under normal conditions [10]. For process networks with deterministic
network structures and physically plausible veriﬁable payloads, whitelisting is a
promising methodology to detect attacks or anomalies without prior knowledge of
patterns and signatures [11]. Furthermore, the impact of missing or hard-to-access
data on attacks against power grids on the eﬀectiveness of detection methods can
be reduced, as whitelisting approaches do not primarily require such data.

A challenge in applying a whitelisting approach is the need for a holistic cap-
ture of the characteristics of the system and its formalism, which includes tech-
nical and operational speciﬁcations of the infrastructure, as well as the behavior
of the devices under normally deﬁned states. Possibilities for this capture can be
machine-learning-based or domain-speciﬁc knowledge-based approaches [10]. The
ﬁrst approach is essentially characterized by the automated generation of a model
in deﬁned learning periods, which is trained and generated from recorded communi-
cation data [12]. In particular, in combination with Deep Packet Inspection (DPI),
industrial protocols such as IEC 60870-5-104 (IEC-104) are decomposed into rele-
vant ﬁelds to collect training data for models to detect the derivation of a standard
pattern and suspicious processes in the form of anomalies [13]. However, this may
imply a potential vulnerability to data manipulation during the learning phases and
incompleteness of non-observable legitimate situations such as maintenance in the
training datasets. In the second approach, speciﬁcations are deﬁned that are used as
a set of rules to deﬁne the characteristics of the system under normal conditions to
detect anomalies. E.g., the IEC 61850 standard, which is mainly used in substations,
describes data models and communication parameters in a format known as Sub-
station Conﬁguration Language (SCL), which can provide the Speciﬁcation Base
(SB) for normal conditions [14]. However, the thoroughly available data prescribed
by the standard’s data model is not applicable to all industrial protocols, such as
IEC-104. Thus, the Speciﬁcation-based IDS (SIDS) approach requires proper do-
main knowledge deposited and validated, but potentially achieves higher precision
rates compared to machine-learning-based IDS approaches [15, 16].

Sen et al.

Page 3 of 20

However, the holistic capture of infrastructure speciﬁcation and behavior of com-
ponents in normal states requires high manual eﬀorts in bundles of cross-domain
knowledge and their maintenance, resulting in technically complex implementations
without suitable accessible formalization. We identify the following challenges:

• Concentration of dispersed domain-speciﬁc knowledge in a holistic SB descrip-

tion of the infrastructure.

• Automated extraction of detection rules from infrastructure knowledge to

detect anomalies and suspicious events.

• Provision of explanations for issued alerts through coherent rule matching of

infrastructure knowledge and alert generation.

• Maintain high ﬂexibility in detection capabilities through modular enrichment

of infrastructure knowledge.

To address these challenges, we propose an approach for a SIDS, which, sup-
ported by an infrastructure speciﬁcation and Automata Models (AMs) for compo-
nent behavior w.r.t. communication ﬂows, captures characteristics of the SG for
cyber-attack detection. More precisely, our contributions are:

1 We identify relevant domain knowledge for the SIDS of cyber-attacks and
intrusions in SGs by extracting domain-speciﬁc data based on a Graph-based
Infrastructure Model (GIM) approach (Speciﬁcation Basis).

2 We present and describe a structured approach for detecting anomalies in
communication behavior in SGs process networks that uses a holistic GIM as
a SB and AMs for ﬂow consistency checks (Deep Packet Inspection).

3 We demonstrate and discuss the performance of our proposed approach
against diﬀerent attack scenarios in a physical testbed by evaluating the detec-
tion quality and performance within the scenarios (Evaluation & Discussion).

Smart Grid & Process-awareness in Detection
As the basis of our work, we describe the infrastructure speciﬁcation of process
networks based on Supervisory Control and Data Acquisition (SCADA), discuss
their security and related research work.

SCADA-based Process Networks

Based on the Purdue reference model [18], process networks based on SCADA
in SGs can be described as hierarchical control structures consisting of primary
technology, secondary technology, and ICT [2] as presented in Figure 1. Divided into
several levels, the primary technology, such as circuit breaker switches, is monitored
and controlled utilizing secondary technology, such as sensors and actuators.

At the lowest level of the control hierarchy, the infrastructure is divided into the
Operational Technology (OT) network (equipment and systems with telecontrol
connection through Wide Area Network (WAN)). Directly connected to the OT
network is the SCADA network (control systems and communication stations with
operator stations). Connected via ﬁrewalls, a security-controlled level, the Demili-
tarized Zone (DMZ), is present (logically segmented area between corporate oﬃce
and SCADA network). Finally, the corporate network is connected to DMZ.

The primary facilities are connected to the OT network through Intelligent Elec-
tronic Devices (IEDs) used for control and measurement tasks, aggregated within

Sen et al.

Page 4 of 20

Figure 1 Illustration of the SG infrastructure based on the Purdue reference model, representing a
future-oriented SCADA system that is connected to the primary equipment via dedicated and/or
public communication infrastructure [17]. The right side represents the graph-based formalism of
the infrastructure as a SB [4].

the control hierarchy by Remote Terminal Units (RTUs). Data are then forwarded
to the SCADA system through the OT network using appropriate OT protocols
such as IEC-104 [19] or Modbus [20]. Within the OT network, the Master Terminal
Unit (MTU) counterpart to the RTU acts as a gateway for the SCADA system.

Cyber-Security in Process Networks
In the European energy sector, the IEC-104 protocol is often used to monitor and
control geographically widely distributed processes [21]. IEC-104 as a legacy indus-
trial protocol does not provide security features such as encryption or authentica-
tion [7]. Therefore, without an encryption or authentication mechanism, unautho-
rized third parties can intercept critical IEC-104 traﬃc and potentially endanger
the grid. E.g., the attacker can intercept existing communication channels by a
Man-in-the-Middle (MITM) attack or establish new connections to manipulate the
traﬃc. Thus, the attacker would be able to read, modify, inject, or discard new or
sent messages between the intercepted or newly connected endpoints [22].

To address the critical security issues within the process network, especially the
legacy protocols, the IEC 62351 standard discusses new security principles and
requirements. E.g., the IEC 62351 standard requires secure end-to-end communica-
tion using the Transport Layer Security (TLS) protocol, which provides secure key
exchange, encryption, and authentication [23]. However, large-scale implementation
and adaptation of the new standards in traditional process networks are hampered
by the large number of resource-constrained devices, which may jeopardize service
availability. These approaches can overwhelm resource-limited ﬁeld devices such as
RTUs or IEDs and cause higher communication latency, preventing SCADA appli-
cations from meeting real-time requirements [8].

Diﬀerent studies investigated the performance issues caused by TLS protocol inte-
gration, and negative impacts on the performance of industrial protocol communica-
tions (e.g., IEC 61850, IEC-104) have been observed [24]. Power grids often contain

Sen et al.

Page 5 of 20

performance-limited assets with long depreciation periods that cannot be replaced
or upgraded without high costs, which require legacy compliant solutions [25]. IDS
can provide passive security via detective capabilities to identify possible attack
indicators or anomalies that do not actively interfere with the process network [26].
There are several IDS approaches to identify potentially suspicious events, either
by comparing observation with knowledge that represents normal system behavior,
or by directly comparing the signature with known classiﬁed attacks [27].

However, the latter approach requires attack data for detection, which limits ﬂex-
ibility in detecting unknown attacks such as zero-days [28]. Moreover, comparing
observations with known normal conditions based on trained models using data-
driven machine learning approaches also has the disadvantage of low accuracy and
limitation due to the scenarios included in the training data [29]. Therefore, a
speciﬁcation-based approach that relies on veriﬁed expert knowledge has the po-
tential to provide high accuracy in detection and reduce the ﬂexibility constraint
by relying on domain-speciﬁc knowledge. The challenge with SIDS approaches is to
provide a standardized SB for diﬀerent SG use cases, based on which anomaly de-
tection conditions can be automatically derived. Therefore, in this paper, we present
a SIDS that uses a deﬁned GIM to automatically derive the set of rules.

Related Work
Many studies and research works have investigated detection mechanisms based on
process-awareness of Cyber-Physical System (CPS) for their suitability as IDS.

One of these research directions involves addressing process-aware IDSs that eval-
uates the attractiveness and criticality of ICS devices that underlie industrial pro-
cesses that could be modiﬁed to achieve adversary goals [30]. On this basis, the
necessary signatures or heuristics that an adversary will leave as traces in its com-
promise attempt are identiﬁed. Another research approach uses the degradation
and functionality features of control signals to extract the meaning of the process of
commands and determine the nondegradation pattern of the control signal within
the action chain [31]. The goal is to detect the unlegitimacy of the control signal
issued by IED to the action chains before it controls the equipment.

Toward a holistic coverage of CPSs, there are approaches that replicate the pro-
gram states from physical devices to their digital twins using passive data sources
and system speciﬁcations [11]. Using stimuli and replication in a virtual environ-
ment, detailed testing is enabled in the context of IDS. More advanced research
approaches address cyber-attack classiﬁcation prepared in laboratory experiments
and performed in tests to design various IDS rules [32]. The approach is based on
rule generation algorithms in a distributed architecture to accommodate SCADA
traﬃc.

Another approach pursues process-aware IDS by modeling ICS/SCADA commu-
nication using probabilistic automata [33]. The model represents normal communi-
cation with a small number of states and edges whose semantics are extracted from
the headers of the protocol and detect state-based anomalies. In the context of state
interpolations in the automaton, an approach is presented that uses a combination
of fuzzy interpolation with fuzzy automata [34]. Using automata theory and the
fuzzy system for reasoning as part of the detection mechanism, a state transition
rule base method is implemented to detect attacks.

Sen et al.

Page 6 of 20

Regarding the anomaly detection methods for IEC-104, some multivariate access
control and outlier detection approaches have been proposed using extracted packet
information and communication statistics through Scapy [35] and CICFlowMe-
ter [36] for anomaly detection [37]. In the area of statistically based anomaly de-
tection on IEC-104, the work in [38] presents a 3-value detection method that in-
dependently compares the number of packets transmitted in three consecutive time
windows against a statistical proﬁle and reports anomalies when a deviation from
the speciﬁed range is detected. To address the problem of missing labeled data, the
work of [39] explores the use of unsupervised machine learning on IEC-104, in par-
ticular, one-class support vector machines, isolation forest, histogram-based outlier
detection, and k-nearest neighbor are investigated.

When addressing security issues within the protocol IEC-104, research in [40] ex-
amined the detection qualities of a machine learning-based detection system com-
pared to a misuse-based system such as Snort [41]. The result undermines the
ﬂexibility-accuracy dilemma described earlier, where the misuse-based system has
high accuracy but low ﬂexibility, whereas the machine learning-based system has
higher ﬂexibility but lower accuracy. Furthermore, the challenge with automated
machine learning-based detection systems also lies in their explainability [42], which
challenges the plausibility check of the output [43].

Although the proposed approaches provide diﬀerent mechanisms to combine pro-
cess knowledge with cyber-security, they still require signiﬁcant additional analytical
resources to provide the necessary information for their functionality. E.g., in addi-
tion to the infrastructure speciﬁcation for which the operator can provide necessary
knowledge, additional eﬀorts must be made to develop an understanding of likely
attack targets, details about stimuli, statistical data, or vendor-speciﬁc technical
speciﬁcations such as equipment degradation that are often inaccessible. There-
fore, our approach is entirely based on the utilization of domain-speciﬁc knowledge,
which is accessible from standards and infrastructure knowledge from grid oper-
ators. While the implementation of AMs enables the detection of inconsistencies
within processes and ﬂows, it does not take into account the semantics of the data
points involved in the traﬃc. Therefore, the intrusion detection capabilities of our
proposed SIDS rely not only on automata-based detection, but also on semantic
veriﬁcation of the data points. The GIM encapsulates the semantics of the data
points, which is part of advanced detection. Through the holistic formulation of a
graph-based speciﬁcation foundation that provides the required overall understand-
ing of the process, semantics, and communication of SG, we design a process-aware
SIDS.

Speciﬁcation-based Intrusion Detection
In this section, our approach of a SIDS for SGs is presented.

In general, our approach is based on SB derived from GIM that encapsulates
domain-speciﬁc knowledge. Using SB, monitored network traﬃc is checked against
SB, with a violation resulting in a speciﬁc and explainable alert. Furthermore, the
consistency of communication behavior is checked against protocol-speciﬁc AMs to
ensure that the industrial packet ﬂows comply with the state transitions. Thus, in-
trusion detection is performed using a mixture of approaches leveraging the domain
knowledge of a GIM.

Sen et al.

Page 7 of 20

Figure 2 This illustration presents the SIDS approach to observe network traﬃc based on
speciﬁcations and indication of traﬃc, which is a hybrid approach of speciﬁcation-based rule
matching and behavior consistency checking via a Mealy automata.

Framework Overview
Our proposed SIDS (cf. Figure 2) is a network-based SIDS that checks for the
presence of malicious content in the various layers of the network protocol. The
SIDS detects anomalies based on the captured traﬃc by checking information
from the packet headers and payloads within the industrial protocol stack (e.g.,
Ethernet/IP/TCP/IEC-104) and discrepancies in the packet ﬂow using Mealy au-
tomata [44]. The Mealy automaton has no accepting states, and the sequence of
outputs from the sequence of transitions leads to a reactive system with transitions
as its core and is therefore a more appropriate model for protocols [45]. Based on a
variation of Angluin’s L* algorithm that generates Mealy automata [46], the state
machine model is used to perceive the communication behavior.

In this paper, we focus on the IEC-104 protocol, which is a widely used standard in
the European energy sector for monitoring and controlling tasks in TCP/IP-based
networks [21]. However, the SIDS is not limited to the contents of the application
layer of IEC-104 traﬃc, but considers all layers that are included in typical TCP/IP-
based IEC-104 packets. In particular, packets that use IP at the network layer, TCP
at the transport layer, and IEC-104 at the application layer.

To distinguish between illegitimate and legitimate traﬃc, the SIDS uses a set of
rules deﬁned in a machine-readable input ﬁle derived from the SB (cf. Section Spec-
iﬁcation Basis). Here, speciﬁcations are deﬁned as sets of information that represent
the known parameters and characteristics of the SG infrastructure to some extent.
Anything speciﬁed in SB is considered valid; anything that does not conform to a
speciﬁcation is considered malicious traﬃc.

When observing network traﬃc, the SIDS examines each packet using DPI (cf.
Section Deep Packet Inspection). In this context, the conformance of the data packet
to the SB, such as the protocols used, protocol ﬁelds, address validation, and payload
consistency is checked. After the initial inspection of the packet, the next inspection

Sen et al.

Page 8 of 20

step evaluates connection attributes and states. Each connection is deﬁned in SB,
specifying the properties of the connection, and two Mealy automata modeling the
connection endpoints.

Regarding IEC-104 traﬃc within the SCADA network, the roles of endpoints are
represented as MTU and RTU. For correct semantic mapping of packets, the mapper
component is responsible for translating the packet contents into an input symbol
for the Mealy automata (cf. Section Automata Model). After the mapper receives
the corresponding input symbol, the connection object passes it to the instanti-
ated AMs representing the connections. Because of the use of Mealy automata, it
provides immediate feedback by returning an output symbol. If the output symbol
indicates an error or suspicious behavior, the connection object triggers the alert
generator with a speciﬁc alert reason to issue an alert (cf. Section Alert Genera-
tion). Alert generation is triggered by various components for diﬀerent reasons. The
cyber threat information database represents the collection of alerts combined with
the speciﬁcation of the infrastructure, which is part of a higher-level correlation as
presented in our previous work [47, 48].

Speciﬁcation Basis
Based on a formal GIM of SG [4], we extract the SB for the SIDS through the
explicit data model deﬁnition. Thus, whitelists can be created from the data model
and anomaly detection through the whitelist conﬁgurations. This includes commu-
nication (e.g., link quality, routing, packet ﬂows), authentication (e.g., MAC/IP
addresses), and process data (e.g., control, measurement, state - plausibility). Ta-
ble 1 describes the domains and information ﬁelds of the SB.

Table 1 Domain-speciﬁc attribution of captured traﬃc.

Domain
Communication

Asset

Operation

Field Attribution
Address matching of packets (L2-L4, L7).
Connection and established communication channel (client/server,
protocol, port).
Packet ﬂow according to protocol (L4, L7).
Data point matching.
Integrity at data point level.
Role-based veriﬁed operations.
Technical assets boundaries.
Technical command execution capability.

The SB provides information on the behavior of communication, assets, and op-
erating limits, from which rules can be derived. In the area of communication, e.g.,
the addresses of the relevant ﬁelds of the protocol layer (L2-L4, L7), such as the
MAC address, the IP address, the Port number, and Information Object Address
(IOA) of the IEC-104 protocol, are speciﬁed. Additionally, legitimate connection
channels and routes are deﬁned which specify allowed communication channels be-
tween the endpoints with protocol types and Port numbers. In the dynamic scope,
the standards assigned to the application layers (L7) are deﬁned accordingly, which
then sets the corresponding predeﬁned AMs for attack detection. E.g., for IEC-104,
AMs are used that represent the data transaction process during communication
initialization and conﬁrmation of control commands.

Sen et al.

Page 9 of 20

The use of protocols is also considered in the SB. E.g., the use of certain protocols
such as SSH can either be whitelisted or even restricted to certain periods such
as maintenance times on weekends. Protocol behavior is observed with AMs that
represent valid communication ﬂows for speciﬁc protocols. Currently, there is only
one model for IEC-104 traﬃc, but in general other state-full protocols can also be
modeled through AMs. The SB can also be extended to include other criteria such
as the maximum Round Trip Time (RTT) for TCP packets.

In the context of resource behavior, data points are taken from SB and veriﬁed
for legitimacy within industrial telecontrol protocols, that is, regarding known data
points with correct addressing. Consequently, the integrity of the data points is
deﬁned according to SB, if the data characteristics within the data points (e.g. IOA
in IEC-104) are correctly assigned to the asset in the right communication direction.
This provides the base for role-based veriﬁcation of asset operations, in which the
legitimacy of operation options of assets is also deﬁned by the data points (e.g.,
sensors can send measurements but not commands).

In the scope of operational behavior, the technical operating boundaries of as-
sets (e.g., maximum power rating for setpoints), and the execution plausibility of
commands are also extracted from the domain-speciﬁc knowledge of the SB (e.g.,
nominal power-dependent plausibility range for the cos φ setting of inverters [40]).

Deep Packet Inspection
The functionality DPI is a key feature of SIDS and is anchored in the central orga-
nizer and forwarder of all internal intrusion detection processes (cf. Figure 2). After
a packet is received, it is categorized depending on the packet layers it contains.
Relevant packets are those that correspond to one of the protocols described in the
SB, e.g., IEC-104 or SSH packets.

The categorization determines the checks that are performed on each packet.
Packets that are classiﬁed as irrelevant are ignored, while the contents of packets
containing industrial protocols such as IEC-104 are checked more thoroughly. Al-
though basic address detection and veriﬁcation are performed at the ﬁrst level of
DPI, advanced and contextual checks are performed as part of connection-related
checks. Each packet associated with a particular connection object is forwarded to
the corresponding checks. Connection objects represent a connection between two
endpoints. Each of the endpoints is assigned speciﬁc addresses for each network
layer, including the application layer, e.g., the IEC-104 protocol, for which an AM
is assigned. For IEC-104 traﬃc, this means that each connection contains two AMs,
an MTU model, and an RTU model.

When a packet is assigned to a connection by the DPI component, all addresses
are checked for consistency, both on the sender and the receiver side. In addition,
the ﬂow control of the IEC-104 layer is also checked. For this task, connections store
the current packet sequence control counters for each endpoint individually. When
a connection receives a packet containing sequence control information, namely
packets containing Application Protocol Control Information (APCI) frames in I-
frame and U-frame format, the connection objects are checked. They are checked
for both endpoints whether the sequence numbers match the current counters and
transmission direction. In addition, an I-framed APCI indicating an Application
Service Data Unit (ASDU) is checked for technical speciﬁcation conformity.

Sen et al.

Page 10 of 20

Figure 3 Illustration of the rule generation process to automatically generate the SB based on the
infrastructure model.

After all addresses, traﬃc sequence, and technical speciﬁcations are checked, the
packet is passed to the packet mapper. The mapper maps the packet to an input
symbol of the automata alphabet as an automata input. If any of the checks of DPI
fails, e.g., the contained address information is unknown or the packet cannot be
assigned to a connection, an alert is issued.

The automated process of generating the SB based on the infrastructure model is
broken down into several components as shown in Figure 3. The input consists of
an GIM, which describes the infrastructure in the respective domains of power grid,
IT, and OT devices. Each of these domains contains domain-speciﬁc information,
such as asset data points, component networking, and their operational function
in the process. In addition, a conﬁguration is required that speciﬁes the rules that
will be used later to detect attacks. The rule conﬁguration speciﬁes the type of
devices of interest for which rules are to be created that contain attributes and
their environmental constraints.

To achieve the desired detection quality, the SIDS must be correctly conﬁgured
by the given input. The prerequisite for this is SB, which is to be generated by the
rule generator. The task of the rule generator is to convert a GIM into a SB based
on a given conﬁguration. This SB represents the set of rules that the SIDS uses to
decide which communication and payload content is valid.

The rule generator consists of three modules, each serving a diﬀerent purpose.
The importer is used to read the respective inputs - the GIM and the conﬁguration
- and prepare them for further use. The rule manager is the main module of the
rule generator and is responsible for reading the relevant attributes from the GIM
and converting them into rules based on the speciﬁcations in the conﬁguration.
Finally, the exporter summarizes the generated rules in a SB that can be read by
the SIDS. After generating the SB, the SIDS can apply the previously generated
speciﬁcations to the packets of the captured network communication. As soon as

Sen et al.

Page 11 of 20

Figure 4 Exemplary illustration of the mapper, that maps IEC-104 data packets to input symbols
for the automata, which here, in an example for the MTU endpoint connection, generates
according to he protocol standard a Mealy AM to stateful monitor e.g., the data transaction.

the given speciﬁcations are violated or the recorded communication deviates from
the expected normal behavior, alarms are triggered.

Automata Model
AMs are used to dynamically check multiple packets within industrial protocol
traﬃc (cf. Figure 4). The goal of AMs is to model ﬂow-based processes within the
communication process according to the selected protocol, such as IEC-104. The
states of the AM represent, e.g., the start of a connection and data transmission,
the tracking of pending acknowledgments of commands and measured values, and
the stop of the data transmission. Packets identiﬁed as industrial protocol traﬃc are
processed by the mapper component, which maps the packets to their corresponding
input alphabet counterparts for the AM.

The mapper translates the contents of the IEC-104 layers into input symbols for
the MTU and RTU automata used within the connection object. A data packet
may contain multiple instances of IEC-104 layers. The mapper then returns an
ordered list of symbols mapped from these packets. The symbol is mapped based
on the contents of the decoded IEC-104 layer. Within this process, the format of the
observed APCI frame is determined, where the APCI frame can have three diﬀerent
formats: U-frame, I-frame, and S-frame. Depending on the determined format, the
frames are checked for additional ﬂags that indicate membership in speciﬁc groups
of packets mapped to special input symbols. Subsequently, these input symbols
represent the set of possible input symbols for the IEC-104 automata. Additionally,
an error symbol is used to indicate that the packet does not match any of the criteria
used to assign it to one of the known input symbols.

According to the IEC-104 protocol standard, two transition systems are modeled,
one representing the MTU stations of SCADA networks and one modeling RTU
station for each connection. The use of this role-based modeling approach allows
the states within the AMs to be suﬃciently diﬀerentiated, such as the states of con-
nection establishment and valid data transmission. To deﬁne the processes within

Sen et al.

Page 12 of 20

Figure 5 Example illustration of packet ﬂow conformance checking based on the MTU automaton
model, showing a simple MTU and RTU communication scenario.

the connection procedure of communication more accurately, the models must also
be able to determine whether an input is sent or received. To this end, each packet
categorization is extended to include a preﬁx indicating whether the packet was
sent or received. Both automata use the same input alphabet and state sets, but
diﬀer slightly in some transitions.

After receiving an input symbol and using a transition, the automata returns an
output indicating whether the input results in a suspicious state or whether this
packet type is invalid for the current protocol procedure. Internally, this is done by
a status variable within the automaton object. When certain transitions are used,
they trigger functions that change the internal state, which is always given as a
return value after processing the input. E.g., the AM requires the generation of 15
diﬀerent input symbols for seven diﬀerent packet types. The packets are recognized
by the mapper and then extended by a preﬁx indicating the direction of transmission
and an error input. These transitions do not change the internal state variable, so
the output would be valid in the sense of Mealy automata.

All other transitions that trigger a change in the internal state variables of AMs
are undeﬁned behavior, i.e., a violation of the protocol procedure. Therefore, the
output for each of these transitions is invalid. The error input indicates that the
packet was not recognized as belonging to one of the deﬁned packet types, therefore
cannot be processed, and thus leads to an alert.

Figure 5 illustrates an example of how AMs works to check the consistency of
normal traﬃc ﬂow in the monitored communication channel. As an example, a
data transmission sequence is used that contains an interrogation operation, where
the MTU initiates the data transmission. After starting the data transmission,
both automata reach the “STARTED” state, which allows I-frames to be sent. The
MTU sends an interrogation command to RTU, which is acknowledged with the
ﬁrst I-frame back to MTU. After the ﬁrst I-frame to the MTU, the RTU sends
several I-frames containing the measurement data. The MTU acknowledges the
packet reception with an S-frame indicating that all previous frames have been

Sen et al.

Page 13 of 20

sent correctly and that both automata should now be in the “STARTED” state,
since both have no unacknowledged frames. Since the traﬃc ﬂow conforms to the
automaton model, the conformity of the packet ﬂow in this example is therefore
also classiﬁed as correct by SIDS.

Alert Generation
Alerts are the notiﬁcations of the SIDS that are triggered when certain packets
violate the speciﬁcation. They are issued by the alert generator component of SIDS
and recorded in a machine-readable log ﬁle.

All alerts are written to a log ﬁle that assigns a unique running ID to each new
alert. Each alert begins with an ID tag, followed by the attributes speciﬁed in
Table 2.

Table 2 Alert output from SIDS

Alert Field
Alert Type
Threat Level
Timestamp

Alert Reason

Packet Content Informa-
tion

Description
The type of alert indicates what type of alert has occurred.
Low, medium or high threat levels.
Each warning issued contains the timestamp when the warn-
ing was created.
A textual reason that triggered the creation of this warning
message.
Detailed information about which data packet content is
related to the issued alert.

To illustrate how alert messages are generated, we provide an example in Listing 1.
We use Metasploit’s IEC-104 Client Utility Module as the basis for this sample
scenario [49]. Therefore, the scenario underlying this example is that a new endpoint
with unknown IP and MAC address acts as a MTU and attempts to establish a IEC-
104 connection to a RTU. In doing so, the new MTU also sends a control command
specifying a new setpoint, such as a new power injection for a Photovoltaic (PV)
inverter. In this example, the generated alarms cause anomalies regarding the IP
and MAC addresses of the new endpoint, as these are not speciﬁed in the SB.
In addition, the connection is also not valid because the communication channel
between the new endpoint and the RTU is also not speciﬁed. Thus, any commands
sent from the new endpoint to the RTU are also considered invalid. Furthermore,
the control command contained a setpoint that also violates the speciﬁed allowable
range of valid setpoints. Thus, all active interactions between the new endpoint and
the RTU are classiﬁed as anomalies and output as alerts.

[ ALERT 0 ]
a l e r t t y p e = IP MISMATCH
t h r e a t l e v e l = h i g h
timestamp = 1 4 . 0 4 . 2 0 2 2 10 : 4 7 : 0 9
a l e r t r e a s o n = IP o f

t h i s p a c k e t

i s

unknown: 1 7 3 . 2 4 . 0 . 3
p a c k e t i n f o = ETH / IP / TCP /

IEC104−U

[ ALERT 1 ]
a l e r t t y p e = PORT MISMATCH
t h r e a t l e v e l = h i g h
timestamp = 1 4 . 0 4 . 2 0 2 2 10 : 4 7 : 0 9
a l e r t r e a s o n = One o f

t h e P o r t s o f

t h i s p a c k e t

i s unknown: 59478

p a c k e t i n f o = ETH / IP / TCP /

IEC104−U

[ ALERT 2 ]
a l e r t t y p e = NO SUCH CONNECTION
t h r e a t l e v e l = h i g h
timestamp = 1 4 . 0 4 . 2 0 2 2 10 : 4 7 : 0 9
a l e r t r e a s o n = C o n n e c t i o n d o e s n ot

e x i s t

i n w h i t e l i s t i n g d a t a !

p a c k e t i n f o = ETH / IP / TCP /

IEC104−U

[ ALERT 3 ]
a l e r t t y p e = INVALID OPERATION
t h r e a t l e v e l = h i g h

Sen et al.

Page 14 of 20

timestamp = 1 4 . 0 4 . 2 0 2 2 10 : 4 8 : 0 0
a l e r t r e a s o n = Send p a c k e t c o n t a i n s

i n v a l i d o p e r a t i o n f o r

t h e

a l e r t r e a s o n = A c t i v e c o n t r o l

command c o n t a i n s
s e t p o i n t !

i n v a l i d

e n d p o i n t !

p a c k e t i n f o = ETH / IP / TCP /

IEC104−I

[ ALERT 4 ]
a l e r t t y p e = INVALID SETPOINT
t h r e a t l e v e l = h i g h
timestamp = 1 4 . 0 4 . 2 0 2 2 10 : 4 8 : 0 0

p a c k e t i n f o = ETH / IP / TCP /

IEC104−I

Listing 1 Example of alert messages generated
by the alert generator.

Overall, our SIDS, which automatically derives its SB based on a formal GIM, is
designed to detect explainable anomalies from diﬀerent domains. Speciﬁcally, the
domain-speciﬁc knowledge used for anomaly detection is extracted as appropriate
rules from the GIM, which represents the operator’s existing knowledge of its infras-
tructure, without requiring the knowledge of cyber-security experts. Moreover, the
dynamic nature of communication behavior is also validated by AMs with respect to
protocol conformance and ﬂow consistency. Subsequently, both the dynamic packet
ﬂow and attributes, as well as the protocol ﬁeld values within the payload, are val-
idated and checked for potential inconsistencies or speciﬁcation violations. Thus,
our SIDS detects critical violations of legitimate processes and infrastructure speci-
ﬁcations at both the communication and operational levels, relying only on existing
and available knowledge without requiring external expertise.

Evaluation & Discussion
To demonstrate and discuss the performance of our proposed SIDS, we evaluate its
detection quality in a physical testbed for attack and non-attack scenarios.

Smart Grid Testbed Setup
We evaluate SIDS in a cyber-physical testbed as shown in Figure 6 that is based on
our previous work [50]. The testbed replicates an MV / LV grid consisting of physical
components networked through a dedicated ICT infrastructure. Therefore, neither
simulations nor virtualized components are involved. Since our SIDS is designed
to monitor speciﬁc communication channels within deﬁned network segments and
thus acts more like a sensor with more than one entity deployment, the limited
complexity of the testbed does not limit the scope of the study.

In our test setup, we use electrical equipment such as a 640 kVA secondary sub-
station, 22 kWh Battery Storage System (BSS), 12 kVA and 36 kVA PVs, and
several resistive/inductive loads. The power system topology consists of two strings
to which the DERs and loads are connected, and on which we can measure cur-
rent and voltage via integrated three-phase measuring points. We control the DER
through their Modbus interface via RTUs, which is provided by their respective
inverter. Following a SCADA network, the testbed also includes a process network
consisting of the ICT infrastructure and the control room. The control room repre-
sents an MTU that sends IEC-104 control and query commands to RTUs.

We consider diﬀerent attack scenarios based on attacks that have already gained
access to the process network. The external attacker represents a new entity within
the system with unknown IP and MAC addresses. Contrary, the MITM attack
intercepts the communication between the control room and the selected RTUs.

Sen et al.

Page 15 of 20

Figure 6 Our setup of a SG testbed replicates a distribution grid with DERs and ICT
infrastructure for control and monitoring.

In addition, our SIDS approach is deployed in the process network at the SCADA
switch, where traﬃc is monitored via a mirrored SPAN port or dedicated network
taps. Active inline network taps are used between the SCADA node and switches
to capture SCADA traﬃc and perform timestamping with a high resolution of
8 ns [51]. The mirrored SPAN port allows all traﬃc passing through the target
switch to be captured, but with lower timestamp resolution and possibly more jitter.
Preferably, dedicated network taps are used for the main communication channel
between the MTU and RTU to be monitored. Thus, SCADA-related network traﬃc
is continuously forwarded to SIDS for intrusion detection.

Methodology
We use the cyber-physical testbed and attack scenario described in Smart Grid
Testbed Setup. In the ﬁrst scenario without attack induction, all stations and traﬃc
are within the speciﬁcation, where normal protocol behavior of a system operation
under normal conditions is replicated (Scenario 1). We use this scenario to examine
the SIDS under normal operation conditions with an average traﬃc volume.

In the second scenario, we investigate the detection quality of SIDS under attack
conditions. To this end, this scenario is divided into replicating an attack from
outside the testbed with limited knowledge of the internal network and data points
(Scenario 2-a) and an attack with sophisticated knowledge (Scenario 2-b).

Scenario 2-a contains a communication attempt with unknown addresses in L2 and
L3 (e.g., MAC and IP address) to RTU, sending an interrogation command to query
measurement values. Scenario 2-b is executed as a MITM-based False Data Injection
(FDI) attack in which two diﬀerent types of packet are injected. The ﬁrst type of
injected packet contains an IOA that is not associated with the corresponding asset
in the speciﬁcation (Scenario 2-b-I). In contrast, the second type contains an IOA
included in the speciﬁcation and also regularly used in the normal conversation of
MTU and RTU with the correct mapping of devices (Scenario 2-b-II). However,
the measurements transmitted with these packets contain measurements that are
overlaid with small noise within the range of the technical speciﬁcation.

Sen et al.

Page 16 of 20

We also measure the performance of SIDS in large traﬃc volumes per connection
in a short time. An important requirement for this investigation is that SIDS always
observes the beginning of the connection to use AMs for correct context and packet
sequence tracking. Otherwise, it cannot ﬁnd the correct initial state and therefore
produces alerts for almost all data packets.

To evaluate the quality of detection, we rely on the confusion matrix and the

performance metrics derived [52]. Thus, we measure the following metrics:
• True Positive (TP): event correctly classiﬁed as attack indicator
• False Positive (FP): event incorrectly classiﬁed as attack indicator
• True Negative (TN): event correctly not classiﬁed as attack indicator
• False Negative (FN): event incorrectly not classiﬁed as attack indicator
To evaluate the performance of our approach, we also use the following telemetry
data of the captured network traﬃc in the scenarios.
• L2: MAC source and destination addresses
• L3: IP source and destination addresses, checksum
• L4: TCP sequence and acknowledge numbers, port number, checksum, RTT
• L7: IEC 104 protocol ﬁelds of U- and I-frames

Evaluation of Performance & Classiﬁcation Accuracy

Table 3 Confusion Table of Experiments.

Scenarios
1
2-a
2-b-I
2-b-II

TP
0
115
10
0

TN
200
0
0
0

FP
0
0
0
0

FN
0
0
0
10

Our results are presented in Table 3. Within Scenario 1, our results indicate that
SIDS does not generate alerts caused by addressing, automata errors, or sequence
number violations. The only parameter that may cause slight variations in the False
Positive Rate (FPR) is the maximum RTT parameter, which in our experiments
was parameterized in the range of 150ms and 200ms. Narrower ranges caused more
FPs in our experiments due to varying RTT in the communication channels. With
this adjustment, using a suﬃciently large value for the maximum RTT (e.g., upper
95% conﬁdence interval of the RTT variance), no FPs were produced.

In Scenario 2-a, the attacker mimics the normal behavior of a MTU by starting
a conversation and sending a query command for the measurement data. The RTU
responds with measurement data. All 115 malicious packets were correctly detected.
Within Scenario 2-b, we inject a total of 20 packets (10 packets from each of the
sub-scenarios). SIDS was able to correctly classify the 10 packets from scenario 2-b-I
(TP) due to incorrect addressing of IOA. Scenario 2-b-II represents an edge case
where the attacker performs perfect spooﬁng and adheres to the legitimate speciﬁ-
cation of the system. Therefore, the 10 injected packets from Scenario 2-b-II were
not correctly detected by SIDS, showing the limits of our approach (FN). However,
limiting the range of attack actions so that the attacker can evade detection can
shift the impact trajectory of the attack into a treatable scope. Subsequently, a
larger scope of attack is required to cause more impact, imposing more actions on
the attacker that can potentially reduce their stealthy movement.

Sen et al.

Page 17 of 20

To assess processing performance, we also evaluated the processing time of packets
with and without speciﬁcation compliance (Scenario 1 and Scenario 2). For compli-
ance with the speciﬁcation (Scenario 1), each packet monitored by SIDS is processed
on average at 0.3ms with an insigniﬁcant standard deviation. With invalid traﬃc
(Scenario 2), each packet is processed in an average of 1.5ms with also insigniﬁcant
standard deviation. The reason for this discrepancy is that when a packet violates
the speciﬁcation, several steps are triggered in the reporting mechanism to extract
alert-relevant information, which is written to the alert log.

In addition, we have also performed a comparison with other intrusion detection
approaches, which is shown in Table 4. However, due to the lack of a standard-
ized benchmark evaluation for countermeasures against cyber-attacks in SCADA
systems, the comparison is qualitative. The comparison compares our SIDS quali-

Table 4 Comparison with other intrusion detection approaches.

Environ.
simulation

Att.
mixed

Mat.
M

Exp.
L

Det.
M

Perf.
L

Ref.
[53]

[54]

[55]

[56]

[57]

[58]
[59]

our
SIDS

Tech.
ontology

Proto.
Modbus
TCP
Modbus
machine-
learning
TCP
speciﬁcation IEC-
104
speciﬁcation IEC

testbed

protocol H

simulation

channel H

testbed

packet

H

automata

semantic
time series

61850
Eth
IP
DNP3
IEC-
104
speciﬁcation IEC-
104

/

testbed

location H

simulation
simulation

control
H
SCADA L

testbed

FDI

H

H

L

M

H

L
L

H

M

M

L

L

M
M

H

H

H

H

N/A

L
N/A

M

tatively with other approaches based on the following metrics:
• Tech.: describes the detection basis of the methodology
• Proto.: describes which protocol is the main target of protection
• Environ.: describes whether a simulated or physical testbed was used
• Att.: describes on which basis the attack scenarios were designed
• Mat.: describes the degree of readiness of the approach in likert-scale
• Exp.: describes the ﬂexibility to be adapted to other protocols in likert-scale
• Det.: describes the degree of detection quality of the approach in likert-scale
• Perf.: describes the performance level of the approach in likert-scale

As the comparison shows, the conditions and environment under which the diﬀerent
approaches were evaluated are mostly diﬀerent. The attack scenarios also diverge in
their scope, vectors used, and interaction with operational equipment. The experi-
ments conducted also diﬀer within their respective environments where simulation
was used with simpliﬁcation and abstraction. Many of the approaches have a high
degree of maturity and are capable of being deployed and operated in real grid en-
vironments. However, they lack the ability to be extended to other protocols. The
performance of the approaches shows the recognition capabilities of packets within
the time span 0.1ms to 1s, and the detection quality is also in the medium range,
which is mainly due to the high FN. Thus, the evaluation suggests that our SIDS
enables reliable detection of cyber-attacks within a reasonable time.

Sen et al.

Page 18 of 20

Discussion
The results show that for normal operation, our SIDS has not triggered any (false)
alert messages. Deviations were only caused by a too narrow RTT range and should
be considered when carefully setting this parameter for detection quality.

In the attack-induced scenario (Scenario 2-b-II), where the attacker knows which
addresses and IOA entries are valid, SIDS will have diﬃculty detecting them if the
manipulated values are within the technical speciﬁcation. However, any deviation
from the addresses deﬁned in the speciﬁcations will lead to high detection rates.
In general, the detection quality is very dependent on the provided SB. The given
structure of the SB, which deﬁnes the exact addressing for each allowed connec-
tion, are very strict rules that detect all connections that are not explicitly allowed.
Attacks from outside with limited knowledge of the technical speciﬁcations of in-
frastructures can thus be reliably detected.

To create perfect spooﬁng conditions, the attacker must maintain complete con-
sistency and compliance with the speciﬁcation, which requires extensive knowledge.
Furthermore, the attacker must perform prior steps, such as reconnaissance and lat-
eral movement, to persist in the process network, potentially leaving traces in the
communication layer. In the context of situational awareness for intrusion detection,
our SIDS can act as a low-level sensor that provides domain-speciﬁc indicators of
multi-staged cyber-attacks. Alerts can be centrally processed with other indicators
from other IDS sensors through a correlation system based on Security Information
and Event Management (SIEM) to reconstruct the attack sequence [47, 48].

While our evaluation focuses on IEC-104, the proposed SIDS can also be used
for other SCADA protocols such as IEC-61850. The semantics of SB is provided by
GIM, where the adaptation of a new protocol requires the mapping process of the
data and the ﬁelds of the protocol. Thus, an appropriate mapper must be developed
to reference semantic data with protocol ﬁelds. In addition, AM can generally be
adapted to stateful communication such as TCP-based protocols, where packet ﬂows
can be described with state transitions.

Conclusion
In the context of power grids transitioning to SGs, countermeasures against so-
phisticated cyber-attacks based on reliable detection mechanisms are required. To
this end, we present a SIDS that uses a graph-based speciﬁcation to holistically
encapsulate the SG infrastructure to detect cyber-attacks. We discuss the design
and subsequent implementation of our SIDS, which consists of a DPI component
and an AM. Using our implementation, we evaluated the detection quality within
a physical testbed for diﬀerent scenarios under attack and normal conditions.

Our main ﬁndings are that our SIDS approach can reliably detect attackers in-
jecting false data into intercepted IEC-104 channels. The performance and detec-
tion quality show the advantages of an approach SIDS and was validated in our
study. Moreover, the disadvantage of high knowledge provisioning overhead is re-
duced by our novel approach of coupling infrastructure modeling with SIDS. Future
work includes investigating diﬀerent methods for detecting FDI in a cooperative,
neighborhood-oriented manner. In addition, the generated alerts of the proposed
SIDS will also be investigated in terms of providing a reliable basis for a higher-
level correlation system for reconstructing complex attack campaigns.

Sen et al.

Page 19 of 20

Funding
This work has partly been funded by the German Federal Ministry for Economic Aﬀairs and Climate Action
(BMWK) under project funding reference 0350028.

Availability of data and materials
No data and materials are published.

Author’s contributions
i) Conceptualization: ¨Omer Sen; ii) Methodology: ¨Omer Sen, Maik L¨uhmann, Florian Spr¨unken; iii) Validation:
¨Omer Sen, Maik L¨uhmann, Florian Spr¨unken, Martin Henze; iv) Formal analysis: Maik L¨uhmann, Florian Spr¨unken,
¨Omer Sen; v) Investigation: Maik L¨uhmann, Florian Spr¨unken, ¨Omer Sen, Martin Henze; vi) Resources: Maik
L¨uhmann, Florian Spr¨unken, ¨Omer Sen; vii) Data Curation: ¨Omer Sen, Maik L¨uhmann, Florian Spr¨unken;
viii) Writing - Original Draft: ¨Omer Sen; ix) Writing - Review & Editing: ¨Omer Sen, Maik L¨uhmann, Florian
Spr¨unken, Martin Henze, Dennis van der Velde, Immanuel Hacker, Andreas Ulbig; x) Visualization: ¨Omer Sen,
Immanuel Hacker; xi) Supervision: ¨Omer Sen, Martin Henze, Andreas Ulbig; xii) Project administration: Michael
Andres, Dennis van der Velde; xiii) Funding acquisition: Michael Andres;

Competing interests
The authors declare that they have no competing interests.

Author details
1High Voltage Equipment and Grids, Digitalization and Energy Economics, RWTH Aachen University,
Schinkelstraße 6, 52062 Aachen, Germany. 2Fraunhofer Institute for Applied Information Technology FIT, Schloss
Birlinghoven, Konrad-Adenauer-Straße, 53757 Sankt Augustin, Germany. 3Security and Privacy in Industrial
Cooperation, RWTH Aachen University, Ahornstraße 55, 52074 Aachen, Germany. 4Fraunhofer Institute for
Communication, Information Processing and Ergonomics FKIE, Fraunhoferstraße 20, 53343 Wachtberg, Germany.

References

1. Ourahou, M., Ayrir, W., Hassouni, B.E., Haddi, A.: Review on smart grid control and reliability in presence of

renewable energies: Challenges and prospects. Mathematics and computers in simulation (2020)

2. BERND, M., BUCHHOLZ, S., ZBIGNIEW, A.: SMART GRIDS: Fundamentals and Technologies in Electric

Power Systems of the Future. SPRINGER-VERLAG BERLIN AN, Axel-Springer-Strasse, Berlin (2021)

3. van der Velde, D., Henze, M., Kathmann, P., Wassermann, E., Andres, M., Bracht, D., Ernst, R., Hallak, G.,

Klaer, B., Linnartz, P., et al.: Methods for Actors in the Electric Power System to Prevent, Detect and React to
ICT Attacks and Failures. In: ENERGYCon (2020). IEEE

4. Klaer, B., Sen, ¨O., van der Velde, D., Hacker, I., Andres, M., Henze, M.: Graph-based Model of Smart Grid

Architectures. In: SEST (2020). IEEE

5. Eder-Neuhauser, P., Zseby, T., Fabini, J., Vormayr, G.: Cyber attack models for smart grid environments.

SEGAN (2017)

6. Case, D.U.: Analysis of the cyber attack on the Ukrainian power grid. E-ISAC (2016)
7.

IEC: IEC 62351 Security Standards for the Power System Information Infrastructure. Technical report, WG15,
IEC TC57 (2016)

8. Tanveer, A., Sinha, R., Kuo, M.M.: Secure links: Secure-by-design communications in iec 61499 industrial

control applications. IEEE Transactions on Industrial Informatics (2020)

9. Wolsing, K., Wagner, E., Saillard, A., Henze, M.: IPAL: Breaking up Silos of Protocol-dependent and

Domain-speciﬁc Industrial Intrusion Detection Systems. In: RAID (2022)

10. Krause, T., Ernst, R., Klaer, B., Hacker, I., Henze, M.: Cybersecurity in Power Grids: Challenges and

Opportunities. Sensors (2021)

11. Eckhart, M., Ekelhart, A.: A speciﬁcation-based state replication approach for digital twins. In: CPS-SPC

(2018)

12. Baraneetharan, E.: Role of machine learning algorithms intrusion detection in WSNs: a survey. Journal of

Information Technology (2020)

13. Mochalski, K.: Cybersicherheit der Netzleittechnik: Ergebnisse aus Stabilit¨ats-und Sicherheitsaudits. In:

Realisierung Utility 4.0 Band 1. Springer, Axel-Springer-Strasse, Berlin (2020)

14. Hokama, W.S., de Souza, J.S.: Cybersecurity for Smart Substation. In: T&D LA. IEEE
15. Verma, A., Ranga, V.: Machine learning based intrusion detection systems for IoT applications. Wireless

Personal Communications (2020)

16. Kus, D., Wagner, E., Pennekamp, J., Wolsing, K., Fink, I.B., Dahlmanns, M., Wehrle, K., Henze, M.: A False
Sense of Security? Revisiting the State of Machine Learning-Based Industrial Intrusion Detection. In: CPSS
(2022)

17. van der Velde, D., Sen, ¨O., Hacker, I.: Towards a Scalable and Flexible Smart Grid Co-Simulation Environment
to Investigate Communication Infrastructures for Resilient Distribution Grid Operation. In: SEST (2021). IEEE

18. Williams, T.J.: The Purdue enterprise reference architecture. Computers in industry (1994)
19.

IEC: Telecontrol equipment and systems—Part 5-104: Transmission Protocols—Network Access for IEC
60870-5-101 Using Standard Transport Proﬁles. IEC Standard (2006)

20. MICIE: Modbus Application Protocol Speciﬁcation V1. 1b3. 2012. MICIE Consortium (2020)
21. Matouˇsek, P.: Description and analysis of IEC 104 Protocol. Faculty of Information Technology, Brno University

o Technology, Tech. Rep (2017)

22. Yang, Y., McLaughlin, K., Littler, T., Sezer, S., Im, E.G., Yao, Z., Pranggono, B., Wang, H.: Man-in-the-middle

attack test-bed investigating cyber-security vulnerabilities in smart grid SCADA systems (2012)

Sen et al.

Page 20 of 20

23.

IEC: Power Systems Management and Associated Information Exchange – Data and Communications Security
– Part 3: Communication Network and System Security – Proﬁles Including TCP/IP. Technical report, IEC
62351-3 (2018)

24. Todeschini, M.G., Dondossola, G.: Securing IEC 60870-5-104 communications following IEC 62351 standard:

lab tests and results. In: AEIT (2020). IEEE

25. Castellanos, J.H., Antonioli, D., Tippenhauer, N.O., Ochoa, M.: Legacy-compliant data authentication for

industrial control system traﬃc. In: ACNS (2017). Springer

26. Fernandes, G., Rodrigues, J.J., Carvalho, L.F., Al-Muhtadi, J.F., Proen¸ca, M.L.: A comprehensive survey on

network anomaly detection. Telecommunication Systems (2019)

27. Zuech, R., Khoshgoftaar, T.M., Wald, R.: Intrusion detection and big heterogeneous data: a survey. Journal of

Big Data (2015)

28. Akshaya, S., et al.: A Study on Zero-Day Attacks (2019)
29. Khraisat, A., Gondal, I., Vamplew, P., Kamruzzaman, J.: Survey of intrusion detection systems: techniques,

datasets and challenges. Cybersecurity (2019)

30. Cook, A., Janicke, H., Smith, R., Maglaras, L.: The industrial control system cyber defence triage process.

Computers & Security (2017)

31. Escudero, C., Sicard, F., Zama¨ı, ´E.: Process-aware model based IDSs for industrial control systems

cybersecurity: approaches, limits and further research. In: ETFA (2018). IEEE

32. Mohan, S.N., Ravikumar, G., Govindarasu, M.: Distributed intrusion detection system using semantic-based

rules for scada in smart grid. In: T&D (2020). IEEE

33. Matouˇsek, P., Havlena, V., Hol´ık, L.: Eﬃcient modelling of ics communication for anomaly detection using

probabilistic automata. In: IM (2021). IEEE

34. Almseidin, M., Piller, I., Al-Kasassbeh, M., Kovacs, S.: Fuzzy automaton as a detection mechanism for the

multi-step attack. IJASEIT (2019)

35. Rohith, R., Moharir, M., Shobha, G., et al.: SCAPY-A powerful interactive packet manipulation program. In:

ICNEWS (2018). IEEE

36. Lashkari, A.H., Zang, Y., Owhuo, G., Mamun, M., Gil, G.: CICFlowMeter. Github (2017)
37. Grammatikis, P.R., Sarigiannidis, P., Sarigiannidis, A., Margounakis, D., Tsiakalos, A., Efstathopoulos, G.: An

anomaly detection mechanism for IEC 60870-5-104. In: MOCAST (2020). IEEE

38. Burgetov´a, I., Matouˇsek, P., Ryˇsav`y, O.: Anomaly Detection of ICS Communication Using Statistical Models.

In: CNSM (2021). IEEE

39. Anwar, M., Borg, A., Lundberg, L.: A Comparison of Unsupervised Learning Algorithms for Intrusion Detection

in IEC 104 SCADA Protocol. In: ICMLC (2021). IEEE

40. Scheben, F., Genzmer, K., Mohrdieck, J.-M., M¨oller, J.: Status of the National Implementation of the NC RfG

in Germany. In: NEIS Conference 2016 (2017). Springer

41. Caswell, B., Beale, J.: Snort 2.1 Intrusion Detection. Elsevier, Alibris United States (2004)
42. Dang, Q.-V.: Improving the performance of the intrusion detection systems by the machine learning

explainability. International Journal of Web Information Systems (2021)

43. Holzinger, A., Carrington, A., M¨uller, H.: Measuring the quality of explanations: the system causability scale

(SCS). KI-K¨unstliche Intelligenz (2020)

44. Grigorchuk, R.I., Nekrashevych, V.V., Sushchansky, V.I.: Automata, dynamical systems, and groups. Trudy

Matematicheskogo Instituta Imeni VA Steklova (2000)

45. Bieniasz, J., Sapiecha, P., Smolarczyk, M., Szczypiorski, K.: Towards model-based anomaly detection in

network communication protocols. In: ICFSP (2016). IEEE

46. Bollig, B., Katoen, J.-P., Kern, C., Leucker, M., Neider, D., Piegdon, D.R.: libalf: The automata learning

framework. In: CAV (2010). Springer

47. Sen, ¨O., van der Velde, D., Wehrmeister, K.A., Hacker, I., Henze, M., Andres, M.: Towards an Approach to

Contextual Detection of Multi-Stage Cyber Attacks in Smart Grids. In: SEST (2021). IEEE

48. Sen, ¨O., van der Velde, D., Wehrmeister, K., Hacker, I., Henze, M., Andres, M.: On Using Contextual

49.

Correlation to Detect Multi-Stage Cyber Attacks in Smart Grids. SEGAN (2022)
infosecmatter: IEC104 Client Utility - Metasploit.
https://www.infosecmatter.com/metasploit-module-library/?mm=auxiliary/client/iec104/iec104

50. Sen, ¨O., Van Der Veldc, D., Linnartz, P., Hacker, I., Henze, M., Andres, M., Ulbig, A.: Investigating

Man-in-the-Middle-based False Data Injection in a Smart Grid Laboratory Environment. In: ISGT Europe
(2021). IEEE

51. B.V., P.H.: ProﬁShark 1G+ Datasheet.

https://www.profitap.com/wp-content/uploads/ProfiShark-1G-Plus-Datasheet.pdf
52. Tharwat, A.: Classiﬁcation assessment methods. Applied Computing and Informatics (2020)
53. Al Balushi, A., McLaughlin, K., Sezer, S.: OSCIDS: An Ontology based SCADA Intrusion Detection

Framework. In: SECRYPT (2016)

54. Cruz, T., Rosa, L., Proen¸ca, J., Maglaras, L., Aubigny, M., Lev, L., Jiang, J., Sim˜oes, P.: A cybersecurity
detection framework for supervisory control and data acquisition systems. IEEE Transactions on Industrial
Informatics (2016)

55. Udd, R., Asplund, M., Nadjm-Tehrani, S., Kazemtabrizi, M., Ekstedt, M.: Exploiting bro for intrusion detection

in a SCADA system. In: CPS-SPC (2016)

56. Yang, Y., Xu, H.-Q., Gao, L., Yuan, Y.-B., McLaughlin, K., Sezer, S.: Multidimensional intrusion detection

system for IEC 61850-based SCADA networks. IEEE Transactions on Power Delivery (2016)

57. Adepu, S., Mathur, A.: Distributed attack detection in a water treatment plant: Method and case study. IEEE

Transactions on Dependable and Secure Computing (2018)

58. Lin, H., Slagell, A., Kalbarczyk, Z.T., Sauer, P.W., Iyer, R.K.: Runtime semantic security analysis to detect and

mitigate control-related attacks in power grids. IEEE Transactions on Smart Grid (2016)

59. Wang, D., Feng, D.: Intrusion detection model of SCADA using graphical features. In: IAEAC (2018). IEEE

