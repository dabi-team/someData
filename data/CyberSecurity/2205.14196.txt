2
2
0
2

y
a
M
7
2

]

G
L
.
s
c
[

1
v
6
9
1
4
1
.
5
0
2
2
:
v
i
X
r
a

FadMan: Federated Anomaly Detection across
Multiple Attributed Networks

Nannan Wu
Tianjin University
China
nannan.wu@tju.edu.cn

Ning Zhang
Tianjin University
China
2020244106@tju.edu.cn

Wenjun Wang
Tianjin University
China
wjwang@tju.edu.cn

Lixin Fan
WeBank
China
lixinfan@webank.com

Qiang Yang
WeBanky
China
qyang@cse.ust.hk

Abstract

Anomaly subgraph detection has been widely used in various applications, ranging
from cyber attack in computer networks to malicious activities in social networks.
Despite an increasing need for federated anomaly detection across multiple at-
tributed networks, only a limited number of approaches are available for this
problem. Federated anomaly detection faces two major challenges. One is that
isolated data in most industries are restricted share with others for data privacy
and security. The other is most of the centralized approaches training based on
data integration. The main idea of federated anomaly detection is aligning private
anomalies from local data owners on the public anomalies from the attributed
network in the server through public anomalies to federate local anomalies. In
each private attributed network, the detected anomaly subgraph is aligned with
an anomaly subgraph in the public attributed network. The signiﬁcant public
anomaly subgraphs are selected for federated private anomalies while preventing
local private data leakage. The proposed algorithm FadMan is a vertical federated
learning framework for public node aligned with many private nodes of different
features, and is validated on two tasks — correlated anomaly detection on multiple
attributed networks and anomaly detection on an attributeless network — using ﬁve
real-world datasets. In the ﬁrst scenario, FadMan outperforms competitive methods
by at least 12% accuracy at 10% noise level. In the second scenario, by analyzing
the distribution of abnormal nodes, we ﬁnd that the nodes of trafﬁc anomalies are
associated with the event of postgraduate entrance examination on the same day.

1

Introduction

The anomaly detection problem has recently attracted much more attention. Many machine learning
methods have been proposed to spot anomalies in different scenarios, such as disease outbreak
detection in health alert networks, trafﬁc jam detection in road networks, and event detection in social
networks [Kulldorff, 1997, Speakman et al., 2015, 2013, Takahashi et al., 2008, Wu et al., 2018, Chen
et al., 2019a, Parkinson et al., 2018]. Most of the current methods are just used to centralized data.
However, most industry data exist in the form of isolated islands [Yang et al., 2019]. Few solutions
are proposed to the federated anomaly detection problems that are applied among multiple attributed
networks without compromising user privacy 1. Recently, anomaly detection methods are proposed
to multiple networks without considering data privacy [Bindu et al., 2017, Szmit et al., 2012]. These
methods are focused on anomalies with the same anomaly characteristics on multiple attributed

1In this paper, we use ‘graph’ and ‘network’, ‘vertex’ and ‘node’, and ‘attribute’ and ‘feature’ interchangeably.

Preprint. Under review.

 
 
 
 
 
 
Figure 1: Federated anomaly passenger ﬂow itineraries with similar structures in three private
industry trafﬁc datasets (Car-hailing & Bicycle-sharing & Subway). The federated anomaly is
highly correlated (blue lines) in geographic attributes and speciﬁc locations (yellow shades).

networks in a speciﬁc ﬁeld, and the accuracy improvement of the overall anomaly detection [Sun
et al., 2020, Futamura et al., 2020]. The work [Bindu et al., 2017] focuses on multi-layer social
networks and uses hierarchical information to assist the overall abnormal ranking of nodes, which
lacks analyses of the correlation abnormalities among different social networks.

Attributed graph becomes more popular in industry data, which exhibit graph structure and node
feature heterogeneity. We ﬁnd that different graph anomalies, even from the same industry or same
dataset, are non-IID on both structures and node features. Most industries protect the heterogeneity
for the private reasons, e.g., a car-hailing company protects its travel demand network heterogeneity.
It is a challenge to ﬁnd the anomaly associations on multiple private attributed networks, and few
further explorations have been carried out on multiple private attributed networks for the federated
anomaly detection [Zhao et al., 2019, Chen et al., 2019b, Ying et al., 2021, Zhao et al., 2020]. In
Figure 1, our proposed FadMan pays attention to federated anomalies of multiple private attributed
networks and their potential correlations in various ﬁelds without compromising data privacy. We
can observe that the “the largest passenger ﬂow” subway station network aligning with “the most
car-hailing and bicycle-sharing orders”, which means that most people arrive or leave at a subway
station with transfer to bicycle or car at the certain relevant location. In n industries, there are multiple
private attributed networks, {G1, · · · , GN }. A well-known cost function Fα(S) for S ⊆ Gi can be
speciﬁcally modeled in the ith industry data to detect the anomaly. We select a public attributed
network G0, and present an alignment function Qσ(S, U ) for U ⊆ G0 to align the private anomaly S
on the public anomaly U . F is the abnormal score of S (e.g., the work Tree-Shape-Priors Subgraph
Detection (TSPSD) [Wu et al., 2018] as F ). Q is the alignment score of S and U (e.g., the work
Cross-Network Embedding for Multi-Network Alignment (CrossMNA) [Chu et al., 2019] as Q). The
parameters α and σ are signiﬁcant level and alignment threshold respectively.

Related work. Anomaly detection has been extensively studied from outlier detection, anomaly
subgraph detection in one attributed network and multiple attributed networks to federated anomaly
detection in multiple isolated attributed networks. Most of these algorithms are used in a single
attributed network [Cadena et al., 2018, Bhatia et al., 2020, Cai et al., 2020, Boniol and Palpanas,
2020]. A few algorithms are used in multi-layer networks [Bindu et al., 2017, De Domenico et al.,
2015, Tam et al., 2019, Jie et al., 2020] for abnormal nodes. The methods based on network alignment
are used to multi-layer networks for anomaly subgraph detection [Sun et al., 2020, Zhang et al., 2015,
Liu et al., 2014, Heimann et al., 2018, Ye et al., 2019, Huynh et al., 2019, Yan et al., 2021, Sun
et al., 2019, Wang et al., 2018b, Meng et al., 2019]. Many federated learning methods on graphs are
proposed to explore graph embedding vectors average [Xie et al., 2021, Li et al., 2020b, 2021, Zhang
et al., 2021]. However, the transmitted gradient parameters are still at risk of data leakage [Zhu et al.,
2019, Lyu et al., 2020, Melis et al., 2019]. There are approaches that tackle statistical heterogeneity

2

by considering local partial data or some server-side proxy data as model parameters [Li et al., 2020a,
Xie et al., 2021]. We are motivated on private anomalies aligning on public anomaly to protect data
privacy and federate local anomalies. We summarize our main contributions as follows:

• Innovative work. A novel pioneer algorithm is ﬁrst proposed to federated anomaly detection on
multiple attributed networks in the vertical federated learning without compromising data privacy.

• Theoretical guarantee. The proposed algorithm enjoys a proved convergence property. A broad
spectrum of anomaly detection functions is applicable under satisfying the function properties.
Speciﬁcally, for the graph scan statistics (e.g., Berk-Jones), the algorithm succeeds in federated
anomaly detection with car-hailing, bicycle-sharing and subway industry data.

• Effectiveness and robustness. Extensive experiments on real datasets have veriﬁed that FadMan
can be effectively applied to different multi-network scenarios. On the real computer network
dataset, our method achieves 97% accuracy at the ten percent noise level, which is 12% higher than
the competitive methods in accuracy.

2 Problem formulation

A data owner has an attributed network G = (V, E, P ), V = {v1, · · · , vn}, E ⊆ V × V are sets of
vertices and edges in G, and P ∈ Rn is the speciﬁc anomaly feature set of G. P is widely obtained
by the mapping function p : V → [0, 1] deﬁnes the empirical p-value corresponding to each node
v ∈ V [Wu et al., 2018, Chen and Neill, 2014], the smaller the p-value, the more abnormal the node.
Anomaly target detection can be represented as identifying subgraphs S ⊆ G whose vertex set VS
and edge set ES are subset of V , E.

We consider a set of data owners denoted by {G1, G2, . . . , GN } as multiple attributed networks.
One global anomaly {S1, S2, . . . , SN } (e.g., anomaly transportation in a city) is distributed as local
anomalies on multiple attributed networks. We denote [N ] as the set of {1, 2, · · · , N }. The local
anomaly Si for i ∈ [N ] can be identiﬁed by maximizing the local model F i
α(Si) with the signiﬁcant
level α. We introduce a public data owner G0 to bridge the gap among isolated private data owners.
A public anomaly U ⊆ G0 instead of the global anomaly is assoicated with local anomalies. An
local alignment function Qi
σ(Si, U ) is employed to measure the similarity between Si and U for
i ∈ [N ]. For anomaly subgraphs Si ⊆ Gi and U ⊆ G0, each private data owner exclusively deﬁnes
the alignment matrix Ai ∈ {0, 1}n×n, where Ai
uw ← 1 if the value of (u, w) is greater than the
alignment threshold σ (i.e., a constant) with u ∈ VSi and w ∈ VU , Ai
Federated anomaly detection problem. The federated anomaly detection across multiple attributed
networks can be formulated as follows:

uw ← 0 otherwise.

(S∗, U ∗) = arg max
U ⊆G0

N
(cid:88)

i=1

max
Si⊆Gi

α(Si) + Qi
F i

σ(Si, U )

(1)

where the private anomaly subgraphs S∗ and the public anomaly subgraph U ∗ are the optimal
solutions. The private anomaly subgraph Si ⊆ Gi is measured by F with the signiﬁcant level α
(e.g., 0.15). The alignment score between Si and the public anomaly U is measured by Q with the
predeﬁned alignment threshold σ (e.g., 0.8). For the optimization problem (1), we can assume that
the desired anomalies {Si}, U , and the functions F i
(P1) F i
(P2) F i
(P3) Qi
(P4) Qi

α is monotonically increased with the number of abnormal nodes in Si;
α is monotonically decreased with the number of normal nodes in Si;
σ is monotonically increased with the number of node pairs aligned between Si and U ;
σ is monotonically decreased with the number of nodes from Si and U .

σ, intuitively satisfy the four properties:

α, Qi

These properties P1-P2 are widely used in connected anomaly subgraph detection [Chen and Neill,
2014, Wu et al., 2018], and the possibility of same anomaly is increased with aligned links P3 [Sun
et al., 2020]. We can observe that when the anomaly U is the whole graph G0, there are maximum
links between Si and U by the property P3. The anomaly U is not desired for including more noise
(i.e., normal nodes). Similarly, we have Si. In this work, we include the property P4, which restricts
on the smaller sizes of anomalies Si and U .

3

3 Proposed algorithm

The federated anomaly detection problem (1) does not explicitly allow for data protection in different
data owners. We propose the algorithm that is tractable to protect data and detect federated anomaly.
The key idea of proposed algorithm is to aggregate local public anomalies and then re-distribute the
optimized public anomaly back to each local data owner.

3.1 Federated anomaly detection

The main steps of the FadMan in Algorithm 1 are described as follows:

For the i-th participant side (local data owner), given the optimized public anomaly U ,
(c1) S∗

σ(S, U )

i ← arg maxS⊆Gi F i
i ← arg maxU ⊆G0 Qi

α(S) + Qi
(c2) U ∗
σ(S∗
i , U )
For the server side, aggregate local public optimized anomalies {U ∗
(s1) Sort the local data owner U ∗

(i) in ascending order of size |VU ∗

(i)

i } for i ∈ [N ],
|

(s2) For a coalition C = {}, start at the owner i joining the coalition C, and stop when the ﬁrst owner
would increase the alignment error ((cid:80)
(i), U ∗
(i)) by
joining the coalition C. Then, the optimal partition of [N ] is made up of the coalition set {C}.
(s3) Select a coalition C with the minimum score, and set the new public anomaly U = (cid:83)

k∈C |VU ∗

k∈C |VU ∗

|)/(|VU ∗

| − |VU ∗

σ(S∗

| (cid:80)

|)Qi

(i)

(i)

k

k

i∈C U ∗
(i)

We can observe that the private data {Si} at the local data owners would not be uploaded to the
server. At the server side, we can just obtain the public anomalies {U ∗
i } and its alignment scores.
The problem is solved with two different settings: participant side for private anomaly detection has
N data owners who do not share data with each other; and server side for public anomaly alignment
has the public attributed network which is shared by the data owners. Algorithm 1 is iterated between
the participant side and the server side, until the stop condition is satisﬁed (i.e., the public anomaly
subgraph U does not change).

3.1.1 Private anomaly detection.

Each data owner employs a function F to detect self-deﬁned anomaly by consolidating their private
attributed network data. The self-deﬁned anomaly at step 5 and step 6 of Algorithm 1 is detected
exclusively in the data owner setting. The anomaly detection provides meaningful privacy guarantees.
In this paper, we employ the non-parametric graph scanning statistic F as a score function, and its
form is deﬁned as follows:

Fα(S) = ϕ(α, Nα(S), N (S)).
(2)
where S is a set of connected vertices, that is, a subgraph, and α is the signiﬁcant level, Nα(S) is
the number of anomaly vertices in S whose p-value is less than or equal to α, and N (S) is the total
number of vertices in S. In this paper, we consider two non-parametric graph scanning statistics
as the score function (2): Berk-Jones (BJ) statistic [Berk and Jones, 1979] and Higher Criticism
(HC) statistic [Donoho et al., 2004]. We use non-parametric graph scanning statistics to measure the
subgraph abnormality as a numerical value. The optimal anomaly subgraphs maximize the graph
scanning statistics F over each private network.

3.1.2 Public anomaly alignment.

Given the public attributed network G0 and another attributed network Gi for i ∈ {0, 1, · · · , N }, we
deﬁne the function Q as measuring the anomaly alignment score between S ⊆ Gi and U ⊆ G0:

Qσ(S, U ) =

Nσ(S, U )
N (S)

+

Nσ(S, U )
N (U )

(3)

where σ is the predeﬁned alignment threshold. The anomaly subgraph S is aligned on the public
anomaly subgraph U . The two subgraphs are connected. Nσ(S, U ) is the number of node pairs
between S and U whose alignment probability is greater than or equal to σ. N (S) and N (U ) are the
number of all nodes in S and U respectively. The node’s alignment probability is obtained through the

4

network alignment work CrossMNA [Chu et al., 2019]. By introducing this algorithm, we pre-aligned
each private network with the public network, and obtained the alignment probability of all pairs
of nodes between them. We use network alignment to map the similarity between the subgraphs to
a value, and obtain the most similar part between two subgraphs by maximizing Q at step 6, 9 of
Algorithm 1.

3.2 Theoretical analysis

We now analyze the increasing property in the objective when one iteration of the proposed algorithm
is performed. The convergence of FadMan is proved based on several lemmas and the four properties
of objective function, without the speciﬁc forms of F and Q functions. Each lemma is a building-block
that describes that there exists an local optimal solution.
Theorem 1 (Convergence and Optimality of FadMan). Within the pre-aligned domain (each data
owner integrates the alignment probability information of all node pairs between its private network
and the public network), given the parameter α and σ settings, Algorithm 1 converges to the optimal
solution of the problem (1).

Though Theorem 1 looks straightforward to a network-based algorithm framework for federated
anomaly detection, the problems at steps (c1) and (c2) can be addressed with the previous methods Sun
et al. [2020], Wu et al. [2018] support the optimal solutions. At the step (c1), given the public anomaly
U , the optimal private anomaly S∗
i is obtained. We are target for the new improved public anomaly
U at the next iteration.
At the t-th iteration, for the server side, we can observe the public anomalies {U ∗
i } and the function
values of F and Q. We assume that there exists a public anomaly subgraph U ∗ ⊆ G0 maximizing
(cid:80)

i . The value of F i
i ) will not change with the update U .
Lemma 2 (Q upper bound). We must have the upper bound of the optimal Q under the ﬁxed S∗
i .

i , U ∗) under the ﬁxed S∗

i∈[N ] Qi

α(S∗

σ(S∗

N
(cid:88)

i=1

Qi

σ(S∗

i , U ∗

i ) ≥

N
(cid:88)

i=1

Qi

σ(S∗

i , U ∗).

(4)

Lemma 3 (Q lower bound). A public anomaly U o ⊆ (cid:83)
i maximizes (cid:80)
i∈[N ] U ∗
We must have the lower bound of the optimal Q under the ﬁxed S∗
i .

i∈[N ] Qi

σ(S∗

i , U o).

N
(cid:88)

i=1

Qi

σ(S∗

i , U ∗) ≥

N
(cid:88)

i=1

Qi

σ(S∗

i , U o).

(5)

Lemma 4 (Q optimum solution). The solution U o = U ∗ maximizes Q under the ﬁxed S∗
The optimum solution must exist between

i over G0.

U ⊆(cid:83)

min
i∈[N ] U ∗
i

N
(cid:88)

(cid:104)

i=1

Qi

σ(S∗

i , U ∗

i ) − Qi

σ(S∗

i , U )

(cid:105)

(6)

The public anomaly U ∗
i is the local maximum solution. The Q upper bound is derived intuitively
from summing local maximum solutions is greater than the global maximum solution. For the Q
lower bound, the maximum solution over the local set is less than or equal the maximum solution
over the global set. We can observe that the maximum solution must exist between the upper bound
and lower bound, and minimize the gap between the two bounds. Note that when the gap is 0, the
optimum solution is equal to the solution of lower bound. All of the local solutions U ∗
i are the same.
However, in the problem (6), Qi
σ(S∗
i , U ) can not be computed at the server because the forms of
function Q and private anomalies {S∗
i } are not accessed for the data protection rules. We employ the
framework for optimality and stability in federated learning to address the problem (6) Donahue and
Kleinberg [2021]. We deﬁne a coalition C ⊆ [N ] is a subset of local data owners, and all owners [N ]
are partitioned into coalition set {C}. We consider the gap between two bounds (6) as errors across

5

owners. By the properties P3 and P4, we know that the value of Qi
U for the ﬁxed S∗

i . Given a partition Π of [N ], we deﬁne its error below:
(cid:19)

σ(S∗

(cid:18) (cid:80)

f{U ∗

i }(Π) =

(cid:88)

(cid:88)

C∈(cid:81)

i∈C

|VU ∗

i

| ·

k∈C |VU ∗
| · (cid:80)

|
| − |VU ∗
k∈C |VU ∗
|

k

i

i

k

|VU ∗

i , U ) changed with the size of

Qi

σ(S∗

i , U ∗
i )

(7)

Lemma 5 (Theorem 1, from Donahue and Kleinberg [2021]). An optimal partition Π can be created
for a set of local data owners [N ]. First, start with every owner maximizing the local public anomaly
U ∗
i . Then, group the owners together in ascending order of node size, halting at the ﬁrst owner would
increase its error ((cid:80)
| (cid:80)
i ) by joining the coalition
| − |VU ∗
C. The resulting partition Π is optimal.

k∈C |VU ∗

k∈C |VU ∗

|)/(|VU ∗

i , U ∗

σ(S∗

|)Qi

k

k

i

i

σ(S∗

i , U ∗

i∈C U ∗

By Lemma 5, we select a coalition C ∈ Π with the minimum error, and achieve the desired public
anomaly U = (cid:83)
i . The public anomaly U is the optimal solution for (cid:80)

σ(S∗
Note that the bi-level optimization problem (1) has two targets. The local function F i
α(Si) aims
to detect private anomalies using only the data of local data owner i. The alignment function
Qi
i ) aims to federate these anomalies by aligning the local private anomaly on the public
global anomaly. We can observe that the two functions exhibit at two scales, and introduce a
hyperparameter λ, maxU ⊆G0
σ(Si, U ), controls the interpolation
between the two functions. The hyperparameter λ is related to the speciﬁc form of Q, e.g., Q as
a regularization term, and the theoretical properties of FadMan is proved under the general setting
without λ. When λ is set to 0, our algorithm performs as local anomaly detection tasks for each local
data owner. Our algorithm focuses on more federated anomalies with increasing λ.

i∈[N ] maxSi⊆Gi F i

α(Si) + λQi

i∈[N ] Qi

i , ·).

(cid:80)

(Relation to Ditto federated learning Li et al. [2021]). We do not consider the network structure
{Gi}, and each Gi can be transformed to a vector vi, e.g., vi(k) ← 1 if the node k is abnormal in Gi,
and vi(k) ← 0 otherwise. The vector w is derived from G0. We can take Q as a regularization term,
λ/2· (cid:107) Avi − w (cid:107)2. The optimization problem is to minimize −Fi(vi) + λ/2· (cid:107) Avi − w∗ (cid:107)2 for
vi with each owner, subject to w∗ = arg minw 1/N · (cid:80)
i∈[N ] (cid:107) Avi − w (cid:107)2. Our algorithm can be
reduced to Ditto. Thus we propose a general algorithm framework for federated anomaly detection.

By the theorem, our algorithm guarantees on detecting the most anomaly subgraphs on multiple
private attributed networks. FadMan’s time complexity is O(kN |V |2), where k is the number of
iterations, N is the number of networks, V is the number of nodes of the network. In practice, the
implementations of Fα and Qσ are normalized because the function value ranges are different.

4 EXPERIMENTS

In this section, we performed a series of experiments to verify FadMan. We applied the algorithm
to two real scenarios and veriﬁed the effectiveness of the algorithm on the two tasks of correlated
anomaly detection on multiple attributed networks and anomaly detection on an attributeless network
through ground truth. We compared it with four competitive baselines.

6

Datasets. We constructed two scenarios (Table 1) based on ﬁve real datasets: Computer network,
Car-hailing & Bicycle-sharing & Subway (Metro) trafﬁc & POI (Point of Interest) dataset. POI is the
ground truth dataset to case study the federated anomaly association with interest locations.

In the ﬁrst scenario, we divided the computer network into 6 private networks (with anomalous
properties) according to time, treated the original network as a public network (only topology
information), and conducted two comparative experiments on it: correlated anomaly detection on
multiple attributed networks and anomaly detection on the attributeless network (regard G6 as an
attributeless network by setting the p-value of all nodes in G6 to 1). In the second scenario, we
use Car-hailing itinerary network, Bicycle-sharing itinerary network, and Subway network as the 3
private attributed networks, regard POI dataset as the public network. In this scenario, we conducted
an experiment: correlated anomaly detection on multiple attributed networks.

Methods. In this work, we use anomaly detection algorithms NPHGS [Chen and Neill, 2014],
TSPSD[Wu et al., 2018],A3MAN Zhang et al. [2018], and anomaly alignment algorithm ASD-FTSun
et al. [2020] as baselines.

Metrics. We use Recall, Precision, F1 ,Accuracy, TPR (True Positive Rate), FNR (False Negative
Rate) to evaluate algorithms’ ability to detect the correlated anomaly on multiple attributed networks,
and use Anchor_Count, TPR (prediction), FNR (prediction) to evaluate the algorithms’ ability to
detect anomalies on attributeless networks and discover related links among anomalies across the
network (see supplementary in detail).

7

Figure 2: A set of related abnormal IPs was detected by our method. The detected IPs have
potential correlations (e.g., at the same place). The site www.ch.zju.edu.cn was attacked mainly from
two network segments x.x.15.(28-159) and x.x.198.(69-134). The addresses of these IPs were all at
the same place (i.e., Shanxi, China). The attack methods were all Nginx Attack.

4.1 Experiment results

We conduct comparative experiments on the computer network dataset with ground truth data, set
α = 0.15, σ = 0.8. The experimental results are shown in Table 2 and Table 3.

1) Ability to detect correlated anomalies on multiple attributed networks: Taking all the at-
tributed computer networks as the input of FadMan and getting the results in Table 2. In this case,
FadMan (BJ)-6 denotes the experimental results for six networks from G1-G6, and FadMan (BJ)-3
denotes the results for three networks from G4-G6. Except for the FadMan method, the other com-
parison methods are non-federated anomaly detection algorithms. From Table 2, we can draw the
following conclusions:
Firstly, FadMan has reached 0.97 for Precision and 0.99 for Accuracy, which are basically the same as
the non-federated methods, while protecting privacy. F1 and Recall both exceed the NPHGS method
at a noise level of 30, and FNR is higher than the comparison method at all noise levels, thus showing
that FadMan not only protects well privacy, while being able to have efﬁcient anomaly detection.

Secondly, we conducted comparison experiments on three datasets and six datasets, respectively, and
it can be obtained from Table 2 that each experimental metrics of the six datasets is higher than the
experimental results of the three datasets, which is because considering more information is more
beneﬁcial to capture useful information and thus improve the performance of anomaly detection.

2) Ability to detect anomalies on attributeless network: By setting the p-values of all nodes in G6
to 1, it is regarded as an attributeless network. Then run FadMan to get metrics in Table 3 (Higher
Criticism (HC) statistic results are the same as BJ). For comparable TPR (prediction) and FNR
(prediction), the FadMan algorithm reached 0.98 and 0.02, which is signiﬁcantly better than the
baselines. Moreover, compared with the ASD-FT anomaly alignment algorithm, the total number of
abnormal anchor links obtained by our algorithm is 1, 012, which is 8.8 times than 115 of ASD-FT,
which proves the effectiveness of FadMan.

4.2 Case study in computer network dataset

Run FadMan on computer network dataset, input all networks, and set α = 0.15, σ = 0.8.

8

X.X.15.124X.X.15.28ch.zju.edu.cnX.X.15.28X.X.198.134X.X.15.159X.X.198.69X.X.15.136X.X.15.28X.X.15.77X.X.198.106X.X.198.98ch.zju.edu.cnch.zju.edu.cnch.zju.edu.cnch.zju.edu.cnch.zju.edu.cnThe attacked website: www.ch.zju.edu.cn◎    Same Location:  One province in ChinaIP  from abnormal IP group◎     Same Attack Method:  Nginx Attack◎     Specific Network Segments:  x.x.15.(28-159)  /  x.x.198.(69-134) The common features of  the abnormal IP group：G1G3G520150201-20150331G620150401-20150531G420141201-20150131Attack/          Anchor link 20140531-20140731G220140801-2014093020141001-20141131X.X.15.28ch.zju.edu.cnX.X.15.28X.X.15.136X.X.198.106X.X.15.77X.X.198.98ch.zju.edu.cnX.X.15.28X.X.15.124ch.zju.edu.cnch.zju.edu.cnch.zju.edu.cnX.X.198.69X.X.15.159X.X.198.134ch.zju.edu.cnFigure 3: Correlated abnormal distribution of Car-hailing & Bicycle-sharing & Subway de-
tected by FadMan. We detected the aligned anomaly subgraphs at 8:00, 12:00 and 18:00 on December
21, 2019. (a) is a heat map of the aligned abnormal distribution of the trafﬁc networks. Each hot spot
represents an abnormal area, and the redder the color, the higher the abnormality of the area. The
black lines indicate that there are itineraries between the two areas, the dark blue text indicates the
main position type of the start and end points of the itineraries included in the area. (c) is a summary
of the aligned abnormalities at three periods in (a). From the extracted main aligned anomaly areas
and itineraries, we can observe that morning and evening trafﬁc ﬂow mainly comes from school
crowds, while at noon, it is mainly business crowds and tourists.

1) Discovery of related abnormal IP group: Our algorithm can obtain the abnormal IP group and
mine the hidden attacking IP information (Figure 2). FadMan can mine potential abnormal anchor
links among multi-layer networks. By summarizing the anchor nodes corresponding to these anchor
links, we can obtain an abnormal IP group. Although these IPs appear in different periods, their
attack behaviors are similar. Through their log information, we found these IPs come from several
ﬁxed network segments, and their attack methods and locations are also the same, which means that
these IPs may come from the same attack source. Our method ﬁnds effective cyber attacks and thus
improves the prevention of cyber attacks.

2) Prediction of cyber attacks: We treat G6 as an attributeless network by setting the p-value of all
nodes in G6 to 1 and use it with other networks as the input of FadMan to obtain its anomaly subgraph
S6. Regard S6 as the prediction result, which summarizes the IPs that may attack the website during
the period of G6. We compare it with the real attacks that occurred during this period, and get the
TPR (prediction) and FNR (prediction) in Table 3. We can observe from the metrics that FadMan
can make reasonably accurate predictions of future attacks. Our algorithm can detect the abnormal
situation of the target network through networks with sufﬁcient abnormal characteristics, even if the
target network does not have any abnormal information.

4.3 Case study in trafﬁc datasets

Run FadMan on multiple networks composed of the car-hailing itinerary network, the bicycle-sharing
itinerary network, and the subway (metro) network. Match the abnormal detection results on the three
trafﬁc networks with the POI data to obtain the real information of the detection results, and then
mapping it to a map. We selected three networks with the same period (8:00/12:00/18:00) and set
α = 0.05, σ = 0.8. We choose the illustrative analysis obtained on datasets of 8:00 as an example:

Discovery of real events: For the anomaly detection results of different datasets, we mapped them
to the map after matching with POI data, and the obtained result graph is collectively referred to as
the mapping graph below. From the mapping graph of a single dataset (Bicycle-Sharing), we can
ﬁnd that most of the anomalies are clustered near schools, hospitals and parks, and a small number
of anomalies are also distributed around some large shopping malls. Schools, hospitals, and parks
are popular places in a city in the morning. This distribution is in line with the actual situation,
indicating that the obtained abnormal detection results are authentic. From the mapping graph of the
two datasets (Car-Hailing & Bicycle-Sharing), The number of anomalies distributed near Xigu Park is

9

more than other parks. Based on this result, we searched the Weibo dataset and found that there were
many posts related to Xigu Park that day, and the content of the posts were mostly records of visiting
Xigu Park in the morning. Through further analysis of the detection results of the two datasets,
we can ﬁnd more information. Finally, from the mapping graph of the three datasets (Car-Hailing
& Bicycle-Sharing & Subway), it can be found that there are many abnormal points near Tianjin
University, Nankai University and Tianjin No. 21 Middle School, but there is no such situation near
Tianjin No. 1 Middle School and Tianjin No. 2 Middle School. In view of this phenomenon, we
consult relevant data and draw the following conclusions: In this experiment, the date of the dataset is
December 21, 2019, which is the ﬁrst day of the National Uniﬁed Entrance examination for Master’s
graduates. Therefore, the phenomenon of anomaly gathering near the school on this day is closely
related to the Uniﬁed National Graduate Entrance Examination. Most of the candidates who took
the exams at Tianjin University and Nankai University were students of their own schools, and their
travel methods were mainly walking and riding shared bicycles. The candidates who took the exam
at Tianjin No. 21 Middle School were all off-campus candidates, and their travel methods were
mostly Car-Hailing, So there are a lot of anomalies around these three sites. In contrast, Tianjin No. 1
Middle School and Tianjin No. 2 Middle School are not test sites, so there are no abnormal points
around them. According to the above analysis, we can ﬁnd that different numbers of datasets can
obtain different interpretable results. The more datasets we have, the more anomalies we can get,
which is exactly what FadMan aims to achieve.

5 Conclusion

In this paper, we study the problem of federated anomaly detection across multiple attributed
networks and propose a federated learning solution, FadMan. Our algorithm ﬁrst introduces the
network alignment method to the anomaly subgraph detection across multiple attributed networks,
and protects private industry data. Our algorithm can be applied to detect anomalies on attributeless
networks. A solid theoretical basis is developed for our algorithm.

References

Leman Akoglu, Hanghang Tong, and Danai Koutra. Graph based anomaly detection and description:

a survey. Data mining and knowledge discovery, 29(3):626–688, 2015.

Mishari Almishari and Gene Tsudik. Exploring linkability of user reviews. In European Symposium

on Research in Computer Security, pages 307–324. Springer, 2012.

Robert H Berk and Douglas H Jones. Goodness-of-ﬁt test statistics that dominate the kolmogorov
statistics. Zeitschrift für Wahrscheinlichkeitstheorie und verwandte Gebiete, 47(1):47–59, 1979.

Siddharth Bhatia, Bryan Hooi, Minji Yoon, Kijung Shin, and Christos Faloutsos. Midas: Microcluster-
based detector of anomalies in edge streams. In Proceedings of the AAAI Conference on Artiﬁcial
Intelligence, volume 34, pages 3242–3249, 2020.

PV Bindu, P Santhi Thilagam, and Deepesh Ahuja. Discovering suspicious behavior in multilayer

social networks. Computers in Human Behavior, 73:568–582, 2017.

Paul Boniol and Themis Palpanas. Series2graph: Graph-based subsequence anomaly detection for

time series. Proceedings of the VLDB Endowment, 13(12):1821–1834, 2020.

Jose Cadena, Feng Chen, and Anil Vullikanti. Graph anomaly detection based on steiner connectivity

and density. Proceedings of the IEEE, 106(5):829–845, 2018.

Lei Cai, Zhengzhang Chen, Chen Luo, Jiaping Gui, Jingchao Ni, Ding Li, and Haifeng Chen.
Structural temporal graph neural networks for anomaly detection in dynamic graphs. arXiv
preprint arXiv:2005.07427, 2020.

Feng Chen and Daniel B Neill. Non-parametric scan statistics for event detection and forecasting
in heterogeneous social media graphs. In Proceedings of the 20th ACM SIGKDD international
conference on Knowledge discovery and data mining, pages 1166–1175. ACM, 2014.

10

Shengnan Chen, Jianmin Qian, Haopeng Chen, and Si Liu. Anomaly subgraph mining in large-scale
social networks. In 2019 IEEE Intl Conf on Parallel & Distributed Processing with Applications,
Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing &
Networking (ISPA/BDCloud/SocialCom/SustainCom), pages 883–890. IEEE, 2019a.

Yang Chen, Junzhe Zhang, and Chai Kiat Yeo. Network anomaly detection using federated deep
autoencoding gaussian mixture model. In International Conference on Machine Learning for
Networking, pages 1–14. Springer, 2019b.

Xiaokai Chu, Xinxin Fan, Di Yao, Zhihua Zhu, Jianhui Huang, and Jingping Bi. Cross-network
embedding for multi-network alignment. In The World Wide Web Conference, pages 273–284,
2019.

Manlio De Domenico, Albert Solé-Ribalta, Elisa Omodei, Sergio Gómez, and Alex Arenas. Ranking
in interconnected multilayer networks reveals versatile nodes. Nature communications, 6:6868,
2015.

Kate Donahue and Jon Kleinberg. Optimality and stability in federated learning: A game-theoretic

approach. Advances in Neural Information Processing Systems, 34, 2021.

David Donoho, Jiashun Jin, et al. Higher criticism for detecting sparse heterogeneous mixtures. The

Annals of Statistics, 32(3):962–994, 2004.

Dhivya Eswaran, Christos Faloutsos, Sudipto Guha, and Nina Mishra. Spotlight: Detecting anomalies
in streaming graphs. In Proceedings of the 24th ACM SIGKDD International Conference on
Knowledge Discovery & Data Mining, pages 1378–1386, 2018.

Yasunori Futamura, Xiucai Ye, Akira Imakura, and Tetsuya Sakurai. Spectral anomaly detection in
large graphs using a complex moment-based eigenvalue solver. ASCE-ASME Journal of Risk and
Uncertainty in Engineering Systems, Part A: Civil Engineering, 6(2):04020010, 2020.

Mark Heimann, Haoming Shen, Tara Safavi, and Danai Koutra. Regal: Representation learning-based
graph alignment. In Proceedings of the 27th ACM international conference on information and
knowledge management, pages 117–126, 2018.

Thanh Trung Huynh, Chi Thang Duong, Thang Huynh Quyet, Quoc Viet Hung Nguyen, Abdul Sattar,
et al. Network alignment by representation learning on structure and attribute. In Paciﬁc Rim
International Conference on Artiﬁcial Intelligence, pages 698–711. Springer, 2019.

Fei Jie, Chunpai Wang, Feng Chen, Lei Li, and Xindong Wu. A framework for subgraph detection in
interdependent networks via graph block-structured optimization. IEEE Access, 8:157800–157818,
2020.

Danai Koutra, Hanghang Tong, and David Lubensky. Big-align: Fast bipartite graph alignment. In

2013 IEEE 13th International Conference on Data Mining, pages 389–398. IEEE, 2013.

Martin Kulldorff. A spatial scan statistic. Communications in Statistics-Theory and methods, 26(6):

1481–1496, 1997.

Batiste Le Bars and Argyris Kalogeratos. A probabilistic framework to node-level anomaly de-
tection in communication networks. In IEEE INFOCOM 2019-IEEE Conference on Computer
Communications, pages 2188–2196. IEEE, 2019.

Tian Li, Anit Kumar Sahu, Ameet Talwalkar, and Virginia Smith. Federated learning: Challenges,

methods, and future directions. IEEE Signal Processing Magazine, 37(3):50–60, 2020a.

Tian Li, Anit Kumar Sahu, Manzil Zaheer, Maziar Sanjabi, Ameet Talwalkar, and Virginia Smith.
Federated optimization in heterogeneous networks. Proceedings of Machine Learning and Systems,
2:429–450, 2020b.

Tian Li, Shengyuan Hu, Ahmad Beirami, and Virginia Smith. Ditto: Fair and robust federated learning
through personalization. In International Conference on Machine Learning, pages 6357–6368.
PMLR, 2021.

11

Li Liu, William K Cheung, Xin Li, and Lejian Liao. Aligning users across social networks using

network embedding. In Ijcai, pages 1774–1780, 2016.

Siyuan Liu, Shuhui Wang, Feida Zhu, Jinbo Zhang, and Ramayya Krishnan. Hydra: Large-scale
social identity linkage via heterogeneous behavior modeling. In Proceedings of the 2014 ACM
SIGMOD international conference on Management of data, pages 51–62, 2014.

Lingjuan Lyu, Han Yu, and Qiang Yang. Threats to federated learning: A survey. arXiv preprint

arXiv:2003.02133, 2020.

Luke Mathieson, Natalie Jane de Vries, and Pablo Moscato. Using network alignment to identify
conserved consumer behaviour modelling constructs. In Business and Consumer Analytics: New
Ideas, pages 513–541. Springer, 2019.

Luca Melis, Congzheng Song, Emiliano De Cristofaro, and Vitaly Shmatikov. Exploiting unintended
feature leakage in collaborative learning. In 2019 IEEE Symposium on Security and Privacy (SP),
pages 691–706. IEEE, 2019.

Lin Meng, Yuxiang Ren, Jiawei Zhang, Fanghua Ye, and S Yu Philip. Deep heterogeneous social
network alignment. In 2019 IEEE First International Conference on Cognitive Machine Intelligence
(CogMI), pages 43–52. IEEE, 2019.

Huda Nassar, Nate Veldt, Shahin Mohammadi, Ananth Grama, and David F Gleich. Low rank spectral
network alignment. In Proceedings of the 2018 World Wide Web Conference, pages 619–628,
2018.

Chien-Chun Ni, Yu-Yao Lin, Jie Gao, and Xianfeng Gu. Network alignment by discrete ollivier-ricci
ﬂow. In International Symposium on Graph Drawing and Network Visualization, pages 447–462.
Springer, 2018.

Simon Parkinson, Mauro Vallati, Andrew Crampton, and Shirin Sohrabi. Graphbad: A general
technique for anomaly detection in security information and event management. Concurrency and
Computation: Practice and Experience, 30(16):e4433, 2018.

Daniele Perito, Claude Castelluccia, Mohamed Ali Kaafar, and Pere Manils. How unique and traceable
are usernames? In International Symposium on Privacy Enhancing Technologies Symposium,
pages 1–17. Springer, 2011.

Skyler Speakman, Yating Zhang, and Daniel B Neill. Dynamic pattern detection with temporal
consistency and connectivity constraints. In 2013 IEEE 13th International Conference on Data
Mining, pages 697–706. IEEE, 2013.

Skyler Speakman, Edward McFowland III, and Daniel B Neill. Scalable detection of anomalous
patterns with connectivity constraints. Journal of Computational and Graphical Statistics, 24(4):
1014–1033, 2015.

Li Sun, Zhongbao Zhang, Pengxin Ji, Jian Wen, Sen Su, and S Yu Philip. Dna: Dynamic social
In 2019 IEEE International Conference on Big Data (Big Data), pages

network alignment.
1224–1231. IEEE, 2019.

Ying Sun, Wenjun Wang, Nannan Wu, Wei Yu, and Xue Chen. Anomaly subgraph detection with
feature transfer. In Proceedings of the 29th ACM International Conference on Information and
Knowledge Management (CIKM’20), October 19–23, 2020, Virtual Event, Ireland., 2020.

Maciej Szmit, Anna Szmit, Sławomir Adamus, and Sebastian Bugała. Usage of holt-winters model
and multilayer perceptron in network trafﬁc modelling and anomaly detection. Informatica, 36(4),
2012.

Kunihiko Takahashi, Martin Kulldorff, Toshiro Tango, and Katherine Yih. A ﬂexibly shaped space-
time scan statistic for disease outbreak detection and monitoring. International Journal of Health
Geographics, 7(1):14, 2008.

Nguyen Thanh Tam, Matthias Weidlich, Bolong Zheng, Hongzhi Yin, Nguyen Quoc Viet Hung, and
Bela Stantic. From anomaly detection to rumour detection using data streams of social platforms.
Proceedings of the VLDB Endowment, 12(9):1016–1029, 2019.

12

Jan Vosecky, Dan Hong, and Vincent Y Shen. User identiﬁcation across multiple social networks. In
2009 ﬁrst international conference on networked digital technologies, pages 360–365. IEEE, 2009.

Bo Wang, Yanping Zhao, Fengye Hu, and Ying-Chang Liang. Anomaly detection with subgraph
search and vertex classiﬁcation preprocessing in chung-lu random networks. IEEE Transactions
on Signal Processing, 66(20):5255–5268, 2018a.

Chenxu Wang, Zhiyuan Zhao, Yang Wang, Dong Qin, Xiapu Luo, and Tao Qin. Deepmatching:
A structural seed identiﬁcation framework for social network alignment. In 2018 IEEE 38th
International Conference on Distributed Computing Systems (ICDCS), pages 600–610. IEEE,
2018b.

Nannan Wu, Feng Chen, Jianxin Li, Jinpeng Huai, Baojian Zhou, Naren Ramakrishnan, et al.
IEEE

A nonparametric approach to uncovering connected anomalies by tree shaped priors.
Transactions on Knowledge and Data Engineering, 31(10):1849–1862, 2018.

Han Xie, Jing Ma, Li Xiong, and Carl Yang. Federated graph classiﬁcation over non-iid graphs.

Advances in Neural Information Processing Systems, 34, 2021.

Yuchen Yan, Si Zhang, and Hanghang Tong. Bright: A bridging algorithm for network alignment. In

Proceedings of the Web Conference 2021, pages 3907–3917, 2021.

Qiang Yang, Yang Liu, Tianjian Chen, and Yongxin Tong. Federated machine learning: Concept and
applications. ACM Trans. Intell. Syst. Technol., 10(2):12:1–12:19, 2019. doi: 10.1145/3298981.
URL https://doi.org/10.1145/3298981.

Rui Ye, Xin Li, Yujie Fang, Hongyu Zang, and Mingzhong Wang. A vectorized relational graph
convolutional network for multi-relational network alignment. In IJCAI, pages 4135–4141, 2019.

ZHAO Ying, WANG LiBao, CHEN JunJun, and TENG Jian. Network anomaly detection based on

federated learning. Journal of Beijing University of Chemical Technology, 48(2):92, 2021.

Jiawei Zhang and S Yu Philip. Multiple anonymized social networks alignment. In 2015 IEEE

International Conference on Data Mining, pages 599–608. IEEE, 2015.

Jie Zhang, Nannan Wu, Wenjun Wang, Ying Sun, and Siddharth Bhatia. Anomaly alignment across

multiple attributed networks. 2018.

Ke Zhang, Carl Yang, Xiaoxiao Li, Lichao Sun, and Siu Ming Yiu. Subgraph federated learning with
missing neighbor generation. Advances in Neural Information Processing Systems, 34, 2021.

Yutao Zhang, Jie Tang, Zhilin Yang, Jian Pei, and Philip S Yu. Cosnet: Connecting heterogeneous
social networks with local and global consistency. In Proceedings of the 21th ACM SIGKDD
International Conference on Knowledge Discovery and Data Mining, pages 1485–1494, 2015.

Ying Zhao, Junjun Chen, Di Wu, Jian Teng, and Shui Yu. Multi-task network anomaly detection
using federated learning. In Proceedings of the tenth international symposium on information and
communication technology, pages 273–279, 2019.

Ying Zhao, Junjun Chen, Qianling Guo, Jian Teng, and Di Wu. Network anomaly detection using
federated learning and transfer learning. In International Conference on Security and Privacy in
Digital Economy, pages 219–231. Springer, 2020.

Ligeng Zhu, Zhijian Liu, and Song Han. Deep leakage from gradients. In H. Wallach, H. Larochelle,
A. Beygelzimer, F. d'Alché-Buc, E. Fox, and R. Garnett, editors, Advances in Neural Information
Processing Systems, volume 32. Curran Associates, Inc., 2019. URL https://proceedings.
neurips.cc/paper/2019/file/60a6c4002cc7b29142def8871531281a-Paper.pdf.

13

A Appendix

A.1 Related work

Our work is related to anomaly detection and network alignment. Here, we brieﬂy introduce the
related work in these two aspects.

Anomaly detection Anomaly detection has always been the focus of attention. Point anomalies only
assign outliers to nodes, which can be regarded as a binary 0/1 classiﬁcation problem [Akoglu et al.,
2015, Wang et al., 2018a, Eswaran et al., 2018], and there is no connection between the detected
abnormal nodes. However, with the expansion of anomaly detection in the ﬁeld of graphics and the
needs of actual scenes, abnormal nodes usually need to be displayed as connected subgraphs. On
the other hand, the discovery of anomalies is often inseparable from statistical data. Compared with
traditional parameterized scanning statistics (Kulldorff statistical data [Kulldorff, 1997]), nonpara-
metric graph scan statistics (NPGS) can be applied to heterogeneous graph data because it is free
of distribution assumption. Therefore, many NPGS-based abnormal connected subgraph detection
algorithms were born in combination with actual scenarios and performance requirements. They
can be divided into exact algorithms [Takahashi et al., 2008, Speakman et al., 2015, Le Bars and
Kalogeratos, 2019] and approximate algorithms [Chen and Neill, 2014, Wu et al., 2018, Speakman
et al., 2013]. Among them, Wu.etal proved that anomaly subgraph detection is an NP-hard problem,
and proposed TSPSD [Wu et al., 2018] based on dynamic programming[Cadena et al., 2018, Bhatia
et al., 2020, Cai et al., 2020, Boniol and Palpanas, 2020]. The algorithm approximates the graph to a
tree topology and can be used for the large-scale dataset. Most of these algorithms are used in a single
network, and only a few are used in multi-layer network scenarios [Bindu et al., 2017, De Domenico
et al., 2015, Tam et al., 2019, Jie et al., 2020], and they are all used to identify abnormal nodes, not
subgraphs. To the best of our knowledge, the latest work used to detect multiple networks’ anomaly
subgraphs is ASD-FT [Sun et al., 2020]. It is a method of detecting anomaly subgraphs of the graph
based on anomaly features of another graph. It introduces the basic idea of network alignment to
capture anomaly features’ transmission by inferring the basic edges between multiple entity networks.
However, it is suitable for two network scenarios, which is different from our work.

Network alignment Network alignment is the basic problem of cross-network mining, and many
papers have proposed solutions. Most of them are based on attributes and structure. Traditional
methods [Perito et al., 2011, Vosecky et al., 2009, Nassar et al., 2018, Mathieson et al., 2019] mostly
use entity tag information to achieve alignment, such as user nicknames in social networks and
entity names in knowledge graphs. Manually deﬁning features is another method [Almishari and
Tsudik, 2012, Ni et al., 2018]. This method needs to carefully design features manually for speciﬁc
problems, and it is not easy to migrate to other scenarios. Most of the above two types of methods
only consider attribute information, while some methods consider both network structure and attribute
information (COSNET [Zhang et al., 2015], HYDRA [Liu et al., 2014], REGAL [Heimann et al.,
2018][Ye et al., 2019, Huynh et al., 2019, Yan et al., 2021]). They want to complement the network
structure and attribute information to achieve a better alignment effect. Moreover, there are many
network alignment studies based on deep learning[Sun et al., 2019, Wang et al., 2018b, Meng et al.,
2019]. In addition, because the attribute information may be falsely fabricated or lost or hidden
due to privacy, there are many alignment algorithms based only on structural information (BigAlign
[Koutra et al., 2013], UMA [Zhang and Philip, 2015], IONE [Liu et al., 2016], CrossMNA [Chu
et al., 2019]). Among them, UMA, REGAL, and CrossMNA can be applied to multiple network
scenarios. Nevertheless, UMA and REGAL follow the assumption of topological consistency and
cannot handle networks with different structures. However, CrossMNA does not follow topological
consistency and can learn a common structure across network diversity. By integrating information
from different networks, enhances the effect of embedding and effectively reduces space overhead,
so it is suitable for large-scale multi-network scenarios.

Our work is based on the TSPSD and CrossMNA algorithms. Compared with the existing work, we
are innovative and superior to the baselines in terms of efﬁciency and comprehensiveness.

A.2 Two non-parametric graph scan statistics

A data owner has an attributed network G = (V, E, P ), V = {v1, · · · , vn}, E ⊆ V × V are sets of
vertices and edges in G, and P ∈ Rn is the speciﬁc anomaly feature set of G. P is widely obtained

14

Figure 4: The BJ statistical scores for the three example subgraphs show that the score function
increases with Nα(S) and decreases with N (S) − Nα(S) and α. Yellow points are the vertices with
p-values less than or equal to α.

by the mapping function p : V → [0, 1] deﬁnes the empirical p-value corresponding to each node
v ∈ V [Wu et al., 2018, Chen and Neill, 2014], the smaller the p-value, the more abnormal the node.
Anomaly target detection can be represented as identifying subgraphs S ⊆ G whose vertex set VS
and edge set ES are subset of V , E.
Intersection of subgraphs Subgraph S1 ⊆ G whose vertex set VS1 and edge set ES1 are subset
of V , E. Subgraph S2 ⊆ G whose vertex set VS2 and edge set ES2 are subset of V , E. S is the
intersection set of S1 and S2, where VS = VS1 ∩ VS2 , ES = ES1 ∩ ES2.
Union of subgraphs Subgraph S1 ⊆ G whose vertex set VS1 and edge set ES1 are subset of V , E.
Subgraph S2 ⊆ G whose vertex set VS2 and edge set ES2 are subset of V , E. S is the union set of
S1 and S2, where VS = VS1 ∪ VS2 , ES = ES1 ∪ ES2.
Difference of subgraphs Subgraph S1 ⊆ G whose vertex set VS1 and edge set ES1 are subset of V ,
E. Subgraph S2 ⊆ G whose vertex set VS2 and edge set ES2 are subset of V , E. S is the difference
set of S1 and S2, where VS = VS1 − VS2 , ES = ES1 − ES2 .
empirical p-value The empirical p-value of node v is then deﬁned as:

p(v) =

1
T

T
(cid:88)

t=1

I(f (v(t)) ≥ f (v)).

(8)

where f (v(t)) refers to the feature vector of the node v at time t. The empirical value p(v) deﬁned
above can be interpreted as the proportion of historical observations f (v(t)) when there was no event
occurring with observed values that are greater than or equal to the current observation f (v).

BJ statistics Berk-Jones (BJ) statistic is deﬁned as follows [Berk and Jones, 1979]:

ϕBJ (α, Nα(S), N (S)) = N (S) × KL(

Nα(S)
N (S)

, α),

(9)

where KL is Kullback-Liebler divergence between the observed and expected proportions of p-values
less than α, its formulation is presented as follows:

KL(a, b) =

(cid:26)a log( a

b ) + (1 − a) log( 1−a

1−b ),

0,

if
if

a ≥ b
a < b

(10)

The BJ statistic can be interpreted as the log-likelihood ratio statistic for testing whether the empirical
p-value follows a uniform or piecewise constant distribution. Berk and Jones demonstrated that this
statistic fulﬁlls several optimality properties and has greater power than any weighted Kolmogorov
statistic. We illustrate the BJ statistic in Figure4.

15

HC statistics Higher Criticism (HC) statistic is deﬁned as follows [Donoho et al., 2004]:

ϕHC(α, Nα(S), N (S)) =

Nα(S) − N (S)α
(cid:112)N (S)α(1 − α)

.

(11)

The HC statistic can be interpreted as the log-likelihood ratio statistic for testing whether the empirical
p-values follow a uniform or binomial distribution with N (S) and α.

Anomalies in our experiments In the trafﬁc datasets, anomalous nodes refer to nodes with high
number of trips, the more the number of trips, the more anomalous the node is. Through experiments
on trafﬁc datasets we can conclude that the more datasets we have, the more anomaly information
we get. For example, anomaly detection on one dataset can only detect the node itself as a location
with high trafﬁc such as shopping malls, hospitals, etc. On December 21, 2019, for the location
hospital, anomaly detection on a single dataset can detect it as anomaly. Anomaly detection on the
shared bicycle dataset only cannot detect the anomaly node of Tianjin No. 21 High School, but by
performing anomaly detection on three datasets, the location can be found to be anomalous because
it is a weekend and school is not in session, students living nearby usually choose shared bicycles as
transportation to school instead of online cars, since this day is the ﬁrst day of the National Uniﬁed
Entrance examination for Master’s graduates, candidates usually choose convention cars as their
transportation, so this abnormal node of Tianjin No. 21 High School is detected.

A.3 Theoretical analysis

We now analyze the increasing property in the objective when one iteration of the proposed algorithm
is performed. The convergence of FadMan is proved based on several lemmas and the four properties
of objective function, without the speciﬁc forms of F and Q functions. Each lemma is a building-block
that describes that there exists an local optimal solution.
Theorem 6 (Convergence and Optimality of FadMan). Within the pre-aligned domain (each data
owner integrates the alignment probability information of all node pairs between its private network
and the public network), given the parameter α and σ settings, Algorithm 1 converges to the optimal
solution of the problem.

Proof. At the t-th iteration, we have the public anomaly U t. By the step 5 at Algorithm 1, we can
obtain the local optimum solution {St

i }.
(cid:88)

α(St
F i

i ) + Qi

σ(St

i , U t)

i∈[N ]

i to the server if Qi

By the step 6 at Algorithm 1, we can obtain the new local optimum public anomaly {U ∗
i }. We must
i , U t), otherwise upload U t to the server for the i-th
upload U ∗
owner. By the step 9 at Algorithm 1 and the lemma 10, we can obtain an optimum public anomaly
i , U t). We consider U ∗ as
σ(St
U ∗ for the set {St
the new public anomaly U t+1, and we must have the following inequality:

i , U ∗
i }. Thus we have (cid:80)

i , U ∗) > (cid:80)

i∈[N ] Qi

i∈[N ] Qi

i ) > Qi

σ(St

σ(St

σ(St

(cid:88)

i∈[N ]

α(St
F i

i ) + Qi

σ(St

i , U t+1) >

(cid:88)

i∈[N ]

α(St
F i

i ) + Qi

σ(St

i , U t)

As St+1
i
(cid:80)
i∈[N ] F i

is the local maximum solution at the step 5 at Algorithm 1, we can obtain the new inequailty
α(St+1
i , U t). Algorithm 1 is repeated
α(St
i

i∈[N ] F i
until the public anomaly is not changed. We obtain the optimum solution. We proved the theorem.

, U t+1) > (cid:80)

i ) + Qi

σ(St+1
i

) + Qi

σ(St

Though Theorem 6 looks straightforward to a network-based algorithm framework for federated
anomaly detection, the problems at steps (c1) and (c2) can be addressed with the previous methods Sun
et al. [2020], Wu et al. [2018] support the optimal solutions. At the step (c1), given the public anomaly
U , the optimal private anomaly S∗
i is obtained. We are target for the new improved public anomaly
U at the next iteration.
At the t-th iteration, for the server side, we can observe the public anomalies {U ∗
i } and the function
values of F and Q. We assume that there exists a public anomaly subgraph U ∗ ⊆ G0 maximizing
(cid:80)

i , U ∗) under the ﬁxed S∗

i . The value of F i

i ) will not change with the update U .

i∈[N ] Qi

α(S∗

σ(S∗

16

Lemma 7 (Q upper bound). We must have the upper bound of the optimal Q under the ﬁxed S∗
i .

N
(cid:88)

i=1

Qi

σ(S∗

i , U ∗

i ) ≥

N
(cid:88)

i=1

Qi

σ(S∗

i , U ∗).

(12)

Proof. At the step 6 in Algorithm 1, we can observe that U ∗
ﬁxed S∗

i maximizes the Qi
i . Thus for the i-th data owner, given an public anomaly U ∗, we must have
i , U ∗

i ) ≥ Qi

i , U ∗)

σ(S∗

σ(S∗

Qi

σ(S∗

i , U ∗

i ) with the

For all of the local data owners, the inequality (cid:80)N
We proved this lemma for Q upper bound.
i maximizes (cid:80)
Lemma 8 (Q lower bound). A public anomaly U o ⊆ (cid:83)
i∈[N ] U ∗
We must have the lower bound of the optimal Q under the ﬁxed S∗
i .

i ) ≥ (cid:80)N

i=1 Qi

i=1 Qi

i , U ∗

σ(S∗

σ(S∗

i , U ∗) must satisﬁed.

i∈[N ] Qi

σ(S∗

i , U o).

N
(cid:88)

i=1

Qi

σ(S∗

i , U ∗) ≥

N
(cid:88)

i=1

Qi

σ(S∗

i , U o).

(13)

Proof. Under the ﬁxed S∗
maximizing (cid:80)
σ(S∗
have the inequality (13). This proof is proved with the intuition ways.

i , we have already assumed that the public anomaly subgraph U ∗ ⊆ G0
i , U ∗). Thus for a public anomaly subgraph U o ⊆ (cid:83)
i , we must

i∈[N ] U ∗

i∈[N ] Qi

Lemma 9 (Q optimum solution). The solution U o = U ∗ maximizes Q under the ﬁxed S∗
The optimum solution must exist between

i over G0.

U ⊆(cid:83)

min
i∈[N ] U ∗
i

N
(cid:88)

(cid:104)

i=1

Qi

σ(S∗

i , U ∗

i ) − Qi

σ(S∗

i , U )

(cid:105)

(14)

Proof. Proofs of the lemma consist of two phases. At the ﬁrst phase, we prove that there exists a
public anomaly U ⊆ G0 which minimize the gap between the Q upper bound and lower bound.
According to Lemma 7 and 8, we can observe that the optimum public anomaly U must minimize the
following problem:

min
U ⊆G0

N
(cid:88)

i=1

(cid:104)
Qi

σ(S∗

i , U ∗

i ) − Qi

σ(S∗

(cid:105)
i , U )

Next, for the phase two, we are target to prove U = U o = U ∗. We ﬁrst assume U = U o ∪ U −, where
U o ⊆ (cid:83)

i . Then, we have the optimum solution as follows:

i and U − ⊆ G0 − (cid:83)

i∈[N ] U ∗

i∈[N ] U ∗

N
(cid:88)

(cid:104)
Qi

σ(S∗

i , U ∗

i ) − Qi

σ(S∗

i , U o ∪ U −)

(cid:105)

i=1
i∈[N ] Qi

σ(S∗

σ(S∗

i∈[N ] Qi

which is equal to maximize (cid:80)
i , U o ∪ U −). By the properties (P3) and (P4), we aim to
prove that the vertices of U − must be aligned on subset of {S∗
i }. We ﬁrst assume there exist a vertex
v ∈ VU − , however, the vertex v is not aligned with any vertices of {S∗
i }. Then, we must have the
i , U o ∪ U − − {v}) > (cid:80)
inequality (cid:80)
i , U o ∪ U −) by the property (P4), and
the result contradicts with the maximum solution U o ∪ U −. Thus all the vertices of U − must be
aligned on subset of {S∗
We assume that the public anomaly U − is not empty. Without loss of generality, we assume there
exist a vertex v ∈ VU − which is aligned on the i-th local data owner S∗
i . We know that v /∈ VU ∗
.
i ∪ {v}) > Qi
We must have the inequality Qi
i , U ∗
i ) by the property (P3), and the result
contradicts with the maximum solution U ∗
i . Thus the public anomaly U − is empty. We have U = U o,
and prove the lemma that U o is the optimum solution.

i∈[N ] Qi

i , U ∗

σ(S∗

σ(S∗

σ(S∗

i }.

i

17

Lemma 10 (Theorem 1, from Donahue and Kleinberg [2021]). An optimal partition Π can be created
for a set of local data owners [N ]. First, start with every owner maximizing the local public anomaly
U ∗
i . Then, group the owners together in ascending order of node size, halting at the ﬁrst owner would
| (cid:80)
increase its error ((cid:80)
i ) by joining the coalition
| − |VU ∗
C. The resulting partition Π is optimal.

k∈C |VU ∗

k∈C |VU ∗

|)/(|VU ∗

i , U ∗

σ(S∗

|)Qi

k

k

i

i

Proof. The public anomaly U ∗
is the local maximum solution. The Q upper bound is derived
i
intuitively from summing local maximum solutions is greater than the global maximum solution.
For the Q lower bound, the maximum solution over the local set is less than or equal the maximum
solution over the global set. We can observe that the maximum solution must exist between the upper
bound and lower bound, and minimize the gap between the two bounds. Note that when the gap is 0,
the optimum solution is equal to the solution of lower bound. All of local solutions U ∗
i are the same.
However, in the problem (14), Qi
σ(S∗
i , U ) can not be computed at the server because the forms of
function Q and private anomalies {S∗
i } are not accessed for the data protection rules. We employ the
framework for optimality and stability in federated learning to address the problem (14) Donahue and
Kleinberg [2021]. We deﬁne a coalition C ⊆ [N ] is a subset of local data owners, and all owners [N ]
are partitioned into coalition set {C}. We consider the gap between two bounds (14) as errors across
owners. By the properties P3 and P4, we know that the value of Qi
i , U ) changed with the size of
U for the ﬁxed S∗

σ(S∗

i . Given a partition Π of [N ], we deﬁne its error below:
(cid:19)

(cid:18) (cid:80)

f{U ∗

i }(Π) =

(cid:88)

(cid:88)

C∈(cid:81)

i∈C

|VU ∗

i

| ·

k∈C |VU ∗
| · (cid:80)

| − |VU ∗
|
k∈C |VU ∗
|

k

i

i

k

|VU ∗

Qi

σ(S∗

i , U ∗
i )

(15)

i∈C U ∗

By Lemma 10, we select a coalition C ∈ Π with the minimum error, and achieve the desired public
i . The public anomaly U is the optimal solution for (cid:80)
anomaly U = (cid:83)
By the theorem, our algorithm guarantees on detecting the most anomaly subgraphs on multiple
private attributed networks. FadMan’s time complexity is O(kN |V |2), where k is the number of
iterations, N is the number of networks, V is the number of nodes of the network. In practice, the
implementations of Fα and Qσ are normalized because the function value ranges are different.

i∈[N ] Qi

σ(S∗

i , ·).

A.4 Datasets

We constructed two multi-network scenarios based on the following ﬁve real datasets: Computer
network, Car-hailing & Bicycle-sharing & Subway (Metro) & POI (Point of Interest). POI is the
groud truth dataset.

(1) Computer network: An Internet company provided browsing logs from the *edu.cn websites,
which involved a total of 996 websites, 131, 205 IPs, and the time range was from May 31, 2014 to
May 31, 2015, with a total of 3, 978, 073 logs. In this time range, for a certain website/IP on the t-th
day, we take the number of logs related to that website/IP on the t-th day as the observed value ct. By
comparing ct with the daily ci, (i < t) of the website/IP before the t-th day, the empirical p-value of
the website/IP on the t-th day is obtained. Therefore, for all websites/IPs involved in the daily log, we
have their corresponding p-value snapshots. We divided these logs into six parts, each containing two
months of data, and constructed six computer networks based on this. (2) Car-hailing: We use the
online car-hailing dataset provided by a transportation company. This dataset was collected 58, 674
online car-hailing orders in Tianjin on December 20, 2019. Each record contains the time of the order
and the start and end of the itinerary. We processed the dataset as follows: First, we divide the dataset
into 24 parts according to the time (hours). For hourly data, we used the start point and endpoint
of the itinerary as a node in the network and regarded the start point and endpoint of an itinerary is
connected so that we can obtain the corresponding itinerary network of this hour. For the node v in
the itinerary network of the hour t, we regard the number of times the node v is used as the start point
or the endpoint in the hour t as the observed value ct, and regard observed values ci, (i (cid:54)= t) of v in
other hours as compared values, the empirical p-value of v at hour t can be obtained. As a result,
we obtained 24 car-hailing itinerary networks. (3) Bicycle-sharing: The dataset is also provided by
a transportation company. It collected 229,814 bicycle-sharing orders in Tianjin on December 20,
2019. Each order contains time, start location, and end location. We perform the same processing

18

Figure 5: The translation of the weibo: Beautiful weather, took my son to Xigu Park for a little scoot,
then dinner at Dingzigu! Came home for a big nap, got up and went to Chuangyunli again!

Figure 6: The translation of the weibo: I spent half an hour playing in the Xigu Park opposite my
dormitory.

on this dataset as the car-hailing dataset. (4) Subway: This dataset collected subway trafﬁc data in
Tianjin on December 20, 2019. The data recorded the hourly passenger ﬂow of 143 subway stations
in Tianjin that day, totaling 3,432. According to the Tianjin subway route, connections are established
between interconnected subway stations to form a subway network with 143 nodes and 153 edges.
For the subway station s at hour t, we regard the passenger ﬂow of s in that hour as the observed
value ct. Next, perform the same processing as the car-hailing dataset. As a result, we obtained 24
subway networks. (5) POI: This dataset comes from Baidu Maps, recording the information of
242,189 interest points in Tianjin. Each message contains the name, location, telephone number,
longitude, latitude, id, and keyword. This dataset can map the longitude and latitude information of
the Car-hailing, Bicycle-sharing, and Subway datasets to speciﬁc locations, thereby obtaining more
realistic results.

A.5 Metrics

Metrics for evaluating algorithms’ ability to detect correlated anomalies on multiple attributed
networks: The results of FADMAN are anomaly subgraphs. The anomaly subgraph contains only
a few normal nodes, most of which are abnormal. For example, if an IP has a record of attacking
a website, it is identiﬁed as an abnormal node. If it is in the algorithm result, it is a true negative;
otherwise, it is a false positive. For a normal node that has not attacked the website, if it is in the
result, it is a false negative; otherwise, it is a true positive. We compare the results with ground
truth to get these metrics. Metrics for evaluating the algorithms’ ability to detect anomalies on
an attributeless network: We regard G6 as an attributeless network by setting p-values of its nodes
to 1. We obtain the correlated anomaly subgraphs of the ﬁrst ﬁve networks and their public anomaly
subgraph, then align the public anomaly subgraph to G6 to obtain the anomaly subgraph of G6.
Anchor_Count indicates the number of real abnormal anchor links between the public anomaly
subgraph and G6 detected by the algorithm we proposed.

A.6 Weibo images in the trafﬁc datasets case study

The Weibo images mentioned in the trafﬁc dataset case are shown in Figure5, 6, 7, and 8.

19

Figure 7: The translation of the weibo: #Tianjin Explosion# The park is very quiet and the air
quality is exceptionally good. Xigu Park.

Figure 8: The translation of the weibo: Autumn is in full swing in Tianjin Xigu Park.

20

21
Figure 9: Illustration of our algorithm. The subgraphs within solid black line freeform shapes are
the largest anomaly subgraphs (i.e., max Fα), and the yellow shaded subgraphs represent the aligned
subgraphs (i.e., max Qσ). The vertex values are empirical p-values.

