9
1
0
2

t
c
O
3

]

Y
S
.
s
s
e
e
[

1
v
0
2
5
1
0
.
0
1
9
1
:
v
i
X
r
a

Detecting integrity attacks in IoT-based
Cyber Physical Systems:
a case study on Hydra testbed

Federica Battisti, Giuseppe Bernieri,
Marco Carli, Michela Lopardo, and Federica Pascucci
Department of Engineering
Universit`a degli Studi Roma Tre
Roma, Italy

Abstract

The Internet of Things paradigm improves the classical information sharing
scheme. However, it has increased the need for granting the security of the con-
nected systems. In the industrial ﬁeld, the problem becomes more complex due to
the need of protecting a large attack surface while granting the availability of the
system and the real time response to the presence of threats. In this contribution,
we deal with the injection of tampered data into the communication channel to
affect the physical system. The proposed approach relies on designing a secure
control system by coding the output matrices according to a secret pattern. This
pattern is created by using the Fibonacci p-sequences, numeric sequence depend-
ing on a key. The proposed method is validated on the Hydra testbed, emulating
the industrial control network of a water distribution system.

Keywords– Cyber Physical Systems, Industry 4.0, Industrial Internet of Things

1

Introduction

In the last decades, we assisted to the spread of a new trend aimed at connecting as
many devices as possible. This trend led to what is commonly referred to as Industry
4.0, the fourth industrial revolution. The core innovation of this revolution is the pos-
sibility for the Cyber-Physical System (CPS) of exploiting Internet to extend the com-
munication range beyond the closed industrial communication networks, thus leading
to the birth of the Industrial Internet of Things (IIoT). IIoT requires the deployment of
sensors, actuators, and communication devices in the physical infrastructure for allow-
ing the remote monitoring and control of the whole system as well as of its components.
The distributed nature of IIoT, together with the need of speciﬁc communication
paradigms, and the adoption of Internet, may impact the reliability, the robustness, and

1

 
 
 
 
 
 
the security of CPS [1]. In more details, in IoT CPS context, the availability of the
system is a key factor. In fact, since CPSs deal with dynamic systems, it is important
that the service or system is always available and that the information is shared within
time delays that can be very short in real time applications [2]. Neverthless, timing and
information reliability is of paramount importance: the detection of data modiﬁcation
(due to transmission errors or to malicious alteration) should rise an alert as soon as
possible for a prompt reaction/mitigation. If data modiﬁcation is not timely detected,
it may result in severe disruption of the system or even in its complete damage. Badly
secured IIoT structures and services may be used as entry points for network attacks
and expose both data and systems to threats [3–5].

In this contribution, we aim at the design of a secure control system able to identify
the injection of tampered data (e.g., the deception attack) in the communication chan-
nel. It useful to underline that the integrity attack is extremely dangerous since it might
be unnoticed till the unavailability of the physical system happens. We propose to code
the physical output of the system through permutation matrices whose scheme varies
based on a secret sequence. In more details, we extend the works in [6, 7] to non linear
systems, by introducing the following innovations:

• the coding matrices are based on permutations obtained by rotation and ﬂipping
that modify the order of the elements in the output vector and their sign. To the
best of our knowledge, in literature only a single rotation is used in [6], and a
small subset of signed permutation matrices in [7]. In the proposed system, the
ﬂipping operation is adopted for increasing the number of possible matrices that
can be used thus gaining in security;

• the encoding procedure satisﬁes the real time constraint and avoids quantization

errors;

• the computational complexity is highly reduced since the coding matrices can be

precomputed off-line;

• the security level of the system is increased by updating the coding matrix ac-
cording to a rule based on key-dependent sequences, the Fibonacci p-sequences,
exploiting the communication protocol to avoid synchronization problems.

2 Related works

The complex structure of a connected CPS is exposed to several attacks in different
points, thus resulting in a large attack surface [8]. It is possible to identify three layers
as potential goals of an attacker: human, network, software, and hardware layer.

Several studies have been performed for assessing the security or mitigating the
effects of an attack in a IoT-based CPS. In particular, secure control theory is used to
estimate the impact of cyber threats on the physical plant [9]. Given the complexity
of the problem, the methods proposed in literature are usually dedicated to counteract
attacks that can be roughly classiﬁed in two groups: DoS and deception-based attacks.
The impact of a DoS attack, even if limited to a subset of the network, may have a

2

disruptive effect on the whole system [10]. In [11], the availability of the system or
service when their functionalities are interrupted (i.e., by limiting the exchange of in-
formation between sensors and control system) is considered. In [12], the attacker goal
is to limit the availability of a subset of controls and sensors. To avoid the detection
of his/her malicious behavior, the attacker mimics poor network conditions (i.e., by
randomly dropping packets). Different mitigation methods are presented in [13].
In the deception-based attacks, the adversary, after having gained access to the CPS,
injects false or tampered information towards or from sensors or controllers (i.e., the
value of a measurement or the sensor identiﬁcation label). An effective attack is de-
signed to remain unnoticed to the detection system until a severe fault occurs. In [14],
the cases in which a stealthy deception attack may be performed without being detected
are addressed. In [15], the authors show that resiliency to malicious data injection may
be obtained if a subset of measurements is immune to the attacks. In [16], a false data
injection attack model is presented as a constrained control problem and the theoreti-
cal analysis of the conditions under which the attacker could successfully destabilize
the system are shown. An extended review of the security aspects is in [17]. In [6] a
smart attack on linear time-invariant systems is addressed. The data injection is per-
formed in such a way that the state estimation error increases without being detected
till the moment when the presence is fatal for the system itself. The authors propose
to code the sensor measurements exploiting a Givens rotation matrix for securing the
system output. A similar approach is adopted in [7]. The key idea is to use a subset of
the signed permutation matrices to perform rotation and ﬂipping of the output vector
space. In this way, the signal injected by the attacker, once decoded, introduces a large
residual error, so it does not show the same statistical property of the healthy signal.
The same problem is addressed in [18], where a solution based on the encryption of
shared information to protect data integrity (and conﬁdentiality) is proposed. In our
contribution we deal with the issues highlighted in [6, 7, 18]. In particular, we change
the output coding scheme at each transmission time by selecting the coding matrix out
of a predeﬁned set, i.e., the set of the signed permutation matrices. This coding scheme
avoids quantization errors and reduces the computational complexity, since it results in
scrambling the elements of the observation vector.

3 System and Adversary Modelling

3.1

Industrial CPS

In this work the industrial CPS depicted in Fig. 1 is considered. It is composed by
the physical system (i.e., the actuators, the plant, and the sensors) and the monitoring
system, the controller, and a Human Machine Interface (HMI). According to the IIoT
paradigm, the sensors and the actuators of the physical system forward the collected
data to the monitoring system, the controller, and the HMI through the network at each
transmission time k using a protocol that identiﬁes the sequence number of the packet
in the data stream (e.g., Modbus/TCP).

The physical system can be described by a nonlinear uncertain system: thus, the

3

Figure 1: The IoT based CPS and the detection scheme: the physical system commu-
nicates with the controller, the monitoring system, and the HMI by a network.

discrete time model is given by

xk = f (xk−1, uk−1) + wk
yk = g(xk) + vk

(1)

where xk ∈ Rnx is the state of the system, uk ∈ Rnu is the input, yk ∈ Rny is the output,
f (·) is the state transition map, g(·) is the observation map, and wk ∈ Rq, vk ∈ Rl are the
process and measurement noises, respectively. The input uk is known, while wk and vk
are Gaussian white noise with known constant covariance matrices (i.e., wk ∼ N (0, Q)
and vk ∼ N (0, R), respectively).

The monitoring system is able to detect both faults and attacks. To this aim, it is
implemented as a fault detection system [19] and it is composed by a state observer
and a detector. The state observer is able to replicate the behavior of the plant (i.e.,
the estimate of the state ˆxk), knowing the input from the controller and the output from
the sensors at each transmission time k. It is implemented by means of an Extended
Kalman Filter (EKF), which estimates the state according to a prediction/correction
scheme. In the prediction, an a priori estimate ˆx(−)
is computed
as:

and its covariance P(−)

k

k

ˆx(−)
k
P(−)
k

= f ( ˆxk−1, uk−1)
= FP(+)
k−1F T + Q

(2)

where F is the Jacobian of the state transition map f (·). The update of the estimate and

4

its covariance are obtained as

Kk
ˆx(+)
k
P(+)
k

k GT )(GP(−)
k + Kk(yk − g( ˆx(−)

= (P(−)
= ˆx(−)
= (I − KkG)P(−)

k GT + R)−1
)

k

k

(3)

where Kk represents the Kalman gain, G is the Jacobian of the observation map g(·)
, and I is the identity matrix. Due to the nonlinearity of the system, a validation gate
based on Mahalanobis distance and χ-square test is implemented to exclude the out-
liers and avoid non-convergence. The update is performed only when the following
inequality holds

[yk − g( ˆx(−)

k

)]T (GP(−)

k GT + R)[yk − g( ˆx(−)

k

The detector evaluates the residual

rk = yk − g( ˆx(+)

k

)

)] ≤ χ 2.

(4)

(5)

by comparing it with a threshold β ∈ Rny computed during a fault/attack free operating
condition during the time interval [0, . . . , T ), so that

βi = max
k=0,...,T

rk,i ∀i = 1, . . . , ny.

Finally, the following decision rule Rk is applied

Rk =

(cid:40)H0
H1

if rk ≤ β
if rk > β

(6)

(7)

where H0 is the healthy and H1 is the under attack hypothesis, respectively. When
H1 is accepted, the monitoring system triggers an alarm and forwards the information
to the HMI.

The controller is devoted to regulate the desired output implementing a feedback
control law and it is represented by a Programmable Logic Controller (PLC). The HMI
is represented by a Supervisory Control And Data Acquisition system.

3.2 Adversary model

In this work, the adversary is assumed to know the network topologies and the re-
sources connected (i.e., the controller, the monitoring system, the sensors, and the
actuators). The adversary objective is to reduce the availability of the resources by
compromising data integrity. To this end, the target of the attacker is the communica-
tion channel between the sensors and the controller: the adversary is able manipulate
the controller by injecting false data into this channel. Therefore, the adversary is as-
sumed to be able to corrupt the communication channel between the concentrator and
the state observer bypassing the attack detection tool (e.g., a conventional intrusion
detection system). According to [12], the disruption resources of the adversary en-
compass both the plant and the monitoring systems, the disclosure resources exploited

5

during the attack are represented by the data in the communication channels, and the
model knowledge is not required.

The challenge of the attack is to remain stealthy with respect to the monitoring sys-
tem. In [16] and [14], the conditions under which a stealth attack can be successfully
set up are presented, however they consider only linear time invariant systems. For
stable non-linear systems, a stealth attack can be set up to get insights on the vulnera-
bilities of the network. For example, the adversary can set up a replay attack exploiting
steady state output to test if the man in the middle attack is successful: at steady state,
indeed, the output does not change and the monitoring system can be easily misled.

4 Detection strategy

As previously mentioned, the proposed approach protects the communication channel
between sensors and controller/monitoring system by coding the system output, ac-
cording to a secret and predeﬁned pattern. More speciﬁcally, the coding scheme is
obtained by modifying the order of the elements in the output vector and eventually
their sign. It is implemented by multiplying the output of the system, collected by the
concentrator, with a signed permutation matrix having only one non-zero entry (either
1 or −1) in each row and column. The signed permutation matrices form a group with
integer inverse, thus the encoding procedure does not introduce quantization errors.

The coding matrix is modiﬁed at each transmission time according to a shared key,
that depends on the Fibonacci p-numbers and on the packet number. The set of all the
signed permutation matrices SΠ of a vector yk ∈ Rm is generated and sorted: at each
transmission time, the shared key is used to select the coding matrix from the sorted
set.

In more details, security is given by:

• the seed of the sequence used for selecting the coding matrices;

• the sorting of the set SΠ;

• the output coding (i.e., scrambling).

The coding matrices are continuously updated according to a rule based on the
Fibonacci p-sequences. A Fibonacci p-sequence Fp(n) is deﬁned by the following
recursive formula:

Fp(n) =






0,
1,
Fp(n − 1) + Fp(n − p − 1), otherwise.

n < 0;
n = 0;

(8)

Since the number of feasible rotations and ﬂipping performed to obtain the coded
output is limited to ny, there is the need for mapping the selected Fibonacci p-sequence
to the interval [1, . . . , ny]. In order to do this, the modulo operation with base ny is
performed.

It should be noticed that, as demonstrated in [20], the sequence Fp(mod ny) forms a
periodic series, that is, it repeats by returning to its starting values. This could be a se-
curity issue since an eavesdropping could reveal the adopted secret sequence. To cope

6

with this situation, in the envisaged system the sequences are periodically changed,
although in this contribution the attacker is supposed to set up a blind replay attack.
The period depends on the dimension of the observation space ny and the p and can be
easily computed [20].

Overall, the use of these sequences grants an increased security to the system thanks

to two elements:

• it avoids the problem of synchronization in case of packet loss; in fact, the se-

lected n depends on the sequence number of the packet in the data stream;

• the order of the matrices used for coding the output signal depends on the se-
lected Fibonacci p-sequence; by changing the p-value, the order can be modiﬁed
without increasing the computational complexity of the system.

The proposed detection strategy improves the state of the art under several perspec-
tives. It adopts the same approach as proposed in [6]. Instead of being encrypted [18],
the outputs are coded. In fact, the encryption of each message requires increased com-
putational complexity that may be not affordable in a real time and low energy con-
sumption distributed system [21], especially when considering legacy systems. More-
over, with respect to [6], we update the coding matrix at each transmission time thus
reducing the probability of disclosure of the matrix. In [6] the coding matrix is updated
periodically since its computation is hard. Furthermore, this approach is applied to
nonlinear systems, that have not been yet considered in the literature.

5 Case Study on Hydra testbed

The testbed Hydra [22] has been used to validate the proposed monitoring system. The
Hydra testbed emulates a water distribution system that combines gravity and pumps
to move the ﬂuid inside the system. The physical structure of the testbed has been
designed using a low-cost approach, however, it is interfaced to the control system
In the following the testbed is
by an industrial PLC over a Modbus/TCP network.
described and a simple replay attack is performed.

5.1 Hydra testbed

The physical system of the testbed is composed by 3 tanks and a reservoir (see Fig. 2).
Tanks 1 and 2 are connected by a serial pipeline: the ﬂuid cascades due to gravity and
the ﬂow is regulated by the proportional valve v1,2. Tank 2 and 3 are connected in a
parallel conﬁguration: the ﬂuid moves due to Stevin’s Law (communicant vessels) and
the ﬂow is regulated by the proportional valve v2,3. Each tank is equipped with two
redundant level sensors: the ﬁrst one is represented by a pressure sensor, the second
one by a sonar sensor. The whole system is fed by a reservoir: the centrifugal pump P1
provides water to Tank 1, while the centrifugal pump P2 links Tank 3 and 1.

The SCADA is implemented using Mango Automation that provides also a HMI.
The controller is developed using a Modicon M340 PLCs by Schneider Electric pro-
grammed in Ladder Logic using Unity Pro XL v7.0. It collects real-time data from the

7

Figure 2: The physical system of the Hydra testbed: the left-hand ﬁgure shows the
single tank system, the right-hand one the whole system.

water level sensors and controls the actuators and executes the low-level control (e.g.,
it performs operator or SCADA commands, or the automatic maximum level control).
The proposed monitoring system is implemented on a Galileo board. The continuous
time state transition model is represented by the following equations:

A ˙x1 = P1 + P2 − Q1,2
A ˙x2 = Q1,2 − Q2,3 − Q2,3,h + Q3,2,h
A ˙x3 = Q2,3 + Q2,3,h − Q3,2,h − P2

(9)

where:

√

Q1,2 = av1,2
Q2,3 = av2,3δ−1(x2 − hcon)δ−1(x3 − hcon)·
sign(x2 − x3)(cid:112)2g|x2 − x3|

2gx1

Q2,3,h = av2,3δ−1(x2 − xcon)δ−1(xcon − x3)(cid:112)2g(x2 − hcon)
Q3,2,h = av2,3δ−1(x3 − xcon)δ−1(xcon − x2)(cid:112)2g(x3 − hcon)
P2
P1

= k2a
= k1

2gx3

√

Qi, j is the ﬂow through tanks i and j, δ−1(·) is the step signal, g the gravitational
acceleration, hcon is the height of the connection between tanks 2 and 3, ki the gain
of the i-th pump, A and a the area of the cross-section of the tanks and the pipes,
respectively. The discrete-time version of this model is used as state transition map in
the prediction step of the EKF. The observation map is given by:

yk = g(xk) = Ixk.

(10)

8

Figure 3: The communication architecture of the Hydra testbed.

The network architecture of the Hydra testbed is shown in Fig. 3: two Arduino
boards and two Galileo boards control all the sensors and actuators. Speciﬁcally, one
Arduino board is devoted to control the proportional valves and the centrifugal pumps
that represent the actuators of the water distribution systems. The second Arduino
board is used to interface the level sensors. The Galileo boards are used to interface the
Arduino ones on a ModBus/TCP network. The ﬁrst one, Galileo #1, collects data from
the Arduino board devoted to interface the sensor and dispatch the measurements to
the network by encapsulating the measurements in Modbus/TCP packets after applying
the proposed coding scheme. The second one, Galileo #2 is connected to the Arduino
devoted to control the motors. It collects the input from the controller and forwards it to
the corresponding Arduino board. Finally, another Galileo, Galileo #3, is connected to
the PLC: it runs the monitoring system and is able to decode the data from the sensors.
All the modules are connected by a local network by means of an Ethernet router.

5.2 Validation test

To prove the effectiveness of the proposed approach, an integrity attack has been set up.
By means of a MITM attack, the communication link between the Galileo #1 and #3
has been corrupted by injecting false data. We wrote code that exploits a vulnerability
of the network to implement the attack and Wireshark had been exploited to collect
network packets.

The attack starts using ARP cache poisoning, in this way the links between IP

9

(a) Output without encoding.

(b) Coded Output.

addresses and MAC addresses in the ARP table of the hosts (i.e., the Galileo #1 and
the Galileo #3) are corrupted. Consequently, the data stream from the Galileo #1 to
the Galileo #3 is redirected to the malicious agent. The replay attack starts when the
system reaches the steady state. This status of the system can be easily identiﬁed by
eavesdropping the actuator controls, since these signals do not change when the system
is at steady state.

During the attack, the adversary forwards to the Galileo #3 (and the PLC) wrong
information about the level of ﬂuid in the tanks. Speciﬁcally, the malicious agent repli-
cates at each instant the levels recorded when the attack started. The result of the replay
attack without coding the output is reported in Fig. 4(a): in this case the attack cannot
be perceived by the monitoring system, since the attacked measurements look like the
expected ones and are inside the tolerance introduced by the threshold. In this case, the
monitoring system does not provide any alarm to the SCADA system and the attack
can escalate.

On the contrary, by applying the proposed coding method, the monitoring system
is able to timely identify the attack. The output analysis is shown in Fig 4(b): as it
can be seen, the monitoring system clearly identiﬁes the anomalies. The output vector
changes at each transmission time since the attacker is not able to reproduce the correct
scrambling sequence. As a result, all the thresholds of the residuals related to the state
of each tank are violated and the detector triggers the alarm.

6 Conclusion

IoT based CPSs represent a revolution in many sectors: from industrial plants or en-
ergy generation systems, to distributed health systems. Smart services, cost production
reduction, and quality assessment are only few of the possible advantages that results
from this industrial revolution. However, due to the interdisciplinary nature of these
systems, they are prone to security ﬂaws. In this context, cyber attacks may result in
physical damage of the system up to creating threats to the human life. In this contribu-
tion, a method for securing IoT based CPSs through the timely detection of deception
attacks is presented. The proposed approach is based on coding the output of the system
by using permutation matrices selected from a set. This set is obtained through opera-
tions of scrambling and ﬂipping. The selection of the permutation matrix is based on

10

Fibonacci p-sequences. The proposed detection strategy can cope with all issues re-
lated to the computational complexity of the coding step thus assuring the compliance
with the time delay constraints typical of CPSs. Furthermore, quantization errors, that
may have a nonlinear behavior and can compromise the convergence of the residual
estimator, are avoided. The approach has been validated on an testbed that emulates
industrial control systems. Future work will be devoted to apply more complex coding
scheme to identify attacks that can be mislead by the monitoring system.

References

[1] A. Sajid, H. Abbas, and K. Saleem, “Cloud-assisted IoT-based SCADA systems
security: A review of the state of the art and future challenges,” IEEE Access, vol.
4, pp. 1375–1384, 2016.

[2] W. Zeng and M. Y. Chow, “A trade-off model for performance and security in
secured networked control systems,” in IEEE Int. Symp. on Industrial Electronics,
pp. 1997–2002, 2011.

[3] K. Rose, S. Eldridge, and L. Chapin, “The Internet of Things: An overview-
understanding the issues and challenges of a more connected world.,” The Internet
Society (ISOC), pp. 1–50, 2015.

[4] M. Stolpe, “The Internet of Things: Opportunities and challenges for distributed

data analysis,” SIGKDD Explor. Newsl., vol. 18, no. 1, pp. 15–34, 2016.

[5] J. Rubio-Hernan, L. De Cicco, and J. Garcia-Alfaro, “On the use of watermark-
based schemes to detect cyber-physical attacks,” EURASIP Journal on Information
Security, vol. 2017, no. 1, pp. 8, 2017.

[6] F. Miao, Q. Zhu, M. Pajic, and G. J. Pappas, “Coding schemes for securing cyber-
physical systems against stealthy data injection attacks,” IEEE Transactions on
Control of Network Systems, vol. PP, no. 99, pp. 1, 2016.

[7] F. Battisti, M. Carli, F. Pascucci, “Securing cyber physical systems from injec-
tion attacks by exploiting random sequences,” IEEE Inter. Conf. on Wireless and
Mobile Computing, Networking and Communications, 2017.

[8] A. R. Sadeghi, C. Wachsmann, and M. Waidner, “Security and privacy challenges
in industrial Internet of Things,” in 52nd ACM/EDAC/IEEE Design Automation
Conference (DAC),pp. 1–6, 2015.

[9] L. Cazorla, C. Alcaraz, and J. Lopez, “Cyber stealth attacks in critical information

infrastructures,” IEEE Systems Journal, vol. PP, no. 99, pp. 1–15, 2016.

[10] P. Srikantha and D. Kundur, “Denial of service attacks and mitigation for stability
in cyber-enabled power grid,” in IEEE Power Energy Society Innovative Smart
Grid Technologies Conference (ISGT), pp. 1–5, 2015.

11

[11] A. A. C´ardenas, S. Amin, and S. Sastry, “Research challenges for the security
of control systems,” in Proc. Conf. on Hot Topics in Security, HOTSEC’08, pp.
6:1–6, 2008.

[12] A. Teixeira, I. Shames, H. Sandberg, and K. H. Johansson, “A secure control
framework for resource-limited adversaries,” Automatica, vol. 51, pp. 135 – 148,
2015.

[13] R. R. Rejimol Robinson and C. Thomas, “Evaluation of mitigation methods for
distributed denial of service attacks,” in IEEE Conf. on Industrial Electronics and
Applications (ICIEA), pp. 713–718, 2012.

[14] C. Kwon, W. Liu, and I. Hwang, “Security analysis for cyber-physical systems
against stealthy deception attacks,” in Proc. American Control Conf., pp. 3344–
3349, 2013.

[15] T. T. Kim and H. V. Poor, “Strategic protection against data injection attacks on
power grids,” IEEE Transactions on Smart Grid, vol. 2, no. 2, pp. 326–333, 2011.

[16] Y. Mo and B. Sinopoli, “False data injection attacks in cyber physical systems,”

in First Workshop on Secure Control Systems, 2010.

[17] R. Zhang and P. Venkitasubramaniam, “Stealthy control signal attacks in linear
quadratic gaussian control systems: Detectability reward tradeoff,” IEEE Transac-
tions on Information Forensics and Security, vol. PP, no. 99, pp. 1–12, 2017.

[18] P. Ganesan, R. Venugopalan, P. Peddabachagari, A. Dean, F. Mueller, and M. Si-
chitiu, “Analyzing and modeling encryption overhead for sensor network nodes,”
in ACM Int. Conf. on Wireless Sensor Networks and Applications, WSNA, pp.
151–159, 2003.

[19] G. Bernieri, E. Etchevs Miciolino, F. Pascucci, R. Setola, “Monitoring system
reaction in cyber-physical testbed under cyber-attacks,” Computers and Electrical
Engineering, 59, pp. 86–98, 2017.

[20] D. D. Wall, “Fibonacci series modulo m,” The American Mathematical Monthly,

vol. 67, no. 6, pp. 525–532, 1960.

[21] O. Goldreich, Foundations of Cryptography: Volume 2, Basic Applications, Cam-

bridge University Press, New York, NY, USA, 2004.

[22] G. Bernieri, F. Del Moro, L. Faramondi, F. Pascucci, A testbed for integrated
fault diagnosis and cyber security investigation Int. Conf. on Control, Decision
and Information Technologies, pp. 454–459, 2016.

12

