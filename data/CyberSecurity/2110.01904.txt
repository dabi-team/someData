2
2
0
2

l
u
J

9
2

]

R
C
.
s
c
[

2
v
4
0
9
1
0
.
0
1
1
2
:
v
i
X
r
a

System Security Assurance: A Systematic Literature Review

Ankur Shukla∗,a, Basel Katta, Livinus Obiora Nwekea, Prosper Kandabongee Yenga,
Goitom Kahsay Weldehawaryatb

aDepartment of Information Security and Communication Technology, Norwegian University of Science
and Technology, Gjøvik, Norway
bDepartment of Building and Environmental Technology, Norwegian University of Life Sciences
(NMBU), Norway

Abstract

System security assurance provides the conﬁdence that security features, practices, pro-
cedures, and architecture of software systems mediate and enforce the security policy
and are resilient against security failure and attacks. Alongside the signiﬁcant beneﬁts
of security assurance, the evolution of new information and communication technology
(ICT) introduces new challenges regarding information protection. Security assurance
methods based on the traditional tools, techniques, and procedures may fail to account
new challenges due to poor requirement speciﬁcations, static nature, and poor develop-
ment processes. The common criteria (CC) commonly used for security evaluation and
In this paper,
certiﬁcation process also comes with many limitations and challenges.
extensive eﬀorts have been made to study the state-of-the-art, limitations and future re-
search directions for security assurance of the ICT and cyber-physical systems (CPS) in
a wide range of domains. We conducted a systematic review of requirements, processes,
and activities involved in system security assurance including security requirements, se-
curity metrics, system and environments and assurance methods. We highlighted the
challenges and gaps that have been identiﬁed by the existing literature related to system
security assurance and corresponding solutions. Finally, we discussed the limitations of
the present methods and future research directions.

Key words: Security assurance, security assurance methods, security requirements,
security metrics, system and environments.

1. Introduction

Recent advancements in information and communication technologies have revolu-
tionized the entire social and economic systems. In this information age era, government
and commercial organizations heavily rely on information to conduct diﬀerent activities.
Alongside signiﬁcant beneﬁts, the ever-increasing criticality, connectivity, and comprehen-
siveness of software-intensive systems introduce new challenges for cybersecurity profes-
sionals to protect the information. Compromise in conﬁdentiality, integrity, availability,
accountability, and authenticity of information and services can harm the operation of
the organizations, and it is needed to protect the data and information of IT systems
within the organization. Therefore, it has become a crucial task for security researchers

∗Corresponding author
Email address: shukla395@gmail.com (Ankur Shukla )

Preprint submitted to Journal Name

August 1, 2022

 
 
 
 
 
 
and practitioners to manage the security risks by mitigating the potential vulnerabilities
and threats with the help of new techniques and methodology and achieve the acceptable
security assurance of an IT system so that the stakeholders can get greater conﬁdence
that the system is performing in intended or claimed way with acceptable risks.

Several deﬁnitions of security assurance can be found; however, the common basis of
these deﬁnitions refers to the trust and conﬁdence in the secure and correct operation
of (software) systems. NIST deﬁned security assurance as a “measure of conﬁdence that
the security features, practices, procedures, and architecture of an information system
accurately mediates and enforces the security policy” [1]. Katt and Prasher [2] deﬁned
security assurance as “the conﬁdence that a system meets its security requirements and
is resilient against security vulnerabilities and failures.” They further deﬁned conﬁdence
as the level of trust of a system that is safe to use. However, there is a diﬀerence between
the “security need” and “security assurance”. Jelen and Williams [3] pointed out this fact
and deﬁned security needs as a threshold value on that the measurement of actual level
can be made. The security level can be measured by comparing the measured value and
the threshold value; however, the conﬁdence of the calculation depends on the accuracy
of the measurement. Considering these aspects, they deﬁned assurance as “a measure of
conﬁdence in the accuracy of a risk or security measurement”.

Security assurance has always been the keen interest of researchers and practitioners.
Security assurance tries to address two essential questions “Does a system do what it is
supposed to do” and “Does the system do anything unintended?” [4]. Security assurance
activities go throughout the development life cycle of the software system from initiation
of the protection proﬁle to certiﬁcation of a target of evaluation (TOE), which is the
system that will be assessed and evaluated. Security assurance is also continued when
the system is in the operational phase. Diﬀerent scanning tools can be used to ensure
and maintain the continued security by locating and patching security errors and vulner-
abilities. Security testing and evaluation are beneﬁcial to get the desired level of security
assurance. However, there is no single standard process available to measure the security
assurance of the software system. One can get certain degree of conﬁdence regarding the
system’s security and its components by reviewing its development process. The level of
conﬁdence can be increased if a rigorous methodology of security requirement deﬁnition,
design, speciﬁcation, and conformance have been considered. The past users’ experience
on a particular system can also provide some degree of assurance. On the other hand, if
multiple organizations use a system without any security incidents, one can trust that it
will operate securely in their organization. Application of some new technologies such as
advanced software engineering also provides assurance.

In the past, various standards and frameworks have been developed to evaluate the
security assurance of the system. The initial eﬀort was made by Trusted Computer Sys-
tem Evaluation Criteria, a United States Government Department of Defense standard,
which is also known as the Orange Book, to assess the system’s security. Some other
eﬀorts have been made in this continuation, such as European developed Information
Technology Security Evaluation Criteria(ITSEC), Canadian Trusted Computer Product
Evaluation Criteria (CTCPEC), ISO SC27 WG3 security evaluation criteria, etc. Later,
these criteria are primarily integrated into single criteria, i.e., CC. OWASP Application
Security Veriﬁcation Standard (ASVS) is an open standard that can be used for techni-
cal security control testing of web applications. OWASP also provides the requirements
list to developers for secure development. Software security maturity models lay out the
requirements of diﬀerent security levels and software engineering and maintenance prac-

2

tices that fulﬁl those requirements. Some examples of software security maturity models
are Building Security In MaturityModel (BSIMM), BSIMM for vendors (vBSIMM), and
OWASP’s Software Assurance Maturity Model (OpenSAMM) [5, 6].

In the past, several eﬀorts have been made for system security assurance and its evalu-
ation. The major focuses of these researches are to provide solutions to ensure the security
of the systems used in various application domains and environments by developing secu-
rity assurance methods and techniques. These solutions include diﬀerent methods, tech-
niques, processes, and recommendations such as operational security assurance, security
assurance requirements engineering methodology, security assurance metric and aggrega-
tion techniques, etc. These works also include developing security assurance methods for
composed systems that are made with diﬀerent components such as protocols, servers,
clients and services. Some eﬀorts have also been made towards early detection of security
vulnerabilities, development of a security assurance model, and security assurance tools
to maintain and enhance the security of the deployed system. Security assurance is also
essential for the software developers to address the security concerns in the early develop-
ment and acquisition phase, and to measure their preparation towards the advancement
of secure software. The development of secure software requires considerations beyond
the basic security requirements such as authentication/authorization and mandated op-
erational compliance to identify and resolve the risk environment in which the system
must operate. Some authors have considered the security assurance methodology in the
diﬀerent development life cycles of the software. However, these methods and techniques
come with several drawbacks. The main drawbacks of these approaches are that they
are static, time-consuming, and do not scale well to the extensive, networked, IT-driven
system. It also does not oﬀer continuous security assurance. Many researchers have made
eﬀorts to resolve these challenges. However, it is still an open issue.

In the past, no signiﬁcant eﬀorts have been made on systematic literature review (SLR)
on system security assurance. Some studies can be found; however, they focused on a
particular security concern of a speciﬁc application or application domain. Therefore,
one cannot get a clear and comprehensive overview of the existing security assurance
approaches, related information, and evidence. Therefore, a detailed and systematic
literature review on “System Security Assurance” has been conducted in this paper. The
motive of this paper is to study state-of-the-art, research trends, limitations, and future
research directions in security assurance of the ICT and CPSs in a wide range of domains.
It will also investigate the conventional and emerging technology for security solutions.
This paper provides detailed information and discussion on the research challenges and
gaps, the eﬀorts made toward these challenges and gaps, limitations of these approaches,
and future research directions.

The rest of the paper is organized as follows: In Section 2, the existing works related
to the security assurance survey have been discussed and the need for the survey has
been established. Section 3 presents a detailed discussion of the methodology of the SLR.
In section 4, 5 and 6, the detailed discussion about security assurance process, the role
of CC, and challenges and gaps in the existing methods and technology have been dis-
cussed respectively. Security requirements and security metrics is discussed in section 7.
Section 8 presents the diﬀerent security assurance methods. Security assurance methods
developed and applied on diﬀerent systems and environments is given in section 9. In
section 10, limitations and future directions is discussed. Finally, section 11 concludes
this paper.

3

2. Related Works and the Need of This Survey

In the past, very limited surveys have been published related to system security assur-
ance. However, no dedicated works that consider detailed and systematic study covering
processes and activities involved in system security assurances could be found. In this
section, the existing surveys have been summarized and compared with our work. As
observed in the literature, most of the works do not follow the systematic methodology in
conducting the literature review. These works are either focused on a speciﬁc application
domain or considered only limited aspects of the security assurance process. Summary of
the topic covered in the existing literature, their contributions and limitations are given
in Table 1. The enhancement made in our work is also given in this table.

Choi and Yoo [7] conducted a study on software assurance and discussed the critical
security ﬂaws and vulnerabilities related to software installation and software execution.
They proposed a system for software assurance. This study incorporates some issues
related to software security. This study considered the researches carried by limited
government agencies and research institutes.

Table 1: Details of related works, their limitations, and enhancement in this paper.

Year Paper Topic(s)

Contributions

Limitation

2009

[7]

Software assurance

Investigated research on
software assurance and
proposed a software as-
surance system

2013

[8]

Communication se-
curity using formal
models

2013

[9]

Security-related be-
haviour

2014

[10]

2014

[11]

Security of Open
multi-agent
sys-
tems

Context-aware
se-
curity solutions for
CPSs

2015

[12] Development of se-
cure software using
agile approach

behaviour

A survey of formal models
of communications secu-
rity and taxonomy of se-
curity concerns.
A review on security-
in
related
the workplace
a
framework for conceptu-
security-related
alizing
behaviour.
A survey on security tech-
niques
for multi-agent
systems.

and

A survey on the state-of-
the-art of CPSs to iden-
tify the security issues
and an investigation the
role of context-awareness
to improve the extent of
CPS security.
Literature review of the
challenges in the develop-
ment of security software
using agile approaches.

2015

[13]

Security of informa-
tion systems

A survey on security of in-
formation systems

Considered security ﬂaw
related to software in-
stallation and vulnera-
bility related to software
execution only.

Focused on communica-
tion security using for-
mal models.

Enhancements in our pa-
per
Focuses on general secu-
rity assurance and consid-
ered security requirements
and vulnerability in a wide
range of application do-
mains.
Considers on the overall
system security assurance.

focused

Mainly
security-related
haviour.

on
be-

Considers broader aspect
of security assurance

Focused on multi-agent
systems and do not con-
sider security assurance
methods.
This survey is very lim-
ited and mainly focused
on context-aware secu-
rity solutions.

Considers security assur-
ance for wide range of ap-
plication domain.

Extensive review on secu-
rity assurance of CPS.

This work is very lim-
ited and mainly focused
on the agile method in
the development of se-
cure software.
not
This work
consider
as-
surance and evaluation
processes.

do
security

Extensive review which is
not method based and con-
siders every software devel-
opment life cycles.

detailed
a
Presents
overview
security
of
assurance and evaluation
in a wide range of domains.

Brown [8] surveyed the various hierarchically ordered and adjacent sciences, notations,
and security requirements analyses which are essential for extensive communication se-
curity. They developed a taxonomy that provides a comprehensive framework for iden-
tifying and analyzing security requirements and potential attacks. This study is focused
on formal methods in securing the system.

4

Guo [9] discussed the security-related behaviour in the workplace. They reviewed
diﬀerent concepts of security-related behaviour and developed a framework for conceptu-
alizing security-related behaviour to delineate and synthesize the diﬀerence between the
divergent concepts. This research work is focused on security-related behaviour and does
not consider other security perspectives.

Bijani and Robertson [10] conducted a review of security techniques in literature and
suggested the appropriate security technique for a class of attacks in open multi-agent
systems. Wan and Alagar [11] studied the state-of-the-art of security of CPSs. The fo-
cus of this study is to provide context-aware security solutions for CPSs. Ouchani and
Debbabi Ouchani and Debbabi [14] conducted a review to study the state-of-the-art of
security requirements speciﬁcation, attack modelling, security requirements veriﬁcation,
and security quantiﬁcation for the software and systems that are based on Uniﬁed Mod-
eling Language (UML) or Systems Modeling Language (SysML). Oueslati et al.
[12]
conducted the literature review to identify the challenges and issues in the development
[13] surveyed cybersecurity.
of secure software using the agile approach. Zhang et al.
They discussed the research and development in cybersecurity.

The current literature covered various security issues and challenges in diﬀerent do-
mains and investigated the conventional and emerging technology for security solutions.
However, the survey which is focused on system security assurance is still missing. On the
other hand, most of the present works do not follow the systematic process in the litera-
ture review. Due to this, the existing reviews fails to deliver a clear and comprehensive
overview of the available information and evidence on system security assurance. Also,
they fail to identify the actual research challenges and gaps in this ﬁeld. We conducted a
systematic and extensive review of system security assurance in this paper to overcome
this situation.

3. Methodology of SLR

A SLR provides a systematic, explicit, and reproducible way to identify, select, evalu-
ate, and critically appraises the existing body of completed and recorded research works
[15]. The main motive of this SLR is to evaluate and interpret the recent research on
system security assurance to address the current research problems and challenges. To
conduct the systematic and fair evaluation of literature, a review protocol has been es-
tablished. The construction of guidelines for this SLR is derived from the “Guidelines
for performing Systematic Literature Reviews in Software Engineering” [16]. Some other
guidelines for systematic review have also been reviewed [17] to developed the review
protocol.

The guidelines established for this SLR include mainly three steps: review planning,

conducting the review, and review report.

3.1. Review Planning

In this stage of the SLR, the following points have been addressed:

3.1.1. Purpose of SLR

The main purpose of this literature review is to study the current challenges and gaps
in system security assurance. This SLR will conduct a detailed study of system security
assurance requirements, metrics, frameworks, and methods. The security assurance of
diﬀerent systems and environments in a wide range of applications domains will be dis-
cussed. Speciﬁcally, the purpose of this SLR can be summarized as follows: (a) to study

5

essential background, state-of-the art, research trends and directions in system security
assurance, and (b) to develop a taxonomy on system security assurance.

3.1.2. Developing review protocol

A review protocol is developed with the detailed review of the existing methodology
of SLR and discussion with the experts. This protocol includes the design of research
questions, search strategy, and potential resources. Furthermore, study selection criteria,
selection procedure, and quality assessment checklists have been described in this proto-
col. In the protocol, the data extraction strategy and synthesis of the extracted data have
been speciﬁed. The protocol is also focused on some other planning and management
information such as dissemination strategy and project timeline.

3.1.3. Review protocol evaluation

The review protocol has been reviewed rigorously against the following criteria:

(i) Whether search strings are appropriate and match with the research questions?

(ii) Whether points of the data extraction will address the research questions properly?

and

(iii) Whether analysis procedure is appropriate to fulﬁl the objectives of the SLR?

3.1.4. Specifying research questions

The following research questions have been considered of this SLR based on reﬂection,

debate, and reformulation:

RQ1. What are the current trends and results related to security assurance considering
process, methods, guidelines, tools, metrics, evaluation/techniques, automation,
standards, and application domains?

RQ2. What are the challenges, limitations, and gaps related to security assurance?

RQ3. What are the future directions/trends related to security assurance?

RQ4. How can we categorize/classify the diﬀerent research activities related to security

assurance?

3.2. Conducting the review

After the proper establishment of the review protocol, the review process started.

3.2.1. Identiﬁcation of Research

Identiﬁcation of primary studies related to the research questions using an unbiased
search strategy is an important step. Initially, some search strings are derived from the
research questions. These search strings are constructed using Boolean ANDs and ORs.
These search strings are tested against the existing primary studies on system security
assurance from well know databases. Based on the testing results and discussion with
the expert, two search strings are ﬁnalized, which are: (i) “Security Assurance”, and (ii)
System and Security and Assurance.

Thereafter, an exhaustive search has been performed considering the six electronic
IEEExplore, ACM Digital library, Google Scholar, Science Direct

sources including:
SpringerLink, and Wiley online library.

6

3.2.2. Study Selection

After identifying the potential relevant primary studies, they need to be assessed based
on their relevance. Selection criteria are helpful in identifying and selecting primary
research studies that provide evidence for the research questions. Therefore, selection
criteria have been decided based on the research questions to reduce the likelihood of
bias. In this SLR, the following inclusion criteria have been used:

(a) Papers that were published between 2004-2020.

(b) Papers that focus on the security assurance assessment and evaluation of the sys-
tems, for example, security requirement analysis, security assurance framework, and
security models.

(c) Security assurance papers that focus solely on ICT and cyber-physical systems.

The exclusion criterion is “papers that are not related to information and communication
technology or cyber-physical system”. The selected papers were also updated continu-
ously, and the last update was made in March 2021. We have selected the starting year
2004 because we aim to study the recent developments in system security assurance over
the last one and half decades.

3.2.3. Reliability of inclusion decisions

To improve the reliability of the inclusion decisions, each electronic source is assigned
to two researchers. Accordingly, each paper is assessed by two researchers based on the
inclusion and exclusion criteria. To measure the agreement between researchers, a list of
included/excluded papers with the reason for inclusion/exclusion has been maintained.
In case of disagreement or misunderstanding on any paper, it has been discussed in the
common meeting of the group and resolved by discussion and with expert advice.

3.2.4. Study Quality Assessment

After collecting all potentially eligible articles, the next step is the quality assessment
to examine the articles more closely. The primary purpose of the quality appraisal is
to conduct the second screening to eliminate the articles that are not relevant to this
study. As a result, in addition to general inclusion and exclusion criteria, it is essential
to examine the quality of primary studies. Considering this fact, now stricter criteria
have been established. The followings are the quality assessment criteria: (a) are the
aims clearly stated? (b) is the research method used appropriately? (c) does the research
work evaluate the outcome appropriately? and (d) does the research work allow the
questions to be answered?

3.2.5. Practical Literature Screening

Considering the above steps and criteria, the literature screening has been conducted.

Results of the diﬀerent rounds are as follows:

(a) Round 1: The literature is searched and collected from diﬀerent electronic sources.
In this round total of 733 literature items were collected. The duplicate entries were
also eliminated and after elimination, the remaining number of literature items are
564.

(b) Round 2: In this round, quality assessment of the literature was conducted using
the aforementioned quality assessment criteria, resulting in a total of 90 literature
items.

7

Figure 1: Methodology of SLR.

3.2.6. Data Extraction

The data extraction form has been designed to collect helpful information to answer
the research questions. The data extraction form has been piloted on a sample of a
preliminary study to assess the form’s completeness and avoid any technical issues. The
diﬀerent points of the data extraction form have been decided based on the research
questions, and each point has been deﬁned clearly to avoid misunderstanding, misinter-
pretation between the researchers. The key points of the data extraction form and their
deﬁnitions are given in APPENDIX A.

3.3. Review Report

The report or writing the review is the ﬁnal step of developing a research litera-
ture review. The process includes reporting and writing the ﬁndings systematically and
smoothly so that the entire process can be reproducible scientiﬁcally. A pictorial illus-
tration of the SLR methodology of this survey is shown in Fig. 1.

4. Security Assurance: Deﬁnition, Process, and Types

We deﬁne system security assurance as the conﬁdence that a system meets its security
requirements and is resilient against security vulnerabilities and failures. Security assur-
ance is a complex and time-consuming process that goes throughout the development
life cycle of a (software) system begins from the protection proﬁle initiation to the TOE
certiﬁcation. The security assurance process of a system requires a set of inputs such
as TOE, the operational environment, assessment criteria and requirements (assurance
proﬁle), assurance methods, and assurance level [2]. This process goes through multiple
stages and involves various activities such as deﬁning security goals, security requirement
analysis, threat analysis, vulnerability analysis, penetration testing, security audit, scor-
ing, and analysis, etc. The output of the security assurance process provides the security
assurance level and other useful information, recommendation, and mitigation plan that
help stakeholders to improve conﬁdence, align with best practices, and reduce the risk

8

Figure 2: Security assurance process.

following a cyber-attack. The security assurance process and its essential components
are presented in Fig. 2.

(a) Operational Security Assurance

Assurance activities are crucial during the operations and maintenance phase to en-
sure that the assurance level of a system to which it is certiﬁed, is maintained. The
security requirements speciﬁed for a system may be violated in the operational phase
because of improper implementation of the security measures, hazardous environment,
or invalidity of the assumptions under which the security requirements were speciﬁed
[18]. In other words, the security requirements identiﬁed during the development phase
based on the assumption made on the system’s operational environment may no longer
be valid if there are any changes in the system environment. Therefore, it is required
to collect evidence to verify the fulﬁlment of security requirements of the system in the
operational phase[19]. Therefore, one should also focus on security assurance after the
deployment or implementation phase. The security assurance evaluation of the system in
operation comes with many challenges as well as beneﬁts that cannot be accomplished by
an oﬄine assessment. The operation security assurance is complex due to the openness,
aggregation, and dynamics nature of IT and cyber physical systems [20].

(b) Continuous Security Assurance

Organizations are struggling to ensure security a routine element of their operations.
They are exposed to a number of risks that necessitate the deployment of compliance
and security controls. Continuous security assurance can be a potential way to manage
these risks with continuous monitoring, continuous compliance, and continuous security
[21, 22]. On the basis of evidence collecting, continuous security assurance also reports if
the security requirements are met throughout system operation [19].

(c) Optimal Security Assurance

It is not possible to make the software systems completely secure. Some vulnerabil-
ities may be present, which were not ﬁxed during the development process due to time

9

Figure 3: Diﬀerent types of security assurance.

constraints or other reasons, and these must be re-examined, prioritized, and ﬁxed. Se-
curity assurance is a very time-consuming and costly process. Optimal security security
assurance aims to provide optimal security and to reduce these costs[23].

(d) Usable-Security Assurance

The security goals are mainly focused on the user’s demand, and demands are changed
when there is a change in their requirements. The security goals can be achieved through
the rigorous testing, establishment, and assessment to provide the defense against ma-
licious attacks. However, the system user can sometimes be the weakest link and may
unintentionally invite attacks. Therefore, it is vital to secure the system from the threat
as well as maintain usability. The usability focus on the ease of users ‘keeping simple’
formula [24, 25].

(e) Service-oriented Security Assurance

The business decomposition process into services is a possible way to provide the
ﬂexibility to adapt to the changes in the business needs of the enterprises. This can be
provided by a service-oriented architecture, which allows the user to ﬁnd and use services
dynamically. On the other hand, security in service selection is also a crucial factor.
Therefore, service-oriented assurance is required to evaluate the security of sub-services.
Data from various sources are required to assess the security properties in this process. In
addition, the system states (such as established security policies), events, certiﬁcates, and
other security veriﬁcation evidence from the third parties are required. The study proved
that security properties could be speciﬁed and veriﬁed objectively in various services
using the security-oriented assurance model [26].

(f ) Core-level Security Assurance

The operating system core can be considered instead of the application level service
in order to increase the speed and eﬀectiveness of attack detection. The main advantage

10

Figure 4: CC evaluation framework.

of considering the operating system’s core is that it contains every internal attribute and
the ﬁle system [27].

5. Common Criteria for Security Assurance

The meaning of security may vary from person to person and from organization to
organization. Therefore, common security standards are essential for IT systems with
In this regard, the need for CC was realized to
complex and diverse conﬁgurations.
evaluate the security of an IT product. The origins of the CC are discussed in the Intro-
duction section. The CC for information technology security evaluation is a well-known
international standard (ISO/IEC 15408) for computer security certiﬁcation1. The cur-
rent version of CC is 3.1 revision 5. It provides a set of guidelines and speciﬁcations that
can facilitate the speciﬁcation of security functional requirements and security assurance
requirements. While the security functional requirements deﬁne the expected security
behavior of information security products and systems, the security assurance require-
ments demonstrate that the security attributes have been implemented correctly. CC
evaluation framework is given in Fig. 4.

The general objective of CC is to provide a framework that allows users to specify
security functional requirements, enable the developers to specify the security attributes,
and help evaluators to ascertain if the security attributes as deﬁned by the developers
meet their claims. The use of CC in the development of information security products
and systems can improve the overall security of the products and reduce the time and
cost of IT security evaluation. For example, Kim and Leem [28] showed a method that
employs CC in the development process to improve the security of software products.
They used a case study that involves the development of MTOS7.5, a security-enhanced

1https://www.commoncriteriaportal.org/cc/

11

Figure 5: CC advantages and drawbacks.

UNIX-like operating system based on BSD 4.4 according to EAL3 in CC. The results from
their study indicated that CC applied to the development process of software products
can enhance the security of the products, reduce the time and eﬀorts in developing the
products, and shorten the evaluation periods of the products.

CC can also be used at the early stages of the software lifecycle to integrate require-
ment engineering and security engineering to develop secured information systems. This
approach is proposed by Mellado et al.
[29] and involves the use of a CC-centered and
reuse-based process to address security requirements at the early stages of software de-
velopment. The authors utilized a security repository that they combined with CC and
then applied to the early stages of the software life cycle. The objective was to merge
the ideas of requirement engineering and security engineering.

In the literature, other works can be found that have used CC in the development
process of information security products, requirement engineering, security engineering,
and certiﬁcation process. Some of them are discussed in the upcoming sections.

5.1. Limitations of Common Criteria

In addition to the many advantages of CC, there are also several limitations, including

(a) Complex Certiﬁcation Process: The certiﬁcation process of a product or a system
against the CC evaluation assurance level is very complex and time taking partic-
ularly for higher evaluation assurance levels [30].

(b) Evaluation and Modelling of Composed Systems: The CC has been focused on a
speciﬁc product that is made up of a single software component.
It is needed
to provide methodological support for the evaluation and modelling of security of

12

composed products composed of two or more evaluated or unevaluated components
[31].

(c) Security Expertise Needed for Implementation: The security standard ISO 15408
CC provides support in developing a secure system in terms of the knowledge,
security expertise, and guidelines needed including secure design technique such
as UMLsec. However, CC has formulated the security guidelines and expertise
in security domain terminology, making it diﬃcult for non-security developers or
stakeholders to understand. Therefore, some general security and design experience
is required to get complete beneﬁt of the CC [32].

(d) Lack of Methodological Support for Preparing Evaluation Deliverable: For CC-based
IT products and systems security evaluation requires evaluation deliverable such as
development documents that consist of functional speciﬁcation and high-level de-
sign, and operational documents that consist of guidelines documents for users and
administrators, and vulnerability analysis. Preparation of evaluation deliverable at
the later stage of the development or after the product is developed may require
extra costs and time. In evaluation deliverable preparation, CC does not provide
any support in terms of methodology [28].

A summary of advantages and drawbacks related to the CC evaluation framework is

given in Fig. 5.

6. Security Assurance: Challenges and Gaps

As discussed in this section, the existing literature addresses the following challenges

and gaps:

6.1. Elucidation, Modelling, and Validation of Security Requirements

The speciﬁed security requirements may often be violated after the implementation
phase because of improper deployment, change in requirements, hazardous environment,
or invalidation of the assumption under which the security requirements were speci-
ﬁed. Therefore, an approach is needed to complement security requirements engineering
methodologies to check if the security requirements elucidated in the development phase
are implemented correctly [19]. Several methods focused on elicitation and modelling
the security requirements in the early development phase of the system. However, these
methods have not been widely adopted because they are not easy to apply to the indus-
tries due to mismatch between the current development process and these methodologies.
These methodologies are also very complex and do not provide documentation process of
security properties of the IT systems [33].

6.2. Security Assurance of Composed System

Security assurance measurement of a complex software system is essential but not
always possible. The modern software systems are composed of several components such
as servers and clients, protocols, and services. Security weakness or vulnerability in any
of these components may compromise the entire system. Therefore, a process or method-
ology is required to assure the security of software components used in a wide range of
applications [34, 35]. However, considering the relationship between these entities, a re-
verse process is also needed to combine the security values of the decomposed entities to
obtain the security of the entire system [36].

13

6.3. Security Assurance in Operational Phase

The existing oﬄine security assurance evaluation approaches to measure and evalu-
ate cyber security are not eﬀective and widely accepted approaches as it does not pro-
vide continuous security assurance assessments for complex operational software systems.
Therefore, a process, method, or tool is needed for the operational security assurance as-
sessment [37, 38].

6.4. Service-Oriented Security Assurance

Service-oriented architectures decomposes the process into services hosted on the plat-
form, which can adapt to changing load and performance requirements, and allow users
to dynamically discover and use sub-services. However, security is not considered in the
selection of services and sub-services. Therefore, service-oriented assurance is required
to assure the security assurances of services as well as assess the security of sub-services
[26].

6.5. Security Assurance Tool

Security assurance tools help to improve the system security by building security into
software systems or determining how secure it is. There is a need for a security assurance
tool that measures the system’s security level so that it can be improved and maintained
overall [39, 40].

6.6. CC Protection Proﬁle for Trusted Computing Features

A protection proﬁle is a document that assists in formulating a set of objectives and
requirements for a speciﬁc category of products based on CC. Protection proﬁle products
can be validated and certiﬁed against the protection target. There exist some protection
proﬁles for secure operating systems; however, no appropriate protection proﬁle is avail-
able that considers trusted computing features such as trusted channels, trusted boots,
and sealing [41].

6.7. Automation of Security Assurance

Automated information security analysis, validation, evaluation, and testing approaches

are required to obtain the evidence regarding security strength or security performance in
the software products and telecommunication system [42]. On the other hand, automation
of the security assurance process in open source software is also essential. Since open-
source software is subjected to frequent updates, therefore automation process should be
able to incorporate these updates [43].

6.8. Identiﬁcation and Prediction of Security Vulnerability

Early identiﬁcation of security vulnerabilities in the source code is an essential and
challenging task in the software development process. Vulnerabilities can aﬀect the sys-
tem’s conﬁdentiality, integrity, and availability and thus cause severe damage to an orga-
nization [44].

14

6.9. Security in System Development Life Cycle

Security in the entire software development process, starting from the requirement
engineering to its ﬁnal deployment, needs to be considered [45]. On the other hand, the
security assurance throughout the system development life cycle is also important [46].

(a) Security Design and Veriﬁcation: During the development life cycle, poor design
practices such as the improper design of security functionality is a big security
concern. Therefore, a process or a tool is required to design and develop a secure
software system. On the other hand, veriﬁcation and certiﬁcation of designs and
codes are also crucial [40].

(b) Security Assurance of Access Control Enforcement Code:

Security assurance is
an essential property of the application code that has not been addressed before.
It is important to ensure that the code behaves with the access control policy
consistently [47].

6.10. Cloud Security Assurance

Cloud computing is the most enticing technology which oﬀers economical and tech-
nological beneﬁts in the diﬀerent service provisioning domains. However, the increasing
popularity of cloud services comes with concerns about the security assurance of its diﬀer-
ent services. Enforcement of security properties in a cloud is a challenging task. There are
diﬀerent security-related challenges that cloud service providers (CSPs) or cloud service
customers (CSCs) face, such as

(a) Security Assurance Evaluation

Businesses or organizations want to be assured that the cloud platform on which
their infrastructure will be deployed is secure and will remain secure. Moreover,
CSCs need to trust the CSPs with conﬁdentiality, integrity, availability, and audit-
ing in the cloud. Therefore, a security assurance methodology is required in order
to obtain ﬁrm evidence that the security requirements of the companies are well
deﬁned and enforced [48]. There is a need for a method for both CSCs and CSPs
to evaluate and compare the security assurance of oﬀered services either qualita-
tively or quantitatively. It will enable CSCs to choose appropriate cloud services
and CSPs to improve their service to gain better trust and meet customer security
needs [49].

(b) Security Assurance of Multi-cloud applications

Security assurance of the multi-cloud applications, which consume and orchestrate
services from multiple independent CSPs, is a challenging and unsolved issue [50].

(c) Security Controls: Implementation and Eﬀectiveness

Cloud ecosystems employ a variety of security controls to ensure security and pri-
vacy. Security properties that have been enforced in the cloud environment must
be eﬀective. However, it is a challenging task to measure their eﬀectiveness in oper-
ation. Therefore, a method is required which can assure whether security controls
are adequate and appropriate for speciﬁc cloud ecosystems [51].

15

(d) Security Monitoring and Analysis

A monitoring methodology is required to monitor the security [52]. Moreover, an
analysis tool is required for systematic security analysis of the critical cloud services
[22].

(e) Security Transparency and Auditing

Security transparency and auditing are two other essential factors that industries
must consider to maintain and increase trust in oﬀering services. Lack of security
transparency in cloud-based services demotivates organizations from embracing the
technology. The existing methods do not provide a deﬁnite method that helps in
achieving security transparency as per users’ requirements [53].

A summary of challenges and gaps in system security assurance in given in Table
2.

7. Security Goals, Requirements and Metrics

The security assurance evaluation process requires speciﬁc assurance goals, security
requirements, and design guidelines, which can be used by security personnel to assess
and ensure a high level of security assurance.
In this section, we discuss the security
goals, requirements and security metrics.

7.1. Security Goals

Organizations implement a security policy to impose a uniform set of rules to handle
and protect the crucial information of the system. Most of these security policies consider
three signiﬁcant aspects of their data and information: conﬁdentiality, integrity, and
availability. However, these security requirements can be emphasized based on application
domains. Most of the work primarily focused on these three security requirements in
literature. However, some of the works also included other security goals for security
assurance, such as privacy, authenticity, accountability, conformity, utility, possession,
non-repudiation, and authorization, as shown in Table 3.

7.2. Security Requirements

Adequate security assurance signiﬁes that a software system’s speciﬁed and predeﬁned
security assurance requirements have been satisﬁed during the security assurance assess-
ment processes and activities. Security requirements can be categorized as functional and
non-functional requirements that need to be satisﬁed to achieve the security attributes of
a software system. The functional requirements deﬁne what the system does or must not
do; it must be testable, which means the requirement can be tested to check whether it is
fulﬁlled. Non-functional requirements deﬁne how the system should do. It considers the
performance of the whole system. Security assurance requirements can be determined
by analyzing the security requirement of a software system, security policies, business
drivers, operational environment, etc. The security requirements should be based on the
iterative threat, vulnerability, and risk analysis and should also incorporate the technical
and architectural information [42].

CC provides a structured method to list the security requirements that include an IT
system’s functional and assurance requirements. Security function requirements describe
various functional requirements in terms of communication security, security audits, data

16

Table 2: Challenges and gaps in system security assurance

SDLC
Operational
phase

Descriptions
-A process or methodology is re-
quired to assure the security of soft-
ware components - A reverse process
is needed to combine the security val-
ues of the decomposed entities to ob-
tain the security of the entire system
Oﬄine security assurance evaluation
approaches are not eﬀective and do
not provide continuous security as-
sessments
Existing methods do not consider se-
curity in the selection of services and
sub-services.
Need for a tool for security assurance Operational

Operational
phase

Operational
phase

Need of automated information secu-
rity analysis, validation, evaluation,
and testing approaches

-To verify that the security require-
ments elucidated in the development
phase are implemented correctly -
Existing methods are not widely ac-
cepted and diﬃcult to apply
-Improper design of security func-
tionality
-To ensure that the code behaves
with the access control policy consis-
tently
No appropriate protection proﬁle is
available that considers trusted com-
puting features such as trusted chan-
nels, trusted boots, and sealing
-Early identiﬁcation of security vul-
nerabilities in the source code
A methodology is required to obtain
ﬁrm evidence that the security re-
quirements are well deﬁned and en-
forced
Need for a method for both CSCs and
CSPs to evaluate and compare the
security assurance of oﬀered services
either qualitatively or quantitatively
The security assurance of the multi-
cloud applications is a challenging
and unsolved issue.
-To measure eﬀectiveness of security
control in operation is challenging. -
A method is required which can as-
sure whether security controls are ad-
equate and appropriate
A monitoring methodology/tool
required to monitor the security
-Lack of security transparency and
auditing in cloud-based services -
Existing methods do not support in
achieving security transparency as
per users’ requirements

is

phase
Operational
phase

Development
and operational
phase

Design phase

Coding phase

Operational
phase

Design phase

Operational
phase

Operational
phase

Operational
phase

Operational
phase

Operational
phase
Operational
phase

Paper
[34,
35]
[36].

[37,
38].

[26].

[39,
40].
[43]

[19]
[33].

[40].

[47].

[41].

[44]

[48].

[49]

[50].

[51]

[52]

[53]

S.N. Category

1.

Security assurance

Challenges and Gaps
Security assurance of
composed systems

the

Security assurance in the op-
erational phase

Service-oriented security as-
surance

Security assurance tool

Automation of security assur-
ance

2.

Security
Requirements

Elucidation, modelling, and
validation of security require-
ments

Design of security functional-
ity
Security assurance of access
control enforcement code

3.

Protection Proﬁle

CC protection proﬁle
trusted computing features

for

Vulnerability
Analysis
Cloud
Assurance

Security

Identiﬁcation and prediction
of security vulnerability

Security assurance evaluation

4.

5.

Security assurance of multi-
cloud applications

Implementation and eﬀec-
tiveness of security control

Security monitoring and anal-
ysis
Security transparency and
auditing

17

Table 3: Summary of security goals considered in the literature.

Security Goals
Conﬁdentiality

Integrity
Availability
Privacy
Authenticity
Accountability
Conformity
Utility
Possession
Non-Repudiation
Authorization

Papers
[54, 46, 48, 40, 22, 55]
[56, 57] [58] [42] [59] [60] [53] [2] [61]
[54, 46, 48, 40, 22, 55] [56, 57] [58] [42] [59] [60] [53] [2] [61] [62]
[54, 46, 48, 40, 22, 55] [56, 57] [58] [42] [59] [60] [53] [2] [61] [21, 19] [62]
[62]
[56, 57] [58] [42] [59] [60] [62] [43]
[53] [2] [61]
[53] [21, 19]
[58]
[58]
[42] [60] [61]
[42] [59] [43]

Figure 6: Security requirements methods.

protection, authentication, security management, system access, trust path, etc. System
developers can select a subset of these requirements to implement in the form of security
properties as a part of the security target document of the TOE. On the other hand,
security assurance requirements are the requirements that need be fulﬁlled to assure that
the security functions are implemented correctly. Security assurance requirements cover
conﬁguration management, guideline documents, delivery and operation, assurance test,
vulnerability assessment, etc [63, 64, 65].

Various methods have been developed in the literature for security requirements elici-
tation, tracking, analysis, correctness, modelling, etc., as shown in Fig. 6. Some of these
methods are:

7.2.1. Elicitation, Tracing, and Analysis of the Security Requirements

Building a secure system is complicated for several reasons, including a lack of se-
curity expertise in development teams, inadequate methodologies to support non-expert
developers, etc. The security standard such as CC can be used to specify the secu-
rity functional and assurance requirements, and UMLsec can be used for model-based
security engineering. However, it is diﬃcult to understand this security expertise and

18

guidelines for the developers because it is not written explicitly. Therefore, a methodol-
ogy is required for elicitation, tracking, and analyzing the security requirement. Houmb
et al. [32] developed such a methodology called SecReq by combining three techniques:
CC, the heuristic requirements editor HeRA, and UMLsec. The SecReq is designed to
make the security requirements engineering more systematic and eﬀective by integrating
elicitation, traceability, and analysis activities.

7.2.2. Security Requirements Modelling

Eliciting and modelling the security requirements in the development phase are well-
known practices to prevent potential vulnerabilities. However, the existing methodologies
such as KAOS [66], SecureTropos [67] are neither useful nor widely accepted in the indus-
tries because of mismatching in the software development process and their complexity.
There is also a lack of a standard for documentation of the security properties of a soft-
ware system concisely and systematically during the development process. Taguchi et al.
[33] developed a framework that provides a security requirement modelling method for
the system development and security assurance under the CC. This framework aligned
the security requirements and assurance in a single requirement modelling methodology
uniformly and concisely.

7.2.3. Correctness of the Security Requirements

In general, the security requirements are identiﬁed during the design phase based on
the assumption made on the system operating environment. These assumptions are no
longer valid if there are any changes in the system environment. On the other hand,
security requirements may be adequately identiﬁed during the development phase but
not correctly deployed or become less eﬀective due to unidentiﬁed hazards in the sys-
tem. Due to this, it is not easy to ensure that the secure system will remain secure over
time. Therefore, an approach is needed for continuous security assurance, which also
supports whether the security requirements can be fulﬁlled during the system operation
based on the evidence collection. Ouedraogo et al. [19] developed an approach that com-
plements security requirements engineering methodologies to check whether the security
requirements elucidated during the development phase of the system have been correctly
implemented by collecting continuous evidence.

7.2.4. Measurement Requirements

The continuous independent evolution of the complex and operating system com-
ponents makes the security measurements more challenging. In the context of security
assurance, the correctness of the security controls is the main objective of the measure-
ments. Security measurements and their diﬀerent properties change over time. Therefore,
the measurement framework should consider the variation in the measurement target and
available measurement infrastructure. With the evolvement of the available measures, it
is vital to manage the dynamic features. Kanstr´en et al.
[68] introduced a taxonomy-
based approach and proposed an abstraction Layer between the measurements identiﬁed
in the measurements framework based on the measurement infrastructure and require-
ments. This approach helps to relate the available and achievable measurements to the
measurement requirements of security assurance plans and in managing the dynamic
features in measurement requirements.

19

Figure 7: Security metrics methods.

7.3. Security Metrics

The dynamic nature and complexity of the security risk make it challenging to measure
security as a universal property. Lack of standard deﬁnition is also one of the main
reasons behind this. Metrics is the widely used and more suitable term for security-
related objectives [59]. Security metrics oﬀer security-related information from a diﬀerent
point of view which helps in essential and credible information security measurement of
a software system. In the literature, extensive research works have been done on deﬁning
the metrics taxonomy. NIST [69] provides standards for determining the adequacy of in-
place security methods, policies, and procedures using metrics. It explains how metrics
can be developed and implemented and how they may be used to justify the security
procedures investment.

7.3.1. Quality Criteria of Security Metrics

The three core quality criteria of security metrics are correctness, measurability, and
meaningfulness. These criteria are crucial for security metrics measurements and their
practical application. To ensure the correctness of the security metrics, a well-established
and systematic development methodology is required, which includes validity and reli-
ability analysis; measurability of the security metrics can be improved by continuous
development of an eﬃcient and relevant measurement framework for the system under
evaluation [70]. Moreover, the simplicity and reliability of the metrics are also essential
to make the security assurance methodology more robust. It enables a fast and objective
evaluation of a system’s security assurance level. [71]. Several works have been done in
the literature on methods and quality parameters of security metrics, as shown in Table
3, Fig. 7 and Fig. 8.

7.3.2. Security Metrics Management and Measurement

This subsection discusses various factors and techniques for security metrics manage-

ment and measurement.

20

Table 4: Summary of security metrics category, goals, and methods.

S.N. Category

Goals

1.

2.

Security
Metrics Devel-
opment

Security
Metrics
Measurement,
and
Management

Development of secu-
rity eﬀectiveness met-
rics for ensuring the
correctness of security
controls.

Security correctness,
security eﬀectiveness
and the quality of
the security veriﬁca-
tion process at run-
time

Veriﬁcation of the se-
curity mechanisms at
runtime

Method/
Technique
Risk-Driven Security
Metrics Development
Methodology

Developed
security
assurance monitoring
tool and the measure-
ment framework

Domain

Description

IT Systems
(a
Push
E-mail
service)

IT
Systems

In this approach, secu-
rity control eﬀectiveness
is measured as part of
the assurance of secu-
rity control correctness
at the higher level.

Authors proposed a set
of metrics for the ap-
praisal of security assur-
ance at runtime.

Developed a taxon-
omy of quality metrics

IT
Systems

Paper

[59]

[72]

[73]

[70]

[71]

[74]

such as

Authors discussed the
impact of various prop-
erties on the conﬁdence
the measurement
of
trusted
data,
for
platform module
data
measurement
and
infrastructure
assurance, trusted mon-
itoring base techniques,
and measurement probe
form factors.
to
This
the mean-
increase
of metrics
ingfulness
in
assurance
and risk management
contexts by hierarchical
metrics modelling.

security

helps

tool

developed
Authors
security
a
risk-based
and
assurance metric
aggregation
technique
for evaluating the sys-
tems security assurance.
Authors discussed the
impact of various prop-
erties on the conﬁdence
the measurement
of
trusted
data,
for
platform module
data
measurement
infrastructure
and
assurance, trusted mon-
itoring base techniques,
and measurement probe
form factors.

such as

Speciﬁcation
measurement
security metrics

and
of

Developed visualiza-
tion
and modeling
tool

Software
Systems

Evaluation of IT sys-
tems security assur-
ance.

Security
assurance
metric and aggrega-
tion techniques

IT
Systems

Conﬁdence
in mea-
surement data dur-
ing operational secu-
rity assurance

Cloud com-
puting

Describes the proper-
ties of a trusted mea-
and
surement base
implemented as a part
of metrics visualiza-
tion tool and proto-
typed.

21

Figure 8: Security metrics methods.

(a) Meaningfulness of Security Metrics and Measurements

The meaningfulness of security metrics and measurements is remarkably challenging
in security decision-making, such as risk management and security assurance. Be-
cause of poor management and a signiﬁcant number of uncategorized data, many
security metrics activities have a low level of meaningfulness. Primarily, only a
limited number of metrics have been developed because they are more understand-
able in decision-making than a large number of metrics. However, much essential
information related to security can be lost in the aggregation process of the low-
level metrics. Therefore, systematic and complete security metrics management
and measurement are essential. Metrics visualization facilitates the management
and measurements of the security metrics to enhance the meaningfulness of the
decision-making process. A visualization and modelling tool is developed by Savola
and Heinonen [70] for hierarchical speciﬁcation and deployment of the security
metrics and their measurements. This tool helps to increase the meaningfulness of
metrics in security assurance and risk management contexts by hierarchical metrics
modelling.
It also connects high-level security objectives with detailed measure-
ments.

(b) Conﬁdence in Security Metrics Measurement

The data collected during the system’s operation helps in expressing the system’s
current state and validating the security metrics model. Therefore, one should have
conﬁdence in security metrics and data measurement. However, several factors
can impact conﬁdence, and trust is one of these signiﬁcant factors. Kanstr´en,
T., & Evesti [74] discussed the impact of various properties on the conﬁdence of
the measurement data, such as trusted platform module for measurement data
and infrastructure assurance, trusted monitoring base techniques, and measurement
probe form factors. They also deﬁned a set of measurement data conﬁdence levels
based on the trusted monitoring base achieved. They implemented this approach
as part of a metrics visualization tool in a private cloud environment.

22

(c) Security Metrics Aggregation

An eﬃcient and straightforward aggregation method to combine the security assur-
ance of sub-components by considering their relationship is essential for a robust
security assurance methodology. A risk-based security assurance metric and aggre-
gation technique is proposed by Ouedraogo et al. [71] that can be combined with
a methodology for evaluating the systems security assurance.

7.3.3. Security Metrics Model for Operational Security

To measure the operational security assurance of a system, it is essential to understand
and express the current and anticipated security posture of the system. Security metrics
modelling is a signiﬁcant way to express the security status of the system [74]. The data
collected during a system’s operation is used to express the system’s current state and
validate the security metrics model.

7.3.4. Security Metrics Taxonomy for Run-time Systems

Ouedraogo et al.

[38, 72, 73] made an eﬀort to develop a set of metrics to evaluate
the security assurance of the runtime systems. Ouedraogo et al. [73] developed metrics
taxonomy based on CC and the System Security Engineering Capability Maturity Model
(SSE-CMM). They represented the veriﬁcation probe quality levels based on ﬁve capa-
bility maturity levels of the SSE-CMM and some of the CC families such as scope, depth,
rigour, and independence of veriﬁcation) capabilities as requirements to attain a deﬁned
level of quality. They also made an analysis of the mapping between diﬀerent capability
levels and the quality levels of the diﬀerent veriﬁcation metrics families, such as coverage,
rigour, depth, and independence of veriﬁcation. Ouedraogo et al. [38, 72] also developed
a method to combine the security metrics into the quantitative or qualitative indicators
that are crucial in developing understanding regarding the security status of an IT system
component.

A summary of security metrics category, goals, and methods is given in Table 4.

8. Security Assurance Methods

Security assurance involves demonstrating with evidence that a system fulﬁlls estab-
lished standard security criteria [28].
It provides the conﬁdence that a system meets
the security requirements and therefore has fewer vulnerabilities, resulting in the overall
reduction of risk in using the related system. Due to the importance of security assur-
ance, most organizations make the eﬀorts to demonstrate the security assurance of their
systems but mostly rely on less eﬀective approaches [34]. To enhance security assurance
of the systems,various methods have been developed, as shown in Figure 9 and outlined
in the upcoming subsections. A categorical representation of security assurance methods
is given in Table 5. This table has categorized the security assurance methods based on
the various system development phases such as governance, construction, and deploy-
ment. The governance considers policy and compliance, strategy & metrics, risk, and
awareness. The construction phase considers requirements, design/modelling, and veri-
ﬁcation, and the deployment includes monitoring and management. On the other hand,
various methods and techniques have been used in developing security assurance process
or methodology

A security assurance method can be classiﬁed based on its qualitative or quantitative
nature. Qualitative methods use the ordinal rating scale ( e.g., 1-5, low, high, critical)

23

Figure 9: Security assurance methods.

Figure 10: Quantitative and qualitative security assurance.

to represent the security level of a software system. On the other hand, quantitative
methods use factual and measurable data to calculate the security level of a software
system. This method is mainly based on mathematical and computational techniques.
Fig. 10 represents the evolution of these two methods. This ﬁgure depicts that major
of the researches have been focused on the qualitative security assurance methodology,
and very few eﬀorts have been made toward developing a quantitative security assurance
methodology. Katt and Prasher [2] discussed the advantages of the quantitative secu-
rity assurance method over the qualitative security assurance method. They discussed
the advantages of quantitative security assurance metrics, including both positive and
negative security aspects.

In the literature, various methods and techniques have been used for security assurance

as shown in Figure 11.

24

Figure 11: Methods and techniques used for security assurance.

8.1. Security Assurance Framework

In the literature, the following security assurance frameworks have been proposed and

discussed:

(a) Model-Driven Framework for Security Functionality Veriﬁcation

The major security problem for a software system is poor design practices, such as
improper security functionality design and implementation in the development cycle in
an improper manner. Therefore, it is crucial to verify the security functionality that
is designed and developed. The codes and designs should be veriﬁed or certiﬁed by a
competent authority. One of the most well-known frameworks for evaluating the security
[40] designed a
functionality of software systems is the CC framework. Deveci et al.
framework to assist designers, testers, and analysts during the CC certiﬁcation process.
The proposed framework is a model-driven security framework used to analyze, design,
and evaluate the security properties of information systems. This framework also supports
developers and evaluation authorities in implementing the security assurance process
through formal methods based on UML, object constraint language, Promela, and Spin.

(b) Quantitative Security Assurance Framework

There are many approaches to security assurance in the literature; however, measuring
the security of a software system is still a complex and tricky process. These approaches
do not accurately measure the system’s security level because they either consider only one
aspect of assurance, such as threats/vulnerabilities, or do not consider the signiﬁcance
of the various security requirements to the system under evaluation. Considering this
fact, Katt and Prasher [2] developed a security assurance framework incorporating both
security assurance and vulnerabilities. The proposed method is quantitative

25

Governance

t
n
e
m
p
o
l
e
v
e
D
m
e
t
s
y
S

Construction

Table 5: Security assurance methods in system development phases.
Policy
Compliance

Access Control Policy [47]

and

&

Strategy
Metrics
Risk
Awareness

Requirements

Design/Modelling

Security Preference [75], Assurance Proﬁle [76, 37],
Protection Proﬁle [41, 77], Security Metrics [71, 38, 73, 59, 37, 72, 70,
74, 49, 75]
Risk Assessment [72, 78], Risk Management [70], Risk Model [79]
Security Awareness Program [80], Cyber Range Training [80]
Elicitation [32, 2], Speciﬁcation [81, 2], Identiﬁcation [82, 2], Aggregation [36, 2],
Measurement [68, 2], Prioritization [81], Modelling [34, 83, 33, 2],
Correctness [19], Tracing [32], Security Requirements Engineering Process [29],
Requirement Representation [52, 30] Ontological Mapping [30]
Security Modelling [19, 54, 46, 40, 43, 82, 34, 84, 26, 45, 85],
Vulnerability Prediction Modelling [44], Security Assurance Model [45, 86],
Security Assurance Development Process Model [87],
Assurance Modelling of System Component [18, 34],
Model-Driven Security Framework [40, 43], Network Security Assurance [88],
Security Assurance Framework [2, 89], CC-Based Model for Network Security [85],
Framework for Authenticity [57], Object-Oriented Security Assurance Model [90],
Component Security Assurnace [34, 85, 35, 26], Usable-Security Assurance [61],
Service-Oriented Security Assurance [26], Formal Method [91, 92],
Security Assurance in Open Infrastructure [21],
Other Security Assurance Methods [47, 27, 22, 60, 49, 75, 93, 55, 94, 53]
Code Review

Veriﬁcation

Security Testing [42]

Threat Assessment
Security Assessment

Vulnerability Detection Method [95, 96, 97], Vulnera-
bility Prediction [44]
Penetration Testing [98, 2], Vulnerability Testing [2, 57,
99, 78], Black Box Testing [100, 99], Unit Testing [100],
Code Inspection [100], Security Requirement Testing
[81, 2]
Threat Analysis [78], Threat Modelling [98, 2, 82, 84]
System Modelling, Vulnerability Analysis [59, 42] Inter-
view [101]

Deployment

Monitoring and
Management

Security Review [87]
Quality of Security veriﬁcation [72]
Monitoring and Auditing [26, 21, 102, 103], Anomaly Detection [88]
Assurance Management, Security Durability [23]
Vulnerability Management [95, 96, 97, 2, 57, 99, 78, 44]

(c) Security Assurance Framework for Software Authenticity

There is a high risk of cyber-attacks on software applications because of their popu-
larity, misconﬁguration, technical ﬂaws, and vulnerabilities. Therefore, the software that
will be installed on the critical systems must be secure. Naeem et al. [57] considered the
authenticity of the software application before its installation and proposed a framework
to check the authenticity of the software application before its installation. However,
tools and frameworks are available, but they consider only a single aspect, such as a spe-
ciﬁc OS or a single-entry point check. The framework proposed by Naeem et al. provides
a solution to overcome this challenge.

(d) Security Assurance Model for Composed Information Security Products

The general systems are made with diﬀerent components such as servers, protocols,
services, and clients. It is important to note that any weakness in one of these components
may compromise the whole system. Therefore, eﬃcient security assurance methods are
required to secure these systems. The composed assurance packages (CAPs) is an evalu-
ation method for composed security products. However, it requires analysis of potential
components and interfaces between the components, which is quite diﬃcult because of
the complexity and variation in new IT products. Wu et al. [85] discussed this issue and
developed a CC-based model to assess the complete network security by combining eval-
uation assurance levels (EAL) and CAP, where EAL is used to evaluate a single IT entity

26

Table 6: A summary of security assurance frameworks

S.N. Challenges
1.

Improper
security
functionality design
and
implementa-
tion

Solutions
Veriﬁcation or certiﬁcation
of codes and designs

2.

3.

4.

Inaccuracy
quantitative
curity
measurement

in
se-
assurance

software

of
ap-
before

Authenticity
the
plication
installation
Security assurance
of
in-
composed
formation security
products

Development of
security
assurance framework con-
sidering various security re-
threats, and
quirements,
vulnerabilities
Check and ensure the au-
thenticity of the software
application before installa-
tion.
Security assurance method
by analysis of potential
components and interfaces
between the components

to

Framework
security
Model-driven
framework
analyze,
design, and evaluate the
of
properties
security
information systems.
A quantitative security as-
surance framework incor-
porating both security as-
surance and vulnerabili-
ties.
Framework for
checking
the authenticity or cred-
ibility of applications or
software
CC-based model to assess
the complete network secu-
rity by combining evalua-
tion assurance levels EAL
and CAP

Domain
Software Sys-
tems

Paper
[40]

IT and CPS

[2]

Applications
or software

Composed
Information
Security Prod-
ucts

[57]

[34,
35,
26]

while CAP is used to evaluate the composite IT entities. Some other eﬀorts have been
made to develop component security assurance methods based on the security properties
of the individual system components[34, 35, 26].

An overview of security assurance frameworks developed for several challenges have

been given in Table 6.

8.2. Object-Oriented Approach

The object-oriented approach is commonly used for system analysis and design, and
this has been proven over the years to be one of the most eﬀective ways of developing sys-
tems to meet the functional requirements of users. Additionally, since security assurance
involves signiﬁcant evidence of the incorporation of security measures in a system, the
usage of the Demster-Shafer was used to provide such related trust. Demster-Shafer[104]
is a theory of believe functions that is used together with probability and imprecise theo-
ries of probabilities for assessing uncertainties. The combined approach in the evaluation
model makes the evaluation process of security assurance clearer and makes the results
to be more believable.

Cuihua and Jiajun[90] proposed an object-oriented security evaluation model using the
concept of object-oriented technology. The study was motivated by the lack of eﬀective
and eﬃcient security models. Existing evaluation models such as qualitative, quantitative,
or combined approaches have not provided the necessary security evaluation model. For
instance, the quantitative approach cannot obtain precise numerical results. Similarly,
the qualitative approach is not objective, and both qualitative and quantitative approach
requires signiﬁcant improvement. To this end, the object-oriented approach and Demster-
Shafer evidence were explored for the security evaluation model by Cuihua and Jiajun[90].
They developed a security level distinguishing model using Dempster-Shafer evidence
theory to combine experts’ and auto evaluations, thereby making the evaluation process
clearer and reliable.

8.3. Security Assurance Development Process Model

Security is an important feature that needs to be considered during the software
development lifecycle (SDLC). A secure SDLC involves integrating security testing and
It includes
assurance methodology and related activities in the development process.

27

diﬀerent activities such as security requirements, architectural risk analysis during the
design phase, threat modelling, etc. Khan and Khan [45] made an eﬀort to study the
state-of-the-art of security issues, challenges, and practices during SDLC in the industries.
Based on this study, they developed a software security assurance model to assist software
developer’s vendor organizations in measuring their readiness to develop secure software.
The standard SDLC, OWASP’s Comprehensive, Lightweight Application Security
Process (CLASP), and Microsoft’s security enhancement software development lifecycle
(MDL) are not ﬁt for fast-changing commercial requirements to include security assur-
ance measures in operating systems. As a result, Lan and Han [87] developed security
assurance development process (SADP) model. The model consists of an institute se-
curity awareness program, documentation of security-relevant requirements, application
of security principles to design, performing source code level review, implementing and
performing security tests, security review, and risk management. The activities of SADP
can be repeatedly implemented. SADP is proven to be eﬃcient and eﬀective and was
hence adopted by NeoKylin operating system.

8.4. Vulnerability Detection/Prediction Approach

Vulnerability is a weakness in an information software, internal controls, security pro-
cedures, or implementation that can lead to unauthorized access when exploited. Security
vulnerability can cause substantial economic and reputational damage to both users and
organizations. In the context of software development, vulnerabilities can be introduced
in the developed system. Appropriate assurance measures are required to be taken during
the development process to avoid the related risks. Therefore, identifying security vulner-
abilities in the initial phases of the software development steps is paramount. However,
detecting software vulnerabilities is a pretty complex process.

In the past, some eﬀorts have been made toward identifying and predicting the vul-
nerabilities, such as Akram and Luo [95] developed a quantitative vulnerability detection
technique at the source code level based on code clone detection technique. They retrieved
vulnerable source code ﬁles from the various web source code repositories by tracking the
patch ﬁle of vulnerabilities. Then, using common vulnerabilities and exposures (CVE)
numbers, the vulnerable source code ﬁles are retrieved. Dissanayaka et al. [96] developed
a vulnerability analysis testbed using Linux containers. The authors discussed that the
developed virtual testbed is portable and easy to deploy. Hovseopyan et al.[44] conducted
a study by comparing the vulnerability predictions using old and new versions of Chrome
and Firefox to determine whether it is better to rely on older versions or newer versions
in exploring the vulnerabilities. The study ﬁndings suggest that the vulnerability pre-
diction based on the older versions of software tends to be reliable and establish security
assurance in that regard. Vulnerability prediction models are one of the possible methods
to identify the location of source code that need more attention [44].

In the literature, machine learning methods are also applied to code complexities,
code churn, token frequency, developer activities, etc., to detect vulnerabilities towards
enhancing security assurance. Bilgin et al. [97] used the machine learning technique to
predict the vulnerability of the software from source code before its release. This work
also includes developing a source code representation method, intelligently analyzing the
abstract syntax tree (AST) form of the source code, and then verifying whether ML can
be applied to distinguish between vulnerable and non-vulnerable code fragments. The
vulnerability detection and prediction methods in the development process and on the
deployed systems is shown in Fig. 12.

28

Figure 12: Vulnerability detection/prediction methods.

8.5. Model-Driven Cyber Range Training

The increasing demand for security in organizations emphasized the need for security-
aware employees in every role of an organization. Therefore, organizations need to train
their employees to face potential security challenges and respond accordingly to protect
their critical assets. Cyber Range training provides a promising approach that oﬀers
employees training in realistic environments considering diﬀerent scenarios and hands-
on experience based on their responsibilities and expertise level. Cybersecurity training
should be designed based on the organization’s requirements and should adjust to changes
in environments and scenarios. Somarakis et al. [105] studied the importance of dynamic
and up-to-date training for cyber security. They proposed a model-driven approach for
Cyber Range training, which helps togenerate tailor-made training scenarios based on
the organization’s requirements and security posture. This approach also provides the
automated deployment of training environments.

S.N. Security

Challenges Considered

Contribution

Table 7: Security assurance methods

1.

2.

Assurance
Methods
Object-
Oriented
Approach
Security
Assurance
Model

The
existing quantitative and
qualitative security methods are
not eﬃcient.
Development of secure software

Current security assurance meth-
ods are not capable to evalu-
ate the entire development pro-
cess and not applicable for diﬀer-
ent projects

29

an

Proposed
object-oriented
model for a clear security evalua-
tion process structure.
Developed software security assur-
ance model to assist vendor orga-
nizations in measuring their readi-
ness towards the development of
secure software
Developed an easy-to-implement
and
Security
Assurance Development Process
(SADP)

easy-to-evaluate

Application
Domain

Paper

Information
Systems

Software
Develop-
ment

Software
Develop-
ment

[90]

[45]

[87]

3.

Vulnera-
bility
Detection/
Prediction
Approach

4.

Cyber Range
Training

Auditing source code for vulnera-
bilities at a large scale

A model or testbed for assessing
vulnerabilities that is deployable,
maintainable, and accurate
To predict software vulnerabilities
from source code

A cyber security program should
be tailored to the needs of the or-
ganization and should be able to
adapt to the rapidly changing en-
vironment easily

testbed that

Developed a vulnerability detec-
tion method to detect vulnerabil-
ities in software and shared li-
braries at the source code level
Developed a general vulnerabil-
is
ity assessment
portable, virtual, and deployable
Developed a source code represen-
tation method and applied ma-
chine learning methods to identify
vulnerable code fragments
Created a model-driven approach
for Cyber Range training based
on a comprehensive description of
the organization’s security posture
that facilitates the generation of
tailor-made training scenarios

5.

Security
Assurance
Tools

The need for a tool to determine a
system’s security assurance level

Need for a tool to assist the eval-
uator during the CC certiﬁcation
process.
The need for an eﬃcient tool to de-
termine a system security

6.

7.

8.

9.

Attack detec-
tion Method

To improve the speed and accu-
racy of attack detection

Security assur-
ance monitor-
ing

Continuous monitoring of telecom-
munication services is paramount

Designing
Security
Assurance
Framework
Anomaly
detection
method

Assuring the security, privacy, and
safety of the handled data.

Monitoring and analyzing network
security to identify suspicious ac-
tivity throughout the network

10. Assurance

case method

The adaptation of existing assur-
ance case methodologies to cover
speciﬁc IIoT issues

11. Continuous

assurance
methods

To assess the security of IoT sys-
tems continuously, a systematic
approach is required

12. Model-Driven
Security
Assurance
Framework

Security assurance needs to be au-
tomated

13.

Security
sessment
system

14. E-

government
security
assurance
system

as-

Secure deployment of WLAN net-
work

Constructing safe, reliable and ef-
fective e-government security as-
surance

30

Provides a tool for determining the
level of security assurance of net-
work systems in near real time
Developed a tool to represent the
CC catalog ontologically

Created a visualization and mod-
eling tool
for managing secu-
rity metrics and measurements in
software-intensive systems
Implemented machine
learning
and deep learning techniques on
the core of the operating system
Demonstrated the applicability of
a security assurance methodology
for telecommunication infrastruc-
ture (BUGYO) on a VoIP infras-
tructure.
Conceptually aligning EBIOS, Se-
cure Tropos, and PRIS methods to
create a complete assurance frame-
work
Discussed the available methods
and tools and presented a general
concept of security analysis com-
ponent for the security operational
center.
Presented a framework for assur-
ance cases for IIoT and secu-
rity cases that included elements
of properties assurance, security
management assurance,
compo-
nent assurance, and feature assur-
ance.
Developed a conceptual
frame-
work for IoT security assurance
evaluation and presented a pro-
cess for developing continuous as-
surance methods for IoT services.
Proposed a model-driven frame-
work to allow designers to model
security concerns and to facilitate
automated veriﬁcations and vali-
dations.
Developed a fuzzy logic-based se-
curity assessment system

a

Developed
for
e-government systems

reference model
security assurance of

the

Software

[95]

Software
system

[96]

Software

[97]

do-

smart

Multi
mains
includ-
ing
home,
health-
care, smart
shipping en-
vironments
Software
systems

IT products
and systems

Software
-intensive
systems

[105]

[36,
39]

[30]

[70]

Manufacturing
industry

[27]

[21]
Telecommunication
service

Intelligent
Transport
Systems

Network
Traﬃc

[89]

[88]

Industrial
IoT

[60]

IoT

[22]

Open-
source
software

[43]

WLANs

[106]

E-
governance

[86]

15.

Security Pro-
tection Proﬁle

To educate personnel working in
E-Government systems about cy-
ber security assessment
Railway automation does not have
any harmonized IT security re-
quirements

E-
governance

Railway
Automation

[80]

[77]

Created a framework for assess-
ing information security issues in
e-government
Describes a reference communica-
tion architecture which attempts
to separate risk management and
security requirements as well as
certiﬁcation processes as far as
possible, and outlines the threats
and IT security objectives with
typical railway assumptions.

8.6. Usable-Security Assessment

The usable security software service may be subject to diﬀerent security attributes
such as conﬁdentiality, integrity, availability, accountability and non-repudiation, and
usability attributes such as eﬀectiveness, eﬃciency, satisfaction and user error protection.
These attributes are crucial in the security assurance of the software systems and will
help to increase the eﬃciency and accuracy in security assurance measurement. Agrawal
et al.
[61] used the Fuzzy Analytical Hierarchy Process (Fuzzy-AHP) methodology to
evaluate usable security. They also assessed the impact of security on usability and the
impact of usability on security using a quantitative approach.

8.7. Security Assurance Tools

Security assurance tool supports measurement of real-time security assurance level
and to maintain the security of complex and large-networked operational systems in
automated way. Pham et al.
[36, 39] discussed the need of security assurance tool to
measure the assurance level of the deployed system. Some authors also made eﬀorts
towards the development of tool to support security assurance evaluation process.

CC certiﬁcation is a complex and time taken process that demotivates industries to
adopt this process. Ekclhart et al.
[30] developed CC ontology tool to ease the CC
certiﬁcation process. This tool is based on ontological representation of CC catalog and
supports various tasks such as evaluation process planning, making reports and review
of the applicable documents. Savola and Heinonen [70] developed a tool for visualization
and modeling the hierarchical speciﬁcation and deployment of security metrics and mea-
surements. This tool also supports security decision making by managing a large number
of metrics and measurements in an eﬃcient way.

8.8. CC Ontology Tool

The certiﬁcation process of information security products and systems using CC is
very complex and time-consuming. This has discouraged several organizations from the
CC certiﬁcation process. To address this issue, Ekclhart et al.[30] developed a CC on-
tology tool based on an ontological representation of the CC catalogue. The developed
tool supports the planning of an evaluation process, reviewing the relevant documents,
and creating the reports. These features simplify the CC certiﬁcation process and can
facilitate the adoption of CC certiﬁcation by more organizations. However, the developed
tool is mainly designed for security assurance requirements relevant for the evaluation.

9. System and Environments

The recent advancements in security assurance suggest a promising approach to en-
sure the security of software. The security assurance of the system depends on both
static and dynamic security metrics. The static metrics of the system change when there

31

Figure 13: Static and dynamic security assurance methods.

are changes in conﬁguration or a component is added or removed. Whereas the dynamic
metrics change over time [39]. However, most of the existing works focus on the static
vision on the description of the system under evaluation and do not consider the system’s
dynamic behaviour. For example, the CC is a static process that relies on the accredited
security experts. The main disadvantage of this procedure is that it is ad-hoc in the lab-
oratory for a single product, and it loses signiﬁcance when a certiﬁed product is brought
into an operational system or modiﬁed. Implementation of operational security assurance
in large dynamic systems is a challenging task. Moreover, providing continuous security
assurance evaluation and implementing countermeasures to achieve the security goals is
also a complex task [37]. Fig. 13 represents the evolution of static and dynamic security
assurance evaluation methods. This ﬁgure shows that most research works have consid-
ered static security assurance, whereas very little research has been done on evaluation
of dynamic security.

The development of the security assurance method of a software system needed the
deﬁnition and a clear understanding of the security requirements of the concerned appli-
cation domain. Many researchers proposed the general security assurance methodology,
while others developed the application-oriented approaches. As per our observation, in
some application domains, pervasive research works have been done, such as cloud com-
puting, telecommunication, etc. while in some of them, there are very limited research
works such as railway, e-governance, etc. The overview of the application domains in
which the research works related to security assurance have been shown in Fig. 14. The
application domains are categorized mainly into two categories: CPS and IT systems.
Since cloud is quite a popular application domain and many research works have been
done. Therefore, we will discuss the challenges and methods of cloud security assurance
separately.

9.1. Security Assurance in Access Control

Access control is one of the important measures in security assurance and crucial
to ensure that information is secured, uncorrupted, and available in the application. A
system should have the assurance that the resources access by the users are authorized
and authenticated. The diﬀerent types of access control include role-based and attribute-
based [107]. Therefore, the incorporation of access control needs to be considered in the
initial stages of the system development process.

32

Figure 14: Application domains of system security assurance.

It can be a challenging task to incorporate the access control into the software if most
of the requirements related to the access control are identiﬁed and implemented after
the functional requirements [108]. Accordingly, access control requirements are mostly
considered after the functional requirement deﬁnition stage, leading to ﬂaws and security
defects in the access control mechanism. Therefore, a security assurance mechanism is
required to ensure that the application code behaves consistently with the access control
policy [47]. A framework developed by Pavlich-Mariscal et al. [47] showed that the access
control requirements that were identiﬁed and designed have been correctly implemented
at the code level. A labelled transition system (LTS) was used at the design stage to
represent the behaviour of the system. Lambda-calculus was used at the code level to
capture the essential features of the access control requirements. The requirements were
then mapped from the LTS to the lambda-calculus as a representation of the correct
representation of design to the code. The work was validated by applying the framework
to two access control mechanisms.

9.2. Security Assurance of the Self-Adaptive System

The trustworthiness of the self-adaptive system is the primary concern. The dynamic
environment of these systems makes security goals challenging to achieve. These systems
must manage uncertainty due to the dynamic environments, functional changes and ma-
licious attacks and fulﬁl their security requirements in the deployed environment and as if
there are any changes over time. Therefore, security assurance of these systems is required
to maintain the system’s trustworthiness within the uncertainty. The security assurance

33

of these systems becomes even more critical when they are used in business-critical and
safety-critical applications. Therefore, an eﬃcient method is required to assure conﬁdence
in the security proﬁle of self-adaptive systems, which adopts the changes in functional and
security conditions at runtime. However, it is a challenging task due to the complexity
of the security dependencies. To manage the security concern, the self-adaptive system
should consider MAPE (Monitor, Analyse, Plan, and Execute) control loop [109]. In this
regard, Jahan et al.
[102] developed a security-focused feedback control loop, MAPE-
SAC, and its interaction with a MAPE-K, function, and performance-focused control
loop to dynamically manage runtime adaptations in response to changes in functional
and security conditions.

9.3. Core-level cybersecurity assurance

Sakthivel et al. [27] studied the core-level cybersecurity assurance. They considered
the core of the operating system than the application level service for their study to
increase the speed and eﬀectiveness in attack detection. The main advantage of consid-
ering the operating system’s core is that it contains every internal attribute and the ﬁle
system. They implemented the machine learning and deep learning approach and found
that classiﬁcation and learning methods used in diﬀerent machine learning techniques
can enhance the protection of the systems against potential attacks.

9.4. Security Assurance of Telecommunication System

Telecommunication infrastructure experiences continuous and increasing security threats

and risks. There is a need for the deployment of adequately tested and managed infor-
mation security solutions. The security assurance of the telecommunication system can
help to fulﬁl this requirement. Software security assurance incorporates diﬀerent methods
such as security testing, security analysis, security monitoring, security auditing, etc. Se-
curity testing is an essential process in security assurance, and it should be implemented
iteratively on analytical and practical stages [42]. On the other hand, continuous mon-
itoring of telecommunication services is paramount to get the quality assurance of the
services being provided. Ouedraogo et al. [21] discussed the applicability of the BUGYO
(Building Security Assurance in Open Infrastructures) methodology on VoIP service in-
frastructure based on open source components. BUGYO is a CC-based methodology that
addresses the security assurance issues related to the telecommunication infrastructure
and services and veriﬁes that the services provided through the infrastructure are secured.

9.5. Security Durability of Web Application

Kumar et al.

[23] focused on optimizing the security assurance eﬀort for a speciﬁc
lifespan of a web application by estimating its security durability. They identiﬁed three
factors: trustworthiness, dependability, and human trust, which can improve security
durability. They estimated the security durability quantitatively by using a Hesitant
Fuzzy based Analytic Hierarchy Process and Technique for Order of Preference by Simi-
larity to Ideal Solution hybrid technique.

9.6. Security Assurance Framework for Intelligent Transport System

The growing number of vehicles on the road is one of the signiﬁcant causes of road
traﬃc accidents, a major public safety problem. The emerging model of connected ve-
hicles enables a signiﬁcant technology shift in improving road safety and fostering the
emergence of next-generation cooperative intelligent transport systems (ITS). Networked

34

ICT, internet of things (IoT), and CPS help the ITS enable services and applications
such as communication of vehicles with nearby vehicles and roadside infrastructures, etc.
However, these technologies come with several challenges, including security and privacy.
The wireless connection of these vehicles to external entities can expose the ITS ap-
plications to various security threats and attacks. Therefore, it is essential to consider
these concerns while developing the ITS. Diamantopoulou et al. [89] developed a security
assurance framework for connected vehicular technology.

9.7. Security Assurance of Network Traﬃc

With the rapid growth of organization intranets, network traﬃc security has become
a more complex task for network security administrators. The incorporation of emerg-
ing technologies such as cloud computing and IoT is also increasing the attack surface.
Therefore, it is vital to monitor and analyze the network security to identify suspicious
activities throughout the network and mitigate it. The security analysis process includes
the intercepting, recording, and analysis of the pattern of network traﬃc communica-
tion. The implementation of security measures in a particular organization is incomplete
without these processes. Bialas [88] considered one of the main concerns of network se-
curity assurance, i.e., anomaly detection in network traﬃc monitoring and developed an
anomaly detection component.

9.8. Security Assurance of IoT Devices

Present-day, IoT has become one of the unprecedented research topics in cybersecu-
rity research. IoT is a system that enables computing devices, mechanical and digital
machines, objects, things, and animals in our environment to interconnect with each
other over the internet without the need for human-to-human or human-to-computer in-
teraction. Embedded sensors and unique identiﬁers allow smart things to interact with
each other over the internet; and create smart applications and services such as smart
cities, smart homes, smart schools, smart healthcare smart cars, intelligent transporta-
tion, smart grid, etc. IoT provides real work intelligent platform for distributed object
interaction through various communication technologies.
It made IoT systems an at-
tractive target for attackers and adversaries interested in stealing sensitive information.
Therefore, a systematic method is needed to assess the security of IoT systems. Ardag-
nan et al. [22] developed continuous assurance methods for IoT services and designed a
conceptual framework for IoT security assurance assessment. Sklyar and Kharchenko [60]
proposed a framework to utilize Assurance Case methodology for Industrial IoT systems
(IIoT).

9.9. Security Assurance Framework for OSS

Open source technology is a growing trend in a wide range of applications. There is a
great demand for open source technology in most modern enterprises. However, it comes
with great concern over the security assurance provided by open source components.
Frequent updates are required to ﬁne-tune the product and to improve its performance.
These updates add new features and improve or remove old features in the software;
this can violate the security properties designed for the previous versions. Therefore, a
systematic and eﬃcient security assurance technique is required to measure the security
level of open sources software and its released versions in an automated way. When
open source software (OSS) is combined with the REST architectural style, this task
becomes more challenging. REST architecture has several additional scalability and

35

extensibility beneﬁts, which help to add more features and oﬀer the services to a larger
audience. Design methodologies and mechanisms are required to use the REST APIs that
manage stateless protocol for stateful applications. Rauf and Troubitsyna [43] proposed a
model-driven framework that will help designers to model the security concerns of REST
compliant open-source software and to enable automated veriﬁcation and validation. It
also facilitates a regular monitoring mechanism of the security features, even considering
frequent updates of OSS.

9.10. Wireless Local Area Networks (WLANs)

Wireless networking is quite popular and one of the rapid growing technologies. A
WLAN is a network that enables devices’ capability to connect and communicate wire-
lessly for homes and businesses. However, while it provides convenience and ﬂexibility,
secure deployment is not always possible and is still a primary concern for researchers
and developers. Liu and Jin [106] conducted a study to analyze the security threats
and attacks to the WLAN network architecture and developed a security assessment and
enhancement system. This system is divided into two subsystems, a security assessment
system and a security enhancement system. The security assessment system is based
on fuzzy logic and analyzes vulnerability of physical layer (PHY) and medium access
control (MAC) layer, key management layer and identity authentication layer. This ap-
proach provides quantitative value of security level based on security indexes. Whereas
the security enhancement system is an integrated, trusted WLAN framework based on
the trusted network connect that helps to improve the security level of WLAN.

9.11. Security Assurance of E-governance

E-government can be deﬁned as the use of information and communication technolo-
gies in delivering government services across the citizens, various public service agen-
cies and businesses, and the management of these services eﬀectively and eﬃciently. E-
government helps the government to reduce operational costs by better-integrated work-
ﬂows and processes and eﬀective utilization of resources. However, e-governance comes
with several challenges, among which information security is the more serious. There-
fore, the government should take the necessary measures and actions to secure useful
information such as government data and citizens’ data to guarantee national security.
The security assurance of E-governance can guarantee the operation of the e-government
system in a secure, reliable, and eﬀective way. Lixiang [86] discussed the security issue of
Chinese E-governance and proposed a reference model for information security assurance.
Gupta et al. [80] conducted a study to educate the person working in the E-governance
system.
In this regard, they suggested a framework considering various internal and
external features of an organization’s security.

9.12. Protection Proﬁle in Railway Automation

Railway automation has experienced increasing IT security incidents in recent years.
However, most of these attacks are denial of service attacks to target interruptions of
services, not related to any safety-critical incidents. Therefore, IT security requirements
for railway automation is needed. Bock et al. [77] discussed this issue and represented the
CC-based IT security requirements for the railway domain as a protection proﬁle. They
also developed a reference architecture to distinguish IT security and safety requirements
and discussed security objectives and threats in this application domain.

36

9.13. Cloud Security Assurance

Cloud computing is a computing paradigm that has transformed the service deploy-
ment landscape of ICT. It oﬀers various on-demand, highly available, scalable, and ubiqui-
tous services that extend beyond the geographical and administrative boundaries, thereby
attracting organizations to deploy their services in the cloud. However, cloud services
come with security concerns due to many users. The externalization process of the ap-
plication is also one of the main reasons to increase its potential surface of attack. The
lingering concern of security concerns is one of the main reasons organizations resist the
cloud. Thus, cloud security became the major concern for both researchers and indus-
tries. The challenges face by CSCs, CSPs and common issues are illustrated in Fig. 15.
The overview of assurance methods and techniques developed in the literature are as
follows:

Figure 15: Security issues related to cloud security assurance.

9.13.1. Enforcement of Security Properties in Cloud

Enforcement of the security properties in the cloud is an essential and challenging task.
It is important to assure that the essential security requirements have been eﬀectively
enforced. The assurance properties can be helpful to verify the eﬀective enforcement
of the security requirements and provide evidence of the enforcement. Bobelin et al.
[52] proposed a context-based language to express the assurance properties based on
the security requirements. The property prototypes are used to represent the security
requirements. These prototypes are high-level deﬁnitions of security requirements that
can address one of the major issues, i.e., diﬃculty in deﬁning the security policy.

9.13.2. Security Assessment of Cloud Considering CSPs and CSCs Requirements

Cloud computing provides multiple beneﬁts to users. However, CSPs should provide
trust to CSCs with their data and ensure data integrity and conﬁdentiality. On the other

37

hand, CSCs should know what security assurance CSPs are oﬀering and should compare
the CSPs oﬀers qualitatively or qualitatively based on their requirements. The formal-
ization of the security properties CSPs oﬀer is the ﬁrst step in assessing and comparing
CSPs. Cloud community is working to develop a standard speciﬁcation of security service
level agreements (SecSLAs) that can help CSPs to ensure the desired level of security to
CSCs for their services [93].

Modic et al. [49] developed a cloud security assessment technique, i.e., moving inter-
vals process. This method supports multiple requests in parallel, and it also considers
variation in the number of CSPs and the security requirements of CSCs. The proposed
technique oﬀers high computational eﬃciency as well as accuracy. They also developed an
approach to quantify the security attributes considered in SecSLAs to compare diﬀerent
SecSLAs oﬀered by CSPs. Rizvi et al. [75] also considered the decision-making problem
of CSCs in the selection of available cloud services based on their security strength. They
proposed a framework and mechanism that can assess the robustness of CSP security
based on customer security preferences. They developed security evaluation rules for se-
curity metric based on linear equations. This rule helps cloud service users analyze the
security index scores of one or more CSPs and verify the ﬁnal security scores.

9.14. Continuous Security Assessment for Security Certiﬁcation of Cloud

Cloud services need continuous reﬁnements and requirements changes, which aﬀects
the security and resilience posture of the service and invalidates the certiﬁcate. In this
situation, recertiﬁcate may be needed, which leads to high costs. These drawbacks de-
motivate the CSPs that intend to leverage the advantages of the cloud.

In the last decades, several methods have been developed for systematic and com-
prehensive cloud security to address this shortcoming. One of the drawbacks of these
approaches is that they can reveal a cloud service provider’s intellectual property as part
of the assessment process. Aggregation of assessment results into the assurance levels
can be one of the possible methods to address this problem, which is used in CC [110].
CC assurance levels show the sophistication level of tests performed on a system, such
as functional, structural, methodical, semi-formal, and formal. Hudic et al.[55] made an
eﬀort to develop a security assessment methodology for security certiﬁcation, which pro-
vides continuous security assessment and also protects the cloud provider’s intellectual
property.

9.14.1. Security Transparency and Audit

Security transparency and audit are essential factors that the industries must consider
to increase the users’ trust by fulﬁlling the requirement of the oﬀering services. Security
transparency increases assurance and accountability by providing essential information
to the customers about the security practices and procedures. Whereas, security auditing
is the tracking and collecting evidence of the signiﬁcant events in the operational phase
of the system, which is useful to achieve the overall goal security objectives of the system.
Ismail and Islam [53] discussed these two factors and developed a framework to address
challenges regarding security transparency of the cloud. They have also developed a
Security transparency and audit tool that can help auditors to evaluate the evidence
produced by the CSP.

9.14.2. Enforcement and Monitoring the SecSLAs

The establishment of SecSLAs is not enough to fulﬁl the requirements of CSPs and
CSCs when there is a lack of management in SecSLAs commitments. A systematic mecha-

38

Table 8: A summary of cloud security assurance methods

S.N. Category
1.

Security assurance of cloud ser-
vices

Challenges
Standard speciﬁcation of secu-
rity service level agreements

2.

3.

4.

5.

Enforcement of
properties

the

security

Eﬀective enforcement of secu-
rity properties in the cloud

Security Certiﬁcation of Cloud

Security transparency and audit

Continuous reﬁnements and re-
quirements changes may invali-
date the cloud certiﬁcate
Implementing security trans-
parency and audit

Enforcement and Monitoring
the SecSLAs

A systematic mechanism is re-
quired for CSPs to take action
against the eventualities such as
attacks, changes, disasters, or
regulations

Proposed Solution
- Developed a cloud security as-
sessment technique
-Developed an approach to quan-
tify the security attributes consid-
ered in SecSLAs
Proposed a framework and mech-
anism that can assess the robust-
ness of CSP security based on cus-
tomer security preferences
Proposed a context-based lan-
guage to express the assurance
properties based on the security
requirements
Develop a security assessment
methodology for security certiﬁca-
tion
-Developed a framework to ad-
dress challenges regarding security
transparency of the cloud
security
-Developed
parency and audit tool
Proposed a solution for monitoring
and enforcing SecSLA compliance.

trans-

a

Paper
[49]

[75]

[52]

[55]

[53]

[103]

nism is required for CSPs to take action against the eventualities such as attacks, changes,
disasters, or regulations that may aﬀect the fulﬁlment of the SecSLA commitment. The
eﬃcient detection and mitigation of potential threats or harmful security-related events
are essential for CSPs to provide trustworthy services to CSCs and fulﬁl and maintain the
agreed assurance levels. For example, if an attacker cracks the encryption key, there is no
automated mechanism to indicate that there may be a security breach and the protected
information is exposed. Trapeiro et al.
[103] proposed a solution for monitoring and
enforcing SecSLA compliance.

A summary of cloud security assurance methods has been given in Table 8.

10. Limitations and Future Research Directions

The rapid evolution of technology comes with security concerns and lends the in-
formation technology environment to potential uncertainty. Therefore, security solutions
must be advanced to prevent potential threats and risks before and when they occur. The
current security assurance methods are good at ﬂagging the anomalies but not too good
at deﬁning their impact and potential risks. These are some limitations of the existing
security solutions and future challenges:

10.1. Security Requirements Analysis

CC provides organized and concrete guidelines for evaluation. CC sets the possible
security requirements that include assurance requirements and functional requirements.
However, the elucidation of the structural relationship between security requirements
and security assurance requirements and their evaluation is a possible future research
direction [33].

39

10.2. Enforcement of Security Requirements

The security requirements are developed to meet the need of consumers, developers,
and evaluators. To achieve a particular EAL, a set of activities including all security
requirements needs to be identiﬁed and evaluate these security requirements against the
user’s requirement and eliciting new requirements based on the objectives to be met.
However, CC does not oﬀer a well-deﬁned methodology to employ the enforced require-
ments.

10.3. Correctness, Quality and Eﬀectiveness of the Security Assurance

Security assurance provides conﬁdence that system assets are protected; however, this
conﬁdence depends on the correctness of the security measures, quality of the security
policy, and proﬁle of the attackers [19]. The eﬀectiveness of the assurance techniques is
another factor that is diﬃcult to measure in the operational phase. A methodology is
required to measure that the security controls are adequate and appropriate for speciﬁc
systems. Therefore, it is essential to consider these factors while developing a security
assurance method.

10.4. Real-time Security Assurance Evaluation

In most of the existing works related to security assurance evaluation, the system’s
dynamic behaviour under evaluation has not been considered. These works mainly fo-
cused on static behaviour. Therefore, a method/tool is required to measure and verify
the security assurance level of the system in real-time. This method will be helpful to
maintain and improve system security on a day-to-day basis in the operational phase.

10.5. Automation of Security Assurance Process

Automation of security analysis, evaluation, validation, and testing approaches is
required to obtain continuous evidence about a system’s security assurance level or per-
formance under evaluation. There are no widely accepted methods or approaches that
fulﬁl this requirement.

An automated security veriﬁcation technique for web applications is also crucial. The
current technology, such as network ﬁrewalls and antivirus, oﬀers security protections only
at host or network levels. Therefore, one should also focus on security at the application
level, i.e., the publication interfaces of web applications which is a more attractive target.
In the past, white-box and black-box testing frameworks have been used for automated
web applications security assessment. However, one of the signiﬁcant drawbacks of black-
box testing is that it requires source code which is not available in many cases, and the
second is that the veriﬁcation process runs on simulated runtime behaviours based on
program abstraction, while the abstraction may not reﬂects the actual program correctly.
On the other hand, black-box testing framework work also comes with several challenges,
such as providing an eﬃcient interface mechanism [99].

10.6. Security Assurance Tool

Security assurance tools help developers in building secure systems and to measure
how secure system is. There is no eﬃcient tool available that supports real-time security
assurance of the system in an automated way. Therefore, there a need is to improve
the security assurance tools and develop new tools that can help in security assurance
evaluation of large networked IT systems.

40

10.7. Security Assurance of Composed System

Direct measurement of security assurance for complex software systems is not al-
ways possible.
In this case, one of the possible methods is to decompose the system
into measurable parts and measure the assurance of decomposed entities. However, in
this method, aggregation is required as a backward process to obtain the security assur-
ance of the software system by aggregating the security assurance values. Therefore, a
suitable aggregation technique is required. The method should consider the composing
entities that are security assurance relevant and relations between the components. It is
also essential to understand how constituent components of a system under evaluation
contribute to the system’s security [36]. Deﬁning and developing conﬁdence metrics for
security assurance level and the selection and aggregation technique for these security
metrics is another future direction.

10.8. Quantitative Security Assurance Approach

In the past, very few eﬀorts have been made to develop a systematic approach to
quantify the security to support security assurance activities. Most of the approaches
are focused on qualitative security assurance. There are no standards or widely accepted
methods, models, taxonomy, or tools for quantitative security assurance. The advan-
tages of the quantitative security assurance approach have already been discussed in the
previous section.

10.9. Competencies of individuals

Individuals performance assessment and veriﬁcation are essential for diﬀerent indus-
tries and organizations. A possible future direction is to develop an assurance technique
that can assess the competencies of the individuals for conducting the security assessment
[101]. This technique will be helpful for an individual in improving security assurance
skills.

10.10. Development of Metrics Visualization System

The security metrics measurements and meaningfulness in security assurance and risk
management is a challenging task. Their poor manageability can compromise the mean-
ingfulness of the metrics due to a large number of uncategorized information elements.
Therefore, systematic methods and well-designed tools are required for better manage-
ment in collecting and measuring security metrics. In the past, limited research work has
been done in this area, and they are at the initial research stage [70].

10.11. Data Driven Security Assurance Method

The recent advancements in computing capabilities, software algorithms, and special-
ized hardware design have led to major breakthroughs in machine learning and artiﬁcial
intelligence. The application of data-driven techniques in security assurance may provide
a promising solution in automated and intelligent security analysis, including vulnerability
identiﬁcation, code classiﬁcation, vulnerability prediction, code summarizing, and clone
detection. In the literature, limited research work can be found in this area [97, 23, 27].

41

10.12. Vulnerability Assessment

In the literature, several methods and techniques are developed to identify and predict
the vulnerability. However, certain factors need to be considered while developing these
methods such as “how these vulnerabilities transfer from one system to another?” and
“how these vulnerabilities remain unﬁxed for a long time?” [95]. Another future direction
is identifying the exact location of detected vulnerability in the functional level code and
what it is the reason behind its detection as a vulnerability. In other words, considering
and improving the localization and interpretation aspects of the vulnerability [97].

10.13. Cloud Security Assurance

It is a quite diﬃcult task to enforce the security properties on a cloud platform. How-
ever, it is a complex task to describing and enforcing security properties and collection of
digital evidence back. The multi-layered system and services and their interdependencies
make the security evaluation even more diﬃcult. CSPs should assess the security of their
oﬀering services. Therefore, there is a need for a method or technique that address these
issues. Some other requirements are as follows:

10.13.1. Security Monitoring Tool

The tenants want assurance that the security properties of the requested services are
enforced eﬀectively. Therefore, CSCs should oﬀer a tool or way so that tenants can
monitor the actual security of service and can provide well-deﬁned information regarding
violations of requested security features.

10.13.2. Real-time Cloud Security Assessment

Some security assessment methodologies have been developed in the literature, but
they are worthy only if they can support the actual decision-making at run time. Most
of these methods are eﬀective in an environment where performance is not essential [49].
Therefore, an eﬃcient method is required which support operational security assurance
evaluation. Future research work should focus on the real-time monitoring of cloud
security. These techniques should also include multi-cloud applications and a cloud supply
chain. It should be able to adopt the changes in both cloud service composition, and the
context [50].

11. Conclusion

ICT has a signiﬁcant impact in this information age era. Public and private organiza-
tions heavily rely on software systems to make their business activities more manageable.
However, these systems are experiencing increasing threats with the evolution of new tech-
nology; hence organizations need to expand security assurance programs to encounter the
security threats and ensure their integrity and quality. Security assurance provides con-
ﬁdence that the system meets the security requirements and is resilient against potential
security threats and failures. It involves diﬀerent processes such as requirement analysis,
design, implementation, veriﬁcation, and testing.

Traditional security assurance methods suﬀer from several limitations due to their
static nature, poor security requirements speciﬁcations and design, etc. These methods
are also focused on either a single application or component of a system. This paper
has conducted a comprehensive SLR to study state-of-the-art, research trends and fu-
ture directions in system security assurance. We have organized and presented detailed

42

discussions on the security assurance processes and activities, such as assurance criteria,
proﬁle, methods, assurance level, system, and environments. In this paper, we have dis-
cussed the research challenges and gaps and diﬀerent security assurance techniques and
methods that have made an eﬀort to overcome these challenges. We have also discussed
the limitations of these security assurance methods and future directions. The primary
limitations that current approaches cannot resolve are entirely related to the security
assurance speciﬁcation and enforcement, correctness, eﬀectiveness of security assurance,
automation of security assurance process and real-time security assurance evaluations.
Therefore, an advanced security assurance processes and methods will be required to
ensure an organization’s required level of security.

Acknowledgment

This work was carried out during the tenure of an ERCIM ‘Alain Bensoussan’ Fel-
lowship Programme. This work is also partially supported by Norwegian Cyber Range,
NTNU, Norway.

References

[1] S. M. Radack, et al., Managing information security risk: Organization, mission,

and information system view (2011).

[2] B. Katt, N. Prasher, Quantitative security assurance metrics: Rest api case stud-
in: Proceedings of the 12th European Conference on Software Architecture:

ies,
Companion Proceedings, pp. 1–7.

[3] G. F. Jelen, J. R. Williams, A practical approach to measuring assurance,

in:
Proceedings 14th Annual Computer Security Applications Conference (Cat. No.
98EX217), IEEE, pp. 333–343.

[4] E. H. Spaﬀord, Testimony before the house government reform committee sub-
committee on technology, information policy, intergovernmental relations and the
census exploring common criteria: Can it ensure that the federal government gets
needed security in software? (2003).

[5] R. Heiland, B. Thomas, V. Welch, C. Jackson, Toward a research software security

maturity model, arXiv preprint arXiv:1309.1677 (2013).

[6] A. Stock, D. Cuthbert, J. Manico, J. Grossman, M. Burnett, Owasp application

security veriﬁcation standard, Std. Rev. 4.0.1 (2019).

[7] W. Choi, D. Yoo, Software assurance towards better it service, Journal of Service

Science 1 (2009) 31–56.

[8] M. Brown, Toward a taxonomy of communications security models, Journal of

Cryptographic Engineering 3 (2013) 181–195.

[9] K. H. Guo, Security-related behavior in using information systems in the workplace:

A review and synthesis, Computers & Security 32 (2013) 242–251.

[10] S. Bijani, D. Robertson, A review of attacks and security approaches in open

multi-agent systems, Artiﬁcial Intelligence Review 42 (2014) 607–636.

43

[11] K. Wan, V. Alagar, Context-aware security solutions for cyber-physical systems,

Mobile Networks and Applications 19 (2014) 212–226.

[12] H. Oueslati, M. M. Rahman, L. ben Othmane, Literature review of the challenges
of developing secure software using the agile approach, in: 2015 10th International
Conference on Availability, Reliability and Security, IEEE, pp. 540–547.

[13] H. Zhang, W. Han, X. Lai, D. Lin, J. Ma, J. Li, Survey on cyberspace security,

Science China Information Sciences 58 (2015) 1–43.

[14] S. Ouchani, M. Debbabi, Speciﬁcation, veriﬁcation, and quantiﬁcation of security

in model-based systems, Computing 97 (2015) 691–711.

[15] A. Fink, Conducting research literature reviews: From the internet to paper, Sage

publications, 2019.

[16] S. Keele, et al., Guidelines for performing systematic literature reviews in software
engineering, Technical Report, Technical report, Ver. 2.3 EBSE Technical Report.
EBSE, 2007.

[17] B. A. Kitchenham, E. Mendes, G. H. Travassos, Cross versus within-company
IEEE Transactions on Software

cost estimation studies: A systematic review,
Engineering 33 (2007) 316–329.

[18] M. Ouedraogo, H. Mouratidis, E. Dubois, D. Khadraoui,

security criticality and assurance evaluation,
and Information Technology, Springer, 2010, pp. 38–54.

Information systems
in: Advances in Computer Science

[19] M. Ouedraogo, H. Mouratidis, D. Khadraoui, E. Dubois, An agent-based system
to support assurance of security requirements, in: 2010 Fourth International Con-
ference on Secure Software Integration and Reliability Improvement, IEEE, pp.
78–87.

[20] A. Hecker, M. Riguidel, On the operational security assurance evaluation of net-
in: Smart Spaces and Next Generation Wired/Wireless Net-

worked it systems,
working, Springer, 2009, pp. 266–278.

[21] M. Ouedraogo, D. Khadraoui, B. De R´emont, E. Dubois, H. Mouratidis, Deploy-
ment of a security assurance monitoring framework for telecommunication service
infrastructures on a voip service, in: 2008 New Technologies, Mobility and Security,
IEEE, pp. 1–5.

[22] C. A. Ardagna, E. Damiani, J. Sch¨utte, P. Stephanow, A case for iot security

assurance, in: Internet of Everything, Springer, 2018, pp. 175–192.

[23] R. Kumar, A. I. Khan, Y. B. Abushark, M. M. Alam, A. Agrawal, R. A. Khan, A
knowledge-based integrated system of hesitant fuzzy set, ahp and topsis for evalu-
ating security-durability of web applications, IEEE Access 8 (2020) 48870–48885.

[24] Y. Liu, K. P. Gummadi, B. Krishnamurthy, A. Mislove, Analyzing facebook privacy
settings: user expectations vs. reality, in: Proceedings of the 2011 ACM SIGCOMM
conference on Internet measurement conference, pp. 61–70.

44

[25] R. Tilson, J. Dong, S. Martin, E. Kieke, Factors and principles aﬀecting the us-
ability of four e-commerce sites, in: Proceedings of the 4th Conference on Human
Factors & the Web, Basking Ridge, New Jersey. Retrieved July, volume 3, p. 2005.

[26] G. Karjoth, B. Pﬁtzmann, M. Schunter, M. Waidner, Service-oriented assurance

comprehensive security by explicit assurances, Proc. of QoP 5 (2005).

[27] R. K. Sakthivel, G. Nagasubramanian, F. Al-Turjman, M. Sankayya, Core-level cy-
bersecurity assurance using cloud-based adaptive machine learning techniques for
manufacturing industry, Transactions on Emerging Telecommunications Technolo-
gies (2020) e3947.

[28] S. H. Kim, C. S. Leem, A case study in applying common criteria to development
process to improve security of software products, in: International Conference on
Computational Science and Its Applications, Springer, pp. 1069–1077.

[29] D. Mellado, E. Fern´andez-Medina, M. Piattini, A common criteria based security
requirements engineering process for the development of secure information systems,
Computer standards & interfaces 29 (2007) 244–253.

[30] A. Ekclhart, S. Fenz, G. Goluch, E. Weippl, Ontological mapping of common crite-
ria’s security assurance requirements, in: IFIP International Information Security
Conference, Springer, pp. 85–95.

[31] K.-s. Kou, G.-s. Lee, Modeling and analysis of cc-based security assurance for
composed systems, in: 2008 Second International Conference on Future Generation
Communication and Networking, volume 2, IEEE, pp. 106–111.

[32] S. H. Houmb, S. Islam, E. Knauss, J. J¨urjens, K. Schneider, Eliciting security re-
quirements and tracing them to design: an integration of common criteria, heuris-
tics, and umlsec, Requirements Engineering 15 (2010) 63–93.

[33] K. Taguchi, N. Yoshioka, T. Tobita, H. Kaneko, Aligning security requirements
and security assurance using the common criteria,
in: 2010 Fourth International
Conference on Secure Software Integration and Reliability Improvement, IEEE, pp.
69–77.

[34] H. Kim, A framework for security assurance in component based development, in:
International Conference on Computational Science and Its Applications, Springer,
pp. 587–596.

[35] T.-h. Kim, S.-y. Lee, Security evaluation targets for enhancement of it systems
in: International Conference on Computational Science and Its Appli-

assurance,
cations, Springer, pp. 491–498.

[36] N. Pham, M. Riguidel, Security assurance aggregation for it infrastructures,

in:
2007 Second International Conference on Systems and Networks Communications
(ICSNC 2007), IEEE, pp. 72–72.

[37] S. Haddad, S. Dubus, A. Hecker, T. Kanstr´en, B. Marquet, R. Savola, Operational
security assurance evaluation in open infrastructures,
in: 2011 6th International
Conference on Risks and Security of Internet and Systems (CRiSIS), IEEE, pp.
1–6.

45

[38] M. Ouedraogo, D. Khadraoui, H. Mouratidis, E. Dubois, Appraisal and reporting
of security assurance at operational systems level, Journal of Systems and Software
85 (2012) 193–208.

[39] N. Pham, L. Baud, P. Bellot, M. Riguidel, A near real-time system for security
in: 2008 The Third International Conference on Internet

assurance assessment,
Monitoring and Protection, IEEE, pp. 152–160.

[40] E. Deveci, M. U. Caglayan, Model driven security framework for software design
and veriﬁcation, Security and Communication Networks 8 (2015) 2768–2792.

[41] H. L¨ohr, A.-R. Sadeghi, C. St¨uble, M. Weber, M. Winandy, Modeling trusted
computing support in a protection proﬁle for high assurance security kernels,
in:
International Conference on Trusted Computing, Springer, pp. 45–62.

[42] R. M. Savola, Software security assurance of telecommunication systems, in: 2009
International Conference on Multimedia Computing and Systems, IEEE, pp. 138–
143.

[43] I. Rauf, E. Troubitsyna, Towards a model-driven security assurance of open source
International Workshop on Software Engineering for Resilient

components,
in:
Systems, Springer, pp. 65–80.

[44] A. Hovsepyan, R. Scandariato, W. Joosen, Is newer always better? the case of vul-
nerability prediction models, in: Proceedings of the 10th ACM/IEEE International
Symposium on Empirical Software Engineering and Measurement, pp. 1–6.

[45] R. A. Khan, S. U. Khan, A preliminary structure of software security assurance
in: Proceedings of the 13th International Conference on Global Software

model,
Engineering, pp. 137–140.

[46] J. L. Vivas, I. Agudo, J. L´opez, A methodology for security assurance-driven system

development, Requirements Engineering 16 (2011) 55–73.

[47] J. A. Pavlich-Mariscal, S. A. Demurjian, L. D. Michel, A framework for security
assurance of access control enforcement code, computers & security 29 (2010) 770–
784.

[48] A. Bousquet, J. Briﬀaut, E. Caron, E. M. Dominguez, J. Franco, A. Lefray,
O. L´opez, S. Ros, J. Rouzaud-Cornabas, C. Toinard, et al., Enforcing security
and assurance properties in cloud environment, in: 2015 IEEE/ACM 8th Interna-
tional Conference on Utility and Cloud Computing (UCC), IEEE, pp. 271–280.

[49] J. Modic, R. Trapero, A. Taha, J. Luna, M. Stopar, N. Suri, Novel eﬃcient tech-
niques for real-time cloud security assessment, Computers & Security 62 (2016)
1–18.

[50] E. Rios, E. Iturbe, W. Mallouli, M. Rak, Dynamic security assurance in multi-
cloud devops, in: 2017 IEEE Conference on Communications and Network Security
(CNS), IEEE, pp. 467–475.

46

[51] S. Formoso, M. Felici, Evidence-based security and privacy assurance in cloud
ecosystems, in: IFIP International Summer School on Privacy and Identity Man-
agement, Springer, pp. 205–219.

[52] L. Bobelin, A. Bousquet, J. Briﬀaut, An autonomic cloud management system for
enforcing security and assurance properties, in: Proceedings of the 2015 Workshop
on Changing Landscapes in HPC Security, pp. 1–8.

[53] U. M. Ismail, S. Islam, A uniﬁed framework for cloud security transparency and

audit, Journal of Information Security and Applications 54 (2020) 102594.

[54] I. Tashi, S. Ghernaouti-H´elie, A security assurance model to holistically assess the
information security posture, in: Complex Intelligent Systems and Their Applica-
tions, Springer, 2010, pp. 83–108.

[55] A. Hudic, P. Smith, E. R. Weippl, Security assurance assessment methodology for

hybrid clouds, Computers & Security 70 (2017) 723–743.

[56] G.-B. Jeong, G.-B. Kim, A framework for security assurance in component based
development, in: International Conference on Computational Science and Its Ap-
plications, Springer, pp. 42–51.

[57] R. Z. Naeem, H. Abbas, N. Shafqat, K. Saleem, W. Iqbal, A framework to determine

applications’ authenticity, Procedia Computer Science 155 (2019) 268–275.

[58] W. A. Al-Hamdani, Non risk assessment information security assurance model, in:
2009 Information Security Curriculum Development Conference, pp. 84–90.

[59] R. M. Savola, H. Pentik¨ainen, M. Ouedraogo, Towards security eﬀectiveness mea-
surement utilizing risk-based security assurance, in: 2010 Information Security for
South Africa, IEEE, pp. 1–8.

[60] V. Sklyar, V. Kharchenko, Challenges in assurance case application for industrial
iot, in: 2017 9th IEEE International Conference on Intelligent Data Acquisition and
Advanced Computing Systems: Technology and Applications (IDAACS), volume 2,
IEEE, pp. 736–739.

[61] A. Agrawal, M. Alenezi, S. A. Khan, R. Kumar, R. A. Khan, Multi-level fuzzy
system for usable-security assessment, Journal of King Saud University-Computer
and Information Sciences (2019).

[62] J. Guti´errez-Mart´ınez, M. A. N´u˜nez-Gaona, H. Aguirre-Meneses, Business model
for the security of a large-scale pacs, compliance with iso/27002: 2013 standard,
Journal of digital imaging 28 (2015) 481–491.

[63] M. Debbabi, M. Saleh, C. Talhi, S. Zhioua, Embedded Java security: security for

mobile devices, Springer Science & Business Media, 2007.

[64] E. D. Knapp, J. T. Langill, Industrial Network Security: Securing critical infras-
tructure networks for smart grid, SCADA, and other Industrial Control Systems,
Syngress, 2014.

47

[65] M. Chapple, J. M. Stewart, D. Gibson, (ISC) 2 CISSP Certiﬁed Information Sys-

tems Security Professional Oﬃcial Study Guide, John Wiley & Sons, 2018.

[66] R. Darimont, E. Delor, P. Massonet, A. van Lamsweerde, Grail/kaos: an envi-
in: Proceedings of the 19th

ronment for goal-driven requirements engineering,
international conference on Software engineering, pp. 612–613.

[67] H. Mouratidis, P. Giorgini, Secure tropos: a security-oriented extension of the
tropos methodology, International Journal of Software Engineering and Knowledge
Engineering 17 (2007) 285–309.

[68] T. Kanstr´en, R. Savola, A. Evesti, H. Pentik¨ainen, A. Hecker, M. Ouedraogo,
K. H¨at¨onen, P. Halonen, C. Blad, O. L´opez, et al., Towards an abstraction layer
for security assurance measurements,
in: Proceedings of the Fourth European
Conference on Software Architecture: Companion Volume, pp. 189–196.

[69] M. M. Swanson, N. Bartol, J. Sabato, J. Hash, L. Graﬀo, Security metrics guide

for information technology systems, Technical Report, 2003.

[70] R. M. Savola, P. Heinonen, A visualization and modeling tool for security metrics
in: 2011 Information Security for South Africa,

and measurements management,
IEEE, pp. 1–8.

[71] M. Ouedraogo, H. Mouratidis, D. Khadraoui, E. Dubois, A risk based approach
for security assurance evaluation of it systems, in: 2009 Seventh Annual Commu-
nication Networks and Services Research Conference, IEEE, pp. 428–430.

[72] M. Ouedraogo, H. Mouratidis, A. Hecker, C. Bonhomme, D. Khadraoui, E. Dubois,
D. Preston, A new approach to evaluating security assurance,
in: 2011 7th In-
ternational Conference on Information Assurance and Security (IAS), IEEE, pp.
215–221.

[73] M. Ouedraogo, R. M. Savola, H. Mouratidis, D. Preston, D. Khadraoui, E. Dubois,
Taxonomy of quality metrics for assessing assurance of security correctness, Soft-
ware Quality Journal 21 (2013) 67–97.

[74] T. Kanstr´en, A. Evesti, Security metrics, secure elements, and operational mea-
surement trust in cloud environments, in: International Workshop on Security and
Trust Management, Springer, pp. 37–51.

[75] S. Rizvi, J. Ryoo, J. Kissell, W. Aiken, Y. Liu, A security evaluation framework
for cloud security auditing, The Journal of Supercomputing 74 (2018) 5774–5796.

[76] B. Marquet, S. Dubus, C. Blad, Security assurance proﬁle for large and hetero-
geneous telecom and it infrastructures, in: Proceedings of the International Sym-
posium on Risk Management and Cyber-Informatics (RMCI’10), Orlando, Florida,
USA, 2010.

[77] H.-H. Bock, J. Braband, B. Milius, H. Sch¨abe, Towards an it security protection
in: International

proﬁle for safety-related communication in railway automation,
Conference on Computer Safety, Reliability, and Security, Springer, pp. 137–148.

48

[78] G. Tanna, M. Gupta, H. R. Rao, S. Upadhyaya,

Information assurance metric
development framework for electronic bill presentment and payment systems using
transaction and workﬂow analysis, Decision Support Systems 41 (2005) 242–261.

[79] A. Ray, R. Cleaveland, Security assurance cases for medical cyber–physical systems,

IEEE Design & Test 32 (2015) 56–65.

[80] R. Gupta, S. K. Pal, S. K. Muttoo, Cyber security assessment education for e-
in: Innovations in Cybersecurity Education, Springer, 2020,

governance systems,
pp. 181–212.

[81] S. Jaiswal, D. Gupta, Engineering and validating security to make cloud secure,
International Journal of System Assurance Engineering and Management 8 (2017)
1419–1441.

[82] S. W. Cadzow, Securitv assurance and standards-design for evaluation, in: The 2nd
IEE Secure Mobile Communications Forum: Exploring the Technical Challenges in
Secure GSM and WLAN, 2004.(Ref. No. 2004/10660), IET, pp. 8–1.

[83] D. S. Yavagal, S. W. Lee, G.-J. Ahn, R. A. Gandhi, Common criteria requirements
modeling and its uses for quality of information assurance (qoia), in: Proceedings
of the 43rd annual Southeast regional conference-Volume 2, pp. 130–135.

[84] A. Baldwin, Y. Beres, S. Shiu, P. Kearney, A model-based approach to trust,

security and assurance, BT Technology Journal 24 (2006) 53–68.

[85] X.-H. Wu, J.-P. Li, W. Yao, A network security evaluation model based on com-
in: 2008 International Conference on Apperceiving Computing and

mon criteria,
Intelligence Analysis, IEEE, pp. 416–420.

[86] L. Xiang, The analysis and construction e-government information security assur-
ance system, in: 2010 Second International Conference on Communication Systems,
Networks and Applications.

[87] Y. Lan, T. Han, Sadp: Security assurance development process for building re-
in: 2015 IEEE International Conference on

liable linux-based operating system,
Computer and Communications (ICCC), IEEE, pp. 50–55.

[88] A. Bialas, M. Michalak, B. Flisiuk, Anomaly detection in network traﬃc security
in: International Conference on Dependability and Complex Systems,

assurance,
Springer, pp. 46–56.

[89] V. Diamantopoulou, C. Kalloniatis, C. Lyvas, K. Maliatsos, M. Gay, A. Kanatas,
C. Lambrinoudakis, Aligning the concepts of risk, security and privacy towards
the design of secure intelligent transport systems, in: Computer Security, Springer,
2020, pp. 170–184.

[90] X. Cuihua, L. Jiajun, An object-oriented information system security evaluation
method based on security level distinguishing model, in: 2009 International Con-
ference on Web Information Systems and Mining, IEEE, pp. 497–500.

49

[91] H.-K. Kim, T.-H. Kim, J.-s. Kim, Reliability assurance in development process for
toe on the common criteria, in: International Conference on Software Engineering
Research and Applications, Springer, pp. 364–375.

[92] M. Maidl, D. Von Oheimb, P. Hartmann, R. Robinson, Formal security analysis of
electronic software distribution systems, in: International Conference on Computer
Safety, Reliability, and Security, Springer, pp. 415–428.

[93] N. Hubballi, A. K. Patel, A. K. Meena, N. Tripathi, Cloud security service level
agreements: Representation and measurement,
in: IEEE INFOCOM 2019-IEEE
Conference on Computer Communications Workshops (INFOCOM WKSHPS),
IEEE, pp. 145–150.

[94] I. Drago, M. Mellia, M. M. Munafo, A. Sperotto, R. Sadre, A. Pras, Inside dropbox:
understanding personal cloud storage services, in: Proceedings of the 2012 Internet
Measurement Conference, pp. 481–494.

[95] J. Akram, P. Luo, Sqvdt: A scalable quantitative vulnerability detection technique
for source code security assessment, Software: Practice and Experience 51 (2021)
294–318.

[96] A. M. Dissanayaka, S. Mengel, L. Gittner, H. Khan, Security assurance of mongodb
in singularity lxcs: an elastic and convenient testbed using linux containers to
explore vulnerabilities, Cluster Computing 23 (2020) 1955–1971.

[97] Z. Bilgin, M. A. Ersoy, E. U. Soykan, E. Tomur, P. C¸ omak, L. Kara¸cay, Vulnera-
bility prediction from source code using machine learning, IEEE Access 8 (2020)
150672–150684.

[98] M. Cheah, S. A. Shaikh, J. Bryans, P. Wooderson, Building an automotive security
assurance case using systematic security evaluations, Computers & Security 77
(2018) 360–379.

[99] Y.-W. Huang, C.-H. Tsai, T.-P. Lin, S.-K. Huang, D. Lee, S.-Y. Kuo, A testing
framework for web application security assessment, Computer Networks 48 (2005)
739–761.

[100] P. Krishnan, S. Hafner, A. Zeiser, Applying security assurance techniques to a
mobile phone application: An initial approach, in: 2011 IEEE Fourth International
Conference on Software Testing, Veriﬁcation and Validation Workshops, IEEE, pp.
545–552.

[101] W. Knowles, J. M. Such, A. Gouglidis, G. Misra, A. Rashid, Assurance techniques
in: Proceedings of the First ACM Workshop

for industrial control systems (ics),
on Cyber-Physical Systems-Security and/or PrivaCy, pp. 101–112.

[102] S. Jahan, I. Riley, C. Walter, R. F. Gamble, M. Pasco, P. K. McKinley, B. H.
Cheng, Mape-k/mape-sac: An interaction framework for adaptive systems with
security assurance cases, Future Generation Computer Systems 109 (2020) 197–
209.

50

[103] R. Trapero, J. Modic, M. Stopar, A. Taha, N. Suri, A novel approach to manage
cloud security sla incidents, Future Generation Computer Systems 72 (2017) 193–
205.

[104] M. Beynon, B. Curry, P. Morgan, The dempster–shafer theory of evidence: an
alternative approach to multicriteria decision modelling, Omega 28 (2000) 37–50.

[105] I. Somarakis, M. Smyrlis, K. Fysarakis, G. Spanoudakis, Model-driven cyber range
training: a cyber security assurance perspective, in: Computer Security, Springer,
2019, pp. 172–184.

[106] Y.-l. Liu, Z.-g. Jin, Saew: A security assessment and enhancement system of
wireless local area networks (wlans), Wireless Personal Communications 82 (2015)
1–19.

[107] L. O. Nweke, P. Yeng, S. Wolthusen, B. Yang, Understanding attribute-based ac-
cess control for modelling and analysing healthcare professionals’ security practices
(2020).

[108] P. T. Devanbu, S. Stubblebine, Software engineering for security: a roadmap, in:
Proceedings of the Conference on the Future of Software Engineering, pp. 227–239.

[109] D. T. Le, Quality trade-oﬀs in self-protecting system, in: 2015 IEEE International
Conference on Self-Adaptive and Self-Organizing Systems Workshops, IEEE, pp.
152–156.

[110] D. S. Herrmann, Using the Common Criteria for IT security evaluation, CRC Press,

2002.

51

A. Keywords for Data Extraction and their Deﬁnitions

1. Challenges and Gap

2. Contribution

3. Process: It is the series of action or steps taken in order to develop security assurance

framework/evaluate the security assurance.

4. Methods: Which methods or techniques used for security assurance evaluation for

example mathematical methods/Fuzzy Techniques/Data Driven Approach.

5. Guidelines/Standards: Any standards/guidelines used to deﬁne the security goals/security

requirement/security metrics/assurance measurement, for example ISA/IEC 6151,
ISA/IEC 62443, NIST 800-82 R2, ISA-TR84.00.09

6. Tools: Is there any tools which are developed or used for testing/scanning/security
assurance measurement, for example: OWASP Zed Attack Proxy (ZAP), Web-
Scarab, OpenVAS.

7. Metrics: Security metrics are used to diagnose issues, identify weak links in the ex-
isting security posture, facilitate benchmark comparisons, and derive performance
improvement. Security metrics derived from the security objectives. In this SLR,
Security Metrics are the metrics that have been considered in security assurance
framework, identifying threats, security requirement and risk assessment for exam-
ple: Conﬁdentiality, Integrity, Availability, Exploitability, Vulnerability, Host Veri-
ﬁcation, Guest Veriﬁcation, Reliability, authentication, authorization, etc. Some of
papers may deﬁne other security metrics based on their security goals.

Note: If the metrics are not mentioned in the general framework of the security
assurance then metrics mentioned in the test cases/examples/illustration will be
considered in the data sheet and the application domain will also be mentioned
accordingly. In case of the more than one application domain, all the application
domain and respective security metrics will be mentioned.

8. Evaluation/Techniques: Whether it is qualitative or quantitative?

9. Automation: Whether the vulnerability detection/countermeasures/ testing process

or security assurance process are automated/semiautomated or manual?

10. Application domain

11. Limitations and direction

12. Number of citations

52

