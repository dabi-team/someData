Authentication of Everything in the Internet of
Things: Learning and Environmental Effects

Yaman Sharaf Dabbagh and Walid Saad
Wireless@VT, Bradley Department of Electrical and Computer Engineering, Virginia Tech, VA, USA
Email: {yamans, walids}@vt.edu

1

8
1
0
2

r
p
A
4
2

]

R
C
.
s
c
[

1
v
9
6
9
0
0
.
5
0
8
1
:
v
i
X
r
a

Abstract—Reaping the beneﬁts of the Internet of things (IoT)
system is contingent upon developing IoT-speciﬁc security so-
lutions. Conventional security and authentication solutions often
fail to meet IoT security requirements due to the computationally
limited and portable nature of IoT objects. In this paper, an IoT
objects authentication framework is proposed. The framework
uses device-speciﬁc information, called ﬁngerprints, along with
a transfer learning tool to authenticate objects in the IoT.
The framework tracks the effect of changes in the physical
environment on ﬁngerprints and uses unique IoT environmental
effects features to detect both cyber and cyber-physical emulation
attacks. The proposed environmental effects estimation frame-
work is proven to improve the detection rate of attackers without
increasing the false positives rate. The proposed framework is
also shown to be able to detect cyber-physical attackers that are
capable of replicating the ﬁngerprints of target objects which
conventional methods are unable to detect. A transfer learning
approach is proposed to allow the use of objects with different
types and features in the environmental effects estimation process
to enhance the performance of the framework while capturing
practical IoT deployments with diverse object types.. Simulation
results using real IoT device data show that
the proposed
approach can yield a 40% improvement in cyber emulation
attacks detection and is able to detect cyber-physical emulation
attacks that conventional methods cannot detect. The results also
show that the proposed framework improves the authentication
accuracy while the transfer learning approach yields up to 70%
additional performance gains.

Index Terms—Internet of Things; Authentication; Security;

Transfer Learning

I. INTRODUCTION

things (IoT)

T HE Internet of

is a rapidly emerging
paradigm in which physical objects integrate with the
cyber world via smart sensors, RFID tags, smartphones, and
wearable devices [1]. This integration allows physical objects
to operate over the Internet so as to collect and exchange data
that describe the physical world. The wide variety of cyber-
enabled objects remotely operating through various types of
networks and protocols raises many serious security and pri-
vacy concerns [2]. Security threats range from physical attacks
to attacks on the semantic application layers where information
is processed and analyzed. One key challenge is that most IoT
objects operate at low energy levels with minimal computation
capabilities, and thus, require simple security solutions [3].
Therefore, most complex security techniques, such as conven-
tional cryptography, ﬁrewalls, and secure protocols cannot be
readily implemented in the IoT due to the strict memory and
computing requirements of its devices.

This research was supported by the U.S. National Science Foundation under

Grant CNS-1524634.”

Prior research on IoT security has primarily focused on
two main tracks: creating lightweight security methods [4]–
[9] and building secure IoT architectures [10], [11]. Efﬁcient
authentication of objects in IoT systems is a challenge due to
the low computing capabilities of IoT objects. The authors
in [4] proposed an authentication scheme that uses a key
change method in order to improve the security of IoT objects
while using shorter and less complicated security keys. The
authors in [5] focused on anonymous entity authentication
and proposed a lightweight scheme for IoT systems. Their
proposed scheme used a dynamic accumulator for credentials
that solves the issue of credentials update which requires
computational power from IoT objects. As for building se-
cured IoT architectures, the authors in [10] proposed a secure
communication architecture speciﬁcally designed for cloud-
connected IoT objects. Their proposed architecture includes
an end-to-end secure communication between low power IoT
objects and cloud back-ends. The authors in [11] proposed
another architecture to secure IoT objects that ofﬂoads the
computations needed for authentication to the cloud in order
the
to reduce the overhead on IoT objects. However, all
previous approaches and architectures impose high computa-
tional requirements on IoT objects for handling cryptographic
keys and credentials exchange which some basic IoT objects
are not able to process. One promising approach to protect
wireless devices with minimal to no computational load on
IoT objects is by analyzing IoT signals. This approach has two
main types, signal watermarking and device ﬁngerprinting.
In signal watermarking, a predeﬁned signal is watermarked
into IoT object signals. In [6],
the authors presented an
approach for dynamic watermarking of IoT signals using deep
learning. Meanwhile, device ﬁngerprinting is a technique to
authenticate devices using unique features extracted from the
objects transmitted signals. Such ﬁngerprinting can be done
with minimal computational overhead. The authors in [7], used
an object’s RF-emissions as ﬁngerprints to authenticate ZigBee
devices. As for mobile devices ﬁngerprinting, there exist many
other features other than the RF-emissions to ﬁngerprint. The
authors in [8] used features such as accelerometer calibration
error and microphone distortion as ﬁngerprints to identify
mobile devices. Device ﬁngerprinting is not necessarily im-
plemented on features extracted from the device/object. For
example in [9], network trafﬁc features, such as packet inter-
arrival time, and delays between successive packets are used
as features to identify devices/objects in a network of devices.
These existing device ﬁngerprinting techniques face three
main limitations. First, ﬁngerprinting features are assumed

 
 
 
 
 
 
to be the same across all devices in the system, such as
in [7]–[9]. This assumption is not practical because an IoT
system consists of a wide variety of object types with differ-
ent features. Second, in techniques such as [7], devices are
required to be connected directly to a central sensing node
that extracts ﬁngerprinting features. These sensing nodes are
assumed to be resistant to attacks and device ﬁngerprinting
algorithms are not applied on these sensing nodes. Third,
existing device ﬁngerprinting techniques such as [12] assume
ﬁngerprints are ﬁxed and do not change over time. However, in
an IoT environment, ﬁngerprints of objects change with time
due to multiple factors, such as changes in the surrounding
environment, aging of objects, and noise, as shown in [13].
To the best of our knowledge, these changes in ﬁngerprints
have not been exploited as a feature to authenticate objects in
IoT systems. Therefore, a direct implementation of existing
ﬁngerprinting techniques, such as [7]–[9], in practical IoT
systems is not feasible.

The main contribution of this paper is a novel IoT object
authentication framework that can distinguish between signals
from legitimate IoT objects and signals from malicious objects.
The proposed framework exploits the effects of the environ-
ment surrounding IoT objects to build a model for the expected
environmental effects on each object in the IoT system. This
model is used to distinguish remote attackers such as cyber
emulation attackers. The environment model is able to detect
highly intelligent attackers capable of replicating the exact
ﬁngerprints of IoT objects, we refer to this type of attacks
as cyber-physical emulation attacks. The proposed framework
tracks the changes in ﬁngerprints for all IoT objects and
utilizes the similarities in these changes to extract a model for
the environment. Using the estimated environmental effects,
emulation attackers that replicate IoT objects in a remote
location will not be able to replicate all of the changes in the
environment hence allowing our approach to effectively detect
them. The novel environmental estimation in our framework
enhances the authentication of legitimate objects as well which
yields to high detection rate for cyber emulation attacks with-
out increasing the false positives of misclassiﬁed legitimate
objects. Additionally, our framework uses transfer learning
to estimate the environment from objects of different types
or objects with different feature spaces. The ability to use
objects of different feature spaces is important in real IoT
systems with wide diversity of objects. To our knowledge, this
work is the ﬁrst to exploit the changes in environmental effects
on IoT object ﬁngerprints. Simulation results using real IoT
device data show that our proposed framework enhances the
detection rate of cyber emulation attacks. Moreover, the results
show that conventional methods of device ﬁngerprinting are
unable to detect cyber-physical emulation attackers while our
proposed framework were able to detect these type of attacks.
The results shows an improvement of 40% in cyber emulation
attacks detection. The transfer learning results shows an im-
provement of 70% when our framework uses different types
of objects compared to using our framework only on objects
with the exact same feature space.

The rest of this paper is organized as follows. Section II
presents the system model and the proposed framework.

2

Fig. 1: Illustrative example of the considered IoT system consisting
of three tiers: objects tier, monitoring devices tier, and cloud tier.
The ﬁrst tier in the example is showing three types of objects: smart
phones, sensors, and home appliances, along with three possible
setups for the monitoring devices.

Section III describes the proposed environmental estimation
the transfer learning
approach. In Section IV, we present
approach. Simulation results and evaluation are presented in
Section V while conclusions are drawn in Section VI.

II. SYSTEM MODEL AND PROPOSED FRAMEWORK

Consider an IoT system consisting of N heterogeneous
objects x1, x2, . . . , xN as shown in Fig. 1. These objects can
represent any type of IoT devices such as sensors, smart-
phones, home appliances, or RFID tags [14]. Each object
transmits data to a gateway router through a wired or wireless
link, such as 802.11 or Zigbee. The gateway aggregates the
data transmitted from the IoT objects and forwards it to the
cloud where a security service provider (SP) has access to
the transmitted data. Security SP is a client on the cloud
that generates and enforces network access for connected IoT
objects. The SP authenticates the transmitted data from IoT ob-
jects based on device-speciﬁc information, called ﬁngerprints,
that uniquely identiﬁes each object in the IoT system. For
example, wavelet-based features such as mean, variance, and
skewness of electronic codes are possible ﬁngerprints for RFID
tags [13]. Such wavelet-based features of the electronic codes
of RFID are unique for each RFID tag even if the tags are
made by the same factory with the same speciﬁcations due to
hardware impairments during the manufacturing process [15].
In this system, an adversary attempts to impersonate a
legitimate IoT object to inject tampered information into the
IoT system. We consider two classes of adversaries: First,
adversaries capable of emulating the software of a legitimate
IoT object, which includes emulating security keys, device
addresses, and transmitted data type. However this type of
adversaries is not able to replicate the hardware features of a
legitimate IoT object. Hereinafter, we will refer to this class
of attacks as cyber emulation attack. The second class of
adversaries are capable of emulating both the software and
hardware of a legitimate IoT object. This class of attackers is
assumed to be highly skilled and is able to replicate the ob-
ject’s software, such as object security keys and object network
address, and also clone the legitimate object’s device-speciﬁc
information such as transmission speed, signal strength, pro-

HomeappliancesSmartphonesSensorsx1x3x2x4x5x6x7x8x9Internet of Thingsa1a2Monitoringdevicesa3Tier3Tier2Tier1cessing speed, and operating temperature and humidity. We
will refer to this class of attacks as cyber-physical emulation
attack. These two kinds of attacks compromise the security of
the IoT system by replicating the signals and/or ﬁngerprints of
legitimate IoT objects; therefore, authenticating the received
objects ﬁngerprints based on features that attackers cannot
replicate is important to overcome emulation attacks. One
of the features that emulation attackers cannot replicate are
the environmental changes that pertain the environment that
surrounds IoT objects, such as changes in temperature, hu-
midity, wind, physical displacement, or any physical changes
affecting IoT objects. These environmental changes are time
dependent and are constantly changing which makes it difﬁcult
to replicate by a remote emulation attacker. In addition, cyber-
physical emulation attacks are difﬁcult and computationally
intensive, hence these kind of attacks cannot be updated on
the ﬂy to cope with the environmental changes even if the
attacker manages to consistently monitor a certain object [16].
To thwart such emulation attacks, we propose a framework
whose goal is to determine whether an IoT object is legitimate
or not by analyzing the hardware and software features of
objects, this can stop cyber attackers that cannot replicate the
hardware of IoT objects. Moreover, by analyzing the changes
in objects’ features over time due to environmental effects,
we can thwart cyber-physical attacks that can replicate the
hardware and software of IoT objects but cannot replicate the
exact environment surrounding the legitimate objects. The pro-
posed framework estimates the changes on the object-speciﬁc
information with time which are caused by environment effects
on IoT objects. Then, the framework compares these estimates
with the actual changes in the object-speciﬁc information
to determine whether the object is physically present in the
environment or located remotely by an adversary.

The proposed framework consists of ﬁve main components
as shown in Fig. 2: feature extraction, ﬁngerprint generation,
similarity measure, environment estimation, and transferring
knowledge. In order to estimate the environmental effects on
IoT object ﬁngerprints, ﬁrst we need to extract the features
from each IoT object and generate unique ﬁngerprints from
the extracted features. In the following subsection, we explain
in detail the process of feature extraction and generation, along
with the similarity measure used to compare ﬁngerprints.

A. Feature extraction

three different

IoT object features are collected at

tiers
as shown in Fig. 1. The ﬁrst tier of features is collected
at the object level. Each object in the IoT system sends a
set of features describing the operational status of the object
itself along with all sensor measurements available. Some
of the features that can be collected at the object level are
CPU load, clock skew, memory usage, and temperature of the
object and/or surroundings, among others [17]. The second
tier of feature collection is done at security monitoring objects.
These monitoring objects are distributed over the IoT to gather
features about other objects in the IoT system. Gateways are
examples of monitoring objects that capture trafﬁc properties
of other objects. Some of the features that the monitoring
objects can collect are signal strength, signal spectral features,

3

Fig. 2: The main components of the IoT environment estimation
framework

times. The monitoring objects are also
and packet arrival
considered IoT objects, hence they collect and send ﬁrst tier
features about themselves to the IoT cloud center as well. The
third tier of features is collected at the IoT server side by
measuring the trafﬁc properties of objects and frequency of
received packets.

B. Fingerprint generation

The information collected during the feature extraction
stage is general and not discriminant for successful object
authentication. Hence, we use statistical analysis to select
features that are unique for each object. Statistical analysis
requires capturing a decent amount of features from objects
to form a training dataset. The training dataset is used to ﬁnd
the subset of features that can uniquely identify each object
in the IoT system. This subset of discriminant features, called
ﬁngerprint, forms a vector deﬁned as:

f i,t

k = [δk,1, δk,2, δk,3, . . . , δk,m],

(1)

where f i,t
k is the ﬁngerprint vector for object i at time t, δk,j
is the scalar value of a feature j of the ﬁngerprint f i,t
k such as
the signal mean feature, and m is the total number of features
for object i.

C. Similarity measure

During a time interval t, each IoT object i generates n
ﬁngerprints f i,t
n . Hence, at a time interval t, the
collected ﬁngerprints of object i form an n × m matrix F i,t
given by:

2 , . . . , f i,t

1 , f i,t

F i,t = [f i,t

1 , f i,t

2 , . . . , f i,t

n ]T ,

F i,t =







δ1,1
δ2,1
. . .
δn,1

δ1,2
δ2,2
. . .
δn,2

δ1,3
δ2,3
. . .
δn,3

. . .
. . .
. . .
. . .







.

δ1,m
δ2,m
. . .
δn,m

(2)

(3)

The similarity measure block in Fig. 2 at each time interval
t measures the distance between the ﬁngerprint matrix F i,t
∗
F i for the same
for object i and a reference ﬁngerprint

∗
object i. The reference ﬁngerprint
F i is determined based
on previously collected training data. The labeled training
∗
F i consists
data used to determine the reference ﬁngerprints
of historical instances of ﬁngerprints for objects in the IoT
system. The longer the historical data available for training,
the easier it is to spot and remove trends in the data which
are due to environmental changes. The reference ﬁngerprints
are then chosen from the training dataset that best represent
each object in the IoT system. One of the distance measures to
compare two sets of ﬁngerprints is the Bhattacharyya distance
measure as follows:

∆i,t = DB(F i,t,

∗
F i),

(4)

where ∆i,t is the distance between the collected ﬁngerprint
∗
matrix F i,t and the reference ﬁngerprint
F i, DB is the
Bhattacharyya distance measure (BDM) [18]. Other distance
measures can be used instead of the BDM to measure ∆i,t.
However, the Bhattacharyya distance, unlike other measures
such as the KS-test, Hellinger distance, or KL-divergence,
can be applied to any type of distribution and can also be
applied to both univariate and multivariate distributions [19].
The authentication of any IoT object i is then modeled as a
binary hypothesis test:

4

can generate a “close enough” ﬁngerprint to the physical object
ﬁngerprint. For example, in [16] a software-deﬁned radio was
used to construct radiometric signatures to impersonate an
802.11b wireless device. Therefore, relying on the similarity
threshold τ alone to determine if ﬁngerprints are legitimate
or not is not enough, because it is possible to generate a
∗
malicious ﬁngerprint F m that satisﬁes DB(F m,
F i) ≤ τ
which results in considering the malicious ﬁngerprints as
legitimate ﬁngerprints. Additionally, reducing the value of the
similarity threshold τ to detect the “close enough” ﬁngerprints
generated by malicious users can lead to an increase in the
number of false positives since various noise sources affects
the ﬁngerprint generation and feature extraction processes.
Hence, an accurate generation of object ﬁngerprints is required
in order to reduce the value of the similarity threshold τ
without compromising the authentication accuracy, where the
optimal value for the similarity threshold τ is the one that
achieves the highest true positives and true negatives along
with the least false positives and false negatives during the
training period. The effect of choosing different values for the
similarity threshold τ will be evaluated in Section V. After
generating ﬁngerprints for each IoT objects and deﬁning a
similarity measure to compare between ﬁngerprints, we next
explain the process used to estimate the environmental effects
on objects from the generated ﬁngerprints.

(cid:40)

H0 : ∆i,t ≤ τ,
H1 : ∆i,t > τ,

(5)

III. ENVIRONMENT ESTIMATION

where τ is a similarity threshold. Therefore, if the difference
∗
between F i,t and
F i is less than τ , then hypothesis H0 is
claimed, and the collected ﬁngerprints are from the legitimate
object i. On the other hand, if the difference between F i,t
∗
F i is larger than τ , a potential attacker is detected and
and
H1 is applied. The Bhattacharyya distance used to measure the
∗
distance between the distributions F i,t and
F i can be written
as:

DB(F i,t,

∗
F i) = −ln

(cid:18)(cid:88)

(cid:113)

(cid:19)

∗
F i

.

F i,t,

(6)

∗
F i
For the special case where both distributions F i,t and
are Gaussian distributions, the Bhattacharyya distance can be
written as:

DB(F i,t,

∗
F i) =

1
8

)T Σ−1(µF i,t − µ ∗
(µF i,t−µ ∗
F i
F i
1
2

det Σ
(cid:113)det ΣF i,t det Σ ∗

ln

+

)

F i

,

(7)

are the means and covari-

, ΣF i,t and Σ ∗
F i

where µF i,t, µ ∗
F i
∗
ances for ﬁngerprints F i,t and
F i respectively, and Σ =
)/2. Hence, using the distance measure DB,
(ΣF i,t
the distance ∆i,t between the collected ﬁngerprint F i,t and
∗
F i determines whether the collected
the reference ﬁngerprint
ﬁngerprint F i,t belongs indeed to object i or not.

+ Σ ∗
F i

While generally it has been assumed that it is impossible to
accurately replicate an object’s physical ﬁngerprint, an attacker

During the feature extraction process, object ﬁngerprint
features are affected by multiple effects, such as signal inter-
ference, electromagnetic radiation, network trafﬁc, and noise.
While precisely estimating noise sources is usually not possi-
ble due to their random nature and undeﬁned spectrum, having
a shared noise source between more than one object can help
estimating the amount of shared noise. For example, objects
in close proximity to each other are affected by the same
environmental changes which affects the ﬁngerprint features
for these objects. For example, the authors in [13] showed
that water submersion and physical crumpling effects on RFID
tags impacted the RFID signal of neighboring tags. The
environmental effects on a given object’s ﬁngerprint features
can be represented as a transformation of ﬁngerprints T , and,
hence, the generated ﬁngerprint matrix F i,t for an object i
in (3) is:

ˆF i,t = T −1(F i,t),

(8)

where ˆF i,t is the estimated ﬁngerprint matrix without the
effect of environment and T −1 is the inverse of the trans-
formation T . The estimated ﬁngerprint matrix ˆF i,t is a more
accurate estimation of the ﬁngerprint matrix F i,t because
it excludes the effects of environment and is closer to the
∗
F i. The environmental effects on
reference ﬁngerprint matrix
objects are caused by many physical factors such as ambient
temperature, humidity, wind, and many other factors surround-
ing the objects. Most of these effects are non-linear which
makes the overall environmental effect on objects non-linear
and impossible to predict or estimate. However, non-linear
high-order estimation of the environmental effects suffers from

high variance which results in an overﬁtting transformation.
Meanwhile, linear estimations have low variance and high
bias which makes the estimation more generalized. here, our
goal is to ﬁnd an estimation of the environmental effects
that can impact multiple objects. Hence, a more generalized
estimation, such as a linear model, is more likely to capture the
common effect that impacts multiple objects at the same time
based on the bias-variance tradeoff. Therefore, we consider a
linear model to estimate the environmental effects on multiple
objects in our framework. This assumption reduces the risk
of overﬁtting to a single object by considering low-order
environmental effects. Consequently, the transformation T can
be deﬁned as a rotation and a translation:

F i,t = Ri,t ˆF i,t + li,t + w,

(9)

where Ri,tand li,t are the rotation and translation matrices
for object i at time t which transform the ﬁngerprint matrix
ˆF i,t to align it with the collected ﬁngerprint matrix F i,t, and
w is a noise which can be a combination of thermal, static,
solar, or other noise sources that are purely random and cannot
be estimated. Since the noise w cannot be estimated we will
ignore the noise during the estimation of the environmental
effects in this section.

To ﬁnd the transforms Ri,t and li,t

for object i, we
use the ﬁngerprint matrices of the objects surrounding the
object i to estimate the environment effect on object i. To
determine which objects are considered to be surrounding a
given object i, we use a network graph as shown in Fig. 3,
where nodes represent IoT objects and edges βk represent
the environment similarity between objects. The environment
similarity βk between a pair of objects represents the amount
of similarity between the environmental effects for each object.
The environment similarity βk defers from one pair of objects
to the other based on the physical location of objects, and the
type of objects, where objects of the same type and located
in a close proximity to each other have higher environment
similarity between them compared to objects located far apart
or objects of different types. The network graph is generated
during the training stage by measuring the similarity between
environmental effects on objects. For example, to estimate the
environmental effects on object i shown in Fig. 3, we extract
from the full IoT system graph shown in Fig. 3(a) a subgraph
G of all of the objects having direct environmental similarity
with object i shown in Fig. 3. We refer to these objects as
neighbors of object i. Hence, from (9) the ﬁngerprints for
each neighboring object can be given by:
F k,t = Rk,t ˆF k,t + lk,t;

∀k ∈ G \ {i},

(10)

where G \ {i} is the set of objects in the subgraph shown in
Fig. 3(b) except the object i, i.e., the set of all the neighbors
of object i.

In order to ﬁnd the environment effects on object i we
assume that the ﬁngerprints received from the neighboring
objects are mostly from legitimate objects. This assumption is
justiﬁed in an IoT setting due to the following reasons. First,
the number of objects in the IoT is large which makes it hard
for an adversary to attack a signiﬁcant number of objects at the
same time. Second, the attacker does not know which objects

5

Fig. 3:
(a) The network graph of the whole IoT system (b)
The graph of the objects having direct environment similarity
with object i, where βk is the amount of similarity

are considered by the authentication mechanism as neighbors
to a speciﬁc object in order to focus its attack resources on the
neighboring objects. The reason attackers cannot determine the
neighbors of a certain object is due to the nature of the process
used to select the neighbors for each object in the IoT system.
The neighbors of a target object are determined by analyzing
the historical data of all the objects within a certain distance
from the target object and ﬁnding all the objects that share
similar behaviors regardless of their type or exact distance
from the target object. This process to choose neighbors is
impossible for the attacker to replicate since it requires having
access to all the historical data from all the objects in the
IoT and also requires knowing the parameters used by the
framework behavior analysis. Third, since the network graph
is highly connected, even if the attacker manages to attack
all of the neighboring objects of a target object in order to
cause a wrong environment estimation at the target object,
the attack on the neighboring objects will be detected during
the estimation process of other target objects in the network.
For example, if a target object has ﬁve neighboring objects
all controlled by a single attacker which allows the attacker
to trigger wrong environment estimations at the target object.
However, each one of the ﬁve neighboring objects will also
be participating as a neighbor in the estimation process of
other target objects. These other target objects have legitimate
objects as neighbors besides the attacked objects which will
help to reveal those attacked objects. Therefore, based on
the previous discussions, the ﬁngerprints of each neighboring
object k can be given by:
∗
F k + lk,t;

∀k ∈ G \ {i},

F k,t = Rk,t

(11)

∗
F k is the reference ﬁngerprint for the neighboring ob-
where
jects. There are many ways to ﬁnd the value of the transforms
Rk,t and lk,t given the the ﬁngerprint matrices F k,t and the
∗
F k of any object k ∈ G \ {i}.
reference ﬁngerprint matrices
One such approach is the singular value decomposition (SVD)
as follows:

[U k,t, Sk,t, V k,t] = g





n
(cid:88)

(f k,t

j − c

j=1

)(

F k,t

∗k,t
f j − c ∗
F k



)


∀k ∈ G \ {i},

(12)

where g(·) is deﬁned as the SVD function, U k,t, Sk,t and V k,t
are the factorization matrices, c
is the mean or centroid of

F k,t

ikβk+1(a)(b)k+1k+2k+3...k+gβkβk+2βk+3βk+gthe ﬁngerprint matrix F k,t, and c ∗
F k

is the mean or centroid of

∗
F k. Hence, the rotation Rk,t is derived

the ﬁngerprint matrix
from the factorization matrices as follows:
Rk,t = V k,t U (cid:62)

k,t;

∀k ∈ G \ {i}.

(13)

Meanwhile, the translation lk,t is derived as:

lk,t = −Rk,t c

+ c ∗

F k

;

F k,t

∀k ∈ G \ {i},

(14)

The next step is to combine the rotation and translation
the neighboring objects (i.e. Rk,t and
matrices from all
lk,t; ∀k ∈ G \ {i}) into a rotation matrix Ri,t and a translation
matrix li,t that represent the environment effect on object i
given the fact that the environment effect on object i is the
same as the environment effect on the neighboring objects.
One of the simplest ways to combine the rotation and transla-
tion matrices into an estimated rotation matrix and translation
matrix is using the minimum mean square error (MMSE)
estimator that minimizes the square of the errors between the
estimator (Ri,t and li,t) and all the estimated neighboring
matrices (Rk,t and lk,t; ∀k ∈ G \ {i}). Hence, the MMSE
problem is:

(cid:88)

βk(Ri,t − Rk,t)2,

βk(li,t − lk,t)2,

argmin
Ri,t

k∈G\{i}
(cid:88)

argmin
li,t

k∈G\{i}

(15)

(16)

where βk is the amount of similarity between object i and
object k as shown in Fig. 3. By solving (15) and (16) for Ri,t
and li,t and substituting in (9) we get the estimated ﬁngerprint
matrix ˆF i,t as follows:

F i,t = Ri,t ˆF i,t + li,t,
ˆF i,t = R−1
i,t F i,t − R−1
Consequently, the distance between the estimated ﬁnger-

i,t li,t.

(17)

(18)

prints ˆF i,t and the reference ﬁngerprint matrix becomes:

6

in Section II and compare between the environment estimation
case and the no environment estimation case.
In the cyber emulation attack case,

the ﬁngerprints of
the malicious messages sent from the attacker represent the
attacker’s device ﬁngerprints F m,t. Therefore, using classical
device ﬁngerprinting techniques, the ﬁngerprint of the attacker
∗
F m,t is compared with the reference ﬁngerprint
F k for the
target object as in:

∆m,t = DB(F m,t,

∗
F i),

(22)

Based on the value of ∆m,t we differentiate between two
cases:

• ∆m,t ≤ τ : the attack is successful. Malicious messages
sent by the attacker are treated as messages sent from the
target object.

• ∆m,t > τ : the attack is not successful. Malicious mes-
sages sent by the attacker are different from the messages
sent from the target object and attack ﬂag is raised.
Conventional device ﬁngerprinting techniques choose large
values of the threshold τ to avoid false positives when the
environmental effects on legitimate objects are enough to make
∆i,t larger than the threshold τ as shown in [13]. However,
large values of τ increase the chance of a successful attack
since ∆m,t < τ for a successful attack. Thus, the estimation
of the expected environmental effects on legitimate objects
is essential to reduce the value of the threshold τ without
increasing the false positives. In the following theorem, we
derive a closed-form solution which proves that environment
estimation during object ﬁngerprinting in the IoT improves
detection rate without increasing the false positives rate. In
this theorem, we consider the distributions of the ﬁngerprints
to be Gaussian in order to use the closed-form expression of
the Bhattacharyya distance. However, in the evaluation section,
we show that the result will still hold for any distribution of
ﬁngerprints.

ˆ∆i,t = DB( ˆF i,t,

∗
F i),

Theorem 1. Environment estimation during object ﬁngerprint-
ing in the IoT improves detection rate without increasing the
false positives rate.

(19)

where ˆ∆i,t represents the estimated distance between the ob-
ject ﬁngerprints and the reference ﬁngerprints after removing
the effect of the environment. To avoid the matrix inversion
in (18), the environment effect can be applied to the reference

ﬁngerprint

∗
F i as follows:

∗∗
F i = Ri,t

∗
F i + li,t

(20)

∗∗
F i is the updated ﬁngerprint reference matrix for object
where
1 that includes the effect of environment. Thus, the ﬁngerprint
∗∗
matrix F i,t can be compared with
F i since both matrices
include the effect of the environment. The estimated distance
in this case will be as follows:

ˆ∆i,t = DB(F i,t,

∗∗
F i).

(21)

To show the advantage of removing the effect of envi-
ronment by using the estimated distance ˆ∆i,t instead of the
distance ∆i,t, we consider the two attack scenarios introduced

Proof. From the hypothesis in (5), the detection rate of attack-
ers can be represented as:

PD = P (cid:8)∆i,t > τ (cid:12)

(cid:12)H1

(cid:9).

(23)

When the environment effect on objects is not considered, the
detection threshold τ (cid:48) should satisfy the following condition:

τ (cid:48) ≥ DB(F i,t,

∗
F i).

(24)

This condition represents the best case scenario, which is when
the collected ﬁngerprints are generated from the legitimate
object. This condition is necessary to avoid false positives.
The collected ﬁngerprints from (18) can be represented as:
∗
F i + li,t + w,

F i,t = Ri,t

(25)

∗
F i is the reference ﬁngerprint, Ri,t and li,t are the
where
rotation and translation transformation which capture the effect
of the environment, and w is the noise. The threshold τ (cid:48) should

be larger than the effect of noise and the effect of environment
(Ri,t, li,t) on the legitimate object, hence τ (cid:48) is related to Ri,t
and li,t. The lower bound on the threshold τ (cid:48) is:

∗
F i)

τ (cid:48)
LB = DB(F i,t,
1
8

=

)T Σ−1(µF i,t − µ ∗
(µF i,t − µ ∗
F i
F i
1
2

det Σ
(cid:113)det ΣF i,t det Σ ∗

ln

+

)

,

F i

=

1
8
1
8
where µF i,t, µ ∗
F i

=

(c

(µF i,t − µ ∗
F i

)T Σ−1(µF i,t − µ ∗
F i

),

− c ∗
F i

F i,t

)T Σ−1(c

− c ∗
F i

),

F i,t

(26)

, ΣF i,t and Σ ∗
F i
variances for ﬁngerprints F i,t and
(ΣF i,t

+ Σ ∗
F i,t
F i
ﬁngerprint matrices F i,t and

)/2, and c

are the means and co-

∗
F i respectively, Σ =
are the centroids of

and c ∗
F i
∗
F i respectively, hence:

τ (cid:48)
LB =

=

1
8
1
8

(c ∗
F i

+ li,t + w − c ∗
F i

)T Σ−1(c ∗
F i

+ li,t + w − c ∗
F i

),

(li,t + w)T Σ−1(li,t + w).

(27)

Therefore, if the environment effect on objects li,t is high,
the detection threshold τ (cid:48) has to be increased to avoid false
positives. However, by estimating the environmental effects on
objects and adding these environmental effects to the reference
ﬁngerprint as in (21), the detection threshold becomes:

τ ≥ DB(F i,t,

(cid:16)

τ ≥ DB

(Ri,t

∗∗
F i),
∗
F i + li,t + w), (Ri,t

∗
F i + li,t)

(cid:17)

.

(28)

(29)

Similarly, when the received ﬁngerprints belong to the legiti-
mate source object, the lower bound on the threshold τ is:

∗∗
F i),

τLB = DB(F i,t,
1
8

(c ∗
F i

=

− li,t)T Σ−1

+ li,t + w − c ∗
F i
+ li,t + w − c ∗
F i

(c ∗
F i

=

1
8

wT Σ−1w < τ (cid:48)

LB.

− li,t),

(30)

Hence, the threshold lower bound τLB when the environment
effects are estimated is only related to noise w and is lower
than the threshold lower bound τ (cid:48)
LB when the environment ef-
fects are not estimated. Therefore, estimating the environment
allows us to pick a lower value for the threshold while keeping
the same false positives rate. The ability to pick lower values
for the threshold improves the detection rate since attackers
are required to replicate the exact ﬁngerprints of a legitimate
object and small changes compared with the legitimate objects
(cid:4)
will cause the estimation to be over the threshold.

In the cyber-physical emulation attack case, the attacker
can generate ﬁngerprints F m,t which are identical to the ﬁn-
gerprints generated from the attacked object. Classical device
ﬁngerprinting techniques, such as in [20], fail completely to

1
8

7

detect such type of attacks, since classical techniques rely only
∗
F i to compare it with ﬁngerprint
on the reference ﬁngerprint
F m,t. However, estimating the environment effect on objects
requires the attacker to replicate both the legitimate object
ﬁngerprint F i,t and the environment effect on the legitimate
object at each time interval t. Next, we show that classical
ﬁngerprinting techniques cannot detect any cyber-physical
emulation attackers while environmental estimation framework
can detect such an attack. Similar to Theorem 1, we consider
the distributions of the ﬁngerprints to be Gaussian in order to
use the closed-form expression of the Bhattacharyya distance.
However, in the evaluation section, we will see that the results
will hold for any distribution.

Theorem 2. Classical ﬁngerprinting techniques in the IoT
cannot detect any cyber-physical emulation attackers.

Proof. The detection rate of attackers as shown in (5) is:
PD = P (cid:8)∆f > τ (cid:12)

(cid:9).

(cid:12)H1

(31)

In replication attacks, the attacker generates ﬁngerprints F m,t
where:

F m,t = Rm,t

∗
F i + lm,t + w.

(32)

Without estimating the environmental effect,
successful when:

the attack is

DB(F m,t,

∗
F i) ≤ τ (cid:48).

(33)

Using the lower bound on the detection threshold τ (cid:48) in (27),
the condition for successful attack becomes as follows:

DB(F m,t,

∗
F i) ≤

1
8

(li,t + w)T Σ−1(li,t + w),

(c ∗
F i

+ lm,t+ w− c ∗
F i

1
8
(lm,t+ w)T Σ−1(lm,t+ w) ≤

) ≤

+ lm,t+ w− c ∗
F i

)T Σ−1(c ∗
F i
(li,t + w)T Σ−1(li,t + w),
1
8

(li,t + w)T Σ−1(li,t + w).
(34)

1
8

1
8

Hence, the attack is successful if the environment effect on
the attacker’s device lm,t is not signiﬁcantly larger than the
environment effect on the legitimate object li,t. On the other
hand, by estimating the environment effects on ﬁngerprints,
the attack is only successful when:

DB(F m,t,

∗∗
F i) ≤ τ,

(35)

where τ is smaller than τ (cid:48). By substituting the detection
threshold τ from (30), we have:
∗∗
F i) ≤

wT Σ−1w,

DB(F m,t,

(36)

1
8

1
8

(c ∗
F i

− li,t)T Σ−1
+ lm,t+ w−c ∗
F i

(c ∗
F i

+ lm,t+ w − c ∗
F i

− li,t) ≤

1
8

wT Σ−1w,
(37)

(lm,t+ w − li,t)T Σ−1(lm,t+ w − li,t) ≤

1
8

wT Σ−1w

(38)

is identical

In this case, unless the environment effect on the attacker’s
device lm,t
to the environment effect on the
legitimate object li,t the attack is not successful. Therefore, the
attacker is required to be physically in the same environment
as the legitimate object which makes remote cyber-physical
(cid:4)
emulation attacks detectable.

is located in a remote area. Additionally,

Therefore, by estimating the environment, our proposed
approach is able to determine whether an object is present in
the same environment as the surrounding objects or whether
the
the object
estimation process involves using historical data to determine
which objects are considered as surrounding objects in the
estimation process. Hence, attackers, such as cyber-physical
emulation attackers, are unable to replicate the environment
effects in their remote location which allows our approach to
detect such attacks.

Objects in the IoT system have different types of features
which requires our proposed approach to use a different feature
space for each type of objects. In the following section, we
introduce a transfer learning approach to allow our environ-
ment estimation to use objects of different types and objects
that have different feature spaces.

IV. TRANSFER LEARNING FOR ENVIRONMENT
ESTIMATION

Estimating the environmental effects using only similarity
measures requires all objects in the IoT system to have the
same feature space, i.e. all ﬁngerprints f i,t
x in the ﬁngerprint
matrix F i,t have the same number of features. The condition
to have the same feature space for all ﬁngerprints has many
disadvantages. First, the number of objects that share the same
environmental effects and have the same feature space can
often be relatively small which reduces the size of the training
data. Second, having fewer number of objects with the same
feature space decreases the estimation accuracy of the envi-
ronmental effects since estimation process involves MMSE
estimator. Third, attackers can compromise the estimation of
an object by attacking all the nearby objects that have the same
feature space, i.e. objects of the same type. Therefore, using
objects of different types in the estimation process enhances
the performance and increases the complexity and costs for
attackers to determine which objects are used in the estimation
process. One of the tools to combine multiple problems
with different feature spaces is called transfer learning [21].
Transfer learning is a tool to transfer knowledge gained while
solving one task to improve the learning of a different but
related task, where the primary task is referred to as target
task and the related task as source task.

In environmental effect estimation, we denote the ﬁnger-
prints of objects with the same feature space as target data
F k,t; ∀k ∈ DT and the objects with different feature space
but sharing the same environmental effects as source data
F s
k,t; ∀k ∈ DS , where DT is the set of target data and
DS is the set of source data. Additionally, we denote the
target task as to estimate the transformations Ri,t and li,t
for object i given the target data F k,t; ∀k ∈ DT . The transfer
learning procedure consists of two steps. In the ﬁrst step, using

8

the source ﬁngerprints F s
Section III we determine the transformation matrices Rs
ls
k,t similar to (13) and (14) where:

k,t and following the same steps in
k,t and

F s

k,t = Rs
k,t

∗
k + ls
F s

k,t;

∀k ∈ DS .

(39)

Additionally, using the target ﬁngerprints F k,t and using steps
in Section III, we get the transformation matrices Rk,t and
lk,t shown in (13) and (14). In the second step, we formulate
an optimization problem to combine the transformations from
the target data Rk,t and lk,t and the transformations from the
source data Rs
k,t as follows:

k,t and ls

argmin
Ri,t

(cid:88)

k∈DT

βk(Ri,t − Rk,t)2 + α

(cid:88)

k∈DS

βk(Ri,t − Rs

k,t)2,

argmin
li,t

(cid:88)

k∈DT

βk(li,t − lk,t)2 + α

βk(li,t − ls

(40)
k,t)2,

(cid:88)

k∈DS

(41)

where α is the weight of transfer which determines the amount
of effect the source data has on the target task.

The solution for the joint

learning formulation in (40)
and (41) is the transformation matrices Ri,t and li,t
that
represent the environmental effects on object i giving the target
ﬁngerprints and source ﬁngerprints. The objective functions
in (40) and (41) follow the form of joint convex optimization
that allows us to use a range of efﬁcient convex optimization
algorithms to solve it such as standard gradient methods [22].
The limitation of previous transfer learning method is that
it requires objects in both the target and source domains to
have similar transformations. However, even if transformations
are different in the target and source domains, other types of
knowledge can be transferred as well between objects such as
the value of the threshold τ . For example, if objects in the
target and source domains have different transformations but
have similar estimation errors, such as same type of noise,
or same data collection errors. In this case, the value of the
threshold τ can be estimated from the source domain and used
on the target domain, since the target domain has fewer data
points than source domain to properly estimate τ .

The proposed transfer learning approach enables the envi-
ronment estimation algorithm to use different types of objects
in the estimation process. The transfer learning approach is
essential in practical IoT systems which have wide diversity
of objects with different types of features.

V. EVALUATION AND RESULTS

To evaluate our approach, we used RFID data collected by
Bertoncini et al. in [13]. The data consists of IQ recordings
of 25 RFID tags of model AD (Avery-Dennison AD612) pur-
chased from the same manufacturer. The writing and reading
of RFID tags was performed with a Thing Magic Mercury 5e
RFID Reader, and the antenna was an omnidirectional antenna
from Laird technologies the sampling frequency was 4.0 Msps.
The same Electronic Product Code (EPC) was written on
all RFID tags to insure all RFID tags are identical. The
recordings were captured at three different physical conditions:

9

Fig. 4: Effect of changing the angle between RFID tags and the
RFID reader on two features of the RFID ﬁngerprints which are the
mean and cross-correlation features.

Fig. 5: Average distance between reference ﬁngerprints and current
ﬁngerprints with and without environment estimation with respect to
the number of objects.

The ﬁrst is at normal room temperature, the second RFID tags
were warped by water submersion, and lastly RFID tags were
warped by physically changing the angle between the RFID
tag and the reader. The use of RFID technology in supply
chain management is one of the primary applications of IoT
systems. For example, Wal-Mart uses the RFID tags to manage
its supplies [23]. In the supply chain management applications,
RFID tags are scanned as the supplies move under the RFID
tag reader which is similar to the third physical condition of
the RFID dataset that we have. Therefore, in our evaluation,
we will use the change of angle between reader and the RFID
tag as an environmental effect that affects all the objects.

A. Feature Extraction

For each RFID tag, we extract seven features from the IQ
recordings as described in [13]: Mean of the EPC, variance
of EPC, Shannon entropy, second central moment, skewness,
kurtosis, and maximum cross-correlation. These features are
referred to as higher order statistical calculations. In Fig. 4, the
mean of the EPC and the cross-correlation features are shown
for two RFID tags. The ﬁgure shows that both RFID tags
showed similar changes when the angle between the RFID
tag and the reader changes. Additionally, from Fig. 4, we
notice that the effect of changing the angle is enough to
shift the ﬁngerprints features of an object and make these
ﬁngerprints closer to a completely different object than to
the same object but without any environmental effects. For
example, in Fig. 4, the effect of the environment, highlighted
using blue arrows with caption Env 2, on the ﬁrst object
shifts the ﬁngerprints closer to the second object than to the
original ﬁngerprints of the ﬁrst object. Thus, the ﬁngerprints
of the ﬁrst object would have been mistakenly assigned to the
second object if the method of assignment relied only on the
distance to the original object ﬁngerprints without the use of
any environmental estimation techniques.

B. Evaluation Results

The ﬁrst evaluation for our approach is to show the effect
of environment estimation on the accuracy of assigning each

Fig. 6: Effect of the threshold τ comparison between the proposed
approach with and without
to the
number of objects.

transfer learning with respect

ﬁngerprint to the correct object. Fig. 5 shows the average
distance between collected ﬁngerprints and the reference ﬁn-
gerprints. In the case of traditional algorithms, the existence
of environmental effects on objects signiﬁcantly increases the
average distance between collected ﬁngerprints and reference
ﬁngerprints. However, using the proposed algorithm to remove
the environmental effects drops the average distance to values
closer to the no environmental effects case. Fig. 5 shows close
to 90% improvement in average for total objects between 4
and 15 objects. The impact of having lower average distance
between collected ﬁngerprints and the reference ﬁngerprints on
the object authentication depends on the choice of detection
threshold.

Fig. 6 shows the impact of the threshold on the percentage
of correctly assigned ﬁngerprints. In this experiment, the total
number of objects is 20. In the case where environmental
effects are not estimated, the minimum possible threshold to
achieve 50 percent accurate assignment of objects. however,
estimating the environment allows us to drop the value of the
threshold to 3 and achieve a 100% accurate assignment of the
objects. The beneﬁt of having low values for the threshold is
shown in the following attack scenarios.

In Fig. 7 we simulate a cyber emulation attack scenario.

10

Fig. 7: Average distance between reference ﬁngerprints and current
ﬁngerprints in the case of a cyber emulation attack.

In this scenario, we have one attacker object throughout the
experiment which explains the similar Bhattacharyya distance
for the attacker object as the total number of objects in the
experiment increases. From Fig. 7, we can see that estimating
the environmental effects increases the gap between the legit-
imate objects assignment and the attacker objects assignment.
This large gap allows the choice of any value for the threshold
between 10 and 150 to perfectly detect the attacker. However,
in the traditional approach, the gap between the legitimate
objects and the attacker object is between 70 and 150 which
is smaller than the gap in the proposed approach. Fig. 7 shows
that the proposed approach improves the gap of the threshold
by 40%. This result, corroborates Theorem 1, as it shows
that estimating the effects of the environment allows the use
of a lower threshold while ensuring that attackers are easier
to detect as shown in Fig. 7. Therefore, for cases in which
the total number of objects is more than seven objects, the
improvements translate to 100% over the traditional approach
that were unable to detect the attack.

In Fig. 8, we study the cyber-physical emulation attack
scenario. In this ﬁgure, we used the same object ﬁngerprints
as the malicious ﬁngerprints but under different environmental
effects and similar to the previous experiment we use one at-
tacker object as the total number of object increases. From Fig.
8, we can see that the traditional approach is unable to detect
the attacker and assigns the attacker object as a legitimate
object for any choice of threshold since the attacker’s distance
is always below the legitimate object’s minimum distance.
Meanwhile, for threshold values between 10 and 25,
the
proposed algorithm is able to detect the attacker when the total
number of objects is more than seven, i.e. six legitimate objects
and one attacker object. This result, corroborates Theorem 2,
as it shows that environment estimation is able to detect cyber-
physical emulation attacks that traditional algorithms were
unable to detect. In both emulation attack scenarios, we can
observe that the average distance of the legitimate objects is
signiﬁcantly high when the total number of objects is small,
i.e., less than seven objects, compared to when the number of
objects is big, i.e., more than seven objects. This is due to the
effect the attacker has on the estimation process. During the
estimation process of legitimate objects, the attacker object is

Fig. 8: Average distance between reference ﬁngerprints and current
ﬁngerprints in the case of a cyber-physical emulation attack detection.
The attack is successful, when the attacker object distance is below
the legitimate object distance.

considered as a neighbor object in the estimation process and
hence its effect is signiﬁcant when the total number of objects
is small. In contrast, for cases in which the total number
of objects is large, the effect the attacker object has on the
environment estimation process of all the legitimate objects
in the system is small. This limitation can be overcome by
implementing a multi-stage estimation process, where multiple
estimation processes are executed at different time frames. At
each time frame, all objects labeled as attackers are excluded
from future estimation processes. This approach ensures that
all objects in the estimation process are legitimate.

To simulate the effect of transfer learning, ﬁrst we divided
the dataset into two groups of objects, a target group with
ﬁve objects and a source group with 15 objects. Second we
use three of the features in the ﬁrst set of objects along
with different features from the second set. Therefore, we
would have two sets of objects with different types of features
for each set. In order to transfer knowledge from the source
dataset to the target dataset, both the source dataset and the
target dataset need to be related to each other. For example,
objects that have different types and have different features
need to share similar behaviors when exposed to the same
environmental effects in order to transfer knowledge between
them. In our experiment, the features of objects in the source
dataset change in a similar way to the features of objects in
the target dataset when exposed to the same environmental
effects even though the features are of different types and have
different range of values. To simulate the different amounts
of relation between the source dataset and the target dataset,
we introduce different degrees of noise to the ﬁngerprints of
the source objects starting from small amount of added noise
referred to as Class 1 and all the way to large amount of
added noise referred to as Class 5. Fig. 9 shows the effect
of transfer learning as the relationship between the source
and target datasets decreases from Class 1 to Class 5. The
ﬁgure shows a small average distance between ﬁngerprints
when the relation between the source and target dataset is high,
as in Classes 1 to 3 where we get around 70% improvement
over the no transfer approach. However, when the relationship

11

different types of objects compared to using the framework
only on objects with the exact same feature space.

REFERENCES

[1] T. Park, N. Abuzainab, and W. Saad, “Learning how to communicate in
the internet of things: Finite resources and heterogeneity,” IEEE Access,
vol. 4, pp. 7063–7073, Nov. 2016.

[2] R. H. Weber, “Internet of things–new security and privacy challenges,”
Computer Law & Security Review, vol. 26, no. 1, pp. 23–30, Jan. 2010.
[3] L. Atzori, A. Iera, and G. Morabito, “The internet of things: A survey,”
Computer Networks, vol. 54, no. 15, pp. 2787–2805, May 2010.
[4] F. Wu, L. Xu, S. Kumari, X. Li, J. Shen, K.-K. R. Choo, M. Wazid, and
A. K. Das, “An efﬁcient authentication and key agreement scheme for
multi-gateway wireless sensor networks in iot deployment,” Journal of
Network and Computer Applications, vol. 89, pp. 72–85, Jul. 2017.
[5] Y. Yang, H. Cai, Z. Wei, H. Lu, and K.-K. R. Choo, “Towards
lightweight anonymous entity authentication for iot applications,” in
the Australasian Conference on Information Security and
Proc. of
Privacy. Springer, Jun. 2016, pp. 265–280.

[6] A. Ferdowsi and W. Saad, “Deep learning-based dynamic watermarking
for secure signal authentication in the internet of things,” in Proc. of
the IEEE International Conference on Communications (ICC). Kansas
City, MO, USA, May 2018.

[7] H. Patel, “Non-parametric feature generation for rf-ﬁngerprinting on zig-
bee devices,” in Proc. of IEEE Symposium on Computational Intelligence
for Security and Defense Applications (CISDA), Verona, NY, Aug. 2015,
pp. 1–5.

[8] A. Kurtz, H. Gascon, T. Becker, K. Rieck, and F. Freiling, “Fingerprint-
ing mobile devices using personalized conﬁgurations,” in Proceedings
on Privacy Enhancing Technologies, Sep. 2015, pp. 4–19.

[9] S. V. Radhakrishnan, C. Corbett, A. Baca, R. Beyah et al., “A passive
technique for ﬁngerprinting wireless devices with wired-side observa-
tions,” in Proc. of IEEE Communications and Network Security (CNS),
Oct. 2013, pp. 305–313.

[10] S. Raza, T. Helgason, P. Papadimitratos, and T. Voigt, “Securesense:
End-to-end secure communication architecture for the cloud-connected
internet of things,” Future Generation Computer Systems, vol. 77, pp.
40–51, Dec. 2017.

[11] C. Stergiou, K. E. Psannis, B.-G. Kim, and B. Gupta, “Secure integration
of iot and cloud computing,” Future Generation Computer Systems,
vol. 78, pp. 964–975, Jan. 2018.

[12] Q. Xu, R. Zheng, W. Saad, and Z. Han, “Device ﬁngerprinting in wire-
less networks: Challenges and opportunities,” IEEE Communications
Surveys & Tutorials, vol. 18, no. 1, pp. 94–104, Sep. 2015.

[13] C. Bertoncini, K. Rudd, B. Nousain, and M. Hinders, “Wavelet ﬁnger-
printing of radio-frequency identiﬁcation (RFID) tags,” IEEE Transac-
tions on Industrial Electronics, vol. 59, no. 12, pp. 4843–4850, Dec.
2012.

[14] Z. Dawy, W. Saad, A. Ghosh, J. G. Andrews, and E. Yaacoub, “To-
ward massive machine type cellular communications,” IEEE Wireless
Communications, vol. 24, no. 1, pp. 120–128, Feb. 2017.

[15] B. Danev, D. Zanetti, and S. Capkun, “On physical-layer identiﬁcation
of wireless devices,” ACM Computing Surveys (CSUR), vol. 45, no. 1,
p. 6, Nov. 2012.

[16] M. Edman and B. Yener, “Active attacks against modulation-based
radiometric identiﬁcation,” Rensselaer Institute of Technology, Technical
report, pp. 09–02, Aug. 2009.

[17] E. Borgia, “The Internet of things vision: Key features, applications and
open issues,” Computer Communications, vol. 54, pp. 1–31, Dec. 2014.
[18] T. Kailath, “The divergence and Bhattacharyya distance measures in
signal selection,” IEEE Transactions on Communication Technology,
vol. 15, no. 1, pp. 52–60, Feb. 1967.

[19] A. Evren and E. Tuna, “On some properties of goodness of ﬁt measures
based on statistical entropy,” International Journal of Research &
Reviews in Applied Sciences, vol. 13, no. 1, pp. 192–205, Oct. 2012.

[20] M. Miettinen, S. Marchal, I. Hafeez, N. Asokan, A. R. Sadeghi, and
S. Tarkoma, “IoT sentinel: Automated device-type identiﬁcation for
in IoT,” in Proc. of IEEE 37th International
security enforcement
Conference on Distributed Computing Systems (ICDCS), Juu. 2017, pp.
2177–2184.

[21] S. J. Pan and Q. Yang, “A survey on transfer learning,” IEEE Transac-
tions on Knowledge and Data Engineering, vol. 22, no. 10, pp. 1345–
1359, Oct. 2010.

[22] D. P. Bertsekas, Nonlinear programming. Athena scientiﬁc Belmont,

1999.

Fig. 9: The effect of transfer learning between source and target
datasets as the relationship between the source and target datasets
changes from the highest relation in Class 1 to the lowest relation in
Class 5.

between the source and target datasets is small, as in Classes
4 and 5 in Fig. 9, the transfer learning method increases the
average distance and yields a lower detection rate compared
to having no transfer learning. This case is called negative
transfer when forcing a transfer learning method even though
the source and target dataset are not related to each other.
The ﬁgure shows two values of the transfer weight α, 25% or
50% in Fig. 9, that represent the amount of weight the transfer
learning method has on the ﬁnal assignment of ﬁngerprints.
The ﬁgure shows that relying more on transfer learning is
better when the relationship between the source and target
datasets is high, as shown for Classes 1 and 2 in Fig. 9. In
contrast, relying on transfer learning has a negative impact
when the relationship between the source and target datasets
is low, as shown for Classes 4 and 5 in Fig. 9. The ﬁgure
shows an overall improvement of 80% in the average distance
when the relationship between the source and target datasets
is high.

VI. CONCLUSION

In this paper, we have proposed a novel authentication
framework for IoT systems. The proposed framework exploits
the effects of the environment surrounding IoT objects to
detect remote emulation attackers, who can replicate the
signals of legitimate objects but fail to replicate the constantly
changing environment around the legitimate IoT object. The
proposed framework tracks the changes in objects’ ﬁngerprints
and uses these changes to extract a model for the environment.
We have shown that our framework can enhance the authenti-
cation of legitimate objects and is able to detect both cyber and
cyber-physical emulation attacks. The proposed framework
used transfer learning as well to estimate the environment
from objects of different types or objects with different feature
spaces. Simulation results using real IoT device data have
shown that conventional methods of device ﬁngerprinting were
unable to detect cyber-physical emulation attackers while our
proposed framework were able to detect these type of attacks.
The results have shown an improvement of 40% in cyber
emulation attacks detection, and the transfer learning results
showed an improvement of 70% when the framework used

[23] L. Dillman, “Wal-mart draws line in the sand,” RFIDJournal, Jun, Jun.

2003.

12

