Cyber-Storms Come from Clouds: Security of
Cloud Computing in the IoT Era

Michele De Donno1, Juxhino Kavaja1, Nicola Dragoni1,2, Antonio
Bucchiarone3, Manuel Mazzara4

1 DTU Compute, Technical University of Denmark, Denmark
{juxk, mido, ndra}@dtu.dk
2 Centre for Applied Autonomous Sensor Systems, Örebro University, Sweden
nicola.dragoni@oru.se
3 Fondazione Bruno Kessler, Trento, Italy
bucchiarone@fbk.eu
4 Innopolis University, Russian Federation
m.mazzara@innopolis.ru

Abstract. The Internet of Things (IoT) is rapidly changing our society
to a world where every “thing” is connected to the Internet, making com-
puting pervasive like never before. This tsunami of connectivity and data
collection relies more and more on the Cloud, where data analytics and
intelligence actually reside. Cloud computing has indeed revolutionized
the way computational resources and services can be used and accessed,
implementing the concept of utility computing whose advantages are
undeniable for every business. However, despite the beneﬁts in terms of
ﬂexibility, economic savings, and support of new services, its widespread
adoption is hindered by the security issues arising with its usage. From
a security perspective, the technological revolution introduced by IoT
and Cloud computing can represent a disaster, as each object might be-
come inherently remotely hackable and, as a consequence, controllable
by malicious actors. While the literature mostly focuses on security of
IoT and Cloud computing as separate entities, in this article we provide
an up-to-date and well-structured survey of the security issues of Cloud
computing in the IoT era. We give a clear picture of where security issues
occur and what their potential impact is. As a result, we claim that it is
not enough to secure IoT devices, as cyber-storms come from Clouds.

1

Introduction

The Internet of Things (IoT) is rapidly and inevitably spreading in our
society, with the promise of rising eﬃciency and connectivity. Although
the number of “things” has strongly been increasing over the past few
years, statistics predict an even further growth in the future. Indeed, if
the number of IoT connected devices in 2017 was around 20 billion, there
will be about 30 billion in 2020 and more than double in 2025 [2]. This
dramatic increase will bring challenges together with opportunities, and
the massive introduction of this technology will need to be managed by

9
1
0
2

n
a
J

8
2

]
P
S
.
s
s
e
e
[

1
v
1
7
0
0
1
.
2
0
9
1
:
v
i
X
r
a

 
 
 
 
 
 
2

Michele De Donno et al.

several points of views such as legal, social, business-wise and of course
technological [100].
IoT applications span from industrial automation to home area net-
works to smart building, pervasive healthcare and smart transportation
[90,108,107]. For instance, smart homes will heavily rely upon IoT de-
vices to monitor the house temperature, possible gas leakages, malicious
intrusions, and several other parameters concerning the house and its
inhabitants. In pervasive healthcare, IoT devices are used to perform
continuous biological monitoring, drug administration, elderly monitor-
ing conditions and habits for improved lifestyle, and so on. Last but
not least, with the Industry 4.0 technological revolution, Industrial IoT
(IIoT) is entering its golden age.
From a security perspective, this plethora of IoT devices ﬂooding the
world is having tremendous consequences, so that it is not an exagger-
ation to talk about a security and privacy disaster [37]. In fact, IoT
devices are often bad or not protected at all, thus, easily exploitable
from diﬀerent families of malwares to perpetrate large scale attacks (this
is the case of Distributed Denial of Service-Capable IoT malwares such
as Mirai [33,36], just to mention a key example).
If we refer to one of the most common deﬁnitions of IoT, we can see that
it is based on a single layer of devices with embedded computation and
connectivity: “the interconnection via the Internet of computing devices
embedded in everyday objects, enabling them to send and receive data”
[91]. This deﬁnition depicts the traditional scenario which most of the
literature about IoT security focuses on ([148,68,24], just to mention a
few papers). Nevertheless, focusing only on the security of end devices
risks to make us lose the sight of the overall picture.

There Is No IoT without the Cloud. Today, IoT systems strongly rely
on the Cloud. End devices are increasingly used as lightweight devices
that collect data and connect to powerful Cloud servers responsible for
all the application intelligence and data analytics [46,83,78]. This huge
amount of data sent to the Cloud is one of the main motivations for
the investigation of new distributed computing paradigms, such as Fog
Computing [77].
For this reason, we think that it is no longer enough to consider Cloud
computing and IoT as two diﬀerent entities, but we need to change the
perspective, especially when looking at how to protect IoT systems. Sim-
ilarly to other works in the literature, such as [17,35,26], we assume a
picture of IoT in which Cloud computing and end devices are the two
tight layers constituting a broader Internet of Things. In this new setting,
IoT cannot disregard Cloud computing, as the Cloud is a core component
of the overall IoT architecture, rather than an external entity. Note that
the viceversa is not true, as the Cloud was not originally thought for IoT
devices and it has been widely studied as a stand-alone paradigm.
From a security perspective, this vision of Cloud computing as a key
component of the IoT architecture implies that all security issues that
the Cloud drags on need to be analyzed and addressed when referring
to IoT security. The result, depicted in Fig.1, is a metaphoric rainstorm
of cyber-security issues potentially aﬀecting every context of the cur-

Cyber-Storms Come from Clouds

3

Fig. 1. A broader deﬁnition of IoT (adapted from [92]): a two layered architec-
ture in which End/IoT devices strongly rely on the Cloud

rent and future society. For this reason, we strongly believe that a clear
and detailed analysis of the security issues of the “clouds” is essential to
improve the security on the “ground”.

1.1 Contribution and Outline of the Paper

This paper aims at providing an up-to-date and well-structured survey of
the security issues of Cloud computing in the era of the IoT revolution.
Hence, we do not aim at proposing yet another survey of security issues
of Cloud computing as a stand-alone paradigm, but we aim at discussing
security issues of the Cloud when considered as a core component of
the broader IoT architecture. For this purpose, we use a structured ap-
proach. First, we distinguish security issues speciﬁc of Cloud computing
from issues not strictly related to the Cloud but still having an impact
on the overall IoT architecture (depicted in Fig. 1). Then, we classify
both types of issues according to two diﬀerent angles: the aﬀected Cloud
architectural layer and the impacted security property (in terms of con-
ﬁdentiality, integrity, availability). We believe that this classiﬁcation is
vital to understand security issues of Cloud computing, having a clear
picture of where issues occur and what their potential impact is. Since
there is no IoT without Cloud, we cannot secure IoT without securing
the Cloud.
In summary, the contribution of the paper is twofold:

– We provide a novel Cloud-centered perspective of IoT security. As
already mentioned, Cloud computing has become of paramount im-
portance for Internet of Things. Nevertheless, most of the works
related to IoT security focus on the security of end devices. In this
paper, we ﬁll this gap providing an analysis of Cloud security issues
and how they aﬀect IoT security.

– We propose and discuss a structured classiﬁcation of Cloud com-
puting security issues: diﬀerently from other works, security issues
associated to Cloud computing will be classiﬁed according to dif-
ferent layers. First, we distinguish between Cloud-speciﬁc security
issues and other issues non strictly related to the Cloud but still
important in the IoT context. Then, for each layer of the Cloud ar-
chitecture, we investigate security properties aﬀected by each issue.
This contribution aims at giving a clear overall picture of all aspects
of Cloud security.

4

Michele De Donno et al.

Outline of the Paper. The rest of this work is organized as follows. Sec-
tion 2 motivates our research by reviewing similar eﬀorts and by com-
paring them with the rationale behind our manuscript. Section 3 gives
basic notions on Cloud computing. Section 4 describes the methodology
adopted in our research, which is of key importance in order to un-
derstand the classiﬁcation proposed in the paper. In particular, it ﬁrst
depicts the assumed reference architecture. Then, it explains how the
classiﬁcation has been structured. Sections 5 and 6 discuss the Cloud-
speciﬁc security issues and the Cloud-generic security issues, respectively.
Finally, Section 7 wraps up and concludes the work.

2 Motivation

In this section we review relevant works that have inspired and motivated
our research. To this aim, we focus the discussion on how our contribution
extends and complements the literature.
Subashini and Kavitha [127] group security issues in relation to the ser-
vice model they aﬀect, having a focus on the Software as a Service (SaaS)
one. For each service model, the authors report diﬀerent categories of se-
curity issues without a clear classiﬁcation criteria. The result is a mixture
of categories often overlapped with each other. We claim that this lack
of separation between classes, along with the intrinsic complexity of the
Cloud, does not allow the reader to develop a clear picture of where
issues occur within the Cloud architecture and what security property
they aﬀect.
Grobauer et al. [45] are the ﬁrst authors proposing a diﬀerentiation be-
tween speciﬁc and general security issues of the Cloud. They focus on
Cloud-speciﬁc issues and classify them in relation to the architectural
level they occur. However, no focus is placed on the security property
each issue aﬀects.
Similarly, Modi et al. [85] classify security issues based on a Cloud ar-
chitecture that is alike to the one used in this paper. However, they do
not specify which security property is aﬀected by each issue.
Singh et al. [119] group security issues in relation to diﬀerent categories
whose choice is unclear. This makes diﬃcult for the reader to understand
how the diﬀerent categories are related and consequently it complicates
the comprehension of security issues. However, some of the identiﬁed
threats are contextualized with the security attribute they compromise.
Fernandes et al. [40] produce one of the most comprehensive surveys on
Cloud computing security issues. They identify a large number of secu-
rity issues and group them based on a taxonomy that is clearly deﬁned.
Nevertheless, they do not specify which security property is aﬀected by
each issue.
Singh and Chatterjee [117] extend the work of Fernandes et al. to include
possible solutions to the identiﬁed problems.
Xiao and Xiao [145] propose to classify security issues in relation to
the properties they aﬀect. However, they identify only a small subset of
threats together with a list of possible solutions.
Instead of classifying Cloud security issues at a ﬁne-grained level, Ardagna
et al. [9] choose to classify literature works in relation to the security

Cyber-Storms Come from Clouds

5

Fig. 2. NIST Cloud computing reference architecture (source [71])

property aﬀected by the issues considered in such works. However, this
coarse-grained approach does not allow to achieve the desired level of
detail. Indeed, since many of the classiﬁed works do not specify the im-
pact of each issue, the approach used by Ardagna et al. [9] does not help
the understanding of what security property is aﬀected by each security
issue.
Hashizume et al [50] present a categorization of security issues focusing
on a service model perspective while distinguishing between threats and
vulnerabilities.
To the best of our knowledge, there is no work in the literature proposing
a structured classiﬁcation of Cloud computing security issues in the IoT
context. This represents the main motivation behind this paper.

3 Background: Cloud Computing Paradigm

Nowadays, Cloud computing is a well-known paradigm. However, for
the sake of readability and self-containment of the paper, we consider
relevant to recap basic notions of Cloud computing. This also allows to
deﬁne a common terminology that is going to be used throughout the
rest of this paper. For these reasons, background notions about Cloud
computing are provided in this section.
NIST [81] deﬁnes Cloud computing as “a model for enabling ubiquitous,
convenient, on-demand network access to a shared pool of conﬁgurable
computing resources (e.g., networks, servers, storage, applications, and
services) that can be rapidly provisioned and released with minimal man-
agement eﬀort or service provider interaction”.
Figure 2 depicts the NIST Cloud computing reference architecture [71].
It provides a high-level overview of the Cloud and identiﬁes the main
actors and their role in Cloud computing. Each actor is an entity, i.e. a
person or an organization, that either takes part in a transaction/process
or performs some tasks in Cloud computing. There are ﬁve main actors:

6

Michele De Donno et al.

– Cloud Provider : an entity that provides a service to interested par-

ties;

– Cloud Consumer : an entity that uses a service from, and has a busi-

ness relationship with, one or more Cloud providers;

– Cloud Broker : an entity that mediates aﬀairs between Cloud providers
and Cloud consumers, and that manages the use, performance, and
delivery of Cloud services;

– Cloud Carrier : an intermediary that supplies connectivity and de-
livery of Cloud services from Cloud providers to Cloud consumers;
– Cloud Auditor : a party that conducts independent assessments of the
Cloud infrastructure, including services, information systems opera-
tions, performances, and security of the Cloud implementation.
In terms of interactions, there are several possible scenarios [71]. Gen-
erally, a Cloud consumer may request a Cloud service from a Cloud
provider, either directly or via a Cloud broker. A Cloud auditor con-
ducts independent audits and may contact other actors to collect the
necessary information.
The NIST deﬁnes the Cloud by means of ﬁve essential characteristics,
three service models, and four deployment models [81].

3.1 Essential Characteristics

The essential characteristics of Cloud computing can be summarized as
follows [81]:

– On-demand self-service: computing capabilities can be provided au-
tomatically when needed, without requiring any human interaction
between consumer and service provider;

– Broad network access: computing capabilities are available over the
network and accessible through several mechanisms which are dis-
posable for a wide range of client platforms (e.g., workstations, lap-
tops, and mobile devices);

– Resource pooling: computing resources are pooled to accommodate
multiple consumers, dynamically allocating and deallocating them
according to consumer demand. In addition, the provider resources
are location independent, i.e. the consumer does not have any knowl-
edge or control of their exact location;

– Rapid elasticity: computing capabilities can ﬂexibly be provided and
released to scale in and out according to the demand. As a result,
the consumer has the perception of unlimited, and always adequate,
computing capabilities;

– Measured service: resource usage can be monitored and reported
according to the type of service oﬀered. This is particularly relevant
in charge-per-use, or pay-per-user, services because it grants a great
transparency between the provider and the consumer of the service.
A Cloud infrastructure is a collection of hardware and software that em-
powers the aforementioned essential characteristics of Cloud computing.

3.2 Service Models

The three main types of service models used in Cloud computing are
described below [81]:

Cyber-Storms Come from Clouds

7

– Infrastructure as a Service ( IaaS): processing, storage, networks, and
other fundamental computing resources (both software and hard-
ware) are provided to the consumer. The consumer can run and
deploy any software and can control operating systems, storage, and
deployed applications. The consumer does not control or manage the
underlying Cloud infrastructure;

– Platform as a Service ( PaaS): the consumer is provided with a whole
development stack that can be used to develop and deploy new ap-
plications. The development stack includes programming languages,
libraries, services, and tools that are supported by the provider. The
consumer controls both deployed applications and possible conﬁgu-
ration settings for the applications environment. The consumer does
not control or manage the underlying Cloud infrastructure, operat-
ing systems, and storage;

– Software as a Service ( SaaS): the consumer can use the applica-
tions oﬀered by the provider, running on the Cloud infrastructure.
The consumer does not control or manage the underlying Cloud in-
frastructure, operating systems, storage, and individual applications
capabilities.

In all the service models, Cloud provider and Cloud consumer share the
control of the Cloud system. However, as shown in Fig. 3, each service
model implies a diﬀerent degree of control over the computational re-
sources for each party, thus diﬀerent responsibilities [71].

3.3 Deployment Models

The four main models used for the deployment of Cloud computing are
discussed below [81]:

– Private Cloud : the Cloud infrastructure is provided for the exclusive
use of a single organization. The organization can include diﬀerent
consumers (e.g., business units);

– Community Cloud : the Cloud infrastructure is provisioned for the
exclusive use of organizations with shared concerns, such as secu-
rity requirements, policy, and mission. Each organization can include
multiple consumers;

– Public Cloud : the Cloud infrastructure is provided for the open use
by the general public over the Internet. It is ideal either for small to
medium size businesses, or for single customers;

Fig. 3. Scope of control between provider and consumer (source [71])

8

Michele De Donno et al.

– Hybrid Cloud : the Cloud infrastructure is a merge of two or more
infrastructures deployed with diﬀerent models (private, community,
or public). Each Cloud infrastructure remains a unique entity, but
it is bound together with the others by standardized or proprietary
technologies enabling portability.

In all the aforementioned models, the Cloud infrastructure may be owned,
managed, and operated by one or more consumer organizations (if any),
a third party organization (e.g., business organization, academic organi-
zation, or government organization), or any combination of them.

4 Methodology

In this section, we introduce the methodology adopted to classify security
issues. First, we describe the simpliﬁed Cloud architecture that we use
as a reference. Then, we explain how the classiﬁcation is organized.

4.1 Reference Architecture

Cloud computing is one of the most complex computing paradigm exist-
ing today. For this reason, it is essential to take apart irrelevant details
when it comes to classify its security issues. To reach this objective, we
introduce a simpliﬁed architecture of the Cloud infrastructure, which is
depicted in Fig. 4. This architecture is an abstraction of the architec-
ture proposed in [85] and it is simpliﬁed to such an extent that Cloud
computing is considered as composed of four main layers: physical layer,
virtualization layer, application layer, and data storage.
The key components we consider at the physical layer are computational,
storage, and networking resources. However, since security issues of phys-
ical resources are beyond the purposes of this work, at this layer we only
consider network security issues.
In the virtualization layer, we locate Virtual Machines (VM), Virtual Ma-
chine Monitors (VMM), virtual networks, and all the infrastructure di-
rectly or indirectly supporting virtualization (e.g., mechanisms enabling
virtual machine migration, management of VMs, and so on).
We consider all the remaining software as part of the application layer:
speciﬁc applications, APIs, tools, middlewares, management services,
monitoring systems, load balancing systems, and others. Further, all soft-
ware (above the virtualization level) used to build PaaS and SaaS Cloud
implementations is considered part of the application level. Hence, in
this respect, we consider PaaS and SaaS as parts of the application level.
Indeed, we see them just as any other application oﬀering some special
type of services.
Finally, we consider data storage services as part of all the layers of the
architecture, therefore, they are treated alongside the other layers.

4.2 Structured Classiﬁcation

In this section, we describe how our reference architecture is adopted
to classify Cloud security issues. The overall classiﬁcation is depicted in
Fig. 5.

Cyber-Storms Come from Clouds

9

Fig. 4. Simpliﬁed Cloud reference architecture

Firstly, we separate Cloud-speciﬁc security issues from Cloud-generic
ones. Details about the criteria used for performing such distinction are
provided in Sec. 5. In short, many security issues of the Cloud exist also
in other paradigms, since rooted in common technologies employed to
build distributed systems. Thus, we distinguish between issues that we
consider speciﬁc of the Cloud environment and other common security
issues not strictly related to the Cloud but still having an impact on the
overall IoT architecture (depicted in Fig. 1). However, even if we also
present a subset of Cloud-generic issues, our main focus is on Cloud-
speciﬁc ones.

Secondly, security issues are further classiﬁed from two diﬀerent perspec-
tives: the Cloud architectural level at which they occur and the security
property they aﬀect. In other words, given a certain level x of the Cloud
reference architecture and a certain security property y, the following
questions are answered: 1) What are the security problems at level x of
the Cloud architecture?, 2) How do they aﬀect property y? In answering
these questions, the security properties we consider are the well-known
conﬁdentiality, integrity, and availability (CIA). We have decided to stick
only with these security properties to keep the scope of the paper well fo-
cused and manageable in terms of literature and analysis. However, the
same methodology can be applied to and iterated with other security
properties (e.g., authenticity and accountability).

The classiﬁcation resulting from the analysis described in Sec. 5 and
Sec. 6 is depicted at the end of the paper in Table 6 and Table 7, re-
spectively. These tables show each issue in relation to the architectural
level it occurs and the CIA property it aﬀects. For each cell of the table
(associated to a speciﬁc pair: issue, security property) a mark is applied
according to the following rules:

– “(cid:88)”: it is placed if we found a literature work describing an attack
aﬀecting the corresponding security property, or if we found a lit-
erature work stating that the issue might aﬀect the corresponding
property;

Application layerDATASTORAGEWebtechnologiesVirtualization layerPhysical layerNetworking10

Michele De Donno et al.

Fig. 5. Classiﬁcation of Cloud security issues

– “∼”: it is placed if, although the previous condition is not veriﬁed,
we believe that the given issue might allow to compromise the cor-
responding security property;

– an empty cell, if the previous conditions do not hold.

Moreover, in the last column of the tables, we highlight the relation of
each security issue with Cloud and end devices. In details, we indicate
which party can be exploited because of the speciﬁc security issue, and
which party might be the victim of an attack perpetrated exploiting that
issue. If neither the Cloud nor end devices are involved, we draw a “-”.

5 Cloud-speciﬁc security issues

In this section, we present security issues peculiar for Cloud computing.
Inspired by the work in [45], we consider as Cloud-speciﬁc issues all those
problems that are rooted in at least one of the essential Cloud charac-
teristics deﬁned by NIST. Please consider that, according to such deﬁ-
nitions, network-level and web-technologies issues (discussed in Sec. 6)
should be considered speciﬁc for the Cloud. However, since these security
issues are also really common in a number of distributed paradigms, we
have decided to consider them as Cloud-generic security issues and to
not discuss them in this section.
In the following, we present Cloud-speciﬁc security issues based on a
two layer classiﬁcation. First, we classify security issues based on what
CIA propriety they aﬀect. Then, for each property, the issues are further
organized in relation to the Cloud architectural level they aﬀect.

5.1 Conﬁdentiality

According to [1], conﬁdentiality is the “property that information is not
made available or disclosed to unauthorized individuals, entity or pro-
cesses”. Hence, it is the property indicating absence of unauthorized

Cloud-SpecificConfidentialityVirtualization levelApplication levelData Storage levelIntegrityVirtualization levelApplication levelData Storage levelAvailabilityVirtualization levelApplication levelNetwork levelMulti-levelCloud-GenericNetwork levelConfidentiality & IntegrityAvailabilityWeb technologiesConfidentialityIntegrityAvailabilityMulti-levelConfidentialityCyber-Storms Come from Clouds

11

disclosure of information and data [44]. We present a classiﬁcation of
security issues that can impair data conﬁdentiality. Each class of our
classiﬁcation is a component of the Cloud architecture (deﬁned in Sec-
tion 4.1) while the entries of each class are the security issues that have
causes rooted in that speciﬁc level.

Virtualization level issues Virtualization technology is one of the
key enabler of Cloud computing. However, this additional abstraction
layer has severe security repercussions. In the following paragraphs we
report key security issues caused by this layer and capable of compro-
mising data conﬁdentiality.

Multi-tenancy issues Virtualization technology allows to develop a
multi-tenant environment in which virtual machines operate sharing com-
munal hardware resources. The placement of diﬀerent users on the same
platform is what enables new types of attacks on data conﬁdentiality. In
[103], the authors describe how they were able to exploit several charac-
teristics of Amazon Elastic Compute Cloud (EC2) in such a way to have
their own virtual machine co-resident (i.e. on the same physical-machine)
with that of a victim. Once co-residence is reached, an attacker has the
unprecedented possibility of performing several types of side-channel at-
tacks in such a way to extract conﬁdential information from users who are
sharing the same machine with the attacker. In [103], it is shown that,
by means of cache measurements, an attacker can perform: keystroke
timing attack, traﬃc rates estimation of victim’s web servers and even
co-residence detection. Moreover, side channel attacks aﬀecting crypto-
graphic implementations have been reported in [154,149,72,55]. The work
in [128] shows the possibility to exploit memory deduplication issues for
performing another type of cross-VM side channel attack. Further, the
recent vulnerabilities Meltdown[70] and Spectre [63] have demonstrated
that not only memory-based side channel attacks are possible, but that
even processor vulnerabilities can be exploited to perform attacks capa-
ble of breaking any security assumption and allowing other co-resident
VMs to access conﬁdential information belonging to other users.

VM Isolation issues According to [119], virtual machine isolation is
the principal factor that can lead to cross-VM data leakage. Virtualiza-
tion is based on the hypervisor ability of isolating VMs from each other.
However, due to several reasons (e.g. misconﬁguration, design and im-
plementation bugs) an attacker can compromise the hypervisor, evade
from isolation and potentially take over all the other guests [139]. We
refer to such situation as virtual machine escape [102]. Escaped VMs
can access data and information belonging to other VMs[126], resulting
in paramount conﬁdentiality issues. Appropriate security mechanisms
are therefore required for isolating virtual machines from each other and
hence preventing data leakage. Some possible techniques for isolation en-
forcement are described in [126], while in [102], techniques for providing
integrity of VMM are reported.

12

Michele De Donno et al.

Virtual network issues According to [65] and [8], not only virtual ma-
chine isolation is needed but also isolation of virtual networks is required.
Therefore, virtual networks are another source of vulnerability for con-
ﬁdentiality and, as such, need to be protected. Even though some tra-
ditional controls (such as virtual local-area networks and ﬁrewalls) have
been proven to be less eﬀective in virtual networks [133], in [65], the au-
thors, propose to implement traditional network security solutions into
virtual environments. Typical conﬁdentiality threats that can aﬀect vir-
tual networks are sniﬃng and spooﬁng attacks [143]. Moreover, if from
a user’s prospective the virtual network is a private network, it might in
reality rely on a public infrastructure and therefore appropriate protec-
tions to secure communications are needed [110].
A novel type of attack that exploits virtual networks as a cornerstone
for subsequently compromising the whole Cloud system is the “virtual
switch attacker model for packet-parsing” (vAMP attack)[131]. This at-
tack exploits vulnerabilities of speciﬁc packet parsing systems deployed
in virtual switches for generating a series of attacks that eventually allow
to take control of the entire Cloud system.

Virtual Machine introspection issues Diﬀerent literature works, such
as[75], [65] and [60], propose to use the hypervisor for monitoring vir-
tual machines with the objective of preventing or discovering attacks on
integrity of guest systems. If from the one hand this kind of approach
presents important advantages, on the other hand it also highlights the
possibility for the Cloud provider or malicious insiders (or even for an
external attacker able to take control of the hosting platform) to break
users’ conﬁdentiality by exploiting virtual machine introspection. This
problem is linked to the more general and emblematic question of de-
ciding whether the Cloud provider and the infrastructure he provides,
should be considered trusted or not; which is a typical problem of every
scenario in which outsourcing is present. It is worth noting that, in case
the Cloud provider is considered trusted, the Cloud infrastructure might
also play a key role in solving many of the existing security issues [5].
An example, of attack that can allow a malicious insider to exploit virtual
machine introspection is described in [104].
For the sake of completeness, it should also be mentioned that attacks
targeting virtual machine introspection mechanisms have been reported
in literature. An example of such attack is Direct Kernel Structure Ma-
nipulation (DKSM)[13].

VM management issues VM image cloning enables Cloud providers to
supply on-demand services to their clients. Cloned VMs can be moved on
diﬀerent servers in relation to clients’ needs but this also makes clients
unaware of how many VMs copies exist, were these are speciﬁcally lo-
cated and who is possessing them. Such availability, allows a malicious
insider to exploit one of the existing VM copies to attempt breaking the
VM password and gain access to all the information saved into the VM
[39] while leaving the owner unaware of such situation.
VM image sharing is another key service enabled by VM image cloning.
VM image sharing is one of the Cloud foundations[140], however both

Cyber-Storms Come from Clouds

13

the VM image publisher and the retriever are subject to conﬁdentiality
concerns[14]. Indeed, by publishing an image, the publisher may release
his own conﬁdential information, while, on the other side, user’s data con-
ﬁdentiality can be compromised by shared malicious images, for instance,
they can contain back-doors for silently access conﬁdential data[45,86].
Moreover, VM image sharing makes also possible for attackers to rent
cloned VMs with the only purpose of analyzing their content and there-
fore to identify possible vulnerabilities that could be exploited in future
attacks.

VM migration issues Virtual Machine migration allows to transfer run-
ning VMs from one host to another in a transparent fashion for the ﬁnal
user [4,150]. The Cloud advantages of using such mechanisms are obvious,
just to name a few: it enables load-balance when hosts are overloaded,
it allows to reduce costs through VMs consolidation and improves the
overall manageability of the system [98,4,150]. However, protocols used
in implementing live migration have to be secured, since, if control mes-
sages and VM to be migrated are not encrypted, then common attacks on
conﬁdentiality (such as eavesdropping for sensitive data and passwords)
might be easily performed [4,114].

Application level issues We are now going to consider which are
the Cloud issues for conﬁdentiality whose causes are rooted at the appli-
cation level. According to our reference architecture (deﬁned in Section
4.1), every software deployed on top of the virtualization layer has been
considered part of the application level. Since we consider PaaS and SaaS
systems special type of application-level services, these are considered
part of this level too. We remind to the reader that even if we consider
web-related issues part of the application layer, they are not speciﬁcally
related only to the Cloud but common of any distributed system and for
this reason these are discussed in Sec. 6.

Isolation issues users of PaaS systems can develop and run their own
applications on platforms provided by Cloud providers. These platforms
allow applications developed by diﬀerent users to share communal li-
braries and supporting services [105]. Even if the platform (or container
system) can be a proper Operating System, in most cases it is a Virtual
Platform (e.g. Java or .Net) [105]. Irrespectively from the speciﬁc type
of implementation, a common concern of PaaS systems is to ensure that
isolation of tenants is properly implemented and that an application can
not explore or modify other data and applications. The work in [105],
presents a panoramic of isolation issues that could have arisen when
Java or .Net technologies were used to create PaaS implementations. It
should at this point be noted that PaaS implementations vary deeply
from provider to provider [69] and therefore Java or .Net may neither be
actually used in the majority of systems nor present these ﬂaws anymore.
Nevertheless, the issues which are reported in this paper have the goal to
identify the Cloud attack surface and make aware of the possible vulner-
abilities that can aﬀect the Cloud environment, independently from the

14

Michele De Donno et al.

speciﬁc technology used but in relation to what can possibly go wrong
and become an issue for the Cloud environment.
Within SaaS models, multitenancy is present also at the application level.
In [8], the authors describe how multitenancy can be implemented for al-
lowing the same application to be shared among diﬀerent users. As result
of multitenancy at application level, data of diﬀerent users are stored in
common structures [127] which enables malicious tenants to exploit ap-
plications loop holes, masked code injection or security misconﬁgurations
to sneak into other users data [127],[8].

Synchronization mechanisms issues synchronization mechanisms are
common in Cloud storage SaaS implementations [89]. When modiﬁca-
tion of ﬁles are performed on a local device, such mechanisms allow to
propagate updates to all other devices interested in those ﬁles [89]. These
mechanisms are typically implemented by the use of tokens which have
been shown to introduce new vulnerabilities that can allow to perform
data exﬁltration[89,66]. An example of attack exploiting such vulnera-
bility is the Man in the Cloud (MitC) attack [66].

Data Storage level issues In the following paragraphs we are going
to report some conﬁdentiality issues that, despite being speciﬁc of the
Cloud, are not strictly related to a speciﬁc level of the Cloud architecture
but that embrace more than one level of the architecture.

Outsourcing issues Applications deployed on the Cloud have to be re-
motely accessed by users who, depending on the type of application and
elaboration needed, may be requested to outsource private and conﬁden-
tial information. The immediate consequence of outsourcing is loss of
control which impede the owner of outsourced data to directly dispose
and control them as he prefers, making it diﬃcult to protect conﬁden-
tiality with traditional methods [145]. To understand the reasons behind
such diﬃculty it is paramount to distinguish between applications of-
fering storage services and applications oﬀering some type of remote
elaborations. In both cases, it is legitimate to assume that the service
provider will implement access policies and security mechanisms for pro-
tecting users’ data [109] but it also implies that he is in the perfect
position to access such data and therefore break users’ data conﬁden-
tiality. However, while in the former case users can easily prevent such
situation by encrypting data before their are stored in the Cloud (which
could also make it much more secure than storing them unencrypted in
private data centers [156]), in the latter case, the possibility to protect
conﬁdentiality by means of traditional encryption schema is not feasible
due to the service provider need of performing elaborations[21]. Nev-
ertheless, plain text data should be avoided in order to prevent Cloud
providers from accessing information which, due to the lack of control,
could even be stored or transmitted to third parties and be used for other
purposes (there are great examples in literature demonstrating how such
situations can produce unwanted consequences; some of these threats,
which are also related to multi location, can be found in [156]). If we

Cyber-Storms Come from Clouds

15

consider that Cloud applications take advantage of composite request
processing[54], which allows service providers itself to outsource part of
the computation, it is clear that the conﬁdentiality risks are even more
higher. Full homomorphic encryption could be the solution to alleviate
conﬁdentiality concerns of outsourced data but according to [79] and
[106] this approach is neither eﬃcient yet nor adequate for general pur-
pose elaborations.
In some cases, even applications oﬀering a pure storage service may still
require some amount of computations on encrypted data (for instance,
content research may be required for enabling ﬁne-grained retrieval)
[101]. To face this necessity, conﬁdentiality-preserving query evaluation
approaches are reported in [34], but, similarly to the case of homomor-
phic encryption, they only support partial query execution. Moreover,
even if encryption or fragmentation techniques are used to protect con-
ﬁdentiality of data, it may also be required to hide information about
which data is accessed (access conﬁdentiality) together with the patterns
exhibited in accessing such data (pattern conﬁdentiality) [109,130]. In-
deed, in [56] it is demonstrated that lacks in protecting such information
can result in contents disclosures.
In case that data are remotely elaborated on the Cloud by means of
programs written by the owner of such data (which is typically the case
for IaaS and PaaS services), to protect conﬁdentiality and integrity from
an untrusted Cloud provider, solutions relying on Intel software guard
extensions (SGX) have recently been proposed [15]. SGX features, allow
processors to instantiate secure memory regions which are protected from
hardware attacks or malicious privileged code [15]. This capability could
therefore be used for executing programs in the Cloud with a similar
level of security to the one in which programs are executed on hardware
resources belonging and controlled by the owner of data[15].

Data deletion issues data deletion need special attention since if it is
not correctly performed it leads to greater conﬁdentiality threats. From
the one hand, even if the delete operation has been correctly performed,
integrity of the operation can indirectly be breached due data recovery
vulnerabilities [45]. An example of such situation arises due to the phys-
ical features of storage devices which can allow to restore original data
[21] even if the delete operation has actually been performed at software
level. On top of these cases, the service provider may directly impact
on the integrity of the delete operation by incorrectly performing such
operation (for instance due to not properly taking into account data
replication) [95] or even by not performing it at all.

5.2

Integrity

Integrity is the “assurance that the information is authentic, complete
and can be relied upon to be suﬃciently accurate for its purpose. It refers
to whether the information is correct and can be trusted and relied upon”
[1]. We extend such deﬁnition to embrace also integrity of computations.
This implies that integrity is also about guaranteeing that information

16

Michele De Donno et al.

resulting from computations is authentic, complete and can be relied
upon.
The same classiﬁcation of security issues that has been previously per-
formed in relation to conﬁdentiality is going to be repeated for integrity
issues.

Virtualization level issues In the following paragraphs security
issues rooted in the virtualization layer and with the potential to impact
integrity of data are presented.

VM isolation issues at this level, virtual machine escaping is the way
in which data and software integrity can be attacked. Indeed, a com-
promised VMM can threaten integrity of data [109]. More speciﬁcally, if
a virtual machine is able to escape from isolation and compromise the
VMM, it can access memory locations belonging to other users while
having the required privileges to write or delete their content [126][139],
in such a way to perform a VM hopping attack [57,132]. The VMM can
possibly be attacked through several attack vector: device drivers, VM
exit events or hypercalls [84]; a throughout list of vulnerabilities typical
of common VMMs used to deploy Cloud systems, can be found in [96].
For this reason, in order to protect users’ data integrity it is essential to
protect the isolation capabilities and integrity of virtual machine mon-
itors. A list of possible mechanisms to guarantee VMM integrity and
enhance isolation is reported in [126] and [102].

VM management issues bad management of VM images has negative
repercussion on the integrity of the Cloud environment. Indeed, vulnera-
bilities in the Cloud environment can be introduced by injecting malware
into VM images repositories [98]. Thereafter, with lacks of proper VM
image management and controls, sporadically running images are in the
perfect position to carry worms and compromise integrity of other images
while avoiding detection thanks to low activity level [140]. Therefore, in-
tegrity checks and scans of VM images are required as consequence of
VM cloning and sharing. Moreover, such controls are also paramount
in relation to the necessity to protect Cloud repositories against the in-
creasing trend of “bad repositories”, i.e. the use of Cloud repositories as
containers of services for illicit activities [67].

VM migration issues live virtual machine migration is paramount for
Cloud environments, however it needs to be properly implemented from
a security perspective (see also Section 5.1). As for integrity, the attack
surface of the migration protocol is potentially quite vast [4]: common
vulnerabilities may be used to inject malicious code in the programs
implementing migration process; if no encryption is used to secure the
exchange of messages controlling the transfer, then, messages might be
manipulated to impair integrity of the process; moreover, even compro-
mised hosts might be exploited for aﬀecting integrity of the migrated
VM once it is moved to a controlled malicious host.

Cyber-Storms Come from Clouds

17

Application level issues We are now going to present integrity issues
that are rooted at the application layer. We take into account issues
aﬀecting integrity of data and elaborations.

Computation cheating issues the combination of outsourcing together
with the transparency lack in the way Cloud services are implemented,
allows service providers to alter the results of computations or even to
not perform elaborations in the proper way [101]. If at ﬁrst such situa-
tion might seem strange, there are actually several reasons behind it, e.g.
driven by the desire to reduce costs, service providers may be tempted
to simplify computations when lots of resources are needed [136]. Re-
mote computation can be cheated in several ways: elaborations can be
performed on partial or not up to date data, they can be performed
incorrectly or may even return partial results [109], [141]. Remote com-
putation audit and veriﬁable computation have therefore been proposed
to face this issue. A review of possible solutions trying to address such
problem is presented in [145].
Computation might also be cheated not because of the service provider
but due to speciﬁc attacks. An example of such inconvenience is the
Cloud malware injection attack. Cloud providers are responsible for redi-
recting user’s requests toward appropriate services capable of satisfying
them [59]. An adversary can exploit such situation to create malicious
service implementations, add them to the Cloud and trick the Cloud
provider to believe that they are real implementation of some services
by falsifying metadata descriptors used to identify functionalities oﬀered
by applications [59]. This type of attack results in applications integrity
breach since from a users prospective the service has not performed as
expected.

Insecure APIs, management and control interfaces by means of APIs
and management interfaces Cloud users can request, monitor and ob-
tain resources dynamically based on their needs, making the Cloud an
on-demand self-service platform[61]. However, since these interfaces are
accessible through the internet and because of web vulnerabilities [95],
the risk of unauthorized access is much higher if compared to traditional
systems [45]. It follows that if an attacker is able to gain unauthorized
access to the data contained in such interfaces, then he can compromise
services and break applications integrity [3]. Examples of attacks that in
the past compromised control interfaces are reported in [123].

Isolation issues isolation issues within platforms used to create PaaS
systems (see also subseciton 5.1) can aﬀect integrity of data and appli-
cations belonging to other tenants[105].

Synchronization mechanisms issues according to [66] vulnerabilities
in synchronization mechanisms might also be exploited to compromise
integrity of data. An example of attack that can allow to achieve this is
the Man in the Cloud (MitC) attack (see also subsection 5.1). Integrity
of data can be compromised by such attacks since authentication vul-
nerabilities are exploited. Therefore, once the attacker takes advantage

18

Michele De Donno et al.

of tokens and authenticates as a diﬀerent user, then he is able to impair
both conﬁdentiality and integrity of all data belonging to that user.

Data Storage level issues In the following paragraph we discuss
about integrity issues related to the protection of data storage. We have
decided to not directly associate these issues to any of the previous levels
as we consider data storage related to all levels of our reference architec-
ture and not predominant of any of them.

Outsourcing issues as is the case for conﬁdentiality, outsourcing of data
is the Cloud feature that arises new integrity challenges. Data integrity
can be compromised in several possible ways and reasons: a Cloud service
provider, for economical reasons, may delete users’ rarely accessed data
in order to release storage space that can be sold to other users; even
assuming a perfectly behaving provider, malfunctions are still there to
compromise data (which is indeed what happened to Amazon S3 some
years ago [18]); more in general, external attackers, driven by econom-
ical reasons, might compromise data integrity and this might even not
be timely discovered by users [137] due the Cloud providers’ tendency
of hiding unpleasant events that could aﬀect their businesses. The need
for integrity mechanisms is therefore clear. However, due to outsourcing,
traditional integrity mechanisms are non applicable in this scenario since
they would require the download of outsourced data for allowing local
integrity checks to be performed[137,101]. Indeed, this is unacceptable
for eﬃciency reasons as it would nullify the Cloud advantages (especially
in relation to situation where high amounts of data are outsourced).
Therefore, remote data integrity checking protocols are required[129].
Nevertheless, challenges do exist for the development of such protocols
especially in relation to eﬃciency requirements and the possibility to
guarantee integrity of dynamic data (i.e. data that are modiﬁed or up-
dated after they have been loaded in the Cloud). For limited resourced
clients, the burden of computation and communication imposed by such
protocol has to be as limited as possible which has lead to the idea of us-
ing protocols based on third parties auditors [141]. In [152], an in-depth
review of remote data integrity checking protocol is presented with asso-
ciated issues for their development and possible attacks they may face.

5.3 Availability

Availability is the “assurance that the systems responsible for delivering,
storing and processing information are accessible when needed, by those
who need them” [1]. Hence, availability is the property indicating the
possibility, for authorized users, to access (and modify) data whenever
needed [44].
This subsection is aimed at presenting availability and performance degra-
dation issues that arise at the diﬀerent levels of our architecture.

Cyber-Storms Come from Clouds

19

Virtualization level issues Virtualization technology introduces
new attack vectors that can be exploited to impact on the availabil-
ity and performances of Cloud systems. In the next paragraphs we seek
to report the main issues we have identiﬁed in relation to this concern.

Multi-tenancy issues according to [103], an attacker can exploit co-
residence, and act on shared physical resources, in such a way to perform
denial-of-service attacks or cross-VM performance degradation attacks.
The possibility to verify co-residence, might also be exploited to provoke
changes in resource utilization of co-resident VMs in such a way to make
them use less resources (and hence impacting on their availability) and
therefore let the attacker gain high resource availability. This attack is
known as Resource-Freeing attack [134].

VM management issues availability issues may also arise due to bad
VM management policy. An example of such eventuality is VM sprawl-
ing, which is a situation where the number of hosted virtual machines
keep increasing while most of them are idle [76]. VM sprawling can also
result from speciﬁc attacks aiming at discarding conﬁrmation messages
generated from the Cloud service to conﬁrm users that their requests of
VM execution has been correctly performed. If users do not receive such
conﬁrmation messages, they will keep instantiating VMs even if their
action has already been performed. This attack leads to the creation of
orphan VMs which can degrate performance and eventually exhaust the
pool of resources [28].

VM isolation availability can be compromised by virtual machines
breaking out of isolation and being able to either use all host resources
or performing a system halt [126].
Scheduling issues might be exploited to impact on the performance (and
also availability) of other VMs. Indeed, an attacker can manipulate hy-
pervisor scheduling mechanisms in such a way to obtain more resources
for his own VM at the expenses of other clients [155]. Such situation,
taken to the limit, can lead to starvation of other VMs or, more in gen-
eral, can degrade services to such an extent of making services deployed
within VMs unusable.

Virtual network issues according to [133], poor scalability of virtual
networks is another factor that can be exploited for a denial of service
(DoS) attack.

VM migration issues malicious VMs can take advantage of live virtual
machine migration to perform DoS attacks or achieve performance degra-
dation. The migrant attack is an example of such type of DoS attack.
In a migrant attack, a small set of compromised VMs are coordinated
to generate useless resource consumption in order to mislead the Cloud
monitoring mechanisms to trigger migration processes [150]. Since live
migrations are expensive processes, this allows attacker to waste Cloud
resources and degrade performances of other VMs. An equivalent class

20

Michele De Donno et al.

of DoS attack similar to the previous one, is Cloud-Internal Denial of
Service attacks (CIDoS) [7].
Researchers in [11] and [87], proposed to use live migration for reducing
the time of co-residency among virtual machines and hence prevent side-
channel attacks. However, it has been recently shown that it could be
possible for an adversary to slow down migration processes and there-
fore still permit the attackers to perform side-channel information steal-
ing [10]. In relation to availability, this attack (known as stalling attack)
demonstrates the possibility for co-resident adversaries to prevent migra-
tions and hence degrade performances by obstructing the performance
gain that would follow from migrations.
Cloud-Droplet-Freezing (CDF) is another type of DoS attack which is
based on the observation that if migrations of VMs are carried on during
a ﬂooding attack for the purpose of load-balancing and trying to mitigate
the attack, then it might also contribute to increase the overhead for the
Cloud and weaken even more its resource availability [138].

Application level issues By excluding application layer protocols
that support networking (which are not speciﬁc of the Cloud, and for
this reason discussed in Section 6), at this layer, we have identiﬁed only
one relevant Cloud speciﬁc issue that can impact on availability of data.

Resource accounting issues PaaS systems enable third party appli-
cations to run on a shared platform (see also Section 5.1). Resource
accounting mechanisms are required in order to monitor and limit the
applications utilization of resources. In [105], it was shown that both
Java and .Net (which can both be used to implement a PaaS system)
lacked of mechanisms for monitoring resources. This situation could have
been exploited by malicious tenants to keep instantiating objects until
the Cloud provider memory was exhausted.

Network level issues As for the previous layer, even in this case we
have identiﬁed only one Cloud speciﬁc issue located at the network level
and capable of aﬀecting Cloud availability.

Network under-provisioning issues A new form of DoS attack in Cloud
scenarios that exploits network under-provisioning is described in [73].

Multi-level issues In the next paragraph we present a class of attacks,
also known as Economic Denial of Sustainability attacks, that have the
potential to impact availability of services deployed on the Cloud. Since
this class of attacks represents a methodology to strike a Cloud system,
which can be implemented by exploiting several protocols located at more
than one layer of our architecture, we have decided to present it in this
parallel subsection and separated from the layer-oriented classiﬁcation.

Cyber-Storms Come from Clouds

21

Economic sustainability issues this category represents a set of attacks
aimed at causing ﬁnancial burden for providers oﬀering services through
the Cloud[122] with the purpose of making the Cloud economically un-
sustainable [43].
An example of such attack is Fraudulent Resource Consumption (FRC).
In this case, the adversary behaves as a normal user and requests to
the victim’s service deployed on the Cloud to perform some operations.
However, diﬀerently form a ﬂooding attack, the adversary does not seek
to congest the service provider resources; instead, he seeks to maintain a
low proﬁle of requests (i.e. produce a quantity of requests that will not be
as overwhelming as is the case for ﬂooding attacks) with the purpose of
being able to produce them for a long period of time[145]. As result, the
adversary, exploits the pay as you go and auto-scaling models for billing
to the service provider an unforeseen amount of resource utilization. The
attacker’s aim, is that, eventually, the service provider will face unex-
pected expenses which will lead to economic losses and therefore deprive
the long-term economic availability of using the Cloud [145], which in
turn may also result in a denial of service attack and make the targeted
services unavailable on the Cloud [120].
When the resource consumed by an FRC attack is the electrical energy
and power of the Cloud infrastructure, we refer to such an attack as
Energy-related Denial of Service attack (e-DoS)[41]. In this case the ad-
versary’s goal is to produce a limited amount of requests that will switch
the victim’s electronic facilities from low energy consumption states to
high energy consumption states [41].
As noted in [122], a naive solution to these type of attacks, would be to
disable the auto-scaling capabilities oﬀered by the Cloud. However, with
the lack of auto-scaling, the attack would directly result in a denial of
service and would also nullify the advantages of the Cloud environment.
Even if this category of attacks is not completely aimed at compromising
availability of services, similarly to various works in literature (e.g. [145]),
we consider it as a problem of availability. The main reason behind this
choice is related to the similarity that this attacks have with DoS attacks.
Moreover, by making the Cloud economically disadvantageous, service
provider may be pushed to remove their services from the Cloud and
hence, in a Cloud perspective, factually render such service unavailable
on it.

6 Cloud-generic security issues

In this section, we present a number of security issues that, despite being
present in Cloud computing, are also common in many other paradigms.
We consider them either because they are more dangerous in the Cloud
environment than in other models, or because it is more diﬃcult to solve
them in the Cloud environment. Moreover, we do not focus on reporting
vulnerabilities (since these are well-known), but we only report attacks
we consider worth mentioning.
Three classes of security issues are treated: network-level issues, web-
technologies issues, and multi-level issues. For each of them, the identi-
ﬁed security issues are further categorized based on the CIA properties

22

Michele De Donno et al.

Fig. 6. Summary of Cloud-speciﬁc issues
“(cid:88)”: existence of literature works indicating that the issue aﬀects the property.
“∼”: despite we found no evidence in the literature, we believe that the issue
might aﬀect the property. Exploited/Victim: how parties of the IoT architec-
ture (Figure 1) are aﬀected from the issue.

they aﬀect. Hence, the ﬂow of this section is reverted if compared to
the previous one (Sec. 5): ﬁrst, issues are grouped in relation to the ar-
chitectural level they inﬂuence (i.e., network level, web-technologies, or
multi-level), then, they are specialized in relation to the property they
aﬀect.

6.1 Network level issues

The security issues considered at this level are not speciﬁc of the Cloud
but are common to every networked system because related to vulnerabil-
ities at the transport, connection and data-link layers of the OSI-model.
Nevertheless, there exist some speciﬁc characteristics of the Cloud that
complicate the typical networking scenario and pose some challenges in
ﬁnding proper solutions to such problems.

Lack of a clear security perimeter Most network protection techniques
rely on the assumption that there exists a clear perimeter between an
internal (trusted) and an external (untrusted) environment from which
attacks are injected [115,157]. However, for a public Cloud this is not true
since attacks can also be generated from within the Cloud and aﬀect
other clients of it. Therefore, security mechanisms can not be simply
installed at the entry of the Cloud network (as it would also exhibit low
scalability [51]) but instead it is needed to assess and evaluate where
they have to be located and possibly permit tenants to deploy their own
security mechanisms [115].

Network diversity The network of a Cloud environment is characterized
by a high degree of diversity and complexity. This is mainly caused by

Cyber-Storms Come from Clouds

23

the mix of physical and virtual networks, by the diﬀerent network con-
ﬁgurations required from tenants[115] but also related to the diﬀerent
protection conﬁgurations required by all the various services deployed in
the Cloud[52]. Therefore, such complexity might impact the eﬀectiveness
of security mechanisms. For instance, if we consider the case of listed-
rules ﬁrewalls, the complexity of the Cloud network might lead to several
errors in the deﬁnition of proper rules and therefore make it diﬃcult to
deploy such security mechanisms [53];

Dynamic network topology Since Virtual Machines (VMs) deployed in
the Cloud can be migrated from one location to another, it is paramount
to also enable the relocation of defense mechanisms (such as Network
Intrusion Detection Systems, NIDSs) as the VMs move in such a way
to guarantee that the traﬃc produced by a given VM is still controlled
independently from its location [115,135].

Conﬁdentiality and Integrity issues Well-known examples of
network-level attacks that can aﬀect the conﬁdentiality and integrity
of every networked system are: packet sniﬃng, IP spooﬁng, ARP spoof-
ing and Man In The Middle attacks (MITM) [27,85,62]. Among network
level issues that can aﬀect integrity and conﬁdentiality, MITM attacks
are much more critical and deserve special attention.

Man-In-The-Middle attacks (MITM) The entities involved in a MITM
attack are two nodes seeking to communicate with each other and an
adversary having access to the communication channel connecting the
two endpoints. The adversary exploits its access to the communication
channel for intercepting and modifying messages exchanged between the
two victims, in such a way to make them believe that they are securely
communicating with each other, while, in reality, they are actually ex-
changing messages only with the attacker who can properly modify and
redirect messages to hide its presence[25].
Since the Cloud heavily relies on networks and remote communications,
it is clear that MITM attacks are paramount attacks in this scenario as
can aﬀect conﬁdentiality, integrity and also availability of data.

Availability issues We are here going to review the main attacks at
network level that can impair availability. As will be noted at the end
of the following paragraphs, even if DoS attacks are common also to
many other paradigms, their eﬀects in a Cloud environment are actually
diﬀerent and more subtle if compared to other existing models.

Distributed Denial of Service (DDoS) attacks DDoS attacks are typ-
ically performed by means of remotely controlled devices (also know
as bots or zombies) that are coordinated to simultaneously generate a
multitude of requests that will eventually ﬂood the victim’s resources
[153,93,31]. The employment of bots allows to: hide the original attacker,
make it diﬃcult to identify when an attack is being performed (i.e. it is
diﬃcult to understand that the diﬀerent incoming requests are actually

24

Michele De Donno et al.

coordinated by the same source) and generate a huge quantity of traf-
ﬁc [153,32] which makes the attack much more disruptive than a simple
SDoS [20]. To have an insight of the potential power of such attack, it is
suﬃcient to consider that the recent Mirai malware allowed to generate
traﬃc peaks of more than 620 Gbps [64,33].
Transport and network level protocols can be used to exhaust network
resources [153]. Typical examples of network-level DDoS attacks that can
aﬀect the Cloud are[93,82]:

– TCP SYN ﬂooding attack : in this case, an adversary takes advantage
of the TCP three-way handshake mechanism, for creating various
“half-opened connections” [6]. These half-opened connections will be
initially stored in a backlog queue but when its maximum size is
reached, the server will deny all subsequent connections[6] making
its services unavailable for other clients;

– UDP ﬂooding attack : in this type of attack the connectionless and
unreliable features of UDP are exploited to make the target system
unreachable [93]. An example of UDP ﬂooding attack is the UDP
storm attack [48].

– ICMP ﬂooding attacks: an example of such attacks is the Ping ﬂood-
ing attack. In a Ping ﬂooding attack the adversary seeks to congest
the victims’ network by sending massive ICMP echo requests packets
to which the victim he has to reply back [20].
In some cases, ICMP ﬂooding may also be implemented in the form
of a SMURF attack [142].

The analysis performed in [82] demonstrates that the aforementioned at-
tacks are a considerable threats for Cloud computing. Indeed, it is shown
that the Cloud can be both the victim of those attacks but it could also
be exploited to perform them (an example of malicious Cloud exploita-
tion are botClouds[12], i.e. botnets deployed in the Cloud environment).
Moreover, the authors of [146], have identiﬁed an increase in the num-
ber of occurrences of such attacks in Cloud environments. According to
[122] and [146], the reason for that may be rooted in the intrinsic char-
acteristics of the Cloud which, in a certain way, can support the success
of DDoS attacks. For this reason, in [146], the authors correlate DDoS
attacks with the Cloud essential characteristics in order to discuss the
reasons that make Cloud computing a juicy target (but even a source)
of such attacks.
The authors of [59], identiﬁed two types of ﬂooding attacks eﬀects which
are speciﬁc of the Cloud:

– Direct DoS : when a service deployed in the Cloud is targeted by
a ﬂooding attack, the Cloud provider will increase the victim’s re-
sources for allowing the victim to hold up against the attack. How-
ever, by doing so, the Cloud provider also supports the attack since
enables the adversary to impair an entire service availability by just
ﬂooding one single node that is part of the service;

– Indirect DoS : a ﬂooding attack toward a service located in the Cloud,
does not only aﬀect the direct target of it, but it can also impair the
availability of all the other services that are sharing the same ma-
chine with the victim. To demonstrate this, the authors of [120,121]
performed system analysis and simulations to show that diﬀerent

Cyber-Storms Come from Clouds

25

Fig. 7. Summary of Cloud-generic issues
“(cid:88)”: existence of literature works indicating that the issue aﬀects the property.
“∼”: despite we found no evidence in the literature, we believe that the issue
might aﬀect the property. Exploited/Victim: how parties of the IoT architec-
ture (Figure 1) are aﬀected from the issue.

Cloud stakeholders are aﬀected by Cloud DoS attacks even if they
are not explicitly targeted as victims.

6.2 Web technologies issues

SaaS services are typically delivered to end-users by means of web browsers
[85], while PaaS services are typically accessed through Web Services
[59], [8]. It follows from the use of these access technologies that web
technology weaknesses are also inherited by the Cloud.

Conﬁdentiality issues We report here some of the main conﬁden-
tiality issues that are rooted at web-technology layer.

Cross-site scripting (XSS) attacks depending on the way it is per-
formed, diﬀerent specialization of this attack exist [49]. However, the
general idea behind an XSS attack is to exploit web-server vulnerabili-
ties to inject JavaScript code within web-pages that are later going to
be downloaded by victims. Once the web-page is accessed, the mali-
cious JavaScript code therein contained will be executed on the client’s
browser[49], [113]. This threat can potentially allow to steal cookies [97]
(and subsequently lead to session hijacking [29]), steal user’s access cre-
dentials by placing forged input forms within targeted web sites (i.e.
phishing attack) or set up keystroke based attacks which can allow the at-
tacker to infer passwords or other credential[49]. All the aforementioned
attacks have the common consequence of allowing an unauthorized party
to access victims data.

Injection ﬂaws in these types of attacks, input sources are exploited
to inject malicious input data that, once interpreted, can inﬂuence the

26

Michele De Donno et al.

execution of back-end operations and change their expected results [127],
[45]. This type of attack is particularly relevant in SaaS applications
where data of diﬀerent users are stored in common structures and where
intrusion risks are ampliﬁed [127]. Various examples of injection attacks
exist: SQL injection, command injection (also known as OS injection),
XML injection and many others. As regards conﬁdentiality, injection
ﬂaws can lead to unauthorized access of data and information disclosure
[94].

Man-in-the-Browser attack (MitB) Man in the Browser attacks are
similar to Man-In-The-Middle-Attacks. The diﬀerence among them is re-
lated to the level in which they operate to intercept data and perform
the attack. While Man-In-The-Middle attacks are typically performed
at network level, Man-in-the-Browser attacks are performed at applica-
tion level [62]. By operating at the application level, these attacks have
the capability of stealing conﬁdential information that transits through
browsers [88].

Integrity issues The focus in the next paragraphs is on web-related
attacks that can impair integrity of data and elaboration.

Cross-site request forgery (CSRF) attack when users have an active
connection with a trusted web server and are simultaneously visiting an-
other not trusted web page, an attacker owning the latter can exploit the
session information contained in the users’ browsers to forge unautho-
rized requests toward the trusted server as if they have been requested
by the victim [111,116]. Since operations performed are not actually re-
quested by the real owner of data, such an attack can aﬀect the integrity
of user’s data contained in the Cloud.

Hidden ﬁeld manipulation and cookie poisoning due to the stateless
nature of HTTP, hidden ﬁelds and cookies are usually adopted to keep
track of sessions. Hence, a modiﬁcation of their content can allow to
inject malicious data within web applications and consequently break the
integrity of data stored in web servers [74], [127]. In some cases, cookie
poisoning attacks are also performed with the objective of obtaining
access to unauthorized resources [151].

Injection ﬂaws these attacks (see also conﬁdentiality paragraph in Sub-
section 6.2) can also aﬀect the integrity of data and cause data corruptions[94].

Man-in-the-Browser attack (MitB) In Main-in-the-browser attacks
(see also conﬁdentiality paragraph in Section 6.2) a trojan horse is placed
within victim’s host (typically in its browser, but it is not always the case
as some variations exist) which allows the intruder to intercept and mod-
ify network traﬃc [99]. Once a valid session has started, the malware can
tamper data sent from both the user and remote server in such a way to
alter requests and responses as he prefers while potentially leaving both
parties unaware of such situation [99].

Cyber-Storms Come from Clouds

27

XML Signature Element Wrapping this type of attack allows to break
the integrity of SOAP messages when the XML Signature standard is
naively used[62]. Indeed, starting from a signed SOAP message it is pos-
sible to wrap it within the body of a new message and let the web service
believe that it has been generated by the legitimate user [59]. In the Cloud
context, Amazon EC2 has been in the past identiﬁed vulnerable to this
attack [59].

Metadata Spooﬁng attack the WSDL standard is used to describe ser-
vices in the SOAP model. A metadata spooﬁng attack aims at modifying
a service WSDL in such a way that requests created according to the ma-
licious WSDL result in elaborations diﬀerent from those intended by the
designers of the attacked web service [59].

Availability issues The following paragraphs present some of the
most important attacks on availability that take advantage of web tech-
nology vulnerabilities. We have chosen to not emphasize the diﬀerence
among SDoS and DDoS attacks, however, we distinguish between the
type of attacks: application-enabled DoS and ﬂooding attacks. In rela-
tion to such attacks, it should be noted that the discussion we develop
here is an extension of subsection 6.1 where, in this case, the focus is
on denial of service attacks that are performed through exploitation of
application level protocols.

Application-bug level DoS rather than representing a speciﬁc type
of attack, this entry represents a set of DoS attacks which are per-
formed by exploiting protocol vulnerabilities, system weaknesses, mis-
conﬁgurations or lack of updates[93]. What distinguishes this type of
attacks from from other types of DoS (such as ﬂooding attacks) is that
they can usually be easily solved with the installation of patches solving
the identiﬁed vulnerabilities [16]. Examples of this type of issues are:

– HTTP PRAGMA and HTTP POST attacks: in both of them, the
adversary, takes advantage of speciﬁc HTTP requests in order to
keep consuming and maintaining control of much more resources
than actually needed [30];

– Coercive parsing: once received, SOAP messages have to be parsed
by web services. However, in some cases such operation might be-
come highly time-consuming and complex due to XML[58]. There-
fore, attacker may create deeply nested XML structures in such a
way to exhaust computational resources [58]. Hence, according to the
deﬁnition of resource depletion attack given in [125,112], we identify
this type of attack as a DoS attack. In [42], this type of attack has
been used as a case study for performing Economic Denial of Sus-
tainability attacks (see also Section 5.3) within Cloud environments;
– Chained encrypted keys: WS-Security describes enhancement for pro-
viding integrity and conﬁdentiality of SOAP messages by means of
ﬂexible mechanisms which can be negotiated by the parties involved
in the communication. An attacker can take advantage of such ﬂex-
ibility to attack service provider availability by creating a SOAP

28

Michele De Donno et al.

message containing a nested sequence of encrypted keys which the
web service need to recursively decrypt in order to ﬁnd the ﬁnal key
and perform the elaboration[58]. A similar attack which exploits the
same vulnerability is nested encryption blocks [58].

Flooding attacks Diﬀerently from the other category of DoS attacks, in
this case the attacker does not exploit any vulnerability at application
level but seek to exhaust the target resources by producing an over-
whelming quantity of requests [93]. Some examples of these attacks that
can aﬀect the Cloud are:

– HTTP ﬂooding attack : in this type of DoS attack, the adversary’s
goal is to generate large amounts of HTTP GET (or HTTP POST)
requests that will eventually ﬁll-up the victim’s request queues[118,23,93].
As the victim’s resources have been occupied to satisfy requests from
the attacker, this will lead to a rejection of all the subsequent requests
performed by honest users;

– XML Oversize Payload attack : in an oversize payload attack a sat-
uration of available resources is achieved by submitting to service
providers large queries[58]. Since XML ﬁles are characterized by sig-
niﬁcant processing overhead they might be exploited to saturate re-
sources and compromise services availability [62,58].

Injection ﬂaws (introduced in subsection 6.2): data loss or denial of
access can be performed by means of injection ﬂaws[94] with the conse-
quence of compromising data and service availability.

6.3 Multi-level issues

In this category we present one type of issue that is not speciﬁc of any
layer of our reference architecture but that according to its speciﬁc im-
plementation it might embrace more than one level. Moreover it is not
even speciﬁc of the Cloud environment however it has the character-
istic of being tailored to the environment it attacks, and therefore its
implementation might in reality be a form of Cloud speciﬁc attack.

Conﬁdentiality issues

Advanced Persistent Threats two are the features that make Advanced
Persistent Threats (APT) diﬀerent from viruses and worms: 1) they are
tailored for a speciﬁc target user and 2) the attacker is patient, i.e. willing
to invest lots of resources and time for accomplishing his mission. After
a ﬁrst phase of information gathering aimed at identifying the victim’s
behaviors, network and defenses, the enemy develops a tailored attack
with the ultimate objective of loading a malware into the victim’s target
machine in such a way to extract its information [124,22].
The Cloud could be aﬀected by such types of attacks in two possible ways:
it can either be exploited for performing the attack by silently transmit-
ting information from the victim to the attacker, i.e. covert channels
enabled by the Cloud are used [19], or it could be directly attacked and

Cyber-Storms Come from Clouds

29

used as platform for hosting malware[124] with the objective of stealing
Cloud users’ data for long period of times and without being noticed
[144]. The last case is particularly dangerous for a Cloud environment
because once a user gets infected it can also compromise other services
and users[124].

7 Conclusion and Future work

In this paper, the security of IoT has been analyzed from a speciﬁc per-
spective: Cloud computing considered as a core component of the IoT
architecture. The motivation behind this work resides on the evidence
that, today, IoT devices strongly rely on the Cloud, where data analytics
and intelligence reside. Therefore, addressing security of IoT devices and
Cloud computing as diﬀerent concerns is no longer enough to tackle se-
curity issues of the IoT, in its broader meaning. As a result, we have pro-
vided an up-to-date and well-structured survey of the security issues of
Cloud computing in the IoT era. The analysis has been based on a struc-
tured approach, distinguishing between Cloud-speciﬁc and Cloud-generic
security issues, and classifying both classes from two angles: the aﬀected
Cloud architectural layer and the impacted CIA security property (i.e.,
conﬁdentiality, integrity, availability). We believe that this classiﬁcation
is important to have a clear picture of where security issues occur and
what their potential impact is. As a result, our analysis points out that,
since there is no IoT without the Cloud, we cannot secure IoT without
securing the Cloud. Thus, we consider this work as a ﬁrst step toward
the investigation of IoT security in its broader meaning.
This work can be extended in diﬀerent ways. For instance, it could be
useful to add a risk analysis, specifying the risk associated with each
vulnerability. Moreover, due to the broad nature of the topic covered
in this paper, we have tried to keep its scope very well focused, con-
sidering only the fundamental and well-known CIA security properties.
Nevertheless, it would be interesting to extend the analysis by taking into
consideration other relevant security properties, such as authenticity and
accountability.
Looking at Microservices as an architectural approach for creating cloud
applications, where each application is designed and built as a set of
services deﬁned by business capabilities, the analysis could expand into
this domain and the related programming languages [47]. Microservices
and IoT, and related security challenges, have certainly lot in common
with what described in his work, but certain peculiarities would deserve
a separate discussion. Formal approaches and rigorous semantics have
also not been considered in this work despite their importance for Cloud
and distributed/concurrent systems in general [147,80,38].

References

1. Glossary of terms related to Fog Computing. Accessed: 2018-10-10.
https://www.statista.com/statistics/471264/iot-
2. IoTdevs.
number-of-connected-devices-worldwide/. Accessed: 2019-21-1.

30

Michele De Donno et al.

3. S. P. Ahuja and D. Komathukattil. A survey of the state of cloud
security. Network and Communication Technologies, 1(2):66, 2012.
4. M. Aiash, G. Mapp, and O. Gemikonakli. Secure live virtual ma-
chines migration: issues and solutions.
In Advanced Information
Networking and Applications Workshops (WAINA), 2014 28th In-
ternational Conference on, pages 160–165. IEEE, 2014.

5. J. Aikat, A. Akella, J. S. Chase, A. Juels, M. K. Reiter, T. Ris-
tenpart, V. Sekar, and M. Swift. Rethinking security in the era of
cloud computing. IEEE Security Privacy, 15(3):60–69, 2017.

6. M. S. Al-Hawawreh. Syn ﬂood attack detection in cloud environ-
ment based on tcp/ip header statistical features. In 2017 8th In-
ternational Conference on Information Technology (ICIT), pages
236–243, May 2017.

7. S. Alariﬁ and S. D. Wolthusen. Robust coordination of cloud-
internal denial of service attacks. In 2013 International Conference
on Cloud and Green Computing, pages 135–142, Sept 2013.

8. M. Almorsy, J. Grundy, and I. Müller. An analysis of the cloud
computing security problem. In "An analysis of the cloud computing
security problem." the proc. of the 2010 Asia Paciﬁc Cloud Work-
shop, 2010.

9. C. A. Ardagna, R. Asal, E. Damiani, and Q. H. Vu. From secu-
rity to assurance in the cloud: A survey. ACM Computing Surveys
(CSUR), 48(1):2, 2015.

10. A. Atya, A. Aqil, K. Khalil, Z. Qian, S. V. Krishnamurthy, and T. F.
La Porta. Stalling live migrations on the cloud. In 11th USENIX
Workshop on Oﬀensive Technologies (WOOT 17). USENIX Asso-
ciation, 2017.

11. A. O. F. Atya, Z. Qian, S. V. Krishnamurthy, T. L. Porta, P. Mc-
Daniel, and L. Marvel. Malicious co-residency on the cloud: At-
tacks and defense. In IEEE INFOCOM 2017 - IEEE Conference
on Computer Communications, pages 1–9, May 2017.

12. H. Badis, G. Doyen, and R. Khatoun. Understanding botclouds
from a system perspective: a principal component analysis.
In
Network Operations and Management Symposium (NOMS), 2014
IEEE, pages 1–9. IEEE, 2014.

13. S. Bahram, X. Jiang, Z. Wang, M. Grace, J. Li, D. Srinivasan,
J. Rhee, and D. Xu. Dksm: Subverting virtual machine introspec-
tion for fun and proﬁt. In 2010 29th IEEE Symposium on Reliable
Distributed Systems, pages 82–91, Oct 2010.

14. M. Balduzzi, J. Zaddach, D. Balzarotti, E. Kirda, and S. Loureiro.
A security analysis of amazon’s elastic compute cloud service. In
Proceedings of the 27th Annual ACM Symposium on Applied Com-
puting, SAC ’12, pages 1427–1434, New York, NY, USA, 2012.
ACM.

15. A. Baumann, M. Peinado, and G. Hunt. Shielding applications from
an untrusted cloud with haven. ACM Transactions on Computer
Systems (TOCS), 33(3):8, 2015.

16. H. Beitollahi and G. Deconinck. Analyzing well-known counter-
measures against distributed denial of service attacks. Computer
Communications, 35(11):1312–1332, 2012.

Cyber-Storms Come from Clouds

31

17. A. Botta, W. de Donato, V. Persico, and A. Pescapé. On the inte-
gration of cloud computing and internet of things. In 2014 Inter-
national Conference on Future Internet of Things and Cloud, pages
23–30, Aug 2014.

18. C. Cachin, I. Keidar, and A. Shraer. Trusting the cloud. SIGACT

News, 40(2):81–86, 2009.

19. L. Caviglione, M. Podolski, W. Mazurczyk, and M. Ianigro. Covert
channels in personal cloud storage services: The case of drop-
box.
IEEE Transactions on Industrial Informatics, 13(4):1921–
1931, Aug 2017.

20. S. Chapade, K. Pandey, and D. Bhade. Securing cloud servers
against ﬂooding based ddos attacks.
In Communication Systems
and Network Technologies (CSNT), 2013 International Conference
on, pages 524–528. IEEE, 2013.

21. D. Chen and H. Zhao. Data security and privacy protection issues in
cloud computing. In Computer Science and Electronics Engineering
(ICCSEE), 2012 International Conference on, volume 1, pages 647–
651. IEEE, 2012.

22. P. Chen, L. Desmet, and C. Huygens. A study on advanced persis-
tent threats. In B. De Decker and A. Zúquete, editors, Communi-
cations and Multimedia Security, pages 63–72, Berlin, Heidelberg,
2014. Springer Berlin Heidelberg.

23. J. Choi, C. Choi, B. Ko, and P. Kim. A method of ddos attack
detection using http packet pattern and rule engine in cloud com-
puting environment. Soft Computing, 18(9):1697–1703, 2014.
24. M. Conti, A. Dehghantanha, K. Franke, and S. Watson. Internet of
things security and forensics: Challenges and opportunities. Future
Generation Computer Systems, 78:544 – 546, 2018.

25. M. Conti, N. Dragoni, and V. Lesyk. A survey of man in the middle
attacks. IEEE Communications Surveys & Tutorials, 18(3):2027–
2051.

26. A. Cook, M. Robinson, M. A. Ferrag, L. A. Maglaras, Y. He,
K. Jones, and H. Janicke. Internet of Cloud: Security and Privacy
Issues, pages 271–301. Springer International Publishing, Cham,
2018.

27. L. Coppolino, S. D’Antonio, G. Mazzeo, and L. Romano. Cloud
security: Emerging threats and current solutions. Computers &
Electrical Engineering, 59:126–140, 2017.

28. C. Dabrowsk and K. Mills. Vm leakage and orphan control in
open-source clouds. In Cloud Computing Technology and Science
(CloudCom), 2011 IEEE Third International Conference on, pages
554–559. IEEE, 2011.

29. I. Dacosta, S. Chakradeo, M. Ahamad, and P. Traynor. One-
time cookies: Preventing session hijacking attacks with stateless
authentication tokens. ACM Transactions on Internet Technology
(TOIT), 12(1):1, 2012.

30. Y. G. Dantas, V. Nigam, and I. E. Fonseca. A selective defense for
application layer ddos attacks. In 2014 IEEE Joint Intelligence and
Security Informatics Conference, pages 75–82, Sept 2014.

32

Michele De Donno et al.

31. M. De Donno, N. Dragoni, A. Giaretta, and A. Spognardi. A Tax-
In Proceedings
onomy of Distributed Denial of Service Attacks.
of the International Conference on Information Society (i-Society),
2017.

32. M. De Donno, N. Dragoni, A. Giaretta, and A. Spognardi. Analysis
of DDoS-capable IoT malwares. In Proceedings of the 2017 Feder-
ated Conference on Computer Science and Information Systems,
2017.

33. M. De Donno, N. Dragoni, A. Giaretta, and A. Spognardi. DDoS-
Capable IoT Malwares: Comparative Analysis and Mirai Investiga-
tion. Security and Communication Networks, 2018, 2018.

34. S. D. C. di Vimercati, S. Foresti, G. Livraga, S. Paraboschi, and
P. Samarati. Conﬁdentiality protection in large databases. In A
Comprehensive Guide Through the Italian Database Research Over
the Last 25 Years, pages 457–472. Springer, 2018.

35. M. Díaz, C. Martín, and B. Rubio. State-of-the-art, challenges,
and open issues in the integration of internet of things and cloud
computing. Journal of Network and Computer Applications, 67:99–
117, 2016.

36. M. D. Donno, N. Dragoni, A. Giaretta, and M. Mazzara. Antibiotic:
Protecting iot devices against ddos attacks. In Proceedings of 5th
International Conference in Software Engineering for Defence Ap-
plications - SEDA 2016, Rome, Italy, May 10th, 2016, pages 59–72,
2016.

37. N. Dragoni, A. Giaretta, and M. Mazzara. The Internet of Hack-
able Things. In Proceedings of the 5th International Conference in
Software Engineering for Defense Applications (SEDA’16), LNCS.,
LNCS. Springer, 2018.

38. N. Dragoni and M. Mazzara. A formal semantics for the WS-
BPEL recovery framework - the pi-calculus way. In WS-FM, volume
6194 of Lecture Notes in Computer Science, pages 92–109. Springer,
2009.

39. A. J. Duncan, S. Creese, and M. Goldsmith.

Insider attacks in
In Trust, Security and Privacy in Computing
cloud computing.
and Communications (TrustCom), 2012 IEEE 11th International
Conference on, pages 857–862. IEEE, 2012.

40. D. A. B. Fernandes, L. F. B. Soares, J. V. Gomes, M. M. Freire, and
P. R. M. Inácio. Security issues in cloud environments: a survey.
International Journal of Information Security, 13(2):113–170, Apr
2014.

41. M. Ficco and F. Palmieri. Introducing fraudulent energy consump-
tion in cloud infrastructures: a new generation of denial-of-service
attacks. IEEE Systems Journal, 11(2):460–470, 2017.

42. M. Ficco and M. Rak. Stealthy denial of service strategy in cloud
computing. IEEE Transactions on Cloud Computing, 3(1):80–94,
Jan 2015.

43. M. Ficco and M. Rak. Economic denial of sustainability mitiga-
tion in cloud computing. In C. Rossignoli, M. Gatti, and R. Agri-
foglio, editors, Organizational Innovation and Change, pages 229–
238, Cham, 2016. Springer International Publishing.

Cyber-Storms Come from Clouds

33

44. M. Goodrich and R. Tamassia. Introduction to Computer Security.
Pearson Education, Inc., Boston, Massachusetts, USA, 2011.
45. B. Grobauer, T. Walloschek, and E. Stocker. Understanding cloud
computing vulnerabilities. IEEE Security & Privacy, 9(2):50–57,
2011.

46. Z. Guan, J. Li, L. Wu, Y. Zhang, J. Wu, and X. Du. Achieving
eﬃcient and secure data acquisition for cloud-supported internet of
things in smart grid. IEEE Internet of Things Journal, 4(6):1934–
1944, Dec 2017.

47. C. Guidi, I. Lanese, M. Mazzara, and F. Montesi. Microservices: A
language-based approach. In Present and Ulterior Software Engi-
neering., pages 217–225. 2017.

48. B. Gupta and O. P. Badve. Taxonomy of dos and ddos attacks and
desirable defense mechanism in a cloud computing environment.
Neural Computing and Applications, 28(12):3655–3682, 2017.
49. S. Gupta and B. B. Gupta. Cross-site scripting (xss) attacks and
defense mechanisms: classiﬁcation and state-of-the-art.
Interna-
tional Journal of System Assurance Engineering and Management,
8(1):512–530, 2017.

50. K. Hashizume, D. G. Rosado, E. Fernández-Medina, and E. B. Fer-
nandez. An analysis of security issues for cloud computing. Journal
of Internet Services and Applications, 4(1):5, Feb 2013.

51. J. He, M. Dong, K. Ota, M. Fan, and G. Wang. Netseccc: A scalable
and fault-tolerant architecture for cloud computing security. Peer-
to-Peer Networking and Applications, 9(1):67–81, Jan 2016.

52. J. He, K. Ota, M. Dong, L. T. Yang, M. Fan, G. Wang, and S. S.
Yau. Customized network security for cloud service. IEEE Trans-
actions on Services Computing, PP(99):1–1, 2017.

53. X. He, T. Chomsiri, P. Nanda, and Z. Tan. Improving cloud network
security using the tree-rule ﬁrewall. Future generation computer
systems, 30:116–126, 2014.

54. P. Helland. Condos and clouds. Commun. ACM, 56(1):50–59, 2013.
55. G. Irazoqui, M. S. Inci, T. Eisenbarth, and B. Sunar. Wait a minute!
a fast, cross-vm attack on aes. In International Workshop on Recent
Advances in Intrusion Detection, pages 299–319. Springer, 2014.
56. M. S. Islam, M. Kuzu, and M. Kantarcioglu. Access pattern disclo-
sure on searchable encryption: Ramiﬁcation, attack and mitigation.
In Ndss, volume 20, page 12, 2012.

57. A. Jasti, P. Shah, R. Nagaraj, and R. Pendse. Security in multi-
tenancy cloud. In 44th Annual 2010 IEEE International Carnahan
Conference on Security Technology, pages 35–41, Oct 2010.

58. M. Jensen, N. Gruschka, and R. Herkenhöner. A survey of at-
tacks on web services. Computer Science-Research and Develop-
ment, 24(4):185, 2009.

59. M. Jensen, J. Schwenk, N. Gruschka, and L. L. Iacono. On tech-
nical security issues in cloud computing.
In Cloud Computing,
2009. CLOUD’09. IEEE International Conference on, pages 109–
116. IEEE, 2009.

60. X. Jiang, X. Wang, and D. Xu. Stealthy malware detection through
vmm-based "out-of-the-box" semantic view reconstruction. In Pro-

34

Michele De Donno et al.

ceedings of the 14th ACM Conference on Computer and Commu-
nications Security, CCS ’07, pages 128–138, New York, NY, USA,
2007. ACM.

61. T. Karnwal, T. Sivakumar, and G. Aghila. A comber approach to
protect cloud computing against xml ddos and http ddos attack.
In Electrical, Electronics and Computer Science (SCEECS), 2012
IEEE Students’ Conference on, pages 1–5. IEEE, 2012.

62. D. Kim and M. A. Vouk. A survey of common security vulnera-
bilities and corresponding countermeasures for saas. In Globecom
Workshops (GC Wkshps), 2014, pages 59–63. IEEE, 2014.

63. P. Kocher, D. Genkin, D. Gruss, W. Haas, M. Hamburg, M. Lipp,
S. Mangard, T. Prescher, M. Schwarz, and Y. Yarom. Spectre at-
tacks: Exploiting speculative execution. ArXiv e-prints, 2018.
64. C. Kolias, G. Kambourakis, A. Stavrou, and J. Voas. Ddos in the

iot: Mirai and other botnets. Computer, 50(7):80–84, 2017.

65. J. Li, B. Li, T. Wo, C. Hu, J. Huai, L. Liu, and K. Lam. Cyber-
guarder: A virtualization security assurance architecture for green
cloud computing. Future Generation Computer Systems, 28(2):379
– 390, 2012.

66. X. Liang, S. Shetty, L. Zhang, C. Kamhoua, and K. Kwiat. Man
in the cloud (mitc) defender: Sgx-based user credential protec-
tion for synchronization applications in cloud computing platform.
In 2017 IEEE 10th International Conference on Cloud Computing
(CLOUD), pages 302–309, June 2017.

67. X. Liao, S. Alrwais, K. Yuan, L. Xing, X. Wang, S. Hao, and
R. Beyah. Lurking malice in the cloud: Understanding and de-
tecting cloud repository as a malicious service. In Proceedings of
the 2016 ACM SIGSAC Conference on Computer and Communi-
cations Security, CCS ’16, pages 1541–1552, New York, NY, USA,
2016. ACM.

68. J. Lin, W. Yu, N. Zhang, X. Yang, H. Zhang, and W. Zhao. A
survey on Internet of Things: Architecture, enabling technologies,
security and privacy, and applications. IEEE Internet of Things
Journal, 4(5):1125–1142, 2017.

69. D. S. Linthicum. Paas death watch?

IEEE Cloud Computing,

4(1):6–9, Jan 2017.

70. M. Lipp, M. Schwarz, D. Gruss, T. Prescher, W. Haas, S. Mangard,
P. Kocher, D. Genkin, Y. Yarom, and M. Hamburg. Meltdown.
ArXiv e-prints, 2018.

71. F. Liu, J. Tong, J. Mao, R. Bohn, J. Messina, L. Badger, and
D. Leaf. NIST Cloud Computing Reference Architecture. Tech-
nical Report 2011, 2011.

72. F. Liu, Y. Yarom, Q. Ge, G. Heiser, and R. B. Lee. Last-level cache
side-channel attacks are practical. In Security and Privacy (SP),
2015 IEEE Symposium on, pages 605–622. IEEE, 2015.

73. H. Liu. A new form of dos attack in a cloud and its avoidance
mechanism. In Proceedings of the 2010 ACM Workshop on Cloud
Computing Security Workshop, CCSW ’10, pages 65–76, New York,
NY, USA, 2010. ACM.

Cyber-Storms Come from Clouds

35

74. V. B. Livshits and M. S. Lam. Finding security vulnerabilities in
java applications with static analysis. In USENIX Security Sympo-
sium, volume 14, pages 18–18, 2005.

75. F. Lombardi and R. Di Pietro. Secure virtualization for cloud com-

puting. J. Netw. Comput. Appl., 34(4):1113–1122, 2011.

76. S. Luo, Z. Lin, X. Chen, Z. Yang, and J. Chen. Virtualization secu-
rity for cloud computing service. In Cloud and Service Computing
(CSC), 2011 International Conference on, pages 174–179. IEEE,
2011.

77. R. Mahmud, R. Kotagiri, and R. Buyya. Fog Computing: A Taxon-
omy, Survey and Future Directions, pages 103–130. Springer Sin-
gapore, Singapore, 2018.

78. A. Malik and H. Om. pages 1–24. Springer International Publishing,

2018.

79. P. Martins, L. Sousa, and A. Mariano. A survey on fully homo-
morphic encryption: An engineering perspective. ACM Computing
Surveys (CSUR), 50(6):83, 2017.

80. M. Mazzara. Towards Abstractions for Web Services Composition.

Ph.D. thesis, University of Bologna, 2006.

81. P. Mell, T. Grance, et al. The NIST Deﬁnition of Cloud Computing.

Technical report, 2011.

82. R. Miao, R. Potharaju, M. Yu, and N. Jain. The dark menace: Char-
acterizing network-based attacks in the cloud.
In Proceedings of
the 2015 Internet Measurement Conference, pages 169–182. ACM,
2015.

83. A. Mihovska and M. Sarkar. Smart Connectivity for Internet of
Things (IoT) Applications, pages 105–118. Springer International
Publishing, 2018.

84. A. Milenkoski, B. D. Payne, N. Antunes, M. Vieira, and S. Kounev.
Hinjector: injecting hypercall attacks for evaluating vmi-based in-
trusion detection systems. In Poster Reception at the 2013 Annual
Computer Security Applications Conference (ACSAC 2013), 2013.
85. C. Modi, D. Patel, B. Borisaniya, A. Patel, and M. Rajarajan. A
survey on security issues and solutions at diﬀerent layers of cloud
computing. The journal of supercomputing, 63(2):561–592, 2013.

86. C. Modi, D. Patel, B. Borisaniya, H. Patel, A. Patel, and M. Rajara-
jan. A survey of intrusion detection techniques in cloud. Journal
of Network and Computer Applications, 36(1):42–57, 2013.

87. S.-J. Moon, V. Sekar, and M. K. Reiter. Nomad: Mitigating arbi-
trary cloud side channels via provider-assisted migration. In Pro-
ceedings of the 22nd acm sigsac conference on computer and com-
munications security, pages 1595–1606. ACM, 2015.

88. B. Morrow. Byod security challenges: control and protect your most

sensitive data. Network Security, 2012(12):5–8, 2012.

89. I. Nakouri, M. Hamdi, and T. H. Kim. A new biometric-based
security framework for cloud storage.
In 2017 13th Interna-
tional Wireless Communications and Mobile Computing Conference
(IWCMC), pages 390–395, June 2017.

90. M. Nalin, I. Baroni, and M. Mazzara. A holistic infrastructure to
support elderlies’ independent living. Encyclopedia of E-Health and
Telemedicine, IGI Global, 2016.

36

Michele De Donno et al.

91. Online Oxford Dictionary. https://en.oxforddictionaries.com/

definition/internet_of_things. Accessed: 2018-03-12.

92. OpenFog Consortium Architecture Working Group and others.
OpenFog Reference architecture for Fog Computing. OPFRA001,
20817, February 2017.

93. O. Osanaiye, K.-K. R. Choo, and M. Dlodlo. Distributed denial of
service (ddos) resilience in cloud: review and conceptual cloud ddos
mitigation framework. Journal of Network and Computer Applica-
tions, 67:147–165, 2016.

94. OWASP. Owasp top 10 - 2017, the ten most critical web application

security risks. Technical report, 2017.

95. S. Pearson. Privacy, security and trust in cloud computing.

In
Privacy and Security for Cloud Computing, pages 3–42. Springer,
2013.

96. D. Perez-Botero, J. Szefer, and R. B. Lee. Characterizing hyper-
visor vulnerabilities in cloud computing servers. In Proceedings of
the 2013 International Workshop on Security in Cloud Comput-
ing, Cloud Computing ’13, pages 3–10, New York, NY, USA, 2013.
ACM.

97. R. Putthacharoen and P. Bunyatnoparat. Protecting cookies from
cross site script attacks using dynamic cookies rewriting technique.
In Advanced Communication Technology (ICACT), 2011 13th In-
ternational Conference on, pages 1090–1094. IEEE, 2011.

98. N. Rakotondravony, B. Taubmann, W. Mandarawi, E. Weishäupl,
P. Xu, B. Kolosnjaji, M. Protsenko, H. de Meer, and H. P. Reiser.
Classifying malware attacks in iaas cloud environments. Journal of
Cloud Computing, 6(1):26, Dec 2017.

99. S. Rauti and V. Leppänen. Man-in-the-browser attacks in modern
web browsers. In Emerging Trends in ICT Security, pages 469–480.
Elsevier, 2014.

100. H. U. Rehman, M. Asif, and M. Ahmad. Future applications and
research challenges of iot.
In 2017 International Conference on
Information and Communication Technologies (ICICT), pages 68–
74, Dec 2017.

101. K. Ren, C. Wang, and Q. Wang. Security challenges for the public

cloud. IEEE Internet Computing, 16(1):69–73, Jan 2012.

102. A. R. Riddle and S. M. Chung. A survey on the security of hy-
pervisors in cloud computing. In Distributed Computing Systems
Workshops (ICDCSW), 2015 IEEE 35th International Conference
on, pages 100–104. IEEE, 2015.

103. T. Ristenpart, E. Tromer, H. Shacham, and S. Savage. Hey, you,
get oﬀ of my cloud: Exploring information leakage in third-party
In Proceedings of the 16th ACM Conference on
compute clouds.
Computer and Communications Security, CCS ’09, pages 199–212,
New York, NY, USA, 2009. ACM.

104. F. Rocha, T. Gross, and A. v. Moorsel. Defense-in-depth against
malicious insiders in the cloud. In 2013 IEEE International Con-
ference on Cloud Engineering (IC2E), pages 88–97, March 2013.

105. L. Rodero-Merino, M. Vaquero, Luis, E. Caron, A. Muresan, and
F. Desprez. Building safe paas clouds: A survey on security in

Cyber-Storms Come from Clouds

37

multitenant software platforms. computers & security, 31(1):96–
108, 2012.

106. C. Rong, S. T. Nguyen, and M. G. Jaatun. Beyond lightning: A
survey on security challenges in cloud computing. Computers &
Electrical Engineering, 39(1):47 – 54, 2013. Special issue on Recent
Advanced Technologies and Theories for Grid and Cloud Comput-
ing and Bio-engineering.

107. D. Salikhov, K. Khanda, K. Gusmanov, M. Mazzara, and
N. Mavridis. Jolie good buildings: Internet of things for smart build-
ing infrastructure supporting concurrent apps utilizing distributed
microservices. In Proceedings of the 1st International conference on
Convergent Cognitive Information Technologies, pages 48–53, 2016.
108. D. Salikhov, K. Khanda, K. Gusmanov, M. Mazzara, and
N. Mavridis. Microservice-based iot for smart buildings. In Proceed-
ings of the 31st International Conference on Advanced Information
Networking and Applications Workshops (WAINA), 2017.

109. P. Samarati, S. D. C. di Vimercati, S. Murugesan, and I. Bojanova.
Cloud security: Issues and concerns. Encyclopedia on Cloud Com-
puting, pages 1–14, 2016.

110. P. Schoo, V. Fusenig, V. Souza, M. Melo, P. Murray, H. Debar,
H. Medhioub, and D. Zeghlache. Challenges for cloud network-
ing security. In K. Pentikousis, R. Agüero, M. García-Arranz, and
S. Papavassiliou, editors, Mobile Networks and Management, pages
298–313, Berlin, Heidelberg, 2011. Springer Berlin Heidelberg.
111. H. Shahriar and M. Zulkernine. Client-side detection of cross-site
request forgery attacks.
In Software Reliability Engineering (IS-
SRE), 2010 IEEE 21st International Symposium on, pages 358–367.
IEEE, 2010.

112. P. Shamsolmoali and M. Zareapoor. Statistical-based ﬁltering sys-
tem against ddos attacks in cloud computing. In Advances in Com-
puting, Communications and Informatics (ICACCI, 2014 Interna-
tional Conference on, pages 1234–1239. IEEE, 2014.

113. L. K. Shar and H. B. K. Tan. Defending against cross-site scripting

attacks. Computer, 45(3):55–62, 2012.

114. J. Shetty, A. M R, and G. Shobha. A survey on techniques of secure

live migration of virtual machine. 39:34–39, 02 2012.

115. S. Shin and G. Gu. Cloudwatcher: Network security monitoring
using openﬂow in dynamic cloud networks (or: How to provide se-
In Network Protocols
curity monitoring as a service in clouds?).
(ICNP), 2012 20th IEEE International Conference on, pages 1–6.
IEEE, 2012.

116. M. S. Siddiqui and D. Verma. Cross site request forgery: A com-
mon web application weakness. In Communication Software and
Networks (ICCSN), 2011 IEEE 3rd International Conference on,
pages 538–543. IEEE, 2011.

117. A. Singh and K. Chatterjee. Cloud security issues and challenges: A
survey. Journal of Network and Computer Applications, 79:88–115,
2017.

118. K. Singh, P. Singh, and K. Kumar. Application layer http-get ﬂood
ddos attacks: Research landscape and challenges. Computers &
Security, 65:344–372, 2017.

38

Michele De Donno et al.

119. S. Singh, Y.-S. Jeong, and J. H. Park. A survey on cloud computing
security: Issues, threats, and solutions. Journal of Network and
Computer Applications, 75(Supplement C):200 – 222, 2016.
120. G. Somani, M. S. Gaur, and D. Sanghi. Ddos/edos attack in cloud:
aﬀecting everyone out there! In Proceedings of the 8th International
Conference on Security of Information and Networks, pages 169–
176. ACM, 2015.

121. G. Somani, M. S. Gaur, D. Sanghi, and M. Conti. Ddos attacks
in cloud computing: collateral damage to non-targets. Computer
Networks, 109:157–171, 2016.

122. G. Somani, M. S. Gaur, D. Sanghi, M. Conti, and R. Buyya. Ddos
attacks in cloud computing: Issues, taxonomy, and future directions.
Computer Communications, 107:30–48, 2017.

123. J. Somorovsky, M. Heiderich, M. Jensen, J. Schwenk, N. Gruschka,
and L. Lo Iacono. All your clouds are belong to us: Security anal-
ysis of cloud management interfaces.
In Proceedings of the 3rd
ACM Workshop on Cloud Computing Security Workshop, CCSW
’11, pages 3–14, New York, NY, USA, 2011. ACM.

124. A. K. Sood and R. J. Enbody. Targeted cyberattacks: a superset of
advanced persistent threats. IEEE security & privacy, 11(1):54–61,
2013.

125. S. M. Specht and R. B. Lee. Distributed Denial of Service: Tax-
onomies of Attacks, Tools, and Countermeasures. In Proceedings of
17th International Conference on parallel and Distributed comput-
ing Systems, International Workshop on Security in Parallel and
Distributed Systems, page 543–550, September, 2004.

126. I. Studnia, E. Alata, Y. Deswarte, M. Kaâniche, and V. Nicomette.
Survey of security problems in cloud computing virtual machines.
In Computer and Electronics Security Applications Rendez-vous
(C&ESAR 2012). Cloud and security: threat or opportunity, pages
61 – 74, 2012.

127. S. Subashini and V. Kavitha. A survey on security issues in ser-
vice delivery models of cloud computing. Journal of Network and
Computer Applications, 34(1):1 – 11, 2011.

128. K. Suzaki, K. Iijima, T. Yagi, and C. Artho. Memory deduplication
as a threat to the guest os. In Proceedings of the Fourth European
Workshop on System Security, EUROSEC ’11, pages 1:1–1:6, New
York, NY, USA, 2011. ACM.

129. P. Syam Kumar and R. Subramanian. An eﬃcient and secure pro-
tocol for ensuring data storage security in cloud computing. IJCSI
International Journal of Computer Science Issues, 8(6):1694–0814,
2011.

130. Z. Tari. Security and privacy in cloud computing.

IEEE Cloud

Computing, 1(1):54–57, May 2014.

131. K. Thimmaraju, B. Shastry, T. Fiebig, F. Hetzelt, J.-P. Seifert,
A. Feldmann, and S. Schmid. The vamp attack: Taking control of
cloud systems via the uniﬁed packet parser. In Proceedings of the
2017 on Cloud Computing Security Workshop, CCSW ’17, pages
11–15, New York, NY, USA, 2017. ACM.

Cyber-Storms Come from Clouds

39

132. H. Y. Tsai, M. Siebenhaar, A. Miede, Y. Huang, and R. Steinmetz.
Threat as a service?: Virtualization’s impact on cloud security. IT
Professional, 14(1):32–37, Jan 2012.

133. L. M. Vaquero, L. Rodero-Merino, and D. Morán. Locking the sky:
a survey on iaas cloud security. Computing, 91(1):93–118, Jan 2011.
134. V. Varadarajan, T. Kooburat, B. Farley, T. Ristenpart, and M. M.
Swift. Resource-freeing attacks: Improve your cloud performance
(at your neighbor’s expense).
In Proceedings of the 2012 ACM
Conference on Computer and Communications Security, CCS ’12,
pages 281–292, New York, NY, USA, 2012. ACM.

135. B. Wang, Y. Zheng, W. Lou, and Y. T. Hou. Ddos attack protec-
tion in the era of cloud computing and software-deﬁned networking.
Computer Networks, 81:308–319, 2015.

136. C. Wang, K. Ren, and J. Wang. Secure and practical outsourcing
In INFOCOM, 2011

of linear programming in cloud computing.
Proceedings IEEE, pages 820–828. IEEE, 2011.

137. C. Wang, Q. Wang, K. Ren, N. Cao, and W. Lou. Toward secure and
dependable storage services in cloud computing. IEEE transactions
on Services Computing, 5(2):220–232, 2012.

138. Y. Wang, J. Ma, D. Lu, X. Lu, and L. Zhang. From high-availability
to collapse: quantitative analysis of “cloud-droplet-freezing” attack
threats to virtual machine migration in cloud computing. Cluster
computing, 17(4):1369–1381, 2014.

139. Z. Wang, C. Wu, M. Grace, and X. Jiang.

Isolating commodity
hosted hypervisors with hyperlock. In Proceedings of the 7th ACM
european conference on Computer Systems, pages 127–140. ACM,
2012.

140. J. Wei, X. Zhang, G. Ammons, V. Bala, and P. Ning. Managing
security of virtual machine images in a cloud environment. In Pro-
ceedings of the 2009 ACM Workshop on Cloud Computing Security,
CCSW ’09, pages 91–96, New York, NY, USA, 2009. ACM.
141. L. Wei, H. Zhu, Z. Cao, X. Dong, W. Jia, Y. Chen, and A. V.
Vasilakos. Security and privacy for storage and computation in
cloud computing. Information Sciences, 258:371–386, 2014.
142. F. Wong and C. X. Tan. A survey of trends in massive ddos attacks
and cloud-based mitigations. International Journal of Network Se-
curity & Its Applications, 6(3):57, 2014.

143. H. Wu, Y. Ding, C. Winer, and L. Yao. Network security for vir-
tual machine in cloud computing. In Computer Sciences and Con-
vergence Information Technology (ICCIT), 2010 5th International
Conference on, pages 18–21. IEEE, 2010.

144. L. Xiao, D. Xu, C. Xie, N. B. Mandayam, and H. V. Poor. Cloud
storage defense against advanced persistent threats: A prospect the-
oretic study. IEEE Journal on Selected Areas in Communications,
35(3):534–544, March 2017.

145. Z. Xiao and Y. Xiao. Security and privacy in cloud computing.
IEEE Communications Surveys & Tutorials, 15(2):843–859, 2013.
146. Q. Yan, F. R. Yu, Q. Gong, and J. Li. Software-deﬁned network-
ing (sdn) and distributed denial of service (ddos) attacks in cloud

40

Michele De Donno et al.

computing environments: A survey, some research issues, and chal-
lenges. IEEE Communications Surveys & Tutorials, 18(1):602–622,
2016.

147. Z. Yan, E. Cimpian, M. Zaremba, and M. Mazzara. BPMO: seman-
tic business process modeling and WSMO extension. In 2007 IEEE
International Conference on Web Services (ICWS 2007), July 9-13,
2007, Salt Lake City, Utah, USA, pages 1185–1186, 2007.

148. Y. Yang, L. Wu, G. Yin, L. Li, and H. Zhao. A survey on security
and privacy issues in Internet-of-Things. IEEE Internet of Things
Journal, 4(5):1250–1258, 2017.

149. Y. Yarom and K. Falkner. Flush+ reload: A high resolution, low
noise, l3 cache side-channel attack. In USENIX Security Sympo-
sium, pages 719–732, 2014.

150. J.-R. Yeh, H.-C. Hsiao, and A.-C. Pang. Migrant attack: A multi-
resource dos attack on cloud virtual machine migration schemes. In
Information Security (AsiaJCIS), 2016 11th Asia Joint Conference
on, pages 92–99. IEEE, 2016.

151. P. You, Y. Peng, W. Liu, and S. Xue. Security issues and solutions
in cloud computing. In Distributed Computing Systems Workshops
(ICDCSW), 2012 32nd International Conference on, pages 573–
577. IEEE, 2012.

152. F. Zafar, A. Khan, S. U. R. Malik, M. Ahmed, A. Anjum, M. I.
Khan, N. Javed, M. Alam, and F. Jamil. A survey of cloud com-
puting data integrity schemes: Design challenges, taxonomy and
future trends. Computers & Security, 65:29–49, 2017.

153. S. T. Zargar, J. Joshi, and D. Tipper. A survey of defense mecha-
nisms against distributed denial of service (ddos) ﬂooding attacks.
IEEE communications surveys & tutorials, 15(4):2046–2069, 2013.
154. Y. Zhang, A. Juels, M. K. Reiter, and T. Ristenpart. Cross-vm side
channels and their use to extract private keys. In Proceedings of the
2012 ACM conference on Computer and communications security,
pages 305–316. ACM, 2012.

155. F. Zhou, M. Goel, P. Desnoyers, and R. Sundaram. Scheduler vul-
nerabilities and coordinated attacks in cloud computing. J. Com-
put. Secur., 21(4):533–559, 2013.

156. M. Zhou, R. Zhang, W. Xie, W. Qian, and A. Zhou. Security and
privacy in cloud computing: A survey.
In Semantics Knowledge
and Grid (SKG), 2010 Sixth International Conference on, pages
105–112. IEEE, 2010.

157. D. Zissis and D. Lekkas. Addressing cloud computing security is-

sues. Future Generation computer systems, 28(3):583–592, 2012.

