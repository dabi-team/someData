1
2
0
2

n
u
J

9
1

]

R
C
.
s
c
[

2
v
0
3
0
2
0
.
9
0
0
2
:
v
i
X
r
a

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

1

Evaluating the Security and Economic Effects of
Moving Target Defense Techniques on the Cloud

Hooman Alavizadeh, Member, IEEE, Samin Aref, Dong Seong Kim, Senior Member, IEEE, and Julian
Jang-Jaccard, Member, IEEE

Abstract—Moving Target Defense (MTD) is a proactive security mechanism that changes the attack surface with the aim of confusing
attackers. Cloud computing leverages MTD techniques to enhance the cloud security posture against cyber threats. While many MTD
techniques have been applied to cloud computing, there has so far been no joint evaluation of the effectiveness of MTD techniques
with respect to security and economic metrics. In this paper, we ﬁrst introduce mathematical deﬁnitions for the combination of three
MTD techniques: Shufﬂe, Diversity, and Redundancy. Then, we utilize four security metrics – namely, system risk, attack cost, return on
attack, and reliability – to assess the effectiveness of the combined MTD techniques applied to large-scale cloud models. Second, we
focus on a speciﬁc context based on a cloud model for e-health applications to evaluate the effectiveness of the MTD techniques using
security and economic metrics. We introduce (1) a strategy to effectively deploy the Shufﬂe MTD technique using a virtual machine
placement technique, and (2) two strategies to deploy the Diversity MTD technique through operating system diversiﬁcation. As
deploying the Diversity technique incurs costs, we formulate the optimal diversity assignment problem (O-DAP), and solve it as a binary
linear programming model to obtain the assignment that maximizes the expected net beneﬁt.

Index Terms—Cloud Computing, Diversity, Economic Metrics, Redundancy, Security analysis, Shufﬂe, Optimization.

(cid:70)

1 INTRODUCTION

M Oving Target Defense (MTD) techniques have been

proposed that aim to make a system more dynamic,
less deterministic, and more unpredictable for cyber attack-
ers by continuously changing the attack surface [15]. The
static nature of systems can make a system more prone to
attack, as the attackers have enough time to learn the poten-
tial paths of attack, to exploit vulnerabilities, and, ultimately,
to penetrate the system. Traditional defensive security solu-
tions for dealing with possible threats, such as anti-malware,
intrusion detection systems (IDS), and ﬁrewalls, are reactive
methods, and tend to be expensive. By contrast, most MTD
techniques are proactive defensive methods that adopt the
existing technologies in a system (e.g., virtual machines
and back-up operating systems (OS)) in order to introduce
sufﬁcient levels of unpredictability to confuse the attackers
and make security-threatening attempts more complicated.
Thus, compared to other approaches, MTD techniques are
expected to decrease defensive costs, while increasing the at-
tackers’ costs in terms of effort, time, and money. To prevent
potential cyber attacks while being economically viable, the
proposed defensive MTD strategies must be effective and
efﬁcient. In this paper, we leverage MTD capabilities to
secure cloud computing.

We consider the effects of combining different MTD

• Hooman Alavizadeh and Julian Jang-Jaccard are with the School of
Natural and Computational Sciences, Massey University, New Zealand.
E-mail: h.alavizadeh@massey.ac.nz, j.jang-jaccard@massey.ac.nz
Samin Aref is with the Lab of Digital and Computational Demography at
the Max Planck Institute for Demographic Research, Germany
E-mail: aref@demogr.mpg.de

•

• Dong Seong Kim is with the School of Information Technology and

Electrical Engineering, University of Queensland, Australia.
E-mail: dan.kim@uq.edu.au

Manuscript received January 04, 2020

techniques by investigating various MTD properties in situ-
ations in which several techniques are deployed. We use the
classiﬁcation of MTD techniques proposed by Hong et al.
[24]: Shufﬂe, Diversity, and Redundancy techniques. While
Shufﬂe MTD techniques are generally designed to enhance
the overall security of a system by changing its attack
surface, these techniques have no effect on the system’s
reliability, and may even cause the reliability of the system
to deteriorate. The aim of Redundancy MTD techniques
is to enhance the reliability or availability of the system.
However, because these techniques could place the system
in a more vulnerable state, as described in [4], they may
actually reduce the overall security of the system (e.g.,
by increasing the system risk). The aim of Diversity MTD
techniques is to make attacks more difﬁcult (e.g., by ex-
ploiting the vulnerability of the software). However, as these
techniques may increase the cost of defense, they can have
negative economic effects. As the outcomes of deploying
individual or combined MTD techniques are uncertain, the
effectiveness of the proposed MTD techniques has to be
evaluated prior to deployment. While using a single MTD
technique can be beneﬁcial, problems may arise when trade-
offs between security and dependability (such as service
availability or reliability) are required. Thus, the question
of how MTD techniques can be combined to optimally
meet multiple objectives, such as maximizing beneﬁts while
reducing undesirable effects, merits extensive investigation.
In this paper, we aim to address the aforementioned
problems by evaluating the effectiveness of deploying dif-
ferent MTD techniques, including Shufﬂe, Diversity, Re-
dundancy; both individually and in combination for cloud
computing. Accordingly, we model and analyze MTD tech-
niques using a graphical security model called the hierar-
chical attack representation model (HARM) [22]. We iden-

 
 
 
 
 
 
EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

2

tify applicable MTD techniques in cloud computing envi-
ronments, and formally deﬁne them. In addition, we use
important measures, such as network centrality measures
(NCMs) to improve the scalability of the evaluation process
for large-sized cloud computing systems.

We investigate the effects of combining different MTD
techniques from the three categories, and evaluate using
both security and economic metrics by conducting experi-
ments based on two scenarios.

First, we perform an experimental analysis to evaluate
how the combined MTD techniques affect the security of the
cloud systems from both the attacker’s and the defender’s
perspective. We conduct our experiments using simulation
on a large cloud-band model to evaluate the effectiveness
of the combined MTD techniques. To examine the level of
security these techniques provide from the cloud provider’s
point of view, we use security metrics, including the system
risk and the attack cost. Then, we use the return on attack to
evaluate the effectiveness of the combined MTD techniques
from the attacker’s perspective. Finally, we use other metrics
to evaluate the reliability of the cloud after deploying the
MTD techniques.

Second, we focus on a more speciﬁc context by studying
the effectiveness of MTD techniques on economic metric
when applied to an e-health cloud model as a case study.
To estimate the economic beneﬁts of deploying MTD tech-
niques in this case, we use economic metrics, including
the return on security investment and the expected net
beneﬁt of security. We utilize both security and economic
metrics to show the effectiveness of the proposed MTD tech-
niques. We propose a potentially effective Shufﬂe strategy,
and deploy this technique with the goal of reducing the
economic impacts while increasing the security level. We
also extend our study by conducting in-depth investigations
of Diversity MTD techniques in which we consider the
interplay between the costs and the beneﬁts of security. For
cloud providers, who face pressure to deploy a defensive
strategy on a limited (allocated) budget, using Diversity
MTD techniques may be expensive, as they are required to
purchase the license and cover the costs of the components’
variants (such as VMs). Thus, the use of the components of
various systems (such as back-up OS variants) should be
precisely prioritized, and possibly optimized. To this end,
we propose a Diversity technique strategy based on the
globally optimal solution of using an optimization model
that maximizes the expected net beneﬁts under all possible
Diversity technique assignments.

This paper represents a continuation of a line of studies
started in [3]. In this paper, we extend our contributions as
follows:

• We include formalism and the deﬁnitions of com-
bined MTD techniques. Using simulation, we eval-
uate the MTD techniques based on economic and
security metrics.

• We propose an optimization model that seeks to ﬁnd
an optimal solution to diversity assignment by con-
sidering both the costs and the beneﬁts of security.
• We provide the formal mathematical deﬁnitions for
combining the Shufﬂe, Diversity, and Redundancy
MTD techniques.

• We evaluate the effectiveness of combined MTD
techniques through simulation using security met-
rics, including system risk (Risk), attack cost (AC),
return on attack (RoA), and reliability, for a large
cloud model. We evaluate the combined method by
deploying the Diversity technique on multiple VMs
in the cloud using the OS diversiﬁcation technique.

• We model an e-health cloud example (also called the
personal health cloud (PHC)), and evaluate the effec-
tiveness of MTD techniques based on both security
and economic metrics.

• We provide a set of strategies in which the Shufﬂe
and Diversity techniques can be effectively deployed.
We propose a VM placement strategy for the Shufﬂe
technique, and two strategies for deploying the Di-
versity technique, based on deploying the Diversity
technique (OS diversiﬁcation) (i) with only one back-
up OS, and (ii) with multiple back-up OS variants
over the set of VMs.

• To solve the second case mentioned above, we pro-
pose the optimal diversity assignment problem (O-
DAP), and formulate it as a binary linear program-
ming model. This approach allows us to ﬁnd an
assignment of OS variants on multiple VMs while
maximizing the expected net beneﬁts.

The rest of the paper is organized as follows. In Sec-
tion 2, we provide a comprehensive overview of the related
work and study the MTD techniques. Section 3 presents
the preliminaries of the paper, including formalisms for
the combination of MTD techniques. The proposed MTD
deﬁnitions and evaluation criteria based on the security
metrics are provided in Section 4. In Section 5, we eval-
uate the effectiveness of the MTD techniques using both
economic and security metrics as well, and we formulate
an optimization model to solve the O-DAP. In Section 6, we
continue our discussion, and outline the limitations of the
paper. Finally, the paper concludes in Section 7.

2 RELATED WORK
A number of studies on MTD theory, techniques, and eval-
uation have been conducted [11], [14], [15]. According to
Hobson et al. [21], the three main challenges of developing
MTD techniques are the coverage, the unpredictability, and
the timeline. Zhuang et al. [46] argued that an effective MTD
technique should consider the following issues: (1) which
pieces should be moved, (2) whether there is sufﬁcient space
for movement, and (3) what the correct time for movement
is. Similarly, Cai et al. [14] deﬁned three considerations for
the movement of MTD techniques: (1) WHAT to move, (2)
HOW to move, and (3) WHEN to move. However, these
studies have not discussed the cost or economic efﬁciency
of the MTD movement. Rather, they merely explored the
common properties of the MTD techniques (movement
selection, movement strategy, and movement time) that
should be realized when an MTD technique is adopted.
Thus, in addition to considering the total cost of security,
providers should take into account the cost of movement
relative to the level of security achieved.

Our analysis framework contributes to the literature
by including (1) MTD techniques and categories, (2) MTD

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

3

TABLE 1: MTD techniques applicable in different cloud computing layers

Cloud Layer

Diversity

Redundancy

Shufﬂe

Application Layer

Platform Layer

Infrastructure Layer

Web Services [26], [41]
Web Applications [9], [26]

Application/ Web service
Design [26]
Database [41]

Operating System (OS)
Virtualization [4], [24], [26]

Web [19], [43]

Port/IP [8], [29], [31]
Web App. [34]
HTTP [28], [42]

Web Server Replica

Web Service

Virtualization [4], [24]
SDN [39]

SDN, VM migration
[4], [7], [24], [35]
Virtual IP [27]

applicable layers, and (3) a deﬁnition of the combination
of MTD techniques at different layers of the cloud [15] (as
shown in Table 1).

Hong et al. [24] classiﬁed the MTD strategies according
to three comprehensive categories as follows. The Shufﬂe
technique refers to any rearrangement of the system setting
into different software, hardware, and network layers, like
changing or shufﬂing the IP address; rearranging the net-
work’s topology; or moving or migrating a VM, a host, or
hardware to another location [2], [35]. The Diversity tech-
nique involves replacing the components’ variant, such as
a server, a programming language, an operating system, or
hardware, while the system continues to provide functional-
ity equivalent to that of the previous state (before changing
the variant) [24]. The Redundancy technique can be used
increase the number of replica components in the system,
such as servers, hardware, OS, software, and services [43].

The Shufﬂe technique has been proposed in several
studies. Most of the existing research focused on the novelty
of the implementation and the application of the Shufﬂe
technique. Jafarian et al. [27] implemented an IP shufﬂing
technique that mutates IP addresses unpredictably. They
focused on the minimization of the overhead of this op-
eration after each IP mutation. Moreover, the application of
Shufﬂe techniques on the cloud has been studied in [4], [18].
Danev et al. [18] proposed a Shufﬂe technique for securing
the cloud infrastructure. They focused on secure VM mi-
gration in the cloud. Their approach was to utilize an extra
physical trusted platform module and trusted parties for the
migration process. They also used public key infrastructure
to secure the protocol. In addition, they suggested a com-
prehensive evaluation of different criteria, like assessing the
main security services (CIA triad), and analyzing how the
migration scenario performs in terms of time and RAM size
usage against cryptography protocols. Penner and Guirguis
in [35] developed a set of MTD technologies to change the
location of VMs in the cloud in order to defend against
MultiArmed Bandit (MAB) attacks caused by weak VM iso-
lation in the cloud. They actually deployed a MTD technique
based on the attacker’s point of view, and showed that their
method can thwart a MAB attack designed to ﬁnd critical
information (e.g., databases and credit card information).
They assessed the performance of the proposed method by
measuring the time of the switch in VMs. However, most
of the existing techniques focused only on minimizing the
overhead or improving the performance, and the security-
related impacts of deploying MTD techniques have not been
evaluated using security models. Therefore, there is a lack

of research on the economic as well as the security impacts
of deploying MTD techniques on the cloud.

A method for deploying the Diversity technique in the
programming language has been proposed by Taguinod
et al. in [41]. Moreover, a Diversity technique for deploy-
ment on virtual servers has been proposed by Huang et
al. [26] with the aim of improving the resiliency of the
network and services. They have evaluated their method
by computing the probability of attack success. In [9], the
authors developed a Diversity technique designed to change
a running program’s variants erratically to enable a large
program to be divided into smaller components (tasks).
They used a recovery mechanism to enhance the system’s
resilience. The idea is to use a different variant at runtime
to confuse the attacker. The application of the Diversity
technique on the cloud has been investigated in [5], [6],
[24] from a security perspective. However, these studies
did not consider the economic impacts of deploying the
Diversity technique on the cloud. Redundancy techniques
have been proposed in [19], [43]. A Redundancy technique
for use on the application layer has been introduced by
Gorbenko et al. in [19]. They proposed a method for web
service replication designed to improve the dependability
of the system. They evaluated their method through perfor-
mance analyses like assessments of system response time
and availability. Another Redundancy technique has been
proposed by Yuan et al. in [43]. They proposed an approach
for deploying the Redundancy technique on web services
that aims to prevent malicious code injection attacks on the
servers. However, they did not assess the effectiveness of
their proposed method through security analysis.

There is a gap in the MTD research due to the lack
of evaluations of the proposed MTD techniques based on
security and economic metrics. Only a few studies, such as
[10], have proposed evaluating the economic impacts of de-
fensive techniques using graphical security models (GSMs)
and economic metrics. Security metrics can be incorporated
into GSMs to evaluate the effectiveness of both the given
network models and the MTD techniques.

3 DEFINITIONS AND FORMALIZATION
3.1 E-Health Cloud Model

We consider a private personal health cloud (PHC) that
includes 10 VMs located on different cloud hosts (servers).
We assume that VMs vm1 and vm2 in Host1 are connected
to the internet (entry points of the cloud), and that the
last VM vm10 in Host5 is connected to a critical database
(DB) that includes the personal health information (PHI) of

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

4
TABLE 2: OS Vulnerabilities (V ) including Base-Score (BS),
Impact (I), Exploitability (E), and Attack Cost (AC)

OS (θ)

V

CVE-ID

BS

I

E

AC

Win10

Linux

Fedora

ν1,W
ν2,W
ν3,W

ν1,L
ν2,L
ν3,L

ν1,F

CVE-2018-8490
CVE-2018-8484
CVE-2016-3209

CVE-2018-14678
CVE-2018-14633
CVE-2017-15126

CVE-2014-1859

8.4
7.8
8.8

7.8
7
8.1

5.5

6
5.9
5.9

5.9
4.7
5.9

3.6

0.17
0.18
0.28

0.18
0.22
0.22

0.18

1.6
2.2
1.2

2.2
3
1.9

4.5

Deﬁnition 1. We can show a HARM [23] as a 3-tuple
H = (U, L, C) where U refers to the upper layer, which
is an attack graph (AG) and L = {(cid:96)1, (cid:96)2, . . . , (cid:96)n} is a set of
attack trees (ATs) in the lower layer. We deﬁne C : U → L as
a one-to-one mapping of the upper layer to the lower layer.
The relation C relates the graph U to the set L. The upper
layer of the HARM is deﬁned as a graph U = (VM, E),
where VM = {vm1, vm2, . . . , vmn} is a set of VMs in the
cloud and E ⊂ V M × V M is a set of connectivities between
the VMs denoted as edges. An edge can be a communication
medium between the VMs vms, vmt ∈ V M when an exploit
can be performed. The member (cid:96)i of the set L is an AT cor-
responding to vmi in the upper layer. The nodes of the tree
(cid:96)i are {Vi,θ, G, rooti} including (1) the set of vulnerabilities
Vi,θ corresponding to VM index i and operating system θ,
(2) the function G, and (3) rooti which is the virtual machine
index i in the upper layer. The set Vi,θ of vulnerabilities is
deﬁned as Vi,θ = {ν1,θ, ν2,θ, . . . , νm,θ}. The set of operating
systems is OS = {W, L, F } (including Windows10, Linux,
and Fedora), and θ is a given member of it θ ∈ OS. The func-
tion G applies logical gates to Vi,θ. The logical gates may be
any combination of AN D-gate, OR-gate depending on how
the vulnerabilities might be exploited by the attacker.

Figure 2 illustrates an example of the constructed HARM
for the cloud system that includes 10 VMs with different
OSs (either Windows or Linux). Note that the upper layer
of HARM captures the conectivities of those VMs, while
the lower layer shows the vulnerabilities associated with
each VM. In this paper, we assume that the attacker needs
to exploit only one vulnerability to exploit the VM. Thus,
we only use the OR-gate in the lower layer of the HARM.
However, a combination of the AND-gate and the OR-gate
in the attack tree can be used if more complicated exploit
scenarios are needed to exploit a system, as explained
in [37]. However, in the interests of the readability of our
proposed HARM, more complicated vulnerability analyses,
such as those discussed in [37], are considered outside the
scope of this paper.

3.3 Importance Measures

As we stated earlier, the upper layer of the HARM repre-
sents a comprehensive scheme for the connectivity of VMs
in the cloud through a graph. To efﬁciently carry out the
security analysis, we need to identify the most important
components (here, the VMs) of the network. Network cen-
trality measures (NCMs) such as betweenness and closeness
have been widely used as importance measures (IMs) in

Figure 1: an E-Health cloud model including PHI records

W

vm3

W

vm1

L

vm8

L

vm6

vm10

L

vm7

vm4 W

Outside of cloud
A

vm9

L

W

vm5

vm2

W

R
O

R
O

. . .

R
O

R
O

ν1,L

ν2,L

ν3,L

ν1,L

ν2,L

ν3,L

ν1,L

ν2,L

ν3,L

ν1,W

ν2,W

ν3,W

Figure 2: Generated two-layer HARM for the cloud. An
example of an attack path is highlighted as a dashed line.

patients, as shown in Figure 1. The VMs located in Host1
and Host2 use Windows 10, and the VMs in the other hosts
are installed with Enterprise Linux OS. We assume that an
attacker is outside the private cloud and can exploit the
vulnerabilities of those operating systems to gain access.
The goal of the attacker is to compromise the database
(DB) in Host5. Table 2 shows the vulnerabilities for different
OSs based on the National Vulnerability Database (NVD)
[32]. We assume that there are three vulnerabilities for both
Windows OS and Linux OS, and that there is a single
vulnerability for Fedora OS.

3.2 HARM Construction

In order to perform the security analysis of the cloud, and
to further evaluate the effects of MTD techniques on the
cloud, we used the two-layered HARM [22] to model the
cloud. The HARM consists of an upper layer to model
the connectivity of VMs, and a lower layer to capture
the vulnerabilities on each VM. Using the HARM, we can
compute security metrics for the purposes of comparison.
We evaluate how the security metrics change when the MTD
techniques are deployed later, in Section 4.

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

5

security modeling and analysis in various contexts, such
as in cloud computing [4] and enterprises [44], as well as
in other contexts [13]. Thus, we use two important NCMs,
closeness and betweenness [13], to identify more crucial
VMs in the cloud. In Section 4, we show how IMs can be
utilized to ﬁnd more effective MTD strategies.

Deﬁnition 2. NCMs can be computed for the upper layer
of the HARM deﬁned in Deﬁnition (1). We can calculate the
closeness centrality (Cc) of a speciﬁc VM in the network in
Equation (1).

Cc(vmi) = (n − 1)

(cid:32)

(cid:88)

j∈V M

(cid:33)−1

d(vmi, vmj)

(1)

In Equation (1), d(vmi, vms) is a function computing the
length of the shortest path between VMs vmi and vms in
the HARM, and n denotes the total number of VMs in the
HARM. Then, the betweenness centrality (Cb) of a VM can
be computed using Equation (2).

Cb(vmi) =

(cid:88)

s,t∈V M \{vmi}

δst(vmi)
δst

,

(2)

In Equation (2), δst is a function calculating the total
number of the shortest paths between each pair of VMs
(s, t) ∈ V M , and δst(vmi) denotes the number of such
paths passing through the speciﬁc VM (vmi).

3.4 Security Metrics

In this section, we utilize four security metrics, (i) system
risk (Risk), (ii) attack cost (AC), (iii) return on attack (RoA),
and (iv) system reliability (Reliability), to evaluate the
security of the cloud after deploying MTD techniques, and
to identify the most suitable technique deployment strate-
gies. Risk is based on the vulnerabilities of the network’s
components [24]. AC measures the difﬁculties attackers face
in attacking a system, and can be quantiﬁed in terms of the
costs an attacker incurs when seeking to exploit a network
component or the whole system [44]. RoA indicates the
willingness of the attacker to use the same components,
attack path(s), and vulnerabilities to penetrate the network.
RoA quantiﬁes the costs of an attack versus the beneﬁts
of the attack [17]. Reliability quantiﬁes the reliability of
the network’s components (i.e., critical components) under
certain attack circumstances. The Reliability can be calcu-
lated using the symbolic hierarchical automated reliability
and performance evaluator (SHARPE) that is an analytic
modeling software tool [38].

3.4.1 System Risk
We deﬁne system risk (Risk) as the overall risk value associ-
ated with the cloud system, which can be computed through
the HARM. To compute the Risk, the HARM should be
constructed by obtaining information related to the connec-
tivities of VMs on the cloud for the upper layer, and by
obtaining the vulnerabilities of each VM for the lower layer.
Note that the vulnerabilities associated with each VM in
the cloud can be obtained through a vulnerability database
(i.e., NVD). Let Eνj,θ and Iνj,θ be the exploitability and

impact values of jth vulnerability existing on the OS θ on
the vmi such that νj,θ ∈ Vi,θ. Then, the risk of a VM can
be computed as the product of those values returning the
maximum value, as shown in Equation (3).

Riskvmi = max

νj,θ∈Vi,θ

(cid:0)Eνj,θ × Iνj,θ

(cid:1)

(3)

Then, the risk of an attack path Riskap can be computed
by counting all risk values on any single VM in an attack
path (ap) from the attacker to the target as Equation (4).
Finally, the sum of all risk values associated with all possible
attack paths on the cloud provides the Riskc value. Note
that the set of all possible attack path is denoted as AP , see
Equation (5).

Riskap =

Riskc =

(cid:88)

vmi∈ap

(cid:88)

ap∈AP

Riskvmi

Riskap

(4)

(5)

Example 1. Figure 2 shows an example of an attack path
(ap1) from the attacker to the target. The risk value associ-
ated with this attack path can be computed as Riskap1 =
Riskvm1 + Riskvm4 + Riskvm6 + Riskvm9 + Riskvm10 =
5.9∗0.28+5.9∗0.28+5.9∗0.22+5.9∗0.22 +5.9∗0.22 = 7.2.
Finally, the total risk of the cloud is the sum of all Riskap
values which is Riskc = 211.692 for the cloud example.

3.4.2 Attack Cost

The cost of exploiting the vulnerabilities on a VM for an
attacker is deﬁned as the attack cost (AC). We expand this
metric to compute the overall AC of the cloud. We use the
upper layer of the HARM to compute the AC. Table 2 lists
the costs of exploiting a VM through vulnerabilities (ACvm).
Equation (6) shows the formula for the overall AC value of
the cloud.

ACc =

(cid:88)

(cid:18) (cid:88)

(cid:19)

ACvmi

ap∈AP

vmi∈ap

(6)

where ap is a single attack path in the system and AP is the
list of all possible attack paths in the network.

3.4.3 Return on Attack
Return on attack (RoA) is a security metric based on the
attacker’s perspective [17]. RoA quantiﬁes the costs of the
attack versus the beneﬁts of the attack. A higher value of
RoA indicates a higher probability that an attacker will
exploit those vulnerabilities (a higher tendency to attack).
The ratio of the risk value for a VM and the attack cost
determines the RoA value for a speciﬁc VM, which is shown
in Equation (7). Then, the overall RoA of a system can be
computed through Equation (8).

RoAvmi =

maxνj,θ∈Vi,θ

(cid:0)Eνj,θ × Iνj,θ

(cid:1)

ACvmi

RoAc =

(cid:88)

(cid:18) (cid:88)

(cid:19)

RoAvmi

ap∈AP

vmi∈ap

(7)

(8)

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

6

(a)

(b)

Figure 3: The Cloud-band model. (a) The Cloud-band model, including two cloud-band nodes and one resource node. (b)
An example of the generated HARM for the cloud-band model with 30 VMs, which shows the VM’s connectivities and
vulnerabilities in the upper and the lower layers, respectively (note that this cloud-band model can hold up to 450 VMs).

3.5 MTD Formalism

We utilize the virtual machine live migration (VM-LM)
as the main technique for deploying the Shufﬂe MTD
technique, which can be formulated based on the HARM
deﬁnition as follows.

Deﬁnition 3. Let S(H, κ) be a Shufﬂe function on the
HARM where 1 ≤ κ ≤ n, and κ denotes a speciﬁc VM
vmκ ∈ V M chosen for the shufﬂing procedure. Then,
the result of the Shufﬂe function is as S(H, κ) = H s. We
deﬁne H s = (U s,κ, L, C) where U s,κ is the transformed AG
resulting from the Shufﬂe on vmk in the upper layer of the
HARM, and can be represented as U s,κ = (V M, E(cid:48)).

The Diversity technique is formulated as follows.

Deﬁnition 4. We formulate the Diversity technique in
which the Diversity function is applied to H as D(H, κ) =
H d, where κ denotes a speciﬁc VM vmκ ∈ V M se-
lected for being replaced with another OS variant. Then,
H d = (U, Ld,k, C) is the result of deploying the Diversity
technique, where Ld,k = {(cid:96)1, . . . , (cid:96)k, . . . , (cid:96)n} denotes the
ATs corresponding to each VM and (cid:96)k = (Vk,θ, G, root) is
the transformed AT of vmk which is replaced with another
variant θ ∈ OS. The Diversity technique affects the lower
layer and varies vulnerabilities Vk,θ={ν1,θ, ν2,θ, . . . , νm,θ},
while U =(V M, E) is preserved.

We formulate the Redundancy technique as follows.

Deﬁnition 5. Let R(H, k, r) be a Redundancy function on
the HARM where k denotes the VM that should be repli-
cated r times. Then, the resulting Redundancy function is
R(H, k, r) = H r, where 1 ≤ k ≤ n and r ≤ l, and l is a limit
for the replication of a VM. Thus, vmr
k shows the replicated
VM in the upper layer. We deﬁne H r = (U r
k, C) where
U r
k is a transformed AG resulting from r times replication

k, Lr

of vmk in the upper layer of the HARM, and can be
k = (V M (cid:48), E(cid:48)), where V M (cid:48) can be shown
represented as U r
as:

V M (cid:48) = V M ∪

(cid:18) l
(cid:91)

(cid:19)

vmr
k

and |V M (cid:48)| = n + r, and E(cid:48) ⊂ V M (cid:48) × V M (cid:48).

r=1

The replication of VMs in the upper layer results in
adding vulnerabilities to the lower layer of the HARM. We
can then deﬁne the lower layer as follows.

Deﬁnition 6. Suppose that V r is a set of vulnerabilities
caused by the replication of a VM in the upper layer of the
HARM. The lower layer of the HARM can then be updated
k including {V (cid:48), G, root}, where V (cid:48) = V ∪ V r is
based on Lr
a set of new vulnerabilities introduced by adding the new
VMs.

We formulate the combination of Shufﬂe, Diversity, and
Redundancy (S+D+R) as a function on the HARM as fol-
lows.

Deﬁnition 7. Let S+D+R(H, ks, kd, kr, r) be a S+D+R func-
tion on the HARM where kr shows the VM selected
to be replicated r times, ks is the VM selected to be
shufﬂed, and kd denotes the VM selected for the Di-
versity technique. Then, the resulting S+D+R function is
S+D+R(H, ks, kd, kr, r) = H s+d+r, where 1 ≤ ks, kd, kr ≤ n
and 0 < r ≤ l. We deﬁne H s+d+r = (U s+d+r
, C) where
kr,ks
U s+r
kr,ks is a transformed AG in the upper layer in which S+R
is deployed on and Ls+r
kr,kd is the corresponding transferred
AT in the lower layer. Then, the former can be represented
as U s+d+r
kr,ks

= (V M (cid:48), E(cid:48)), where V M (cid:48) can be shown as:

, Ls+d+r
kr,kd

V M (cid:48) = V M ∪

(cid:18) l
(cid:91)

r=1

(cid:19)

vmr
kr

192.168.1.1192.168.1.2192.168.1.3192.168.1.4192.168.1.5192.168.1.6192.168.1.7192.168.1.8192.168.1.9192.168.1.10192.168.1.11192.168.1.12192.168.1.13192.168.1.14192.168.1.15192.168.1.16192.168.1.17192.168.1.18192.168.1.19192.168.1.20192.168.1.21192.168.1.22192.168.1.23192.168.1.24192.168.1.25192.168.1.26192.168.1.27Target192.168.1.29AttackerVMCompromisedORLv4Lv3Lv2Lv1Lv0VMCompromisedORLv4Lv3Lv2Lv1Lv0VMCompromisedORLv4Lv3Lv2Lv1Lv0VMCompromisedORLv4Lv3Lv2Lv1Lv0VMCompromisedORLv4Lv3Lv2Lv1Lv0VMCompromisedORLv4Lv3Lv2Lv1Lv0VMCompromisedORLv4Lv3Lv2Lv1Lv0VMCompromisedORLv4Lv3Lv2Lv1Lv0VMCompromisedORLv4Lv3Lv2Lv1Lv0VMCompromisedORLv4Lv3Lv2Lv1Lv0EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

7

Risk
RoA
AC

s
n
o
i
l
l
i

M

6

5

4

3

2

1

0

n=150 n=200 n=250 n=300 n=350 n=400
No. of VM in cloud-band nodes

Figure 4: Security analysis results of the current cloud-band

and |V M (cid:48)| = n + r, and E(cid:48) ⊂ V M (cid:48) × V M (cid:48). Next, the
= (V (cid:48), G, root), where V (cid:48) =
latter can be shown as Ls+d+r
kr,kd
V ∪ V r ∪ V d, and V r is a set of vulnerabilities caused by the
replication of a VM, and V d is a set of new vulnerabilities
introduced by replacing the OS.

4 MTD SECURITY ANALYSIS
4.1 Large Cloud Model

In this section, we use an example of a large cloud model
based on the cloud-band system. A cloud-band system
typically consists of two main cloud-band nodes, with each
accommodating up to 450 VMs, and one resource node con-
necting to a database (DB). The (cloud) system model can be
used as an input to generate the graphical security models,
with HARM formalism described in Subsection 3.2, which
can be used for evaluating the security of the cloud. Figure 3
demonstrates the abstract cloud-band model, and Figure 3b
shows the generated HARM of the cloud-band. Note that
the VMs are connected in a mesh topology. The generated
HARM for 400VMs has the following properties. the mode
of path lengths are 10.53 and eight, respectively, with the
shortest path between the attacker and the DB being eight.
The standard deviation of the attack path lengths is 1.36. We
compute the betweenness of all VMs. The highest values for
the three most important VMs in the cloud-band are 0.35,
0.27, 0.21, respectively. The minimum betweenness value in
the upper layer of the HARM is zero. In this model, we
assume that an attacker is outside of the cloud-band, and
can penetrate the cloud by exploiting the vulnerabilities of
VMs in the ﬁrst cloud band node. We further assume that
there are vulnerabilities that can be exploited by the attacker
to give them the root privilege. We use the information
from the reported vulnerabilities and rankings, which are
populated using the vulnerability databases, such as the
National Vulnerability Database (NVD) [32]. Our additional
assumptions are as follows: (1) The cloud provider permits
virtual machine-live migration (VM-LM) for cloud-band
nodes; (2) the VM-LM downtime is negligible; (3) the cloud
provider purchases enough licenses for a back-up OS; and
(4) the VMs’ OS can be replaced with other variants if
needed.

3

2.5

2

s
n
o
i
l
l
i

1.5

M

1

0.5

Risk
AC-Current
AC-1V
AC-2V
AC-3V
AC-4V
AC-5V

0

n=150 n=200 n=250 n=300 n=350 n=400
No. of VM in cloud-band nodes

Figure 5: Comparison of AC and Risk values obtained after
deploying the Diversity technique on the multiple VMs with
the highest betweenness values for the cloud-band example
with various node sizes.

The HARM can be used to compute the security metrics,
such as Risk, AC, and RoA. To provide a comprehensive
security overview, the computation will incorporate the
analysis of all possible attack paths that are calculated using
the upper layer of the HARM. For the reliability analysis,
we use the SHARPE software package [38]. We assume
that the attack rate for the cloud-band models follows an
exponential function with an average value of 0.2 (i.e., one
attack per every ﬁve hours). In addition, we compute the
Reliability values during a 10-hour period. We compute the
deﬁned security metrics of the current cloud-band system
before deploying the MTD techniques. We compute these
metrics for different cloud-band sizes ranging from 150 VMs
up to 400 VMs in the cloud. Figure 4 shows the current
security posture of the cloud based on different nodes, it
shows that when the size of the cloud increases, the three
metrics increase too, but the increase of the metrics is in
a linear fashion. In the following sections, we compare the
results obtained from deploying the MTD techniques on the
cloud-band against the current security posture of the cloud
to investigate the effectiveness of the MTD techniques.

4.2 Diversity on Multiple VMs

The Diversity MTD techniques play a crucial role in forcing
attackers to increase their efforts. Attackers must spend time
and money to gain sufﬁcient knowledge to discover and
exploit the vulnerabilities of a system (i.e., the network’s
component, VM, service, and OS). Any sudden changes in
those components can confuse the attacker, which may, in
turn, increase the time and effort needed to carry out the
attack. We consider using the OS diversiﬁcation method as
the main technique for deploying the Diversity technique. In
this section, we consider deploying Diversity techniques on
multiple VMs (i.e., for different subsets of VMs). To evaluate
the effectiveness of the Diversity MTD technique, we deploy
OS diversiﬁcation on multiple VMs based on three selection
criteria: (i) betweenness VM selection (BVS), (ii) closeness
VM selection (CVS), and (iii) random VM selection (RVS).
The RVS method selects a set of random VMs in the cloud.

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

8

(a) n = 200

(b) n = 300

(c) n = 400

Figure 6: Comparing the result of RoA metrics after deploying the Diversity technique on multiple nodes selected based
on three different criteria on the cloud-band with various numbers of VMs.

The BVS method selects the set of VMs based on their higher
betweenness ranks, which is one of the NCM measures.
Similarly, the CVS method uses the closeness ranks of the
VMs in the cloud-band.

Deploying the Diversity MTD technique preserves the
upper layer of the HARM. Here, we assume that the cloud
provider has up to ﬁve OS variants as back-up. Note that
increasing the OS variants raises the cloud provider’s costs
(i.e., the costs of purchasing OS licenses for the OS variants).
For simplicity, we do not consider the cloud provider’s costs
in this section.

Figure 5 shows the AC and Risk metrics after deploying
the Diversity technique on multiple VMs ranked according
to higher betweenness values. We denote xV as deploying
new variants on x selected VMs, respectively. Then, 5V rep-
resents deploying different OS variants on the ﬁve selected
VMs. We observe that deploying Diversity on the VMs with
higher betweenness ranks results in a larger increase in the
costs for the attacker, and raises the AC value. This increase
is greater if we add to the number of OS variants and deploy
the Diversity technique on multiple nodes. Deploying OS
diversiﬁcation by assigning 5V in a cloud band with 400
VMs increases the AC value from around 2.3 million to
three million, while the increase for 1V does not go beyond
2.5 million.

We do not observe a any changes in the Risk values after
deploying the Diversity MTD techniques. The Risk value
remains almost steady after increasing the OS variants, but it
still increases sharply after increasing the cloud-band nodes;
see Figure 5. We could also consider how the metrics nor-
malized by dividing by n change when n increases. Doing
so indicates that the attacker has to spend more resources
per VM if the defender has greater scope for diversity.

Figure 6 compares the results of the RoA metric by
applying the Diversity technique to three VM selection
groups in different cloud-band sizes: BVS, CVS, and RVS.
These observations indicate that deploying the Diversity
technique on a set of VMs selected using BVS provides
better results than the other groups. The values of RoA
for the RVS groups have very gentle decrements, while
the OS diversiﬁcation increases. However, the RoA values
for both the BVS and CVS groups decrease sharply when
the OS diversiﬁcation numbers increase. Other results for
different cloud-band nodes show the same trend, but, as was
expected, the RoA values for the cloud-band that include

S+R+D, AC
S+R+D, RoA
D-Only, AC
D-Only, RoA

3

2.5

2

1.5

s
n
o
i
l
l
i

M

1

0.5

0

1V

2V

3V

4V

5V

No. of OS Diversiﬁcation

(a)

s
n
o
i
l
l
i

M

1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0

Current n=150
Current n=400
S+D+R n=400
S+D+R n=400

0

1

2

3

4
6
5
Time (Hour)

(b)

7

8

9

10

Figure 7: (a) Comparing the results of AC and RoA for D-
Only and S+D+R based on different number of Diversity
techniques from 1V to 5V. (b) Comparing the Reliability
values after S+R+D with the Reliability values for the
current cloud-band for n = 150, n = 400.

more VMs are higher (i.e., RoA values of the cloud-band
with 400 VMs are between one and 1.5 million, Figure 6c,
while this rate is between 300,000 and 350,000 for the cloud-
band including 200 VMs; Figure 6a).

30031032033034035012345ThousandsNo. of OS diversificationsBVSCVSRVSRoA×70072074076078080082012345ThousandsNo. of OS diversificationsBVSCVSRVS1.281.331.381.431.4812345MillionsNo. of OS diversificationsBVSCVSRVSRoA×EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

9

Figure 8: Line chart comparing normalized metrics of the cloud-band with n = 350 before and after deploying S+D+R: the
upper line charts show the current cloud-band and the lower line charts show the metrics after deploying MTD techniques.

4.3 Combining Shufﬂe, Diversity, and Redundancy

We combine the main three MTD techniques, Shufﬂe, Diver-
sity, and Redundancy (S+D+R), to investigate whether this
approach enhances the security of the cloud. It is important
to quantify the effects of the combined MTD techniques,
and to compare them with the current security level of
the system. In order to combine the three techniques, we
set combination criteria based on the results obtained from
previous sections.

The results discussed in Section 4.2 showed that OS
diversiﬁcation on the VMs having higher betweenness
(grouped in BVS) has a better effect on security metrics.
They also revealed that increasing the numbers of OS
variants increases AC and decreases RoA. Based on those
results, we only consider the BVS group for deploying the
Diversity technique in this section. Moreover, based on the
results of previous studies reported in [4] for combining the
Shufﬂe and Redundancy techniques, we deploy the Shufﬂe
technique on the most suitable VMs, which can be found by
analyzing only the top 10% of the VMs with higher values
of betweenness. Finally, we deploy the Redundancy on the
DB or on VMs connected to the DB (target) to increase the
reliability of the cloud and availability of the DB against
DDoS attacks.

Figure 7a compares the AC and RoA metrics after
deploying S+R+D with 5V with those of the Diversity
technique (D-Only). We observe that the values of AC in D-
Only are lower than the values of AC in S+D+R. However,
the corresponding RoA values for S+D+R are also lower
in D-Only, which shows that the attacker is less likely to
attack again. Figure 7b compares the Reliability values of
the cloud-band with 150 and 400 VMs before and after
deploying the S+D+R technique. We select the boundaries
of n = 150 and n = 200 as the other values of n fall between
these two boundaries. We can observe how the Reliability
values increase after deploying S+D+R. After passing 10
hours of an assumed attack with α=0.2, the cloud-bands
that are secured with S+D+R are around 40% reliable, while
this rate reaches almost 0% for the current cloud-bands on
which no MTD techniques are deployed.

We deployed the S+D+R technique with 5V on the
cloud-band and evaluate the results. Figure 8 provides an
overview of the changes in the security metrics by compar-
ing the normalized values for the security metrics (between
zero and one) as the results of deploying S+D+R on the
cloud-band with 350 VMs. It is clear that the security metrics
are improved after deployment.

Nevertheless, the combination of MTD techniques can be
quantiﬁed based on the security levels expected by the cloud
providers of network administrators. As deploying MTD
techniques can be costly, it is important for cloud providers

to understand the trade-offs between security and economic
considerations.

5 ECONOMIC METRICS FOR MTD TECHNIQUES

Although security metrics reveal different dimensions of a
cloud’s security posture, investigating the economic aspects
of the deployment of MTD techniques is also crucial. Many
studies have weighed the costs and beneﬁts of investments
in security using different models, such as [1], [20], [25]. In
[1], the authors utilized an attack graph that analyzed the
impacts of behavioral decision-making on security against
the costs of security investments using a game-theoretic
model. By contrast, in [25], the authors conducted a com-
prehensive evaluation of the beneﬁts of security investments
using a multi-defender game-theoretic model. In particular,
they considered using a MTD technique to make the defen-
sive model dynamic by applying changes in the conﬁgu-
ration that fell into the Shufﬂe MTD category. An analysis
that used a similar approach to evaluating multiple MTD
techniques was presented in [16]. In this study, the authors
utilized three MTD techniques – namely, service rotation, IP
rotation, and address space layout randomization (ASLR)
techniques – and quantiﬁed the beneﬁts of using multiple
MTDs versus using a single MTD. However, this evaluation
was based on Shufﬂe techniques only, as all rotation and
randomization MTD techniques are categorized as Shufﬂe
techniques [15]. Thus, evaluations of MTD techniques in the
cloud that are based on both security and economic metrics,
and evaluations of the Diversity technique that seek to ﬁnd
an optimal diversity assignment solution, are still missing
in the current literature.

Here, we compute various economic metrics to provide
different perspectives on MTD deployment scenarios based
on a cloud example.

5.1 A Case Study Based on the E-Health Cloud Model

We consider a case study based on the personal health
information (PHI) of patients, including their medical his-
tories, located in a private personal health cloud (PHC), as
shown in Figure 1. We assume that the attacker can use
the vulnerabilities of the cloud’s components (e.g., VMs) to
get into the cloud and to ﬁnd a path to the PHI database.
In this section, we aim to evaluate the effectiveness of MTD
techniques in terms of their economic metrics. We utilize the
HARM generated for the e-health cloud model as presented
in Figure 2. Table 3 displays the existing vulnerabilities
on each VM [33], together with the asset value (AV) and
the exploitability factor (EF), which are required for an
economic evaluation. Moreover, we assume that the cloud
provider has one back-up OS that can be used for the

01Risk01AC01RoA0101Risk01AC01RoA01ReliabilityEVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

10

TABLE 3: VM assets and vulnerabilities (Note that vm10 is the target VM and includes PHI records.)

VMs

OS (θ)

Asset Value
(AV) ($)

Vulnerabilities (V)

V-ID

CVE-ID

Threat

Exploitability AC

EF (%)

vm1−vm5 Win10

500

vm6−vm9

Linux

480

vm10

Linux

10000

Back-up OS

Fedora

450

ν1,W CVE-2018-8490
ν2,W CVE-2018-8484
ν3,W CVE-2018-0784

Remote
Privilege Escalation
Privilege Elevation

ν1,L
ν2,L
ν3,L

ν1,L
ν2,L

ν1,F

CVE-2018-14678 DDoS
CVE-2018-14633 DDoS & Remote
CVE-2017-15126 Use After Free (UAF)

CVE-2018-14678 DDoS
CVE-2018-14633 DDoS & Remote

CVE-2014-1859

Symlink attack

0.17
0.18
0.28

0.18
0.22
0.22

0.18
0.22

0.18

1.6
2.2
1.2

2.2
3
1.9

2.2
3

4.5

0.6
0.59
0.59

0.59
0.47
0.59

0.59
0.47

0.3

deployment of the Diversity technique. We further assume
that the PHI records are stored in a DB connected to vm10,
and that any successful attack exploiting vm10 will cause
signiﬁcant damage (of $10, 000) to the organization due to
the loss and/or disclosure of patients health information.

5.2 Single Loss Expectancy

The single loss expectancy (SLE) measures an organiza-
tion’s expected loss from a single threat [30]. SLE can be
determined for a cloud based on the asset values (AVs)
for each VM, including the costs of maintenance, running
the OS, services, DB record values, and applications. The
estimated AV for each OS is shown in Table 3. We assume
that SLE can be calculated for both the VM and the network
(cloud) levels. The value of SLE for a VM can be obtained
by multiplying the asset value and the maximum percentage
of loss for that asset caused by a threat, which is called an
exposure factor (EF); see Equation 9.

(cid:32)

SLEvmi =

1 −

(cid:89)

(cid:16)

1 − EFvj,θ

(cid:33)

(cid:17)

× AVvmi

(9)

vj,θ∈Vi,θ

In Equation 9, the AV consists of the costs associated with
running an active VM (i.e., purchasing a license for an OS,
applications, DB values, etc.).

The SLE for the cloud (SLEc) including all assets (here,

VMs) can be calculated based on Equation 10.

SLEc =

(cid:88)

(cid:18) (cid:88)

(cid:19)

SLEvmi

ap∈AP

vmi∈ap

(10)

Note that AP denotes the set of all possible attack paths

from an attacker to the DB in the cloud model.

5.3 Annual Loss Expectancy

Annual loss expectancy (ALE) can be deﬁned as the ex-
pected ﬁnancial loss due to an attack event, and can be
computed by the product of SLE and the annualized rate of
occurrence (ARO), which represents the estimated number
of occurrences of a threat event per year [30].
(cid:18) (cid:88)

(cid:88)

(cid:19)

SLEvmi × AROvmi

(11)

ALEc =

ap∈AP

vmi∈ap

5.4 Beneﬁts of Security

Many defensive strategies can be adapted to the cloud to
either avoid or mitigate the exploitation of or damage to the
cloud. In this paper, we evaluate the beneﬁts associated with
deploying MTD techniques. Beneﬁts of security (BS) [10]
can be used to show the effects of deploying a single or a
combination of defensive techniques. The beneﬁts of secu-
rity for a cloud BSc can be computed based on Equation 12.
In Equation 12, ALEµ
c denotes the ALE value of the cloud
after deploying MTD techniques. µ ⊆ {S, D, R} denotes a
set of MTD used as defensive techniques.

BSµ

c = ALEc − ALEµ
c

(12)

Another evaluation measurement that uses the ALE
values of the cloud before and after deploying the MTD
techniques is the mitigation factor. The mitigation factor,
denoted by M F µ, shows the ability of the defensive MTD
techniques to impair the attack. M F µ takes values within
the range [0, 1] as in Equation 13. Note that, a larger value
of M F µ is more desirable.

M F µ =

(cid:40)

1 − ALEµ
c
ALEc
0,

,

c < ALEc

if ALEµ
otherwise

(13)

5.5 Costs of Security

The costs of security (CS) consist of any expenses associ-
ated with the use of a defensive security mechanism, such
as the costs of deployment, purchases, maintenance, and
patching [12]. In addition, the costs of security can also
include indirect costs, such as the costs associated with a
loss of productivity due to system downtime, or of having
to perform other security-related activities, such as training.
However, for simplicity, we make the following assump-
tions regarding the costs of security. We assume that the
unit cost of deploying the Shufﬂe technique for a given VM
is $20 per operation, which includes the costs of employing
experts and the loss of productivity. We also assume that
the unit cost of deploying the Diversity technique on a
VM such that a given VM is replaced with the back-up OS
(Fedora in Table 3) is $55 per operation, which includes the
costs of experts, performing maintenance, and the loss of
productivity for a given VM for an operation per year [36],
[40].

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

11

5.6 Return on Security Investment

The overall beneﬁts of the selected defensive MTD strategies
relative to the costs of implementation can be evaluated us-
ing the return on security investment (RoSI). RoSI can be
used to evaluate the proﬁtability of a defensive investment
relative to the costs, as formulated in Equation 14.

RoSI µ

c =

BSµ

c − CSµ
CSµ

(14)

5.7 Shufﬂe Evaluation

In this section, we evaluate the Shufﬂe technique based
on economic metrics using the PHC cloud example. We
propose a VM placement strategy based on the shortest path
in the upper layer of the HARM. We aim to enhance the
migration scenarios for the Shufﬂe technique by using the
shortest path rather than a random VM placement strategy.
The idea behind selecting the shortest path strategy for
the VM placement is to take advantage of the shortest
attack path (SAP) [45] alongside other beneﬁts of the Shufﬂe
technique.
Migration Strategy. We propose the shortest path injection
approach,
in which a selected VM can be moved and
connected to the VMs located in the shortest path in the
upper layer of the HARM. Since there may be more than
one shortest path, we utilize a migration strategy to ﬁnd the
most critical shortest path, as in Equation (15).

Let SAP = {sp1, sp2, sp3, . . . , spq} be a set of possible
shortest paths existing in the upper layer of the HARM.
Then, we deﬁne the strategy Tsp as a selected shortest path
with lower in-degree values, as follows.

Tsp = min

sp∈SAP

(cid:16) (cid:88)

(cid:88)

(cid:17)

aij

vmi∈sp

j≤n

(15)

We deploy the Shufﬂe techniques on all VMs in the
upper layer of the HARM, and evaluate the effectiveness of
each migration scenario. We examine both the security and
the economic metrics in order to ﬁnd the best deployment
scenario. Note that because we lack real data to estimate
ARO, we assume in all our evaluations that the ARO
value is one (similar to [10]). Table 4 displays the results
of deploying the Shufﬂe technique on the VMs based on
the Riskc, ACc, and RoAc security metrics; and on the
ALEc, BSc, and RoSIc economic metrics. Table 4 shows
that the most promising approach based on the security
metrics is deploying the Shufﬂe technique on VM vm5,
which yields the lowest Riskc and RoAc values. The table
also shows that that the most promising approach based on
the economic metrics is deploying the Shufﬂe technique on
VM vm9, which yields higher RoSIc values (RoSIc=2631)
than the other deployment scenarios. However, when the
VM vm9 is selected for the Shufﬂe technique, it still yields
adequate results for RoA of about 87 (the second highest
RoAc values). Thus, it appears that the cloud provider can
incorporate both RoA and RoSI into the decision-making
process, and prioritize them based on their values.

5.8 Diversity Evaluation

In Subsection 4.2, we evaluated the Diversity technique
using security metrics in a large cloud-band model. Here,

TABLE 4: The results of deploying the Shufﬂe technique on
each VM in the cloud

VM ID

Security Metrics

RiskS
c

ACS
c

RoAS
c

Economic Metrics
c ($) BSS

ALES

c ($) RoSI S

c M F S

(%)

vm5
vm6
vm9
vm4
vm2
vm3
vm1
vm7
vm8
Best

118.35
126.14
117.65
128.97
135.58
149.98
140.54
145.73
182.07
vm5

136.7
134.7
124.7
142.5
147.3
163.5
150.9
158.5
198.3
vm8

77.51
87.19
81.7
87.15
92.66
102.27
96.79
99.52
124.23
vm5

113878
114913
107563
115712
116912
131045
117812
130178
159910
vm9

46315
45281
52630
44482
43282
29149
42382
30015
283
vm9

2315
2263
2631
2223
2163
1456
2118
1500
13
vm9

28.9
28.3
32.9
27.8
27.1
18.2
26.5
18.8
0.2
vm9

we extend our evaluation of the Diversity technique by con-
sidering economic metrics and optimization. We consider
deploying the Diversity technique based on two scenarios:
(i) deploying the Diversity technique on single or multiple
VMs using a single back-up OS; and (ii) deploying the
Diversity technique on multiple VMs using multiple back-
up OSs (using an optimization model).

Scenario 1. We deploy the Diversity technique only on a
single VM through exhaustive search (ES). We evaluate the
effectiveness of the Diversity technique by computing the
security and economic metrics. Table 5 shows the results of
deploying the Diversity technique on each VM. The experi-
mental results show that for the security metrics, deploying
the Diversity technique on VM vm5 yields the best results in
terms of Riskc, ACc, and RoAc. For the economic metrics,
it yields the lowest ALEc , which is 157266. It also leads
to the highest BSc and RoSIc values, which are 2928 and
52.24, respectively.
Scenario 2. We evaluate the deployment of the Diversity
technique on various VMs with a single back-up OS. To
do so, we leverage two strategies for ﬁnding a set of VMs
for deploying the Diversity technique (OS diversiﬁcation):
random VM selection (RVS) and betweenness VM selection
(BVS) (as in Subsection 4.2). We compare the results of
deploying these two strategies on the PHC cloud example
while focusing on the return on the security investment and
the cost of security. We aim to ﬁnd a trade-off between the
number of OS diversiﬁcation variants (using the same back-
up OS) on a set of VMs and the CS, while maximizing
the RoSI. Figure 9 compares the results of deploying the
Diversity technique on various numbers of VMs (from one
to nine OS diversiﬁcation variants) for RoSI values based
on RVS and BVS strategies. The results show that deploying

TABLE 5: The results of deploying the Diversity technique
on each VM in the cloud

VM ID

Security Metrics

RiskD
c

ACD
c

RoAD
c

Economic Metrics

ALED

c ($) BSD

c ($) RoSID

c

vm5
vm6
vm9
vm4
vm2
vm3
vm1
vm7
vm8
Best

167.31
174.27
173.62
171.32
173.33
177.35
171.32
175.57
178.82
vm5

253
236.6
239.2
239.8
233.2
220
239.8
231.4
218.4
vm5

105.19
117.37
116.83
110.12
112.59
117.52
110.12
118.44
121.14
vm5

157266
157867
157701
157998
158364
159096
157998
158199
159030
vm5

2928
2327
2493
2196
1830
1098
2196
1994
1163
vm5

52.24
41.31
44.33
38.93
32.27
18.96
38.93
35.26
20.15
vm5

M F D

(%)

1.8
1.6
1.7
1.4
1.1
0.7
1.4
1.3
0.8
vm5

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

12

s
e
u
l
a
v
I
S
o
R

80

70

60

50

40

30

20

1

2

CS
RoSI-RVS
RoSI-BVS

3

4

5
No. of OS diversiﬁcation

6

7

8

9

300

250

200

150

S
C

of the same back-up operating system on endpoint i and
endpoint j of the edge (i, j).

The maximization objective function represents the ex-
pected net beneﬁt (EN B), which is calculated based on
Equation (16), in which M represents a large enough value
to be used as “big M” for penalizing the same back-up
operating system being assigned to adjacent nodes.

100

50

0

EN B =ALEafter − ALEbefore
− cost of security −

(cid:88)

M fij

(i,j)∈E

(cid:88)

(cid:88)

=

SLEd

i AROi −

(cid:88)

(cid:88)

SLEiAROi

i∈p

p∈paths
(cid:88)

−

p∈paths

i∈p

(cid:88)

CScdic −

(cid:88)

M fij

Figure 9: Comparing RoSI values obtained after deploying
the Diversity technique on various VMs to the CS based
on RVS and BVS (the asterisked point shows the optimal
solution.)

the Diversity technique on the four VMs with the highest
betweenness values reaches a peak and yields the best RoSI
values, while the cost of security remains between $100 and
$150. By contrast, the results based on the RVS strategy sug-
gest that deploying nine back-up OSs increases the RoSI,
but incurs the highest cost of security, of more than $250.
Moreover, the highest RoSI metric after deploying the BVS
strategy is about 75, while the highest RoSI metric resulting
from the RVS strategy is 70.

5.9 Optimal Diversity Assignment

In this section, we analyze the deployment of the Diversity
technique with multiple OS variants on multiple VMs using
an optimization model. We model the decision problem of
maximizing the expected net beneﬁt by assigning back-up
operating systems to existing virtual machines as a mathe-
matical programming model with binary decision variables.
In our model, we consider a graph coloring scheme in which
each back-up OS variant is assigned a color (c) in the graph,
such that no two adjacent VMs are assigned the same color
(back-up OS). The aim of this approach is to increase the
difﬁculty for an attacker, who would encounter a different
back-up OS in adjacent VMs through the attack path.

We use θ = {1, 2, . . . , k = |θ|} to represent the set of all
potential back-up operating systems from which to choose
to implement the Diversity technique on some virtual ma-
chines.

We use the binary decision variable dic ∀i ∈ V M, c ∈ θ
for virtual machine i and back-up operating system c, such
that dic takes value one if and only if back-up operating
system c is assigned to virtual machine i. We also use the
binary decision variable ei ∀i ∈ V M for virtual machine
i that takes value one if and only if virtual machine i is
assigned a back-up operating system.

In our mathematical programming model, we penalize
diversity assignments in which the same operating system is
assigned to adjacent nodes. Accordingly, we use the binary
decision variable fij ∀(i, j) ∈ E to penalize the assigning

i∈V M

c∈θ

(i,j)∈E

(16)

The objective function in (16) is formed ﬁrst by sub-
tracting the cost of security incurred by implementing the
Diversity technique from the beneﬁt of security that was
formulated in (12). Second, the penalty of assigning the
same back-up operating system to adjacent nodes is applied
to the objective function.

We formulate the term SLEd

i using the binary deci-
sion variables dic and ei in (17). According to this linear
formulation, the SLEd for virtual machine i remains un-
changed if no back-up operating system is assigned to it
(ei = dic = 0 ∀c ∈ θ). However, if back-up operating system
c is assigned to the virtual machine i (ei = dic = 1), the
value of SLEd is updated based on the asset value and
the exploitability factor of the assigned back-up operating
system c.

SLEd

i = SLEi(1 − ei) +

(cid:88)

(cid:88)

i∈V M

c∈θ

dicAV cEF c

(17)

The maximum expected net beneﬁt under all possible
assignments of |θ| potential back-up operating systems on
|V M | virtual machines is obtained by solving the optimal
diversity assignment problem (O-DAP) formulated in (18) as a
binary linear optimization model.

max
dic:i∈V M,c∈θ,ei:i∈V M,fij :(i,j)∈E

Z = EN B

s.t.

(cid:88)

c

dic ≥ ei ∀i ∈ V M

fij ≥ dic + djc − 1 ∀(i, j) ∈ E, ∀c ∈ θ
dic ∈ {0, 1} ∀i ∈ V M, ∀c ∈ θ
xi ∈ {0, 1} ∀i ∈ V M
fij ∈ {0, 1} ∀(i, j) ∈ E

(18)

Given a network of virtual machines with certain asset
values and exploitability factors, before implementing any
Diversity techniques (before solving the optimization prob-
lem), ALEbefore can be computed by summing SLE × ARO
over all virtual machines in all attack paths. Based on
the binary decision variables dic and ei, ALEafter can be
computed after updating the SLEd values according to (17).
The dependencies between the dic and ei values are
taken into account using the ﬁrst constraint in (16) (one

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

13

TABLE 6: back-up OS variants used for the optimization test
case

TABLE 7: Parameters computed for the seven back-up OS
variants

No.

back-up OS (θ)

1
2
3
4
5
6
7

HP-UX 11i
Windows (Win 8)
Solaris
Win XP
CentOS
OpenBSD
Win Server 2008

Vulnerabilities (V)
|V |
EF
0.55
4
0.53
4
0.51
3
0.49
3
0.47
2
0.45
1
0.43
1

CS ($) AV ($)

55
65
80
100
120
150
200

450
490
550
590
620
680
690

No.
1
2
3
4
5
6
7

Cost of security
55
65
80
100
120
150
200

Exploitability factor Asset Value
0.55
0.53
0.51
0.49
0.47
0.45
0.43

450
490
550
590
620
680
690

linear constraint for each virtual machine) which also sup-
ports the natural constraint that each virtual machine gets at
most one back-up operating system. The second constraint
in (16) is for obtaining the edges (i, j) for which the same
back-up operating system is assigned on adjacent nodes.
Accordingly, O-DAP model has (|θ| + 1)|V M | + |E| binary
decision variables and |V M | + |E| constraints.

Generally, the problem of assigning |θ| potential back-
up operating systems on |V M | virtual machines has
(|θ| + 1)|V M |
solutions because each virtual machine can
independent of others get either one of the back-up oper-
ating systems or none. Therefore, the solution to O-DAP
for instances with a large |V M | and |θ| cannot be found
by exhaustively going through all (|θ| + 1)|V M |
possibilities
and ﬁnding the solution with the maximum desired output.
However, our formulation provided in (18) is a binary linear
programming model, and can be used to efﬁciently ﬁnd the
globally optimal solutions to instances with thousands of
virtual machines in a reasonable time.

W

vm3

W

vm1

L

vm8

B6

vm6

vm10

vm4 W

A

L

vm7

vm9

B5

B6

vm5

vm2

W

Figure 10: Optimal OS diversity assignment satisfying the
coloring requirement on adjacent nodes and maximizing the
expected net beneﬁt (note that the back-up denoted by B5
and B6 are CentOS and OpenBSD, respectively.)

ALEbefore = 160194

SLE = [300.0, 300.0, 300.0, 300.0, 283.2
, 283.2, 283.2, 283.2, 283.2, 5900.0]

ARO = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1].

5.10 Numerical Experiment of Optimization Model

In this section, we discuss a numerical example with seven
potential back-up operating systems to be implemented as
the Diversity technique on nine virtual machines in the
upper layer of the HARM shown in Figure 2 and solve it
using Gurobi solver.

Table 6 shows an e-Health cloud equipped with var-
ious back-up OS variants that can be used for Diversity
techniques. The table represents the number of patched
or mitigated vulnerabilities and the cost of security for
each entry, as well as the asset value for each VM. It is
assumed that more secure back-up variants have higher cost
of security values, and that accordingly, the damage has less
impact.

Table 6 shows that the seven back-up systems have the
costs of security, the exploitability factors, and the asset
values displayed in Table 7. We have selected the economic
parameters consistent with our modeling assumptions for
the purposes of designing an experiment to demonstrate
how mathematical optimization can be used to solve the
optimal diversity assignment problem. However, the values
for the vulnerabilities are real metrics drawn from the Na-
tional Vulnerability Database (NVD) [32].

Based on the upper layer of the HARM shown in Figure
2, the values for ALEbefore, SLEi, and AROi are as follows:

The Gurobi model for this instance of the O-DAP is
provided in the Appendix, in which the value of “big M”
is considered to be 100, 000.

While this instance of the problem has (|θ| + 1)|V M | =
89 = 134217728 feasible solutions, the Gurobi solver obtains
the globally optimal solution (associated with the maximum
value of the expected net beneﬁt) in 0.02 seconds on an
ordinary laptop with 8.00 GBs of RAM and Intel Core i5
6360U CPU @ 2.00 GHz.

The optimal value of the expected net beneﬁt is 117.8
which is achieved by assigning back-up operating system 6
to virtual machines 5 and 6 and back-up operating system
5 to virtual machine 9 (d5,6 = 1.0, d6,6 = 1.0, d9,5 = 1.0).
These optimal changes to the upper layer of the HARM are
represented in Figure 10.

6 DISCUSSION AND LIMITATIONS

In Subsection 4.2, we showed that deploying the Diversity
technique can enhance the security of the cloud by increas-
ing the AC values (i.e., the attacker must expend more
effort to penetrate the cloud and exploit a target). We also
observed that deploying the Diversity technique decreases
the RoA values, which indicates that the attacker would
be less likely to attack. Furthermore, we demonstrated that
increasing the number of variants of the OS diversiﬁcation

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

14

TABLE 8: Comparison of MTD techniques and combinations

Type

Shufﬂe

Diversity

Pros
Use of existing component
Affordable
Confuse the attackers
Increase attack difﬁculties
May vary existing vulnerabilities
Increase costs of attack
Waste Attacker’s information

Redundancy Provide reliability/availability

Combination Beneﬁt from advantages of all

Cons

Inherent vulnerabilities
Service Interruption

Additional costs
Rely on available variants

Additional costs
May increase attack surface
Higher complexity
Additional costs

technique leads to higher AC values, and provides lower
values for the RoA metrics.

By comparing three strategies for deploying the Diver-
sity technique on multiple VMs, we showed that the best OS
diversiﬁcation strategy is deploying the Diversity technique
on VMs grouped by the BVS group. However, deploying
the Diversity technique was not shown to have signiﬁcant
effects on the Risk and Reliability values. In Section 4.3, we
showed that combining all MTD techniques (S+D+R) could
improve all aspects of security with respect to the security
metrics used (i.e., the Risk, AC, RoA, and Reliability
values).

We compared D-Only to all MTD techniques combined
(S+D+R), and observed that the results of deploying S+D+R
were better. The values of the RoA metric in S+D+R were
less than those in D-Only. Moreover, the deployment of
S+D+R led to more promising results for Reliability; see
Figure 7. Indeed, we found that deploying S+D+R could
help cloud providers keep the security level of the cloud
at the desired level. Figure 8 shows the overall results of
combining the MTD techniques. Based on a comparison of
all security metrics before and after deploying the MTD
techniques, it shows the effectiveness of the deployment
of MTD techniques in one scope. When we compare the
metrics displayed in Figure 8, we can see that deploying
S+D+R decreased the RoA and the overall risk of the cloud,
while the AC and Reliability values increased. However,
we could also change the parameters used to obtain the
desired results based on the type of cloud and the required
security levels. For instance, we experimented with setting
the attack rate at 0.2, and setting the OS diversiﬁcation
variants between 1v and 5v. We summarized the advantages
and disadvantages of using single a MTD technique and the
combination of the MTD techniques in Table 8 based on the
results obtained in this study, and on insights from the MTD
survey presented in [15].

In addition, we conducted our experiment by modeling
a PHC cloud example to evaluate the security and economic
metrics for both the Shufﬂe and the Diversity MTD tech-
niques. We leveraged a VM placement strategy for deploy-
ing the Shufﬂe technique. We also utilized two strategies for
deploying the Diversity technique in which a single back-
up OS could be deployed on either one selected VM or a
multiple set of selected VMs in the cloud. We observed that
deploying the Diversity technique using the same OS (one
OS variant) on multiple VMs could enhance RoSI values.
We further found that compared to the other Diversity tech-
nique strategies, deploying four OS diversiﬁcation variants
among four VMs had the highest betweeness values, which

led to the highest RoSI values, while incurring reasonable
CS values.

Moreover, we solved an optimal diversity assignment
problem in order to ﬁnd the most promising results based on
the given network and a set of various back-up OS variants
using the theoretical and mathematical optimization model
in Section 5.9. We showcased our proposed Diversity tech-
niques using a test case of seven OS variants (back-up OS)
and a cloud network with nine VMs based on the parame-
ters shown in Table 6. We used the Gurobi solver to ﬁnd the
optimal assignment of OS variants to virtual machines by
solving a binary linear programming model (O-DAP). In this
case, the globally optimal solution among more than 134
million possibilities was that assigning certain back-up OSs
to certain VMs yielded the maximum expected net beneﬁts
as in Section 5.9.
Limitations: In this paper, we did not consider the economic
metrics for combining all three MTD techniques. For each
MTD technique, the security and economic metrics may
be expected to vary in different ways. A multi-objective
optimization was needed to solve the problem in such a
way that the three MTD techniques could be combined
effectively to satisfy the security and economic demands of
the cloud provider based on certain constraints, such as the
given model and the allocated budget.

Moreover, we only considered OS-level vulnerabilities
on each VM in order to perform the security analysis, even
though there were other vulnerabilities on each cloud’s
components, such as network, application, and service vul-
nerabilities. An investigation that weighs the optimal eco-
nomic investment against the vulnerability of information
is presented in [20]. However, based on [20], it is important
to construct a model that is able to speciﬁcally evaluate how
different types of vulnerabilities, and the potential losses
from such vulnerabilities, may affect the optimal security
investment when combining MTD techniques.

Finally, we deployed an optimization model for the
Diversity technique, while modeling and formulating op-
timization models for other MTD techniques, such as the
Shufﬂe and Diversity techniques. Moreover, multi-objective
optimization can be utilized to ﬁnd an optimal solution
based on several objective functions, such as RoSI and RoA.
We plan to address the use of an integrated optimization
model in future work. In addition, the optimal values we
obtained were based on a single operation only, even though
MTD techniques can be adapted and deployed on a periodic
basis. While defensive MTD techniques can be deployed
periodically or occasionally based on various factors, such
as the annual rates of attack (ARO) or of intrusion detection,
such approaches are outside the scope of this paper. How-
ever, we aim to address these issues in our future research.

7 CONCLUSIONS
Several techniques for enhancing the security of the cloud
have been proposed. Among them, MTD strategies for miti-
gating potential cybersecurity threats on the cloud represent
a new paradigm, and have been systematically examined
over the past couple of years. However, there is a lack of
research on the effectiveness of combining these techniques
in order to enhance the security of the cloud. In this study,

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

15

we reviewed the current state-of-the-art MTD techniques
that are applicable in the cloud. Then, we used a formal
security model to evaluate the effects of combined MTD
techniques. In comprehensive experimental analyses, we
demonstrated that a combined approach was more effective
than a single MTD technique. Our proposed approach can
be used for evaluating the effectiveness of individual or
combined MTD techniques based on both security and
economic metrics. Moreover, we evaluated the effectiveness
of MTD techniques for a speciﬁc e-health cloud model to
compare the costs of security and the value of the security
provided. We proposed an optimization model for diversity
allocation that generates the assignment associated with
the maximum expected net beneﬁt. We also showed that
our binary linear programming formulation could handle
large cloud models in a fraction of a second on an ordinary
computer.

REFERENCES

[1] Abdallah, M., Naghizadeh, P., Hota, A.R., Cason, T., Bagchi, S.,
Sundaram, S.: Behavioral and game-theoretic security investments
in interdependent systems modeled by attack graphs. IEEE Trans-
actions on Control of Network Systems 7(4), 1585–1596 (2020)
[2] Alavizadeh, H., Alavizadeh, H., Kim, D.S., Jang-Jaccard, J., Tor-
shiz, M.N.: An automated security analysis framework and im-
plementation for mtd techniques on cloud. In: International Con-
ference on Information Security and Cryptology. pp. 150–164.
Springer (2019)

[3] Alavizadeh, H., Hong, J.B., Jang-Jaccard, J., Kim, D.S.: Compre-
hensive security assessment of combined mtd techniques for the
cloud. In: Proceedings of the 5th ACM Workshop on Moving
Target Defense. pp. 11–20. ACM (2018)

[4] Alavizadeh, H., Hong, J.B., Kim, D.S., Jang-Jaccard, J.: Evaluating
the effectiveness of shufﬂe and redundancy mtd techniques in the
cloud. Computers & Security 102, 102091 (2021)

[5] Alavizadeh, H., Jang-Jaccard, J., Kim, D.S.: Evaluation for combi-
nation of shufﬂe and diversity on moving target defense strategy
for cloud computing. In: 2018 17th IEEE International Conference
On Trust, Security And Privacy In Computing And Commu-
nications/12th IEEE International Conference On Big Data Sci-
ence And Engineering (TrustCom/BigDataSE). pp. 573–578. IEEE
(2018)

[6] Alavizadeh, H., Kim, D.S., Jang-Jaccard, J.: Model-based evalu-
ation of combinations of shufﬂe and diversity mtd techniques
on the cloud. Future Generation Computer Systems 111, 507–522
(2020)

[7] Alavizadeh, H., Alavizadeh, H., Jang-Jaccard, J.: Cyber situation
awareness monitoring and proactive response for enterprises on
the cloud. In: 2020 IEEE 19th International Conference on Trust,
Security and Privacy in Computing and Communications (Trust-
Com). pp. 1276–1284 (2020)

[8] Antonatos, S., Akritidis, P., Markatos, E.P., Anagnostakis, K.G.:
Defending against hitlist worms using network address space
randomization. Computer Networks 51(12), 3471–3490 (2007)
[9] Azab, M., Hassan, R., Eltoweissy, M.: Chameleonsoft: a moving
target defense system. In: Collaborative Computing: Networking,
Applications and Worksharing (CollaborateCom), 2011 7th Inter-
national Conference on. pp. 241–250. IEEE (2011)

[10] Bistarelli, S., Fioravanti, F., Peretti, P., Santini, F.: Evaluation of
complex security scenarios using defense trees and economic in-
dexes. Journal of Experimental & Theoretical Artiﬁcial Intelligence
24(2), 161–192 (2012)

[11] Blakely, B., Horsthemke, W., Poczatec, A., Nowak, L., Evans,
N.: Moving target, deception, and other adaptive defenses. In:
Industrial Control Systems Security and Resiliency, pp. 95–118.
Springer (2019)

[12] B ¨ohme, R.: Security metrics and security investment models. In:
International Workshop on Security. pp. 10–24. Springer (2010)
[13] Cadini, F., Zio, E., Petrescu, C.A.: Using centrality measures to
rank the importance of the components of a complex network
infrastructure. In: CRITIS. pp. 155–167. Springer (2008)

[14] Cai, G.l., Wang, B.s., Hu, W., Wang, T.z.: Moving target defense:
state of the art and characteristics. Frontiers of Information Tech-
nology & Electronic Engineering 17(11), 1122–1153 (2016)

[15] Cho, J.H., Sharma, D.P., Alavizadeh, H., Yoon, S., Ben-Asher, N.,
Moore, T.J., Kim, D.S., Lim, H., Nelson, F.F.: Toward proactive,
adaptive defense: A survey on moving target defense. IEEE Com-
munications Surveys & Tutorials 22(1), 709–745 (2020)

[16] Connell, W., Albanese, M., Venkatesan, S.: A framework for mov-
ing target defense quantiﬁcation. In: IFIP International Conference
on ICT Systems Security and Privacy Protection. pp. 124–138.
Springer (2017)

[17] Cremonini, M., Martini, P.: Evaluating information security invest-
ments from attackers perspective: the return-on-attack (roa). In:
WEIS (2005)

[18] Danev, B., Masti, R.J., Karame, G.O., Capkun, S.: Enabling secure
vm-vtpm migration in private clouds. In: Proceedings of the 27th
Annual Computer Security Applications Conference. pp. 187–196.
ACM (2011)

[19] Gorbenko, A., Kharchenko, V., Romanovsky, A.: Using inherent
service redundancy and diversity to ensure web services depend-
ability. Methods, Models and Tools for Fault Tolerance pp. 324–341
(2009)

[20] Gordon, L.A., Loeb, M.P.: The economics of information security
investment. ACM Transactions on Information and System Secu-
rity (TISSEC) 5(4), 438–457 (2002)

[21] Hobson, T., Okhravi, H., Bigelow, D., Rudd, R., Streilein, W.:
On the challenges of effective movement. In: Proceedings of the
First ACM Workshop on Moving Target Defense. pp. 41–50. ACM
(2014)

[22] Hong, J., Kim, D.: Towards scalable security analysis using multi-
layered security models. Journal of Network and Computer Ap-
plications 75, 156 – 168 (2016)

[23] Hong, J., Kim, D.S.: Harms: Hierarchical attack representation

models for network security analysis (2012)

[24] Hong, J.B., Kim, D.S.: Assessing the effectiveness of moving target
defenses using security models. IEEE Transactions on Dependable
and Secure Computing 13(2), 163–177 (2016)

[25] Hota, A.R., Clements, A.A., Bagchi, S., Sundaram, S.: A game-
theoretic framework for securing interdependent assets in net-
works. In: Game Theory for Security and Risk Management, pp.
157–184. Springer (2018)

[26] Huang, Y., Ghosh, A.K., Bracewell, T., Mastropietro, B.: A security
evaluation of a novel resilient web serving architecture: Lessons
learned through industry/academia collaboration. In: Dependable
Systems and Networks Workshops (DSN-W), 2010 International
Conference on. pp. 188–193. IEEE (2010)

[27] Jafarian, J.H., Al-Shaer, E., Duan, Q.: An effective address mutation
approach for disrupting reconnaissance attacks. IEEE Transactions
on Information Forensics and Security 10(12), 2562–2577 (2015)
[28] Jia, Q., Sun, K., Stavrou, A.: Motag: Moving target defense against
internet denial of service attacks. In: Computer Communications
and Networks (ICCCN), 2013 22nd International Conference on.
pp. 1–9. IEEE (2013)

[29] Kampanakis, P., Perros, H., Beyene, T.: SDN-based solutions for
moving target defense network protection. In: World of Wireless,
Mobile and Multimedia Networks (WoWMoM), 2014 IEEE 15th
International Symposium on a. pp. 1–6. IEEE (2014)

[30] Krutz, R.L., Vines, R.D., Stroz, E.M.: The CISSP prep Guide:
Mastering the ten domains of Computer Security. Wiley New York
(2001)

[31] Luo, Y.B., Wang, B.S., Cai, G.L.: Effectiveness of port hopping as
a moving target defense. In: Security Technology (SecTech), 2014
7th International Conference on. pp. 7–10. IEEE (2014)

[32] Mell, P., Scarfone, K., Romanosky, S.: Common vulnerability scor-

ing system. IEEE Security & Privacy 4(6) (2006)

[33] NIST: National vulnerability database (nvd), https://www.nvd.

nist.gov/

[34] Okhravi, H., Comella, A., Robinson, E., Yannalfo, S., Michaleas, P.,
Haines, J.: Creating a cyber moving target for critical infrastruc-
ture applications. Critical Infrastructure Protection V pp. 107–123
(2011)

[35] Penner, T., Guirguis, M.: Combating the bandits in the cloud:
A moving target defense approach. In: Proceedings of the 17th
IEEE/ACM International Symposium on Cluster, Cloud and Grid
Computing. pp. 411–420. IEEE Press (2017)

EVALUATING THE SECURITY AND ECONOMIC EFFECTS OF MTD TECHNIQUES ON THE CLOUD

16

[36] Rabai, L.B.A., Jouini, M., Aissa, A.B., Mili, A.: A cybersecurity
model in cloud computing environments. Journal of King Saud
University-Computer and Information Sciences 25(1), 63–75 (2013)
[37] Roy, A., Kim, D.S., Trivedi, K.S.: Attack countermeasure trees
(ACT): towards unifying the constructs of attack and defense trees.
Security and Communication Networks 5(8), 929–943 (2012)
[38] Sahner, R.A., Trivedi, K., Puliaﬁto, A.: Performance and Reliability
Analysis of Computer Systems: An Example-Based Approach Us-
ing the SHARPE Software Package. Springer Publishing Company,
Incorporated (2012)

[39] Scott-Hayward, S., O’Callaghan, G., Sezer, S.: Sdn security: A
survey. In: Future Networks and Services (SDN4FNS), 2013 IEEE
SDN For. pp. 1–7. IEEE (2013)

[40] Sonnenreich, W., Albanese, J., Stout, B., et al.: Return on secu-
rity investment (rosi)-a practical quantitative model. Journal of
Research and practice in Information Technology 38(1), 45 (2006)
[41] Taguinod, M., Doup´e, A., Zhao, Z., Ahn, G.J.: Toward a moving
target defense for web applications. In: Information Reuse and
Integration (IRI), 2015 IEEE International Conference on. pp. 510–
517. IEEE (2015)

[42] Vikram, S., Yang, C., Gu, G.: Nomad: Towards non-intrusive
moving-target defense against web bots. In: Communications and
Network Security (CNS), 2013 IEEE Conference on. pp. 55–63.
IEEE (2013)

[43] Yuan, E., Malek, S., Schmerl, B., Garlan, D., Gennari,

J.:
Architecture-based self-protecting software systems. In: Proceed-
ings of the 9th international ACM Sigsoft conference on Quality of
software architectures. pp. 33–42. ACM (2013)

[44] Yusuf, S.E., Ge, M., Hong, J.B., Kim, H.K., Kim, P., Kim, D.S.:
Security modelling and analysis of dynamic enterprise networks.
In: Computer and Information Technology (CIT), 2016 IEEE Inter-
national Conference on. pp. 249–256. IEEE (2016)

[45] Yusuf, S.E., Hong, J.B., Ge, M., Kim, D.S.: Composite metrics for
network security analysis. Software Networking 2017(1), 137–160
(2017)

[46] Zhuang, R., DeLoach, S.A., Ou, X.: Towards a theory of moving
target defense. In: Proceedings of the First ACM Workshop on
Moving Target Defense. pp. 31–40. ACM (2014)

Hooman Alavizadeh is a Postdoc Fellow at the
School of Natural and Computational Sciences,
Massey University, Auckland, New Zealand. He
received his PhD degree in cybersecurity from
Massey University, New Zealand, and received
his MSc degree in Computer Science from East-
ern Mediterranean University (EMU), Cyprus.
His research interests are in Moving Target De-
fense (MTD), cloud security, security modeling
and analysis, and AI-based cyber defense.

Samin Aref works at the Max Planck Institute for
Demographic Research in Rostock, Germany.
He holds a PhD in Computer Science from the
University of Auckland and a MSc in Indus-
trial Engineering and Operations Research from
Sharif University of Technology.

Dong Seong Kim is an Associate Professor in
the School of Information Technology and Elec-
trical Engineering, The University of Queensland
(UQ), Brisbane, Australia. Prior to UQ, he led
the Cybersecurity Lab at the University of Can-
terbury (UC), Christchurch, New Zealand from
August 2011 to January 2019. His research in-
terests are in cybersecurity and dependability for
various systems and networks.

Julian Jang-Jaccard is an Associate Profes-
sor in School of Natural and Computational
Sciences, Massey University, Auckland, New
Zealand. Julian received her PhD in database
transaction (University of Sydney); a Master of
Information Engineering (University of Sydney)
and a Bachelor of Computer Science (Univer-
sity of Western Sydney). Her research interests
spans from database, cloud computing, mobile
systems, cybersecurity, and big data analytics
with a speciﬁc focus on security and privacy.

8 APPENDIX*
Gurobi model for the instance of the O-DAP problem used
as a test case in Subsection 5.10 is provided below. Properties
of the seven potential back-up operating systems were pro-
vided in Table 6. In this instance, Diversity technique was
to be implemented on nine virtual machines in the network
shown in Figure 2.
Maximize

(-269.2
+ 2915.0 d1,1
+ 3051.4 d1,2
+ ...
+ 4250.5 d9,7
+ -3600.0 e1
+ -3000.0 e2
+ ...
+ -4248.0 e9
+ -100000.0 f1,3
+ -100000.0 f1,4
+ ...
+ -100000.0 f7,9)

Subject To
-1.0 d1,1 + -1.0 d3,1 + f1,3 ≥ -1.0
-1.0 d1,1 + -1.0 d4,1 + f1,4 ≥ -1.0
...
-1.0 d7,7 + -1.0 d9,7 + f7,9 ≥ -1.0
d1,1 + d1,2 + d1,3 + d1,4 + d1,5 + d1,6 + d1,7 ≤ e1
d2,1 + d2,2 + d2,3 + d2,4 + d2,5 + d2,6 + d2,7 ≤ e2
...
d9,1 + d9,2 + d9,3 + d9,4 + d9,5 + d9,6 + d9,7 ≤ e9

Binaries
d1,0, d1,1, ... , d9,7, e1, e2, ... , e9, f1,3, f1,4, ... , f7,9

