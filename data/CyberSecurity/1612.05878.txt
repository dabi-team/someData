Graph-based Cyber Security Analysis of State

1

Estimation in Smart Power Grid

Suzhi Bi and Ying Jun (Angela) Zhang

6
1
0
2
c
e
D
8
1

]

Y
S
.
s
c
[

1
v
8
7
8
5
0
.
2
1
6
1
:
v
i
X
r
a

ABSTRACT

Smart power grid enables intelligent automation at all levels of power system operation, from electricity

generation at power plants to power usage at households. The key enabling factor of an efﬁcient smart

grid is its built-in information and communication technology (ICT) that monitors the real-time system

operating state and makes control decisions accordingly. As an important building block of the ICT system,

power system state estimation is of critical importance to maintain normal operation of the smart grid,

which, however, is under mounting threat from potential cyber attacks. In this article, we introduce a graph-

based framework for performing cyber-security analysis in power system state estimation. Compared to

conventional arithmetic-based security analysis, the graphical characterization of state estimation security

provides intuitive visualization of some complex problem structures and enables efﬁcient graphical

solution algorithms, which are useful for both defending and attacking the ICT system of smart grid.

We also highlight several promising future research directions on graph-based security analysis and its

applications in smart power grid.

I. INTRODUCTION

Smart power grid is committed to providing stable, high-quality and inexpensive electricity supply to

meet the surging power demand of modern society through its intelligent energy management in power

generation, transportation and distribution, and its introduced competitive market mechanisms. Essentially,

the intelligence of smart grid is driven by its embedded ICT infrastructure, especially the EMS/SCADA

(Energy Management System and Supervisory Control and Data Acquisition) system [1]. As shown in

Fig. 1, the SCADA system is responsible for collecting the measurement data reported by distributed

meters/sensors, which is then fed to the state estimator located at the control center for deriving the

S. Bi is with the College of Information Engineering, Shenzhen University, Shenzhen, China (E-mail: bsz@szu.edu.cn).

Y. J. Zhang is with the Department of Information Engineering, The Chinese University of Hong Kong, Shatin, New Territories, Hong

Kong, and Shenzhen Research Institute, The Chinese University of Hong Kong, Shenzhen, China. (Email: yjzhang@ie.cuhk.edu.hk).

December 20, 2016

DRAFT

 
 
 
 
 
 
2

Control flow

Data flow

Control Center

EMS and
other
applications

State
estimator

S
C
A
D
A

Load curtailment/Generation dispatch/…

Phasor
measurement
unit

Generator

Bus

Meter measurements

Flow meter

Load

Injection meter

Fig. 1. An illustration of the operation of the SCADA/EMS system for a four-bus network.

estimation of system state variables, e.g., bus voltage amplitudes and phases. Based on the estimation,

the EMS, as well as other power system applications, then makes control decisions, e.g., optimal power

ﬂow, load curtailment, and electricity pricing, to adjust the physical aspects of the power grid. Evidently,

a secure and efﬁcient power system requires accurate state estimation that truthfully reﬂects the system

operating state.

The dependence of smart grid on its ICT infrastructure makes cyber-attacks on state estimation a viable

approach to impact the normal system operation. In the conventional power network, power devices are

isolated from the public network and under close control by the industrial system operator. In smart grid,

however, many distributed smart meters are installed in the households, which often connect to the public

internet and run IP-based communication protocols to facilitate two-way information exchange between

the users and system operator. This computer-network-alike ICT structure achieves low management cost,

but also exposes the smart grid to potential cyber attacks through the public information access points.

One common cyber attack in smart grids is false-data injection, which distorts the measurements collected

by the system operator through either physical device compromise or remote cyber-data injection [2].

Being able to compromise the state estimation, an adversary capable of false-data injection can have

large impact on the power system and beyond, such as earning lucrative proﬁt from electricity price

manipulation in the power market [3], [4], or causing regional blackout to induce chaos and ﬁnancial

loss [5].

December 20, 2016

DRAFT

3

State estimator commonly uses bad data detection (BDD) mechanism to ﬁlter faulty data, either caused

by random network error or malicious injection [1]. However, BDD is unable to detect some structured

collaborating injection attacks that are disguised as normal measurements [2]. One countermeasure is

data-driven detection, which uses the statistical features of the previously collected measurement data to

identify anomalous measurements [4]. Nonetheless, it cannot fully eliminate the threat of injection attacks

and its performance highly depends on the accuracy of the extracted statistical features. To fundamentally

mitigate false-data injection attack, it is necessary to secure meter measurements themselves to evade

malicious injections by, for example, guards, video monitoring, or tamper-proof communication systems

[6]. In a large power network with hundreds of meter measurements, it is tempting to devise a strategic

protection that achieves system security requirement with low cost, e.g., small number of secured devices.

Arithmetic and graphical methods are two popular approaches for security analysis in power system

state estimation. Speciﬁcally, arithmetic approach applies algebra and matrix theory to analyze the

solution space of the state estimation, and thus the potential threats and countermeasures of injection

attacks (e.g., [7], [8]). Despite its effectiveness in extensive applications, arithmetic approach is found

inefﬁcient in handling some complex problems especially for those with combinatorial features, e.g.,

involving selecting k out of K buses. Alternatively, graph-based approach, which uses graph models to

characterize the security problems, can provide intuitive visualization of complex problem structures (e.g.,

[9]–[12]). Its useful insight can lead to efﬁcient optimal or sub-optimal graphical solution algorithms that

are otherwise not achievable by arithmetic approaches. However, classic graph algorithms often need

signiﬁcant modiﬁcations to solve power system security problems of unique graphical structures.

In this article, we provide an overview of graphical methods for performing cyber-security analysis

in power system state estimation. Speciﬁcally, we ﬁrst describe the method to model power network in

a graph. Then, we establish a graph-based characterization of state estimation security, and introduce

some representative graphical algorithms to solve security problems in state estimation. We also suggest

several future research directions on graph-based security analysis and its applications in smart power

grid. Finally, we conclude this article.

II. GRAPH MODELING OF POWER NETWORK AND MEASUREMENTS

As shown in Fig. 2(a), a power network consists of a number of buses, loads, power generators, and

power transmission lines that interconnect them.1 One important parameter representing the operating state

1The topology of

the power network in Fig. 2 is adapted from the IEEE 14-bus test case system (available online at

https://www.ee.washington.edu/research/pstca/, Sept. 2016.)

December 20, 2016

DRAFT

4

13

14

11

10

5

6

4

5

3

4

12

2

1

1

2

a

9

7

8

3

5 Bus index

Line flow meter

Injection meter

6

5

5

4

3

c

4

1

2

1

2

12

1

2

1

2

1

2

1

2

13

11

14

10

6

5

5

4

3

1 Meter index

6

5

5

4

b

9

4

3

7

8

d

4

Injection-to-edge mapping

Fig. 2.
(a) An example 14-bus power network and measurements; and (b) its graph modeling, where the red vertices (edges) denote
the buses (transmission lines) that have injection (ﬂow) meters installed; (c) an example measured subnetwork; and (d) an edge-measured
Steiner three embedded in the subnetwork.

of the power system is the phasor of each bus, including its voltage phase angle and voltage magnitude.

In practice, the voltage magnitudes can often be directly measured, while the values of phase angles

need to be obtained from state estimation [1]. Conventionally, in the linearized DC measurement model,

the estimate of the phase angles is obtained from the active power measurements, i.e., the active power

ﬂows along the power lines (e.g., meter 1) and the active power injections at the buses (e.g., meter 2).

In recent years, phasor measurement unit (PMU) has emerged as an advanced metering technology that

can provide direct real-time voltage phasor measurement with high accuracy and reliability in addition

to the conventional meters. In practice, due to high PMU installation cost and the legacy power system

in operation, state estimation is often obtained from a mixture of PMU and power ﬂow measurements.

For a power network with n + 1 buses, we regard one of them as the reference bus, denoted by R,

and estimate the phase angles of the rest n buses (state variables) from m meter measurements, denoted
by θ = (θ1, θ2, .., θn)

, respectively. Besides, we denote the set of n unknown

and z = (z1, z2, .., zm)

′

′

December 20, 2016

DRAFT

5

buses as S, the set of all the buses V , R ∪ S, the set of transmission lines as E, and the set of m

measurements as M.

As shown in Fig. 2(b), a power network can also be described in an undirected graph, where vertices

and edges represent buses and transmission lines, respectively. Without loss of generality, we regard bus

1 as the reference throughout this article. Loosely speaking, a ﬂow meter reﬂects the difference between

two state variables; an injection meter reﬂects the sum of differences of a state variable with respect to

the subset of state variables in one-hop distance; a PMU meter reﬂects the difference of a state variable

with respect to the reference bus. For the convenience of exposition, we consider in this article only

conventional power ﬂow measurements. In fact, a PMU measurement can be equivalently converted to a

ﬂow measurement in security analysis, which is discussed in [9].

Given a subset of meter measurements ¯M ⊆ M, we can ﬁnd correspondingly a subnetwork (and
¯M
(cid:0)
transmission line where it is installed and the two buses in both ends; an injection meter measures the

¯V, ¯E
. That is, a ﬂow meter measures the
(cid:1)

thus a subgraph) measured by ¯M, denoted by G

=

(cid:0)

(cid:1)

bus it is installed, the transmission lines connected to the bus, and all the buses on the other end of
the transmission lines. In Fig. 2(c), for instance, the subgraph measured by ¯M = {r1, r2, r3, r4, r5} is
¯V = {v1, v2, v4, v5, v6} and ¯E = {e12, e15, e25, e45, e56}, where r2 and r4 are injection meters and eij

denotes the edge connecting vertex i and j. For a normal power network, the measured full graph G (M)

includes all the vertices V to estimate all the state variables, but not necessarily all the transmission lines.

For instance, we can see that the transmission line between bus 2 and 4 is not measured by any meter,

and thus is not present in the graph model in Fig. 2(b).

III. GRAPHICAL CHARACTERIZATION OF STATE ESTIMATION PROTECTION

A. State Estimation Problem

The state estimation problem is to derive the unique estimation of θ from the measurements z, which

are related by

z = Hθ + e.

(1)

Here, H denotes the measurement Jacobian matrix and e denotes independent measurement noise with
zero mean. The exact value of H is related to the physical aspects of the power network, e.g., the network

topology, the placement of meters, and the transmission line impedance [1]. In particular, we consider
in this article a well-functioning power network that a unique estimate ˆθ of the unknown variables can

be obtained from the received measurements. This requires sufﬁcient number of meters to be placed in

December 20, 2016

DRAFT

6

proper locations such that H is full column rank, i.e., rank (H) = n. At least n meters are needed to

derive a unique state estimation. Meanwhile, the other m − n measurements provide the redundancy to

improve the resistance against random errors. Detailed meter placement methods can be found in [13]. Let
ˆθ denote the maximum likelihood estimation of θ [1]. The current power systems use BDD mechanism

to remove the bad data assuming that the errors are random and unstructured. It calculates the residual
r = z − H ˆθ and compares its l2-norm with a prescribed threshold τ . A measurement z is identiﬁed as a
bad data measurement if r = ||z − H ˆθ||2 > τ , or otherwise a normal measurement.

B. Data Injection Attack

A data injection attack compromises the normal measurements through either physical access or remote
cyber control, resulting in fabricated measurements ˜z = z + a, where a denotes the injected data. It can
be easily shown that an injection attack structured as a = Hc, where c is an arbitrary vector, will
produce the same BDD residual as the normal measurement z, thus can introduce a bias c to the state

estimate without being recognized as a malicious attack [2]. This kind of attack is commonly referred to as

undetectable attack. In general, such an attack requires high level of coordination to compromise multiple

measurements simultaneously. In some cases, however, the adversary can exploit the special structure of
H to achieve the attacking objective by compromising only a small number of measurements. In fact,

we will show later how to use graphical methods to exploit the opportunity of undetectable attack with

the minimum number of meter measurements to compromise.

C. Power Network Observability

State estimation protection is closely related to the concept of power network observability. The

conventional power network observability analysis studies whether a unique estimate of all unknown

state variables can be determined from the measurements [1]. Notice that the observability of a network

is related to the network topology and the placement of meter measurements, rather than the value of

received measurements in real-time. Out of the m total meters, a set of n meter measurements is referred

to as a basic measurement set if the estimation of n unknown state variables can be uniquely derived

from them. It is proved that the presence of any data injection attack can be detected if we can make sure

that the measurements taken from at least one basic measurement set are trustworthy, i.e., the meters are

well-protected [7]. Intuitively, this is because the estimation obtained from a basic measurement set can

be used to validate the result derived from all the meter measurements.

December 20, 2016

DRAFT

7

In a large-size power network with several hundred of state variables, it could be infeasible to perform

security upgrade to protect n basic measurements under limited budget. Even if sufﬁcient budget is given,

protecting the n basic measurements in a random sequence may still open to attackers the possibility

to compromise a large number of state variables during the lengthy security installation period. In both

cases, it is valuable to devise a method that gives priority to defending a subset of state variables that

serve our best interests at the current stage, and opens to the possibility of expanding the set of protected

state variables in the future.

In light of this, [9] generalizes the concept of power network observability to subnetwork observability.
is referred to as observable if a unique estimation of ¯V can
Speciﬁcally, a subnetwork G
be derived from ¯M. Then, protecting the measurements in ¯M can ensure that any data injection attack
¯M
can be detected as long as it attempts to compromise any member in ¯V. The observability of G
(cid:1)
can be easily determined with simple matrix calculation. Accordingly, to defend a set of state variables,

¯V, ¯E
(cid:1)

¯M
(cid:1)
(cid:0)

=

(cid:0)

(cid:0)

denoted by D, the problem becomes ﬁnding an optimal observable subnetwork G
, either
with the minimum number of vertices or the minimum cost to secure the meters in ¯M, that satisﬁes
D ⊆ ¯V. An intuitive solution is to enumerate all possible vertices in S \ D to check if an observable

=

(cid:0)

¯M
(cid:1)
(cid:0)

¯V, ¯E
(cid:1)

subnetwork can be constructed together with D. This enumeration method, however, is combinatorial in

nature, and indeed the problem to ﬁnd the optimal subnetwork is proved to be NP-Hard [9].

D. Graphical Characterization of Observability

Alternatively, the network observability has an intuitive characterization using graphs. Speciﬁcally, a

subnetwork G

¯M
is observable if and only if an edge-measured Steiner tree (EMST) [9],
(cid:1)
(cid:0)
¯V, ˆE(cid:17), can be constructed from the subnetwork and satisﬁes the following conditions:
denoted by T = (cid:16)

¯V, ¯E
(cid:1)

=

(cid:0)

1) the reference vertex R is contained in the tree, i.e., R ∈ ¯V;
2) each edge e ∈ ˆE is mapped to a ﬂow meter or an injection meter p ∈ ¯M that measures it;
3) different edges are mapped to different meters in ¯M.

Intuitively, this requires to ﬁnd a tree that connects all the vertices in the subgraph to the reference

vertex, where each edge is mapped to a meter that takes its measurement. For instance, an EMST and

the measurement-to-edge mappings are shown in Fig. 2(d) for the observable subnetwork in Fig. 2(c).

Such a tree is named a Steiner tree because in general only a subset of vertices is included in the tree.
A special case is ¯V = V, where the Steiner tree becomes a spanning tree that includes all the vertices

in the network [13]. Thanks to the graphical structure of an observable subnetwork, we introduce in the

December 20, 2016

DRAFT

0/1

S

1

2

4

5

0/1

1-2

1-5

2-5

0/1

1/1

0/1

0/1

1-2

1-5

2-5

0/1

4-5

4-5

5-6

0/1

edges

5-6

measurements

8

0/1

t

1

2

4

5

6

buses

Fig. 3.
edges while the dashed lines denote unused edges.

Illustration of maximum ﬂow method for constructing an EMST from an observable subnetwork. The solid lines denote saturating

following section some efﬁcient graphical algorithms for security analysis in power system.

IV. GRAPH ALGORITHMS FOR POWER SYSTEM SECURITY ANALYSIS

A. Maximum-ﬂow Matching Algorithm

The graphical characterization establishes the equivalence between the subnetwork observability and

the existence of an embedded EMST. A natural question is how to construct such an EMST from an

¯M
(cid:0)

¯V, ¯E
(cid:1)
(cid:0)

=

observable subnetwork G
, which is very useful in visualizing the network observability to
enable efﬁcient tree-based algorithms. As ﬁnding a set of meters ˆM ⊆ ¯M to derive a unique estimation
of ¯V is easily achievable through Gauss-Jordan matrix elimination, the question lies in how to ﬁnd
the mappings between ˆM and the edges ¯E to satisfy the EMST deﬁnitions. Interestingly, the EMST

(cid:1)

construction problem can be solved in polynomial time using a maximum-ﬂow method [14].

We use an observable subnetwork in Fig. 2(c) as an example to illustrate the method to obtain an
EMST. As shown in Fig. 2(d), we have ¯V = {v1, v2, v4, v5, v6}, ˆM = {r1, r2, r4, r5} and the set of edges
measured by ˆM is ¯E = {e12, e15, e25, e45, e56}. Then, a directed graph is constructed in Fig. 3, where v1

is chosen as the root to construct the Steiner tree. We select in advance an edge connected to the root, say

e12, in the ﬁnal tree solution. This is achieved by setting both the lower and upper capacity bounds of the

edge to be 1. The other edges’ lower and upper capacity bounds are set to be 0 and 1, respectively. Then,

a maximum ﬂow is calculated from the source (s) to the terminal (t), which is achievable in polynomial

December 20, 2016

DRAFT

9

12

1

2

14

10

13

11

6

5

a

12

9

7

8

4

3

1

2

14

10

13

11

6

5

b

9

7

8

4

3

Root

Demand

Pseudo demand

Commodity

Illustration of commodity ﬂow maximization method for solving the optimal EMST problem. a) the Steiner arborescence constructed

Fig. 4.
from the graph model in Fig. 2(b); and the maximum commodity ﬂow solution when the arc weight is the same for all the arcs.

time using, e.g., Ford-Fulkerson Algorithm [14]. If the problem is feasible, i.e., the ﬂow solution is 1

in edge e12, we obtain a measurement-to-edge mapping by observing the saturating ﬂows in the graph.

Otherwise, the actual EMST solution does not include e12 (i.e., the initial guess is wrong), thus we select

another edge connected to the root and recalculate the maximum ﬂow problem. Since the subnetwork is

observable, the existence of a solution is guaranteed. In the above example, the ﬁnal measurement-to-edge

mapping is {r1, r2, r4, r5} ↔ {e12, e15, e45, e56}, while edge e25 is not used. Then, the edges obtained by
the maximum ﬂow calculation will form a tree that spans all vertices in ¯V as shown in Fig. 2(d).

B. Commodity Flow Maximization Algorithm

Although ﬁnding a minimum EMST that includes a set of vertices D is NP-Hard, a commodity ﬂow

formulation that exploits the tree structure of EMST can largely reduce the complexity compared to

some enumeration based methods, e.g., from several months to a couple of minutes in a medium-size

network. Intuitively, this is because the graph-based formulation can signiﬁcantly reduce the search space

of candidate solutions and enable effective off-the-shelf graph/optimization algorithms.

Consider a digraph G = (V, A) constructed by replacing each edge in the measured full graph ¯G (M) =

(V, E) with two arcs in opposite directions. We set the reference bus as the root and allocate one unit

of demand to each vertex in D. As shown in Fig. 4, commodities are sent from the root to the vertices

in D through some arcs. Notice that the choice of the vertices D in Fig. 4 is only for the simplicity of

December 20, 2016

DRAFT

10

illustration, where an arbitrary subset of vertices D ⊆ S can be selected. Then, the vertices in D are

connected to R via the used arcs if and only if all the demands are satisﬁed. When we require using

the minimum number of arcs to deliver the commodity, the used arcs will form a directed tree, referred

to as a Steiner arborescence. Evidently, the solution to the minimum EMST problem can be obtained

if we neglect the orientations of the arcs in the obtained Steiner arborescence. To satisfy the conditions

of a feasible EMST, we need to make sure that any selected arc is mapped to a meter that measures it.

In particular, if an arc is mapped to an injection meter, all the vertices measured by the injection meter

must also be included in the arborescence, as if a pseudo demand is allocated at these vertices. Then,

the problem is to satisfy both the actual and pseudo demand using minimum number of arcs.

Based on the commodity ﬂow model, a mixed integer linear programming (MILP) formulation is

proposed in [9], and extended to arcs of different weights (different costs are needed to secure the

meters) in [12], which can be solved with many off-the-shelf integer optimization tools, such as Gurobi

and CPLEX. Accordingly, we can use the mappings from the arcs in the optimal EMST to the optimal

set of meter measurements that defends the state variables in D.

C. Tree Pruning Algorithm

Due to the NP-Hardness of ﬁnding an optimal EMST, the commodity ﬂow based method can still

result in high computational complexity in a large-size power network consisting of hundreds of buses.

A polynomial-time suboptimal algorithm using the idea of tree pruning is considered in [9]. Starting

from the full measured graph, the key idea is to iteratively construct an EMST from the subnetwork and

prune away redundant vertices not in D, while keeping the remaining subnetwork formed by the residual

vertices observable until a shortest possible EMST is obtained. Speciﬁcally, the tree traversal algorithm

can be applied to determine both the sequence and the subset of vertices to be pruned in each iteration.

In Fig. 5, we present an example to illustrate the pruning operation, where a feasible tree containing

12 vertices is presented in Fig. 5(a). Vertex 5 and 8 are the terminal vertices to be included in the EMST

solution. As shown in Fig. 5(b), starting from the root v1, among the three child vertices of v1, only v2

can be pruned, since the descendent vertices of either v3 or v4 contain terminal vertex. After pruning

v2, we proceed to check v3 to see if its child vertex v5 can be pruned, which, however, is not feasible

because v5 is a terminal. Then, we check v4, where neither of its child vertices v6 and v7 can be pruned

separately or together. On one hand, this is because v6 contains terminal as its descendent vertices. On

the other hand, the removal of v7 does not remove the edge e46, which is mapped to the injection meter

December 20, 2016

DRAFT

11

2

5

5

1

4

3

6

7

8

9

13

10

Transmission line not
included in the tree

Injection-to-edge
mapping

1

4

3

6

7

8

9

13

10

11

12

a

c

b

d

11

12

2

5

1

4

3

6

7

8

9

13

10

Vertex pruning

11

12

8

6

7

1

4

3

5

Fig. 5.

Illustration of the tree pruning algorithm. The shaded vertices are terminals to be included in the EMST.

at v6 that measures v7, thus resulting an unobservable residual subnetwork. For v7, however, all of its

descendent vertices can be pruned as in Fig. 5(c). Up to now, we have ﬁnished the ﬁrst round of pruning

and obtained a residual tree in Fig. 5(d). Then, we use the remaining vertices {v1, v3, v4, v5, v6, v7, v8}

to generate new EMSTs using the maximum-ﬂow matching algorithm and repeat the pruning operations

iteratively until no vertex can be further pruned.

It is shown in [9] that the tree pruning heuristic (TPH) can achieve comparable performance with the

optimal solution obtained from the commodity ﬂow MILP formulation especially in a large-size network.

Meanwhile, it induces much lower complexity. For instance, using a regular computer with Intel Core2

Duo 3.00-GHz CPU and 4 GB of memory, the average computation time needed to solve for |D| = 4

buses out of a 14-bus network is {0.04, 0.2, 0.02} seconds for the arithmetic-based enumeration, the

introduced MILP formulation and the TPH methods, respectively [9]. However, the computation time of

arithmetic-based enumeration grows dramatically to around 90 years to solve for |D| = 4 in a 57-bus

network, which is computationally infeasible in practice. This, however, takes the MILP and the TPH

methods only 3.7 and 0.12 seconds, respectively. As we further increase the size to a 118-bus network,

the computation time of the TPH method increase almost linearly to 0.49 second, while the optimal MILP

formulation increases quickly to around 5 minutes. In this sense, the TPH method can efﬁciently solve a

problem in very large networks of several hundred of buses within a couple of seconds, which may take

December 20, 2016

DRAFT

12

12

s

1

2

14

10

13

11

6

5

Cut

Target vetex

a

b

t

Virtual terminal vertex

9

12

7

s

1

4

8

t

3

2

(cid:286)

13

(cid:286)

11

6

5

14

10

4

9

3

7

8

Illustration of minimum S-T cut algorithm to exploit cyber vulnerability. The edge weight is 1 for each edge unless otherwise
Fig. 6.
stated. Speciﬁcally, ﬁgure (a) shows the cut to attack a single bus 8; and (b) shows the cut to compromise two buses 10 and 12. In (b), a
virtual terminal is added to connect the target vertices, while the edge weights between them are set as inﬁnity to avoid a cut on any of
them.

the MILP method many days or even months to complete.

D. Minimum S-T Cut Algorithm

An adversary can also apply graphical methods to exploit the opportunity to launch malicious attacks.

A widely used algorithm is minimum S-T cut method, which calculates the minimum sum weights of

edges, whose removal would separate a source vertex from a terminal vertex in a weighted graph [10].

Intuitively, an adversary that intends to compromise a state variable will need to separate the corresponding

vertex (the terminal) from the reference vertex (the source) in the graph by forming a cut on the edges.

Then, the adversary needs to compromise all the meters that measure the edges in the cut. For instance,

in Fig. 6(a), the cut on e78 to attack bus 8 requires the adversary to compromise the ﬂow meter on edge

e78 and the injection meter on bus 7. The weight of each edge in the calculation of the minimum S-T

cut problem can be set as the monetary cost to compromise the meters that measure it.

Similar minimum cut methods can also be applied to compromise a set of state variables [9] (see

Fig. 6(b)); to ﬁnd the smallest number of meters that the adversary can control to perform an unobservable

attack [4]; to identify the most vulnerable measurements to inject false data [10]; and to exploit the

opportunity of data injection attack when some meters are secured or the network topology is only

partially known [11], [12]. As minimum S-T cut can be efﬁciently calculated in polynomial time, an

adversary is able to quickly identify potential network security vulnerability.

December 20, 2016

DRAFT

13

A. Application Oriented Security Analysis

V. FUTURE RESEARCH DIRECTIONS

Essentially, the power system state estimation is used for controlling speciﬁc applications, such as

generation/load power control and electricity price calculation. It is therefore of practical value to perform

application-oriented security analysis in higher application layer. Existing studies have shown that data

injection attacks that cause blackout and electricity price manipulation have apparent graphical patterns [3],

[5]. It is therefore interesting to exploit the underlying graphical structures in the attacks to compromise

power applications, such as load prediction, unit commitment, and frequency control. On the other hand,

it is also useful to use graphical methods to strategically deploy security countermeasures, e.g., to prevent

collaborating attacks that compromise the electricity market.

B. Meter Measurement Placement Optimization

As we are now transforming the legacy power system to the future smart grid, a large amount of

electricity infrastructure are to be built within the near future, with a mixture of conventional and new

metering/communication facilities. Many existing security vulnerabilities often comes from the legacy

meter measurements placement, which hardly considers the threat of potential collaborating attacks.

Graphical methods can be useful to optimize the placement of the meter measurement. By leveraging the

graphical properties of network observability, we have the potential to achieve both high state estimation

accuracy and high resistance to potential data attacks in relatively low meter placement cost.

C. Hybrid Graphical and Data-driven Approaches

Graph-based security analysis is an ofﬂine “hardware” approach, where physical protections are per-

formed to ensure the measurements collected from a subset of meters are trustworthy (free from injection

attacks). Data-driven attack detection, on the other hand, is an online “software” approach that leverages

the statistical features of the measurements/state variables to identify potential abnormal measurements

collected from the rest unsecured meters. In particular, graph-based method is independent of real-time

measurements and does not alter the state estimation algorithm in EMS/SCADA. Therefore, it can be

potentially combined with data-driven detection to further improve system security. For instance, the

trust-worthy measurements, and so the subset of trust-worthy state estimates derived from them, can be

used as side information to improve the detection accuracy of data-driven statistical detections. In general,

the graph-based protection and data-driven method should be jointly designed.

December 20, 2016

DRAFT

14

D. Security Analysis in AC Model

Graph algorithms are commonly used to solve linear integer programming problems, their effectiveness

and efﬁciency to solve security problem in linear DC power system is unsurprising. In many application

scenarios, however, AC power model, where both voltage amplitude and phase are the state variables,

is more preferable than the DC model, e.g., security constrained optimal power ﬂow calculation. Some

studies have shown that data injection attack to compromise AC state estimation is much more complicated

than that in DC model [15]. On the other hand, the observability of AC state estimation can no longer be

characterized as a simple Steiner tree structure as in DC model. However, the network observability may

still contain tree-like structures to be identiﬁed for defending potential attacks against AC state estimation.

VI. CONCLUSIONS

In this article, we have provided a graphical framework for performing security analysis in power

system state estimation. From both system operator’s and adversary’s perspectives, we have introduced

several effective graph-based algorithms to solve security problems in state estimation. Compared to the

commonly used arithmetic-based security analysis, graph-based analysis helps visualize some complex

problem structures, which can lead to efﬁcient optimal or reduced-complexity suboptimal graph-based

algorithms. As the future smart power grid will integrate a large number of ICT facilities, cyber security

is of paramount importance to guarantee the system consistently operating in a secure and efﬁcient

state. Graph-based methods are expected to be a set of powerful tools in solving complex cyber security

problems in future smart grid.

REFERENCES

[1] A. Abur and A. G. Exp´osito, “Power system state estimation: theory and implementation”, New York: Marcel Dekker,

2004.

[2] Y. Liu, P. Ning, and M. Reiter, “False data injection attacks against state estimation in electric power grids,” in Proc.

ACM CCS, Chicago, USA, Oct. 2009.

[3] S. Bi and Y. J. Zhang, “False data injection attack to control real-time price in electricity market,” in Proc. IEEE Globecom,

Atlanta, USA, Dec. 2013.

[4] O. Kosut, L. Jia, R. J. Thomas, and L. Tong, “Malicious data attack on the smart grid”, IEEE Trans. Smart Grid, vol. 2,

no. 4, pp. 645-658, Dec. 2011.

[5] Y. Yuan, Z. Li, and K. Ren, “Modeling load redistribution attacks in power systems,” IEEE Trans. Smart Grid, vol. 2,

no. 2, pp. 382-390, Jun. 2011.

December 20, 2016

DRAFT

15

[6] Y. Huang, M. Esmalifalak, H. Nguyen, R. Zheng, Z. Han, H. Li, and L. Song, “Bad data injection in smart grid: attack

and defense mechanisms,” IEEE Commun. Mag., vol. 51, no. 1, pp. 27-33, Jan. 2013.

[7] R. Bobba, K. M. Rogers, Q. Wang, H. Khurana, K. Nahrstedt and T. Overbye, “Detecting false data injection attacks on

DC state estimation,” in Proc. CPSWEEK, Apr. 2010.

[8] S. Bi and Y. J. Zhang, “Defending mechanisms against false-data injection attacks in the power system state estimation,”

in Proc. IEEE Globecom, Houston, USA, Dec. 2011.

[9] S. Bi and Y. J. Zhang, “Graphical methods for defense against false-data injection attacks on the power system state

estimation,” IEEE Trans. Smart Grid, vol. 5, no. 3, pp. 1216-1227, May 2014.

[10] K. C. Sou, H. Sandberg, and K. H. Johansson, “Computing critical k-tuples in power networks”, IEEE Trans. Power

Syst., vol. 27, no. 3, pp. 1511-1520, Aug. 2012.

[11] M. A. Rahman and H. Mohsenian-Rad, “False data injection attacks with incomplete information against smart power

grids,” in Proc. IEEE Globecom, Anaheim, USA, Dec. 2012.

[12] S. Bi and Y. J. Zhang, “Using covert topological information for defense against malicious attacks on DC state estimation,”

IEEE J. Sel. Areas Commun., vol. 32, no. 7, pp. 1-15, Jul. 2014.

[13] G. R. Krumpholz, K. A. Clements, and P. W. Davis, “Power system observability: a practical algorithm using network

topology,” IEEE Trans. Power App. Syst., vol. PAS-99, no. 4, pp. 1534-1542, Jul. 1980.

[14] A. Barglela, M. R. Irving, and M. J. H. Sterling, “Observability determination in power system state estimation using a

network ﬂow technique”, IEEE Trans. Power Syst., Vol. PWRS-1, No. 2, May 1986.

[15] G. Hug and J. A. Giampapa, “Vulnerability assessment of AC state estimation with respect to false data injection

cyber-attacks,” IEEE Trans. Smart Grid, vol. 3, no. 3, pp. 1362-1370, Sept. 2012.

December 20, 2016

DRAFT

