IoT Network Security: Requirements, Threats,
and Countermeasures

Ayyoob Hamza, Hassan Habibi Gharakheili, and Vijay Sivaraman

1

(cid:70)

0
2
0
2

g
u
A
1
2

]

R
C
.
s
c
[

1
v
9
3
3
9
0
.
8
0
0
2
:
v
i
X
r
a

Abstract—IoT devices are increasingly utilized in critical infrastructure,
enterprises, and households. There are several sophisticated cyber-
attacks that have been reported and many networks have proven vulner-
able to both active and passive attacks by leaking private information,
allowing unauthorized access, and being open to denial of service
attacks.

This paper aims ﬁrstly, to assist network operators to understand the
need for an IoT network security solution, and then secondly, to survey
IoT network attack vectors, cyber threats, and countermeasures with a
focus on improving the robustness of existing security solutions. Our ﬁrst
contribution highlights viewpoints on IoT security from the perspective of
stakeholders such as manufacturers, service providers, consumers, and
authorities. We discuss the differences between IoT and IT systems, the
need for IoT security solutions, and we highlight the key components
required for IoT network security system architecture. For our second
contribution, we survey the types of IoT attacks by grouping them based
on their impact . We discuss various attack techniques, threats, and
shortfalls of existing countermeasures with an intention to enable future
research into improving IoT network security.

1 INTRODUCTION
Internet of Things (IoT) refers to network-connected devices
that either can sense or control the environment with mini-
mal or no human intervention. These devices are deployed
in various sectors ranging from critical networks, house-
holds, smart cities to enterprises, health care, manufactur-
ing, and education [1]. It has been forecasted by Gartner
that more than 25 billion devices will be connected by 2021
[2]. The reason for such widespread adoption of IoT is due
to the fact that these devices help to improve our daily life
by using the data they collect through sensors or by being
able to inﬂuence our environment through actuators.

There are more and more unsecured devices being re-
leased to the market [3]. Many connected IoT devices can be
found on search engines such as Shodan [4], and sites like
Insecam [5] list publicly accessible and vulnerable devices,
such that their vulnerabilities can be exploited at scale. For
example, Dyn, a major DNS provider, was subjected to a
DDoS attack originating from a large IoT botnet comprising
thousands of compromised IP-cameras [6]. IoT devices, ex-
posing TCP/UDP ports to arbitrary local endpoints within

• A. Hamza, H. Habibi Gharakheili, and V. Sivaraman are with
the School of Electrical Engineering and Telecommunications, Uni-
versity of New South Wales, Sydney, NSW 2052, Australia
(e-mails: m.ahamedhamza@unsw.edu.au,
vi-
jay@unsw.edu.au).

h.habibi@unsw.edu.au,

a home or enterprise, and to remote entities on the wider
Internet, can be used by inside and outside attackers to
reﬂect/amplify attacks and to inﬁltrate.

The security of IoT has become a timely and important
topic that requires plausible work from the research commu-
nity. Therefore, the main focus of this paper is to understand
the requirement of network-level security solution for IoT
systems, and then to identify the research gap in the existing
research on attack detection and mitigation. Our ﬁrst aim in
this paper is to understand the perspectives of IoT security
and the role of IoT stakeholders; then we highlight the
system components required for an IoT network security
architecture. The second contribution is to survey various
attack techniques, cyber threats, and counter measures with
a focus on highlighting ways to improve the existing attack
detection methods.

2 PERSPECTIVES ON IOT SECURITY

In this section we discuss various stakeholders of IoT sys-
tems, their roles, and the challenges they face related to
IoT security. We then discuss the need for IoT security in
traditional network settings, and highlight the requirements
for an IoT network security solution.

2.1 IoT Systems Stakeholders: Cybersecurity Chal-
lenges and Roles

Security evaluation must be conducted by all IoT stake-
holders (manufacturers, users, authorities, and service
providers) to reduce IoT cyber threats. In this section we
summarize the perspectives and challenges faced by them.
Manufacturers: It is expected that manufacturers pro-
vide ﬁrmware integrity, trafﬁc encryption, and follow strict
software development principles; yet there are many un-
secured devices that have been released to the market [7].
This is mainly because most of the manufacturers are pre-
dominantly incentivized to bring new devices to market as
quickly and cost-effectively as possible. Therefore, security
is an afterthought, if even thought of at all. There are two
major security challenges for manufacturers: no incentives
for securing their products, and a lack of cybersecurity
skills.

No incentives: “Security costs money” – this provides the
reason for manufacturers not taking it seriously, although
recently privacy and security of IoTs have slightly become

 
 
 
 
 
 
a concern for consumers. According to authors of [8]–[10],
consumers are now willing to pay more for a secured
product than for an unsecured device, and this is inﬂuencing
their buying decision. Moreover, security is always a cost,
but not resolving threats will tarnish brand value. Yet,
there are manufacturers not responding to reported threats
[11] for products that are available in the market, which
demonstrates the level of priority that security enjoys from
the perspective of manufacturers.

Lack of cybersecurity skills: Manufacturers are expected to
have security testing skills to cover the full spectrum of IoT
ecosystems, which covers layers such as hardware, network,
service integration, and cloud servers. Insufﬁcient security
testing and failure to update skills are major concerns in IoT
product development. There are many security guidelines
[12]–[14] that have been developed to specify basic secu-
rity requirements and to ease the process of testing. They
include demands that the manufacturer should specify the
permitted applications for running on the device and that
they should also ensure proper patch management. Yet such
guidelines cover only the basic security requirements, while
attackers are using more complex and novel techniques
(e.g., [15]) to compromise the devices – identifying devices’
vulnerabilities requires a set of sophisticated skills.

Users: Household consumers, estate managers, and net-
work managers are the users who directly use and/or man-
age these devices. Ideally, these users follow a strict procure-
ment process during purchasing, and install only secured
devices with strong encryption and proper maintenance.
Insufﬁcient knowledge, inadequate operational testing, lack
of automatic asset management, and limited network mon-
itoring skills are major challenges that users face, resulting
in installation of vulnerable devices into their networks.

Insufﬁcient knowledge: Typical household consumers do
not have the knowledge nor the tools to test the security
posture of a device before procurement, and furthermore,
the user manuals of such consumer devices do not provide
information about the security features and/or risks [16].
To resolve such issues, the authors in [7] propose a color-
coded rating system to indicate the security posture of
individual IoT device types, but this approach does not
explicitly detail the risk of having a speciﬁc vulnerability
in a particular deployment; therefore, the authors in [17],
[18] propose a security label that quantiﬁes the risks of
deploying such devices in a network. Meanwhile, in an
organization, devices undergo thorough security testing by
their installation teams, yet there are many attacks that have
been reported on these devices due to a lack of rigorous
testing before acceptance. Therefore an extensive testing
framework is required for such devices. To overcome this
issue, authors of [7] propose a systematic step to evaluate
the security posture of IoT devices. Yet, the scope of this
paper is limited to conﬁdentiality and availability pillars of
security, and does not test the integrity pillar. Assessing the
integrity is challenging and requires a custom analysis per
each of individual device types.

Inadequate operational testing: Devices undergo a thor-
ough qualiﬁcation process during procurement, yet a simple
ﬁrmware update can change the security posture of a device
and open up new vulnerabilities; therefore it is essential
to have a continuous testing framework which can auto-

2

matically isolate devices, undertaking rigorous assessment
without impacting the network. Authors of [19] detail the
requirements for such an automated testing framework to
test devices during operation. They use SDN techniques to
isolate the subject device by taking it ofﬂine and applying all
security tests. Such functionality requires security penetra-
tion testing skills; and furthermore, there is a research gap
as to how to apply such solutions in household networks.

Lack of automatic asset management: In legacy IT net-
works, operators often use monitoring agents, embedded
into connected devices, to discover network assets and
monitor their activities. IoT devices are typically resource-
constrained, and hence cannot accommodate agents; and
with a multitude of IoT device types coming online, it
remains a challenging task to automatically discover and
identify IoT assets using traditional solutions. Without solu-
tions that enable real-time monitoring, attackers can success-
fully move around a network unchecked and undetected. In
addition, today, large-scale digital infrastructure is typically
managed by two entities: the Estate Management (assets)
and IT department (network). Such disjoint management of
information makes for more difﬁculty in asset tracking. To
keep track of these IoT assets and their network behavior,
we require a knowledge repository that can identify a wide
range of IoT device types in a given organization and keep
track of their behavioral changes.

Limited monitoring: There are attacks that can inﬁltrate
or conduct fraudulent activities through the existing net-
work connectivity. For example, attackers can use the sim
cards used in IoT devices that are not intended for calls
and messages [20] and use them to transfer fraudulent
data. IoT devices are also used by criminals for exﬁltrating
data stealthily [21]. Therefore, it is necessary to monitor
IoT activity patterns to discover such criminal activities.
This can easily be managed in a decent-size organization
with a team of network engineers and cyber analysts who
are able to understand and mitigate vulnerabilities when
the network intrusion detectors report; however, household
owners lack such skills. To resolve such issues in home
networks, authors of [22] [23] proposed security as a service
for the household, which can be managed by an external
service provider such as Internet service providers (ISP).
Their solution employs software deﬁned networking (SDN)
paradigm to monitor and manage home networks from the
cloud.

Authorities: Government policymakers, regulatory bod-
ies, and industry alliances are developing standards and
guidelines for securing IoT devices [24]–[28]. The IoT Cy-
bersecurity Improvement Act of 2019, was introduced by
the US Senate and this proposes a minimal baseline security
standard to consider during the procurement of devices for
government authorities [27]. IoT baseline security guide-
lines have also been proposed by the US National Institute
of Standards and Technology (NIST) [29] and the Euro-
pean Union Agency for Network and Information Security
(ENISA) [30], which covers IoT system security aspects
such as authentication, authorization, and key management.
IETF ratiﬁed a standard, Manufacturer Usage Description
(MUD), to secure IoT at network level, which depends on
the manufacturer deﬁning the network behavior of their
device in the form of access control lists [31]. These stan-

dards play a crucial role in improving security requirements
by ensuring data protection, service continuity, and device
security, that eventually leads to an increase in the bar of
accepting devices prior to installation [32]. There are four
major challenges related to current standards including:
(a) Limited focus on security, (b) vagueness, (c) no legacy
support, and (d) lack of mandating.

Limited focus on security: IoT security applies to a wide
spectrum such as hardware, application, network, service
integration, and cloud servers. However, current standards
are limited to a subset of security aspects (e.g., [31], [33] focus
on network security, and [26] is limited to IoT development
and vulnerability disclosure). These standards create a par-
tially trusted environment that could lead to a potentially
vulnerable system unless all the standards are covered by
the manufacturer.

Vagueness: Recommended IoT security guidelines [29],
[34] are largely qualitative and subject to human interpre-
tation, therefore inadequate for automated and rigorous
application. Furthermore, guidelines for application of the
standard do not clearly specify any concrete requirements,
rather explained in a broad statement which would be
difﬁcult to apply in real settings during a compliance check
process. For example, the Californian government signed
the ﬁrst IoT security law in the United States [24]. It re-
quires devices sold in California to have reasonable security
features which is broadly deﬁned as (1) appropriate to the
nature and function of the device, (2) appropriate to the
information it may collect, contain, or transmit and (3)
designed to protect the device and any information con-
tained therein from unauthorized access, destruction, use,
modiﬁcation, or disclosure. Such broad statements would
be difﬁcult for manufacturers to apply and it would also be
challenging for lawmakers to create a standard applicable
to all devices; yet this can be considered as a ﬁrst step in
regulating IoTs [35].

No legacy support: Regulating devices that are already
on the market would be a challenging task [36]. This is
because there are devices that use deprecated services and
do not support a ﬁrmware updating process. Regulating
such devices would be a difﬁcult task. Regulators should
also focus on providing alternative solutions to control such
devices.

Lack of mandating: Existing standards are still being de-
veloped and their approval goes through a complex voting
process, which leads to a signiﬁcant amount of delay before
being mandated. Furthermore, IoT covers a wide area of
applications, and hence it becomes challenging to mandate
a standard to all those areas since a security requirement in
a home network could vary from one necessary for critical
infrastructure. This is the reason for bills such as [27] being
focused on mandating only on the US government agencies
[32].

Service providers: IoT service providers can be cat-
egorized into two types: platform and signaling service
providers. Platform service providers act as controlling
servers that directly interact with the device to control or
capture data, and can be either cloud or managed services.
Signaling service providers are primarily used for network
services. DNS, NTP and STUN servers are a few examples
of these. It is expected that both types of service providers

3

are up-to-date with security ﬁxes and provide service relia-
bility. However, the major challenge is the lack of ability to
quantify the assurance of security from service providers.

No security assurance: During development, manufac-
turers tend to trust popular third-party services, however
every service may have security ﬂaws. It is essential to test
and verify the services that are consumed. For example
the authors of [37], showcased that during the process of
registering a device with a smart home IoT platform, the
device has to communicate with both a mobile app and its
cloud platform. During this process, the server maintains
the state of the three entities (device, mobile app, and the
server). The authors were able to spoof these states and
showed that the device can be hijacked, substituted for
and accessed without any authorization. Similarly, signaling
service providers such as DNS and NTP are inherently
vulnerable to spooﬁng [38]; therefore, manufacturers need
to be aware of such vulnerabilities, and at least limit the
attack surface by only communicating with these services
securely (e.g., DNSSEC [39] instead of DNS). These service
providers also collect and store device data, which can lead
to privacy issues; therefore, manufacturers should imple-
ment best-practice storage policies and perform frequent
testing to ensure these policies are complied with (e.g., data
retention policy).

Summary: There are many advocates for IoT security,
and current approaches are manifold; but there is not any
clear pathway to achieving security effectively. It is essential
that security to be considered during the entire life-cycle
of a device, i.e., from development to installation. Since the
network is an integral part of an IoT ecosystem, our primary
focus in this paper is on IoT network security.

2.2 IoT versus IT Network Security

Little consideration for security during the design of a com-
munication network and the Internet, has inherently caused
many security threats for IT devices [40]. For example,
simple spooﬁng on ARP packets can be the cause of a “man
in the middle” attack. There are many security recommen-
dations introduced to secure a network (e.g., DNSSEC [41]),
yet such recommendations have proven to be challenging
to adopt. Traditional IT networks have faced many security
threats, leading to evolution of a number of solutions to
secure them (e.g., ﬁrewall, honey pot, segmentation); and
they are applied in different parts of the networks.

With the recent popularity of IoT devices, they now
coexist with one another in the same IT networks, which has
led to various cyber-attacks (e.g., when criminals hack the
network of a casino through an insecure Internet-connected
ﬁsh tank [21]). In a traditional network, there are three
security approaches in place to protect the network, which
include:
isolation, device-level protection, and network-
level protection. In what follows, we discuss the limitations
of existing IT network security approaches for protecting
IoT devices.

Isolation: Isolation is widely applied in large organiza-
tional networks and it is used for reducing the attack surface
of a device. There are two network isolation techniques:
physical air-gaping, and virtually segmenting networks into
enclaves and restricting communication paths [42]. Air-
gaping is applied to IoT devices to isolate their trafﬁc by

separating all connected devices into another parallel phys-
ical network. Segmenting networks into logical enclaves
(e.g., VLANs, subnets) and restricting communication paths,
would limit the spread of risk during the attack. These tech-
niques require the device to be separated from the non-IoT
devices, but there are certain cases when the isolation/gap
is bridged (e.g., a manager within the organization may
request the live stream of a physical surveillance camera
located on IoT network to be accessed from their laptop
located on IT network). Such bridges lead to vulnerable
and insecure IoT devices (e.g., cameras or printers) co-
existing with the rest of network devices, and eventually
compromising the security of the entire enterprise network.
Device-level protection: General-purpose devices have
enough computing power and resources to cater for security
solutions such as anti-virus or anti-malware to protect the
host from attacks, or have a monitoring agent embedded
into the host to collect system logs for vulnerability and/or
forensic analysis. Such protections cannot be applied to
resource-constrained IoT devices with limited memory and
computing power. This makes them vulnerable even to
the simplest attacks [7]. Therefore, a viable approach for
protecting these devices is to have a network-based device
monitoring solution that continuously monitors individual
devices on the network for any possible threats.

Network-level protection: Firewalls, and intrusion de-
tection systems (IDS) are commonly used solutions to pro-
tect devices in a network. A ﬁrewall or an IDS solution
requires to either learn devices benign behavior (“good”
entities) or model signatures of attacks on devices (“bad”
entities) and these appliances often employ a specialized
hardware to fully inspect individual packets. Further, due to
heterogeneous nature of IoT systems and device types, each
with their own speciﬁc intended behaviors and security
vulnerabilities, it becomes quite challenging for the ﬁre-
wall/IDS appliances to distinguish normal from abnormal
trafﬁc that could be symptomatic of an attack. Furthermore,
with thousands of IoT devices connecting to the network,
it is challenging to monitor each individual device using
legacy techniques, and doing so, would lead to an increase
in the cost of maintenance (both packet inspection cost and
hardware cost).

Summary: Existing IT network security solutions are
limited in providing security for IoT devices. Therefore,
it is essential to have an IoT speciﬁc security solution to
protect these devices. In next section, we look into the core
components required for an IoT network security solution.

2.3 Key Components of IoT Network Security Solution

In an IoT network, lack of “complete visibility” is one
problem. Many network operators do not fully know what
IoT devices are connected to their network. This becomes
critical when one or more IoT devices are compromised on
the network. Without solutions that enable real-time mon-
itoring, attackers can successfully move around a network
unchecked and undetected. Therefore, for an IoT network
security solution architecture,
it is essential to consider
asset discovery, device security, and system security as key
components to provide a complete network security.

Asset discovery: This component is required to provide
network administrators with visibility into connected IoT

4

assets. IoT asset discovery is the process of knowing the
type of individual device in the network. Prior works [43],
[44] have employed machine learning techniques to classify
IoT devices for asset management. The method in [43] em-
ploys over 300 attributes (packet-level and ﬂow-level) – the
most inﬂuential ones are minimum, median, and average
of packet sizes, Time-To-Live (TTL), the ratio of total bytes
transmitted and received, and the total number of packets
with RST ﬂag reset. Work in [44] proposes to use features
with less computation cost at run-time. Existing machine
learning-based proposals need to re-train their model when
a new device type is added – this limits the usability in
terms of not being able to transfer the models across deploy-
ments. There are three challenges during IoT asset discovery.
They are: unknown type, behind ﬁrmware or device being
compromised. The authors in [45] propose that conﬁdence
of prediction can be a good indicator of whether or not
the device is compromised or the ﬁrmware is different. Yet
for network administrators, it is necessary to have an ex-
plainable model that provides the reason for such changes.
Therefore, we propose an identiﬁcation approach that uses
SDN techniques to build the network proﬁle of a device and
uses the MUD proﬁle as a reference; then we use similarity
metrics to identify the type of device. We have shown in [46]
how this approach can be used for resolving challenges such
as unknown type, behind ﬁrmware or whether the device is
compromised. However, this identiﬁcation approach comes
with two limitations: (a) unbounded delay in identifying
devices, and (b) having different types of IoT devices with
the same MUD proﬁle (hence inability to successfully iden-
tify them). Having indicated the pros and cons of these two
approaches, one may want to combine the two as a pathway
for future work.

In a real setting, classifying all devices on the network
can be computationally expensive especially in a mixed
environment; however, as a prior step, recognizing IoT from
non-IoT can help to reduce the monitoring cost [45], [47]. Ex-
isting IoT identiﬁcation techniques assume that connected
devices are healthy and there is no systematic method
identify an IoT device which is already compromised or
under attack.

Device network security: This component enables run-
time monitoring of individual IoTs. A device proﬁle (net-
work behavior) can be veriﬁed prior to deployment through
static analysis and then it can be monitored closely to
achieve run time security. Pre-deployment security veriﬁca-
tion is applicable for large scale organizations which contain
complex organization policies (e.g., SCADA networks). We
in [46], [48] have used MUD as device behavioral proﬁles
and have checked against organizational policy for compli-
ance. For achieving runtime security, there are three tech-
niques: signature-based threat detection, behavioral proﬁle-
based whitelisting, and anomaly detection.

Signature-based threat detection: Nearly all deployed solu-
tions, including software tools like Bro [49] and Snort [50],
and commercial hardware appliances belong to this cate-
gory. There are studies that apply signature-based intrusion
detection/prevention in SDN environments [51], [52]. The
signature-based approach is not sufﬁcient for addressing
the new and growing security issues that come with the
proliferation of IoT devices. Attack signatures cannot be

developed for a growing number of IoT devices at scale.

Behavioral proﬁle based whitelisting: The behavior of a
device can be translated to a network policy (i.e., access
controls). An example proposal for using network policy
to secure IoT devices in an SDN environment is found in
[53]; however, their policy grammar requires ﬁne-grained
access controls that capture the state change (such as smoke
sensed or windows opened) associated with IoT devices,
which may be infeasible if manufacturers encrypt their
sensing data, and undesirable for network operators who do
not want to make semantic interpretations of sensing data;
furthermore, the proposed theoretical framework in [53] has
not been demonstrated in implementation. In HanGuard
[54], the authors propose an access control model to block
unauthorized access of IoT devices from mobile devices.
This proposed framework is limited to local network trafﬁc
and mobile to IoT device communication. In [55], the au-
thors propose a speciﬁcation-based approach for a wireless
sensor network and expect the network operator to deﬁne
the rules. We believe this is too cumbersome for the network
operator; MUD inherently proposes a scalable approach,
which allows operators to impose a tight set of rules (down
to the port level) for each device, thus limiting its commu-
nication to only intended trafﬁc ﬂows. MUD speciﬁcations
can be fed to an IDS to detect observed behavior that is
not as speciﬁed, thereby indicating an anomaly or threat
[56], [57]. MUD enables enforcement of a baseline security
for IoT devices by isolating exception trafﬁc that does not
match the device intended ACEs. However, studies [58] [59]
have shown that covert attacks are still possible.

Anomaly detection: Anomaly detection holds promise as
a way of detecting new and unknown threats, but despite
extensive academic research [60], it has had very limited
success in operational environments. The reasons for this are
manifold [61]: “normal” network trafﬁc can exhibit much
more diversity than expected; obtaining “ground truth” of
attacks in order to train the classiﬁers is difﬁcult; evaluating
outputs can be difﬁcult due to the lack of appropriate
datasets; false positives incur a high cost on network ad-
ministrators to investigate; and there is often a semantic gap
between detection of an anomaly and actionable reports for
the network operator.

System network security: A large IoT infrastructure
for smart buildings may consist of many subsystems such
as HVAC, lighting, access controllers, occupancy sensors,
or physical security systems. These subsystems are often
managed by a variety of stakeholders from network ar-
chitect, network engineers, facility management engineers,
and cyber security analysts to device manufactures, system
integrators, and building managers throughout the life-
cycle of the smart building [62]. These stakeholders produce
different data schema to maintain information about the
physical location, network conﬁguration, or security policies
of IoT devices. The lack of a common data model is a
major challenge in limiting the interoperability and holistic
analysis of heterogeneous IoT systems. This has led to many
cyber-attacks – for example, the Shodan search engine [4]
has listed publicly exposed building management systems,
which allows attackers to penetrate those networks. Current
methods for evaluating the security posture of such environ-
ments is at best ad-hoc, and enforcement and monitoring

5

of appropriate access controls from outside and within the
organization are lacking. However, securing large IoT sys-
tems demands a formal model that enables, at design stage,
an evaluation of the attack surface exposed by the smart
environment, including assessment of ﬁrmware updates,
breached elements, and organization policy changes on
overall security. Also, the model needs to be enforced at run-
time, which should include monitoring the communication
ﬂows to detect anomalous patterns. There are two main
requirements to achieve this: ﬁrst a building data model to
capture the physical infrastructure and their relationships,
and a security veriﬁcation model that uses these building
data for static and run time security veriﬁcations.

Building Data: Haystack [63], Brick [64] and IFC (Industry
Foundation Classes) [65] provide constructs to formally
deﬁne a meta data model to specify sensors, controllers,
their location in buildings, and their inter-relationships. For
example Brick describes building entities (sensors, equip-
ment, room, ﬂoor and so on) and their relationships by
abstracting classes and tags, and its hierarchical constructs
allow extension of the brick model to express new entities
(e.g., , Camera can be derived from Sensor). Brick’s expres-
siveness and ease of adaption further allows it to build a
better query processor, and it uses the Resource Description
Framework (RDF) syntax to maintain the system ontology.
This enables application developers to interact with the
ontology using query-based language (e.g., SPARQL [66]).
Such a knowledge representable model can be of beneﬁt for
various security applications.

Veriﬁcation models: Modeling network-wide level secu-
rity is still in infancy in the research community. This is
mainly due to lack of availability of building structure data.
Authors of [67]–[69] aimed to detect or resolve conﬂicts
among trigger-and-action- based policies set by network
administrators in IoT environments. Work in [69] extends
trigger-and-action-based policies to support MUD access-
control rules and building/ﬂoor constructs. We in [70] have
extended the Brick schema to support network and MUD
elements to capture the knowledge representation of IoT
system network communications. Using this data model, we
showcased two security applications: ﬁrst, a static analysis
which applies location deﬁned network policies for veriﬁ-
cations; and next, a demonstration showing that distributed
attack detection can be improved by modeling the device
communications systems based on both logical and physical
locations.

3 IOT NETWORK ATTACKS AND COUNTERMEA-
SURES

In this section, we look into the types of IoT network attacks
and then discuss their techniques, implications, and solu-
tions. IoT attacks can be viewed in various dimensions such
as impact on information security pillars (i.e., conﬁdentiality,
integrity, and availability), or based on impact on network
layer (i.e., application, transport, or data link). However, in
this paper we have grouped threats based on the conse-
quences or impact of a potential attack. As Fig. 1 indicates,
attacks can be categorized into passive or active attacks. IoT
network attacks are manifold and we in this paper, have
generalized them into 11 types of attacks. There are two

6

have led to many attacks. One solution for device discovery
is to use alternative solutions such as having both the device
and the application publish their private IP address to a bro-
ker. Implementing such capability brings up an additional
cost; therefore, if it is necessary to use discovery protocols,
then the device should undergo rigorous testing to ensure
that it only publishes information that does not lead to weak
device security.

Firmware upgrade infrastructure: This is a standard re-
quirement for any device; side-channel vulnerabilities are
difﬁcult to identify; however, when they are reported, then
the manufacturer should have the infrastructure to apply
patches through ﬁrmware upgrades.

3.2 Passive Trafﬁc Analysis

In this attack, we passively capture the trafﬁc of a device.
This can be either within the host network or from outside
the network. A rogue router is an example of how such
attacks occur. They occur when an attacker can capture the
device trafﬁc that passes through and these trafﬁc patterns
are then used to deduce the user activity or to proﬁle the
device, which can lead to both privacy and physical attacks
[72].

Implications: IoT device trafﬁc patterns can be catego-
rized into three types and this is shown in Fig. 2. They in-
clude the device communicating at a ﬁxed interval, commu-
nicating only when the user both interacts or communicates
with a ﬁxed interval and interacts. Here the latter two types
of trafﬁc patterns capture user activity. In [72], authors have
demonstrated that even with encrypted trafﬁc they were
able to determine the state of a device (e.g., turned on or
off). In addition, it is also shown that by monitoring IoT
trafﬁc on ISP, in-home activity can still be deduced even if it
is encrypted [73]. This user activity proﬁling can be used for
a scenario such as theft and it is essential to obfuscate such
patterns.

Solutions: There are no network security solutions to
detect such an attack; however, there are two preventions
to avoid such privacy attacks. They are trafﬁc shaping and
tunneling.

Trafﬁc shaping: This technique obfuscates all communica-
tion so that it all maps into a similar pattern. The authors
in [74] developed a python library that shapes trafﬁc, with
low overhead cost; yet this solution would be challenging to
apply to a battery-powered device.

Tunneling: This technique would aggregate all ﬂows into
a single bidirectional ﬂow, which would be challenging to
deduce the activity from [73] but it does not prevent the
attack completely.

3.3 Active Reconnaissance Attack

An attacker probing a device to collect information falls
into this category. Reconnaissance attacks can be categorized
into two, which are physical and network reconnaissance.
Physical reconnaissance requires physical access to the de-
vice and there are solutions to limit this by including anti-
theft techniques [75] such as incorporating an accelerometer
to detect movement of the device. In this paper, we are
interested in network reconnaissance, in which the attacker

Fig. 1. Taxonomy of IoT network attacks.

types of attacks under passive attacks, and nine under active
attacks. Passive attacks don’t leave any network trace by
the attacker; rather, they listen to the device communication
to collect information about the target. On the other hand,
in active attacks, the attacker generates packets directly or
indirectly to target the device.

3.1 Eavesdropping

In this attack, the attacker secretly listens to the information
that is passed across the devices in the network and this
information is used for either proﬁling the device or the
network.

Implications: Many consumer IoT devices expose them-
selves by broadcasting device discovery packets such as
SSDP and mDNS. These packets contain unique information
to determine the type of device, ﬁrmware or device conﬁg-
uration [15]. In [15], the authors have shown the implication
of such vulnerability by demonstrating that the attacker is
able to hijack a device and able to control it remotely using
the collected information. Many IoT devices communicate
without any encryption in local networks and consider the
wireless medium as the last resort of security. However, at-
tackers are launching side-channel attack to access informa-
tion from these devices. For example, the vulnerability in the
Wi-Fi chip has led to broken encryption protocols such as
WPA2-Personal and WPA2- Enterprise, which widely affects
many wireless IoT devices and enables the attacker to take
advantage of such vulnerability and launch a side-channel
attack to access the device information [71]. Attackers have
used this information to compromise, degrade or disrupt
the network.

Solutions: Eavesdropping does not leave any network
traces, so it is challenging to detect such attacks. There-
fore, the only solution is to prevent such attacks by use
of standard cryptography and having ﬁrmware upgrade
infrastructure in place.

Use cryptography: The only line of practical defense for
eavesdropping is cryptography. Manufacturers should en-
sure that they use the recommended cipher suites for all
standard local and Internet communications. Most con-
sumer devices that are allowed to communicate with a
mobile application directly in local networks do not use any
standard encryption [7] in discovery protocols. Therefore,
protocols such as SSDP and mDNS have been misused and

IoT Network AttacksPassiveActive Attacks1.Eavesdropping2.Passive Traffic analysis1.Active reconnaissance2.Volumetric attack3.Masquerading Attack4.Access attack5.Active Crypto Attack6.Data Exfiltration Attack7.Blocking Attack8.Sleep Deprivation attack9.Trigger Action Attack7

the state of the whole network.

Access controls: This can be applied to limit the attack
surface by using two approaches. The ﬁrst approach is to
allow only devices that are authorized to interact; and next,
to allow only the services that the devices are intended
to interact with. Authors in [54] proposed an SDN based
architecture that requires the consumers to authorize their
devices before they can interact with each other. Further-
more, MUD speciﬁcation [31] restricts communication to
the services that are allowed to. Any communication with
disallowed services is considered a threat [56]. However,
attacks that are intended for the device allowed service
ports, cannot be detected.

3.4 Volumetric Attack

Recent reports [83] show that attackers continue to exploit
insecure IoT devices to launch volumetric attacks in the
form of DoS, DDoS, brute force, and TCP SYN/UDP ﬂood-
ing. Moreover, the progression of botnets [84], [85] such
as Mirai and Persirai, infecting millions of IoT devices,
is enabling destructive cyber-campaigns of unprecedented
magnitude to be launched.

Implications: Mirai botnet was the ﬁrst, most notable
IoT attack and brought down many Internet services, which
showed the seriousness of vulnerable IoT devices. There are
many other botnets that have been discovered over time,
including Persirai [86], Bashlite [87], Okiru [88], wicked [89],
and Torii [90]. These botnet attacks require an agent that
hijacks the devices by accessing them. In addition, there
are DDOS attacks that are launched using reﬂection on IoT
devices [91]. These attacks are targeted at either remote
services or the device itself, with the intention of making
them inaccessible [58].

Solutions: Volumetric attack detection for computer
networks has been studied extensively by the research com-
munity, and it looks either for signatures of known attacks,
or anomalies indicative of deviation from normal behavior.

Signature-based detection: This is commonly adapted tech-
niques in enterprise networks which requires signatures of
all reported threats towards IoT. Any attack that matching
the signatures (e.g., rate of SYN packets ) are considered as
threats. This is a very costly approach in terms of packet
inspections and less accurate [56] towards zero day attacks.
We have shown in [58] that signature-based tools are only
able to detect a limited number of volumetric attacks (to
IoTs) that are common for general-purpose computers.

This is a commonly adapted technique in enterprise
networks which requires signatures of all reported threats
to IoT. Any attack matching the signatures (e.g., rate of
SYN packets) are considered threats. This is a very costly
approach in terms of packet inspections and less accurate
[56] when aimed at zero day attacks. We have shown in [58]
that signature-based tools are only able to detect a limited
number of volumetric attacks (to IoTs) that are common for
general-purpose computers.

Anomaly detection: There are many studies that employ
either entropy-based [78], [92]–[94] or machine learning
[95]–[97] techniques to detect new volumetric attacks in
SDN environments. The entropy-based approach is pri-
marily used for detecting types of volumetric attacks that

Fig. 2. Trafﬁc pattern of representative IoT types.

has to launch an attack through the network to collect
information about the device or the network.

Implications: Reconnaissance is harmless to the device
functionality, but it can lead to larger attacks on the device;
therefore, a network security solution has to identify such
attacks before the situation becomes critical. IP address
scanning, port scanning or sending an SSDP search query
are few attack techniques that have been reported for IoTs
[4], [15], [76], [77]. With regard to port scanning or IP
address scanning, there are sites like Shodan [4] , which
actively probes all the public IP addresses and their listening
port numbers, then it launches attacks to exploit those open
ports. Botnets (e.g., Mirai botnet) also scan the Internet to
identify open telnet ports which in the past, has eventually
led to large scale attacks [76]. SSDP search query packets
have also been used for ﬁngerprinting devices, which has
eventually led to access attacks [15], [77].

Solutions: To protect from such attacks, the existing
network solution uses techniques such as rate limiting,
activity modeling, and access controls.

Rate limiting: To detect port scanning, the authors in
[78] proposed to track new connections and rate limit the
tracking; and the authors in [79] proposed to track TCP RST
packets because during scanning, if ports are closed, then
the device would respond with a TCP RST packet, which
is an indicator of a scanning attack. Similarly to detecting
IP scanning attacks, the Network Security Monitor’s (NSM)
[80] is able to detect IP scanning if the host connects to
more than the conﬁgured number of IP addresses. This
technique requires thresholding and attackers are now using
more sophistical slow port stealth scanning or selective
port scanning to avoid getting detected. In addition, such
detection techniques also do not work when the attacker
selectively sends the SSDP search query to discover the
devices.

Activity modeling: GrIDS [81] proposes graph-based ac-
tivity modeling, which keeps track of all host and network
communication between the hosts. Such a data source pro-
vides an individual and holistic view of the network to
create more sophisticated rules to detect attacks. Authors
in [82] proposed a statistical model for a host to capture
both short and long term communication One such metric
is a volume of syn packets and a sudden increase in volume
would be captured as a deviation. Activity modeling can de-
tect scanning attacks but comes with the cost of maintaining

8am9am10am11am12am1pmTime0.02.55.07.510.012.515.017.520.0Byte Count (KB)Nedap LPR Steinel cameraEvolvePlus beam counters gatewaygenerate a large number of ﬂows. Authors in [92]–[94] use
sample entropy of IP address and ports of both source
and destination to determine if there is a large variation
captured; and if it exceeds the predetermined threshold,
then it is raised as an anomaly. In [93], [92] and [94] the
authors have applied this technique to detect attacks in ISP
networks, backbone networks and campus networks respec-
tively. Once an anomaly is detected, then identifying the
exact ﬂows (i.e., either 3 or 4 tuple ﬂows) on a large scale net-
work is challenging since entropy captures a single value for
the captured data and it is challenging to pinpoint the cause
of the attack unless maintaining all possible states, which
is not feasible for a large network. However, we showcase
that this can be achieved in our proposed approach in [98]
due to maintaining the selected ﬂow states of a device.
Works in [95]–[97] use two-class classiﬁcation (i.e., benign
and attack). This opposes the expectation from the anomaly-
based technique, which needs to ﬂag deviation from nor-
mal behavior [61]. Authors of [95], [96] proposed to use
features including ﬂow-level stats (i.e., packet/byte count
and duration), percentage of bidirectional ﬂows, growth
rate of unidirectional ﬂows, and growth rate of number of
unique ports, for their classiﬁers. Work in [97] employed
deep learning algorithms using a similar set of features
to classify normal and abnormal trafﬁc. Authors of [99]
applied a technique in [95] to IoT devices. However, their
evaluation is limited to simulated trafﬁc in mininet that does
not represent the behavior of real IoT devices. Not being
explainable (knows the device is being attacked but does not
know the context of the attack) as signature-based detection,
high false positives and training the models using normal
and anomalous trafﬁc are fundamental concerns of anomaly
based detection, we have overcome this in our work in [58]
by combining MUD with one class machine model trained
using only benign data to model trafﬁc pattern of individual
MUD access control entries.

3.5 Masquerading Attack

In this type of attack, the attack is intended to make the
packets appear from somewhere not intended, or they con-
tain data which is not the original data that was sent. In
general-purpose devices, such an attack can be minimized
due to a user directly interacting with or host protection in
the device can limit such attacks, but IoTs become vulnera-
ble to the simplest attacks.

Implications: As in [100], IoT devices use weak ciphers,
weak encryption or no encryption at all. Using a simple
DNS spooﬁng attack, the attacker can make the device trust
a fake server and that can lead to a data leak which could
impact privacy. Moreover, protocols such as NTP are widely
used in IoT devices. Spooﬁng the time in NTP packets
can make the device’s certiﬁcation fail due to an expired
certiﬁcate, which can render the device inactive. Similarly
routing information attacks can be launched at the device
to take it ofﬂine with very few spoofed packets, and attacks
such as ARP spoof can be launched to initiate a man in the
middle attack. Yet, these attacks are commonly found in a
general-purpose device. However, IoT devices do not have
any agent to provide any feedback and it is challenging for
consumers to deduce or identify the reason for such faults.

8

Solutions: There is no solution for detecting all possible
types of masquerading attacks; we require a speciﬁc attack
detection strategy for each attack type. There are two tech-
niques to prevent or detect such attacks, which are activity
proﬁling or using secured communication protocols.

Activity proﬁling: Attacks such as ARP or IP spoof can
be detected by inspecting packets and proﬁling the network
[101], [102]. For example, to detect ARP spooﬁng, a local
ARP table can be maintained to identify any conﬂicts. Simi-
larly, an IP spoof can be detected by maintaining the IP and
MAC address mapping and any alteration can be triggered
as an attack. To detect the NTP time spooﬁng attacks, NTP
packets also can be inspected for any alteration in NTP offset
[103]; however, to detect a slow rate of change in the NTP
offset requires maintaining the state of the device. Detecting
DNS spoof is also challenging because it requires knowing
all blacklisted or whitelisted IP addresses [104]. Activity
proﬁling would lead to higher costs due to deep packet
inspection in a high-speed network.

Use secured protocols: Using secured network protocol
can limit the attack surface. For example, DNSSEC can be
used to secure the device from DNS spooﬁng [39]. It is
shown in [7] that none of the devices they experimented
with have used DNSSEC. Further NTP spooﬁng attacks can
be limited by the use of NTP version 4. This limits the
NTP offset value but still, slow-changing NTP offset can be
harmful; yet, this can be further limited by rate-limiting. In
addition, there are no practical alternatives for securing an
ARP spoof attack, but in order to reduce the impact of such
an attack, it is recommended to use strong cipher suites for
all communication.

3.6 Access Attack

Many consumer IoT devices have been reported to have
weak authentication in local services, which has led to
many replays and unauthorized access attacks [7], [105].
In addition, using default passwords has been the cause of
many large scale IoT attacks [106], [107].

Implications: Access attack can lead to many threats.
The largest botnet attack, Mirai, was instigated because of
having open telnet ports in IoT devices. Devices such as
Lifx bulb and TP Link bulb having no authentication in
the local services, allowed attackers to take control of them
by sending control signals by either replaying or recrafting
the messages [108]. Replay attack is launched by capturing
control signal trafﬁc and then replaying it; and for the
recrafting technique, the attacker needs to know the payload
structure to recraft the packet. The payload structure can be
identiﬁed through the network trafﬁc or from product API.
Furthermore, we identiﬁed that the Genbolt IP camera has
an unencrypted web portal in the device, through which
an attacker can access the device ﬁrmware and then can
update the ﬁrmware by enabling the telnet service with
root privileges. In addition, any video URL can be fed to
Chromecast without any authentication [108]. Most of such
attacks have been launched due to weak authentication
in local services. The manufacturer allows unsecured local
services in consumer devices believing home routers would
provide access restrictions. However, the authors in [15]
have demonstrated that devices can be accessed through

port forwarding, which is enabled by malware installed
through a mobile application. In addition, authors in [77]
have shown that the local services can be accessed through
web browsers using DNS rebinding attacks. This shows that
it is essential to secure the devices and never to rely on the
security of network devices.

Solutions: There are two techniques such as access

controls and resistance scheme to limit attacks on devices.

Access controls: Traditional network access controls can
be used to limit only authorized devices, However, to
protect attacks originating from the authorized device, the
authors in [54] proposed a mobile agent, which limits the
access to authorized applications. Such a solution is difﬁ-
cult to apply in real settings because requesting consumers
to install a mobile application is challenging. Therefore,
more sophisticated models are required to protect devices
from such attacks originating from authorized devices. One
possible research pathway is to model the user interaction
with the authorized devices, yet it is being said it is very
challenging to capture the ground data.

Resistant scheme: Use password protection for all ser-
vices. Applying rate-limiting for password retrying and
using session-id for individual message transactions [109]
would limit the attack surface.

3.7 Active Crypto Attack

Using strong ciphers is the ﬁrst step to achieving security,
yet it is reported in [100] that many IoT devices do not use
strong ciphers, and due to this, many attacks on the integrity
security pillar have been reported.

Implications: Ciphers are considered the fundamental
requirement of information security pillars. The authors in
[110] demonstrated attacks on intimacy devices by hijacking
the user session by launching a man in the middle attack.
Such attack breaches users’ privacy and it is considered
cyber rape in some states in countries. This attack uses the
SSL split tool to break the existing TLS connection and takes
advantage of the vulnerability of the client not verifying the
trustworthiness of the provided CA certiﬁcate. In addition,
we have veriﬁed that off the shelf consumer devices such
as D-Link camera, Joodan camera, and Genbolt IP camera
use lack of cryptographic setting, which allows attackers to
launch man in the middle attacks to capture images that the
device is transmitting towards the mobile app.

Solutions: The only prevention is to follow proper
security settings by using strong and recommended cipher
suites, for example, use TLSv2 algorithm for better security.
Making sure the client validates the CA certiﬁcate with its
trust store, and checking the expiry date of the certiﬁcate
are the basic steps to achieve secured connections [111]. The
network security solution can identify whether the cipher
suites that the device is using for communication are strong
and recommended, but it cannot verify whether the client is
verifying the certiﬁcates in runtime, unless launching a fake
certiﬁcate test by isolating the device.

3.8 Data Exﬁltration Attack

Exﬁltration of sensitive data is a major concern in orga-
nization networks. These attacks are common in general-
purpose devices. The attacker extracts sensitive data and

9

passes it through the covert channel to the command and
control (CNC) servers. There are many methods to exﬁltrate
data and HTTP, FTP, DNS, SSH, Email, are a few examples
of those [112].

Implications: Researchers in [113] have demonstrated
an attack where they could collect sensitive documents that
are printed using 3D printers. Exﬁltrated data can lead to
ransomware attacks [114]. The collected data are usually
transmitted through covert channels using common proto-
cols such as DNS, HTTP, and SMTP [115]. Interestingly, the
authors in [116] demonstrated a novel type of ex ﬁltration
attack by transmitting the data to outside by changing the
intensity of smart light and a receiver from outside then
decodes the data.

Solutions: There are many researchers who have fo-
cused on detecting exﬁltration attacks targeted at general
purpose devices by incorporating machine learning. For ex-
ample the authors in [117] were able to detect an ex ﬁltration
attack through DNS covert channel by modeling the pattern
of a benign domain name; anything that did not match the
benign pattern was marked as a threat. Exﬁltration attacks
can be launched through various covert channels including
encrypted channels such as HTTPS, and SFTP, which fact
requires more focus from the research community.

3.9 Blocking Attack

Physical damage, jamming or destructing the functional-
ity of the device falls into the blocking attack category.
Many IoT platforms provide the functionality to monitor the
health of a device, yet there is a disconnection in information
propagation from such platforms to network administrators.
It is essential to inform network administrators of such
attacks to prevent them in the future.

Implications: The intention of such an attack is to block
the device from communicating with the controllers. Since
IoT devices are mostly installed and left unattended, it is not
noticeable unless a health monitoring service detects it. IoT
platforms monitor the health of a device from the device’s
health notiﬁcations or from the device’s published sensor
data. The devices that follow the ﬁrst approach can be vul-
nerable since an adversarial attacker can selectively allow
only the health service communication but block the others.
Such blocking attacks can lead to severe consequences if
the attacker targets to disable temperature sensors in a data
center or disables motion sensors in critical rooms.

Solutions: There are three techniques to identify such
blocking attacks, including monitoring physically, by wire-
less or by using a network-based solution.

Physical: This approach is very costly where a human
force is required to monitor the devices frequently to verify
if all device functionalities are working. However, it is
challenging to build a workforce to detect such attacks.

Wireless: Wireless channels are monitored to identify po-
tential jamming frequencies. Jamming attacks are launched
by generating noise to impact the signal to noise ratio of
the receivers [118]. There are two approaches to avoiding
such wireless-based attacks The ﬁrst is to build the IoT
hardware to differentiate such noise from the signal ,but it is
challenging to detect whether the noise frequency changes
frequently [119], and implementing such a technique is en-
ergy exhausting. The second approach is to use an external

noise detector to identify the increase in noise; however, this
is costly for larger IoT deployments.

Network based: Any blocking attack has to eventually
impact the network communication. In [70], we grouped de-
vices based on physical location and then we modeled their
communication using one class machine learning technique
and an attack was triggered if the device network behavior
deviates from the network system behaviour. We demon-
strated the ﬁrst step in detecting an attack by combining
physical and network data; however we found that there is
limited research in identifying such threats using network
based models.

3.10 Sleep Deprivation Attack

For a battery-powered device, the manufacturer intends to
extend longevity by in- creasing the sleep state. However,
attackers are targeting such devices by preventing them
from sleeping.

Implications: The attacker intends to increase the active
time by sending frequent packets to process, which even-
tually leads to battery exhaustion and leads to the device
going ofﬂine.

Solutions: The frequency of the packets is a deciding
factor for the solution. If the frequency is of a continuous,
high rate, then it would behave as a volumetric attack;
however, attackers now use stealth mode by only sending
less frequent packets [120]. Modeling energy levels and
resource usage of a device is an approach to identify such
an attack [121], however, such a solution would not notify
the network administrators when such an attack occurred.
Therefore, network viable solutions are also required. Inter-
estingly, there is a gap in the research that does not focus
on network data to identify such attacks. There are three
network approaches that can be applied, which are: access
control, rate limiting and trafﬁc modeling.

Access controls: This approach can be used to limit the
attack space by allowing the device that needs to be com-
municated with; however, attacks from authorized devices
will not be detected.

Rate limiting: Authors in [122] proposed rate-limiting
to prevent such attack. However, identifying such a single
threshold for devices using network data is challenging.

Trafﬁc modeling: Modeling the sleep pattern would be
an interesting approach and anomaly can be detected if the
observed pattern deviates from the norm. In order to model,
we need to identify the state of the device but the challenge
is to collect data with ground truth of the sleep states.

3.11 Trigger Action Attack

Consumer IoT integrations are enabled using trigger and
action rules. For example, a ﬁre alarm can have an on or off
state, whereas temperature sensors would have hot, cold, or
normal as states. Consumers can create trigger and action
rules using these device states. However, attackers are now
exploiting such complex event transitions.

Implications:

IoTs are expected to communicate with
each other to automate function. For example, if the tem-
perature is high, then they turn on the AC and close the
window. An attacker can exploit households to increase the
electricity consumption by notifying the AC to turn on while

10

spooﬁng the states of both windows and temperature. The
main cause of such an attack is not being able to verify
device states. In addition, authors in [123], [124] have shown
such exploitation in trigger and action rules can lead to DOS
and privacy attacks.

Solutions: There are preliminary studies that focus on
solving such problems using network data. Such a solution
should be able to identify any spooﬁng. Machine learning is
one promising technique to detect such an attack.

Machine learning models: The authors in [45] proposed a
state identiﬁcation mechanism by using machine learners.
This study limits the state classiﬁcation to idle, active and
boot. In addition, [73] have demonstrated to identify the
state motion using the encrypted trafﬁc data [73]. This
shows the potential of using network data to determine the
states. However, identifying multitude of device states for
a large number of device types is challenging. It’s due to
lack of annotated datasets, and obfuscated communication.
There are only limited research studies focus on detecting
states using network data, having such a solution can enable
to detect the trust of a device.

4 SURVEYS ON IOT NETWORK SECURITY

There has been wide range of IoT security surveys under-
taken over recent years, and they have focused on various
aspects of security in the IoT eco-system [125]–[133]. The au-
thors in [131] focused on the security of the IoT layers such
as sensing, network, middleware, gateway, and application.
Studies such as [126], [130] focused on IoT security based on
the domain it is applied to, such as smart home, transporta-
tion, health care or wireless sensor networks. The authors in
[127] focused their security analysis on IoT devices based
on wireless protocols such as WiFi, NFC, Bluetooth, and
Zigbee, And the authors in [133] focused their survey on
IoT network attacks. While these studies focused on various
aspects of security threats, in this paper we focused on IoT
network attack, implications and countermeasures.

5 CONCLUSION

Vulnerable IoT devices are being deployed and there are
many manufacturers releasing new devices to the market.
These devices have been the cause of many cyber attacks,
which have led to privacy breach, unauthorized access,
or DoS attacks. This paper focused on understanding the
role of various stakeholders in the IoT ecosystem and the
challenges they face with respect to IoT security; then we fo-
cused on the need for IoT network security and its architec-
ture components. We then focused on IoT network security
threats, the implications of such threats and countermea-
sures, which enabled us to identity the threats that require
further attention from the research community. We found
that there are several research directions regarding this topic
that can have a signiﬁcant impact on IoT network security
and lead to the evolution of novel security solutions.

REFERENCES

[1]

G. Sachs, “The Internet of Things: The Next Mega-Trend,” [On-
line]. Available: https://bit.ly/3a2tEgL, 2014.

[2]

[3]

[4]
[5]

[6]

[7]

[8]

[9]

[10]

Gartner, “Gartner Identiﬁes Top 10 Strategic IoT Technologies
and Trends,” [Online]. Available: https://gtnr.it/38Xl8hJ, 2018.
D. Kumar, K. Shen, B. Case, D. Garg, G. Alperovich,
D. Kuznetsov, R. Gupta, and Z. Durumeric, “All things con-
sidered: an analysis of iot devices on home networks,” in 28th
{USENIX} Security Symposium ({USENIX} Security 19), Santa
Clara, CA, 8 2019.
J. Matherly. (2018) Shodan. https://www.shodan.io/.
(2018) Network live IP video cameras directory. http://www.
insecam.org.
S. Hilton. (2016) Dyn Analysis Summary Of Friday October 21
Attack. https://bit.ly/2QqmVFP.
F. Loi, A. Sivanathan, H. H. Gharakheili, A. Radford, and
V. Sivaraman, “Systematically evaluating security and privacy
for consumer iot devices,” in Proc. ACM IoT S&P, Dallas, Texas,
USA, 11 2017.
P. Emami-Naeini, H. Dixon, Y. Agarwal, and L. F. Cranor, “Ex-
ploring how privacy and security factor into iot device purchase
behavior,” in Proc of nCHI, Glasgow, Scotland, Uk, 5 2019.
P. Morgner, C. Mai, N. Koschate-Fischer, F. Freiling, and Z. Benen-
son, “Security update labels: Establishing economic incentives
for security patching of iot consumer products,” arXiv preprint
arXiv:1906.11094, 2019.
S. R. Gopavaram, J. Dev, S. Das, and J. Camp, “Iotmarketplace:
Informing purchase decisions with risk communication,” 2019.

[11] N. J. Rubenking, “Exclusive: Popular Baby Monitor Wide Open

[12]

to Hacking,” [Online]. Available: https://bit.ly/3d81lj2, 2020.
I. S. Foundation, “IoT Security Foundation Publications,” [On-
line]. Available: https://bit.ly/33tH971.

[13] O. Foundation, “IoT Security Guidance,” [Online]. Available:

https://bit.ly/2Woe3V2.

[14] GSMA, “GSMA IoT Security Guidelines and Assessment,” [On-

line]. Available: https://bit.ly/3b5T5y7.

[15] V. Sivaraman, D. Chan, D. Earl, and R. Boreli, “Smart-phones
attacking smart-homes,” in Proceedings of the 9th ACM Conference
on Security & Privacy in Wireless and Mobile Networks, Darmstadt,
Germany, 7 2016, pp. 195–200.
J. M. Blythe, N. Sombatruang, and S. D. Johnson, “What secu-
rity features and crime prevention advice is communicated in
consumer iot device manuals and support pages?” Journal of
Cybersecurity, vol. 5, no. 1, p. tyz005, 2019.

[16]

[17] P. Emami-Naeini, Y. Agarwal, L. F. Cranor, and H. Hibshi, “Ask
the experts: What should be on an iot privacy and security label?”
arXiv preprint arXiv:2002.04631, 2020.

[18] Y. Shen and P.-A. Vervier, “Iot security and privacy labels,” in

Annual Privacy Forum. Springer, 2019, pp. 136–147.

[19] T. Pering, K. Farrington, and T. Dahm, “Taming the iot: Opera-
tionalized testing to secure connected devices,” Computer, vol. 51,
no. 6, pp. 90–94, 2018.

[20] T. Micro, “Telecom Crimes Against the IoT and 5G,” [Online].

Available: https://bit.ly/2ISVIaG, 2019.

[21] L. Mathews, “Criminals Hacked A Fish Tank To Steal Data From

A Casino,” [Online]. Available: https://bit.ly/2Wv8iEO, 2017.

[22] V. Sivaraman, H. H. Gharakheili, A. Vishwanath, R. Boreli, and
O. Mehani, “Network-level security and privacy control for
smart-home iot devices,” in Proc. IEEE WiMob, Abu Dhabi, UAE,
10 2015.

[23] H. Haddadi, V. Christophides, R. Teixeira, K. Cho, S. Suzuki, and
A. Perrig, “Siotome: An edge-isp collaborative architecture for iot
security,” in Proc. IoTSec, 2018.

[24] C. Government, “Senate Bill No. 327,” [Online]. Available: https:

//bit.ly/38YO7C6, 2018.

[25] M. Fagan, K. N. Megas, K. Scarfone, and M. Smith, “Recommen-
dations for IoT Device Manufacturers: Foundational Activities
and Core Device Cybersecurity Capability Baseline,” [Online].
Available: https://bit.ly/2vusZ8T, 2020.

[27]

[26] U. K. Government, “Consultation on regulatory proposals on
consumer IoT security ,” [Online]. Available: https://bit.ly/
2WjVDom, 2020.
J. Ellis, “The IoT Cybersecurity Improvement Act of 2019,” [On-
line]. Available: https://bit.ly/2whVEP0, 2019.
IoTAA,
in Aus-
traliav4.1Strategic Plan to Strengthen IoT Security in Australia,”
[Online]. Available: https://bit.ly/3h05s1Y, 2016.

Strengthen

“Strategic

Plan

[28]

IoT

to

[29] R. Ross, M. McEvilley, and J. Oren, “Systems security engi-
neering: Considerations for a multidisciplinary approach in the

11

engineering of trustworthy secure systems,” National Institute of
Standards and Technology, Tech. Rep., 2016.

[30] ENISA, “ENISA Good practices for IoT and Smart Infrastructures
Tool,” [Online]. Available: https://bit.ly/3d6qXgp, 2019.
[31] E. Lear, D. Romascanu, and R. Droms, “Manufacturer usage
description speciﬁcation,” IETF Secretariat, RFC 8520, 3 2019.
[Online]. Available: https://www.rfc-editor.org/rfc/rfc8520.txt
I. Brass, L. Tanczer, M. Carr, M. Elsden, and J. Blackstock, “Stan-
dardising a moving target: The development and evolution of iot
security standards,” 3 2018.

[32]

[33] H. H. Gharakheili, A. Sivanathan, A. Hamza, and V. Sivaraman,
“Network-level security for the internet of things: opportunities
and challenges,” Computer, vol. 52, no. 8, pp. 58–62, 2019.
[34] U. D. of Homeland Security. (2016) Strategic Principles For Secur-

ing the Internet of Things (IoT). https://bit.ly/3a3B1Vl.

[35] A. Fernandez, “New IoT security regulations: what you need to
know ,” [Online]. Available: https://bit.ly/3djY802, 2020.
[36] R. Atoui, “Main Challenges of Implementing IoT Security Stan-

dards ,” [Online]. Available: https://bit.ly/2QrOu1w.

[37] W. Zhou, Y. Jia, Y. Yao, L. Zhu, L. Guan, Y. Mao, P. Liu, and
Y. Zhang, “Discovering and understanding the security hazards
in the interactions between iot devices, mobile apps, and clouds
on smart home platforms,” in 28th {USENIX} Security Symposium
({USENIX} Security 19), 2019, pp. 1133–1150.
S. Ariyapperuma and C. J. Mitchell, “Security vulnerabilities in
dns and dnssec,” in Proc. IEEE ARES, Vienna, Austria, 4 2007.

[38]

[39] G. Ateniese and S. Mangard, “A new approach to dns security
(dnssec),” in Proc on ACM conference on Computer and Communica-
tions Security, Philadelphia, USA, 11 2001.

[40] R. Oppliger, “Internet security: ﬁrewalls and beyond,” Communi-

cations of the ACM, vol. 40, no. 5, pp. 92–102, 1997.

[41] A. Herzberg and H. Shulman, “Dnssec: Security and availabil-
ity challenges,” in Proc. IEEE Conference on Communications and
Network Security (CNS), National Harbor, MD, USA, 10 2013.
[42] A. Viswanathan and B. Neuman, “A survey of isolation tech-
niques,” Information Sciences Institute, University of Southern Cali-
fornia, 2009.

[43] Y. Meidan, M. Bohadana, A. Shabtai, M. Ochoa, N. O. Tippen-
hauer, J. D. Guarnizo, and Y. Elovici, “Detection of unauthorized
iot devices using machine learning techniques,” arXiv preprint
arXiv:1709.04647, 2017.

[44] A. Sivanathan, H. H. Gharakheili, F. Loi, A. Radford, C. Wi-
jenayake, A. Vishwanath, and V. Sivaraman, “Classifying iot
devices in smart environments using network trafﬁc character-
istics,” IEEE Transactions on Mobile Computing, 2018.

[45] A. Sivanathan, H. H. Gharakheili, and V. Sivaraman, “Managing
iot cyber-security using programmable telemetry and machine
learning,” IEEE Transactions on Network and Service Management,
2020.

[46] A. Hamza, D. Ranathunga, H. H. Gharakheili, T. A. Benson,
M. Roughan, and V. Sivaraman, “Verifying and monitoring iots
network behavior using mud proﬁles,” IEEE Transactions on
Dependable and Secure Computing, 2020.

[47] Y. Meidan, M. Bohadana, A. Shabtai, J. D. Guarnizo, M. Ochoa,
N. O. Tippenhauer, and Y. Elovici, “Proﬁliot: a machine learning
approach for iot device identiﬁcation based on network trafﬁc
analysis,” in Proc. symposium on applied computing, Marrakech
Morocco, 4 2017.

[48] A. Hamza, D. Ranathunga, H. H. Gharakheili, M. Roughan,
and V. Sivaraman, “Clear as mud: generating, validating and
applying iot behavioral proﬁles,” in Proc. ACM workshop on IoT
S&P, Budapest, Hungary, 8 2018.

[49] V. Paxson, “Bro: A system for detecting network intruders in real-

time,” Comput. Netw., vol. 31, no. 23-24, pp. 2435–2463, 12 1999.

[50] M. Roesch, “Snort - lightweight intrusion detection for net-
works,” in Proc. USENIX Conference on System Administration,
Seattle, Washington, 11 1999.

[51] C. Yoon, T. Park, S. Lee, H. Kang, S. Shin, and Z. Zhang,
“Enabling security functions with sdn,” Comput. Netw., vol. 85,
no. C, pp. 19–35, 7 2015.

[52] C. L. et al., “Piggybacking network functions on sdn reactive
routing: A feasibility study,” in Proc. ACM SOSR, Santa Clara,
CA, USA, 4 2017.

[53] T. Yu, V. Sekar, S. Seshan, Y. Agarwal, and C. Xu, “Handling a
trillion (unﬁxable) ﬂaws on a billion devices: Rethinking network
security for the internet-of-things,” in Proc ACM Workshop on
HotNets, Philadelphia, PA, USA, 11 2015.

[54]

[55]

S. Demetriou, N. Zhang, Y. Lee, X. Wang, C. A. Gunter, X. Zhou,
and M. Grace, “Hanguard: Sdn-driven protection of smart home
wiﬁ devices from malicious mobile apps,” in Proc. ACM Con-
ference on Security and Privacy in Wireless and Mobile Networks,
Boston, Massachusetts, 7 2017.
J. P. Amaral, L. M. Oliveira, J. J. Rodrigues, G. Han, and L. Shu,
“Policy and network-based intrusion detection system for ipv6-
enabled wireless sensor networks,” in Proc. IEEE International
Conference on Communications (ICC), Sydney, NSW, Australia, 6
2014.

[56] A. Hamza, H. H. Gharkheili, and V. Sivaraman, “Combining
mud policies with sdn for iot intrusion detection,” in Proc. ACM
workshop on IoT S&P, Budapest, Hungary, 8 2018.

[57] M. Ranganathan, “Soft mud: Implementing manufacturer usage
descriptions on openﬂow sdn switches,” in Proc. International
Conference on Networks (ICN), Valencia, 3 2019.

[58] A. Hamza, H. H. Gharakheili, T. A. Benson, and V. Sivaraman,
“Detecting volumetric attacks on lot devices via sdn-based mon-
itoring of mud activity,” in Proc. ACM SOSR, San Jose, USA, 4
2019.

[59] Y. Afek, A. Bremler-Barr, and A. Noy, “Eradicating attacks on
the internal network with internal network policy,” arXiv preprint
arXiv:1910.00975, 2019.

[60] P. Garcia-Teodoro, J. Diaz-Verdejo, G. Macia-Fernandez, and
E. Vazquez, “Anomaly-based network intrusion detection: Tech-
niques, systems and challenges,” Comput. Secur., vol. 28, no. 1-2,
pp. 18–28, 2 2009.

[61] R. S. et al., “Outside the closed world: On using machine learn-
ing for network intrusion detection,” in Proc. IEEE Security and
Privacy (SP), Berkeley, CA, USA, 5 2010.
IoT Security Foundation, “Whitepaper: Can You Trust Your Smart
Building?” Tech. Rep., 6 2019.

[62]

[63] Project Haystack. (2019) Project Haystack. project-haystack.org.
[64] B. Balaji, A. Bhattacharya, G. Fierro, J. Gao, J. Gluck, D. Hong,
A. Johansen, J. Koh, J. Ploennigs, Y. Agarwal et al., “Brick: Meta-
data schema for portable smart building applications,” Applied
energy, vol. 226, pp. 1273–1292, 2018.

[65] V. Bazjanac and D. Crawley, “Industry foundation classes and in-
teroperable commercial software in support of design of energy-
efﬁcient buildings,” in Proc. of Building Simulation, 1999.

[66] W3.

(2007) SPARQL Query Language for RDF.

[Online].

Available: https://www.w3.org/TR/rdf-sparql-query/

[67] Z. B. Celik, P. McDaniel, and G. Tan, “Soteria: Automated iot
safety and security analysis,” in Proc Usenix ATC, Boston, MA
USA, 7 2018.

[68] Z. B. Celik, G. Tan, and P. D. McDaniel, “Iotguard: Dynamic
enforcement of security and safety policy in commodity iot.” in
Proc. NDSS, San Diego, CA USA, 2 2019.

[69] V. Nagendra, A. Bhattacharya, V. Yegneswaran, A. Rahmati, and
S. R. Das, “Viscr: Intuitive & conﬂict-free automation for secur-
ing the dynamic consumer iot infrastructures,” arXiv preprint
arXiv:1907.13288, 2019.

[70] A. Hamza, H. H. Gharkheili, T. Pering, and V. Sivaraman, “Com-
bining device behavioral models and building schema for cyber-
security of large-scale iot infrastructure,” in Under Review, 2020.

[71] T. Seals, “Billions of Devices Open to Wi-Fi Eavesdropping At-
tacks,” [Online]. Available: https://bit.ly/3a2JgRp, 2020.
[72] A. Acar, H. Fereidooni, T. Abera, A. K. Sikder, M. Miettinen,
H. Aksu, M. Conti, A.-R. Sadeghi, and A. S. Uluagac, “Peek-a-
boo: I see your smart home activities, even encrypted!” arXiv
preprint arXiv:1808.02741, 2018.

[73] N. Apthorpe, D. Reisman, S. Sundaresan, A. Narayanan, and
N. Feamster, “Spying on the smart home: Privacy attacks and
defenses on encrypted iot trafﬁc,” arXiv preprint arXiv:1708.05044,
2017.

[74] T. Datta, N. Apthorpe, and N. Feamster, “A developer-friendly li-
brary for smart home iot privacy-preserving trafﬁc obfuscation,”
in Proceedings of the 2018 Workshop on IoT Security and Privacy,
Budapest, Hungary, 8 2018.

[75] Tripwire, “3 Types of Network Attacks to Watch Out For,”

[Online]. Available: https://bit.ly/2QpS5x6, 2019.

[76] M. Antonakakis, T. April, M. Bailey, M. Bernhard, E. Bursztein,
J. Cochran, Z. Durumeric,
Invernizzi,
M. Kallitsis et al., “Understanding the mirai botnet,” in 26th
{USENIX} Security Symposium ({USENIX} Security 17), 2017, pp.
1093–1110.

J. A. Halderman, L.

12

[77] G. Acar, D. Y. Huang, F. Li, A. Narayanan, and N. Feamster,
“Web-based attacks to discover and control local iot devices,”
in Proceedings of the 2018 Workshop on IoT Security and Privacy,
Budapest, Hungary, 8 2018.
S. A. Mehdi, J. Khalid, and S. A. Khayam, “Revisiting traf-
ﬁc anomaly detection using software deﬁned networking,” in
International workshop on recent advances in intrusion detection.
Springer, 2011, pp. 161–180.

[78]

[79] R. Odhaviya, A. Modi, R. Sheth, and A. Mathuria, “Feasibility of
idle port scanning using rst rate-limit,” in Proceedings of the 10th
International Conference on Security of Information and Networks,
2017, pp. 224–228.

[80] L. T. Heberlein, G. V. Dias, K. N. Levitt, B. Mukherjee, J. Wood,
and D. Wolber, “A network security monitor,” Lawrence Liver-
more National Lab., CA (USA); California Univ., Davis, CA (USA,
Tech. Rep., 1989.
S. Staniford-Chen, S. Cheung, R. Crawford, M. Dilger, J. Frank,
J. Hoagland, K. Levitt, C. Wee, R. Yip, and D. Zerkle, “Grids-
a graph based intrusion detection system for large networks,”
in Proceedings of the 19th national
information systems security
conference, vol. 1. Baltimore, 1996, pp. 361–370.

[81]

[82] P. Porras and A. Valdes, “Live trafﬁc analysis of tcp/ip gate-

[83]

ways,” in Proc. NDSS, San Diego, 1998.
S. B. et al., “The Hunt for IoT: The Rise of Thingbots,” F5 Labs,
Tech. Rep., 7 2017.

[84] C. S. Inc., “Midyear Cybersecurity Report,” Tech. Rep., 2017.
[85] Cisco, “Cisco 2018 Annual Cybersecurity Report,” Tech. Rep.,

2018.

[86] T. Micro, “Persirai: New Internet of Things (IoT) Botnet Targets

IP Cameras,” [Online]. Available: https://bit.ly/3b4PJLL, 2017.

[87] ——, “Bashlite IoT Malware Updated with Mining and Backdoor
Commands, Targets WeMo Devices,” [Online]. Available: https:
//bit.ly/2xJGH8E, 2019.
Smith, “Mirai Okiru: New DDoS botnet targets ARC-based IoT
devices,” [Online]. Available: https://bit.ly/2Ui3csX, 2018.
[89] T. Seals, “Wicked Botnet Uses Passel of Exploits to Target IoT,”

[88]

[Online]. Available: https://bit.ly/33r7m5S, 2018.

[90] Avast, “Torii botnet - Not another Mirai variant,” [Online]. Avail-

able: https://bit.ly/2UfOzXg, 2018.

[91] M. Lyu, D. Sherratt, A. Sivanathan, H. Habibi Gharakheili,
A. Radford, and V. Sivaraman, “Quantifying the reﬂective ddos
attack capability of household iot devices,” in Proc. ACM WiSec,
Boston, Massachusetts, 7 2017.

[92] A. Lakhina, M. Crovella, and C. Diot, “Mining anomalies using
trafﬁc feature distributions,” in ACM SIGCOMM computer com-
munication review, vol. 35, no. 4. ACM, 2005, pp. 217–228.
[93] K. Kumar, R. Joshi, and K. Singh, “A distributed approach using
entropy to detect ddos attacks in isp domain,” in Proc. IEEE
ICSPCN, 2007.

[94] K. Giotis, C. Argyropoulos, G. Androulidakis, D. Kalogeras, and
V. Maglaris, “Combining openﬂow and sﬂow for an effective and
scalable anomaly detection and mitigation mechanism on sdn
environments,” Computer Networks, vol. 62, pp. 122–136, 2014.

[95] R. Braga, E. Mota, and A. Passito, “Lightweight ddos ﬂooding at-
tack detection using nox/openﬂow,” in Proc. IEEE LCN, Denver,
CO, USA, 10 2010, pp. 408–415.

[96] Y. Cui, L. Yan, S. Li, H. Xing, W. Pan, J. Zhu, and X. Zheng, “Sd-
anti-ddos: Fast and efﬁcient ddos defense in software-deﬁned
networks,” Journal of Network and Computer Applications, vol. 68,
pp. 65–79, 2016.

[97] T. A. Tang, L. Mhamdi, D. McLernon, S. A. R. Zaidi, and
M. Ghogho, “Deep learning approach for network intrusion de-
tection in software deﬁned networking,” in Proc. IEEE WINCOM,
Fez, Morocco, 10 2016.

[98] A. Hamza, H. H. Gharakheili, T. A. Benson, and V. Sivaraman,
“Isolating anomalous ﬂow in volumetric attacks on iot devices
via sdn monitoring,” in Under review.
S. S. Bhunia and M. Gurusamy, “Dynamic attack detection and
mitigation in iot using sdn,” in Telecommunication Networks and
Applications Conference (ITNAC), 2017 27th International.
IEEE,
2017, pp. 1–6.

[99]

[100] D. Y. Huang, N. Apthorpe, G. Acar, F. Li, and N. Feamster,
“Iot inspector: Crowdsourcing labeled network trafﬁc from smart
home devices at scale,” arXiv preprint arXiv:1909.09848, 2019.
[101] G. Jinhua and X. Kejian, “Arp spooﬁng detection algorithm
using icmp protocol,” in 2013 International Conference on Computer
Communication and Informatics.

IEEE, 2013, pp. 1–6.

13

in Workshop on Decentralized IoT Systems and Security (DISS), Perth
Australia, 4 2018.

[125] J. Deogirikar and A. Vidhate, “Security attacks in iot: A survey,”
in Proc. IEEE International Conference on I-SMAC, Palladam, India,
10 2017.

[126] M. Nawir, A. Amir, N. Yaakob, and O. B. Lynn, “Internet of things
(iot): Taxonomy of security attacks,” in Proc. IEEE ICED, Phuket,
Thailand, 1 2017.

[127] H. A. Abdul-Ghani, D. Konstantas, and M. Mahyoub, “A com-
prehensive iot attacks survey based on a building-blocked refer-
ence model,” IJACSA) International Journal of Advanced Computer
Science and Applications, pp. 355–373, 2018.

[128] P. Aufner, “The iot security gap: a look down into the valley
between threat models and their implementation,” International
Journal of Information Security, pp. 1–12, 2019.

[129] I. Butun, P.

¨Osterberg, and H. Song, “Security of the internet
of things: vulnerabilities, attacks and countermeasures,” IEEE
Communications Surveys & Tutorials, 2019.

[130] F. Meneghello, M. Calore, D. Zucchetto, M. Polese, and
A. Zanella, “Iot: Internet of threats? a survey of practical security
vulnerabilities in real iot devices,” IEEE Internet of Things Journal,
vol. 6, no. 5, pp. 8182–8201, 2019.

[131] V. Hassija, V. Chamola, V. Saxena, D. Jain, P. Goyal, and B. Sikdar,
“A survey on iot security: application areas, security threats,
and solution architectures,” IEEE Access, vol. 7, pp. 82 721–82 743,
2019.

[132] I. Ali, S. Sabir, and Z. Ullah, “Internet of things security, de-
vice authentication and access control: a review,” arXiv preprint
arXiv:1901.07309, 2019.

[133] D. Sisodia, “On the state of internet of things security: Vulnerabil-
ities, attacks, and recent countermeasures,” University of Oregon,
Tech. Rep., 2020.

[102] A. K. Bharti, M. Goyal, and M. Chaudhary, “A review on detec-
tion of session hijacking and ip spooﬁng,” International Journal of
Advanced Research in Computer Science, vol. 4, no. 9, 2013.
[103] A. Garofalo, C. Di Sarno, L. Coppolino, and S. D ´Antonio, “A gps
spooﬁng resilient wams for smart grid,” in European Workshop on
Dependable Computing. Springer, 2013, pp. 134–147.

[104] G. Ramesh, I. Krishnamurthi, and K. S. S. Kumar, “An efﬁcacious
method for detecting phishing webpages through target domain
identiﬁcation,” Decision Support Systems, vol. 61, pp. 12–22, 2014.
[105] D. dos Santos, “Sabotaging common iot devices in smart build-
ings by exploiting unencrypted protocols,” [Online]. Available:
https://bit.ly/2IZ6TyG, 2019.

[106] E. Montalbano, “Hacker leaks more than 500k telnet credentials
for iot devices,” [Online]. Available: https://bit.ly/33ukHdR,
2020.

[107] M. Kan, “Iot botnet highlights the dangers of default passwords,”

[Online]. Available: https://bit.ly/2UfVCPD, 2016.

[108] V. S. et al., “Inside job - Security and privacy threats for smart-

home IoT devices,” ACCAN, Tech. Rep., 2017.

[109] Y. Feng, W. Wang, Y. Weng, and H. Zhang, “A replay-attack
resistant authentication scheme for the internet of things,” in
Proc. IEEE CSE and IEEE EUC, Guangzhou, China, 8 2017.
[110] M. Wynn, K. Tillotson, R. Kao, A. Calderon, A. Murillo, J. Ca-
margo, R. Mantilla, B. Rangel, A. A. Cardenas, and S. Rueda,
“Sexual intimacy in the age of smart devices: Are we practicing
safe iot?” in Proceedings of the 2017 Workshop on Internet of Things
Security and Privacy, Dallas Texas, USA, 11 2017.

[111] S. Labs, “Ssl and tls deployment best practices,” [Online]. Avail-

able: https://bit.ly/392rnko, 2020.

[112] A. Giani, V. H. Berk, and G. V. Cybenko, “Data exﬁltration and
covert channels,” in Sensors, and Command, Control, Communica-
tions, and Intelligence (C3I) Technologies for Homeland Security and
Homeland Defense V, vol. 6201.
International Society for Optics
and Photonics, 2006, p. 620103.

[113] Q. Do, B. Martini, and K.-K. R. Choo, “A data exﬁltration and
remote exploitation attack on consumer 3d printers,” IEEE Trans-
actions on Information Forensics and Security, vol. 11, no. 10, pp.
2174–2186, 2016.

[114] I. Yaqoob, E. Ahmed, M. H. ur Rehman, A. I. A. Ahmed, M. A. Al-
garadi, M. Imran, and M. Guizani, “The rise of ransomware and
emerging security challenges in the internet of things,” Computer
Networks, vol. 129, pp. 444–458, 2017.

[115] Mitre, “Exﬁltration,” [Online]. Available: https://attack.mitre.

org/tactics/TA0036/, 2018.

[116] E. Ronen and A. Shamir, “Extended functionality attacks on
iot devices: The case of smart lights,” in Proc. IEEE EuroS&P,
Saarbrucken, Germany, 5 2016.

[117] J. Ahmed, H. H. Gharakheili, Q. Raza, C. Russell, and V. Sivara-
man, “Monitoring enterprise dns queries for detecting data ex-
ﬁltration from internal hosts,” IEEE Transactions on Network and
Service Management, 2019.

[118] IFAC, “Jamming attacks: A major threat to controlling over
wireless channels,” [Online]. Available: https://bit.ly/2wljyJg,
2019.

[119] X. Tang, P. Ren, and Z. Han, “Jamming mitigation via hierarchical
security game for iot communications,” IEEE Access, vol. 6, pp.
5766–5779, 2018.

[120] M. Pirretti, S. Zhu, N. Vijaykrishnan, P. McDaniel, M. Kandemir,
and R. Brooks, “The sleep deprivation attack in sensor networks:
Analysis and methods of defense,” International Journal of Dis-
tributed Sensor Networks, vol. 2, no. 3, pp. 267–287, 2006.

[121] D. C. Nash, T. L. Martin, D. S. Ha, and M. S. Hsiao, “Towards an
intrusion detection system for battery exhaustion attacks on mo-
bile computing devices,” in Proc. IEEE international conference on
pervasive computing and communications workshops, Kauai Island,
HI, USA, 3 2005.

[122] S. Hristozov, M. Huber, and G. Sigl, “Protecting restful

iot
devices from battery exhaustion dos attacks,” arXiv preprint
arXiv:1911.08134, 2019.

[123] M. Surbatovich, J. Aljuraidan, L. Bauer, A. Das, and L. Jia, “Some
recipes can do more than spoil your appetite: Analyzing the
security and privacy risks of ifttt recipes,” in Proceedings of the
26th International Conference on World Wide Web, Perth Australia,
4 2017, pp. 1501–1510.

[124] N. Sapountzis, R. Sun, and D. Oliveira, “Ddift: Decentralized
dynamic information ﬂow tracking for iot privacy and security,”

