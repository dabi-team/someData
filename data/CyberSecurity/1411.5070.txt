4
1
0
2

v
o
N
8
1

]

M

I
.
h
p
-
o
r
t
s
a
[

1
v
0
7
0
5
.
1
1
4
1
:
v
i
X
r
a

**Volume Title**
ASP Conference Series, Vol. **Volume Number**
**Author**
c(cid:13) **Copyright Year** Astronomical Society of the Paciﬁc

AstroCloud, a Cyber-Infrastructure for Astronomy Research:
Architecture

Jian Xiao1, Ce Yu1, Chenzhou Cui2, Boliang He2, Changhua Li2,
Dongwei Fan2, Zhi Hong1, Shucheng Yin1, Chuanjun Wang3, Zihuang Cao2,
Yufeng Fan3, Shanshan Li2, Linying Mi2, Wanghui Wan2, Jianguo Wang3,
Hailong Zhang4

1Tianjin University, 92 Weijin Road, Tianjin 300072, China
2National Astronomical Observatories, Chinese Academy of Sciences (CAS),
20A Datun Road, Beijing 100012, China
3Yunnan Astronomical Observatory, CAS, P.0.Box110, Kunming 650011, China
4Xinjiang Astronomical Observatory, CAS, 150 Science 1-Street, Urumqi,
Xinjiang 830011, China

Abstract. AstroCloud is a cyber-Infrastructure for Astronomy Research initiated by
Chinese Virtual Observatory (China-VO) under funding support from NDRC (National
Development and Reform commission) and CAS (Chinese Academy of Sciences). The
ultimate goal of this project is to provide a comprehensive end-to-end astronomy re-
search environment where several independent systems seamlessly collaborate to sup-
port the full lifecycle of the modern observational astronomy based on big data, from
proposal submission, to data archiving, data release, and to in-situ data analysis and
processing. In this paper, the architecture and key designs of the AstroCloud platform
are introduced, including data access middleware, access control and security frame-
work, extendible proposal workﬂow, and system integration mechanism.

1. Overview of the AstroCloud Platform

Modern large digital telescopes have pushed astronomy into the data-driven era. As-
tronomers have to apply massive storage resources and computing power to process
and analyze big data to probe the origins of our universe. Additionally, it becomes
impractical to replicate copies at the sites of individual research groups (telescopes)
(Bryant et al. 2008). In order to support the full lifecycle of the modern observational
astronomy research based on big data, the AstroCloud platform was built by Chinese
Virtual Observatory (China-VO), and as illustrated in Fig. 1, the cyber-infrastructure
consists of four main independent systems, which are Telescope, Data, Cloud, Com-
puting(HPC), one auxiliary tools system, and two fundamental backend components
for data archiving and storage. Except for the Telescope and Tools systems, other sys-
tems and components are built upon existing storage and computing resources located
in ﬁve distributedly astronomical observatories of CAS.

These independent systems seamlessly integrated to a comprehensive end-to-end
astronomy research environment where astronomers can make proposal submission in

1

 
 
 
 
 
 
2

Jian Xiao,CeYu,andChenzhou Cuietal.

Astronomy Cloud of China-VO

Data Achieve

Cloud Storage (FITS,Database,Logs,HDF5 etc.)

proposal

observe

review

allocation

Real-time Weather  

VM

Astro

Cloud

Baidu

Cloud

Down

load

HPC

Access 
Control

Lunar phases, 
visibility  etc. 
calculators 

Toolsets  

Telescope

Data

Cloud

Computing

Tools

Portal (http://astrocloud.china-vo.org)

Figure 1.
The overview of the Astrocloud, a platform built for full lifecycle of
observation data management and in-situ data processing based on Cloud Computing
technology

the Telescope system, manage the observed data through the Data system, and perform
data processing and analysis using VMs (virtual machine) in the Cloud system or more
powerful physical clusters in the Computing system. In backend, the observed data
from telescope can be automatically transferred to nearest local data center which is a
node of the AstroCloud platform, so users can process their data in an in-situ manner
within the platform which avoids large volume data transferring.

Motivated by the integrated data-centric approach of Astro-WISE project (Begeman et al.

2013), the AstroCloud platform adopted a similar data-driven architecture. As Fig. 1
demonstrated, the whole platform is built upon a distributed cloud storage layer where
overall data are resident, in order to reduce the complexity of data management and
performance optimization, a distributed data access middleware is designed to provide
a uniﬁed data access interface. Upper systems can transparently access data without
caring the physical location of the data. Moreover, based on the RBAC (role based
access control) method and rule engine, a security framework is developed to provide
uniﬁed user management, guarantee normal data access and protect private data. The
platform is mainly implemented by Java programming language, plus a few of C/C++
codes, Python and Bash scripts.

2. The Big-data Oriented Architecture

2.1. Distributed Data Access Layer

As shown in Fig. 2, the dedicated cloud storage and uniﬁed data access layer are the
fundamental backend of the whole AstroCloud platform. The cloud storage is based
on GlusterFS ﬁle system and PostgreSQL database which only meta-data and star cat-
alogues are stored in. Due to the large data volume, most data sets are distributed
in many database partitions, moreover upper systems usually need to link to diﬀerent
databases and read ﬁles from diﬀerent data nodes. The data access middleware provides
a uniﬁed and eﬃcient query interface which hides the complexity of data layouts to the

  
AstroCloud,aCyber-InfrastructureforAstronomyResearch: Architecture

3

Telescope

Data

Cloud

Computing

Access Control and Security Manager

UMT

Distributed Data Access Middleware

Cloud Storage (FITS,Database,Logs,HDF5 etc.)

Figure 2.

The overall architecture of the Astrocloud platform

upper systems. Besides that, the layer is also responsible for most housekeeping tasks
related to data maintenance, such as data copy, backup and master/slave storage switch-
ing etc.. Most importantly, the data layer has a proven capability in keeping good query
performance and horizontal scalability as the data volume continuously increases.

2.2. RBAC and Rule Based Security Framework

The security framework is implemented based on role-based access control(BRAC)
method and rule engine. As illustrated in Fig. 3, user can have many roles, and role
includes many permissions of operation, and operation is deﬁned by the class and its
method which implements this operation, plus a check rule. The rule describes the
prerequisite for invoking this operation or the ﬁlter criteria for the underlying data.
For example, user’s request would be mapped to a particular java class and its some
method, security manager will check whether the user has the permission to invoke
the class’s method, and then if passed, the rule engine will parse and evaluate the rule
bound with the operation. According to the type of rule, some ﬁltering constraints may
be applied to the following execution for reading operation, or the authorization result
will be returned for writing operation.

User

(cid:947)(cid:947)

Role

(cid:947)(cid:947)

Operation

(cid:917)(cid:918)(cid:919)(cid:922)(cid:927)(cid:922)(cid:933)(cid:922)(cid:928)(cid:927)

Class

Method

Rule

ProposalRepository

list

User.id  ==  Data.owner.id 

|| Data.isPublic  ==  true

Security Manager

Spring MVC

User Request

http://telescope.china-vo.org/proposal/index

d

Figure 3.
grained check, and rule engine is for ﬁne-grained control.

The RBAC and rule based security mechnism. RBAC is for coarse-

4

Jian Xiao,CeYu,andChenzhou Cuietal.

2.3. Extendible and Customizable Proposal Workﬂow

In order to integrate new telescope quickly and support more telescopes in the future, an
extendible proposal workﬂow is proposed. As illustrated in Fig. 4, the process of obser-
vation application is divided into four sequential phases, and the workﬂow engine will
automatically drive the process. In each phase telescope-special customization is pos-
sible. For a telescope to participate in the platform, the developers only need to create
necessary templates and write a few lines of code for telescope-special data model and
its validation check. Usually telescope has its own dedicated control system and local
limited storage, so it is necessary to implement a common data transfer interface—a
bridge connecting individual telescopes and the platform, and a daemon process will
periodically moving local observed data into the cloud storage through the bridge.

Proposal Submission

Proposal Form  & Template

Proposal Review

Review Criteria & Statistics  

Time Allocation

Telescope Calendar 

Notification & Confirm

Notification Template 

Observed Data

d

Export Tool
Export Tool

Cloud Storage

Figure 4.
resent its customizable points

Telescope proposal management workﬂow. The unﬁlled rectangles rep-

3. Summary and Future Work

At present the beta version of the AstroCloud platform have been released, and the
2.4m telescope on Lijiang station of Yunnan Observatories have been open in the plat-
form. The integration tasks for the 2.16m telescope on Xinglong station of National
Observatories and the 25m radio telescope on Xinjiang Observatories are in progress.

References

Begeman, K., Belikov, A. N., Boxhoorn, D., & Valentijn, E. A. 2013, Experimental Astronomy,

35, 1

Bryant, R. E., Katz, R. H., & Lazowska, E. D. 2008, Big-data computing: Creating revolution-
ary breakthroughs in commerce, science, and society, Tech. Rep. 8, Computing Research
Association, Computing Community Consortium

