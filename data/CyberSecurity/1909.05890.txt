9
1
0
2

p
e
S
2
1

]
I
S
.
s
c
[

1
v
0
9
8
5
0
.
9
0
9
1
:
v
i
X
r
a

Determining the Scale of Impact from Denial-of-Service Attacks
in Real Time Using Twitter

Chi Zhang
University of Maryland, Baltimore County
Department of Computer Science and Electrical
Engineering
Baltimore, MD
chzhang1@umbc.edu

Ashwinkumar Ganesan
University of Maryland, Baltimore County
Department of Computer Science and Electrical
Engineering
Baltimore, MD
gashwin1@umbc.edu

Bryan Wilkinson
University of Maryland, Baltimore County
Department of Computer Science and Electrical
Engineering
Baltimore, MD
bwilk1@umbc.edu

Tim Oates
University of Maryland, Baltimore County
Department of Computer Science and Electrical
Engineering
Baltimore, MD
oates@umbc.edu

ABSTRACT
Denial of Service (DoS) attacks are common in on-line and mobile
services such as Twitter, Facebook and banking. As the scale and
frequency of Distributed Denial of Service (DDoS) attacks increase,
there is an urgent need for determining the impact of the attack.
Two central challenges of the task are to get feedback from a large
number of users and to get it in a timely manner. In this paper,
we present a weakly-supervised model that does not need anno-
tated data to measure the impact of DoS issues by applying Latent
Dirichlet Allocation and symmetric Kullback-Leibler divergence on
tweets. There is a limitation to the weakly-supervised module. It
assumes that the event detected in a time window is a DoS attack
event. This will become less of a problem, when more non-attack
events twitter got collected and become less likely to be identi-
fied as a new event. Another way to remove that limitation, an
optional classification layer, trained on manually annotated DoS
attack tweets, to filter out non-attack tweets can be used to increase
precision at the expense of recall. Experimental results show that
we can learn weakly-supervised models that can achieve compa-
rable precision to supervised ones and can be generalized across
entities in the same industry.

CCS CONCEPTS
• Computing methodologies → Information extraction;

KEYWORDS
Event Detection; Topic Modeling; Weakly-supervised Learning

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
DYNAMICS ’18, December 3–4, 2018, San Juan, PR, USA
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-6218-4/18/12. . . $15.00
https://doi.org/10.1145/3306195.3306199

1

1 INTRODUCTION
Denial of Service attacks are explicit attempts to stop legitimate
users from accessing specific network systems [10]. Attackers try
to exhaust network resources like bandwidth, or server resources
like CPU and memory. As a result, the targeted system slows down
or becomes unusable [21]. On-line service providers like Bank Of
America, Facebook and Reddit are often the target of such attacks
and the frequency and scale of those attacks has increased rapidly
in recent years [32].

To address this problem, there is ample previous work on meth-
ods to detect and handle Denial of Service attacks, especially Dis-
tributed Denial of Service attacks. D-WARD [20] is a scheme that
tries to locate a DDoS attacks at the source by monitoring inbound
and outbound traffic of a network and comparing it with prede-
fined "normal" values. Some IP Traceback mechanisms [15] were
developed to trace back to the attack source from the victim’s end.
Still other methods try to deploy a defensive scheme in an entire
network to detect and respond to an attack at intermediate sub-
networks. Watchers [5] is an example of this approach.

Despite all the new models and techniques to prevent or handle
cyber attacks, DDoS attacks keep evolving. Services are still being
attacked frequently and brought down from time to time. After a
service is disrupted, it is crucial for the provider to assess the scale
of the outage impact.

In this paper, we present a novel approach to solve this problem.
No matter how complex the network becomes or what methods the
attackers use, a denial of service attack always results in legitimate
users being unable to access the network system or slowing down
their access and they are usually willing to reveal this information
on social media plaforms. Thus legitimate user feedback can be
a reliable indicator about the severity level of the service outage.
Thus we split this problem into two parts namely by first isolating
the tweet stream that is likely related to a DoS attack and then
measuring the impact of attack by analyzing the extracted tweets.
A central challenge to measure the impact is how to figure out
the scale of the effect on users as soon as possible so that appro-
priate action can be taken. Another difficulty is given the huge

 
 
 
 
 
 
number of users of a service, how to effectively get and process
the user feedback. With the development of Social Networks, es-
pecially micro blogs like Twitter, users post many life events in
real time which can help with generating a fast response. Another
advantage of social networks is that they are widely used. Twitter
claims that they had 313 million monthly active users in the second
quarter of 2016 [30]. This characteristic will enlarge the scope of
detection and is extremely helpful when dealing with cross domain
attacks because tweets from multiple places can be leveraged. The
large number of users of social networks will also guarantee the
sensitivity of the model. However, because of the large number of
users, a huge quantity of tweets will be generated in a short time,
making it difficult to manually annotate the tweets, which makes
unsupervised or weakly-supervised models much more desirable.
In the Twitter data that we collected there are three kinds of
tweets. Firstly are tweets that are actually about a cyberattack. For
example, someone tweeted "Can’t sign into my account for bank of
America after hackers infiltrated some accounts." on September 19,
2012 when a attack on the website happened. Secondly are tweets
about some random complaints about an entity like "Death to Bank
of America!!!! RIP my Hello Kitty card... " which also appeared on
that day. Lastly are tweets about other things related to the bank.
For example, another tweet on the same day is "Should iget an
account with bank of america or welsfargo?".

To find out the scale of impact from an attack, we must first pick
out the tweets that are about the attack. Then using the ratio and
number of attack tweets, an estimation of severity can be generated.
To solve the problem of detecting Denial of Service attacks from
tweets, we constructed a weakly-supervised Natural Language Pro-
cessing (NLP) based model to process the feeds. More generally, this
is a new event detection model. We hypothesize that new topics
are attack topics. The hypothesis would not always hold and this
issue will be handled by a later module. The first step of the model
is to detect topics in one time window of the tweets using Latent
Dirichlet Allocation [4]. Then, in order to get a score for each of the
topics, the topics in the current time window are compared with
the topics in the previous time window using Symmetric Kullback-
Leibler Divergence (KL Divergence) [16]. After that, a score for
each tweet in the time window is computed using the distribution
of topics for the tweet and the score of the topics. We’re looking for
tweets on new topics through time. While the experiments show
promising results, precision can be further increased by adding
a layer of a supervised classifier trained with attack data at the
expense of recall.

Following are the contributions in this paper:

(1) A dataset of annotated tweets extracted from Twitter dur-
ing DoS attacks on a variety organizations from differing
domains such as banking (like Bank Of America) and tech-
nology.

(2) A weakly-supervised approach to identifying detect likely

DoS service related events on twitter in real-time.

(3) A score to measure impact of the DoS attack based on the

frequency of user complaints about the event.

The rest of this paper is organized as follows: In section 2, previ-
ous work regarding DDoS attack detection and new event detection
will be discussed. In section 3, we describe the how the data was

collected. We also present the model we created to estimate the
impact of DDoS attacks from Twitter feeds. In section 4, the experi-
ments are described and the results are provided. In section 5 we
discuss some additional questions. Finally, section 6 concludes our
paper and describes future work.

2 RELATED WORK
Denial of Service (DoS) attacks are a major threat to Internet se-
curity, and detecting them has been a core task of the security
community for more than a decade. There exists significant amount
of prior work in this domain. [6, 13, 17] all introduced different
methods to tackle this problem. The major difference between this
work and previous ones are that instead of working on the data of
the network itself, we use the reactions of users on social networks
to identify an intrusion.

Due to the widespread use of social networks, they have become
an important platform for real-world event detection in recent
years [14]. Dou et al. [12] defined the task of new event detection as
"identifying the first story on topics of interest through constantly
monitoring news streams". Atefeh et al. [1] provided a comprehen-
sive overview of event detection methods that have been applied to
twitter data. We will discuss some of the approaches that are closely
related to our work. Weng et al. [31] used a wavelet-signal clus-
tering method to build a signal for individual words in the tweets
that was dependent high frequency words that repeated themselves.
The signals were clustered to detect events. Sankaranarayanan et
al. [28] presented an unsupervised news detection method based
on naive Bayes classifiers and on-line clustering. Long et al. [18]
described an unsupervised method to detect general new event
detection using Hierarchical divisive clustering. Phuvipadawat et
al. [26] discussed a pipeline to collect, cluster, rank tweets and ulti-
mately track events. They computed the similarity between tweets
using TF-IDF. The Stanford Named Entity Recognizer was used to
identify nouns in the tweets providing additional features while
computing the TF-IDF score. Petrović et al. [25] tried to detect
events on a large web corpus by applying a modified locality sensi-
tive hashing technique and clustering documents (tweets) together.
Benson et al. [3] created a graphical model that learned a latent
representation for twitter messages, ultimately generating a canon-
ical value for each event. Tweet-scan [9] was a method to detect
events in a specific geo-location. After extracting features such as
name, time and location from the tweet, the method used DB-SCAN
to cluster the tweets and Hierarchical Dirichlet Process to model
the topics in the tweets. Badjatiya et. al. [2] applied deep neural
networks to detect events. They showed different architectures
such as Convolutional Neural Networks (CNN), Recurrent Neural
Networks (LSTM based) and FastText outperform standard n-gram
and TF-IDF models. Burel et al. [8] created a Dual-CNN that had
an additional channel to model the named entities in tweets apart
from the pretrained word vectors from GloVe [23] or Word2Vec
[19].

Thus most event detection models can be grouped into three
main categories of methods i.e. TF-IDF based methods, approaches
that model topics in tweets and deep neural network based al-
gorithms. One of the main challenges against applying a neural
network model is the the requirement of a large annotated corpus

of tweets. Our corpus of tweets is comparatively small. Hence we
build our pipeline by modeling the topics learned from tweets.

The previous work that is most similar to ours was Cordeiro
[11]. We both used Latent Dirichlet Allocation (LDA) to get the
topics of the document, the difference was they only run LDA on
the hash-tag of the tweets while we try to get the topics in the
tweets by running it on the whole document.

Latent Dirichlet Allocation [4] was a method to get topics from
a corpus. In our work, we used the technique to acquire the values
of some of the variables in our equation. A variation of it, Hierar-
chically Supervised Latent Dirichlet Allocation [24] was used in
the evaluation.

3 APPROACH
Figure 1 outlines the entire pipeline of the model from preprocessing
tweets to modeling them and finally detecting / ranking future
tweets that are related to a DoS issue and measuring its severity.

3.1 Data Collection
To collect the tweets, we first gathered a list of big DDoS attacks
happened from 2012 to 2014. Then for each attack on the list, we
collected all the tweets from one week before the attack to the
attack day that contains the name of the entity attacked.

3.2 Preprocessing
The following preprocessing procedure were applied to the corpus
of tweets:

• Remove all the meta-data like time stamp, author, and so on.
These meta-data could provide useful information, but only
the content of the tweet was used for now.

• Lowercase all the text
• Use an English stop word list to filter out stop words.

The last two steps are commonly used technique when preprocess-
ing text.

3.3 Create LDA Models
Now we try to find out a quantitative representation of the corpus.
To do that, the preprocessed tweets about one attack will be divided
into two groups. One is on the attack day and the other is the tweets
one week before it. The first set will be called Da and the other one
Db . This step will create two separate LDA models for Da and Db
using the Genism library [27]. The first Model will be called Ma
and the other one Mb .

Latent Dirichlet allocation (LDA) is a generative probabilistic
topic modeling model. Figure 2 is its plate notation. The meaning of
different parameters M, N , α, β, θ , z and w is also described there.
We used the LDA algorithm implemented by the Gensim library.
One of the most important parameters of the LDA algorithm is the
number of topics Nt in the corpus. To determine that we introduced
the following formula:

Nt = ⌊α ∗ loдNd ⌋

(1)

where Nd is the number of tweets in the corpus. α is a constant and
we used α=10 in our experiments. The logic behind the equation is
discussed in section 5.

3.4 The attack topics
Then we want to find out how the new topics are different from
the history topics or, in other words, how topics in Ma differ from
topics in Mb . We define the Symmetric Kullback-Leibler divergence
for topic Tj in Model Ma as:

SKLj = min
1<m <n

(Dkl (Tj ,T

m ) + Dkl (T

m,Tj ))

′

′

(2)

m is the mth topic
Where n is the number of topics in Model Mb , T
in Model Mb and Dkl(X , Y ) is the original Kullback-Leibler Diver-
gence for discrete probability distributions which defined as :

′

Dkl (X , Y ) = (cid:213)

X (i) ∗ log

i

X (i)
Y (i)

(3)

Where X (i) and Y (i) are the probability of token i in topics X and
Y respectively. This is similar to the Jensen-Shannon divergence.
So for each topic Tj in Model Ma its difference to topics in Mb

is determined by its most similar topic in Mb .

The topics from the attack day model Ma are ranked by their
Symmetric Kullback-Leibler divergence to topics from the non-
attack day model Mb . An example of selected attack topics is pro-
vided in section 4.3.

3.5 The attack tweets
This subsection is about how to find specific tweets that are about a
network attack. The tweets are selected based on the relative score
S. The score for tweet ti is defined as:

S =

n
(cid:213)

j=1

Pi, j ∗ SKLj

(4)

Where n is the number of topics on the attack day, Pi, j is the prob-
ability that topic j appears in tweet ti in the attack day LDA model,
and SKLj is the Symmetric Kullback-Leibler divergence for topic j.
The higher the score the more likely it is related to an attack event.

3.6 Optional Classifier Layer
Because annotated data is not needed, the model we described
before can be regarded as a weakly-supervised model to detect new
events on twitter in a given time period. To label tweets as attack
tweets, one assumption must be true, which is that the new event
in that time period is a cyber attack. Unfortunately, that is usually
not true. Thus, an optional classifier layer can be used to prevent
false positives.

By using a decision tree model we want to find out whether
the weakly-supervised part of the model can simplify the problem
enough that a simple classification algorithm like a decision tree can
have a good result. Additionally, it is easy to find out the reasoning
underline a decision tree model so that we will know what the most
important features are.

The decision tree classifier is trained on the bag of words of
collected tweets and the labels are manually annotated. We limit
the minimum samples in each leaf to be no less than 4 so that the
tree won’t overfit. Other than that, a standard Classification and
Regression Tree (CART) [7] implemented by scikit-learn [22] was
used. The classifier was only trained on the training set (tweets

Figure 1: Workflow to process tweets gathered and build a model to rank future tweets that likely to be related to a DoS attack.
The ranked tweets are used to measure the severity of the attack.

time period. And Nuser is the number of twitter followers of the
network service.

An interesting future work is to find out the quantitative relation
between SeverityLevel score and the size of the actual DDoS attack.

4 EXPERIMENTS
In this section we experimentally study the proposed attack tweet
detection models and report the evaluation results.

4.1 Term Definition
We used precision and recall for evaluation:

• Precision: Out of all of the tweets that are marked as attack
tweets, the percentage of tweets that are actually attack
tweets. Or true positive over true positive plus false positive.
• Recall: Out of all of the actual attack tweets, the percentage
of tweets that are labeled as attack tweets. Or true positive
over true positive plus false negative.

4.2 Experiment Dataset
We collected tweets related to five different DDoS attacks on three
different American banks. For each attack, all the tweets containing
the bank’s name posted from one week before the attack until the
attack day were collected. There are in total 35214 tweets in the
dataset. Then the collected tweets were preprocessed as mentioned
in the preprocessing section.

The following attacks were used in the dataset:

• Bank of America attack on 09/19/2012.
• Wells Fargo Bank attack on 09/19/2012.
• Wells Fargo Bank attack on 09/25/2012.
• PNC Bank attack on 09/19/2012.
• PNC Bank attack on 09/26/2012.

Figure 2: Plate notation of LDA [4]. The outer box denotes
documents in the corpus and M is the number of documents.
The inner box denotes the repeated choice of topics and
words within a document where N is the number of words in
a document. α is the parameter of the Dirichlet prior on the
per-document topic distributions. β is the parameter of the
Dirichlet prior on the per-topic word distribution. θ is the
topic distribution. z is the topic of word w in the document.

about Bank of America on 09/19/2012), so that the test results do
not overestimate accuracy.

3.7 Measure the Severity
The definition of severity varies from different network services
and should be studied case by case.

For the sake of completeness, we propose this general formula:

SeverityLevel = β ∗

Nat t ack
Nall

+ (1 − β) ∗

Nat t ack
Nuser

(5)

In the equation above, β is a parameter from 0 to 1 which deter-
mines the weight of the two parts. Nat t ack is the number of attack
tweets found. Nall means the number of all tweets collected in the

4.3 The Attack Topics
Only the tweets from the Bank of America attack on 09/19/2012
were used in this experiment. The tweets before the attack day and
on the attack day were used to train the two LDA models mentioned
in the approach section.

The top, bottom 4 attack topics and their top 10 words are shown

in table 1 and 2.

Topic Top 10 Words

1

2

3

4

bank, america’s, prolonged,
site, slowdown, stuck, website,
tech, slow, entirely
hackers, bank, nyse,
america, angered, target, sacrilegious,
website, movie„ .
america’s, bank, katherine,
fannie, mae, mangu-ward, examines,
contract, reason’s, account
bank, site, america’s, outage,
prolonged, sept, users,
18, said, reported

SKL

9.729

9.205

9.099

9.055

Table 1: Top 4 Attack topics from the Bank of America data
with their Symmetric Kullback-Leibler divergence

Topic Top 10 Words

SKL

1

2

3

4

bank, america, follows,
light, central, sales, policy,
check, rt, cashed
america, bank, bad,
great, claiming, keep, work,
post, can, feedback
bank, america, capital,
..., @abc, deon, pitsor,
names, >, annual
can, work, america, bank,
help, happened, anything,
jh, ma, s17

4.15656803208709

4.30044067526549

4.33914718404024

Table 2: Bottom 4 Attack topics from the Bank of America
data with their Symmetric Kullback-Leibler divergence

As shown in table 1, there are roughly 4 kinds of words in the
attack topics. First is the name of the entity we are watching. In
this case, it is Bank of America. Those words are in every tweet, so
they get very high weight in the topics, while not providing useful
information. Those words can be safely discarded or added to the
stop word list. The second type of words are general cybersecurity
words like website, outage, hackers, slowdown and so on. Those
words have the potential to become an indicator. When topics with
those words appears, it is likely that there exists an attack. The
third kind are words related to the specific attack but not attacks
in general. Those words can provide details about the attack, but
it is hard to identify them without reading the full tweets. In our
example, the words movie and sacrilegious are in this group. That

is because the DDoS attack on Bank of America was in response
to the release of a controversial sacrilegious film. The remaining
words are non-related words. The higher the weights of them in a
topic, the less likely the topic is actually about a DDoS attack.

The results showed that except the 3rd topic, the top 4 topics
have high weight on related words and the number of the forth
type of words are smaller than the first three types of words. There
are no high weight words related to security in the bottom 4 topics.
We can say that the high SKL topics are about cyber attacks.

4.4 The Attack Tweets
In this subsection we discuss the experiment on the attack tweets
found in the whole dataset. As stated in section 3.3, the whole
dataset was divided into two parts. Da contained all of the tweets
collected on the attack day of the five attacks mentioned in section
4.2. And Db contained all of the tweets collected before the five
attacks. There are 1180 tweets in Da and 7979 tweets in Db . The
tweets on the attack days (Da ) are manually annotated and only 50
percent of those tweets are actually about a DDoS attack.

The 5 tweets that have the highest relative score in the dataset

are:

• jiwa mines and miner u.s. bancorp, pnc latest bank web-
sites to face access issues: (reuters) - some u.s. bancorp...
http://bit.ly/p5xpmz

• u.s. bancorp, pnc latest bank websites to face access issues:

(reuters) - some u.s. bancorp and pnc financial...

• @pncvwallet nothing pnc sucks fat d ur lucky there’s 3 pnc’s
around me or your bitchassness wouldnt have my money
• business us bancorp, pnc latest bank websites to face access

issues - reuters news

• forex business u.s. bancorp, pnc latest bank websites to face

The precision when labeling the first x ranked tweets as attack
tweet is shown in the figure 3. The x-axis is the number of ranked
tweets treated as attack tweets. And the y-axis is the corresponding
precision. The straight line in figures 3, 6 and 11 is the result of a
supervised LDA algorithm which is used as a baseline. Supervised
LDA achieved 96.44 percent precision with 10 fold cross validation.
The result shows that if the model is set to be more cautious
about labeling a tweet as an attack tweet, a small x value, higher
precision, even comparable to supervised model can be achieved.
However as the x value increases the precision drops eventually.

Figure 4 shows the recall of the same setting. We can find out
that the recall increases as the model becomes more bold, at the
expense of precision.

Figure 5 is the detection error trade-off graph to show the relation
between precision and recall more clearly (missed detection rate is
the precision).

4.5 Generalization
In this subsection we evaluate how good the model generalizes. To
achieve that, the dataset is divided into two groups, one is about the
attacks on Bank of America and the other group is about PNC and
Wells Fargo. The only difference between this experiment and the
experiment in section 4.4 is the dataset. In this experiment setting
Da contains only the tweets collected on the days of attack on PNC

4.16785261141118

access issues http://dlvr.it/2d9ths

Figure 3: Precision, positive predictive value, of the model
when labeling the first x ranked tweets as attack tweet using
all of the tweets collected. The straight line is the result of a
supervised LDA model as a baseline.

Figure 5: Detection error trade-off graph when labeling the
different number of ranked tweets as attack tweet using all
of the tweets collected.

Figure 4: Recall, true positive rate, of the model when label-
ing the first x ranked tweets as attack tweet using all of the
tweets collected.

and Wells Fargo. Db only contains the tweets collected before the
Bank of America attack. There are 590 tweets in Da and 5229 tweets
in Db . In this experiment, we want to find out whether a model
trained on Bank of America data can make good classification on
PNC and Wells Fargo data.

Figures 6 and 7 will show the precision and recall of the model in
this experiment setting. A detection error trade-off graph (Figure 8)
is also provided. The result is similar to the whole dataset setting
from the previous section. The smaller the x value is, the higher
the precision and lower the recall, vice versa. The precision is also

Figure 6: Precision, positive predictive value, of the model
when labeling the first x ranked tweets as attack tweet. The
model was trained on Bank of America data and tested on
PNC and Wells Fargo data. The straight line is the result of
a supervised LDA model as a baseline.

comparable to the supervised model when a small x is chosen. This
shows that the model generalized well.

4.6 Impact Estimation
Using the result from last section, we choose to label the first 40
tweets as attack tweets. The number 40 can be decided by either
the number of tweets labeled as attack tweets by the decision tree
classifier or the number of tweets that have a relative score S higher

also be a minor attack because only a tiny portion of the people
following those banks are complaining about the outage. The value
of β should depend on the provider’s own definition of severity.

4.7 Parameter Tuning
This model has two parameters that need to be provided. One is α
which is needed to determine the number of topics parameter Nt ,
and the other is whether to use the optional decision tree filter.

Figures 9 and 10 provide experimental results on the model with
different combinations of parameters. We selected four combina-
tions that have the best and worst performance. All of the results
can be found in appendix. The model was trained on Bank of Amer-
ica tweets and tested on PNC and Wells Fargo tweets like in section
4.5. In the figure, different lines have different values of α which
ranges from 5 to 14 and the x axis is the number of ranked tweets
labeled as attack tweets which have a range of 1 to 100 and the
y-axis is the precision or recall of the algorithm and should be a
number from 0 to 1.

The results shows the decision tree layer increases precision at
the cost of recall. The model’s performance differs greatly with
different α values while there lacks a good way to find the optimal
one.

5 DISCUSSION
In this section, we will discuss two questions.

Firstly, we want to briefly discuss how good humans do on this
task. What we find out is though humans perform well on most
of the tweets, some tweets have proven to be challenging without
additional information. In this experiment, we asked 18 members
of our lab to classify 34 tweets picked from human annotated ones.
There are only two tweets which all the 18 answers agree with each
other. And there are two tweets that got exactly the same number
of votes on both sides. The two tweets are "if these shoes get sold
out before i can purchase them, i’ma be so mad that i might just
switch banks! @bankofamerica fix yourself!" and "nothing’s for
sure, but if i were a pnc accountholder, i’d get my online banking
business done today: http://lat.ms/uv3qlo".

The second question we want to talk about is how to find out the
optimal number of topics in each of the two LDA models. As shown
in the parameter tuning section, the number of topics parameter
greatly affects the performance of the model. We’ve tried several
ways to figure out the number of topics. First a set number of
topics for different corpora. We tried 30 different topic numbers
on the Bank of America dataset and chose the best one, and then
tested it on the PNC data. The result shows that this method does
not perform well on different datasets. We think it is because the
number of topics should be a function of the number of documents
or number of words in the corpus. Then we tried to let the model
itself determines the parameter. There are some LDA variations that
can do automatic number of topic inference. The one we chose is
the Hierarchical Dirichlet Process (HDP) mixture model, which is a
nonparametric Bayesian approach to clustering grouped data and a
natural nonparametric generalization of Latent Dirichlet Allocation
[29]. However it does not perform very well. Its precision is shown
in figure 11 and recall is shown in figure 12. We think the reason for
this kind of performance might be that tweets, with the restriction of

Figure 7: Recall, true positive rate, of the model when la-
beling the first x ranked tweets as attack tweet. The model
was trained on Bank of America data and tested on PNC and
Wells Fargo data.

Figure 8: Detection error trade-off graph when labeling the
different number of ranked tweets as attack tweet. The
model was trained on Bank of America data and tested on
PNC and Wells Fargo data.

than a threshold. The PNC and Wells Fargo bank have 308.3k fol-
lowers combined as of July 2018. According to eqution (5) from
section 3.6, the severity Level can be computed.

+ (1 − β) ∗

SeverityLevel = β ∗

40
590
The score would have a range from 6.78 * 10−2 to 1.30 * 10−3,
depending on the value of β. This means that it could be a fairly
important event because more than six percent of tweets mention-
ing the banks are talking about the DDoS attack. However it could

40
308300

(6)

Figure 9: Selected precision, positive predictive value, of the models with different parameter combinations. α is a parameter
used to find out number of topics in the corpus. The model was trained on Bank of America data and tested on PNC and Wells
Fargo data.

Figure 10: Selected recall, true positive rate, of the models with different parameter combinations. α is a parameter used to
find out number of topics in the corpus. The model was trained on Bank of America data and tested on PNC and Wells Fargo
data.

computes an anomaly score based on the distribution of new topics
and their KL divergence to the historical topics. Then we tested the
model on same and different entities to check the model’s perfor-
mance and how well it generalize. Our experiment result showed
that the model achieved decent result on finding out tweets related
to a DDoS attack even comparable to a supervised model baseline.
And it could generalize to different entities within the same domain.
Using the attack tweets, we could get an estimation of the impact
of the attack with a proposed formula.

There remain some interesting open questions for future re-
search. For example, it is important to figure out a way to find
out the optimal number of topics in the dataset. We would also
be interested to see how well this model will perform on other
kind of event detection task if the optional classifier layer changes
accordingly.

A ADDITIONAL RESULT FOR PARAMETER

TUNING

Figures 13 and 14 provide all of the experimental results on the
model with different combinations of parameters.

REFERENCES
[1] Farzindar Atefeh and Wael Khreich. 2015. A survey of techniques for event

detection in twitter. Computational Intelligence 31, 1 (2015), 132–164.

[2] Pinkesh Badjatiya, Shashank Gupta, Manish Gupta, and Vasudeva Varma. 2017.
Deep learning for hate speech detection in tweets. In Proceedings of the 26th
International Conference on World Wide Web Companion. International World
Wide Web Conferences Steering Committee, 759–760.

[3] Edward Benson, Aria Haghighi, and Regina Barzilay. 2011. Event discovery in
social media feeds. In Proceedings of the 49th Annual Meeting of the Association for
Computational Linguistics: Human Language Technologies-Volume 1. Association
for Computational Linguistics, 389–398.

[4] David M Blei, Andrew Y Ng, and Michael I Jordan. 2003. Latent dirichlet allocation.

Journal of machine Learning research 3, Jan (2003), 993–1022.

[5] Kirk A Bradley, Steven Cheung, Nicholas Puketza, Biswanath Mukherjee, and
Ronald A Olsson. 1998. Detecting disruptive routers: A distributed network
monitoring approach. IEEE network 12, 5 (1998), 50–60.

[6] Rodrigo Braga, Edjard Mota, and Alexandre Passito. 2010. Lightweight DDoS
flooding attack detection using NOX/OpenFlow. In Local Computer Networks
(LCN), 2010 IEEE 35th Conference on. IEEE, 408–415.

[7] Leo Breiman, Jerome H Friedman, Richard A Olshen, and Charles J Stone. 1984.
Classification and regression trees. 1993. Chapman Hall, New York (1984).
[8] Grégoire Burel, Hassan Saif, Miriam Fernandez, and Harith Alani. 2017. On
semantics and deep learning for event detection in crisis situations. (2017).
[9] Joan Capdevila, Jesús Cerquides, Jordi Nin, and Jordi Torres. 2017. Tweet-scan:
An event discovery technique for geo-located tweets. Pattern Recognition Letters
93 (2017), 58–68.

[10] Glenn Carl, George Kesidis, Richard R Brooks, and Suresh Rai. 2006. Denial-
IEEE Internet computing 10, 1 (2006),

of-service attack-detection techniques.
82–89.

[11] Mário Cordeiro. 2012. Twitter event detection: combining wavelet analysis and
topic inference summarization. In Doctoral symposium on informatics engineering.
11–16.

[12] Wenwen Dou, K Wang, William Ribarsky, and Michelle Zhou. 2012. Event
detection in social media data. In IEEE VisWeek Workshop on Interactive Visual
Text Analytics-Task Driven Analytics of Social Media Content. 971–980.

[13] Laura Feinstein, Dan Schnackenberg, Ravindra Balupari, and Darrell Kindred.
2003. Statistical approaches to DDoS attack detection and response. In DARPA
Information Survivability Conference and Exposition, 2003. Proceedings, Vol. 1.
IEEE, 303–314.

[14] Anuradha Goswami and Ajey Kumar. 2016. A survey of event detection tech-
niques in online social networks. Social Network Analysis and Mining 6, 1 (17
Nov 2016), 107. https://doi.org/10.1007/s13278-016-0414-1

[15] A John and T Sivakumar. 2009. Ddos: Survey of traceback methods. International
Journal of Recent Trends in Engineering ACEEE (Association of Computer Electronics
& Electrical Engineers) 1, 2 (2009).

[16] Solomon Kullback. 1997. Information theory and statistics. Courier Corporation.
[17] Keunsoo Lee, Juhyun Kim, Ki Hoon Kwon, Younggoo Han, and Sehun Kim.
2008. DDoS attack detection method using cluster analysis. Expert Systems with

Figure 11: Precision, positive predictive value, of the Hier-
archical Dirichlet process model when labeling the first x
ranked tweets as attack tweet using all of the tweets col-
lected. The straight line is the result of a supervised LDA
model as a baseline.

Figure 12: Recall, true positive rate, of the Hierarchical
Dirichlet process model when labeling the first x ranked
tweets as attack tweet using all of the tweets collected.

140 characters, have very different properties than usual documents
like news or articles. The last method is what was proposed in this
paper. An α equals 10 is what we chose and did a good job on the
experiments. But it is only an empirical result.

6 CONCLUSION
In this paper, we proposed a novel weakly-supervised model with
optional supervised classifier layer to determine the impact of a
Denial-of-Service attack in real time using twitter. The approach

Figure 13: Precision, positive predictive value, of the models with different parameter combinations. α is a parameter used to
find out number of topics in the corpus. The model was trained on Bank of America data and tested on PNC and Wells Fargo
data.

Figure 14: Recall, true positive rate, of the models with different parameter combinations. α is a parameter used to find out
number of topics in the corpus. The model was trained on Bank of America data and tested on PNC and Wells Fargo data.

Applications 34, 3 (2008), 1659–1665.

[18] Rui Long, Haofen Wang, Yuqiang Chen, Ou Jin, and Yong Yu. 2011. Towards
Effective Event Detection, Tracking and Summarization on Microblog Data.. In
WAIM. Springer, 652–663.

[19] Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean. 2013. Efficient
estimation of word representations in vector space. arXiv preprint arXiv:1301.3781
(2013).

[20] Jelena Mirkovic, Gregory Prier, and Peter Reiher. 2003. Source-end DDoS defense.
In Network Computing and Applications, 2003. NCA 2003. Second IEEE International
Symposium on. IEEE, 171–178.

[21] Jelena Mirkovic and Peter Reiher. 2004. A taxonomy of DDoS attack and DDoS
defense mechanisms. ACM SIGCOMM Computer Communication Review 34, 2
(2004), 39–53.

[22] F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion, O. Grisel, M.
Blondel, P. Prettenhofer, R. Weiss, V. Dubourg, J. Vanderplas, A. Passos, D. Cour-
napeau, M. Brucher, M. Perrot, and E. Duchesnay. 2011. Scikit-learn: Machine
Learning in Python. Journal of Machine Learning Research 12 (2011), 2825–2830.
[23] Jeffrey Pennington, Richard Socher, and Christopher Manning. 2014. Glove:
Global vectors for word representation. In Proceedings of the 2014 conference on
empirical methods in natural language processing (EMNLP). 1532–1543.

[24] Adler J Perotte, Frank Wood, Noemie Elhadad, and Nicholas Bartlett. 2011. Hierar-
chically supervised latent Dirichlet allocation. In Advances in Neural Information
Processing Systems. 2609–2617.

[25] Saša Petrović, Miles Osborne, and Victor Lavrenko. 2010. Streaming first story
detection with application to twitter. In Human language technologies: The 2010
annual conference of the north american chapter of the association for computational
linguistics. Association for Computational Linguistics, 181–189.

[26] Swit Phuvipadawat and Tsuyoshi Murata. 2010. Breaking news detection and
tracking in Twitter. In 2010 IEEE/WIC/ACM International Conference on Web
Intelligence and Intelligent Agent Technology. IEEE, 120–123.

[27] Radim Řehůřek and Petr Sojka. 2010. Software Framework for Topic Modelling
with Large Corpora. In Proceedings of the LREC 2010 Workshop on New Challenges
for NLP Frameworks. ELRA, Valletta, Malta, 45–50.

[28] Jagan Sankaranarayanan, Hanan Samet, Benjamin E Teitler, Michael D Lieberman,
and Jon Sperling. 2009. Twitterstand: news in tweets. In Proceedings of the 17th
acm sigspatial international conference on advances in geographic information
systems. ACM, 42–51.

[29] Yee W Teh, Michael I Jordan, Matthew J Beal, and David M Blei. 2005. Sharing
clusters among related groups: Hierarchical Dirichlet processes. In Advances in
neural information processing systems. 1385–1392.

[30] Twitter. 2016. TWITTER USAGE / COMPANY FACTS. https://about.twitter.

com/company

[31] Jianshu Weng and Bu-Sung Lee. 2011. Event detection in twitter. ICWSM 11

(2011), 401–408.

[32] Saman Taghavi Zargar, James Joshi, and David Tipper. 2013. A survey of defense
mechanisms against distributed denial of service (DDoS) flooding attacks. IEEE
Communications Surveys & Tutorials 15, 4 (2013), 2046–2069.

