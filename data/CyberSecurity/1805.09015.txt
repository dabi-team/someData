Networked Control Systems Secured by
Quantum Key Distribution

Hai-Jin Ding, Re-Bing Wu, Member, IEEE, and Qian-Chuan Zhao

1

8
1
0
2

y
a
M
3
2

]

Y
S
.
s
c
[

1
v
5
1
0
9
0
.
5
0
8
1
:
v
i
X
r
a

Abstract—Cyber-security has become vital for modern net-
worked control systems (NCS). In this paper, we propose that
the emerging technology of quantum key distribution (QKD) can
be applied to enhance the privacy and security of NCS up to
an unbreakable level. QKD can continuously distribute random
secret keys with much higher privacy between communication
parties, and thus enable the one-time pad encryption that cannot
be truly applied in classical networks. We show that the resulting
overall security of NCS can be essentially improved, and present
a composable deﬁnition of security based on the analysis of the
key generation and management processes. Moreover, because
the security is mainly determined by quantum keys rather than
the complexity of encryption algorithms, the control performance
can be improved as well by reducing the time delay using
simpler algorithms. These advantages are demonstrated by the
example of a remotely controlled servo system, showing that
the introduction of QKD to NCS can simultaneously improve
the security and performance by using the simplest encryption
algorithm XOR. Furthermore, we propose a novel Kalman-ﬁlter
embedded communication protocol that can more efﬁciently use
the raw keys generated by QKD.

Index Terms—cyber-security; networked control system; QKD;

Kalman Filter; one-time pad

I. INTRODUCTION

C YBER PHYSICAL SYSTEMS (CPS) are ubiquitous in

modern industries [1]. As a typical application, many
control actions are performed over CPS where the controller,
the sensor and the plant are connected through high speed
Ethernet or ﬁeld bus. The resulting networked control systems
can be ﬂexibly designed based on time-driven or event-driven
feedback, and the communication data, if necessary, can be
stored and processed in the cloud [2], [3]. However, accompa-
nied with the beneﬁt is the high risk of cyber-security, because
data protection is fragile or even absent in many traditional
industrial control networks [4]. Data transmission in such
networks can be easily wiretapped or adversely changed by
cyber attacks whose threat can be much severer than physical
attacks [5].

The cyber-security of NCS has drawn intense attention in
the literature [6]. According to the manner of attacks, cyber-
attacks can be classiﬁed into denial-of-service (DoS) attack,
replay attack, and deception attack. Various attack detection
methods have been proposed [4], such as Bayesian detection

This work was supported by National Natural Science Foundation of
China under Grant 61773232, 61374091 and 61425027, and the National Key
Research and Development Program of China under Grant 2017YFA0304300.
(Corresponding author: Re-Bing Wu)

The authors are all with the Department of Automation, Tsinghua Univer-
sity, and also with the Beijing National Research Center for Information Sci-
ence and Technology, Beijing 100084, China (e-mail: rbwu@tsinghua.edu.cn;
dhj17@tsinghua.edu.cn; zhaoqc@tsinghua.edu.cn ).

with binary hypothesis by testing with prior probabilities [7]
and weighted least square approaches by comparing the data of
observer with a predetermined threshold [8]. From a control
theoretical point of view, the detection of cyber-attacks can
be modeled and analyzed in terms of stability or detectability
problems [9] and ﬁltering methods can be applied to improve
the performance of NCS [10].

Comparing with control theoretic cyber-protection methods,
strong data encryption is more straightforward and effec-
tive. Although data encryption is often restricted by limited
(or sometimes unavailable) computation and communication
resources, it is inevitable in critical infrastructures such as
nuclear power plants where security is of the highest priority.
Generally speaking, any encryption method involves an en-
cryption algorithm for processing data and keys that are held
by the users. The strength of data encryption, symmetric or
asymmetric, is determined by the security of keys. However,
because the keys cannot be frequently updated under most
circumstances, almost all encryption methods used so far have
to be strengthened by high algorithmic complexity (e.g., AES,
DES, IDEA, RC2, RSA) [11]. Such algorithms either use
long keys to form large-size cipher blocks, which increase the
burden of communication, or use short keys to form small-size
cipher blocks, which releases the communication burden but
increases the complexity of computation [12], [13].

One can certainly develop new encryption algorithms with
higher complexity, but they are still under risk with more
powerful computing technologies, not to mention the increased
communication and computation burden. Especially, many
currently used encryption algorithms (e.g., RSA) can be easily
cracked by a quantum computer that is expected to be re-
alizable in foreseeable future [14]. Under this circumstance,
one may have to resort
i.e., each
key is used only once) because of its provable absolute
security that does not rely on the mathematical complexity
of decryption algorithms [15], [16]. However, OTP is usually
impossible over classical networks because the distribution of
the unlimited amount of random keys between communication
parties poses an equally difﬁcult problem as the secure data
transmission.

to one-time pad (OTP,

Nevertheless, the obstacle that hinders the application of
OTP can be overcome by the emerging technology of quantum
key distribution (QKD) [17]. In the most well-known BB84
protocol, random keys can be continuously generated and
shared between communication parties using single photons
(i.e., a socalled quantum channel). In terms of Shannon’s [15]
deﬁnition on perfect secrecy, it can be proved that BB84 is ab-
solutely secure [18]–[21]. Moreover, a remarkable advantage

 
 
 
 
 
 
of QKD is that malicious attacks on the quantum channel can
be detected because of quantum no-cloning property [22].

After

two decades’

intense research and development,
QKD system has become commercially available. Demon-
strated applications have appeared in ﬁnancial and government
ﬁelds [23] in which security is highly demanded. To the
authors’ knowledge, no applications have been reported in
networked control of cyber-physical systems where security
is also critical. Despite of the potential high cost that can be
gradually reduced in the future, QKD can bring at least three
beneﬁts when being applied to CPS:

1) The privacy security of data transmission can be essen-
tially enhanced to an unbreakable level that is impossible
with any classical communication system.

2) Cyber attacks can be more easily detected based on
OTP that
is enabled by QKD, because any adverse
operation on the cipher texts will cause uncontrollable
changes that can be discovered when being decrypted
with synchronized encryption keys.

3) Guaranteed by strongly secure keys, it is in principle
unnecessary to use complex encryption algorithms to
secure the data transmission. Without sacriﬁcing the
security, simpler algorithms can be used to reduce the
burden of computation and communication, and hence
improve the control performance.

This paper will demonstrate the above beneﬁts based on
our proposed integrated system structure for the QKD-based
NCS. To evaluate the inﬂuence of QKD to security, network
throughput and NCS control performance, we present mea-
sures for quantifying the improved trade-off, then the control
performance can be greatly improved without sacriﬁcing secu-
rity. In addition to the system design and performance analysis,
we also develop a novel encryption algorithm that pertains to
the data transmission in NCS, which saves the amount of secret
keys and further improves the security level.

The remainder of this paper is as follows. In Section II,
we design a practical NCS based on network communication
and QKD. In Section III, we introduce the basic conﬁdential
security issues, study the factors that inﬂuence security and
give a deﬁnition of security for networked control systems.
In Section IV, we analyze the induced time delay caused by
network, which will further inﬂuence the performance of NCS.
In Section V, we study the performance of NCS using different
encryption algorithms and the tradeoff between security and
performance. In Section VI, we propose a new ﬁltering based
security strategy directly encrypting with the raw quantum
keys that contain error bits, then the quantum keys can be
used more efﬁciently. Finally, in Section VII, conclusions are
made.

II. QKD SECURED NETWORKED CONTROL SYSTEMS

2

A. Structure of Networked Control Systems

Consider a point-to-point NCS in which the plant is re-
motely controlled by a controller. For illustration, we use a
mechanical servo as the example of plant. Any other dynam-
ical control plants can be applied to the system introduced in
the following. As illustrated in Fig.1, the mechanical servo,
Bob, is remotely controlled by Alice, a proportional-integral
(PI) controller associated with another IP. Alice receives and
decrypts the position data of the servo that is encrypted by
Bob and sends back encrypted real-time control commands to
Bob. The data transmission between Alice and Bob is based
on communication protocol such as TCP/IP, UDP, etc.

Fig. 1. Schematic diagram of a QKD based networked control system.

To secure the data transmission, a QKD system is integrated
into the network. It operates independently with the NCS, and
supplies secret keys for the above data encryption and decryp-
tion of position data and control commands. The terminologies
involved in this process are summarized in Table I.

TABLE I
TABLE OF TERMINOLOGIES

Ki
TKi
T −1
Ki
u(t)
u(cid:48)(t)
y(t)
y(cid:48)(t)
τ1
τ2
r(t)
e(t)

the i-th key used for encryption and decryption
the encryption matrix of the key Ki
the decryption matrix of the key Ki
the plain text of the control command sent from Alice
the cipher text of the control command received by Bob
the plain text of the position sent from Bob
the cipher text of the position received by Alice
the one-way delay from Bob to Alice
the one-way delay from Alice to Bob
the reference signal
the error signal

In this section, we will introduce the control and com-
munication structure of a networked control system equipped
with a QKD device. The key generation methods and relevant
encryption algorithms will be introduced as well.

In detail, Alice generates the control signal according to the

error signal e(t) as

e(t) = r(t) − y(t − τ1),

(1)

QKDControllerQKDQuantum channelAttackAttackEncryptionDecryptionActuatorAngle)('ty)(1ty)(tu)('tuServoEncryptionDecryptionReference)(trBobAlice)(tyiKiKiKiK)(te)('2tu)(2tu)('1tywhere r(t) is the reference signal and y(t − τ1) is the position
signal of the servo sent from Bob after a time delay τ1.
Assume that Alice adopts a PI controller, the generated control
command is

u(t) = KP e(t) + KI

(cid:90) t

0

e(t)dt,

(2)

where KP and KI are the parameters of the controller.

Then, Alice encrypts the control command u(t) with the

key Ki, which produces the cipher text
u(cid:48)(t) = TKiu(t),
where TKi represents the transformation posed by the encryp-
tion algorithm using the key Ki. The cipher text u(cid:48)(t) is then
sent to Bob, which, after another time delay τ2, arrives and is
decrypted using the key K (cid:48)

i as follows

(3)

u(t + τ2) = T −1
K(cid:48)
i

u(cid:48)(t).

(4)

Note that in symmetric encryption schemes, the keys Ki and
K (cid:48)
i are supposed to be identical. However, errors can occur
during the distribution of keys between Alice and Bob (see
Sec. II-B), i.e.,

K (cid:48)

i = Ki + ∆i,

(5)

where ∆i represents the difference between keys.

In practical networked control systems, the real-time perfor-
mance is largely determined by the communication latencies
of closed control loop. As is shown in Fig. 2, the time delay
includes software, hardware and network delays. So that the
servo can only receive a command made according to its
previous status which will deteriorate the performance.

Fig. 2. The time delays in a typical sampling control period of NCS.

The closed-loop control period of the NCS is deﬁned as
the round-trip time delay, which is usually random. Consider
the control process in the ith control period, we summarize
the following generalized state-space model for the encrypted
dynamics of the networked control system:






xi = Axi−1 + Bui−1,
¯yi = Cxi,
ui = T −1
yi = T −1
i+∆(cid:48)
k(cid:48)
i
¯ui = F · (ri − yi),

Tki ¯ui,
¯yi,
Tk(cid:48)

ki+∆i

i

(6)

3

where xi is the state vector, ¯ui and ¯yi are the original control
and output of the plant, ui and yi are transmitted control and
output after encryption and decryption, and ri is the reference
signal. The ﬁrst three equations represents the standard linear
dynamics and measurement of the plant, in which the control
command ui−1 is received by the plant after encryption with
key ki and decryption with key ki + ∆i, where ∆i represents
potential errors in the key. The fourth equation describes the
process that the measurement data yi is encrypted (using key
k(cid:48)
i) by Bob and decrypted by Alice (using key k(cid:48)
i with
possible error ∆(cid:48)
i). The received data is then processed by the
feedback matrix F to produce the next control command.

i + ∆(cid:48)

B. Generation of symmetric secret keys with QKD

The function of QKD is to safely and continuously generate
symmetric keys between Alice and Bob. In this paper, we will
use the BB84 protocol, which is the earliest and also the most
broadly used protocol in practical systems.

The major difference of QKD from its classical counterpart
is that the secrecy of generated keys is physically guaranteed
by quantum mechanics. In detail, the protocol can be divided
into the following parts.

1) Key Sifting: Alice prepares and sends a bit encoded by
single photons that are randomly polarized along two sets of
bases, each of which having two orthogonal directions. Bob
receives a bit after measuring the received photon along one
of the two bases he randomly chooses. According to quan-
tum mechanics, the measurement outcome is deterministic if
and only if it is performed along the right basis, otherwise
the outcome is random. Therefore, Alice and Bob can tell
each other through classical communication which basis they
choose instead of the bits themselves, and keep those bits that
are sent and measured under the same basis. These bits are thus
symmetrically distributed between Alice and Bob, forming the
set of raw keys for encryption and decryption.

2) Error correction: Because the raw keys may contain
errors due to the imperfection of single photon detector or
losses during the transmission, a Cascade protocol is used to
locate the wrong keys by comparing the check bit and halving
the exact
the key strings. This process is continued until
positions of wrong bits are found, which will be corrected
or discarded.

3) Privacy ampliﬁcation: To avoid the information leakage
in the classical communication for basis exchange and error
correction, a privacy ampliﬁcation protocol is applied using a
Hash function, which guarantees the absolute security of the
ﬁnal key in an asymptotic manner. As a price, the capacity of
keys will be further reduced during this process.

C. Encryption Algorithms

The security of a cryptographic system is essentially deter-
mined by that of secret keys. Ideally, the data transmission is
absolutely secure if every key is used only once (i.e., one-time
pad). However, because it is usually impossible to distribute
unlimited number of keys over classical communication net-
works, one has to enhance the security by strong encryption
algorithms.

Period of a command Software delayCommand encrypting delayInduced time delay from controller to servo Hardware delayCommand decrypting delayPosition encrypting delayInduced time delay from servo to controllerCommand decrypting delayWe will brieﬂy introduce some widely used symmetric
encryption algorithms. These algorithms all belong to the
category of block cipher, which divides the plain text into
identical-size blocks [24]. These blocks are processed to
generate the cipher text via a series of basic operations (e.g.,
ByteSub, ShiftRow, MixColumn and RoundKeyAddition, see
details in [25]) using a secret key.

1) XOR:

the simplest method for encryption, which is
performed by bit-by-bit XOR operation on the plain text and
keys, namely the RoundKeyAddition.

2) DES (Data Encryption Standard): the algorithm based
on rounds of Feistel operations. The standard DES consists of
16 Feistel units, each of which halves the i-th round text into
Li and Ri, and updates them as:

Li+1 = Ri, Ri+1 = Li ⊕ F (Ri, Ki+1),

(7)

where Ki is the sub-key used in this round and F (Ri−1, Ki)
is the result of last Feistel round. The sub-keys used in each
round is generated by the ByteSub operation from the original
key, and a simple MixColumn is used during the exchange
of left and right halves according to (7). DES is actually an
extension of XOR, but the security is much higher owing to
the complicated bit position operation.

3) AES (Advanced Encryption Standard):

the algorithm
based on rounds of operations that uses the Substitution-
Permutation Network (SPN) to generate round keys. The text
is processed by cycling bit operations in each round. AES is
much more complex than DES because of the increased key
length as well as more complex round function (See Tab. IV).
Presently, AES(128) with 128-bit key and 10 SPN rounds,
AES(192) with 192-bit key and 12 SPN rounds, and AES(256)
with 256-bit key and 14 SPN rounds, are most popular.

D. Advantages of QKD-Based NCS

Before expanding our studies, we make some remarks on
how QKD may improve the security against cyber attacks by
enabling the OTP.

1) DoS attack: in such attack, Eve blocks the transmission
of cipher texts by maliciously overloading the communication
of network. Although none of plain texts are cracked, the
communication can be interrupted between the actuator and
the controller and thus deteriorate the performance. Note that
the DoS or the dropout can be detected with TCP/IP protocol
by handshaking, but they may not be efﬁciently detectable
with other protocols such as UDP.

it

When one-time pad and QKD are applied,

is easy
to detect the occurence of DoS no matter which network
communication protocol is used. This is because every data
block Bob receives must be decrypted with the same key for
encryption. Let E be the set of admissible plain texts (e.g., the
range of control commands or sampled measurement data).
If some blocks are missing during the transmission, and Bob
uses the key that is supposed to be used on the missing block
to decrypt some other blocks he receives later, he cannot
get a meaningful message because the key does not match,
namely T −1
(TKi+j ui+j) /∈ E, where Ki and Ki+j are the
Ki
desynchronized keys used for decryption and encryption due
to DoS attack. In this way, DoS can be detected.

4

the deception can be successful

2) Replay attack: in such attack, Eve replaces the trans-
mitted messages from Alice to Bob with some previously
recorded ones, in order to deceive Bob by the old messages
to him. When the messages are
that are still meaningful
encrypted,
if the key is
not changed, which is often the case in classical networks.
However, it will not work when every key is used only once
(i.e., one-time pad) because the replayed cipher text will not be
decrypted by the right key that is only shared between Alice
and Bob. Thus, when Eve performs the replay attack, Bob
will not obtain a meaningful plain text as T −1
(TKi ui) /∈ E,
Ki+j
where Ki and Ki+j are the desynchronized keys used for
encryption and decryption due to the replay attack, and this
can be used to detect the occurrence of the attack.

3) Deception attack: in such attack, Eve injects malicious
data in the communication to deteriorate the performance of
NCS, e.g., by changing several bits of the cipher text. Similar
to the case of replay attack, the injected data will not be able
to convey a meaningful and spurious message if the cipher text
is changed before decrypted by Bob as T −1
(TKiui + ∆) /∈
Ki
E, where ∆ represents Eve’s modiﬁcation on the cipher text.
Therefore, the deception attack can also be easily detected
from the resulting messy code when OTP is enabled by QKD.
One can also determine whether the attack is a replay attack
or a deception attack by checking the repetition of the cipher
texts.

III. SECURITY MEASURE OF QKD-BASED NETWORKED
CONTROL SYSTEMS

For the purpose of control systems analysis and design, a
quantitative evaluation of the overall cyber-security is neces-
sary. Generally speaking, the security of networked control
systems is determined by the security of keys (i.e., how
the keys are generated and distributed), the security of key
management (i.e., how frequently every key is reused) and
the security of the encryption algorithm (i.e., how hard the
algorithm can be cracked).

Regarding these factors, we ﬁrstly deﬁne the security SA of
an encryption algorithm. Suppose that the length of the key
is N and R is number of rounds performed in the algorithm.
We deﬁne the security strength of the encryption algorithm as
follows (see the derivation in Appendix A):

SA = ηR log2 N,

(8)

where η represents the complexity of each round operation
(e.g.,
the Feistel of DES or the SPN of AES). In Table
II, the security strength of several encryption algorithms are
calculated according to the measure (8). Because AES(256)
is recognized as the currently strongest symmetric encryption
algorithm, we normalize the measure by that of AES(256).

Based on SA, the overall security of the QKD-based NCS

is quantiﬁed as follows:

S = 1 − εr(1 − SA),

(9)

where r is the average times (r = 1 for OTP and otherwise
r > 1) for the keys to be reused before being discarded,
and ε represents the insecurity of the keys generated by QKD

5

TABLE II
SECURITY MEASURE OF VARIOUS ENCRYPTION ALGORITHMS

Algorithm

η

XOR
n-Feistel
DES
AES(128)
AES(192)
AES(256)

0.0625
0.2083
0.2083
1
1
1

R

1
n
16
10
12
14

log2 N
3
6
6
7
7.58
8

SA

0.0017
0.0112n
0.1785
0.6250
0.8121
1

after privacy ampliﬁcation. The insecuriy parameter ε can be
arbitrarily small under properly designed QKD protocol.

Equation (9) shows that the security can be arbitrarily strong
when the keys are sufﬁciently safe, under which circumstance
the strength of encryption algorithms is not as important as
before.

Cascade protocol of BB84, lEC varies with N and quantum
bit error rate (QBER) e. Practically, QBER is evaluated by
checking some bits of raw keys at the beginning, and it asks
the QBER must be less than 11% [19]. Then the keys are
rearranged and divided into identical-size blocks so that there
is only one error bit in each block. Let l0 be the length of
block, which is required to be no less than [ 1
e ]. Alice and Bob
then independently calculate the check bit of keys and compare
the results with each other. During the halving process of
error correction in Cascade, a total number of log2 l0 bits are
transferred for each single block [16]. While the process of
privacy ampliﬁcation will decrease the capacity of keys from
n to m, so the total number bits transferred for error correction
is:

lEC =

log2 l0.

(10)

(cid:21)

(cid:20) nN
ml0

So the total number of bits exchanged between Alice and

IV. ROUND-TRIP DELAY OF QKD-BASED NETWORKED
CONTROL

Bob is:

The real-time performance of practical networked control
systems can be seriously deteriorated or even destabilized by
the time delay of the closed loop control over the communi-
cation network. In this section, we analyze and quantify this
effect, especially how it is affected by data encryption and
decryption processes.

The end-to-end (one-way) delay can be decomposed into
four types of delays: software delay for the generation of
the control command, encryption-decryption delay, network
delay for data transmission and hardware delay caused by
the plant and other devices in the system. Among these
elements, the encryption-decryption delay is dependent with
the complexity of the adopted algorithm, the transmission
delay varies according to the communication load as well as
available bandwidth, and the other delays are relatively short
and ﬁxed during the control process.

We are mainly concerned with the time delay caused by data
encryption and decryption, which is controllable by the choice
of algorithms. Highly complicated encryption algorithms may
increase the time for computation, but such difference can be
minor under powerful computational hardware. The more im-
portant factor is the size of the cipher text blocks that directly
inﬂuences the communication load of network. Therefore,
the time delay caused by encryption-decryption is essentially
determined by the length of the key that is proportional to the
size of the cipher text blocks. For example, AES(256), one of
the most secure algorithms, uses 256-bit keys.

In the QKD-based NCS, keys are important resources. To
guarantee that there are always sufﬁcient secure keys for one-
time pad encryption, the consumption rate of keys by NCS
must be lower than the generation rate of keys by QKD.
Complex encryption algorithms usually generate long cipher
texts using long keys. Consequently, more communication is
needed for generating such keys in BB84, which induces larger
time delays. This factor is important in the tradeoff between
security and performance.

Let N be the length of cipher text and lEC be the number
of bits that must be exchanged for error correction. In the

l = N + lEC = N +

(cid:21)

(cid:20) nN
ml0

log2 l0.

(11)

Take QBER e = 10% as an example, l0 is [ 1

0.1 ] = 10.
Assume m
n = 0.2, it can be calculated from (11) that l =
21.29 for XOR, l = 170.30 for DES, and l = 681.21 for
AES(256). It can be seen that l increases when using more
complex encryption algorithms.

Fig. 3. The round-trip delay of NCS encrypted by XOR and AES.

To demonstrate how the NCS time delays depend on the
complexity of encryption algorithms, we build an experimental
networked control servo system and test the XOR and AES
algorithms. The round-trip delay is measured by checking
the arrival time of two adjacent measurement signals y(t) at
Alice’s part. As is shown shown in Fig.3, the experimental
round-trip delay increase when the communication load of
network starts to be heavier form the 35th control period
and the time delay with more complex encryption algorithms
(i.e., AES) tend to be longer. The difference is not visible
when the communication is not busy at the beginning, but as
the experiment goes, complex algorithms collect more data

Sampled round-trip0102030405060Round-trip delay(s)00.10.20.30.4Round-trip delay of NCS encrypted with XORRound-trip delay of NCS encrypted with AES(i.e., cipher text) and consumed more keys. As a result the
performance of NCS is degraded.

The round-trip delay of NCS during each control period is
highly inﬂuenced by the complexity of encryption algorithms,
which, according to [26], [27], can be calculated as follows:

6

τ = T0 +

2l
C

+ ∆τ
(cid:18)

= T0 + 2C −1

N +

(cid:21)

(cid:20) nN
ml0

(cid:19)

log2 l0

+ ∆τ,

(12)

where T0 is the total time delay without data encryption-
decryption and l/C describes the queueing delay. In our
networked control system, both the command and realtime
position are transmitted through ethernet, then the queueing
delay should be doubled. ∆τ is the small variable delay caused
by hardware, which is much smaller than the delay caused by
communication.

The parameters T0 and C in (12) can be identiﬁed from the
results of the above encrypted NCS experiments using XOR,
DES and AES algorithms, which turns out to be: T0 = 0.055s,
C = 18000s−1.

The following theoretical analysis on the tradeoff between
the security and the performance will be based on this identi-
ﬁed model.

V. TRADEOFF BETWEEN SECURITY AND PERFORMANCE

The security of QKD-based NCS is determined by the QKD,
the algorithm complexity and the one-time pad. According
to (9), the compound security can be high even with simple
encryption algorithms, so that the length of cipher text can be
reduced, which will greatly release the communication burden.
As a consequence, the induced time delay caused by classical
communication will be reduced as well. In this section, we
show how the performance is preserved by simple encryption
algorithms without sacriﬁcing too much security.

A. Performance of NCS Encrypted with Different Algorithms

We evaluate the performance by following the mean square

error as:

P =

(cid:90) ∞

0

e2(t)dt.

(13)

Secured by QKD, we test the performance under simple
and complex encryption algorithms,
including XOR, DES
and AES. Due to the time delay (12) induced by the data
transmission, the performance with these algorithms are more
or less deteriorated, as shown in Fig.4. Both the overshoots
and the resetting time increase, in which XOR has the best
performance and AES(256) has the worst performance.

As illustrated above, the communication required for QKD
increases the time delay and thereby inﬂuences the per-
formance. While the time delay caused by encryption and
decryption is usually ﬁxed and negligible because the hardware
computing power is usually sufﬁciently high, so the perfor-
mance is mainly inﬂuenced by the induced time delay caused
by communication.

Fig. 4. Performance of NCS encrypted with different algorithms.

B. The Tradeoff between Security and Performance

When QKD is used in the NCS, the overall security can
be arbitrarily high according to (9) when ε is sufﬁciently
small. The security parameter is almost independent with the
algorithm complexity SA. Since the network time delay is
shorter when using simple encryption algorithms, there is no
need to use complex encryption algorithms that tend to worsen
the control performance.

Take ε = 0.1 as an example, the security of different
encryption algorithms can be enhanced and listed in Table
III.

TABLE III
COMPARISON OF PERFORMANCE AND SECURITY ENHANCED BY QKD

Algorithm
XOR
1-Feistel
8-Feistel
DES
AES(128)
AES(192)
AES(256)

SA
0.0017
0.0112
0.0896
0.1792
0.6250
0.8121
1

S
0.9002
0.9011
0.9089
0.9179
0.9625
0.9812
1

average delay(s)
0.0645
0.0731
0.0731
0.0731
0.0978
0.1118
0.1307

P
0.4044
0.4254
0.4254
0.4254
0.4969
0.5340
0.6300

It can be seen that when encrypted with quantum keys, the
security is enhanced no matter which algorithm is used, and
the improvement is greater especially for simple algorithms
such as XOR and 1-Feistel. The resulting security of different
algorithms is much closer to each other. For example, the
security of XOR is only about 10% less than that of AES(256),
the algorithm complexity is less important.
implying that
So simple algorithms such as XOR can be used in QKD
based network to improve performance without sacriﬁcing the
privacy security.

VI. ENHANCED SECURITY OF NCS WITH RAW QUANTUM
KEY DISTRIBUTION

As illustrated above, the control performance can be ef-
fectively improved by using simple encryption algorithms,
while the NCS security level is maintained at a high level. In

Time(s)012345Position(rad)00.20.40.60.811.21.41.6Without encryptionXORDES128-bit AES192-bit AES256-bit AESpractice, this requires sufﬁcient supply of secret keys by the
QKD system, which may not be realistic because most sifted
raw keys are discarded during the post processing (including
the error correction and privacy ampliﬁcation) and the amount
of ﬁnal keys is very limited. The post processing can also
decrease the security of the keys if not being well designed.
In this section, we will show that these discarded raw keys
can be more efﬁciently used. This is because the errors of
the transmitted data (usually numerical values) caused by the
the key errors can be taken as an equivalent noise. Since
most closed-loop control processes can tolerate noises at a
certain level, the raw keys may not have to be corrected
if the equivalent noise is tolerable. In this way, the QKD
protocol can be greatly simpliﬁed because the succeeding
privacy ampliﬁcation will be also unnecessary, as its function
is to remedy the information leakage during error correction.
This will bring at least three advantages: (1) the sifted raw
keys, which can be fast generated, may be more efﬁciently
used instead of being wasted; (2) the security of keys is the
highest without information leakage in error correction; (3)
more communication bandwidth can be saved without having
to preform the post processing.

To implement the above idea, we need to make sure that the
key error induced noise in the transmitted data is suppressible.
From the point of view of cryptography, the avalanche effect
of the encryption algorithm, namely the sensitivity of the
decrypted plain text with the change of the cipher text, should
be as weak as possible, otherwise a single one-bit error may
cause uncontrollable large deviation. In this regard, XOR is
the best choice, under which every one-bit error in the key
only affects one bit in the message transmitted from Alice to
Bob.

The avalanche effect can be also understood from the con-
trol model (6). When the key error ∆i occurs, the avalanche
effect is evaluated by the difference

wi = ui − ¯ui,

(14)

between the original plain text ¯ui and decrypted command ui
after encryption-decryption. It is desired that the encryption
matrix Tki is chosen such that di is as insensitive as possible
to the key error ∆i, and here we choose the bit-by-bit XOR
encryption. If the random key errors all occur to the lower
digits of the plain text, it is reasonable to take the resulting
deviation of ui as a white noise.

Similarly, the error in the key k(cid:48)

i used for the encryption of
feedback position of Bob will also lead to an equivalent noise
as:

νi = yi − ¯yi.

(15)

This leads to the following equivalent stochastic control

model:

(cid:40)

xi = Axi−1 + B(ui−1 + ωi−1)
yi = Cxi + νi,

(16)

7

operations. Concretely, we can check the value of di =
(cid:107)yi − yi−1(cid:107) between adjacent received signals yi and yi−1.
Once di exceeds some prescribed threshold value, say δ, a
key error is deemed to occur to the high digits. We can then
simply smooth it by making all high digits of yi identical with
those of yi−1, which is shown in Fig. 5. Note that this strategy
is very effective when the signal to be transmitted is slowly
varying. For violently changing signals, one should still use
the corrected ﬁnal keys to encrypt the high digits.

Fig. 5. Equivalent noise in the position data of the servo systems that is
induced by the errors (with error rate ≈ 10%) in the raw keys. (a) the original
noise; (b) the noise after removing errors in high digits.

Now we only need to consider the error in the lower digits
that is not detectable with the above method. Take them as
white Gaussian noises, whose variance is proportional to the
threshold value δ. In the beginning, we use the corrected
ﬁnal keys for encryption-decryption to guarantee that no errors
occur to the high digits of the data. Afterwards, we encrypt
and decrypt the data all with raw quantum keys, and the
noises induced by key errors can be attenuated by the Kalman
Filter [28]. Let ˆxi,i−1 be the priori estimation of state vector
at the end of the i-th control period. It can be calculated by

ˆxi,i−1 = Aˆxi−1 + Bui−1,

(17)

based on the posteriori state estimation ˆxi−1 and its resulting
control command ui−1 = F · (ri−1 − C ˆxi−1) at the previous
period, following which the posteriori state estimation in the
i-th control period is made as follows:

ˆxi = ˆxi,i−1 + Ki(yi − C ˆxi,i−1),

(18)

where matrices Pi,i−1, Pi and Ki are calculated as follows:

Pi,i−1 = APi−1AT + Q,

Pi = (I − KiC)Pi,i−1,
Ki = Pi,i−1C T (CPi,i−1C T + R)−1,

(19)

(20)

(21)

where yi is the measurement result that Alice receives through
ethernet.

If the error occurs in the higher digits, the resulting deviation
can be ﬁltered out by additional detection and smoothing

with Q being the covariance matrices of the process noise ωi
and R being the covariance matrices of measurement noise νi.
In Fig. 6, we simulate the dynamical response of the
NCS with and without the Kalman Filter. Compared with the

Time(s)012345Position(rad)-10-8-6-4-20246810(a)Time(s)012345Position(rad)-1-0.8-0.6-0.4-0.200.20.40.60.81(b)8

network security, as well as the following control problems
such as consensus. These topics are to be studies in future.

APPENDIX A
SECURITY MEASURE OF QKD BASED NCS

To evaluate the security strength of an encrypted NCS, we

ﬁrstly introduce the following cryptographic terminologies:

(1) Plain text space M, the set of all plain texts that
may be decrypted to be. In our system, it is a combination
of practical secure communication data and another subset of
possible decrypted data that only occurs under cyber attacks.
(2) Cipher text space C, the set of cipher texts after en-
cryption, which will be transmitted through the communication
network.

(3) Key space K, the set of secret keys, which are usually

binary strings.

A well deﬁned plain text space will add the difﬁculty for
eavesdropper to crack the message. In our example system,
it contains the digitized values of PI command, the real-time
position of servo and other symbols, which will enlarge the
confusion effect of encryption.

The overall security is mainly determined by the security
of keys, the security of key management and the security of
encryption algorithms.

A. Security of Keys

The security of an encryption system can be deﬁned by the
mutual information I(M, C) between the plain text space M
and the cipher text space C. Ideally, it should be zero, meaning
that the plain text space M is absolutely independent from the
cipher text space C. So Eve is unable to get any meaningful
message from the cipher text. In practical system, the mutual
information between plain text and cipher text can not be
zero but the value can approach to zero after post processing
methods.

The security of QKD is due to the fact that the information
about keys that Eve can get is exponentially small. In [29],
Renner proposed the composable security of QKD determined
by the process of error correction and privacy ampliﬁcation. So
the security discussion on QKD can be divided into following
two parts.

1) Information leakage of Cascade: Once the raw keys are
distributed by measuring the phase of photons and exchanging
the information about bases, there are still some error bits,
namely some bits of raw keys are different between Alice and
Bob because of the error of measurement. So it is necessary
to distill the raw keys and delete the error bits. When Cascade
is used in error correction, there is still some information
leakage.

2) Security of privacy ampliﬁcation: Because the fact that
Eve can get some formation about sifted keys by tapping
the communication of error correction, the process of privacy
ampliﬁcation will repair the leakage by decreasing the key
capacity.

We assume that Alice and Bob have shared a key string W
and the length of W is n. Eve has some information about

Fig. 6. Performance of Raw QKD encrypted NCS with or without Kalman
Filter.

previous simulation using corrected keys, it can be seen that
the use of raw keys introduces additional noises to the output
signal, but the transient response is much faster because the
induced time delay gets shorter without post processing. The
introduction of the Kalman Filter can not only smooth out the
ﬂuctuation but also suppress the overshoot, showing that both
good control performance and high security can be achieved
with raw keys.

VII. CONCLUSION

To conclude, we proposed a novel scheme for improving
the cyber-security of networked control systems by using the
one-time pad encryption that
is enabled by the emerging
technology of quantum key distribution. We analyzed the
factors that affect the overall security of the NCS, and derived
a security measure for the evaluation and design of secure
networked control systems. Based on this measure, we studied
the tradeoff between the security and the control performance
using various encryption algorithms from the simplest XOR
and the most complicated AES, showing that QKD can greatly
improve the performance whiling maintaining the security at
a high level. We further propose a scheme for more efﬁciently
exploiting the raw keys that contain errors, and introduce the
Kalman Filter to attenuate the error-induced noises.

To our knowledge, this is the ﬁrst study that integrated QKD
with NCS for security enhancement. The provably secure keys
generated by QKD enables the use of one-time pad without
having to use complex encryption algorithms. The control
framework can be applied to many systems, especially when
security is highly demanded. Although the current cost of
QKD is high, it can be decreased to be affordable under many
critical circumstances.

This work lays a fundamental framework for QKD-based
NCS. The extension from point-to-point control
to multi-
agent control over a complex communication network is more
challenging. There are many interesting topics, such as the
modeling of the QKD network and evaluation of the overall

Time(s)012345Position(rad)00.511.5XOR with Kalman Filter  using raw keysXOR without Kalman Filter using raw keysXOR using corrected keysW which can be deﬁned as V and the length of V is t. It is
reasonable to assume that:

0 < I(K, V ) < I(K, W ),

(22)

where the information that Eve can get about keys can be
calculated by mutual information as I(K, V ). Alice and Bob
can randomly share a Hash function, namely g : (0, 1)n →
(0, 1)m. As proved in [18], the mutual information that Eve
can get about keys after privacy ampliﬁcation I(K, GV ) is
limited as follows:

I(K, GV ) (cid:54) 2−n+t+m

ln 2

.

Deﬁne s = n − t − m, then

I(K, GV ) ≤

2−s
ln 2

,

(23)

(24)

where s represents the reduction ratio of the capacity of
keys during privacy ampliﬁcation. As a result, the information
that Eve can get from keys after privacy ampliﬁcation is
exponentially small.

B. Security of Key Management

One-time pad is the only provable absolutely secure en-
cryption method even under unlimited computation power.
The security of one-time pad has two aspects. On the one
hand, give a copy of cipher text, the eavesdropper gains no
more information about the plain text even after trying every
possible key, namely,

P [M = m0|C = c] = P [M = m0],

(25)

which can be called information-theoretic security [16].

On the other hand, when one-time pad cannot be ensured
due to the limited supply of keys, some keys may be reused,
this circumstance can be described as:

mi+(r−1) ⊕ ki = ci+(r−1),

(26)

where r is the times that a single key ki
is reused. The
information that Eve can get from the cipher text on the plain
text can then be valued by the conditional probability. Namely
on knowing the cipher text is C = ci+1, the probability that
plain text is M = mi+1 can be calculated according to the
Bayes Rule as:

P [M = mi+1|C = ci+1] =

P [M = mi+1

(cid:84) C = ci+1]

P [C = ci+1]

=

P [C = ci+1|M = mi+1]P [M = mi+1]
(cid:80)
m∈M P [C = ci+1|M = m]P [M = m]

.

(27)
Considering the difﬁculty for eavesdropper to crack the
meaning of message, the whole key space should be tried until
a meaningful message is calculated. Deﬁne the length of plain
text and key are both l, then there are 2l probable messages
uniformly distributed in the space. When a single key is reused
for r times, the information available for eavesdropper will be

9

added by solving (27). When connected with Bayes formula,
the conditional probability P [C = ci+1|M = mi+1] will be
r times larger because of the reusing of key ki. Then the
information that Eve can get from cipher text on plain text
can be:

P [M = mi+1|C = ci+1] =

r2−lP [M = mi+1]
2−l

= rP [M = mi+1]
= r2−l.

(28)

Additionally we assume that the times a single key is reused
is limited as r < 2l, other then the key can be regarded as
unchangeable.

The derivation shows that when the keys are reused, the
information that Eve can get from cipher text is increased,
which degrades the security of practical systems.

The security of one-time pad is also inﬂuenced by the
updated keys. While in our system, the randomness is well
ensured by the physically randomly generated single photons.

C. Security of Encryption Algorithms

To deﬁne the security of encryption algorithms, the parame-
ters should be reasonable rather than measured from the cipher
text, and they should be connected with the complexity of
algorithms and the difﬁculty for brute force. Avalanche effect
and linear cryptanalysis, which are measured according to the
results of cipher text, can be easily affected by the choosing
of plain text and keys. So we use the following parameters to
deﬁne the security of encryption algorithms:

1) Length of keys N : The length of keys will inﬂuence
the number of keys that should be used for brute force. For
example, if the length of keys is N , then there will be 2N keys
need to be tried. While this is the maximum time of testing
for brute force attack. The security of encryption should be
deﬁned according to the most efﬁcient method of cracking
and considering usually concurrent computation is used in
hardware, we use log2 N to deﬁne the security contributed
by the length of keys and this deﬁnition is introduced more in
detail in [30].

2) Number of rounds R: Most encryption algorithms have
its own round function, for example DES is 16 rounds of
Feistel, and the adding of rounds will increase the complexity
of encryption.

3) Complexity of round operation: Round operation is the
encrypting unit of a complex encryption algorithm, and it will
encrypt the plain text by XOR with the keys, substituting
the
bytes, shifting rows, mixing columns and so on. All
operations are reversible and will change the states of plain
text.

The security of round operations is a combination of the
security of subkeys and the security of calculation operations.
According to key expanding algorithm, a subkey is decided
by that of upper round and updating method, and the latter is
public. So the security of subkey is equivalent to the security of
original keys, namely the security of quantum key distribution,
which has been deﬁned before. Based on this, the security

of round function is equivalent to the security of calculation
operations.

According to Table IV, we can deﬁne the complexity of
round function η by adding the security of ByteSub SB, the
security of ShiftRow SS, the security of MixColumn SM and
the security of RoundKeyAddition SR as follows:

η = SB + SS + SM + SR.

(29)

Now we can come up with the following conclusions:
(a) ByteSub can enhance the security by substituting the
plain text according to S-box, a designed method mapping the
bytes of plain text to the elements of S-box. The security of
ByteSub is inﬂuenced by the size of S-box.

(b) ShiftRow, MixColumn and RoundKeyAddition are three
methods of changing the value of bits and they are equivalent
when functioning on the plain text. While the complexity can
be different because of the designed rule and that will inﬂuence
the security.

To quantitatively compare the difference of varied encryp-
tion algorithms, we assume the complexity of SPN is 1
composed by four parts of the same weight and deﬁne the
complexity of other round functions by their relative complex-
ity of operations, namely the time of operations compared with
SPN according to TABLE IV, namely,

η(∗) =

(cid:88) C ∗
CSP N

SSP N ,

(30)

where CSP N means the complexity of AES (SPN), C ∗ means
the complexity of other algorithms.

TABLE IV
COMPARISON OF THE TIMES OF OPERATIONS AND SECURITY FOR ROUND
FUNCTIONS OF DIFFERENT ENCRYPTION ALGORITHMS

Algorithms
ByteSub
ShiftRow
MixColumn
RoundKeyAddition
SB
SS
SM
SR
η

XOR
0
0
0
32
0
0
0
0.0625
0.0625

Feistel (DES)
4 × 16
1
0
32
0.0625
0.0833
0
0.0625
0.2083

SPN (AES)
16 × 16
3
1
128
0.25
0.25
0.25
0.25
1

So we can deﬁne the security of encryption algorithms as:

SA = ηR log2 N.

(31)

Based on the analysis above, we give the security deﬁnition

of QKD based NCS as (8)(9).

REFERENCES

[1] E. A. Lee, “Cyber physical systems: Design challenges,” in 2008 11th
IEEE International Symposium on Object and Component-Oriented
Real-Time Distributed Computing (ISORC), May 2008, pp. 363–369.
[2] K. Kogiso and T. Fujita, “Cyber-security enhancement of networked
control systems using homomorphic encryption,” in 2015 54th IEEE
Conference on Decision and Control (CDC), Dec 2015, pp. 6836–6843.
[3] S. Goto, M. Nakamura, and N. Kyura, “Accurate contour control of
mechatronic servo systems using gaussian networks,” IEEE Transactions
on Industrial Electronics, vol. 43, no. 4, pp. 469–476, Aug 1996.

10

[4] D. Ding, Q. L. Han, Y. Xiang, X. Ge, and X. M. Zhang, “A survey
on security control and attack detection for industrial cyber-physical
systems,” Neurocomputing, 2017.

[5] D. Kundur, X. Feng, S. Mashayekh, S. Liu, and T. Zourntos, “Towards
modelling the impact of cyber attacks on a smart grid,” International
Journal of Security & Networks, vol. 6, no. 1, pp. 2–13, 2011.

[6] A. Teixeira, H. Sandberg, and K. H. Johansson, “Networked control
systems under cyber attacks with applications to power networks,” in
American Control Conference, 2010, pp. 3690–3696.

[7] B. Kailkhura, Y. S. Han, S. Brahma, and P. K. Varshney, “Distributed
bayesian detection in the presence of byzantine data,” IEEE Transactions
on Signal Processing, vol. 63, no. 19, pp. 5250–5263, 2015.

[8] R. Deng, G. Xiao, and R. Lu, “Defending against false data injection
attacks on power system state estimation,” IEEE Transactions on Indus-
trial Informatics, vol. 13, no. 1, pp. 198–207, 2017.

[9] I. Shames, H. Sandberg, and K. H. Johansson, “A secure control
framework for resource-limited adversaries,” Automatica, vol. 51, no. C,
pp. 135–148, 2015.

[10] D. Wang, Z. Wang, B. Shen, F. E. Alsaadi, and T. Hayat, “Recent
advances on ﬁltering and control for cyber-physical systems under
security and resource constraints,” Journal of the Franklin Institute, vol.
353, no. 11, pp. 2451 – 2466, 2016.

[11] R. Mathur, S. Agarwal, and V. Sharma, “Solving security issues in
mobile computing using cryptography techniques a survey,” in Interna-
tional Conference on Computing, Communication & Automation, 2015,
pp. 492–497.

[12] B. J. Mohd, T. Hayajneh, and A. V. Vasilakos, “A survey on lightweight
block ciphers for low-resource devices: Comparative study and open
issues,” Journal of Network & Computer Applications, vol. 58, no. C,
pp. 73–93, 2015.

[13] Y. Deng and X. H. Cheng, “A light-weight data encryption mechanism
in wireless sensor networks,” Computer Engineering & Science, 2017.
[14] D. J. Bernstein and T. Lange, “Post-quantum cryptography,” Nature, vol.

549, no. 7671, p. 188, 2017.

[15] C. E. Shannon, “Communication theory of secrecy systems,” Bell System

Tech. J., vol. 28, pp. 656–715, 1949.

[16] B. Schneier, “Applied cryptography, second edition : protocols, al-
gorithms,and source code in c,” Government Information Quarterly,
vol. 13, no. 3, p. 336, 1997.

[17] C. H. Bennett and G. Brassard, “Quantum cryptography: Public key
distribution and coin tossing,” In Proceedings of IEEE International
Conference on Computers, Systems and Signal Processing, volume 175,
page 8.New York, 1984.

[18] C. H. Bennett, G. Brassard, C. Crepeau, and U. M. Maurer, “General-
ized privacy ampliﬁcation,” IEEE Transactions on Information Theory,
vol. 41, no. 6, pp. 1915–1923, Nov 1995.

[19] P. W. Shor and J. Preskill, “Simple proof of security of the bb84 quantum

key distribution protocol,” Phys.rev.lett, vol. 85, no. 2, p. 441, 2000.

[20] V. Scarani and R. Renner, “Quantum cryptography with ﬁnite resources:
unconditional security bound for discrete-variable protocols with one-
way postprocessing.” Physical Review Letters, vol. 100, no. 20, p.
200501, 2008.

[21] M. Benor, M. Horodecki, D. W. Leung, D. Mayers, and J. Oppenheim,
“The universal composable security of quantum key distribution,” in
International Conference on Theory of Cryptography, 2005, pp. 386–
406.

[22] S.

J. Lomonaco,

at quantum cryptography,”
Cryptologia, vol. 23, no. 1, pp. 1–41, 1999. [Online]. Available:
https://doi.org/10.1080/0161-119991887739

“A quick glance

[23] C. Kollmitzer and M. Pivk, “Applied quantum cryptography,” Lecture

Notes in Physics, vol. 797, 2010.

[24] S. Tang and X. Ma, “Research of typical block cipher algorithms,”
in International Conference on Computer, Mechatronics, Control and
Electronic Engineering, 2010, pp. 319–321.

[25] S. Park, S. H. Sung, S. Lee, and J. Lim, “Improving the upper bound on
the maximum differential and the maximum linear hull probability for
spn structures and aes,” in Fast Software Encryption, T. Johansson, Ed.
Berlin, Heidelberg: Springer Berlin Heidelberg, 2003, pp. 247–260.
[26] Y. Lin, J. Wang, Q. L. Han, and D. Jarvis, “Distributed control of
networked large-scale systems based on a scheduling middleware,”
in IECON 2017 - 43rd Annual Conference of
the IEEE Industrial
Electronics Society, Oct 2017, pp. 5523–5528.

[27] V. Misra, W.-B. Gong, and D. Towsley, “Fluid-based analysis of a
network of aqm routers supporting tcp ﬂows with an application to red,”
SIGCOMM Comput. Commun. Rev., vol. 30, no. 4, pp. 151–160, Aug.
2000.

[28] W. Chen, D. Shi, J. Wang, and L. Shi, “Event-triggered state estimation:
Experimental performance assessment and comparative study,” IEEE
Transactions on Control Systems Technology, vol. PP, no. 99, pp. 1–
8, 2017.

[29] R. Renner and R. Knig, “Universally composable privacy ampliﬁcation
against quantum adversaries,” Lecture Notes in Computer Science, vol.
3378, pp. 407–425, 2004.

[30] M. A. Haleem, C. N. Mathur, R. Chandramouli, and K. P. Subbalakshmi,
“Opportunistic encryption: A trade-off between security and throughput
in wireless networks,” IEEE Transactions on Dependable & Secure
Computing, vol. 4, no. 4, pp. 313–324, 2007.

11

