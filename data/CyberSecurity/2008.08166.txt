Clustering and Analysis of Vulnerabilities Present
in Different Robot Types

Chinwe Ekenna and Bharvee Acharya

1

0
2
0
2

g
u
A
8
1

]

R
C
.
s
c
[

1
v
6
6
1
8
0
.
8
0
0
2
:
v
i
X
r
a

Abstract—Due to the new advancements in automation using
Artiﬁcial Intelligence, Robotics and Internet of Things it has
become crucial to pay attention to possible vulnerabilities in
order to avoid cyber attack and hijacking that can occur which
can be catastrophic. There have been many consequences of
disasters due to vulnerabilities in Robotics, these vulnerabilities
need to be analyzed to target the severe ones before they cause
cataclysm. This paper aims to highlight the areas and severity of
each type of vulnerability by analyzing issues categorized under
the type of vulnerability. This we achieve by careful analysis
of the data and application of information retrieval techniques
like Term Frequency - Inverse Document Frequency, dimension
reduction techniques like Principal Component Analysis and
Clustering using Machine Learning techniques like K-means. By
performing this analysis, the severity of robotic issues in different
domains and the severity of the issue based on type of issue is
detected.

I. INTRODUCTION

The signiﬁcant evolution of robotic industry has lead to the
development of robots playing important roles in our daily
life. Some roles they play include helping deliver goods and
services, environmental monitoring etc. Unfortunately, these
robots come with different vulnerabilities either in software
or hardware infrastructure.

Many companies are creating robots that carry out authen-
tication, authorization and basic security level checks. Robots
are also being developed to help doctors during surgeries, to
provide urgent care to people during disaster, for use in the
battleﬁeld and to reach out places where a person cannot reach.
Now for the robots to be controlled by humans during these
scenarios we need to have a link such as a network connection
between robot and human. These links can be compromised
by hackers and used for disastrous purposes making the robot
vulnerable to attack.

There are ﬁve major types of causes of vulnerabilities in

robotic systems :

• Insecure Communication: This is the transmission of
poorly encrypted text over Bluetooth or WiFi. In such
scenarios, the eavesdropper can easily obtain information
and carry out the attack.

• Authentication problem: Many robots are allowed remote
access without authentication or have authentication that
can be easily bypassed making them vulnerable to threats.

C. Ekenna is with the Department of Computer Science, University at

Albany NY, 12222 USA e-mail: (cekenna@albany.edu).

B. Acharya is with the Department of Computer Science, University at

Albany NY, 12222 USA e-mail: (bacharya@albany.edu).

• Missing authorization: Unauthorized access that allows
intruders to install an application without permission thus
gaining full access.

• Privacy problem: Robotâ ˘A ´Zs applications send private
information to local servers without user consent. These
might
include GPS location, mobile network, device
information which can further be used for surveillance
and tracking purposes without the userâ ˘A ´Zs consent.
• Weak default conﬁguration: Some robot features cannot
be disabled or protected. For example, certain default
password which is difﬁcult or impossible to change. Such
conﬁgurations make robots insecure.

Fig. 1. Example Robot vulnerabilities

Fig. 1(a) is from an event of DARPA, in which the challenge
was to build a robot that can aid in disaster recovery. Most
of the robots fell while trying to climb the stairs and on their
sides when they tried to climb over the rubble. Fig. 1(b) is
of a mishap at Die Cast System. Here the man goes into
cardiorespiratory arrest after being pinned between the back
end of industrial robot and steel safety pole.

Vulnerability analysis is necessary to identify security ex-
posure in the robotic environment. New vulnerabilities are
discovered and reported daily. These vulnerabilities can be
related to input-output issues, memory leak, authentication
breach, network errors, etc. Vulnerability analysis helps to ﬁnd
weaknesses present in the robotic environment and thus directs
which areas need more attention and the ways to reduce the
security threats. This helps to reduce the chance of an attacker
in breaching the robotic system.

There are few developed methods that can detect the severity
of the issue for example the CVSS (Common Vulnerabil-
ity Scoring System)[39], RVSS (Robot Vulnerability Scoring
System)[40]. CVSS and RVSS score gives the numeric value

 
 
 
 
 
 
to indicate the severity of the issue[28]. The contribution
of this paper is the analysis of the severity of Robotic
vulnerability in different domains such as Memory and Buffer
Overﬂow vulnerability and Network and Authentication vul-
nerability. For this, we retrieved important keywords from
the description of vulnerabilities using the Term Frequency
- Inverse Document Frequency(TF-IDF) technique. After that
principal components of the TF-IDF matrix were obtained
using the Principal Components Analysis algorithm, clusters of
principal components were formed using the machine learning
algorithm like k-means. The clusters include issues arising
from Memory and Buffer Overﬂow related vulnerability and
Network and Authentication vulnerability.

In this work we propose techniques to aid in minimizing
these vulnerabilities, we provide a measure to help classify
them into severe and non-severe categories. Principle compo-
nent analysis and k-means clustering novel variants are created
and data from the Robot vulnerability database (RVD) is used.

II. RELATED WORK

Accessing and mitigating different levels of vulnerabilities
present in robots is a concern [26]. Previous research has
discussed the possible vulnerabilities in Robotic systems both
at the hardware, ﬁrmware/OS and application-level attacks.
Application of cyberattacks on robots is examined and attack
scenarios on drones, automated vehicles and manufacturing
robots are also studied. The economic impact on manufac-
turing and effect on the supply chain of cyberattack was
investigated in [27] showing the impact on human safety in
military, transportation and eldercare type situations.

Areas of robotic vulnerabilities can be classiﬁed into several

types including[1] :

• Physical Vulnerability: Physical access can reprogram or
tap into [2] [3] [4] robot component which might make
robot unavailable or can grant unauthorized access [5].
For example, the passive key less system in cars can be
vulnerable to relay attacks [6][7][8]. A safe home or work
environment can be modiﬁed by infected robots which
can infect other robots in the same environment[9].

• Sensor Vulnerability: Sensors are vulnerable to manipu-
lated adversary signals[10][11]. For example GPS spoof-
ing, in which GPS sensor uses false signals which results
in false locations[12][13]. A car’s braking system can get
false wheel speed information from the magnetic device
near the tires[14][2].

• Communication Vulnerability: Which are further divided

into :

– Passive Adversary Vulnerability: Information about
the robots can be passively gathered from the
communication channels by packet interception or
eavesdropping[15][16]. The attacker may get sensi-
tive information like the location or current task they
are performing or any data being transmitted between
them[6][17].

– Active Adversary Vulnerability: This type of vulner-
ability include intercepting legitimate network trafﬁc
or transmitting illegitimate trafﬁc. [15][18][19] For

2

example a man in the middle attack or double
masquerade[7][17].

• Software Vulnerability: Software vulnerability may arise
due to poor programming practice. For example, the ROS
nodes are killed if another node of the same name is
created and attached to ROS[3][7]. ROS’ master node is
also a single point failure for ROS[18][20].

• System Vulnerability: System vulnerabilities arise while
integrating subsystems
from various designers and
manufacturers[6][21]. This increases the opportunities for
security problems at the interface level.

• User Vulnerability: Environment and the robot user im-
pact the security of robots[15][25][16]. The user - robot
interaction can be the potential source of vulnerability
totally depends on how the user or robot
because it
gets feedback from each other. An adversary can easily
modify this information either way[21][22]. A user’s ex-
pectation of the robot’s behavior will also cause potential
vulnerabilities[23][24].

Possible reasons for cybersecurity vulnerability in robots
may be insecure communication link which hackers can easily
hack[3], authorization Vulnerability which accesses robots
from remote locations and allows hackers to use the robot’s
features, encryption vulnerability which expose sensitive data.
If the default conﬁguration of robots is porous, hackers can
easily get access to programmable features. Already there are
many consequences of cybersecurity problems associated with
IoT which affects the internet, consumers and companies. The
Potential threat is very high in robots. So, experts are trying
to ﬁnd features that can be included in tele-operated robots to
reduce hacking of vulnerable robots.

Anatomy of targeted attacks against the tele-operated surgi-
cal robot’s control system was presented in[26]. These attacks
were demonstrated on the RAVEN II surgical robot and its
impact on the robot control system and patients was analyzed.
Such attacks can cause jumps of robotic arms or unavailability
of the system due to unwanted transition which makes the
system halt in the middle of surgery. Defense mechanisms
were developed which combined the semantics of software
and physical components to predict the adverse consequences
of the attack. These are carried out in real-time with constraints
placed on the control system. Mitigation and assessment
methods are developed for safety and security validation of
a wider range of safety-critical cyber-physical systems.

In [29] they targeted the communication link between the
robot and the clients. First the communication link between
the applications was analyzed and then three major security re-
quirements are targeted using impact-oriented approach. These
requirements included integrity, availability and conﬁdential-
ity. A systematic methodology was followed according to the
NIST risk assessment adversarial template. They designed a
novel robot attack to make up certain security attacks and a
risk assessment was evaluated using a Mobile-Sim simulator
and People-Bot robot. Based on their results some mitigation
techniques were suggested with the goal of improving the
safety and security of robotic platforms.

Robot vulnerabilities are high potential attack points in the

robotic system and claims have been made that unresolved vul-
nerabilities have been the main cause of attacks[31]. Research
has been done to classify vulnerabilities in terms of robot
components, robots and vendors [32][33][34][35]. Results are
compared between the available vendors for the count of
vulnerabilities belonging to each of them. Fig. 2 shows the
statistics of vulnerability related to each vendor present at
the time of the publication[30]. The analysis of proportion
of severe issues belonging to each vendor on the basis of the
CVSSv3 score deduced that except large vendors most of the
vendors’ robots have severe issues.

Fig. 2. Number of vulnerabilities recorded in RVD per manufacturer

Robot Vulnerability Database uses the fully available [31]
model. This database model is open and authorization is not
needed to access the database. The fully available model
helps to maintain a standard format of submission and gives
easy access to the database. So, the user does not need to
maintain a database and can access this database anytime[36]
[37]. A GPLv3 license is proposed by the database to ensure
enhancements and contributions which are top are fed back to
the project[38].

Falsiﬁcation and erasure of the records in the database
become hard by adopting this model because valid copies can
be easily made and saved by anyone accessing these tickets
and records[31]. This process provides great fault tolerance
because one can easily create non-conﬁdential mirrors and du-
plicate quantities of database[30]. In addition, and to empower
privacy in advisories to manufacturers or other interested
parties, anyone can integrate RVD with private (non-open)
sources of information. The Database is prototyped and a proof
of concept can be found at https://bit.ly/2slL3QE.

We use the Robot Vulnerability Database in this work, and
access data showing different patterns of the vulnerability
issues including the domain, severity related to the domain,
etc. [30].

The Robot Vulnerability Database analysis shows the clas-
siﬁcation of issues based on vendor, robot component and
the robots[30]. With the aim of adding more to the existing
research on robot vulnerabilities, in this experiment we do text
analysis and natural language processing on the description
of each issue to form clusters and analyze patterns. These
patterns represent the proportion of severe issues of each type
of vulnerability. Obtained results are also used to form ground
truth, which help in deciding if the issue is severe or not.

3

III. METHODOLOGY AND RESULTS

This project

is performed on the issues collected from
the Robot Vulnerability Database which is a collection of
software and hardware related issues[30]. RVD stores issues
with CVE value, which include deﬁnitions of vulnerability,
weakness and exposure. Uniqueness in the issues is maintained
using unique identiﬁers(CVE number) from the CVE list and
reusing them within RVD. Issues are also categorized using
the CWE value and responsible coherent actions are favored
using authenticated disclosure[30].

The severity of each issue mentioned in RVD is calcu-
lated using CVSS(Common Vulnerability Scoring System) and
RVSS (Robot Vulnerability Scoring System), CVSS is used to
ensure compatibility with other database and RVSS for provid-
ing additional useful information in Robotics context[28][30].
The issues are reviewed by using active labels which are fed
to Continuous Integration and Deployment (CI/CD) system
[30]. In the RVD database, CI/CD infrastructure handles
maintenance by implanting autonomous and semiautonomous
tasks. Following are the features of the Database [30]:

• Reports are regularly generated when changes are made

to the Database.

• Validation of new entries with the schema.
• It checks for duplicates in the database using fuzzy
matching library which implements regularized logistic
regression augmented with active learning.

Issues were collected in JSON format from the Robot Vul-
nerability database, we analyzed the data to ﬁnd the possible
ways to reach the desired result. In the JSON objects obtained,
we found that that the severity level of the issue can be
determined based on CVSS and RVSS value. After carefully
inspecting each JSON object, we collected the severity and the
description related to each issue. The issues are clustered based
on the type of severity and the proportion of severe issues
in each cluster is calculated. This is obtained by processing
the description of each issue in the sequence of calculation
of Term Frequency - Inverse Document Frequency(TF-IDF),
Principal Component Analysis and K-means. We collected all
the issues having the RVSS score or the RVSS vector, in all
we collected 179 issues.

Term Frequency calculates the count of word in the docu-
ment divided by the total number of words. Each document
has its own Term Frequency. In the given formula, tfi,j is the
term frequency of ith term in jth document. ni,j is the count
of ith word in jth document and (cid:80)
k ni,j is the sum of all the
words in the jth document.

tfi,j =

ni,j(cid:80)

ni,j

k

Inverse Document Frequency calculates the log of number
of documents N divided by the number of documents that
contain the word w. Inverse Document Frequency calculates
the weight of rare words among the documents. In the given
formula, dfi is the number of documents that contain the word
w.

idf (w) = log( N
dfi

)

TF-IDF returns the multiplication of Term Frequency and
Inverse Document Frequency. The preprocessed data is then
sent to the TF-IDF vectorizer with mindf = 5. Here mindf
is used to exclude the terms that have document frequency
strictly lower than the threshold. The result of TF-IDF is
obtained in the form of a sparse matrix of the dimension 179
x 218. 179 issues and 218 prominent features of those issues
were collected using the TF-IDF vectorizer.

Algorithm 1: Principal Component Analysis Algorithm
Result: Find top k eigenvalues/eigenvectors

X←N × m data matrix;
each data point Xi←column vector (i = 1...m);

Step 1: Calculate Mean : ¯X = 1
m

(cid:80)m

i=1 Xi

Step 2: Xc← Subtract ¯X from each column vector Xi

4

wi,j = tfi,j × log( N
dfi

)

The Sparse matrix is converted to a dense matrix before
applying Principal Component Analysis(PCA). PCA is used
to reduce the dimension of the matrix but at the same time
minimizing information loss. PCA decomposes the dataset into
successive orthogonal components which can explain the max-
imum possible variance between the newly projected vectors
while maintaining minimum squared distance from original
data points. Thus, PCA is an eigenvalue/eigenvector problem.
This is an adaptive data analysis technique that determines
new vectors based on the dataset at hand. The dimension
of the matrix is reduced to minimum_of(samples, features).
This process is carried out using the Principal Components
Algorithm mentioned in Algorithm 1.

Thus possible dimension reduction in the data can be
between 1 to 179. Clustering of unsupervised data can be
done using K-means, DBScan, Agglomerative Clustering and
similar algorithms. The results obtained from DBScan either
had all the issues in one cluster or most of the issues were
considered noise. DB Scan was done using all the projections
of PCA. Minimum samples required for cluster formation
were 2 and the maximum distance between the neighbors
to be considered a part on one cluster was in the range of
0.5 to 10. The results of Agglomerative Clustering were not
that previously done steps
considered because of the fact
cannot be undone. Undoing these steps might be necessary
for the data in hand. K-means was also done with all the
projections of Principal Component Analysis and a maximum
variance is obtained where dimensionality reduction of 2.
Hence, the Clusters obtained with K-means Algorithm where
the dimension of Principal Components was reduced to 2 was
considered the best result.

The K-means algorithm partitions dataset into k predeﬁned
sets where each point is a part of a single set. This algorithm
aims to keep data points in the cluster within a minimum
distance by keeping the sum of squared distance between the
point and the centroid of the cluster to its minimum. The
cluster is more homogeneous if the variance is less between
the points in the same cluster. The K-means algorithm then
computes the sum of all distances between data points and
centroids, and each data point
is assigned to the closest
centroid. Our K-means algorithm follows the approach of
Expectation-Maximization to ﬁnd the best possible cluster.
This process is carried out using the K-means Algorithm
mentioned in Algorithm 2.

Using K-means we obtained clusters based on the de-
scription of vulnerability issues. We found two clusters, one

in X

Step 3: Calculate covariance matrix of Xc :

(cid:80) ←XcX T

c

Step 4: {λi, µi}i=1...N = eigenvectors/eigenvalues of

(W here..λ1 ≥ λ2 ≥ λ3... ≥ λN )

Step 5: Return top k principal components

{λi, µi}i=1...k

Fig. 3. Visualization of clustered data

cluster had issues related to Memory and Buffer Overﬂow
vulnerability and another cluster was related to the Network
and Authentication vulnerability. The Memory and Buffer
Overﬂow cluster issues relate to the scenario of a buffer
overﬂow attack, which overwrites the memory of an appli-
cation. Such types of attacks is critical and affect all types
of software. If the attackers know the memory layout of the
program they can feed malicious input that the buffer cannot
store and they can then overwrite the executable code. This
causes the program to perform in a unpredictable manner and
generate incorrect results. Hence, memory and buffer Overﬂow
are dependent on each other resulting in one cluster. Similarly,
for the second cluster, network and authentication are also

interrelated with each other. Network is a weak link in recent
computing advances, it is thus most vulnerable and an easily
hijacked technology. There are two types of authentication
one at the user-level and another at the machine-level. User-
level authentication is simply logging into the system while
machine-level authentication has access to the network. The
router or the server has information if the machine is autho-
rized to access the network, which can be identiﬁed using the
IP address or the MAC address and a secret key if any. The
severity of issues in each cluster is analyzed based on the
RVSS score.

Algorithm 2: K means Algorithm
Result: Find k clusters using K-means
X←{x1, x2, x3..xn}
V ←{v1, v2, v3..vk} (set of randomly selected centroids)

Randomly select k centroids

Calculate the distance between each data point

while data point is reassigned do

Assign data points to the centroid with minimum
distance

Recalculate the new cluster using :
= 1
ki
points in the ith cluster)

vi
j=1 xi (where ki represents number of data

(cid:80)ki

Recalculate distance between each data point and
new centroid

end

RVSS Score is speciﬁcally designed for assessing Robot
vulnerability and is an updated version of the Common Vul-
nerability Scoring System. RVSS Score ranges from 1 to 10,
with the issues having score 10 being most severe and the
ones having score 1 are the least severe[28].

In evaluating our result, we considered the rational RVSS
score between two consecutive integers to be a part of the
lower integer group.

Fig. 4. Cluster related to Memory and Buffer Overﬂow Vulnerability

Fig. 3 shows the clusters obtained using K-means. Analysis
of our results in Fig. 4 and 5, shows the distribution of severity
in different domains like Memory and Buffer Overﬂow vulner-
ability, and Network and Authentication vulnerability. Cluster

5

Fig. 5. Cluster related to Network and Authentication Vulnerability

related to Memory and Buffer Overﬂow vulnerability have 59
issues out of 179 and maximum amount of issues have severity
7 which is 24% of total issues categorized under this cluster.
Other dominant RVSS scores in this cluster are 8 and 10
consisting of 20% and 18% of the total issues respectively. The
cluster related to Network and Authentication vulnerability
have 120 issues out of 179 and 21% of cluster is related to
the severity score of 8. The next two dominant severity in this
cluster were 9 and 10 with both contributing 17% towards
total issues in cluster.

The obtained TF-IDF matrix was further utilized to get the
keywords belonging to severe and non-severe issues. To obtain
those keywords, top 15 features of the TF-IDF matrix for each
RVSS Score were extracted. Two new groups were formed
based on severity one having low RVSS score(Severe group:
eg. 1,2,..7) and other having high RVSS score(Non-Severe
group: eg. 8,9,10). We further analyzed these 15 features of
each severity and found the common and uncommon keywords
between the severe group and the non-severe group. The
words belonging to both groups were eliminated to remove
the redundancy. The remaining words which were unique to
a particular group are shown in Fig. 6 and 7. Using these
keywords we can infer which issues are severe and which are
not, this will further help in addressing the vulnerability.

From the severe, non-severe classiﬁcation we deduced that
issues related to network, access control, memory are all
severe issues. However application-level issues are majorly
categorized under non-severe issues. Also, the cluster results
show that the number of severe issues related to Memory and
Buffer Overﬂow vulnerability is less compared to the Network
and Authentication vulnerability. All these results are based on
the data available in the database at the time of the experiment.

IV. CONCLUSION
This paper analyzed the severity of Robotic Issues in
different domains. Also, certain keywords are identiﬁed which
can help classify the issues into severe and non-severe. The
patterns obtained by applying Natural Language Processing
and Machine Learning techniques to the available data give
an idea of the proportion of severe issues in domains like
Memory and Buffer Overﬂow vulnerability and Network and
Authentication vulnerability. Understanding these formed pat-
terns give insight to the severity of a vulnerability and what
level of priority should be placed on it.

6

[12] S. Peterson and P. Faramarzi, Exclusive: Iran hijacked us drone,
says
http://www.csmonitor.com/World/ Middle-
East/2011/1215/Exclusive-Iran-hijacked-US-drone-saysIranian-engineer-
Video (accessed Jul. 08, 2015).

engineer,

iranian

[13] Humphreys research group successfully spoofs an $80 million yacht at
sea, http://www.ae.utexas.edu/news/features/ humphreys-research-group
(accessed Jul. 01, 2015).

[14] Y. Shoukry, P. Martin, P. Tabuada, and M. Srivastava, Non-invasive
spooﬁng attacks for anti-lock braking systems, Cryptographic Hardware
and Embedded Systems-CHES 2013, Springer, 2013, 55â ˘A ¸S72

[15] T. Denning, C. Matuszek, K. Koscher, J.R. Smith, and T. Kohno, A
spotlight on security and privacy risks with future household robots:
Attacks and lessons, Proc. 11th Intl. Conf. on Ubiquitous Computing,
ACM, 2009, 105â ˘A ¸S114.

[16] S. Yong, D. Lindskog, R. Ruhl, and P. Zavarsky, Risk mitigation strate-
gies for mobile wi-ﬁ robot toys from online pedophiles, Privacy, Security,
Risk and Trust (PASSAT) and 2011 IEEE 3rd Intl. Conf. on Social
Computing (SocialCom), 2011 IEEE Third International Conference on,
IEEE, 2011, 1220â ˘A ¸S1223.

[17] R. Ishtiaq, R. Miller, H. Mustafa, T. Taylor, S. Oh, W. Xu, M. Gruteser,
W. Trappe, and I. Seskar, Security and privacy vulnerabilities of in-car
wireless networks: A tire pressure monitoring system case study, 19th
USENIX Security Symposium, Washington DC, 2010, 11â ˘A ¸S13.
[18] P. Kleberger, T. Olovsson, and E. Jonsson, Security aspects of the in-
vehicle network in the connected car, Intelligent Vehicles Symposium
(IV), 2011 IEEE, IEEE, 2011, 528â ˘A ¸S533.

[19] J. Billig, Y. Danilchenko, and C.E. Frank, Evaluation of google hacking,
Proc. 5th Annual Conf. on Information Security Curriculum Develop-
ment, InfoSecCD â ˘A ´Z08, New York, NY, USA, ACM, 2008, 27â ˘A ¸S32.
[20] J. McClean, C. Stull, C. Farrar, and D. MascareËIJnas, A preliminary
cyber-physical security assessment of the robot operating system (ros),
SPIE Defense, Security, and Sensing, 2013, 874110â ˘A ¸S874110.

[21] J. Borenstein and K. Miller, Robots and the internet: Causes for concern,
Technology and Society Magazine, IEEE, 32(1), 2013, 60â ˘A ¸S65.
[22] T. Bonaci and H.J. Chizeck, On potential security threats against rescue
robotic systems, Safety, Security, and Rescue Robotics (SSRR), 2012
IEEE International Symposium on, IEEE, 2012, 1â ˘A ¸S2.

[23] K. Caine, S. Sabanovic, and M. Carter, The effect of monitoring by
cameras and robots on the privacy enhancing behaviors of older adults,
Human-Robot Interaction (HRI), 2012 7th ACM/IEEE Intl. Conf. on,
2012, 343â ˘A ¸S350.

[24] M.K. Lee, K. Tang, J. Forlizzi, and S. Kiesler, Understanding users! per-
ception of privacy in human-robot interaction, Human-Robot Interaction
(HRI), 2011 6th ACM/IEEE Intl. Conf. on, 2011, 181â ˘A ¸S182.

[25] C. Armbrust, S.A. Mehdi, M. Reichardt, J. Koch, and K. Berns, Using an
autonomous robot to maintain privacy in assistive environments, Security
and Communication Networks, 4(11), 2011, 1275â ˘A ¸S1293.

[26] H. Alemzadeh, D. Chen, X. Li, T. Kesavadas, Z. Kalbarczyk and
R. Iyer, "Targeted Attacks on Teleoperated Surgical Robots: Dynamic
Model-based Detection and Mitigation", Faculty.virginia.edu. [Online].
Available: https://faculty.virginia.edu/alemzadeh/papers/DSN_2016.pdf.
Doran

[27] G.

Clark

and

M.

Jr.,
Issues
[Online].

bersecurity
cogsima.org.
cogsima.org/ﬁles/2016/01/1570327905_Clark.pdf.
Jun- 2020].

Robotics",

Available:

in

T.

Andel,

"Cy-
Cogsima2017.ieee-
http://cogsima2017.ieee-
23-
[Accessed:

[28] V. Vilches, E. Gil-Uriarte, I. Zamalloa Ugarte, G. Olalde Mendia,
R. Izquierdo Pison and A. Hernandez Cordero, Arxiv.org. [Online].
Available: https://arxiv.org/pdf/1807.10357v3.pdf.

[29] K. Yousef, A. AlMajali, S. Ghalyon, W. Dweik and B. Mohd, "Analyzing
Cyber-Physical Threats on Robotic Platforms", 2020. [Online]. Available:
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5982649/.

[30] V. Vilches, L. San Juan, B. Dieber, U. Carbajo1 and E. Gil-Uriarte, "In-
troducing the Robot Vulnerability Database (RVD)". [Online]. Available:
https://arxiv.org/pdf/1912.11299.pdf.

[31] C. Zheng, Y. Zhang, Y. Sun, and Q. Liu, â ˘AIJIvda: International vulner-
ability database alliance,â ˘A˙I in 2011 Second Worldwide Cybersecurity
Summit (WCS). IEEE, 2011, pp. 1â ˘A ¸S6.

[32] L. Ma, S. Mandujano, G. Song, and P. Meunier, â ˘AIJSharing vulnera-
bility information using a taxonomically-correct, web-based cooperative
database,â ˘A˙I Center for Education and Research in Information Assur-
ance and Security, Purdue University, vol. 3, 2001.

[33] O. Alhazmi, Y. Malaiya, and I. Ray, â ˘AIJMeasuring, analyzing and
predicting security vulnerabilities in software systems,â ˘A˙I Computers &
Security, vol. 26, no. 3, pp. 219 â ˘A ¸S 228, 2007. [Online]. Available:
http://www.sciencedirect.com/science/article/pii/S0167404806001520

Fig. 6. Severe issues

Fig. 7. Non Severe issues

REFERENCES

[1] C. Archibald, L. Schwalm and J. Ball, "A SURVEY OF SECU-
RITY IN ROBOTIC SYSTEMS: VULNERABILITIES, ATTACKS,
[Online]. Available:
AND SOLUTIONS", Archibald.cse.msstate.edu.
https://www.archibald.cse.msstate.edu/papers/17-ijra-security.pdf.

[2] A.M. Wyglinski, X. Huang, T. Padir, L. Lai, T.R. Eisenbarth, and K.
Venkatasubramanian, Security of autonomous systems employing embed-
ded computing and sensors, Micro, IEEE, 33(1), 2013, 80â ˘A ¸S86.
[3] K. Koscher, A. Czeskis, F. Roesner, S. Patel, T. Kohno, S. Checkoway,
D. McCoy, B. Kantor, D. Anderson, H. Shacham, et al., Experimental
security analysis of a modern automobile, Security and Privacy (SP),
2010 IEEE Symposium on, IEEE, 2010, 447â ˘A ¸S462.

[4] A. Wyglinski, X. Huang, T. Padir, L. Lai, T. Eisenbarth, and K. Venkata-
subramanian, â ˘AIJSecurity of autonomous systems employing embedded
computing and sensors, Micro, IEEE, 33, 2013, 80â ˘A ¸S86.

[5] F. Higgins, A. Tomlinson, and K.M. Martin, Threats to the swarm:
security considerations for swarm robotics, International Journal on
Advances in Security, 2(2â ˘A ¸S3), 2009

[6] S. Checkoway, D. McCoy, B. Kantor, D. Anderson, H. Shacham, S. Sav-
age, K. Koscher, A. Czeskis, F. Roesner, T. Kohno, et al., Comprehensive
experimental analyses of automotive attack surfaces, USENIX Security
Symposium, San Francisco, 2011.

[7] E. Ya gdereli, C. Gemci, and A.Z. AktaÂÿs, A study on cybersecu-
rity of autonomous and unmanned vehicles, The Journal of Defense
Modeling and Simulation: Applications, Methodology, Technology, 2015,
1548512915575803.

[8] A. Francillon, B. Danev, and S. Capkun, Relay attacks on passive keyless

entry and start systems in modern cars, NDSS, 2011.

[9] T. Denning, T. Kohno, and H.M. Levy, Computer security and the modern

home, Communications of the ACM, 56(1), 2013, 94â ˘A ¸S103.

[10] N. Bezzo, J. Weimer, M. Pajic, O. Sokolsky, G. J. Pappas, and I.
Lee, Attack resilient state estimation for autonomous robotic systems,
Intelligent Robots and Systems (IROS 2014), 2014 IEEE/RSJ Intl. Conf.
on, IEEE, 2014, 3692â ˘A ¸S3698

[11] Todd humphreysâ ˘A ´Z research team demonstrates ﬁrst

GPS spooﬁng of uav, http://www.ae.utexas.edu/news/features/
humphreys-research-team-demonstrates-ﬁrst-successfulgps-spooﬁng-of-
uav (accessed Jul. 01, 2015).

successful
todd-

7

[34] Y. Shin, A. Meneely, L. Williams, and J. A. Osborne, â ˘AIJEvaluating
complexity, code churn, and developer activity metrics as indicators of
software vulnerabilities,â ˘A˙I IEEE Transactions on Software Engineering,
vol. 37, no. 6, pp. 772â ˘A ¸S787, Nov 2011.

[35] M. Finifter, D. Akhawe, and D. Wagner, â ˘AIJAn empirical study of
vulnerability rewards programs,â ˘A˙I in Presented as part of the 22nd
USENIX Security Symposium (USENIX Security 13). Washington, D.C.:
USENIX, 2013, pp. 273â ˘A ¸S288. [Online]. Available: https://www.usenix.
org/conference/usenixsecurity13/technical-sessions/presentation/ﬁnifter
[36] M. A. McQueen, T. A. McQueen, W. F. Boyer, and M. R. Chafﬁn,
â ˘AIJEmpirical estimates and observations of 0day vulnerabilities,â ˘A˙I in
2009 42nd Hawaii International Conference on System Sciences, Jan
2009, pp. 1â ˘A ¸S12

[37] L. Bilge and T. DumitrasÂÿ, â ˘AIJBefore we knew it: An empirical study
of zero-day attacks in the real world,â ˘A˙I in Proceedings of the 2012 ACM
Conference on Computer and Communications Security, ser. CCS â ˘A ´Z12.
New York, NY, USA: ACM, 2012, pp. 833â ˘A ¸S844. [Online]. Available:
http://doi.acm.org/10.1145/2382196.2382284

[38] P. C. Meunier and E. H. Spafford, â ˘AIJFinal report of the 2nd workshop
on research with security vulnerability databases, january 1999,â ˘A˙I 1999.
[39] P. Mell, K. Scarfone and S. Romanosky, "Common Vulnerability Scoring
System," in IEEE Security & Privacy, vol. 4, no. 6, pp. 85-89, Nov.-Dec.
2006, doi: 10.1109/MSP.2006.145.

[40] V. Vilches, E. Gil-Uriarte, I. Ugarte, G. Mendia, R. Pison, and A.
Cordero, â ˘AIJTOWARDS AN OPEN STANDARD FOR ASSESSING
THE SEVERITY OF ROBOT SECURITY VULNERABILITIES, THE
ROBOT VULNERABILITY SCORING SYSTEM (RVSS).â ˘A˙I [Online].
Available: https://arxiv.org/pdf/1807.10357.pdf.

