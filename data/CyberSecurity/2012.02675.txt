1
2
0
2

g
u
A
4
2

]

R
C
.
s
c
[

4
v
5
7
6
2
0
.
2
1
0
2
:
v
i
X
r
a

1

Resilience-by-design in Adaptive Multi-Agent
Trafﬁc Control Systems

Ranwa Al Mallah, Member, IEEE, Talal Halabi, Member, IEEE, and Bilal Farooq, Member, IEEE

Abstract—Connected and Autonomous Vehicles (CAVs) with their evolving data gathering capabilities will play a signiﬁcant role in road
safety and efﬁciency applications supported by Intelligent Transport Systems (ITS), such as Trafﬁc Signal Control (TSC) for urban trafﬁc
congestion management. However, their involvement will expand the space of security vulnerabilities and create larger threat vectors. In
this paper, we perform the ﬁrst detailed security analysis and implementation of a new cyber-physical attack category carried out by the
network of CAVs against Adaptive Multi-Agent Trafﬁc Signal Control (AMATSC), namely, coordinated Sybil attacks, where vehicles with
forged or fake identities try to alter the data collected by the AMATSC algorithms to sabotage their decisions. Consequently, a novel,
game-theoretic mitigation approach at the application layer is proposed to minimize the impact of such sophisticated data corruption
attacks. The devised minimax game model enables the AMATSC algorithm to generate optimal decisions under a suspected attack,
improving its resilience. Extensive experimentation is performed on a trafﬁc dataset provided by the City of Montr ´eal under real-world
intersection settings to evaluate the attack impact. Our results improved time loss on attacked intersections by approximately 48.9%.
Substantial beneﬁts can be gained from the mitigation, yielding more robust adaptive control of trafﬁc across networked intersections.

Index Terms—Intelligent Transportation Systems, Adaptive Multi-Agent Trafﬁc Signal Control, Connected and Autonomous Vehicles,
coordinated Sybil attack, data corruption attacks, game theory, attack mitigation, resilience-by-design.

(cid:70)

1 INTRODUCTION

Intelligent Transportation Systems (ITS) play a vital role in the
development of smart cities by enabling a plethora of road
safety and efﬁciency applications such as optimized trafﬁc
management and collision avoidance. Adaptive Multi-Agent
Trafﬁc Signal Control (AMATSC) is one of the aspects that
make these systems intelligent by increasing the responsive-
ness of trafﬁc signals to trafﬁc demands. The cost of trafﬁc con-
gestion in wasted fuel and lost productivity ranges between
1.5 and 5 billion CAD per year in major Canadian cities [1]. By
collecting and evaluating trafﬁc data in real time, AMATSC
technologies try to optimize signal timings to reduce urban
congestion and ensure reliable vehicle travel time.

AMATSC are deployed extensively in North America,
Australia, and Europe. For instance, the Sydney Coordinated
Adaptive Trafﬁc System (SCATS), Split Cycle Offset Optimiza-
tion Technique (SCOOT), RapidFlow, Rhythm engineering,
InSync, Urban Trafﬁc OPtimisation by Integrated Automa-
tion (UTOPIA), Adaptive Control Software (ACS Lite), and
Real-Time Hierarchical Optimized Distributed and Effective
System (RHODES) represent widely known deployments [2].

• Ranwa Al Mallah is with the Computer Security Laboratory in the Electrical
and Computer Engineering Department, Royal Military College of Canada,
Kingston K7K 7B4, ON.
E-mail: ranwa.al-mallah@rmc-cmr.ca.

• Talal Halabi is with the Department of Applied Computer Science, the

University of Winnipeg, Winnipeg R3B 2E9, MB.
E-mail: t.halabi@uwinnipeg.ca.

• Bilal Farooq is with the Laboratory of Innovations in Transportation at

Ryerson University, Toronto M5B 2K3, ON.
E-mail: bilal.farooq@ryerson.ca.

They are in use in Pittsburgh, Pennsylvania, on Boudreau
Road in the City of St. Albert, Alberta, Canada, in the suburb
of Toronto, the Holton region and in downtown Toronto. By
the end of 2021, the size of the deployment is expected to
grow to hundreds more in operation in downtown Toronto,
Montreal, and many other cities around the world [3].

The network of Connected and Autonomous Vehicles
(CAVs) will be increasingly involved in AMATSC operations,
where valuable trafﬁc parameters that are often difﬁcult to
obtain from the static transportation infrastructure are trans-
mitted through the vehicles’ On Board Units (OBU) to the
infrastructure’s Road Side Units (RSU) and integrated into the
AMATSC algorithms to optimize their signal timing decisions.
However, the reliance on CAV increases the vulnerability of
ITS to cyberattacks [4] due to the high connectivity involved.
AMATSC may be implemented and managed by the Trafﬁc
Management Center (TMC). Microscopic and macroscopic
trafﬁc variables collected at the RSUs and transmitted to the
TMC are critical to AMATSC algorithms for optimal decision
making. However, they may be misleadingly altered in the
presence of malicious vehicles trying to launch data corrup-
tion attacks, such as Sybil. Basically, Sybil vehicles are non-
existing vehicles controlled by a malicious entity and claiming
fake or forged identities to participate in ITS operations,
sabotaging their reliability and performance.

The communication protocols used by trafﬁc cabinets lack
effective data encryption and authentication mechanisms [5].
Consequently, the Sybil attack exploits the lack of security
countermeasures on trafﬁc controllers and sensors to expose
the vulnerabilities of AMATSC algorithms. Sybil attacks in
Peer-to-Peer (P2P) networks have been well studied in the
literature, and many solutions were designed to identify and
isolate Sybil nodes within these networks [6]. However, Sybil

 
 
 
 
 
 
attack prevention and detection in wireless networks is not
straightforward when the attack becomes complex. Hence, it
is imperative to equally focus on designing effective mitiga-
tion solutions to preserve the resilience of trafﬁc applications
when the primary lines of defense are compromised.

In this paper, we investigate theoretically and experimen-
tally the potential and impact of a yet unexplored threat
model on AMATSC systems, namely the coordinated Sybil at-
tack. In such an attack, the Sybil vehicles are deployed to alter
the data collected by the AMATSC algorithms on networked
intersections by optimally targeting the controllers involved
in signal timing decisions. The motivation behind our security
analysis is to stress the need for these algorithms to be attack-
aware. This could be achieved through the integration of
mitigation strategies into the AMATSC decision making as
a resilience layer against sophisticated attacks.

Therefore, we devise a non-cooperative minimax game
model to formalize the interactions between the attacker and
the AMATSC system, then solves the game to generate the op-
timal attack and defense strategies. On one hand, the coordi-
nated Sybil attack consists in playing a mixed strategy drawn
from the attack action space and is reﬂected by the adaptive
deployment of Sybil vehicles on networked road junctions to
maximize their trafﬁc ﬂows. On the other hand, the AMATSC
algorithm adopts a mixed strategy of attack mitigation actions
that consists of applying a weighted integration of the data
collected by the network of trafﬁc controllers in an attempt to
optimize signal timing decisions under attack.

The contributions of this paper are summarized as follows:

• We perform the ﬁrst detailed security analysis of a
highly realistic cyber-physical threat model carried out
by a network of CAVs on AMATSC systems. We exper-
imentally demonstrate its effectiveness and measure its
impact on trafﬁc control decisions using a real trafﬁc
dataset provided by the City of Montr´eal.

• We propose a novel, application-layer Sybil attack miti-
gation approach based on a minimax game model. Un-
like other mitigation solutions that focus on reducing
the impact of the attack following its detection, our
approach integrates a resilient response to attacks into
the generation of decisions. This ’by-design’ solution
can be considered as a fail-safe of the attack detection
phase and can be deployed as the default operational
strategy under susceptible adversarial settings where
critical trafﬁc data might be maliciously corrupted.

• We implement the mitigation approach onto an ex-
isting Multi-Agent Reinforcement Learning (MARL)-
based AMATSC algorithm and evaluate its perfor-
mance under various scenarios. The results show that
attack mitigation substantially reduces vehicle delays
and yields optimal control of trafﬁc across networked
intersections under attack.

The remainder of the paper is organized as follows. Section
2 presents important background concepts and discusses the
related literature. Section 3 describes the new threat model
and its impact. Section 4 lays out the proposed mitigation
approach. The implementation details are presented in Section

2

Fig. 1: Overview of AMATSC system architecture.

5. Section 6 discusses the experimental setup and analyzes the
results. Finally, Section 8 concludes the paper.

2 BACKGROUND AND LITERATURE REVIEW
The dependability and safety of ITS rely on its security against
cyber and cyber-physical attacks, which target the perception
layer of the architecture and propagate their impact to the ap-
plication layer. Trafﬁc Signal Control (TSC) has evolved from
standalone hardware devices running static schedules into
complex, wireless connected systems, which exposed them
to a variety of cyberthreats [2]. Signal controllers are usually
placed in metal cabinets by the roadside and used to generate
signal timing plans by following different approaches: ﬁxed-
time, actuated and semi-actuated, and adaptive. In particular,
adaptive TSC has proven to increase transportation produc-
tivity and reduce gas emissions.

2.1 Adaptive Multi-Agent TSC

AMATSC emerged as a new ITS paradigm, persuaded by the
idea that trafﬁc light timing plans should be fully adaptive in
coping with actual trafﬁc demand (intersections’ trafﬁc load).
Rather than monitoring the states of isolated intersections,
AMATSC observes the state of networked intersections to
produce signal timing decisions based on the global state of
the road network [7]. To achieve this, the local controllers at
every intersection communicate with each other directly or
via the TMC, as depicted in the architecture of Figure 1.

The potential for performance improvements in AMATSC
driven by Reinforcement Learning (RL) when compared to
conventional approaches is very promising [8]. When devel-
oping MARL-based AMATSC models, the literature draws on
different parameters for state and reward deﬁnitions within
the Markov game played among the agents [9]. For instance,
queue length is often used to deﬁne the environment state.
Some studies propose a vehicle-based state deﬁnition using
the expected total waiting time of a vehicle before reaching its
destination. More generally, delay-based approaches exploit a
combination of parameters such as the queue length and the
trafﬁc ﬂow rate, or the queue length and the time elapsed
since the previous signal. Similarly, a variety of objectives
have been considered when estimating the reward function
such as the average trip time, average junction waiting time,
and junction throughput/ﬂow rate.

2.2 Security of AMATSC

AMATSC algorithms manage the signal timings of multiple
networked intersections. CAV-based trafﬁc control is the fu-
ture of AMATSC and will greatly improve its efﬁciency by al-
lowing the vehicles to transmit relevant information to urban
trafﬁc scheduling algorithms. However, this increased connec-
tivity aggravates the vulnerability of AMATSC algorithms to
falsiﬁed data and erroneous measurements, especially if they
are not designed with the intrinsic ability to detect or ignore
these measurements during decision making. For instance,
Fig. 2 shows how a MARL-based AMATSC can be targeted
by data corruption attacks that may sabotage the environment
conditions on which the trafﬁc control agents rely to derive
their optimal signal timing policy.

Ghena et al. [10] investigated the security of an AMATSC
system currently deployed in the United States and discov-
ered a number of serious security ﬂaws, which mainly exist
due to systemic design failures and may be exploited to create
attacks that gain control of the system and cause service dis-
ruption. Chen et al. [11] conducted a detailed security analysis
of CAV-based transportation and studied the impact of data
spooﬁng attacks performed by the vehicles. They found that
the current trafﬁc control algorithm design choices are highly
vulnerable to such attacks from even a single vehicle. Yen et
al. [12] also studied the performance of different AMATSC
scheduling algorithms when they are under attack. Feng et
al. [13] focused on attacking actuated and adaptive control
systems by sending falsiﬁed data to increase trafﬁc delay.
Although these attacks are still relatively simple, they attempt
to emphasize the vulnerability of scheduling algorithms.

Laszka et al. [14] proposed an approach for detecting and
mitigating the attacks on trafﬁc signals by optimizing the
detector’s conﬁguration, which implies that the mitigation
process is based upon the success of the detection phase. Our
work underlines the importance of deploying the mitigation
procedure at the application layer during the design phase
without relying on the precedent line of defense, where the
AMATSC algorithm integrates an intrinsic form of smart re-
silience when processing the data collected from the physical
world independently of intrusion detection functions.

2.3 Resilience-by-design

To the best of our knowledge, the robustness of the parameters
used for state and reward deﬁnitions in the face of cyberat-
tacks against the ITS remains questionable. The attack carried
out in this paper proves that the intrinsic parameters used by
the trafﬁc control logic are extremely vulnerable to corruption
and require serious investigation. Thus, we stress the need
to develop resilient-by-design AMATSC algorithms as part
of a defense-in-depth security approach, where an additional
mitigation layer is deployed on top of the application layer.

The idea of security-by-design for cyber-physical systems
has been introduced very recently [15]. In principle, it allows
to incorporate security measures at the system design phase
following careful speciﬁcation of security requirements. This
paper largely contributes to this area of research, which is
still in its infancy, by emphasizing the need to equally in-
troduce security and resilience-by-design at the application
layer of the cyber-physical architecture. This is a crucial line

3

Fig. 2: Attackers can distort the environment states and
agents’ rewards, leading to suboptimal MARL policies.

of defense, especially against intelligent attacks and advanced
persistent threats that will most likely bypass detection.
Game theory provides a high-level mathematical
lan-
guage, generally perceived as effective in modeling the con-
ﬂicted interactions between attackers and defenders in mod-
ern computer systems and optimizing their decisions. Several
games have been proposed to detect the attacks on ITS and
address trafﬁc prediction and decision-making issues [16]. In
such games, usually non-cooperative, players aim at maxi-
mizing their own payoffs and minimizing the payoffs of their
opponents [17]. The attacker’s payoff can be modeled either
as the gain from launching the attack on the ITS or as the
impact of the attack on system performance. In this paper, we
leverage the power of game theory to anticipate the malicious
activities that target ATSC and prepare the controllers to
respond proactively and in an optimized fashion.

2.4 Sybil Attacks in the CAV Environment

Sybil attacks were ﬁrst introduced by Douceur [18] in P2P
networks: If a single faulty or malicious entity can present
multiple identities, it can control a substantial fraction of the
system, thus representing a security threat. Many Sybil attack
detection techniques were proposed [19], but most of them
present serious shortcomings in practicality and detection
accuracy, especially if faced with sophisticated attacks. In fact,
without a centralized trusted authority, it is impossible to
completely detect and eliminate Sybil nodes [18]. Nonetheless,
a centralized trusted authority is not necessarily feasible in
vehicular networks, where vehicle mobility and the dynamic
network topology substantially hinder the design assump-
tions behind most attack detection schemes [19].

In vehicular networks, there is an urgent need to explore
attack mitigation strategies as it was done in wired P2P
networks in order to minimize the malicious effects of the
Sybil attack. For example, one mitigation strategy is to disrupt
the activity of the Sybil node. However, this is not directly
applicable to vehicular networks, because in the case of a Sybil
attack with multiple Sybil identities, the strategy must detect
multiple malicious nodes consequently, thus degrading the
communication and performance of the vehicular network.
Hence, the attenuation of the attack impact on the perfor-
mance of the network remains a critical defense aspect.

This paper addresses the gap of enacting the right security
posture in ITS environments susceptible to Sybil attacks,
particularly their evolving versions, which strategically target
multiple trafﬁc controllers to exacerbate the interference with
the decisions of trafﬁc ﬂow management applications over-
seeing networked intersections. These attacks will gain control
over a signiﬁcant part of the network to inﬂuence unfavorably
the TMC in various network operations. An attacker with
multiple fake identities can maliciously participate in a data
aggregation process, take advantage of resource allocation
mechanisms, disrupt vote-based mechanisms, and interfere
with trafﬁc ﬂow management and navigation applications. A
defense system assuming a centralized trusted authority is
less likely to be feasible in the ITS.

3 THREAT MODEL
ITS reliability is highly dependent on the quality of data
collected across the system. This section describes a yet un-
explored threat model that targets data integrity in AMATSC.

3.1 Coordinated Data Corruption: The Case for Sybil

In normal settings, the vehicles send a message to indicate
their position and arrival time when approaching a trafﬁc
controller. Hence, the latter is fully aware of the number of
vehicles in each lane. To generate signal-timing decisions, the
queue-based control algorithm will take into consideration the
perceived number of vehicles as the queue length, while the
delay-based algorithm will extract the vehicles’ delay at the
intersection from their broadcasted arrival times. In MARL-
based AMATSC, these information will be used in the stochas-
tic game to estimate the transition probabilities between the
different states. Hence, corrupting these information will push
the controllers off the optimal policy distribution.

A Sybil attack on trafﬁc controllers consists in creating or
forging fake vehicle identities and using them to broadcast
trafﬁc-related information that may compromise the decisions
of trafﬁc ﬂow management applications. This attack is con-
sidered indirect since it does not require to physically access
the trafﬁc controller, but to tamper with data transmitted
by the network of CAVs, which makes it highly feasible in
reality. This paper explores an evolved version of Sybil attack,
which we call coordinated Sybil attack, that will mainly target
highly interconnected systems. In this scenario, the attacker
will make use of fake vehicle identities to simultaneously
target multiple trafﬁc controllers by distributively corrupting
their data inputs with the intent of producing a larger attack
impact. This can substantially degrade the performance of ITS
applications that rely on multiple networked data sources to
generate decisions and take actions. For MARL-based multi-
agent systems, this threat can be seen as a direct distortion of
the environment on which the agents rely to compute their
rewards and derive their policies.

3.2 Threat Impact

4

if the attack is concentrated onto a single controller. Also,
the number of fake identities generated by the attack onto a
single trafﬁc lane should adhere to the trafﬁc ﬂow capacity
of the lane to avoid raising an intrusion ﬂag. The attack
assumes the ability of the malicious vehicle to compromise its
OBU and transmit malicious messages. This can be performed
physically, wirelessly, or via malware [20].

The impact of coordinated data corruption attacks in-
creases substantially when simultaneously targeting multiple
networked intersections controlled by an AMATSC algorithm,
as proven experimentally later in this paper. For instance,
Sybil vehicles within the network are simply regarded as fake
messages, but the RSU deploying AMATSC functions actually
receives these messages. Thus, the trafﬁc light state may
change to discharge trafﬁc that is not really present. Hence,
the lanes carrying the actual trafﬁc can become extremely
congested because the presence of Sybil vehicles altered the
data received by the MARL agents and used by the algorithm
in the optimization of timing plans.

3.3 Attack Assumptions

In the coordinated Sybil attack, the attacker’s goal is to max-
imize the impact on decision making while minimizing the
probability of detection. Hence, the attacker will deploy the
Sybil nodes under strategically placed RSUs, the ones that
the attacker thinks they will inﬂuence the decision of the
TMC the most according to the perceived delay. The attack
can be driven by political or ﬁnancial incentives, or may be
carried out to cause damage to city functions and individuals
(e.g., terrorism). We assume that the attacker has sufﬁcient
resources and incentives to monitor the trafﬁc on the target
networked intersections for long periods of time. The attacker
also has full knowledge of the intersection map. Hence, before
attacking an intersection, the attacker is assumed to have
performed sufﬁcient reconnaissance and thus have studied
beforehand the appropriate timing to launch the attack in
order to create the most impact, which could be speciﬁc to
the target junction (e.g., targeting rush hour). Also, the main
attack vehicle does not have to be present in the trafﬁc ﬂow,
but could be launching the attack from a distance.

We assume that the attacker is only interested in manip-
ulating the number of vehicles in a single direction, thus
deploying fake identities on opposite directions is not useful.
The attacker can deﬁne the critical signal phases to target
for increased impact. Although trying out all attack scenarios
guarantees the optimal attack strategy, it is unrealistic for an
attacker to enumerate them all and ﬁnd out the best strategy
in real time based on the observed attack impact, which needs
to be effectively estimated. Thus, a simple greedy attack policy
is usually proposed to ﬁnd an effective attack strategy that
yields a sufﬁcient impact according to the attacker. Never-
theless, our proposed game model will enable the attacker
to apply an optimal attack policy by solving an optimization
problem that produces the best-case attack scenario.

By optimally dispersing the attack load, the attacker is not
only motivated by the greater scale and consequence of
the attack, but also seeking to hide it from anomaly-based
intrusion detection systems that may raise security alarms

4 ATTACK MITIGATION: A MINIMAX GAME

This paper proposes a coordinated Sybil attack mitigation
scheme as a resilience-by-design approach to be integrated

into the decision-making phase of AMATSC systems, provid-
ing real-time, dynamic protection in adversarial scenarios.

4.1 Game Overview

Game Theory has been widely applied to solve a variety of
security problems in computer and communication networks.
In this paper, we design a minimax game theoretical model to
describe the interactions between the AMATSC algorithm and
the attacker. By solving the game, the algorithm determines
the optimal defense strategy to deploy in order to minimize
the impact of the attack in the worst-case scenario.

The data corruption attacker can implement a mixed strat-
egy of attack actions by targeting the trafﬁc intersections with
different magnitudes based on the estimated potential impact.
This also allows the attacker to mask the effects of the attack
while prolonging its duration. The payoff of the attack is
quantiﬁed in terms of the impact on trafﬁc ﬂow at the target
intersections. On the other hand, the AMATSC algorithm is
not aware of the intersections being targeted by the attack,
hence it must estimate the impact based on the status of the
trafﬁc network and consider the information received by each
controller accordingly, even though this might entail a cost
associated to disregarding some legitimate vehicle messages.
The resilience layer proposed in this paper is agnostic to the
attack strategy and aims to prepare the system to function
in the worst adversarial setting without prior knowledge of
attacked trafﬁc controllers.

The proposed game is a zero-sum game in which one
player’s payoff is the negation of the other player’s payoff.
The game is simultaneous, since the defense strategy is im-
plemented regardless of the attack status and is considered as
an additional security layer, which is independent from the
attack detection functions in place. This recursively played
game can be considered as a single-state stochastic game,
which will be solved by stationary strategies that do not
depend on history and time slots.

4.2 Attack and Defense Strategies

In the cybersecurity battle between the attacker and traf-
ﬁc control algorithm, a set of attack actions is represented
by A = {a1, . . . , aj, . . . , aA}, where A is the size of the
attacker’s action proﬁle. The pure strategy aj consists in
targeting lane j each time. The mixed strategy in this case
consists in deﬁning a probability distribution vector denoted
by α = (α1, . . . , αA), such that αj ≥ 0 ∀aj ∈ A and
(cid:80)
αj = 1, to attack the network of intersections with
aj ∈A
different rates of Sybil vehicles. It is intuitive to assume that
the size of the action proﬁle is equal to the total number of
trafﬁc lanes at all target intersections.

The TMC controlling the AMATSC algorithm implements
the mitigation approach through a set of actions represented
in the set D = {d1, . . . , di, . . . , dD}, where D is the size of
the defender’s action proﬁle. As in the case of attack actions,
the defense actions will also be applied at the lane granularity
level, assuming that each lane is governed by a distinct trafﬁc
controller. Hence, it is intuitive to assume that the size of the
attack and defense action proﬁles is the same.

5

The AMATSC algorithm usually takes the calculated aver-
age speed of vehicles present at the trafﬁc light as input and
generates the signal timings accordingly. A pure strategy di
consists in considering all the vehicles in lane i when com-
puting the input average speed. Adopting a mixed strategy of
defense that mitigates the attack impact consists in modifying
the input vector to the AMATSC algorithm over all lanes
according to a probability distribution vector produced by
the solution of the game over the actions in D. The vector
is denoted by β = (β1, . . . , βD), such that βi ≥ 0 ∀di ∈ D and
(cid:80)
βi = 1. Our mitigation solution aims to ﬁnd the optimal
di∈D
vector β and integrate it into the design of the trafﬁc control
logic to reduce the coordinated Sybil attack impact. This is
one of the innovative ideas advocated in this paper.

4.3 Payoff Matrix

The payoff of the attacker can be determined based on the
type of the data corruption attack and the caused impact. In
the case of coordinated Sybil attacks, the payoff of the attacker
is equal to the difference between the maximal ﬂow on the
trafﬁc lane, denoted by θi, and the actual trafﬁc ﬂow on that
lane, denoted by fi. These parameters are particularly chosen
as they allow to effectively estimate the attack impact. The
utility matrix created in our game model is a square matrix of
size D, which is equal to the total number of segments on the
networked intersections. Each row corresponds to a defense
action that may be adopted by the AMATSC algorithm, which
in this case represents the lane selected by the trafﬁc controller
and whose data is fed as input to the scheduling algorithm to
generate the signal timing plan. On the other hand, each col-
umn corresponds to an attack action, which mainly represents
the target trafﬁc lane.

The attacker must maximize the attack impact on the deci-
sions of the AMATSC algorithm by attempting to corrupt the
collection of input trafﬁc data from the lanes as unfavorably
as possible. Thus, the utility matrix U of the attacker, which is
used to compute the attacker’s payoff over the set of possible
strategies, can be deﬁned in terms of the attack impact by:
(cid:26)θi − fi,
0,

i = j
i (cid:54)= j

Uij =

(1)

The impact is equal to 0 when the AMATSC algorithm does
not consider the target lane in its decision making. On the
other hand, when i = j, the algorithm takes into account only
the trafﬁc data of lane i to generate signal timing decisions
(i.e., pure strategy) while the attacker targets the same lane
using the Sybil vehicles. Hence, the attack impact is maximal,
because the input data is completely corrupted and was
perceived by the algorithm as fully accurate.

However, the AMATSC algorithm does not intend to de-
ploy pure strategies, since its main function consists in observ-
ing the states on all intersections involved. The goal is then to
apply the mitigation procedure on the input data vector itself
before feeding it to the algorithm. Hence, the mixed strategy is
reﬂected by the assignment of distinct degrees of conﬁdence
in the perceived trafﬁc parameters on all lanes according to
the probability distribution vector β generated by the game.
For example, a value β1 = 0.6 will dictate that the algorithm
only considers 60% of the vehicles present on lane 1 when

computing the associated input data instead of 100% of the
vehicles, in an attempt to anticipate the load of Sybil nodes on
that lane and reduce its effect. The deﬁnition of this utility
matrix leads to an AMATSC vs. attacker zero-sum game,
where the payoff of the algorithm is equal to the negation
of the payoff of the attacker. In other words, the algorithm
would lose what the attacker would gain, and vice versa.

4.4 Game Model

Based on the above deﬁnitions of attack and defense ac-
tion spaces as well as payoff matrices, we propose a two-
players zero-sum minimax game, in which the objective of
the attacker is to distribute the Sybil attack load over the set
of trafﬁc segments to maximize the attack impact, and the
objective of the trafﬁc control algorithm is to determine the
optimal input data vector. The attacker problem is deﬁned as
follows:

M aximize min
di∈D

(cid:88)

aj ∈A

Uijαj

(2)

(3)

(4)

Subject to:
(cid:88)

αj = 1

aj ∈A

αj ≥ 0 ∀aj ∈ A

A maxmin strategy is one that maximizes the player’s worst-
case payoff. Here, the attacker tries to maximize the minimum
impact of the Sybil attack by computing a probability distribu-
tion vector α, according to which the attack will be distributed
over the set of trafﬁc controllers. The optimization problem is
not linear but is equivalent to the following linear program:

M aximize ρ

Subject to:

(cid:88)

ρ ≤

Uijαj ∀aj ∈ A

aj ∈A

(cid:88)

aj ∈A

αj = 1

αj ≥ 0 ∀aj ∈ A

(5)

(6)

(7)

(8)

where ρ is a variable deﬁned for problem linearity. We try
to maximize the value of ρ while adhering to Constraint 6.
The problem can now be solved using the simplex method in
polynomial time.

When considering the problem from the perspective of
the trafﬁc control algorithm, the optimal defense strategy,
represented by the probability distribution vector β, is derived
by solving the following optimization problem. This is the
minimax strategy that represents the mitigation approach.

M inimize max
aj ∈A

(cid:88)

di∈D

Uijβi

Subject to:
(cid:88)

βi = 1

di∈D

βi ≥ 0 ∀di ∈ D

(9)

(10)

(11)

6

This conservative strategy introduces potential resilience
against Sybil attacks. This is equivalent to minimizing the
largest attack impact that may occur in the worst case sce-
nario. That is, the AMATSC’s objective is to minimize the
maximum attack impact (i.e., minimize the attacker’s payoff).
Based on the nature of trafﬁc parameters usually exploited
by current and emerging AMATSC algorithms, the vulner-
ability of these algorithms against data corruption attacks,
particularly Sybil attacks, cannot be completely eliminated.
Hence, we argue that an effective approach is to prepare
the algorithm to deal with such attacks if ever materialized.
Following the same mathematical transformations explained
earlier, the nonlinear optimization problem becomes:

(cid:88)

di∈D

M inimize φ

Subject to:

Uijβi ≤ φ ∀di ∈ D

(cid:88)

di∈D

βi = 1

βi ≥ 0 ∀di ∈ D

(12)

(13)

(14)

(15)

where φ is deﬁned to make the problem linear, and should
satisfy Constraint 13. The two problems deﬁned in Equations
5 and 12 are dual. The duality theorem explained in [21] states
that the maximum payoff that the TMC can achieve is equal
to the minimum payoff that the attacker will receive. This is
usually known as the ”value of the game” and is achieved at
the equilibrium point.

5 IMPLEMENTATION DETAILS
The lack of large-scale deployment of CAVs and technology
limitations make theoretical analysis and simulation the main
choices in the validation of our study. The realism of the
simulation is thus a paramount aspect. To reproduce the road
trafﬁc network, we adopted the open-source microscopic traf-
ﬁc simulation package Simulation of Urban Mobility (SUMO)
[22]. SUMO has a Python Trafﬁc Control Interface (TraCI) that
interfaces it with an external application via a TCP socket
connection. It permits SUMO to connect to other systems,
such as the monitoring and control system. In fact, the TraCI
interface allows the integration of Flow [23], a computational
framework for deep RL and trafﬁc control experiments.

5.1 AMATSC Simulation Setup

It has been proven that an RL agent is capable of learning
policies exceeding the performance of state-of-the-art trafﬁc
signal control programs [8]. Flow enables the use of a single
agent to control an intersection with RL or a multi-agent algo-
rithm to control a network of intersections (e.g. one controller
agent acting on three intersections at the same time based
on data collected from all three intersections). In this work,
the implementation of MARL is contemplated as it is in this
case that the beneﬁts of learning should be most apparent
and useful in the context of trafﬁc signal control. RL-based
AMATSC algorithms use different parameters as input to
the RL algorithm. Among the data gathering techniques that
assess the different parameters, we leverage the capabilities

provided by the CAV technology within the trafﬁc network
and model them in Flow. Features are then extracted from
the SUMO environment and provided as input to the control
algorithm implemented in Flow.

Flow integrates SUMO with a standard deep RL library
rllab, thereby permitting the training of large-scale RL ex-
periments for trafﬁc control tasks. Also, Flow can be used to
simulate CAV-based trafﬁc control to enforce state changes in
the trafﬁc light program at the intersection. The changes in
the trafﬁc signal at intersections are dictated by the RL control
component implemented in Flow, thus providing sophisti-
cated, adaptive RL-driven trafﬁc light programs. We used
the conﬁguration of the Proximal Policy Optimization (PPO)
control algorithm, which is a policy-based RL method with
signiﬁcantly less computational complexity than other policy
gradient methods [24]. We train the PPO RL agent under
normal trafﬁc conditions and obtain the resulting policy.

5.2 Evaluation Metrics

The mean trip waiting time is used as a performance metric
to measure the impact of trafﬁc control performed at each
intersection compared to a baseline where static trafﬁc pro-
grams are implemented. The waiting time represents the time
in seconds during which the vehicle speed is below 0.1m/s.
When RL agents are deployed, the waiting time of vehicles
going through the network of controlled junctions decreases.
In a stochastic trafﬁc environment, in order to establish useful
ranges for the waiting time metric, many simulation runs are
performed and the mean trip waiting times are averaged. We
implement several scenarios to assess the trip waiting time
under normal trafﬁc conditions, coordinated Sybil attacks,
and when a mitigation solution is deployed.

5.3 Baseline Scenario

In the baseline scenario, trafﬁc is ﬂowing under normal trafﬁc
conditions. Moreover, the control logic implemented at each
intersection is one of the types available in SUMO, which is
either static or actuated (gap-based or delay-based). Vehicles
will send a message to indicate their position and arrival time
when they approach a trafﬁc light. We identify three adjacent
intersections in the transportation network, and collect the
mean trip waiting time of the vehicles going through the
identiﬁed intersections under this control logic.

This scenario serves as the baseline for the evaluation of
this metric. A MARL-based AMATSC managing the three
intersections will aim at improving this metric. On the other
hand, a coordinated Sybil attack on the network of intersec-
tions will try to degrade it. A repository reproducing the
scenarios and results can be found at: https://github.com/
LiTrans/UrbanSybil/.

5.4 MARL-based Control Scenario

In this scenario, we run the experiment under normal trafﬁc
conditions with a trainable RL agent using the PPO algorithm
to control the three intersections. The PPO algorithm requires
the deﬁnition of state, action and reward to train the trafﬁc
lights. The state corresponds to the agent’s observation of the
current environment, which includes the number of vehicles

7

in each intersection observed as the closest to the trafﬁc
light. Particularly, the state space that is partially observed
consists of the velocities, distances to the intersections, edge
number from each direction, edge information, and trafﬁc
light states. The model uses the observation to compute the
average velocity and ﬂow density on each edge.

The model also keeps a multi-dimensional array to keep
track of how much time has passed since the last change
to yellow for each trafﬁc light, as well as to keep track of
the ﬂow direction and whether or not each trafﬁc light is
currently yellow. Results from SUMO are used by Flow for the
generation of observations. The action space speciﬁes whether
a trafﬁc light is supposed to switch or not. The actions are sent
to the trafﬁc lights in the controlled network of intersections.
The reward represents the negative value of per vehicle delay
minus a penalty for switching trafﬁc lights. It is the reward
associated with the previous state/action pair.

The multi-agent environment provided by Flow enables
the speciﬁcation of the number of lights that the agent can
observe (we set this number to three trafﬁc lights in our
simulation). The state space in this context corresponds to
the velocities, distances to intersections, edge number from
each direction, and trafﬁc light states of all three intersections.
Hence, it represents the multi-agent shared model version of
the network. The RL-based adaptive trafﬁc signal controller
issues an action for each trafﬁc light agent. An agent receives
a reward normalized by the number of lights.

An experiment run in this scenario returns the trained RL
model as a result. The ﬁnal policy mapping is returned by the
simulation. We then save the trained model to replay it by
simply loading it. Since the algorithm requires a vectorized
environment to run, we provide a reward of value 0 and
an observation vector. The model is then able to predict the
actions to take at each intersection of the network based on
the observation provided. Thus, the model maps the states to
actions to be performed. Actions from the policy are provided
to the SUMO simulator. There is a minimum switch time
implemented in the algorithm for each trafﬁc light so that
earlier RL commands are ignored.

5.5 Coordinated Sybil Attack Scenario

The transportation network allows vehicles to frequently join
and leave. This type of networks is susceptible to Sybil attacks,
in which an attacker gains inﬂuence by joining a network
under multiple colluding aliases. The trafﬁc control algorithm
exploits the data sent by the CAV in the range of an RSU to
generate optimal signal plans. At all times, the RSU is fully
aware of the number of vehicles by counting the number of
messages received from both the Sybil and legitimate vehicles.
The controller will consider any of the following metrics in the
scheduling algorithm: the number of vehicles, arrival time of
each vehicle in each lane, vehicle speed, and vehicle delay,
thus deriving other macroscopic metrics at the intersection.
Consequently, every single vehicle within the RSU’s commu-
nication range can potentially affect signal timing decisions.

We simulate the coordinated Sybil attack in SUMO by
injecting virtual vehicles. We vary the number of injected
vehicles, the time and the duration of the injection. To measure
the impact of the attack, trip waiting times of Sybil vehicles are

8

Fig. 4: Variation of trafﬁc ﬂow on an urban road
network.

Fig. 5: Flow-Density relationship on an edge in the
urban baseline scenario.

Once the relationship between the fundamental variables
(density, ﬂow, speed) of trafﬁc ﬂow is established, the bound-
ary conditions can be derived. The one of interest is the maxi-
mum ﬂow. From Equation (18), we ﬁnd the critical density at
the maximum ﬂow using the following derivative:

= vf ×

(cid:104)
1 − 2 ×

dq
dk

(cid:17)(cid:105)

(cid:16) kc
kj

= 0

(19)

(cid:16) kj
2
Therefore, the density corresponding to maximum ﬂow
can be approximated by half the jam density. Once we get kc,
we can derive the maximum ﬂow, denoted by qmax.

kc =

(20)

(cid:17)

qmax =

(cid:17)

(cid:16) vf × kj
4

(21)

Thus, the maximum ﬂow is approximated by one fourth the
product of free ﬂow and jam density. In the second part of
the scenario, we extract from the simulation the current ﬂow
observed on the segment of interest and compare it to the
maximum ﬂow:

∆ = qmax(t) − qactual(t)

(22)

From the perspective of the attacker, the aim is to inject
Sybil vehicles on the edges that best suit the attack’s goal
according to the current observations of density and ﬂow.
Particularly, the attacker will consider the edges where den-
sity is low to medium and the maximum injection rate will
be dictated by ∆. Knowing that the RL agent keeps track of
the average velocity of the vehicles observed, the attack will
aim to decrease the average speed, thus inducing the model to
propose suboptimal actions. The minimax game mitigates the
attack by limiting the inﬂuence the attack achieves through
the Sybil nodes.

To this end, this scenario consists of the implementation of
the defense optimisation problem in Equation 9. The output
of the proposed minimax game is the vector β corresponding
to the weights of information collected on each edge (e.g., its
reliability). Such high-level weights could be interpreted in a
variety of ways depending on the trafﬁc control module under
investigation. This is one of the advantages of our proposed
game model, which offers a relative level of ﬂexibility in how
the mixed strategy of mitigation actions would be actually

Fig. 3: The mitigation layer is implemented on top of
the control layer for increased application resilience.

not considered in the computation of the mean trip waiting
time metric because they simply do not exist. Thus, we con-
sider only the trip waiting times of real vehicles and compare
them to the baseline scenario, where trafﬁc is ﬂowing under
normal trafﬁc conditions e.g. no attack on AMATSC. In our
coordinated Sybil attack implementation, the attacker deploys
Sybil vehicles per each RSU. Thus, the network of three
intersections controlled by the RL algorithm is targeted with
different Sybil arrival rates at every intersection. To reﬂect a
generic attack scenario where the attacker is not necessarily in-
telligent, we implement an attack strategy where the attacker
targets the critical phase that causes the largest delay, instead
of implementing the best-case attack scenario generated by
our game. Hence, each trafﬁc signal in the network is identi-
ﬁed as a potential attack target. The measured attack impact
was substantial even when the optimal attack policy was not
adopted. Nevertheless, our mitigation approach is designed
to deal with the worst-case attack scenario.

5.6 Threat Mitigation Scenario

Here, we implement the minimax game as a mitigation layer
on top of the control layer. Figure 3 illustrates the defense
strategy as a layer of protection against coordinated data
corruption attacks on the AMATSC application regardless of
intrusion detection performance. To reduce the attack impact,
this layer will adjust the inputs provided by SUMO to the
AMATSC algorithm implemented in Flow. First, we need to
compute the maximum ﬂow on the 12 trafﬁc segments of the
intersections controlled by the RL agent (three junctions, each
having 4 segments).

Figure 4 shows the variation of trafﬁc ﬂow on an urban
road network. Macroscopic stream models represent how the
behavior of one parameter of trafﬁc changes with respect to
another. Precisely, the relation between the ﬂow and density of
an edge is shown in Fig. 5. Also, the assumed linear equation
between speed and density is given by:

v = vf −

(cid:17)

(cid:16) vf
kj

× k

(16)

where v is the mean speed at density k, vf is the free speed,
and kj is the jam density. The relation between ﬂow and
density can be derived using q = k × v, thus getting the
following parabolic equation:

q = vf × k −

(cid:17)

(cid:16) vf
kj

× k2

Finally, we derive the relation between speed and ﬂow:

q = kj ×

(cid:17)

(cid:16) v − v2
vf

(17)

(18)

0 0.2 0.4 0.6 0.8 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 Flow (V/s)Density (V/m) implemented. In our simulation, each element of the vector
corresponds to the percentage of vehicles to be considered on
each edge at each iteration t by the RL agent for the com-
putation of the input average speed. These values represent
the modiﬁed inputs fed to the control layer as the new state
observed by the MARL agents, which is the most fundamental
component of our resilience-by-design scheme.

6 EXPERIMENTAL RESULTS

To demonstrate that the discovered security ﬂaws have high
practical implications, this section assesses the impact of the
coordinated Sybil attack on a realistic transport network and
provides the results of the mitigation strategy, which can be
deployed to protect existing and emerging ATSC systems.

6.1 Impact of Coordinated Sybil Attacks

We perform the attack on the real urban network of the city
of Montr´eal using real-world trafﬁc data and signal timings.

6.1.1 Dataset Description

Information on trafﬁc demand in Montr´eal was obtained in
the form of an Origin-Destination matrix (O-D matrix) from
the Survey of the Montr´eal Metropolitan Area carried out in
2013 by the provincial government. The zone corresponds to
the city downtown and occupies an approximate area of 4
km2. We also used the information on the trafﬁc signal plans
of the modeled network for the period of 8AM to 9AM, pro-
vided by the Transport Division of the City of Montr´eal. The
dataset does not include trips of pedestrians, cyclists, public
transport (buses), nor commercial vehicles (trucks). The trafﬁc
conditions of the Montr´eal road network were experimentally
reproduced under normal conditions in SUMO as per the
baseline scenario. The real road network of Montr´eal was also
used in the coordinated Sybil attack scenario.

9

to be prolonged. The minimum duration and max duration of
green-time are 5 and 45 seconds, respectively.

Fig. 6b shows the impact of Sybil attack on the same
junction as the baseline scenario. Sybil vehicles were injected
around the junction long enough to be detected by the RSU,
which then receives the wrong information about the state of
trafﬁc ﬂow. The Sybil attack increased the mean trip time loss
by approximately 23 seconds compared to the baseline.

Since AMATSC is not yet deployed in the transportation
network of the City of Montr´eal, Fig. 6c shows the average
mean trip waiting time of vehicles on three neighboring but
isolated intersections under the baseline scenario. In the next
section, we demonstrate that, if the junctions were intercon-
nected and AMATSC was implemented, the performance in
terms of trip time loss is improved. Fig. 6d shows the impact
of the Sybil attack on the same three junctions. The junctions
are also controlled by a gap-based actuated trafﬁc control. We
notice that the trip time loss under attack increased by 34
seconds, that is, approximately by up to 50% more than the
Sybil attack targeting a single junction.

In [12], they presented a study on the impact of time
spooﬁng attacks on different trafﬁc signal control algorithms
in single and multiple intersections under both homogeneous
and heterogeneous arrivals. They showed that the delay-
based scheme is more vulnerable to time spooﬁng attacks
compared to the sum-of-delay-based scheme. In addition, the
hybrid scheme that combines delay-based and queue-based
performs similarly to the queue-based scheme when under
attack. From their conclusions about the time spooﬁng attack,
we can infer the same about our coordinated Sybil attack.
We delivered evidence of the damage that can be caused in
terms of increasing the time loss under a gap-based control
algorithm. It will be further demonstrated that even more
substantial damage can be caused under other scheduling
algorithms, such as AMATSC.

6.1.2 Results and Analysis

6.2 Attack Mitigation Performance

The realistic evaluation of the impact of the coordinated
Sybil attack in terms of mean trip time loss demonstrates
the potential physical impact of real cyber-physical attacks,
which exploit the perception layer to target the application
layer. We validate that there is no need to rely on assumptions
of the effect of attacks against the trafﬁc control components
and that our mitigation has solid merit in improving the
resilience of these components. We provide results for both
the baseline and Sybil attack scenarios on one junction and
three networked junctions of downtown Montr´eal.

We identiﬁed the 50 most critical trafﬁc lights based on
the average mean time loss in several simulation runs. Fig.
6a shows the mean trip waiting time of the most critical
junction. This junction is controlled by a gap-based actuated
trafﬁc control. This control scheme works by prolonging trafﬁc
phases whenever a continuous stream of trafﬁc is detected.
It switches to the next phase after detecting a sufﬁcient
time gap between successive vehicles. This allows for better
distribution of green-time among phases and also affects
cycle duration in response to dynamic trafﬁc conditions. We
considered the maximum time gap to be of three seconds
between successive vehicles that will cause the current phase

The mitigation scenario described earlier is simulated on a
grid network topology. We use the pre-built conﬁgurable
trafﬁc light grid environment implemented in Flow to conduct
the simulations. We customized the environment/network
parameters as per TABLE 1. Using the 10x10 grid network
topology, we simulate the baseline scenario under normal
trafﬁc conditions, where the trafﬁc light logic exerts control
over individual trafﬁc lights using SUMO actuation. In fact,
the default SUMO actuated trafﬁc lights are ﬁne-tuned on
many iterations with varying parameters of phase duration
and state. Fig. 7 shows the mean trip waiting time around
three junctions of the grid network for different scenarios. The
dark blue curve corresponds to actuated control and repre-
sents the baseline scenario used for the comparison with the
other scenarios. The mean trip waiting time is 154.3 seconds.
The red curve in Fig. 7 shows the results for the same
environment but with three trafﬁc lights controlled by an RL
agent. The other trafﬁc lights remain controlled by the default
SUMO actuated type of trafﬁc control. This is where we switch
from the non-RL to the MARL experiment in Flow to apply
RL-speciﬁed trafﬁc light actions via TraCI. Precisely, to sim-
ulate AMATSC on a network of intersections, we implement

10

(a) Baseline scenario: Mean trip waiting time in normal
conditions on Junction 386.

(b) Sybil attack scenario: Mean trip waiting time under attack
on Junction 386.

(c) Baseline scenario on networked junctions 386, 428, and
376: Mean trip waiting in normal conditions.

(d) Sybil attack scenario on networked junctions 386, 428,
and 376: Mean trip waiting time under attack.

Fig. 6: Results of the baseline and coordinated Sybil attack scenarios on a single junction and three junctions.

the multi-agent experiment where agents use the same policy.
We set the state to be partially observable. In fact, on each
edge around the controlled intersection, we want to know the
velocity of every vehicle. For each trafﬁc light, we want to
know its current state, i.e., what direction it is ﬂowing, when
it last changed, and whether it was yellow. This subset of
information is then provided to the controller. Each agent is
considered as a single intersection controlling its trafﬁc lights.
The observation space is deﬁned as normalized velocities of
nearby vehicles, for every intersection. We set the action space
to be discrete (e.g. the action space speciﬁes whether a trafﬁc
light is supposed to switch or not) and to directly match the
number of trafﬁc intersections to be controlled. Because of
the shared policy, instead of computing the actions, state, and
reward for a single agent, as a reward, the RL-based controller
will penalize the large delay and boolean actions that indicate
a switch (with the negative sign) for all the controlled agents
in the network. The same policy is used by each agent, and
actions from the policy are provided to the SUMO simulator.
We notice from Fig. 7 that MARL-driven control is able
to decrease the mean trip waiting time by approximately 52.4
seconds compared to the baseline scenario on three actuated
trafﬁc lights under normal conditions. We then run the coor-
dinated Sybil attack scenario on the grid network with three
trafﬁc lights controlled by an RL agent and we present the

results in Fig. 7. The green curve shows the attack’s impact on
adaptive trafﬁc control. The increase of approximately 97.7s
compared to the RL-based control scenario motivates the need
for mitigation, which proves to be required to limit the impact
of this sophisticated attack on AMATSC.

In Fig. 7, the purple curve presents the results of the
optimal mitigation strategy when the network of intersections
is the target of a coordinated Sybil attack. We are able to
improve time loss by approximately 48.9%. Our design proves
to mitigate the attack by limiting the inﬂuence the attacker
gains through Sybil nodes. Moreover, we realize that the
optimal strategy performs better than the baseline, which
validates the fact that we can’t just ignore the link that has an
attack for a certain time or minimize its effect by switching to
ﬁxed time plan control or actuated control instead of adaptive
controller without applying our mitigation strategy. On the
other hand, the performance of RL-based control when the
mitigation approach is applied (purple curve) would still be
degraded compared to its performance under normal settings
(red curve). As expected, the mitigation solution is designed
to attenuate the attack’s impact, not to eliminate it completely.
Fig. 7 compares the performance of the optimal mitigation
strategy with respect to the fair strategy wherein the miti-
gation does not consider the probability distribution vector
β generated by the minimax game solution, and which cor-

TABLE 1: Grid network topology.

Horizon

5000 seconds

Number of rows

Number of columns

10

10

Dimensions

5500mx4800m

Lanes

Max gap

Detector gap

Speed limit

Horizontal:2, Vertical:2

3.0

0.8

35 m/s

Inﬂows

top:20 bottom:40 left:40 right:50

Fig. 7: Grid network scenarios: Mean trip waiting time.

responds to the percentage of vehicles to be considered in
the algorithm’s input on each edge as part of the mitigation
process. Instead, the fair strategy modiﬁes the weighted speed
values on each edge by taking the same number of vehicles
present on each edge regardless of which edge might be
more impacted by the coordinated Sybil attack. This strategy
does not account for the potential presence of coordinated
Sybil vehicles within the network, which attempt to achieve
a high-impact attack by optimizing their presence on the
networked trafﬁc edges. Hence, this strategy is not supposed
to provide optimal mitigation, simply because it does not
ponder the payoff matrix that we created in Equation 1 and is
not prepared to deal with the worst-case attack scenario.

In our simulation, the fair strategy considered half of the
number of vehicles present on each edge of the intersections
controlled by the RL agent for the computation of the average
speed on that edge at each iteration. The light blue curve
shows that the fair strategy improves time loss incurred
under a coordinated Sybil attack by approximately 26.5%. As
expected, the fair strategy does not perform as good as the
optimal strategy, and thus is not appropriate to implement as
part of a resilience-by-design defense approach.

Fig. 8 presents the results when the mitigation approach
is activated without the Sybil attack compared to the other
scenarios. Compared to the RL control under no attack, the
performance was slightly degraded of approximately 25% but
is still better than the actuated control performance, which
justiﬁes the activation of our mitigation approach even in
absence of attack.

11

Fig. 8: Performance in terms of mean trip wait time of the
mitigation under different scenarios.

7 DISCUSSION

We have proven that the threat posed by sophisticated attacks
on trafﬁc control systems is of particular concern. To counter
this threats, the ﬁrst line of defense is to implement detec-
tion solutions. However, most of state-of-the-art Sybil attack
detection approaches have serious shortcomings. To be effec-
tive, a detection approach requires precise knowledge of the
actual system being controlled and the control discipline em-
ployed. Trafﬁc control systems are highly vulnerable to cyber-
physical attacks, and domain-agnostic security solutions are
too generic to be able to comprehend and detect intelligent,
sophisticated attacks. In critical infrastructures such as ITS,
the attack can cause physical, disruptive damage. Therefore,
a proactive defense solution is required, without necessarily
relying on attack detection. This paper proposes an effective
mitigation strategy that can be integrated into the application
layer, providing resilient-by-design AMATSC systems.

To maintain an optimal performance of the RL-driven traf-
ﬁc control, the proposed mitigation approach is not required
to be deployed at all times. It can be adopted at the application
layer when the control logic has suspected an attack and
requires to be proactively prepared to face its impact on de-
cision making. The proposed mitigation solution constitutes
an invaluable line of defense to integrate within a defense-
in-depth strategy in highly vulnerable environments running
in adversarial settings. It is the ﬁrst step towards the design
of an adaptive cyber-physical security approach tailored to
trafﬁc control systems [25]. Also, one of the highlights of our
mitigation solution is that it does not rely on the detection
and identiﬁcation of Sybil nodes to mitigate the attack impact,
unlike most of existing solutions.

8 CONCLUSION AND FUTURE WORK

A new and emerging challenge to the design of AMATSC
algorithms is explored. We stress the fact that the implemen-
tation of the trafﬁc control logic should be attack-aware. We
present a new, highly realistic threat model, namely, coor-
dinated Sybil attack, that targets a network of intersections
controlled by adaptive control algorithms to sabotage their
decision making. We implement the attack and investigate
its impact using a real trafﬁc dataset under real-world inter-
section settings. The obtained results as well as the exposed
vulnerabilities of emerging AMATSC systems should be taken

05010015020025011121314151Time (s)Number of simulationActuated controlRL controlSybil attackOptimal strategyFair strategy050100150200250RL controlSybil attackon RLcontrolMitigationactivatedwith attackMitigationactivatedwithoutattackActuatedTime (s)seriously when pondering future design choices and imple-
mentations.

To respond to anticipated intelligent data corruption at-
tacks against AMATSC, we present a mitigation strategy as a
layer of protection in case of detection failure. The devised
minimax game model enables the AMATSC algorithm to
take optimal decisions under attack. The optimal mitigation
strategy showed a substantial improvement of time loss by
approximately 48.9%. It can be potentially integrated at the
application layer as part of a resilience-by-design approach.

In the future, we will study the impact of our coordinated
Sybil attack on different trafﬁc control algorithms with regards
to the metrics used. Some AMATSC algorithms may be more
vulnerable than others to our attack. Hybrid schemes that
combine metrics may perform better when under attack than
schemes that use single metrics. Similarly, the effectiveness of
the mitigation may vary depending on the deployed control
algorithm, which requires further investigation.

REFERENCES

[1] B. Dachis and P. Bergevin, “True costs of congestion underestimated

in canada’s cities,” C.D. Howe Institute, 2013.

[3]

[2] L. Studer, M. Ketabdari, and G. Marchionni, “Analysis of adaptive
trafﬁc control systems design of a decision support system for better
choices,” 2015.
S. F. Smith, G. J. Barlow, X.-F. Xie, and Z. B. Rubinstein, “Smart
urban signal networks: Initial application of the surtrac adaptive
trafﬁc signal control system.,” in Icaps, 2013.
S. Checkoway, D. McCoy, B. Kantor, D. Anderson, H. Shacham,
S. Savage, K. Koscher, A. Czeskis, F. Roesner, T. Kohno, et al., “Com-
prehensive experimental analyses of automotive attack surfaces.,” in
USENIX Security Symposium, vol. 4, San Francisco, 2011.

[4]

[5] K. Zetter, “Hackers can mess with trafﬁc lights to jam roads and

reroute cars. wired,” 2014.

[6] B. N. Levine, C. Shields, and N. B. Margolin, “A survey of solutions
to the sybil attack,” University of Massachusetts Amherst, Amherst, MA,
vol. 7, p. 224, 2006.
I. Dusparic, J. Monteil, and V. Cahill, “Towards autonomic urban
trafﬁc control with collaborative multi-policy reinforcement learn-
ing,” in 2016 IEEE 19th international conference on intelligent trans-
portation systems (ITSC), pp. 2065–2070, IEEE, 2016.

[7]

[8] P. Mannion, J. Duggan, and E. Howley, “An experimental review
of reinforcement learning algorithms for adaptive trafﬁc signal con-
trol,” in Autonomic road transport support systems, pp. 47–66, Springer,
2016.

[9] A. L. Bazzan, “Opportunities for multiagent systems and multiagent
reinforcement learning in trafﬁc control,” Autonomous Agents and
Multi-Agent Systems, vol. 18, no. 3, pp. 342–375, 2009.

[10] B. Ghena, W. Beyer, A. Hillaker, J. Pevarnek, and J. A. Halderman,
“Green lights forever: Analyzing the security of trafﬁc infrastruc-
ture,” in 8th {USENIX} Workshop on Offensive Technologies ({WOOT}
14), 2014.

[11] Q. A. Chen, Y. Yin, Y. Feng, Z. M. Mao, and H. X. Liu, “Exposing
congestion attack on emerging connected vehicle based trafﬁc signal
control,” in Network and Distributed Systems Security (NDSS) Sympo-
sium, 2018.

[12] C.-C. Yen, D. Ghosal, M. Zhang, C.-N. Chuah, and H. Chen,
“Falsiﬁed data attack on backpressure-based trafﬁc signal control
algorithms,” in 2018 IEEE Vehicular Networking Conference (VNC),
pp. 1–8, IEEE, 2018.

[13] Y. Feng, S. Huang, Q. A. Chen, H. X. Liu, and Z. M. Mao, “Vulnerabil-
ity of trafﬁc control system under cyber-attacks using falsiﬁed data,”
in 97th Annual Meeting of the Transportation Research Board, 2018.
[14] A. Laszka, W. Abbas, Y. Vorobeychik, and X. Koutsoukos, “Detection
and mitigation of attacks on transportation networks as a multi-stage
security game,” Computers & Security, vol. 87, p. 101576, 2019.
[15] J. Geismann, C. Gerking, and E. Bodden, “Towards ensuring secu-
rity by design in cyber-physical systems engineering processes,” in
Proceedings of the 2018 International Conference on Software and System
Process, pp. 123–127, 2018.

12

[16] H. Sedjelmaci, M. Hadji, and N. Ansari, “Cyber security game for

intelligent transportation systems,” IEEE Network, 2019.

[17] T. Alpcan and S. Buchegger, “Security games for vehicular net-
works,” IEEE Transactions on Mobile Computing, vol. 10, no. 2,
pp. 280–290, 2011.

[18] J. R. Douceur, “The sybil attack,” in International workshop on peer-to-

peer systems, pp. 251–260, Springer, 2002.

[19] A. Vasudeva and M. Sood, “Survey on sybil attack defense mecha-
nisms in wireless ad hoc networks,” Journal of Network and Computer
Applications, 2018.

[20] S. Mazloom, M. Rezaeirad, A. Hunter, and D. McCoy, “A security
analysis of an in-vehicle infotainment and app platform,” in 10th
{USENIX} Workshop on Offensive Technologies ({WOOT} 16), 2016.

[21] D. G. Luenberger, Introduction to linear and nonlinear programming,

vol. 28. Addison-Wesley Reading, MA, 1973.

[22] D. Krajzewicz, “Trafﬁc simulation with sumo–simulation of urban
mobility,” in Fundamentals of trafﬁc simulation, pp. 269–293, Springer,
2010.

[23] Y. Duan, X. Chen, R. Houthooft, J. Schulman, and P. Abbeel, “Bench-
marking deep reinforcement learning for continuous control,” in
International Conference on Machine Learning, pp. 1329–1338, 2016.
[24] J. Schulman, F. Wolski, P. Dhariwal, A. Radford, and O. Klimov,
preprint

optimization

algorithms,”

arXiv

“Proximal
arXiv:1707.06347, 2017.

policy

[25] C. Tsigkanos, L. Pasquale, C. Ghezzi, and B. Nuseibeh, “On the
interplay between cyber and physical spaces for adaptive security,”
IEEE Transactions on Dependable and Secure Computing, vol. 15, no. 3,
pp. 466–480, 2016.

Ranwa Al Mallah received her Ph.D. degree
in Computer Science from Polytechnique Mon-
treal. She is currently an assistant professor in
cybersecurity at the Royal Military College of
Canada. Previously, she was a postodoctoral
fellow at Ryerson University. She was also a
member of the SecSI Research Laboratory at
Polytechnique Montreal. Her current research
goal is to develop multidisciplinary, secure and
highly intelligent solutions for the planning, de-
sign and operation of cyber physical systems in
the context of smart cities.

Talal Halabi is an assistant professor in Applied
Computer Science at
the University of Win-
nipeg. Previous to that, he served as a postdoc-
toral fellow at Queen’s University in Kingston,
Canada. He received his Ph.D. in Computer En-
gineering in 2018 from Polytechnique Montr ´eal
at the University of Montreal. He has a M.Res.
in Telecommunications from Saint Joseph Uni-
versity of Beirut, and a M.Eng. in Electrical and
Electronics Engineering from the Lebanese Uni-
versity. His research interests are in the areas of
security and resilience of Cyber-Physical Sys-
tems and the Internet of Things (IoT).

Bilal Farooq received B.Eng. degree (2001)
from the University of Engineering and Tech-
nology, Pakistan, M.Sc. degree (2004) in Com-
puter Science from Lahore University of Man-
agement Sciences, Pakistan, and Ph.D. degree
(2011) from the University of Toronto, Canada.
He is the Canada Research Chair in Disruptive
Transportation Technologies and Services and
an Associate Professor at Ryerson University,
Canada. He received Early Researcher Award
in Qu ´ebec (2014) and Ontario (2018), Canada.
His current work focuses on the network and be-
havioral implications of emerging transportation
technologies and services.

