Anomaly Detection with Generative Adversarial
Networks for Multivariate Time Series

Dan Li, Dacheng Chen, Jonathan Goh, and See-Kiong Ng,

1

9
1
0
2

n
a
J

5
1

]

G
L
.
s
c
[

3
v
8
5
7
4
0
.
9
0
8
1
:
v
i
X
r
a

Abstract—Today’s Cyber-Physical Systems (CPSs) are large,
complex, and afﬁxed with networked sensors and actuators that
are targets for cyber-attacks. Conventional detection techniques
are unable to deal with the increasingly dynamic and complex
nature of the CPSs. On the other hand, the networked sensors
and actuators generate large amounts of data streams that can
be continuously monitored for intrusion events. Unsupervised
machine learning techniques can be used to model the system
behaviour and classify deviant behaviours as possible attacks.
In this work, we proposed a novel Generative Adversarial
Networks-based Anomaly Detection (GAN-AD) method for such
complex networked CPSs. We used LSTM-RNN in our GAN
to capture the distribution of the multivariate time series of
the sensors and actuators under normal working conditions of
a CPS. Instead of treating each sensor’s and actuator’s time
series independently, we model the time series of multiple sensors
and actuators in the CPS concurrently to take into account of
potential latent interactions between them. To exploit both the
generator and the discriminator of our GAN, we deployed the
GAN-trained discriminator together with the residuals between
generator-reconstructed data and the actual samples to detect
possible anomalies in the complex CPS. We used our GAN-AD
to distinguish abnormal attacked situations from normal working
conditions for a complex six-stage Secure Water Treatment
(SWaT) system. Experimental results showed that the proposed
strategy is effective in identifying anomalies caused by various
attacks with high detection rate and low false positive rate as
compared to existing methods.

Index Terms—Anomaly Detection, Multivariate Time Series,

GAN, CPS, IoT

I. INTRODUCTION

Cyber-Physical Systems (CPSs) are interconnected physical
systems typically engineered for mission-critical tasks. Some
example CPSs are water treatment and distribution plants,
natural gas distribution systems, oil reﬁneries, power plants,
power grids, and autonomous vehicles. The emergence of the
Internet of Things (IoT) will further drive the proliferation of
CPSs for a large variety of tasks, resulting in many systems
and devices communicating and operating autonomously over
networks. As such, cyber-attacks are one of the most con-
cerned potential threats to CPSs.

Traditionally, Statistical Process Control (SPC) methods
such as CUSUM, EWMA and Shewhart charts are popular

This work was presented in the 7th International Workshop on Big Data,
Streams and Heterogeneous Source Mining: Algorithms, Systems, Program-
ming Models and Applications on the ACM Knowledge Discovery and Data
Mining conference, August 2018, London, United Kingdom

Dan Li , Dacheng Chen and See Kiong Ng are with the Institute of
Data Science, National University of Singapore, 3 Research Link, Singapore
117602

Jonathan Goh is with the ST Electronics (Info Security) Pte Ltd.
The code is available at https://github.com/LiDan456/GAN-AD

solutions for anomaly detection [1]. These conventional de-
tection techniques are unable to deal with the increasingly
dynamic and complex nature of the CPSs with the advent
of IoT. As such, researchers have moved beyond speciﬁca-
tion or signature-based techniques and begun to exploit both
supervised and unsupervised machine learning techniques to
develop more intelligent and adaptive methods from big data
to identify anomalies or intrusions [2].

However, even with the use of machine learning techniques,
detecting anomalies in time series is still challenging. First,
most of the supervised techniques require enough liable nor-
mal data and labelled anomaly classes to learn from but
this is hardly the case in practice as anomalies are typically
rare. Secondly, most of existing unsupervised methods are
built through linear projection and transformation but there is
often non-linearity in the hidden inherent correlations of the
multivariate time series of complex CPSs. Most of the current
techniques also employ simple comparison between present
state and predicted normal ranges, which can be inadequate
for anomaly detection since the control bounds are not ﬂexible
enough and cannot effectively identify indirect attacks1.

To address these challenges, we propose a novel unsuper-
vised GAN-based Anomaly Detection (GAN-AD) method for
a complex multi-process CPS with multiple networked sensors
and actuators by modelling the non-linear correlations among
multiple time series and detecting anomalies based on the
trained GAN model. Fig. 1 depicts the overall framework of
our proposed GAN-AD. First, to deal with time-series data,
the generator and discriminator are built as two Long-Short-
Term Recurrent Neural Networks (LSTM-RNN), as shown in
the left part of Fig. 1. As in a typical GAN, the generator
(G) generates fake samples from a speciﬁc latent space and
passes that to the discriminator (D) which tries to distinguish
fake from real. Based on the outputs of D, the system will
update parameters of D and G, so that the discriminator will be
trained to be as sensitive as possible to assign correct labels to
both real and fake samples, while the generator will be trained
as smart as possible to fool the discriminator (assigning real
labels to fake samples). After sufﬁcient rounds of iterations,
the generator will have captured the hidden distributions of the
training sequences and that could generate realistic samples.
In other words, G can be viewed as an implicit model of
the CPS. At the same time, the resulting discriminator D is
also able to distinguish fake from real with high sensitivity.

1For one speciﬁc variable (i.e. a sensor or actuator in the CPS), a ”direct
attack” is deﬁned as an attack that is directly inserted to it and affects its
performance, while an ”indirect attack” is an intrusion targeted for another
variable but also affects the performance of the variable.

 
 
 
 
 
 
In other words, D is an intuitive tool for anomaly detection.
In this work, we propose to exploit both G and D for the
anomaly detection task by (i) exploiting the residuals between
real-time testing samples and reconstructed samples based on
the mapping from real-time space to the GAN latent space;
and (ii) discrimination with the machine-learned discriminator
by classifying the real-time series. We depict this aspect of
our proposed GAN-AD in the right part of Fig. 1. As shown,
the testing samples are mapped back into the latent space,
and the corresponding residual loss is calculated based on the
difference between the reconstructed testing samples (by the
trained generator) and the actual testing samples. At the same
time, testing samples are also fed to the trained discriminator
to compute the discrimination loss. The two losses are then
combined to detect potential anomalies for sequential CPS data
(more details are described in Section III-C).

The remaining part of this paper is organized as follows.
Section II introduces the related works. Section III presents
our proposed GAN-AD and derives an anomaly score function.
Section IV introduces the multi-stage Secure Water Treatment
system, which is followed by Section V in which we eval-
uate our proposed GAN-AD on real-time multivariate series.
Finally, Section VI summarizes the whole paper and proposes
possible future work.

II. RELATED WORKS

The basic task of anomaly detection is to identify whether
the testing data conform to the normal data distribution;
the non-conforming points are called anomalies, outliers,
intrusions, failures or contaminants in various application
domains [3], [2]. Anomaly detection is an old but challenging
problem—it has been studied in the statistics community as
early as the 19th century [3].

Based on how the historical training data is used, we can
broadly divide anomaly detection methods into three cate-
gories: i) Statistical Process Control (SPC) techniques, ii) su-
pervised machine learning methods, and iii) unsupervised ma-
chine learning methods. The SPC techniques were extensively
used in the early years for monitoring and controlling quality
of manufacturing processes through univariate or multivariate
analysis [4]. The SPC approaches typically inspect changes
in process mean (mean shifts) and process variance (variance
changes), and try to model the relationship among multiple
variables [5], [?]. Shewhart control charts and CUSUM control
charts are univariate SPC techniques that are usually appied to
detect mean shifts [6], [7]. EWMV control charts are sensitive
to univarite variance changes as well as mean shifts [8].
Although widely used, the aforementioned SPC techniques
cannot model the correlation among various sequences, while
interrelations are common even in traditional manufacturing
systems. As an improvement, Hotelling’s T2 [9], Multivariate
Cumulative Sum (MCUSUM) [10] and Multivariate Expo-
nentially Weighted Moving ASverage (MEWMA) [11] were
proposed to monitor the performance of multiple variables in
a manufacturing system. However, these multivariate methods
require independent and identically distributed (iid) assump-
tion which is often violated in reality [12]. Moreover, the

2

computationally intensive multivariate SPC methods are not
practical for modern CPSs with high complexity and massive
data streams.

Supervised machine learning techniques can also be used for
anomaly detection. A typical approach is to build a predictive
classiﬁcation model for the normal and the anomalous classes.
The classiﬁcation model is trained from the labelled data.
New measurements can then be analysed by the classiﬁer
and be classiﬁed to corresponding categories (normal or
anomalous) automatically [13]. A wide range of supervised
machine learning tecniques has been used for anomaly de-
tection. They include Multivariate Regression models [14],
Bayes Classiﬁer [15], Neural Networks (NN) [16], Fisher
Discriminant Analysis (FDA) [17], Gaussion Mixture Model
[18], Support Vector Data Description (SVDD) [19], Support
Vector Machines (SVM) [20], and tree-structured learning
method [21], [22]. However, supervised classiﬁcation methods
are dependent on the availability of initial labelled training
data. Given that anomalies are typically rare, obtaining enough
accurate labelled anomaly classes is usually challenging.

The unsupervised learning methods—also known as de-
scriptive or undirected classiﬁcation—train models without
lablled classes. Due to their simplicity and ability to handle
large number of process data, unsupervised learning methods
have been wildly used for anomaly detection for various
industrial processes [23]. Popular unsupervised methods in-
clude Principal Component Analysis (PCA) [24] and Partial
Least Squares (PLS) [25]. PCA is a multivariate data analysis
method which preserves the signiﬁcant variability information
extracted from the process measurements and reduces the
dimension for huge amount of correlated data [26]. PLS
is another multivariate data analysis method that has been
extensively utilized for model building and anomaly detection
[27]. Their key performance indicators (Square Predicted Error
(SPE) for PCA and T 2 index for PLS) for anomaly detection
can be achieved with correlation model traine off-line and
online process measurements. However, these unsupervised
methods are only effective to highly correlated data, and
require the data to follow multivariate Gaussian distribution
[28].

The recently proposed GAN framework enables researchers
to build a generative model via adversarial training [29]. The
simultaneous training of a generator and a discriminator in
an adversarial fashion is highly suggestive for using the GAN
framework for anomaly detection. The current successes of
GANs are mainly in generating realistic-looking images. In
our CPS and IoT scenarios, we have to deal with oftentimes
multiple streams of potentially interacting time series data.
However,there has been limited work in adopting the GAN
framework for time-series data todate. To the best of our
knowledge, there are two preliminary work using GAN to
generate continuous valued sequences in the literature—one
to produce polyphonic music with recurrent neural networks
as generator and discriminator [30], and the other uses con-
ditional version of recurrent GAN to generate real-valued
medical time series [31]. In both of these works, the multi-
sequences were treated as i.i.d. and fed to a uniform GAN
framework. This will be inadequate for the IoT and CPSs

3

Fig. 1: GAN-AD: Unsupervised GAN-based anomaly detection for CPSs. On the left is a GAN framework in which the
generator and discriminator are obtained with iterative adversarial training. On the right is the exploitation of both the GAN’s
generator and discriminator for anomaly detection—the generator is used for computing the residual loss between reconstructed
samples and real ones, while the discriminator is used to compute the discrimination loss.

setting given the potential interactions amongst the multiple
time series-generating sensors and actuators involved in the
same or different processes of the complex systems.

Unlike traditional classiﬁcation methods, the GAN-trained
discriminator learns to detect false from real
in an unsu-
pervised fashion, making GAN an attractive unsupervised
machine learning technique for anomaly detection [32]. In
addition, the GAN framework also produces a generator which
is actually an inexplicit model of the target system with its
ability to output normal samples from a certain latent space.
Inspired by [33] and [34] that updates a mapping from the
real-time space to a certain latent space to enhance the training
of generator and discriminator, researchers have recently pro-
posed to train a latent space understandable GAN and apply it
for unsupervised learning of rich feature representations for ar-
bitrary data distributions. [35] and [36] showed the possibility
of recognizing anomalies with reconstructed testing samples
from latent space, and successfully applied the proposed GAN-
based detection strategy to discover unexpected markers for
images. In this work, we will
leverage on these previous
works to make use of both the GAN-trained generator and
discriminator to better detect anomalies based on both residual
and discrimination losses.

Our contributions of this paper are summarized as fol-
lows: i), a novel GAN-based unsupervised anomaly detection
method is proposed to detect anomalies (cyber-attacks) for
complex multi-process cyber-phsyical systems with networked
sensors and actuators; ii), the GAN model is trained with
multiple time series, which adapts GAN from the image
generation domain for time series generation by adopting the
Long Short Term-Recurrent Neural Networks (LSTM-RNN)
to capture the temporal dependency; iii), normal sequences
with high dimension is uniformly utilized to train the GAN
model to discriminate fake from real and reconstruct testing
sequences from speciﬁc latent space simultaneously; iv), the
discrimination loss calculated by the trained discriminator
and the residual loss between reconstructed and real testing
sequences (to make use of both the trained discriminator and
generator) are combined together to detect anomalous points in
the high dimensional time series, and the proposed method is
shown to outperform existing methods in detecting anomalies

due to cyber attacks in a complex Secure Water Treatment
(SWaT) system with six stages [37].

III. ANOMALY DETECTION WITH GENERATIVE
ADVERSARIAL TRAINING

A. GAN with LSTM-RNN

Long Short Term-Recurrent Neural Networks (LSTM-RNN)
had been shown to be capable of learning complex time series
by taking the information in backward (or even forward) time
steps with memorise cells. In this work, in order to handle
time series data of the CPS, both the generator (G) and
discriminator (D) of GAN are substituted by LSTM-RNN.
Following the architecture of a regular GAN framework [29],
the GAN model is trained as a two-player minimax game.

min
G

max
D

V (D, G) = Ex(cid:118)pdata(x) [log D(x)]

+Ez(cid:118)pz(Z) [log(1 − D(G(z)))]

(1)

Speciﬁcally, the generator G, a LSTM-RNN model, implic-
itly deﬁnes a probability distribution for the generated samples,
which can be written as Grnn(z), where z is a distribution
from the random latent space. The discriminator, which is
another LSTM-RNN model, is then trained to minimise the
average negative cross entropy between its predictions and
sequence labels (e.g., train D to recognize as many training
samples as real as possible, and recognize as many generated
samples as false as possible). Thus, the discriminator loss is

Dloss = 1
m
(cid:80)m
⇔ min 1
m

(cid:80)m
i=1 [log Drnn(xi) + log(1 − Drnn(Grnn(zi)))]
i=1 [− log Drnn(xi) − log(1 − Drnn(Grnn(zi)))]

(2)
where xi, i = 1, ..., m is the training samples which should be
recognized as real, and Grnn(zi), i = 1, ..., m is the generated
samples that should be recognized as false.

At the same time, the generator is trained to confuse the
discriminator so that the discriminator would recognize as
many generated samples as real as possible. In other words,
the generator loss is

Gloss = (cid:80)m
⇔ min (cid:80)m

i=1 log(1 − Drnn(Grnn(zi)))
i=1 log(−Drnn(Grnn(zi)))

(3)

Is D correct?Latent SpaceReal Samples from CPSTraining DataReconstructed SamplesGeneratorLSTM-RNNDiscriminatorLSTM-RNNInputsResidual LossDiscrimination Loss+Real Samples from CPSTesting DataModel TrainingAnomaly DetectorInvert MappingGenerated SamplesGeneratorLSTM-RNNDiscriminatorLSTM-RNNInputsThe generator loss and discriminator loss are jointly dealt
with by optimizers and used to update the parameters for Grnn
and Drnn.

Algorithm 1 LSTM-RNN-GAN-based Anomaly Detection
Strategy
loop

if epoch within number of training iterations then

for the kth epoch do

Generate samples from the latent space:
Z = {zi, i = 1, ..., m} ⇒ Grnn(Z)
Conduct discrimination:
X = {xi, i = 1, ..., m} ⇒ Drnn(X)
Grnn(Z) ⇒ Drnn(Grnn(Z))
Update discriminator parameters by minimiz-
ing(descending) Dloss:
min 1
i=1(− log Drnn(xi)
m
− log(1 − Drnn(Grnn(zi))))
Update discriminator parameters by minimiz-
ing(descending) Gloss :
min (cid:80)m
Record parameters of the discriminator and genera-
tor in the current iteration.

i=1 log(−Drnn(Grnn(zi)))

(cid:80)m

end for

end if
for the lth iteration do

Mapping testing data back to latent space:
Er(X tes, Grnn(Z i))
Z k = min

Z

end for
Calculate the residuals:
Res =| X tes − Grnn(Z k) |
Calculate the discrimination results:
P ro = Drnn(X tes)
Obtain anomaly score:
S = Res + P ro

end loop

B. GAN-based Anomaly Score

As a newly arisen unsupervised learning method, both
the generator and generator of GAN are jointly trained to
represent the normal anatomical variability which is helpful
for identifying anomalies. To make full use of the GAN model,
both the trained generator and discriminator should be driven
to make contributions to the anomaly detection. Following
the formulation in [35], the anomaly detection for CPSs time
series data consists of the following two parts.
• Anomaly Detection with Discrimination

Intuitively, the trained discriminator D (after a sufﬁcient
number of iterations of adversarial training) is a direct
tool for anomaly detection since it can distinguish fake
from real with high sensitivity.

• Anomaly Detection with Residuals

As mentioned in previous sections, the trained generator
G, which is capable of generating realistic samples,
is actually a mapping from the latent space to real
data space: G(Z) : Z → X, and can be viewed as

4

that

an inexplicit system model
reﬂects the normal
data’s distribution. Due to the smooth transitions of
latent space mentioned in [38], the generator outputs
similar samples if the inputs in the latent space are
close. Thus, if it is possible to ﬁnd the corresponding
Z k in the latent space for the testing data X tes, the
similarity between X tes and G(Z k) could explain to
which extent is X tes follows the distribution reﬂected
by G. That is to say, residuals between X tes and G(Z k)
could be utilized for identifying anomalies in testing data.

As shown in the right part of Fig. 1, to ﬁnd the optimal
Z k that corresponds to the testing samples, we ﬁrst sample a
random set Z 1 from the latent space and obtain reconstructed
raw samples G(Z 1) by feeding it to the generator. Then,
the samples from the latent space could be updated with the
gradients obtained from the error function deﬁned with X tes
and G(Z).

Er(X tes, Grnn(Z k)) = 1 − Simi(X tes, Grnn(Z k))

min
Zk

(4)
where the similarity between sequences could be deﬁned as
covariance for simplicity.

If after enough iteration rounds the error is small enough,
the samples Z k is recorded as the corresponding mapping in
the latent space for the testing samples. Thus, the residual at
time t for testing samples is calculated as

Res(X tes

t

) =

n
(cid:88)

i=1

| xtes,i

t − Grnn(Z k,i

t

) |

(5)

t ⊆ Rn is the measurements at time step t for
where X tes
n variables. In summary, the the anomaly score for anomaly
detection is

t = λRes(X tes
Stes

t

) + (1 − λ)Drnn(X tes

t

)

(6)

Our GAN-based unsupervised anomaly detection strategy
is summarized in Algo. 1. Mini-batch stochastic optimization
based on Adam Optimizer and Gradient Descent Optimizer is
used for updating the model parameters.

C. Anomaly Detection Framework

We formulate the anomaly detection problem for multivari-
ate time series as follows. First, consider an m-dimensional
time series X = {x(t), t = 1, ..., T } with length T 2, where
x(t) ∈ Rm is an m-dimensional vector of readings for m
variables at time-instance t. Usually, in industry process or
mechanical systems (such as the SWaT system considered in
this paper), sensor measurements are large time-series with
length T (T >> T ). Thus, multiple predeﬁned time-series,
X = {X (1),...,X (L)
}, can be obtained by taking a window of
length T over the raw data streams. The GAN model is trained
based on the normal time-series dataset Xreal, and generates
”fake” samples Xgs that ”look real”. Next, the testing time-
series dataset Xatt (or Xtes), which is real-time CPSs data,

2Usually, T should not be too large with purpose of monitoring and anmaly

detection.

can be analysed by the trained model to detect anomalous
slots.

However, the use of LSTM-RNN with high-dimensional
inputs ( X ⊆ R51 in the SWaT case) incurs higher com-
putational cost than usual deep neural networks. Thus, in this
paper, we adopt the Principal Component Analysis (PCA) to
project the high-dimensional data into a PC projection space
before feeding the data to the GAN model: Xtes ⊆ Rm ⇒
X tes ⊆ Rn. The projection is

P = P CA(Xreal)
X tes = XtesP T

(7)

where Xtes ⊆ Rm, X tes ⊆ Rn, P ⊆ Rn×n, m is the
original dimension (namely the number of system variables)
and n is number of reserved principal components. Then the
projected variables are fed to the GAN-AD model and output
anomaly scores according to Eq. (6). Next, the following label
assigning function could be applied to identify whether the ith
variable of the testing time-series set X tes at time step t is
being attacked or not.
(cid:40)

(cid:17)

(cid:16)

if H

), 1

> τ

Ates,i
t

=

1,
0,

S(xtes,i
t
else

(8)

TABLE I: List of Cyber-attacks Inserted to the SWaT System

5

Process

P1

P2

P3

P4

P5

P1-6

Type
SSSP
SSMP
SSSP
SSMP
SSMP
SSSP

SSSP
SSSP
SSMP
MSMP
MSMP
MSMP
MSMP
MSSP
MSSP
MSSP

Attack Actuators
MV-101; P-101; P-102

Attacked sensors
LIT-101
(LIT-101 and MV-101)
AIT-202
(P-203 and P-205)
(P-201, P-203 and P-205)
LIT-301; DPIT-301 MV-303;MV-303;

MV-304; P-302

MV-504

LIT-401; FIT-401
AIT-504
(P-501 and FIT-502)
(UV-401, AIT-502 and P501)
(P-602, DIT-301 MV-301)
(P-302 and LIT-401)
(LIT-101, P-101 and MV-201)
(AIT-402 and AIT-502)
(FIT-401 and AIT-502)
(P-101 and LIT-301)

*FIT-ﬂower meter; LIT-water level transmitter
*MV-motorized valve
*P-water pump/dosing pump/Sodium bi-sulphate pump
*AIT-chemical analyser; UV-dechlorinator meter
*DPIT-differential pressure indicating transmitter
*SSSP: single stage single point attack
*SSMP: single stage multi point attack
*MSMP: multi stage multi point attack
*MSSP: multi stage single point attack

where t = 1, ..., T, i = 1, ..., n. An anomaly is detected if
the cross entropy error H (., .) for the anomaly score is higher
than a certain value τ .

IV. SWAT SYSTEM AND CYBER-ATTACKS

A. Water Treatment System

The Secure Water Treatment (SWaT) system is an opera-
tional test-bed for water treatment that represents a small-scale
version of a large modern water treatment plant found in large
cities [39] 3.

The water puriﬁcation process in SWaT is composed of
six sub-processes referred to as P 1 through P 6 [37]. The
ﬁrst process is for raw water supply and storage, and P 2
is for pre-treatment where the water quality is assessed.
Undesired materials are them removed by ultra-ﬁltration (UF)
backwash in P 3. The remaining chorine is destroyed in the
Dechlorination process (P 4). Subsequently, the water from P4
is pumped into the Reverse Osmosis (RO) system (P 5) to
reduce inorganic impurities. Lastly, P 6 stores the water ready
for distribution.

B. Cyber-Attacks

Various experiments have been conducted on the SWaT
system to investigate cyber-attacks and respective system
responses. Please refer to the SWat website 4 for a detailed
description of the attacks. A total of 36 attacks were launched
during the 2016 SWaT data collection process [37]. Generally,

3The overall testbed design was coordinated with Singapore’s Public Utility
Board, the nation-wide water utility company, and constructed by a third
party vendor. That collaboration ensured that the overall physical process and
control system closely resemble real systems in the ﬁeld, so that the results
can be applied to real systems as well. For more information, please refer to
https://itrust.sutd.edu.sg/research/testbeds/secure-water-treatment-swat/

4http://itrust.sutd.edu.sg/research/dataset

the attacked points include sensors (e.g., water level sensors,
ﬂow-rate meter, etc.) and actuators (e.g., valve, pump, etc.).
The summary of attacked points based on attack location and
type is shown in Table I.

As a test-bed for research in the area of cyber security,
several related works have been published based on the SWaT
dataset. Some of them focused on special attacks. For example,
a distributed detection method for single stage multiple points
attacks via system speciﬁc physical invariants is proposed in
[40]. Also, Jonathan et al proposed to ﬁnd attacks for the
ﬁrst process via RNN prediction and CUSUM detection [41].
A model-based method, which derives a Kalman ﬁlter, was
applied to estimate the evolution of the system dynamics
on single variable basis [42]. In this work, we consider
all the aforementioned cyber-attacks as anomalous working
conditions and train our proposed GAN-AD method to detect
these anomalies for all the six processes in SWaT (results are
shown in Section V-E).

C. SWaT Dataset

The 2016 SWaT data collection process lasted for a 11 days
with the system operated 24 hours per day. Various cyber-
attacks were implemented on the testbed with different intents
and divergent lasting durations (from a few minutes to an
hour) in the ﬁnal four days. The system was either allowed
to reach its normal operating state before another attack was
launched or the attacks were launched consecutively. The 2016
SWaT dataset and its associated attacks have the following
characteristics 5

• Different attacks may last for different time durations due
to different scenarios. Some attacks do not even take

5The raw data are not plotted in this paper due to page limit—please refer

to [37] for more information.

effect
immediately. The system stabilization durations
also vary across attacks. Simpler attacks, such as those
aiming at changing ﬂow rates, require less time for the
system to stabilize while the attacks that caused stronger
effects on the dynamics of system will require more time
for stabilization.

• Attacks on one sensor (or actuator) may affect the per-
formance on other sensors (or actuators), usually after a
certain time delay.

• Furthermore, similar types of sensors (or actuators) tend
to respond to attacks in a similar fashion. For example,
attacks on the LIT101 sensor (a water level sensor in
process 1) cause abnormal spikes in both LIT101 and
LIT 301 (another water level sensor in process 3) but
do not affect the readings of other sensors and actuators
(such as ﬂow rate sensor and power meter) in the system.
The aforementioned observations suggest we should take a
multivariate approach in the modelling instead of taking each
sensor or actuator in the CPS as an independent data source
(univariate approach). The underlying correlations between
the sensors and actuators could be exploited to better detect
anomalies in the system.

V. EXPERIMENTS

A. Data Pre-processing

In the 2016 SWaT dataset, 51 variables (sensor readings
and actuator states) were measured for 11-days. Within the
raw data, 496, 800 samples were collected under normal
working conditions (data collected in the ﬁrst 7-days), and
449, 919 samples were collected when various cyber-attacks
were inserted to the system. We eliminate the ﬁrst 21, 600
samples from the training dataset since it took 5-6 hours
to reach stabilization when the system was ﬁrst turned on,
according to [37].

We subdivide the original

long multiple sequences into
smaller time series by taking window across raw streams.
Since the SWaT data were recorded every second, we set the
window length as T =120 (i.e. data collected within 2 minutes).
To capture the relevant dynamics of SWaT data, the window
(T =120) is applied to the normal and testing datasets with shift
length SLnor=10 for normal dataset and SLatt=120 for testing
dataset respectively. In order to speed up the GAN training
process and avoid over-ﬁtting, the samples were down-sampled
to one measurement every 10 seconds by taking the median
value. As a result, we obtained 47, 508 training samples and
3, 720 testing samples with sequence length L=12.

B. System Architecture

For this study, we used an LSTM network with depth
3 and 100 hidden (internal) units for the generator. The
LSTM network for the discriminator is relatively simpler with
100 hidden units and depth 1. Inspired by the discussion
about latent space dimension in [31], we also tried different
dimensions and found that higher latent space dimension
generally generates better samples especially when generating
multivariate sequences. Thus, we set the dimension of latent
space as 15 in this study.

6

C. Sample Generation

First, we visualize the data samples generated by our GAN
versus the actual samples from the CPS. As can be observed in
Fig. 2, our GAN generated samples that were clearly different
from the training data in the early learning stage. However,
after sufﬁcient number of iterations, the generator is able to
output realistic samples for the various sensors and actuators
in the system.

We use Maximum Mean Discrepancy (MMD) to evaluate
whether the GAN model has learned the distributions of the
training data. MMD is one of the training objectives for
moment matching networks.

M M D(Zj, Xtes) = 1
n(n−1)
(cid:80)n

− 2
mn
+ 1

m(m−1)

i=1

(cid:80)m

(cid:80)n
(cid:80)n
i=1
(cid:80)m
j=1 K(Z k
(cid:80)m

i , Z k
j(cid:54)=i K(Z k
j )
i , X tes
)
j
, X tes
j(cid:54)=i K(X tes
j
i

i=1

)

(9)

We plot the MMD values across GAN training iterations for
generating univariate samples and multivariate samples in Fig.
3. In both cases, we can observe that the MMD values tend to
converge to small values after 20-30 iterations. Interestingly,
the early MMD values of multivariate samples were lower
than that of univariate samples, and the MMD for multivariate
samples also converged faster than the univariate case. This
suggests that using multiple data streams can help with the
training of GAN model. Fig. 4 shows the performance of our
GAN in generating both univariate and multivariate samples.
As can be seen, after more than 50 iterations,
the GAN
model could generate realistic time sequences even for the
multivariate case.

D. Evaluation Metric

We use the following metrics, namely Accuracy (Accu),
Precision (Pre), Recall (Rec), F1 score, and False Positive Rate
(FPR) to evaluate the anomaly detection performance of GAN-
AD.

Accu =

T P + T N
T P + T N + F P + F N

P re =

T P
T P + F P

Rec =

T P
T P + F N

F1 = 2 ×

P re × Rec
P re + Rec

F P R =

F P
F P + T N

(10)

(11)

(12)

(13)

(14)

where T P is the correctly detected anomaly (At = 1 while
real label Lt = 1), F P is the falsely detected anomaly (At = 1
while real label Lt = 0), T N is the correctly assigned normal
(At = 0 while real label Lt = 0), and F N is the falsely
assigned normal (At = 0 while real label Lt = 1).

7

(a) Generated samples at iteration=2.

(b) Generated samples at iteration=95.
Fig. 2: Comparison between generated samples at different traning stages: GAN-generated samples at early stage are quite
random while those generated at later stages almost perfectly took the distribution of original samples.

(c) Original samples.

case, we compare GAN-AD against PCA-based unsupervised
detection by inspecting the Squared Predicted Error (SPE,
i.e., residual distance). The anomaly detection results and
comparisons are summarized in Table II. We showed the
results on 9 variables (i.e. sensors/actuators) for discussion.
The 9 variables include sensors and actuators from different
processes of the system. They were also attack points for
single-point attacks.

To evaluate the major contribution of this work (i.e. detec-
tion of anomalies for multiple sequences), all the measured
variables are fed uniformly into the GAN-AD model (as
mentioned previously, to decrease the computational load, the
51-dimensional data is projected to a lower dimensional space
with the help of PCA). Since PCA is also a popular unsuper-
vised multivarite anomaly detection method by inspecting the
Squared Predicted Error (SPE, i.e., residual distance) values,
we also evaluate SPE-based detection against our proposed
GAN-AD method.

1) Univariate: As shown in Table II, univariate detection
generally perform poorly with high false positive rate, and low
precision and recall. We also observed that:

• The water level sensors (e.g., LIT-101, LIT-301 and LIT-
401) have the best anomaly detection performance—
both CUSUM and GAN-AD were able to achieve good
detection accuracy rate (near or above 80%). This is
because other than the direct attacks on those sensors,
most of attacks applied to the other sensors (or actuators)
also affected the water levels indirectly.

• The accuracy values of AIT-504 were 70.97% and
86.03% (CUSUM and GAN-AD respectively) were bet-
ter than its earlier counterpart AIT-202 (55.67% and
60.22%). This was because the chemical accumulation in
P 5 (where inorganic impurities are reduced) is relevant
for anomaly detection after the chorine has been added
to the system in P 3 and P 4. P 2 was just a pre-treatment
process where the quality of raw water for P 1 is assessed.
• Detection results with actuators P-101 and MV-303 were
not as poor as expected. Despite of the 0/1 values for
on/off (open/close) states, both CUSUM and GAN-AD
managed to achieve accuracy of up to 71.55% − 75.52%

Fig. 3: MMD: generation for multiple time series v.s. genera-
tion single time series.

TABLE II: Anomaly Detection Rates for All Attacks by
Checking Different Combinations of Measuring Points

Point

P-101

LIT-101

LIT-301

MV-303

AIT-202

DPIT-301

Method
CUSUM
GAN-AD
CUSUM
GAN-AD
CUSUM
GAN-AD
CUSUM
GAN-AD
CUSUM
GAN-AD
CUSUM
GAN-AD
CUSUM
GAN-AD
CUSUM
GAN-AD
CUSUM
GAN-AD
SPE1
SPE5
GAN-AD1
GAN-AD5

Rec
26.86
1.75
43.97
15.43
25.15
17.10
9.02
1.04
17.14
2.67
19.18
3.00
58.53
9.94
100.00
4.32
14.38
14.35
2.25
21.63
7.20
63.64
∗1 means only one principal component is chosen
∗5 means the ﬁrst ﬁve principal components are chosen

Accu
86.63
87.63
75.52
80.72
55.67
60.22
81.50
86.85
84.13
84.40
71.55
87.68
88.28
80.35
12.90
85.40
70.97
86.03
87.24
82.81
90.57
94.80

Pre
36.42
50.00
24.62
22.24
9.24
4.58
12.92
22.22
18.46
25.00
9.67
17.54
47.80
11.68
12.90
39.36
6.23
14.74
20.49
24.92
85.71
93.33

AIT-504

LIT-401

FIT-401

All

F1
0.30
0.03
0.31
0.18
0.13
0.07
0.10
0.02
0.17
0.05
0.12
0.05
0.52
0.10
0.23
0.08
0.08
0.14
0.04
0.23
0.13
0.75

FPR
7.39
9.32
19.83
8.71
39.45
35.48
8.43
0.52
8.41
1.18
22.01
1.74
7.99
10.14
100
1.09
23.01
11.14
1.19
8.87
0.13
0.46

E. Anomaly Detection Results

We evaluate the anomaly detection performance for both
the univariate and multivariate cases. In the univariate case, we
compare the performance against the CUSUM approach which
was used in previous works such as [41]. For the multivariate

8

(a) Univariate.

(b) Multivariate.

Fig. 4: Visualization of generated samples and original samples for both univariate and multivariate cases. Note that in the
multivariate case 4 variables are fed to the GAN model simultaneously.

and 80.72% − 87.68% respectively. While the 0/1 states
do not provide variance across numerical dimension, the
frequency of how often ”0” and ”1” appears along the
time line was still useful for anomaly detection.

• For the water ﬂow-rate sensor FIT-401, the results by
CUSUM was extremely poor while GAN-AD performed
well. One possible reason for CUSUM’s 100% recall and
false positive rate was that CUSUM did not assign any
negative labels to the testing samples (i.e., recognizing all
samples as anomalies) due to unsuitable normal ranges.
the normalized raw data, we
On looking closely at
observed that the values of ﬂow rate meter took a roughly
0/1 shape (just like the actuator states). However, the ﬂow
rate at the high points were not static 1s but varied with
high frequency. CUSUM is unable to capture such ”bi-
variant” characteristic and hence performed badly in this
case. On the other hand, GAN-AD was able to handle
this and generated acceptable accuracy rate.

2) Multivariate: A key contribution of this work is ap-
plying our proposed GAN-AD method to solve the multi-
variate anomaly detection problem for time series data. For
dimensional reduction, instead of directly feeding the high
dimensional data to the GAN-AD model, we used PCA to
project the raw data into a lower dimensional principal space,
as described in Eq. (7).

We plot the variance rate of the ﬁrst 10 Principal Compo-
nents (PC) in Fig. 5. As shown in the ﬁgure, there is one main
PC that explained more than 50% of the variance for the SWaT
data. Also, the PCs after the 5th one contribute little to the
overall variance (near to 0). As such, we projected the SWaT
data to the most variant PC (the ﬁrst one) as well as the ﬁrst
5, and then applied the GAN-AD to detect anomalies for the
projected data. For comparison, we also performed standard

PCA-based anomaly detection by inspecting the testing dataset
with the Squared Predicted Error (SPE,
the residual
i.e.,
distances calculated by PCA projection) method.

The bottom part of Table II shows the performance of
multivariate anomaly detection using SPE and our proposed
GAN-AD. The results showed about 3% − 12% improvement
with the proposed GAN-AD. The GAN-AD method also
achieved 50%-60% higher precision and 5%-40% higher recall
compared with SPE by assigning more true positives (correctly
detected anomalies).

We also compared both GAN-AD and SPE based on PC=1
and PC=5. That is, we conducted SPE with the ﬁrst one and
ﬁve principal components, while the raw data were projected
to the ﬁrst one and ﬁve principal components correspondingly
before being fed into the GAN-AD. It is interesting to see that
for both GAN-AD and SPE the recall rates with PC=5 (hold
more than 90% variate rate) were obviously higher that with
PC=1 (which only contains around 50% variate rate as shown
in Fig. 5), which implies that using more principal components
could reduce false negatives.

In terms of false positive rates, GAN-AD with PC=1
achieved the best FPR amongst all (both univariate and multi-
variate). Although GAN-AD with PC=5 outperformed others
in the aspect of accuracy, precision, recall, and F1, its false
positive rate was slightly higher than that by GAN-AD with
PC=1. Similar phenomenon could be observed in multivariate
detection by SPE. This indicates that the improvement of
detection accuracy (as well as precision and recall) was built
upon the sacriﬁce of more false positives due to the noisy
information brought in by adding four more less important
PC dimensions.

The results in Table II also showed that:
• Generally, the univariate detection cannot compete with

9

capture the extrinsic knowledge about relationships among
the networked sensors and components. We will also conduct
further research on feature selection for multivariate anomaly
detection, and investigate principled methods for choosing the
latent dimension and PC dimension with theoretical guaran-
tees.

ACKNOWLEDGEMENT

This material is based on research/work supported by the
Singapore National Research Foundation and the Cybersecu-
rity R&D Consortium Grant Ofﬁce under Seed Grant Award
No.CRDCG2017-S05.

REFERENCES

[1] B. Sun, P. B. Luh, Q.-S. Jia, Z. O’Neill, and F. Song, “Building energy
doctors: An spc and kalman ﬁlter-based method for system-level fault
detection in hvac systems,” IEEE Transactions on Automation Science
and Engineering., vol. 11, no. 1, pp. 215–229, 2014.

[2] K. Donghwoon, H. Kim, J. Kim, S. C. Suh, I. Kim, and K. J. Kim,
“A survey of deep learning-based network anomaly detection,” Cluster
Computing, pp. 1–139, 2017.

[3] C. Varun, A. Banerjee, and V. Kumar, “Anomaly detection for discrete
sequences: A survey.” IEEE Transactions on Knowledge and Data
Engineering, vol. 24, no. 5, pp. 823–839, 2012.

[4] Y. N. S. Vilbert and Q. Chen, “Computer intrusion detection through
ewma for autocorrelated and uncorrelated data,” IEEE transactions on
reliability, vol. 52, no. 1, 2003.

[5] Ryan and T. P., Statistical methods for quality improvement. New York,

NY: John Wiley & Sons, 2011.

[6] R. S. W., “Control chart tests based on geometric moving averages,”

Technometrics, vol. 1, no. 3, 1959.

[7] M. D. C. and C. M. Mastrangelo, “Some statistical process control
methods for autocorrelated data,” Journal of Quality Technology, vol. 23,
no. 3, 1991.

[8] C.-W. Lu and M. R. R. Jr, “Ewma control charts for monitoring the mean
of autocorrelated processes,” Journal of Quality technology, vol. 31,
no. 2, 1999.

[9] M. Paige, R. E. Swanson, and C. E. Heckler, “Contribution plots: A
missing link in multivariate quality control,” Applied mathematics and
computer science, vol. 8, no. 4, 1998.

[10] W. W. H. and M. M. Ncube, “Multivariate cusum quality-control

procedure,” Technometrics, vol. 27, no. 3, 1985.

[11] L. C. A., W. H. Woodall, C. W. Champ, and S. E. Rigdon, “A
multivariate exponentially weighted moving average control chart,”
Technometrics, vol. 34, no. 1, 1992.

[12] Y. Nong and Q. Chen, “An anomaly detection technique based on a
chisquare statistic for detecting intrusions into information systems,”
Quality and Reliability Engineering International, vol. 17, no. 2, 2001.
[13] K. P. S. Girase and D. Mukhopadhyay, “A survey of classiﬁcation
techniques in the area of big data,” arXiv preprint arXiv, vol. 1, no. 11,
pp. 1–7, 2015.

[14] G. Mustafaraj, J. Chen, and G. Lowry, “Development of room temper-
ature and relative humidity linear parametric models for an open ofﬁce
using bms data,” Energy and Buildings, vol. 42, pp. 348–356, Aug. 2010.
[15] F. Xiao, Y. Zhao, J. Wen, and S. Wang, “Bayesian network based fdd
strategy for variable air volume terminals,” Automation in Construction,
vol. 41, pp. 106–118, 2014.

[16] Z. Du, B. Fan, X. Jin, and J. Chi, “Fault detection and diagnosis
for buildings and hvac systems using combined neural networks and
subtractive clustering analysis,” Building and Environment, vol. 73, pp.
1–11, 2014.

[17] D. Li, G. Hu, and C. J. Spanos, “A data-driven strategy for detection and
diagnosis of building chiller faults using linear discriminant analysis,”
Energy and Buildings, vol. 128, pp. 519–529, 2016.

[18] P. Jaikumar, A. Gacic, B. Andrews, and M. Dambier, “Detection of
anomalous events from unlabeled sensor data in smart building environ-
ments,” in 2011 IEEE International Conference on Acoustics, Speech
and Signal Processing (ICASSP).

IEEE, 2011, pp. 2268–2271.

[19] Y. Zhao, F. Xiao, J. Wen, Y. Lu, and S. Wang, “A robust pat-
tern recognition-based fault detection and diagnosis (fdd) method for
chillers,” HVAC&R Research, vol. 20, no. 7, pp. 798–809, 2014.

Fig. 5: Variance Ratio of Principal Component for the SWaT
data.

multivariate detection. To be speciﬁc, univariate detection
results in widespread low precision and recall (note that
multivariate detection by SPE also performed poorly in
terms of these two factors, which we will discuss in the
next point), and high FPR. This observation demonstrates
the multivariate detection is applicable for complex CPSs
with interconnected IoT of sensors and actuators gener-
ating large amounts of time series.

• In fact, even the baseline multivariate anomaly detection
method SPE can compete with most of the univariate de-
tection results in terms of accuracy,. However, SPE does
not compare well with univariate detection for LIT-101,
DPIT-301, LIT-401 and FIT-301 in terms of precision.
As noisy information can be accumulated when simply
projecting the whole raw dimensions, it can sometimes
cause negative effect in assigning true positives [43].
One possible future work would be to consider select-
ing suitable variables and appointing different weights
according to their importance levels, instead of treating
all the variables uniformly in one plain framework as in
the current study.

VI. CONCLUSIONS

Cyber-Physical Systems are large, complex, and afﬁxed with
networked sensors and actuators that generate large amounts
of data streams. These data streams and their underlying
system dependencies can potentially be mined for dynamic
detection of possible intrusion incidents. In this paper, we
have explored the use of GAN to simultaneously train a deep
learning network to model the distributions of multi-sensor
data streams in a CPS under normal operating conditions,
and another to detect anomalies due to cyber attacks being
carried out against the CPS in an unsupervised fashion. We
have proposed a novel GAN-based Anomaly Detection (GAN-
AD) method that directly utilizes both the discriminator and
the generator trained on multivariate time series to detect
anomalies. We have tested our approach on a complex CPS
dataset from a Secure Water Treatment Testbed (SWaT) and
showed that the proposed GAN-AD was able to outperform
existing unsupervised detection methods.

For future work, we will explore the use of GAN-AD for
other IoT applications such as predictive maintenance and fault
diagnosis for smart buildings and machineries. In terms of
the GAN-AD methodology, instead of simply feeding multiple
sequences uniformly into a fully connected network, we plan
to enhance GAN-AD with a multi-GAN framework to better

10

[20] T. Mulumba, A. Afshari, K. Yan, W. Shen, and L. K. Norford, “Ro-
bust model-based fault diagnosis for air handling units,” Energy and
Buildings., vol. 86, pp. 698–707, 2015.

[21] D. Li, Y. Zhou, G. Hu, and C. J. Spanos, “Fault detection and diagnosis
for building cooling system with a tree-structured learning method,”
Energy and Buildings, vol. 127, pp. 540–551, 2016.

[22] ——, “Fusing system conﬁguration information for building cooling
plant fault detection and severity level identiﬁcation,” in 2016 IEEE In-
ternational Conference on Automation Science and Engineering (CASE).
IEEE, Conference Proceedings, pp. 1319–1325.

[23] Y. Shen, S. X. Ding, X. Xie, and H. Luo, “A review on basic data-
driven approaches for industrial process monitoring,” IEEE Transactions
on Industrial Electronics, vol. 61, no. 11, pp. 6418–6428, 2014.
[24] S. Li and J. Wen, “A model-based fault detection and diagnostic
methodology based on pca method and wavelet transform,” Energy and
Buildings, vol. 68, pp. 63–71, 2014.

[25] H. Xiao, Z. Wang, Y. Liu, and D. H. Zhou, “Least-squares fault
detection and diagnosis for networked sensing systems using a direct
state estimation approach,” IEEE Transactions on Industrial Informatics,
vol. 9, no. 3, pp. 1670–1679, 2013.

[26] W. S., E. K., and G. P., “Principal component analysis,” Chemometrics

and intelligent laboratory systems, vol. 2, no. 1-3, pp. 37–52, 1987.

[27] W. Herman, Partial least squares. Encyclopedia of statistical sciences,

1985.

[28] D. Xuewu and Z. Gao, “From model, signal to knowledge: A data-
driven perspective of fault detection and diagnosis,” IEEE Transactions
on Industrial Informatics, vol. 9, no. 4, pp. 2226–2238, 2013.

[29] G. Ian, J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley, S. Ozair,
A. Courville, and Y. Bengio, “Generative adversarial nets,” in In
Advances in neural information processing systems, vol. ACM, 2014,
pp. 2672–2680.

[30] M. Olof, “C-rnn-gan: Continuous recurrent neural networks with adver-
sarial training,” arXiv preprint arXiv, vol. 1611, no. 09904, 2016.
[31] E. Cristbal, S. L. Hyland, and G. Rtsch, “Real-valued (medical) time
series generation with recurrent conditional gans,” arXiv preprint arXiv,
vol. 1706, no. 02633, 2017.

[32] X. Yuan, T. Xu, H. Zhang, R. Long, and X. Huang, “Segan: Adversarial
network with multi-scale l1 loss for medical image segmentation,” arXiv
preprint arXiv, vol. 1706, no. 01805, 2017.

[33] Y. Raymond, C. Chen, T. Y. Lim, M. Hasegawa-Johnson, and M. N.
Do, “Semantic image inpainting with perceptual and contextual losses,”
arXiv preprint arXiv, vol. 1607, no. 07539, 2016.

[34] S. Tim, I. Goodfellow, W. Zaremba, V. Cheung, A. Radford, and
X. Chen, “Improved techniques for training gans,” in In Advances in
Neural Information Processing Systems, 2016, pp. 2234–2242.

[35] S. Thomas, P. Seebck, S. M. Waldstein, U. Schmidt-Erfurth, and
G. Langs, “Unsupervised anomaly detection with generative adversarial
networks to guide marker discovery,” pp. 146–157, 2017.

[36] Z. Houssam, C. S. Foo, B. Lecouat, G. Manek, and V. R. Chandrasekhar,
“Efﬁcient gan-based anomaly detection,” arXiv preprint arXiv, vol. 1802,
no. 06222, 2018.

[37] G. Jonathan, S. Adepu, K. N. Junejo, and A. Mathur, “A dataset to
support research in the design of secure water treatment systems,”
in In International Conference on Critical Information Infrastructures
Security, 2016, pp. 88–99.

[38] R. Alec, L. Metz, and S. Chintala, “Unsupervised representation learning
with deep convolutional generative adversarial networks,” arXiv preprint
arXiv, vol. 1511, no. 06434, 2015.

[39] M. A. P. and N. O. Tippenhauer, “Swat: A water treatment testbed for
research and training on ics security,” in In International Workshop on
Cyber-physical Systems for Smart Water Networks (CySWater).
IEEE,
2016, pp. 31–36.

[40] A. Sridhar and A. Mathur, “Distributed detection of single-stage mul-
tipoint cyber attacks in a water treatment plant,” in In Proceedings of
the 11th ACM on Asia Conference on Computer and Communications
Security. ACM, 2016, pp. 449–460.

[41] G. Jonathan, S. Adepu, M. Tan, and Z. S. Lee, “Anomaly detection in
cyber physical systems using recurrent neural networks,” in In IEEE
18th International Symposium on High Assurance Systems Engineering
(HASE).

IEEE, 2017, pp. 140–145.

[42] A. C. Mujeeb, C. Murguia, and J. Ruths, “Model-based attack detection
scheme for smart water distribution networks,” in In Proceedings of
the 2017 ACM on Asia Conference on Computer and Communications
Security. ACM, 2017, pp. 101–113.

[43] D. Li, Y. Zhou, G. Hu, and C. J. Spanos, “Optimal sensor conﬁguration
and feature selection for ahu fault detection and diagnosis,” IEEE
Transactions on Industrial Informatics, vol. 13, pp. 1369 – 1380, 2017.

