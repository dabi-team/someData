Intelligent Network Layer for Cyber-Physical
Systems Security

Raj Chaganti∗, Deepti Gupta†, Naga Vemprala‡
∗CSIRT, ExpediaGroup Inc
†Dept. of Computer Science, University of Texas at San Antonio, San Antonio, Texas 78249, USA
‡ University of Texas at San Antonio, San Antonio, Texas 78249, USA
∗raj.chaganti2@gmail.com, †deepti.mrt@gmail.com, ‡naga.vemprala@gmail.com

1
2
0
2

b
e
F
1

]

R
C
.
s
c
[

1
v
7
4
6
0
0
.
2
0
1
2
:
v
i
X
r
a

Abstract—Cyber-Physical System (CPS) has made a tremen-
dous progress in recent years and also disrupted many technical
ﬁelds such as smart industries, smart health, smart transporta-
tion etc. to ﬂourish the nations economy. However, CPS Security
is still one of the concerns for wide adoption owing to high
number of devices connecting to the internet and the traditional
security solutions may not be suitable to protect the advanced,
application speciﬁc attacks. This paper presents a programmable
device network layer architecture to combat attacks and efﬁcient
network monitoring in heterogeneous environment CPS applica-
tions. We leverage Industrial control systems (ICS) to discuss the
existing issues, highlighting the importance of advanced network
layer for CPS. The programmable data plane language (P4)
is introduced to detect well known HELLO Flood attack with
minimal efforts in the network level and also used to featuring
the potential solutions for security.

Index Terms—Cyber Physical Systems, Programmable Data-
planes, Network Security, HELLO Flood Attack, P4 Program-
ming, Software Deﬁned Networking

I. INTRODUCTION

Traditional embedded systems comprise of a micro-
controller, sensors, and actuators. These are tightly coupled
in a chip and communication between these modules happens
using ﬁeld bus. Cyber-Physical System (CPS) is an extension
of embedded systems, wherein these components connected
together in an environment and automatically exchange the
information through high speed networks to achieve a task in
an application [1]. To set a tone, the authors considered Smart
Industries i.e ICS is an application of CPS in the context
of discussing the network layer aspects for CPS security.
Industry 4.0 deﬁnes the growing trend towards automation
and data exchange in technology and processes within the
manufacturing industry, including Internet of Things (IoT),
CPSs, smart manufacture, cloud computing, and artiﬁcial in-
telligence [2]. The future smart industries handle maintenance,
production itself and predict the beneﬁt/loss, and optimize
resource, energy etc. To meet the requirements of Industry
4.0, a fast, reliable, and secured network is also mandatory to
achieve the automation and data exchange.

Software Deﬁned Networking (SDN) came into limelight
for managing the data centers with centralized view of the
network infrastructure [3]. Owing to the advantages that SDN
offers such as security, programmability, the researchers also
explored to use of SDN in other areas like IoT, CPS, and
enterprise network management in cloud [4] [5]. In particular,

the network security solutions can be implemented to handle
the Denial of Service (DoS), route hijacking , topology poi-
soning attacks using SDN [6] [7] [8]. However, an adversary
can also leverage the centralized nature of the architecture to
saturate the controller and dataplane communication channel
or openﬂow switch ﬂow table ﬂooding or controller resource
consumption and perform successful DoS attacks. Some of the
solutions proposed to detect and mitigate the denial of service
attempts in SDN [9] [10].In CPS applications, the attack vector
will be broader [11] and have more ways an adversary can
compromise the application infrastructure. Hence, in complex
network environment with multi-network protocol trafﬁc like
CPS, there is a need to control how the packets should be
processed and controlled in the network layer and improve
the monitoring, security capability. The main contributions of
this paper is as follows

• Present an Intelligent network layer architecture using
programmable dataplanes to conﬁgure, manage and im-
prove the overall Cyber Physical Systems security posture
by considering ICS application.

• Discuss Hello ﬂooding network attacks detection work-
ﬂow using P4 programming language as a case study with
minimal effort in network layer.

• Highlight the importance of advancements in network
layer and potential to adopt the programmable dataplanes
for Cyber Physical System applications in future.
The remainder of the paper is as follows. Section II explains
the paper background and related work in accordance with
our contributions in the paper. Section III discusses a typical
Cyber-Physical System architecture. Section IV illustrates the
proposed programmable network device based architecture for
CPS security. Section V highlights the usage of P4 program-
ming to detect HELLO Flooding attack at the network layer.
Section VI concludes the paper and discuss the future work.

II. BACKGROUND AND RELATED WORK

In this section, the authors discusses the state-of-the art
papers in CPSs focused on security; general discussion on the
sensor node networks describing the HELLO Flood Attacks;
introduction to Software deﬁned networks and the related work
of using SDN architecture in the context of CPS applica-
tions. The most notable malware worm “Stuxnet” was ﬁrst
identiﬁed in 2010 targeting Industrial Control Systems(ICS);

 
 
 
 
 
 
the malware sophistication demonstrated that
the physical
access can have catastrophic impact on the communication,
computation and physical process-based system [12]. So, the
additional physical attributes in CPS poses new security threats
in CPS applications like Industrial Control Systems(ICS),
Autonomous Vehicular Technologies , Smart Grid, Unmanned
Aerial Vehicles (UAV) and Smart Health [3] and a successful
attack exploitation can have signiﬁcant social, economic and
political impact on the society. The tightly bounded nature of
the computational and the physical elements in CPS makes
challenging to combat attacks. The security concerns of CPSs
got an attention in academia few years ago and several works
highlighted the security aspects to secure the CPS applications
[13] [14] [11] [15] [16] [17] [18]. In [13], the authors classiﬁed
the state of the art security solutions for CPS based on
the security analysis type (modeling, detection, prevention,
response) and their application. Yang Gao et al. [11] described
the security threats and attacks in CPSs by categorizing the
threats in accordance with CPS architecture layers such as
physical, network and application layer. They also classiﬁed
the vulnerabilities in CPS as per the management and policy,
platform and network. Tianbo Lu and Artem emphasized the
security and privacy issues in CPSs and also covered the ex-
isting defense mechanisms to defend the security attacks [15]
[16]. Deval et al. focused on highlighting the security issues
in Industrial Control Systems particularly shifting the ICS to
cloud environment and discussed the applicability of machine
learning based security solutions in such scenarios [14]. In
[17], the authors investigated the security vulnerabilities in
the deployed smart home device Nest Thermostat at various
layers like device, hardware and countermeasures has been
recommended to smart home device manufacturers.

Wireless Sensor Networks(WSN) comprises the sensors,
actuators or controllers to communicate among the network
nodes and perform the desire action. The participating nodes
usually less power operated,memory constrained with commu-
nication module; these nodes are prone to network attacks and
shows little resilience to defend the attacks by itself. The most
notable and well known attacks in wireless sensor networks
are Hello Flooding, Sinkhole and Wormhole attacks [19]. An
attacker may compromise the legitimate nodes and control the
other nodes communication for malicious purpose including
listen the legitimate node messages, hijacking the trafﬁc routes,
manipulating the node messages etc. Hello ﬂooding attack is
considered for the scope of this work and other attacks are not
detailed in the paper.

In Hello Flooding attack, The legitimate nodes send HELLO
messages to malicious nodes believing that they are neighbour
nodes, even though the malicious nodes are operating far
away from the legitimate nodes. Later, the legitimate nodes
pass the messages to malicious and results in packet loss or
unauthorized data access. Some of the works addressed wire-
less sensor networks attacks are implementing the intrusion
detection system monitoring framework to capture the network
trafﬁc and apply the machine learning algorithms to determine
the attack [20], applying location veriﬁcation algorithms to

detect the malicious node locations [21], measuring the signal
strength of the nodes as well packet ping response delay times
to determine if the node is located nearest to the legitimate
node or not [22] and the implementation of secured routing
protocols based on cryptography mechanisms to verify the
node identity. However, these techniques require memory and
in wireless sensor
power requirements, which are critical
network nodes. So, there is a requirement of handling network
attacks with no computational and memory burden on the end
devices..

In general, traditional networks are not well suited for dy-
namic, heterogeneous and tightly coupled with physical device
network environments. A delayed network connection between
communication components and the physical devices like
actuators will have a signiﬁcance impact in CPS application
like Industrial Control Systems (ICS) [14]. Another require-
ments is that the global view of the infrastructure to control,
monitor ﬂow of the information in network stack across the
architecture layers. Software Deﬁned Networks(SDN) is a
network paradigm, which decouples the control plane from the
data plane. SDN offers advantages such as programmability,
efﬁcient network management, network global visibility and
security [3]. The open source network protocol Openﬂow acts
as a communication channel between the control plane and
data plane and carry the control plane instructions to update
the ﬂow tables in data plane network devices. Elias Molina
et al. surveyed the state of the art Software Deﬁned Networks
approaches applied to CPS applications, challenges and oppor-
tunities [3]. Ala’ Darabseh1 et al. proposed a Software Deﬁned
CPS multi layered architecture, in which the control layer is
distributed. The authors divided the cyber physical space into
several zones. Each zone is controlled by a local controller, the
local controller can communicate to the adjacent controller and
all the local controllers are controlled by a global controller
[18]. However, these network architectures proposed to use in
CPS application utilize the openﬂow protocol for southbound
API; openﬂow has limited predeﬁned packet ﬁelds that can
parse and process at the switch level.

III. CYBER PHYSICAL SYSTEMS

CPSs consist of the integration of computational systems,
networking and physical processes. This typical architecture
is mainly represented by three main layers,
including the
physical, network and application layers, as shown in Figure
1. This layered architecture extends and adapts existing IoT
and CPS architectures [23], [24].

A. Physical Layer

The bottom layer of this architecture is a rich set of IoT
devices including sensors, actuators, embedded devices, road
side infrastructures, vehicles, etc. These physical objects are
spread across and implemented in smart communities like
hospitals, retail-stores, homes, parking lots. A smart device
user can directly interact with this layer while using and con-
trolling the physical objects. Usually, these smart devices are

in the network layer of the CPS, we envision a Programmable
dataplanes network layer CPS architecture, which can be used
in any of the CPS applications. Programmable protocol inde-
pendent packet processors(P4) is a programmable language to
tell the dataplanes how to process the packets irrespective of
the network protocols and underlying hardware such as ASIC,
FPGA or CPU processing the network packets [27].

The ﬁgure 2 shows the proposed programmable network
layer architecture for the CPS application Industrial Control
System. The sensor nodes are distributed across the industrial
systems to monitor the physical and environmental conditions
such as temperature, pressure or measuring the physical and
chemicals properties of materials etc; sensed data is aggregated
at the base station(Aggregation sensor node), as the nodes can
pass the information to neighbor nodes and so on until the
destined base station receive the data. These base stations can
be gateways to transmit the information. The base station is
connected to the P4 switch to process the sensor data packets
as per the deﬁned P4 program compiled into the P4 switches.
It is also possible to have edge gateway connected to P4
switch for passing the information. In general, the physical
systems and operation technology(OT) centers are connected
via traditional networks possibly high-speed networks. How-
ever, the network administrator has limited control over the
switches due to unable to reconﬁgure the switch program
and not able to process new packet headers. Whereas, the P4
switches can forward the packets of interest to controller for
security monitoring and ﬂag the users when needed as well
as can reprogram the switches to handle multitude of network
protocols involved in CPSs.

SDN controller can communicate P4 switches through
southbound API like Openﬂow to collect the packet speciﬁc
information or packet stats. The security applications are
implemented on top of the controller using machine learn-
ing algorithms or statistical algorithms to detect the attacks
in CPSs. Applications could be Intrusion detection system,
ﬁrewall, secured storage to protect the network from cyber
attempts. Another advantage of using centralized network
monitoring with p4switches is to correlate the security events
in operation technology(OT) infrastructure environment with
the ICS information technology(IT) events. The adversaries
usually choose the easiest path to compromise the ICS IT
infrastructure by phishing the employees and then perform
lateral movement to infect the PLC or SCADA infrastructure
in ICS. As the workforce managed the security of these
platforms in ICS are not the same, it is very likely to evade
the security detection mechanism and impact the physical
systems as well. We can envision the future P4 based ICS
architectures with East and West bound API’s sharing the IT
and OT environment data and securing the ICS with uniﬁed
view of the network data ﬂow.

The PLC or SCADA components are connected to the
sensor or actuators nodes through P4 switches, which can
handle line rate data packet processing and suitable for delay
sensitive CPS applications. As shown in ﬁgure 2, the dotted
lines shows a direct connection from SCADA systems to

Fig. 1: A Typical Layer-Based CPS Architecture.

constrained with limited power, memory, compute, and storage
and also deployed in large and unattended environments.

B. Network Layer

Network communication layer is responsible for estab-
lishing the communication between physical sensors, smart
devices, edge compute nodes or cloudlets, cloud services and
speciﬁc application components. This layer usually comprise
wireless and wired technologies to get all layers connected and
exchange information in CPS. The network layer has multiple
threats such as routing attacks, ﬂooding attacks, spooﬁng
attack targeting the systems [25]. The effective detection and
mitigation of these attacks in CPS requires new strategy and
methodologies.

C. Application Layer

This layer delivers speciﬁc services to end users through
different CPS applications and communicate through cloud
[26]. It deﬁnes various applications in which sensors/actuators
can be deployed, for example, smart transport, smart industry,
smart homes, and smart grid, etc. The application layer is more
responsible for decision-making and also activating commands
for controlling the physical devices. The application layer
attacks such as cross site scripting, SQL Injection, zero day
vulnerabilities target
to compromise the core applications
speciﬁc to industry and results in data breaches.

IV. PROGRAMMABLE DATA PLANE ARCHITECTURE FOR
CPS SECURITY

CPSs inherently require security, low latency, and reliable
data communication to achieve the desired outcome perhaps
controlling the actuator. In addition, the CPS numerous ap-
plications possess various network standard protocols for data
transfer and management of the network devices is difﬁcult
for the network administrators. For example, the wired and
wireless communication protocols such as Ethernet, 6Lowpan,
Zigbee, Bluetooth are widely used in Industrial control systems
to record the sensor data, efﬁcient time critical data transfer be-
tween the actuators and controller. To alleviate these problems

Physical LayerSensors RFID GPS ActuatorNetwork Layer Smart Transport Smart Home Application Layer Smart Industry Smart Grid Smart Health Smart Farming Access Point RouterWiFiSwitch Internet Cloud Fig. 2: Proposed Programmable Data Plane for CPS Security.

sensor nodes and the SDN controller. There are numerous
possibilities to build a data analytics platform on top of SDN
controller. For instance, the north bound interface API calls
to Amazon web services S3 storage to load the data and
leverage the big data analytics platforms in cloud. In addition,
the vendor speciﬁc devices like sensors can be connected
to the vendor cloud through the programmable dataplane
switches to constantly update and manage the devices online.
In this way, our advanced network layer architecture would
beneﬁt the heterogeneous and complex environments network
management. The advanced connectivity capabilities to real
time connection, data analytics and computation capability of
this architecture would be added advantage to current state of
the art for advancement.

V. P4 WORKFLOW FOR HELLO FLOOD ATTACK
DETECTION

In this section, we deﬁne a workﬂow in programmable
dataplanes switches to detect the malicious nodes performing
HELLO Flood attacks in the ad-hoc sensor networks, which
are part of CPS; assess the potential capability of defending
the network security attacks in CPS by leveraging the pro-
grammable Dataplane network architecture.

The network domain speciﬁc language P4 is a formal high-
level description of how the packet headers are processed
and the actions to be performed on the extracted packet

header ﬁelds. We have leveraged P416 version to describe
the P4 usage in the paper. P4 program consists of four
main components. Header describes
the sequence and
structure of a series of header ﬁelds. We have considered
Zigbee(Zep), IEEE 802.15.4, 6LOWPAN, UDP and Data
in
headers
P4 switch. For example, The IEEE 802.15.4 is described
as follows and being used to parse the IEEE 802.15.4 packets.

the 6LOWPAN network packets

to extract

Header IEEE802154 {

framecontrol: 16
Seqnumber: 8
DestPAN: 16
Destination: 48
ExtendSrc: 48
FCS: 16

}
is used to identify the
The second component Parser
to the
headers and header ﬁelds in the incoming packet
P4 switch. When the packet received at
the Ingress port
in P4 switch, the parser starts in the “start” state and then
parses Zigbee packer header. If the Zigbee packer ﬁeld
the parser goes to the
to “EX”,
“ProtoIDString” is equal
next header IEEE802154 parsing and so on until the end state.

Fig. 3: P4 Workﬂow for HELLO FLOOD Attack Mitigation.

State Start {

transition Zigbee;

}
State Zigbee {

packet.extract(hdr.zep)
transition select(hdr.zep.ProtoIDstring){

0x4548: IEEE802154;

}

}
When parsing the packet headers, the header ﬁelds can be
assigned to user deﬁned variable with bit size to perform
operations on those header ﬁelds before departing and egress
out to the switch. P4 program also includes the match-action
tables and whenever there is a match of speciﬁc ﬁeld in the
table, the corresponding deﬁned action is performed on the
packet ﬁelds. For instance, to perform the network address
translation functionality in P4 Switches, the match key is
chosen as IP address and the corresponding primitive action
function set ﬁeld to set
the IP address in the IP header.
We monitor the adversarial nodes receiving HELLO packets
and incremented the count of the number of packets being
received as shown below match-action table. Whenever
a packet
this table matches
the destination address of 6Lowpan header. If there is a
match, the node corresponding counter will be incremented.
The size of table can be deﬁned by the programmer based
on the number of nodes connected to the network for tracking.

is received into the switch,

table dstnodecounter {

actions = {

counterincr;

}
Key = {

hdr.6lowpan.dst: exact;

}
Size=512;

}

The third component

is control program to deﬁne the
control ﬂow of the program. The ﬂow of the program control
is deﬁned in main function to follow the packet processing
pipeline, which is described in the ﬁgure 3. For example, the
typical pipeline used for BMV2 software switch is as follows.

Parser()
verifychecksum()
Ingress()
Egress()
computerchecksum()
Deparser()

The counter table will be executed in Ingress() module of the
packet processing pipeline.

Control ingress {

Apply {

Dstnodecounter.apply();

[11] Yang Gao, Yong Peng, Feng Xie, Wei Zhao, Dejin Wang, Xuefeng Han,
Tianbo Lu, and Zhao Li. Analysis of security threats and vulnerability
for cyber-physical systems. Proceedings of 2013 3rd International
Conference on Computer Science and Network Technology, ICCSNT
2013, pages 50–55, 2014.

[12] Kim zetter. An Unprecedented Look at Stuxnet, the World’s First Digital

Weapon — WIRED, 2014.

[13] Amjad Gawanmeh and Ahmad Alomari. Taxonomy analysis of security
aspects in cyber physical systems applications. 2018 IEEE International
Conference on Communications Workshops, ICC Workshops 2018 -
Proceedings, pages 1–6, 2018.

[14] Deval Bhamare, Maede Zolanvari, Aiman Erbad, Raj Jain, Khaled Khan,
and Nader Meskin. Cybersecurity for industrial control systems: A
survey. arXiv, (November), 2020.

[15] Tianbo Lu, Jiaxi Lin, L. Lingling Zhao, Yang Li, and Yong Peng.
A security architecture in cyber-physical systems: Security theories,
International Journal of
Analysis, Simulation and application ﬁelds.
Security and its Applications, 9(7):1–16, 2015.

[16] Artem A. Nazarenko and Ghazanfar Ali Safdar. Survey on security
and privacy issues in cyber physical systems. AIMS Electronics and
Electrical Engineering, 3(2):111–143, 2019.

[17] Jacob Wurm, Yier Jin, Yang Liu, Shiyan Hu, Kenneth Heffner, Fahim
Rahman, and Mark Tehranipoor. Introduction to Cyber-Physical System
Security: A Cross-Layer Perspective. IEEE Transactions on Multi-Scale
Computing Systems, 3(3):215–227, 2017.

[18] Ala’ Darabseh and Nikolaos M. Freris. A software-deﬁned architec-
ture for control of IoT cyberphysical systems. Cluster Computing,
22(4):1107–1122, 2019.

[19] C. Karlof and D. Wagner. Secure routing in wireless sensor networks:
Attacks and countermeasures. Proceedings of the 1st IEEE International
Workshop on Sensor Network Protocols and Applications, SNPA 2003,
pages 113–127, 2003.

[20] Mohamad Nazrin Napiah, Mohd Yamani Idna Bin Idris, Roziana Ramli,
and Ismail Ahmedy. Compression Header Analyzer Intrusion Detection
IEEE
System (CHA - IDS) for 6LoWPAN Communication Protocol.
Access, 6:16623–16638, 2018.

[21] Rawan S. Hassoubah, Suhare M. Solaiman, and Manal A. Abdullah.
Intrusion Detection of Hello Flood Attack in WSNs Using Location
Veriﬁcation Scheme. International Journal of Computer and Communi-
cation Engineering, 4(3):156–165, 2015.

[22] Virendra Pal Singh, Aishwarya S Anand Ukey, and Sweta Jain. Signal
Strength based Hello Flood Attack Detection and Prevention in Wireless
Sensor Networks. Technical Report 15, 2013.

[23] Deepti Gupta, Smriti Bhatt, Maanak Gupta, and Ali Saman Tosun.
Future smart connected communities to ﬁght covid-19 outbreak. Internet
of Things, page 100342, 2020.

[24] Maanak Gupta, Mahmoud Abdelsalam, Sajad Khorsandroo, and Sudip
Mittal. Security and Privacy in Smart Farming: Challenges and Oppor-
tunities. IEEE Access, 8:34564–34584, 2020.

[25] Devrim Unal and Tubitak Bilgem. Network layer attacks against cyber

- physical systems and mitigations. (April), 2019.

[26] Deepti Gupta, Smriti Bhatt, Maanak Gupta, Olumide Kayode, and
Ali Saman Tosun. Access control model for google cloud iot.
In
2020 IEEE 6th Intl Conference on Big Data Security on Cloud (Big-
DataSecurity), IEEE Intl Conference on High Performance and Smart
Computing,(HPSC) and IEEE Intl Conference on Intelligent Data and
Security (IDS), pages 198–208. IEEE, 2020.

[27] Pat Bosshart, Dan Daly, Glen Gibb, Martin Izzard, Nick Mckeown,
Jennifer Rexford, Cole Schlesinger, Dan Talayco, Amin Vahdat, George
Varghese, and David Walker. P4: Programming Protocol-Independent
Packet Processors. Technical report.

[28] mininet/mininet: Emulator for rapid prototyping of Software Deﬁned

Networks.

[29] p4lang/behavioral-model: The reference P4 software switch.

}

}

The checksum module was not used in our workﬂow, as we

don’t need to replace header ﬁelds in the packet.
The P4 programs need to be compiled to translate into Table
Dependency Graphs(TDG) and then mapping the TDG on to
speciﬁc hardware to allocate the memory and other resources.
The performance and security of the proposed workﬂow in P4
switch is evaluated using Mininet emulator [28] and BMV2
[29] P4 software switch as the next steps of the workﬂow.

VI. CONCLUSION AND FUTURE WORK

In the past, it is very rare to see the network architectural
changes once build the application, as the technological modi-
ﬁcations require build the network from scratch, high cost, and
extensive workforce. The technical requirements in CPSs, IoT
and Machine Learning demands sophisticated network infras-
tructure to deal with security, latency, computation, and data
processing capabilities. This paper proposed programmable
network dataplane based network architecture for implement-
ing CPS applications and in speciﬁc focusing on ICS. To the
end, a security application HELLO Flood attack detection is
implemented using P4 programming procedure and semantics
as a case study to showcase the programmable dataplanes
are good candidate for CPS network layer. Our future work
includes evaluating the performance overhead of the proposed
workﬂow to detect and mitigate the ﬂooding attacks using
Mininet emulation environment and deﬁne a framework to
detect all typical network attacks in CPS applications with
the programmable network layer.

REFERENCES

[1] Syed Hassan Ahmed, Gwanghyeon Kim, and Dongkyun Kim. Cyber
Physical System: Architecture, applications and research challenges. In
IFIP Wireless Days. IEEE Computer Society, 2013.

[2] Jay Lee, Behrad Bagheri, and Hung An Kao. A Cyber-Physical
Systems architecture for Industry 4.0-based manufacturing systems.
Manufacturing Letters, 3:18–23, 2015.

[3] Elias Molina and Eduardo Jacob. Software-deﬁned networking in cyber-
physical systems: A survey. Computers and Electrical Engineering,
66:407–419, 2018.

[4] Garegin Grigoryan, Yaoqing Liu, Laurent Njilla, Charles Kamhoua,
and Kevin Kwiat. Enabling Cooperative IoT Security via Software
Deﬁned Networks (SDN). In IEEE International Conference on Com-
munications, volume 2018-May. Institute of Electrical and Electronics
Engineers Inc., jul 2018.

[5] Sd-wan - software-deﬁned wan - cisco.
[6] Liehuang Zhu, Xiangyun Tang, Meng Shen, Xiaojiang Du, and Mohsen
Privacy-Preserving DDoS Attack Detection Using Cross-
IEEE Journal on

Guizani.
Domain Trafﬁc in Software Deﬁned Networks.
Selected Areas in Communications, 36(3):628–643, mar 2018.

[7] Sungmin Hong, Lei Xu, Haopei Wang, and Guofei Gu. Poisoning
network visibility in software-deﬁned networks: New attacks and coun-
termeasures, 2015.

[8] Mohan Dhawan, Rishabh Poddar, Kshiteej Mahajan, and Vijay Mann.
SPHINX: Detecting Security Attacks in Software-Deﬁned Networks.
2015.

[9] Rajendra V. Boppana, Rajasekhar Chaganti, and Vasudha Vedula. Ana-
lyzing the vulnerabilities introduced by ddos mitigation techniques for
volume 1055, pages 169–184. Springer,
software-deﬁned networks.
2020.

[10] Rajasekhar Chaganti and Rajendra V. Boppana. Handling controller

saturation attacks in sdn based data center network. 2016.

