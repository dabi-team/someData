8
1
0
2

r
p
A
5

]

Y
S
.
s
c
[

2
v
9
9
0
3
0
.
2
0
8
1
:
v
i
X
r
a

Blockchain-Assisted Crowdsourced Energy Systems

Shen Wang*, Ahmad F. Taha*, and Jianhui Wang**

1

Abstract—Crowdsourcing relies on people’s contributions to
meet product- or system-level objectives. Crowdsourcing-based
methods have been implemented in various cyber-physical sys-
tems and realtime markets. This paper explores a framework for
Crowdsourced Energy Systems (CES), where small-scale energy
generation or energy trading is crowdsourced from distributed
energy resources, electric vehicles, and shapable loads. The
merits/pillars of energy crowdsourcing are discussed. Then,
an operational model for CESs in distribution networks with
different types of crowdsourcees is proposed. The model yields
a market equilibrium depicting traditional and distributed gen-
erator and load setpoints. Given these setpoints, crowdsourcing
incentives are designed to steer crowdsourcees to the equilibrium.
As the number of crowdsourcees and energy trading transactions
scales up, a secure energy trading platform is required. To that
end, the presented framework is integrated with a lightweight
Blockchain implementation and smart contracts. Numerical tests
are provided to showcase the overall implementation.

I. INTRODUCTION
Crowdsourcing, democratized marketplaces, and collabo-
rative production are all attributes of the sharing economy.
People’s drive for a self-sustainment has driven the world
to this disrupting economy. By 2025, spending of the US
sharing economy is projected to exceed $335 billion [1].
The democratization and evolution of the world markets in
general, and potentially future energy systems, necessitates
novel crowdsourcing-based methodologies to deal with this
evolution. This paper puts forth the high-level implementa-
tion of crowdsourcing design mechanisms for collaborative
production and consumption in energy markets that are re-
liant on small-scale distributed generation with the assistance
of cryptocurrencies and Blockchain-assisted energy systems
operation—leading to Crowdsourced Energy Systems (CES).

A. Crowdsourced Energy Systems: A Simple Example

Crowdsourcing is a major drive for various industries, and
has been utilized in various disciplines such as medicine, cyber
physical systems, and engineering system design. The central
theme in crowdsourcing is the utilization of the crowd’s power
to achieve either product-level or system-level objectives.

To understand how crowdsourcing can be applied in energy
systems, we provide an analogy from the Internet’s most
popular crowdsourcing markets, the Amazon Mechanical Turk
(MTurk). MTurk enables people to post jobs with monetary
rewards and expiry dates. The tasks in CESs can be plugging in
an electric vehicle, charging/discharging a battery (at a certain
rate), and supplying the power network with renewable energy
via solar panels—with the objective of satisfying a demand
shortage. These tasks can be automated via smart inverters,
plugs, and meters, while interfacing with power utilities.

*Department of Electrical

and Computer Engineering, The Uni-
versity of Texas
at San Antonio, Texas 78249. **Department of
Electrical Engineering, Southern Methodist University, Dallas, Texas
75205. Emails: mvy292@my.utsa.edu, ahmad.taha@utsa.edu,
jianhui@smu.edu. This work will be presented at the IEEE Power &
Energy Society General Meeting 2018 in Portland, Oregon, August 5–10,
2018.

The human component is manifested through the interaction
between the crowdsourcer (CES operator or utility) and the
crowdsourcee (energy producer). Some of these tasks have
urgent expiry deadlines, while others are predetermined ahead
of time as in day-ahead markets. Energy-aware people can
then accept or decline the proposed transactions. The utility’s
objective is to guarantee that any computed, realtime market
equilibrium is robust enough to a large percentage of crowd-
sourcees declining the transactions—while guaranteeing the
grid’s transient stability and operational constraints as well
as satisfying environmental regulations. In the future, with
the transformation in the role of utilities, these transactions
can be encrypted through smart contracts via the Blockchain
technology with or without cryptocurrencies [2].

B. Related Literature

Recent research studies have investigated integrating the
operation of distributed energy resources (DERs) in distri-
bution networks and deregulated power systems. The focus
of the majority of these studies is on unit commitment and
economic dispatch problems as well as scheduling of DERs,
given load and renewables uncertainty. The work in [3] investi-
gates security-constrained unit commitment with volatile wind
power. The authors in [4] present computationally tractable
optimization routines to manage the operation distribution
networks with high PV penetration.

Another branch of related work studies the design of de-
mand response signals and incentives to drive DER owners to
contribute to energy production. The authors in [5] investigate
the problem of utilizing heterogeneous, crowdsourced energy
storage systems in microgrids to perform demand response. In
summary, there are two major approaches to demand response:
(a) Reducing the total demand by either using their local
DERs or shifting demand as the grid requires; (b) Designing
robust generator setpoints to reduce the total generation while
considering worst-case scenarios [6]. In this paper, we focus
on the ﬁrst kind of demand response schedules, in addition
to the design of monetary crowdsourcing incentives to steer
DERs to a certain market equilibrium.

Section II discusses the merits of energy crowdsourcing.
Section III presents an integrated optimal power ﬂow opti-
mization model for CESs. The solution computed from this
optimization model is referred to as the market equilibrium
that includes generator setpoints. Given the setpoints, Sec-
tion IV proposes simple crowdsourcing incentives to steer
crowdsourcees to the computed equilibrium. Section V ex-
plores a Blockchain application of this framework. Section VI
concludes with simple numerical tests.

II. ENERGY CROWDSOURCING MERITS AND PILLARS

We outline three merits of studying crowdsourcing in smart
grids. First, power generation shifts from being centralized

 
 
 
 
 
 
2

adjustments or decisions based on realtime notiﬁcations and
decisions from the utility. The distinction between these two
types of users is needed as it resembles projected market
setups. We deﬁne these two types as CT 1 and CT 2.

A. CES Optimal Power Flow with Distributed Generation

Let i denote the bus index of the distribution system
and t denote the time-period. In this paper, we consider
bulk, dispatchable generation from traditional synchronous
generators, renewable energy generation from solar panels,
fully controllable stationary batteries, uncontrollable loads,
and shapable loads. Due to the space limitation, we only lin-
guistically describe the operational setup instead of including
the full optimization models of batteries, uncontrollable loads
and shapable loads. The detailed models are common in the
literature [9], [10].

1) Solar Energy Generation: Solar panels generate real
power pr
i,t at bus i ∈ R ⊂ C (R is the set collecting the
buses with solar panels) in time-period t. Note that Type 1
crowdsourcees do not control whether pr
i,t is fed into the grid
or not, whereas Type 2 crowdsourcees dictate whether to use
pr
i,t locally or sell it to the CES operator or other users.
2) Stationary Batteries: Batteries are modeled as dispatch-
able loads that can withdraw or inject power denoted as pb
i,t
for i ∈ B ⊂ C (B is the set collecting the buses with batteries).
3) Uncontrollable and Shapable Loads: Uncontrollable
loads (lights, plug loads, street lights, etc . . . ) are considered
to be given and are denoted by su
i,t for all i ∈ L (loads
can include reactive power). We also consider shapable loads,
deﬁned by ss
i,t for i ∈ Ls ⊂ L (Ls is the set collecting
the buses with shapable loads), such as electric vehicles with
ﬂexible power proﬁle but ﬁxed energy demand in 24 hours.
These loads must be charged during a certain period of time.
4) Dispatchable Generators: Dispatchable generators are
considered in this paper with a quadratic cost functions
Ci,t(pg
i,t for i ∈ G.
5) Branch Flow Model and Operational Constraints: For
the above types of generators and loads, we consider that they
all have certain linear operational constraints denoted by X
(see [9] for concrete battery and shapable loads models). For
Type 2 crowdsourcees, these operational constraints or energy
usage preferences are communicated ahead of time. For all
buses in the network, deﬁne x1 := (pb, pr, sg, su, ss) as the
vector collecting the apparent power output of DERs, loads,
and generators. To model power ﬂow in distribution networks,
we adopt a branch ﬂow model ﬁrst proposed in [11]. For
simplicity, all of the branch ﬂow variables are included in
a single variable x2 := (v, l, P , Q, p, q). The branch ﬂow
model is denoted by BranchFlowModel(x2) in terms of x2.
6) Overall Optimization Problem: The overall CES Opti-

i,t) in terms of the real power generated pg

mal Power Flow (CES-OPF) can be compactly written as:
T
(cid:88)

CES-OPF: minimize

Ct(x1t, x2t)

(1a)

x1t ,x2t

t=1

subject to

x1t ∈ X
BranchFlowModel(x2t).

(1b)

(1c)

The optimization (1) minimizes the cost functions of tradi-
tional generators and other user-deﬁned cost functions on the

Fig. 1. The major components of crowdsourcing-driven energy systems.

and fuel-dependent to distributed, small-scale, and renewables-
dependent. Utilities can crowdsource the time-critical energy
generation from consumers and loads with DERs, when util-
ities cannot meet the demand or the minimum percentage
of renewable penetration. the latter consequently empowers
people to be more proactive towards energy systems issues,
which can in turn raise awareness and increase relevance of
energy systems challenges.

Second, in its essence, crowdsourcing mechanisms explore
the design of incentives to steer people or users to perform
certain duties, while expanding the set of distributed genera-
tion contributions. This can take the form of demand response
in power systems through dynamics-aware, distributed pricing
schemes that ensure the grid’s stability while minimizing costs.
Third, the growth of Blockchain and cryptocurrencies can
speed up the elimination of the so-called middle-man in energy
systems, by facilitating secure peer-to-peer energy transac-
tions. In fact, utilities in Austria have been experimenting
with energy trading via Blockchain, and solar panel owners
in Brooklyn are energy trading via the same platform [7].
However, these trades cannot scale-up without a computational
framework that ensures reliability of smart grids.

The focus of this paper is on establishing a framework that
guides the exponential increase of such crowdsourced trans-
actions while not being restricted to cryptocurrencies. In [8],
the author presents the short history and ambitious future of
crowdsourcing. The main pillars of successful crowdsourcing
in energy systems are depicted in Fig. 1, for CESs. For brevity,
we do not discuss these pillars in depth here.

III. INTEGRATED OPERATIONAL MODEL OF CESS

We model a distribution network by a graph T := (N , E).
The root of the tree T is a substation bus that is connected
to the transmission network. A feeder connects the substation
to this distribution area. Deﬁne the partition N = G (cid:83) C (cid:83) L,
where G collects the buses with a generator; C = {1, . . . , nc}
collects the buses containing nc agents with DERs who signed
up for crowdsourcing schedules; L = {1, . . . , nl} collects
nl load buses. The crowdsourcer here is the utility company
or any other system operator. We distinguish between two
types of DERs in C, also referred to as crowdsourcees. The
ﬁrst
type commits in the day-ahead market (and perhaps
monthly or yearly) to the crowdsourcing tasks requested by the
system operator. Type 2 crowdsourcees provide near realtime

Designing the Right Hybrid (Dynamic/Data) ModelsOffering the Right Crowd IncentivesPicking the Right CES CrowdDeveloping Simple yet Enticing Operator-to-Consumer InteractionCES Pillarsbattery operation or the shapable loads for all crowdsourcees,
subject to the branch ﬂow model, operational and thermal limit
constraints. Using the second order cone program (SOCP)
relaxation of the branch ﬂow model [12], CES-OPF can
formulated as a convex program with SOCP constraints.

The CES-OPF can be decomposed into small optimization
subproblems by decoupling variables and constraints—the
overall problem can be then solved through a decentralized
ADMM algorithm; see [13]. Another approach is to simply
solve CES-OPF in a centralized fashion. For medium- or
is plausible to solve
small-scale distribution networks,
CES-OPF in a centralized fashion after requesting the user’s
preferences—denoted by X —ahead of time, as an alternative
to implementing the decentralized ADMM algorithm.

it

IV. CROWDSOURCING INCENTIVES

As outlined in Section III, we solve CES-OPF and obtain
the equilibrium (or setpoints) for the three major energy
producers: utility-scale power plants, Type 1 and Type 2
crowdsourcees. Due to the nature of contracts with tradi-
tional generators and Type 1 crowdsourcees, the CES operator
controls all of these decision variables except pr
for
i ∈ (B (cid:83) R (cid:83) Ls) (cid:84) CT 2 meaning that additional incentives
are to be provided for Type 2 crowdsourcees to accept the
solutions of (1) in realtime markets. Here, we outline the
design of economic incentives to steer Type 2 crowdsourcees
to the equilibrium solution. The problem of designing realtime
pricing and incentives is a recent one in the smart grid
literature [14]–[16]. These methods fuse simple game- and
control-theoretic frameworks to obtain optimal pricing and
operation with regulation. Here, we use a different approach
to solve for monetary incentives.

i , pu
i

i , pb

i,t where λa

the equilibrium of the ﬁrst

The distributed locational marginal price (DLMP) vector
λt is computed at time-period t by ﬁnding the dual variables
associated with the power balance equations in branch ﬂow
model (1c). We consider that Type 2 crowdsourcees at bus
i receive λi,t + λa
i,t is the additional monetary
reward—an optimization variable that we solve for. Note
that
two energy producers is
dispatchable through smart grid communication technologies.
The crowdsourcing incentives are deﬁned at the local com-
munity level in a distribution system. We also assume that (a)
the operator has allocated a budget to spend on the realtime
incentives at the feeder level with a budget range [bmin
],
and (b) there is a demand shortage or surplus dt. Assuming
that ueq.
i , pb
for each bus) is the
equilibrium computed by (1) for i ∈ CT 2, the proposed CES
Incentive Design (CES-ID) routine at time t is formulated as:

(which includes pr

i , or pu
i

, bmax
t

t

i

CES-ID: min
λa,ua

|CT 2|
(cid:88)

i=1

ηi

(cid:0)λi,t + λa

i,t

(cid:1) ua

i,t + ζi|ua

i,t − ueq.
i,t |

s.t. bmin

t ≤

|CT 2|
(cid:88)

i=1

i,tua
λa

i,t ≤ bmax

t

|CT 2|
(cid:88)

i=1

i,t ≥ dt, ui,t ∈ U a
ua

i,t, λa

i,t > 0.

(2a)

(2b)

(2c)

3

TABLE I
VARIOUS IMPLEMENTATIONS OF BLOCKCHAIN. POW AND PBFT STAND
FOR PROOF OF WORK AND PRACTICAL BYZANTINE FAULT TOLERANCE.

Year Released
Cryptocurrency
Network
Transactions
Consensus
Smart Contracts
Language

Bitcoin
2009
bitcoin
public
anonymous
PoW
None
C++

Ethereum
2015
ether
public/permissioned
anonymous/private
PoW
Solidity/Serpent
C++/Python

Hyperledger Fabric
2017
none
permissioned
public/conﬁdential
PBFT
Chaincode
Golang/Java

In (2), λa and ua are the vector variables collecting the
monetary incentives and the generation quantities for i ∈ CT 2;
ueq.
is the equilibrium solution from CES-OPF; ζi and ηi
i
are crucial weights that are obtained based on the historic
preferences of crowdsourcee i and their willingness to accept
the offers; U a
i depicts linear operational constraints of the
network and Type 2 crowdsourcees. The objective of CES-ID
is to steer the crowdsourcees to accept the market equilibrium
computed in (1) through the budgeted incentives.

i ua
i

i ua

Problem (2) is non-convex due to the term λa

i . This
routine can be relaxed to a linear problem after substituting
yi = λa
in the objective and constraints, and adding
yi > 0 as a necessary constraint. This linear relaxation is an
adaptation of the reformulation linearization technique [17].
Given this linearization, (2) is a tractable linear program that
ﬁts the need of realtime crowdsourcing and ancillary services
of Type 2 crowdsourcees.

V. BLOCKCHAIN AND SMART CONTRACTS FOR CESS

A. Blockchain for Crowdsourced Energy Systems

Blockchain is a distributed peer-to-peer, computational
database that underlines and facilitates transactions through
cryptocurrencies such as Bitcoin and Ether [18]; Blockchain
technology can also be used with traditional currencies through
tokens. The main components in a Blockchain are interlinked,
secure, and time-stamped blocks that deﬁne transactions be-
tween users. The main motivation behind Blockchain is the
need to have a distributed, secure system that eliminates the
need for the so-called middle man or a central authority
that organizes transactions. Novel cryptographic techniques
are central
to Blockchain, ensuring that any trade of any
commodity between two users is securely replicated through-
out all decentralized databases. Through cryptocurrencies,
Blockchain ensures that transactions cannot be forged. The
reader is referred to [18] for an in depth study on Blockchain,
Ethereum, and Bitcoin with applications in various industries.
Smart contracts—protocols developed to verify the perfor-
mance of a contract—are a major component of Blockchain.
Smart contracts and Blockchain provide an excellent plat-
form to perform energy trading transactions. In particular,
the authors in [2], [19] provide a high-level description to
the main merits of using cryptocurrencies and Blockchain in
energy systems. Managing the contracts through Blockchain is
favored, as the system operator has many incentives to manage
the transactions via a secure, third party. This, unlike other
Blockchain applications, still requires a central authority—the

utility company or the system operator managing the grid.
Small-scale energy trading without a central authority can take
place (see [7]), yet the scaling of these transactions to include
thousands of people and millions of daily energy transactions
without the utility interfering is remote in today’s markets. To
that end, the proposed architecture in this paper still requires
a central authority to manage the grid.

The authors in [20] design a smart contract

to enable
energy producers to sell excess energy to the highest bidder
through an auction which incentives honest bidding. Through
the Ethereum Blockchain, this design is tested at Washington
State University campus. The study in [21] investigates a
paradigm for providing demand-side management services
where households can manage their surplus/shortage of energy
through self-enforcing smart contracts via Blockchain. The
authors in [10] develop a novel Blockchain-based architecture
for peer-to-peer energy markets which includes a decentralized
optimal power ﬂow formulations, similar to (1), that is then
envisioned through smart contracts. Recently, a Blockchain-
based transactive energy systems implementation that pre-
serves privacy of users is proposed in [22].

B. Blockchain Implementations and Energy Inefﬁciency

Table I summarizes the attributes of different implementa-
tions of Blockchain. A consensus protocol is used to ensure
the unambiguous ordering of transactions and guarantee the
integrity and consistency of the Blockchain across distributed
nodes [23]; various consensus protocols have been developed
for Blockchain implementations. An important component of
Blockchain is the mining process where miners validate new
transactions and record them on the global Blockchain ledger.
In Proof of Work (PoW) consensus protocol, used by Bitcoin
and Ethereum, miners race to add new transactions to the
ledger by competing to solve a complex, computationally
intensive and energy-consuming cryptographic puzzle. When
scaled, this would result in an energy inefﬁcient platform that
defeats the purpose of sustainable energy systems. In fact,
the annual estimated electricity consumption of Bitcoin is
46.86 Terawatt-hour—a staggering 0.21% of worlds electricity
consumption [24]. For any Blockchain implementation to be
successful in CESs, the energy consumption of the consensus
technology for each energy trading transaction should only
require little energy. To that end, we propose using the IBM
Hyperledger Fabric [25] that uses Practical Byzantine Fault
Tolerance (PBFT) as its consensus protocol. PBFT consumes
orders of magnitude less energy in comparison with other
consensus protocols [26]. In addition, Hyperledger Fabric
requires minimal user interaction as a simple, user-driven
interactive front end can be developed using this technology.

C. Blockchain Implementation using Hyperledger Fabric

We implement Blockchain and smart contracts with the
optimization as shown in Fig. 2. It consists of many nodes
that communicate with each other, runs smart contracts called
chaincode, holds state and ledger data. The clients shown
are the end-users in the distribution network and can perform
energy trading. Thousands of clients are allowed to connect
to the Fabric network with minimal training. After enrolling

4

Fig. 2. Architecture of combining Blockchain and smart contract with the
optimization formulations presented in this paper.
in the network via Fabric-CA [25], a certiﬁcate needed for
enrollment through a sdk, clients can communicate with a peer
through fabric-sdk-node [25], update their preferences
to Blockchain and store it in World State [25] which is the
database. Peers are used to commit transactions and maintain
the world state and a copy of the ledger (consists of blocks).
The chaincode in Hyperledger Fabric is also deployed to peers
and is executed as a user satisﬁes their commitments. Then,
ordering service, akin to mining in Bitcoin, generates new
blocks in Fabric. Each peer will receive ordered state updates
in the form of blocks from the ordering service. In this way,
the order and number of blocks, a form of Blockchain, are
maintained and synchronized for all peers.

Algorithm 1 illustrates how the developed optimization
routines are implemented with Blockchain and smart contracts.
First, crowdsourcees communicate their preferences X with
the utility or a system operator. Given these preferences, CES-
OPF (1) is solved for the market equilibrium. Smart contracts
are then established for users i ∈ G (cid:83) CT1 and are rewarded
depending on their long-term contractual agreement with
the utility. For Type 2 crowdsourcees operating in realtime
markets, the CES-ID (2) is solved to obtain the monetary
incentives communicated with the users. If client i accepts the
monetary incentive, then the transaction is ﬁnalized. However,
if client i refuses the incentive, the incentives are increased
up to a certain budget. This can occur up to a certain
threshold, where the operator can alternatively supplement the
generation from traditional sources. The parameters ηi and ζi
for crowdsourcee i are included to model their preferences and
willingness to accept or reject the incentives.

Algorithm 1 Blockchain-Assisted CES Operation
1: Crowdsourcees input preferences and operational constraints X
2: Solve CES-OPF (1); obtain generator setpoints for i ∈ G (cid:83) CT 1
3: Establish smart contracts for users i ∈ G (cid:83) CT 1
4: Solve CES-ID (2) for generators i ∈ CT 2; send incentives to

Type 2 crowdsourcees with incentive λa + λ

5: if user i ∈ CT 2 accepts incentives then
Finalize Blockchain transaction
6:
7: else
8:
9:
10:

Increase incentives for user i up to a threshold/budget
Update parameters (ηi, ζi) to CES-ID (2) for user i
If user i rejects incentive again, supplement generation from
traditional generators i ∈ G

11: end if
12: Reconcile payments weekly or monthly

HyperLedger Fabric                   NetworkBlockchainfabric-sdk-nodeQuery && Invokes chaincode...Client 1ChaincodeWorld StatePeerMembership Service(Fabric CA)EnrollClient 2Client nChaincodeWorld StatePeerChaincodeWorld StatePeerChaincodeWorld StatePeerOrdering ServiceCES-OPFCES-ID5

REFERENCES
[1] R. Telles, “Digital matching ﬁrms: A new deﬁnition in the sharing

economy space,” Tech. Rep., 2016.

[2] C. Burger, A. Kuhlmann, P. Richard, and J. Weinmann, “Blockchain in
the energy transition. a survey among decision-makers in the german
energy industry,” Tech. Rep., 2016.

[3] J. Wang, M. Shahidehpour, and Z. Li, “Security-constrained unit com-
mitment with volatile wind power generation,” IEEE Transactions on
Power Systems, vol. 23, no. 3, pp. 1319–1327, 2008.

[4] S. S. Guggilam, E. DallAnese, Y. C. Chen, S. V. Dhople, and G. B.
Giannakis, “Scalable optimization methods for distribution networks
with high pv integration,” IEEE Transactions on Smart Grid, vol. 7,
no. 4, pp. 2061–2070, 2016.

[5] M. H. Hajiesmaili, M. Chen, E. Mallada, and C.-K. Chau, “Crowd-
sourced storage-assisted demand response in microgrids,” in Proceedings
of
the Eighth International Conference on Future Energy Systems.
ACM, 2017, pp. 91–100.

[6] R. Deng, Z. Yang, M. Y. Chow, and J. Chen, “A survey on demand
response in smart grids: Mathematical models and approaches,” IEEE
Transactions on Industrial Informatics, vol. 11, no. 3, pp. 570–582, June
2015.

[7] J. Cottrell and M. Basden, “How utilities are using blockchain to

modernize the grid,” Mar 2017.

[8] J. Howe, Crowdsourcing: Why the Power of the Crowd Is Driving the
Future of Business, 1st ed. New York, NY, USA: Crown Publishing
Group, 2008.

[9] J. A. Taylor, Convex optimization of power systems.

Cambridge

University Press, 2015.

[10] E. Munsing, J. Mather, and S. Moura, “Blockchains for decentralized
optimization of energy resources in microgrid networks,” in Conference
on Control Technology and Applications, 2017.

[11] M. E. Baran and F. F. Wu, “Optimal capacitor placement on radial
distribution systems,” IEEE Transactions on power Delivery, vol. 4,
no. 1, pp. 725–734, 1989.

[12] M. Farivar and S. H. Low, “Branch ﬂow model: Relaxations and
convexiﬁcation—part i,” IEEE Transactions on Power Systems, vol. 28,
no. 3, pp. 2554–2564, 2013.

[13] Q. Peng and S. H. Low, “Distributed algorithm for optimal power ﬂow
on a radial network,” in Decision and Control (CDC), 2014 IEEE 53rd
Annual Conference on.

IEEE, 2014, pp. 167–172.

[14] A. Jokic, M. Lazar, and P. van den Bosch, “Real-time control of power
systems using nodal prices,” International Journal of Electrical Power
& Energy Systems, vol. 31, no. 9, pp. 522 – 530, 2009, power Systems
Computation Conference (PSCC) 2008.

[15] C. Langbort, “On real-time pricing for strategic agents,” in Workshop

on Multi-Agent Coordination and Estimation, 2010.

[16] T. Namerikawa, N. Okubo, R. Sato, Y. Okawa, and M. Ono, “Real-
time pricing mechanism for electricity market with built-in incentive
for participation,” IEEE Transactions on Smart Grid, vol. 6, no. 6, pp.
2714–2724, Nov 2015.

[17] H. D. Sherali and C. H. Tuncbilek, “A global optimization algorithm for
polynomial programming problems using a reformulation-linearization
technique,” Journal of Global Optimization, vol. 2, no. 1, pp. 101–112,
1992.

[18] M. Swan, Blockchain: Blueprint for a new economy. ” O’Reilly Media,

Inc.”, 2015.

[19] J. Licata, “500 billion reasons blockchain can be a power play in energy,”

Mar 2017.

[20] A. Hahn, R. Singh, C. Liu, and S. Chen, “Smart contract-based campus
demonstration of decentralized transactive energy auctions,” in 2017
IEEE PES Innovative Smart Grid Technologies, 2017.

[21] J. Horta, D. Kofman, and D. Menga, “Novel paradigms for advanced
distribution grid energy management,” Telecom ParisTech, 2016.
[22] K. Kvaternik, A. Laszka, M. Walker, D. Schmidt, M. Sturm, A. Dubey
et al., “Privacy-preserving platform for transactive energy systems,”
arXiv preprint arXiv:1709.09597, 2017.

[23] A. Baliga, “Understanding blockchain consensus models,” Tech. rep.,

Persistent Systems Ltd, Tech. Rep, Tech. Rep., 2017.

[24] https://digiconomist.net/bitcoin-energy-consumption
[25] https://www.ibm.com/blockchain/hyperledger.html
[26] M. Vukoli´c, “The quest for scalable blockchain fabric: Proof-of-work
vs. bft replication,” in International Workshop on Open Problems in
Network Security. Springer, 2015, pp. 112–125.

[27] Q. Peng and S. H. Low, “Optimal branch exchange for distribution
system reconﬁguration,” arXiv preprint arXiv:1309.0651, 2013.

Fig. 3. Load proﬁle and generation from different sources for bus 5 (left),
and crowdsourcing monetary incentives (right) for various buses.

Fig. 4. Web-based user interface for CESs with Hyperledger Fabric.

VI. NUMERICAL TESTS

We use the Southern California Edison 56-bus

test
feeder [27]. Reasonable load proﬁle is generated to make sure
the optimization problems have feasible sets for T = 24 hrs.
We place stationary batteries, solar panels, uncontrollable and
shapable loads at each bus in the network. Batteries are set
up with a power capacity of 80% of the peak uncontrollable
load at the bus, and a 4-hour energy storage capacity. We
assume that the solar generation power proﬁle is given and
contributes to 150% of the uncontrollable load at peak for
each bus. Shapable loads have net energy demand that is up
to 5 times the peak power consumption of the uncontrollable
loads and can be charged for 4–10 hours. The self-scheduling
time of shapable loads is between 9 am and midnight. A multi-
period CES-OPF is implemented through ADMM as in [13].
Fig. 3 (left) shows the load proﬁle and generation for bus
5 in the 56-bus power network after solving CES-OPF (1).
Due to space limitations, we only show 1 bus here. The
ﬁgure also clearly shows that battery charges when the solar
panel produces and injects energy into this bus. Fig. 3 (right)
presents the solutions to the designed incentives (i.e.,
the
monetary rewards offered to Type 2 crowdsourcees) alongside
simulating Algorithm 1. The ﬁgure shows the time-varying na-
ture of the incentives. Here, we assume that all crowdsourcees
accept the designed incentives. Fig. 4 shows a web-based user
prototype that we implemented using Hyperledger Fabric. In
future work, we plan to study the convergence properties of
the crowdsourcing incentives, and implement the framework
on larger distribution networks.

ACKNOWLEDGMENTS

The authors acknowledge the anonymous reviewers and Dr.
Nikolaos Gatsis for their helpful comments and suggestions.

048121620240.50.00.51.01.5prpupbps04812162024246810Incentive price ($/MWh)a2a3a4a5Time(h)Real Power Injection (MW)