2
2
0
2

n
a
J

1
3

]

R
C
.
s
c
[

2
v
6
0
9
1
1
.
4
0
1
2
:
v
i
X
r
a

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and
Countermeasures

HUSSAIN AHMAD, CREST - The Centre for Research on Engineering Software Technologies, The University of
Adelaide, CSCRC - Cyber Security Cooperative Research Centre, Australia

ISURU DHARMADASA and FAHEEM ULLAH, CREST - The Centre for Research on Engineering Software
Technologies, The University of Adelaide, Australia

M. ALI BABAR, CREST - The Centre for Research on Engineering Software Technologies, The University of Adelaide,
CSCRC - Cyber Security Cooperative Research Centre, Australia

Command, Control, Communication, and Intelligence (C3I) systems are increasingly used in critical civil and military domains for

achieving information superiority, operational efficacy, and greater situational awareness. Unlike traditional systems facing widespread

cyber-attacks, the sensitive nature of C3I tactical operations make their cybersecurity a critical concern. For instance, tampering or

intercepting confidential information in military battlefields not only damages C3I operations, but also causes irreversible consequences

such as loss of human lives and mission failures. Therefore, C3I systems have become a focal point for cyber adversaries. Moreover,

technological advancements and modernization of C3I systems have significantly increased the potential risk of cyber-attacks on

C3I systems. Consequently, cyber adversaries leverage highly sophisticated attack vectors to exploit security vulnerabilities in C3I

systems. Despite the burgeoning significance of cybersecurity for C3I systems, the existing literature lacks a comprehensive review to

systematize the body of knowledge on C3I systems’ security. Therefore, in this paper, we have gathered, analyzed, and synthesized the

state-of-the-art on the cybersecurity of C3I systems. In particular, this paper has identified security vulnerabilities, attack vectors,

and countermeasures/defenses for C3I systems. Furthermore, our survey has enabled us to: (i) propose a taxonomy for security

vulnerabilities, attack vectors and countermeasures; (ii) interrelate attack vectors with security vulnerabilities and countermeasures;

and (iii) propose future research directions for advancing the state-of-the-art on the cybersecurity of C3I systems.

CCS Concepts: • General and reference → Surveys and overviews; • Security and privacy → Systems security; Network
security; Security requirements; Cryptography; Intrusion detection systems; Access control.

Additional Key Words and Phrases: Command, Control, Communication, Intelligence, Computer, Surveillance, Reconnaissance, C3I,

C4I, C4ISR, Cybersecurity, Cyberattack, Vulnerability, Countermeasure

1 INTRODUCTION

A Command, Control, Communication, and Intelligence (C3I) system is an integration of data gathering sensors,

intelligent computing machines, and heterogeneous communication networks for collecting, storing, analyzing, and

transmitting information in tactical domains under the supervision of authorized commanders [152]. Due to the

novel intelligence (e.g., Artificial Intelligence (AI) techniques [129]) and cognitive agility [127], C3I systems enable

organizations to attain and sustain information superiority, operational efficacy, increased situational awareness, real-

time decision support, swift communication, and enhanced collaboration among heterogeneous C3I assets during their

operations [123]. Moreover, C3I command systems ensure strict compliance with organizational chain-of-commands,

which prevents a C3I asset from violating an informed course of actions in tactical operations. Therefore, C3I systems are

increasingly used in sensitive civil and military domains, such as search-and-rescue missions, healthcare, transportation,

fireguard, battlefield, airfield, and many other applications [55], where timely data transmission and plan execution

Authors’ addresses: Hussain Ahmad, hussain.ahmad@adelaide.edu.au; Isuru Dharmadasa, isuru.mahaganiarachchige@adelaide.edu.au; Faheem Ullah,
faheem.ullah@adelaide.edu.au; M. Ali Babar, ali.babar@adelaide.edu.au, The University of Adelaide, Australia.

1

 
 
 
 
 
 
2

Ahmad et al.

are of prime concern. For example, the UK government leveraged C3I systems to effectively respond to healthcare

emergencies resulting from COVID-19 [81].

To illustrate the significance of C3I systems in tactical operations, Figure 1 shows two application scenarios of a

C3I system for a military and a civil domain - (a) battlefield and (b) rescue mission. In the battlefield scenario, both

C3I command and C3I control systems separately collect tactical data (e.g., positions and activities of enemy soldiers)

through different sensing devices such as quadcopters and proximity sensors. The control system processes the raw

data with the help of a C3I intelligence unit and provides classified information to the command system. Accordingly,

the C3I command system executes a required action plan by coordinating multiple military troops, such as soldiers,

helicopters, and armored tanks, for achieving mission objectives. C3I communication systems, such as satellite links and

other technologies (e.g., 4G/5G and RF links), enable mobile C3I assets (e.g., helicopters and quadcopters) to effectively

collaborate during tactical operations. Using a similar approach, but with a different goal, a C3I command system directs

lifeguards and rescue boats to save a drowning person in the illustrated rescue mission scenario. In both scenarios,

C3I systems achieve information superiority, operational efficacy, and situational awareness by producing required

intelligence through collecting and processing sensitive data during tactical operations.

As illustrated, C3I systems are used in sensitive domains such as military missions and search-and-rescue scenarios.

By sensitive domains, we mean domains where the consequences of actions going wrong are quite detrimental. For

instance, feeding incorrect target location to an aircraft for shelling during a military operation can result in severe

undesired damage including loss of human lives and damage to infrastructure. The sensitive nature of C3I application

domains makes their cybersecurity a critical concern. For example, considering the military operation presented in

Figure 1.(a), if proximity sensors get compromised due to an adversarial attack, a C3I system collects falsified data

and generates erroneous commands accordingly, resulting in mission failures. Historical events also indicate that

cybersecurity breaches of C3I systems led to major military defeats. For example, the compromise of Enigma machines

(part of C3I communication systems) was one of the main reasons behind the loss of Germans in world war II [131].

Similarly, the Afghan war documents leak hosted in C3I infrastructure, published by WikiLeaks in 2010, is one of

the biggest data breaches in military history [111]. The unauthorized disclosure comprised approximately 91,000 US

confidential military records regarding the war in Afghanistan. Another cybersecurity violation was reported by the
Washington Post1 in 2019 when the US officially launched cyber-attacks on Iranian C3I military instalments. The cyber-
attacks impaired C3I systems controlling missile and rocket launchers. Concerning the C3I civil domain applications,
ransomware attacks on the Los Angeles hospital2 and the San Francisco public transit3 not only disrupted their C3I
operations, but also caused unauthorized disclosure of sensitive information. Hence, a large number of cyber-attacks

[89] targeting C3I systems have become a grave concern for the cybersecurity of C3I systems.

Given the increased complexity of tactical operations (e.g., DoD C3I modernization strategy [9]), the contemporary

C3I systems have started leveraging advanced features of modern technologies, e.g., blockchain [19] and cloud computing

[94]), to meet the stringent operational requirements such as rapid response, reliability and service assurance in tactical

environments. The incorporation of the state-of-the-art technologies in the contemporary C3I systems have increased

the potential risk of sophisticated cyber-attacks such as Advanced Persistent Threats (APTs). The cyber threat surfaces

can be present in any C3I system component such as databases, web servers, and communication networks. A cyber-

attack on a C3I system is considered successful when an adversary exploits system’s vulnerabilities resulting in adverse

1https://www.washingtonpost.com/world/national-security/with-trumps-approval-pentagon-launched-cyber-strikes-against-
iran/2019/06/22/250d3740-950d-11e9-b570-6416efdc0803_story.html
2https://www.theguardian.com/technology/2016/feb/17/los-angeles-hospital-hacked-ransom-bitcoin-hollywood-presbyterian-medical-center
3https://www.theguardian.com/technology/2016/nov/28/passengers-free-ride-san-francisco-muni-ransomeware

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

3

Fig. 1. Abstract view of a C3I system application in (a) military operation and (b) rescue mission.

consequences such as unauthorized disclosure, tampering, and unavailability of sensitive information along with the

monetary and reputation loss [69]. Furthermore, the use of the state-of-the-art technologies for executing cyber-attacks

exacerbates the adverse impacts on C3I systems [24].

The increased impact of cyber-attacks emphasizes the necessity of designing, developing, and adopting adequate

security measures to secure C3I systems. Therefore, security experts, system designers and developers employ defensive

strategies, which are broadly known as countermeasures, to secure C3I systems from cyber-attacks. For example,

countries like the United States, the United Kingdom, and organizations like North Atlantic Treaty Organization

(NATO) have proposed architectural frameworks such as NATO Architecture Framework (NAF), Ministry of Defense

architecture framework (MoDAF), and The Department of Defense Architecture Framework (DoDAF) to enhance the

cybersecurity of C3I related tactical systems [24]. Furthermore, developments such as designing the state-of-the-art

technical services for C3I domains [6], the adaptation of emerging technologies like big data, IoT, 5G communication [5]

and establishment of cyber defense systems [56] are also noticeable in the present context concerning the cybersecurity

of C3I systems. In addition to countermeasures, it is also important to identify the common vulnerabilities that are often

exploited by cyber adversaries. Equally important is the identification of the attack vectors that are used by adversaries

to exploit the vulnerabilities. Such exploration of vulnerabilities and attack vectors facilitate researchers and security

experts to develop the required security safeguards/countermeasures for securing C3I systems.

Although researchers have proposed several countermeasures and identified vulnerabilities and attack vectors for

C3I systems, to the best of our knowledge, there is no survey/review study aimed at reviewing the existing literature for

systematizing a body of knowledge on the cybersecurity of C3I systems. To fill this gap, our research has systematically

gathered, analyzed and synthesized the state-of-the-art on the cybersecurity of C3I systems. For reviewing the literature

on this topic, we have considered only the peer-reviewed studies published after 2000 in order to provide the most

contemporary and validated insights on the cybersecurity of C3I systems. Based on our analysis of the data extracted

from the reviewed studies, we have divided this paper into three themes (i.e., security vulnerabilities, attack vectors

and countermeasures) as presented in Figure 2. For an in-depth cybersecurity analysis of C3I systems, we divide each

theme into two sub-themes. For example, we describe exploitation details and their detrimental consequences for each

security vulnerability identified in the literature. Similarly, we report the execution of attack vectors and their adverse

(a)(b)SoldiersArmoredtanksProximity SensorsEnemy SoldiersQuadcoptersAir force -HelicopterGPS Support SatelliteCommunication SatelliteDrowning PersonQuadcopterGPS Support SatelliteCommunication SatelliteLife GuardsRescue BoatC3I Control SystemC3I Command SystemC3I Control SystemAmbulanceC3I Command System4

Ahmad et al.

Fig. 2. Identified themes for investigating cybersecurity of C3I systems

impacts on C3I systems. The analysis and reporting of these themes have led us to identify relationship among them

and the future research areas for practitioners and researchers.
Our Contributions: In summary, our survey makes the following contributions.

• It presents a comprehensive analysis of C3I systems’ security vulnerabilities identified in the literature. Each
security vulnerability has been meticulously described along with its exploitation details and consequences of

exploitation on C3I systems. The identified security vulnerabilities are innovatively categorized based on C3I

system components.

• It provides a high-level investigation of the attack vectors applicable to C3I systems. Each attack vector has
been critically examined focusing on its execution methodologies and adverse impacts on C3I systems. The

attack vectors are also categorized based on C3I system components i.e., command, control, communication, and

intelligence.

• It gives an overarching analysis of the countermeasures reported in the literature for securing the cyberspace
of C3I systems. The methods and benefits offered by each countermeasure have been described. The identified

countermeasures are categorized based on the development and operational phases of C3I systems. Furthermore,

each category has been critically investigated providing its benefits and limitations.

• It presents a combined analysis of the security vulnerabilities, attack vectors and countermeasures for C3I systems.
The exhaustive analysis not only results in developing a distinctive relationship of attack vectors with security

vulnerabilities and countermeasures, but also identifying future research areas for advancing the state-of-the-art

on the cybersecurity of C3I systems.

It is important to mention that we analyzed the cybersecurity of C3I systems and their derivative systems in this

review. These derivative systems include Command, Control, Communication, Computers, and Intelligence (C4I)

Systems; Command, Control, Communication, Computers, Cyber, and Intelligence (C5I) systems; Command, Control,

Communication, Computers, Intelligence, surveillance, and reconnaissance (C4ISR); and many other combinations (e.g.,
C5ISR and C6ISR) [146]. However, for the ease of readers, we use the term C3I systems to refer to the C3I and its all
other derivative systems throughout the paper.
Paper Structure: The remainder of this survey is organized as follows. Section 2 reports an overview of C3I systems.
Section 3, Section 4 and Section 5 describe the security vulnerabilities, attack vectors, and countermeasures, respectively.

Cybersecurity Analysis of C3I SystemsFuture Research DirectionsMappingMappingExploitation1. Security VulnerabilitiesConsequencesExecution2. Attack VectorsConsequencesMethod3. CountermeasuresBenefitsThemesSub-themesA Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

5

Section 6 presents an analysis of our research findings, which mainly includes the mappings among the research

findings and the identification of future research directions. Lastly, Section 7 concludes the survey.

2 AN OVERVIEW OF C3I SYSTEMS

This section provides an overview of the C3I system to help understand the findings reported in the subsequent sections.

In particular, we describe C3I system components and their functionalities in tactical operations. A C3I system is mainly

composed of four components: command system, control system, communication network, and intelligence unit. These

C3I components operate in conjunction with each other to execute critical civil and military operations. At the start of

a tactical operation, both C3I command and control systems separately collect tactical information through different

data sources (e.g., sensors, field commanders and C3I systems operating in tactical environments) [55], as depicted in

Figure 3.

Control System: C3I control systems process received tactical information to generate an action plan required for
achieving C3I mission objectives. For this purpose, C3I control systems employ data computing machines (e.g., single

board computers [120]), data controllers (e.g., PLCs and SCADA [63]), and storage devices (e.g., solid-state drives [154]).
The raw data collected from tactical domains are mainly processed through the following three steps [55]. Step 1: A
tactical situation is estimated by extracting its relevant features from the received information. Step 2: The estimated
situation is compared with a desired mission’s outcome to generate possible action plans. Step 3: An optimal action plan
is selected from possible options according to the availability and requirement of strategic resources (e.g., Quality of

Service, cost and power). Finally, the C3I control system shares the optimal action plan with the corresponding C3I

command system for its validation and implementation. It is important to note that a C3I intelligence unit facilitates

control system activities, which is described later in this section.

Command System: Tactical data sources provide situational awareness (e.g., geographic location and movement of
tactical assets) to C3I commanders through C3I command systems such as C3I web interfaces [148], ecological interfaces

Fig. 3. Role of each C3I system’s component in tactical operations

Communication SystemSensorsGround AuthoritiesOrdersReportsSensors’ DataSynchronized ActivitiesTactical DataControl SystemCooperating C3I SystemsIntelligence UnitCommand SystemSituation EstimationOptions GenerationBest Option SelectionPlan PreparationInstruction GenerationCommandsSituational AwarenessTactical Data Sources6

Ahmad et al.

[37] and android applications [30]). C3I commanders first analyze both the shared situational awareness and optimal

action plan of C3I control systems to prepare an effective strategy against adversaries for achieving a set goal. Then,

they implement a finalized action plan by giving instructions to field commanders and autonomous systems operating

in tactical environments through command interfaces. C3I command interfaces ensure a strict chain-of-commands in

tactical operations, which prevents unauthorized use of confidential information by cyber adversaries.

Communication System: C3I communication system supports all the inter-and intra-communication between C3I
components and tactical data sources during collection, processing, and dissemination of data in tactical environments.

For this purpose, C3I communication systems connect widely distributed, mobile and heterogeneous C3I assets (e.g.,

sensors, autonomous C3I systems, and ground authorities) for data transmission and overall communication. To integrate

heterogeneous C3I assets, C3I communication networks consist of versatile and diversified data transmission links

that include terrestrial line-of-sight (e.g., Link-16 and very high frequency), terrestrial beyond-line-of-sight (e.g., joint

tactical radio systems and cooperative engagement capability data distribution systems) and satellite (e.g., narrowband

and wideband) communication facilities [111]. Moreover, other data transmission protocols and technologies such as

MANET [36], RF links [34], 4G/5G [130], and SATCOM [32] are also used in C3I networks. For data translation between

heterogeneous assets, C3I communication systems employ efficient data exchange models (e.g., JC3IEDM [54] and

MIEM [80]) to enhance interoperability and coalition among heterogeneous tactical assets during C3I operations.

Intelligence Unit: A C3I intelligence unit assists C3I systems in data processing and effective decision-making [146].
Different AI tools, such as Machine Learning (ML) and Deep Learning (DL) models, are used to introduce intelligence

in C3I operations [149]. For example, ML-based dimensionality reduction algorithms, reported in [90], are used to

extract the relevant features from the raw information received from C3I data sources to estimate an emerging tactical

situation. Similarly, AI-based optimization approaches, reported in [157], are used for selecting an optimal action plan.

C3I intelligence capabilities not only improve situational awareness and operational efficacy [173], but also provide

cognitive agility to C3I commanders for effective decision-making [171].

3 SECURITY VULNERABILITIES

This section reports the findings related to the theme 1, security vulnerabilities of C3I systems. In general, a security

vulnerability refers to any weakness, fault, issue, or loophole in a system that an attacker can exploit to harm a system
or its’ users. Based on this definition, we have identified 13 security vulnerabilities denoted those as V1, V2, V3, ... V13.
We categorized the identified vulnerabilities based on their associated C3I system components (i.e., Command, Control,
Communication and Intelligence). Since some vulnerabilities (e.g., V1 and V8) relate to multiple C3I components, we
have explained the variants of these vulnerabilities under each component. Furthermore, for each vulnerability, we
have provided examples from Common Vulnerabilities and Exposures (CVE)4 database considering their relevance and
applicability to C3I systems. Figures 4 and 5 illustrate the overall categorization of security vulnerabilities and attack

vectors, and vulnerabilities with their extracted studies, respectively.

3.1 Vulnerabilities in C3I Command System

Insufficient Logging and Monitoring (V1): C3I command systems should be equipped with continuous monitoring methods
such as intrusion detection [103] to enable real-time unauthorized access identification and prevention. However, system

architectures such as Service Oriented Architecture (SOA) do not consist of in-built intrusion detection and continuous

4https://cve.mitre.org/

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

7

monitoring mechanisms since SOA-based systems are typically used in enterprise applications [86]. Hence, SOA-based

C3I systems can recognize neither intruders in real-time nor compromised systems in the long run. Furthermore,

considering the mechanisms such as, OpenPegasus Common Information Model (CIM) servers that can be used to

monitor C3I systems’ hardware performance and health, it can contain this security vulnerability as OpenPegasus 2.7

CIM does not record the failed login attempts (CVE-2008-4315). By exploiting this vulnerability, adversaries can execute

numerous attacks to unauthorizedly access a C3I system without being detected or notified to the relevant authorities.
Insecure Session Management (V2): Many web-based C3I command systems use sessions to store user information,
including session ID in the server-side storage, to uniquely identify each user and their authorized operations [79]. The

failure to design user authentication mechanisms with security measures such as cryptographically strong session IDs

[23] and secure session termination policies [169] can enable attackers to retrieve session data from the server and

unauthorizedly access C3I command systems to break or affect the strict chain-of-commands followed in C3I systems

[143]. For example, when C3I systems employ NoSQL database software such as Infinispan, the C3I system can get

affected from this vulnerability since Infinispan-9.4.14 lacks proper session fixation protection (CVE-2019-10158).

Missing Function-level Access Control (V3): Similar to any other system, C3I command systems also have multiple
users with different access rights. For example, system administrators have higher privileges than ordinary users (e.g.,

data operators), which they leverage through dedicated administrative interfaces. When systems are not designed

correctly to provide function-level access control (i.e., strict user authorization for each function), users with low access

rights can elevate their privileges and execute unsanctioned operations [4, 11, 23, 143]. For instance, when C3I systems

leverage service management software, such as IBM Jazz, users can access and delete restricted data and resources from

C3I systems by exploiting this vulnerability (CVE-2019-4194).

Fig. 4. Security vulnerabilities and attack vectors associated with command, control, communication, and intelligence components of
a C3I system

Command SystemControl SystemCommunication SystemIntelligence UnitSecurity VulnerabilitiesAttack VectorsC3I Systems’ ComponentsInsufficient Logging and Monitoring (V1)Insecure Session Management (V2)Missing Function-level Access Control (V3)Insecure Role-based-Access-Control(V4)Open Redirects(V5)Insecure Direct Object References (IODR)(V6)Insecure Configuration Stores(V7)Use of COTS Components(V8)Use of COTS Components (V8)Insecure Data Storage (V9)Insufficient Logging and Monitoring (V1)Insecure Session Management (V2)Insecure Configuration Stores (V7)Use of COTS Components (V8)Insecure OpenSSL Software (V10)Use of Public Communication Networks (V11)Insecure Wireless Communication (V12)Broken Wireless Communication Links(V13)Insufficient Logging and Monitoring (V1)Use of COTS Components (V8)Brute Force Attack (A1)Insider Attack (A2)Cross Site Scripting (A3)SQL Injection (A4)Cross Site Request Forgery (A5)Tampering Attack (A6)Malware (A7)Repudiation Attack (A8)Tampering Attack (A6)Malware (A7)Time Of Check To Time Of Use (A9)Brute Force Attack (A1)Tampering Attack (A6)Malware (A7)Spoofing Attack (A10)Eavesdropping (A11)Flooding Attack (A12)Jamming Attack (A13)Black Hole Attack (A14)Rushing Attack (A15)Wormhole Attack (A16)Replay Attack (A17)Routing Attack (A18)Lack of Synchronization Attack (A19)Tampering Attack (A6)Malware (A7)8

Ahmad et al.

Insecure Role-Based Access Control (V4): As explained in V3, C3I command systems require to manage users with
multiple roles and access privileges. Role-Based Access Control (RBAC) is a widely used access control method, where

each user has a defined user role(s) with a set of permitted actions [62]. While RBAC systems can facilitate role-based

access control over C3I command system functionalities and data, misconfigured RBAC systems (e.g., inaccurate

mapping between user roles and their associated functions) can make mission-critical data be manipulated and erased

by attackers [23, 117]. For example, Oracle Solaries 11.1 operating system powered C3I systems are affected by this

vulnerability, allowing local users to conduct operations that are restrict to their user roles (CVE-2013-5875).

Open Redirects (V5): In web-based C3I command systems, users rely on Uniform Resource Locators (URL) to navigate
between internal and external C3I systems. Therefore, it is critical to ensure that these web links are validated and

directed only to secure C3I systems and domains. For example, when C3I system users utilize web-based Cisco Webex

meetings to conduct online meetings, remote attackers can send malicious URLs and steal C3I system user credentials by

redirecting them into insecure web pages since this software does not strictly validate user given URLs (CVE-2021-1310)

[172]. In that case, an attacker can steal the credentials of a C3I admin and use the fraudulently received credentials to

impersonate and execute attacks on C3I systems [2, 143].

Insecure Direct Object References (IODR) (V6): Similar to V5, IODR vulnerability is also associated with the insecure
access control of web-based C3I command systems. In web development, it is common to use the name or key of an

object to populate web pages dynamically. Therefore, if C3I command systems do not validate user requests to access

data residing in C3I systems, an adversary can manipulate legitimate requests by injecting restricted internal object

references to escalate their privileges, horizontally and vertically [16, 99, 143]. For example, when C3I systems use

LogonBox Nervepoint Access Manager for user authentication and identity management, attackers can exploit IODR

vulnerability and unauthorizedly retrieve C3I system user details (CVE-2019-6716).

Insecure Configuration Stores (V7): A typical C3I command system consists of multiple servers configured for various
functionalities such as, web services, email servers and file transfer services. The configuration store of a server manages

all the setting details of the implemented security methods, approaches, and techniques [7]. Server misconfigurations

and disclosure of access details to unauthorized third parties can result in an insecure configuration store [23]. An

attacker who gains access to a command system configuration store can disable the implemented security mechanisms

and make the C3I system vulnerable to numerous cyber-attacks. For example, when C3I systems are equipped with

application management software such as ManageEngine Applications Manager, malicious authenticated users can

escalate their privileges by capitalizing on this vulnerability. As a result, these adversaries can take complete control of

the overall C3I system (CVE-2019-19475).

Use of COTS Components (V8): Many C3I systems utilize Commercial off-the-shelf (COTS) components to reduce
the cost and time spent on the development. However, some of these software components may contain security

loopholes due to inadequate testing and review procedures [40]. Even with the tested software components, some are

not patched for known vulnerabilities [143]. It is important to note that when C3I systems adopt these third-party

software associated with open-source codebases, attackers can exploit vulnerabilities by launching attacks on C3I

systems [86, 104]. For example, when C3I authentication systems employ vulnerable third-party JSON Web Token

Libraries (CVE-2021-41106) [162], C3I command systems face the threat of unauthorized access to mission-critical data.

3.2 Vulnerabilities in C3I Control System

Use of COTS Components (V8): Similar to Section 3.1 - V8, C3I control systems can become vulnerable to cyber-attacks due
to the use of compromised third-party software for tasks such as security-critical data processing, storing, monitoring

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

9

Fig. 5. Identified C3I system security vulnerabilities and their sources/references

and visualizing. Therefore, when C3I control systems are equipped with software from malicious vendors, without

conducting adequate security testing to speed-up the development process, these systems can contain back-doors and

pre-installed malware, secretively [14]. For example, when C3I systems are equipped with IBM InfoSphere servers for

storing mission-critical data, attackers can steal these data by exploiting these servers’ inherited insecure third-party

domain access vulnerability (CVE-2021-29875).

Insecure Data Storage (V9): C3I control systems store diverse types of data, including security critical information, to
expedite C3I operations through increased situational awareness and tactical decision support. Thus, the security of

data at rest is essential in C3I systems. Data loss can happen in C3I systems due to many reasons, such as hardware and

software failures, user negligence, and adversary attacks [1, 13, 75, 144]. For example, when C3I system data are stored

in Couchbase Servers, attackers can access these data since these Couchbase servers store security-critical data in plain

text (CVE-2021-42763).

3.3 Vulnerabilities in C3I Communication System

Insufficient Logging and Monitoring (V1): Similar to Section 3.1 - V1, C3I communication systems also should be equipped
with continuous logging and monitoring mechanisms to detect malicious traffic coming from compromised C3I nodes.

For example, when C3I communication systems leverage network devices equipped with JUNOS operating system,

which lacks proper resource allocation and monitoring methods, attackers can send malicious traffic to these devices

and make them unavailable for legitimate C3I data communications (CVE-2021-31368).

Insecure Session Management (V2): C3I communication systems facilitate efficient and secure data communication
among widespread C3I nodes. For example, battlefield data from UAVs must be transmitted to the C3I control unit for

further processing and orders from the command system must be communicated with military troops to take necessary

actions. The session layer in the Open Systems Interconnection (OSI) model is responsible for creating, synchronizing

and terminating communication channels between devices [21]. Thus, security methods like SSL/TLS certificates [153]

are required in the session layer to enable secure communication between legitimate C3I nodes. However, the fallacious

012345Broken Wireless Communication Links (V13)Unencrypted Wireless Communication Links (V12)Use of Public Communication Networks (V11)Insecure OpenSSL Software (V10)Insecure Data Storage (V9)Use of COTS Components (V8)Insecure Configuration Stores (V7)Insecure Direct Object References (V6)Open Redirects (V5)Insecure Role-based-Access-Control (V4)Missing Function-level Access Control (V3)Insecure Session Management (V2)Insufficient Logging and Monitoring (V1)(V1)(V7)(V10)(V11)(V12)(V12)(V13)Studies[86][40][23][23][143][143][23][104][75][133][24][24][24][143][117][86][144][75][75][23][125][143](V1)(V2)(V3)(V4)(V5)(V6)(V9)(V8)10

Ahmad et al.

implementation of these security measures allows adversaries to make C3I communication networks unavailable for

critical data communication leading to mission failures (CVE-2021-40117).

Insecure Configuration Stores (V7): Similar to Section 3.1 - V7, C3I systems have to employ security configuration
management systems such as Cisco Firepower Management Center (FMC) for implementing and maintaining C3I

communication systems’ security mechanisms. However, as FMC system stores user data in plain text, authenticated

local attackers can retrieve these details and disable the implemented security defenses of C3I communication networks

by impersonating as system administrators (CVE-2021-1126).

Use of COTS Components (V8): Similar to Section 3.1 - V8, C3I communication systems can become vulnerable due to
the use of compromised COTS devices (e.g., routers and switches) and network management tools (e.g., Wireshark and

SolarWinds). For example, due to a vulnerability in SolarWinds, a network monitoring and management software, nine

US federal agencies have been compromised, and attackers have gained access to data and emails of these systems

(CVE-2021-35212) [174]. Similarly, any C3I system that uses SolarWinds third-party software possesses the threat of

unauthorized access to C3I mission-critical data.

Insecure OpenSSL Software (V10): OpenSSL is an encryption software that is used in C3I web systems to support secure
communication among C3I web systems and users [101]. It ensures an active receiver is available at the other end of the

communication link through "heartbeat" messages. Since OpenSSL software had not implemented a strict "heartbeat"

message validation mechanism, attackers can exploit these messages to access server Random Access Memory (RAM)

[101, 133, 158]. Therefore, attackers can exploit this vulnerability to unauthorizedly retrieve C3I mission-critical

information and other security related data like credentials, from the C3I system server RAM (CVE-2014-0160).

Use of Public Communication Networks (V11): Some C3I systems use public networks such as the internet for data
communication to minimize cost [24]. Since public networks lack strict security measures (e.g., secure Virtual Private

Networks (VPN) [150]) by default, transferred data is susceptible to adversarial attacks relating to unauthorized access

and data manipulation [24, 53, 75]. For example, when C3I components communicate through public networks without

secure VPN channels, an attacker can view and tamper transmitted data leading to compromised C3I operations.

However, even the use of VPN channels does not guarantee the confidentiality and integrity of the data transmitted

through public communication channels as some VPN software are not designed with adequate security mechanisms

(e.g., insecure input validation - CVE-2021-1519).

Unencrypted Wireless Communication Links (V12): C3I systems depend on wireless communication networks mainly
due to the cost and impracticality of using wired technologies with mobilized units [179]. Compared to wired communi-

cation technologies, wireless links are susceptible to an increased number of attacks since transceivers have limited
control over the propagation range and direction of wireless signals [24, 75, 125, 182]. Like V3, when C3I wireless
networks are not designed with necessary security measures like physical layer encryption [159], adversaries can

execute numerous attacks to disable the communication links between C3I systems and decrease the overall situational

awareness of C3I operations. For example, when C3I communication systems leverage wireless devices with internal

data encryption process errors (e.g., Broadcom WiFi client devices - CVE-2019-15126), C3I mission-critical data can be

decrypted by attackers leading to data confidentiality breaches.

Broken Wireless Communication Links (V13): As described in V12, C3I systems highly depend on wireless communica-
tion technologies to assure connectivity among geographically widespread C3I assets. However, wireless communication

links frequently get affected due to excessive movements of C3I assets in hostile conditions [24]. For example, when a

legitimate node gets disconnected due to broken wireless links, attackers can penetrate the C3I system by joining as

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

11

the disconnected legitimate node (CVE-2020-24586). As a result, the attacker gets access to the C3I system amidst the

legitimate node becomes vulnerable due to the lack of communication and decreased situational awareness.

3.4 Vulnerabilities in C3I Intelligence Unit

Insufficient Logging and Monitoring (V1): While Section 3.1 explains the vulnerability V1 in terms of lack of intrusion
detection and continuous monitoring mechanisms in C3I command systems, here, we focus on two main aspects

related to the application and security of AI/ML-based methods for monitoring and logging in C3I systems. Firstly, we

emphasize the lack of AI/ML-based methods employed by C3I systems for intrusion detection methods. For example,

machine learning classifiers such as K-nearest neighbor (K-NN), Support Vector Machine (SVM), and Artificial Neural

Networks (ANN) have been widely used in anomaly detection leveraging security event logs [97, 164]. Hence, the C3I

intelligence unit can incorporate such mechanisms to detect intruders and subsequently implement preventive methods

to stop attackers’ access to C3I systems. The failure to incorporate these intelligent intrusion detection methods will

allow intruders to access and execute malicious attacks on C3I systems by compromising systems’ integrity. Secondly,

we highlight the necessity of continuously monitoring AI/ML models’ performance (e.g., accuracy) in C3I intelligence

units. AI/ML models suffer from data and model drifts leading to inaccurate inferences [29]. For example, when C3I

systems employ AI/ML models for intrusion detection that are trained for other domains, the accuracy of these models

can be significantly lower due to data drift. Therefore, the AI/ML models employed in C3I systems must be continuously

monitored, tested and verified to ensure that these models provide accurate results.

Use of COTS Components (V7): Similar to Section 3.1 - V7, C3I intelligence units can become vulnerable to cyber-attacks
when these units employ insecure third-party AI/ML models and frameworks to generate knowledge (e.g., situational

awareness) from raw data (e.g., sensor data). For example, tactical C3I systems’ can employ the TensorFlow Deep

Learning (DL) framework with Convolutional Neural Networks (CNN) to identify enemy territories from satellite

images. However, the TensorFlow framework possesses a Denial of Service (DoS) threat when used with the NumPy

package, which is commonly leveraged in AI/ML model development (CVE-2017-12852). Therefore, when these insecure

AI/ML packages are used in C3I intelligence units, attackers can exploit this vulnerability to make the intelligence unit

unavailable or non-responsive, impacting C3I operations and leading to mission failures.

4 ATTACK VECTORS

This section reports the findings related to the theme 2, attack vectors against C3I systems. An attack vector refers to a

methodology used by an attacker to exploit a vulnerability in C3I systems. We have identified 19 attack vectors targeting
the cybersecurity of C3I systems through the existing literature (Figure 6). We denote the 19 attack vectors by A1, A2,
A3, . . . ., A19 to facilitate their referencing throughout the paper. Similar to C3I systems vulnerabilities (Section 3), we
categorize the attack vectors based on their applicability on C3I system components, as presented in Figure 4. Since the
tampering attack (A6) and the malware (A7) can be executed on any C3I system component, we report both the attack
vectors for each C3I component. In the following, we describe the attack vectors with their execution (sub-theme 1) and

impact (sub-theme 2) details for corresponding C3I system components.

4.1 Attack Vectors for C3I Command System

Brute Force Attack (A1): A brute force attack is used to get unauthorized access to C3I command interfaces [88]. Hackers
use different intrusion mechanisms, such as trial-and-error methods [52] and session IDs exploitation [60], to obtain

secret information (e.g., cryptographic keys and login credentials) of C3I commanders. As a result, intruders not only

12

Ahmad et al.

Fig. 6. Identified C3I system attack vectors and their sources/references

receive real-time situational awareness, but also perform malicious activities (e.g., generating fraudulent instructions)

through compromised C3I command interfaces.

Insider Attack (A2): Insider refers to a malicious C3I system’s operator who has legitimate access to C3I command
systems. An insider attack is executed when insiders deliberately or mistakenly neglect security protocols while using

C3I command interfaces [23, 24, 86, 136, 143]. Such actions result in leakage of sensitive information and termination

of tactical operations. Due to the legitimate access privileges of insiders, detecting or preventing insider attacks is

cumbersome in C3I command systems [24].

Cross-Site Scripting (A3): Cross-Site Scripting (XSS) is an attack vector, used against web-based C3I command
interfaces, in which a malicious script is injected into the output of a C3I command interface [143]. When a C3I

commander accesses a compromised interface, an installed malicious script is activated, which enables intruders to steal

sensitive information (e.g., users activities) from C3I command systems [170]. Session hijacking and user impersonation

are the results of XSS [170].

SQL Injection (A4): Structured Query Language (SQL) is a code that is used to get sensitive information from C3I
storage facilities through web-based C3I command interfaces. SQL injection occurs when intruders inject a malicious

SQL query to access a C3I database [86, 117]. Consequently, intruders exfiltrate, destroy, or manipulate sensitive

information stored in C3I databases. For example, Romanian hackers execute a SQL injection attack against the US
army website in 2010. As reported by DARKReading5, the hackers successfully gained access to 75 databases containing
sensitive information army personnel.

5https://www.darkreading.com/risk/u-s-army-website-hacked

0123456789101112Lack of Synchronization (A19)Routing Attack (A18)Replay Attack (A17)Wormhole Attack (A16)Rushing Attack (A15)Black Hole Attack (A14)Jamming Attack (A13)Flooding Attack (A12)Eavesdropping  (A11)Spoofing Attack (A10)Time of Check-Time of Use (A9)Repudiation Attack (A8)Malware (A7)Tampering Attack (A6)Cross-site Request Forgery (A5)SQL Injection (A4)Cross-site Scripting (A3)Insider Attack (A2)Brute Force Attack (A1)[23][61][85][134](A3)(A4)(A5)(A6)(A2)(A18)(A19)Studies[42][45][117][61][85][125][136][178][75][75][75][42][75][86][117][143][145][24][40][125][66][136][178][23][25][75][125][42][75][88][117][75][131][136][161][23][38][42][61][23][24][86][136][88][143][86][143][23][117][151][75][100][117][136][143][178][181][143][136][178][125][178](A10)(A1)(A7)(A8)(A9)(A11)(A12)(A13)(A14)(A15)(A16)(A17)A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

13

Cross-Site Request Forgery (A5): Cyber adversaries create fraudulent HTTP links to perform malicious activities
through C3I command interfaces [143]. If an authenticated C3I commander clicks on deceptive links, corresponding

malicious actions are executed. Since vulnerable web interfaces cannot distinguish between a legitimate request and

a forged one sent by an authorized user [87], it is difficult for such command interfaces to detect forged requests. A

cross-site request forgery enables attackers to execute malicious commands in tactical domains through C3I command

interfaces.

Tampering Attack (A6): A tampering attack, reported in [23, 38, 42, 61, 75, 100, 117, 136, 143, 178, 181], is executed
when intruders perform malicious activities to manipulate tactical information communicated through C3I command

interfaces. For example, web parameter tampering attacks [47] tamper users credentials, operational commands and

information communicated through C3I web interfaces by using POST requests. Consequently, C3I commanders cannot

implement a required action plan, which may lead to the failure of a C3I mission.

Malware (A7): Malware are malicious software [75, 131, 136, 161] that are used to penetrate a C3I system for executing
malicious activities such as unauthorized access, data modification and exfiltration. Malware are usually spread through

malicious emails [139], drive-by downloading [46], and external removable devices [137] in C3I command systems. As

a result, malware restrict authorized users to access C3I interfaces, provide hackers remote access to C3I interfaces, and

steal sensitive information about command operations.

Repudiation Attack (A8): A repudiation attack occurs when intruders modify the records of activities executed in C3I
command operations [23, 151]. By using different malicious tactics (e.g., log injection attack [50]), attackers change the

stored information of actions taken by C3I commanders or destroy logs of their own malicious activities during a C3I

operation. Consequently, corrupt log files make the validity of command actions sceptical and create confusion in C3I

chain-of-commands.

4.2 Attack Vectors for C3I Control System

Tampering Attack (A6): A tampering attack, described in Section 4.1, is also used to modify and fabricate tactical
information in data computing and storage systems of C3I control units. Intruders perform malicious activities, such

as corrupting database configurations and injecting malicious code in program executable, to manipulate sensitive

information of C3I control systems [135]. Consequently, C3I control systems incorrectly estimate tactical situations and

generate falsified action plans for command systems.

Malware (A7): Similar to the C3I command system (Section 4.1), malware are also harmful to C3I control systems.
The use of third-party software [14], insecure communication connections [48], and vulnerable operating systems [48]

are common ways to inject malware in data computing machines and storage devices. As a result, malware cause data

manipulation, exfiltration and disruption in control system activities, which distorts an action plan generation process

required to achieve C3I tactical objectives. For example, Stuxnet malware disrupted the operations of computer-aided

control systems (e.g., SCADA) used in Iranian nuclear power plant along with other 30,000 IP addresses [111].

Time Of Check To Time Of Use (A9): C3I control systems check the availability of strategic resources (e.g., operational
equipment and human resource) before devising an action plan to achieve mission objectives. A time of check to time

of use attack [117] is executed when intruders perform malicious activities (e.g., malicious code injection and resource

consumption) on the available resources in between the time of their check and usage to invalidate the result of a check

operation [138]. Consequently, C3I control systems prepare an action plan with unavailable/compromised resources,

which executes unintended actions in C3I operations.

14

Ahmad et al.

4.3 Attack Vectors for C3I Communication System

Spoofing Attack (A10): Cyber adversaries impersonate a legitimate C3I node to get connected with C3I networks for
executing malicious activities (e.g., stealing tactical information and inserting malware). Different attack vectors, such

as IP spoofing [58], ARP spoofing [163], DNS spoofing [17] and MAC spoofing [109], are used to steal the identity of a

legitimate C3I node through different communication layers. For example, open-source software, such as Kismet [8]

and Ethereal [15], are used to get or change a valid MAC address of a C3I system [168]. Another form of spoofing attack

is GPS spoofing [136] in which attackers generate counterfeit GPS signals by using commercial off-the-shelf products

[43] to provide falsified position, navigation and timing information to C3I nodes in tactical environments.

Eavesdropping (A11): Eavesdropping, also known as a man-in-the-middle attack, is a passive attack vector by which
attackers secretly listen to the communication between two C3I nodes [42, 75, 88, 117, 125, 178]. Open source network
monitoring and packet sniffing tools, such as Wireshark and Tcpdump [77], are used to eavesdrop on C3I communication
links. Eavesdropping attack results in an unauthorized disclosure of tactical information. [110]. For example, Britishers

eavesdropped on German military communications through compromised Enigma machines during World War II,

which was one of the main reasons behind the defeat of German military [108].

Flooding Attack (A12): A flooding attack, reported in [23, 25, 75, 125], is executed when an attacker sends large traffic
volumes towards a target C3I node to disrupt its services for other C3I nodes in a tactical environment. Large traffic

volumes, such as SYN flooding [177] and PING flooding [98], consume available bandwidth of a server near to a targeted

C3I node. Therefore, legitimate data packets coming from other C3I nodes cannot be transmitted from the affected

server. Consequently, a target C3I node gets disconnected from a C3I communication network.

Jamming Attack (A13): Jamming attacks make a C3I system unavailable for other C3I nodes in a C3I communication
network [24, 40, 42, 125, 136, 178]. Hackers employ different jamming strategies, such as constant jammer and deceptive

jammer, to disable data transmission links associated to a target C3I node in a C3I communication system [167]. As

a result, services of an affected C3I system, connected with the disabled channels, become unavailable for other C3I

tactical nodes.

Black Hole Attack (A14): In tactical MANETs, a route discovery process to find a shortest route for data transmission
is necessary and inevitable [165]. Hackers exploit this MANET feature by sending a fake route reply message, that

a malicious node has a required shortest path, during a route discovery process [75, 145]. Consequently, a source

C3I node establishes a data transmission route to a destination C3I node through the malicious node, which leads to

communication interruption and sensitive information exfiltration.

Rushing Attack (A15): A rushing attack [75] is executed when an attacker node receives a route request (RREQ)
during a route discovery process in tactical MANETs. The attacker node immediately sends the RREQ packet to all C3I

nodes before any other C3I node forwards the same RREQ packet in the network [76]. In this way, all other C3I nodes

consider the RREQ coming from a legitimate C3I node as duplicate, so they repudiate the legitimate RREQ. As a result,

the attacker node is always included in a data transmission route, which may cause denial-of-service and eavesdropping
(A11) in tactical MANETs.

Wormhole Attack (A16): A wormhole attack [75] occurs when at least two attacker nodes locate themselves at strategic
positions in a tactical MANET. The attacker nodes tunnel RREQ packets between each other during a route discovery

process. When a destination node receives the RREQ packets transmitted through the tunnel, the destination node finds

the malicious route a shortest route in the network and discards all other RREQ packets received from other legitimate

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

15

C3I nodes [51]. In this way, attacker nodes become part of a data transmission route in the C3I tactical MANET. A
wormhole attack may lead to data tampering (A6), man-in-the-middle attack (A11), and data exfiltration in C3I domains.
Replay Attack (A17): A replay attack, reported in [42, 66, 75, 86, 117, 143], is carried out in three steps. Step 1: Monitor
C3I communication links by using network monitoring tools [156]. Step 2: Intercept sensitive information such as
login credentials and C3I action plan details. Step 3: Replay the intercepted data packets to deceive a receiver C3I
node. Consequently, legitimate C3I nodes consider attacker nodes as authentic C3I nodes, which leads to unauthorized

disclosure of sensitive information in C3I systems.

Routing Attack (A18): Routing attacks are executed on routing protocols of C3I communication networks to disrupt
C3I services in tactical environments [45, 61, 85, 125, 136, 178]. Cyber adversaries use different malicious tactics such

as routing table overflow [175] and routing table poisoning [160] to execute routing attacks on C3I communication

systems. As a result, C3I systems cannot make connections with other legitimate C3I nodes, which makes their services

unavailable in C3I networks.

Lack of Synchronization Attack (A19): Time synchronization among widely distributed C3I systems is ensured by
using different protocols (e.g., reference broadcast synchronization [59], timing-sync Protocol [68], and flooding time

synchronization [116]) to execute collaborative C3I operations. However, these time synchronization protocols are

not securely designed [115]. Therefore, hackers compromise these protocols to share falsified timing information in

a distributed C3I environment, which creates a lack of time synchronization among C3I nodes [117]. Consequently,

asynchronous C3I nodes adversely disturb the operational coordination in time-critical C3I operations.

Brute Force Attack (A1): Network authentication mechanisms, such as Kerberos [128] and WPA/WPA2 [18], are used to
protect C3I communication systems in tactical environments. These authentication mechanisms require users credentials

(i.e., username and password) for allowing authorized users to access network resources. Cyber adversaries use state-of-
the-art brute force attack tools (e.g., Reaver6 and Fern-Wifi-Cracker7) for guessing authorized users credentials to get
connected with C3I networks. As a result, adversaries can eavesdrop and intercept sensitive information transmitted

through C3I communication links.

Tampering Attack (A6): Intruders modify and fabricate sensitive information transmitted through C3I communication
links. For this purpose, attackers first penetrate a C3I network by using different attack mechanisms (e.g., black hole
attack (A14) and spoofing attack (A10), then, they either modify in-transit data packets or inject their own malicious data
into the transmitting sensitive data. As a result, tampered information distorts situational awareness, C3I operational

activities and decision-making processes.

Malware (A7): Insecure communication links facilitate malware propagation from one system to another system
in a C3I tactical environment [48]. In this way, hackers create a network of compromised C3I systems, called botnet,

to perform malicious activities in a C3I network. For example, botnet executes distributed denial of service attack,
reported in [41], by conducting the flooding attack (A12) on a target C3I system to disrupt its C3I communication
services. Consequently, an affected C3I system cannot communicate with other legitimate systems in a C3I network,

which damages C3I tactical operations.

4.4 Attack Vectors for C3I Intelligence Unit

Tampering Attack (A6): In addition to other C3I components, the tampering attack is also executed on C3I intelligence
units. For example, data poisoning attacks [155], a type of adversarial attacks [142], add malicious samples into the

6https://www.kali.org/tools/reaver
7https://www.kali.org/tools/fern-wifi-cracker

16

Ahmad et al.

training datasets of ML/DL models to manipulate C3I intelligence operations during data processing. As a result, infected

ML/DL models misinterpret a C3I tactical situation and prepare a falsified action plan accordingly, which eventually

damages the decision-making process of C3I command systems.

Malware (A7): To detect malware in C3I systems, security experts train ML/DL models (e.g., MalConv [140]) with
expected malware samples. However, advanced adversaries make changes in malware, such as changing header fields

and instruction sequence, to evade ML/DL models for malware detection in C3I systems. These evasive variants of
malware are known as adversarial malware binaries [92] that successfully penetrate C3I systems to perform malicious
activities, described in Section 4.1, without being detected by ML/DL models.

5 COUNTERMEASURES

This section reports the findings related to the theme 3, countermeasures proposed for securing C3I systems. Counter-

measures refer to the safeguards or defenses used for protecting C3I systems. We have extracted 40 countermeasures

from the reviewed papers. As opposed to the security vulnerabilities and attack vectors, countermeasures are not

directly aligned with C3I system components. Therefore, we categorize the extracted countermeasures into two broad

categories: development and operational. The countermeasures in the development category are the ones that leverage

techniques (e.g., security requirements analysis and security design patterns/tactics) during the development process of

Fig. 7. Identified countermeasures and their respective categories.

Requirements for Designing Secure C3I Infrastructures (C1)Pre-requisites for Protecting C3I Command Centres (C2)Guidelines for Securing Cyberspace of C3I Systems (C3)Recommendations for C3I Information Operations (C4)Suggestions for Addressing C3I Cyber Challenges (C5)Automation of Security Policies Evaluation Process (C6)Security Policy Modelling in SOA-based C3I Systems (C7)Designing Secure SOA-based C3I Systems (C8)Designing Secure Cloud-based C3I Systems (C9)Blockchain-based Secure Data Communication (C10)Smart Contract Assisted Secure Data Sharing (C11)Designing Secure C3I Communication Systems (C12)Data Security Architectures for C3I Systems (C13)Architectural Support for Designing Secure C3I Systems (C14)Assistive Technologies for Designing Secure C3I Systems (C15)C3I System Structure Effects based on Statistical Parameters (C16)C3I System Structure Effects based on Information Flow Parameters (C17)Metrics-Driven Attack Impact Analysis (C18)Cyber Impact Analysis of Simulated Tactical C3I Operations (C19)Simulation Study for Evaluating Military Cyber Operations (C20)Cyber Simulation Terrain based on Ontological Representation (C21)Intrinsic FiberMonitoring (C22)Attack Management Framework (C23)Light-Weight C3I monitoring system (C24)Intrusion Detection for SOA-based C3I Systems (C25)AI-based C3I device identifier (C26)Cryptographic Key Length Selection for optimal Security and QoS (C27)Secure Key Distribution in Tactical Domains (C28)Secure Key Generation for Satellite Images Encryption (C29)Light-Weight Symmetric-Key Cryptography (C30)Light-Weight Asymmetric-Key Cryptography (C31)Non-Interactive Key-Sharing Mechanism (C32)CEALICIAN –An Encryption Device (C33)A Comparison of Encryption Methods (C34)Access Control in Decentralized C3I Environments (C35)Digital-Ultrasonic Sensor Network Technology (C36)Multi-Level Security for C3I Command Operations (C37)Multi-Layered Ontology Security Model (C38)Authentication, Authorization, and Accountability in C3I Systems (C39)A Comparative Analysis for RBAC Mechanisms (C40)Security RequirementsArchitectural Support for SecurityAttack Impact AnalysisIntrusion DetectionCryptographyDevelopmentOperationalCountermeasures for C3I Systems’ SecurityAccess ControlA Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

17

C3I systems to help construct a secure C3I system. Contrary to this, the countermeasures in the operational category
aim to secure a C3I system while the system is in operation. In Figure 7, C1, C2, and so on specifies the identifier of the
countermeasure used throughout the paper to refer to the respective countermeasures.

5.1 Development

As described in Section 2, C3I systems collect, process, store and transmit critical data to support tactical operations in

hostile environments. Therefore, the security of a C3I system must be considered as an important quality attribute while

developing C3I systems. In other words, security must not be left as an after-thought rather it needs to be considered

right from the start of the development process [23, 24]. As depicted in Figure 7, we categorized the countermeasures in

the development category into the following three categories. Moreover, we report the benefits and limitations of each

category.

Security Requirement Analysis. Before designing/implementing a C3I system, it is important to analyze, specify,
5.1.1
and understand the security requirements of a C3I system keeping in view its operating environment. Such analysis and

understanding help the designers of a C3I system to incorporate corresponding security measures for addressing the
specified security requirements. Therefore, researchers have reported security requirements (C1 to C6) for developing
secure C3I systems.

OZTURK et al. [134] (C1) have recommended the use of digital certificates, digital signatures, firewalls, and smart-
cards for tactical information security. Moreover, secure design patterns, such as [49] and [57], are suggested for
developing secure C3I systems. Similarly, Li et al. [102] (C2) have suggested the use of spread spectrum, private lines,
instant/directional radio frequency communication and frequency hopping approaches for avoiding interception of

communication signals between different C3I components and tactical data sources (e.g., sensors). The study [102]

has also recommended the use of camouflage techniques and equipment (e.g., anti-radar and anti-infrared devices)
especially in command systems to prevent enemies’ reconnaissance. Besides, Bingman [41] (C3) has presented several
guidelines focused on safeguarding critical information in contested C3I cyberspace environments. The proposed

guidelines address the challenges including but not limited to information prioritization, risk assessment, secure
infrastructure, and commercial networks. The authors in [181] (C4) describe security engineering and information
security principles ( e.g., ISO/IEC 17799 and AS/NZS 4360) for data security in C3I systems. For Canadian C3I cyber
operations, Bernier et al. [39] have reported various suggestions (C5) to address the challenges of dynamic nature and
indistinct boundaries of cyber environments. For example, the authors have suggested the integration of computer

network attack, defense and exploitation operations with each other during C3I operations to get a holistic picture
of their cyberspace. Concerning the challenges of NATO federated mission networks, Lopes et al. [105] (C6) have
investigated the use of three technologies (i.e., software-defined networking, network security function, and network

function virtualization) for automating the security policy evaluation and implementing secure information exchange

functions between different components of a C3I system.

Benefits of Security Requirement Analysis

• Upfront consideration of securing C3I systems
• Guides to identify and adapt secure technologies such as communication protocols, encryption mechanisms
• Adaptable to different types of C3I domains (e.g., military and civil)

18

Ahmad et al.

Limitations of Security Requirement Analysis

• Security requirement specification and analysis is costly in terms of time and budget
• Further customizations are required when adapting the generic security guidelines to design systems’ security

5.1.2 Architectural Support for Security. In this section, we describe the countermeasures, C7 to C15, focused on securing
C3I systems at the architectural/design level. The reviewed studies have used different types of architectural styles for

designing C3I systems. These styles include service-oriented architecture, cloud-based architecture, blockchain-based

architecture, and security architectures designed explicitly for C3I systems.

Service-oriented C3I Architecture: C3I systems are composed of heterogeneous components (e.g., Decision support
systems, Performance monitoring tools and Signal processing controllers ) that are geographically scattered and

connected through diverse communication mechanisms (e.g., 4G/5G and Wi-Fi). Therefore, Service-oriented architecture

(SOA) is often considered a good fit for designing tactical C3I systems. In addition to enhanced security, SOA also helps

C3I systems to achieve interoperability, scalability and platform independence among these heterogeneous system

components [28]. Despite these advantages, researchers have identified security limitations that impede the successful

inclusion of SOA in designing C3I systems and have proposed various measures to overcome these challenges. Gkioulos
and Wolthusen [71–75] and Rigolin and Wolthusen [106] have proposed security policy modeling methods (C7) for
designing secure SOA-based tactical systems. The authors have leveraged Web Ontology Language with Descriptive

Logic for designing and implementing these security policies. Subsequently, Gkioulos et al. have proposed and validated
a framework (C8) for designing secure SOA-based C3I systems [70, 75]. They authors claimed that in addition to security,
the proposed framework also provides configuration flexibility under dynamically changing network conditions,

enhanced performance and improved information flow [75].

Cloud-based C3I architecture: The adoption of cloud computing technologies offers many benefits such as convenient
access, cost reduction, deployment flexibility, low maintenance and timeliness for C3I systems [22], [65]. However,

cloud computing also introduces security concerns like data confidentiality breaches and security misconfigurations

[22]. Hence, the incorporation of cloud technologies in C3I systems requires an increased focus on the secure design of
C3I systems. Keeping this in focus, Jahoon et al. [94] have proposed a security architecture (C9) consisting of three
layers (i.e., virtualization, physical and operating) with distinct functions to secure the overall system. The proposed

architecture is built upon their findings [93, 94], such as the need for server virtualization security (e.g., hypervisor and

public server security) to design secure cloud-based C3I systems. Furthermore, Abdullah et al. [22] also have identified

user accountability management, accurate system configuration, and uninterrupted service maintenance as some of the

security necessities that must be incorporated into cloud-based C3I systems.

Blockchain-based C3I architecture: Blockchain technologies provide many advantages for C3I systems, including
secure storage, transmission and processing of mission-critical data [134]. Thus, researchers have leveraged blockchain

technologies to design and implement secure C3I systems. Akter et al. have proposed a blockchain-based distributed
smart-contract method for secure C3I data transmission (C10) [19]. Through a simulation study, the authors have
validated that the blockchain-based method is efficient in secure message transmission compared to real-time queuing

and traditional queuing theory-based methods [19]. In a similar study, Akter et al. [20] have implemented a blockchain

assisted cryptographic peer to peer (P2P) network for secure data communication among C3I nodes. In this approach,
the researchers have used a Central Cloud Server to store legitimate node IDs with their public keys to facilitate Local
Edge Servers in identifying intruders [20]. From the perspective of data sharing among trusted agencies (C11), Razali

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

19

et al. [141] have proposed a smart contract based method that supports intelligent data management (i.e., generation,

edit, view and storage) and dissemination between legitimate users. This method’s use of distributed and decentralized

databases have provided enhanced confidentiality and availability for data from different sources (e.g., sensor, human

and cyber).

Other security architectures for C3I systems: Here, we detail the countermeasures that present novel architectures
for securing C3I systems. For example, considering architectural support for secure communication (C12), Jin-long
et al. [84] have proposed a multi-federation architecture based on a gateway-proxy approach, facilitating inter and

intra-federation secure data transmission. They have extended their approach through a double-proxy mechanism to

avoid the communication overhead problem. Similarly, Alghamdi et al. [25] have presented a net-centric architectures for

secure C3I systems’ interoperable communication mechanisms. To further enhance the security of C3I communication

networks, this architecture is equipped with multiple firewalls and intruder detection systems. For sensitive data security
in C3I systems (C13), Guturu [78] has presented a distributed database management architecture grounded on AND-OR
replication algorithm. The author has claimed that the proposed architecture improves C3I systems data storage security

through high fault endurance and resilience to attacks compared to 2-phase and 3-phase commit methods. In another

approach, Seungjin Baek and Young-Gab Kim have proposed a four-layer security architecture [33] focusing on big

data security in C3I systems. The four layers (i.e., application, big data platform, data, and infrastructure) provide

security in data generation, data processing and data usage processes of C3I systems. We have also identified several

countermeasures that focus on securing the overall C3I systems’ architectures. From the perspective of securing next
generation C3I systems (C14), Perkinson [136] has introduced a holistic approach for next-generation C3I systems’ cyber
security, consisting of four main phases, detection, correlation, visualization and response. The author has discussed

key findings (e.g., the importance of automation in the decision-making process) that must be considered in future C3I

systems designing based on the lessons learned from a pilot study. In a different study, Theron and Kott [161] have

envisioned that future C3I systems should be equipped with Autonomous Cyber Defense (ACyD) methods to fight

against Autonomous Intelligent Malware (AIM) attacks. They have considered Autonomous Intelligent Cyber-Defense

Agents (AICAs) as a possible security mechanism that future C3I systems should be equipped with to defend themselves

from AIM attacks. To develop a generic cyber-doctrine for next generation C3I systems, Ormrod and Turnbull [132]

have investigated the existing multinational cyber-doctrines (e.g., USA, UK, Australia and Canada) and proposed a

nested domain model. The authors have stated that the proposed model provides a flexible and refined conceptual

framework for future C3I cyber operations.

In respect to supportive technologies for developing secure architectures (C15), Alghamdi et al. [23] have suggested
that threat modeling techniques can be applied in identifying security requirements, vulnerabilities and threats

associated with C3I systems. They have highlighted the necessity of embedding security at the C3I systems architectural

level through employing a top-down threat modeling approach. Furthermore, Alghamdi et al. [24] have manifested a

systematic approach to capture threats and formulate security defenses considering C3I systems’ overall architecture.

The researchers have leveraged an assurance case method and Claims Arguments Evidence tool for modeling and

visualizing the security architecture, respectively. Similarly, Biagini and Corona [40] have leveraged the Modeling and

Simulation as a Service (MSaaS) paradigm to recognize and demonstrate tools that can be incorporated into Counter

Unmanned Autonomous Systems considering the security of future C3I systems.

20

Ahmad et al.

Benefits of Architectural Support for Security

• In-depth incorporation of security into every component of C3I systems
• Instead of considering ad-hoc security mechanisms, embeds security into the architectural design of C3I systems

Limitations of Architectural Support for Security

• Time consuming to identify every security aspect to be considered in the architectural design
• Require expertise knowledge on different system components (e.g., communication networks and database modeling) to design an

overall architecture considering their dependencies

• Require expertise domain knowledge (e.g., cloud computing and blockchain) to incorporate security into the overall architecture

5.1.3 Attack Impact Analysis. Attack impact analysis refers to the study of adverse impacts of attack vectors executed
on C3I systems. The attack impact analysis helps in predicting possible consequences of attack vectors, which also
highlights security loopholes in C3I systems design. The following countermeasures, C16 to C21, present different
approaches for attack impact analysis in C3I systems.

Fang et al. [61] have evaluated two types of cyber impacts (i.e., system structure damaged effect and structure

efficiency reduction effect) for C3I systems. The authors have presented mathematical modeling and simulation study
(C16) for evaluating attack impacts through different statistical parameters such as connectivity rate and information
efficient. Similarly, Jinfeng et al. [85] (C17) have used information flow parameters, such as intelligence, command-and-
control, and collaboration information flow parameter, to calculate the C3I system structure effects (i.e., damaged effect

and fallback effect). Focusing on metrics-driven cyber impact analysis, Bernier et al. [38] have presented a metrics
framework (C18) to assess the impact of cyber operations in C3I systems. The researchers have mainly considered three
metrics (i.e., measures of force effectiveness, command-and-control effectiveness and performance) along with the US

DoD framework and goal-question-metric paradigm [35] to evaluate cyber impacts in C3I systems.

Since simulation studies provide cost, time and power efficient ways for analyzing attack impacts on C3I systems,

researchers have conducted simulation studies to investigate cyber impacts on C3I systems. For example, Mursia et al.
[125] (C19) have executed three attack vectors (i.e., Eavesdropping (A11), Flooding Attack (A12), and Jamming Attack
(A13)) on a C3I MANET environment created in EXata/Cyber emulator. The researchers have analyzed cyber impacts in
terms of network parameters: throughput, latency and jitter. Similarly, Morton et al. [124] have conducted a simulation
study (C20) for executing military cyber operations. The authors have reported several adverse effects of cyber-attacks
such as unauthorized use, interception, and degradation of C3I systems. Another simulation approach, called cyber
simulation terrain (C21) [133], is based on ontological network representation for modelling cyber assets and systems of
computer networks (e.g., C3I networks). The authors have investigated the impacts of heartbleed vulnerability (V11) in
simulated computer network operations.

Benefits of Attack Impact Analysis

• Helps executives and stakeholders to assess and visulaize cyberscurity risk in C3I systems
• Facilitates C3I systems’ operators to estimate damages in case of successful cyber-attacks
• Provides multiple viewpoints and parameters to investigate adverse effects of cyber-attacks

Limitations of Attack Impact Analysis

• Lacking in-depth knowledge of each C3I component and its operating environment to assess cybersecurity risk of C3I systems
• Inability to replicate cyber-attacks as its original incident, which may result in inaccurate impact analysis and quantification

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

21

5.2 Operational Countermeasures

Operational countermeasures refer to the security mechanisms proposed for protecting C3I systems during tactical

operations. The existing literature has reported intrusion detection mechanisms, cryptographic techniques and access

control approaches for securing C3I operations. In the following, we describe the proposed countermeasures along

with their benefits and limitations.

Intrusion Detection. Intrusion detection mechanisms aim at detecting cyber-attacks on C3I systems. When
5.2.1
it comes to cybersecurity, time is a critical factor. The sooner an attack can be detected, the sooner the attack will

be contained/mitigated. According to [3], timely detection of an attack can reduce the success rate of an attack

by 97%. However, noise and limited resources of communication networks damage the effectiveness of intrusion

detection mechanisms [31], which leads to false-alarm generation and communication overhead during time-critical

C3I operations. Tactical domains, such as disaster management and rescue operations, cannot endure such anomalies in

C3I operations due to their sensitive nature. Therefore, researchers have proposed the following effective intrusion
detection approaches, C22 to C26, to ensure the prompt detection of intrusions in C3I tactical systems.

Shaneman et al. [151] have proposed a cost-effective mechanism, called intrinsic fiber monitoring (C22), to detect
intrusions in fiber-optic cables used for data transmission in C3I networks. The researchers have experimentally proved

that the intrinsic fiber monitors neither disturb C3I network resources (e.g., bandwidth) nor generate false alarms while
detecting malicious activities (e.g., tampering attack (A6)) in C3I systems. For early detection of intrusions, Manes
et al. [112] have presented an attack management framework (C23) that combines network vulnerability models (i.e.,
vulnerability analysis) with attack models (i.e., attack trees) to detect the early signs of multi-stage attack vectors in C3I

networks. The proposed architecture also facilitates the visualization of intruders activities in C3I networks, which

helps security experts in preparing action plans against cyber adversaries in real-time.

To discover malicious activities of intruders in tactical MANETs, a light-weight C3I monitoring system (C24) based
on Multi-Instance Multi-Label learning protocols has been proposed in [145], which causes less computational and

communication overhead in C3I networks as compared to the existing solutions such as watchdog scheme and digital

signatures. Concerning the security of SOA based C3I systems, Jorma and Jan [86] have developed an intruder detection
system architecture (C25) underpinned by four design patterns (i.e., linked list, sandbox, event bus, and monitor). The
proposed architecture uses active and passive monitoring techniques, such as detection and alarm rules, for detecting

intruders in SOA based C3I systems. Another mechanism, presented by Kwon et al. [100], proposes an AI-based C3I
device identifier (C26) based on Wiener filters, MIRtoolbox and ML models (i.e., Support vector machine). The presented
mechanism is used in digital forensics for detecting malicious activities (e.g., data deletion and modification) in the

stored data of C3I databases.

Benefits of Intrusion Detection Mechanisms

• Cost effective and resource efficient mechanisms for detecting cyber-attacks in resource constrained tactical domains
• Elimination of adversarial attacks from its initial penetration point
• Possibility of predicting and taking proactive measures against potential future attacks

Limitations of Intrusion Detection Mechanisms

• Due to inaccurate inferences (false positives), even legitimate users might be obstructed from accessing to services
• Need of human intervene for correcting false-classifications and incorporating new or existing threat variations

22

Ahmad et al.

5.2.2 Cryptography. Cryptography is a process of encoding and decoding sensitive information. Considering the
criticality of C3I tactical operations (Section 1), cryptography has been used in C3I systems for preventing unauthorized

disclosure of sensitive information [114]. For this purpose, cryptographic functions, along with their respective crypto-

graphic keys, are used to encrypt and decrypt tactical information stored and transmitted among C3I systems. The
cryptographic mechanisms, C27 to C34, are mostly focused on cryptographic key management in tactical environments
for securing real-time data transmission and storage in C3I systems.

Cryptographic key management refers to the process of generating, exchanging, storing, deleting and replacing

cryptographic keys in tactical C3I systems. In general, cryptographic key management solutions are costly in terms

of both computational and network resources usage [119], which leads to communication overhead and delay in C3I

tactical operations. Therefore, the existing literature presents efficient ways for managing cryptographic keys in C3I
systems. For example, Kang et al. [88] (C27) have used symmetric-key algorithms to generate cryptographic keys of
different lengths according to the severity levels of security risks in C3I systems. The proposed mechanism provides

both security and optimal QoS of C3I systems simultaneously in tactical domains. Focusing on energy-efficiency,
Chudzikiewicz et al. [45] have introduced a secure key management mechanism (C28) in which a central node uses a
Quantum Random Number Generator to generate cryptographic keys, and distribute them in C3I networks through
secure session management among C3I nodes. Another key management process (C29), proposed in [27], uses a HenLog-
Random Key Generator for secure key generation, which provides a high level of confusion and diffusion in the

encryption process of satellite images used in C3I systems. Furthermore, Furtak et al. [66] have presented a time and
memory efficient approach for key management (C30) based on symmetric-key cryptography to secure a network access
layer of C3I networks. The authors have also proposed an asymmetric cryptographic approach [67] (C31), which is
more time-efficient, for key management and secure data transmission in C3I systems. To secure the cryptographic key
distribution process, Matt et al. [119] have presented a non-interactive identity-based key-sharing scheme (C32) among
C3I nodes. The proposed mechanism consumes less computational power and network resources (e.g., bandwidth) to

generate and share cryptographic keys in C3I systems.

Apart from the abovementioned key management solutions, the state-of-the-art also reports data encryption tech-

niques for sensitive data protection in tactical environments. For instance, Romero-Mariona et al. [144] have introduced
an encryption device called CEALICIAN (C33) that uses NSA-Suite B cryptographic algorithms to encrypt or decrypt
sensitive information at a high data rate in real-time. The CEALICIAN focuses on less power consumption and form
factor to address the size, weight and power requirements of C3I systems. Furthermore, Abdullah et al. [26] (C34) have
qualitatively evaluated three data encryption methods (i.e., advanced encryption standards, Ron Rivest, Adi Shamir, and

Leonard Adleman, and quantum encryption) for C3I systems. Based on their research findings and the criticality of C3I

systems, it has been concluded that the advanced encryption standards are more suitable for C3I systems compared to

other examined encryption methods.

Benefits of Cryptographic Mechanisms

• Provides computational and network resource efficient mechanisms for resource constrained tactical environments
• Possibility of adopting into different types of C3I components such as MANET and Web services

Limitations of Cryptographic Mechanisms

• Need of specialized hardware or complex algorithms
• Added overhead on resource scarce devices such as sensors and wireless transceivers

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

23

5.2.3 Access Control. Access control refers to security mechanisms that allow authorized users, such as field comman-
ders and decision-makers, to access C3I systems. As described in Section 2, C3I systems follow a strict chain-of-commands

that has multiple users with different access rights to execute C3I operations. Therefore, access control mechanisms

are necessary for C3I systems. Since tactical missions success, lives and property largely depend upon access control

mechanisms [117], C3I systems should employ reliable, flexible and efficient access control approaches for preventing

unauthorized access in tactical domains. Therefore, researchers focus on developing effective access control mechanisms,
C35 to C40, for tactical C3I systems.

Zachary [178] has presented a decentralized approach (C35) based on one-way accumulators for authenticating
legitimate nodes in distributed C3I networks. The proposed mechanism securely manages a node membership list for

all C3I nodes, while utilizing less computational and network resources (e.g., power and bandwidth), in dynamic C3I

networks. Similarly, a cost-effective and power-efficient technology, called digital-ultrasonic sensor network technology
[64] (C36), has been proposed for preventing unauthorized access in C3I systems. The digital ultrasonics outperforms
the existing alternatives such as infrared, Bluetooth, and ultra-Wide Band etc. To ensure access control in horizontal and

vertical chain-of-commands in C3I systems, Jarmakiewicz et al. [83] have proposed multi-level security and multiple
independent level security mechanisms (C37) based on XACML and WEB services. The proposed mechanisms are
time efficient in authorizing legitimate users for operating C3I systems. Similarly, Maule [121] has presented a multi-
level security framework, known as multi-layered ontology security model (C38), to safeguard military information
system data by using different authorization levels. Another multi-layer model (C39), reported in [143], is used to
implement authentication, authorization and accountability in C3I systems. The multi-layer approach provides a road

map for managing access in integrated services (e.g., SOA architecture) based on operational requirements. For efficient

access control in a C3I command hierarchy, Maschino [117] has compared different combinations (i.e., centralized and
decentralized) of Role-Based Access Control (RBAC) mechanisms (C40) for centralized and decentralized C3I systems.
Consequently, the author has recommended a hybrid RBAC mechanism for ensuring role-based authentication in C3I

systems.

Benefits of Access Control Mechanisms

• Restrict the unauthorized access, origination, and retention of C3I sensitive data
• Mechanisms such as multi-level security and RBAC, provide strict access control at the each level of C3I chain-of-command

Limitations of Access Control Mechanisms

• Implementation difficulties in widely distributed C3I systems across tactical domains
• Misconfigured access control measures provide false sense of security
• Increased complexity of user management when the system expands

6 DISCUSSION

In this section, we analyze our research findings reported in Sections 3, 4, and 5. Based on our analysis, we develop a

distinctive relationship between attack vectors, vulnerabilities and countermeasures. Furthermore, we propose future

research directions to guide researchers and practitioners in advancing the literature on cybersecurity of C3I systems.

6.1 Mapping C3I Attack Vectors to Vulnerabilities

While Sections 3 and 4 respectively describe the individual security vulnerabilities and attack vectors, they do not show

any association or relationship (i.e., how a particular attack vector can exploit C3I system vulnerabilities). Therefore, to

24

Ahmad et al.

support practitioners and developers in building secure C3I systems, we articulated a mapping between C3I systems’

security vulnerabilities and attack vectors. Our mapping is based on the data extracted from Common Attack Pattern
Enumeration and Classification (CAPEC)8 and Common Weakness Enumeration (CWE)9 databases. CAPEC provides a
dictionary of attack vectors used to exploit known vulnerabilities. On the other hand, CWE specifies the list of known

hardware and software vulnerabilities.

As Figure 8 illustrates, we initially mapped the identified C3I attack vectors with the CAPEC attacks and extracted

their associated CWE numbers. Then, we mapped corresponding CWEs to the C3I security vulnerabilities that were
extracted from the surveyed studies. For example, firstly, we mapped Brute Force Attack (A1) to CAPEC-112: Brute Force
Attack based on the information provided in the surveyed studies [88] and CAPEC database [10], respectively. Secondly,
CWE-521: Weak Password Requirements [12] was identified as a corresponding CWE for the above mentioned CAPEC
attack. Thirdly, we linked this CWE with Insecure Configuration Stores (V7) since the use of weak passwords [23] is one
of the root causes resulting into insecure configuration stores. Since all our identified attack vectors and vulnerabilities

are not available in CAPEC and CWE, we consulted external sources (e.g., white papers and blogs) to make this mapping

further comprehensive by identifying other possible associations between identified vulnerabilities and attack vectors.
For example, we mapped Flooding Attack (A12) with Insufficient Logging and Monitoring (V1) vulnerability since the lack
of network traffic monitoring allows attackers to flood C3I nodes with a large volume of malicious data and obstruct

the communication between legitimate C3I nodes [113].

As Figure 9 presents, a vulnerability can be exploited by multiple attacks (e.g., vulnerability V1 can be exploited by
attack vectors A1, A2, A8 and A12) and an attack vector can exploit multiple vulnerabilities (e.g., attack vector A1 can
exploit vulnerabilities V1, V2, V6 and V7). Thus, it reflects the necessity of employing investigative mechanisms such as
threat modeling to identify all possible associations between vulnerabilities and attack-vectors before designing security
defenses. For example, to prevent Brute Force Attack (A1) execution in C3I systems, developers must not only consider
implementing cryptographically strong user credential storage, but also incorporating adequate intrusion detection

and prevention mechanisms. As shown in Figure 9, the use of COTS component is exploitable by all identified attack

vectors. This is because the use of vulnerable COTS components in C3I systems expose the system to several attack

vectors since these third-party components can contain intentional (e.g., backdoors) or unintentional (e.g., inadequate

testing) security flaws. Thus, it emphasizes conducting rigorous security and quality testing before integrating these

components into C3I systems. Moreover, we recommend that such testing and quality checks must be incorporated

8https://capec.mitre.org/
9https://cwe.mitre.org/

Fig. 8. The methodology followed for mapping C3I attack Vectors and vulnerabilities. CAPEC (Common Attack Pattern Enumeration
and Classification) and CWE (Common Weakness Enumeration)

Vulnerabilities in C3I Systems Attack1CWEXVulnerability1Attack2CWEYCWEZAttack19Vulnerability2Vulnerability13CAPEC AttacksAttack1Attack2Attack19------Attack Vectors for C3I SystemsMapping C3I system attack vectors to CAPEC attacks.Step 1CAPEC attacks mapping to their associate CWEs.Step 2Mapping between CWEs and C3I  vulnerabilities.Step 3------------A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

25

Fig. 9. Mapping between identified C3I attack vectors and vulnerabilities

as a mandatory procedure in the designing phase of the C3I system development process. There are numerous ways

malware can exploit vulnerabilities, both directly and indirectly, through different penetration methods (e.g., over the

network and downloading from the internet [176]). Therefore, in this mapping, we consider that malware can exploit all
the reported C3I vulnerabilities. For example, malware can capitalize on V7: Insecure data storage and access C3I systems’
security-critical data. On the other hand, malware can exploit V1: Insufficient logging and monitoring vulnerability and
spy on C3I operations. Therefore, we emphasize the requirement of employing malware detection methods (e.g., AI/ML

and pattern mining [176]) in C3I systems.

6.2 Mapping C3I Attack Vectors to Countermeasures

As discussed in the previous sub-section, the existing literature does not report a clear relationship between attack

vectors, vulnerabilities, and countermeasures. Therefore, similar to attacks-vulnerabilities mapping, we map attack

vectors to countermeasures for demonstrating which countermeasures can defend C3I systems against which attack

vectors. Such a relationship accumulates possible countermeasures for an attack vector, which facilitates researchers and

practitioners in identifying solutions against an attack vector. Since attack vectors and countermeasures can be linked

in several ways, we focus on developing an evident relationship between them. For this purpose, we have developed a

two-step approach to gather reported and unreported distinct attacks-countermeasures relationships. In the first step,

we have identified the relationship between attack vectors and countermeasures directly from the existing literature.
For example, the variable cryptographic key length (C27) provides protection against brute force attack (A1) as reported

 A1: Brute Force Attack A2: Insider Attack A3: Cross-site Scripting A4: SQL Injection A5: Cross-site Request Forgery A6: Tampering Attack A7: Malware A8: Repudiation Attack A9: Time of Check -Time of Use A10: Spoofing Attack A11: Eavesdropping A12: Flooding Attack A13: Jamming Attack A14: Black Hole Attack A15: Rushing Attack A16: Wormhole Attack A17:  Replay Attack A18: Routing Attack A19: Lack of Synchronization V1: Insufficient Logging and Monitoring X X     X X X   X        V2: Insecure Session Management X      X   X         X V3: Missing Function-level Access Control  X X  X X X             V4: Insecure Role-based-Access-Control  X     X             V5: Open Redirects   X  X  X             V6: Insecure Direct Object References X X    X X             V7: Insecure Configuration Stores X X    X X             V8: Use of COTS Components X X X X X X X X X X X X X X X X X X X V9: Insecure Data Storage      X X             V10: Insecure OpenSSL Software       X             V11: Use of Public Communication Networks       X   X X  X       V12: Unencrypted Wireless Communication Links       X    X         V13: Broken Wireless Communication Links       X   X    X X X X    Attack Vectors Security Vulnerabilities 26

Ahmad et al.

Fig. 10. Mapping between C3I attack vectors and countermeasures. C1 to C21 applicable for development phase, C22 to C40 applicable
for operational phase of C3I systems

 A1: Brute Force Attack A2: Insider Attack A3: Cross-site Scripting A4: SQL Injection A5: Cross-site Request Forgery A6: Tampering Attack A7: Malware A8: Repudiation Attack A9: Time of Check -Time of Use A10: Spoofing Attack A11: Eavesdropping A12: Flooding Attack A13: Jamming Attack A14: Black Hole Attack A15: Rushing Attack A16: Wormhole Attack A17:  Replay Attack A18: Routing Attack A19: Lack of Synchronization C1: Digital Certificates and Smartcards for C3I System Security      X X X  X X X X X  X X X X  C2: Pre-requisites for Securing C3I Systems      X X   X X X X X X X X X  C3: Prioritization based Information Security X X X X X X X X X X X X X X X X X X X C4: Security Standards for Protecting Tactical Data X X X X X X X X X X X X X X X X X X X C5: Securing Cyber Common Operational Picture X X X X X X X X X X X X X X X X X X X C6: Automating C3I Network Security Policies Evaluation Process      X X   X X X X X  X X X X  C7: Security Policy Modelling in SOA-based C3I Systems  X    X X X   X X  X X X X   C8: Designing Secure SOA-based C3I Systems  X    X X X   X X  X X X X   C9: Designing Secure Cloud-based C3I Systems  X    X  X            C10: Blockchain-based Secure Data Communication  X    X  X X X X       X X C11: Smart Contract Assisted Secure Data Sharing  X    X  X X X X       X X C12: Designing Secure C3I Communication Systems      X X   X X X X X X X X X  C13: Data Security Architectures for C3I Systems X X X X X X X X X           C14: Architectural Support for Designing Secure C3I Systems X X X X X X X X X X X X X X X X X X X C15: Assistive Technologies for Designing Secure C3I Systems X X X X X X X X X X X X X X X X X X X C16: Attack Impact Analysis based on Statistical Parameters      X X   X  X X X X X X X  C17: Attack Impact Analysis based on Information Flow Parameters      X X   X  X X X X X X X  C18: Metrics-Driven Attack Impact Analysis X X X X X X X X X X X X X X X X X X X C19: Cyber Impact Analysis of Simulated Tactical C3I Operations           X  X     X  C20: Simulation Study for Evaluating Military Cyber Operations  X    X X X  X X X X X X X X X  C21: Cyber Simulation Terrain based on Ontological Representation      X              C22: Intrinsic Fiber Monitoring      X  X    X        C23: Proactive Intrusion Detection X X X X X X X X X X X X X X X X X X X C24: Light-Weight C3I Monitoring System      X    X  X  X X X X   C25: Intrusion Detection for SOA-based C3I Systems X X X X X X X X            C26: AI-based C3I Device Identifier  X    X  X            C27: Cryptographic Key Length Selection for optimal Security and QoS X     X     X         C28: Secure Key Distribution in Tactical Domains      X  X  X X   X X X  X X C29: Secure Key Generation for Satellite Images Encryption      X     X         C30: Light-Weight Symmetric-Key Cryptography      X  X  X X      X   C31: Light-Weight Asymmetric-Key Cryptography      X  X  X X         C32: Non-Interactive Key-Sharing Mechanism      X  X  X X   X X X X   C33: CEALICIAN – An Encryption Device      X     X         C34: A Comparison of Encryption Methods      X     X         C35: Access Control in Decentralized C3I Environments      X  X  X X   X X X  X  C36: Digital-Ultrasonic Sensor Network Technology      X  X  X          C37: Multi-Level Security for C3I Command Operations  X    X  X  X          C38: Multi-Layered Ontology Security Model  X    X  X  X          C39: Authentication, Authorization, and Accountability in C3I Systems  X X  X X  X  X       X   C40: A Comparative Analysis for RBAC Mechanisms  X    X  X  X X      X    Attack Vectors Countermeasures A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

27

in [88]. Similarly, the AI-based C3I device identifier (C26) detects sensitive data manipulation (A6) in C3I databases [100].
In the second step, we have thoroughly analyzed the attack vectors and countermeasures to identify relationships
between them. For instance, the CEALICIAN (C33) encrypts and decrypts sensitive information transmitted through C3I
communication links, which hinders the eavesdropping attack (A11). Similarly, the non-interactive key sharing scheme
(C32) mitigates the chances of tampering attack (A6) during data transmission. Therefore, we have mapped the C33
and C32 to the A11 and A6 respectively. In this way, we have created a distinct relationship between attack vectors
and countermeasures through our two-step approach. Figure 10 presents the mapping of the attack vectors to their

corresponding countermeasures.

We observe that the countermeasures concerning the development phase of C3I systems (i.e., C1 to C21) provide
holistic recommendations for securing C3I systems from most, if not all, attack vectors. For example, the designing
secure C3I communication systems (C12), if implemented rigorously, prevents several attack vectors such as A6, A7, A10,
A11, A12, A13, A14, A15, A16, A17, and A18. Similarly, blockchain based design patterns (i.e., C10 and C11) not only prevent
attack vectors targeting C3I communication links (i.e., A10 and A11), but also protect against repudiation attack (A8)
in C3I systems. Therefore, the countermeasures (i.e., C1 to C21) related to the development category provide solution
against most of the attack vectors as depicted in Figure 10. However, organizations employing C3I systems cannot

implement security measures extensively at once due to their limited expertise, financial and technological resources.

Therefore, we emphasize the need of prioritizing the security measures while developing C3I systems. For this purpose,

we assert that researchers and practitioners should first analyze C3I systems’ operational and environmental conditions

and then implement ad hoc countermeasures accordingly during the development of C3I systems.

Regarding the operational countermeasures (C22 to C40), we observe a lack of interoperability between security tools
providing intrusion detection, cryptography and access control capabilities in C3I systems. For example, the detective
countermeasure AI-based C3I device identifier (C26) only detects the tampering attack A6 execution, but, to prevent A6,
the preventive countermeasure non-interactive key sharing mechanism (C32) needs to be implemented. On the contrary,
the preventive countermeasures (e.g., C27 to C40) take more time in the absence of detective countermeasures (e.g., C22
to C26) for hampering the execution of attack vectors [3]. Therefore, we assert that researchers should formulate novel
defense mechanisms that should not only be able to integrate security tools but also be flexible enough to accommodate

new security tools for efficiently detecting and preventing attack vectors in time-critical C3I systems.

6.3 Future Research Areas

Based on the findings presented in Sections 3, 4, and 5, we propose the following future research directions for advancing

the state-of-the-art on the cybersecurity of C3I systems.

Secure SOA adaptation for C3I systems. As discussed in Section 2, a C3I system is an integration of multiple
6.3.1
heterogeneous systems. Therefore, traditional monolithic architecture is not a viable choice for designing large scale

C3I systems [126]. Driven by the necessity to adopt fitting architecture patterns, researchers have considered SOA

to design C3I systems (e.g., Deployable Joint C3I System [111]). However, SOA-based systems suffer from various

security vulnerabilities and attack vectors [107, 118], raising many security challenges when adopting into security-

critical tactical systems such as C3I systems. For example, SOA lacks continuous monitoring, and intrusion detection
mechanisms by design [86]. Hence, SOA-based C3I systems are vulnerable to numerous attack vectors (e.g., Brute
Force Attack (A1), Insider Attack (A2) and repudiation attack (A8)). Therefore, considering the contemporary efforts
for addressing the security challenges in adapting SOA to C3I systems (Section 5.1.2), it is evident that the secure

28

Ahmad et al.

adaptation of SOA into C3I systems is an upcoming research field. Therefore, we assert that the cybersecurity of

SOA-based C3I systems must be critically considered, and novel security measures should be embedded into the design

and implementation of these systems. Furthermore, it is also observed that research on the SOA-based C3I domain

require comprehensive evaluation efforts, including experiments on real-world implementations, as some of the existing

studies are limited to conceptual solutions only.

Lightweight security measures. C3I systems are usually operated in resource-constrained environments. Therefore,
6.3.2
C3I systems are designed according to certain bandwidth, energy, and memory specifications. This implies that each

component of a C3I system needs to be operated with limited resources. This holds true for the security measures (e.g.

intrusion detection, cryptographic mechanisms, and access control) incorporated in C3I systems. If security measures

consume more computational power, on-board storage or network resources for securing C3I systems, this results

in affecting strategic operations of C3I systems. Though researchers have proposed resource efficient solutions that

separately consider power [64], memory [66], computing resource [88], and network resource [151] efficiency, we
observe a lack of holistic and optimal security measures similar to the CEALICIAN (C33) that not only provides power
efficiency, but also considers size and weight requirements of C3I systems while encrypting and decryption sensitive

information. Therefore, we assert that researchers should focus on developing light-weight security measures that

consider most, if not all, parameters of lightweight cybersecurity.

Secure cloud-based C3I architecture. Although cloud computing generally is a widely used technology, its
6.3.3
incorporation into the C3I domain is quite new. As discussed in Section 5.1.2, cloud computing provides many benefits

(e.g., cost reduction, convenient access, and deployment flexibility) for improving the efficiency and operability of

C3I systems in tactical domains [22]. Considering these advantages, the United States has developed cloud-based C3I

systems for its national defense and public sector, and Korea is shifting its national defense infrastructure to cloud-based

systems [93]. However, the integration of cloud computing with C3I systems possesses many security challenges (e.g.,

data confidentiality, integrity and server visualization), as reported in [22, 93, 94]. For example, the confidentiality of

data can be breached in the case of the public cloud, where multiple users share the same infrastructure. Similarly, cloud

service models such as PaaS and IaaS allow users to install their own software; this privilege can damage the integrity

of sensitive data [22]. We identified only one attempt (i.e., [94]) to design secure cloud-based C3I systems from the

surveyed articles. Since the cybersecurity and efficiency of C3I systems cannot be considered orthogonal, therefore, we

assert that researchers need to focus on addressing the security challenges in developing cloud-based C3I systems to

enhance the efficiency and cybersecurity of C3I systems simultaneously.

6.3.4 Blockchain for securing C3I infrastructure. Blockchain technology provides strict authentication, secure distribu-
tion of storage facilities and computational resources across a C3I tactical domain [19, 134], which avoids the chances

for a single point of failure in C3I systems. However, we have found significantly low research interest in incorporating

blockchain technologies into C3I systems, compared to other domains, such as IoT [44] and economic systems [180].

The approaches proposed in reviewed studies are limited to secure data transmission [19, 20] and data sharing [141] in

tactical C3I systems. Therefore, it is evident that blockchain technology is relatively new in C3I domains. Considering

the importance of the blockchain in tactical domains [96, 122], we assert that researchers should explore new directions

for incorporating blockchain technology for the cybersecurity of C3I systems.

6.3.5 AI/ML for the cybersecurity of C3I systems. The use of AI/ML for cybersecurity is increasingly explored. For
instance, in contrast to signature-based intrusion detection, ML-based intrusion detection is widely investigated [91].

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

29

Fig. 11. Evaluation methods

Fig. 12. Software and hardware tools used for C3I systems
security evaluation

Similarly, AI/ML approaches are used for detecting data exfiltration and automating response process to cyber incidents

[82, 147, 166]. However, we find little evidence (only 3 papers) in support of using AI/ML for enhancing the cybersecurity

of C3I systems. For example, Kwon et al. [100] leveraged supervised learning for classifying C3I mobile devices into

trusted and untrusted categories. Similarly, among the surveyed paper, we found that the authors in [145] used multi-

instance-multi-label learning models for detecting intrusion attempts on C3I systems. Furthermore, Kott et al. [95]

have presented an initial reference architecture based on the intelligent-agent technology (i.e., Autonomous Intelligent

Cyber-defense Agent) for securing C3I systems. As we found only three papers leveraging AI/ML for securing C3I

systems, we believe that there is room for further exploration along the side of using AI/ML for C3I security. In this

regard, we assert that researchers should explore the use of AI/ML for deep packet inspection, anomaly detection, APT

detection, and detecting data exfiltration attempts on C3I systems.

6.3.6 Need of rigorous and comprehensive evaluation. We investigated the evaluation methods applied in the surveyed
articles and identified that 36.67% studies have not evaluated their proposed security mechanisms (Figure 11). Moreover,

25% of the studies have been evaluated through hypothetical scenarios only. Accordingly, it is evident that over 61% of

research have not followed a systematic and rigorous evaluation process in their studies. From the surveyed papers,

5%, 16.67% and 15% studies have been evaluated via prototyping, simulation, and laboratory experiments, respectively.

Figure 12 presents the hardware and software tools used in these evaluation methods. Notably, only one study has been

evaluated in a real-world setting. Therefore, it raises significant concerns on the reliability of the existing literature due

to the lack of rigorous evaluation. Furthermore, it is being exacerbated by the highly technical and critical nature of C3I

domain. As discussed in Section 2, C3I systems consist of multiple heterogeneous subsystems, and some of these are

deployed in hostile environments. Accordingly, practical issues such as physical destruction of nodes due to hostile

conditions, compromised software components, degradation of hardware components with time, and natural disasters

(e.g., flood, fire, storms) present a significant impact on the performance, security, and safety of C3I systems. Therefore,

we advocate that countermeasures for protecting C3I systems should be evaluated in real-world settings through a

systematic evaluation approach to strengthen the credibility of the resulting research finding.

7 CONCLUSION

The cybersecurity of C3I systems has become a serious concern due to the severe criticality of tactical domains (e.g.,

military and rescue missions) where C3I systems are used. Therefore, we gather, examine, and synthesize literature

on the cybersecurity of C3I systems. Based on our review, we have critically analyzed and categorized 13 security

vulnerabilities, 19 attack vectors, and 40 countermeasures considered important for the cybersecurity of C3I systems.

Hypothetical Scenario, 25%Simulation, 17%Laboratory Experiments,15%Prototype, 5%Real-World Setting, 2%No Evaluation, 36%MATLAB Simulink (https://bit.ly/37Wd9Ut)MIRtoolbox(https://bit.ly/3uIq4Di)NetGlean(https://bit.ly/2O4InSp)EXata(https://bit.ly/37X4rWe)iperf(https://bit.ly/3svanxo)Riverbed Modeler (https://rvbd.ly/3q4TZly)Acunetix(https://bit.ly/3bMBb5z)Pallet Reasoner (https://bit.ly/30088WU)Raspberry Pi (https://bit.ly/2ZZ05JF)Arduino MEGA (https://bit.ly/3szSVaZ)Arduino UNO (https://bit.ly/3q4Ujkg)STM32F417-VG (https://bit.ly/3dUUNHf)Random Number Generator (https://bit.ly/3kvTiAN)FP10A (https://bit.ly/3q3Iyur)XBeeModule (https://bit.ly/3KfYEwu)HardwareSoftware[145][19][106][72][100][112][125][125][45][143][45][45][144][45][94][45][66][66]30

Ahmad et al.

Moreover, we have presented our analysis on the research findings, which includes: (i) interrelation of attack vectors

and security vulnerabilities; (ii) interrelation of attack vectors and countermeasures; and (iii) identification of future

research directions for advancing the field of C3I system’s security.

This survey provides several benefits for both researchers and practitioners. In particular, for researchers, our survey

has proposed several future research directions for further exploring and strengthening the cybersecurity of C3I systems.

For example, the SOA adaptation for C3I systems introduces many challenges (e.g., lack of continuous monitoring)

in securing the cyberspace of C3I systems. Similarly, the incorporation of cloud computing into C3I systems raises

numerous security concerns for sensitive data confidentiality and integrity. For practitioners, the mapping of attack

vectors to countermeasures enable C3I systems’ operators to identify an accurate countermeasure against an attack

vector. Similarly, the need of prioritizing countermeasures while designing C3I systems helps system engineers in

implementing optimal countermeasures during the development of C3I systems. We hope that the findings reported in

this survey will provide researchers and practitioners new dimensions and inspirations for pushing their research and

development efforts to secure C3I systems.

ACKNOWLEDGMENTS

The work has been supported by the Cyber Security Research Centre Limited whose activities are partially funded by

the Australian Government’s Cooperative Research Centres Programme.

REFERENCES
[1] 2016. M2: Insecure Data Storage | OWASP. https://bit.ly/3p4eCi4 [Online; accessed 16. Nov. 2021].
[2] 2016. OWASP TOP 10 2013: Unvalidated Redirects and Forwards - Detectify Blog. https://bit.ly/3wOY3vi [Online; accessed 16. Nov. 2021].
[3] 2017. DATA BREACH UNDER GDPR | How threat intelligence can reduce your liabilities. https://bit.ly/3rcOB0d (accessed 2021-03-20).
[4] 2017. Top 10 2013-A7-Missing Function Level Access Control - OWASP. https://bit.ly/38VCWgC [Online; accessed 16. Nov. 2021].
[5] 2019. The $30.5B Command & Control Technologies Market in Defense, Law Enforcement & Public Safety - Forecast to 2025. https://bit.ly/3qFovn1

(accessed 2020-11-30).

[6] 2019. MacB Wins $41M Cybersecurity Task Order for AFLCMC. https://bit.ly/3qFovn1 (accessed 2020-11-30).
[7] 2020. About the configuration store—Documentation (10.3 and 10.3.1) | ArcGIS Enterprise. https://bit.ly/3DkPOcJ [Online; accessed 16. Nov. 2021].
[8] 2020. Kismet. https://bit.ly/2Z7UxMu (accessed 2021-01-31).
[9] 2021. C3 Modernization Strategy. https://bit.ly/3qXAcHu [Online; accessed 9. Jan. 2022].
[10] 2021. CAPEC - CAPEC-112: Brute Force (Version 3.6). https://bit.ly/3n9lXOp [Online; accessed 10. Dec. 2021].
[11] 2021. Coders Conquer Security OWASP Top 10 API Series - Missing Function Level Access Control. https://bit.ly/3okNjB8 [Online; accessed 12.

Nov. 2021].

[12] 2021. CWE - CWE-521: Weak Password Requirements (4.6). https://bit.ly/33fyclq [Online; accessed 10. Dec. 2021].
[13] 2021. CWE - CWE-922: Insecure Storage of Sensitive Information (4.6). https://bit.ly/3HoXygo [Online; accessed 16. Nov. 2021].
[14] 2021. Defending Against Software Supply Chain Attacks. https://bit.ly/3oENbfV [Online; accessed 18. Nov. 2021].
[15] 2021. Ethereal - Network analyzer - PRTG Alternative. https://bit.ly/3aWW79F (accessed 2021-01-30).
[16] 2021. Insecure direct object references (IDOR) | Web Security Academy. https://bit.ly/30owDQQ [Online; accessed 16. Nov. 2021].
[17] Nabih Abdelmajid, Anang Amin, and Shehab AR Farhan. 2020. Location Based Model For Prevention DNS Spoofing. In International Conference on

Internet Computing for Science and Engineering.

[18] Abdillahi Hassan Adnan, Mohamed Abdirazak, ABM Shamsuzzaman Sadi, Towfique Anam, Sazid Zaman Khan, Mohammed Mahmudur Rahman,
and Mohamed Musse Omar. 2015. A comparative study of WLAN security protocols: WPA, WPA2. In International Conference on Advances in
Electrical Engineering.

[19] Rubina Akter, Sanjay Bhardwaj, Jae Min Lee, and Dong-Seong Kim. 2019. Highly Secured C3I Communication Network Based on Blockchain

Technology for Military System. In Information and Communication Technology Convergence.

[20] Rubina Akter, Mohtasin Golam, Jae-Min Lee, and Dong-Seong Kim. 2021. Blockchain Assisted Unauthorized Target Localization for C4I Communi-

cation Network Using Convolution Neural Network. Korea Telecommunications Society Conference (2021).

[21] Mohammed M Alani. 2014. Guide to OSI and TCP/IP models.
[22] Abdullah S Alghamdi, Iftikhar Ahmad, et al. 2014. Cloud Based C4I Systems: Security Requirements and Concerns. In Computational Science and

Computational Intelligence.

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

31

[23] Abdullah S Alghamdi, Tazar Hussain, and Gul Faraz Khan. 2010. Enhancing c4i security using threat modeling. In Computer Modelling and

Simulation.

[24] Abdullah Sharaf Alghamdi, Tazar Hussain, Gul Faraz Khan, Khalid Alnafjan, and Abdul Haseeb. 2011. Proposed methodology to enhance C4I

systems security on architectural level. Scientific Research and Essays (2011).

[25] Abdullah S Alghamdi, Syed Amanullah Quadri, Iftikhar Ahmad, and Khalid Al-Nafjan. 2010. A Generic Approach to Security Assured Net-Centric

Communications Network Architecture for C4I Systems. In Security Technology, Disaster Recovery and Business Continuity.

[26] Abdullah Sharaf Alghamdi, Hanif Ullah, and Iftikhar Ahmad. 2010. Evaluating Encryption Techniques for C4I System.. In CAINE.
[27] Abdullah Sharaf Alghamdi, Hanif Ullah, Muhammad Usama Khan, Iftikhar Ahmad, and Khalid Alnafajan. 2011. Satellite image encryption for C4I

System. International Journal of the Physical Sciences (2011).

[28] Alessandro Aloisio, Marco Autili, Alfredo D’Angelo, Antti Viidanoja, Jérémie Leguay, Tobias Ginzler, Thorsten Lampe, Luca Spagnolo, Stephen
Wolthusen, Adam Flizikowski, et al. 2015. TACTICS: tactical service oriented architecture. International Conference in Software Engineering for
Defence Applications (2015).

[29] Giuseppina Andresini, Feargus Pendlebury, Fabio Pierazzi, Corrado Loglisci, Annalisa Appice, and Lorenzo Cavallaro. 2021. INSOMNIA: Towards

Concept-Drift Robustness in Network Intrusion Detection. In ACM Workshop on Artificial Intelligence and Security.

[30] Walters Andrew, Anderson Russell, Boan Jonathan, Consoli Angela, Coombs Mark, Iannos Adam, Knight Drew, Pink Mathew, Priest Jayson, Priest
Tim, Smith Andrew, Tobin Brad, Laurenson Ben, and Williamson Sonya. 2018. Conducting Information Superiority Research in an Unclassified
Surrogate Defence Environment. https://bit.ly/391camQ (accessed 2020-11-30).

[31] Junaid Arshad, Muhammad Ajmal Azad, Roohi Amad, Khaled Salah, Mamoun Alazab, and Razi Iqbal. 2020. A review of performance, energy and

privacy of intrusion detection systems for IoT. Electronics (2020).

[32] HORVÁTH Attila. 2018. Technologies and Operational Applications of Tactical Satellite Communication. Hadmérnök (2018).
[33] Seungjin Baek and Young-Gab Kim. 2021. C4I System Security Architecture: A Perspective on Big Data Lifecycle in a Military Environment.

Sustainability (2021).

[34] Quirino Balzano, John Rzasa, Stuart Milner, and Christopher Davis. 2007. High capacity tactical networks with reconfigerable, steerable, narrow-beam

agile point-to-point rf links. In MILCOM 2007-IEEE Military Communications Conference.

[35] Victor R Basili. 1992. Software modeling and measurement: the Goal/Question/Metric paradigm. Technical Report.
[36] Wojciech Bednarczyk and Piotr Gajewski. 2015. Performance of distributed clustering with weighted optimization algorithm for MANET cognitive

radio. In International Conference on Military Communications and Information Systems.

[37] Kevin B Bennett, Shannon M Posey, and Lawrence G Shattuck. 2008. Ecological interface design for military command and control. Journal of

Cognitive Engineering and Decision Making (2008).

[38] Melanie Bernier, Sylvain Leblanc, Ben Morton, E Filiol, and R Erra. 2012. Metrics framework of cyber operations on command and control. In

Information Warfare and Security.

[39] Melanie Bernier and Joanne Treurniet. 2010. Understanding cyber operations in a Canadian strategic context: More than C4ISR, more than CNO. In

ConferenCe on Cyber Conflict.

[40] Marco Biagini and Fabio Corona. 2016. Modelling & simulation architecture supporting NATO counter unmanned autonomous system concept

development. In Modelling and Simulation for Autonomous Systems.

[41] Kyle L Bingman. 2016. C4ISR via dark webs: An alternative concept for protecting critical information in contested cyberspace environments. Air &

Space Power Journal (2016).

[42] Dirk Brade. 2006. The need for credible Modeling and simulation in the context of the network based defense. In Modeling and Simulation Tools for

Emerging Telecommunication Networks.

[43] Adam Chapman. 2017. GPS Spoofing. ECE Senior Capstone Project (2017).
[44] Sunghyun Cho and Sejong Lee. 2019. Survey on the Application of BlockChain to IoT. In International Conference on Electronics, Information, and

Communication.

[45] Jan Chudzikiewicz, Tomasz Malinowski, Janusz Furtak, and Zbigniew Zieliński. 2019. The Procedure of Key Distribution in Military IoT Networks.

In International Conference on Computer Networks.

[46] Marco Cova, Christopher Kruegel, and Giovanni Vigna. 2010. Detection and analysis of drive-by-download attacks and malicious JavaScript code. In

International conference on World wide web.

[47] Asish Kumar Dalai, Saroj Kumar Panigrahy, and Sanjay Kumar Jena. 2012. A novel approach for message authentication to prevent parameter

tampering attack in web applications. Procedia engineering (2012).

[48] Mohsen Damshenas, Ali Dehghantanha, and Ramlan Mahmoud. 2013. A survey on malware propagation, analysis, and detection. International

Journal of Cyber-Security and Digital Forensics (2013).

[49] Jeremiah Y Dangler. 2013. Categorization of Security Design Patterns. Ph. D. Dissertation. East Tennessee State University.
[50] Prerit Datta, Natalie Lodinger, Akbar Siami Namin, and Keith S Jones. 2020. Cyber-Attack Consequence Prediction. arXiv (2020).
[51] Raja Datta, Ningrinla Marchang, S Das, K Kant, and N Zhang. 2012. Security for mobile ad hoc networks. Handbook on securing cyber-physical

critical infrastructure (2012).

[52] Konark Truptiben Dave. 2013. Brute-force attack seeking but distressing. Int. J. Innov. Eng. Technol. Brute-force (2013).
[53] Andrew Davies. 2021. Somebody Might Hear Us - Emerging Communications Security Technologies. In Strategic Insights - ASPI.

32

Ahmad et al.

[54] Luciene Carvalho Corrêa de Souza and Wallace Anacleto Pinheiro. 2015. An approach to data correlation using JC3IEDM model. In IEEE Military

Communications Conference.

[55] Slobodanka Djordjevi, Ejub Kajan Kajan, and Dejan Mitrovi. 1997. Towards Active C3I Systems. In TELSIKS.
[56] F Doffman. 2019. Iran launches new military command and control unit to withstand U.S. cyberattack. https://bit.ly/3o1yu42 (accessed 2020-11-30).
[57] Chad Dougherty, Kirk Sayre, Robert C Seacord, David Svoboda, and Kazuya Togashi. 2009. Secure design patterns. Technical Report. Carnegie-Mellon

Univ Pittsburgh PA Software Engineering.

[58] Toby Ehrenkranz and Jun Li. 2009. On the state of IP spoofing defense. ACM Transactions on Internet Technology (TOIT) (2009).
[59] Jeremy Elson, Lewis Girod, and Deborah Estrin. 2002. Fine-grained network time synchronization using reference broadcasts. ACM SIGOPS

Operating Systems Review (2002).

[60] David Endler. 2001. Brute-Force Exploitation of Web Application Session IDs. iDEFENSE Inc. (2001).
[61] Zhou Fang, Zhang Jin-Feng, and Lei Ming. 2015. Research on the Modeling and Simulation on C4ISR System Structure Effect under Cyber Attack

Condition. In Instrumentation and Measurement, Computer, Communication and Control (IMCCC).
[62] David Ferraiolo, D Richard Kuhn, and Ramaswamy Chandramouli. 2003. Role-based access control.
[63] Kathleen Fisher. 2012. HACMS: high assurance cyber military systems. ACM SIGAda Ada Letters (2012).
[64] Bob Forcier. 2003. Wireless digital-ultrasonic sensors for proximity ID, access control, firearm control, and C3I in homeland security and law
enforcement applications. In Sensors, and Command, Control, Communications, and Intelligence (C3I) Technologies for Homeland Defense and Law
Enforcement II.

[65] Kevin D Foster, John J Shea, James Bret Michael, Thomas W Otani, Loren Peitso, and Man-Tak Shing. 2010. Cloud computing for large-scale weapon

systems. In Granular Computing.

[66] Janusz Furtak, Zbigniew Zieliński, and Jan Chudzikiewicz. 2016. Security techniques for the WSN link layer within military IoT. In 3rd World Forum

on Internet of Things.

[67] Janusz Furtak, Zbigniew Zieliński, and Jan Chudzikiewicz. 2019. Security Domain for the Sensor Nodes with Strong Authentication. In International

Conference on Military Communications and Information Systems.

[68] Saurabh Ganeriwal, Ram Kumar, and Mani B Srivastava. 2003. Timing-sync protocol for sensor networks. In Proceedings of the 1st international

conference on Embedded networked sensor systems.

[69] Jacques S Gansler and Hans Binnendijk. 2004. Information assurance: trends in vulnerabilities, threats, and technologies.
[70] Vasileios Gkioulos, Erko Risthein, and Stephen D Wolthusen. 2017. TACTICS: Validation of the security framework developed for tactical SOA.

Journal of Information Security and Applications (2017).

[71] Vasileios Gkioulos and Stephen Wolthusen. 2015. Enabling dynamic security policy evaluation for service-oriented architectures in tactical networks.

NISK (2015).

[72] Vasileios Gkioulos and Stephen D Wolthusen. 2015. Constraint analysis for security policy partitioning over tactical service oriented architectures.

In Innovative Network Systems and Applications.

[73] Vasileios Gkioulos and Stephen D Wolthusen. 2016. Securing tactical service oriented architectures. In Security of Smart Cities, Industrial Control

System and Communications.

[74] Vasileios Gkioulos and Stephen D Wolthusen. 2016. A security policy infrastructure for tactical service oriented architectures. In Security of Industrial

Control Systems and Cyber-Physical Systems.

[75] Vasileios Gkioulos and Stephen D Wolthusen. 2017. Security requirements for the deployment of services across tactical SOA. In Mathematical

Methods, Models, and Architectures for Computer Network Security.

[76] Monika Goyal, Sandeep Kumar Poonia, and Deepak Goyal. 2017. Attacks finding and prevention techniques in MANET: a survey. Adv Wireless Mob

Commun (2017).

[77] Piyush Goyal and Anurag Goyal. 2017. Comparative study of two most popular packet sniffing tools-Tcpdump and Wireshark. In International

Conference on Computational Intelligence and Communication Networks.

[78] P Guturu. 2005. Architecture and algorithm for high performance fault-tolerant replication of sensitive military and homeland security C/sup 3/I

database messages. In Military Communications Conference.

[79] Kurt Gutzmann. 2001. Access control and session management in the HTTP environment. IEEE Internet Computing (2001).
[80] Rick Hayes-Roth and David Reading. 2008. Maritime Information Exchange Model (MIEM) September 29, 2008. (2008).
[81] SD Hutchings, J Perry, A Mills, F Bartley, M Bartley, and CL Park. 2021. Command, control and communication (C3) during the COVID-19 pandemic;

adapting a military framework to crisis response in a tertiary UK critical care centre. Journal of the Intensive Care Society (2021).

[82] Chadni Islam, Muhammad Ali Babar, and Surya Nepal. 2020. Architecture-centric support for integrating security tools in a security orchestration

platform. In European Conference on Software Architecture.

[83] Jacek Jarmakiewicz and Tomasz Podlasek. 2015. Design and implementation of multilevel security subsystem based on XACML and WEB services.

In Military Communications and Information Systems.

[84] Jiang Jin-long, Zhou Xian-zhong, et al. 2004. The improvement of multi-federations architecture for C4ISR simulation system. In Control, Automation,

Robotics and Vision Conference.

[85] Zhang Jinfeng, Zhu Chen, Huang Songhua, Yi Kan, and Wang Heng. 2017. An effects analysis method for C4ISR system structure based on

information flow. In Chinese Control Conference.

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

33

[86] Jorma Jormakka and Jan Lucenius. 2009. Intruder Detection System Architecture for an SOA-based C4I2SR System. In Computation World: Future

Computing, Service Computation, Cognitive, Adaptive, Content, Patterns.

[87] Nenad Jovanovic, Engin Kirda, and Christopher Kruegel. 2006. Preventing cross site request forgery attacks. In Securecomm and Workshops. 1–10.
[88] Kyoung-Don Kang and Sang H Son. 2006. Towards security and qos optimization in real-time embedded systems. ACM SIGBED Review (2006).
[89] Baron Kevin. 2020. Attacks on DOD Networks Soar as Telework Inflicts ‘Unprecedented’ Loads. https://bit.ly/2NukkMl (accessed 2021-01-31).
[90] Samina Khalid, Tehmina Khalil, and Shamila Nasreen. 2014. A survey of feature selection and feature extraction techniques in machine learning. In

2014 science and information conference. IEEE, 372–378.

[91] Ilhan Firat Kilincer, Fatih Ertam, and Abdulkadir Sengur. 2021. Machine learning methods for cyber security intrusion detection: Datasets and

comparative study. Computer Networks (2021).

[92] Bojan Kolosnjaji, Ambra Demontis, Battista Biggio, Davide Maiorca, Giorgio Giacinto, Claudia Eckert, and Fabio Roli. 2018. Adversarial malware

binaries: Evading deep learning for malware detection in executables. In European signal processing conference (EUSIPCO).

[93] Jahoon Koo, Young-Gab Kim, and Sang-Hoon Lee. 2019. Security Requirements for Cloud-based C4I Security Architecture. In Platform Technology

and Service.

[94] Jahoon Koo, Se-Ra Oh, Sang Hoon Lee, and Young-Gab Kim. 2020. Security architecture for cloud-based command and control system in IoT

environment. Applied Sciences (2020).

[95] Alexander Kott, Paul Théron, Martin Drašar, Edlira Dushku, Benoît LeBlanc, Paul Losiewicz, Alessandro Guarino, Luigi Mancini, Agostino Panico,

Mauno Pihelgas, et al. 2018. Autonomous Intelligent Cyber-defense Agent (AICA) Reference Architecture. Release 2.0. arXiv (2018).

[96] RADM S Kulshrestha and INDIAN Navy. 2018. Military applications of blockchain technology. The Age of Blockchain: A Collection of Articles (2018).
[97] Ram Shankar Siva Kumar, Andrew Wicker, and Matt Swann. 2017. Practical machine learning for cloud intrusion detection: challenges and the way

forward. In ACM Workshop on Artificial Intelligence and Security.

[98] Sanjeev Kumar. 2006. PING attack–How bad is it? Computers & Security (2006).
[99] Ajay KumarShrestha, Pradip Singh Maharjan, and Santosh Paudel. 2015. Identification and illustration of insecure direct object references and their

countermeasures. International Journal of Computer Applications (2015).

[100] Gi Hyeob Kwon, Chang Bae Moon, Jae Min Lee, and Dong Seong Kim. 2019. Identification Method of Military Mobile Device Using for C3I. In

Information and Communication Technology Convergence.

[101] Timothy B. Lee. 2015. The Heartbleed Bug, explained. Vox (May 2015). https://bit.ly/3qLjxIs (accessed 2021-11-30).
[102] Hu Li, Weidong Liu, Xiaolei Zhou, and Xueshan Luo. 2011. The challenges and countermeasures of integrated operational command information

system. In Electrical and Control Engineering.

[103] Hung-Jen Liao, Chun-Hung Richard Lin, Ying-Chih Lin, and Kuang-Yuan Tung. 2013. Intrusion detection system: A comprehensive review. Journal

of Network and Computer Applications (2013).

[104] Kenneth Littlejohn, Vahid Rajabian-Schwart, Nicholas Kovach, and Charles P Satterthwaite. 2017. Mission Systems Open Architecture Science and

Technology (MOAST) program. In Open Architecture/Open Business Model Net-Centric Systems and Defense Transformation.

[105] Roberto Rigolin F Lopes, Caroline Bildsten, Konrad Wrona, Simo Huopio, Daniel Eidenskog, and Olwen L Worthington. 2021. Cyber Security in

Virtualized Communication Networks: Open Challenges for NATO. In Military Communication and Information Systems.

[106] Roberto Rigolin F Lopes and Stephen D Wolthusen. 2015. Distributed security policies for service-oriented architectures over tactical networks. In

Military Communications Conference.

[107] Lutz Lowis and Rafael Accorsi. 2009. On a classification approach for SOA vulnerabilities. In 2009 33rd Annual IEEE International Computer Software

and Applications Conference.

[108] Andrew Lycett. 2011. Breaking Germany’s Enigma Code. Retrieved March (2011).
[109] Pooria Madani, Natalija Vlajic, and Shadi Sadeghpour. 2020. MAC-Layer Spoofing Detection and Prevention in IoT Systems: Randomized Moving

Target Approach. In Joint Workshop on CPS&IoT Security and Privacy.

[110] Avleen Kaur Malhi, Shalini Batra, and Husanbir Singh Pannu. 2020. Security of vehicular ad-hoc networks: A comprehensive survey. Computers &

Security (2020).

[111] Ashfaq Ahmad Malik, Athar Mahboob, Adil Khan, and Junaid Zubairi. 2012. Application of Cyber Security in Emerging C4ISR Systems. In Cyber

Security Standards, Practices and Industrial Applications: Systems and Methodologies.

[112] Gavin W Manes, J Dawkins, Sujeet Shenoi, and John C Hale. 2003.

Identifying and tracking attacks on networks: C3I displays and related
technologies. In Sensors, and Command, Control, Communications, and Intelligence (C3I) Technologies for Homeland Defense and Law Enforcement II.
[113] Mehdi Ebady Manna and Angela Amphawan. 2012. Review of syn-flooding attack detection mechanism. International Journal of Distributed and

Parallel Systems (IJDPS) (2012).

[114] Melvin P Manuel and Kevin Daimi. 2021. Implementing cryptography in LoRa based communication devices for unmanned ground vehicle

applications. SN Applied Sciences (2021).

[115] Michael Manzo, Tanya Roosta, and Shankar Sastry. 2005. Time synchronization attacks in sensor networks. In 3rd ACM workshop on Security of ad

hoc and sensor networks.

[116] Miklós Maróti, Branislav Kusy, Gyula Simon, and Akos Lédeczi. 2004. The flooding time synchronization protocol. In Proceedings of the 2nd

international conference on Embedded networked sensor systems.

[117] Mike Maschino. 2003. Access control within military C4ISR systems. In Battlespace Digitization and Network-Centric Systems III.

34

Ahmad et al.

[118] Adnan Masood. 2013. Cyber security for service oriented architectures in a Web 2.0 world: An overview of SOA vulnerabilities in financial services.

In IEEE International Conference on Technologies for Homeland Security (HST).

[119] Brian J Matt. 2004. Toward hierarchical identity-based cryptography for tactical networks. In Military Communications Conference.
[120] Suzanne J Matthews. 2018. Harnessing single board computers for military data analytics. In Military Applications of Data Analytics. Auerbach

Publications, 63–77.

[121] R William Maule. 2005. Enterprise knowledge security architecture for military experimentation. In Systems, Man and Cybernetics.
[122] Ashley McAbee, Murali Tummala, and John McEachen. 2019. Military intelligence applications for blockchain technology. (2019).
[123] Jack Mineo. 2004. Advanced Command, Control, Communications, & Intelligence (C3I) Systems Analysis and Trade-Offs. Technical Report. CACI

Technologies INC Chantilly VA.

[124] Ben Morton, Sylvain Leblanc, and Melanie Bernier. 2012. Simulation Approach for Military Cyber Operations. The Institute Ecole Supérieure en

Informatique Electronique et Automatique, Laval (2012).

[125] A Mursia, L Ganga, A Leonardi, G Morabito, C Rametta, and L Wihl. 2011. A Simulation study of C4I Communications network under cyber-attacks.

I3M2011, Rome, Italy (2011).

[126] Dmitry Namiot and Manfred Sneps-Sneppe. 2014. On micro-services architecture. International Journal of Open Information Technologies (2014).
[127] Mandy Natter, Jennifer Ockerman, and Leigh Baumgart. 2010. Review of cognitive metrics for C2. ITEA Journal of Test & Evaluation (2010).
[128] Clifford Neuman, Tom Yu, Sam Hartman, and Kenneth Raeburn. 2005. The Kerberos network authentication service (V5). Technical Report. RFC.
[129] Yukai Niu, Xiaoxi Jin, Jinhui Li, Gang Ji, and Kai Hu. 2021. The Development Tendency of Artificial Intelligence in Command and Control: A Brief

Survey. In Journal of Physics: Conference Series.

[130] DH Oh, Deok-Soo Han, and JS Lee. 2021. A Plan for Future Battalion Tactical Network with 5G Network. Journal of Digital Contents Society (2021).
[131] David Ormrod. 2014. The coordination of cyber and kinetic deception for operational effect: attacking the C4ISR interface. In Military Communications

Conference.

[132] David Ormrod and Benjamin Turnbull. 2016. The cyber conceptual framework for developing military doctrine. Defence Studies (2016).
[133] Kent O’Sullivan and Benjamin Turnbull. 2015. The cyber simulation terrain: Towards an open source cyber effects simulation ontology. (2015).
[134] Ali OZTURK, Suna DURMUS, and Serdar UZUMCU. 2019. The challenges in implementing future interoperable joint C4ISR systems. In INCOSE.
[135] Suresh K Peddoju, Himanshu Upadhyay, and Leonel Lagos. 2020. File integrity monitoring tools: Issues, challenges, and solutions. Concurrency and

Computation: Practice and Experience (2020).

[136] Paul Perkinson. 2012. Lessons learned from an active Cyber Defense deployment pilot program. In Integrated Communications, Navigation and

Surveillance Conference.

[137] Sebastian Poeplau and Jan Gassen. 2012. A honeypot for arbitrary malware on USB storage devices. In International Conference on Risks and

Security of Internet and Systems.

[138] Calton Pu and Jinpeng Wei. 2006. A methodical defense against tocttou attacks: The edgi approach. In International Symposium on Secure Software

Engineering.

[139] Mohammad Abu Qbeitah and Monther Aldwairi. 2018. Dynamic malware analysis of phishing emails. In International Conference on Information

and Communication Systems.

[140] Edward Raff, Jon Barker, Jared Sylvester, Robert Brandon, Bryan Catanzaro, and Charles K Nicholas. 2018. Malware detection by eating a whole

exe. In AAAI Conference on Artificial Intelligence.

[141] Noor Afiza Mat Razali, Wan Nurhidayat Wan Muhamad, Khairul Khalil Ishak, Nurjannatul Jannah Aqilah M Saad, Muslihah Wook, and Suzaimah
Ramli. 2021. Secure Blockchain-Based Data-Sharing Model and Adoption among Intelligence Communities. IAENG International Journal of Computer
Science (2021).

[142] Kui Ren, Tianhang Zheng, Zhan Qin, and Xue Liu. 2020. Adversarial attacks and defenses in deep learning. Engineering (2020).
[143] Afshin Rezakhani, Hossein Shirazi, and Nasser Modiri. 2018. A novel multilayer AAA model for integrated applications. Neural Computing and

Applications (2018).

[144] Jose Romero-Mariona, Mihail Schoolov, Tom Nguyen, and Tu-Anh Ton. 2013. CEALICIAN: Compact Encryption and Line-Integrated Circuitry for

Information Assurance in Networking. In Military Communications Conference.

[145] M Roopa and S Selvakumar Raja. 2018. Intelligent Intrusion Detection and Prevention System using Smart Multi-instance Multi-label Learning

Protocol for Tactical Mobile Adhoc Networks. KSII Transactions on Internet & Information Systems (2018).

[146] Stephen Russell and Tarek Abdelzaher. 2018. The internet of battlefield things: the next generation of command, control, communications and

intelligence (C3I) decision-making. In IEEE Military Communications Conference (MILCOM).

[147] Bushra Sabir, Faheem Ullah, M Ali Babar, and Raj Gaire. 2021. Machine Learning for Detecting Data Exfiltration: A Review. ACM Computing

Surveys (CSUR) (2021).

[148] Paul M Salmon, Guy H Walker, Darshna Ladva, Neville A Stanton, Daniel P Jenkins, and Laura Rafferty. 2007. Measuring situation awareness in

command and control: comparison of methods study. In European conference on Cognitive ergonomics: invent! explore!

[149] Johan Schubert, Joel Brynielsson, Mattias Nilsson, and Peter Svenmarck. 2018. Artificial intelligence for decision support in command and control

systems. In International Command and Control Research & Technology Symposium “Multi-Domain C.

[150] R Segura and J Farkas. 2003. Secure virtual private networking over inmarsat packet-based services. In Military Communications Conference.

A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures

35

[151] Shane Shaneman and Cary Murphy. 2007. Enhancing the Deployment and Security of SIPRNET and JWICS Networks using Intrinsic Fiber

Monitoring. In Military Communications Conference.

[152] RP Shenoy. 1987. Command, control, communication and intelligence systems. A review. Defence science journal. Delhi (1987).
[153] Meena Singh, MA Rajan, VL Shivraj, and Purushothaman Balamuralidhar. 2015. Secure mqtt for internet of things (iot). In International conference

on communication systems and network technologies.

[154] Esther Spanjer. 2008. Security Features for Solid State Drives in Defense Applications.
[155] Jacob Steinhardt, Pang Wei Koh, and Percy Liang. 2017. Certified defenses for data poisoning attacks. In International Conference on Neural

Information Processing Systems.

[156] Jakub Svoboda, Ibrahim Ghafir, Vaclav Prenosil, et al. 2015. Network monitoring approaches: An overview. Int J Adv Comput Netw Secur (2015).
[157] Agrani Swarnkar and Anil Swarnkar. 2020. Artificial intelligence based optimization techniques: A review. Intelligent Computing Techniques for

Smart Energy Systems (2020).

[158] Inc. http://www. synopsys. com/ Synopsys. 2020. Heartbleed Bug. https://bit.ly/3CnZ6nd [Online; accessed 17. Nov. 2021].
[159] Xinyao Tang and Soumyajit Mandal. 2021. Encrypted physical layer communications using synchronized hyperchaotic maps. IEEE Access (2021).
[160] Supriya Tayal and Vinti Gupta. 2013. A survey of attacks on manet routing protocols. International Journal of Innovative Research in Science,

Engineering and Technology (2013).

[161] Paul Théron and Alxander Kott. 2019. When Autonomous Intelligent Goodware Will Fight Autonomous Intelligent Malware: A Possible Future of

Cyber Defense. In Military Communications Conference.

[162] McLean Tom. 2020. Critical vulnerabilities in JSON Web Token libraries. https://bit.ly/3kMtpOe [Online; accessed 18. Nov. 2021].
[163] Zouheir Trabelsi and Wassim El-Hajj. 2009. ARP spoofing: a comparative study for education purposes. In Information Security Curriculum

Development Conference.

[164] Chih-Fong Tsai, Yu-Feng Hsu, Chia-Ying Lin, and Wei-Yang Lin. 2009. Intrusion detection by machine learning: A review. expert systems with

applications (2009).

[165] Fan-Hsun Tseng, Li-Der Chou, and Han-Chieh Chao. 2011. A survey of black hole attacks in wireless mobile ad hoc networks. Human-centric

Computing and Information Sciences (2011).

[166] Faheem Ullah, Matthew Edwards, Rajiv Ramdhany, Ruzanna Chitchyan, M Ali Babar, and Awais Rashid. 2018. Data exfiltration: A review of

external attack vectors and countermeasures. Journal of Network and Computer Applications (2018).

[167] Satish Vadlamani, Burak Eksioglu, Hugh Medal, and Apurba Nandi. 2016. Jamming attacks on wireless networks: A taxonomic survey. International

Journal of Production Economics (2016).

[168] Ashwini Vaidya, Siddhant Jaiswal, and Manish Motghare. 2016. A review paper on spoofing detection methods in wireless LAN. In International

Conference on Intelligent Systems and Control.

[169] Corrado Aaron Vlsaggio and Lorenzo Convertito Blasio. 2010. Session management vulnerabilities in today’s web. IEEE Security & Privacy (2010).
[170] Philipp Vogt, Florian Nentwich, Nenad Jovanovic, Engin Kirda, Christopher Kruegel, and Giovanni Vigna. 2007. Cross site scripting prevention

with dynamic data tainting and static analysis.. In NDSS.

[171] Matthew R Voke. 2019. Artificial Intelligence for Command and Control of Air Power. Technical Report. Air University Press.
[172] Dave Wichers. 2013. Owasp top-10 2013. OWASP Foundation, February (2013).
[173] Maggie Wigness, Tien Pham, Stephen Russell, and Tarek Abdelzaher. 2021. Efficient and Resilient Edge Intelligence for the Internet of Battlefield

Things. (2021).

[174] Marcus Willett. 2021. Lessons of the SolarWinds Hack. Survival (2021).
[175] Long Xiao, Shaoqing Meng, and Kaining Lu. 2011. Based on RSAODV the solution to routing table overflow problem. In International Conference

on Multimedia Technology.

[176] Yanfang Ye, Tao Li, Donald Adjeroh, and S Sitharama Iyengar. 2017. A survey on malware detection using data mining techniques. ACM Computing

Surveys (CSUR) (2017).

[177] Dongqing Yuan and Jiling Zhong. 2008. A lab implementation of SYN flood attack and defense. In Conference on Information technology education.
[178] John Zachary. 2003. A decentralized approach to secure management of nodes in distributed sensor networks. In Military Communications.
[179] Amir Sepasi Zahmati, Xavier Fernando, and Hassan Kojori. 2011. Transmission delay in wireless sensing, command and control applications for

aircraft. In 2011 4th Annual Caneus Fly by Wireless Workshop.

[180] Michael Zargham, Zixuan Zhang, and Victor Preciado. 2018. A state-space modeling framework for engineering blockchain-enabled economic

systems. arXiv preprint arXiv:1807.00955 (2018).

[181] Albert R Zehetner et al. 2004. Information operations: The impacts on C4I systems. In Association of Old Crows AOC International Symposium and

Exhibition Adelaide, Australia, Information Security Group Electronic Warfare Associates-Australia.

[182] Yulong Zou, Jia Zhu, Xianbin Wang, and Lajos Hanzo. 2016. A survey on wireless security: Technical challenges, recent advances, and future

trends. Proc. IEEE (2016).

