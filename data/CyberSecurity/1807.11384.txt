Security Solutions for Local Wireless
Networks in Control Applications based on
Physical Layer Security

Andreas Weinand, Michael Karrenbauer, Hans D. Schotten

Institute for Wireless Communication and Navigation
University of Kaiserslautern, Germany
e-mail: {weinand, karrenbauer, schotten}@eit.uni-kl.de

Abstract: The Design of new wireless communication systems for industrial applications, e.g.
control applications, is currently a hot research topic, as they deal as a key enabler for more
ﬂexible solutions at a lower cost compared to systems based on wired communication. However,
one of their main drawbacks is, that they provide a huge potential for miscellaneous cyber
attacks due to the open nature of the wireless channel in combination with the huge economic
potential they are able to provide. Therefore, security measures need to be taken into account for
the design of such systems. Within this work, an approach for the security architecture of local
wireless systems with respect to the needs of control applications is presented and discussed.
Further, new security solutions based on Physical Layer Security are introduced in order to
overcome the drawbacks of state of the art security technologies within that scope.

Keywords: Security, Safety, Reliability, Internet of things, Telecommunication-based
automation systems, Remote and distributed control

8
1
0
2

l
u
J

0
3

]
I

N
.
s
c
[

1
v
4
8
3
1
1
.
7
0
8
1
:
v
i
X
r
a

(cid:63) This is a preprint, the full paper has been published in Proceedings
of the 3rd IFAC Conference on Embedded Systems, Computational
Intelligence and Telematics in Control - CESCIT 2018, c(cid:13)2018 IFAC.

 
 
 
 
 
 
1. INTRODUCTION

A current trend in industrial environments is the utilization of wireless systems in order to serve for applications such
as metering, closed loop control processes or remote maintenance of machines or even whole plants without having
the drawbacks of wired communication systems. Additionally, the availability of such machine-to-machine (M2M)
communication systems may even lead to completely new applications in future. Especially due to their high ﬂexibility,
wireless systems can enable the connection of a huge number of devices in such an environment at a low cost. Typically,
applications in industrial scenarios have high requirements regarding message latency and reliability. This type of
traﬃc is also referred to as mission critical machine type communication (MC-MTC) or ultra-reliable low latency
communication (URLLC) [ITU-R (2015)]. Another important requirement within industrial applications is to guarantee
secure exchange of data over the wireless network in order to prevent cyber attacks.
Due to sensitive information, such as process control data or machine conﬁguration ﬁles, which is transferred over
the wireless interface in industrial applications, every possible participant within the coverage of the network is able
to interact with the transmitted information and consequently able to interact with the served applications as well.
Therefore, dedicated security measures in order to protect this sensitive information are needed. Otherwise the safe
operation of the controlled machines and processes can not be guaranteed and additionally the disclosure of intellectual
property such as process control parameters, machine conﬁguration data or even simple information such as the
production volume may leak. Possible attacks that might prohibit the secure transfer of sensitive data on wireless
interfaces include passive attacks such as eavesdropping, as well as active attacks such as replay attacks, man-in-
the-middle attacks or address spooﬁng attacks. In general, the wireless channel is at least insecure during the initial
communication phases. In order to establish a secured wireless link between two or more network devices, it has to
be guaranteed that initial trust is set up between them during that stage. Additionally, there are two more goals that
need to be achieved by security measures. These are prevention of data manipulation during transmission over the air
which can be caused by launching active attacks and secondly protection of data conﬁdentiality which can be achieved
by eavesdropping on ongoing transmissions. Altogether, the following security requirements can be derived:

(1) Ensure conﬁdentiality, integrity and authenticity of messages on the wireless interface of the system
(2) Allow only desired devices access to the network
(3) Ensure life cycle security of network devices
(4) High degree of usability

There are also other requirements inﬂuencing the design of the security architecture and components of wireless systems
supporting URLLC. Especially, the system should be ﬂexible in such a sense, that it is easily possible to add new devices
to an existing network or replace network devices without huge conﬁguration eﬀorts. Also the installation of a whole
new network should be possible with high usability for non experts (no manual conﬁguration required by e.g. security
engineers). In order to understand what implications the diﬀerent security solutions have on URLLC, it is necessary
to understand the main chracteristics of this type of traﬃc ﬁrst. URLLC traﬃc has two key requirements as the name
already implies, one is the reliability requirement and the other one is the latency requirement. As typical applications
for URLLC are e.g. closed loop control processes, both of these requirements need to be guaranteed jointly, which
means that messages have to be delivered with a given packet reception ratio (PRR) within a given time. If the
latency requirement is not met, the message is considered as erroneous because its content is outdated in the sense
of the application. Another key characteristic of URLLC is the message frequency or periodicity which is depending
on the required update time of the control application and can be up to 1000 Hz in case of very fast closed loop
processes [Bockelmann et al. (2017)]. Further, also the requirements for the message payload size are diﬀerent compared
to conventional applications such as e.g. media streaming. URLLC systems need especially support for very short
messages (down to a few Bytes [Bockelmann et al. (2017)]) which can e.g. consist of a single sensor value or a simple
binary control command.
The remainder of the work is organized as follows. Section 2 gives an overview of the State of the Art security solutions
in local wireless networks. In section 3 we present the system model which deals as a baseline for our work. Section 4
introduces the key enabling technologies which are proposed in order to fulﬁll the mentioned security requirements and
in section 5 we propose enhancements for these solutions based on physical layer security. Finally, section 6 concludes
the paper.

2. STATE OF THE ART

In this section, current wireless protocols which are widely used for M2M communication are analyzed with respect
to their security features. These are device authentication, key management and data conﬁdentiality, integrity and
authenticity. The most prominent networks which are currently used in the ﬁeld of industrial applications are IEEE
802.11 based networks (WiFi). The protocol speciﬁcation including security aspects for these kind of networks can be
found in [IEEE (2016a)]. Regarding the device authentication, two options are possible. Either a pre-shared key (PSK)
is used, which has to be known by both devices authenticating mutually and typically requires a user interaction, or a
certiﬁcate based authentication process is used which is based on the IEEE 802.1X protocol [IEEE (2010)] and basically
makes use of the Extensible Authentication Protocol (EAP) and X.509 based certiﬁcates. Pairwise session keys as well
as group keys are derived from the initial authentication credentials (either from the PSK based credentials or from EAP

parameters). The Counter Mode Cipher Block Chaining Message Authentication Code (CBC-MAC) Protocol (CCMP)
is used in order to ensure message conﬁdentiality (based on the AES block cipher [NIST (2001)]) as well as message
authenticity and integrity, based on Message Integrity Codes (MIC). In IEEE 802.15.1 based networks [IEEE (2005)]
such as Bluetooth [Bluetooth SIG (2016)], the device authentication between 2 devices as well as the following process
of key derivation is based on a PIN, which needs to be entered via user interaction to a device. In earlier versions of the
speciﬁcation, only at least 4 alphanumeric characters were required. Additionally, the proposed ciphers for providing
message conﬁdentiality (E0 stream cipher) as well as authenticity/integrity (SAFER+ cipher) in earlier versions are
not considered as secure anymore nowadays. Another type of networks widely used in industrial applications are IEEE
802.15.4 based networks [IEEE (2016b)] such as e.g. Zigbee [Zigbee Alliance (2012)]. They do not provide any kind of
certiﬁcate based device authentication (instead shared symmetric keys are used for that). Also the key management
and key derivation is based on the initial keys, but authenticated encryption based on AES and Message Integrity
Codes (MIC) is provided in order to guarantee message conﬁdentiality, integrity and authenticity. In summary, IEEE
802.11 based wireless networks already provide the necessary means in order to guarantee the security requirements
mentioned before. Within this work, we additionally investigate the eﬀects of these security features on the system
design in combination with URLLC speciﬁc aspects and propose solutions which adapt to the requirements of this type
of traﬃc.

3. SYSTEM MODEL

In this section we present the considered system model with respect to the requirements of industrial applications. We
further introduce assumptions that are made within the scope of our work as well as the considered attacker model.

Fig. 1. System Level Architecture

3.1 System Level Architecture

Fig. 1 shows the system level architecture which is consisting of network components and an application. The network
devices are the Access Point (AP) and End Devices (ED) which both share the wireless interface S1 (bidirectional). The
application consists of an application server and the application clients (e.g. sensors and/or actuators). The interface
S3 is used in order to connect the application server with the AP, while interface S4 is shared by the EDs and the
application clients. With these interfaces, the application server can send control information to the application clients
(actuators) and receive control update information vice versa. An additional interface S2 is introduced in order to
enable features such as e.g. human machine interaction (HMI) for system diagnosis purposes or getting access to further
enterprise back-ends such as authentication servers.

3.2 Assumptions

The goal of our work is to propose solutions in order to secure the communication on the wireless interface S1. Therefore,
we assume that on the other interfaces S2, S3 and S4 secure transmission links are already set up. Additionally, we
assume that it is possible to store security credentials, which are necessary on order to set up a secure transmission
links on S1, in physically secure and tamper-proof storage such as secure elements (SE) for every network device (AP
and EDs). Further, the SE is assumed to provide at least the following features:

(1) Secure storage, generation and veriﬁcation of certiﬁcates
(2) Secure storage and generation of asymmetric key pairs
(3) Secure storage and generation of symmetric key pairs

In our work we also assume, that network devices are already equipped with the above mentioned credentials. The
process of loading these into the respective device (actually to its SE) is not scope of this work and approaches on how
to achieve that goal can e.g. be found in [Mackenthun and Berg (2017)].

Access PointS3S2Other NetworksApplication ServerS4ED 2ED NED 1S4S4ApplicationApplicationS1Attackerlink to be secured on S1link under attack on S1Fig. 2. Overview of Plug&Trust Procedures

3.3 Attacker Model

A typical scenario for an attacker within the scope of our work is that he is located outside of a factory using advanced
equipment such as directed antennas and high sensitivity receivers in order to maximize the communication range to
his beneﬁt. It is further assumed, that he has full knowledge of the used communication protocols in order to interact
with the system over the wireless interface S1 as shown in ﬁg. 1. Thereby the attacker may either act as an AP and
eavesdrop on uplink messages sent from EDs to the dedicated AP and spoof downlink messages to EDs in order to
manipulate the application or he acts as an ED and spoofs messages to the AP in order to manipulate the control
application on the application server and eavesdrop on downlink messages sent from the AP to the dedicated EDs. We
do not consider attacks regarding the device authentication process which could be used by an attacker to gain access
to the network.

4. SECURITY FOR URLLC

In this section, we introduce the key enabling components which are necessary in order to fulﬁll the given security
requirements. We show their advantages and especially disadvantages in combination with the URLLC speciﬁc
requirements. Alternative solutions in order to overcome these drawbacks, especially based on physical layer security,
will then be presented within section 5.

4.1 Plug&Trust Protocols

In order to guarantee secure communication on the wireless interface S1, network devices (e.g. an AP and ED pair)
need to set up trust initially towards each other. Therefore, basically two steps are necessary. In a ﬁrst step, both
parties need to verify their trustworthiness mutually and exchange some initial cryptographic credentials. This can e.g.
be achieved by means of an certiﬁcate environment based on a public key infrastructure (PKI) and only has to be done
once for each time an ED joins a new network hosted by an AP. In a second step, which is executed every time a new
communication session is started (e.g. for each new URLLC service), both devices mutually authenticate each other and
prove their access rights, which can be done in a handshake like manner based on the initially exchanged information.
During this stage, they will additionally generate common keying material which is used in order to secure the message
exchange within the URLLC session (note that also updating of the keying material has to be considered during the
URLLC session). Fig. 2 shows an overview of the respective procedures.

Initial Authentication Phase Fig. 3 shows the procedure of an initial connection within a link. This must be carried out
each time a new device is added to the network. For that purpose, we propose to make use of a certiﬁcate environment
which includes diﬀerent levels of certiﬁcate authorities (CA). These may oﬀer global certiﬁcates (e.g. speciﬁc for the
manufacturer of the network equipment or of the SE deployed) as well as local certiﬁcates (e.g. operator or plant
speciﬁc). Thereby, the global certiﬁcates enable veriﬁcation of the respective manufacturer of a network device over the
whole device life cycle, whereas local certiﬁcates enable the veriﬁcation of the access rights of a network device to speciﬁc
networks of an operator or within a plant. More information on this concept, as well as how to load certiﬁcates to the
network devices initially, can be e.g. found in [Mackenthun and Berg (2017)]. An example of a CA hierarchy including
diﬀerent levels is shown in Fig. 4. After setting up the physical connection, the two devices (AP and ED) will check
their global certiﬁcates mutually in order to make sure that no third party devices are involved (which could be already
compromised, e.g. due to product piracy). This must be possible any time for a network device (even when not installed
in a network) in order to ensure lifecycle security. In case of a successful veriﬁcation of the global certiﬁcates, the next
level of certiﬁcates is checked which provides access rights e.g. for a speciﬁc operator and factory (local certiﬁcates).

Physical Device PairingInitial Authentication PhaseEDi know by the network?URLLC Session HandshakeURLLC Service ExecutionNoYesUpdate of keying materialThis means, that network devices which are equipped with these certiﬁcates could by default not be operated by a third
party (e.g. an attacker) and vice versa (third party devices will not get access to the dedicated network). In a ﬁnal step
within the initial authentication phase, both devices need to exchange their own device speciﬁc certiﬁcates in order to
make use of cryptographic techniques introduced within the next section.

In order to set up an URLLC session, network devices must authenticate mutually ﬁrst
URLLC Session Handshake
(see Fig. 5). This means, that they need to prove the possession of the private key matching to the public key which was
exchanged within the device speciﬁc certiﬁcate in the previous step. For this, e.g. a simple mutual challenge-response
scheme including random nonce values can be used (such as e.g. within a TLS 1.3 handshake [IETF (2018)]). After
a successful authentication of both devices, they can agree on initial keying material (the usage of this is introduced
within the next section). Both, mutual authentication and negotiation of keying material can be achieved by making use
of the public keys cryptography techniques such as signing and verifying and Diﬃe-Hellman Key Exchange (DHKE).

4.2 Secure URLLC Channel

In this section we introduce the security components that are required in order to ensure secure URLLC data trans-
mission. These are encryption/decryption blocks in order to ensure message conﬁdentiality and message authentication
blocks such as MAC tagging and MAC checking. Fig. 6 shows the transmitter and receiver security processing blocks
using AES-128 as a cipher suite and a 64 Bit truncated CMAC for message authentication.

Encryption & Key Management Block ciphers such as the AES-128 cipher suite take a block of 128 Bit of plaintext
data and a 128 Bit symmetric key as input and yield a block of the same size as ciphertext. This comes with the
drawback, that URLLC message payload usually needs to be padded with zeros, if the respective application uses other
payload sizes than multiples of 128 Bit. Therefore, even the design of the served control applications will inﬂuence the
eﬃciency of the overall system as shown in Fig. 7. Another issue of block ciphers is their mode of operation. Typically,
information from previous blocks, such as e.g. the ciphertext in case of CBC (Chiper Block Chaining) mode, is fed to
the encryption process of the current block. This increases the security, because an potential attacker needs knowledge
of all previous ciphertexts, but also comes at the price, that in case of transmission errors the decryption process at
the receiver side is delayed. Therefore, an appropriate mode is the CTR (counter) mode for which the encryption and
decryption process only depends on the current plaintext/ciphertext and a combined nonce/counter value. This value
is similar to the initialisation vector used e.g. in CBC mode, but due to the counter included, ciphertext repetition
is prevented. Another drawback of cipher suites is, that keypairs need to be updated regularly in order to ensure a
high degree of security such as e.g. forward secrecy. Conventional key management solutions such as, e.g. DHKE, come
with the cost of an additional control signalling overhead, which rises with the number of connected devices. Therefore,
in section 5.1 an approach based on PHYSEC is introduced in order to reduce the amount of additional signalling
overhead.

Message Authenticity and Integrity During data transmission, each message should have a message authentication
code (MAC) attached to it in order to ensure message authenticity and integrity. Similar to the encryption process, a
given plaintext and a symmetric key are fed as an input to the MAC function and the tag is calculated based on that
as an ouput either by applying a block cipher algorithm (such as AES-128) or a secure hash algorithm (e.g. SHA-2 or
SHA-3). After reception of the message with the associated MAC by a receiver, the same calculations are applied and
the receiver checks if the MAC check holds true (both MAC tags are the same). Though this approach can be assumed
as cryptographically secure if the key size is large enough (for AES-128 based CMAC a maximum truncation to 64 Bit is
recommended [IETF (2006)] and for hash based MAC (HMAC) a minimum MAC size of 80 Bit is recommended [IETF

Fig. 3. Initial Authentication Phase

Mutual Verification of Global  CertificatesMutual Verification of Local CertificatesMutual Exchange of Device CertificatesAbortAbortAbortInitial Authentication PhasevalidinvalidinvalidinvalidvalidvalidFig. 4. Certiﬁcate Authority exemplary hierarchy

(1997)]), it requires a non negligible amount of resources by introducing additional overhead to transmitted messages.
Additionally, only the message payload can be protected as an attacker might perform attacks such as MAC (Media
Access Control) address spooﬁng, or record a message and replay it after a while (if e.g. counters are used in order to
prohibit that, additional overhead is added as well). Fig. 7 shows the message overhead (MOH) for a given application
payload of N Bit that is added by zero padding due to AES-128 block ciphering and message authentication based on
a L Bit MAC tag and calculated as

MOH =

(cid:6) N
128

(cid:7) · 128 + L

N

− 1.

(1)

In case of e.g. a payload size of 400 Bit, which is a valid assumption for the payload size of URLLC messages according
to [Bockelmann et al. (2017)] and a CMAC size of 64 Bit, the MOH is 44%. Within Fig. 7 the MOH is shown for
application payload sizes between 64 Bit (MOH=200%) and 2000 Bit (MOH=5.6%). In order to reduce this overhead,
we introduce an alternative solution based on PHYSEC in section 5.2.

5. ENHANCEMENTS BASED ON PHYSICAL LAYER SECURITY

Within this section, new security solutions based on PHYSEC are introduced in order to overcome the drawbacks
regarding the cryptographic solutions introduced in the previous section. Therefore, a simpliﬁed system model is
introduced (see Fig. 9) consisting of an AP, an ED and an attacker A and H (k)
X-Y denotes the channel matrix H
between two users X (Receiver) and Y (Transmitter) at time k.

5.1 Secret Key Generation

In case of Secret Key Generation (SKG), two parties, e.g. the AP and an ED, estimate the channel characteristics they
experience mutually for a speciﬁc amount of time in order to derive a shared secret which can be used as a session key
for ciphering (this approach has e.g. been considered in [Guillaume et al. (2015)], [Zenger et al. (2014)] and [Wilhelm
et al. (2013)]). Let the channel estimated by the ED due to the AP at time k be H (k)
AP-ED.
The adversary A eavesdrops and estimates the channel as H (k)
A-ED due to the AP and ED respectively. The
principle of channel reciprocity indicates that the channel measurements H (k)
AP-ED are equal when they are
conducted during the coherence time of the channel and in the absence of errors (e.g. noise). It is now assumed, that A
is at minimum located λ
2 ) with λ being the wavelength
of the transmitted wave and dA-AP and dA-ED the distance between the attacker and the AP and ED respectively. If
e.g. λ
2 ≈ 2.5 cm, corresponding to a frequency of f = 5.8 GHz, then it is assumed that HA-AP (cid:54)= HED-AP holds, which

2 away from both the AP (dA-AP > λ

ED-AP and vice versa H (k)

2 ) and the ED (dA-ED > λ

ED-AP and H (k)

A-AP and H (k)

Fig. 5. URLLC Session Handshake

Mutual Device AuthenticationExchange of initial keying materialURLLC Service ExecutionAbortURLLC Session HandshakeUpdate of keying materialvalidinvalidFig. 6. Conventional Security Processing Blocks

Table 1. Performance comparison of PHYSEC based key generation approaches

Work

[Guillaume et al. (2015)]
[Patwari et al. (2010)]

Method

DCTW
HRUBE

[Ambekar and Schotten (2014)] Rec. Enhancement

[Premnath et al. (2013)]
[Jana et al. (2009)]

ASBG
Multibit-ASBG

Feature

min./max. KGR [Bit/s]

BDR @ min./max. KGR

RSS (Wiﬁ)
RSS (802.15.4)
RSS (Wiﬁ)
RSS (Wiﬁ/802.15.4)
RSS (Wiﬁ)

0.01 / 15.45
3 / 22
3.2 / 3.41
0.08 / 0.38
0 / 0.9

-/-
0.04%/2.2%
6.21%/4.5%
1%/23%
4%/36%

means that A experiences diﬀerent channel conditions due to the AP compared to the channel conditions experienced
by the ED due to the AP.

AP-ED and C(cid:48)

To now negotiate a secret key of length L = MN Bits only known to the AP and ED, several steps need to be executed
as shown in Fig. 8. A common approach is to let the AP and ED each estimate their channel mutually over a period
of M measurements, e.g. by means of channel probing. This will yield to channel proﬁles C = (H (1), H (2), . . . , H (M )).
To enhance the reciprocity of the channel, diﬀerent approaches, such as e.g. kalman ﬁltering [Ambekar and Schotten
(2014)] in order to decrease the impact of noise in channel estimations can be applied. In the next step, the enhanced
channel proﬁles C(cid:48)
ED-AP derived by both, the AP and ED, are quantized to obtain preliminary keys
P = (P (1), P (2), . . . , P (L)) (see e.g. [Jana et al. (2009)], [Patwari et al. (2010)], [Premnath et al. (2013)]). In general, N
Bits of the preliminary key are derived from each channel measurement H (k) (k = 1, . . . , M ). Due to remaining errors
in the channel proﬁles, errors in the quantization stage occur and disagreement of Bits in preliminary keys exists, i.e.
PAP-ED (cid:54)= PED-AP. These errors are detected and corrected in the information reconciliation stage by means of error
correction coding, e.g. turbo codes [Ambekar et al. (2012)], yielding the synchronized key S = SAP-ED = SED-AP. Due
to parity information exchange between the AP and ED to match their keys during the reconciliation stage, an attacker
can use these information to gain partial knowledge of the key. To reduce this eﬀect, as well as to enhance the entropy
of the key, privacy ampliﬁcation is utilized. A common approach here is to make use cryptographic hashing algorithms
(e.g. SHA-2, SHA-3). Finally, the AP and ED both share the secret key K = KAP-ED = KED-AP. The performance of
diﬀerent key generation approaches is mainly given by two metrics. The key generation rate (KGR) which is the eﬃctive
rate of generated bits of the symmetric key per second. The other one is the bit disagreement rate, which denotes the
amount of disagreeing bits between the ED and AP before the Information Reconcilliation stage.

Fig. 7. Security overhead due to zero-padding and CMAC

Fig. 8. Key Generation Procedure

Payload [bit]0200400600800100012001400160018002000MOH00.20.40.60.811.21.41.61.82Fig. 9. PHYSEC system model

Fig. 10. Physical Layer Security Processing Blocks

Table 2. Performance comparison of PHYSEC based message authentication approaches

Work

Detection Method

Feature

max. PD min. PFA

[Gulati et al. (2013)]
[Pei et al. (2014)]
[Tugnait and Kim (2010)]
[Xiao et al. (2008)]
[Xiao et al. (2017)]
[Weinand et al. (2017)]

GMM
SVM, LFDA
NPHT
NPHT
Q-Learn., NE GT
GMM

Antenna Mode
RSSI, TOA, CC
CIR (TD)
CIR (FD)
CIR (FD)
CIR (FD)

99.9%
95%
99.9%
99%
98%
99.96%

0.4%
1%
1%
1%
0.1%
0.1%

Performance Comparison
Tab. 1 shows the performance of diﬀerent existing SKG approaches. Most approaches
consider the Quantization stage in order to improve the KGR, e.g. by extracting multiple Bits (N > 1) from one channel
measurement. Whereas [Ambekar and Schotten (2014)] proposes diﬀerent Reciprocity Enhancement approaches in order
to reduce mismatching Bits due to errors in channel measurements between two users. Nevertheless which approach is
used, the KGR mainly depends on the temporal decorrelation of the wireless channel and therefore is highly depending
on the given scenario. If the temporal channel variations are very low, e.g. in a static scenario, it is not feasible to use
this method for generation of initial keying material. But due to the low complexity of the schemes, they can be used
to update e.g. encryption keys periodically after the initial key exchange (e.g. using DHKE) in order to improve the
security level and keep the additional security control signaling overhead low. This is also shown in Fig. 10 where only
partial information between two parties is exchanged (e.g. the parity bits, denoted by dashed line) compared to a full
key exchange in case of Fig. 6 denoted by solid lines.

5.2 PHYSEC based Message Authentication and Integrity Checking

An alternative approach in order to guarantee message authenticity and integrity is to take non-cryptographic
information into account such as protocol metadata. These can either be extracted from protocols on the logical
level such as frame counters or traﬃc patterns, or they can be extracted from physical layer protocols such as received
signal strength or channel estimation data. In case of the schemes based on higher layer protocols, it is very easy for
an attacker to spoof messages if he knows the used protocol and the traﬃc pattern of a legitimate user (e.g. the radio
resources that are allocated for that user). If the receiver analyses the physical characteristics of the received signal
which are introduced by the transmitter such as e.g. radio ﬁngerprints or clock skew, then it is already challenging
for an attacker to spoof these characteristics by using default hardware (oﬀ-the-shelf). On the other hand, this also
requires an additional eﬀort for the legitimate receiver in order to detect these characteristics and by this increases
the receiver complexity and cost. Therefore, another approach is to use characteristics of the wireless channel such
as channel state information, received signal strength (RSS) or carrier frequency oﬀsets (CFO) due to doppler shifts
in order to authenticate the transmitter of a message and its integrity. The main advantage that can be used here is
the spatial decorrelation property of the wireless channel, which denotes that channel characteristics are varying based
on the location of a transceiver. This holds already true for small variations in the spatial domain which are in the
order of the wavelength of the transmitted signal. In general, this approach contains two stages. In the ﬁrst stage,
which is a kind of training phase, physical layer metadata is extracted initially and stored by the intended receiver. If

we assume that an ED wants to transmit authenticated messages to the AP and the channel estimates are used as a
feature, the AP will estimate the channel as ˆHAP-ED(k) during the training phase for each of the T received messages
yAP(k), k = 0, . . . , T − 1. In this stage we also assume, that the acquired data is labeled. This means that the messages
xED(k) sent by the ED contain cryptographic information from higher layers (e.g. certiﬁcates or digital signatures).
In the second stage, the ED transmits messages without any cryptographic information attached and the AP uses the
knowledge from the training phase in order to make a decision on these further received messages yAP(m) at time
m ≥ T with respect to the authenticity and integrity. If the AP estimates the channel now as ˆH(m), there are two
hypothesis, either

H0 : yAP(m), x(m) sent by ED, or
H1 : yAP(m), x(m) not sent by ED,

where x(m) is the originally sent message. In case of H0

ˆH(m) = HAP-ED(m) + (cid:15)AP-ED(m),

and in case of hypothesis H1

(2)

(3)

ˆH(m) (cid:54)= HAP-ED(m) + (cid:15)AP-ED(m),
(4)
where (cid:15)X-Y(m) is the estimation error (e.g. due to receiver noise) of the true channel HX-Y(m) between users X and Y .
Due to temporal variations in the channel HAP-ED, these need to be somehow considered in the second stage. Otherwise
it is not possible to distinguish between temporal channel variations and messages introduced by an attacker anymore
at some point. There are two possibilities in order to achieve that goal, either the detection algorithm needs to be
updated regularly, or instead of this, the diﬀerence of the current channel estimate to the previous one

∆ ˆH(m) = ˆH(m) − ˆH(m − 1)
(5)
is used as input data for the detection algorithm. In the ﬁrst case, the update interval should be below the channel
coherence time Tc of the HAP-ED channel in order to catch up with these variations. Whereas in both cases, the
temporal diﬀerence between two subsequent channel estimations should always be below Tc. Fig. 11 shows all steps
of the general procedure described above. As detection algorithm, simple statistical test such as Neyman Pearson

Fig. 11. Message Authentication based on Physical Layer Metadata

Hypothesis Testing (NPHT), e.g. used in Xiao et al. (2008), or more sophisticated machine learning algorithms such
Gaussian Mixture Models introduced in Gulati et al. (2013) can be utilized. Every detection algorithm has basically
two main performance indicators, the detection probability PD and the false alarm rate PFA. In our case, the detection
probability

PD = p(H1| ˆH(m) due to xA)
(6)
denotes the probability of detecting the attacker A as the transmitter of yAP(m) under the condition that it was truly
sent by the attacker and the false alarm rate

PFA = p(H1| ˆH(m) due to xED)
(7)
denotes the probability of detecting the attacker as the transmitter of yAP(m) under the condition that it was truly
sent by the ED. Both performance metrics need to be considered jointly, as they can not be optimized independently.
The relation of both can be shown in a receiver operating characteristic (ROC) curve.

Performance Comparison A performance comparison of diﬀerent PHYSEC based message authentication approaches
is given in Tab. 2, where the detection methods, used features, maximum achieved detection probability and minimum
false alarm rate are considered. Though many of the approaches seem to have quite promising performances (e.g. up to
99.9% detection probability and 0.1% false alarm rate), there is still some improvement in reliability needed in order to
serve for the requirements of URLLC services. One possible approach for that is to use additional features within the
detection process such as RSSI or CFO simultaneously. Further, the tradeoﬀ between complexity and performance of
the detection method is an issue that needs to be addressed in future work, as better performing solutions usually come
with a cost. If this can be achieved, the latency and resource eﬃciency can be increased by omitting the application of
MAC tags for message authentication and integrity checking and using physical layer meta information for that purpose
only (as shown by dashed line in Fig. 10).

6. CONCLUSION AND FUTURE WORK

Within this work we have proposed security solutions for wireless networks in industrial applications, especially with
respect to the needs of URLLC traﬃc. Especially PHYSEC might be a promising approach in order to overcome
drawbacks of conventional security solutions in terms of resource eﬃciency. One essential part of the security design
is the user authentication procedure and deployment of certiﬁcate environments, as this deals as a root of trust for
all other security features such as message encryption and authentication (even if PHYSEC approaches are applied).
Therefore, we especially emphasise this point for the design of new systems or whole ecosystems.

ACKNOWLEDGEMENTS

This work has been supported by the Federal Ministry of Education and Research of the Federal Republic of Germany
(BMBF) in the framework of the project 16KIS0267 HiFlecs. The authors alone are responsible for the content of the
paper.

REFERENCES

Ambekar, A., Hassan, M., and Schotten, H.D. (2012).

Improving channel reciprocity for eﬀective key management
In International Symposium on Signals, Systems and Electronics (ISSSE), Potsdam, Germany. doi:

systems.
10.1109/ISSSE.2012.6374318.

Ambekar, A. and Schotten, H.D. (2014).

In IEEE Vehicular Technology Conference (VTC Spring), Seoul, Korea.

Enhancing channel reciprocity for eﬀective key management in
doi:

wireless ad-hoc networks.
10.1109/VTCSpring.2014.7022913.

Bluetooth SIG (2016). Bluetooth Core Speciﬁcation v5.0.
Bockelmann, C., Dekorsy, A., Gnad, A., Rauchhaupt, L., Neumann, A., Block, D., Meier, U., Rust, J., Paul, S.,
Mackenthun, F., et al. (2017). Hiﬂecs: Innovative technologies for low-latency wireless closed-loop industrial
automation systems. 22. VDE-ITG-Fachtagung Mobilkommunikation.

Guillaume, R., Winzer, F., Czylwik, A., Zenger, C.T., and Paar, C. (2015). Bringing phy-based key generation into
the ﬁeld: An evaluation for practical scenarios. In IEEE 82nd Vehicular Technology Conference (VTC Fall). doi:
10.1109/VTCFall.2015.7390857.

Gulati, N., Greenstadt, R., Dandekar, K.R., and Walsh, J.M. (2013).

In IEEE Vehicular Technology Conference (VTC Fall).

Gmm based semi-supervised learn-
doi:

ing for channel-based authentication scheme.
10.1109/VTCFall.2013.6692216.

IEEE (2005).

IEEE Standard for Information technology– Local and metropolitan area networks– Speciﬁc
requirements– Part 15.1a: Wireless Medium Access Control (MAC) and Physical Layer (PHY) speciﬁcations for
Wireless Personal Area Networks (WPAN). IEEE Std 802.15.1-2005 (Revision of IEEE Std 802.15.1-2002). doi:
10.1109/IEEESTD.2005.96290.

IEEE (2010). IEEE Standard for Local and metropolitan area networks–Port-Based Network Access Control. IEEE

Std 802.1X-2010 (Revision of IEEE Std 802.1X-2004). doi:10.1109/IEEESTD.2010.5409813.

IEEE (2016a).

IEEE Standard for Information technology–Telecommunications and information exchange between
systems Local and metropolitan area networks–Speciﬁc requirements - Part 11: Wireless LAN Medium Access Control
(MAC) and Physical Layer (PHY) Speciﬁcations. IEEE Std 802.11-2016 (Revision of IEEE Std 802.11-2012). doi:
10.1109/IEEESTD.2016.7786995.

IEEE (2016b).

IEEE Standard for Low-Rate Wireless Networks.

IEEE Std 802.15.4-2015 (Revision of IEEE Std

802.15.4-2011). doi:10.1109/IEEESTD.2016.7460875.

IETF (1997). RFC 2104, HMAC: Keyed-Hashing for Message Authentication.
IETF (2006). RFC 4493, The AES-CMAC Algorithm.
IETF (2018). The Transport Layer Security (TLS) Protocol Version 1.3.
ITU-R (2015). Imt vision–framework and overall objectives of the future development of imt for 2020 and beyond.

Recommendation ITU-R M.2083-0.

Jana, S., Premnath, S.N., Clark, M., Kasera, S.K., Patwari, N., and Krishnamurthy, S.V. (2009). On the eﬀectiveness
doi:

of secret key extraction from wireless signal strength in real environments. ACM, New York, NY.
10.1145/1614320.1614356.

Mackenthun, F. and Berg, J. (2017). Secure machine-to-machine communication. In SmartCard Workshop, Darmstadt,

February 2017.

NIST (2001). Advanced Encryption Standard (AES).
Patwari, N., Croft, J., Jana, S., and Kasera, S.K. (2010). High-rate uncorrelated bit extraction for shared se-
IEEE Transactions on Mobile Computing, 9(1), 17–30. doi:

cret key generation from channel measurements.
10.1109/TMC.2009.88.

Pei, C., Zhang, N., Shen, X.S., and Mark, J.W. (2014). Channel-based physical layer authentication. In IEEE Global

Communications Conference (GLOBECOM). doi:10.1109/GLOCOM.2014.7037452.

Premnath, S.N., Jana, S., Croft, J., Gowda, P.L., Clark, M., Kasera, S.K., Patwari, N., and Krishnamurthy, S.V. (2013).
Secret key extraction from wireless signal strength in real environments. IEEE Transactions on Mobile Computing,
12(5), 917–930. doi:10.1109/TMC.2012.63.

Tugnait, J.K. and Kim, H. (2010). A channel-based hypothesis testing approach to enhance user authentication in
wireless networks. In International Conference on COMmunication Systems and NETworks (COMSNETS 2010).
doi:10.1109/COMSNETS.2010.5432018.

Weinand, A., Karrenbauer, M., Sattiraju, R., and Schotten, H. (2017). Application of machine learning for channel
In European Wireless 2017; 23th

based message authentication in mission critical machine type communication.
European Wireless Conference, 1–5.

Wilhelm, M., Martinovic, I., and Schmitt, J.B. (2013).

IEEE Journal on Selected Areas in Communications, 31(9), 1779–1790.

Secure key generation in sensor networks based on
doi:

frequency-selective channels.
10.1109/JSAC.2013.130911.

Xiao, L., Chen, T., Han, G., Zhuang, W., and Sun, L. (2017). Game theoretic study on channel-based authentication

in mimo systems. IEEE Transactions on Vehicular Technology, PP(99), 1–1. doi:10.1109/TVT.2017.2652484.

Xiao, L., Greenstein, L., Mandayam, N., and Trappe, W. (2008). Using the physical

layer for wireless au-
IEEE Transactions on Wireless Communications, 7(7), 2571–2579. doi:

thentication in time-variant channels.
10.1109/TWC.2008.070194.

Zenger, C.T., Chur, M.J., Posielek, J.F., Paar, C., and Wunder, G. (2014). A novel key generating architecture for wire-
less low-resource devices. In International Workshop on Secure Internet of Things (SIoT). doi:10.1109/SIoT.2014.7.

Zigbee Alliance (2012). Zigbee Speciﬁcation.

