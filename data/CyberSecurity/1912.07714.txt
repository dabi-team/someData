Industrial robot ransomware: Akerbeltz

V´ıctor Mayoral-Vilches1, Lander Usategui San Juan1, Unai Ayucar Carbajo1,
Rub´en Campo1, Xabier S´aez de C´amara1, Oxel Urzelai1, Nuria Garc´ıa1, and
Endika Gil-Uriarte1

1Alias Robotics, Vitoria-Gasteiz, ´Alava, Spain E-mail: victor@aliasrobotics.com

9
1
0
2

c
e
D
6
1

]

R
C
.
s
c
[

1
v
4
1
7
7
0
.
2
1
9
1
:
v
i
X
r
a

Abstract—Cybersecurity lessons have not been learnt from the
dawn of other technological industries. In robotics, the existing
insecurity landscape needs to be addressed immediately. Several
manufacturers proﬁting from the lack of general awareness are
systematically ignoring their responsibilities by claiming their
insecure (open) systems facilitate system integration, disregarding
the safety, privacy and ethical consequences that their (lack of)
actions have. In an attempt to raise awareness and illustrate the
”insecurity by design in robotics” we have created Akerbeltz,
the ﬁrst known instance of industrial robot ransomware. Our
malware is demonstrated using a leading brand for industrial
collaborative robots, Universal Robots. We describe the rationale
behind our target and discuss the general ﬂow of the attack
including the initial cyber-intrusion, lateral movement and later
control phase. We urge security researchers to adopt some sort
of disclosure policy that forces manufacturers to react promptly.
We advocate against security by obscurity and encourage the
release of similar actions once vulnerability reports fall into a
dead-end. Actions are now to be taken to abide a future free of
zero-days for robotics.

I. INTRODUCTION AND BACKGROUND

In the context of computer security, ransomware is mali-
cious software (malware) that either locks a computer, prevents
from accessing the data using encryption, or both, until the
subject has paid a ransom. First ransomware Proof of Concept
(PoC) appeared in 1989 [1], [2] when Joseph Popp, an
evolutionary biologist and AIDS researcher, carried out an
experimental attack by distributing 20,000 ﬂoppy disks in
a Conference by the World Health Organization focused in
AIDS research. The conference spanned to researchers from
more than 90 countries, and malware was distributed claiming
that
the disks contained a program that analyzed risk of
acquiring AIDS through the use of a questionnaire. Thereafter,
ransomware called ”AIDS Trojan” got distributed. Since then,
it has evolved leading into two big subgroups:

• Crypto ransomware: which encrypts data and asks the
user for a ransom in exchange for the decryption key.
• Locker ransomware: locks the system by some means,
prevents its use and asks for a ransom to re-enable it.
According to literature [1], from 1989 to 2007 ransomware
instances mostly focused on crypto-ransomware. In 2007,
locker-ransomware began to appear and went mainstream.
These ransomware instances locked systems and intimidated
by displaying certain content (mostly pornographic images)
while demanding a ransom to remove such content and
unlock the systems. In 2013, Richardson et al. [1] observed
that attackers pivot back to crypto-ransomware. According

to the authors, the most famous piece of ransomware was
released in August 2013. Named as CryptoLocker, it was
originally distributed via a botnet and later through e-mail.
CryptoLocker used private and public cryptographic keys
to encrypt the target’s ﬁle. Decrypting the ﬁles required to
pay a ransom of 2 bitcoins (100 $ at the time) within the
ﬁrst three days. To the extent of our literature review and to
date, variations of CryptoLocker remain being the most wide
spread instances of ransomware [3], [4].

the robotic market1, only 9 % of

In robotics, no targeted malware has yet been observed
out of the PoC phase. Cesar Cerrudo and Lucas Apa earlier
[5], [6] published a ransomware attack over Nao, a social
robot by Softbank Robotics, which got the media attention.
According to research being conducted on the security
concerns of
robotics
users have witnessed a cyber attack. This preliminary ﬁgure
indicates that there is still very little activity yet known to
the general public however, according to the same source, 51
% of the users inquired conﬁrmed having identiﬁed security
ﬂaws in robotic systems which leads to consider that there
exists a relevant landscape of insecurities. Conﬁrming this
hypothesis, users inquired assigned a rating of 8 out 10 to the
security relevance in robotics yet only 26 % of the inquired
acknowledged to have invested in robot cybersecurity, which
includes evaluating security and protecting existing robot
setups. Therefore,
it seems that robot users do not fully
apprehend the insecurity by design governing robots in the
market.

In this paper we aim to illustrate the existing insecurity
status in some robotics vendors [7]. We have selected one of
the most popular industrial collaborative robots and present
Akerbeltz, an instance of ransomware targeting industrial
robotic systems. We present
the PoC ransomware attack,
describe the rationale behind our target and discuss the
general ﬂow of the attack including the initial cyber-intrusion,
lateral movement and later control phase. We then brieﬂy
discuss the resulting consequences from the installation of
Akerbeltz and wrap up by sharing some major conclusions.

1https://news.aliasrobotics.com/robot-security-survey-displays-ﬁrst-results/

for more details on the ongoing survey.

 
 
 
 
 
 
II. AKERBELTZ

In basque mythology, Akerbeltz

is an antique deity
impersonated in a male goat which is the animal-kind
protector. Ethimologically coming from the Basque works
Aker (male goat) and Beltz (black), its origin is attributed to a
meadow in the surroundings of Zugarramurdi caves (Navarra),
a pligrimage place for Basque Mythology. Akerbeltz is the
demon that is chairing ”Akelarres” or Basque witch (sorginak)
meetings. Some authors note that
the mythological ﬁgure
Akerbeltz represents was adored in many European countries,
some of which remain up to present day. Akerbeltz often
shows two different faces. On the one hand, it is the protector
of animals and is even able to heal their illnesses if needed.
Indeed, belief on Akerbeltz is thought to be the origin of
hosting a black goat as the protector of all animals within
a ”Baserri” (Basque cottage or farm). On the other hand,
when Akerbeltz participated Akelarres, it showed his darkest
face, where witches obeyed and adored him as the genius
representing revolution against established status-quo, amidst
banquets of human ﬂesh.

We advocate for a change in (most) robot manufacturer’s
attitude towards security and to do so, we take Akerbeltz as
inspiration and present below the ﬁrst instance of industrial
robotic ransomware. Due to our concerns about malicious
applications of the software, authors will not be releasing the
source code nor the low level method of operation of this
industrial robot ransomware.

A. Target selection and rationale

Our target was selected based on the results obtained
from prior research [8], [9] on the vulnerability landscape
across several
industrial robot manufacturers. Our critical
attitude was previously introduced by Alzola-Kirschgens
et al. [8] and essentially builds on the fact
that several
robot manufacturers, particularly collaborative robot (cobot)
vendors, are proﬁting the popularity of these devices, via
third parties (distributors and integrators) totally disregarding
the ethical consequences of not caring about security, to the
point that security vulnerabilities are left unadressed, or ”up
to the end user”. To further understand our viewpoint, we ask
the reader and potential robot users to consider the following
questions: Thousands of insecure robots are being deployed
all around the world, some of them thought to be networked
and to increasingly collaborate with humans, who will be held
responsible when these security holes get exploited and cause
human damages? How would robot vendors respond when
these reported, non-patched and public vulnerabilities cause
safety hazards? Would they continue claiming that ”their
robots are designed to be open” and thereby never meant to
be used beyond research? Should authorities regulate the use
of these devices and their corresponding incomplete standards?

We select one of their best-selling robots,
the UR3 and
implement our PoC on it. Figure 1 shows a picture of our
target together with the control box and teach pendant.

Fig. 1: Universal Robots UR3.

insecurity.

Before our work, Universal Robots had other groups
assessing their
In 2017, Cerrudo and Apa
reported [5], [6] ﬁve 0-day vulnerabilities. Several months
later,
representatives from the vendor acknowledged that
security patches had been applied [10] yet to the best of
our knowledge, no public related information is available.
Instead,
the vendor disregarded the previously reported
issues under the claim that attackers required very speciﬁc
conditions. Further to that, Jacob Bom Madsen, Software
Product Manager at Universal Robots publicly claimed that
Universal Robots is ”proud to have a fairly open architecture,
that allows system integrators and UR+ Partners to easily
develop and integrate the solutions they need.”. This attitude
conﬂicts directly with the very principle of Universal Robots
safety claims, previously highlighted by Cerrudo and Apa
[6]: ”Do not change anything in the safety conﬁguration of
the software (e.g. the force limit). If any safety parameter is
changed the complete robot system shall be considered new,
meaning that the overall safety approval process, including
risk assessment, shall be updated accordingly”. In other
words, any modiﬁcations of the safety setup in the UR3 will
lead to the complete invalidation of the robots’ compliance
with ISO 10218-1 [11] incurring in potential relevant losses
and conﬂicts for
the end user. Beyond the human and
economical damages caused by modifying the safety setup
of the UR3, the claim by Madsen leads to a troubling an
arguably unethical statement: ”The lack of security facilitates
system integration”. We have seen this statement repeatedly
and yet, once again, this time coming from a leading cobot
vendor, we see how openness and feature inclusion is used
to justify the lack of security. Wielding the interoperability
pitch, vendors push security up to their partners, collaborators
or ultimately, to ”the community” avoiding security actions,
critical for the use of these products in human environments.

the above and coherently,
The authors discussed on all
decided to select what arguably is
the most popular
collaborative industrial robot manufacturer: Universal Robots.

At the time of writing, our team knows yet of no security patch
mitigating these vulnerabilities. Moreover, we performed a
penetration testing assessment in the UR3 CB series robot

conﬁrming the still unpatched existence of several of the
previously reported ﬂaws. Furthermore, we found more than
300 new vulnerabilities of relevant severity according to
robot-speciﬁc scoring mechanisms [12]. The overall picture
depicts a vendor which shows the little care not only for
security, but also for quality of software.

The following subsection elaborates on how Akerbeltz
acts on our UR3 CB series.

B. Ransomware’s ﬂow

1) Cyber intrusion: Initial infection gets realised by ex-
ploiting unpatched vulnerabilities in the robot. Akerbeltz’s
initial cyber intrusion is implemented exploiting these well
known vulnerabilities and deployed via one of the following
two attack vectors:

• physical USB ports in the teach pendant: Exploiting
CVE-2019-196262 an attacker can execute malicious
code with root privileges by simply connecting an ex-
ternal USB stick. This attack vector is likely the easiest
to implement given the exposure of the teach pendant
in most UR3 robots. Moreover, the same attack vector
applies not only in the teach pendant but also in the
control box which exposes internal USB ports that can
be accessed with standard mechanical ﬁxations.

• remote access via adjacent networks:

RVD#672
(CVE-2018-10633) permits an adjacent network attacker
to easily ssh into the control box. Alternatively, RVD#6
allows an adjacent attacker to exploit a stack-based
buffer overﬂow in the UR3 ModBus TCP service, and
execute commands as root equally fulﬁlling the cyber
intrusion. Akerbeltz can be conﬁgured to exploit these
ﬂaws and take action over industrial LANs.

2) Lateral movement: Since the cyber-intrusion allowed to
obtain root privileges in the control box, no privilege escalation
phase is necessary within Akerbeltz. The ”open” architecture
of the robot facilitates lateral movement to other sub-devices
within the robot. We brieﬂy explored such setup and found that
it is trivial to access the robot user interface, the PolyScope.
Figure 2 shows a preview of the ransomware’s message in the
teach pendant:

The UR3 lack of security allows for additional

lateral
the robot controller and
movement. Both the BIOS of
the safety PLC are easily accessible and exposed. While
it remains beyond the scope of our study, we argue that
targeting any of these systems (or both together) will likely
lead to malware that could damage the robot to a point of no
return and would likely be matter of future security research.

3) Control:
• Locking: In our PoC, our team was able to lock the
whole system while displaying a message (refer to Figure

Fig. 2: UR3 PolyScope Robot User Interface hijacked. In
this case, Akerbeltz locks and disables most functions and
a message is overlayed on top.

1) after booting, using previously mentioned CVEs, we
managed to access the control box, acquire root privi-
leges, disable the default safety conﬁguration and change
the default user and password. We also identiﬁed and
disabled several open ports used to control the robot from
the outside, blocking other mechanisms to reestablish
normal operation. Our work with Akerbeltz ﬁnalized by
performing some minor and non-exhaustive hardening,
meant to avoid users to unlock the system.

• Encrypting: After identifying most of the critical ﬁles
used for the control of the robot, we located previous
programs and IP deployed within the control box. These
ﬁles are encrypted using the local pgp binary in combi-
nation with a series of robot-speciﬁc identiﬁers.

C. Discussion

In an attempt

to responsibly disclose and mitigate the
existing ﬂaws, we generated a series of reports for selected
vulnerabilities and approached the manufacturer by e-mail.
To this date, no formal answer with intention to establish
discussions on security has been received. In a second attempt,
making use of well established and de facto approaches in
security, we ﬁled for a CVE identiﬁer in one of the new
discovered vulnerabilities. At the time of writing, no formal
communication has been established via this channel either.

In a third attempt, the PoC attack was disclosed to Universal
Robots directly, in a public robotics industrial conference, the
ROS-Industrial Conference in Europe (Stuttgart, December
2019). While maintaining the vulnerabilities undisclosed, we
publicly presented3 to the vendor and the rest of the audience
the consequences of their insecurity. We brieﬂy presented
Akerbeltz and followed with a possible solution to mitigate
existing ﬂaws in their robots.

The deployment of Akerbeltz in a UR3 via the physical

2Remains conﬁdential for responsible disclosure reasons at the time of

3Recording of the talk is available at https://youtu.be/J5-8ptUT9qU?t=

writing

27052.

attack vector has been recorded and made available at
https://youtu.be/VF7fcV5j1t0 arguing that by making this
public and available we ﬁnally call
to a reaction of this
particular vendor or its associated value chain.
Last but not least, our ﬁnal discussion point is that these
kind of targeted attacks have the potential to spread rapidly
and across the use cases in which the Universal Robots
CB-series are deployed. Given the low complexity of the
attack,
the easiness of programming on top of Universal
Robots programming environment and the relative high cost
of the assets involved, a series of attacks on this taxonomy
are foreseen.

III. CONCLUSIONS

The current insecurity status in robotics allows for malware
to be created easily and rapidly by simply evaluating known
vulnerabilities. These pieces of malware could be used and
exploited by malicious actors to gain economic proﬁts via
extorsion. In this paper we presented Akerbeltz, a piece of
ransomware that locks and encrypts industrial collaborative
robots from Universal Robots. After the targeted attack, the
result is rendering the industrial robot totally useless, losing
IP within the robot and potentially leading to economical
losses and human or environmental damages. We described
and prototyped Akerbeltz for the UR3 CB series robot which
could be introduced following physical or network based
attacks on zero-day vulnerabilities.

for

At
to
the time of writing, Universal Robots has yet
answer our vulnerability reports, which in some cases provide
the manufacturer relevant insights on how to mitigate the
most relevant ﬂaws exploited by the attack. As a particular
example,
the physical attack vector we exploited in
Akerbeltz, a possible mitigation involves the validation and
sanitization of speciﬁc ﬁles as well as the implementation
of Discretionary Access Control (DAC) model by providing
Mandatory Access Control (MAC) within the control box.
This will limit the programs’ capabilities with per-program
proﬁles (e.g. via AppArmor).

When asked directly, face to face, representatives of the
vendor, they indicated once again that their robot ”is designed
to be open” or that we are ”disabling features” and therefore,
”it’s just normal”. We would like to express our strong
concern for a reiterated lack of security actions. While our
team did not explore malicious attacks or their proﬁtability
on the robot any further, we argue that a more aggressive
individual or group, with bad intentions, might easily
come up with some sort of ”self-destructing” malware (by
disabling safety and repeatedly crossing the boundaries of
the kinematics model and hitting itself) or worse, a ”human
or environment damaging” one, or any other kind of creative
exploits on top of the vulnerabilities exploited by Akerbeltz.

The lack of communication from the vendor’s perspective
makes us guess that, at best, there is security by obscurity

around Universal Robots. Once again as we did in the past,
we argue against this and advocate for a proactive interaction
of robot manufacturers with security researchers.

involve the extension of
Future work on our side will
Akerbeltz and the development of RIS (Robot
Immune
System), an ad-hoc intrusion detection system, available for
use in Universal Robots,
that further monitors on top of
vulnerabilities and prevents existing ﬂaws to be exploited.

ACKNOWLEDGMENT

The authors would like to thank Laura Alzola Kirschgens
for her support with ethics and proofreading the content. This
action was partially supported by the regional Basque Au-
tonomous Government’s SPRI agency for the support within
HAZITEK funding scheme (ZL-2019/00439) and ZABALDU
internationalization actions (ZAB-00014-2019). Special thanks
to the Basque Cyber Security Centre BCSC for the support
in actions fostering awareness in robot cyber security. Last
but not least, authors are grateful to the local administration
Diputaci´on Foral de ´Alava for the support to entrepreneurship
in innovation actions (EMPREM-2019/00002).

REFERENCES

[1] R. Richardson and M. M. North, “Ransomware: Evolution, mitigation
and prevention,” International Management Review, vol. 13, no. 1, p. 10,
2017.

[2] D. Formby, S. Durbha, and R. Beyah, “Out of control: ransomware for

industrial control systems,” in RSA conference, 2017.

[3] G. McDonald

and

G.
DOI=

O’Gorman,
http://www.

“Ransomware:
01net.

a
it/whitepa-

menace,”

growing
per library/Symantec Ransomware Growing Menace. pdf, 2012.
[4] A. Bhardwaj, V. Avasthi, H. Sastry, and G. Subrahmanyam, “Ran-
somware digital extortion: a rising new age threat,” Indian Journal of
Science and Technology, vol. 9, no. 14, pp. 1–5, 2016.

[5] C. Cerrudo and L. Apa, “Hacking robots before skynet,” Tech. Rep.,
[Online]. Available: https://ioactive.com/wp-content/uploads/

2017.
2018/05/Hacking-Robots-Before-Skynet-Paper Final.pdf

[6] ——,

“Hacking

Tech. Rep., 2017.
Hacking-Robots-Before-Skynet-Technical-Appendix.pdf

robots

before

appendix,”
skynet: Technical
[Online]. Available: https://ioactive.com/pdfs/

[7] V. M. Vilches, L. A. Kirschgens, A. B. Calvo, A. H. Cordero, R. I. Pis´on,
D. M. Vilches, A. M. Rosas, G. O. Mendia, L. U. S. Juan, I. Z. Ugarte
et al., “Introducing the robot security framework (rsf), a standardized
methodology to perform security assessments in robotics,” arXiv preprint
arXiv:1806.04042, 2018.

[8] L. A. Kirschgens, I. Z. Ugarte, E. Gil-Uriarte, A. M. Rosas, and
V. M. Vilches, “Robot hazards: from safety to security,” CoRR, vol.
abs/1806.06681, 2018. [Online]. Available: http://arxiv.org/abs/1806.
06681

[9] V. Mayoral Vilches, L. Usategui San Juan, B. Dieber, U. Ayucar Carbajo,
and E. Gil-Uriarte, “Introducing the robot vulnerability database (rvd),”
IEEE Robotic Computing, 2020, manuscript submitted.

[10] Robo09,

“Universal
2018.
[Online]. Available:
universal-robot-security-vulnerabilities

robot

security

Jun
https://dof.robotiq.com/discussion/1195/

vulnerabilities,”

[11] I. Standard, “Iso 10218-1:2011 robots and robotic devices — safety
requirements for industrial robots — part 1: Robots,” International
Organization for Standardization, 2011.

[12] V. Mayoral Vilches, E. Gil-Uriarte, I. Zamalloa Ugarte, G. Olalde Men-
dia, R. Izquierdo Pis´on, L. Alzola Kirschgens, A. Bilbao Calvo,
A. Hern´andez Cordero, L. Apa, and C. Cerrudo, “Towards an open stan-
dard for assessing the severity of robot security vulnerabilities, the robot
vulnerability scoring system (rvss),” arXiv preprint arXiv:1807.10357,
2018.

