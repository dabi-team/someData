2
2
0
2

n
u
J

3
1

]

R
C
.
s
c
[

2
v
5
6
1
4
0
.
2
0
2
2
:
v
i
X
r
a

Instantaneous and limiting behavior of an n-node
blockchain under cyber attacks from a single hacker

Xiufeng Xu∗

Liang Hong∗

June 15, 2022

Abstract

We investigate the instantaneous and limiting behavior of an n-node blockchain
which is under continuous monitoring of the IT department of a company but faces
non-stop cyber attacks from a single hacker. The blockchain is functional as far as
no data stored on it has been changed, deleted, or locked. Once the IT department
detects the attack from the hacker, it will immediately re-set the blockchain, rendering
all previous eﬀorts of the hacker in vain. The hacker will not stop until the blockchain
is dysfunctional. For arbitrary distributions of the hacking times and detecting times,
we derive the limiting functional probability, instantaneous functional probability, and
mean functional time of the blockchain. We also show that all these quantities are
increasing functions of the number of nodes, substantiating the intuition that the more
nodes a blockchain has, the harder it is for a hacker to succeed in a cyber attack.

Keywords and phrases: cyber ransom attacks; cyber destructive attacks; instan-
taneous functional probability; limiting functional probability; mean functional times;
operations research.

1

Introduction

In today’s society, exchanges of information between companies and customers take various
forms via the Internet. This mode of interaction exposes a company to potential cyber
attacks. While shutting down the computer network is not a viable option for any business,
the loss due to a cyber attack could be astronomical. For example, the Colonial Pipeline
ransomware attack in 2021 costed the company 4.4 million dollars in ransom payment, let
alone many other indirect costs. Quite a few other costly cyber attacks are still as fresh as in
recent memory. Therefore, a company faces the challenge of safeguarding itself from cyber
attacks and maintaining its normal operations at the same time. One plausible approach is

∗Department of Mathematical Sciences, The University of Texas at Dallas, 800 West Campbell Road,

Richardson, TX 75080, USA.

1

 
 
 
 
 
 
to back up a company’s data on a continuous basis. However, such a practice is prohibitively
expensive to most companies. The blockchain is one eﬃcient alternative that can greatly
reduce the likelihood of cyber losses. Generally speaking, a blockchain consists of several
identical computers in a network; each of these computers is called a node and stores crucial
data for a company’s daily operation. Diﬀerent from a traditional computer network where
data is housed on a centralized server, the blockchain stores identical data on each of its
nodes, and these nodes continuously verify their data according to the majority rule. That
is, any piece of data on a node is considered valid only if it is consistent with its counterparts
on at least half of the nodes of the blockchain. Thanks to the public key encryption (e.g.
Diﬃe and Hellman 1976, Rivest et al. 1978, Goldwasser and Micali 1982, Goldwasser et al.
1988), it is basically useless for a hacker to steal the data stored on the blockchain. Therefore,
most hackers would either make a malicious attack such as changing or deleting the data,
or make a ransom attack by locking data on the blockchain and demand a ransom from the
company. For the former type of cyber attack, which will be referred to as a destructive
attack, a hacker must hack into at least half of the nodes before he can execute his plan. For
the latter type of cyber attack, which will be called a ransom attack, a hacker must hack
into all nodes and lock the entire blockchain. Intuitively, a blockchain is much harder to
hack than a traditional centralized server; see Section 3.3 for a rigorous result. No wonder
blockchain technology has been used in a wide range of applications such as cryptocurrencies,
smart contracts, and P2P insurance; for a comprehensive review of elements of blockchains
and their applications, see Tama et al. (2017), Zheng et al. (2018), Casino et al. (2019),
Kumar et al. (2020), Yang et al. (2020), Lu et al. (2020), and Malik et al. (2021), and
references therein.

Despite the enhanced cyber security it provides, a blockchain is not immune to cyber
attacks. In particular, it is still possible for a hacker to breach the security of a blockchain.
Various authors have studied security issues of a blockchain; see, for instance, Khan and
Salah (2017), Li et al. (2017), and Meng eta al. (2018). However, no paper in the literature
has investigated the operations-research-theoretic aspect of a blockchain when it is under
cyber attacks. The current paper intends to serve as the ﬁrst step towards ﬁlling this lacuna
in the literature.
In this article, we study an n-node blockchain under the cyber attack
from one hacker when it is under continuous monitoring of the IT department of a company.
The blockchain is considered to be functional as long as no data stored on it has been
modiﬁed, deleted, or locked. However, the IT department will re-set the blockchain if it
detects the attack from the hacker; if this occurs, all previous eﬀorts of the hacker will
be totally forfeited and the hacker will start over again. The hacker will not stop as far
as the blockchain remains functional. Assuming the detecting time and the hacking time
follow arbitrary distributions, we obtain the limiting functional probability, instantaneous
functional probability, and mean functional time of the blockchain. We also show that all
these quantities are a non-decreasing function of the number of nodes of the blockchain. To
our knowledge, this is the ﬁrst time that rigorous results have been given to back up the
intuition that the more nodes a blockchain has, the harder it is for a hacker to break into.

The remainder of the paper is organized as follows.

In Section 2, we give a detailed

2

description of our model and establish notational convention. Next, in Section 3, we inves-
tigate the stochastic behavior of our proposed blockchain model. In particular, we derive
formulas for the limiting functional probability, the instantaneous functional probability, and
the mean functional time of the blockchain. We also establish rigorous results to conﬁrm
the intuition that the more nodes a blockchain has, the less likely it will be hacked.
In
Section 4, we provide several numerical examples based on simulation. Finally, we conclude
the paper with some remarks in Section 5. The Appendix contains some technical details.
The python code for all examples in this paper can be found at the following website:
https://github.com/xuxiufeng/Blockchain_Simulations.

2 Model setup and notation

We consider a blockchain consisting of n identical nodes in a given company. Without loss
of generality, we assume that n ≥ 2. From the moment it starts to operate, the blockchain is
under 24-hour continuous monitoring by the IT department of the company for any potential
cyber attack. There are two major types of cyber attacks for blockchains: (i) cyber destructive
attacks in which a hacker invades the blockchain and change or/and delete the data stored
on the blockchain and (ii) cyber ransom attacks where a hacker intrudes into the blockchain,
locks the data stored the blockchain, and demands ransoms from the company. In this paper,
we are mainly interested in the instantaneous and limiting behavior of the n-node blockchain
under these two types of cyber attacks from one single hacker. We assume that blockchain
is under immediate cyber attacks from the hacker the moment it starts to operate. For a
hacker to change or delete the data on an n-node blockchain, he must hack into at least
m = (cid:98)n/2(cid:99) + 1 nodes. Without loss of generality, we assume that a hacker will start the
malicious attack once he succeeds in hacking into m nodes, and that he hacks these m nodes
in sequential order. That is, once the hacker penetrates the ﬁrewall of one node, he will hold
onto it and immediately start hacking the next node. However, if the IT department of the
company detects that the blockchain is under attack, they will immediately re-set the whole
blockchain so that all previous eﬀorts of the hacker are forfeited. Therefore, the hacker will
not be able to change or delete data on the blockchain until he hacks into the m-th node
without being detected. We assume that the hacker will perform a cyber destructive attack
the moment he succeeds in hacking into m nodes without being detected. Similarly, if the
hacker intends to conduct a cyber ransom attack, he will do so immediately after he hacks
into the n-th node without being detected. On the other hand, each time the IT department
re-sets the blockchain, there will be associated costs due to disruption of business operation.
For this reason, the IT department will only re-set the blockchain when they detect that a
cyber attack against the blockchain is under way.

Without loss of generality, we label the n nodes of the blockchain as node 1, nodes 2, . . .,
node n. We assume that it takes a random amount of time Xi for the hacker to hack into
node i, (i = 1, . . . , n), and that X1, . . . , Xn are independent and identically distributed (iid)
according to a distribution function FX with a probability density function fX(x). We also
assume that it takes a random amount of time Y for the IT department to detect that the

3

blockchain is under a cyber attack from the moment it starts to operate or has just been
re-set, that Y has a distribution function FY with a probability density function fY (y), and
that Y is independent from X1, . . . , Xn. We call each Xi a hacking time and Y a detecting
time.

The stochastic behavior of the blockchain under a cyber destructive attack can be de-
scribed as follows. At time t = 0, the blockchain is put into operation and immediately
under continuous monitoring for cyber attacks. At the same time, a hacker starts to work
on bypassing the ﬁrewall of a node. Since all n nodes are identical, we may assume that the
hacker attacks the nodes of the blockchain according to the ascending order of their labels.
More speciﬁcally, the hacker attacks node 1 ﬁrst. If X1 < Y , i.e., the hacker penetrates the
ﬁrewall of node 1 without being detected, then he will immediately attack node 2. On the
other hand, if X1 ≥ Y , i.e., the hacker fails to bypass the ﬁrewall of node 1 before being
detected, the blockchain will be re-set and he has to start over. In general, if (cid:80)m
i=1 Xi < Y ,
i.e., the hacker is able to hack into m nodes before being detected, he will perform a cyber
destructive attack. But, if (cid:80)m
i=1 Xi ≥ Y , i.e., he is being detected before he is able to change
any data on the blockchain, the blockchain will be re-set, rendering all previous eﬀorts of the
hacker in vain. As far as the hacker has not been able to change or delete any data on the
blockchain, we say the blockchain is functional. The stochastic behavior of the blockchain
under a cyber ransom attack can be described in a similar manner by replacing m with n.
Therefore, we will focus only on the case of a cyber destructive attack. However, all results
extend to the case of a cyber ransom attack if we replace m with n.

We are mainly interested in the limiting behavior and the instantaneous behavior of an
n-node blockchain in the aforementioned setup. Recall that m = (cid:98)n/2(cid:99) + 1. For a given m,
we put

Pm(∞) = P {the blockchain will never be hacked}.

(1)

We say Pm(∞) is the limiting functional probability of an n-node blockchain. We also deﬁne
Tm to be the total amount of time it takes for the hacker to hack into the blockchain, and
call E[Tm] the mean functional time of the blockchain. Moreover, for t > 0, we deﬁne

Pm(t) = P {the blockchain has not been hacked at time t}.

(2)

We call Pm(t) the instantaneous functional probability of the blockchain. It follows from the
continuity of the probability measure (e.g. Kallenberg 2002, Lemma 1.14) that the limiting
functional probability and the instantaneous functional probability can be related as follows

Pm(∞) = lim
t→∞

Pm(t).

4

3 Stochastic behavior of the proposed blockchain model

3.1 Limiting functional probability and mean functional time

To investigate the limiting behavior of the blockchain, we deﬁne a cycle to be the period
from the moment the blockchain starts afresh or has just been re-set to the next moment it
is being re-set. That is, a cycle is a period from the inception of a detecting time to its end,
provided the blockchain has not been hacked. Let N1 be the number of cycles needed for the
hacker to succeed in hacking into the blockchain. Then N1 is a geometric random variable1
with parameter pm given by

(cid:40)

pm = P

Y >

(cid:41)

Xi

=

(cid:90) ∞

0

m
(cid:88)

i=1

F (m)

X (s)dFY (s),

(3)

where F (m)
X is the m-folded convolution of FX. Note that pm > 0 since we assume both FX
and FY admit a probability density function. If we restrict our attention to the epochs the
blockchain starts afresh, or has just been re-set, or has just been hacked, then we obtain
an embedded discrete-time process. This discrete-time process is a two-state discrete-time
In State 1, the blockchain is functional, but in State 2, the blockchain is
Markov chain.
dysfunctional, i.e., it has been hacked. A diagram of this two-state discrete-time Markov
chain is given in Figure 1.

1 − p

1

p

1

2

Figure 1: Two-state discrete Markov chain

Note that State 2 is an absorbing state. It is clear that the transition probability from State
1 to State 2 is exactly the probability pm given by (3). Conditioning on the outcome of the
ﬁrst cycle, we have

Pm(∞) = pm × 0 + (1 − pm) × Pm(∞),

implying that Pm(∞) = 0, which is in agreement with our intuition:
if we observe the
stochastic behavior of the blockchain over an inﬁnite horizon of time, then it will eventually
be hacked because pm > 0.

1Here we interpret a geometric random variable with parameter 0 < p < 1 to be the number of failures
(rather than the number of trials) until the ﬁrst success among a sequence of independent Bernoulli trials
with success probability p.

5

Next, we look at the mean functional time of the blockchain. To this end, we focus only
on the moments every possible cycle starts or ends. By doing so, we identify a renewal
process {N2(t)}t≥0 where

N2(t) = max

k :

and Yi

d= Y | Y < (cid:80)m

i=1 Xi.

(cid:40)

(cid:41)

Yi ≤ t

,

k
(cid:88)

i=1

Tm =

N1(cid:88)

i=1

Yi +

(cid:32) m
(cid:88)

i=1

Xi

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

m
(cid:88)

i=1

(cid:33)

Xi < Y

.

(4)

Also, it is clear that N1 is independent of Yn+1, Yn+2, . . ., which shows N1 is a stopping time
for the sequence {Yi}i≥1. Therefore, Wald’s Identity implies that

E[Tm] = E[N1]E[Y1] + E

(cid:34) m
(cid:88)

Xi

(cid:35)

Xi < Y

m
(cid:88)

i=1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:35)

Xi

+ E

(cid:34)

= E[N1]E

Y

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

Y <

i=1
m
(cid:88)

i=1

(cid:34) m
(cid:88)

i=1

Xi

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

m
(cid:88)

i=1

(cid:35)

Xi < Y

.

(5)

3.2 Instantaneous functional probability

To obtain the instantaneous functional probability of the blockchain, we let St be the moment
the last time the blockchain is re-set before time t:

St =

N2(t)
(cid:88)

i=1

Yi,

and FSt be its distribution function. Then for t > 0, we have

Pm(t) = P {the blockchain is functional at t | St = 0}P {St = 0}

+

(cid:90) t

0

P {the blockchain is functional at t | St = s}dFSt(s)

= P {t <

m
(cid:88)

i=1

Xi ∧ Y } +

(cid:90) t

0

For 0 < s < t, we have

P {the blockchain is functional at t | St = s}dFSt(s).

P {the blockchain is functional at t | St = s} = P {Y ∧

m
(cid:88)

i=1

Xi > t − s | Y1 > t − s},

and dFSt(s) = P {Y1 > t − s}dG(s) where G(s) = (cid:80)∞

i=1 FYi(s).

6

Therefore,

Pm(t) = P {t <

m
(cid:88)

i=1

Xi ∧ Y } +

(cid:90) t

0

P {Y ∧

m
(cid:88)

i=1

Xi > t − s}dG(s).

(6)

It is clear that the ﬁrst term in (6) goes to 0 as t → ∞. For the second term, we have

(cid:90) t

m
(cid:88)

P {Y ∧

Xi > t − s}dG(s)

0
(cid:90) ∞

0
(cid:90) ∞

0

0 ≤ lim
t→∞

= lim
t→∞

≤ lim
t→∞

=

(cid:90) ∞

0

i=1
m
(cid:88)

P {Y ∧

Xi > t − s}1[0,t](s)dG(s)

P {Y ∧

lim
t→∞

P {Y ∧

i=1
m
(cid:88)

i=1
m
(cid:88)

i=1

Xi > t − s}dG(s)

Xi > t − s}dG(s) = 0,

where the last equality follows from the monotone convergence theorem for sequences of
decreasing measurable functions. This gives another proof that Pm(∞) = 0.

3.3 Pm(t) and E[Tm] as functions of m

Intuitively, the more nodes a blockchain has, the more secure it is. That is, Pn(t), Pn(∞),
and E[Tn] should all be non-decreasing functions of the number of nodes n, and they should
be increasing functions of n if the increment of the number of nodes is at least 2. The next
theorem conﬁrms this intuition.

Theorem 3.1. Pm(t), Pm(∞), and E[Tm] are all increasing functions of m, where m =
(cid:98)n/2(cid:99) + 1.

Proof. First, it is obvious that

and

P {t < Y ∧

P {t − s < Y ∧

m+1
(cid:88)

i=1

m+1
(cid:88)

Xi} > P {t < Y ∧

m
(cid:88)

i=1

Xi},

Xi} > P {t − s < Y ∧

m
(cid:88)

Xi}

i=1
because each hacking time Xi is positive almost surely. Therefore, (6) implies

i=1

Pm+1(t) > Pm(t),

for all positive integer m.

(7)

7

Next, we write (5) as

E[Tm] =

1 − pm
pm

×

E[Y 1{Y <(cid:80)m
1 − pm

i=1 Xi}]

+

E[((cid:80)m

=

E[Y 1{Y <(cid:80)m

i=1 Xi}]

pm

+

E[((cid:80)m

i=1 Xi)1{Y >(cid:80)m
pm

i=1 Xi}]

i=1 Xi)1{Y >(cid:80)m
pm
i=1 Xi}]

.

Therefore,

E[Tm+1] − E[Tm] = (pmpm+1)−1

(cid:26)

+pmE

(cid:20)(cid:18) m+1
(cid:88)

i=1

pmE[Y 1{Y <(cid:80)m+1

i=1 Xi}] − pm+1E[Y 1{Y <(cid:80)m
(cid:19)

(cid:21)

(cid:20)(cid:18) m
(cid:88)

i=1 Xi}]

(cid:19)

Xi

1{Y >(cid:80)m+1

i=1 Xi}

− pm+1E

Xi

1{Y >(cid:80)m

i=1 Xi}

i=1

The four terms in the brackets can be written as

pmE[Y 1{Y <(cid:80)m

i=1 Xi}] − pm+1E[Y 1{Y <(cid:80)m
(cid:20)(cid:18) m
(cid:88)

i=1 Xi}] + pmE[Y 1{(cid:80)m
i=1 Xi<Y <(cid:80)m+1
(cid:21)

(cid:19)

i=1 Xi}]

+pmE[Xm+11{Y >(cid:80)m+1

i=1 Xi}] + pmE

Xi

1{Y >(cid:80)m+1

i=1 Xi}

−pm+1E

(cid:20)(cid:18) m
(cid:88)

i=1

(cid:19)

i=1

(cid:21)

Xi

1{Y >(cid:80)m+1

i=1 Xi}

− pm+1E

(cid:20)(cid:18) m
(cid:88)

(cid:19)

Xi

1{(cid:80)m+1

i=1 Xi>Y >(cid:80)m

i=1 Xi}

(cid:21)

= (pm − pm+1)E[Y 1{Y <(cid:80)m

i=1 Xi}] + (pm − pm+1)E

+pmE[Y 1{(cid:80)m+1

i=1 Xi>Y >(cid:80)m

i=1 Xi}] − pm+1E

(cid:20)(cid:18) m
(cid:88)

i=1

i=1
(cid:20)(cid:18) m
(cid:88)

(cid:19)

Xi

1{Y >(cid:80)m+1

i=1 Xi}

i=1
(cid:19)

(cid:21)

(cid:21)

Xi

1{(cid:80)m+1

i=1 Xi>Y >(cid:80)m

i=1 Xi}

+pmE[Xm+11{Y >(cid:80)m+1

i=1 Xi}]

≥ (pm − pm+1)E[Y 1{Y <(cid:80)m

i=1 Xi}] + (pm − pm+1)E

(cid:20)(cid:18) m
(cid:88)

(cid:19)

(cid:21)

Xi

1{Y >(cid:80)m+1

i=1 Xi}

(cid:20)(cid:18) m
(cid:88)

(cid:19)

Xi

+pmE

1{(cid:80)m+1

i=1 Xi>Y >(cid:80)m

i=1 Xi}

i=1
+pmE[Xm+11{Y >(cid:80)m+1

i=1 Xi}]

(cid:21)

− pm+1E

i=1
(cid:20)(cid:18) m
(cid:88)

(cid:19)

Xi

i=1

1{(cid:80)m+1

i=1 Xi>Y >(cid:80)m

i=1 Xi}

(cid:21)(cid:27)
.

(cid:21)

(cid:19)

(cid:21)

Xi

1{Y >(cid:80)m+1

i=1 Xi}

(cid:20)(cid:18) m
(cid:88)

i=1

(cid:21)

= (pm − pm+1)E[Y 1{Y <(cid:80)m

i=1 Xi}] + (pm − pm+1)E

+(pm − pm+1)E

(cid:20)(cid:18) m
(cid:88)

Xi

i=1

(cid:19)

1{(cid:80)m+1

i=1 Xi>Y >(cid:80)m

i=1 Xi}

+ pmE[Xm+11{Y >(cid:80)m+1

i=1 Xi}].

It is evident from (3) that pm is decreasing in m. Therefore, E[Tm+1] − E[Tm] > 0.

8

In view of the above results, one would expect it to be impossible for a blockchain to be
hacked when the number of nodes n → ∞. The next theorem conﬁrms this intuition. (Note
that n → ∞ if and only if m = (cid:98)n/2(cid:99) + 1 → ∞.)

Theorem 3.2. limm→∞ Pm(t) = 1 and limm→∞ E[Tm] = ∞, where m = (cid:98)n/2(cid:99) + 1.

Proof. Since each Xi is positive almost surely, (6) implies

lim
m→∞

Pm(t) = 1.

(8)

Next, (3) implies pm → 0 as m → ∞. Therefore, E[N1] = 1/pm − 1 → ∞ as m → ∞. It
follows from (5) that

lim
m→∞

E[Tm] ≥ lim
m→∞

E[N1]E

Y

(cid:34)

E[N1] lim
m→∞
E[N1]E[Y ]

= lim
m→∞

= lim
m→∞
= ∞.

(cid:35)

Xi

Y <

m
(cid:88)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:20) E[Y 1{Y <(cid:80)m
P {Y < (cid:80)m

i=1

i=1 Xi}]
i=1 Xi}

(cid:21)

3.4 Cost-beneﬁt analysis

Suppose C1(m) is the cost incurred each time the blockchain is re-set, C2(m) is the cost
per unit time for running the blockchain, and R is the revenue earned per unit time by
running the blockchain. Note that C1(m) is incurred exactly once in each cycle because the
blockchain is re-set exactly once in each cycle. By Wald’s Identity, the expected number of
times C1(m) is incurred in one unit time equals 1/E[Y ]. Therefore, the expected net revenue
(i.e. expected proﬁt) per unit time, denoted as Em[N R], can be written as

Em[N R] = R − C2(m) −

C1(m)
E[Y ]

.

(9)

In practice, C2(m) is an increasing function of m, but 1/E[Y ] is a decreasing function of m.
While an optimal m that maximizes the net revenue per unit time does not necessarily exist,
one can always use (9) to perform a cost-beneﬁt analysis.

4 Examples

iid∼
Example 1 (Exponential hacking- and exponential detecting times). Suppose X1, . . . , Xn
Exp(λ), Y ∼ Exp(δ), and Y is independent from X1, . . . , Xn, where Exp(λ) and Exp(δ) denote

9

the exponential distributions with rate λ > 0 and δ > 0, respectively. That is, X ∼ Exp(λ)
if and only if its probability density function is given by

f (x) = λe−λx,

x > 0.

It is clear that (cid:80)m
i=1 Xi ∼ Gamma(m, λ), where Gamma(m, λ) denotes the gamma distribu-
tion with shape parameter m and rate parameter λ. That is, X ∼ Gamma(α, λ) if and only
if its probability density function is given by

f (x) =

λα
Γ(α)

xα−1e−λx,

x > 0,

where Γ(α) = (cid:82) ∞

0

tα−1e−tdt is the Gamma function. It follows that

(cid:18)

λm

(cid:82) ∞
0

E[Tm] =

y ye−(δy+λs)sm−1dsdy + (cid:82) ∞
(cid:82) ∞
(cid:82) ∞
0 γ(m, λs)e−δsds

0

(cid:82) ∞
s e−(δy+λs)smdyds

(cid:19)

,

Pm(t) =e−δt −

1
Γ(m)

γ(m, λt) +

1
Γ(m)

γ(m, λt)(1 − e−δt),

(cid:90) t

+

e−δ(t−s) −

0

∞
(cid:88)

(cid:26)

d

i=1

1 − (cid:82) ∞

0

1
Γ(m)

γ(m, λ(t − s)) +

1
Γ(m)

γ(m, λ(t − s))(1 − e−δ(t−s))

1 − e−δs

1
Γ(m) γ(m, λw)δe−δwdw

10≤s≤(cid:80)m

i=1 Xi + 1s>(cid:80)m

i=1 Xi

(cid:27)
,

where γ(α, λ) = (cid:82) λ
contains the derivation of the above formulas.

0 tα−1e−tdt is the lower incomplete gamma distribution. The Appendix

i=1 T i

Next, we perform a simulation study to estimate E[Tm] and Pm(t) as functions of m and
t respectively. For λ = 0.2 and δ = 3, we perform N1 = 30, 000 iterations to estimate each
E[Tm] for m = 1, 2, ..., 40. For each i = 1, 2, . . . N1, we generate an independent random
amount of time T i
m for a successful cyber destructive attack. Then we estimate E[Tm] as
(cid:80)N1
m/N1. Similarly, we perform N2 = 50, 000 iterations to estimate each Pm(5) for
m = 1, 2, ..., 40. For each j = 1, 2, . . . , N2, we set Wj = 1 if the blockchain is functional
at t = 5 and Wj = 0 otherwise. Then we take (cid:80)N2
j=1 Wj/N2 to be the estimate of Pm(5).
Figure 1 displays the values of E[Tm] and Pm(5) under Exponential hacking- and exponential
detecting times for various values of m. In both panels, the curve is non-decreasing in m.
Also, Pm(5) approaches 1 as m increases. These observations are all in agreement with
Theorem 3.1 and Theorem 3.2.

Figure 1 only demonstrates the relationship between Pm(t) and m when t = 5. What
Intuitively,
can we say when t varies? In Section 3.2, we established that Pm(∞) = 0.
as t increases, Pm(t) would decrease for any given m. Similar to the above, we perform a
simulation with N3 = 10, 000 iterations to estimate each Pm(t) for various values of m and
t. Panel (a) of Figure 2 provides a 3D scatter plot of Pm(t) as a bivariate function of m and
t. The blue scatter plot in Panel (a) of Figure 2 is the 3D version of Pm(t) versus m when

10

(a) E(Tm) as a function of m

(b) Pm(5) as a function of m

Figure 1: Plots of E[Tm] and Pm(5) under Exponential hacking- and exponential detecting
times

(a) Pm(t) as a bivariate function of m and t

(b) Em(N R) as a function of m

Figure 2: Plots of Pm(t) and Em(N R) under Exponential hacking- and exponential detecting
times

11

E[Tm] =

and

Pm(t) =1 −

t = 5, i.e., the plot in Panel(b) of Figure 1 corresponds to the cross section of the 3D scatter
plot in Panel (a) of Figure 2. It is clear that Pm(t) is non-decreasing in m for a given t > 0
and non-increasing in t for a given m. That is, the larger m and t are, the less likely the
blockchain will be hacked.

√

1.5m, C1 = 10−3m, and C2 = 10−2m. Then

For cost-beneﬁt analysis, we let R = 10−2e

the expected net revenue equals

√
Em[N R] = 10−2e

1.5m − 10−2m −

10−3m
E[Y ]

.

A plot of the expected net revenue Em(N R) as a function of m is given in Panel (b) of
Figure 2. In this case, Em(N R) is an increasing function of m. Therefore, one may not ﬁnd
the optimal m that maximizes the expected net revenue.

Example 2 (Gamma hacking- and gamma detecting times). Suppose Y ∼ Gamma(α, β),
i=1 Xi ∼
X1, . . . , Xn
Gamma(mη, δ). Then

iid∼ Gamma(η, δ), and Y is independent from X1, . . . , Xn. It follows that (cid:80)m

(cid:18)

δmη

(cid:82) ∞
0

y yαe−(βy+δs)smη−1dsdy + (cid:82) ∞
(cid:82) ∞

0

(cid:82) ∞
s yα−1e−(βy+δs)smηdyds

(cid:19)

(cid:82) ∞
0 γ(mη, ηs)sα−1e−βsds

,

γ(mη, δt) −

1
Γ(α)

γ(α, βt) +

γ(mη, δt)

1
Γ(α)

γ(α, βt)

1
Γ(mη)

γ(mη, δ(t − s)) −

γ(α, β(t − s))

1
Γ(mη)
1
Γ(α)

(cid:21)

γ(mη, δ(t − s))

γ(α, β(t − s))

1
Γ(mη)
(cid:20)

(cid:90) t

+

1 −

0

+

1
Γ(mη)
(cid:26)
∞
(cid:88)

d

1 − (cid:82) ∞

0

i=1

1
Γ(α)
1
Γ(α) γ(α, βs)
Γ(mη) γ(mη, δw) βα

1

1{0≤s≤(cid:80)m

i=1 Xi} + 1{s>(cid:80)m

i=1 Xi}

(cid:27)
.

Γ(α) wα−1e−βwdw

The derivation of the above formulas is delegated to the Appendix.

As in Example 1, we perform a simulation study to estimate E[Tm] and Pm(t). For
η = 0.05, δ = 15, α = 2, and β = 10, we perform N1 = 80, 000 iterations to estimate
each E[Tm] for m = 1, 2, ..., 40. We generate an independent random amount of time T i
m
for i = 1, 2, . . . , N1, and estimate E[Tm] as (cid:80)N1
m/N1. Similarly, with N2 = 150, 000
iterations, we estimate each Pm(4) for m = 1, 2, ..., 40. For each j = 1, 2, ..., N2, we set
Wj = 1 if the blockchain is function at t = 4 and Wj = 0 otherwise. Then Pm(4) is
estimated by (cid:80)N2
j=1 Wj/N2. Figure 3 provides plots of E[Tm] and Pm(4) for various values of
m. These plots show that E[Tm] and Pm(4) are both increasing in m, and Pm(4) approaches
1 as m increases.

i=1 T i

12

(a) E(Tm) as a function of m

(b) Pm(4) as a function of m

Figure 3: Plots of E[Tm] and Pm(4) under gamma hacking- and gamma detecting times

(a) Pm(t) as a bivariate function of m and t

(b) Em(N R) as a function of m

Figure 4: Plots of Pm(t) and Em(N R) under Gamma hacking- and gamma detecting times

13

Panel (a) of Figure 4 provides a 3D plot of Pm(t) as a bivariate function of m and t
under gamma hacking- and gamma detecting times. Similar to the previous example, the
blue scatter plot in Figure 4 is the 3D version (cross section) of Pm(t) versus m when t = 4.
It is clear that Pm(t) is non-decreasing in m for a given t > 0 and non-increasing in t for a
given m.

As for cost-beneﬁt analysis, we take R = 13

0.6c, C1 = m0.2, and C2 = m. Then the

√

expected net revenue Em[N R] equals

Em[N R] = 13

√

0.6c − m −

m0.2
E[Y ]

.

In Panel (b) of Figure 4, the red vertical line indicates that the maximum expected net
revenue is 15.95 and is achieved when m = 22. Though E[Tm] and Pm(t) are non-decreasing
in m, a large m is not preferable from the point of view of cost-beneﬁt analysis because an
optimal m exists in this case.

Example 3 (Gamma hacking- and Weibull detecting times). In this example, we assume
that Y ∼ Weibull(α, β). That is, Y has the probability density function

f (y) =

(cid:17)β−1

β
α

(cid:16) y
α

e−(y/α)β

,

y > 0.

We also assume that X1, . . . , Xn
Then (cid:80)m

i=1 Xi ∼ Gamma(mη, δ). Here we have

iid∼ Gamma(η, δ), and that Y is independent from X1, . . . , Xn.

(cid:18)

δmη

(cid:82) ∞
0

y yβe−((y/α)β +δs)smδ−1dsdy + (cid:82) ∞
(cid:82) ∞

0

(cid:19)
(cid:82) ∞
s yβ−1e−((y/α)β +δs)smδdyds

(cid:82) ∞
0 γ(mη, ηs)sβ−1e−(y/α)β ds

,

E[Tm] =

Pm(t) =e−(t/α)β −

1
Γ(mη)

γ(mη, δt) +

1
Γ(mη)

γ(mη, δt)(1 − e−(t/α)β )

(cid:90) t

+

e−((t−s)/α)β −

0

∞
(cid:88)

(cid:26)

d

i=1

1 − (cid:82) ∞

0

1
Γ(mη)

γ(mη, δ(t − s)) +

1
Γ(mη)

1 − e−(s/α)β

1

Γ(mη) γ(mη, δw) (cid:0) β

α

(cid:1) (cid:0) w
α

(cid:1)β−1 e−(w/α)β dw

γ(mη, δ(t − s))(1 − e−((t−s)/α)β )

1{0≤s≤(cid:80)m

i=1 Xi} + 1{s>(cid:80)m

i=1 Xi}

(cid:27)

.

For the derivation of the above formulas, see the Appendix.

Similar to Example 1 and Example 2, we perform a simulation study to estimate E[Tm]
and Pm(t). We use the same method to estimate E[Tm] and Pm(t) as we did in the previous
two examples except that here we take N1 = 130, 000 and N2 = 80, 000. Figure 5 plots
E[Tm] and Pm(3) as functions of m.

Panel (a) of Figure 6 provides a 3D plot of Pm(t) as a bivariate function of m and t,
where the blue dot scatter plot is the 3D version of the plot in Panel (b) of Figure 5. Once
again, we see that Pm(t) is non-decreasing in m for a ﬁxed t > 0 and non-decreasing in t for
a ﬁxed m.

14

(a) E(Tm) as a function of m

(b) Pm(3) as a function of m

Figure 5: Plots of E[Tm] and Pm(3) under gamma hacking- and weibull detecting times

(a) Pm(t) as a bivariate function of m and t

(b) Em(N R) as a function of m

Figure 6: Plots of Pm(t) and Em(N R) under Gamma hacking- and Weibull detecting times

15

To perform the cost-beneﬁt analysis, we choose R = 10

√

m, C1 = 6m0.2, and C2 = m.

Then Em[N R] equals

Em[N R] = 10

√

m − m −

6m0.2
E[Y ]

.

Similar to Example 2, here an optimal m exists. The red vertical line in Panel (b) of Figure 6
indicates this optimal m equals 25 at which the expected net revenue achieves its maximum
value 24.90.

5 Concluding remarks

This paper investigates the instantaneous and limiting behavior of an n-node blockchain
under cyber attacks from a single hacker. Under arbitrary hacking and detecting times, we
have derived the formulas for the limiting functional probability, instantaneous functional
probability, and mean functional time. We have also established that these quantities are all
non-decreasing functions of the number of nodes. These results substantiate the intuition
that increasing the number of nodes can eﬀectively improve the security of a blockchain. To
illustrate our results, we also provided several simulated examples to illustrate our results.
While blockchain is clearly a “hot topic” that attracts researchers from various ﬁelds, it
seems that the operations-research-theoretic aspect of blockchains has rarely been explored.
This paper aims to stimulate serious interest along this line of research. For future research,
one interesting direction is to investigate the operations-research-theoretic aspect of the
blockchain when it faces cyber attacks from several hackers.

Appendix

For the sake of convenience, we ﬁrst derive some expressions for the components in (5) and
(6). We ﬁrst look at (5). It is clear that (3) implies that

(cid:26)

pm = P

Y >

m
(cid:88)

i=1

(cid:27)

Xi

=

(cid:90) ∞

0

F(cid:80)m

i=1 Xi(s)fY (s)ds.

(10)

The type of conditional expectations in (5) appear frequently in statistical reliability theory
and actuarial life contingency theory; see, for example, Bieth et al. (2009, 2010) and Hong
(2009). A rigorous treatment can be found in Hong and Sarkar (2013).
It follows from
Equation (5) in Hong and Sarkar (2013) that

(cid:90) ∞

(cid:20)

E[Y1] = E

=

(cid:21)

Y

Xi

Y <

m
(cid:88)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
i=1
(cid:82) ∞
y yg(y, s)dsdy
i=1 Xi)

(cid:82) ∞
0
P (Y < (cid:80)m

=

yfY |Y <(cid:80)m

i=1 Xi(y)dy

0
(cid:82) ∞
(cid:82) ∞
y yfY (y)f(cid:80)m
0
1 − (cid:82) ∞
0 F(cid:80)m

i=1 Xi(s)dsdy
i=1 Xi(s)fY (s)ds

,

=

16

where, by independence of Y and (cid:80)m

i=1 Xi, the joint PDF of Y and (cid:80)m

i=1 Xi is given by

g(y, s) = fY (y)f(cid:80)m

i=1 Xi(s),

y > 0, s > 0.

Hence,

Similarly,

E[N1][Y1] =

1 − pm
pm

(cid:20)

E

Y

(cid:12)
(cid:12)
(cid:12)
(cid:12)

Y <

m
(cid:88)

i=1

(cid:21)

Xi

=

(cid:82) ∞
0

(cid:82) ∞
y yfY (y)f(cid:80)m
(cid:82) ∞
0 F(cid:80)m

i=1 Xi(s)fY (s)ds

i=1 Xi(s)dsdy

(cid:20) m
(cid:88)

E

Xi

i=1

(cid:12)
(cid:12)
(cid:12)
(cid:12)

m
(cid:88)

i=1

(cid:21)

Xi < Y

=

(cid:82) ∞
0

(cid:82) ∞
s sfY (y)f(cid:80)m
(cid:82) ∞
0 F(cid:80)m

i=1 Xi(s)fY (s)ds

i=1 Xi(s)dyds

.

It follows that

(cid:82) ∞
0

E[Tm] =

(cid:82) ∞
y yfY (y)f(cid:80)m

i=1 Xi(s)dsdy + (cid:82) ∞

(cid:82) ∞
s sfY (y)f(cid:80)m

i=1 Xi(s)dyds

(cid:82) ∞
0 F(cid:80)m

0
i=1 Xi(s)fY (s)ds

.

.

(11)

Next, we shift our attention to the terms in (6). We have

(cid:26)

P

t < Y ∧

m
(cid:88)

i=1

(cid:27)

Xi

= 1 − P

(cid:26) m
(cid:88)

i=1

(cid:27)

Xi ≤ t

− P {Y ≤ t} + P

Xi ≤ t, Y ≤ t

(cid:27)
.

(cid:26) m
(cid:88)

i=1

Similarly,

(cid:26)

P

Y ∧

m
(cid:88)

i=1

(cid:27)

Xi > t − s

=1 − P

(cid:26) m
(cid:88)

i=1

(cid:27)

Xi ≤ t − s

− P {Y ≤ t − s}

+ P

(cid:26) m
(cid:88)

i=1

Xi ≤ t − s, Y ≤ t − s

(cid:27)
.

For the term G(s) = (cid:80)∞

i=1 FYi(s), we have
(cid:27)

Y ≤ s, Y ≤ (cid:80)m

(cid:26)

P

FYi(s) =

i=1 Xi
(cid:27)




1

P {Y ≤s}

P {Y ≤(cid:80)m
0



i=1 Xi}

=

if s > (cid:80)m
i=1 Xi,
if 0 ≤ s ≤ (cid:80)m
if s < 0.

i=1 Xi,

(12)

(cid:26)

P

Y ≤ (cid:80)m

i=1 Xi

Thus, (12) can also be written as

FYi(s) =

P (Y ≤ s)

P (Y ≤ (cid:80)m

i=1 Xi)

1{0≤s≤(cid:80)m

i=1 Xi} + 1{s>(cid:80)m

i=1 Xi},

x > 0.

17

From Example 1
Let Y ∼ Exp(δ) and (cid:80)m

i=1 Xi ∼ Gamma(m, λ). Then (10) implies

(cid:26)

pm = P

Y >

m
(cid:88)

i=1

(cid:27)

Xi

=

(cid:90) ∞

0

1
Γ(m)

γ(m, λs)δe−δsds,

where γ(m, λs) = (cid:82) λs

0

tm−1e−tdt is the lower incomplete gamma function. By (11), we have

(cid:82) ∞
0

E[Tm] =

(cid:82) ∞
y yδe−δy λm

Γ(m) sm−1e−λsdsdy + (cid:82) ∞

(cid:82) ∞
s sδe−δy λm

Γ(m) sm−1e−λsdyds

0
1
Γ(m)γ(m, λs)δe−δsds

(cid:82) ∞
0

(cid:18)

λm

(cid:82) ∞
0

=

It follows from (6) that

y ye−(δy+λs)sm−1dsdy + (cid:82) ∞
(cid:82) ∞
(cid:82) ∞
0 γ(m, λs)e−δsds

0

(cid:82) ∞
s e−(δy+λs)smdyds

(cid:19)

.

Pm(t) =1 −

1
Γ(m)
(cid:20)

(cid:90) t

γ(m, λt) − (1 − e−δt) +

1
Γ(m)

γ(m, λt)(1 − e−δt)

1 −

1
Γ(m)

γ(m, λ(t − s)) − (1 − e−δ(t−s)) +

+

0

∞
(cid:88)

i=1

d

(cid:26)

=e−δt −

(cid:90) t

+

0

1 − (cid:82) ∞
1
Γ(m)
(cid:20)

0

∞
(cid:88)

(cid:26)

d

i=1

1 − (cid:82) ∞

0

1 − e−δs

1
Γ(m) γ(m, λw)δe−δwdw
1
Γ(m)

γ(m, λt) +

γ(m, λt)(1 − e−δt)

1{0≤s≤(cid:80)m

i=1 Xi} + 1{s>(cid:80)m

i=1 Xi}

e−δ(t−s) −

γ(m, λ(t − s)) +

1
Γ(m)
1 − e−δs

1
Γ(m) γ(m, λw)δe−δwdw

(cid:21)
γ(m, λ(t − s))(1 − e−δ(t−s))

1
Γ(m)

1{0≤s≤(cid:80)m

i=1 Xi} + 1{s>(cid:80)m

i=1 Xi}

(cid:27)

.

(cid:21)
γ(m, λ(t − s))(1 − e−δ(t−s))

1
Γ(m)

(cid:27)

From Example 2
Here Y ∼ Gamma(α, β) and (cid:80)m

i=1 Xi ∼ Gamma(mη, δ). By (10), we have

(cid:26)

pm = P

Y >

m
(cid:88)

i=1

(cid:27)

Xi

=

(cid:90) ∞

0

1
Γ(mη)

γ(mη, δs)

βα
Γ(α)

sα−1e−βsds,

18

where γ(mη, δs) = (cid:82) δs
(11) that

0

tmη−1e−tdt is the lower incomplete gamma function. It follows from

(cid:82) ∞
0

E[Tm] =

(cid:82) ∞
y y βα

Γ(α) yα−1e−βy δmη

Γ(mη)smη−1e−δsdsdy + (cid:82) ∞
Γ(mη)γ(mη, ηs) βα

(cid:82) ∞
s s βα
0
Γ(α) sα−1e−βsds

(cid:82) ∞
0

1

Γ(α)yα−1e−βy δmη

Γ(mη) smη−1e−δsdyds

(cid:18)

δmη

=

(cid:82) ∞
0

y yαe−(βy+δs)smη−1dsdy + (cid:82) ∞
(cid:82) ∞

0

(cid:82) ∞
s yα−1e−(βy+δs)smηdyds

(cid:19)

(cid:82) ∞
0 γ(mη, ηs)sα−1e−βsds

.

Then (6) implies

Pm(t) =1 −

γ(mη, δt) −

1
Γ(α)

γ(α, βt) +

γ(mη, δt)

1
Γ(α)

γ(α, βt)

1
Γ(mη)
(cid:20)

(cid:90) t

+

1 −

0

+

1
Γ(mη)
(cid:26)
∞
(cid:88)

d

1 − (cid:82) ∞

0

i=1

1
Γ(mη)
1
Γ(α)

(cid:21)

1
Γ(mη)

γ(mη, δ(t − s)) −

γ(α, β(t − s))

γ(mη, δ(t − s))

γ(α, β(t − s))

1
Γ(α)
1
Γ(α) γ(α, βs)
Γ(mη) γ(mη, δw) βα

1

1{0≤s≤(cid:80)m

i=1 Xi} + 1{s>(cid:80)m

i=1 Xi}

(cid:27)
.

Γ(α) wα−1e−βwdw

From Example 3
Here Y ∼ Weibull(α, β) and (cid:80)m

i=1 Xi ∼ Gamma(mη, δ). It follows from (10) that

(cid:18)

P

Y >

m
(cid:88)

i=1

(cid:19)

Xi

=

(cid:90) ∞

0

1
Γ(mη)

γ(mη, δs)

β
α

(

s
α

)β−1e−(s/α)β

ds.

By (11), we have

E[Tm] =

(cid:82) ∞
0

+

Γ(mη) smη−1e−δsdsdy
α)β−1e−(s/α)β ds

1

α )β−1e−(y/α)β δmη

(cid:82) ∞
y y β
(cid:82) ∞
0
(cid:82) ∞
0

α( y
Γ(mη) γ(mη, ηs) β
(cid:82) ∞
s s β
(cid:82) ∞
0

α ( s
α )β−1e−(y/α)β δmη

1

α ( y
Γ(mη) smη−1e−δsdyds
α )β−1e−(s/α)β ds
Γ(mη)γ(mη, ηs) β
α ( s
(cid:82) ∞
y yβe−((y/α)β +δs)smδ−1dsdy + (cid:82) ∞

0

(cid:18)

(cid:82) ∞
0

δmη

=

(cid:19)
(cid:82) ∞
s yβ−1e−((y/α)β +δs)smδdyds

(cid:82) ∞
0 γ(mη, ηs)sβ−1e−(y/α)β ds

.

19

Then (6) implies

Pm(t) =1 −

1
Γ(mη)

γ(mη, δt) − (1 − e−(t/α)β

) +

1
Γ(mη)

γ(mη, δt)(1 − e−(t/α)β

)

+

(cid:90) t

0

1 −

+

1
Γ(mη)
(cid:26)
∞
(cid:88)

d

i=1
=e−(t/α)β

1 − (cid:82) ∞
0
1
Γ(mη)

−

(cid:90) t

+

e−((t−s)/α)β

−

0

∞
(cid:88)

(cid:26)

d

i=1

1 − (cid:82) ∞

0

References

γ(mη, δ(t − s)) − (1 − e−((t−s)/α)β

)

1
Γ(mη)
γ(mη, δ(t − s))(1 − e−((t−s)/α)β

)

(cid:27)

1{0≤s≤(cid:80)m

i=1 Xi} + 1{s>(cid:80)m

i=1 Xi}

1

Γ(mη) γ(mη, δw) β

α )β−1e−(w/α)β dw

γ(mη, δt) +

γ(mη, δt)(1 − e−(t/α)β

)

1 − e−(s/α)β
α( w
1
Γ(mη)

1
Γ(mη)

γ(mη, δ(t − s)) +

1
Γ(mη)

γ(mη, δ(t − s))(1 − e−((t−s)/α)β

)

1 − e−(s/α)β
α( w

Γ(mη) γ(mη, δw) β

1

α )β−1e−(w/α)β dw

1{0≤s≤(cid:80)m

i=1 Xi} + 1{s>(cid:80)m

i=1 Xi}

(cid:27)
.

Bieth, B., Hong, L. and Sarkar, J. (2010). A standby system with two types of repair

persons. Applied Stochastic Models in Business and Industry 26(5), 577–594.

Bieth, B., Hong, L. and Sarkar, J.

(2010). A standby system with two repair persons
under arbitrary life- and repair times. Mathematical and Computer Modeling 51(5-
6),756–767.

Cao, L. (2020). AI in Finance: A Review. https://ssrn.com/abstract=3647625.

Casino, F., Dasaklis, T. K. and Patsakis, C. (2019). A systematic literature review of
blockchain-based applications: current status, classiﬁcation and open issues. Telemat-
ics and Informatics 36, 55–81.

Diﬃe, W. and Hellman, M.E. (1976). New directions in cryptography. IEEE Transactions

on Information Theory 22(5), 644–654.

Goldwasser, S. and Micali, S. (1982). Probabilistic encryption. Journal of Computer System

and Sciences 28(2), 270–299.

Goldwasser, S. ,Micali, S. and Rivest, R.L. (1988). A digital signature scheme secure against
adaptive chosen-message attacks. SIAM Journal on Computing 18(1), 283–308.

Hong, L. (2009). Limiting performance of a one-unit system under various repair models.
Ph.D. thesis. Purdue University. https://docs.lib.purdue.edu/dissertations/
AAI3379404/.

20

Hong, L. and Sarkar, J. (2013). Contingent means in multi-life models. Scandinavian

Actuarial Journal 5, 340–351.

Kallenberg, O. (2002). Foundations of Modern Probability, Second Edition. Springer: New

York.

Khan, M.A. and Salah, K. (2017). IoT security: review, blockchain solutions, and open

challenges. Future Generation Computer Systems. 82, 395–411.

Kumar, A , Abhishek, K. , Ghalib, M.R., Nerurkar, P., Bhirud, S. , Alnumay, W., Kumar,
S.A., Chatterjee, P. and Ghosh, U. (2020). Securing logistics system and supply chain
using Blockchain.Applied stochastic models in business and industry 37(3), 413–428.

Li, C. and Zhang, L.J. (2017). A blockchain based new secure multi-layer network model
for internet of things. Proceedings–2017 IEEE 2nd Intertional Congress on Internet of
Things, 33–41.

Lu, J. . Wu, S. , Cheng, H. , Song, B. and Xiang, Z. (2020). Smart contract for electric-
ity transactions and charge settlements using blockchain.Applied stochastic models in
business and industry 37(3), 442–453.

Malik, N., Alkhatib, K., Sun, Y., Knight, E. and Jararweh, Y. (2021). A comprehensive
review of blockchain applications in industrial Internet of Things. Applied stochastic
models in business and industry 37(3), 391–412.

Meng, W., Tischhauser, E. , Wang, Q. , Wang, Y. and Han, J. (2017). When instruction
detection meets blockchain technology: a review. IEEE Access 6, 10179–10188.

Risius, M., and Spohrer, K. (2017). A Blockchain Research Framework: What We (don’t)
Know, Where We Go from Here, and How We Will Get There. Business & Information
Systems Engineering volume 59(6), 385–409.

Rivest, R.L. , Shamir, A. and Adelman, L. (1978). A method for obtaining digital signatures

and public-key cryptosystems. Communications of the ACM 21(2), 120–126.

Salah, K., Rehman, M., Nizamuddin, N., and Al-fuqaha, A. Blockchain for AI: Review and

Open Research Challenges. IEEE Access 10127-10149.

Tama, B.A. , Kweka, B.J., Park, Y. and Rhee, K.H. (2017). A critical review of blockchain
and its current applications. 2017 International Conference on Electrical Engineering
and Computer Science IEEE, 109–113.

Yang, J. , Ma, X. , Crespo, R. G. and Mart´ınez, O.S. (2020). Blockchain for supply
chain performance and logistics management.Applied stochastic models in business and
industry 37(3), 429–441.

Zheng, Z. Xie, S. , Dai, H.N., and Wang, H. (2018). Blockchain challenges and opportuni-
ties: a survey. International Journal of Web and Grid Services 14(4), 352–375.

21

