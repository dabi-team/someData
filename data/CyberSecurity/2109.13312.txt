LSTM-based approach to detect cyber attacks on
market-based congestion management methods

Omniyah Gul M Khan∗, Amr Youssef†, Ehab El-Saadany‡§, and Magdy Salama¶
∗Electrical and Computer Engineering, University of Waterloo, Canada, Email: ogulmkha@uwaterloo.ca
†Information Systems Engineering, Concordia University, Canada, Email: youssef@ciise.concordia.ca
‡Advanced Power and Energy Center, EECS Department, Khalifa University, Email: ehab.elsadaany@ku.ac.ae
§Electrical and Computer Engineering, University of Waterloo, Email: ehab@uwaterloo.ca
¶Electrical and Computer Engineering, University of Waterloo, Email: msalama@uwaterloo.ca

1
2
0
2

p
e
S
7
2

]

Y
S
.
s
s
e
e
[

1
v
2
1
3
3
1
.
9
0
1
2
:
v
i
X
r
a

Abstract—Market-based congestion management methods
adopt Demand Side Management (DSM) techniques to alleviate
congestion in the day-ahead market. Reliance of these methods
on the communication layer makes it prone to cyber attacks
affecting the security, reliability, and economic operation of
the distribution network. In this paper, we focus on Load
Altering Attacks that would compromise the operation of market-
based congestion management methods. A detection technique is
proposed using Long Short-term Memory (LSTM) Recurrent
Neural Networks (RNN). IEEE 33 bus system is used as a case
study to demonstrate the effectiveness of the proposed technique.
An accuracy of 97% was obtained proving the capability of using
LSTM-RNN to detect a load altering cyber attack compromising
aggregators in the network.

Index Terms—Cyber attack, Load Altering Attack, Long
Short-Term Memory (LSTM), Recurrent Neural Network (RNN).

I. INTRODUCTION

Electriﬁcation of the transportation system and space heat-
ing, and the increased penetration of Distributed Energy Re-
sources have changed the operating conditions of the dis-
tribution system. Distribution System Operators (DSO) are
facing congestion problems due to power ﬂow exceeding
the network’s transfer capability. To manage congestion that
could cause voltage violations and/or thermal overloading,
possibly damaging devices such as distribution transformers
and feeders, market-based congestion management methods
have been developed. Such methods utilize existing ﬂexibility
in the market through Demand Side Management (DSM),
avoiding incurring huge costs to reinforce network assets [1].
Market-based congestion management methods [2] [3] em-
ploy the communication layer to relay consumer preferences
to their respective aggregators, price tariffs from DSO to
aggregators, and load schedules from aggregators to the DSO
to mitigate congestion. The success of such congestion man-
agement methods, hence, relies on the cyber security of the
entities involved and their communication links. Ensuring the
conﬁdentiality, integrity, and availability of the DSO, aggre-
gators, consumers’ meters, and the information exchanged is
vital to resolve congestion using DSM.

Cyber attacks compromising consumers’ smart meters and
their communication lines have been studied in the literature.
[4] studied the impact of closed-loop load altering attacks

compromising the stability of the power system. In [5], three
types of attackers were studied, with varying cyber attacking
capabilities,
that aim to steal electricity using false data
injection (FDI) by tampering with the smart meters. On the
other hand, in [6], the impact of a cyber attack manipulating
the readings of consumers’ meters responsible for monitoring
renewable DG units to overcharge the utility.

Attacking aggregators or their communication links with
the DSO is another aspect that can be utilized by a cyber
attacker to affect the performance of market-based congestion
management methods. Aggregators hold a unique position in
the distribution network in terms of their connection to their
respective DER equipment and the DSO [7]. Compromising
the cyber security of aggregators could risk the overall security
of the grid. Financial losses can be caused as a result of an
adversary causing congestions not to be detected in the day-
ahead market by the DSO. This would cause unnecessary load
shedding that could be avoided if the attack was mitigated.
Moreover, cyber attacks can be executed by DSO competitors
to fake congestion resulting in higher congestion tariffs to be
imposed on the consumers. This would encourage consumers
to change their utility provider. Hence, it is critical to study the
impact of cyber attacks on aggregators and how to mitigate or
detect such attacks. However, no literature exists on studying
attacks compromising aggregators explicitly except our work
in [8]. In [8], the impact of compromising aggregators, as a
result of Load Altering Attacks (LAA), on congestion and
congestion tariff has been evaluated. But, up to the author’s
knowledge, no literature exists on detection of such attacks
that compromise aggregators load proﬁles communicated to
the DSO affecting congestion in the network.

Motivated by the research gap, the main contribution of this
paper is focused on developing a detection scheme that would
determine the presence or absence of a load altering cyber
attack compromising aggregators in the distribution network.
The detection scheme is executed by the DSO in the day-
ahead market on receiving aggregators’ load proﬁles prior to
computing the congestion tariff.

II. RELATED WORK

Load Altering Attacks (LAAs) has been previously studied
in the literature. In [9], static LAAs compromising Internet

 
 
 
 
 
 
connected vulnerable loads were studied. A cost-efﬁcient load
protection was then proposed identifying the vulnerable loads
that need to be secured without overloading the distribution
system. In [4], closed-loop dynamic LAA were studied in
which non-secured load was cyber-attacked over time in a
pre-programmed trajectory based on system frequency. A non-
convex pole placement optimization problem is then solved to
determine the minimum load required to be secured without
impacting power system stability. It should be noted, however,
that [9]-[4] were studied based on power system dynamics.

Detection of FDI attacks utilizing data-based methods has
been also studied. Data-based methods’ ability to scale to
larger systems with low computational cost makes it an attrac-
tive technique [10]. [11] tested and compared the performance
of linear and Gaussian Support Vector Machines (SVM), K-
Nearest Neighbours (KNN), and single layer perceptrons as
FDI detection models. Similarly, [12] utilized SVM, KNN,
and Extended Nearest Neighbours to detect the most accurate
method to detect falsiﬁcation of measurement and state data.
A SVM-based classiﬁer was adopted to detect energy theft
attacks as a result of hacking smart meters in [13].

III. CASE STUDY SYSTEM DETAILS

To simulate load altering attacks on market-based con-
gestion management techniques and the proposed detection
model, the IEEE 33 bus system [14], illustrated in Figure 1,
is adopted. Having 32 load buses, residential consumers are
represented using both ﬂexible and base loads. Residential
base load proﬁles are designed to have a maximum load
equivalent to the default loading of the IEEE 33 test bus
system. On the other hand, residential ﬂexible loads consist
of one Heat Pump (HP) and one Electric Vehicle (EV) with a
battery size of 36kWh, per residence. Consumers’ preferences
in terms of their comfortable indoor temperature range and
initial State of Charge (SOC) of EV are randomized to be
uniformly distributed between 18 − 24°C and 20 − 30%
respectively. The residential charging power of EVs was
chosen as 11kW. All the load buses of the IEEE 33 bus
system, are assumed to be residential, having both ﬂexible and
non-ﬂexible loads, except bus 23 and 24. Having the largest
base-load, load bus 23 and 24 were utilized as commercial
buses consisting of Fast Charging Direct Current (FCDC) EV
charging parking lots of 50kW. Arrival and departure of EVs
from the FCDC parking lot were simulated using data obtained
from Toronto parking authority [15]. The absence of an EV
from the commercial parking lot was assumed to indicate its
presence at its residence. All residential and commercial buses
were represented by 9 aggregators having comparable loads,
as illustrated in Figure 1. Aggregators 6 and 7 are used to
represent commercial buses. Day-ahead electricity prices are
obtained from the PJM market via the dataminer tool [16].
GAMS [17] was used for executing the optimizations in this
paper. MATLAB was used for determining the congestion
tariffs imposed by the DNO to relieve congestion and for
implementing the proposed detection scheme.

Figure 1.

IEEE 33 bus system involving nine aggregators [14]

IV. IMPACT OF LAAS COMPROMISING AGGREGATORS

The general methodology adopted in market-based conges-
tion management methods is illustrated in Figure 2. Three
entities are involved: DSO, aggregators, and consumers. DSO
is the central system operator that is responsible for ensuring
the absence of network congestion. It utilizes the Wide Area
Network (WAN) to receive optimized load schedules from the
aggregators, performs load ﬂow analysis, and then determines
the congestion tariff to be imposed to alleviate congestion.
These tariffs are then sent to the aggregators to re-optimize
their load schedules based on their customers’ preferences.
Aggregators are responsible for receiving their customers’
preferences using the Neighborhood Area Network (NAN)
and optimizing their load schedules to minimize their costs.
Consumers are the owners of ﬂexible and non-ﬂexible loads
and they hire aggregators to represent
their needs in the
electricity market. Utilizing the Home Area Network (HAN),
consumers transmit their loads and their preferences to their
respective aggregators.

DSM-based congestion management methods’ reliance on
the communication layer to relieve congestion makes them
prone to cyber attacks. A Load Altering cyber Attack (LAA)
can be implemented by compromising aggregators and altering
the load schedules that are transmitted to the DSO. The opti-
mal load schedule of aggregators can be deﬁned as follows,

i,t = E(P a,nf
P a

c,t + P a,f

c,t ), ∀a ∈ Na, ∀i ∈ Nd,
∀c ∈ Nm, ∀t ∈ NT

(1)

Figure 2. General representation of DSM-based congestion management

Figure 3. Effect of a LAA on power ﬂow levels

Figure 4. Effect of LAA on electricity price

i,t ∈ RNd is the load of bus i of aggregator a at
where P a
time t. Na, Nd and Nm are the set of aggregators, buses, and
customers in the network. NT is the total set of time slots
considered in the day-ahead market. E is the customer-to-bus
mapping matrix where E ∈ RNd×Nm. P a,nf
c,t are the
non-ﬂexible and ﬂexible loads of customer, c, of aggregator a
, P a,f
at time t, where {P a,nf
c,t } ∈ RNm. The load schedule of
compromised aggregator can be deﬁned as follows,

and P a,f

c,t

c,t

P ac
i,t = P ac

i,t + ∆ac

i

, for 0 ≤ ∆ac

i ≤ γ

(2)

where ac is the aggregator that is compromised and ∆ac
i
represents the alteration of the compromised aggregator’s load.
To not raise any alarms with the DSO, ∆ac
needs to be as
i
low as possible. γ is the upper limit for the change in the
compromised aggregators’ load schedule. In this paper, γ is
chosen as 0.1 to ensure the stealthiness of the attack while
achieving the objective of the attacker.

Adopting the case study explained in Section II, and utiliz-
ing the DDT congestion management method [18] to mitigate
congestion, the load schedules of aggregators 3 and 7 are
compromised to study the impact of the cyber attack. Figure
3 illustrates the effect of LAA on power ﬂow in line 0-1 of
the IEEE 33 bus system as a comparison between the attacked
and not attacked scenarios, prior to imposing any congestion
tariff. At peak time, t = 12, the line 0-1 was already congested.
However, the LAA caused an increase in the congestion level.
Moreover, line 0-1 was not congested at times 10 and 11.
However, on scaling the load schedules of the two aggregators,
congestion was created. This has an impact on electricity price
as illustrated in Figure 4. In the absence of a LAA, the imposed
congestion tariff increased the price of electricity at t = 12 by
15%. However, due to the load altering attack, the imposed
tariff increased the price by a not needed 10% at t = 12 which
customers have to pay for a higher congestion level that is
not real. Also, as a result of fake congestion being created at
times 10 and 11, a congestion tariff is imposed by the DNO to
solve the fake congestion. Customers now have to pay 4.4%
more at t = 10 and 6.4% more at t = 11.

V. MODELING OF LAA DETECTION SCHEME

To detect LAAs, Recurrent Neural Networks (RNN), which
is a class of Artiﬁcial Neural Networks (ANN), is proposed in
this paper. Traditional backpropagation NNs, though capable

of learning nonlinear functions, cannot capture sequential
information in the input data which is required for dealing
with sequence data. Neglecting data’s temporal correlation
impacts the model’s accuracy [19]. RNNs, on the other hand,
have a recurrent connection in their hidden states making
them capable of capturing sequential information present in
input data. The network, hence, develops a memory of past
events and encodes it in its hidden state. RNNs are ideal
for applications in which there is a temporal dependency in
the data [20]. Hence, an RNN’s output at t could have an
effect on its decision at t + 1. There are many types of
RNNs based on their input and output data: sequence input
(also known as many-to-one), sequence output (also known
as one-to-many), sequence input and output (also known as
many-to-many), or synced sequence inputs and outputs (also
known as bidirectional many-to-many). RNNs are trained
using backpropagation. However, for long sequences,
the
gradients, which carry information utilized for RNN parameter
update, measured in the last layers becomes smaller. Thus, as
a consequence parameter updates become insigniﬁcant. LSTM
RNNs is an improvement over RNNs since it reduces RNNs
vanishing gradient problem. LSTM’s insensitivity to the gap
between the relevant information in the past and the time when
that information is needed in the present gives it an advantage
over alternative sequential models, such as Hidden Markov
Models [21].

Being in the day-ahead market, and receiving the aggrega-
tors’ load schedules as a full day sequence makes utilization
of LSTM as a cyber attack detection scheme attractive for the
DSO prior to computation of the congestion tariff. To model
the detection scheme, the steps illustrated in Figure 5, and
explained in the following subsections, needs to be executed.

A. Data set, Feature Extraction and Preprocessing

To model the LSTM network, hourly customer real power
load, electricity price, and weather data for Michigan, USA
was utilized. Data was collected for random days in November
to March of 2015 to 2020. These winter months were chosen

Figure 5. LSTM-based LAA Detection Model

as the loads are at their peak, and there is a high chance of the
network being congested. The real power load per bus in the
distribution network is determined using the weather and day-
ahead electricity prices to optimize aggregators’ consumers’
load. Hence, the four types of sequences that were chosen as
input features are as follows:

• Historical daily weather data.
• Historical day-ahead electricity prices [16].
• Three days historical real power load per bus.
• Power load per bus.
• Power ﬂow in the main feeder of the distribution network.
All the data were normalized using min-max normalization.
For every feature, the minimum value was transformed to a
0, the maximum value was changed to a 1, and every other
value gets represented by a decimal between 0 and 1. 1550
days of data were used to simulate attacked and not attacked
scenarios. An attacked day is labeled as 1, and 0 otherwise.

B. LSTM Modelling

To model LAA LSTM-based detection scheme, a many-to-
one LSTM model is adopted. The input to the model is in
the form of sequential data representing the 24-hour weather
forecast, day-ahead electricity prices, real power load per bus,
and the power ﬂow in the feeder of concern. The output to
the model, on the other hand, is a classiﬁcation decision. A
decision equal to 1 represents an attacked scenario, while a
decision equal to 0 represents a not-attacked scenario. The
LSTM-RNN model includes multiple LSTM-RNN memory
units that replaces each node in the hidden layer of a neural
network model. Each unit consists of an input gate, i(t), an
output gate, o(t), a forget gate, f (t), and a memory cell
state, c(t), as illustrated in Figure 6 [22]. The three gates
are responsible for selecting and rejecting the information that
passes through the network in its cell state. Initially, the LSTM
needs to determine which information it will remove from the
cell state, c(t − 1). This is done by the sigmoid layer forget
gate, f (t), which takes its previous cell output, h(t − 1), and
the new cell input, x(t), to output a number between 0 and 1
for c(t − 1). A 1 indicates retaining the contents of c(t − 1)
while a 0 means deleting the contents.

f (t) = δ(Wf [x(t), h(t − 1)] + bf )

(3)

A sigmoid layer input gate then takes the current input, x(t),
and previous cell output, h(t − 1), to determine which cell

states to update. A tanh layer is responsible for creating an
array of new updated values that would be added to the state.

i(t) = δ(Wi[x(t), h(t − 1)] + bi)

˜c(t) = tanh(Wc[x(t) + h(t − 1) + bc)

(4)

(5)

The previous cell state, c(t−1), is then updated by multiplying
it with f (t) (3) to forget the contents that was decided to be
forgotten. The result is added to the product of i(t) (4) and
˜c(t) (5) to update the cell state values.

˜c(t) = f (t) × c(t − 1) + i(t) × ˜c(t)

(6)

The output gate, o(t), utilizes the sigmoid activation function
to decide which part of the current cell makes it to the output.
These values are then ﬁltered using a tanh function to be
between -1 and 1.

o(t) = δ(Wo[x(t), h(t − 1)] + bo)

ht = ot tanh c(t)

(7)

(8)

Wf , Wi, Wc, and Wo represent the weight matrices for the
inputs of the network activation functions. Also, bf , bi, bc,
and bo represent the biases for the different gates. The above
process is repeated for all time steps, as illustrated in Figure 7.
Weights and biases are updated by minimizing the differences
between the LSTM outputs and the training samples.

C. Results and Discussion

70% of the data explained in the section earlier, correspond-
ing to 1200 days of data representing attacked and not attacked
scenarios, were used for training and validating the LAA de-
tection scheme. The remaining 30% of the data, corresponding
to 350 days, were used for testing the performance of the
model. the performance of the LSTM detection scheme was
compared with the traditional back propagation neural network
(ANN) model. To evaluate its performance, confusion matrix
and accuracy were used as performance metrics. A confusion
matrix assesses the performance of the model in terms of true
positives, true negatives, false positives, and false negatives.
False positives refer to the number of cases that were classiﬁed
as attacked when in reality they were not attacked. On the other
hand, a false negative refers to the number of cases that were
not classiﬁed as attacked by the model. True positives and true
negatives refer to case scenarios representing attacked and not
attacked days respectively and the model classiﬁed it correctly.

Figure 6. Structure of the LSTM-RNN memory-unit

Figure 7. Overall Structure of the LSTM-RNN Model

On the other hand, accuracy represents the correctness of the
classiﬁer and is calculated as follows:

the capability of the proposed model in detecting load altering
cyber attacks that compromises aggregators in the network.

Accuracy =

(True Positive + True Negative)
Number of Cases

(9)

Table I illustrates the confusion matrix of the results ob-
tained using the LSTM and the ANN models. As observed,
in both the models the number of false positive is higher
compared to that of the false negative cases. The ANN
resulted had nearly 9.4% of false positive cases compared to
1.7% of false negatives. Similarly, LSTM resulted in nearly
2.9% of false positives compared to 0.6% of false negatives.
Using more data to train the model on more attack scenarios
can decrease this number so that the model could clearly
distinguish between an attacked and not attacked scenario.
Compared to the ANN model, the LSTM model performed
better. Summing up the number of true positive and true
negative cases, as illustrated in (9), results in an accuracy of
96.57% for the LSTM model and accuracy of 88.86% for the
ANN model. The results signify the advantage of using LSTM
sequential classiﬁer to model the LAA detection scheme.

In the day-ahead market, on receipt of the aggregators’ load
schedules, the DSO executes the proposed LSTM model to
detect if an attack has occurred. If the LSTM classiﬁer detects
no attack, then the DSO would go ahead to compute the
congestion tariffs. However, if an attack is detected the DSO
would inform the aggregators that a cyber attack has occurred
in the network so that the aggregators could check their cyber
security. Until the cyber attack is eliminated, the DSO would
rely on its historical data to determine if there is congestion
in the network. Future work should incorporate the detection
of the aggregator that is compromised in the network.

VI. CONCLUSIONS

Cyber vulnerabilities of market-based congestion manage-
ment techniques were studied in this paper. The impact of load
altering attacks that creates fake congestion was evaluated in
terms of congestion level and congestion tariffs. A detection
technique using LSTM recurrent neural networks was pro-
posed. On receiving aggregators’ load schedules in the day-
ahead market, the DSO would simulate the LSTM detection
model to determine if any of the data received for each bus
has been compromised. Distinctive sequences were chosen as
features for the detection model to classify the presence or
absence of an attack in the day-ahead market. Although the
attacks simulated were made to be stealthy and hence hard
to be detected, an accuracy of 96.57% was obtained reﬂecting

Table I
CONFUSION MATRIX OF LAA DETECTION MODELS

(cid:97)(cid:97)(cid:97)(cid:97)(cid:97)

Output

Actual Attack

ANN

LSTM

No
Attack

Attack

No
Attack

Attack
No Attack

137
6

33
174

141
2

10
197

REFERENCES

[1] N. Haque, A. Tomar, P. Nguyen, and G. Pemen, “Dynamic tariff for day-
ahead congestion management in agent-based LV distribution networks,”
Energies, vol. 13, 2020.

[2] S. Huang, Q. Wu, L. Cheng, and Z. Liu, “Optimal reconﬁguration-based
dynamic tariff for congestion management and line loss reduction in
distribution networks,” IEEE Transactions on Smart Grid, vol. 7, pp.
1295–1303, May 2016.

[3] Y. Gu, J. Xie, X. Chen, K. Yu, Z. Chen, and Z. Li, “Dynamic tariff
method for congestion management in distribution networks,” in IEEE
Conf. on Energy Internet and Energy System Integration, 2017, pp. 1–6.
[4] S. Amini, F. Pasqualetti, and H. Mohsenian-Rad, “Dynamic load altering
attacks against power system stability: Attack models and protection
schemes,” IEEE Transactions on Smart Grid, vol. 9, pp. 2862–2872,
July 2018.

[5] X. Liu, P. Zhu, Y. Zhang, and K. Chen, “A collaborative intrusion
detection mechanism against false data injection attack in advanced
metering infrastructure,” IEEE Transactions on Smart Grid, vol. 6, pp.
2435–2443, 2015.

[6] M. Ismail, M. F. Shaaban, M. Naidu, and E. Serpedin, “Deep learning
detection of electricity theft cyber-attacks in renewable distributed
generation,” IEEE Trans. on Smart Grid, vol. 11, pp. 3428–3437, 2020.
[7] C. Lai, N. Jacobs, S. Hossain-Mckenzie, C. Carter, P. Cordeiro,
I. Onunkwo, and J. Johnson, “Cyber security primer for der vendors,
aggregators, and grid operators,” 2017.

[8] O. G. M. Khan, E. El-Saadany, K. Saleh, M. Shaaban, and A. Youssef,
“Cyber attacks on distributed congestion management methods,” in 2019
IEEE Power Energy Society General Meeting (PESGM), 2019, pp. 1–5.
[9] A. Mohsenian-Rad and A. Leon-Garcia, “Distributed internet-based load
altering attacks against smart power grids,” IEEE Transactions on Smart
Grid, vol. 2, no. 4, pp. 667–674, 2011.

[10] J. Sakhnini, H. Karimipour, and A. Dehghantanha, “Smart grid cyber at-
tacks detection using supervised learning and heuristic feature selection,”
in IEEE Conf. on Smart Energy Grid Engineering, 2019, pp. 108–112.
[11] M. Ozay, I. Esnaola, F. T. Yarman Vural, S. R. Kulkarni, and H. V.
Poor, “Machine learning methods for attack detection in the smart grid,”
IEEE Transactions on Neural Networks and Learning Systems, vol. 27,
pp. 1773–1786, 2016.

[12] J. Yan, B. Tang, and H. He, “Detection of false data attacks in smart
grid with supervised learning,” in 2016 International Joint Conference
on Neural Networks (IJCNN), 2016, pp. 1395–1402.

[13] P. Jokar, N. Arianpoo, and V. C. M. Leung, “Electricity theft detection
in ami using customers’ consumption patterns,” IEEE Transactions on
Smart Grid, vol. 7, no. 1, pp. 216–226, 2016.

[14] M. E. Baran and F. F. Wu, “Network reconﬁguration in distribution
systems for loss reduction and load balancing,” IEEE Transactions on
Power Delivery, vol. 4, no. 2, pp. 1401–1407, April 1989.

[15] E. A. Rezai, M. Shaaban, E. F. El-Saadany, and F. Karray, “Online
intelligent demand management of plug-in electric vehicles in future
smart parking lots,” IEEE Systems Journal, vol. 10, pp. 483–494, 2016.
https://www.pjm.com/

[16] “Data

Available:

[Online].

miner.”

markets-and-operations/etools/data-miner-2.aspx

[17] G. D. Corporation, “General algebraic modeling system (gams) release

24.2.1,” Washington, DC, USA, 2013.

[18] S. Huang, Q. Wu, H. Zhao, and C. Li, “Distributed optimization based
dynamic tariff for congestion management in distribution networks,”
IEEE Transactions on Smart Grid, 2018.

[19] J. Li, D. Deng, J. Zhao, D. Cai, W. Hu, M. Zhang, and Q. Huang,
“A novel hybrid short-term load forecasting method of smart grid using
MLR and LSTM NN,” IEEE Trans. on Industrial Informatics, pp. 2443–
2452, 2021.

[20] F. M. Bianchi, E. Maiorino, M. C. Kampffmeyer, A. Rizzi, and
R. Jenssen, Recurrent Neural Networks for Short-Term Load Forecast-
ing: An Overview and Comparative Analysis. Springer, 2017.

[21] P. Lea, IoT and Edge Computing for Architects: Implementing edge
and IoT systems from sensors to clouds with communication systems,
analytics, and security. Computers, 2020.

[22] R. S. F. Gers and F. Cummins, “Learning to forget: continual prediction

with lstm,” Neural Comput., vol. 12, pp. 2451–2471, 2000.

