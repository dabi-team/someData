(IJACSA) International Journal of Advanced Computer Science and Applications, 
Vol. 11, No. 2, 2020 

A Smart Home System based on Internet of Things 

Rihab Fahd Al-Mutawa1, Fathy Albouraey Eassa2 
Faculty of Computing and Information Technology 
King Abdulaziz University 
Jeddah, Saudi Arabia 

Abstract—The  Internet  of  Things  (IoT)  describes  a  network 
infrastructure  of  identifiable  things  that  share  data  through  the 
Internet. A smart home is one of the applications for the Internet 
of  Things.  In  a  smart  home,  household  appliances  could  be 
monitored  and  controlled  remotely.  This  raises  a  demand  for 
reliable  security  solutions  for  IoT  systems.  Authorization  and 
authentication are challenging IoT security operations that need 
to  be  considered.  For  instance,  unauthorized  access,  such  as 
cyber-attacks,  to  a  smart  home  system  could  cause  danger  by 
controlling  sensors  and  actuators,  opening  the  doors  for  a  thief. 
This  paper  applies  an  extra  layer  of  security  of  multi-factor 
authentication  to  act  as  a  prevention  method  for  mitigating 
unauthorized access. One of those factors is face recognition, as it 
has  recently  become  popular  due  to  its  non-invasive  biometric 
techniques,  which  is  easy  to  use  with  cameras  attached  to  most 
trending computers and smartphones. In this paper, the gaps in 
existing  IoT  smart  home  systems  have  been  analyzed,  and  we 
have suggested improvements for overcoming them by including 
necessary  system  modules  and  enhancing  user  registration  and 
log-in  authentication.  We  propose  software  architecture  for 
implementing  such  a  system.  To  the  best  of  our  knowledge,  the 
existing IoT smart home management research does not support 
face recognition  and liveness detection within the authentication 
operation of their suggested software architectures. 

Keywords—Internet  of  Things  (IoT);  smart  home;  system; 

architecture; security; management 

I. 

INTRODUCTION 

and 

safety 

testing, 

environment 

The  Internet  of  Things  (IoT)  is  a  system  of  sensors  and 
actuators  embedded  in  physical  objects  equipped  with  unique 
identifiers and the ability to transfer data over both wired and 
wireless networks [1]. The substantial development activity in 
IoT  includes  many  categories,  such  as  smart  grid,  smart 
intelligent 
logistics, 
transportation,  industrial  control  and  automation,  finance  and 
service,  military  defense,  health  care,  fine  agriculture,  and 
smart  homes  [2].  Smart  homes  are  homes  that  incorporate  a 
communication  network  that  connects  the  key  sensors  and 
actuators,  and  allows  them  to  be  accessed,  monitored  or 
controlled  remotely  [3].  In  a  smart  home,  there  are  certain 
characteristics; the network size is small, the number of users is 
very  few  (as  it  is  restricted  to  the  family  members),  and 
different  network  connectivity  can  be  used,  such  as  3G,  4G, 
and  Wi-Fi.  The  data  management  occurs  through  a  local 
server;  IoT  Devices  are  using  RFID  or  WSN  wireless 
technologies, and the bandwidth requirement is small [2]. The 
smart  home  is  also  known  as  house  automation,  in  which 
domestic  activities  are  made  more  comfortable,  convenient, 
secure  and economical. As a result, home automation became 
popular due to its numerous benefits. 

A  home  automation  system  consists  of  four  main 
components. The first is the user interface, such as a computer 
or phone used to give orders to the control system. The second 
component  is  the  transmission  mode,  which  is  the  Ethernet 
(wired),  or  Bluetooth  (wireless).  The  third  is  the  central 
controller,  which  is  the  hardware  interface  that  communicates 
with  the  user  interface  by  controlling  electronic  devices.  The 
final  component  is  various  electronic  devices,  such  as  an  air-
conditioner,  a  lamp,  or  a  heater  that  are  compatible  with  the 
mode of transmission, and connected to the central controlling 
system [4]. 

There are many challenges present in IoT systems, such as 
management, performance, privacy, and security. The security 
challenges  include  authorization,  authentication,  and  access 
control  [5].  Therefore,  registration  and  log-in  are  important 
security  operations  in  a  smart  home  system,  as  unauthorized 
access  to  the  system  (such  as  a  cyber-attack)  could  cause 
danger by opening the door for a thief, threatening the safety of 
residents and their belongings. In this paper, we suggest a user-
friendly  multi-factor  authentication  for  the  proposed  smart 
home  system.  One  of  those  factors  is  the  password,  and  the 
other  factor  is  face  recognition.  The  integration  scenario  for 
face  recognition  and  liveness  detection  with  the  log-in 
operation  to  smart  home  is  a  novelty  for  this  paper.  Multi-
factor  authentication 
is  a  secure  authentication  process 
combined  of  more  than  one  authentication  technique  chosen 
from  various  independent  categories  of  credentials  to  provide 
better  way  of  validating  legitimate  users  [6].  Multi-factor 
authentication creates a layered hindrance, thus making it more 
difficult for an unauthorized individual to reach the system. In 
this case, even if attackers break one factor, they still have one 
more  impediment  to  break before  they  can  access the  system. 
The  two-factor  authentication  solution  is  cost  effective  to 
customers, and has the means of providing flexible and strong 
authentication. It reduces the fraud rate when compared to one-
factor authentication [7]. The use of multi-factor authentication 
is  growing  in  order  to  help  verify  the  identities  of  users 
requesting  to  access  the  system  for  information  that  could  be 
sensitive or could control the system. The four  most common 
types  of  authentication  factors  are  the  cognitive  information 
(such as passwords), items that a user possesses (such as smart 
cards),  a  biometric  trait  of  the  user  (such  as  face  recognition 
and fingerprints), and a user‟s location information (such as IP 
address and GPS) [6]. 

This  research  presents  a  novel  contribution  in  comparison 
to  the  previous  research  by  suggesting  a  log-in  module  for 
managing  the  operations  of  user  registration  and  log-in  more 
securely.  This  module  is  integrated  within  the  suggested 
software  architecture  of  the  IoT  smart  home,  and  then  it  is 

www.ijacsa.thesai.org 

260 | P a g e  

 
 
(IJACSA) International Journal of Advanced Computer Science and Applications, 
Vol. 11, No. 2, 2020 

explained  in  detail.  In  this  research,  the  added  features  to  the 
smart home system are compared to the smart home systems of 
related  work  in  the  discussion  section  of  this  paper.  The 
integration of face recognition and liveness modules within the 
log-in module is first presented by this research. 

The  paper  consists  of  six  sections  and  is  organized  as 
follows:  Section  1  introduces the  research  problem.  Section  2 
presents background information. Section 3 reviews the related 
work.  Section  4  proposes  the  system  architecture.  Section  5 
discusses  the  suggested  solution.  Finally,  Section 6  concludes 
the work and presents prospects for future research. 

II.  BACKGROUND 

This  section  presents  a  literature  review  of  the  concepts 

behind the used modules by the proposed system architecture. 

A.  Hashing 

Hashing  is  recommended  for  securing  passwords  [8].  It  is 
used  during  the  registration  and  log-in  operations  [9].  A 
hashing  password  is  better  than  encrypted  passwords,  as 
hashing is a one-way function; we cannot regenerate the plain 
text value of the password from its hash value. Thus, to secure 
passwords,  SHA256  and  SHA512  are 
recommended 
cryptographic  hash  functions  [8].  The  secure  hash  algorithms 
consist  of  cryptographic  hash  functions  published  by  the 
National  Institute  of  Standards  and  Technology  as  a  United 
States Federal Information Processing Standard, including: 

1)  SHA-1:  A  160-bit  hash  function  that  resembles  the 
earlier  MD5  algorithm.  It  was  designed  by  the  National 
Security  Agency  to  become  part  of  the  Digital  Signature 
Algorithm. Since 2010, the standard is no longer approved for 
most cryptographic uses due to cryptographic weaknesses that 
were discovered in SHA-1. 

2)  SHA-2: A family of two hash functions that are similar 
to  each  other,  with  different  block  sizes,  named  as  SHA-256 
and SHA-512. Their difference is in the word size; SHA-256 
uses  32-bit  words  and  SHA-512  uses  64-bit  words.  The 
National Security Agency also designed truncated versions of 
each standard, named as SHA-224, SHA-384. 

3)  SHA-3:  This  hashing  function  was  formerly  called 
Keccak,  chosen  in  2012  after  a  public  competition  between 
non-National Security Agency designers. Its internal structure 
is  different  from  the  rest  of  the  SHA  family,  and  it  supports 
the same hash lengths as SHA-2. 

4)  SHA-4:  Hash  functions  that  have  different  block  sizes 

are known as SHA-512 [10]. 

B.  Liveness Detection 
Liveness  detection 

is  an  active  research  area.  Face 
recognition  systems  can  be  spoofed  by  photographs,  video 
recordings, and dummy faces made of materials like silica gel 
or  rubber.  Face  recognition  algorithms  do  not  have  a 
mechanism  for  differentiating  a  live  face  from  a  fake  face; 
therefore, liveness detection must be integrated with the system 
in  order  to  verify  whether  the  facial  image  is  alive  or 
reproduced  synthetically  [11].  A  spoofing  attack  is  a  direct 
attack occurring outside the system or at the sensor level, while 
indirect  attacks  occur  inside  the  system  if  an  intruder 

manipulates the templates in the database or evades the feature 
matcher  or  extractor  [12].  Liveness  detection  differentiates 
between  a  live  feature  set  and  non-live  feature  set  [11]. 
Liveness  detection  techniques  are  classified  into  four  main 
categories,  namely  motion-analysis-based,  texture-analysis-
based, image-quality-analysis-based, and hybrid [12]. 

C.  Face Recognition 

Face  recognition  is  a  popular  biometric  authentication 
method  [13].  Biometric  characteristics  provide  accurate 
evidence  of  personal  identity;  thus,  biometric  authentication 
provides an advantage when compared to other non-biometric 
identifiers  [14].  Moreover,  biometric  authentication  does  not 
need to be memorized, thus it is preferred over other traditional 
techniques  [12].  The  main  steps  of  a  face  recognition  system 
are  face  detection,  face  alignment,  feature  extraction,  and 
feature matching [15]. The goal of the facial detection phase is 
to  determine  whether  there  are  any  faces  in  the  image.  If  it 
discovers a face it returns the image location and the extent for 
each  face.  Therefore,  face  detection  is  more  challenging  than 
face localization where the assumption that the image contains 
only  one  face  [16].  The  face  alignment  is  the  first  phase  to 
transform  the  detected  faces  into  a  standard  pose.  The  use  of 
face  alignment  methods  can  significantly 
improve  face 
recognition  accuracy  [17].  Feature  extraction  identifies  facial 
feature components, such as eyebrows, eyes, nose, and mouth 
[18]. 

D.  Voice Recognition 

Voice  recognition  software  in  general  encompasses  four 
technologies:  spoken  recognition  of  human  speech  (which  is 
also known as speech recognition or speech-to-text), synthesis 
of human readable characters into speech (which is also known 
as  speech  synthesis  or  text-to-speech),  speaker  identification 
and verification, and natural language understanding [19]. 

1)  Speech  recognition:  Speech  recognition  (also  referred 
to  as  speech-to-text)  is  the  process  that  transforms  the 
computer‟s  acoustic  signal  (i.e.,  speech)  into  set  of  typed 
words  [20]. The  first  type  of  speech  recognition  is  command 
and control (or spoken command recognition), and the second 
is dictation. Command and control recognizes single words or 
short phrases spoken continuously, such as "Count the Lines" 
or "Accept and Save." Dictation technology has two divisions: 
discrete and continuous. The discrete dictation requires lower 
processing power requirements, as the end-user needs to place 
a  short  pause  between  each  spoken  word.  Continuous 
dictation,  has  overcame  this  limitation,  and  it  is  used  in  the 
radiology implementation [19]. 

2)  Speech synthesis: Synthesizers, also referred to as text-
to-speech,  are  computer  systems  that  have  the  ability  to  read 
any  text  aloud  when  an  operator  introduces  the  text  in  the 
computer  [21].  In  a  speech  synthesis  system,  the  computer 
produces the same phonemes that  humans  would  make  when 
they read text aloud [19]. 

3)  Speaker 

identification  and  verification:  Speaker 
identification and verification are two related processes. They 
deal with the identity of the human speaker, unlike in speech 
recognition  and  speech  synthesis  where  these  processes  deal 

www.ijacsa.thesai.org 

261 | P a g e  

(IJACSA) International Journal of Advanced Computer Science and Applications, 
Vol. 11, No. 2, 2020 

with  what  was  spoken  by  a  human  or  with  synthesizing  a 
particular  human  voice.  However,  the  speaker  verification 
process  is  applied  in  order  to  authenticate  a  given  human 
speaker against a database pool of enrolled users [19]. 

4)  Natural 

language  understanding:  Understanding 
natural language refers to inputting spoken or typed sentences 
into  a  computer  and  then  processing  them  to  extract  their 
meanings; thus, the computer can understand human language 
[22]. 

E.  Chatbot 

A chatbot engine is a natural language engine, as it has the 
responsibility  to  translate  natural  language  into  instruction 
understandable by machines. There is a complexity to chatbot 
engines,  as  they  use  various  natural  language  processing 
models  and  machine  learning  techniques  to  provide  an 
acceptable level of accuracy [23]. There are two key functional 
components  for  the  chatbot  engine  - that  is  intent  and entities 
[24]. 

1)  Intent: The user‟s utterance is first analyzed for intent. 
Intents refers to  what the  user is looking to accomplish, such 
as  getting  sensor  data  or  turning  devices  on  or  off.  To 
understand  the  user‟s  intent,  it  maps  the  natural  language 
phrases to canonical phrases in order to conclude the specific 
action that should be taken by the smart home system [23]. 

recognize 

the  chatbot  can 

2)  Entity: This refers to the information specific to certain 
domain that is extracted from the textual utterance of the user. 
They are used for identifying the required parameters in order 
to  take  a  specific  action.  To  train  the  chatbot  engine,  entities 
are  typically  grouped  together  according  the  expectation  that 
they will give the same actions. For example, for the utterance 
the  words 
“thermostat”, 
"thermostat",  “A/C”,  “air  conditioner”,  or  "air  conditioning" 
and  convert  it  into  the  keyword  „$thermostat‟  [23].  Using 
keywords from the trained chatbot raises the efficiency of the 
system,  so  that  the  smart  home  system  can  receive  the 
appropriate  request  from  this  component  and  then  direct  the 
request to the target device through the ThingsManager. After 
that, the system responds to the end user. The user requests are 
training  phrases  that  are  imported  into  the  chatbot  engine 
along with the trained responses. However, the system should 
also  be 
temperature  commands,  humidity 
questions/commands, light state questions/commands, the rest 
of  sensors  questions/commands,  microcontroller  questions, 
general questions, and navigation commands [25]. 

trained 

for 

F.  Message Queuing Telemetry Transport Broker (MQTT) 

The  most  popular  communication  protocol  for  IoT  is 
Message  Queuing  Telemetry  Transport  (MQTT)  [26].  MQTT 
is an ISO standard (ISO/IEC PRF 20922) lightweight protocol 
that  depends  on  the  principle  of  publishing  messages  and 
subscribing  to  topics (pub/sub). It  is  useful  for  sensor devices 
with limited resources. The client can connect to a broker and 
subscribe  to  its  selected  topics.  Clients  also  publish  messages 
to  topics  after  connecting  to  the  broker  [27].  The  Internet  of 
Things  system  integrates  information  from  heterogeneous 
sensors,  allowing  these  devices  to  deliver  different  sensed 

and 

such 

controlling 

as  monitoring 

information  through  networks.  Therefore,  the  IoT  broker  acts 
as  an  information  exchange  center  in  the  system,  relaying 
periodic  messages  from  heterogeneous  appliances  to  IoT 
clients [28]. The  MQTT broker  is an open  source  code  at  the 
heart of all MQTT arrangements. It provides a connecting link 
between  physical  devices  and  smart  home  systems.  The 
features  and  limitations  for  the  five  most  commonly  used 
brokers  can  be  found  in  [26].  The  MQTT  broker  can  provide 
services, 
room 
temperatures,  suppressing  fires,  and  controlling  alarms,  all  of 
which  require  microcontrollers  to  be  used  as  the  IoT  end 
devices  that  connect  sensors  and  actuators  to  the  smart  home 
system through a Wi-Fi channel [29]. If the user requests data 
from sensors or actuators, then the smart home system sends a 
message to the appropriate microcontroller through the MQTT 
broker to perform the user request [25]. The MQTT and broker 
acts  as  a  simple,  common  interface  to  which  everything  can 
connect.  Topics  are  arranged  in  a  hierarchy,  using  a  slash  (/) 
separator.  The  client 
receives  messages  by  creating 
subscriptions.  A  subscription  can  be  for  an  explicit  topic,  in 
which case-only messages to that topic will be received, or for 
more than one topic by including wildcards that is either + or # 
[27]. 

III.  RELATED WORK 

The  IoT  has  many  characteristics  [30].  They  require  new 
management  (including  security  management  methods)  or  an 
entirely new approach to the prominent management systems, 
as there is a need for managing the growing number of things 
connected  to  the  Internet,  which  generates  a  large  amount  of 
network  traffic  for  devices  with  low  power  capabilities.  To 
address  this  concern,  the  authors  introduced  an  Internet  of 
Things management system for operations, such as sensing and 
actuating  mobile  software  agents.  Their  proposal  is  amongst 
the  first  studies  that  address  managing  these  things  as  part  of 
the  IoT.  The  system  supports  fundamental  management 
functions,  including  operation,  such  as  requesting  sensor  data 
or actuating, monitoring, and communicating, whether local or 
remote.  The  proposed  model  architecture  is  a  simple  two-tier 
model  that  can  vary  to  a  more  complex  model  based  on  a 
hierarchal  and  distributed  structure  consisting  of  many 
managers  and  agents 
the  needed 
in  order 
functionalities 
traditional  network 
management  systems.  The  proposed  system  is  then  expanded 
in [31], their work demonstrating some of the monitoring and 
control  capabilities  for  management  provided  in  the  proposed 
system. They conducted an experiment to offer an example of 
how  the  IoT  management  system  can  be  used  to  support 
management  over  services,  such  as  remotely  controlling  and 
monitoring  things  remotely  over  the  Internet  using  a  mobile 
application.  The  results  collected  from 
the  experiment 
validated the management capabilities of the proposed Internet 
of Things management system, and demonstrated its successful 
deployment. Moreover, the smart home system has more added 
features  in  [32],  as  in  addition  to  offering  a  management 
solution  for  things  that  suffer  from  limited  computation  and 
power  resources,  a  middleware  solution  is  proposed  for  the 
system  to  enable  the  management  of  things  based  on  seven 
components. One of those components is the security module, 
which  enforces  the  software  agent  to  be  registered  by  the 

that  are  a  part  of 

to  provide 

www.ijacsa.thesai.org 

262 | P a g e  

(IJACSA) International Journal of Advanced Computer Science and Applications, 
Vol. 11, No. 2, 2020 

manager,  and  then  grants  the permission control  for the  agent 
whether  read  or  read/write.  After  that,  the  agent  must  be 
approved by the system administrator, as the remote agent is a 
third-party  application  that  can  manage  things  if  granted 
permission. The manager keeps a database of authorized agents 
registered  by  their  Agent  IDs  in  order  to  ensure  that  only 
authorized  agents  are  granted  permission  to  connect  to  the 
manager. Agents have an access type to the thing that is either 
read  or  read-write.  In  [23],  the  smart  home  system  had  an 
additional  chatbot  feature.  The  research  integrated  a  chatbot, 
which is an intelligent conversational software agent in the IoT 
scenario with text-based inputs to the smart home system. They 
presented  a  novel  paradigm,  combining  the  chatbot  concept 
with  the  IoT  concept  in  a  single  solution.  The  suggested 
software architecture requires using a chatbot channel, such as 
Facebook Messenger, to interact with the  bot. The integration 
between the smart home system and the third-party software is 
over  the  application  layer  through  an  HTTP  RESTful  API 
(which is a part of the IoT Cloud smart home system) to allow 
the  user  to  interact  with  the  smart  home  using  the  chatbot. 
However, in [25], the integrated chatbot within the smart home 
system has the added feature of delivering the command to the 
system through the user‟s voice, and accordingly hearing back 
the response through speakers. The chatbot can understand text 
or voice commands using natural language processing, as with 
the  use of  natural  language processing,  home devices become 
more  user-friendly  for  end-users.  The  solution  is  integrating 
third-party APIs and open source technologies into one mash-
up,  using  multi-tier  architecture  for  the  rapid  development  of 
the IoT smart home system. The ready to use services are the 
Dialogflow  API  for  the  efficient  integration  of  the  chatbot  to 
the  smart  home  system,  the  Web  Speech  API  for  the  voice 
recognition  and  synthesis  features,  MQTT  for  controlling 
sensors and actuators, and Firebase as a database for dynamic 
data storage. This integration that is based on third party APIs 
and open source technologies is first presented by their work. 

This paper expands the current IoT smart home systems by 
incorporating  face  recognition  and  liveness detection  with  the 
log-in 
enhanced  operations  of  user 
authentication.  These  operations  are  essential  part  of  the 
system, and we propose software architecture for a smart home 
system. 

registration  and 

IV.  SYSTEM ARCHITECTURE 

The  proposed  system  architecture  for  the  smart  home 
system consists of six modules, as shown in Fig. 1, and based 
on web services so the user can control his or her home  from 
outside  the  house.  A  web  service  is  a  collection  of  open 
protocols  and  standards  used  for  data  exchange  between 
systems  or  applications.  They  are  XML-based  information 
exchange systems. It supports interoperability, as web services 
use open  standards,  thus  software  systems  written  in  different 
programming languages and running on different platforms can 
use  web  services  for  exchanging  data  over  the  Internet  in  a 
similar manner, as if the communication is for inter-process on 
a single computer [33]. The description for each web service is 
provided below, and an explanation for the concept behind the 
internal  components  is  presented  in  the  background  in 
Section 2. The proposed system can be installed on computers, 
tablets, and mobile phones. 

SmartHome 
Application 

LoginManager 

AdminManager 

VoiceRecognition 

Chatbot 

ThingsManager 

Fig. 1.  System Architecture based on Web Service Technology. 

A.  Login Manager 

This  module  is  the  main  significant  contribution  of  this 
paper. The log-in manager is responsible for managing the user 
authorization and authentication operations, which handles user 
registration  and  log-in  operations.  It  consists  of  four  software 
components: hashing, liveness detection, face recognition, and 
notification,  as  shown  in  Fig.  2.  The  main  functions  of  this 
module  are  register  and  log-in.  It  applies  the  multi-factor 
authentication method as an extra layer of security for logging 
into the system. The first factor is the password and the second 
factor is face recognition as according to [34], face recognition 
recently has become popular, as it is a non-invasive biometric 
technique.  Also,  it  is  easy  to  use  with  the  available  cameras 
embedded in most computers and smartphones [35]. 

1)  Hashing:  To  secure  the  user  password  during  the 
registration  and  log-in  operations,  this  component  hashes  the 
password using a cryptographic hashing function. 

2)  Liveness detection: This component is needed to check 
face  liveness,  as  the  face  recognition  component  can  be 
spoofed easily if it is used without this module. 

3)  Face  recognition:  The  face  recognition  component  is 
used  for  extracting  the  facial  features  during  log-in  and 
registration, in addition to verifying the user‟s face while log-
in to the system. 

4)  Notification:  Sending  notification  messages  with  an 
instant  picture  for  the  current  user  to  system  admin  during 
suspicious  registration  and  log-in  attempts  are  increasing  the 
security  level  in  the  smart  home  system.  During  a  user 
registration  operation,  the  system  sends  two  notification 
messages  to  the  system  admin.  The  first  message  is  an 
approval request for the newly registered user sent by the end 
of the user registration operation. The second message is sent 
when there is an attempted spoofing attack after checking the 
face  liveness  when  the  user  tries  to  register  with  a  picture, 
recorded  video,  or  a  dummy  face.  Approving  registration 
requests  is  another  security  method  utilised  to  delay  any 
suspicious attempts for controlling the home. Fig. 3 represents 
the  sequence  diagrams  for  user  registration  operations, 
including sent notifications. Fig. 4 represents the algorithm of 
the user registration operation. 

www.ijacsa.thesai.org 

263 | P a g e  

 
(IJACSA) International Journal of Advanced Computer Science and Applications, 
Vol. 11, No. 2, 2020 

App 

Login 
Manager 

Hashing 

Notification 

Liveness 
Detection 

Face 
Recognition 

Database 

Hashing 

Liveness 
Detection 

Face 
Recognition 

Notification 

login(username, pw) 

hash(pw) 

get_password(username) 

register 

login 

Fig. 2. 

Internal Components of Log-in Web Service. 

App 

Login 
Manager 

Hashing 

Liveness 
Detection 

Face 
Recognition 

Database 

Notification 

register(username, pw) 

hash(pw) 

check_liveness() 

 alt 

[liveness==false] 

capture_image() 

notify(“spoofing_attack”, username, face_img) 

extract_features() 

create_account(username, pw, img_vec) 

capture_image() 

notify(“approval_request”, username, face_img) 

Fig. 3.  User Registration Sequence Diagram. 

Name: UserRegistration 

Input: Username, password, and live streaming video for the face. 
Output: A confirmation for registration and a notification message sent to the 
system admin. 

if (username==””) then 
   return 'empty username' 
else if (check_exist(username)) then 
   return 'username already exist' 
else if (password==””) then 
   return 'empty password' 
else if (password!=””) then 
   hash(password) 
   liveness=check_liveness() 
   if (liveness==false) then 
      /*take an image for the current user*/ 
      face_img=capture_img(); 
      /*send the captured image in a spoofing attack notification  
      message to the system admin*/ 
      notify(“spoofing_attack”,face_img) 
   else 
      /*extract the facial features*/ 
      img_vector=extract_features() 
      /*create an account with the username, password, and image  
      vector data*/ 
      create_account(username,pw,img_vector) 
      ask the current user for a picture 
      /*take an image for the user*/ 
      face_img=capture_img(); 
      /*send the captured image in an approval and activation  
      request notification message to the system admin*/ 
      notify(“approval_request”,username,face_img) 
      return a registration confirmation 
return false 

Fig. 4.  User Registration Algorithm. 

verify_password(pw, retrieved_pw) 

[pw!=retrieved_pw] 

capture_image() 

notify(“wrong_pw”, username, face_img) 

check_liveness() 

 alt 

 alt 

[liveness==false] 

capture_image() 

notify(“spoofing_attack”, username, face_img) 

registered_face=get_features(username) 

face=extract_features() 

verify_match(face, registered_face) 

 alt 

[face!=registered_face] 

capture_image() 

notify(“unrecognized_face”, username, face_img) 

Fig. 5.  User Log-in Sequence Diagram. 

During  the  user  log-in  operation,  the  system  sends  three 
notification messages to the system admin. The first message is 
sent  when  the  user  tries  to  access  the  system  by  entering  an 
incorrect password. The second message is sent when there is a 
spoofing  attack  attempt  after  checking  the  face  liveness.  The 
third message is sent when the system detects an unrecognized 
face,  as  it  is  unregistered  in  the  system  database.  Fig.  5 
represents  the  sequence  diagrams  for  user  log-in  operation, 
including the sent notifications. Fig. 6 represents the algorithm 
of user log-in operations. 

B.  Admin Manager 

This  module  is  another  security  component  used  by  the 
system  admin  for  managing  the  user‟s  access  to  the  system. 
The specified permissions (i.e. the access type) for controlling 
the  house‟s  appliances  can  be  read,  write,  or  both.  The  read 
permission  allows  for  getting  the  sensor  data,  while  the  write 
permission  allows  the  user  to  give  a  request  for  an  actuator. 
The  newly  registered  user  cannot  use  the  smart  home  system 

www.ijacsa.thesai.org 

264 | P a g e  

 
 
 
 
 
 
 
 
 
 
(IJACSA) International Journal of Advanced Computer Science and Applications, 
Vol. 11, No. 2, 2020 

before  being  granting  permissions  and  activating  his  or  her 
account.  The  system  admin  will  need  at  least  three  functions 
provided  by  this  component:  one  for  retrieving  pending 
accounts,  another  for  retrieving  user  approval,  and  one  for 
setting user approval. 

C.  Voice Recognition 

The voice recognition feature is optional, as the user might 
prefer to deal with the system by text. In this web service, there 
are two included components, as shown in Fig. 7. 

1)  Speech  recognition:  This  component  is  provides  a 
function  responsible  for  converting  the  user‟s  speech  into 
typed text. 

2)  Speech  synthesis: This  component  provides  a  function 

responsible for reading the textual system respond aloud. 

Name: UserLogin 

Input: Username, password, and live streaming video for the face. 
Output: Log-in confirmation  

if (username==””) then 
   return 'empty username' 
else if (!check_exist(username)) then 
   return 'username does not exist' 
else if (password==””) then 
   return 'empty password' 
else if (password!=””) then 
   hash(password) 
   /*get the registered password for the given username*/ 
   retrieved_password=get_password(username) 
   /*verify the password match*/ 
   if (password!=retrieved_password) then 
      /*take an image for the current user*/ 
      capture_img() 
      /*send the captured image in a wrong password's notification  
      message to the system admin*/ 
      notify(“wrong_password”,username,face_img) 
   else 
      /*check the face liveness*/ 
      liveness=check_liveness() 
      if (liveness==false) then 
         /*take an image for the current user*/ 
         face_img=capture_img() 
         /*send the captured image in a spoofing attack  
         notification message to the system admin*/ 
         notify(“spoofing_attack”,username,face_img) 
      else 
         /*get the registered face for the username*/ 
         retrieved_img_vector=get_features(username) 
         /*extract the facial features of the current user*/ 
         img_vector=extract_features() 
         /*verify the match between the current face and  
         registered face*/ 
         matchness=verify_match(img_vector,retrieved_img_vector) 
         if (matchness==false) 
            /*take an image for the current user*/ 
            face_img=capture_img() 
            /*send the captured image in an unrecognized face  
            notification message to the system admin*/ 
            notify(“unrecognized_face”,username,face_img) 
            return false 
         else 
            return true /*log-in confirmation*/ 
return false 

Fig. 6.  User Log-in Algorithm. 

convert_voice_to_text 

convert_text_to_speech 

SpeechRecognition 

SpeechSynthesis 

Fig. 7. 

Internal Components of VoiceRecognition Web Service. 

D.  Chatbot 

There are two components included within the chatbot web 

service that are intents and entities as shown in Fig. 8. 

1)  Intent  classification:  This  component  can  act  as  a 
preprocessing  step  by  providing  a  function  that  converts  the 
input text into its canonical phrase. 

2)  Entity recognition: Understanding the user request and 
getting  the  chatbot  response  is  accomplished  by  the  end  of 
executing  this  component.  An  example  [25]  of  trained  user 
requests  and  system  responses  related  to  temperature  are 
shown in Table I. 

understand 

IntentClassification 

EntityRecognition 

Fig. 8. 

Internal Components of Chatbot Web Service. 

TABLE. I. 

TEMPERATURE REQUESTS AND RESPONSES 

User Requests 

System Responses 

I want the temperature of 
lounge. 

What is the temperature of 
living room? 

The temperature of $Room1 is 
$temperature$%. 

Give me the temperature of 
sitting room. 

What is the temperature of all 
rooms? 

As temperature differs from one room to 
the other, you need to specify which room. 

E.  Things Manager 

This  web  service  is  responsible  for passing  the  instruction 
to  the  MQTT  broker,  which  monitors  and  controls  the  smart 
home appliances. 

V.  DISCUSSION 

A  summary  of  the  supported  smart  home  system  features 
by this research compared to the smart home systems of related 
work are presented in Table II. 

The  proposed  system  architecture  has  collected  some 
features  from  different  smart  home  systems  to  enhance  its 
functionality, in addition to other added features, namely multi-
factor  authentication,  face  recognition,  liveness  detection,  and 
access  notification.  However, 
that  were 
considered  advantages  on  other  smart  systems  have  not  been 

features 

three 

www.ijacsa.thesai.org 

265 | P a g e  

 
 
(IJACSA) International Journal of Advanced Computer Science and Applications, 
Vol. 11, No. 2, 2020 

it 

solves 

Internet,  which  also 

the 
issues,  and 

included  in  this  proposal,  so  they  were  not  added  to  Table  I. 
The first feature is the multi-tier architecture suggested by [25] 
as  it  is  not  practical  to  increase  the  number  of  the  system 
servers when all the web services are developed in-house, and 
as  one  of  the  characteristics  of  the  smart  home  system,  as 
mentioned in the introduction section, is that data management 
occurs through a local server, thus the use of third-party online 
services provided through an API was avoided in the suggested 
architecture.  The  second  feature  is  the  hierarchal  mobile 
software  agent  distributed  system  supported  by  [5],  [31],  and 
[32],  because  creating  an  agent  for  each  sensor  or  actuator 
device  is  not  practical  economically,  takes  up  considerable 
space  in  the  home,  and  presents  a  low  level  of  security,  as  a 
mobile  agent  third  party  application  can  be  untrusted  and  it 
may  harm  the  system.  Moreover,  there  is  a  possibility  for 
increased  network  traffic  when  there  are  a  large  number  of 
mobile  software  agents  concurrently  interacting  with  the 
system.  Therefore,  we  used  web  service  technology  for  the 
suggested  smart  home  systems.  Web  service  technology  has 
many advantages for this application. For instance, it supports 
remote  procedure  calls  so  that  the  system  can  be  controlled 
remotely  over 
the 
interoperability 
is  scalable  and  easily 
maintainable.  The  third  unsupported  feature  present  in  this 
research is in [23], which is hosting the smart home system on 
a cloud. The cloud is not suitable for any sensitive data due to 
its  many  security  vulnerabilities,  such  as  loss  of  data,  data 
breaches, 
replacement,  or 
modifications  (such  as  editing  the  face  template  by  an 
employee  working  in  the  cloud  company  or by  a  hacker)  and 
malware. Additional security precautions taken by this system 
include multi-factor authentication, checking for face liveness, 
and  alerting  the  system  admin  with  a  picture  for  the  current 
user  when  there  is  any  suspicious  registration  or  log-in 
activities.  Therefore,  this  work  is  expected  to  increase  the 
security  level  compared  to  the  current  smart  home  systems. 
Moreover,  third  party  APIs  working  on  the  internet  were 
avoided  by  the  suggested  software  architecture,  as  they  may 
threaten  the  information  security  and  privacy,  and  this  threat 
increases  if  the  source  is  untrusted.  Additionally,  creating  in-
house  web  services  for  the  main  services  in  the  system 
facilitates  the  future  functional  enhancement  process  through 
the  module‟s  replacement  or  extendibility.  However,  two 
explained concepts: speaker identification and verification, and 
the 
natural 
background  section  but 
the 
components  of  the  proposed  solution  because  the  speaker 
identification  and  verification  require  using  the  registered 
user‟s  voice,  but  using  the  voice  is  an  optional  feature  in  the 
smart home system as it might be more convenient for the user 
to  use  text.  On 
the  other  hand,  the  natural  language 
understanding  was  not  included,  as  it  is  part  of  the  chatbot 
solution, and there is no need for redundancy. 

in 
they  were  excluded  from 

language  understanding  were 

information 

included 

account 

theft, 

It  is  worth  mentioning  that  if  security  is  not  the  main 
concern  in  some  smart  home  systems  as  when  the  system 
admin do  not  connect  sensitive  sensors  and  actuators,  such as 
smart door lock or camera, to the system, and the multi-factor 
authentication  can  be 
recognition 
authentication to make accessing the system easier, especially 
for  older  people  or  people  with  disabilities.  It  can  also  be 

replaced  with 

face 

switched  to  a  password  entry  mode  if  the  system  cannot 
recognize  the  user;  for  example,  when  it  is  dark  or  when  the 
user is wearing a mask. 

TABLE. II. 

SMART HOME SYSTEMS COMPARISON 

            System 

Feature 
Multi-factor 
authentication 

Face 
recognition 

Liveness 
detection 

Voice 
recognition 

Chatbot 

Permission 
control 

Access 
notification 

This 
paper 

[5] 

[31] 

[32] 

[23] 

[25] 

✓ 

✓ 

✓ 

✓ 

✓ 

✓ 

✓ 

✓ 

✓ 

✓ 

VI.  CONCLUSION 

The paper presents a software architecture for managing the 
smart home in the IoT context. The proposed solution provides 
the  required  modules  for  managing  sensors  and  actuators 
remotely.  Moreover,  the  most  significant  contribution  of  this 
work  on  the  improvement  of  smart  home  security  is  that  it 
proposes a log-in module for managing the operations of user 
registration.  This  log-in  is  based  on  multi-authentication 
factors,  and  is  supported  by  a  suggested  notification  module 
that alerts the system admin for any suspicious registration or 
log-in attempts to the smart home system. This log-in module 
the  proposed  smart  home  software 
is 
architecture  with  a  detailed  explanation  for  its  functionality. 
The  face  recognition  and  liveness  modules  are also  integrated 
into  the  smart  home  system  through  the  log-in  module  as  a 
preceding  suggested  method  in  authorizing  and  authenticating 
the users into the smart home system. 

integrated 

into 

For  future  work,  we  suggest  the  following:  extending  the 
system  functionality  by  adding  a  scheduled  web  service  for 
appliances  to  the  system  architecture,  implementing  the 
proposed  solution  as  the  integrations  in  this  work  are 
theoretical, highlighting the limitations of chatbots that support 
the Arabic language, improving the current implementations of 
Arabic  chatbots,  and  integrating  an  Arabic  chatbot  to  the  IoT 
smart home system. The Arabic language is the first language 
of  more  than  340  million  speakers  [36],  yet  there  are  no 
presented  solutions  in  literature  for  a  smart  home  that  is 
controlled using the Arabic language. 

REFERENCES 
[1]  Sultan, M., & Ahmed, K. N. SLASH: Self-learning and adaptive smart 
home  framework  by  integrating  IoT  with  big  data  analytics.  In  2017 
Computing Conference (pp. 530-538). IEEE. July, 2017. 

[2]  Patgiri, R., & Nayak, S. Data of Things: The Best  Things Since Sliced 
Bread. In 2018 International Conference on Communication and Signal 
Processing (ICCSP) (pp. 0341-0348). IEEE. April, 2018. 

[3]  Dzogovic,  B.,  Santos,  B.,  Noll,  J.,  Feng,  B.,  &  van  Do,  T.  Enabling 
smart  home  with  5G  network  slicing.  In  2019  IEEE  4th  International 

www.ijacsa.thesai.org 

266 | P a g e  

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
(IJACSA) International Journal of Advanced Computer Science and Applications, 
Vol. 11, No. 2, 2020 

Conference  on  Computer  and  Communication  Systems  (ICCCS)  (pp. 
543-548). IEEE. February, 2019. 

[4]  Gunge,  V.  S.,  &  Yalagi,  P.  S.  Smart  home  automation:  a  literature 
review.  International  Journal  of  Computer  Applications,  975,  8887. 
2016. 

[5]  Elkhodr,  M.,  Shahrestani,  S.,  &  Cheung,  H.  Managing  the  internet  of 
things.  In  2015  IEEE  International  Conference  on  Data  Science  and 
Data Intensive Systems (pp. 579-585). IEEE. December, 2015. 

[6]  Dasgupta,  D.,  Roy,  A.,  &  Nag,  A.  Multi-factor  authentication.  In 

Advances in User Authentication (pp. 185-233). Springer, Cham. 2017. 

[7]  Vaithyasubramanian, A. C. D. S. S., Christy, A., & Saravanan, D. Two 
factor  authentications  for  secured  log-in  in  support  of  effective 
information preservation and network security. India: ARPN Journal of 
Engineering and Applied Sciences, 10(5). 2015. 

[8]  Sriramya,  P.,  &  Karthika, R.  A.  Providing  password  security  by  salted 
password hashing using bcrypt algorithm. ARPN journal of engineering 
and applied sciences, 10(13), 5551-5556. 2015. 

[9]  Dhivya, B., Thenmozhi, S., Parameswari, V., Archana, G., Kiruthika, V. 
Implementation  of  Security  in  Log-in  Page  Using  Salt  and  Pepper 
Algorithm. 2019. 

[10]  Simon, b. k., & Nair, a. p. Securing the Transfer of Confidential Data in 
Fiscal  Devices  using  Blockchain.  International  Research  Journal  of 
Engineering and Technology. 6(5). 2019. 

[11]  Sain,  M.,  &  Kant,  C.  Liveness  Detection  for  Face  Recognition  in 
Biometrics: A Review. IOSR Journal of Computer Engineering, Special 
Issue-AETM'16, 31-36. 2016. 

[12]  Arora,  G.,  Tiwari,  K.,  &  Gupta,  P.  Liveness  and  Threat  Aware  Selfie 
Face  Recognition.  In  Selfie  Biometrics  (pp. 197-210).  Springer,  Cham. 
2019. 

[13]  Huang,  F.  L.,  Liao,  Z.  Z.,  Wang,  T.  H.,  Chen,  Q.  M.,  Wu,  T.  H.,  & 
Chang,  C.  H.  Intelligent  and  Disaster  Prevention  Hard  Hat  Based  on 
AIOT  and  Speeches  Recognition.  In  2019  International  Conference  on 
Machine  Learning  and  Cybernetics  (ICMLC)  (pp.  1-5).  IEEE.  July, 
2019. 

[14]  Zhang, Z., Aziz, E. S., Esche, S., & Chassapis, C. A virtual proctor with 
biometric  authentication  for  facilitating  distance  education.  In  Online 
Engineering & Internet of Things (pp. 110-124). Springer, Cham. 2018. 
[15]  Monteiro, C. E., & Trevelin, L. C. Studies of computing techniques for 
performing  face  recognition  with  a  focus  in  the  crowds:  A  distributed 
architecture  based  on  cloud  computing.  In  2015  IEEE/ACS  12th 
International  Conference  of  Computer  Systems  and  Applications 
(AICCSA) (pp. 1-5). IEEE. November, 2015. 

[16]  Nanni,  L.,  Lumini,  A.,  Dominio,  F.,  &  Zanuttigh,  P.  Effective  and 
precise  face  detection  based  on  color  and  depth  data.  Applied 
Computing and Informatics, 10(1-2), 1-13. 2014. 

[17]  Ni, W., Vu, N. S., & Caplier, A. Unsupervised joint face alignment with 
gradient  correlation  coefficient.  Pattern  Analysis  and  Applications, 
19(2), 447-462. 2016. 

[18]  Zhao, X., & Zhang, S. A review on facial expression recognition: feature 
extraction  and  classification.  IETE  Technical  Review,  33(5),  505-517. 
2016. 

[19]  Mehta,  A.,  Dreyer,  K.  J.,  Schweitzer,  A.,  Couris,  J.,  &  Rosenthal,  D. 
Voice recognition—an emerging necessity within radiology: experiences 
of  the  Massachusetts  General  Hospital.  Journal  of  Digital  Imaging, 
11(2), 20-23. 1998. 

[20]  Sunardi,  A.,  Mahardika,  R.,  Alfarisie,  M.,  Retnoasih,  S.  S.,  Sunarko, 
Suherkiman, H., & Mustofa, K. Study of personnel access system using 

voice and gait recognition in experimental power reactor (RDE). In AIP 
Conference Proceedings (Vol. 2180, No. 1, p. 020047). AIP Publishing 
LLC. December, 2019. 

[21]  Shanmugam,  K.,  &  Vanathi,  B.  Hardcopy  Text  Recognition  and 
Vocalization for Visually Impaired and Illiterates in Bilingual Language. 
In  Computational  Intelligence  and  Sustainable  Systems  (pp.  151-163). 
Springer, Cham. 2019. 

[22]  Gope,  R.,  Pasricha,  Y.,  &  Ekka,  A.  From  Concept  to  Reality: 
Intervention  of  Information  Technology  in  Healthcare.  Humanizing 
work and work Environment (HWWE 2016): English, 313. 2018. 
[23]  Kar,  R.,  &  Haldar,  R.  Applying  chatbots  to  the  internet  of  things: 
preprint 

architectural 

elements. 

arXiv 

and 

Opportunities 
arXiv:1611.03799. 2016. 

[24]  Keyner,  S.,  Savenkov,  V.,  &  Vakulenko,  S.  Open  data  chatbot.  In 
European  Semantic  Web  Conference  (pp.  111-115).  Springer,  Cham. 
June, 2019. 

[25]  Alexakis,  G.,  Panagiotakis,  S.,  Fragkakis,  A.,  Markakis,  E.,  & 
Vassilakis,  K.  Control  of  Smart  Home  Operations  Using  Natural 
Language  Processing,  Voice  Recognition  and  IoT  Technologies  in  a 
Multi-Tier Architecture. Designs, 3(3), 32. 2019. 

[26]  Soni,  D.,  &  Makwana,  A.  A  survey  on  mqtt:  a  protocol  of  internet  of 
things  (iot).  In  International  Conference  on  Telecommunication,  Power 
Analysis and Computing Techniques (ICTPACT-2017). April, 2017. 
[27]  Tantitharanukul,  N.,  Osathanunkul, K.,  Hantrakul,  K.,  Pramokchon,  P., 
& Khoenkaw, P. Mqtt-topic naming criteria of open data for smart cities. 
In  2016  International  Computer  Science  and  Engineering  Conference 
(ICSEC) (pp. 1-6). IEEE. December, 2016. 

[28]  Ray, P. P. A survey on Internet of Things architectures. Journal of King 
Saud  University-Computer  and  Information  Sciences,  30(3),  291-319. 
2018. 

[29]  Kang, D. H., Park, M. S., Kim, H. S., Kim, D. Y., Kim, S. H., Son, H. J., 
& Lee, S. G. Room temperature control and fire alarm/suppression IoT 
service  using  MQTT  on  AWS.  In  2017  International  Conference  on 
Platform  Technology  and  Service  (PlatCon)  (pp. 1-5).  IEEE.  February, 
2017. 

[30]  Khan,  M.,  Din,  S.,  Jabbar,  S.,  Gohar,  M.,  Ghayvat,  H.,  & 
Mukhopadhyay, S. C. Context-aware low power intelligent SmartHome 
based on the Internet of things. Computers & Electrical Engineering, 52, 
208-222. 2016. 

[31]  Elkhodr,  M.,  Shahrestani,  S.,  &  Cheung,  H.  A  smart  home  application 
based  on  the  Internet  of  Things  management  platform.  In  2015  IEEE 
International  Conference  on  Data  Science  and  Data  Intensive  Systems 
(pp. 491-496). IEEE. December, 2015. 

[32]  Elkhodr,  M.,  Shahrestani,  S.,  &  Cheung,  H.  A  middleware  for  the 

internet of things. arXiv preprint arXiv:1604.04823. 2016. 

[33]  Kataria,  B.  XML  Enabling  Homogeneous  and  Platform  Independent 
Data  Exchange  in  Agricultural  Information  Systems.  International 
Journal of Scientific Research in Science. 1(2). 2015. 

[34]  Maw,  H.  M.,  Thu,  S.  M.,  &  Mon,  M.  T.  Face  Recognition  based  on 
Illumination  Invariant  Techniques  Model.  In  2019  International 
Conference  on  Advanced  Information  Technologies  (ICAIT)  (pp.  120-
125). IEEE. November, 2019. 

[35]  Hossain,  M.  S.,  &  Muhammad,  G.  (2017).  An  emotion  recognition 

system for mobile applications. IEEE Access, 5, 2281-2287. 

[36]  Droua-Hamdani,  G.,  Selouani,  S.  A.,  Alotaibi,  Y.  A.,  &  Boudraa,  M. 
Speech Rhythm in  L1  and  L2  Arabic.  Arabian  Journal  for  Science  and 
Engineering, 41(3), 1173-1181. 2016. 

www.ijacsa.thesai.org 

267 | P a g e  

 
