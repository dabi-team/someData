Optimized Random Forest Model for Botnet
Detection Based on DNS Queries

Abdallah Moubayed, MohammadNoor Injadat, and Abdallah Shami
Electrical and Computer Engineering Department, Western University, London, Ontario, Canada
emails: {amoubaye, minjadat, abdallah.shami}@uwo.ca

0
2
0
2

c
e
D
6
1

]

R
C
.
s
c
[

1
v
6
2
3
1
1
.
2
1
0
2
:
v
i
X
r
a

Abstract—The Domain Name System (DNS) protocol plays a
major role in today’s Internet as it translates between website
names and corresponding IP addresses. However, due to the
lack of processes for data integrity and origin authentication, the
DNS protocol has several security vulnerabilities. This often leads
to a variety of cyber-attacks, including botnet network attacks.
One promising solution to detect DNS-based botnet attacks is
adopting machine learning (ML) based solutions. To that end,
this paper proposes a novel optimized ML-based framework to
detect botnets based on their corresponding DNS queries. More
speciﬁcally, the framework consists of using information gain as a
feature selection method and genetic algorithm (GA) as a hyper-
parameter optimization model to tune the parameters of a random
forest (RF) classiﬁer. The proposed framework is evaluated using
a state-of-the-art TI-2016 DNS dataset. Experimental results show
that the proposed optimized framework reduced the feature set
size by up to 60%. Moreover, it achieved a high detection accuracy,
precision, recall, and F-score compared to the default classiﬁer.
This highlights the effectiveness and robustness of the proposed
framework in detecting botnet attacks.

Keywords—DNS, Botnet Detection, Information Gain Feature

Selection, Genetic Algorithm, Optimized Random Forest

I. INTRODUCTION

The Domain Name System (DNS) protocol plays a major
role in today’s Internet as it translates between website names
and corresponding IP addresses [1]. Additionally, it is also used
to locate servers and mailing hosts which directly impacts the
data exchange across the Internet [1].

However, due to the lack of processes for data integrity and
origin authentication, the DNS protocol is prone to various
security threats and potential attacks [2,3]. One recent example
is the distributed denial of service (DDoS) attack on Dyn in
October 2016 [4,5]. As a result of this attack, a large portion
of Internet services in America went down [4,5]. One class
of attacks that relies on the naivety of the DNS protocol is
the botnet attack class. This class of attacks is particularly
dangerous as it can lead to various undesired consequences
such as network outages, user information leakage, and data
privacy issues [6,7]. Accordingly, researchers have proposed
multiple different mechanisms to mitigate and eliminate these
attacks [8,9]. One such mechanism is the DNS over HTTPS
(DoH) protocol. This protocol encrypts DNS queries and sends
them in cover tunnels to enhance privacy and combat man-in-
the-middle attacks [10]. Despite its promise, this protocol still
cannot fully protect DNS queries due to attackers initiating
malicious tunnels themselves. Therefore, further effective and
efﬁcient detection mechanisms are needed on top to ensure that
systems are properly protected.

One promising solution to detect DNS-based botnet attacks
is adopting machine learning (ML) based solutions. ML allows

systems to “learn” without being told what to do, making them
dynamic and able to adapt new inputs [11]. Furthermore, given
that ML classiﬁcation techniques have proved to be effective
and efﬁcient in a variety of applications including network
security and intrusion detection frameworks [12]–[18], they are
a prime candidate to be deployed for effective detection of
botnets. Additionally, it is crucial to optimize these ML-based
detection models rather than use default versions to ensure that
the solution is performing to its maximum capacity [19]–[21].
To that end, this paper proposes the use of optimized ML
models to detect botnet attacks based on their DNS queries.
More speciﬁcally, the proposed framework consists of using
information gain as a feature selection method to reduce the
computational complexity of the resulting model (by reducing
the feature space) and genetic algorithm (GA) as a hyper-
parameter optimization model to tune the parameters of a ran-
dom forest (RF) classiﬁer. Note that the choice of methods was
motivated by the promising performance they have exhibited in
previous ML-based network security frameworks.

The main contributions of this work are:
• Proposing a novel optimized ML-based framework for
DNS-based botnet detection with reduced computational
complexity and enhanced detection performance.

• Evaluating the performance of the proposed model using

state-of-the-art TI-2016 DNS dataset.

To the best of our knowledge, no previous work focusing on
DNS-based botnet detection using the aforementioned dataset
has proposed such an optimized and computationally efﬁcient
framework.

The remainder of this paper is organized as follows: Section
II provides a brief overview of the previous works from the
literature. Section III presents the proposed Optimized botnet
detection framework and determines its complexity. Section
IV provides a description of the dataset considered. Section
V describes the experiment setup and discusses the obtained
results. Finally, Section VI concludes the paper.

II. RELATED WORK

As mentioned earlier, ML has been heavily proposed as
a promising and effective solution in network security and
thus has garnered signiﬁcant attention [16][17][18][22]. For
example, Injadat et al. proposed the use of different feature
selection and hyper-parameter optimization models to reduce
the complexity and optimize the parameters of different ML
classiﬁers for network intrusion detection with their experi-
mental results showing that the proposed models achieved high
detection accuracy and low false alarm rate [16,17]. Similarly,

 
 
 
 
 
 
Salo et al. proposed a clustering-enabled classiﬁcation model
using ensemble feature selection for intrusion detection [18].
Experimental results showed that the proposed framework was
successful in accurately detecting unseen attack patterns [18].
On the other hand, Li et al. proposed the use tree-based ML
models to detect both intra-vehicle and inter-vehicle intrusions
in autonomous and connected vehicles with their proposed
model having high detection accuracy and a low computational
complexity [22].

Within the context of DNS, multiple researchers have pro-
posed the use of ML models for malicious DNS queries
detection [23]–[28]. For example, Moubayed et al. proposed
the use of exploratory data analytics, ensemble feature selection
models, and ensemble classiﬁcation models to understand the
characteristics of different DNS typo-squatting features and
accurately detect malicious URLs respectively [23,24]. On the
other hand, Sivakorn et al. proposed using deep neural network
models to detect malicious DNS queries [25].

In the context of botnet detection, McDermott et al. proposed
the use of a Bidirectional Long Short Term Memory based
Recurrent Neural Network (BLSTM-RNN) to detect botnet
activity within IoT devices and networks [26]. Experimen-
tal results demonstrated that the proposed model achieved a
detection accuracy ranging between 92%-99%. On the other
hand, Pektas et al. considered three different ML algorithms,
namely RF, logistic regression (LR), and support vector ma-
chines (SVM) to detect botnet attacks during network ﬂow
analysis [27]. Experimental results illustrated that the proposed
model achieved high classiﬁcation accuracy for both botnet and
normal trafﬁc instances. Similarly, Chen et al. also investigated
the used of ML models to detect botnets [28]. The authors
proposed a conversation-based network trafﬁc analysis method
to identify malicious botnet trafﬁc. Experimental results showed
that the proposed model resulted in a 13.2% decrease in the
false positive rate of botnet trafﬁc detection. Furthermore, it
was shown that the RF algorithm had a high detection accuracy
(93.6%) and a low false positive rate (0.3%).

These works further illustrate the huge potential and effec-
tiveness of ML-based solutions for botnet detection. Nonethe-
less, most of the works focusing on ML-based malicious
activity detection for DNS protocol use default parameters for
the classiﬁcation models. Thus, it is worth exploring optimized
ML models to improve the effectiveness of such frameworks.

III. PROPOSED APPROACH

A. Proposed Approach Description

This paper proposes the use of information gain feature selec-
tion, GA hyper-parameter optimization, and RF classiﬁcation
model as part of the optimized ML-based framework for botnet
detection. The proposed approach, as shown in Fig. 1, can be
divided into three components:

1) Data pre-processing: This stage is composed of two steps.
The ﬁrst is applying feature normalization using Z-score
method. This is done so that all features considered have a
similar dynamic range rather than one feature dominating
due to its large dynamic range [17]. The second step
is applying Synthetic Minority Oversampling TEchnique
(SMOTE) to tackle the class imbalance problem often

Fig. 1. Proposed Optimized RF-based Botnet Detection Framework

present in network security datasets by oversampling the
minority class [29]. This can help improve the perfor-
mance of the classiﬁcation model and reduce the training
sample size due to having enough samples to understand
the behavior of each class [30].

2) Feature selection: The goal at this stage is to reduce the
number of features inputted to the ML model to help
reduce its computational complexity while still maintain-
ing or even improving its detection performance [31]. To
achieve this, information gain method is used to select the
relevant features by ranking them according to the amount
of information (in bits) they provide about the class [32].
3) Hyper-parameter Optimization: This stage focuses on op-
timizing the hyper-parameters of the ML classiﬁcation
model to improve its performance. As such, this work
proposes the use of GA method to optimize the hyper-
parameters of the RF model. GA method is a well-
known meta-heuristic algorithm used to determine high
quality solutions to combinatorial optimization problems
using biologically-inspired operations including mutation,
crossover, and selection [33]. These operations enable the
efﬁcient search for a suitable solution within the search
space [33]. Therefore, the GA method is proposed due to
its near-optimal performance and low complexity [33].

B. Complexity of Proposed Approach

The complexity of the proposed framework is dictated by
the complexity of each stage. Assume that the dataset consists
of M samples and N features. The complexity of the data pre-
processing stage is governed by the complexity of the Z-score
normalization method and the SMOTE method. The Z-score
method has complexity of O(N ) given that it normalizes all the
features using the respective means and standard deviation. In
contrast, the SMOTE method has a complexity of O(M 2
minN )
where Mmin is the number of minority class instances [34].

The complexity of the feature selection stage is that of the
information gain method. This method has a complexity of
O(M N ) since this method calculates the class-feature joint
probabilities to determine the relevant features [35]. Thirdly, the
complexity of the GA method is O(NpopNparm) where Npop
is the population size (i.e. number of chromosomes initially
assumed) and Nparm is the number of hyper-parameters to be
optimized [36]. Finally, the complexity of the optimized RF
√
classiﬁcation model is O(M 2
Nredt) where t is the number
of trees within the RF classiﬁer. However, the training time
can be signiﬁcantly reduced to approximately O( M 2√
Nredt
threads )
where threads is the maximum number of participating threads
since this classiﬁer allows for multi-threading [22]. Therefore,
the complexity of the proposed framework is O( M 2√
Nredt
threads ).
This highlights the computational efﬁciency of the proposed
framework as it uses a reduced feature set and multiple threads.

IV. DATASET DESCRIPTION

The dataset considered in this work is the TI-2016 DNS
dataset [37]. To generate the dataset, the authors collected
a real-world DNS trafﬁc from more than 4000 active users
during peak hours across 10 random days between April-
May 2016. From the collected network trafﬁc, a series of 25
features were extracted including request-based, domain-based,
response-based, IP-based, and mapping features in addition to
1 class feature. Accordingly, the resulting dataset consists of
601,092 benign and 7,644 malicious instances, meaning that
it is signiﬁcantly imbalanced. Fig. 2 plots the ﬁrst and second
principal components of the dataset, illustrating its non-linear
nature and further emphasizing the class imbalance problem.

Fig. 2. First and Second Principal Components of TI-2016 DNS Dataset

V. EXPERIMENT RESULTS & DISCUSSION

The experiment results are divided into two parts, namely the
feature selection and the optimized classiﬁcation model results.
1) Feature Selection: Starting with the feature selection
results, Fig. 3 shows the mutual
information score of the
different features. Based on these score, a group of 10 features
are chosen, namely: Host name and timestamp, number of DNS
requests, number of distinct DNS requests, highest number
of requests (single domain), average number of requests per
minute, highest number of requests per minute, number of Type
A DNS requests, number of distinct top level domains queried,
number of distinct second level domains queried, and number of

Fig. 3. Mutual Information Score of Top 10 Features of TI-2016 DNS Dataset

TABLE I
PERFORMANCE EVALUATION OF CLASSIFIERS

Algorithm

Default RF
Optimized
Framework

Accuracy
(%)
98.85
94.71

RF-based

Precision

Recall

F-score

0.92
0.95

0.55
0.95

0.59
0.95

distinct DNS servers queried. This represents a 60% reduction
in the feature set size.

2) Optimized RF Classiﬁcation Model Performance: To
evaluate the impact of the proposed optimized RF-based frame-
work for botnet detection, its performance is compared to a
default RF classiﬁer that was applied to the original complete
dataset without any feature selection or instance oversampling.
As shown in Table I, the proposed optimized RF-based frame-
work outperforms the default RF classiﬁer. Although the default
RF classiﬁer achieved a higher accuracy of 98.85%, it had
lower precision, recall, and F-score values. In particular, the
default RF classiﬁer had a precision, recall, and F-score of
0.92, 0.55, and 0.59 respectively for the malicious target class.
This means that the default RF classiﬁer is missing many of
the actual malicious hosts, thereby being less effective for the
problem at hand. This is attributed to the imbalanced nature of
the original dataset under consideration which does not favor
the development of a robust learner. In contrast, the proposed
optimized RF-based framework still maintained a high botnet
detection accuracy of 94.71%. Moreover, it achieved a value
of 0.95 for precision, recall, and F-score. The high precision
and recall values show that the proposed optimized RF-based
framework is robust and effective in detecting malicious hosts
by being both sensitive and speciﬁc to malicious behavior.
This emphasizes the effectiveness of the proposed framework
in detecting botnet attacks from malicious hosts.

VI. CONCLUSION & FUTURE WORKS

The Domain Name System (DNS) protocol plays a major
role in today’s Internet as it translates between website names
and corresponding IP addresses. However, it is prone to various

security threats and potential attacks due to the lack of data in-
tegrity and origin authentication processes. One class of attacks
that relies on the naivety of the DNS protocol is the botnet
attack class. Researchers have proposed different mechanisms
to mitigate and eliminate these attacks. Despite the promising
mechanisms previously proposed, further effective and efﬁcient
detection mechanisms are needed on top of existing ones to
ensure that systems are properly protected.

To that end, this paper proposed an optimized RF-based
framework to detect botnet attacks based on their DNS queries.
More speciﬁcally, the proposed framework used information
gain as a feature selection method and genetic algorithm
(GA) as a hyper-parameter optimization model to tune the
parameters of the RF classiﬁer. The proposed optimized RF-
based framework reduced the feature set size by up to 60%.
Moreover, it achieved a high detection accuracy, precision,
recall, and F-score values of 94.71%, 0.95, 0.95, and 0.95
respectively. This emphasized the effectiveness of the proposed
framework in detecting botnet attacks from malicious hosts.

To extend this work, multiple research directions exist. One
direction is extending the framework to consider multiple at-
tacks rather than merely classifying the data in a binary manner.
Another potential direction worth exploring is investigating
hybrid ML models for online botnet detection frameworks. A
third potential research direction is considering non-numerical
features as part of any botnet detection models since such
features may contain valuable information.

REFERENCES

[1] P. Mockapetris and K. J. Dunlap, Development of the Domain Name

System. ACM, 1988, vol. 18, no. 4.

[2] A. Lioy, F. Maino, M. Marian, and D. Mazzocchi, “DNS security,” in

TERENA Networking Conference, 2000.

[3] S. Ariyapperuma and C. J. Mitchell, “Security vulnerabilities in DNS and
DNSSEC,” in Second International Conference on Availability, Reliability
and Security (ARES’07), Apr. 2007, pp. 335–342.

[4] C. Liu, “Distributed-Denial-Of-Service Attacks And DNS,” Nov. 2017.
[Online]. Available: http://www.forbes.com/sites/forbestechcouncil/2017/
11/15/distributed-denial-of-service-attacks-and-dns/#67ccd2de6076
[5] N. Woolf, “DDoS Attack That Disrupted Internet Was Largest of its Kind
in History, Experts Say,” Oct. 2016. [Online]. Available: http://www.
theguardian.com/technology/2016/oct/26/ddos-attack-dyn-mirai-botnet
[6] Z. Abaid, D. Sarkar, M. A. Kaafar, and S. Jha, “The early bird gets the
botnet: A markov chain based early warning system for botnet attacks,” in
2016 IEEE 41st Conference on Local Computer Networks (LCN), 2016,
pp. 61–68.

[7] M. Singh, M. Singh, and S. Kaur, “Detecting bot-infected machines using
dns ﬁngerprinting,” Digital Investigation, vol. 28, pp. 14 – 33, 2019.
[8] A. Moubayed, A. Refaey, and A. Shami, “Software-deﬁned perimeter
(sdp): State of the art secure solution for modern networks,” IEEE
Network, vol. 33, no. 5, pp. 226–233, Sep.- Oct. 2019.

[9] P. Kumar, A. Moubayed, A. Refaey, A. Shami, and J. Koilpillai, “Perfor-
mance analysis of sdp for secure internal enterprises,” in 2019 IEEE
Wireless Communications and Networking Conference (WCNC), Apr.
2019, pp. 1–6.

[10] T. B¨ottger, F. Cuadrado, G. Antichi, E. L. Fernandes, G. Tyson, I. Castro,
and S. Uhlig, “An empirical study of the cost of dns-over-https,” in
Proceedings of the Internet Measurement Conference, 2019, pp. 15–21.
[11] A. Moubayed, M. Injadat, A. B. Nassif, H. Lutﬁyya, and A. Shami, “E-
learning: Challenges and research opportunities using machine learning
data analytics,” IEEE Access, vol. 6, pp. 39 117–39 138, 2018.

[12] A. Moubayed, M. Injadat, A. Shami, and H. Lutﬁyya, “Student en-
gagement level in an e-learning environment: Clustering using k-means,”
American Journal of Distance Education, vol. 34, no. 2, pp. 137–156,
2020.

[13] ——, “Relationship between student engagement and performance in
e-learning environment using association rules,” in 2018 IEEE World
Engineering Education Conference (EDUNINE), 2018, pp. 1–6.

[14] M. Injadat, A. Moubayed, A. B. Nassif, and A. Shami, “System-
atic ensemble model selection approach for educational data mining,”
Knowledge-based Systems, vol. 200, p. 105992, Jul. 2020.

[15] ——, “Multi-split optimized bagging ensemble model selection for multi-
class educational data mining,” Applied Intelligence, pp. 1–23, Jul. 2020.
[16] M. Injadat, F. Salo, A. B. Nassif, A. Essex, and A. Shami, “Bayesian op-
timization with machine learning algorithms towards anomaly detection,”
in 2018 IEEE Global Communications Conference (GLOBECOM), Dec
2018, pp. 1–6.

[17] M. Injadat, A. Moubayed, A. B. Nassif, and A. Shami, “Multi-stage
optimized machine learning framework for network intrusion detection,”
IEEE Transactions on Network and Service Management, pp. 1–1, Aug.
2020.

[18] F. Salo, M. Injadat, A. Moubayed, A. B. Nassif, and A. Essex, “Clustering
enabled classiﬁcation using ensemble feature selection for intrusion
detection,” in 2019 International Conference on Computing, Networking
and Communications (ICNC), 2019, pp. 276–281.

[19] L. Yang and A. Shami,

“On hyperparameter optimization of
machine learning algorithms: Theory and practice,” Neurocomputing,
2020. [Online]. Available: http://www.sciencedirect.com/science/article/
pii/S0925231220311693

[20] A. Moubayed, “Optimization Modeling and Machine Learning Tech-
niques Towards Smarter Systems and Processes,” Ph.D. dissertation,
University of Western Ontario, Aug. 2018.

[21] M. Injadat, “Optimized Machine Learning Models Towards Intelligent
Systems,” Ph.D. dissertation, University of Western Ontario, Aug. 2018.
[22] L. Yang, A. Moubayed, I. Hamieh, and A. Shami, “Tree-based intelligent
intrusion detection system in internet of vehicles,” in 2019 IEEE Global
Communications Conference (GLOBECOM), Dec 2019, pp. 1–6.
[23] A. Moubayed, M. Injadat, A. Shami, and H. Lutﬁyya, “DNS Typo-
Squatting Domain Detection: A Data Analytics & Machine Learning
Based Approach,” in 2018 IEEE Global Communications Conference
(GLOBECOM), Dec. 2018, pp. 1–7.

[24] A. Moubayed, E. Aqeeli, and A. Shami, “Ensemble-based feature selec-
tion and classiﬁcation model for dns typo-squatting detection,” in 2020
IEEE Canadian Conference of Electrical and Computer Engineering
(CCECE), Aug. 2020.

[25] S. Sivakorn, K. Jee, Y. Sun, L. Kort-Parn, Z. Li, C. Lumezanu, Z. Wu,
L.-A. Tang, and D. Li, “Countering malicious processes with process-dns
association,” in NDSS, 2019.

[26] C. D. McDermott, F. Majdani, and A. V. Petrovski, “Botnet detection
in the internet of things using deep learning approaches,” in 2018
International Joint Conference on Neural Networks (IJCNN), 2018, pp.
1–8.

[27] A. Pektas¸ and T. Acarman, “Effective feature selection for botnet detec-

tion based on network ﬂow analysis,” 2017.

[28] R. Chen, W. Niu, X. Zhang, Z. Zhuo, and F. Lv, “An effective
conversation-based botnet detection method,” Mathematical Problems in
Engineering, vol. 2017, 2017.

[29] Z. Chen, Q. Yan, H. Han, S. Wang, L. Peng, L. Wang, and B. Yang, “Ma-
chine learning based mobile malware detection using highly imbalanced
network trafﬁc,” Information Sciences, vol. 433, pp. 346–364, 2018.
[30] N. V. Chawla, K. W. Bowyer, L. O. Hall, and W. P. Kegelmeyer,
“Smote: synthetic minority over-sampling technique,” Journal of artiﬁcial
intelligence research, vol. 16, pp. 321–357, 2002.

[31] M. B. C¸ atalkaya, O. Kalıpsız, M. S. Aktas¸, and U. O. Turgut, “Data
feature selection methods on distributed big data processing platforms,” in
2018 3rd International Conference on Computer Science and Engineering
(UBMK).

IEEE, 2018, pp. 133–138.

[32] R. S. B. Krishna and M. Aramudhan, “Feature selection based on
information theory for pattern classiﬁcation,” in 2014 International Con-
ference on Control, Instrumentation, Communication and Computational
Technologies (ICCICCT).

IEEE, 2014, pp. 1233–1236.

[33] G. Cohen, M. Hilario, and A. Geissbuhler, “Model selection for support
vector classiﬁers via genetic algorithms. an application to medical de-
cision support,” in International Symposium on Biological and Medical
Data Analysis. Springer, 2004, pp. 200–211.

[34] F. Hu and H. Li, “A novel boundary oversampling algorithm based
on neighborhood rough set model: Nrsboundary-smote,” Mathematical
Problems in Engineering, vol. 2013, 2013.

[35] B. Bonev, “Feature selection based on information theory,” Ph.D. disser-

tation, Universidad de Alicante, Jun. 2010.

[36] P. S. Oliveto and C. Witt, “Improved time complexity analysis of the
simple genetic algorithm,” Theoretical Computer Science, vol. 605, pp.
21–41, 2015.

[37] M. Singh, M. Singh, and S. Kaur, “TI-2016 DNS dataset,” 2019.

[Online]. Available: http://dx.doi.org/10.21227/9ync-vv09

