A Moving Target Approach for Identifying Malicious Sensors in
Control Systems

Sean Weerakkody

Bruno Sinopoli

7
1
0
2

r
a

M
3
1

]

Y
S
.
s
c
[

3
v
3
4
0
9
0
.
9
0
6
1
:
v
i
X
r
a

Abstract— In this paper, we consider the problem of attack
identiﬁcation in cyber-physical systems (CPS). Attack identiﬁca-
tion is often critical for the recovery and performance of a CPS
that is targeted by malicious entities, allowing defenders to con-
struct algorithms which bypass harmful nodes. Previous work
has characterized limitations in the perfect identiﬁcation of
adversarial attacks on deterministic LTI systems. For instance,
a system must remain observable after removing any 2q sensors
to only identify q attacks. However, the ability for an attacker to
create an unidentiﬁable attack requires knowledge of the system
model. In this paper, we aim to limit the adversary’s knowledge
of the system model with the goal of accurately identifying all
sensor attacks. Such a scheme will allow systems to withstand
larger attacks or system operators to allocate fewer sensing
devices to a control system while maintaining security. We
explore how changing the dynamics of the system as a function
of time allows us to actively identify malicious/faulty sensors
in a control system. We discuss the design of time varying
system matrices to meet this goal and evaluate performance in
deterministic and stochastic systems.

I. INTRODUCTION

Cyber-physical system (CPS) security has become a
widely studied topic, both within industry and the research
community. Indeed, current and next generation cyber-
physical systems will pervade our critical infrastructures in-
cluding the electricity grid, water distribution systems, waste
management, smart buildings, and health care, providing
ample motivation for attackers to target CPS. Moreover, CPS
will consist of many heterogeneous systems and components,
thus providing adversaries an opportunity for attacks [1].
There have been several powerful attacks against CPS in-
cluding Stuxnet [2] and the Maroochy Shire incident [3].

Consequently, signiﬁcant research effort has been geared
towards responding to attacks on CPS, with a focus on
integrity attacks where an adversary alters a subset of
control inputs and sensor measurements. Previous research
has characterized stealthy attack scenarios including zero
dynamic attacks [4], [5], false data injection attacks [6],
[7], covert attacks [8], and replay attacks [9], where an
adversary adversely affects a system without being detected.
Moreover, countermeasures have been developed to detect
stealthy attacks [10]–[14].

S Weerakkody, and B. Sinopoli are with the Department of Elec-
trical and Computer Engineering, Carnegie Mellon University, Pitts-
burgh, PA, USA 15213. Email: sweerakk@andrew.cmu.edu,
brunos@ece.cmu.edu.

S. Weerakkody is supported in part by the Department of Defense
(DoD) through the National Defense Science & Engineering Graduate
Fellowship (NDSEG) Program. The work by S. Weerakkody and B. Sinopoli
is supported in part by the Department of Energy under Award Number
de-oe0000779 and by the National Science Foundation under Award Num-
ber 1646526.

While detection allows a defender to determine the pres-
ence of an adversary, it does not prescribe a solution to
maintain system performance. Thus, we aim to identify
malicious entities in the network so specialized and optimal
solutions can be developed to counter their presence.

Previous work has considered the problem of identiﬁca-
tion in CPS. For instance, Pasqualetti et al. [5] deﬁne the
notion attack identiﬁability, provide algebraic conditions to
characterize when a system can identify q attacks on sensors
and actuators, and propose identiﬁcation ﬁlters to carry out
this process. Also, Sundaram et al. [15] design an intrusion
detection system in a wireless control network to identify
malicious behavior at sensor nodes and provide graphical
conditions to determine when identiﬁcation is possible.

Attack identiﬁcation is closely tied to robust estimation
in the presence of sensor attacks [16]–[22]. Qualitatively,
by identifying sensor attacks, a defender can perform state
estimation by disregarding malicious sensors and carry-
ing out estimation schemes on trusted sensors. In fact, in
deterministic systems, the ability to perform perfect state
estimation in the presence of sensor attacks is equivalent
to being able to perform perfect identiﬁcation [16].

The problem of robust state estimation in deterministic
systems is considered in [16]–[19]. For instance, in [16]
(and [17]) the authors characterize the number of attacked
sensors (and inputs) which can be tolerated while perform-
ing state estimation and propose a decoding algorithm to
recover the state. Next, Shoukry et al. [19] propose event
based algorithms to improve the efﬁciency of robust state
estimation. Additionally, Chong et al. [18] develop schemes
for robust estimation in deterministic continuous LTI systems
while formulating a notion of observability under attack.

The problem of robust estimation has also been considered
in stochastic and uncertain systems [20]–[22]. For instance,
Mishra et al. [20] propose robust estimation schemes in the
presence of Gaussian noise and characterize limitations in
estimation performance in the presence of attacks. Nakahira
et al. [21] consider robust estimation with bounded noise,
proposing a stable estimator in the presence of q attacks
provided that the system remains detectable after removing
any 2q sensors. Finally, Pajic et al. [22] demonstrate the
robustness of estimation schemes in the presence of attacks
even when there is uncertainty in the system model.

From previous work [5], [17]–[19] it can be shown that
there are fundamental limitations in the defender’s ability to
perform identiﬁcation. For instance, given the presence of an
intelligent adversary, perfect identiﬁcation of q attacks can
only be performed if the system is observable after removing

 
 
 
 
 
 
any 2q sensors. However, such intelligent adversaries require
knowledge of the system model. By limiting the attacker’s
knowledge of the model, we hope to identify all sensor
attacks. This will allow us to perform perfect estimation
in a deterministic system under q attacks if the system
is observable after removing any q sensors. To meet this
objective, we propose changing the dynamics of the system
model in a time varying fashion, unknown to the adversary.
A similar scheme is considered for the detection of integrity
attacks in [23]. The time varying dynamics act like a moving
target, preventing an information constrained adversary from
developing stealthy unidentiﬁable attacks. In this paper,

• We propose design considerations for the moving target,
which allow us to perfectly identify a class of nonzero
sensor attacks in deterministic systems.

• We show the moving target allows us to detect destabi-

lizing sensor attacks in stochastic systems.

• We construct an observer which allows us to identify
sensor attacks that cause unbounded estimation error.
The rest of the paper is summarized as follows. In section
II, we introduce the problem and results on identiﬁcation.
In section III, we propose a moving target based formula-
tion to prevent unidentiﬁable attacks. Next, in section IV,
we consider deterministic identiﬁcation and propose design
considerations for the moving target. After, in section V,
we consider the moving target approach for detecting false
data injection attacks. In section VI, we construct a robust
estimator which can only be destabilized by identiﬁable
sensor attacks. Section VIII concludes the paper.
Notation: Unless otherwise speciﬁed, the following notation
is used. xt1:t2 refers to the set {xt1, xt1+1, · · · , xt2 }. Xuv is
the entry at row u and column v of matrix X. X i is the ith
row of X. If V is a set of indices, X V are the rows of X
indexed by V . 1 is the indicator function. P(·) refers to the
power set. k · k is the l2 norm. {ak} deﬁnes a sequence.

II. PROBLEM SETUP AND PREVIOUS RESULTS

In this section we introduce our system model. To begin
we model our system as a discrete time deterministic control
system under sensor attacks. Though this initial approach is
simple, we consider the stochastic case later in the paper.
The dynamics are given by

xk+1 = Axk + B(uk(y0:k)), yk = Cxk + Dda
k.

(1)

where xk ∈ Rn is the state at time k, uk(y0:k) ∈ Rp is
the control input, and yk ∈ Rm are the sensor outputs. The
sensor outputs, yk, consist of m scalar sensor outputs, deﬁned
by the set S = {1, 2, · · · , m}.

The adversary performs sensor integrity attack on an
ordered set K = {s1, s2, · · · , s|K|} ⊆ S using additive
k ∈ R|K|, starting at time k = 0. Consequently,
inputs da
we deﬁne D entrywise as

Duv = 1u=si,v=i.

(2)

Note that D is fully determined by the set K. Implicitly, we
assume that the set of sensors which the adversary targets is

constant due to (ideally) the inherent difﬁculty in the task of
hijacking sensors. When performing an integrity attack, the
adversary’s goal is to adversely affect the physical system
by preventing proper feedback. In particular, a defender with
incorrect sensor measurements may not be able to perform
adequate state estimation and thus will not be able to apply
appropriate corrective measures to the system.

We assume that the defender knows the system dynamics
M = {A, B, C} as well as the input and output histories
is unaware of the set K.
given by u0:k and y0:k, but
in the deterministic setup,
Furthermore, we assume that
the defender is unaware of the initial state x0. Thus, the
defender’s information Ik at time k is given by

Ik = {M, u0:k−1, y0:k}.

(3)

Remark 1: In the deterministic case, we explore attacks
where the defender has no knowledge of the initial state.
While this is certainly not realistic, the attack vectors devel-
oped in this scenario can still remain stealthy in a practical
stochastic setting if the adversary carefully ensures that his
initial attack inputs remain hidden by the noise of the system.
From a defender’s perspective it is important to identify
trusted sensor nodes. Estimation and control algorithms can
then be tuned to ignore attacked nodes. We note that the
problem of identifying malicious nodes is independent of
the control input, since the defender is aware of the model
and input history. Thus, in the ensuing discussions we will
disregard the control input so that

xk+1 = Axk, yk = Cxk + Dda
k.

(4)

A. Previous Results in Identiﬁcation

Previous work in CPS security has attempted to address
the problem of identiﬁability. We now revisit major results
when trying to identify malicious adversaries.

To begin, let y(x0, D(K)da

k, k) for some initial state x∗
0.

k, k) be the output signal asso-
ciated with (4) at time k with initial state x0 and attack
input Dda
k on sensors K. We deﬁne an attack monitor
Ψ : y0:∞ → P({1, · · · , m}) with the property that Ψ = K
if and only if K is the smallest set such that for all k ≥ 0
we have yk = y(x∗

0, D(K)da
Deﬁnition 2: Consider an attack {D(K)da

k} on the sen-
sors in K, where we assume each sensor in K is attacked at
least once. Then {D(K)da
k} is unidentiﬁable if Ψ(y0:∞) 6=
K. Moreover, the set K is unidentiﬁable if there exists an
unidentiﬁable attack [5].
Based on this deﬁnition we state an attack is unidentiﬁable
if there exists an attack on a different subset of sensors with
size less than or equal to |K|, which yields the same sensor
outputs. As a result, we have the following [5].

Theorem 3: An attack on sensors K1 is unidentiﬁable if
0 and x2

0 and set K2 such that

and only if there exists x1
0, D(K1)da

y(x1

k, k) = y(x2

0, D(K2) ¯da

k, k),

∀ k.

(5)

where |K2| ≤ |K1| and K2 6= K1.
In this setup, it is important to include the condition that
this restriction, an attacker can
|K2| ≤ |K1|. Without

generate an unidentiﬁable attack regardless of the set K. In
particular, suppose D(K)da

k = CKAk∆x0. Then,

y(x0, D(K)da

k, k), ∀ k. (6)

k, k) = y(x0 + ∆x0, D(K c) ¯da
k = −CK c

where D(K c) ¯da
Ak∆x0. We observe that there
exists an attack on sensors K equivalent to an alternative
attack on the complement set K c. In such a scenario, it is
easy to see a defender can identify attacks on no more than
half the sensors. In fact, we have the following result [5].

Theorem 4: Attack set K1 is unidentiﬁable if and only if

λI − A
C

(cid:20)

0

0

D(K1) D(K2)(cid:21)



=

0
0(cid:21)
(cid:20)

,

(7)

x
d1
d2







where K2 satisﬁes |K2| ≤ |K1| and K2 6= K1, λ ∈ C,
x 6= 0 ∈ Cn and d1 ∈ C|K1| and d2 ∈ C|K2|.

Corollary 5:

[16] A system can identify attacks on up
to q arbitrary sensors if and only if (A, C) is 2q sparse
observable. That is, (A, C) remains observable if we remove
any 2q sensors.
As a consequence of the previous results, the defender must
allocate a large number of sensors to withstand a large
number of attacks or alternatively design systems, which are
only robust to a fewer attacks.

III. MOVING TARGET APPROACH FOR IDENTIFICATION

In the previous section we demonstrated that there exist
limitations on the number of attacks a defender can poten-
tially identify. Speciﬁcally, we saw that to identify all attacks
of size q, the system must be 2q sparse observable. This
can result in expenditures to add more sensing in order to
withstand more attacks or sacriﬁcing security in order to use
fewer components. However, in this section we argue that
generating unidentiﬁable attacks requires knowledge of the
model. By limiting this knowledge, we hope to prevent such
attacks. To begin we deﬁne the following.

Deﬁnition 6: A nonzero attack on sensor s is unambigu-
0 ∈ Rn satisfying
ously identiﬁable at time t if there is no x∗
ys
k = ys(x∗
0, 0, k) for 0 ≤ k ≤ t. An attack on sensor s is
unambiguously identiﬁable if it is unambiguously identiﬁable
for all t.
The notion of unambiguous identiﬁability characterizes when
the defender can be certain that sensor s is faulty or under
attack. This scenario occurs only if there exists no initial
state which produces the output sequence at ys. We envision
designing a system that forces the attacker to generate
unambiguously identiﬁable attacks on all sensors which he
targets. Consequently, we can identify misbehaving sensors.
Thus, instead of requiring our system to be 2q sparse
observable to perform perfect estimation with q attacks or
2q detectable to perform stable estimation [21], forcing an
attacker to generate unambiguously identiﬁable attacks will
allow the defender to perform stable estimation when the
system is only q detectable (detectable after removing any q
sensors). This allows the system to withstand more powerful
attacks or use fewer sensing devices while maintaining the

k+1 given by
T

(8)

same level of security. We now characterize attacks which
are not unambiguously identiﬁable.

Theorem 7: An attack on sensor s is not unambiguously
0 such
0 6= 0

identiﬁable at time t if and only if there exists an x∗
that Dsda
0 for all 0 ≤ k ≤ t and CsAkx∗
for some time 0 ≤ k ≤ t.

k = CsAkx∗

Proof: Suppose Dsda

0 for time 0 ≤ k ≤ t.
k = ys(x0 + x∗
0, 0, k).
0 such that Dsda
k 6=
0 for 0 ≤ k ≤ t . Then there is no ¯x0 such that
k = CsAk ¯x0. Since ys(x0, 0, k) = CsAkx0, the

k = CsAkx∗
Assume this attack is nonzero. Then, ys
Suppose instead that there is no x∗
CsAkx∗
k + Dsda
yi
result immediately follows.
As a result,
to prevent attacks on sensor i from being
unambiguously identiﬁable at time k, an adversary must
insert attacks which lie in the image of Os

Os

k+1 =

CsT (CsA)T · · · (CsAk)T
(cid:2)

(cid:3)

.

To insert such attacks, the adversary likely has to be aware
of both the matrix A and the matrix Cs. In the sequel, we
aim to minimize this knowledge to prevent an attacker from
generating unidentiﬁable attacks.

A. A moving target approach

Ideally, we would like to simply assume the adversary
has no knowledge of (A, C) and consequently will likely
always be unambiguously identiﬁable. However, in practice,
the processes associated with the physical plant may be well
known or previously public so that the attacker is aware of
(A, C). Alternatively, the defender can change parameters
of the system to ensure a knowledgeable adversary is still
thwarted. Speciﬁcally, we propose changing the system ma-
trix A and C in a time varying and unpredictable fashion
from the adversary’s point of view so that

xk+1 = Akxk,

yk = Ckxk + Dda
k.

(9)

We assume that

(Ak, Ck) ∈ Γ = {(A(1), C(1)), · · · , (A(l), C(l))}.

Q

Q

Theorem 8: An attack on sensor s in (9) is not unambigu-
ously identiﬁable at time t if and only if there exists an x∗
0
k−1
k = Cs
such that Dsda
j=0 Aj)x∗
0 for all time 0 ≤ k ≤ t
k(
k−1
and Cs
j=0 Aj)x∗
0 6= 0 for some time 0 ≤ k ≤ t.
k(
Proof: The proof is similar to that of Theorem 7.
Changing the system matrices as a function of time allows
the system to act like a moving target. In particular, even
if an attacker is aware of the existing conﬁgurations of the
system, deﬁned by Γ, he will likely be forced to generate
unambiguously identiﬁable attacks since he is not aware of
the sequence of system matrices. Moreover, since the system
matrices keep changing, it is unlikely the attacker can remain
unidentiﬁable by pure chance.

Remark 9: The matrices (Ak, Ck) can be changed ran-
domly using a cryptographically secure pseudo random num-
ber generator where the random seed is known both by the
defender and the plant, but is unavailable to the adversary.

From a security perspective, the seed would form the root of
trust. The set Γ can be obtained by leveraging or introducing
degrees of freedom in the dynamics and sensing in our
control system. While the defender likely would have to
change his control strategy to account for the time varying
dynamics, in this work, we will ignore such changes.
Given the proposed setup, we are now ready to deﬁne the
attacker’s information and an admissible attacker strategy.
Attacker Information

1) The adversary has no knowledge of either the input

2) I a

sequence u0:k or the true output sequence.
k = {Γ, Dda

0:k−1, f ({(Ak, Ck)})}.
If the adversary can observe the output sequence in a zero
input deterministic setting, he can multiply the true outputs
by some constant factor to avoid generating unambiguously
identiﬁable inputs. A realistic adversary may use physical
attacks to bias sensors without reading their outputs. Future
work will examine relaxing this assumption. The control
inputs are also secret so that the attacker will be unable to
leverage the input process to gain information about the sys-
tem model. However, we assume Γ is known as well as the
sequence of attack inputs. Also, the probability distribution
of the sequence of system matrices, f ({(Ak, Ck)}), is public.
Deﬁnition 10: An admissible attack policy is a sequence
k → Im(D(K)) such that

of deterministic mappings Ωk : I a
Dda
Here, we assume the attacker can only leverage his informa-
tion to construct a stealthy attack input. Consequently, while
there may exist attacks that bypass identiﬁcation, in order to
be admissible, they must leverage the attacker’s knowledge
and can not be a function of unknown and unobserved
stochastic processes (namely the sequence of {Ak} and
{Ck}). A real adversarial strategy may be to bias sensors
with the goal of affecting state estimation, without being
identiﬁed by the defender. Thus, the adversary can impact
the system without corrective measures being put in place.

k = Ωk(I a

k ).

IV. SYSTEM DESIGN FOR DETERMINISTIC
IDENTIFICATION

In this section, we consider criteria the defender can use to
design the set Γ, which can allow him to identify malicious
inputs on a subset of sensors. Given the attacker’s knowledge
of Γ, an adversary can guess the sequence of system matrices
chosen by the defender. If the adversary guesses correctly, he
can generate attacks which are not unambiguously identiﬁ-
able. We would now like to characterize the scenario where
an attacker can guess the sequence of matrices incorrectly
yet still generate an unambiguously identiﬁable attack.

Theorem 11: Suppose an adversary generates an attack on
sensor s by guessing a sequence {lk} where li ∈ {1, · · · , l}
and creating inputs by applying Theorem 8. Speciﬁcally,
k−1
j=0 A(lj ))x1
there exists an x1
0
for all time 0 ≤ k ≤ t and Dsda
η 6= 0 for some time
0 ≤ η ≤ t. Such a strategy may avoid generating an
unambiguously identiﬁable attack on sensor s at time t if

0 such that Dsda

k = Cs(lk)(

Q

and only if

null

O(ls, t) O(s, t)
(cid:1)
(cid:0)

> null

O(ls, t)
(cid:1)
(cid:0)

+ null

O(s, t)
(cid:0)

,
(10)
(cid:1)

O(ls, t) =

O(i, t) =

h

h

(Cs(l0))T

· · ·

(Ci(lt)

t−1
j=0 A(lj ))T

(Cs

0 )T

(Cs

1 A0)T

· · ·

Q
(Cs
t

T

,

T

,

i

i
t−1
j=0 Aj)T

Q

where null refers to the dimension of the null space.

Proof: From Theorem 8, an attack is not unambigu-
ously identiﬁable at time t if and only if there exists some
0 such that Dsda
x2
0 for 0 ≤ k ≤ t
and this sequence is nonzero. Thus, the proposed strategy
Q
can generate a nonzero unambiguously identiﬁable attack on
sensor i at time t if and only if

k−1
j=0 Aj)x2

k = Cs
k(

k−1

Cs(lk) 

Yj=0



A(lj)

0 = Cs
x1

k 





k−1

Yj=0

Aj 

x2
0,



for all 0 ≤ k ≤ t and moreover for some 0 ≤ k ≤ t this
expression is nonzero. The result immediately follows.

In practice, it is unlikely that the defender can change
the parameters of the system at each time step due to the
system’s inertia. Consequently, we would like to consider
systems where (Ak, Ck) remains constant for longer periods
of time. For now, we assume (Ak, Ck) ⊂ {Γ}, but
is
constant. An adversary, can use his knowledge of Γ to guess
a pair (Ak, Ck) ∈ Γ and generate unidentiﬁable attack inputs.
Deﬁne the matrix

T

T

OS

h

t,j =

CS(j)

(CS (j)A(j))T · · · (CS (j)A(j)t−1)T

.
(11)
If the attacker guesses the matrices (A(j), C(j)) and
chooses to attack sensor s, he would need to ensure
T
(Dsda
t+1,j to
avoid deterministic identiﬁcation. We next determine when
(cid:2)
an attacker is able to guess an incorrect pair and avoid
generating an unambiguously identiﬁable attack.

lies in the image of Os

(Dsda

0)T

t )T

· · ·

i

(cid:3)

Theorem 12: Suppose (A, C) = (A(1), C(1)) and an
adversary generates a nonzero attack input on sensor s using
(A(2), C(2)) by inserting attacks along the image of Os
t,2.
Let Λ1 = {λ1
1, · · · , λ1
q1 } be the set of distinct eivenvalues
associated with A(1) and Λ2 = {λ2
1, · · · , λ2
q2 } be the set of
distinct eigenvalues of A(2). Let

{vλ,j

1,1 , · · · vλ,j

r1,1, vλ,j

1,2 , · · · vλ,j

r2,2, · · · , vλ,j
1,lλ,j

, · · · vi,j

rlλ,j ,lλ,j

}

be a maximal set of linearly independent (generalized) eigen-
vectors associated with eigenvalue λ of A(j) satisfying

A(j)vλ,j

1,l = λvλ,j
1,l ,

A(j)vλ,j

k+1,l = λvλ,j

k+1,l + vλ,j
k,l .

(12)

Noting that each ri is in general fully determined by λ and

j, let r(λ) = maxi,j ri(λ, j). Deﬁne V λ,j

s,k ∈ Cr(λ)×rk as
Cs(j)vλ,j
rk,k
...
...



Cs(j)vλ,j



0

1,k Cs(j)vλ,j
2,k
Cs(j)vλ,j
1,k

· · ·
. . .
. . .

· · ·
. . .
. . .
· · · Cs(j)vλ,j
0
0

0
0

0
0
0
0

0
0
0
0











There exists an attack on sensor s, which is not unambigu-
ously identiﬁable for all time if and only if Λ1 ∩ Λ2 6= ∅ and
there exist some λ ∈ Λ1 ∩ Λ2 such that

1,k Cs(j)vλ,j
2,k
Cs(j)vλ,j
1,k
0












.

null

V λ,1
s
(cid:0)

where

V λ,2
s

> null

V λ,1
s
(cid:0)

+ null

,

V λ,2
s
(cid:0)

(cid:1)

V λ,j

s =

· · ·

(cid:1)
V λ,j
s,1
(cid:16)

(cid:1)
V λ,j
s,lλ,j

.

(cid:17)

Otherwise the attack can be detected in time t ≤ 2n − 1.

Proof: The proof is lengthy and found in [?] along with

numerical simulations.
The previous theorem gives the defender an efﬁcient way
to determine if the attacker can guess Γ incorrectly yet
still remain undetected in the case that system matrices are
kept constant for at least a period of 2n time steps. It also
prescribes a means to perform perfect identiﬁcation.
Design Recommendations

1) For all pairs i 6= j ∈ {1, · · · l}, Λi ∩ Λj = ∅.
2) The system matrices (Ak, Ck) are periodically changed

after every N ≥ 2n time steps.

3) Let {lk} be a sequence where lk ∈ {1, · · · , l}. Let qk
denote the indices of a subsequence. Pr((Aqk , Cqk ) =
(A(lk), C(lk)), ∀k) = 0.

4) The pair (A(i), C(i)) is observable all i ∈ {1, · · · , l}.
5) For all i ∈ {1, · · · l}, 0 /∈ Λi.
Corollary 13: Assume a defender follows the design rec-
ommendations. Suppose sensor s is attacked and there is no
t∗ such that Dsda
k = 0 for all k ≥ t∗. Then, the sensor attack
will be unambiguously identiﬁable with probability 1.

Proof: Since the attack is persistently nonzero, the ad-
versary must guess a correct subsequence of system matrices
inﬁnitely many times due to recommendations 1 and 2. From
recommendation 3, this occurs with probability 0.
As a result, an attacker who persistently biases a sensor
will be perfectly identiﬁed. Note that recommendation 3 can
be achieved with an IID assumption or an aperiodic and
irreducible Markov chain. The last 2 recommendations are
justiﬁed next when we consider stochastic systems.

V. FALSE DATA INJECTION DETECTION

In this section, we examine the effectiveness of the moving
target defense for detection in the case of a stochastic system.
Here, we assume that

xk+1 = Akxk + wk, yk = Ckxk + Dda

k + vk.

(13)

wk and vk are IID Gaussian process and sensor noise where
wk ∼ N (0, Q) and vk ∼ N (0, R). For notational simplicity

we assume that the covariances Q ≥ 0 and R > 0 are
constant. However, we can obtain the ensuing results even
in the case that Q and R are dependent on Ak and Ck.

The adversary’s and defender’s information and strategy is
unchanged except we assume the defender has knowledge of
the distribution of the initial state. Speciﬁcally, f (x0|I−1) =
N (ˆx−
0 , P0|−1). Moreover, both the defender and attacker are
aware of the noise statistics. We ﬁrst would like to show that
a moving target defense leveraging the design recommen-
dations listed above can almost surely detect harmful false
data injection attacks. To characterize detection performance,
we consider the additive bias the adversary injects on the
normalized residues ∆zk due to his sensor attacks. The
residues, zk, are the normalized difference between the
observed measurements and their expected values. The bias
on the residues is given by

∆ek = (Ak−1 − KkCkAk−1)∆ek−1 − KkDda
k,
(CkAk−1∆ek−1 + Dda

− 1
2
k

∆zk = P
Pk = (CkPk|k−1CT

Pk+1|k = Ak(Pk|k−1 − KkCkPk|k−1)AT

k + R), Kk = Pk|k−1CT
k + Q,

k) , ∆e0 = 0,
k P −1
k ,

(14)

P

T
k=0 ∆zT

lim supk→∞ − 1

where ∆ek is the bias injected on the a posteriori state
estimation error obtained by an optimal Kalman ﬁlter, and
Pk|k−1 is the a priori error covariance. In [24], the authors
show through their study of information ﬂows in control
systems that the residue bias in additive attacks is related
to the optimal decay rate for the probability of false alarm.
Theorem 14: Let 0 < δ < 1. Deﬁne αk and βk as the
probability of false alarm and detection respectively. Suppose
1
k ∆zk ≥ ǫ. Then there exists
lim supk→∞
2(T +1)
a detector such that
βk ≥ 1 − δ, ∀k,
Alternatively suppose y0:k is ergodic under attack and normal
operation and that
k ∆zk ≤ ǫ.
Then for all detectors
P
βk ≥ 1 − δ, ∀k =⇒ lim supk→∞ − 1
k+1 log(αk) ≤ ǫ
We now show that an admissible adversary is restricted in
the bias he can inject on the state estimation error without
signiﬁcantly biasing the residues and incurring detection. In
particular, we have the following result.
defender

a moving
target defense leveraging the design recommendations
listed above. Then for all admissible attack strategies
lim supk→∞ k∆ekk = ∞ =⇒ lim supk→∞ k∆zkk = ∞.

Theorem 15: Suppose

k+1 log(αk) ≥ ǫ.

T
k=0 ∆zT

1
2(T +1)

limk→∞

uses

a

Proof: Assume to the contrary that the residues are
bounded k∆zkk ≤ M . Deﬁne the indices of a peak sub-
sequence as follows. i0 = 0, ik = min κ such that κ >
ik−1, k∆eκk > k∆etk ∀t ≤ κ. Such a sequence exists
since the estimation bias is unbounded. Also deﬁne the
indices jk such that jk = min κ such that jk ≥ ik, jk
mod N = N − 1 Observe that

∆ek = Ak−1∆ek−1 − KkP

1
2

k ∆zk.

(15)

As a result, we have

Ajk ∆ejk = Ajk−ik+1

ik

∆eik −

Deﬁne am > 0 and aM > 0 as

jk

Xt=ik+1

Ajk+1−t

ik

KtP

1
2

t ∆zt.

am , min

j∈{1,··· ,l}
q∈{0,··· ,N }

σmin(A(j)q), aM ,

max
j∈{1,··· ,l}
q∈{0,··· ,N −1}

kA(j)qk.

where σmin(·) denotes the smallest singular value. Moreover
let pM and cM be given by

pM = sup

k

kPk|k−1k,

cM = max

j∈{1,··· ,l}

kC(j)k.

Observe that am is nonzero since each A(i) is invertible
from recommendation 5. aM and cM are bounded above
since we are taking the maximum over a ﬁnite set of
bounded elements. Moreover, pM is bounded above since the
error covariance is bounded above. A complete argument is
omitted due to space considerations. However, since all pairs
(A(i), C(i)) ∈ Γ are observable from recommendation 4 it
can be shown that xN k+n, k ∈ N is a linear combination
of yN k:N k+n−1 and 2n random variables, where the linear
combination is dependent only on (A(N k), C(N k)). Thus,
the covariance of xN k+n given y0:N k+n−1 is bounded. It can
be shown that the covariance of xN k+n+j , j ∈ {1, · · · , N −
1} is bounded given y0:N k+n+j−1 simply by computing
predictive covariances given y0:N k+n−1. As a result, we have

kAjk ∆ejk k ≥ amk∆eik k − (N − 1)aM pM cM

M

λmin(R)

.

the

smallest
is
k∆eik k → ∞, we

where λmin(R)
eigenvalue of R.
that
since
Therefore,
kAjk ∆ejk k → ∞. Now, with some abuse of notation
let Dda
Suppose
(Ajk+1 , Cjk+1 ) = (A(q1), C(q1)). Then,

t1 )T · · · (Dda

(Dda
(cid:2)

t2 )T

have

t1:t2

=

(cid:3)

T

.

p

Ddjk+1:jk+N = OS

N,q1Ajk ∆ejk + Fjk+1(q1)∆z(q1)

jk+1:jk+N .

Through a similar analysis as done above, it can shown that
kFjk+1(q1)k is bounded above. Alternatively, if q1 6= q2, is
chosen then

Ddjk+1:jk+N = OS

N,q2Ajk ∆ejk + Fjk+1(q2)∆z(q2)

jk+1:jk+N .

Thus, to insert valid inputs for system states q1 and q2, we
require

(OS

N,q1 − OS

N,q2)Ajk ∆ejk = Fjk+1(q2)∆z(q2)
− Fjk+1(q1)∆z(q1)

jk+1:jk+N
jk+1:jk+N .

The right hand side is bounded since ∆zjk+1:jk+N and
Fjk+1(q1) are bounded. Due to design recommendations 1
and 2 and Theorem 12, there is no solution to 0 6= OS
N,q1v1 =
OS
N,q1v2. As a result, since Aik ∆ejk is unbounded and
each (Ak, Ck) pair is observable, (OS
N,q2) has no
nontrivial null space and the left hand side is unbounded.
Thus, there is no way for the attacker to guess incorrectly
and insert bounded residues. From, recommendation 3, there

N,q1 − OS

is a nonzero probability the attacker guesses (Ajk+1, Cjk+1)
incorrectly and the result holds.

Remark 16: From the proof of Theorem 15, it can be seen
that the error covariance associated with the moving target
remains bounded since each system state is observable. Thus,
some estimation performance is guaranteed. Moreover, since
the system matrices are kept constant for a period of time,
the worst case error covariance, will practically be close to
the worst case LTI steady state covariance associated with
the pairs (A(j), C(j)) ∈ Γ and Q and R.

Remark 17: Design recommendation 1 can be relaxed
in the stochastic case for purposes of detecting false data
injection attacks. In particular for all non-equal pairs i, j ∈
{1, · · · , l} we only require 0 6= OS
N,jv for all v
instead of 0 6= OS
N,jvj for all vi, vj. Here, a big
difference is that in the stochastic case we give the defender
some knowledge of the distribution of the initial state.

N,ivi 6= OS

N,iv 6= OS

VI. ROBUST ESTIMATION AND IDENTIFICATION

While the moving target approach guarantees we can
detect unbounded false data injection attacks, we wish to
also identify speciﬁc malicious sensors as in the deterministic
case. In the remainder of this section, we construct a robust
estimator. We will fuse state estimates generated by individ-
ual sensors since previous results [25], [26] suggest such an
estimator has better fault tolerance. This is desirable in our
work since we are attempting to force a normally stealthy
adversary to generate faults. We will show that an attacker
can destabilize this estimator only if the culprit sensors can
be identiﬁed. In particular, we will show that the estimation
error will become unbounded only if the bias on a sensor
residue is also unbounded.

To begin, we assume that for each sensor s,

N S(Os

n,1) = N S(Os

n,2) = · · · = N S(Os

n,l),

(16)

where N S(A) denotes the null space of A. Such a condition
is realistic since it implies that changing the system dynamics
does not affect what portion of the state the sensor itself
can observe. As a result, using the Kalman decomposi-
tion, for each sensor s, there exists a state transformation
s ] such that [T uo
s T o
Ts = [T uo
= xk and
T
k,s ωT
ω1 T
[T uo
s T o
are
s ]
k,s
a basis for N S(Os
n,1).
(cid:3)
(cid:2)

ζuo T
k,s
(cid:2)
= wk. Here, the columns of T uo

s T o
s ]

ζT
k,s

(cid:3)

T

s

Moreover, using the same transform Ts, there exists a
Γs = {(Cs(1), As(1)), · · · (Cs(l), As(l))} corresponding to
Γ such that

ζk+1,s = Ak,sζk,s + ωk,s,

k = Ck,sζk,s + vs
ys
k,

(17)

where each pair (Ak,s, Ck,s) is observable and belongs to Γs.
By performing a change of variables on ˆx−
0 , a Kalman ﬁlter
with bounded covariance (see remark 16) can be constructed
to estimate ζk,i given yi

0:k. Speciﬁcally, deﬁne

−
ˆζ−
0,s(cid:21)

(cid:20)

, T −1

s ˆx−
0 ,

−

−
− Qs1,s2(cid:21)

(cid:20)

, T −1

s1 QT −1 T
s2

(18)

−
−
− P s1,s2
0|−1 (cid:21)
(cid:20)

Then we have

, T −1

s1 P0|−1T −1 T

s2

ˆζk,s = (I − Kk,sCk,s)ˆζ−
Kk,s = P s,s
k|k−1CT
P s1,s2
k

k,s + Kk,sys
k,
k|k−1CT
k,s + Rss)−1
k|k−1(I − Kk,s2 Ck,s2 )T

k,s(Ck,sP s,s

= (I − Kk,s1 Ck,s1 )P s1,s2
+ Kk,s1 Rs1s2 K T
k,s2 ,
k,s2 + Qs1,s2 , ˆζ−
AT
k,s + Rss)− 1
k|k−1CT
2 (ys

k+1|k = Ak,s1 P s1,s2
P s1,s2
zk,s = (Ck,sP s,s

k+1,s = Ak,s ˆζk,s,
k − Ck,s ˆζ−

k,s),

k

, ˆζ−

, P s1,s2

0:k], ˆζ−

k,s = E[ζk|ys

Here ˆζk,s = E[ζk|ys
0:k−1] are opti-
mal estimates of the reduced state for sensor s. Moreover,
P s1,s2
k+1|k are a posteriori and a priori error covariances
k
associated with ˆζk,s1 , ˆζk,s2 and ˆζ−

P s1,s2
k
P s1,s2
k|k−1 = E[e−

k,s1
k,s2 |ys1
= E[ek,s1 eT
|ys1
e−T
k,s2
where ek,s = ζk,s − ˆζk,s and e−
k,s. We would
like to use the individual state estimates ˆζk,s associated with
each sensor s to obtain an overall state estimate of xk. To
do this, ﬁrst deﬁne xo

k,s2
0:k, ys2
0:k],
0:k−1, ys2
0:k−1],
k,s = ζk,s − ˆζ−

given by

k,s1

k,s as
xo
k,s = T o
s

ˆζk,s + ηk,s

(21)

where ηk,s is an IID sequence of Gaussian random variables
with ηk,s ∼ N (0, ǫI) for some small ǫ > 0. Moreover
{ηk,s1 } and {ηk,s2 } are independent sequences. ηk,s is a
mathematical artifact introduced so the subsequent estimator
has a simpliﬁed closed form and can be easily removed or
mitigated by letting ǫ tend to 0. Now, we observe that

xk = T uo

s ζuo

k,s + xo

k,s + T o

s ek,s − ηk,s.

From here we obtain

ˆyk = W xk + ηk,

ˆyk =

W =

xo
k,1
xo
k,2
· · ·
xo
k,m







−T uo
1
0
...
0














, xk =

0
−T uo
2
...
0

ζuo
k,1
ζuo
k,2
...
ζuo
k,m
xk



















, ηk =

−T o
−T o

1 ek,1 + ηk,1
2 ek,2 + ηk,2
...
mek,1 + ηk,m

−T o








,








0
0
...

· · ·
· · ·
. . .
· · · −T uo

I
I
...
m I








ζuo
k,1
ζuo
k,2
...
ζuo
k,m
xk










.










It can be seen that ηk is normally distributed so that ηk ∼
N (0, Q), where Q > 0 consists of m × m blocks where the
i P i,j
(i, j) block is given by (T o
j + δijǫI). Here, δij is the
Kronecker delta. The minimum variance unbiased estimate
(MVUB) [27] of xk given ˆyk is given by

k T oT

ˆxk = (W T Q−1W )−1W T Q−1ˆyk

(24)

(22)

(23)

(19)

(20)

The last n entries of ˆxk, denoted as ˆx∗
k, constitute a (MVUB)
estimate of xk given the set of sensor estimates ˆyk. The
covariance of this estimate is given by

cov(xk − ˆxk) = (W T Q−1W )−1.

(25)

The proposed estimator is well deﬁned since N S(W ) = 0.
If, W had a nontrivial null space, this would imply there
exists x 6= 0 and ζ1, · · · , ζm such that

T uo
i ζi = x,

∀ i ∈ {1, · · · , m}.

(26)

i=1N S(Oi
This would imply that ∩m
n,1) 6= 0, which contra-
dicts the observability of each pair (Ak, Ck). We next show
that the proposed estimator of xk has bounded covariance.
Theorem 18: Consider the estimator of xk deﬁned by
(20),(21),(23),(24). The estimator has bounded covariance.

Proof: We ﬁrst prove that Q > 0 is bounded above. The
ith diagonal block of Q has covariance (T o
i + ǫI).
Using the same argument as in the proof of Theorem 15, we
see that P i,i
is bounded. Consequently (T o
i + ǫI)
k
and Q are bounded.

k T oT

k T oT

i P i,i

i P i,i

Next consider ˆxuw
k = (W T W )−1W T ˆyk. Since xk −
k = −(W T W )−1W T ηk, ˆxuw
ˆxuw
is an unbiased estima-
k
tor of xk with covariance (W T W )−1W T QW (W T W )−1.
Since W is ﬁxed and Q > 0 is bounded above,
(W T W )−1W T QW (W T W )−1 is also bounded above.

Finally, since the proposed estimator is MVUB, we see

≤ tr

tr

(W T Q−1W )−1
(cid:0)

(W T W )−1W T QW (W T W )−1
(cid:0)

.

(cid:1)
Thus, cov(xk − ˆxk) and the covariance of xk deﬁned by the
last n × n block of cov(xk − ˆxk) are bounded.

(cid:1)

To close this section, we demonstrate that the proposed
estimator is sensitive to biases in individual residues ∆zk,s,
speciﬁcally showing that an inﬁnite bias introduced into the
estimator implies that the residues are also inﬁnite. Deﬁne
ek , xk − ˆxk and ∆ek as the bias inserted on ek due to the
k and let ∆e∗
adversary’s inputs. Moreover, let e∗
k
and ∆ek,i be the bias inserted on e∗
k and ek,i respectively
due to the adversary’s inputs. We have the following result.
Theorem 19: Consider the estimator of xk deﬁned by
kk = ∞ =⇒

(20),(21),(23),(24). Then lim supk→∞ k∆e∗
lim supk→∞ k∆zi

kk = ∞ for some i ∈ {1, · · · , m}.

k = xk − ˆx∗

Proof: First, we observe that

ek = −(W T Q−1W )−1W T Q−1ηk. As a result,

∆ek = (W T Q−1W )−1W T Q−1Tdiag∆ek,S.

(27)

where

Tdiag =

T o
1
0
...
0







we

0
T o
2
...
0

· · ·
· · ·
. . .
· · ·

0
0
...
T o
m








, ∆ek,S =

∆ek,1
∆ek,2
...
∆ek,m







K ∗

.








Next,
(W T Q−1W )−1W T Q−1Tdiag

will

show

has

that
bounded

=
In

norm.

particular observe that

kK ∗k = k(W T Q−1
kQ−1k
≤ k(W T Q−1
kQ−1k

Tdiagk

W )−1W T Q−1
kQ−1k
W )−1kkW T Q−1
kQ−1k

Tdiagk.

from Theorem 15,
kk = ∞ and the result holds.

Clearly, kW T Q−1
kQ−1k Tdiagk has bounded norm. Moreover,
using a similar argument as in the proof of Theorem 18,
k(W T Q−1
kQ−1k W )−1k has bounded norm. Thus, kK ∗k is
bounded. Consequently, from (27), lim supk→∞ k∆e∗
kk =
∞ =⇒ lim supk→∞ k∆ek,ik = ∞ for some i ∈
{1, · · · , m}. However,
this implies
lim supk→∞ k∆zi
While the proposed estimator does not guarantee each ma-
licious sensor will be identiﬁed, it does guarantee that the
defender will be able to identify and remove sensors whose
attacks cause unbounded bias in the estimation error simply
by analyzing each sensor’s measurements individually. This
is due to the fact that the bias on residues of such sensors
will grow unbounded, which can be easily detected by some
χ2 detector. As a result, for each individual sensor s, we
propose the following detector at time k, which can be used
to identify malicious behavior,

k

Xj=k−T ∗+1

z2
j,s

Hs
1
≷
Hs
0

γ.

(28)

In this scenario, H s
1 is the hypothesis that sensor s is
malfunctioning and H s
0 is the hypothesis that sensor s is
working normally. In practice a sensor s who repeatedly fails
detection can be removed from consideration when obtaining
a state estimate and the proposed fusion based estimation
scheme can be adjusted accordingly.

VII. NUMERICAL EXAMPLE

We consider a numerical example where l = 7 and A(j)

and C(j) are given by

A(k) =

Ci(j) =

A11(j) A12(j)
A22(j)
0
0
0

0
0
0
0









0
0
A33(j)
0
0

0
A24(j)
0

0
0
A35(j)
A44(j) A45(j)
A55(j)

0

,









C(j) =

C1(j)
C2(j)(cid:21)

(cid:20)

,

C1,i(j)
0
0
0
0

0
C2,i(j)
0
0
0

0
0
C3,i(j)
0
0

0
0
0
C4,i(j)
0









0
0
0
0
C5,i(j)

.









where Aij (j) ∈ R3×3 and Ci,j (j) ∈ R1×3 are scaled
uniformly random matrices with Aii(j) unstable. Moreover
Q and R are appropriately sized matrices generated by
multiplying a uniform random matrix by its transpose. The
system matrices are changed independently and randomly

45

40

35

30

25

20

r
o
r
r
e
n
o
i
t
a
m

i
t
s
e

d
e
r
a
u
m
q
s
n
a
e

M

15

0

Expected Mean Squared Error vs Time

Estimation Error
Kalman Estimation Error

50

100

150

200

250

300

350

time k

Fig. 1. Expected mean squared error vs time under normal operation for
proposed fusion based estimator and the centralized Kalman ﬁlter.

every 2n time steps where n = 15 and each (A(j), C(j))
pair has equal likelihood.

We assume that the adversary biases the last 5 sensors
(measured by C2(j)) by performing the attack formulated in
Theorem 8. Here, the attacker guesses the system matrices
randomly every 2n time steps and x∗
0 is chosen identically
for each sensor. A χ2 detector (28) with window 5 and false
alarm probability αi
k = 6.9 × 10−8 is implemented for each
sensor based on their local Kalman ﬁlters. A centralized χ2
detector with window 3 derived from the optimal centralized
Kalman ﬁlter performs detection with false alarm probability
αk = 4.2 × 10−4.

In Fig. 1, we compared the optimal Kalman ﬁlter and the
proposed fusion based estimator under normal operation by
plotting their expected mean squared error as a function of
time. The estimators achieve similar performance, with the
average mean squared of the optimal Kalman ﬁlter at 22.9
and the average mean squared error of the proposed estimator
at 23.4.

In Fig. 2 and 3, we consider the system with the moving
target under attack. However, we assume the attacker is aware
of the exact sequence of time varying matrices. As such the
attacker is able to destabilize the estimation error in Fig. 2
while the sensor residues appear normal in Fig. 3.

Finally, in Fig. 4, we plot the norm of the estimation error
for both the proposed estimator and optimal Kalman ﬁlter as
a function of time when the attacker is forced to randomly
guess the system model. Here the attacker is detected in 2
time steps and perfectly identiﬁed in 10 time steps. When a
sensor is identiﬁed, it is removed from consideration when
performing fusion or optimal Kalman ﬁltering. It can be seen
that while under attack, the proposed fusion based estimator
is better able to recover from the adversary’s actions.

VIII. CONCLUSION

In this paper, we consider a moving target approach for
identifying sensor attacks in control systems. We ﬁrst consid-

 
 
 
×10 16

Estimation Error vs Time: Model Knowledgeable Attacker

7

6

5

4

3

2

1

)

m
r
o
n
(

r
o
r
r
e
n
o
i
t
a
m

i
t
s
e

0

0

5

10

15
time k

20

25

30

Fig. 2. Estimation error vs time under attack when the adversary knows
the system dynamics.

4

3

2

1

0

-1

-2

-3

0

s
e
u
d
i
s
e
r

r
o
s
n
e
s

Sensor Residues vs Time: Model Knowledgeable Attacker

5

10

15
time k

20

25

30

Fig. 3. Residue vs time under attack when the adversary knows the system
dynamics.

×10 5

Estimation Error vs Time: Moving Target

estimation error
Kalman estimation error
detection
sensor(s) identiﬁed

7

6

5

4

3

2

1

)

m
r
o
n
(

r
o
r
r
e

n
o
i
t
a
m

i
t
s
e

0

0

5

10

15

time k

Fig. 4.
Estimation error vs time under attack when the adversary does
not know the true dynamics. All sensor attacks are identiﬁed. The proposed
fusion based estimator and the centralized Kalman ﬁlter are illustrated.

ered the deterministic case and examined design considera-
tions which ensure perfect identiﬁcation. We then considered
the stochastic scenario and showed that the proposed solution
can effectively prevent inﬁnite false data injection attacks.
Finally, we constructed a robust estimator, which allows
us to identify sensors which cause unbounded estimation
error. Future work consists in examining and evaluating a
larger class of estimators in the stochastic case including the
traditional Kalman ﬁlter. Furthermore, we wish to investigate
the amount of bias the attacker can introduce into the esti-
mation error while avoiding identiﬁcation with tests on real
systems. Finally, we wish to consider more powerful adaptive
adversaries who observe a subset of sensor measurements
and perform system identiﬁcation.

REFERENCES

[1] A. A. C´ardenas, S. Amin, and S. S. Sastry, “Secure Control: Towards
Survivable Cyber-Physical Systems,” in Distributed Computing Sys-
tems Workshops, 2008. ICDCS ’08. 28th International Conference on
DOI - 10.1109/ICDCS.Workshops.2008.40.
IEEE, 2008, pp. 495–500.
analysis
[2] R. Langner,
of what
Langner
Communications, Tech. Rep., November 2013. [Online]. Available:
www.langner.com/en/wp-content/uploads/2013/11/To-kill-a-centrifuge.pdf

centrifuge: A technical
achieve,”
to

“To
Stuxnet’s

a
creators

tried

kill

[3] J. Slay and M. Miller, “Lessons learned from the Maroochy water
Springer US, 2008,

breach,” in Critical Infrastructure Protection.
pp. 73–82.

[4] A. Teixeira, D. Perez, H. Sandberg, and K. H. Johannson, “Attack
models and scenarios for networked control systems,” in Proceedings
of the 1st international conference on High Conﬁdence Networked
Systems, Beijing, China, 2012, pp. 55–64.

[5] F. Pasqualetti, F. Dorﬂer, and F. Bullo, “Attack detection and identi-
ﬁcation in cyber-physical systems,” IEEE Transactions on Automatic
Control, vol. 58, no. 11, pp. 2715–2729, 2013.

[6] Y. Liu, M. Reiter, and P. Ning, “False data injection attacks against
state estimation in electric power grids,” in Proceedings of the 16th
ACM conference on computer and communications security, Chicago,
IL, 2009.

[7] Y. Mo and B. Sinopoli, “False data injection attacks in cyber physical
systems,” in First Workshop on Secure Control Systems, Stockholm,
Sweden, April 2010.

[8] R. Smith, “A decoupled feedback structure for covertly appropriating
network control systems,” in IFAC World Congress, Milan, Italy, 2011,
pp. 90–95.

[9] Y. Mo and B. Sinopoli, “Secure control against replay attacks,” in
47th Annual Allerton Conference on Communication, Control, and
Computing, Sept 2009, pp. 911–918.

[10] A. Teixeira, I. Shames, H. Sandberg, and K. H. Johansson, “Revealing
stealthy attacks in control systems,” in 50th Annual Allerton Confer-
ence on Communication, Control, and Computing, Monticello, Illinois,
2012, pp. 1806–1813.

[11] Y. Mo, S. Weerakkody, and B. Sinopoli, “Physical authentication
of control systems: designing watermarked control inputs to detect
counterfeit sensor outputs,” IEEE Control Systems Magazine, vol. 35,
no. 1, pp. 93 – 109, 2015.

[12] S. Weerakkody, Y. Mo, and B. Sinopoli, “Detecting integrity attacks
on control systems using robust physical watermarking,” in 53rd IEEE
Conference on Decision and Control, Los Angeles, California, 2014,
pp. 3757–3764.

[13] F. Miao, Q. Zhu, M. Pajic, and G. J. Pappas, “Coding sensor outputs
for injection attacks detection,” in 53rd IEEE Conference on Decision
and Control, Los Angeles, California, 2014, pp. 5776–5781.

[14] Y. Yuan and Y. Mo, “Security in cyber-physical systems: Controller
design against known-plaintext attack,” in 54th IEEE Conference on
Decision and Control.

IEEE, 2015, pp. 5814–5819.

[15] S. Sundaram, M. Pajic, C. N. Hadjicostis, R. Mangharam, and G. J.
Pappas, “The wireless control network: monitoring for malicious
behavior,” in 49th IEEE Conference on Decision and Control.
IEEE,
2010, pp. 5979–5984.

 
 
 
 
 
 
[16] H. Fawzi, P. Tabuada, and S. Diggavi, “Secure state-estimation for
dynamical systems under active adversaries,” in 49th Annual Allerton
Conference on Communication, Control, and Computing. IEEE, 2011,
pp. 337–344.

[17] ——, “Secure estimation and control for cyber-physical systems under
adversarial attacks,” IEEE Transactions on Automatic Control, vol. 59,
no. 6, pp. 1454–1467, 2014.

[18] M. S. Chong, M. Wakaiki, and J. P. Hespanha, “Observability of
linear systems under adversarial attacks,” in 2015 American Control
Conference.

IEEE, 2015, pp. 2439–2444.

[19] Y. Shoukry and P. Tabuada, “Event-triggered state observers for
sparse sensor noise/attacks,” IEEE Transactions on Automatic Control,
vol. 16, no. 8, pp. 2079–2091, 2016.

[20] S. Mishra, Y. Shoukry, N. Karamchandani, S. Diggavi, and P. Tabuada,
“Secure state estimation: optimal guarantees against sensor attacks in
the presence of noise,” in 2015 IEEE International Symposium on
Information Theory (ISIT).

IEEE, 2015, pp. 2929–2933.

[21] Y. Nakahira and Y. Mo, “Dynamic state estimation in the presence
of compromised sensory data,” in 54th IEEE Conference on Decision
and Control.

IEEE, 2015, pp. 5808–5813.

[22] M. Pajic, J. Weimer, N. Bezzo, P. Tabuada, O. Sokolsky, I. Lee, and
G. J. Pappas, “Robustness of attack-resilient state estimators,” in 5th
ACM/IEEE International Conference on Cyber-Physical Systems (with
CPS Week 2014).

IEEE Computer Society, 2014, pp. 163–174.

[23] S. Weerakkody and B. Sinopoli, “Detecting integrity attacks on control
systems using a moving target approach,” in 54th IEEE Conference
on Decision and Control.

IEEE, 2015, pp. 5820–5826.

[24] S. Weerakkody, B. Sinopoli, S. Kar, and A. Datta, “Information ﬂow
for security in control systems,” in To appear, 55th IEEE Conference
on Decision and Control.
IEEE, 2016.

[25] S.-L. Sun and Z.-L. Deng, “Multi-sensor optimal information fusion
kalman ﬁlter,” Automatica, vol. 40, no. 6, pp. 1017–1023, 2004.
[26] Q. Gan and C. J. Harris, “Comparison of two measurement fusion
methods for kalman-ﬁlter-based multisensor data fusion,” IEEE Trans-
actions on Aerospace and Electronic systems, vol. 37, no. 1, pp. 273–
279, 2001.

[27] L. L. Scharf, Statistical signal processing. Addison-Wesley Reading,

MA, 1991, vol. 98.

IX. APPENDIX: PROOF OF THEOREM 12
We ﬁrst proof sufﬁciency. Suppose ∃λ ∈ Λ1 ∩ Λ2 and

α1 ∈ CPi ri(λ,1), α2 ∈ CPi ri(λ,2) such that

s α1 = V λ,2
V λ,1

s α2 6= 0.

(29)

Let ¯V λ,j be given by

vλ,j
1,1

· · ·

vλ,j
r1,1

· · ·

vλ,j
1,lλ,j

· · ·

h
and let xa

0(j) = ¯V λ,jαj. Suppose

vi,j
rlλ,j ,lλ,j

i

Dsda

k(j) = Cs(j)A(j)kxa
0(j)
1
(k − 1)!

s,1 αj + · · · +

= λkV λ,j

= λkV λ,j

s,1 αj + · · · +

1
(r(λ) − 1)!

s,k αj, k ≤ r(λ)

dk−1
dλk−1 (λk)V λ,j
dr(λ)−1
dλr(λ)−1 (λk)V λ,j
k > r(λ),

s,r(λ)αj,

(30)

s,k is the kth row of V λ,j

where V λ,j
Dsda
can be constructed by adding the conjugate so that

. From (29), Dsda
k(1) =
k(j) is not real, then an attack

k(2). Note that if Dsda

s

Dsda

k(j) = Cs(j)A(j)kxa
= Cs(j)A(j)k(xa

0(j) + Cs(j)A(j)kxa
0(j) + xa
0(j))

0(j)

Therefore,

Cs(1)A(1)k(xa

0(1) + xa

0(1)) = Cs(2)A(2)k(xa

0(2) + xa

0(2)).

The attack can be scaled so it is nonzero for some time k
from (30) and (29). Thus, the result holds.

We now prove the necessary assumption. Without
loss of generality, suppose the ﬁrst z eigenvalues of
k = λ2
Λ1 and Λ2
are the same so that λ1
for
k
k ≤ z. Assume the rest of
the eigenvalues are
let Λ1 = {λ1, · · · , λq1 } and
In particular
different.
Λ2 = {λ1, · · · , λz, λq1+1, · · · , λq1+q2−z}. Let r∗(λ, j) =
maxi ri(λ, j), characterize the maximum block size of eigen-
value λ for A(j) and let τ + 1 ≥ 2n.
Deﬁne G(λi, j) ∈ Cτ +1×r∗(λi,j) as

1
λi
λ2
i
...
λτ
i











0
1
2λi
...
τ λτ −1
i

· · ·
· · ·
· · ·

· · ·
· · ·

0
0
0
...
dr∗(λi ,j)−1
dr∗(λi,j)−1 (λτ
i )











.

(31)

1
(r∗(λi,j)−1)!

where the kth column is obtained by taking entrywise, the
corresponding (k − 1) derivative of the associated entry in
the ﬁrst column and dividing by (k − 1)!. Let Ga, Gb, Gc be
given by

)T

( ˜V λz ,2
s

)T

T

,

(cid:3)

· · · G(λz, 1) G(λz, 2)
(cid:3)

,

. Note that G∗ ∈ Cτ +1×κ

∈ CPk rk(λi,j)

and deﬁne

,

· · · G(λq1 , 1)
(cid:3)
· · · G(λq1+q2−z, 2)
(cid:3)

.

Ga =
Gb =
Gc =

G(λ1, 1) G(λ1, 2)
(cid:2)
G(λz+1, 1)
(cid:2)
G(λq1+1, 2)
(cid:2)
Finally, let G∗ =
where κ ≤ 2n by construction.
Consider vectors ηi,j
s , ˜V c

s , ˜Vs as

s , ˜V b

˜V λi,j
s

, ˜V a

(cid:2)

Ga Gb Gc

(cid:3)

˜V λi,j
s =

V λi,j
s,1 ηi,j

· · · V λi,j

s,r∗(λi,j)ηi,j

T

,

h
( ˜V λ1,1
s

)T

( ˜V λ1,2
s

)T

· · ·

(cid:2)
( ˜V λz+1,1
s

h

)T

· · ·

λq1 ,1
( ˜V
s

)T

i

i
( ˜V λz ,1
s
T

,

)T
( ˜V b
s )T

· · ·

λq1 +q2−z,2
( ˜V
s
s )T

.

( ˜V c

)T

T

,

i

λq1 +1,2
( ˜V
s
h
( ˜V a
s )T
(cid:2)

˜V a
s =

˜V b
s =

˜V c
s =
˜Vs =

(cid:3)
It can be shown (Theorem 11) that an attack exists only
if there exists some nontrivial ˜Vs in the null space of
G∗. We observe by construction that G∗ has rmin =
identical columns. Thus,
null(G∗) ≥ rmin. Let ˜G∗ ∈ Cτ +1×rmax be obtained by
P
deleting duplicate columns of G∗ where rmax ≤ 2n ≤ τ + 1
is given by

z
i=1 minj r∗(λi, j) pairs of

z

Xi=1

max
j

r∗(λi, j) +

q1

q2+q1−1

r∗(λi, 1) +

r∗(λi, 2).

Xi=z+1

Xi=q1+1

Let ˜G∗
last τ + 1 − rmax rows of ˜G∗.

trunc be a square matrix obtained by removing the

We ﬁrst show that

T
trunc is empty.
Suppose it was not. This would imply the existence of a

the null space ˜G∗

complex nonzero polynomial p∗(x) of degree rmax with the
property

p∗(λk) = 0, · · · ,

d(maxj r∗(λk,j)−1)p∗
dx

(λk) = 0,

for 1 ≤ k ≤ z,

p∗(λk) = 0,

dp∗
dx

(λk) = 0, · · · ,

dr∗(λi,1)−1p∗
dx

(λk) = 0,

for z + 1 ≤ k ≤ q1, and

p∗(λk) = 0,

dp∗
dx

(λk) = 0, · · · ,

dr∗(λi,2)−1p∗
dx

(λk) = 0,

for q1 + 1 ≤ k ≤ q1 + q2 − z.

But this contradicts the fundamental theorem of algebra
since it would imply a polynomial of degree τ has τ + 1
zeros. Thus, the null space ˜G∗

T
trunc is empty.

Therefore, by the rank nullity theorem ˜G∗

trunc is full rank
and therefore ˜G∗ is full rank. Consequently, rank(G∗) ≥
rmax. However, null(G∗) ≥ rmin and the number of
columns in G∗ is rmax + rmin. Therefore, strict equality
holds and rank(G∗) = rmax and null(G∗) = rmin. As a
result, one excites the null space of G∗ only by exciting
pairs of identical columns in G∗.

Therefore, ˜Vs is in the null space of G∗ only if for 1 ≤

k ≤ z

˜V λk,1
s

= − ˜V λk,2
s

.

However, there exists a nonzero attack only if for some k
there exists a solution

˜V λk,1
s

= − ˜V λk,2
s

6= 0.

The result directly follows.

