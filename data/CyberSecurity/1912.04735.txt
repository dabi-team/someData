9
1
0
2

c
e
D
8

]

R
C
.
s
c
[

1
v
5
3
7
4
0
.
2
1
9
1
:
v
i
X
r
a

IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

1

Covert Channel-Based Transmitter
Authentication in Controller Area Networks

Xuhang Ying, Member, IEEE, Giuseppe Bernieri, Member, IEEE, Mauro Conti, Senior Member, IEEE,
Linda Bushnell, Fellow, IEEE, and Radha Poovendran, Fellow, IEEE

Abstract—In recent years, the security of automotive Cyber-Physical Systems (CPSs) is facing urgent threats due to the widespread
use of legacy in-vehicle communication systems. As a representative legacy bus system, the Controller Area Network (CAN) hosts
Electronic Control Units (ECUs) that are crucial for the vehicles functioning. In this scenario, malicious actors can exploit the CAN
vulnerabilities, such as the lack of built-in authentication and encryption schemes, to launch CAN bus attacks (e.g., suspension,
injection, and masquerade attacks) with life-threatening consequences (e.g., disabling brakes). In this paper, we present TACAN
(Transmitter Authentication in CAN), which provides secure authentication of ECUs on the legacy CAN bus by exploiting the covert
channels, without introducing CAN protocol modiﬁcations or trafﬁc overheads (no extra bits or CAN messages are used). TACAN turns
upside-down the originally malicious concept of covert channels and exploits it to build an effective defensive technique that facilitates
transmitter authentication via a centralized, trusted Monitor Node. TACAN consists of three different covert channels for ECU
authentication: 1) the Inter-Arrival Time (IAT)-based, leveraging the IATs of CAN messages; 2) the Least Signiﬁcant Bit (LSB)-based,
concealing authentication messages into the LSBs of normal CAN data; and 3) a hybrid covert channel, exploiting the combination of
the ﬁrst two. In order to validate TACAN, we implement the covert channels on the University of Washington (UW) EcoCAR (Chevrolet
Camaro 2016) testbed. We further evaluate the bit error, throughput, and detection performance of TACAN through extensive
experiments using the EcoCAR testbed and a publicly available dataset collected from Toyota Camry 2010. We demonstrate the
feasibility of TACAN and the effectiveness of detecting CAN bus attacks, highlighting no trafﬁc overheads and attesting the regular
functionality of ECUs.

Index Terms—Transmitter authentication, Controller Area Network (CAN), covert channel, Cyber-Physical System (CPS) security,
intrusion detection

(cid:70)

1 INTRODUCTION

N OWADAYS, the technological evolution enables an in-

creasingly more invasive interconnection between au-
tomobiles and digital devices. Automotive manufacturers
have developed a variety of innovative features such as the
smart transportation data assistants by leveraging network
connectivity such as the vehicle-to-vehicle communication.
While these features greatly improve the customer experi-
ence, Electronic Control Units (ECUs) that are externally ac-
cessible provide an entry point for an adversary to inﬁltrate
the originally isolated in-vehicle communication network,
notably the Controller Area Network (CAN) [2], [3]. Since
the CAN bus is a broadcast medium without authentication,
a compromised ECU can masquerade as any targeted ECU
by transmitting messages with the forged message ID (mas-
querade attack [4]). Modern externally accessible ECUs with
additional connectivity interfaces such as cellular, Wi-Fi or
Bluetooth disrupt the closed in-vehicle network assumption.
Consequently, the CAN bus is vulnerable to cyber attacks,

• X. Ying, L. Bushnell, and R. Poovendran are with the Department of
Electrical and Computer Engineering, University of Washington, Seattle,
WA, 98195. E-mail: {xhying, lb2, rp3}@uw.edu

• G. Bernieri and M. Conti are with the Department of Mathematics,
University of Padua, Padua, Italy. Email: {bernieri, conti}@math.unipd.it
• This work was supported in part by NSF grant CNS-1446866 under the
CPS program, ONR grants N00014-16-1-2710 and N00014-17-1-2946,
and ARO grant W911NF-16-1-0485. This work was also supported by a
grant of the Italian Presidency of the Council of Ministers.
• Part of this work was presented at ACM/IEEE ICCPS 2019 [1].

Manuscript received April XX, 2019; revised August XX, 2019.

such as disabled brakes [4] and remotely controlled steer-
ing [5]. Despite of the well-known security vulnerabilities
of the CAN bus, its widespread use imposes an urgent
need for security solutions that guarantee the functionality
and safety of today’s automobiles and future’s autonomous
cars [6], [7].

The use of cryptographic primitives, such as message au-
thentication, represents one possible way to defend against
CAN bus attacks (notably the masquerade attack). However,
due to the low throughput and tight bit budget of the CAN
protocol, it is challenging to deploy cryptographic schemes
in practice and current solutions, such as [8], [9], [10], [11],
would require protocol modiﬁcations or introduce trafﬁc
overheads. An alternative is to deploy anomaly-based Intru-
sion Detection Systems (IDSs) without modifying the CAN
protocol [12], [13], [14], [15], including timing-based and
voltage-based IDSs. The timing-based IDS in [12] exploits
CAN message periodicity to estimate clock skew as a unique
ﬁngerprint to detect masquerade attacks. Nevertheless, it
was later shown to be ineffective against the cloaking attack
that modiﬁes the inter-transmission time to emulate the
clock skew of the targeted ECU [16], [17]. The voltage-
based IDSs [14], [15], [18], [19] attempt to ﬁngerprint the
attacker through voltage signal characteristics. However, if
the attacker uses IDs that the compromised ECU is allowed
to use under normal conditions, the attack will not be
detected.

In this work, we present TACAN, a novel security frame-
work that allows a centralized, trusted Monitor Node (MN)

 
 
 
 
 
 
IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

2

Fig. 1: Illustration of TACAN. Legitimate ECUs transmit
unique authentication messages that are embedded into the
timing and LSBs of normal CAN messages (e.g., A1, B2, and
C3) using the proposed covert channel methodologies. The
Monitor Node authenticates transmitting ECUs by verifying
the received authentication messages. If the compromised
ECUs cannot generate valid authentication messages, then
the attack will be detected by the Monitor Node.

to verify the authenticity of a transmitting ECU and detect
CAN bus anomalies. Fig. 1 highlights the main idea of our
TACAN framework. In TACAN, a master key is shared
between an ECU and the MN for generating shared session
keys. Consistently with [8], [9], [11], we assume that the
keys are stored in the tamper-resistant memory of a security
module such as the Trusted Platform Module (TPM) [20].
The ECU embeds unique authentication messages into CAN
messages and continuously transmits them through covert
channels, which can be received and veriﬁed by the MN.

Therefore, if the attacker has no access to the TPM of
the targeted ECU, it cannot use the compromised ECU or
external device to generate valid authentication messages,
thus causing veriﬁcation failures and triggering the alarm
at the MN side. Moreover, CAN bus attacks, such as the
suspension and injection attacks, that interrupt the transmis-
sion of normal CAN messages with embedded authentica-
tion messages will cause continuous authentication message
loss or reception failures, and therefore they will be detected
by TACAN. The main beneﬁts of using covert channels
for TACAN are that they do not introduce protocol mod-
iﬁcations or trafﬁc overheads (i.e., extra bits or messages).
In addition, by requiring ECUs to transmit authentication
messages much less frequently than per-message authenti-
cation schemes, TACAN can signiﬁcantly reduce the com-
putational burden of the resource-constrained ECUs.

Contributions:
tributions:

In this paper, we make the following con-

• We identify and exploit covert channels to facilitate
ECU authentication on the CAN bus. Hence, covert
channels are used for security instead of malicious
communication.

• We propose TACAN and three novel covert channels
for authentication message transmission: 1) the IAT
(Inter-Arrival Time)-based covert channel that mod-
iﬁes the inter-transmission times (ITTs) of normal
CAN messages to affect the IATs observed by the
MN; 2) the LSB (Least Signiﬁcant Bit)-based covert
channel that hides the authentication bits in the LSBs
of the data payload of normal CAN messages; 3) an
hybrid covert channel that combines the ﬁrst two
covert channels.
For the IAT-based covert channel, we analyze and

•

model the bit error probability as a function of covert
channel parameters. We also study its impact on the
CAN bus schedulability in terms of the worst-case
response time.

• We validate TACAN and the covert channels on the
UW EcoCAR [21]. We also conduct extensive experi-
ments to evaluate the performance of TACAN using
the EcoCAR testbed as well as the publicly available
Toyota dataset [22]. Our results show that with a
properly conﬁgured IAT-based covert channel, the
experimental bit error probabilities are within 0.3%.
As for the LSB-based covert channel, its bit error
probability is equal to that of a typical CAN bus,
which is 3.1 × 10−7%. The hybrid covert channel
generally leads to higher channel and authentication
throughput. We also show that our TACAN-based
detector can detect CAN bus attacks with a very high
detection probability, while keeping the false alarm
probability less than 0.33% by setting the detection
threshold to 2 or higher.

Organization. The remainder of this paper is organized
as follows. Section 2 reviews the related work. Section 3
presents our system and adversary models. Section 4
presents TACAN. Section 5 presents experimental evalua-
tion. Section 6 concludes this paper.

2 RELATED WORK

Recent experimental studies have demonstrated that an
attacker is able to inﬁltrate in-vehicle ECUs physically or
remotely and mount cyber attacks that would cause po-
tentially life-threatening consequences by disabling brakes
or overriding steering [4], [23]. One way to secure the
CAN bus is to deploy anomaly-based IDSs based on trafﬁc
analysis (e.g., timing/frequency [24]), entropy [13], or phys-
ical invariants such as clock skew [12] and voltage signal
characteristics [14], [15], [18], [19]. For clock skew-based
IDSs, it has been shown in [16], [17] that the adversary
can effectively manipulate the timing of transmitted mes-
sages to emulate the clock skew of the targeted ECU and
evade the detection. While voltage-based IDSs are effective
against ongoing masquerade attackers, they cannot detect
a compromised ECU before attacks are launched (e.g., a
stealthy attacker may not launch the attack until the car is
in drive mode). In addition, it has been recently shown in
[25] that the extra wires required by voltage-based IDSs may
introduce new attack surfaces.

Researchers have also proposed to add cryptographic
primitives such as Message Authentication Code (MAC)
to the CAN bus, including CANAuth [8], LCAP [9], Ca-
CAN [10], and LeiA [11]. Nevertheless, the deployment of
the above schemes faces several practical challenges. First,
the CAN protocol has a tight bit budget for each CAN frame
(up to 8 bytes for payload) and a low bus speed (typically
500 kbps). As a result, authentication information will have
to consume space in the CAN message such as the ID or data
ﬁeld or introduce additional CAN messages, which leads to
trafﬁc overheads or an increase in the bus load [9], [10], [11].
Second, it is also computationally expensive for resource-
constrained ECUs to perform cryptographic calculations for

ECU1CAN Bus…Monitor Node (TACAN RX)TACAN TXECU2TACAN TXECUnTACAN TXA110..01B211..0101..10C3A1: 10..01B2: 11..01C3: 01..10Verification:IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

3

each message. In this work, we focus on transmitter authen-
tication by having each ECU transmit unique authentication
messages as its digital ﬁngerprint. The main novelty of this
work is the use of covert channels, a well-known malicious
technique that is converted into defensive applications for
authentication purposes. By leveraging covert channels as
out-of-band channels, our scheme can avoid trafﬁc over-
heads without requiring protocol modiﬁcations.

In literature, a covert channel refers to a type of cyber-
attack that maliciously transfers information between two
possibly malicious entities by exploiting the communication
channels that are not intended for information transfer. It
has been widely studied in computer network protocols
[26]. Broadly speaking, there are two categories of covert
channels: timing-based and storage-based. In timing-based
covert channels, only the timing of events or trafﬁc is mod-
iﬁed to transfer information but the data contents remain
intact. The storage-based covert channels hide data in a
shared resource (e.g., a storage location).

Recently, researchers start exploring covert channels in
the context of embedded networks. In [27], Taylor et al.
discussed the use of covert channels for integrity check
for the Modbus/TCP protocol used by industrial control
system applications. In [28], Groza et al. proposed a time-
covert authentication scheme for the CAN protocol, which
uses ﬁne-grained timing control to embed authentication
information in clock skews. However, timing control in the
order of tens of nanoseconds is challenging in practice, and
the proposed scheme is very sensitive to message priority
and the trafﬁc. In addition, since the clock skew needs to
be estimated from arrival times of many CAN messages, it
seems to contradict with the proposed scheme that performs
authentication for each CAN message.

In this paper, we develop three practical covert channels
for transmitter authentication on the legacy CAN bus, based
on the periodicity of CAN messages and bit presentation
of ﬂoating sensor values. We also evaluate the proposed
covert channels using CAN trafﬁc data collected from real
vehicles.

3 SYSTEM AND ADVERSARY MODELS

In this section, we present the system model (Section 3.1)
and the adversary model (Section 3.2) for the CAN bus. A
list of frequently used notations is provided in Table 1.

3.1 System Model

CAN bus. The CAN bus is a broadcast medium that allows
all connected ECUs to communicate with each other and
observe all CAN message transmissions. As shown in Fig. 2,
each CAN frame or message has a set of predeﬁned ﬁelds,
including the Start of Frame (SOF) ﬁeld, the Arbitration ﬁeld
(including a 11-bit message ID for the base frame format
or a 29-bit message ID for the extended frame format), the
Control ﬁeld, the Data ﬁeld (up to 8 bytes), the Cyclic Re-
dundancy Check (CRC) ﬁeld, the Acknowlegement (ACK)
ﬁeld, and the End of Frame (EOF) ﬁeld.

When two (or more) ECUs attempt to transmit messages
at the same time, a procedure based on priority (a smaller
message ID indicates a higher priority) called arbitration is

TABLE 1: Frequently used notations.

Notation Description
M K(k)
SK(k)
C(k)
s
C(k)
m
T
S
ti
ai
ηi

Master key (MK) for message ID k
Session key (SK) for message ID k
Session key counter for message ID k
Authentication message counter for message ID k
CAN message period (sec)
Clock skew (ppm)
Transmit time of the i-the CAN message
Arrival time of the i-the CAN message
Noise in the arrival time of the i-the CAN message
Inter-transmission time (ITT) between the (i − 1)-th
and the i-th messages
Inter-arrival time (IAT) between the (i − 1)-th
and the i-th messages
The i-th sample of averaged IATs
Deviation (added to ITTs at the transmitter side)
Window length or number of least signiﬁcant bits
Mean and standard deviation of IATs

∆ti

∆ai

∆¯a[i]
δ
L
µ, σ

Fig. 2: Illustration of CAN frame structure.

used to determine the winner. Besides, CAN messages do
not have transmit timestamps and do not support encryp-
tion or authentication.

Clock skew. On automotive CAN buses, the majority of
CAN messages are transmitted periodically as per ECUs’
local clocks1, and there is no clock synchronization in CAN.
Hence, the frequencies of local clocks are different, as cap-
tured by the notion of clock skew – a physical property
caused by variations in the clock’s hardware crystal.

A(t) = C(cid:48)

Let CA(t) be the time reported by clock A and Ctrue(t) =
t be the true time. According to the Network Time Pro-
tocol (NTP) [29], the clock offset of clock A is deﬁned as
OA(t) = CA(t) − Ctrue(t), and the clock skew is the ﬁrst
derivative of clock offset, i.e., SA(t) = O(cid:48)
A(t) − 1,
which is measured in microseconds per second (µs/s) or
parts per million (ppm). In the absence of a true clock, the
relative clock offset and relative clock skew can be deﬁned
with respect to a reference clock. Throughout this paper, we
consider the receiving ECU’s clock as the reference clock.
Hence, we refer to the relative clock offset and the relative
clock skew as clock offset and clock skew, respectively.
Timing model. As shown in Fig. 3, we let ti be the transmit
time of message i (assuming t0 = 0) and ∆ti = ti − ti−1 be
the inter-transmission time (ITT) according to the transmit-
ter’s clock. If messages are periodically transmitted every T
seconds, we have ∆ti = T and ti = iT . In the ideal case
where the transmitter’s clock is synchronized with the re-
ceiver’s clock, we have t(cid:48)
i is the transmit time

i = ti, where t(cid:48)

1. In the UW EcoCAR (Chevrolet Camaro 2016) [21], all of the 89
messages with distinct IDs are periodic with periods ranging from
10 ms to 5 sec. In the Toyota Camry 2010 [22], 39 of 43 messages
can be considered periodic. In the Dodge Ram Pickup 2010 in [12],
all of the 55 distinct messages are periodic. While CAN message
periodicity depends on the manufacturer and the model, the above
examples suggest that periodic CAN messages are very common and
even dominant on the CAN bus of commercial automobiles.

SOFMessage IDRTRDLCDataCRCEOFACKDELCRCDELACKArbitrationControlDataCRCACKEOFSOFIDERB0IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

4

3.2 Adversary Model

We consider an adversary who attempts to inﬁltrate the
CAN bus and launch stealthy attacks without being de-
tected. We assume that the adversary can passively monitor
the CAN bus and observe all ongoing CAN transmissions.
It has full knowledge of the deployed covert channels and
thus can observe all authentication messages that are being
transmitted. In practice, there are usually two ways of
gaining unauthorized access to the CAN bus: 1) compromise
an in-vehicle ECU physically or remotely [4], or 2) connect
external device (a malicious ECU) to the CAN bus [31]. We
assume that the adversary has no access to the keys stored
in the TPM of the compromised and other legitimate ECUs.
The adversary can use the compromised or malicious
ECU to perform three representative attacks: 1) suspension
attack, 2) injection attack, and 3) masquerade attack, as
considered in [12], [16], [32]. As illustrated in Fig. 4(a), a
suspension attacker prevents the compromised ECU from
transmitting certain messages, whereas an injection attacker
fabricates and injects CAN messages of arbitrary choices of
message ID, content, and timing, as sketched in Fig. 4(b).
Injection attacks can lead to more sophisticated attacks such
as the DoS attack [24] and the bus-off attack [33]. In the
masquerade attack, the adversary will need to compromise
two ECUs – one is weakly compromised and acts as the
weak attacker who can only launch suspension attacks,
whereas the other one is fully compromised and acts as
the strong attacker who can launch both suspension and
injection attacks. In the example in Fig. 4(c), the adversary
suspends the weakly compromised ECU2 from transmitting
messages with ID=0x22 and uses the fully compromised
ECU1 to inject messages with ID=0x22 claiming to originate
from ECU2. Compared to the suspension and injection
attacks, the masquerade attack is stealthier and thus more
difﬁcult to detect.

4 TACAN

In this section, we present the architecture (Section 4.1)
and the transmitter authentication protocol of TACAN (Sec-
tion 4.2). We then present three covert channels for trans-
mitting authentication messages: 1) IAT-based (Section 4.3),
2) LSB-based (Section 4.4), and 3) hybrid (Section 4.5).

4.1 TACAN architecture

As illustrated in Fig. 5, TACAN consists of in-vehicle ECUs
and a centralized, trusted Monitor Node (MN). The MN
is installed by the manufacturer during production and
requires direct physical access by authorized parties (e.g., an
authorized repairs shop) to prevent potential tampering and
compromises. The deployed covert channels are conﬁgured
during production or re-conﬁgured during maintenance to
ensure successful establishment of one-way communication
of authentication information from ECUs to the MN.

Similar to [8], [9], [11], we assume that a master key
(MK) is pre-shared between each ECU and the MN, and
it is stored in the TPM. Updating of MKs (e.g., when adding
or replacing an ECU) should again require direct physical
access by authorized parties to the involved ECUs. The
procedure of key updating is outside the scope of this paper.

Fig. 3: Illustration of our timing model. Due to the clock
skew of the transmitter’s clock, the actual transmit time of
message i is t(cid:48)
i = ti − Oi as per the receiver’s clock, where
Oi is the accumulated clock offset up to message i.

according to the receiver’s clock. Nevertheless, in practice,
there exists a clock skew in the transmitter’s clock relative to
the reference clock, which introduces an offset Oi between
the two clocks. Hence, the actual transmit time is t(cid:48)
i = ti−Oi
according to the reference clock.

While the clock skew may be slowly varying due to
factors including the temperature, it is almost constant over
a short duration. Given a clock skew S, the relationship
between the elapsed time ti in the transmitter’s clock and
i)/t(cid:48)
the elapsed time t(cid:48)
i.
i = S
Hence, we have t(cid:48)
1+S ti. To
capture random jitters, we assume Oi = S
1+S ti + (cid:15)i, where
(cid:15)i’s are i.i.d. zero-mean random variables.

i in the receiver’s clock is S = (ti − t(cid:48)
i = ti/(1+S), and Oi = ti −t(cid:48)

After a random network delay of di (due to message
transmission, propagation, arbitration, and reception) and
the zero-mean quantization noise qi [30], the arrival time of
message i is

ai = ti − Oi + di + qi

= ti −

S
1 + S

ti + ηi =

1
1 + S

ti + ηi,

(1)

where ηi = −(cid:15)i + di + qi is the total noise in the arrival
timestamp. Since periodic CAN messages have the same
message ID and data length over time, it is reasonable
to assume constant-mean network delays, i.e., E[di] = d.
Hence, ηi’s can be modeled as i.i.d. random variables with
a mean of d and a variance of σ2
η.
Denote the inter-arrival time (IAT) between messages

(i − 1) and i as ∆ai, which is given by

∆ai = ai − ai−1 =

1
1 + S

∆ti + ni,

(2)

where ni = ηi − ηi−1 is the noise term. For messages that
are transmitted every T seconds, we have ∆ti = T . Hence,
the IATs have a mean of

and a variance of

µ (cid:44) E[∆ai] =

T
1 + S

σ2 (cid:44) Var[∆ai] = 2σ2
η.

(3)

(4)

When the clock skew is small (in the order of 100s of ppm),
the impact of clock skew is negligible, and we have µ ≈ T .

TXRXIdeal𝑡"=0𝑡%=𝑡"+Δ𝑡%Actual𝑡%(=𝑡%−𝑂%𝑡+(=𝑡+−𝑂+	𝑡-(=𝑡-−𝑂-𝑎"=𝑡"(+𝑑"+𝑛"𝑎%=𝑡%(+	𝑑%+𝑛%𝑎+=𝑡+(+𝑑++𝑛+𝑎-=𝑡-(+𝑑-+𝑛-Msg 0Msg 1Msg 2Msg 3𝑡"(=𝑡"−𝑂"……𝑡+=𝑡%+Δ𝑡+𝑡-=𝑡++Δ𝑡-IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

5

• The authentication message counter C (k)

m is a counter
that is incremented by one before being used to
generate the next authentication message.

We assume that M K (k), SK (k) and C (k)
in the TPMs of both the ECU and the MN.

s

are securely stored

(a) Suspension attack

Session key generation. The session key generation func-
tion takes a master key M K (k) and a session key counter
C (k)
as input and outputs a session key SK (k) (Fig. 6).
s

As we can see, both the ECU and the MN ﬁrst increment
s + 1. Then, they perform the

s ← C (k)

C (k)
by one, i.e., C (k)
s
following operation on C (k)

s using M K (k),

(b) Injection attack

SK (k) = HM AC(M K (k), C (k)

s

),

(c) Masquerade attack

Fig. 4: Three representative attacks on the CAN bus. (a) In
the suspension attack, a legitimate message is prevented
from being transmitted. (b) In the fabrication attack, the
adversary can use the compromised ECU to inject arbitrary
CAN messages. (c) In the masquerade attack, the adversary
stops ECU2 from transmitting messages with ID=0x22 and
uses ECU1 to transmit messages with ID=0x22.

During operation, the ECU and the MN will generate the
same session key (SK) from the MK and the synchronized
SK counter, and further use it to generate and verify au-
thentication messages, respectively. We now describe the
transmitter authentication protocol in more detail.

4.2 Transmitter Authentication Protocol

Inspired by the work in [11], the MN in TACAN performs
unidirectional authentication of ECUs. In this section, we
summarize the key protocol parameters and describe the
procedures of session key generation as well as authentica-
tion message generation and veriﬁcation.

Authentication protocol parameters. In TACAN, both the
ECU that transmits CAN messages with ID or priority equal
to k 2 and the MN store a tuple (cid:104)M K (k), C (k)
m (cid:105),
where

, SK (k), C (k)

s

• The master key M K (k) is a long term pre-shared key

that is used to generate the session key;

• The session key counter C (k)

is a counter that is
incremented by one at every vehicle start-up or when
C (k)
m overﬂows; it is used to generate the session key;
• The session key SK (k) is a key used to generate au-
thentication messages for CAN messages with ID=k;

s

2. In our earlier work [1], we assumed one message ID per ECU. In
practice, however, an ECU may transmit CAN messages with different
IDs. In this case, TACAN needs to be deployed for each message ID.

where HM AC(·) refers to the Hash-based Message Authen-
tication Code (MAC) algorithm [34]. Implementations of the
protocol are free to use whichever hashing algorithm for
HMAC and sizes of keys that are deemed strong enough.
One possible choice would be HMAC-SHA256 and 256 bits
for keys. When a new session key is generated, C (k)
is reset
to zero.

s

In the case of de-synchronized session key counters, a
re-synchronization procedure such as the one in [11] will be
needed, which may require message exchange between the
ECU and the MN. The detailed design of such procedure is
beyond the scope of this work.

Authentication message generation. As shown in Fig. 7, the
ECU that uses message ID k increments C (k)
m by one and
then generates the authentication message A(k)
m as follows:

A(k)

m = C (k)

m ||HM AC(SK (k), C (k)

m ),

(5)

where “||” denotes the concatenation of the counter value
and the digest. For the scope of this work, we assume that
keys, counter values, and digests for TACAN are repre-
sented as bit strings.

The generated authentication message is then transmit-
ted using the covert channel and received by the MN. Next,
we will describe the veriﬁcation procedure that happen on
the MN side.

Authentication message veriﬁcation. Algorithm 1 describes
the authentication message veriﬁcation procedure. For each
received authentication message ˆA(k)
m , the MN ﬁrst extracts
the counter value ˆC (k)
m and the corresponding digest ˆh
(Line 1). Then the MN increments its authentication message
m by one and compares it against ˆC (k)
counter C (k)
m (Lines 2-
3). If the counter values are the same, the MN computes the
expected digest h (Line 4) and compares it against ˆh (Line 5).
If the digests are the same, the algorithm returns True, which
indicates successful authentication message veriﬁcation. On
the other hand, the mismatch of either the counter values
or the digests means veriﬁcation failure and indicates a
possible CAN bus anomaly.

Authentication frame structure. In TACAN, authentica-
tion messages are independent of CAN messages. They
are encapsulated in authentication frames and transmitted
through the covert channel. Each authentication frame con-
sists of four ﬁelds: 1) a SOF ﬁeld, 2) a Data ﬁeld, 3) a CRC
ﬁeld, and 4) EOF ﬁeld. The SOF and EOF ﬁelds indicate the

ECU1CAN Bus…ECU2ECUn112233CAN Bus…ECUn112233XECU1ECU2CAN Bus…ECUn11223322ECU1(Strong)ECU2(Weak)IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

6

Fig. 5: Illustration of the architecture and the transmitter authentication protocol of TACAN. A master key is shared and
a session key counter is synchronized between each ECU and the MN. The ECU and the MN generate the same session
key from the master key and the session key counter, and they use it to generate and verify authentication messages,
respectively. Unsuccessful reception and veriﬁcation of authentication messages implies a possible CAN bus anomaly. The
master key, the session key counter, and the generated session keys are stored securely in the TPM of the ECU and the MN.

Algorithm 1: Authentication message veriﬁcation

: ˆA(k)
Input
Output: True or False

m , SK (k), C (k)
m

m , ˆh ← ˆA(k)
m ;
m ← C (k)
m + 1;

1 ˆC (k)
2 C (k)
3 if ˆC (k)

m = C (k)
m then
h ← HM AC(SK (k), C (k)
if ˆh = h then
return True;

m );

4

5

6

7

else

return False;

return False;

8
9 else
10

the preceding stuffed bit). The stuffed frame can then be
destuffed by the receiver. Note that the same bit stufﬁng
technique is also used in the CAN protocol to maintain bit-
level timing synchronization.

As shown in Eq. (5), each authentication message con-
tains a counter value and its digest. A 24-bit counter can
already last for 46+ hours for 10-ms CAN messages before
having an overﬂow even in per-message authentication.
While we assume a 24-bit counter in this work, fewer bits
may be used in practice due to two reasons. First, authen-
tication messages in TACAN are transmitted in a much
lower frequency, which means that the counter overﬂow
will take a much longer time. Second, since it is a monotonic
counter incremented by one for every frame, the transmitter
may only transmit the last few bits of the counter value to
keep the receiver synchronized in the case of occasionally
corrupted frames.

As for the digest, instead of transmitting the entire digest
that are usually hundreds of bits long, the transmitter may
truncate each digest to several bits to reduce the transmis-
sion time (e.g., using the least signiﬁcant 8 bits or XORing
all bytes together to create a condensed 8-bit version of the
digest, as in [10], [36]). In practice, the number of bits in
the shortened version should be chosen appropriately to
achieve a desirable security level.

Fig. 6: Session key generation for the ECU that transmits
CAN messages with ID=k and the MN.

Fig. 7: Illustration of authentication message generation.

start and the end of an authentication frame, and the CRC
ﬁeld is used for error detection and ensures data integrity.

Inspired by the CAN frame structure (Fig. 2), we use a
single bit 0 for the SOF and a bit string of 7 consecutive 1’s
for the EOF. We use an 8-bit CRC (CRC-8), which is also part
of the AUTOSAR speciﬁcations [35], but more bits may be
needed if necessary. Compared to the CAN frame, there are
no arbitration, control, or ACK ﬁelds in the authentication
frame, as they are no longer needed. When there are no
authentication bits that need to be transmitted, bits of value
one will be transmitted to ﬁll the gap between frames.

In order to avoid confusion due to possible appearances
of the EOF in the frame, the bit stufﬁng technique will
also be used, which inserts one bit of opposite polarity
after ﬁve consecutive bits of the same polarity (including

CAN Bus…A110..01B211..0101..10C3A1: 10..01B2: 11..01C3: 01..10Verification:ECU1ECU2ECUnTPMMaster keyGlobal counterSession keyAuth. msgMN…ECU𝑀𝐾($),𝐶(($)𝑆𝐾($)Increment 𝐶(($)𝑆𝐾($)=𝐻𝑀𝐴𝐶(𝑀𝐾$,𝐶(($))Reset 𝐶-($)to 0MN𝑀𝐾($),𝐶(($)𝑆𝐾($)Increment 𝐶(($)𝑆𝐾($)=𝐻𝑀𝐴𝐶(𝑀𝐾$,𝐶(($))Reset 𝐶-($)to 0𝐶"($)←𝐶"($)+1HMAC𝐶"($)𝑆𝐾($)𝐶"($)𝐶"($)ℎ𝐴"($)IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

7

Fig. 8: Illustration of the IAT-based covert channel. Each
ECU embeds its authentication message Am into the ITTs of
CAN messages, which can be observed and extracted by the
MN through IATs. By verifying the received authentication
message ˆAm, the MN can verify the authenticity of the ECU.

4.3 IAT-Based Covert Channel

Fig. 8 illustrates the IAT-based covert channel for periodic
CAN messages. In this covert channel, the ECU embeds the
authentication bits into the ITTs of CAN messages, which
can be extracted from the IATs by the MN. By verifying the
received authentication message, the MN can authenticate
the transmitter.

In the rest of this section, we will ﬁrst motivate the de-
sign of the IAT-based covert channel through observations,
and then present the modulation/demodulation schemes.
After that, we will discuss the impact of two key parameters,
that is, the window length L and the added deviation δ on
the bit error probability and the CAN bus schedulability.

Observations. From Eq. (2), we observe that if an amount
of deviation δ is added to (or subtracted from) the ITTs, the
receiver will see a corresponding change in the IATs. Hence,
one simple scheme is to set ∆ti = T + δ for transmitting a
bit 0 and ∆ti = T − δ for transmitting a bit 1.

Taking message 0x020 from the 2010 Toyota Camry [22]
as an example, we plot its IAT distributions with added de-
viations in Fig. 9(a), where T = 10 ms and δ = 0.01T = 0.1
ms. While adding a small deviation δ does lead to a shift in
the IAT distribution, the two distributions are still overlap-
ping with each other, indicating possible bit errors due to
the noise caused by the CAN trafﬁc.

In order to reduce bit errors, one way is to average the
IATs with a window length of L at the receiver to smooth
out the noise. As we can see in Fig. 9(b), performing running
averages can effectively separate the two clusters from each
other. To support the computation of running averages at
the receiver, the transmitter needs to transmit the same bit
over L consecutive ITTs. The above observations motivate
the design of the IAT-based covert channel.

Note that when the probability of bit errors is reasonably
small, one may also consider Error Correction Coding (ECC)
techniques that are widely used in communications [37] to
detect and recover occasional bit errors. Nevertheless, the
use of ECC techniques will complicate the design of covert
channels and introduce overheads. As we will show later
in Section 5, since the probability of consecutive corrupted
authentication frames is small, it is acceptable to not recover
the bit errors in a particular frame.

Modulation. The transmitter uses the following modulation

(a)

(b)

Fig. 9: Example of IAT distributions of message 0x020 from
the Toyota dataset at the receiver side (a) without running
average (L = 1) and (b) with running average (L = 4).

scheme to embed a bit into the ITTs of CAN messages,

∆tj =

(cid:40)

T + δ,
T − δ,

if bi = 0
if bi = 1

,

where j ∈ [iL, (i + 1)L). This is essentially the Binary Phase
Shift Keying (BPSK) modulation in the communication the-
ory [37]. While more than two levels may be used to increase
the throughput, we consider only two levels in this work to
minimize the impact on the CAN bus schedulability.

Demodulation. From Eq. (2), we know that the original IATs
are ∆aj = T /(1 + S) + nj. When ∆tj is changed to T ± δ,
the receiver will observe

∆aj =

T + (2bi − 1)δ
1 + S

+ nj,

where bi ∈ {0, 1} is the transmitted bit and j ∈ [iL, (i+1)L).
In this work, we assume that ηj’s are i.i.d. Gaussian random
variables, i.e., ηj ∼ N (d, σ2
η). Hence, we have nj = ηj −
ηj−1 ∼ N (0, σ2), where σ2 = 2σ2
η.

In order to demodulate the authentication message from
the IATs, the MN needs to perform three steps: 1) comput-
ing running averages, 2) sampling, and 3) thresholding. In
the ﬁrst step, the MN computes the running averages of
window length L as below,

∆¯a[i] =

1
L

L−1
(cid:88)

j=0

=

1
1 + S

∆ai+j





1
L

L−1
(cid:88)

j=0


 +

1
L

∆ti+j

(ηi+L−1 − ηi−1).

(6)

From Eq. (6), we can see that the noise term is reduced by a
factor of L and the resulting variance of IATs is 2σ2

η/L2.

After computing the running averages {∆¯a[i]}, the MN
needs to sample every L values with a correct sampling off-
set τ ∗ and obtains {∆¯a[iL + τ ∗]}. From the communication
theory [37], we know that the optimal receiver minimizes
the bit error probability Pe by selecting the output ˆb[i] that
maximizes 1 − Pe = Pr(bi sent |∆¯a[iL + τ ∗] received). If we
assume that bits 0 and 1 are transmitted with equal proba-
bilities, then the maximum likelihood decision criterion is

ˆb[i] =

(cid:40)

0,
1,

if ∆¯a[iL + τ ∗] ≥ Γ,
otherwise ,

ECUCAN BUSTXRX𝑇…𝑇+𝛿𝑇−𝛿…Transmit Time 𝑻+𝜹𝑻−𝜹…ITTGenerate 𝑨𝒎Bit 0Bit 1CAN Message…MNArrival Time …IATCAN Message…𝚫𝒂𝒊𝚫𝒂𝒊-𝟏Bit 1𝑨/𝒎Bit 0Verify9.49.69.810.010.210.410.6Inter-Arrival Times (ms)025050075010001250150017502000FrequencyT - deltaT + delta9.49.69.810.010.210.410.6Inter-Arrival Times (ms)025050075010001250150017502000FrequencyT - deltaT + deltaIEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

8

where Γ = T
1+S (Eq. (3)), that is, the decision threshold is
the mean of original IATs or the observed message period.
Lastly, the MN can decode Am from the bit string {ˆb[i]}.

Note that it is not necessary for the receiver to be syn-
chronized with the transmitter for the sampling purposes,
because the receiver can determine the correct sampling
offset τ ∗ by itself as follows,
(cid:88)

τ ∗ = arg max

|∆¯a[iL + τ ] − Γ| ,

(7)

τ

i

where τ ∈ {0, 1, .., L − 1}. That is, τ ∗ is the integer value
that maximizes the total distance between each sample and
the decision threshold.
Impact of δ and L on bit error probability. From our
previous discussion, we see that L and δ are the two key
parameters that affect the bit error performance of the IAT-
based covert channel. In this section, we analytically model
the bit error probability Pe as a function of L and δ.

First of all, based on our previous assumption of Gaus-

sian noise, we have

∆¯a[iL + τ ∗] ∼ N

(cid:18) T + (2bi − 1)δ
1 + S

,

σ2
L2

(cid:19)

,

(8)

where bi ∈ {0, 1} and σ2 = 2σ2
η (Eq. (4)). Let Pe,0 and Pe,1
be the bit error probabilities conditioned on bits 0 and 1
being transmitted, respectively. Then we have

Pe,0 = Pr(∆¯a[iL + τ ∗] < Γ|bi = 0),
Pe,1 = Pr(∆¯a[iL + τ ∗] ≥ Γ|bi = 1).

According to Eq. (8), we know that
(cid:19)

(cid:18)

Pe,0 = Pr

Z <

−δ/(1 + S)
σ/L

= Q

(cid:18)

Lδ
(1 + S)σ

(cid:19)

,

where Z ∼ N (0, 1) is the standard Gaussian random vari-
(cid:82) ∞
z exp(− z2
able and Q(x) (cid:44) 1√
2 )dz is the Q function. Due
2π
to the symmetry, we have Pe,0 = Pe,1.

Assuming equally likely probabilities of bits 0 and 1, i.e.,

P0 = P1 = 0.5, the total error bit probability is

Pe = Pe,0 · P0 + Pe,1 · P1 = Q

(cid:18)

Lδ
(1 + S)σ

(cid:19)

.

(9)

From Eq. (9), we see that increasing L and δ would have
the same effect on Pe. Nevertheless, increasing L will reduce
the covert channel throughput, whereas increasing δ could
potentially affect the schedulability of the CAN bus, as we
will explain in the next section. Therefore, in the case of
ﬁxed δ, it makes full sense to choose the smallest L value,
while keeping Pe less than or equal to a given limit (cid:15). From
Eq. (9), we have

Lmin =

(cid:24) (1 + S)σ
δ

(cid:25)
Q−1((cid:15))

,

(10)

where (cid:100)·(cid:101) is the ceiling function.
Impact of δ on CAN bus schedulability: Timing on the
CAN bus is closely related to its schedulability. A CAN bus
is schedulable if and only if all the messages on the bus are
schedulable, and a message with ID k is schedulable if and
only if its worst-case response time (denoted as Rk) is less
than or equal to its deadline (denoted as Dk).

According to [38], Rk is deﬁned as the longest time from
the initiating event (that puts the message in the transmis-
sion queue) occurring to the message being received by the
nodes that require it. It consists of three parts: 1) the queuing
jitter, 2) the queuing delay, and 3) the transmission time. The
queuing delay further consists of the blocking delay (due to
ongoing transmissions of lower priority messages) and the
interference (due to the arbitration process when competing
with higher priority messages).

Since the IAT-based covert channel introduces a devia-
tion of δ, its effect is equivalent to decreasing the message
period (deﬁned as the minimum inter-transmission time)
and increasing the queuing jitter. By applying the schedu-
lability analysis in [38], we can show that the impact of
δ on the worst-case response time is threefold: 1) increase
in the queuing jitter by a ﬁxed amount (δ), 2) increase
in the blocking delay by a bounded amount of time, and
3) increase the message transmission time of higher prior-
ity messages by a certain percentage (δ/T ). Therefore, to
achieve the effective use of the IAT-based covert channel,
TACAN parameters (notably δ) need to be experimentally
obtained and ﬁne tuned prior to deployment to ensure the
schedulability of the CAN bus. A detailed discussion is
provided in Appendix A.

4.4 LSB-Based Covert Channel

In this section, we present the LSB-based covert channel,
which embeds the authentication messages inside the LSBs
of the data payload of normal CAN messages transmitted by
an ECU, as illustrated in Fig. 10. Unlike the IAT-based covert
channel, the LSB-based covert channel is also applicable to
aperiodic CAN messages. For the scope of this work, we use
the CAN data frames to develop our methodology.

Observations. In order to transmit authentication messages
over the CAN bus, it is common to leverage the existing
ﬁelds of a CAN message, such as the data ﬁeld (at least
one byte) and the extended ID ﬁeld, or simply introduce
additional CAN messages [9], [10], [39]. In practice, how-
ever, there may not be any unused bytes in the CAN
message or the CAN bus is already heavily loaded, which
makes the above approaches difﬁcult to deploy. In TACAN,
the objective is to authenticate the transmitter instead of
each CAN message, and thus authentication messages are
transmitted much less frequently. If we can spread the bits of
an authentication message across multiple CAN messages,
each of which carries only a few authentication bits (e.g.,
one or two bits), we can then alleviate the payload shortage
and avoid trafﬁc overheads.

On the other hand, we also observe that CAN messages
are often used to convey sensor values, most of which are
ﬂoating values represented in bits. Therefore, the L LSBs
(e.g., L = 1 or 2) of each such CAN message may be used for
transmitting authentication bits without causing signiﬁcant
degradation in accuracy.

Taking the 2010 Toyota Camry [22] as an example, there
are at least 7 messages out of 42 that carry sensor values
(e.g., wheel speeds, engine speed, vehicle speed, odometer,
brake pressure, steering angle) [22]. We would expect more
CAN messages that carry sensor values in newer automo-

IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

9

Algorithm 3: Extracting Am from LSBs

1 if SOF is detected then

2

3

4

5

6

Initialize ˆAf to an empty bit string;
while EOF is not detected in ˆAf do

Receive df ield from the Data Layer layer;
Append bin(df ield(β))L to ˆAf ;

Destuff ˆAf and extract ˆAm;

7 return ˆAm;

4.5 Hybrid Covert Channel

Since the IAT-based and LSB-based covert channels are or-
thogonal to each other, it leads to a natural question whether
the two covert channels can be combined to construct a hy-
brid channel to achieve a larger throughput. In this hybrid
covert channel, the transmitter will split the authentication
message into two parts and transmit them through the two
covert channels separately. Then the receiver will receive
and reassemble the two parts into one piece. In this work,
we are interested in answering the following question: how
to choose the splitting ratio α (0 ≤ α ≤ 1) such that the two
parts will be transmitted roughly over the same duration.

Given Nm bits for the authentication message and No
bits for other ﬁelds (SOF, CRC, and EOF), if we ignore bit
stufﬁng, then there are a total of (cid:100)αNm(cid:101) + No bits and (cid:100)(1 −
α)Nm(cid:101) + No bits transmitted over the IAT-based and LSB-
based covert channels, respectively.

If the IAT-based covert channel is using a window length
of L1 and the LSB-based covert channel is using L2 LSBs,
then requiring the same transmission duration means

((cid:100)αNm(cid:101) + No)L1 = ((cid:100)(1 − α)Nm(cid:101) + No)/L2.

Ignoring the ceiling function, we have

α =

Nm + No(1 − L1L2)
Nm(1 + L1L2)

× 100%.

(11)

While α computed in in Eq. (11) is not the optimal value α∗
that leads to two partitions of equal length after bit stufﬁng,
it will be close to α∗, which provides a reasonable starting
point for further iteration. Note that α is less than or equal
to 0, it means that only the LSB-based covert channel should
be used.

As an example, suppose Nm = 32, No = 16, L1 = 1 and
L2 = 1. In this case, the two covert channels have similar
throughput and we have α = 50.0%. Nevertheless, if L1 is
increased from 1 to 2, α quickly drops to 16.7%. With L1 =
3, α becomes 0, which means that it is not advantageous to
deploy the hybrid covert channel.

5 EVALUATION

In this section, we conduct extensive experiments to evalu-
ate the performance of the proposed covert channels and
TACAN using real-world datasets. We ﬁrst describe our
real vehicle CAN bus testbed based on the UW EcoCAR (a
Chevrolet Camaro 2016) and demonstrate the proposed IAT-
based and LSB-based covert channels (Section 5.1). We then
evaluate the bit error performance (Section 5.2), throughput
(Section 5.3), detection performance (Section 5.4), and accu-
racy loss (Section 5.5) of TACAN using the EcoCAR datatset

Fig. 10: Illustration of LSB-based covert channel. The trans-
mitting ECU embeds the authentication message into the
LSBs of multiple normal CAN messages (with the same ID),
which can be extracted and veriﬁed by the Monitor Node.

biles. The above observations motivate our design of LSB-
based covert channels.

Embedding Am to LSBs. The embedding procedure is
considered as a sub-layer between the Application and the
Data Link layers. The basic idea is as follows: for each
message Am, the transmitter substitutes the least signiﬁcant
L bits of the CAN message with the next L bits in Am. No
modiﬁcation is needed if the L bits happen to be the same.
As provided in Algorithm 2, an authentication frame Af
is ﬁrst constructed from Am (Line 1). When the new data
ﬁeld content df ield is received from the upper (Application)
layer, the least signiﬁcant L bits of the selected byte β in
df ield, denoted as bin(df ield(β))L, are compared with the
next L bits of Af : if the bits of interest are different, then
the substitution occurs; otherwise, df ield is not modiﬁed
(Lines 3-8). The same process is repeated for each new
authentication message.

Algorithm 2: Embedding Am to LSBs
1 Construct Af from Am (with bit stufﬁng);
2 i ← 0;
3 while i < length(Af ) do
4

5

6

7

8

Receive df ield from the upper (Application) layer;
if bin(df ield(β))L (cid:54)= Af [i : i + L − 1] then
bin(df ield(β))L = Af [i : i + L − 1];

df rame ← df ield(γ);
i ← i + L;
Send df ield to the lower (Data Link) layer;

9
10 return;

Extracting Am from LSBs. On the receiver side, the MN
extracts the L LSBs from every received CAN message and
reconstructs the authentication message. If the MN fails to
verify the authentication message, it will raise an alert that
indicates possible compromise of the transmitting ECU or
malicious exploitation of the CAN bus.

The extracting procedure is described in Algorithm 3.
Once the MN detects the SOF ﬂag, it will start extracting the
L LSBs from the designated byte df ield(β) and appending
them to ˆAf (Lines 1-5). When the EOF ﬂag is detected in
ˆAf , the MN will perform bit destufﬁng on ˆAf and extract
the authentication message ˆAm (Line 6). Then it will listen
for the SOF of the next incoming frame.

ECUCAN BUSTXRXEmbed 𝑨𝒎in LSBs Generate 𝑨𝒎MN𝑨#𝒎Verifydata field…01011001data field…01011001Extract 𝑨#𝒎	from LSBs IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

10

Fig. 11: Illustration of EcoCAR testbed. Raspberry Pi-based
testbed ECUs are connected to the OBD-II port at the back
of the EcoCAR.

as well as the publicly available Toyota dataset collected
from the Toyota Camry 2010 [22].

5.1 Testbed Validation

Fig. 11 illustrates our EcoCAR testbed that consists of the
UW EcoCAR and testbed ECUs, which are connected via
the On-Board Diagnostics (OBD-II) port The EcoCAR hosts
8 stock ECUs and two experimental ECUs. A total of 2500+
messages with 89 different IDs are exchanged on the CAN
bus every second. All messages are periodic with periods
ranging from 10 ms to 5 sec.

Each testbed ECU consists of a Raspberry Pi 3 and a
PiCAN 2 board (using a MCP2515 CAN controller and a
MCP2551 CAN transceiver). The Raspberry Pi-based ECU is
programmed to be a receive-only device that records CAN
messages using SocketCAN [40]. During data collection, the
EcoCAR is in the park mode in an isolated and controlled
environment for safety purposes, but all in-vehicle ECUs are
functional and actively exchange CAN messages.

To demonstrate the proposed IAT-based and LSB-based
covert channels, we use the testbed ECU to record the
timestamps of 100-ms message 0x22A from the EcoCAR
testbed and replay them in our experiments. In the ideal
case, the TACAN transmitter will add ±δ to the ITTs, which
correspond to changes of ±δ/(1 + S) at the receiver side.
Since both δ and S are very small, we approximate δ/(1+S)
as δ and program the TACAN transmitter to directly modify
the recorded IATs.

Fig. 12(a) provides an example of the received authen-
tication frame in the IAT-based covert channel. In this ex-
ample, the 24-bit counter has a value of 1, δ = 0.01T , and
L = 4. We observe that without the running average, the
received IATs can be very noisy, which leads to possible bit
errors, whereas computing running averages can effectively
smooth out the noise. We also observe that the actual length
of the transmitted frame can exceed the original length due
to the inserted stuffed bits.

Fig. 12(b) provides an example of the received authenti-
cation frame in the LSB-based covert channel when a single
LSB is used (L = 1). Compared to the IAT-based covert
channel in Fig. 12(a), the LSB-based covert channel is noise-
free, and each authentication frame can be transmitted in a
shorter duration.

5.2 Bit Error Performance

In this section, we discuss the bit error performance of the
IAT-based and LSB-based covert channels. In addition to the
EcoCAR dataset, we also use the Camry Toyota 2010 dataset

(a) IAT-based covert channel

(b) LSB-based covert channel

Fig. 12: Example of received authentication frame for mes-
sage 0x22A from the EcoCAR testbed in (a) the IAT-based
covert channel and (b) the LSB-based covert channel. The
ﬁelds for SOF, counter and digest values (Data), CRC, and
EOF are colored in blue, green, gray, yellow, and red, respec-
tively. The stuffed bits are marked as black triangles.

[22]. It consists of 43 distinct messages, and the majority of
them are periodic with periods ranging from 10 ms to 5 sec.

IAT-based covert channel. In this experiment, we select a
subset of 9 representative messages from the Toyota dataset
and the EcoCAR testbed with different message ID levels,
periods, and noise levels, as listed in Table 2. Our objective
is to compare the analytical bit error probabilities (Pe) in
Eq. (9) against the experimental values and study the impact
of L. We set δ = 0.01T to minimize the impact on the
CAN bus. Since Pe is a function of the standard deviation of
IATs σ (Eq. (9)), we only consider IATs within ±20% of the
average when computing σ to minimize the adverse impact
of outliers. To obtain the experimental Pe, we add ±δ to the
IATs and compute the running averages of window length
L. We then compute the percentage of the averaged IATs
that lead to bit errors as the experimental Pe.

As shown in Fig. 13, the bit error performance of the IAT-
based covert channel varies a lot among different messages.
In general, Pe is very high with L = 1, but it quickly drops
to as L increases for all messages, which demonstrates the

TXRXOBD-II Port0.02.55.07.510.012.515.017.520.0Elapsed Time (Sec)96979899100101102103104IAT (ms)Raw IATAvg IATThresholdSamplesStuffed Bit01020304050# of Messages01Received BitReceived BitStuffed BitIEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

11

TABLE 2: Statistics of IATs of representative messages from
the Toyota dataset and the EcoCAR testbed.

Msg ID

0x020
0x0B4
0x224
0x620
0x0D1
0x185
0x22A
0x3FB
0x4D1

Period
(sec)
0.01
0.02
0.03
0.3
0.01
0.02
0.1
0.25
0.5

Standard deviation
(Norm. by period)
1.1%
0.5%
0.9%
1.0%
2.7%
1.6%
1.2%
1.4%
1.4%

Source

Toyota
Toyota
Toyota
Toyota
EcoCAR
EcoCAR
EcoCAR
EcoCAR
EcoCAR

effectiveness of the running average. For the four Toyota
messages, the experimental Pe is less than 0.1% with L = 3,
and the experimental Pe is less than 0.3% with L = 5 for the
ﬁve EcoCAR messages. In addition, since the EcoCAR has
signiﬁcantly more trafﬁc than the Toyota Camry, we observe
larger Pe for EcoCAR messages than those for the Toyota
messages for the same L. We also observe that since we set δ
to a ﬁxed percentage of the message period, messages with
larger periods tend to be more advantageous and usually
have a smaller Pe with the same L.

In order to further understand the minimum L values
required by different messages, we choose 85 EcoCAR mes-
sages and determine Lmin such that the experimental bit
error probability is less than or equal to 1% with δ = 0.01T .
Note that we exclude four noisy messages, each of which
has a standard deviation of IATs that is 10% larger than
its mean IAT. As shown in Fig. 14, a total of 19 messages
can use L = 1. With L ≤ 5, a total of 46 messages are
eligible, accounting for 51.7% of EcoCAR messages. If we
set δ = 0.02T , a total of 59 messages become eligible, which
corresponds to 66.3% of all messages.
LSB-based covert channel. Since the authentication mes-
sage is hidden in a few bits of the data payload of normal
CAN messages in the LSB-based covert channel, the bit error
probability will be as low as that of the CAN bus itself.
According to [41], the bit error probability of the CAN bus in
normal environments (factory production line) and aggres-
sive environments (two meters away from a high-frequency
arc-welding machine) are 3.1 × 10−7% and 2.6 × 10−5%,
respectively. In other words, the LSB-based covert channel
is very reliable and is not affected by the noise caused by
the CAN trafﬁc.

5.3 Throughput Performance

In this section, we compute and compare the throughput
of the proposed covert channels. For ease of discussion, we
let the number of bits in the authentication message (Am)
be Nm, and the number of bits in other ﬁelds (SOF, CRC,
and EOF) be No. Hence, each authentication frame (denoted
as Af ) has Nf = Nm + No bits. However, the number of
actually transmitted bits may be more than Nf due to bit
stufﬁng. Since the stuffed bit itself may be the ﬁrst of the
ﬁve consecutive identical bits, there is at most one stufﬁng
bit every four original bits after the ﬁrst one. Therefore, the
actual length of each frame is bounded by
(cid:22) Nf − 7 − 1
4

f = Nf +

N (cid:48)

(cid:23)

,

(a) Toyota dataset

(b) EcoCAR testbed

Fig. 13: Comparison of analytical and experimental bit er-
ror probabilities for selected messages from (a) the Toyota
dataset and (b) the EcoCAR testbed. We observe that in-
creasing L will reduce the bit error probability. We also
obesrve that our analysis provides a good estimate of the
experimental bit error probability.

Fig. 14: Histogram of Lmin such that Pe ≤ 1% for EcoCAR
messages with δ = 0.01T .

1.01.52.02.53.03.54.04.55.0Window Length (L)0.05.010.015.020.025.030.035.040.0Bit Error Prob. (%)Msg 020, Ana.Msg 020, Exp.Msg 0B4, Ana.Msg 0B4, Exp.Msg 224, Ana.Msg 224, Exp.Msg 620, Ana.Msg 620, Exp.1.01.52.02.53.03.54.04.55.0Window Length (L)0.05.010.015.020.025.030.035.040.0Bit Error Prob. (%)Msg 0d1, Ana.Msg 0d1, Exp.Msg 185, Ana.Msg 185, Exp.Msg 22a, Ana.Msg 22a, Exp.Msg 3fb, Ana.Msg 3fb, Exp.Msg 4d1, Ana.Msg 4d1, Exp.123456789101112131415161718192021Minimum Value of L02468101214161820# of MessagesIEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

12

where (cid:98)·(cid:99) is the ﬂoor function. Note that we need the −7 in
the numerator because the EOF is not subject to bit stufﬁng,
and the −1 is because the worst-case bit stufﬁng happens
right after the ﬁrst original bit.

f LT ).

f T ) in the worst case.

To quantify the throughput performance, we deﬁne two
metrics: 1) channel throughput (Rc), i.e., the number of bits
transmitted per second, and 2) authentication throughput
(Ra), i.e., the number of authentication bits transmitted per
second. Since the clock skew is very small and its effect is
usually negligible, it is omitted to simplify calculations.
IAT-based covert channel. Since every bit is embedded into
L consecutive ITTs of T sec, it takes LT time to transmit one
bit, which means Rc = 1/(LT ). The best-case authentication
throughput (without bit stufﬁng) is Ra = Nm/(Nf LT ).
With bit stufﬁng, Ra may be as low as Nm/(N (cid:48)
LSB-based covert channel. Since up to L authentication bits
can be hidden in one CAN message, we have Rc = L/T .
Each frame requires (cid:100)Nf /L(cid:101) normal CAN messages and a
duration of (cid:100)Nf /L(cid:101)T to transmit. Hence, we have Rc =
Nm/((cid:100)Nf /L(cid:101)T ) ≈ NmL/(Nf T ) in the best case and Rc =
NmL/(N (cid:48)
Hybrid covert channel. As presented in Section 4.5, the hy-
brid covert channel splits Am into two parts with a suitable
splitting ratio of α (Eq. (11)) and transmits them through
the IAT-based and LSB-based covert channels separately.
Let D = max(((cid:100)αNm(cid:101) + No)L1, ((cid:100)(1 − α)Nm(cid:101) + No)/L2)
be the time it takes to transmit a single frame. Hence, the
channel throughput is Rc = (Nm + 2No)/D. The best-case
authentication throughput is Ra = Nm/D.
Throughput comparison. In this experiment, we consider a
10-ms CAN message and set Nm = 32 and No = 16. The
average throughput is computed for each covert channel
for transmitting 1000 authentication frames. Results are
provided in Table 3. We can see that Rc of the hybrid
covert channel is close to the sum of Rc of individual
covert channels, but they are not exactly equal due to bit
stufﬁng. When L1 = L2 = 1, the hybrid covert channel
has a gain of 49.7% in Ra over individual covert channels.
As either L1 or L2 increases, the throughput of the IAT-
based covert channel becomes smaller than that of the LSB-
based covert channel, and it is less beneﬁcial to deploy the
hybrid covert channel. With L1 = L2 = 2, the hybrid covert
channel reduces to the LSB-based covert channel, because
no authentication bits are transmitted over the IAT-based
covert channel.

TABLE 3: Comparison of throughput (in bits per second) of
three proposed covert channels with 10-ms CAN messages

Settings

L1 = 1, L2 = 1
L1 = 2, L2 = 1
L1 = 1, L2 = 2
L1 = 2, L2 = 2

IAT-Based
Ra
Rc
61.8
100.0
30.9
50.0
61.8
100.0
30.9
50.0

LSB-Based
Ra
Rc
61.8
100.0
61.8
100.0
122.3
197.8
122.3
197.8

Hybrid

Rc
198.6
148.8
296.7
197.8

Ra
92.5
69.3
138.1
122.3

5.4 Detection of CAN Bus Attacks

As described in Section 4, TACAN extracts and veriﬁes the
authentication message embedded in the IATs or LSBs of
normal CAN messages to authenticate the transmitting ECU

TABLE 4: False alarm probability in the IAT-based covert
channel in the normal situation

Msg ID K = 1 K = 2 K = 3
0.0%
0x0D1
0.0%
0x185
0.0%
0x22A
0.0%
0x3FB
0.0%
0x4D1

0.19%
0.31%
0.0%
0.32%
0.33%

0.49%
1.31%
0.0%
0.64%
1.95%

and also serves the purpose of intrusion detection. In this
section, we consider a TACAN-based detector and evaluate
its detection performance against CAN bus attacks. While
we focus on the IAT-based covert channel, similar results
can be found in the other two covert channels.
Detection scheme. The TACAN-based detection scheme
works as follows: the MN counts the number of consecutive
authentication failures. An authentication failure is either a
message reception failure (e.g., lost message, CRC error) or a
message veriﬁcation failure (e.g., invalid counter or digest).
If the counter is larger than or equal to a preset threshold
K (e.g., K = 3), then the MN raises an alert for a CAN bus
attack. A successfully received and veriﬁed authentication
message will reset the detection counter to zero.
False alarm probability. We ﬁrst discuss the false alarm
probability (denoted as PF A) of the TACAN-based detector,
which is deﬁned as the probability of raising an alarm when
there is no attack present. We experimentally evaluate the
IAT-based covert channel in the normal situation using the
ﬁve CAN messages from the EcoCAR testbed (see Table 2).
An example of the normal IAT-based covert channel trans-
mission is provided in Fig. 15(a). In order to minimize bit
errors, we set δ = 0.02T and set L = 6 for the ﬁrst three
messages and set L = 2 for the last two messages.

As shown in Table 4, with a properly conﬁgured IAT-
based covert channel, we have PF A ≤ 2% with K = 1.
When K = 2, we have PF A ≤ 0.33% for all messages.
Since none of the messages has three consecutive message
reception failures (either a lost message or a CRC error),
we have PF A = 0% with K = 3. Note that since the LSB-
based covert channel has a very low bit error probability,
the probability of a message reception failure in the normal
situation is negligible and thus we have PF A = 0%.
Detecting suspension and injection attacks. As illustrated
in Fig. 15(b), when the suspension attack happens, the
transmission of CAN messages is interrupted, which causes
authentication message loss and thus message reception
failures. Similarly, as shown in Fig. 15(c), the injection attack
also interrupts the transmission of authentication messages,
which causes either message loss or CRC errors. In this
example, we use the 100-ms message with ID=0x139 from
the EcoCAR as the attack message. Since a CAN bus attack
like the suspension or injection attack will need to last for
a sufﬁcient amount of time to cause enough damage to the
CAN bus, it will cause more than K consecutive message
reception failures and thus can be detected by the TACAN-
based detector with a detection probability of 100%.
Detecting forgery attacks. In the forgery attack, the attacker
has already compromised an in-vehicle ECU and transmits
authentication messages, which can be successfully received
by the MN (i.e., CRC check is passed). The attacker attempts
to generate valid authentication messages which can be

IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

13

see that such attempts will be detected by TACAN with a
probability of 100% due to the use of monotonic counters.
Detecting masquerade attacks. As mentioned in Section 3.2,
a masquerade attack (including the more sophisticated
cloaking attack [16]) requires in-vehicle ECUs to be weakly
and/or fully compromised. As a result, TACAN will force
the attacker to perform a forgery or replay attack, not only
for the compromised ECU itself, but also for the ECU the at-
tacker attempts to masquerade as. Therefore, a masquerade
attack will also be detected by TACAN.

In summary, our proposed TACAN-based detector can
identify attacks that interrupt the transmission of normal
CAN messages (e.g., suspension and injection attacks), as
well as attacks in which attackers fail to generate valid
authentication messages (e.g., forgery, replay, and masquer-
ade attacks) with a very high detection probability, while
keeping the false alarm probability very low.

5.5 Accuracy Loss

In this section, we study the impact of LSB-based covert
channel on the accuracy of sensor values. We ﬁrst notice
that with changes of a single bit (L = 1), the accuracy loss
has the same scale with the discretization error (resolution)
of that sensor value. As L increases, the overall throughput
will increase (Section 5.3), and the accuracy loss will also be
larger. Hence, manufacturers will need to assess the impact
of accuracy loss in CAN data on the functionality and safety,
and trade off the accuracy loss against the throughput gain
when deploying the LSB-based covert channel. It is im-
portant to highlight that for periodic messages that cannot
tolerate accuracy loss, manufacturers may deploy the IAT-
based covert channel instead.

In order to gain a better understanding of the accuracy
loss of the LSB-based covert channel, we consider two CAN
messages: 1) one that carries wheel velocity values from the
Toyota dataset [22] and 2) the one carries engine coolant
temperature values that we identiﬁed through reverse engi-
neering from the EcoCAR dataset [21]. In our experiments,
we set L to 1 or 2 and quantify the accuracy loss in terms
of the maximum error, i.e., the maximum deviation from
the original values (which are considered as ground truth).
Note that we intentionally keep L ≤ 2 in order to avoid
signiﬁcant distortions to the underlying sensor values or
jeopardize the functionality of the receiving ECU.

As illustrated in Fig. 16(a) and highlighted in the magni-
ﬁed box, the maximum error introduced to wheel velocity is
0.01 km/h for L = 1 and 0.03 km/h for L = 2, which
is considered as insigniﬁcant. As for the engine coolant
temperature in Fig. 16(b), the maximum error is 1 ◦C for
L = 1 and 3 ◦C for L = 2, which are still moderate.
As compared to the median value of 58 ◦C, the errors of
1 ◦C and 3 ◦C translate into 1.7% and 5.2% deviations,
respectively.

6 CONCLUSION

(a) Normal

(b) Suspension attack

(c) Injection attack

Fig. 15: Illustration of the IAT-based covert channel in dif-
ferent situations using message 0x22A from the EcoCAR
testbed: (a) normal, (b) under the suspension attack, and
(c) under the injection attack. In both (b) and (c), the attack
starts at around t = 10 sec. Under the suspension attack,
the next message after the attack never arrives, and thus the
next expected IAT (in dashed red) will keep increasing. Both
suspension and injection attacks will prevent the authenti-
cation message from being successfully received by the MN.

veriﬁed by the MN to evade the detection of TACAN.

Since TACAN securely stores both master and session
keys in the ECU’s TPM to prevent being compromised by
the adversary, the attacker has to forge a valid digest for
each local counter value without the session key. With a
condensed digest of M bits, the probability of a successful
random forgery is 1/2M . For example, when M = 8, this
probability is 1/28 ≈ 0.4%. In other words, the forgery
attack will be detected with a probability of 99.6% with
K = 1. In general, the probability of K consecutive message
veriﬁcation failures is (1/2M )K , which decreases as K in-
creases. Hence, to guarantee a desired detection probability
for a given K, a suitable value of M should be chosen.
Repeated forgeries will be prevented due to the use of
monotonic counters.

Detecting replay attacks. A replay attacker has inﬁltrated
the CAN bus and attempts to replay previously transmitted
authentication messages of the targeted ECU with the hope
of passing the veriﬁcation process at the MN. It is easy to

In this paper, we presented TACAN, a covert channel-
based transmitter authentication scheme that allows a MN
to verify the authenticity of the transmitting ECU. We devel-
oped IAT-based, LSB-based, and hybrid covert channels to

0.02.55.07.510.012.515.017.520.0Elapsed Time (Sec)9899100101102IAT (ms)Raw IATAvg IAT0.02.55.07.510.012.515.017.520.0Elapsed Time (Sec)100200300400500600IAT (ms)Raw IATAvg IATNext IAT024681096981001021040.02.55.07.510.012.515.017.520.0Elapsed Time (Sec)50050100150IAT (ms)Raw IATAvg IAT101112405060IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

14

[4]

S. Checkoway et al., “Comprehensive experimental analyses of
automotive attack surfaces,” in Proc. of the 20th USENIX Conf. on
Security, ser. SEC’11.
Berkeley, CA, USA: USENIX Association,
2011, pp. 77–92.

[5] O. Solon, “Team of hackers take remote control of Tesla model
S from 12 miles away,” https://www.theguardian.com, 2016, ac-
cessed: 2018-10-06.

[6] M. Bojarski et al., “End to end learning for self-driving cars,” arXiv

preprint arXiv:1604.07316, 2016.

[7] A. M. Wyglinski et al., “Security of autonomous systems employ-
ing embedded computing and sensors,” IEEE micro, vol. 33, no. 1,
pp. 80–86, 2013.

[8] A. Van Herrewege et al., “CANAuth – a simple, backward compat-
ible broadcast authentication protocol for CAN bus,” in ECRYPT
Workshop on Lightweight Cryptography, 2011.

[9] A. Hazem and H. Fahmy, “LCAP – a lightweight CAN authenti-
cation protocol for securing in-vehicle networks,” in Proc. of 10th
Embedded Security in Cars Conference (ESCAR), Berlin, Germany,
vol. 6, 2012.

[10] R. Kurachi et al., “CaCAN-centralized authentication system in
CAN (Controller Area Network),” in Proc. of Embedded Security in
Cars (ESCAR 2014), 2014.

[11] A.-I. Radu and F. D. Garcia, “Leia: A lightweight authentication
protocol for can,” in European Symp. on Research in Computer
Security. Springer, 2016, pp. 283–300.

[12] K.-T. Cho and K. G. Shin, “Fingerprinting electronic control units
for vehicle intrusion detection,” in Proc. of 25th USENIX Security
Symposium (USENIX Security 16), Austin, TX, 2016, pp. 911–927.

[13] M. M ¨uter and N. Asaj, “Entropy-based anomaly detection for in-
vehicle networks,” in 2011 IEEE Intelligent Vehicles Symposium (IV),
June 2011, pp. 1110–1115.

[14] K.-T. Cho and K. G. Shin, “Viden: Attacker identiﬁcation on in-
vehicle networks,” in Proc. of the 2017 ACM SIGSAC Conference
on Computer and Communications Security, ser. CCS ’17, 2017, pp.
1109–1123.

[15] W. Choi et al., “VoltageIDS: Low-level communication character-
istics for automotive intrusion detection system,” IEEE Trans. Inf.
Forensics Security, 2018.

[16] S. U. Sagong, X. Ying, A. Clark, L. Bushnell, and R. Poovendran,
“Cloaking the clock: emulating clock skew in controller area
networks,” in Proc. of the 9th ACM/IEEE Int. Conf. on Cyber-Physical
Systems, ser. ICCPS’18, 2018, pp. 32–42.

[17] X. Ying, S. U. Sagong, A. Clark, L. Bushnell, and R. Poovendran,
“Shape of the cloak: Formal analysis of clock skew-based intrusion
detection system in controller area networks,” IEEE Trans. Inf.
Forensics Security, 2019.

[18] P. S. Murvay and B. Groza, “Source identiﬁcation using signal
characteristics in controller area networks,” in IEEE Signal Pro-
cessing Letters, vol. 21, no. 4, April 2014, pp. 395–399.

[19] M. Kneib and C. Huth, “Scission: Signal characteristic-based
sender identiﬁcation and intrusion detection in automotive net-
works,” in Proc. of the 2018 ACM SIGSAC Conf. on Computer and
Communications Security. ACM, 2018, pp. 787–800.

[20] T. C. Group, “Tcg tpm 2.0 automotive thin proﬁle. speciﬁcation

version 1.01. revision 15,” Tech. Rep., 2018.

[21] U. EcoCAR3, “University of Washington EcoCAR 3,” http://
ecocar3.org/washington/about-us/, 2019, accessed: 2019-1-22.
[22] J. Daily, “Interpreting the CAN data for a 2010 Toyota Camry,”
http://tucrrc.utulsa.edu/ToyotaCAN.html, 2010, accessed: 2019-
1-22.

[23] C. Miller and C. Valasek, “Remote exploitation of an unaltered

passenger vehicle,” in Black Hat USA, 2015.

[24] T. Hoppe et al., “Security threats to automotive CAN networks –
practical examples and selected short-term countermeasures,” in
Proc. of the 27th Int. Conf. on Computer Safety, Reliability, and Security,
ser. SAFECOMP ’08, 2008, pp. 235–248.

[25] S. U. Sagong, X. Ying, L. Bushnell, and R. Poovendran, “Exploring
attack surfaces of voltage-based intrusion detection systems in
controller area networks,” in ESCAR Europe 2018, 2018.

[26] S. Zander et al., “A survey of covert channels and countermeasures
in computer network protocols,” IEEE commun. Surveys Tut., vol. 9,
no. 3, pp. 44–57, 2007.

[27] J. M. Taylor et al., “Enhancing integrity of modbus tcp through
covert channels,” in Proc. of Inf. Conf. on Signal Process. and Com-
mun. Syst. (ICSPCS), 2017.

[28] B. Groza, L. Popa, and P.-S. Murvay, “Incanta-intrusion detection
in controller area networks with time-covert authentication,” in Se-

(a) Wheel velocity

(b) Engine coolant temperature

Fig. 16: Accuracy loss due to the LSB-based covert channel.
(a) Wheel velocity in the Toyota dataset. (b) Engine coolant
temperature in the EcoCAR dataset. We observe moderate
accuracy loss in both cases.

communicate the authentication information between ECUs
and the MN without introducing protocol modiﬁcations
or trafﬁc overheads. We analytically modeled the bit error
probability of the IAT-based covert channel as a function
of covert channel parameters, and studied its impact on
the CAN bus schedulability. We experimentally validated
and evaluated TACAN and the proposed channels using the
EcoCAR testbed and the publicly available Toyota dataset.
Our results show that properly conﬁgured IAT-based covert
channels have an experimental bit error probabilities of less
than 0.3%. We also show that our TACAN-based detector
can detect CAN bus attacks with a high detection probabil-
ity, while keeping the false alarm probability less than 0.33%
by setting the detection threshold to 2 or higher. In addition,
we studied the impact of the LSB-based covert channel on
sensor values and observed moderate accuracy loss.

REFERENCES

[1] X. Ying, G. Bernieri, M. Conti, and R. Poovendran, “Tacan:
Transmitter authentication through covert channels in controller
area networks,” in Proceedings of the 9th ACM/IEEE International
Conference on Cyber-Physical Systems (ICCPS), 2019.
ISO, International Standard ISO 11898-1 Road Vehicles-Controller Area
Network (CAN), Part 1 Data Link Layer and Physical Signaling, 2015.

[2]

[3] Bosch, “CAN Speciﬁcation Version 2.0,” 1991.

10.510.610.710.810.911.0Time (s)23.024.025.026.0Velocity (Km/h)Original valueValue with secret (L=1)Value with secret (L=2)190195200205210Time (s)52.555.057.560.062.565.0Temperature (∘C)Original valueValue with secret (L=1)Value with secret (L=2)IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

15

curity and Safety Interplay of Intelligent Software Systems. Springer,
2018, pp. 94–110.

in Proc. of 3rd Int. Workshop of Real-Time Networks (RTN2004), 2004,
pp. 15–18.

[29] D. L. Mills, “Network time protocol (version 3): Speciﬁcation,
Implementation and Analysis,” RFC 1305, Tech. Rep., 1992.
[30] S. Zander et al., “An improved clock-skew measurement technique
for revealing hidden services,” in Proc. of the 17th Conf. on Security
Symp., 2008, pp. 211–225.

[31] K. Koscher et al., “Experimental security analysis of a modern
automobile,” in Proc. of the 2010 IEEE Security Privacy, ser. SP ’10,
2010, pp. 447–462.

[32] C.-W. Lin et al., “Cyber-security for the controller area network
(can) communication protocol,” in Proc. of 2012 Int. Conf. on Cyber
Security.

IEEE, 2012.

[33] K.-T. Cho and K. G. Shin, “Error handling of in-vehicle networks
makes them vulnerable,” in Proc. of the 2016 ACM SIGSAC Conf. on
Computer and Communications Security. ACM, 2016, pp. 1044–1055.
[34] H. Krawczyk, M. Bellare, and R. Canetti, “Hmac: Keyed-hashing

for message authentication,” Tech. Rep., 1997.

[35] AUTOSAR, “Speciﬁcation of crc routines autosar cp release 4.3.1,”

Tech. Rep., 2017.

[36] C. Szilagy and P. Koopman, “A ﬂexible approach to embedded

network multicast authentication,” 2008.
[37] A. Goldsmith, Wireless communications.

Cambridge university

press, 2005.

[38] R. I. Davis et al., “Controller area network (can) schedulabil-
ity analysis: Refuted, revisited and revised,” Real-Time Systems,
vol. 35, no. 3, pp. 239–272, 2007.

[39] B. Groza et al., “Libra-can: a lightweight broadcast authentication
protocol for controller area networks,” in Proc. of Int. Conf. on
Cryptography and Network Security. Springer, 2012, pp. 185–200.

[40] SocketCAN, “Linux-CAN/SocketCAN user space applictions,”
https://github.com/linux-can/can-utils, 2018, accessed: 2018-10-
13.

[41] J. Ferreira et al., “An experiment to assess bit error rate in CAN,”

Xuhang Ying (S’15) is a Postdoctoral Research
Associate at the Network Security Lab at Uni-
versity of Washington. He received his B.Eng.
degree in Information Engineering from the Chi-
nese University of Hong Kong, his M.S. and
Ph.D. degrees in Electrical Engineering from
the University of Washington in 2013, 2016,
and 2018, respectively. His Ph.D. research fo-
cused on crowdsensing and resource allocation
in shared spectrum. His research interests in-
clude Controller Area Networks (CAN) security

is a Postdoctoral Re-
Giuseppe Bernieri
searcher at
the Department of Mathematics,
University of Padua, Padua, Italy. He received
the Ph.D. degree in computer science and
automation from the University of Roma Tre,
Rome,
Italy. His research interests include
cyber-physical system security, cyber security
applied to industrial control systems and critical
infrastructures, the development and the imple-
mentation of ad-hoc solutions for the detection
of cyber-physical threats affecting SCADA sys-

and wireless security.

tems.

IEEE TRANSACTIONS ON DEPENDABLE AND SECURE COMPUTING, VOL. XX, NO. XX, AUGUST 2019

16

Radha Poovendran (F’15) is a Professor and
the Chair of the Electrical and Computer Engi-
neering Department at the University of Wash-
ington (UW). He is the Director of the Network
Security Lab (NSL) at the University of Washing-
ton. He is the Associate Director of Research of
the UW Center for Excellence in Information As-
surance Research and Education. He received
the B.S. degree in Electrical Engineering and the
M.S. degree in Electrical and Computer Engi-
neering from the Indian Institute of Technology-
Bombay and University of Michigan - Ann Arbor in 1988 and 1992,
respectively. He received the Ph.D. degree in Electrical and Computer
Engineering from the University of Maryland - College Park in 1999. His
research interests are in the areas of wireless and sensor network se-
curity, control and security of cyber-physical systems, adversarial mod-
eling, smart connected communities, control-security, games-security
and information theoretic security in the context of wireless mobile
networks. He is a Fellow of the IEEE for his contributions to security
in cyber-physical systems. He is a recipient of the NSA LUCITE Rising
Star Award (1999), National Science Foundation CAREER (2001), ARO
YIP (2002), ONR YIP (2004), and PECASE (2005) for his research
contributions to multi-user wireless security. He is also a recipient of
the Outstanding Teaching Award and Outstanding Research Advisor
Award from UW EE (2002), Graduate Mentor Award from Ofﬁce of
the Chancellor at University of California - San Diego (2006), and the
University of Maryland ECE Distinguished Alumni Award (2016). He
was co-author of award-winning papers including IEEE/IFIP William C.
Carter Award Paper (2010) and WiOpt Best Paper Award (2012). He
holds eight patents in wireless and aviation security.

Mauro Conti is Full Professor at the Univer-
sity of Padua, Italy. He obtained his Ph.D. from
Sapienza University of Rome, Italy, in 2009. After
his Ph.D., he was a Post-Doc Researcher at
Vrije Universiteit Amsterdam, The Netherlands.
In 2011 he joined as Assistant Professor the Uni-
versity of Padua, where he became Associate
Professor in 2015, and Full Professor in 2018.
He has been Visiting Researcher at GMU (2008,
2016), UCLA (2010), UCI (2012, 2013, 2014,
2017), TU Darmstadt (2013), UF (2015), and FIU
(2015, 2016). He has been awarded with a Marie Curie Fellowship
(2012) by the European Commission, and with a Fellowship by the
German DAAD (2013). His research is also funded by companies,
including Cisco and Intel. His main research interest is in the area of
security and privacy. In this area, he published more than 200 papers
in topmost international peer-reviewed journals and conference. He is
Associate Editor for several journals, including IEEE Communications
Surveys & Tutorials, IEEE Transactions on Information Forensics and
Security, and IEEE Transactions on Network and Service Management.
He was Program Chair for TRUST 2015, ICISS 2016, WiSec 2017, and
General Chair for SecureComm 2012 and ACM SACMAT 2013. He is
Senior Member of the IEEE.

Linda Bushnell (F’17) is a Research Professor
and the Director of the Networked Control Sys-
tems Lab in the Electrical and Computer Engi-
neering Department at the University of Wash-
ington - Seattle. She received the B.S. degree
and M.S. degree in Electrical Engineering from
the University of Connecticut - Storrs in 1985
and 1987, respectively. She received the M.A.
degree in Mathematics and the Ph.D. degree in
Electrical Engineering from the University of Cal-
ifornia - Berkeley in 1989 and 1994, respectively.
Her research interests include networked control systems, control of
complex networks, and secure-control. She was elected a Fellow of the
IEEE for her contributions to networked control systems. She is a recip-
ient of the US Army Superior Civilian Service Award, NSF ADVANCE
Fellowship, and IEEE Control Systems Society Distinguished Member
Award. She is currently an Associate-Editor for Automatica and IEEE
Transactions on Control of Network Systems and Series Editor for the
Springer series Advanced Textbooks in Control and Signal Processing.
She is currently Chair of the IEEE Control Systems Society (CSS)
Women in Control Standing Committee, and Liaison to IEEE Women in
Engineering (WIE). She is also the Treasurer of the American Automatic
Control Council (AACC) and a Member of the International Federation
of Automatic Control (IFAC) Technical Board.

