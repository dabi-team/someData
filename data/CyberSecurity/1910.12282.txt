9
1
0
2

t
c
O
7
2

]

Y
S
.
s
s
e
e
[

1
v
2
8
2
2
1
.
0
1
9
1
:
v
i
X
r
a

Linear Temporal Logic Satisfaction in
Adversarial Environments using Secure Control
Barrier Certiﬁcates (cid:63)

Bhaskar Ramasubramanian1, Luyao Niu2, Andrew Clark2,
Linda Bushnell1, and Radha Poovendran1

1 Department of Electrical and Computer Engineering, University of Washington,
Seattle, WA 98195, USA.
{bhaskarr, lb2, rp3}@uw.edu
2 Department of Electrical and Computer Engineering, Worcester Polytechnic Institute,
Worcester, MA 01609, USA.
{lniu, aclark}@wpi.edu

Abstract. This paper studies the satisfaction of a class of temporal prop-
erties for cyber-physical systems (CPSs) over a ﬁnite-time horizon in the
presence of an adversary, in an environment described by discrete-time dy-
namics. The temporal logic speciﬁcation is given in sa f e − LTLF , a frag-
ment of linear temporal logic over traces of ﬁnite length. The interaction of
the CPS with the adversary is modeled as a two-player zero-sum discrete-
time dynamic stochastic game with the CPS as defender. We formulate a dy-
namic programming based approach to determine a stationary defender pol-
icy that maximizes the probability of satisfaction of a sa f e − LTLF formula
over a ﬁnite time-horizon under any stationary adversary policy. We intro-
duce secure control barrier certiﬁcates (S-CBCs), a generalization of barrier
certiﬁcates and control barrier certiﬁcates that accounts for the presence
of an adversary, and use S-CBCs to provide a lower bound on the above
satisfaction probability. When the dynamics of the evolution of the system
state has a speciﬁc underlying structure, we present a way to determine
an S-CBC as a polynomial in the state variables using sum-of-squares opti-
mization. An illustrative example demonstrates our approach.

Keywords: Linear temporal logic · sa f e − LTLF · Dynamic programming
· Secure control barrier certiﬁcate · Sum-of-squares optimization.

1 Introduction

Cyber-physical systems (CPSs) use computing devices and algorithms to inform
the working of a physical system [8]. These systems are ubiquitous, and vary in
size and scale from energy systems to medical devices. The wide-spread inﬂuence

(cid:63)

This work was supported by the U.S. Army Research Ofﬁce, the National Science Foun-
dation, and the Ofﬁce of Naval Research via Grants W911NF-16-1-0485, CNS-1656981,
and N00014-17-S-B001 respectively.

 
 
 
 
 
 
of CPSs such as power systems and automobiles makes their safe operation criti-
cal. Although distributed algorithms and systems allow for more efﬁcient sharing
of information among parts of the system and across geographies, they also make
the CPS vulnerable to attacks by an adversary who might gain access to the dis-
tributed system via multiple entry points. Attacks on distributed CPSs have been
reported across multiple application domains [20], [43], [44], [46]. In these cases,
the damage to the CPS was caused by the actions of a stealthy, intelligent ad-
versary. Thus, methods designed to only account for modeling and sensing errors
may not meet performance requirements in adversarial scenarios. Therefore, it is
important to develop ways to specify and verify properties that a CPS must sat-
isfy that will allow us to provide guarantees on the operation of the system while
accounting for the presence of an adversary.

In order to verify the behavior of a CPS against a rich set of temporal speci-
ﬁcations, techniques from formal methods can be used [9]. Properties like safety,
stability, and priority can be expressed as formulas in linear temporal logic (LTL)
[19]. These properties can then be veriﬁed using off-the-shelf model solvers [15],
[28] that take these formulas as inputs. If the state space and the actions avail-
able to the agents are both ﬁnite and discrete, then the environment can be repre-
sented as a Markov decision process (MDP) [38] or a stochastic game [11]. These
representations have also been used as abstractions of continuous-state continu-
ous action dynamical system models [10], [32]. However, a signiﬁcant shortcoming
is that the computational complexity of abstracting the underlying system grows
exponentially with the resolution of discretization desired [14], [21].

The method of barrier certiﬁcates (or barrier functions), which are functions
of the states of the system was introduced in [36]. Barrier functions provide a cer-
tiﬁcate that all trajectories of a system starting from a given initial set will not
enter an unsafe region. The use of barrier functions does not require explicit com-
putation of sets of reachable states, which is known to be undecidable for general
dynamical systems [29], and moreover, it allows for the analysis of general nonlin-
ear and stochastic dynamical systems. The authors of [36] further showed that if
the states and inputs to the system have a particular structure, computationally
efﬁcient methods can be used to construct a barrier certiﬁcate.

Barrier certiﬁcates were used to determine probabilistic bounds on the satis-
faction of an LTL formula by a discrete-time stochastic system in [22]. A more re-
cent work by the same authors [23] used control barrier certiﬁcates to synthesize
a policy in order to maximize the probability of satisfaction of an LTL formula.

Prior work that uses barrier certiﬁcates to study temporal logic satisfaction
assumes a single agent, and does not study the case when the CPS is operating
in an adversarial environment. To the best of our knowledge, this paper is the
ﬁrst to use barrier certiﬁcates to study temporal logic satisfaction for CPSs in
adversarial environments. We introduce secure barrier certiﬁcates (S-CBCs), and
use it to determine probabilistic bounds on the satisfaction of an LTL formula
under any adversary policy. Further, deﬁnitions of barrier certiﬁcates and control
barrier certiﬁcates in prior work can be recovered as special cases of S-CBCs.

1.1 Contributions

In this paper, we consider the setting when there is an adversary whose aim is to
ensure that the LTL formula is not satisﬁed by the CPS (defender). The temporal
logic speciﬁcation is given in sa f e − LTLF , a fragment of LTL over traces of ﬁnite
length. We make the following contributions:

– We model the interaction between the CPS and adversary as a two-player
dynamic stochastic game with the CPS as defender. The two players take their
actions simultaneously, and these jointly inﬂuence the system dynamics.
– We present a dynamic programming based approach to determine a station-
ary defender policy to maximize the probability of satisfaction of an LTL for-
mula over a ﬁnite time-horizon under any stationary adversary policy.

– In order to determine a lower bound on the above satisfaction probability, we
deﬁne a new entity called secure control barrier certiﬁcates (S-CBCs). S-CBCs
generalize barrier certiﬁcates and control barrier certiﬁcates to account for
the presence of an adversary.

– When the evolution of the state of the dynamic game can be expressed as poly-
nomial functions of the states and inputs, we use sum-of-squares optimization
to compute an S-CBC as a polynomial function of the states.

– We present an illustrative example demonstrating our approach.

1.2 Outline of Paper

We summarize related work on control barrier certiﬁcates and temporal logic sat-
isfaction in Section 2. Section 3 gives an overview of temporal logic and game-
theoretic concepts that will be used to derive our results. The problem that is the
focus of this paper is formulated in Section 4. Our solution approach is presented
in Section 5, where we deﬁne a dynamic programming operator to synthesize a
policy for the defender in order to maximize the probability of satisfaction of the
LTL formula under any adversary policy. We deﬁne a notion of secure control
barrier certiﬁcates to derive a lower bound on the satisfaction probability, and
are able to explicitly compute an S-CBC under certain assumptions. Section 6
presents an illustrative example, and we conclude the paper in Section 7.

2 Related Work

The method of barrier functions was introduced in [36] to certify that all trajec-
tories of a continuous-time system starting from a given initial set do not enter
an unsafe region. Control barrier functions (CBFs) were used to provide guaran-
tees on the safety of continuous-time nonlinear systems with afﬁne inputs for an
adaptive cruise control application in [6]. The notion of input-to-state CBFs that
ensured the safety of nonlinear systems under arbitrary input disturbances was
introduced in [24], and safety was characterized in terms of the invariance of a set
whose computation depended on the magnitude of the disturbance. The authors

of [45] relaxed the supermartingale condition that a barrier certiﬁcate had to sat-
isfy in [36] in order to provide ﬁnite-time guarantees on the safety of a system.
The veriﬁcation and control of a ﬁnite-time safety property for continuous-time
stochastic systems using barrier functions was recently presented in [41]. Barrier
certiﬁcates were used to verify LTL formulas for a deterministic, continuous-time
nonlinear dynamical system in [49]. Time-varying CBFs were used to accomplish
tasks speciﬁed in signal temporal logic in [30]. A survey of the use of CBFs to
design safety-critical controllers is presented in [5]. The use of barrier certiﬁcates
or CBFs in these works were all for continuous time dynamical systems and did
not consider the effect of the actions of an adversarial player.

Barrier certiﬁcates in the discrete-time setting were used to analyze the reach-
able belief space of a partially observable Markov decision process (POMDP) with
applications to verifying the safety of POMDPs in [2], and for privacy veriﬁcation
in POMDPs in [3]. The use of barrier certiﬁcates for the veriﬁcation and synthesis
of control policies for discrete-time stochastic systems to satisfy an LTL formula
over a ﬁnite time horizon was presented in [22] and [23]. These papers also as-
sumed a single agent, and did not account for the presence of an adversary.

The authors of [33] used barrier functions to solve a reference tracking prob-
lem for a continuous-time linear system subject to possible false data injection
attacks by an adversary, with additional constraints on the safety and reachabil-
ity of the system. Probabilistic reachability over a ﬁnite time horizon for discrete-
time stochastic hybrid systems was presented in [1]. This was extended to a dy-
namic stochastic game setting when there were two competing agents in [18],
and to the problem of ensuring the safety of a system that was robust to errors in
the probability distribution of a disturbance input in [50]. These papers did not
assume that a temporal speciﬁcation had to be additionally satisﬁed.

Determining a policy for an agent in order to maximize the probability of sat-
isfying an LTL formula in an environment speciﬁed by an MDP was presented in
[19]. This setup was extended to the case when there were two agents- a defender
and an adversary- who had competing objectives to ensure the satisfaction of the
LTL formula in an environment speciﬁed as a stochastic game in [32]. These pa-
pers assume that the states of the system are completely observable, which might
not be true in every situation. The satisfaction of an LTL formula in partially
observable environments represented as POMDPs was studied in [42] and the ex-
tension to partially observable stochastic games with two competing agents, each
with its own observation of the state of the system, was formulated in [39].

3 Preliminaries

In this section, we give a brief introduction to linear temporal logic and discrete-
time dynamic stochastic games. Wherever appropriate, we consider a probability
space (Ω, F , (cid:80)). We write (X , B(X )) to denote the measurable space X equipped
with the Borel σ−algebra, and (cid:82)≥0 to denote the set of non-negative real numbers.

3.1 Linear Temporal Logic

Temporal logic frameworks enable the representation and reasoning about tem-
poral information on propositional statements. Linear temporal logic (LTL) is one
such framework, where the progress of time is ‘linear’. An LTL formula [9] is
deﬁned over a set of atomic propositions A P , and can be written as:

φ := T|σ|¬φ|φ ∧ φ|Xφ|φUφ,

where σ ∈ A P , and X and U are temporal operators denoting the next and until
operations. The semantics of LTL are deﬁned over (inﬁnite) words in 2A P .

The syntax of linear temporal logic over ﬁnite traces, denoted LTLF [17], is
the same as that of LTL. The semantics of LTLF is expressed in terms of ﬁnite-
length words in 2A P . We denote a word in LTLF by η, write |η| to denote the
length of η, and ηi, 0 < i < |η|, to denote the proposition at the ith position of η. We
write (η, i) |= φ when the LTLF formula φ is true at the ith position of η.

Deﬁnition 1 (LTLF Semantics). The semantics of LTLF can be recursively de-
ﬁned in the following way:

1. (η, i) |= T;
2. (η, i) |= σ iff σ ∈ ηi;
3. (η, i) |= ¬φ iff (η, i) (cid:54)|= φ;
4. (η, i) |= φ1 ∧ φ2 iff (η, i) |= φ1 and (η, i) |= φ2;
5. (η, i) |= Xφ iff i < |η| − 1 and (η, i + 1) |= φ;
6. (η, i) |= φ1Uφ2 iff ∃ j ∈ [i, |η|] such that (η, j) |= φ2 and for all k ∈ [i, j), (η, k) |= φ1.

Finally, we write η |= φ if and only if (η, 0) |= φ.

Moreover, the logic admits derived formulas of the form: i) φ1 ∨ φ2 := ¬(¬φ1 ∧
¬φ2); ii) φ1 ⇒ φ2 := ¬φ1∨φ2; iii) Fφ := TUφ (eventually); iv) Gφ := ¬F¬φ (always).
The set L (φ) comprises the language of ﬁnite-length words associated with the
LTLF formula φ. In this paper, we focus on a subset of LTLF called sa f e − LTLF
[40], that explicitly considers only safety properties [26].

Deﬁnition 2 (sa f e − LTLF Formula). An LTLF formula is a sa f e − LTLF for-
mula if it can be written in positive normal form (PNF)3, using the temporal oper-
ators X (next) and G (always).

Next, we deﬁne an entity that will serve as an equivalent representation of an
LTLF formula, and will allow us to check if the LTLF formula is satisﬁed or not.

Deﬁnition 3 (Deterministic Finite Automaton). A deterministic ﬁnite au-
tomaton (DFA) is a quintuple A = (Q, Σ, δ, q0, F) where Q is a nonempty ﬁnite
set of states, Σ is a ﬁnite alphabet, δ : Q × Σ → Q is a transition function, q0 ∈ Q is
the initial state, and F ⊆ Q is a set of accepting states.

3 In PNF, negations occur only adjacent to atomic propositions.

Deﬁnition 4 (Accepting Runs). A run of A of length n is a ﬁnite sequence of
σn−1−−−→ qn such that qi ∈ δ(qi−1, σi−1) for all i ∈ [1, n]
(n + 1) states q0
and for some σ0, . . . , σn−1 ∈ Σ. The run is accepting if qn ∈ F. We write L (A ) to
denote the set of all words accepted by A .

σ0−→ q1

σ1−→ . . .

Every LTLF formula φ over A P can be represented by a DFA Aφ with Σ =
2A P that accepts all and only those runs that satisfy φ, that is, L (φ) = L (Aφ)
[16]. The DFA Aφ can be constructed by using a tool like Rabinizer4 [25].

3.2 Discrete-time Dynamic Stochastic Games

We model the interaction between the CPS (defender) and adversary as a two-
player dynamic stochastic game that evolves according to some known (discrete-
time) dynamics [7]. The evolution of the state of the game at each time step is
affected by the actions of both players.

Deﬁnition 5 (Discrete-time Dynamic Stochastic Game). A discrete-time dy-
namic stochastic game (DDSG) is a tuple G = (X ,W,Ud,Ua, f , N , A P , L), where
X ⊆ (cid:82)n and W are Borel-measurable spaces representing the state-space and un-
certainty space of the system, Ud ⊆ (cid:82)d and Ua ⊆ (cid:82)a are compact Borel spaces that
denote the action sets of the defender and adversary, f : X × Ud × Ua × W → X is
a Borel-measurable transition function characterizing the evolution of the system,
N = {0, 1, . . . , N − 1} is an index-set denoting the stage of the game, A P is a set of
atomic propositions, and L : X → 2A P is a labeling function that maps states to a
subset of atomic propositions that are satisﬁed in that state.

The evolution of the state of the system is given by:

x(k + 1) = f (x(k), ud(k), ua(k), w(k));

x(0) = x0 ∈ X ;

k ∈ N ,

(1)

where {w(k)} is a sequence of independent and identically distributed (i.i.d.) ran-
dom variables with zero mean and bounded covariance.

In this paper, we focus on the Stackelberg setting with the defender as leader
and adversary as follower. The leader selects its inputs anticipating the worst-
case response by the adversary. We assume that the adversary can choose its
action based on the action of the defender [18], and further, restrict our focus to
stationary strategies for the two players. Due to the asymmetry in information
available to the players, equilibrium strategies for the case when the game is
zero-sum can be chosen to be deterministic strategies [13].

Deﬁnition 6 (Defender Strategy). A stationary strategy for the defender is a
sequence µ(d) := {µ(d)

k }k∈N of Borel-measurable maps µ(d)

k : X → Ud.

Deﬁnition 7 (Adversary Strategy). A stationary strategy for the adversary is
a sequence µ(a) := {µ(a)

k }k∈N of Borel-measurable maps µ(a)

k : X ×Ud → Ua.

4 Problem Formulation

For a DDSG G , recall that the labeling function L indicates which atomic propo-
sitions are true in each state.

Assumption 1 We restrict our attention to labeling functions of the form L : X →
A P . Then, if A P = (a1, . . . , a p), A P and L will partition the state space as X :=
∪p
i=1 X i, where X i := L−1(ai). We further assume that X i (cid:54)= (cid:59) for all i.

Remark 1. Through the remainder of the paper, we interchangeably use xk or
x(k) to denote the state at time k.

Given a sequence of states xN := (x0, x1, . . . , xN−1), using Assumption 1, if ηk =

L(xk) for all k ∈ N , then we can write L(xN ) = (η0, η1, . . . , ηN−1).

Deﬁnition 8 (LTL Satisfaction by DDSG). For a DDSG G and a sa f e − LTLF
formula φ, we write (cid:80)x0
µ(d),µ(a) {L(xN ) |= φ} to denote the probability that the evolu-
tion of the DDSG starting from x(0) = x0 under player policies µ(d) and µ(a) satisﬁes
φ over the time horizon N = {0, 1, . . . , N − 1}.

We are now ready to formally state the problem that this paper seeks to solve.

Problem 1. Given a discrete-time dynamic game G = (X ,W,Ud,Ua, f , N , A P , L)
that evolves according to the dynamics in Equation (1) and a sa f e − LTLF for-
mula φ, determine a policy for the defender, µ(d), that maximizes the probability of
satisfying φ over the time horizon N = {0, 1, . . . , N − 1} under any adversary policy
µ(a) for all x0 ∈ L−1(a j) for some a j ∈ A P . That is, compute:

sup
µ(d)

inf
µ(a)

(cid:80)x0
µ(d),µ(a) {L(xN ) |= φ}

(2)

5 Solution Approach

In this section, we present a dynamic programming approach to determine a so-
lution to Problem 1. Our analysis is motivated by the treatment in [18] and [50].
We then introduce the notion of secure control barrier certiﬁcates (S-CBCs),
and use these to provide a lower bound on the probability of satisfaction of the
sa f e − LTLF formula φ for a defender policy under any adversary policy in terms
of the accepting runs of length less than or equal to the length of the time-horizon
of interest of a DFA associated with φ. For systems whose evolution of states can
be written as a polynomial function of states and inputs, we present a sum-of-
squares optimization approach in order to compute an S-CBC.

S-CBCs generalize barrier certiﬁcates [22] and control barrier certiﬁcates [23]
to account for the presence of an adversary. A difference between the treatment in
this paper and that of [22], [23] is that we deﬁne S-CBCs for stochastic dynamic
games, while the latter papers focus on stochastic systems with a single agent.

5.1 Dynamic Programming for sa f e − LTLF Satisfaction
We introduce a dynamic programming (DP) operator that will allow us to recur-
sively solve a Bellman equation related to Equation (2) backward in time. First,
observe that we can write the satisfaction probability in Deﬁnition 8 as:

µ(d),µ(a) {L(xN ) |= φ} = (cid:69)µ(d),µ(a) { (cid:89)
(cid:80)x0

k∈N

1(L(xk) |= φ)|x(0) = x0},

(3)

where (cid:69)µ(d),µ(a) is the expectation operator under the probability measure (cid:80)µ(d),µ(a)
induced by agent policies µ(d) and µ(a). 1(·) is the indicator function, which takes
value 1 if its argument is true, and 0 otherwise.

Assume that V : X → [0, 1] is a Borel-measurable function. A DP operator T

can then be characterized in the following way:

V (xN−1) = 1(L(xN−1) |= φ)

(TV )(xk) := sup
ud

inf
ua

1(L(xk) |= φ)

(cid:90)

X

V ( f (xk, ud, ua, w))dxk+1,

(4)

(5)

where dxk+1 ≡ (dxk+1|xk, ud, ua) is a probability measure on the Borel space (X , B(X )).
The following results adapts Theorem 1 of [18] to the case of temporal logic

formula satisfaction over a ﬁnite time-horizon.
Theorem 1. Assume that the DDSG G has to satisfy a sa f e − LTLF formula φ
over horizon N . Let the DP operator T be deﬁned as in Equation (5). Additionally,
if dxk ≡ (dxk+1|xk, ud, ua) is continuous, then,

sup
µ(d)

inf
µ(a)

(cid:80)x0
µ(d),µ(a) {L(xN ) |= φ} = (T N V )(x0),

(6)

where T N := T ◦ T ◦ · · · ◦ T (N times) is the repeated composition of the operator T.
Proof. Consider a particular pair of stationary agent policies µ(d) and µ(a). For
: X → [0, 1], k = 0, 1, . . . , N − 1:

µ(d),µ(a)
these policies, deﬁne measurable functions V
k

V

µ(d),µ(a)
N−1

(xN−1) := 1(L(xN−1) |= φ)

µ(d),µ(a)
V
k

(xk) := (cid:69)µ(d),µ(a) {

N−1
(cid:89)

i=k

1(L(xi) |= φ)|x(k) = xk}, k = 0, 1, . . . , N − 2

(7)

(8)

Therefore, we have (cid:80)x0

µ(d),µ(a) {L(xN ) |= φ} = V

µ(d),µ(a)
0

(x0).

Now, consider strategies of the agents at a stage k. Deﬁne the operator Tµ(d)

k ,µ(a)

k

:

(Tµ(d)

k ,µ(a)

k

V )(xk) := 1(L(xk) |= φ)

(cid:90)

X

V ( f (xk, ud, ua, w))dxk+1

(9)

Expanding Equation (8) using the deﬁnition of the expectation operator will

µ(d),µ(a)
allow us to write V
k

(x) = (Tµ(d)

k+1,µ(a)
k+1

V )(x).

The result follows by an induction argument which uses the fact that Tµ(d)
k ,µ(a)
is a monotonic operator. We refer to [18] for details. Further, this procedure also
guarantees the existence of a defender policy that will maximize the probability
(cid:117)(cid:116)
of satisfaction of φ under any adversary policy.

k

5.2 Secure Control Barrier Certiﬁcates

Deﬁnition 9. A continuous function B : X → (cid:82)≥0 is a secure control barrier cer-
tiﬁcate (S-CBC) for the DDSG G if for any state x ∈ X and some constant c ≥ 0,

inf
ud

sup
ua

(cid:69)w[B( f (x, ud, ua, w)|x] ≤ B(x) + c.

(10)

Intuitively, for some defender action ud, the increase in the value of an S-CBC

is bounded from above along trajectories of G under any adversary action ua.

Remark 2. S-CBCs generalize control barrier certiﬁcates and barrier certiﬁcates
seen in prior work. If f (x, ud, ua1 , w) ∼ f (x, ud, ua2 , w) for every ua1 , ua2
∈ Ua, then
we recover the deﬁnition of a control barrier certiﬁcate [23]. The deﬁnition of a
barrier certiﬁcate [22], [36] is got by additionally requiring that f (x, ud1 , ua1 , w) ∼
∈ Ua. Here ∼ denotes stochas-
f (x, ud2 , ua2 , w) for every ud1 , ud2
tic equivalence of the respective stochastic processes [35]. In the latter case, when
c = 0, the function B is a super-martingale. For this case, along with some addi-
tional assumptions on the system dynamics, asymptotic guarantees on the satis-
faction of properties over the inﬁnite time-horizon can be established [36].

∈ Ud and ua1 , ua2

Remark 3. Although our deﬁnition of S-CBCs in Deﬁnition 9 bears resemblance
to the notion of a worst-case barrier certiﬁcate introduced in [36], there are some
distinctions. While the entity in [36] considers a dynamical system with a single
disturbance input, our setting considers three terms that inﬂuence the evolution
of the state of the system: we want to ﬁnd a defender input that will allow the
barrier function to satisfy a certain property under any adversary input and dis-
turbance. A second point of difference is that while [36] focuses on asymptotic
analysis, we consider properties over a ﬁnite time horizon.

We limit our attention to stationary strategies for both players. Studying the
effects of other strategies is left as future work. The following preliminary result
will be used subsequently to determine a bound on the probability of reaching a
subset of states under particular agent policies over a ﬁnite time-horizon.

Lemma 1. Consider a DDSG G and let B : X → (cid:82)≥0 be an S-CBC as in Deﬁnition
9 with constant c ≥ 0. Then, for any λ > 0 and initial state x0 ∈ X , for a stationary
defender policy, µ(d) : X → Ud, the following holds under any stationary adversary
policy µ(a) : X ×Ud → Ua:

inf
µ(d)

sup
µ(a)

(cid:80)x0
µ(d),µ(a) [ sup
0≤k<N

B(x(k)) ≥ λ] ≤

B(x0) + cN
λ

(11)

Proof. The proof follows from the result of Chapter III, Theorem 3 and Corollary
2-1 in [27], Deﬁnition 9, and the fact that the agents adopt stationary policies. (cid:117)(cid:116)

Deﬁnition 10 (s−Reachability). For the DDSG G with dynamics in Equation
(1), let s ∈ [0, 1] and X0 ⊂ X be the set of possible initial states and X1 ⊂ X be
disjoint from X0. Then, given x0 ∈ X0, G is s−reachable with respect to X1, if
(cid:80)x0 [xk ∈ X1] ≤ s. That is, the probability of reaching a state in X1 starting
sup
k∈N
from x0 ∈ X0 in the time horizon [0, N] is upper bounded by s.

Theorem 2. With X0 and X1 known, and X0 ∩ X1 = (cid:59), assume there exists an
S-CBC B : X → (cid:82)≥0, stationary policies, µ(d) : X → Ud and µ(a) : X × Ud → Ua, and
constant c ≥ 0. Additionally, if there is a constant δ ∈ [0, 1] such that:

1. B(x) ≤ δ for all x ∈ X0,
2. B(x) > 1 for all x ∈ X1,

then the DDSG G starting from x0 ∈ X0 is (δ + cN)−reachable with respect to X1.

Proof. Observe that X1 ⊆ {x ∈ X : B(x) ≥ 1}. Therefore, starting from x0, and follow-
ing the respective agent policies, (cid:80)x0
µ(d),µ(a) [B(x(k)) ≥
1]. Since this should be true for arbitrary k, we have:

µ(d),µ(a) [∃k ∈ N : x(k) ∈ X1] ≤ (cid:80)x0

sup
k∈N

(cid:80)x0 [xk ∈ X1] ≤ (cid:80)x0

µ(d),µ(a) { sup
k∈N

B(x(k)) ≥ 1} ≤ inf
µ(d)

sup
µ(a)

(cid:80)x0
µ(d),µ(a) { sup
k∈N

B(x(k)) ≥ 1}

≤ B(x0) + cN ≤ δ + cN

The second line of the above system of inequalities follows by setting λ = 1 in
(cid:117)(cid:116)
Lemma 1, and the fact that B(x) ≤ δ for all x ∈ X0.

5.3 Automaton-Based Veriﬁcation

In order to verify that {L(xN ) |= φ} under agent policies µ(d) and µ(a), we need to
establish that (η0, η1, . . . , ηN−1) ⊆ L (Aφ). To do this, we ﬁrst construct a DFA A¬φ,
that accepts all and only those words over A P that do not satisfy the sa f e−LTLF
formula φ. We have the following result:

Lemma 2. [9] For L(xN ) = (η0, η1, . . . , ηN−1) and a DFA Aφ, the following is true:

(η0, η1, . . . , ηN−1) ⊆ L (Aφ) ⇔ (η0, η1, . . . , ηN−1) ∩ L (A¬φ) = (cid:59)

The construction of A¬φ can also be carried out in Rabinizer4 [25]. The ac-
cepting runs of A¬φ of length less than or equal to N can be computed using a
depth-ﬁrst search algorithm [47]. For the purposes of this section, it is important
to understand that the accepting runs of A¬φ of length less than or equal to N will
give a bound on the probability that a particular pair of agent policies (µ(d), µ(a))
will not satisfy φ over the time horizon N . Using Deﬁnition 4 and following the
treatment of [22] and [23] deﬁne the following terms (the reader is also referred
to these works for an example that offers a detailed treatment of the procedure):

N (A¬φ) := {q = (q0, . . . , qn) ∈ R N (A¬φ) : a ∈ A P and q0

R N (A¬φ) := {q = (q0, . . . , qn) ∈ L (A¬φ) : n ≤ N, qi (cid:54)= qi+1∀i < n}
a−→ q1}
Ra
{(qi, qi+1, qi+2, T(q, qi+1)) : 0 ≤ i ≤ n − 2} q ∈ Ra
(cid:59)

P a(q) :=

(cid:40)

N (A¬φ), |q| > 2

otherwise

(12)

(13)

T(q, qi+1) :=

(cid:40)

N + 2 − |q| ∃a ∈ A P : qi+1
1

otherwise

a−→ qi+1

(14)

(15)

Intuitively, R N (A¬φ) is the set of accepting runs in A¬φ of length not greater
than N, and without counting any self-loops in the states of the DFA. The set
Ra
N (A¬φ) is the set of runs in R N (A¬φ) with the ﬁrst state transition labeled by
a ∈ A P . For an element of Ra
N (A¬φ), P a(q) deﬁnes the set of paths of length
3 augmented with a ‘loop-bound’. The ‘loop-bound’ T(q, qi+1) is an indicator of
the number of ‘self-loops’ the run in the DFA can make at state qi+1 while still
keeping its length less than or equal to N. We assume that T(q, qi+1) = 1 when
the run cannot make a self-loop at qi+1.

5.4 Satisfaction probability using S-CBCs and A¬φ

In this section, we show that an accepting run of A¬φ of length less than or equal
to N gives a lower bound on the probability that a particular pair of agent policies
will not satisfy the sa f e − LTLF formula φ. We use this in conjunction with the
S-CBC to derive an upper bound on the probability that φ will be satisﬁed for a
particular choice of defender policy under any adversary policy. Speciﬁcally, we
use Theorem 2 over each accepting run of A¬φ of length less than or equal to N
to give a bound on the overall satisfaction probability.

Theorem 3. Assume that the DDSG G has to satisfy a sa f e − LTLF formula φ
over horizon N . Let A¬φ be the DFA corresponding to the negation of φ, and for
this DFA, assume that the quantities in Equations (12)-(14) have been computed.
Then, for some a j ∈ A P and all x0 ∈ L−1(a j) the maximum value of the probabil-
ity of satisfaction of φ for a defender policy µ(d) under any adversary policy µ(a)
satisﬁes the following inequality:

sup
µ(d)

inf
µ(a)

µ(d),µ(a) {L(xN ) |= φ} ≥ 1 − (cid:88)
(cid:80)x0

q∈R

a j
N (A¬φ)

(cid:89)

(δρ + cρ T),

ρ∈P a j (q)

where ρ = (q, q(cid:48), q(cid:48)(cid:48), T) ∈ P a j (q) is the set of paths of length 3 with loop bound T
for a j ∈ A P in an accepting run of length N in A¬φ.

Proof. For a j ∈ A P , consider q ∈ Ra j
N (A¬φ) (Equation (13)) and the set P a j (q)
(Equations (14) and (15)). Consider an element ρ = (q, q(cid:48), q(cid:48)(cid:48), T) ∈ P a j (q). From
Theorem 2, for some stationary defender policy µ(d), the probability that a tra-
σ−→ q(cid:48)) and reaching x1 ∈ L−1(σ : q(cid:48) σ−→ q(cid:48)(cid:48))
jectory of G starting from x0 ∈ L−1(σ : q
under stationary adversary policy µ(a) over the time horizon T is at most δρ + cρ T.
Therefore, the probability of an accepting run in A¬φ of length at most N starting
from x0 ∈ L−1(a j) is upper bounded by:

inf
µ(d)

sup
µ(a)

µ(d),µ(a) {L(xN ) |= ¬φ} ≤ (cid:88)
(cid:80)x0

q∈R

a j
N (A¬φ)

(cid:89)

(δρ + cρ T)

ρ∈P a j (q)

Now consider Equation (2) of Problem 1. We have the following set of equiva-

lences and inequalities:

sup
µ(d)

inf
µ(a)

(cid:80)x0
µ(d),µ(a) {L(xN ) |= φ} = sup

µ(d)

(− sup
µ(a)

(−(cid:80)x0

µ(d),µ(a) {L(xN ) |= φ}))

= − inf
µ(d)

sup
µ(a)

(−(cid:80)x0

≥ 1 − inf
µ(d)

sup
µ(a)

µ(d),µ(a) {L(xN ) |= φ}) = − inf
µ(d),µ(a) {L(xN ) |= ¬φ} ≥ 1 − (cid:88)
(cid:80)x0

sup
µ(a)

µ(d)

(−1 + (cid:80)x0

µ(d),µ(a) {L(xN ) |= ¬φ})

q∈R

a j
N (A¬φ)

(cid:89)

(δρ + cρ T)

ρ∈P a j (q)

(cid:117)(cid:116)

Theorem 3 generalizes Theorem 5.2 of [23] to provide a lower bound for a station-
ary defender policy that maximizes the probability that the sa f e − LTLF formula
is satisﬁed by the DDSG G over the time horizon N , starting from x0 ∈ L−1(a j)
for some a j ∈ A P for any stationary adversary policy.

5.5 Computing an S-CBC

The use of barrier functions will circumvent the need to explicitly compute sets of
reachable states, which is known to be undecidable for general dynamical systems
[29]. However, computationally efﬁcient methods can be used to construct a bar-
rier certiﬁcate if the system dynamics can be expressed as a polynomial [36]. This
will allow for determining bounds on the probability of satisfaction of the LTL
formula without discretizing the state space. In contrast, if the underlying state
space is continuous, computing the satisfaction probability and the corresponding
agent policy using dynamic programming will necessitate a discretization of the
state space in order to approximate the integral in Equation (5).

We propose a sum-of-squares (SOS) optimization [34] based approach that
will allow us to compute an S-CBC if the evolution of the state of the DDSG has
a speciﬁc structure. The key insight is that if a function can be written as a sum
of squares of different polynomials, then it is non-negative.

Assumption 2 The sets X ,Ud,Ua in the DDSG G are continuous, and f (x, ud, ua, w)
in Equation (1) can be written as a polynomial in x, ud, ua for any w. Further, the
sets X i = L−1(ai) in Assumption 1 can be represented by polynomial inequalities.

Proposition 1. Under the conditions of Assumption 2, suppose that sets X0 :=
{x ∈ X : g0(x) ≥ 0}, X1 := {x ∈ X : g1(x) ≥ 0}, and X := {x ∈ X : g(x) ≥ 0}, where
the inequalities are element-wise. Assume that there is an SOS polynomial B(x),
constants δ ∈ [0, 1] and c, SOS (vector) polynomials s0(x), s1(x), and s(x), and poly-
nomials sd
ui

(x) corresponding to the ith entry in ud, such that:

(cid:214)

0(x)g0(x) + δ

− B(x) − s
(cid:214)
B(x) − s

1(x)g1(x) − 1
∀ua ∈ Ua : − (cid:69)w[B( f (x, ud, ua, w)|x] + B(x) − (cid:88)

i

(udi

− sd
ui

(x)) − s

(cid:214)

(x)g(x) + c

(16)

(17)

(18)

are all SOS polynomials. Then, B(x) satisﬁes the conditions of Theorem 2, and
udi

(x) is the corresponding defender policy.

= sd
ui

Proof. The proof of this result follows in a manner similar to Lemma 7 in [49] and
(cid:117)(cid:116)
Lemma 5.6 in [23], and we do not present it here.

The authors of [23] discuss an alternative approach in the case when the input
set has ﬁnite cardinality. A similar treatment is beyond the scope of the present
paper, and will be an interesting future direction of research.

6 Example

We present an example demonstrating our solution approach to Problem 1.

Example 1. Let the dynamics of the DDSG G with X = W = (cid:82)2, Ud is a compact
subset of (cid:82), Ua = [−1, 1], and w1(k), w2(k) ∼ U ni f [−1, 1] (and i.i.d.) be given by:

x1(k + 1) = −0.5x1(k)x2(k) + w1(k)
x2(k + 1) = x1(k)x2(k) + 0.1x2

2(k) + ud(k) + 0.6ua(k) + w2(k)

(19)

(20)

Let A P = {a0, a1, a2, a3, a4}, and sets X0, X1, X2, X3, X4 such that for x ∈ X i, L(x) =
ai. The sets X i are deﬁned by:

≤ 0.9},

X0 := {(x1, x2) : x2
+ x2
1
2
X1 := {(x1, x2) : (2 ≤ x1 ≤ 6) ∧ (−2 ≤ x2 ≤ 2)},
X2 := {(x1, x2) : x2
1
X3 := {(x1, x2) : (−10 ≤ x1 ≤ −3) ∧ (−4 ≤ x2 ≤ −2)},
X4 := X \ (cid:91)

+ (x2 − 10)2 ≤ 4},

X i.

i

The aim for an agent is to determine a sequence of inputs {ud} such that start-
ing from X0, for any sequence of adversary inputs {ua}, it avoids obstacles in its
environment, deﬁned by the sets X1, X2, and X3 for 10 units of time. The corre-
sponding sa f e−LTLF formula is φ = [a0∧G¬(a1∨a2∨a3)]. The DFA that accepts
¬φ is shown in Figure 1. Suppose we are interested in determining a bound on the
probability of φ being satisﬁed for a time-horizon of length 10. Using Equations
(12) - (15), we have P a0 (q0, q1, q2) = {(q0, q1, q2, 9)}, and P a j = (cid:59) for j = 1, 2, 3, 4.

We use a sum-of-squares optimization toolbox, SOSTOOLS [37] along with
SDPT3 [48], a semideﬁnite program solver. The barrier function B(x) = B(x1, x2)
was assumed to be a polynomial of degree-two. For the case c = 0, we determine
the smallest value of δ that will satisfy the conditions in Proposition 1 to compute
an S-CBC. The output of the program was an S-CBC given by

B(x) = 0.1915x2
1

+ 0.1868x1x2 − 0.144x1 + 0.1201x2
2

+ 0.1239x2 + 0.16

The environment and the obstacles denoted by the sets X1, X2, X3 and the
contours of the S-CBC is shown in Figure 2. We observe that B(x) is less than 1 in

Fig. 1: The DFA that accepts ¬φ for the sa f e − LTLF formula φ = [a0 ∧ G¬(a1 ∨
a2 ∨ a3)] and A P = {a0, a1, a2, a3, a4}.

Fig. 2: The regions X0, X1, X2, X3, X4 along with the computed secure control
barrier certiﬁcate (S-CBC): B(x) = 0.1915x2
+
1
0.1239x2 + 0.16. The regions with red boundaries (X1, X2, X3) denote obstacles in
the environment. X0 is the set from which the agent starts at time 0. The contours
show the values of the S-CBC of degree 2 ranging from 1 to 100.

+ 0.1868x1x2 − 0.144x1 + 0.1201x2
2

some part of X1. A possible reason is that when solving for the second condition
in Proposition 1, we work with the union of the sets X1, X2, and X3, which may
lead to a conservative estimate of the S-CBC.

From Theorem 2 and the computed value of δ, we have that

sup
µ(d)

inf
µ(a)

(cid:80)x0
µ(d),µ(a) {L(xN ) |= φ} ≥ 0.9922.

This bound is conservative in the sense that we consider defender inputs ud for
only the extreme values of ua = −1 and ua = 1. However, for the dynamics in
Equation (20), if the last inequality in Proposition 1 is non-negative for both ua =
−1 and ua = 1, then for any ua ∈ [−1, 1], this quantity will be non-negative.

Determining methods to explicitly compute a defender policy and considering

S-CBCs of higher degree is an area of future research.

7 Conclusion

This paper introduced a new class of barrier certiﬁcates to provide probabilistic
guarantees on the satisfaction of temporal logic speciﬁcations for CPSs that may
be affected by the actions of an intelligent adversary. We presented a solution to
the problem of maximizing the probability of satisfying a temporal logic speci-
ﬁcation in the presence of an adversary. The interaction between the CPS and
adversary was modeled as a discrete-time dynamic stochastic game with the CPS
as defender. The evolution of the state of the game was inﬂuenced jointly by the
actions of both players. A dynamic programming based approach was used to syn-
thesize a policy for the defender in order to maximize this satisfaction probability
under any adversary policy. We introduced secure control barrier certiﬁcates, an
entity that allowed us to determine a lower bound on the satisfaction probability.
The S-CBC was explicitly computed for a certain class of dynamics using sum-of-
squares optimization. An example illustrated our approach.

Our example may have resulted in conservative bounds for the satisfaction
probabilities since we restrict our focus to barrier certiﬁcates that are second
degree polynomials and to stationary policies for the two agents. Future work
will seek to study conditions under which possibly more effective non-stationary
agent policies and higher degree S-CBCs can be deployed to solve the problem. A
second interesting problem over a ﬁnite time-horizon is to investigate if explicit
time bounds can be enforced on the temporal logic formula. An example of such
a property is that the agent is required to reach a subset of states of the system
between 3 and 5 minutes. This formula cannot be encoded in LTL, but there are
other temporal logic frameworks like metric interval temporal logic [4] or signal
temporal logic [31] that will allow us to express it. We propose to study the case
when the system will have to satisfy other kinds of timed temporal speciﬁcations
[12] in the presence of an adversary in dynamic environments.

References

1. Abate, A., Prandini, M., Lygeros, J., Sastry, S.: Probabilistic reachability and safety
for controlled discrete time stochastic hybrid systems. Automatica 44(11), 2724–2734
(2008)

2. Ahmadi, M., Jansen, N., Wu, B., Topcu, U.: Control theory meets POMDPs: A hybrid

systems approach. arXiv preprint arXiv:1905.08095 (2019)

3. Ahmadi, M., Wu, B., Lin, H., Topcu, U.: Privacy veriﬁcation in POMDPs via barrier

certiﬁcates. In: IEEE Conference on Decision and Control. pp. 5610–5615 (2018)

4. Alur, R., Feder, T., Henzinger, T.A.: The beneﬁts of relaxing punctuality. Journal of the

ACM 43(1), 116–146 (1996)

5. Ames, A.D., Coogan, S., Egerstedt, M., Notomista, G., Sreenath, K., Tabuada, P.: Con-
trol barrier functions: Theory and applications. In: Proceedings of the European Con-
trol Conference (2019)

6. Ames, A.D., Xu, X., Grizzle, J.W., Tabuada, P.: Control barrier function based quadratic
programs for safety critical systems. IEEE Transactions on Automatic Control 62(8),
3861–3876 (2016)

7. Ba¸sar, T., Olsder, G.J.: Dynamic noncooperative game theory, vol. 23. SIAM (1999)
8. Baheti, R., Gill, H.: Cyber-physical systems. The Impact of Control Technology 12(1),

161–166 (2011)

9. Baier, C., Katoen, J.P.: Principles of Model Checking. MIT Press (2008)

10. Belta, C., Yordanov, B., Gol, E.A.: Formal methods for discrete-time dynamical sys-

tems, vol. 89. Springer (2017)

11. Bertsekas, D.P.: Dynamic Programming and Optimal Control 4th Edition, Volumes I

and II. Athena Scientiﬁc (2015)

12. Bouyer, P., Laroussinie, F., Markey, N., Ouaknine, J., Worrell, J.: Timed temporal log-

ics. In: Models, Algorithms, Logics and Tools, pp. 211–230. Springer (2017)

13. Breton, M., Alj, A., Haurie, A.: Sequential Stackelberg equilibria in two-person games.

Journal of Optimization Theory and Applications 59(1), 71–97 (1988)

14. Chow, C.S., Tsitsiklis, J.N.: An optimal one-way multigrid algorithm for discrete-time
stochastic control. IEEE Transactions on Automatic Control 36(8), 898–914 (1991)
15. Cimatti, A., Clarke, E., Giunchiglia, F., Roveri, M.: Nusmv: A new symbolic model
veriﬁer. In: International Conference on Computer Aided Veriﬁcation. pp. 495–499.
Springer (1999)

16. De Giacomo, G., Vardi, M.: Synthesis for LTL and LDL on ﬁnite traces. In: Interna-

tional Joint Conference on Artiﬁcial Intelligence. vol. 15, pp. 1558–1564 (2015)

17. De Giacomo, G., Vardi, M.Y.: Linear temporal logic and linear dynamic logic on ﬁnite
traces. In: International Joint Conference on Artiﬁcial Intelligence. pp. 854–860 (2013)
18. Ding, J., Kamgarpour, M., Summers, S., Abate, A., Lygeros, J., Tomlin, C.: A stochastic
games framework for veriﬁcation and control of discrete time stochastic hybrid sys-
tems. Automatica 49(9), 2665–2674 (2013)

19. Ding, X., Smith, S.L., Belta, C., Rus, D.: Optimal control of MDPs with linear temporal

logic constraints. IEEE Transactions on Automatic Control 59(5), 1244–1257 (2014)

20. Farwell, J.P., Rohozinski, R.: Stuxnet and the future of cyber war. Survival 53(1), 23–

40 (2011)

21. Gordon, G.J.: Approximate solutions to Markov decision processes. Tech. rep., School

of Computer Science, Carnegie-Mellon University, Pittsburgh, PA (1999)

22. Jagtap, P., Soudjani, S., Zamani, M.: Temporal logic veriﬁcation of stochastic systems
using barrier certiﬁcates. In: International Symposium on Automated Technology for
Veriﬁcation and Analysis. pp. 177–193. Springer (2018)

23. Jagtap, P., Soudjani, S., Zamani, M.: Formal synthesis of stochastic systems via control

barrier certiﬁcates. arXiv preprint arXiv:1905.04585 (2019)

24. Kolathaya, S., Ames, A.D.: Input-to-state safety with control barrier functions. Control

Systems Letters 3(1), 108–113 (2018)

25. Kˇretínsk `y, J., Meggendorfer, T., Sickert, S., Ziegler, C.: Rabinizer 4: From LTL to your
favourite deterministic automaton. In: International Conference on Computer Aided
Veriﬁcation. pp. 567–577. Springer (2018)

26. Kupferman, O., Vardi, M.: Model checking of safety properties. In: International Con-

ference on Computer Aided Veriﬁcation. pp. 172–183. Springer (1999)

27. Kushner, H.J.: Stochastic Stability and Control. Academic Press (1967)
28. Kwiatkowska, M., Norman, G., Parker, D.: Prism 4.0: Veriﬁcation of probabilistic real-
time systems. In: International Conference on Computer Aided Veriﬁcation. pp. 585–
591. Springer (2011)

29. Lafferriere, G., Pappas, G.J., Yovine, S.: Symbolic reachability computation for families

of linear vector ﬁelds. Journal of Symbolic Computation 32(3), 231–253 (2001)

30. Lindemann, L., Dimarogonas, D.V.: Control barrier functions for signal temporal logic

tasks. IEEE Control Systems Letters 3(1), 96–101 (2019)

31. Maler, O., Nickovic, D.: Monitoring temporal properties of continuous signals. In: For-
mal Techniques, Modelling and Analysis of Timed and Fault-Tolerant Systems, pp.
152–166. Springer (2004)

32. Niu, L., Clark, A.: Secure control under LTL constraints. In: IEEE American Control

Conference. pp. 3544–3551 (2018)

33. Niu, L., Li, Z., Clark, A.: LQG reference tracking with safety and reachability guaran-
tees under false data injection attacks. In: IEEE American Control Conference (2019)
34. Parrilo, P.A.: Semideﬁnite programming relaxations for semialgebraic problems.

Mathematical Programming 96(2), 293–320 (2003)

35. Pola, G., Manes, C., van der Schaft, A.J., Di Benedetto, M.D.: Bisimulation equivalence
of discrete-time stochastic linear control systems. IEEE Transactions on Automatic
Control 63(7), 1897–1912 (2017)

36. Prajna, S., Jadbabaie, A., Pappas, G.J.: A framework for worst-case and stochastic
safety veriﬁcation using barrier certiﬁcates. Transactions on Automatic Control 52(8),
1415–1428 (2007)

37. Prajna, S., Papachristodoulou, A., Parrilo, P.A.: Introducing SOSTOOLS: A general
purpose sum of squares programming solver. In: IEEE Conference on Decision and
Control. vol. 1, pp. 741–746 (2002)

38. Puterman, M.L.: Markov decision processes: Discrete stochastic dynamic program-

ming. John Wiley & Sons (2014)

39. Ramasubramanian, B., Clark, A., Bushnell, L., Poovendran, R.: Secure control under
partial observability with temporal logic constraints. In: IEEE American Control Con-
ference (2019)

40. Saha, I., Ramaithitima, R., Kumar, V., Pappas, G.J., Seshia, S.A.: Automated composi-
tion of motion primitives for multi-robot systems from safe LTL speciﬁcations. In: Proc.
International Conference on Intelligent Robots and Systems. pp. 1525–1532 (2014)
41. Santoyo, C., Dutreix, M., Coogan, S.: Veriﬁcation and control for ﬁnite-time safety of
stochastic systems via barrier functions. In: IEEE Conference on Control Technology
and Applications (2019)

42. Sharan, R., Burdick, J.: Finite state control of POMDPs with LTL speciﬁcations. In:

IEEE American Control Conference. pp. 501–508 (2014)

43. Shoukry, Y., Martin, P., Tabuada, P., Srivastava, M.: Non-invasive spooﬁng attacks for
anti-lock braking systems. In: International Workshop on Cryptographic Hardware
and Embedded Systems. pp. 55–72. Springer (2013)

44. Slay, J., Miller, M.: Lessons learned from the Maroochy water breach. In: International

Conference on Critical Infrastructure Protection. pp. 73–82. Springer (2007)

45. Steinhardt, J., Tedrake, R.: Finite-time regional veriﬁcation of stochastic non-linear

systems. The International Journal of Robotics Research 31(7), 901–923 (2012)

46. Sullivan, J.E., Kamensky, D.: How cyber-attacks in Ukraine show the vulnerability of

the US power grid. The Electricity Journal 30(3), 30–35 (2017)

47. Tarjan, R.: Depth-ﬁrst search and linear graph algorithms. SIAM Journal on Comput-

ing 1(2), 146–160 (1972)

48. Toh, K.C., Todd, M.J., Tütüncü, R.H.: SDPT3: A MATLAB software package for
semideﬁnite programming. Optimization methods and software 11, 545–581 (1999)
49. Wongpiromsarn, T., Topcu, U., Lamperski, A.: Automata theory meets barrier certiﬁ-
cates: Temporal logic veriﬁcation of nonlinear systems. IEEE Transactions on Auto-
matic Control 61(11), 3344–3355 (2015)

50. Yang, I.: A dynamic game approach to distributionally robust safety speciﬁcations for

stochastic systems. Automatica 94, 94–101 (2018)

