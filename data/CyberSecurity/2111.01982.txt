1
2
0
2

v
o
N
3

]

R
P
.
h
t
a
m

[

1
v
2
8
9
1
0
.
1
1
1
2
:
v
i
X
r
a

First and second moments of the size distribution of
bond percolation clusters on regular graphs

Nicolas Lanchier∗ and Axel La Salle
Abstract Motivated by network resilience and insurance premiums in the context of cyber
security, we derive universal upper bounds for the ﬁrst and second moments of the size of
bond percolation clusters on ﬁnite regular graphs. Thinking of the clusters as dynamical
objects coupled with branching processes gives a ﬁrst set of bounds that are accurate when
the probability of an edge being open is small. Estimating the number of isolated vertices, we
also obtain a second set of bounds that are accurate when the probability of an edge being
closed is small. As an illustration, we apply our results to the ﬁrst three Platonic solids.

1. Introduction

Bond percolation consists of a collection of independent Bernoulli random variables with the same
success probability p indexed by the edges of a graph, with the edges associated to a success being
open and the ones associated to a failure being closed. The percolation clusters are the connected
components of the subgraph induced by the open edges. This process was introduced by [2] to study
the spread of a ﬂuid through a medium.

Bond percolation has been extensively studied on inﬁnite graphs such as integer lattices [4] in
which case the process typically exhibits a phase transition for the density p of open edges from
a subcritical phase where all the percolation clusters are ﬁnite to a supercritical phase where at
least one percolation cluster is inﬁnite. Bond percolation has also been studied along increasing
sequences of ﬁnite graphs: as the size of the graphs tends to inﬁnity, the supercritical phase is now
characterized by the existence of a giant connected component of open edges whose size scales like
the size of the graph. Important examples are the complete graph, in which case the set of open
edges consists of the Erd˝os-R´enyi random graph [3], and the hypercube [1].

Much less attention has been paid to bond percolation on ﬁxed ﬁnite graphs in spite of its
growing importance in terms of applications. Indeed, the ﬁrst moment of the size of the percolation
clusters on ﬁnite graphs is closely related to the notion of network resilience in computer network
theory [7]. Similarly, the modeling framework introduced by [5] shows that, in the context of cyber
security, both the ﬁrst and the second moments of the cluster size are keys to computing insurance
premiums. Motivated by these aspects, [6] studied the ﬁrst and second moments of the cluster
size on elementary graphs: the path, the ring and the star. In both contexts (network resilience
and cyber insurance), the underlying graph represents a local area network, i.e., a ﬁnite group of
computers (the vertices) along with the way these computers are connected (the edges). In this
work, we study the ﬁrst and second moments of the cluster size on general ﬁnite regular graphs
that model local area networks more realistically than paths, rings or stars.

School of Mathematical and Statistical Sciences, Arizona State University, Tempe, AZ 85287, USA.

nicolas.lanchier@asu.edu. alasall1@asu.edu

∗Nicolas Lanchier was partially supported by NSF grant CNS-2000792.
Keywords and phrases: Bond percolation, cluster size, branching process, network resilience, insurance premiums.

1

 
 
 
 
 
 
2

Nicolas Lanchier and Axel La Salle

2. Model description

Throughout this paper, G = (V , E ) is a ﬁnite connected D-regular graph with N vertices. Let x
be a vertex chosen uniformly at random and assume that the edges are independently open with
probability p. The main objective is to study the ﬁrst and second moments of

S = card (Cx) where Cx = {y ∈ V : there is a path of open edges connecting x and y},

the random number of vertices in the percolation cluster starting at x.

3. Coupling with a branching process

In this section, we prove the following upper bounds for the ﬁrst and second moments.

Theorem 1 – Let ν = (D − 1)p and R = N − 1. Then,

E(S) ≤ 1 + Dp

(cid:18)

E(S2) ≤

1 + Dp

(cid:19)

(cid:18) 1 − νR
1 − ν
(cid:18) 1 − νR
1 − ν

(cid:19)(cid:19)2

+

Dp(1 − p)
(1 − ν)2

(cid:18) (1 − νR)(1 + νR+1)
1 − ν

− 2RνR

(cid:19)

.

To prove the theorem, the idea is to think of the cluster Cx as a dynamical object described by a
birth process starting with one particle at x and in which particles give birth with probability p
onto vacant adjacent vertices. The size of the cluster is equal to the ultimate number of particles
in the birth process which, in turn, is dominated stochastically by the number of individuals up to
generation card (V ) − 1 = N − 1 in a certain branching process.
Birth process. Having a vertex x ∈ V and a realization of bond percolation with parameter p
on the graph, we consider the following discrete-time birth process (ξn). The state at time n is a
spatial conﬁguration of particles on the vertices:

ξn ⊂ V where

ξn = set of vertices occupied by a particle at time n.

The process starts at generation 0 with one particle at x, therefore ξ0 = {x}. Then,

• for each vertex y adjacent to vertex x, the particle at x gives birth to a particle sent to vertex y

if and only if the edge (x, y) is open.

These are the particles of generation 1. Assume the process has been deﬁned up to generation n > 0,
and let Yn = card (ξn \ ξn−1) be the number of particles of generation n. Label 1, 2, . . . , Yn these
particles and let xn,1, xn,2, . . . , xn,Yn be their locations so that

ξn \ ξn−1 = {xn,1, xn,2, . . . , xn,Yn}.

Then, generation n + 1 is deﬁned sequentially from step 1 to step Yn where, at step i,

• for each vertex y adjacent to vertex xn,i, the ith particle of generation n gives birth to a

particle sent to vertex y if and only if vertex y is empty and the edge (xn,i, y) is open.

Bond percolation clusters on regular graphs

3

Generation 0

Generation 1

Generation 2

Generation 3

Generation 4

Figure 1. Example of a construction of the birth process from a realization of bond percolation on the dodecahedron.
The thick lines represent the open edges, the black dots represent the vertices occupied by a particle at each generation,
and the arrows represent the birth events, from parent to children.

Note that two particles i and j with i < j might share a common neighbor y in which case a
child of particle i sent to y prevents particle j from giving birth onto y. For a construction of the
birth process from a realization of bond percolation on the dodecahedron, we refer to Figure 1. The
process is designed so that particles ultimately occupy the open cluster starting at x. In particular,
the total number of particles equals the cluster size, as proved in the next lemma.

Lemma 1 – We have S = card (ξN −1) = Y0 + Y1 + · · · + YN −1.

Proof. Because particles can only send a child to an empty vertex, each vertex is ultimately
occupied by at most one particle. Also, the set occupied by a particle of generation n is

ξn \ ξn−1 = {y ∈ Cx : the shortest open path connecting x and y has length n}.

In particular, all the vertices in the open cluster Cx are ultimately occupied by exactly one particle
whereas the vertices outside the cluster remain empty therefore

S = card (ξ0) + card

(cid:19)

(ξn \ ξn−1)

= card (ξ0) +

(cid:18) ∞
(cid:91)

n=1

∞
(cid:88)

n=1

card (ξn \ ξn−1) =

∞
(cid:88)

n=0

Yn.

(1)

In addition, because the graph has N vertices, the shortest self-avoiding path on this graph must
have at most N − 1 edges, from which it follows that

ξn = ξn−1

and Yn = card (ξn \ ξn−1) = 0

for all n ≥ N.

(2)

Combining (1) and (2) gives the result. (cid:3)

Coupling with a branching process. The next step is to compare the number of particles in
the birth process with the number of individuals in the branching process (Xn) where

X0 = 1 and Xn+1 = Xn,1 + Xn,2 + · · · + Xn,Xn

for all n ≥ 0

with the random variables Xn,i representing the number of oﬀspring of individual i at time n being
independent with probability mass function

X0,1 = Bin (D, p)

and Xn,i = Bin (D − 1, p)

for all n, i ≥ 1.

This branching process can be visualized as the number of particles in the birth process above
modiﬁed so that births onto already occupied vertices are allowed. In particular, the branching
process dominates stochastically the birth process.

4

Nicolas Lanchier and Axel La Salle

Lemma 2 – For all n ≥ 0, we have the stochastic domination Yn (cid:22) Xn.
Proof. As for the branching process, for all n ≥ 0 and i ≤ Yn, we let

Yn,i = # oﬀspring of the ith particle of generation n in the birth process.

Because the edges are independently open with probability p and there are exactly D edges starting
from each vertex, the number of oﬀspring of the ﬁrst particle is Y1 = Y0,1 = Bin (D, p). For each
subsequent particle, say the particle located at z, we distinguish two types of edges starting from
vertex z just before the particle gives birth.

• There are m edges (z, y) that are connected to an occupied vertex y. Because parent and

oﬀspring are located on adjacent vertices, we must have m ≥ 1.

• There are D − m edges (z, y) that are connected to an empty vertex y. These edges have not
been used yet in the construction of the birth process therefore each of these edges is open
with probability p independently of the past of the process.

From the previous two properties, we deduce that, for all n > 0 and i ≤ Yn,

P (Yn,i ≥ k) = E(P (Yn,i ≥ k | Y0,1, . . . , Yn,i−1)) ≤ P (Bin (D − 1, p) ≥ k) = P (Xn,i ≥ k).

(3)

The stochastic domination follows from Y1 = Bin (D, p) and (3). (cid:3)

Number of individuals. It directly follows from Lemmas 1 and 2 that

E(Sk) = E((Y0 + Y1 + · · · + YN −1)k) ≤ E((X0 + X1 + · · · + XN −1)k)

(4)

for all k > 0. In view of (4), the last step to complete the proof is to show that the upper bounds
in the theorem are in fact the ﬁrst and second moments of the total number of individuals up to
generation R = N − 1 in the branching process:
E( ¯XR)

¯XR = X0 + X1 + · · · + XR.

and E( ¯X 2

R) where

Lemma 3 – Let ν = (D − 1)p. Then,

E( ¯XR) = 1 + Dp

(cid:18) 1 − νR
1 − ν

(cid:19)

for all R > 0.

Proof. For i = 1, 2, . . . , X1, let

¯Zi = number of descendants of the ith oﬀspring of the ﬁrst individual

up to generation R, including the oﬀspring.

Then ¯XR = 1 + ¯Z1 + · · · + ¯ZX1 and the ¯Zi are independent of X1 therefore

E( ¯XR) = E(E( ¯XR | X1)) = E(1 + X1E( ¯Zi)) = 1 + E(X1)E( ¯Zi) = 1 + DpE( ¯Zi).
Because ¯Zi is the number of individuals up to generation R−1 in a branching process with oﬀspring
distribution Bin (D − 1, p), we deduce from [5, Theorem 2] that
(cid:18) 1 − (µp)R
1 − µp

E( ¯XR) = 1 + Dp

(cid:18) 1 − νR
1 − ν

ν = µp = (D − 1)p.

= 1 + Dp

where

(cid:19)

(cid:19)

This completes the proof. (cid:3)

Lemma 4 – Let ν = (D − 1)p. Then, for all R > 0,

Bond percolation clusters on regular graphs

(cid:18)

E( ¯X 2

R) =

1 + Dp

(cid:18) 1 − νR
1 − ν

(cid:19)(cid:19)2

+

Dp(1 − p)
(1 − ν)2

(cid:18) (1 − νR)(1 + νR+1)
1 − ν

− 2RνR

(cid:19)
.

Proof. Using again ¯XR = 1 + ¯Z1 + · · · + ¯ZX1 and independence, we get

E( ¯X 2

R) = E(E((1 + ¯Z1 + · · · + ¯ZX1)2 | X1))
= 1 + 2E(X1)E( ¯Zi) + E(X1)E( ¯Z2

i ) + E(X1(X1 − 1))(E(Zi))2.

5

(5)

In addition, using that X1 = Bin (D, p), we get

E(X1(X1 − 1)) = Var(X1) + (E(X1))2 − E(X1) = Dp(1 − p) + D2p2 − Dp = D(D − 1)p2.

(6)

Combining (5) and (6) and using some basic algebra give

E( ¯X 2

R) = 1 + 2DpE( ¯Zi) + DpE( ¯Z2

i ) + D(D − 1)p2(E( ¯Zi))2

= (1 + DpE( ¯Zi))2 + Dp(1 − p)(E( ¯Zi))2 + Dp Var( ¯Zi).

Then, applying [5, Theorem 2] with µ = D − 1 and σ2 = 0, we get

(cid:18)

E( ¯X 2

R) =

1 + Dp

(cid:18) 1 − νR
1 − ν

(cid:19)(cid:19)2

+ Dp(1 − p)

(cid:19)2

(cid:18) 1 − νR
1 − ν
(cid:18) 1 − ν2R−1
1 − ν

+ Dp

ν(1 − p)
(1 − ν)2

(cid:19)

(7)

− (2R − 1)νR−1

while a simple calculation implies that

Dp(1 − p)

(cid:19)2

(cid:18) 1 − νR
1 − ν

+ Dp

ν(1 − p)
(1 − ν)2

(cid:18) 1 − ν2R−1
1 − ν

− (2R − 1)νR−1

(cid:19)

=

Dp(1 − p)
(1 − ν)2

(cid:18) (1 − νR)(1 + νR+1)
1 − ν

− 2RνR

(cid:19)
.

(8)

Combining (7) and (8) gives the result. (cid:3)

Theorem 1 directly follows from (4), and from Lemmas 3 and 4.

4. Isolated vertices

Theorem 1 gives good upper bounds when the probability p is small. To complement this result,
we now give a second set of upper bounds that are accurate when p is close to one.

Theorem 2 – Let q = 1 − p. Then,

E(S) ≤ N − (N − 1)qD and E(S2) ≤ N 2 − (N − 1)(2N − 1)qD + (N − 1)(N − 2)q2D−1.

6
Proof. Let η(y) = 1{y ∈ Cx} for all y ∈ V . Then, for all integers k ≥ 1,

Nicolas Lanchier and Axel La Salle

E(Sk) = E

(cid:18) (cid:88)

y∈V

(cid:19)k

η(y)

=

(cid:88)

y1,...,yk∈V

E(η(y1) · · · η(yk)) =

(cid:88)

y1,...,yk∈V

P (x ↔ y1, . . . , x ↔ yk)

(9)

where ↔ means that there is an open path. To estimate the last sum, we let By be the event that
all the edges incident to y are closed. Using that there are exactly D edges incident to each vertex,
and that there is at most one edge connecting any two diﬀerent vertices, say y (cid:54)= z, we get

P (By) = qD and P (By ∪ Bz) = P (By) + P (Bz) − P (By ∩ Bz) ≥ 2qD − q2D−1.

(10)

In addition, By ⊂ {x (cid:54)↔ y} for all y (cid:54)= x. This and (10) imply that

P (x (cid:54)↔ y or x (cid:54)↔ z) ≥

(cid:40) qD

when card {x, y, z} = 2
2qD − q2D−1 when card {x, y, z} = 3.

(11)

Using (9) with k = 1 and (11), we deduce that

E(S) = 1 +

(cid:88)

y(cid:54)=x

(1 − P (x (cid:54)↔ y)) ≤ 1 +

(cid:88)

y(cid:54)=x

(1 − qD) = 1 + (N − 1)(1 − qD) = N − (N − 1)qD.

Similarly, applying (9) with k = 2, observing that

card {(y, z) ∈ V 2 : card {x, y, z} = 2} = 3(N − 1)
card {(y, z) ∈ V 2 : card {x, y, z} = 3} = (N − 1)(N − 2),

and using (10) and (11), we deduce that

E(S2) ≤ 1 + 3(N − 1)(1 − qD) + (N − 1)(N − 2)(1 − 2qD + q2D−1)
= N 2 − (N − 1)(2N − 1)qD + (N − 1)(N − 2)q2D−1.

This completes the proof of Theorem 2. (cid:3)

5. Numerical examples

As an illustration, we apply our results to the ﬁrst three Platonic solids (the tetrahedron, the
cube, and the octahedron) which can be viewed as worst case scenarios as they contain many
cycles. Figure 2 shows the ﬁrst and second moments of the cluster size obtained from numerical
simulations along with the upper bounds in the theorems obtained by setting the degree D and the
number of vertices N appropriately for each of the three solids.

References

[1] M. Ajtai, J. Koml´os, and E. Szemer´edi. Largest random component of a k-cube. Combinatorica,

2(1):1–7, 1982.

[2] S. R. Broadbent and J. M. Hammersley. Percolation processes. I. Crystals and mazes. Proc.

Cambridge Philos. Soc., 53:629–641, 1957.

Bond percolation clusters on regular graphs

7

D = 3
N = 4

D = 3
N = 8

D = 4
N = 6

Tetrahedron
ﬁrst moment

TH 1
TH 2

Cube
ﬁrst moment

TH 1
TH 2

Octahedron
ﬁrst moment

TH 1
TH 2

D = 3
N = 4

D = 3
N = 8

D = 4
N = 6

Tetrahedron
second moment

TH 1
TH 2

Cube
second moment

TH 1
TH 2

Octahedron
second moment

TH 1
TH 2

Figure 2. First and second moments of the bond percolation cluster size on the tetrahedron, the cube, and the
octahedron as functions of the probability p. The solid lines show the moments obtained from the average of one
hundred thousand independent realizations of the process. The dotted lines represent the upper bound from Theorem 1
and the dashed lines the upper bound from Theorem 2 for the appropriate values of D and N .

[3] P. Erd˝os and A. R´enyi. On random graphs. I. Publ. Math. Debrecen, 6:290–297, 1959.
[4] G. Grimmett. Percolation, volume 321 of Grundlehren der Mathematischen Wissenschaften.

Springer-Verlag, Berlin, second edition, 1999.

[5] P. Jevti´c and N. Lanchier. Dynamic structural percolation model of loss distribution for cyber
Insurance Math.

risk of small and medium-sized enterprises for tree-based LAN topology.
Econom., 91:209–223, 2020.

[6] P. Jevti´c, N. Lanchier, and A. La Salle. First and second moments of the size distribution of
bond percolation clusters on rings, paths and stars. Statist. Probab. Lett., 161:108714, 6, 2020.
[7] A. Kott and I. Linkov. Cyber resilience of systems and networks. Springer International Pub-

lishing, 2019.

0.40.20.00.60.81.043210.00.20.40.60.81.04812160.00.20.40.60.81.06456484032241680.00.20.41.00.80.6361861224301.00.80.60.40.20.02134561.00.80.60.40.00.287654321