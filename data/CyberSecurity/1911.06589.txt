Approaching the Automation of Cyber Security Testing of
Connected Vehicles

Stefan Marksteiner
stefan.marksteiner@avl.com
AVL List GmbH
Graz, Austria

Zhendong Ma
zhendong.ma@at.bosch.com
Bosch Engineering
Vienna, Austria

9
1
0
2

v
o
N
5
1

]

R
C
.
s
c
[

1
v
9
8
5
6
0
.
1
1
9
1
:
v
i
X
r
a

ABSTRACT
The advancing digitalization of vehicles and automotive systems
bears many advantages for creating and enhancing comfort and
safety-related systems ranging from drive-by-wire, inclusion of ad-
vanced displays, entertainment systems up to sophisticated driving
assistance and autonomous driving. It, however, also contains the
inherent risk of being used for purposes that are not intended for,
raging from small non-authorized customizations to the possibility
of full-scale cyberattacks that affect several vehicles to whole fleets
and vital systems such as steering and engine control. To prevent
such conditions and mitigate cybersecurity risks from affecting the
safety of road traffic, testing cybersecurity must be adopted into
automotive testing at a large scale. Currently, the manual penetra-
tion testing processes cannot uphold the increasing demand due
to time and cost to test complex systems. We propose an approach
for an architecture that (semi-)automates automotive cybersecurity
test, allowing for more economic testing and therefore keeping up
to the rising demand induced by new vehicle functions as well as
the development towards connected and autonomous vehicles.

CCS CONCEPTS
• Security and privacy → Domain-specific security and pri-
vacy architectures; Systems security; • Computer systems or-
ganization → Embedded and cyber-physical systems; • Net-
works → Cyber-physical networks.

KEYWORDS
Automotive Security, Security Testing, Test Automation, Connected
Vehicles

ACM Reference Format:
Stefan Marksteiner and Zhendong Ma. 2019. Approaching the Automation
of Cyber Security Testing of Connected Vehicles. In Central European Cyber-
security Conference (CECC 2019), November 14–15, 2019, Munich, Germany.
ACM, New York, NY, USA, 3 pages. https://doi.org/10.1145/3360664.3360729

Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CECC 2019, November 14–15, 2019, Munich, Germany
© 2019 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-7296-1/19/11. . . $15.00
https://doi.org/10.1145/3360664.3360729

1 INTRODUCTION AND MOTIVATION
Automotive systems are becoming increasingly software-driven
and connected. Consequently, connected vehicles must ensure cy-
bersecurity in addition to existing stringent quality and safety re-
quirements. Automotive systems mainly comprise of embedded
devices called Electronic Control Units (ECUs) that control vari-
ous parts and functions of a vehicle. The ECUs are organized into
partitioned in-vehicle networks and interact with external entities
through different physical and wireless interfaces such as OBDII
diagnostic port, Bluetooth, WLAN and Cellular communication.
With more and more connectivity-based functions and applica-
tions, automotive systems expose large attack surface shown to be
vulnerable to direct and remote cyberattacks [2, 3].

The automotive industry as a whole starts to take cybersecurity
seriously and establish secure development program and practice
to address the challenges facing connected vehicles [1]. Security
testing is one of the important steps in the secure development life-
cycle that ensures that security designs are correctly implemented
and no security vulnerabilities are left unaddressed throughout a
vehicle’s lifecycle. However, security testing of automotive systems
is very challenging due to the complexity of software and tech-
nologies involved. Until now, it is mainly conducted by in-house or
contracted penetration testers. The results of the tests often depend
on the skill of human testers and the information they obtained.
The thoroughness of the tests are further bound by the budget and
available resource allocated.

Even more than of traditional vehicles, security testing of con-
nected vehicles covers a wide range of topics and technologies. De-
spite a plethora of suppliers in the automotive supply chain, many
automotive components and subsystems share similar technolo-
gies and sometimes software components. Therefore, automated
security testing has the potential to partially take over repeated
and similar test scenarios and increase the efficiency of finding
common vulnerabilities and weaknesses in automotive systems
within vehicles from different manufacturers.

These conditions create the need for industrialization of security
testing for several reasons. First, the advancing digitalization of
cars has caused a rising number of potential vulnerabilities that
could not be tested manually. Second, this has not only led to an
exponential growth of cybersecurity incidents in the last years
but also to criminal hacker attacks exceeding the vulnerabilities
discovered by security researchers [4]. And third, cost and time-to-
market demands faster, more efficient testing procedures that still
provide a holistic and thorough quality assurance.

Therefore, within the we design and develop a framework that
aims at automating cyber security testing of connected vehicles.
The framework provides a basis for further extensions that allow

 
 
 
 
 
 
CECC 2019, November 14–15, 2019, Munich, Germany

Marksteiner, Ma

Figure 1: Automated Testing Process

for automating tasks that are presently carried out manually by
highly specialized experts.

2 SEMI-AUTOMATED AUTOMOTIVE

TESTING

Many aspects related to product security testing are considered
in the design of the framework, ranging from security test case
definition, test execution and interface to automotive systems, to
test work flow management. Our main objective is to transfer the
collective knowledge of automotive security especially the existing
threats and attack methods into executable test procedures lever-
aged by open source and proprietary software. To achieve this, we
have identified three main components for a system automating
security testing:

• An orchestration service (or core framework);
• Interfaces to the system under test (SUT), which might be a

full vehicle or component(s) thereof;

• Sources for the vulnerabilities and threats for tests.

The orchestration service thereby works as a supervisor engine
that handles the workflow consisting of generic building blocks,
triggers physical implementations of these blocks and collects the
results. The building blocks derive from the vulnerability sources
mentioned above. These sources contain formalized descriptions of
attack and other test vectors. For a seamless integration of safety
and security testing, as well as allowing for both white box-based
functional security testing and black box-based vulnerability testing,
the sources are logically divided in requirement-based (white box)
and threat-based (black box) ones where the former follow tradi-
tional automotive testing work flows (originated from customer
requirements) and the latter are collected from (possibly external)
threat libraries, e.g. Common Vulnerabilities and Exposures (CVE)
databases [5]. The SUT interfaces then, a priori, define the concrete

implementation of these test building blocks (which depend on the
actual system) and, during test execution, provide the actual inter-
face between the orchestration service. Figure 1 gives an overview
of the process where blue boxes are for test system components,
orange for the SUT, cyan for customer and purple for external
inputs.

3 DISCUSSION AND OUTLOOK
The presented concept allows for (semi-)automating cybersecurity
testing of automotive systems, by automatically deriving test cases
from requirements and threat-based test sources and executing
them using a work flow-based orchestrating system. This follows a
model-based testing approach. The main challenges to practically
build such a system will be to

• Derive internals of the SUT;
• Acquire relevant test cases based on known threats;
• Formalize them in order to port the test cases from one SUT

to another to industrialize tests;

• Build up standardized interface to allow for testing any given

SUT with the same testing environment;

• Find attack paths actually exploit known threats.

These challenges can only be solved in the course of actually im-
plemented prototypes; only then the details of the problems would
fully emerge and solutions can be provided. The logical next step
will therefore building a demonstrator, which will occur in the
course of an ongoing project.

ACKNOWLEDGMENTS
This work was supported by the H2020-ECSEL programme of the
European Commission; grant no. 783119, SECREDAS project.

Automated Cyber Security Testing of Connected Vehicles

CECC 2019, November 14–15, 2019, Munich, Germany

REFERENCES
[1] International Organization for Standardization and Society of Automotive Engi-

neers. 2019. Road Vehicles – Cybersecurity Engineering.

[2] K. Koscher, A. Czeskis, F. Roesner, S. Patel, T. Kohno, S. Checkoway, D. McCoy,
B. Kantor, D. Anderson, H. Shacham, and S. Savage. 2010. Experimental Security
Analysis of a Modern Automobile. In 2010 IEEE Symposium on Security and Privacy.
447–462. https://doi.org/10.1109/SP.2010.34

[3] Charlie Miller and Chris Valasek. 2015. Remote exploitation of an unaltered

passenger vehicle. Black Hat USA.

[4] Upstream Security. 2019. Upstream Security Global Automotive Cybersecurity

Report. Technical Report. Upstream Security.

[5] David Waltermire and Karen Scarfone. 2011. Guide to Using Vulnerability Naming
Schemes (Revision 1). SP 800-51. National Institute of Standards and Technology.
https://csrc.nist.gov/publications/detail/sp/800-51/rev-1/final

