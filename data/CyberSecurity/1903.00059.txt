9
1
0
2

b
e
F
8
2

]

R
C
.
s
c
[

1
v
9
5
0
0
0
.
3
0
9
1
:
v
i
X
r
a

Cyber-physical risks of hacked Internet-connected vehicles

Skanda Vivek,∗ David Yanni,∗ and Peter J. Yunker†
School of Physics, Georgia Institute of Technology, Atlanta, GA 30332

Jesse L. Silverberg‡
Multiscale Systems, Inc., Division for Advanced Sciences and Data Research, Worcester MA 01609
(Dated: March 4, 2019)

The integration of automotive technology with Internet-connectivity promises to both dramati-
cally improve transportation, while simultaneously introducing the potential for new unknown risks.
Internet-connected vehicles are like digital data because they can be targeted for malicious hacking.
Unlike digital data, however, Internet-connected vehicles are cyber-physical systems that physically
interact with each other and their environment. As such, the extension of cybersecurity concerns into
the cyber-physical domain introduces new possibilities for self-organized phenomena in traﬃc ﬂow.
Here, we study a scenario envisioned by cybersecurity experts leading to a large number of Internet-
connected vehicles being suddenly and simultaneously disabled. We investigate post-hack traﬃc
using agent-based simulations, and discover the critical relevance of percolation for probabilistically
predicting the outcomes on a multi-lane road in the immediate aftermath of a vehicle-targeted cy-
ber attack. We develop an analytic percolation-based model to rapidly assess road conditions given
the density of disabled vehicles and apply it to study the street network of Manhattan (NY, USA)
revealing the city’s vulnerability to this particular cyber-physical attack.

INTRODUCTION

In the United States, over 40 million Internet-
connected vehicles are on the road today, with hundreds
of millions more expected by 2023 (Fig. 1a, gray cir-
cles) [1]. Connected vehicle technologies have the po-
tential to transform transportation by preventing acci-
dents, reducing congestion, and even improving in-vehicle
worker productivity [2]. However, these highly antici-
pated beneﬁts come with largely unknown risks, espe-
cially since connected vehicles are potential targets for
computer hacking [3–6]. In light of the growing number
of hacking incidents exposing personal data (Fig. 1a, blue
circles) [7], cybersecurity experts are working to preemp-
tively resolve similar software vulnerabilities and keep
Internet-connected vehicles secure from similarly mali-
cious activity [5, 8, 9]. Nevertheless, in the event of a suc-
cessful hack, compromised vehicles carry unknown cyber-
physical risks, making it diﬃcult to assess the mode and
scale of disruption presented by this increasingly plausi-
ble scenario [10].

While a full accounting of the risks presented by
Internet-connected vehicles remains elusive, this open-
ended question hasn’t stopped active exploration of the
possibilities. Already, a number of scenarios have been
outlined to identify how hacking increases the risk of col-
lisions [6, 8, 11] and traﬃc disruptions [11]. For exam-
ple: (i) degraded sensor input or distorted control proto-
cols could cause connected-vehicle collisions [6], (ii) self-
monitoring anti-virus-like software could cause compro-
mised vehicles to enter a “safe mode” when problems

∗ These two authors contributed equally
† peter.yunker@gatech.edu
‡ js@mss.science

are detected and bring the vehicle to a stop, reducing
the likelihood of accidents but increasing localized traﬃc
congestion [5, 12, 13], (iii) similar self-monitoring soft-
ware could directly lead to human-failure if control of a
compromised vehicle was returned to an unprepared or
distracted driver [14], and (iv) hacked sensors could be
used to falsely report traﬃc or other objects on the road,
thus inappropriately halting motion of compromised ve-
hicles [5, 15]. Furthermore, as driver-assisting and “auto-
pilot” technologies continue to be incorporated in mod-
ern vehicles, we can anticipate an even deeper integration
between mechanical components and software-controlled
systems. In fact, some manufacturers already use wire-
less over-the-air updates to regularly upgrade and main-
tain their vehicle’s software. Thus, given the increased
exposure to potential cybersecurity vulnerabilities, the
growing physical control by these cybersystems over ve-
hicular motion, and the historical precedent that “if it
can be hacked, it will be hacked,” we can foresee the gen-
eral contours of an emerging threat. In particular, many
of the cybersecurity scenarios being considered lead to
a common outcome where compromised vehicles cease
motion and eﬀectively become traﬃc-disrupting obsta-
cles (Fig. 1b and c). From the physical perspective, we
can ask what this outcome means for transportation as
we quantify the emergent consequences of this cyber-
physical risk.

The scenario we investigate here is one in which a sub-
stantial number of vehicles are simultaneously disabled in
a single event causing them to become immobile obsta-
cles on the road (Fig. 1d). By setting aside speciﬁcs for
how cybersecurity vulnerabilities are exploited, we can
instead focus on the general outcomes. To this end, we
simulate traﬃc ﬂow before and after a hack has occurred
so that non-compromised vehicles continue to navigate
around compromised vehicles wherever possible. Sur-

 
 
 
 
 
 
2

RESULTS AND DISCUSSION

Compromised vehicles impair traﬃc

To begin our examination of how hacking targeted
at Internet-connected vehicles disrupts traﬃc, we con-
struct a minimal agent-based model for traﬃc ﬂow. We
simulate individual vehicles with the Intelligent Driver
Model (IDM) [16–18], a time-continuous car-following set
of equations that quantitatively reproduces known traf-
ﬁc dynamics (Methods). To model lane changing, we
use the Minimizing Overall Breaking Induced by Lane
changes (MOBIL) framework [19, 20] (Methods). Brieﬂy,
a vehicle changes lanes if doing so would allow it and its
neighbors to better match their preferred speeds. As a
validation for these simulations, we varied the density of
vehicles, ρ (number of vehicles/km/lane), and measured
the ﬂux, Φ(ρ) (number of vehicles/hr/lane), on a 3 lane
road. These simulations reproduce the classic peaked re-
lationship between traﬃc ﬂux and density (Fig. 2a, green
symbols), which has been observationally measured and
theoretically reproduced in agent-based and continuum
models [16, 21, 22].

A variety of hacking scenarios targeting Internet-
connected vehicles lead to the same generic outcome
where compromised vehicles stop and become obstacles
on the road. We simulate these scenarios by randomly se-
lecting vehicles and marking them as compromised, thus
halting their motion. We then simulated post-hack traf-
ﬁc on a straight 3 lane road with periodic boundary con-
ditions to maintain constant total vehicle density. We
investigated realistic densities ranging from ρ = 1 to 150
vehicles/km/lane, and fraction of compromised vehicles
ranging from 0% to 100% of all vehicles. Post-hack, we
observe decreased ﬂux at every density (Fig. 2a, dark red
symbols). Interestingly, these data separate into two dis-
tinct regimes. Traﬃc continues to ﬂow in ≈ 15% of the
simulations, albeit at a signiﬁcantly reduced rate (Fig.
2a, red band centered on Φ ≈ 400 vehicles/hr/lane).
More strikingly, the remaining ≈ 85% of the simulations
lead to a complete loss of traﬃc ﬂow (Fig. 2a, red data
at Φ = 0 vehicles/hr/lane). Evidently, there are two dis-
tinct phenomenologies arising post-hack: one where traf-
ﬁc is slowed, and another where traﬃc is stopped. The
gap between these two Φ(ρ) curves (Fig. 2a, white region
where Φ ≈ 100 vehicles/hr/lane) is broadly independent
of ρ, suggesting a categorical distinction between the two
ﬂow phenomena and ruling out a continuous transition
between the ﬂow and no-ﬂow states.

To better understand the eﬀects of disabled vehicles
on traﬃc ﬂow, we plot the same simulation data as a
ﬂux heatmap with varying density and fraction of com-
promised vehicles (Fig. 2b). Most of the heatmap’s area
corresponds to zero-ﬂux outcomes (Fig. 2b, dark red),
echoing the observation that ≈ 85% of the simulations
lead to a complete loss of traﬃc ﬂow. Intriguingly, con-
tours of constant Φ coincide with contours of constant
compromised vehicle density, ρH (Fig. 2b, white solid

FIG. 1. Potential cyber-physical disruption from hacking of
Internet-connected vehicles.
(a) Historical annual data for
total number of Internet-connected vehicles (gray) and total
number of digital records compromised by hacking (blue). (b)
Schematic of two Internet-connected vehicles traveling unob-
structed on a straight 2-lane road.
(c) Schematic of traf-
ﬁc ﬂow when an Internet-connected vehicle is disabled (red)
and other vehicles must navigate around the obstacle.
(d)
Schematic illustrating how multiple simultaneously disabled
vehicles disrupts traﬃc ﬂow on a network of roads.

prisingly, we ﬁnd a relatively modest density of compro-
mised vehicles can immediately halt all traﬃc ﬂow. By
deriving an analytical model based on percolation the-
ory, we show the underlying cause of this result is the
local geometric arrangement of vehicles. Application of
our model to Manhattan (New York City, New York,
USA) reveals the threshold number of compromised ve-
hicles that causes city-wide gridlock and quantiﬁes how
access to emergency services is reduced. These insights
provided by this model suggest how the risks of large-
scale hacks can be addressed via network compartmen-
talization and redundancy.

and dashed lines).

There are two classic ﬂow phenomena that can produce
zero-ﬂux in the presence of constrictions: clogging [23–
25] and percolation [26]. In the ﬁrst case, interactions be-
tween objects produce conﬁgurations that prevent other
objects from ﬂowing past each other, eventually arrest-
ing ﬂow. Thus, clogging is a kinetic phenomenon, and the
typical time it takes for a clog to form depends on the
density of both mobile constituents and obstacles [25].
In fact, clogging is the phenomenological ﬂow we com-
monly see when a vehicle breaks-down or traﬃc conges-
tion increases during rush hour; in both cases, traﬃc ﬂux
gradually decreases over an expanding stretch of road.
In contrast, percolation occurs when a continuously con-
nected obstruction spans the system, and is therefore a
purely geometric phenomenon [26]. Thus, while clog-
ging is a slow build-up to reduced traﬃc, percolation is a
sudden and abrupt transition from ﬂow to no-ﬂow states
independent of the density of free-ﬂowing vehicles. Our
observations that ﬂux contours are consistent with ρH
rather than ρ (Fig. 2b, white solid and dashed lines) sug-
gests that geometric percolation of compromised vehicles
is the underlying zero-ﬂux mechanism in post-hack traﬃc
considered here (Supplementary Materials).

Analytical expression for post-hack traﬃc ﬂow

If post-hack traﬃc ﬂow is a percolation ﬂow phe-
nomenon, an analytical expression for disabled vehicles
to randomly align into geometric blockages should pre-
dict the probability of zero-ﬂux traﬃc. We derived this
expression to account for an arbitrary number of lanes,
(cid:96), the density of compromised vehicles per lane, ρH , the
length of the road, L, and the minimum center-to-center
distance between two vehicles on adjacent lanes that still
allows a third vehicle to lane-change between them, s.
That is, s is twice the vehicle length, which is held con-
stant for simplicity. Assuming vehicles are distributed
uniformly at random throughout the road prior to the
hack, we ﬁnd the probability of percolation, Pp, (Meth-
ods) to be:

(cid:34)

Pp = 1 −

1 −

(cid:17)(cid:96)−1

(cid:16)

·

2 −

(cid:16) s
L

s
L

(cid:17)(cid:96)−1 (cid:35)(L · ρH )(cid:96)

.

(1)

This expression gives the probability that compromised
vehicles are positioned in such a way as to block all lanes
of a multi-lane road. While we are interested in varying
(cid:96), ρH , and L to account for diﬀerent traﬃc conditions
and magnitudes of hacks, the eﬀective vehicle length is
ﬁxed at 7 m (s = 14 m), which corresponds to the typical
separation between cars in dense traﬃc [17].

We simulated hacking events of diﬀerent magnitudes,
as measured by the number or fraction of vehicles com-
promised during the hack, and measured the ﬂux to de-
termine whether zero-ﬂux events occur as frequently as

3

FIG. 2. Disruption of vehicle traﬃc caused by hacking on
individual roads. (a) Vehicle ﬂux Φ for normal driving condi-
tions (light green) compared to the ﬂux after a number of ve-
hicles are disabled by hacking (dark red). Simulations explore
0 ≤ ρ ≤ 150 vehicles/km/lane, and a varying fraction of dis-
abled vehicles 0 ≤ (ρH /ρ) ≤ 1 (dark red). Vehicle ﬂux post-
hack causes a bifurcation of the data with ≈ 15% of the sim-
ulations having residual ﬂow (Φ > 0 vehicles/km/lane), while
the remaining 85% have no ﬂow (Φ = 0 vehicles/km/lane).
Insets schematically illustrate the traﬃc ﬂow patterns. (b)
Data in (a) plotted as a heatmap. Lines correspond to con-
tours of constant compromised vehicle density with ρH = 5
(dashed) and 20 (solid) vehicles/km/lane.
(c) Probability
that agent-based IDM/MOBIL simulations produce a zero-
ﬂux outcome (dots) compared to the predictions of percola-
tion theory (solid lines).

(a)(c)(b)predicted by percolation in Eq. (1). Indeed, our analyt-
ical expression accurately captures the relationship be-
tween the probability of zero-ﬂux, the density of com-
promised vehicles, and the number of lanes (Fig. 2c solid
lines), with a remarkably high coeﬃcient of determina-
tion in each case (R2 > 0.99). This is consistent with
our hypothesis that geometric percolation causes stand-
still traﬃc in the post-hack conditions we explore; if clog-
ging played a signiﬁcant role, zero-ﬂux traﬃc would have
occurred more often than predicted by this analytical ex-
pression (Supplementary Materials) [23, 24].

Beyond computational simulations, human drivers self-
organize on roads forming spatial distributions that may
diﬀer from those formed by the combined IDM/MOBIL
model. To address this potential concern and val-
idate our percolation formula, we made use of the
NGSIM dataset [27], which is a US Department of
Transportation-funded measurement of driver spatiotem-
poral trajectories. Similar to the procedure used to an-
alyze simulations, we randomly selected a subset of ve-
hicles to be hacked, compromised, and disabled (Sup-
plementary Materials). We found our analytical model
again captures the percolation probability with high ac-
curacy (R2 > 0.99), even when applied to the empirical
NGSIM data.

Percolation of compromised and disabled vehicles
across a road or highway represents a particularly con-
cerning scenario, as emergency vehicles can no longer use
roads that become totally blocked. Furthermore, this
analysis shows that zero-ﬂux can occur with surprisingly
low densities of disabled vehicles. For example, with
just 6 compromised vehicles/km/lane (< 5% of cars in
bumper-to-bumper traﬃc) the probability of percolation
across a two lane road is ≈ 60%. Fortunately, as perco-
lation is a geometric eﬀect, the probability that a hack-
ing event will block a road can be directly calculated
with Eq. (1) for any set of parameters, circumventing
the need for time-consuming, model-speciﬁc, agent-based
simulations. Thus, this mathematical insight enables us
to rapidly assess the risk of zero-ﬂux traﬃc for any road,
with any number of compromised connected vehicles.

Compromised vehicles gridlock Manhattan

To quantify the broader cyber-physical risks posed by
hacking targeted at Internet-connected vehicles, we must
investigate how traﬃc ﬂow in an entire urban street net-
work is aﬀected. Using our percolation-based analyti-
cal formula Eq. (1), we can directly and immediately
compute the likelihood of any road being blocked, which
saves signiﬁcant computational time otherwise required
for city-scale agent-based simulations. Thus, we connect
road-level traﬃc dynamics to network-level structure by
stochastically marking roads as obstructed according to
their percolation probabilities. We can then use tools
from network theory to assess the degree of urban disrup-
tion due to hacking. While previous studies have inves-

4

tigated urban street network robustness to both random
and targeted pruning of edges [28–31], the consequences
of a hack have not been directly explored. The critical
advancement introduced by percolation, therefore, is to
motivate the pruning of edges based on the underlying
traﬃc features quantiﬁed by ρH , L, (cid:96), and s rather than
the bare network structure.

We applied this approach to the island neighborhood
of Manhattan, in New York City, USA, using map data
from the Open Street Maps tool OSMnx [32]. After ﬁx-
ing the density of compromised vehicles, each road is
stochastically set to be accessible or blocked according
to the probability calculated with Eq. (1), which de-
pends on the length and number of lanes for each road
(Methods). Using this method, we quantify the degree
to which a hacking event disrupts the city by measur-
ing the city’s connectivity. In our analysis, a connected
component represents a spatial network of roads acces-
sible to each other but not accessible to the rest of the
network. The size of each connected component is com-
puted as being equal to the number of accessible street
intersections (nodes) within that component. We com-
pute the size of the largest and second largest connected
components; when the size of the largest component be-
comes comparable to the size of the second largest com-
ponent, the city network has been fragmented [30, 31, 33].
Just as percolated compromised vehicles block individ-
ual streets, stochastically blocked individual streets can
percolate across the city network [34, 35], which can be
described as a percolation-of-percolations event.

We ﬁnd that for ρH (cid:47) 10 compromised vehi-
cles/km/lane, small subnetworks are broken oﬀ of the
largest connected component (Fig. 3a, dark purple lower
line). At a critical compromised vehicle density of ρH ≈
13 compromised vehicles/km/lane, the number of nodes
in the second largest connected component reaches its
maximal value and is comparable to the number of nodes
in the largest connected component. Thus, ρH = 13 com-
promised vehicles/km/lane represents the critical point
at which there is no longer a substantial network of
functional roads that connects points through the city.
Above this compromised vehicle density, the city has
fragmented. For ρH (cid:39) 20 compromised vehicles/km/lane
almost all the roads in the city are blocked, and thus we
see how compromised vehicles disrupt urban traﬃc via
the percolation-of-percolations.

Along with severe traﬃc gridlock, access to hospitals
and ﬁre stations will be aﬀected in the event of a large-
scale hack. To quantify how this disruption aﬀects ac-
cess to these essential services, latitude and longitude
locations of these services were obtained with the Google
Places API, and mapped to the closest corresponding
intersection in the street network (Methods). At low
ρH (Fig. 3b, ρH (cid:47) 10 compromised vehicles/km/lane),
nearly every service is accessible from anywhere in the
city. Once city fragmentation occurs, access to ser-
vices decreases dramatically. At very large ρH (Fig.
3b, ρH (cid:39) 30 compromised vehicles/km/lane), the only

5

FIG. 3. Consequences of Internet-connected vehicles being disabled by hacking on a city street network. (a) Size, measured
by the number of connected street intersections in the largest and second largest connected components of the street network,
as a function of the density of compromised vehicles ρH . At the critical compromised vehicle density, ρH ≈ 13 compromised
vehicles/km/lane, the size of the second largest component reaches its maximal value and becomes comparable to the size of the
largest component. This critical density represents the point at which the network begins to fragment into roughly equal-sized
subnetworks, called the point of “city fragmentation.” Fluctuations in cluster size increase near the critical point, as expected
for percolation-based phase transitions. The jump in cluster size for ρH just larger than 0 compromised vehicles/km/lane is
due to all single-lane roads being blocked. (b) Plot of the fraction of nodes (street intersections) with access to coﬀee shops,
emergency services, and Times Square (a example landmark of interest) as the density of compromised vehicles is varied. (c)
The horizontal axis is bounded by an estimate for the maximum number of vehicles that can ﬁt bumper to bumper on all
the roads of Manhattan island. Hyperbolic contours correspond to constant ρH . Pink dashed line corresponds to the critical
threshold ρH = 13 compromised vehicles/km/lane. Dashed orange line corresponds to ρH = 5 compromised vehicles/km/lane,
which is the compromised vehicle density that generally corresponds to the onset of disruptive traﬃc jams. (d) City networks
with edges (streets) shaded by the probability that they become totally blocked based on Eq. (1). Lighter shades correspond
to higher probabilities of obstructions blocking traﬃc ﬂow. Lower-left inset shows the local disruption that can result from
even a small-scale hacking event. Green/orange/red colored rectangles above the city networks correspond to the compromised
vehicle density and total number of connected vehicles shown by the identically colored rectangles in (c).

20% hacked at 3:00 am:- 2,500 total compromised vehicles- 1 compromised vehicle per km per laneEffect:  Local Disturbances(a)Before HackAfter Hack20% hacked in intermediate traffic:- 25,000 total compromised vehicles- 10 compromised vehicles per km per laneEffect:  Disruptive traffic jams20% hacked at rush hour:- 50,000 total compromised vehicles- 20 compromised vehicles per km per laneEffect: City fragmentation(b)(c)(d)intersections with access to services are the intersec-
tions that contain the services. At these large densities
of hacked, compromised, and disabled vehicles, all the
curves plateau to the fraction of nodes with a given ser-
vice (Fig. 3b). For example, if ≈ 0.5% of intersections
contain hospitals, the hospital access curve plateaus to
0.5%. We ﬁnd that, despite emergency services being well
distributed throughout the city (Supplementary Materi-
als), access to these services is still dangerously dimin-
ished in the event of a large-scale hack.

We quantify the risk of city-wide disruption through
the probability of network fragmentation. This proba-
bility is deﬁned by the density of compromised vehicles
where the size of the second-largest connected component
of the street network is maximized. Our measurement of
city-wide risk is based on the total number of vehicles on
Manhattan roads, and the fraction that are compromised
(Fig. 3c). We ﬁnd that when either the traﬃc density or
the fraction of compromised vehicles is very low (num-
ber of compromised vehicles (cid:47) 2, 500), the probability
that compromised vehicles percolate and block individ-
ual streets is negligible, so the city grid as a whole re-
mains well connected (> 95% of edges retained, (Fig. 3d,
left). Nevertheless, local disruptions can be signiﬁcant
due to stochastic variations. For example, one random in-
stantiation found 2,500 compromised vehicles distributed
throughout Manhattan blocked over 70% of roads in the
neighborhood just south of Central Park (Fig. 3d, left).
While these disruptions are not widespread enough to
fragment the city, their impact increases during inter-
mediate traﬃc conditions due the increased number of
mobile and compromised vehicles (Fig. 3d, middle). Not
surprisingly, the potential for city-wide disruption peaks
during rush-hour when traﬃc density is at its highest and
the chances of individual streets being blocked exceeds
50% (Fig. 3d, right). The low, medium, and high traﬃc
density regimes considered here (Fig. 3d, left to right),
correspond to an average probability of blocked roads of
less than 25%, greater than 25% but less than 50%, and
greater than 50%, respectively (Supplementary Materi-
als). The sensitive dependence of city-wide percolation
on ρH indicates that the overall risk rapidly increases as
it approaches 13 compromised vehicles/km/lane, which
ultimately leads to a cascade of consequences from the
inability to access most parts of the city.

Large-scale hacking below the percolation threshold

Hacking events that fall below the threshold for city
fragmentation can cause signiﬁcant disruption and dan-
ger. As we have already shown, a small-scale hack can
stochastically incapacitate a localized region of the city
(Fig.
left inset). Alternatively, the same small-
scale hack can induce the more familiar phenomenology
of clogging simply by disabling a handful of Internet-
connected vehicles and waiting for traﬃc to build up.
There are even second-order eﬀects where both clogging

3d,

6

and localized percolation happen simultaneously, which
could potentially result in even wider disruption due to
non-linear interactions between kinetic (clogging) and
non-kinetic (percolation) ﬂows. To better grasp the
potential disruption of sub-critical densities of disabled
vehicles, we examined post-hack traﬃc dynamics on a
Manhattan-like grid, using the Simulation of Urban Mo-
bility (SUMO) [36] traﬃc suite (Supplementary Mate-
rials).
In these simulations, we observed clogging-like
kinetic slowing traﬃc at densities below the percolation
threshold. As expected, the critical threshold for ρH at
which the average vehicle velocity drops to zero coincides
with the percolation threshold. While these additional
sub-percolation simulations shift away from static block-
ages to examine time-dependent dynamics, they under-
score the reality that a percolation-of-percolation event
exists within a wider ecosystem of disruptions.

Our eﬀort to isolate the speciﬁc nature of percolation
and distinguish its statistical properties from clogging
may appear to underestimate the severity of hacking tar-
geted at Internet-connected vehicles. However, this dis-
tinction is critically important for developing risk mitiga-
tion, response, and recovery plans. For example, a plan
that is highly eﬀective for clogging at a sub-critical den-
sity of disabled vehicles, may be signiﬁcantly less eﬀective
at larger densities of disabled vehicles, and of course, vice
versa. Furthermore, our analytical approach with Eq. (1)
captures the underlying risk of percolation-based grid-
lock, while bypassing computationally expensive large-
scale traﬃc simulations. This computational eﬃciency is
appealing for developing real-time recovery plans in the
aftermath of a cyber attack where case-speciﬁc details
Indeed,
can be incorporated in the recovery response.
with the proliferation of Vehicle-to-Vehicle (V2V) and
Vehicle-to-Infrastructure (V2I) connectivity, these chal-
lenges are already permeating urban infrastructure. New
York City has current plans to install V2V and V2I tech-
nology [37, 38], suggesting an urgent need to identify,
understand, and plan ahead for the likelihood of vehicle-
targeted hacking.

CONCLUSION

Quantiﬁcation is the critical ﬁrst step in cyber-physical
risk mitigation. With the results presented here, we
found just ≈ 13 compromised vehicles/km/lane on the
Manhattan street network is enough to cause citywide
disruption, wherein portions of the city become discon-
nected from key services. This density corresponds to ≈
10% of the capacity of the city, or about 30% of all vehi-
cles at intermediate traﬃc density. From the New York
State vehicle registry, the four largest vehicle manufac-
turers (Honda, Toyota, Ford, and General Motors) each
account for around 10% of the total number of vehicles
registered (Supplementary Materials). Thus, if any one
of those four manufacturers were compromised during
rush hour, it would cause city-wide disruption with prob-

ability > 40%. If two manufacturers were compromised,
city fragmentation becomes a near certainty, occurring
with probability > 95%. Because we have no precedent
for large scale cyber-physical hacking, we cannot directly
compare these predictions to empirical observations. In-
deed, records of traﬃc accidents across New York City
show that there are at most ∼ 30 simultaneous accidents,
which is far below the percolation threshold [39]. Ev-
idently, the percolation-of-percolations phenomenon de-
scribed here is a ﬂow phenomenon that is statistically
unlikely to occur in conventional conditions, making a
cyber-physical hack the only apparent means of observ-
ing its occurrence.

As a direct beneﬁt of developing the percolation-of-
percolation framework, we have incidentally uncovered
an insight useful for developing risk-mitigating strategies.
Using multiple distinct networks for connected vehicle
communications and infrastructure decreases the number
of vehicles that can be compromised in a single malicious
cyber-intrusion. For example, if there were 20 compart-
mentalized networks in a city, each of which was respon-
sible for 5% of connected vehicles communications, the
chance of citywide fragmentation would be low (< 10%)
if any one of these networks was hacked. A hacker de-
liberately seeking to cause a large-scale disruption faced
with this compartmentalized multi-network architecture
would therefore be required to execute multiple simul-
taneous intrusions across multiple distinct networks, in-
creasing the cyber-attack’s diﬃculty and makes it less
likely to occur. In conjunction with conventional cyber-
security strategies, [40, 41] the chances of a percolation-
of-percolation event could be eﬀectively reduced to zero.
While isolated traﬃc disruptions are well-understood
from the perspective of transportation science, the easy
digital scalability and replicability of hacking means a
single well-coordinated attack could surpass any famil-
iar traﬃc condition. As we explore these technology en-
abled “unknown unknowns,” we must be aware of how
unintended blind spots can be exploited so that we can
preemptively predict and prevent their harms.

METHODS

A.

Intelligent Driver Model (IDM) Simulations

We simulate the motion of individual vehicles using

IDM. The rules for IDM simulations are:

˙xn =

˙vn =

dxn
dt
dvn
dt

= vn,
(cid:34)

= a

1 −

(cid:19)4

(cid:18) vn
v0

−

(cid:18) s∗(∆vn, vn)
sn

(cid:19)(cid:35)

,

s∗(∆vn, vn) = s0 + vnT +

vn∆vn
√
ab
2

,

(2)

7

where xn and vn denote the position and velocity of the
nth vehicle, and sn is the distance between nth vehicle
and the vehicle in front of it on the same lane. We choose
parameters [17]: v0 = 120 km/h is the velocity a vehi-
cle would drive in free traﬃc; s0 = 2 m is the minimum
acceptable gap maintained from the front bumper of one
car to the rear bumper of the car in front of it in dense,
standing traﬃc [42]; T = 1.6 s is the minimum possible
time for a vehicle to reach the current position of the
vehicle in front of it; a = 0.73 m/s2 is the maximum ac-
celeration; b = 1.67 m/s2 is the comfortable deceleration.
In simulations, we numerically solve these equations for
N vehicles, and after 1,000 time steps corresponding to
100 s of simulated drive time, randomly select a portion
of them to be “compromised,” and stop them where they
Interestingly, the percolation results
are on the road.
are substantially independent from the numerical values
of these microscopic model parameters (Supplementary
Materials).

B. MOBIL Lane Changing Rules

To realistically model the behavior of individual vehi-
cles, we also need a microscopic description to determine
when vehicles should switch lanes. While a variety of
options have been established in the literature, here, we
utilize the Minimizing Overall Breaking Induced By Lane
changes (MOBIL) model[19, 20]. This framework con-
siders whether a vehicle and its neighbors would better
match their preferred speed if the vehicle changes lanes.
Deﬁning the change in acceleration post-lane-change be-
tween the next time step t+1 (after the lane change) and
the current time step t (before the lane change) as

∆¨xi = ¨xi(t + 1) − ¨xi(t),
∆¨xi−1 = ¨xi−1(t + 1) − ¨xi−1(t),
∆¨xj−1 = ¨xj−1(t + 1) − ¨xj−1(t),

and

we can express the MOBIL condition as

∆¨xi + p(∆¨xi−1 + ∆¨xj−1) > 0,

(3)

(4)

where the index i corresponds to the vehicle changing
lanes, i−1 is the current vehicle behind the lane-changing
vehicle at time t, and j − 1 is the vehicle that will be
behind the lane changing vehicle at t+1 if i changes lanes.
The constant p is referred to as the politeness factor; we
choose p = 1, which corresponds to force minimization
of a vehicle and its nearest neighbors.

In simulations with three lanes, the left-most and right-
most lanes, can change into the center lane, and at ev-
ery time step, vehicles in these edge lanes initiates lane
changing, only if Eq. (4) is satisﬁed and a random num-
ber rn ∈ [0, 1] < 0.5. This additional random variable
rn prevents the emergence of unrealistic large-scale si-
multaneous lane switching. Vehicles in the center lane
choose the left or right lane to change into, depending

on whether rn < 0.5 or > 0.5 respectively. Within ﬂuc-
tuations, we ﬁnd that diﬀerent values for p do not aﬀect
macroscopic ﬂux-densities measurements. Likewise, in
the presence of disabled vehicles, p does not change the
underlying percolation-geometric transition discussed in
the main text.

C. Percolation of Compromised Vehicles

Given the prevalence of zero-ﬂux events post-hack in
our highway-like simulations, even when only a portion
of vehicles are compromised, we sought to understand
whether percolation of compromised vehicles is the dom-
inant phenomenon after a cyber-attack. Percolation of
disabled vehicles occurs when, on an (cid:96) lane road, there is
an (cid:96)-tuple of disabled vehicles positioned across all lanes
such that no other vehicle can pass them (Fig 2a, lower
inset).

To this end, we derived an expression for the proba-
bility of a percolated conﬁguration on an (cid:96) lane road of
length L and a per-lane vehicle density ρ, with eﬀective
vehicle size d. The eﬀective vehicle size is the length from
the rear bumper of one vehicle to the rear bumper of the
next vehicle in “bumper to bumper” traﬃc. Of course in
bumper to bumper traﬃc cars’ bumpers are not actually
in contact, so d is slightly larger than the physical length
of a vehicle. In our case d = 7 m, which is typically the
separation between cars in dense traﬃc [17].

To determine the probability that compromised vehi-
cles end up in a percolated position, i.e. one that would
block all lanes of a highway if the vehicles were frozen in
place, we ﬁrst assume that the position of the ith con-
nected vehicle in lane α will be distributed uniformly:

X α

i ∼ U (0, L) ∀i, α.

We next deﬁne the random variable
i − X α+1

Zii(cid:48) = |X α

|,

i(cid:48)

which describes the center-to-center distance between
two vehicles in adjacent lanes, projected onto the direc-
tion of traﬃc ﬂow. This is the quantity we are interested
in, since we want to understand the probability that cars
in adjacent lanes are positioned such that a third car
can not lane-change between or around them. In other
words, we want to know if compromised vehicles in ad-
jacent lanes are a distance no greater than s from each
other, where s is twice the eﬀective car length (Fig. 4).
If Zi i(cid:48) ≥ s for all pairs of cars i and i(cid:48) in adjacent lanes,
then percolation of compromised vehicles did not occur; a
conﬁguration that would cause compromised vehicle per-
colation across two adjacent lanes occurs with probability
P (Zi i(cid:48) < s).

Since Zi i(cid:48) is a random variable related to the diﬀerence
between two uniformly distributed random variables with
known probability distribution functions, we can directly
calculate P (Zi i(cid:48) < s) using convolution. In fact, we de-
rive this probability for an arbitrary real number z. For

8

FIG. 4. Cartoon showing how we deﬁne s. (a) The center-
to-center distance between two vehicles i and i(cid:48) on lanes α
and α + 1 is considered a random variable Zi i(cid:48) . (b) In order
for the silver vehicle to lane change around the orange vehi-
cle in the right lane, it has to be able to ﬁt between the two
orange vehicles, following the path shown. (c) If the silver
car can just barely ﬁt between the orange vehicles, and each
vehicle has an eﬀective size d, then (d) the minimum center-
to-center distance between the orange vehicles that wouldn’t
cause compromised vehicle percolation if the orange vehicles
were suddenly hacked is s = 2d. Of course, while the cartoon
shows three cars of actual length d tightly packed bumper to
bumper, in reality vehicles need a little bit of extra room to
maneuver, beyond their physical size. This is why we use the
eﬀective vehicle length d of 7 m rather than the actual aver-
age length of a vehicle in calculating the minimum center-to-
center distance between vehicles to avoid compromised vehicle
percolation, s. So s is the minimum required center-to-center
distance between vehicles such that they are not in a position
that they would cause compromised vehicle percolation upon
being disabled by a hack.

example let’s consider cars labeled by i = 1 and i(cid:48) = 2.
The probability distribution functions for their positions,
X1 and X2, are

fX1 (x) = fX2(x) =

(cid:40)

1/L,
0,

if 0 ≤ x ≤ L,
otherwise.

We seek the cumulative distribution function for z, be-

cause this will give us the probability that Zi i(cid:48) < z for
any arbitrary real number z. The cumulative distribution
function is:

FZ12(z) = P (Z12 ≤ z) = P (|X1 − X2| ≤ z),
= P (−z ≤ X1 − X2 ≤ z),
= P (X1 − X2 ≤ z) − P (X1 − X2 ≤ −z),
= FX1−X2(z) − FX1−X2 (−z).

By taking derivatives and using the chain rule, we can
get the probability distribution functions:

fZ12(z) = fX1−X2 (z) + fX1−X2(−z)

Note that fX1−X2(z) is the convolution of fX1(z) with
f−X2(z), and that we know X1 and X2 are distributed
uniformly on the interval [0, L]. Then we can write, com-
pactly:

fX1−X2(z) =

1
L2

(cid:90) L

(cid:90) L

0

0

δ((x1 − x2) − z) dx1dx2,

=

L − z + 2LzΘ(−z)
L2

.

Where δ(. . .) is the delta function and Θ(. . .) is the Heav-
iside step function. This is the standard triangular dis-
tribution, sometimes called the uniform diﬀerence dis-
tribution. The integration must be performed carefully
here, because the cases when z ≥ 0 and z < 0, and when
x1 ≥ x2 and x1 < x2 must each be considered sepa-
rately [43]. We notice right away that this expression is
an even function of z and so fX1−X2(z) = fX1−X2(−z)
and so fZ12 (z) = 2fX1−X2(z). We are only interested in
distances, so without loss of generality we focus on z > 0.
Thus, we can simplify:

fZ12 (z) =

2
L2 (L − z).

To ﬁnd P (Z12 < z) we integrate:

P (Z12 < z) =

(cid:18)

2
L2

Lz −

(cid:19)

1
2

z2

Nothing on the right hand side of the above equation
depends on the vehicle labels 1 and 2. This observation
is generally true for any pair of vehicles on adjacent lanes.
In addition, this independence is true for any arbitrary
real number z. We are interested, however, speciﬁcally
in the probability that two vehicles on adjacent lanes are
separated by a distance less than s, so we deﬁne:

Ppair blocks = P (Zii(cid:48) < s) =

(cid:18)

2
L2

Ls −

(cid:19)

.

1
2

s2

This is the probability that a pair of vehicles in adjacent
lanes is positioned such that it would completely block

9

both of those lanes if the vehicles were frozen in place.
For a two-lane road, this would completely block the mo-
tion of vehicles. When distributing an (cid:96)-tuple of vehicles
on an (cid:96) lane road, the probability that the tuple does not
block the entire road is given by

Ptuple clear = 1 − P (cid:96)−1

pair blocks

as there are (cid:96) − 1 pairs of lanes to consider.

Finally, we can calculate the overall probability that
any tuple does block the highway. To do so, we consider
every (cid:96)-tuple of vehicles that could potentially percolate,
and ﬁnd:

Pp = 1 − P n(cid:96)

tuple clear

where n is the number of vehicles in each lane, and there
are ≈ nl tuples that could each potentially block the
highway. In this last step, we assumed nj ≈ nj(cid:48) ∀j, j(cid:48),
i.e., there are equal numbers of vehicles in each lane. This
was not strictly enforced in simulations, yet simulations
still agreed with the analytical formula. Collecting all
of these terms, and replacing n with L · ρH we ﬁnd the
result for Eq. (1) in the main text:

(cid:34)

Pp = 1 −

1 −

(cid:17)(cid:96)−1

(cid:16)

·

2 −

(cid:16) s
L

s
L

(cid:17)(cid:96)−1 (cid:35)(L · ρH )(cid:96)

.

This mathematical prediction based on the hypothe-
sis of percolation is consistent with simulations we per-
formed varying each parameter (Supplementary Mate-
rials). The advantage oﬀered by this calculation over
direct numerical simulations is that it allows for immedi-
ate percolation probability calculations without the need
for computationally intensive numerical simulations of
agent-based models. Without this time-saving mecha-
nism, our city level analysis would have been practically
impossible.

D.

Intersections

Our analysis of citywide traﬃc in the post-hack sce-
nario uses Eq. (1) to compute the probability of obstruc-
tions blocking traﬃc ﬂow. This approach neglects po-
tential eﬀects that occur at intersections. We can jus-
tify this simpliﬁcation with the following back-of-the-
envelope calculation. First, we deﬁne the probability,
∆Pp, that a blockage occurs exactly in an intersection of
length (cid:96)0 at the end of a road segment of size L, as the
diﬀerence in the blockage probability between the road
of length L and a hypothetical road of length L + (cid:96)0. We
then approximate ∆Pp ≈ (∂Pp/∂L)·∆L = (∂Pp/∂L)·(cid:96)0.
We compute the partial derivative from Eq. (1). Using
parameters that are reasonable for Manhattan we ﬁnd
∆Pp to be on the order of 10−4. For example, if L = 1
km, s = 14 m, ρ = 15 vehicles/km/lane, (cid:96) = 2, and
(cid:96)0 = 20 m, then we ﬁnd ∆Pp = 2 × 10−4. On the other

https://github.com/dyanni3/Traﬃc-Simulations.

10

hand, the total number of intersections in Manhattan is
on the order of 104. Therefore, we expect that by mak-
ing this simpliﬁcation to ignore intersections, we are ne-
glecting the eﬀects of ∼ 1 intersection within the entire
city. This back-of-the-envelope estimate provides good
evidence that ignoring intersections is quantitatively rea-
sonable for our analysis.

E. Code Availability

The results generated and analyzed in this study were
derived from custom software. All code is available at

SV, DY, and PJY acknowledge support from the Geor-
gia Tech Soft Matter Incubator. JLS was independently
funded.

ACKNOWLEDGEMENTS

The datasets generated and analyzed in this study are available from the corresponding author upon request.

DATA AVAILABILITY

• Custom software is available at:

https://github.com/dyanni3/Traﬃc-Simulations

• NGSIM data is available for public access through the US Department of Transportation:

https://ops.fhwa.dot.gov/traﬃcanalysistools/ngsim.htm

• Data for vehicle speeds in Manhattan was obtained from the NYC DOT:

http://www.nyc.gov/html/dot/html/about/datafeeds.shtml

[1] Connected

car market

report.

https://www.

statista.com/outlook/320/109/connected-car/
united-states#, 2018. Accessed: 2018-05-10.

[2] Connected vehicle beneﬁts.

https://www.its.dot.
gov/factsheets/pdf/ConnectedVehicleBenefits.pdf,
2018. Accessed: 2018-03-28.

[3] Charlie Miller and Chris Valasek. Remote exploitation
of an unaltered passenger vehicle. Black Hat USA, 2015,
2015.

[4] Andy Greenberg. Hackers remotely kill a jeep on the

highwaywith me in it. Wired, 7:21, 2015.

[5] Simon Parkinson, Paul Ward, Kyle Wilson,

and
Jonathan Miller. Cyber threats facing autonomous and
connected vehicles: future challenges. IEEE Transactions
on Intelligent Transportation Systems, 18(11):2898–2915,
2017.

[6] Mani Amoozadeh, Arun Raghuramu, Chen-Nee Chuah,
Dipak Ghosal, H Michael Zhang, Jeﬀ Rowe, and Karl
Levitt.
Security vulnerabilities of connected vehicle
streams and their impact on cooperative driving. IEEE
Communications Magazine, 53(6):126–132, 2015.

[7] World’s

biggest

data

breaches.

http://www.

informationisbeautiful.net/visualizations/
worlds-biggest-data-breaches-hacks/, 2018.
cessed: 2018-05-10.

Ac-

[8] General accountability oﬃce (gao), vehicle cybersecurity:

Dot and industry have eﬀorts under way, but dot needs to
deﬁne its role in responding to a realworld attack, gao-
16-350. http://www.gao.gov/assets/680/676064.pdf,
2016. Accessed: 2018-03-27.

[9] Mahmoud Hashem Eiza and Qiang Ni. Driving with
sharks: Rethinking connected vehicles with vehicle
cybersecurity.
IEEE Vehicular Technology Magazine,
12(2):45–51, 2017.

[10] Hackers are the real obstacle for self-driving vehicles.

https://www.technologyreview.com/s/608618/hackers-
are-the-real-obstacle-for-self-driving-vehicles/.

[11] C Warren Axelrod. Cybersecurity in the age of au-
tonomous vehicles, intelligent traﬃc controls and perva-
sive transportation networks.
In Systems, Applications
and Technology Conference (LISAT), 2017 IEEE Long
Island, pages 1–6. IEEE, 2017.

[12] Autonomous cars without human drivers are coming
to california next year. http://bgr.com/2017/10/11/
self-driving-car-tests-california-rules/,
2017.
Accessed: 2018-03-27.

[13] Driverless testing of autonomous vehicles. https://www.
dmv.ca.gov/portal/dmv/detail/vr/autonomous/auto,
2018. Accessed: 2018-03-27.

[14] Matt Richtel and Conor Dougherty. Googles driverless
cars run into problem: Cars with drivers. New York
Times, 1, 2015.

[15] Norbert Bißmeyer, Christian Stresing, and Kpatcha M
Bayarou. Intrusion detection in vanets through veriﬁca-
tion of vehicle movement data. In Vehicular Networking
Conference (VNC), 2010 IEEE, pages 166–173. IEEE,
2010.

[16] Dirk Helbing. Traﬃc and related self-driven many-
particle systems. Reviews of Modern Physics, 73:1067–
1141, Dec 2001.

[17] Martin Treiber, Ansgar Hennecke, and Dirk Helbing.
Congested traﬃc states in empirical observations and
microscopic simulations. Physical Review E, 62(2):1805,
2000.

[18] Chenyi Chen, Li Li, Jianming Hu, and Chenyao Geng.
Calibration of mitsim and idm car-following model based
on ngsim trajectory datasets.
In Vehicular Electronics
and Safety (ICVES), 2010 IEEE International Confer-
ence on, pages 48–53. IEEE, 2010.

[19] Martin Treiber and Dirk Helbing. Mobil: General lane-
changing model for car-following models. Disponıvel
em http://www. mtreiber. de/publications/MOBIL TRB.
pdf, Acesso em dezembro de, 2009, 2006.

[20] Martin Treiber and Arne Kesting. Modeling lane-
changing decisions with mobil. Traﬃc and Granular
Flow07, pages 211–221, 2009.

[21] GB Whitham. On kinematic waves ii. a theory of traf-
ﬁc ﬂow on long crowded roads. Proc. R. Soc. Lond. A,
229(1178):317–345, 1955.

[22] Kai Nagel and Michael Schreckenberg. A cellular au-
tomaton model for freeway traﬃc. Journal de physique
I, 2(12):2221–2229, 1992.

[23] CC Thomas and Douglas J Durian. Fraction of clogging
conﬁgurations sampled by granular hopper ﬂow. Physical
review letters, 114(17):178001, 2015.

[24] Iker Zuriguel, Daniel Ricardo Parisi, Ra´ul Cruz Hidalgo,
Celia Lozano, Alvaro Janda, Paula Alejandra Gago,
Juan Pablo Peralta, Luis Miguel Ferrer, Luis Ariel Pug-
naloni, Eric Cl´ement, et al. Clogging transition of many-
particle systems ﬂowing through bottlenecks. Scientiﬁc
reports, 4:7324, 2014.

[25] Huba P´eter, Andr´as Lib´al, Charles Reichhardt, and Cyn-
thia JO Reichhardt. Crossover from jamming to clogging
behaviors in heterogeneous environments. arXiv preprint
arXiv:1712.03307, 2017.

[26] M Sahini and M Sahimi. Applications of percolation the-

ory. CRC Press, 2014.

[27] Cambridge Systematics. Ngsim us 101 data analysis:
Summary report. Prepared for Federal Highway Admin-
istration, 2005.

[28] R´eka Albert, Hawoong Jeong,

and Albert-L´aszl´o
Barab´asi. Error and attack tolerance of complex net-
works. nature, 406(6794):378, 2000.

[29] Duncan S Callaway, Mark EJ Newman, Steven H Stro-
gatz, and Duncan J Watts. Network robustness and

11

fragility: Percolation on random graphs. Physical review
letters, 85(25):5468, 2000.

[30] Soﬁane Abbar, Tahar Zanouda, and Javier Borge-
Holthoefer. Robustness and resilience of cities around
the world. arXiv preprint arXiv:1608.01709, 2016.
[31] Jiaqiu Wang. Resilience of self-organised and top-down
planned citiesa case study on london and beijing street
networks. PLoS one, 10(12):e0141736, 2015.

[32] Geoﬀ Boeing. Osmnx: New methods for acquiring, con-
structing, analyzing, and visualizing complex street net-
works. Computers, Environment and Urban Systems,
65:126–139, 2017.

[33] Daqing Li, Bowen Fu, Yunpeng Wang, Guangquan Lu,
Yehiel Berezin, H Eugene Stanley, and Shlomo Havlin.
Percolation transition in dynamical traﬃc network with
evolving critical bottlenecks. Proceedings of the National
Academy of Sciences, 112(3):669–672, 2015.

[34] Louis M. Shekhtman and Shlomo Havlin. Percolation of
hierarchical networks and networks of networks. Phys.
Rev. E, 98:052305, Nov 2018.

[35] Guanwen Zeng, Daqing Li, Shengmin Guo, Liang Gao,
Ziyou Gao, H Eugene Stanley, and Shlomo Havlin.
Switch between critical percolation modes in city traf-
ﬁc dynamics. Proceedings of the National Academy of
Sciences, 116(1):23–28, 2019.

[36] Michael Behrisch, Laura Bieker, Jakob Erdmann, and
Daniel Krajzewicz. Sumo–simulation of urban mobility.
In The Third International Conference on Advances in
System Simulation (SIMUL 2011), Barcelona, Spain, vol-
ume 42, 2011.

[37] Connected vehicle pilot deployment program: New york
city, new york. https://www.its.dot.gov/factsheets/
pdf/NYCCVPliot_Factsheet_020817.pdf, 2017.
Ac-
cessed: 2018-05-11.

[38] Nyc dot advances to phases two and three of

fed-
eral connected vehicle pilot program. http://www.nyc.
gov/html/dot/html/pr2016/pr16-094.shtml, 2016. Ac-
cessed: 2018-05-11.

[39] Nypd motor

vehicle

collisions.

//www.autoinsurancecenter.com/
traffic-accidents-in-new-york-city.html,
Accessed: 2018-10-15.

https:

2018.

[40] Sabah Shamsh and Vandana Dubey. Roaming honeypots
along with ids in mobile ad-hoc networks. International
Journal of Computer Applications, 69(23), 2013.

[41] Mohammed H Almeshekah and Eugene H Spaﬀord. Cy-
ber security deception. In Cyber Deception, pages 23–50.
Springer, 2016.

[42] Helbing D. Treiber M. Memory eﬀects in microscopic
traﬃc models and wide scattering in ﬂow-density data.
Physical Review E, 2003.
[43] Hwang J. Blitzstein JK.

Introduction to probability,

2017.

