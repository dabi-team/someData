8
1
0
2

l
u
J

1
3

]

R
C
.
s
c
[

1
v
4
2
6
1
1
.
7
0
8
1
:
v
i
X
r
a

Security against false data injection attack in

cyber-physical systems

Arpan Chattopadhyay & Urbashi Mitra

Abstract—In this paper, secure, remote estimation of a linear
Gaussian process via observations at multiple sensors is consid-
ered. Such a framework is relevant to many cyberphysical sys-
tems and internet-of-things applications. Sensors make sequential
measurements that are shared with a fusion center; the fusion
center applies a certain ﬁltering algorithm to make its estimates.
The challenge is the presence of a few unknown malicious
sensors which can inject anomalous observations to skew the
estimates at the fusion center. The set of malicious sensors may
be time-varying. The problems of malicious sensor detection and
secure estimation are considered. First, an algorithm for secure
estimation is proposed. The proposed estimation scheme uses a
novel ﬁltering and learning algorithm, where an optimal ﬁlter
is learnt over time by using the sensor observations in order
to ﬁlter out malicious sensor observations while retaining other
sensor measurements. Next, a novel detector to detect injection
attacks on an unknown sensor subset is developed. Numerical
results demonstrate up to 3 dB gain in the mean squared error
and up to 75% higher attack detection probability under a small
false alarm rate constraint, against a competing algorithm that
requires additional side information.

Index Terms—Secure remote estimation, CPS security, false

data injection attack, Kalman ﬁlter, stochastic approximation.

I. INTRODUCTION

Cyber-physical systems (CPS) combine the cyber world
and the physical world via seamless integration of sensing,
control, communication and computation. CPS has widespread
applications such as networked monitoring and control of
industrial processes, intelligent transportation systems, smart
grid, and environmental monitoring. Most of these applications
critically depend on reliable remote estimation of a physical
process via multiple sensors over a wireless network. Hence,
any malicious attack on sensors can have a catastrophic
impact. We focus on false data injection (FDI) attacks which
can be characterized as integrity or deception attacks where
the attacker modiﬁes the information sent to the fusion center
to a denial-of-service attack
[2], [3]. This is in contrast
where the attacker attempts to block resources for the system
(e.g., wireless jamming attack to block bandwidth usage [4]).
FDI attacks modify the information either by breaking the
cryptography of the data packets or by physical manipulation
of the sensors (e.g., putting a heater near a temperature sensor).
The problem of FDI attack and its detection has received
recent attention. In [5], conditions for undetectable FDI attack
are developed, and the minimum number of sensors to be
attacked to ensure undetectability is computed. In [6], a linear
deception attack scheme that can fool the popular χ2 detector
is provided. Later, a new detection algorithm against such

The authors are with the Department of Electrical Engineering, University

of Southern California. Email: {achattop,ubli}@usc.edu

This work was supported by the following funding sources: ONR N00014-
15-1-2550, NSF CNS-1213128, NSF CCF-1718560, NSF CCF-1410009, NSF
CPS-1446901, AFOSR FA9550-12-1-0215

This paper is an extension of our previous conference paper [1].

linear deception attacks is designed in [7], where observations
are available from a few known safe sensor nodes. Efﬁcient
attack detection and secure estimation schemes for linear
Gaussian systems under cyber attack on a static, unknown
sensor subset have been developed in [8], but this detector is
not designed to tackle the linear deception attack of [6]. The
optimal attack strategy to steer the control of CPS to a target
value is provided in [9], while ensuring a constraint on the at-
tack detection probability. Centralized and decentralized attack
detection schemes for noiseless systems have been developed
in [10]. Coding of sensor output for efﬁcient attack detection
using χ2 detector is proposed in [11]. Attack-resilient state
estimation of a dynamical system with only bounded noise
has been discussed in [12]. Sparsity models to characterize
the switching location attack in a noiseless linear system and
state recovery constraints for various attack modes have been
described in [13]. Attack detection, secure estimation and
control in the presence of FDI attack for power systems are
addressed in [14]–[16].

In contrast to the prior literature, our current paper addresses
the problem of attack detection and secure remote estimation
of a linear system with unbounded Gaussian noise, in the
presence of an FDI attack (which could be the FDI attack
of [6]), when no safe sensor subset
is available. In this
paper, we make the following contributions. (i) We develop
a learning algorithm that learns a Kalman-like ﬁlter over time
for secure estimation in presence of FDI attacks. The ﬁlter
gain matrix is updated iteratively over time via simultaneous
in order to
perturbation stochastic approximation (SPSA),
minimize a combination of the estimation error in the absence
of attack and the anomaly in estimates returned by various
sensor subsets. The convergence of the learning algorithm
is proved by exploiting the properties of the attack scheme,
the ﬁltering scheme and SPSA. To our knowledge, this is
a novel contribution to the adaptive ﬁltering literature as
well. This algorithm later motivates another low-complexity
heuristic which offers up to 3 dB improvement
in mean
squared error (MSE) against another competing algorithm
from [7] that additionally requires a subset of safe sensors.
The algorithms are extended to handle random packet loss
between the sensors and the fusion center. (ii) We propose an
algorithm for FDI attack detection, that can offer up to 75%
improvement in attack detection probability under a small false
alarm constraint, against the detection scheme of [7] which
additionally requires a subset of safe sensors. Our detection
algorithm detects an attack via anomaly detection between
estimates made by various sensor subsets. We also provide
a learning scheme for optimization of our detector subject to
a constraint on false alarm.

The rest of the paper is organized as follows. Preliminaries
are discussed in Section II. The secure estimation algorithm to

 
 
 
 
 
 
combat the FDI attack is described in Section III. The attack
detection scheme is described in Section IV. Numerical results
are provided in Section V, followed by the conclusions in
Section VI. All proofs are provided in the appendices.

II. BACKGROUND

Throughout this paper, bold capital letters, bold small letters
and capital letters with caligraphic font will denote matrices,
vectors and sets respectively.

A. Sensing and remote estimation model

sensing a discrete-time

We consider a set of smart sensors N := {1, 2, · · · , N },
which are
stochastic process
{x(t)}t≥0. The sensors send their observation directly to a
fusion center via error-free wireless links so that the fusion
center can estimate ˆx(t) at each time t. The physical process
{x(t)}t≥0 (where x(t) ∈ Rq) is a linear Gaussian process that
evolves according to the following equation:

x(t + 1) = Ax(t) + w(t),

(1)

where w(t) is a zero-mean Gaussian noise vector with covari-
ance matrix Q, and is i.i.d. across t. The scalar or vector
observation made by sensor i is given by the following
observation equation if sensor i is used in sensing:

yi(t) = Cix(t) + vi(t),

(2)

where Ci
is a matrix of appropriate dimension and vi(t)
is a Gaussian observation noise with covariance matrix Ri.
Observation noise vi(t) is assumed to be independent across
sensors and i.i.d. across time. The pair (A, Q 1
2 ) is assumed to
be stabilizable and the pair (A, Ci) is assumed to be detectable
for all i ∈ N .

The goal of the fusion center is to minimize the time-

average expected mean squared error (MSE) in estimation:

lim sup
T →∞

1
T

T
(cid:88)

t=0

E||x(t) − ˆx(t)||2.

(3)

If all sensors send their observations to the fusion center in
real time, then the system is equivalent to a single sensor and
a remote estimator with real-time communication. The sensing
and observation models can be rewritten as:

x(t + 1) = Ax(t) + w(t)

y(t) = Cx(t) + v(t),

(4)

where v(t) ∼ N (0, R) is the observation noise and y(t) ∈
Rm×1 (also called yt) is the complete observation vector. The
minimum mean-squared error (MMSE) estimator in this case
is a linear ﬁlter called Kalman ﬁlter (see [17]):

ˆxt+1|t = Aˆxt
Pt+1|t = APtA(cid:48) + Q
Kt+1 = Pt+1|tC(cid:48)(CPt+1|tC(cid:48) + R)−1
ˆxt+1 = ˆxt+1|t + Kt+1(y(t + 1) − Cˆxt+1|t)
Pt+1 = (I − Kt+1C)Pt+1|t,

(5)

Figure 1. False data injection attack in remote estimation.

where ˆxt+1 is the MMSE estimate and Pt+1 is the the error
covariance matrix for the estimate ˆxt+1, provided that the
iteration starts from ˆx0 ∼ N (0, P0). It has been shown in [17]
that limt→∞ Pt+1|t = P exists and is the unique ﬁxed point to
the Pt+1|t iteration called the Riccati equation. Another quan-
tity of interest is the innovation sequence zt := y(t)−Cˆxt|t−1;
it was proved in [17] that {zt}t≥1 is a zero-mean Gaussian
sequence which is pairwise independent across time and whose
covariance matrix in the steady state is Σz := (CPC(cid:48) + R).

B. False data injection (FDI) attack

Any unknown subset A(t) ⊂ N of sensors can be under
attack at time t. Any sensor i ∈ A(t) sends an observation
according to the following attack equation:

yi(t + 1) = Cix(t) + ei(t) + vi(t),

(6)

where ei(t) is an error term injected by the attacker. The goal
of the attacker is to insert the false data sequence {ei(t) :
i ∈ A(t)}t≥0 so as to maximize the MSE given by (3). If
A(t) = A for all t, then the attack is called a static attack,
otherwise the attack is called a switching location attack. We
assume that, at most n0 sensors can be under attack at a time.
The χ2 detector: Since zt ∼ N (0, Σz) under steady state
when there is no attack, a natural technique (see [6], [7]) to
detect any FDI attack is to detect any anomaly in {zt}t≥0.
This is done by observing the innovation sequence over a pre-
speciﬁed window of J time-slots, and declaring an attack at
time τ if (cid:80)τ
tΣ−1
z zt ≥ η, where η is a pre-speciﬁed
threshould used to tune the false alarm probability.

t=τ −J+1 z(cid:48)

In [6], a linear injection attack to fool the χ2 detector is
constructed; at time t, the malicious sensor(s) modiﬁes the
innovation vector as ˜zt = Tzt+bt, where T is a square matrix
and bt ∼ N (0, Σb) is i.i.d. Gaussian. It was shown in [6]
that ˜zt ∼ N (0, Σ˜z) where Σ˜z = TΣzT(cid:48) + Σb. Hence, if we
ensure Σ˜z = Σz, then {˜zt}t≥1 will have the same distribution
N (0, Σz) as z(t), and hence the detection probability of the
χ2 detector will remain unaffected even under the attack. The
estimation error is maximized when the attacker just inverts
the innovation sequence (i.e., when T = −I and bt = 0).
However, the authors of [7] proposed another efﬁcient scheme
to detect such attack. The detection algorithm in [7] assumed
the presence of a few safe sensors; an attack is detected by
exploiting any anomaly between the observations made by the
safe sensors and other sensors. The assumption of the existence
of a set of safe sensors is restrictive, and the design of efﬁcient
attack detection and secure estimation schemes in the absence
of such safe sensors is the topic of our current paper.

Stationary attacks: In this paper, we consider a special class
of attack schemes called stationary attacks, where, at time t,
the injected error {ei(t) : i ∈ A(t)} is independently chosen
from a distribution p(·|yτ : τ < t). Note that, this attack class
contains the class of linear attacks where the attacked sensor
subset is either static, or varying with time according to a i.i.d.
process or a time-homogeneous Markov chain.

III. SECURE ESTIMATION

In this section, we will provide an algorithm to obtain a
reliable estimate ˆx(t) in the presence of FDI attacks, without
explicitly detecting the malicious sensor subset. This algorithm
is useful when it is not possible for the system administrator
to take necessary measure even upon the detection of an
attack (e.g., if a heater is deliberately kept by an attacker near
a temperature sensor, it may not be always be possible to
physically remove the heater).

A. Formulation as an on-line optimization problem

Note that, any sensor observation is ignored if the corre-
sponding entries in the Kalman gain matrix Kt+1 in (5) are set
to 0. Ideally, one should compensate for the errors introduced
by the malicious sensors, and if done so, the anomalies in
estimates from various sensor subsets will be small. However,
since the estimation error depends collectively on the process
noise, the observation noise and the noise injected by the
attacker, a reasonable technique for reliable estimation would
be to dynamically learn an optimal gain matrix that minimizes
the anomalies in estimates returned by various sensor subsets
subject to a constraint on the MSE in the absence of attack.
Now, let us assume that the attack is a stationary attack
(a static attack is a special case). We restrict the discussion
to the class of linear estimators. The estimator we consider is
similar to the Kalman ﬁlter in (5), except that the Kalman gain
matrix Kt+1 is learnt via a stochastic gradient descent scheme
to solve the following constrainted optimization problem:

min
{Kt}t≥0

lim sup
T ↑∞

1
T

T
(cid:88)

t=0

E[

max
B∈2N :|B|=n0

||ˆxB(t) − ˆxBc (t)||2]

s.t.

lim sup
T ↑∞

1
T

T
(cid:88)

t=0

E[Tr(Pt)] ≤ ¯P

(7)

Here Pt

represents the estimate of

the error covari-
ance matrix if a gain matrix sequence K0, K1, K2, · · ·
is
used for estimation, when there is no attack. Note that,
Pt can be calculated iteratively. The objective function
E[maxB∈2N :|B|=n0 ||ˆxB(t) − ˆxBc(t)||2] captures the anomaly
between the estimates ˆxB(t) and ˆxBc(t) coming from two
different sensor subsets B and Bc, when the restrictions Kt,B
and Kt,Bc of {Kt}t≥0 to the subsets B and Bc are used as
gain matrices applied to the observations coming from these
sensor subsets. The constraint ¯P can be chosen to be a certain
multiple of the time-average MMSE of the system under no
attack (which can be computed by running an optimal Kalman
ﬁlter).

The above constrained problem can be relaxed by a La-

grange multiplier λ ≥ 0 as follows:

min
{Kt}t≥0

lim sup
τ ↑∞

1
τ

τ
(cid:88)

t=0

E [

max
B∈2N :|B|=n0
(cid:124)

||ˆxB(t) − ˆxBc (t)||2 + λTr(Pt)]

(cid:123)(cid:122)
:=c(t)

(cid:125)

(8)

where c(t) is the single-stage cost at time t.
The following result tells us how to choose λ.

Lemma 1. If there exists a λ∗ ≥ 0 such that the optimal
solution of the unconstrained problem (8) under λ∗ meets the
constraint in (7) with equality, then the optimal solution of
the unconstrained problem (8) under λ∗ is optimal for the
constrained problem (7) as well.

The proof is similar to that of [18, Theorem 1].

B. The proposed learning algorithm

In this subsection, we propose an iterative learning algo-
rithm to solve (7). Our proposed algorithm is based on multi-
timescale stochastic approximation (see [19, Chapter 6]). Note
that, Lemma 1 suggests solving (8) for various values of λ
and then choosing a suitable λ∗ that meets the constraint in
(7) with equality; we can solve (8) in an inner loop and then
vary λ in an outer loop to converge to λ∗. This is achieved
by varying λ at a slower timescale as the iterations progress,
and solving the unconstrained problems at faster timescales.
Let us consider (8) for a ﬁxed λ. Due to the unavailability
of any closed-form expression of the cost function in (8),
direct computation of a gradient estimate w.r.t. Kt is not
possible. However, we will minimize the cost function (8)
by iteratively learning an optimal gain matrix K∗ over time,
via a stochastic gradient descent (SGD) algorithm. Hence, we
employ simultaneous perturbation stochastic approximation
(SPSA, see [20]) for this optimization problem. In SPSA, all
elements of Kt are perturbed simultaneously by a random
vector in two opposite directions, the single stage cost function
is evaluated for these two perturbed gain matrices K+
t and
K−
t , and a noisy estimate of the gradient of the single stage
cost is obtained from this. This noisy estimate of the gradient
is then used in SGD for asymptotically minimizing E[c(t)].

The proposed SEC (secure estimation) algorithm uses
three positive sequences {a(t)}t≥0, {b(t)}t≥0 and {d(t)}t≥0
t=0 a(t) =
that satisfy the following conditions:
(cid:80)∞
t=0 b2(t) < ∞,
a2(t)
d2(t) < ∞ and (v)

t=0 b(t) = ∞, (ii) (cid:80)∞

t=0 a2(t) < ∞, (cid:80)∞

(iii) limt→∞ d(t) = 0, (iv) limt→∞
limt→∞

(i) (cid:80)∞

b(t)
a(t) = 0.

The ﬁrst two conditions are standard for stochastic approxi-
mation (see [19]). The third condition ensures that the gradient
estimate is asymptotically unbiased. The fourth condition is
a technical condition required for the convergence of SPSA
(see [20]). The ﬁfth condition ensures that, in our proposed
algorithm, the Kt iteration using step size a(t) runs at a faster
timescale than the λ(t) iteration using step size b(t).

The algorithm requires a small δ > 0. Let us deﬁne K :=
{K ∈ Rq×m : ||λmax(I − KC)|| ≤ 1 − δ} where λmax(I −
KC) is the maximum eigenvalue of the matrix (I−KC). The
algorithm also requires a large number l > 0.

We deﬁne the gain matrix K+

t,B which is the same as K+
t
except that the entries corresponding to the sensors from Bc
are set to 0, and vice versa for the deﬁnition of K−

Let ˆx+

B (t) and ˆx+

Bc(t) denote the estimates obtained by using
Kalman ﬁlters with constant gain matrices K+
t,Bc
applied to the observed sequence {y(τ ) : 1 ≤ τ ≤ t} over the
time period τ = 0, 1, 2, · · · , t. Let us similarly deﬁne ˆx−
B (t)
and ˆx−
Bc(t). In particular, ˆx+
B (t) is computed recursively as
follows for τ = 0, 1, · · · , t − 1:

t,B and K+

t,Bc.

ˆx(τ +1)
B

= Aˆx(τ )

B + K+

t,B(y(τ + 1) − CAˆx(τ )
B )

(9)

and setting ˆx+

B (t) = ˆx(t)
B .

The SEC algorithm is described below.

The SEC algorithm
Input: {a(t)}t≥0, {b(t)}t≥0, {d(t)}t≥0, ¯P , l,
Initialization: K1, P0, λ(0) > 0, ˆx+
ˆx−
B (0) = ˆx−
For t = 1, 2, 3, · · · :

Bc(0) = ˆx(0) for all B ∈ 2B : |B| = n0.

B (0) = ˆx+

Bc(0) =

1) Collect the observation vector yt from all sensors.
2) Compute the estimate ˆx(t) = Aˆx(t − 1) + Kt(yt −

CAˆx(t − 1)).

3) Pick a random matrix ∆t such that each entry in ∆t is
chosen from {−1, 1} independently with probability 1
2 .
:= Kt +d(t)∆t and K−
:= Kt −d(t)∆t.
t
B (t) and ˆx−
Bc(t) for all subsets

4) Compute K+
t
5) Compute ˆx+

Bc(t), ˆx−

B (t), ˆx+

B of size n0, using (9) or similar update equations.

:= (I − K+

6) Compute P+
t
t C)(cid:48) + K+

t C)(APt−1A(cid:48) + Q)(I −
K+
t . Compute
Pt := (I−KtC)(APt−1A(cid:48) +Q)(I−KtC)(cid:48) +KtRK(cid:48)
t.
B (t) −

t )(cid:48) and similarly P−

t R(K+

c+(t)

:= maxB∈2N :|B|=n0 ||ˆx+
t ), and similarly c−(t).

7) Compute
Bc(t)||2 + λ(t)Tr(P+
ˆx+

8) For each entry Kt(i, j), do the following SPSA update:

˜Kt+1(i, j) =

(cid:20)
Kt(i, j)−a(t)×

c+(t) − c−(t)
2d(t)∆t(i, j)

(cid:21)l

(10)

−l
and project ˜Kt+1 onto K in order to obtain Kt+1.

9) Update λ(t + 1) = [λ(t) + b(t)(Tr(Pt) − ¯P )]l
0.

end

Note that, ˜Kt+1(i, j) is projected onto a compact interval
[−l, l] to ensure stability of the iteration (10). Similarly, λ(t +
1) is projected onto a compact interval [0, l].

The spectral radius of (I − Kt+1C) is maintained to be
less than (1 − δ) to ensure that the error covariance matrix Pt
remains bounded. A standard result says that, the covariance
matrix Pt of the estimation error ˆx(t) − x(t) varies according
to the following recursive equation:

Pt := (I − KtC)(APt−1A(cid:48) + Q)(I − KtC)(cid:48) + KtR(Kt)(cid:48),

(11)

when the gain matrix Kt is chosen arbitrarily (not optimally
as in (5)). Step 6 of SEC is motivated by the above expression.
Equation (10) is a SGD algorithm where a noisy estimate
of the gradient of E[c(t)] w.r.t. Kt is used instead of the
true gradient. The noisy gradient estimate is c+(t)−c−(t)
2b(t)∆t(i,j) . Note
that, SPSA requires computation of c+(t) and c−(t) only for
two different gain matrices K+
t ; this allows us to

t and K−

avoid unnecessarily huge computation involved in gradient
estimation using coordinatewise perturbation.

C. Convergence of SEC

t=1

(cid:80)T

Let us consider the problem in (8). We deﬁne a func-
tion P (K) which is the time-averaged MSE (and also
E[Tr(Pt)] achieved if a
1
the limiting MSE) limT →∞
T
Kalman-like linear estimator is used with a constant gain
matrix K for all t, when there is no attack. Also, for a
constant gain matrix K used at all
let us deﬁne
by g(K) the limiting (and also time-average) value of the
E[maxB∈2N :|B|=n0 ||ˆxB(t) − ˆxBc(t)||2],
anomaly lim supt→∞
when there is a possible attack. We deﬁne C(K, λ) := g(K)+
λP (K). Let us also deﬁne Kλ := {K ∈ [−l, l]q×m ∩ K :
∇KC(K, λ) = 0}.
Assumption 1. For any ﬁxed λ ∈ [0, l], the function C(K, λ)
is Lipschitz continuous in K ∈ [−l, l]q×m ∩ K.

time t,

Let us recall that,

Pt := (I − KtC)(APt−1A(cid:48) + Q)(I − KtC)(cid:48) + KtR(Kt)(cid:48)

Since the spectral radius of (I − KtC) is less than or equal
to (1 − δ) < 1, the Pt iteration converges almost surely,
and hence the MSE under SEC is uniformly bounded across
sample paths. If a constant gain matrix K is used,
is
still easy to prove that P (K) is Lipschitz continuous in
K ∈ [−l, l]q×m ∩ K. Thus, Assumption 1 is speciﬁcally
required for g(K).

it

Theorem 1. Under SEC with a ﬁxed λ(t) = λ (i.e., b(t) = 0
for all t = 0, 1, 2, · · · ) and Assumption 1, the iterates {Kt}t≥1
converge almost surely to the set Kλ, provided that each such
stationary point belongs to the interior of [−l, l]q×m ∩ K.

Proof: See Appendix A.

Theorem 1 says that {Kt} converges to the set of local
minima of C(K) (i.e. C(K, λ) for a given K) in case there
is no saddle point that is not a local minimum.

However, SEC varies λ(t) at a slower timescale in order to
solve the constrained problem (7). The next theorem provides
our main result on the convergence of SEC in its original form,
to the desired solution set of the constrained problem (7).

Let Sλ denote the closure of the convex hull of the set
{P (K) − ¯P : K ∈ Kλ}. We deﬁne by ¯Λ the collection of
closed connected internally chain transitive invariant sets of
the following differential inclusion (reference [21]):

˙λ(τ ) ∈ Sλ(τ ), τ ∈ R+

Theorem 2. Under SEC and Assumption 1, the sequence
{(Kt, λ(t))}t≥1 almost surely converges to the set {(K, λ) :
K ∈ Kλ, λ ∈ ¯Λ}.

Proof: See Appendix B.

The proof of Theorem 2 suggests that

the λ(t) update
equation asymptotically behaves like a stochastic recursive
inclusion (see [19, Chapter 5]), where at each time,
the
iteration involves a set {P (K)− ¯P : K ∈ Kλ(t)}. However, the
proof requires that the set {P (K) − ¯P : K ∈ Kλ(t)} should
be convex and compact, which may not be true in general.

Hence, we consider the set Sλ(t), which results in a weaker
result on the convergence of SEC in Theorem 2.

D. Complexity issues and a heuristic

Bc (t)||2

t = P (K+

B (t) − ˆx+

t , and P (K−

t ) instead of P+

also maxB∈2N :|B|=n0 ||ˆx+

the computational complexity of P (K+

The SEC algorithm requires us to compute Pt, P+

t , P−
t
and
and
maxB∈2N :|B|=n0 ||ˆx−
B (t) − ˆx−
Bc(t)||2. The matrix Pt can
ideally we
be computed iteratively using (11). However,
should use P (K+
t ) instead
of P−
t , in the SPSA update (10). Computing P (K+
t ) will
require us to run the iteration (11) t times at iteration t;
t ) grows with
i.e.,
t. But,
in the proof of Theorem 1, we can show that
P+
t ) + o(d(t)) and P−
t = P (K−
t ) + o(d(t)).
This allows us to use P+
t and P−
t matrices in (10), whose
computation can be done recursively as in step 6 of SEC.
Thus, (10) is not a standard SPSA acheme.
B (t), ˆx+
Bc(t), ˆx−
Bc (t)
requires O(t) computation
for all B of cardinality n0
this happens because at each time t we ob-
at
and K−
tain two new matrices K+
t , and the estimates
t
ˆx+
B (t), ˆx+
Bc(t) for all B need to be computed
and K−
using constant gain matrices K+
applied to the
t
t
histrory of observations {y(τ ) : 1 ≤ τ ≤ t}. This restricts
the possibility of using SEC in practical applications, since
IoT applications will require low-complexity solutions.

However, the computation of ˆx+

Bc(t), ˆx−

B (t), ˆx−

B (t), ˆx−

time t;

One possible heuristic to alleviate this problem is to update
Kt only up to some ﬁxed T time steps, and afterwards use
this constant Kt matrix for estimation for ever. However, this
results in the loss of the very essence of SEC. SEC does
observation driven gain adjustment to tackle FDI attacks; if
an attack starts beyond time t = T , this modiﬁed security
algorithm will miss the attack. Another possible strategy could
be to run the SPSA sequence for T time steps, and then repeat
the procedure for time t ∈ {iT + 1, T + 2, · · · , (i + 1)T } with
the same step size sequence a(1), a(2), · · · , a(T ), but on the
observation sequence y(iT + 1), y(iT + 2), · · · , y((i + 1)T ).
This can at best ensure convergence within a neighbourhood
of the solution set. However, choice of a large T still results
in large computational complexity.

Now we present an alternative low-complexity ver-
sion of SEC called SEC-L, which recursively computes
˜x+
B (t), ˜x+
Bc(t) for all B of cardinality n0, which
Bc(t), ˆx−
are (suboptimal) proxies for ˆx+

Bc(t), ˜x−

B (t), ˆx−

B (t), ˜x−

B (t), ˆx+

Bc(t).

SEC-L algorithm: This algorithm is same as SEC, except
t,B(yt −
Bc(t) for all

that, at step 5, we compute: ˜x+
CAˆx(t − 1)). The estimates ˜x−
Bc(t), ˜x−
subsets B of size n0 are also calculated similarly.

B (t) = Aˆx(t − 1) + K+

B (t), ˜x+

Clearly, SEC-L reduces the O(t) complexity for computing
ˆx+
B (t), ˆx+
Bc(t) to O(1), since SEC-L does
not involve ﬁltering over the entire observation history.

B (t) and ˆx−

Bc(t), ˆx−

E. Packet loss

So far we have assumed that all observations reach the
fusion center without error. But, in practice, the links between
a sensor and the fusion center can be unreliable, and hence
some of the observation packets sent from the sensors to the

fusion center might be lost. Let us assume that the observation
packet sent by sensor i at
time t is lost with a known
probability pi; packet loss is assumed to be i.i.d. across time
t and independent across sensors. In this case, at each time,
the fusion center will receive an observation vector of variable
size depending on the lost observation packets. However, since
the fusion center knows the sensors from which observations
are received at the current time step, the fusion center can
simply restrict the observation matrix C at time t to the set of
observed sensors, and update only that part of Kt (via SPSA)
which corresponds to the observed sensors. However, since
various submatrices of the gain matrix are updated at various
time instants, we need to update them using asynchronous
stochastic approximation ( [19, Chapter 7]) in the SPSA step.
This requires us to maintain a counter νS(t) for each sensor
subset S ∈ 2N ; νS (t) is the number of times till t when
observations came only from sensor subset S. Now, SEC can
be adapted to this case in the following way. At time t, let the
observed sensor subset be St. Then, estimation is done by the
following rule:

ˆx(t) = Aˆx(t − 1) + Kt,St(yt − CSt Aˆx(t − 1))

and the Kt update equation is modiﬁed as:

˜Kt+1,St(i, j) =

(cid:20)
Kt,St(i, j) − a(νS (t))

c+(t) − c−(t)
2d(t)∆t(i, j)

(cid:21)l

−l

where Kt,St is the restriction of Kt to the sensor subset St,
and CSt is the restriction of C to subset St. It is easy to adapt
our convergence proofs for Theorem 1 and Theorem 2 to this
modiﬁed algorithm.

IV. ATTACK DETECTION

In this section, we develop an efﬁcient detection algorithm
for the FDI attack on a static sensor subset,
though the
proposed detector can be heuristically used to detect a general
stationary attack. This algorithm is only meant for attack
detection, with the assumption that necessary measures will
be taken if an attack is detected. The detection problem is
mathematically represented as a hypothesis testing problem
on the two hypotheses:

• H0: there is no attack; ei(t) = 0 ∀ i ∈ N , t = 1, 2, · · ·
• H1: there is an attack; ei(t) (cid:54)= 0 for some i ∈ N

it

with observation sequence {y(t)}t≥1. Note that, due to the
complicated dynamics involved in Kalman ﬁltering,
is
difﬁcult to carry out standard hypothesis testing schemes. Also,
due to the unavailability of any known safe sensor, we cannot
compare the innovation sequence against any reliable quantity.
However, if a subset of sensors is under attack, then the process
estimate obtained only from these sensor observations is likely
to have high error, and hence should be signiﬁcantly different
from the estimates made by other sensor observations. We
exploit this fact to develop an attack detector.

Let us denote by ˆxB(t) the process estimate returned by
an optimal Kalman ﬁlter that uses observations made by the
sensor subset B only (see (5)). Let us denote the covariance
matrix of the anomaly eB,Bc(t) := (ˆxB(t) − ˆxBc(t)) by PB,Bc
under steady state, when there is no attack. Clearly, if there

is no attack, then, under steady state, eB,Bc(t) ∼ N (0, PB,Bc )
since the error (ˆxB(t) − x(t)) and (ˆxBc (t) − x(t)) are zero-
mean Gaussian. Hence, one can detect an attack by checking
whether eB,Bc(t) is coming from the distribution N (0, PB,Bc )
for each subset B of size n0. The covariance matrix PB,Bc can
be pre-computed by simulating the process beforehand.

The algorithm requires a positive integer J as an observation

window, and a threshold η > 0 for attack detection.

The algorithm to detect and localize an attack is given

below. We call this algorithm DETECT.
The DETECT algorithm
Input: J, η.
Off-line pre-computation: Simulate {x(τ )}τ ≥0 off-line
using (1). In this simulated process, compute {ˆxB(τ )}τ ≥0
and {ˆxBc(τ )}τ ≥0 via optimal Kalman ﬁltering for each
sensor subset B of size n0, by suitable adaptation of (5).
1
Compute PB,Bc := limT →∞
T

τ =1 eB,Bc(τ )(eB,Bc (τ ))(cid:48).

(cid:80)T

Attack detection in the physical process:
For t = 1, 2, · · ·

1) Use the optimal Kalman ﬁlter (5) to compute ˆx(t).
2) Compute {ˆxB(t)}t≥0 and {ˆxBc (t)}t≥0 via optimal
Kalman ﬁltering for each sensor subset B of size n0,
by suitable adaptation of (5). Compute eB,Bc(t) =
(ˆxB(t) − ˆxBc(t)) for each sensor subset B of size n0.

3) Declare that an attack has happened if:

max
{B∈2N :|B|=n0}

t
(cid:88)

(eB,Bc(τ ))(cid:48)P−1

B,Bc eB,Bc(τ ) > η

τ =t−J+1

4) If an attack is declared, identify the following maximiz-

ing subset as the attacked sensor subset:

arg

max
B∈2N :|B|=n0

t
(cid:88)

(eB,Bc (τ ))(cid:48)P−1

B,BceB,Bc(τ )

τ =t−J+1

end

The detection step is similar to the standard χ2 test used
to check whether a sequence of random vectors are coming
from a desired Gaussian distribution, except that this test is
conducted on all possible subsets of size n0, and hence the
max operation is needed. The false alarm probability can be
controlled via selection of the threshold η.

Now we provide a learning scheme to ﬁnd the optimal η for
a given target on the false alarm probability. The false alarm
probability PF under DETECT is deﬁned as:

(cid:18)

P

PF = lim
t→∞

max
B∈2N :|B|=n0

t
(cid:88)

τ =t−J

(eB,Bc (τ ))(cid:48)P−1

B,Bc eB,Bc (τ ) > η

(cid:19)

(cid:12)
(cid:12)
H0
(cid:12)
(cid:12)

In order to satisfy the constraint PF ≤ α with equality,
we need to choose an optimal threshold η∗
α in DETECT. The
optimal η∗
α can be computed by using the following LEARN
algorithm (a stochastic approximation step) in the off-line pre-
computation phase of DETECT.

The LEARN algorithm requires a positive sequence
{a(τ )}τ ≥0 such that (cid:80)∞
τ =0 a2(τ ) < ∞.
LEARN also requires PB,Bc for all subset B of size n0 as
input. The algorithm simulates the x(τ ) process off-line, and
maintains a detector as in DETECT with an initial threshold

τ =0 a(τ ) = ∞ and (cid:80)∞

η(0). Let us denote the number of false alarm triggers made
by this detector up to time (τ − 1) in the simulated process
by Nτ −1.
The LEARN algorithm
Input: J, {a(τ )}τ ≥0, PB,Bc for all subsets B of size n0.
Initialization: η(0), N0 = 0
For τ = 0, 1, 2, · · · in the simulated process:

1) Check if maxB∈2N :|B|=n0

η(τ ).

(cid:80)τ

n=τ −J+1(eB,Bc(n))(cid:48)P−1

B,BceB,Bc(n) >

2) If this condition is satisﬁed, update Nτ = Nτ −1 + 1,

3) Update the threshold η(τ + 1) = [η(τ ) + a(τ )(I(Nτ >

else Nτ = Nτ −1.

Nτ −1) − α)]l
0.

end

The η(τ ) update scheme is a stochastic approximation
algorithm (see [19]). The goal of the η(τ ) update scheme is
to meet the false alarm probability constraint with equality.
If a false alarm is triggered at time τ in the simulation, η(τ )
is increased; else, η(τ ) is decreased. By the theory of [19],
it is straightforward to show that limτ →∞ η(τ ) = η∗
α almost
surely, and limτ →∞ P(nτ +1 > nτ ) = α. l is a large positive
number such that η∗
α ∈ (0, l). The projection operation is used
to ensure boundedness of the η(τ ) iterates.

V. NUMERICAL RESULTS

In this section, we numerically demonstrate the efﬁcacy of
SEC-L and DETECT. For attack detection, we compare the
performance of DETECT with the traditional χ2 detector, and
also with the detector of [7]. The algorithm of [7] assumes
the availability of a set of safe sensors (SAFE). In SAFE,
at each time t, observations are collected from all sensors,
but the safe sensor observations are used by the Kalman ﬁlter
to generate an initial estimate. Then, the observations from
potentially unsafe sensors are passed through a χ2 detector,
and those observations are used in a Kalman ﬁlter to obtain
ˆx(t) if and only if the χ2 detector is not triggered.

For secure estimation, we also compare the performance
of SEC-L with a blind Kalman ﬁlter oblivious to cyber-
attack (KALMAN), and a Kalman ﬁlter which perfectly knows
(genie-aided) the malicious sensors and ignores their observa-
tions (we call this estimator GENIE). Note that, we do not
investigate the performance for the original SEC algorithm in
order to avoid the huge computational burden that grows with
time, but we recall that SEC-L is motivated by SEC.

In each case, we consider an independent realization of a
system with the following parameters. The state transition ma-
trix A is taken as a randomly generated q ×q stochastic matrix
multiplied by 0.5. State noise covariance matrix Q ∈ Rq×q is
chosen to be a positive semideﬁnite (PSD) matrix such that
Q 1
2 = 0.1Z where Zi,j ∼ u[−1, 1]. The matrix R is also
chosen similarly. Observation matrix C ∈ RkN ×q is chosen
randomly, with Ci,j ∼ u[0, 1]; the observation made by each
sensor is a k-dimensional column vector. We also assume that
at most n0 sensors can be attacked at a time. The attacker
inverts the sign of the innovation vectors coming from the
malicious sensors.

We consider two situations: (i) the attacker knows the
estimate made by the remote estimator, and (ii) the attacker

Figure 2.
k = 2, q = 2, λ = 2, a(t) = 1

Performance of SEC-L under static attack. N = 5, n0 = 2,
2t , d(t) = 0.1
t0.1 .

Figure 3.
n0 = 2, k = 2, q = 2, λ = 2, a(t) = 1

Performance of SEC-L under switching location attack. N = 5,

2t , d(t) = 0.1

t0.1 , T = 20.

can only run a Kalman ﬁlter in order to guess the estimate. Let
us denote a matrix Ca(t) which is same as C, except that the
entries corresponding to the benign (not malicious) sensors at
time t are set to 0. Similarly, let ya(t) be same as y(t), except
that the entries corresponding to the benign sensors are 0.

When the attacker knows the estimate made by the remote
estimator, the received observation at time t at the remote
estimator becomes ˜y(t) = y(t) + 2Ca(t)Aˆx(t − 1) − 2ya(t);
this is equivalent to inverting the sign of the innovation vector.
We call
the corresponding variants of SEC-L, KALMAN
and GENIE by SEC-L-K, KALMAN-K and GENIE-K (with
knowledge of the estimate).

However, if ˆx(t − 1) is not known to the attacker, then the
attacker can run a Kalman ﬁlter on the received observations at
the estimator, in order to maintain a proxy ˆxkalman(t − 1) for
ˆx(t − 1). In this case, the the received observation at time t at
the remote estimator is ˜y(t) = y(t) + 2Ca(t)Aˆxkalman(t −
1) − 2ya(t). We call the corresponding variants of SEC-L,
KALMAN and GENIE by SEC-L-NK, KALMAN-NK and
GENIE-NK (no knowledge of estimate).

Figure 4. Convergence of λ(t) in SEC-L-NK under static attack for ξ = 3.

A. Secure estimation

Here we compare the time-averages MSE of SEC-L for a

ﬁxed λ = 2 with GENIE, KALMAN and SAFE.

1) Secure estimation under static attack: We consider a
static attack, i.e., the attacked sensor subset A(t) does not vary
with time. We ran the simulation for a number of independent
problem instances, and computed time-averaged MSE of the
various algorithms along a single sample path. We observe
from Figure 2, that the time-average MSE of SEC-L converges
within 3.5 dB of that of GENIE, and is smaller than SAFE
by a margin of 2 to 3 dB, for both K and NK situations.
However, we have observed in some other simulation instances
that SEC-L can yield a larger MSE than SAFE, but without
using the knowledge of any safe sensor. SEC-L has an MSE
much smaller that KALMAN, hence we do not show the
performance of KALMAN.

We would like to mention here that, GENIE-K and GENIE-
NK have the same performance since both ignore the obser-
vations from attacked sensors. Also, we can not order the
MSE of SEC-L-K and SEC-L-NK, or SAFE-K and SAFE-NK,
since SEC-L and SAFE are not provably optimal algorithms
to minimize MSE under such attacks.

2) Secure estimation under switching location attack:
We next consider an attack model where, at time instances
t = 1, T + 1, 2T + 1, · · · (with T = 20), a random sensor
subset of size n0 is chosen in an i.i.d. fashion, and this subset
is attacked over the next T slots by inverting its innovation
the probability of attacking a
sequence. We assume that
sensor i is proportional to 1
i2 . Since each sensor is susceptible
to an FDI attack, SAFE is not applicable here due to the lack
of availability of any safe sensor; but still we compare SAFE-
K and SAFE-NK with SEC-L-K, SEC-L-NK (for λ = 2),
KALMAN-K, KALMAN-NK and GENIE. We observe from
Figure 3 that (i) SEC-L-K has 3 dB lower MSE than SAFE-
K, and SEC-L-NK has very similar performance to SAFE-NK,
(ii) KALMAN offers the worse error performance among all
algorithms, and (iii) SEC-L yields 4 to 7 dB worse MSE than
GENIE. Since GENIE always knows A(t) perfectly, GENIE
enjoys signiﬁcant advangate over SEC-L.

As T increases, the attack will become more static in nature,
and hence SEC-L will be able to adjust Kt more efﬁciently.
3) SEC-L for the constrained problem: Here we consider
static attack as before, under the NK situation, but for a
different problem instance. We compute the MSE ¯Pkalman
under a Kalman ﬁlter (5) when there is no attack, set the

ξ
MSE

2
0.0061

3
0.0091

4
0.0076

5
0.0059

7
0.0064

10
0.0066

20
0.0076

Table I
VARIATION OF M SE(ξ) AND λ∗(ξ) AGAINST ξ UNDER STATIC ATTACK.

constraint ¯P = ξ ¯Pkalman (for some factor ξ > 1) in (7), and
then simulate the performance of SEC-L (with the chosen ¯P ).
Figure 4 illustrates the convergence of λ(t) under ξ = 3.
The effect of ξ on the time-average MSE (averaged over
500000 iterations) of SEC-L-NK (with the two-timescale
iteration) is depicted in Table I. As ξ increases from 2, we
ﬁnd that the MSE ﬁrst increases, then decreases and ﬁnally
increases again. Hence, picking the optimal value of ξ is
crucial in order to minimize MSE under SEC in presence of
FDI attack. There is no ﬁxed guideline on how to pick the
value of ξ (and consequently ¯P ); this has to be done based on
prior knowledge of the system as well as possible attackers.
One possible way to choose ξ is to consider the worst possible
linear attack, simulate (off-line) the MSE performance of SEC
for various values of ξ in presence of such attacks, ﬁnd the
value of ξ that minimizes the MSE, and then use this value
of ξ to SEC used in the real system.

B. Detection under static attack

Here we consider that sensors {1, 2, · · · , n0} are under
attack (which is not known to the fusion center), and com-
pare the receiver operating characteristic (ROC) curves for
DETECT, SAFE and χ2 detectors. We run each algorithm
for a large number of time slots; the fraction of time slots
when the detector is triggered in presence of attack is deﬁned
as the detection probability Pd, and the fraction of time slots
when the detector is triggered in absence of attack is deﬁned
as the false alarm probability PF . In this particular numerical
example, we have ﬁxed J = 10 as the observation window
for all detectors. For a range of constraints on the false alarm
probability, in each algorithm, we optimize η via the LEARN
algorithm to meet the false alarm constraint with equality,
and use these η values to estimate the respective detection
probabilities via simulation. It is obvious that the false alarm
probability and detection probability both decrease with η.

In Figure 5, we compare the ROC plots for K and NK cases
deﬁned in Section V-A. We observe that DETECT exhibits
a much better detection performance than SAFE and the χ2
detector (up to 75% improvement in Pd over SAFE). Also,
χ2 detector outperforms SAFE since SAFE is not an optimal
detection algorithm even with the knowledge of safe sensors.
Note that, DETECT requires us to pre-compute PB,Bc for
(cid:1) possible subset pairs; hence, we gain the detection
(cid:0) N
n0
performance improve w.r.t. SAFE (which uses more side
information) at the expense of more computation.

VI. CONCLUSIONS

In this paper, we developed a secure estimation algorithm
to reduce MSE under FDI attack on a static or time-varying
unknown sensor subset, and proved the convergence of the

Performance comparison of DETECT against χ2 and SAFE
Figure 5.
detectors, under static attack. N = 5, n0 = 2, k = 2, q = 2. Two safe
sensors are known to the SAFE algorithm. η is optimized in all algorithms
to meet the false alarm constraint with equality. Top plot: attacker does not
know the estimate. Bottom plot: at each time, the attacker knows the previous
estimate made at the fusion center.

algorithm. Next, we proposed a detection algorithm for FDI at-
tack on an unknown sensor subset, and also developed another
algorithm to optimize the detector. When compared against
competing algorithms, our proposed algorithms demonstrate
comparable or even 3 dB lower MSE and 75% higher attack
detection probability subject to a given false alarm constraint,
while using less side information. In future, we would endeav-
our to expand our work to unknown system dynamics.

APPENDIX A
PROOF OF THEOREM 1
We consider b(t) = 0 for all t = 0, 1, 2, · · · , i.e., a constant
value of λ at each time. The proof steps are described in next
few subsections. First, we identify the timescales at which
various quantities are updated. Next, we prove convergence in
the faster timescale and in the slower timescale iterate Kt.

A. Timescale identiﬁcation

Let us recall the evolution of Pt in (11), the evolution
of maxB∈2N :|B|=n0 ||ˆxB(t) − ˆxBc(t)||2, and the Kt update
scheme in (10). These evolutions constitute a multi-timescale
iteration (see [19, Chapter 6]).

Note that, the Pt iteration uses a matrix (I − KtC) instead
of any diminishing step size sequence, and the spectral radius
of (I − KtC) is less than or equal to (1 − δ) for all t ≥ 0.
Hence, the Pt iteration runs at a faster timescale, and the Kt

iteration (which is a stochastic gradient descent algorithm)
runs at a slower timescale since the Kt
iteration uses a
diminishing step size sequance {a(t)}t≥0. As a result, the Pt
iteration will view the Kt iterates as quasi-static, whereas the
Kt iteration will view the Pt iteration as almost equilibriated.
ˆxB(t) and ˆxBc(t) run at a faster timescale compared to the
Kt iteration. Hence, maxB∈2N :|B|=n0 ||ˆxB(t) − ˆxBc(t)||2 also
runs at a faster timescale. On the other hand, the Kt iteration
(10) runs at the slowest timescale.

B. Convergence in the faster timescale iterates

Let us assume that Kt = K for all t, and that |λmax(I −
KC)| ≤ (1 − δ) < 1. In this case, the Pt iteration (starting
from P0) becomes:

Pt = (I − KC)(APt−1A(cid:48) + Q)(I − KC) + KRK(cid:48)

These Pt iterates are bounded, and converge to a positive
semideﬁnite matrix P (K) which is basically the unique ﬁxed
point of the above iteration (by Banach’s ﬁxed point theorem
[22], since |λmax(I − KC)| ≤ 1 − δ).

Now, it is easy to show that {Tr(Pt)}t≥0 is a sequence of
continuous, convex functions of K, and K lies in a compact
set. Hence, the limiting function P (K) is continuous in K.

Under a constant gain matrix K and a stationary attack, the
Markov chains {ˆxB(t)}t≥0 and {ˆxBc(t)}t≥0 converge to their
respective steady state distributions exponentially fast in time
t. Hence, E[maxB∈2N :|B|=n0 ||ˆxB(t) − ˆxBc(t)||2] converges
exponentially fast to g(K) which is continuous in K.

Thus, the expected single stage cost C(K) = g(K) +

λP (K) is continuous in K.

Hence, by an argument similar to the proof of [19, Chap-
ter 6, Lemma 1], we can write the following relations for SEC:

lim
t→∞
lim
t→∞

||Pt − P (Kt)|| = 0

||E[

max
B∈2N :|B|=n0

||ˆxB(t) − ˆxBc (t)||2 − g(Kt)]|| = 0 (12)

C. Convergence of the Kt iterates

The Kt(i, j) update (10) can be rewritten as:

˜Kt+1(i, j)
(cid:20)

Kt(i, j) − a(t)

c+(t) − c−(t)
2d(t)∆t(i, j)

(cid:21)l

−l

(cid:20)

Kt(i, j) − a(t) ×

Ec+(t) − Ec−(t) + M +(t) − M −(t)
2d(t)∆t(i, j)

(cid:21)l

−l

=

=

Note that, c+(t) = maxB∈2N :|B|=n0 ||ˆx+

where M +(t) := c+(t) − E[c+(t)] and M −(t) := c−(t) −
E[c−(t)] are two zero mean Martingale difference sequences.
Bc(t)||2 +
t ) −

t ). We seek to show that E[c+(t) − c−(t)] = C(K+
λTr(P+
C(K−
t ) + o(d(t)).
Lemma 2. E[Tr(P+
o(d(t))

t )] = E[Tr(P (K+

t ) − P (K−

B (t) − ˆx+

t − P−

t ))] +

Proof: Note that,

= (I − K+
P+
t
t ) = (I − K+
P (K+

t C)(APt−1A(cid:48) + Q)(I − K+
t C)(AP (K+

t )A(cid:48) + Q)(I − K+

t C)(cid:48) + K+

t C)(cid:48) + K+

t R(K+

t )(cid:48)
t R(K+

t )(cid:48)

P+

t ) = (I − K+

By subtracting these two equations, we obtain:
t − P (K+
Similarly, we can write:
t − P (K−

t C)A(Pt−1 − P (K−

t C)A(Pt−1 − P (K+

t ) = (I − K−

P−

t ))A(cid:48)(I − K+

t C)(cid:48)

t ))A(cid:48)(I − K−

t C)(cid:48)

(13)

(14)

t ) = P (Kt + d(t)∆t) and P (K−

Subtracting (13) and (14), using the Taylor series expansions
of P (K+
t ) = P (Kt −
d(t)∆t), noting that all iterates are bounded, and simplifying
the expressions, we obtain:

P+

t − P−

t − P (K+

t ) + P (K−
t )

= o(d(t)) + O((Pt−1 − P (Kt))d(t)) + O(d(t))∆t

Note that, Pt−1 − P (Kt) = Pt−1 − P (Kt−1 + O(a(t −
1))). Now, since P (·) is a continuous function and since
limt→0 ||Pt−1 − P (Kt−1)|| = 0 (as shown in Appendix A,
Section A-B), and since limt→0 a(t − 1) = 0, we can
claim that limt→0 ||Pt−1 − P (Kt)|| = 0. Hence, O((Pt−1 −
P (Kt))d(t)) = o(d(t)). Hence, we can write;
t ) + P (K−
P+

t ) = o(d(t)) + O(d(t))∆t

t − P (K+

t − P−

The O(d(t)) term depends on Kt, which is independent of
∆t. Hence, by taking expectation and trace on both sides,
and noting that E(∆t) = 0, the lemma is proved.

Lemma 3. Under SEC with b(t) = 0 for all t = 0, 1, 2, · · · ,
we have:

E[

max
B∈2N :|B|=n0

E[

max
B∈2N :|B|=n0

||ˆx+

B (t) − ˆx+

Bc (t)||2] = g(K+

t ) + o(d(t))

||ˆx−

B (t) − ˆx−

Bc (t)||2] = g(K−

t ) + o(d(t))

Proof: Let us consider a speciﬁc time instant t = T , and
the corresponding gain matrix K+
T .

Let us assume that a constant gain matrix K+

T,B is used for

state estimation ˆx+

B (t) for all time instants t = 0, 1, 2, · · · .

B (t) = (I − K+
ˆx+

T,BC)Aˆx+

B (t − 1) + K+

T,By(t)

Clearly, {ˆx+
B (t)}t≥0 is a time-homogeneous Markov process
in this case, which reaches its steady state distribution ex-
ponentially fast. Hence, if a gain matrix K+
T,B is used to
estimate {ˆx+
B (t)}t≥1 for all subsets B of size n0, and if
a gain matrix K+
Bc(t)}t≥1 for
all subsets Bc of size N − n0, and these gain matrices are
derived from the constant gain matrix K+
T , then we can write
E[maxB∈2N :|B|=n0 ||ˆx+
T )+o(d(T )).
This proves the ﬁrst part of the lemma. The proof of the second
part of the lemma follows similarly.

T,Bc is used to estimate {ˆx+

Bc(T )||2] = g(K+

B (T )−ˆx+

c−(t)] = C(K+

From Lemma 2 and Lemma 3, we can claim that E[c+(t) −
t ) + o(d(t)).
Hence, by using the results from Lemma 2, Lemma 3, the

t ) − C(K−

iteration (10) can be rewritten as:

(cid:20)

Kt+1(i, j) =

Kt(i, j) − a(t) ×

C(K+

t ) − C(K−

t ) + M +(t) − M −(t) + o(d(t))

2d(t)∆t(i, j)

(cid:21)

[−l.l]q×m∩K

Hence, by the discussion in [19, Section 2.2], the proof of
[23, Appendix E, Section C] and the results from [20], one

can claim that the effect of o(d(t)) is asymptotically negligible,
and the iterates of (10) almost surely converge to the set Kλ :=
{K : ∇K(C(K)) = 0} ∩ [−l, l]q×m ∩ K. This completes the
proof of the theorem.

APPENDIX B
PROOF OF THEOREM 2

Note that, the λ(t) iteration runs at a slower timescale

compared to the Kt iteration.

We ﬁrst note a few things. For any ﬁxed λ ∈ [0, l] used in
SEC, we have limt→∞ |Tr(Pt)−P (Kt)| = 0, as shown in the
proof of Theorem 1. However, Kt iterates converge to a set
Kλ for a ﬁxed λ. Also, ∇KC(K) = ∇Kg(K) + λ∇KP (K)
is Lipschitz continuous in λ ∈ [0, l], with a uniform Lipschitz
constant for all K ∈ [−l, l]q×m.

Hence, by the discussion of [19, Section 2.2] and [19,
Chapter 6], we can say that, under SEC, D(Kt, Kλ(t)) → 0
almost surely (D(·) is the distance of a point from a set). Also,
the update λ(t+1) = [λ(t)+b(t)(Tr(Pt)− ¯P )]l
0 asymptotically
behaves like λ(t + 1) = [λ(t) + b(t)(P (Kt) − ¯P )]l
0. Hence,
by the discussion of [19, Section 2.2] and [19, Chapter 6], we
can say that the λ(t) update asymptotically evolves accord-
ing to the following stochastic recursive inclusion (see [19,
Chapter 5])

λ(t + 1) ∈ {[λ(t) + b(t)(P (K) − ¯P )]l

0 : K ∈ Kλ(t)}

Now we apply the theory of [19, Chapter 5] to analysis this
stochastic recursive inclusion. Note that, the iteration can as
well be represented as:

λ(t + 1) ∈ {[λ(t) + b(t)x]l

0 : x ∈ Sλ(t)}

where Sλ(t)
is the closure of the convex hull of the set
{P (K) − ¯P : K ∈ Kλ(t)}. Clearly, Sλ is a closed, convex set
for each λ ∈ [0, l]; also, P (K) is bounded since the entries
of all possible gain matrices considered in SEC are bounded.
Hence, Conditions (i) and (ii) of [19, Section 5.1] are satisﬁed.
Now, let us assume that λ(t) → λ∗ and r(t) → r∗, where
r(t) ∈ Sλ(t). Note that, Sλ(t) is the closure of the convex
hull of {P (K) − ¯P : K ∈ [−l, l]q×m, |λmax(I − KC)| ≤
1−δ, ∇KC(K, λ(t)) = 0}. Since ∇KC(K, λ) is a continuous
function of λ, we can easily say that r∗ ∈ Sλ∗ . Hence,
Condition (iii) of [19, Section 5.1] is satisﬁed.

Hence, by [19, Chapter 5, Corollary 4], we can say that
λ(t) in SEC almost surely converges to a closed connected
internally chain transitive invariant set ¯Λ of the following
differential inclusion:

˙λ(τ ) ∈ Sλ(τ ), τ ∈ R+

Since, we have already argued that ||Kt − Kλ(t)|| → 0
almost surely, we can say that (Kt, λt) → {(K, λ) : K ∈
Kλ, λ ∈ ¯Λ}. This concludes the proof.

REFERENCES

[1] Arpan Chattopadhyay and Urbashi Mitra. Attack detection and secure
estimation under false data injection attack in cyber-physical systems. In
Information Sciences and Systems (CISS), 2018 52nd Annual Conference
on, pages 1–6. IEEE, 2018.

[2] Yilin Mo and Bruno Sinopoli. Secure control against replay attacks.
In Communication, Control, and Computing, 2009. Allerton 2009. 47th
Annual Allerton Conference on, pages 911–918. IEEE, 2009.

[3] Yilin Mo, Rohan Chabukswar, and Bruno Sinopoli. Detecting integrity
IEEE Transactions on Control Systems

attacks on scada systems.
Technology, 22(4):1396–1407, 2014.

[4] Yanpeng Guan and Xiaohua Ge. Distributed attack detection and
secure estimation of networked cyber-physical systems against false data
injection attacks and jamming attacks. IEEE Transactions on Signal and
Information Processing over Networks, 2017.

[5] Yuan Chen, Soummya Kar, and José MF Moura. Optimal attack
strategies subject to detection constraints against cyber-physical systems.
IEEE Transactions on Control of Network Systems, 2017.

[6] Ziyang Guo, Dawei Shi, Karl Henrik Johansson, and Ling Shi. Optimal
IEEE Transactions on

linear cyber-attack on remote state estimation.
Control of Network Systems, 4(1):4–13, 2017.

[7] Yuzhe Li, Ling Shi, and Tongwen Chen. Detection against linear decep-
tion attacks on multi-sensor remote state estimation. IEEE Transactions
on Control of Network Systems, 2017.

[8] Shaunak Mishra, Yasser Shoukry, Nikhil Karamchandani, Suhas N
Diggavi, and Paulo Tabuada. Secure state estimation against sensor
IEEE Transactions on Control of
attacks in the presence of noise.
Network Systems, 4(1):49–59, 2017.

[9] Yuan Chen, Soummya Kar, and José MF Moura. Cyber physical
In Decision
attacks with control objectives and detection constraints.
and Control (CDC), 2016 IEEE 55th Conference on, pages 1125–1130.
IEEE, 2016.

[10] Fabio Pasqualetti, Florian Dörﬂer, and Francesco Bullo. Attack detection
IEEE Transactions on

and identiﬁcation in cyber-physical systems.
Automatic Control, 58(11):2715–2729, 2013.

[11] Fei Miao, Quanyan Zhu, Miroslav Pajic, and George J Pappas. Cod-
ing schemes for securing cyber-physical systems against stealthy data
IEEE Transactions on Control of Network Systems,
injection attacks.
4(1):106–117, 2017.

[12] Miroslav Pajic, Insup Lee, and George J Pappas. Attack-resilient state
estimation for noisy dynamical systems. IEEE Transactions on Control
of Network Systems, 4(1):82–92, 2017.

[13] Chensheng Liu, Jing Wu, Chengnian Long, and Yebin Wang. Dynamic
state recovery for cyber-physical systems under switching location
IEEE Transactions on Control of Network Systems, 4(1):14–
attacks.
22, 2017.

[14] Kebina Manandhar, Xiaojun Cao, Fei Hu, and Yao Liu. Detection of
faults and attacks including false data injection attack in smart grid
using kalman ﬁlter. IEEE transactions on control of network systems,
1(4):370–379, 2014.

[15] Gaoqi Liang, Junhua Zhao, Fengji Luo, Steven Weller, and Zhao Yang
Dong. A review of false data injection attacks against modern power
systems. IEEE Transactions on Smart Grid, 2017.

[16] Qie Hu, Dariush Fooladivanda, Young Hwan Chang, and Claire J
Tomlin. Secure state estimation and control for cyber security of the
IEEE Transactions on Control of Network
nonlinear power systems.
Systems, 2017.

[17] Brian DO Anderson and John B Moore. Optimal ﬁltering. Englewood

Cliffs, 21:22–95, 1979.

[18] A. Chattopadhyay and U. Mitra. Optimal sensing and data esti-
Technical Report, available in
mation in a large sensor network.
https://arxiv.org/abs/1707.08074, a shorter version has been accepted
in IEEE Globecom 2017, 2017.

[19] Vivek S. Borkar.

Stochastic approximation: a dynamical systems

viewpoint. Cambridge University Press, 2008.

[20] J.C. Spall. Multivariate stochastic approximation using a simultaneous
perturbation gradient approximation. IEEE Transactions on Automatic
Control, 37(3):332–341, 1992.

[21] Georgi V Smirnov. Introduction to the theory of differential inclusions,

volume 41. American Mathematical Soc., 2002.

[22] Walter Rudin. Principles of Mathematical Analysis, Third Edition.

McGraw-Hill International Editions, 1976.

[23] A. Chattopadhyay, M. Coupechoux, and A. Kumar. Sequential decision
algorithms for measurement-based impromptu deployment of a wireless
IEEE/ACM Transactions on Networking,
relay network along a line.
longer version available in http://arxiv.org/abs/1502.06878, 24(5):2954–
2968, 2016.

