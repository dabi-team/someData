VizADS-B: Analyzing Sequences of ADS-B Images Using
Explainable Convolutional LSTM Encoder-Decoder to Detect
Cyber Attacks

Sefi Akerman, Edan Habler, Asaf Shabtai
Department of Software and Information Systems Engineering,
Ben-Gurion University of the Negev

9
1
0
2

n
u
J

9
1

]

R
C
.
s
c
[

1
v
1
2
9
7
0
.
6
0
9
1
:
v
i
X
r
a

ABSTRACT
The purpose of the automatic dependent surveillance broadcast
(ADS-B) technology is to serve as a replacement for the current
radar-based, air traffic control (ATC) systems. Despite the consider-
able time and resources devoted to designing and developing the
system, the ADS-B is well known for its lack of security mecha-
nisms. Attempts to address these security vulnerabilities have been
made in previous studies by modifying the protocol’s current ar-
chitecture (e.g., adding encryption or authentication mechanisms)
or by using additional hardware components (e.g., sensors for veri-
fying the location of the aircraft by analyzing the physical signal).
These solutions, however, are considered impractical because of 1)
the complex regulatory process involving avionic systems, 2) the
high costs of using hardware components, and 3) the fact that the
ADS-B system itself is already deployed in most aircraft and ground
stations around the world. In this paper, we propose VizADS-B , an
alternative software-based security solution for detecting anoma-
lous ADS-B messages, which does not require any alteration of the
current ADS-B architecture or the addition of sensors. According
to the proposed method, the information obtained from all aircraft
within a specific geographical area is aggregated and represented
as a stream of images. Then, a convolutional LSTM (ConvLSTM)
encoder-decoder model is used for analyzing and detecting anom-
alies in the sequences of images. In addition, we propose an explain-
ability technique, designed specifically for convolutional LSTM
encoder-decoder models, which is used for providing operative
information to the pilot as a visual indicator of a detected anomaly,
thus allowing the pilot to make relevant decisions. We evaluated our
proposed method on five datasets by injecting and subsequently
identifying five different attacks. Our experiments demonstrate
that most of the attacks can be detected based on spatio-temporal
anomaly detection approach.

KEYWORDS
ADS-B, Security, Anomaly detection, Convolutional LSTM, Autoen-
coder, Explainability

1 INTRODUCTION
Currently, air traffic management system consists of two main sub-
systems, the primary surveillance radar (PSR) and the secondary
surveillance radar (SSR). Both systems enable measuring the air-
craft’s range and bearing from radar stations. In recent years, the
number of commercial flights has significantly increased1 and as
a result, the shortcomings of traditional air traffic management

1https://www.iata.org/publications/Documents/iata-annual-review-2018.pdf

systems have become more apparent and concerning, especially
over oceans or mountainous areas where it is difficult to employ
radar systems, or in very crowded areas such as airports. In this
context, the aviation community is actively taking steps to move
from uncooperative and independent air traffic surveillance (e.g.,
PSR and SSR) to cooperative dependent surveillance systems (CDS).
The purpose of this shift is to substantially reduce air traffic control
(ATC) costs and, at the same, time optimize the navigation process,
thus improving flight safety.

Automatic dependent surveillance-broadcast (ADS-B) [3] is an
implementation of a CDS system certified by the Federal Aviation
Administration (FAA) and the International Civil Aviation Orga-
nization (ICAO), which has already been deployed in aircraft and
ground stations across Europe, Canada, and Australia. The FAA has
decided to use the ADS-B system for all aircraft movement in the
US by 2020. ADS-B uses GPS navigation to provide more accurate
information regarding the aircraft state. This aircraft information
is available to ground stations and ATCs, as well as the aircraft
themselves, which can use the information to derive and share
their position and flight direction using the ADS-B transponder
(transmitter-responder).

Despite the great importance of the system in the near future, it
is evident that most of the effort invested in planning and develop-
ing the ADS-B system was placed on accuracy and cost savings, at
the expense of security which was not considered. Pushing security
to the sidelines has resulted in fundamental flaws in the current
system. In particular: 1) messages are not broadcast with an au-
thentication code or digital signature and therefore can be replayed,
manipulated, or forged, 2) messages are broadcast in simple, pub-
licly known formats, leaving them exposed to eavesdropping, and
3) authorized aircraft or ATC stations don’t have to authenticate
before transmitting; thus, there is no way to distinguish between
authorized and unauthorized entities. As a case in point, in re-
cent years, researchers in academia and industry have pointed out
weaknesses in the system’s design and implementation, and demon-
strated how the system can be tampered with using off the shelf
hardware and software [4, 22].

In order to address the risks that have been identified, recent re-
search has suggested the use of encryption [6] to prevent eavesdrop-
ping; aircraft authentication via challenge-response [12]; message
authentication [4, 5] in order to provide secured message broad-
casting; and validation of the data transmitted from the planes by
adding additional sensors in space. However, implementing these
solutions at this stage is impractical because the ADS-B system
is already deployed in most aircraft. In addition, due to the strict

 
 
 
 
 
 
Sefi Akerman, Edan Habler, Asaf Shabtai

Sefi Akerman, Edan Habler, Asaf Shabtai

regulation process regarding the implementation of avionic sys-
tems, applying such modifications to the current protocol requires
a great deal of resources and a significant amount of time to imple-
ment and deploy (for that matter, the ADS-B protocol design and
development started in the early 1990s).

In order to avoid the challenges and high costs associated with
hardware and software changes, Habler et al. [11] proposed a ma-
chine learning based approach for detecting manipulated ADS-B
messages sent by an attacker or compromised aircraft. The au-
thors utilized an LSTM encoder-decoder algorithm for modeling
flight routes by analyzing sequences of legitimate ADS-B messages,
applied these models to evaluate ADS-B messages received and
identify deviations from the legitimate flight path. This approach,
however, analyzes the data of each aircraft individually, and it does
not consider the spatial-temporal correlation between aircraft shar-
ing a common airspace.

In this research, we follow the approach of Habler et al. [11] and
present VizADS-B , an extended software-based security solution
for detecting anomalous ADS-B messages that does not require
alteration of the current ADS-B system. VizADS-B represents mul-
tiple ADS-B messages (received from different aircraft) within a
geographic area as a stream of visual images, and applies a con-
volutional LSTM (ConvLSTM) encoder-decoder model to detect
anomalous images, thus providing an indication of anomalous ADS-
B messages. By using this representation approach, we can process
information obtained from multiple aircraft, without the need for the
complex process associated with feature engineering and extraction
which is a challenging task, especially in dynamic real-time use
cases. In addition, VizADS-B applies an explainability technique,
designed specifically for convolutional LSTM encoder-decoder mod-
els. The explainability function is used for providing operative and
supporting information to the pilot in the form of a visual indi-
cator of the detected anomalies. These visual indicators make it
easier to the pilot in making correct decisions as well as in quickly
identifying false alarms.

As mentioned by Habler et al. [11], since such an anomaly de-
tection approach only requires receiving feeds of ADS-B messages
(provided by the ADS-B system) and visualizing classification out-
puts and anomalies, it can be implemented as a dedicated applica-
tion installed on the electronic flight bag (EFB) server and does not
require any change to the ADS-B system itself.

We evaluated VizADS-B using five datasets, each of which con-
tains flights from a 10,000 square kilometer area, centered around
different airports, which were recorded for a period of seven days.
Our experiment included the injection of five different types of
anomalies and we showed that our approach was able to success-
fully and clearly identify most of the attacks.

To summarize, our contributions in this study are as follows.

• we show that the data of multiple aircraft sharing and flying
within the same airspace can be represented by a sequence
of images and thus can be modeled and analyzed by convo-
lutional recurrent neural networks;

• we show that the ConvLSTM encoder-decoder model can
be used to amplify the anomaly scores of malicious ADS-B
messages, allowing the identification of anomalous images;

• our approach does not require changes to the architecture

of the ADS-B protocol or additional sensors;

• we introduce a new explainability technique, which, to the
best of our knowledge, is the first to explain the output of a
convolutional encoder-decoder model;

• we propose using an explainability technique in the detection
of attacks in operational, real-time, cyber-physical systems,
as well as to effectively handle false alarms;

• our proposed approach is adaptive and flexible, and therefore
it can be applied to additional geographical areas without
the need for specific modifications.

2 THE ADS-B SYSTEM
The FAA began a process of updating and modernizing the na-
tional airspace systems (NAS), known as the next generation air
transportation system (NextGen). NextGen’s goals are to increase
flight traffic safety, capacity and flexibility, as well as to reduce
dependency on outdated radar infrastructure. The ADS-B system
is a key component of NextGen. ADS-B is a satellite-based, ‘radar-
like’ system designed to continuously derive the aircraft position
from the global navigation satellite (GPS) system. ADS-B provides
the aircraft velocity, identity, and position with greater accuracy,
providing a clearer picture of the air traffic.

ADS-B includes two separate systems: ADS-B In and ADS-B
Out. The ADS-B In system allows an aircraft to receive and display
messages transmitted by another aircraft within the receiving range.
The ADS-B Out system allows an aircraft to continuously generate
and broadcast messages over unencrypted VHF or satellite-based
data link networks. The transmitted messages generated by the
ADS-B Out system are then processed by nearby aircraft and ATC
stations located on the ground. This process is illustrated in Figure 1.

Figure 1: Illustration of the ADS-B protocol components. Us-
ing the ADS-B IN component, the aircraft get their position
from satellite system. The ADS-B OUT component is used to
broadcast related information. Nearby aircraft and ground
stations receive these messages with the ADS-B IN compo-
nent. The information that achieved by the ground stations
is then transmitted to the ATC.

VizADS-B: Analyzing Sequences of ADS-B Images Using Explainable Convolutional LSTM Encoder-Decoder

Sefi Akerman, Edan Habler, Asaf Shabtai

3 ADVERSARY MODEL
The ADS-B protocol was originally intended to increase message
availability among aircraft and ground stations. As a result, the
protocol does not include security mechanisms and the messages
are broadcast unencrypted; thus, anyone with a compatible receiver
can obtain the data contained in the messages. While in the late
1980’s it may have been reasonable to assume that access to such
hardware is not trivial, it is currently not the case when these
components can easly be purchased at a low price. This distinction
is essential for understanding the plausibility of disrupting the
ADS-B system. In the same manner as obtaining ADS-B message
passively, commercial off-the-shelf (COTS) products can be used
to inject ADS-B messages into the air space in order to perform a
wide range of attacks such as spoofing and flooding.

It is reasonable to assume that an attacker will have the means
and ability to both eavesdrop and obtain the range and inject false
data, with the use of a software-defined radio (SDR) transceiver.
Moreover, it is also plausible to assume that in order to maintain
secrecy, an attacker will follow the constraints that apply to all of
the aircraft. In order to identify attackers who use COTS products,
previous work has suggested the use of different techniques in
order to compare measurements between several sensors located
in different ground stations, e.g., the use of the multilateration
(MLAT) technique, which is based on measurement of the time
of arrival (TOAs) of energy waves between a varying number of
points. However, there are ways to make it difficult for these signal
analysis detection mechanisms, such as using a UAVs or drones,
in addition, an attacker may be on the aircraft itself (as described
in [18]).

The potential hostile participants and threats to the ADS-B sys-
tem are illustrated in Figure 2). The first and most obvious par-
ticipant is an attacker located on the ground who uses an ADS-B
receiver and transmitter to disrupt or affect the air space. An at-
tacker with more resources and capabilities may even use drones
and UAVs (as illustrated in labels two and three respectively), which
may improve the operating state of the attacker, while challenging
security mechanisms that take into account the TOAs of energy
waves.

Beyond the external participant affecting the air space, one must
consider an attacker that is, in one form or another, on board the
aircraft itself (as illustrated in labels four and five). Such a passenger
is able to influence the aircraft’s receiver by transmitting false
messages; in addition, the passenger can mislead nearby aircraft by
transmitting false messages, and these messages may also conflict
with legitimate ADS-B messages transmitted by the aircraft on
which the attacker is located. These actions and others can be
performed by a hostile takeover of the aircraft’s systems by means
of a cyber attack aimed at affecting the aircraft’s receivers and
transmitters or the pilots flight instruments.

4 RELATED WORK
4.1 Security of the ADS-B System
Previous research has investigated the security challenges associ-
ated with the ADS-B system and proposed various methods and
solutions for protecting the system. The main ideas in previous
studies (summarized in Table 1) include encryption, physical layer

Figure 2: Visual illustration of potential threats.

analysis, and a multilateration technique. Recently, a new machine
learning approach of using machine learning for detecting anoma-
lous ADS-B messages was suggested.

4.1.1 Encryption. Cryptographic measures have been considered
for securing communication in wireless networks. Strohmeier et
al. [31] discussed the question of whether the current implementa-
tion of ADS-B can be encrypted, and Finke et al. [6] introduced a
number of encryption schemes. However, the worldwide deploy-
ment of the ADS-B system makes encryption key management a
challenge. Costin et al. [4] and Feng et al. [5] suggested PKI (pub-
lic key infrastructure) solutions based on transmitting signatures
and elliptic-curve cryptography, respectively. Another solution
discussed in the literature is the use of the retroactive key publica-
tion technique, such as the ÂţTESLA protocol [31]. This technique,
however, requires modifications to the current mechanism of the
protocol by adding a new message type for key publishing.

4.1.2 Physical Layer Analysis and Doppler Effect. Spoofed message
injection attacks are one of the most dangerous types of attack.
Strohmeier et al. [29] proposed an intrusion detection system, based
on physical layer information and a single receiver, in order to
detect such attacks on critical air traffic infrastructures without the
need for additional cooperation of the aircraft. Another solution
suggested by Ghose et al. [9] is to verify the velocity and position of
the aircraft by exploiting the short coherence time of the wireless
channel and the Doppler spread phenomenon. A method presented
by Schafer [24] is based on verification of the aircraft motion using
the Doppler effect. Both options rely upon the participation of
ground stations or other entities.

4.1.3 Multilateration and Group Verification. In the last decade,
signal analysis has been successfully employed in the fields of wire-
less communication. One popular form of cooperative independent
surveillance that has been used in military and civil applications
is multilateration (MLAT). MLAT is a navigation technique based

Sefi Akerman, Edan Habler, Asaf Shabtai

Sefi Akerman, Edan Habler, Asaf Shabtai

Table 1: Summary of related work.

Approach (references)

Encryption [4–6, 31]

Doppler effect and
PHY-layer analysis [4, 9]

Multilateration & group
verification [6, 27, 30]

Machine learning based
anomaly
detection [11, 33, 35, 40]

Protocol modification required
Requires an encryption mechanism and a
new type of message for key exchange.
Relies on available information from the
physical layer and the pulses emitted from
the transponders, therefore no protocol
modification is required.

Verification via a group of users requires a
new message type and protocol in order to
establish a trust mechanism.

No modifications are needed.

Additional sensors / entities required
Key exchange requires a trusted entity
among the aircraft.

Measurements rely upon ground stations
or other entities.

These methods are based on measuring the
signal arrival time from multiple points
and therefore, require more than one
sensor or entity.

No additional sensors or entities are
required.

on the measurement of the time difference of arrival (TDOA) be-
tween at least two stations at known locations. Smith [27] provided
a method based on MLAT that can serve as a backup for ADS-B
communication. Additional work based on MLAT suggested by
Schafer et al. [23] showed that it is possible to verify a 3D route
with a group of four verifiers. In addition, Strohmeier et al. [30] sug-
gested a method of continuous location verification by computing
the difference in the expected TDOA between at least two sensors.

4.1.4 Machine Learning. Machine learning models are used in
many domains for detecting anomalies in data streams. In the con-
text of aviation, the large scale of the data can be used to solve tasks
and learn patterns using machine learning, as suggested by Junzi et
al. [35]. Several studies involving machine learning, have already
been conducted in the aviation field. Stromeier et al. [33] used the
kNN algorithm which succeeded in outperforming traditional meth-
ods for the localization of aircraft. Zhang et al. [40] presented an
ensemble of models to identifying aircraft accidents. Strohmeier
et al. [34] introduced the possibility of using machine learning to
exploit the lack of privacy for the purpose of inferring confidential
corporate mergers and government relations from broadcast ADS-B
messages. In addition, Habler et al. [11] presented a method that
can characterize the nature of aircraft movement. As mentioned,
an advantage of this method is that there is no need for additional
sensors or architectural changes.

Summary of Related Work. Each of the methods described
4.1.5
above has its advantages and disadvantages. Adding encryption
measures to the ADS-B system provides confidentiality and the
ability to authenticate messages, thus protecting against spoofing
and eavesdropping attacks. However, previously proposed solutions
that use this technique [4–6, 31] require redesigning and imple-
menting the protocol (i.e., a new type of message and key exchange
scheme). As described above, these requirements involve protocol
modifications and adding a trust mechanism between the aircraft.
Due to the regulation process regarding avionic systems and the
fact that the ADS-B system is already deployed in most aircraft,
applying such modifications to the current protocol at this stage

would require a great deal of resources and a significant amount of
time and funds to implement and deploy.

Approaches that rely upon the Doppler effect and multilatera-
tion ([9, 24]) are able to provide accurate location verification, thus
making it possible to detect spoofing attacks. However, suggested
solutions using these approaches rely on the presence of sensors
on the ground, which isn’t a given in some geographic areas. In
addition, proposed solutions utilizing these approaches also require
protocol modifications in order to establish the trust mechanism
between airplanes, as well as to avoid reliance on sensors located
on the ground [23]. Furthermore, et al. [25] demonstrated that a so-
phisticated attacker can manipulate multilateration based solutions
by using several broadcasting sources.

Habler et al. [11] proposed an alternative security solution, which
differs from the solutions suggested in the above-mentioned works
in that it interacts with the existing system, and thus does not
require any modification or additional hardware components. This
method is based on a machine learning technique which analyzes
information from flight routes and the behavior of airplanes on
these routes. A dedicated model is trained for each flight route,
and therefore various information is needed to create the various
models. Since the work specified above is done for each flight route
separately, our proposed VizADS-B method can be extended in
future work by integrating the anomaly score derived according
to the method proposed by Habler et al. [11]. This can be done
by expressing the individual anomaly scores derived from their
method within the images analyzed by VizADS-B .

4.2 Anomaly Detection in a Stream of Images
Machine learning algorithms are used in order to solve complex
problems that are not easily solved in traditional ways. Convolu-
tional neural networks (CNNs) have been shown to be effective
at image analysis, particularly in identifying anomalies within im-
ages [8, 21]. Their representation and processing capabilities can
reduce the need for the feature engineering process, since the CNN
can detect and extract complex patterns.

Several attempts have been made in order to leverage the advan-
tages of traditional CNNs for solving problems involving sequences

VizADS-B: Analyzing Sequences of ADS-B Images Using Explainable Convolutional LSTM Encoder-Decoder

Sefi Akerman, Edan Habler, Asaf Shabtai

of images. Most of these attempts involved some combination of re-
current neural networks (RNNs) and CNNs, and a few architecture
types based on various combinations of the two were used [14]. In
the domain of spatio-temporal anomaly detection, several studies
used an architecture consisting of layers that combine the long-
short term memory cells (LSTM) with CNNs [17, 38] and showed
that this combination performed well. In this research we opted to
use the Conv-LSTM method proposed by Shi et al. [38], because it
is considered a state-of-the-art method particularly suited to our
interest in the detection of spatio-temporal anomalies within a
sequence of images.

4.3 Explainable AI
Explainable AI (XAI) is an emerging researched field in machine
learning whose purpose is to allow users to understand, confidently
trust, and effectively manage the next generation of AI products [10].
Most of the methods developed in recent years are meant to explain
supervised machine learning models. For example, the LIME [20]
method introduced for explaining the prediction using a local mode;
the DeepLIFT method [26], which uses back propagation through
all of the neurons in the network to explain the output; and the
SHAP [15] method, which is a unified approach that aims to explain
the model output using shaply value and game theory properties.
The need to explain the output is especially important in anom-
aly detection based on deep learning models, because usually in this
case not all of the anomaly types are known (labeled). Providing an
explanation of a detected anomaly will enable the human expert to
trust the model and make the correct decisions. An initial attempt
at explaining an autoencoder was made by Antwarg et al. [1], and
proposed using SHAP to explain the output of an RNN autoenocder.
Another relevant study performed by Arnaldo et al. [2], who tried
to detect outliers using a PCA model and explain its output by dis-
playing the most significant features. Similarly, Nguyen et al. [19]
offered a technique for explaining variational autoencoders by find-
ing the most significant features based on their gradient values.
In this study, we propose a method for explaining the output of a
convolutional LSTM autoencoder.

5 PROPOSED METHOD: VIZADS-B
5.1 Motivation
The ADS-B system allows the pilot to view information about the
surrounding aircraft by receiving messages that are broadcast by
these aircraft and creating an updated visual state of its surrounding
area. Because of the known security issues of the ADS-B system,
and specifically since it is possible to manipulate or broadcast forged
messages, the ability to detect malicious ADS-B messages is crucial.
Detecting anomalies in data streams received by several aircraft
simultaneously is a challenging task, since the sequences of mes-
sages sent by individual aircraft must be examined, in addition to
the relationship (correlation) between messages sent by different
aircraft in the same geo-location and period of time which also
must be examined.

In order to facilitate the representation and analysis of multiple
ADS-B messages broadcast by different aircraft, we opt to represent
the information obtained from the broadcast ADS-B messages in
the form of a stream of images. This approach eliminates the need

for feature engineering, which can be complicated in this scenario
(for example, because of the unknown number of aircraft in a given
location at any given point in time).

In order to analyze the data we use an convolutional LSTM
encoder-decoder network [7] to detect spatio-temporal anomalies
in sequences of images generated from the data streams of ADS-B
messages received.

5.2 Constructing the Images
We aim to include all of the data contained in an ADS-B message
and represent the relative proximity among nearby aircraft within
an image, thus enabling the model to learn meaningful complex
patterns from the data. An ADS-B message contains the aircraft’s al-
titude, latitude, longitude, speed and heading direction, as presented
in Table 2.

Assume an entity e (an aircraft or ground station) that receives
ADS-B messages broadcast by nearby aircraft {a1,..., an }. In order
to apply the proposed method, the messages received by e are
transformed into a sequence of s images (see Figure 3). Each image
represents a predefined time interval ∆t and summarizes the infor-
mation reported - using the ADS-B protocol - by all aircraft within a
specific geographical area at ∆t. As shown in Figure 3, each aircraft
is represented by an arrow that encapsulates the location, speed,
direction and altitude of the aircraft. In addition, in cases in which
an anomaly score is provided for each ADS-B message individually,
the anomaly score is represented by the color of the arrow.

Figure 3: An example of a sequence of images representing
the ADS-B messages in consecutive time frames (a-d).

The images are generated as follows. Given the geographic loca-
tion (altitude, latitude, longitude, and heading direction) of all air-
craft in the selected area, we first perform a projection to a 2D plane
using Lambert conformal conic projection (LCC) [28]. Then, given
a sequence of ADS-B messages {m1, m2, ..., mk } sent by ai within
∆t, we create an arrow representing the following properties: The
start point of the arrow is set to be (m1(latitude), m1(lonдitude))
and the end of the arrow is set to be (mk (latitude), mk (lonдitude)),
both indicating the position of the aircraft in the air. Consequently,
the length of the arrow represents the distance traveled during ∆t.
The arrow’s direction is calculated by:

fdir ect ion (m1(headinд), ..., mk (headinд))

The size of the arrow represents the altitude of the aircraft:

fal t itude (m1(altitude), ..., mk (altitude))
Finally, the color of the arrow represents the anomaly score of the
messages and is calculated by:

fanomaly (m1(anomalyScore), ..., mk (anomalyScore))

Sefi Akerman, Edan Habler, Asaf Shabtai

Sefi Akerman, Edan Habler, Asaf Shabtai

Table 2: ADS-B message attributes.

Attribute

Longitude

Latitude

Description
aircraft’s east-west position on the
Earth’s surface
aircraft’s north-south position on
the Earth’s surface

Speed

Altitude
Heading
Time
Call-sign

aircraft’s speed relative to the
ground

aircraft’s altitude above sea level
aircraft’s direction of progress
epoch standard time
aircraft’s unique identifier

Unit

Value range

Represented in image

deg

deg

Knt

ft
deg
ms
-

[-90, 90]

by the arrow’s position

[-180, 180]

by the arrow’s position

[0, 500]

[0, 40K]
[0, 360]
varies
-

by the length of the arrow, and the
difference in the arrow’s location between
consecutive images
by the arrow’s size
by the arrow’s direction
by the image in the sequence
by a unique arrow within the image

= mk (headinд)

In our case, we used the identity function for fdir ect ion
= loд(mk (altitude)). An
and a logarithmic relation for fal t itude
example of this process is illustrated in Figure 4. All ADS-B mes-
sages in ∆t are selected (step 1) and aggregated for each individual
aircraft (step 2). Then, the defined functions are used to transform
the data into an image (step 3). Repeating this process for each
point in time results in a stream of images that contains meaningful
information regarding all of the aircraft in the area.

5.3 Model Description
5.3.1 Overview of Convolutional LSTM Encoder-Decoder. As de-
scribed in Section 4.2, the CNN neural network architecture has
been shown to work very well in many cases, primarily in cases
related to image processing [8, 21]. A CNN based on long short-
term memory (LSTM) is designed to deal with spatio-temporal data
such as videos. First introduced by Shi et al. [38], it has been since
proven to perform well in several subsequent studies [17]. Figure 5
illustrates one layer of a Conv-LSTM network, where X denotes
the input, H denotes the hidden states, and C denotes the current
states at different time periods (represented by t).

Our model’s architecture consists of two main components: en-
coder and decoder. The encoder component involves LSTM- convo-
lutional neural network layers which are used for feature extraction
and sequence prediction. The decoder component is also composed
of LSTM-convolutional neural network layers and is used to recon-
struct the input received by the encoder.

By applying both encoder-decoder layers as a single unit, we
attempt to maximize the probability of capturing the meaning-
ful structure of the input derived from legitimate unlabeled data.
Therefore, when malicious data is received as input by the decoder
component, it will not propagate properly through the model, thus
leading to a significant difference between the input and the output
which can be used for anomaly detection (i.e., anomalous input).
Using the explanability technique described in Section 5.4, we
can further analyze the output of the model and provide a human
observer (i.e., the pilot) additional visual information that supports
real-time decision-making resulting in improving detection rate.

5.3.2 Training the Model. In order to reconstruct frames of images
with minimal error, we train our model on a training dataset using
the Adam optimizer [36] and the mean square error (MSE) loss

function. The structure of the proposed model is displayed in Fig-
ure 6 and consists of shallow encoder and decoder layers with 16
3*3 sized kernels. The encoder component learns from sequences
of images of length s (denoted as frames) by optimizing its hidden
layers to capture meaningful features of the data. Afterward, the
decoder component reconstructs each frame (i.e., a sequence of s
images) using the current hidden state of the decoder, the values
predicted for the images within the previous frame, and the values
of the images within the current frame, similar to RNNs.

5.3.3 Anomaly detection method. After training a model that can
reconstruct images that represent legitimate sequences of images
(frames), we expect the input and output frames to look alike.

In order to compare the model’s input and output frames, we opt
to use the SSIM function [13]. The SSIM index is designed to capture
structural similarities between two images rather than pixel-wise
similarity, which is less informative when the aim is to evaluate
how the model perceives the entire image.

We expect the model to fail in reconstructing images generated
from malicious messages. Consequently, in such cases the SSIM
value computed for the model’s input and output should be low,
thus indicating an anomaly.

In order to reduce the false alarm rate, we aggregate the anomaly
scores computed for w consecutive frames of size s. We calculate
the anomaly score (i.e., SSIM value) for each frame. A frame is
considered “suspicious” if the SSIM value is below a threshold t1
(derived by using a validation set). We then count the number of
“suspicious” frames within the window, and if the sum exceeds a
second threshold t2, we classify the window as anomalous.

5.4 Proposed Explainability Method
We propose a simple and yet efficient explanability technique,
which, to the best of our knowledge, is the first to explain the
output of a convolutional encoder-decoder models. The proposed
technique is integrated within the process of detecting and han-
dling anomalies (that are potentially the result of a cyber-attack)
in an operational, real-time, cyber-physical system. The proposed
approach also provides visual clues to assist the human observer in
immediately understanding the cause of the alert and identifying
false alarms, and enables improved performance of VizADS-B .

VizADS-B: Analyzing Sequences of ADS-B Images Using Explainable Convolutional LSTM Encoder-Decoder

Sefi Akerman, Edan Habler, Asaf Shabtai

Figure 4: An example of the image creation process.

Table 3: Description of datasets.

Name

Paris
Berlin
London
Rome
Amster-
dam

Location
(center)
CDG Airport
TXL Airport
LHR Airport
FCO Airport

AMS airport

# of messages

Duration

100,000
800,000
1,000,000
700,000

800,000

7 days
7 days
7 days
7 days

7 days

• Divide the image to sub-images. Split ini and outi into
n ∗ n equal, corresponding, squares denoted by ini, j and
outi, j , where j is between one and n ∗ n.

• Calculate the SSIM for sub-images. Calculate the SSIM
score for each of the corresponding pair of squares obtained
from ini, j and outi, j .

• Highlight sub-images by their calculated SSIM score.
Assign a color to each ini, j and outi, j pairs based on the
SSIM score calculated.

This method allows an experienced user to easily and quickly
determine whether the result of the model is reliable and logical or
whether it is a false alarm.

6 EVALUATION
6.1 Datasets
For the evaluation, we used five datasets extracted from the Open-
Sky platform,2 a participatory sensor network for air traffic research,
containing real-world data on a large scale [32]. OpenSky was cho-
sen because it was the only free data source we found available
that enabled us to obtain a vast amount of data from a certain ge-
ographic location. Each dataset covers a 10,000 square kilometer
area, centered around a different airport (see Table 3).

6.2 Injected Anomalies
In order to evaluate the performance of the trained model, we
injected five types of anomalies into the flight data included in the
test sets. Each attack was injected approximately 100 times for each

2https://opensky-network.org/.

Figure 5: Conv-LSTM layer structure illustration. X denotes
the input, H denotes the hidden states, and C denotes the
current states.

Figure 6: Conv-LSTM encoder-decoder structure.

The proposed method highlights the most suspicious areas within
an analyzed image. The identification of these suspicious areas is
performed as follows.

• Select the most inaccurately reconstructed image. Given
a window w (i.e., a sequence of images) that is considered
anomalous, select the image that was reconstructed in the
most inaccurate way according to the SSIM score. We denote
the original image by ini and the reconstructed image by
outi .

Sefi Akerman, Edan Habler, Asaf Shabtai

Sefi Akerman, Edan Habler, Asaf Shabtai

dataset in the following way. For each 50 image segment in the
test set we left the first 35 images unchanged, and in the remaining
15 images we injected an anomaly, thus enabling us to create an
infected test set that includes a few sections containing a certain
type of attack. We used attacks that are reasonable for an attacker
to implement, as described in Mirzaei et al. [18]. The attacks are as
follows:

Flooding - We inject a random number (between three and eight)
of scattered aircraft at uniformly distributed random locations. In
this scenario we are exploiting the lack of an authentication mech-
anism in order to make the ADS-B system unreliable because of
the inability to distinguish between a real aircraft and a fictitious
aircraft. An attack of this kind can occur without much effort by
using COTS software as previously demonstrated [22].

Ghost - We inject an aircraft advancing along a legitimate route,
but taken from a different geographical location (i.e., based on
data that is not from the five datasets tested). Previous research by
Costin [4] and McCallie [16] discussed the dangers of impersonating
(ghost) aircraft.

Jamming - We make an aircraft disappear for a certain period
of time. This scenario represents unexpected disappearance of an
aircraft which can be caused by a denial-of-service attack, in which
an aircraft is prevented from sending or receiving ADS-B messages,
as demonstrated by Wilhelm et al. [37].

Reverse - We change the direction of the arrow by 180 degrees
for a certain period of time, thus creating an abnormal movement
pattern.

Change altitude - We change the altitude of the aircraft by first
checking whether the altitude of the aircraft is above or below a
certain threshold (in order to determine whether the aircraft is
descending for landing or not), and then we switch the altitude
accordingly: if the aircraft is descending we change the value to a
high altitude, and vice versa.

An illustration of the five injected attacks is presented in Figure 8.
Each row represents a different injected attack. The columns repre-
sent the following: (a) original image before injecting the attack,
(b) the image reconstructed by applying the model on the original
image, (c) the image after injecting the attack, and (d) the image
reconstructed by applying the model on the image after injecting
the attack. It can be seen that the difference between the input
images (the original image (a) and the image after injecting the
attack (c)) and the reconstructed images is much higher for the
images with the injected attack, demonstrating the ability to detect
the attacks.

6.3 Evaluation Process
6.3.1 Anomaly Detection Evaluation. We divided each dataset into
three subsets: training, validation, and test sets. The training set
was used for training the model, the validation set was used for
setting the threshold value, and the test set was used for evaluating
the model. The training set consisted of approximately 60% of each
dataset, the validation set consisted 25% of each dataset, and the
test set consisted of the remaining 15%.
We set the parameters as follows:

• s = 15 images;

Figure 7: Representation of the process of injecting anom-
alies and calculating the anomaly score. In the first stage the
attacks are injected into the dataset; in the second stage, the
model processes the dataset and creates the output frames
accordingly. Then ,in the third stage, the SSIM score for each
frame is calculated. Finally, in the fourth stage, aggregation
is carried out according to the threshold values t1 and t2.

• t1 is the fifth percentile of the SSIM values from the validation

set;

• several ∆t values were tested - ∆t = 2, 5, 10, and 20s with a

50% overlap between consecutive images; and

• t2 = 5.

We then applied the detection model on the test set and the SSIM
value for the frames was calculated. The frames that exceed t1 were
aggregated. If the number exceeded t2, we considered the window
anomalous. The overall evaluation process is shown in Figure 7.

6.3.2 XAI Evaluation. To evaluate the ability of the proposed XAI
technique in assisting the pilot in interpreting alerts and identifying
false alarms, we present the output of the XAI module, i.e., the
original and reconstructed images marked with the most anomalous
areas to a human domain expert and checked whether the human
domain expert was able to identify actual attacks and false positives.

6.4 Results
Out of the tested ∆t values, on several of the datasets examined,
it seems that for the length of the attacks tested (15 seconds), the
best performance was achieved for ∆t = 2s. ∆t = 2s means that the
number of images is equal to the number of seconds - as the images
overlap. The TPR and FPR of the attacks for the London dataset
can be seen in Figures 10 and 9. We can also see that in general,

VizADS-B: Analyzing Sequences of ADS-B Images Using Explainable Convolutional LSTM Encoder-Decoder

Sefi Akerman, Edan Habler, Asaf Shabtai

Figure 9: TPR values of the London dataset for different val-
ues of ∆ t. it is obvious from this figure that in general as ∆
t grows bigger the TPR in all attacks goes worse.

Figure 8: Illustration of the five attacks injected and eval-
uated in the experiments. Each row represents a different
injected attack. The columns present the original image be-
fore injecting the attack (a), the image reconstructed by ap-
plying the model on the original image (b), the image after
injecting the attack (c), and finally, the image reconstructed
by applying the model on the image after injecting the at-
tack(d).

the lower ∆t is, the better the performance - for this attack length.
This observation is reasonable, since if ∆t is longer than the length
of the attack, it will be harder for the model to capture the attack,
since the attack spreads over fewer images.

Figure 11 presents the ROC curves for the datasets and attacks,
and Figure 13 presents the false positive rate (FPR) and true positive
rate (TPR) values derived from the ROC curves for the selected
thresholds. The SSIM threshold was chosen separately for each
dataset, based on the validation set and the desired TPR as opposed

Figure 10: FPR values of the London dataset for different ∆
ts. it is obvious from this figure that in general as ∆ t grows
bigger the FPR in all attacks goes worse.

to the desired FPR. We believe that choosing the SSIM threshold
for each dataset is legitimate because of the differences between
the different geographical locations. Our method permits a slightly
higher FPR, because, as discussed below, the XAI technique we can
deal with it.

It can be seen (in Figure 13) that the model was able to detect the
flood, ghost, and change altitude attacks on most datasets, and the
Jamming attack was detected in most cases. It is reasonable that the
attacks that involve adding aircraft are detected better than attacks
that involve altering the data of existing aircraft.

The TPR obtained for the attacks indicates that meaningful fea-
tures of the legitimate data were captured by the hidden state of
the model. For example, for the ghost attack the model was able
to learn legitimate flight routes and identify unusual routes. The
detection rate of the ghost attack was the highest for the London
dataset. We attribute that result to the size of the dataset (Heathrow
airport is rated as the seventh busiest airport in the world based on

∆t(s)2468101214161820TPR(%)020406080100TPRvs ∆tGhost attackFlood attackJamming attackReverse attackChange height attack∆t(s)2468101214161820FPR(%)0102030405060FPR vs ∆tGhost attackFlood attackJamming attackReverse attackChange Height attackSefi Akerman, Edan Habler, Asaf Shabtai

Sefi Akerman, Edan Habler, Asaf Shabtai

the number of flights 3) which provided the model with sufficient
data to capture legitimate flight routes.

The results show that the reverse attack is hard to detect (by
the low TPR). This can be explained by the fact that the reverse
attack affects a smaller area in the image, and therefore is more
subtle and difficult to detect; these changes may be better captured
by an attention based CNN [39] which provides the ability to focus
the model’s attention on a subset of its inputs (i.e., specific regions
within the image).

It can also be noted that the results for each attack vary a bit be-
tween datasets. Based on our understanding, it can be explained by
the fact that normal behavior is different in different geographical
areas, for example, if at a certain airport there are a lot of aircraft
that normally fly nearby at a high altitude, the change altitude
attack would not be detected as well as it would be at other airports
(and this might explain the Amsterdam or Berlin datasets result in
this attack). Another example is that in an airport with several dis-
tinct flight routes approaching it, the ghost attack might be better
detected than at an airport that is accessed from all directions (thus
making the detection of the anomaly more difficult).

The results obtained by our method are comparable to results
obtained in a previous study, that dealt with single routes of air-
craft [11].

6.4.1 XAI Results. Using the XAI technique, we were able to call
attention to "suspicious" frames that has been detected as anoma-
lous. The observer was then able to identify all false alarms within
an average of five seconds for each frame. Thus, without affecting
the model’s TPR rate, we managed to obtain the observer’s trust by
providing a visual indicator of the model’s result, while maintaining
an inspection rate of less than ten suspicious frames per hour. An
example of true attacks and false alarms and their representations
can be seen in Figure 12.

7 CONCLUSION AND FUTURE WORK
In this study, we proposed a method for detecting anomalous ADS-
B messages in a specific geographical area; the method, inspects all
aircraft within the chosen airspace at once and is based on applying
a ConvLSTM model on the data. By using known methods for image
analysis and representing the information within a geographical
area as images, we were able to represent information from all of
the aircraft located in the examined area without the need of feature
engineering. We were also able to analyze the input and output
using the XAI technique, enabling a human observer differentiate
false alarms and actual detections.

Our method enables the detection of attacks generated by so-

phisticated attackers that can overcome other security measures.
We validated our model using several geographical locations and
five types of injected attacks, obtaining satisfactory TPR and FPR
values for most of those attacks.

Based on the experiments conducted, we can conclude that it
is possible to assess the integrity of messages from the ADS-B
protocol without changes to the protocol or its architecture.

3https://en.wikipedia.org/wiki/List_of_busiest_airports_by_passenger_traffic#
Preliminary_2018_statistics

In future work, we plan to test the model using different and
more subtle attacks and additional locations, while tuning the hyper-
parameters of the model and its architecture. Another direction
for future research is to use the work of Habler et al. [11] in or-
der to enhance the performance of our model by using different
colors for suspicious aircraft (e.g., legitimate ADS-B messages in
green and suspicious message in red). Another research direction
revealed during this research is to combine several networks with
different ∆t values in order successfully deal with attacks of sev-
eral lengths. We also plan to evaluate the robustness of the model
against adversarial attacks.

REFERENCES
[1] Liat Antwarg, Bracha Shapira, and Lior Rokach. 2019. Explaining Anomalies
Detected by Autoencoders Using SHAP. arXiv preprint arXiv:1903.02407 (2019).
[2] Ignacio Arnaldo, K Veeramachaneni, and M Lam. 2019. ex2: a framework for

interactive anomaly detection.

[3] W Blythe, H Anderson, and N King. 2011. ADS-B Implementation and Operations
Guidance Document. International Civil Aviation Organization. Asia and Pacific
Ocean (2011).

[4] Andrei Costin and Aurélien Francillon. 2012. Ghost in the Air (Traffic): On
insecurity of ADS-B protocol and practical attacks on ADS-B devices. Black Hat
USA (2012), 1–12.

[5] Ziliang Feng, Weijun Pan, and Yang Wang. 2010. A data authentication solution
of ADS-B system based on x. 509 certificate. In 27th International Congress of the
Aeronautical Sciences, ICAS. 1–6.

[6] Cindy Finke, Jonathan Butts, Robert Mills, and Michael Grimaila. 2013. Enhancing
the security of aircraft surveillance in the next generation air traffic control
system. International Journal of Critical Infrastructure Protection 6, 1 (2013), 3–11.
[7] Chelsea Finn, Ian Goodfellow, and Sergey Levine. 2016. Unsupervised learning for
physical interaction through video prediction. In Advances in neural information
processing systems. 64–72.

[8] I Gavrilut, V Tiponut, and A Gacsádi. 2007. An integrated environment for mobile
robot navigation based on CNN images processing. In Proceedings of the 11th
WSEAS International Conference on SYSTEMS, Agios Nicolaos (Ed.), Vol. 5117.
Crete, Greece, ISSN, 81–86.

[9] Nirnimesh Ghose and Loukas Lazos. 2015. Verifying ADS-B navigation informa-
tion through Doppler shift measurements. In Digital Avionics Systems Conference
(DASC), 2015 IEEE/AIAA 34th. IEEE, 4A2–1.

[10] David Gunning. 2017. Explainable artificial intelligence (xai). Defense Advanced

Research Projects Agency (DARPA), nd Web (2017).

[11] Edan Habler and Asaf Shabtai. 2018. Using LSTM encoder-decoder algorithm for
detecting anomalous ADS-B messages. Computers & Security 78 (2018), 155–173.
[12] Thabet Kacem, Duminda Wijesekera, Paulo Costa, Jeronymo Carvalho, Márcio
Monteiro, and Alexandre Barreto. 2015. Key distribution mechanism in secure
ADS-B networks. In Integrated Communication, Navigation, and Surveillance
Conference (ICNS), 2015. IEEE, P3–1.

[13] Diederik P Kingma and Jimmy Ba. 2014. Adam: A method for stochastic opti-

mization. arXiv preprint arXiv:1412.6980 (2014).

[14] Moshe Kravchik and Asaf Shabtai. 2018. Detecting cyber attacks in industrial
control systems using convolutional neural networks. In Proceedings of the 2018
Workshop on Cyber-Physical Systems Security and PrivaCy. ACM, 72–83.
[15] Scott M Lundberg and Su-In Lee. 2017. A unified approach to interpreting model

predictions. In Advances in Neural Information Processing Systems. 4765–4774.

[16] Donald McCallie, Jonathan Butts, and Robert Mills. 2011. Security analysis of
the ADS-B implementation in the next generation air transportation system.
International Journal of Critical Infrastructure Protection 4, 2 (2011), 78–87.
[17] Jefferson Ryan Medel and Andreas Savakis. 2016. Anomaly detection in video
using predictive convolutional long short-term memory networks. arXiv preprint
arXiv:1612.00390 (2016).

[18] Kayvan Faghih Mirzaei, Bruno Pessanha de Carvalho, and Patrick Pschorn. 2019.

Security of ADS-B: Attack Scenarios. Technical Report. EasyChair.

[19] Quoc Phong Nguyen, Kar Wai Lim, Dinil Mon Divakaran, Kian Hsiang Low,
and Mun Choon Chan. 2019. GEE: A Gradient-based Explainable Variational
Autoencoder for Network Anomaly Detection. arXiv preprint arXiv:1903.06661
(2019).

[20] Marco Tulio Ribeiro, Sameer Singh, and Carlos Guestrin. 2016. Why should i
trust you?: Explaining the predictions of any classifier. In Proceedings of the 22nd
ACM SIGKDD international conference on knowledge discovery and data mining.
ACM, 1135–1144.

[21] Wener Borges Sampaio, Edgar Moraes Diniz, Aristófanes Corrêa Silva,
Anselmo Cardoso De Paiva, and Marcelo Gattass. 2011. Detection of masses in
mammogram images using CNN, geostatistic functions and SVM. Computers in

VizADS-B: Analyzing Sequences of ADS-B Images Using Explainable Convolutional LSTM Encoder-Decoder

Sefi Akerman, Edan Habler, Asaf Shabtai

Figure 11: ROC curves and matching AUC values for each dataset and attack.

Sefi Akerman, Edan Habler, Asaf Shabtai

Sefi Akerman, Edan Habler, Asaf Shabtai

Figure 13: (a) TPR and (b) FPR of different attacks and
databases for ∆t = 2s.

biology and medicine 41, 8 (2011), 653–664.

[22] Matthias Schäfer, Vincent Lenders, and Ivan Martinovic. 2013. Experimental
analysis of attacks on next generation air traffic communication. In International
Conference on Applied Cryptography and Network Security. Springer, 253–271.

[23] Matthias Schäfer, Vincent Lenders, and Jens Schmitt. 2015. Secure track verifica-
tion. In Security and Privacy (SP), 2015 IEEE Symposium on. IEEE, 199–213.
[24] Matthias Schäfer, Patrick Leu, Vincent Lenders, and Jens Schmitt. 2016. Secure
Motion Verification using the Doppler Effect. In Proceedings of the 9th ACM
Conference on Security & Privacy in Wireless and Mobile Networks. ACM, 135–145.
[25] Fute Shang, Buhong Wang, Fuhu Yan, and Tengyao Li. 2019. Multidevice False
Data Injection Attack Models of ADS-B Multilateration Systems. Security and
Communication Networks 2019 (2019).

[26] Avanti Shrikumar, Peyton Greenside, and Anshul Kundaje. 2017. Learning im-
portant features through propagating activation differences. In Proceedings of
the 34th International Conference on Machine Learning-Volume 70. JMLR. org,
3145–3153.

[27] A Smith, R Cassell, T Breen, R Hulstrom, and C Evers. 2006. Methods to provide
system-wide ADS-B back-up, validation and security. In 25th Digital Avionics
Systems Conference, 2006 IEEE/AIAA. IEEE, 1–7.

[28] John Parr Snyder. 1982. Map projections used by the US Geological Survey. Tech-

nical Report. US Government Printing Office.

Figure 12: several suspicious frames, explained by our tech-
nique. (a) is the input to the model and (b) is the output. It
can be seen that the interesting parts for the observer to ex-
amine are the parts in purple, and that the anomalies are
near those areas, while the parts in yellow represents the ar-
eas without anomalies. Using this technique allows the ob-
server to identify false alarms easily.

VizADS-B: Analyzing Sequences of ADS-B Images Using Explainable Convolutional LSTM Encoder-Decoder

Sefi Akerman, Edan Habler, Asaf Shabtai

[29] Martin Strohmeier and Vincent Lenders. 2015. Intrusion detection for airborne
communication using phy-layer information. In International Conference on De-
tection of Intrusions and Malware, and Vulnerability Assessment. Springer, 67–77.
[30] Martin Strohmeier, Vincent Lenders, and Ivan Martinovic. 2015. Lightweight
location verification in air traffic surveillance networks. In Proceedings of the 1st
ACM Workshop on Cyber-Physical System Security. ACM, 49–60.

[31] Martin Strohmeier, Vincent Lenders, and Ivan Martinovic. 2015. On the security of
the automatic dependent surveillance-broadcast protocol. IEEE Communications
Surveys & Tutorials 17, 2 (2015), 1066–1087.

[32] Martin Strohmeier, Ivan Martinovic, Markus Fuchs, Matthias Schäfer, and Vincent
Lenders. 2015. Opensky: A swiss army knife for air traffic security research. In
2015 IEEE/AIAA 34th Digital Avionics Systems Conference (DASC). IEEE, 4A1–1.
[33] Martin Strohmeier, Ivan Martinovic, and Vincent Lenders. 2018. A k-NN-based
Localization Approach for Crowdsourced Air Traffic Communication Networks.
IEEE Trans. Aerospace Electron. Systems 54, 3 (2018), 1519–1529.

[34] Martin Strohmeier, Matthew Smith, Vincent Lenders, and Ivan Martinovic. 2018.
The Real First Class? Inferring Confidential Corporate Mergers and Government
Relations from Air Traffic Communication. In 2018 IEEE European Symposium on
Security and Privacy (EuroS&P). IEEE, 107–121.

[35] Junzi Sun, Joost Ellerbroek, and Jacco Hoekstra. 2016. Large-Scale Flight Phase
Identification from ADS-B Data Using Machine Learning Methods. In 7th Inter-
national Conference on Research in Air Transportation.

[36] Zhou Wang, Alan C Bovik, Hamid R Sheikh, and Eero P Simoncelli. 2004. Image
quality assessment: from error visibility to structural similarity. IEEE transactions
on image processing 13, 4 (2004), 600–612.

[37] Matthias Wilhelm, Ivan Martinovic, Jens B Schmitt, and Vincent Lenders. 2011.
Short paper: reactive jamming in wireless networks: how realistic is the threat?.
In Proceedings of the fourth ACM conference on Wireless network security. ACM,
47–52.

[38] SHI Xingjian, Zhourong Chen, Hao Wang, Dit-Yan Yeung, Wai-Kin Wong, and
Wang-chun Woo. 2015. Convolutional LSTM network: A machine learning ap-
proach for precipitation nowcasting. In Advances in neural information processing
systems. 802–810.

[39] Kelvin Xu, Jimmy Ba, Ryan Kiros, Kyunghyun Cho, Aaron Courville, Ruslan
Salakhudinov, Rich Zemel, and Yoshua Bengio. 2015. Show, attend and tell: Neural
image caption generation with visual attention. In International conference on
machine learning. 2048–2057.

[40] Xiaoge Zhang and Sankaran Mahadevan. 2019. Ensemble machine learning
models for aviation incident risk prediction. Decision Support Systems 116 (2019),
48–63.

