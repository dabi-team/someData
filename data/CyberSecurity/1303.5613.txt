SMITH ET AL.: NETWORK DETECTION

1

Network Detection Theory and Performance
Steven T. Smith*, Senior Member, IEEE, Kenneth D. Senne*, Life Fellow, IEEE,
Scott Philips*, Edward K. Kao*†, and Garrett Bernstein*

3
1
0
2

r
a

M
2
2

]
I
S
.
s
c
[

1
v
3
1
6
5
.
3
0
3
1
:
v
i
X
r
a

Abstract—Network detection is an important capability
in many areas of applied research in which data can be
represented as a graph of entities and relationships. Often-
times the object of interest is a relatively small subgraph in
an enormous, potentially uninteresting background. This
aspect characterizes network detection as a “big data”
problem. Graph partitioning and network discovery have
been major research areas over the last ten years, driven by
interest in internet search, cyber security, social networks,
and criminal or terrorist activities. The speciﬁc problem of
network discovery is addressed as a special case of graph
partitioning in which membership in a small subgraph
of interest must be determined. Algebraic graph theory is
used as the basis to analyze and compare different network
detection methods. A new Bayesian network detection
framework is introduced that partitions the graph based
on prior information and direct observations. The new
approach, called space-time threat propagation, is proved
to maximize the probability of detection and is therefore
optimum in the Neyman-Pearson sense. This optimality
criterion is compared to spectral community detection
approaches which divide the global graph into subsets
or communities with optimal connectivity properties. We
also explore a new generative stochastic model for covert
networks and analyze using receiver operating character-
istics the detection performance of both classes of optimal
detection techniques.

I. INTRODUCTION

Network detection is a special class of the more
general graph partitioning (GP) problem in which the
binary decision of membership or non-membership for
each graph vertex must be determined. This detection
problem and more generally GP are of fundamental and
practical importance in graph theory and its applications
(Figure 1). The detected subgraph comprises all vertices

Manuscript received 2013.
*MIT Lincoln Laboratory, Lexington, MA 02420; { stsmith, senne,

garrett.bernstein }@ll.mit.edu, edwardkao@fas.harvard.edu

†Department of Statistics, Harvard University; Cambridge MA

USA 02138

*This work is sponsored by the Assistant Secretary of Defense
for Research & Engineering under Air Force Contract FA8721-05-
C-0002. Opinions, interpretations, conclusions and recommendations
are those of the author and are not necessarily endorsed by the United
States Government.

declared to be members. The very deﬁnition of member-
ship will lead to speciﬁc network detection algorithms.
Graph partitioning is an NP-hard problem; however,
semideﬁnite programming (SDP) relaxation applies to
many cases, offering both practical and oftentimes the-
oretically attractive approximation to GP. [32], [56] In
general, practical GP approaches exploit a variety of
global and local connectivity properties to divide a graph
into many subgraphs. Decreasing algorithmic complexity
is achieved in certain domains that may be cast as
quadratic optimization problems (yielding eigenvalue-
or spectral-based methods), or simple sets of linear
equations. One important network detection approach,
called community detection, divides the global graph
into subsets or communities based on optimizing a
speciﬁc connectivity measure that is chosen depending
upon the application. This paper presents a new Bayes-
ian network detection approach called space-time threat
propagation [40], [47] that is shown to optimize the
probability of network detection in a Neyman-Pearson
sense given prior information and/or direct observations,
i.e. detection probability is maximized given a ﬁxed
false alarm a.k.a. false positive probability. This is an
important property because it provides a practical op-
timum algorithm in many settings (satisfying a set of
assumptions detailed later in the paper), and it provides
a performance bound on detection performance. Remark-
ably, the two apparently different optimal network detec-
tion approaches are related to each other using insights
from algebraic graph theory. Converse to other research
on network detection, rather than using the network to
detect signals, [3], [10], [27] the signal of interest in
this paper is the signal to be detected. In this sense
the paper is also related to work on so-called manifold
learning methods, [5], [8], [12] although the network to
be detected is a subgraph of an existing network, and
therefore the methods described here belong to a class of
network anomoly detection [8] as well as maximimum-
likelihood methods for network detection. [17] Both
spectral-based and Neyman-Pearson network detection
methods are described and analyzed below in Sections
III and IV. Furthermore, network detection performance
is assessed using a new stochastic blockmodel [2] for
small, dynamic foreground networks embedded within a

 
 
 
 
 
 
2

SMITH ET AL.: NETWORK DETECTION

Fig. 1. Network detection algorithm taxonomy. This paper focuses on local spectral and harmonic methods for network detection. (Images
used from various sources; clockwise from upper left [6, 48, 24, 38, 23, 44, 58]).

large background.

A. Covert Networks

Detection of network communities is most likely to
be effective if the communities exhibit high levels of
connection activity. However,
the covert networks of
interest to many applications are unlikely to cooperate
with this optimistic assumption. Indeed, a “fully con-
nected network . . .
is an unlikely description of the
enemy insurgent order of battle.” [50] A clandestine
or covert community is more likely to appear cellular
and distributed. [7] Communities of this type can be
represented with “small world” models. [43] The covert
networks of interest in this paper exist to accomplish
nefarious, illegal, or terrorism goals, while “hiding in
plain sight.” [26], [57] Covert networks necessarily adopt
operational procedures to remain hidden and robustly
adapt to losses of parts of the network. For example,
during the Algerian Revolution the FLN’s Autonomous
Zone of Algiers (Z.A.A.) military command was “care-
fully kept apart from other elements of the organization,
the network was broken down into a number of quite
distinct and compartmented branches, in communication
only with the network chief,” allowing Z.A.A. leader
Yassef Saadi to command “within 200 yards from the
ofﬁce of the [French] army commandant . . . and remain
there several months[.]” [49] Krebs’ reconstruction of the

9/11 terrorist network details the strategy for keeping cell
members distant from each other and from other cells
and notes bin Laden’s description of this organization:
“those . . . who were trained to ﬂy didn’t know the others.
One group of people did not know the other group.”
[30] A covert network does not have to be human to be
nefarious; the widespread Flashback malware attack on
Apple’s OS X computers employed switched load bal-
ancing between servers to avoid detection, [14] mirroring
the Z.A.A.’s “tree” structure for robust covert network
organization.

In order to accomplish its goals the covert network
must
judiciously use “transitory shortcuts.” [53] For
example, in the 9/11 terrorism operation, after coordi-
nation meetings connected distant parts of the network,
the “cross-ties went dormant.” [30] It is during these
occasional bursts of connection activity that a covert
community may be most vulnerable to detection. [50]

Network detection is predicated on the existence of
observations of network relationships. In this paper the
focus will be on observations of network activities us-
ing Intelligence, Surveillance, and Reconnaissance (ISR)
sensors, such as Wide-Area Motion Imagery (WAMI).
Covert networks engaged in terrorist attacks with Im-
provised Explosive Devices (IEDs) comprise loosely
connected cells with various functions, such as ﬁnance,
planning, operations, logistics, security, and propaganda.

SDP/LPSpectral/SVD/PCAAv = λvLaplacianLv = 0GlobalNetworksLocalNetworks•Normalized cut / Conductance•Maximum ﬂow•Graph partitioning–Latent Semantic Indexing (LSI)–k-means clustering•Graph detection–Spectral partitioning•Multiresolution methods (MR)•Manifold learning (ML)•Community detection•Heat kernel / Random walks•Personalized PageRank (PPR)•Threat propagation (TP)•Space-Time threat propagation (STTP)Covert/Anomalous network detection applicationsminX CX :AkX ≥ b, X ≥ 0∙∙Generalized OptimizationOptimize ConnectivityOptimize Detection ProbabilitySMITH ET AL.: NETWORK DETECTION

3

In this paper a new model of covert threat for detec-
tion analysis that accounts for the realities of dynamic
foreground networks in large backgrounds is a specially
adapted version of a mixed membership stochastic block-
model. [2] The terrorist cells of interest are embedded
into a background consisting of many “neutral” commu-
nities, that represent business, homes, industry, religion,
sports, etc. Because in real life people wear different
“hats” depending upon on the communities with which
they interact, their proportions of membership in multi-
ple communities (lifestyles) can be adjusted to control
the occasional coordination between the foreground and
background networks. The new generative blockmodel
approach introduced in Section IV-A leads to a analyti-
cally tractable tool with sufﬁcient parameters to exhibit
realistic coordinated activity levels and interactions.

B. Observability and Detectability

The connections (edges) between nodes of a network
are observable only when they are active. This implies
that there are two basic strategies for detecting a covert
threat: (1) subject-based Bayesian models that correlate
a priori information or observations of the observed net-
work connections; (2) pattern-based (predictive) methods
that look for known patterns of organization/behavior to
infer nefarious activity. [26], [41] Subject-based methods
follow established principles of police investigations to
accrue evidence based upon observed connections and
historical data. The dependency of predictive methods on
known patterns, however, makes them difﬁcult to apply
to rare and widely different covert threats: “there are no
meaningful patterns that show what behavior indicates
planning or preparation for terrorism.” [26] The real-
world consequences of applying an inappropriate model
to detect a threat may include an unacceptable number
of false positives and an erosion of individual privacy
rights and civil liberties. [26], [41]

As described above, the subject of community detec-
tion in graphs has experienced extensive research during
the last ten years. [21], [25], [29], [38], [39] Never-
theless, there are few closed-form results that quantify
the limits of detectability of speciﬁc types of networks
in representative backgrounds. Fully connected networks
(cliques) have received special attention: there is a recent
result which conﬁrms in closed form using random
matrix theory the previously observed phase transition
of detectability for sufﬁciently small cliques [20], [31],
[37] or dense subgraphs [4].

In this paper we use the proposed generative stochastic
threat model with Monte Carlo detection performance
analysis. The detection methodologies under investiga-

tion here include the spectral-based and Neyman-Pearson
techniques discussed above in the Introduction.

II. ALGEBRAIC GRAPH THEORY

A graph G = (V, E) is deﬁned by two sets, the
vertices V of G, and the edges E ⊂ [V ]2 ⊂ 2V
of G, in which [V ]2 denotes the set of 2-element subsets
of V . [13] For example, the sets V = { 1, 2, 3 },
E = (cid:8) {1, 2}, {2, 3} (cid:9) describe a simple graph with
undirected edges between vertices 1 and 2, and 2 and 3:
1 −− 2 −− 3 . The adjacency matrix A = A(G) of G
is the {0, 1}-matrix with Aij = 1 iff { i, j } ∈ E. In
(cid:17)
the example, A =
. Because simple graphs
are undirected,
their adjacency matrix is necessarily
symmetric. The degree matrix D = Diag(A·1) is the
diagonal matrix of the vector of degrees of all vertices,
where 1 = (1, . . . , 1)T is the vector of all ones.

(cid:16) 0 1 0
1 0 1
0 1 0

Many important applications involve an orientation be-
tween vertices, deﬁned by an orientation map σ : [V ]2 →
V × V (the ordered Cartesian product of V with itself)
in which the ﬁrst and second coordinates are called
the initial and terminal vertices, respectively. The corre-
sponding directed graph is denoted Gσ or, by abuse of
notation, simply G. The preceding example with orien-
tation map σ({1, 2}) = (2, 1), σ({2, 3}) = (2, 3) yields
the directed graph 1 ←− 2 −→ 3 . The incidence matrix
B = B(Gσ) of the oriented graph Gσ is the (0, ±1)-
matrix of size #V -by-#E with Bie = −1 if i is an
initial vertex of σ(e), 1 if i is a terminal vertex of σ(e),
and 0 otherwise. In the example, B =
. In the
study of homology in algebraic topology, the incidence
matrix is recognized as the boundary operator on graph
edges. It encodes differences between vertices and plays
an important role in the analysis of network detection
algorithms through the so-called graph Laplacian, which
appears in three forms. The unnormalized Laplacian
matrix or Kirchhoff matrix of a graph G is the matrix

0
−1 −1
1
0

(cid:16) 1

(cid:17)

Q = Q(G) = BBT = D − A,

(1)

where B(Gσ) is the incidence matrix of an oriented
graph Gσ with (arbitrary) orientation σ, and A(G)
and D(G) are, respectively, the adjacency and degree
matrices of G. In the example, Q =
. The
(normalized) Laplacian matrix

(cid:16) 1 −1
−1

0
2 −1
1

0 −1

(cid:17)

L = D−1/2QD−1/2 = I − D−1/2AD−1/2

(2)

is a matrix congruence of the Kirchhoff matrix Q scaled
by the square-root of the degree matrix D1/2. The
generalized or asymmetric Laplacian matrix

Ł = D−1/2LD1/2 = D−1Q = I − D−1A (3)

4

SMITH ET AL.: NETWORK DETECTION

is a similarity transformation of the Laplacian matrix.

In the example, L =
(cid:18) 1 −1
−2−1

(cid:19)

0
1 −2−1
1

0 −1

(cid:18) 1

−2−1/2
0

−2−1/2
1
−2−1/2

0
−2−1/2
1

(cid:19)

and Ł =

. The latter example is immediately

i.e.

recognized as a discretization of the second deriva-
tive −d2/dx2,
the negative of the 1-d Laplacian
operator ∆ = ∂2/∂x2 + ∂2/∂y2 + · · ·
that appears
in numerous physical applications. (This sign is the
convention used in graph theory.) The asymmetric Lapla-
cian Ł = I − D−1A plays an important role in mean-
value theorems involving solutions to Laplace’s equation
Łv = 0, which will be seen to be the motivating equation
behind several network detection algorithms.

The connection between the incidence and Lapla-
cian matrices and physical applications is made through
Green’s ﬁrst
identity, which equates the continuous
Laplacian operator ∆ in terms of the vector gradient
∇ = (∂/∂x, ∂/∂y, . . .)T and motivates the deﬁnition
Q = BBT of the graph Laplacian. Given two arbitrary
“test” functions f (x) and g(x) on a bounded domain
Ω ⊂ Rn with boundary ∂Ω and inner product (cid:104) , (cid:105),
Green’s ﬁrst identity asserts,

(cid:90)

(cid:90)

g∆f dV = −

(cid:104)∇g, ∇f (cid:105) dV +

(cid:90)

g(cid:104)∇f, n(cid:105) dS,

Ω

Ω

∂Ω

(4)
where dV and n dS are the volume and directed sur-
face differentials—this formula generalizes immediately
to Riemannian manifolds. Applying the ﬁnite element
method to this continuous equation yields a graph
arising from, say, Delaunay triangulation and a ma-
trix equation involving the graph Laplacian matrix L
[from g∆f in Eq. (4)] and the normalized outer prod-
uct D−1/2BBTD−1/2 of the incidence matrix [from
(cid:104)∇g, ∇f (cid:105) in Eq. (4)]. This illustrates that
the graph
Laplacian is the standard Laplacian of physics and
mathematics, a connection that explains many theoretical
and performance advantages of the normalized Laplacian
over the Kirchhoff matrix across applications. [11], [45],
[52], [54], [55]

The most important property of the Laplacian matrix
is that the constant vector 1 = (1, . . . , 1)T is in the kernel
of the Laplacian,

Q1 = 0;

Ł1 = 0,

(5)

i.e. 1 is an eigenvector of Q and Ł whose eigenvalue
is zero. This property is the reason for the mean-value
property of harmonic functions, as well as the fact that
the only bounded harmonic functions on an unbounded
domain are necessarily constant, which will play an
important role in optimum network detection. This is
a key fact because many network detection algorithms

involve solutions to Laplace’s equation, however this
constant solution does not distinguish between vertices
at all, a deﬁciency that may be resolved in a variety
of ways, yielding a family of network detection algo-
rithms. Furthermore, the geometric multiplicity of the
zero eigenvalue equals the number of connected compo-
nents of the graph, though because a connected graph
is implicit for the subgraph detection problem, we may
assume that the kernel of the graph Laplacian is simply
the one-dimensional subspace (1) = { α1 : α ∈ R }.

III. OPTIMUM NETWORK DETECTION

Two different optimality criteria are used for the
two different strategies of network detection: various
connectivity metrics are used for predictive methods, and
detection performance is used for subject-based meth-
ods. Detection optimality means, as usual, optimality
in the Neyman-Pearson sense in which the probability
of detection is maximized at a ﬁxed false alarm rate.
In the context of networks, the probability of detec-
tion (PD) refers to the fraction of vertices detected
belonging to the threat subgraph, and the probability of
false alarm (PFA) refers to the fraction of non-threat
vertices detected. As in classical detection theory, [51]
the optimal detector is a threshold of the log-likelihood
ratio (LLR), and a new Bayesian framework for network
detection is developed in this section. The distinction
between classical detection theory and network detection
in the form of the optimal detector—
theory is not
the log-likelihood ratio—but
in distinct mathematical
formulations. Whereas linear algebra is the foundation
for classical detection theory, algebraic graph theory
[22] is the foundation for network detection. It follows
that understanding the theory, algorithms, and results
of network detection requires an introduction of some
basic concepts from algebraic graph theory, especially
the graph Laplacian and spectral analysis of graphs.
Familiarization with these objects provides a common
framework of comparing apparently unrelated network
detection algorithms and provides deep insights into
basic problems in network detection theory.

A. Spectral-Based Community Detection

Efﬁcient graph partitioning algorithms and analysis
appeared in the 1970s with Donath and Hoffman’s
eigenvalue-based bounds for graph partitioning [15] and
Fiedler’s connectivity analysis and graph partitioning
algorithm [18], [19] which established the connection
between a graph’s algebraic properties and the spectrum
of its Kirchhoff Laplacian matrix Q = D − A [Eq. (1)].
The spectral methods in this section solve the graph

SMITH ET AL.: NETWORK DETECTION

5

partitioning problem by optimizing various subgraph
connectivity properties.

The cut size of a subgraph—the number of edges
necessary to remove to separate the subgraph from
the graph—is quantiﬁed by the quadratic form sTQs,
where s = (±1, . . . , ±1)T is a ±1-vector who entries
are determined by subgraph membership. [42] Minimiz-
ing this quadratic form over s, whose solution is an
eigenvalue problem for the graph Laplacian, provides
a network detection algorithm based on the model of
minimal cut size. However, there is a paradox in the
application of spectral methods to network detection: the
smallest eigenvalue of the graph Laplacian λ0(Q) = 0
corresponds to the eigenvector 1 constant over all ver-
tices, which fails to discriminate between subgraphs.
Intuitively this degenerate constant solution makes sense
because the two subgraphs with minimal (zero) subgraph
cut size are the entire graph itself (s ≡ 1), or the null
graph (s ≡ −1). This property manifests itself in many
well-known results from complex analysis, such as the
maximum principle.

Fiedler showed that if rather the eigenvector ξ1 corre-
sponding to the second smallest eigenvalue λ1(Q) of Q
is used (many authors write λ1 = 0 and λ2 rather than
the zero offset indexing λ0 = 0 and λ1 used here), then
for every nonpositive constant c ≤ 0, the subgraph whose
vertices are deﬁned by the threshold ξ1 ≥ c is necessarily
connected. This algorithm is called spectral detection.
Given a graph G,
the number λ1(Q) is called the
Fiedler value of G, and the corresponding eigenvector
ξ1(Q) is called the Fiedler vector. Completely analogous
with comparison theorems in Riemannian geometry that
relate topological properties of manifolds to algebraic
properties of the Laplacian, many graph topological
properties are tied to its Laplacian. For example, the
graph’s diameter D and the minimum degree dmin
provide lower and upper bounds for the Fiedler value
λ1(Q): 4/(nD) ≤ λ1(Q) ≤ n/(n − 1)·dmin. [36]
This inequality explains why the Fiedler value is also
called the algebraic connectivity: the greater the Fiedler
value, the smaller the graph diameter, implying greater
graph connectivity. If the normalized Laplacian L of
Eq. (2) is used, the corresponding inequality involving
the generalized eigenvalue λ1(L) = λ1(Q, D) involves
the graph’s diameter D and volume V : 1/(DV ) ≤
λ1(L) ≤ n/(n − 1). [11]

Because in practice spectral detection with its im-
plicit assumption of minimizing the cut size often-
times does not detect intuitively appealing subgraphs,
Newman introduced the alternate criterion of subgraph
“modularity” for subgraph detection. [38] Rather than
minimize the cut size, Newman proposes to maxi-

mize the subgraph connectivity relative to background
graph connectivity, which yields the quadratic maximiza-
tion problem maxs sTMs, where M = A − V −1ddT
is Newman’s modularity matrix, A is the adjacency
matrix, (d)i = di is the degree vector, and V = 1Td
is the graph volume. [38] Newman’s modularity-based
graph partitioning algorithm, also called community de-
tection, involves thresholding the values of the principal
eigenvector of M. Miller et al. [33]–[35] also consider
thresholding arbitrary eigenvectors of the modularity
matrix, which by the Courant minimax principle biases
the Newman community detection algorithm to smaller
subgraphs, a desirable property for many applications.
They also outline an approach for exploiting observations
within the spectral framework. [33]

B. Neyman-Pearson Subgraph Detection

Network detection of a subgraph within a graph
G = (V, E) of order n is treated as n independent binary
hypothesis tests to decide which of the graph’s n vertices
does not belong (null hypothesis H0) or belongs (hy-
pothesis H1) to the network. Maximizing the probability
of detection (PD) for a ﬁxed probability of false alarm
(PFA) yields the Neyman-Pearson test involving the log-
likelihood ratio of the competing hypothesis. We will
derive this test in the context of network detection, which
both illustrates the assumptions that ensure detection
optimality, as well as indicates practical methods for
computing the log-likelihood ratio test and achieving
an optimal network detection algorithm. It will be seen
that a few basic assumptions yield an optimum test
involving the graph Laplacian, which allows comparison
of Neyman-Pearson testing to several other network
detection methods whose algorithms are also related to
the properties of the Laplacian.

Assume that each vertex v ∈ V has an unknown
{0, 1}-valued property Θv which is considered to be
“threat” or “non-threat” at v, and that there exists an
observation vector z : {vi1, . . . , vik} ⊂ V → M ⊂ Rk
from k vertices to a measurement space M . For example,
a direct observation of threat at vertex v may be repre-
sented by the observation z(v) ≡ 1. It is assumed that
the observation z(v) at v and the threat Θv at v are not
independent, i.e. f (cid:0)z(v)|Θv
(cid:1) (cid:54)= f (cid:0)z(v)(cid:1), so that there is
positive mutual information between z(v) and Θv. The
probability density f (cid:0)z(v)|Θv
(cid:1) is called the observation
model, which in this paper is treated as a simple {0, 1}-
valued model δ(cid:0)z(v) − Θv
(cid:1). Though the threat network
hypotheses are being treated here independently at each
vertex,
this framework allows for more sophisticated
global models that include hypotheses over two or more
vertices.

6

SMITH ET AL.: NETWORK DETECTION

An optimum hypothesis test is now derived for the
presence of a network given a set of observations z. Op-
timality is deﬁned in the Neyman-Pearson sense in which
the probability of detection is maximized at a constant
false alarm rate (CFAR). As usual, [51] the derivation
of the optimum test involves the procedure of Lagrange
multipliers. For the general problem of network detection
of a subgraph within graph G of order n, the decision
of which of the 2n hypothesis Θ = (Θv1, . . . , Θvn)T to
choose involves a 2n-ary multiple hypothesis test over
the measurement space of the observation vector z, and
an optimal test involves partitioning the measurement
space into 2n regions yielding a maximum PD. This NP-
hard general combinatoric problem is clearly computa-
tionally and analytically intractable; however, the general
2n-ary multiple hypothesis test may be greatly simpliﬁed
by treating it as n independent binary hypothesis tests.
At each vertex v ∈ G and unknown threat Θ : V →
{0, 1} across the graph , consider the binary hypothesis
test for the unknown value Θv,

H0(v): Θv = 0
H1(v): Θv = 1

(vertex belongs to background)

(vertex belongs to subgraph).

(6)
Given the observation vector z : {vi1, . . . , vik} ⊂ V →
(cid:1), j = 1,
M ⊂ Rk with observation models f (cid:0)z(vij )|Θvij
. . . , k, the PD and PFA are given by the integrals

PD =

PFA =

(cid:90)

R

(cid:90)

R

f (z|Θv = 1) dz,

f (z|Θv = 0) dz,

(7)

(8)

where R ⊂ M is the detection region in which ob-
servations are declared to yield the decision Θv = 1,
otherwise Θv is declared to equal 0. The optimum
Neyman-Pearson test uses the detection region R that
maximizes PD at a ﬁxed CFAR value PFA0. Posing
this optimization problem over R with the method of
Lagrange multipliers applied to the function

F (R, λ) = PD(R) − λ(cid:0)PFA(R) − PFA0
(cid:90)

(cid:1),

(cid:104)(cid:90)

R

f (z|Θv = 0) dz − PFA0

(cid:105)

=

f (z|Θv = 1) dz − λ
R
(cid:90)

=

(cid:2)f (z|Θv = 1) − λf (z|Θv = 0)(cid:3) dz + λ PFA0

R

(9)

yields two conditions to maximize F (R, λ) over R
and λ:

(i)

(ii)

λ > 0,
z ∈ R ⇔ f (z|Θv = 1) − λf (z|Θv = 0) > 0.

The second property yields the likelihood ratio (LR) test,

f (z|Θv = 1)
f (z|Θv = 0)

H1(v)
≷
H0(v)

λ

(10)

that maximizes the probability of detection. As will be
shown in the next section, the numerator f (z|Θv = 1)
of Eq. (10) is easily computed using standard Bayesian
analysis, leading to a “threat propagation” algorithm for
f (Θv|z) and a connection to the Laplacian Ł(G) de-
scribed in Section II, and the denominator f (z|Θv = 0)
is determined by prior background information or simply
the “principle of insufﬁcient reason” [28] in which this
term is a constant.

Because the probability of detecting threat is maxi-
mized at each vertex, the probability of detection for the
entire subgraph is also maximized, yielding an optimum
Neyman-Pearson test under the simpliﬁcation of treating
the 2n-ary multiple hypothesis testing problem as a
sequence of n binary hypothesis tests. Summarizing, the
probability of network detection given an observation z
is maximized by computing f (Θv|z) using a Bayes-
ian “threat propagation” method and applying a simple
likelihood ratio test. The connectivity of the subgraph
whose vertices exceed the threshold is assured by the
maximum principle. Algorithms for computing f (Θv|z)
are described next.

C. Space-Time Threat Propagation

Many important network detection applications, espe-
cially networks based on vehicle tracks and computer
involve directed graphs in
communication networks,
which the edges have departure and arrival times associ-
ated with their initial and terminal vertices. Space-Time
threat propagation is used compute the time-varying
threat across a graph given one or more observations at
speciﬁc vertices and times. [40], [47] In such scenarios,
the time-stamped graph G = (V, E) may be viewed as
a space-time graph GT = (V × T, ET ) where T is the
set of sample times and ET ⊂ [V × T ]2 is an edge
set determined by the temporal correlations between
vertices at speciﬁc times. This edge set is application-
dependent, but must satisfy the two constraints, (1) if
(cid:0)u(tk), v(tl)(cid:1) ∈ ET then (u, v) ∈ E, and (2) temporal
subgraphs (cid:0)(u, v), ET (u, v)(cid:1) between any two vertices
u and v are deﬁned by a temporal model ET (u, v) ⊂
[T (cid:96) T ]2. A concrete example for a speciﬁc dynamic
model of threat propagation is provided below.

1) Temporal Threat Propagation: Given an observed
threat at a particular vertex and time, we wish to compute
the inferred threat across all vertices and all times. This
computation is a straightforward application of Bayesian

SMITH ET AL.: NETWORK DETECTION

7

analysis that results in the optimum Neyman-Pearson
network detection test developed above as well as an
efﬁcient algorithm for computing this test. Given a
vertex v, denote the threat at v and at time t ∈ R by
the { 0, 1 }-valued stochastic process Θv(t), with value
zero indicating no threat, and value unity indicating a
threat. Denote the probability of threat at v at t by

ϑv(t) def= P (cid:0)Θv(t) = 1(cid:1) = P (cid:0)Θv(t)(cid:1).

(11)

The threat state at v is modeled by a ﬁnite-state contin-
uous time Markov jump process between from state 1 to
state 0 with Poisson rate λv. With this simple model the
threat stochastic process Θv(t) satisﬁes the Itˆo stochastic
differential equation,

dΘv = −Θv dNv; Θv(0) = θ1,

(12)

where Nv(t) is a Poisson process with rate λv deﬁned
for positive time, and simple time-reversal provides the
model for negative times. Given an observed threat
z = Θv(0) = 1 at v at t = 0 so that ϑV (0) = 1, the
probability of threat at v under the Poisson process
model (including time-reversal) is

ϑv(t) = P (cid:0)Θv(t)|z = Θv(0) = 1(cid:1) = e−λv|t|,

(13)

This stochastic model provides a Bayesian framework
for inferring, or propagating, threat at a vertex over time
given threat at a speciﬁc time. The function

Kv(t) = e−λv|t|

(14)

of Eq. (13) is called the space-time threat kernel and
when combined with spatial propagation provides a
temporal model ET for a space-time graph. A Bayesian
model for propagating threat from vertex to vertex will
provide a full space-time threat propagation model and
allow for the application of the optimum maximum
likelihood test of Eq. (10).

2) Spatial Threat Propagation: Propagation of threat
from vertex to vertex is determined by tracks or con-
nections between vertices. A straightforward Bayesian
analysis yields nonlinear equations that determine the
probability of threat at each vertex, and along with the
assumptions of asymptotic independence and small prob-
abilities these equations may be linearized and thereby
easily analyzed and solved in regimes relevant to our
applications.

The threat at vertex v at which a single track τ from
vertex u arrives and/or departs at times tv
τ is
determined by Eq. (13) and the (independent) event
v ← u that threat traveled along this track: P (cid:0)Θv(t)(cid:1) =

τ and tu

ϑv(t) = ϑu(tu
transformation

τ )Kv(t − tv

τ )P (v ← u). There is a linear

ϑv(t) = P (v ← u)K(t − tv

τ )ϑu(tu
τ )
τ )δ(σ − tu

P (v ← u)K(t − tv

τ )ϑu(σ) dσ (15)

=

(cid:90) ∞

−∞

from the threat probability at u to v. Discretizing time,
the temporal matrix Kuv
for the discretized operator has
τ
the sparse form
(cid:16)

(cid:17)

Kuv

τ =

0 . . . 0 K(tk − tv

τ ) 0 . . . 0

,

(16)

where 0 represents an all-zero column, tk represents a
vector of discretized time, and the discretized function
K(tk − tv
τ ) appears in the column corresponding to the
discretized time at tu
τ . Threat propagating from vertex v
to u along the same track τ is given by the comparable
expression ϑu(t) = ϑv(tv
τ ), whose discretized
linear operator Kvu
τ

τ )K(t − tu
takes the form

(cid:16)

Kvu

τ =

0 . . . 0 K(tk − tu

τ ) 0 . . . 0

(cid:17)

(17)

[cf. Eq. (16)] where the nonzero column corresponds
to tv
τ will be essential for
practical space-time threat propagation algorithms.

τ . The sparsity of Kuv

τ and Kvu

It will now be shown how threats arriving on other
tracks from other vertices may be sequentially linearized.
If the threat on the track τ from vertex u must be
combined with an existing threat ϑv(t) at v, then the
combined threat ϑv(t±) = P (cid:0)Θv(t±)(cid:1) at v at time t±
immediately after/before the track from u arrives/departs
at time t is determined by the addition law of probability,

P (cid:0)Θv(t) ∪ Θu(t)(v ← u)(cid:1)

= P (cid:0)Θv(t)(cid:1) + P (cid:0)Θu(t)(v ← u)(cid:1)

− P (cid:0)Θv(t)·Θu(t)(v ← u)(cid:1).

(18)

Under the two assumptions that (1) the threat events Θu
and Θv at u and v are independent, asymptotically valid
for large time differences relative to the Poisson time λ−1
v∗
for an observation at vertex v∗, [47] and (2) the threat
probabilities P (cid:0)Θu(t)(cid:1) and P (cid:0)Θv(t)(cid:1) are numerically
small, Eq. (18) yields the linear approximation

ϑv(t±) ≈ P (cid:0)Θv(t)(cid:1) + P (cid:0)Θu(t)(v ← u)(cid:1)

= ϑv(t) + ϑu(t)P (v ← u).

(19)

Extending this analysis to multiple tracks and assuming
that P (v ← u)−1 ∝ w(v) for some weight function
w : V → R of the vertices, e.g., the degree of each
vertex, yields the threat propagation equation

ϑ = D−1Aϑ,

(20)

8

SMITH ET AL.: NETWORK DETECTION

where ϑ is the (discretized) space-time vector of threat
probabilities, the weighted space-time adjacency matrix

results in a threshold of the harmonic space-time threat
propagation vector

Auv =

(cid:18) 0
(cid:80)

l Kuv
τl

(cid:19)

(cid:80)

l Kvu
τl
0

(21)

ϑ

H1≷
H0

threshold,

(25)

by

Eq.

(16),

and D−1

deﬁned

=
is
diag(cid:0)w(v1)I, . . . , w(vn)I(cid:1). Eq. (20), written as Łϑ = 0,
connects the asymmetric Laplacian matrix of Eq. (3)
with threat propagation,
the solution of which itself
may be viewed as a boundary value problem with the
harmonic operator Ł.

Given a cue at vertices vb1, . . . , vbC , the harmonic

space-time threat propagation equation is

(cid:16)

Łii Łib

(cid:17)

(cid:17)(cid:16) ϑi
ϑb

= 0

(22)

(cid:17)

(cid:16) Łii
Łbi
(cid:17)

where the space-time Laplacian Ł =

Łib
Łbb
the space-time threat vector ϑ =
have been
permuted so that cued vertices are in the ‘b’ blocks
(the “boundary”), non-cued vertices are in ‘i’ blocks (the
“interior”), and the cued space-time vector ϑb is given.
The harmonic threat is the solution to Eq. (22),

(cid:16) ϑi
ϑb

and

ϑi = −Ł−1

ii (Łibϑb).

(23)

The space-time Laplacian of Eq. (3) is a directed Lapla-
cian matrix, and that Eq. (22) is directly analogous to
Laplace’s equation ∆ϕ = 0 given a ﬁxed boundary con-
dition. As discussed in the next subsection, the connec-
tion between space-time threat propagation and harmonic
graph analysis also provides a link to spectral-based
methods for network detection. The nonnegativity of the
harmonic threat of Eq. (23) is guaranteed because the
space-time adjacency matrix A and cued threat vector ϑb
are both nonnegative. This highly sparse linear system
may be solved by the biconjugate gradient method,
which provides a practical computational approach that
scales well to graphs with thousands of vertices and thou-
sands of time samples, resulting in space-time graphs
of order ten million or more. In practice, signiﬁcantly
smaller subgraphs are encountered in applications such
as threat network discovery [46], for which linear solvers
with sparse systems are extremely fast.

Finally, a simple application of Bayes’ theorem to
the harmonic threat ϑv = f (Θv|z) provides the optimum
Neyman-Pearson detector [Eq. (10)] developed in Sec-
tion III-B because

f (z|Θv = 1)
f (z|Θv = 0)

=

f (Θv = 1|z)
f (Θv = 0|z)

·

f (Θv = 0)
f (Θv = 1)

=

ϑv
f (Θv = 0|z)

·

f (Θv = 1)
f (Θv = 0)

H1(v)
≷
H0(v)

λ,

(24)

possibly weighted by a nonuniform null distribu-
tion f (Θv = 0|z), with the normalizing constant
f (Θv = 1)/f (Θv = 0) being absorbed into the detection
threshold. This establishes, under the assumptions and
approximations enumerated above, the detection opti-
mality of harmonic space-time threat propagation.

D. Insights from Spectral Graph Theory

Each network detection algorithm above can be com-
pared to each other by different approaches taken to
address the problem posed by the (physical) fact that
the smallest eigenvalue of the graph Laplacian is zero:
Q1 = 0·1. Fiedler’s spectral detection, which minimizes
the network cut size, thresholds the eigenvector cor-
responding to the second smallest eigenvalue of the
Laplacian—the Fiedler value. In contrast, community
detection, which maximizes the subgraph connectivity
relative to the background, recasts the objective of spec-
tral detection resulting in a threshold of the principal
or other eigenvectors of Newman’s modularity matrix
M = A − V −1ddT. Alternatively, threat propagation,
which maximizes the Bayesian probability of detection
by computing the harmonic solution to Laplace’s equa-
tion, Łϑ = 0, but treats this as a boundary value problem
with observations representing the boundary values and
unknown values representing the interior.

E. Computational Complexity

Depending upon sparsity, the computational complex-
ity of spectral methods ranges from O(n log n)–O(n2)
for principal eigenvector methods [38] to O(n2 log n)–
O(n3) for methods that rely on full eigensolvers [33]–
[35], with the lower cost exhibited with graphs whose
average degree is over log n, below which a random
Erd˝os-R´enyi graph is almost surely disconnected. [16]
The cost of harmonic methods is about O(n log n)–
O(n2) for sparse matrix inversion and also depends
upon the graph’s sparsity. In practice, Arnoldi iteration
can be used for sparse eigenvalue computation and the
biconjugate gradient method can be used for sparse
matrix inversion.

IV. NETWORK DETECTION PERFORMANCE

There are two ways to demonstrate network detection
performance: empirical and theoretical, both of which
depend on detailed knowledge of network behavior and

SMITH ET AL.: NETWORK DETECTION

9

Fig. 2. Bayesian generative model for the network simulation with N nodes, K communities, and L ”lifestyles” (distributions of community
participation). Shaded squares are model parameters for tuning and circles are variables drawn during simulation.

dynamics. But full knowledge of real-world covert net-
work behavior including relationships to the background
network is, by design, extraordinarily rare or nonexistent,
though partial information about many covert networks
has been integrated over time [57]. Predicting perfor-
mance of network detection methods requires details
of the interconnectivity of both the foreground and
background networks. Empirical detection performance
is demonstrated using either a real-world or simulated
dataset for which the truth is at least partially known, and
theoretical performance predictions are derived based
upon statistical assumptions about the foreground and
background networks. To date, closed-form analytic per-
formance predictions have been accomplished for very
simple network models,
i.e. cliques [20], [31], [37]
or dense subgraphs [4] embedded within Erd˝os-R´enyi
backgrounds, and there are no theoretical results at all
for space-time graphs or realistic models appropriate
for covert networks. Therefore, realistic models are es-
sential for performance analysis of network detection
algorithms. There are two basic approaches to modeling
networks: stochastic models, which attempt to capture
the aggregate statistical properties of networks, and
agent-based models, which attempt to describe speciﬁc
behaviors. In general, stochastic models have greater
tractability because they do not rely on the detailed
description of actions or objectives of a speciﬁc network.

The empirical detection performance of the covert
network detection algorithms described above will be
computed using a Monte-Carlo analysis based upon a
new stochastic blockmodel. Empirical performance pre-
dictions may be also based on a single dataset, oftentimes
a practical necessity for real-world measurements. Detec-
tion performance for speciﬁc, real-world single datasets
is illustrated in an accompanying paper. [59]

A. Covert Network Stochastic Blockmodel

To adhere with observed phenomenology of real-
world networks, realistic network models should exhibit
properties including connectedness, a power-law degree
distribution (the “small world” property), membership-
based community structure, sparsity, and temporal co-
ordination. No one simple network model captures all
these traits, e.g. Erd˝os-R´enyi graphs can be almost
surely connected, though do not exhibit a power-law
density, power-law models such as R-MAT [9] do not ex-
hibit a membership-based network structure, and mixed-
membership stochastic blockmodels [2] do not include
temporal coordination. To achieve a realistic network
model possessing this range of properties, we propose a
new statistical-based model with parameterized control
over the generation of interactions between network
nodes. The proposed model is depicted in Fig. 2 using
plate notation.

1) Spatial Stochastic Blockmodel: The proposed
model may be viewed as an aggregation of the several
simpler models of which it is comprised: Erd˝os-R´enyi
(dominant at low degrees), [16] Chung-Lu (dominant at
high degrees), [1] and a mixed-membership blockmodel
that models community interactions. [2] The overall
network model is approximated by each of the simpler
models in the regime where the simple model dominates.
The Erd˝os-R´enyi model deﬁnes the overall sparsity and
connectivity. The Chung-Lu model creates a power-law
degree distribution empirically consistent with a broad
range of real-world networks. The stochastic blockmodel
creates distinct communities each with their own param-
eterized interaction models.

The space-time graph of

the proposed mixed-
membership stochastic blockmodel is determined by a
connectivity model and temporal model. Let N be the
total number of nodes, and K be the number of com-

X (L × K) i(K) N iN N × N ijijmS B (K × K) ijijMembership DegreeCommunity Sparsityil(K) (L) jiz(K) ijz(K) (K) (K) (K × K) 10

SMITH ET AL.: NETWORK DETECTION

Fig. 3.
Adjacency matrix of a stochastic blockmodel with a
foreground subgraph whose intra-activity is 50% more than of all
other subgraphs.

Fig. 4. Graph of the adjacency matrix shown in Figure 3. The
foreground graph and intra subgraph edges are shown in red.

munities. Each node divides its time among at least one
of the several K communities, and the number of ways
in which a node distributes its time among the different
communities is discretized into L distinct “lifestyles.”
Each node is assigned to a speciﬁc lifestyle. For example,
nodes 1 and 3 may spend all their time in community 1,
thereby sharing the same lifestyle, whereas node 2 may
spend half its time in community 1 and half in commu-
nity 2, and therefore occupies another lifestyle, and so
forth. The rate λij of interactions between nodes i = 1
and j is given by the product

λij = I S
ij ·

λiλj
(cid:80)
k λk

· zT

i→jBzi→j,

(26)

where the ﬁrst term I S
R´enyi model, the second term λiλj/(cid:0)(cid:80)
the Chung-Lu model, and the third term zT
represents the stochastic blockmodel.

ij represents the (modiﬁed) Erd˝os-
(cid:1) represents
i→jBzi→j

k λk

At each node-to-node interaction, a random draw from
a multinomial distribution determines the community to
which each node belongs. The indicator function I S
ij is a
sparse K-by-K (0, 1)-matrix whose entries are binomial
random variables with probability (S)ab for node i in
community a and node j in community b. An Erd˝os-
R´enyi sparsity model has (S)ab ≡ p for all communities
a and b, whereas this modiﬁed sparsity model allows
the possible of differing interaction rates within and
across communities. The Chung-Lu term λiλj/(cid:0)(cid:80)
(cid:1)
k λk
is determined by the per-node expected degrees λi, i = 1,
. . . , N , which are themselves drawn from a power-law
distribution of parameter α ∈ RN . The blockmodel term
i→jBzi→j is determined by B, a K-by-K matrix of the
zT
rate of interaction between communities, and zi→j ∈ RK

is an indicator (01)-vector is the community to which
node i belongs when interacting with node j. This
community is the same over the entire simulation and is
drawn from a multinomial over πi ∈ RK, node i’s distri-
bution over communities. Finally, the distribution of π is
drawn from a Dirichlet r.v. with concentration parameter
lT
i X. Node i’s lifestyle, li is a multinomial draw with the
lifestyle probability φ ∈ RL. The adjacency matrix and
graph of this model are illustrated in Figs. 3 and 4 using
an example with a mixed community with a higher level
of activity for the foreground network.

2) Temporal Stochastic Blockmodel: The meeting
times for each interaction are chosen independently of
the spatial model. Real-world interactions are often coor-
dinated, with many individuals arriving or leaving from
a location at a set of pre-deﬁned times. This behavior is
parameterized by an average number of meeting times
Ψ ∈ RK for each community. The simulated number
of meeting times is a Poisson r.v. (offset by 1) with
Poisson parameter Ψ − 1. E.g. an expected number of
meeting times (Ψ)k = 1 (for community k) yields a
constant Poisson r.v. of 1 meeting time (in Matlab,
poissrnd(0) = 0), thereby yielding a community
whose activities are tightly coordinated because there
is only a single time for the members to meet. An
expected number of meeting times (Ψ)k = 20 yields
a community whose activities are loosely coordinated
because meetings may occur at any one of a number
of times. The meetings times themselves are chosen
uniformly over time, and each node arrives at the meet-
ing time perturbed by a zero-mean Gaussian r.v. with a
parameterized variance.

11002001100200SMITH ET AL.: NETWORK DETECTION

11

Receiver operating characteristics versus forground co-
Fig. 5.
ordination (Ψforeground = 1.5, high coordination, and 20,
low
coordination) for space-time threat propagation (STTP) and spectral-
based community detection (SPEC). The community activity level
Sk = 1· log Nk/Nk for all communities. [1000 Monte Carlo trials.]

Fig. 6. Receiver operating characteristics versus foreground activity
(Sfg = 2· log Nfg/Nfg, high activity, and 1· log Nfg/Nfg, baseline
activity) for space-time threat propagation (STTP) and spectral-based
community detection (SPEC). The foreground coordination level is
speciﬁed by Ψfg = 20 average number of meeting times. [1000
Monte Carlo trials.]

B. Network Detection Results

The detection performance of the network detection
algorithms described above is presented in this section
using empirical Monte Carlo results applied to the
mixed-membership stochastic blockmodel. A space-time
graph is chosen independently for each Monte Carlo
trial. A set of baseline parameters is chosen to achieve
realistic foreground and background networks of speciﬁc
sizes, and excursions are performed on the parameters
controlling foreground coordination and foreground ac-
tivity. The performance metric is the standard receiver
operating characteristic (ROC), which in the case of net-
work detection is the probability of detection (measured
as the percentage of true foreground nodes detected)
versus the number or percentage of false alarms (the
number of background nodes detected) as the detection
threshold is varied. Perfect ROC performance is a 100%
detection rate with a 0% false alarm rate, and the worst
possible performance is a detection rate equal to chance,
i.e. equal to the false alarm rate.

1) Baseline Model: A baseline model is used com-
prised of eleven lifestyles spanning ten communities.
Two of
the lifestyles are designated as foreground
lifestyles and all others are “background.” As detail
above, each lifestyle has a propensity toward a different
mix of community activity. The background lifestyles
have a power-law distribution of membership over the
background communities, which may be imagined to
represent business, homes,
industry, religion, sports,
interactions. Two distinct foreground
or other social
lifestyles are used to model the compartmentalization

of real-world covert networks. One foreground lifestyle
associates uniformly across background communities,
whereas the other foreground lifestyle has a strong
association with a only small subset of background com-
munities. These foreground lifestyles may be imagined
to represent specialized functions or activities within the
covert network. As in real life, the foreground lifestyles
comprise only a tiny fraction of the entire population.

Interactions in which two nodes belong to the same
community occur at a higher rate than interactions
of nodes belonging to different communities. This is
modeled by specifying that the block matrix B be di-
agonally dominant, perhaps strongly. Furthermore, real-
thus for a
world communities are not disconnected,
community size of Nk, the diagonals of the Erd˝os-R´enyi
sparsity parameter matrix Sk must be at least log Nk/Nk
to ensure that each community is almost surelycon-
nected [16]. Finally, covert networks necessarily have
sparse—not clique-like—structure, thus the Erd˝os-R´enyi
sparsity parameter S for the covert network must also be
low.

2) Detection versus Foreground Coordination and Ac-
tivity: Two nominal values are chosen for foreground
coordination and foreground activity, then both space-
time threat propagation and spectral-based community
detection algorithms are applied using a randomized cue
over 1000 Monte Carlo trials. Fig. 5 shows the detec-
tion performance of both algorithms as the foreground
coordination changes from a high of Ψfg = 1.5 average
number of meeting times to a low of Ψfg = 20. As

050100050100PFA (%)PD (%)STTP (Coord. 1.5)STTP (Coord. 20)SPEC (Coord. 1.5)SPEC (Coord. 20)050100050100PFA (%)PD (%)STTP (2·log Nfg/Nfg)STTP (1·log Nfg/Nfg)SPEC (2·log Nfg/Nfg)SPEC (1·log Nfg/Nfg)12

SMITH ET AL.: NETWORK DETECTION

predicted, the detection performance of space-time threat
propagation improves as the temporal coordination of
the foreground network increases. The optimality of
this Bayesian network detector is predicated on tem-
poral coordination, and decreased coordination makes
the foreground network more difﬁcult to detect. This
example uses a constant baseline level of community
activity (sparsity matrix Sfg = 1· log Nfg/Nfg),
thus
the optimality assumption of high foreground activity
made by spectral-based community detection algorithm
is violated, and as expected this spectral algorithm does
no better than chance for either coordination level.
Fig. 6 shows the detection performance of both algo-
rithms as the foreground activity changes from Sfg =
1· log Nfg/Nfg (baseline activity) to Sfg = 2· log Nfg/Nfg
(high activity). The foreground coordination level is low,
at Ψfg = 20, providing an example for which none of
the basic algorithmic assumptions hold for either space-
time threat propagation or spectral-based community
detection. The low foreground activity results, Sfg =
1· log Nfg/Nfg, are replicated in this ﬁgure from Fig. 5,
in which STTP yields moderate detection performance
and spectral-based community detection is no better than
chance. At high foreground activity the foreground net-
work is detectable at by both spectral-based community
detection and space-time threat propagation.

V. CONCLUSIONS

The problem of covert network detection is analyzed
from the perspectives of graph partitioning and alge-
braic graph theory. Network detection is addressed as a
special case of graph partitioning in which membership
in a small subgraph of interest must be determined,
and a common framework is developed to analyze and
compare different network detection methods. A new
Bayesian network detection framework called space-
time threat propagation is introduced that partitions the
graph based on prior information and direct observations.
Space-time threat propagation is shown to be optimum
in the Neyman-Pearson sense subject to the assumption
that threat networks are connected by edges temporally
correlated to a cue or observation. Bayesian space-time
threat propagation is interpreted as the solution to a
harmonic boundary value problem on the graph, in which
a linear approximation to Bayes’ rule determines deter-
mines the unknown probability of threat on the uncued
nodes (the “interior”) based on threat observations at cue
nodes (the “boundary”). This new method is compared
to well-known spectral methods by examining competing
notions of network detection optimality. Finally, a new
generative mixed-membership stochastic blockmodel is

introduced for performance prediction network detec-
tion algorithms. The parameterized model combines key
real-world aspects of several random graph models:
Erd˝os-R´enyi for sparsity and connectivity, Chung-Lu for
power-law degree distributions, and a mixed-membership
stochastic blockmodel for distinctive community-based
interaction and dynamics. This model is used to compute
empirical detection performance results for the detection
algorithms described in the paper as both foreground
coordination and activity levels are varied. Though the
results in the paper are empirical, it is our hope that both
the paper’s analytic results and performance modeling
will be useful in future closed-form analysis of real-
world covert network detection problems.

REFERENCES

[1] W. AIELLO, F. CHUNG, and L. LU. “A random graph model
for power law graphs,” Experimental Mathematics 10 (1) : 53–
66 (2001).

[2] E. M. AIROLDI, D. M. BLEI, S. E. FIENBERG, and E. P. XING.
“Mixed-membership stochastic blockmodels,” JMLR 9 : 1981–
2014 (2008).

[3] M. ALANYALI, S. VENKATESH, O. SAVAS, and S. AERON.
“Distributed Bayesian hypothesis testing in sensor networks,”
in Proc. 2005 American Control Conf. Boston MA, pp. 5369–
5374 (2004).

[4] E. ARIAS-CASTRO and N. VERZELEN. “Community Detection
in Random Networks,” arXiv:1302.7099 [math.ST].
Accessed 18 March 2013. (cid:104)http://arxiv.org/abs/1302.7099(cid:105).
[5] M. BELKIN and P. NIYOGI. “Laplacian eigenmaps for dimen-
sionality reduction and data representation,” Neural Computa-
tion 15 : 1373–1396 (2003).

[6] A. BRUN, H. KNUTSSON, H. J. PARK, M. E. SHEN-
TON, and C.-F. WESTIN. “Clustering ﬁber
tracts using
normalized cuts,” in Proc. Medical Image Computing and
Computer-Assisted Intervention (MICCAI 04) (2004). Accessed
3 September 2012. (cid:104)http://lmi.bwh.harvard.edu/papers/papers/
brunMICCAI04.html(cid:105).

[7] K. CARLEY. “Estimating vulnerabilities in large covert net-
works,” in Proc. 16th Intl. Symp. Command and Control Re-
search and Tech. (ICCRTS). (San Diego, CA) (2004).

[8] K. M. CARTER, R. RAICH, and A. O. HERO III. “On Local
Intrinsic Dimension Estimation and Its Applications,” IEEE
Trans. Signal Processing 58 (2) : 650–663 (2010).

[9] D. CHAKRABARTI, Y. ZHAN, and C. FALOUTSOS. “R-MAT:
A Recursive Model for Graph Mining,” in Proc. 2004 SIAM
Intl. Conf. Data Mining. (2004).

[10] J.-F. CHAMBERLAND and V. V. VEERAVALLI. “Decentralized
detection in sensor networks,” IEEE Trans. Signal Processing
51 (2) : 407–416 (2003).

[11] F. R. K. CHUNG. Spectral Graph Theory, Regional Conference
Series in Mathematics 92. Providence, RI: American Mathe-
matical Society (1994).

[12] J. A. COSTA and A. O. HERO III. “Geodesic entropic graphs
for dimension and entropy estimation in manifold learning,”
IEEE Trans. Signal Processing 52 (8) : 2210–2221 (2004).
[13] R. DIESTEL. Graph Theory. New York: Springer-Verlag, Inc.

(2000).

[14] DOCTOR WEB.

“Doctor Web exposes 550 000 strong
Mac botnet”, 4 April 2012, accessed 3 September 2012
(cid:104)http://news.drweb.com/show/?i=2341(cid:105).

[15] W. E. DONATH and A. J. HOFFMAN. “Lower bounds for the
partitioning of graphs,” IBM J. Res. Development 17 : 420–425
(1973).

SMITH ET AL.: NETWORK DETECTION

13

[16] P. ERD ˝OS and A. R ´ENYI, “On the evolution of random graphs,”
Pubs. Mathematical Institute of the Hungarian Academy of
Sciences 5 : 17–61 (1960).

[41] J. W. PERRY et al. Protecting Individual Privacy in the Struggle
Against Terrorists: A Framework for Program Assessment. The
National Academies Press (2008).

[42] A. POTHEN, H. SIMON, and K.-P. LIOU. “Partitioning sparse
matrices with eigenvectors of graphs,” SIAM J. Matrix Anal.
Appl. 11 : 430–45 (1990).

[43] M. SAGEMAN. Understanding Terror Networks. Philadelphia,

PA: U. Pennsylvania Press (2004).

[44] A. SHAMIR. “A survey on mesh segmentation techniques,”
Computer Graphics Forum 27 (6) : 1539–1556 (2008). Accessed
3 September 2012 (cid:104)http://www.faculty.idc.ac.il/arik/site/mesh-
segment.asp(cid:105).

[45] J. SHI and J. MALIK. “Normalized cuts and image segmenta-
tion,” IEEE Trans. Pattern Anal. Mach. Intell. 22 (8) : 888-905
(2000).

[46] S. T. SMITH, A. SILBERFARB, S. PHILIPS, E. K. KAO, and
C. C. ANDERSON. “Network Discovery Using Wide-Area
Surveillance Data,” in Proc. 14th Intl. Conf. Informat. Fusion
(FUSION). Chicago, IL (2011).

[47] S. T. SMITH, S. PHILIPS, and E. K. KAO. “Harmonic space-
time threat propagation for graph detection,” in Proc. IEEE
Intl. Conf. Acoustics, Speech and Signal Processing (ICASSP).
Kyoto, Japan (2012).

[48] TELEGEOGRAPHY.
Inc.

“Global
Accessed

Trafﬁc
3

PriMetrica,
(cid:104)http://www.telegeography.com/telecom-maps/global-trafﬁc-
map/index.html(cid:105).

September

Map

2010,”
2012

[49] R. TRINQUIER. Modern Warfare: A French View of Counterin-
surgency. Westport, CT: Praeger Security International (2006).
[50] UNITED STATES ARMY. Counterinsurgency: Field Manual
3-24, Appendix B. Washington: Government Printing Ofﬁce
(2006).

[51] H. L. VAN TREES. Detection, Estimation, and Modulation
Theory, Part 1. New York: John Wiley and Sons, Inc. (1968).
[52] U. VON LUXBURG, O. BOUSQUET, and M. BELKIN. “Limits
of spectral clustering,” in Advances in Neural Information
Processing Systems 17, eds. L. K. SAUL, Y. WEISS, and L.
BOTTOU. Cambridge, MA: MIT Press (2005).

[53] D. J. WATTS. “Networks, dynamics, and the small-world
phenomenon,” American Journal of Sociology 13 (2) : 493–527
(1999).

[54] Y. WEISS. “Segmentation using eigenvectors: A unifying view,”
in Proc. of the Intl. Conf. Computer Vision 2 : 975 (1999).
[55] S. WHITE and P. SMYTH. “A spectral clustering approach to
ﬁnding communities in graphs,” in Proc. 5th SIAM Intl. Conf.
Data Mining, eds. H. KARGUPTA, J. SRIVASTAVA, C. KA-
MATH, and A. GOODMAN. Philadelphia PA, pp. 76–84 (2005.)
[56] H. WOLKOWICZ and Q. ZHAO. “Semideﬁnite programming re-
laxations for the graph partitioning problem,” Discrete Applied
Mathematics 96–97 : 461–479 (1999).

[57] J. XU and H. CHEN. “The topology of dark networks,” Comm.

ACM 51 (10) : 58–65 (2008).

[58] L. YANG. “Data Embedding Research,” Western Michigan Uni-
versity. Accessed 3 September 2012 (cid:104)http://www.cs.wmich.edu/
˜yang/research/dembed/(cid:105).

[59] M. J. YEE, S. PHILIPS, G. R. CONDON, P. B. JONES, E. K.
KAO, S. T. SMITH, C. C. ANDERSON, and F. R. WAUGH. “Net-
work discovery with multi-source intelligence, surveillance, and
reconnaissance,” Lincoln Laboratory J., to appear.

[17] J. P. FERRY, D. LO, S .T. AHEARN, and A. M. PHILLIPS.
“Network detection theory,” in Mathematical Methods in Coun-
terterrorism, eds. N. MEMON et al., pp. 161–181, Vienna:
Springer (2009).

[18] M. FIEDLER. “Algebraic connectivity of graphs,” Czech. Math.

J. 23 (2) : 298–305 (1973).

[19]

. “A property of eigenvectors of non-negative symmetric
matrices and its application to graph theory,” Czech. Math. J.
25 : 619–633 (1975).

[20] S. FORTUNATO and M. BARTH ´ELEMY. “Resolution limit in

community detection,” PNAS 104 (1) : 36–41 (2007).

[21] S. FORTUNATO. “Community detection in graphs,” Physics

Reports 486 : 75–174 (2010).

[22] C. GODSIL and G. ROYLE. Algebraic Graph Theory.

New York: Springer-Verlag, Inc. (2001).

[23] GOOGLE.

“The

re-
sults,” Accessed 3 September 2012 (cid:104)http://www.google.com/
onceuponatime/technology/pigeonrank.html(cid:105).

technology behind Google’s great

[24] K. G. GURUHARSHA et al. “A protein complex network
of Drosophila melanogaster,” Cell 147 (3) : 690–703 (2011).
Accessed 3 September 2012 (cid:104)http://www.sciencedirect.com/
science/article/pii/S0092867411010804(cid:105).

[25] M. O. JACKSON. Social and Economic Networks, Princeton U.

Press (2008).

[26] J. JONAS and J. HARPER. “Effective counterterrorism and the
limited role of predictive data mining,” Policy Analysis 584.
Cato Institute (2006).

[27] S. KAR, S. ALDOSARI, and J. F. MOURA. “Topology for
distributed inference on graphs,” IEEE Trans. Signal Processing
56 (6) : 2609–2613 (2008).

[28] J. M. KEYNES. A Treatise on Probability. London: Macmillan

and Co. (1921).

[29] D. KOLLER and N. FRIEDMAN. Probabilistic Graphical Mod-

els. Cambridge, MA: MIT Press (2009).

[30] V. E. KREBS. “Uncloaking terrorist networks,” First Monday

7 (4) (2002).

[31] J. M. KUMPULA, J. SARAM ¨AKI, K. KASKI, and J. KERT ´ESZ.
“Limited resolution in complex network community detection
with Potts model approach,” Eur. Phys. J. B 56 : 41–45 (2007).
[32] J. LESKOVEC, K. J. LANG, and M. MAHONEY. “Empirical
comparison of algorithms for network community detection,”
in Proc. 19th Intl. Conf. World Wide Web (WWW’10). Raleigh,
NC, pp. 631–640 (2010).

[33] B. A. MILLER, M. S. BEARD, and N. T. BLISS. “Eigenspace
Analysis for Threat Detection in Social Networks,” in Proc. 14th
Intl. Conf. Informat. Fusion (FUSION). Chicago, IL (2011).

[34] B. A. MILLER, N. T. BLISS, and P. J. WOLFE. “Toward signal
processing theory for graphs and other non-Euclidean data,” in
Proc. IEEE Intl. Conf. Acoustics, Speech and Signal Processing,
pp. 5414–5417 (2010).

[35]

. “Subgraph detection using eigenvector L1 norms,”
in Proc. 2010 Neural Information Processing Systems (NIPS).
Vancouver, Canada (2010).

[36] B. MOHAR. “The Laplacian Spectrum of Graphs,” in Graph
Theory, Combinatorics, and Applications, 2, eds. Y. ALAVI,
G. CHARTRAND, O. R. OELLERMANN, and A. J. SCHWENK.
New York: Wiley, pp. 871–898 (1991).

[37] R. R. NADAKUDITI and M. E. J. NEWMAN. “Graph spectra
and the detectability of community structure in networks,” Phys.
Rev. Lett. 108, 188701 (2012).

[38] M. E. J. NEWMAN. “Finding community structure in networks
using the eigenvectors of matrices,” Phys. Rev. E, 74 (3) (2006).
. Networks: An Introduction.p Oxford U. Press (2010).
[39]
[40] S. PHILIPS, E. K. KAO, M. YEE, and C. C. ANDERSON. “De-
tecting activity-based communities using dynamic membership
propagation,” in Proc. IEEE Intl. Conf. Acoustics, Speech and
Signal Processing (ICASSP). Kyoto, Japan (2012).

