2
2
0
2

b
e
F
6
1

]

R
C
.
s
c
[

1
v
3
8
8
7
0
.
2
0
2
2
:
v
i
X
r
a

cGraph: Graph Based Extensible Predictive Domain Threat
Intelligence Platform

Wathsara Daluwatta†, Ravindu De Silva†, Sanduni Kariyawasam†, Mohamed Nabeel‡, Charith
Elvitigala†, Kasun De Zoysa†, Chamath Keppitiyagama†
†University of Colombo School of Computing
‡Qatar Computing Research Institute
Sri Lanka, Qatar

ABSTRACT
Ability to effectively investigate indicators of compromise and as-
sociated network resources involved in cyber attacks is paramount
not only to identify affected network resources but also to detect
related malicious resources. Today, most of the cyber threat in-
telligence platforms are reactive in that they can identify attack
resources only after the attack is carried out. Further, these sys-
tems have limited functionality to investigate associated network
resources. In this work, we propose an extensible predictive cyber
threat intelligence platform called cGraph that addresses the above
limitations. cGraph is built as a graph-first system where investi-
gators can explore network resources utilizing a graph based API.
Further, cGraph provides real-time predictive capabilities based on
state-of-the-art inference algorithms to predict malicious domains
from network graphs with a few known malicious and benign seeds.
To the best of our knowledge, cGraph is the only threat intelligence
platform to do so. cGraph is extensible in that additional network
resources can be added to the system transparently.

KEYWORDS
malicious domains, belief propagation, graph inference, kubernetes,
apache spark

ACM Reference Format:
Wathsara Daluwatta†, Ravindu De Silva†, Sanduni Kariyawasam†, Mo-
hamed Nabeel‡, Charith Elvitigala†, Kasun De Zoysa†, Chamath Keppitiyagama†.
2022. cGraph: Graph Based Extensible Predictive Domain Threat Intelligence
Platform. In Proceedings of Online, hosted by Lyon, France (WWW). ACM,
New York, NY, USA, 4 pages. https://doi.org/10.1145/nnnnnnn.nnnnnnn

1 INTRODUCTION
Internet domains are the launch pad for many cyber attacks we
observe nowadays. One effective way to reduce the damage caused
by such attacks is to identify the domains involved early and take
actions such as blocking, taking down or sinkholing. Further, these
malicious domains have underlying associations with other Inter-
net resources that help to uncover malicious infrastructures. We
observe that existing threat intelligence systems ,such as Cisco

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
WWW, April 25-29, 2022, The Web Conference 2022
© 2022 Association for Computing Machinery.
ACM ISBN 978-x-xxxx-xxxx-x/YY/MM. . . $15.00
https://doi.org/10.1145/nnnnnnn.nnnnnnn

Umbrella Investigate and Anomali, fail to take advantage of such
associations to detect stealthy malicious domains nor do they cap-
ture such associations in a user-friendly graphical form that allows
users to easily explore related Internet resources. All these solutions
are reactive in nature and by the time security operation teams
observe them the damage is already done. A predictive solution
would immensely assist in mitigating such therats. Motivated by
these gaps in the industry, we build a proactive threat intelligence
platform that can uncover malicious domains early and visualize
associated Internet resources in a graph format for easy analysis.
Building an investigation platform in this domain involves a
unique set of challenges. First, the amount of data one needs to
process on a daily basis is huge. On average, we observe around
850 million network records per day. Second, the network data is
highly dynamic. For example, domains change their hosting IPs
periodically, the ownership of IPs change over time, new domains
are created and existing domains cease to exist. Third, intelligence
sources such as Phishtank, VirusTotal and GSB, contain limited
information about the status of domain and they are slow to detect
malicious domains [7]. This is due to the fact that most of such
systems rely on either website content or user accessing of these
websites to ascertain whether they are malicious or not. Providing
timely and up-to-date intelligence is thus a challenge on its own.
Fourth, network data, though mostly structured, is available in dif-
ferent data formats and these formats over time. Fifth, collecting
additional network data and intelligence seeds is often rate lim-
ited and encounter frequent network failures. Sixth, storage and
retrieval of huge amounts of graph data, especially in community
databases, are not demonstrated to work reliably in practice.

In this work, we build a system called cGraph to address the
above mentioned limitations. We design to implement a scalable big
data processing pipeline that can ingest billions of disparate reports
daily. In order to track the changes over time, we build succinct
snapshots of the whole Internet on a daily basis. cGraph provides
predictive intelligence by incorporating state of the art graph infer-
ence based malicious domain prediction techniques [7]. In order to
make the system oblivious to data format changes, cGraph provides
one level of indirection to ingest data as common schema into the
system. This allows one to incorporate data format changes without
requiring to change the data processing pipeline allowing to extend
with additional data sources transparently. Further, unlike prior
work [7] which utilizes static graphs to infer malicious domains,
cGraph is able to construct a graph around the domain in question
on the fly and generate real-time intelligence. This gives cGraph to
predict the maliciousness of any domain provided there are seed
domains in the neighborhood.

 
 
 
 
 
 
WWW, April 25-29, 2022, The Web Conference 2022

Daluwatta et al.

Demonstration Scenarios: cGraph assists in domain threat
investigation as well as identification of associated malicious do-
mains 1. We show three use cases: (1) searching for impersonating
domains and discovering related malicious domains, (2) real-time
reputation score for a domain via a browser based plugin, and (3) in-
vestigation of the evaluation of network resources over time around
a domain under consideration.

2 HETEROGENEOUS NETWORK GRAPH
2.1 Data Sources
The system ingests four types of data/intelligence sources to build
the graph: (1) Farsight Security PDNS [5] - Passive DNS data ob-
served from all around the world which covers the majority of the
DNS resolutions in the Internet., (2) VirusTotal (VT) [8] - Repu-
tation service that provides aggregated intelligence on any URL,
which is the most popular aggregated threat intelligence platform
that provides threat reports using more than 80 antivirus engines,
blacklists, and sandbox systems., (3) Maxmind [6] - A comprehen-
sive database consisting of geolocations and ASN information of IP
addresses (4) Alexa top 1 million domains [1] - Alexa is a widely
used resource for search engine optimization and capturing the
status of domains.

In summary, we use Farsight passive DNS records to generate
comprehensive knowledge graphs and use Alexa Top 1 million do-
mains, VirusTotal, and Maxmind information to inject the graph
with benign and malicious seed domains for running belief propa-
gation and predicting new malicious domains [7].

2.2 Graph Modeling
To create the knowledge graph (KG), we employ the DNS record
types A, NS, MX, SOA, and CNAME, which include the most impor-
tant information on domains. Specifically, Type A records contain
domain to IPv4 address resolutions, Type NS records contain do-
main to nameserver resolutions, Type MX records contain domain
to mail server resolutions, and CNAME records provide domain
to alias domains resolutions. All records are created by having a
domain name as their pivot. We create a heterogeneous KG utiliz-
ing the above DNS records with different edge types representing
different record types and nodes representing domains or IP ad-
dresses. Our intuition of building such a KG is that attackers are
likely to host their domains in the same infrastructure where some
of their blacklisted domains are hosted. This allows one to utilize
label propagation algorithms to predict malicious domains from a
small seed.

We build a heterogeneous KG based on the following different

types of DNS records available in PDNS.

• Vertices: Apex, FQDNs, IPs, Name Servers, Mail Servers,

CNAME, SOA

• Edges: Apex-IP, Apex-FQDNs, FQDNs-IP, Apex-NS, FQDNs-
NS, Apex-MX, FQDNs-MX, Apex-CNAME, FQDNs-CNAME,
Apex-SOA, FQDNs-SOA

1Demonstrations of a combosquatting domain and a benign domain investigation
are available at https://youtu.be/yu47CZkp_eY and https://youtu.be/waxczBk7vA8
respectively.

It is important to store the graph optimized for lookup as cGraph
should be able to retrieve the KG for inference as well as replay-
ing of network infrastructure over time quickly. Thus, the graph
information is stored along with timestamps at the granularity of a
day.

3 SYSTEM ARCHITECTURE
3.1 Overall System
The system consists of four main layers: data processing, database
and caching layer, middleware and API layer, and consumer appli-
cations. The data processing layer is the component where all the
data is cleaned and processed at the first phase. The infrastructure
layer orchestrates the resources to insert/update the cleaned and
reshaped data into the database cluster. Caching layer handles the
data caching and the middleware layer handles the real-time in-
ference process and intermediate data processing tasks. API layer
connects the backend to the consumer products, which are web
application, browser extension, and public developer API 2.

Figure 1: Overall system from infrastructure point of view

All resources have been provisioned on top of VMware vSphere
private cloud. Kubernetes cluster has been installed on top of the
provisioned VMs and an abstracted computation resources layer
has been created in order to manage all computation resources
together.

3.2 Graph Inference
Inference. Belief propagation (BP) is an iterative algorithm that
passes the belief iteratively. In each iteration t, belief propagation al-
gorithm updates the belief value on the node and passes the beliefs
(messages) to its neighbors based on the belief values it received

2More information is available at https://qcri.github.io/cgraph/.

cGraph: Graph Based Extensible Predictive Domain Threat Intelligence Platform

WWW, April 25-29, 2022, The Web Conference 2022

from the previous iteration t-1. As mentioned, this interactive pro-
cess continues until each message value passed by a node to a
neighbor node converges to a stable value. The final beliefs are
extracted after convergence.

Execution. The main idea is to construct a KG on the fly and
inject ground truth labels to the KG from credible sources where
VT, Alexa, and Maxmind and then run the BP algorithm on top of
the knowledge graph by using the labeled values as initial beliefs.
It propagates a probabilistic values for each unlabeled domain in-
dicating the maliciousness. For bravity, we explain the execution
for a selected example graph. The ground truth extraction process
is conducted in two stages; benign ground truth extraction and
malicious ground truth extraction.

For the benign ground truth extraction, Alexa Rank data is used.
Alexa Rank data feed for the latest seven consecutive days is taken
and the domains with Alexa Rank ≤ 10000 is taken for each day.
From this, the unique set of domains is taken as the benign ground
truth. Similar to prior research [4], we observe that domains with
Alexa Rank ≤ 10000 which appear consistently throughout a week
are likely to be benign as malicious domains do not live longer than
a day or two in Alexa 10K.

For the malicious ground truth, the data from the daily feed of
VirusTotal is used. VirusTotal reports for latest seven consecutive
days are taken and and the reports with a VT positive count of at
least 3 is extracted as malicious ground truth as VT reports with 2
or less positive counts are known to be a less reliable indicator of
maliciousness [7]. We manually verify random samples of benign
and malicious ground truth and ascertain that they are indeed
correctly labeled.

After seeding the KG with the ground truth domains, we run a
multi-threaded version of the BP algorithm which executes within
a few seconds. Our experiments show that our inference based
classification achieves a high precision of 92.17% and high recall of
99.41%. We observe that a domain’s maliciousness score does not
affect significantly by considering only its two hop neighbors com-
pared to the complete graph. Hence, for the real-time inference on
an unknown domain, we build the two-hop neighborhood KG and
run the inference algorithm to further improve the computational
performance.

4 CURRENT THREAT INTELLIGENT

SOLUTIONS VS CGRAPH

We thoroughly evaluate the key threat intelligence solutions in
the market against cGraph, our threat intelligence platform: AT&T
Cybersecurity, VirusTotal Graph, Cisco Umbrella Investigate, and
Anomali Threat Intelligence Platform. Below, we provide a sum-
mary of key differentiation in our system: (1) Dynamic graph-based
visualization and search of Internet artifacts for threat intelligence
(all the above solutions lack an intuitive graph based navigation),
(2) The ability to integrate various data sources and expand the net-
work coverage and the ability to integrate any intelligence sources
seamlessly, (3) Predictive domain threat intelligence based on an
efficient graph inference algorithm (all above solutions provide
only reactive intelligence), and (4) The ability to traverse the net-
work infrastructure based on time and observe the changes in the
physical layout as well as the maliciousness of the domains in the

network over time, which greatly assist security operation teams
in identifying root causes of attacks and the extent of the damage.

5 DEMONSTRATION
In this section, we show three common use cases of our system.

Searching for impersonating domains and related other
malicious domains: Attackers increasingly impersonate popu-
lar brands such as Apple, Paypal and Microsoft. cGraph allows
to search for any popular brands and easily identify likely com-
bosquatting domains.We demonstrate the use case of hunting for
combosuqatting domains of paypal.com.

Figure 2: Search results for the keyword paypal

Figure 2 shows the search results for the keyword paypal ranked
based on VT positive counts. An investigator may pick any of these
domains to further investigate. Assume that they select paypal-
assist.com, which takes them to the graph based interface shown
in Figure 3. This view includes the domain summary information,
network graph, Alexa ranking and VT statistics over time, IP ge-
olocation information and historical hosting information.

Figure 3: Dashboard for the domain paypal-assit.com

The ability expand the network graph based on the investigator’s
findings is quite useful in practice. cGraph not only allows to expand

WWW, April 25-29, 2022, The Web Conference 2022

Daluwatta et al.

any network node when it has children. but also provides real-
time predict intelligence on the unknown domains in the network.
Figure 4 shows the expansion of the IP address 47.254.170.24 that
adds 4 additional domains to the graph which are hosted on this IP
address.

Figure 6: Browser plugin: real time reputation score

as well as benign reasons. For example, cloud IP rotations, CDN
hostings and IP load balancing change IPs associated with domains
frequently. Attackers also move from one IP to another as a tech-
nique to either resist take down or evade detection. cGraph timeline
feature allows to investigate the network graph over a time period.
Coupled with the real-time inference feature, one can observe how
the reputation of any of the domains change over time. Figure 7
shows the network graph on day 1 and the evolved network graph
on day 7 respectively. This allows the investigator to learn the
fluxing behavior of domains and take necessary actions.

Figure 4: Expansion of the IP address 47.254.170.24

The inference graph view shows the maliciousness score of each
domain in the network graph calculated on the fly using the BP
algorithm based on known seed domains, paypal-assist.com in this
case. Figure 5 shows that cGraph inference identifies the domains
google-standard.com, google-money.com, paypal-debit.com and
google-sale.com to be highly malicious.

Figure 5: Malicious domains identified by inference

Evaluation of maliciousness of any domain via the browser
plugin: In this use case, we show how cGraph API can be consumed
to obtain reputation scores for websites on the fly. While blacklists
such as GSB that powers the Chrome browser identify many mali-
cious websites, they are either slow to react or unable to make a
judgement if the website content is cloaked from the blacklisting
service. cGraph’s reputation engine takes a different approach and
infers the maliciousness of domains based on the maliciousness of
the neighboring network resources such as sibling domains, name
servers, CNAME domains, IP addresses and certificates. As men-
tioned earlier, the reputation score is computed dynamically based
on the status of the network infrastructure at the present moment.
Figure 6 shows the cGraph inference API in action when a user
types the website soaponline.org. The maliciousness score indicates
how likely the domain is malicious or benign. In this example, the
maliciousness score of 0.87 indicates that soaponline.org is highly
likely to be malicious.

Investigating the network over time: Network resources as-
sociated with domains change over time due to both malicious

Figure 7: Network timeline for day 1 (left) and day 7 (right)

6 CONCLUSIONS
We propose, cGraph, which takes domain threat investigation a
step forward. cGraph can efficiently store and process large amount
of disparate network data, build network graph for any given time
period and perform real-time graph inference to predict domains
as malicious or benign, compared to reactive threat intelligence
platforms available. We demonstrate three frequent use cases of
cGraph: domain search, real-time reputation computation and net-
work graph evolution along with the maliciousness scores of do-
mains in the network over time.

REFERENCES
[1] 2022. Alexa: The Web Information Company. https://www.alexa.com/topsites.

Accessed January 2022.

[2] 2022. Anomali Threat Intelligence Platform. https://www.anomali.com/. [Online].
[3] 2022. Cisco Umbrella Investigate. https://umbrella.cisco.com/products/umbrella-

investigate. [Online].

[4] R. De Silva, M. Nabeel, C. Elvitigala, I. Khalil, T. Yu, and C. Keppitiyagama. 2021.
Compromised or Attacker-Owned: A Large Scale Classification and Study of
Hosting Domains of Malicious URLs. Usenix Security.

[5] Farsight Security, Inc. 2022. DNS Database. https://www.dnsdb.info/.
[6] MaxMind. 2022. GeoLite2 Databases.
[7] M. Nabeel, I. M. Khalil, B. Guan, and T. Yu. 2020. Following Passive DNS Traces to
Detect Stealthy Malicious Domains Via Graph Inference. ACM Trans. Priv. Secur.
23, 4, Article 17 (July 2020), 36 pages. https://doi.org/10.1145/3401897

[8] VirusTotal, Subsidiary of Google. 2022. VirusTotal. https://www.virustotal.com/.

