Automotive Cybersecurity: Foundations for
Next-Generation Vehicles

Michele Scalas, Student Member, IEEE
Department of Electrical and Electronic Engineering

Giorgio Giacinto, Senior Member, IEEE
Department of Electrical and Electronic Engineering

University of Cagliari
Cagliari, Italy
michele.scalas@unica.it

University of Cagliari
Cagliari, Italy
giacinto@unica.it

9
1
0
2

t
c
O
2

]

R
C
.
s
c
[

1
v
7
3
0
1
0
.
0
1
9
1
:
v
i
X
r
a

Abstract—The automotive industry is experiencing a serious
transformation due to a digitalisation process and the transition
to the new paradigm of Mobility-as-a-Service. The next-generation
vehicles are going to be very complex cyber-physical systems,
whose design must be reinvented to fulﬁl the increasing demand
of smart services, both for safety and entertainment purposes,
causing the manufacturers’ model to converge towards that of
IT companies. Connected cars and autonomous driving are the
preeminent factors that drive along this route, and they cause the
necessity of a new design to address the emerging cybersecurity
issues: the ”old” automotive architecture relied on a single closed
network, with no external communications; modern vehicles are
going to be always connected indeed, which means the attack
surface will be much more extended. The result is the need for
a paradigm shift towards a secure-by-design approach.

In this paper, we propose a systematisation of knowledge about
the core cybersecurity aspects to consider when designing a
modern car. The major focus is pointed on the in-vehicle network,
including its requirements, the current most used protocols and
their vulnerabilities. Moreover, starting from the attackers’ goals
and strategies, we outline the proposed solutions and the main
projects towards secure architectures. In this way, we aim to
provide the foundations for more targeted analyses about the
security impact of autonomous driving and connected cars.

Index Terms—Cybersecurity, Mobility, Automotive, Connected

Cars, Autonomous Driving

I. INTRODUCTION

T HE automotive industry is experiencing a serious trans-

formation due to a digitalisation process in many of its
aspects and the new mobility models. A recent report by
PwC [20] states that by 2030 the vehicle parc in Europe and
USA will slightly decline, but at the same time the global
industry proﬁt will signiﬁcantly grow. The main factor for this
phenomenon is the concept of Mobility-as-a-Service (MaaS),
i.e. the transition to car sharing and similar services, at the
expense of individual car ownership (expected to drop from
90% to 52% in China [20]). In this sense, the main keywords
that will contribute to this new model are ’connected cars’
and ’autonomous driving’.
According to Upstream Security [27], by 2025 the totality of
new cars will be shipped connected, intending as connected
not only the possibility of leveraging Internet or localisa-
the adoption of the V2X (Vehicle-to-X)
tion services but
paradigm. This term refers to the capability of the car to
communicate and exchange data with other vehicles (V2V,

All

these innovations have a common denominator:

Vehicle-to-Vehicle), with a generic infrastructure (V2I) or with
pedestrians (V2P). The typical application of these models is
smart cities, with the aim of optimising trafﬁc management,
sending alerts in case of incidents, coordinating a ﬂeet of
vehicles.
As regards autonomous driving, it consists in expanding the
current Advanced Driver Assistance Systems (ADASs), such
as lane keeping and braking assistants, in order to obtain a
fully autonomous driverless car. The Society of Automotive
in fact, six possible levels of
Engineers (SAE) provides,
autonomy, from level 0, with no assistance, to level 5, where
the presence of the driver inside the car is not needed at all.
in-
formation technology. Current top end vehicles have about
200 million lines of code, up to 200 Electronic Control
Units (ECUs) and more than 5 km copper wires [23], which
means cars are becoming very complex software-based IT
systems. This fact marks a signiﬁcant shift in the industry:
the ”mechanical” world of original equipment manufacturers
(OEMs) is converging towards that of IT companies.
In this context,
the safety of modern vehicles is strictly
related to addressing cybersecurity challenges. The electronic
architecture of the vehicle has been designed and standardised
over the years as a ”closed” system, in which all the data
of the ECUs persisted in the internal network. The above
new services require instead that data spread across multiple
i.e.
networks;
new possibilities to be vulnerable to the attackers. Hence,
automotive OEMs need to reinvent the car architecture with a
secure-by-design approach.

therefore, a bigger attack surface,

there is,

Another implication of this transformation is that the vehicle
will be a fully-ﬂedged cyber-physical system (CPS), that is
“a system of collaborating computational elements controlling
physical entities” [15]. This deﬁnition reminds that, in terms
of security, both the cyber- and the physical-related aspects
should be considered. As an example, an autonomous car
heavily interacts with the real world environment and faces
the challenge of guaranteeing the resilience of the sensing
and actuation devices. Therefore, security in automotive also
involves addressing the speciﬁc issues of a CPS, as can be read
in the work by Wang et al. [30]; however, in this paper, we
will consider the attacks that are carried out in the cyber-space.

 
 
 
 
 
 
In particular, we propose a systematisation of knowledge that
focuses on the in-vehicle network, with the aim to provide
the core elements for further analyses about complementary
aspects of automotive cybersecurity.

Paper structure. In this paper, Section II ﬁrstly lists the
constraints in car design, then describes the principal standards
for the internal network and the related security vulnerabilities.
Section III presents the various goals of the cyberattacks
against vehicles, while Section IV makes an overview of the
attack strategies. Section V illustrates the proposed solutions
for new architectures. Finally, Section VI discusses how the
security evaluation can be expandend to address the impact
of artiﬁcial intelligence and V2X, and Section VII makes
concluding remarks.

B. Main Standards

Current vehicles mix different

types of networks to let
the dozens of ECUs communicate. The primary standards,
typically suited for a speciﬁc domain and the related re-
quirements, are: LIN, MOST, FlexRay and CAN; the latter
represents the backbone of the entire network, so it is the
most explanatory protocol to understand the critical points
in automotive cybersecurity. It is worth noting that, due to
the transitioning phase in the industry, the topology and the
standards are going to change, as will be better illustrated in
Section V. Following the survey by Huo et al. [8], the main
features of CAN and Automotive Ethernet —one of the new
proposed protocols— are the following:

II. AUTOMOTIVE NETWORKS

This Section describes the basic characteristics of a car
internal network, from the design constraints to the main
protocols and their vulnerabilities.

A. Constraints

Although common IT security concepts can be used to
design car electronics,
there are some speciﬁc constraints
to consider both in the hardware and the software side, as
summarised by Studnia et al. [26] and Pike et al. [18]:

Hardware limitations The typical ECUs for cars are embed-
ded systems with substantial hardware limitations, that is
with low computing power and memory. This restriction
means some security solutions like cryptography might be
not fully implementable. Moreover, the ECUs are exposed
to demanding conditions (such as low/high temperatures,
shocks, vibrations, electromagnetic interferences), and
must have an impact on the size and weight of the vehicle
as small as possible. This is why the bus topology, which
requires a much lower number of wires, is preferable
compared to the star one.
These constraints cause the OEMs to be sensitive to
component costs, which limits the possibility to embrace
innovations.

Timing Several ECUs must perform tasks with ﬁxed real-time
constraints, which are often safety-critical. Therefore, any
security measure must not impact these tasks.

Autonomy Since the driver must be focused on driving, the
car should be as much autonomous as possible when
protection mechanisms take place.

Life-cycle The life-cycle of a car is much longer than that
of conventional consumer electronics, so the need for
durable hardware and easy-to-update software (especially
security-related one).

Supplier Integration To defend intellectual property, suppli-
ers often provide (software) components without source
code; therefore, any modiﬁcation to improve security can
be more difﬁcult.

Fig. 1. Main domains in a modern car. [5]

CAN The Controller Area Network is the most used protocol
for the in-vehicle network. It was released in 1986, but
several variants and standards have been developed over
the years. For simplicity, there is a low speed CAN that
reaches up to 125 Kb/s while the high-speed version
reaches up to 1 Mb/s; the ﬁrst one it’s suited for the body
domain, the other one is used in ’powertrain’ (engine or
transmission control) and ’chassis’ (suspension, steering
or braking) domain. The CAN network is implemented
with twisted pair wires, and an essential aspect is the
network topology, which is a bus line. Although current
designs are transitioning to a slightly different setting
(Figure 1), with a Domain Controller (DC) that manages
different sub-networks for each domain (i.e. function-
ality), the main idea is still that the CAN bus acts as
the backbone and all the data spread across the entire
network, in broadcast mode.

Automotive Ethernet Although its adoption is still limited,
Ethernet has a crucial role for next-generation automotive
networks; it is a widespread standard for the common IT
uses, and its high bandwidth is a desirable characteristic
its cost and
for modern vehicles. However, as it
weight are not suited for automotive, hence the need for
’Automotive Ethernet’: in the past few years, among the
various proposals, the ’BroadR-Reach’ variant by Broad-

is,

com emerged and now its scheme has been standardised
by IEEE (802.3bp and 802.3bw); moreover, other variants
are under development by ISO. The standard is currently
guided by the One-Pair Ether-Net (OPEN) alliance.
The main difference compared to standard Ethernet is the
use of a unique unshielded twisted pair, which let the cost,
size and weight signiﬁcantly decrease, without sacriﬁcing
the bandwidth (100 or 1000 Mb/s).

Before moving on to the description of the vulnerabilities
caused by these designs, it is useful to introduce an essential
standard for diagnostics: OBD. It stands for On-Board Diag-
nostics, and it consists in a physical port, mandatory for US
and European vehicles, that enables self-diagnostic capabilities
in order to detect and signal to the car owner or a technician
the presence of failures in a speciﬁc component. It gives direct
access to the CAN bus, then causing a serious security threat,
as will be described in Section IV; moreover, anyone can buy
cheap dongles for the OBD port, extract its data and read them
for example with a smartphone app.

C. Vulnerabilities

The constraints described in Section II-A, such as the need
to reduce the cost and the size impact of the network, together
with the past context in which the in-vehicle data was not
exposed to external networks, caused the presence in the
(CAN) backbone of the following design vulnerabilities [12]:
Broadcast transmission Because of the bus topology,
the
messages between the ECUs spread across the entire
network, causing a severe threat: accessing one part of
the network (for example the OBD port) implies the
possibility to send messages to the entire network or
being able to eavesdrop on these communications.
No authentication There is no authentication that indicates
the source of the frames, which means it is possible to
send fake messages from every part of the network.
No encryption The messages can be easily analysed or

recorded in order to ﬁgure out their function.

ID-based priority scheme Each CAN frame contains an
identiﬁer and a priority ﬁeld; the transmission of a high
priority frame causes the lower priority ones to back off,
which enables Denial of Service (DoS) attacks.

III. ATTACK GOALS

In this Section, different motivations that attract the attack-
ers are described. Taking the works by Studnia et al. [26] and
IET [9] as references, these are the possible attack goals:
Vehicle theft This is a straightforward reason to attack a

vehicle.

Vehicle enhancement This refers to software modiﬁcations
especially realised by the owner of the car. The goal might
be to lower the mileage of the vehicle, tune the engine
settings or install unofﬁcial software in the infotainment.
Extortion This can be achieved for example through a
ransomware-like strategy, i.e. blocking the victim’s car
until a fee is paid.

Intellectual challenge The attack is conducted to demon-

strate hacking ability.

Intellectual property theft This refers to the elicitation of

the source code for industrial espionage.

Data theft This is an increasingly important goal, a conse-
quence of the new paradigm of connected cars. There
are different types of data to steal, such as:
• License plates, insurance and tax data;
• Location traces;
• Data coming from the connection with a smartphone,
such as contacts, text messages, social media data,
banking records.

The combination of these data might allow the attacker
to discover the victim’s habits and points of interest,
exposing him to burglary or similar attacks.

IV. ATTACK SCENARIOS

In this Section, an overview of attack techniques and
examples is provided. Following the work by Liu et al. [12],
the typical attack scheme includes an initial phase in which a
physical (e.g., OBD) or wireless (e.g., Bluetooth) car interface
is exploited in order to access the in-vehicle network. The
most common interface to access it is OBD, but several works
leverage different entry points: Checkoway et al. [2] succeeded
in sending arbitrary CAN frames through a modiﬁed WMA
audio ﬁle burned onto a CD. Mazloom et al. [13] showed
some vulnerabilities in the MirrorLink standard that allow
controlling the internal CAN bus through a USB connected
smartphone. Rouf et al. [21] analysed the potential vulnera-
bilities in the Tire Pressure Monitoring System (TPMS), while
Garcia et al. [6] found out that two widespread schemes for
keyless entry systems present vulnerabilities that allow cloning
the remote control, thus gaining unauthorised access to the
vehicle.

Once the interface is chosen, then the following methodolo-

gies are used to prepare and implement the attack:
Frame snifﬁng Leveraging the broadcast

transmission and
the lack of cryptography in the network, the attacker can
eavesdrop on the frames and discover their function. It is
the typical ﬁrst step to prepare the attack. An example of
CAN frames snifﬁng and analysis is the work by Valasek
et al. [28].

Frame falsifying Once the details of the CAN frames are
known, it is possible to create fake messages with false
data in order to mislead the ECUs or the driver, e.g., with
a wrong speedometer reading.

Frame injection The fake frames, set with a proper ID, are
injected in the CAN bus to target a speciﬁc node; this
is possible because of the lack of authentication. An
illustrative —and very notorious— attack regards the
exploitation made by Miller et al. [14] towards the 2014
Jeep Cherokee infotainment system, which contains the
ability to communicate over Sprint’s cellular network in
order to offer in-car Wiﬁ, real-time trafﬁc updates and
other services. This remote attack allowed to control some

cyber-physical mechanisms such as steering and braking.
The discovery of the vulnerabilities in the infotainment
caused a 1.4 million vehicle recall by FCA.

Replay attack In this case, the attacker sends a recorded
series of valid frames into the bus at the appropriate time,
so he can repeat the car opening, start the engine, turn
the lights on. Koscher et al. [11] implemented a replay
attack in a real car scenario.

DoS attack As anticipated in Section II-C, ﬂooding the net-
work with the highest priority frames prevents the ECUs
from regularly sending their messages, therefore causing
a denial of service. An example of this attack is the work
by Palanca et al. [17].

V. SECURITY COUNTERMEASURES

This Section ﬁrstly aims to summarise the basic security
principles to consider when designing car electronics and
related technology solutions. Then, it focuses on the major
projects for new architectures.

A. Requirements

A typical pattern to help to develop secure architectures
is the so-called ’CIA triad’, i.e. three conditions that should
be guaranteed as far as possible; they are: conﬁdentiality,
integrity, availability. As the previous Sections demonstrated,
none of them is inherently guaranteed through the current
reference backbone —the CAN bus.
Bearing in mind these concepts and taking a cue from the
work by ACEA [1], the proposed countermeasures and some
of the related implementations in the research literature are
the following:
Dedicated HW To supply the scarcity of computing power
of the ECUs and satisfy the real-time constraints, it may
be necessary to integrate hardware platforms speciﬁcally
designed for security functions. This approach has been
pursued, for example, in the EVITA and HIS project, and
it is referred to as Hardware Security Module (HSM) or
Security Hardware Extension (SHE).

Cryptography Encryption can help in ensuring conﬁdential-
ity and integrity. It is worth noting that implementing
trivial, since the low computing
cryptography is not
power may prevent the OEMs from using robust algo-
rithms, which means cryptography might be even counter-
productive. The guidelines recommend state-of-the-art
standards, taking care of key management and possibly
using dedicated hardware. There are several works about
cryptography; for example, Zelle et al. [31] investigated
whether the well-known TLS protocol applies to in-
vehicle networks.

Authentication Since different ECUs interact with each other,
it is fundamental to know the sender of every incoming
message. Two recent works that integrate authentication
are those by Mundhenk et al. [16] and Van Bulck et al.
[29].

Access control Every component must be authorised in order
to gain access to other parts. The guidelines suggest

adopting the principle of least privilege, i.e. a policy
whereby each user (each ECU in this case) should have
level of privileges which still permits to
the lowest
perform its tasks.

Isolation/Slicing This hardening measure aims at preventing
the chance for an attacker to damage the entire net-
work. This goal can be achieved for example isolating
the driving systems from the other networks (e.g., the
infotainment), or through a central gateway that employs
access control mechanisms.

Intrusion detection Intrusion Detection Systems

(IDSs)
monitor the activities in the network searching for ma-
licious or anomalous actions. Some examples in the
literature are the works by Song et al. [24] and by Kang
et al. [10], which uses deep neural networks.

Secure updates The Over-The-Air (OTA) updates are on the
one hand a risk that increases the attack surface; on
the other,
they are an opportunity to quickly ﬁx the
discovered vulnerabilities (besides adding new services).
Some recent works to secure the updates but also V2X
communications are those by Dorri et al. [4] and Steger
et al. [25], both taking advantage of blockchain.

Incident response and recovery It is necessary to ensure an
appropriate response to incidents, limit the impact of the
failures and be always able to restore the standard vehicle
functionality.

All the above aspects should be fulﬁlled in a Security Devel-
opment Lifecycle (SDL) perspective, with data protection and
privacy as a priority. Testing and information sharing among
industry actors are recommended.

B. Main Projects

In the past ten years, several research proposals and stan-
dardisation projects started, aiming to develop and integrate
the ideas of the previous Section organically; a map of these
initiatives can be seen in Figure 2.

Fig. 2. Safety and security initiatives inside and outside of the automotive
domains. (ENISA [5])

Among these projects, SAE J30611, ﬁnalised in 2016,
guides vehicle cybersecurity development process, ranging
from the basic principles to the design tools. However, a

1https://www.sae.org/standards/content/j3061 201601/

the ISO/SAE 21434,

new international standard,
is under
development; its goal is to (a) describe the requirements for
risk management (b) deﬁne a framework that manages these
requirements, without indicating speciﬁc technologies, rather
giving a reference, useful also for legal aspects.

Moreover, the implementation of these guidelines and the
transition towards a new in-vehicle network architecture is
currently guided by some projects like AUTOSAR2. This
initiative is a partnership born in 2003 between several
stakeholders, ranging from the OEMs to the semi-conductors
companies, which aims to improve the management of the E/E
architectures through reuse and exchangeability of software
modules; concretely, it standardises the software architecture
of the ECUs. It is still an active project, now also focused on
autonomous driving and V2X applications, and it covers dif-
ferent functionalities, from cybersecurity to diagnostic, safety,
communication. AUTOSAR also supports different software
standards, such as GENIVI3, another important alliance aiming
to develop open software solutions for In-Vehicle Infotainment
(IVI) systems.

i.e.

the fact

deep learning is the main enabling technology. In addition to
the inherent complexity in developing a fully autonomous car
for the real world, several studies demonstrated how machine
learning-based algorithms are vulnerable,
that
carefully-perturbed inputs can easily fool classiﬁers, causing,
for example, a stop sign to be classiﬁed as a speed limit
([7]). These issues originate the research topic of adversarial
learning. Moreover, the use of machine learning is not limited
to computer vision but also includes cybersecurity software,
such as IDSs, and safety systems, such as drowsiness and
distraction detectors. Therefore, it is fundamental to leverage
proper techniques (e.g., [3]) to a) avoid consistent drops of
performances b) increase the effort of the attacker to evade
the classiﬁers c) keep the complexity of the algorithms within
an acceptable level, given the constraints described in Sec-
tion II-A. Ultimately, these concerns must be addressed with
the same attention as the ones related to the internal network
architecture. In this sense, some works, such as [22], propose
to include machine learning-speciﬁc recommendations in the
ISO 26262 4 standard.

VI. DISCUSSION

VII. CONCLUSION

To sum up, in this paper we deduced how the digitalisation
process within the automotive industry, where the OEMs
are converging towards IT companies and the vehicles are
becoming ”smartphones on wheels”, came up against serious
cybersecurity issues, due to security ﬂaws inherited by an
original design where the in-vehicle network did not interact
with the external world. By contrast, the Mobility-as-a-Service
paradigm causes the vehicle to be hyper-connected and con-
sequently much more exposed to cyber threats.

In this transition phase, we observed the effort in developing
more and more complex platforms in a safety-critical context
with strict requirements such as the limited hardware and
the real-time constraints. For these reasons, both the industry
and the researchers are pledging to leverage the common IT
methodologies from other domains and tailor them for the
automotive one. The route towards this goal is not straightfor-
ward, as noted in the study by Ponemon Institute [19]: 84% of
the professionals working for OEMs and their suppliers still
have concerns that cybersecurity practices are not keeping pace
with evolving technologies.

As a ﬁnal remark, we claim that the core ideas concerning
the in-vehicle network, and described in this paper, could be
considered for further analyses on the security for autonomous
driving and V2X communications.

ACKNOWLEDGEMENT

The authors thank Abinsula srl for the useful discussions
on the mechanisms of the automotive industry and its trends.

REFERENCES
[1] ACEA. Principles of Automobile Cybersecurity. Tech.

rep. ACEA, 2017.

4https://www.iso.org/standard/68383.html

Fig. 3. Applying security principles ([23])

The ideas expressed in the previous Section can be sum-
marised by Figure 3, which shows how the security principles
can be implemented in practice. In our opinion, the primary
protocol upon which the backbone of the future in-vehicle
network will be built is Automotive Ethernet. Moreover, the
takeaway message from these initiatives is the speciﬁc focus
on security: each building block implies a research activity
aimed at proposing a solution tailored for the automotive
domain.

In this paper, we examined the core elements and concerns
for secure internal networks; however, it is worth discussing,
although in an introductory manner, about how the same
awareness should be extended to the very new actors in
automotive, i.e. artiﬁcial intelligence and V2X. These elements
enable new advanced, smart services —e.g., platooning, that
is the use of a ﬂeet of vehicles that travel together in a
coordinated and autonomous way— and, as a consequence,
further threats. In particular, focusing on artiﬁcial intelligence,
the primary concerns come from autonomous driving, where

2https://www.autosar.org
3https://www.genivi.org

[2] Stephen Checkoway et al. “Comprehensive Exper-
imental Analyses of Automotive Attack Surfaces”.
In: USENIX Security Symposium. San Francisco, CA:
USENIX Association, 2011, pp. 447–462.

[3] Ambra Demontis et al. “Yes, Machine Learning Can
Be More Secure! A Case Study on Android Malware
Detection”. In: IEEE Transactions on Dependable and
Secure Computing (2017), pp. 1–1.

[4] Ali Dorri et al. “BlockChain: A Distributed Solution to
Automotive Security and Privacy”. In: IEEE Communi-
cations Magazine 55.12 (Dec. 2017), pp. 119–125.
[5] ENISA. Cyber Security and Resilience of smart cars.

Tech. rep. ENISA, 2017.

[6] Flavio D Garcia et al. “Lock It and Still Lose It - On the
(In)Security of Automotive Remote Keyless Entry Sys-
tems”. In: 25th USENIX Security Symposium (USENIX
Security 16). Austin, TX: USENIX Association, 2016.
[7] Tianyu Gu, Brendan Dolan-Gavitt, and Siddharth Garg.
“BadNets: Identifying Vulnerabilities in the Machine
Learning Model Supply Chain”. In: arXiv preprint
arXiv:1708.06733 (2019).

[8] Yinjia Huo et al. “A survey of in-vehicle communi-
cations: Requirements, solutions and opportunities in
IoT”. In: 2015 IEEE 2nd World Forum on Internet of
Things (WF-IoT). IEEE, Dec. 2015, pp. 132–137.
IET. Automotive Cyber Security : An IET/KTN Thought
Leadership Review of risk perspectives for connected
vehicles. Tech. rep. IET, 2014.

[9]

[10] Min-Joo Kang and Je-Won Kang. “Intrusion Detection
System Using Deep Neural Network for In-Vehicle
Network Security”. In: PLOS ONE 11.6 (June 2016).
Ed. by Tieqiao Tang.

[11] Karl Koscher et al. “Experimental Security Analysis of
a Modern Automobile”. In: 2010 IEEE Symposium on
Security and Privacy. IEEE, 2010, pp. 447–462.
Jiajia Liu et al. “In-Vehicle Network Attacks and Coun-
termeasures: Challenges and Future Directions”. In:
IEEE Network 31.5 (2017), pp. 50–58.

[12]

[13] Sahar Mazloom et al. “A Security Analysis of an
In-Vehicle Infotainment and App Platform”. In: 10th
USENIX Workshop on Offensive Technologies (WOOT
16). USENIX Association, 2016.

[14] Charlie Miller and Chris Valasek. “Remote Exploitation
of an Unaltered Passenger Vehicle”. In: Black Hat USA
2015 (2015), pp. 1–91.

[15] Roberto Minerva, Abyi Biru, and Domenico Rotondi.

“Towards a Deﬁnition of IoT”. 2015.

[16] Philipp Mundhenk et al. “Security in Automotive Net-
works: Lightweight Authentication and Authorization”.
In: ACM Transactions on Design Automation of Elec-
tronic Systems 22.2 (Mar. 2017), pp. 1–27.

[17] Andrea Palanca et al. “A Stealth, Selective, Link-
Layer Denial-of-Service Attack Against Automotive
Networks”. In: International Conference on Detection
of Intrusions and Malware, and Vulnerability Assess-
ment. Springer Verlag, 2017, pp. 185–206.

[18] Lee Pike et al. “Secure Automotive Software: The Next
Steps”. In: IEEE Software 34.3 (May 2017), pp. 49–55.
[19] Ponemon Institute. Securing the Modern Vehicle: A
Study of Automotive Industry Cybersecurity Practices.
Tech. rep. 2019.

[20] PwC. The 2018 Strategy & Digital Auto Report. Tech.

[21]

rep. 2018.
Ishtiaq Rouf et al. “Security and Privacy Vulnerabilities
of In-Car Wireless Networks : A Tire Pressure Moni-
toring System Case Study”. In: 19th USENIX Security
Symposium. Whashington DC: USENIX Association,
2010, pp. 11–13.

[22] Rick Salay, Rodrigo Queiroz, and Krzysztof Czarnecki.
“An Analysis of ISO 26262: Using Machine Learning
Safely in Automotive Software”. In: arXiv preprint
arXiv:1709.02435 (Sept. 2017).

[23] Balazs Simacsek. “Can we trust our cars?” 2019.
[24] Hyun Min Song, Ha Rang Kim, and Huy Kang Kim.
“Intrusion detection system based on the analysis of
time intervals of CAN messages for in-vehicle net-
work”. In: 2016 International Conference on Informa-
tion Networking (ICOIN). Vol. 2016-March. IEEE, Jan.
2016, pp. 63–68.

[25] Marco Steger et al. “Secure Wireless Automotive Soft-
ware Updates Using Blockchains: A Proof of Concept”.
In: Advanced Microsystems for Automotive Applications
2017. Lecture Notes in Mobility. Springer, Cham, 2018,
pp. 137–149.
Ivan Studnia et al. “Survey on security threats and
protection mechanisms in embedded automotive net-
works”. In: 2013 43rd Annual IEEE/IFIP Conference
on Dependable Systems and Networks Workshop (DSN-
W). IEEE, June 2013, pp. 1–12.

[26]

[27] Upstream Security. Global Automotive Cybersecurity

Report 2019. Tech. rep. 2018.

[29]

[28] Chris Valasek and Charlie Miller. “Adventures in Au-
tomotive Networks and Control Units”. In: Defcon 21.
2013, pp. 260–264.
Jo Van Bulck, Jan Tobias M¨uhlberg, and Frank Piessens.
“VulCAN: Efﬁcient component authentication and soft-
ware isolation for automotive control networks”. In:
Proceedings of
the 33rd Annual Computer Security
Applications Conference on - ACSAC 2017. New York,
New York, USA: ACM Press, 2017, pp. 225–237.
[30] Eric Ke Wang et al. “Security Issues and Challenges
for Cyber Physical System”. In: 2010 IEEE/ACM Int’l
Conference on Green Computing and Communications
& Int’l Conference on Cyber, Physical and Social
Computing. IEEE, Dec. 2010, pp. 733–738.

[31] Daniel Zelle et al. “On Using TLS to Secure In-Vehicle
Networks”. In: Proceedings of the 12th International
Conference on Availability, Reliability and Security -
ARES ’17. New York, New York, USA: ACM Press,
2017, pp. 1–10.

