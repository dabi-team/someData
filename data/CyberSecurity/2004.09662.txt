The Panacea Threat Intelligence and Active Defense Platform
Adam Dalton,1 Ehsan Aghaei,3 Ehab Al-Shaer,3 Archna Bhatia,1
Esteban Castillo,4 Zhuo Cheng,3 Sreekar Dhaduvai,2 Qi Duan,3 Md Mazharul Islam,3
Younes Karimi,2 Amir Masoumzadeh,2 Brodie Mather,1 Sashank Santhanam,3
Samira Shaikh,3 Tomek Strzalkowski4 Bonnie J. Dorr1
1IHMC, Ocala, FL, USA, {adalton,abhatia,bmather,bdorr}@ihmc.us
2SUNY, Albany, NY, USA {sdhaduvai,amasoumzadeh,ykarimi}@albany.edu
3UNCC, Charlotte, NC, USA {eaghaei,ealshaer,zcheng5,qduan,
mislam7,ssantha1,sshaikh2}@uncc.edu
4Rensselaer Polytechnic Institute, Troy, NY, USA {castie2,tomek}@rpi.edu

Abstract

We describe Panacea, a system that supports nat-
ural language processing (NLP) components for
active defenses against social engineering attacks.
We deploy a pipeline of human language technol-
ogy, including Ask and Framing Detection, Named
Entity Recognition, Dialogue Engineering, and Sty-
lometry. Panacea processes modern message for-
mats through a plug-in architecture to accommo-
date innovative approaches for message analysis,
knowledge representation and dialogue generation.
The novelty of the Panacea system is that uses NLP
for cyber defense and engages the attacker using
bots to elicit evidence to attribute to the attacker
and to waste the attacker’s time and resources.

1

Introduction

Panacea (Personalized AutoNomous Agents Coun-
tering Social Engineering Attacks) actively defends
against social engineering (SE) attacks. Active de-
fense refers to engaging an adversary during an
attack to extract and link attributable information
while also wasting their time and resources in ad-
dition to preventing the attacker from achieving
their goals. This contrasts with passive defenses,
which decrease likelihood and impact of an attack
(Denning, 2014) but do not engage the adversary.
SE attacks are formidable because intelligent ad-
versaries exploit technical vulnerabilities to avoid
social defenses, and social vulnerabilities to avoid
technical defenses (Hadnagy and Fincher, 2015).
A system must be socially aware to ﬁnd attack pat-
terns and indicators that span the socio-technical
space. Panacea approaches this by incorporat-
ing the F3EAD (Find, Fix, Finish, Exploit, An-
alyze, and Disseminate) threat intelligence cycle
(Gomez, 2011). The ﬁnd phase identiﬁes threats

using language-based and message security ap-
proaches.The ﬁx phase gathers relevant and nec-
essary information to engage the adversaries and
plan the mitigations that will prevent them from
accomplishing their malicious goals. The ﬁnish
phase performs a decisive and responsive action
in preparation for the exploit phase for future at-
tack detection. The analysis phase exploits intelli-
gence from conversations with the adversaries and
places it in a persistent knowledge base where it
can be linked to other objects and studied addi-
tional context. The disseminate phase makes this
intelligence available to all components to improve
performance in subsequent attacks.

Panacea’s value comes from NLP capabilities for
cyber defense coupled with end-to-end plug-ins for
ease of running NLP over real-world conversations.
Figure 1 illustrates Panacea’s active defense in the
form of conversational engagement, diverting the
attacker while also delivering a link that will enable
the attacker’s identity to be unveiled.

Figure 1: Active Defense against Social Engineering:
Attacker’s email (left) yields bot’s response (right)

1.1 Use Cases

Panacea’s primary use cases are: (1) monitoring a
user’s inbox to detect SE attacks; and (2) engaging
the attacker to gain attributable information about
their true identity while preventing attacks from
succeeding. Active SE defense tightly integrates
offensive and defensive capabilities to detect and
respond to SE campaigns. Engaging the adversary
uniquely enables extraction of indicators required
to conﬁdently classify a communication as mali-

0
2
0
2

r
p
A
0
2

]
L
C
.
s
c
[

1
v
2
6
6
9
0
.
4
0
0
2
:
v
i
X
r
a

Goodtoknow.HowdoIgoabouttheprocessofcheckingeligibility?Thewebsiteisnotopening.Didyouprovidemewiththerightlink?Isthistheone?linkRegards........School Employees: Did you know that you may be able to get up to a 20% discount on your cell phone bill every month? Click hereto check your eligibility with Telcograph, DashNet, Altus Wireless and U.S. CellNet............Ask and Framing Detection + Response Generation 
 
 
 
 
 
cious. Active defenses also carry signiﬁcant risk
because engagement can potentially harm an indi-
vidual’s or organization’s reputation. Thus, high
conﬁdence classiﬁcation is vital.

1.1.1 Monitoring and Detection
Panacea includes an initial protection layer based
on the analysis of incoming messages. Conceptual
users include end users and IT security profession-
als. Each message is processed and assigned a la-
bel of friend, foe, or unknown, taking into account
headers and textual information of each message.
The data obtained from this analysis is converted
into threat intelligence and stored in a knowledge
graph for use in subsequent phases, e.g., for meta
analysis and message analysis in a broader context
within a thread or in similar messages delivered to
multiple users.

1.1.2 Engagement and Attribution
Passive defenses are ﬁnished once a threat is
discovered, defused, and deconstructed; at this
point Panacea’s active defenses become engaged.
Panacea’s active defenses respond to the attacker’s
demands, reducing the risk that the attacker will
catch on that they’ve been ﬁngered. As such, any
requests made by Panacea are more likely to be
fulﬁlled by the attacker, bulwarked by hopes of
eventual payoff. Such requests are implemented
as a collection of ﬂag seeking strategies built on
top of a conversational theory of asks. Flags are
collected using information extraction techniques.
Future work includes inferential logic and decep-
tion detection to unmask an attacker and separate
them from feigned identities used to gain trust.

2 Related Work

Security in online communication is a challenge
due to: (1) attacker’s speed outpacing that of de-
fenders to maintain indicators (Zhang et al., 2006);
(2) phishing site quality high enough that users ig-
nore alerts (Egelman et al., 2008); (3) user training
falling short as users forget material and fall prey
to previously studied attacks (Caputo et al., 2013);
the divergent goals of the attacker and defender (Li
et al., 2020); and (4) defensive system maintainers
who may ignore account context, motivations, and
socio-economic status of the targeted user (Oliveira
et al., 2017). Prior studies (Bakhshi et al., 2008;
Karakasilitiosis et al., 2006) demonstrate human
susceptibility to SE attacks. Moving from bots that
detect such attacks to those that produce “natural

sounding” responses, i.e., conversational agents
that engage the attacker to elicit identifying infor-
mation, is the next advance in this arena.

Prior work extracts information from email in-
teractions (Dada et al., 2019), applies supervised
learning to identify email signatures and forwarded
messages (Carvalho and Cohen, 2004), and clas-
siﬁes email content into different structural sec-
tions (Lampert et al., 2009). Statistical and rule-
based heuristics extract users’ names and aliases
(Yin et al., 2011) and structured script represen-
tations determine whether an email resembles a
password reset email typically sent from an organi-
zation’s IT department (Li and Goldwasser, 2019).
Analysis of chatbot responses (Prakhar Gupta and
Bigham, 2019) yields human-judgement correla-
tion improvements. Approaches above differ from
ours in that they require extensive model training.

Our approach relates to work on conversational
agents, e.g., response generation using neural mod-
els (Gao et al., 2019; Santhanam and Shaikh, 2019),
topic models (Dziri et al., 2018), self-disclosure for
targeted responses (Ravichander and Black, 2018),
topic models (Bhakta and Harris, 2015), and other
NLP analysis (Sawa et al., 2016). All such ap-
proaches are limited to a pre-deﬁned set of topics,
constrained by the training corpus. Other prior
work focuses on persuasion detection/prediction
(Hidey and McKeown, 2018) but for judging when
a persuasive attempt might be successful, whereas
Panacea aims to achieve effective dialogue for
countering (rather than adopting) persuasive at-
tempts. Text-based semantic analysis is also used
for SE detection (Kim et al., 2018), but not for en-
gaging with an attacker. Whereas a bot might be
employed to warn a potential victim that an attack
is underway, our bots communicate with a social
engineer in ways that elicit identifying information.

Panacea’s architecture is inspired by state-of-
the-art systems in cyber threat intelligence. MISP
(Wagner et al., 2016) focuses on information shar-
ing from a community of trusted organizations.
MITRE’s Collaborative Research Into Threats
(CRITs) (Gofﬁn, 2020) platform is, like Panacea,
built on top of the Structured Threat Intelligence
eXchange (STIX) speciﬁcation. Panacea differs
from these in that it is part of operational active
defenses, rather than solely an analytical tool for
incident response and threat reporting.

3 System Overview

Panacea’s processing workﬂow is inspired by Stan-
ford’s CoreNLP annotator pipeline (Manning et al.,
2014a), but with a focus on using NLP to power
active defenses against SE. A F3EAD-inspired
phased analysis and engagement cycle is employed
to conduct active defense operations. The cycle
is triggered when a message arrives and is decon-
structed into STIX threat intelligence objects. Ob-
ject instances for the identities of the sender and
all recipients are found or created in the knowledge
base. Labeled relationships are created between
those identity objects and the message itself.

Once a message is ingested, plug-in components
process the message in the ﬁnd phase, yielding a
response as a JSON object that is used by plug-
in components in subsequent phases. Analyses
performed in this phase include message part de-
composition, named entity recognition, and email
header analysis. The ﬁx phase uses components
dubbed deciders, which perform a meta-analysis of
the results from the ﬁnd phase to determine if and
what type of an attack is taking place. Ask detection
provides a ﬁx on what the attacker is going after in
the ﬁx phase, if an attack is indicated. Detecting an
attack advances the cycle to the ﬁnish phase, where
response generation is activated.

Each time Panacea successfully elicits a re-
sponse from the attacker, the new message is ex-
ploited for attributable information, such as the ge-
ographical location of the attack and what organiza-
tional afﬁliations they may have. This information
is stored as structured intelligence in the knowledge
base which triggers the analysis phase, wherein the
threat is re-analyzed in a broader context. Finally,
Panacea disseminates threat intelligence so that hu-
mans can build additional tools and capabilities to
combat future threats.

4 Under the Hood

Figure 2: Panacea components run asynchronously in
the background for scaling and so new components can
be added and removed based on the underlying task.

4.1 Message Analysis Component

Below we describe the structural aspects of mes-
sages and their associated processing.

4.1.1 Email Header Classiﬁcation

When communication takes place over a network,
metadata is extracted that serves as a user ﬁnger-
print and a source for reputation scoring. Email
headers, for example, contain authentication de-
tails and information about the mail servers that
send, receive, and relay messages as they move
from outbox to inbox. To distinguish between
benign and malicious emails, Panacea applies a
multistage email spooﬁng, spamming, and phish-
ing detector consisting of: (1) a signature-based
detector, (2) an active investigation detector, (3)
a receiver-oriented anomaly detector, and (4) a
sender-oriented anomaly detector.

4.1.2 Email Content Classiﬁcation

Panacea’s main components are presented: (1) Mes-
sage Analysis Component; and (2) Dialogue Com-
ponent. The resulting system is capable of handling
the thousands of messages a day that would be ex-
pected in a modern organization, including failure
recovery and scheduling jobs for the future. Figure
2 shows Panacea throughput while operating over
a one month backlog of emails, SMS texts, and
LinkedIn messages.

Dissecting email headers is not enough for detect-
ing malicious messages. Many suspicious elements
are related to email bodies that contain user mes-
sages related to a speciﬁc topic and domain. Ana-
lyzing email content provides valuable insight for
detecting threats in conversations and a solid un-
derstanding of the content itself. Panacea incorpo-
rates machine learning algorithms that, alongside
of header classiﬁers, digest email exchanges:

Benign/non-benign classiﬁer: Word embed-
ding vectors (Bengio et al., 2006; Mikolov et al.,
2013) trained on email samples from different com-
panies (e.g., Enron) are extracted using neural net-
works (Sherstinsky, 2013), i.e., back-propagation
model with average word vectors as features. This
classiﬁer provides a binary prediction regarding the
nature of emails (friend or foe).

Email threat type classiﬁer: Spam, phishing,
malware, social-engineering and propaganda are
detected, providing ﬁne-grained information about
the content of emails and support for motive detec-
tion (i.e., attacker’s intention).

Email zone classiﬁer: Greetings, body, and sig-
nature are extracted using word embedding im-
plemented as recurrent neural network with hand-
crafted rules, thus yielding senders, receivers and
relevant entities to enable response generation.

All classiﬁers support active detection of mali-
cious emails and help in the engagement process
of automated bots. Additionally, all trained mod-
els have an overall accuracy of 90% using a cross
validation approach against well known email col-
lections like Enron (Klimt and Yang, 2004) and
APWG (Oest et al., 2018) among other non-public
datasets, which makes them reasonably reliable in
the context of passive defenses.

4.1.3 Behavioral Modeling

If an adversary is able to compromise a legitimate
account, then the header and content classiﬁers will
not be sufﬁcient to detect an attack. The social engi-
neer is able to extract contacts of the account owner
and send malicious content on their behalf, taking
advantage of the reputation and social relationships
attributed to the hijacked account. Two distinctive
approaches address these issues:

Impersonation Detector: Sender entities are ex-
tracted from the email message and a personalized
proﬁle is created for each one, with communica-
tion habits, stylometric features, and social net-
work. The unique proﬁled model is used to assess
whether this email has been written and sent by an
account’s legitimate owner. If a message arrives
from a sender that does not have a proﬁle, Panacea
applies similarity measures to ﬁnd other email ad-
dresses for the unknown entity. This serves as a
defense against impersonation attacks where the
social engineer creates an email account using a
name and address similar to the user of an institu-

tional account for which a model is available. If
Panacea links the unknown account to an institu-
tional account, then that account’s model is used to
determine whether a legitimate actor is using an un-
known account, or a nefarious actor is attempting to
masquerade as an insider in order to take advantage
of the access such an account would have.

Receiving Behavior Classiﬁer. Individual pro-
ﬁles are built for the receiving behavior of each
entity (how and with whom this entity communi-
cates) and new emails are evaluated against the con-
structed models. To build unique proﬁles, all mes-
sages sent to each particular entity are collected.

4.1.4 Deciders

Panacea must have high conﬁdence in determining
that a message is coming from an attacker before
deploying active defense mechanisms. A strategy-
pattern approach ﬁts different meta-classiﬁers to
different situations. Four classiﬁcation strategies,
called Deciders, combine all component analyses
after a message is delivered to an inbox to make the
ﬁnal friend/foe determination. The Decider API ex-
pects all component analyses to include a friend/foe
credibility score using six levels deﬁned by the Ad-
miralty Code (JDP 2-00, 2011). Deciders may be
deterministic through the application of rule based
decision making strategies or they may be trained
to learn to identify threats based on historical data.

4.1.5 Threat Intelligence

Panacea stores component analysis results in a
threat intelligence knowledge base for aggrega-
tion of attack campaigns with multiple turns, tar-
gets, and threads. The knowledge base adheres to
STIX 2.0 speciﬁcations and implements MITRE’s
ATT&CK framework (Strom et al., 2017) to enable
attribution and anticipatory mitigations of sophisti-
cated SE attacks. Panacea recognizes indicators of
compromise based on features of individual emails
as well as historical behavior of senders and re-
cipients.
Intrusion sets and campaigns are thus
constructed when malicious messages are discov-
ered subsequently linked to threat actors based on
attribution patterns, such as IP address, message
templates, socio-behavioral indicators, and linguis-
tic signatures. This feature set was prioritized to
work with Unit 42’s ATT&CK Playbook Viewer.
The knowledge base uses a PostgreSQL database
backend with an application layer built with Ruby
on Rails.

4.2 Dialogue Component

Panacea’s dialogue component consists of three key
sub-components: Ask/Framing Detection (to deter-
mine the attacker’s demand), Motive Detection (to
determine the attacker’s goal), and Response Gen-
eration (to reply to suspicious messages).

4.2.1 Ask/Framing Detection
Once an email is processed as described above,
linguistic knowledge and structural knowledge are
used to extract candidate Ask/Framing pairs and to
provide the ﬁnal conﬁdence-ranked output.

Application of Linguistic Knowledge: Linguis-
tic knowledge is employed to detect both the ask
(e.g., buy gift card) and the framing (e.g., lose your
job, get a 20% discount). An ask may be, for exam-
ple, a request for something (GIVE) or an action
(PERFORM). On the other hand, framing may be
a reward (GAIN) or a risk (LOSE), for example.
Ask/framing detection relies on Stanford CoreNLP
constituency parses and dependency trees (Man-
ning et al., 2014b), coupled with semantic role
labeling (SRL) (Gardner et al., 2017), to identify
the main action and arguments. For example, click
here yields click as the ask and its argument here.
Additional constraints are imposed through the
use of a lexicon based on Lexical Conceptual Struc-
ture (LCS) (Dorr and Olsen, 2018; Dorr and Voss,
2018), derived from a pool of team members’
collected suspected scam/impersonation emails.
Verbs from these emails were grouped as follows:

• PERFORM: connect, copy, refer
• GIVE: administer, contribute, donate
• LOSE: deny, forget, surrender
• GAIN: accept, earn, grab, win
Additional linguistic processing includes: (1)
categorial variation (Habash and Dorr, 2003) to
map between different parts of speech, e.g., refer-
ence(N) → refer(V) enables detection of an explicit
ask from you can reference your gift card; and (2)
verbal processing to eliminate spurious asks con-
taining verb forms such as sent or signing in sent
you this email because you are signing up.

Application of Structural Knowledge: Beyond
meta-data processing described previously, the
email body is further pre-processed before linguis-
tic elements are analyzed. Lines are split where
div, p, br, or ul tags are encountered. Place-
holders are inserted for hyperlinks. Image tags are
replaced with their alt text. All styling, scripting,
quoting, replying, and signature are removed.

Social engineers employ different link position-
ings to present “click bait,” e.g., “Click here” or
“Contact me (jw11@example.com).” Basic link
processing assigns the link to the appropriate ask
(e.g., click here). Advanced link processing ties
together an email address with its corresponding
PERFORM ask (e.g., contact me), even if separated
by intervening material.

Conﬁdence Score and Top Ask: Conﬁdence
scores are heuristically assigned: (1) Past tense
events are assigned low or 0 conﬁdence; (2) The
vast majority of asks associated with URLs (e.g.,
jw11@example.com) are found to be PERFORM
asks with highest conﬁdence (0.9); (3) a GIVE ask
combined with any ask category (e.g., contribute
$50) is less frequently found to be an ask, thus
assigned slightly lower conﬁdence (0.75); and (4)
GIVE by itself is even less likely found to be an
ask, thus assigned a conﬁdence of 0.6 (e.g., do-
nate often). Top ask selection then selects highest
conﬁdence asks at the aggregate level of a single
email. This is crucial for downstream processing,
i.e., response generation in the dialogue compo-
nent. For example, the ask “PERFORM contact
(jw11@example.com)” is returned as the top ask
for “Contact me. (jw11@example.com).”

4.2.2 Motive Detection

In addition to the use of distinct tools for detect-
ing linguistic knowledge, Panacea extracts the at-
tacker’s intention, or motive. Leveraging the at-
tacker’s demands (asks), goals (framings) and mes-
sage attack types (from the threat type classiﬁer),
the Motive Detection module maps to a range of
possible motive labels: ﬁnancial information, ac-
quire personal information, install malware, annoy
recipient, etc. Motive detection maps to such labels
from top asks/framings and their corresponding
threat types. Examples are shown here:

Give
(cid:124) (cid:123)(cid:122) (cid:125)
Ask

+ Finance info
(cid:125)
(cid:123)(cid:122)
Ask type

(cid:124)

+ Spam
(cid:124) (cid:123)(cid:122) (cid:125)
Email threat

→ Financial info

Gain
(cid:124) (cid:123)(cid:122) (cid:125)
Framing

+ Credentials
(cid:125)

(cid:123)(cid:122)
Ask type

(cid:124)

+ Malware
(cid:125)

(cid:123)(cid:122)
Email threat

(cid:124)

→ Install malware

These motives are used later for enhancing a
response generation process which ultimately cre-
ates automatic replies for all malicious messages
detected in the Panacea platform.

4.2.3 Response Generation

5.2 Dialogue Module

Response generation is undertaken by a bot using
templatic approach to yield appropriate responses
based on a hierarchical attack ontological structure
and ask/framing components. The hierarchical on-
tology contains 13 major categories (e.g., ﬁnancial
details). Responses focus on wasting the attacker’s
time or trying to gain information from the attacker
while moving along F3EAD threat intelligence cy-
cle (Gomez, 2011) to ensure that the attacker is
kept engaged. The response generation focuses on
the ﬁnd, ﬁnish and exploit states. The bot goes
after name, organization, location, social media
handles, ﬁnancial information, and is also capable
of sending out malicious links that obtain pieces of
information about the attacker’s computer.

A dialogue state manager decides between time
wasting and information seeking based on motive,
ontological structure and associated ask/framing
of the message. For example, if an attack mes-
sage has motive ﬁnancial details and ontological
structure of bank information, coupled with a PER-
FORM ask, the dialogue state manager moves into
an information gathering phase and produces this
response: “Can you give me the banking informa-
tion for transferring money? I would need the bank
name, account number and the routing information.
This would enable me to act swiftly.” On the other
hand if the attacker is still after ﬁnancial informa-
tion but not a particular piece of information, the
bot wastes time, keeping the attacker in the loop.

5 Evaluation

Friend/foe detection (Message Analysis) and re-
sponse generation (Dialogue) are evaluated for ef-
fectiveness of Panacea as an effective intermediary
between attackers and potential victims.

5.1 Message Analysis Module

The DARPA ASED program evaluation tests
header and content modules against messages for
friend/foe determination. Multiple sub-evaluations
check system accuracy in distinguishing malicious
messages from benign ones, reducing the false
alarm rate, and transmitting appropriate messages
to dialogue components for further analysis. Eval-
uated components yield ∼90% accuracy. Compo-
nents adapted for detecting borderline exchanges
(unknown cases) are shown to help dialogue com-
ponents request more information for potentially
malicious messages.

The ASED program evaluation also tests the di-
alogue component. Independent evaluators com-
municate with the system without knowledge of
whether they are interacting with humans or bots.
Their task is to engage in a dialogue for as many
turns as necessary. Panacea bots are able to sustain
conversations for an average of 5 turns (across 15
distinct threads). Scoring applied by independent
evaluators yield a rating of 1.9 for their ability to
display human-like communication (on a scale of
1–3; 1=bot, 3=human). This score is the highest
amongst all other competing approaches (four other
teams) in this independent program evaluation.

6 Conclusions and Future Work

Panacea is an operational system that processes
communication data into actionable intelligence
and provides active defense capabilities to combat
SE. The F3EAD active defense cycle was chosen
because it ﬁts the SE problem domain, but speciﬁc
phases could be changed to address different prob-
lems. For example, a system using the Panacea
processing pipeline could ingest academic papers
on a disease, process them with components de-
signed to extract biological mechanisms, then en-
gage with paper authors to ask clarifying questions
and search for additional literature to review, while
populating a knowledge base containing the critical
intelligence for the disease of interest.

Going forward, the plan is to improve Panacea’s
plug-in infrastructure so that it is easier to add ca-
pability without updating Panacea itself. This is
currently possible as long as new components use
the same REST API as existing components. The
obvious next step is to formalize Panacea’s API.
We have found value to leaving it open at this early
state of development as we discover new challenges
and solutions to problems that emerge in building
a large scale system focused on the dangers and
opportunities in human language communication.

Acknowledgments

This work was supported by DARPA through
AFRL Contract FA8650-18- C-7881 and Army
Contract W31P4Q-17-C-0066. All statements of
fact, opinion or conclusions contained herein are
those of the authors and should not be construed
as representing the ofﬁcial views or policies of
DARPA, AFRL, Army, or the U.S. Government.

References

Taimur Bakhshi, Maria Papadaki, and Steven Furnell.
2008. A practical assessment of social engineering
vulnerabilities. In Proceedings of the Second Inter-
national Symposium on Human Aspects of Informa-
tion Security & Assurance.

Yoshua Bengio, Holger Schwenk,

Jean-S´ebastien
Sen´ecal, Fr´ederic Morin, and Jean-Luc Gauvain.
2006. Neural Probabilistic Language Models, pages
137–186. Springer Berlin Heidelberg, Berlin, Hei-
delberg.

Ram Bhakta and Ian G. Harris. 2015. Semantic anal-
ysis of dialogs to detect social engineering attacks.
Proceedings of the 2015 IEEE 9th International Con-
ference on Semantic Computing (IEEE ICSC 2015),
pages 424–427.

Deanna D Caputo, Shari Lawrence Pﬂeeger, Jesse D
Freeman, and M Eric Johnson. 2013. Going spear
phishing: Exploring embedded training and aware-
ness. IEEE Security & Privacy, 12(1):28–38.

Vitor Carvalho and William Cohen. 2004. Learning
to extract signature and reply lines from email. In
First Conference on Email and Anti-Spam, pages 1–
8. CEAS.

Emmanuel G. Dada, Joseph S. Bassi, Haruna Chiroma,
Shaﬁ’i M. Abdulhamid, Adebayo O. Adetunmbi,
and Opeyemi E. Ajibuwa. 2019. Machine learn-
ing for email spam ﬁltering: review, approaches and
open research problems. Heliyon, 5(6):1–23.

Dorothy E. Denning. 2014. Framework and principles
for active cyber defense. Computers & Security,
40:108–113.

Bonnie Dorr and Clare Voss. 2018. STYLUS: A re-
source for systematically derived language usage. In
Proceedings of the First Workshop on Linguistic Re-
sources for Natural Language Processing, pages 57–
64, Santa Fe, New Mexico, USA. Association for
Computational Linguistics.

Bonnie J. Dorr and Mari Broman Olsen. 2018. Lexi-
cal conceptual structure of literal and metaphorical
spatial language: A case study of push. In Proceed-
ings of the First International Workshop on Spatial
Language Understanding, pages 31–40.

Nouha Dziri, Ehsan Kamalloo, Kory W Mathewson,
and Osmar Zaiane. 2018. Augmenting neural re-
sponse generation with context-aware topical atten-
tion. arXiv preprint arXiv:1811.01063.

Serge Egelman, Lorrie Faith Cranor, and Jason Hong.
2008. You’ve been warned: An empirical study of
the effectiveness of web browser phishing warnings.
In Proceedings of the SIGCHI Conference on Hu-
man Factors in Computing Systems, CHI ’08, pages
1065–1074, New York, NY, USA. ACM.

Jianfeng Gao, Michel Galley, Lihong Li, et al. 2019.
Neural approaches to conversational ai. Founda-
tions and Trends in Information Retrieval, 13(2-
3):127–298.

Matt Gardner, Joel Grus, Mark Neumann, Oyvind
Tafjord, Pradeep Dasigi, Nelson F. Liu, Matthew
Peters, Michael Schmitz, and Luke S. Zettlemoyer.
2017. Allennlp: A deep semantic natural language
In Proceedings of Workshop
processing platform.
for NLP Open Source Software (NLP-OSS).

Mike Gofﬁn. 2020. CRITs - Collaborative Research

Into Threats.

Jimmy A. Gomez. 2011. The targeting process: D3A

and F3EAD. Small Wars Journal, 1:1–17.

Nizar Habash and Bonnie J. Dorr. 2003. A catego-
In In Proceed-
rial variation database for english.
ings of the Human Language Technology and North
American Association for Computational Linguistics
(NAACL) Conference, pages 96–102.

Christopher Hadnagy and Michele Fincher. 2015.

Phishing Dark Waters. Wiley Online Library.

Christopher Hidey and Kathleen McKeown. 2018. Per-
suasive Inﬂuence Detection: The Role of Argument
In Proceedings of the Thirty-Second
Sequencing.
AAAI Conference on Artiﬁcial Intelligence, pages
5173–5180, San Francisco, California, USA.

JDP 2-00. 2011. Understanding and intelligence sup-
port to joint operations (JDP 2-00). Ministry of De-
fence (UK).

A. Karakasilitiosis, S. M. Furnell, and M. Papadaki.
2006. Assessing end-user awareness of social en-
gineering and phishing. In Proceedings of the Aus-
tralian Information Warfare and Security Confer-
ence.

Myeongsoo Kim, Changheon Song, Hyeji Kim,
Deahyun Park, Yeeji Kwon, Eun Namkung, Ian G
Harris, and Marcel Carlsson. 2018. Catch me, yes
we can!-pwning social engineers using natural lan-
guage processing techniques in real-time.

Bryan Klimt and Yiming Yang. 2004. The enron cor-
pus: A new dataset for email classiﬁcation research.
In Machine Learning: ECML 2004, pages 217–226.
Springer Berlin Heidelberg.

Andrew Lampert, Robert Dale, and C’ecile Paris. 2009.
Segmenting email message text into zones. In Pro-
ceedings of the 2009 Conference on Empirical Meth-
ods in Natural Language Processing, page 919928.
Association for Computational Linguistics.

Chang Li and Dan Goldwasser. 2019. Encoding so-
cial information with graph convolutional networks
forPolitical perspective detection in news media.
In Proceedings of the 57th Annual Meeting of the
Association for Computational Linguistics, pages
2594–2604, Florence, Italy. Association for Compu-
tational Linguistics.

Yuki Sawa, Ram Bhakta, Ian Harris, and Christopher
Hadnagy. 2016. Detection of social engineering at-
tacks through natural language processing of con-
versations. In Proceedings of the 2016 IEEE Tenth
International Conference on Semantic Computing
(ICSC), pages 262–265.

Alex Sherstinsky. 2013. Fundamentals of recurrent
neural network (rnn) and long short-term memory
(lstm) network. pages 1–39. Cornell University.

Blake E. Strom, Joseph A. Battaglia, Michael S. Kem-
merer, William Kupersanin, Douglas P. Miller, Craig
Wampler, Sean M. Whitley, and Ross D. Wolf. 2017.
Finding cyber threats with att&ck-based analytics.
The MITRE Corporation, Tech. Rep., 1(1).

Cynthia Wagner, Alexandre Dulaunoy, G´erard Wa-
gener, and Andras Iklody. 2016. Misp: The design
and implementation of a collaborative threat intelli-
gence sharing platform. In Proceedings of the 2016
ACM on Workshop on Information Sharing and Col-
laborative Security, pages 49–56. ACM.

Meijuan Yin, Xiao Li, Junyong Luo, Xiaonan Liu, and
Yongxing Tan. 2011. Automatically extracting name
International Journal of
alias of user from email.
Engineering and Manufacturing, 1:14–24.

Yue Zhang, Serge Egelman, Lorrie Faith Cranor, and
Jason I. Hong. 2006. Phinding phish: Evaluating
anti-phishing tools. Technical report, Carnegie Mel-
lon University.

Yu Li, Kun Qian, Weiyan Shi, and Zhou Yu. 2020.
End-to-end trainable non-collaborative dialog sys-
tem. ArXiv, abs/1911.10742.

Christopher D. Manning, Mihai Surdeanu, John Bauer,
Jenny Finkel, Steven J. Bethard, and David Mc-
Closky. 2014a. The Stanford CoreNLP natural lan-
guage processing toolkit. In Association for Compu-
tational Linguistics (ACL) System Demonstrations,
pages 55–60. ACL.

Christopher D. Manning, Mihai Surdeanu, John Bauer,
Jenny Finkel, Steven J. Bethard, and David Mc-
Closky. 2014b. The Stanford CoreNLP natural lan-
guage processing toolkit. In Association for Compu-
tational Linguistics (ACL) System Demonstrations,
pages 55–60.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg Cor-
rado, and Jeffrey Dean. 2013. Distributed represen-
tations of words and phrases and their composition-
ality. In Proceedings of the 26th International Con-
ference on Neural Information Processing Systems -
Volume 2, pages 3111–3119. Curran Associates Inc.

Adam Oest, Yeganeh Safei, Adam Doupe, Gail-Joon
Ahn, Brad Wardman, and Gary Warner. 2018. Inside
a phisher’s mind: Understanding the anti-phishing
In Pro-
ecosystem through phishing kit analysis.
ceedings of the 2018 APWG Symposium on Elec-
tronic Crime Research, eCrime 2018, pages 1–12.
IEEE Computer Society.

Daniela Oliveira, Harold Rocha, Huizi Yang, Dono-
van Ellis, Sandeep Dommaraju, Melis Muradoglu,
Devon Weir, Adam Soliman, Tian Lin, and Natalie
Ebner. 2017. Dissecting spear phishing emails for
older vs young adults: On the interplay of weapons
of inﬂuence and life domains in predicting suscepti-
bility to phishing. In Proceedings of the 2017 CHI
Conference on Human Factors in Computing Sys-
tems, CHI ’17, pages 6412–6424, New York, NY,
USA. ACM.

Tiancheng Zhao Amy Pavel Maxine Eskenazi
Prakhar Gupta, Shikib Mehri and Jeffrey Bigham.
Investigating evaluation of open-domain
2019.
dialogue systems with human generated multiple
In Proceedings of the 20th Annual
references.
Meeting of the Special Interest Group on Discourse
and Dialogue, Stockholm, Sweden. Association for
Computational Linguistics.

Abhilasha Ravichander and Alan W. Black. 2018. An
empirical study of self-disclosure in spoken dialogue
systems. In Proceedings of the 19th Annual SIGdial
Meeting on Discourse and Dialogue, Melbourne,
Australia, July 12-14, 2018, pages 253–263.

Sashank Santhanam and Samira Shaikh. 2019. A sur-
vey of natural language generation techniques with
a focus on dialogue systems-past, present and future
directions. arXiv preprint arXiv:1906.00500.

