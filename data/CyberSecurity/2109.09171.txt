1
2
0
2

p
e
S
9
1

]

R
C
.
s
c
[

1
v
1
7
1
9
0
.
9
0
1
2
:
v
i
X
r
a

Architecture and Its Vulnerabilities in Smart-Lighting Systems

Florian Hofer
Free University of Bolzano-Bozen
Bolzano
florian.hofer@stud-inf.unibz.it

Barbara Russo
Free University of Bolzano-Bozen
Bolzano
barbara.russo@unibz.it

ABSTRACT
Industry 4.0 embodies one of the significant technological changes
of this decade. Cyber-physical systems and the Internet Of Things
are two central technologies in this change that embed or connect
with sensors and actuators and interact with the physical envi-
ronment. However, such systems-of-systems undergo additional
restrictions in an endeavor to maintain reliability and security
when building and interconnecting components to a heterogeneous,
multi-domain Smart-* systems architecture. This paper presents
an application-specific, layer-based approach to an offline security
analysis inspired by design science that merges preceding expertise
from relevant domains. With the example of a Smart-lighting sys-
tem, we create a dedicated unified taxonomy for the use case and
analyze its distributed Smart-* architecture by multiple layer-based
models. We derive potential attacks from the system specifications
in an iterative and incremental process and discuss resulting threats
and vulnerabilities. Finally, we suggest immediate countermeasures
for the latter potential multiple-domain security concerns.

KEYWORDS
Industry 4.0, CPS, Security, Smart-City, Smart-Lighting

1 INTRODUCTION
Progressive computerization brings technology into every corner
and improves the automation and performance of environmental
and manufacturing processes. The German Government envisions
the fourth industrial revolution as an inevitable prospect for future
development. This revolution endows modern systems with “Smart”
attributes to increase operational efficiency, share information, and
improve their services’ quality [20]. These endowments allow the
creation of fully flexible production systems. They bring in new
business models, services, and products via Smart-* systems such
as Smart-Home or Smart-City [23].

Smart technologies rely on Cyber-physical systems (CPS) and
the Internet of Things (IoT) to achieve such goals. Smart-* systems
operate via an autonomous, decentralized decision-making process
that allows for local and faster reaction and thus enables higher
efficiency and production quality [21]. They run on a network of
intelligent devices of diverse make and function, requiring stan-
dardized interfacing and communication. This heterogeneity could
lead to inconsistencies making a system vulnerable. System attacks
can exploit those vulnerabilities to eavesdrop or harm an asset’s
value, causing virtual and physical loss. This distress is particularly
the case of Smart-Lighting systems, where publicly installed devices
may be subject to physical and cyber-attacks [3].

Consequently, modern architectural designs needs must include
security (security by design). However, this is a hard-to-achieve
task in a multi-domain environment where definitions and analysis

models defer between the application-relevant functional models.
Furthermore, a recent systematic mapping study identifies a lack
of research on security for Industry 4.0 architectures [19]. As a
result, security often experienced neglect, and existing architec-
tural models frequently suffer from simplifications and assumptions
from the “offline”-secure world. Thus, there is a need for guidelines
to build architectures and their models that incorporate security
concerns. Such guidelines would also help assess systems’ multi-
domain vulnerabilities and propose strategic and preventive coun-
termeasures [21] or determine corrective mitigation measures that
could reduce or eliminate a vulnerability [25].

This study presents a layer-based analysis and classification
technique of architectural vulnerabilities for multi-domain systems.
While specific new weaknesses may appear when interconnecting
such heterogeneous systems, this paper focuses on a technique that
extends our knowledge of a system through existing results from
relevant domains. We explore security concerns within several ref-
erence models designed from connected CPSs or IoT sub-domains
to extend our assessment beyond a single-domain analysis system-
atically. As a practical example of such a process, we examine the
decentralized Smart-Lighting architecture of an in-field case study.
Overall, the contributions of this work are:

• A technique to associate and classify architectural layers of
existing reference models for CPS and IoT environments;
• A technique to consolidate the taxonomy of threats and
attacks for vulnerability analysis of multi-domain, multi-
layer Smart-* architectures;

• An architectural analysis and multi-domain taxonomy on
vulnerabilities and attacks of a Smart-Lighting system.

We organized the rest of the paper as follows. Section 2 and 3
present related work and our methodology and evaluation strategy.
In Section 4, we examine the case study and create its multi-domain
architecture reference and security taxonomy tables. In Section 5,
we apply our iterative classification technique using these tables
continued by discussing threats, vulnerabilities, and possible coun-
termeasures. Finally, we conclude in Section 6.

2 RELATED WORK
We identified three major security topics: assessment through archi-
tecture layers, (traditional) offline analysis tools, and architecture
design and patterns. In addition, we select cornerstone studies and
describe their relevance in Industry 4.0 in the following.

Security and layers. Lezzi et al. [21] analyze how research deals
with the current cybersecurity issues in Industry 4.0 contexts, lay-
ing down the state of development regarding Smart-* architectures.
The authors argue that an ideal design and development strategy
considers cybersecurity from the start. The study identifies norms

 
 
 
 
 
 
Conference’17, July 2017, Washington, DC, USA

F. Hofer and B. Russo

and guidelines for architecture security. It proposes structured solu-
tion approaches along with the taxonomy of standard cybersecurity
terms. Within their list of threat identification methods, they men-
tion a three-layer-based attack assessment technique. While they
do not discuss the method’s efficiency further, their concluding
remarks highlight the lack of an all-layer cybersecurity analysis.

Although little research exists on vulnerability classifications in
these new Smart contexts, we can adopt some published results on
CPS architectures. Ashibani and Mahmoud [3] redacted a generic
security analysis comparing CPS technologies to traditional IT
security. The article is among the first to discuss the analysis and
detection of multi-layer security requirements, possible attacks,
and issues for information security on three architectural layers.
However, their theoretical considerations appear limited to their
feasibility, and many discussed terms had non-traceable sources.

Varga et al. [32] created an analogous, IoT focused overview. The
study targets the automation domain with a fourth architecture
layer for data processing, highlighting security threats and mitiga-
tion. The paper displays how similar analyses can impact results
from their biased viewpoint. While IoT and CPS security present
similarities, the article disregards typical distributed control and
treats issues as binary problems making the analysis incomplete.
However, the strong data-centric viewpoint helps in the assessment
of data processing systems.

Han et al. [16] submit in their layer analysis a different aspect
to vulnerabilities by classifying them as internal or external. They
propose a four-plus-one layer architecture and a framework for
an intrusion detection system (IDS). Due to the lack of a unique
definition of CPS, the authors suggest an iterative application of
appropriate mitigation strategies. Unfortunately, they apply this
iterative notion to IDS design only. Furthermore, even though they
deliver a control-centered selection of attacks for each layer, the
article also admits definition issues.

(Traditional) offline analysis tools for security and safety. Safety
and security relied on design time offline analysis tools for many
years, a tradition that did not change much for cybersecurity. Bolbot
et al. [6] describe the relationship between the two as a conditional
dependence. Their article focuses on design-time safety assurance
methods, their modifications, and their integration. They identify
sources of CPSs’ complexity and test offline assessment techniques
against them. Within the remarks of this investigation, we find the
need for a systematic method for issue identification. They highlight
the importance of mixing and adapting existing techniques to deal
with CPS’s complexities to tackle cybersecurity issues.

Subramanian and Zalewski propose in [29], and [30] an alter-
native assessment approach for non-functional requirements to
connect security and safety in the CPS domain. The non-functional
domain’s well-defined ontology allows for an inter-dependency
graph, which then propagates information as needed. The method
shows how the dependencies of a single requirement can change
an issue’s weight. Majed et al. [24] suggests a framework for evalu-
ating security exposure by weight on a connected graph. Via the
shortest path, we can then identify the most accessible vulnerability.
Although both are exciting approaches, the distribution of weight
and path for each node remains unclear.

Domain layered
architecture articles

(Classification)

Attack feasibility
validation

Differential
description

Application-
specific attack tree

Derive threats
and vulnerablities

End of analysis

1

Smart-Lighting
System

Start of analysis

(Identification)

Extract spec-
ifications

Role assignment

Pick related
domain references

Map layers to
components

Layer cross-
mapping

Mapping
complete?

𝑦

𝑛

Create multi-
domain taxonomy

denotes iterative tasks done,
once for each reference model

Figure 1: Design cycle steps carried out for a Smart-* system
vulnerability identification.

Architecture design and patterns. Alguliyev et al. [2] analyze and
classify in a recent literature review existing research on CPS se-
curity using the CIARR model, a variant of the CIAA security re-
quirements. This variant separates availability into resilience and
reliability, suggesting that CPS’s non-functional requirements vary
from traditional IT. The analysis discusses approaches of architec-
tural design to improve system security. It draws up the context and
risks, offers a generalized attack tree, proposes mitigation strategies,
and informs about found countermeasures and dominant future
research areas.

Ryoo et al. 2015 [26] try to break assessment conventions by
proposing a generic new three-stage approach. The three phases col-
lect information based on tactics, patterns, and vulnerabilities. The
process guides an analyst through three security analysis phases
with an improved weakness (CWE-1000) and entirely new archi-
tecture pattern databases. However, the method is still subject to
refinement and tuning.

3 METHOD
For our layer-based technique, we processed the target Smart-
Lighting architecture (SLA) in all its components, Figure 1. Inspired
by design science [18], our technique combines results and expe-
riences from a knowledge base of related domains. An iterative
design process (design cycle) integrates them to create artifacts as-
sessed in-field (relevance cycle). Finally, the present technique and
resulting artifacts will grow the knowledge base (rigor cycle). The
focus of this paper’s design process is described in the following
consists of two steps: identification and classification.

Architecture and Its Vulnerabilities in Smart-Lighting Systems

Conference’17, July 2017, Washington, DC, USA

Identification. As with any modern system-of-systems, an SLA
contains multiple heterogeneous systems, each with its domain-
specific constraints. Hence, we first analyze the system’s compo-
sition by gathering specifications from technical data sheets and
reconstructing its architecture diagram. In particular, each compo-
nent gets assigned one or more architectural roles. For example,
we will see that the LoRaWan end-node controllers take up two
roles, (B) in Figure 2. They act as a communication gateway (net-
working) and perform decentralized supervision of the connected
lighting-bus devices (control).

Domain-specific security aspects further characterize a compo-
nent. For example, physical tampering characterizes a light device.
Based on previous work [19], we select domain-specific layered
architectural reference models (𝑅𝑀𝑖 ) from representative research
papers. Each model holds a different architectural focus (e.g., con-
trol flow) or domain (e.g., IoT) and carries related information on
possible layer-level attacks and vulnerabilities.

Based on component roles, we draw a map 𝑀𝑖 between the com-
ponents and the layers of a model Λ(𝑅𝑀𝑖 ). For example, the sensor
and actuator layer contains a light device. Starting bottom-up, we
iterate through the architecture components and survey each 𝑅𝑀
for matching role descriptions. We ensure that: a) every compo-
nent fits into at least one layer of a reference model, and b) for
each layer, there exists a component that maps into it. The former
ensures that each component can be described in each reference
model and enriched with the information of a layer’s attacks and
vulnerabilities. The latter secures that all attacks described in each
reference model find a target in our system. As an example, Ta-
ble 1 shows the roles of a LoRaWan lighting controller and their
assigned layer mapping among three reference models. For 𝑅𝑀𝐴’s
generic CPS and IoT-oriented and 𝑅𝑀𝐿’s service-oriented model,
the "Control" role maps best to their Application layer. In contrast,
in the control-oriented 𝑅𝑀𝐻 model, this supervising component
best fits the Supervisory Control sub-layer. While layer descriptions
are similar, the focus diverges slightly between models. Also, the
attack definitions for the mapped layers reflect such proximity. For
Example, the definitions for Malicious Code (𝑅𝑀𝐻 ) and Malicious
virus/worm (𝑅𝑀𝐿) refer to the same type of attack. However, they
diverge due to focus, i.e., performance vs. data-centric, emphasizing
the importance of creating a unified taxonomy.

Each component now equips a role and projected attacks for each
mapped reference model layer. Consequently, we can link layers
from the different reference models through their common com-
ponent mapping. This consolidation phase constructs thus cross-
mappings 𝐶𝑀𝑖 𝑗 among the reference model layers Λ(𝑅𝑀𝑖 ) and
Λ(𝑅𝑀𝑗 ) based on component allocation. However, as one model’s
layer definition may encircle only a subset of another model’s layer,
cross-mappings are unidirectional and may not hold in reverse. It
is typically the case for more abstract models that cross-map to
layer-rich models. Therefore, we suggest starting with the former
as it allows for easier and better associations.

In the final identification step, we use the cross-mapping 𝐶𝑀𝑖 𝑗
to create a differential attack and threat table. This table contains
relevant definitions to verify a Smart-Lighting system for attacks,
threats, and vulnerabilities. First, we create an initial base table that
records layer relationships and enriches each entry with its origi-
nal research’s attack taxonomy. We further append each attack’s

origin and original meaning for a more accurate understanding
by following citations. Next, starting again from the least detailed
model, e.g., 𝑅𝑀𝐴, we review attack definitions of layers connected
by the cross-mapping, 𝐶𝑀𝑖 𝑗 . We remove duplicates, integrate def-
initions, or highlight differences or ambiguities. If an undefined
term appears, we define it according to its context with the help
of other domain-related and reference sources. Once complete, we
group the remaining entries by layers and threads to build the dif-
ferential, application-specific taxonomy table. Consequently, the
consolidation outputs are a layer mapping to the architecture and
between models and a taxonomy table that includes the analyzed
multi-domain perspective.

Classification. With the preceding table, we perform a differential
weakness discovery for the SLA. We evaluate each attack’s defi-
nition and assess if, in the Smart-Lighting domain, the proposed
attacks remain possible or sensible. Starting bottom-up in the archi-
tecture, we pick a network or its next component and verify each
attack in the differential taxonomy table for every assigned layer in
the model. The process repeats until it analyzes all reference model
layers and SLA components. We summarize and discuss the results
of the attack analysis in a differential description that presents
newly found attacks while honoring a previous model’s results.

To highlight differences and commonalities to CPS of a Smart-
Lighting system, we create a domain-specific attack tree based on
the generic tree created by Alguliyev et al. [2]. Then, using their
attacks-threats functional CPS model, we reuse or define further
attacks and threats in the taxonomy derived from our study. The re-
viewing of vulnerability definitions of the reference articles and the
resulting attack tree will then serve as input for a final assessment
of the possible vulnerabilities in a Smart-Lighting system.

4 IDENTIFICATION
4.1 Smart-Lighting architecture under study
To explain our method, we use the case study architecture of a
Smart-Lighting installation. The Smart-City pilot project runs in
the city of Merano, Italy. It covers an area of 26𝑘𝑚2 and more than
6.700 distributed light posts. Figure 2 illustrates the result of the
identification step. The figure shows a simplified version for the
demonstrative purpose of the installed system’s architecture con-
taining all the elements needed to create smart, remotely controlled
lighting infrastructure. Three different networking technologies
convey the control and status information between the end-nodes
and the computing cloud: light devices (1-2), wireless network (3),
and a traditional IP-based network (4-7). Each of the three networks
varies in function and timing constraints, acting thus as a leveled
control model [15].

Dali end-nodes. Digital Access Light Interface (DALI), a master-
slave two-wire message-based bus for lighting and illumination sys-
tems, interconnects the light devices [5]. Its self-clocked differential
encoding runs the data on a low data rate of 1200baud in half-duplex,
and when externally powered, for multiple hundred meters and
resilient to interference [5, 17]. The DALI end device controllers (A),
also called ballast controllers, execute simple application-specific
programs and require only small micro-controllers [10]. In 2017, the
Digital Illumination Interface Alliance (DiiA) released a revised ver-
sion of the standard. DALI 2 standardizes timing requirements and

Conference’17, July 2017, Washington, DC, USA

F. Hofer and B. Russo

Table 1: Example LoRaWan end-node layer role and definition differences for reference models

Role

Control

Communication

𝑅𝑀𝐴 [3]

𝑅𝑀𝐻 [16]

𝑅𝑀𝐿 [22]

Application: [..] process the received
information from the data transmis-
sion level and issue commands to be
executed by the physical units, sen-
sors and actuators.

Transmission: is responsible for in-
terchanging and processing data be-
tween the perception and the appli-
cation. [..] are achieved using local
area networks, communication net-
works, the Internet or other existing
networks [..].

Supervisory Control: By aggregat-
ing the measurement data from mul-
tiple points in the network, the su-
pervisory sub-control level creates
system-level feedback control loops,
which make system-level control de-
cisions.
Network: [..] takes charge of net-
working sensors and actuators as
well as bridging the sensor/actuator
layer and the higher control layer
with a variety of communication de-
vices and protocols.

Application: [..] receives the data transmitted
from network layer and uses the data to provide
required services or operations. For instance,
the application layer can provide the storage
service [..] or provide the analysis service to [..]
predicting the future state of physical devices.

Network: [..] used to receive the processed infor-
mation provided by perception layer and deter-
mine the routes to transmit the data and infor-
mation to the IoT hub, devices, and applications
via integrated networks.

kbps in frequency shift key (FSK) modulation (Europe channels). Its
transmission robustness outperforms traditional systems, enabling
servicing thousands of devices and reducing the need for a mesh
network [4]. The LoRaWan network associates nodes (B) through
gateways (C) to network and application servers (F). A LoRaWan
end-node (B) can have different modes: event-driven sensors, bea-
con scheduled actuators (usually both battery-powered), or always
online. It stores two AES128 keys, securing the communication to
the network and application server. The installed gateways (C) serve
as bi-directional relays and mount multichannel-multi-modem units
for simultaneous reception on different frequencies and data rates
without any end-node association or handover. A network server
manages the distribution of data flow between an application and
nodes. It reconfigures a gateway’s multi-modem channels and data
rate according to needs and environmental conditions. Such an
adaptation targets the shortest air time (Adaptive data rate) and
the best channel diversity (Channel maps) while increasing over-
all transmission efficiency and total throughput [8]. As the entry
and exit-point of data flow are not binding, LoRaWan supports
redundancy by default. However, the network setup makes direct
end-node communication impossible [4]. The used LoRaWan end-
device mounts a LoRaWan/DALI master controller for routing and
the timed control of connected DALI devices, and Bluetooth LE
hardware for the initial configuration setup [31]. It offers over-the-
air (OTA) firmware update and OTA device activation and features
digital and analog inputs and outputs to attach optional sensor-
actuator hardware. The hardware of the used LoRaWan gateway
mounts an ARM Cortex-A™processor running a Linux kernel. It
allows user program deployment and features a backup uplink over
3G.

The IP infrastructure. The IP-based infrastructure is configured
as in a traditional IT system. Local networks use IPv4 or IPv6 con-
nectivity through Internet (5-6) and unite firewalls with gateways
(4) and computation cloud (7). Within and between networks, stan-
dard protocols (IPSec/HTTPS) secure connections. The firewalls
(D-E) perform routing and protection tasks, providing traditional
intrusion detection algorithms. The cloud environment (F) stores
and analyzes data. The data from the on-site gateways enters the

Figure 2: Smart-Lighting case study architecture

signal slopes, increasing interoperability [12]. It also adds multi-
master operation or multiple logical units per bus device while
maintaining backward compatibility with DALI 1.

The LoRaWan network. The wireless star-of-stars network is
designed on a LoRaWan (Long Range Wide Area Network) master-
slave protocol that runs on top of a Semtech LoRa wireless trans-
mitter [8]. The transmitter operates in Industrial-Scientific-Medical
(ISM) band with either 250 half-duplex channels of 5.5 kbps and
one at 11 kbps in chirp spread spectrum (CSS), or one channel of 50

example LORA rangeInternetDALIDALIDALILORALORADALIDALIDALIGWGWGWFWFW1A3CB2DX45IoT CloudFWE7F61ANetwork linksComponentsFComputing infrastructure EIP local/public firewallCLoRaWan GatewayBLoRaWan ControllerALighting control nodeD74IP local network65IP public network3LoRaWan Wireless21DALI wired linkXLight intensity sensorArchitecture and Its Vulnerabilities in Smart-Lighting Systems

Conference’17, July 2017, Washington, DC, USA

cloud through a software firewall, which forwards it to the “Lo-
riot IoT” network server running as an IaaS instance. The latter
forwards the message payload to a PaaS application server oper-
ating an “Azure IoT” service running a set of custom-developed
“Azure Functions” and micro-services. These gather and store the
acquired information in a “Kosmos DB” No-SQL database and take
control measures accordingly. The virtual LAN and firewall (E)
configuration allow internal data flow governance and additional
fine-grained protection mechanisms.

4.2 Layer mapping
To cover all aspects of our SLA, we use four reference models,
𝑅𝑀𝑖 , originating from varying domains: one model to cover generic
aspects of CPS’s information security, one to highlight and stress
the importance of information and control flow in CPS, and two
to extend aspects peculiar to IoT, Big Data, and service orientation.
The SLA maps then to the reference models. Reference models 𝑅𝑀𝑖 ,
their mappings 𝑀𝑖 and cross-mappings 𝐶𝑀𝑖 𝑗 are further detailed
in the rest of this section.

𝑅𝑀𝐻 , (Han et al. [16]): the architecture of systems arranges in a
4 plus 1 layer model, Figure 3 center. Its layer stack contains the
Physical, Sensor and Actuator, Network, and Control layer. The lat-
ter divides into three control-oriented sub-layers: Local-distributed
control action layer, Supervisory sub-control level, and Supervisory
higher control level. This division highlights hierarchical separation
and enables distributed independent control. The plus one (Informa-
tion) layer interfaces transversely, acting on all four stacked layers.
It represents the information flow sinking to the top and sourcing
from among all layers in the architecture or vice versa, supporting
the notion of shared information for distributed control.

𝑅𝑀𝐴, (Ashibani and Mahmoud [3]): uses a three-layer approach
defined as the Perception, Transmission, and Application layer. Its
architectural distribution is similar to 𝑅𝑀𝐻 in that both propose
a centrally layered stack with similar features. While the authors
acknowledge that three layers are not enough to abstract all CPS
functionality, the model suffices to capture the functional core.
Without a Physical and an Information layer, 𝑅𝑀𝐴 proposes a more
generalized view that allocates all control and computation on the
top layer.

𝑅𝑀𝑉 (Varga et al. [32]): focus on IoT and distributed data acqui-
sition. It draws on the previous three-layer model but adds a Data
processing layer to take care of the vast data mole entering the IoT
hub. This addition suggests a strong focus on data processing and
process automation analytics.

𝑅𝑀𝐿, (Lin et al. [22]): details the aspect of service orientation
in an IoT-based layered architecture. Similar to 𝑅𝑀𝑉 , they extend
the three-layer model with an additional Service-oriented layer
between Network and Application. The layer orchestrates and man-
ages the available services to translate, process, and store incoming
and outgoing data. As this role is passive, it suffers from adjacent
layers’ vulnerabilities, making it transparent. As we will see during
mapping, 𝑅𝑀𝐿 ends up virtually equivalent to 𝑅𝑀𝐴.

Next, we compose layer mapping (𝑀𝑖 ) for each model and com-
ponent in Figure 2 based on the identified roles in Table 2. An
integrated streetlight (A) senses the lamp current and actuates lamp
illumination levels. A generic sensor, such as a light intensity sensor

Table 2: Identified architecture roles and description

Role

Description

Store & Process
Control

Elaboration and analysis of information
Feedback management informed via
sensing and actuating
Communication Data exchange and bridging between lo-

Sensing

Actuating

cations, systems and technologies.
Capturing and quantifying of the physi-
cal world
(Inter)action on the physical world.

(X), captures light intensity. We map both thus to 𝑅𝑀𝐻 ’s Sensor
and Actuator layer. 𝑅𝑀𝑉 ’s Sensors and Actuators layer matches the
same description, while the Perception layer offers the best match
for 𝑅𝑀𝐴 and 𝑅𝑀𝐿. The light device further uses lamp data and
control to monitor and govern light intensity and system health. In
𝑅𝑀𝐻 , the Local(-distributed) Control sub-layer manages the given
sensory information locally, acting as a local control entity. All
other 𝑅𝑀 refer to a single Application layer for this purpose. Fig-
ure 2 shows these devices connected to peer nodes and a master
controller (B) through wired couplings (1)-(2). The latter firstly func-
tions as a network bridge between DALI and LoRaWan. It forwards
the information over wireless connections (3) and IP networks (4-
5-6-7) through firewalls (D-E) and gateways (C) to the IoT Cloud
(F). The Network layer of 𝑅𝑀𝐻 and 𝑅𝑀𝐿 best describes these de-
vices’ and links’ connectivity roles. It is responsible for distributing
and interconnecting devices, sensors, actuators, and services the
Control layer. Similar descriptions for the Transmission layer in
𝑅𝑀𝐴 and the Networking layer in 𝑅𝑀𝑉 fall into place. Secondly,
LoRaWan end-node controllers (B) perform minor decentralized
supervision, switching, and timing operations of the connected
light devices. This description maps to the Supervisory Control
sub-layer of 𝑅𝑀𝐻 to which all local controllers subside. The nodes
report back to a higher instance, a business process located at the
IoT cloud. This process is in charge of management and control
of the system’s overall operation, i.e., the city, and relates to the
Supervisory Higher Control of 𝑅𝑀𝐻 . All other 𝑅𝑀 refer to both
mentioned control sub-layers to the single Application layer. 𝑅𝑀𝑉
and 𝑅𝑀𝐿, however, have different role associations for the IoT cloud.
𝑀𝑉 includes an assignment of the Data processing layer in charge
of information pre-processing. At the same time, 𝑀𝐿 foresees a
Service-oriented architecture to manage service interaction and
processes. All the above components handle or contain information
of some sort. 𝑅𝑀𝐻 ’s Information layer applies thus on all compo-
nents and roles. Further, the physical world is specified only in
𝑅𝑀𝐻 mapped, thus, to the physical layer. Table 3 summarizes the
device-layer assignments of this paragraph.

𝐶𝑀𝐴𝐻 : The perception layer maps to the Sensor and Actuator
layer from Han et al., the Transmission to the Network layer, and the
Control to the Application layer. However, 𝑅𝑀𝐴 has no reference
neither for the physical nor for the information layer. While the
latter might blend into the existing three layers of 𝑅𝑀𝐴, no notion
of physical components other than sensors or actuators is present
in 𝑅𝑀𝐴, making this a partial extending cross-mapping.

Conference’17, July 2017, Washington, DC, USA

F. Hofer and B. Russo

Table 3: Device layer allocations for the SLA of Figure 2

Device

𝑅𝑀𝐴

𝑅𝑀𝐻

𝑅𝑀𝑉

𝑅𝑀𝐿

IoT Cloud

(F)

Firewall
Gateway

Controller

Lighting node

Light Sensor
Physical world

(D-E)
(C)

(B)

(A)

(X)

Application
–
–

Transmission

Application

Perception

–

n
o
i
t
a
m
r
o
f
n
I

Higher supervisory
Control
–
–

Application
Data processing
–

Application
–
Service-oriented

Network

Networking

Network

Supervisory Control
Local Control
Sensor and
Actuator
Physical

Application

Application

Sensors and
Actuators
–

Perception

–

𝑅𝑀𝐻

𝑅𝑀𝐴

Higher Supervisory
Control

Supervisory Control

Local Control

Application

𝑅𝑀𝑉

Application

Data-
Processing

Network

Transmission

Networking

Sensor & Actuator

Perception

Sensors & Actuators

Physical

n
o
i
t
a
m
r
o
f
n
I

Figure 3: Comparison of layer allocations for the SLA of Fig-
ure 2 in relation to 𝑅𝑀𝐴, the least detailed model

𝐶𝑀𝐴𝑉 , 𝐶𝑀𝐴𝐿 : The two IoT models show only minor mapping
differences to the three-layer model of 𝑅𝑀𝐴. Both map almost di-
rectly with minor differences in naming for Transmission/Networking
and Perception/Sensor and Actuator. The fourth layer in both pro-
posals shares some functionality with their lower layer. However, it
communicates to the upper layer, partially parallel to 𝑅𝑀𝐴’s appli-
cation layer. Their function distribution on the example architecture
emerges thus almost identical and transparent. These models can
thus extend 𝑅𝑀𝐴s notions of attack for application layers with
details based on data processing.

Finally, we build a common taxonomy starting with the most
abstract model 𝑅𝑀𝐴. First, we compare definitions with the more
detailing classification of 𝑅𝑀𝐻 and the definition extensions for
service and data-centric architectures of 𝑅𝑀𝑉 and 𝑅𝑀𝐿. Then, we
align definitions with 𝑅𝑀𝐴’s layers in a separate spreadsheet, mark
inconsistencies, additions, duplicates in color, and finally filter and
merge them. It is worth noting that we encountered and marked
multiple definitions during this step with untraceable origin. The
grouped remaining attacks by layer and threat, where we use 𝑅𝑀𝐴
as layer base, result like the excerpt in Table 4. The table lists
threats for each layer, filtered attacks, duplicates, and the definitions,
possibly integrated with the duplicate’s details. For example, the
last row lists three attack duplicates in other 𝑅𝑀s. It integrates the
𝑅𝑀𝐴 definition of “Replay attack“ with detail from 𝑅𝑀𝐻 .

Figure 3 displays the cross-comparison result of the consolidation
phase. All tables containing attack and threats descriptions of the
different stages of this work are available as download1.

5 CLASSIFICATION
In this section, we iterate through the SLA in Figure 2 and ver-
ify if the attacks remain possible or sensible. As the capabilities
of the three network technologies differ significantly, we analyze
each network separately by component. Then, through their com-
ponent’s layer allocations (Table 3), we verify the feasibility of a
layer’s attack using the unified differential taxonomy. Finally, we
determine threats and connected vulnerabilities, concluding with
suggestions for countermeasures.

5.1 Attack validation
5.1.1 DALI Network. The DALI network consists of streetlights (A)
interacting with the physical world, connected through a two-wire
bus (1-2) to a LoRaWan end-node (B) that acts as network master,
Figure 2.

𝑅𝑀𝐴 [3]: At the Perception layer, we mainly see two types of
node attacks: attacks that physically act on the node and attacks
that virtually interact with the node. The former requires some
form of physical activity on the node where an attacker can get,
alter, or make information inaccessible through node capture, tam-
pering, or destruction. The latter type interferes with the node’s
function by intervening in sensor measurement or corrupting data
integrity. Physical attacks may cause information disclosure by, e.g.,
replacing the node with a duplicate, stealing its data, replicating its
functions, and attacking information integrity through false infor-
mation. Such attacks may cause system malfunction, e.g., darken
specific city areas, as lampposts are publicly accessible. For virtual
attacks on systems using the new DALI 2 standard, a captured or
inserted false node could act as master and take over other nodes
(i.e., spoofing). It may actively poll or even change another node’s
data and configuration, directly controlling, corrupting, and desyn-
chronizing a network. DoS attacks, such as flooding, can take out
a node and make its services unavailable. Finally, electromagnetic
interference attacks influence sensory measurements and actuation

1 Industry 4.0 - Smart-Lighting Taxonomy table https://bit.ly/3nHaxjN

Architecture and Its Vulnerabilities in Smart-Lighting Systems

Conference’17, July 2017, Washington, DC, USA

Table 4: Excerpt from the Perception layer of the multi-domain taxonomy table, with notes of 𝑅𝑀 origin

Threat

Attack

Note

Also seen

Resource exhaustion

Path based DoS (A)
Flooding (A)
(D)DoS attacks (A)
Replay attack (A)

Sending messages along the routing path, flooding
Flooding a service or resource with requests, ex join
Attempt to make network or service unavailable
Replay authentication to deplete authentication author-
ity resources; also delayed, to external entities or to other
node to gain access or trust (H)

Flooding (V)

Replay
Replay
Replay (L)

(H),
(V),

control, e.g., through action on the system’s resonance frequency,
corrupting measured values, or feedback loops.

Misleading attacks and buffer overflow occur at the application
layer in (A) and (B). The former attacks attempt to make status
or value readings unreachable (Denial of Service – DoS), forge
commands, or intercept and manipulate loops through altered in-
formation (Man in the Middle – MitM). The latter inject malicious
code. Such attacks to be successful require specialized knowledge
of the attacked micro-controllers [10, 31]. On this layer, all attacks
interact virtually with the node. Thus, an attacker with network
access can systematically trial all reachable nodes.

Virtual attacks gain even more visibility on the Transmission
layer of a controller (B). Namely, physical access to the two-wire
DALI bus allows an attacker to perform DoS or selective colli-
sion attacks (including the mere cutting of wires), muting targeted
nodes, and disrupting or desynchronizing control loops. Flooding,
or attacker-initiated off-the-schedule polls, can quickly exhaust the
network’s limited relay capacity. While the simple bus intrinsically
avoids routing-based vulnerabilities such as MitM or selective for-
warding, its standard lacks authentication and encryption. That
enables eavesdropping or, on the new DALI 2 standard, data tam-
pering and forging control messages. Finally, it is worth mentioning
that an attacker can orchestrate most of the listed attacks remotely
through, e.g., a captured LoRaWan gateway node (B)

𝑅𝑀𝐻 [16]: The model redefines the desynchronization attack
(called Control Forgery in 𝑅𝑀𝐴) for the Control layer. The new defi-
nition calls it specifically designed to damage a system, e.g., delayed
instrument readings that dis-align physical and cyber worlds. In
𝑅𝑀𝐴, it only causes generic system misbehavior. For the Network
layer, 𝑅𝑀𝐻 suggests the spoofing attack may also aid in transmit-
ting false error messages. These messages suggest fictitious lamp
failures to the supervisory control, disabling the lamp. On the Physi-
cal layer, attacks to external system components are considered. An
attacker may intervene on DALI infrastructure and hinder its oper-
ation, e.g., cover a lamp. Finally, the Information layer highlights
privacy issues that might arise through the information extracted
from the transmitted data. For example, the presence/passage of
persons in motion-activated areas hints at vacancy. It may cause
burglary of adjacent housing units.

𝑅𝑀𝑉 [32]: The Application layer of this model adds configuration
tampering attacks for both nodes. Due to resource constraints or
programming errors, the embedded code on ballasts and LoRaWan

end-nodes might not verify control parameters for limits and con-
straints. Such attacks set invalid operating values, e.g., default il-
lumination values to zero, disabling illumination, and threatening
safety.

𝑅𝑀𝐿 [22]: This model considers unauthorized users’ implications
on the network level. Like configuration attacks, unprotected DALI
allows an attacker to alter device settings with comparable results
(Perception layer). Furthermore, the model identifies malicious code
injection attacks as a source of access for multiple system levels.
Thus, the node would act as a vehicle for diffusion on all levels. How-
ever, as for the attack in 𝑅𝑀𝐴, resource constraints and specificity
make it hard to predict their success.

5.1.2 LoRaWan Network. A typical SLA combines multiple gate-
ways (C), LoRaWan end-nodes (B), and at least one Network server
(F) through LoRa (3) to create a city-wide LoRaWan network, Fig-
ure 2. In addition, these LoRaWan end-nodes may feature sensors
and actuators (X) which interact with the physical world for further
illumination control or monitoring.

𝑅𝑀𝐴 [3]: On the Transmission layer, the LoRaWan network
exposes multiple availability-related attacks as adversaries can
directly access the ether. For example, despite the robust multi-
channel multi-modem gateway configuration, typical DoS attacks
are feasible through multi-channel frequency jamming, intentional
collision, or flooding. Notably, a random message flooding attack
targeting those gateways might disrupt a network section. However,
the latter solely react to preambles and, by default, cannot handle
more than ten packets at a time [28]. Furthermore, a targeted DoS
attack will cause collisions and force re-transmissions, ultimately
exhausting a battery-powered node’s energy.

Suppose these messages are further “replays” of join requests
(replay attack). In that case, forwards to Join or Network servers add
computation burden and eventually exhaust available resources.
Collision attacks have a similar overpowering effect. Unverified
transmission practice on the medium and its protocol similarities to
ALOHA impact severely on successful message reception, i.e., chan-
nel exhaustion at 60% load and only 18% of total capacity [4, 13].
A jamming attack is harder to perform and requires at least three
parallel transmissions on the default LoRaWan frequencies close
to a device [8]. Namely, an adequately configured device will see
jamming as radio interference and re-transmit on a different chan-
nel. Related attacks, such as a resonance attack, will also identify
as interference and cause the same response [4]. However, if un-
confirmed messaging is used, the data loss may go unnoticed and
not trigger any change. Listen-in and analyzing this high number
of re-transmitted packages enables side-channel and time analysis

Conference’17, July 2017, Washington, DC, USA

F. Hofer and B. Russo

attacks to deduce session-key composition. However, the used two-
layered encryption limits attack effectiveness. Other typical attacks
for the Transmission layer, such as MitM, Sybil, and eavesdrop-
ping, remain ineffective until successful capture of the key. Despite
missing keys, traffic analysis helps conclude origin, network con-
figuration, and message function. Alternatively, an attacker can
attempt node capture and tamper with its memory. The node hosts
the necessary keys to send manipulated messages, opting to disrupt
the network using valid credentials.

A node (B) is again subject to misleading and buffer overflow at-
tacks at the Application layer. However, while session-keys-protected
channels harden a manipulation resorting to MitM, command forgery
and interception, attempts to make status or value readings unreach-
able (DoS) stay valid. Thus, even though transmission requires mas-
ter capabilities and session keys, the same risks for code injection as
for the DALI network apply. Again, an attacker with network access
can systematically trial all reachable nodes. The only attack at the
Perception layer refers to sensors connected to the LoRaWan con-
troller. Electromagnetic interference attacks can influence sensory
measurements and actuation control.

𝑅𝑀𝐻 [16]: We encounter privacy and policy-related issues at the
Information layer, desynchronization problems at the Supervisory
Control sublayer, and issues with direct intervention at the Physi-
cal layer. The Information layer is mainly protected by encryption;
however, this does not stop attackers from traffic analysis; gather-
ing event-based information such as pedestrian or vehicle passing
results are helpful, e.g., to assess citizens’ behavioral patterns in
their neighborhood. Furthermore, multiple join attempts caused
through interference signals may help an attacker de-crypt keys
used for network and application sessions through excuse attacks.
In addition, an adversary can tamper with sensory devices on the
physical layer to manipulate measurements and influence lamp
control, e.g., artificially raise sky illumination levels, tricking the
system into believing that a shallow street illumination level suf-
fices. Finally, a control issue that might emerge is a side effect of
scalability. Similar to the situation described in Section 5.1.1, the
size of the network influences the throughput capabilities. Even
though the control loop involving LoRa is less tight, an extended
period of reduced or interrupted communication with a gateway
or network server could lead to unpredictable behavior.

𝑅𝑀𝑉 [32]: Similar to DALI, configuration tampering attacks at
the Application layer may befall LoRaWan end-nodes with similar
side effects. Finally, at the Network layer, the model adds fairness
mechanism attacks and extends the definition of DoS flooding. The
former attack tampers with the open-source WAN algorithm to
elude medium sharing mechanisms and exhausting transmission
resources. Flooding’s extended definition reveals a similar purpose:
malformed packets flood a targeted network or application to over-
load and corrupt resource availability.

IP-Based Infrastructure. The most traditional network in our
5.1.3
SLA, the IP infrastructure, connects multiple IP-based devices. It
transports data between the on-site LoRaWan gateways (C) and the
IoT computing cloud (F) through dedicated firewalls (D-E), Figure 2.
In addition, the network is in charge of a higher level of connectivity,
servicing LoRaWan and DALI for the applications supervising the
city’s lighting.

𝑅𝑀𝐴 [3]: On the Transmission layer, we find typical communication-

related attacks that target resource availability or intercept or
manipulate messages. Most parts of the network apply double-
encryption, making attacks such as MitM and eavesdropping oner-
ous. Routing-based attacks are most effective on routed LAN pack-
ets, available at the Cloud internal LAN (7). Selective forwarding,
routing, sinkhole, wormhole, replay, spoofing, or compromised key
attacks could occur here. They help an attacker to weaken and
delay network traffic or reroute data for traffic and side-channel
analysis. If integrated with traffic analysis, such attacks get more
efficient and difficult to detect.

Besides, despite tunneling and encryption, most of the DoS at-
tacks keep their effectiveness. A typical DDoS attack could target
VPN end-points, e.g., FW (E), which makes up a single point of fail-
ure for the two sub-nets, and a bottleneck on high traffic. Similarly,
all network components are susceptible to exhaustion attacks. Fi-
nally, tampering and node capture, e.g., the external firewall, could
help acquire stored secrets and, e.g., reroute VPN tunnels for gen-
eral data capture. The primary function of the Application layer
is storing and elaboration of information. Primary attacks to this
layer identify thus as Database attacks, including data alteration
and User Privacy leakage through data mining on the sensed data.
An attacker may gain access to a system via malicious code on
shared instances or buffer overflow and consequent code injection.
Furthermore, along with continuously more service-oriented sys-
tems, service discovery spoofing helps integrate malicious services
into the system, gathering data access. Replayed messages on this
service plane may help an attacker to get the trust of the system.
Message interception and alteration (MitM) and eavesdropping can
cause data leaks or corruption. A malicious service can flood other
services until exhaustion, making them unavailable. Such attacks’
effectiveness depends on the architecture and implementation of
the data processing cloud, not specified by any examined standard.
𝑅𝑀𝐻 [16]: The Network layer presents re-definitions of Sybil
and spoofing. For example, injected routing error messages at the
inter-VM LAN connection (7) make the grid seem partially offline.
At the same time, Sybil attacks target fake network size. Finally, on
the Control layer, the system keeps being the target of desynchro-
nization attacks. An attacker can, e.g., tamper with time-servers to
misalign lamp control from status.

𝑅𝑀𝑉 [32]: 𝑅𝑀𝑉 ’s application layer considers user interaction
with system and data separately from its computation. Thus, if a
user connects remotely to the system, a new path opens, allow-
ing network-based threats similar to 𝑅𝑀𝐴, including eavesdrop-
ping, MitM, routing, or system exhaustion attacks. Configuration
tampering attacks may further affect the new terminal, attempt-
ing to influence the lighting system’s function remotely. On the
Data processing layer, we identify Malware attacks again to gain
system-level access. 𝑅𝑀𝑉 further highlights the interactions and
attacks that might occur inter-VM and based on shared resources’
contention. The former include instant-on gap attacks, where im-
mediate demand requirements allow initial unrestrained executions
due to performance concerns. The latter rely on the exhaustion
of shared resources. As a result, the attacked service is depleted
and unable to perform the requested services. Another mentioned
attack, exhaustion flooding, achieves a similar result. The flooding

Architecture and Its Vulnerabilities in Smart-Lighting Systems

Conference’17, July 2017, Washington, DC, USA

actuation non-functional. For instance, Integrity attacks on a lamp-
driving LoRaWan-node can cause incorrect lamp switching times,
impeding proper lighting. Finally, Interception of compromising in-
terference signals refers to actuation instability caused by external
intervention on the actuator signals in closed-loop systems. For
example, an attacker can destabilize lamp control and manipulating
switching behavior through command-control forgery attacks on
DALI ballast.
Attacks on Communication: The communication infrastructure of
our SLA is represented by DALI, LoRaWan, and IP-network infras-
tructures. These include bridges between DALI, LoRaWan, and IP-
based components, i.e., LoRaWan end-nodes and Gateways, the two
firewalls, and the Internet. In addition, all connections, except DALI,
are encrypted at least once; AES128-CBC for LoRaWan, IPSEC, and
HTTPS for IP-based connectivity. Information exposure refers to
the threat that allows data gathering on a non-protected communi-
cation channel. An attacker can listen in and obtain information on
system and encryption passively via an eavesdropping attack on
DALI networks or actively through polling via replay attacks on
LoRaWan channels. Behavior spying results when an attacker can
gather long-term information on the system’s operation, people,
and activity remotely. Via traffic analysis attacks, e.g., an adver-
sary, can inspect a LoRaWan end-node’s event-based transmissions
that report pedestrian movement. As stated in Section 5.1, such cir-
cumstantial information can help determine citizens’ whereabouts
for planned burglary. Software malfunction results from circum-
stances that cause incoherent, incomplete, or timely inadequate
data transmission that inhibit the system’s correct operation. Typi-
cal attacks that might cause such behavior are selective forwarding
or flooding attacks, applicable to every IP network link. Another
example is collision attacks that delay the successful reception of
event-based packets from the LoRaWan end-node until a successful
re-transmission attempt. The threat of Corruption of data occurs
when an attacker can manipulate information and thus void data
integrity. On DALI networks, e.g., the adversary could easily tamper
with the transit data as the protocol has no encryption or access con-
trol. Interception of compromising interference signals, again, refers
to communication instability caused by external intervention on
the data transmission. Such instability can be caused by jamming
attacks on the LoRaWan network or spoofing attacks on the IP
connectivity and flooding attack with consequent loss or alteration
of packets or connectivity.
Attacks on feedback: Feedback refers to the control function that
Cyber-physical systems perform when acting through actuators on
sensory input or computational status changes. These include, thus,
control algorithms and systems for their implementation. Control
disruption occurs when the system cannot react to sensory input or
status changes, thus destabilizing a system. Via a control-command
forgery attack, an attacker could, e.g., manipulate the status of a
DALI ballast, desynchronizing feedback control and influencing
correct actuation.
Attacks on Computing: Computing refers to the equipment used for
data storage and elaboration. Cloud services and infrastructure (F)
serve data mining, user interaction, and process performance im-
provement. The threat of Corruption of data refers to manipulating
information, stored and computed values, e.g., programmed light
switching times, to secretly damage the system. A data tampering

Figure 4: Attack tree for a Smart-Lighting architecture, mod-
ified (gray), blurred removed from [2].

with requests requires additional resources, slows down the sys-
tem, and finally exhausts all resources. Side-channel attacks could
extract information from non-sanitized shared memory or CPU
caches among the VMs. The model does not include additional
attacks for the Networking layer.

𝑅𝑀𝐿 [22]: This model sees user-focused attacks on the appli-
cation layer during client interaction. They try to leak data and
capture user credentials through infected emails, phishing websites,
and malicious scripts. The model then adds two more definitions
on the Network layer: the sinkhole attack, as a maneuver to get
more input data routed through for traffic analysis and device tam-
pering and to secure a device’s configuration data and secrets, and
consequently, gain unauthorized access to devices and networks.

5.2 Attack tree and Vulnerabilities
5.2.1 Attack tree for Smart-lighting architecture. Based upon the
attack and threat tree developed by Alguliyev et al. [2], we created
a version dedicated to SLA attacks. Figure 4 illustrates the resulting
attacks-threats CPS functional model where the gray highlight-
ing marks alterations w.r.t. the original, i.e., renamed or relocated
branches. In the following, we detail threats connected to the at-
tacks.
Attacks on actuation. Our SLA of Figure 2 contains two actuators:
DALI ballasts that control the lamps and LoRaWan timed controllers
to manage these ballasts. Both are installed mostly on or near a light
pole. A threat of Tampering with Hardware results when physical
interaction with the node can occlude actuation. An attacker can
manipulate a LoRaWan end-node or DALI ballast to take control,
disable or extract secrets with device tampering or node destruction
attacks. Tampering with Software occurs when changes on it make

Smart-LightingSystem FailureInformationexposureBehaviorSpyingConference’17, July 2017, Washington, DC, USA

F. Hofer and B. Russo

or integrity attack can alter stored control information. The Equip-
ment failure occurs when the computing infrastructure is unable to
fulfill the requested computation task. These failures can happen
due to physical wear-out and resource exhaustion, an attack that
depletes computing resources. Software malfunction, yet, results
when the computation does execute as requested, but not correctly.
These malfunctions are often caused by bugs but can also be due
to malicious code installed in the cloud servers, e.g., viruses and
trojans, which tamper with software functionality. Finally, Illegal
data processing happens when an unauthorized agent or a user
accesses more than the allowed amount of resources and data and
discloses user privacy. For example, such exposure can be a conse-
quence of installed malware (Worms) or an attacker that performs
side-channel attacks. In addition, a maligned virtual machine on a
multi-tenant cloud could tap shared memory and manipulate the
computing instance.
Attacks on Sensing: Sensing in our SLA is performed on two loca-
tions: DALI ballasts that inform about the lamps’ real-time data,
and LoRaWan controllers, sometimes battery-powered, that sense
the environment, e.g., luminosity or movement sensors. Loss of
Power Supply is relevant for devices with reduced energy resources
that may suffer from exhaustion and fail service. Battery-powered
LoRaWan end-node may experience an outage due to forced re-
peated transmissions through LoRa jamming attacks that sleep-
deprived the node. Equipment failure, yet, refers to the inability
of nodes to perform the required task. A node outage attack can
put a LoRaWan or DALI node out of order via physical destruction.
Tampering with hardware on sensing identifies issues that might
arise when hardware modifications impede correct measurement.
Direct physical intervention attacks can cover a lighting sensor,
making it inoperable. Unauthorized actions recall the possibility of
prohibited intervention on sensors that access or alter data, misuse
the node, or impede its function. The sensing configuration data
on the unprotected DALI nodes can be manipulated through data
tampering attacks during writes on the bus link, altering measured
results. The same attack can also be the source of other threats.
Equipment malfunction is the result of incorrect sensing due to tech-
nical hindrance. Tampering with a sensor’s configuration would
cause sensing to fail its function. Finally, devices are subject to the
Disturbance due to radiation when an attacker interferes with the
normal sensory function by manipulating the measured physical
unit. The LoRaWan node. e.g., can be fooled through a physical
direct intervention attack, irradiating the luminosity sensor with a
torch.

5.2.2 Vulnerabilities for Smart-lighting architecture. After the eval-
uation of attacks and threats for this SLA, we now identify the caus-
ing vulnerabilities. Tracing vulnerability records from the related
papers [3, 16], we examine threats and attacks to detect possible
vulnerabilities.

At the perception and transmission layers of 𝑅𝑀𝐴, most of the
attacks identified have two common causes: the low resource con-
straint the devices withhold and their physical size and exposure.
Resource limitation is mostly the enabler of attacks that hinder
proper communication, protection, and access control. Unprotected
DALI allows an attacker to eavesdrop or inject any command or

data. Targeted LoRa or DALI network attacks can deplete avail-
able communication or energy resources, disabling parts of the
network and feedback control. Similarly, the limited ether availabil-
ity constraints the transmission capacity of LoRaWan and eases the
attacker’s channel interference.

Furthermore, the large scale of an SLA contributes to resource
scarcity. It increases channel contention and utilization and co-
existence problems [14], finally forcing air-time management or
transmission power throttling to reduce range and interference
rate. The Wide distribution of a lighting system conduces to the
vulnerability of physical exposure. Unattended areas ease network
integrity attacks through device tampering, targeted interference,
and device destruction. It makes nodes accessible and allows for
physical interaction, altering measurements and feedback. Simi-
larly, on the transmission layer, the SLA’s wide distribution and
large scale cause LoRa’s ether resources to incur bottlenecks if
an incorrect device configuration neglects available channels. The
same holds for gateway setup where incorrect settings can ease
preamble-based resource availability attacks.

Software bugs and inconsistent protocols may enable unautho-
rized access to infrastructure and information on the transmission
and application layer. Human-made error or incorrect device con-
figuration may allow attackers to access systems due to incorrect or
mixed permissions schemes or cause system failure. Further vulner-
abilities present at the IP and Cloud infrastructure are mostly the
typical issues encountered in modern systems. We find missing spec-
ification details for the software components running the Smart-*
architecture’s back-end in addition to service attacks and informa-
tion leakage issues. Indeed, the two non-standard components, an
IDS (D-E) for CPS and the network server (F), have not been defined
thoroughly in their specification and architecture [7, 16]. While
we can secure the rest of the IP system by applying traditional
architectural patterns and techniques, these two components suffer
from inconsistent or incomplete specifications.

5.3 Reflection on countermeasures
This section offers some countermeasures specific to the Smart-
Lighting system’s weaknesses under study that we leverage from
the analysis in the previous sections, the existing literature, and
specifications of the technologies. The list should not be seen as
exhaustive.

At the lamp end-posts, we have to deal primarily with the phys-
ical exposure of the DALI bus, the LoRaWan controllers, and the
sensors. Using cabinets and locks that require a specific tool or
key and mounting controllers at height might impede immedi-
ate access to wires and devices. Wires should further be carried
through shielded conducts, diminishing the risk of interference.
Unfortunately, resource constraints and the limiting standards do
not permit protection measures against eavesdropping or MitM
attacks for DALI communication; a replacement with more power-
ful hardware could significantly impact unit installation cost and
solution attractiveness.

One main point that helps mitigate the attacks on the limited
ether availability is a balanced configuration of the LoRaWan net-
work. The LoRaWan standard provides the network server with
the ability to reconfigure channels and optimize ether usage for

Architecture and Its Vulnerabilities in Smart-Lighting Systems

Conference’17, July 2017, Washington, DC, USA

gateways and end-nodes. However, there is no binding requirement
for such capability. To our knowledge, no network server product
includes neither an automatic channel distribution on gateways and
nodes nor the ability to select channels beyond the eight frequencies
in the Semtech default profile.

Proper distribution of bandwidth and frequencies can drasti-
cally increase the resilience of the infrastructure. The sixteen-plus
available settings-slots prescribed by the LoRaWan standard allow
a complementary configuration. Furthermore, each node should
reach at least two gateways using the lowest spread factor. This ap-
proach increases the communication robustness due to LoRa’s high
channel selectivity and switchable, more robust, higher symbol
rates. The latter makes it easy to increase the allowed SNR range
and decode messages despite interferences [8, 27].

Likewise, adjacent nodes’ downlink and uplink settings should
be distributed equally among reachable gateways and channels.
End-nodes typically communicate on two channels: one randomly
selected among the enabled channels for bidirectional transfer and
a second shared RX window from the gateway to all nodes. This
second link adds resilience to the network. As long as one downlink
is available, the network server can reconfigure a node to use new
uplink frequencies [8]. If possible, node channel configurations
should contain a disabled configuration of all gateway channels in
reach. Disabled channels are automatically enabled after several
unsuccessful transmissions, empowering a node in distress to reach
all available gateways.

An algorithm running on the network server may manage such
additional channel configurations to exploit maximum robustness.
It might use geo-information and empirical measurement results
to compute channel distribution appropriately and send updates
over the secondary RX window. An algorithm for this purpose has
been developed by Demetri et al. [11]. Satellite imaging and experi-
mental measurements approximate signal coverage and considers
the environment, locations, buildings, and city structure. To avoid
the issue of limited throughput and co-existence interference, the
number of nodes per channel and gateway should also be equally
distributed [4]. A tool called LoRaSim by the university of Lan-
caster 2 helps this purpose. Although the tool does not consider the
environmental situation, it can verify if a configuration is viable. It
selects optimal frequencies, captures situations of hidden terminals
and exposed nodes, and determines the best-case range and cov-
erage for a given network configuration. Lower spread factor and
less interference reduce required air-time and repetition. A service
incorporating such an algorithm could improve overall resilience,
optimize hardware use and increase end-node battery lifetime.

Unfortunately, LoRa (physical layer) and specification-dependent
vulnerabilities cannot directly be dealt with. The specification of
protocols is an alliance product (DiiA and LoRa Alliance) and might
be open to improvement proposals [8]. At the moment, different
proposals exist for both vulnerabilities [1]. The alliance also recently
proposed an intra-channel hopping technique (FHSS) to mitigate
collisions and contention [9]. The higher robustness comes at a price
of a very low throughput of only a few hundred bps. It promises to
be an elegant solution for high-density and coexisting networks.

2https://www.lancaster.ac.uk/scc/sites/lora/lorasim.html

However, such changes need time for validation and processing
and can therefore be considered only in the long run.

Simple stateful packet inspection is not enough for a CPS’s IP-
based network. Han et al. [16] identifies security challenges not
uniquely at the border to the external networks, but everywhere in
this complex interconnected and heterogeneous system. Therefore,
intrusion detection must be entwined in the whole CPS system
according to each node’s limits. Furthermore, each node could be
tampered with generating invalid data. Thus, the solution extends
from brute physical force and consequent failures to uncertain
information degraded and influencing a system’s control. Finally,
border firewalls are often the responsible routing point for point-
to-point networks. Ideally, multiple connections between IP-based
networks can avoid bottlenecks and targeting attacks by routing
traffic as needed.

The final set of discussed vulnerabilities connects solely to the
application layer. Most of the software modules of the control units
and in the application cloud work with parameters. To avoid that
those settings are invalid, ideally, the final device or application
that uses the information must verify correctness. Han et al. see
this also as a possible application for an IDS as an adversary could
inject invalid values to cause a control deviation or misbehavior.
However, the limited resources make a distributed IDS difficult on
some devices. Therefore, a parameter check, a distributed IDS, or
both should be installed based on resource availability.

More problems arise if the specifications for these software mod-
ules have errors or are incomplete. Unfortunately, in this case, the
specifications should also follow standards and might suffer from
this dependency. Nevertheless, many details can be derived and
adapted following best practices and generalizations from expe-
rience with similar installations and architectures. Multi-tenant
microservice-based systems are popular in cloud-based compu-
tation, making them an excellent architectural template source.
Therefore, a computing cloud infrastructure could be derived from
microservice-based architectures for data elaboration, integrated
with the knowledge gained from running experiments and pro-
totypes. These should finally help achieve the highest security
standards without impacting the overall performance. Lastly, most
software is following new technology trends, subject to multiple
changes in a short time, and suffering from high defect probabil-
ity. Therefore, agile practice and testing tool-chains are the only
suggestions to be given from the development standpoint.

6 DISCUSSION AND CONCLUSIONS
This security analysis presented a technique for the offline anal-
ysis of a Smart-* multi-domain system-of-systems. We proposed
a design science approach that relied on the connected domains’
experiences and performed a layer-based cross-analysis on a Smart-
Lighting use case. Using four distinct layered architecture modeling
approaches, we identified architectural roles, assigned model layers.
Then, we created a unified taxonomy that reflects and extends each
involved domain’s attack definitions, threats, and vulnerabilities. In
an iterative process, we determined possible attacks, valid threats
and discussed vulnerabilities for a merged-domain Smart-Lighting
architecture. Finally, we discussed some first possible countermea-
sures.

Conference’17, July 2017, Washington, DC, USA

F. Hofer and B. Russo

After the execution of our analysis, we can assess three signifi-
cant discoveries for Industry 4.0. Firstly, the domain overlapping
configuration of such a system-of-systems makes it infeasible to
cover all threats and attacks based on a single domain’s viewpoint.
The integrative approach we presented detected more issues than
a single model would. Interestingly, we find the most model di-
vergence in the “cyber”-layers, where computation and decision
occur, while most data exchange and physical interaction layers
remain unchanged. This consistency is probably because gathering,
actuation, and data transport are a joint function of all four ana-
lyzed papers. When integrating future analyses with other studies,
we expect changes in the upper architecture layers only. Secondly,
the changing focus of the discussed models highlights aspects of
a heterogeneous system. It proves that the new multi-domain ar-
chitecture inherits many, if not all, characteristics of the involved
domains. For example, Cloud-security issues are not a typical con-
cern for traditional control-oriented CPS. Thirdly, vulnerabilities,
threats, and attacks may alter definition, range, and weight depend-
ing on the application domain. The taxonomy table and Section 5.2
show how similar threat or attack names can have different defini-
tions and applications that the domain of origin might influence.
It is thus reasonable to pre-define and clarify all taxonomy before
reaching conclusions. However, the resulting multi-domain taxon-
omy is a product of the involved reference models’ role, layer, and
attack allocation. Each new system-of-systems analysis requires
thus repeating or refining the present analysis.

Future work will test and extend the results of this analysis.
Through a second study case, we will analyze the change and vari-
ability of detected issues. Simultaneously, on-site tests will help
validate the extent and risks of the vulnerabilities involved.

ACKNOWLEDGMENTS
We thank Systems S.r.l for the funding and support of this project
under the “Industry 4.0 for the Smart-* (I4S)” project.

REFERENCES
[1] Ferran Adelantado, Xavier Vilajosana, Pere Tuset-Peiro, Borja Martinez, Joan
Melia-Segui, and Thomas Watteyne. 2017. Understanding the Limits of LoRaWAN.
IEEE Communications Magazine 55, 9 (2017), 34–40. https://doi.org/10.1109/mcom.
2017.1600613

[2] Rasim Alguliyev, Yadigar Imamverdiyev, and Lyudmila Sukhostat. 2018. Cyber-
physical systems and their security issues. Computers in Industry 100 (sep 2018),
212–223. https://doi.org/10.1016/j.compind.2018.04.017

[3] Yosef Ashibani and Qusay H. Mahmoud. 2017. Cyber physical systems security:
Analysis, challenges and solutions. Computers & Security 68 (jul 2017), 81–97.
https://doi.org/10.1016/j.cose.2017.04.005

[4] Aloÿs Augustin, Jiazi Yi, Thomas Clausen, and William Townsley. 2016. A Study
of LoRa: Long Range & Low Power Networks for the Internet of Things. Sensors
16, 9 (sep 2016), 1466. https://doi.org/10.3390/s16091466

[5] Francisco Jose Bellido-Outeirino, Jose Maria Flores-Arias, Francisco Domingo-
Perez, Aurora Gil-de Castro, and Antonio Moreno-Munoz. 2012. Building Lighting
and Automation through the Integration and of DALI and with Wireless Sensor
Networks. IEEE.

[6] Victor Bolbot, Gerasimos Theotokatos, Luminita Manuela Bujorianu, Evangelos
Boulougouris, and Dracos Vassalos. 2019. Vulnerabilities and safety assurance
methods in Cyber-Physical Systems: A comprehensive review. Reliability Engi-
neering & System Safety 182 (feb 2019), 179–193. https://doi.org/10.1016/j.ress.
2018.09.004

[7] LoRa Alliance Technical Committee. 2017. LoRaWAN™ Backend Interfaces 1.0

Specification. Technical Report. LoRa Alliance.

[8] LoRa Alliance Technical Committee. 2017. LoRaWAN™ Specification 1.1. Technical

Report. LoRa Allinance.

[9] LoRa Alliance Technical Committee. 2020. LoRaWAN™ Regional Parameter

Specification 1.0.2. Technical Report. LoRa Allinance.

[10] Cecilia Contenti. 2002. Digitally Addressable DALI Dimming Ballast. IEEE.
[11] Silvia Demetri, Marco Zúñiga, Gian Pietro Picco, Fernando Kuipers, Lorenzo
Bruzzone, and Thomas Telkamp. 2019. Automated Estimation of Link Quality
for LoRa:A Remote Sensing Approach. In Proceedings of the 18th International
Conference on Information Processing in Sensor Networks - IPSN ’19. ACM Press.
https://doi.org/10.1145/3302506.3310396

[12] DiiA. 2018.
dard.
https://www.digitalilluminationinterface.org/data/downloadables/5/4/1711_
technical-note-dali-2-the-new-standard.pdf

DALI-2: The differences and new version of the DALI stan-
Illumumination Interface Alliance.

Technical Report. Digital

[13] Chékra El Fehri, Mohamed Kassab, Slim Abdellatif, Pascal Berthou, and Abdelfet-
tah Belghith. 2018. LoRa technology MAC layer operations and Research issues.
Procedia Computer Science 130 (2018), 1096–1101. https://doi.org/10.1016/j.procs.
2018.04.162

[14] Branden Ghena, Joshua Adkins, Longfei Shangguan, Kyle Jamieson, Philip Levis,
and Prabal Dutta. 2019. Challenge: Unlicensed LPWANs Are Not Yet the Path to
Ubiquitous Connectivity. In The 25th Annual International Conference on Mobile
Computing and Networking (MobiCom ’19). Association for Computing Machinery,
New York, NY, USA, Article 43, 12 pages. https://doi.org/10.1145/3300061.3345444
[15] Daniel Hallmans, Kristian Sandström, Thomas Nolte, and Stig Larsson. 2015. Chal-
lenges and Opportunities when Introducing Cloud Computing into Embedded
Systems. 454–459. https://doi.org/10.1109/indin.2015.7281777

[16] Song Han, Miao Xie, Hsiao-Hwa Chen, and Yun Ling. 2014. Intrusion Detection
in Cyber-Physical Systems: Techniques and Challenges. IEEE Systems Journal 8,
4 (dec 2014), 1052–1062. https://doi.org/10.1109/jsyst.2013.2257594

[17] P. F. Hein. 2001. DALI - A Digital and Addressable Lighting and Interface for
Lighting and Electronics. In Industry Applications Conference, 2001. Thirty-Sixth
IAS Annual Meeting. Conference Record of the 2001 IEEE, Vol. 2. IEEE, IEEE, 901–
905.

[18] Alan R Hevner. 2007. A three cycle view of design science research. Scandinavian

journal of information systems 19, 2 (2007), 4.

[19] Florian Hofer. 2018. Architecture, technologies and challenges for cyber-physical
systems in Industry 4.0 - A systematic mapping study. In 12th ACM / IEEE Inter-
national Symposium on Empirical Software Engineering and Measurement (ESEM).
https://doi.org/10.1145/3239235.3239242

[20] Jay Lee, Behrad Bagheri, and Hung-An Kao. 2015. A Cyber-Physical Systems
architecture for Industry 4.0-based manufacturing systems. Manufacturing Letters
3 (jan 2015), 18 – 23. https://doi.org/10.1016/j.mfglet.2014.12.001

[21] Marianna Lezzi, Mariangela Lazoi, and Angelo Corallo. 2018. Cybersecurity
for Industry 4.0 in the current literature: A reference framework. Computers in
Industry 103 (dec 2018), 97–110. https://doi.org/10.1016/j.compind.2018.09.004
[22] Jie Lin, Wei Yu, Nan Zhang, Xinyu Yang, Hanlin Zhang, and Wei Zhao. 2017.
A Survey on Internet of Things: Architecture, Enabling Technologies, Security
and Privacy, and Applications. IEEE Internet of Things Journal 4, 5 (oct 2017),
1125–1142. https://doi.org/10.1109/jiot.2017.2683200

[23] Yang Lu. 2017. Industry 4.0: A survey on technologies, applications and open
research issues. Journal of Industrial Information Integration 6 (June 2017), 1–10.
https://doi.org/10.1016/j.jii.2017.04.005

[24] Shahir Majed, Suhaimi Ibrahim, and Mohamed Shaaban. 2014. Energy Smart
Grid Cyber-Threat Exposure Analysis and Evaluation Framework. In Proceedings
of the 16th International Conference on Information Integration and Web-based
Applications & Services - iiWAS ’14. ACM Press. https://doi.org/10.1145/2684200.
2684308

[25] John Moteff. 2005. Risk management and critical infrastructure protection: Assess-
ing, integrating, and managing threats, vulnerabilities and consequences. Technical
Report. Congressional Research Service - The Library of Congress.

[26] Jungwoo Ryoo, Rick Kazman, and Priya Anand. 2015. Architectural Analysis
for Security. IEEE Security & Privacy 13, 6 (nov 2015), 52–59. https://doi.org/10.
1109/msp.2015.126

[27] Semtech. 2015. LoRa SX1276/7/8/9 Datasheet.
[28] Semtech. 2017. SX 1301 Datasheet. Technical Report. Semtech.
[29] Nary Subramanian and Janusz Zalewski. 2016. Quantitative Assessment of
Safety and Security of System Architectures for Cyberphysical Systems Using
the NFR Approach.
IEEE Systems Journal 10, 2 (jun 2016), 397–409. https:
//doi.org/10.1109/jsyst.2013.2294628

[30] Nary Subramanian and Janusz Zalewski. 2018. Safety and Security Analysis of
Control Chains in SCADA Using the NFR Approach. IFAC-PapersOnLine 51, 6
(2018), 214–219. https://doi.org/10.1016/j.ifacol.2018.07.156

[31] NAS Nordic Automation Systems. [n.d.]. UL20x0 - LoRaWan™ luminaire con-

troller.

[32] Pal Varga, Sandor Plosz, Gabor Soos, and Csaba Hegedus. 2017. Security threats
and issues in automation IoT. In 2017 IEEE 13th International Workshop on Factory
Communication Systems (WFCS), NA (Ed.). IEEE. https://doi.org/10.1109/wfcs.
2017.7991968

