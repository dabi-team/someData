Resilient Networking in Formation Flying UAVs

1

Lebsework Negash and Han-Lim Choi

Abstract

0
2
0
2

p
e
S
7
2

]

Y
S
.
s
s
e
e
[

1
v
8
3
7
2
1
.
9
0
0
2
:
v
i
X
r
a

The threats on cyber-physical system have changed much into a level of sophistication that elude the traditional security
and protection methods. This work addresses a proactive approaches to the cyber security of a formation ﬂying UAVs. A
resilient formation control of UAVs in the presence of non-cooperative (defective or malicious) UAVs is presented. Based on
local information a resilient consensus in the presence of misbehaving nodes is dealt with fault-tolerant consensus algorithm. In
the proposed framework, a graph-theoretic property of network robustness conveying the notion of a direct information exchange
between two sets of UAVs in the network is introduced to analyze the behavior and convergence of the distributed consensus
algorithm. A distributed control policy is developed to maintain the network connectivity threshold to satisfy the topological
requirement put forward for the resiliency of the consensus algorithm. Numerical examples are presented to show the applicability
of the proactive approach used in dealing with the cyber attack treat on a formation ﬂying UAVs.

I. INTRODUCTION
Recent advances in UAV capabilities for operating in an autonomous mode using high-end computing and communication
infrastructure on board have spurred wide interest from law enforcement to commercial sectors in deploying a large number of
UAVs. These make UAVs ideal candidates for coordinated tasks when it is not possible to perform the task single-handedly and
efﬁciently [20], [14], [9]. Such tasks include search and rescue missions, or law enforcement activities such as border patrol
and drug trafﬁc monitoring [33], [26]. These tasks rely on the cooperative control of multiple-UAVs and their interaction with
the environment with all its uncertainties. Unlike a more centrally controlled system, distributed systems inherently have many
vulnerable points of component failures, entry points for malicious attacks or intrusion. Hence, it is of increasing importance
to guarantee trustworthy computation in the presence of misbehaving agents. A broken or a compromised node that fails to
faithfully compute its values or a compromised sensor or communication network among the agents are some of the examples.
To deal with this, the in-network computation algorithm needs to withstand a subset of failed or compromised nodes with
some level of acceptable degraded performance. Such networked system referred as a resilient network to adversaries or faulty
nodes.

In distributed networks, one of the important objectives is achieving consensus on estimated/computed variables of interest
in a distributed manner [24], [25], [21], [13]. Here, individual nodes interact locally to accomplish some global objective.
But as the interconnection of the networks grows in size and complexity, they become increasingly vulnerable to node or
communication failure. The issue of agreement among nodes in the presence of adversaries has been extensively studied in
the area of distributed computing [19], [23]. In the context of network control systems, resilient protocols for consensus in the
presence of malicious, Byzantine, non-colluding and other threat models have been studied recently, and it is observed that
the resilience of various consensus algorithms is tied strongly to the underlying topology of networks.

In this work, we studied resilient consensus problem for a network of UAVs with a second-order dynamics where the
maximum number of misbehaving UAVs in the network is known. A W-MSR algorithm is used for well-behaving UAVs to ﬂy
in a formation but the convergence of a resilient consensus guaranteed on the (2F +1)-robustness of the network topology [18].
Since computing the exact robustness of a network is a coNP-complete problem, a relationship with the algebraic connectivity of
the graph as the r-robustness lower limit is established. A communication management controller designed so that the controller
gives a local direction to move in order to improve or maintain the connectivity of the network measured by the algebraic
connectivity (λ2). Our work differs from [28], [30] in that computing algebraic connectivity of graph and its corresponding
vector need a global knowledge of the network which is not available to the individual UAV node. Hence, for our framework
of distributed communication management controller both λ2 and its corresponding eigenvector, v2, are estimated via power
iteration method at each node. Numerical examples are presented showing the effectiveness and resilience of the consensus
algorithm maintaining the UAVs in their route despite different model of misbehaving/compromised UAVs in the network.

The rest of the paper is organized as follows. A graph theory based formation control algorithm is presented in section II.
Section III describes a formal deﬁnition of resilient network and topological criteria for WMSR algorithm to reach consensus.
Section IV describes graph robustness control through algebraic connectivity of the graph. Simulation results of resilient
network in formation ﬂying UAVS presented in section V. Section VI concludes the paper.

II. FORMATION CONTROL OF UAVS
In this section, the formation control from [10] is adapted so that it will suit the speciﬁc purpose of this work and the
dynamics of the UAVs considered. Starting from here, in a formation ﬂying the UAVs will be referred to agents or nodes
interchangeably.

Assistant Professor, Addis Ababa Institute of Technology, Addis Ababa University, lebsework@aait.edu.et
Associate Professor, KAIST, hanlimc@kaist.ac.kr

 
 
 
 
 
 
2

Consider N UAVs coordinating themselves to achieve a pre-speciﬁed formation deﬁned by relative positions with respect to
each other. To describe the interaction architecture in a formal manner, consider an undirected graph G = (V, E), where the set
of nodes V = {v1, ...vN } and the set of edge, E ⊆ V × V. The neighbors of UAV i are denoted by Ni = {j ∈ V : (i, j) ∈ E}.
Every node represents a UAV and the edges correspond to inter-vehicle communication. The adjacent matrix A ∈ {0, 1}N ×N
represents the adjacency relationship in graph G with an element aij = 1 if (vi, vj) ∈ E and aij = 0 otherwise. The neighbor
of agent i, denoted Ni is the set of agents such that aji = 1. The graph Laplacian is deﬁned as

where D is a diagonal matrix with dii representing the cardinality of Ni.

The motion of each UAV in d-dimensional Euclidean space is modeled as a second order system:

˙xi = Aixi + Biui,

xi ∈ Rn

LG = D − A

(1)

(2)

where the state variable xi consists of the conﬁguration variables (i.e., position) and their derivatives (i.e., velocity) and the
control input ui represents the acceleration commands.

ui = −k3vi +

1
|Ni|

(cid:88)

j∈Ni

aij [(xi − hi) − (xj − hj)] ,

∀i ∈ {1, . . . , N }

(3)

where hi = ˜hi ⊗ [1 0]T , with some feedback gain Ki ∈ Rn×2n. The cardinality |Ni| is used for normalization [10], [17].
Because UAV motion is modeled as a second-order system with acceleration input, Ki takes the form of Ki = In⊗[ki,pos, ki,vel].
With the state equation in (2) and control input in (3), the overall closed-loop dynamics of the ﬂeet can be written as:

with the overall state x = [xT
IN ⊗ Ki, L = LG ⊗ In.

1 , . . . , xT

N ]T and desired formation h = [hT

1 , . . . , hT

˙x = Ax + BKL(x − h)

(4)
N ]T , where A = IN ⊗ Ai, B = IN ⊗ Bi, K =

III. RESILIENT NETWORK TOPOLOGY AND FORMATION CONTROL
A fundamental challenge of in-network computation and reaching consensus in the quantities of interest is that it must be
calculated using only local information. Reaching consensus in the presence of misbehaving or faulty nodes resiliently has
been shown that the correctly behaving nodes can reach consensus overcoming up to F misbehaving nodes if the network
connectivity is at least 2F + 1 [19], [32], [18], [22]. But these algorithms either require those normal nodes to have at least
nonlocal information or assume that the network is complete.

Consider a time varying network modeled by a digraph G(t) = (V, E(t)), where the set of nodes V = {v1, ...vN } and the
set of edge, E(t) ⊆ V × V. The neighbors of node i are denoted by Ni = {j ∈ V : (i, j) ∈ E(t)}. Base on the nomenclature
in [18], [36], let us assume that the nodes are partitioned into a set of Nn normal nodes Nn = {1, 2, ...Nn} and Na a set of
adversary nodes Na = {Nn + 1, Nn + 2, ...N }. The nodes are assumed to have unique identiﬁers that forms a totally ordered
set.

A. Connectivity

The UAVs equipped with wireless communication system that allows point-to-point communication between individual UAVs.
The time varying edge E(t) represents the connection between pair of (i, j) agents. The link modeled as range-dependent [7],
[30], with a quality varying between 0 and 1 based on the the communication disk model. The strength of the connection
among agents (i, j), which decays exponentially with the distance, will be:

fij(x) =






1,
0,
exp( −γ((cid:107)xi−xj (cid:107)−ρ)

R−ρ

)

(cid:107)xi − xj(cid:107)< ρ
(cid:107)xi − xj(cid:107)≥ R
otherwise

(5)

where R deﬁnes the maximum communication range radius and ρ is distance where the communication signal strength is
optimal.

The adjacent matrix A(x) represents the adjacency relationship strength in graph G with an element aij = fij representing

the strength of the connection given by the edge (vi, vj) ∈ E(x). The weighted Laplacian, LG(x), is given as :

LG(x) = D(x) − A(x)

(6)

where D(x) is a diagonal matrix consisting of the row-sum of A(x). Since LG is positive-semi-deﬁnite and symmetric,
with all its eigenvalues are real, and its special structure ensures that its smallest eigenvalue is zero with the corresponding
eigenvector of all ones, 1. The second smallest eigenvalue of the Laplacian known as the algebraic connectivity (or Fiedler
value), denoted as λ2, indicates the overall connectedness of a graph. Hence, the magnitude of the algebraic connectivity
reﬂects how well connected the overall graph is.

3

] and each normally behaving

Fig. 1. Communication strength between UAVs i and j as a function of distance between them.

B. System Dynamics

Suppose each UAV node i ∈ V starts with initial value xi[0] ∈ Rn where x(t) = [xT

, xT

Na

Nn

nodes interact with their neighbors and updates their values according to some nominal rule which is modeled as

xi(t + 1) = fi(xNn , xNa , t), i ∈ Ni

(7)

where each function fi(.) is a predeﬁned function so that the normal nodes reach consensus. The misbehaving nodes would
try to inﬂuence the well-behaving nodes, thus fi(.) should be designed in a way the well-behaving nodes should eliminate
or reduced their effect with out prior knowledge of their identities. Here, the scope of threat model deﬁnes the topological
assumptions placed on the adversaries. Deﬁnitions adapted from [18].

Deﬁnition 1: (F -total set): A set S ⊂ V is F -total if it contains at most F nodes in the network, i.e., | S |≤ F, F ∈ Z≥0 .
Deﬁnition 2: (F -local set): A set S ⊂ V is F -local if it contains at most F nodes in the neighborhood of the other nodes,

(cid:84) S |≤ F,

i.e., | Vi
Note: Z≥0 is a set of integer greater than or equal to zero.
A set of adversary nodes is F -totally bounded or F -locally bounded if it is an F -total set or F -local set respectively.

∀i ∈ V\S, F ∈ Z≥0 .

Deﬁnition 3: (r-reachable subset): The subset S ⊂ V is said to be r-reachable if ∃i ∈ S such that | V\S |≥ r, where

r ∈ Z≥0, i.e., if it contains a node that has at least r neighbors outside that set.
A set S is r-reachable if it contains a node that has at least r neighbors outside of S. The parameter r quantiﬁes the redundancy
of information ﬂow from nodes outside of S to some node inside S. Intuitively, the r-reachability property captures the idea
that some node inside the set is inﬂuenced by a sufﬁciently large number of nodes from outside the set.

Deﬁnition 4: (r-robust graph): A graph G is said to be r-robust if for every pair of nonempty disjoint subset of V, at least

one of the subset is r-reachable.

Fig. 2. A subset of nodes S is accessible from outside by r- number of nodes from {Vi \ S}.

In summary, an r-reachable set contains a node that has r neighbors outside that set, and a r-robust graph has the property
that no matter how one chooses two disjoint nonempty sets, at least one of those sets is r-reachable. Therefore, if a graph G
is r-robust, then it is at least r-connected and has minimum degree at least r [18].

A. W-MSR Algorithm

IV. RESILIENT ASYMPTOTIC CONSENSUS

The Weighted-Mean-Subsequence-Reduced (W-MSR) algorithm is a modiﬁed version of the linear consensus algorithms.
The linear consensus protocol operates by updating each normal agent as x(t) in (2) with control input which uses the relative

R1.𝑆𝑆:𝑠𝑠𝑠𝑠𝑠𝑠𝑠𝑠𝑠𝑠𝑠𝑠𝑛𝑛𝑛𝑛𝑛𝑛𝑠𝑠𝒱𝒱𝑖𝑖∶𝑁𝑁𝑛𝑛𝑛𝑛𝑠𝑠𝑠𝑠𝑛𝑛𝑜𝑜𝒢𝒢21𝑟𝑟𝒊𝒊{𝒱𝒱𝑖𝑖\S} ...position and velocity with its neighbors.

ui(t) = −κivi(t) + (cid:80)
j∈Ni

aij(t) [(xj(t) − xi(t)) + γ(vj(t) − vi(t))]

4

(8)

where aij(t) is the (i, j) entry of the adjacency matrix of the corresponding time varying Laplacian of the communication
graph G(x(t)) as the states are a function of time.

The W-MSR algorithm with parameter F ≥ 0 alters the above protocol by having each agent remove state values that are
relatively extreme compared to the rest of the agents in-neighbor set and its own state. Speciﬁcally, it works as follows [18],
[8]

Algorithm 1 Weighted-Mean-Subsequence-Reduced (W-MSR) algorithm

1) At each time-step t, each normal node i ∈ N obtains the position values of its neighbors, and forms a sorted list.
2) If there are less than F position values larger than its own position, then normal node i removes all position values that
are larger than its own. Otherwise, it removes the largest F position values in the sorted list. Likewise, if there are less
than F position values smaller than its own position value, then node i removes all position values that are smaller than
its own. Otherwise, it removes the smallest F position.

3) let Pi(t) is the set of nodes whose position were removed by normal node i in step 2 at time step t. Each normal node i
applies the state update in (2) applying the control rule in (8) (of each dimension), except Ni(t) replaced by Ni(t)\Pi(t).

ui(t) = −κivi(t) +

(cid:88)

j∈Ni(t)\Pi(t)

aij(t) [(xj(t) − xi(t)) + γ(vj(t) − vi(t))]

(9)

(i.e., apply control input (8) by substituting aij(t) = 0 for the incoming edges (i, j) ∈ E(t) of agents ignored in step 2.)

Theorem 1: [18] Consider a time varying digraph G(x(t)) = (V, E(x(t)), where each node with second-order dynamics
updates its value according to W-MSR algorithm 1 with a parameter F . Under F -local/total malicious model, resilient
asymptotic consensus is achieved if the topology of the network is (2F + 1) robust.
For proof, the reader kindly advised to look into there references [18], [8].

B. Maintaining Robust and Resilient Network

The topological property, (2F +1) robustness of a network, is the sufﬁcient condition for the W-MSR algorithm to guarantee
consensus. However, determining whether a given graph is r-robust for any r ≥ 2 is coNP-complete [36], [35]. In case of
a dynamic network, such as a team of UAVs’ network, to maintain the resiliency of the network, the controller should keep
the robustness of the dynamic network in check every time step. This will become intractable. It is better to resort to a more
intuitive and computable parameter of the network relatable to r-robustness.

C. Lower bound on r-robustness

The work in [29] proved that, the graph Cheeger constant 1 (also called isoperimetric number i(G)) is a lower bound to r.
Deﬁnition 1: [29] For a given graph G and its isopermimetric number, i(G), if i(G) > r − 1, then the graph is at least

r-robust.
However, in [15] while working on expansion of graphs, and in [4] the authors proved that computing Cheeger constant of
a graph is NP-hard and motivate the use of spectral methods. But earlier the authors in [6], [11] showed that the Cheeger
constant is lower bounded by the algebraic connectivity of the graph.

Deﬁnition 2: [6]

≤ λ2(LG) ≤ 2i(G), where the graph Laplacian real eigenvalues can be ordered sequencially

i(G)2
2dmax

0 = λ1(LG) ≤ λ2(LG) ≤ ... ≤ λn(LG) ≤ 2dmax, dmax is the maximum degree of a node in graph G.
Using Lemmas 1 and 2, lead to a lower bound on the algebraic connectivity to ensure r-robustness.

2(r − 1) < λ2

(10)

Taking the W-MSR topological property for resilient convergence, (2F + 1)- robustness, the convergence can be guaranteed
as long as the graph connectivity is :

λ2 > 4F

(11)

When this lower bound applied to regulate the connectivity of the network, it will satisfy the lower bound for the W-MSR
algorithm to reach asymptotic consensus resiliently leading us to a well-dealt connectivity management in mobile robotics or
communication management in wireless mobile sensors networks.

1Cheeger constant or isoperimetric number of a graph is a numerical measure of whether or not a graph has a “bottleneck”.

V. ROBUSTNESS CONTROL THROUGH GRAPH ALGEBRAIC CONNECTIVITY
The relationship between λ2 and the overall connectivity of the graph can be used to formulate a control action either to
preserve or increase the connectivity of the graph. The algebraic connectivity (λ2) is a function of the state of the entire graph
where we can write λ2(LG(x)), and it is a concave function of the graph Laplacian (LG) in the space 1⊥. It is the inﬁmum
of a set of linear function in LG [31]:

λ2(LG(x)) = inf
v∈1⊥

vT LG(x)v
vT v

5

(12)

The function is not smooth, hence does not have gradient at each point. But in [30], for distinct λ2, i.e., λ2 (cid:54)= λ3, the derivative
is shown that:

v2vT
2
vT
2 v2
where v2 is eigenvector corresponding to the eigenvalue λ2 and v2vT
2 is a supergradient for λ2(LG(x)) and can be used in
maximizing the concave function. Though, λ2 is concave with respect to LG, the Laplacian is nonlinear function of x. Using
chain rule to linearize λ2, derivative is taken with respect to each single element of x :

∂λ2(x)
∂LG(x)

(13)

=

∂λ2(x)
∂xi,α

=

∂λ2(x)
∂LG(x)

∂LG(x)
∂xi,α

= T race

(cid:40)(cid:20) v2vT
2
vT
2 v2

(cid:21)T (cid:20) ∂L(x)
∂xi,α

(cid:21)(cid:41)

(14)

The gradient, ∂λ2(x)
, gives each agent local direction to move to improve or maintain connectivity of the graph. However, the
∂xi,α
decentralized control action of each agent with information only about its neighbors, Ni, is trying to increase the value of λ2
which is a global knowledge of the graph property.

VI. DISTRIBUTED ESTIMATION OF ALGEBRAIC CONNECTIVITY AND ITS EIGENVECTOR

As it is shown in ( 14), to generate a decentralized control action to drive the agents to a more connected form, each
individual agent need to compute λ2 and v2 in a decentralized way. In our case, the global topology of the network is not
available at each node (UAV) has access only to the information of its neighbors. Consequently, the second smallest eigenvalue
and its corresponding eigenvector of the network cannot be directly computed. Hence, both variables related to the Laplacian
matrix of the graph should be estimated or recovered distributively, i.e., by using only local information of each node in the
network.

Various works have been proposed to estimate these network variables distributively. In [12], eigenvalues of Laplacian matrix
are estimated using fast Fourier transform (FFT) by constructing distributed oscillators whose states oscillate at frequencies
corresponding to the eigenvalues of graph Laplacian and then the agents use FFT on their state to identify eigenvalues, however,
the FFT technique is not appropriate for real-time implementation and for handling switching topologies. The estimate of the
second-smallest eigenvalue of the Laplacian matrix is used by De Gennaro and Jadbabaie [7] to implement an optimization
algorithm, that aims at increasing the value of the algebraic connectivity of the graph. Tran and Alain [16] posed the problem
as a constrained consensus problem formulated two-fold, as a direct and indirect approach yields non-convex optimization
problem and convex optimization after adequate re-parametrization respectively. They solved both problems in a distributed
way by means of a method of Lagrange multipliers and sub-gradient algorithm respectively. In our case, the main drawback
of connectivity maintenance based on optimization algorithm arises from the difﬁculties in formally guaranteeing connectivity
maintenance in the presence of conﬂicting objective that arises as the UAVs system are required to increase connectivity while
performing formation ﬂight [27].

Exploiting a gradient-based algorithm appears as an attractive solution in order to provably guarantee connectivity mainte-
nance. Here in our Laplacian spectral estimation relied on a Power Iteration method and its variation. Power Iteration starts with
an initial vector, which may be an approximation to the dominant vector, then repeatedly multiplies it by a matrix and normalize
it. The vector converges to the eigenvector associated with the dominant eigenvalue [1]. To get a particular eigenvalue, the
original matrix deﬂated and the process repeated again. The main limitation of this approach is it requires normalization and
orthonormalization of a vector at each step which requires global knowledge but can be solved by replacing average iteration
as in Yang et.al [34]. But in both cases, the authors only concentrate on estimating the connectivity while we need also the
corresponding eigenvector to use them in the above gradient-base control algorithm to control the connectivity of the UAVs.

A. Decentralized Power Iteration

Let P be a deﬂated version of Perron Matrix [21] of the Laplacian LG

where D be not-deﬂated matrix D = I − αLG

P = D − 1 1T /n

(15)

The eignvalues of the Laplacian and the deﬂated version of the Perron matrix P are related by

The spectral radius ρ(P ) of P is related to the algebraic connectivity λ2(LG) by [34], [2], [3]

λ1(P ) = 0,

λi(P ) = 1 − αλi(LG),

for i ∈ {2, ..., n}

λ2(LG) =

(1 − ρ(P ))
α

,

if

0 < α <

1
λn(LG)

6

(16)

(17)

Computing the spectral radius of matrix P distributively will give the second smallest eigenvlue of the laplacian (17). The

spectral radius of a matrix deﬁned as

ρ(P ) = max{|λ1(P )|, ..., |λn(P )|}

(18)

Gelfand’s formula states that

ρ(P ) = lim
k→∞
Therefore, each UAV computes the ∞-norm, (cid:107).(cid:107)∞, of the matrix P k which is the maximum absolute row sum of the matrix

(19)

(cid:107)P k(cid:107)1/k
∞

(cid:107)P k(cid:107)∞ = max
i∈v

{|[P k]i1| + ... + |[P k]in|}

(20)

In this case then, each UAV can calculate the above matrix power using max-consensus algorithm as each UAV i knows the
ith row of P k. Hence, each UAV should compute the power P k of matrix P which is not compatible with the graph. But, if
the UAVs compute power of Dk which is compatible2 with the graph, they can easily compute P k as shown below. This is
clear from the deﬁnition of D below in (21)

D = I − αLG = P + 11T /n

(21)

The relationship between this two matrices are given in [3], [34]. Let’s state it here the theorem.
Theorem 2: [3] Consider a symmetric Laplacian matrix LG, let D = I − αLG, with α > 0, and let P = D − 11T /n. The

kth powers of matrices P and D are related as follows, for all k ≥ 1,

P k = (D − 11T /n)k = Dk − 11T /n

(22)

For proof, the reader asked kindly to look into the reference.

The powers of Dk of a matrix D compatible with the graph can be computed in a distributed fashion by letting each UAV

i stores the ith row of Dk and update each elements of the matrix, [Dk]ij for j = 1, ..., n with its neighbor’s data

[Dk+1]ij =

(cid:88)

Dij(cid:48)[Dk]j(cid:48)j

j(cid:48)∈Ni∪{i}

since D compatible with G, Dij(cid:48) = 0 for non-neighbor agents j(cid:48) /∈ Ni ∪ {i} and equation 23 becomes

[Dk+1]ij =

Dij(cid:48)[Dk]j(cid:48)j

(cid:88)

j=1

(23)

(24)

Note that each UAV i updates its variable using only its neighbors and its own values at each step k. The algorithm computes
the exact Dk (not an estimate). But observing (23), as each UAV i receives [Dk]j(cid:48)j from its neighbor j(cid:48), it needs to know to
which agent j this information belongs to while combining with its own [Dk]ij. A more elaborative Algorithm is given in [3],
where we further use it to identify the number of UAVs in a network distributively.

Each agent will keep a list Idi(k) of the identiﬁers associated to each of its elements [Dk]ij and exchange these identiﬁers
with their neighbors at each step k. As when UAVs i discovers in its neighbor’s data j(cid:48) ∈ Ni the identiﬁer of a new UAV
j ∈ Idj(cid:48)(k), it initializes a new variable [Dk]ij and updates Idi(k) accordingly.

The output of the algorithm [ ˆDk]ij at each UAV is an exact value (not an estimate) of the entries of [DK]ij of Dk associated
to agents j ∈ Idi(k) which are at k or less hops [5]. From (22), the aim is to calculate the power of P k = Dk − 11T /n,
hence the equivalent entries of P k is obtained by subtracting 1/n from the [ ˆDk]ij. In addition the entries of [ ˆDk]ij for which
j /∈ Idi(k) is zero, therefore for each of these n − |Idi(k)| entries, the associated entries in P k equals −1/n.

Proposition 1: Let each UAV i run Algorithm 2 with G connected. The instant k∗ when UAV i discovered the identiﬁers of

all the UAVs in the network, then

2An n × n matrix D is compatible with G, Dij = 0 if (i, j) /∈ E for j (cid:54)= i and let Dii be equal or different than 0.

Idi(k) = Idi(k − 1)

for ∀k > 1, and

for all U AVi

(29)

Algorithm 2 Distributes Matrix Power computation
Each node i ∈ V maintains a set of node identiﬁers Idi(k) and an estimate of ˆDk
associated to the nodes j such that j ∈ idi(k)

ij of the (i, j) entries of the kth of D, [Dk]ij,

1) At k = 0, each node i ∈ V initialize a single variable [Dk]ij and its identiﬁer and send it to its neighbors Ni

2) At each step k ≥ 1, node i ﬁrst look for new nodes in the information Idj(cid:48)(k) received from its neighbors j(cid:48) ∈ Ni and

Dk

ij = 1 idi(0) = {i}

(25)

7

updates its identiﬁer Idi(k) .

Idi(k + 1) =

(cid:91)

Idj(cid:48)(k)

j(cid:48)∈Ni∪{i}

3) Then, node i creates new variable [ ˆDk]ij initialized with [ ˆDk]ij = 0, for each recently discovered node j in (2).

j ∈ Idi(k + 1)

and

j /∈ Idi(k)

if Idi(k + 1) = Idi(k) then
number of UAV in the graph G is n = |Idi(k)|;
Stop Algorithm 1 and go to Algorithm 3;
else
Continue with step 4

4) Finally, node i updates all its variables ˆDij(k),

[ ˆD(k+1)]ij =

(cid:88)

[D]ij(cid:48)[ ˆDk]j(cid:48)j

j(cid:48)∈Ni∪{i},j∈Idj(cid:48)

for j ∈ Idi(k + 1), and sends to its neighbors these variables [ ˆD(k+1)]ij and the identiﬁers Idi(k + 1).

Where the instant all the UAV’s identiﬁers in the network discovered by U AVi is given by

k∗ = min{k|

Idi(k) = Idi(k − 1)}

Then, number of UAVs in the network is given as

n = |Idi(k∗)|

(26)

(27)

(28)

(30)

(31)

a) proof:

Note that the identiﬁers Idi(k) contains identiﬁers of j UAVs at k or less hops from U AVi. And [Dk]ij is positive if and only
if there exists a direct path of length k from the UAV i to j [5]. If the set Idi stop changing, that means all node j at k or less
hops are included in the identiﬁer set and as G is connected, all UAVs are reached with a maximum of k hops from U AVi.
Therefore, all UAVs in the network are covered by the paths from ith UAV and the identiﬁers Idi(k) has all the identiﬁres of
all the network UAVs at the k∗ instant. It follows n = |Idi(k∗)|

B. Estimates of Algebraic Connectivity (λ2)

With all the background regarding power iteration, here we state an algorithm for distributively estimating the algebraic

connectivity of the communication graph Laplacian.

Theorem 3: Each UAV (node) i executes Algorithm-3 with G connected. As k → ∞, the connectivity eigenvalue estimates,

ˆλ2i converges to the Laplacian algebraic connectivity λ2(L) for ∀ ∈ V.

a) proof:

For ∀i ∈ V, the variable [ ˆDk]ij are equal to [Dk]ij for j ∈ Idi(k), where [Dk]ij = 0 for j /∈ Idi(k), where from (22),
P k = Dk − 11T /n, gives the following

ˆλ2i(k) = ˆλ2(L)

lim
k→∞

(35)

[P k]ij = [ ˆDk]ij − 1/n for
[P k]ij = −1/n

for

j ∈ Idi(k)

j /∈ Idi(k),

for ∀i ∈ V, k ≥ 1

(36)

When G is connected, (cid:107)P k(cid:107)∞ in (33) gives the maximum absolute row sum of P k and the spectral estimate of P k, ˆρi(k)

in (34) is

ˆρi(k) = (cid:107)P k(cid:107)1/k

∞ for ∀i ∈ 1, ..., n k ≥ 1

(37)

Algorithm 3 Connectivity Estimation Distributively

1) At every step k, each UAV i computes P (k) locally

2) Run max-consensus to ﬁnd

Pi(k) =

(cid:88)

|[ ˆDk]ij −

j∈Idi(k)

1
n

| +

n − |Idi(k)|
n

(cid:107)P k(cid:107)∞ = max
j∈V

Pj(k)

3) The algebraic connectivity ˆλ2 estimated by each UAV i is given by

ˆλ2i =

(1 − ˆρi(k))
α

where

ˆρi(k) = ((cid:107)P k(cid:107)∞)1/k

For induced ∞-norm, we have,

Hence

C. Estimates of Fiedler vector, v2

ˆρi(k) = lim
k→∞

(cid:107)P k(cid:107)1/k
∞

lim
k→∞

ˆλi(k) = lim
k→∞

(1 − ˆρi(k))
α

= ˆλ2(L)

8

(32)

(33)

(34)

(38)

(39)

Fiedler vector, the eigenvector corresponding the algebraic connectivity, can be computed distributively by noticing some

facts and relationship regarding the non-deﬂated matrix and the Laplacian matrix eigenvectors.
1) In (21), D = I − αLG, notice that all the eigenvectors of D and LG are the same [21].
2) Eigenvectors do not change during matrix power operation. Let v be an eigenvector of matrix D, hence Dx = λx, then

Dkx = Dk−1(Dx) = Dk−1(λx) = λDk−1x

= λkx

(40)

Notice that from Proposition 1, at step k∗, UAV i has variables [ ˆD]ij for all the agents j ∈ Idi(k∗) that are at k∗ or less
hops from i. For the remaining agents j /∈ Idi(k∗), UAV i does not have variable [ ˆD]ij, but as all the UAVs are already in
k∗-hop reach and explored, then their value of [ ˆD]ij of j /∈ Idi(k∗) is zero then.

Algorithm 4 Estimates of Fiedler Vector

1) At k∗, each UAV i initialized a matrix ˜Di of n × n

2) Run consensus so that each UAV i update its private non-deﬂated matrix ˜Di

˜Di(0) = 0

[ ˜Di]ij = [ ˆD]k∗

ij

After consensus, get ˜Di of each UAV i.

3) Each UAV i compute the eigenvalue and eigenvector of ˜Di in (2) which is the same for all i ∈ V.

[˜vi

˜λi] = eignvalue( ˜Di)

where

(41)

(42)

(43)

a) ˜λi = {˜λk∗
b) the corresponding eigenvectors,

2 ..., ˜λk∗

1 , ˜λk∗

n },

and ˜λk∗

1 < ˜λk∗

2 < ... < ˜λk∗

n . (all to the power of k∗)

˜vi = {˜v1, ˜v2, ..., ˜vn}

4) The Fiedler vector of the Laplacian is v2 = ˜v2

Note: D = I − αLG, all the eigenvector of D and LG are the same. Further more, power operation of on a matrix does not
change the matrix eigenvectors. Hence, eigenvector of Dk and LG are the same.

VII. RESILIENT UAV FORMATION CONTROL WITH MIS-BEHAVING UAVS
For a resilient formation ﬂight of UAVs, here a two stage controller is proposed. The UAV ﬁrst need to guarantee the
(2F + 1)-robustness of the underlying communication network before pursuing a formation ﬂight with W-MSR algorithm.
This is to guarantee the normal nodes to achieve consensus on the formation ﬂight and route despite the presence of up to F
misbehaving UAVs in the network.

9

A. Achieving (2F + 1)-robustness

The UAVs ﬁrst try to achieve (2F + 1)-robustness by increasing the algebraic connectivity of their communication graph.

The controller tries to achieve this by applying

ui =

∂λ2(x)
∂xi,α

= ∇iλ2

(44)

where, ∇λ2 ∈ RdN ( with d-dimension, N - number of UAVs or nodes), is determined from equation 14, ui ∈ Rd and

∇iλ2 is d-dimensional gradient that steers UAV i.

The knowldge of the derivative of λ2(x) gives local directions to move to improve or at least to maintain connectivity of
the network as measured by λ2. Hence, the controller in (44) based on the d-dimensional gradient, ∇iλ2, drives the ith UAV
to be more connected with the rest of the UAVs and subsequently achieve resilient connectivity threshold.

Proposition 2: For system of UAVs in the range of communication radius (cid:107)xi − xj(cid:107)≤ R, the controller in (44) will steer

the system to a resilient state.

a) proof:

As long as the UAVs are in the communication range (cid:107)xi − xj(cid:107)≤ R, and as long as λ2 is less than the threshold λ2 ≤ 4F ,
the controller will be applied to all U AVi i ∈ Nj, hence resilient state will be achieved.

B. Resilient Formation

The UAVs once in a resilient state, the formation control will be applied to drive them into a resilient formation ﬂight.

ui = ϕ∇iλ2 + uf ormationi
where uf ormationi is given in equation 8 which is for each dimension of the UAV motion, ith UAVs control input for formation
ﬂight of the UAV system.

(45)

Proposition 3: If the UAVs driven to resilient state following controller in (44) and then followed by a controller in (45),
they will not fall back to vulnerable state. In addition, if there is no more than F miss-behaving UAVs, the UAVs converge
asymptotically to the designated formation.

a) proof:

1) The condition to fall back to a non-resilient (volunerable) state is that when λ2 goes down below the stated resilient

threshold. It sufﬁce to show that

The derivative can be written as using chain rule

dλ2
dt

≥ 0,

∀t

Then, as long as

dλ2
dt

=

N
(cid:88)

i=1

∂λ2
∂xi

∂xi
∂t

=

N
(cid:88)

i=1

∂λ2
∂xi

(Aixi + Biui)

(

∂λ2
∂xi

)T (Aixi + Bi(ϕ∇iλ2 + uf ormationi) ≥ 0,

∀i,

∀t

(46)

(47)

(48)

the UAVs will never reenter to the non-resilient state. The value of ϕ is taken to make sure the inequality (48) holds for
the system of UAVs. Solving for ϕ,

ϕ ≥

∇iλT

2 (Aixi + Biuf ormationi)
2 Bi∇iλ2

∇iλT

(49)

where the above equation (49) can be solved by each ith UAV at each time step, making sure the system does not return
to the non-resilient (vulnerable) state.

2) The network of UAVs with λ2 > 4F in the presence of F non cooperating UAVs will guarantee (2F + 1) robustness.

Therefore, W-MSR algorithm derives the network of UAVs to a consensus, in this case a formation ﬂight.

Further more, once the UAVs entered a resilient state, applying only the formation control

keeps the system in a resilient stat,.i.e, it will not slip back to the vulnerable states.

Proposition 4: A network of UAVs once in a resilient stat will remain in resilient state under the formation control for a

misbehaving agents less than F.

ui = uf ormationi

(50)

b) proof:

In the previous proposition 3, we showed that the control scale of ϕ to guarantee dλ2
dt ≥ 0, and to make sure the controller
keeps the system of networked UAVs under (2F + 1) robustness consequently a resilient one. But here it is enough to show
dλ2
dt converge exponentially to zero in ﬁnite time in a resilient state as the UAVs reach consensus in the formation ﬂight.

10

Taking the details in the sumation

From 14, we have

dλ2
dt

=

=

N
(cid:88)

i=1
N
(cid:88)

i=1

∂λ2
∂xi

∂xi
∂t

∂λ2
∂xi

(Aixi + Biuf ormationi)

dλ2
dt

=

N
(cid:88)

n=1

∂λ2
∂xi

(Aixi + Biuf ormationi)

∂λ2(x)
∂xi,α

= T race

(cid:40)(cid:20) v2vT
2
vT
2 v2

(cid:21)T (cid:20) ∂LG(x)
∂xi,α

(cid:21)(cid:41)

Where the Laplacian matrix entries are given by

(cid:40)

[LG]ij =

−fij(x),
(cid:80)N

i (cid:54)= j
l=1,l(cid:54)=i fil(x)

i = j

(51)

(52)

(53)

(54)

, with respect to the spatial dimension of α ∈ 1...d, the off diagonal

Looking into the Laplacian (54) derivative,
entries are non zero for UAVs in the communication range.
Since

(cid:104) ∂LG (x)
∂xi,α

(cid:105)

∂fij(x)
∂xi,α

= −

∂fij(x)
∂xj,α

the off-diagonal entries of (cid:80)N
k

∂LG
∂xk,α

, where, k ∈ {i, j}, and for each spatial dimension of α ∈ 1...d is given as

N
(cid:88)

k

−

∂fij(x)
∂xk,α

= −

= −

∂fij(x)
∂xi,α

∂fij(x)
∂xi,α

(Aixi,α + Biuf ormationi) −

∂fij(x)
∂xj,α

(Aixj,α + Biuf ormationi)

Ai(xj,α − xi,α)

And the diagonal entries are

N
(cid:88)

N
(cid:88)

k

j

∂fij(x)
∂xk,α

(Aixk,α + Biuf ormationi) =

N
(cid:88)

N
(cid:88)

j

k

∂fij(x)
∂xk,α

(Aixk,α + Biuf ormationi)

=

+

=

N
(cid:88)

(cid:18) ∂fij(x)
∂xi,α

j
∂fij(x)
∂xj,α
N
(cid:88)

∂fij(x)
∂xi,α

j

(Aixi,α + Biuf ormationi)

(Aixj,α + Biuf ormationi

(cid:19)

Ai(xj,α − xi,α)

(55)

(56)

The value |xj,α − xi,α| −→ Xd, therefore, it approaches asymptotically to | Xd | of the separation distance in the spatial
dimension and approaches asymptotically to zero in its heading velocities as the UAVs are running the consensus algorithm. As
the rate of convergence of the W-MSR algorithm is exponential, hence the |xj,α − xi,α| −→ Xd also converges exponentially.
In a formation set up, once the UAVs are in position within a communication range (cid:107)xi − xj(cid:107)< R, then (cid:107)xi − xj(cid:107)−→ ﬁxed,
as the distance between UAVs do not change, therefore the LG(x) is constant as

∂LG(x)
∂xi,α

= 0

(57)

Hence,

(cid:88)

i

∂λ2(x)
∂xi,α

(cid:88)

=

i

T race

(cid:40)(cid:20) v2vT
2
vT
2 v2
(cid:40)(cid:20) v2vT
(cid:21)T
2
vT
2 v2

(cid:21)T (cid:20) ∂LG(x)
∂xi,α
(cid:20) ∂LG(x)
∂xi,α

(cid:88)

i

= T race

= 0

that is, each element of the gradient is zero.
Consequently,

dλ2
dt

= 0

VIII. SIMULATION RESULTS

(cid:21)(cid:41)

(cid:21)(cid:41)

11

(58)

(59)

In the simulations, different scenarios are considered in which a team of UAVs tries to achieve a resilient formation ﬂight in
the presence of misbehaving UAVs starting from a random location and assumed to be on a level ﬂight. Each UAV is within
a communication radius of another UAV, making it a connected graph.

A. Misbehaving UAVS

The misbehaving UAV(s) could be picked randomly out of the 20 UAVs to show either failure or being a victim of a cyber
attack. But in an intelligent cyber attack case, the UAV node in the communication graph with the maximum connection or
signal strength picked for most adverse potential to inﬂuence the other cooperative UAVs.

Here we consider F =| Na |= 2 misbehaving UAVs with a different inﬂuencing factors with: a) the largest communication

link with its immediate neighbors b) the strongest link signal strength, i.e., max{[LG(x)]ij} for all i = j.

Threat Model: The UAVs use a wireless broadcasting method for their communication hence a threat model of ‘Malicious
UAV’ will characterize it well. The threat in a formation ﬂight, where a misbehaving UAV l ∈ Na is a malicious one if it
does not follow the prescribed update rule. It send out the same value for all its neighbors i.e.,

This will help to model the misbehaving UAVs being under an intelligent cyber attack but also to the least, to act as a

x(l→i)(t) ≡ x(l→j)(t),

∀i, j ∈ Nl.

(60)

random failure of UAVs as well.

B. Regular Consensus Algorithm

All well behaving 20 UAVs start from a random location (Fig. 3(a)) and the connectivity maintenance controller and formation
control in (45) applied to the system of UAVs in level ﬂight. The controller is able to keep the UAVs in the speciﬁed 20-gon
vy = 4m/s]T after ﬂying
(icosagon) formation (Fig. 3(b) and heading straight in the positive y−direction with [vx = 0m/s
half a circle. The controller also maintains the algebraic connectivity of the graph Laplacian well above λ2 = 13 (Fig. 5(b)).
The ﬁnal communication graph in Figure 5(a) shows that the controller managed to bring all the UAVs into communication
radius range with certain connectivity level while keeping the formation in 20-gon form.

C. Regular Consensus Algorithm with Misbehaving UAVs

1) Misbehaving UAVs with constant heading: For a randomly generated graph in Figure 6(a), two (i.e., F = 2) non-
cooperative UAVs are picked. A regular consensus algorithm applied with a connectivity controller to the randomly placed
UAVs. The two non-cooperative UAVs maintain a constant x-position at x = 200m as seen in Figure 7(b).

Every UAV updates its velocity and position based on current consensus value yi. In Figure 7(b), the two non-cooperative
UAVs are sharing a constant value all the time which force the average consensus value to converge around their constant
value, xpi = 200, ∀i ∈ Na, which ultimately changed the formation ﬂight route as seen in Figure 6(b). Note that although
consensus can be reached, the non-cooperative or malicious UAVs have the potential to drive the consensus process to any
value outside of the initial values of the well-behaving UAVs by choosing its initial value.

12

(a) Intial Random Graph

(b) Formation ﬂight

Fig. 3.

(a) Initial communication graph for 20 UAVs (b) UAVs under 20-gon formation ﬂy.

(a) x-velocity

(b) x-position

Fig. 4.

(a) The 20 UAVs x-direction velocities (b) x-positions of the UAVs under formation ﬂy.

D. W-MSR Algorithm with Misbehaving UAVs

1) Misbehaving UAVs with Constant Heading: Here also a randomly generated graph in Figure 9(a) with two (i.e., F = 2)
non-cooperative UAVs, a W-MSR algorithm based formation control applied with a connectivity controller. The two misbehaving
UAVs keep a constant x position with xpi = −83m and xpj = 0, ∀i, j ∈ Na, respectively as seen in the Figure 10(b). These
values are chosen purposely so that the misbehaving UAVs will be always in the communication range.

020406080100120140x [m]020406080100120140y [m]Graph Configuration 050100150time [s]-15-10-50510152025vx [m/s]x velocityUAV 1,7,13,19UAV 2,8,14,20UAV 3,9,15UAV 4,10,16UAV 5,11,17UAV 6,12,18050100150time [s]-100-50050100150200x [m]x positionUAV 1,7,13,19UAV 2,8,14,20UAV 3,9,15UAV 4,10,16UAV 5,11,17UAV 6,12,1813

(a) Final communication graph

(b) Algebraic connectivity λ2(t)

Fig. 5.
UAVs under formation ﬂy.

(a) The 20 UAVs communication graph with different strength (indicated with different color of edges) (b) the algebraic connectivity (λ2(t)) of the

(a) Intial Random Graph

(b) Formation ﬂight

Fig. 6.
towards non-cooperative UAV ﬁxed x-postion, x = 200m.

(a) Initial communication graph with two non-cooperative UAVs, red and dark red colors. (b) Formation ﬂight of the 20 UAVs but drifted the route

(a) Intial Random Graph

(b) Formation ﬂight

Fig. 9. (a) Initial random graph, with two misbehaving UAVs having maximum communication link and maximum communication signal strength respectively
( red and dark red) (b) Formation ﬂight 20 UAVs in the presence of two ( F = 2) misbehaving UAVs with a constant x position.

050100150time [s]024681012142The second smallest eigenvalue of the Laplacian new, 220406080100120140x [m]020406080100120140y [m]Graph Configuration Intial 0102030405060708090x [m]0102030405060708090100y [m]Graph Configuration Intial 14

(a) x-velocity

(b) x-position

Fig. 7.

(a) x-direction velocities (b) x-positions of the 20 UAVs under formation ﬂight heavily inﬂuence or drifted to the non-cooperative UAVs’ x-postion.

(a) Final communication Graph

(b) Algebric connectivity λ2(t)

Fig. 8.
under formation ﬂying.

(a) Final communication graph of the formation ﬂying UAVs under regualr consensus algorithm. (b) Algebraic connectivity of the system of UAVs

The cooperative UAVs converges to the formation ﬂight within the initial value convex hull of the cooperative UAVs, despite
the two non-cooperative UAVs constantly sharing a ﬁxed position value to the W-MSR algorithm based formation control. To
guarantee the W-MSR based formation control convergence, the algebraic connectivity of the network of UAVs should be kept
above the resilience threshold, λ2 > 4F , i.e., λ2 > 8.

2) Misbehaving UAVs with offset in X-position: As indicated in the communication graph in the Figure 12(a) the location
of 20 UAVs are generated randomly within the communication range indicated in equation 5. The two UAVs only maintain
an offset in their x-position but kept the same heading and speed of the other UAVs, and consequently they stayed in the
communication link range to inﬂuence the other well behaving UAVs.

050100150time [s]-80-60-40-2002040vx [m/s]x velocityUAV 1,7,13,19UAV 2,8,14,20UAV 3,9,15UAV 4,10,16UAV 5,11,17UAV 6,12,18050100150time [s]050100150200250x [m]x positionUAV 1,7,13,19UAV 2,8,14,20UAV 3,9,15UAV 4,10,16UAV 5,11,17UAV 6,12,18050100150time [s]-101234562The second smallest eigenvlue of the Laplacian, 215

(a) x-velocity

(b) x-position

Fig. 10.

(a) x-direction velocities (b) x-positions of the 20 UAVs under formation ﬂight where two of them are misbehaving UAVs.

(a) Final communication Graph

(b) Algebric connectivity λ2(t)

(a)Final communication graph of the formation ﬂying UAVs with W-MSR algorithm. (b) Algebraic connectivity of the system of UAVs under

Fig. 11.
formation ﬂying kept above the threshold for resilience of W-MSR algorithm
.

(a) Intial Random Graph

(b) Formation ﬂight

Fig. 12.

(a) x-direction velocities (b) y-direction velocities of the UAVs under formation ﬂy.

050100150time [s]-25-20-15-10-505101520vx [m/s]x velocityUAV 1,7,13,19UAV 2,8,14,20UAV 3,9,15UAV 4,10,16UAV 5,11,17UAV 6,12,18050100150time [s]-100-50050100150x [m]x positionUAV 1,7,13,19UAV 2,8,14,20UAV 3,9,15UAV 4,10,16UAV 5,11,17UAV 6,12,18050100150time [s]024681012142The second smallest eigenvalue of the Laplacian After Misbehaving, 22-threshold20102030405060708090100x [m]102030405060708090100y [m]Graph Configuration Intial 16

(a) x-velocity

(b) x-position

Fig. 13.

(a) x-direction velocities (b) x-direction velocities of the UAVs under formation ﬂy.

Throughout the ﬂight, the cooperative UAVs converges within the initial value of the cooperative UAVs despite a constant
inﬂuence of offset values sent by the two misbehaving UAVs. The cooperative UAVs maintain the formation and ﬂight route
(Figure 12(b)) with the desired heading velocity (Figure 13(a) ) and heading direction(Figure 13(b)).

(a) Final communication Graph

(b) Algebric connectivity λ2(t)

Fig. 14. (a) Final communication graph of the formation ﬂying UAVs under W-MSR consensus algorithm with 2 misbehaving UAVs. (b) Algebraic connectivity
of the system of UAVs system of UAVs.

3) Misbehaving UAVs with Time Varying Signal: In this scenario, the noncooperating UAVs shares a time-varying heading
and kept close to the other UAVs to maintain a communication link. For a randomly generated graph in Figure 15(a) with
two noncooperating UAVs, a W-MSR algorithm based formation ﬂight applied with a connectivity controller. It is clear that
despite the two non cooperating UAVs who maintains a time-varying heading, the other well-behaving UAVs maintained the
formation ﬂight with the correct route (Figure 15(b)).

050100150time [s]-30-20-100102030vx [m/s]x velocityUAV 1,7,13,19UAV 2,8,14,20UAV 3,9,15UAV 4,10,16UAV 5,11,17UAV 6,12,18050100150time [s]-100-50050100150200x [m]x positionUAV 1,7,13,19UAV 2,8,14,20UAV 3,9,15UAV 4,10,16UAV 5,11,17UAV 6,12,18050100150time [s]01234567892The second smallest eigenvalue of the Laplacian After Misbehaving, 22-threshold217

(a) Intial Random Graph

(b) Formation ﬂight

Fig. 15.

(a) Initial random graph (b) Formation ﬂight the UAVs in the presence of two UAVs sharing time varying heading.

(a) x-velocity

(b) x-position

Fig. 16.

(a) x-direction velocities (b) x-positions of the UAVs under formation ﬂy in the presence of two miss behaving UAVs with time varying heading.

The trajectories indicate that the well behaving UAVs achieved consensus both in their velocity and position for the formation
ﬂight. They maintain the desired constant heading velocity ([vx = 0, vy = 4m/s]T ) (Figure 16) at the last part of the designated
route while ﬂying in a formation.

The ﬁnal communication graph in Figure 17(a) shows that all the 20 UAVs in the formation ﬂight stayed connected despite

the the two UAVs are constantly sharing a varying position offset with their neighbors as

and the UAVs still achieve resilience. But to guarantee the W-MSR based formation ﬂight consensu convergence, the

controller keeps the algebraic connectivity of the communication graph above the threshold as seen in ﬁgure 17(b)

xpi(t + 1) = xpi(t) + sin(t),

∀i ∈ Na

(61)

IX. CONCLUSION

In this work, we studied resilient consensus problem for a network of UAVs with second-order dynamics where the maximum
number of misbehaving UAVs in the network is known. A W-MSR algorithm is proposed for well-behaving UAVs to ﬂy in a
formation keeping the desired route. The resilient consensus is guaranteed on the (2F + 1)-robustness of the network topology
where r-robustness is a local information. A gradient based distributed controller is designed with a power iteration method
to estimate the second eigenvector.

0102030405060708090100x [m]0102030405060708090y [m]Graph Configuration Intial 050100150time [s]-20-15-10-505101520vx [m/s]x velocityUAV 1,7,13,19UAV 2,8,14,20UAV 3,9,15UAV 4,10,16UAV 5,11,17UAV 6,12,18050100150time [s]-100-50050100150200x [m]x positionUAV 1,7,13,19UAV 2,8,14,20UAV 3,9,15UAV 4,10,16UAV 5,11,17UAV 6,12,1818

(a) Final communication Graph

(b) Algebraic connectivity λ2(t)

Fig. 17. (a) Final communication graph of the formation ﬂying UAVs under W-MSR consensus algorithm with 2 misbehaving UAVs. (b) Algebraic connectivity
of the system of UAVs system of UAVs.

The misbehaving UAVs assume from constant to time-varying heading and also an offset on their true positions to depict
a fault in the sensors. In all the models of the misbehaving UAVs, the formation control with W-MSR algorithm managed
to maintain resilient consensus. The controllers made sure they maintain the algebraic connectivity of the underlying graph
above the resilient threshold to guarantee convergence. We also noticed that the normal consensus algorithm fails to be resilient
in the presence of misbehaving UAVs while even the algebraic connectivity was well kept in check showing the traditional
metric like graph connectivity is not a measure of resiliency of a network. Whereas algorithms with local information, i.e.,
r-robustness guarantee well behaving UAVs to achieve consensus in the presence of misbehaving UAVS.

This work was supported in part by ICT R&D program of MSIP/IITP [R-20150223-000167, Development of High Reliable

Communications and Security SW for Various Unmanned Vehicles].

X. ACKNOWLEDGMENTS

REFERENCES

[1] S Alston. Householder. the theory of matrices in numerical analysis. blaisdell, new york, 1964. MR, 30(5475):76, 1975.
[2] Rosario Aragues, Guodong Shi, Dimos V Dimarogonas, C Sagues, and Karl Henrik Johansson. Distributed algebraic connectivity estimation for adaptive

event-triggered consensus. In American Control Conference (ACC), 2012, pages 32–37. IEEE, 2012.

[3] Rosario Aragues, Guodong Shi, Dimos V Dimarogonas, Carlos Sag¨u´es, Karl Henrik Johansson, and Youcef Mezouar. Distributed algebraic connectivity

estimation for undirected graphs with upper and lower bounds. Automatica, 50(12):3253–3259, 2014.

[4] Ery Arias-Castro, Bruno Pelletier, and Pierre Pudlo. The normalized graph cut and cheeger constant: from discrete to continuous. Advances in Applied

Probability, 44(4):907–937, 2012.

[5] Francesco Bullo, Jorge Cortes, and Sonia Martinez. Distributed control of robotic networks: a mathematical approach to motion coordination algorithms.

Princeton University Press, 2009.

[6] Fan RK Chung. Spectral graph theory. Number 92. American Mathematical Soc., 1997.
[7] Maria Carmela De Gennaro and Ali Jadbabaie. Decentralized control of connectivity for multi-agent systems. In Decision and Control, 2006 45th IEEE

Conference on, pages 3628–3633. IEEE, 2006.

[8] Seyed Mehran Dibaji and Hideaki Ishii. Resilient consensus of second-order agent networks: Asynchronous update rules with delays. Automatica,

81:123–132, 2017.

[9] Patrick Doherty and Piotr Rudol. A uav search and rescue scenario with human body detection and geolocalization. In Australasian Joint Conference

on Artiﬁcial Intelligence, pages 1–13. Springer, 2007.

[10] J Alexander Fax and Richard M Murray. Information ﬂow and cooperative control of vehicle formations. Automatic Control, IEEE Transactions on,

49(9):1465–1476, 2004.

[11] Miroslav Fiedler. Algebraic connectivity of graphs. Czechoslovak mathematical journal, 23(2):298–305, 1973.
[12] Mauro Franceschelli, Andrea Gasparri, Alessandro Giua, and Carla Seatzu. Decentralized laplacian eigenvalues estimation for networked multi-agent
systems. In Decision and Control, 2009 held jointly with the 2009 28th Chinese Control Conference. CDC/CCC 2009. Proceedings of the 48th IEEE
Conference on, pages 2717–2722. IEEE, 2009.

[13] Cameron S.R. Fraser, Luca F. Betuccelli, Han-Lim Choi, and Jonathan P. How. A hyperparameter consensus method for agreement under uncertainty.

Automatica, 48(2):374–380, 2012.

[14] Michael A Goodrich, Bryan S Morse, Damon Gerhardt, Joseph L Cooper, Morgan Quigley, Julie A Adams, and Curtis Humphrey. Supporting wilderness

search and rescue using a camera-equipped mini uav. Journal of Field Robotics, 25(1-2):89–110, 2008.

[15] Volker Kaibel. On the expansion of graphs of 0/1-polytopes. The Sharpest Cut: The Impact of Manfred Padberg and His Work, 4:199–216, 2004.
[16] Alain Y Kibangou et al. Distributed estimation of laplacian eigenvalues via constrained consensus optimization problems. Systems & Control Letters,

80:56–62, 2015.

050100150time [s]0510152The second smallest eigenvalue of the Laplacian After Misbehaving, 22-threshold219

[17] Gerardo Lafferriere, Alan Williams, J Caughman, and JJP Veerman. Decentralized control of vehicle formations. Systems & control letters, 54(9):899–910,

2005.

[18] Heath J LeBlanc, Haotian Zhang, Xenofon Koutsoukos, and Shreyas Sundaram. Resilient asymptotic consensus in robust networks. IEEE Journal on

Selected Areas in Communications, 31(4):766–781, 2013.

[19] Nancy A Lynch. Distributed algorithms. Morgan Kaufmann, 1996.
[20] Patrick M Miller. Mini, micro, and swarming unmanned aerial vehicles: A baseline study. DTIC Document, 2006.
[21] Reza Olfati-Saber, J. Alex Fax, and Richard M. Murray. Consensus and cooperation in networked multi-agent systems. Proceedings of the IEEE,

95(1):215–233, 2007.

[22] Fabio Pasqualetti, Antonio Bicchi, and Francesco Bullo. Consensus computation in unreliable networks: A system theoretic approach. IEEE Transactions

on Automatic Control, 57(1):90–104, 2012.

[23] Marshall Pease, Robert Shostak, and Leslie Lamport. Reaching agreement in the presence of faults. Journal of the ACM (JACM), 27(2):228–234, 1980.
[24] Wei Ren and Randal W Beard. Consensus seeking in multiagent systems under dynamically changing interaction topologies. IEEE Transactions on

automatic control, 50(5):655–661, 2005.

[25] Wei Ren, Randal W. Beard, and Ella M. Atkins. Information consensus in multivehicle cooperative control. IEEE Control Systems Magazine, 27(2):71–82,

2007.

[26] Piotr Rudol and Patrick Doherty. Human body detection and geolocalization for uav search and rescue missions using color and thermal imagery. In

Aerospace Conference, 2008 IEEE, pages 1–8. IEEE, 2008.

[27] Lorenzo Sabattini, Nikhil Chopra, and Cristian Secchi. Decentralized connectivity maintenance for cooperative control of mobile robotic systems. The

International Journal of Robotics Research, 32(12):1411–1423, 2013.

[28] Kelsey Saulnier, David Saldana, Amanda Prorok, George J Pappas, and Vijay Kumar. Resilient ﬂocking for mobile robot teams. IEEE Robotics and

Automation Letters, 2(2):1039–1046, 2017.

[29] Ebrahim Moradi Shahrivar, Mohammad Pirani, and Shreyas Sundaram. Robustness and algebraic connectivity of random interdependent networks.

IFAC-PapersOnLine, 48(22):252–257, 2015.

[30] Ethan Stump, Ali Jadbabaie, and Vijay Kumar. Connectivity management in mobile robot teams. In Robotics and Automation, 2008. ICRA 2008. IEEE

International Conference on, pages 1525–1530. IEEE, 2008.

[31] Jun Sun, Stephen Boyd, Lin Xiao, and Persi Diaconis. The fastest mixing markov process on a graph and a connection to a maximum variance unfolding

problem. SIAM review, 48(4):681–699, 2006.

[32] Shreyas Sundaram and Christoforos N Hadjicostis. Distributed function calculation via linear iterative strategies in the presence of malicious agents.

IEEE Transactions on Automatic Control, 56(7):1495–1508, 2011.

[33] Sonia Waharte and Niki Trigoni. Supporting search and rescue operations with uavs.

In Emerging Security Technologies (EST), 2010 International

Conference on, pages 142–147. IEEE, 2010.

[34] Peng Yang, Randy A Freeman, Geoffrey J Gordon, Kevin M Lynch, Siddhartha S Srinivasa, and Rahul Sukthankar. Decentralized estimation and control

of graph connectivity for mobile sensor networks. Automatica, 46(2):390–396, 2010.

[35] Haotian Zhang, Elaheh Fata, and Shreyas Sundaram. A notion of robustness in complex networks. IEEE Transactions on Control of Network Systems,

2(3):310–320, 2015.

[36] Haotian Zhang and Shreyas Sundaram. Robustness of information diffusion algorithms to locally bounded adversaries. In American Control Conference

(ACC), 2012, pages 5855–5861. IEEE, 2012.

