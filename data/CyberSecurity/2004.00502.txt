0
2
0
2

r
a

M
1
3

]
L
C
.
s
c
[

1
v
2
0
5
0
0
.
4
0
0
2
:
v
i
X
r
a

Deep Learning Approach for Intelligent Named
Entity Recognition of Cyber Security

Simran K1, Sriram S1, Vinayakumar R2,1, and Soman KP1

1 Center for Computational Engineering and Networking, Amrita School Of
Engineering, Amrita vishwa vidyapeetham, Coimbatore, India.
simiketha19@gmail.com, sri27395ram@gmail.com
2 Division of Biomedical Informatics, Cincinnati Children’s Hospital Medical Centre,
Cincinnati, OH, United States.
Vinayakumar.Ravi@cchmc.org, vinayakumarr77@gmail.com

Abstract. In recent years, the amount of Cyber Security data gener-
ated in the form of unstructured texts, for example, social media re-
sources, blogs, articles, and so on has exceptionally increased. Named
Entity Recognition (NER) is an initial step towards converting this un-
structured data into structured data which can be used by a lot of appli-
cations. The existing methods on NER for Cyber Security data are based
on rules and linguistic characteristics. A Deep Learning (DL) based ap-
proach embedded with Conditional Random Fields (CRFs) is proposed
in this paper. Several DL architectures are evaluated to ﬁnd the most
optimal architecture. The combination of Bidirectional Gated Recurrent
Unit (Bi-GRU), Convolutional Neural Network (CNN), and CRF per-
formed better compared to various other DL frameworks on a publicly
available benchmark dataset. This may be due to the reason that the
bidirectional structures preserve the features related to the future and
previous words in a sequence.

Keywords: Information Extraction · Named Entity Recognition · Cy-
ber Security · Deep learning.

1

Introduction

Technology has evolved tremendously in the previous couple of decades making
diverse online web sources (news, forums, blogs, online databases, etc.) available
for common use. Newfound information regularly seems ﬁrst on these kinds of
online web sources in unstructured text format. Mostly, it requires a ton of time,
sometimes years, for this information to properly classify into a structured for-
mat. However, cases related to Cyber Security does not have that kind of time, so
timely extraction of this information plays an imperative job in numerous appli-
cations. Information modeling of cyber-attacks can be used by many individuals
such as auditors, analysts, researchers, etc [1]. At the core, knowledge extraction
task is recognition of named entities of a domain, such as products, versions,
etc. The best accuracy given by the current Named Entity Recognition (NER)

 
 
 
 
 
 
2

Simran et al.

devices, in this area of Cyber Security, depend on feature engineering. However,
feature engineering has many issues, for example, depending on look-ups or dic-
tionaries to recognize known entities [2]. With profoundly dynamic ﬁelds such as
Cyber Security, it is diﬃcult to fabricate as well as harder to keep up the word
references and in turn, consumes a lot of time for creating these NER tools. The
limitation of these tools is that they are domain-speciﬁc and cannot accomplish
good accuracy when applied to any other domain. These issues can be overcome
by using Part of Speech (POS) tagging. POS tagging is a task of identifying
the words as nouns, adjectives, verbs, adverbs, and so on (Distributed Denial of
Service (DDoS) is mostly taken as a noun). POS tagging can also diminish the
time delay in this domain.

Conditional Random Fields (CRFs) emerged in recent years as the most suc-
cessful method for entity extraction. CRFs are best for tagging and sequential
data as they can predict sequences of labels for a set of input samples, taking
the context of the input data into account. Mikolov et al. [7] proposed a method
called word2vec which converts every word in a corpus into a low dimensional
dense vector representation. These vectors can reﬂect the semantic relationship
between the words which was not possible in classical one-hot vectors. For ex-
ample, the diﬀerence between the vectors representing the words king and queen
is similar to the diﬀerence between the vectors representing the words man and
woman. These relationships result in the clustering of semantically similar words
in the vector space.

Another leap forward in the ongoing years is the Deep Learning (DL) ﬁeld.
DL is an enhanced classical neural network model which naturally learns non-
linear combinational features on its own whereas classical methods, for example,
CRFs can just learn linear combinations of the deﬁned features. This reduces
the user work of tedious feature engineering [1,34,35,36]. The expansion in infor-
mation accessibility, increase in hardware processing power particularly GPUs,
diﬀerent activation functions, etc has made DL exceptionally practical and fea-
sible. Recent days, the applications of DL have been leverage towards various
applications in the ﬁeld of Cyber Security [3,4,5,6].

The hybrid model of Long Short Term Memory (LSTM) and CRF architec-
ture proposed by Lampal et al. [8] for NER is a blend of LSTM, CRFs, and
word2vec model. As this architecture is domain and entity type agnostic, it very
well can be connected to any area as long as the input is an annotated corpus
of the same format as the CoNLL-2000 dataset. This architecture is applied
to the domain of Cyber Security NER in [9]. As the corpus of Cyber Security
is not widely available, they utilized the corpus created in the work done by
Bridges et al. [1] for training the model. The author compared the performance
of LSTM-CRF with CRFSuite and LSTM-CRF beat CRFSuite with two percent
accuracy.

The major contributions are:

1. This work proposes a deep learning based framework for NER in Cyber

Security.

Deep Learning based Named Entity Recognition

3

2. Various deep learning architectures are evaluated on well known and bench-

mark data set.

3. The importance of non-linear text representation is discussed in the context

of Cyber Security NER.

The remaining paper is arranged as follows. Section 2 documents the related
works followed by background related to deep learning architectures in Section
3. Section 4 describes the details of the data set used and Section 5 provides a
description of proposed architecture. Section 6 reports the experiments, results,
and observation whereas section 7 will conclude this paper with remakes on
future work of research.

2 Related Works

A lot of eﬀorts are made for automatically labeling Cyber Security entities in the
past years. Concepts in Common Vulnerability Enumeration (CVE-3) were an-
notated to instantiate a security ontology in [10]. Reuters [11] likewise did with
the assistance of his web journals and OpenCalais. Mulwad et al. [12] searched
the web to identify security relevant text and then train an SVM classiﬁer to
identify the descriptions of potential vulnerability. Afterward utilizing Open-
Calais alongside the taxonomy of Wikipedia to identify and classify vulnerability
entities. In spite of the fact that these sources rely upon standard entity recog-
nition software, they are not prepared to recognize domain speciﬁc ideas. This
is because of the general nature of their training data [13,14]. Joshi et al. [15]
noted comparative discoveries where NERD system [16], Open-Calais and Stan-
ford Named Entity Recognizer were all commonly helpless to recognize Cyber
Security domain entities. This is due to the fact that these tools do not utilize
domain-speciﬁc corpus. Stanford NER system with hand-labeled domain speciﬁc
training corpus was created in [15] and delivered better outcomes for the greater
part of their domain-speciﬁc entities.

Joshi et al. [15] additionally performed hand annotating for a small corpus.
This small corpus was then encouraged to Stanford NER “oﬀ-the-shelf ” layout
for train a CRF entity extractor [13]. Their work has recognized the equivalent
Cyber Security issue yet they didn’t address a more broad issue of automatically
the labeling process.

Semi-supervised methods are additionally utilizing entity extraction rather
than supervised methods as they function admirably with very small training
data also. [17] have used semi-supervised methods for entity extraction and
have got beneﬁcial outcomes. A bootstrapping algorithm created by McNeil
et al. [18] depicts a prototypical execution to extract data about vulnerabilities
and exploits. [19] utilizes known databases for seeding bootstrapping strategies.
[20] developed an exact strategy to automatically label text from diﬀerent data
sources and then provide public access to a data set which is annotated with Cy-
ber Security entities. [21] proposed an algorithm for extracting security entities
and their relationships using semi-supervised NLP with a small amount of input

4

Simran et al.

data. The precision of 0.82 was achieved using small corpus. Either rule-based or
machine learning [22] approaches are utilized for NER and regularly the two are
mixed [23]. Rule-based is a blend of lookups and rules for pattern matching that
is hand-coded by an area expert. These rules use the contextual information of
the entity to decide if candidate entities are substantial or not. Machine learning
based NER approaches utilize an assortment of models, for example, Maximum
Entropy Models [24], Hidden Markov Models (HMMs) [25], CRFs [26], Percep-
trons [27], Support Vector Machines (SVMs) [28], or neural networks [2]. The
best NER approaches incorporate those dependent on CRFs. CRFs address the
NER issue utilizing an arrangement labeling model. In this model, the label of
an entity is demonstrated as reliant on the labels of the previous and following
entities in a predeﬁned window.

As deep neural networks address many short comes of classical statistical
technique such as feature engineering, they are considered as a potential alter-
native [29]. As feature are learned automatically by the neural network, they
decline the measure of human endeavors required in various applications. Sig-
niﬁcant enhancements in accuracy in neural network feature with respect to
hand-engineered features are shown by empirical outcomes over a wide arrange-
ment of domains. Recurrent Neural Networks (RNNs) property of having long
time memory as they process input with variable length results in outstanding
accomplishment with several NLP tasks [30]. In [31], LSTM property to permit
the learning between arbitrary long-distance dependencies enhances its perfor-
mance over RNN.

In [32], LSTM-CRF technique was applied to the issue of NER in the Cyber
Security domain utilizing the corpus made accessible by Joshi et al. [15]. Given an
annotated corpus of a decent size, it was observed that this technique outﬂanks
the state of the art methods given an annotated corpus of a decent size.

3 Background

3.1 Convolutional Neural Network (CNN)

CNN is very famous network as it uses less learnable parameters. This network
consists of three types of layers which are convolution layers, pooling layers, and
fully connected layers. In the convolution layer of this neural network, convolu-
tion operation is performed using several ﬁlters which slide through the input
and learns the features of the input data. The pooling layer is utilized to decrease
the size of the previous layer. Min pooling, max pooling, and average pooling are
the diﬀerent types of pooling layers available. The network is connected with a
dense layer at the end so that the features can be mapped to the classiﬁcation.

3.2 Recurrent Neural Network (RNN)

RNN is a very important deep learning architecture which can handle sequential
information whereas feedforward neural networks fail at doing this. That’s why

Deep Learning based Named Entity Recognition

5

RNN is utilized for applications related to sequential data, for example, speech
data as it can learn multi-variation like PoS tagging [33] using the hidden units
present in the recurrent cells. The issue of exploding or vanishing gradients is
the main problem with RNN.

3.3

Long Short-Term Memory (LSTM)

LSTM was introduced to solve the problem of vanishing gradient in RNN. It
selectively remembers the patterns for a long duration of time. The error that
will be backpropagated through layers is preserved which is a big help to LSTM.
Because of the three gates in LSTM, it has the ability to handle long term as
well as short term information whereas RNN can handle only short term data.
The cell takes decisions about when to allow read, write, etc. operations as well
as what to store and erase.

3.4 Gated Recurrent Unit (GRU)

GRU is an extended version of standard RNN and are also considered as a minor
variation from LSTM. An LSTM without an output gate is basically called as
GRU. It has update gate and reset gate which chooses what data should be
passed through them. LSTM can easily perform unbounded counting, so in this
way, it is stronger than GRU. That’s why the LSTM is able to learn simple
languages whereas GRU fails at this.

3.5 Bidirectional architectures

To understand the context better and resolve ambiguities in the text, bidirec-
tional recurrent structures are utilized which learns the information from the
previous and future time stamps. The two types of connections are one going
forward in time and the other going backward in time. These connections help
in learning the previous and future representations respectively. The module in
this bidirectional recurrent structure could be an RNN, LSTM or GRU.

4 Description of the Data set

Auto-labeled Cyber Security domain text corpus provided by Bridges et al. [1]
comprising of around 40 entity types was used in this work. All the corpora is
stored in a single JSON ﬁle and high-level JSON element are used to represent
each corpus. Each word in these corpora is auto-annotated with an entity type.
The ﬁles were additionally changed over into CoNLL2000 format in order to
feed the data into the model. Every word was annotated in a separate line and
separation between the three corpora were removed. When the preprocessing
is completed, each line in the data set consists of a word as well as its entity
type. The data set was divided into three subsets that is training, validation,
and testing consisting of 70%, 10%, and 20% data respectively.

6

Simran et al.

5 Proposed Architecture

The proposed architecture for Cyber Security named entity recognition is shown
in Figure 1. The architecture has three diﬀerent sections, namely input, fea-
ture generation, and output. In the input layer, the text data is converted into
numerical features using Keras embedding. These numerical features are high
dimensional in nature so they are passed into a bidirectional GRU layer. Bidi-
rectional GRU layer reﬁnes the vectors and feeds them to a CNN layer. CNN
network generates more optimal features and feeds it to a CRF layer for en-
hanced learning. This ﬁnal layer uses the Viterbi algorithm to generate the most
possible tag for the input word.

Fig. 1. Proposed Architecture.

6 Experiments, Results, and Observations

TensorFlow3 with Keras4 were used to implement all the deep learning architec-
tures. All the models are trained on GPU enabled TensorFlow. Various statistical
measures are utilized in order to evaluate the performance of the proposed clas-
sical machine learning and deep learning models.

Initially, to identify the optimal architecture for auto-labeled Cyber Security
domain text corpus we proposed an architecture which has been explained in

3 https://www.tensorﬂow.org/
4 https://keras.io/

Deep Learning based Named Entity Recognition

7

Section 5 and we compared the performance of the proposed method with the
architectures already published. Various deep learning architectures were im-
plemented and their performance was compared with Bidirectional GRU+CNN-
CRF. Bidirectional GRU+CNN-CRF outperformed all other architectures. LSTM
is computationally expensive whereas GRU is computationally inexpensive which
can lead to the same performance in some cases and some cases the performance
of the GRU is better than LSTM.

The training dataset was used to train the models and these trained models
were tested using the testing data set. LSTM, RNN, GRU, Bidirectional GRU
contains 128 hidden units. Embedding dimension of 128, learning rate of 0.005,
and Stochastic Gradient Descent (SGD) learning method are used in all the
experiments. The models were compared in terms of precision, recall, and f1-
score and the detailed results are reported in Table 1. The performance metrics
in terms of precision, recall, and f1-score shows that Bidirectional GRU+CNN-
CRF outperformed all other architectures.

Table 1. Average weighted performance metrics for all entity types.

Model

LSTM-CRF [9]

CRF [9]

CNN-CRF

RNN-CRF

GRU-CRF

Bidirectional GRU-CRF

Precision Recall F1-score

85.3

82.4

83.1

83.5

86.5

88.7

94.1

83.3

93.9

85.6

95.7

95.4

89.5

82.8

88.2

84.5

90.9

91.9

Bidirectional GRU+CNN-CRF 90.8

96.2

93.4

7 Conclusion and Future work

This work evaluates the eﬃcacy of various deep learning frameworks along with
CRF model for NER Cyber Security text data and Bidirectional GRU+CNN-
CRF model performed better than other deep learning architecture. The best
part about the proposed architecture is that it does not require any feature engi-
neering. This work can be extended for Relation Extraction (RE). RE basically
attempts to ﬁnd occurrences of relations among entities. Product vulnerability
description can be better understood by using RE. For instance, RE can be used
to identify and diﬀerentiate the product that is being attacked and the product
that is meant to attack by using the information extracted from the product
vulnerability description.

Acknowledgment

This research was supported in part by Paramount Computer Systems and
Lakhshya Cyber Security Labs. We are grateful to NVIDIA India, for the GPU

8

Simran et al.

hardware support to research grant. We are also grateful to Computational En-
gineering and Networking (CEN) department for encouraging the research.

References

1. R. A. Bridges, C. L. Jones, M. D. Iannacone, K. M. Testa, and J. R. Goodall,
”Automatic labeling for entity extraction in cyber security,” arXiv preprint
arXiv:1308.4941, 2013.

2. R. Collobert, J. Weston, L. Bottou, M. Karlen, K. Kavukcuoglu, and P. Kuksa,
”Natural language processing (almost) from scratch,” Journal of Machine Learning
Research, vol. 12, pp. 2493-2537, 2011.

3. Vinayakumar, R., Soman, K. P., & Poornachandran, P. (2018). Detecting mali-
cious domain names using deep learning approaches at scale. Journal of Intelligent
& Fuzzy Systems, 34(3), 1355-1367.

4. Vinayakumar, R., Soman, K. P., & Poornachandran, P. (2018). Evaluating deep
learning approaches to characterize and classify malicious URLs. Journal of Intel-
ligent & Fuzzy Systems, 34(3), 1333-1343.

5. Vinayakumar, R., Alazab, M., Jolfaei, A., Soman, K. P., & Poornachandran, P.
(2019, May). Ransomware triage using deep learning: twitter as a case study. In
2019 Cybersecurity and Cyberforensics Conference (CCC) (pp. 67-73). IEEE.
6. Vinayakumar, R., Soman, K. P., Poornachandran, P., & Akarsh, S. (2019). Appli-
cation of Deep Learning Architectures for Cyber Security. In Cybersecurity and
Secure Information Systems (pp. 125-160). Springer, Cham.

7. T. Mikolov, I. Sutskever, K. Chen, G. S. Corrado, and J. Dean, ”Distributed
representations of words and phrases and their compositionality,” in Advances in
neural information processing systems, pp. 3111-3119, 2013.

8. G. Lample, M. Ballesteros, S. Subramanian, K. Kawakami,and C. Dyer, ”Neu-
ral architectures for named entity recognition,” arXiv preprint arXiv:1603.01360,
2016.

9. Gasmi, Houssem, Abdelaziz Bouras, and Jannik Laval. ”LSTM Recurrent Neural
Networks for Cybersecurity Named Entity Recognition.” ICSEA 2018 (2018): 11.
10. S. More, M. Matthews, A. Joshi, and T. Finin, A knowledge-based approach to
intrusion detection modeling, in Security and Privacy Workshops (SPW), 2012
IEEE Symposium on Semantic Computing and Security. IEEE, 2012, pp. 7581.

11. T. Reuters, OpenCalais, 2009.
12. V. Mulwad, W. Li, A. Joshi, T. Finin, and K. Viswanathan, Extracting
information about security vulnerabilities from web text,
in Proceedings of
the 2011 IEEE/WIC/ACM International Conferences on Web Intelligence
and Intelligent Agent Technology - Volume 03, ser. WI-IAT 11. Washing-
ton, DC, USA: IEEE Computer Society, 2011, pp. 257260. [Online]. Available:
http://dx.doi.org/10.1109/WI-IAT.2011.26

13. J. R. Finkel, T. Grenager, and C. Manning, Incorporating non-local informa-
tion into information extraction systems by Gibbs sampling, in Proceedings of
the 43rd Annual Meeting on Association for Computational Linguistics,ser. ACL
05. Stroudsburg, PA,USA: Association for Computational Linguistics,2005, pp.
363370. [Online]. Available: http://dx.doi.org/10.3115/1219840.1219885

14. E. F. Tjong Kim Sang and F. De Meulder,Introduction to the CoNLL-2003 shared
task: Language-independent named entity recognition, in Proceedings of the Sev-
enth Conference on Natural Language Learning at HLT-NAACL 2003- Volume 4.
Association for Computational Linguistics, 2003, pp. 142147.

Deep Learning based Named Entity Recognition

9

15. A. Joshi, R. Lal, T. Finin, and A. Joshi, Extracting cybersecurity related linked
data from text, in Proceedings of the 7th IEEE International Conference on Se-
mantic Computing. IEEE Computer Society Press, 2013.

16. G. Rizzo and R. Troncy, NERD: A framework for unifying named entity recogni-
tion and disambiguation extraction tools, in Proceedings of the Demonstrations
at the 13th Conference of the European Chapter of the Association for Computa-
tional Linguistics. Association for Computational Linguistics, 2012, pp. 7376.
17. R. Huang and E. Riloﬀ, Bootstrapped training of event extraction classiﬁers, in
Proceedings of the 13th Conference of the European Chapter of the Association
for Computational Linguistics. Association for Computational Linguistics, 2012,
pp. 286295.

18. N. McNeil, R. A. Bridges, M. D. Iannacone, B. Czejdo, N. Perez, and J. R. Goodall,
PACE: Pattern accurate computationally eﬃcient bootstrapping for timely discov-
ery of cyber-security concepts, in Machine Learning and Applications (ICMLA),
2013 11th International Conference on. IEEE, 2013.

19. J. Geng and J. Yang, Auto bib: Automatic extraction of bibliographic informa-
tion on the web, in Proceedings of the International Database Engineering and
Applications Symposium, ser.IDEAS 04. Washington, DC, USA: IEEE Computer
Society, 2004, pp. 193204. [Online]. Available: http://dx.doi.org/10.1109/IDEAS.
2004.14

20. Bridges, Robert A., et al. ”Automatic labeling for entity extraction in cyber se-

curity.” arXiv preprint arXiv:1308.4941(2013).

21. Jones, Corinne L., et al. ”Towards a relation extraction framework for cyber-
security concepts.” Proceedings of the 10th Annual Cyber and Information Secu-
rity Research Conference. ACM, 2015.

22. P. Cimiano, S. Handschuh, and S. Staab, ”Towards the self annotating web,” in
Proceedings of the 13th international conference on World Wide Web, pp. 462-471,
2004.

23. P. Pantel and M. Pennacchiotti, ”Automatically Harvesting and Ontologizing Se-
mantic Relations,” in Proceedings of the 2008 Conference on Ontology Learning
and Population: Bridging the Gap Between Text and Knowledge, Amsterdam,
The Netherlands, The Netherlands, pp. 171-195, 2008.

24. H. L. Chieu and H. T. Ng, ”Named entity recognition: a maximum entropy ap-
proach using global information,” in Proceedings of the 19th international confer-
ence on Computational linguistics-Volume 1, pp. 190-196, 2002.

25. A. McCallum, D. Freitag, and F. C. N. Pereira, ”Maximum Entropy Markov
Models for Information Extraction and Segmentation.,” in Icml, pp. 591-598, 2000.
26. A. McCallum and W. Li, ”Early results for named entity recognition with con-
ditional random ﬁelds, feature induction and web-enhanced lexicons,” in Pro-
ceedings of the seventh conference on Natural language learning at HLT-NAACL
2003-Volume 4, pp. 188-191, 2003.

27. X. Carreras, L. Mrquez, and L. Padr, ”Learning a perceptron-based named entity
chunker via online recognition feedback” in Proceedings of the seventh conference
on Natural language learning at HLT-NAACL 2003-Volume 4, pp. 156-159, 2003.
28. H. Isozaki and H. Kazawa, ”Eﬃcient support vector classiﬁers for named entity
recognition,” in Proceedings of the 19th international conference on Computa-
tional linguistics-Volume 1, pp. 1-7, 2002.

29. Y. Goldberg, ”A Primer on Neural Network Models for Natural Language Pro-

cessing.,” J. Artif. Intell. Res.(JAIR), vol. 57, pp. 345-420, 2016.

10

Simran et al.

30. A. Graves, A. Mohamed, and G. Hinton, ”Speech recognition with deep recur-
rent neural networks,” in Acoustics, speech and signal processing (icassp), ieee
international conference on, pp. 6645-6649, 2013.

31. F. A. Gers, J. A. Schmidhuber and F. A. Cummins, ”Learning to Forget: Continual
Prediction with LSTM,”, Neural Compution, vol. 12, pp. 2451-2471, 10 2000.
32. Hochreiter, S., & Schmidhuber, J. (1997). Long short-term memory. Neural com-

putation, 9(8), 1735-1780.

33. Collobert, R., Weston, J., Bottou, L., Karlen, M., Kavukcuoglu, K., & Kuksa, P.
(2011). Natural language processing (almost) from scratch. Journal of machine
learning research, 12(Aug), 2493-2537.

34. Vinayakumar, R., Alazab, M., Srinivasan, S., Pham, Q. V., Padannayil, S. K., &
Simran, K. (2020). A Visualized Botnet Detection System based Deep Learning for
the Internet of Things Networks of Smart Cities. IEEE Transactions on Industry
Applications.

35. Vinayakumar, R., Alazab, M., Soman, K. P., Poornachandran, P., & Venkatraman,
S. (2019). Robust intelligent malware detection using deep learning. IEEE Access,
7, 46717-46738.

36. Vinayakumar, R., & Soman, K. P. (2020). Siamese neural network architecture

for homoglyph attacks detection. ICT Express, 6(1), 16-19.

