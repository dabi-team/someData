IEEE INTERNET OF THINGS JOURNAL

1

Resource Management and Security Scheme of
ICPSs and IoT Based on VNE Algorithm

Peiying Zhang, Chao Wang, Chunxiao Jiang, Neeraj Kumar, and Qinghua Lu

2
2
0
2

b
e
F
3

]

R
C
.
s
c
[

1
v
5
7
3
1
0
.
2
0
2
2
:
v
i
X
r
a

Abstract—The development of Intelligent Cyber-Physical Sys-
tems (ICPSs) in virtual network environment is facing severe
challenges. On the one hand, the Internet of things (IoT) based
on ICPSs construction needs a large amount of reasonable
network resources support. On the other hand, ICPSs are facing
severe network security problems. The integration of ICPSs and
network virtualization (NV) can provide more efﬁcient network
resource support and security guarantees for IoT users. Based
on the above two problems faced by ICPSs, we propose a virtual
network embedded (VNE) algorithm with computing, storage
resources and security constraints to ensure the rationality and
security of resource allocation in ICPSs. In particular, we use
reinforcement learning (RL) method as a means to improve
algorithm performance. We extract
the important attribute
characteristics of underlying network as the training environment
of RL agent. Agent can derive the optimal node embedding
strategy through training, so as to meet the requirements of
ICPSs for resource management and security. The embedding of
virtual links is based on the breadth ﬁrst search (BFS) strategy.
Therefore, this is a comprehensive two-stage RL-VNE algorithm
considering the constraints of computing, storage and security
three-dimensional resources. Finally, we design a large number of
simulation experiments from the perspective of typical indicators
of VNE algorithms. The experimental results effectively illustrate
the effectiveness of the algorithm in the application of ICPSs.

Index Terms—Intelligent Cyber-Physical Systems, Internet of
Things, Resource Allocation, Security Problems, Virtual Network
Embedding, Reinforcement Learning

I. INTRODUCTION

The emergence of

Intelligent Cyber-Physical Systems
(ICPSs) has completely subverted the way humans interact
with intelligent systems [1], [2]. An ICPS is essentially a
computer system, which uses various intelligent technologies
to closely combine physics and software to achieve diversiﬁed
operation modes at different time and space scales [3]–[5].
Because ICPSs have excellent characteristics of extensive use
of intelligent technologies (machine learning (ML), reinforce-
ment learning (RL), etc.), they are more valued in the ﬁeld

This work is partially supported by the National Key Research and
Development Program of China under Grant 2020YFB1804800, partially
supported by the National Natural Science Foundation of China under Grant
61922050, and partially supported by Shandong Provincial Natural Science
Foundation under Grant ZR2020MF006. (Corresponding author: Chunxiao
Jiang).

P. Zhang and C. Wang are with the College of Computer Science and
Technology, China University of Petroleum (East China), Qingdao 266580,
China. E-mail: 25640521@qq.com, wangch upc@qq.com.

Chunxiao Jiang is with the School of Information Science and Technology,
Tsinghua University, Beijing 100084, China. E-mail: jchx@tsinghua.edu.cn.
is with the Department of Computer Science and En-
Institute of Engineering and Technology. Email:

N. Kumar

gineering, Thapar
neeraj.kumar@thapar.edu.

Qinghua Lu is with Data61, CSIRO, Sydney, Australia. E-mail:

qinghua.lu@data61.csiro.au.

of Internet of Things (IoT). For example, ICPSs are applied
in IoT scenarios such as intelligence transportation, smart
home, smart grid and smart medical care. The scene of the
ICPS is shown in Figure 1. What needs researchers to pay
attention to is that ICPSs are facing severe challenges in
data storage, resource optimization and network security [6].
In order for the ICPSs to match the development speed of
new technologies and further improve the performance of
supporting the construction of IoT, a new solution needs to
be considered from the perspective of the underlying net-
work architecture. Among them, resource optimization and
scheduling are the most important issues for the underlying
network architecture [7]–[10]. The reasonable allocation of
underlying network resources to ICPSs will help solve the new
challenges faced by the development of the system [15], [16].
Radio network resource management faces severe challenges,
including storage, spectrum, computing resource allocation,
and joint allocation of multiple resources [17], [18]. With the
rapid development of communication networks, the integrated
space-ground network has also become a key research object
[19].

The large-scale application of IoT has profoundly changed
people’s lifestyles [11], [12]. The urgent performance require-
ments of massive IoT end users for IoT force it to require
extremely robust
infrastructure support. As the traditional
Internet architecture continues to be rigid with the expansion
of user scale, and the continuous development of artiﬁcial
intelligence technologies bring great pressure to the resource
allocation of the traditional Internet architecture [13], [14].
Therefore, its ”best effort” service model cannot adapt to
the development needs of the IoT, and it cannot be used
as the underlying architecture to support the development of
multi-dimensional applications of the IoT. The emergence of
network virtualization (NV) provides new possible ideas for
solving the basic network architecture problems that support
the development of ICPSs [20]. In NV architecture, the re-
alization of various network functions no longer depends on
speciﬁc hardware but on software programming [21]. A key
problem is how the infrastructure provider (InP) reasonably
allocates the substrate node and link resources for the service
provider (SP),
the virtual network embedding (VNE)
problem.

i.e.

In ICPSs, host-centric networks are gradually changing
to resource-centric networks. Therefore, resource scheduling
capabilities are the core issue of ICPSs. Many challenges faced
by ICPSs can be solved from the perspective of resource
scheduling [22]. NV technology can improve the resource
management capabilities of the network to a large extent, so it

 
 
 
 
 
 
IEEE INTERNET OF THINGS JOURNAL

2

prove that the algorithm proposed in this paper has good
characteristics.

The other chapters of the paper are arranged as follows.
In section II, after a brief analysis of the problems to be
studied, the related research progress of VNE algorithms based
on network resource constraints is introduced. Section III
describes the basic VNE problem, and then we create the
network model for this problem. Finally, we mention the
evaluation index of the VNE algorithm in this section. In
section IV, we introduce in detail the implementation process
of the VNE algorithm based on RL for three-dimensional
resource constraints. Section V introduces the details of the
simulation experiment, and demonstrated and analyzed the
experimental results. Section VI summarizes the full paper.

II. RELATED WORK

ICPSs have received widespread attention in the industry,
and a considerable number of scholars have conducted repre-
sentative studies. Zhou et al. [32] proposed a new ICPS based
on IoT. The authors also studied the resource allocation of
the system and innovatively introduced the concept of virtual
devices. Through outage analysis, the authors transformed the
mixed probability problem into a non-probability problem, and
the ﬁnal result proved that the method has good convergence
characteristics. Reference [33] proposed a collaborative control
method of network resources in ICPSs. This method mainly
achieved system balance by controlling the performance of
each loop, and ultimately optimized the overall performance
of ICPSs. In addition, references [34] and [35] also studied
the application of ICPSs in IoT.

In issues related to network resource allocation, CPU re-
source is one of the most
important resources to realize
network function. Besides, with the blowout growth of ICPSs,
the security problems in the VNE are increasingly apparent
[36], [37]. However, there is no special security protection
mechanism to ensure the security of ICPSs under the NV
architecture [38]. In addition,
the existing virtual network
model allows to exchange bandwidth resources with storage
resources to a certain extent [39], [40], so it increases the difﬁ-
culty of rational allocation of resources. Therefore, reasonable
allocation of computing resources, storage resources and full
consideration of the security of VNE are of great signiﬁcance
to solve the problem of VNE.

At present, some scholars have discussed the above-
mentioned resource-constrained VNE algorithms, but most
of them have designed and implemented heuristic algorithms
from the perspective of a single resource. In addition, more and
more VNE algorithms based on intelligent learning algorithms
have appeared. This part will introduce some representative
algorithms.

A. Heuristic VNE Algorithm With Resource Constraints

According to the concept of security virtual network em-
bedding (SVNE), a new solution of SVNE was proposed
by Liu et al. [41]. This algorithm was implemented based
on multi-attribute evaluation and path optimization. The node
mapping function was used to map the virtual nodes by using

Figure 1: Intelligent Cyber-Physical systems and IoT scenar-
ios.

can be considered for resource management and security issues
of ICPSs. As one of the key problems of NV, the efﬁciency
of VNE algorithm largely determines the performance of
ICPSs [23]. ICPSs need to handle complex tasks such as
heterogeneous data generation, massive data transmission, fast
changing cache state, etc. VNE algorithm can provide a good
technical support for ICPSs to deal with these tasks [24], [25].
With the rise of network intelligent learning algorithms,
using intelligent algorithms to solve high-latitude decision-
making problems has become a trend. It is precisely because of
the excellent performance of RL that we apply it to solve the
resource management problems of ICPSs and IoT [26]–[28].
In RL, agent takes new actions to get more rewards through
interaction with the environment, which is a process of seeking
the best [29]–[31]. In this paper, we propose a VNE algorithm
based on RL method for computing, storage and security of
three dimensional resource constraints. To this end, the main
contributions of this paper are as follows:

1) Aiming at the resource management and security prob-
lems faced by ICPSs,
this paper proposes a VNE
algorithm constrained by CPU, storage resources and
security attributes, which solves the challenges faced
by ICPSs from the perspective of network resource
allocation.

2) We use RL to improve the performance and efﬁciency of
the algorithm. In RL method, we use a policy network
as an agent to participate in training. The goal of agent
is to explore the optimal VNE strategy. In test phase,
the VNE process is carried out according to the training
results.

3) In the experimental stage, we compared the performance
of the algorithm proposed in this paper with several
other representative algorithms. The experimental results

 gas transmission system . Intelligent Cyber-Physical SystemIoT devicestraffic system control networkpower system control networknatural gas system control networksmart carpower stationlarge generator settransmission and distribution systemdistributed power, energy storage and controllable loadSmart Citybase stationIEEE INTERNET OF THINGS JOURNAL

3

the multiple characteristics of resource richness and security
attributes. After that, it considered the characteristics of link
bandwidth and path hops and used link mapping function to
complete the process of link mapping. In reference [42], trust
relationship and trust degree were introduced into the VNE
problem. The virtual nodes were embedded by the method of
approaching ideal ordering and the links were mapped by the
shortest path method. In reference [39], the authors proposed
a VNE algorithm based on storage, network constraints and
computing resources. For the ﬁrst time, the algorithm con-
sidered the inﬂuence of the above three important network
resource constraints on the VNE algorithm. Two heuristic
algorithms based on greedy node mapping were designed. Our
algorithm is different from this one. First of all, we use RL
algorithm to solve the resource constraint in VNE. In addition,
we consider the problem of computing, storage and security
resource constraints. This algorithm does not consider security
issues.

B. Embedded Algorithm of Virtual Network Based on Intelli-
gent Learning

The authors of [43] tried to reduce VNE as a combinatorial
optimization problem. The authors used the pointer network to
establish a VNE strategy and used an active search algorithm
to optimize the strategy. Experiments showed it can improve
the utilization of network resources while increasing the long
term revenue-cost ratio of VNE. In reference [44], the authors
proposed a continuous decision-making VNE algorithm based
on RL. In this algorithm, the VNR sequence was modeled
as a seq2seq time series model, with emphasis on the con-
tinuous characteristics of node embedding. The experimental
results proved that the algorithm has good VNE characteristics
whether it
is compared with heuristic algorithms or ML
algorithm. Yuan et al. [45] carried out research on VNE issues
in the ﬁeld of cloud computing. Aiming at the problems that
most of the existing algorithms used random network topology
and low resource utilization, the authors designed a VNE algo-
rithm based on Q-learning. The characteristic of the algorithm
was that the reward function was designed by the RL agent
according to the embedding effect of the virtual links. The Q-
matrix was updated through intelligent learning method, and
then the agent can ﬁnd the optimal embedding strategy from
the latest Q-table. The authors of reference [46] proposed
a new type of automatic VNE solution. In this scheme, the
authors used a parallel deep reinforcement learning (DRL)
framework and a multi-objective reward function method, and
combined DRL with a neural network to achieve the goal of
providing automatic embedding scheme within an acceptable
time range.

Similarly, references [47], [48] also had introduced some
ideas of ML algorithms into the VNE algorithm. All the above
studies have achieved certain experimental results. But our
work is different from these studies. First of all, we mainly
take the network resource management and network security of
ICPSs as the research background, and design an algorithm to
solve these problems from the perspective of VNE. Secondly,
we focus on the constraints of computing, storage and security

of three-dimensional resources in VNE, and use RL method
as a means to improve the efﬁciency of the algorithm. In
the existing research on ICPSs resource management, VNE
algorithm is not fully used. The existing VNE algorithm
does not focus on computing, storage and security resource
constraints. Therefore, our work is innovative.

III. VNE RELATED PROBLEM DESCRIPTION

A. Network Model

Use graph theory to build mathematical models for substrate
network and virtual network. The substrate network is repre-
L}. N S refers to all substrate
sented by GS = {N S, LS, AS
N , AS
nodes and LS refers to all substrate links. AS
N represents
the collection of properties of the substrate node, including
computing resource CP U (ns), storage resource ST O(ns) and
security level SL(ns), where ns ∈ N S. AS
L represents the
substrate link attribute, including bandwidth resource BW (ls),
where ls ∈ LS.

N , AV

In the same way, the virtual network is represented by
L }. N V refers to all substrate nodes
GV = {N V , LV , AV
and LV refers to all substrate links. AV
N represents the col-
lection of properties of the virtual node, including computing
resource requirement CP U (nv), storage resource requirement
ST O(nv) and security level requirement SR(nv), where
nv ∈ N V . AV
L represents the virtual link attribute, including
the bandwidth resource requirement BW (lv), where lv ∈ LV .
i → GS,
Therefore, the VNE problem can be expressed as GV
where GV
represents one of the VNRs.
i

B. VNE Problem Description

In Figure 2, we show the schematic diagram of two VNRs
(virtual network (a) and virtual network (b)) and a substrate
network, which also shows the different embedding situations
of VNRs. For two VNRs, the numbers in brackets beside the
virtual nodes represent the computing resource requirements,
storage resource requirements and security level requirements.
The rest numbers on the virtual links represent the bandwidth
requirements of the virtual links. In substrate network (c),
the numbers in brackets represent the available computing
resources, storage resources and security level, respectively.
The rest numbers represent the available bandwidth resources.
We show two possible scenarios in which VNRs (b) are
embedded in the substrate network. Virtual node d may be
embedded in substrate node D or H. Obviously, embedding the
substrate node D will take up more link bandwidth resources.
In the underlying network, the available node resources can

be deﬁned as the current remaining resources, as follows:

RCP U (ns) = CP U (ns) −

|V N R|
(cid:88)

i=1,nv→ns

CP U (nv

i ),

(1)

where RCP U (ns) represents the computing resources available
or called remaining resources for the substrate node ns.
(cid:80)|V N R|
i ) represents the total amount of CPU
resources occupied by virtual nodes embedded on substrate

i=1,nv→ns CP U (nv

IEEE INTERNET OF THINGS JOURNAL

4

The above two formulas clarify the computing resource

constraints and storage resource constraints of VNE.

SL(ns) ≥ SR(nv).

(7)

The above formula clariﬁes the security constraints of
VNE. This security constraint is mainly reﬂected in the node
embedding stage, i.e., the security of substrate node ns must
meet the minimum security level requirements of virtual node
nv.

|N V |
(cid:88)

i=1

num(lv

i → ls) ≥ 1,

(8)

indicates indicates that virtual path segmentation may occur
in the link embedding stage.

RBW (ls) ≥ BW (lv),

(9)

Figure 2: Substrate network model, virtual network model and
possible embedding examples.

represents the bandwidth resource constraints of the link
embedding stage.

node ns, where the virtual node nv
VNRs.

i comes from different

RST O(ns) = ST O(ns) −

|V N R|
(cid:88)

i=1,nv→ns

ST O(nv

i ),

(2)

i=1,nv→ns ST O(nv

where RST O(ns) represents the remaining storage resources
of the substrate node ns. (cid:80)|V N R|
i ) represents
the amount of storage resources occupied by virtual nodes
embedded on ns, where the virtual node nv
i comes from
different VNRs.
Similarly,

the current available or remaining bandwidth
resources of the substrate link ls can be expressed as follows.

C. Evaluating Indicator

The ultimate goal of VNE is to receive as many VNRs
as possible and to obtain greater beneﬁts of VNE. In order
to judge whether a VNE algorithm can achieve the above
mentioned excellent performance, some evaluation indexes are
usually set up for the algorithm. In the VNE algorithm with
computing, storage resources and security constraints, we use
three indicators: long-term average revenue, the rate of receiv-
ing VNRs and the ratio of long-term revenue consumption to
evaluate the algorithm [49]. For this, we need to make the
following deﬁnitions.

VNE revenue is the revenue obtained by InPs for providing

resource services, deﬁned as:

RBW (ls) = BW (ls) −

|V N R|
(cid:88)

i=1,lv→ls

BW (lv

i ),

(3)

R(GV ) =

|N V |
(cid:88)

[CP U (nv

i ) + ST O(nv

i )] +

|LV |
(cid:88)

BW (lv

j ),

i=1

j=1

i=1,lv→ls BW (lv

where (cid:80)|V N R|
i ) represents the bandwidth resource
occupied by the virtual links embedded on the physical link
ls. The symbol lv → ls represents the collection of all virtual
links lv mapped to the substrate link, where virtual links lv
i
can come from the same VNR.

The restrictive constraints that

the VNE problem must

follow are as follows.

i ) + ST O(nv

(10)
where CP U (nv
i ) represents the computing re-
sources and storage resources occupied by the virtual node
nv
i . BW (lv
j ) represents the bandwidth resource occupied by
the virtual link lv
i .

The cost consumed by InPs to provide resource services is

deﬁned as follows:

|N V |
(cid:88)

i=1

num(nv

i → ns) = 1,

(4)

C(GV ) =

i=1

|N V |
(cid:88)

[CP U (nv

i ) + ST O(nv

i )] +

|LV |
(cid:88)

|LS |
(cid:88)

BW (lvs

jk),

j=1

k=1

indicates that a virtual node nv can only be embedded on one
substrate node ns.

RCP U (ns) ≥ CP U (nv).

RST O(ns) ≥ ST O(nv).

(5)

(6)

i ) + ST O(nv

(11)
where CP U (nv
i ) represents the computing and
storage resources consumed by a virtual node nv
i after suc-
cessful mapping. BW (lvs
jk) represents the cost of bandwidth
occupied by lvs
jk with link splitting. Virtual link splitting will
cause more physical bandwidth consumption, and the cost of
VNE will increase.

abcdeAEBCDFHG20712178677598168895397806675(18,22,2)(7,23,1)(10,13,3)(26,9,0)(5,29,1)(78,80,2)(59,88,3)(98,83,3)(65,60,1)(73,77,3)(92,81,2)(82,67,3)(57,60,1)abcded(a)(b)(c)IEEE INTERNET OF THINGS JOURNAL

5

With the expression methods of revenue and cost, the long-

term average revenue of VNE is deﬁned as:

AR = lim
T →∞

(cid:80)T

t=0 R(GV , t)
T

.

(12)

The ratio of long-term revenue consumption is deﬁned as:

a substrate node and other mapped substrate nodes.
When this node is selected for mapping, some bandwidth
resources can be saved because it is close to other nodes.
The FloydWarshall algorithm is used to calculate the
distances to other nodes [50]. The attribute is shown as
follows:

RC = lim
T →∞

(cid:80)T

(cid:80)T

t=0 R(GV , t)
t=0 C(GV , t)

.

(13)

AV G DST (ns) =

(cid:80)|N S |

i=1,ns

i ∈N S dis(ns, ns
i )
count + 1

(15)

,

The VNR acceptance rate is deﬁned as:

ACC = lim
T →∞

(cid:80)T

t=0 acc(GV , t)
t=0 arrive(GV , t)

(cid:80)T

,

(14)

where acc(GV , t) represents the number of successfully em-
bedded VNRs. arrive(GV , t) represents the total number of
VNRs that make resource requests to the underlying network.

IV. ALGORITHM IMPLEMENTATION

A. Attribute Extraction and Feature Matrix

Before using RL algorithm, several main elements need to
be determined. We use the basic elements of neural network
to build a four-layer policy network as the RL agent. The
action taken by the agent is the selected VNE strategy. We
use the evaluation index of VNE algorithm as reward signal.
We ﬁrst clarify the environment of agent training. In order for
the agent to fully learn the complex situation of the underlying
network, it is necessary to train the agent in the most realistic
network environment. A natural idea is to express the features
of the underlying network and normalize these features as an
environment for agent training. It is unrealistic to extract all
the attributes of the underlying network. If plenty of attributes
are extracted, the computational complexity will increase. If
too few attributes are extracted, the representation will be
incomplete. For this purpose, we extract the following four
network features:

1) Computing resources (CPU): CPU resource is one of the
most important resources in network environment. The
richer the CPU of the substrate node is, the more virtual
nodes it can bear and the greater the probability of being
mapped by the virtual node.

2) Storage resources (STO): Storage resources can replace
bandwidth resources to a certain extent, rational use
of storage resources can release bandwidth pressure
and improve the utilization of underlying resources.
Storage resource is an important attribute of network
node, and bandwidth resource is an important attribute
of network link. Replacing bandwidth resource with
storage resource can transfer the research of network link
to the research of network node, which can effectively
reduce the complexity of algorithm.

3) Security level (SL): With the increase of IoT business,
network security should be paid attention to. An effec-
tive method is to set security level for network nodes to
ensure the security of resource scheduling.

i ∈N S dis(ns, ns

i ) is the distance from the

where (cid:80)|N S |
i=1,ns
substrate node ns to the mapped substrate node ns
i .
CPU resources and bandwidth resources should be extracted
as important network resources. In order to reduce complexity,
we use storage resources instead of bandwidth resources.
Setting the security level for network nodes is to ensure the
security of resource allocation, thereby ensuring the security
of ICPSs. The average distance to other mapped bottom nodes
can provide good link embedding options for RL agents. In
summary, the above four attributes have broad representative
signiﬁcance. After the node features are extracted, they need
to be normalized to the feature vector. For the k-th bottom
node, its feature vector is as follows:

k

vns

k), SL(ns

= (CP U (ns

k), ST O(ns

k))T .
(16)
Each substrate node has a corresponding feature vector,
which is connected in sequence to form a four-dimensional
feature matrix:

k), AV G DST (ns

Mf = [vns

1

, vns

2

, ..., vns

|N S |

].

(17)

The feature matrix can be used as the input of the policy
learns

it can ensure that

the RL agent

network, so that
sufﬁcient network features.

B. Policy Network

Artiﬁcial neural network is a common model in ML algo-
rithm. We use its elements to form a simple policy network.
Its characteristic is that knowledge or information is stored
among all levels of the network. We assume that all VNRs
follow the invariant distribution, so we use the feature matrix
extraction. The policy network is mainly divided into four
layers, as shown in Figure 3.

The ﬁrst layer is used to receive the feature matrix extracted
from the underlying network. The convolution layer is an
important part of the convolution neural network (CNN). Its
main function is to evaluate the resource properties of each
feature vector in the feature matrix. After comprehensive
consideration of the resource amount of the four attributes we
extracted, the convolution operation is performed to obtain the
available vector form of each node, which is called residual
resource vector. The calculation method is as follows:

ri = ω · vni + o,

(18)

4) Average distance of substrate nodes (AVG DST): Av-
erage distance refers to the average distance between

where ω is the kernel weight vector, vni is the feature vector
of the i-th substrate node, and o is the offset.

IEEE INTERNET OF THINGS JOURNAL

6

where α is the learning rate. reward stands for reward signal.
gs represents the magnitude of the iterative gradient.

α controls the gradient and the training speed. The large
gradient means that the action conversion range of the agent
will be very large and more high-quality solutions may be lost.
In addition, too large gradient may lead to unstable network
model and incomplete training process. If the gradient is too
small, it will lead to extremely slow training process, waste a
lot of time and reduce the efﬁciency of RL. A larger reward
signal will lead to a larger gradient. At this time, the agent
will be more sensitive and it is easy to take actions to make
itself obtain a larger reward.

In order to speed up the parameter updating process and
ensure the stability of the process, we choose batch updating
method. The speciﬁc training process of the VNE algorithm
based on RL three-dimensional resource constraints is shown
in Algorithm 1.

Algorithm 1 Training

Figure 3: Schematic diagram of policy network.

In the probability layer, we mainly use the normalized
exponential function, namely softmax function. Its function
is to normalize the gradient logarithm of the discrete proba-
bility distribution of ﬁnite terms. In our network model, the
ﬁnal output is the embedded probability of each underlying
node. The probability of the substrate nodes being mapped is
positively related to the probability. The generation basis is the
residual resource vector of each substrate node. The function
of the selection layer is to ﬁlter out the substrate nodes that
may be due to insufﬁcient resources or security level. These
nodes will not be candidate mapping nodes.

C. Training and Testing

In the training phase, whenever a VNR arrives, the policy
network will extract a feature matrix from underlying network.
Through a series of operations of the policy network, a set
of possible embedded substrate nodes and their probabilities
will be generated for each virtual node in the VNR. After
embedding all the virtual nodes, breadth ﬁrst search (BFS)
strategy is used to embed the virtual links. In the process
of training, there will be a reward problem for agent, so it
should choose a suitable standard as the reward signal. For
convenience, we use the VNE revenue consumption ratio as
the reward signal after the agent takes action. Because this
indicator can take into account the revenue and cost of the
VNE process at the same time, it can also reﬂect the utilization
of the underlying network resources. The RL agent can decide
which action to take according to the magnitude or sign of the
reward signal.

We need to set an index to express the speed of training
or the magnitude of training range, that is, gradient g. The
calculation method is as follows:

g = α · reward · gs,

(19)

Input: epochs, α, train set;
Output: network parameters;
1: parameter initialization;
2: while iteration < epochs do
3:
4:
5:
6:
7:

counter = 0;
for virtual nodes do

for V N Rs do

8:
9:
10:
11:
12:
13:

end for
BF S f or link mapping;
if virtual links then
calculate reward;

get the f eature matrix Mf ;
whether resource constraints are met;
get node probability;
computing the gradient;

reset the gradient;

else

end if
counter + +;

14:
15:
16:
17:
18:
19:
20: end while
21: return parameters;

end for
iteration + +;

The speciﬁc testing process of the VNE algorithm based
on RL three-dimensional resource constraints is shown in
Algorithm 2.

V. NUMERICAL RESULTS AND ANALYSIS

A. Experimental Environment Setting

We have listed the main experimental data settings in Table
I. The arrival of a VNR simulates the Poisson distribution
[51]. Approximately 4 VNRs arrive every 100 units of time.
The duration of each VNR follows an exponential distribution,
averaging 1,000 units of time overall. We use TensorFlow to
construct the policy network and use normal distribution to
initialize the parameters of the policy network [52]. Using
Anaconda provides a large number of dependency packages

Input LayerMfConvolution Layerv1v2vn. . .Probability LayerSelection LayerCPUnSTOnSLnAVG_DSTnCPU1STO1SL1AVG_DST1CPU2STO2SL2AVG_DST2P1P2Pn. . .C1C2Cn. . .IEEE INTERNET OF THINGS JOURNAL

7

Figure 4: Training results.

Algorithm 2 Test process
Input: test set;
Output: three evaluation indicators;

1: for V N Rs do
2:
3:
4:
5:
6:
7:

8:
9: end for

for virtual nodes do

get the f eature matrix Mf ;
node mapping based on probability;

end for
BF S f or link mapping;
all virtual nodes and links are embedded;
return(SU CCESS);

TABLE I: Parameter setting of simulation experiment.

Attribute

Value

computing resources

U[50,100]Tﬂops

storage resources

U[50,100]Mbps

security level

U[0,3]

bandwidth resources

U[50,100]Mbps

VNRs

virtual nodes

2000

U[2,10]

computing requirements

U[0,50]Tﬂops

storage requirements

U[0,50]Mbps

security requirements

U[0,3]

bandwidth requirements

U[0,50]Mbps

VNRs for training

VNRs for testing

1000

1000

for experiments. We set the learning rate to 0.005. Parameters
are automatically updated every 100 VNRs received.

B. Training Results

The training results of the above three indicators is shown
in Figure 4 respectively. At the beginning of training, since
the VNE algorithm solves the NP-hard problem, and the
parameters of the policy network are randomly initialized, so
it takes some time to adapt to the environment. Therefore,

the three indicators ﬂuctuate greatly and the performance is
unstable. After a period of training, the performance of the
three indicators is somewhat stable. This is because after
learning for a while, the agent starts to become familiar with
the environment and some actions may lead to a larger reward.
But there are also some actions that make the agent get a
smaller reward which have less impact on the agent. At the
end stage, the agent will explore moves that will give it a
bigger reward. From this stage, the effectiveness of RL begins
to show. By the end of the training period, the agent has fully
adapted to the learning environment and the policy network
performance has reached its limit. The training results of the
three indexes begin to converge gradually. The agent will get
a bigger reward for taking all three measures, so all three
indicators start to stabilize. The result is that it ﬂuctuates
around a certain value.

The above training process shows that our agent training
is effective and the policy network model can play a role.
The reason why the agent can achieve good training results
is due to the construction of the network environment. The
feature matrix we extracted can fully reﬂect the real resource
situation of substrate network, and the agent can perceive the
changes of underlying resources in real time to make optimal
decisions. Therefore, the training effect is constantly stable
and continuously optimized.

C. Test Results

In this part, we compare the algorithm for computing,
storage and security resource constraints based on RL (CSS-
RL-VNE) with three other representative algorithms. In order
to compare the fairness, it is necessary to ensure that the initial
parameter settings of several algorithms are the same. After
the experimental results are obtained, we analyze the results.
The BaseLine algorithm [53] mainly considers the con-
straints of computing resources and bandwidth resources and
sorts the nodes according to the amount of resources. The
BaseLine algorithm also uses BFS to complete the process
of embedding virtual links. The other two algorithms were
proposed in reference [42], namely TA-SVNE algorithm and
NTA-SVNE algorithm. Both of these algorithms are secure
VNE algorithms, which focus on the security performance of

(a) The performance of long-term average revenue on training set.(b)The performance of long-term revenue consumption ratio on training set.(c)The performance of VNR acceptance rate on training set.IEEE INTERNET OF THINGS JOURNAL

8

Figure 5: Testing results.

VNE. In the stage of node mapping, the degree centrality,
proximity centrality and resource capability of nodes are used
as evaluation indexes. The algorithm uses the approach ideal
sorting method to sort the importance of nodes, then maps
the virtual nodes according to the sorting results. In the link
embedding stage, the algorithm takes the bandwidth resource
requirement as the highest priority to embed the virtual link.
The method adopted is the k-shortest path ﬁrst strategy.

Our algorithm is different from them. Firstly, the above three
algorithms are all heuristic algorithms and the performance of
VNE algorithm is not optimized by means of RL. Secondly,
the above three algorithms don’t comprehensively consider the
impact of computing resources, storage resources and security
on VNE. So, our algorithm is innovative.

The experimental results is shown in Figure 5. Figure
5-(a) and Figure 5-(c) both show a downward trend over
time. This is because both metrics are related to the quantity
status of resources in the underlying network. As the VNRs
arrive, the underlying resources are consumed. The long-term
revenue consumption ratio is independent of the underlying
resource volume. Our algorithm is generally due to the other
three algorithms. The reason is that we use efﬁcient RL
algorithm. The RL agent can be efﬁciently trained in a network
environment closer to reality and take the action that beneﬁts
them the most. So the performance of CSS-RL-VNE algorithm
is better than the other algorithms. In summary, the VNE
algorithm based on intelligent learning has advantages over
the traditional heuristic VNE algorithm.

VI. SUMMARY

ICPSs and IoT are currently facing severe challenges from
resources and security. On the one hand, IoT based on the
construction of ICPSs requires a large amount of reasonable
network resource support. On the other hand, the rapid devel-
opment of IoT has also exposed very network security issues.
In order to effectively deal with these problems, we proposed
a RL algorithm based on the constraints of computing, storage
and secure three-dimensional resources from the perspective
of VNE. The essence of this algorithm is to make full use
of the excellent performance of VNE in resource schedul-
ing. By learning the important attribute characteristics of the
underlying nodes, a reasonable node mapping probability is

derived, and the node mapping is performed according to
this probability. Experimental results show the effectiveness
of CSS-RL-VNE algorithm. Accordingly, the effectiveness of
the algorithm in supporting the construction of IoT in ICPSs
is demonstrated.

REFERENCES

[1] S. Bera, S. Misra and A. V. Vasilakos, “Software-Deﬁned Networking
for Internet of Things: A Survey,” IEEE Internet of Things Journal, vol.
4, no. 6, pp. 1994-2008, Dec. 2017.

[2] M. Yang, Y. Li, D. Jin, L. Zeng, X. Wu and A. V. Vasilakos, “Software-
deﬁned and virtualized future mobile and wireless networks: A survey,”
Mobile Networks and Applications, vol. 20, no. 1, pp. 4-18, 2015.
[3] N. Kumar, R. Iqbal, S. Misra and J. J. P. C. Rodrigues, “An intelligent
approach for building a secure decentralized public key infrastructure
in vanet,” Journal of Computer & System Sciences, vol. 81, no. 6, pp.
1042-1058, Sep. 2015.

[4] S. Wang, J. Bi, J. Wu and A. V. Vasilakos, “CPHR: In-Network
Caching for Information-Centric Networking With Partitioning and
Hash-Routing,” IEEE/ACM Transactions on Networking, vol. 24, no.
5, pp. 2742-2755, Oct. 2016.

[5] D. Zeng, S. Guo, A. Barnawi, S. Yu and I. Stojmenovic, “An Improved
Stochastic Modeling of Opportunistic Routing in Vehicular CPS,” IEEE
Transactions on Computers, vol. 64, no. 7, pp. 1819-1829, Jul. 2015.

[6] Y. Qu, S. Yu, L. Gao, W. Zhou and S. Peng, “A Hybrid Privacy Protec-
tion Scheme in Cyber-Physical Social Networks,” IEEE Transactions on
Computational Social Systems, vol. 5, no. 3, pp. 773-784, Sept. 2018.
[7] B. Deng, C. Jiang, H. Yao, S. Guo and S. Zhao, “The Next Generation
Heterogeneous Satellite Communication Networks: Integration of Re-
source Management and Deep Reinforcement Learning,” IEEE Wireless
Communications, vol. 27, no. 2, pp. 105-111, Apr. 2020.

[8] S. Yu, G. Wang and W. Zhou, “Modeling malicious activities in cyber

space,” IEEE Network, vol. 29, no. 6, pp. 83-87, Nov. 2015.

[9] C. Lin, D. He, N. Kumar, K. K. R. Choo, A. Vinel and X. Huang, “Se-
curity and privacy for the internet of drones: challenges and solutions,”
IEEE Communications Magazine, vol. 56, no. 1, pp. 64-69, Jan. 2018.
[10] X. Xu, X. Zhang, M. Khan, W. Dou, S. Xun and S. Yu, “A balanced
virtual machine scheduling method for energy-performance trade-offs in
cyber-physical cloud systems,” Future Generation Computer Systems,
vol. 105, pp. 789-799, Apr. 2020.

[11] M. Huang, A. Liu, N. Neal, T. Wang and A. V. Vasilakos, “An Effective
Service-Oriented Networking Management Architecture for 5G-Enabled
Internet of Things,” Computer Networks, vol. 173, pp. 1-17, May 2020.
[12] Z. Yan, P. Zhang and A. V. Vasilakos, “A security and trust framework
for virtualized networks and software-deﬁned networking,” Security and
Communication Networks, vol. 9, no. 16, pp. 3059-3069, Nov. 2016.

[13] M. Hamdan, E. Hassan, A. Abdelaziz, A. Elhigazi, B. Mohammed, S.
Khan, A. V. Vasilakos and M. N. Marsono, ”A comprehensive survey
of load balancing techniques in software-deﬁned network,” Journal of
Network and Computer Applications, vol. 174, pp. 1-30, Jan. 2021.
[14] J. Ni, K. Zhang and A. V. Vasilakos, “Security and Privacy for Mobile
Edge Caching: Challenges and Solutions,” IEEE Wireless Communica-
tions, pp. 1-7, 2020, doi: 10.1109/MWC.001.2000329.

(a) Long-term average revenue.(b) Long-term revenue consumption ratio.(c) VNR acceptance rate.IEEE INTERNET OF THINGS JOURNAL

9

[15] J. Wang, C. Jiang, K. Zhang, X. Hou, Y. Ren and Y. Qian, “Distributed
Q-Learning Aided Heterogeneous Network Association for Energy-
Efﬁcient IIoT,” IEEE Transactions on Industrial Informatics, vol. 16,
no. 4, pp. 2756-2764, Apr. 2020.

[16] J. Du, C. Jiang, H. Zhang, Y. Ren and M. Guizani, “Auction Design and
Analysis for SDN-based Trafﬁc Ofﬂoading in Hybrid Satellite-Terrestrial
Networks,” IEEE Journal on Selected Areas in Communications, vol. 36,
no. 10, pp. 2202-2217, Oct. 2018.

[17] C. Jiang, Y. Chen, K. J. R. Liu and Y. Ren, “Renewal-Theoretical
Dynamic Spectrum Access in Cognitive Radio Network with Unknown
Primary Behavior,” IEEE Journal on Selected Areas in Communica-
tions, vol. 31, no. 3, pp. 406-416, 2013.

[18] C. Jiang, Y. Chen, Y. Gao and K. J. R. Liu, “Joint Spectrum Sensing
and Access Evolutionary Game in Cognitive Radio Networks,” IEEE
Transactions on Wireless Communications, vol. 12, no. 5, pp. 2470-
2483, 2013.

[19] X. Zhu, C. Jiang, L. Kuang, N. Ge and J. Lu, “Non-orthogonal Multiple
Access Based Integrated Terrestrial-Satellite Networks,” IEEE Journal
on Selected Areas in Communications, vol. 35, no. 10, pp. 2253-2267,
Oct. 2017.

[20] P. Zhang, C. Wang, G. S. Aujla, N. Kumar and M. Guizani, “IoV
Scenario: Implementation of a Bandwidth Aware Algorithm in Wire-
less Network Communication Mode,” IEEE Transactions on Vehicular
Technology, vol. 69, no. 12, pp. 15774-15785, Dec. 2020.

[21] S. Garg, A. Singh, S. Batra, N. Kumar and L. T. Yang, “UAV-Empowered
Edge Computing Environment for Cyber-Threat Detection in Smart
Vehicles,” IEEE Network, vol. 32, no. 3, pp. 42-51, May/Jun. 2018.
[22] Y. Qu, S. Yu, W. Zhou and Y. Tian, “GAN-Driven Personalized Spatial-
Temporal Private Data Sharing in Cyber-Physical Social Systems,” IEEE
Transactions on Network Science and Engineering, vol. 7, no. 4, pp.
2576-2586, Oct. 2020.

[23] M. Hao, W. Zhang, Y. Wang, G. Lu, F. Wang and A. V. Vasilakos, “Fine-
grained Powercap Allocation for Power-constrained Systems based on
Multi-objective Machine Learning,” IEEE Transactions on Parallel and
Distributed Systems, pp. 1-14, 2020, doi: 10.1109/TPDS.2020.3045983.
[24] G. Sun, R. Zhou, J. Sun, H. Yu and A. V. Vasilakos, “Energy-Efﬁcient
Provisioning for Service Function Chains to Support Delay-Sensitive
Applications in Network Function Virtualization,” IEEE Internet of
Things Journal, vol. 7, no. 7, pp. 6116-6131, Jul. 2020.

[25] C. Jiang and Z. Li, “Decreasing Big Data Application Latency
in Satellite Link by Caching and Peer Selection,” IEEE Transac-
tions on Network Science and Engineering, pp. 1-12, 2020, doi:
10.1109/TNSE.2020.2994638.

[26] B. Bera, S. Saha, A. K. Das and A. V. Vasilakos, “Designing
Blockchain-Based Access Control Protocol
in IoT-Enabled Smart-
Grid System,” IEEE Internet of Things Journal, pp. 1-18, 2020, doi:
10.1109/JIOT.2020.3030308.

[27] S. Jangirala, A. K. Das, M. Wazid and A. V. Vasilakos, “Designing
Secure User Authentication Protocol for Big Data Collection in IoT-
Based Intelligent Transportation System,” IEEE Internet of Things
Journal, pp. 1-18, 2020, doi: 10.1109/JIOT.2020.3040938.

[28] L. Wang, C. Zhang, Z. Luo, C. Liu, J. Liu, X. Zheng and A. V. Vasilakos,
“Progressive Defense Against Adversarial Attacks for Deep Learning as
a Service in Internet of Things,” CoRR abs/2010.11143, Oct. 2020.
[29] J. Wang, C. Jiang, H. Zhang, Y. Ren, K-C. Chen and L. Hanzo, “Thirty
Years of Machine Learning: The Road to Pareto-Optimal Wireless
Networks,” IEEE Communications Surveys & Tutorials, vol. 22, no. 3,
pp. 1472-1514, Jul. 2020.

[30] S. Wang, J. Bi, J. Wu, A. V. Vasilakos and Q. Fan, “VNE-TD: A virtual
network embedding algorithm based on temporal-difference learning,”
Computer Networks, vol. 161, pp. 251-263, Oct. 2019.

[31] A. K. Das, M. Wazid, N. Kumar, A. V. Vasilakos and J. J. P. C.
Rodrigues, “Biometrics-based privacy-preserving user authentication
scheme for cloud-based industrial internet of things deployment,” IEEE
Internet of Things Journal, vol. 5, no. 6, pp. 4900-4913, Dec. 2019.

[32] Y. Zhou, F. R. Yu, J. Chen and Y. Kuo, “Robust Energy-Efﬁcient
Resource Allocation for IoT-Powered Cyber-Physical-Social Smart Sys-
tems With Virtualization,” IEEE Internet of Things Journal, vol. 6, no.
2, pp. 2413-2426, Apr. 2019.

[33] F. Rosenthal and U. D. Hanebeck, “A Control Approach for Cooperative
Sharing of Network Resources in Cyber-Physical Systems,” 2019 IEEE
International Conference on Industrial Cyber Physical Systems (ICPS),
Taipei, Taiwan, pp. 361-367, 2019.

[34] D. Cogliati, M. Falchetto, D. Pau, M. Roveri and G. Viscardi, “Intelligent
Cyber-Physical Systems for Industry 4.0,” 2018 First International
Conference on Artiﬁcial Intelligence for Industries (AI4I), Laguna Hills,
CA, USA, pp. 19-22, 2018.

[35] F. Farivar, M. S. Haghighi, A. Jolfaei and M. Alazab, “Artiﬁcial
Intelligence for Detection, Estimation, and Compensation of Malicious
Attacks in Nonlinear Cyber-Physical Systems and Industrial IoT,” IEEE
Transactions on Industrial Informatics, vol. 16, no. 4, pp. 2716-2725,
Apr. 2020.

[36] Z. Shu, J. Wang, L. Di, J. Lin, A. V. Vasilakos and M. Imran, “Security
in software-deﬁned networking: Threats and countermeasures,” Mobile
Networks and Applications, vol.21, no. 5, pp. 764-776, Oct. 2016.
[37] A. Jindal, G. S. Aujla and N. Kumar, “Survivor: a blockchain based
edge-as-a-service framework for secure energy trading in sdn-enabled
vehicle-to-grid environment,” Computer Networks, vol. 153, pp. 36-48,
Apr. 2019.

[38] D. He, M. Ma, S. Zeadall, N. Kumar and K. Liang, “Certiﬁcateless
public key authenticated encryption with keyword search for industrial
internet of things,” IEEE Transactions on Industrial Informatics, vol.
14, no. 8, pp. 3618-3627, Aug. 2018.

[39] P. Zhang, H. Yao and Y. Liu, “Virtual Network Embedding Based on
Computing, Network, and Storage Resource Constraints,” IEEE Internet
of Things Journal, vol. 5, no. 5, pp. 3298-3304, Oct. 2018.

[40] C. Jiang and X. Zhu, “Reinforcement Learning Based Capacity Manage-
ment in Multi-layer Satellite Networks,” IEEE Transactions on Wireless
Communications, vol. 19, no. 7, pp. 4685-4699, Jul. 2020.

[41] X. Liu, B. Wang, S. Liu, Z. Yang and Z. Zhao, “Heuristic algorithm for
secure virtual network embedding,” Systems Engineering and Electron-
ics, vol. 40, no. 3, pp. 676-681, Mar. 2018.

[42] S. Gong, J. Chen, C. Huang and Q. Zhu, “Trust-aware secure virtual
network embedding algorithm,” Journal on Communications, vol. 36,
no. 11, pp. 1-10, Nov. 2015.

[43] C. Wang, F. Zheng, S. Peng, Z. Tian, Y. Guo and Y. Yuan, “A
Coordinated Two-Stages Virtual Network Embedding Algorithm Based
on Reinforcement Learning,” 2019 Seventh International Conference on
Advanced Cloud and Big Data (CBD), Suzhou, China, pp. 43-48, 2019.
[44] H. Yao, S. Ma, J. Wang, P. Zhang, C. Jiang and S. Guo, “A Continuous-
Decision Virtual Network Embedding Scheme Relying on Reinforce-
ment Learning,” IEEE Transactions on Network and Service Manage-
ment, vol. 17, no. 2, pp. 864-875, June 2020.

[45] Y. Yuan, Z. Tian, C. Wang, F. Zheng and Y. Lv, “A Q-learning-
based approach for virtual network embedding in data center,” Neural
Computing and Applications, vol. 32, no. 7, pp. 1995-2004, Apr. 2020.
[46] Z. Yan, J. Ge, Y. Wu, L. Li and T. Li, “Automatic Virtual Network
Embedding: A Deep Reinforcement Learning Approach With Graph
Convolutional Networks,” IEEE Journal on Selected Areas in Commu-
nications, vol. 38, no. 6, pp. 1040-1057, June 2020.

[47] S. Haeri and L. Trajkovic, “Virtual network embedding via Monte Carlo
tree search,” IEEE transactions on cybernetics, vol. 48, no. 2, pp. 510-
521, Feb. 2018.

[48] I. Fajjari, N. Aitsaadi and G. Pujolle, “VNE-AC: Virtual Network
Embedding Algorithm Based on Ant Colony Metaheuristic,” 2011 IEEE
International Conference on Communications (ICC), Kyoto, pp. 1-6, Jun.
2011.

[49] G. Sun, Z. Xu, H. Yu, X. Chen, V. Chang and A. V. Vasilakos, “Low-
Latency and Resource-Efﬁcient Service Function Chaining Orchestration
in Network Function Virtualization,” IEEE Internet of Things Journal,
vol. 7, no. 7, pp. 5760-5772, Jul. 2020.

[50] S. Hougardy, “The FloydWarshall algorithm on graphs with negative
cycles,” Inf. Process. Lett, vol. 110, no. 8, pp. 279-281, Apr. 2010.
[51] P. Zhang, “Virtual network embedding using node multiple metrics based
on simpliﬁed ELECTRE method,” IEEE Access, vol. 6, pp. 37314-
37327, Jun. 2018.

[52] F. Ertam and G. Aydın, “Data classiﬁcation with deep learning using
Tensorﬂow,” 2017 International Conference on Computer Science and
Engineering (UBMK), Antalya, pp. 755-758, Oct. 2017.

[53] M. Yu, Y. Yi, J. Rexford and M. Chiang, “Rethinking virtual network
embedding: substrate support for path splitting and migration,” ACM
Sigcomm Comput. Commun, vol. 38, no. 2, pp. 17-29, Apr. 2008.

BIOGRAPHIES

IEEE INTERNET OF THINGS JOURNAL

10

Peiying Zhang is currently an Associate Profes-
sor with the College of Science and Technology,
China University of Petroleum (East China). He is
a Ph.D. candidate in Information and Communica-
tion Engineering, from the State Key Laboratory of
Networking and Switching Technology in Beijing
University of Posts and Telecommunications. His
research interests include semantic computing, deep
learning, network virtualization and future network
architecture.

Chao Wang is a graduate student in the College
of Science and Technology, China university of
petroleum (East China). His research interests in-
clude network virtualization and network artiﬁcial
intelligence.

Neeraj Kumar received his Ph.D. in CSE from Shri
Mata Vaishno Devi University, Katra (Jammu and
Kashmir), India in 2009, and was a postdoctoral
research fellow in Coventry University, Coventry,
UK. He is a full Professor in the Department of
Computer Science and Engineering, Thapar Insti-
tute of Engineering and Technology (Deemed to be
University), Patiala (Pb.), India. He has published
more than 300 technical research papers in top-
cited journals such as IEEE TKDE, IEEE TIE, IEEE
TDSC, IEEE TITS, IEEE TCE, IEEE TII, IEEE
TVT, IEEE ITS, IEEE SG, IEEE Netw., IEEE Comm., IEEE WC, IEEE
IoTJ, IEEE SJ, Computer Networks, Information sciences, FGCS, JNCA,
JPDC and ComCom. He has guided many research scholars leading to Ph.D.
and M.E./M.Tech. His research is supported by funding from UGC, DST,
CSIR, and TCS. He is an Associate Technical Editor of IEEE Communication
Magazine, IEEE Network Magazine. He is an Associate Editor of IJCS,
Wiley, JNCA, Elsevier, Elsevier Computer Communications, and Security and
Communication, Wiley. He has been a guest editor of various International
Journals of repute such as - IEEE Access, IEEE Communication Magazine,
IEEE Network Magazine, Computer Networks, Elsevier, Future Generation
Computer Systems, Elsevier, Journal of Medical Systems. Springer, Computer
and Electrical Engineering, Elsevier, Mobile Information Systems, Interna-
tional Journal of Ad hoc and Ubiquitous Computing, Telecommunication
Systems, Springer and Journal of Supercomputing, Springer. He has been a
workshop chair at IEEE Globecom 2018 and IEEE ICC 2019 and TPC Chair
and member for various International conferences. He is senior member of
the IEEE. He has more than 6200 citations to his credit with current h-index
of 42. He has won the best papers award from IEEE Systems Journal and ICC
2018, Kansas city in 2018. He has edited more than 10 journals special issues
of repute and published four books from CRC, Springer, IET UK, and BPB
publications. He is visiting research fellow at Coventry University, Newcastle
University, UK.

Qinghua Lu is a senior research scientist at CSIRO,
Australia. She is also a conjoint senior lecturer at
University of New South Wales (UNSW). Before
she joined CSIRO, she was an associate professor
at China University of Petroleum. She formerly
worked as a researcher at NICTA (National ICT
Australia). She received her Ph.D. from Univer-
sity of New South Wales in 2013. Her research
interest includes architecture design of blockchain
applications, blockchain as a service, model-driven
development of blockchain applications, reliability
of cloud computing, and service engineering. She has published more than
70 peer-reviewed academic papers in international journals and conferences.
She has served as an editor or reviewer for many journals and as a PC member
for a number of international conferences and workshops in the blockchain,
cloud computing, big data and software engineering community.

Chunxiao Jiang is an Associate Professor in School
of Information Science and Technology, Tsinghua
University. He received the B.S. degree in informa-
tion engineering from Beihang University, Beijing in
2008 and the Ph.D. degree in electronic engineering
from Tsinghua University, Beijing in 2013, both
with the highest honors. His research interests in-
clude application of game theory, optimization, and
statistical theories to communication, networking,
and resource allocation problems, in particular space
networks and heterogeneous networks. Dr. Jiang has
served as an Editor of IEEE Internet of Things Journal, IEEE Network,
IEEE Communications Letters, and a Guest Editor of IEEE Communications
Magazine, IEEE Transactions on Network Science and Engineering, and
IEEE Transactions on Cognitive Communications and Networking. He has
also served as a member of the technical program committee as well as
the Symposium Chair for a number of international conferences, including
IEEE ICC 2018 Symposium Co-Chair, IWCMC 2018/2019 Symposium Chair,
WiMob 2018 Publicity Chair, ICCC 2018 Workshop Co-Chair, and ICC
2017 Workshop Co-Chair. Dr. Jiang is the recipient of the Best Paper Award
from IEEE GLOBECOM in 2013, the Best Student Paper Award from IEEE
GlobalSIP in 2015, IEEE Communications Society Young Author Best Paper
Award in 2017, the Best Paper Award IWCMC in 2017, IEEE ComSoc TC
Best Journal Paper Award of the IEEE ComSoc TC on Green Communications
& Computing 2018, IEEE ComSoc TC Best Journal Paper Award of the IEEE
ComSoc TC on Communications Systems Integration and Modeling 2018, the
Best Paper Award ICC 2019.

