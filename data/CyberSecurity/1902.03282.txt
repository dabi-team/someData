A Light-Weight Authentication Scheme for Air
Force Internet of Things

Xi Hang Cao and Xiaojiang Du
Department of Computer & Information Sciences
Temple University
Philadelphia, PA, USA
{xi.hang.cao, dux}@temple.edu

E. Paul Ratazzi
Air Force Research Laboratory Information Directorate
Rome, NY, USA
edward.ratazzi@us.af.mil

9
1
0
2

b
e
F
8

]

R
C
.
s
c
[

1
v
2
8
2
3
0
.
2
0
9
1
:
v
i
X
r
a

Abstract—Internet of Things (IoT)

is ubiquitous because
of its broad applications and the advance in communication
technologies. The capabilities of IoT also enable its important
role in homeland security and tactical missions, including Re-
connaissance, Intelligence, Surveillance, and Target Acquisition
(RISTA). IoT security becomes the most critical issue before
its extensive use in military operations. While the majority of
research focuses on smart IoT devices, treatments for legacy
dumb network-ready devices are lacking; moreover, IoT devices
deployed in a hostile environment are often required to be
dumb due to the strict hardware constraints, making them
highly vulnerable to cyber attacks. To mitigate the problem,
we propose a light-weight authentication scheme for dumb
IoT devices, in a case study of the UAV-sensor collaborative
RISTA missions. Our scheme utilizes the covert channels in
the physical
layer for authentications and does not request
conventional key deployments, key generations which may cause
security risks and large overhead that a dumb sensor cannot
afford. Our scheme operates on the physical layer, and thus it
is highly portable and generalizable to most commercial and
military communication protocols. We demonstrate the viability
of our scheme by building a prototype system and conducting
experiments to emulate the behaviors of UAVs and sensors in
real scenarios.

Index Terms—IoT, UAV, Authentication, Physical Layer,

Covert Channel

I. INTRODUCTION

A. The Smart Things and the Dumb Things

Internet of Things (IoT) provides us with unprecedented
opportunities [1], it also poses challenges, such as privacy
and security [2]. In general, “things” in IoT refers to devices
that are smart, meaning that they are capable of computing,
sensing, actuating, and being connected via the Internet; these
smart things can be found across our lives, from traditional
IT orientated devices [3], such as smartphones and laptop
computers, to more living orientated devices, such as smart
lights, smart appliances, and electronic personal assistance.
In a more broad sense, “things” in IoT may also include sen-
sors and actuators that equip with extremely low computing
capabilities [4]–[6], and we call these devices dumb. These
dumb things may be legacy devices in which the electronics
and designs are based on an older generation of technologies,
and these dumb things may be mission-speciﬁc devices in

DISTRIBUTION A. Approved for public release: distribution unlimited. Case
Number 88ABW-2018- 3936 20180807

which trade-offs are made between functionalities and special
mission requirements, such as low-power consumption, tiny
size, etc. In addition to the traditional IoT security challenges
in the scenarios of only smart things, the security challenges
in the scenarios of both smart things and dumb things are
considerably more critical and difﬁcult to overcome, due to
that the lack of computational capability in the dumb things
makes conventional security strategies (e.g., key generation
[7], [8], key management [9]–[12], etc.) inapplicable. In this
study, we aim to tackle the challenge in the latter scenario in
which we propose a light-weight authentication strategy for
dumb authenticators.

B. IoT in the Air Force and Our Use Case

As the technologies encapsulated in the realm of the IoT
have become mature, the US military, especially the Air Force
(AF), has identiﬁed the tremendous application potentials of
the IoT in operations and missions. The paradigm of IoT
has been adopted in different areas. In addition to the IoT
applications in the commercial and civilian domains, the IoT
adoption in the AF also spans its applications in the battleﬁeld
and tactical environments.

A typical use case in the RISTA missions is shown in Fig. 1
[13] where a general architecture of UAV-sensor network
system is demonstrated. Usually, this use case appears in
the air-ground cooperative surveillance operations [14]. A
collection of small, low-powered, low-memory sensors reside
at distributed geo-locations. These sensors operate in two
modes: a sensing mode and a transmission mode. In the
sensing mode (low energy consumption), sensors make envi-
ronmental measurements and write the data into memory; in
the transmission mode (high energy consumption), the sensors
activate the link to the UAV and transmit the stored data.
The transmission mode is activated by beacons when a UAV
ﬂies above them, and the transmission is carried on as the
UAVs maintain an effective communication distance. Because
of this data collecting process, sensors can preserve energy by
avoiding constant data transmission which may cause high
energy consumptions; adequate frequent data transmissions
are required to prevent data loss due to memory cycling. The
UAV performs as a data transmission relay or a data fusion

 
 
 
 
 
 
frequency domain, and wavelet domain. Time domain features
(also called radiometric) include amplitude, phase, and other
more complex feature that usually by comparing the obtained
waveform to a reference/ideal waveform, for example, clock
skew variation [20], transient properties [21], waveform accu-
racy [22], etc. Frequency domain features are usually obtained
by applying Fourier transform to the waveform. For enhancing
the identiﬁcation power, combinations of the feature are used.

B. Authentications Using Covert Channels

There has been research about covert channels in wireless
communications,
in both design and detection. Usually, a
covert channel is any communication channel that can be
exploited by a process to transfer information in such a way
that breaks a system’s security policy [23]; therefore, a covert
channel poses challenges in information security. For more
efﬁcient detections, one has to explore the possible covert
channel, so there had been many covert channel designs
proposed. Many of them can be categorized into either storage
covert channel [24], [25] or timing covert channels [26]. In a
storage covert channel, the covert message is encoded into a
particular portion of the legitimate trafﬁc; in a timing covert
channel, a covert message is inserted by manipulating the
typical time-based properties of the system, such as CPU
time and inter-packet delay [27]. Some recently proposed
covert channels have explored other perspectives of the com-
munication system, for example, power [28], radio waveform
[29], and modulation schemes [30]. Our approach for UAV
authentication is similar to covert channel communication, in
the sense that the information transmitted is “hidden” within a
medium. In our approach, the information of the secret pattern
is hidden within the transmission power, frequency/channel,
and beacon interval, which we call physical
layer covert
channels.

A. System Model

III. MODELS

In our system, we consider two types of devices. One type
is called smart device, which is capable for rigorous tasks,
such as computing, communicating, and actuating; in our use
scenario, this type of device refers to the UAVs for collecting
data from the ﬁeld. Another type is called dumb device,
whose capability is limited by electronic design and mission
requirements. For power sustainability, in the majority of the
time, dumb devices operate in a low-power consumption mode
for environmental sensing and data recording. Once activated,
they will operate in the data transmission mode, in which
the dumb devices transmit their stored data to an authorized
party and clear their memory for the coming record cycle. The
schematic of the possible mutual authentication is shown in
Fig. 2. When the authenticator is a smart device, we have the
ﬂexibility to adopt conventional IoT security strategies [31].
The challenges lie in the cases that the authenticator is a dumb
device which is not compatible with conventional strategies
(e.g., key-based schemes). Our proposed approach focuses on
the case in which a dumb authenticator authenticates a smart

the air-ground collaborative
Fig. 1: A demonstration of
surveillance operation, in which UAVs are the platforms to
collect and process the data obtained from the ground sensors.
In a battleﬁeld or hostile environment, adversarial UAVs and
sensors are expected. Therefore, an effective authentication
scheme is crucial for mission success.

platform to overcome communication and data transmission
problems caused by distance and blockages.

C. Contributions

We propose an approach which is based on covert channels
in the physical layer. Speciﬁcally, we encode secret patterns
within the physical layer controllable parameters, including,
transmission power level, transmission frequency, and beacon
intervals. These physical layer covert channels are incredibly
portable and generalizable to various commercial and military
communication standards and are simple and effective enough
that will not cause computational overhead and thus suitable
for dumb authenticators. More details of our approach can be
found in Section IV.

II. RELATED WORKS

Our authentication scheme combines the advantages of two
ideas: physical layer ﬁngerprints and covert channels. In this
section, we brieﬂy review some state-of-the-art works in this
two research areas.

A. Related works in Authentications Using Physical Layer
Fingerprints

It has been demonstrated by many previous studies that
by utilizing the uniqueness of the physical layer features,
RF/wireless devices can be identiﬁed with high accuracy;
for example, RFID device identiﬁcations [15] and transmitter
identiﬁcations [16]. Moreover, the physical layer ﬁngerprint
(or speciﬁcally, radio frequency ﬁngerprint, RFF) has been
used in wireless security [17], including, authentication [18]
is notable that some of
and intrusion detection [19]. It
the previous works focused on devices with some speciﬁc
components, so those features are not generalizable to many
applications. Usually, features are extracted from time domain,

that even without speciﬁc electronic components, the dumb
authenticators can still detect them; in addition, these physical
parameters can be used as covert channels, such that without
knowing them a priori, one cannot discover these covert chan-
nels entirely and easily; more importantly, we utilize these
covert channels to transmit secret patterns which can only
be known by authorized parties, and this can tremendously
enhance the authentication scheme.

A. Physical Layer Controllable Parameters

a) Transmission Power (Txpower) and Received Signal
Strength Intensity (RSSI): In wireless communications, trans-
mission power (txpower) is the amount of energy used when
a transmitter emits the radio wave; the level of txpower is
usually affected by the magnitude, frequency, and modulation
scheme based on a communication protocol. Usually,
the
RSSI of a speciﬁc txpower, follows an exponentially decaying
curve as the distance between the transmitter and receiver
increases. Although insigniﬁcant, the RSSI of a txpower can
be affected by factors of multipath, shadowing, and path loss
[33]. Because of the noisy nature of the RSSI, while we use
txpower as a covert channel, we will use the high and low
levels to indicate binary digits (1’s and 0’s) as the transmitted
patterns.

b) Wireless Communication Frequency/Channel (Freq):
A particular frequency spectrum is assigned to a speciﬁc wire-
less communication standard. A spectrum may be subdivided
into channels with a center frequency and bandwidth. For
example, the 802.11bg standards use the 2.4 GHz band which
sub-divided into 14 channels spaced 5 Mhz apart. In military
wireless communication standards, one can use the Link-16
standard [34], which utilize the L-band (969 - 1206 MHz). For
utilizing frequency/channel as a covert channel, a transmitter
switches the transmission frequency/channel within the band
when beacons are sent to the sensor.

c) Beacon Interval (Beacon int): In our use scenario,
dumb sensors are in sensing mode until they receive beacons
from a UAV. After the ﬁrst beacon is received, the sensors
keep learning to the following beacons and time the timings
of following beacons. The time difference between any two
consecutive beacons is deﬁned as the beacon interval. In
our covert channel,
is measured in a
the beacon interval
relative unit. Namely, we do not use absolute time (i.e.,
100 milliseconds, 200 milliseconds, etc.). Instead, we use the
interval between the ﬁrst and second beacons as a time unit,
and any following beacon intervals are integer multiples of
this time unit.

B. Covert Channels Design and Authentication Process

This section presents our covert channel design using
the aforementioned physical layer parameters and shows the
authentication process using an example. Before the sensors
are deployed, there should be several preset patterns stored
or hardcoded in the sensors’ memories, such that the sensors
can quickly match the desired covert channel patterns versus
incorrect patterns.

Fig. 2: A system model schematic depicts the various types
of authentication schemes to consider

device. The authentication between two dumb devices is not
considered in this study.

B. Threat Model

We consider a smart adversarial device (UAV), which is
trying to communicate with the dumb devices (sensors) and re-
quest the stored sensing data (the UAV on the right of Fig. 1).
The adversarial UAV sends beacons to the sensors below it
and try to activate their transmission mode; however, because
of our proposed physical layer convert channel authentication
scheme, the adversarial UAV will not pass the authentication
process, and thus, the sensors will refuse to transmit the stored
data. Adversarial parties may also place malicious sensors
into surveillance terrain to send misleading/confusing data
(as shown in Fig. 1). In this case, a legitimate UAV can
identify the malicious sensors by recognizing the abnormal
data transmission timings and unregistered physical
layer
ﬁngerprints.

Beyond the above threats, the threats from traditional In-
ternet [32] are also applicable to our used scenario. In the
following, we list the threats (their breaches of security goals):

• Message Replay (Authentication)
• Impersonation (Authentication)
• Eavesdrop (Conﬁdentiality)
• Man-In-The-Middle (Integrity, Conﬁdentiality)

IV. PROPOSED APPROACH: AUTHENTICATIONS BASED ON
PHYSICAL LAYER COVERT CHANNELS AND SECRET
COMMUNICATION PATTERNS

The constraints of hardware and the lack of computa-
tional power in dumb devices pose signiﬁcant challenges
in exploiting a wide range of existing effective physical
layer ﬁngerprints proposed in the published literature [20].
Without adequate electronic components, the dumb sensors
cannot detect the physical layer signals from other devices;
nevertheless, without advanced processing units, the dumb
sensor cannot extract the hidden features within the signals.
We proposed an authentication scheme which leverages the
primitive physical layer parameters in communication and
use these parameters as covert channels to transmit secret
patterns for dumb authenticators. Speciﬁcally, we use the
physical layer parameters: transmission power level (txpower),
transmission frequency/channel (freq), and beacon interval
(beacon int). These physical layer parameters are so primitive

(a)

(c)

(b)

(d)

Fig. 3: An example of a covert channel secret pattern and associated possible incorrect patterns. In the ﬁgures, the horizontal
direction indicates the time and the vertical direction indicates frequency/channel. (a): the correct sequence of four triplets
stored in the memory in the sensors; (b) - (d): incorrect patterns due to the unmatched txpower pattern, channel, and beacon
interval, respectively. Unmatched triplets are colored in gray

After a sensor receives the ﬁrst beacon from a UAV,
the sensor will measure the txpower, frequency/channels
switching, and beacon timings continuously (with an ade-
quately high sampling rate). Based on the observations of
these three physical layer parameters, a sequence of triplets
are generated and stored: (txpower pattern0, channel0, ),
(txpower pattern1, channel1, 1 TU), (txpower pattern2,
channel2, beacon int2),
(txpower pattern3, channel3,
beacon int3), · · · . Noting that the subscripts indicate the
order of measurements. Upon receiving the ﬁrst (0-indexed)
is not available, so the third
the beacon interval
beacon,
entry (beacon interval) in the ﬁrst
is absent, and
because we use the time difference between the ﬁrst and
second beacon as the reference of 1 time unit (TU), the third
entry (beacon interval) in the second triplet is always 1 TU.
The measurements will carry on until the desired pattern is
matched, or terminate if any incorrect triplet appears.

triplet

An example of a secret pattern consists of a sequence of
four triplets is shown in Fig. 3. The correct pattern is shown
in Fig. 3a, with four triplets: (010, 1, ), (101, 6, 1), (010,
6, 2), (101, 11, 2); Fig. 3b shows a failed case where in the
second beacon, the txpower does not match the correct pattern;
Fig. 3c shows a failed case where the second beacon is not in
the correct channel in the communication band; Fig. 3d shows
a failed case where the beacon intervals between the second
and third beacon do not match the correct value.

C. Application Layer Secret Communication Pattern for Au-
thentication

After a smart device (UAV) passes the physical layer covert
channel authentication, a connection between the smart device

and the dumb device (sensor) is established. If the dumb
device is capable, our authentication scheme has the ﬂexibility
to add an extra authentication step before the stored data are
transmitted. Speciﬁcally, the dumb device requests a secret
message in the application layer for authentication. If the
application layer message sent by the smart device matches
the secret communication pattern, the dumb device will start
transmitting the stored data; otherwise, the connection be-
tween them will be terminated immediately.

V. SECURITY ANALYSIS

In this section, we analyze the situation that under the
proposed authentication scheme, how the possible threats
listed in Section. III-B are handled:

• Message Replay (Authentication): Messages (data) sent
from the sensors are time-stamped or with unique iden-
tiﬁers; therefore, replayed messages will be ignored.
• Impersonation (Authentication): In order to obtain the
credentials in our physical layer covert channel authenti-
cation scheme, an adversarial device needs to ﬁgure out
both the types of covert channel and the covert channel
secret messages, which requires O(2nL) trials to crack,
using a brute force approach, without considering the
factors of frequency and beacon interval. The letter n
indicates the number of bits in the txpower pattern in
each triplet, and the letter L indicates the length of the
triplet sequence. Therefore, when the quantity of nL is
large (e.g., 128 or above), the secret message is extremely
difﬁcult to crack.

• Eavesdrop (Conﬁdentiality): Theoretically, the threat of
eavesdropping can be efﬁciently handled by encryption;

Channel 1Channel 6 Channel 11Txpower LOWTxpower HIGHTime1 TU2 TUs2 TUs(010, 1, )(101,6, 1)(010,6, 2)(101,11, 2). . . . . . Channel 1Channel 6 Channel 11Txpower LOWTxpower HIGHTime1 TU2 TUs2 TUs(010, 1, )(111,6, 1)(010,6, 2)(101,11, 2). . . . . . Channel 1Channel 6 Channel 11Txpower LOWTxpower HIGHTime1 TU2 TUs2 TUs(010, 1, )(101,1, 1)(010,6, 2)(101,11, 2). . . . . . Channel 1Channel 6 Channel 11Txpower LOWTxpower HIGHTime1 TU1 TUs3 TUs(010, 1, )(101,6, 1)(010,6, 1)(101,11, 3). . . . . . for example, after the transmission is activated between a
UAV and a sensor, they can establish a key for symmetric
encryption to prevent eavesdropping.

• Man-In-The-Middle (Integrity, Conﬁdentiality): When
there is no attack, a UAV and a ground sensor directly
communicate with each other using wireless. For the
Man-In-The-Middle (MITM) attack, an adversary needs
to relay messages between the UAV and sensor, which
signiﬁcantly increases the delay of the communication.
Hence, the MITM attack may be detected based on the
delay of the messages.

VI. PROTOTYPE AND PERFORMANCE EVALUATION

A. Prototype System Setup

a) Hardware: We built a prototype system consisted of
three Raspberry Pi 3 Model B boards (Fig. 4) to emulate the
use scenario in our study. Two of them were conﬁgured as
WiFi (802.11b) access points, with names Pi1 and Pi2, to
emulate the smart devices (UAVs); one of them, with name
Pi dumb, was normally conﬁgured, to emulate a dumb device
(sensor), which could connect to either of the access points
(UAVs).

b) Software: The access point functionality was realized
by using the hostapd tool. To emulate the physical layer
covert channel secret patterns, we altered the access point
settings, i.e., txpower, channel, and beacon interval, by editing
the conﬁguration ﬁle hostapd.conf. The access point settings
can be detected by the Pi dumb, running the iw wlan0 scan
command in terminal. To automate the pattern generation
and pattern detection process, we created scripts in Python
language using the time and subprocess packages.

Fig. 5: Two example triplets to show the difference of the
two access point in txpower pattern, frequency/channel, and
beacon interval

by Pi1 and Pi2. In the top penal, we can see the txpower
(RSSI) patterns. The txpower patterns generated by Pi1 and
Pi2 are 110 and 101, respectively. The second panel shows the
results returned by the scan command in the iw utility, and
we can obtain frequency/channel, beacon interval and other
information from the APs. The triplet extracted from Pi1 and
Pi2 are (110, 6, 100) and (101, 1, 200), respectively. If we
suppose Pi1 is a legitimate UAV and Pi2 is an adversarial
UAV, then the dumb sensor (Pi dumb) can easily distinguish
them.

C. The Effect of Distance on RSSI

As the distance increases, the RSSI generally follows an
exponentially decaying curve. In this experiment, we measure
the RSSI proﬁles measured by Pi dumb at different distances
as Pi1 increases the txpower from the minimum (around 7
dBm) to maximum (around 13 dBm).

a) High/Low RSSI v.s. High/Low Txpower: The ﬁrst
batch of measurements were made indoor, and the distance
was from 0.5 meters to 9.0 meters. The RSSI proﬁles of the
indoor measurements are shown in Fig.6a.

Fig. 4: A prototype system to emulate the use scenario using
three Raspberry Pi boards.

B. Extracting Triplets

Once a Raspberry Pi board is conﬁgured as an access point
(AP), it will start transmitting beacons to the environment.
Any compatible network interface card can detect the received
signal strength intensity (RSSI), frequency/channel, beacon
interval, and other parameters from the AP. These parameters
can be read by using the scan command in the iw utility or
other networking tools.

In this experiment, we create a Python script in Pi dumb
and let it automatically and continuously (with a sampling rate
of 5 Hz) to detect the wireless parameters from the two APs
(Pi1 and Pi2). Fig. 5 shows two observed triplets generated

(a) indoor

(b) outdoor

Fig. 6: The measured proﬁles of RSSI as the distance and
txpower change in different environments: (a) indoor envi-
ronment; (b) outdoor environment

We can notice that when the distance is over 3 meters,
the RSSI corresponding to the maximum txpower is lower
than the RSSI corresponding to the minimum power at 0.5
meters. Therefore, in our use scenario, as a UAV ﬂies above

Raspberry Pi “Pi1”Raspberry Pi  “Pi2”Raspberry Pi  “Pi_dumb”a sensor, the high/low pattern will be distorted by the changes
in distance. To remedy this, we can use a trick:
instead
of observing the absolute high/low pattern of an RSSI, the
sensors observe the steep transitions.

b) Maximum Operating Distance: We found that when
the distance was beyond 40 meters, Pi dumb could no longer
detect the beacons from Pi1. As shown in Fig. 6b, when
the distance was larger than 30 meters, the RSSI difference
between the maximum and the minimum txpower was too
small, such that the high/low levels or the transition may not
be correctly detected. Therefore, in order for your scheme to
operate properly in the prototype system, the Raspberry Pi
boards have to be within 30 meters. A concern may arise
because of that in our use scenario, the distance between a
UAV and a sensor may be much larger, and may never be
within 30 meters even at their closest positions. The fact is that
this maximum operating distance may vary based on the used
wireless communication standard and hardware quality. In our
use scenario, military standards may be used, and the txpower
of a UAV transmitter will be much higher than the txpower of
a Raspberry Pi transmitter; in addition, the antenna sensitivity
in a military-grade sensor will be higher than the sensitivity of
a Raspberry Pi receiver. Therefore, it is reasonable to believe
that the maximum operating distance in our use scenario will
be much larger than 30 meters.

D. Application Layer Secret Messages

After the connection between a dumb and a smart device
is established, an additional authentication step based on
application layer message may be included for an extra level
of security. If the secret message sent by the UAV is correct
(i.e., 1234567890 in the demonstrated case), data transmission
starts; otherwise, the connection will terminate immediately.

VII. CONCLUSIONS

In this paper, we designed a light-weight authentication
scheme based on physical layer covert channels. Our scheme
tackles the challenges in the IoT scenarios where both smart
and dumb devices are present, for example, the air-ground
collaborative reconnaissance, intelligence, surveillance, and
target acquisition (RISTA) operations with capable UAVs and
mission-speciﬁc (legacy or dumb) sensors. We conducted a
rigorous security analysis and built a prototype system to
demonstrate that the proposed scheme is effective, portable,
and generalizable to real scenarios.

REFERENCES

[1] J. Gubbi, R. Buyya, S. Marusic, and M. Palaniswami, “Internet of things
(iot): A vision, architectural elements, and future directions,” Future
generation computer systems, vol. 29, no. 7, pp. 1645–1660, 2013.
[2] D. Miorandi, S. Sicari, F. De Pellegrini, and I. Chlamtac, “Internet of
things: Vision, applications and research challenges,” Ad hoc networks,
vol. 10, no. 7, pp. 1497–1516, 2012.

[3] X. Du and D. Wu, “Adaptive cell relay routing protocol for mobile ad
hoc networks,” IEEE Transactions on Vehicular Technology, vol. 55,
no. 1, pp. 278–285, 2006.

[4] L. Atzori, A. Iera, and G. Morabito, “The internet of things: A survey,”

Computer networks, vol. 54, no. 15, pp. 2787–2805, 2010.

[5] X. Du and F. Lin, “Designing efﬁcient routing protocol for heteroge-
neous sensor networks,” in Performance, Computing, and Communica-
tions Conference, 2005. IPCCC 2005. 24th IEEE International.
IEEE,
2005, pp. 51–58.

[6] D. Mandala, X. Du, F. Dai, and C. You, “Load balance and energy
efﬁcient data gathering in wireless sensor networks,” Wireless Commu-
nications and Mobile Computing, vol. 8, no. 5, pp. 645–659, 2008.
[7] X. Du and H.-H. Chen, “Security in wireless sensor networks,” IEEE

Wireless Communications, vol. 15, no. 4, 2008.

[8] X. Du, “Qos routing based on multi-class nodes for mobile ad hoc

networks,” Ad Hoc Networks, vol. 2, no. 3, pp. 241–254, 2004.

[9] X. Du, M. Guizani, Y. Xiao, and H.-H. Chen, “A routing-driven elliptic
curve cryptography based key management scheme for heterogeneous
sensor networks,” IEEE Transactions on Wireless Communications,
vol. 8, no. 3, pp. 1223–1229, 2009.

[10] Y. Xiao, V. K. Rayi, B. Sun, X. Du, F. Hu, and M. Galloway, “A survey
of key management schemes in wireless sensor networks,” Computer
communications, vol. 30, no. 11-12, pp. 2314–2341, 2007.

[11] Y. Xiao, X. Du, J. Zhang, F. Hu, and S. Guizani, “Internet protocol
television (iptv): the killer application for the next-generation internet,”
IEEE Communications Magazine, vol. 45, no. 11, pp. 126–134, 2007.
[12] X. Du, Y. Xiao, M. Guizani, and H.-H. Chen, “An effective key
management scheme for heterogeneous sensor networks,” Ad Hoc
Networks, vol. 5, no. 1, pp. 24–34, 2007.

[13] D.-T. Ho, J. Park, and S. Shimamoto, “Performance evaluation of the
pfsc based mac protocol for wsn employing uav in rician fading,” in
Wireless Communications and Networking Conference (WCNC), 2011
IEEE.

IEEE, 2011, pp. 55–60.

[14] B. Grocholsky, J. Keller, V. Kumar, and G. Pappas, “Cooperative air and
ground surveillance,” IEEE Robotics & Automation Magazine, vol. 13,
no. 3, pp. 16–25, 2006.

[15] B. Danev, T. S. Heydt-Benjamin, and S. Capkun, “Physical-layer
identiﬁcation of rﬁd devices.” in Usenix Security Symposium, 2009, pp.
199–214.

[16] M.-W. Liu and J. F. Doherty, “Speciﬁc emitter identiﬁcation using
nonlinear device estimation,” in Sarnoff Symposium, 2008 IEEE.
IEEE,
2008, pp. 1–5.

[17] Q. Xu, R. Zheng, W. Saad, and Z. Han, “Device ﬁngerprinting in wire-
less networks: Challenges and opportunities,” IEEE Communications
Surveys & Tutorials, vol. 18, no. 1, pp. 94–104, 2016.

[18] L. Xiao, L. J. Greenstein, N. B. Mandayam, and W. Trappe, “Using
the physical layer for wireless authentication in time-variant channels,”
IEEE Transactions on Wireless Communications, vol. 7, no. 7, 2008.

[19] J. Hall, M. Barbeau, and E. Kranakis, “Radio frequency ﬁngerprinting
for intrusion detection in wireless networks,” IEEE Transactions on
Defendable and Secure Computing, vol. 12, pp. 1–35, 2005.

[20] T. Kohno, A. Broido, and K. C. Claffy, “Remote physical device ﬁn-
gerprinting,” IEEE Transactions on Dependable and Secure Computing,
vol. 2, no. 2, pp. 93–108, 2005.

[21] J. Hall, Detection of rogue devices in wireless networks.

Citeseer,

2006.

[22] R. M. Gerdes, T. E. Daniels, M. Mina, and S. Russell, “Device identi-
ﬁcation via analog signal ﬁngerprinting: A matched ﬁlter approach.” in
NDSS, 2006.

[23] B. W. Lampson, “A note on the conﬁnement problem,” Communications

of the ACM, vol. 16, no. 10, pp. 613–615, 1973.

[24] A. Singh and K. Manchanda, “Establishment of bit selective mode
storage covert channel in vanets,” in Computational Intelligence and
Computing Research (ICCIC), 2015 IEEE International Conference on.
IEEE, 2015, pp. 1–4.

[25] K. Denney, A. S. Uluagac, K. Akkaya, and S. Bhansali, “A novel storage
covert channel on wearable devices using status bar notiﬁcations,” in
Consumer Communications & Networking Conference (CCNC), 2016
13th IEEE Annual.
IEEE, 2016, pp. 845–848.

[26] H. Zhao and M. Chen, “Wlan covert timing channel detection,” in
IEEE, 2015,

Wireless Telecommunications Symposium (WTS), 2015.
pp. 1–5.

[27] Y. Heda and R. Shah, “Covert channel design and detection techniques:
a survey,” in Electronics, Computing and Communication Technologies
(CONECCT), 2015 IEEE International Conference on.
IEEE, 2015,
pp. 1–6.

[28] Z. Wang, L. Huang, W. Yang, and Z. He, “A classiﬁer method for
detection of covert channels over lte,” in Cyber-Enabled Distributed

Computing and Knowledge Discovery (CyberC), 2017 International
Conference on.

IEEE, 2017, pp. 454–460.

[29] M. Guri, M. Monitz, and Y. Elovici, “Usbee: air-gap covert-channel
via electromagnetic emission from usb,” in Privacy, Security and Trust
(PST), 2016 14th Annual Conference on.
IEEE, 2016, pp. 264–268.
[30] P. Cao, W. Liu, G. Liu, X. Ji, J. Zhai, and Y. Dai, “A wireless
covert channel based on constellation shaping modulation,” Security
and Communication Networks, vol. 2018, 2018.

[31] M. Conti, A. Dehghantanha, K. Franke, and S. Watson, “Internet of
things security and forensics: Challenges and opportunities,” 2018.
[32] W. Stallings, Network Security Essentials: Applications and Standards,

4/e. Pearson Education India, 2000.

[33] A. Goldsmith, Wireless communications. Cambridge university press,

2005.

[34] J. Li, Y. Zhou, and L. Lamont, “Communication architectures and
protocols for networking unmanned aerial vehicles,” in Globecom
Workshops (GC Wkshps), 2013 IEEE.

IEEE, 2013, pp. 1415–1420.

