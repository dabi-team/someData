A Survey on Threat Situation Awareness Systems:
Framework, Techniques, and Insights

Hooman Alavizadeh, Julian Jang-Jaccard, Simon Yusuf Enoch, Harith Al-Sahaf, Ian Welch, Seyit A. Camtepe,

Dong Seong Kim

1

1
2
0
2

t
c
O
9
2

]

R
C
.
s
c
[

1
v
7
4
7
5
1
.
0
1
1
2
:
v
i
X
r
a

Abstract—Cyberspace is full of uncertainty in terms of ad-
vanced and sophisticated cyber threats which are equipped with
novel approaches to learn the system and propagate themselves,
such as AI-powered threats. To debilitate these types of threats, a
modern and intelligent Cyber Situation Awareness (SA) system
need to be developed which has the ability of monitoring and
capturing various types of threats, analyzing and devising a plan
to avoid further attacks. This paper provides a comprehensive
study on the current state-of-the-art in the cyber SA to discuss
the following aspects of SA: key design principles, framework,
classiﬁcations, data collection, and analysis of the techniques,
and evaluation methods. Lastly, we highlight misconceptions,
insights and limitations of this study and suggest some future
work directions to address the limitations.

Index Terms—Cyber situation awareness, AI-powered threats,
Cyber system monitoring, Abnormal activity monitoring, Dam-
age assessment

I. INTRODUCTION

A. Motivation

Situational Awareness (SA) was ﬁrstly introduced in a
comprehensive work by Endsley in [41]. Based on Endsley
deﬁnition, an SA system consists of three main component
which are Perception, Comprehension, and Projection. This
work is considered as the main reference model for SA
research and has been widely expanded and applied in various
range of research contexts. For instance, the application of
SA on aircraft was presented in [42] which studied the SA
in aircraft pilots aiming to increase the likelihood of ﬁnding
the optimal decisions in a complex real-time situations. When
it comes to the Cyber security domain, Cyber SA may be
deﬁned as the preparation,
incorporation, processing, and
evaluation of data related to a given system to understand
the system’s environment to be able to predict and respond
accurately to potential Cyber threats against the given system
or network [17, 7]. Situation Awareness in cyber space con-
sists of three seminal aspects [17]: (i) Situation Recognition

Hooman Alavizadeh is with The Massey University, Auckland, New

Zealand, email: h.alavizadeh@massey.ac.nz

Julian Jang-Jaccard is with The Massey University, Auckland, New

Zealand, email: J.Jang-jaccard@massey.ac.nz

Simon Yusuf Enoch is with The University of Queensland, Australia, email:

sey19@uclive.ac.nz

Dong Seong Kim is with The University of Queensland, Australia, email:

dan.kim@uq.edu.au

Harith Al-Sahaf and Ian Welch are with The Victoria University of

Wellington (VUW), email: {harith.al-sahaf, Ian.Welch}@vuw.ac.nz
is with CSIRO Data61, Australia,

Seyit A. Camtepe

email:

Seyit.Camtepe@data61.csiro.au

Dong Seong Kim is with The University of Queensland, Australia, email:

dan.kim@uq.edu.au

(also called as situation perception) deals with identifying the
occurrence of an attack alongside with the type, source, and
target of the attack. This aspect involves awareness of the
collected data and information in terms of quality, truthfulness,
completeness, and freshness. (ii) Situation Comprehension
including attack impact assessment (damage assessment) for
both current and future impacts. This aspect also involves
awareness of attacker’s behavior which considers attack’s trend
and intent. Situation Comprehension aspect needs to know
about the cause of current situation. (iii) Situation Projection
including awareness of how the situation evolve and may
have further affects. A comprehensive design of SA system
would help the decision makers to be aware of the current
situation and the security posture of the system and increase
their understanding of the situation up to the decision point.
The planning and execution (of the response actions) occur
once the decision is made based on the current situation.

However, most of the current approaches in the literature
to gain cyber SA focus on the lower and abstract levels of
SA techniques such as vulnerability analysis which may use
attack graphs (AGs), alert correlation and intrusion detection
techniques [86], analyzing attack trend [106], information ﬂow
and taint analysis [94], causality analysis and forensics, dam-
age assessment [103]. However, higher SA level ranging from
SA perception to projection are still missing and performed
manually by experts which is time consuming and error-prone.
There still a lack on designing a SA systems which be able
to react to a dynamic environment by the ability to adapt
itself without the high and intensive interaction with human
or agents.

B. Major Commercial Perspective

Gartner1 raised a concern over the sheer number of alerts
generated by currently available market level threat monitoring
systems (such as IDPS). To reduce the effort required by
security analysts having to deal with isolated alerts, the use
intelligence techniques to group various alerts
of artiﬁcial
together to create a single incident or to describe a chain of
related activities has been emerged. Gartner also suggest a
requirement for deploying additional threat monitoring sen-
sors inside the network to detect threats that have bypassed
traditional controls (e.g., ﬁrewalls). Further Gartner reports
the move of many IDPS vendors deploying their services
into public cloud (i.e., IaaS) environment than organization
network ﬁrewall solutions making the cloud-based monitoring

1https://www.gartner.com/en/documents/3945589

 
 
 
 
 
 
capability even more critical. The shift
is caused by two
reasons; (1) more organizations tend to move their high-value
data and services to the cloud, and (2) take advantage of extra
layer of protection provided by cloud vendors.

The report by McAfee2 stats the potential raise of less-
skilled adversaries to have more access and broader capa-
bilities to create and weaponize deepfake (e.g., use of deep
learning with adversarial effect) content. Similarly, it predicts
that adversaries will use artiﬁcial intelligence to produce ex-
tremely realistic text, images, and videos capable of bypassing
many biometric-based user authentication mechanisms. The
report also illustrates the concern over the vulnerabilities in
Application Programming Interfaces (API) which expose to
public to allow the access into organization software platforms
and app ecosystems. The report shows that attackers tend to
shift their attack path from web app to the API as a new attack
entry point.

Symantec3 share the latest insight into global threat activity,
cyber attacker trends, and attack motivations. The annual
report warns the increasing attack through formjacking where
attackers load malicious code onto retailer’s websites to steal
shoppers’ credit card details, reporting close to 5,000 unique
websites were compromised on average every month including
Ticketmaster and British Airways. Multi-faceted attacks that
combines multiple attack techniques, such as combining link
as a smoke screen, cryptojacking, phishing, into a single attack
is on the rise to avoid detection thus a detection technique
designed to stop a single type of attack is increasingly in-
sufﬁcient. More targeted attack (e.g., spear phishing) has also
increased to inﬁltrate organizations while using intelligence to
gather as much information about the target organization.

C. Key Design Principles

The fundamental design principle for developing SA sys-
tems lies in the understanding of multiple facets of the cyber
landscape through the following key concerns:

1– What is happening: ‘What
is happening’ in SA
refers to detecting whether is any ongoing attack in
the system’s environment, or what resources have been
compromised? This also includes the impact of an attack.
However, this is a part of perception in SA, and mostly
involves automated data gathering tools and pre-process
of huge amount of gathered data. The quantity and quality
of gathered data such as Intrusion Detection System
(IDS) and Firewall
logs, vulnerability scanning tools,
anti-malware log ﬁles, etc. determine how effective the
SA can answer this question.
2– Why is it happening: ‘Why is it happening’ in
SA refers to monitoring the system’s environment using
the vulnerabilities, security holes, security alerts, to be
threats and attacks. Moreover,
aware of the potential
this item refers to the way in which the situation is
evolving, including attack tracking, attack behaviors and

2https://www.mcafee.com/blogs/other-blogs/mcafee-labs/mcafee-labs-

2020-threats-predictions-report/

3https://docs.broadcom.com/doc/istr-24-2019-en

2

strategies analysis. In this stage, more reasoning and
analysis techniques need to be heavily used.
3– What may happen in future: ‘What may happen
in future’ indicates the ability of forecasting possible
futures, along with the probabilities and anticipate dam-
age potential. It includes current situation knowledge and
the possibility of its evolution alongside with knowledge
about the behaviors of the adversaries. This question is a
part of SA projection which answers the questions such
as, what situations may be possible based on current sys-
tem components, security posture and threats. Moreover,
what possible ways are for further evolving and exploiting
current situations be exploited?

However, the main focus of this paper is to answer these
seminal questions based on the current state-of-the-art which
are related to SA monitoring. Answering these questions
can further be used by reaction and response phases which
mainly are planning, response, and prediction. The question
of whether an appropriate reaction or response can be satis-
factorily done is greatly dependent upon the SA capability to
deal with concerns 1–3.

D. Review of Existing SA Survey Papers

Some efforts have been made to understand the state-of-the-
art SA systems in cyber security realm. In here, we compare
our survey paper with the existing SA survey papers focusing
on comparing the key contributions, design, and application.
We compared our survey paper and the existing survey
papers in terms of their contributions, key design, and classi-
ﬁcation together with the following principal questions:

Q1: What are the main threats and attack behaviors in a
cyber space?
Q2: What AI techniques are more commonly explored
by AI-powered attacks that need to be captured in Cyber
situation awareness design.
Q3: How a comprehensive data collection need to be
performed to be able to capture most threats?
Q4: What are the data types and how they can be
classiﬁed to be used for situation monitoring context?
Q5: What theoretical and empirical techniques have been
used in literature to design and develop situation aware-
ness systems?
Q6: How to map the situation awareness principles in-
cluding situation perception, comprehension, and projec-
tion to a related situation from low level of understanding
to high perception level in a framework such as data
gathering, analysis, and gaining high awareness?
Q7: What are commonly used tools and prototypes that
can be used in analysis of situation awareness?
Q8: What are the speciﬁc limitations in situation aware-
ness system in each level?

Franke and Brynielsson [49] studied the systematic review
of the scientiﬁc literature on cyber situational awareness. They
reviewed and clustered 102 articles in SA context. Although
their categorization and mapping of the reviewed studies based
on their area of focus are well-studied, they did not extensively
discussed the main techniques and methods on each article

in terms of design, analyze, and development of situation
awareness system.

Leau and Manickam [96] surveyed the network security sit-
uation forecasting techniques. They categorized the techniques
into three categories: machine learning, Markov models, and
Grey theory. The authors explained each technique in details
under these categories, which is useful as a reader can under-
stand the fundamentals of each technique. However, they did
not provide the enough discussion on more possible techniques
for different attack behaviours. Moreover, their research can
not enable the readers to ﬁnd out the answers to the principal
questions Q4–Q8.

Hus´ak et al. [70] published a survey paper on situation
awareness focusing on prediction, and forecasting methods
used in cyber security. They expensively reviewed and catego-
rized the methods and techniques based on (i) discrete models
(such as attack graphs, and Markov models, and Bayesian
networks), and (ii) continuous models (such as time series and
grey models), and (iii) machine learning and data mining ap-
proaches. However, they mainly discussed situation projection
level and the basic and critical concepts of situation awareness
such data collection and pre-processing were missing in their
paper. Although this classiﬁcation covers a large portion of
literature, it misses other perspectives of SA such as imple-
mentations and tools. However, from the reader’s perspective,
it is challenging to understand the principal questions Q1–Q3
and Q7.

3

criteria such as availability, accessibility, complexity of
use, and usability for SA system.

– Section IV provides a comprehensive review and classi-
ﬁcation of the existing techniques and approaches used
to analyze cyber SA in various systems and contexts,
along with the discussions of main limitations of each
technique.

– Section V discusses the main situation awareness phases
including threat evaluation, decision making, and plan-
ning alongside with visualization leading to high-level
understanding of the system situation in the projection
level.

– Section VI discusses the insights and lessons learned from

our study and suggests future research directions.

II. MAIN THREATS AND ATTACK BEHAVIOURS

As ICT continues to evolve, so does threats and attacks
incidences. In this section, we survey the existing literature
on threats and attacks considered in SA systems. In addition,
we survey the state-of-the-art techniques on AI-based cyber-
attacks, and the techniques of monitoring such attacks. Specif-
ically, we use the MITRE ATT&CK model that groups attacks
based on adversary tactics and techniques to describe the
characteristics of the attacks. In addition, we use Microsoft’s
STRIDE threat model [33] to map the attacks with their
corresponding threats. The STRIDE threat model captures the
unique characteristics of attacks that pose a particular type of
threat.

E. Key Contributions & Scope

The main contributions of this survey paper have been

A. Threat and Attack Landscape

highlighted as follows:

– We extensively surveyed the Situational Awareness (SA)
frameworks and classiﬁed them based on three main
parts: data gathering, techniques and analysis, situation
awareness and visualization.

– We surveyed the most commonly used approaches, tech-
niques, and methodologies used in the existing literature
to develop SA systems, which embrace the theoretical
backgrounds of anomaly analysis, Artiﬁcial Intelligence
(AI), Game Theory, Machine Learning (ML), and so
forth, and highlight the limitations.

– We discussed the various application prototypes and tools
which have been used or applied to SA techniques and
systems.

– We discussed misconceptions, insights, and limitations

obtained from this extensive survey.

F. Paper Structure

This paper is organized as follows:
– Section II explains the attack and threat behaviors includ-
ing advanced and AI-based threats discussed by existing
SA studies.

– Section III surveys the main data gathering approaches
for SA systems. This section also includes explanation of
data types and data sources used for SA monitoring. Fur-
ther, we classify those types of data based on the different

The STRIDE threats model categorized threats into six
categories “Spooﬁng, Tampering, Repudiation, Information
Disclosure, Denial of Service, and Elevation of privilege”.
Spooﬁng speciﬁes when an adversary disguises by falsify-
ing data or information to gain an illegitimate advantage.
Tampering describes when an adversary modiﬁes components
to caused operations disruption. Repudiation is a threat that
identiﬁes when an adversary rejects actions because the actions
cannot be properly tracked. Information disclosure is a threat
that speciﬁes a leak conﬁdential information to the people
who are not supposed to see it. The next STRIDE threat is
Denial of Service, and it speciﬁes when valid users are denied
resources as a result of the adversary by means of exploiting
the system’s vulnerabilities (e.g., memory, bandwidth, etc).
The last STRIDE threat is the Elevation of Privilege and it
speciﬁes when an adversary gains unauthorized privileges by
exploiting the system’s weaknesses.

The ATT&CK group attacks into the following tactics:
Initial Access, Execution, Persistence, Privilege Escalation,
Defense Evasion, Credential Access, Discovery, Lateral Move-
ment, Collection, Command and Control, Exﬁltration, and
Impact. We describe the attack categories as follows, then
we provide a summary of the attack techniques used in SA
systems in Table I (grouped according to attack tactics).

– Initial Access: An adversary can use different vectors to
gain entry and foothold into a system. The initial access
is the attack technique that allows the adversary to have

initial entry to a system. This type of early-stage attack
has been considered in many SA research. Brancik and
Ghinita [23] considered an insider attack where malicious
software is planted on the organization’s computer to
allow access to other machines remotely. The malware is
expected to affect certain ﬁles before the adversary stage
an attack. As a result of the initial access, other forms
of attack tactics such as Execution, Exﬁltration, etc may
happen.

– Execution: Execution consists of injecting adversary-
controlled code into a program, remotely or locally. Exe-
cution is often linked to other attack tactics. For example,
the work in [39] presented modeling and detection of
attacks for the SA system where an adversary is able
to execute a script or command with a service control
manager as part of the lateral movement.

– Persistence: An adversary access can be lost as a result
of changes to the system (e.g., password changed, system
restart, etc). The persistence attack consists of the tech-
niques used by the adversary to continually maintain a
foothold on the system. One example of the persistence
techniques is presented by He et al. [60] for a cyber
SA system in the IoT network. In the work, He et al.
considered an adversary who is able to expand persistence
by using malware. Speciﬁcally, the attacker is able to turn
on persistence root privilege of a TV in a smart home via
an Android tablet portal.

– Privilege Escalation: An adversary can exploit system
vulnerabilities to gain permissions to a user account, or
even gain higher privileges than the normal user account.
The adversary can then utilize the newly gain account
privileges to potentially perform damages on the system.
In privilege escalation, an adversary may steal normal
user account credentials to have initial access before
escalating the user privilege to root privilege to gain full
control of the system or perform a lateral movement in
network [174, 167, 91, 60].

– Defense Evasion: are the techniques used by an adversary
to avoid detection during attacks. As a result of this
technique, an adversary can get full trust in the targeted
system. For instance, an adversary may take advantage
of vulnerable components in a web application to bypass
security rules to access a database. In addition, it may
also give the adversary the ability to remotely run system
commands and install malware. Once installed, detection
is difﬁcult as data will be highly obfuscated. Other
example includes disabling security tool, deleting registry,
etc [147, 91, 174].

– Credential Access: Credential access are the techniques
used by an adversary to steal account and passwords
credentials to achieve their objectives. Various attack
techniques such as phishing, man-in-the-middle, brute
force, network snifﬁng, etc may be employed to leak or
steal credentials from a company. This type of attack tech-
nique used in SA systems has been studies in [152, 147].
– Discovery: An adversary may perform a pre-attack pas-
sive information gathering before getting into a system.
By doing so, the adversary can gain knowledge of the

4

target system, including entry points and how to achieve
his objectives. In Table I, we show examples of discovery
techniques used in the existing SA systems. For example,
Wu et al. [162] proposed a SA mechanism based on the
analysis of big data in the smart grid. In the system, they
considered IP sweep and Mscan attack techniques to gain
knowledge of the active devices.

– Lateral Movement: An adversary can exploit a sequence
of systems and accounts to reach their objective. For
example, in a three-tier system, an adversary will have
to perform a multi-stage attack across multiple systems
and account to compromise a target in the last hierarchy.
For instance, the work in [39, 60] has considered attack
scenarios for SA systems where the adversary combines
different steps sequentially to launch an attack on a
speciﬁc target, where the outcome of one step serves as
an input to its subsequent steps.

– Collection: An adversary may use various-compromise
information gathering techniques before stealing data on
the target system, such techniques include automated
internal data collection, user email data collection, etc.
Ioannou et al. [72] showed an example adversary collec-
tion technique based on sensitive data from a database
residing on a system prior to exﬁltration. Speciﬁcally,
the adversary collects and uploads data to an adversary’s
server during exﬁltration via specially crafted malware.
– Command and Control: Adversary may establish com-
mand and control to plan, direct normal trafﬁc to control
their target. for instance, an adversary may communicate
with a commonly used open port as a means of relaying
commands and controlling compromised systems.

– Exﬁltration: involves the techniques that an adversary
employs to move or copy authorized data from a system.
Lu & Feng [105] developed a cyber SA framework for an
industrial control system for an attack, where the entire
system may have its integrity compromised by having
unauthorized commands injected into systems to create
fake events then move data to the adversary.

– Impact: An attacker can impact system availability and
integrity by manipulating or destroying its operations
using various techniques. Here, the adversary can change
the normal data route to a database in order to provide
cover for a conﬁdentiality breach. The techniques used
can also include the tampering of data [60].

B. Advanced Attacks

Adaptive (advanced) attacks are known as intelligent at-
tacks. In these types of attacks, the attackers are adaptive
to dynamically changing system conditions and external en-
vironmental conditions, as they take into consideration both
physical and cyber accessibility. These attackers also have
intelligence with regard to their resources, executing adaptive
attacks [146] that wisely manage their resource limits and
at the same time opportunistically seek to compromise an
entire system. Kaloudi and Li [81] investigated the AI-powered
cyber attacks and mapped them onto a proposed framework
with new threats including the classiﬁcation of several aspects

5

TABLE I
A REVIEW OF DIFFERENT ATTACK TECHNIQUES AND THREATS USED IN EXISTING SA SYSTEMS

Attack Tactics
(ATT&CK)

Initial Access

Execution

Privilege Escalation

Spooﬁng
trusted relationship [23]
valid account[147]
Fake event [105]

Defense Evasion

Backdoor [147]

Persistence

Credential Access

Phishing [153]

Discovery

Probing & Mscan [162]
Abnormal scan [52]
IP sweep [91]
Connections Discovery [174]

Tampering

Information Disclosure

Denial of Service

Elevation of Privileges

THREATS

spear-phishing [53]

unauthorized
write [174]

Authentication
bypass [91]

unauthorized access [174]

Defacement
[147]

credential leak[152]
Password brute force [147]

exploit execution [53]

Hijack/DoS [174]

code execution [125]
Elevation of privileges [167]
Root access[91]
User privileges[174]
Root privileges [174]

Extended privileges[60]

Reconnaissance [72]

System Service[162]

Lateral Movement

Internal spearphishing [167]

Internal spearphishing [167]

sequential attack [39]
Multi-step attacks [60]

Collection

Command and Control

Exﬁltration

Impact

Information collection [72]
information leakage [91]

data exﬁltration [52]

run command
and control for DoS [55]

have full control [125]

DoS [152, 167],
Smurf & Mailbomb [162]
DDoS [55]

and
move
install false
data[105]

Modify
ﬁles[60]

of malicious using AI during the cyber-attack life cycle. In
the following, we discuss the advanced cyber-attacks from
existing literature. AI offers signiﬁcant beneﬁts in terms of
innovation and automation in different domains. However,
cyber-criminals utilizes the AI technologies to improve their
attack strategies in conjunction with other conventional attack
techniques discussed in Section II-A. It is important for SA
systems to take into account AI-powered attacks as well as
the methods to mitigate them. However, there are only a few
works that attempt to develop SA systems taking into account
AI attacks. Jiang [77] developed an approach to improve SA
representation and learning using collective AI (path-based
embedding and graph neural network) over knowledge graphs.
Speciﬁcally, the author introduced four ideas for prediction
with collective AI for SA; prediction ensemble, data aggre-
gation, representation aggregation, and joint representation
learning. Here, we survey the state-of-the-art techniques on
AI-based cyber-attacks and then go further to map them to
the techniques used in monitoring and defending them. As a
result, this will provide decision-makers with insight into AI-
based attacks, their detection, and mitigation approach.
Attackers can utilize AI techniques to achieve attacks and in
other cases, the attackers can exploit weaknesses of the AI-
based techniques to successfully compromise a system. We
categorized the attacks based on AI-supported and adversarial
attacks. We summarize them in Table II and discuss them as
follows.

1) AI-based attacks: In this section, we discuss attacks
supported by AI, where advanced technologies are leveraged
to power cyberattacks. Hitaj et al [63] presented an approach
to generate high-quality password guesses by automatically
learning the distribution of real passwords from actual pass-
word leaks using deep learning and Generative Adversarial

Networks (GANs). Their results showed that their approach
surpasses rule-based and other ML password guessing tools,
even without any a-prior knowledge on the passwords. Sey-
mour & Tully [129] presented a program named Network
Automated Phishing and Reconnaissance which is designed to
exploit social media users based on two forms of deep learning
models; long short-term memory (LTSM) and Markov chains.
Speciﬁcally, the program targets vulnerable twitter users that
are more vulnerable to social engineering attacks by analyzing
their tweets and then based on their tweets it creates relevant
replies with a shortened obfuscated link to achieve a phishing
attack on the target. Stoecklin [135] presented an AI-powered
evasive malware tool named Deep Locker that
is able to
conceal itself in other applications until it is unlocked based on
certain trigger conditions such as geo-location, facial recog-
nition, software, and user activity. It is difﬁcult for defenders
to determine the pattern of the deep locker and hence, it is
complex to develop defense countermeasures for them [88].
Rhodes [126] provided an approach to infect multiple systems
using automated self malware propagation. The author also
described that this propagation can be achieved a large number
of systems while avoiding possible detection. Besides, other
research work showed that AI-supported attacks can achieve
faster and efﬁcient attacks [133].

2) Adversarial attacks: In this section, we discuss attacks
on ML models. Hitaj et al. [62] implemented an inference
attacks on deep neural networks in a collaborative setting. In
particular, they showed how an attacker can exploit the real-
time nature of the learning process, where an attacker deceives
a victim into releasing more accurate information on sensitive
data. In their work, they showed that a distributed, federated,
or decentralized deep learning approach can be attacked and
information (from the
the participant
thus, cannot protect

TABLE II
AI-BASED CYBER ATTACKS, THEIR TECHNIQUES AND MITIGATION

6

Category

AI-supported
attacks

Paper

[129]

[63]

[147]

[135]

Attack type
Target discovery, Automated
spear phishing
Credential access

Technique
Long short-term memor, and Markov
chains (deep learning)
Deep learning and GANs

Credential access

Deep Locker

ML algorithm (Torch-rnn)

Deep neural networks

[164]

Credential access

[117]

[15]
[129]

[88]

Credential access
(credential tweaking)

bypass AI phishing
detection systems
concealment against antivirus,
disable countermeasures,
Unlocks malicious payload

Probabilistic context-free grammars [157]
and recurrent neural network model

A generative model-based on sequence-to-
sequence learning, A discriminative model
based on word embedding techniques

Deep Neural Networks

[168]

Crowdturﬁng Attacks

Recurrent Neural Networks

Adversarial
attacks

[62]

Evasion/deception

GANs

[13]
[118]

information leak
Deception against DNNs

[145]

model extraction attack

Meta-classiﬁer
Crafting algorithm
Generic equation solving attack for models
with a logistic output layer.Path-ﬁnding
algorithm with decision trees

[68]

Defense evasion

GAN based algorithm

Detection/Mitigation
Using a detection system by incorporating the new systetic
URLs
Defenses have not implemented yet
Use AI-based password brute force algorithms to prevent
users from choosing poor new passwords
No defense is described
Dynamic personalized password policy based on user’s
personality traits [56], interpretable probabilistic password
strength meters via deep learning [120]

personalized password strength meters using NN based
word embedding techniques, password strength meters

No defense is implemented, however, the authors in [88]
recommended host-based monitoring, AI usage monitoring,
AI lock picking, etc
Using lossy transformation introduced by the RNN training
and generation cycle.
No defense is implemented but [62] have recommended:
fully homomorphic encryption [137], privacy-preserving
collaborative learning [132], differential privacy [1]
at different granularities.

improve the training phase (e.g., multilayer feedback [64] )

Rounding conﬁdences, differential privacy, ensemble
methods [145]

autoencoders to map adversarial samples to clean input data
defensive distillation [119]

Deep Neural Networks

Detection system by incorporating the new systemic URLs

training sets). Ateniese et al. [13] presented an approach to
attack ML classiﬁers and other statistical information that
can be revealed from them. The authors developed a meta-
classiﬁer that is trained to attack other ML learning classiﬁers
to retrieve sensitive information or patterns from the train-
ing set. The authors demonstrated how their approach could
obtain unauthorized participants’ information from trained
voice recognition systems, that are not captured by privacy-
preserving models or differential privacy. Papernot et al. [118]
showed how an adversary can manipulate input fed to deep
learning models that are used to infer and reveal the identity
of object/persons in a blurred image. The authors showed that
an adversary can make the model misclassify the input, thus
producing incorrect outputs. Tram`er et al. [145] presented
attacks against online services of Amazon and BigML, where
the work showed that it is possible for an adversary with
black-box access, but no prior knowledge of an ML model’s
parameters or training data to steal ML models that are based
on only predictions on input feature vectors. In addition, they
showed that the natural countermeasure of omitting conﬁdence
values from model outputs still admits potentially harmful
model extraction attacks. Hu et al. [68] proposed and generate
adversarial malware based on GAN which is able to bypass
black-box machine learning-based detection models.

However, several methods have been developed to mitigate
both AI-supported and adversarial attacks. However, it is still
challenging to implement effective countermeasures against
the attacks, as the solutions proposed are still susceptible to
other forms of attacks. Moreover, they have not been incor-
porated into SA systems. The Defense Advanced Research
Projects Agency (DARPA) has utilized deep learning and
neural networks over the past decades to develop machine-
speed defensive systems capable of detection, evaluation,

and patching vulnerabilities in real-time while probing the
attacker’s system [34]. DARPA is still working on a program
known as Cyber-Hunting at Scale (CHASE) to detect and
characterize new attack vectors, collect relevant data, and
deploy countermeasures [35]. It is a work in progress that
seeks to develop an automated tool that will overturn advanced
attackers based on both ML and cyberattack modeling tools.

III. DATA GATHERING

The capability of a powerful SA system highly related to
the quality of data collection. The system needs to collect
information about the environment which is mainly from dif-
ferent sources. Then, it can help the system to make decisions
based on the collected information and knowledge gained,
and consequently response to the threats. Data collection can
further improve the quality of knowledge to make better
decisions for the future threats.

There are various types of data sources that need to be used
for SA, we classify those types of data based on the different
criteria such as availability, accessibility, complexity of use,
and usability for SA system: dynamic, one-off, alert-based,
intelligence sharing, and raw data. Each type is detailed as
follows:

– Dynamic: This type consists of the data which are pro-
duced by vulnerability scanning tools (such as NESSUS)
or network data gathered through network topology or
conﬁguration. The data are usually updated depending
on the type of network. However, dynamic data need to
be updated frequently once the network components are
changed. Changing the network components may change
the vulnerabilities that should be captured again.

– One-off: This is usually produced by reports from experts
such as incident reports which are mostly static [45].

– Alert-based: The examples of Alert-based data are those
data produced by Intrusion Detection Systems or other
Alert-based systems like Snort, Tripwire, and so forth
[138].

– Intelligence sharing: This can be obtained through com-
munication with other parties or external
threats in-
telligence which have the information such as Open
Indicators of Compromise (OpenIOC) and the Malware
Information Sharing Platform (MISP). They usually pro-
vide updated information on recent vulnerabilities and
malware.

– Raw data: Any other raw data can be categorized in this
group such as packet snifﬁng, system log ﬁles, SNMP
traps, trafﬁc dumps, OS audit logs, ﬁrewall logs, etc
[162].

However, the data types discussed above can be gained
through various ways. We further survey how those data types
can be collected and used for SA systems which includes the
platforms, tools, and resources. Fig.1 demonstrates the multi-
level data type pyramid model for SA.

A. Honeypot

Honeypots are systems designed to deceive attackers into
believing they are interacting with a real information asset
in order to understand attacker behaviour and intentions. The
main advantage of honeypots are that they minimise false
positives because because a honeypot is not a production asset
and so no legitimate user should be accessing it. There are
some false positives caused by web crawlers or similar systems
such as network measurement tools [123].

The application of Honeypots in designing and creating SA
systems have been studies widely [16]. Honypots are used to
provide a source of accurate, timely and concise information
for SA systems. Honeypots can be used to capture large-
scale malicious activity using the trafﬁc inspection, and collect
and classify data and fed into intrusion detection system to
provide more precise perspective of the current situation of
the proposed network. Barford et al. [16] proposed a daily
network security monitoring system using honeypot to collect
the data and further classify and summarize the data to provide
ongoing SA. Thonnard and Dacier [143] leveraged malicious
Internet trafﬁc data obtained from a distributed set of honeypot
responders (i.e. honeynets) to capture time series of attacks and
further clustering of the attack patterns. Similarly, Chawda and
Patel [30] proposed a distributed honeypot system aiming to
monitor and detect new vulnerabilities.

Moreover, in [89], the authors developed a honeypot system
to acts as a malware data collector which is able to capture
self-propagating malware and monitor their activity. Sun et al.
[136] proposed a novel framework for modelling and clus-
tering attackers’ activities using the data collected by world-
wide scale honeypot. The collected data from honeypot are fed
into further analysis module which uses Bayesian probabilistic
graphical model and a graph-based clustering algorithm for
classiﬁcation of attacks and monitoring the attackers’ activi-
ties. Moreover, the application of honeypot in monitoring and
detection of botnets has been studies in the literature [100, 44].

7

Fig. 1. Multi-level data type pyramid model for SA

Internet of Things (IoT) development are exploited by the
attackers as a viable attack sources for launching various
extensive attacks through the botnets. Botnets are appropriate
attacking points to launch a wider attack range to any system
or network by exploiting the vulnerable IoT-based botnets [84].
For example, a Distributed Denial-of-Service (DDoS) attack
can be launched using compromised IoT devices (botnets) to
the cloud systems by ﬂooding trafﬁc packets from various
sources causing service interruption for users. Honypots can
help to capture malware activities launched from botnets.
In [100], the authors utilized honeypot to monitor the trafﬁc
passing through the honeypot and botnets and extract
the
malicious botnet activities. Fachkha and Debbabi [44] studied
the application of honeypots and darknet to monitor and detect
various malicious threats launched from the Internet such as
DDoS, Worms, and botnets.

B. Intelligence Sharing Platforms

SA systems need to get data related to the threats and
malicious activities. Information sharing is a an essential
process in detecting security breaches and proactively pro-
tecting information systems and infrastructures. SA data (i.e.
raw data) can be collected in both lower and higher levels,
as data is converted to abstract information. However, the
lower levels data can overwhelm decision makers’ cognitive
capacities. Indeed, relying on low level data solely is obviously
insufﬁcient for situation awareness. For creating automated SA
system, data gathering phase should use technical platforms,
tools, standards, and secure information exchange protocols
to get related data such as higher-level threat intelligence
data [174]. However, intelligence sharing tools such as Open
Indicators of Compromise (OpenIOC) and The Malware Infor-
mation Sharing Platform (MISP) or classic data sources like
CERTs and Open-Source Intelligence (OSINT) can be used
to receive those information [134]. To create a holistic SA

Multi-source dataAlert-based data - Vulnerability DBLogsIDS snortRaw datapacket snifﬁngIDS sensorsNetwork TrafﬁcsCVE DBIntelligence SharingInspectionNmapNVDIncident reportsCERTMISPThreat exchangeand sharingHighLowImportance	for	SAHighPre-processingLowFlexibilityKnowledge-basedAnalyst data martsystem, a large amount of dynamic data needs to be monitored,
reﬁned and processed at real-time. Yen et al. [169] utilized a
hypothesis-driven information gathering (called as “gathering
of evidence”) to address the challenge of processing the large
amount of dynamic data for building the SA framework.

C. Vulnerability and Network Discovery

Vulnerability scanning tools can scan network devices and
software as well as cloud infrastructure to reveal conﬁgu-
ration errors, unpatched and vulnerable devices, and known
vulnerabilities [4, 6]. SA can leverage the data collected from
vulnerability scanning tools for more analysis. For instance,
some vulnerabilities can be patched and some may need
additional countermeasures. However, to create a real-time SA
system vulnerability scanning tools should perform periodic or
continuous scanning process. Moreover, Network scanning can
be used to create SA. Network scanning can get network-based
information such as devices, platforms, operating systems,
and open ports and services, etc. which can be used for SA
monitoring system. There are various vulnerability database
and sources such as Common Vulnerabilities and Exposures
(CVE), National Vulnerability Database (NVD), OSVDB4, X-
Force5, and BugTrack6. Vulnerability database mainly includes
an unique identiﬁer, description, publishing dat, vulnerability
scoring system (such as CVSS7), and some security metrics.
Nessus, QualysGuard, MaxPatrol, OVAL, and GFI LanGuard,
are some examples of tools which have been used in the studies
to gain vulnerability information for SA systems [138].

However, network and system information such as topology,
conﬁguration, components, etc. are important in monitoring
the network’s activities based on the available components
and connectivity. Network ﬂows can be collected and be
correlated with security events. They may also be useful for
attack representation techniques such as attack trees and attack
graphs [90]. Various network discovery and mapping tools
such as Lumeta IPsonar, SteelCentral NetCollector (formerly
OPNET NetMapper), Nmap or JANASSURE are useful for SA
and have been used in studies [138]. They screen the incoming
and outgoing trafﬁc in the network and monitor crucial ﬁles
on the host operating system.

D. Network Trafﬁc Inspection

Network trafﬁc inspection have been used in many studies
the required data for creation of SA systems.
to collect
Vinayakumar et al. [152] conducted DNS data collection in a
passive manner by using using promiscuous mode and reading
the mirrored trafﬁc on DNS communication between both
DNS clients and servers. The data includes DNS queries
and the DNS answer regarding each query made by the
DNS communication between the client and DNS server.
They used the collected data such as malware propagation
and activities, the preﬁx announcements, route announcements
and updates information to identify the malicious activities.

4https://blog.osvdb.org/
5https://www.ibm.com/security/xforce
6http://www.securityfocus.com/
7https://www.ﬁrst.org/cvss (2018)

8

Moreover, Antivirus software (AVS) which are traditional
countermeasure can be used to collect data for SA creation.
Many AVS can produce log data about detected malware and
are able to generate log data about network trafﬁc which
can be utilized by SA. Wu et al. [162] conducted a data
extraction methods based on the factors and rules which
are related to the design of the proposed SA system for
smart grid. The rules of extraction were deﬁned based on the
system’s requirements. Situational factors store the security
related information and heterogeneous schemes according to
the speciﬁed format. They collected the semi-structured and
unstructured data required for SA using the basic situational
factor collection such as network ﬂow, access control oper-
ations, and device states. They performed data collocation
based on network trafﬁc inspection by inspecting Network
Management Protocol (SNMP) data ﬂows which manages
TCP/IP network communications. Some tools such as Snort,
TCPdump, Bro, Ntop, and WireShark are some examples of
network trafﬁc inspection tools which have been used in the
studies to gain network trafﬁc-based information such as log
and trafﬁc ﬂows for SA systems [138].

E. Intrusion Detection System (IDS) & Firewall Data

IDS plays an important role on monitoring the individual
devices and the system’s network trafﬁc. Various monitoring
techniques can be leveraged by IDS such as log events
monitoring and analyzing, and signature and anomaly based
systems. For instance, packets IP addresses, action sequences
(remote user logins and manipulating the critical ﬁles) can
be the examples of signature-based monitoring. However,
reference usage proﬁle is categorized as the anomaly-based
monitoring. For instance, when a normal user such as the
ofﬁce secretary uses the tools which are only used by admin
stating team, it can be considered as abnormal usage behaviour
and might be detected. Moreover, IDSs should be are able
to comprehensively monitor trafﬁc anomalies to gain a clear
situation awareness based on the sources, destinations, and the
amount of trafﬁcs. Moreover, the other aspects such as security
policy violations and system integrity can also be detected by
IDS. Some IDS such as TripWire, OSSEC HIDS, and Snort
have been used in the studies for gain abnormal events on both
network and individual hosts.

F. Data Gathering Limitation

As the most essential part of SA system design, data
gathering process is still crude and need further consideration.
More cost-efﬁcient data gathering and pre-processing need to
be investigated. The limitations of data collection for SA are
listed as follows [90], and also pros and cons of each are
illustrated in Table III:

– Different data types need various sources which increase
the complicity of data collection and real-time monitoring
capabilities.

– Although honeypots and honeynets are crucial sources of
gathering information about real threat scenario, most of
the gathered data using Honeypots are unstructured and
unorganized. It’s crucial to automate the data organizing

TABLE III
DATA TYPES CLASSIFICATION BASED ON VARIOUS FACTORS FOR SA SYSTEMS.

Data Type

Dynamic

Example of sources
– vulnerability scan data
– network topology

Pre-processing

Source

Moderate

I

Pros
+ Available
+ Include metrics

Cons

References

- Need Frequent update

[7]

9

High

Low

Low

One-off data

– Incident reports

Alert-based

Intelligence
sharing

Raw

– IDS
– alerts (e.g., Snort alerts,
tripwire alerts)
– CERT
– MISP
– OSINT
– Packet snifﬁng
– system log ﬁle
– SNMP traps
– other like trafﬁc dumps,
OS audit logs, ﬁrewall logs

I–E–H

+ More precise

- Less availability
- Need experts

+ No inspection required
+ Real-time (alert based)

- Inability to detect
unknown attacks

I–H

E

+ More precise
+ Updated Information

[45, 82]

[138]

[82, 174]

[162]

- Need external sources,
sharing, and trust,
so less available and slow

- Changes Frequently
- Complexity i.e. parsing
and analysis
- Needs frequent inspection

High

I–H

+ More available

Notations: Internal Sources (I) - External Sources (E) - Honeypot (H)

and condensing of honeypots to be useful for further SA
evaluation and real-time analysis.

– Various sources provide different data representation
and formats which increase the pre-processing burden.
However, devising a standard and unique dataset which
can incorporate data types from different sources into a
standardized form is still missing in the literature.

– Continuous growth of data volumes collected and stored
for further analysis (i.e. using honeypots) may cause
problems by overwhelming the system. However, a sys-
tem should be designed to remove the unnecessary data
and preserved some portion which may use for further
process (such as learning purposes). Thus, a systematic
data gathering is needed to extract only useful informa-
tion from large trafﬁc data sets.

IV. ANALYSIS AND TECHNIQUES

This section provides a comprehensive review and classiﬁ-
cation of the existing methods and techniques used to analyze
cyber SA in various systems and contexts. Gaining a high
level of situation awareness depends on three main hierarchical
steps each of which provide a level of situation understanding
from low to high. SA phases can be classiﬁed into three main
categories including data gathering, analysis and techniques,
and situation awareness demonstrated in Fig. 2.

He and Li [59] deﬁned the three main layers of awareness
for a comprehensive SA monitoring system as follows. The
main task of the ﬁrst layer is to monitor and analyze abnormal
trafﬁc of the network through network trafﬁc monitoring and
analysis tools and called it as data extraction layer. For this
purpose, the alarm database can be used to extracted sample
data and then the sample data can be processed. The second
layer is the key layer of the system which is used to realize and
evaluate the network security situation and determine whether
if the network is attacked or not. Consequently, it processes
and evaluate attacks based on the current system situation
and based the evaluation model of the speciﬁc situation, it
generates the security situation based on the corresponding
graph to reﬂect the current status and security posture of the
network. Finally, the third layer of the system can evaluate

and predict the network security situation based on the second
layer’s output. It predicts the network security situation, by
obtaining the current network security situation and other
network security data. This stage can help the security experts
to be aware of the network security situation with more high-
level information, and also help them to provide the basis for
making reasonable decision.

A. Data Pre-processing

All collected data, especially raw and unformulated data,
need to be parsed, cleansed, normalized before feeding to the
next step for further analysis. Indeed, the data pre-processing
consists of various steps such as data cleansing including
duplicate elimination, data normalization and collation. For
instance, data cleansing may include data calibration and
ﬁltering process for the raw data collected from security
sensors (IDS, network and system log records, ﬁrewall, SIEM,
and NetFlow and so on. Data processing for SA system
design and implementation has been discussed in various
studies [144, 181]. Zhong et al. [181] conducted an extensive
study on the data triage operations in situational awareness
analysis. Their main area of focus are in cyber defense analysts
based on the data triage and network monitoring data, their
proposed framework helps to automate the retrieval of data
triage process for analysts.
Data Reﬁning and Fusion: Most of collected input data,
especially for the raw data collected by IDS or network trafﬁc
inspection,
log ﬁles, etc, as shown in top of pyramid in
Fig. 1, need higher pre-processing burden. It mainly includes
parsing and reﬁning of raw data before feeding the reﬁned
data to analysis modules. For instance, Shen et al. [130]
deﬁned three levels for collected data: (i) Object reﬁnement
which mainly are pre-process and reﬁning raw data collected
through various sources such as IDS, system and web log
ﬁles, as a level-1 data fusion, (ii) Situation reﬁnement or level-
2 fusion which deals with pre-processed data resulting from
level 1, and (iii) Threat reﬁnement or level-3 data fusion which
consists of high level data resulting from level-2 data fusion.
This hierarchical perspective of data fusion is a part of data
processing to determine ﬁnal situation awareness and designed

10

Fig. 2. Situation Awareness hierarchically structure and the related framework showing the level of situation awareness.

impact assessment system. Similarly, [173] proposed a data
fusion model for Resilient Control System which aggregates
data form various IDS sources and pre-process them using
two levels as object reﬁnement which uses a combination of
IDS to identify an individual attack. Then, the results from
the object reﬁnement are fed into the situation reﬁnement
which can ﬁnd simple attack characterization by fusing the
defensive posture. Later on, the pre-processed and fused data
from those two levels should be fed into higher analysis
based levels such as threat reﬁnement. In [141], the authors
proposed a suitable data fusion algorithm for SA aiming to
reduce network trafﬁc redundancy in big data through feature
extraction, classiﬁcation, and integration. Feature extraction is
The key component of the data fusion algorithm which helps
to address dimension complexity. The features can show the
original big data through analyzing the internal characteristics.

However, cybersecurity problems are, often, compresses a
very large set of features. Utilising all the features has two
main drawbacks, ﬁrstly, more examples will be needed to
build/train a model, and secondly, not all features are relevant
or needed. Hence, performing feature selection and feature
construction can largely help to mitigate this problem and
reduce the dimensionality of the feature space. Furthermore,
the vast majority of those features are handcrafted by domain
experts. Seeking an automated approach to extract features
from the raw date or building a model that is capable to
operate directly on the raw data can reduce the effort and
costs associated with manually designing and extracting those
features.

B. Using Artiﬁcial Intelligence

1) Machine Learning: In computer science, machine learn-
ing (ML) is a subﬁeld of the wider artiﬁcial intelligence ﬁeld
(AI) [128] and one of the most rapidly evolved ﬁelds [9].
ML comprises a set of algorithms that aim at automatically,
i.e., without being explicitly programmed, extracting useful
patterns or knowledge from data to solve a problem [10]. Gen-
erally, ML methods can be categorised into four approaches:
(1) supervised learning, (2) unsupervised learning, (3) semi-
supervised learning, and (4) reinforcement learning [158].

– Supervised Learning: The methods of this approach relies
on labelled examples, i.e., the correct output (also known
as ground truth) is provided, and are guided by those
labels during the training process to learn a model. Hence,
such methods aim at generating a generalised mapping
between the inputs and the corresponding label [20]. The
two typical tasks of this approach are classiﬁcation and
regression.

– Unsupervised Learning: The methods of this approach
concern with unlabelled example inputs and therefore,
the main aim is to utilise predetermined criteria to group
those examples into different groups. A typical task of
this approach is clustering.

– Semi-supervised Learning: The methods of this approach
combine the both of the previous two approaches. Such
methods are needed where the problem at hand comprises
a mixture of labelled and unlabelled data. Transductive
support vector machine is a typical example of this
approach [78].

Data GatheringReal-timeEnvironmentAnalysisSensors MeasurementsVulnerability DetectionIDS/Firewall DataDecision-MakingAnalysisTechniquesAnomaly DetectionCorrelationClusteringMetrics EvaluationAI-Machine LearningThreat EvaluationHuman-ComputerInteractionVirtualizationRisk AssessmentHuman ReportsActivity LogsImpact AssessmentAI-powered ThreatsSituation PerceptionSituation ComprehensionMulti-source dataLowHighSA	LevelPre-processingStatistical SummariesCybersecuritySituation AwarenessLearning and knowledge ModuleSituation ProjectionData GatheringReal-timeEnvironmentAnalysisSensors MeasurementsVulnerability DetectionIDS/Firewall DataVisualizationAnalysis andTechniquesTechniquesAnomaly DetectionCorrelationClusteringMetrics EvaluationAI-Machine LearningThreat EvaluationHuman-ComputerInteractionDecision-MakingHuman ReportsActivity LogsAI-powered ThreatsSituation PerceptionSituation ComprehensionMulti-source dataLowHighSA	LevelPre-processingMetrics calculationSituation AwarenessHierarchyLearning and knowledge ModuleSituation ProjectionDBSituation AwarenessGraph-based viewDepict Situation– Reinforcement Learning: The methods of this approach
aim at developing an agent that can automatically explore
an environment and takes an appropriate action. The
learning process in of such methods rely on maximising
a cumulative reward and minimising the penalty.

Adenusi Dauda et al. [3] developed a threat detection model
aiming to gain cyberspace condition. They proposed a SA
model using Artiﬁcial Intelligence (AI) technique. They used
Artiﬁcial Neural Networks (ANN), also called (NN), to create
perception sub-model. Moreover, they leveraged Rule-Based
Reasoning (RBR) techniques to model SA comprehension and
projection phases. Champaneria and Panchal [28] proposed
a model for detection of novel and unknown attacks. They
developed an intrusion detection model using hybrid Artiﬁcial
the
Neural Network (ANN) approach. They showed that
proposed hybrid ANN model outperforms the other methods
in terms of attack classiﬁcation, training time, and detection
rate.

SA prediction is one of the crucial purpose of SA system.
Various methods of network security situation prediction have
been proposed based on different ANN models such as Back
Propagation (BP) Neural Network (BP-NN) [176, 139], Radial
Basis Function (RBF) Neural Networ [176], Elman Neural
Network (ENN) [175], and etc [110]. For instance, Tang
et al. [139] proposed a network security SA prediction method
based on dynamic BP neural network using covariance. They
improved their method by including self-learning dynamic
adjustment of the parameters’ weight.

Zhang et al. [176] proposed a prediction-based SA based on
two neural network models: BP-NN and RBF-NN. They also
compared those two methods and showed that BP-NN model
is more effective than RBF-NN model to predict network
SA. Zheng et al. [179] proposed a self-adaptive and real-time
SA strategy named Network Security Situation Autonomic
Awareness (NSSAA). They adopted a BP-NN model to realize
self-learning adjustment of input data.

A hybrid ANN models for SA is proposed by [175]. The
authors combined three NN models which are BP-NN, and
RF-NN together for predicting SA for a computer network.
They showed that the combination of NN models can yield
better and more efﬁcient SA prediction.

However, in most of proposed ANN models, the authors
performed error analysis and predict error values, the error
values later used for training purposes of prediction models.
Thus, the improvement on the models could only achieved
by previous prediction errors fed into the prediction model as
a training sample. Moreover, the success of the ANN models
highly depends on training sample, algorithms, and the quality
of training [96].

The application of supervised learning for SA prediction has
been studied in [31]. Chen et al. [31] used echo state networks
(ESNs) as a supervised learning method with small world
property to propose a network security prediction method by
training the historical attack records. Moreover, in [66], the
authors proposed a method for SA prediction model based on
a support-vector machines (SVM which can learn based on
training of large volume of input data using KDD dataset. They

11

showed that the model effectively reduces the SVM training
time while it enhances the accuracy of SA prediction.

Vinayakumar et al. [153] used different deep learning archi-
tectures to be able to detect spam and phishing attacks using
Uniform Resource Locator (URL) and email data sources due
to the importance of Email and URL resources which are
used by the attackers to spread malware. They used various
datasets to conduct
their experiments using deep learning
architectures. They used classical machine learning algorithms
for comparative study and collected required data using public
and private data sources. Vinayakumar et al. [152] proposed
a scalable framework for situational awareness for networks
which is able to perform web scale analysis in near real-time
manner and detect threats and emit early warning signals to
avoid malware propagation and large scale attacks. They em-
ployed deep learning approach to correlate malicious activities
obtained from the DNS protocol usage. Dietterich et al. [38]
used machine learning methods to capture the behavior of
ordinary desktop computer users.

However, the SVM-based approaches is effective for SA
modeling and analysis including monitoring and prediction
of SA. However, most of these models suffer from the long
training time mainly for SA prediction model which is the
main drawback of these types of ML-based approaches [67].
2) Evolutionary Computation: Evolutionary computation
(EC) is concerned with biologically inspired algorithms [14].
EC algorithms can be widely categorised into two groups [14]:
Evolutionary Algorithms (EAs) [80]; and Swarm Intelligence
(SI) [40, 178]. EC algorithms are considered to be global
searchers as they rely on a population of candidate solutions
unlike other ML algorithms that search the space using a
searcher.

Liang et al. [101] proposed a SA system based on in-
corporation of evolutionary algorithms and neural network
models. They used the evolutionary algorithm to optimize
the parameters of neural network model and ﬁnally quantify
the network SA. However, their model could only analyze
limited situational factors which are mainly based on SA
perception. Later on, Lin et al. [102] proposed a SA model
by incorporating BP Neural Network and Particle Swarm
Optimization (PSO) to predict future situation and projection.
The incorporation of PSO into the model can provide global
optimization solution. However, it lacks generalization for new
samples and only relied on trained samples. Similarly, Meng
et al. [110] proposed a SA network security prediction method
based on combining RBF-NN with hybrid hierarchy genetic
algorithm. Li and Liu [97] proposed a SA extraction method
based on the improved particle swarm optimization (IPSO)
and logistic regression algorithm (Logistic Regression LR)
which can ﬁnd global optimization and improve the learning
speed and accuracy because of the intrinsic parallelism and
optimization capabilities of IPSO. Moreover, Zhao and Liu
[178] proposed a SA system based on adopting PSO into
wavelet-NN model for monitoring large scale data environ-
ment and ﬁnd the optimal solution. Finally, they showed the
effectiveness of combining ANN models with PSO methods to
achieve faster and more accurate network situation awareness.
Moreover, Combining ANN methods with EC-based meth-

ods such as PSO can enhance the SA system in terms of
multiple factors such as NN ability to learning, speed of
learning, accuracy, and effective solution, while it covers
the limitations of traditional NN algorithms such as network
training errors and low search success rates [178].

3) Limitation of AI-based Techniques: Although ML-based
and EC-based approaches are useful in terms of self-learning,
automation capabilities of SA , and the ability of combining
with other methods, there are some main limitations summa-
rized as follows:

– Dependency to updated dataset which includes data for
novel and unknown threats for training purposes. How-
ever, the role of honeypots for capturing real and novel
threats is inevitable to address this shortcoming [25].
– Lack of adequate training samples or appropriate training
models may cause undesirable results [96]. Trained sam-
ples should be productively used as the input of model to
be able to capture or predict the incoming security situ-
ation. Evolutionary Computation methods mostly need a
large amount of prior knowledge to extract the situational
elements which might be difﬁcult to obtain.

C. Game Theory

Game theory (GT) is related to the mathematical models that
can be used in cyber SA to study the game behaviors between
attackers and defenders [21]. In here, we highlight the GT-
based approaches regarding either designing or applications of
game theory by reviewing the literature to provide the current
state-of-the-art of GT in SA systems and it’s limitations.

Indeed, the main goal of the game-theoretic SA approaches
is to predict the adversary behavior against defender. This pre-
diction can be used to provide an advantage to the defender [7].
Through game-theoretic analysis, the defender can theoreti-
cally prove the attacker’s best strategy; consequently, the best
defensive strategy can be used. Several game-based security
awareness methods have been proposed [174, 177, 99].

Various studies utilized traditional GT-based approach for
SA and monitoring systems. Shen et al. [130] proposed another
Markov Stochastic Game Model for designing SA system
which is able to estimate and detect cyber attack pattern based
on the collected data. They showed that their proposed GT-
based model can enhance the understanding of the network
situation and help with proper defense. Wang et al. [154]
proposed a stochastic game theory model for quantiﬁcation of
network situation awareness. They used the network offense
and defense game based on the network service states to
realize the payoff of both sides and quantify the situation.
However, applying the game theory based on the network
state spaces has scalability issue as the network state spaces
could be extremely large, especially, in dynamic networks and
the solving the state combination problem would be time-
consuming. Later on, a stochastic game theory for SA was
proposed by [171] which could capture larger network states
in a dynamic network environment. However, it still suffers
from scalability problem in the larger network states to solve
state combination problem.

12

In [159], the authors implemented a GT-based model in order
to analyze several attack scenarios on Online Social Network
(OSN) to obtain clear perspective of system’s vulnerabilities
against various attacks, and consequently, provide protection
mechanism to avoid the attacks. They applied Markov decision
process (MDP) in their GT model
to secure information
sharing in online social networks.

the evaluation result

Zhang et al. [177] proposed an approach to improve SA
based on the Markov Game Model (MGM) by gaining the data
regarding threats, assets, and vulnerabilities and evaluating
them in real-time. In their model, users, network administra-
tors, and attackers establishes three players for MGM. They
showed that
is efﬁcient and precise.
Moreover, Zhang et al. [174] leveraged a game-theoretic
approach to defend threats in cloud environment using threat
Intelligence. They used the Nash equilibrium together with
fuzzy optimization method to predict the attack behavior. Ying
et al. [171] proposed a game-theoretic based dynamic SA
system by modeling both attacker and defenders and game
player using stochastic game model of the network. Then,
they quantiﬁed the network SA by incorporating the game
mathematical formula, attacker and defender costs. They used
Nash equilibrium to ﬁnd a balance between attacker’s and
defender’s beneﬁts.

However, GT-based approaches have some limitations such
as lack of full rationality of the involved players which are at-
tackers and defenders and incompleteness of information [32].
When it comes to advanced adversaries, this problem even get
worse as the intelligent attacker may learn about the defender
and the environment. To this end, GT-based approaches need
to be incorporated by learning approaches and knowledge
awareness to be able to increase monitoring and defensive
capabilities against advanced adversaries.

D. Hybrid Approaches

Various studies have applied multiple approached for de-
signing SA system such as combining learning-based tech-
niques with GT [162, 165, 155, 165]. Wu et al. [162] proposed
a security situational awareness using Fuzzy cluster based
analytical method, game theory, and reinforcement learning
mechanism. They analyzed the big data in the smart grid
aiming to gain the security situational awareness in the smart
grid environment. Xing-zhu [165] proposed a method to de-
termine the situation of the system based on Fuzzy Dynamic
Bayesian network. Their simulation results were compared
with static Bayesian network model. They showed that the
proposed method can better reﬂect the dynamic changes on
the network. In [3], the authors used the fuzzy equivalent
relations in order to perform cluster analysis together with
the association analysis the situational factors in big data.

Moreover, Chung et al. [32] proposed a hybrid approach
incorporating GT and a model-free reinforcement learning
(called Q-learning [155]) to enhance the monitoring and
defensive capabilities of the designed system and support the
problem created by GT-based approaches which are mainly
lack of information about the ability or intent of attackers.

The applications of GT-based evaluation which can be uti-
lized for SA models have been studied in the literature [29, 5].

However, there still lack of appropriate training dataset for
learning-based approaches which have been various applica-

tion when they are combined with other approaches such as
GT and Fuzzy models. Thus, it is necessary to provide further
study on improving learning-based and hybrid approaches
using real data, and to test the approach with real-time trafﬁc
logs, data, and speciﬁc detection using a real adversary data
collection testbed such as Honeypots.

However, the SA monitoring quality on effectively detecting
and analysis of system’s environment is still limited due to
various reasons including, (i) inaccurate and incomplete data
gathering and pre-processing, vulnerability analysis, intrusion
detection, (ii) the ability to quickly and automatically adapt
to the evolving and dynamic nature of networks, (iii) the
capability to deal with intelligent attackers and AI-powered
threats (such as sophisticated and complex attacks), (iv)
limited capability to deal with uncertainty, and (v) limited
capability for large-scale real-time data collection system.

E. Triage Analysis

Much like the triage in medical use, the triage used in the
cybersecurity refers to a set of automated techniques with the
capability to quickly assess a security incident to determine if
the security incident requires further investigation. The term
triage has especially become popular in malware detection as
an efﬁcient mechanism which can analyze and identify speciﬁc
malware that require urgent attention from the massive amount
of malware for many organizations with limited resources.
By and large, most triage techniques that are currently on
offer goes through a number of phases, including (1) feature
extraction, (2) similarity measure, and (3) clustering. Most
often, features are extracted from malware. The features are
often clustered according to the result obtained by a similarity
metric. The features from the different cluster are compared
with known signatures. If no match is found with the known
signatures, they can be often classed as potential zero-day
attacks. The zero-day attacks are typically highly ranked for
further investigation.

The current triage techniques can be broadly classiﬁed into
two groups, the ones that deal with malware features extracted
as categorical data while the other deals with malware binary
ﬁles. BitShred [74] and VILO [93] extract features based on
N-grams that have been used in text analysis. BitShred further
use a feature hashing [131] on the extracted feature to allow for
dramatic dimensionality reduction to compress large feature
space down to a smaller feature so the hashed presentation
of features take less space in memory and more effective
for cache. The hash features are compared using the Jaccard
similarity metric in BitShred while VILO utilizes a weighting
scheme [79] by calculating how frequently a word (i.e., fea-
ture) appears in the feature vector and comparing the similarity
in the weights. BitShred uses co-clustering method to correlate
both the hashed features and malware samples which are
claimed to discover more substantial, non-trivial structural
relationship among malware samples. VILO uses the nearest-
neighbor algorithm based on the weighted similarity scores to
form clusters. Instead of N-gram, MAST [27] extracts features
based on the qualitative data that represents each mobile
app (e.g., permissions, intent ﬁlters, the presence of native

13

code, etc.) – this is named as questionnaire. The similarity
calculation among the collected questionnaire is done using
a statistical method called Multiple Correspondence Analysis
(MCA) [2] that measures the correlation between multiple
qualitative data followed by grouping related mobile apps
together (i.e., clustering) so that uniqueness within the group
is more speciﬁc. In contrast, SigMal [87] uses the signal
processing-based feature extraction where the executable bi-
nary content as a one-dimensional signal that is represented as
a vector of bytes. The vector of bytes is converted as ﬁltered
feature vectors [114]. The authors claim that the use of the
ﬁltered feature vectors based on the executable binary content
is better equipped to preserve the features of the original
malware sample even though the malware is disguised by
polymorphic engines or general packers (e.g., encryption or
compression techniques). Euclidean distance metrics is used
between feature vectors to ﬁnd the nearest-neighbor sample in
the learning dataset.

The main point of research in triage techniques is either to
improve detection accuracy which is decided by the algorithms
utilized for similarity metrics and clustering or to speed up
computation to ﬁlter through as many samples as possible. For
example, BitShred showed that the proposed method speeds
up typical malware triage tasks by up to 2,365x and uses up
to 82x less memory on a single CPU thus more suited for
large-scale malware triage and similarity detection. The results
from VILO presents that there was in between 0.14% and
5.42% fewer mis-classiﬁcation compare to similar methods.
MAST was able to detect 95% of malware from the 36,710
mobile apps as test samples. SigMal could classify 50% of the
incoming sample with above 99% precision and showed that
it could have detected, on average, 70 malware samples per
day before any antivirus software detected them.

F. Anomaly Detection

Anomaly detection can be incorporated with SA to detect
abnormal behaviour of a system components such as users,
trafﬁc, access, etc. and provide the system with more clear
idea about the current situation of the system based on normal
and abnormal activities. Actually, abnormal behaviors are the
activities inside a system which are opposite of the normal or
logistic behaviors. Thus, the core of anomaly detection is es-
tablished based on the monitoring of normal system operation
to ﬁnd out any deviation from the normal model [98].

Friedberg et al. [51] distinguished three kinds of anomalies
including (i) point anomalies which involves with a single
event that can be considered anomalous given the notion of
normality, (ii) contextual anomalies which refers to when
an event can be considered as anomalous behavior for a
given context. Thus, the anomaly can be inferred using the
the events’ behavioral attributes in its context, (iii) collective
anomalies which indicates a series of events which are con-
sidered as anomalous activities. However, in order to precisely
assess the current situation of the system, the SA system
should be able to detect all those three discussed abnormality
behaviors using anomaly detection methods embedded in the
SA system. The application of anomaly detection in SA has

been studies in the literature [58, 98, 107]. For instance,
Harrison et al. [58] proposed an anomaly detection method
to detect low probability events for SA.

1) ML-based Approaches: ML-based approaches have been
signiﬁcantly used for gaining situation awareness through
anomaly detection [107, 127]. Various ML techniques have
been used such as the symbolist approaches using random
forests [107] and decision trees, or connectionist approaches
leveraging neural networks (NN) [108], or evolutionary ap-
proaches which mainly mimic genetics or the immune sys-
tem [36]. Moreover, other techniques such as Bayesian meth-
ods [150] and analogistic approaches using support vector ma-
chines (SVM) [111] have also used in the literature. However,
learning based approaches need to use existing dataset for
training and testing purposes. We further explain two popular
dataset used for this purpose.

Datasets: Most of the learning based anomaly detection
techniques use two datasets such as KDD-Cup 1999 dataset
and NSL-KDD dataset which are more popularly employed as
training and testing datasets.

– KDDCup 1999 [142]: This dataset is a popular dataset
which has been widely utilized for intrusion detection
and anomaly detection methods. The training dataset in-
cludes around 5,000,000 single connection vectors which
contain 41 labeled features as two types of normal or an
attack. The features labeling as the Attacks are based on
four categories such as DoS, User to Root Attach(U2R),
Probing, Remote to Local Attack (R2L).

– NSL-KDD [83]: NSL-KDD dataset

is another dataset
which has been used in ML-based methods. This dataset
addresses the shortcomings of the KDDCup 1999 dataset.
The KDDCup 1999 dataset includes a large amount of re-
dundant or duplicated data records which are around 75%
and 78% in both testing and training dataset respectively.
This redundancy could make the learning algorithm bias
and cause wrong results. To address this problem, NSL-
KDD is adopted as the new version of KDDCup 1999
dataset and widely adopted for anomaly detection.

Feature Manipulation: Feature manipulation is an important
data pre-processing step for anomaly detection, especially
for classifying high-dimensional data. It mainly refers to
the process of transforming the input space of a machine
learning task aiming to enhance quality and performance of
learning-based techniques such as Machine Learning (ML).
Feature manipulation concerns with feature selection, feature
construction, and feature extraction. Feature selection aims
at selecting a subset of the original features by removing
irrelevant, redundant, and noisy features [166]. Feature con-
struction aims at generating a new feature or set of features
by considering various combinations of the original features
[115].

Fiore et al. [46] proposed a network anomaly detection
in a semi-supervised fashion based on the Discriminative
Restricted Boltzmann Machine (DRBM) [95]. They used
DRBM to capture the main aspects of the normal trafﬁc class
and further perform accurate classiﬁcation. Another learning-
based technique was developed by Salama et al. [127]. They

14

conducted research for the anomaly intrusion detection scheme
using deep learning methods called Deep Belief Network
(DBN) [37]. They leveraged SVM classiﬁer together with
DBN used for feature reduction and called a hybrid scheme of
DBN and SVM. Their hybrid methodology includes three main
phases which are pre-processing, DBN feature reduction, and
classiﬁcation. Iglesias and Zseby [71] proposed an anomaly
detection for network trafﬁc based on the feature selection ap-
proaches. They utilized a multi-stage feature selection method
using ﬁlters and step-wise regression wrappers. Then, more
advanced anomaly detection model based on deep learning
was proposed by Javaid et al. [76]. They developed an anomaly
detection-based system (ADNIDS) to detect unknown future
attacks using deep learning approach. They introduced two
main steps for feature extraction to collect unbalanced network
trafﬁc data and supervised classiﬁcation to use the extracted
features to label trafﬁc dataset. They used NSL-KDD dataset
for training data and evaluated the performance of the ap-
proach using some metrics such as accuracy, precision, recall,
and f-measure values.

Further in [86], the authors proposed a hybrid anomaly
detection model based on incorporating Long Short Term
Memory (LSTM) and Recurrent Neural Network (RNN). They
trained their proposed deep learning model using KDD Cup
1999 dataset and showed the effectiveness of their approach
to detect the attacks in comparison with other learning based
anomaly detection techniques. Similarly, Tang et al. [140]
utilized Deep Neural Network (DNN) model for anomaly de-
tection in Software Deﬁned Networking (SDN) environment.
They used NSL-KDD Dataset for training their deep learning
model and showed the effectiveness of DNN to monitor and
detect various attacks in the SDN environment.

2) White-list and Black-list Analysis:: Blacklisting is a
classical approach helping a monitoring system to detect
malicious activities by maintaining a list of known blacklisted
threats or activities. In contrast, white-list technique is used
to gather and classify the information of reliable sources for
legitimate uses [153]. The application of white-list or black-
list techniques have been studied in the literature [43, 22, 112].
In [112], the authors proposed an authentication-based ap-
proach which classiﬁes the access to the Uniform Resource
Locators (URLs) based on three deﬁned lists: white-list, black-
list, or gray-list. They showed that the proposed system can
improve the accuracy of the suspicious the gray-list, white-list,
and black-list, and further reduce the authentication frequency
for the user accessing the URLs.

However, there still a limitation for the accurate classiﬁ-
cation of those lists. For instance, a legitimate URL may be
misclassiﬁed as a blacklist or vice versa. Moreover, most of
the white-list and black-list approaches need frequent updating
as the thousands of emerging threats evolve every day, and
updating this list would be challenging [73].

– DNS-based Black-list: Domain Name System (DNS) can
contains resource records for the identiﬁcation of hosts
presented in the black-list and uses the DNS protocol.
– Botnet Detection: Prieto et al. [122] proposed a Botnet de-
tection system called as Botnet Detection System (BDS)
which includes the network tools such as wget, Net-

15

Whois, dig, and perl script to analyze the DNS trafﬁc.
They used a test-bed system which was infected with
Zeus, Conﬁcker and Kraken botnet to obtain the Black-
list data.

has been proposed to support monitoring capability at the
cloud to inspect and analyze endpoints attempting to connect
to cloud services without having to stall the software on every
user device [18, 24].

– Firewall and Access-list: In [48], the authors deﬁned a
black-list for smartphones to avoid sending and receiving
trafﬁcs to a known malicious host. They also deﬁned a
white-list for the legitimate apps allowed to connect to
the network connection.

3) Endpoint Protection:: Endpoint protection is used to de-
scribe a set of security solutions designed to secure endpoints
or entry points of end-user devices (e.g., laptops, tablets, smart
phones, and other wireless devices) that are used to connect
to the organization networks. In recent years, the organization
has increasingly contended with not only growing number of
endpoints but also a rise in the number of types of endpoints
(e.g., IoT). Compounded by remote work and BYOD policies,
these factors have created more wide attack paths making
endpoint security more difﬁcult and traditional ﬁrewall and
antivirus-based approaches increasingly insufﬁcient.

Endpoint protection can be characterized to attempt (1)
securing the entry points of end-user devices, (2) protecting
endpoints on a network or in the cloud from threats. For the
former, a number of user authentication mechanisms have been
proposed to ensure only legitimate end-user devices are con-
nected safely to organization networks. Mutual authentication8
supports a mechanism where both entities (i.e., a client and
a server) authenticate each other, either based a certiﬁcate
exchange or username/password veriﬁcation. Open Authoriza-
tion (OAuth)9 has become one of the most popular and widely
used authentication mechanisms on the Internet as it allows a
federated user authentication where a client can use a single
authentication token to assess a several organizations across
trust boundaries. With the growing concern on IoT devices in-
creasingly connected to organization network (via Fog or Edge
computing), many monitoring systems incorporate capability
to authenticate IoT devices. Almadhoun et al. [8] proposed a
decentralized and scalable authentication approach that utilizes
blockchain-enabled connectivity to Ethereum smart contracts
where access tokens to communicate to the organization
network server are issued by the smart contracts with no
intermediary or trusted third party by effectively removing
the overhead and expense associated with the third party
solution. Advanced biometric-based approaches to bind an
end user with his/her registered mobile devices (e.g., Apple
iPhones) to generate a device unique “ﬁngerprint” and use the
unclonable ﬁngerprint to authenticate with the server has been
proposed [57, 180]. For the latter, NICE [85] uses low-level
network switch properties to locate and map all the switches
on a subnet and then associate rogue systems with speciﬁc
physical switches. This is done automatically without relying
on traditional network management tools and protocols (e.g.,
SNMP) which typically presume some prior knowledge of the
network topology and often require administrative credentials.
A number of agentless cloud computing endpoints monitoring

8https://tools.ietf.org/html/rfc5246
9https://oauth.net/2/

Limitation of Anomaly Detection. Although anomaly de-
tection techniques are useful to discover novel and unknown
attacks, there are still some challenges in terms of training
and learning capabilities of those techniques. For instance, the
network trafﬁc is very complex and unpredictable especially in
a dynamic environment. Thus, the model is subject to changes
over time because anomalies are continuously evolving. Due to
the changes in attack techniques and patterns, the information
gained (trained) previously may be invalid.

G. Current Tools

In this section, we provide an overview on the tools and pro-
totypes which have already been used in design and develop-
ment of SA monitoring systems. It includes the data collection,
pre-processing, processing, and more comprehensive analysis
which can be further used in SA systems. We discuss the
existing SA related frameworks, prototypes and tools which
have been implemented using research projects and real-world
systems.

1) Log ﬁle collector and analysis: Event

logging and
network trafﬁc analysis tools play a crucial role in designing
and developing SA systems. In here, we summarize some of
them used for SA systems.

– SEC: Simple Event Correlator (SEC) tool processes the
text lines in the log ﬁles aiming to detect the certain event
groups over the deﬁned time window [148]. It can analyse
and ﬁnd the frequent patterns from the log ﬁles using the
data mining algorithms such as breadth-ﬁrst event log
detection methods. SEC have been be used for designing
SA monitoring systems in both data pre-processing and
analysis phases [149].

– NTE: Network Trafﬁc Exploration (NTE) [151] is a
security event packet analysis tool which can be use
full to monitor the network trafﬁc, analyse them, and
detect various network attacks. It can be leveraged by SA
monitoring systems tool either collect the network trafﬁc
information or detect the attacks using the pre-deﬁned
algorithms.

– CogLog: Cognitive Case Log (CogLog) The CogLog is a
semantic tool which can keep a log of ﬁndings of the
given investigation. CogLog has been used in the SA
monitoring studies such as [22, 26].

– PANOPTESEC: PANOPTESEC is a tool that manages
the system’s architecture and knowledge based on the
security events and existing vulnerabilities. It can collect
and further correlates the log ﬁles and alerts to detect
attacks. The processed information can be returned to the
users or system administrators. PANOPTESEC has been
used in the SA monitoring system in the pre-processing
and analysis phases [11, 75].

– NECOMA: This is a designed tool

that collects the
network trafﬁc data from the network devices such as

16

such as reactive and proactive attacks that are happening
on the system.

– MAD: Angelini et al. [12] developed a Multi-step cy-
ber Attack Detection (MAD) Visual Analytics solution
aiming to improve the network security by analyzing
the possible attacks and identifying suitable mitigation
techniques.

– Vulnus: Angelini et al. [12] designed a visual analytics
tool named VULNUS for dynamically inspecting the vul-
nerabilities spread on networks which helps to understand
the network situation awareness. The proposed tool can
visually classify nodes according to their vulnerabili-
ties and compute the approximated optimal sequence of
patches able to eliminate all the attack paths and allows
for exploring sub-optimal patching strategies.

However, most of the existing tools cannot still capture more
advanced threats mainly because of lack of appropriate (i)
data collection module for collecting information related to
advanced threats and (i) analysis module for evaluating the
collected data and information to be able to discover advanced
threats.

V. SITUATION AWARENESS

A. Threat Evaluation

Threat Evaluation in SA falls into a layer between cyber
situation comprehension and projection, as it needs to provide
higher perspective of the current situation of the threats
based on its current perspective and its future impact. The
more comprehension gained in this layer, the more SA level
understanding could be obtained.

1) Damage Assessment: The ability of being aware of the
impact of the attack and threats, and vulnerability analysis
is the main part of Damage Assessment (also called Impact
Assessment) [103]. The appropriate cyber situation awareness
can help the security experts to make the right defense deci-
sions and take select appropriate defense actions. The security
analysts need to perform the three basic awareness stages
(Situation Perception, Situation Comprehension, and Situation
Projection) to gain enough cyber situational awareness un-
der severe cyber attacks. Damage assessment is an essential
component of the impact assessment and situation assessment
in the situation comprehension stage and has been studies in
various research [125, 103]. Predictive damage assessment is
an important part of situation projection which evaluate and
analyze the damages which are going to be caused in (near)
future which is missing in the current literature.

2) Attack Tracking and Prediction: Network security situa-
tion evaluation methods based on attack intention recognition
have been studied in literature [91, 92, 54]. Kou et al. [91]
proposed a method to recognize the attack intention on a
network based on achieved attack phase and vulnerabilities
in order to trace the next attack phase. They formulate the
security situation (Sa) as Equation 1.

Sa =

n
(cid:88)

i=1

sa(pathi),

(1)

Fig. 3. CNSSA framework developed by [163].

switches, routers, and IDS. It further analyzes the col-
lected data to identify any attack attempts and mitigate
the attacks [75].

2) Attack Graph generator tools:

Security

– NetSPA: Network

Planning Architecture
(NetSPA) [161] is an Attack Grapph (AG) generator
and reachability analysis tool which consists of graphing
subsystem component to visualize the computed attack
graph. It can provide the assessment component of the
survivable system. To address the scalability issue, it
uses methods to prune the graph and make it simpler
by removing the paths that do not reach the goal.
NetSPA has been utilized by various studies for network
monitoring and security evaluation systems such as [116].
– GARNET: GARNET [160] is an extended version of
NetSpa which is able to capture the reachability of
physical and logical
topology by leveraging a graph
subsystem based on tree maps. It is also able to evaluate
the actual network situation through the interaction with
the system [12].

3) Threat analysis tools: The tools discussed before were
limited to the capturing and analyzing network ﬂow infor-
mation and lacked the capability to monitor and detect threats
and vulnerabilities [94, 170]. However, various tools have been
designed and developed to monitor and analyze the threats and
obtain high level of situation awareness such as perception and
projection [163].

– CNSSA: Xi et al. [163] developed a real-time situation
awareness tool named Comprehensive Network Security
Situation Awareness (CNSSA) which is enable to monitor
the network environment based on the collected data
and quantify the network situation awareness based on
four metrics: Security, Threat, Vulnerability, and Stability.
CNSSA architecture is presented in Fig. 3. CNSSA
is equipped with a useful visualization and monitoring
module which is able to illustrate network situation based
on detailed multi-level view with various threat viewing
features.

– Sol: Bradshaw et al. [22] developed a cyber security situ-
ation awareness framework named as Sol. It analyze the
cyber situation awareness using mutli-agent environment.
– PERCIVAL: Angelini et al. [11] proposed a novel visual
analytics environment that obtains situational awareness
providing the users with the understand of the network
security posture and help them to monitor security events

where, Sa denotes the effect of each attack path on the
network security situation which can be calculated based on
the probability of attack stage with the attack threat and some
weighted values. Then, the predicted security situation (Sa(cid:48))
is deﬁned as Equation 2.

Sa(cid:48) = Sa +

l
(cid:88)

i=1

Ei(path),

(2)

where l is the quantity of attack path, and Ei is the effect
of the attack on the next attack stage. The proposed method
can evaluate the network security situation based on attack
intention and stage recognition. This technique is used as
situation projection to further predict the next attack stage.
However, their proposed technique only works based on the
known attacks and cannot be evaluated based on unknown or
new-type attacks.

Furthermore, Hu et al. [65] proposed a comprehensive
situation prediction model based on the overall network sit-
uation factors such as attacker, defender, and environment
to show the adversary characteristic. Their proposed solution
incorporates some important factors such as attack intention
recognition, path detection, and success probability prediction.
They further evaluated the threats using calculation of threat
severity of critical assets and control the security situation.
However, achieving those factors provide a high level of SA
projection which are useful for further decision making and
response. Similarly, various threat evaluation methods have
been proposed for different purpose such as attack speed
prediction [50], attack capacity inference [104], attack goal
identiﬁcation [50, 104, 113], attack path prediction [113, 50,
104], success probability prediction [124, 104], and attack time
prediction [65].

B. Decision Making and Planning

The SA system should be able to interact with situation
response in which a planned course of actions needs to be
taken [17]. Thus, before deploying any planned action, a de-
cision making based on the consequence of the planned action
should be done. SA enables a decision maker’s awareness
of a situation and their understanding of the situation up to
the point the decision is made. Once a decision is reached,
planning and execution (of the response actions) occur.

Making an appropriate decision for a given system can be
determined based on the system’s situation. Pendleton et al.
[121] deﬁned the evolution of the situation for a given system
based on a function of time which can be determined based on
three attributes each of which can be represented as a function
of time. They formulated the situation by deﬁning the situation
metrics by contributions of vulnerability, attack, and defense
metrics, as shown in Equation 3. The relationship between
those aspects is described as a model in Fig. 4.

situation(t) = f (V (t), D(t), A(t)),

(3)

where V (t) represents a function of existing vulnerabilities
in the system at a given time t, and D(t) and A(t) denote
the functions of defense and attack for time t. However, there

17

Fig. 4. Decision making for SA based on vulnerabilities, attacks, and defense
metrics [121].

still a preliminary progress towards explicit representation of
the various kinds of required functions, f , corresponding to
different situations and various attack-defense interactions.

Moreover, the decisions making in SA need to be evalu-
ated based on the current and further security postures. For
instance, the evaluation should be provided to show whether
if the change in security practices cases negative impacts
for further situations or not. This may include monetary
costs, reputation damage, or so. However, it’s important to
be informed by an accurate understanding of the risks caused
by a selected decision [156].

C. Visualisation

Visualization plays an important role in SA monitoring. It
is a way to demonstrate the level of current threats, impacts,
priorities, and sensitivity of analyzed data in the SA systems,
and can be an interaction between computational process
and human-based visual representation. This section discusses
various visualization techniques used for SA such as statistical,
historical, near real-time, and real-time presentations of SA
system. Various existing SA tools use visualization techniques
such as map-based, chart-based, network graph, line-charts,
and ﬂow diagrams to present information [61, 172]. Visual-
ization techniques for cybersecurity purposes can be demon-
strated based on statistical summaries which include some
visualization techniques such as histogram, 2D or 3D graphs,
and line-charts. Moreover, map-based visualization techniques
such as geo-locations views are useful
tools to represent
the cyber attack source and targets situations. Fig. 5 shows
some examples of this type of visualizations. Line-charts
visualization methods are useful for monitoring capabilities
especially in real-time manner such as real-time sliding slice.
In [47] real-time monitoring feature is used for visualizing
Feature Selection.

Many studies have been proposed to develop the system
design for analysis of data and visualize the threats aiming to
support SA in real-time monitoring [52, 106]. For instance,
Mansmann et al. [106] proposed a screen-ﬁlling technique
providing the events’ details in a data stream in near real-time
by following the history trends of the prior events. In another
work, Best et al. [19] utilized a behavioral modeling method

SystemAttack MetricsDefensesVulnerabilitiesSituationAttacksDefense MetricsSituation MetricsVulnerability Metricscontributeinteract withdescribed byaffects affectscontributeshashasdescribed bydescribed bydescribed bycontributeexploitsdefended byattacked byaffects18

Fig. 5.
demonstration of chart-based visualization techniques.

(a) Geo-location visualization of many-to-many attacks [172], (b) An overview of the network graph visualization used in the literature [109], (c)

which is able to learn the expected activities on a network.
They presented a visualization system which combines various
visualization techniques and tools, and provided the situational
understanding of real-time network activities to help analysts
to plan for further response steps.

Healey et al. [61] reviewed the scientiﬁc and information
visualization of the proposed visualization systems for cyber
SA. Then, they outlined a set of requirements to develop
an appropriate visualization system for cyber SA domain.
Huffer and Reed [69] developed a proof-of-concept tool which
is able to discover the roles of a system and helps cyber
analysts to detect the changes in the network and devise a
plan for incident response. Later on, in [52], they expanded
their work by proposing an anomaly detection visualization
system which can discover and explain suspicious activities
and behaviors in the network’s trafﬁc and logs. They leveraged
some visualization features such as a temporal histogram,
horizon graphs, bar charts, and two-hop communication graph
to demonstrate the network situation in real-time.

However, it is important to determine how best to leverage
the visualization techniques for SA to allow analysts to moni-
tor and detect unusual changes in the system, plan for incident
response, and optimize the security posture.

A. Misconceptions

VI. DISCUSSION

A number of misconceptions around cyber SA realm have
literature listed as

been discovered based on the current
follows:

– A large volume of data collected about the system and
threats is not considered as a part of situation awareness.
For instance, intelligence reports such as threat and vul-
nerabilities. However, to make a monolithic SA system,
all stages of gaining SA are required ranging from raw
data, intelligence reports to high abstracted data.

gathering phase and can help the SA system in further
stages to provide the system with better understanding of
perceived or impending situation.

– However, threat intelligence reports solely should not be
considered as cyber SA. Data and information gained
through data gathering phase such as vulnerability and
threats are only the source of SA analysis and situation
awareness phases. Likewise, the outcome of intelligence
reports alone needs to be used as an input for further
analysis in the other phases and are not cyber SA.

– The large amount of collected data which is either raw, or-
ganized, or processed is not Cyber SA. This collected data
can be useful in understanding partial situations. Thus,
the collected big data is not SA, and only demonstrates
one aspect and organized perspective of the situation and
need to go through further analysis and evaluation.

B. Insights and Limitations

According to our extensive survey on the situation aware-
ness systems, design, and development in the curret literature,
we discovered that the following aspects of SA are still crude
in current studies and will need to be further investigated.

– More comprehensive data gathering including dealing
with large amount of data, pre-processing, and parsing.
Data collection need to be real-time which can help SA
system to be updated based on the current situation of the
system. However, using honeypots to collect and monitor
the real data needs further investigation in the literature.
– Applying anomaly detection techniques in SA is still
difﬁcult for dynamic environment. Training and learning
capabilities is challenging in this situation as the network
trafﬁc is very complex and unpredictable a dynamic
environment. Thus, the model is subject to changes over
time because anomalies are continuously evolving.

– Intelligence and data sharing is not Cyber SA. Intel-
ligence sharing data is still only one aspect of data

– There is still a lack of the comprehensive metric for SA
which can quantify the system’s current situation with the

ability of capturing system’s security/situation changes in
real-time using SA-based metrics.

– There are still missing AI-based approaches for both
attacker and defender sides such as modeling game
and control theoretic approaches, adversarial modeling
for AI-powered threats, artiﬁcial intelligence techniques,
and human-computer interfaces. The vision of the future
system is based on the side-by-side interaction between
human analysts and the automated AI-based systems and
tools. Moreover, the SA system design and development
requires more sophisticated human-computer interaction
and improvement on self-learning abilities for defensive
and monitoring systems. This interaction will help the
transaction from human-based defense system to AI-
based systems in SA context more effectively and will
enable the defenders to automatically prepare to defend
against potential threats with quick adaption and automa-
tion capabilities to evolving cyber attacks.

VII. CONCLUSIONS

The emerging threats are sophisticated, complex and highly
dynamic and need to be addresses using situation awareness
monitoring systems equipped with the ability to monitor and
defend against wide range of attacks including AI-supported
attacks. In this paper, we discussed the cyber SA taxonomy
based on a comprehensive framework including different sit-
uation awareness levels such as data gathering mapped to
situation perception, analysis and techniques mapped to situ-
ation comprehension, and ﬁnally situation awareness mapped
to situation projection. We then conducted an extensive survey
on each level of situation awareness category and discuss the
current state-of-the-art for each and highlight the limitations.
We also introduced the tools and prototypes which can be used
for SA systems for either analysis or visualization phases.

ACKNOWLEDGEMENT

This work was supported by the Cyber Security Research
Programme–”Artiﬁcial Intelligence for Automating Response
to Threats” from the Ministry of Business, Innovation, and
Employment (MBIE) of New Zealand as a part of the Catalyst
Strategy Funds under Grant MAUX1912.

REFERENCES

[1] M. Abadi, A. Chu, I. Goodfellow, H. B. McMahan,
I. Mironov, K. Talwar, and L. Zhang, “Deep learning
with differential privacy,” in Proceedings of the 2016
ACM SIGSAC Conference on Computer and Communi-
cations Security, 2016, pp. 308–318.

[2] H. Abdi and D. Valentin, “Multiple correspondence
analysis,” Encyclopedia of measurement and statistics,
vol. 2, no. 4, pp. 651–657, 2007.

[3] A. Adenusi Dauda, E. Ayeleso, A. Kawonise,
J. Ekuewa, and A. Adebayo, “Development of threats
detection model for cyber situation awareness,” Technol-
ogy (ICONSEET), vol. 2, no. 15, pp. 113–126, 2017.
[4] H. Alavizadeh, H. Alavizadeh, D. S. Kim, J. Jang-
Jaccard, and M. N. Torshiz, “An automated security

19

analysis framework and implementation for mtd tech-
niques on cloud,” in Information Security and Cryptol-
ogy – ICISC 2019, J. H. Seo, Ed.
Cham: Springer
International Publishing, 2020, pp. 150–164.

[5] H. Alavizadeh, J. B. Hong, D. S. Kim, and J. Jang-
Jaccard, “Evaluating the effectiveness of shufﬂe and
redundancy mtd techniques in the cloud,” Computers
& Security, vol. 102, p. 102091, 2021.

[6] H. Alavizadeh, H. Alavizadeh, and J. Jang-Jaccard,
“Cyber situation awareness monitoring and proactive re-
sponse for enterprises on the cloud,” in 2020 IEEE 19th
International Conference on Trust, Security and Privacy
in Computing and Communications (TrustCom).
IEEE,
2020, pp. 1276–1284.

[7] M. Albanese, N. Cooke, G. Coty, D. Hall, C. Healey,
S. Jajodia, P. Liu, M. D. McNeese, P. Ning, D. Reeves
et al., “Computer-aided human centric cyber situation
awareness,” in Theory and Models for Cyber Situation
Awareness. Springer, 2017, pp. 3–25.

[8] R. Almadhoun, M. Kadadha, M. Alhemeiri, M. Alshe-
hhi, and K. Salah, “A user authentication scheme of iot
devices using blockchain-enabled fog nodes,” in 2018
IEEE/ACS 15th international conference on computer
systems and applications (AICCSA).
IEEE, 2018, pp.
1–8.

[9] E. Alpaydin, Introduction to Machine Learning, 3rd ed.,
ser. Adaptive Computation and Machine Learning se-
ries. The MIT Press, 2014.

[10] ——, Introduction to Machine Learning, 4th ed., ser.
Adaptive Computation and Machine Learning series.
The MIT Press, 2020.

[11] M. Angelini, N. Prigent, and G. Santucci, “Percival:
proactive and reactive attack and response assessment
for cyber incidents using visual analytics,” in 2015
IEEE Symposium on Visualization for Cyber Security
(VizSec).

IEEE, 2015, pp. 1–8.

[12] M. Angelini, S. Bonomi, S. Lenti, G. Santucci, and
S. Taggi, “Mad: A visual analytics solution for multi-
step cyber attacks detection,” Journal of Computer
Languages, vol. 52, pp. 10–24, 2019.

[13] G. Ateniese, L. V. Mancini, A. Spognardi, A. Villani,
D. Vitali, and G. Felici, “Hacking smart machines with
smarter ones: How to extract meaningful data from
machine learning classiﬁers,” International Journal of
Security and Networks, vol. 10, no. 3, pp. 137–150,
2015.

[14] T. Back, D. B. Fogel, and Z. Michalewicz, Handbook of
Evolutionary Computation, 1st ed., ser. Computational
Intelligence Library.

IOP Publishing Ltd., 1997.

[15] A. C. Bahnsen, I. Torroledo, L. D. Camacho, and
S. Villegas, “Deepphish: Simulating malicious ai,” in
2018 APWG Symposium on Electronic Crime Research
(eCrime), 2018, pp. 1–8.

[16] P. Barford, Y. Chen, A. Goyal, Z. Li, V. Paxson, and
V. Yegneswaran, “Employing honeynets for network
situational awareness,” in Cyber Situational Awareness.
Springer, 2010, pp. 71–102.

[17] P. Barford, M. Dacier, T. G. Dietterich, M. Fredrikson,

J. Gifﬁn, S. Jajodia, S. Jha, J. Li, P. Liu, P. Ning et al.,
“Cyber sa: Situational awareness for cyber defense,” in
Cyber situational awareness. Springer, 2010, pp. 3–13.
[18] K. Berlin, D. Slater, and J. Saxe, “Malicious behavior
detection using windows audit logs,” in Proceedings of
the 8th ACM Workshop on Artiﬁcial Intelligence and
Security, 2015, pp. 35–44.

[19] D. M. Best, S. Bohn, D. Love, A. Wynne, and W. A.
Pike, “Real-time visualization of network behaviors for
situational awareness,” in Proceedings of the seventh
international symposium on visualization for cyber se-
curity, 2010, pp. 79–90.

[20] C. M. Bishop, Pattern Recognition and Machine Learn-
Springer,

ing (Information Science and Statistics).
2006.

[21] E. Blasch, D. Shen, K. D. Pham, and G. Chen, “Review
of game theory applications for situation awareness,” in
Sensors and Systems for Space Applications VIII, vol.
International Society for Optics and Photonics,
9469.
2015, p. 94690I.

[22] J. M. Bradshaw, M. Carvalho, L. Bunch, T. Eskridge,
P. J. Feltovich, M. Johnson, and D. Kidwell, “Sol: An
agent-based framework for cyber situation awareness,”
KI-K¨unstliche Intelligenz, vol. 26, no. 2, pp. 127–140,
2012.

[23] K. Brancik and G. Ghinita, “The optimization of situa-
tional awareness for insider threat detection,” in Pro-
the ﬁrst ACM conference on Data and
ceedings of
application security and privacy, 2011, pp. 231–236.

[24] M. Brattstrom and P. Morreale, “Scalable agentless
cloud network monitoring,” in 2017 IEEE 4th Interna-
tional Conference on Cyber Security and Cloud Com-
puting (CSCloud).

IEEE, 2017, pp. 171–176.

[25] J. Brynielsson, U. Franke, and S. Varga, “Cyber situ-
ational awareness testing,” in Combatting Cybercrime
and Cyberterrorism. Springer, 2016, pp. 209–233.
[26] L. Bunch, J. M. Bradshaw, M. Carvalho, T. Eskridge,
P. J. Feltovich, J. Lott, and A. Uszok, “Human-agent
teamwork in cyber operations: supporting co-evolution
of tasks and artifacts with luna,” in German Conference
on Multiagent System Technologies.
Springer, 2012,
pp. 53–67.

[27] S. Chakradeo, B. Reaves, P. Traynor, and W. Enck,
“Mast: Triage for market-scale mobile malware anal-
ysis,” in Proceedings of the sixth ACM conference on
Security and privacy in wireless and mobile networks,
2013, pp. 13–24.

[28] K. Champaneria and B. S. K. Panchal, “Survey of
adaptive resonance theory techniques in ids,” Interna-
tional Journal of Emerging Technology and Advanced
Engineering, vol. 4, no. 12, 2014.

[29] A. K. Charles, N. Pissinou, A. Busovaca, and K. Makki,
“Belief-free equilibrium of packet forwarding game in
ad hoc networks under imperfect monitoring,” in Inter-
national Performance Computing and Communications
Conference.
IEEE, 2010, pp. 315–324.

[30] K. Chawda and A. D. Patel, “Dynamic & hybrid
honeypot model for scalable network monitoring,” in

20

International conference on information communication
and embedded systems (ICICES2014).
IEEE, 2014, pp.
1–5.

[31] F. Chen, Y. Shen, G. Zhang, and X. Liu, “The network
security situation predicting technology based on the
small-world echo state network,” in 2013 IEEE 4th
International Conference on Software Engineering and
Service Science.

IEEE, 2013, pp. 377–380.

[32] K. Chung, C. A. Kamhoua, K. A. Kwiat, Z. T. Kalbar-
czyk, and R. K. Iyer, “Game theory with learning
for cyber security monitoring,” in 2016 IEEE 17th
International Symposium on High Assurance Systems
Engineering (HASE).

IEEE, 2016, pp. 1–8.

[33] M. H. D. LeBlanc, Writing Secure Code.

Pearson

Education, 2002, vol. 2.

[34] DARPA, “Cyber grand challenge (cgc),” https://www.
darpa.mil/program/cyber-grand-challenge, cited August
2020.

[35] ——, “Cyber-hunting at scale (chase) - defense ad-
vanced research projects agency,” https://www.darpa.
mil/program/cyber-hunting-at-scale, cited August 2020.
[36] D. Dasgupta and F. Gonz´alez, “An immunity-based
technique to characterize intrusions in computer net-
works,” IEEE Transactions on evolutionary computa-
tion, vol. 6, no. 3, pp. 281–291, 2002.

[37] L. Deng and D. Yu, “Deep learning: methods and appli-
cations,” Foundations and trends in signal processing,
vol. 7, no. 3–4, pp. 197–387, 2014.

[38] T. G. Dietterich, X. Bao, V. Keiser, and J. Shen, Ma-
chine Learning Methods for High Level Cyber Situation
Awareness. Boston, MA: Springer US, 2010, pp. 227–
247.

[39] V. Dutt, Y.-S. Ahn, and C. Gonzalez, “Cyber situa-
tion awareness: modeling detection of cyber attacks
with instance-based learning theory,” Human Factors,
vol. 55, no. 3, pp. 605–618, 2013.

[40] R. C. Eberhart and J. Kennedy, “A new optimizer
using particle swarm theory,” in Proceedings of the
6th International Symposium on Micro Machine and
Human Science.

IEEE, 1995, pp. 39–43.

[41] M. R. Endsley, “Design and evaluation for situation
awareness enhancement,” in Proceedings of the Human
Factors Society annual meeting, vol. 32, no. 2. SAGE
Publications Sage CA: Los Angeles, CA, 1988, pp. 97–
101.

[42] ——, “Measurement of situation awareness in dynamic
systems,” Human factors, vol. 37, no. 1, pp. 65–84,
1995.

[43] J. Ezick, T. Henretty, M. Baskaran, R. Lethin, J. Feo, T.-
C. Tuan, C. Coley, L. Leonard, R. Agrawal, B. Parsons
et al., “Combining tensor decompositions and graph
analytics to provide cyber situational awareness at hpc
scale,” in 2019 IEEE High Performance Extreme Com-
puting Conference (HPEC).

IEEE, 2019, pp. 1–7.

[44] C. Fachkha and M. Debbabi, “Darknet as a source
of cyber intelligence: Survey, taxonomy, and charac-
terization,” IEEE Communications Surveys & Tutorials,
vol. 18, no. 2, pp. 1197–1227, 2015.

[45] G. Fink, D. Best, D. Manz, V. Popovsky, and
B. Endicott-Popovsky, “Gamiﬁcation for measuring cy-
ber security situational awareness,” in International
Conference on Augmented Cognition. Springer, 2013,
pp. 656–665.

[46] U. Fiore, F. Palmieri, A. Castiglione, and A. De Santis,
“Network anomaly detection with the restricted boltz-
mann machine,” Neurocomputing, vol. 122, pp. 13–23,
2013.

[47] F. Fischer and D. A. Keim, “Nstreamaware: Real-time
visual analytics for data streams to enhance situational
awareness,” in Proceedings of the Eleventh Workshop
on Visualization for Cyber Security, 2014, pp. 65–72.
[48] W. M. Fitzgerald, U. Neville, and S. N. Foley, “Mason:
Mobile autonomic security for network access con-
trols,” Journal of Information Security and Applications,
vol. 18, no. 1, pp. 14–29, 2013.

[49] U. Franke and J. Brynielsson, “Cyber situational
awareness–a systematic review of the literature,” Com-
puters & security, vol. 46, pp. 18–31, 2014.

[50] O. B. Fredj, “A realistic graph-based alert correlation
system,” Security and Communication Networks, vol. 8,
no. 15, pp. 2477–2493, 2015.

[51] I. Friedberg, F. Skopik, and R. Fiedler, “Cyber situa-
tional awareness through network anomaly detection:
state of the art and new approaches,” e & i Elektrotech-
nik und Informationstechnik, vol. 132, no. 2, pp. 101–
105, 2015.

[52] J. R. Goodall, E. D. Ragan, C. A. Steed, J. W. Reed,
G. D. Richardson, K. M. Huffer, R. A. Bridges, and
J. A. Laska, “Situ: Identifying and explaining suspicious
behavior in networks,” IEEE transactions on visualiza-
tion and computer graphics, vol. 25, no. 1, pp. 204–214,
2018.

[53] A. Gouglidis, B. Green, J. Busby, M. Rounceﬁeld,
D. Hutchison, and S. Schauer, “Threat awareness for
critical infrastructures resilience,” in 2016 8th Inter-
national Workshop on Resilient Networks Design and
Modeling (RNDM).

IEEE, 2016, pp. 196–202.

[54] K. Guang, T. Guangming, D. Xia, W. Shuo, and W. Kun,
“A network security situation assessment method based
on attack intention perception,” in 2016 2nd IEEE Inter-
national Conference on Computer and Communications
(ICCC).

IEEE, 2016, pp. 1138–1142.
[55] W. Guo, X. Tang, J. Cheng, J. Xu, C. Cai, and
Y. Guo, “Ddos attack situation information fusion
method based on dempster-shafer evidence theory,” in
International Conference on Artiﬁcial Intelligence and
Security. Springer, 2019, pp. 396–407.

[56] Y. Guo, Z. Zhang, Y. Guo, and X. Guo, “Nudging
personalized password policies by understanding users’
personality,” Computers & Security, vol. 94, 2020.
[57] Y. Guo and A. Tyagi, “Voice-based user-device physical
unclonable functions for mobile device authentication,”
Journal of Hardware and Systems Security, vol. 1, no. 1,
pp. 18–37, 2017.

[58] L. Harrison,

Iannacone,
E. Downing, E. M. Ferragut, and J. R. Goodall, “situ:

J. Laska, R. Spahn, M.

21

Situational understanding and discovery for cyber at-
tacks,” in 2012 IEEE Conference on Visual Analytics
Science and Technology (VAST).
IEEE, 2012, pp. 307–
308.

[59] C. He and Y. Li, “Survey of network security situa-
tion awareness,” in 2017 International Conference on
Computational Science and Engineering (ICCSE 2017).
Atlantis Press, 2017.

[60] F. He, Y. Zhang, H. Liu, and W. Zhou, “Scpn-based
game model for security situational awareness in the
intenet of things,” in 2018 IEEE Conference on Com-
munications and Network Security (CNS).
IEEE, 2018,
pp. 1–5.

[61] C. G. Healey, L. Hao, and S. E. Hutchinson, “Visualiza-
tions and analysts,” in Cyber Defense and Situational
Awareness. Springer, 2014, pp. 145–165.

[62] B. Hitaj, G. Ateniese, and F. Perez-Cruz, “Deep models
under the gan:
information leakage from collabora-
tive deep learning,” in Proceedings of the 2017 ACM
SIGSAC Conference on Computer and Communications
Security, 2017, pp. 603–618.

[63] B. Hitaj, P. Gasti, G. Ateniese, and F. Perez-Cruz, “Pass-
gan: A deep learning approach for password guessing,”
in International Conference on Applied Cryptography
and Network Security. Springer, 2019, pp. 217–237.
[64] K. Hornik, M. Stinchcombe, and H. White, “Multi-
layer feedforward networks are universal approxima-
tors,” Neural Networks, vol. 2, no. 5, pp. 359–366, 1989.
[65] H. Hu, H. Zhang, Y. Liu, and Y. Wang, “Quantitative
method for network security situation based on attack
prediction,” Security and Communication Networks, vol.
2017, 2017.

[66] J. Hu, D. Ma, L. Chen, H. Yan, and C. Hu, “An
improved prediction model for the network security
situation,” in International Conference on Smart Com-
puting and Communication. Springer, 2019, pp. 22–33.
[67] J. Hu, D. Ma, C. Liu, Z. Shi, H. Yan, and C. Hu,
“Network security situation prediction based on mr-
svm,” IEEE Access, vol. 7, pp. 130 937–130 945, 2019.
[68] W. Hu and Y. Tan, “Generating adversarial malware
examples for black-box attacks based on gan,” arXiv
preprint arXiv:1702.05983, 2017.

[69] K. M. Huffer and J. W. Reed, “Situational awareness
of network system roles (sansr),” in Proceedings of
the 12th Annual Conference on Cyber and Information
Security Research, 2017, pp. 1–4.

[70] M. Hus´ak, J. Kom´arkov´a, E. Bou-Harb, and P. ˇCeleda,
“Survey of attack projection, prediction, and forecasting
in cyber security,” IEEE Communications Surveys &
Tutorials, vol. 21, no. 1, pp. 640–660, 2018.

[71] F. Iglesias and T. Zseby, “Analysis of network trafﬁc
features for anomaly detection,” Machine Learning, vol.
101, no. 1-3, pp. 59–84, 2015.

[72] G. Ioannou, P. Louvieris, and N. Clewley, “A markov
multi-phase transferable belief model for cyber situ-
ational awareness,” IEEE Access, vol. 7, pp. 39 305–
39 320, 2019.

[73] A. K. Jain and B. B. Gupta, “A novel approach to

protect against phishing attacks at client side using auto-
updated white-list,” EURASIP Journal on Information
Security, vol. 2016, no. 1, p. 9, 2016.

[74] J. Jang, D. Brumley, and S. Venkataraman, “Bitshred:
feature hashing malware for scalable triage and se-
mantic analysis,” in Proceedings of
the 18th ACM
conference on Computer and communications security,
2011, pp. 309–320.

[75] M. Janiszewski, A. Felkner, and P. Lewandowski, “A
novel approach to national-level cyber risk assessment
based on vulnerability management and threat intelli-
gence,” Journal of Telecommunications and Information
Technology, 2019.

[76] A. Javaid, Q. Niyaz, W. Sun, and M. Alam, “A deep
learning approach for network intrusion detection sys-
tem,” in Proceedings of the 9th EAI International Con-
ference on Bio-inspired Information and Communica-
tions Technologies (formerly BIONETICS), 2016, pp.
21–26.

[77] M. Jiang, “Improving situational awareness with col-
lective artiﬁcial intelligence over knowledge graphs,”
in Artiﬁcial Intelligence and Machine Learning for
Multi-Domain Operations Applications II, vol. 11413.
International Society for Optics and Photonics, 2020, p.
114130J.

[78] T. Joachims, “Transductive inference for text classiﬁca-
tion using support vector machines,” in Proceedings of
the 16th International Conference on Machine Learn-
ing. Morgan Kaufmann, 1999, pp. 200–209.

[79] K. S. Jones, “A statistical interpretation of term speci-
ﬁcity and its application in retrieval,” Journal of docu-
mentation, 1972.

[80] K. A. D. Jong, Evolutionary computation: A uniﬁed

approach. MIT Press, 2006.

[81] N. Kaloudi and J. Li, “The ai-based cyber threat land-
scape: A survey,” ACM Computing Surveys (CSUR),
vol. 53, no. 1, pp. 1–34, 2020.

[82] T. Kanstr´en and A. Evesti, “A study on the state of
practice in security situational awareness,” in 2016
IEEE International Conference on Software Quality,
Reliability and Security Companion (QRS-C).
IEEE,
2016, pp. 69–76.

[83] H. G. Kayacik, A. N. Zincir-Heywood, and M. I.
Heywood, “Selecting features for intrusion detection: A
feature relevance analysis on kdd 99 intrusion detection
datasets,” in Proceedings of the third annual conference
on privacy, security and trust, vol. 94. Citeseer, 2005,
pp. 1723–1722.

[84] M. A. Khan and K. Salah, “Iot security: Review,
blockchain solutions, and open challenges,” Future
Generation Computer Systems, vol. 82, pp. 395–411,
2018.

[85] D. Kienzle, N. Evans, and M. Elder, “Nice: Network
introspection by collaborating endpoints,” in 2013 IEEE
Conference on Communications and Network Security
(CNS).

IEEE, 2013, pp. 411–412.

[86] J. Kim, J. Kim, H. L. T. Thu, and H. Kim, “Long short
term memory recurrent neural network classiﬁer for

22

intrusion detection,” in 2016 International Conference
on Platform Technology and Service (PlatCon).
IEEE,
2016, pp. 1–5.

[87] D. Kirat, L. Nataraj, G. Vigna, and B. Manjunath, “Sig-
mal: A static signal processing based malware triage,”
in Proceedings of the 29th Annual Computer Security
Applications Conference, 2013, pp. 89–98.

[88] D. Kirat, J. Jang, and M. Stoecklin, “Deeplocker–
locksmithing,”

concealing targeted attacks with ai
Blackhat USA, 2018.

[89] I. Koniaris, G. Papadimitriou, P. Nicopolitidis, and
M. Obaidat, “Honeypots deployment for the analysis
and visualization of malware activity and malicious
connections,” in 2014 IEEE international conference on
communications (ICC).
IEEE, 2014, pp. 1819–1824.
[90] I. Kotenko, E. Doynikova, A. Chechulin, and A. Fe-
dorchenko, “Ai-and metrics-based vulnerability-centric
cyber security assessment and countermeasure selec-
tion,” in Guide to Vulnerability Analysis for Computer
Networks and Systems. Springer, 2018, pp. 101–130.
[91] G. Kou, S. Wang, and G. Tang, “Research on key
technologies of network security situational awareness
for attack tracking prediction,” Chinese Journal of Elec-
tronics, vol. 28, no. 1, pp. 162–171, 2019.

[92] W. Kun, Q. Hui, Y. Haopu, and H. Di, “Network
security situation evaluation method based on attack
intention recognition,” in 2015 4th International Con-
ference on Computer Science and Network Technology
(ICCSNT), vol. 1.

IEEE, 2015, pp. 919–924.

[93] A. Lakhotia, A. Walenstein, C. Miles, and A. Singh,
“Vilo: a rapid learning nearest-neighbor classiﬁer for
malware triage,” Journal of Computer Virology and
Hacking Techniques, vol. 9, no. 3, pp. 109–123, 2013.
[94] K. Lakkaraju, W. Yurcik, and A. J. Lee, “Nvisionip:
netﬂow visualizations of system state for security sit-
uational awareness,” in Proceedings of the 2004 ACM
workshop on Visualization and data mining for com-
puter security, 2004, pp. 65–72.

[95] H. Larochelle and Y. Bengio, “Classiﬁcation using dis-
criminative restricted boltzmann machines,” in Proceed-
ings of the 25th international conference on Machine
learning, 2008, pp. 536–543.

[96] Y.-B. Leau and S. Manickam, “Network security sit-
uation prediction: a review and discussion,” in Inter-
national Conference on Soft Computing, Intelligence
Systems, and Information Technology. Springer, 2015,
pp. 424–435.

[97] D. Li and Z. Liu, “Situation element extraction of net-
work security based on logistic regression and improved
particle swarm optimization,” in 2013 Ninth Interna-
tional Conference on Natural Computation (ICNC).
IEEE, 2013, pp. 569–573.

[98] Y. Li, G.-q. Huang, C.-z. Wang, and Y.-c. Li, “Analysis
framework of network security situational awareness
and comparison of implementation methods,” EURASIP
Journal on Wireless Communications and Networking,
vol. 2019, no. 1, p. 205, 2019.

[99] Y. Li, “Research on network security situation aware-

ness strategy based on markov game model,” in The
International Conference on Cyber Security Intelligence
and Analytics. Springer, 2020, pp. 603–608.

[100] Z. Li, A. Goyal, and Y. Chen, “Honeynet-based botnet
Springer,

scan trafﬁc analysis,” in Botnet Detection.
2008, pp. 25–44.

[101] Y. Liang, H.-Q. Wang, and J.-B. Lai, “Quantiﬁcation of
network security situational awareness based on evo-
lutionary neural network,” in 2007 International Con-
ference on Machine Learning and Cybernetics, vol. 6.
Ieee, 2007, pp. 3267–3272.

[102] Z. Lin, G. Chen, W. Guo, and Y. Liu, “Pso-bpnn-
based prediction of network security situation,” in 2008
3rd International Conference on Innovative Computing
Information and Control.

IEEE, 2008, pp. 37–37.

[103] P. Liu, X. Jia, S. Zhang, X. Xiong, Y.-C. Jhi, K. Bai,
and J. Li, “Cross-layer damage assessment for cyber
situational awareness,” in Cyber Situational Awareness.
Springer, 2010, pp. 155–176.

[104] S.-c. Liu and Y. Liu, “Network security risk assessment
method based on hmm and attack graph model,” in
2016 17th IEEE/ACIS International Conference on Soft-
ware Engineering, Artiﬁcial Intelligence, Networking
and Parallel/Distributed Computing (SNPD).
IEEE,
2016, pp. 517–522.

[105] G. Lu and D. Feng, “Network security situation aware-
ness for industrial control system under integrity at-
tacks,” in 2018 21st International Conference on Infor-
mation Fusion (FUSION). IEEE, 2018, pp. 1808–1815.
[106] F. Mansmann, M. Krstajic, F. Fischer, and E. Bertini,
“Streamsqueeze: a dynamic stream visualization for
monitoring of event data,” in Visualization and Data
Analysis 2012, vol. 8294.
International Society for
Optics and Photonics, 2012, p. 829404.

[107] S. McElwee, “Active learning intrusion detection using
k-means clustering selection,” in SoutheastCon 2017.
IEEE, 2017, pp. 1–7.

[108] S. McElwee, J. Heaton, J. Fraley, and J. Cannady, “Deep
learning for prioritizing and responding to intrusion
detection alerts,” in MILCOM 2017-2017 IEEE Military
Communications Conference (MILCOM).
IEEE, 2017,
pp. 1–5.

[109] S. McKenna, D. Staheli, and M. Meyer, “Unlocking
user-centered design methods for building cyber se-
curity visualizations,” in 2015 IEEE Symposium on
Visualization for Cyber Security (VizSec).
IEEE, 2015,
pp. 1–8.

[110] J. Meng, C. Ma, J.-L. He, and H. Zhang, “Network
security situation prediction model based on hhga-rbf
neural network,” Computer Science, vol. 38, no. 7, p. 70,
2011.

[111] S. Mukkamala, G. Janoski, and A. Sung, “Intrusion
detection using neural networks and support vector
machines,” in Proceedings of the 2002 International
Joint Conference on Neural Networks. IJCNN’02 (Cat.
No. 02CH37290), vol. 2.
IEEE, 2002, pp. 1702–1707.
[112] H. Nakakoji, Y. Fujii, Y. Isobe, T. Shigemoto, T. Kito,
N. Hayashi, N. Kawaguchi, N. Shimotsuma, and

23

H. Kikuchi, “Proposal and evaluation of cyber defense
system using blacklist reﬁned based on authentication
results,” in 2016 19th International Conference on
Network-Based Information Systems (NBiS).
IEEE,
2016, pp. 135–139.

[113] A. K. Nandi, H. R. Medal, and S. Vadlamani, “Interdict-
ing attack graphs to protect organizations from cyber at-
tacks: A bi-level defender–attacker model,” Computers
& Operations Research, vol. 75, pp. 118–131, 2016.

[114] L. Nataraj, S. Karthikeyan, G. Jacob, and B. S. Man-
junath, “Malware images: visualization and automatic
classiﬁcation,” in Proceedings of the 8th international
symposium on visualization for cyber security, 2011,
pp. 1–7.

[115] K. Neshatian, M. Zhang, and P. Andreae, “A ﬁlter
approach to multiple feature construction for symbolic
learning classiﬁers using genetic programming,” IEEE
Transections Evolutionary Computation, vol. 16, no. 5,
pp. 645–661, 2012.

[116] H. Okhravi, J. Haines, and K. Ingols, “Achieving cyber
survivability in a contested environment using a cyber
moving target,” High Frontier Journal, vol. 7, no. 3, pp.
9–13, 2011.

[117] B. Pal, T. Daniel, R. Chatterjee, and T. Ristenpart,
“Beyond credential stufﬁng: Password similarity models
using neural networks,” in 2019 IEEE Symposium on
Security and Privacy (SP).
IEEE, 2019, pp. 417–434.
[118] N. Papernot, P. McDaniel, S. Jha, M. Fredrikson, Z. B.
Celik, and A. Swami, “The limitations of deep learning
in adversarial settings,” in 2016 IEEE European sympo-
sium on security and privacy (EuroS&P).
IEEE, 2016,
pp. 372–387.

[119] N. Papernot, P. McDaniel, X. Wu, S. Jha, and A. Swami,
“Distillation as a defense to adversarial perturbations
against deep neural networks,” in 2016 IEEE Sympo-
sium on Security and Privacy (SP).
IEEE, 2016, pp.
582–597.

[120] D. Pasquini, G. Ateniese, and M. Bernsaschi, “Inter-
pretable probabilistic password strength meters via deep
learning,” arXiv preprint arXiv:2004.07179, 2020.
[121] M. Pendleton, R. Garcia-Lebron, J.-H. Cho, and S. Xu,
“A survey on systems security metrics,” ACM Comput-
ing Surveys (CSUR), vol. 49, no. 4, pp. 1–35, 2016.

[122] I. Prieto, E. Maga˜na, D. Morat´o, and M. Izal, “Botnet
detection based on dns records and active probing,” in
Proceedings of the International Conference on Security
and Cryptography.

IEEE, 2011, pp. 307–316.

[123] N. Provos et al., “A virtual honeypot framework.” in
USENIX Security Symposium, vol. 173, no. 2004, 2004,
pp. 1–14.

[124] Z.-Y. Qu, Y.-Y. Li et al., “A network security situation
evaluation method based on ds evidence theory,” in
2010 The 2nd Conference on Environmental Science
and Information Application Technology, vol. 2.
IEEE,
2010, pp. 496–499.

[125] P. Rajivan and N. Cooke, “Impact of team collaboration
on cybersecurity situational awareness,” in Theory and
Models for Cyber Situation Awareness. Springer, 2017,

pp. 203–226.
[126] Rhodes, “Artiﬁcial

intelligence and offensive cyber
weapons,” Strategic Comments, vol. 25, no. 10, pp. x–
xii, 2019.

[127] M. A. Salama, H. F. Eid, R. A. Ramadan, A. Darwish,
and A. E. Hassanien, “Hybrid intelligent intrusion de-
tection scheme,” in Soft computing in industrial appli-
cations. Springer, 2011, pp. 293–303.

[128] T. Segaran, Programming Collective

Intelligence,

1st ed. O’Reilly, 2007.

[129] J. Seymour and P. Tully, “Weaponizing data science for
social engineering: Automated e2e spear phishing on
twitter,” Black Hat USA, vol. 37, pp. 1–39, 2016.
[130] D. Shen, G. Chen, J. B. Cruz Jr, L. Haynes, M. Kruger,
and E. Blasch, “A markov game theoretic data fusion
approach for cyber situational awareness,” in Multi-
sensor, Multisource Information Fusion: Architectures,
Algorithms, and Applications 2007, vol. 6571.
In-
ternational Society for Optics and Photonics, 2007, p.
65710F.

[131] Q. Shi, J. Petterson, G. Dror, J. Langford, A. Smola, and
S. Vishwanathan, “Hash kernels for structured data,”
The Journal of Machine Learning Research, vol. 10,
pp. 2615–2637, 2009.

[132] R. Shokri and V. Shmatikov, “Privacy-preserving deep
learning,” in Proceedings of the 22nd ACM SIGSAC
conference on computer and communications security,
2015, pp. 1310–1321.

[133] B. Simon, “How artiﬁcial intelligence will shape the

future of malware,” 2019.

[134] F. Skopik, G. Settanni, and R. Fiedler, “A problem
shared is a problem halved: A survey on the dimensions
of collective cyber defense through security information
sharing,” Computers & Security, vol. 60, pp. 154–176,
2016.

[135] M. P. Stoecklin, “Deeplocker: How ai can power a
stealthy new breed of malware,” Security Intelligence,
August, vol. 8, 2018.

[136] P. Sun, J. Li, M. Z. Alam Bhuiyan, L. Wang, and
B. Li, “Modeling and clustering attacker activities in
IoT through machine learning techniques,” Information
Sciences, vol. 479, pp. 456–471, apr 2019.

[137] X. Sun, P. Zhang, J. K. Liu, J. Yu, and W. Xie, “Private
machine learning classiﬁcation based on fully homo-
morphic encryption,” IEEE Transactions on Emerging
Topics in Computing, 2018.

[138] X. Sun, J. Dai, A. Singhal, and P. Liu, “Enterprise-
level cyber situation awareness,” in Theory and models
for cyber situation awareness. Springer, 2017, pp. 66–
109.

[139] C. Tang, Y. Xie, B. Qiang, X. Wang, and R. Zhang,
“Security situation prediction based on dynamic bp
neural with covariance,” Procedia Engineering, vol. 15,
pp. 3313–3317, 2011.

[140] T. A. Tang, L. Mhamdi, D. McLernon, S. A. R. Zaidi,
and M. Ghogho, “Deep learning approach for network
intrusion detection in software deﬁned networking,” in
2016 International Conference on Wireless Networks

24

and Mobile Communications (WINCOM).
pp. 258–263.

IEEE, 2016,

[141] X. Tao, D. Kong, Y. Wei, and Y. Wang, “A big network
trafﬁc data fusion approach based on ﬁsher and deep
auto-encoder,” Information, vol. 7, no. 2, p. 20, 2016.
[142] M. Tavallaee, E. Bagheri, W. Lu, and A. A. Ghorbani,
“A detailed analysis of the kdd cup 99 data set,” in
2009 IEEE symposium on computational intelligence
for security and defense applications.
IEEE, 2009, pp.
1–6.

[143] O. Thonnard and M. Dacier, “A framework for attack
patterns’ discovery in honeynet data,” Digital Investiga-
tion, vol. 5, no. SUPPL., pp. S128–S139, sep 2008.

[144] H. Tianﬁeld, “Cyber security situational awareness,”
in 2016 IEEE international conference on internet
of
things (iThings) and IEEE green computing and
communications (GreenCom) and IEEE cyber, physical
and social computing (CPSCom) and IEEE smart data
(SmartData).
IEEE, 2016, pp. 782–787.

[145] F. Tram`er, F. Zhang, A. Juels, M. K. Reiter, and
T. Ristenpart, “Stealing machine learning models via
prediction apis,” in 25th {USENIX} Security Symposium
({USENIX} Security 16), 2016, pp. 601–618.

[146] F. Tramer, N. Carlini, W. Brendel, and A. Madry, “On
adaptive attacks to adversarial example defenses,” arXiv
preprint arXiv:2002.08347, 2020.

[147] K. Trieu and Y. Yang, “Artiﬁcial

intelligence-based
password brute force attacks,” in In Proceedings of
the 13th Annual Conference of
the Midwest AIS
(MWAIS’18), 2018.

[148] R. Vaarandi, Tools and techniques for event log analysis.
Tallinn University of Technology Press, 2005.
[149] R. Vaarandi, B. Blumbergs, and M. Kont, “An un-
supervised framework for detecting anomalous mes-
sages from syslog log ﬁles,” in NOMS 2018-2018
IEEE/IFIP Network Operations and Management Sym-
posium.

IEEE, 2018, pp. 1–6.

[150] A. Valdes and K. Skinner, “Adaptive, model-based
monitoring for cyber attack detection,” in International
Workshop on Recent Advances in Intrusion Detection.
Springer, 2000, pp. 80–93.

[151] G. Vandenberghe, “Network trafﬁc exploration applica-
tion: A tool to assess, visualize, and analyze network
security events,” in International Workshop on Visual-
ization for Computer Security.
Springer, 2008, pp.
181–196.

[152] R. Vinayakumar, P. Poornachandran, and K. Soman,
“Scalable framework for cyber threat situational aware-
ness based on domain name systems data analysis,” in
Big data in engineering applications. Springer, 2018,
pp. 113–142.

[153] R. Vinayakumar, K. Soman, P. Poornachandran,
S. Akarsh, and M. Elhoseny, “Deep learning framework
for cyber threat situational awareness based on email
and url data analysis,” in Cybersecurity and Secure
Information Systems. Springer, 2019, pp. 87–124.

[154] H. Wang, Y. Liang, and X. Liu, “Stochastic game
theoretic method of quantiﬁcation for network situa-

tional awareness,” in 2008 International Conference on
Internet Computing in Science and Engineering.
IEEE,
2008, pp. 312–316.

[155] C. J. Watkins and P. Dayan, “Q-learning,” Machine

learning, vol. 8, no. 3-4, pp. 279–292, 1992.

[156] J. Webb, A. Ahmad, S. B. Maynard, and G. Shanks, “A
situation awareness model for information security risk
management,” Computers & security, vol. 44, pp. 1–15,
2014.

[157] M. Weir, S. Aggarwal, B. De Medeiros, and B. Glodek,
“Password cracking using probabilistic context-free
grammars,” in 2009 30th IEEE Symposium on Security
and Privacy.
IEEE, 2009, pp. 391–405.

[158] K. Weiss and T. Khoshgoftaar, “A survey of transfer
learning,” Journal of Big Data, vol. 3, no. 1, pp. 1–40,
2016.

[159] J. White, J. S. Park, C. A. Kamhoua, and K. A. Kwiat,
“Game theoretic attack analysis in online social network
(osn) services,” in Proceedings of the 2013 ieee/acm
international conference on advances in social networks
analysis and mining, 2013, pp. 1012–1019.

[160] L. Williams, R. Lippmann, and K. Ingols, “Garnet: A
graphical attack graph and reachability network evalu-
ation tool,” in International Workshop on Visualization
for Computer Security. Springer, 2008, pp. 44–59.

[161] ——, “An interactive attack graph cascade and reach-
ability display,” in VizSEC 2007. Springer, 2008, pp.
221–236.

[162] J. Wu, K. Ota, M. Dong, J. Li, and H. Wang, “Big data
analysis-based security situational awareness for smart
grid,” IEEE Transactions on Big Data, vol. 4, no. 3, pp.
408–417, 2016.

[163] R. Xi, S. Jin, X. Yun, and Y. Zhang, “Cnssa: A compre-
hensive network security situation awareness system,”
in 2011IEEE 10th International Conference on Trust,
Security and Privacy in Computing and Communica-
tions.

IEEE, 2011, pp. 482–487.

[164] Z. Xia, P. Yi, Y. Liu, B. Jiang, W. Wang, and T. Zhu,
“Genpass: a multi-source deep learning model for pass-
word guessing,” IEEE Transactions on Multimedia,
vol. 22, no. 5, pp. 1323–1332, 2019.

[165] W. Xing-zhu, “Network information security situation
assessment based on bayesian network,” International
Journal of Security and its Applications, vol. 10, no. 5,
pp. 129–138, 2016.

[166] B. Xue, M. Zhang, W. Browne, and X. Yao, “A sur-
vey on evolutionary computation approaches to feature
selection,” IEEE Transactions on Evolutionary Compu-
tation, vol. 20, no. 4, pp. 606–626, 2016.

[167] S. J. Yang, H. Du, J. Holsopple, and M. Sudit, “Attack
projection,” in Cyber Defense and Situational Aware-
ness. Springer, 2014, pp. 239–261.

[168] Y. Yao, B. Viswanath, J. Cryan, H. Zheng, and B. Y.
Zhao, “Automated crowdturﬁng attacks and defenses
in online review systems,” in Proceedings of the 2017
ACM SIGSAC Conference on Computer and Communi-
cations Security, 2017, pp. 1143–1158.

[169] J. Yen, M. McNeese, T. Mullen, D. Hall, X. Fan,

25

and P. Liu, “Rpd-based hypothesis reasoning for cyber
situation awareness,” in Cyber situational awareness.
Springer, 2010, pp. 39–49.

[170] X. Yin, W. Yurcik, and A. Slagell, “The design of
visﬂowconnect-ip: a link analysis system for ip secu-
rity situational awareness,” in Third IEEE International
Workshop on Information Assurance (IWIA’05).
IEEE,
2005, pp. 141–153.

[171] L. Ying, L. Bingyang, and W. Huiqiang, “Dynamic
awareness of network security situation based on
stochastic game theory,” in The 2nd International Con-
ference on Software Engineering and Data Mining.
IEEE, 2010, pp. 101–105.

[172] W. Yu, S. Wei, D. Shen, M. Blowers, E. P. Blasch,
K. D. Pham, G. Chen, H. Zhang, and C. Lu, “On
detection and visualization techniques for cyber security
situation awareness,” in Sensors and Systems for Space
Applications VI, vol. 8739.
International Society for
Optics and Photonics, 2013, p. 87390R.

[173] Y. Yuan and F. Sun, “Data fusion-based resilient control
system under dos attacks: A game theoretic approach,”
International Journal of Control, Automation and Sys-
tems, vol. 13, no. 3, pp. 513–520, 2015.

[174] H. Zhang, Y. Yi, J. Wang, N. Cao, and Q. Duan,
“Network security situation awareness framework based
on threat intelligence,” Computers, Materials and Con-
tinua, vol. 56, no. 3, pp. 381–399, 2018.

[175] Y. Zhang and S. Jin, “Predicting network security situ-
ation based on a combination model of multiple neural
networks.” Int. J. Software and Informatics, vol. 8, no. 2,
pp. 167–176, 2014.

[176] Y. Zhang, S. Jin, X. Cui, X. Yin, and Y. Pang, “Network
security situation prediction based on bp and rbf neural
network,” in International Conference on Trustworthy
Computing and Services. Springer, 2012, pp. 659–665.
[177] Y. Zhang, X.-B. Tan, X.-L. Cui, and H.-S. Xi, “Network
security situation awareness approach based on markov
game model,” Journal of software, vol. 22, no. 3, pp.
495–508, 2011.

[178] D. Zhao and J. Liu, “Study on network security situ-
ation awareness based on particle swarm optimization
algorithm,” Computers & Industrial Engineering, vol.
125, pp. 764–775, 2018.

[179] R. Zheng, D. Zhang, Q. Wu, M. Zhang, and C. Yang,
“A strategy of network security situation autonomic
awareness,” in International Conference on Network
Computing and Information Security. Springer, 2012,
pp. 632–639.

[180] Y. Zheng, Y. Cao, and C.-H. Chang, “Udhashing: Physi-
cal unclonable function-based user-device hash for end-
point authentication,” IEEE Transactions on Industrial
Electronics, vol. 66, no. 12, pp. 9559–9570, 2019.
[181] C. Zhong, J. Yen, P. Liu, R. F. Erbacher, C. Garneau,
and B. Chen, “Studying analysts’ data triage operations
in cyber defense situational analysis,” in Theory and
Models for Cyber Situation Awareness. Springer, 2017,
pp. 128–169.

