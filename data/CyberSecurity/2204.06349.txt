Secure Formation Control via Edge Computing Enabled by Fully
Homomorphic Encryption and Mixed Uniform-Logarithmic
Quantization

Matteo Marcantoni1, Bayu Jayawardhana2, Mariano Perez Chaher2, Kerstin Bunte1

2
2
0
2

r
p
A
3
1

]

Y
S
.
s
s
e
e
[

1
v
9
4
3
6
0
.
4
0
2
2
:
v
i
X
r
a

Abstract— Recent developments in communication technolo-
gies, such as 5G, together with innovative computing paradigms,
such as edge computing, provide further possibilities for the im-
plementation of real-time networked control systems. However,
privacy and cyber-security concerns arise when sharing private
data between sensors, agents and a third-party computing
facility. In this paper, a secure version of the distributed
formation control is presented, analyzed and simulated, where
gradient-based formation control law is implemented in the
edge, with sensor and actuator information being secured by
fully homomorphic encryption method based on learning with
error (FHE-LWE) combined with a proposed mixed uniform-
logarithmic quantizer (MULQ). The novel quantizer is shown
to be suitable for realizing secure control systems with FHE-
LWE where the critical real-time information can be quantized
into a prescribed bounded space of plaintext while satisfying
a sector bound condition whose lower and upper-bound can
be made sufﬁciently close to an identity. An absolute stability
analysis is presented, that shows the asymptotic stability of the
closed-loop secure control system.

I. INTRODUCTION

Recent advances in communications technology, such as
5G, offer ultra-low latency and highly reliable wireless
information exchange paving the way for pervasive edge
computing for industrial internet-of-things (IoT) applications
[1]. In fact, the combination of 5G and high-performance
computing infrastructure can enable the deployment of real-
time networked control systems via edge servers, where
sensing and control information are exchanged in real-time
within the wireless network.

With the emergence of networked control systems, privacy
and cyber-security concerns become increasingly important
and cutting-edge solutions are highly desired [1]–[4], es-
pecially when using potentially untrustworthy third-party
computing facilities. Traditional encryption algorithms, such
as AES and RSA, can protect private data during their
transportation to edge or cloud computing devices. However,
the corresponding decryption process removes their conﬁden-
tiality in order to allow for further data processing in these
third-party servers [3]. Fully homomorphic encryption (FHE)

This work was supported by the Dutch Research Council (NWO) under

Smart Industry programme, SMART-AGENTS project No. 18024.

1Matteo Marcantoni and Kerstin Bunte are with the Bernoulli In-
stitute, Faculty of Science and Engineering, University of Groningen,
9747AG Groningen, The Netherlands (email: m.marcantoni@rug.nl; ker-
stin.bunte@gmail.com).

2Bayu Jayawardhana is and Mariano Perez Chaher was with the En-
gineering and Technology Institute Groningen, Faculty of Science and
Engineering, University of Groningen, 9747AG Groningen, The Netherlands
(email: b.jayawardhana@rug.nl; marianopablo97@outlook.com).

algorithms have recently been introduced to overcome this
shortcoming as they allow for data manipulation directly on
the encrypted data, thus eliminating the need for decryption
[5]–[7]. Speciﬁcally, FHE based on Learning with Error
(FHE-LWE) allows us to perform addition and multiplication
with the encrypted data without error accumulation due to the
encryption process, thereby enabling secure control system
design [7]–[10].

When dealing with real-world actuator and sensor data,
however, a quantization process is required before FHE-
LWE can be used [10], [11]. We propose the use of the
mixed uniform-logarithmic quantizer (MULQ), derived from
the quasi-logarithmic quantizer [11], because it permits both
to quantize data in a prescribed bounded integer set and to
adjust its lower and upper-bound, as we discuss later. In
the literature, several works deal with control design and
analysis methods in presence of quantization [12]–[14]. Here
we focus on the sector bound approach [12], [14] to assess
the absolute stability of the secure feedback control system.
In this paper, we present a secure version of the distributed
formation control problem [15]–[19], in which the objective
is to guide a multi-agent system towards a desired formation
while guaranteeing privacy and cyber-security via FHE-LWE
and MULQ. As an example, this framework could be useful
when a third-party computing facility is employed to facili-
tate the usage of information coming from external sensors,
i.e. not located on-board the agents, that are essential to
the control task. Our contribution is three-fold: we describe
the distance-based secure edge control system, we discuss
the sector bound property of the mixed uniform-logarithmic
quantizer and we analyze the stability of the closed-loop
multi-agent system.

We organize the paper as follows. Preliminaries on graph
and on formation control are presented in Section II. The
discussion on MULQ is given in Section III. The main result
on secure formation control with MULQ is presented in
Section IV. A simulation result on secure formation control
of four agents forming a square is given in Section V. Finally,
the conclusions are presented in Section VI.

II. PRELIMINARIES
A. Fully Homomorphic Encryption by Learning with Error

Prior to describing the encryption method, we need to
introduce some relevant notations as used in the literature.
Throughout this work, we denote the base 10 logarithm of
x as log(x). Let the plaintext space, namely the unencrypted

 
 
 
 
 
 
2

2 ≤ b < a

information space, be a bounded integer set [a] := (cid:8)b ∈
(cid:9) of cardinality a ∈ N. Since the plaintext
Z : − a
for our control application represent numbers of sensor and
control signals we can conveniently set a to be a power of
10. Furthermore, let the cyphertext space, i.e. the encrypted
information space, be the set of integers modulo Zq whose
elements are denoted in bold, q ∈ N. We deﬁne q = wa where
the parameter w is also a power of 10.

For the implementation of a secure formation control law
via third-party computing facility, full capability of multi-
plication and addition operations in cyphertext are desirable.
This can be achieved with Fully Homomorphic Encryption
by Learning with Error (FHE-LWE), brieﬂy reviewed as
follows. Let m ∈ [a]n be a plaintext message of length n
to be encrypted and s ∈ ZN
q be a secret key of length N. The
encryption operation Enc(·) of m is deﬁned by

MEnc = Enc(m) := [(−As + wm + e)

(mod q), A]

(1)

q

q

where the matrix MEnc ∈ Zn×N+1
is the resulting cyphertext
message. Furthermore, the operators [·, ·] and (mod q) refer
to the concatenation and modulo q operator respectively. The
matrix A ∈ Zn×N
is sampled from a uniform distribution over
Zn×N
, while the injected error vector e is sampled from
q
a uniform distribution over [r]n with r < w, such that the
following inequality holds: |ei| < w

2 for i = 1, · · · , n.

Once the encrypted message MEnc is computed, the de-
cryption process will involve the secret key vector s and
the injected error vector e. The latter one has been shown
to be crucial for the security of the encryption [10]. Let
MEnc ∈ Zn×N+1
be a cyphertext message and ¯s := col(1, s)
be a stacked column vector of length N + 1 constructed by
the secret key vector s. The decryption process Dec(·) of
MEnc is deﬁned by

q

m = Dec(MEnc) :=

(cid:24) (MEnc¯s)

(mod q)

(cid:23)

w

=

(cid:23)

(cid:24) wm + e
w

(2)

where vector m ∈ [a]n is the resulting plaintext message and
(cid:100)·(cid:99) refers to the element-wise round half away from zero1.
As brieﬂy mentioned before, the FHE-LWE method allows
for the addition and multiplication operations to take place
in the cyphertext space. Indeed, let MEnc
be
two messages in cyphertext computed via (1) and m1, m2 ∈
[a]n their decrypted vectors in plaintext. One can compute
that

2 ∈ Zn×N+1
q

, MEnc

1

Dec(MEnc

1 + MEnc
as long as m1 + m2 ∈ [a]n and (cid:12)
1. · · · , n [10].

) = m1 + m2
(cid:12)
(cid:12) < w

2
(cid:12)e1,i + e2,i

(3)

2 holds for i =

Before deﬁning the multiplication operation in the cypher-
text space, we need to introduce another encryption method.
Let m1 ∈ [a] be a scalar message to be encrypted. The second
encryption method Enc2(·) is deﬁne by

MEnc2

1 = Enc2(m1) := m1R + OEnc

(4)

where the matrix MEnc2
is the resulting
q
cyphertext. OEnc = Enc(0log(q)(N+1)) refers to the encrypted

∈ Zlog(q)(N+1)×N+1

1

1For example, (cid:100)−1.5(cid:99) = −2 and (cid:100)−1.4(cid:99) = −1.

(5)

(6)

zero column vector 0log(q)(N+1) ∈ [a]log(q)(N+1) and R is
deﬁned by:

R := col(cid:0)100, 101, · · · , 10log(q)−1(cid:1) ⊗ IN+1
where ⊗ denotes the Kronecker product and IN+1 the identity
matrix of dimension N + 1.

log(q)−1
i=0

Since any row vector c ∈ ZN+1

q
10ici with row vectors ci ∈ Zlog(q)(N+1)

can be represented as
c = ∑
, whose
components are one of the single digit from 0 to 9, we can
deﬁne a function D : ZN+1
that decomposes
any row vector c ∈ ZN+1

q → Zlog(q)(N+1)

by its string of digits as

q

q

q

D(c) := [c0, c1, · · · , clog(q)−1]

Therefore, c = D(c)R for any row vector c ∈ ZN+1

q

[10].

2 ∈ ZN+1

Now we have the necessary means to deﬁne multiplication
in the cyphertext space. Let MEnc2
and
mEnc
be two messages in cyphertext computed via
(1) and (4) respectively and m1, m2 ∈ [a] their decrypted
scalars plaintext. The multiplication operation (cid:126) of MEnc2
and mEnc

∈ Zlog(q)(N+1)×N+1

is deﬁned as follows

1

1

q

q

2

(cid:126) mEnc
2
2 ∈ ZN+1
It can be shown now that

MEnc2
1
(cid:126) mEnc

where MEnc2

1

q

:= D(mEnc

2

)MEnc2
1

, which is a row vector.

1

(cid:126) mEnc
Dec(MEnc2
2
(cid:12)
w + D(mEnc
(cid:12)
(cid:12)
(cid:12)

) = m1m2
(cid:12)
(cid:12)
(cid:12)
(cid:12)

m1e2

)e1

as long as m1m2 ∈ [a] and
2 holds [10].
The injected error vector e1 ∈ [r]log(q)(N+1) comes from the
encryption of the zero vector in (4). Note that D(mEnc
)e1 is
) ∈ Zlog(q)(N+1)
a scalar as D(mEnc

is a row vector.

2
w

2

q

< 1

2

B. Formation graph with inﬁnitesimal rigid formation and
distance-based formation control

Following the rigidity formation framework as proposed
in [19], we will deﬁne the formation control using an
undirected graph G = (V , E ) where V = {1, 2, . . . , n} is the
set of vertices, representing the set of n mobile agent, and
E ⊆ V × V is the set of edges. Note that for each pair of
agents i and j we deﬁne only one edge in E , i.e. either
(i, j) or ( j, i). For the pair (i, j) the agent i is referred to
j as the head node. The
as the tail node and the agent
set of neighboring agents to the i-th agent is denoted by
Ni := { j ∈ V : (i, j) ∈ E ∨ ( j, i) ∈ E }.

Associated to the graph G, we can deﬁne an incidence

matrix B ∈ R|V |×|E | whose elements bik are given by

bik =






+1 if i = E tail
−1 if i = E head
0 otherwise ,

k

k

(7)

k

and E head
k

where E tail
denote the tail and the head of the
edge Ek. |V | and |E | refer to the cardinality of the sets V
and E respectively.

Each node in V can be associated to the agents’ position
vector p = col(p1, · · · , pn) by indicating the i-th agent’s
position with pi ∈ R2. Since for any k-th edge in E , with

pairing agents (i, j), we can deﬁne the relative position vector
between the agents i and j as zk = pi − p j ∈ R2. Then,
every edge in E can be associated to the vector of relative
positions z = col(z1, · · · , z|E |). The vector z can be described,
in compact form, by

z = ¯BT p

with ¯B = B ⊗ I2 ∈ R2n×2|E |.

Using the above graph formalism, we can formalize the
notion of inﬁnitesimally rigid formation as follows. With the
formation framework deﬁned by the tuple (G, p), an edge
function fG : R2n → R|E | is deﬁned by

fG(p) := col((cid:107)z1(cid:107)2, · · · , (cid:107)z|E |(cid:107)2) = D(cid:62)
z z
where Dz := diag(zk) ∈ R2|E |×|E | for k = 1, · · · , |E | is a block
diagonal matrix. The rigidity matrix R(z) of the framework
(G, p) is given by the Jacobian of the edge function fG
R(z) = DT
z

¯BT .

For the formation in 2D plane as pursued in this paper,
the framework (G, p) is said to be inﬁnitesimally rigid if
Rank(R(z)) = 2n − 3. Moreover, if |E | = 2n − 3 it is said to
be minimally rigid. Roughly speaking, for an inﬁnitesimally
and minimally rigid framework, the only group motions that
can be performed on the whole group when they are already
in the desired formation shape, are translations and rotations
[16]. In this work, we assume that the agents’ position vector
dynamics is described by

˙p(t) = u(t)

(8)

where ˙p(t) =: d
dt p(t) and u(t) = col(u1(t), · · · , un(t)) is the
concatenated control input signal with ui(t) be the velocity
control input signal of the agent i. In the rest of the paper,
we do not write the dependence on time t in all signals when
it is clear from the context. Let

d = col (cid:0)d1, · · · , d|E |

(cid:1) ∈ R|E |

(9)

be the set of desired inter-agent distances associated to the
desired formation shape. Accordingly, we can deﬁne the set
of all equilibrium points that satisfy the desired distance
constraints by D := {p ∈ R2n : (cid:107)zk(cid:107) = dk, ∀ k = 1, · · · , |E |}.
One of the well-known distributed formation control law
that can guarantee the local exponential stability of D is
the distance-based formation control, as expounded in [15],
[17], [18]. In particular, the distributed formation control law
is given by

u = col

i∈{1,··· ,n}

(ui) = − ¯BDzD˜ze = R(z)T D˜ze

(10)

where ˜z = col((cid:107)z1(cid:107)(cid:96)−2, · · · , (cid:107)z|E |(cid:107)(cid:96)−2) and e = col(cid:0)((cid:107)z1(cid:107)(cid:96) −
|E |)(cid:1) with (cid:96) ∈ N [16]. In the following,
d(cid:96)
1), · · · , ((cid:107)z|E |(cid:107)(cid:96) − d(cid:96)
we will only consider the case with (cid:96) = 2.

Note that the formation control law in (10) is written in the
most compact form. Looking at the individual control input
we see that the local control law uses only local information
available to each agent i, since

where ¯Bik is the (i, k) element of the matrix ¯B. In other words,
(11) is a distributed control law for any i-th agent. When
(cid:96) = 2, (11) becomes

ui = − ∑
k∈Ni

¯Bikzkek ,

(12)

which we will consider throughout this paper.

III. MIXED UNIFORM-LOGARITHMIC QUANTIZER

While the use of distributed formation control as described
in Subsection II-B gives rise to distributed input signals
deﬁned on R,
it cannot directly be implemented in the
cyphertext Zq in the edge or cloud via FHE-LWE method as
presented in Section II-A. Here, we present a mixed uniform-
logarithmic quantizer method that allows the quantization
of the sensing information, which are subsequently used to
compute the formation control input in cyphertext. Although,
such quantizer has been used before in [11], its focus was
on the deployment of distributed estimator in the cloud to
compensate for sensor bias without stability analysis. In
contrast, by restricting to the standard distributed formation
control law (12), we show that the use of this quantizer can
still guarantee the local asymptotic stability of the desired
formation shape in our main result in Section IV.

More precisely, the mixed uniform-logarithmic quantizer

(MULQ) operator Q : R → R is deﬁned by

Q(x) :=

1
S(x)

(cid:100)S(x)x(cid:99)

where S(x) is the base-10 scaling factor deﬁned by

S(x) = 10(σ −(cid:98)log(|x|)(cid:99)−1)

(13)

(14)

i.e.

(cid:98)·(cid:99) refers to the ﬂoor function and σ ≥ 1 ∈ N is the
desired signiﬁcant ﬁgures parameter,
the number of
leading digits of x that will be kept after the quantization.
For example, for σ = 1 the set of quantization levels is
given by (cid:8)aρ : a ∈ {−9, −8, . . . , 8, 9}, ρ ∈ {10k}, k ∈ N(cid:9) =
{. . . , 0.09, 0.1, 0.2, . . . , 0.9, 1, 2, . . . , 9, 10, 20, . . .}. This is in
contrast to that of the standard logarithmic quantizer with
coarseness parameter 0 < ρ < 1 given by {±ρ k : k ∈ N} [14].
The signiﬁcant ﬁgures parameter σ plays an important role
in guaranteeing the stability of the closed-loop system that
depends on the information on the formation rigidity matrix
and graph, as shown in Section IV. In the following lemma,
we show that the sector bound property of the proposed
MULQ operator, where the bounds depend directly on the
parameter σ . The larger σ is, the thinner the band of the
sector bound is and the closer it is to an identity operator.
Lemma 3.1: Let the MULQ Q : R → R and S(x) with a
given σ ≥ 1 be deﬁned according to (13) and (14). Then the
following inequalities hold for all x ∈ R:
(cid:17)

(cid:17)

(cid:16)
1 + 0.5
10σ −1

|x|2

(A1).

(A2).

(A3).

(cid:16)
1 − 0.5
10σ −1
|x − Q(x)| ≤ 0.5
|Q(x)| ≤

|x|2 ≤ xQ(x) ≤
10σ −1 |x|
(cid:17)

(cid:16)
1 + 0.5
10σ −1

|x|

ui = − ∑
k∈Ni

¯Bikzk(cid:107)zk(cid:107)(cid:96)−2ek ,

(11)

PROOF.
In the following we prove the lemma for the case
x > 0 only, since it is similar for x < 0. We ﬁrst prove

(A1) with x > 0. The difference between x and Q(x) can
be rewritten as:

x − Q(x) = x −

1
S(x)

(cid:100)S(x)x(cid:99) =

1
S(x)

(S(x)x − (cid:100)S(x)x(cid:99)) .

Note, that the rounding operation gives us −0.5 ≤ S(x)x −
(cid:100)S(x)x(cid:99) ≤ 0.5. Hence, using the upper-bound of the rounding
operation, it follows that:

x − Q(x) ≤

0.5
S(x)

⇔ Q(x) ≥ x −

≥ x −

= x −

0.5
S(x)
0.5
10σ −1 x =

0.5
10σ −1 10(cid:98)log x(cid:99)
(cid:19)
(cid:18)
0.5
10σ −1

1 −

x ,

where we have used the fact that 10(cid:98)log x(cid:99) < x for positive
(cid:16)
1 − 0.5
x2. Similarly, using
x. This implies that xQ(x) ≥
10σ −1
the lower-bound of −0.5 ≤ S(x)x − (cid:100)S(x)x(cid:99), it follows that:

(cid:17)

x − Q(x) ≥

−0.5
S(x)

⇔ Q(x) ≤ x +

≤ x +

= x +

0.5
S(x)
0.5
10σ −1 x =

0.5
10σ −1 10(cid:98)log x(cid:99)
(cid:19)
(cid:18)
0.5
10σ −1

1 +

x .

In this case, the upper-bound of xQ(x) is given by xQ(x) ≤
(cid:16)
1 + 0.5
x2, which proves (A1). Now similarly, to prove
10σ −1
(A2) with x > 0 we rewrite:

(cid:17)

(15)

x − Q(x) ≤

0.5
S(x)

=

0.5
10σ −1 10(cid:98)log x(cid:99) ≤

which implies immediately that |x−Q(x)| ≤ 0.5
from (15) follows that |Q(x)| ≤
(A3).

(cid:16)
1 + 0.5
10σ −1

(cid:17)

0.5
10σ −1 x ,
10σ −1 |x|. Finally,
|x|, which proves
(cid:3)

every edge k, we have to encrypt the scalars Q(zk,1)S(zk,1),
Q(zk,2)S(zk,2) and the scalar Q(ek)S(ek) to enable the use of
FHE-LWE on relative position vector zk = col(zk,1, zk,2) and
on distance error ek information. The ﬁrst two are encrypted
with Enc2(·) via (4), while the last one with Enc(·) via (1)
k,1 = Enc2 (cid:0)Q(zk,1)S(zk,1)(cid:1)
ZEnc2
k,2 = Enc2 (cid:0)Q(zk,2)S(zk,2)(cid:1)
ZEnc2
EEnc
k = Enc (Q(ek)S(ek))

The scaling information will also be transmitted encrypted
or un-encrypted to the corresponding agents in edge k so that
the processed information can be re-scaled back. When UEnc
i,k
is the resulting gradient computation of formation control law
in the cyphertext for agent i in k-th edge, the applied local
control law for agent i is given by:





ui = − ∑
k∈Ni

¯Bik

S(zk,1)S(ek) Dec(cid:0)UEnc
S(zk,2)S(ek) Dec(cid:0)UEnc

¯Bik

i,k

i,k



 ,

(cid:1)
1
(cid:1)
2

(16)

(cid:1)

where we have used the decryption process Dec(·) in (2)
and Dec(cid:0)UEnc
j refers to the j-th element of the vector
i,k
Dec(UEnc
i,k ). Following the multiplication property of FHE-
LWE as in (6), it follows from above that









(cid:16)

(cid:17)



¯Bik

(cid:16)

¯Bik

ZEnc2
k,1
ZEnc2
k,2

(cid:126) EEnc
k
(cid:126) EEnc
k

S(zk,1)S(ek) Dec
S(zk,2)S(ek) Dec

S(zk,1)S(ek) Q(zk,1)S(zk,1)Q(ek)S(ek)

S(zk,2)S(ek) Q(zk,2)S(zk,2)Q(ek)S(ek)

¯Bik

¯Bik



(cid:17)

¯BikQ(zk)Q(ek)

(17)

ui = − ∑
k∈Ni

= − ∑
k∈Ni
= − ∑
k∈Ni

Using the MULQ operator Q as above, we can now
encrypt the digits of Q(x) by using Q(x)S(x) ∈ [a] with
a = 2(10)σ − 1 and [a] be as deﬁned in Subsection II-A.
The cyphertext message Enc(Q(x)S(x)) or Enc2(Q(x)S(x))
can be sent to a third-party computing facility for further
computation in the cyphertext space. Recalling the previous
example with σ = 1, we have that Q(x)S(x) ∈ [19] for any
x ∈ R. Thus a static plaintext space with cardinality a = 19
can be used. The processed information in cyphertext can
then be decrypted with local secret keys and re-scaled back
to get the desired local control law. Again, using
by
S(x) ∈ {10k : k ∈ N}. This will be
the example with σ = 1,
discussed further in the following section.

1
S(x)

1

IV. DISTANCE-BASED SECURE FORMATION CONTROL
A. Distributed distanced-based formation control via MULQ
and FHE-LWE

The reason to employ a third-party computing facility to
calculate the control inputs is to facilitate the use of external
sensor systems that are essential to the control task. In this
case FHE-LWE ensures that the private information, coming
from these sensors, cannot be retrieved by others. In the
previous section, we brieﬂy discussed how Q(x) and the digit
information S(x)Q(x) can be used to deploy FHE-LWE. For

where we deﬁne Q(zk) := col(Q(zk,1), Q(zk,2)).

In comparison to the unencrypted version in (12) the local
control law above contains the quasi-logarithmic quantized
version of zk and ek. In particular, FHE-LWE in the feedback
loop can simply be regarded as an identity operator. In
other words, FHE-LWE becomes transparent due to the
use of MULQ operator and the closed-loop system analysis
becomes an absolute stability analysis with quantizers in the
feedback loop. Consequently, for the analysis of closed-loop
systems in the following subsection, the compact form of the
whole formation control input can be written as

u = − ¯BDQ(z)Q(e)

(18)

where the MULQ operator Q is understood element-wise.

Let us remark on securing the information of the scaling
factor S(·) for both zk and ek. In the discussion above, this
information is transmitted directly to the agent and used to
re-scale back the computed control input. This re-scaling
operation can be secured in the following way. In addition
to encrypting the quantized information of Q(zk, j)S(zk) and
Q(ek)S(ek), the sensing node can encrypt the exponent of
S(zk, j) and of S(ek), indicated here with SEnc
z,k, j and SEnc
e,k
respectively, and send them to the remote computing facility.
The latter subsequently computes the addition operation of

z,k, j and SEnc
e,k

both SEnc
and the result is transmitted to the
corresponding agents. The agent can then perform the re-
scaling operation by using the fact that

As established in literature of distance-based formation
control (c.f. [15]–[17], [19]), the second term on the right-
hand side is negative deﬁnite and satisﬁes

S(zk, j)S(ek) = 10

Dec

(cid:16)
z,k, j+SEnc
SEnc
e,k

(cid:17)

for dimensions j = 1, 2 for substitution in (16).

B. Absolute stability analysis of the closed-loop systems

The application of FHE-LWE (17)

to the formation
control of (10) using quantized values of Q(zk,1)S(zk,1),
Q(zk,2)S(zk,2) and Q(ek)S(ek) becomes equivalent to the ones
obtained without FHE-LWE, which is compactly written in
(18). Correspondingly, in the following proposition, we will
analyze the stability of the closed-loop system where the
FHE-LWE operation is replaced by an identity operator.

Proposition 4.1: Consider the mobile robots whose dy-
namics are given by (8). Suppose that the control inputs are
given by the distributed quantized gradient-based formation
control law (18) with the desired formation shape deﬁned
by the desired distance vector d as in (9) and the mixed
uniform-logarithmic quantization operator Q be as in (13)
with signiﬁcant ﬁgures constant σ ≥ 1. Assume that the
formation graph is inﬁnitesimally and minimally rigid and
connected. Then for sufﬁciently large σ , the equilibrium
point e = 0 is locally asymptotically stable.

PROOF. The proof is based on the established local asymp-
totic stability results in distance-based formation control and
we refer interested reader to [15]–[17], [19] among many
others. The dynamics of the closed-loop autonomous multi-
agent system can be written as

˙z = ¯BT ˙p = − ¯BT ¯BDQ(z)Q(e)
˙e = DT

z ˙z = −DT
z

¯BT ¯BDQ(z)Q(e) ,

(19)

(20)

where as before the MULQ operator Q is understood
element-wise when a vector is used in its argument.

Let us consider the following standard Lyapunov function

as used in the aforementioned papers

V =

eT e =

1
4

|E |
∑
k=1

Vk =

1
4

|E |
∑
k=1

((cid:107)zk(cid:107)2 − d2

k )2 .

(21)

By computing its time-derivative along the trajectory of the
closed-loop systems, we have

˙V = − eT DT
z

¯BT ¯BDQ(z)Q(e)

= +

−

1
2
1
2

(cid:0)Dze − DQ(z)Q(e)(cid:1)T ¯BT ¯B (cid:0)Dze − DQ(z)Q(e)(cid:1)

eT DT
z

¯BT ¯BDze −

1
2

Q(e)T DT

Q(z)

¯BT ¯BDQ(z)Q(e) ,

(22)

where ¯B describes the incidence matrix of formation graph
G. In this case, ¯BT ¯B is positive semi-deﬁnite matrix with the
kernel being a vector of ones 1, due to the connectedness of
the undirected graph.

−

1
2

eT DT
z

¯BT ¯BDze ≤ −λmin(cid:107)e(cid:107)2

(23)

where λmin refers to the smallest eigenvalue of the positive
deﬁnite matrix DT
z

¯B ¯BT Dz in the neighborhood of e = 0.

The last term of (22) is upper-bounded by zero as ¯B ¯BT
is positive semi-deﬁnite. We will now compute the upper-
bound of the ﬁrst term in (22) as follows

1
2

=

≤

(cid:0)Dze − DQ(z)Q(e)(cid:1)T ¯BT ¯B (cid:0)Dze − DQ(z)Q(e)(cid:1)
1
2
1
2
1
2

(cid:107) ¯B (cid:0)Dze − DQ(z)Q(e)(cid:1)(cid:107)2
1
2
(cid:107) ¯B (cid:0)Dz − DQ(z)

(cid:107) ¯B (Dze − DzQ(e))(cid:107)2 +
1
2
By Lemma 3.1 the three inequalities: (cid:107)e − Q(e)(cid:107)≤ 0.5
10σ −1 (cid:107)e(cid:107),
(cid:17)
(cid:16)
1 + 0.5
(cid:107)Dz − DQ(z)(cid:107) ≤ 0.5
(cid:107)e(cid:107)
10σ −1 (cid:107)z(cid:107), and (cid:107)Q(e)(cid:107) ≤
10σ −1
hold. Combining these terms to (24) and together with (23),
it follows that (22) becomes

(cid:107) ¯B (cid:0)DzQ(e) − DQ(z)Q(e)(cid:1)(cid:107)2

(cid:107) ¯BDz (e − Q(e))(cid:107)2 +

(cid:1) Q(e)(cid:107)2 .

(24)

=

˙V ≤λmax

(cid:18) 0.5

10σ −1 +

0.5
10σ −1

(cid:18)

1 +

0.5
10σ −1

(cid:19)(cid:19)

(cid:107)z(cid:107)2(cid:107)e(cid:107)2

− λmin(cid:107)e(cid:107)2

where λmax > 0 is the maximum eigenvalue of ¯BT ¯B.

(cid:113)

∑k |ek + d2

Note that (cid:107)z(cid:107) can be expressed as a continuous function
of e, namely, (cid:107)z(cid:107) =
k |. Thus in the neighborhood
of e = 0, e.g. in B
δ := {e : (cid:107)e(cid:107) < δ }, (cid:107)z(cid:107)2 can be upper
bounded by a constant c that depends on the desired distance
d and the radius of the neighborhood δ . Correspondingly,
for a sufﬁciently large σ , the right-hand side of the above
inequality can be made negative in B

δ such that

˙V ≤ −k(cid:107)e(cid:107)2

(25)

for all e ∈ B

δ with 0 < k < λmin and in particular
0.5
10σ −1

10σ −1 +

0.5
10σ −1

(cid:18) 0.5

1 +

(cid:18)

(cid:19)(cid:19)

.

k =λmin − λmaxc

This implies that B
δ is forward invariant, so that (cid:107)z(t)(cid:107) is
bounded by c for all t ≥ 0 and (cid:107)e(t)(cid:107) → 0 as t → ∞. In other
(cid:3)
words, the formation converges to the desired shape.

We note that a different value of σ can be assigned in
the quantization of zk, j and of ek in order to get a trade-
off between asymptotic stability and minimizing the required
plaintext space. On the one hand, as shown in the proof of
Proposition 4.1, the parameter corresponding to e (denoted
conveniently as σek ) plays a crucial role in ensuring that (25)
holds. It has to be chosen sufﬁciently large for asymptotic
stability. On the other hand, the parameter for zk, j (denoted as
σzk, j ) can be assigned to 1 safely. It allows us to minimize the
space of plaintext needed for the encryption and decryption.

MULQ quantization. While a similar framework has been
presented before [11] with an empirical analysis, in this
contribution we present rigorous analysis of the closed-loop
systems. Speciﬁcally, we show the sector bound property of
the proposed MULQ and we present an absolute stability
analysis showing the asymptotic stability of the closed-loop
secure control system. Since we have shown that MULQ
can be used together with FHE in the design of secure
formation control, the combined use of MULQ with FHE can
be explored further in other secure control design problems.

REFERENCES

[1] A. Narayanan et al., “Key advances in pervasive edge computing for
industrial internet of things in 5G and beyond,” IEEE Access, vol. 8,
pp. 206 734–206 754, 2020.

[2] J. Giraldo et al., “A survey of physics-based attack detection in cyber-
physical systems,” ACM Comput. Surv., vol. 51, no. 4, pp. 1–36, 2019.
[3] J. Zhang et al., “Data security and privacy-preserving in edge com-
puting paradigm: Survey and open issues,” IEEE Access, vol. 6, pp.
18 209–18 237, 2018.

[4] Y. Yang et al., “A survey on security and privacy issues in internet-of-
things,” IEEE Internet Things J., vol. 4, no. 5, pp. 1250–1258, 2017.
[5] K. Kogiso and T. Fujita, “Cyber-security enhancement of networked
control systems using homomorphic encryption,” in Proc. IEEE Conf.
Decis. Control., Dec 2015, pp. 6836–6843.

[6] F. Farokhi,

I. Shames, and N. Batterham, “Secure and private
cloud-based control using semi-homomorphic encryption,” IFAC-
PapersOnLine, vol. 49, no. 22, pp. 163–168, 2016.

[7] J. Kim et al., “Encrypting controller using fully homomorphic en-
cryption for security of cyber-physical systems,” IFAC-PapersOnLine,
vol. 49, no. 22, pp. 175–180, 2016.

[8] J. Kim, H. Shim, and K. Han, “Dynamic controller that operates
over homomorphically encrypted data for inﬁnite time horizon,” IEEE
Trans. Automat. Contr., pp. 1–1, 2022.

[9] J. H. Cheon et al., “Need for controllers having integer coefﬁcients
in homomorphically encrypted dynamic system,” in Proc. IEEE Conf.
Decis. Control., Dec 2018, pp. 5020–5025.

[10] J. Kim, H. Shim, and K. Han, Privacy in Dynamical Systems.
Springer, 2020, ch. Comprehensive introduction to fully homomorphic
encryption for dynamic feedback controller via LWE-based cryptosys-
tem, pp. 209–230.

[11] M. P. Chaher, B. Jayawardhana, and J. Kim, “Homomorphic encryp-
tion-enabled distance-based distributed formation control with distance
mismatch estimators,” in Proc. IEEE Conf. Decis. Control., Dec 2021,
pp. 4915–4922.

[12] M. Z. Almuzakki, B. Jayawardhana, and A. Tanwani, “Nearest neigh-
bor control for practical stabilization of passive nonlinear systems,”
Automatica, 2022, Preprint.

[13] C. D. Persis and B. Jayawardhana, “Coordination of passive systems
under quantized measurements,” SIAM J. Control Optim., vol. 50,
no. 6, pp. 3155–3177, 2012.

[14] M. Fu and L. Xie, “The sector bound approach to quantized feedback
control,” IEEE Trans. Automat. Contr., vol. 50, no. 11, pp. 1698–1711,
2005.

[15] H. Garcia de Marina, “Distributed formation control for autonomous

robots,” Ph.D. dissertation, University of Groningen, 2016.

[16] H. Garcia de Marina, B. Jayawardhana, and M. Cao, “Distributed
rotational and translational maneuvering of rigid formations and their
applications,” IEEE Trans. Robot., vol. 32, no. 3, pp. 684–697, 2016.
[17] H. Garcia de Marina, M. Cao, and B. Jayawardhana, “Controlling rigid
formations of mobile agents under inconsistent measurements,” IEEE
Trans. Robot., vol. 31, no. 1, pp. 31–39, 2015.

[18] K.-K. Oh, M.-C. Park, and H.-S. Ahn, “A survey of multi-agent

formation control,” Automatica, vol. 53, pp. 424–440, 2015.

[19] B. D. Anderson, C. Yu, B. Fidan, and J. M. Hendrickx, “Rigid graph
control architectures for autonomous formations,” IEEE Control Syst.
Mag., vol. 28, no. 6, pp. 48–63, 2008.

(a) Error components ei(t).

(b) Agent trajectories.

Fig. 1: Secure formation control simulation with four agents form-
ing a square: (a) error trajectories over time (in semi-logarithmic
scale); (b) top view of the agents’ 2D trajectories of the four
agents starting from the initial conditions (triangles) and converging
towards the desired square formation (ﬁlled circles).

V. NUMERICAL SIMULATION

In this section, we present

the results of a numerical
simulation implemented in Python. Similar to [11] we used
Python to circumvent the integer overﬂow problem by em-
ploying arbitrary-precision integers. The task of the distance-
based secure edge controller is to guide a system of 4 agents
into a square formation with desired inter-agent distances.
The undirected graph G = (V , E ) is deﬁned with agents
V = {1, 2, 3, 4} and E = {(1, 2), (2, 3), (1, 3), (3, 4), (1, 4)},
2 1 1]T ∈ R5.
while the desired distance vector is d = [1 1
The initial conditions for the agents’ position vector p(0) is
randomly generated within the basin of attraction. Regarding
the encryption, the plaintext [a] and cyphertext Zq space
available are deﬁned by a = 1011 and q = 1022. The secret
key vector s length is N = 30, while the sampling space [r]
of the injected error vector e is deﬁned by r = 4 so that the
conditions for (3) and (6) hold. Following the computation in
the proof of Proposition 3.1 and using the neighborhood B2.7
of e = 0, we can obtain the constants c ≈ 12.04, λmin ≈ 0.058
and λmax ≈ 4.11. By taking σ = 4, the condition stated after
(25) in the proof of Proposition 4.1 is satisﬁed.

√

Using the above simulation setup, the corresponding sim-
ulation result is shown in Figure 1. Figure 1a) shows the
plot of error signal ei from all ﬁve edges i = 1, . . . 5. It
demonstrates that the error vector e ∈ R5 of the multi-agent
system converges to the equilibrium point e = 0 as expected
with an exponential rate of convergence. Panel 1b) presents
a top view of the agents’ position vector p ∈ R8 over time.
Each agent starts from its initial position depicted in triangle
shapes and all agents converge exponentially to the desired
shape of a square (shown as ﬁlled circles in the ﬁgure).

We remark here that the computation of (25) leads to a
conservative bound of the parameters. Indeed, in simulations,
we can assign smaller values of σ or larger values of δ than
the ones given above for which the formation goal is still
attained.

VI. CONCLUSION

In this paper, we proposed a secure distributed forma-
tion control system enabled by FHE-LWE encryption and

10−1100101time [s]−0.6−0.4−0.20.00.20.40.6error [m]e1e2e3e4e5−0.50.00.51.01.52.0x [m]0.51.01.52.02.5y [m]StartEnd