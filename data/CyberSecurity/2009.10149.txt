Crafting Adversarial Examples for Deep Learning
Based Prognostics (Extended Version)

Gautam Raj Mode, Khaza Anuarul Hoque
Dept. of Electrical Engineering and Computer Science
University of Missouri, Columbia, MO, USA
gmwyc@mail.missouri.edu, hoquek@missouri.edu

0
2
0
2

p
e
S
8
2

]

G
L
.
s
c
[

2
v
9
4
1
0
1
.
9
0
0
2
:
v
i
X
r
a

Abstract—In manufacturing, unexpected failures are consid-
ered a primary operational risk, as they can hinder productivity
and can incur huge losses. State-of-the-art Prognostics and Health
Management (PHM) systems incorporate Deep Learning (DL)
algorithms and Internet of Things (IoT) devices to ascertain
the health status of equipment, and thus reduce the downtime,
maintenance cost and increase the productivity. Unfortunately,
IoT sensors and DL algorithms, both are vulnerable to cyber
attacks, and hence pose a signiﬁcant threat to PHM systems. In
this paper, we adopt the adversarial example crafting techniques
from the computer vision domain and apply them to the PHM
domain. Speciﬁcally, we craft adversarial examples using the
Fast Gradient Sign Method (FGSM) and Basic Iterative Method
(BIM) and apply them on the Long Short-Term Memory (LSTM),
Gated Recurrent Unit (GRU), and Convolutional Neural Network
(CNN) based PHM models. We evaluate the impact of adversarial
attacks using NASA’s turbofan engine dataset. The obtained
results show that all the evaluated PHM models are vulnerable
to adversarial attacks and can cause a serious defect in the
remaining useful life estimation. The obtained results also show
that the crafted adversarial examples are highly transferable and
may cause signiﬁcant damages to PHM systems.

I. INTRODUCTION

The advent of Industry 4.0 in automation and data exchange
leads us toward a constant evolution in smart manufacturing
environments, including an intensive utilization of Internet-
of-Things (IoT) and Deep Learning (DL). Speciﬁcally, the
state-of-the-art Prognostics and Health Management (PHM)
[1] has shown great success in achieving a competitive edge in
Industry 4.0 by reducing the maintenance cost, downtime and
increasing the productivity by making data-driven informed
decisions. For instance, modern PHM techniques can help
reduce downtime by 35%-45%, maintenance cost by 20%-
25%, and can increase production by 20%-25% [2]. The ability
to sense changes in the physical world (such as temperature,
vibration, pressure, etc.) using IoT sensors, and to analyze
the sensed data using the state-of-the-art DL algorithms for
different prognostic tasks such as the Remaining Useful Life
(RUL) prediction has enabled a highly reliable and cost-
efﬁcient industrial automation framework. Unfortunately, IoT
sensors are also known for their vulnerability to cyber at-
tacks [3], [4], and DL algorithms can also be easily fooled by
adversarial examples [5]. From the perspective of computer
vision, an adversarial example can be an image formed by
making small perturbations (insigniﬁcant to the human eye)
so that a classiﬁer misclassiﬁes it with high conﬁdence. The

highly-connected IoT sensors and DL utilized in PHM systems
tend to inherit their respective vulnerabilities, thus making
them a lucrative target for cyber-attackers [6]. According to
a recent report from the Malwarebytes, cyber-threats against
businesses/factories have increased by more than 200% over
the past year [7]. Another interesting fact is that the adversarial
examples can often transfer from one model to another model,
which means that it is possible to attack models to which the
attacker does not have access [5]. Such adversarial attacks have
been extensively studied in the computer vision domain [8].
Even though advanced data-driven PHM depends on DL, it is
very surprising that the impact of adversarial attacks on the
PHM domain has not been studied yet.

In manufacturing, adversarial attacks can lead to a wrong
prognostic decision, e.g., a wrong estimation of RUL can
delay the maintenance of a machine leading to unexpected
failures. Such unexpected failures are considered a primary
operational risk, as they can hinder productivity and can
incur a huge loss. For example, in the modern automotive
industry, an assembly line has several robots working on a
car, and if even one robot fails, it will result in the halt of the
entire assembly line, causing loss of valuable production time
and increased production cost. In another situation, a wrong
prognostic prediction in an operating autonomous vehicle, or
aircraft may lead to loss of human lives. Thus, even though the
utilization of IoT and ML is revolutionizing the smart industry,
the vulnerabilities related to IoT and ML possesses a great
challenge for Industry 4.0.

Contribution. In our previous work [9], we showed that even
a very small amount of randomly generated noise injected to
the IoT sensors can greatly defect the RUL estimation. In this
paper, we go beyond the concept of randomly generated noise
for PHM. We adopt adversarial attacks from the computer
vision domain, formalize them, craft adversarial examples
for the PHM domain, and perform a quantitative analysis of
their impacts. To be speciﬁc, we use the Fast Gradient Sign
Method (FGSM) [10] and Basic Iterative Method (BIM) [11]
to craft adversarial examples for Long Short-Term Memory
(LSTM) [12], Gated Recurrent Unit (GRU) [13], and Con-
volutional Neural Network (CNN) [14] based PHM models.
We perform an empirical study of adversarial attacks in real-
life scenarios using NASA’s C-MAPSS dataset [15]. We also
perform a comprehensive study of the transferability property
of adversarial examples in DL-based PHM models. To the

 
 
 
 
 
 
IoT devices to provide accurate insights by identifying failure
signatures, proﬁles, and providing an actionable prediction of
failure through RUL estimation [16], [17]. DL algorithms,
especially LSTM, GRU, and CNN have shown great success
in prognostics tasks [18]–[23]. Fig.1 shows an overview of
an IoT and DL enabled cloud-edge architecture, divided into
physical, edge, cloud, and visualization layer [24], and also a
potential attack scenario. The physical layer involves several
IoT sensors nodes, which collect different sensor measure-
ments from equipment. The data from the sensor nodes are
sent to the edge for processing. The edge layer pre-process the
data for passing to the next cloud layer for training/re-training
purposes. The edge layer also has a pre-trained deep learning
model to predict the future health state of the equipment.
The cloud layer performs in-depth analysis and also performs
training/re-training of the DL models on the newly arrived data
from the edge layer. After the re-training, the re-trained DL
model is sent back to the edge layer for improved accuracy of
the machine’s health state prediction. The visualization layer
uses the data collected from the ﬁeld, along with the results
from the PHM model, and provides a visual representation of
actionable insights to an engineer.

B. Vulnerabilities PHM systems

Attacks on IoT sensors: IoT devices and deep learning have
paved the way for smart analytics, however, their vulnerabili-
ties also create new means of attacks. As mentioned earlier, in
the PHM context, IoT sensors collect a variety of parameters
including temperature, pressure, speed, vibration, etc., which
is then transmitted via a network (in many cases using a
wireless network) to a centralized processing unit to make
informed decisions. The data collected from the sensors greatly
inﬂuence the prognostics and maintenance related decisions.
Even if the network is secured, any attacks on the sensors
or the infrastructure could result in incorrect decisions and
would result in a considerable impact on the performance of
the PHM system [25], [26]. For instance, attackers can use the
sensors to transfer malicious code, trigger messages to activate
a malware planted in an IoT device [27], capture sensitive
information shared between devices [3], [28], or even capture
encryption and depreciation keys for extracting encrypted
information [29]. Understanding these sensor-based threats is
necessary for researchers to design reliable solutions to detect
and prevent these threats efﬁciently. As a result, IoT sensor-
based threats have gained a lot of attention from researchers
in academia and in industry [25], [26], [30]. Unfortunately,
most of the existing IoT security frameworks are not suitable
the system level [4].
for detecting sensor-based threats at
IoT sensors are typically small and hence they limited by
power and resource constraints. This is indeed an obstacle
for implementing the complicated security mechanisms on
IoT sensors and devices. Note, sensor attacks detection and
mitigation is also an active research problem in the cyber-
physical system domain [31], [32]. However, in the context of
industrial automation, how attacks on IoT sensors inﬂuence

Fig. 1: PHM cloud-edge architecture and threat model

knowledge of the authors, this is the ﬁrst work that shows the
impact of adversarial attacks on DL enabled PHM systems.

Paper organization. The rest of the paper is organized as
follows. Section II gives an overview of IoT and DL enabled
PHM architectures and their associate threats. Section III
formalizes adversarial attacks on the DL-based prognostics
and presents the algorithms for crafting FGSM and BIM
adversarial examples. Section IV presents the experimental
results showing the impact of adversarial examples on a PHM
case study. Finally, Section V concludes the paper.

II. BACKGROUND

In this section, we present an overview of IoT and DL

enabled PHM architectures and their associate threats.

A. Internet of Things (IoT) and deep learning in prognostics

Prognostics and Health Management (PHM) has gained a
lot of attention in recent years for intelligent manufacturing
in the context of Industry 4.0 [16]. The state-of-the-art PHM
incorporates both IoT devices for sensing [1], and machine
learning algorithms for analyzing the sensed data, and thus
making a way for smart analytics to predict the future state of
equipment. The equipment monitoring system includes input
from IoT sensors that measure different parameters, such as
pressure, temperature, speed, vibration, etc. Employing these
IoT sensors eliminates the requirement for manual inspec-
tion/analysis, and hence the operating condition of equipment
can be monitored using automated PHM systems. In PHM,
Remaining Useful Lifetime (RUL) indicates the amount of
time left before a piece of equipment or machine fails or
degrades to a point at which it cannot perform its intended
function anymore. Indeed, it is important to have an accurate
RUL estimation since an early prediction may result in over-
maintenance and a late prediction could lead to catastrophic
failures. From a machine learning perspective, the prognostic
is a regression problem, as the target value (RUL) is in the real
domain. Thus, an RUL estimation involves learning a function
that maps the condition of machines to its RUL estimates.

In the era of big data, an efﬁcient way to analyze the
huge amount of data is crucial. Deep learning (DL) provides
a complementary approach for analyzing data obtained from

Physical layerEdge layerCloud layerVisualization layerIoTsensor nodesGatewayData analyticsDatacollectionCurrentFeaturecalculationData pre-processingCloudRe-training the DL AlgorithmDatacollectionPre-trainedDL regression modelDashboardAdversaryFactory floorML algorithms for making incorrect decisions is yet to be
explored in detail.

Adversarial attacks on deep learning: In addition to IoT
attacks,
the performance of a PHM system can also be
considerably affected by orchestrated security attacks on DL
algorithms. The study of the effect of adversarial attacks on
machine learning techniques is known as adversarial machine
learning, and is one of the most active research topics in
the deep learning community [33]. In [5], [11], [34],
the
authors have shown how adversarial examples can be used
for deep learning algorithms to make a wrong classiﬁcation.
Since attacks on DL algorithms may have catastrophic con-
sequences, their detection and mitigation have been explored
in many recent literature [35], [36]. However, most of them
are venerable to future attacks [37]. For instance, in [38],
[39], the authors explored the adversarial training technique
to mitigate the adversarial attacks. Adversarial training injects
adversarial examples into training data to increase robustness.
Unfortunately, later on, researchers found the adversarial train-
ing technique to be inefﬁcient for mitigating those attacks [40].
A detailed survey of proposed defenses in the adversarial ML
domain can be found in [41]. Even though adversarial machine
learning is an active research area, most of the works in this
area are limited to the computer vision domain or its variants.
The effect of adversarial attacks in other domains, such as
regression tasks for PHM is not yet explored. In our work, we
study the impact of adversarial attacks on DL based regression
models for PHM.

PHM attack scenarios: Let us consider an attack scenario as
shown in the Fig. 1. An adversary can either compromise the
physical sensors or the communication network used between
IoT sensor nodes and the edge. If successful, an adversary can
capture the sensor data, crafting adversarial examples for the
captured data, and inject the crafted adversarial examples into
the PHM system through a False Data Injection (FDI) [42]
attack. Indeed, the cloud layer also has its vulnerabilities [43],
however, typically third-party cloud services such as AWS,
Azure, etc. have their security measures [44], [45] which
makes them less vulnerable when compared to the physical
and edge layer.

III. ADVERSARIAL ATTACKS ON PROGNOSTICS
In this section, we formalize the adversarial attacks in the
PHM domain and present the adversarial example generation
algorithms.

A. Formalization of the problem

A machine or a piece of equipment in a PHM system
has several sensors that record different parameters. These
sensor measurements are recorded at every time step and hence
constitute for multivariate time-series data [46].
Deﬁnition 1: Let M be a multivariate time-series (MTS).
Assuming there are N sensors in an equipment, the multi-
variate time-series can be deﬁned as a sequence such that
M = [m1, m2, ..., mT ], T =| M | is the length of M , and

Algorithm 1: FGSM algorithm for PHM
Input

: Original multivariate time series M from an
ˆRU L

equipment and its corresponding label
: Perturbed multivariate time series M (cid:48)

Output
Parameter: (cid:15)
η = (cid:15) · sign((cid:79)mJf (M,
M (cid:48) = M + η;

ˆRU L));

Algorithm 2: BIM algorithm for PHM
Input

: Original multivariate time series M from an
ˆRU L

equipment and its corresponding label
: Perturbed multivariate time series M (cid:48)

Output
Parameter: I, (cid:15), α
M (cid:48) ← M ;
while i = 1 ≤ I do

ˆRU L));

η = α · sign((cid:79)mJf (M (cid:48),
M (cid:48) = M (cid:48) + η;
M (cid:48) = min{M + (cid:15), max{M − (cid:15), M (cid:48)}};
i + +;

end

mi ∈ RN is a N dimension data point at time i ∈ [1, T ]
representing the sensor measurements.
Deﬁnition 2: D = (m1, RU L1), (m2, RU L2), ..., (mT , RU LT )
is the dataset of pairs (mi, RU Li) where RU Li is a label
(RUL value at that time instant) corresponding to mi.
Deﬁnition 3: Time series regression task consists of training
ˆRU L from the possible
the model on D in order to predict
inputs. Let f (·) : RT ×N → ˆRU L represent a DL for
regression. Jf (·, ·) denotes the cost function of the model f .
Deﬁnition 4: M (cid:48) denotes the adversarial example, a perturbed
(cid:48)
ˆRU L (cid:54)= ˆRU L
and (cid:107)M − M (cid:48)(cid:107) ≤ (cid:15).
version of M such that
where (cid:15) ≥ 0 ∈ R is a maximum perturbation magnitude.

Given a trained DL model f and an input MTS M ,
crafting an adversarial example M (cid:48) can be described as a box-
constrained optimization problem.

f (M

(cid:48)

(cid:48)
) = ˆRU L

(cid:107)M (cid:48) − M (cid:107) s.t.

min
M (cid:48)
, f (M ) = ˆRU L and

(cid:48)
ˆRU L (cid:54)= ˆRU L

B. Adversarial example generation for PHM

We craft adversarial examples (M (cid:48)) that defect the RUL
predictions by increasing the cost of the model. In this work,
we adopt and apply two adversarial example generation
algorithms, Fast Gradient Sign Method (FGSM) [10] and
Basic Iterative Method (BIM) [11].

Fast Gradient Sign Method (FGSM): The FGSM was ﬁrst
proposed in [10] to generate adversarial images to fool the
GoogLeNet model. The FGSM works by using the gradients
of the neural network to create an adversarial example. This
attack is also known as the one-shot method as the adversarial
perturbation is generated by a single step computation. The

(a) CNN (RMSE = 9.93)

(b) LSTM (RMSE = 8.80)

(c) GRU (RMSE = 7.62)

True RUL
Predicted RUL

s
e
l
c
y
c

n
i

L
U
R

d
e
t
c
i
d
e
r
P

200

175

150

125

100

75

50

25

0

0

25

50

75

Engine ID

True RUL
Predicted RUL

s
e
l
c
y
c

n
i

L
U
R

d
e
t
c
i
d
e
r
P

200

175

150

125

100

75

50

25

0

True RUL
Predicted RUL

s
e
l
c
y
c

n
i

L
U
R

d
e
t
c
i
d
e
r
P

200

175

150

125

100

75

50

25

0

0

25

50

75

0

25

50

75

Engine ID

Engine ID

Fig. 2: Performance comparison of deep learning algorithms

attack is based on a one-step gradient update along the
direction of the gradient’s sign at each time step. This can
be summarised using the following expression:

η = (cid:15) · sign((cid:79)mJf (M,

ˆRU L))

(1)

Here, Jf is the cost function of model f , (cid:79)m indicates the
gradient of the model with respect to the original MTS M
ˆRU L, (cid:15) denotes the hyper-parameter
with the correct label
which controls the amplitude of the perturbation and M (cid:48) is
adversarial MTS. Algorithm 1 shows different steps of the
FGSM attack.

Basic Iterative Method (BIM): The BIM [11] is an extension
of FGSM. In BIM, FGSM is applied multiple times with
small step size, and clipping is performed after each step
to ensure that they are in the range [M − (cid:15), M + (cid:15)] i.e.
(cid:15) − neighbourhood of the original time series M . BIM is
also known as Iterative-FGSM since FGSM is iterated with
smaller step sizes. The adversarial examples generated through
BIM are closer to the original
input as perturbations are
added iteratively and hence have a greater chance of fooling
the network. Algorithm 2 shows different steps of the BIM
attack. The algorithm requires three hyperparameters: 1. the
per step small perturbation (α); 2. the amount of maximum
perturbation ((cid:15)) and 3. the number of iterations (I). Here,
the value of α is calculated using α = (cid:15)/I. Note, BIM
does not rely on the approximation of the model, and the
adversarial examples crafted through BIM are closer to the
original samples when compared to FGSM. This is because
the perturbations are added iteratively and hence have a better
chance of fooling the network. However, compared to FGSM,
BIM is computationally more expensive and slower.

IV. EXPERIMENTAL RESULTS

In this section, we evaluate adversarial attacks by per-
forming a case study. At ﬁrst, we evaluate the performance
of three PHM DL models without adversarial attacks and
then apply the adversarial attacks to evaluate the impact on
those models. We also evaluate the transferability property of
adversarial attacks. For the sake of reproducibility and to allow
the research community to build on our ﬁndings, the artifacts

Fig. 3: Normalized sensor measurements

(source code, datasets, etc.) of the following experiments are
publicly available on our GitHub repository1.

A. Deep learning models for the turbofan engine case study

In this work, we perform a PHM case study using an
aircraft Predictive Maintenance (PdM) [47] system. We use
NASA’s turbofan C-MAPSS [15] (Commercial Modular Aero-
Propulsion System Simulation) dataset. This dataset includes
21 sensors data with a different number of operating conditions
and fault conditions. More details about
these 21 sensors
can be found in [15]. We use the FD001 sub-dataset from
the dataset for our experiments. We use three DL models,
speciﬁcally, LSTM, GRU, and CNN for predicting the RUL
of the aircraft engines as they are known for their applicability
in the PdM domain [48]–[50]. Note, at a time instant, if a
piece of equipment has data available for the past N time
cycles, then we use these data to predict the RUL at the
N +1 time cycle. Fig. 2 shows the performance comparison of
DL models with architectures LSTM(100,100,100,100) lh(80),
GRU(100,100,100) lh(80), and CNN(64,64,64,64) lh(100).
The notation LSTM(100,100,100,100) refers to a network that
has 100 nodes in the hidden layers of the ﬁrst, second, third,
and fourth LSTM layers, and a sequence length of 80. In
the end, there is a 1-dimensional output layer. From Fig. 2
it is evident that GRU(100, 100, 100) with a sequence length
80 provides the most accurate prediction among these three

1https://github.com/dependable-cps/AdversarialAttack-PHM

(a) FGSM attack signature using CNN

(b) FGSM attack signature using LSTM

(c) FGSM attack signature using GRU

0.8

0.6

0.4

0.2

original signal
FGSM attack

e
g
n
a
r

d
e
z
i
l
a
m
r
o
N

0.8

0.6

0.4

0.2

original signal
FGSM attack

e
g
n
a
r

d
e
z
i
l
a
m
r
o
N

0.8

0.6

0.4

0.2

original signal
FGSM attack

0

0

50

100

150

200

250

300

0

0

50

100

150

200

250

300

0

0

50

100

150

200

250

300

Time Cycle

Time Cycle

Time Cycle

Fig. 4: FGSM ((cid:15) = 0.3) attack signature for sensor 2 of engine ID 49

(a) BIM attack signature using CNN

(b) BIM attack signature using LSTM

(c) BIM attack signature using GRU

0.8

0.6

0.4

0.2

original signal
BIM attack

e
g
n
a
r

d
e
z
i
l
a
m
r
o
N

0.8

0.6

0.4

0.2

original signal
BIM attack

e
g
n
a
r

d
e
z
i
l
a
m
r
o
N

0.8

0.6

0.4

0.2

original signal
BIM attack

e
g
n
a
r

d
e
z
i
l
a
m
r
o
N

e
g
n
a
r

d
e
z
i
l
a
m
r
o
N

0

0

50

100

150

200

250

300

0

0

50

100

150

200

250

300

0

0

50

100

150

200

250

300

Time Cycle

Time Cycle

Time Cycle

Fig. 5: BIM (α = 0.003, (cid:15) = 0.3, and I = 100) attack signature for sensor 2 of engine ID 49

models with the least Root Mean Square Error (RMSE) of
7.62.

B. Threat model for the turbofan engine PdM

Before proceeding to the results, we describe the threat

model for the turbofan engine PdM case study as follows.

Attack objective: The objective of the attacker is to trigger
either an early or delayed maintenance. An early, or in other
words unnecessary maintenance can result in ﬂight downtime
and unnecessary maintenance, both of which lead to a loss of
ﬂight time, loss of human effort, loss of resources, and also
incurs an extra maintenance cost. On the other hand, delayed
maintenance may lead to an engine failure which might cause
the loss of human lives in the worst case.

Attack surface: In this work, we consider both, the white-
box and black-box attacks. The results of the black-box
attack are demonstrated through the transferability property
of the adversarial examples [51]. In the white-box attack, the
adversary has access to the data and internal parameters of
the DL model. In the case of aircraft predictive maintenance,
the attacker can have access to the sensor data by exploiting
controlled area network (CAN) bus systems aboard aircraft.
The ICS-CERT published an alert on certain CAN bus systems
on-board certain aircraft that might be vulnerable to cyber-
threats. In this alert, an attacker with access to the aircraft
could attach a malicious device to avionics CAN bus to record
and inject false data. This may result in incorrect readings in an
avionic equipment [52]. This alert explores the possibility of

capturing sensor measurements, crafting adversarial examples
using the captured data, and injecting the crafted adversarial
examples back into the system.

Attack scenario: We consider an attack scenario where the
adversary has access to the aircraft and could attach a device
to avionics CAN bus [52] as mentioned in attack surface. The
device attached to the CAN bus can record and manipulate
the data. Considering a piece of equipment having N time
cycles and the data is transmitted through CAN to the PdM
system. The DL model in the PdM system is trained to predict
the RUL at the N + 1 time cycles using the data of previous
N time cycles. An adversary having this knowledge can craft
adversarial examples using the data of N time cycles to defect
the RUL prediction of N + 1 time cycle. Once the adversarial
examples are crafted, the adversary can inject these input
values back to the PHM system through FDI attacks.

Attack signatures: As mentioned earlier, the FD001 sub-
dataset has 100 engines, each of which has 21 sensors. Note,
7 out of these 21 engines can be ignored since their measure-
ments remain constant. For the rest of the 14 sensors, we used
the normalization technique to convert the raw sensory data
into a normalized scale. Fig. 3 shows a 3-D representation of
the sensor data from engine ID 49 for 300 time cycles. We
use the resultant normalized dataset to generate adversarial
examples using FGSM and BIM. For illustration, Fig. 4 and
Fig. 5 shows examples of a perturbed data from sensor 2
of engine ID 49 crafted using FGSM (with (cid:15) = 0.3) and

BIM (with α = 0.003, (cid:15) = 0.3 and I = 100), respectively.
From Fig. 5 it can be observed that the BIM attack generates
adversarial examples that are closer to the input. We choose
(cid:15) = 0.3 for both FGSM and BIM attacks to make sure that
the crafted adversarial examples are stealthy. Such stealthy
attacks often fall within the boundary conditions of the sensor
measurements, and hence they are indeed hard to detect using
the common attack detection mechanisms.

C. Impact of adversarial attacks on turbofan engine PdM

To analyze the impact of untargeted attacks, we create a
subset of test data from FD001 in which each engine has
at least 150 time cycles of data. This gives us 37 engines
in the FD001 dataset. This is done since engines more time
cycles data helps the DL models to make more accurate RUL
predictions. This gives us 37 engines in the FD001 dataset.
The resultant dataset is re-evaluated using the LSTM, CNN,
and GRU-based PHM models and the obtained RMSEs are
5.83, 7.92, and 5.77, respectively.

To analyze the impact of FGSM and BIM attacks on the C-
MAPSS, we craft adversarial examples using Algorithm 1 and
Algorithm 2 and apply them on the DL models. From Fig. 6,
we observe that the FGSM attack (with (cid:15) = 0.3) increases the
RMSE of CNN, LSTM and GRU models by 231%, 234%,
and 194%, respectively, when compared to the DL models
without attack. For the BIM attack (with α = 0.003, (cid:15) = 0.3
and I = 100), we also observe the similar trend, that is the
RMSE for the CNN, LSTM and GRU model is increased by
394%, 451%, and 446%, respectively, when compared to the
DL models without attack. In all cases, as shown in Fig. 6,
the BIM attack results in a larger RMSE when compared to
the FGSM attack.

The FGSM and BIM attacks can cause an under-prediction
or over-prediction as mentioned in the attacker’s objective. For
instance, as shown in Fig. 6, the CNN model predicts the RUL
(without attack) of 125 (in hours) for engine ID 33 and 132
(in hours) for engine ID 4. After performing the FGSM and
BIM attacks for engine ID 9, the same CNN model predicts the
RUL (in hours) as 176 and 250, respectively. This represents a
14% and 20% increase in RUL after FGSM and BIM attacks.
For engine ID 4, the FGSM and BIM attacks result in RUL
of 97 and 78, respectively. This represents 26.51% and 40.9%
decrease in the predicted RUL after FGSM and BIM attacks.
An over-prediction, as shown in the ﬁrst case, may cause
delayed maintenance, whereas an under-prediction, as shown
in the latter case may cause early maintenance, both of which
have catastrophic consequences.

To elucidate the impact of FGSM and BIM attacks on spe-
ciﬁc engine data, we ﬁrst apply the piece-wise RUL prediction
(using the same DL models) for a single-engine (in this case
engine ID 17) and then apply the crafted adversarial examples.
The piece-wise RUL prediction gives a better visual repre-
sentation of degradation (health status) in an aircraft engine.
Fig.7(a), Fig.7(b), and Fig.7(c) shows the piece-wise RUL
prediction using CNN, LSTM and GRU models, respectively,
at each time step. From Fig.7, it is evident that as the time

approaches towards the end of life, the predicted RUL (green
solid line) is closer to the true RUL (blue dashes). This is
because once the RUL predictions get more accurate with the
increasing amount of data.

Next, we craft adversarial examples using both FGSM and
BIM for that engine (engine ID 17), apply them for piece-wise
RUL prediction, and compare their impact, as shown in Fig.7.
We observe that the crafted adversarial examples have a strong
impact from the beginning of the RUL prediction on the CNN
model when compared to the LSTM and GRU models. The
piece-wise RUL prediction after the attack on the CNN model
follows the same trend of the piece-wise RUL without attack,
however, the attacked RUL values remain quite far from the
actual prediction. On the other hand, the impact of adversarial
attacks on the GRU model is interesting since we observe
that the RUL remains almost constant up to 104 time cycles
and 129 time cycles for FGSM and BIM attacks, respectively,
then starts decreasing. Such a phenomenon is deceiving in
nature as it indicates that the engine is quite healthy and
may inﬂuence a ‘no maintenance required’ decision by the
maintenance engineer. Once again, it is evident that the BIM
attack has a stronger impact on piece-wise RUL prediction
when compared to the FGSM attack.

Performance variation vs. the amount of perturbation: In
this part of the experiments, we explore the impact of the
amount of perturbation (cid:15) on the GRU model performance in
terms of RMSE. We picked the GRU model as it showed the
best performance in predicting the RUL as shown in Fig. 2.
Note, the maximum permissible value of epsilon ((cid:15) = 1.4)
[53]. The obtained result is shown in Fig. 8. We observe that
for the larger values of (cid:15), the BIM attack results in higher
RMSE when compared to the FGSM. For instance, for (cid:15) =
1.2, the FGSM attack results in an RMSE of 32.63, whereas
the BIM attack results in an RMSE of 53.67. This shows that
for the same value of (cid:15), BIM can generate adversarial examples
impacting the RMSE approximately twice when compared to
the FGSM. This is due to the fact [11] that BIM adds a small
amount of perturbation α on each iteration whereas FGSM
adds the total amount of perturbation (cid:15) on each data point.

Transferability of untargeted attacks: To evaluate the trans-
ferability of adversarial attacks, we apply the adversarial
examples crafted for a PHM model on the other PHM models
using the data of 37 engines as mentioned in the experimental
setup section. As mentioned earlier, such an attack is known as
the black box attack [54], where the attacker has no knowledge
of the target models internal parameters, but still cause a
considerable impact on the target model. The obtained results
are shown in Table I. The ﬁrst column (DL models) of the
Table I represents the RMSE of the models without attack.
We observe that the FGSM and BIM adversarial examples
crafted for the CNN model gives a higher RMSE when
transferred to other DL models. Also, another interesting fact
that we observe is when transferred, adversarial examples
crafted using BIM results into a higher RMSE. For instance,
the CNN-based PHM model has an RMSE of 7.92. When we

(a) CNN during FGSM (RMSE=18.35) and
BIM (RMSE=31.23)

(b) LSTM during FGSM (RMSE=13.65) and
BIM (RMSE=26.35)

(c) GRU during FGSM (RMSE=11.22) and
BIM (RMSE=25.79)

s
e
l
c
y
c

n
i

L
U
R

d
e
t
c
i
d
e
r
P

275
250
225
200
175
150
125
100
75
50
25
0

True RUL
Predicted RUL
FGSM
BIM attacked

0

5

10

15

20

25

30

35

s
e
l
c
y
c

n
i

L
U
R

d
e
t
c
i
d
e
r
P

250
225
200
175
150
125
100
75
50
25
0

True RUL
Predicted RUL
FGSM
BIM attacked

True RUL
Predicted RUL
FGSM
BIM attacked

s
e
l
c
y
c

n
i

L
U
R

d
e
t
c
i
d
e
r
P

250
225
200
175
150
125
100
75
50
25
0

0

5

10

15

20

25

30

35

0

5

10

15

20

25

30

35

Engine ID

Engine ID

Engine ID

Fig. 6: RUL estimation under FGSM ((cid:15) = 0.3) and BIM (α = 0.003, (cid:15) = 0.3, and I = 100) attack

(a) CNN during attack

(b) LSTM during attack

(c) GRU during attack

s
e
l
c
y
c

n
i

L
U
R

d
e
t
c
i
d
e
r
P

300

250

200

150

100

50

0

True RUL
Piece-wise RUL
FGSM attack
BIM attack

300

250

200

150

100

50

s
e
l
c
y
c

n
i

L
U
R

d
e
t
c
i
d
e
r
P

True RUL
Piece-wise RUL
FGSM attack
BIM attack

250

200

150

100

50

s
e
l
c
y
c

n
i

L
U
R

d
e
t
c
i
d
e
r
P

True RUL
Piece-wise RUL
FGSM attack
BIM attack

0

50

100

150

200

Time Cycle

0

0

50

100

150

200

Time Cycle

0

0

50

100

150

200

Time Cycle

Fig. 7: Piece-wise RUL prediction under FGSM ((cid:15) = 0.3) and BIM (α = 0.003, (cid:15) = 0.3, and I = 100) attack

TABLE I: Transferability of FGSM and BIM attacks. The
notation X/Y represents the RMSE after the FGSM/BIM attack

DL models

CNN (RMSE = 7.92)
LSTM (RMSE = 5.83)
GRU (RMSE = 5.77)

CNN
-
18.23 / 31.13
16.22 / 30.45

RMSEs after transfer
LSTM
17.76 / 28.45
-
10.89 / 19.52

GRU
12.23 / 24.12
11.33 / 18.65
-

Fig. 8: RMSE variation with respect to the amount of pertur-
bation ((cid:15)) for FGSM and BIM attacks

craft adversarial examples for the CNN model using FGSM
and BIM, and transfer to the GRU model, we observe that
BIM adversarial attack increases the RMSE almost two times
(24.12) when compared to the FGSM (12.23). Similar trend
is also observed for all other PHM models when adversarial
attacks are transferred.

V. CONCLUSION

In this paper, we introduce adversarial attacks to the PHM
domain to reveal their vulnerabilities and show how they can
be used to defect the deep learning-enabled prognostic models.
We crafted adversarial examples using the FGSM and BIM
algorithms for LSTM, GRU, and CNN based PHM models

using NASA’s turbofan engine case study. The obtained results
showed that the crafted adversarial examples that include very
small perturbation to the original sensor measurements can
cause serious defects to the remaining useful life estimation.
The BIM performed better in defecting the RUL with a smaller
perturbation when compared to the FGSM. We also observed
that adversarial examples crafted for CNN models are more
transferable to the other DL models when compared to the
LSTM and GRU. Our work is the ﬁrst one to shed light
on the importance of defending such adversarial attacks in
the PHM domain. In the future, we would like to investigate
countermeasures techniques to mitigate the adversarial threats
to the PHM domain.

REFERENCES

[1] C. L. Gan, “Prognostics and health management of electronics: Funda-

mentals, machine learning, and the internet of things,” 2020.

[2] IBM Travel & Transportation Industry, “Predictive maintenance
beneﬁts for the freight logistics industry,” 2015. [Online]. Available:
https://www.ibm.com/downloads/cas/AVNOLWQW

[3] L. Zhuang, F. Zhou, and J. D. Tygar, “Keyboard acoustic emanations
revisited,” ACM Transactions on Information and System Security (TIS-
SEC), vol. 13, no. 1, p. 3, 2009.

[4] A. K. Sikder, G. Petracca, H. Aksu, T. Jaeger, and A. S. Uluagac, “A
survey on sensor-based threats to internet-of-things (IoT) devices and
applications,” arXiv preprint arXiv:1802.02041, 2018.

[5] C. Szegedy, W. Zaremba, I. Sutskever, J. Bruna, D. Erhan, I. Goodfellow,
and R. Fergus, “Intriguing properties of neural networks,” arXiv preprint
arXiv:1312.6199, 2013.

[6] “Is

Industrial Machine

a
Cyber Security Risk?” Available: https://www.presenso.com/blog/
machine-learning-predictive-maintenance-cyber-security.

Predictive Maintenance

Learning

[7] “Cyber-attacks On Smart Factories Are On The Rise.” Avail-
able: https://smartmachinesandfactories.com/news/fullstory.php/aid/459/
Cyber-attacks on smart factories are on the rise.html.

[8] N. Akhtar and A. Mian, “Threat of adversarial attacks on deep learning
in computer vision: A survey,” IEEE Access, vol. 6, pp. 14 410–14 430,
2018.

[9] G. R. Mode, P. Calyam, and K. A. Hoque, “Impact of false data injection
attacks on deep learning enabled predictive analytics,” in NOMS 2020-
2020 IEEE/IFIP Network Operations and Management Symposium.
IEEE, 2020, pp. 1–7.

[10] I. J. Goodfellow, J. Shlens, and C. Szegedy, “Explaining and harnessing

adversarial examples,” arXiv preprint arXiv:1412.6572, 2014.

[11] A. Kurakin, I. Goodfellow, and S. Bengio, “Adversarial examples in the

physical world,” arXiv preprint arXiv:1607.02533, 2016.

[12] S. Hochreiter and J. Schmidhuber, “Lstm can solve hard long time lag
problems,” in Advances in neural information processing systems, 1997,
pp. 473–479.

[13] K. Cho, B. Van Merri¨enboer, C. Gulcehre, D. Bahdanau, F. Bougares,
H. Schwenk, and Y. Bengio, “Learning phrase representations using
rnn encoder-decoder for statistical machine translation,” arXiv preprint
arXiv:1406.1078, 2014.

[14] J. Gu, Z. Wang, J. Kuen, L. Ma, A. Shahroudy, B. Shuai, T. Liu,
X. Wang, G. Wang, J. Cai et al., “Recent advances in convolutional
neural networks,” Pattern Recognition, vol. 77, pp. 354–377, 2018.
[15] E. Ramasso and A. Saxena, “Performance benchmarking and analysis
of prognostic methods for cmapss datasets.” International Journal of
Prognostics and Health Management, vol. 5, no. 2, pp. 1–15, 2014.
[16] L. Zhang, J. Lin, B. Liu, Z. Zhang, X. Yan, and M. Wei, “A review
on deep learning applications in prognostics and health management,”
IEEE Access, vol. 7, pp. 162 415–162 438, 2019.

[17] O. Fink, Q. Wang, M. Svens´en, P. Dersin, W.-J. Lee, and M. Ducoffe,
“Potential, challenges and future directions for deep learning in prog-
nostics and health management applications,” Engineering Applications
of Artiﬁcial Intelligence, vol. 92, p. 103678, 2020.

[18] B. Yang, R. Liu, and E. Zio, “Remaining useful life prediction based on
a double-convolutional neural network architecture,” IEEE Transactions
on Industrial Electronics, vol. 66, no. 12, pp. 9521–9530, 2019.
[19] X. Zhang, Y. Dong, L. Wen, F. Lu, and W. Li, “Remaining useful life
estimation based on a new convolutional and recurrent neural network,”
in 2019 IEEE 15th International Conference on Automation Science and
Engineering (CASE).
IEEE, 2019, pp. 317–322.

[20] K. Park, Y. Choi, W. J. Choi, H.-Y. Ryu, and H. Kim, “Lstm-based
battery remaining useful life prediction with multi-channel charging
proﬁles,” IEEE Access, vol. 8, pp. 20 786–20 798, 2020.

[21] J. Li, X. Li, and D. He, “A directed acyclic graph network combined
with cnn and lstm for remaining useful life prediction,” IEEE Access,
vol. 7, pp. 75 464–75 475, 2019.

[22] L. Ren, X. Cheng, X. Wang, J. Cui, and L. Zhang, “Multi-scale
dense gate recurrent unit networks for bearing remaining useful life
prediction,” Future Generation Computer Systems, vol. 94, pp. 601–609,
2019.

[23] J. Chen, H. Jing, Y. Chang, and Q. Liu, “Gated recurrent unit based
recurrent neural network for remaining useful life prediction of nonlinear
deterioration process,” Reliability Engineering & System Safety, vol. 185,
pp. 372–382, 2019.

[24] J. Academy,

“Layers Of The

Internet Of Things,”

//analyticstraining.com/4-layers-of-the-internet-of-things/,
[Online; accessed 03-Dec-2018].

https:
2018,

[25] A.-R. Sadeghi, C. Wachsmann, and M. Waidner, “Security and pri-
things,” in 2015 52nd
IEEE, 2015,

vacy challenges in industrial
ACM/EDAC/IEEE Design Automation Conference (DAC).
pp. 1–6.

internet of

[26] M. Abomhara and G. M. Kien, “Cyber security and the internet of
things: vulnerabilities, threats, intruders and attacks,” Journal of Cyber
Security and Mobility, vol. 4, no. 1, pp. 65–88, 2015.

[27] V. Subramanian, S. Uluagac, H. Cam, and R. Beyah, “Examining the
characteristics and implications of sensor side channels,” in 2013 IEEE
International Conference on Communications (ICC).
IEEE, 2013, pp.
2205–2210.

[28] A. Maiti, M. Jadliwala, J. He, and I. Bilogrevic, “(smart) watch your
taps: side-channel keystroke inference attacks using smartwatches,” in
Proceedings of the 2015 ACM International Symposium on Wearable
Computers. ACM, 2015, pp. 27–30.

[29] S. M. Del Pozo, F.-X. Standaert, D. Kamel, and A. Moradi, “Side-
channel attacks from static power: When should we care?” in Proceed-
ings of the 2015 Design, Automation & Test in Europe Conference &
Exhibition. EDA Consortium, 2015, pp. 145–150.

[30] C. Bekara, “Security issues and challenges for the iot-based smart grid,”

Procedia Computer Science, vol. 34, pp. 532–537, 2014.

[31] D. Ding, Q.-L. Han, Y. Xiang, X. Ge, and X.-M. Zhang, “A survey
on security control and attack detection for industrial cyber-physical
systems,” Neurocomputing, vol. 275, pp. 1674–1683, 2018.

[32] Y. Shoukry, P. Nuzzo, A. Puggelli, A. L. Sangiovanni-Vincentelli, S. A.
Seshia, and P. Tabuada, “Secure state estimation for cyber-physical
systems under sensor attacks: A satisﬁability modulo theory approach,”
IEEE Transactions on Automatic Control, vol. 62, no. 10, pp. 4917–
4932, 2017.

[33] A. Kurakin, I. Goodfellow, and S. Bengio, “Adversarial machine learning

at scale,” arXiv preprint arXiv:1611.01236, 2016.

[34] A. Madry, A. Makelov, L. Schmidt, D. Tsipras, and A. Vladu, “Towards
deep learning models resistant to adversarial attacks,” arXiv preprint
arXiv:1706.06083, 2017.

[35] A. Goel, A. Singh, A. Agarwal, M. Vatsa, and R. Singh, “Smartbox:
Benchmarking adversarial detection and mitigation algorithms for face
recognition,” in 2018 IEEE 9th International Conference on Biometrics
Theory, Applications and Systems (BTAS).

IEEE, 2018, pp. 1–7.

[36] I. Rosenberg, A. Shabtai, Y. Elovici, and L. Rokach, “Defense methods
against adversarial examples for recurrent neural networks,” arXiv
preprint arXiv:1901.09963, 2019.

[37] N. Carlini, G. Katz, C. Barrett, and D. L. Dill, “Provably minimally-
distorted adversarial examples,” arXiv preprint arXiv:1709.10207, 2017.
[38] Y. Ganin, E. Ustinova, H. Ajakan, P. Germain, H. Larochelle, F. Lavio-
lette, M. Marchand, and V. Lempitsky, “Domain-adversarial training of
neural networks,” The Journal of Machine Learning Research, vol. 17,
no. 1, pp. 2096–2030, 2016.

[39] A. Kurakin, D. Boneh, F. Tram`er, I. Goodfellow, N. Papernot, and
P. McDaniel, “Ensemble adversarial training: Attacks and defenses,”
2018.

[40] H. Zhang, H. Chen, Z. Song, D. Boning, I. S. Dhillon, and C.-J. Hsieh,
“The limitations of adversarial training and the blind-spot attack,” arXiv
preprint arXiv:1901.04684, 2019.

[41] A. Chakraborty, M. Alam, V. Dey, A. Chattopadhyay, and D. Mukhopad-
hyay, “Adversarial attacks and defences: A survey,” arXiv preprint
arXiv:1810.00069, 2018.

[42] M. A. Rahman and H. Mohsenian-Rad, “False data injection attacks
with incomplete information against smart power grids,” in 2012 IEEE
Global Communications Conference (GLOBECOM).
IEEE, 2012, pp.
3153–3158.

[43] R. Kumar and R. Goyal, “On cloud security requirements, threats, vul-
nerabilities and countermeasures: A survey,” Computer Science Review,
vol. 33, pp. 1–48, 2019.

[44] J. Backes, P. Bolignano, B. Cook, A. Gacek, K. S. Luckow, N. Rungta,
M. Schaef, C. Schlesinger, R. Tanash, C. Varming et al., “One-click
formal methods,” IEEE Software, vol. 36, no. 6, pp. 61–65, 2019.
[45] P. De Tender, D. Rendon, and S. Erskine, “Azure security center,” in

Pro Azure Governance and Security. Springer, 2019, pp. 101–179.

[46] G. R. Mode and K. A. Hoque, “Adversarial examples in deep learning for
multivariate time series regression,” arXiv preprint arXiv:2009.11911,
2020.

[47] C. Zheng, W. Liu, B. Chen, D. Gao, Y. Cheng, Y. Yang, X. Zhang, S. Li,
Z. Huang, and J. Peng, “A data-driven approach for remaining useful life
prediction of aircraft engines,” in 2018 21st International Conference on
Intelligent Transportation Systems (ITSC).
IEEE, 2018, pp. 184–189.
[48] M. Yuan, Y. Wu, and L. Lin, “Fault diagnosis and remaining useful life
estimation of aero engine using lstm neural network,” in 2016 IEEE

International Conference on Aircraft Utility Systems (AUS).
2016, pp. 135–140.

IEEE,

[49] P. T. Yamak, L. Yujian, and P. K. Gadosey, “A comparison between
arima, lstm, and gru for time series forecasting,” in Proceedings of
the 2019 2nd International Conference on Algorithms, Computing and
Artiﬁcial Intelligence, 2019, pp. 49–55.

[50] X. Dong, L. Qian, and L. Huang, “A cnn based bagging learning
approach to short-term load forecasting in smart grid,” in 2017 IEEE
SmartWorld, Ubiquitous Intelligence & Computing, Advanced & Trusted
Computed, Scalable Computing & Communications, Cloud & Big Data
Computing, Internet of People and Smart City Innovation (Smart-
World/SCALCOM/UIC/ATC/CBDCom/IOP/SCI).
IEEE, 2017, pp. 1–6.
[51] F. Tram`er, N. Papernot, I. Goodfellow, D. Boneh, and P. McDaniel,
transferable adversarial examples,” arXiv preprint

“The space of
arXiv:1704.03453, 2017.

[52] US Department of Homeland Security CISA Cyber + Infrastructure,
“Can bus network implementation in avionics,” 2019, [Online; accessed
13-September-2019]. [Online]. Available: https://www.us-cert.gov/ics/
alerts/ics-alert-19-211-01

[53] H. I. Fawaz, G. Forestier, J. Weber, L. Idoumghar, and P.-A. Muller, “Ad-
versarial attacks on deep neural networks for time series classiﬁcation,”
in 2019 International Joint Conference on Neural Networks (IJCNN).
IEEE, 2019, pp. 1–8.

[54] N. Papernot, P. McDaniel, I. Goodfellow, S. Jha, Z. B. Celik, and
A. Swami, “Practical black-box attacks against machine learning,” in
Proceedings of the 2017 ACM on Asia conference on computer and
communications security. ACM, 2017, pp. 506–519.

