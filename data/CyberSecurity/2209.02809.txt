Localizing Load-Altering Attacks Against Power
Grids Using Deep Capsule Nets

Hamidreza Jahangir, Subhash Lakshminarayana, and Carsten Maple

1

2
2
0
2

p
e
S
6

]

R
C
.
s
c
[

1
v
9
0
8
2
0
.
9
0
2
2
:
v
i
X
r
a

Abstract—Recent research has shown that the security of
power grids can be seriously threatened by botnet-type cyber
attacks that target a large number of high-wattage smart elec-
trical appliances owned by end-users. Accurate detection and
localization of such attacks is of critical importance in limiting
the damage. To this end, the paper proposes a novel technique
using capsule networks (CNs) tailored to the power grid security
application that uses the frequency and phase angle data mon-
itored by phasor measurement units (PMUs). With the beneﬁt
of vector output from capsules and dynamic routing agreements
between them, CNs can obtain accurate detection and localization
performance. To demonstrate the efﬁciency of the suggested
technique, we compare the developed CN with benchmark data-
driven methodologies, including two-dimensional convolutional
neural networks (2D-CNN), one-dimensional CNN (1D-CNN),
deep multi-layer perceptrons (MLP), and support vector ma-
chines (SVM). Simulations are performed on IEEE 14-, 39-, and
57-bus systems, considering various real-world issues such as
PMU delays, noisy data, and missing data points. The results
show that CNs signiﬁcantly outperform other techniques, thus
making them suitable for the aforementioned cyber security
applications.

Index Terms—capsule networks, load altering attacks, bot-net

attacks, Internet of Things, cyber security.

I. INTRODUCTION

H IGH-wattage bot-net

threats compromising of ma-
liciously managed internet-enabled electrical devices
(e.g., air conditioners, heaters, electric vehicle charging points,
etc.) can pose serious threat to power grid operations. By
manipulating a substantial portion of the demand, these attacks
can disrupt power grid operations that can result in severe
consequences, such as unsafe frequency excursions, line out-
ages and increase the power grid’s operational cost [1], [2].
Dynamic load altering attacks (D-LAAs), in which an attacker
introduces a series of load perturbations over time following
the frequency ﬂuctuations, can disrupt power grid control
loops [3], [4]. Low-inertia conditions with a high penetration
of renewable energy resources can further exacerbate the grid’s
vulnerability to LAAs [5].

In order to defend the power grid against such attacks, exist-
ing works have focused on both ofﬂine security reinforcements
and online detection/mitigation. In ofﬂine measures, cost-
effective load protection strategies (e.g., by enabling tamper-
proof/encryption-enabled load devices) that can prevent the
destabilizing effects of D-LAAs were investigated in [3], [4].

H. Jahangir (Corresponding author), S. Lakshminarayana and are with the
School of Engineering, University of Warwick, UK. C. Maple is with the
Warwick Manufacturing Group, University of Warwick, UK
(Hamidreza.Jahangir,

Subhash.Lakshminarayana,

E-mails:

CM)@warwick.ac.uk

However, given the lack of uniﬁed security standards in IoT-
based electrical appliances, these prevention-based approaches
are challenging to implement practically. Thus, online mea-
sures to mitigate LAAs (responding to LAAs using generation
redispatch) are crucial [6]–[8]. The success of these online
measures relies on accurate detection and localization of
LAAs.

To this end, the main approach lies in inferring the at-
tacked nodes using power grid signals monitored by phasor
measurement units (PMUs). The authors in [9] developed a
hierarchical localization task for D-LAAs by analyzing power
grid frequency/phase angle data in the frequency domain
using an optimization approach. However, the algorithm is
developed speciﬁcally for a linear system model. Alternatively,
the authors in [10] framed attack detection/identiﬁcation as a
parameter estimation problem and solved using an unscented
Kalman ﬁlter (UKF) approach, which however, suffers from
scalability issues when considering multi-point attacks. To
overcome these limitations, recent work has applied machine
learning (ML) techniques [11], [12]. However, as we show
in this work, traditional ML methods such as support vector
machines proposed in [12] do not provide satisfactory perfor-
mance in large-scale systems. Other methods such as physics-
informed ML technique proposed in [11] suffer from imple-
mentation issues related to combining power grid operational
equations with ML’s training loss, limiting their applicability
(e.g., physics-informed neural network method fares poorly
in slow oscillatory systems). Thus, existing literature lacks a
robust framework for detecting/localizing LAAs.

ML techniques have also been applied in prior work in the
context of fault detection and classiﬁcation [13]–[15]. How-
ever, most of these works apply conventional techniques such
as deep multi-layer perceptrons (MLPs) and convolutional
neural networks (CNNs). In addition to the practical limita-
tions of these approaches, such as performance degradation
due to missing/outlier points in the input PMU datasets [16],
they also suffer from signiﬁcant drawbacks when applied in
the context of detecting/localizing attacks as enlisted in the
following. (i) In the context of a cyber attack, the exact time
corresponding to the onset of an attack cannot be known by the
operator. Thus, there is an inevitable delay between the actual
instant at which the attack is launched and the data observation
time window considered for attack detection/localization. An
example is shown in Fig.1. In the ML context, this implies
that the online observation proﬁles used to localize the attack
source are not synchronized with the ofﬂine training proﬁles
(as shown in Fig.1). The ML classiﬁer must be able to provide
accurate localization performance with such data inconsisten-

 
 
 
 
 
 
cies. (ii) In the context of LAAs, multiple combinations of
attack parameters result in dynamics that are very similar, as
shown and explained in Fig. 6. In such instances, we require
a high-resolution classiﬁer that can differentiate between very
similar observation proﬁles. Our results show that in both these
cases, existing MLPs and CNNs do not provide satisfactory
performance.

To overcome these drawbacks, we develop a novel data-
driven solution tailored to power grid monitoring data to de-
tect/localize LAAs based on capsule networks (CNs). The key
feature of CNs that makes them suitable to handle the afore-
mentioned challenges is their ability to capture “positional
instantiations” (PI), which refers to the position of different
features within a dataset. Conventional ML approaches such as
CNNs only detect the presence or absence of certain features
in the dataset. However, they do not record the exact position
of the features within the data. For instance, in the frequency
dynamics shown in Fig. 1, PI refer to the positioning of each
observed point in the proﬁles in the general space of the
input data and with respect to other proﬁles. Moreover, by
implementing vector output of capsules and internal loops in
their feedforward information ﬂow (known as dynamic routing
agreements), CNs are capable of capturing and analyzing
the position details of the extracted features from observed
data. [17]. This provides CNs with the ability to differentiate
between system dynamics that are very similar (such as those
illustrated in Fig. 6). We redesign CNs tailored to power grid
datasets and ensure their security (more details are provided
in Section IV).

Speciﬁcally, we examine a short observation window of the
frequency/phase angle data monitored by PMUs located at
generator bus terminals — just 2 seconds of the examined
proﬁles to be in compliance with the response time of the
power grid relays as speciﬁed by IEEE Standard 1547 [18]. In
addition, diverse attacks, including single- and multi-point at-
tacks (see Section V-A) that make unstable and semi-unstable
states to power grid (see Section III-C) are considered in this
study.

A summary of the key contributions of this paper is as

follows:

• Introducing a novel online monitoring data-driven tech-
nique based on CN architecture that is speciﬁcally de-
signed for power grid data – this classiﬁer network can
precisely detect and identify the source of LAAs within
a short observation window (lower than two seconds).
This is, to our knowledge, the ﬁrst study to include PIs
of power grid data to localize the primary source of
the impending threats posed by high-wattage IoT-enabled
devices.

• Using vector features (i.e., output layers with 16 and
32 instantiations for IEEE 39- and 57-bus cases, re-
spectively, see Section IV-2) and considering an internal
loop between the capsule layers (i.e., routing agreement
algorithm between the Primary and Digit capsules, see
Section IV-3) contribute to the development of a robust
method that can deal with missing and outlier points in
PMU proﬁles, common issues in real-world applications

2

Nomenclature I: Parameters of dynamic power grid modeling

Parameters
N , N = NG ∪ NL,
NG = |NG|
NL = |NL|
M
δ ∈ RNG
θ ∈ RNL
ω ∈ RNG
M ∈ RNG×NG
DG ∈ RNG×NG
KI ∈ RNG×NG
KP ∈ RNG×NG


BGG BGL

Bbus =



BLG BLL

BGG ∈ RNG×NG
BLL ∈ RNL×NL
BGL ∈ RNG×NL
(cid:15)L ∈ RL
KLω
KL ∈ RNL × RNG
ω
pL
pLS
pLV

Defenitions
total bus number
set of generator buses
set of load buses
total transmission line number
phase angle of the generator buses
phase angle of the load buses
generator bus frequencies
diagonal matrices of generator inertia coefﬁcients
diagonal matrices of damping coefﬁcients
diagonal matrices of proportional coefﬁcients
diagonal matrices of integral coefﬁcients





admittance matrix

sub-matrices of the admittance matrix (Gen-Gen)
sub-matrices of the admittance matrix (Line-Line)
sub-matrices of the admittance matrix(Gen-Line)
static LAA component
dynamic LAA component (D-LAAs)
matrix of attack controller gain values
frequency ﬂuctuations of the system
total system load
secured portion of the load
vulnerable portion of the load

that have signiﬁcant impacts on the stability of other data-
driven methods.

• Capturing the PIs of the observed proﬁles enables CNs
to present accurate localization results in challenging
circumstances, such as overlapping input data proﬁles
with unexpected delays (training data and test data are not
synchronized, as shown in Fig. 1). Allocating a unique
capsule to each target class in order to verify the presence
and arrangement of its PIs in the observed proﬁles is the
primary key factor in delivering highly accurate ﬁndings
in similar cases (see Section V-B1 and Fig. 6) and random
inevitable delays (see Section V-B4 and Fig. 8). This
feature distinguishes the CN’s performance in real-world
applications from other techniques.

II. PROBLEM STATEMENT

A. Power grid dynamics under LAAs

To examine the dynamics of the power grid in the presence
of LAAs, we consider a standard power grid model whose
dynamics can be described by the following differential equa-
tions [3] (Nomenclature I contains complete information on
the parameters):





I
0
0
0 −M 0
0
0
0











0





˙δ
˙ω
˙θ



 =

I

0
0
pLS + (cid:15)L


0



KI + BGG KP + DG BGL
BLL

−KL

BLG





 +





δ
ω
θ



 .

(1)

To characterize the LAAs, we ﬁrst split the power grid load
(pL) of each bus into two clusters as follows:

pL = pLS + pLV .

(2)

The safe portion of the load (pLS) excludes smart high-
wattage devices or is well guarded, while the vulnerable

3

Figure 1: Frequency and phase angle proﬁles of generator
buses in IEEE 57-bus system following the initiation of a D-
LAA with KL(39, 6) = 92.6 pu and (cid:15)24 = 0.4 MW.

Figure 2: General concept of the capsules and their instantia-
tion.

portion of the load (pLV ) is comprised of IoT-enabled high-
wattage devices such as smart electric vehicle charging sta-
tions, thermostats, etc. We delve deeper into the pLV to model
LAAs as follows:

pLV = (cid:15)L − KLω.

(3)

(cid:15)L refers to static LAA in which the attacker imposes a step-
change to the power grid’s load (i.e., turning the manipulated
devices on or off abruptly and without further alteration).
−KLω, on the other hand, relates to the dynamic LAA, in
which the attacker observes the frequency of the sensing buses
(ω) and attempts to behave adversely in response to frequency
ﬂuctuations (i.e., the attacker alters the load in the reverse way
of the frequency deviations). KL ∈ RNL × RNG is a matrix
of attack controller gain values that speciﬁes which gain value
is assigned to each sensing bus. Finally, the ultimate values of
LAAs are restricted as follows:

KLω ≤ (P LV − (cid:15)L)/2.

(4)

Fig.1 depicts a sample of the aforementioned attacks on the
IEEE 57-bus system in order to provide a better understanding
of the ﬂuctuations in power grid frequency and phase angle
owing to the imposed LAA (attack vectors are given in the
caption part of Fig.1).

B. Monitoring the power grid for LAAs localization

the power grid,

With PMUs distributed throughout

the
Independent System Operator (ISO) continually monitors the
power grid’s frequency { ˙δ(τ )
i }i∈NG,τ =1,...,T and phase angle
{δ(τ )
i }i∈NG,τ =1,...,T of the various points. Fig.1 illustrates an
example of the observed data from the installed PMUs in
generator buses. x(τ ) represents the value of the signal x
at time slot τ , with slots sampled at a time interval of Ts
and T representing the total number of time slots. IEEE/IEC
standards stipulate that the PMU sampling frequency for a 50

Hz system may range between 10 and 100 frames per second.
Thus, Ts is between 10 − 100 ms [19].

In this study, we identify and pinpoint

i }i∈NG,τ =1,...,T and phase angle {δ(τ )

the bus from
which cyberattacks are launched. We monitor the frequency
{ω(τ )
i }i∈NG,τ =1,...,T
proﬁles of PMUs for this purpose. Speciﬁcally, we want to
identify the locations associated with non-zero values of (cid:15)
and KL elements for destabilizing attacks (see Section IV for
more details).

III. DESIGNING CAPSULE NETWORKS FOR MONITORING
POWER GRID

A. Brief Introduction to Capsule Nets

Despite being robust classiﬁers, CNNs suffer from some
drawbacks in classiﬁcation tasks, as outlined by Hinton [17],
[20]. An illustration is provided in Fig.2, where we present
two versions of a human face (and a house), which have
identical features, but the features are placed at different po-
sitions/orientations within the respective images. When men-
tioned samples are presented as inputs to a CNN, its hidden
layers will identify the feature sets in the images (presented at
the center). However, the CNN will not be able to distinguish
between the top and bottom versions of the face (and the
house) since both the ﬁgures have identical features. This is
due to the following reasons. (i) The hidden layers of CNNs
detect the presence or absence of features with an image (or a
given dataset). They do not record the position or orientation of
a feature set within the dataset. This is because of the pooling
layers (e.g., max-pooling and/or average-pooling) that elim-
inate the positional features (instantiations) of the observed
proﬁles as they only capture the maximum and mean value
of the monitored regions within the image [21]. (ii) To obtain
a generalized representation, CNNs should be trained on a
large dataset containing images with all possible orientations.
However, this demands signiﬁcant computational power and
memory requirements. This is the invariance problem; CNNs

cannot deal with rotational invariance (i.e., examples from
different points of view that are entirely new samples for them
and are not generated by augmentation methods) [22].

In contrast, CNs implement the so-called capsules, which
are a collection of vector neurons rather than scalar neurons
used in the case with standard neural networks, such as CNNs
[23]. As depicted in Fig. 3, each capsule has N (≥ 1) dimen-
sions that correspond to its internal vector-based instantiations
(i.e., position, size, and orientation of the captured elements,
which can be deﬁned as the nose, ears and eyes shown in Fig.
2), whereas a typical neuron has only one scalar component. In
CNs, one particular capsule from the last capsule layer (called
the “Digit capsule” layer) is assigned to each target class in
order to check the presence of the mentioned instantiations
of that target class. In addition, CNs are equipped with an
internal computation called dynamic routing agreement that
determines which capsule should be triggered based on the
captured attributes from input data (described in Section IV-3).
These characteristics enable us to avoid any misclassiﬁcation,
as depicted in Fig. 2.

B. Application of Capsule Nets to LAA Detection/Localization

In the context of detection/localization of D-LAAs, we
leverage the voltage phase angle and frequency data at the
generator buses that are monitored by the PMUs. As depicted
in Fig.1, the instantiation parameters of the datasets include
the amplitude and position of the observed ﬂuctuations. The
application of CNs for the detection/localization tasks exam-
ines both the presence and position of the features within the
total time window, as well as their position relative to each
other.

As noted before, in cyber security applications, a signiﬁcant
challenge is that the exact time corresponding to the onset of
the attack cannot be known by the system operator. This can
present challenges in the application of ML, as it can result
in an offset between the datasets corresponding to the training
and testing phases. An example is illustrated in Fig. 1, where
we present data sets from two different observation windows.
In particular, to simulate the effect of the offset, we train
a neural network (during the ofﬂine phase) with a dataset
corresponding to power grid dynamics generated following
the injection of a cyber attack (i.e., the dataset from 0 − 2
seconds interval). However, during the online operations, we
test the classiﬁer’s performance with a dataset from the interval
0.5 − 2.5 seconds, wherein the offset is used to represent the
detection delay. In such cases, we require a robust deep learn-
ing network capable of handling the classiﬁcation task from
different orientations (i.e., in this case, offset between the train
and the test data). This unique characteristic is possible by CNs
due to their investigation of data in vector space, which enables
them to provide superior performance in these circumstances,
as proved in image processing tasks [20]. Dynamic routing
between capsules permits this network to send the relevant
attributes of the captured entity to the appropriate parents of
the preceding layer. To summarize, CNs replace CNNs’ scalar
output descriptors and max-pooling layers with vector output
capsules and dynamic routing agreements, respectively. In

4

Nomenclature II: Parameters of CN (dimension are given in Algorithm 1)

Parameters
S
bConv1, bConv2
WConv1, WConv2
ZConv1, ZConv2
ZPCaps
ZDigitCaps
p, q
PCaps
Z
p
DigitCaps
Z
q
Wpq
Zq|p
r
bpq
cpq
dq
vq
Lq
LM

Deﬁnitions
input data vector
bias vector of ﬁrst and second convolutional layer
weight matrix of ﬁrst and second convolutional layer
output vector of ﬁrst and second convolutional layer
vector of Primary capsules
vector of Digit capsules
index of Primary and Digit capsules
vector of pth Primary capsules
vector of pth Digit capsules
transition matrix between the Primary and Digit capsules
internal vector between pth Primary and qth Digit capsules
number of iterations for dynamic routing algorithm
beginning logits between pth Primary and qth Digit capsules
coupling coefﬁcients between pth Primary and qth Digit capsules
output of qth Digit capsule before applying squash function
output of qth Digit capsule after applying squash function
marginal loss value of qth Digit capsule
total marginal loss of all Digit capsules

contrast to the max-pooling layers, which discard the position
information of the captured entity, these details are retained
in capsules and leveraged in the feature extraction process by
dynamic routing agreements [24]. This is extremely helpful
for the highly overlapping input data; as shown in Fig.1, our
input data, in which we observe considerable overlap of the
frequency and phase angle proﬁles.

C. Gathering data for our supervised classiﬁer

In this study, we consider the captured frequency/phase
angle proﬁles (2 features) from PMU devices at generator
buses (NG) as input data, shown in Fig.1. Consequently, the
arrangement of our input data will be NG×T ×2 – T represents
the number of time steps associated with each observation
sample. In this work, the sampling interval is 20 milliseconds,
yielding 50 samples every second observation. Diverse D-
LAA types are investigated in order to enrich our training
data for our supervised classiﬁer using Monte Carlo simulation
techniques on the understudied cases (i.e., IEEE 14-, 39-, and
57-bus systems). Next, we explore the eigenvalues (deﬁning
them by the a + bj structure) of the power grid (in the state-
space representation) to determine if the implemented load-
altering efforts are cyberattacks (with at least one eigenvalue
i.e. a > 0, which transforms the
in the right-half plane,
power grid into an unstable state) or ordinary power grid
oscillations (without any eigenvalue in the right-half plane)
[25]. Moreover, according to the North American Electric
Reliability Corporation, when ζ ≤ 3%, 2.5 ≤ ωn ≤ 12.6
rad/s (the eigenvalues of the power grid can be stated in
terms of damping ratio ζ and natural oscillation frequency
(cid:112)1 − ζ 2 [26]), the power grid will
ωn: a = −ζωn, b = ωn
be in a semi-unstable state; in this situation, the power grid
will be unstable due to its inherent oscillations. Our training
library also takes into account these types of attacks.

IV. OVERALL STRUCTURE OF THE DESIGNED CAPSULE
NET

The proposed CN structure is shown in Fig. 4, and the
related notations are speciﬁed in the Nomenclature Table for
CN modeling. The network structure is tailored to the context
of detection and localization of the D-LAAs; it differs from the
CN architecture originally proposed in [20], which was primar-
ily designed for the image classiﬁcation task. In particular, we

Input:

Phase
{ω(τ )
=

data
angle
i }i∈NG,τ =1,...,T ,

Algorithm 1 Capsule Net for IEEE 39-and 57-bus cases
{δ(τ )
i }i∈NG,τ =1,...,T
IEEE
for
where,
10 and
=
for

data
NG
NG = {1, 2, 3, 6, 8, 9, 12}, |NG| = 7.
Labels: Deﬁning the location of the attacked bus as labels ( i ∈ NL), where, for IEEE
39-bus case |NL| = 29. and for IEEE 57-bus case |NL| = 50.
Deﬁned parameters: T = 100, WConv1, bConv1, WConv1, bConv2, Wp,q =
randomly made based on Gaussian distribution

{30, . . . , 39}, |NG|

IEEE 57-bus

case,
case,

frequency

39-bus

and

1: for nbatch iteration do
2:

Deﬁne S as input data vector,
S ∈ (cid:60)10×100×2 (IEEE 39-bus)
S ∈ (cid:60)7×100×2. (IEEE 57-bus)
Apply the ﬁrst 2D-CNN layer by 512 Kernels with size (1 × 10) and stride
(1 × 10):
ZConv1 ← ReLU (WConv1 ⊗ S + bConv1)
ZConv1 ∈ (cid:60)10×10×512 (IEEE 39-bus)
ZConv1 ∈ (cid:60)7×10×512(IEEE 57-bus)
Pass dropout layer (0.1)
Apply the second 2D-CNN layer by 256 Kernels with size (2 × 2) / (2 × 5) and
stride (2 × 2) / (1 × 2): (IEEE 39-bus)/(IEEE 57-bus)
ZConv2 ← ReLU (WConv2 ⊗ ZConv1 + bConv2)
ZConv2 ∈ (cid:60)5×5×256 (IEEE 39-bus)
ZConv2 ∈ (cid:60)5×5×256 (IEEE 57-bus)
Reshape: ZPCaps ∈ (cid:60)800×8×1 ← ZConv2 ∈ (cid:60)5×5×256 (IEEE 39-bus)
Reshape: ZPCaps ∈ (cid:60)576×16×1 ← Conv2 ∈ (cid:60)6×6×256 (IEEE 57-bus)
Pass data from Primary Caps to internal vectors:
PCaps
Zq|p ← Wpq Z
p
(IEEE 39-bus)
Z
Wpq ∈ (cid:60)8×16
Zq|p ∈ (cid:60)1×16 ⊂ ZDigitCaps ∈ (cid:60)29×16, q=1,...,29
(IEEE 57-bus)
Z
Wpq ∈ (cid:60)16×32
Zq|p ∈ (cid:60)1×32 ⊂ ZDigitCaps ∈ (cid:60)50×32, q=1,...,50
Deﬁne zero values for bpq
procedure DYNAMIC ROUTING(r, bpq, Zq|p)

∈ (cid:60)8×1 ⊂ ZPCaps ∈ (cid:60)800×8×1, p=1,...,800

∈ (cid:60)16×1 ⊂ ZPCaps ∈ (cid:60)576×16×1, p=1,...,576

PCaps
p

PCaps
p

for r iteration do

k=1 exp(bpk))

Calculate coupling parameters:
cpq ← exp(bpq)/ (cid:80)K
k=1,...,29 (IEEE 39-bus), k=1,...,50 (IEEE 57-bus)
bpq, cpq ∈ (cid:60)800×29 (IEEE 39-bus)
bpq, cpq ∈ (cid:60)576×50(IEEE 57-bus)
Calculated weighted sum of internal vectors:
dq ← (cid:80)
p cpqZq|p
dq ∈ (cid:60)16×1 (IEEE 39-bus)
dq ∈ (cid:60)32×1 (IEEE 57-bus)
Calculate output of Digit Caps:
DigitCaps
v
q
vq ∈ (cid:60)16×1 (IEEE 39-bus)
vq ∈ (cid:60)32×1 (IEEE 57-bus)
Updating bpq (agreement process):
bpq ← bpq + Zq|pvq

← Squashing(dq)

end for
end procedure
return vq
Calculate marginal loss function (LM ) as sum of Lq (based on Equation 6)
Updating trainable parameters
WConv1 ← WConv1 + ∂LM /∂WConv1
bConv1 ← bConv1 + ∂LM /∂bConv1
WConv2 ← WConv2 + ∂LM /∂WConv2
bConv2 ← bConv2 + ∂LM /∂bConv2
Wpq ← Wpq + ∂LM /∂Wpq

20: end for

3:

4:
5:

6:

7:

8:
9:
10:
11:

12:

13:

14:

15:
16:
17:
18:
19:

have two distinct power grid physical signals (i.e., frequency
and voltage phase angle proﬁles) that have values in different
scales, as opposed to image datasets where all the streams
have similar scales/characteristics. Thus, using an encoder at
the end of the capsule layers (as introduced in [20]) applied to
the power grid dataset under consideration causes convergence
issues, including vanishing/exploding gradients. To stabilize
the training procedure, we exclude the encoder in our CN de-

5

Figure 3: Data ﬂow diagram for a Digit capsule.

sign1. Furthermore, to reshape the dataset (which is rectangular
and consists of two different data streams of varying scales),
we include additional convolutional and dropout layers before
the capsule layers (to be explained in the following). Other
parameters, such as the layout of the convolutional layers
(kernel size, stride values) and capsule layers (components of
Primary and Digit capsules), have been meticulously designed
for our case studies, presented in Algorithm 1 (Nomenclature
II contains complete information on the parameters). The
description of the proposed framework is divided into the
following four categories (detailed explanations are provided
in accordance with Algorithm 1 and Fig. 3):

1) Initial interpretation of input data using CNN Layers:
We ﬁrst preprocess the frequency/phase angle data into a struc-
ture that is suitable as inputs to the capsule layers (Primary
and Digit capsules are the terms for the initial and output
capsule layers, respectively, see Fig.4). To this end, we add
cascaded convolutional layers with ReLU activation functions
and without the pooling layers (lines 2–5 of Algorithm 1).
Thus, the input data, which originally consists of a dataset
of dimensions (cid:60)10×100×2 and (cid:60)7×100×2 (triangular-structured,
recall its conﬁguration as outlined in Section III-C) is trans-
formed to (cid:60)5×5×256 and (cid:60)6×6×256 (square structure) for the
IEEE 39- and 57-bus systems, respectively. Note that in the
aforementioned convolutional structure, max-pooling layers
are excluded as they disregard the location information of the
features.

2) Capsule Layers: The output of the last convolutional
layer (ZConv2) is a stack of featured maps, which serve as
inputs to the capsule layers (after reshaping). CNs consist of
two types of capsule layers, called “Primary” and “Digit”
capsules, as depicted in Fig. 4. In essence, each Primary
capsule recognizes a segment of the objects and, via an internal
loop, activates the most relevant Digit capsules in the next
layer (also called dynamic routing, explained in the following).
As given in line 6 of Algorithm 1, for the Primary cap-
sule layer, in the IEEE 39−bus system, and IEEE 57−bus
system, we have Z PCaps ∈ (cid:60)800×8×1 (800 capsules, where
each capsule is a vector of 8 dimensions), and Z PCaps ∈
(cid:60)576×16×1 (576 capsules, where each capsule is a vector of
16 dimensions), respectively. Note that these dimensions are
chosen to provide the best performance on the respective
datasets. Then, as shown in Fig. 3, the data from the Primary

1Note that the encoder was introduced in [20] only to reconstruct the input
image in order to demonstrate that all the features required to reconstruct the
input data are stored in the capsules

6

Figure 4: Overall structure of designed CN for IEEE 57-bus case.

capsules (Z PCaps ) are propagated to the internal vectors (Zq|p)
with the transition matrix (Wpq) before it reaches the Digit
capsules (vDigitCaps
) by coupling coefﬁcients (cpq) (line 7 of
q
Algorithm 1). Each Digit capsule is assigned to a speciﬁc
target class; for instance, in the IEEE 39-bus case, there are
29 load buses that can present as the source of the D-LAAs,
and 29 Digit capsules are allocated to this case. For more
complex cases, capsules with greater dimensions are needed
∈ (cid:60)16×1 and vDigitCaps
[27], therefore, vDigitCaps
∈ (cid:60)32×1
are deﬁned for IEEE 39- and 57-bus, respectively.

q

q

3) Dynamic routing agreements: As shown in Fig. 3, the
weight matrix (Wpq) connects capsules in the Primary and
Digit layers. However, the agreements between the capsules
determine the ﬁnal classiﬁcation results. In other words, by
determining whether to send more or fewer features to each
capsule of the next layer, each Primary capsule attempts to
identify the output of the Digit capsules. To construct the
coupling coefﬁcients (cpq), beginning logits (bpq) are speciﬁed
as zero initially (line 8 of Algorithm 1), and then the Softmax
function is applied to them (line 11 of Algorithm 1). It should
be noted that the coupling coefﬁcients between each Primary
capsule and all of the Digit capsules accumulate to one owing
to the Softmax function. The weighted sum of internal vectors
and coupling parameters is then computed (dq) (line 12 of
Algorithm 1). As a result, the coupling parameters, which
are the fundamental apparatus of dynamic routing agreements
between capsules, will impact the output of the capsules in the
Digit layer. The Squash function is then applied to the internal
vectors to determine the ﬁnal output of Digit layer capsules
(line 13 of Algorithm 1):

.

vq =

dq
(cid:107)dq(cid:107)

(cid:107)dq(cid:107)2
1 + (cid:107)dq(cid:107)2
We utilize the squash function to verify that no vector’s length
is more than one since the length of the vector denotes the
probability that the given vector is identiﬁed correctly [28].
The agreement procedure occurs at line 14 of Algorithm 1,
where the dot product of internal vectors and the output of
Digit capsules are taken to update the initial logits.

(5)

Since the Primary capsules only output to the proper capsule
in the Digit layer, these capsules get cleaner input signals
and can pinpoint the location of an attack launched against
the power grid more precisely. This capability is especially

useful in situations with overlapping features, such as in our
application, where the frequency and phase angles of the
generators’ proﬁles overlap, shown in Fig. 6. Notably, trans-
formation matrices (Wpq) are not updated during the dynamic
routing agreement because doing so would mislead the gradi-
ent descent method [28]; dynamic routing agreement occurs
during the feed-forward procedure, and trainable parameters
such as transformation matrices (Wpq) are only updated during
the back-propagation task using gradient descent. Dynamic
routing agreement is an internal voting procedure (i.e., repeats
in a feed-forward manner for r times as shown in line 10
of Algorithm 1) amongst capsules to govern the delivery
of additional or fewer features to each capsule based on
the classiﬁcation target’s agreement or disagreement. In our
application, we set r = 5.

trainable parameters

4) Training procedure: All

(i.e.,
WConv1, bConv1, WConv2, bConv2, and Wpq) are adjusted
according to the gradient descent approach throughout the
training process (line 18-19 of Algorithm 1). The marginal
loss function is implemented as follows for each capsule in
the Digit layer [20]:

Lq = Tq max(o, m+ − (cid:107)vq(cid:107))2+
λ (1 − Tq)max(0, (cid:107)vk(cid:107) − m−)2,

(6)

where, m+ = 0.9, m− = 0.1, λ = 0.5, and if class q is
presented, Tq = 1, otherwise Tq = 0. The total error is then
computed by adding the errors of each capsule.

V. SIMULATION RESULTS

A. Simulation Settings

Three IEEE cases, including IEEE 14-, 39-, and 57-bus
systems, are explored to validate the efﬁciency of the pro-
posed method. Algorithm 1 provides speciﬁcs regarding our
developed CN for the IEEE 39- and 57-bus systems. However,
for the IEEE 14-bus system, we have 9 load and 5 generator
buses (i.e., we have (cid:60)5×100×2 input data), and for the Primary
and Digit layers, we assume 8- and 16-dimensional capsules,
respectively. Tracking Algorithm 1 can reveal further infor-
mation about the intended CN framework for the IEEE 14-
bus system. Topological data for these cases are taken from
the MATPOWER simulator, and dynamic simulation settings
are also included in the Appendix section. In this approach,

27Phase angle and frequency of generators 10Input data5122Conv 11256Conv226436576×𝟏𝟔Primary CapsDigit Caps5032𝑤𝑝𝑞=16×327

Table II: Localization results for different IEEE cases

Method

IEEE 14-bus

IEEE 39-bus

IEEE 57-bus

Single-point
attack
99.07%
99.02%
97.17%
96.44%
95.13%

Multi-point
attack
98.29%
98.07%
96.55%
96.29%
89.36%

Single-point
attack
98.32%
95.53%
89.76%
85.21%
70.15%

Multi-point
attack
97.01%
93.57%
87.59%
81.23%
69.93%

Single-point
attack
95.50%
89.72%
84.34%
77.19%
62.84%

Multi-point
attack
94.00%
88.09%
81.66%
70.92%
57.27%

CN
2D-CNN
1D-CNN
MLP
SVM

where, C i is the number of correctly classiﬁed samples and
Qi represents the number of query examples in the ith test
match, and Tn represents the total number of test episodes.

B. Simulation Outcomes and Analysis

1) Single-point and multi-point D-LAAs: This section com-
pares the general performance of the proposed approach to
that of other benchmarks in common practical settings, which
is shown in Table II. In smaller cases, such as the IEEE 14-
bus system, all the algorithms achieve acceptable performance,
particularly for single-point attacks; we also observe an ap-
proximate reduction of 1% accuracy for multi-point attacks.
The larger cases, such as the IEEE 39- and 57-bus systems,
present more challenging scenarios. In IEEE 39-bus and 57-
bus systems, the performance gap between CN and the second-
best approach (2D-CNN) is 3% and 6%, respectively. In IEEE
57-bus, particularly for multi-point attacks, MLP and SVM
fall below 80% accuracy, and CNN-based techniques (i.e.,
1D-CNN and 2D-CNN) cannot exceed 90% accuracy, while
CN achieves 94% accuracy, demonstrating the importance of
the vector representation of neurons and dynamic routing ar-
rangements in CN. To visually examine the difference between
CN and 2D-CNN (that achieves the closest performance to
CN) in the localization of D-LAAs, Fig.6 depicts two similar
attack cases in the IEEE 57-bus system (the most challenging
scenario), Case (a): KL(7, 3) = 46.65pu, (cid:15)6 = 2.2MW and
Case (b): KL(39, 3) = 52.15pu, (cid:15)6 = 2.2MW. Comparing the
frequency and phase angle proﬁles of Cases (a) and (b) around
the frequency of 49Hz and -0.015 Rad (dashed lines) reveals
the most discernible difference between these two proﬁles,
particularly the positions of the observed features. As stated in
Section III-A, CN is able to record the position of the detected
entity or entity portions as capsule dimensions. By applying
max-pooling layers instead of dynamic routing agreements
in feature extraction (dimension reduction in feedforward
ﬂow of features), CNN-based techniques erase the positional
information of observed features. This explains why CNs can
correctly differentiate these circumstances and pinpoint the
location of the attack, while 2D-CNN cannot.

2) Impact of the noisy PMU data: The existence of noise in
input data is a challenge for data-driven methodologies in real-
world applications. In this instance, the PMU data noise could
well be approximated by a Gaussian distribution [15]. Tables
III and IV detail the performance of the proposed approach
and other benchmarks in a variety of noisy situations (26, 20,
and 16.5 dB SNR (20 log(signal/noise) [32]) for single-point
and multi-point D-LAAs, respectively. CNs and 2D-CNNs
approaches that read data in 2D-manner are more resistant
to environmental noise in both single-point and multi-point

Figure 5: Training plot of CN for IEEE 57-bus system

Table I: Online response time of different approaches

Method
CN
2D-CNN
1D-CNN
MLP
SVM

Online response time (msec)
96
79
69
66
61

diverse situations, including delayed, noisy, and missed PMU
data samples, are investigated in single-point — the same
spot for static and D-LAAs — and multi-point — different
locations for static and D-LAAs, and the source of the D-
the
LAA is explored — modes. As stated in Section I,
detection of D-LAAs has been explored in a variety of research
literature; thus, in this study, we present comprehensive results
on the localization of D-LAAs. On average, the proposed CN
technique achieves greater than 98% detection accuracy in
various settings. Python 3.9 with the TensorFlow framework
on a Windows PC with an 11th Generation Intel(R) Core (TM)
i7-1185G7 @ 3.00GHz CPU and 16GB RAM was used to
develop and test the proposed method. To train, validate, and
test the proposed method, 2000 samples are generated (based
on the speciﬁed structure in Section III-C), and the data is
segmented as follows: 80% for training, 10% for validation,
and 10% for testing. Fig. 5 depicts training proﬁles, including
accuracy and total loss, for the validation and training data
sets, conﬁrming the stability of our designed CN. Due to the
internal loop of the dynamic routing agreements, the ofﬂine
training procedure for the proposed method is longer than
conventional 2D-CNN methods; however, the online inference
of the proposed method, which is a crucial factor in the
real-world application of the proposed method, is less than
100 milliseconds, which is an acceptable response rate for
detecting and localizing upcoming attacks. Table I provides
information on the online response time of CNs and other
benchmark techniques.

To demonstrate the promising performance of the CN in
localization of the D-LAAs, the numerical ﬁndings include
a thorough comparison with benchmark machine learning
techniques, including 2D-CNN, 1D-CNN, MLP, and SVM
(references [29] and [30] provide detailed formulations of
CNN networks and SVM classiﬁers, respectively). Finally, the
localization task’s accuracy is computed as follows: [31]:

accuracy =

1
Tn

Tn(cid:88)

i=1

C i
Qi ,

(7)

8

Figure 6: Comparing similar D-LAAs in IEEE 57-bus system: Case (a): KL(7, 3) = 46.65pu and (cid:15)6 = 2.2MW, , Case (b):
KL(39, 3) = 52.15pu and (cid:15)6 = 2.2 MW

Table III: Localization results for single-point attacks with
noise

Method

CN
2D-CNN
1D-CNN
MLP
SVM

26 DB
SNR

26 DB
SNR

16.5DB
SNR

IEEE 14-bus
20 DB
SNR

IEEE 39-bus
20 DB
SNR
97.89% 97.45% 95.12% 97.19% 96.71% 91.69% 94.89% 94.11% 90.41%
97.01% 96.07% 90.92% 95.04% 92.28% 88.76% 88.17% 86.15% 83.91%
96.74% 96.08% 89.13% 87.93% 86.15% 83.59% 83.87% 80.02% 77.92%
96.41% 95.13% 88.71% 87.33% 82.33% 80.66% 75.66% 74.87% 69.91%
91.07% 90.39% 87.84% 62.91% 60.44% 54.79% 64.12% 54.82% 52.41%

IEEE 57-bus
20 DB
SNR

16.5DB
SNR

16.5DB
SNR

26 DB
SNR

challenging circumstance than PMU data with lost points
owing to spikes. The localization outcomes for various IEEE
cases under multi-point attacks, as shown in Table V, support
this hypothesis. CNs outperform other techniques, notably in
IEEE 39- and 57-bus cases; 2D-CNNs achieve the next best
performance.

Table IV: Localization results for multi-point attacks with
noise

Method

CN
2D-CNN
1D-CNN
MLP
SVM

26 DB
SNR

26 DB
SNR

16.5DB
SNR

IEEE 14-bus
20 DB
SNR

IEEE 39-bus
20 DB
SNR
97.51% 94.11% 93.67% 95.53% 94.79% 90.12% 93.28% 90.62% 89.31%
96.14% 93.13% 88.32% 92.51% 86.63% 88.32% 84.33% 81.89% 79.31%
95.11% 90.23% 85.98% 86.56% 84.95% 85.98% 79.91% 77.62% 75.71%
96.66% 90.61% 81.31% 85.98% 79.43% 81.31% 67.33% 66.19% 59.76%
89.31% 85.43% 83.97% 81.13% 58.12% 53.97% 57.13% 56.22% 52.32%

IEEE 57-bus
20 DB
SNR

16.5DB
SNR

16.5DB
SNR

26 DB
SNR

attacks; for instance, in multi-point attacks on the IEEE 57-
bus system, other benchmarks (i.e. 1D-CNN, MLP, and SVM)
attain less than 80% accuracy. Further investigation reveals
that in the IEEE 57-bus case, there is roughly 7% and 10%
difference in the accuracy of the localization task between
the CN and 2D-CNN for single-point and multi-point attacks,
respectively. Once again, these results show the superiority of
CNs in localizing attacks in a noisy environment.

3) Impact of the missed/outlier PMU data: Another point
of concern in real applications is the presence of missing or
outlier points in the input data. Two instances were explored
in the simulation results to investigate these circumstances:
(i) between 3% and 5% of randomly selected data points
are removed and replaced with ﬁxed reference values of
50 Hz and 0 Rad for frequency and phase angle proﬁles,
respectively. (ii) 3% to 8% of the randomly selected points
are replaced with new points that vary randomly within a
20% range of the primary value. Fig. 7 depicts samples of
the previously described missing and outlier points. PMU
data with outlier points, as shown in Fig. 7, provide a more

Figure 7: Frequency proﬁles for IEEE 57-bus system with lost
points in PMU data (multi-point attack: KL(9, 7) = 43.31pu,
(cid:15)35 = 0.14MW, (cid:15)29 = 0.43MW) and outlier points in PMU
data (multi-point attack: KL(11, 3)=18.25pu, (cid:15)3 = 1.16MW,
(cid:15)29 = 0.39MW).

4) Impact of Detection Delays on Localization Perfor-
mance: Finally, we examine the resilience of the proposed CN
algorithm against detection delays (as explained in Section I),
which results in an offset between the training and testing

Table V: Localization results with lost and outlier points

Method

IEEE 14-bus

IEEE 39-bus

IEEE 57-bus

Lost points
in PMU data
94.11%
91.39%
89.23%
78.67%
49.13%

Outlier points
in PMU data
91.29%
89.12%
83.82%
73.77%
46.97%

Lost points
in PMU data
90.33%
87.06%
84.51%
74.63%
43.19%

Outlier points
in PMU data
88.49%
83.58%
78.63%
68.09%
35.47%

Lost points
in PMU data
88.42%
84.13%
77.29%
65.55%
39.33%

Outlier points
in PMU data
85.09%
80.79%
71.11%
62.55%
34.81%

CN
2D-CNN
1D-CNN
MLP
SVM

9

architecture for power grid security monitoring using PMU
data. CN improves the localization of impending D-LAAs by
delivering capsule-based vector feature extraction and routing
agreement. To validate CN’s success in localization, numerical
results were obtained on IEEE 14-, 39-, and 57-bus systems
with single- and multi-point attacks, and CN offered between
94% and 99% accuracy. To examine the robustness of the
suggested method in practice, CN and other benchmark tech-
niques were tested using noisy, missing, outlier points, and
delayed input data. CN excels in all of the above situations
(delivering at least a 5% improvement in precision over the
best method afterward). Based on the numerical ﬁndings of
this study in real-world circumstances,
the robust feature
extraction provided by the CN structure is recommended for
securing power grids against cyberattacks.

APPENDIX: SIMULATION PARAMETERS

Dynamic parameters for IEEE 14-bus system:

M1 − M5 = [0.125; 0.034; 0.016; 0.010; 0.015];
D1 − D5 = [0.125; 0.068; 0.032; 0.068; 0.072];
K P
K I
Di = 0.01, ∀i ∈ NL;

5 = [0.02; 0.09; 0.03; 0.03; 0.08];
5 = [0.35; 0.40; 0.35; 0.35; 0.40];

1 − K P
1 − K I

Dynamic parameters for IEEE 39-bus system:

10 = [1; 0.45; 0.45; 0.1; 0.5; 0.4; 0.3; 0.2; 0.4; 0.5];

M1 = 2.3186; M2 : M8 = 2.6419; M9 : M10 = 2.4862.
K P
K I
Di = 0.01, ∀i ∈ NL;

1 − K P
i = 0.6, ∀i ∈ NG; Di = 2, ∀i ∈ NG;

Dynamic parameters for IEEE 57-bus system:

M1 − M7 = [2.6309; 1.200; 5.078; 1.200; 2.6309; 1.200; 2.6309];
D1 − D7 = [2; 0; 2; 0; 2; 0; 2];
K P
K P
Di = 0.2, ∀i ∈ NL;

7 = [25; 35; 10; 20; 30; 10; 30];
7 = [25; 20; 20; 20; 30; 15; 30];

1 − K P
1 − K P

REFERENCES

[1] H. Mohsenian-Rad and A. Leon-Garcia, “Distributed internet-based load
altering attacks against smart power grids,” IEEE Transactions on Smart
Grid, vol. 2, no. 4, pp. 667–674, 2011.

[2] S. Soltan, P. Mittal, and H. V. Poor, “BlackIoT: IoT botnet of high
wattage devices can disrupt the power grid,” in Proc. USENIX Security,
2018, pp. 15–32.

[3] S. Amini, F. Pasqualetti, and H. Mohsenian-Rad, “Dynamic load altering
attacks against power system stability: Attack models and protection
schemes,” IEEE Transactions on Smart Grid, vol. 9, no. 4, pp. 2862–
2872, July 2018.

[4] S. Lakshminarayana, S. Adhikari, and C. Maple, “Analysis of iot-based
load altering attacks against power grids using the theory of second-
order dynamical systems,” IEEE Transactions on Smart Grid, vol. 12,
no. 5, pp. 4415–4425, 2021.

[5] S. Lakshminarayana, J. Ospina, and C. Konstantinou, “Load-altering
attacks against power grids under covid-19 low-inertia conditions,” IEEE
Open Access Journal of Power and Energy, vol. 9, pp. 226–240, 2022.
[6] C. Chen, M. Cui, X. Fang, B. Ren, and Y. Chen, “Load altering attack-
tolerant defense strategy for load frequency control system,” Applied
Energy, vol. 280, p. 116015, 2020.

Figure 8: Impact of delay in PMU data on localization
outcomes in IEEE 57-bus case

datasets (as illustrated in Fig. 1). In particular, during the
testing phase, we input data sets with varying delay times
– ranging from 0 to 1-second intervals in steps of 0.1-
second. Fig. 8 shows a thorough comparison of the various
approaches in the IEEE 39- and 57-bus cases. In comparison
to existing benchmarks, CN performs well against delay in
PMU data, losing 80% accuracy after 0.60 seconds, whereas
CNN-based techniques (2D-CNN and 1D-CNN) lose 80%
accuracy after 0.24 seconds. The prominent characteristic of
the CN that maintains the instantiation parameters in a vector
structure (i.e., 16- and 32-dimensional capsules for IEEE
39- and 57-bus systems) can tremendously aid us in these
circumstances. The dynamic routing agreement between the
Primary and Digit capsules empowers CN to make the most
of these multi-dimensional features. On the other hand, CNN-
based approaches eliminate the positional instantiations that
are essential in these circumstances. Finally, NN and SVM,
which read data point by point, entirely collapse due to data
delay (after a 0.3-second delay, accuracy falls below 40%.),
which is the fundamental issue with these methods in practical
applications.

VI. CONCLUSIONS

This paper presents a data-driven method based on CNs
for monitoring and protecting the power grid from attacks
against high-wattage IoT-enabled devices. We designed a CN

10

[30] Y. Han, W. Qi, N. Ding, and Z. Geng, “Short-time wavelet entropy
integrating improved lstm for fault diagnosis of modular multilevel
converter,” IEEE Transactions on Cybernetics, 2021.

[31] H. Dong, K. Song, Q. Wang, Y. Yan, and P. Jiang, “Deep metric learning-
based for multi-target few-shot pavement distress classiﬁcation,” IEEE
Transactions on Industrial Informatics, vol. 18, no. 3, pp. 1801–1810,
2021.

[32] M. Brown, M. Biswal, S. Brahma, S. J. Ranade, and H. Cao, “Charac-
terizing and quantifying noise in pmu data,” in 2016 IEEE Power and
Energy Society General Meeting (PESGM).

IEEE, 2016, pp. 1–5.

[7] Y. Guo, L. Wang, Z. Liu, and Y. Shen, “Reinforcement-learning-based
dynamic defense strategy of multistage game against dynamic load
altering attack,” International Journal of Electrical Power & Energy
Systems, vol. 131, p. 107113, 2021.

[8] Z. Chu, S. Lakshminarayana, B. Chaudhuri, and F. Teng, “Mitigating
load-altering attacks against power grids using cyber-resilient economic
dispatch,” 2022. [Online]. Available: https://arxiv.org/abs/2206.13129
[9] S. Amini, F. Pasqualetti, M. Abbaszadeh, and H. Mohsenian-Rad,
“Hierarchical location identiﬁcation of destabilizing faults and attacks
in power systems: A frequency-domain approach,” IEEE Transactions
on Smart Grid, vol. 10, no. 2, pp. 2036–2045, 2019.

[10] M. Izbicki, S. Amini, C. R. Shelton, and H. Mohsenian-Rad, “Identi-
ﬁcation of destabilizing attacks in power systems,” in Proc. American
Control Conference (ACC), 2017, pp. 3424–3429.

[11] S. Lakshminarayana, S. Sthapit, H. Jahangir, C. Maple, and H. V. Poor,
“Data-driven detection and identiﬁcation of iot-enabled load-altering
attacks in power grids,” IET Smart Grid, vol. 5, no. 3, pp. 203–218,
2022.

[12] L. Pepin, L. Wang, J. Wang, S. Han, P. Pishawikar, A. Herzberg,
P. Zhang, and F. Miao, “Botnets breaking transformers: Localization
of power botnet attacks against the distribution grid,” 2022. [Online].
Available: https://arxiv.org/abs/2203.10158

[13] T. Huang, N. M. Freris, P. Kumar, and L. Xie, “A synchrophasor
data-driven method for forced oscillation localization under resonance
conditions,” IEEE Transactions on Power Systems, vol. 35, no. 5, pp.
3927–3939, 2020.

[14] W. Li, D. Deka, M. Chertkov, and M. Wang, “Real-time faulted line
localization and pmu placement in power systems through convolutional
neural networks,” IEEE Transactions on Power Systems, vol. 34, no. 6,
pp. 4640–4651, 2019.

[15] Z. Li, H. Liu, J. Zhao, T. Bi, and Q. Yang, “A power system disturbance
classiﬁcation method robust to pmu data quality issues,” IEEE Transac-
tions on Industrial Informatics, vol. 18, no. 1, pp. 130–142, 2021.
[16] D. Osipov and J. H. Chow, “Pmu missing data recovery using tensor
decomposition,” IEEE Transactions on Power Systems, vol. 35, no. 6,
pp. 4554–4563, 2020.

[17] F. D. S. Ribeiro, K. Duarte, M. Everett, G. Leontidis, and M. Shah,
“Learning with capsules: A survey,” arXiv preprint arXiv:2206.02664,
2022.

[18] “Ieee standard for interconnection and interoperability of distributed
energy resources with associated electric power systems interfaces,”
IEEE Std 1547-2018 (Revision of IEEE Std 1547-2003), pp. 1–138,
2018.

[19] “IEEE/IEC international standard - measuring relays and protection
equipment - part 118-1: Synchrophasor for power systems - measure-
ments,” IEC/IEEE 60255-118-1:2018, pp. 1–78, 2018.

[20] S. Sabour, N. Frosst, and G. E. Hinton, “Dynamic routing between
capsules,” Advances in neural information processing systems, vol. 30,
2017.

[21] R. Mukhometzianov and J. Carrillo, “Capsnet comparative performance
evaluation for image classiﬁcation,” CoRR, vol. abs/1805.11195, 2018.
[Online]. Available: http://arxiv.org/abs/1805.11195

[22] E. Xi, S. Bing, and Y. Jin, “Capsule network performance on complex

data,” arXiv preprint arXiv:1712.03480, 2017.

[23] Y. Qin, C. Yuen, Y. Shao, B. Qin, and X. Li, “Slow-varying dynamics-
assisted temporal capsule network for machinery remaining useful life
estimation,” IEEE Transactions on Cybernetics, pp. 1–15, 2022.
[24] T. Wang, A. Bezerianos, A. Cichocki, and J. Li, “Multikernel capsule
network for schizophrenia identiﬁcation,” IEEE Transactions on Cyber-
netics, vol. 52, no. 6, pp. 4741–4750, 2022.

[25] N. P.Kundur and M. G. Lauby, Power system stability and control.

McGraw-hill New York, USA, 1994, vol. 7.

[26] M. A. Tabrizi, N. Prakash, M. Sahni, H. Khalilinia, P. Saraf, and
S. Kolluri, “Power system damping analysis on large power system
networks: An entergy case study,” in 2017 IEEE Power & Energy Society
General Meeting.

IEEE, 2017, pp. 1–5.

[27] A. Sezer and H. B. Sezer, “Capsule network-based classiﬁcation of
rotator cuff pathologies from mri,” Computers & Electrical Engineering,
vol. 80, p. 106480, 2019.

[28] G. E. Hinton, S. Sabour, and N. Frosst, “Matrix capsules with em
routing,” in International conference on learning representations, 2018.
[29] X. Zhang, K. W. Chan, H. Li, H. Wang, J. Qiu, and G. Wang, “Deep-
learning-based probabilistic forecasting of electric vehicle charging load
with a novel queuing model,” IEEE Transactions on Cybernetics, vol. 51,
no. 6, pp. 3157–3170, 2020.

