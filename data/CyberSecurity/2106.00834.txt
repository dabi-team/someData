Autonomous Low Power IoT System Architecture
for Cybersecurity Monitoring

Zag ElSayed(cid:63), Nelly Elsayed†, Chengcheng Li†, Magdy Bayoumi‡
(cid:63)†School of Information Technology
‡Department of Electrical and Computer Engineering
(cid:63)Oil Center Research, llc, USA
(cid:63)†University of Cincinnati, OH, USA
‡University of Louisiana at Lafayette, LA, USA

2
2
0
2

p
e
S
7
2

]
I

N
.
s
c
[

3
v
4
3
8
0
0
.
6
0
1
2
:
v
i
X
r
a

Abstract—Network security morning (NSM) is essential for any
cybersecurity system, where the average cost of a cyber attack
is $1.1 million. No matter how secure a system, it will eventually
fail without proper and continuous monitoring. No wonder that
the cybersecurity market is expected to grow up to $170.4 billion
in 2022. However, the majority of legacy industries do not invest
in NSM implementation until it is too late due to the initial and
operation costs and static unutilized resources. Thus, this paper
proposes a novel dynamic Internet of things (IoT) architecture for
an industrial NSM that features a low installation and operation
cost, low power consumption, intelligent organization behavior,
and environmentally friendly operation. As a case study, the
system is implemented in a mid-range oil a gas manufacturing
facility in the southern states with more than 300 machines
and servers over three remote locations and a production plant
that features a challenging atmosphere condition. The proposed
system successfully shows a signiﬁcant saving (>65%) in power
consumption, acquires one-tenth of the installation cost, develops
an intelligent operation expert system tool as well as saves the
environment from more than 500mg of CO2 pollution per hour,
promoting green IoT systems.

Index Terms—IoT, NSM, green systems, oil and gas, Network

Security Monitoring

I. INTRODUCTION

Network Security Monitoring (NSM) is deﬁned as the col-
lection, detection, and analysis of network security data as well
as escalation of indications and warnings to detect and respond
to intrusions on computer networks [1]. Network security mon-
itoring tools typically feature: network-based threat detection,
machine base threat detection, proactive network queries for
security data and “hunting” for suspicious behavior, integration
with one or more threat feeds, and create security alerts [2].
Information Network Security has traditionally started via the
United States Department of Defense (US DoD) categorizes
the domains of Computer Network Defense (CND) [3].

NSM is based upon the concept that prevention eventually
fails. No matter how much time and resources were invested
in static securing a network, without employing a continuous
monitoring operation, eventually, the scenario will make the
bad guys win. By analogy, all Middle Ages castles eventually
were fallen or surrendered due to advanced weapon technology
or political events [4]. Thus, when this happens, there should
be an organized technical system able to detect and respond

Fig. 1: A typical NSM sensor placement scenario.

to the intruder’s presence so that an incident may be declared
and the intruder can be eradicated with minimal damage done.
Any NSM system essentially depends on a device that
captures network trafﬁc, detects the anomaly, and performs
analysis over various levels of detail. This device is called an
NSM sensor. NSM sensors consist of a software suite that is
very resource hungry and relay on expensive hardware. The
storage disk is the main issue with the sensor, which can
grow up to ∼1Tbyte per day in some situations depending on
the data type that it uses. Additionally, NSM data can grow
exponentially and require regularly scheduled maintenance,
backup, and means of accessibility. It is important to note
that if the captured data is lost, this can limit the ability to
perform retrospective analysis, which is crucial for a current
investigation. Most of the current technologies consider the
sensors as passive devices with two interfaces, one interface
for management and logging and the other interface for trafﬁc
capture. The sensor is also usually used for just reporting to
a centralized point for analysis and alert reporting, such as
the Snort© repository, as shown in Fig. 1, where the green
lines represent the management trafﬁc to the central NSM HQ.

 
 
 
 
 
 
The static operation of the sensors makes them frozen in time,
role, and functionality, as well as the lack of feedback control,
which makes the sensor look like a waste of investment that
pushes back many industrial implementations to refuse to add
dedicated NSM systems to their network until it is too late,
which is one of the main issues with the NSM implementation.
However, by boosting ”life” to these sensors via commu-
nication, collaboration, and active control of sensor system
architecture can increase their efﬁciency, increase their illusion
of intelligence and reduce the overhead of operation and
maintenance costs. Thus, this work applies a novel approach
by injecting the dynamic Internet of Things (IoT) concepts
to the NSM sensors, which reduces their size, adds the
communication and the control framework, and applies the
messaging system to reduce the hardware requirements, lower
the operating power consumption and makes the detection and
prevention faster for many network intrusions.

Additionally, as a proof of concept, this architecture was
applied to the information system network of an oil and gas
production facility with more than 300 machines and serves,
serving three remote branches. The proposed architecture
system saves more than one order of magnitude in equipment
cost and more than 1.867MW of annual power consumption,
as well as saves the environment from more than 4000 mg of
CO2 emission per day.

II. BACKGROUND

Oil and gas industrials support 10.3 million jobs in the
United States and nearly eight percent of our nation’s gross
domestic product, with 32.5% of the market share. The oil and
gas industry faces unique cybersecurity challenges, given their
distributed, decentralized structures and the large operational
technology environment that does not ﬁt the traditional cy-
bersecurity scenarios. Thus, the majority of the manufacturers
do not have a complete cyber security implementation due
to cost, revenue, utilization, and investment. The investment
gap has left most heavy industries insufﬁciently prepared for
monitoring, detecting, and preventing threats. As a result,
they are attractively targeted by cybercrimes; in 2018, nearly
60% of relevant surveyed organizations had experienced a
breach that ended up with ﬁnancial loss, several of which
considered adding the NSM system only after the cyberattack
incidents [5].

The current technology features many advanced and so-
phisticated NSW systems for open source and commercial
implementations [7]. However, no matter how complex the
NSM system is, it still depends on the essential actor of
the system, which is the NSM Sensor Platform (SP). The
SP is a combination of hardware and software that perform:
collection such as Packet Capturing (PCAP) or NetFlow [8],
detection such as Signature-Based, Reputation-Based, and/or
Anomaly-Based, and network threat analysis [9]. SPs can be
classiﬁed by their functionality into three classes: Collection
Only, Half-Cycle, or Full-Cycle, depending on what operations
they perform, which can be: collection only, collection and
detection, or collection, detection, and analysis, respectively.

Fig. 2: Security Onion high-level system architecture [6].

SPs usually require a lot of hardware resources. For exam-
ple, a simple Security Onion© SP requires 12GB of mem-
ory, four cores processor, 200GB of disk storage, and two
network interfaces [10]. Security onion system architecture
is shown in Fig. 2. Security Onion is a free and open-
source Linux distribution for threat hunting, enterprise security
monitoring, and log management. The Security Onion includes
Elasticsearch [11], Logstash, Kibana, Suricata, Zeek, Wazuh,
Stenographer, Hive, Cortex, CyberChef, and NetworkMiner,
and it requires expensive hardware conﬁguration [6].

NetFlow is an embedded instrumentation within Cisco IOS
Software. It is used to characterize network operation and
vision into the network, which is an essential tool for IT
and system analysts [10]. In response to new requirements
and pressures, network operators are ﬁnding it critical to un-
derstand how the network is behaving, including application,
network usage, network productivity, anomaly, and security
vulnerabilities. A sample of the NetFlow data structure record
is shown in Fig. 3.

NetFlow protocol is very useful; however, it consumes a
high bandwidth on the network, it is vendor speciﬁc, version
speciﬁc, and it also increases the network devices processor
utilization (by around ∼20%) [12] while reducing the cache
availability that is highly depending on the network perfor-
mance, especially during peak hours which in the case study
is between 8:00 am to 9:30 am, 1:30 pm to 2:30 pm as well

Fig. 3: NetFlow cash data sample with network behavior
information [6].

as on major social and/or political events (e.g., elections).
SPs are added to the network via two primary methods.
The ﬁrst method is done via port mirroring, which requires
some reconﬁguring of the network device such as switches
and routers (which is not very suitable for the majority
of established industrial implementations) that many system
network administrators would refuse to perform without proper
testing and several simulation runs of the whole network
computer system, especially for the production automation
facilities where a heterogeneous network proﬁle of different
sensor, actuators gauges, and automation devices are most
probably installed and conﬁgured with less than minimum
documentation and little options activated. The second method
is via a network tapping that can be more transparent to the
network administration and management team, where network
taps could be implemented via a hardware tap or virtually via
a software tap [13], [14]. Software tap is usually preferred for
temporary solutions and remote installations. Both types of
network taps provide basic access to the wired network lines
to capture the outbound (Tx) and/or the inbound (Rx) data
trafﬁc. The data are basically seen as packets from the NSM
level of operation in the TCP/IP stack. The essential data types
the SPs process are:

• Full Packet Capture in from of (PCAP): has all the details

of the communication between two nodes.

• Flow Data (FD): has the log of the communication and

the summary log of the sessions.

• Packet String Data (PSTR): has the human-readable con-

tents of the packets.

The associate relative data size of the resulted log is usually
represented as 100%, 0.01%, and 4%, respectively, where the
PCAP is 100%. Their ratios also reﬂect and determine the
required storage size and the storage management protocols.
The Internet of Things refers to the ever-growing network of
physical objects that feature identiﬁers for internet connectivity
and data exchange communication that occurs between these
objects and other systems [13]. This work proposes a novel
NSM architecture based on the IoT concept that converts
the static NSM sensors into active IoT sensors framework,

Fig. 4: The proposed system IoTS NSM highlevel architeture.

Fig. 5: IoTS node action roll state machine with power
saving signal transmission via green arrows and state analysis
escalation signals via blue arrows.

applying the concept of the NSM Hub and the IoT clouds.
The proposed sensors are built on miniature board machines.
The IoT hub is implemented on a single NSM machine with
a backup (to avoid a single point of failure) and an IoT cloud
storage. The proposed system overcomes the cost associated
with traditional NSM via reduced hardware, increased sensor
utilization, and saved power via low operational energy con-
sumption.

III. SYSTEM DESIGN AND SILENCE UNVEIL

A. Proposed Architecture

The higher level of the proposed system architecture is
shown in Fig. 4 where it shows the sensors were replaced by
IoT Network Monitoring Sensor (IoTS) sensors, an IoT Hub
was added for data aggregation, and an IoT Could storage was
established. The following sub-sections discuss the detailed
descriptions, excluding cloud architecture as it is a standard
implementation and out of the scope of this work.

Parameter
CPU
Memory
NICs
Wireless
Storage
Pwr Consum Idea 1Watt, Peak 1.5Watt, Fanless

Hardware Node Specs
Broadcom quad-core 64-bit SoC, 1.5GHz
8GB LPDDR4
2x Gigabit Ethernet, Endace
5.0 GHz IEEE 802.11b/g/n/ac, Bluetooth 5.0, BLE
2TB USB 3.0 Flash Drive, w/r 100MB/s

TABLE I: IoTS Node Hardware Specs.

B. The IoTS NSM Sensor

This work proposes a miniature compact dynamic NSM
sensor (i.e., IoTS) to replace the traditional static machines
(servers that are NSM Sensors). The Proposed IoTS hardware
is a custom Raspberry Pi build with two-gigabit ethernet ports
and a Wi-Fi Antenna. The network ports are used for software
tapping and capturing packets. The IoTS uses Wi-Fi as a
primary link for neighbor discovery and IoT Hub control
signals. In the case study, the IoTS node is selected with
the specs as shown in Table I. Additionally, it is crucial to
notice that with this hardware conﬁguration, the node cost
does not exceed one-tenth the cost of a traditional midrange
NSM Sensor.

IoTS uses a compiled NSM software for packet capture,
where the session packet capture process is done via FProbe,
the PCAP is performed via daemonlogger, and the PSTR is
based on URLsnarf software [15]. The IoTS node features the
sensor functionality polymorphism. It is characterized by the
ability to change the type of the packet, capturing the scope
and the sensor role of the node according to the IoT Hub
control signal that acts as a transition trigger. The IoTS role
can switch between collection only, collection and detection,
or collection and detection and analysis, as shown in Fig. 5,
role state machine.

C. The IoT Hub Sensor

To all appearances, the IoT Hub could be seen as a regular
NSM sensor machine from the hardware conﬁguration point.
However, the proposed implementation adds some IT intel-
ligence that manages the IoTS states based on the detection
warning and alerts, saves the power state for the least needed
operation, and directs the data storage location when needed
via the neighbor storage sharing mechanism (NSSM) which
uses Dijkstra shortest pass algorithm the ﬁnd nearby nodes
(using network hops and network utilization as a metric) to
ﬁnd the nearest available node with extra storage to maneuver
the data storage task when needed, schedules the data transfer
to the IoT cloud, adds a second level detection alerts ﬁltering
to reduce false positive alerts via a pooling mechanism to
increase the system’s precision.

The IoT Hub also allows NSM HQ connection for ﬂow
monitoring and operation to an individual IoTS node or any
other part of the system, including a communication route
scenario. Additionally, the proposed IoTS enriches the moni-
toring capability to the point that even the management ﬂow
could be monitored for an extra security precaution with very
low installation and operation cost with a low network con-

Fig. 6: Power consumption comparison between traditional
NSM system and a substituted IoTS NSM system during
eleven months test period.

ﬁguration overhead. The IoT Hub uses the following criteria
for heuristic information and decision-making mechanism to
manage the state machine of each node in the network domain
based on the data that it gathers from the node messaging
system, such as sensor state, sensor role state, anomaly trafﬁc
detection, attack attempt detection, nearby nodes graph, and
data collection location change. These data are stored in a
database on the cloud with an instance cached on the IoT Hub
for fast access. The database contains weight and probability
values that are structured into a string that describes the whole
system as a unit and assigns a proposed list of actions to be
deployed to the IoTS to either change or keep their role state
as well as predict the NSSM triggers.

The initial values of the system states are set manually to
the IoT Hub. The IoT state is initially set to coll. & detn,
(i.e., allowing the global Collection and Detection) for all the
nodes. However, it could be conﬁgured according to the system
operation needs, such as normal routine monitoring, warning
threshold checks, anomaly detection, or attack attempt occur-
rence. Additionally, the system representation string database
is used by a parametrized generic algorithm [16], [17] that
provides a simple and primitive form of advice assistance
to the network monitoring analysts team that is based on a
supervised learning scheme that gains experience with time
and can provide a smart performance on the long run. This
unit has added the system as a ﬁrst step toward a more tailored
and case-speciﬁc informed decision-making mechanism for a
fully automated IoTS system.

The proposed system was implemented at an oil and gas
mid-range production plant with 15 IoTS nodes distributed at
the production plant, the sales and vendor access locations, the
server room as well as three remote branches in Louisiana,
Texas, and Oklahoma. The system was observed for ∼11
months and during an extremely hot summer (>100◦F) under
dusty and greasy operation conditions.

IV. RESULTS AND OBSERVATION

The IoT system concept enhances the static NSM architect
with dynamic behavior. It helps the network monitoring ana-

[2] “User monitoring with user behavior analytics.” https://www.rapid7.com/

solutions/user-monitoring/. Accessed: 2021-02-01.

[3] P. L. Campbell, “Department of defense instruction 8500.2 ”information

assurance (ia) implementation:” a retrospective.,”

[4] R. Bejtlich, The practice of network security monitoring: understanding

incident detection and response. No Starch Press, 2013.

“Independent

[5] Fortinet,
icant
fortinet.com/content/dam/fortinet/assets/white-papers/
WP-Independent-Study-Pinpoints-Signiﬁcant-Scada-ICS-Cybersecurity-Risks.
pdf. Accessed: 2020-12-30.

signif-
https://www.

pinpoints

scada/ics

security

risks.”

study

[6] R. Heenan and N. Moradpoor, “Introduction to security onion,” in The

First Post Graduate Cyber Security Symposium, 2016.

[7] Q. Meng, D. Li, and Y. Ma, “Research and application based on network
security monitoring platform and device,” in 2019 IEEE Innovative
Smart Grid Technologies-Asia (ISGT Asia), pp. 716–719, IEEE, 2019.
[8] S. G. Mack and G. Sriram, “Netﬂow: A tool for isolating carbon
ﬂows in genome-scale metabolic networks,” Metabolic engineering
communications, vol. 12, p. e00154, 2021.

[9] J. Vacca, Computer and information security handbook. Newnes, 2012.
[10] SecurityOnion, “Securityonion, hardware requirements.” https://docs.

securityonion.net/en/2.3/hardware.html. Accessed: 2021-01-25.
https://www.

“Elasticsearch,”

[11] B. Elasticsearch,

Internet:

elastic.

co/pt/,[Sep. 12, 2019], 2018.

[12] C. NETFLOW, “Introduction to cisco ios netﬂow-a technical overview.

cisco system,” Inc., http://goo. gl/BaQhxu, 2007.

[13] S. Jeong, J.-H. You, and J. W.-K. Hong, “Design and implementation of
virtual tap for sdn-based openstack networking,” in 2019 IFIP/IEEE
Symposium on Integrated Network and Service Management (IM),
pp. 233–241, IEEE, 2019.

[14] L.-M. Wang, T. Miskell, P. Fu, C. Liang, and E. Verplanke, “Ovs-
dpdk port mirroring via nic ofﬂoading,” in NOMS 2020-2020 IEEE/IFIP
Network Operations and Management Symposium, pp. 1–2, IEEE, 2020.
[15] K. Salah, M. Hammoud, and S. Zeadally, “Teaching cybersecurity using
the cloud,” IEEE Transactions on Learning Technologies, vol. 8, no. 4,
pp. 383–392, 2015.

[16] S. Selim, A. Amin, and Z. Saad, “Towards better computer game
ai techniques,” in 2nd Conference on Computer Science innovation
technology (CCSIT), 2013.

[17] L. Dawel, A.-K. Seifert, M. Muma, and A. M. Zoubir, “A robust genetic
algorithm for feature selection and parameter optimization in radar-
based gait analysis,” in 2019 IEEE 8th International Workshop on Com-
putational Advances in Multi-Sensor Adaptive Processing (CAMSAP),
pp. 674–678, IEEE, 2019.

lysts by adding more diverse operations via new functionalities
such as dynamic sensor role change, power saving options, and
sensor agents-like smart behavior. The major enhancements, as
seen from the industrial management point of view, are lower
power consumption and reduced initialization, deployment,
and operation cost, which are the main barriers that delay the
NSM implementation for this sector of the industry, as well
as the harsh environment operation condition tolerance.

The initial cost was reduced by order of magnitude. The
low-power and fan-less hardware boards are the winning
solutions for the outdoors and unbearable grease and dust
particles contamination the atmosphere. During 11 month test
period, the power consumption was recorded and is shown
in Fig. 6, where the blue bars indicate the traditional NSM
power consumption on the left scale vertical axis and the
yellow line indicates the IoTS NSM power consumption on
the right vertical scale axis. Additionally, the average power
computation during the eleven months operation was reduced
from 1.38kWh to 0.48kWh (by ∼65% less) at a peak sensor
utilization that led to saving the environment from 563.4 mg
of CO2 per hour, making the proposed system a green IoT
solution.

V. CONCLUSION

The IoTS NSM system architecture approach demonstrates
its efﬁciency and promotes an environmentally friendly so-
lution, especially in the major polluting industries where its
middle-range sector is facing many challenges in entering the
next cyber information age era. The proposed system charac-
terizes by the IoT architecture capabilities that give the net-
work security analysts a new boost and novel tools of network
security monitoring operation, optimization and functionality,
cooperative threat detection and prevention mechanisms with
a minimum effort from the system administration teams, and
zero conﬁguration tasks to the network engineers.

However, the proposed system has several limitations. First,
regarding the physical security of the nodes, which is the
case with all wireless sensor networks. Second, the proposed
system may suffer from packet drop that occurs during the
transition time of an IoTS during the role transfer operation,
which can take up to 35 seconds in the worst case, which
could be solved by deploying a multiple IoTSs on the same
ﬂow line to back up the transfer. Second,
the quality of
the hardware plays a crucial role, especially the NICs, in
preventing buffer overﬂow and packet loss which may jeopar-
dize the precision of the NSM detection system. Finally, the
parametrized learning algorithm needs high attention from the
system analyst team, and such learning methods are pruned to
learn wrong decisions, which can be improved via adding a
more sophisticated but lightweight learning technology such as
adaptive pattern recognition such as Artiﬁcial Immune System,
which the authors are considering for the future work.

REFERENCES

[1] C. Sanders and J. Smith, Applied network security monitoring: collec-

tion, detection, and analysis. Elsevier, 2013.

