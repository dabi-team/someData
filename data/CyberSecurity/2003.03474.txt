0
2
0
2

r
a

M
7

]

R
C
.
s
c
[

1
v
4
7
4
3
0
.
3
0
0
2
:
v
i
X
r
a

Machine Learning based Anomaly Detection for
5G Networks

Jordan Lam, Macquarie University, Robert Abbas, Macquarie University

1

Abstract—Protecting the networks of tomorrow is set to be a challenging domain due to increasing cyber security threats and
widening attack surfaces created by the Internet of Things (IoT), increased network heterogeneity, increased use of virtualisation
technologies and distributed architectures. This paper proposes SDS (Software Deﬁned Security) as a means to provide an
automated, ﬂexible and scalable network defence system. SDS will harness current advances in machine learning to design a CNN
(Convolutional Neural Network) using NAS (Neural Architecture Search) to detect anomalous network trafﬁc. SDS can be applied to an
intrusion detection system to create a more proactive and end-to-end defence for a 5G network. To test this assumption, normal and
anomalous network ﬂows from a simulated environment have been collected and analyzed with a CNN. The results from this method
are promising as the model has identiﬁed benign trafﬁc with a 100% accuracy rate and anomalous trafﬁc with a 96.4% detection rate.
This demonstrates the effectiveness of network ﬂow analysis for a variety of common malicious attacks and also provides a viable
option for detection of encrypted malicious network trafﬁc.

Index Terms—5G Security, IoT Security, Automated Intrusion Detection Systems, Convolutional Neural Networks, Artiﬁcial
Intelligence, Software Deﬁned Security

(cid:70)

1 INTRODUCTION

O VER the last decade, exponential increases in com-

puting power has allowed machine learning models
such as neural networks to operate with greater efﬁciency
and deliver increasingly accurate results. This in turn has
led to many novel applications of machine learning to be
conceived from traditional areas of research such as speech
recognition and computer vision. In this paper one such
novel application will be investigated, the application of a
CNN to analyse network trafﬁc with the goal of providing
an adaptive security solution for the diverse threat land-
scape of 5G networks. This application will be implemented
by collecting benign and anomalous network ﬂow data
from a simulated environment and using these ﬂows as
the input data for a CNN. An anomalous network ﬂow
can be deﬁned as behaviour that is unusual or does not ﬁt
with regular trafﬁc patterns for a particular user, business
or entity. This paper will assume anomalous network ﬂows
as malicious for testing purposes, however in a real world
scenario anomalous trafﬁc may not be malicious but is still
worthy for analysis due to potential future business impacts.
The layout of this paper is as follows, ﬁrstly the 5G
security landscape will be investigated, this includes ex-
amining the current environment in relation to the se-
curity architectures that 5G is able to inherit from LTE
(Long Term Evolution) and current 3GPP (3rd Generation
Partnership Project) developments in 5G security. Future
security concerns for 5G networks will then be examined,
these include how the exponentially growing number of IoT

•

Jordan Lam - Macquarie University.
E-mail: jordan.lam@students.mq.edu.au

• Robert Abbas - Macquarie University.
E-mail: robert.abbas@mq.edu.au

Last revised March 6th, 2020.

devices is changing the security landscape, managing multi-
ple technologies, increased virtualisation threats, managing
distributed architectures and network slices. A solution will
then be proposed through the implementation of a SDS sys-
tem which utilises machine learning to a 5G network. The
system is designed to access trafﬁc from both the backhaul
link into the core network and from the interconnect link out
of the core network to detect end-to-end threats and actively
update appropriate security policies.

Secondly the applications of machine learning will be
investigated in terms of current advances in anomaly detec-
tion. These current advances in this area of research will be
discussed and applications of neural network architecture
will be compared to demonstrate the beneﬁts of CNN’s.
Further discussion will include assessing the design of a
CNN with NAS and the application of autoML (Automated
Machine Learning) to analyse the provided data set to
produce a speciﬁc CNN model layout. Finally the layout
of the collected data set will be examined and the data
will be pre-processed into images which are acceptable to
the model. Results will then be collected from applying
the model (Appendix A) to the data set and these results
will be evaluated for their viability and application to 5G
and IoT security use cases. The goal of this project is
to provide some insight into the effectiveness of machine
learning in intrusion detection applications and show how
this solution can be completely deﬁned through software
allowing greater ﬂexibility, scalabililty and portability in a
5G network.

2 5G NETWORK SECURITY ENVIRONMENT

Environmental needs and threat models are changing as
malicious actors become more advanced and networks be-
come more complex and heterogeneous. IoT devices are also

 
 
 
 
 
 
predicted to increase from the current number of 27 billion
devices to 75 billion by 2025, this is a further cause for
concern in ensuring these devices can not be used in attacks
against mobile networks [1]. Historically mobile networks
have been built with security in mind from the ground
up, utilising multiple defences implemented in all layers of
the network. This is a good sign for the design of future
5G networks, however networks will become increasingly
heterogeneous as legacy, LTE and 5G network trafﬁc have
to be supported simultaneously and have increased reliance
on software based and virtualisation technologies. The large
difference in 5G networks in comparison to LTE networks
will bring much greater security risks and is a cause for
concern for network operators in maintaining a secure,
stable and reliable service.

2.0.1 Current Threat Landscape

Telecommunication networks can be broken down to in-
clude four major logical elements these are the radio access
network, core network, transport network and inter-connect
network [2]. Each of these network elements is comprised
of three planes which are each responsible for carrying
different types of trafﬁc. A graphical overview of how these
elements interact is shown in Figure 1.

Fig. 1: Big Picture: Telecommunication Networks

These are deﬁned as the control plane which carries
signalling trafﬁc, the user plane which carries the payload
(actual trafﬁc) and the management plane which carries the
administrative trafﬁc [2]. From a security perspective all
three of these planes are exposed to unique threats and also
uniform threats which relation to security all three planes
can be exposed to unique threats and there are also uniform
threats which can affect all three planes simultaneously.
Network security is implemented into telecommunication
networks in the following four phases [2]:

•

Standardisation: Operators, vendors and stakehold-
ers set standards for how networks globally will
operate. Standards are also deﬁned in relation to
protecting networks against any type of malicious
actor.

• Network Design: Network vendors design, develop
and implement the agreed standards into functional
network elements and systems, ensuring the end
product is both functional and secure.

• Network Conﬁguration: During the network deploy-
ment phase, networks are conﬁgured to achieve a
set security level, this is critical in setting security
parameters and further strengthening both network
security and resilience.

• Network Deployment and Operation: This is the
operational phase of the network, achieving deﬁned

2

security levels is dependent on appropriate network
deployment and operation.

In terms of 5G, this technology can be deﬁned as not only
providing another incremental upgrade in terms of speed
and latency but rather an enabler of a new set of services and
use cases, with the most unique selling point of 5G being the
realisation of a true IoT and inter-networked environment
that will impact all parts of society [3]. However the main
factor that will determine whether or not 5G can live up to
it’s potential is the question of how secure and stable can
5G deliver these new services? Trafﬁc sensors and Vehicle-
to-infrastructure services are one use case of IoT devices [3]
and it is critical that even these basic devices are protected
as they are highly vulnerable to DDoS (Distributed Denial
of Service) attacks. A clear example of compromised IoT
security is the Mirai attack that managed to control 600,000
vulnerable IoT devices in a botnet, applying massive DDoS
attacks on high proﬁle services such as OVH and Dyn [4].

Fortunately past telecommunication networks have en-
sured that security is a top architectural concern, which is
good news for 5G. For example in relation to LTE security
the 3GPP Release 8 added a variety of advanced security
and authentication mechanisms via nodes such as the ser-
vices capability server, while Release 11 provided additional
capabilities to the core network for secure access [3]. These
concerns of trust and authentication within the network
also carry over to 5G networks as 3GPP Release 15 adds
two mandatory authentication options for 5G and builds
a trust model through key separation [5]. In this way LTE
network security provides a foundation for enabling future
5G security processes. In terms of physical layer wireless
security the telecommunications industry is held in high
regard in comparison to other wireless technologies, even
a mobile phone’s use of licensed spectrum adds additional
layers of security to aid in preventing against eavesdropping
on data, voice and video trafﬁc [3].

Despite this in depth level of security design there are
still areas which need to be addressed in the 5G security
model. This includes new attack surfaces introduced by the
greater use of cloud and edge computing, as well as the
convergence of 5G with traditional networks creating new
attack vectors. The approach taken in this paper by applying
anomaly detection is the attempt to detect all trafﬁc that is
undesirable in the network, this means that malicious trafﬁc
that impacts both the network and potential end users can
be detected earlier to minimise adverse effects. Malicious
attacks can be generalised into two categories zero-day
attacks and day-one attacks [3]. Zero-day attacks are threats
that do not have an existing ﬁngerprint or signature, day-
one attacks are threats that have a signature or ﬁngerprint
and can be effectively mitigated. The end goal of anomaly
detection is to provide a faster and more proactive response
to previously unseen (zero day) threats and appropriate
mitigation.

2.0.2 Future Security Concerns

In addition to the new services and capabilities that 5G
networks will provide to users, 5G will bring a host of new
security concerns and considerations. These security chal-
lenges for 5G can be broken down into four main categories,

the management of IoT/V2X/M2M (Vehicle to X, Machine
to Machine), distributed architectures, virtualisation and
multiple technologies [6]. IoT devices themselves are cheap
devices designed for a speciﬁc use and security is usually
an afterthought, most of these devices do not even have
their own IP stack, let alone an inbuilt security system.
Communication to an end user from the IoT devices is also
another cause for concern due to peer-to-peer communica-
tion having no controller between parties, this is a major
threat surface.

Distributed architecture relates to the separation of con-
trol and user plane. For example traditionally a packet core
network is comprised of all hardware components located in
a data centre and these components have known parameters
and interfaces. However with 5G, core components can be
deployed on the edge and due to the nature of 5G being
a cloud native architecture these components are also now
on cloud servers. This creates new threat surfaces due to
the added difﬁculty of having to manage a distributed
packet core. The heavy use of virtualisation means that
communication between parties is web based and accom-
plished through the use of API’s (Application Programming
Interfaces), these API’s do not have set interfaces and de-
ﬁned common protocols in comparison to an LTE network,
therefore this creates an additional threat surface. 5G also
becomes another network to manage in the heterogeneous
mix of networks currently in operation. Security processes
also need to address securing the connectivity elements
between 3G, LTE and 5G networks.

A high level view of the 5G threat landscape is shown
below in Figure 2, highlighting these security challenges and
network segments that are at risk. Threats can be broken
into categories based on which parts of the network they
are impacting [3]:

• User Equipment Threats: Mobile botnets can to
launch DDoS attacks on multiple network levels
impacting 5G infrastructure, web servers and user
equipment. The goal is to bring services ofﬂine.
• Cloud Radio Access Network Threats: Rogue base
station threat to facilitate as a MITM(Man in the
Middle) attack, this attack can compromise user in-
formation, tamper with information, track users or
cause DoS attacks. Exploit 5G/LTE inter-networking
and launch downgrade attack.

• Core Network Threats: Vulnerable to IP (Internet
Protocol) based attacks from the internet, a botnet
can launch user plane and control plane attacks to
degrade or put critical core infrastructure ofﬂine.
• Network Slicing Threats: virtualisation based
threats due to the reliance on the security of the hy-
pervisor. Need to ensure isolation of slice functions
and resources from other slices, also authentication
from user equipment operating on a slice.

• SDN (Software Deﬁned Networking) Threats: Sep-
aration of control and user plane allows a malicious
user to attack the link between control and user
plane, a DoS (Denial of Service) attack could be
performed or control could be gained over network
elements.

3

Fig. 2: End-to-end 5G Network Threats overview
Core Network Elements: Network Function (NF, NFn), Network
Exposure Function (NEF), Network Repository Function (NRF)
Managing end-to-end encrypted trafﬁc is another con-
sideration in the evolving 5G threat landscape, as trafﬁc visi-
bility becomes limited inside 5G networks due to encryption
and web services further encrypt their trafﬁc. Encrypted
trafﬁc has increased by more than 90% year by year, with
a predicted amount of 80% of all web trafﬁc to be encrypted
in 2019 [7]. The encryption of network trafﬁc allows much
greater levels of privacy and security, however this same en-
cryption hinders network operators visibility of trafﬁc and
therefore the ability to determine if this trafﬁc is malicious
or benign. Mobile, cloud and web applications depend on
well implemented encryption mechanisms, utilising keys
and certiﬁcates to verify trust. The advantages of encryption
are also its disadvantages as malicious users can employ
encryption to evade detection and secure their malicious
activities.

The issue then in terms of security is that the major-
ity of organisations do not have the tools or solutions to
manage potentially malicious encrypted trafﬁc and systems
are not in place that have the ability to effectively detect
malicious encrypted trafﬁc without performance impacts
to the network [7]. Traditional techniques such as deep
packet inspection become more difﬁcult to perform as trafﬁc
would need to be decrypted at some point in the network,
analysed and then re-encrypted, this would be a resource
and time intensive process. Instead both encrypted and un-
encrypted trafﬁc can be analysed with ﬂow related statistics.
A network ﬂow can be deﬁned as a stream of trafﬁc with
a common set of identiﬁers [8]. Analysing ﬂow statistics
with machine learning will allow the detection of malware
in encrypted and unencrypted trafﬁc, without the need to
decrypt and re-encrypt every ﬂow.

2.0.3 5G SDS Implementation Architecture
5G networks and their major elements such as the C-
RAN (Cloud Radio Access Network) and core network are
virtualised, therefore completely deﬁned through software.
A similar approach can be taken for implementing an
automated security system through SDS. Figure 3. below
shows a possible implementation of an SDS system in a 5G
network. A copy of a sufﬁcient amount of trafﬁc from both
the backhaul link and from the core network link can be
analysed to provide end-to-end network anomaly detection.
A copy of data is taken for analysis and to build proﬁles of
deﬁning benign and anomalous trafﬁc for the model, also
by copying data there will be no impacts on network perfor-
mance while the model analyzes the data. The data is then
pre-processed to be in a form appropriate for the machine

learning model and analyzed for anomalies, any identiﬁed
anomalies are then stored in the policy manager database
with the corresponding trafﬁc features. These policies are
then sent to a VNF (Virtual Network Function) manager
which can then update the appropriate IDS (Intrusion De-
tection System) module in the core network. Based on the
time it takes for the model to process the data, set schedules
can be deﬁned for running the model to ensure policies in
the IDS Module are kept up to date and to further enhance
learning of the machine learning model. The key beneﬁts
are the ability to automate the detection, database updates
and appropriate action of any malicious ﬂows.

Figure 4. below displays how this SDS system can also
be deployed on speciﬁc network slices to monitor trafﬁc
ﬂows and build benign and anomalous trafﬁc proﬁles based
on the required speciﬁcations for that slice. The layout
of the diagram focuses on the separation of CP (Control
Plane) and UP (User Plane), with UP’s residing either in
the network core or in the C-RAN, UP’s can reside in the
C-RAN if being closer to the edge is required for latency
reasons, CP’s reside in the network core to centralise control
of the network. C-RAN elements are distributed including
the vBBU’s (virtualised Base Band Units), MEC (Mobile
Edge Computing) applications and UP’s. The coloured lines
indicate the logical connections between the SDS system
and various network components, slice data is accessed
both from the ﬁrst DC (Data Center) to monitor backhaul
trafﬁc from the C-RAN and also from the distribution of
network slices within the core network. The key beneﬁt of
a SDS system is that it can be deployed in different parts
of the network efﬁciently and with low cost. By developing
software deﬁned 5G security tools in a slice based approach,
anomaly patterns can be deﬁned per slice. One example of
this is training the model to identify inﬁltration attacks for
small IoT devices operating on one network slice that could
be potentially used in botnets for DDoS attacks. Depending
on operator requirements each SDS system is customisable
to their needs.

Fig. 3: 5G Network with SDS System

4

Fig. 4: SDS Application to Network Slices

3 CONVOLUTIONAL NEURAL NETWORK ANOMALY
DETECTION

Deep learning is an area of machine learning which involves
the design of multi-layered neural networks, which are
essentially mathematically based neuron-like structures that
use many variables to solve a complex equation. To develop
a neural network for classiﬁcation of text or images requires
signiﬁcant amount of architectural engineering to obtain a
network that is best suited to the provided data set and
has a sufﬁcient level of accuracy [9] . This section will
therefore explore current advances in the area of machine
learning based anomaly detection and then investigate how
techniques such as autoML and NAS can optimise model
design to allow the design of CNN architectures that are
both scalable and highly optimised for the type of data they
are training on.

3.0.1 Current Advances

Network intrusion detection relates to the issue of monitor-
ing and differentiating normal network ﬂows from abnor-
mal ﬂows which can compromise the security of a system.
Both governments and organisations invest heavily to ﬁnd
a reliable solution to protect their information assets and
resources from malicious access, this has brought intrusion
detection systems to the forefront of the cyber security
landscape [10]. As proposed by Denning [11] the idea of de-
veloping intrusion detection systems that employ machine
learning techniques is to identify abnormal usage patterns
and abnormal trafﬁc which may signal an attempted intru-
sion of the network. This notion led to the creation of a
new type of IDS based on learning algorithms rather than
manually updating signatures from previously identiﬁed
intrusions. Over the last three decades various machine
learning techniques have been applied in a conventional ap-
proach for developing network anomaly detection models.
These approaches employed supervised, unsupervised and
semi-supervised learning algorithms to propose a solution
for anomaly detection [10].

Therefore anomaly detection is not a new area of study
in machine learning applications and current research has
explored a variety of machine learning based applications.
However some common issues arise such as low accuracy

levels due to sub-optimal model design, unrealistically high
accuracy levels due to a lack of model generalisation and
over ﬁtting, and also the use of out of date and simplistic
data sets. As shown in [12] accuracy over 99% is achieved
using a multi-layered neural network, however the data
set used is the KDD99 dataset, a data set which is 20
years old and does not represent current dynamic network
environments.

Anomaly detection itself can be most easily modelled as
a classiﬁcation problem in supervised learning [10]. Super-
vised learning means that labeled data is used to train the
anomaly detection model. The goal of this type of training
is to classify the test data as anomalous or normal on the
basis of a speciﬁc set of features. In this paper the anomaly
detection problem will be approached from a supervised
learning perspective and use a CNN architecture designed
using NAS to attempt to optimise the highest possible
accuracy levels.

Effective model design requires a signiﬁcant degree of
architectural engineering [9], such as [13] demonstrates that
the design of basic CNN’s where extra layers are just added
for testing purposes does not improve accuracy, giving sub-
optimal results at under 80% detection rate. [14] demon-
strate the effectiveness of up and down sampling on data
to equalise volumes of anomaly and benign data, achieving
a detection rate of 99.99% using random forest and 99.30%
using three layered deep neural networks, these very high
results are unlikely to represent real world detection levels
and give the impression of an over ﬁtted model and a lack
of generalisation. Effective classiﬁcation of both benign and
anomalous trafﬁc is also an issue, in most cases models can
identify labelled benign trafﬁc with very high (99-100%)
accuracy, however determining anomalous trafﬁc can be
more difﬁcult, as shown in [15] where the random forest al-
gorithm is applied to the UNSW-NB15 dataset, benign trafﬁc
was classiﬁed at 99% accuracy, however anomalous trafﬁc
was classiﬁed at 82%, this means that 18% of anomalous
trafﬁc was essentially undetected.

The approach of this paper attempts to rectify and ad-
dress some of these common issues. This is done in two
main ways by selecting the most up to date IDS data set, the
CICIDS2018 which simulates a real world environment and
is explained in detail further on. And secondly by using a
CNN model based on NAS, which has achieved some of the
highest accuracy levels in the ImageNet data set and uses
a controller to autonomously optimise parameters for the
model. By taking this approach the most optimal model can
be generated for a speciﬁc data set.

3.0.2 AutoML & NAS Implementation

Neural architecture search brings automation to the design
of neural network models, this allows the most optimised
model designs to be computed without the tedious process
of physically designing, testing and adjusting models. This
cutting edge technique in neural network design has led
to the rise of a number of automated machine learning
platforms. In this paper Google’s autoML Vision and Vision
Edge platforms will be utilised for model design, training,
validation and testing. The underlying architecture which
enables these platforms is NASNet (Neural Architecture

5

Search Network) and MNasNet (Mobile Neural Architec-
ture Search Network).

Neural architecture search can be deﬁned as a gradient-
based method for ﬁnding optimised architectures. The struc-
ture and connectivity of a neural network can be speciﬁed
by a variable length string. Therefore it becomes possible to
use a RNN (Recurrent Neural Network) as shown in Figure
5. to generate this string [16]. The network speciﬁed by the
string is known as the child network and training the real
data set with the child network will result in progressive
accuracy increases on the test data set. This accuracy can be
used as the reward signal to compute the policy gradient
to update the controller. Therefore in the next iteration the
controller will give a higher probability to architectures
that receive a higher accuracy [16]. Put simply this means
the controller can learn to improve its search over time
and optimise placement of layers and blocks of the neural
network [17].

Fig. 5: RNN Controller

In terms of implementation neural architecture search
uses the controller to generate a set of architectural hyperpa-
rameters of the network. In the case of a CNN it can predict
ﬁlter height, ﬁlter width, stride height, stride width and a
number of ﬁlters per layer [16]. This process is then repeated
until the number of layers exceeds a certain value.

This issue with NAS is applying it to a very large
data set is extremely computationally intensive. Therefore
this technique is applied to a sample of the data set [9].
The NAS search space is deﬁned so that the complexity
of the architecture is independent of the depth of the
network and the size of input images. It achieves this by
breaking down all CNN’s in the search space into cells
with identical structure but different weights as shown
in Figure 6 [9]. Therefore searching for the most optimal
architecture can be reduced to searching for the best cell
architecture. By searching for each speciﬁc cell architecture,
speed is greatly increased and the cell is more likely to
have better generalisation. Based on this individual cell
training approach, networks can be optimised for speed
or accuracy depending on the search space size. This
allows the neural network to achieve a very high level
of accuracy on the ImageNet validation data set at 82.7%
top 1 accuracy [18].
is the largest database
for labelled images containing over 14 million images
and has widespread use in providing a benchmark for
determining the performance of different CNN models [19].

ImageNet

6

The IDS-2018 data set from the Canadian Institute of
Cybersecurity is a data set derived from a simulated envi-
ronment that attempts to address these shortcomings [24].
The main objective of this data set is to use a system-
atic approach to generate a diverse and comprehensive
benchmark data set for intrusion detection based on the
creation of benign trafﬁc and malicious trafﬁc proﬁles. The
environment itself is comprised of 50 attacking machines on
a victim organisation with 5 departments which includes
420 machines and 30 servers. The data set takes packet
captures of network trafﬁc and system logs of each machine,
as well as the extraction of 80 network features organised as
ﬂows. Figure 7. below shows the overall network topology
which is a common LAN network on an AWS (Amazon Web
Services) cloud platform. 6 subnets are installed labelled as
Dep1 to Dep5 and Servers. Dep1 to Dep4 machines have
Windows 8/10 OS’s, Dep5 has all Linux machines running
Ubuntu, Servers has different MS Windows servers such as
App servers, active directory and email. The attacker net-
work has Windows 8/10 machines and Ubuntu machines.

Fig. 6: NAS Search Space Block Generation

MnasNet extends the NAS search space concept by
implementing factorised hierarchical search space [20]. The
factorised hierarchical search space encourages additional
layer diversity throughout the network and balances the
size of the total search space. This approach brings more
ﬂexibility into NAS as models can be designed to balance
speed vs. accuracy. So far this approach has the biggest
advantage of speed. On the ImageNet data set the MNasNet
architecture achieved 75.2% top 1 accuracy which in com-
parison to traditional mobile neural network architectures
is 1.8 times faster than MobileNetV2 [21] and 0.5% higher
accuracy. In comparison to NASNet results were 7.5% lower
accuracy, however 2.3 times faster in processing images
within the architecture [20].

In the results section NASNet and MNasNET will be
compared with tests conducted for 24 hours and 3 hours
respectively to assess the differences in results. Latency and
computational power is also a primary concern for imple-
mentation purposes in this case. By optimising a neural
network that can still achieve a high level of accuracy, low
latency when training and also can be run on devices such
as a modern day smart phone, this will allow much more
ﬂexibility for deployment in a 5G network.

4 ANOMALY DETECTION DATA SET

4.0.1 Data Set Environment Overview

Anomaly detection is one of the most promising areas of
research in detecting novel attacks. However its adoption to
real world applications is hindered due to system complex-
ity requiring a large amount of testing, tuning and evalua-
tion. Therefore for research purposes a simulated system can
be designed with a comprehensive set of intrusions and ab-
normal behaviour mixed in with normal trafﬁc for anomaly
detection analysis. As network behaviours and malware are
changing it becomes necessary to have an environment that
more accurately simulates a real world scenario. The data
that can then be captured from the system is dynamic and
provides more meaningful and realistic insight into benign
and anomalous network trafﬁc behaviour. Unfortunately
traditional IDS data sets were not designed in this way,
for example the KDD CUP99 data set or the ADFA-IDS
data set were created in a testing environment that was
only comprised of single LAN links and one attacking and
one defending system, this approach represents a static
environment and provides sub-optimal and less realistic
results [22] [23].

Fig. 7: CICIDS2018 Network Topology

4.0.2 Network Proﬁles & Features

Protocols simulated in the environment are: HTTPS (Hyper-
Text Transfer Protocol Secure), HTTP (HyperText Transfer
Protocol), SMTP (Simple Mail Transfer Protocol), POP3 (Post
Ofﬁce Protocol 3), IMAP (Internet Message Access Protocol),
SSH (Secure Shell), FTP (File Transfer Protocol). Trafﬁc types
are broken into two proﬁles, either a B-proﬁle (benign
trafﬁc) or M-proﬁle (malicious trafﬁc). The types of trafﬁc
within these proﬁles is explained in further detail below.

B-Proﬁle: Describes normal

trafﬁc types simulated
through a number of machine learning algorithms with
different network protocols [24]:

• Emulates the behaviour of users by utilising various
machine learning statistical analysis techniques such
as K-Means, Random Forest, SVM and J48.

• Network features collected include packet size of
protocol, number of packets per ﬂow, various pat-
terns in payload, size of payload and request time
distribution of a protocol.

The speciﬁc attacks used in the M-Proﬁle are common at-
tacks used by malicious actors as well as penetration testers.
They cover a wide variety of scenarios from network based
attacks, different forms of HTTP DoS and DDoS, brute force
attacks, web based attacks and widespread vulnerabilities.
They also cover aspects of the OWASP top 10 2019 including
injection based attacks from SQL, broken authentication
due to poor password management allowing easier brute
force attacks and security misconﬁgurations which allow
vulnerabilities such as heartbleed due to unpatched systems
[25].

M-Proﬁle: Describes the attack scenario for anomalous

trafﬁc, six different attack scenarios are simulated [24]:

•

Internal network inﬁltration - exploits application
vulnerability by sending malicious ﬁles via email.
Metasploit framework is utilised for exploitation al-
lowing a backdoor to be executed on the victim’s PC.
• HTTP DoS - Slowloris, LOIC and HOIC which cause
denial of service are used, these tools are able to
make web servers inaccessible. Slowloris can do this
with just one machine and is most effective against
Apache servers [26]. Apache servers are the second
most common web servers on the internet account-
ing for 26.73% of web servers [27].

• Web app attacks - Web application based attacks
tested using the Damn Vulnerable Web App (DVWA)
for SQL injection, command injection and unre-
stricted ﬁle upload.

• Brute force attacks - Use a dictionary brute force
attack containing 90 million words against main
servers to attempt to acquire SSH and MySQL ac-
count information.

• Last updated attacks - Well known vulnerabilities
that can affect thousands of devices under certain
conditions and if they are running older, outdated
versions of software. Heartleech will be used in this
environment, it is used to scan systems vulnerable to
the Heartbleed bug, once systems are found they can
then be exploited and data can be exﬁltrated.

To deﬁne the features from these proﬁles, initial raw
packet captures are converted to network ﬂows for eas-
ier analysis. Using CICFlowMeter bidirectional ﬂows are
generated where the ﬁrst packet determines the forward
(source to destination) and backward (destination to source)
directions. Therefore from the 83 statistical features gathered
from the ﬂows such as duration, number of packets, number
of bytes, length of packets, these are calculated separately
for both forward and reverse directions. For TCP ﬂows
they are terminated upon connection teardown (once a FIN
packet is received) and UDP ﬂows are terminated by a ﬂow
timeout.

7

Fig 8. Pie Chart of Malicious Trafﬁc Type Volumes

Fig 9. Pie Chart of all Trafﬁc Volumes

This paper will break down all labelled network ﬂows
into two streams for analysis, anomalous and benign. Be-
nign is comprised of all trafﬁc described in the B-Proﬁle and
anomalous is all trafﬁc described in the M-Proﬁle. Different
attacks occur at different days out of a total of 10 days or 240
hours, these attacks are dispersed randomly within benign
trafﬁc. In total there are 2748235 anomaly ﬂows and 6584535
benign ﬂows giving a total of 9332770 ﬂows in the data set.
This is a split of 70.55% benign trafﬁc and 29.45% anomaly
trafﬁc. The two pie charts below in Figure 8. and Figure 9.
show the breakdown of trafﬁc volumes in the data set.

5 INTER-ARRIVAL TIME & FEATURE SELECTION

IAT (Inter-Arrival Time) can be deﬁned as the average
frames, packets or ﬂows that arrive at a host over a certain
time period [28]. By examining this feature and other statis-
tical forms of IAT such as the mean, minimum, maximum
and standard deviation of IAT of a network ﬂow, benign
trafﬁc can be modelled to conform to the Weibull distribu-
tion. By modelling benign trafﬁc to the Weibull distribution,
anomalous trafﬁc can therefore be identiﬁed as it will cause
irregularities and deviations in the distribution [29]. This
correlation is identiﬁable across packets, ﬂows and sessions
for both TCP (Transmission Control Protocol) and UDP
(User Datagram Protocol) transport protocols in internet
trafﬁc [30]. Therefore these IAT network ﬂow features can be
indicative of the difference in benign and anomalous ﬂows.
Current studies demonstrate the Weibull distribution
modelled to internet trafﬁc by using trafﬁc traces captured
from the WAND Research Group [31]. 24 hours of trafﬁc

monitoring from an ISP has captured data from wireless
hotspots, DSL and ethernet connectivity in an urban en-
vironment [30]. The data captured shows the conformance
for packets, ﬂows and sessions as they decrease from unity
(value of 1) to the Weibull distribution.

Extending this concept to focus on network ﬂows, [29]
has demonstrated that despite the variety of networks in
size, number of users, applications and loads, the IAT’s
of benign TCP ﬂows also conform to the Weibull distri-
bution and speciﬁc irregularities in these ﬂows will cause
deviations in trafﬁc. Multiple data sets were collected with
differing bandwidth, size and applications to verify this
conformance. Data sets that were tested in [29] were:

•

•

•

•

•

1. MAWI3(Measurement and Analysis on the WIDE
Internet): June 2012, 1.4 million ﬂows, captured
from a 150Mbps trans-paciﬁc backbone link between
Japan and USA.
2. SUT(Sharif University of Technology): June 2012,
2.4 million ﬂows, captured from internet gateway of
SUT campus.
3. MCO: February 2011, 2.3 million ﬂows, captured
from an internet gateway of a medium business
company.
4. NUST1(National University of Sciences and
Technology): March 2009, 2.2 million ﬂows, Cap-
tured from an endpoint router located in NUST,
Pakistan.
5. ISP NUST: captured from an edge router of a
medium sized ISP and merged with attack ﬂows
generated in NUST.

When analysing the trafﬁc ﬂows from the above data sets,
[29] shows that the deviation in the Weibull distribution is
visible when comparing all ﬂows to benign ﬂows.

Speciﬁc attack injections into the ISP NUST data set
have also been analysed in terms of detection rate. The
attack injection was for a SYN ﬂood attack, a type of DoS
attack that consists of a high volume of SYN packets with
a very small inter-arrival times [29]. This drastic change
in inter-arrival time causes irregularities in the Weibull
distribution and allowed detection of attacks. [29] shows
that a 98.8% accuracy rate was achieved with a 4.8% false
alarm rate. This demonstrates the high amount of variance
that some common types of malicious attacks can have on
ﬂow inter-arrival time. This notion forms the basis for the
feature selection decision from the CICIDS2018 data set and
these assumptions will be veriﬁed in the results section.

By considering these past studies in inter-arrival trafﬁc
ﬂow behaviour these concepts can be extended to current
day machine learning models to provide clearly deﬁned
labelled data on classifying between anomalous and benign
trafﬁc ﬂows. Feature selection therefore involved a two part
selection process. The ﬁrst part is the selection of standard
features that provide basic information on the ﬂow. The
second part involves selecting a limited number of features
that demonstrate clear differences in values between a be-
nign and anomalous ﬂow. As demonstrated previously, IAT
ﬂow data can be proposed as a strong candidate and more
speciﬁcally statistical variations of IAT ﬂow data can be used
to further analyse these correlations. This decision to limit
feature selection is to provide the machine learning model

8

with clean data and to remove excess noise in the data that
is not meaningful in correlating the relationship between
anomalous and benign ﬂows. By doing this a more efﬁcient
model can be designed, with higher accuracy and faster
speed. 20 features along with an additional label column
to classify each ﬂow type have therefore been selected and
these are:

•

• Basic Flow Features: Destination Port, Protocol,
Flow Duration, Total Forward Packets, Total Back-
ward Packets, Flow Pkts/s
IAT Statistical Metadata: Flow IAT Mean, Flow
IAT Standard Deviation, Flow IAT Maximum, Flow
IAT Minimum, Flow IAT Total, Forward IAT Mean,
Forward IAT Standard Deviation, Forward IAT Max,
Forward IAT Min, Backward IAT Total, Backward
IAT Mean, Backward IAT Standard Deviation, Back-
ward IAT Max, Backward IAT Min

5.0.1 Pre-Processing Data Set

Data set pre-processing involves transforming the input
data into the correct form suitable for the CNN, which in
this case is a 100x100x3 image. The deﬁned 20 features from
the data set are extracted in CSV ﬁle format. CSV inputs
are reshaped into RGB images of 100 x 100 x 3 size, any
additional left over data under this size is discarded as
all images for the CNN are required to be of the same
input size. This image size was chosen due to providing
a good volume of sample images for the amount of data
available (over 1000 sample images). In general the trade
offs between using a higher compared to a lower resolution
image is that a higher resolution image will contain ﬁner
details when processed by the neural network, however
this will take longer for both training and testing phases.
A lower resolution image will provide less details, but
more global feature representations and the neural network
will be able to train and test the data at a faster rate. For
this paper autoML samples and augments all images to
224 x 224 x 3 input image size, therefore there are only
two considerations, ﬁrstly the volume of images is above
1000 and that sufﬁcient feature details are captured. Two
examples are shown below in Figure 10 and Figure 11 of
what an anomaly image looks like in comparison to a benign
image. Graphically, anomaly images are random and noisy,
whereas benign images are more regular and contain some
identiﬁable patterns.

6 ANOMALY DETECTION RESULTS

This section presents the results of the implemented autoML
Vision model on the pre-processed image data. To maximise
the accuracy of the model both a 24 hour NASnet simulation
and a 3 hour MNasNet simulation are run to compare
the attained results. Now that the data set has been pre-
processed into images, these images can now be uploaded to
Google AutoML Vision. The images are organised by folder
structure for benign and anomaly images, these images are
then uploaded to Google Cloud Bucket storage along with
a CSV ﬁle to map output ﬁle paths to the correct label.
AutoML Vision reshapes the input image sizes into the
models expected input size of 224 x 224 x 3. See appendix A

9

Fig. 13: 3 Hour Test Results

The most common metrics are used to determine rel-
evancy of results including precision, recall, f1 score and
precision recall curve. Precision and recall are determined
from the following stats:

•

• True Positive (TP): An anomaly image is classiﬁed
by the model as an anomaly the result is a True
Positive.
False Positive (FP): A anomaly image is classiﬁed by
the model as benign the result is a False Postive.
• True Negative (TN): A benign image is classiﬁed by
the model as benign the result is a True Negative.
False Negative (FN): A benign image is classiﬁed
by the model as an anomaly the result is a False
Negative.

•

Precision can be deﬁned as the percentage of positive
predictions that are correct and recall can be deﬁned as what
percentage of the positive cases did the classiﬁer detect.
Mathematically this can be calculated as:

P recision =

T P
T P + F P

Recall =

T P
T P + F N

And from these statistics the F1 score which provides
the harmonic mean of the precision and recall can also be
calculated:

F 1 score = 2 ∗

P recision ∗ Recall
P recision + Recall

The confusion matrix in Figure 14 shows the percentage
prediction of when the classiﬁer chose the correct answer, in
this case 96.4% of anomaly images are identiﬁed as anomaly
images and 3.6% of anomaly images were incorrectly iden-
tiﬁed as benign images. For benign images 0% of benign
images were wrongly predicted as anomaly images and
100% of benign images were correctly identiﬁed.

(a) Anomaly Image 1

(b) Anomaly Image 2

Fig. 10: Anomaly Image Example

(c) Benign Image 1

(d) Benign Image 2

Fig. 11: Benign Image Example

for model layout. With a training time of 3 hours and 1433
100 x 100 x 3 images split into 925 benign images and 508
anomaly images. 141 test images achieved an average preci-
sion of 97.6%, a max precision of 98.582% and a max recall
of 98.582% for the entire model. As the model is developed
on the MNasNet Edge platform it is more optimised for
speed in comparison to traditional NAS models and does
not require huge amount of compute power and multiple
days for training. Training the model for higher accuracy
yields a process time of 105ms per image for a Pixel 1 mobile
phone.

Running the model on the 24 hour test yielded similar re-
sults, except average precision was slightly higher at 99.2%,
this is due to the area under the recall precision curve being
greater as shown in Figure 12. compared to Figure 13. This
means the model is optimised to its greatest potential with
the data provided. Training with additional data sets and
more data will only make the model have a higher level of
performance. In terms of real world implementation there
will always be a trade off between accuracy and speed.
However in this case the small loss in accuracy for a much
larger gain in performance is desirable. This means that
resource usage can be minimised, threats can be detected
sooner and subsequent additional training and reﬁning of
the model can be completed at a faster rate.

Fig. 12: 24 Hour Test Results

Key performance statistics are shown in the table below
for easier visibility and comparison. Benign trafﬁc has a

Fig. 14: Confusion Matrix

recall of 100% accuracy, but has a precision of 97.7% due to
classifying a small percentage of anomaly images incorrectly
as benign. Anomaly trafﬁc has a precision of 100% due to all
anomaly images detected being classiﬁed correctly, but has
a recall of 96.4% due to missing some anomaly images and
incorrectly classifying them as benign.

Table 1: Performance Statistics

Trafﬁc Type
Benign
Anomaly
Average

24 Hour & 3 Hour Results
Precision
0.977
1
0.9885

Recall
1
0.964
0.982

F1 Score
0.988
0.982
0.985

Precision vs. recall is a trade off and this is shown in the
below precision recall curves in ﬁgure 15. and Figure 16. The
score threshold is set at 0.5 to evenly balance these metrics.
To simplify these metrics into one number the F1 score can
be used, which evenly weights both precision and recall, F1
score values are shown above. The F1 score is an important
metric for this model as both recall and precision need to be
considered in anomalous trafﬁc detection. In a real world
application an IDS needs to minimise the amount of benign
trafﬁc ﬂows that are identiﬁed as anomalies as much as
possible, while still attempting to maximise detection rates
of true anomalous trafﬁc.

Fig. 15: Benign Data

Fig. 16: Anomaly Data

10

autoML has managed to classify all benign trafﬁc ﬂows
correctly which is a very good result, however for anomaly
trafﬁc ﬂows 96.4% of trafﬁc was classiﬁed correctly, so
therefore there is still room for improvement. There was
minimal difference in both the MNasNet (3 hour running
time) architecture and the NASNet (24 hour running time)
architecture, this could be due to the data set size. For
further model validation, testing can be conducted with a
larger data set, testing can also be conducted with different
data sets to ensure a reasonable degree of generalisation
in the model and to check for over ﬁtting issues. Finally
identifying any visually similar benign and anomaly images
and testing with different features to attempt to separate
the difference between benign and anomalous images even
more could be investigated. The better that an anomaly
image and a benign image can be distinguished, the easier
it will become to train the model and reduce outlier data
and errors. NAS has allowed the creation of an advanced
model for a speciﬁc data set to be built autonomously and
to avoid the tedious process of manual architecture design,
the designed NAS model can now be exported into a custom
application for further testing and reﬁnement.

Overall the results highlight the effectiveness of machine
learning based image detection techniques for network ﬂow
analysis. This research could be extended in a number of
different directions such as:

1)

Implementing unsupervised learning techniques to
create a semi-supervised learning model, as in re-
ality the majority of network trafﬁc is unlabelled
data and pre-processing unlabelled data into clean
and organised labelled data is a time consuming
process. Extending this concept a benign trafﬁc pro-
ﬁle could be designed for a speciﬁc network slice
using unsupervised learning techniques for general
classiﬁcation and then supervised techniques for
additional ﬁne tuning to verify the proﬁle.

2) Building a database that stores trafﬁc logs, a speciﬁc
volume of the logs would be taken regularly for
training the network, further study could be con-
ducted in how often to re-train the network, with
what new incoming data, how long should it take
to train and would it be possible to deploy multiple
instances of the neural network, so that one instance
can train on new data while another instance can be
tested on existing data.
Implement a real time trafﬁc monitoring system
with a machine learning built proﬁle, this could be
designed as an intelligent ﬁrewall.

3)

4) Design an enhanced trust based system to authenti-

cate trust based on predictive ﬂow analysis.

7 DISCUSSION & FUTURE DIRECTIONS

There are many areas that need to be considered when
attempting to secure 5G networks, as the network is so
diverse, security becomes more difﬁcult to implement ef-
fectively. The approach of this paper is then to develop an
end-to-end monitoring system for trafﬁc that ﬂows through
the network, this is not in itself a deﬁnitive security solution,
just one part of the overall security architecture that is
required to secure the network. The model designed with
the selected basic and IAT feature set in this paper using

8 CONCLUSION
This paper proposed a novel solution of applying software
deﬁned security with machine learning to provide end-to-
end protection for 5G networks. The initial project scope
has been fulﬁlled and the approach of converting network
ﬂows into images for analysis by a CNN has demonstrated
highly accurate results for the data available, especially
considering that CNN’s are traditionally optimised for real
image/photograph detection. The application of a machine

11

[16] B. Zoph and Q. V. Le, Neural Architecture Search with Reinforce-

ment Learning, arxiv, Feb. 2017.

[17] G. Seif, Everything you need to know about AutoML and
Neural Architecture Search, Towards Data Science, 21-Aug-
https://towardsdatascience.com/
2018.
everything-you-need-to-know-about-automl-and-neural-arch-\
n/itecture-search-8db1863682bf2. [Accessed: 06-Apr-2019].

[Online]. Available:

[18] State-of-the-art

Papers With Code
[Online].
image-classiﬁcation-on-imagenet. [Accessed: 11-Apr-2019].

table for Image Classiﬁcation on ImageNet,
learning.
in machine
https://paperswithcode.com/sota/

Available:

latest

the

:

[19] ImageNet.

[Online].
about-overview. [Accessed: 15-Apr-2019].

Available:

http://image-net.org/

[20] M. Tan and B. Chen, MnasNet: Platform-Aware Neural Archi-
tecture Search for Mobile, arxiv, 18-Apr-2019. [Online]. Available:
https://arxiv.org/pdf/1807.11626.pdf. [Accessed: 25-Apr-2019].
[21] M. Sandler and A. Howard, Mobilenetv2: Inverted residuals and

linear bottle-necks, 2018. .

[22] AZSecure - Data for Intelligence and Security Informatics, AZSe-
[Online]. Available:https://www.azsecure-data.org/

cure, 2019.
other-data.html. [Accessed: 27-Apr-2019].

[23] KDD Cup 1999 Data, The UCI KDD Archive Informa-
tion and Computer Science University of California,
Irvine.
[Online]. Available: http://kdd.ics.uci.edu/databases/kddcup99/
kddcup99.html. [Accessed: 04-Apr-2019].

[24] CSE-CIC-IDS2018 — Datasets — Research — Canadian Insti-
tute for Cybersecurity — UNB, University of New Brunswick
est.1785, 2019.
[Online]. Available: https://www.unb.ca/cic/
datasets/ids-2018.html. [Accessed: 01-Apr-2019].

[26] L.

[25] G. Ruiz, OWASP Top 10 Security Risks Part I, Sucuri Blog, 28-
Nov-2018. [Online]. Available: https://blog.sucuri.net/2018/10/
owasp-top-10-security-risks-part-i.html. [Accessed: 04-Apr-2019].
at-
Avail-
https://medium.com/front-end-weekly/
06-

tacks,
able:
slow-loris-rethinking-dos-attacks-bd1ca5091bfe.
Apr-2019].

LorisŁ-ŁRethinking

09-Oct-2018.

[Accessed:

Medium,

Perlman,

[Online].

Slow

DoS

[27] April

2019 Web

Available:
april-2019-web-server-survey.html. [Accessed: 05-Apr-2019].

[Online].
https://news.netcraft.com/archives/2019/04/22/

Survey, Netcraft.

Server

[28] What is Inter-Arrival Time, IGI Global, 2019. [Online]. Avail-
able: https://www.igi-global.com/dictionary/inter-arrival-time/
35848. [Accessed: 11-Apr-2019].

[29] L. Arshadi and A. Jahangir, An empirical study on TCP ﬂow
interarrival time distribution fornormal and anomalous trafﬁc,
INTERNATIONAL JOURNAL OF COMMUNICATION SYSTEMS,
pp. 119, Oct. 2014.

[30] M. Arfeen and K. Pawlikowski, The Role of the Weibull Distri-
bution in Internet Trafﬁc Modeling, Proceedings of the 2013 25th
International Teletrafﬁc Congress (ITC), 2013.

[31] WANDNetworkResearchGroup, WITSArchive, 2007.

[Online].
Available: http://research.wand.net.nz/wits/. [Accessed: 19-Apr-
2019].

learning based SDS system is promising for real world im-
plementation and some of the points outlined above explore
this further. However challenges still must be overcome, in
terms of managing diverse and complex 5G networks and
also managing the large volumes and variations of trafﬁc
that will ﬂow through them.

Overall this is only the beginning for machine learning
based security applications. The growth in 5G network
rollouts, global internet usage, IoT device connectivity and
big data analysis will continue to widen and create new
attack surfaces. To manage and mitigate these attack sur-
faces effectively, dynamic and intelligent machine learning
security systems that can respond rapidly to threats will be
critical.

REFERENCES

[1] IoT: number of connected devices worldwide 2012-2025, Statista.
[Online]. Available: https://www.statista.com/statistics/471264/
iot-number-of-connected-devices-worldwide/. [Accessed: 06-Apr-
2019].

[2] Ericsson, A Guide to 5G Network Security, Ericsson.com, pp. 120.
[3] 5G Americas, The Evolution of Security in 5G, 5G Americas

Whitepaper, pp. 140, Oct. 2018.

[4] J. Fruhlinger, The Mirai botnet explained: How IoT devices
almost brought down the internet, CSO Online, 09-Mar-2018.
[Online]. Available: https://www.csoonline.com/article/3258748/
the-mirai-botnet-explained-how-teen-scammers-and-cctv-cameras\
n-almost-brought-down-the-internet.html.
2019].

[Accessed:

06-Apr-

[5] 3GPP, 3 rd Generation Partnership Project; Technical Speciﬁcation
Group Services and System Aspects; Security architecture and
procedures for 5G system (Release 15), 3GPP TS 33.501 V15.4.0
(2019-03), pp. 110.

[6] CISCO, Applying Security to the 5G world, CISCO, 16-Jan-2019.
[Online]. Available: https://www.cisco.com/c/dam/m/en us/
network-intelligence/service-provider/digital-transformation/
knowledge-network-webinars/pdfs/0116 SECURITY CKN PDF.
pdf. [Accessed: 07-Apr-2019].

[7] Michael Geller

and

Pramod Nair,
2018.

5G Security
Inno-
[Online]. Available:

vation with Cisco, CISCO,
https://www.cisco.com/c/dam/en/us/solutions/collateral/
service-provider/service-provider-security-solutions/
5g-security-innovation-with-cisco-wp.pdf.
2019].

[Accessed:

07-Apr-

[8] Netford, Flow Analysis Versus Packet Analysis. What Should You
Choose?, Netford Technologies, 2014. [Online]. Available: https:
//www.netfort.com/wp-content/uploads/PDF/WhitePapers/
NetFlow-Vs-Packet-Analysis-What-Should-You-Choose.pdf.
[Accessed: 07-Apr-2019].

[9] B. Zoph and V. Vasudevan, Learning Transferable Architectures for
Scalable Image Recognition, arxiv, 11-Apr-2018. [Online]. Available:
https://arxiv.org/pdf/1707.07012.pdf. [Accessed: 07-Apr-2019].
[10] S. Naseer and Y. Saleem, Enhanced Network Anomaly Detection
Based on Deep Neural Networks, SPECIAL SECTION ON CYBER-
THREATS AND COUNTERMEASURES IN THE HEALTHCARE
SECTOR, Jun. 2018.

[11] D. E. Denning, An intrusion-detection model,

IEEE Trans.
Softw. Eng., vol. SE-13, no. 2, pp. 222232, Feb. 1987.
[On-
line]. Available: http://ieeexplore.ieee.org/abstract/document/
1702202/ [Accessed: 07-Apr-2019].

[12] A. Dawoud and S. Shahristani, Deep Learning for Network
Anomalies Detection, 2018 International Conference on Machine
Learning and Data Engineering (iCMLDE), 2018.

[13] D. Kwon and K. Natarajan, An Empirical Study on Network
Anomaly Detection using Convolutional Neural Networks, 2018
IEEE 38th International Conference on Distributed Computing Sys-
tems, 2018.

[14] R. Abdulhammed and M. Faezipour, Deep and Machine Learning
Approaches for Anomaly-Based IntrusionDetection of Imbalanced
Network Trafﬁc, IEEE Sensors Letters, Jan. 2019.

[15] I. Alrashdi and A. Alqazzaz, AD-IoT: Anomaly Detection of IoT
Cyberattacks Smart City Using Machine Leaming, IEEE, 2019.

APPENDIX
A: NAS DESIGNED CNN MODEL

12

