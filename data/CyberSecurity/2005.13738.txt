0
2
0
2

y
a
M
8
2

]

R
C
.
s
c
[

1
v
8
3
7
3
1
.
5
0
0
2
:
v
i
X
r
a

Model-Based Risk Assessment for Cyber Physical
Systems Security

Ashraf Tantawy, Abdelkarim Erradi, Sherif Abdelwahed, and Khaled Shaban

1

techniques

Abstract—Traditional

for Cyber-
Physical Systems (CPS) security design either treat
the cyber and physical systems independently, or
do not address the speciﬁc vulnerabilities of real
time embedded controllers and networks used to
monitor and control physical processes. In this work,
we develop and test an integrated model-based
approach for CPS security risk assessment utilizing
a CPS testbed with real-world industrial controllers
and communication protocols. The testbed monitors
and controls an exothermic Continuous Stirred
Tank Reactor (CSTR) simulated in real-time.
CSTR is a fundamental process unit in many
including Oil & Gas, Petrochemicals,
industries,
Water treatment, and nuclear industry. In addition,
the process is rich in terms of hazardous scenarios
that could be triggered by cyber attacks due to
the lack of possible mechanical protection. The
paper presents an integrated approach to analyze
and design the cyber security system for a given
CPS where the physical threats are identiﬁed
ﬁrst to guide the risk assessment process. A
mathematical model
is derived for the physical
system using a hybrid automaton to enumerate
potential hazardous states of the system. The cyber
system is then analyzed using network and data
ﬂow models to develop the attack scenarios that
may lead to the identiﬁed hazards. Finally, the
attack scenarios are performed on the testbed and
observations are obtained on the possible ways
to prevent and mitigate the attacks. The insights
gained from the experiments result in several key
ﬁndings, including the expressive power of hybrid
automaton in security risk assessment, the hazard
development time and its impact on cyber security
design, and the tight coupling between the physical
and the cyber systems for CPS that requires an
integrated design approach to achieve cost-eﬀective
and secure designs.

Index Terms—CPS, Security, Safety, Hybrid Au-
tomaton, Hybrid System, Modeling, Attack tree,
Penetration Testing, Risk Assessment, Testbed,
SCADA, Industrial Automation, Modbus, CSTR

A. Tantawy and S. Abdelwahed are with the Department of
Electrical and Computer Engineering, Virginia Commonwealth
University, VA, 23220 USA e-mail: (amatantawy, sabdelwa-
hed@vcu.edu)

A. Erradi and K. Shaban are with the Computer Science and
Engineering Department, Qatar University, Doha, Qatar e-mail:
(erradi, khaled.shaban)@qu.edu.qa

I. Introduction

Cyber-Physical Systems (CPS) integrate physical el-
ements, for sensing and actuation, with cyber elements,
for computation and communication, to automate and
control industrial processes. CPS is pervasively used
in critical application domains such as health care,
traﬃc management, manufacturing, and energy in-
frastructures. These systems are increasingly adopt-
ing commercial and open source software components
and standard communication protocols in order to
reduce infrastructure costs and ease integration and
connection with corporate networks. However, this has
exposed such systems to new security threats and
made them a prime target for cyber-attacks to disrupt
their normal operation. This may result in profound
and catastrophic impacts such as endangering public
safety and economic stability. Despite ongoing eﬀorts
to secure and protect CPS, these critical infrastructure
components remain vulnerable to cyber attacks. Re-
cent intensiﬁed sophisticated attacks on these systems
have stressed the importance of methodologies and
tools to assess and manage cyber security risks [1].
Additionally, it is necessary to identify and address
safety and security requirements earlier as part of the
system design process [2].

Traditional IT security risk assessment is a well-
established domain, guided by several
international
standards, e.g., [3]. More recently, standards emerged
to address the speciﬁc needs of CPS domains, such
as IEC 62443 for securing industrial automation and
control systems. However, these standards provide best
practices for the security system independent of the
monitored physical system. It is the responsibility of
the CPS designer to integrate the safety and security
aspects of the CPS, often in an ad-hoc manner. Realiz-
ing this gap, IEC/TC65 plenary board proposed a new
group to consider how to bridge functional safety and
cyber security for industrial automation systems [4].

In this work, we propose a model-based design
approach where physical system modeling, data ﬂow
modeling, and attack trees are integrated to deliver
a uniﬁed design framework of safe and secure CPS.
First, the physical system modeling documents all the
system components and their interaction interfaces in-
cluding system sensors, controllers, and the supporting

 
 
 
 
 
 
TANTAWY et al.

networks and protocols. Then we identify the data
ﬂow and information exchange between the system
components to enable monitoring and controlling the
physical process. The resulting system model and data
ﬂow model are used as inputs for threat modeling
using attack trees. The latter are conceptual diagrams
describing the system threats and possible attacks to
realize those threats [5].

We summarize the key contributions of the paper as
follows: (1) the introduction of hybrid system automa-
ton as a powerful tool for cyber security risk assess-
ment, and countermeasure & mitigation design. (2) De-
velopment of an integrated safety-security model-based
co-design approach for CPS. The approach integrates
physical and cyber models for attack scenario gener-
ation, risk assessment, and countermeasures design.
(3) Providing insight on key research directions as
revealed throughout the design and implementation of
the case study CPS.

We applied and empirically validated our proposed
model-based approach for CPS security risk assess-
ment on a CPS testbed that monitors and controls an
exothermic Continuous Stirred Tank Reactor (CSTR)
simulated in real-time. CSTR is a widely used model
for chemical reactor engineering. This process is se-
lected because of its practical importance and its asso-
ciated hazards that can be triggered by cyber attacks
with no possible mechanical protection, including re-
actor overﬂow and thermal runaway with the risk of
ﬁre, explosion or environmental hazards [2]. A technical
report detailing the design of the CPS testbed along
with the implementation of the CSTR simulator, the
Basic Process Control System (BPCS) and the Safety
Instrumented System (SIS) are available online 1.

The rest of the paper is organized as follows: Sec-
tion II discusses important related work. Section III
presents the overall architecture for the CPS used
as a case study throughout the paper. Section IV
introduces the hybrid automaton approach for hazard
identiﬁcation. The design of cyber attacks is presented
in Section V. Section VI summarizes the penetration
testing results and the formal risk assessment. The key
insights gained from the case study are summarized in
Section VII, and the paper is concluded with future
research directions in Section VIII.

II. Related Work

In addition to international standards, the research
community recently started to address the CPS secu-
rity problem in non-traditional ways. A survey on CPS
security, challenges, and solutions could be found in
[6]. A review of risk assessment methods for SCADA
including attack trees,
systems is conducted in [7],

1https://github.com/qucse/CpsSecurity

countermeasure trees, petri nets, as well as several
quantitative risk measures. CPS security for industrial
processes has been studied in [8], where a multi-layer
cyber-security protection architecture is proposed. A
system for runtime attack detection and prevention
for industrial control systems is proposed in [9]. The
application of attack-defense trees to analyze cyber
security for CPS is reported in [10]. The authors in [11]
proposed an integrated CPS safety and security lifecy-
cle process, merging ISA84/IEC 61511 and ISA99/IEC
62443 lifecycle processes, where a combined failure
and attack graph is proposed for risk assessment. A
safety/security risk analysis approach that combines
bowtie analysis for safety systems with attack tree
analysis for security systems is considered in [12]. CPS
security for the electric power grid is discussed in
[13], where the authors proposed a risk assessment
methodology and identiﬁed the potential threats for
each component of the grid.

As a research aid, researchers build testbeds that
represent scaled down versions of actual physical indus-
trial control systems in order to provide a research en-
vironment that allows extensive attack-defense experi-
mentation with realistic attack scenarios. The testbed
facilitates the vulnerability and risk assessment, impact
analysis of cyber-attacks on the controlled process,
and risk mitigation, in order to enable the design and
evaluation of eﬀective detection and defense mecha-
nisms. Several testbeds developed at various univer-
sities and national research labs have been reported in
the literature for diﬀerent CPS application domains,
predominantly focusing on critical infrastructures such
as the smart power grid testbeds presented in [14],
[15], [16]. One of the early power grid testbeds are
the National SCADA TestBed (NSTB) [17] and Idaho
National Labs (INL) SCADA Testbed which deploys
real physical grid components including generators,
transmitters, substations and controllers [18]. In ad-
dition to the energy domain, a smart transportation
system testbed has been proposed in [19]. Industrial
Control Systems SCADA testbed has been discussed
in [20], and a water treatment testbed is reported in
[21]. However, these testbeds are either very costly to
implement and maintain, making them unaﬀordable
for most researchers, or they use commercial hardware
and software components that are often treated as
black boxes with little ability to model their inner
working. The testbed we used for CPS security design,
brieﬂy presented in this paper, uses open hardware and
software components, yet implements industrial stan-
dard communication protocols, e.g., Modbus/TCP.

Recently many CSTR-based testbeds were used to
study cyber attacks on chemical processes. The study
in [22] addressed the problem of joint distributed at-
tack detection and secure estimation of the system

2

TANTAWY et al.

states for a networked CPS over a wireless sensor
network (WSN). A malicious adversary simultaneously
launches a False Data Injection (FDI) attack at the
physical system layer to intentionally modify the sys-
tem’s state and jamming attacks at the cyber layer
to block the wireless transmission channels between
sensors and remote estimators. The discretized and
linearized state-space model of the CSTR near the
operating point is used to show the eﬀectiveness of the
approach. To improve the overall resilience of CPS,
the authors in [23] propose a framework based on a
distributed middleware that integrates a multiagent
topology. The proposed framework is evaluated using
a CPS simulator composed of a CSTR benchmark
system model, a Wireless Sensor and Actuator Net-
works (WSAN) and additional remote devices, includ-
ing a remote controller, a server where the model
of the plant is running and an HMI. Jamming and
node loss attacks are carried out as experiments for
assessing the proposed attack framework. The work
in [24] develops a nonlinear system framework for
understanding cyberattack-resilience of CSTR process
using three control designs, where the focus is on data
injection attacks on sensor measurements to impact
the process safety. The study in [25]
integrates a
neural network (NN)-based detection method and a
Lyapunov-based model predictive controller for a class
of nonlinear systems. A CSTR with constant volume
is used to illustrate the application of the proposed
NN-based detection method to handle cyber-attacks.
A methodology for detecting abnormal events in aging
Industrial Internet of Things (IIoT) has been developed
in [26]. The authors developed an eﬃcient anomaly
detection methodology that uses the correlation among
process variables in order to detect stealthy cyber-
attacks, and presented extensive experimental results
on a CSTR model. An approach has been proposed
in [27] to either certify that a given control system
is safe under possible cyber-attacks on the measured
data used for feedback and/or the commanded control
signals, or alternatively synthesize a particular spooﬁng
attack that corrupts the signals to make the closed-loop
system unsafe. A two state CSTR has been used as
testbed for implementing the approach. The research
work in [28] employed a CSTR testbed to elucidate
the dynamic interaction between feedback control and
safety systems in the context of both model-based and
classical control systems. To this aim, the interaction
of a Model Predictive Control (MPC) system with a
safety system is studied in the context of the Methyl
isocyanate (MIC) hydrolysis reaction in a CSTR to
avoid thermal runaway. The authors develop a speciﬁc
action for the MPC to take when the safety system is
activated due to signiﬁcant feed disturbances that lead
to thermal runaway conditions.

Most of the reviewed testbeds mainly use control-
theoretic approaches for the detection of cyber-attacks
on chemical processes using state estimation tech-
niques. The approaches in these papers are largely
based on theoretical mathematical analysis and can
get intractable for realistic CPS. Unlike the work re-
ported in this paper, none of the studies considered
the integration of the physical and cyber aspects of
the CPS for risk assessment and countermeasures de-
sign. Existing work mainly considers the model-based
approach for the physical system only, disregarding
the cyber system. In addition, the work in this paper
uses a standard CPS architecture that resembles in-
dustrial installations with industry-standard hardware
and software.

In this paper, we develop a model-based approach
for CPS security risk assessment. Rather than abstract
formulations, we experiment with the design process
on an industrial CPS testbed. The key objective of
the experiments is to verify the design approach and
to gain insights that could be used by the research
community for future reﬁnements. The work presented
in this paper diﬀerentiates itself from existing literature
in three main aspects: (1) it follows a model-based
approach to couple CPS safety and security throughout
the whole lifecycle, (2) it proposes a formal approach to
identify system hazards from a given physical model,
rather than relying on expert opinion, and (3) it
implements the whole risk assessment lifecylce from
asset identiﬁcation to mitigation design, via a case
study on an actual testbed, which provides both a clear
implementation methodology as well as an insight for
further research work.

III. CPS Testbed Architecture

Figure 1 illustrates the overall CPS architecture used
in this paper. The physical system is an exo-thermal
Continuous Stirred Tank Reactor (CSTR) simulated
in real-time. Simulation data is exchanged over an I/O
physical data bus to both the Basic Process Control
System (BPCS) and the Safety Instrumented System
(SIS). The BPCS implements the process control func-
tions while the SIS implements the process shutdown
logic functions, and both run RT Linux OS. The mon-
itoring workstation implements the Human Machine
Interface (HMI) for the operator to monitor and control
the plant. The HMI has access control mechanisms that
allow diﬀerent levels of control based on the user role
(typically operator, supervisor, and engineer). Figure 2
shows the implemented HMI. A control network inter-
connects BPCS, SIS, Human Machine Interface (HMI)
workstation, and the Engineering workstation. A ﬁre-
wall is conﬁgured to isolate the control network from
the corporate network. A DeMilitarized Zone (DMZ)
is formed to host the historian and real time data

3

TANTAWY et al.

Figure 1: CPS Testbed Architecture

Figure 2: HMI for the Reactor Process

servers, following NIST proposed architecture [29]. The
RT Server runs the open source mysql database to store
plant data for later retrieval by the HMI application
and corporate ﬁnancial analysis applications.

4

A. Physical System

We choose the Continuous Stirred Tank Reactor
(CSTR) as the physical system for the testbed. The
CSTR is an essential equipment in process plants where
new products are formed from raw inlet reactants. The
CSTR process possesses several features that make
it a good choice for CPS security studies. First, the
process variables to be controlled are closely-coupled,
hence any change in one process variable will impact
other variables as well and manifest itself in the overall
process behavior. Second, the process has a number of
potential safety hazard scenarios that may be produced
by a cyber attack. Finally, mitigation layers for a
number of safety hazards rely mainly on the control
and safety systems, which are cyber systems that could
be compromised by a cyber attack.

1) Process Description: We consider an irreversible
exothermic CSTR process, with a ﬁrst order reaction
in the reactant A to produce product B with rate k
and a heat of reaction λ.

A k−−→ B

Figure 3 shows the Piping & Instrumentation Dia-
gram (P&ID) for the reactor. The reactor vessel has an
inlet stream carrying the reactant A, an outlet stream
carrying the product B, and a cooling stream carrying
the cooling ﬂuid into the surrounding jacket to absorb
the heat of the exothermic reaction. Reactant A enters
the reactor with concentration CA0, temperature T0
and volumetric ﬂow rate F0. A ﬁrst order reaction
takes place where a mole fraction of reactant A is
consumed to produce product B. The outlet stream
contains both reactant A and product B, with reactant
A concentration CA, outlet temperature T , and ﬂow
rate F . The outlet temperature T is the same as the
reactor temperature. The coolant ﬂuid ﬂows into the
reactor jacket with temperature TJ0 and ﬂow rate FJ0 ,
and leaves the jacket with temperature TJ . The total
coolant volume in the jacket is designated by VJ . The
detailed mathematical model is developed in [30].

2) Process Measurement & Control: The reactor
temperature could be controlled by adjusting the
coolant ﬂuid inlet ﬂow. A single variable control loop
is used to regulate the reactor temperature. The con-
trol loop is composed of a temperature sensor TT-
01, Temperature Controller TIC-01, and Control Valve
CV-2. PID control algorithm is used for the controller
as it still represents 98% of all feedback control at
over ﬁfty thousand manufacturing facilities around the
world [31], hence it is the de facto standard in the
process control industry. Similarly, the reactor liquid
level could be controlled by adjusting the inlet ﬂow
rate, using a control loop composed of a level sensor
LT-01, Level Controller LIC-01, and Control Valve CV-

Control ApplicationNI RT Linux OSController HWSafety ApplicationNI RT Linux OSController HWEngineering WSHMI WSHistorian ServerReal Time Data ServerBPCSSISNI cRIO 9064NI cRIO 9064Simulation PCTANTAWY et al.

be closed. Following IEC 61511 international standard,
both the Safety Instrumented Function (SIF) and the
control function have to be independent [33]. There-
fore, the SIF will be composed of an independent level
sensor LT-02, a logic solver implementing an interlock
function I-1, and a feed inlet shutdown valve XV-1.
Upon detecting a high reactor level, the inlet feed will
be stopped via the independent shutdown valve.

For the reactor high temperature hazard, the inlet
stream has to be closed. Therefore, the SIF will be
composed of an independent temperature sensor TT-
02, a logic solver implementing an interlock function
I-2, and the inlet stream shutdown valve XV-1. In
addition, since it is preferred to keep the inventory,
a shutdown valve XV-2 is added to the outlet stream.
Therefore, upon detecting a high reactor temperature,
both the inlet and outlet stream shutdown valves will
be closed. These two safety functions are illustrated in
Figure 3.

Figure 3: Reactor P&ID

Consequences Safeguards

B. Cyber System Architecture

Hazard

High Level
(Reactor
overﬂow)

High Tem-
perature
(Reactor
Melt-
down/ex-
plosion)

Initiating
Event
(Cause)
failure
BPCS
Outlet
OR
valve
control
closed
fully
OR Inlet valve
stuck
fully
open

Coolant
inlet
valve
control
fully (partially)
OR
closed
valve
Inlet
stuck
fully
open

(IPL)

Reactor
dike (Miti-
gation)

None

loss

or more

2
fatalities
(safety),
Product
(ﬁnancial),
Environmental
contamination
(environment)
10
fatalities
(safety),
Product
(ﬁnancial),
Environmental
contamination
(environment)

or more

loss

Table I: Partial HAZOP sheet for the reactor process

1. Figure 3 shows the two control loops using ISA
standard symbols [32].

3) Process Safety Shutdown: Process hazards are
usually identiﬁed through a systematic risk assessment
process involving hazard studies, e.g., HAZard and
OPerability (HAZOP) study. High reactor level will
lead to reactor overﬂow. The hazard of the overﬂow
will depend on several factors, including the toxicity of
the reactants, the operating temperature of the reac-
tor, and the occupancy level of operators around the
reactor area. Similarly, high reactor temperature will
lead to exceeding the reactor design temperature and
possible reactor damage. Table I summarizes these two
key hazards for the process and the possible initiating
events.

For the Reactor overﬂow hazard, inlet stream has to

5

Understanding the cyber system architecture is es-
sential for CPS security design. Using the cyber ar-
chitecture, combined with in-depth knowledge about
the physical process dynamics and its associated haz-
ards, a model-based approach could be followed to
design an optimal security system for the given CPS
according to predetermined optimality criteria, such as
the minimization of ﬁnancial loss or the probability of
occurrence of a hazardous event.

Figure 4 shows the data ﬂow diagram for the testbed.
There is a one-way data communication from SIS to
BPCS, and HMI does not have direct communication
to the SIS as per industrial practice. The HMI has
direct communication with BPCS for monitoring and
supervisory control actions. Plant data is stored in RT
server database, for later on-demand retrieval by the
HMI application running on the monitoring worksta-
tion and the corporate analysis application running
on corporate PCs. As the RT Server has multiple
communication links, it will play a key role in attacker
penetration from the corporate LAN to the control
LAN as detailed in the paper.

IV. Identification of Cyber-Related Hazards

A. Hybrid Automaton Formulation

CPS security attacks distinguish themselves from
generic IT system attacks in that the main attacker’s
goal is to cause damage to the end physical system.
Although CPS attacks may have the objective of steal-
ing conﬁdential information that may impact company
business, such attacks could be launched on the busi-
ness LAN level, and does not require the extra eﬀort
to penetrate down to the control network. Accordingly,

R-100 XV-1CV-1LT01LIC01TT02I-2CV-2 XV-2CV-3TT01I-1TIC01LT02F0, CA0, T0FJ, TJ0FJ, TJF, CA, THIC03TANTAWY et al.

Figure 4: CPS Testbed Dataﬂow diagram

the ﬁrst natural step to analyze CPS security threats is
to identify cyber attacks that are hazard-related. Given
the complete process design with control and safety
systems, as represented by the P&ID in Figure 3, it
is possible to construct the hybrid system automaton
and utilize it to identify the process hazards and
the associated cyber-controlled components that may
be manipulated by an attacker to cause the process
hazard.

Hybrid system automaton is a formal model that
describes hybrid dynamical systems that have both dis-
crete and continuous dynamics [34]. A simpliﬁed math-
ematical model for the hybrid automaton is represented
as a collection H = (Q, E, Σ, X, Init,Inv,Flow,Jump),
where Q is a ﬁnite set of modes, E is a ﬁnite set of
event names, Σ : Q × E → Q is a transition function
representing the discrete changes, X is a set of real-
valued variables, Init, Inv, and Flow are functions that
deﬁne the initial values, constrains, and evolution of
the state variables X for each mode, respectively, and
ﬁnally Jump assigns to each labelled edge a guard
condition.

According to the hybrid automaton deﬁnition, we
can describe the CSTR process by the hybrid automa-
ton in Figure 5. The set of modes Q = {S0, S1, . . . , S7}
is deﬁned by the status of the three process streams,
namely inlet stream Is, outlet stream Os, and cooling
jacket stream Js. The corresponding set of events are
E = {Is = 0, Is = 1, Os = 0, Os = 1, Js = 0, Js = 1},
where a value of zero refers to a closed stream and
a value of 1 refers to an open stream. The set of
state variables X = {L, T, Tj, CA} describes the reac-
tor level, temperature, coolant temperature, and inlet
product mole concentration, respectively. The initial
state is S0, designating normal reactor operation when
all streams are open. The state constraints and evolu-
tion are expressed according to the reactor dynamics
and omitted for brevity. Finally, the Jump describing

6

the guard conditions for each edge is described in terms
of respective valve positions.

In addition to the hybrid system automaton, the
system is usually constrained to run inside an operating
envelope, E ⊂ Rn, where n is the number of state vari-
ables, i.e., n = |X|. A system hazard occurs when one
or more of the state variables are outside the operating
envelope, i.e., X /∈ E. This criterion was applied to
the CSTR system via simulation to identify the hybrid
automaton hazardous states. Four hazardous states
were identiﬁed, S2, S4, S6, and S7. In state S2, the
coolant stream is closed. The reactor and coolant ﬂuid
temperatures exceed the design limit of 550 K after 14
minutes and 23 minutes, respectively, until reaching
the thermal equilibrium point T = TJ = 582 K via
heat exchange after 60 minutes. We deﬁne the process
hazard time by the minimum time taken by the process
to exceed the design limit, therefore τ2 = 14 min. In
state S4, the outlet and coolant streams are closed. If
the coolant steam is closed ﬁrst, then the system will
transition through state S2 and the reactor will sta-
bilize at the unsafe temperature T = TJ = 582. State
S6, where the inlet and coolant streams are closed, and
state S7, where the reactor is completely isolated, are
similar to state S4. In summary, the reactor will be
subject to a high temperature beyond the design limit
in all hazardous states, potentially leading to reactor
runaway. Hazardous states are designated in Figure 5
by the red border lines.

Given the hybrid automaton H of the system with
the designated hazardous states, we can extract the
hazard initiating events. Algorithm 1 presents a formal
method to obtain the attack scenarios that potentially
cause a process hazard. The input to the algorithm
is the hybrid system automaton, designated hazardous
states, and the initial system state S0. The algorithm
returns the hazard execution tree, where the tree paths
are the shortest paths from the initial state S0 to each
hazardous state. These traces are later linked to cyber
components that manipulate ﬁeld devices to cause the
process hazard. The algorithm can use any variant
of the shortest path algorithm [35]. Algorithm 1 was
applied to the CSTR hybrid automaton, and Figure
6 shows the hazard execution tree output. Hazard
states will always be leaf nodes in the hazard tree.
C2c−−→ s2 and
Example hazard execution traces are: so
s0

X2c||C3c
−−−−−→ s1
It should be highlighted that for large systems with
a large number of inputs, the number of states of
the hybrid automaton may be prohibitively large. One
approach to solve this problem is the decomposition of
the large system into smaller components, and apply
algorithm 1 to each individual component. In fact, this
is the industrial practice when conducting manual haz-
ard analysis by experts, e.g., HAZard and OPerability

C2c−−→ s4.

Control LogicPlant data read/writeSafety LogicPlant data read/writePlant/Logic data writeHMIPlant/control data read/writeRetrievePlant Meas. DatabaseStoreCorporate AnalysisRetrievePlantBPCSSISCorporate PCMonitoring WSRT ServerTANTAWY et al.

S6

X1c||C1c

X1o&C1o

S2
τ2 = 14

C2c

C2o

C2o

X1c||C1c

C2c

S3
τ2 = 2

X1o&C1o

S0

start

o
3
C
&
o
2
X

3
C

|
|
2
X

X
2
c
|
|

C
3
c

o
3
C
&
o
2
X

o
3
C
&
o
2
X

X
2
c
|
|

C
3
c

c
3
C

|
|
c
2
X

X
2
o
&
C
3
o

X1o&C1o

S5

S1
τ1 = 11

C2c

X1c||C1c

C2o

C2o

C2c

S7

X1c||C1c

X1o&C1o

S4

Figure 5: Reactor hybrid automaton. For transition
labels, X refers to a shutdown valve and C refers to
a control valve. Subscript ’o’ refers to valve status
’open’, while ’c’ refers to valve status ’closed’. It is
assumed that the associated Boolean variable is high
when the valve is closed. Reactant stream: X1||C1,
Coolant stream: C2, Outlet stream: X2||C3.

Algorithm 1: Generation of hazard execution tree
input : H, S0, S, (Automaton, initial state,

hazardous states)

output: M (Adjacency matrix for the hazard

execution tree)

for S ∈ S do

ShortestPath(S0, S, M ) ;

end
return M ;

X2c||C3c

s1

s0

C2c

s2

X1c||C1c

s5

C2c

s7

X1c||C1c

s3

C2c

s6

C2c

s4

Figure 6: Hazard execution tree for the CSTR process

Figure 7: Partial attack tree for the CSTR hazard tree
in ﬁgure 6

(HAZOP) study [36]. In HAZOP, the system is divided
into nodes and each node is studied separately. This
approach works well as long as the coupling between
system components is captured in the analysis of each
individual component.

Figure 6 shows how a process hazard is generated in
terms of process actions, such as opening or closing a
valve, but it does not show how these actions could be
taken by an attacker. To do so, the cyber architecture
of the CPS is required. From the cyber architecture,
the cyber components that are linked to process actions
could be identiﬁed along with their associated vulner-
abilities that could be exploited to launch the cyber
attacks. Once vulnerabilities are identiﬁed, attack trees
could be used for threat modeling [5].

In order to convert the hazard tree into an at-
tack tree, we need a mapping from process actions
to cyber component actions. From Figures 1 and 3,
the control valves are connected to the BPCS while
the shutdown valves are connected to the SIS. We
designate a relevant valve action using the terminol-
ogy <System>(<Valve tag> <Action>), with system
values being B for BPCS and S for SIS, and action
values being ’C’ for Close and ’O’ for Open. Therefore,
B(C2 C) refers to closing valve C2 via BPCS relevant
vulnerability exploitation. Figure 7 shows a partial
abstract attack tree generated from the hazard tree in
Figure 6 using the introduced terminology.

From the attack tree, it is evident that B(C2 C), i.e.,
closure of valve C2 via BPCS vulnerability exploita-
tion, is suﬃcient to cause a reactor hazard. Therefore,

7

S(X2_C)B(C1_C)B(C2_C)S1S4S2S(X1_C)S5S7CSTR HazardTANTAWY et al.

in the next section we focus on the compromise of
the BPCS to cause a process hazard. It should be
highlighted that in general,
it may be required to
take multiple actions by diﬀerent cyber components
to achieve a process hazard. The CSTR process is
a special case in the sense that the closure of C2 is
necessary, and suﬃcient, to cause a process hazard.

B. Hybrid Automaton Expressiveness

The analysis shows that the hybrid system automa-
ton is a rich diagram, where important information
could be inferred. First, a hazard execution tree could
be generated, where hazard states are identiﬁed and
execution traces that lead to process hazards along
with the associated actions could be extracted. Second,
the time it takes the process to produce a hazard is
labeled inside the hazardous state, enabling an accu-
rate assessment of the required response time. Finally,
diﬀerent ways to take the process out of the hazardous
state before the time to hazard elapses could be in-
ferred from the outward transitions, noting that the
system could return to the previous state by reversing
the transition action (e.g., opening a valve that was
closed), Therefore, it is possible to identify the physical
countermeasures in order to protect the process in case
of an attack.

V. Design of Cyber Attacks

Figure 7 illustrates the fact that valve CV-2 closure
via BPCS is a necessary and suﬃcient cause for reactor
hazard. Therefore, this section focuses on the design
of cyber attacks for BPCS to cause the desired valve
closure, either by integrity or DoS attacks.

From the CPS architecture, the attack entry point
is the corporate PC. This could represent an insider
attack, using a personal laptop or a corporate PC, or
an outside attacker over the Internet who compromised
a corporate PC. The mechanism by which the outside
attacker could gain access to the corporate PC either
locally or remotely via a remote session has been
studied extensively in the IT Security literature and
will not be treated in the paper. For further details
about IT security vulnerabilities, refer to [37]. In the
rest of the paper, we will assume the attacker has a
full privileged access to a corporate PC, but not to the
control network.
Connectivity Graph: CV-2 is part of a temperature
control loop that stabilizes the reactor temperature.
The full control loop, including process I/O commu-
nication and the PID controller, is implemented on
the BPCS. The compromise of CV-2 thus could be
achieved by compromising the BPCS itself or any of
its connected cyber components to act as a pivot.
Figure 8 shows the connectivity graph for the BPCS,
constructed from the CPS architecture and the data

Figure 8: BPCS connectivity graph. Diﬀerent line
styles designate diﬀerent connectivity patterns and
hence the diﬃculty of attacks. Only one DMZ server is
shown.

ﬂow graph in Figures 1 and 4, respectively. The number
of all possible paths between the corporate PC and
the BPCS target grows exponentially with the graph
size. However, given that most paths are very unlikely
due to the inherent diﬃculty, e.g., the presence of a
ﬁrewall or absence of any data communication between
the connected nodes, we exclude paths that have a
ﬁrewall and lack data communication between nodes.
The probability of a cyber attack across these excluded
paths will be insigniﬁcant and their impact on the risk
assessment process could be neglected. It should be
highlighted that for typical CPS networks, the number
of nodes is small so the extraction of all possible paths
is still feasible, although computationally expensive.

Figure 9 shows the attack tree that enumerates the
likely paths to compromise the reactor process starting
from the corporate PC. The root of the tree represents
the cyber attack objective of closing valve CV2, which
is the leaf node in the abstract attack tree in Figure 7.
The basic events in the tree in Figure 9 are modeled
using detailed attack trees in this section.

In the following, vulnerability scanning tools were
used to identify vulnerabilities and to design cyber
attacks for the identiﬁed nodes in Figure 9, namely
Real time server, BPCS, and HMI. Whether the vul-
nerabilities are exploitable is veriﬁed by penetration
testing. Client-side attacks, such as phishing emails,
are not considered for the BPCS, as it is an embedded
unattended node (no direct HMI attached), and for
the HMI, as it is not an industrial practice to run any
internet application such as a browser or email client

8

BPCSSISHMIEWSRT ServerCorp PCFirewall, no communicationFirewall, communicationNo Firewall, communicationNo Firewall, No communicationTANTAWY et al.

Figure 9: Reactor Runaway Abstract Attack Tree. At-
tack scenarios are sequential, starting from RT server
compromise, e.g., RT server compromise followed by a
BPCS compromise represents one attack scenario.

Port
3306/tcp open

State Service Version

sql

5.7.28, Pro-
tocol 10

Vulnerabilities
Authentication
bypass,
passwords
dump,
Brute
force passwords

22/tcp

open

ssh

OpenSSH
7.9p1
Ubuntu 10

Table II: RT Server vulnerabilities - nmap scan

on the HMI. Table X in the appendix summarizes the
tools and commands used.

A. Design of RT Server Cyber Attacks

We start from the compromised corporate PC that
has legitimate access to the Real Time (RT) server
for data logging purposes. Using nmap port scanning
command against RT server, we get the information
reported in Table II for mysql server and ssh ser-
vices. Mysql could be exploited in diﬀerent ways in-
cluding authentication bypass, password hash dump,
and brute-force login, depending on the speciﬁc server
settings. Figure 10 shows an attack tree to compromise
the RT server by escalating the attacker privileges via
mysql exploitation.

From the attack tree, the probability of RT Server

compromise could be approximated by:

P [Srv-Comp] = c14c15(c16 + c17)(c11c12 + c13)

(1)

Penetration testing would assisst in assigning probabil-
ity measures to the success of each attack action.

B. Design of BPCS Cyber Attacks

Using nmap port scanning tool, Table III lists the
open ports and associated listening services and service

version. In addition, nmap identiﬁed the target as NI
cRIO 9049 running RT Linux OS. There are many
other open ports reported that are used for vendor-
speciﬁc services, which could be exploited with proper
knowledge about vendor hardware and software. We
limit our discussion to known services only to keep the
treatment general.

According to open ports and services, Figure 11
shows the BPCS attack tree. Port 502 listens to
Modbus communication, so a Modbus malicious write
attack, with and without a speciﬁc register address, is
considered. Information about register addresses could
be obtained from controller conﬁguration data, either
as a hard copy or stored on local controller drive.
Lack of a speciﬁc register address for valve CV-2 will
require writing to an address range, which may lead
to a random valve conﬁguration that won’t cause a
reactor hazard, e.g., closing all inlet and outlet valves.
To increase the probability of success of such an attack,
process knowledge is required. Further, Modbus write
attack will not be successful unless no other Modbus
master is writing to the same register. For the given
testbed, HMI can write to valve registers after setting
process controllers to manual mode. This requires that
the reactor hazard time is less than the HMI-BPCS
(a)periodic communication rate.

With SSH port open, another possible attack is
Brute-force SSH login attempt to guess admin pass-
word and gain privileged access to the BPCS. This
attack will succeed only if the SSH server is conﬁgured
with no maximum number of password attempts. After
gaining the required privileged access, BPCS controller
could be shutdown to cause DoS attack, or the control

Figure 10: RT Server Attack Tree.

9

RT Server Compromise(Figure 10)BPCS Direct Compromise(Figure 11)HMI-BPS Data flow Compromise(Figure 12)B(C2_C)Brute-Force mysql LoginCracking passwords from hashesc11Bypass mysql Authenticationc12c13Crack Linux Password Hash DumpApparmor disabled for mysqlc14c15Mysql priviledged accessSSH Enabled (Port 22)Remote desktop enabled (Port 3389)c17c16Linux root accessRT Server CompromiseTANTAWY et al.

Port
22/tcp open

State Service Version
OpenSSH
7.4

ssh

Vulnerabilities
Brute-force
SSH login

502/tcp open mdps Modbus/TCP Modbus

Write,
Stop,
MITM

Table III: BPCS Vulnerabilities - nmap scan

Port
502/tcp open mdps Modbus/TCP Modbus

State Service Version

Vulnerabilities

3306/tcpopen mysql MySQL
3389/tcpopen

rdp

write, stop

Table IV: HMI Vulnerabilities - nmap scan

problem could be overwritten to cause integrity attack,
assuming the attacker has suﬃcient knowledge about
the hardware as well as the necessary software tools.

Finally, A DoS attack could also be designed by
exploiting Modbus STOP CPU function or by using
SYN Flood attack against the Modbus or SSH open
ports. This later attack will be successful only if the
BPCS controller schedule is not a real time scheduler
that will give priority to control tasks. It should be
noted that DoS attack will not succeed in causing a
reactor hazard if process outputs are conﬁgured as
fail-safe. In such case, the controller will automatically
write the pre-conﬁgured safe value to process valves in
case of controller software crash.

From the BPCS attack tree, the probability of BPCS

direct compromise could be approximated by:

It should be highlighted that the presented attacks
are not meant to be comprehensive. As an example, we
did not consider Man In The Middle (MITM) attacks
as the compromised RT server is behind a ﬁrewall,
hence it cannot monitor the traﬃc or cause ARP
poisoning unless one node on the control network is
compromised. Also, we assume perfect security around
the company premises, which does not allow for direct
physical access to hardware. Finally, we assume the
IT security policy does not allow the plug in of foreign
USB devices to plant control equipment. Should any of
these assumptions be violated, the attack trees have to
be expanded to accommodate for these new threats.
Moreover, the design of the cyber attacks does not
include day zero attacks, which are unknown at design
time and could only be detected online using anomaly
detection techniques [38].

P [BPCS-Comp] =c9[c3c4 + (c1 + c2)] + a1c3c4+

VI. Penetration Testing and Risk Assessment

c8[a2c7 + (c5 + c6)]

(2)

C. Design of HMI-BPCS Data Flow Attacks

In this attack vector, HMI has to be compromised
ﬁrst to mount the malicious data over the HMI-BPCS
data ﬂow stream. Table IV shows the nmap scan results
for the HMI. The machine is running Windows 10 and
fully patched, therefore very few vulnerabilities were
detected. Mysql service is running to communicate
with the RT Server for real time data and trend display
for the operator. Modbus master service is running to
poll and write data to the BPCS controller. Remote
desktop is turned on to grant diﬀerent operators access
to HMI machines for other plant zones.

Figure 12 shows the HMI attack tree. Remote desk-
top is exploited using either brute-force password at-
tack or via password leak. In addition, Modbus open
port is exploited to write malicious values to rele-
vant registers, provided process and I/O conﬁguration
knowledge are available. Since HMI has mysql client
connection to RT Server, mysql client side attacks
could be considered as well. However, given the low
number of mysql client side vulnerabilities and the dif-
ﬁculty associated, we ignored mysql client side attacks
in the penetration testing.

From the HMI attack tree, the probability of HMI-
BPCS dataﬂow compromise could be approximated by:

Penetration testing was carried out according to the
attack trees designed in Section V to verify the iden-
tiﬁed vulnerabilities and support the risk assessment
process by quantifying the probability of success of
diﬀerent attack actions.

A. RT Server

Table V summarizes the penetration testing results
for the attack tree in Figure 10. Bypass mysql authen-
tication attack failed due to enforced authentication
conﬁguration. Brute-force mysql login attack succeeded
to obtain mysql weak root password ”sql2563”. With
mysql root password, Linux password hash ﬁle was
loaded successfully into mysql using LOAD FILE com-
mand and dumped for password cracking. Finally,
Linux hashed password for root was recovered. The RT
server is now under full control using root password and
either SSH or remote desktop login. Attack injection is
semi-automated using Metasploit modules.

From penetration testing results, it can be safely
assumed that mysql login authentication is enforced,
especially for industrial plants, therefore c12 = 0. In
addition, we can assume that only one remote access
capability is allowed, either remote desktop or SSH,
for operational purposes. We arbitrarily choose SSH
hence c16 = 0. Therefore, the probability of RT Server
compromise reduces to:

P [HMI-BPCS] =c5c7 + c21(c18 + c19c20)

(3)

P [Srv-Comp] = c13c14c15c17

(4)

10

TANTAWY et al.

Figure 11: BPCS Attack Tree. Probabilities related to the corporation are designated by ci and to the attacker
by ai

Vulnerability

Bypass mysql
Authentica-
tion

Brute-force
mysql login

Linux
password
hash dump
Crack Linux
hashed
passwords

Exploit
Tool
Metasploit Fail

Exploit
Result

Metasploit Success

Metasploit Success

Metasploit Success

Notes

root

mysql server
conﬁgured to
enforce
au-
thentication
Weak
mysql
password
used
Apparmor
disabled for
mysql
root
password
recovered

Table V: Real Time Server Penetration Testing Results

Figure 12: HMI-BPCS Dataﬂow Attack Tree

to diﬃcult passwords to remember, hence written down
passwords that may be leaked.

B. BPCS

The probability of such an sql attack could be made
zero by either closing the SSH port or enabling OS
security on mysql database. Both options may not be
possible for operational purposes. However, the prob-
ability could be made arbitrarily small by enforcing
strong password policy for both mysql database and
Linux server. It should be noted, however, that the
enforcement of a very strong password policy may lead

Table VI summarizes the penetration testing results
for the attack tree in Figure 11. Modbus STOP attack
failed as it is not supported by the controller Modbus
implementation. SYN ﬂood attack did not also work
because the BPCS controller runs RT Linux OS, which
gives minimum guarantees on the control algorithm
task periodicity. The Brute-force SSH login attack was
successful in acquiring the root password, but unsuc-

11

Brute-force SSH Login, Shutdown ControllerNo Max Password Attempts Configuredc4c3Shutdown ControllerDoSFail Safe Output Configured Incorrectlyc9BPCS Direct CompromiseObtain Controller I/O Configuration (Insider)c5I/O Configuration Stored on Local Drivec61Modbus Write to CV-21Modbus Write to Address Range HitProcess Knowledgec7a2IntHMI Periodic Comm period > Reactor runaway timec8Comm Task in not running in real time mode, SYN Flood Attackc2Modbus STOP CPU Attackc1IntOverwrite control programa1Brute-force RDP password attackc19Password Leak (Insider)c18Remote Desktop EnabledHMI-BPCS Dataflow CompromiseNo RDP Lockout policyc21c20Process Knowledgec7Obtain Controller I/O Configurationc5Modbus Write to CV-21TANTAWY et al.

cessful in causing a DoS attack as the fail safe output
is correctly conﬁgured on the controller. However, with
controller root password, it is possible to overwrite
the control program with malicious code and cause
integrity attack. Modbus write attack was successful
in writing the required value to the pre-determined
register but the written value did not persist due to the
periodic HMI-BPCS communication that continuously
writes to the same register. Finally, random write to a
contiguous address range was unsuccessful to cause a
hazard without suﬃcient knowledge about the output-
register mapping.

From the penetration testing results, we can make
some simplifying assumptions to the attack tree prob-
abilities. The probability of incorrect conﬁguration for
fail safe output could be set to 0, assuming the con-
ﬁguration is made once per controller software lifetime
(we ignore here the possibility of a human error during
controller reprogramming). Also, the probability that
a random Modbus write would result in a hazard is
very small given the large number of registers typically
used in an industrial setup, so a2 = 0. Finally, strong
password policy enforcement decreases the probablity
of a successful brute force SSH attack signiﬁcantly,
hence c4 = 0. Accordingly, the probability of BPCS
compromise reduces to:

P [BPCS-Comp] =c8(c5 + c6)

(5)

C. HMI

Table VII summarizes the penetration testing results
for the attack tree in Figure 12. RDP brute-force
password attack was successful with user: operator
and password: ”reactorws”. Such passwords are not
uncommon in industrial plants as often times there is a
repeated naming convention used, which is composed
of plant unit name and WS for WorkStation. With
remote access granted, access to HMI to switch reactor
conroller to manual mode and close the coolant valve
was possible. The Modbus attack was also successful
in writing to Modbus registers at the HMI. However,
the period of writing data has to be much shorter
than both the Modbus poll delay between the HMI
and BPCS and the GUI-Modbus registers writing loop
frequency. This is mainly to avoid malicious data
overwrite. This later Modbus attack assumes suﬃcient
process knowledge and Modbus conﬁguration data.

One ﬁnding from penetration testing that could
simplify the probability of HMI-BPCS compromise in
(3) is that RDP lockout policy is an easy ﬁx that
could be conﬁgured in Windows 10 settings. Therefore,
setting c20 = 0 in (3) we get:

P [HMI-BPCS] =c5c7 + c18c21

(6)

12

D. Overall Risk Assessment

To assess the overall risk, a formula for risk scoring
in terms of pre-deﬁned risk metrics is required. This
formula usually gives diﬀerent weights for diﬀerent risk
metrics according to the organizational policy. The
two key metrics in any risk assessment are the threat
likelihood, L, and the cost of the consequences, q. In
industry, and to simplify the analysis, the risk scoring
function is usually categorical, using risk ranking ta-
bles. The risk ranking table is on a matrix form where
the rows represent ﬁnite likelihood categories and the
columns represent ﬁnite consequence categories. The
row-column intersection represent the risk rank, e.g.,
No, Low, Medium, and High risk. According to the risk
rank, a Target Mitigated Event Likelihood (TMEL) is
deﬁned. If the event likelihood is > TMEL, then an
additional protection layer is required to reduce the
likelihood to the TMEL. More information on Layer
Of Protection Analysis (LOPA) could be found in [33].
In this work, we adopt a continuous (rather than
categorical) function that directly calculates the risk
score. We deﬁne four risk metrics: Likelihood L, and
three consequences; Safety loss S, Financial loss F ,
and Environmental loss E. We designate the target
corporation risk score to be r. We deﬁne q to be the
normalized cost given by:

q = α

(cid:19)

(cid:18) S
Sm

+ β

(cid:19)

(cid:18) F
Fm

+ γ

(cid:19)

(cid:18) E
Em

(7)

1 = α + β + γ

Sm, Fm, Em are normalization factors representing the
maximum value set for each relevant category, and α, β
and γ are weight factors deﬁning the contribution of
each metric to the overall risk score, and usually de-
ﬁned by the organization. The total cost Q is a random
variable deﬁned on the sample space Ω = {0, 1, 2, . . .}
representing the number of hazardous events in a time
interval. The best well-known risk score is given by the
expected value of the total cost:

R = E[Q] = E[qN ] = qE[N ] = qL

(8)

where L is the likelihood of the hazardous event in
terms of the number of events per time interval. The
target risk score r is chosen according to the conse-
quence. We assume the following linear relationship:

log r = −ζq

(9)

where ζ is a proportionality constant. The risk score is
given by:

(cid:20)

R = L

α

(cid:19)

(cid:18) S
Sm

+ β

(cid:19)

(cid:18) F
Fm

+ γ

(cid:19)(cid:21)

(cid:18) E
Em

(10)

TANTAWY et al.

Vulnerability

Exploit Tool

STOP

Modbus
CPU Attack
SYN Flood At-
tack to ports 22,
502
Brute-force SSH
login

write
contiguous

Modbus
to
address range
Modbus write to
a speciﬁc register

Metasploit

Exploit
Result
Fail

Hazard
Caused
No

Metasploit

Fail

No

Metasploit

Success

Y/N

Metasploit

Success

Metasploit

Success

No

No

Notes

Function not supported by BPCS Modbus
implementation
RTOS does not degrade control algorithm
performance with communication spikes

user: admin, pass: ”niroot” successfully de-
duced. DoS attack was unsuccessful due to
fail safe setting. Integrity attack succeeded
with proper software tools
Random write to Modbus registers did not
cause a process hazard

HMI has periodic communication with
BPCS that overwrites written data every
5 sec.

Table VI: BPCS Penetration Testing Results

Vulnerability

Exploit Tool

Hydra

Brute-force RDP
login
Modbus
to
address range

write
contiguous

Exploit
Result
Success

Hazard
Caused
Yes

Metasploit

Success

Yes

Notes

user: admin, pass: ”reactorws” successfully
deduced. HMI access gained
Process and Modbus conﬁguration knowl-
edge assumed

Table VII: HMI Penetration Testing Results

The risk score has to satisfy R ≤ r. In addition, since
the likelihood is usually very small, we adopt the log
function for the risk:
(cid:20)

(cid:19)(cid:21)

(cid:19)

(cid:19)

(cid:18) S
Sm

+ β

(cid:18) F
Fm

+ γ

(cid:18) E
Em

log L ≤ log r − log

α

= −(ζq + log q)

(11)

To calculate the likelihood L, we combine (4), (5),
and (6) according to the attack tree in Figure 9.
Ignoring higher order probability terms, the probability
of reactor runaway is given by:

P [Runaway] = c13c14c15c17 [c8(c5 + c6) + c5c7 + c8c21]
(12)

where, without loss of generality, we assume a unity
attack event per the chosen time interval. Assuming
the probability that an attacker could compromise a
corporate PC is given by Pc, the overall probability of
reactor runaway is given by:

L = PcP [Runaway]

= Pcc13c14c15c17 [c8(c5 + c6) + c5c7 + c8c21]

(13)

Combining (11) and (13):
Pcc13c14c15c17 [c8(c5 + c6) + c5c7 + c8c21] ≤ 10−(ζq+log q)

(14)

Equation (14) represents the design constraint for
CPS security. Table VIII enumerates the design vari-
ables with description and possible countermeasures

13

to reduce or eliminate the associated probabilities. It
should be highlighted that some vulnerabilities could
be entirely eliminated by taking the extreme policy of
blocking the relevant services. However, the price paid
is less ﬂexibility in asset management and potentially
higher cost of ownership.

E. Risk Assessment Results

We apply the risk assessment methodology to the
case study presented in the paper. It should be high-
lighted that the risk assessment methodology works
by deﬁning a target tolerable risk level, then working
backwards to ﬁnd an upper bound on the probabil-
ity of cyber failures for CPS components. This is in
comparison to the forward risk assessment process
where the risk is assessed for a given system using its
actual failure probability ﬁgures. The advantage of the
backward approach is that it represents a proactive
approach that is suitable for design time as well as
runtime.

Equation (14) represents the design equation for the
system, where the exponent on the right hand side is
calculated from (11) using the desired target risk level.
All probabilities are considered design variables that
need to be speciﬁed to achieve the target risk level. To
illustrate the process, Table IX shows an instance of
the design parameters and risk target for the reactor
runaway risk scenario. The values in Table IX are used

Description

Probability of compromising a cor-
porate PC
Probability of
Modbus conﬁguration
Probability of storing conﬁguration
documentation on the controller

leaking I/O and

Probability of leaking process infor-
mation
Probability that HMI-BPCS comm.
period is greater than reactor haz-
ard time

Probability of successful brute-force
mysql login attack
Probability of successful password
recovery from a hash dump
Probability that security monitor-
ing app is disabled for mysql

TANTAWY et al.

Design
Variable
Pc

c5

c6

c7

c8

c13

c14

c15

c17

c18

c21

Countermea-

Possible
sures
IT security policy

Non-technical - HR Policy

Prevent local storage

Non-technical - HR Policy

Drawbacks

storage is more
Local
convenient and guaran-
tees no data loss

low

probability
Very
except for small reactors-
Increase HMI-BPCS comm.
frequency
Enforce
policy
Enforce
policy
Increase security armoring
for mysql application

password

password

strong

strong

passwords

passwords

Forgetting
and writing them down
Forgetting
and writing them down
Less
in
database management
and interaction
Operational
inﬂexibility
and higher operational
cost

ﬂexibility

Inﬂexible
operational
environment and higher
HMI conﬁguration cost

Probability that SSH is enabled for
RT Server

Block remote access

leaking operation

Probability of
passwords
Probability that RDP is enabled for
HMI workstations

Non-technical - HR Policy

Disable RDP

Table VIII: CPS Security Design Variables and Countermeasures

in (7) to yield a normalized cost q = 0.8005. With
ζ = 6, the target risk score is obtained from (9) as
r (cid:39) 10−5. With these values, we can substitute in (14)
to obtain the relationship between the design variables.

design equation:

Pc ≤ 10−5

(c2
(cid:124)

5c2
13c15)
(cid:123)(cid:122)
(cid:125)
PCPS

(16)

Pcc13c14c15c17 [c8(c5 + c6) + c5c7 + c8c21] ≤ 10−5

(15)

To get more insight into the design process, we make
some assumptions regarding design variables. First, we
assume that the probability of leaking information is
the same whether it is software conﬁguration or process
documentation. Therefore, c5 = c7. Second, we assume
the same password policy is enforced for diﬀerent
systems, including OS, database server, and remote
desktop connection. Therefore, c13 = c14 = c18. Third,
the probability that HMI-BPCS communication period
is greater than reactor hazard time is negligibly small
for all practical purposes, so c8 = 0. Fourth, since we
chose SSH as the only remote conﬁguration tool for the
RT server and disabled remote desktop capability, we
can set c17 = 1. Finally, we assume remote desktop is
disabled for all operator HMIs despite the operational
inconvenience, hence c21 = 0. This leads to the reduced

where the ﬁrst term PCPS represents the cyber attack
failure probability due to CPS security weaknesses and
Pc represents the cyber attack failure probability due
to IT security weaknesses. Equation (16) formalizes
the interplay between IT security, as ending at the
corporate network level, and CPS security, from the
isolating ﬁrewall down to the plant ﬂoor. Figure 13 is a
log-log plot for (16), where the design space is the area
under the curve. Any point outside the design region
results in a higher risk level than the tolerable value
speciﬁed by the corporation. In addition, as one prob-
ability increases, the other probability has to decrease
to compensate and achieve the target risk level. Ex-
amples are the extreme points (1,10−5) and (10−5,1).
In practice, an operating point that represents a com-
promise between IT security and CPS security should
be selected, e.g., (PCPS, Pc) = (10−4, 10−2) in Figure
13. If the design constraint cannot be achieved, then
a process modiﬁcation, e.g., a safety instrumented
function, needs to be added. This example shows the
interplay between security and safety assessment, and
that they cannot be carried out sequentially, but rather

14

TANTAWY et al.

Design
Parame-
ter
α
β
γ

S

Sm

F
Fm

E
Em

ζ

Description

Value

Safety loss weight
Financial loss weight
Environmental
loss
weight
Safety loss

Maximum safety loss

Financial loss
Maximum ﬁnancial
loss
Environmental loss
Maximum
environmental loss
Target
const

prop.

risk

0.7
0.2
0.1

10 fa-
talities
10 fa-
talities
$5 M
$10 M

$10, 000
$2 M

6

Table IX: Reactor Runaway Risk Scenario - Design
Example

Figure 13: Cyber Security Design Curve. Any point in
the area under the curve represents a valid design that
satisﬁes the target mitigated risk level

in an integrated way. This is one of the main insights
gained from this work, which is further discussed in
Section VII.

F. Hazard Mitigation

The purpose of the risk assessment and countermea-
sure design is to minimize the probability of an attack
that would cause a process hazard to the target mit-
igated likelihood. However, there is still a probability
that an attack will be launched that cause a process
hazard. In such case, a hazard mitigation strategy is
mandatory.

One of the advantageous of the process hybrid au-
tomaton in Figure 5 is that it shows the best course
of action when being in a hazardous state. The guard
conditions on the outward transitions identify the pro-
cess manipulation required to get out of the hazardous
state. As an example, If the current process state is

15

S4, and a hazard is developed, then opening valve CV-
2 will cause a transition to the safe state S1. However,
two key questions are in order: (1) how the current
process state could be estimated?, and (2) how can we
take an action if the cyber system is compromised? The
ﬁrst question concerns the problem of state estimation
in hybrid systems which has been studied extensively
in the literature [39]. To answer the second question,
taking an action with a compromised cyber system has
one of two ways; either having a backup image of the
whole system that could be restored, or diagnosing
the system online to isolate the attack and gaining
control over the CPS. In both cases, the time taken
to implement the mitigation action, τm, should satisfy:

τm < τp + τs − τd

(17)

where τs is the time the system can operate outside its
safe operating envelope with no damage and τd is the
time taken to detect the hazard and τp is the process
hazard development time, as reported in the system
hybrid automaton. If this condition is not satisﬁed, e.g.,
covert attack that misleads the operator via malicious
HMI data and resulting in high detection time τd, then
a process hazard will take place, and the mitigation
action may or may not reduce the damage according to
the process design. In such cases, a non-cyber (usually
mechanical) mitigating solution has to be implemented
in the process. For the reactor system, control valve
CV-2 could have a manual override in the ﬁeld to open
or close it by a manual action.

VII. Discussion

The design and analysis process as applied to the
case study in this paper could be generalized as in
Figure 14, where the physical process is included in the
design cycle and hence subject to several iterations. A
truly integrated approach to design both the safety and
security systems should include both the physical and
cyber systems at early stages of the design process.

The physical process modeling using hybrid automa-
ton revealed several important insights. First, careful
process modeling is crucial to identify the true hazards
and associated cyber components to design a ﬁt-for-
purpose security system. Second, the time to develop a
process hazard is an important parameter that should
be taken into account during risk assessment and mit-
igation design. Along with the detection system, this
may lead to more cost-eﬀective cyber designs. Finally,
as hazard generation is dependent on both the sequence
of attack and time spent in each state, combining
the attack traces from the hybrid automaton with the
attacker probabilistic model results in more accurate
risk assessment.

TANTAWY et al.

Identify process
hazards & related
cyber components

Start

Develop hybrid
automaton

Develop dataﬂow
diagram

Design
countermeasures
& Implementation

Develop abstract
attack tree

Risk assessment

Vulnerability
analysis &
Attack Trees

Pentest

Figure 14: Model-Based Design Cycle, as followed in
the case study

There is a tight coupling between safety and secu-
rity, in terms of their impact on the physical system.
Designing both systems independently may not lead
to an optimal design. As the case study shows, only
one physical component and two cyber nodes are the
most critical components. All other components play a
secondary role.

The model-based design approach followed in this
work, where physical system modeling, data ﬂow mod-
eling, and attack trees are integrated provides one
uniﬁed framework to design safe and secure CPS. The
adoption of this integrated approach in industry is
contingent on the development of software tools that
automate most of the tasks that have been carried out
manually in this work. This includes model develop-
ment, hazard identiﬁcation, data ﬂow graph develop-
ment, vulnerability scanning, attack tree development,
penetration testing, and countermeasure design. Al-
though several tools exist to automate individual tasks,
an integrated tool that deﬁnes and implements the
interface between diﬀerent tasks is necessary.

The value of working backwards by identifying ﬁrst
the process hazards, though reducing signiﬁcantly the
number of attack scenarios, may not be readily obvious
in centralized architectures. For example, the work
presented shows that valve CV-2 is the sole critical
component, and therefore, BPCS and HMI are the
cyber components that should be protected. However,
BPCS is the main process controller that implements
all control algorithms, so the identiﬁcation of CV-2 did
not lead to eﬀort or cost savings as the whole BPCS
will be hardened anyway. For centralized systems like
the CPS presented in this paper, this may lead to
program segmentation and special protection for CV-
2 related software modules. However, the signiﬁcant
value of this approach is revealed when considering
distributed systems, where smart sensors and actuators
are embedded devices that implement their own soft-
ware and communicate over a common bus, without a
need for a centralized controller.

Finally, it should be highlighted that the presented
model-based design approach works for both oﬄine
and online risk assessment. However, for online risk
assessment, it is also desirable to detect day zero at-
tacks that are not available in vulnerability databases.
In such case, the presented framework needs to be

Figure 15: Model-Based risk assessment with day zero
attacks

augmented with online anomaly detection to perform
a complete risk assessment. The architecture of this
solution is shown in Figure 15, including the possible
countermeasure design. Figure 15 represents a natural
extension to the work presented in this paper.

VIII. Conclusion and Future Work

In this paper, we pursued an integrated approach
to design the security system of a given CPS. The
key ﬁnding is that by exploring the physical system
behavior, it was observed that not all attacks could
cause a system hazard, a hazard may take time to
develop, and it may be possible to nullify the attack
eﬀect. Therefore, the paper highlights the need for an
integrated approach to design the safety and security
systems. Model-based design is a cornerstone for this
integrated approach to be successful. For successful
industrial adoption, a design automation tool chain
that integrates physical and cyber domain modeling, as
well as attack modeling and penetration testing, needs
to be developed.

Several research directions could be identiﬁed from
this work. First, the attacker proﬁle was ignored in
the risk assessment (all probabilities were assumed to
be 1, certain events). This may lead to non-optimal
system designs. Attackers posses diﬀerent knowledge
and skill set, and this needs to be captured in the risk
assessment process. In addition, the probability that
a process hazard may not be produced even though
a process upset is caused due to random attacker ac-
tions was not considered. This factor may signiﬁcantly
decrease the overall likelihood of a process hazard post
a cyber attack. Second, most successful attacks in the
CPS domain are covert attacks that deceive the user
via concurrent HMI manipulation. These attacks have
complex structures and multiple objectives that need
to be studied in more depth. Third, cyber attacks may
lead to a system malfunction, and therefore should
be included in the safety risk assessment as an ini-
tiating cause. This may lead to a reformulation of
the current industrial practice for hazard identiﬁcation

16

CPSVulnerability AnalysisConfiguration dataPenetration TestingAttack DesignAnomaly DetectionHost/Network SensorsVulnerability DatabaseOnline Risk AssessmentCountermeasure SelectionTANTAWY et al.

and protection studies. Finally, when simulating the
physical process for diﬀerent cyber attack actions, it
was assumed that the system disturbances are within
operating limits. This assumption may be violated if
the attack is organized against multiple system units
simultaneously, resulting in the system being subject
to concurrent disturbances and a cyber attack. The
study of the composition of component risk assessment
to yield an overall system risk assessment measure
is an interesting research direction. Finally, the risk
assessment process presented in this work is model-
based, hence relying on known vulnerabilities and at-
tack scenarios. However, day zero attacks represent a
signiﬁcant threat and challenge to CPS security. The
integration of the model-based approach and machine
learning approaches used for day zero attack detection
in the context of online risk assessment is an important
future research direction.

Acknowledgment

This research was made possible by NPRP 9-005-
1-002 grant from the Qatar National Research Fund
(a member of The Qatar Foundation). The statements
made herein are solely the responsibility of the authors.

References

[1] C. Alcaraz and S. Zeadally, “Critical infrastructure protec-
tion: Requirements and challenges for the 21st century,”
International Journal of Critical Infrastructure Protection,
vol. 8, pp. 53–66, jan 2015.

[2] I. Friedberg, K. McLaughlin, P. Smith, D. Laverty, and
S. Sezer, “STPA-SafeSec: Safety and security analysis for
cyber-physical systems,” Journal of Information Security
and Applications, vol. 34, pp. 183–196, jun 2017.

[3] G. Stoneburner, A. Goguen, and A. Feringa, “Risk manage-
ment guide for information technology systems :,” tech. rep.,
2002.

[4] H. Kanamaru, “Bridging functional safety and cyber se-
curity of SIS/SCS,” in 2017 56th Annual Conference of
the Society of Instrument and Control Engineers of Japan,
SICE 2017, vol. 2017-Novem, pp. 279–284, IEEE, sep 2017.
[5] S. Mauw and M. Oostdijk, “Foundations of attack trees,”
in International Conference on Information Security and
Cryptology, pp. 186–198, Springer, 2005.

[6] Y. Ashibani and Q. H. Mahmoud, “Cyber physical systems
security: Analysis, challenges and solutions,” Computers &
Security, vol. 68, pp. 81–97, 2017.

[7] Y. Cherdantseva, P. Burnap, A. Blyth, P. Eden, K. Jones,
H. Soulsby, and K. Stoddart, “A review of cyber security
risk assessment methods for SCADA systems,” Computers
& Security, vol. 56, pp. 1–27, 2016.

[8] S. Huang, C. J. Zhou, S. H. Yang, and Y. Q. Qin,
“Cyber-physical system security for networked industrial
processes,” International Journal of Automation and Com-
puting, vol. 12, pp. 567–578, dec 2015.

[9] E. N. Yılmaz and S. G¨onen, “Attack detection/prevention
system against cyber attack in industrial control systems,”
Computers and Security, vol. 77, pp. 94–105, aug 2018.
[10] X. Ji, H. Yu, G. Fan, and W. Fu, “Attack-defense trees based
cyber security analysis for CPSs,” in 2016 IEEE/ACIS
17th International Conference on Software Engineering,
Artiﬁcial Intelligence, Networking and Parallel/Distributed
Computing, SNPD 2016, pp. 693–698, IEEE, may 2016.

[11] G. Sabaliauskaite and A. P. Mathur, “Aligning Cyber-
Physical System Safety and Security,” Complex Systems
Design & Management Asia, pp. 41–53, 2015.

[12] H. Abdo, M. Kaouk, J. M. Flaus, and F. Masse, “A safe-
ty/security risk analysis approach of Industrial Control
Systems: A cyber bowtie – combining new version of attack
tree with bowtie analysis,” Computers and Security, vol. 72,
pp. 175–195, jan 2018.

[13] S. Sridhar, A. Hahn, and M. Govindarasu, “Cyber-physical
system security for the electric power grid,” Proceedings of
the IEEE, vol. 100, pp. 210–224, jan 2012.

[14] A. Hahn, A. Ashok, S. Sridhar, and M. Govindarasu,
“Cyber-physical security testbeds: Architecture, applica-
tion, and evaluation for smart grid,” IEEE Transactions on
Smart Grid, vol. 4, no. 2, pp. 847–855, 2013.

[15] S. Poudel, Z. Ni, and N. Malla, “Real-time cyber physical
system testbed for power system security and control,” In-
ternational Journal of Electrical Power & Energy Systems,
vol. 90, pp. 124–133, sep 2017.

[16] J. Jarmakiewicz, K. Parobczak, and K. Ma´slanka, “Cyber-
security protection for power grid control infrastructures,”
International Journal of Critical Infrastructure Protection,
vol. 18, pp. 20–33, 2017.

[17] P. A. Craig, “Metrics for the National SCADA Test Bed Pro-
gram,” Paciﬁc Northwest National Lab.(PNNL), Richland,
WA, no. October, 2008.

[18] T. Inl and Idaho National Laboratory, “National SCADA
Test Bed Substation Automation Evaluation Report,” Tech.
Rep. October, 2009.

[19] X. Koutsoukos, G. Karsai, A. Laszka, H. Neema, B. Pot-
teiger, P. Volgyesi, Y. Vorobeychik, and J. Sztipanovits,
“Sure: A modeling and simulation integration platform for
evaluation of secure and resilient cyber–physical systems,”
Proceedings of the IEEE, vol. 106, no. 1, pp. 93–112, 2017.
[20] T. Morris, A. Srivastava, B. Reaves, W. Gao, K. Pavurapu,
and R. Reddi, “A control system testbed to validate critical
infrastructure protection concepts,” International Journal
of Critical Infrastructure Protection, vol. 4, pp. 88–103, aug
2011.

[21] A. P. Mathur and N. O. Tippenhauer, “SWaT: a water
treatment testbed for research and training on ICS security,”
in 2016 International Workshop on Cyber-physical Systems
for Smart Water Networks (CySWater), pp. 31–36, IEEE,
apr 2016.

[22] Y. Guan and X. Ge, “Distributed Attack Detection and
Secure Estimation of Networked Cyber-Physical Systems
Against False Data Injection Attacks and Jamming At-
tacks,” IEEE Transactions on Signal and Information Pro-
cessing over Networks, vol. 4, no. 1, pp. 48–59, 2018.
[23] F. P. Januario, J. Leit˜ao, A. Cardoso, and P. Gil, “Resilience
enhancement in cyber-physical systems: A multiagent-based
framework,” Multi-agent Systems, p. 185, 2017.

[24] H. Durand, “A nonlinear systems framework for cyberattack
prevention for chemical process control systems,” Mathe-
matics, vol. 6, no. 9, p. 169, 2018.

[25] Z. Wu, F. Albalawi, J. Zhang, Z. Zhang, H. Durand, and
P. D. Christoﬁdes, “Detecting and handling cyber-attacks
in model predictive control of chemical processes,” Mathe-
matics, vol. 6, no. 10, pp. 1–22, 2018.

[26] B. Genge, P. Haller, and C. Enachescu, “Anomaly Detection
in Aging Industrial Internet of Things,” IEEE Access, vol. 7,
pp. 74217–74230, 2019.

[27] N. Paoletti, Z. Jiang, M. A. Islam, H. Abbas, R. Mang-
haram, S. Lin, Z. Gruber, and S. A. Smolka, “Synthesizing
stealthy reprogramming attacks on cardiac devices,” in Pro-
ceedings of the 10th ACM/IEEE International Conference
on Cyber-Physical Systems, pp. 13–22, ACM, 2019.

[28] Z. Zhang, Z. Wu, H. Durand, F. Albalawi, and P. D.
Christoﬁdes, “On integration of feedback control and safety
systems: Analyzing two chemical process applications,”
Chemical Engineering Research and Design, vol. 132,
pp. 616–626, 2018.

17

TANTAWY et al.

Node
RT Server
RT Server

Tool
nmap
Metasploit mysql authbypass hashdump

Module
-

Purpose
Scan
Bypass auth.

RT Server

Metasploit mysql login

BPCS
BPCS

nmap
Metasploit modicon command

-

BPCS

Metasploit

synﬂood

BPCS

Metasploit

ssh login

BPCS

Metasploit modbusclient

BPCS

Metasploit modbusclient

HMI
HMI

nmap
Hydra

-
-

HMI

Metasploit modbusclient

Brute-force
SQL login

Scan
Controller
Remote
Start/Stop
BPCS
Flood attack

SYN

Brute-force
SSH login

to
single

Write
a
Modbus
register
Write to mul-
tiple Modbus
register

Scan
Brute
RDP

force

Write to mul-
tiple Modbus
register

Commands
nmap -p- -sT -sV 192.170.1.2
set RHOSTS 192.170.1.2, set
THREADS 50, exploit
set RHOSTS 192.170.1.2, set
USERNAME root, set PASS_FILE
./passfile.lst, exploit
nmap -p- -sT -sV 192.168.1.10
set RHOSTS 192.168.1.10, set
RPORT 502, set MODE STOP,
exploit
set RHOSTS 192.168.1.10,
set RPORT 22, set RPORT 502,
exploit
set RHOSTS 192.168.1.10, set
USERPASS_FILE ./passfile.list,
exploit
set RHOSTS 192.168.1.10, set
RPORT 502, set DATA_ADDRESS 0,
set DATA 0, exploit

set RHOSTS 192.168.1.10, set
RPORT 502, set DATA_ADDRESS 0,
set DATA_REGISTERS 0,100,100,
exploit
nmap -p- -sT -sV 192.168.1.20
Hydra -v -f -l opera-
tor -P ./passfile.list
rdp://192.168.1.20
set RHOSTS 192.168.1.20, set
RPORT 502, set DATA_ADDRESS 0,
set DATA_REGISTERS 0,100,100,
exploit

Table X: Vulnerability Scanning and Penetration Testing Commands

2012.

[39] J. Prakash, S. C. Patwardhan, and S. L. Shah, “State estima-
tion and nonlinear predictive control of autonomous hybrid
system using derivative free state estimators,” Journal of
Process Control, vol. 20, pp. 787–799, aug 2010.

[29] Stouﬀer, Keith, Joe Falco and K. Scarfone., “Guide to
industrial control systems (ICS) security.,” tech. rep., NIST,
2015.

[30] Ashraf Tantawy, Sherif Abdelwahed and Q. Chen, “Con-
tinuous Stirred Tank Reactors: Modeling and Simulation
for CPS Security Assessment,” in The Internationl Con-
ference on Computational Intelligence and Communication
Networks, CICN 2019, 2019.

[31] R. Miller and L. Desborough, “Web-enabled control loop
assessment,” Chemical Engineering, vol. 107, no. 5, pp. 76–
79, 2000.

[32] ISA, “ANSI/ISA-5.1-1992, Instrumentation Symbols and

Identiﬁcation,” tech. rep., 1992.

[33] IEC, “IEC 61511-1:2016, Functional safety - Safety instru-
mented systems for the process industry sector - Part 1:
Framework, deﬁnitions, system, hardware and application
programming requirements,” tech. rep., IEC, 2016.

[34] J.-F. Raskin, “An introduction to hybrid automata,” in
Handbook of networked and embedded control systems,
pp. 491–517, Springer, 2005.

[35] C. E. L. Thomas H. Cormen, Introduction to Algorithms,

Third Edition. sep 2009.

[36] J. Dunj´o, V. Fthenakis, J. A. V´ılchez, and J. Arnaldos,
“Hazard and operability (hazop) analysis. a literature re-
view,” Journal of hazardous materials, vol. 173, no. 1-3,
pp. 19–32, 2010.

[37] W. Stallings and L. Brown, Computer Security : principles

and practice (4th edition). Pearson, 2018.

[38] A. AlEroud and G. Karabatis, “A contextual anomaly de-
tection approach to discover zero-day attacks,” in 2012 In-
ternational Conference on Cyber Security, pp. 40–45, IEEE,

18

