A Novel Cryptography-Based Privacy-Preserving
Decentralized Optimization Paradigm

1st Xiang Huo
Department of Electrical and Computer Engineering
University of Utah
Salt Lake City, USA
xiang.huo@utah.edu

2nd Mingxi Liu
Department of Electrical and Computer Engineering
University of Utah
Salt Lake City, USA
mingxi.liu@utah.edu

0
2
0
2

c
e
D
2
2

]

C
O
.
h
t
a
m

[

2
v
5
8
2
9
0
.
2
1
0
2
:
v
i
X
r
a

Abstract—Existing large-scale optimization schemes are chal-
lenged by both scalability and cyber-security. With the favor-
able scalability, adaptability, and ﬂexibility, decentralized and
distributed optimization paradigms are widely adopted in cyber-
physical system applications. However, most existing approaches
heavily rely on explicit information exchange between agents
or between agents and the system operator, leading the entire
framework prone to privacy risks. To tackle this issue, this
paper synthesizes cryptography and decentralized optimization
techniques to develop a novel privacy-preserving decentralized
optimization paradigm. The proposed paradigm is generically
applicable to strongly coupled convex optimization problems
with nonseparable objective functions and linearly coupled con-
straints. The security and accuracy of the proposed paradigm
are veriﬁed via numerical examples.

Index Terms—Cryptography, coupled optimization problems,
cyber-security, decentralized optimization, privacy-preservation

I. INTRODUCTION

Large-scale optimization problems broadly exist in indus-
trial cyber-physical system (ICPS) applications, e.g., economic
dispatch in power system [1], trafﬁc congestion control in
transportation system [2], distributed energy resource control
in smart grid [3], and resource allocation [4]. Owing to the
scalability and ﬂexibility, decentralized optimization has been
extensively adopted to speed up large-scale optimization.

In most decentralized and distributed optimization ap-
proaches [5]–[7], agents and the system operator (SO) are
mandated to exchange and expose private information, e.g.,
decision variables and the network topology information. This
can lead to undesired privacy leakage, i.e., adversaries who
wiretap the communication may steal private information of
the agents or the SO [8]. Besides, agents may not be willing
to share their personal information to any neighbors or the SO
[9]. Having these privacy issues identiﬁed, privacy-preserving
strategies for decentralized and distributed optimization are
drawing more attention. Differential privacy (DP) [10], which
protects the participants’ privacy by adding carefully-designed
noises to the transmitted messages, has emerged to be a
popular method [11], [12]. An (cid:15)-differential privacy-preserving
algorithm was developed in [11] for distributed constrained
optimization by adding perturbations to the public signal. To
minimize the accuracy deterioration caused by perturbations,
Zhang and Zhu [12] analyzed the privacy-accuracy trade-

off and proposed an optimal dynamic DP mechanism with
guidelines to choose privacy parameters. Unfortunately, the
privacy-accuracy tradeoff fundamentally exists in DP based
schemes [13]. Similar to DP, the emerging correlated noise
based obfuscation strategy uses obfuscation to mask the true
state value. Under this umbrella, a stochastic gradient descent
based algorithm was develop in [14] to protect the privacy via
gradient obfuscation. Mak et al. [15] proposed a differentially
private distributed algorithm with high ﬁdelity and obfuscation
quality based on the Alternating Direction Method of Mul-
tipliers (ADMM) algorithm. Nonetheless, obfuscation based
methods invariably suffer from accuracy loss and therefore
could lead to severe feasibility and optimality issues.

Privacy preservation can also be enabled by cryptography
which obscures critical information in ciphertext. As decentral-
ized algorithms normally involve operations on the transmitted
messages, such operations on the ciphertexts are imperative
in any cryptography-based decentralized algorithm. Among
various cryptosystems, homomorphic encryption [16] allows
arithmetic operations over ciphertext, leading to a result in an
encrypted form that, when decrypted, matches the result of
operations performed on the plaintext. Partially homomorphic
encryption was incorporated into the projected subgradient
algorithm [8] and ADMM [17] to preserve the privacy of
both intermediate states and gradients. However, neither [8]
nor [17] is capable of solving strongly coupled optimization
problems with nonseparable objective functions and coupled
constraints. As an improvement, Lu and Zhu [9] designed a
private key secure computation scheme which is applicable
to general projected gradient-based algorithms. However, this
the proposed
scheme is not semantically secure. Besides,
private key algorithm requires fully homomorphic encryption,
and the public key encryption scheme is not implementable
without sacriﬁcing privacy. Moreover, several key assumptions
of the security modeling in [9], e.g., agents cannot eavesdrop
others’ communication links and the SO can only launch
temporarily independent attacks, have excluded some high-
probability privacy events in real ICPS applications.

In this paper, we aim to improve the technical baseline of
privacy-preserving decentralized algorithms through cryptog-
raphy. Particularly, we consider a set of agents and a SO that
securely compute a strongly coupled optimization problem.

 
 
 
 
 
 
The contribution of this paper is four-fold: (1) We synthesize
cryptography and decentralized optimization to develop a
novel privacy-preserving scalable optimization paradigm for
strongly coupled optimization problems. (2) An idea of coefﬁ-
cient assignment is proposed to preserve the general privacy of
both the agents and the SO. Comparing with [9], the proposed
method is not conﬁned to only protecting the “coefﬁcient” of
the gradient. (3) The enhanced security that is achieved by
eliminating assumptions on adversarial behaviors has not been
tackled before. (4) Demands on the cryptosystem are relaxed –
only additively homomorphic encryption is required. Besides,
both private key and public key based encryption schemes can
be applied in the proposed privacy-preserving paradigm.

II. MAIN RESULTS

A. Problem Formulation

This paper considers a family of strongly coupled optimiza-
tion problems with nonseparable convex objective functions,
globally coupled constraints, and local constraints. In speciﬁc,
the optimization problem can be formulated as

min
x
s.t.

(x)
F
xi ∈
h(x)

Xi,
0,

≤

i = 1,

∀

· · ·

, n,

(1)

where n agents are involved in this problem, xi denotes the
xn]T. The
decision variable of the ith agent, and x = [x1 · · ·
objective function considered here can be written as

(x) (cid:44) 1
2 (cid:107)

F

n
(cid:88)

i=1

Auixi + c

2
2 +
(cid:107)

n
(cid:88)

i=1

fi(xi),

(2)

where the quadratic term denotes the coupled global objective
and fi(xi) is agent i’s local objective. The local constraint of
agent i is represented as a convex set Xi. The global constraint
is considered to be linearly coupled, which can be written as

h(x) (cid:44)

n
(cid:88)

i=1

Agixi + d

0.

≤

The relaxed Lagrangian of (1) can be calculated as

(x, λ) =

L

F

(x) + λTh(x),

(3)

(4)

where λ is the dual variable. Consequently, the subgradients
of

(x, λ) w.r.t. xi and λ can be calculated as

(x, λ)=AT

ui(

n
(cid:88)

i=1

Auixi + c)+

∇xifi(xi)+Agi

Tλ,

(5a)

∇xiL

(x, λ)=

∇λL

n
(cid:88)

i=1

Agixi + d.

(5b)

These subgradients are critical for the updates in general
primal-dual based algorithms [18], [19]. However, because the
i=1 Auixi in (5a) and (cid:80)n
coupling terms (cid:80)n
i=1 Agixi in (5b)
contain the aggregated information of all agents, intermediate
decision variables of the agents must be transmitted to the SO
for primal and dual updates, putting agents’ privacy at risk.

L

Besides, c in (5a) and d in (5b) could be private information
held by either the agents or the SO depending on particular
applications, leading to different situations in privacy preser-
vation. This paper develops a privacy-preserving paradigm that
protects the privacy of all the participants in solving problem
(1) and enjoys the scalability of the decentralized optimization.

B. Privacy-Preserving Paradigm Design

The privacy preservation should be considered in two as-
pects. First, information exchanged between the agents and
the SO must not reveal useful information to external eaves-
droppers. Second, all participants should only have access to
what they need to know. In solving (1), private information in-
cludes the coefﬁcients in the optimization problem and private
decision variables of the agents. Speciﬁcally, Au1, . . . , Aun,
and c in (2) are aggregated global objective coefﬁcients and
Ag1, . . . , Agn, and d in (3) are the aggregated global constraint
coefﬁcients. These global coefﬁcients can be assigned to either
the SO or the agents depending on the particular application.
Note that the privacy situation varies depending on the role of
the SO, i.e., a pure computation agency that has no knowledge
about the optimization problem [20] or a participant with its
own private information. Therefore, based on whether the SO
is a trustworthy third party, two cases exist:

• Case 1: SO is trustworthy and has access to the global

coefﬁcients.

• Case 2: SO is blind from the optimization problem and

does not hold any private information.

Due to the limit of space, we only focus on Case 1 in this
paper. Case 2 will be discussed in a journal extension of this
work. In Case 1, the SO possesses a set of private coefﬁcients
for solving the optimization problem. For example, for the
load aggregation problem in power system, SO holds global
coefﬁcients d and c as its private information which could
represent the load capacity and baseline load, respectively.
Such information is considered proprietary and should be kept
only to the SO to prevent malicious attacks on the distribution
network. Therefore, we consider the SO holding c, d, and
all global coefﬁcients Aui, Agi,
, n as its private
information. The ith agent holds the global coefﬁcients related
to itself, i.e., Aui and Agi. Besides, the ith agent should also
have a set of coefﬁcients included in its local objective fi(xi)
denoted by

i = 1,

· · ·

∀

If i and the private key w.

We then propose a novel cryptography-based decentralized
algorithm for problem (1). Fig. 1 presents an illustrative
example with two agents and one SO. During each iteration
of any primal-dual based decentralized algorithm,
the SO
randomly generates two sets of parameters, satisfying

r1 + r2 +
s1 + s2 +

· · ·

+ rn = 1,
+ sn = 1,

(6a)

(6b)

· · ·
and sends both ric and sid to the ith agent. Then the ith
agent sends the encrypted messages
i + ric) and
) denotes any additively
i + sid) to the SO, where
E
·
homomorphic encryption scheme, e.g., SingleMod encryption

(Auixk

(Agixk

E

E

(

where τx and τλ denote the shrunken parameters for the primal
and dual updates, respectively, and
) denotes the relaxed
Lagrangian deﬁned in (4). In what follows, we choose SPDS
to integrate into the proposed privacy-preserving paradigm.

(
·

L

For simplicity of illustration, in this paper, we adopt the
SingleMod cryptosystem which encrypts a plaintext integer
message zr by

e =

E

(zr) = mw + zr,

(9)

where e is the ciphertext, m is a random integer, and w
is the private key which is a large prime number. Note
that the coefﬁcients and variables (e.g., Aui and xi) in the
decentralized calculations are real numbers, however zr has
to be an integer in any cryptosystem. Therefore a real number
r is transformed into an integer zr by zr = 10σr where σ
denotes the preserved decimal fraction digits. A ciphertext can
be transformed back to a real number by [9]

(cid:40)

Tσ,w(z) =

z/10σ,
(z

−

w)/10σ,

if 0
z
≤
if (w + 1)/2

≤

(w

−

1)/2,
z < w,

≤

(10)

where z = e mod w and mod denotes the modular operation.
The SingleMod encryption is both additively homomorphic
and multiplicatively homomorphic, indicating

n
(cid:88)
(

(cid:96)=1
n
(cid:89)

(

(cid:96)=1

(zr(cid:96), w, m)) =

(zr(cid:96), w, m)) =

E

E

n
(cid:88)

(cid:96)=1
n
(cid:89)

(cid:96)=1

zr(cid:96),

zr(cid:96),

(11a)

(11b)

D

D

D

where zr(cid:96) is the (cid:96)th plaintext message and
) denotes the
(
·
decryption process. In (11), summation and multiplication op-
erations are performed on the ciphertexts, and when decrypted
the output is the same as if those operations were performed on
the plaintexts. In [9], the fully homomorphic properties of the
chosen encryption scheme are mandated in designing a private
key computing algorithm. In contrast, our proposed paradigm
only requires additively homomorphic. The procedure of the
proposed paradigm is presented via Algorithm 1.
Remark 1: The proposed paradigm is still efﬁcacious in
special cases when c = 0 or d = 0. Take c = 0 for example,
the SO could select any random c with an appropriate dimen-
sion, replace (6a) with a set of random numbers satisfying
i = 1, . . . , n. (cid:4)
r1 + . . . + rn = 0, and send ric to agent i,
∀
Remark 2: Since all agents share the same private key,
the privacy could be compromised if agent i wiretaps the
ciphertexts sent from agent j. To overcome this issue, a
mandatory assumption was made in [9] requiring that no
agent can eavesdrop the communication links between other
participants. Algorithm 1 lifts this assumption by introducing
randomized ric and sid into the exchanged messages so that
an agent cannot extract the true decision variables of other
(cid:4)
agents even if it eavesdrops the communication.
Remark 3: Algorithm 1 is applicable to both private key
encryption scheme (e.g., SingleMod encryption scheme [21])
and public key encryption scheme (e.g., Benaloh cryptosystem
(cid:4)
[22] and Paillier encryption scheme [23]).

Fig. 1. Cryptographic information ﬂow between two agents and one SO.

E

E

((cid:80)n

((cid:80)n

i=1 Auixi + c) and

[21], Benaloh cryptosystem [22], and Paillier encryption [23].
Then the SO collects the encrypted messages from all the
agents and performs arithmetic operations on the ciphertexts
to obtain
i=1 Agixi + d). This
procedure will fully protect the private information xi, because
the SO is only dealing with ciphertext. As aforementioned,
(cid:80)n
i=1 Agixi + d are indispensable com-
ponents for the calculation of the subgradients in (5a) and (5b),
respectively, which would be used for primal and dual updates.
Then the SO sends
i=1 Agixi+d)
to the agents. Finally, the agents decrypt the ciphertexts, obtain
the plaintexts (cid:80)n
i=1 Agixi+d, and execute
both primal and dual updates under plaintexts.

i=1 Auixi + c and (cid:80)n

i=1 Auixi+c and (cid:80)n

i=1 Auixi+c) and

((cid:80)n

((cid:80)n

E

E

This novel paradigm is applicable to general primal-dual
based algorithms. For example, the regularized primal-dual
subgradient method (RPDS) [18] takes the form of
αi∇xiLv,(cid:15)(xk, λk)),
∇λLv,(cid:15)(xk, λk)),

xk+1
i = ΠXi (xk
λk+1 = ΠDv (λk + β

i −

(7b)

(7a)

(cid:107)

x

F

(x)+ v

2 +λTh(x)

Lv,(cid:15)(x, λ) =

where αi is the primal update step size, β is the dual update
2 is the
step size,
λ
2 (cid:107)
(cid:107)
regularized Lagrangian function with regulation parameters v
and (cid:15), k is the iteration index, and Π(cid:63)(
) denotes the Euclidean
·
projection. Though RPDS can guarantee the convergence,
regularization errors inevitably exist. As an improvement,
shrunken primal-dual subgradient (SPDS) developed in [19]
can effectively eliminate regularization errors and speed up
the convergence. The SPDS takes the form of

(cid:15)
2 (cid:107)

−

xk+1
i = ΠXi

λk+1 = ΠD

ΠD

(cid:18) 1
τx
(cid:18) 1
τλ

ΠXi

(cid:0)τxxk

i −
(cid:0)τλλk + β

(cid:19)

,

(8a)

αi∇xiL

(cid:0)xk, λk(cid:1)(cid:1)
(cid:19)

(cid:0)xk, λk(cid:1)(cid:1)

,

(8b)

∇λL

Agent 1Information heldDecryptionEncryptionUpdatingAgent 2Information heldDecryptionEncryptionInformation heldSORandomr1,r2,s1,s2,suchthatr1+r2=1,s1+s2=1Ciphertext processingr1cs1dr2cs2dE(A1uxk1+A2uxk2+c)xk1→xk+11λk→λk+1Updatingxk2→xk+12λk→λk+1Au1,Ag1,If1,wE(Au2xk2+r2c)E(Ag2xk2+s2d)E(Ag1xk1+Ag2xk2+d)Au2,Ag2,If2,wE(Au1xk1+r1c)E(Ag1xk1+s1d)E(Au1xk1+r1c)E(Ag1xk1+s1d)E(Au2xk2+r2c)E(Ag2xk2+s2d)Au1xk1+Au2xk2+cAg1xk1+Ag2xk2+dAu1xk1+Au2xk2+cAg1xk1+Ag2xk2+dE(Au1xk1+r1c)+E(Au2xk2+r2c)→E(Au1xk1+Au2xk2+c)E(Ag1xk1+s1d)+E(Ag2xk2+s2d)→E(Ag1xk1+Ag2xk2+d)c,d,Aui,Agi,i=1,2Algorithm 1 Cryptography-based privacy-preserving decen-
tralized optimization paradigm

1: All agents agree on a private key w.
2: Agents initialize primal and dual variables, tolerance (cid:15)0,
iteration counter k=0, and maximum iteration kmax.

i=1 rk

i =
i d to the ith agent.
i +
i c)

3: while
4:

(cid:15) > (cid:15)0 and k < kmax do

SO generates a set of parameters satisfying (cid:80)n

1 and (cid:80)n

i=1 sk

i =1, then sends rk

i c and sk

5:

6:

7:

8:

E

(Auixk

i + sk
i + sk

All agents adopt SingleMod encryption for Auixk
i + rk
i d using (9), then send
i d) to the SO.

rk
i c and Agixk
(Agixk
and

agents,
text using (11a)
((cid:80)n
i=1 Agixk
E
((cid:80)n
c) and

E
SO ﬁrstly collects the encrypted messages from all
then sums the received messages over cipher-
i + c) and
i=1 Auixk
i +

i +d). Then the SO sends
i=1 Agixk
Agent i receives and decrypts
i=1 Agixk

((cid:80)n
E
then converts the integer to real number by using (10).

i + c) and
E
i + d) from the SO with the private key w,

E
i=1 Auixk

i + d) to the ith agent.

i=1 Auixk
((cid:80)n

to obtain

((cid:80)n

((cid:80)n

E

E

Each agent i updates the primal variable xi by (8a)

and the dual variable λ by (8b) over plaintext.

Calculate the error (cid:15).
k = k + 1.

9:
10:
11: end while

C. Privacy Analysis

Due to the limit of the space, in this section, we concisely
present high-level analyses of the privacy preservation advan-
tages of the proposed paradigm. Systematic analysis and theo-
retical proofs will be provided in the journal extension of this
work. Particularly, three types of adversaries are considered:
• Honest-but-curious agents – an honest-but-curious agent
is only interested in solving the optimization problem,
but does not tamper with the algorithm. However, it may
observe the intermediate or input/output data to infer the
private information of other participating agents;

• External eavesdroppers – external eavesdroppers launch
attacks by wiretapping and intercepting exchanged mes-
sages between agents and the SO;

• SO – SO may attempt to infer the decision variables of
the agents by collecting the received data from the agents.
First, by introducing the random parameters ri and si
generated by the SO: (1) The public coefﬁcients c and d
are kept private to the SO, because only the randomized
ric and sid are transmitted to the agents; (2) The ith agent
passes
i + sid) to the SO. When
E
honest-but-curious agents wiretap those messages, the only
accessible information (from direct decryption) is Auixk
i + ric
and Agixk
i + sid, which are randomized by ric and sid.
Comparing with the private key encryption scheme in [9],
Algorithm 1 achieves enhanced security by protecting the
privacy of an agent from other honest-but-curious agents.

i + ric) and

(Auixk

(Agixk

E

mitted within the proposed framework are either encrypted or
randomized. Without the secret private key, external eaves-
droppers are not able to decrypt those messages. Moreover,
even when the private key is accidentally available to the exter-
nal eavesdroppers, owing to the extra randomization, the true
message still cannot be revealed. This security always holds
unless in an extreme case where the external eavesdroppers
wiretap the received data of all the agents.

Finally, though the SO could be a trustworthy participant,
the agents may be unwilling to share their private decision
variables to the SO. In the worst-case scenario, SO may
collect the agents’ data sequence to infer their true states and
intentions. In [9], due to the lack of a fully homomorphic
encryption scheme for integers that is both efﬁciently imple-
mentable and semantically secure, the agents’ privacy could
be compromised if the SO fully knows the update rule of x
and uses the collected data sequence to estimate the agents’
decision variables. This issue is resolved in Algorithm 1 as
the SO has no knowledge about the update rule of the agents.

III. SIMULATION RESULTS

In this section, we verify the correctness and efﬁciency of
the proposed privacy-preserving paradigm with a numerical
example and a trafﬁc congestion optimization problem. In both
examples, the encryption error is deﬁned by

n
(cid:88)

P k

e =

ˆxk
i −
(cid:107)

xk
i (cid:107)2,

(12)

i=1
i is the solution of Algorithm 1 and xk

where ˆxk
i is obtained by
solving the optimization problem without privacy preservation.
The optimality gap at the kth iteration is deﬁned as

Gk

e =

n
(cid:88)

i=1

ˆxk
i −

(cid:107)

x∗
i (cid:107)2,

(13)

where x∗
is the optimizer and the convergence tolerance is
i
set to be (cid:15)0=10−4. The shrunken parameters were empirically
chosen as τx=τλ=0.98 and the precision level was set as σ=3.
The private key is normally extremely large in real applications
for security purpose, e.g., in the magnitude of 22000, however,
for clear presentation, we chose the magnitude of 250.

A. A Numerical Example

Consider a case with two agents and one SO, and the

optimization problem can be written as

min
x
s.t.

(x)
F
xi ∈
Ag1x1 + Ag2x2 + d

[0, 1],

i = 1, 2,

0,

≤

(14)

where

(x) =

F

(x) denotes the objective function which is given by

F
1
2 (cid:107)
+ Ct1 + (Aq2x2)T(Aq2x2) + Al2x2 + Ct2.

2+(Aq1x1)T(Aq1x1)+Al1x1
2
(15)

Au1x1 + Au2x2 + c
(cid:107)

Algorithm 1 also effectively blocks information leakage to
external eavesdroppers. This is because all messages trans-

The coefﬁcients were chosen as Au1 = [ −1
[ 0 −2
0 −10 ], c=[ 1

1 −0.5 ], Au2 =
1 1 ], Al1=[ 1 1 ], Al2=[ 1 0 ],

1 1 ], Aq2=[ 0 1

1 ], Aq1=[ 1 0

0

1

1 −1 ], Ag2 = [ 0

−1 −1 ], and d = [ −1

Ct1=1, Ct2=0, Ag1 = [ 1 0
1 ].
Note that the coefﬁcients were carefully chosen to be represen-
tative, i.e., signed real numbers. The SO is trustworthy and has
access to the global coefﬁcients Au1, Au2 ,Ag1, Ag2, c, and
d. Each agent only has the global coefﬁcients that are related
to itself and the individual coefﬁcients included in
If i, i.e.,
.
agent 1 has access to Au1, Ag1, and
Aq1, Al1, Ct1}
{
The coefﬁcients assignment is given by Table I.

If 1 =

TABLE I
COEFFICIENTS ASSIGNMENT OF THE NUMERICAL EXAMPLE

Fig. 4. Secure information exchange between agents and the SO.

Participant name
SO
Agent 1
Agent 2

Coefﬁcients held
Au1, Au2, Ag1, Ag2, c, d
If 1, Au1, Ag1
If 2, Au2, Ag2

The true optimizers of (14) are x∗
1 = [0, 0.5750]T and
x∗
2 = [0.4814, 0.0564]T. We then solve (14) using Algo-
rithm 1. The primal step sizes were uniformly chosen as
10−3 and the dual step size was set to β = 2. Fig. 2
α = 5
presents that the primal and dual variables converged in about
600 iterations. Fig. 3 shows the optimality gap of the primal

×

Fig. 5. A transportation network with 9 links and 5 agents [18].

= 9 links is shown in Fig. 5. This example was used in [18]
L
to demonstrate the effectiveness of RPDS. Let πj be the jth
RL×N denote the link-route
link, x = [x1 · · ·
∈
incidence matrix, i.e., Aji = 1 if link j is on the path of agent
i, and Aji = 0 otherwise. Consequently, the transportation
congestion optimization problem can be formulated as

xN ]T, and A

Fig. 2. Convergence of the primal and dual variables.

variables and the encryption errors caused by real number and
integer transformation. The encryption errors are strictly less

min
x

s.t.

c(x) +

N
(cid:88)

i=1

fi(xi)

0,

x
≥
N
(cid:88)

i=1

Acol
i xi −

0.

b

≤

(16a)

(16b)

(16c)

Fig. 3. Encryption error and optimality gap (precision level σ = 3).

than 0.01 and therefore comply with the precision level σ = 3.
Fig. 4 shows the exchanged messages ¯xi =
(Auixi + ric)
between agents and the SO. Therefore, the encrypted and
randomized messages in Fig. 4 are useless for any adversaries
to extract any private information of the agents.

E

B. Trafﬁc Congestion Optimization

The trafﬁc congestion problem was formulated over a trans-
links. Suppose each
agents and
portation network with
agent i travels along a route with the transmission rate xi, then
the shared paths between all agents arise trafﬁc congestion. An
= 5 users and
example of a transportation network with

N

L

N

The coupled congestion cost in (16a) is deﬁned as

c(x) =

N
(cid:88)

(cid:88)

N
(cid:88)

xli

i=1

l∈L

q=1

xlq =

N
(cid:88)

(cid:107)

i=1

2
Acol
2,
i xi(cid:107)

(17)

where xli is the ﬂow of agent i on link l and Acol
ith column of A. The local cost of agent i is given by [24]

denotes the

i

fi(xi) =

ki log(1 + xi).

−

(18)

The global constraint (16c) limits the agents’ trafﬁc rates over
the network where b is the link capacity vector with bl denoting
the maximum trafﬁc capacity of link l. Table II concludes the
trafﬁc ﬂow in the network and ki in the cost function.

The link capacity vector was set as b = 19. The primal step
sizes were uniformly chosen as α = 10−3 and the dual step
size was set to β = 0.5. Fig. 6 shows that the primal and dual
variables converged in about 1000 iterations. Fig. 7 shows that
the proposed paradigm has converged to the optimal solutions
and the encryption errors are strictly smaller than 0.01 during

010020030040050060000.510100200300400500600Iteration0510150100200300400500600Iteration00.20.40.60.811.2010020030040050060000.5110-30100200300400500600051010160100200300400500600051010160100200300400500600051010160100200300400500600Iteration051010161234596785x4x1x2x3xTABLE II
TRAFFIC NETWORK AND AGENT DATA

Agent name
1
2
3
4
5

Links traversed
λ2, λ3, λ6
λ2, λ5, λ9
λ1, λ5, λ9
λ6, λ4, λ9
λ8, λ9

ki
10
0
10
10
10

all the iterations. Fig. 6 and Fig. 7 verify that the proposed
paradigm well inherits the feasibility and optimality of SPDS.

Fig. 6. Convergence of the primal and dual variables.

Fig. 7. Encryption error and optimality gap (precision level σ = 3).

IV. CONCLUSIONS
This paper developed a novel privacy-preserving decentral-
ized paradigm for a family of strongly coupled cooperative
optimization problems. The proposed paradigm is scalable to
the agent population size and achieves privacy preservation of
all the participants. The privacy of both the agents and the
SO was analyzed, and the privacy preservation is guaranteed
under a range of adversaries. The efﬁciency and efﬁcacy of the
proposed paradigm were veriﬁed via a numerical example and
a trafﬁc congestion optimization problem. The future research
directions of this paper would include (1) considering the case
where the SO is not a trustworthy party and does not possess
any knowledge of the optimization problem, (2) theoretically
analyzing the security of the proposed paradigm, and (3)
verifying the industrial values of the proposed paradigm. In
speciﬁc, an experimental platform with a cluster of micro con-
trollers could be designed to demonstrate ICPS applications.

REFERENCES

[1] S. Mao, Y. Tang, Z. Dong, K. Meng, Z. Y. Dong, and F. Qian, “A privacy
preserving distributed optimization algorithm for economic dispatch
over time-varying directed networks,” IEEE Transactions on Industrial
Informatics, vol. 17, no. 3, pp. 1689–1701, 2021.

[2] J. He, M. Bresler, M. Chiang, and J. Rexford, “Towards robust multi-
layer trafﬁc engineering: Optimization of congestion control and rout-
ing,” IEEE Journal on Selected Areas in Communications, vol. 25, no. 5,
pp. 868–880, 2007.

[3] R. Dobbe, O. Sondermeijer, D. Fridovich-Keil, D. Arnold, D. Callaway,
and C. Tomlin, “Toward distributed energy services: Decentralizing
optimal power ﬂow with machine learning,” IEEE Transactions on Smart
Grid, vol. 11, no. 2, pp. 1296–1306, 2019.

[4] T. Chen, A. Mokhtari, X. Wang, A. Ribeiro, and G. B. Giannakis,
“Stochastic averaging for constrained optimization with application to
online resource allocation,” IEEE Transactions on Signal Processing,
vol. 65, no. 12, pp. 3078–3093, 2017.

[5] Q. Peng and S. H. Low, “Distributed algorithm for optimal power ﬂow
on a radial network,” in Proceedings of the IEEE Conference on Decision
and Control, Los Angeles, CA, USA, Dec. 15-17 2014, pp. 167–172.

[6] S. Boyd, N. Parikh, and E. Chu, Distributed Optimization and Statistical
Learning via the Alternating Direction Method of Multipliers. Now
Publishers Inc, 2011.

[7] J. Rivera, C. Goebel, and H.-A. Jacobsen, “Distributed convex optimiza-
tion for electric vehicle aggregators,” IEEE Transactions on Smart Grid,
vol. 8, no. 4, pp. 1852–1863, 2016.

[8] C. Zhang and Y. Wang, “Enabling privacy-preservation in decentralized
optimization,” IEEE Transactions on Control of Network Systems, vol. 6,
no. 2, pp. 679–689, 2018.

[9] Y. Lu and M. Zhu, “Privacy preserving distributed optimization using
homomorphic encryption,” Automatica, vol. 96, pp. 314–325, 2018.
[10] C. Dwork, F. McSherry, K. Nissim, and A. Smith, “Calibrating noise
to sensitivity in private data analysis,” in Proceedings of the Theory of
Cryptography Conference, New York, NY, USA, Mar. 4-7 2006, pp.
265–284.

[11] S. Han, U. Topcu, and G. J. Pappas, “Differentially private distributed
constrained optimization,” IEEE Transactions on Automatic Control,
vol. 62, no. 1, pp. 50–64, 2016.

[12] T. Zhang and Q. Zhu, “Dynamic differential privacy for ADMM-based
distributed classiﬁcation learning,” IEEE Transactions on Information
Forensics and Security, vol. 12, no. 1, pp. 172–187, 2016.

[13] E. Nozari, P. Tallapragada, and J. Cort´es, “Differentially private dis-
tributed convex optimization via functional perturbation,” IEEE Trans-
actions on Control of Network Systems, vol. 5, no. 1, pp. 395–408, 2016.
[14] S. Gade and N. H. Vaidya, “Privacy-preserving distributed learning via
obfuscated stochastic gradients,” in Proceedings of the IEEE Conference
on Decision and Control, Miami Beach, FL, USA, Dec. 17-19 2018, pp.
184–191.

[15] T. W. Mak, F. Fioretto, and P. Van Hentenryck, “Privacy-preserving
obfuscation for distributed power systems,” Electric Power Systems
Research, vol. 189, p. 106718, 2020.

[16] R. L. Rivest, L. Adleman, and M. L. Dertouzos, “On data banks and
privacy homomorphisms,” Foundations of Secure Computation, vol. 4,
no. 11, pp. 169–180, 1978.

[17] C. Zhang, M. Ahmad, and Y. Wang, “ADMM based privacy-preserving
decentralized optimization,” IEEE Transactions on Information Foren-
sics and Security, vol. 14, no. 3, pp. 565–580, 2018.

[18] J. Koshal, A. Nedi´c, and U. V. Shanbhag, “Multiuser optimization: Dis-
tributed algorithms and error analysis,” SIAM Journal on Optimization,
vol. 21, no. 3, pp. 1046–1081, 2011.

[19] H. Liu, Z. Hu, Y. Song, and J. Lin, “Decentralized vehicle-to-grid control
for primary frequency regulation considering charging demands,” IEEE
Transactions on Power Systems, vol. 28, no. 3, pp. 3480–3489, 2013.

[20] S. Roy, M. Xue, and S. K. Das, “Security and discoverability of spread
dynamics in cyber-physical networks,” IEEE Transactions on Parallel
and Distributed Systems, vol. 23, no. 9, pp. 1694–1707, 2012.

[21] P. Ryan, D. S. Phatak, Q. Tang, W. D. Smith, A. T. Sherman, and
K. Kalpakis, “DoubleMod and SingleMod: Simple randomized secret-
key encryption with bounded homomorphicity,” IACR Cryptology ePrint
Archive, 2014.

[22] J. D. Cohen and M. J. Fischer, A Robust and Veriﬁable Cryptographically
Secure Election Scheme. Yale University. Department of Computer
Science, 1985.

[23] P. Paillier, “Public-key cryptosystems based on composite degree resid-
uosity classes,” in Proceedings of the International Conference on the
Theory and Applications of Cryptographic Techniques, Prague, Czech
Republic, May. 2-6 1999, pp. 223–238.

[24] F. P. Kelly, A. K. Maulloo, and D. K. Tan, “Rate control for commu-
nication networks: Shadow prices, proportional fairness and stability,”
Journal of the Operational Research Society, vol. 49, no. 3, pp. 237–252,
1998.

02004006008001000120000.51020040060080010001200Iteration0102030020040060080010001200Iteration00.20.40.60.811.21.41.6020040060080010001200012310-3