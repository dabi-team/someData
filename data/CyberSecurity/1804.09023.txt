Automated Big Trafﬁc Analytics for Cyber Security

Yuantian Miao, Zichan Ruan, Lei Pan, Member, IEEE, Yu Wang, Member, IEEE, Jun Zhang, Member, IEEE,
and Yang Xiang, Senior Member, IEEE

1

8
1
0
2

r
p
A
4
2

]

R
C
.
s
c
[

1
v
3
2
0
9
0
.
4
0
8
1
:
v
i
X
r
a

Abstract—Network trafﬁc analytics technology is a cornerstone
for cyber security systems. We demonstrate its use through
three popular and contemporary cyber security applications
in intrusion detection, malware analysis and botnet detection.
However, automated trafﬁc analytics faces the challenges raised
by big trafﬁc data. In terms of big data’s three characteristics
— volume, variety and velocity, we review three state of the
art techniques to mitigate the key challenges including real-time
trafﬁc classiﬁcation, unknown trafﬁc classiﬁcation, and efﬁciency
of classiﬁers. The new techniques using statistical
features,
unknown discovery and correlation analytics show promising
potentials to deal with big trafﬁc data. Readers are encouraged
to devote to improving the performance and practicability of
automatic trafﬁc analytic in cyber security.

Index Terms—Cyber Security, Big Data, Network Trafﬁc

Classiﬁcation.

I. INTRODUCTION

A S an increasingly huge amount of important information

about users are delivered and stored on the Internet,
cyber security becomes a primary concern. Protecting network
from various attacks is the paramount task, where trafﬁc data
analysis is a key technology [1]. Moreover, trafﬁc classiﬁcation
applying data analytics signiﬁcantly improves the effectiveness
and efﬁciency of the process, as well as enables us to detect
abnormal trafﬁc patterns.

Some popular applications of cyber security involved with
trafﬁc data analysis include intrusion detection, malware anal-
ysis and botnet detection. The automatic techniques based on
machine learning algorithms are proposed for these applica-
tions. To be speciﬁc, intrusion detection system can catch the
abnormal trafﬁc including peer-to-peer (P2P) malicious trafﬁc,
denial-of-service (DoS) attack trafﬁc and spams; malware can
steal user information and cause harms to users. In addition,
mobile malware spread widely [2]. To detect such trafﬁcs,
malware behaviors are analyzed and this knowledge promotes
trafﬁc classiﬁcation in identifying the corresponding malware
[2]; botnets consist of many Internet hosts controlled and
manipulated by botmakers via the infection of malware [3]. As
for this bot detection, the list of command and control (C&C)
domain is used as a reference among bots identiﬁcation. As a
fundamental technique among these attack detections, trafﬁc
classiﬁcation is applied widely in recognizing various network
trafﬁc and singling out the abnormal trafﬁc.

Y. Miao, J. Zhang, and Y. Xiang are with the School of Software and Electri-
cal Engineering, Swinburne University of Technology, John Street, Hawthorn,
Victoria 3122, Australia. E-mail: ({ymiao, junzhang, yxiang}@swin.edu.au)
Information Technol-
ogy, Deakin University, Geelong, VIC 3220, Australia. E-mail: ({zichanr,
l.pan}@deakin.edu.au)

Z. Ruan and L. Pan are with the School of

Y. Wang is with School of Computer Science, Guangzhou University, 230
Guangzhou University City Outer Ring Road, Guangzhou 510006, China.
Email: yuwang@gzhu.edu.cn

Fig. 1. Trafﬁc analytics for cyber security

Considering the massive data existed in network trafﬁc,
the primary problem of trafﬁc classiﬁcation is raised by big
data which can be illustrated with three characteristics —
volume, variety, and velocity [4], [2]. Trafﬁc classiﬁcation is
facing three key challenges, which respectively corresponds
to real-time classiﬁcation, unknown trafﬁc classiﬁcation, and
the efﬁciency of automatic classiﬁcation. In terms of real-time
classiﬁcation, statistical-based classiﬁcation is more suitable
than the port-based and payload-based approaches. Statistical-
based classiﬁcation considers the ﬂow trafﬁc as the unit object
in analysis, whilst the other two methods build the classiﬁer
analyzing the packet information [1]. As for the unknown
trafﬁc problem, both supervised learning and unsupervised
learning cannot solve the problem alone [5]. Therefore, Zhang
et al. [5] proposed a robust network trafﬁc classiﬁcation
with the combination of unsupervised learning and supervised
learning to resolve this problem. Lastly correlation technique
is often used to improve the classiﬁcation performance [6], [7].
In summary, the core concepts mentioned above is depicted
in Figure 1 with the relationship among data sources, core
technologies and cyber security challenges.

II. CYBER SECURITY APPLICATIONS WITH TRAFFIC
ANALYTICS

Most cyber security systems rely on the deep understanding
of network trafﬁc characteristics. In this section, we illustrate
three typical applications of cyber security involving trafﬁc

 
 
 
 
 
 
analytics including intrusion detection, malware analysis, and
botnet detection.

A. Intrusion detection

An intrusion detection system (IDS) aims at recognizing
malicious trafﬁc from normal trafﬁc. To achieve this goal, IDS
scans current trafﬁc before rerouting. Because of the hetero-
geneous nature of the attacks, the malicious trafﬁc is often
embedded in botnet trafﬁc, DoS attack trafﬁc, spam trafﬁc, and
so on. The accuracy of detecting such malicious trafﬁc is often
low. In general, the target information of inspecting trafﬁc
includes IP addresses, ports, and payload data. By analyzing
the information, abnormal trafﬁc data can be discovered by
an IDS. Then trafﬁc classiﬁcation is applied to separate these
abnormal trafﬁc among existing trafﬁc. Accordingly, alerts will
be sent by the IDS.

We use an example to show how trafﬁc analytics is used in
intrusion detection. Ling et al. [8] developed TorWard as an
intrusion detection system for Tor. Tor is the overlay network
often used by attackers deploying botnet C&C servers and/or
sending spams because Tor encrypts the trafﬁc and protects
the attacker’s privacy. Speciﬁcally, Tor enforces source routing
by choosing several Tor routers to establish an anonymous
route along with the selected Tor routers. There is an exit
router where all the routes pass through in the end. This exit
router can be considered as a “proxy" and contacts with the
destination directly. In order to protect the network system
through blocking possible harmful
trafﬁc, IP address and
opened port can be conﬁgured in Tor manually according to
speciﬁed policies. Unfortunately, It is a hard job for most
Tor router administrators to know everything and everyone
in the Tor network. Therefore, TorWard is proposed by Ling
et al. [8] as an automated detection system in processing Tor
intrusion discovery, classiﬁcation and reaction. The outbound
trafﬁc of Tor can be captured at the exit router. Before the
trafﬁc rerouted into Tor, an IDS is positioned on the NAT
gateway. Ling et al. revised the Tor source code and maintain
rules of ﬁrewall dynamically in order to except the hinder from
non-Tor trafﬁc.

Additionally, Ling et al. [8] found that nearly 10% Tor trafﬁc
are alerted by IDS because of its malicious trafﬁc generated by
botnet, DoS attack trafﬁc, spams, and so on. Moreover, they
also designed a defense function to limit the usage of Tor by
blocking intrusion trafﬁc. Such an IDS checks the suspected
source IP and ports, and if this trafﬁc instance is classiﬁed as
intrusion, then the tear-down command is expected to be sent
to the Tor exit routers. And with extensive rule setting, IDS
can block numerous intrusion trafﬁc. Furthermore, a signaling-
based method named dual-tone multi-frequency is suggested
by Ling et al. [8] to search the correlated botnet trafﬁc from
exit routers. They analyzed the intrusion trafﬁc in Tor and
summarized a category with possible IP of C&C servers,
well-known malware trafﬁc, doubtful DNS query, spams and
suspicious IRC trafﬁc. Speciﬁc trafﬁc classiﬁcation methods
are used on two types of signature-based IDS — Suricata and
Snort [8]. Suricata is conﬁgured to store alert messages in
binary format, and Snort employs Unix domain sockets. Tor

2

trafﬁc can be generally grouped as two trafﬁc types: inbound
and outbound. Because the characteristic of inbound trafﬁc
sets captured by IDS transmitting between endpoints, trafﬁc
classiﬁcation technique equipped with classifying encrypted
data is needed. With a powerful trafﬁc classiﬁcation, IDS
can be effective and reliable for automatically detecting the
potential malicious trafﬁc.

B. Malware analysis

The number and the level of technological sophistication
of malicious software are increasing remarkably, as a con-
sequence of the outstanding involvement of smartphone tech-
nologies. Thus, malware analysis is an important task in cyber
security. Alerts reported by malware detection system related
to malicious trafﬁc include unclassiﬁed, misc-attack, Trojan-
activity, not-suspicious, and misc-activity [8]. A well-known
example of mobile malware in iOS is XcodeGhost, which
was reported as the reason of numeric user privacy-leakage
in the late 2015, drew the attention of the society and aware
people the importance of cyber security [2]. Xcode is a devel-
opment toolkit for iOS applications. However, XcodeGhost,
a malicious version of Xcode, was uploaded to a Chinese
shared cloud service Baidu cloud. Application developers
downloaded the XcodeGhost without being aware of its danger,
developed the infected applications and published them in
Apple’s App Store. Anyone who downloads and starts those
infected applications in their devices could be a victim to the
privacy-leakage.

Network trafﬁc analytics is an important tool to identify
infected applications in a large scale. Let us see how trafﬁc
analysis is used to study the behavior of XcodeGost. There are
two mainstream methods to study the threat of XcodeGhost,
the ﬁrst method is from the view of source code of XcodeGhost
to ﬁnd the detailed information of the malware mechanism,
the other is scanning the source code of iPhone Application
(IPA) packages to detect the infected applications. However,
both methods fail to provide sufﬁcient information about the
XcodeGhost such as the number and ratio of infected devices,
the time and network trafﬁc ﬂow volume characteristics of
XcodeGhost-related HTTP requests and the infected applica-
tions [2]. Combining the ﬁngerprint of applications running
online and its web-knowledge, a novel method was built up
to identify the infected applications instead of scanning the
source code of IPA. This mechanism consists of 5 steps
— 1) extract ﬁngerprints from those applications, 2) collect
web-knowledge by analyzing extracted information, 3) merge
data and identify applications, 4) check those applications
manually, and 5) compare with the identiﬁcation results.
Massive network trafﬁc were analyzed to gain ﬂow statistical
characteristic of XcodeGhost, which may be useful in grasping
the operating mechanism of XcodeGhost and understanding
other malware like XcodeGhost. To classify HTTP trafﬁc with
speciﬁc applications, the characteristics of HTTP headers are
important for analysis, however, the extracted ﬁngerprint infor-
mation is not always clear or complete. The unique identiﬁer
of an application associated with advertisement trafﬁc and
integrated with multiple HTTP requests is needed to extract

the ﬁngerprint information and identify the full details of an
application.

To fully investigate XcodeGhost, Gui et al. [2] proposed a
novel method by examining the trafﬁc statistical characteristics
of applications. The researchers explored a large volume of
real-world network trafﬁc and found that 930 million out of
1,550 million iPhone devices were infected within 232 days,
which means more than 60% of devices potentially leaked the
privacy information. The results were critical: 842 applications
were identiﬁed as XCodeGhost infected by the new proposed
method in trafﬁc network, some of them are famous and popu-
lar applications throughout China like Wechat, railway 12306,
didi taxi, carrot fantasy and so on [2]. The results suggested
that those infected applications send privacy information of
users to a unique web server. Such behavior could not be
detected by using traditional detection methods because the
privacy leaking messages are hidden inside many legitimate
HTTP requests.

C. Botnet detection

Botnets enable attackers to send spams, launch distributed
denial-of-service (DDoS), run brute-force password cracking,
steal private information, and hide the origin of cyber attacks
[3]. Moreover,
the malware trafﬁc can be spread rapidly
through this platform. Hence, botnet detection is an important
part in cyber security. According to the structure of botnets,
there are two categories —- P2P botnet and centralized botnet
[8]. In a P2P botnet, the botmaster can control each bot with
distributed commands sent from peers; in a centralized botnet,
the centralized C&C architecture is formed with protocols
like IRC and HTTP. Comparing to the centralized botnet,
P2P botnet is relatively feasible regardless of its complicated
structure and costly management. From the point of view of
user experience, centralized botnet is in extensive usage due
to its simplistic structure, availability of source codes, and
reusable codes.

Network trafﬁc analytics plays an important role in the
discovery and detection of botnets. The typical approach to
detect bots and ﬁlter botnet trafﬁc is to maintain a blacklist
of discovered C&C domains. However, the efﬁciency is poor
because the blacklist is manually updated. Moreover, experi-
enced botmasters often use robust P2P-based C&C structures
with domain generation algorithms to evade the detection by
blacklisting and to increase the reliability of the botnet. That
is, the bots search for working C&C servers by periodically
generating a set of pseudo-random domain names and resolv-
ing the generated domain names to IP addresses through DNS
queries. Therefore, these botnets can still survive even after
some C&C servers are detected and blocked.

Antonakakis et al. [9] show that

the random domains
generated by botmasters can be detected by analyzing DNS
trafﬁc. The key idea is that most random domains generated
by domain generation algorithms and queried by the bots
would receive Non-Existent Domain responses. Moreover,
since the bots in the same campaign are using identical
domain generation methods, they are very likely generating
the same set of failed DNS queries. To take advantage of this

3

Fig. 2. The statistical-based analytics mechanism is presented in this ﬁgure.
Flows are used as input of machine learning classiﬁers, after statistical pro-
cessing is applied to the collected packets. The output shows the categorization
results predicted by machine learning algorithms.

characteristic, Antonakakis et al. propose a trafﬁc analytics
based technique that combines supervised and unsupervised
learning algorithms. The unsupervised algorithm is applied
ﬁrstly to separate these random domains into several clusters
according to the similarity of their make-ups of domain names.
Then, supervised learning takes the input of the whole data set
together with some labels of known domains. At last, a new
unknown domain of bot can be detected if no label is assigned
to a cluster.

III. KEY CHALLENGES OF BIG TRAFFIC ANALYTICS

As the previous section revealed,

trafﬁc analytics is a
primary foundation for dealing with emerging issues in cyber
security. This section lists the key components of trafﬁc
analytics and the associated challenges in the context of big
data. We elaborate trafﬁc classiﬁcation in three key facets —
real time, robustness and efﬁciency corresponding to the three
characteristics of big data featured in terms of volume, variety
and velocity [4].

A. Real time classiﬁcation by using statistical features

Statistical feature based trafﬁc classiﬁcation is as useful
as port-based and payload-based classiﬁcations. Because the
network trafﬁc data grow exponentially with the rapid de-
ployment of high bandwidth demanding services, the port-
based and payload-based classiﬁcations failed to meet the
big data requirements [10], [1], [11]. Speciﬁcally, the port-
based classiﬁcation identiﬁes the applications based on the
port number extracted from the packets according to the IANA
standards [1]. Because the port number can be easily modiﬁed
or fabricated, the accuracy of the port-based classiﬁcation is
too low to fulﬁll the requirements of cyber security applica-
tions. Conversely, the payload-based classiﬁcation recognizes

the protocol signature by inspecting the payload of packets.
Comparing with the port-based method, the payload-based
method produces more accurate results but at a signiﬁcantly
higher computational cost. The statistical-based classiﬁcation
balances accuracy and cost by analyzing and extracting statisti-
cal characteristics from traffﬁc ﬂows generated by applications
without inspecting the contents of individual packets. Because
of this holistic view, the statistical-based classiﬁcation can be
used to analyze encrypted trafﬁc widely used in Virtual Private
Networks, WiFi, Tor networks and so on.

Machine learning techniques are vital for the statistical-
based trafﬁc classiﬁcation. The trafﬁc can be processed by
supervised learning, also known as classiﬁcation, or by unsu-
pervised learning, also known as clustering. Figure 2 depicts
the work ﬂow — the collected packets are ﬁrstly grouped
into trafﬁc ﬂows before certain statistical features such as
packet size and arrival time can be obtained and later selected;
the data in the feature space are then fed to the machine
learning algorithm. Due to the nature of network applications,
the training data fed to the machine learning algorithm can
be inbalanced and/or polluted. An inbalanced data set often
consists of non-uniformly distributed packets of different
kinds; and a polluted data set often contains multiple wrongly
labeled samples. The labeled data are used to train the machine
learning algorithms, after a certain amount of time, predictive
models will be built up and used as classiﬁers or predictors to
classify testing data.

Generally, network trafﬁc contains statistical features such
as packet size, inter-arrival time, ﬂow idle time, distribution of
duration time, and so on, according to Nguyen and Armitage
[1]. These features can be used to successfully differentiate
many Internet applications. If these ﬂow statistical properties
are constructed as inputs, many machine learning algorithms
can handle the classiﬁcation of real time trafﬁc ﬂow directly
out of the box. For example, naive Bayes and decision tree
can build up a model for classiﬁcation and prediction. More-
over, k-Nearest Neighbor algorithm is another statistical-based
classiﬁcation method.

Nevertheless, the statistical-based classiﬁcation is not per-
fect. There are primarily three limitations. Firstly, it is difﬁcult
and expensive to obtain a balanced training data set with the
uniformly distributed trafﬁc classes from real-world networks.
With an unbalanced data set, the classes with a dominantly
large number of instances are trained more accurately than
the rest. The implication can be problematic when we try
to identify a small portion of malicious packets from a huge
number of normal packets. According to [12], such adversary
information decreases the effectiveness of machine learning
remarkably. Secondly, the statistical data that we collected and
processed as training set might not be representative during
the deployment period. For instance, data collected from
one network may not be applicable else where. Thirdly, the
presence of unknown classes also affects the machine learning
results. An unknown class is a trafﬁc class that existed in the
testing data set but is not included or recognized in the training
data set. Therefore, there could be error in classiﬁcation as if
a new class data occurs in the testing set.

4

Fig. 3. The ﬁgure reveals the methods towards the challenge of unknown
attacks when processing classiﬁcation. Mixed training data is used as input
of unknown discovery, which is an initial stage to label known classes,
consequently, the unknown classes are outcropped. Predict the testing data
with classiﬁers that derived from the clusters, and apply system update stage
if necessary.

B. Robust classiﬁcation by recognizing unknown classes

Despite of the challenges in real

time trafﬁc classiﬁca-
tion, exploitation of zero-day vulnerabilities greatly affects
the accuracy of trafﬁc classiﬁcation [5]. The reason is that
statistical-based trafﬁc classiﬁcation relies on machine learning
algorithms. These classiﬁers cannot classify an unknown trafﬁc
which is caused by the exploitation of the zero-day vulnerabili-
ties. To recognize such attacks, our previous work [5] proposed
a Robust network Trafﬁc Classiﬁcation (RTC) in dealing
with unknown classes that are absent from training data by
integrating supervised and unsupervised learning methods.
There are three processes in constructing RTC including
unknown discovery, classiﬁcation with unknown class, and
system update.

RTC has powerful classiﬁcation ability in handling zero-
day trafﬁc’s discrimination together with the trafﬁc that the
classiﬁers are familiar with. Figure 3 shows the mechanism of
RTC. In the ﬁrst stage of RTC, unknown trafﬁc are detected
automatically prior to classiﬁcation. The unlabeled samples
are collected from a speciﬁc network obtaining the mixture of
predeﬁned trafﬁc and new trafﬁc. Then a two-step method is
employed in distinguishing zero-day trafﬁc from others. That
is, an unsupervised learning method, k-means, is used to sep-
arate the mixture data into several clusters, while the labeled
training instances help to identify the unknown trafﬁc groups.
And the zero-day class is captured in the unknown clusters
with no or very few labeled instances assigned. Additionally,
there may be more than one unknown application, thus the
second step is to group them into a temporary super set for all
unknown classes. After the processed data are all labeled, RTC
starts the classiﬁcation stage by applying supervised learning
algorithms with some heuristics to aggregate the prediction

5

An example is provided by Ma et al. [6] where correlation
technique combined with the protocol model derived during
the trafﬁc classiﬁcation. In their work, the correlated infor-
mation of several unlabeled trafﬁc ﬂows is the same protocol
described in their packets according to the same distribution of
one protocol. Since not all ﬂows in one application share one
protocol, their correlation is partially correlated. As a result,
they successfully classiﬁed the network ﬂows automatically
with only protocols provided. Another utilization of correlation
information is based on the similar user behaviors [3].

Correlation technique not only can classify trafﬁc data but
also can improve clustering results by increasing each cluster’s
purity. In Wang et al. [7], correlated information are presented
the ﬂows
as equivalence set constraints which can reveal
with same protocols in application-layer and sharing for. As
shown in Figure 4, they used the unlabeled statistical features
extracted from the raw packets in unsupervised clustering
the
with correlation analysis applied in. In other words,
ﬂow correlation information was used as constraints when
clustering those data and helped increasing the purity of
each clusters. Wang et al. named the integrated method as
Set-Based Constrained K-Means. Herein, the equivalence set
are allocated with 3-tuple heuristics among the ﬁve features
described for each ﬂow including source IP address, source
port number, destination IP address, destination port number,
and the protocol. As a result,
the classiﬁers after cluster
identiﬁcation combined with correlation analysis perform sig-
niﬁcantly better than those ones without correlation applied in
terms of accuracy and computation time.

From Zhang et al. [13], correlation method also makes pos-
itive effects on supervised classiﬁcation. The speciﬁc method
they applied is named as Bag of Flow (BoF), which means
the correlated trafﬁc ﬂows from one application are gener-
ated together as a bag. Speciﬁcally, three-tuple heuristic is
considered in a short period of time, that is, destination IP
address, destination port number and the protocol in each
ﬂow trafﬁc. Incorporating with supervised learning method
they used, Nearest Neighbor classiﬁer, several bags instead of
numerous trafﬁc ﬂows are presented as input training data set.
Figure 4 presents that the correlation technique contributes to
their prediction phase, by combining the predicted results that
the trained classiﬁer get and the ﬂow correlation analysis with
vote mechanism. That is, the majority of predicted results for
a set of network trafﬁc data in one same bag, will be the
ﬁnal classiﬁcation results of all those data. A probabilistic
framework is built for BoF model
to reduce the average
classiﬁcation error in each bag’s prediction according to the
Bayesian decision theory.

In terms of the challenge of correlation technique, we
can conclude a few points. It still remains an open question
about the way of identifying the new correlation based on
the knowledge of trafﬁc domain. The second problem is on
how to correlate information among trafﬁc data collected from
different sources [3], which the data fusion problem should be
further investigated.

Fig. 4. The ﬁgure presents the mechanism of correlation analysis. Correlation
models are proposed and merged in the machine learning algorithm after the
correlation analysis of the ﬂows. In the unsupervised clustering, the correlation
model is applied as constraints when clustering and helps to improve the
purity of each cluster. As for the supervised classiﬁcation, application classes
is better predicted after the correlation analysis combined with classiﬁcation
results.

results.

In order to build an intelligent system with classifying class
in ﬁne-grained level, the trafﬁc classiﬁcation system should be
updated when necessary. Speciﬁcally, the classiﬁer should be
equipped with the knowledge of unknown classes detected in
the ﬁrst stage instead of putting all unfamiliar trafﬁc into a
general category. In this third stage, k-means is applied again
to cluster the previous data set. Then, several ﬂows of each
cluster are selected and inspected manually. If all the samples
in one cluster are detected as unknown trafﬁc, all ﬂows in this
cluster are acted as training inputs for classiﬁer and a new
class is labeled. After all new classes are found, they will be
appended to previous known class set. Thus, the training data
set is updated, whilst classiﬁers keep learning more unknown
classes.

Though RTC can recognize unknown classes,

there are
still rooms for improvement. In terms of zero-day attacks,
ﬂow correlation technique can be used together with RTC to
increase the accuracy rate. One of the assumptions of RTC
is that the distribution of trafﬁc classes is static, which is not
always true in the real-world networks. In addition, it is also a
problem to accurately and precisely deﬁne an unknown class,
especially when there are numerous new classes. Moreover, the
cost of classiﬁcation signiﬁcantly increases with the growing
size of training data set, whereas the accuracy rate will
decrease rapidly with an increasing number of classes.

C. Efﬁcient classiﬁcation by using correlation

Correlation technique is applied in trafﬁc classiﬁcation to
improve the classiﬁcation efﬁciency without
incurring too
much processing time. Correlation technique can help us to
identify the trafﬁc with little or minimal prior knowledge.

6

TABLE I
COMPARISON OF PAPER WORKS RELATED TO ABOVE THREE PARTS

Work

Real-Time
(volume)

Robustness
(variety)

Correlation
(velocity)

Moore and Zuev [10]

Flow statistics based

Do not consider

Do not consider

Zhang et al. [5]

Flow statistics based

Handle Zero-day trafﬁc
Unknown discovery

Correlated information:
3-tuple heuristic
(applied in BoF)

Trafﬁc Classiﬁer
(machine learning)

Naive Bayes Classiﬁer
(supervised learning)

Random forest
K-means clustering
(compound learning)

Product distributions

Ma et al. [6]

Payload based

Do not consider

Wang et al. [7]

Flow statistics based

Do not consider

Zhang et al. [13]

Flow statistics based

Do not consider

Correlated Information: Markov Processes
packet content

Common Substring Graphs
(unsupervised learning)

Correlated Information:
3-tuple heuristic

Correlated Information:
3-tuple heuristic
(applied in BoF)

Equivalence set constraints applied
with K-Means cluster
(semi-supervised learning)

Three NN classiﬁers
combined with BoF:
AVG-NN, MIN-NN & MVT-NN
(semi-supervised learning)

D. Comparison of Recent Work

As Table I illustrated, among these ﬁve key works men-
tioned above, four applied ﬂow statistical-based trafﬁc classi-
ﬁcation. Most of works including Zhang et al. [5] and Wang
et al. [7] employed semi-supervised learning among trafﬁc
ﬂow classiﬁcation to obtain the satisfactory performance. In
addition, the popular correlated information that they found
is 3-tuple heuristics: destination IP, destination port, and
protocol. According to Ma et al. [6], packet contents can
also be considered as correlation based on payload-based
trafﬁc classiﬁcation. And no matter which the correlation
technique is combined with supervised learning algorithms
[5] or unsupervised learning algorithms [7], they all improved
accuracy rate for trafﬁc classiﬁcation comparing with using
machining learning algorithm alone. Additionally, to solve the
unknown class problem, the robust trafﬁc classiﬁcation should
combine with unsupervised learning and supervised learning
with as little manual intervention as possible. Wherein the
unsupervised learning can cluster ﬂows of the same class to
obtain known and unknown classes, and supervised learning
can classify ﬂows with unknown classes labeled manually. It
would be ideal to further reduce the level and the frequency
and intensity of the manual intervention.

IV. DISCUSSION ON FUTURE WORK

Although the state-of-art technologies attain cyber security
to some extend, there are challenges. Such challenges will
require more attention with respect to cyber security problems.
As for the robutness technique, RTC mechanism assumes
that the labeling results that human expert is of high accuracy,
which is problematic due to the availability of the experts and
the unavoidable human errors. Then classiﬁers are suggested
to be retrained for a long period of time. Therefore, the system
updated is triggered not only when new classes should be
equipped but also when previous known classes are learned

again with new set of data training. And the costs in both
time and money will increase when labors are involved with
examining many unknown classes. To enhance the level of
efﬁciency of RTC, sub-bag of ﬂow is proposed by Zhang et
al. [5]. Speciﬁcally, instead of using only one bag consisting
of correlated ﬂows, several sub-bags are constructed inside of
one bag. And the ﬂows in each sub-bag are collected from the
same user and are sharing with 4-tuple rather than 3-tuple in
BoF by adding an extra protocol-related feature.

In addition, the correlations among ﬂows remain mostly
underused, though some of correlated information had already
identiﬁed, like 5-tuple feature among trafﬁc ﬂow including
source IP, destination IP, source port, destination port and
protocol [13]. For example, the attacker’s behavior that is
analyzed and reﬂected on trafﬁc ﬂow data can be generalized
and classiﬁed as a key feature in detecting malicious trafﬁc.
And this key feature can also be regarded as a piece of
correlated information.

The unbalanced data source may affect the accuracy of
the classiﬁcation results. For instance, the quantity of class
is over
BitTorrent among one collected training data set
10,000 which is 1,000 times larger than class RTSP. Hence,
many classiﬁers can easily extract the characteristics of class
BitTorrent with strong support. Conversely, the 10 RTSP ﬂows
are too few to provide sufﬁcient information for classiﬁers.
As a result, the accuracy in classiﬁcation of class RTSP will
be far lower than the accuracy of class BitTorrent performed
by the same classiﬁer. Moreover, since the malicious and
offensive applications almost always maintain minority, the
big data with unbalanced classes structure makes the trafﬁc
classiﬁcation methods difﬁcult
trafﬁc
with a small amount among massive network trafﬁc. To
signiﬁcantly improve the performance of classiﬁer, we may
have to introduce a preprocessing step when the portion of
each class can be controlled manually before ﬁnalizing training

to identify abnormal

7

[12] B. Biggio, B. Nelson, and P. Laskov, “Poisoning attacks against support
vector machines,” in Proceedings of the 29th International Conference
on Machine Learning, J. Langford and J. Pineau, Eds., 2012, pp. 1–8.
[13] J. Zhang, Y. Xiang, Y. Wang, W. Zhou, Y. Xiang, and Y. Guan, “Network
trafﬁc classiﬁcation using correlation information,” IEEE Transactions
on Parallel and Distributed Systems, vol. 24, no. 1, pp. 104–117, 2013.

data set.

V. CONCLUSION

In this paper, we started with introducing trafﬁc analytics
for cyber security applications from three aspects — intrusion
detection, malware analysis, and botnet detection. In general,
all detection applications employ various trafﬁc classiﬁca-
tion to distinguish the abnormal trafﬁc from other normal
trafﬁcs identiﬁed from prior knowledge. To enhance the cy-
ber security, some techniques are summarized with detailed
description. Different from two packet-based classiﬁcations,
ﬂow statistical-based trafﬁc classiﬁcation is a new important
tool for current big data analysis. Flow statistical-based trafﬁc
classiﬁcation not only can tackle the problem of various and
changeable packets, but also is able to handle the encrypted
trafﬁc ﬂow which is popular in use of contemporary and
complex network. Robust network trafﬁc classiﬁcation can
detect unknown trafﬁc, which is an essential improvement in
cyber security for most malicious trafﬁc is unknown from
current systems. Such detection requires both unsupervised
learning and supervised learning. Thus, the performance of
classiﬁers can be signiﬁcantly enhanced by using correlated
information derived from various methods and integrated with
machine learning algorithms. Furthermore, we discussed the
limitations of state of the art techniques and pointed out future
work. All in all, continuous research efforts are needed to
improve automatic trafﬁc analytics and to apply it broadly to
address critical cyber security issues.

REFERENCES

[1] T. T. Nguyen and G. Armitage, “A survey of techniques for internet
trafﬁc classiﬁcation using machine learning,” IEEE Communications
Surveys & Tutorials, vol. 10, no. 4, pp. 56–76, 2008.

[2] X. Gui, J. Liu, M. Chi, C. Li, and Z. Lei, “Analysis of malware
application based on massive network trafﬁc,” China Communications,
vol. 13, no. 8, pp. 209–221, 2016.

[3] A. Dainotti, A. King, F. Papale, A. Pescape et al., “Analysis of a/0
stealth scan from a botnet,” in Proceedings of the 2012 ACM conference
on Internet measurement conference. ACM, 2012, pp. 1–14.

[4] S. Suthaharan, “Big data classiﬁcation: Problems and challenges in net-
work intrusion prediction with machine learning,” ACM SIGMETRICS
Performance Evaluation Review, vol. 41, no. 4, pp. 70–73, 2014.
[5] J. Zhang, X. Chen, Y. Xiang, W. Zhou, and J. Wu, “Robust network
trafﬁc classiﬁcation,” IEEE/ACM transactions on networking, vol. 23,
no. 4, pp. 1257–1270, 2015.

[6] J. Ma, K. Levchenko, C. Kreibich, S. Savage, and G. M. Voelker,
“Unexpected means of protocol inference,” in Proceedings of the 6th
ACM SIGCOMM conference on Internet measurement. ACM, 2006,
pp. 313–326.

[7] Y. Wang, Y. Xiang, J. Zhang, W. Zhou, G. Wei, and L. T. Yang, “Internet
trafﬁc classiﬁcation using constrained clustering,” IEEE Transactions on
Parallel and Distributed Systems, vol. 25, no. 11, pp. 2932–2943, 2014.
[8] Z. Ling, J. Luo, K. Wu, W. Yu, and X. Fu, “Torward: Discovery,
blocking, and traceback of malicious trafﬁc over tor,” IEEE Transactions
on Information Forensics and Security, vol. 10, no. 12, pp. 2515–2530,
2015.

[9] M. Antonakakis, R. Perdisci, Y. Nadji, N. Vasiloglou, S. Abu-Nimeh,
W. Lee, and D. Dagon, “From throw-away trafﬁc to bots: detecting the
rise of dga-based malware,” in Presented as part of the 21st USENIX
Security Symposium (USENIX Security 12), 2012, pp. 491–506.
[10] A. W. Moore and D. Zuev, “Internet trafﬁc classiﬁcation using bayesian
analysis techniques,” in ACM SIGMETRICS Performance Evaluation
Review, vol. 33, no. 1. ACM, 2005, pp. 50–60.

[11] H. Dahmouni, S. Vaton, and D. Rossé, “A markovian signature-based
approach to ip trafﬁc classiﬁcation,” in Proceedings of the 3rd annual
ACM workshop on Mining network data. ACM, 2007, pp. 29–34.

