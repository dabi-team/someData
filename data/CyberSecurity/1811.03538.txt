8
1
0
2

v
o
N
8

]
E
S
.
s
c
[

1
v
8
3
5
3
0
.
1
1
8
1
:
v
i
X
r
a

Integrating Security in Resource-Constrained
Cyber-Physical Systems∗

VUK LESI, Duke University, USA
ILIJA JOVANOV, Duke University, USA
MIROSLAV PAJIC, Duke University, USA

Defense mechanisms against network-level attacks are commonly based on the use of cryptographic techniques,
such as lengthy message authentication codes (MAC) that provide data integrity guarantees. However, such
mechanisms require significant resources (both computational and network bandwidth), which prevents their
continuous use in resource-constrained cyber-physical systems (CPS). Recently, it was shown how physical
properties of controlled systems can be exploited to relax these stringent requirements for systems where sensor
measurements and actuator commands are transmitted over a potentially compromised network; specifically,
that merely intermittent use of data authentication (i.e., at occasional time points during system execution), can
still provide strong Quality-of-Control (QoC) guarantees even in the presence of false-data injection attacks,
such as Man-in-the-Middle (MitM) attacks. Consequently, in this work we focus on integrating security into
existing resource-constrained CPS, in order to protect against MitM attacks on a system where a set of control
tasks communicates over a real-time network with system sensors and actuators. We introduce a design-time
methodology that incorporates requirements for QoC in the presence of attacks into end-to-end timing
constraints for real-time control transactions, which include data acquisition and authentication, real-time
network messages, and control tasks. This allows us to formulate a mixed integer linear programming-based
method for direct synthesis of schedulable task and message parameters (i.e., deadlines and offsets) that
do not violate timing requirements for the already deployed controllers, while adding a sufficient level of
protection against network-based attacks; specifically, the synthesis method also provides suitable intermittent
authentication policies that ensure the desired QoC levels under attack. To additionally reduce the security-
related bandwidth overhead, we propose the use of cumulative message authentication at time instances
when integrity of messages from subsets of sensors should be ensured. Furthermore, we introduce a method
for opportunistic use of remaining resources to further improve the overall QoC guarantees while ensuring
system (i.e., task and message) schedulability. Finally, we demonstrate applicability and scalability of our
methodology on synthetic automotive systems as well as a real-world automotive case-study.

CCS Concepts: • Security and privacy → Distributed systems security; Intrusion detection systems; • Com-
puter systems organization → Embedded and cyber-physical systems; Embedded systems; Embedded
software; • Software and its engineering → Real-time schedulability; • Theory of computation →
Linear programming;

Additional Key Words and Phrases: Cyber-Physical Systems security, real-time scheduling, quality-of-control,
mixed integer linear programming.

1 INTRODUCTION

In this work, we focus on securing resource-constrained cyber-physical systems (CPS) from network-
based false-data injection attacks over low-level networks used for real-time communication

∗This work was supported in part by the NSF CNS-1652544 and CNS-1505701 grants, and the Intel-NSF Partnership for
Cyber-Physical Systems Security and Privacy. This material is also based on research sponsored by the ONR under agree-
ments number N00014-17-1-2012 and N00014-17-1-2504.

Authors’ addresses: Vuk Lesi, Duke University, Durham, North Carolina, USA, vuk.lesi@duke.edu; Ilija Jovanov, Duke
University, Durham, North Carolina, USA, ilija.jovanov@duke.edu; Miroslav Pajic, Duke University, Durham, North Carolina,
USA, miroslav.pajic@duke.edu.

2018. CPSL@Duke
https://cpsl.pratt.duke.edu

 
 
 
 
 
 
2

of control-related messages. With these Man-in-the-Middle (MitM) attacks, attackers can inject
maliciously crafted data into communication between sensors and controllers, forcing a controlled
physical plant into a potentially unsafe state; this is achieved either directly (by injecting false
control commands) or through actions of the controller (if sensor measurements are falsified).
Several such attacks have been reported recently (e.g., [6, 7, 17, 20]); for example, susceptibility of
modern automotive systems to this type of attacks was illustrated in e.g., [6, 11]. These attacks
are especially threatening as they enable a remote attacker to compromise safety-critical control
features of a system, by taking over some of the components with access to a low-level safety-critical
network used for control, before using them to transmit malicious control-related messages.

Protection against this type of attacks is commonly based on data integrity enforcements using
message authentication. Standard methods for ensuring authenticity of sensor data require signing
of message authentication codes (MACs) on the sensor electronic control units (ECUs), transmit-
ting sensor measurements along with the MACs, and verification of the MACs at the controller
ECUs. However, due to security-related overhead this approach may not be applicable to resource-
constrained embedded platforms, which are especially dominant in legacy systems. For example, our
experiments on a 96 MHz ARM Cortex-M3-based ECU show that executing a single-input-single-
output PID controller update takes approximately 5µs, while signing a 128 bit MAC over a single
measurement requires around 100 µs. Thus, resource constraints may make it infeasible to provide
continuous protection of sensing data by authenticating every transmitted sensor measurement.
Consequently, in this work we seek to answer the question exactly how much security enforcement
is sufficient and how can we exploit available system resources in order to improve the overall
security guarantees, in terms of Quality-of-Control (QoC) in the presence of attack.

Due to the recently reported security incidents, the problem of securing CPS has drawn significant
attention, with research efforts focused on the impact of false-data injection attacks on system
performance (mainly QoC), as well as the design of attack-detectors and attack-resilient controllers
using a physical model of the system (e.g., [10, 25, 30, 32, 34, 39, 45]). One of the main results is
that even when physics-based intrusion detectors are used, by changing messages received at the
controller from a subset of system sensors, an attacker could launch stealthy (i.e., non-detectable)
attacks that force the plant into any undesired state through the actions of the controller [19, 26, 40].
On the other hand, we have recently shown how physical properties of the controlled system
under consideration, can be exploited to relax integrity requirements for secure control [14–16].
Furthemore, by computing reachable regions of the state estimation error under stealthy attacks,
control performance under attack can be evaluated for intermittent integrity enforcement policies
– i.e., policies that only intermittently employ message authentication. In [22], we condense these
reachable regions into QoC degradation curves that quantify the interplay between computational
(and bandwidth) requirements imposed by security services and the QoC-guarantees under attack.
However, the use of such policies introduces new challenges for ensuring timeliness of deployed
control functionalities, as the standard periodical task and message models under such relaxed
integrity enforcement policies feature significant execution and transmission time variations. In [22],
we only focus on the computational aspect of the problem and show how to guarantee timeliness
for security-aware control tasks, while [21] presents our initial attempt to ensure timeliness
of communication messages. Yet, both works consider decoupled scenarios where either ECU
processing time is the only concern with the assumption that the network is not congested, or
where network bandwidth is the only limitation for incorporating security while ECUs are not
considered. However, the problem of providing integrated QoC and security guarantees while
ensuring timeliness in scenarios where both ECU processing time and network bandwidth are
limited remains open. Moreover, [14] shows that block-authentication of sensor measurements

Integrating Security in Resource-Constrained Cyber-Physical Systems

3

Fig. 1. Design-time methodology to integrate security in resource-constrained CPS; the use of cumulative
intermittent message authentication policies enables tradeoffs between (i) required system resources (i.e., to
ensure that all control functionalities still perform within specifications even after security is ‘added’ to the
system), and (ii) Quality-of-Control (QoC) guarantees in the presence of network-based false-data injection
attacks on sensor measurements delivered to controllers.

has to be used for general types of dynamics of controlled physical processes, which results in
workloads that cannot be modeled within the existing framework from [22].

Consequently, in this work we introduce a design-time methodology, illustrated in Fig. 1, that
ensures that existing control functionalities will not be negatively affected by adding message
authentication to enforce data integrity. Specifically, the methodology provides sensing-to-actuation
timeliness guarantees for security-aware control that employs intermittent message authentication
in order to guarantee that a desired QoC level is maintained even under attack. To capture the cases
where block-authentication is needed while further reducing bandwidth requirements for the QoC
guarantees under attack, we propose the use of intermittent cumulative authentication policies.
We specifically address modeling as well as capture schedulability conditions for security-aware
sensing tasks (which are preemptive) that perform cumulative authentication, and security-aware
messages (which are non-preemptive) that support arbitrary offsets; we show in Section 5 that
existing conditions do not support general offsets, which limits the use of our preliminary approach
from [21]. To further utilize resources available at runtime, we show how by opportunistically
authenticating additional sensor measurements when computation time/bandwidth is available, we
can further enhance QoC guarantees under attack. Finally, we show applicability of our approach
on both synthetic systems that are designed according to established guidelines for automotive
benchmarks, as well as an automotive case study.

This paper is organized as follows. In Section 2, we present the system and attack models, before
introducing intermittent authentication policies for secure control of CPS (Section 3), and formal-
izing the end-to-end transaction modeling for secure control (Section 4). Schedulability analysis
pertaining to the models is presented in Section 5, while Section 6 transforms the corresponding
parameter synthesis problem into a mixed integer linear program (MILP). Opportunistic use of
remaining resources to improve the overall QoC guarantees in the presence of attacks is presented
in Section 7, before evaluating our approach in Section 8. Finally, Section 9 presents related work
before concluding remarks are provided in Section 10.

2 SYSTEM AND ATTACK MODEL

In this section, we present system architecture and model, including the attack model, and introduce
cumulative authentication policies that ensure the desired QoC levels in the presence of attacks.
We then formalize the problem of adding security guarantees against MitM attacks and outline our
design-time methodology (shown in Fig. 1) to integrate security in resource-constrained CPS.

Reachability AnalysisQoC Guarantees under attack𝒥𝑖(𝑙𝑖,𝑓𝑖)Attack ModelPlant ModelTask and Message Models (𝑝𝑖,𝑐𝑖)𝑓𝑖Runtime Opportunistic Resource AllocationSchedulable set of secure control transactions (𝜙𝑖,𝑑𝑖,𝑠𝑖)Real-time task/message parameters 𝜙𝑖,𝑑𝑖Cumulative authentication policy 𝜇𝑖𝑓𝑖,𝑙𝑖,𝑠𝑖Plant ModelPlant ModelPlatform ModelReal-Time Analysis (MILP)4

Fig. 2. System architecture with N physical plants (P1, ..., PN ) that are sampled and controlled in real-time
by M ECUs (ε1, ..., εM ); the ECUs communicate with the corresponding plants’ sensors and actuators over a
real-time communication network. We assume that the mapping of controllers for each plant Pi to a specific
ECU εj is already performed.

2.1 System Architecture and Model without Attacks
We consider a common CPS architecture shown in Fig. 2, where sensors for N physical plants Pi
(i = 1, .., N ), as illustrated in the plant layer in the figure, communicate with plant controllers over
a shared real-time network. We assume that each plant Pi can be modeled in the standard linear
systems form as

xi [k + 1] = Ai xi [k] + Bi ui [k] + wi [k]

yi [k] = Ci xi [k] + vi [k],

(1)

where xi [k], yi [k] and ui [k] denote the plant’s state, output and input vectors at time k, while
wi [k] and vi [k] are process and measurement noise. In addition, each plant Pi is controlled by a
feedback controller that in the most general form can be captured as

ˆxi [k + 1] = fi (ˆxi [k], ˆyi [k])
ui [k] = gi (ˆxi [k], ˆyi [k]) .

Here, fi (·) and gi (·) denote arbitrary linear mappings, which may for example describe an observer-
based state feedback controller illustrated in Fig. 3. In addition, ˆxi [k] and ˆyi [k] denote the estimate
of the plant’s state and sensor measurements received by the controller at time k. Also, as shown in
Fig. 3, we assume that each controller is equipped with a physics-based intrusion/anomaly detector
that employs the plant model and a window of previous control inputs (ui [k]), state estimates
(ˆxi [k]) and received sensor measurements (ˆyi [k]) to trigger alarms (e.g., as in [15, 19, 25, 26, 30]).
2.1.1 Task and Message Models. For each plant Pi , measurement acquisition, packing and transmis-
. In addition, periodic control
sion is done by a periodic sensing (or transmitting) task denoted byT sens
(or receiving) task T ct r l
, which may be executed on a different ECU, unpacks received measurements
before using them for control updates in each sampling (i.e., actuation) period. Hence, the periods
= pi . We
of these tasks are equal to the sampling period of the controlled plant – i.e., psens
also assume that mapping of tasks onto ECUs has already occured, as shown in Fig. 2 – i.e., the
set TEj , j = 1, ..., M, of tasks executing on each of the M ECUs E1, ...EM is known; for example, in
the platform layer in Fig. 2, the task set TE2 that contains T sens
is mapped onto ECU E2.
Thus, we assume that the worst-case execution times (WCET) for all these tasks are known, and let
cct r l
i

denote the WCET on the assigned ECUs, for tasks T ct r l

, (i = 1, ..., N ).

and T sens
i

and csens
i

and T ct r l

= pct r l
i

N

1

i

i

i

i

SensingActuation𝒫1𝒫𝑁𝑇1𝑠𝑒𝑛𝑠𝑇1𝑐𝑡𝑟𝑙ℰ1ℰ𝑀ℰ2𝑇𝑁𝑠𝑒𝑛𝑠𝑇𝑁𝑐𝑡𝑟𝑙…𝑀𝑁𝑛𝑒𝑡𝑀1𝑛𝑒𝑡…shared networkIntegrating Security in Resource-Constrained Cyber-Physical Systems

5

Fig. 3. General controller design. In addition to
a standard estimator (i.e., observer) and a feed-
back controller, the controller employs a physics-
based intrusion/anomaly detector.

Fig. 4. Timing diagram of a control transaction — the
precedence requirements for sensing (transmitting)
task T sens
and control (receiving) task
i
i
are captured by constraints (2)-(4).
T ct r l
i

, message Mnet

Each sensing task T sens

communicates sensor measurements to control task T ct r l

through a
i
real-time message Mnet
, as
illustrated in the task/message layer in Fig. 2. Note that when no confusion arises, we refer to
as tasks. Finally, without loss of generality, we assume that actuation is
all T sens
i
done directly by control tasks, i.e., actuation commands are not transmitted as messages over the
network, although the presented model can be easily generalized to cover this case.

with the same period pi and the worst-case transmission time cnet

, and T ct r l

, Mnet
i

i

i

i

i

i

, Mnet
i

Control Transactions. For any plant Pi , we define a control transaction Ti as the chain of in-
with all the tasks being precedence-constrained. Specifically,
vocations of T sens
and T ct r l
i
may start execution is upon receiving the required sensor
the earliest time a job of task T ct r l
message. Similarly, network access for message Mnet
has
prepared data for transmission. We capture these precedence constraints with non-zero offsets
and constrained deadlines imposed on the tasks (Fig. 4); we model the tasks in the standard
(W CET , period, o f f set, deadline) format as T ct r l
),
and T sens
i

), Mnet
(cct r l
i
i
), with the precedence constraints specified as

cannot be requested before task T sens

, pi , ϕsens
i

, pi , ϕct r l
i

, pi , ϕnet

, dsens
i

(csens
i

, dct r l
i

, dnet
i

(cnet
i

i

i

i

i

i

ϕnet
i
ϕct r l
i
+ dct r l
i

ϕct r l
i

+ dsens
i
+ dnet
i

,

≥ ϕsens
i
≥ ϕnet
i
≤ pi ,

,

(2)

(3)

(4)

and illustrated in Fig. 4. To simplify our notation, constraint (4) employs a standard assumption
(e.g., as in [1]) that the delay between sampling and actuation for each plant Pi is bounded by
the control period pi ; however, these constraints can be easily adjusted for any fixed sampling-to-
actuation delay bounds that may be considered.

Finally, it is important to highlight that the period pi and WCET csens

are known and
considered inputs to our design-time procedure, as we do not want to significantly affect the initial
(i.e., non-secured) control deployment. On the other hand, to enforce the tasks’ precedence, each
control transaction imposes the aforementioned constraints between the offsets and deadlines used
to model the transaction tasks. Yet, the actual values are not assigned a priori, i.e., the transaction
set is considered incomplete, and our goal is to determine offsets and deadlines for all tasks that
produce a schedulable set of control transactions even when security mechanisms are incorporated.

, and cct r l

, cnet
i

i

i

Estimator𝑢𝑖[𝑘]Feedback Controllerෝ𝑥𝑖[𝑘]ෝ𝑦𝑖[𝑘]ALARMIntrusion /Anomaly DetectorControllertttt1t3t0t2arrivaldeadlinecontrol transactiondsenspidnetϕnetϕctrldctrlTsensTctrlMnetϕnet6

2.2 Attack Model

The considered system architecture is susceptible to network-based attacks, such as MitM attacks,
on communication between sensors and controllers. The attacker can use actions of the controller
to force the plant away from the desired state by injecting false data that differ from actual sensor
measurements, consequently affecting the controller’s estimation and thus the applied control
inputs. To formally capture this, we use the standard attack model from [10, 26, 30, 31, 45], where
additional term ai [k] captures the vector of values injected by the attacker at time k on compromised
measurements – i.e., with MitM attacks, measurements received by the controller ˆyi [k] may differ
from the actual sensor measurements yi [k]. Specifically,

(cid:40)

ˆyi [k] =

yi [k],
yi [k] + ai [k], with MitM attack

without MitM attack

(5)

Due to attacks, the system evolution would not occur according to the model from (1). Therefore,
we differentiate system evolutions with and without attacks by adding superscript a to all variables
affected by the attacker’s influence. For example, we denote the plant’s state and outputs when
the system is under attack as xa
i [k], respectively. Hence, in the case of attacks, sensor
measurements delivered to the controller can be modeled as

i [k] and ya

ˆya
i [k] = ya

i [k] + ai [k] = Ci xa

i [k] + va

i [k] + ai [k],

(6)

The attack vector ai [k] is unknown and can have any value assigned by the attacker. The only
constraint is that it may be sparse, depending on the set of compromised information flows from
sensors to the controller; specifically, if communication from a sensor to the controller for plant Pi
is not corrupted then the corresponding value in ai [k] has to be equal to zero. Any assumptions
about the set of compromised sensor flows (e.g., the number of the flows) can thus be captured by
introducing constraints on the sparsity of the vector. However, unless stated otherwise, to simplify
our presentation we focus on the worst-case scenario, where the attacker is able to compromise all
sensor flows for the plant, once he/she decides to launch an attack.

With the use of standard cryptographic mechanisms, such as MACs, integrity of the received
sensor data can be guaranteed, as we assume that the attacker does not have access to the shared
secret keys used to generate the MACs. In addition, we assume that one of the attacker’s goals is to
remain stealthy, and thus in time steps when message authentication is used, the attacker cannot
inject false data (i.e., ai [k] = 0) or the attack will be detected.1 Furthermore, we assume that the
attacker has unlimited computation power and full knowledge of the system, system architecture
and plant models, as well as the time-points when authentication will be utilized. This allows him
to plan ahead, and smartly craft false measurements to be injected over the network, such that they
do not trigger the deployed detector, while deceiving the controller into pushing the plant away
from the desired operating point.2

Consequently, the attacker’s goal is to maximally reduce control performance (i.e., QoC) while
remaining stealthy – i.e., undetected by the system. Therefore, in addition to not inserting false
data packets in time-frames when data authentication is enforced, the injected falsified sensor mea-
surements should not trigger the anomaly/intrusion detection system employed at the controller.

1Note that the attacker, with access to the network, could launch Denial-of-Service attacks that prevent messages, including
authenticated ones, from being successfully delivered to the controller. In this work, we do not consider such attacks since
they are in general easier to detect in CPS with reliable communication networks.
2Examples of such attacks can be found in [14, 15, 19, 26].

Integrating Security in Resource-Constrained Cyber-Physical Systems

7

1

3

2

(2, 10), T sens

(2, 10), T sens

(5, 20) is infeasible if overhead of signing sensor measurements
Fig. 5. Task set T sens
is 2 time units in every sampling period (left). However, if T sens
are allowed to authenticate every
other period, and the initial authentication of T sens
is deferred until the second period, the task set is
schedulable (center). On the other hand, if the goal is to maximize QoC guarantees for the first plant by
always authenticating T sens
measurements, authentication rates for T sens
can be reduced by
authenticating every fourth and every other period, respectively, while still providing suitable QoC guarantees
under attack, using the QoC degradation curves to guide formal tradeoff analysis (right).

and T sens
3

and T sens
2

2

1

2

1

3 DEFENDING AGAINST ATTACKS WITH INTERMITTENT DATA AUTHENTICATION

Enforcing data integrity for every communicated measurement packet may be infeasible due to
additional computation costs associated with signing and verifying MACs, as well as additional
bandwidth required to transmit them. For example, consider three sensing tasks that are being
(5, 20)},3 and let us assume that the
executed on the same ECU, {T sens
security-induced computation overhead to sign measurements with a MAC is 2 time units. As
shown in Fig. 5(left), the new task set {T sens
(7, 20)} is infeasible; thus,
even if the network can deal with the additional communication overhead, the transmitting ECU
cannot authenticate (i.e., sign) every message.

(4, 10),T sens

(2, 10),T sens

(2, 10),T sens

(4, 10),T sens

1

1

2

3

3

2

On the one hand, a stealthy attack may significantly reduce QoC if the attacker has compromised
a certain number of sensor flows (e.g., [19, 30]). For any specific class of controllers from Fig. 3,
by injecting false sensor data that result in a skewed state estimation, the attacker deceives the
controller to apply inappropriate control inputs that steer the plant away from the operating point.
On the other hand, in [14–16], we show how physical properties of a system can be exploited to
relax integrity requirements for secure control of CPS. The idea is that the state estimation errors
due to attacks have to increase slowly to avoid attack detection by the deployed physics-based
detector from Fig. 3. In addition, since each plant has its own dominant time-constant, which can
be obtained by the plant model Pi , in the presence of a stealthy attack, QoC can be significantly
degraded only after some time has elapsed after the attack is launched.

QoC degradation under attack occurs due to errors in state estimation caused by the false-data
injected at time-points when authentication is not used. Hence, for any data authentication policy,
which can be captured as time-points where MACs are used (i.e., times k where ai [k] = 0), system
performance under stealthy attacks can be evaluated by computing reachable regions of the state
estimation error caused by the false data. Specifically, due to stealthy false-data injection attacks,
the reachable regions R[k] and R of the state estimation error can be defined as [14–16]
ee⊺ ≼ E[ea[k]]E[ea[k]]⊺ + γCov(ea
k

∞
(cid:216)

),

(cid:26)

(cid:27)

and R =

R[k].

R[k] =

e ∈ Rn

ea[k] = ea
k

(a1..k ), a1..k ∈ Ak

k =0

3To simplify our notation, when a task T is represented as T (c, p) it is assumed that its offset is equal to zero and relative
deadline is equal to the period p.

T1 authenticationT1 computationT2 authenticationT2 computationT2T3EDFDeadline miss0103020400302040010With conventional integrity requirementsWith relaxed integrity requirementsT101030204003020400100103020400302040010T3 authenticationT3 computation8

Fig. 6. State estimation error evolution due to stealthy attack on distance sensing in an adaptive cruise control
system – projections of the reachable regions in the 3-dimensional state space (distance-speed-acceleration)
are shown. Note that the attainable state estimation error is significantly reduced (but not zero) if integrity is
enforced over every 4th measurement, while the regions grow infinitely without any integrity enforcement.

k

Here, R is the global reachable region of the state estimation error, while Ak denotes the set of all
stealthy attacks a1..k = [a[1]⊺...a[k]⊺]⊺, and ea
(a1..k ) is the estimation error evolution due to the
attack a1..k . Note that this general definition allows for the inclusion of additional information,
such as the number and location of compromised sensors. Unless otherwise stated, we assume that
measurements from all sensors are compromised when authentication is not used. For instance,
Fig. 6 shows the reachable regions of state estimation error due to stealthy attacks over the adaptive
cruise control system described in Sec. 8.2 for the case with and without intermittent authentication.
In [22], we introduced a QoC degradation curve Ji (l) that, for any linear plant Pi , directly
quantifies the dependency between the security-induced computation and bandwidth overhead
and the control performance (QoC) under attack, which is reduced due to the estimation errors.
Specifically, Ji (l) can be used to bound QoC degradation as a function of l – the maximal time
between consecutive uses of MACs in data authentication policies. This can be formally captured as

Ji (l) = supp{∥ea ∥2 | ea ∈ Rl

i }, where Rl
i

= ∪∞

k =0Rl

i [k],

where Rl
i [k] denotes the reachable region Ri [k] computed for all data authentication policies with
inter-authentication distance of l. Such QoC-degradation curves enable the designer to accurately
adjust the system’s working point by balancing between computational or network resource
allocated for security and the returning QoC guarantees under attack, as the predefined QoC
requirement can be directly mapped into security-induced overhead and vice versa.

To illustrate this, let us revisit the example from Fig. 5, and let us assume that for the first two
plants, authenticating sensor measurements in every other sampling period ensures the desired
QoC level in the presence of attack. Fig. 5(center) shows that under such conditions, by deferring
the initial authentication of T sens
until the second period, the task set becomes feasible. Note
that, however, if every fourth measurement for the second plant and every other measurement
of the third plant are authenticated, then the measurements for the first plant can continuously
be authenticated, as in Fig. 5(right). QoC degradation curves explicitly capture the dependency
between required security-related overhead and control performance, and can be used to decide
which scenario is more desired with respect to the overall (for all plants) QoC guarantees.

2

3.1 Cumulative Data Authentication Policies
In general, depending on the considered plant’s dynamics (i.e., matrices Ai , Bi , Ci in (1)) it may
not be sufficient to intermittently authenticate sensor measurements at one time point. Rather
integrity of fi consecutive measurements should be ensured, with these time-windows appearing

Integrating Security in Resource-Constrained Cyber-Physical Systems

9

intermittently during system execution [14].4 Implementing such data authentication policies
with the use of standard MACs, where every authenticated message is signed with its own MAC
added to the message, would require that fi consecutive communication packets are extended to
accommodate MACs. As the network is commonly a bottleneck in resource-constrained CPS, in
this work we propose the use of cumulative message authentication where a MAC is computed over
several consecutive plant measurements, before being attached to the final message from the block;
this significantly reduces the network load by transmitting a MAC for multiple consecutive data
points as part of a single message [28, 35].

Therefore, we introduce the following definitions for cumulative data authentication policies

that intermittently or periodically authenticate blocks of messages with sensor measurements.

Definition 3.1. An intermittent cumulative data authentication policy µi = ((cid:8)tj

tj−1 < tj and li = sup

j >0

(cid:0)tj − tj−1(cid:1), ensures that atj

= atj +1 = ... = atj +fi −1 = 0, for all j ≥ 0.

(cid:9)∞
j=0 , fi , li ), with

Definition 3.2. A periodic cumulative data authentication policy µi (si , fi , li ), where 0 ≤ si ≤ li − 1,

ensures that for all j ≥ 0,

i

i

ai [si + li · j] = ai [si + 1 + li · j] = ... = ai [si + fi − 1 + li · j] = 0.
Definition 3.1 imposes a maximum time of lipi (i.e., li control periods) between the initial authenti-
cated measurements within blocks of fi consecutive authenticated measurements. On the other
hand, with periodic cumulative authentication policies from Definition 3.2, the time between initial
authentications for consecutive blocks is always exactly lipi , and authentication blocks start with
the initial offset equal to sipi .

A control transaction with an intermittent or periodic cumulative authentication policy applied
to its tasks (resulting in security-related overheads) is referred to as a secure control transaction. For
example, consider a secure transaction Ti from Fig. 7, where a periodic cumulative data authentica-
tion policy µi (1, 2, 4) is implemented using cumulative MACs. During every four periods, overhead
is spread over fi = 2 jobs, while only one message Mnet
due to MAC signing for sensing task T sens
include overhead due to authentication, and only after the last message from the
and job of T ct r l
.
authenticated block is prepared for transmission by T sens

Finally, the use of cumulative authentication introduces delay in verifying data integrity that
has to be taken into account when QoC degradation curves are derived. Therefore, in this case
QoC degradation curves can be captured as Ji (li , fi ), which are computed from the plant model
Pi using the reachability analysis we introduced in [16], as illustrated in the upper-right part of
Fig. 1. Since the reachability analysis considers intermittent cumulative authentication policies from
Definition 3.1, when used for periodic policies µi (si , fi , li ), as defined in Definition 3.2, it provides
QoC guarantees for any value of si . For example, the QoC-degradation curves for adaptive cruise
control, driveline management and lane keeping controllers, as functions of inter-authentication
distance (li ) and authentication block length (fi ), are shown in Fig. 10. Note that the adaptive
cruise control system requires that at least two consecutive measurements are authenticated (i.e.,
fACC ≥ 2) due to the properties of the plant’s dynamics.

These QoC-degradation functions Ji (li , fi ) provide the basis for our analysis of tradeoffs between
QoC guarantees under attack and the required computational and network resources used for
data authentication (i.e., security-related overhead). For each plant Pi , the function Ji (li , fi ) is
a non-decreasing function in variable li . In addition, the minimal required value for fi can be
directly computed from the model of Pi without significant QoC improvements being obtained by

i

i

4As shown in [14], f = min(ψ , qun
unstable eigenvalues of Ai .

i

) with ψ being the observability index of the (Ai, Ci ) pair and qun

i

is the number of

10

increasing fi . Therefore, the desired QoC requirements (e.g., a bound on Ji (li , fi )) can be directly
mapped into constraints on the value of li , the number of non-authenticated communication packets
between consecutive block authentications.

3.1.1 Overview of our Approach. Our goal is to ensure the desired level of QoC for all controlled
plants in resource-constrained CPS, even in the presence of network-based attacks. As resource
constraints prevent continuous authentication of transmitted sensor measurements, we focus on
periodic cumulative authentication policies, as for such block integrity enforcements are maximally
spread apart. To achieve this, we propose the use of the design-time framework from Fig. 1,
that directly facilitates tradeoff analysis between the QoC guarantees under attack and security
(i.e., authentication) overhead for ensuring intermittent integrity of sensor measurements. For
each plant Pi , i = 1, ..., N , the plant model and corresponding QoC curve Ji (li , fi ) are used to
obtain constraints on employed periodic cumulative authentication policies; specifically the values
for li and fi (but not si ) that result in the desired QoC. In addition, from the platform model and
the initial controller specification, regular (i.e., without overheads) and extended (i.e., including
authentication) WCETs can be obtained, along with the control transaction period pi .

On the other hand, for the task models to be complete and the intermittent authentication policies
to be fully defined, it is necessary to derive feasible (i.e., schedulable) tasks’ offsets and deadlines, as
well as initial authentication offsets (si ) for the cumulative authentication policies. Consequently, to
allow for the execution of secure control transactions with the desired levels of QoC in the presence
of attacks, in the rest of the paper we focus on the following scheduling problems.

Problem 1. For a set of secure control transactions T = {T1, ..., TN }, complete the respective
task/message sets and deployed periodic cumulative authentication policies, such that the obtained
secure transaction set T , mapped to available ECUs E1, ...EM , is schedulable under preemptive EDF
for ECUs and non-preemptive EDF for the network.

Problem 2. Starting from a schedulable set of secure control transactions T , obtained from Problem 1,
improve the overall QoC guarantees by utilizing remaining resources (ECU time, network bandwidth)
with the use of intermittent cumulative data authentication policies.

We consider the use of the EDF scheduler uniformly across ECUs and the network, since EDF is
optimal non-idle scheduler for preemptive task scheduling (i.e., on ECUs), while it outperforms
rate-monotonic schedulers for realistic loads on non-preemptive networks such as CAN [1, 49]. The
main challenge in determining unknown parameters (task offsets, deadlines and extended frame
start times) is capturing schedulability conditions for preemptive-EDF on each of the ECUs, as well
as non-preemptive-EDF for the shared network. Therefore, in next section, we start by examining
the mapping of the control- and security-related platform requirements into a security-aware
control transaction model, which will provide a basis for our schedulability analysis and parameter
synthesis procedure.

Remark 1 (Reduction of Control Rate vs. Reduction of Authentication Rate). The
main idea behind this work is that with the simultaneous use of physics-based attack detection and
cyber-based security mechanisms, such as message authentication, we will be able to provide strong
QoC performance guarantees even in resource-constrained CPS, in which it is not possible to protect
integrity of every transmitted sensor measurement. An alternative approach to the use of intermittent
authentication would be to reduce the control rate to the levels that ensure that every transmitted
sensor message can be authenticated. For instance, for our running example from Fig. 5, if control task
rates are set to 20, 20, and 40 time units respectively (instead of 10, 10, and 20), MACs can protect
integrity of every sensor measurement transmitted over the network. However, reducing the control

Integrating Security in Resource-Constrained Cyber-Physical Systems

11

Fig. 7. Example of a secure control transaction when the periodic cumulative data authentication policy
µi (1, 2, 4) is used. Note that only the transmitting task is extended for fi consecutive invocations to perform
cumulative authentication. On the other hand, the network message is extended only once, and accordingly the
receiving task performs authentication (i.e., verifies the received MAC) once after receiving that measurement.

rates (i.e., by increasing control task/sampling periods) results in a reduced control performance in the
case without attacks, compared to the initial system that employs the nominal control periods. On the
other hand, our goal is to add protection against network-based attacks with strong QoC guarantees in
the presence of attacks, without negative effects on control performance (i.e., QoC) when the system is
not under attack. With the use of intermittent authentication policies this can be achieved by ensuring
schedulability of the main control functionalities (tasks) at the nominal (i.e., initial) periods/rates even
when the authentication mechanisms are only intermittently utilized.

4 MODELING SECURE CONTROL TRANSACTIONS

Let us consider the workload imposed by a secure control transaction, such as the one shown in
Fig. 5 (center, right). Schedulability analysis for such workloads using the standard task model
(W CET , period, deadline) is highly pessimistic – clearly, the task sets from the figures would
be rejected; the reason is that the standard task and message models accepting a single WCET
parameter coarsely overapproximate the load on the ECUs and the shared network imposed by
sparsely added security overhead. Thus, we need a model that captures the variable execution (or
transmission) times of such security-aware real-time tasks.

The multi-frame task model [27] supports tasks that have execution times varying among
consecutive invocations (called frames) in an arbitrary pattern. However, this model is overly
general in that it allows any pattern of frames to be specified, and schedulability analyses for multi-
frame tasks often assume that the worst-case alignment of frames is legal — exactly the scenario
we want to avoid. In our case, it suffices to facilitate two frame sizes, regular and extended, with
extended corresponding to executions that include security-related overhead, as well as additional
parameters specifying extended frame period and offset; this allows for capturing of periodic
cumulative data authentication policies, as the ones applied to tasks in Fig. 5 (center, right).

Our goal is to develop a methodology for completing a set of transactions on the available
shared network and set of ECUs, while taking into account the required level of periodic data
integrity guarantees, which are obtained from the predefined QoC under attack requirements.
Thus, we assume that non-zero task offsets and constrained deadlines are not known a priori.
Instead, the respective task sets are considered incomplete in the sense that their periods and
execution/transmission times are known, but the offsets and deadlines for each of the tasks that
produce a schedulable set of transactions are to be determined. Consequently, we model the
security-aware tasks as Ti (Ci , pi , ϕi , di , li , fi , si ), where

tTsenstMnett0pi3pi2pi4piTctrlssens=1li=4fsens=2iiiiisnet= sctrl= ssens+ fsens-1SensingMACsignMeasurementpayloadMACControllerexecutionMACverify12

i

, cex t
i

• Ci = [cr eд

, Mnet
i
• pi is the period at which jobs are released, ϕi is the release offset, and di is the task’s deadline

] is a WCET array for two frame types, regular and extended, respectively –
and T ct r l
i

is equal to csens , cnet or cct r l for T sens

, respectively;

cr eд
i

i

relative to its activation;

• li is the distance (i.e., number of control periods) between consecutive authentication blocks;
• fi captures the length of the authentication block – i.e., the number of authenticated frames

within one authentication period (i.e., within every interval of length lipi );

• si is the initial authentication offset – i.e., the integer multiple of periods by which the initial

authentication is deferred.

Note that the task offset consists of two components: ϕi and sipi ; ϕi is required to encode precedence
constraints and applies to all jobs of the considered ith task. On the other hand, sipi determines the
additional offset of only extended frames, which provides a degree of freedom during scheduling to
avoid extended frame alignment scenarios emphasized in the motivating example (Fig. 5 (left)).

i

i

i

i

i

i

= l ct r l
i

= fi , as T sens

= 1 since T ct r l

For tasks in any secure control transaction Ti , some of the above parameters (i.e., si , fi , li ) directly
follow from the employed authentication policy µi (si , fi , li ), as illustrated in Fig. 7 for one example
= li , since the authentication period is the same for both
= l net
transaction. First, l sens
i
tasks and the communication message. In addition, f sens
task computes a cumulative
MAC over a block of fi consecutive measurements, before attaching the MAC to the last message
task verifies (i.e., authenticates) a block of consecutive
from the block. Also, f ct r l
measurements only once when it receives the cumulative MAC, prepared by T sens
and delivered
= 1.
by Mnet
i

. Thus, it also holds that f net

Similarly, initial authentication offsets depend on the authentication policy used. First, 0 ≤ ssens
≤
li − fi since the first computation of cumulative MAC within a block must be done early enough to
allow for execution of fi consecutive extended frames within li periods of T sens
. Additionally, the
have constrained start times
initial extended frames of the message Mnet
i
as sct r l
periods,
− 1, as T sens
i
followed by an authenticated transmission and an authenticating control task, as shown in Fig. 7.
),
, dct r l
i
offsets (ϕsens
) for all secure control
transactions Ti , i = 1, ..., N , such that the precedence constraints from (2)-(4) are satisfied, and for
which the obtained complete transaction set T is schedulable under preemptive EDF for ECUs and
non-preemptive EDF for the network. Thus, the following section starts by deriving schedulability
conditions for the presented task model under preemptive and non-preemptive EDF scheduling.

Problem 1 can now be reformulated around synthesis of feasible deadlines (dsens
) and initial authentication offsets (ssens

and control task T ct r l
task computes cumulative MAC over f sens

+ f sens
i

= ssens
i

= snet
i

, ϕct r l
i

, sct r l
i

, ϕnet
i

, dnet
i

, snet
i

i

i

i

i

i

i

i

i

i

5 SCHEDULABILITY ANALYSIS FOR SECURE CONTROL TRANSACTIONS
5.1 Schedulability of Security-Aware Tasks
We consider a schedulability condition for the sensing and control tasks based on the processor
demand criterion [3]. Note that the condition from [22] cannot be used as it does not support the use
of cumulative periodic authentication on sensing tasks, as well as general offset and deadline values
for tasks and messages in secure control transactions. On the other hand, necessary and sufficient
schedulability conditions for the general task model (i.e., with non-zero offsets and deadlines
differing from periods) under the preemptive EDF scheduler are formulated in [3, 5], starting from
the following.

Definition 5.1 ([3]). The demand function d fi of a standard task Ti (ci , pi , ϕi , di ) on interval [t1, t2]
ci , where ci is the WCET of the ith task, while αi, j represents the time

is d fi (t1, t2) =

(cid:205)
αi, j ≥t1, δi, j ≤t2

of the jth job arrival, and δi, j its respective deadline.

Integrating Security in Resource-Constrained Cyber-Physical Systems

13

Theorem 5.2 ([3]). A task set {T1(c1, p1, ϕ1, d1),T2(c2, p2, ϕ2, d2),..., TN (cN , pN , ϕN , dN )} is schedu-

lable by preemptive EDF if and only if (cid:205)N

i=1 d fi (t1, t2) ≤ t2 − t1, for all t1, t2 such that t1 < t2.

Since, by definition, the demand function is piecewise constant with magnitude increasing in
steps at time instants of job deadlines, the condition in Theorem 5.2 can be evaluated over a discrete
and bounded time testing set. Formally, it is necessary to test the processor demand condition for
all tk1 < tk2 ≤ tmax such that

tk1 ∈ T Sar r =

tk2 ∈ T Sdead =

N
(cid:216)

i=1
N
(cid:216)

i=1

{t |t = ϕi + k1pi , k1 ∈ N0, t ≤ tmax },

{t |t = di + k2pi , k2 ∈ N0, t ≤ tmax },

(7)

We use this schedulability condition for schedulability analysis of security-aware T sens

where tmax = maxi ϕi + maxi di + 2 · lcm{p1, ..., pN } is the maximal time up to which the CPU
demand has to be tested to ensure correctness of analysis [23], and lcm is the least common multiple.
and T ct r l
i
tasks – to simplify notation, we omit superscripts and denote the tasks as Ti where possible. To
evaluate the demand function on interval [tk1, tk2), we compute the number of regular and extended
frames released at or after tk1, that have deadlines at or before tk2 as

i

ηr &e
i

(tk1, tk2) = max

(cid:26)

0,

(cid:22) tk2 − ϕi − di
pi

(cid:23)

− max

(cid:26)

0,

(cid:24)tk1 − ϕi
pi

(cid:25)(cid:27)

(cid:27)

.

+ 1

Similarly, extended frames in this interval can be counted as

ηex t
i

(tk1, tk2) =

fi −1
(cid:213)

m=0

max

(cid:26)

0,

(cid:22) tk2 − (si + m)pi − ϕi − di
lipi

(cid:23)

−

(8)

(9)

(cid:24)tk1 − (si + m)pi − ϕi
lipi
Here, the appropriate values for fi should be used – i.e., f ct r l

max

0,

(cid:26)

= fi for T sens
.
The demand function for a single task can now be posed as the total processor demand of regular

= 1 for T ct r l

and f sens
i

i

i

i

(cid:25)(cid:27)

(cid:27)

.

+ 1

and extended frames as

d fi (tk1, tk2 ) = cr eд
. We can thus formulate the necessary and sufficient schedulability condition

(tk1, tk2) + ∆ciηex t

(tk1, tk2),

(10)

i

i

i

ηr &p

where ∆ci = cex t
as: ∀tk1 ∈ T Sar r , ∀tk2 ∈ T Sdead

i −cr eд

i

N
(cid:213)

i=1

d fi (tk1, tk2 ) ≤ tk2 − tk1, if tk1 < tk2 .

(11)

5.2 Schedulability of Security-Aware Messages

To analyze schedulability of security-aware network messages (i.e., with periodic cumulative
authentication), we start from the following theorem that provides a necessary and sufficient
schedulability condition for sporadic real-time messages under non-preemptive EDF.

Theorem 5.3 ([48]). Consider a set of real-time messages Mi (ci , pi , di ), 1 ≤ i ≤ N , where pi is the
minimum message inter-arrival time. The message set is schedulable under non-preemptive EDF over

14

Fig. 8. Example message set M1(ϕ1 = 2, c1 = 2, p1 = 5, d1 = 3), M2(ϕ2 = 1, c2 = 2.1, p2 = 10, d2 = 10) —
although the schedulability test for nonpreemptive messages with offsets from [49] is satisfied, M1 misses its
deadline at t = 5 due to an earlier release of message M2.

a network shared with non real-time messages with maximum transmission time c N RT
(cid:205)N

max if and only if

i=1

ci
pi

≤ 1 and

(cid:23)

(cid:27)

+ 1

ci + cm ≤ tk , ∀tk ∈ T S,

(12)

N
(cid:213)

i=1

max

(cid:26)

0,

(cid:22) t − di
pi
(cid:106) tmax −di
pi

(cid:107) (cid:111)

,

N
(cid:208)
where T S =
i=1
tmax = max (cid:110)
d1, ..., dN ,

(cid:110)
di + jpi |j = 0, ...,
(cid:16)
cm + (cid:205)N
i=1

(cid:17)

(cid:16)1 − di

pi

(cid:17)

ci

/(1 − UM)

(cid:111)

, and cm = max {c N RT

max , maxN

i=1 ci }.

To the best of our knowledge, there does not exist an efficient method to test schedulability for
strictly periodic asynchronous messages under non-preemptive EDF. The conditions from [49]
extend Theorem 5.3 for messages with offsets in order to support transaction scheduling. The
resulting theorem from [49] replaces every appearance of relative deadline di in Theorem 5.3 with
absolute deadline di + ϕi to account for offsets. In our case, using this theorem would be pessimistic
since the conditions derived for sporadic messages cannot be adjusted for multi-frame messages.
Also, examples as in Fig. 8 show that the schedulability condition from [49] does not always hold.
On the other hand, a utilization-based test for non-preemptive EDF is derived in [2]. As our goal
is to determine a set of offsets and deadlines that yields a schedulable set of secure transactions,
this test cannot be used as it condenses all task properties into a single measure. Still, by following
the reasoning presented therein, we formulate the following sufficient schedulability condition.

Theorem 5.4. A message set {M1(c1, p1, ϕ1, d1), M2(c2, p2, ϕ2, d2), ..., MN (cN , pN , ϕN , dN )} is non-
i d fi (t1, t2) ≤ t2 − t1 − cmax , for all t1, t2 such that t1 < t2, where

preemptively schedulable by EDF if (cid:205)
cmax = maxi ci is the longest of transmission times of all N messages.

Proof. Suppose that the theorem’s demand-based condition is satisfied for all t1, t2, and that
2 = tdm. Let t ∗
1 ≤ tdm be the closest to tdm instant such
there is a deadline miss at some instant t ∗
that the network is busy transmitting only those messages with deadlines ≤ tdm. Then, right before
1 , the network may be idle or a message with deadline ≥ tdm is being transmitted.
t ∗

In the case when the network is idle right before t ∗
1 , t ∗

by all messages eligible to be transmitted during [t ∗
demand function, and since there is a deadline miss at t ∗
network time available, i.e., (cid:205)

1 , then the total network demand imposed
2 ] is (cid:205)
2 ), by the definition of the
2 , the demand must be greater than the

i d fi (t ∗

1 , t ∗

i d fi (t ∗

1 , t ∗

2 ) > t ∗

2 − t ∗

1 . This contradicts the theorem statement.

In the case when the network is transmitting a message with deadline ≥ tdm, then the worst case
2 ) + cmax .
2 , the demand must be greater than the available network time, i.e.,
□

network demand of all messages eligible to be transmitted during [t ∗
Since there is a deadline miss at t ∗
(cid:205)

i d fi (t ∗
The intuition behind this theorem can be supported by the claim that non-preemptive EDF
schedules by time t ∗ + cmax at least as much work imposed by a set of tasks as preemptive EDF

1 − cmax , which contradicts the theorem, and thus concludes the proof.

i d fi (t ∗

2 ] is (cid:205)

2 ) > t ∗

2 − t ∗

1 , t ∗

1 , t ∗

1 , t ∗

 11DEADLINE MISS1257100  arrivaldeadline  arrivaldeadlineIntegrating Security in Resource-Constrained Cyber-Physical Systems

15

schedules by t ∗ [2]. In this case, the total network demand by a security-aware message can be
= 1 used for extended transmissions in (9). In addition, the time
expressed as in (10), with f net
testing sets remain the same as in (7). As we demonstrate on examples in Section 8.1, this condition
is less conservative in cases when message transmission times are significantly shorter than their
respective periods. We then show in Section 8.2 that this is commonly true in practical systems.

i

Remark 2 (Accounting for Jitter). To understand how realistic implementation phenomena
such as jitter affect the presented analysis, we consider their effects on task and message scheduling.
In the case of task-level jitter, existing approaches to jitter accounting can be applied [42]. In essence,
if a task experiences jitter ji , the inter-arrival spacing may be shorter than pi . From the worst-case
schedulability standpoint, this scenario pertains to the arrival pattern where all tasks arrive such that
they must complete execution by the relative deadline di −ji , rather than by di time units. Shortening the
permissible deadline by the worst-case jitter can be easily included in the demand-based condition (11).
This does not affect the complexity of the MILP implementation of the parameter synthesis problem, as
worst-case jitter figures as a set of known constant parameters. For message scheduling, in most cases
we do not need to use this approach, as the cmax term introduced in the non-preemptive schedulability
conditions to account for the worst-case blocking any message may experience upon arrival, is rarely
needed in its entirety; this holds since worst-case blocking will rarely occur. This conservativeness
effectively captures jitter, as jitter levels are highly unlikely to exceed message transmission times in
any practical network realization.

6 SYNTHESIS OF SCHEDULABLE SECURE CONTROL TRANSACTIONS

The schedulability conditions from Section 5, along with the task-precedence constraints from
Section 2.1.1, can be used to formulate a parameter synthesis problem that produces a feasible set
of task deadlines, offsets, and initial authentication offsets. However, non-linearity of functions
counting the number of task invocations and message transmissions (8) and (9) precludes efficient
search of the parameter space. Thus, in this section we map the demand-based schedulability
conditions into a set of linear constraints, and formulate a mixed-integer linear program (MILP)
to synthesize task and message parameters that result in a schedulable set of secure control
transactions. Since the schedulability conditions for preemptive and non-preemptive EDF differ
only in the constant term cmax on the right side of the demand constraints from Theorems 5.2
and 5.4, in this section we may omit superscripts sens, ctrl, and net for specific variables, where no
confusion about the parameters arises.

that also incorporates cumulative periodical
Consider the workload of a sensing task T sens
i
indicate that the absolute deadline of the mth
authentications. Let binary variables ai
for T sens
i
extended frame of the jth block of cumulative authentications is at or earlier than a time-testing
instant tk . This can be specified as

k, j,m

ai
k, j,m

= 1 ⇔ tk ≥ (si + m)pi + ϕi + di + (j − 1)lipi ,

(13)

1 ≤ i ≤ N ,

1 ≤ k ≤ |T Sar r | + |T Sdead |,

1 ≤ j ≤

(cid:22) tmax
lipi

(cid:23)

,

0 ≤ m ≤ fi − 1,

(14)

where T Sar r and T Sdead are defined in (7). Note that control tasks T ct r l
and messages Mnet
are
i
= f net
= 1). A similar
supported by simply removing the authentication iterator m (since f ct r l
i
indicate that the hth
relation can be established for regular frames, where binary variables bi
regular frame of the ith sensing task is due by the k th time testing instant tk . This can be captured by

k,h

i

i

bi
k,h

= 1 ⇔ tk ≥ ϕi +di +(h −1)pi ,

1 ≤ i ≤ N , 1 ≤ k ≤ |T Sar r | + |T Sdead |, 1 ≤ h ≤

(cid:23)

(cid:22) tmax
pi

. (15)

16

Identical constraint can be written for control tasks T ct r l
enable us to concisely specify the number of respective jobs from (8) and (9) respectively as

and messages Mnet

. These variables

i

i

ηr &e
i

(tk1, tk2 ) =

t max
pi(cid:213)

j=1

(cid:16)
k2,h − bi
bi

k1,h

(cid:17)

,

ηex t
i

(tk1, tk2 ) =

fi −1
(cid:213)

t max
li pi(cid:213)

m=0

j=1

(cid:16)
k2, j,m − ai
ai

k1, j,m

(cid:17)

.

(16)

(17)

Hence, a task’s processor demand can be cast as a linear function of variables ai
k,h
when (16), (17) are instantiated in (10). Note that since network and ECUs may not have the same
hyperperiod, tmax should be computed independently for each ECU.

and bi

k, j,m

Note that, since task offsets and deadlines are variables, the time testing instants are also variables,
as defined in (7). Therefore, we need to ensure that we only consider the schedulability constraints
from Theorems 5.2 and 5.4 for k1 and k2 such that tk1 < tk2. This is achieved with a set of constraint-
enabling variables ek1,k2 such that

ek1,k2 = 1 ⇒

N
(cid:213)

i=1

d fi (tk1, tk2) ≤ tk2 − tk1,

for preemptive EDF, where ek1,k2 relates to the time testing instants as

ek1,k2 = 1 ⇔ tk2 > tk1 .

(18)

(19)

In addition, the right side of (18) should be decremented by cnet
max
scheduling, due to the scheduling non-preemptivity (Theorem 5.4).

when considering message

Finally, to impose a bounded end-to-end delay, constraints that relate deadlines of tasks in a

transaction can be specified as

dsens
i

+ dnet
i

+ dct r l
i

= pi ,
Remark 3 (Handling of Indicator Constraints). While the processor demand conditions can be
directly implemented within an MILP, constraints (13), (15), (18), and (19) cannot be directly specified
as such in some MILP solvers. Those constraints can be linearized by using the "Big M" method for
handling indicator constraints [8]. In the case of (13) and (15), we can write
k, j,m ≤ M − [si + m + (j − 1)li ]pi ,

− tk + ϕi + di + Mai

1 ≤ i ≤ N .

(20)

(21)

tk − ϕi − di − Mai

k, j,m < [si + m + (j − 1)li ]pi ,
k,h ≤ M − (h − 1)pi ,
k,h < (h − 1)pi ,

− tk + ϕi + di + Mbi

tk − ϕi − di − Mbi

(22)

(23)

(24)

where M is a large constant. Similarly, (18) and (19) can be cast as linear constraints by enforcing

M(ek1,k2 − 1) +

N
(cid:213)

i=1

d fi (tk1, tk2 ) ≤ tk2 − tk1,

tk2 − tk1 > M(ek1,k2 − 1),
tk2 − tk1 < Mek1,k2 .

(25)

(26)

(27)

Integrating Security in Resource-Constrained Cyber-Physical Systems

17

Remark 4 (Handling of Strict Ineqalities). Most MILP solvers do not allow specification of
strict inequalities. Constraints (22) and (24) can be converted into non-strict inequalities by adding
a small ϵ > 0 to every tk . Furthermore, (26) can be directly converted into non-strict inequalities,
while (27) requires addition of a small ϵ > 0 on the left-hand side. Note that this may allow the
time testing instants to meet during the solving process i.e., tk1 = tk2 is possible for some pair (k1, k2).
This does not affect correctness of the formulation, but can only introduce redundant trivial demand
constraints (i.e., over the interval of zero length). However, this does create an undesirable corner case.
Despite the lack of an objective (recall that we are only interested in finding a feasible solution if such
exists), solvers tend to minimize variables, and may thus choose to zero all deadlines. This corner case
is formally allowed if a time testing instant corresponding to a deadline of a task can coincide with
its arrival. Since the demand constraint is satisfied (the processor demand over the interval of length
zero is equal to the supply over the same interval), this modeling anomaly requires lower-bounding
deadlines of each of the tasks. Simply, di ≥ 1, for all i suffices.

Additionally, introducing ϵ to handle strict inequalities may affect the choice of value for M.
Specifically, the values for M and ϵ must be selected such that no negative effects occur with the use
of "big-M" methods due to finite precision implementation of the employed MILP solver — that no
constraint become active due to finite values for M. Thus, we set these values such that it holds that
Mδint + δconst r < ϵ < 1 − Mδint − δconst r ,

where δint is the integer feasibility tolerance and δconst r is the constraint satisfiability tolerance of the
employed MILP solver. Moreover, M must be sufficiently large to ensure constraint satisfiability is not
compromised for large tk -s from the set T S.

i

, dnet
i

, ϕnet
i

, dct r l
i

, ϕct r l
i

), offsets (ϕsens

The aforementioned constraints form a MILP formulation whose variables are the deadlines
(dsens
), as
i
well as the introduced binary variables, but without an objective specification. If the feasible set of
the problem is non-empty, our transaction set becomes complete and guaranteed schedulable. This
approach, however, may be impractical for realistic scenarios. For example, a unified MILP for the
case study presented in Section 8.2 features over 10 million variables and 100 million constraints.
Therefore, in the rest of the section, we discuss methods for complexity reduction that we apply
towards tackling realistic problems.

) and initial authentication offsets (ssens

, sct r l
i

, snet
i

i

6.1 Complexity Reduction

To reduce the number of used variables and constraints, we first consider the time testing sets
in (7) for preemptive EDF. For a large number of arrival-deadline pairs (tk1, tk2), defining a variable
indicating their ordering as in (19) is not necessary, and thus the corresponding demand constraints
can be omitted. For example, arrival time of any single job may never exceed the deadline of that,
or any subsequent invocations of the task. Also, the deadline of a specific task invocation always
occurs after the arrival of that or any earlier task invocations. Formally, since ek1,k2 = 0, ∀i, ∀k2 ≥
k1 such that ϕi + k1pi ≥ di + k2pi , and ek1,k2 = 1, ∀i, ∀k2 ≥ k1 such that ϕi + k1pi < di + k2pi ,
constraints (25)–(27) can be omitted. Similar relations can be drawn pairwise for every two tasks,
given specific temporal parameters. This approach greatly reduces the number of used variables
and constraints, especially for large hyperperiods.
A similar reasoning can be applied to variables ai

that control the peak-frame timing. Given
specific temporal parameters of tasks, it is not necessary to encode appearance of the jth authenti-
cation block (i.e., jth sequence of m consecutive peak frames) for all instants in the time testing
set, as suggested by the general definitions given in (13)–(14). This is true since we only seek to
find a schedulable solution, which implies that the jth authentication block must occur during the

k, j,m

18

interval [(j − 1)lipi , jlipi ], outside of which the value of ai
tasks’ temporal parameters. Formally,

k, j,m

is fixed and fully determined by

(∀i, j, k, m)(tk > jlipi ⇒ ai

k, j,m

= 0 and tk < (j − 1)lipi ⇒ ai

k, j,m

= 1).

Similar holds for normal frames that must be scheduled within their respective periods:

(∀i, k, h)(tk > hpi ⇒ bi

= 0 and tk < (h − 1)pi ⇒ bi

k,h
and thus the majority of constraints (15) and corresponding variables bi
that control normal
frame timing can be eliminated. By enforcing these rules during problem encoding, the number of
variables and constraints required to encode a realistic problem vastly reduces.

k,h

k,h

= 1),

6.2 MILP Decomposition

Even with the discussed reductions in number of variables and constraints, the presented MILPs
may remain relatively complex for very large transaction sets. For these scenarios, we propose a
decomposition approach that formulates the synthesis of schedulable secure control transactions as a
sequence of MILPs, rather than a single program, since the schedulability tests from Section 5 can be
decoupled between the ECUs and network. However, as we consider a parameter synthesis problem,
rather than just a schedulability test, this decomposition is nontrivial – schedulable task parameters
obtained for one part of the system do not guarantee feasibility of the remaining parts. In fact, the
decomposition approach directly depends on the system architecture and its implementation.

i

Synchronous Sensing Platform Model. The most commonly adopted platform model in offset-
6.2.1
based scheduling of control transactions (as in [1]) assumes that all sensing tasks are initially
= 0 and t0 = n · pi for some n in Fig. 4). In this case, in the
released at the same time (i.e., ∀i, ϕsens
first stage, we can run the ECUs’ parameter synthesis MILP. In this case, our objective could ensure
that sensing tasks are scheduled as early as possible (minimized deadlines) while the opposite is
desired for receiving tasks, i.e., they should execute as late as possible during their respective periods
(maximized offsets), in order to ensure that the least conservative timing constraints are imposed
on network messages (Fig. 4). Trying to minimize all dsens
effectively results
in multivariate optimization that we solve by associating weights with each of the objectives (i.e.,
using blended objective). In the second stage, the network parameter synthesis MILP is formulated
as a feasibility problem (without objective) searching for message offsets and deadlines that yield
in a feasible transaction set.

and maximize all ϕct r l

i

i

i

i

Alternatively, in the first stage, we can run the network parameter synthesis MILP with the
(which ‘leaves’ time for transmitting tasks) and minimize
objective to maximize message offsets ϕnet
deadlines dnet
(which ‘leaves’ time for receiving tasks). However, these objectives are conflicting,
and since they have to be specified as a single blended objective function, heuristics can be used
to adjust weights of individual message offsets and deadlines according to the execution times of
sensing and control tasks (i.e., if the sensing task’s WCET is longer than the control task’s WCET,
the message should be delayed more towards the end of the period). In the second stage, the ECUs’
parameter synthesis MILP is formulated as a feasibility problem. However, there exist scenarios
where this model is not the most accurate one; for instance, an ECU attached to multiple sensors
may not necessarily have the capability to sample them instantaneously.

Consequently, our approach is that in the first stage we execute the MILP formulation with
lower complexity, that is better suited for this architecture, since that would reduce the time cost
of reconfiguring task sets in the case that the MILP solver initially returns no solution.

6.2.2
access is synchronized – i.e., ∀i, ϕnet

Synchronous Network Access Platform Model. Another option is to assume that network
= 0 and t1 = n · pi for some n in Fig. 4. In this case, the

i

Integrating Security in Resource-Constrained Cyber-Physical Systems

19

network MILP for parameter synthesis is executed first, with only message deadlines being subject
to minimization to ‘leave’ most time for sensing and control – resulting in the most efficient problem
decomposition. On the other hand, if the ECUs MILP is run first, both sensing deadlines should
be minimized and control offsets should be maximized as described in Section 6.2.1. Then, in the
second stage, the ECUs’ synthesis MILP is a feasibility problem, with additional simplifications
since the constraints (2)-(4) become active (i.e., equalities hold), and for all i, dnet
are pre-specified
= 0. In terms of complexity, this approach is appropriate for large problems since it
and ϕnet
decouples the ECU and network analysis. Consequently, this reduces the number of variables and
constraints per program since now only a part of the time testing instants remain variables.

i

i

7 OPPORTUNISTIC AUTHENTICATIONS

The design-time framework from Section 6 addresses Problem 1, resulting in schedulable secure
control transactions with the desired levels of QoC even in the presence of attacks. However,
the overall QoC guarantees may be improved if the overall authentication rates, captured by
li ’s, are increased, which can be achieved if additional system resources (ECU time, network
bandwidth) are available. While the QoC degradation curves capture the dependency between
QoC and authentication rates (i.e., li ), making the distances between authentications li variables,
instead of predefined values obtained from the QoC requirements, as part of the presented MILP
does not scale. Consequently, the methods we introduced in [21, 22] to optimally allocate resources
in systems where only network or only ECE scheduling is considered, such that the overall QoC
under attack is maximized cannot be employed for systems featuring many tasks/messages when
both network and task scheduling is considered.

On the other hand, for secure transactions with periodic cumulative authentication policies
µi (si , li , fi ) obtained by the MILP-based framework from Section 6, ECUs and the network will
commonly not be entirely utilized at runtime. Thus, in this section we consider the problem of
how intermittent authentication can be added at runtime, on top of a system for which we already
obtained strong timeliness and QoC-under-attack guarantees (i.e., Problem 2). As our goal is to
develop a runtime scheme that allocates available resources (CPU/network time) to authenticate
additional sensor messages, we assume that the following holds. First, each ECU needs to have
the knowledge of the network’s busy intervals, or equivalently, of the temporal parameters of the
network’s workload, to ensure that additional transmitted MACs do not affect timeliness of existing
periodic traffic. This is a valid assumption in low-level control networks (e.g., CAN bus that is
considered in the case study in Section 8.2), where traffic patterns are fully defined at design-time.
Secondly, each ECU needs to have knowledge of its own available processing time, to ensure that
additional MAC signing or verification can be performed without violating timing constraints
of existing transactions, and other periodic and worst-case sporadic workload. This is typically
satisfied for constrained embedded platforms targeted by this general framework, as they commonly
execute reservation-based RTOSs that enforce runtime timeliness guarantees.

In such systems, our goal is to develop a runtime policy to determine the optimal, or near-optimal
opportunities for additional sensor measurements to be authenticated. In essence, this policy defines
ECU-side computation of the priority level with which the specific MAC transmission will compete
with other ECUs attempting to opportunistically authenticate additional sensor measurements.

Intermittent authentications should only be allowed outside the times captured by the deployed
periodic cumulative authentication policies µ(si , li , fi ). To improve the overall QoC guarantees, we
consider QoC degradation curves Ji for every plant, and assign priority to a MAC transmission
based on the level of improvement in the overall QoC that the specific authenticated measurement

20

]
s
[

e
m

i
t
n
u
r

r
e
v
l
o
S

500
400
300
200
100
0

0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9
Task/message set utilization

Fig. 9. Average Gurobi solver runtime and 95% confidence intervals for synthetic systems with utilizations
0.1 − 0.9, constructed in accordance to the guidelines from [18].

Table 1. Distribution of tasks and messages among periods in synthetic workloads used for generic evaluation,
as well as non-QoC-related workloads used for the case study; the tasks and messages were obtained using
the guidelines for automotive benchmarks from [18].

period
[ms]
5
10
20
50
100
200
1000

share of preemptive
(ECU) workload
2.5 %
31.25 %
31.25 %
3.75 %
25 %
1.25 %
5 %

share of non-preemptive
(CAN bus) workload
2.63 %
32.89 %
32.89 %
3.95 %
26.32 %
1.32 %
—

would contribute. Specifically, we assign a reward ri (t) at time t to an opportunistic authentication as

ri (t) = ωi Ji (∆li (t), fi ), where ∆li (t) =

(cid:22) min (cid:0)t − tik −1, tik − t (cid:1)
pi

(cid:23)

,

and tik

where tik −1
are the nearest preceding and superseding periodic authentication release
times. This ensures that additional authentications are favored in the middle of periods of regularly
scheduled authentications, as that results in tighter bounds on the attacker. Moreover, the weights ωi
facilitate boosting priority of more important plants (e.g., steering over climate control).

This approach is practical as the light-weight priority computation can be performed on the ECU
itself in the case of the CAN bus, as the standard CAN protocol incorporates message priorities into
the message identification field, while transmission conflicts are intrinsically resolved. Alternatively,
the centralized scheduler assumed in TTCAN networks can enforce this policy, while each ECU
in FlexRay networks features a bus guardian, that enforces design-time network access patters
at runtime, and can be augmented with the aforementioned functionality. In Section 8.2, we
demonstrate how this approach can be used to significantly improve QoC under attack at runtime,
at the expense of small amounts of utilized processing times and network bandwidth.

8 EVALUATION

In this section, we evaluate our approach both on synthetic transaction sets (Section 8.1) and a
realistic automotive case-study (Section 8.2).

Integrating Security in Resource-Constrained Cyber-Physical Systems

21

d
e
c
u
d
n

i
-
k
c
a
t
t
a

.

x
a
M

r
o
r
r
e

.
t
s
e

e
t
a
t
s

0.9
0.8
0.6
0.4
0.2
0

0

4

2

6

8
14
Inter-enforcement distance lACC

10

12

f = 1
1.4
1.2
1
0.8
0.6
0.4
0.2
0

0

f = 2

f = 3

f = 4

f = 5

6

4

2

8
14
Inter-enforcement distance lDM

12

10

1
0.8
0.6
0.4
0.2
0

0

4

6

2
8
Inter-enforcement distance lLK

12

10

14

(a) Adaptive cruise control

(b) Driveline management

(c) Lane keeping

Fig. 10. QoC degradation curves for three considered systems — maximal attack-induced state estimation
error is bounded given a specific integrity enforcement policy determined by inter-enforcement distance li and
authentication block length fi . Note that the adaptive cruise control system requires at least two consecutive
measurements to be authenticated (f sens
ACC

≥ 2).

8.1 Evaluation on Synthetic Systems

To evaluate general performance of our approach, we generate over 5000 synthetic systems, each
featuring 10 to 50 control transactions, following the guidelines for design of automotive bench-
marks from [18]. Since the guidelines focus on defining ECU-bound workloads, we redistribute
the angle-synchronous workload5 and workloads with periods 1 ms, 2 ms evenly to workloads
with other periods. This is done for synthetic message sets as most practical network workloads
do not include messages with such short periods. Similar benchmark modifications were used
in [9], and the resulting distribution among periods is summarized in Table 1. As in [18], we scale
execution times to assess performance under different utilization levels. Message transmission
times are computed based on full-size CAN bus payload of 64 bits by varying transmission rate,
to vary network utilization levels. Finally, we randomly assign extended frame distances, and
cumulative authentication block lengths in the range li ∈ [1, 5] and fi ∈ [1, 3], while assuming that
25% − 50% of tasks/messages are QoC-related (and the remaining workload are standard real-time
tasks/messages).

We evaluate scalability of our framework by applying the decomposed MILP approach to all
synthetic systems to complete the generated transaction sets. Fig. 9 summarizes Gurobi solver [29]
runtime as a function of the number of tasks/messages and task/message set utilization,6 showing
applicability of our approach. Larger task sets typically cause longer solver runtime due to a
generally larger parameter space. Relatively large variability can be attributed to random extended
frame distances, which determine the hyperperiod and harmonicity of extended frame executions.
Also, solver runtime is generally lower for unschedulable transaction sets regardless of the number
of tasks since the solver is typically able to quickly prune large portions of the variable space which
expedites conclusions about unschedulability – average runtime in this case is 55 s.

8.2 Case Study

We consider a realistic automotive case study where controllers for adaptive cruise control, lateral
control for lane tracking, and driveline management, are mapped onto 3 out of 8 ECUs, with all
ECUs also executing non-QoC-related workload as in Table 1. To model the controlled physical
plants, we adopted physical system models from [37], [38], [36]. The control tasks are receiving
sensor measurements from the eight ECUs communicating via a shared CAN bus. The network
load consists of 70 full-sized CAN frames with period distribution specified in Table 1, and 8

5Angle-synchronous tasks have periods that depend on the engine speed – i.e., the crankshaft angle determines job release.
6All computations are performed on a Sandy Bridge EP-based workstation with dual 3.3 GHz Intel Xeon CPUs and 64GB
of memory.

22

Reference

Distance to preceding vehicle [m]

Rate of change of distance [m/s]

Allowed mean distance error [m]

Allowed mean distance rate of change error [m/s]

e
d
u
t
i
l
p
m
A

1.5

1

0.5

0

0

1.5

1

0.5

0

0

5

10

15

20
time [s]

25

30

35

40

5

10

15

20
time [s]

25

30

35

40

1.5

1

0.5

0

0

5

10

15

20
time [s]

25

30

35

40

Fig. 11. Adaptive cruise control QoC under stealthy attack (starts at t = 20 s) without integrity enforce-
ments (left), periodic cumulative authentication with lACC = 5 (center), and with intermittent cumulative
authentication with

ˆlACC = 2.5 (right).

Reference

Lateral position error [m]

Yaw angle [rad]

Allowed lateral position error [m]

Allowed yaw angle error [rad]

e
d
u
t
i
l
p
m
A

0.4

0.2

0

0

5

10

15

0.4

0.2

0

0

25

30

35

40

0.4

0.2

0

0

5

10

15

20
time [s]

25

30

35

40

5

10

15

20
time [s]

25

30

35

40

20
time [s]

Fig. 12. Lane keeping QoC under stealthy attack (starts at t = 20 s) without integrity enforcements (left), with
a periodic cumulative authentication with lLK = 10 (center), and with intermittent cumulative authentication
with

ˆlLK = 2.86 (right).

full-sized CAN frames carrying sensor measurements with period pACC = pLK = pDM = 20 ms.
As 64 bit MACs are used to sign sensor measurements, to ensure low probability of forgery, an
entire additional frame needs to be transmitted for an authenticated measurement, as the standard
CAN payload is only 64 bits. With the standard 1Mbps CAN rate, regardless of ECU utilization the
system is not schedulable when every sensor measurement is signed.

Fig. 10 shows QoC degradation curves for these systems, based on which we can map admissi-
ble levels of state estimation error due to attack into computation and bandwidth requirements.
Specifically, we assume that state estimation error due to attack of no more than 0.4 m in distance
in speed is allowed in the case of adaptive cruise
to preceding vehicle, and no more than 0.1 m
s
control. Similarly, maximum attack-induced state estimation errors for lateral position error, its
rate of change, yaw angle error and its rate of change are set to 0.4 m, 0.1 m
,
, 0.01 rad, and 0.01 r ad
s
s
respectively. Finally, drive-shaft torsion, and its rate of change state estimation errors due to attack
, respectively. Thus, inter-enforcement distances and authentica-
are limited to 0.02 rad and 1 r ad
s
tion block lengths resulting from these requirements are lACC = 5, fACC = 3; lLK = 10, fLK = 2;
lDM = 10, fDM = 1.

Under these conditions, in the first step of our decomposed MILP approach, Gurobi solver takes
an average of 2716 s to return minimal deadlines for the considered message set and assign initial
authentication start times such that timeliness can be guaranteed for network messages. In the
second step, for a MILP that encompasses conditions for the three control ECUs, conditioned by
the previously obtained message deadlines, Gurobi takes an average of 937 s to complete the secure
transaction set with schedulable sensing task offsets and control task deadlines. Fig. 11 and Fig. 12
show the resulting trajectories for adaptive cruise control and lane keeping systems, when stealthy
attacks start at t = 10 s. Fig. 11 and Fig. 12(left) show effects of the attack without authentication;
both longitudinal and lateral control of the vehicle are entirely taken over by the stealthy attacker.
Fig. 11 and Fig. 12(center) show how the attack impact is contained within permissible limits when

Integrating Security in Resource-Constrained Cyber-Physical Systems

23

integrity of sensor data is enforced with the aforementioned periodic cumulative policies, resulting
in network utilization of Unet = 0.68.

To demonstrate benefits of using opportunistic scheduling to further improve the overall QoC
under attack, we simulate additional sporadic network traffic as well as opportunistically add MACs
(as described in Section 7) to sensor measurements that are not authenticated by periodic cumulative
authentications. Sporadic messages are assumed to arrive with minimum inter-arrival time of 10 ms
utilizing up to 5% of the network bandwidth. The resulting mean inter-authentication distance
for the three systems under consideration is ˆlACC = 2.5, ˆlLK = 2.86, and ˆlDM = 2.31, respectively.
Fig. 11 and Fig. 12(right) show significantly improved QoC levels under attack, while the shared
network utilization increases on average by 10% due to opportunistic authentications. The final net-
work utilization is Unet = 0.84. ECU utilization increases on average by only 1.5% to support signing
and verification of additional MACs, illustrating the applicability of the presented framework.

9 RELATED WORK

Integrating security guarantees into legacy and resource-constrained systems has attracted sig-
nificant research attention. For instance, in [13] the authors explore opportunistic execution of
security services in legacy real-time systems, while leveraging hierarchical scheduling to ensure
that schedulability of existing tasks is not impaired. The security performance metric proposed
therein is the frequency of periodic execution of security services. In [47], a novel scheduling policy
is proposed for embedded systems to ensure schedulability of real-time control tasks subject to both
timing and security constraints. This is achieved by optimal distribution of slack times which are
computed after schedulability of existing control tasks is guaranteed. Among a variety of security
services, an optimal schedule is constructed based on abstract relative security levels. In [24], the
authors devise a security-aware EDF schedulability test. Therein, security services are grouped
by security level and execution of security services from different groups is combined to increase
Quality-of-Security (e.g., message encryption can be combined with authentication to protect both
confidentiality and integrity of transmitted data). Consequently, group-based security model is
integrated with EDF scheduling and a security-aware optimization problem is formulated around
scheduling of suitable security services given a set of real-time tasks. However, it is important
to highlight that no existing work provides a direct relationship between resource utilization
and actual systems’ performance pertaining to its main functionality (i.e., control performance,
Quality-of-Control) – in fact, only abstract security levels are considered.

Transaction scheduling is typically considered separately for time- and event-triggered commu-
nication models. Event-triggered transaction scheduling requires additional overheads for event
signalling, i.e., synchronization between the transmitting and receiving nodes is explicitly ob-
tained by transmission of additional messages. Examples of works addressing analysis of such
transaction implementation schemes are [43, 44]. For systems where network traffic patterns are
determined by design, and resources (both processor computation power and network bandwidth)
are severely constrained, satisfaction of timing constraints for transactions can be achieved by
careful offset/dedline enforcement — the approach considered in this paper. Traditional offset-based
schedulability analysis for distributed systems under rate monotonic were presented in the original
holistic analysis framework from [46], and further improved in [12, 33]. Furthermore, this analysis
has been extended to EDF in [41]. However, only the standard task models are observed, and these
works mostly focus on computing response times while no optimization framework is devised
to generate feasible offsets (or deadlines). In [4], the authors develop a technique to compute a
(sufficient) region of admissible deadlines given a set of tasks under EDF, which enables the designer

24

to optimize the desired performance metric. However, this approach is non-trivial to integrate into
an end-to-end schedulability analysis framework, due to its recursive algorithmic nature.

10 CONCLUSION

In this paper, we have presented a MILP-based framework for integrating security guarantees with
end-to-end timeliness requirements for control transactions in resource-constrained CPS. We have
shown that the use of physics-based anomaly/intrusion detectors and intermittent message authen-
tication results in strong QoC performance guarantees in the presence of network-based attacks
without significant security-related resource overhead. We have also shown how the security-related
overhead can be additionally reduced with the use of cumulative authentication policies, which can
be implemented such that real-time guarantees for control-related tasks and messages are retained,
while QoC in the presence of attacks is maintained within the permissible design-time limits. In addi-
tion, we have presented a method to integrate intermittent authentication policies in a near-optimal
manner from the QoC standpoint, to opportunistically exploit available processor time and network
bandwidth at runtime. As our approach fully supports cumulative authentication policies, it can be
used for dynamical systems where solely authenticating a single sensor measurement periodically
or intermittently is not sufficient to provide QoC guarantees under attack. Finally, for large-scale
systems where a unified scheduling approach for all ECUs and network may be intractable, we
have shown how the problem can be decomposed in a platform/implementation-specific manner.
We have demonstrated scalability and effectiveness of our approach on both synthetic systems and
a realistic automotive case study and shown that security guarantees can be incorporated without
violating existing timeliness properties even with limited resource availability.

REFERENCES

[1] A. Anta and P. Tabuada. 2009. On the Benefits of Relaxing the Periodicity Assumption for Networked Control Systems

over CAN. In 2009 30th IEEE Real-Time Systems Symposium. 3–12.

[2] Sanjoy K Baruah. 2006. The non-preemptive scheduling of periodic tasks upon multiprocessors. Real-Time Systems 32,

1 (2006), 9–20.

[3] Sanjoy K. Baruah, Louis E. Rosier, and Rodney R. Howell. 1990. Algorithms and complexity concerning the preemptive

scheduling of periodic, real-time tasks on one processor. Real-Time Systems 2, 4 (01 Nov 1990), 301–324.

[4] E. Bini and G. Buttazzo. 2007. The Space of EDF Feasible Deadlines. In 19th Euromicro Conference on Real-Time Systems

(ECRTS’07). 19–28. https://doi.org/10.1109/ECRTS.2007.35

[5] G. C. Buttazzo. 2011. Hard Real-Time Computing Systems: Predictable Scheduling Algorithms and Applications (3rd ed.).

Springer, 110–114.

[6] Stephen Checkoway, Damon McCoy, Brian Kantor, Danny Anderson, Hovav Shacham, Stefan Savage, Karl Koscher,
Alexei Czeskis, Franziska Roesner, Tadayoshi Kohno, et al. 2011. Comprehensive experimental analyses of automotive
attack surfaces. In Proceedings of USENIX Security.

[7] Thomas M Chen and Saeed Abu-Nimeh. 2011. Lessons from stuxnet. Computer 44, 4 (2011), 91–93.
[8] Belotti et al. 2016. On handling indicator constraints in mixed integer programming. Computational Optimization and

Applications 65, 3 (01 Dec 2016), 545–566.

[9] P. Joshi et al. 2017. Offset Assignment to Signals for Improving Frame Packing in CAN-FD. In 2017 IEEE Real-Time

Systems Symposium (RTSS). 167–177.

[10] H. Fawzi, P. Tabuada, and S. Diggavi. 2014. Secure Estimation and Control for Cyber-Physical Systems Under

Adversarial Attacks. IEEE Trans. Automat. Control 59, 6 (2014), 1454–1467.

[11] A. Greenberg. 2015. Hackers Remotely Kill a Jeep on the Highway, Wired Magazine.
[12] J. C. Palencia Gutierrez, J. J. Gutierrez Garcia, and M. Gonzalez Harbour. 1998. Best-case analysis for improving the
worst-case schedulability test for distributed hard real-time systems. In Proceeding. 10th EUROMICRO Workshop on
Real-Time Systems (Cat. No.98EX168). 35–44. https://doi.org/10.1109/EMWRTS.1998.684945

[13] M. Hasan, S. Mohan, R. B. Bobba, and R. Pellizzoni. 2016. Exploring Opportunistic Execution for Integrating Security

into Legacy Hard Real-Time Systems. In 2016 IEEE Real-Time Systems Symposium (RTSS). 123–134.

[14] I. Jovanov and M. Pajic. 2017. Relaxing Integrity Requirements for Resilient Control Systems. CoRR abs/1707.02950

(2017). https://arxiv.org/abs/1707.02950

Integrating Security in Resource-Constrained Cyber-Physical Systems

25

[15] I. Jovanov and M. Pajic. 2017. Sporadic data integrity for secure state estimation. In 2017 IEEE 56th Annual Conference

on Decision and Control (CDC). 163–169. https://doi.org/10.1109/CDC.2017.8263660

[16] I. Jovanov and M. Pajic. 2018. Secure State Estimation with Cumulative Message Authentication. In 2018 IEEE 57th

Annual Conference on Decision and Control (CDC). to appear.

[17] Karl Koscher, Alexei Czeskis, Franziska Roesner, Shwetak Patel, Tadayoshi Kohno, Stephen Checkoway, Damon McCoy,
Brian Kantor, Danny Anderson, Hovav Shacham, and Stefan Savage. 2010. Experimental Security Analysis of a Modern
Automobile. In IEEE Symp. on Security and Privacy (SP). 447 –462.

[18] Simon Kramer, Dirk Ziegenbein, and Arne Hamann. 2015. Real world automotive benchmarks for free. In 6th

International Workshop on Analysis Tools and Methodologies for Embedded and Real-time Systems (WATERS).

[19] Cheolhyeon Kwon, Weiyi Liu, and Inseok Hwang. 2014. Analysis and Design of Stealthy Cyber Attacks on Unmanned

Aerial Systems. Journal of Aerospace Information Systems 1, 8 (2014).

[20] Ralph Langner. 2011. Stuxnet: Dissecting a cyberwarfare weapon. Security & Privacy, IEEE 9, 3 (2011), 49–51.
[21] V. Lesi, I. Jovanov, and M. Pajic. 2017. Network Scheduling for Secure Cyber-Physical Systems. In 2017 IEEE Real-Time

Systems Symposium (RTSS). 45–55. https://doi.org/10.1109/RTSS.2017.00012

[22] Vuk Lesi, Ilija Jovanov, and Miroslav Pajic. 2017. Security-Aware Scheduling of Embedded Control Tasks. ACM Trans.

Embed. Comput. Syst. 16, 5s, Article 188 (Sept. 2017), 21 pages. https://doi.org/10.1145/3126518

[23] Joseph Y.-T. Leung and M.L. Merrill. 1980. A note on preemptive scheduling of periodic, real-time tasks. Inform. Process.

Lett. 11, 3 (1980), 115 – 118.

[24] M. Lin, L. Xu, L. T. Yang, X. Qin, N. Zheng, Z. Wu, and M. Qiu. 2009. Static Security Optimization for Real-Time

Systems. IEEE Transactions on Industrial Informatics 5, 1 (Feb 2009), 22–37.

[25] F. Miao, Q. Zhu, M. Pajic, and G. J. Pappas. 2017. Coding Schemes for Securing Cyber-Physical Systems Against
Stealthy Data Injection Attacks. IEEE Transactions on Control of Network Systems 4, 1 (March 2017), 106–117. https:
//doi.org/10.1109/TCNS.2016.2573039

[26] Y. Mo, E. Garone, A. Casavola, and B. Sinopoli. 2010. False data injection attacks against state estimation in wireless

sensor networks. In 49th IEEE Conference on Decision and Control (CDC). 5967–5972.
[27] A. K. Mok and D. Chen. 1996. A multiframe model for real-time tasks. (1996), 22–29.
[28] Dennis K Nilsson, Ulf E Larson, and Erland Jonsson. 2008. Efficient in-vehicle delayed data authentication based on

compound message authentication codes. In 68th IEEE Vehicular Technology Conference, VTC 2008-Fall. 1–5.

[29] Gurobi Optimization Inc. 2014. Gurobi optimizer reference manual. (2014).
[30] M. Pajic, I. Lee, and G. J. Pappas. 2017. Attack-Resilient State Estimation for Noisy Dynamical Systems. IEEE Transactions

on Control of Network Systems 4, 1 (March 2017), 82–92. https://doi.org/10.1109/TCNS.2016.2607420

[31] M. Pajic, J. Weimer, N. Bezzo, O. Sokolsky, G. J. Pappas, and I. Lee. 2017. Design and Implementation of Attack-Resilient
Cyberphysical Systems: With a Focus on Attack-Resilient State Estimators. IEEE Control Systems 37, 2 (April 2017),
66–81. https://doi.org/10.1109/MCS.2016.2643239

[32] M. Pajic, J. Weimer, N. Bezzo, P. Tabuada, O. Sokolsky, Insup Lee, and G.J. Pappas. 2014. Robustness of attack-
resilient state estimators. In ACM/IEEE International Conference on Cyber-Physical Systems (ICCPS). 163–174. https:
//doi.org/10.1109/ICCPS.2014.6843720

[33] J. C. Palencia and M. Gonzalez Harbour. 1998. Schedulability analysis for tasks with static and dynamic offsets. In

Proceedings 19th IEEE Real-Time Systems Symposium. 26–37. https://doi.org/10.1109/REAL.1998.739728

[34] Fabio Pasqualetti, F Dorfler, and Francesco Bullo. 2013. Attack detection and identification in cyber-physical systems.

IEEE Trans. Automat. Control 58, 11 (2013), 2715–2729.

[35] A. Perrig, R. Canetti, J. D. Tygar, and Dawn Song. 2000. Efficient authentication and signing of multicast streams over

lossy channels. In Proceeding 2000 IEEE Symposium on Security and Privacy. S P 2000. 56–73.

[36] M. Pettersson. 1997. Driveline modeling and control. Ph.D. Dissertation. Department of Electrical Engineering, Linköping

University.

[37] Jeroen Ploeg, Elham Semsar-Kazerooni, Guido Lijster, Nathan van de Wouw, and Henk Nijmeijer. 2015. Graceful
degradation of cooperative adaptive cruise control. IEEE Trans. on Intelligent Transportation Systems 16, 1 (2015),
488–497.

[38] Rajesh Rajamani. 2011. Vehicle dynamics and control.
[39] Yasser Shoukry, Michelle Chong, Masashi Wakaiki, Pierluigi Nuzzo, Alberto Sangiovanni-Vincentelli, Sanjit A Seshia,
Joao P Hespanha, and Paulo Tabuada. 2018. SMT-based observer design for cyber-physical systems under sensor
attacks. ACM Transactions on Cyber-Physical Systems 2, 1 (2018), 5.

[40] R.S. Smith. 2011. A decoupled feedback structure for covertly appropriating networked control systems. Proceedings of

IFAC World Congress (2011), 90–95.

[41] Marco Spuri. 1996. Analysis of deadline scheduled real-time systems. Ph.D. Dissertation. Inria.
[42] John A. Stankovic, Krithi Ramamritham, and Marco Spuri. 1998. Deadline Scheduling for Real-Time Systems: EDF and

Related Algorithms.

26

[43] Jun Sun, Riccardo Bettati, and JW-S Liu. 1994. An end-to-end approach to schedule tasks with shared resources in
multiprocessor systems. In Real-Time Operating Systems and Software, 1994. RTOSS’94, Proceedings., 11th IEEE Workshop
on. IEEE, 18–22.

[44] Jun Sun and Jane Liu. 1996. Synchronization protocols in distributed real-time systems. In Distributed Computing

Systems, 1996., Proceedings of the 16th International Conference on. IEEE, 38–45.

[45] André Teixeira, Daniel Pérez, Henrik Sandberg, and Karl Henrik Johansson. 2012. Attack models and scenarios for

networked control systems. In Int. Conf on High Confidence Networked Systems (HiCoNS). 55–64.

[46] Ken Tindell. 1994. Adding time-offsets to schedulability analysis. Citeseer.
[47] Tao Xie and Xiao Qin. 2007. Improving Security for Periodic Tasks in Embedded Systems Through Scheduling. ACM

Trans. Embed. Comput. Syst. 6, 3, Article 20 (July 2007).

[48] Qin Zheng and K. G. Shin. 1994. On the ability of establishing real-time channels in point-to-point packet-switched

networks. IEEE Transactions on Communications 42, 234 (Feb 1994), 1096–1105.

[49] Khawar M Zuberi and Kang G Shin. 1997. Scheduling messages on controller area network for real-time CIM

applications. IEEE Transactions on Robotics and Automation 13, 2 (1997), 310–316.

