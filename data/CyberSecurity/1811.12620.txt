Change Point Models for Real-time V2I Cyber Attack
Detection in a Connected Vehicle Environment

Paper Number:19-03063
Gurcan Comert, Computer Science, Physics, and Engineering, Benedict College
1600 Harden St., Columbia, SC 29206, Tel:(803) 705 4803, Email:gurcan.comert@benedict.edu

Mizanur Rahman, Ph.D.Postdoctoral Fellow,Center for Connected Multimodal Mobility (C2M2)
Glenn Department of Civil Engineering, Clemson University
127 Lowry Hall, Clemson, SC 29634,Tel: (864) 650-2926; Email: mdr@clemson.edu

Mhafuzul Islam, Glenn Department of Civil Engineering, Clemson University
351 Flour Daniel, Clemson, SC 29634, Tel: (864) 986-5446
Email: mdmhaﬁ@clemson.edu

Mashrur Chowdhury, Eugene Douglas Mays Endowed Professor of Transportation
Professor of Automotive Engineering, Clemson University
Glenn Department of Civil Engineering
216 Lowry Hall, Clemson, South Carolina 29634, Tel: (864) 656-3313
Email: mac@clemson.edu
Submitted for presentation and publication to
the 98th Annual Meeting of the Transportation Research Board
January 13-17, 2019

December 3, 2018

8
1
0
2

v
o
N
0
3

]

R
C
.
s
c
[

1
v
0
2
6
2
1
.
1
1
8
1
:
v
i
X
r
a

Acknowledgments:This material is based on the study supported by the Center for Connected Multimodal Mobility
(C 2M 2) (USDOT Tier 1 University Transportation Center) Grant headquartered at Clemson University, Clemson, South
Carolina, USA. Any opinions, ﬁndings, and conclusions or recommendations expressed in this material are those of
the author(s) and do not necessarily reﬂect the views of the Center for Connected Multimodal Mobility, and the U.S.
Government assumes no liability for the contents or use thereof. It is also partially supported by U.S. Department of
Homeland Security Summer Research Team Program Follow-On grant and NSF Grant No. 1719501.

 
 
 
 
 
 
Comert, Rahman, Islam, and Chowdhury

1

1. INTRODUCTION
From recent reports of National Highway Trafﬁc Safety Administration (1, 2), several beneﬁts are foreseen with
connected and autonomous vehicle (CAV) technologies such as up to 80% reduction in fatalities from multi-
vehicle crashes and preventing the majority of human error related incidents.
In such CAV systems, massive
amounts of data will be produced and exchanged between different components through different data commu-
nication medium, such as Dedicated Short Range Communication (DSRC), WiFi, 5G, and Long Term Evolution
(LTE) (3, 4). These data can be processed in a cloud, or in an edge computing device at the roadside (i.e., roadside
transportation infrastructure) based on different CAV application requirements (4, 5). Communication technolo-
gies supporting data exchange must also be secured to support CAV operations with speciﬁc requirements (e.g.,
delay, bandwidth, and communication range). With the increase of connectivity in transportation networks, this
CAV systems is cognizant of potential cyberattacks (6, 7).

As cyberattacks are dynamic, it is a challenge to detect security threats in real-time and develop effective coun-
termeasures for connected transportation system (8). To increase security and resiliency due to possible attacks
or benign system errors, research is needed to investigate detection techniques for different attack types, such as
denial of service (DoS), impersonation, false information (9, 10). Anomaly detection techniques are well-studied
in various areas. Speciﬁcally, the cybersecurity of ﬁrmware updates, cybersecurity on heavy vehicles, vehicle-to-
vehicle (V2V) communication interfaces, and trusted vehicle-to-everything (V2X) communications (11). Different
type of anomaly detection models exist in literature where recent survey studies related to anomaly detection sum-
marize a comprehensive review of machine learning and rule (signature)-based methods, and their applications to
(12, 13). Rule-based attack detection models, originated from cryptography,
intrusion detection systems (IDS)
are abundant especially for their efﬁciency and computationally light-weight (14). However, rule-based models
require a detailed understanding of the data generation process and adaptivity or customization based on their re-
spective environment to develop the model. On the other hand, both machine learning and data mining-based attack
detection models are adaptable to different attack types both known and unknown patterns. Major concerns here
are computational complexity for real-time application, training the model with different cyber attack scenarios,
unavailability of cyberattack types in the transportation domain, and determination of update or retraining window.
To address these problems, statistical models, specially the change point models, are applicable because of the
following advantages: (1) do not require ﬁtting or training; (2) adaptive to different attack data (do not use rules);
(3) perform with low data sample sizes; and (4) computationally efﬁcient for real-time applications. Thus, the
objective of this study is to investigate the efﬁcacy of two change point models, Expectation Maximization (EM)
and Cumulative Sum (CUSUM), for real-time vehicle to infrastructure (V2I) cyberattack detection in a connected
vehicle (CV) Environment. To prove the efﬁcacy of these models, we implemented three different type of cyber-
attacks (i.e., denial of service (DoS), impersonation, and false information) (15), using BSMs generated from CVs
through simulation.

2. METHODOLOGY
In this study, we investigate statistical change point models, Expectation Maximization (EM) and Cumulative
Summation (CUSUM), to detect cyberattacks in a V2I environment.

Expectation Maximization Algorithm
The Expectation Maximization (EM) algorithm is often used to estimate the parameters of mixture models or
models with latent variables (16, 17). Here, EM algorithm is utilized for detecting changes in the process, i.e.,
cyberattacks (12). In sequential framework, the model consists of a hidden state variable (i.e., normal, abnormal)
Xt and an observation variable Yt at time t. The state of the model at time t depends only on the previous state of the
model at immediate past Xt−1 through probability distribution P (Xt|Xt−1). Given N data points that are assumed
to be generated by mixture of two distributions (i.e., normal and abnormal messages per vehicle per second (MVS),
messages per vehicle (MVT), and distance), the EM algorithm is applied to determine the distribution parameters
and probability of an cyberattack.

Comert, Rahman, Islam, and Chowdhury

2

CUSUM Algorithm
The CUSUM algorithm is commonly used for quality control purposes to detect possible shifts in data generating
process characteristics. In cyberattack setting, changes within expected level of deduced measures (MVS, MVT,
and distance) are targeted. This paper uses tabular or algorithmic version of the CUSUM rather than control
chart. To detect both positive and negative shifts, the two-sided version of the CUSUM algorithm was used. The
algorithm works by accumulating positive and negative deviations from a certain target mean, which is commonly
taken to be zero. The positive deviations (values above the target) are indicated with C +
t , and those that are below
−
the target are indicated with C
t are referred to as one-sided upper and lower CUSUMs,
respectively (18). The algorithm is then applied to the change point detection of the time series within basic safety
messages (BSMs).

−
t . The statistics C +

t and C

3. FINDINGS
Data Generation for V2I Cyber-attacks
In order to generate the realistic trafﬁc behavior, a microscopic trafﬁc simulation software, Simulation of Urban
Mobility (SUMO) is used (19). All vehicle movements are recorded in trace ﬁles. A trace ﬁle contains time
stamp, vehicle ID, latitude, longitude and speed of each vehicle moving on the Perimeter Road, Clemson, South
Carolina, which is a part of the Clemson University-Connected and Autonomous Vehicle Testbed (CU-CAVT).
The simulation is comprised of 200 vehicles per hour per lane on Perimeter Road, a four-lane arterial roadway
(two lanes each direction) with 35 miles per hour (mph) speed limit.

Using the generated trace ﬁles, three different cyberattack scenarios are generated: (i) denial of service (DoS)
attack; (ii) false information attack; and (iii) impersonation attack. For generating DoS attack data, vehicle with ID
6 is passed a data ﬂooding at 1000 packets per second while other vehicles are sharing data at 10 packets per second
to mimic the real-world CV environment where each CV is broadcasts BSMs every one tenth of a second. The
total simulation time is 200 seconds (s). For fake (or false) information attack, false GPS location information (i.e.,
longitude and latitude) of vehicle ID 2 are generated simply using Python random variable generation function. To
emulate the data for impersonation attack, a false ID for vehicle number 3 is used as vehicle ID 2. Two different
GPS location and speed information for the vehicle ID 2 are simultaneously generated.

Examples of generated attack data are given in Table 1. Evident from the table, multilevel attack monitoring
could be designed such as vehicle ID by vehicle ID and time with micro level tracking (0.1 sec) of data values.
The study tracks aggregate measures, such as average message frequency per vehicle per second (MV S), average
message frequency per vehicle per time interval (MV T ), distances, and/or track of time series-vehicle speeds and
detects changes.

Comert, Rahman, Islam, and Chowdhury

3

TABLE 1 . Examples of attack data generated on RSE

Type
DoS

IMPER.

FALSE

TS(s)
5.10
5.10
5.10
5.10
5.10
5.10
5.10
1.30
1.30
1.40
1.40
1.40
1.50
1.50
2.00
2.00
2.00
2.10
2.10
2.10
2.20
2.20

ID

Lat. Long. Speed(m/s) Pos.(m) MsgRate
10.00
9.94
10.00
8.22
10.00
6.21
10.00
2.32
10.12
0.00
10.23
0.00
10.35
0.00
1.00
2.65
1.00
0.51
1.00
2.87
1.00
0.75
2.00
1.00
1.00
3.19
1.00
1.24
1.00
4.15
1.00
2.26
1.00
0.00
1.00
4.31
1.00
2.48
1.00
0.26
1.00
4.57
1.00
2.62

34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.16
34.68
34.68
34.30
34.68
34.68

0.08
0.52
0.74
0.14
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
72.32
0.00
0.00
71.20
0.00
0.00

1 -82.85
2 -82.85
3 -82.85
5 -82.84
6 -82.84
6 -82.84
6 -82.84
1 -82.85
2 -82.85
1 -82.85
2 -82.85
2 -82.85
1 -82.85
2 -82.85
1 -82.85
2 -82.85
3 -82.04
1 -82.85
2 -82.85
3 -82.81
1 -82.85
2 -82.85

Attack Detection Framework
Figure 1 depicts the approach of attack detection using EM and CUSUM. In order to implement change point
detection, ﬁrst step is to identify the processing time window in which information need to track, and how to convert
such information into sequence to detect shifts due to malicious attacks and/or benign system malfunctions. In
DoS or ﬂooding attacks, vehicles are expected to send more messages than the designed frequency parameter (e.g.,
MVS). Therefore, tracking messages per vehicle and estimating MVS can be used as indicators for detection. For
impersonation attack, multiple messages in unit time interval (0.1 s) are sent, and by monitoring MVT, this type of
attack is detected. Lastly, false information can be deﬁned as any type of irregularity in the collected messages, such
as high or low vehicle speed compared to rest of the trafﬁc (inherent) at a roadway segment or an unrealistic gap
between any two adjacent vehicles within a certain time frame. CUSUM monitors deviations from process mean
and identiﬁes violations. On the other hand, EM calculates conditional probabilities of P (DoSattack|MV S) >
0.001, where P (impersonation|MV T ) and P (attackstate|distance) are given. Simply, if the likelihood at any
time is > 0.001, then an attack is detected.

Comert, Rahman, Islam, and Chowdhury

4

FIGURE 1 . Attack detection approach in V2I connected vehicle environment.

In Table 2, position of a vehicle column is calculated in meters (m) from two consecutive latitude and longitude
values. MST and MSV measures are deduced from time and ID columns for every time interval of 0.1 s and
time series are generated for statistical detection. It should also be noted that for the DoS attack vehicle number
6 is not sending speed and location correctly. Attack detection using the change of speed and distance would
be trivial. Attacker would also replicate reasonable values. So, detection is carried out using message frequency
in MSV. From the table, EM’s P (attack|observation) is denoted as P (D|Yt) > 0.001 resulting as detection
(D) otherwise no detection (ND). Similarly for CUSUM, (C +, C −) values are given. Based on these values, when
(C +orC −) > 5σ a detection is observed, otherwise ND is issued. Persistent attacks are easily detected by CUSUM
and EM. CUSUM continues to detect normal observations as attacks (i.e.,an out-of-control process) and generates
false positive errors. This can be ﬁxed in CUSUM with a slight revision in C − values mimicking one-sided control.

Comert, Rahman, Islam, and Chowdhury

5

TABLE 2 . Examples of attack data on RSE and detection by EM and CUSUM

IMP

Type Freq. TS(s)
5.00
127
DoS
5.00
128
5.00
129
5.00
130
5.10
131
5.10
132
5.10
133
5.10
134
5.10
135
5.10
136
5.10
137
1.20
13
1.20
14
1.30
15
1.30
16
1.40
17
1.40
18
1.40
19
1.50
20
1.50
21
2.00
31
2.00
32
2.00
33
2.10
34
2.10
35
2.10
36
2.20
37
2.20
38
2.20
39
2.30
40
2.30
41
2.30
42
2.40
43

FLS

(0.12,0) D
(0.12,0) D
(0.29,0) D

ID Spd(m/s) Pos.(m) Msgs. P (D|Yt) EM (C +, C −) CUS
(0,0) ND
1
(0,0) ND
2
(0,0) ND
3
(0,0) ND
5
(0,0) ND
1
(0,0) ND
2
(0,0) ND
3
5
(0,0) ND
6
6
6
1
2
1
2
1
2
2
1
2
1
2
3
1
2
3
1
2
3
1
2
3
1

0.00 ND
0.00 ND
0.00 ND
0.00 ND
0.00 ND
0.00 ND
0.00 ND
0.00 ND
0.02 D
0.05 D
0.09 D
0.00 ND
0.00 ND
0.00 ND
0.00 ND
0.00 ND
0.00 ND
0.67 D
0.00 ND
0.00 ND
0.00 ND
0.00 ND
1.00 D
0.00 ND
0.00 ND
1.00 D
0.00 ND
0.00 ND
1.00 D
0.00 ND
0.00 ND
1.00 D
0.00 ND

10.00
10.00
10.00
10.00
10.00
10.00
10.00
10.00
10.12
10.23
10.35
1.00
1.00
1.00
1.00
1.00
1.00
2.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00

0.08
0.52
0.74
0.40
0.08
0.52
0.74
0.14
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
72.32
0.00
0.00
71.20
0.00
0.00
49.76
0.00
0.00
34.29
0.00

9.73
8.08
5.97
2.14
9.94
8.22
6.21
2.32
0.00
0.00
0.00
2.44
0.26
2.65
0.51
2.87
0.75
1.00
3.19
1.24
4.15
2.26
0.00
4.31
2.48
0.26
4.57
2.62
0.52
4.81
2.83
0.75
4.95

(72.2,0) D
(0,72.3) D
(72.2,0) D
(34.9,0) D
(0,11.7) D
(5.8,0) D
(48.2,0) D
(0,9.7) D
(3.2,0) D
(33.6,0) D
(0,4.9) D

(0,0) ND
(0,0) ND
(0,0) ND
(0,0) ND
(0,0) ND
(0,0) ND

0.99,0 D
0,0.99 D
0.99,0 D

(0,0) ND
(0,0) ND

4. CONCLUSIONS
In this study, we investigated the efﬁcacy of two statistical change point models, EM and CUSUM, for real-
time V2I cyberattack detection in a CV Environment. We evaluated these two models for three different type of
cyberattacks, DoS, impersonation, and false information, using BSMs. Instead of tracking data values such as
message frequency, speed, and distance individually for each time interval and vehicle ID, aggregate measures are
deduced from BSMs to be used in effective real-time detection. Based on the numerical analysis, we found that:

(i) Given proper initialization, i.e., mean and variance of normal and abnormal cases, and enough computa-

tional power, both algorithms can detect all three attack types accurately.

(ii) When attack detection time window is critical such as safety applications, for EM, it is greater than < 0.1

second, whereas, the time window for CUSUM is below 0.1 second.

(iii) When multiple states could be observed for an attack or to classify different impacts, as well as any changes
in the normal roadside unit communication frequencies, EM algorithm would be able to provide conditional
probabilities for multiple states.

Results from numerical analysis also revealed that both EM and CUSUM could detect these cyberattacks with
accuracy of at least 98% and 98%, respectively. Both models can be applied for real-time cyber attack detection

Comert, Rahman, Islam, and Chowdhury

6

with a one-second interval. Possible improvements to this research can be listed as: (1) further research is needed
to investigate factors affecting the optimal selection of such parameters with multiple data sets; (2) comprehensive
attack modeling can be developed.

REFERENCES
[1] Kaiser, L., Transportation Industrial Control System (ICS) Cybersecurity Standards Strategy 2013-2023.

Technical report, National Highway Trafﬁc Safety Administration, 2013.

[2] NHTSA, Cybersecurity best practices for modern vehicles. Technical Report Report No. DOT HS 812 333,

National Highway Trafﬁc Safety Administration, USDOT, 2016.

[3] Burt, M., M. Cuddy, and M. Razo, Big Dataâ ˘A ´Zs Implications for Transportation Operations: An Explo-

ration, 2014.

[4] CVRIA, Connected Vehicle Reference Implementation Architecture. http : //local.iteris.com/cvria, 2015,

accessed: 2017-06-26.

[5] Whaiduzzaman, M., M. Sookhak, A. Gani, and R. Buyya, A survey on vehicular cloud computing. Journal

of Network and Computer Applications, Vol. 40, 2014, pp. 325–344.

[6] Raya, M. and J.-P. Hubaux, Securing vehicular ad hoc networks. Journal of computer security, Vol. 15, No. 1,

2007, pp. 39–68.

[7] Ofﬁce, U. S. G. A., Vehicle Cyber Security: DOT and Industry Have Efforts Under Way, but DOT Needs
to Deﬁne Its Role in Responding to a Real-World Attack. http : //www.gao.gov/assets/680/676064.pdf ,
2018, accessed: 2018-07-31.

[8] Nicol, M. D., Critical Infrastructure Resilience Institute, 2016, talk, USCG.

[9] Pathre, A., C. Agrawal, and A. Jain, A novel defense scheme against DDOS attack in VANET. In Wireless
and Optical Communications Networks (WOCN), 2013 Tenth International Conference on, IEEE, 2013, pp.
1–5.

[10] Mejri, M. N., J. Ben-Othman, and M. Hamdi, Survey on VANET security challenges and possible crypto-

graphic solutions. Vehicular Communications, Vol. 1, No. 2, 2014, pp. 53–66.

[11] Petit, J. and S. E. Shladover, Potential cyberattacks on automated vehicles. IEEE Transactions on Intelligent

Transportation Systems, Vol. 16, No. 2, 2015, pp. 546–556.

[12] Buczak, A. L. and E. Guven, A survey of data mining and machine learning methods for cyber security
intrusion detection. IEEE Communications Surveys & Tutorials, Vol. 18, No. 2, 2016, pp. 1153–1176.

[13] Patcha, A. and J.-M. Park, An overview of anomaly detection techniques: Existing solutions and latest tech-

nological trends. Computer networks, Vol. 51, No. 12, 2007, pp. 3448–3470.

[14] Sedjelmaci, H., S. M. Senouci, and M. A. Abu-Rgheff, An efﬁcient and lightweight intrusion detection mech-
anism for service-oriented vehicular networks. IEEE Internet of things journal, Vol. 1, No. 6, 2014, pp. 570–
577.

[15] van der Heijden, R. W., S. Dietzel, T. Leinmüller, and F. Kargl, Survey on Misbehavior Detection in Cooper-

ative Intelligent Transportation Systems. arXiv preprint arXiv:1610.06810, 2016.

[16] Dempster, A. P., N. M. Laird, and D. B. Rubin, Maximum likelihood from incomplete data via the EM

algorithm. Journal of The Royal Statistical Society, Series B, Vol. 39, No. 1, 1977, pp. 1–38.

Comert, Rahman, Islam, and Chowdhury

7

[17] Hastie, T., R. Tibshirani, and J. Friedman, The Elements Statistical Learning: Data Mining, Inference, and

Prediction. Springer, 2nd ed., 2009.

[18] Montgomery, D. C., Introduction to statistical quality control. John Wiley & Sons (New York), 2009.

[19] Krajzewicz, D. and C. Rossel, Simulation of urban mobility (SUMO). Centre for Applied Informatics (ZAIK)

and the Institute of Transport Research at the German Aerospace Centre, 2007.

