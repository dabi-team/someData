9
1
0
2

r
a

M
1
2

]

R
C
.
s
c
[

1
v
8
1
9
8
0
.
3
0
9
1
:
v
i
X
r
a

From Cyber-Security Deception To
Manipulation and Gratiﬁcation Through
Gamiﬁcation

Xavier Bellekens1, Gayan Jayasekara1, Hanan Hindy1, Miroslav Bures1,3,
David Brosset2, Christos Tachtatzis4 and Robert Atkinson4

1 Abertay University, Division of Cyber-Security, Scotland
2 Chair of Naval Cyber Defense, Ecole navale, France
3 Czech Technical University in Prague, Dpt. of Computer Science, Faculty of
Electrical Engineering, Czech Republic
4 University of Strathclyde, Dpt. of Electronic & Electrical Engineering, Scotland

Abstract. With the ever growing networking capabilities and services
oﬀered to users, attack surfaces have been increasing exponentially, ad-
ditionally, the intricacy of network architectures has increased the com-
plexity of cyber-defenses, to this end, the use of deception has recently
been trending both in academia and industry. Deception enables to cre-
ate proactive defense systems, luring attackers in order to better defend
the systems at hand. Current applications of deception, only rely on
static, or low interactive environments. In this paper we present a plat-
form that combines human-computer-interaction, analytics, gamiﬁcation
and deception to lure malicious users into selected traps while piquing
their interests. Furthermore we analyse the interactive deceptive aspects
of the platform through the addition of a narrative, further engaging
malicious users into following a predeﬁned path and deﬂecting attacks
from key network systems.

Keywords: Deception · Cyber-Security · Manipulation · Interactive De-
fense

1

Introduction

Over the last two decades the ﬁeld of cyber-security has experienced numerous
changes associated with the evolution of neighboring ﬁelds, such as network-
ing, mobile communications, and recently the Internet of Things (IoT) [7] [14].
Changes in mindsets have also been witnessed, a couple of years ago the cyber-
security industry blamed users for their mistakes often depicted as the num-
ber one reason behind security breaches. Nowadays, companies are empowering
users, modifying their perception of being the weak link, into being the center-
piece of security design [9]. Users are by deﬁnition “in control” and therefore
a cyber-security asset. Researchers have focused on the gamiﬁcation of cyber-
security elements, helping users to learn and understand the concepts of attacks

 
 
 
 
 
 
2

Bellekens et al.

and threats, allowing them to become the ﬁrst line of defense to report anoma-
lies [21]. However, over the past years numerous infrastructures have suﬀered
from malicious intent, data breaches, and crypto-ransomeware, clearly demon-
strating the technical “know-how” of hackers and their ability to bypass the
security measures in place [12] [13].

Researchers concentrated on the gamiﬁcation, learning and teaching theory of
cyber-security to end-users in numerous ﬁelds through various techniques and
scenarios to raise end-user cyber-situational awareness [2][1]. While empowering
the end-users, researchers overlooked hackers, and the potential of using hacker
gamiﬁcation to beneﬁt cyber-security. In this paper, we argue that there is an
endemic issue in the understanding of hacking practices leading to vulnerable de-
vices, software and architectures. We therefore propose a gamiﬁcation platform
for hackers. The platform is designed with hacker user-interaction and deception
in mind.

The contributions of this paper are threefold:

– Deceptive Interactive Techniques are proposed and deﬁned. This can be
transposed to other systems to increase the interactivity of deception sys-
tems.

– An Interactive Deceptive Based Platform is presented. The platform is able
to deploy scenarios to engage and deceive malicious users in diﬀerent con-
texts.

– Deceptive narrative scenarios based on gamiﬁcation are presented and eval-
uated. The narrative enables to engage the malicious user to further explore
the deceptive scenarios and safeguards key elements of the network.

The remainder of this paper is organised as follows; Section 2 discusses tech-
niques to engage malicious users through Gamiﬁcation, Narrative, Manipulation
and Gratiﬁcation. Section 3 introduces the interactive deception platform and its
components, followed by Section 4 which discusses 3 diﬀerent scenarios to eval-
uate the interactivity and deceptiveness of the platform. Furthermore, Section 5
discusses the results obtained through the diﬀerent scenarios, Section 6 highlight
the related works, Section 7 discusses the key takeaways from the platform and
its limitations and the paper concludes with Section 8.

2

Interactive Deception Based Defenses

The premise of this research assumes that all networks are vulnerable. This
premise is extended to the belief that the attack surface grows alongside the
number of devices connected to the network and the applications installed.
Defending large attack surfaces is cumbersome and requires extensive mainte-
nance. While IDS, Firewalls and other security appliances enable a high degree
of protection and are key to enhance the overall security of a network, they
may also contain vulnerabilities, hence, further increasing the attack surface [4].

Bellekens et al.

3

Fig. 1. Inner Architecture of the Deception Framework

Deception-based defenses on the other hand enable a system to trick or mislead
an attacker to perform (or not) an action. Two of the most widely accepted
deﬁnition of deception applied to cyber-security are provided by Yuill [20] and
Almeshekah and Spaﬀord [1]. In their manuscript, Almeshekah and Spaﬀord dis-
cuss the addition of “confusion” to the widely accepted deﬁnition provided by
Yuill. In this paper we argue, that deception and confusion in cyber-security
is best achieved, through human computer interaction. Static systems, such as
described in literature [18] [10] often fail to meet the deﬁnitions aforementioned.
We further argue that high interaction environments are key to deceptive de-
fenses. Low interaction deceptive environments fail to mimic the behaviour of
virtualised systems, furthermore, they fail to provide malicious user with a viable
challenge and hence, limiting the usefulness of such systems [17]. Our platform,
while providing a fully interactive system, further extends this by building upon
gamiﬁcation techniques and story telling (narrative), intrinsically, providing an
immersive environment to the malicious user similar to video games.

Interactive Deception Based DefensesGamiﬁcationNarrativeManipulationGratiﬁcationCoercionReciprocityRewardDebasementCharmPleasureInductionSocialComparisonMonetaryRewardCausalLogicalChronologicalCardinalFunctionsPlausibleIntrinsic MotivationFosterCuriosityBelievableHumanComputerInteractionInﬂuenceRealisticMisleadTrickExpectednessGameMechanicsGameDesignMotives4

Bellekens et al.

2.1 Gamiﬁcation

Interactive defences, such as honeypots, are often based on real or virtualised
systems logging interaction information and queries made by malicious users.
While honeypots are eﬀective at detecting and deﬂecting cyber-attacks or creat-
ing malware zoo, their deceptive action is often seen as a secondary purpose [16].
Furthermore, while enabling interaction honeypots are not designed to coerce
the user into further interacting with it. To this end, we challenged the deﬁni-
tion of high interaction honeypots, by combining high interaction environments
with gamiﬁcation techniques, coercing malicious users into participating in an
unknown (to the malicious user) challenge. A generally accepted deﬁnition of
gamiﬁcation is provided by Deterding et al. as “The use of game design ele-
ments in non-game contexts” [8]. The gamiﬁcation and design techniques used
within the interactive deception platform are derived from [5].

Game Mechanics act as building blocks, for example, the scoring systems, badges
and trophies enable the user to rank himself and foster the motivation of the user
to perform better. In the platform, the scoring system is enabled by providing
the user with the ability to compare his achievements against planted hacker
achievements [5].

Gamiﬁcation and Game Mechanics must be tightly coupled with a game nar-

rative in order to provide best results and ensure immersion.

2.2 Narrative

In order to foster interaction with the deception platform , the platform builds on
an attack narrative, additionally to the gamiﬁcation techniques used. The narra-
tive enables to construct a causal, logical and chronological chain of events, nec-
essary to the high interaction capabilities of the platform. Barthes [3] described
events critical to the coherence of the story as “cardinal functions”. Cardinal
functions play an important role within story telling as it enables branching into
sub-stories, but also allows the malicious user to immerse himself within the
challenge provided by the platform. In order to increase the deception aspect of
the platform, the narrative follows the intrinsic motivation of a malicious user.
Furthermore, the narrative must be plausible, as diﬀerent network architecture
may have diﬀerent vulnerabilities and rewards, and hence, intrinsic motivations.
Furthermore, narratives must cultivate the curiosity of the malicious user as the
story unfolds, it is therefore important to align the narrative to the gamiﬁcation
aspect of the platform. To this end, the platform provides a believable chain
of events based on potential cyber-attacks and vulnerabilities induced within
the systems as scenarios. The stories provided by the platform are linear, and
constructed retrospectively, in order to avoid mismatches between the vulnera-
bilities, the gamiﬁcation, the rewards and the narrative.
The gamiﬁcation and reward fully inform the narrative, guiding the malicious
user to its next step. While the malicious user can perform an inﬁnite number

Bellekens et al.

5

of action, he is unable to inﬂuence the outcome of the game without following
the path laid out.

2.3 Manipulation

A unique approach to deceive and mislead users is through manipulation. Ma-
nipulation can be deﬁned as the action of controlling someone at your advantage.
Manipulation can take diﬀerent forms as explored by Buss [6]. In his study, Buss
reported 12 diﬀerent manipulation techniques used in close relationships and
interactional context. We identiﬁed 7 techniques to work with our deception
platform, each leading the malicious user to perform an action at our advantage
to either follow the story or to follow another path (i.e. target).

Coercion is the practice of making someone perform a forced action by using
threat or force. Through data gathering, and behavioural analysis an operator
is able to modify the narrative and gamiﬁcation element relating to a speciﬁc
malicious user, enabling to display coercive error message, forcing the hacker to
follow any other pre-deﬁned given path.

Reciprocity Reward are provided through a ﬂexible narrative. As aforementioned,
the platform can be used to monitor the actions of a malicious user. In order
to evaluate the user’s competencies, the platform requires manual vulnerabili-
ties testing, hence, the gamiﬁcation engine provides reciprocal rewards to users
that are not using vulnerabilities scanners. Enabling them to continue further
discovering key elements within the deceptive environment.

Debasement is the practice of lowering values, to manipulate someone. While un-
able to work on the emotions of the malicious user, the narrative is able changes
by analysing the attacks performed. Vulnerabilities can be loaded in a round
robin fashion, in order to keep the malicious user entertained, and therefore ex-
hibit less diﬃculties. Debasing the platform challenges ensures the continuation
of the story and thus the immersion of the malicious user within the deceptive
game.

Charm focuses on complimenting someone in order to perform an action. As the
platform and the narrative require a logical and believable construct, charming
the malicious user is only done through subtle clues, such as comments on the
“ability” of a malicious user in code running on the client-side. Those charming
“comments” help the user follow the pre-deﬁned path, while believing to follow
this path through is own free will.

Pleasure Induction is the ability of demonstrating that an unwanted action can
be pleasurable for the malicious user. This is provided by the ability to debase
speciﬁc vulnerabilities enabling the malicious user to continue is progression
through the deceptive platform and earn rewards.

6

Bellekens et al.

Social Comparison is the act of comparing the malicious user against other
hackers or groups. Due to the nature of the platform, obvious comparisons such
as leaderboard would annihilate the immersive element of the platform. To this
end, comments on client-side and defacing pages are hidden. Website defacement
is an attack that changes the appearance of a website, often accompanied by the
name of the defacers or the group of defacers. This subtle clue, enables to create
a social comparison between the malicious user and other groups or hackers.

Monetary Rewards are core of some scenarios to deceive the hacker. The narra-
tive builds upon potential credit cards, or valuable information available at the
end of the quest, hence leading the attacker to follow the narrative to obtain a
potential monetary reward.

2.4 Gratiﬁcation

Luring a malicious user into deception requires to foster its curiosity, in this
manuscript, we use gratiﬁcation to trigger a pleasurable emotional reaction
within the malicious user, in order to lure him to perform key deceptive ac-
tions. By providing the malicious user, with credit card information, rewards,
or key information, we lead the action of the user towards a speciﬁc path or
target predeﬁned within the platform. The gratiﬁcation inherently focuses on
increasing the deceptive action of the platform.

3 Platform Architecture

This section provides an overview of the deceptive platform architecture. We
developed a fully extendable gamiﬁcation architecture allowing researchers to
deploy virtualised hosts on both local networks and the internet. Each virtualised
hosts contains a set of speciﬁc vulnerability (i.e. web application, software, buﬀer
overﬂow, etc). Each host is connected to a game engine, an interaction engine
and a scoring engine.

Figure 2 depicts the logical architecture of the platform. When a hacker
connects to one or more virtual hosts, he is unable to diﬀerentiate it from a
real-world computer (i.e. running a windows operating system), this is achieved
by using port-scanning deception enabling to camouﬂage the signature of the
operating system.

All interactions with the host(s) including time, behavioural data (i.e. Keystroke

dynamics, activity tracking, etc.), and engagement are further recorded and pro-
cessed by the game and the scoring engines. This allows the hacker to be served
with polymorphic vulnerabilities which, in turn, can increase or decrease their
diﬃculties over time, keeping the hacker engaged with the platform. Further-
more, Figure 2 shows that the interaction information gathered through the
host(s) is fed to the scoring engine, which provides the hacker with rewards
based on pre-deﬁned scenarios. Using a threshold measures, the hacker’s inter-
est is further analysed. If his interest scores below threshold, subtle clues are

Bellekens et al.

7

Fig. 2. Logical Architecture of the Deception Framework

provided to the hacker. The clues are inbuilt in each scenario. The clues vary
from wireshark captures, to misleading network scans and vulnerability scans.
The clues enable the hacker to seamlessly continue his malicious activity on the
the network by following a pre-deﬁned path, without suspecting interacting with
a virtual environment. The path leads to data being gathered on the attacks,
techniques and tools used by hackers to solve each challenges thrown at him.
All the gathered information are further analyzed using a circular methodology,
enabling the operators to enhance the game engine and the variability of the
diﬃculties.

Figure 3 provides an overview of the deception framework network architec-
ture. The network can be extended through the Software Deﬁned Network (SDN)
controller, enabling an operator to create virtual networks on demand. Informa-
tion are pulled from the vulnerability database to populate the virtualised hosts
running on the virtualised deception host server. Based on the scenario being
launched, diﬀerent network architectures, virtual hosts and vulnerabilities are
loaded and spawned on the network. Hacker interactions are made through a
load balancer and a Django web server for all web vulnerabilities.

System OrchestratorGame ManagerInteraction EngineBehavioural Engine Reward EngineIntruderOverall ScoringGamiﬁcation ScoringHCI Scoring Difﬁculty EngineCompetition ModeStatic / DynamicChallengeAdaptive Vulnerability  GeneratorScenariosMilitaryIoT Critical InfrastructureNetworkGame MakerReporting ModuleGame Mode ConﬁgurationVulnerability  Database Network8

Bellekens et al.

Fig. 3. Network the Deception Framework

4 Scenarios

4.1 Scenario 1: Shopping Website

77% of web applications have been reported to include a vulnerable JavaScript
library enabling malicious users to take advantage of the website and potentially
use this vulnerability to launch further attacks. The scenario was evaluated on
its own, to identify the state of the narrative, the value of the kernels within the
narrative, and the deception, manipulation and gamiﬁcation aspects.

Figure 4 provides an overview of the deception narrative. The shopping web-
site oﬀers potential monetary rewards if hacked through credit cards stored in
the database. To this this end, 4 apparent vulnerabilities were created. I) A
“robot.txt” wile containing the path to an unprotected administration page.
II) A “JavaScript password checker” library included within the “index.html”
page enabling the hacker to bypass the login and password requirements. III)
A “Login SQL Injection” enabling the hacker to use an SQL injection against
the password ﬁeld to gain access to the administration page. IV) A persistent
cross-site scripting (XSS) injection vulnerability.

Through subtle clues, within the code, comments, etc. . . , the attacker is lead to
believe that the website is vulnerable. His interested is further piqued through the
manipulation techniques as shown on the edges of Figure 4. By following the XSS
injection vulnerability, the malicious user will quickly discover planted comments
from other imaginary hackers, acting as a leaderboard and creating a social
comparison between the abilities of the imaginary hackers and the malicious

AttackerVirtualisedDeception Hosts SoftwareDeﬁnedNetworkController Network Machine Learning Vulnerabilities  LoadBalancerVulnerabilityDatabaseDjangoWebServerBellekens et al.

9

Fig. 4. Web Deception Narrative

user. Furthermore, by following the ﬁrst 3 vulnerabilities, the hacker will access
an unprotected administration page, which, in turn, will give him access to a
“database.db” ﬁle containing fabricated credit card numbers and associated CSV
numbers. Another ﬁle provides information about another shopping website,
which simulate similar vulnerabilities with a diﬀerent design, misleading the
hacker to follow another path.

4.2 Scenario 2: Vulnerable FTP

The second scenario is built around a vulnerable version of an FTP application.
The FTP contains default credentials enabling a malicious user to read and
upload new data on the FTP. The premise of this scenario is to reward the
hacker upfront to provide direct gratiﬁcation.

Figure 5 illustrates the diﬀerent path the malicious user is able to take. Provid-
ing upfront gratiﬁcation, with clear planted rewards enable to build the momen-
tum of the narrative. The ﬁrst ﬁle is a database ﬁle containing various tables and
information. The ﬁle contains 2GB of data, requiring the hacker to spend time
analysing and searching for potential information. Within the ﬁle, numerous ref-
erences to a vulnerable WordPress website are made. The link to a defaced page
is also provided. The WordPress website is itself vulnerable to SQL injection and
XSS attacks and aims at comparing the malicious user skills with the skills of an
imaginary planted hacker. The second vulnerability provides the malicious user

Manipulation: Monetary RewardGratificationNarrative: Foster CuriosityGamificationManipulation: Social ComparisonGamification: LeaderboardManipulation: DebasementShopping WebsiteManipulation:Monetary RewardJavascript Password CheckerUnprotected Administration PageDatabase AccessConfidential InformationShopping Website 2Robot.txtLogin SQL InjectionFake XSS InjectionVarious Hacker HTML Comments10

Bellekens et al.

Fig. 5. FTP Deception Narrative

with a large Nmap scan of numerous machine. One is identiﬁed as vulnerable.
Upon exploiting the vulnerability the malicious user is able to perform a privi-
lege escalation through a buﬀer overﬂow attack (All buﬀer overﬂow protections
are disabled).

4.3 Scenario 3: IoT Network Combination

This scenario builds upon Scenario 1 and 2, by integrating them into a vulnera-
ble IoT Network running MQTT nodes. The aggregation of scenarios enable to
construct a plausible interactive deception environment, leading the malicious
user towards predeﬁned targets and exhaust his skills against known vulnera-
ble nodes allowing operators to segregate the network, essentially, exploiting the
malicious user for the beneﬁt of data gathering.

Figure 6 provides an overview of the vulnerable IoT network. One front facing
vulnerable IoT device running MQTT uses weak SSH credentials. The device
itself contains a ﬁle with un-encrypted SSH credentials for a vulnerable “broker
server”. The root of the broker contains an NMAP Scan which has for objective
to lead the malicious user towards the vulnerable devices analysed. The scan
contains information about 7 nodes in total. One vulnerable webserver, one vul-
nerable FTP and 5 IoT nodes with weak credentials but advertised within the
NMAP scan as no port open and secured. Using Nmap as an “authority ﬁgure”
to mislead the user into selecting another proposed target.

5 Evaluation

The platform was built against distinctive scenarios evaluating the narrative, the
gamiﬁcation and the manipulation aspects of the platform. Leading the attacker
on a pre-deﬁned path for deception.

Manipulation: Social ComparisonGratificationManipulation: Monetary RewardGratificationGratificationFTPDeception: MisleadingDatabase.DBVulnerable WebsiteFake Defaced PageSQL InjectionXSS AttackConfidential.csvNmap ScanVulnerableVirtual MachinePrivilege EscalationBellekens et al.

11

Fig. 6. IoT Network Deception Narrative

All deception environments have been launched front facing the internet using
four diﬀerent locations (Atlanta, Lyon, London, and Tokyo) for 2 weeks. All
interactions with the environment were recorded and the path of the hackers
where analysed for each environment. For consistency, all environments were
reset at midnight (local time). The path taken by malicious users accessing dif-
ferent systems are recorded using their IP addresses. Furthermore, all malicious
users following a path on a predeﬁned scenario have been aggregated.

Figure 7 shows the path followed by malicious users while interacting with
the interactive deception web Scenario. A total of 230 users accessed the platform
over a period of two weeks. 53.9% of the users did not succeed into accessing
the administrative web page, note that in this case no distinctions are made
between potential legitimate users and unsuccessful malicious users and bots.
13.4% of malicious users tried XSS injection, but only 0.86% resulted in a suc-
cessful persistent XSS injection. 3.9% of the users accessed the “robots.txt” ﬁle
and only 0.86% further accessed the administrator webpage. A surprising result,
as this clue was created for debasement purpose (i.e. enabling easy access to the
second stage). 24.3% of malicious users performed an SQL attack against the
website, however only 23.9% succeeded into accessing the administrator page.
4.34% accessed the JavaScript library, however, only 1.73% of users made it to
the administrator page. All users having access to the administrator webpage

Deception: Influence, RealisticDeception: MisleadingNarrative: CuriosityDeception: MisleadingVulnerable IoT DeviceSSH PasswordVulnerable Broker ServerNmap ScanVulnerable WebsiteVulnerable FTPNon-Vulnerable Nodes12

Bellekens et al.

Fig. 7. Website Flow Narrative

accessed the database ﬁle, however, 21% of the successful users went on to at-
tacking the second deceptive website.

While the drop-out rate is high, 46% of users carried out at least one attack,
with a total of 27.9% carrying out a successful attack. The average time spend by
user 29.6 minutes. The ﬂows presented in Figure 7 indicate a successful narrative,
as successful users tried to proceed with an attack on a pre-deﬁned path, the
drop-outs at various stages are indicated by a lack of motivation (i.e. potential
gratiﬁcation) or a lack of skills.

Figure 8 illustrates the path taken by malicious users during their interaction
with the interactive deception FTP Scenario. A total of 789 IP addresses were
recorded trying to access the FTP over a two week period. 20.7% malicious
users successfully logged on the FTP server. 67% of successful users accessed the
“Database.DB” ﬁle, further leading them to access a planted vulnerable website.
66.36% carried out an SQL attack against the website, while 2.72% carried out an
XSS attack. 12.8% of the successful users (at the ﬁrst stage) accessed the NMAP
scan, but none of them carried out any attacks against the vulnerable virtual
machine. However 20.12% of the malicious users (at the ﬁrst stage) accessed
the “conﬁdential.csv” containing, fake names, credit card numbers and CSV
numbers.

Bellekens et al.

13

Fig. 8. FTP Flow Narrative

The primary assumption for the high-drop oﬀ at the ﬁrst stage is due to the
number of bots that scanned the FTP and abandoned. The low number reported
to access the “conﬁdential.csv” ﬁle is believed to be due to the too obvious name
of the ﬁle, hence leading malicious users onto pursuing the “database.DB” ﬁle
and executing SQL and XSS attacks against the website. Malicious users spend
an average time of 9.36 minutes on the platform.

Figure 9 shows the path taken by malicious users when interacting with the
combined environment, through an IoT vulnerable device sending MQTT re-
quests to a vulnerable broker. Out of the 1,084 individual IP recorded 66.88%
of requests made to the IoT platform were unsuccessful. 33.11% of attacks suc-
ceeded into accessing the IoT virtual sensor by identifying the weak credential
uses, however, only 10.8% of the successful users where able to connect to the
broker. 100% of the users accessing the broker (stage 3) accessed the Nmap ﬁle
stored at the root. 2.59% of the successful malicious user accessing the nmap ﬁle,
attacked the nodes stated as non-vulnerable in the Nmap scan, and successfully
accessed the 5 nodes. 56.4 % of the users reacted to the misleading information
and attacked either the website or the FTP. All malicious users that proceeded
to stage 4 performed successful attacks against the deceptive targets. 43.5% also
dropped oﬀ at stage 3 after having accessed the Nmap ﬁle. It is expected that
the drop oﬀ, might be due to a lack of reward at this stage, clarity in reading the
Nmap ﬁle provided or a lack of time. The malicious users spend an average time

14

Bellekens et al.

Fig. 9. IoT Flow Narrative

of 41.3 minutes on the deceptive scenario demonstrating a successful, believable
narrative, fostering curiosity.

6 Related Works

McQueen et al. [15] introduced deception defenses in control systems. They de-
ﬁned security through seven abstract concepts, and further deﬁned deception
solutions for each abstract security concept. The concepts and associated decep-
tion are provided in the form of a broad taxonomy. Heckman et al. [11] review the
January 2012 real-time red/blue team wargame experiment by MITRE, which
included deception at its core, in order to fool and deceive red teams. The main
focus of the deception system in place was to simulate a command and control
system, which in turn would provide false information to the read team through
a fake interface. The system presented by the authors was speciﬁcally designed
with a wargame in mind, and while proving its eﬃcacy, the system lacks ﬂexibil-
ity in order to be deployed in a broader context (i.e. IoT, SME Networks, SCADA
Systems, Web, etc. . . ). In [19] Stech et al. provide a scientometric analysis of the
concepts of deception detection in cyber space. The authors demonstrated that
the social, behavioral and cognitive aspects of deception where often discarded
from the denial and deception tactics used. They also highlighted a lack of termi-

Bellekens et al.

15

nology to describe deception and classiﬁed deception as an emerging ﬁeld within
cyber-security.

7 Discussion and Limitations

This section introduces the key takeaways of the interactive deception platform
as well as the limitations of the platform in its current state.

7.1 Key Takeaways

– Increased Interaction: The platform enables malicious users to interact
with numerous believable components and focuses on increasing the interac-
tion time between the malicious user and the components.

– Chronological Events: The platform builds on the concepts of gamiﬁca-

tion and narrative, hence, unfolds in a time line fashion.

– Deﬂection: The use of gamiﬁcation, manipulation, gratiﬁcation and narra-
tive have demonstrated to be successful in order to deﬂect attacks from key
network components to secondary nodes, or towards the dedicated virtual
environment.

– Platform Flexibility: The platform is modular and hence enables to ﬁt,

and build on numerous scenarios.

7.2 Limitations

– Scenario Complexity: Complex environments may require complex sce-
narios, which may clutter the environments. Furthermore, building believable
scenarios and a plausible narrative is time consuming.

– Distinguishing between legitimate and malicious users: In its current
state the platform is unable to distinguish between users, hence limiting the
interaction of the environment with legitimate users.

8 Conclusion

In this paper a successful interactive deception platform based on gamiﬁcation,
narrative, manipulation and gratiﬁcation techniques is presented. The platform is
highly modular and enable users to develop and deploy scenarios to mislead and
deceive malicious users on a network, to safeguard key elements of the network,
buy time for security operators to isolate the deceptive nodes and malicious user,
or to collect and study the behaviour of malicious users. We have also presented
a comprehensive model to increase the interaction with deceptive platform. The
techniques can easily be transferred across to existing platform. Furthermore, the
scenarios presented are based on a plausible narrative encouraging and coercing
the user into exploring the environment. In this paper 3 scenarios were presented,
demonstrating the eﬃciency of the the narrative, manipulative and gratiﬁcative
components. It was demonstrated that while 2103 individual connection to the
platform were recorded over the three scenarios and a high initial drop-out rate,
over 75% of users engaging with the platform carry at least one successful attack.

16

Bellekens et al.

References

1. Almeshekah, M.H., Spaﬀord, E.H.: Planning and integrating deception into com-
puter security defenses. In: Proceedings of the 2014 New Security Paradigms Work-
shop. pp. 127–138. ACM (2014)

2. Almeshekah, M.H., Spaﬀord, E.H.: Cyber security deception. In: Cyber deception,

pp. 23–50. Springer (2016)

3. Barthes, R.: Lecture in inauguration of the chair of literary semiology, coll`ege de

france, january 7, 1977. Oxford Literary Review 4(1), 31–44 (1979)

4. Bellekens, X.J., Tachtatzis, C., Atkinson, R.C., Renfrew, C., Kirkham, T.: Glop:
Enabling massively parallel incident response through gpu log processing. In: Pro-
ceedings of the 7th International Conference on Security of Information and Net-
works. p. 295. ACM (2014)

5. Blohm, I., Leimeister, J.M.: Gamiﬁcation. Business & Information Systems Engi-

neering 5(4), 275–278 (2013)

6. Buss, D.M.: Manipulation in close relationships: Five personality factors in inter-

actional context. Journal of personality 60(2), 477–499 (1992)

7. Desolda, G., Ardito, C., Matera, M., Piccinno, A.: Mashing-up smart things: a
meta-design approach. In: Proceedings of workshop on end user development in
the internet of things era–CHI15 EA. pp. 33–36 (2015)

8. Deterding, S., Dixon, D., Khaled, R., Nacke, L.: From game design elements to
gamefulness: deﬁning gamiﬁcation. In: Proceedings of the 15th international aca-
demic MindTrek conference: Envisioning future media environments. pp. 9–15.
ACM (2011)

9. Faily, S., Faily, S.: Why designing for usability and security is hard. Designing

Usable and Secure Software with IRIS and CAIRIS pp. 3–8 (2018)

10. Han, X., Kheir, N., Balzarotti, D.: Deception techniques in computer security: A

research perspective. ACM Computing Surveys (CSUR) 51(4), 80 (2018)

11. Heckman, K.E., Walsh, M.J., Stech, F.J., O’boyle, T.A., DiCato, S.R., Herber,
A.F.: Active cyber defense with denial and deception: A cyber-wargame experi-
ment. computers & security 37, 72–77 (2013)

12. Hill, G., Bellekens, X.: Cryptoknight: Generating and modelling compiled crypto-

graphic primitives. Information 9(9), 231 (2018)

13. Hindy, H., Brosset, D., Bayne, E., Seeam, A., Tachtatzis, C., Atkinson, R.,
Bellekens, X.: A taxonomy and survey of intrusion detection system design tech-
niques, network threats and datasets. arxiv 2018. arXiv preprint arXiv:1806.03517
14. Hodo, E., Bellekens, X., Hamilton, A., Dubouilh, P.L., Iorkyase, E., Tachtatzis, C.,
Atkinson, R.: Threat analysis of iot networks using artiﬁcial neural network intru-
sion detection system. In: 2016 International Symposium on Networks, Computers
and Communications (ISNCC). pp. 1–6. IEEE (2016)

15. McQueen, M.A., Boyer, W.F.: Deception used for cyber defense of control systems.
In: Human System Interactions, 2009. HSI’09. 2nd Conference on. pp. 624–631.
IEEE (2009)

16. Merien, T., Brosset, D., Bellekens, X., Claramunt, C.: A human-centred model
for network ﬂow analysis. In: 2018 2nd Cyber Security in Networking Conference
(CSNet). pp. 1–6 (Oct 2018). https://doi.org/10.1109/CSNET.2018.8602913
17. M´erien, T., Bellekens, X., Brosset, D., Claramunt, C.: A spatio-temporal entropy-
based approach for the analysis of cyber attacks (demo paper). In: Proceedings of
the 26th ACM SIGSPATIAL International Conference on Advances in Geographic
Information Systems. pp. 564–567. ACM (2018)

Bellekens et al.

17

18. Nawrocki, M., W¨ahlisch, M., Schmidt, T.C., Keil, C., Sch¨onfelder, J.: A survey on
honeypot software and data analysis. arXiv preprint arXiv:1608.06249 (2016)
19. Stech, F., Heckman, K.E., Hilliard, P., Ballo, J.R.: Scientometrics of deception,
counter-deception, and deception detection in cyber-space. PsychNology Journal
9(2) (2011)

20. Yuill, J.J., et al.: Defensive computer-security deception operations: processes, prin-

ciples and techniques (2007)

21. Zhan, X., Nah, F.F.H., Cheng, M.X.: An assessment of users cyber security risk tol-
erance in reward-based exchange. In: International Conference on HCI in Business,
Government, and Organizations. pp. 431–441. Springer (2018)

