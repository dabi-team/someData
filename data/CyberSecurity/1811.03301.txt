Dynamic Security Analysis of Power Systems
by a Sampling-based Algorithm

Qiang Wu, T. John Koo, Yoshihiko Susuki

1

8
1
0
2

v
o
N
8

]

Y
S
.
s
c
[

1
v
1
0
3
3
0
.
1
1
8
1
:
v
i
X
r
a

Abstract

Dynamic security analysis is an important problem of power systems on ensuring safe operation and stable
power supply even when certain faults occur. No matter such faults are caused by vulnerabilities of system
components, physical attacks, or cyber-attacks that are more related to cyber-security, they eventually affect the
physical stability of a power system. Examples of the loss of physical stability include the Northeast blackout of 2003
in North America and the 2015 system-wide blackout in Ukraine. The nonlinear hybrid nature, that is, nonlinear
continuous dynamics integrated with discrete switching, and the high degree of freedom property of power system
dynamics make it challenging to conduct the dynamic security analysis. In this paper, we use the hybrid automaton
model to describe the dynamics of a power system and mainly deal with the index-1 differential-algebraic equation
models regarding the continuous dynamics in different discrete states. The analysis problem is formulated as a
reachability problem of the associated hybrid model. A sampling-based algorithm is then proposed by integrating
modeling and randomized simulation of the hybrid dynamics to search for a feasible execution connecting an initial
state of the post-fault system and a target set in the desired operation mode. The proposed method enables the use of
existing power system simulators for the synthesis of discrete switching and control strategies through randomized
simulation. The effectiveness and performance of the proposed approach are demonstrated with an application to
the dynamic security analysis of the New England 39-bus benchmark power system exhibiting hybrid dynamics.
In addition to evaluating the dynamic security, the proposed method searches for a feasible strategy to ensure the
dynamic security of the system in face of disruptions.

dynamic security, hybrid automaton, power system, reachability, RRT

Index Terms

I. INTRODUCTION
Power systems are typical large-scale Cyber-Physical Systems (CPS) [1], [2], especially when referring
to the smart grid [3]. In a power system, the electrical energy produced in generator units is delivered
to consumption loads through transmission lines, while the power generation and transmission in the
physical world are monitored and controlled by sensing, communication and computation in the cyber-
world. The Supervisory Control And Data Acquisition (SCADA) system has been employed to supervise
power systems by collecting data from remote facilities and sending back control commands [4].

A power system is by nature continually experiencing disturbances that may be classiﬁed as event
disturbances and load disturbances according to their effects on the system security [7]. Such disturbances
may be caused by vulnerabilities of system components, like software defects, or by physical attacks, such
as hurricanes, vandalism and terrorist attacks, or by cyber-attacks, including false data injection attacks
[8], [9], data integrity attacks [10], [11] and Denial-of-Service (DoS) attacks [12], etc. No matter what
the reasons are, the disturbances eventually affect the stability and robustness of a power system in the
physical world. Examples of the loss of physical stability include the Northeast blackout of 2003 in North
America and the 2015 system-wide blackout in Ukraine. A software timing defect in the alarm system was
recognized as the primary cause of Northeast blackout of 2003, in which more than 508 generating units

Q. Wu and T. J. Koo, Hong Kong Applied Science and Technology Research Institute (ASTRI), 5/F, Photonics Centre, 2 Science Park
East Avenue, Hong Kong Science Park, Shatin, Hong Kong; emails: williamwu, john.koo@astri.org; Y. Susuki, Department of Electrical and
Information Systems, Osaka Prefecture University, 1-1 Gakuen-cho, Naka-ku, Sakai 599-8531, Japan; email: susuki@eis.osakafu-u.ac.jp.

DOI: doi.org/10.1145/3208093

 
 
 
 
 
 
2

at 265 power plants were shut down [13], [14], [15]. The December 2015 Ukraine power grid cyber-attack
led to the system-wide blackout in the country, causing 30 substations switched off [16], [17].

Security is one of the priorities of a power system, and it refers to the robustness of the system with
respect to imminent faults [18]. A power system is said to be dynamically secure with respect to a
given fault if it is transiently stable [19], [20], that is, the system can restore its normal operating state
following an event disturbance. Besides the transient stability, different aspects of the system stability,
like the short-term voltage stability, are also discussed in the context of dynamic security.

In addition to stability, safety is another term that is always compared with security. From the view
of system engineering, the goal of safety is to guard the physical network and prevent intrusions, while
the goal of security is to ensure that the critical functions and the services provided by the network and
systems are maintained when the system suffers from disruptions [21]. In power systems, safety is referred
in the operation level to ensure the facility safety of power grids and safety of operators, while security
is always used when discussing the ability to provide stable power supply service.

In this paper, we are interested in the Dynamic Security Analysis (DSA) problem of power systems:
Problem 1.1 (Dynamic Security Analysis): The dynamic security analysis problem of a power system
is to check, when certain faults occur, whether (1) the system survives the ensuing transient and moves
into a steady-state condition; and (2) neither bus-voltage amplitude nor frequency exceeds its permissible
range during transients.

Instead of the so-called dynamic security assessment in which the fault is taken as a set of certain
faults, we focus on analyzing the dynamic responses of the system against one given single fault in the
dynamic security analysis problem. It is straightforward that dynamic security analysis serves as a basis

Fig. 1. One-line diagram of 39-bus New England power system benchmark [5], [6].

G10  G3  G2  G1  G5  G4  G7  G6  G9    G8 <Bus  #> <39> <9> <8> <7> <5> <3> <4> <1> <2> <30> <25> <37> <18> <6> <12> <11> <31> <32> <10> <13> <20> <34> <33> <36> <23> <19> <14> <15> <16> <21> <22> <35> <38> <29> <24> <28> <27> <17> <26> 3

for dynamic security assessment. In parallel to checking the system security, we also search for a feasible
solution including operation modes switching strategies in the cyber-world and control input selection
methods in the physical world for the system to resume automatically after a fault occurs. In this study,
the consequence of the fault on the system is emphasized rather than the cause of the fault.

Existing methods for the dynamic security analysis may be roughly classiﬁed into direct methods and
time-domain approaches. Direct methods, including the techniques of linearization and bounding [20],
Liapunov functions [22], transient energy functions [5], transient energy margins [23], transient security
indices [24], BCU (Boundary of stability region based Controlling Unstable equilibrium point) [7], [25],
EEAC (Extended Equal-Area Criterion) [26], are fast in computation and provide the degree of stability
or instability, together with useful information regarding the preventive control. But they may be not
applicable to those models for which it is hard to explicitly derive energy functions, and could not provide
time responses of the post-fault system. In contrast, time-domain approaches are applicable to general
system models and provide detailed system dynamic responses through Step-By-Step (SBS) simulation.
But they may not offer the strategy for the preventive control. In addition, efforts based on trajectory
sensitivity [27], pattern recognition method [28], machine learning [29], [30] have been contributed in
this ﬁeld.

The one-line diagram in Fig. 1 shows a typical benchmark of power systems, the 39-bus New England
system [5], [6], where synchronous generators and loads are connected to buses linked via high-voltage
lines. The continuous-time dynamics of power systems are normally governed by a nonlinear Differential-
Algebraic Equation (DAE), since the swing of rotors in generators is represented by nonlinear differential
equations, while the power balance of loads and supplies on buses is described by algebraic equations.
On the other hand, different connection status of components result in different operation modes of the
system, and the system is governed by different continuous dynamics in accordance with the operation
mode. The complicated dynamics of power systems exhibit both hybrid and nonlinear nature and have
high degree of freedom, making the dynamic security analysis a challenging problem.

One key enabler for dynamic security analysis lies in detailed models of target power systems. Large-
scale power systems consist of many interconnected components and complex networks, and thus require
special efforts to build the system models. Considering its hybrid nature, several researchers proposed to
adopt mixed logical dynamical systems [31] and the theory of hybrid systems [32], [33], [34], [35] in
modeling, analysis and control of power systems, see Ref. [36], [37], [38], [39] and references therein.
Through proper modeling of the system dynamics, the dynamic security analysis problem could be
formulated and addressed as a reachability problem of the associated hybrid model [40], [41].

Sampling-based algorithms, such as Probabilistic RoadMap (PRM) [42], [43] and Rapidly-exploring
Random Tree (RRT) [44], [45], [46], provide a practical computational approach to solving robotic path
and motion planning problems with many degrees of freedom. The idea is probability-based, so that it
overcomes the computational limitation caused by high dimension and nonlinearity of the target dynamics.
In particular, RRT provides an efﬁcient data structure and sampling scheme for high-dimensional problems
with differential constraints and complicated constraints [44], [47], [48], [49]. Although, initially proposed
for continuous problems, RRT has been extended to handle control and veriﬁcation problems with hybrid
dynamics [50], [51], [52], [53], [54], [55], [56]. In Ref. [40], [41], the authors introduced the RRT
algorithm to the ﬁeld of power systems and developed a computational approach to the dynamic security
analysis problems.

In this paper, we use the hybrid automaton model to describe the hybrid dynamics of power systems,
and mainly deal with DAE models that could be equivalently transformed into an Ordinary Differential
Equation (ODE) with once differentiation, i.e., the so-called index-1 DAE [57], regarding the continuous
dynamics. As an alternative to direct mathematical modeling, we propose to model the continuous
dynamics in each discrete state with existing tools and then embed them in the automaton for discrete
switching to build the whole hybrid model. The dynamic security analysis problem is formulated as
searching for a feasible execution of the hybrid model of a target system. The system is proved to
be dynamically secure if there exists such an execution that starts from the current physical state and

4

operation mode and arrives at a target set in the desired operation mode eventually. By integrating power
system simulators, a sampling-based computational approach is developed to conduct the search of discrete
switching and control strategies in the high-dimensional hybrid state space.

The main contribution of this work lies in that the proposed modeling and computation method enables
existing simulators for the formal veriﬁcation and controller synthesis through the randomized simulation.
Take the ﬁeld of power systems as an example. A large set of simulators validated in realistic problems,
like Power System Toolbox (PST) [58] and Power System Analysis Toolbox (PSAT) [59], have been used
for the assessment of system dynamic performance. All these simulators conduct time-domain simulation
to verify the control strategy deﬁned in advance by simulating the time responses, but neither of them was
directly applied to check the correctness of power systems in the sense of formal method or to synthesize
the correct behavior by control. In this paper, by using the proposed method with PSAT, we demonstrate
for the ﬁrst time that the dynamic security analysis with practical simulators is possible. Besides, since
the developed approach is module-based, the simulator could be replaced with any other one of interest,
implying the potential of the approach to practical and large-scale problems.

The rest of this paper is organized as follows. Section II discusses some related works in the ﬁled of
DSA and sampling-based algorithms. In Sec. III, the DAE and hybrid automaton models are introduced
for the continuous and hybrid dynamics of power systems, respectively. A sampling-based algorithm for
the hybrid dynamics is developed in Sec. IV with an investigation on its properties of coverage and
computational complexity. Section V shows a demonstration of the proposed algorithm on the 39-bus
New England System, as shown in Fig. 1, exhibiting hybrid dynamics. The conclusion of this paper with
a brief summary and future work is drawn in Sec. VI.

II. RELATED WORKS
The threat model of power systems has been studied in the context of CPS security under a uniﬁed
framework [60], which consists the threats, vulnerabilities, attacks and controls from the security per-
spective and the cyber-, physical and cyber-physical components from the CPS components perspective.
Cyber-security of power systems [12] plays a signiﬁcant role in managing power grid operations, due
to the integration of information and communication technologies in power systems. The mechanism of
typical cyber-attacks, such as false data injection attacks, data integrity attacks and DoS attacks, etc., has
been studied using different models for power systems, together with detection and prevention strategies.
In addition, testbeds [61] have been established to evaluate vulnerabilities of smart grids.

Generally, state-of-the-art DSA tools rely heavily on deterministic computation methods [62], such as
the aforementioned EEAC, BCU, SBS, etc. Security limits are searched based on exhaustively examining
many predeﬁned contingencies using a rigorous approach. Advantages of such methods are the accurate
results available at the expense of computation time, since precise models of the system dynamics are used
as the basis. With the development of data science, the probabilistic methods, including machine learning
and artiﬁcial intelligence [30], [29], are recently proposed again to DSA, utilizing accumulated knowledge
and data. Some probabilistic models for the causal relation could be trained using certain learning methods
based on data obtained via simulation, and the built models are further employed to conduct the on-line
DSA. The advantage of such methods are the rapid results, while the reliability of the obtained models is
still in study, and simulation still plays a fundamental role on supplying the data. In addition, a rigorous
and concrete strategy to maintain the system security is not provided in the state-of-the-art tools and
methods.

In the ﬁeld of robotic path and motion planning, there have been a large number of variants of RRT,
like RRT-connect [63], RRT∗ [64], Linear Quadratic Regulation based RRT∗ (LQR-RRT∗) [65], etc., and
implemented libraries on sampling-based algorithms, like Open Motion Planning Library (OMPL) [66].
RRT-connect improves the efﬁciency of RRT by incrementally building searching trees rooted at the start
and the goal conﬁgurations. RRT∗ generates an asymptotically optimal trajectory by rewiring the tree as
it discovers new lower-cost paths reaching the nodes that are already in the tree. LQR-RRT∗ ﬁnds optimal

5

plans in domains with complex or underactuated dynamics by locally linearizing the domain dynamics
and applying linear quadratic regulation. However, neither of them is directly applicable to the power
system application, due to the large scale and nonlinearity of power system dynamics.

To the best of our knowledge, the application of the RRT idea to dynamic security analysis of power
systems is ﬁrstly reported in Ref. [40] and then strengthened in Ref. [41]. The analysis problem was
formulated as checking the reachability of a mathematical model representing dynamic performances of a
target power system. The RRT algorithm was used as a computational approach to searching for a feasible
trajectory connecting an initial state possibly at a lower security level and a target set with a desirable
higher security level. Case studies on the Single Machine-Inﬁnite Bus (SMIB) system and the two-area
system for frequency control problems demonstrated the performance and effectiveness of the proposed
approach.

In the previous work, the system dynamics were modeled in a explicit manner, that is, the ODEs
for each component were exhaustively written down and the whole system model was then integrated
manually for the continuous dynamics based on ﬁeld knowledge. Since a new system model is required
once the connection status of the system network changes or a component is replaced, the application of
such explicit method is limited by the modeling step. In this paper, through the integration of the original
RRT and an existing power system simulator, we enhance the previous work on DSA and make it feasible
to apply the RRT idea to larger and practical-scale power systems.

III. MODELING
In this section, we ﬁrst introduce the DAE model of power system dynamics, and then discuss the
modeling and simulation of the dynamic responses with existing tools. Following that, the mathematical
model of hybrid automaton is introduced to describe the hybrid dynamics in Sec. III-B. At the end of
this section, the problem of dynamic security analysis of a power system is formulated as checking of
the reachability of the hybrid automaton model representing the hybrid dynamics.

A. Power System Modeling

The dynamic responses of a power system can be described by a system of equations [67]:

F ( ˙x, x, u) = 0,

(1)

where F : Rn × Rn × Rm → Rn is a vector-valued function, x ∈ Rn and u ∈ Rm represent the variables
and controls, respectively, m, n ∈ N+, and ˙x denotes the derivative of x with respect to the time t, i.e.,
˙x = dx/dt. If the Jacobian matrix ∂F/∂ ˙x is nonsingular, then an explicit ODE system ˙x = f (x, u) could
be obtained according to the implicit function theorem. Otherwise, the system of equations F ( ˙x, x, u) = 0
deﬁnes a DAE.

Normally, the DAE for a power system can be written in the semi-explicit form [67] (also called ODE

with constraints):

dy
dt

= φ(y, z, u),

0 = ψ(y, z, u),

(2)

where y represents the differential variables including rotor angles δ, rotor speeds ω of generators, and
so on, z the algebraic variables, typically including bus-voltage phases θ and amplitudes v, etc., φ
the differential equations representing the electro-mechanical behaviors of synchronous generators and
controllers, and ψ the algebraic equations governing the active and reactive power balance at buses. The
variables y and z together constitute x in Eq. (1), i.e., (y, z) = x.

The DAE in the form of Eq. (2) can be transformed into an explicit ODE if the derivatives of the
˙z, can be uniquely determined. The condition that the Jacobian matrix ∂ψ/∂z is
algebraic variables,
nonsingular serves as a sufﬁcient condition which enables the transformation. The minimum number of
times of differentiation to the system that is required to solve for ˙x uniquely in terms of x is called index

6

of the DAE [57], and the index measures the distance from a DAE to its related ODE. Notice Eq. (2) is
an index-1 DAE if det ∂ψ/∂z (cid:54)= 0, where det is the determinant of a matrix.

In this paper, we mainly concern with the ODE and the class of DAE which is equivalent to an ODE after
some transformations. Hence, we assume either the matrix ∂F/∂ ˙x in Eq. (1) or the matrix ∂ψ/∂z in Eq.
(2) is nonsingular. Since in both cases the system F ( ˙x, x, u) = 0 is equivalent to an ODE ˙x = f (x, u),
we would deﬁne the hybrid automaton and its semantics based on the ODE form as the continuous
dynamics in the following of this paper. Besides, we assume the ODE to be Lipschitz continuous, such
that, the existence and uniqueness of solution of the initial value problem, ˙x = f (x, u), x(0) = x0, can
be guaranteed.

There have been a large set of simulators in the ﬁeld of power systems, like PST and PSAT [59], for
the modeling and analysis of the system behaviors. PSAT is a MATLAB-based open source toolbox that
has been commonly accepted. Typical physical components, such as generators, buses, lines and so on,
are provided with built-in static and dynamic models in PSAT, enabling users to build their system models
with these given components and system networks. In PSAT, dynamic behaviors of systems are modeled
as a set of nonlinear DAE as Eq. (2). These equations are implicitly embedded in the PSAT model, while
values of variables, equations and the Jacobian matrices are recorded in a special structure named DAE.
Further analysis of the system can be conducted based on the DAE structure via static analysis and time
domain simulation.

In a power system, each discrete state corresponds to a particular connection status of the system
network, while the status is characterized with some parameters of components. The switching between
discrete states results in the hybrid dynamics of a power system. In order to capture the hybrid nature,
the system model with all its components well connected is built through conﬁguring the system network
and parameters. The model representing the continuous dynamics is then constructed in its DAE structure
automatically with power ﬂow computation in PSAT, together with other structures for system components.
These structures are recorded as the basic model to construct the whole hybrid model by integrating into
an automaton for discrete states and jumps. Whenever jumping to a new discrete state, the system reaches
new (continuous and discrete) states following the automaton. The basic model is updated according to the
parameters characterizing the new states and control inputs for the corresponding continuous dynamics
model. The hybrid model for a power system can be constructed correspondingly. We next deﬁne the
mathematical model of hybrid automaton rigorously for the hybrid dynamics.

B. Hybrid Automaton

A system with hybrid dynamics can be formally modeled using a mathematical model called a hybrid

automaton [32], [33], [34]. A hybrid automaton can be deﬁned as follows:

Deﬁnition 3.1 (Hybrid Automaton): A hybrid automaton H is a collection H = (Q, X, U, f, Init, E, G, R),
where Q = {q1, q2, . . . } is a set of discrete states; X ⊆ Rn is a set of continuous states; U is a set of
inputs; f (·, ·, ·) : Q × X × U → Rn is a vector ﬁeld; Init ⊆ Q × X is a set of initial states; E ⊆ Q × Q
is a set of edges; G(·) : E → 2X is a guard condition; R(·, ·, ·) : E × X → 2X is a reset map.

In the deﬁnition, 2X denotes the power set, namely the set of all subsets, of X. The pair (q, x), where
q ∈ Q and x ∈ X, is called the hybrid state and denoted by s, while S := Q × X is the hybrid state
space of H. We assume that both the number of the discrete states and the dimension of continuous states
are ﬁnite. With abuse of notations, the vector ﬁeld in the hybrid automaton is denoted by f , as in the
previous section, but with an additional variable q ∈ Q to indicate the discrete state. These deﬁnitions are
applicable to the hybrid automaton with the continuous dynamics in the DAE form.

A hybrid time trajectory τ := {Ii}N

that: for all i < N , Ii = [τi, τ (cid:48)
τ (cid:48)
i = τi+1.
An execution of the hybrid automaton H is a hybrid trajectory χ := (τ, q, x, u) with initial condition:
i , q(·) ∈ Q is constant, u(·) ∈ U is

(q(τ0), x(τ0)) ∈ Init; continuous evolution: for all i with τi < τ (cid:48)

i=0 is a ﬁnite or inﬁnite sequence of intervals on the real line, such
N ] or IN = [τN , τ (cid:48)
i and

i ]; if N < ∞, IN = [τN , τ (cid:48)

N ); for all i, τi ≤ τ (cid:48)

7

piecewise continuous, x(·) ∈ X is a solution to the ODE ˙x = f (q, x, u) over [τi, τ (cid:48)
i ), q(τi+1)), and x(τi+1) ∈ R(q(τ (cid:48)
for all i < N , (q(τ (cid:48)

i ), q(τi+1)) ∈ E, x(τ (cid:48)

i ) ∈ G(q(τ (cid:48)

i ]; discrete evolution:
i ), q(τi+1), x(τ (cid:48)

i )).

A hybrid automaton H accepts an execution χ if χ satisﬁes the above conditions. The semantics of a
hybrid automaton H is characterized by the executions it accepts. In this paper, we are interested in the
ﬁnite execution χ in which the hybrid time trajectory τ is a ﬁnite sequence ending with a closed interval.
More detailed notions and properties of hybrid automaton H can be found in Ref. [32], [33], [34] and
references therein.

Given a ﬁnite hybrid time trajectory τ , let u be a control input sequence along the trajectory τ , such
i , u(·) ∈ U is a piecewise continuous function and applied to the
i , u is a discrete input that may result in a transition of discrete

that: on each interval [τi, τ (cid:48)
continuous variables; for each i with τi = τ (cid:48)
state, say, q → q(cid:48), and the input is be denoted by the ﬁnal state after the transition, i.e., u(τi) := q(cid:48).

i ] where τi < τ (cid:48)

Note that with the abuse of notations, both the continuous inputs and input sequence are denoted by u
here. We denote an execution starting at (q(τ0), x(τ0)) and following the control input sequence u along
the hybrid time trajectory τ by χ(τ, q(τ0), x(τ0), u) in this paper, and further denote its ﬁrst and last
(τ, q(τ0), x(τ0), u), respectively. Namely, χτ0(τ, q(τ0), x(τ0), u) :=
states by χτ0(τ, q(τ0), x(τ0), u) and χτ (cid:48)
(q(τ0), x(τ0)) and χτ (cid:48)
N )). These notations of the ﬁrst and last states are
introduced for the hybrid RRT algorithm in Sec. IV.

(τ, q(τ0), x(τ0), u) := (q(τ (cid:48)

N ), x(τ (cid:48)

N

N

The objective of dynamic security analysis is to investigate the robustness of the system in its current
operation mode by checking if the system can attain its normal operation status with all constraints and
control objectives fulﬁlled by taking proper control actions. Let the hybrid dynamics of a power system be
modeled with a hybrid automaton H. Given an initial state sinit describing the current physical state and
operation mode of the system, and a target set Sgoal the desired physical states and operation mode, the
dynamic security analysis problem is equivalent to determining the reachability of the hybrid automaton
in the sense: whether there exists a pair of hybrid time trajectory τ = {Ii}N
i=1 and hybrid execution
χ(τ, q, x, u) of H, s.t. ∃t ∈ Ii for some i ≤ N, (q(τ0), x(τ0)) = sinit and (q(t), x(t)) ∈ Sgoal.

In the automaton, unsafe regions are described as obstacles, while the (free) hybrid state space modeled
as their complement. Hence, only the feasible executions in the state space are taken into account in
analyzing the dynamic security.

IV. SAMPLING-BASED ALGORITHMS
Sampling-based algorithms, especially RRT [44], [46], provide a practical computational approach to
the path and motion planning problems with high degrees of freedom and nonlinear dynamics. In this
paper, we focus on the RRT algorithm for hybrid automaton and propose to utilize existing modeling tools
and simulators in the RRT computation for large-scale problems. This section ﬁrst introduces the RRT
algorithm for hybrid models with simulators and then discusses the properties of probabilistic completeness
and time complexity brieﬂy.

A. RRT Algorithm

Through iteratively applying the control input that drives the system to evolve towards a randomly
selected sample in the search space, a RRT searching tree can be incrementally expanded from a given
initial state with the construction algorithm shown in Algorithm 1.

In the algorithm, sinit is the initial state, srand a random state, snear the nearest vertex to the random
state, snew the new vertex, U the set of continuous input, unew the control input corresponding to snew,
and T the RRT searching tree. The parameters K and ∆t are the number of iterations and the sampling
interval of time, respectively. Let the search space S be equipped with a distance function ρ : S × S → R,
then the RRT searching tree T with root sinit follows the key procedures:
Step 1. Initialize the searching tree T with the initial state sinit (line 1).
Step 2. In the beginning of each loop, select a random sample srand with uniform sampling in the search

space S (line 3).

ALGORITHM 1: RRT Algorithm

Input: sinit, K, ∆t;
Output: T ;

8

1 T .init(sinit);
2 for k = 1 → K do
3

4

5

6

srand ← RandomState();
snear ← NearestNeighbor(srand, T );
(snew, unew) ← NearestNewNeighbor(snear, srand, U, ∆t);
T .AddVertex(snew);
T .AddEdge(snear, snew, unew);

7
8 end
9 return T

Step 3. Take the vertex on the tree T with the shortest distance to the random sample srand as the nearest

node snear (line 4):

snear := arg min

v∈T

ρ(srand, v).

Step 4. Let the system evolve from snear and according to its dynamic model to obtain the set of potential
new states that the system could arrive at ∆t, denoted as SP(snear). Choose the nearest one to
the random sample srand in this set as the new state snew, and denote the corresponding control
input as unew (line 5):

snew := arg min
s∈SP(snear)

ρ(srand, s).

With regards to applying the controls, if the input set U is ﬁnite, all its elements are exhaustively
used. Otherwise, if the set U is an inﬁnite one, special methods, such as sampling, can be employed
to take ﬁnite samples in the computation. Note that a control u ∈ U may be either a constant or
a continuous function over the time interval [0, ∆t]. Unsafe regions and obstacles are described
as constraints in the state space. Collision detection is conducted in this step, such that only new
states with feasible executions are taken into account.

Step 5. Add the state snew to the tree T as a new vertex. Record the edge (snear, snew) in T , together

with the input unew (lines 6-7).

As we are dealing with hybrid dynamics in high-dimensional hybrid state space, we make the following
extensions on the sampling strategy and the distance function, in addition to the computation framework.
1) Sampling strategy. Different methods, such as the goal-bias sampling [46], can be employed for
speciﬁed purposes. In this paper, random samples are selected in the hybrid state space S with
uniform sampling for both discrete and continuous state variables.

2) Distance function. The distance between two hybrid states is normally deﬁned as the weighted sum of
distances between the two discrete states and between the continuous states [50]. Since the switching
of discrete state neither changes the continuous state nor costs time in the power system application,
we set the distance between discrete states as zero, and deﬁne the distance function on the nonlinear
continuous state space in Sec. V.

3) Computation framework. We adopt the classical RRT computation framework but make some mod-
iﬁcation on the extension step (Step 4), in addition to utilizing the hybrid sampling strategy and
the hybrid distance function in the computation. As for the hybrid system, not only the states that
the system could arrive at after a continuous evolution for [0, ∆t], but also the ones that the system
arrives at after a discrete jump and the continuous evolution are taken into account.
In the computation, the potential children nodes of snear are selected as all the last states of the
system executions starting from snear following all possible control input sequences along the hybrid
time trajectory {0, [0, ∆t]}, that is,

SP(snear) = {s ∈ S : s := χ∆t({0, [0, ∆t]}, snear, {q, u}), for q ∈ Q and u ∈ U }.

9

Fig. 2.

Illustration of the new state extension of RRT in hybrid state space.

Figure 2 illustrates the RRT algorithm for a hybrid automaton with two discrete states, namely q1 and
q2. In this ﬁgure, the dark dots are the vertices that have been on the tree already, and the triangle shows
a random state with the discrete state q2. The squares are the potential new states from snear, i.e., the set
SP(snear). The solid square shows the new state snew selected from SP(snear).

Regarding large-scale systems like the power system we deal with in this paper, we propose to utilize
existing modeling tools to model the continuous dynamics of the system, as discussed in Sec. III. Since the
DAE of the system dynamics is implicitly embedded in the model, we adopt simulators for the randomized
simulation and propose an integrated computation framework with modeling tools and simulators.

In each simulation with the implicit model, the modeling tool is initialized with a basic model of
the system constructed in advance for the continuous dynamics. Parameters and control inputs are then
passed to the tool. The parameters include two parts. One part is for conﬁguration of the tool, like the
type of numerical solver and the integration step size in computation, while the other part determines the
discrete state of the system, like the connection status for a speciﬁed component, and the control input.
Following that, the ODE (or DAE) model describing continuous dynamics of the system is updated with
these parameters and also the nearest node snear to realize the potential reset map. Time-domain simulation
is then conducted in the simulator on the predeﬁned time interval [0, ∆t] to obtain the potential new state
with the given pair of discrete state and control input (qi, uj), for qi ∈ Q and uj ∈ U .

In addition, since time-domain simulation consumes much more time than other procedures in the whole
computation, all the simulation results started from a vertex are saved at the ﬁrst time when the vertex is
selected as the nearest node snear, including the ﬁnial states and other necessary structures in the model.
Let a vertex sj ∈ T be the nearest node at the k-th loop, i.e., snear := sj. Assume this is the ﬁrst time sj is
selected as snear. The set of results for sj is recorded as SP(sj), while the state sj recorded in a set SN. If
the vertex sj is selected as the nearest node again at the k(cid:48)-th loop for some k(cid:48) > k, these corresponding
results SP(sj) are reused directly to expand the new vertex without repetition of simulation, in order to
save the computation time.

B. Probabilistic Completeness

One signiﬁcant advantage of RRT algorithm over other planning algorithms is the so-called probabilistic
completeness [46]. It ensures the RRT searching tree converges, in the sense of probability, to a uniform
coverage of the free conﬁguration space, that is, the complement of obstacles in search space. However,
this property is based on the assumption that the system could reach any point in the search space from
the initial point. This assumption does not always hold, particularly, for many nonlinear systems. Actually,
this is exactly the problem to be veriﬁed with reachability analysis.

As an alternative, a property called reachability completeness is proposed in Ref. [52], [53]. This
property tells that the RRT searching tree converges to a uniform coverage of the reachable set instead

        10

of the whole state space of the system. The reachablility completeness property indicates that for any
reachable state s of the system and any real number ε > 0, the probability of the RRT tree T containing
a vertex v whose distance to s is smaller than ε converges to one as the number K goes to inﬁnity:

∀s ∈ Reach, ∀ε > 0, lim
K→∞

P[ ∃v ∈ T K, s.t. ρ(s, v) ≤ ε] = 1,

where P is the probability, T K is an RRT tree with K vertices, ρ is the distance function, Reach ⊆ S
is the reachable set, which is the set of states that the system starting from the initial state could arrive
within a time interval.

It is proved in Ref. [52] that the reachability completeness is validated with two sufﬁcient conditions:
1) the probability of each vertex on T being selected as snear in each loop is non-null;
2) the probability of each reachable direction being selected in each loop is non-null.

The ﬁrst condition is fulﬁlled with the uniform sampling method in the sampling procedure (in Step 2 of
RRT computation), and the second one is also satisﬁed if the input set U is a ﬁnite set and the probability
of each u ∈ U being selected is greater than zero (in Step 4 of RRT computation).

The reachability completeness is a property of the RRT computation regarding less the nonlinearity and
scale of the system dynamics. For a given system, once its initial condition and the control input set are
ﬁxed, the reachable set is indeed determined. If the two conditions are fulﬁlled, then the RRT computation
generates a (probabilistically complete) coverage of the reachable set. Therefore, it is possible to adopt the
RRT computation in the reachability analysis, particularly, for nonlinear and large-scale problems, taking
advantage of the reachability completeness property and computational efﬁciency.

C. Time Complexity Analysis

Disregarding the time of initialization, the computation time to construct a RRT searching tree within

K iterations is the sum of time cost in each procedure:

T (K) =

K
(cid:88)

k=1

t(k) =

K
(cid:88)

k=1

(cid:0)tStep2(k) + tStep3(k) + tStep4(k) + tStep5(k)(cid:1),

where tStep2(k), tStep3(k), tStep4(k), tStep5(k) correspond to the time costs of the sampling (Step 2 of RRT
computation), ﬁnding the nearest vertex (Step 3), extending a new vertex (Step 4) and adding the new
vertex procedures (Step 5) in the k-th loop, respectively. In each loop, tStep2(k), tStep4(k) and tStep5(k)
are independent of k and bounded with some positive constants cs, ce and ca, respectively. In ﬁnding
the nearest neighbor, all existing vertices are used to calculate and compare the distances from a new
sample, so tStep3(k) ≤ kcn, for some constant cn > 0. Then, the total computation time can be estimated
as follows:

T (K) ≤

K
(cid:88)

k=1

(cs + ca + ce + kcn)

= (cs + ca + ce)K +

=

cn
2

K 2 + (cs + ca + ce −

cn
2

(K 2 − K)
cn
2

)K.

That is, the time complexity of this algorithm is O(K 2) in the worst case scenario.

In practice, the simulation and collision detection in Step 4 cost much more time than other procedures,
i.e., ce >> cs + ca + cn, resulting from the numerical integration and calculation conducted in this step.
So the actual computation time grows almost linearly with respect to the number of iterations K. As for
a demonstration, the computation time for constructing RRT searching trees for the continuous dynamics
and hybrid dynamics with two discrete states of a SMIB system with different K is shown in Fig. 3 and
Fig. 4, respectively. In all the continuous and hybrid cases, it is observed that the computation time for

11

(a) K from 100 to 1000.

(b) K from 1000 to 10000.

Fig. 3. Computation time for a continuous SMIB system.

(a) K from 100 to 1000.

(b) K from 1000 to 10000.

Fig. 4. Computation time for a hybrid SMIB system with two discrete states.

the RRT searching trees extension grows approximately linearly with K. Settings in these computation
are the same with Ref. [41], and the computation is conducted with MALTAB 2010b on the Windows 7
32-bit OS on a laptop with a intel R(cid:13) CORETM i7-2640M CPU @2.80GHz and 4G memory.

V. APPLICATION TO POWER SYSTEM DYNAMIC SECURITY ANALYSIS
In this section, an application to dynamic security analysis of the 39-bus New England power system
[5], [6] exhibiting hybrid dynamics is employed to illustrate the effectiveness and performance of the
proposed method, where the tool we adopt is PSAT for both modeling and simulation.

A. Model of Hybrid Dynamics

The 39-bus New England power system, also known as 10-machine system, is a widely-used benchmark
representing the 345kV transmission system in the New England area of US, and its one-line diagram
is shown in Fig. 1. This system consists of 10 machines, 39 buses, 12 transformers and 34 lines, where
Generator 1 (on Bus 39) represents the aggregation of a large number of generators outside New England.
The system data are taken from Ref. [5]. Additional controllers including Turbine Governors (TGs) and
Automatic Voltage Regulators (AVRs) are utilized in the model, with their parameters cited from Ref.
[68].

We consider a hybrid case for the 39-bus system including both clearing andre-closing operations on a
faulted line (Line 0203: from Bus 2 to Bus 3). The dynamics are represented with the following hybrid
automaton H:

12

Fig. 5. The PSAT model of 39-bus New England power system with two operation modes: Mode 1: Line 0203 open and Mode 2: Line
0203 closed.

• Discrete states: Q = {q1, q2}, where q1 corresponds to the status Line 0203 open, and q2 closed;
• Continuous states: X = R106 × R137, and hereafter, the symbol x denotes all the 106 state and 137

algebraic variables, unless otherwise speciﬁed;

• Control inputs: U = {±0.5, ±0.4, ±0.3, ±0.2, ±0.1, 0}, and the control u ∈ U is applied to the

reference voltage, vref, of AVR 8 on Generator 8;

• Physical model: The PSAT model with a DAE implicitly built-in;
• Initial state: A fault is deﬁned on Bus 3 since t = 1s, and is cleared at t = 1.1s by disconnecting
Line 0203 with a breaker, and the system data at t = 1.1s is taken as the initial state sinit, while the
discrete state for sinit is q1;
• Edges: E = {(q1, q2), (q2, q1)};
• Guards: G(q1, q2) = G(q2, q1) = X; and
• Reset maps: R(q1, q2, x) = R(q2, q1, x) = x.

Transf 2938Transf 2537Transf 2336Transf 2235Transf 2034Transf 1933Transf 1920Transf 1213Transf 1112Transf 1032Transf 0631Transf 0230Tg10 Tg 09Tg 08Tg 07Tg 06Tg 05Tg 04Tg 03Tg 02Tg 01Syn 10Syn 09Syn 08Syn 07Syn 06Syn 05Syn 04Syn 03Syn 02Syn 01SlackPV 39PV 38PV 37PV 36PV 35PV 34PV 33PV 32PV 30PQ 39PQ 31PQ 29PQ 28PQ 27PQ 26PQ 25PQ 24PQ 23PQ 21PQ 20PQ 18PQ 16PQ 15PQ 12PQ 08PQ 07PQ 04PQ 03Line 2829Line 2629Line 2628Line 2627Line 2526Line 2324Line 2223Line 2122Line 1727Line 1718Line 1624Line 1621Line 1619Line 1617Line 1516Line 1415Line 1314Line 1013Line 1011Line 0939Line 0809Line 0708Line 0611Line 0607Line 0508Line 0506Line 0414Line 0405Line 0318Line 0304Line 0225Line 0203Line 0139Line 0102Exc 10Exc 09Exc 08Exc 07Exc 06Exc 05Exc 04Exc 03Exc 02Bus 39Bus 38Bus 37Bus 36Bus 35Bus 34Bus 33Bus 32Bus 31Bus 30Bus 29Bus 28Bus 27Bus 26Bus 25Bus 24Bus 23Bus 22Bus 21Bus 20Bus 19Bus 18Bus 17Bus 16Bus 15Bus 14Bus 13Bus 12Bus 11Bus 10Bus 09Bus 08Bus 07Bus 06Bus 05Bus 04Bus 03Bus 02Bus 0113

This automaton has two admissible switching operations described by the edges set E and the correspond-
ing guards described by G. The reset map in each switching is an identity, indicating that the switching
of discrete state does not change the continuous states.

The PSAT model of the continuous dynamics in hybrid automaton H for this 39-bus system is shown
in Fig. 5, where all the lines are connected. In the ﬁgure, the component Syn i is the i-th synchronous
generator, Tg i the turbine governor connected to the i-th generator, Exc i the automatic voltage regulator
connected to the i-th generator. Notice that there are two controllers, one Tg and one Exc, for every
generator except the Syn 01, where there is only a Tg 01. The components named Bus, Line, Transf,
PV, PQ and Slack correspond to a bus, line, transformer, PV bus, PQ bus and slack bus1, respectively.
The system model of continuous dynamics in q1 is obtained by disconnecting the faulted line (Line 0203
shown with underline in Fig. 5).

B. Dynamic Security Analysis with RRT Computation

Figure 6 shows the dynamic responses of rotor speeds of the pre-, on- and post-fault system for the
benchmark. In the pre-fault system, the generators are synchronous, as they work at the same rotor speed
ω = 1. The fault causes a signiﬁcant increase in rotor speeds. After the fault is cleared by disconnecting the
faulted line, the rotor speeds oscillate for several seconds, indicating the generators become asynchronous.
Though the difference of rotor speeds among generators decrease with time, the absolute rotor speeds
keep increasing without proper control, i.e., u = 0. It may result in the tripping of all of the generators
in the worst case scenario [70].

Fig. 6. Time responses of rotor speeds ωi, i = 1, . . . , 10, in q1 without proper control.

We hence perform dynamic security analysis for the 39-bus system to check whether it could attain its
normal operation mode after the given fault. In this case study, the target set Sgoal is deﬁned as a range
of continuous variables in q2:

Sgoal = {(q2, x) :

|ωi − 1| ≤ 0.01,
|θj − θk| ≤ π/6,
|vk − 1| ≤ 0.2,

i = 1, . . . , 10;
j, k = 1, . . . , 39;
k = 1, . . . , 39},

1 In power systems, a PV bus is also referred to as generator bus/node or voltage-controlled node, where the real power and the voltage
amplitude are speciﬁed; a PQ bus is also called load bus/node, where the real power and the reactive power are known; a slack bus, also
known as reference bus or swing bus, is used to balance the active and reactive power in the system [69]. There is only one slack bus in
one power system, and both the voltage phase and amplitude are known for the slack bus.

14

where ωi in p.u. is the rotor speed of Generator i, θj in rad the voltage phase of Bus j, vk in p.u. the
voltage amplitude of Bus k, and | · | the absolute value. The setting of ω indicates the requirement on
synchronization of generators, and the later two are to ensure stable power supply.

The switching between discrete states neither changes the continuous variables nor has time cost in our
application. Besides, the AVR reference voltages vref and the TG reference rotor speeds ωref are constants
during time-domain simulation. It is thus reasonable to exclude these discrete and continuous variables
in deﬁning the distance function. Among the continuous variables, the generator rotor angles δ and the
bus-voltage phases θ belong to a circle, namely a nonlinear space, and each has a period of 2π. Therefore,
a hybrid distance for any two hybrid states s = (q, x) and s(cid:48) = (q(cid:48), x(cid:48)) is deﬁned as follows:

ρ(s, s(cid:48)) := ρ(x, x(cid:48)) and ρ(x, x(cid:48)) := ρ(xn, x(cid:48)

n) + ρ(xl, x(cid:48)

l),

where xn represents the nonlinear variables δ and θ, and xl other continuous variables excluding vref and
ωref. For the linear part, the distance is

ρ(xl, x(cid:48)

l) := (cid:107)xl − x(cid:48)

l(cid:107)2,

where (cid:107) · (cid:107)2 is the l2 norm of a vector, and the distance for the nonlinear variables is
39) )T (cid:107)2,

1), . . . , ρ(θ39, θ(cid:48)

1), . . . , ρ(δ10, δ(cid:48)

n) := (cid:107)(ρ(δ1, δ(cid:48)

10), ρ(θ1, θ(cid:48)

ρ(xn, x(cid:48)

where T stands for the transpose operation of vectors, and for any nonlinear variable, say δi,

ρ(δi, δ(cid:48)

i) := min
k∈Z

|δi − δ(cid:48)

i − 2kπ|.

The DAE models of continuous dynamics characterize the manifolds for system trajectories. Searching
in the whole hybrid state space, S = Q × X, seems inefﬁcient and impractical. But, it is also challenging
to search on the manifolds as in Ref. [56], due to lack of structure information and high dimension
of the problem. As an alternative, we propose to search in some near-by area containing (parts of) the
manifolds, and adopt the uniform sampling strategy in the search space. The search space is Q for the
discrete variable, and it is selected for the continuous variables excluding vref and ωref following the three
principles:

• The ranges are (−π, π] for the nonlinear variables.
• The ranges are [xmin, xmax] for the linear variables with predeﬁned boundaries in system model.
• The ranges are [ x − ∆x, x + ∆x ], otherwise, where ∆x = 0.1|x∗|, and x∗ is the value of x in the
equilibrium point obtained in the power ﬂow computation with basic model. (With abuse of notation,
the symbol x here represents a scalar variable.)

The RRT computation is carried out in this hybrid case of 39-bus system using the proposed framework
in Sec. IV. Figure 7 shows the extension of a RRT searching tree T in the hybrid state space. The projection
of the ﬁnally constructed searching tree T on δ8 − ω8 planes with two discrete states is shown in Fig.
8, where T is constructed by using the sampling time interval ∆t = 1.26s and number of iterations
K = 2000. The setting of ∆t is the stabilizer time constant of AVR 8, while the choice of δ8 − ω8 planes
is related to Generator 8 with control input.

A feasible execution is obtained on the tree T shown in Fig. 8 and the depth of this execution is 36.
Figures 9-10 show time responses of continuous variables ω, δ, θ and v along the execution. As we have
observed in Fig. 6, the rotor speeds ω of generators soon increase after the fault and the whole system
will lose its stability without proper control actions. But, on the obtained execution shown in Fig. 9(a),
even though they initially oscillate signiﬁcantly after the fault, the rotor speeds ﬁnally converge to one
value (near 1) with the increase of time, indicating the generators reach a (new) synchronous state. The
dynamic responses of rotor angles δ are shown in Fig. 9(b). As an alternative to the original (or absolute)

δ, the relative rotor angles with respect to the Center-Of-Inertia [71], δ − δCOI, are shown in the ﬁgure
for the generators. The center of inertia is deﬁned by

15

δCOI :=

10
(cid:88)

i=1

Hi
H

δi,

where Hi is an inertia constant and H = (cid:80)10
i=1 Hi. The data for generator inertia constants are taken
from Ref. [6]. It is shown in Fig. 9(b) that all the relative rotor angles eventually converge along the
execution. This observation coincides with the convergence of ω in Fig. 9(a). The relative rotor angles
tend to different values for different generators, as the generators initially have different phases before the
fault. Figure 10 shows that the system could provide stable power supply along the searched execution
with proper control actions. Time responses of bus-voltage phases θ are shown in Fig. 10(a), where we
display the relative phases with respect to their spatial average

θavg :=

1
39

39
(cid:88)

j=1

θj,

in accordance with the requirement on θ for the target set Sgoal. Figure 10(b) is for the bus-voltage
amplitudes, and it indicates that the bus-voltages are affected signiﬁcantly by the fault, but recover their
stability along the execution. Figure 11 is the input sequence and discrete switching along the execution.
Figure 12(a) shows the discrete switching of the system between the two states. Figures 9-10 and Fig.
12(a) show that both requirements for the dynamic security analysis deﬁned in Problem 1.1 are fulﬁlled,
and thus verify the dynamic security of the system with respect to the given fault.

In addition to verifying the dynamics security, the feasible execution also synthesizes a concrete control
strategy to drive the system to run in a target area while maintaining the security. Figure 12(a) indicates
the discrete controls to switch between the operation modes, while Fig. 12(b) shows the continuous control
input sequence in each operation mode along the execution. Note that in Fig. 12(a) multiple times of line
switching are observed. Normally, such multiple switching are avoided in practice because they would
cause stressful damage of the transmission systems. But, as shown in Ref. [39], utilizing the idea of
line switching effectively provides a new possibility of power systems control to keep safety operation.
The demonstrated operation in Fig. 12(a) is another example of the effective line switching protocol for
the safe operation. Compared with other control strategies, this obtained strategy provides a guaranteed
solution and a practical approach to large-scale problems.

C. Discussion on Computation Efﬁciency and Application

In conducting the demonstration, the computation environment is MALTAB 2010b working on the
Windows 7 32-bit system, and the hardware platform is a laptop with an intel R(cid:13) CORETM i7-2640M
CPU @2.80GHz and 4G memory. As discussed earlier, the modeling tool and simulator for power
system application is the PSAT toolbox version 2.1.6. The computation time is 27345s to build this
searching tree with ∆t = 1.26s and K = 2000. The computation is conducted in a serial manner for
this problem with 243 continuous variables, 2 discrete states and 11 control inputs, which means, in each
loop of the RRT computation, 2 × 11 times simulations are carried out one-by-one for a DAE with 243
equations. The computation time to conduct a single dynamic simulation is around 1.6896s for this 39-bus
system. Therefore, the total computation time would be no less than 74432.4s by using the classical RRT
framework. The adopted method of reusing simulation results saves at least 63% of the computation time,
since several nodes may share the same parent node in practice.

The current computation time in the demonstration is relatively long, compared with the execution
time. This is due to the time domain simulation and incremental search in the method. The computation
time of the proposed method can be reduced with different approaches. Since the simulation procedure is
recognized as the bottleneck of the computation in Sec. IV-C and the time-domain simulations from one

16

nearest node with different pairs (qi, uj) are totally independent, the computation time can be reduced
signiﬁcantly by adopting parallel computing. In addition to parallelization, Field-Programmable Gate Array
(FPGA) based hardware acceleration of the dynamic simulation of power systems [72] could also be used
to improve the computation efﬁciency.

Regarding the application of the proposed method, the post-contingency on-line use is not suitable at
the current stage. From the power grid perspective, proper emergency control actions are required to be
derived and taken within several seconds to prevent the spreading of the fault over the system networks
and to stabilize the grid, just after a contingency really happens. Considering its computation time, the
proposed method has not been suitable at the current stage for on-line applications of large-scale systems
when a contingency really occurs.

Even though, it should be emphasized that the proposed security analysis method has a clear meaning
and practical values in the off-line use. For example, the following two use cases can be considered for
the off-line application scenarios of the proposed method.

In standard dynamic security assessment systems [25], it is a common idea to obtain a ranked list of
potentially harmful contingencies periodically from a set of possible contingencies based on the real-time
data of power systems by using the dynamic contingency screening and selection module. Time-domain
simulation is further conducted on the selected potential contingencies to evaluate the stability of the
system. Therefore, one use case of the off-line application scenario is to generate a proper set of the
system’s behavior with control actions against the set of contingencies, in order to derive a preventive
control action. The proposed approach is suitable to this off-line use case with strong advantage that it is
capable of deriving a provably-correct action via reachability analysis, which has not been conducted in
power system control research. Limitations of this off-line use lie in the power of representative model
for the system’s behavior and the choice of set of contingencies. For example, if a target practical grid
exhibits transient dynamics due to a contingency that is not included in the set, then the proposed approach
does not generate a provably-correct control action.

Another use case of the off-line application scenario is to generate a dynamically-relevant dataset for
training a model in the machine learning-based method [30] for DSA. Compared to the dataset from the
physical world, the dataset from simulation is easier to access, in addition to the ﬂexibility of considering
more operation modes of the system. Limitations of this off-line use lie in the representativeness of the
dataset and the choice of the machine learning model. Even though dataset obtained using the proposed
approach is provably-correct, the correctness of the trained model may not be guaranteed, due to the
probabilistic nature of the machine learning methods.

VI. CONCLUSION
Security is one of the main concerns in power systems on providing continuous and stable power supply
service. Since power systems are typical CPS, their dynamics possess strong hybrid nature resulted from
the interaction of the cyber- and physical worlds. The hybrid nature and the high-dimension properties of
the dynamics make the analysis to the security of power systems a challenging problem.

This paper proposed to deal with the dynamic security analysis of power systems by checking the reach-
ability of the associated hybrid models, and focused on the index-1 DAE models regarding the continuous
dynamics. A sampling-based algorithm was developed to conduct the analysis in high-dimensional hybrid
state space by extending the RRT algorithm on its sampling strategy, distance function, and computation
framework. With the adoption of a power system analysis toolbox called PSAT, the developed computation
framework was applied to the dynamic security analysis problem of power systems. A case study with
a hybrid case on the 39-bus New England System was carried out to demonstrate the effectiveness and
performance of the proposed approach. In addition to the advantages of the RRT based computation as
discussed in Ref. [41], this architecture provides a practical approach to large-scale problems, especially
for those with many continuous variables. Since the adopted tool can be replaced with any other interested
one in speciﬁed application domains, this method is feasible to handle problems in different ﬁelds with
a wide variety of models.

17

In the past few years, cyber-attacks against power systems, especially the cyber network, have been
manipulating the measurements and injecting false information to fail the critical modules, such as state
estimation and Optimal Power Flow (OPF) in the power system. For the cyber-security issue, the proposed
method in this paper is capable of including an additional module that monitors and records the estimated
state data, and detects a manipulation (anomaly) by comparing a difference in data. This comes directly
from our original idea because we have developed a module-based DSA framework that enables the use
of any existing power system simulators, which was PSAT in the paper. This would not be achieved
in any existing DSA methods. Hence, we speculate that the proposed method is ﬁrstly able to handle
cyber-attacks in the modern DSA technology. To address the issue about cyber-attacks is an important
topic that follows the work presented in the paper.

Regarding the follow-up studies, we also plan to integrate the time-domain simulation based method of
this work with practical direct methods, for example, the BCU method, and machine learning to develop
a framework for the dynamic security assessment.

Some notations used in the paper are concluded in the following table.

APPENDIX

Notations Descriptions

Notations Descriptions

Rn
N+
H
f
m, n, k
q
s
t, τ, T
u
v
x
y
z
ρ
δ
ω
θ

n-dimensional real space
natural number space
hybrid automaton
vector ﬁeld
integers
discrete state
hybrid state
time
control input
vertex; bus voltage amplitude
continuous state
differential variable
algebraic variable
distance
generator rotor angle
generator rotor speed
bus voltage phase

E
F, φ, ψ
G
H
I
K
R
Q
S
U
X
2X
det
χ
T
P
Reach

set of edges
vector-valued functions
guard condition
inertia constant
time interval
number of iterations
reset map
set of discrete states
set of hybrid states
set of control inputs
set of continuous states
power set of X
determinate
execution
searching tree
probability
reachable set

REFERENCES

[1] CPS Steering Group, Cyber-Physical Systems Executive Summary, Arlington, Mar. 2008.
[2] R. Poovendran, “Cyber-physical systems: Close encounters between two parallel worlds,” P. IEEE, vol. 98, no. 8, pp. 1363–1366, Aug.

2010.

[3] Electric Power Research Institute, Report to NIST on the Smart Grid Interoperability Standards Roadmap (Contract No. SB 1341-

090CN-0031), Jun. 17 2009.

[4] P. M. Esfahani, M. Vrakopoulou, K. Margellos, J. Lygeros, and G. Andersson, “Cyber attack in a two-area power system: Impact

identiﬁcation using reachability,” in Proc. American Control Conference, Jun. 2010, pp. 962–967.

[5] T. Athay, R. Podmore, and S. Virmani, “A practical method for the direct analysis of transient stability,” IEEE Trans. Power App. Syst.,

vol. PAS-98, no. 2, pp. 573–584, Mar./Apr. 1979.

[6] M. A. Pai, Energy Function Analysis for Power System Stability. Dordrecht: Kluwer Academic, 1989.
[7] H.-D. Chiang, C.-C. Chu, and G. Cauley, “Direct stability analysis of electric power systems using energy functions: Theory, applications,

and perspective,” P. IEEE, vol. 83, no. 11, pp. 1497–1529, Nov. 1995.

[8] Q. Yang, J. Yang, D. An, N. Zhang, and W. Zhao, “On false data-injection attacks against power system state estimation: Modeling

and countermeasures,” IEEE Trans. Parallel Distrib. Syst., vol. 25, no. 3, pp. 717–729, Mar. 2014.

[9] G. Liang, J. Zhao, F. Luo, S. R. Weller, and Z. Y. Dong, “A review on false data injection attacks against modern power systems,”

IEEE Trans. Smart Grid, vol. 8, no. 4, pp. 1630–1638, Jul. 2017.

18

[10] Q. Yang, D. An, R. Min, W. Yu, X. Yang, and W. Zhao, “On optimal pmu plancement-based defense against data integrity attacks in

smart grid,” IEEE Trans. Inf. Forensics Security, vol. 12, no. 7, pp. 1735–1750, Jul. 2017.

[11] Q. Yang, D. Li, W. Yu, Y. Liu, D. An, X. Yang, and J. Lin, “Toward data integrity attacks against optimal power ﬂow in smart grid,”

IEEE Internet Things J., vol. 4, no. 3, pp. 1726–1738, Oct. 2017.

[12] Z. Li, M. Shahidehpour, and F. Aminifar, “Cybersecurity in distributed power systems,” P. IEEE, vol. 105, no. 7, pp. 1367–1388, Jul.

2017.

[13] U.S.-Canada Power System Outage Task Force, Interim Report: Causes of the August 14th Blackout in the United States and Canada,

Nov. 2003.

[14] K. Poulsen. (2004) Software bug contributed to blackout. [Online]. Available: https://www.securityfocus.com/news/8016
[15] K. Morison, L. Wang, and P. Kundur, “Powerless: Northeast blackout of 2003,” System Failure Case Study, vol. 1, no. 10, pp. 1–4,

Dec. 2007.

[16] K. Zetter. (2016) Inside the cunning, unprecedented hack of ukraine’s power grid. [Online]. Available: https://www.wired.com/2016/

03/inside-cunning-unprecedented-hack-ukraines-power-grid/

[17] A. Greenberg. (2017) How an entire nation became russia’s test lab for cyberwar. [Online]. Available: https://www.wired.com/story/

russian-hackers-attack-ukraine/

[18] L. H. Fink and K. Carlsen, “Operating under stress and strain,” IEEE Spectrum, vol. 15, no. 3, pp. 48–53, Mar. 1978.
[19] F. F. Wu and Y.-K. Tsai, “Probabilistic dynamic security assessment of power systems-I: Basic model,” IEEE Trans. Circuits Syst., vol.

CAS-30, no. 3, pp. 148–159, Sep. 1983.

[20] R. J. Kaye and F. F. Wu, “Dynamic security regions of power systems,” IEEE Trans. Circuits Syst., vol. CAS-29, no. 9, pp. 612–623,

Mar. 1982.

[21] W. Young and N. G. Leveson, “An integrated approach to safety and security based on systems theory,” Comm. ACM, vol. 57, no. 2,

pp. 31–35, Feb. 2014.

[22] M. Ribbens-Pavella, B. Lemal, and W. Pinard, “On-line operation of Liapunov criterion for transient stability studies,” IFAC Proceedings

Volumes, vol. 10, no. 1, pp. 292–296, Feb. 1977.

[23] A. A. Fouad, “Transient stability margin as a tool for dynamic security assessment,” Dept. of Electrical Engineering, Iowa State

University of Science and Technology, Tech. Rep. #EPRI-EL-1755, 1981.

[24] M. Ribbens-Pavella, P. G. Murthy, J. L. Horward, and J. L. Carpentier, “Transient stability index for online stability assessment and

contingency evaluation,” Int. J. Electr. Power Energy Syst., vol. 4, no. 2, pp. 91–99, Apr. 1982.

[25] H.-D. Chiang, Direct Methods For Stability Analysis of Electric Power Systems: Theoretical Foundation, BCU Methodologies, and

Applications. New York: Wiley, 2010.

[26] Y. Xue, T. V. Cutsem, and M. Ribbens-Pavella, “Extended equal area criterion justiﬁcations, generations, applications,” IEEE Trans.

[27]

Power Syst., vol. 4, no. 1, pp. 44–52, Nov. 1989.
I. A. Hiskens and M. A. Pai, “Trajectory sensitivity analysis of hybrid systems,” IEEE Trans. Circuits Syst. I, Fundam. Theory, vol. 47,
no. 2, pp. 204–220, Feb. 2000.

[28] O. Saito, K. Koizumi, M. Udo, M. Sato, H. Mukae, and T. Tsuji, “Security monitoring systems including fast transient stability studies,”

IEEE Trans. Power App. Syst., vol. PAS-94, no. 5, pp. 1789–1805, Sep./Oct. 1975.

[29] X. Chu and Y. Liu, “Real-time transient stability prediction using incremental learning algorithm,” in 2004 IEEE Power Engineering

Society General Meeting (PESGM), vol. 2, Jun. 2004, pp. 1565–1569.

[30] N. Shenoy and R. Ramakumar, “Power systems dynamic security assessment using ﬁsher information metric,” in 2016 IEEE Power

and Energy Society General Meeting (PESGM), Jul. 2016, pp. 1–5.

[31] A. Bemporad and M. Morari, “Control of systems integrating logic dynamics and constraints,” Automatica, vol. 35, no. 3, pp. 407–427,

Mar. 1999.

[32] T. A. Henzinger, “The theory of hybrid automata,” in Proceedings of the 7th Annual IEEE Symposium on Logic in Computer Science,

1996, pp. 278–292.

[33] C. J. Tomlin, J. Lygeros, and S. S. Sastry, “A game theoretic approach to controller design for hybrid systems,” P. IEEE, vol. 88, no. 7,

pp. 949–970, Jul. 2000.

[34] J. Lygeros, K. H. Johansson, S. N. Simic, J. Zhang, and S. S. Sastry, “Dynamical properties of hybrid automata,” IEEE Trans. Autom.

Control, vol. 48, no. 1, pp. 2–17, Jan. 2003.

[35] J. Lygeros, Lecture Notes on Hybrid Systems. ETH Zuich, 2006.
[36] G. K. Fourlas, K. J. Kyriakopoulos, and C. D. Vournas, “Hybrid systems modeling for power systems,” IEEE Circuits Syst. Mag.,

vol. 4, no. 3, pp. 16–23, Third Quarter 2004.

[37] T. Hikihara, “Application of hybrid system theory to power system analysis (I) (in Japanese),” in Annual Meeting Record IEE Japan,

vol. 6, Mar. 2005, p. 187.

[38] Y. Susuki, Y. Takatsuji, and T. Hikihara, “Hybrid model for cascading outage in a power system: A numerical study,” IEICE Trans.

Fundam. Electron. Commun. Comput. Sci., vol. E92-A, no. 3, pp. 871–879, Mar. 2009.

[39] Y. Susuki, T. J. Koo, H. Ebina, T. Yamazaki, T. Ochi, T. Uemura, and T. Hikihara, “A hybrid system approach to the analysis and

design of power grid dynamic performance,” P. IEEE, vol. 100, no. 1, pp. 225–239, Jan. 2012.

[40] Y. Susuki and T. J. Koo, “An application of RRT algorithm to reliability assessment of energy systems (in Japanese),” IEICE, Tech.

Rep. #NLP2014-128, Jan. 2015.

[41] Q. Wu, Y. Susuki, and T. J. Koo, “RRT-based computation for dynamic security analysis of power systems,” IEICE Trans. Fundam.

Electron. Commun. Comput. Sci., vol. E99-A, no. 2, pp. 491–501, Feb. 2016.

[42] N. M. Amato and Y. Wu, “A randomized roadmap method for path and manipulation planning,” in Proceedings of the 1996 IEEE

International Conference on Robotics and Automation, 1996, pp. 113–120.

[43] L. E. Kavralu, P. Svestka, J.-C. Latombe, and M. H. Overmars, “Probabilistic roadmaps for path planning in high-dimensional

conﬁguration spaces,” IEEE Trans. Robot. Autom., vol. 12, no. 4, pp. 566–580, Aug. 1996.

19

[44] S. M. Lavalle, “Rapidly-exploring random trees: A new tool for path planning,” Computer Science Dept., Iowa State University, Tech.

Rep. #98-11, Oct. 1998.

[45] ——, Planning Algorithms. Cambridge: Cambridge University Press, 2006.
[46] S. M. Lavalle and J. J. Kuffner, Jr., “Rapidly-exploring random trees: Progress and prospects,” in Algorithmic and Computational

Robotics: New Directions, B. Donald, K. Lynch, and D. Rus, Eds. Wellesley, MA: A. K. Peters, 2001, pp. 293–308.
[47] S. M. Lavalle, “Robot motion planning: A game-theoretic foundation,” Algorithmica, vol. 26, no. 3, pp. 430–465, Apr. 2000.
[48] S. M. Lavalle and J. J. Kuffner, Jr., “Randomized kinodynamic planning,” in Proceedings of the 1999 IEEE International Conference

on Robotics and Automation, 1999, pp. 473–479.

[49] ——, “Randomized kinodynamic planning,” Int. J. Rob. Res., vol. 20, no. 5, pp. 378–400, 2001.
[50] M. S. Branicky, M. M. Curtiss, J. A. Levine, and S. B. Morgan, “RRTs for nonlinear, discrete, and hybrid planning and control,” in

Proceedings of the 42nd IEEE Conference on Decision and Control, 2003, pp. 657–663.

[51] A. Bhatia and E. Frazzoli, “Incremental search methods for reachability analysis of continuous and hybrid systems,” in Proceedings of
the 7th International Workshop on Hybrid Systems: Computation and Control, ser. Lecture Notes in Computer Science, R. Alur and
G. J. Pappas, Eds., vol. 2993. Berlin, Heidelberg: Springer Berlin Heidelberg, 2004, pp. 142–156.

[52] T. Dang and T. Nahhal, “Randomized simulation of hybrid systems for circuit validation,” in Proceedings of the Forum on Speciﬁcation

and Design Languages, Sep. 2006, pp. 9–15.

[53] ——, “Coverage-guided test gerneration for continuous and hybrid systems,” Form Methods Syst. Des., vol. 34, pp. 183–213, 2009.
[54] E. Plaku, L. E. Kavraki, and M. Y. Vardi, “Hybrid systems: From veriﬁcation to falsiﬁcation,” in Proceedings of 19th International
Conference on Computer Aided Veriﬁcation, ser. Lecture Notes in Computer Science, W. Damm and H. Hermanns, Eds., vol. 4590.
Springer, Jul. 2007, pp. 463–476.

[55] ——, “Hybrid systems: From veriﬁcation to falsiﬁcation by combining motion planning and discrete search,” Form. Methods Syst.

Des., vol. 34, no. 2, pp. 157–182, Apr. 2009.

[56] J. J. Xu, T. J. Koo, and Z. X. Li, “Sampling-based ﬁnger gaits planning for multiﬁngered robotic hand,” Auton. Robot., vol. 28, no. 4,

pp. 385–402, May 2010.

[57] K. E. Brenan, S. L. Campbell, and L. R. Petzold, Numerical Solution of Initial-Value Problems in Differential-Algebraic Equations.

Philadelphia: Society for Industrial and Applied Mathematics, 1996.

[58] J. H. Chow and K. W. Cheung, “A toolbox for power system dynamics and control engineering education and research,” IEEE Trans.

Power Syst., vol. 7, no. 4, pp. 1559–1564, Nov. 1992.

[59] F. Milano, “An open source power system analysis toolbox,” IEEE Trans. Power Syst., vol. 20, no. 3, pp. 1199–1206, Aug. 2005.
[60] A. Humayed, J. Lin, F. Li, and B. Luo, “Cyber-physical systems security – A survey,” IEEE Internet Things J., vol. 4, no. 6, pp.

1802–1831, Dec. 2017.

[61] M. H. Cintuglu, O. A. Mohammed, K. Akkaya, and A. S. Uluagac, “A survey on smart grid cyber-physical system testbeds,” IEEE

Commun. Surveys Tuts., vol. 19, no. 1, pp. 446–464, Feb. 2017.

[62] K. Morison, L. Wang, and P. Kundur, “Power system security assessment,” IEEE Power and Energy Magazine, vol. 2, no. 5, pp. 30–39,

Sep. 2004.

[63] J. James J. Kuffner and S. M. LaValle, “Rrt-connect: An efﬁcient approach to single-query path planning,” in Proceedings of the IEEE

International Conference on Robotics and Automation, vol. 2, 2000, pp. 995–1001.

[64] S. Karaman and E. Frazzoli, “Incremental sampling-based algorithms for optimal motion planning,” in Proceedings of the Robotics:

Science and Systems, Jun. 2010, pp. 1–8.

[65] A. Perez, R. Platt Jr., G. Konidaris, L. Kaelbling, and T. Lozano-Perez, “LQR-RRT∗: Optimal sampling-based motion planning with
automatically derived extension heuristics,” in Proceedings of the IEEE International Conference Robotics and Automtion, May 2012,
pp. 2537–2542.
I. A. S¸ ucan, M. Moll, and L. E. Kavraki, “The Open Motion Planning Library,” IEEE Robotics & Automation Magazine, vol. 19, no. 4,
pp. 72–82, Dec. 2012.

[66]

[67] P. W. Sauer and M. A. Pai, Power System Dynamics and Stability. Upper Saddle River, New Jersey 07458: Prentice Hall, 1998.
[68] A. Bagheri, “Optimal location and signal selection of UPFC device for damping oscillation,” Master’s thesis, Najaf Abad Branch,

Islamic Azad University, 2013.

[69] J. Machowski, J. W. Bialek, and J. R. Bumby, Power System Dynamics: Stability and Control.
[70] Y. Susuki, I. Mezi´c, and T. Hikihara, “Coherent swing instability of power grids,” J. Nonlinear Sci., vol. 21, no. 3, pp. 403–439, Feb.

John Wiley & Sons, 1997.

2011.

[71] P. Kundur, Power System Stability and Control. McGraw-hill, 1994.
[72] Y. Yang, “Hardware acceleration of power system simulation,” Master’s thesis, Imperial College London, 2013.

20

(a) [0, 300] iterations.

(b) [301, 600] iterations.

(c) [601, 900] iterations.

(d) [901, 1200] iterations.

Fig. 7. Extension of RRT in hybrid state space. The left panel corresponds to the discrete state q1, and the right q2. The black dots are the
nodes of the searching tree. The light blue edges are from q1 to q2, and the light red edges are from q2 to q1. The yellow edges specify the
continuous evolution in the same discrete state. The density of nodes grows with number of iterations.

(e) [1201, 1500] iterations.

21

Fig. 8. The constructed RRT searching tree in hybrid state space with K = 2000 and ∆t = 1.26s.

q1

q2

(a) Rotor speeds ωi, i = 1, . . . , 10.

(b) Relative rotor angles with respect to the Center-Of-Inertia, δi − δCOI, i = 1, . . . , 10.

Fig. 9. Time responses of variables ω and δ for generators along the execution.

22

(a) Relative bus-voltage phases with respect to their spatial center, θj − θavg, j = 1, . . . , 39.

Fig. 10. Time responses of variables θ and v for buses along the execution.

(b) Bus-voltage amplitudes vj, j = 1, . . . , 39.

23

Fig. 11. The discrete state and input sequence along the feasible execution.

(a) Discrete state q.

(b) Input sequence u.

Fig. 12. Time responses of discrete state q, and the input sequence along the feasible execution.

403020t [s]100−0.4 −0.2u [p.u.]0.00.2 q         q1 q20.4 t [s] 010203040 q                 q1 q2 t [s] 010203040u [p.u.]  −0.4 −0.20.00.20.4