© 20XX IEEE. Personal use of this material
including
reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any
copyrighted component of this work in other works.

is permitted. Permission from IEEE must be obtained for all other uses,

in any current or future media,

2
2
0
2

t
c
O
7
1

]

Y
S
.
s
s
e
e
[

3
v
6
3
4
2
1
.
4
0
1
2
:
v
i
X
r
a

 
 
 
 
 
 
GENERIC COLORIZED JOURNAL, VOL. XX, NO. XX, XXXX 2020

1

Designing Optimal Key Lengths and
Control Laws for Encrypted Control Systems
based on Sample Identifying Complexity
and Deciphering Time

Kaoru Teranishi, Student Member, IEEE, Tomonori Sadamoto, Member, IEEE,
Aranya Chakrabortty, Senior Member, IEEE, and Kiminao Kogiso, Member, IEEE

Abstract— In the state-of-the-art literature on cryptog-
raphy and control theory, there has been no systematic
methodology of constructing cyber-physical systems that
can achieve desired control performance while being pro-
tected against eavesdropping attacks. In this paper, we
tackle this challenging problem. We ﬁrst propose two novel
notions referred to as sample identifying complexity and
sample deciphering time in an encrypted-control frame-
work. The former explicitly captures the relation between
the dynamical characteristics of control systems and the
level of identiﬁability of the systems while the latter shows
the relation between the computation time for the identi-
ﬁcation and the key length of a cryptosystem. Based on
these two tractable new notions, we propose a systematic
method for designing the both of an optimal key length to
prevent system identiﬁcation with a given precision within
a given life span of systems, and of an optimal controller to
maximize both of the control performance and the difﬁculty
of the identiﬁcation. The efﬁciency of the proposed method
in terms of security level and realtime-ness is investigated
through numerical simulations. To the best of our knowl-
edge, this paper ﬁrst connect the relationship between the
security of cryptography and dynamical systems from a
control-theoretic perspective.

Index Terms— Cyber-physical system, cyber-security,
encrypted control, homomorphic encryption, eavesdrop-
ping attack, system identiﬁcation.

I. INTRODUCTION

A. Motivational literature review

Cyber-physical systems have attracted the attention in nu-
merous areas, such as power grids,
transportation, manu-
facturing, and healthcare [1]–[3]. Integrating communication
and computation layers with a physical layer, cyber-physical
systems are expected to overwhelm the traditional systems

This work was supported by JSPS Grant-in-Aid for JSPS Fellows

Grant Number JP21J22442.

Kaoru Teranishi, Tomonori Sadamoto, and Kiminao Kogiso are with
the Department of Mechanical and Intelligent Systems Engineering, The
University of Electro-Communications, Chofu, Tokyo, 182-8585, Japan
(e-mail: teranishi@uec.ac.jp, sadamoto@uec.ac.jp, kogiso@uec.ac.jp).
Kaoru Teranishi is also a Research Fellow of Japan Society for the

Promotion of Science.

Aranya Chakrabortty is with the Department of Electrical and Com-
puter Engineering, North Carolina State University, Raleigh, NC 27695
USA (e-mail: achakra2@ncsu.edu).

with respect to efﬁciency, reliability, and sustainability [1],
[4]. Meanwhile, cyber-physical systems often face security
threats in exchange for the advantages because, in general,
they communicate with a public and untrustworthy computer,
e.g., cloud, over insecure channels for decision making.

One of major security threats is the eavesdropping attack
that tries to disclose conﬁdential information of cyber-physical
systems [5]. Once an adversary complete the attacks, more
destructive and undetectable attacks can be designed based on
a target system model learned by the disclosed information [6].
is crucial for realizing secure cyber-physical
Therefore,
systems to prevent eavesdropping attacks.

it

To fulﬁll this objective, we deﬁnitely need a measure for
quantifying the security level against the attacks. Some studies
have employed information-theoretic measures, such as mutual
information and directed information, for designing estimators
and controllers with information leakage constraints under
the presence of eavesdroppers [7]. Additionally, differential
privacy [8], another well-known measure used in information
community, has been adopted for private ﬁltering and con-
trols of dynamical systems [9], [10]. However, these existing
measures are not suitable for dynamical systems because it
is not clear that the systems should satisfy how the level of
security. Furthermore, a controller design method based on the
measures has an intrinsic trade-off between the security and
quality of controls due to noise injection [7], [9]. It should
be noted here that some recent papers have proposed control-
theoretic security quantities [3], [11]–[15]. However, the quan-
tities cannot measure the security level against eavesdropping
attacks because they focus on other attacks.

Encrypted control [16] is the state-of-the-art technology
for preventing eavesdropping attacks without noise injection.
Contrary to the information-oriented methods, the performance
degradation in encrypted control systems can be ignored by
increasing a key length of cryptosystem [17]. Moreover, for
a small key length, appropriate quantizers mitigate the quan-
tization errors due to encryption [18], [19]. Thus, encrypted
control is a promising framework for achieving the superior
security and control performance of cyber-physical systems. In
fact, various encrypted control methods have been developed
recently by using partially, somewhat, and (leveled) fully

2

GENERIC COLORIZED JOURNAL, VOL. XX, NO. XX, XXXX 2020

homomorphic encryption [20]–[29]. Moreover, their feasibility
has been veriﬁed through implementation to a drone [30],
fog-computing environment [31], and ﬁeld-programmable gate
array [32]. However, the security level of encrypted control
systems has not been analyzed and quantiﬁed.

B. Contribution

This study considers an attack scenario that an adversary
eavesdrops and then identiﬁes the system matrix of a stochastic
closed-loop system with an encrypted controller by using col-
lected encrypted-data. Under this scenario, we aim to answer
the following quenstions:

• What is the optimal controller to make the identiﬁcation

accuracy within a certain value, and subsequently,

• what is the optimal key length needed to secure the
closed-loop system within a life span of the system?
To this end, we introduce two novel security quantities, sample
identifying complexity and sample deciphering time. This type
of quantiﬁcation is not reported in any papers on cryptography.
The sample identifying complexity is derived as a lower
bound for the total variance, i.e., the inverse of precision, of
Bayesian estimation by an adversary. The sample deciphering
time is computation time for breaking encrypted data without
a secret key to obtain a data set for the estimation. The
security in this study is deﬁned based on these quantities.
Roughly speaking, we say an encrypted control system is
secure if the adversary cannot identify the system matrix with
a certain precision within a life span of the system. The formal
deﬁnition of the security will be described later.

The sample deciphering time is introduced in two cases
with static-key encryption and dynamic-key encryption. Static-
key encryption is traditional public-key encryption of which
the key pair is identical throughout the communication. In
contrast, a key pair in dynamic-key encryption [33] is updated
at a short time interval, e.g., a sampling period. Although
dynamic-key encryption would improve the security level of
encrypted control systems, its security has not yet been proved.
We extend the dynamic-key encryption scheme in [33] and
provide a security proof of the extended scheme.

Using the security quantities, we formulate a design problem
of optimal key length and controller. The optimal controller
is designed to maximize the sample identifying complexity.
In other words, the controller maximizes the difﬁculty of the
system identiﬁcation. More interestingly, such a controller is
provided as the standard stochastic cheap controller improving
the stability degree of a closed-loop system. This fact means,
in controller design, there is no trade-off between the security
level and the control performance.

After designing the optimal controller, we design the op-
timal key length to secure an encrypted control system. The
optimal key length is obtained as the minimum key length to
make the sample deciphering time longer than the system’s life
span. This key length is beneﬁcial for reducing implementation
costs of an encrypted control system while keeping the security
level because the size of key length has a trade-off between
ciphertext strength and computation costs of encryption and
decryption algorithms.

C. Outline

Section II summarizes notations and a deﬁnition of ho-
momorphic encryption. The ElGamal encryption, an example
of a multiplicative homomorphic encryption scheme, is also
introduced. Section III describes the attack scenario considered
in this study. We deﬁne the security of encrypted control
systems and formulate a design problem of the optimal key
length and controller. Section IV proposes sample identifying
complexity and sample deciphering time. They are used to
understand the relationships among a key length, controller,
and the number of samples for system identiﬁcation. Section V
provides the solution to the problem based on the security
quantities. Additionally, we show how the security quantities
can be used for other design problems in encrypted control
systems. Section VI demonstrates the validity of the proposed
method by numerical simulations. Section VII concludes this
paper and presents some remarks on the results of this study.

II. PRELIMINARIES

A. Notation

The sets of real numbers,

integers, security parameters,
public keys, secret keys, plaintexts, and ciphertexts are denoted
by R, Z, S, Kp, Ks, M, and C, respectively. We deﬁne the
sets of integers Z+ := {z ∈ Z | 0 ≤ z} and Zn := {z ∈ Z |
0 ≤ z < n}. The set of n-dimensional real column-vectors
is denoted by Rn, and that of m-by-n real-valued matrices is
denoted by Rm×n. The ith element of a vector v ∈ Rn is
denoted by vi, and the (cid:96)2 norm and the maximum norm of v
are denoted by (cid:107)v(cid:107) and (cid:107)v(cid:107)∞, respectively. The ith column
vector and (i, j) entry of a matrix M ∈ Rm×n are denoted by
Mi and Mij, respectively. The max norm and column stack
vector of M are deﬁned by (cid:107)M (cid:107)max := maxi,j{|Mij|} and
n ](cid:62), respectively. The cardinality of a
vec(M ) := [M (cid:62)
set A is denoted by |A|. The Gaussian distribution with a mean
µ and a variance-covariance matrix Σ is denoted by N (µ, Σ).
The probability density function of N (µ, Σ) is denoted by
f (x; µ, Σ).

1 · · · M (cid:62)

Deﬁnition 1: Let A be a ﬁnite set and X be a random
variable. If Pr(X = a) = 1/|A|, ∀a ∈ A, then we say X
follows the discrete uniform distribution over A and is denoted
as X ∼ U(A).

Deﬁnition 2 (negligible function [34]): We say a function
(cid:15) : Z+ \ {0} → R is negligible if for every positive integer
c > 0 there exists N ∈ Z such that |(cid:15)(n)| < n−c holds for all
n > N .

B. Homomorphic encryption and its example

This section describes the deﬁnition and example of homo-
morphic encryption to introduce the encrypted-control frame-
work. One can refer [35] for the detailed survey of homomor-
phic encryption.

A public-key encryption scheme is a triplet (Gen, Enc, Dec),
where Gen : S → Kp × Ks : k (cid:55)→ (pk, sk) is a key generation
algorithm, Enc : Kp × M → C : (pk, m) (cid:55)→ c is an
encryption algorithm, Dec : Ks × C → M : (sk, c) (cid:55)→ m
is a decryption algorithm, k is a security parameter, e.g.,

TERANISHI et al.: DESIGNING OPTIMAL KEY LENGTHS AND CONTROL LAWS FOR ENCRYPTED CONTROL SYSTEMS BASED ON SAMPLE IDENTIFYING
3
COMPLEXITY AND DECIPHERING TIME

a key length, and (pk, sk) = Gen(k) is a pair of public
key and secret key. Enc and Dec perform elementwise for
a vector and a matrix. Public-key encryption schemes must
satisfy Dec(sk, Enc(pk, m)) = m for all m ∈ M and (pk, sk)
generated by Gen.

Deﬁnition 3: We say (Gen, Enc, Dec) is multiplicative ho-
momorphic encryption if Dec(sk, c (cid:2) c(cid:48)) = mm(cid:48) for all
m, m(cid:48) ∈ M and c, c(cid:48) ∈ C satisfying Enc(pk, m) = c and
Enc(pk, m(cid:48)) = c(cid:48), where (cid:2) : C × C → C is a binary operation
over C. Similarly, additive homomorphic encryption is deﬁned
with (cid:1) : C × C → C.

An example of multiplicative homomorphic encryption
includes the ElGamal encryption [36]. Its algorithms are
Gen : k (cid:55)→ (pk, sk) = ((p, q, g, h), s), Enc : (pk, m) (cid:55)→
c = (gr mod p, mhr mod p), and Dec : (sk, (c1, c2)) (cid:55)→
−sc2 mod p, where q is a k bit prime, p = 2q + 1 is a safe
c1
prime, g is a generator of a cyclic group G := {gi mod p | i ∈
Zq} = M ⊂ Zp \{0} such that gq mod p = 1, h = gs mod p,
C = G2, and r, s ∼ U(Zq). Additionally, multiplicative ho-
momorphism is Dec(sk, Enc(pk, m) ∗ Enc(pk, m(cid:48)) mod p) =
mm(cid:48) mod p, where ∗ is the Hadamard product.

III. ATTACK SCENARIO AND PROBLEM SETTING

Consider a plant described by the discrete-time stochastic

linear system

xt+1 = Apxt + Bput + wt,

(1)

where t ∈ Z+ is a time step, x ∈ Rn is a state, u ∈ Rm is an
input, and w ∈ Rn is an i.i.d. random variable following the
Gaussian distribution N (0, L−1) with the zero vector 0 and a
precision matrix L. Assume that (Ap, Bp) is controllable, and
the initial state is given by x0 ∼ N (0, L−1). A state-feedback
controller

ut = F xt,

(2)

which is installed on a computer over a network, e.g., cloud,
is employed for stabilizing (1), where a feedback gain F is
to be designed. Note that output-feedback controllers can also
be considered although we use a state-feedback controller for
the simplicity of discussion.

The networked control system with (1) and (2) has risks
of eavesdropping attacks because the plant and controller
communicate with each other via network links. This study
considers encrypted control proposed in [20] as a secure
control framework against the attacks. An encrypted control
system includes an encrypter Enc and decrypter Dec in its
feedback loop; see Fig. 1. Note that a sensor (encrypter) and an
actuator (decrypter) in this study are assumed to be installed on
a uniﬁed computer of plant side. An encrypted controller of (2)
with multiplicative homomorphic encryption of Deﬁnition 3 is
deﬁned as

(cF , cxt) (cid:55)→ cUt =

cF11






cFm1

(cid:2) cx1,t
...
(cid:2) cx1,t

· · ·
. . .
· · ·

cF1n

cFmn




 ,

(cid:2) cxn,t
...
(cid:2) cxn,t

Fig. 1. Attack scenario and actions of adversary and defender.

where cF = Enc(pk, F ), and cxt = Enc(pk, xt). An input is
restored as

ut =






(cid:80)n

j=1 Dec(sk, cU1j,t)
...
j=1 Dec(sk, cUmj,t)

(cid:80)n




 ,

and it approximately equals to an input of (2) if quantization
errors caused by the encryption are sufﬁciently small. Thus,
the dynamics of the encrypted control system is obtained as

xt+1 = Axt + wt, A := Ap + BpF.

(3)

By using an encrypted-control framework, conventional con-
trollers can be used while their gains and signals over network
links are encrypted.

We consider an attack scenario to identify the dynamics
of the encrypted control system. The dynamics must be
secret even though an adversary eavesdrops and deciphers the
ciphertexts because he/she would exploit it as an initial step for
executing more sophisticated attacks, such as stealth attacks.
As a result, the total security level of encrypted control systems
can be improved by preventing the identiﬁcation attack. The
worst scenario for a defender is Bayesian estimation of the
dynamics, i.e., A in (3), with deciphered data because the
estimation is the best in terms of the variance of estimator.
This attack is formulated as follows:

Deﬁnition 4: An adversary follows the protocol below:
1) Given T ∈ Z+, collect DEnc := {Enc(pk, xt)}T

t=0 by

eavesdropping attacks.
2) Expose D := {xt}T

t=0 by breaking the ciphertexts
in DEnc using a computer of which performance is
Υ ﬂoating-point operations per second (FLOPS).

3) Choose a prior probability p(A) = f (vec(A); µ, Λ−1)
based on his/her knowledge about a target control sys-
tem. Then, estimate a posterior probability p(A|D) =
f (vec(A); ˆµ(T ), ˆΛ−1(T )) by Bayesian estimation with
p(A) and D.

An adversary aims to identify a system matrix A as a
posterior probability p(A|D), and an estimation ˆA is given
by vec( ˆA) = ˆµ(T ).

Is the encrypted control system secure under what condi-
tions in these settings? In this paper, the system is said to
be secure if identiﬁcation of A with a certain precision is
impossible within a given period. In particular, the security in

EncryptedController of (2)Plant (1)AdversaryDefenderDesign F.Choose k.Estimate of ADecskEncpk4

GENERIC COLORIZED JOURNAL, VOL. XX, NO. XX, XXXX 2020

the attack scenario is deﬁned as follows, where we use the fact
that the trace of a variance-covariance matrix can be used for
a measure of the precision of the estimation since it represents
the total variance:

Deﬁnition 5: Let τc be a life span that represents a period
until the system (1) is replaced, and γc be an acceptable
variance against adversary’s estimation. Deﬁne

τ (T, k) := time for executing step 2) in Deﬁnition 4.

The encrypted control system in Fig. 1 is said to be secure if
there does not exist T ∈ Z+ satisfying

(cid:104)

E

tr(ˆΛ−1(T ))

(cid:105)

< γc ∧ τ (T, k) ≤ τc,

(4)

where ˆΛ(T ) is deﬁned in Deﬁnition 4. If not, the system is
said to be unsecure.

In Deﬁnition 5, τc and γc are the design parameters while
the key length k and the controller F are the implicit decision
variables. As τc is taken larger for protecting the system
during a longer period, the key length k would be longer [37].
Although the longer k is beneﬁcial for ciphertext strength,
it is not desirable in terms of implementation costs because
the online computation costs of Enc and Dec with longer k
has to be larger [38]. In other words, the choice of a longer
key length increases economic costs since a high performance
computer is required for keeping the real-time operation of
the control system. Since there is such a trade-off, we will
design F for making the key length as short as possible.
Later we will show that the ease of identiﬁcation relates to
the stability of A in (3). This implies that the choice of a
good controller F can make the key length k shorter while
making the precision of identiﬁcation is within the tolerance
γc. In this light, we consider the following design problem for
ensuring the dynamical system security.

Problem 1: Consider the encrypted control system in Fig. 1
under the attack scenario in Deﬁnition 4. Find F and a
minimum k ∈ (0, ∞) such that the system is secure deﬁned
in Deﬁnition 5.

An essential question behind Problem 1 is how the key
length k, controller F , and the number of deciphered samples
T relate to the security. The factors k and T are often taken
into account in cryptography [34] and sample complexity of
computational learning theory [39], respectively. Unlike to
this, we have to explicitly consider the controller gain as
well as those two factors because the system of our interest
has dynamics. In view of this, Problem 1 lies in between
cryptography, learning theory, and control theory. In the next
section, we analyze the relation among k, T , F , and the
security.

Remark 1: Additive homomorphic encryption can also be
used instead of using multiplicative homomorphic encryption.
In such a case, an encrypted controller is deﬁned as (F, cxt ) (cid:55)→
(cid:1) · · · (cid:1)
cut = [F11cx1,t
Fmncxn,t](cid:62), and an input is given by ut = Dec(sk, cut). Note
that the encrypted controller has an unencrypted parameter F ,
unlike one with multiplicative homomorphic encryption.

(cid:1) · · · (cid:1) F1ncxn,t ,

· · · , Fm1cx1,t

Remark 2: Although most algorithms to recover D from
DEnc would include integer operations rather than ﬂoating-

point operations, the computational ability for integer opera-
tions in this study is assumed to be quantiﬁed by FLOPS.

Remark 3: So far we have assumed that an adversary can
exactly recover D from DEnc without quantization errors
caused by the encryption. In practice, Enc and Dec in Fig. 1
have to be equipped with an encoder Ecd : R → M and
decoder Dcd : M → R that convert real numbers (F, xt)
to a plaintext space because the most existing homomorphic
encryption schemes rely on arithmetic operations over integers.
Therefore, quantization errors are always involved in the
deciphered samples. However, for simplifying the following
arguments, we do not consider the error, which is the worst
case scenario for the defender. The details of the quantization
error analysis is described in Appendix A.

Remark 4: An adversary of this study is assumed to esti-
mate a system matrix A in (3). One may think that considering
an estimation attack for a controller gain F in (2) is also
important. The attack can be treated as solving simultaneous
equations for F with N independet data sets of x and u. In
such a case, the encrypted control system is said to be secure
if τ (N, k) ≤ τc is satisﬁed.

IV. SAMPLE IDENTIFYING-COMPLEXITY CURVE AND
SAMPLE DECIPHERING-TIME CURVE

This section introduces two novel quantities referred to as
sample identifying-complexity curve and sample deciphering-
time curve to clearly understand the relationship among k, T ,
F , and the security.

A. Sample identifying-complexity curve

We introduce the following lemma that connects the notion

of the security in Deﬁnition 5 to the dynamics of (3).

Lemma 1: Consider the system in Fig. 1 under the attack in
Deﬁnition 4. Suppose A in (3) is Schur. Then, the parameters
of a posterior probability p(A|D) in Deﬁnition 4 are described
as

ˆΛ(T ) = Λ +

T −1
(cid:88)

(xt ⊗ I)L(xt ⊗ I)(cid:62),

t=0

(cid:32)

ˆµ(T ) = ˆΛ−1(T )

Λµ +

T −1
(cid:88)

t=0

(5)

(cid:33)

(xt ⊗ I)Lxt+1

.

(6)

Besides, the following relations hold:

tr(ˆΛ−1(T )) ≥

n2

tr(Λ) + tr(L)

(cid:105)
(cid:104)
tr(ˆΛ−1(T ))

E

,

(cid:107)xt(cid:107)2

T −1
(cid:88)

t=0

(7)

≥ γ(T, F ) :=

tr(Λ)+tr(L)

T −1
(cid:88)

n2
(cid:32) t

(cid:88)

tr

(cid:33).

(8)

AiL−1(Ai)(cid:62)

t=0

i=0

Proof: See Appendix C.
Note here that the term (cid:80)t

i=0 AiL−1(Ai)(cid:62) is the weighted
ﬁnite-time controllability gramian of (3). Lemma 1 shows that
the quantiﬁcation E
in (4) can be bounded from

tr(ˆΛ−1(T ))

(cid:105)

(cid:104)

TERANISHI et al.: DESIGNING OPTIMAL KEY LENGTHS AND CONTROL LAWS FOR ENCRYPTED CONTROL SYSTEMS BASED ON SAMPLE IDENTIFYING
5
COMPLEXITY AND DECIPHERING TIME

below by using the trace of the gramian. We refer to the
bound γ as sample identifying-complexity curve due to the
acknowledge that the curve captures the complexity of the
identiﬁcation of vec(A) with |D| = T + 1 samples. It should
be noted here that the system trajectory xt explicitly depends
on the controller gain F . Thus, the curve is a function of T
and F . We can see the following two observations from (8).
• Dependency of F : The sample identifying complexity
is larger if F makes the stability degree measured by
the trace of the controllability gramian smaller. This is
natural because as the system more stable, the amount of
information, i.e., the system output driven by the initial
state and external input w, can be less, thereby making
the identiﬁcation more difﬁcult.

• Dependency of T : The sample identifying complexity is
larger if the number of deciphered samples lesser. This
implies that the identiﬁcation is difﬁcult for the adversary
by decreasing leaked data samples.

Fig. 2(a) depicts the schematic picture of the curve γ(T, F ).
Although F is an m-by-n matrix, in the ﬁgure larger F implies
the one making A in (3) more stabilized.

When a sample size T is sufﬁciently large, the summation
terms in (5) and (6) should be much larger than the terms Λ
and Λµ, respectively. Then, the estimates ˆΛ and ˆµ satisfy the
following relation to an estimation error.

Corollary 1: If a sample size T is sufﬁciently large, then

ˆΛ(T ) in (5) satisﬁes

E

(cid:104)
(cid:107)A − ˆA(cid:107)2
F

(cid:105)

= E

(cid:105)
(cid:104)
tr(ˆΛ−1(T ))

,

(9)

where vec( ˆA) = ˆµ(T ), and ˆµ(T ) is given by (6).

Proof: See Appendix D.

The equalities (8) and (9) show that the sample identifying
complexity is a lower bound of a type of estimation error
with a sufﬁciently large samples. Thus, it is reasonable that
the difﬁculty of identifying a system matrix is quantiﬁed by
the sample identifying complexity.

For the following argument, we show a special case when
L−1 = σ2I and the adversary has no prior information about
the system, i.e.,

tr(Λ) = 0.

(10)

the following corollary immediately follows from

Then,
Lemma 1:

Corollary 2: If L−1 = σ2I and (10) hold, then γ in (8)

satisﬁes

γ(T, F ) =

T −1
(cid:88)

tr

Proof: See Appendix E.

t=0

n

(cid:32) t

(cid:88)

i=0

Ai(Ai)(cid:62)

(cid:33).

(11)

The sample identifying-complexity curve connects the re-
lationship between the sample complexity E
in
Deﬁnition 5 and a pair (T, F ). Before showing how this is
useful for solving Problem 1, we next show a different curve
that connects the security to T and a key length k.

tr(ˆΛ−1(T ))

(cid:105)

(cid:104)

Remark 5: We have introduced the expectation of a lower
bound of ˆΛ−1 because the computation of the inverse of ˆΛ,
in general, requires a large number of computation resources,

and it cannot be computed in advance of the control system’s
operation. A similar approach can be found in [40]–[43], and
the studies employed the inverse of a trace of the Fisher
information matrix as a lower bound of the precision of general
unbiased estimator for dynamical systems. Unfortunately, the
approach is not specialized in our attack scenario, i.e., it would
give a loose lower bound of tr(ˆΛ−1), and the lower bound
cannot be computed without the system’s operating data.

B. Sample deciphering-time curve

In this paper, we refer

to τ (T, k) in (4) as sample
deciphering-time curve due to the acknowledge that the curve
captures the computation time for deciphering the T + 1
ciphertexts of DEnc. One might consider that the deciphering
time does not depend on the number of samples. This is true
in a traditional setup of public-key encryption, referred to
as static-key encryption in this paper, where the keys used
for encrypting all samples are identical [34]. On the other
hand, when the keys of individual samples are completely
different, in other words, dynamic-key encryption is used [33],
the deciphering-time clearly depends on the number of sam-
ples. We show an explicit representation of τ (T, k) for each
encryption scheme, and show an advantage of the dynamic
case in terms of the security in Deﬁnition 5.

1) Static-key case: As a multiplicative homomorphic en-
cryption scheme, this study uses the ElGamal encryption E
described in Section II. The security of E, i.e., the difﬁculty
of breaking the encryption, is based on the hardness of the
discrete logarithm problem for G that is deﬁned as follows:
Deﬁnition 6 (discrete logarithm problem [44]): Let G be a
group with a binary operation ◦. The discrete logarithm
problem (DLP) for G is to determine, for any given elements
g, h ∈ G, an integer x satisfying

gx = g ◦ g ◦ · · · ◦ g
(cid:125)

(cid:124)

(cid:123)(cid:122)
x times

= h.

the assumption that

Additionally,
there does not exist a
polynomial-time algorithm to solve the DLP is called the
discrete logarithm assumption.

In the ﬁeld of cryptography, the discrete logarithm assump-
tion is widely believed to be satisﬁed. The ElGamal encryption
achieves indistinguishability against chosen-plaintext attacks
(IND-CPA) under the decisional Difﬁe-Hellman (DDH) as-
is a variant of the discrete logarithm
sumption [34] that
assumption. The security level of IND-CPA means that an
adversary can obtain no information about plaintexts from
ciphertexts. Hence, an adversary must solve the DLP for G to
obtain D from DEnc. The majority of algorithms for solving the
DLP for a ﬁnite ﬁeld Fη with a modulus η are subexponential-
time algorithms of which computation time is described as

Lv,d(η) = exp {d(ln η)v(ln ln η)1−v},

(12)

where v and d are algorithm parameters [44]. For instance,
the general number ﬁeld sieve,
the known fastest classi-
cal subexponential-time algorithm, has v = 1/3 and d =
(64/9)1/3 in (12) [37]. Thus, we use

L(k) := L1/3,(64/9)1/3(2k)

(13)

6

GENERIC COLORIZED JOURNAL, VOL. XX, NO. XX, XXXX 2020

(a) Sample identifying-complexity curve.

(b) Sample deciphering-time curve.

Fig. 2. Schematic pictures of sample identifying-complexity curve γ(T , F ) and sample deciphering-time curve τ (T , k).

as the computation time for deciphering a ciphertext of E
with a key length k in the following. Note that G ⊂ Fp, and
L(k) satisﬁes L(k) ≤ L1/3,(64/9)1/3(p) since p ∈ (2k, 2k+1).
Therefore, (13) is stricter with a defender than (12).

We next show the sample deciphering time of the static-key
encryption. Since a single key pair is used for encrypting all
the samples throughout a life span of the encrypted control
system, the adversary has to break only one ciphertext for
ﬁnding the secret key. Once the secret key is found, he/she
can decrypt all ciphertexts of DEnc immediately. Thus, the
sample deciphering time in this case can be described as

τ (0, k) =

L(k)
Υ

,

(14)

where Υ is deﬁned in Deﬁnition 4. For satisfying the second
the key length k will be long because
inequality of (4),
even only one ciphertext cannot be broken during a given
period τc. Although it is natural from the ordinary manner in
cryptography, the online computation costs of the associated
Enc and Dec in Fig. 1 must be heavy, which is not desirable
for real-time controls.

Remark 6: The number ﬁeld sieve is used for solving
not only the DLP but also the prime factorization problem.
Thus, (14) also enables to estimate the computation times
for breaking other encryption schemes, such as RSA [45]
and Paillier encryption [46]. Moreover, we can change L(k)
according to any given encryption scheme such as the LLL-
algorithm for lattice and fully homomorphic encryption, and,
therefore, the sample deciphering time can be obtained for any
encryption scheme as well.

2) Dynamic-key case: One way to reduce the online com-
putational costs of Enc and Dec while keeping the sample
deciphering time long is to regenerate a secret key at each
sampling time. However, this approach is not suitable for real-
time controls due to the high computational costs. As an alter-
native approach, we employ the dynamic-key encryption [33]
that is an augmented concept of public-key encryption. The

overview is as follows: First, give a key pair by Gen at the
initial time. The secret key at time t + 1 is computed by a
simple updating rule based on a modulus operation with a
random number and the secret key at time t. At the same
time, a public key and ciphertexts of controller parameters are
also updated to keep the correctness, i.e., the property that a
ciphertext is decrypted correctly, with the new secret key. Due
to the time-dependency of this dynamic-key encryption, the
adversary would have to break T + 1 ciphertexts to collect
D from DEnc. However, the security proof of the dynamic-
key encryption has not yet been shown. Additionally,
the
dynamic-key encryption refreshes only the second element of
ciphertext, and so, the ﬁrst element remains the same value. In
the following, we extend the dynamic-key encryption in [33]
to update all components of ciphertext and provide the security
proof of the scheme.

The dynamic ElGamal encryption in this study is con-

structed as follows:

Deﬁnition 7: Dynamic ElGamal encryption is a tuple

Edyn := (Gen, Enc, Dec, TK, TC) with the transition maps

TK : ((p, q, g, h), s) (cid:55)→ ((p, q, g, hgs(cid:48)
mod p, (c1gr(cid:48)
TC : (c1, c2) (cid:55)→ (c1gr(cid:48)

mod p), s+s(cid:48) mod q),
)s(cid:48)

mod p),

c2hr(cid:48)

where r(cid:48), s(cid:48) ∼ U(Zq).

Remark 7: The random number s(cid:48) needs to be shared
secretly between a sensor an an actuator if they are installed
on different places. This can be achieved by using a standard
symmetric-key encryption scheme, such as AES. Similarly, a
plant can transmit r(cid:48) and s(cid:48) to an encrypted controller secretly.
In Deﬁnition 7, TK and TC imply updating rules for a key
pair and ciphertext, respectively. TC of the dynamic ElGamal
encryption updates both c1 and c2 unlike to the scheme
in [33]. We ﬁrst show that the correctness and multiplicative
homomorphism of our encryption scheme are satisﬁed even
though the transition map is modiﬁed.

TERANISHI et al.: DESIGNING OPTIMAL KEY LENGTHS AND CONTROL LAWS FOR ENCRYPTED CONTROL SYSTEMS BASED ON SAMPLE IDENTIFYING
7
COMPLEXITY AND DECIPHERING TIME

Proposition 1: Let k be a key length, (pk0, sk0) = Gen(k),
and c0 = Enc(pk0, m). If (pkt+1, skt+1) = TK(pkt, skt) and
ct+1 = TC(ct), then

Dec(skt, ct) = Dec(skt, Enc(pkt, m)) = m mod p
for all m ∈ M and t ∈ Z+. Furthermore, the multiplicative
homomorphism

Dec(skt, ct ∗ Enc(pkt, m(cid:48)) mod p) = mm(cid:48) mod p

is satisﬁed for all m, m(cid:48) ∈ M and t ∈ Z+.

Proof: See Appendix F.

Due to the homomorphism, the dynamics of the encrypted
control system in Fig. 1 with the dynamic-key encryption
scheme Edyn can be regarded as (3) while the key pair and
ciphertexts are dynamically updated.

We next show an explicit representation of the sample
deciphering-time curve τ (T, k) when Edyn is used. To this
end, we show a cryptographic property of the transition maps
TK and TC.

Proposition 2: Let k be a key length, (pk0, sk0) = Gen(k),
m ∈ M, and c0 = Enc(pk0, m). A key pair and ciphertext are
updated by (pkt+1, skt+1) = TK(pkt, skt) and ct+1 = TC(ct),
respectively. Suppose an adversary knows pkt, skt, and ct and
can solve the DLP for G. There exists a negligible function
(cid:15)(k) such that

Pr( ˆskt+1 = skt+1) < (cid:15)(k) ∧ Pr( ˆskt−1 = skt−1) < (cid:15)(k),
for all t ≥ 1, where ˆskt+1 and ˆskt−1 are adversary’s estima-
tions of skt+1 and skt−1, respectively.

Proof: See Appendix G.

Proposition 2 implies that if we use the dynamic ElGamal
cryptosystem, probability that an adversary can obtain the
secret keys at time t + 1 and t − 1 is negligibly small even
though he/she knows all information at time t including the
information given by solving the DLP for G as long as the
updates of a key pair and ciphertexts are performed secretly.
This fact derives the following proposition on the security of
our encryption scheme.

Proposition 3: Edyn satisﬁes IND-CPA at time t under the
DDH assumption even though an adversary knows {pki}t−1
i=0
and {ski}t−1
i=0.

Proof: See Appendix H.

From Propositions 2 and 3, an adversary cannot obtain any
information about a secret key and plaintext for all time t even
though he/she has secret keys at time t − 1 and t + 1. Thus,
he/she must solve the DLP for G T + 1 times to collect D
from DEnc. Therefore, the computation time for deciphering
ciphertexts of DEnc is linearly increased from τ (0, k) as a
sample size of DEnc increases if Edyn is used. Thus,
the
following lemma is derived:

Lemma 2: A sample deciphering-time curve of the en-
crypted control system in Fig. 1 with Edyn in Deﬁnition 7
is given as

Notice that the sample deciphering time of the static-key
case corresponds to (15) with T = 0. It should be noted
here that the curve τ (T, k) monotonically increases as either
of T and k increases. A schematic picture of the sample
deciphering-time curve is shown in Fig. 2(b).

In conclusion, for the encrypted control system in Fig. 1
with Edyn in Deﬁnition 7, we have introduced the two curves:
• γ(T, F ) in (8) that characterizes the difﬁculty of identi-

fying the system (3), and

• τ (T, k) in (15) that quantiﬁes the difﬁculty of deciphering

encrypted samples.

In the next section, we show how these two curves are useful
for solving Problem 1.

V. OPTIMAL KEY LENGTH AND CONTROLLER DESIGN

For simplifying the following discussion, we suppose that
the assumptions in Corollary 2 hold. From Deﬁnition 5 and
Corollary 2, the following immediately follows: Given k and
F , if there does not exist T satisfying

γ(T, F ) < γc ∧ τ (T, k) ≤ τc,

(16)

where γ and τ are respectively in (11) and (15), then the
encrypted control system in Fig. 1 with Edyn in Deﬁnition 7
and (k, F ) is secure. An idea for designing a key length and
controller based on the sample identifying-complexity curve
γ and sample deciphering-time curve τ is as follows:

• Controller design: Note from (11) that the identiﬁca-
tion variance monotonically decreases as the number of
samples increases because the ﬁnite-time controllability
gramian

Wt :=

t
(cid:88)

i=0

Ai(Ai)(cid:62)

(17)

is positive deﬁnite. Thus, we should design the controller
F (cid:63) that maximizes the minimum time step T (cid:63) satisfying
γ(T (cid:63), F (cid:63)) < γc.

• Key length design: The computation time for deciphering
|DEnc| = T (cid:63) + 1 ciphertexts is τ (T (cid:63), k), and the time
monotonically increases in a key length k. Considering
that a key length is desirable to be as small as possible
from the perspective of computational costs, it should
be designed as the minimum key length k(cid:63) satisfying
τ (T (cid:63), k(cid:63)) > τc.

The pair (k(cid:63), F (cid:63)) is a solution to Problem 1 since there
does not exists T satisfying (16) with (k(cid:63), F (cid:63)). Note here
that the controller F (cid:63) simultaneously minimizes the trace of
Wt in (17) of (3). Hence, the controller also improves the
stability of the control system, which will be discussed later.
In the following, the concrete design processes of k(cid:63) and F (cid:63)
are described.

τ (T, k) =

(T + 1)L(k)
,
Υ

(15)

A. Controller design

where L(k) and Υ are deﬁned in (13) and Deﬁnition 4,
respectively.

Following the controller design step, we design F (cid:63) so that
the minimum time step T (cid:63) satisfying the ﬁrst inequality of (16)

8

GENERIC COLORIZED JOURNAL, VOL. XX, NO. XX, XXXX 2020

is as large as possible. From (7), this design can be solved by
making the cost function

JT := E

(cid:35)

(cid:107)xt(cid:107)2

(cid:34)T −1
(cid:88)

t=0

(18)

as small as possible. Since this is a ﬁnite-horizon stochastic
linear quadratic regulator (s-LQR) design problem, an optimal
solution is given as follows:

Lemma 3: Consider the system (3) and JT in (18). Assume

that Bp is full column rank. Then, the control sequence

ut = −(B(cid:62)

p Pt+1Bp)−1B(cid:62)

p Pt+1Apxt,

t ∈ [0, T )

(19)

minimizes JT , where
p Pt+1Ap −A(cid:62)
Pt = A(cid:62)

p Pt+1Bp(B(cid:62)

p Pt+1Bp)−1B(cid:62)

p Pt+1Ap +I,

and PT = I.

Proof: See Appendix I.

Although the control (19) is optimal, the resultant controller
has to be time-varying. Unfortunately, time-varying controllers
are difﬁcult to be used in the encrypted-control framework
because controller parameters must be encrypted and stored
in advance before controller operation due to the difﬁculty of
encrypted controller parameters update. On the other hand, as
T → ∞, the control law converges to ut = F (cid:63)xt with

F (cid:63) = −(B(cid:62)

p P Bp)−1B(cid:62)

p P Ap,

(20)

where P > 0 is the solution to the discrete-time algebraic
Riccati equation

P = A(cid:62)

p P Ap − A(cid:62)

p P Bp(B(cid:62)

p P Bp)−1B(cid:62)

p P Ap + I.

Algorithm 1 Optimal design of encrypted control system with
dynamic-key encryption
Input: Ap, Bp, n, γc, τc, and Υ.
Output: F (cid:63) and k(cid:63).

p P Bp)−1B(cid:62)

p P Ap.

p P Bp(B(cid:62)
p P Ap.

# Controller design.
p P Ap − A(cid:62)
Solve P = A(cid:62)
F (cid:63) ← −(B(cid:62)
p P Bp)−1B(cid:62)
# Solve optimization problem of (21).
A ← Ap + BpF (cid:63).
x ← n, y ← 0, z ← 0, T (cid:63) ← 1.
while x ≤ n/γc do
T (cid:63) ← T (cid:63) + 1.
z ← y.
y ← x.
x ← 2y − z + tr(AT (cid:63)−1(AT (cid:63)−1)(cid:62)).

end while
# Solve optimization problem of (22).
k(cid:63) ← 1.
while L(k(cid:63)) ≤ τcΥ/(T (cid:63) + 1) do

k(cid:63) ← k(cid:63) + 1

end while
return F (cid:63), k(cid:63).

Proposition 4: The summation of trace of a ﬁnite-time

controllability gramian E(T ) in (21) can be computatd as

E(T ) =






n,
2n + tr(AA(cid:62)),
T = 2,
2E(T −1)−E(T −2)+tr(AT −1(AT −1)(cid:62)), T ≥ 3.

T = 1,

Hence, as a suboptimal solution to make JT as small as
possible, we use the static feedback gain F (cid:63) in (2). It is
interesting that the standard stochastic cheap control (19) is
a good solution from the perspective of the security. This fact
clearly connects the notion of the security and classical control
theory. Moreover, the fact means no trade-off between the
security and the control performance exists in controller design
under the adversary of Deﬁnition 4. In other words, whenever
the defender wants F (cid:63) in (20) for improving closed-loop
damping performance, the controller is also a good solution
in terms of the security.

Once F (cid:63) is designed, the minimum time step T (cid:63) satisfying
the ﬁrst inequality of (16) can be uniquely determined as
follows:

T (cid:63) = arg min

E(T ), E(T ) :=

T

s.t. E(T ) >

n
γc

,

T −1
(cid:88)

t=0

tr(Wt)

(21)

where Wt is deﬁned in (17). An illustrative interpretation of
this optimization is shown by the red line in Fig. 2(a). It
should be noted here that T (cid:63) in (21) can be determined for
any controller as long as A in (3) is Schur. However, T (cid:63) in
this case will be larger than the one when F (cid:63) in (20) is used.
This choice, as we will show later, induces a longer key length.
For tractable computation of E(T ), we introduce the following
proposition.

Proof: See Appendix J

Although the computational complexity for computing
E(T ) by the deﬁnition is more than O(T 2), that by (21) can be
reduced to O(T ), which facilitates the optimization problem
(21). The obtained T (cid:63) is used for designing the minimum key
length design problem, which is described in the next section.

B. Key length design

Suppose that T (cid:63) is given by (21). Following the key length
design step, we ﬁnd a minimum key length k(cid:63) such that the
second inequality of (16) does not hold. It follows from the
second inequality of (16) and τ (T, k) in (15) that the key
length minimization can be summarized as

k(cid:63) = arg min

L(k)

s.t. L(k) >

k

τcΥ
T (cid:63) + 1

.

(22)

An illustrative interpretation of this optimization is shown by
the red line in Fig. 2(b).

In conclusion, we have the following the theorem.
Theorem 1: Consider Problem 1 with the assumptions in
Corollary 2. The controller F (cid:63) and the minimum key length
k(cid:63) are given by (20) and (22), respectively. Then, the encrypted
control system in Fig. 1 with the dynamic-key encryption
scheme Edyn in Deﬁnition 7 is secure.

Proof: See Appendix K.

A pseudocode of the design algorithm is summarized as

Algorithm 1.

TERANISHI et al.: DESIGNING OPTIMAL KEY LENGTHS AND CONTROL LAWS FOR ENCRYPTED CONTROL SYSTEMS BASED ON SAMPLE IDENTIFYING
9
COMPLEXITY AND DECIPHERING TIME

C. Other design problems

The parameters of a sample identifying-complexity curve
γ(T, F ) and a sample deciphering-time curve τ (T, k) are a
time step T , controller F , and key length k. The optimal key
length k(cid:63) in Problem 1 is derived under a given controller
F (cid:63). Similarly, by ﬁxing T or k, the curves can be used for
formulation of other design problems.

For example, a problem to design a controller gain F under
a given key length k is a reverse problem of Problem 1. A
degree of freedom in design of F in this problem is restricted
by k through the minimum time step T (cid:63) satisfying τ (T (cid:63), k) >
τc. That is, a defender wants to ﬁnd F achieving a certain
degree of stability of a control system, which is implicitly
parameterized by k.

Furthermore, a problem to design F and k under the given
time step T = τc/Ts is a variant of Problem 1, where Ts is
a sampling time. An adversary in the variant is weaker than
one in Problem 1 because he/she uses all data within the life
span for the estimation. Thus, a defender would be required
to design a ﬁnite-horizon controller maximizing γ(T, F ) and
smaller key length than the solution to Problem 1.

VI. NUMERICAL SIMULATION

Consider (1) with
(cid:20)1
0.5
0 −1.2

Ap =

(cid:21)
, Bp =

(cid:20)0
1

(cid:21)

, L =

(cid:20)104
0

(cid:21)
.

0
104

Let a controller F in (2) be given so that the poles of A in
(3) are assigned to ±0.99. We ﬁrst show how the Bayesian
estimation in step 3) of Deﬁnition 4 performs. Let µ = 0
. . . , 5000}, we perform
and Λ = I. For each T ∈ {1,
the estimation by using a data set D. Fig. 3 shows the
result, where the blue lines are the estimated mean values
( ˆA11, . . . , ˆA22), and light-blue areas are the 95 % conﬁdence
intervals determined by ˆΛ. The true values of A are denoted
by the dashed lines. We can see from these ﬁgures that the
precision of adversary’s estimation improves as the number of
samples increases.

Fig. 4 depicts the sample identifying-complexity curves
γ(T, F ) in (8) for different choices of the gains F that assigns
the poles of A to ±0.99, and F (cid:63) in (20). Let the acceptable
variance in (16) be chosen as γc = 10−6, which is denoted by
the dashed line in the ﬁgure. Then, the minimal time step T (cid:63)
satisfying γ(T (cid:63), F ) < γc is 18586 while that for F (cid:63) is 384473.
The time steps are denoted by T (cid:63)
F (cid:63) , respectively. This
result shows that the stochastic cheap controller (20) improves
sample identifying complexity of the closed-loop system.

F and T (cid:63)

We next compute the sample deciphering-time curves
τ (T (cid:63)
F , k) and τ (T (cid:63)
F (cid:63) , k) in (15), and τ (0, k) in (14) for a
comparison purpose. Note here that the ﬁrst (resp. second)
represents the time for deciphering T (cid:63)
F (cid:63) + 1)
ciphertexts of the dynamic ElGamal encryption Edyn in Def-
inition 7 while the third represents that for deciphering any
ciphertext of the normal ElGamal encryption E. Note that the
third case is irrelevant to controllers because the encryption
is static-key encryption. Fig. 5 illustrates those three curves
for k. Let a life span and a computer performance be chosen

F + 1 (resp. T (cid:63)

(a) ˆA11 = ˆµ1.

(b) ˆA12 = ˆµ3.

(c) ˆA21 = ˆµ2.

(d) ˆA22 = ˆµ4.

Fig. 3. Result of Bayesian estimation for system matrix.

as τc = 1.5768 × 109 s (50 years), which is denoted by
the dashed line in the ﬁgure, and Υ = 442 × 1015 FLOPS,
which is the performance of Fugaku supercomputer 1. Then,
by solving (22), the optimal key length for each cases is
determined to 641 bit, 734 bit, and 1091 bit. This result implies
that the simultaneous use of the dynamic-key encryption and
the s-LQR optimal controller can drastically reduce the key
length while keeping the security level of the encrypted control
system, thereby reducing its computation costs.

Finally, we show how the differences of those three key
lengths appear in the online computation times. All
the
computations are done by using MacBook Pro (macOS Big
Sur, 2.3 GHz quad-core Intel Core i7, 32 GB 3733 MHz
LPDDR4X) with C++. The results are shown in Table I.
Fig. 6 depicts the average computation times of Enc, Dec,
and TK, which are performed on a plant side. Their total
times in E, Edyn with F , and Edyn with F (cid:63) were 2.24 ms,
0.94 ms, and 0.61 ms, respectively. This result conﬁrms
that the computation time is decreased according to reducing
the optimal key length by using the dynamic-key encryption
and the optimal controller. Although one may think that the
resultant differences are not signiﬁcant, the difference will
be more signiﬁcant for larger-dimensional systems. This is
because an online computation of encrypted control systems
includes n times of Enc and mn times of Dec on a plant side.
Hence, for larger-dimensional systems, the proposed design
methodology would be helpful for real-time controls while
keeping the security level theoretically.

VII. CONCLUSION

This paper addressed a systematic design of encrypted
control systems aginst eavesdropping attacks to construct
secure cyber-physical systems. To quantify the security level of
encrypted control systems, the novel security notions, sample
identifying complexity and sample deciphering time, were
proposed. The sample identifying complexity characterizes the
difﬁculty of system identiﬁcation by means of a controllability

1https://www.top500.org/lists/top500/2020/11/

10

GENERIC COLORIZED JOURNAL, VOL. XX, NO. XX, XXXX 2020

TABLE I
COMPUTATION TIMES OF Enc, Dec, TK, AND TC (N = 10000)

k(cid:63)

1091
734
641

Min
1.64
0.56
0.32

Enc (ms)
Ave Max
2.90
1.75
1.25
0.60
0.78
0.35

Std
0.09
0.04
0.03

Min
0.46
0.17
0.13

Dec (ms)
Ave Max
1.04
0.49
0.57
0.18
0.41
0.14

Std
0.04
0.02
0.02

Min
–
0.15
0.11

TK (ms)
Ave Max

–
0.16
0.13

–
0.52
0.33

Std
–
0.01
0.02

Min
–
0.42
0.32

TC (ms)
Ave Max

–
0.47
0.34

–
1.00
0.82

Std
–
0.05
0.03

E
Edyn, F
Edyn, F (cid:63)

the difﬁculty of the identiﬁcation. Furtermore, the optimal key
length was determined as the minimum key length enough to
prevent the identiﬁcation with a given precision within a life
span of the system. The numerical simulations demonstrated
that the optimal key length and controller effectively reduced
the implementation costs of encrypted control systems while
keeping their security level.
In our best knowledge,

this paper is the ﬁrst work to
reveal the relationship between the cryptographic security and
dynamical systems in a control-theoretic manner. One might
think that some papers already related security level and prop-
erties of control systems [3], [11]–[15]. However, these studies
considered only the control-theoretic aspect of the impact of
cyber-attacks, namely resilience, performance degradation, and
detectability. In contrast, our approach connected the effect
of eavesdropping attacks and the characteristics of dynamical
systems taking the feasibility of the attacks into consideration
in terms of a computation time.

In this paper, the precision of adversary’s estimation was
evaluated based on a variance, i.e., the second moment about
a mean. However, we did not consider the ﬁrst moment about
the origin of the estimation. In fact, although the estimator
(6) is a consistent estimator, it is not a non-baiased estimator.
Hence, the adversary would obtain the estimates including a
bias with a precision evaluated by the second moment. This
means the security evaluation of this paper is strict with a
defender. We will modify the proposed method to consider
both the ﬁrst and second moments.

Moreover, the estimation of system and input matrices of
(1) rather than a system matrix of (3) will be considered. This
would be achievable by rewriting (1) as

(cid:21)

(cid:20)xt+1
0

=

(cid:20)Ap Bp
O O

(cid:21) (cid:20)xt
ut

(cid:21)

(cid:21)

(cid:20)wt
0

.

+

The equation is the same form of (3), and thus, the discussions
in this paper would be extended directly. We will also consider
extending the security concepts to be used for more general
encrypted control systems, namely dynamic output-feedback
controllers and nonlinear plants. This can be achieved, for
example, by using the input-output history feedback controller
representation [47] and the Koopman operator [48]. The con-
troller representation realizes a dynamic controller as a matrix-
vector product form such as (2). The Koopman operator lifts a
ﬁnite-dimensional nonlinear system to an inﬁnite-dimensional
linear system. The proposed scheme can be applied for such
systems up to an error due to the truncation of the system
dimension.

APPENDIX

Fig. 4. Comparison of sample identifying-complexity curves.

Fig. 5. Comparison of sample deciphering-time curves.

Fig. 6. Comparison of average computation times on a plant side.

gramian of a closed-loop system. Additionally, the sample
deciphering time represents the computation time for breaking
ciphertexts to collect a data set for the identiﬁcation. Com-
bining the notions, the optimal controller was obtained by
the traditional stochastic cheap controller that simultaneously
maximizes the stability degree of a closed-loop system and

185863844736417341091,,TERANISHI et al.: DESIGNING OPTIMAL KEY LENGTHS AND CONTROL LAWS FOR ENCRYPTED CONTROL SYSTEMS BASED ON SAMPLE IDENTIFYING
11
COMPLEXITY AND DECIPHERING TIME

A. Quantization in encrypted control

This section describes the properties of quantization errors

in encrypted control systems with a linear controller

f : (Φ, ξ) (cid:55)→ ψ = Φξ,

(23)

where Φ ∈ Rα×β is a controller parameter matrix, ξ ∈ Rβ is
a controller input vector, which consists of a controller state
and plant output, and ψ ∈ Rα is a controller output vector,
which consists of a controller state update and plant input. In
this case, an encrypted controller of (23) with the ElGamal
encryption E = (Gen, Enc, Dec) is given as

fE : (cΦ, cξ) (cid:55)→ cΨ

(24)

where cΦ = Enc(pk, mΦ), cξ = Enc(pk, mξ), cΨij =
cΦij ∗ cξj mod p, and mΦ and mξ are plaintexts of Φ and
ξ, respectively.

For implementation of the encrypted controller (24), ξ and
Φ must be encoded to plaintexts before encryption and be
decoded to real numbers after decryption using an encoder and
decoder because a plaintext space is not a set of real numbers.
This study uses the following encoder Ecd∆ : R → M and
decoder Dcd∆ : M → R with a sensitivity ∆ > 0:
(cid:26)

(cid:27)

Ecd∆ : x (cid:55)→ ˇx = min

arg min
m∈M

|x/∆ + p1R<0 (x) − m|

,

Dcd∆ : ˇx (cid:55)→ ¯x = ∆(ˇx − p1Z>q (ˇx)),
where R<0 := {x ∈ R | x < 0}, Z>q := {z ∈ Z | q < z}, and
1A (·) is an indicator function that outputs 1 if its argument
belongs to a set A; otherwise it outputs 0. Ecd∆ and Dcd∆
perform elementwise for a vector and matrix.

Deﬁne Q∆ := Dcd∆ ◦ Ecd∆, then Q∆ : x (cid:55)→ ¯x = x + ˜x
can be regarded as a quantizer [19]. A quantization error ˜x =
Q∆(x) − x of x ∈ R holds

|˜x| ≤ ∆dmax/2 ,

(25)

where dmax is the maximum difference between two con-
secutive elements in the plaintext space. The inequality (25)
implies that the quantization error decreases as ∆ decreases.
Actually, the following propositions on the relationship be-
tween quantization errors and a sensitivity hold:

Proposition 5: Given the ElGamal encryption E and fE
in (24). Let (pk, sk) = Gen(k), mΦ = Ecd∆Φ (Φ), mξ =
Ecd∆ξ (ξ), cΦ = Enc(pk, mΦ), and cξ = Enc(pk, mξ).
Suppose an overﬂow and underﬂow do not occur, that is,
(cid:107)Q∆Φ (Φ)/∆Φ(cid:107)max(cid:107)Q∆ξ (ξ)/∆ξ(cid:107)∞ ≤ q. If ∆Φ → 0 and
∆ξ → 0, then fE satisﬁes

f + ◦ Dcd∆Φ∆ξ ◦ Dec(sk, fE (cΦ, cξ)) = f (Φ, ξ) = ψ,
where f = f + ◦ f ×, and the maps f × and f + are a
multiplication and addition part of f in (23), respectively [20].
Proof: From the multiplicative homomorphism of E, we
have f + ◦ Dcd∆Φ∆ξ ◦ Dec(sk, fE (cΦ, cξ)) = f + ◦ Dcd∆Φ∆ξ ◦
f ×(mΦ, mξ). Regardless of the signs of Φij and ξj, when an
overﬂow and underﬂow do not occur, then the (i, j) entry
of Dcd∆Φ∆ξ ◦ f ×(mΦ, mξ) is given as ∆Φ∆ξ(Φij/∆Φ +
δΦij )(ξj/∆ξ + δξj ) = Ψij + ˜Ψij, where ˜Ψij = ˜Φijξj +
˜ξj, ˜Φij = ∆ΦδΦij = Q∆Φ (Φij) − Φij, and
Φij

˜ξj + ˜Φij

˜ξj = ∆ξδξj = Q∆ξ (ξj) − ξj. From (25), we obtain | ˜Ψij| ≤
|ξj|∆Φdmax/2 + |Φij|∆ξdmax/2 + ∆Φ∆ξd2
max/4. Therefore,
f + ◦ Dcd∆Φ∆ξ ◦ f ×(mΦ, mξ) = ψ as ∆Φ → 0 and ∆ξ → 0
because of ˜Ψij → 0.

a key length of

Proposition 6: Let k be

the El-
Gamal encryption. Suppose max{(cid:107)Φ(cid:107)max, (cid:107)ξ(cid:107)∞} exists.
Then, there exist seisitivities ∆Φ(k) and ∆ξ(k) satisfying
(cid:107)Q∆Φ (Φ)/∆Φ(k)(cid:107)max(cid:107)Q∆ξ (ξ)/∆ξ(k)(cid:107)∞ ≤ q such that
limk→∞ ∆Φ(k) = 0 and limk→∞ ∆ξ(k) = 0.

Proof: Let ∆(k) = ∆Φ(k) = ∆ξ(k), ¯Φ = Q∆Φ (Φ), ¯ξ =
Q∆ξ (ξ), and D = max{(cid:107)Φ(cid:107)max, (cid:107)ξ(cid:107)∞}. Then, the inequality
(cid:107) ¯Φ/∆Φ(k)(cid:107)max(cid:107) ¯ξ/∆ξ(k)(cid:107)∞ ≤ q can be deformed as ∆(k) ≥
(cid:112)(cid:107) ¯Φ(cid:107)max(cid:107) ¯ξ(cid:107)∞/q. Since q ∈ (2k−1, 2k), we obtain the
sufﬁcient condition ∆(k) = (cid:112)(D + ∆(k)dmax/2)2/2k−1 =
D/(2 1
2 (k−1) − dmax/2) to hold the inequality, where, using
(25), (cid:107) ¯Φ(cid:107)max(cid:107) ¯ξ(cid:107)∞ is bounded from above as (cid:107) ¯Φ(cid:107)max(cid:107) ¯ξ(cid:107)∞ ≤
((cid:107)Φ(cid:107)max + ∆(k)dmax/2)((cid:107)ξ(cid:107)∞ + ∆(k)dmax/2) ≤ (D +
∆(k)dmax/2)2. By deﬁnition, every elements in a plaintext
space of the ElGamal encryption are quadratic residues mod-
ulo p. The author of [49] shows that the number of consecutive
quadratic non-residues modulo p is at most O(p 1
4 +δ) for
large p and any positive number δ. This means dmax ≤
2( 1
2 (k−1) −
dmax/2 ≥ limk→∞ 2 1
4 +o(1))(k+1) = ∞. Therefore,
∆(k) = ∆Φ(k) = ∆ξ(k) → 0 as k → ∞.

4 +o(1))(k+1) since p ∈ (2k, 2k+1), and limk→∞ 2 1
2 (k−1) − 2( 1

Proposition 5 shows an output of fE exactly matches one of
f × if the sensitivities are zero as long as Ecd∆ and Dcd∆ do
not cause an overﬂow and underﬂow. Proposition 6 guarantees
such sensitivities exist when a key length is sufﬁciently large.
If a key length is relatively small, then quantization errors
cannot be ignored. The quantization errors would degrade the
precision of adversary’s estimation of A in (3), that is, the
number of data needs to be increased in order to keep the
precision of the estimation.

B. Technical lemmas

This section introduces two technical

lemmas used for

proofs in the following appendices.

Lemma 4: Let v ∈ Rn and M ∈ Rn×n, then

tr((v ⊗ I)M (v ⊗ I)(cid:62)) = tr(M )(cid:107)v(cid:107)2.

Proof:















= tr

tr((v ⊗ I)M (v ⊗ I)(cid:62))
v1I
...
vnI
= tr(diag (cid:0)m11v2
= (m11 + · · · + mnn)(v2

m11
...
mn1
1, · · · , mnnv2

· · · m1n
...
. . .
· · · mnn












(cid:2)v1I

· · ·



vnI(cid:3)


,

1, · · · , m11v2

n, · · · , mnnv2
n

(cid:1)),

1 + · · · + v2

n) = tr(M )(cid:107)v(cid:107)2.

This completes the proof.

Lemma 5: Let M ∈ Rm×n be a full column rank matrix,
and P ∈ Rm×m be a positive deﬁnite matrix, then M (cid:62)P M
is positive deﬁnite and invertible.

Proof: For any non-zero vector x ∈ Rn,

x(cid:62)(M (cid:62)P M )x = (M x)(cid:62)P (M x) > 0.

12

GENERIC COLORIZED JOURNAL, VOL. XX, NO. XX, XXXX 2020

Therefore, M (cid:62)P M is positive deﬁnite, and this also means it
is invertible.

where

C. Proof of Lemma 1

Proof: From Bayes’ theorem, the probability density
functions in Deﬁnition 4 hold p(A|D) = p(D|A)p(A)/p(D) ∝
p(D|A)p(A). Additionally,

p(D|A) = p(x0)

= p(x0)

T −1
(cid:89)

t=0
T −1
(cid:89)

p(xt+1|xt),

E (cid:2)(cid:107)xt(cid:107)2(cid:3) = tr


E


(cid:32) t

(cid:88)



i=0

Aiwt−i−1

Aiwt−i−1



(cid:33)(cid:62)
 ,


(cid:33)(cid:32) t

(cid:88)

i=0

= tr

= tr

(cid:32) t

(cid:88)

i=0
(cid:32) t

(cid:88)

i=0

AiE (cid:2)wt−i−1w(cid:62)

t−i−1

(cid:3) (Ai)(cid:62)

(cid:33)

,

(cid:33)

AiΣ(Ai)(cid:62)

.

f (xt+1; (xt ⊗ I)(cid:62) vec(A), L−1).

This completes the proof.

t=0
where Axt = (xt ⊗ I)(cid:62) vec(A). It follows that

ln p(A|D)

= ln p(D|A) + ln p(A) + const.,

T −1
(cid:88)

=

ln f (xt+1; (xt ⊗ I)(cid:62) vec(A), L−1)

t=0
+ ln f (vec(A); µ, Λ−1) + ln p(x0) + const.,

= −

1
2

T −1
(cid:88)

t=0

(xt+1 − (xt ⊗ I)(cid:62) vec(A))(cid:62)L

D. Proof of Corollary 1

Proof: When a sample size T is sufﬁciently large, the

estimates ˆΛ and ˆµ are given by

ˆΛ ≈

T −1
(cid:88)

t=0

(xt ⊗ I)L(xt ⊗ I)(cid:62),

ˆµ ≈ vec(A) + ˆΛ−1

(cid:32)T −1
(cid:88)

(xt ⊗ I)Lwt

(cid:33)

,

t=0

(xt+1 − (xt ⊗ I)(cid:62) vec(A))

where xt+1 = Axt + wt = (xt ⊗ I)(cid:62) vec(A) + wt. Hence,

−

= −

1
(vec(A) − µ)(cid:62)Λ(vec(A) − µ) + const.,
2
(cid:40)
1
2

(xt ⊗ I)L(xt ⊗ I)(cid:62)

vec(A)(cid:62)

T −1
(cid:88)

Λ +

(cid:32)

(cid:32)

−2 vec(A)(cid:62)

Λµ +

t=0
T −1
(cid:88)

(xt ⊗ I)Lxt+1

(cid:33)(cid:41)

+ const.,

(cid:33)

vec(A)

= E

= E (cid:2)(cid:107) vec(A) − ˆµ(cid:107)2(cid:3)
2

(xt ⊗ I)Lwt

 ,

(cid:33)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

E

(cid:104)
(cid:107)A − ˆA(cid:107)2
F

(cid:105)

(cid:32)T −1
(cid:88)





(cid:13)
(cid:13)
ˆΛ−1
(cid:13)
(cid:13)
(cid:13)

(cid:34)

(cid:32)
ˆΛ−1

tr

= E

t=0
(cid:32)T −1
(cid:88)

(xt ⊗I)Lwtw(cid:62)

(cid:33)
t L(cid:62)(xt ⊗I)(cid:62)

(cid:16)ˆΛ−1(cid:17)(cid:62)(cid:33)(cid:35)

,

t=0

(vec(A)(cid:62) ˆΛ vec(A) − 2 vec(A)(cid:62) ˆΛˆµ) + const.,

= −

1
2

where

ˆΛ = Λ +

T −1
(cid:88)

t=0
(cid:32)

ˆµ = ˆΛ−1

Λµ +

(xt ⊗ I)L(xt ⊗ I)(cid:62),

T −1
(cid:88)

(cid:33)

(xt ⊗ I)Lxt+1

.

t=0
That is, p(A|D) = f (vec(A); ˆµ, ˆΛ−1). Furthermore, it follows
from Lemma 4 that

tr(ˆΛ−1) ≥ n2 tr(ˆΛ)−1 = n2

tr(Λ) + tr(L)

(cid:32)

T −1
(cid:88)

(cid:33)−1

(cid:107)xt(cid:107)2

.

t=0
The solution of (3) is xt = (cid:80)t
i=0 Aiwt−i−1 for all t ≥ 0,
where w−1 := x0. Therefore, the sample-identifying complex-
ity curve γ(T, F ) is given as

n2

(cid:33)−1
 ,

γ(T, F ) = E

tr(Λ) + tr(L)

(cid:107)xt(cid:107)2

T −1
(cid:88)

(cid:32)

(cid:40)

= n2

tr(Λ) + tr(L)

t=0

T −1
(cid:88)

tr

(cid:32) t

(cid:88)

t=0

i=0

(cid:33)(cid:41)−1

AiΣ(Ai)(cid:62)

,

(cid:34)

(cid:32)

= E

tr

ˆΛ−1

t=0
(cid:32)T −1
(cid:88)

= E

(cid:104)

(cid:105)
tr(ˆΛ−1)

.

t=0

(xt ⊗ I)L(xt ⊗ I)(cid:62)

(cid:33)

(cid:16)ˆΛ−1(cid:17)(cid:62)(cid:33)(cid:35)

,

This completes the proof.

E. Proof of Corollary 2

Proof: From the assumptions, tr(L) = nσ−2 and

(cid:33)

AiΣ(Ai)(cid:62)

= σ2 tr

(cid:32) t

(cid:88)

tr

i=0

(cid:33)

Ai(Ai)(cid:62)

.

(cid:32) t

(cid:88)

i=0

Thus,

(cid:40)

γ(T, F ) = n2

nσ−2

T −1
(cid:88)

σ2 tr

(cid:40)T −1
(cid:88)

tr

= n

t=0
(cid:32) t

(cid:88)

t=0

i=0

This completes the proof.

(cid:33)(cid:41)−1

Ai(Ai)(cid:62)

,

(cid:32) t

(cid:88)

i=0

(cid:33)(cid:41)−1

Ai(Ai)(cid:62)

.

TERANISHI et al.: DESIGNING OPTIMAL KEY LENGTHS AND CONTROL LAWS FOR ENCRYPTED CONTROL SYSTEMS BASED ON SAMPLE IDENTIFYING
13
COMPLEXITY AND DECIPHERING TIME

F. Proof of Proposition 1

Let

Proof:

(pkt, skt) = ((p, q, g, ht), st), ct =
(c1,t, c2,t), and rt be a random number used in the encryption
algorithm at time t. From the proof of Theorem 1 in [33],
Dec(skt, Enc(pkt, m)) = m mod p is satisﬁed. The remaining
part Dec(skt, ct) = m mod p is obtained by direct calculation
as

c1,t

−stc2,t = (grt−1 gr(cid:48)

)−st(grt−1gr(cid:48)

rt−1ht−1
= mg−(rt−1+r(cid:48))(st−1+s(cid:48))g(rt−1+r(cid:48))(st−1+s(cid:48)),
= m mod p.

mht−1

)s(cid:48)

r(cid:48)

,

Furthermore,

Dec(skt, ct ∗Enc(pkt, m(cid:48)) mod p) = (c1,tgrt)−stc2,tm(cid:48)ht

rt,

−stc2,tm(cid:48)g−strtgstrt,

= c1,t
= mm(cid:48) mod p.

This completes the proof.

G. Proof of Proposition 2

Proof: Let (pkt, skt) = ((p, q, g, ht), st) and ct =
(c1,t, c2,t). The adversary cannot calculate skt+1 = skt + s(cid:48)
t
and skt−1 = skt−2 + s(cid:48)
t−2 even though he/she knows skt =
t−1, pkt = gst−1+s(cid:48)
skt−1 + s(cid:48)
t−1, c2,t =
t−1)(st−1+s(cid:48)
mg(rt−1+r(cid:48)
t−1 =
logg c1,t as long as s(cid:48)

−sktc2,t, and rt−1+r(cid:48)
t−2 are secret.

t−1), m = c1,t
t−1, and s(cid:48)
t, s(cid:48)

t−1 , c1,t = grt−1+r(cid:48)

st is randomly updated, i.e., st ∼ U(Zq) [33]. Additionally,
ht = gst mod p ∼ U(G) because st ∼ U(Zq) and G is
isomorphic to Zq [33]. Similarly, c1,t = c1,t−1gr(cid:48)
t−1 mod p ∼
s(cid:48)
t−1c2,t−1(gs(cid:48)
t−1ht−1)r(cid:48)
U(G) and c2,t = c1,t−1
t−1 mod p ∼
t mod p ∼ U(G), gs(cid:48)
t ∼ U(Zq), gr(cid:48)
U(G) since r(cid:48)
tht mod p ∈
G and (gs(cid:48)
t mod p ∼ U(G). These facts conclude sam-
ples {ht}t∈I, {st}t∈I, {c1,t}t∈I, and {c2,t}t∈I for any time
span I ⊂ [0, ∞) are unbiased. Therefore, the best strategy for
the adversary to estimate skt+1 and skt−1 is random sampling
from Zq, that is, Pr( ˆskt+1 = skt+1) = Pr( ˆskt−1 = skt−1) =
q−1.

tht)r(cid:48)

Let (cid:15)(k) = 2−(k−1) with a key length k > 1. Then, for
every positive integers c > 0, there exists N ∈ Z such that
(cid:15)(k) < k−c for all k > N because (cid:15)(k) and k−c decrease
monotonically for k > 1 and satisfy limk→∞ (cid:15)(k)/k−c =
limk→∞ 2kc/2k = 0. Therefore, (cid:15)(k) is negligible and satis-
ﬁes Pr( ˆskt+1 = skt+1) = Pr( ˆskt−1 = skt−1) = q−1 < (cid:15)(k)
since q ∈ (2k−1, 2k).

H. Proof of Proposition 3

The security of a cryptosystem is formally deﬁned via a
game between a challenger and an adversary [50]. The IND-
CPA game is described as follows: 1) The challenger generates
a key pair and gives the public key to the adversary. 2) The
adversary chooses two plaintexts based on his/her knowledge
that is only the public key in this case and sends the plaintexts
to the challenger. 3) The challenger randomly selects a plain-
text from the given plaintexts and returns it to the adversary.
4) The adversary guesses which plaintext was encrypted. This

process can be formulated by using probabilistic polynomial-
time algorithms, A0 and A1, as follows.

IND-CPA

1) (pk, sk) = Gen(k).
2) (m0, m1, σ) = A0(pk).
3) c = Enc(pk, mb), b ∼ U({0, 1}).
4) ˆb = A1(c, σ).

The cryptosystem satisﬁes IND-CPA if the challenger wins
the game, that is, the adversary’s advantage | Pr(b = ˆb) −
1/2| is negligible. We now show the proof of Proposition 3
by reducing the IND-CPA game of the dynamic ElGamal
encryption to IND-CPA of the normal ElGamal encryption.

Proof: Consider the IND-CPA game of the dynamic

ElGamal encrypion denoted by IND-CPA0

dyn.

IND-CPA0

dyn

1) (pk0, sk0) = Gen(k).
2) (m0, m1, σ) = A0(pk0).
3) c0 = Enc(pk0, mb), b ∼ U({0, 1}).
4) Set t ← 0.
5) (pkt+1, skt+1) = TK(pkt, skt).
6) ct+1 = TC(ct).
7) Set t ← t + 1, and repeat 5) to 7) as needed.
8) ˆb = A1({cn}t
n=0, {pkn}t−1

n=0, {skn}t−1

n=0, σ).

In the modiﬁed game IND-CPA1

dyn, ﬁx the lines 5) and
dyn to (pkt+1, skt+1) = Gen(k) and ct+1 =

6) of IND-CPA0
Enc(pkt+1, mb), respectively.

IND-CPA1

dyn

1) (pk0, sk0) = Gen(k).
2) (m0, m1, σ) = A0(pk0).
3) c0 = Enc(pk0, mb), b ∼ U({0, 1}).
4) Set t ← 0.
5) (pkt+1, skt+1) = Gen(k).
6) ct+1 = Enc(pkt+1, mb).
7) Set t ← t + 1, and repeat 5) to 7) as needed.
8) ˆb = A1({cn}t
n=0, {pkn}t−1

n=0, {skn}t−1

n=0, σ).

From the proof of Proposition 2, this modiﬁcation does not
change any probability in IND-CPA0
dyn since operations of
TK and TC are completely random. Therefore,
the differ-
ence between the adversary’s advantages in IND-CPA0
dyn and
IND-CPA1
dyn is negligible. Furthermore, the modiﬁcation con-
cludes {cn}t−1
n=0 and {skn}t−1
n=0 give no information
about ct and mb. Thus, we obtain the equivalent game of
IND-CPA1

dyn, which is denoted by IND-CPA2

n=0, {pkn}t−1

dyn.

IND-CPA2

dyn

1) (pk0, sk0) = Gen(k).
2) (m0, m1, σ) = A0(pk0).
3) c0 = Enc(pk0, mb), b ∼ U({0, 1}).
4) Set t ← 0.
5) (pkt+1, skt+1) = Gen(k)
6) ct+1 = Enc(pkt+1, mb).
7) Set t ← t + 1, and repeat 5) to 7) as needed.
8) ˆb = A1(ct, σ).

14

GENERIC COLORIZED JOURNAL, VOL. XX, NO. XX, XXXX 2020

IND-CPA2

dyn is clearly the same as IND-CPA because the
repetition of 5) to 7) does not affect the adversary’s advantage.
This fact concludes that the difference between adversary’s
advantages in IND-CPA0
dyn and IND-CPA is negligible. In
addition, the advantage in IND-CPA of the ElGamal encryption
is negligible under the DDH assumption. From the above
discussions, the dynamic ElGamal encryption satisﬁes IND-
CPA at time t under the DDH assumption.

I. Proof of Lemma 3

p Pt+1Bp)−1B(cid:62)

Proof: The problem that minimizes JT in (18) is a form
of the typical ﬁnite-horizon discrete-time stochastic linear
quadratic regulator problem [51]. Hence, the optimal control
sequence is given as ut = −(B(cid:62)
p Pt+1Apxt
if B(cid:62)
p Pt+1Ap −
A(cid:62)

p Pt+1Bp)−1B(cid:62)
p Pt+1Bp is invertible, where Pt = A(cid:62)

p Pt+1Bp(B(cid:62)
PT and PT −1 = A(cid:62)
p }Ap + I are
positive deﬁnite because B(cid:62)
p Bp is invertible from Lemma 5,
and Bp(B(cid:62)
is a hat matrix whose eigenvalues
consist of n ones and m − n zeros. Assume that PT −i >
p {PT −i −
0 for 1 ≤ i < T ,
PT −iBp(B(cid:62)
p PT −iBp
is positive deﬁnite and invertible from Lemma 5. Additionally,

p Pt+1Ap + I, and PT = I.
p Bp)−1B(cid:62)

then PT −i−1 = A(cid:62)
p PT −i}Ap + I, where B(cid:62)

p PT −iBp)−1B(cid:62)

p {I − Bp(B(cid:62)

p Bp)−1B(cid:62)
p

(cid:20) PT −i
B(cid:62)

p PT −i B(cid:62)

PT −iBp
p PT −iBp

(cid:21)

> 0

since PT −i > 0. Thus, from Schur complement, PT −i −
PT −iBp(B(cid:62)
p PT −i > 0. Therefore, PT −i−1 is
positive deﬁnite, and B(cid:62)
p Pt+1Bp is invertible for all t ∈ [0, T ).

p PT −iBp)−1B(cid:62)

J. Proof of Proposition 4

Proof: The cases of T = 1, 2 can be easily conﬁrmed.

For T ≥ 3, it follows that

E(T ) = E(T − 1) +

T −2
(cid:88)

i=0

tr(Ai(Ai)(cid:62)) + tr(AT −1(AT −1)(cid:62)),

= E(T −1)+(E(T −1)−E(T −2))+tr(AT−1(AT−1)(cid:62)),
= 2E(T − 1) − E(T − 2) + tr(AT −1(AT −1)(cid:62)).

This completes the proof.

K. Proof of Theorem 1

Proof: From (11), (17), and (21), we have the minimum
time step T (cid:63) satisfying γ(T (cid:63), F (cid:63)) < γc. Then, from (15) and
(22), the key length k(cid:63) fulﬁlls τ (T (cid:63), k(cid:63)) > τc. Therefore, the
encrypted control system is secure.

REFERENCES

[1] E. A. Lee, “Cyber physical systems: Design challenges,” in 11th IEEE
International Symposium on Object and Component-Oriented Real-Time
Distributed Computing, 2008, pp. 363–369.

[2] A. Humayed, J. Lin, F. Li, and B. Luo, “Cyber-physical systems security
– a survey,” IEEE Internet of Things Journal, vol. 4, no. 6, pp. 1802–
1831, 2017.

[3] S. M. Dibaji, M. Pirani, D. B. Flamholz, A. M. Annaswamy, K. H.
Johansson, and A. Chakrabortty, “A systems and control perspective of
CPS security,” Annual Reviews in Control, vol. 47, pp. 394–411, 2019.

[4] Z. Wang, H. Song, D. W. Watkins, K. G. Ong, P. Xue, Q. Yang, and
X. Shi, “Cyber-physical systems for water sustainability: Challenges and
opportunities,” IEEE Communications Magazine, vol. 53, no. 5, pp. 216–
222, 2015.

[5] A. Teixeira, I. Shames, H. Sandberg, and K. H. Johansson, “A se-
cure control framework for resource-limited adversaries,” Automatica,
vol. 51, pp. 135–148, 2015.

[6] M. S. Chong, H. Sandberg, and A. M. H. Teixeira, “A tutorial introduc-
tion to security and privacy for cyber-physical systems,” in European
Control Conference, 2019, pp. 968–978.

[7] E. Nekouei, T. Tanaka, M. Skoglund, and K. H. Johansson, “Information-
theoretic approaches to privacy in estimation and control,” Annual
Reviews in Control, vol. 47, pp. 412–422, 2019.

[8] C. Dwork, F. McSherry, K. Nissim, and A. Smith, “Calibrating noise to
sensitivity in private data analysis,” in Theory of Cryptography, 2006,
pp. 265–284.

[9] J. Cort´es, G. E. Dullerud, S. Han, J. Le Ny, S. Mitra, and G. J. Pappas,
“Differential privacy in control and network systems,” in Conference on
Decision and Control, 2016, pp. 4252–4272.

[10] M. U. Hassan, M. H. Rehmani, and J. Chen, “Differential privacy
techniques for cyber physical systems: A survey,” IEEE Communications
Surveys & Tutorials, vol. 22, no. 1, pp. 746–789, 2020.

[11] C. Murguia, I. Shames, J. Ruths, and D. Neˇsi´c, “Security metrics and
synthesis of secure control systems,” Automatica, vol. 115, p. 108757,
2020.

[12] H. Sandberg, A. Teixeira, and K. H. Johansson, “On security indices
for state estimators in power networks,” in First Workshop on Secure
Control Systems, 2010.

[13] J. Miloˇsevi´c, A. Teixeira, K. H. Johansson, and H. Sandberg, “Actuator
security indices based on perfect undetectability: Computation, robust-
ness, and sensor placement,” IEEE Transactions on Automatic Control,
vol. 65, no. 9, pp. 3816–3831, 2020.

[14] S. Feng, A. Cetinkaya, H. Ishii, P. Tesi, and C. D. Persis, “Networked
control under DoS attacks: Tradeoffs between resilience and data rate,”
IEEE Transactions on Automatic Control, vol. 66, no. 1, pp. 460–467,
2021.

[15] A. Cetinkaya, P. Arcaini, H. Ishii, and T. Hayakawa, “A search-based
approach to identifying jamming attacks and defense policies in wireless
networked control,” in IEEE Conference on Decision and Control, 2020,
pp. 5717–5724.

[16] M. S. Darup, A. B. Alexandru, D. E. Quevedo, and G. J. Pappas,
“Encrypted control for networked systems – An illustrative introduction
and current challenges,” arXiv:2010.00268, Oct 2020.

[17] K. Kogiso, “Upper-bound analysis of performance degradation in en-
crypted control system,” in American Control Conference, 2018, pp.
1250–1255.

[18] M. Kishida, “Encrypted control system with quantiser,” IET Control

Theory & Applications, vol. 13, no. 1, pp. 146–151, 2019.

[19] K. Teranishi, N. Shimada, and K. Kogiso, “Stability analysis and
dynamic quantizer for controller encryption,” in IEEE Conference on
Decision and Control, 2019, pp. 7184–7189.

[20] K. Kogiso and T. Fujita, “Cyber-security enhancement of networked
control systems using homomorphic encryption,” in IEEE Conference
on Decision and Control, 2015, pp. 6836–6843.

[21] F. Farokhi, I. Shames, and N. Batterham, “Secure and private control
using semi-homomorphic encryption,” Control Engineering Practice,
vol. 67, pp. 13–20, 2017.

[22] J. Kim, C. Lee, H. Shim, J. H. Cheon, A. Kim, M. Kim, and Y. Song,
“Encrypting controller using fully homomorphic encryption for security
of cyber-physical systems,” IFAC-PapersOnLine, vol. 49, no. 22, pp.
175–180, 2016.

[23] M. S. Darup, A. Redder, I. Shames, F. Farokhi, and D. E. Quevedo,
“Towards encrypted MPC for linear constrained systems,” IEEE Control
Systems Letters, vol. 2, no. 2, pp. 195–200, 2018.

[24] M. S. Darup, A. Redder, and D. E. Quevedo, “Encrypted cooperative
control based on structured feedback,” IEEE Control Systems Letters,
vol. 3, no. 1, pp. 37–42, 2019.

[25] A. B. Alexandru, K. Gatsis, Y. Shoukry, S. A. Seshia, P. Tabuada,
and G. J. Pappas, “Cloud-based quadratic optimization with partially
homomorphic encryption,” IEEE Transactions on Automatic Control,
2020, (early access).

[26] A. B. Alexandru, A. Tsiamis, and G. J. Pappas, “Towards private data-
driven control,” in IEEE Conference on Decision and Control, 2020, pp.
5449–5456.

[27] R. Fritz, M. Fauser, and P. Zhang, “Controller encryption for discrete
event systems,” in American Control Conference, 2019, pp. 5633–5638.

TERANISHI et al.: DESIGNING OPTIMAL KEY LENGTHS AND CONTROL LAWS FOR ENCRYPTED CONTROL SYSTEMS BASED ON SAMPLE IDENTIFYING
15
COMPLEXITY AND DECIPHERING TIME

[28] M. Ristic, B. Noack, and U. D. Hanebeck, “Secure fast covariance
intersection using partially homomorphic and order revealing encryption
schemes,” IEEE Control Systems Letters, vol. 5, no. 1, pp. 217–222,
2021.

[29] J. Suh and T. Tanaka, “Encrypted value iteration and temporal difference
learning over leveled homomorphic encryption,” arXiv:2103.11065, Mar
2021.

[30] J. H. Cheon, K. Han, S. M. Hong, H. J. Kim, J. Kim, S. Kim, H. Seo,
H. Shim, and Y. Song, “Toward a secure drone system: Flying with
real-time homomorphic authenticated encryption,” IEEE Access, vol. 6,
pp. 24 325–24 339, 2018.

[31] K. Teranishi, N. Shimada, and K. Kogiso, “Development and examina-
tion of fog computing-based encrypted control system,” IEEE Robotics
and Automation Letters, vol. 5, no. 3, pp. 4642–4648, 2020.

[32] J. Tran, F. Farokhi, M. Cantoni, and I. Shames, “Implementing homo-
morphic encryption based secure feedback control,” Control Engineering
Practice, vol. 97, p. 104350, 2020.

[33] K. Teranishi, N. Shimada, and K. Kogiso, “Stability-guaranteed dynamic
ElGamal cryptosystem for encrypted control systems,” IET Control
Theory & Applications, vol. 14, no. 16, pp. 2242–2252, 2020.

[34] J. Katz and Y. Lindell, Introduction to Modern Cryptography, D. R.

Stinson, Ed. Boca Raton: CRC Press, 2015.

[35] A. Acar, H. Aksu, A. S. Uluagac, and M. Conti, “A survey on
homomorphic encryption schemes: Theory and implementation,” ACM
Computing Surveys, vol. 51, no. 4, 2018.

[36] T. Elgamal, “A public key cryptosystem and a signature scheme based on
discrete logarithms,” IEEE Transactions on Information Theory, vol. 31,
no. 4, pp. 469–472, 1985.

[37] D. J. Bernstein and A. K. Lenstra, “A general number ﬁeld sieve
implementation,” in The development of the number ﬁeld sieve, A. K.
Lenstra and H. W. Lenstra, Eds. Berlin, Heidelberg: Springer Berlin
Heidelberg, 1993, pp. 103–126.

[38] K. Kogiso, Privacy of Dynamical Systems.

Singapore: Springer
Nature, 2020, ch. Encrypted Control Using Multiplicative Homomorphic
Encryption.

[39] M. J. Kearns and U. Vazirani, An Introduction to Computational Learn-

ing Theory. MIT Press, 1994.

[40] F. Farokhi and H. Sandberg, “Fisher information as a measure of privacy:
Preserving privacy of households with smart meters using batteries,”
IEEE Transactions on Smart Grid, vol. 9, no. 5, pp. 4726–4734, 2018.
[41] ——, “Ensuring privacy with constrained additive noise by minimizing

Fisher information,” Automatica, vol. 99, pp. 275–288, 2019.

[42] F. Farokhi, “Privacy-preserving constrained quadratic optimization with
Fisher information,” IEEE Signal Processing Letters, vol. 27, pp. 545–
549, 2020.

[43] I. Ziemann and H. Sandberg, “Parameter privacy versus control per-
formance: Fisher information regularized control,” in American Control
Conference, 2020, pp. 1259–1265.

[44] J. Hoffstein, J. Pipher, and J. H. Silverman, An Introduction to Math-
ematical Cryptography, S. Axler and K. A. Ribet, Eds. New York:
Springer-Verlag, 2008.

[45] R. L. Rivest, A. Shamir, and L. M. Adleman, “A method for obtaining
digital signatures and public-key cryptosystems,” Communications of the
ACM, vol. 21, no. 2, pp. 120–126, 1978.

[46] P. Paillier, “Public-key cryptosystems based on composite degree resid-
uosity classes,” in Proceedings of the 17th International Conference on
Theory and Application of Cryptographic Techniques, 1999, pp. 223–
238.

[47] K. Teranishi, T. Sadamoto, and K. Kogiso, “Input-output history feed-
back controller for encrypted control with leveled fully homomorphic
encryption,” arXiv:2109.10718, Sep 2021.

[48] B. O. Koopman, “Hamiltonian systems and transformation in Hilbert
space,” Proceedings of the National Academy of Sciences, vol. 17, no. 5,
pp. 315–318, 1931.

[49] D. A. Burgess, “The distribution of quadratic residues and non-residues,”

Mathematika 4, pp. 106–112, 1957.

[50] V. Shoup, “Sequences of games: A tool for taming complexity in security
proofs,” Cryptology ePrint Archive, Report 2004/332, Jan 2006.
[51] D. E. Kirk, Optimal control theory: An introduction. New York: Dover

Publications, 2004.

received the B.S. degree
Kaoru Teranishi
in electromechanical engineering from Na-
tional Institute of Technology, Ishikawa College,
Ishikawa, Japan, in 2019. He also obtained the
M.S. degree in Mechanical and Intelligent Sys-
tems Engineering from The University of Electro-
Communications, Tokyo, Japan, in 2021. He is
currently a Ph.D. student at The University of
Electro-Communications. From October 2019 to
September 2020, he was a visiting scholar of the
Georgia Institute of Technology, GA, USA. Since
April 2021, he has been a Research Fellow of Japan Society for the
Promotion of Science. His research interests include control theory and
cryptography for cyber-security of control systems.

Tomonori Sadamoto received the Ph.D. degree
from the Tokyo Institute of Technology, Tokyo,
Japan in 2015. From June in 2015 to March in
2016, he was a Visiting Researcher at School
of Electrical Engineering, Royal Institute of Tech-
nology, Stockholm, Sweden. From April 2016 to
August 2016, he was a researcher with the De-
partment of Systems and Control Engineering,
Graduate School of Engineering, Tokyo Institute
of Technology. From August 2016 to November
2018, he was a specially appointed Assistant
Professor with the same department. Since November 2018, he has
been assistant professor with Department of Mechanical and Intelligent
Systems Engineering in the University of Electro-Communications. He
was named as a ﬁnalist of the European Control Conference Best
Student-Paper Award in 2014. He received Research encouragement
award from The Funai Foundation for Informaiton Technology in 2019,
and received IEEE Control Systems Magazine Outstanding Paper
Award in 2020.

Aranya Chakrabortty received the Ph.D. de-
gree in Electrical Engineering from Rensselaer
Polytechnic Institute, NY in 2008. From 2008 to
2009 he was a postdoctoral research associate
at University of Washington, Seattle, WA. From
2009 to 2010 he was an assistant professor
at Texas Tech University, Lubbock, TX. Since
2010 he has joined the Electrical and Computer
Engineering department at North Carolina State
University, Raleigh, NC, where he is currently
a Professor. His research interests are in all
branches of control theory with applications to electric power systems.
He received the NSF CAREER award in 2011. He was named as a
University Faculty Scholar by the NC State Provost’s ofﬁce in 2019.

Kiminao Kogiso received the B.S., M.S., and
Ph.D. degrees in mechanical engineering from
Osaka University, Japan, in 1999, 2001, and
2004, respectively.

He was a postdoctoral researcher in the 21st
Century COE Program in 2004 and became an
Assistant Professor in the Department of Infor-
mation Systems, Nara Institute of Science and
Technology, Nara, Japan, in 2005. Since March
2014, he has been an Associate Professor in the
Department of Mechanical and Intelligent Sys-
tems Engineering, The University of Electro-Communications, Tokyo,
Japan. From November 2010 to December 2011, he was a visiting
scholar of the Georgia Institute of Technology, GA, USA. His research
interests include constrained control, control of decision makers, cyber-
security of control systems, and their applications.

