0
2
0
2

r
a

M
5

]

R
C
.
s
c
[

1
v
5
8
1
4
0
.
3
0
0
2
:
v
i
X
r
a

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS

1

Change Point Models for Real-time Cyber Attack Detection in
Connected Vehicle Environment

Gurcan Comert1, Mizanur Rahman2, Mhafuzul Islam2, and Mashrur Chowdhury2,
1Computer Science, Physics, and Engineering, Benedict College, Columbia, SC 29204
2Glenn Department of Civil Engineering, Clemson University, Clemson, SC 29634

Connected vehicle (CV) systems are cognizant of potential cyber attacks because of increasing connectivity between its different
components such as vehicles, roadside infrastructure, and trafﬁc management centers. However, it is a challenge to detect security
threats in real-time and develop appropriate or effective countermeasures for a CV system because of the dynamic behavior of such
attacks, high computational power requirement, and a historical data requirement for training detection models. To address these
challenges, statistical models, especially change point models, have potentials for real-time anomaly detections. Thus, the objective
of this study is to investigate the efﬁcacy of two change point models, Expectation Maximization (EM) and two forms of Cumulative
Summation (CUSUM) algorithms (i.e., typical and adaptive), for real-time V2I cyber attack detection in a CV Environment. To
prove the efﬁcacy of these models, we evaluated these two models for three different type of cyber attack, denial of service (DOS),
impersonation, and false information, using basic safety messages (BSMs) generated from CVs through simulation. Results from
numerical analysis revealed that EM, CUSUM, and adaptive CUSUM could detect these cyber attacks, DOS, impersonation, and
false information, with an accuracy of (99%, 100%, 100%), (98%, 100%, 100%), and (100%, 98%, 100%) respectively.

Index Terms—Cyber Attack Detection, Connected Vehicles, Expectation Maximization, CUSUM, Roadside Equipment.

I. INTRODUCTION

T He driving force behind the US economic engine is the

surface transportation system, which enables reliable and
efﬁcient transportation of passengers and goods [1]. However,
human errors (e.g., poor judgment, fatigue) are the leading
causes of more than 94% of US highway fatalities [2]. To
reduce these fatalities and associated societal costs by reducing
or eliminating the inﬂuence of the human errors, the US
Department of Transportation (USDOT) has been promoting
connected and automated vehicles (CAV) [3], [4]. From recent
reports of National Highway Trafﬁc Safety Administration
[5], [6], several beneﬁts are foreseen with this CAV technolo-
gies, such as up to 80% reduction in fatalities from multi-
vehicle crashes and preventing the majority of human error
related incidents. In such CAV systems, massive amounts
of data will be produced and exchanged between different
components through different data communication medium,
such Dedicated Short Range Communication (DSRC), WiFi,
5G and Long Term Evolution (LTE) [7], [8]. These data can
be processed in a cloud, or in an edge computing device at
the roadside (i.e., roadside transportation infrastructure) based
on different CAV application requirements [8], [9]. Commu-
nication technologies supporting data exchange must also be
secured to support CAV operations with speciﬁc requirements
(e.g., delay, bandwidth and communication range). With the
increase of connectivity in transportation networks, this CAV
systems is cognizant of potential cyber attacks [10], [11].

As cybersecurity attacks are dynamic, it is a challenge to
detect security threats in real-time and develop appropriate or

Manuscript received January 31, 2020; Corresponding author: G. Comert
(email: gurcan.comert@benedict.edu). G. Comert is with the Department of
Computer Science, Physics, and Engineering, Benedict College, Columbia,
SC 29204, USA. M. Rahman, M. Islam, and M. Chowdhury are with the
Glenn Department of Civil Engineering, Clemson University, Clemson, SC
29634, USA. Email: {mdr, mdmhaﬁ, mac}@clemson.edu.

effective countermeasures for connected transportation system
[12]. To increase security and resiliency due to possible
attacks or benign system errors by different events, research is
needed to investigate detection techniques for different attack
types, such as denial of service (DOS), impersonation, false
information [13], [14]. Anomaly detection techniques are well-
studied in different areas. Speciﬁcally, the cybersecurity of
ﬁrmware updates, cybersecurity on heavy vehicles, vehicle-to-
vehicle (V2V) communication interfaces, and trusted vehicle-
to-everything (V2X) communications [15].

Different type of anomaly detection models exist in liter-
ature, such as rule-based, machine learning (ML) and data
mining (DM) (including expert systems)-based, and statistical
inference-based models. These can be listed as k-means,
random forest, Bayesian networks, Gaussian processes, de-
cision trees, neural networks, support vector machines, and
hypothesis testing and point estimation based process control
models respectively. Recent survey studies related to anomaly
detection are summarized a comprehensive review of machine
learning and rule (signature)-based methods, and their appli-
cations to intrusion detection systems (IDS) [16], [17]. Rule-
based attack detection models, originated from cryptography,
are abundant especially for their efﬁciency and computation-
ally light-weight [18]. However, rule-based models require
a detailed understanding of the data generation process and
adaptivity or customization based on their respective environ-
ment to develop the model. On the other hand, both ML and
DM-based attack detection models are adaptable to different
attack types both known and unknown patterns [19]. However,
major concerns are computational complexity for real-time
application, training the model with different cyber attack sce-
narios, unavailability of cyber attack data in the transportation
domain, and determination of update or retraining window.
To address these problems, statistical models, specially the
change point models, are applicable because of the following

 
 
 
 
 
 
IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS

2

advantages: (1) do not require ﬁtting or training; (2) adaptive
to different attack data (do not use rules); (3) perform with
low data sample sizes; and (4) computationally efﬁcient for
real-time applications. Thus, the objective of this study is to
investigate the efﬁcacy of two change point models, Expecta-
tion Maximization (EM) and Cumulative Sum (CUSUM), for
real-time V2I cyber attack detection in a connected vehicle
(CV) Environment. To prove the efﬁcacy of these models, we
implemented three different type of cyber attacks (i.e., denial
of service (DOS), impersonation, and false information) [20],
using BSMs generated from CVs through simulation.

The paper is organized as follows. Section II presents the
previous research and the literature on the anomaly detection
models. Section III describes EM and CUSUM algorithms
for V2I cyber-attack detection. Section IV presents the data
generation process and evaluation of EM and CUSUM models
through numerical analysis and results. Finally, section V
summarizes ﬁndings and possible future research directions.

II. RELATED WORK

In this section, we describe past research on statistical
models for anomaly detection and cyber attacks in a V2I
environment.

A. Statistical Models for Cyber Attack Detection

Statistical and inference based models in cyber attack or in
general detection problem provide adaptability and transfer-
ability to different settings and attack types with low compu-
tational costs [16], [21]. In a very basic approach, detection on
process controls using quality control models based on change
point algorithms such as CUSUM, and exponentially weighted
moving average are utilized [22] intrusion monitoring. For
detail characteristics of attack models using honeypot-captured
cyber attacks are modeled with several time series models [23].
Reliability models are also studied for vulnerabilities based on
good and bad states simply via nodes’ deviations [24]. They
consider persistent, random, and insidious attacks of sensor-
actuator nodes with simple sensing, actuating, and networking
models. Moreover, model-based attacks usually for power
grids are investigated by researchers [25]. Attack (intrusion)
models for different control systems and proper modeling for
moving systems as in vehicular or mobile ad hoc network
(VANET/MANET) cases are well reviewed in [26]–[29] where
reputation management in vehicular networks are suggested.
Possible revoking or blacklisting the information contributors
are also recognized in similar survey study speciﬁcally on
cooperative intelligent transportation systems [20].

First proposed by Page [30], CUSUM is a classical statisti-
cal quality and process control method for industrial applica-
tions, which is then utilized by many ﬁelds such as computer
network security particularly for DOS or ﬂooding attacks [31],
sensor networks, signals and control systems, pipeline break
detection to neuronal spike detection [32], [33]. However, it
is also heavily employed in intrusion or anomaly detection
for cyber attacks [21] for its high true positive rate and low
computational cost. In connected vehicles, a recent patented
implementation utilizes CUSUM on for vehicle intrusion de-
tection on electronic control units [34]. On the other hand,

EM is used for anomaly detection as its classical meaning
of parameter estimation in an analytical attack modeling on
power systems [35]. In this study, both EM and CUSUM are
selected as detection algorithms for their online applicability
(linear in computational complexity) also observed in [16].
Both algorithms are adopted to the anomaly detection problem
as sequential implementation, compared, and detailed attack
data are simulated which are novel in the intrusion detection
literature. Both methods contain only low level parameters
such as initial underlying distributions parameters (e.g., Nor-
mal in this paper) as well as design parameters for CUSUM.
Detailed recalibration or update intervals for such parameters
are not investigated in this study.

B. V2I Cyber-attacks in a CV Environment

In the cyber-physical systems (CPS) security literature,
recent studies [15], [26], [36]–[39], list possible cyber-attacks
and discuss their detection and mitigation techniques. In these
studies, abstract cyber-physical models for smart cars are
also presented. Possible attacks are criminal, privacy, tracking,
proﬁling, political
threats with different structures replay,
command (message) injection, false information, imperson-
ation, eavesdropping, and denial of service [38]. For this
study, we consider denial of service (DOS), impersonation,
and false information attack to evaluate efﬁcacy for EM
and CUSUM models. DOS attack in the literature deﬁned
as disordering, delaying, or periodically dropping packets to
decrease network performance. It consists of ﬂooding (similar
to jamming-occupying channel by outsiders) and exhausting
the network resources such as bandwidth and computational
is dramatically increasing number
power. In this study, it
of messages so that
the RSEs or OBEs are not able to
process and overall communication delays increase or become
not available. Impersonation (node impersonation or identity
theft) attack can be deﬁned as a vehicle can pretend as if
it has more than one identity unable to distinguish one or
more vehicles by aiming to shape the network, manipulating
other vehicle behaviors, incorrect position information etc.,
hard to detect-network/vehicle ID credentials management.
False information attack: aims to manipulate other vehicles
with selﬁsh/malicious intent can highly impact and high de-
tection likelihood [40]. Previous research on the vehicular
communications discuss possible attacks and their mitigation
methods [15], [20]. ITS applications require protocols that
conﬂicts with anonymity and privacy requirements and report
on quantifying such risks and trafﬁc control under either lost
communications based on correct or faulty communication
errors. In sum, studies on quick detection of such cases and
possible redundant data resources for cost effective control are
needed for resiliency on transportation networks.

III. CHANGE POINT MODELS

In this study, we investigate statistical change point models,
Expectation Maximization (EM) and Cumulative Summation
(CUSUM), to detect cyber attacks in a V2I environment. We
describe these models in the following sub-sections.

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS

3

A. Expectation Maximization Algorithm

B. CUSUM Algorithm

The Expectation Maximization (EM) algorithm is often used
to estimate the parameters of mixture models or models with
latent variables [41], [42]. In this research, EM algorithm
is utilized for detecting cyber attacks via changes in the
process mean. Given N sample points from a mixture of two
Normal distributions as in Eq. (1), the EM algorithm can be
applied to determine the parameters of these two distributions
θ=[θ1 = (µ1, σ1), θ2 = (µ2, σ2), π] of normal and attack
states, respectively. The ﬁrst step of the EM algorithm speciﬁes
initial values for the parameters. In the expectation step, the
algorithm computes the responsibilities γi (i.e., the probability
of an observation belonging to Y2,
i.e., attack state) for
each data point. Using the calculated responsibilities, it then
computes the ﬁve parameters in the maximization step. The
iterations continue until the likelihood function convergences.
The convergence of a basic EM algorithm is slow. Simple
equations pertaining to the EM are given below. First, the
probability density of Y is written as a mixture:

Y = (1

∆)Y1 + ∆Y2

(1)

where Y1

N (µ1, σ2

N (µ2, σ2

2), and ∆

abnormal data proportion of P(∆ = 1) = π.

∼

0, 1 with

∈

−
1), Y2

∼

gY (y) = (1

−

π)φθ1 (y) + πφθ2 (y)

(2)

where φθ(x) denotes normal density. For a data set of N

points the loglikelihood function can be written as follows:

N

l(θ, Z) =

ln[(1

i=1
X

π)φθ1 (yi) + πφθ2 (yi)]

(3)

−

where θ= [θ1 = (µ1, σ1), θ2 = (µ2, σ2), and π] and Z
represent the data points. Analytical maximization of Eq. (3)
is difﬁcult, however, if the observation is known to belong to
Y2 (i.e., with latent variable ∆i = 1, otherwise ∆i = 0), the
loglikelihood can be written as in Eq. (5) and ∆i = 1s can be
estimated by Eq. (5).
N

l(θ; ∆, Z) =

[(1

i=1
X

∆i)ln[(1

−

−

π)φθ1 (yi)] +

(4)

∆iln[πφθ2(yi)]]

γi(θ) = E(∆i

|

θ, Z) = P (∆i = 1

θ, Z)

|

(5)

In sum, given N data points that are assumed to be generated
by mixture of two Normal distributions (i.e., normal and
abnormal messages per vehicle per second (MVS), messages
per vehicle (MVT), and distance), the EM algorithm is applied
to determine the distribution parameters and responsibilities.
Number of mixtures could be varied for various levels of
attacks and impacts. N data points constitute the main input
to the algorithm. To see the impact of sample size, prediction
performances of EM algorithm with various N values can be
checked. The EM algorithm provides the real-time estimation
of the process parameters at each time point as well as
conditional probabilities of a data point comes from a certain
attack or no attack condition which is subsequently used for
detection.

P

The CUSUM chart or algorithm is commonly used for
quality control purposes to detect possible shifts in the mean
level of a process. In cyber attack setting, changes within ex-
pected level of deduced measures (MVS, MVT, and distance)
are targeted. This paper uses tabular version or algorithmic
version of the CUSUM rather than control chart. Assume that
identical independently distributed (i.i.d) with known
Xi
(µ1, σ2) where a new process mean is observed µ2 after a
possible change. Based on statistical hypothesis testing, the
log-likelihood ratio is written s(i)=ln(pµ2(Xi)/pµ1(Xi)) for
t
i=1 si for sample size of n, the decision rule is given
St =
by

∼

Ct =

(

0 , St < H ; H0 no change
1, St

H; H1 change

≥

(6)

1≤i≤t.

mt and mt = [Si]−

where, Ct = St
−
1) Typical Form
Basic applications of this algorithm assume that the ob-
servations collected before and after the change in the mean
level are i.i.d. To detect both positive and negative shifts, the
two-sided version of the CUSUM algorithm was used. The
algorithm works by accumulating positive and negative devi-
ations from a certain target mean, which is commonly taken
to be zero. The positive deviations (values above the target)
are indicated with C+
t , and those that are below the target are
t and C−
indicated with C−
t are referred to
as one-sided upper and lower CUSUMs, respectively [43]. It
is shown that the use of the two-sided CUSUM algorithm is
equivalent to monitoring the following two sums for a zero-
mean process:

t . The statistics C+

(7)

t = [0, C+
C+
C−
t = [0,

C−

t−1 + Xt

µ2
−
Xt + µ2

−

K]+
K]+

−

−

C−

t ∨

where C+

0 = 0, C−

t−1 −
0 = 0, is the residual or deviation
from the mean at time t. A shift detection is issued whenever
(C+
t ) > H. Typical CUSUM is applied for persistent
shifts or attacks. With
t−1 in Eq. (8), the algorithm behaves
like one-sided and reduces false alarm rate almost 100%.
Moreover, in order to employ CUSUM in real-time, once
an alarm is issued by the CUSUM algorithm, the mean or
intercept of the attack time series observations is estimated
and updated with Eq. (8) and C+
t values set to zero after
every detection.

t , C−

C−

−

µ2 =

(

t

µ1 + K + C +
K
µ1

N + , C+
N − , C−

t > H
t > H

−
t

C

−

−

(8)

The CUSUM algorithm are designed by choosing the values
of K and H. The constant K is called the reference value
and H is the decision interval or the threshold. The parameter
K is a function of the shift in mean level to be detected by
the CUSUM algorithm. The value of H is selected to give the
largest in-control average run length (ARL) consistent with an
adequately small out-of-control ARL. These two parameters
control the ARL, a standard performance measure for online
change-detection algorithms. ARL is the average number of

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS

4

data points that have been observed before an out-of-control
signal or alarm is generated. There have been many analytical
studies on investigating CUSUM’s ARL performance. For ex-
ample, the conventional CUSUM with K = δσ/2 is optimal in
detecting a shift of δσ from target mean. Based on past studies,
Montgomery [43] suggests that selecting K = δσ/2 = σ/2
for δ = 1 and H = 5σ provides a CUSUM algorithm that
has good ARL properties against small shifts in the process
mean [43].

The CUSUM algorithm described previously is applied to
the change point detection of the time series within basic safety
messages. The CUSUM parameters were selected as suggested
in the literature: K = δσ/2 and H = 5σ and δ = 1.0 which
represents midpoint between normal and abnormal process
means.

2) Adaptive Form
Adaptive version, denoted as aCUSUM, is actually adopted
from [44] revised to perform for other than zero mean pro-
cesses, lower false positives, and single weight parameter (α).
Table II shows only initial mean values are different which
could be used as simple as 1st value observed in the process.
It is applied to ˜Xt = Xt
¯µt−1.

t = [0, C+
C+

t−1 +

C−

t = [0, C−

t−1 −

−
αDt
σ2 [Xt
−
αDt
σ2 [Xt + Dt + αDt/2]]+

αDt/2]]+

Dt

−

(9)

where, Dt = (¯µt

µ1) and ¯µt = α¯µt−1 + (1

α)Xt. This
adaptive form of CUSUM algorithm is not very sensitive to
K = δσ/2 and δ = 1.0. As in the typical algorithm, for less
false positive detection H is set to 5σ.

−

−

IV. NUMERICAL EXPERIMENTS
This section presents the data generation to evaluate the

methods for different V2I attacks and numerical results.

A. Data Generation for V2I Cyber-attacks

In this subsection, data generation process for different type
of V2I Cyber-attacks using microscopic trafﬁc simulator is
presented. In order to generate the realistic roadway trafﬁc
behavior, a microscopic roadway trafﬁc simulation software,
Simulation of Urban Mobility (SUMO) is utilized [45]. To
mimic real-world vehicular movement in a connected ve-
hicle environment, a Roadside Unit (RSU) is assumed to
be placed at the Jervy Gym location of Perimeter Road in
Clemson, SC, USA. Each vehicle on this roadway are DSRC
communication-enabled and can broadcast a part of BSMs
(e.g., time stamp, car ID, latitude, longitude and speed) every
one-tenth of a second to the RSU. All vehicle movements
data (i.e., BSMs) are recorded in trace ﬁles. A trace ﬁle
is text ﬁle that contains time stamp, vehicle ID,
latitude,
longitude and speed of each vehicle moving on the Perimeter
Road, Clemson, SC, USA. The simulation is comprised of
200 vehicles per hour per lane on Perimeter Road, a four-lane
arterial roadway (two lanes each direction) with 35 miles per
hour (mph) speed limit.

Using the generated trace ﬁle from the SUMO simula-
tion, three different cyber-attack scenarios are generated (see
Fig. 1a):

(i) Denial of service (DOS) attack: DSRC has seven com-
munication channels using different frequencies ranging
from 5.90 GHz to 5.97 GHz. These seven channels are
divided into two categories: Control Channel (CCH) and
Service Channel (SCH). Channel number 178 is assigned
for CCH and channels 172-182 are assigned as SCH.
After the initial authentication and key exchange, the
RSU and OBU of a vehicle agree to communicate on a
single service channel or frequency. Then, a vehicle can
launch the DOS attack by ﬂooding the communication
channel in order to cause the service to be unavailable to
other vehicles. Typically, an attacker uses its maximum
transmission capacity to ﬂood the network. In order to
create a breakdown of V2I communication, attackers
need to transmit more data than the receivers (e.g., RSU)
maximum receiving capacity. For generating DOS attack
data in our experiment, vehicle with ID 6 is ﬂooding at
1000Hz while other vehicles are sharing data at 10Hz to
mimic the real-world CV environment where each CV
is broadcasted BSMs every one-tenth of a second. The
total simulation time is 200 seconds (s) for generating
DOS attack data.

(ii) False information attack: For fake (or false) information
attack, false GPS location information (i.e., longitude
and latitude) of vehicle ID 2 are generated simply using
random variable generation library from python. We
have crafted the attack such way that it creates random
location within a given geo-fenced region so that it seems
normal geolocation to human. This false information is
also broadcasted by the attacker vehicle at 10 Hz or 10
packets/sec. The total simulation time is 200 seconds for
false information attack.

(iii) Impersonation attack: To emulate the data for imperson-
ation attack, a false ID for vehicle number 3 is used
as vehicle ID 2. Two different GPS location and speed
information for the vehicle ID 2 are simultaneously
generated. In the trace ﬁle, the vehicle id of vehicle 3
was replaced by the vehicle id 2 to craft an impersonation
attack, where we assume that both of the vehicle 2 and
vehicle 3 are in the same region. Thus two different GPS
location and speed information are being broadcasted
containing the same vehicle id simultaneously. Both of
the vehicles is broadcasting the data at 10 packets/sec,
and simulation was run for 200 seconds.

Examples of generated attack data are given in Table I.
Evident from the table, multilevel attack monitoring could be
designed by vehicle ID and timestamps as micro level tracing
(0.1 sec) of such values. However, this approach considerably
slows detection capability within time interval of 0.1 seconds
(s) which is critical for safety applications. Therefore, this
study tracks aggregate measures such as average message
frequency per vehicle per second (M V S), average message
frequency per vehicle per time interval (M V T ), distances,
and/or track of vehicle speeds within time series framework
and detects changes. Detailed vehicle information are not
tagged, however, signature is present in the historical data can
be traced back for mitigation efforts.

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS

5

(a) Data generation steps for V2I cyber-attacks.

(b) Attack detection approach in V2I connected vehicle environment.

Fig. 1: Data generation steps and attack detection approach

B. Attack Detection Framework

Fig. 1b depicts the approach of attack detection using EM
and CUSUM. In order to implement change point detec-
tion methods, ﬁrst step is to identify the processing time
window in which information need to track, and how to
convert such information in time series behavior to detect
shifts due to malicious attacks and/or benign system mal-
functions. Such changes result in switching system dynamics
and alter critical communications in ITS applications, such
as cooperative adaptive cruise control (CACC) and signal
control algorithms. In DOS or ﬂooding attacks, vehicles are
expected to send more messages than the designed frequency
parameter (MVS). Therefore, tracking messages per vehicle
and estimating MVS can be used as indicator for cyber-attack
detection. For impersonation attack, multiple messages in unit

time interval (0.1 s) are sent and by monitoring MVT, this
type of attack is detected. Lastly, false information attack
can be deﬁned as any type of irregularity in the collected
messages, such as high or low speed compared to rest of
the trafﬁc (inherent) at a roadway segment or an unrealistic
gap between any two adjacent vehicles within a certain time
frame. CUSUM monitors deviations from process mean and
identiﬁes violations. On the other hand, EM calculates condi-
M V S) > 0.001, where
tional probabilities of P (DOSattack
distance) is
P (impersonation
given. If the likelihoods at any time is > 0.001, then an attack
is detected.

M V T ) and P (attackstate

|

|

|

C. Description of EM and CUSUM Parameters

Parameters for EM and CUSUM are set as provided
in Table II. Initialization parameters of EM algorithm are

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS

6

TABLE I: Examples of attack data generated on RSE

Type
DOS

IMP

FAL

TS(s)
5.10
5.10
5.10
5.10
5.10
5.10
5.10
1.30
1.30
1.40
1.40
1.40
1.50
1.50
2.00
2.00
2.00
2.10
2.10
2.10
2.20
2.20

ID
1
2
3
5
6
6
6
1
2
1
2
2
1
2
1
2
3
1
2
3
1
2

Lat.
-82.85
-82.85
-82.85
-82.84
-82.84
-82.84
-82.84
-82.85
-82.85
-82.85
-82.85
-82.85
-82.85
-82.85
-82.85
-82.85
-82.04
-82.85
-82.85
-82.81
-82.85
-82.85

Long.
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.68
34.16
34.68
34.68
34.30
34.68
34.68

Speed(m/s)
9.94
8.22
6.21
2.32
0.00
0.00
0.00
2.65
0.51
2.87
0.75
1.00
3.19
1.24
4.15
2.26
0.00
4.31
2.48
0.26
4.57
2.62

Pos.(m) MsgRate
10.00
10.00
10.00
10.00
10.12
10.23
10.35
1.00
1.00
1.00
1.00
2.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00

0.08
0.52
0.74
0.14
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
72.32
0.00
0.00
71.20
0.00
0.00

θ1, θ2, π, N = 10 random variates 7 normal 3 abnormal, and
10 iterations per time interval or new observation received.
For CUSUM, design parameters as well as initial mean and
standard deviations are given in the Table II below. Overall aim
here is to give models normal and/or abnormal observations.
For instance, in case of DoS attack, 10 messages per second
per vehicle is expected with low or no variations, thus, initial
parameters are set to N (µ1 = 10, σ2 = 10−6) for both
methods. Moreover, from Table III, very small normal dis-
tance values are calculated from latitude and longitude values
(i.e., µ1 = 0.05) and false information is calculated to be
considerably high so initialized from N (µ2 = 50, σ2

2 = 25).

TABLE II: Selected model parameters for numerical experi-
ments

Type
DOS

IMP

FAL

EM
θ1 = (10, 10−4), θ2 = (15, 5), π = 0.75)
Y1:7 ∼ N (10, 10−6),Y8:10 ∼ N (15, 102)
θ1 = (1, 10−3), θ2 = (2, 0.5), π = 0.99)
Y1:7 ∼ N (0.05, 10−2),Y8:10 ∼ N (15, 102)
θ1 = (0.05, 10−2), θ2 = (50, 5), π = 0.99)
Y1:7 ∼ N (1, 10−6),Y8:10 ∼ N (2, 0.52)

All N = 10 and iteration = 10

CUSUM
µ1 = 10.00
σ = 0.001
µ1 = 1.00
σ = 0.01
µ1 = 0.05
σ = 0.1
H = 5σ
K = δσ/2
δ = 1.00

aCUSUM
µ1 = 10.00
σ = p5.10−3µ1
µ1 = 1.00
σ = p5.10−3µ1
µ1 = 1.00
σ = p5.10−3µ1
H = 5σ, K = δσ/2
δ = 1.00
α=0.025

D. Analysis and Results

In this section, the effectiveness of attack detection using
EM and CUSUM are discussed. Both methods are evaluated
using datasets as described in ’Data Generation for V2I Cyber-
Attacks’ subsection. Table III provides an example of the gen-
erated data from the simulation, attack and detection results.
Performances are given as true positive (attack,detected), true
negative (no attack, not detected), false positive (no attack, de-
tected) and false negative (attack, not detected) are denoted by
TP, TN, FP, and FN respectively. For running the algorithms,
we used a PC with 8GB of memory, Pentium I5 Quad-Core
CPU. We observed from the table that abnormal behavior is
detected accurately by both methods. Since cyber attacks are
persistent and CUSUM is based on cumulative differences,
shifts are reﬂected after the detection with rest of observations.
Therefore, detection is continuous. This is also evident from
Fig. 3a-3f. For EM, as a classiﬁcation algorithm, the detection
is based on conditional state probability calculations given the

observation and past updated parameters and EM is able to ﬂag
normal and abnormal observations (also see Figs.2a-2c). De-
tection alarms are set P (attackstate
observation) > 0.001
and H = 5σ for EM and CUSUM respectively.

|

TABLE III: Examples of attack data on RSE and detection by
EM and CUSUM

Type
DOS

IMP

FAL

Freq.
127
128
129
130
131
132
133
134
135
136
137
13
14
15
16
17
18
19
20
21
31
32
33
34
35
36
37
38
39
40
41
42
43

TS(s)
5.00
5.00
5.00
5.00
5.10
5.10
5.10
5.10
5.10
5.10
5.10
1.20
1.20
1.30
1.30
1.40
1.40
1.40
1.50
1.50
2.00
2.00
2.00
2.10
2.10
2.10
2.20
2.20
2.20
2.30
2.30
2.30
2.40

ID
1
2
3
5
1
2
3
5
6
6
6
1
2
1
2
1
2
2
1
2
1
2
3
1
2
3
1
2
3
1
2
3
1

Spd(m/s)
9.73
8.08
5.97
2.14
9.94
8.22
6.21
2.32
0.00
0.00
0.00
2.44
0.26
2.65
0.51
2.87
0.75
1.00
3.19
1.24
4.15
2.26
0.00
4.31
2.48
0.26
4.57
2.62
0.52
4.81
2.83
0.75
4.95

Pos.(m) Msgs.
10.00
10.00
10.00
10.00
10.00
10.00
10.00
10.00
10.12
10.23
10.35
1.00
1.00
1.00
1.00
1.00
1.00
2.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00

0.08
0.52
0.74
0.40
0.08
0.52
0.74
0.14
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
72.32
0.00
0.00
71.20
0.00
0.00
49.76
0.00
0.00
34.29
0.00

P (D|Yt)
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.02
0.05
0.09
0.00
0.00
0.00
0.00
0.00
0.00
0.67
0.00
0.00
0.00
0.00
1.00
0.00
0.00
1.00
0.00
0.00
1.00
0.00
0.00
1.00
0.00

EM (C+, C−)
(0,0)
TN
(0,0)
TN
(0,0)
TN
(0,0)
TN
(0,0)
TN
(0,0)
TN
(0,0)
TN
(0,0)
TN
(0.12,0)
TP
(0.12,0)
TP
(0.29,0)
TP
(0,0)
TN
(0,0)
TN
(0,0)
TN
(0,0)
TN
(0,0)
TN
(0,0)
TN
0.99,0
TP
0,0.99
TN
0.99,0
TN
(0,0)
TN
(0,0)
TN
(72.2,0)
TP
(0,72.3)
TN
(72.2,0)
TN
(34.9,0)
TP
(0,11.7)
TN
(5.8,0)
TN
(48.2,0)
TP
(0,9.7)
TN
(3.2,0)
TN
(33.6,0)
TP
(0,4.9)
TN

CUS
TN
TN
TN
TN
TN
TN
TN
TN
TP
TP
TP
TN
TN
TN
TN
TN
TN
TP
FP
FP
TN
TN
TP
FP
FP
TP
FP
FP
TP
FP
FP
TP
FP

true positive (TP), true negative (TN), false positive (FP), false negative (FN)

−

−

−

cos((y2

x1)p)/2+cos(px1)cos(px2)(1

In Table III, position column is calculated in meters (m)
from two consecutive latitude and longitude values by using
the generic formula: P os = 1242sin−1(√a) where a = 0.5
−
cos((x2
y1)p))/2
and p = π/180. As discussed above, MST and MSV measures
are deduced from time and ID columns for every time interval
of 0.1 s and time series are generated for statistical detection.
It should also be noted that for the DOS attack vehicle number
6 is not sending speed and location correctly. Attack detection
using the change of speed and distance would be trivial. At-
tacker would also replicate reasonable values. So, detection is
carried out using message frequency in MSV. From the table,
EM’s P (attack
Yt) > 0.001
resulting as detection, otherwise no detection. Similarly, for
CUSUM (C+, C−) values are given. Based on these values,
when (C+
C−) > 5σ a detection is observed, otherwise ND
is issued. Persistent attacks are easily detected by CUSUM
and EM. CUSUM continues to detect normal observations
as attacks as an out-of-control process and generates false
positive errors. This can be ﬁxed in CUSUM with a slight
revision in C− values mimicking one-sided control. However,
in this study, the performance of a typical CUSUM has been
investigated without any modiﬁcations. EM’s performance on
false positive errors is promising. Detailed detection perfor-
mance metrics are presented in Fig. 4.

observation) is denoted as P (D

∨

|

|

Figs. 2a-2c depict performance of EM algorithm for de-
tecting different attacks. Fig. 2a shows the likelihood of an
attack given 135th observation that
is also given in msg
column in Table III as 10.12 > 10.00, i.e., P (attack
Y135 =
10.12) = 0.02 > 0.0001 (see EM column) a very low practical
Yt) increases as frequency values gets
threshold. P (attack
larger. For other type of attacks, the changes in observations

|

|

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS

7

)
.
s
b
O
|
k
c
a
t
t
a
S
O
D
(
p

)

S
V
M

(

s
e
g
a
s
s
e
m

f
o
#

0
.
1

8
.
0

6
.
0

4
.
0

2
.
0

0
.
0

4
1

3
1

2
1

1
1

0
1

)
.
s
b
O
|
k
c
a
t
t
a

.
p
m

I
(
p

0
.
1

8
.
0

6
.
0

4
.
0

2
.
0

0
.
0

0

50

100

150

200

0

50

100

150

200

Time Interval (0.1 s)

Time Interval (0.1 s)

)
T
V
M

(

s
e
g
a
s
s
e
m

f
o

#

0
.
2

8
.
1

6
.
1

4
.
1

2
.
1

0
.
1

0

50

100

150

200

Time Interval (0.1 s)

)
.
s
b
O
|
k
c
a
t
t
a

.
f
n
I

l

e
s
a
F
(
p

)

m

(

e
c
n
a
t
s
D

i

0
.
1

8
.
0

6
.
0

4
.
0

2
.
0

0
.
0

0
8

0
6

0
4

0
2

0

0

50

100

150

200

0

50

100

150

200

0

50

100

150

200

Time Interval (0.1 s)

Time Interval (0.1 s)

Time Interval (0.1 s)

(a) DOS attack

(b) Impersonation attack

(c) False information attack

Fig. 2: Attack detection by EM algorithm

|

|

are not gradual rather sudden which leads to P (attack
Y19 =
2) = 0.67 and P (attack
Y33 = 72.32) = 1.00 in imper-
sonation and false information attacks, respectively. However,
this statistical inference via EM comes with a computational
cost. Especially for DOS attack where change is gradual
and more messages sent per vehicle, therefore, more data
points to be processed per time step ends up with higher
computational time. In Table IV, Attack column for EM and
CUSUM shows computational times of 50, 200, and 4761
to process all the data points. Thus, the feasibility of using
EM for DOS attack detection using messages per vehicle per
time 1 s would be second-by-second monitoring. Similarly,
false information attack would also require about a second
(0.53 s). Only, impersonation attack seems feasible to detect
within 0.1 s. These results are consistent with the approximate
computational complexity of EM being O(nkj) where n is
sample size or time step and k = 2 is the number of mixtures,
and j=10 denotes the number of iterations. Similarly, it is linear
for CUSUM O(nm) with m being number of elementary
operations within each n time interval.

Fig. 3 presents detection results of

the CUSUM and

TABLE IV: Computational times in seconds experienced for
EM and CUSUMs

Attack Type
n=

DOS
IMP
FAL

EM
200
2.24
0.02
6.15

4761
44.58
0.02
44.91

CUSUM
200
0.46
0.01
0.06

4761
0.65
0.02
0.19

50
0.43
0.01
0.03

aCUSUM
200
0.77
0
0.14

4761
1.02
0.01
0.28

50
0.77
0.01
0.14

50
2.19
0.02
0.53

aCUSUM algorithms for ﬁrst 200 data points with 0.1 s
intervals. Shorter intervals are shown in order to provide
legibility. In Figs. 3a-3b, a shift occurs at 135th observation
for DOS attack. CUSUMs advantage over EM is that it can be
implemented for short time intervals due to less computational
times. The duration for detecting DOS attack using EM is
higher than 0.1 s interval. However, impersonation and false
information attacks can be detected within 0.1 s (see Figs. 3c-
3f). Given sufﬁcient time window, EM algorithm would be
able to adapt to detect different attack types with new set
of normal data set is fed. It has less parameters to be tuned
compared to CUSUMs and prone less to false positive alarms.
In their simple forms, they are vulnerable to high false positive
when adaptive thresholds are used. CUSUMs are very sensitive

 
 
 
 
 
 
 
 
 
 
IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS

8

DOS Attack

DOS Attack

s
M
U
S
U
C

r
e
w
o
L

d
n
a

r
e
p
p
U

s
M
U
S
U
C

r
e
w
o
L
d
n
a

r
e
p
p
U

s
M
U
S
U
C

r
e
w
o
L

d
n
a

r
e
p
p
U

4
.
0

3
.
0

2
.
0

1
.
0

0
.
0

2

.

0

1

.

0

0

.

0

1

.

0
−

.

2
0
−

0
2

5
1

0
1

5

0

5
−

0
1
−

5
1
−

o
o
−

upperCUSUM
lowerCUSUM
in−control limits

o
o
−

upperCUSUM
lowerCUSUM
in−control limits

s
M
U
S
U
C

r
e
w
o
L

d
n
a

r
e
p
p
U

2

1

0

1
−

2
−

0

50

100

150

200

0

50

100

150

200

Time Interval (0.1 s)

Time Interval (0.1 s)

(a) DOS CUSUM

(b) DOS aCUSUM

Impersonation Attack

Impersonation Attack

o
o
−

upperCUSUM
lowerCUSUM
in−control limits

s
M
U
S
U
C

r
e
w
o
L
d
n
a

r
e
p
p
U

4

2

0

2
−

4
−

o
o
−

upperCUSUM
lowerCUSUM
in−control limits

0

50

100

150

200

0

50

100

150

200

Time Interval (0.1 s)

Time Interval (0.1 s)

(c) Impersonation CUSUM

(d) Impersonation aCUSUM

False Information Attack

False Information Attack

s
M
U
S
U
C

r
e
w
o
L

d
n
a

r
e
p
p
U

0
0
0
1

0
0
5

0

0
0
5
−

0
0
0
1
−

o
o
−

upperCUSUM
lowerCUSUM
in−control limits

o
o
−

upperCUSUM
lowerCUSUM
in−control limits

0

50

100

150

200

0

50

100

150

200

Time Interval (0.1 s)

Time Interval (0.1 s)

(e) False Information CUSUM

(f) False Information aCUSUM

Fig. 3: Attack detection by CUSUM algorithm

to real-time estimation or update of µ1, µ2, σ values. In another
appropriate midterm application, an hybrid method can be

developed to estimate these parameters with EM and input
to CUSUMs. Because of space limitations, these experiments

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS

9

Fig. 4: Comparison of detection performances between EM and CUSUM algorithms

are left for another study.

In Fig. 4, we compared detection performances of the
models. Metrics adopted from [16] are given as true positive
(TP), true negative (TN), false positive (FP) and false negative
(FN) are inserted in accuracy=(T P + T N )/(T P + T N +
F P + F N ), precision=T P/(T P + F P ), sensitivity or
detection=T P/(T P +F N ) [16]. EM only contains about 2%
FN for false information and 1% FN for DOS attacks where
CUSUM gives 11.8% FP for false information and 2.2% for
impersonation attack. For false information attack, EM gives
only 83% sensitivity measure and CUSUM is low 87% in
precision. After carefully tuning, aCUSUM outperforms both
EM and typical CUSUM with no FP and FN for all attack
types.

V. CONCLUSIONS

In this study, we investigated the efﬁcacy of two main
statistical change point models, EM and CUSUM, for real-
time V2I cyber attack detection in a CV Environment. To
prove the efﬁcacy of these models, we evaluated these two
models for three different type of cyber attacks, denial of
service (DOS), impersonation, and false information, using
BSMs generated from CVs. A comprehensive attack modeling
is developed for all type of cyber attacks. To generate the data
for different cyber attacks, a microscopic trafﬁc simulation

software, SUMO, was used for simulating realistic trafﬁc
behavior. Instead of tracking data values such as message
frequency, speed, and distance individually for each time
interval and vehicle ID, aggregate measures are deduced from
BSMs to be used in effective real-time detection. Based on
the numerical analysis, we found that:

1) Given proper initialization, i.e., mean and variance mea-
sures of normal and abnormal cases, and enough compu-
tational power, both algorithms can detect all three attack
types accurately.

2) When attack detection time window is critical such as
safety applications, detection time window for EM is
greater than < 0.1 sec, whereas, the time window for
CUSUM is below 0.1 sec computational times.

3) When multiple states could be observed for an attack or
to classify different impacts, as well as any changes in the
normal RSU communication frequencies, EM algorithm
would be able to provide conditional probabilities for
multiple states.

Results from numerical analysis also revealed that both EM,
CUSUM, and aCUSUM could detect these cyber attacks with
an accuracy of at least 98%, 98%, and 100 % respectively.
Models can be applied for real-time cyber attack detection with

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS

10

a one-second interval. Possible improvements to this research
and future directions can be followings: (1) further research is
needed to investigate factors affecting the optimal selection of
such parameters with multiple data sets; (2) hybrid methods
can be formulated for detection both fast and less sensitive to
initialization, and (3) as data generation processes expected to
be correlated, algorithms within state-space time series models
can be utilized.

ACKNOWLEDGMENTS

This study is partially supported by the Center for Con-
nected Multimodal Mobility (C2M 2) (USDOT Tier 1 Uni-
versity Transportation Center) headquartered at Clemson Uni-
versity, Clemson, South Carolina. Any opinions, ﬁndings, and
conclusions or recommendations expressed in this material are
those of the authors and do not necessarily reﬂect the views
of the Center for Connected Multimodal Mobility (C2M 2)
and the ofﬁcial policy or position of the USDOT/OST-R, or
any State or other entity, and the U.S. Government assumes
no liability for the contents or use thereof. It is also partially
supported by U.S. Department of Homeland Security Summer
Research Team Program Follow-On grant and NSF Grant No.
1719501.

REFERENCES

[1] U. DOT, “Beyond trafﬁc 2045: Trends and choices,” US: DOT, 2015.
[2] N. H. T. S. Administration et al., “National motor vehicle crash
causation survey: Report to congress,” National Highway Trafﬁc Safety
Administration Technical Report DOT HS, vol. 811, p. 059, 2008.
[3] U. I. J. Ofﬁce, “What are connected vehicles and why do we need them,”
http : //www.its.dot.gov/cvbasics/cvbasicswhat, 2016, accessed:
2016-11-16.

[4] F. A. V. Policy, “Accelerating the next revolution in roadway safety,

nhtsa, us dept,” Transportation, 2016.

[5] L. Kaiser, “Transportation Industrial Control System (ICS) Cybersecu-
rity Standards Strategy 2013-2023,” National Highway Trafﬁc Safety
Administration, Technical Report, 2013.

[6] NHTSA, “ Cybersecurity best practices for modern vehicles,” National
Highway Trafﬁc Safety Administration, USDOT, Technical Report Re-
port No. DOT HS 812 333, 2016.

[7] M. Burt, M. Cuddy, M. Razo et al., “Big datas implications for trans-
portation operations: an exploration.” U.S. Department of Transportation,
Tech. Rep., 2014.

[8] CVRIA, “Connected vehicle reference implementation architecture,”
http : //local.iteris.com/cvria, 2015, accessed: 2017-06-26.

[9] M. Whaiduzzaman, M. Sookhak, A. Gani, and R. Buyya, “A survey
on vehicular cloud computing,” Journal of Network and Computer
Applications, vol. 40, pp. 325–344, 2014.

[10] M. Raya and J.-P. Hubaux, “Securing vehicular ad hoc networks,”

Journal of computer security, vol. 15, no. 1, pp. 39–68, 2007.

[11] U. S. G. A. Ofﬁce, “Vehicle cyber security: Dot and industry have
efforts under way, but dot needs to deﬁne its role in responding to a
real-world attack,” http : //www.gao.gov/assets/680/676064.pdf ,
2018, accessed: 2018-07-31.

[12] M. D. Nicol, “Critical

infrastructure resilience institute,” 2016, talk,

USCG.

[13] A. Pathre, C. Agrawal, and A. Jain, “A novel defense scheme against
ddos attack in vanet,” in Wireless and Optical Communications Networks
(WOCN), 2013 Tenth International Conference on.
IEEE, 2013, pp.
1–5.

[14] M. N. Mejri, J. Ben-Othman, and M. Hamdi, “Survey on vanet security
challenges and possible cryptographic solutions,” Vehicular Communi-
cations, vol. 1, no. 2, pp. 53–66, 2014.

[15] J. Petit and S. E. Shladover, “Potential cyberattacks on automated
vehicles,” IEEE Transactions on Intelligent Transportation Systems,
vol. 16, no. 2, pp. 546–556, 2015.

[16] A. L. Buczak and E. Guven, “A survey of data mining and machine
learning methods for cyber security intrusion detection,” IEEE Commu-
nications Surveys & Tutorials, vol. 18, no. 2, pp. 1153–1176, 2016.
[17] A. Patcha and J.-M. Park, “An overview of anomaly detection tech-
niques: Existing solutions and latest technological trends,” Computer
networks, vol. 51, no. 12, pp. 3448–3470, 2007.

[18] H. Sedjelmaci, S. M. Senouci, and M. A. Abu-Rgheff, “An efﬁcient and
lightweight intrusion detection mechanism for service-oriented vehicular
networks,” IEEE Internet of things journal, vol. 1, no. 6, pp. 570–577,
2014.

[19] F. van Wyk, Y. Wang, A. Khojandi, and N. Masoud, “Real-time sensor
anomaly detection and identiﬁcation in automated vehicles,” IEEE
Transactions on Intelligent Transportation Systems, 2019.

[20] R. W. van der Heijden, S. Dietzel, T. Leinm¨uller, and F. Kargl, “Sur-
vey on misbehavior detection in cooperative intelligent transportation
systems,” arXiv preprint arXiv:1610.06810, 2016.

[21] G. Carl, G. Kesidis, R. R. Brooks, and S. Rai, “Denial-of-service attack-
detection techniques,” IEEE Internet computing, vol. 10, no. 1, pp. 82–
89, 2006.

[22] A. A. C´ardenas, S. Amin, Z.-S. Lin, Y.-L. Huang, C.-Y. Huang, and
S. Sastry, “Attacks against process control systems: risk assessment,
detection, and response,” in Proceedings of the 6th ACM symposium
on information, computer and communications security. ACM, 2011,
pp. 355–366.

[23] Z. Zhan, M. Xu, and S. Xu, “Characterizing honeypot-captured cyber
attacks: Statistical framework and case study,” IEEE Transactions on
Information Forensics and Security, vol. 8, no. 11, pp. 1775–1789, 2013.
[24] R. Mitchell and R. Chen, “Effect of intrusion detection and response on
reliability of cyber physical systems,” IEEE Transactions on Reliability,
vol. 62, no. 1, pp. 199–210, 2013.

[25] S. Sridhar and M. Govindarasu, “Model-based attack detection and
mitigation for automatic generation control,” IEEE Transactions on
Smart Grid, vol. 5, no. 2, pp. 580–591, 2014.

[26] R. Mitchell and I.-R. Chen, “A survey of intrusion detection techniques
for cyber-physical systems,” ACM Computing Surveys (CSUR), vol. 46,
no. 4, p. 55, 2014.

[27] W. Li and H. Song, “Art: An attack-resistant trust management scheme
for securing vehicular ad hoc networks,” IEEE Transactions on Intelli-
gent Transportation Systems, vol. 17, no. 4, pp. 960–969, 2015.
[28] W. Min, M. Fan, X. Guo, and Q. Han, “A new approach to track multiple
vehicles with the combination of robust detection and two classiﬁers,”
IEEE Transactions on Intelligent Transportation Systems, vol. 19, no. 1,
pp. 174–186, 2017.

[29] J. Liang, Q. Lin, J. Chen, and Y. Zhu, “A ﬁlter model based on hidden
generalized mixture transition distribution model for intrusion detection
system in vehicle ad hoc networks,” IEEE Transactions on Intelligent
Transportation Systems, 2019.

[30] E. S. Page, “Continuous inspection schemes,” Biometrika, vol. 41, pp.

100–115, 1954.

[31] A. G. Tartakovsky, B. L. Rozovskii, R. B. Blaˇzek, and H. Kim,
“Detection of intrusions in information systems by sequential change-
point methods,” Statistical methodology, vol. 3, no. 3, pp. 252–293,
2006.

[32] D. Misiunas, J. V´ıtkovsk`y, G. Olsson, A. Simpson, and M. Lambert,
“Pipeline break detection using pressure transient monitoring,” Journal
of Water Resources Planning and Management, vol. 131, no. 4, pp.
316–325, 2005.

[33] R. Ratnam, J. B. Goense, and M. E. Nelson, “Change-point detection
in neuronal spike train activity,” Neurocomputing, vol. 52, pp. 849–855,
2003.

[34] K.-T. Cho and K. G. Shin, “Fingerprinting electronic control units for
vehicle intrusion detection.” in USENIX Security Symposium, 2016, pp.
911–927.

[35] D. Lee and D. Kundur, “Cyber attack detection in pmu measurements
via the expectation-maximization algorithm,” in Signal and Information
Processing (GlobalSIP), 2014 IEEE Global Conference on. IEEE, 2014,
pp. 223–227.

[36] A. Humayed, J. Lin, F. Li, and B. Luo, “Cyber-physical systems

security–a survey,” arXiv preprint arXiv:1701.04525, 2017.

[37] S.-H. Kong and S.-Y. Jun, “Cooperative positioning technique with
decentralized malicious vehicle detection,” IEEE Transactions on In-
telligent Transportation Systems, vol. 19, no. 3, pp. 826–838, 2017.
[38] Z. A. Biron, S. Dey, and P. Pisu, “Real-time detection and estimation of
denial of service attack in connected vehicle systems,” IEEE Transac-
tions on Intelligent Transportation Systems, vol. 19, no. 12, pp. 3893–
3902, 2018.

[39] E. Mousavinejad, F. Yang, Q.-L. Han, X. Ge, and L. Vlacic, “Distributed
cyber attacks detection and recovery mechanism for vehicle platooning,”
IEEE Transactions on Intelligent Transportation Systems, 2019.
[40] F. Sakiz and S. Sen, “A survey of attacks and detection mechanisms on
intelligent transportation systems: Vanets and iov,” Ad Hoc Networks,
vol. 61, pp. 33–50, 2017.

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS

11

[41] A. P. Dempster, N. M. Laird, and D. B. Rubin, “Maximum likelihood
from incomplete data via the em algorithm,” Journal of The Royal
Statistical Society, Series B, vol. 39, no. 1, pp. 1–38, 1977.

[42] T. Hastie, R. Tibshirani, and J. Friedman, The Elements Statistical
Springer,

Learning: Data Mining, Inference, and Prediction, 2nd ed.
2009.

[43] D. C. Montgomery, Introduction to statistical quality control.

John

Wiley & Sons (New York), 2009.

[44] V. A. Siris and F. Papagalou, “Application of anomaly detection algo-
rithms for detecting syn ﬂooding attacks,” Computer communications,
vol. 29, no. 9, pp. 1433–1442, 2006.

[45] D. Krajzewicz and C. Rossel, “Simulation of urban mobility (sumo),”
Centre for Applied Informatics (ZAIK) and the Institute of Transport
Research at the German Aerospace Centre, 2007.

PLACE
PHOTO
HERE

Gurcan Comert
received the B.Sc. and M.Sc.
degree in Industrial Engineering from Fatih Uni-
versity, Istanbul, Turkey and the Ph.D. degree in
Civil Engineering from University of South Car-
olina, Columbia, SC, in 2003, 2005, and 2008 re-
spectively. He is currently with Computer Science,
Physics, and Engineering Department, Benedict Col-
lege, Columbia, SC. His research interests include
applications of statistical models to transportation
problems such as trafﬁc parameter prediction, and
stochastic modeling.

PLACE
PHOTO
HERE

Mizanur Rahman received his Ph.D. and M.Sc.
degree in civil engineering with transportation sys-
tems major in 2018 and 2013, respectively, from
Clemson University. Since 2018, he has been a
research associate of the Center for Connected Mul-
timodal Mobility (C2M 2), a U.S. Department of
Transportation Tier 1 University Transportation Cen-
ter (cecas.clenson.edu/c2m2) at Clemson University.
He was closely involved in the development of
Clemson University Connected and Autonomous Ve-
hicle Testbed (CU-CAVT). His research focuses on
transportation cyber-physical systems for connected and autonomous vehicles
and for smart cities.

PLACE
PHOTO
HERE

Mhafuzul Islam received the BS degree in Com-
puter Science and Engineering from the Bangladesh
University of Engineering and Technology in 2014
and MS degree in Civil Engineering from Clemson
University at 2018. He is currently a Ph.D. student in
the Glenn Department of Civil Engineering at Clem-
son University. His research interests include Trans-
portation Cyber-Physical Systems with an emphasis
on Data-driven Connected Autonomous Vehicle. He
is a student member of IEEE.

PLACE
PHOTO
HERE

Mashrur Chowdhury ashrur Chowdhuryashrur
ChowdhuryM (SM’12) received the Ph.D. degree
in civil engineering from the University of Vir-
ginia, USA in 1995. Prior to entering academia
in August 2000, he was a Senior ITS Systems
Engineer with Iteris Inc. and a Senior Engineer
with Bellomo McGee Inc., where he served as a
Consultant to many state and local agencies, and the
U.S. Department of Transportation on ITS related
projects. He is the Eugene Douglas Mays Professor
of Transportation with the Glenn Department of
Civil Engineering, Clemson University, SC, USA. He is also a Professor of
Automotive Engineering and a Professor of Computer Science at Clemson
University. He is the Director of the USDOT Center for Connected Multimodal
Mobility (C2M 2) (a TIER 1 USDOT University Transportation Center). He
is Co-Director of the Complex Systems, Data Analytics and Visualization
Institute (CSAVI) at Clemson University. He is also the Director of the
Transportation Cyber-Physical Systems Laboratory at Clemson University.
He serves as an Associate Editor for the IEEE TRANSACTIONS ON
INTELLIGENT TRANSPORTATION SYSTEMS and Journal of Intelligent
Transportation Systems. He is a Fellow of the American Society of Civil
Engineers and a Senior Member of IEEE.

