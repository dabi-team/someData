The Internet of Things: Perspectives on Security
from RFID and WSN

1

A. Shah, A. Pal and H. B. Acharya
IIIT Delhi, India
acharya@iiitd.ac.in

6
1
0
2

r
p
A
3

]
I

N
.
s
c
[

1
v
9
8
3
0
0
.
4
0
6
1
:
v
i
X
r
a

Abstract—A massive current research effort focuses on combin-
ing pre-existing “Intranets” of Things into one Internet of Things.
However, this uniﬁcation is not a panacea; it will expose new
attack surfaces and vectors, just as it enables new applications.
We therefore urgently need a model of security in the Internet
of Things. In this regard, we note that IoT descends directly
from pre-existing research (in embedded Internet and pervasive
intelligence), so there exist several bodies of related work: security
in RFID, sensor networks, cyber-physical systems, and so on. In
this paper, we survey the existing literature on RFID and WSN
security, as a step to compiling all known attacks and defenses
relevant to the Internet of Things.

I. INTRODUCTION

In the context of the current interest in the Internet of
Things, it is instructive to remember previous attempts to
build RFID-tagged supply chains, smart spaces (such as smart
homes and ofﬁces, as well as smart cars), and automatic
control systems for systems ranging from engines to power
grids. Despite the extensive security literature developed in
each of these areas, a general model of security remains
elusive. This is a serious problem, as seen in recent breaches
such as Slammer and Duqu; the Internet of Things is currently
being developed without a clear understanding of the security
of cyber-physical systems, leave alone an appreciation of the
assumptions (of scale, name semantics, etc.) that we break
when we connect them to the Internet.

Clearly, the extremely wide variety of use cases for the
Internet of Things makes it impossible to have a single “silver
bullet” solution to security. As a starting point, we believe it is
essential to collect the known attack and defence models for
the devices, services and networks that form IoT components
or connectors. In this paper, we start by compiling a short
survey of research in security for radio-frequency identiﬁcation
tags, and for wireless sensor networks. We summarize and
classify existing attacks into three areas - privacy, authen-
tication, and availability; survey the available solutions; and
identify some shortcomings and open questions in the current
state-of-the-art.

II. RFID SECURITY

The earliest plans to deﬁne an “Internet of Things” involved
the widespread use of RFID tags - small, usually passive
electronic tags, remotely read by their modulation of radio-
frequency waves. These tags are both ubiquitous and cheap,
and offer a direct replacement for pre-existing tag technology

such as bar codes. The primary use is to automate the unique
identiﬁcation of objects, allowing them to be tracked, and
to enable them to interact with their environment in “smart”
ways; for example, a woolen garment might set a washing
machine to the proper setting automatically.

RFID tags, however, may also be active and battery-
powered. We propose, after Juels et al [25] that the primary
distinguishing factor of a tag is that it serves to identify itself
(and the object or person it is tagging), and thus excludes
mobile phones and sensor networks. (Some “RFID tags”,
which can report if a box is opened or closed, for example, blur
the lines.) ISO 14443 and 15693 deﬁne proximity (10 cm) and
vicinity (1 m) RFID devices for High-Frequency band tags;
ISO 18000 speciﬁes protocols for multiple bands (LF, HF,
UHF). ISO 18092 introduces the concept of NFC - devices
that can operate as both readers and tags, as required.

A. Attacks on RFID

RFID infrastructure is subject to three principal attacks:
attacks on privacy, on authentication, and on availability.
We now explore these attacks, further classifying them by
whether they target the tags and readers (edge hardware), the
communication system, or the backend (database, middleware
etc.) [43].

1) Privacy: The ﬁrst essential question with regard to
privacy is whose privacy, and what constitutes an attack on
it. Traditionally, two forms of privacy are considered: the
privacy of individual consumers (e.g. not being able to list
a person’s prostheses and implants by bringing a scanner near
them), and the privacy of logistics (not being able to map
out supply chains). However, we suggest that the Juels[25]
classiﬁcation of privacy threats into tracking and inventorying
is more precise.

As the name indicates,

tracking involves developing a
whole-life itinerary of a tag, by collecting readings at various
points of its life cycle; this is particularly important consider-
ing there were proposals to put RFID tags in currency notes
[27]. Collating data about the trajectories of multiple objects
associated with a person provides much more information
than, for example, cell phone GPS (which only tracks their
current position). Tracking can combine several personas of
one person, exposing dangerous or embarrassing information
(e.g. exposing the personal
life of an authority ﬁgure or
celebrity); information about movements can be used to infer
health or ﬁnancial issues; relationships can be inferred (X and
Y share clothing, they must be very close), and so on.

 
 
 
 
 
 
Inventorying is a one-off read of a person or object to
list their tags. Standardized ID formats, such as EPCglobal,
disclose a great deal of information - manufacturer, product
name, serial number, etc.; it has been speculated that, for
example, RFID-enabled passports could be used to trigger
smart bombs. (The proﬁling and selection of targets based on
inventorying is called hotlisting.)

The clear distinction between the two attacks is that tracking
can simply use the tag ID (or a constellation - in absence of
unique ID, a unique combination of IDs for tags travelling
together) for monitoring, location disclosure, and so on. The
semantic content of the tag is not needed. Hence, it is not
enough for a tag to be encrypted or not
linkable to ID;
a stronger requirement is indistinguishability, where the tag
output cannot be distinguished from random values. Another
solution is to have the tag update its ID in some unpredictable
fashion (similar to the use of nonces to prevent replay attacks).
However, a more general defence against tracking and inven-
torying is to require that the tag only disclose information
to trusted readers, i.e. depends on authentication, which we
discuss in the next sub-section. We now consider the question
of where, i.e. in which layer - application, communication, and
physical - attacks against RFID operate.

The classic vulnerability of RFID is that it is wireless and
silent; a tag can be read without the knowledge of its owner.
Thus, the most common attacks on RFID are unauthorized
reading of tags and eavesdropping, i.e. channel attacks. In
this context, it is important to remember that though tags
may be designed to work with a limited read range (say 10
cm), a powerful rogue reader can cause them to operate at
a considerably greater range (50 cm); if it is eavesdropping,
i.e. not required to power the tag, the range becomes greater
still. When picking up the (stronger) signal from the reader,
rather than from a tag, the range of the eavesdropper can be
of the order of kilometres. EPC requires that tags choose
and send a random bit string to the reader, and further
communication is XORed with the bit string, thus protecting
against eavesdroppers who can “hear” the reader but not the
tag. (Better, i.e. more expensive RFID tags can also perform
simple symmetric encryption; however, as discussed, it may
still be possible to track them without being able to decipher
their messages.)

Privacy attacks on RFID could possibly also be executed at
the edge hardware, by capturing tags (and possibly readers)
and subjecting them to reverse engineering, side-channel or
fault analysis. These attacks are designed to breach conﬁden-
tiality in general, and may be used to forcibly recover an ID
from a tag. However, it is unreasonable to expect that the
adversary can employ such force without alerting the owner
of the object! Hence, such attacks are not usually a privacy
concern; they are mostly applied to break authentication (by
recovering secret keys etc.)

The backend for RFID consists of standard systems and net-
works, and standard database and network security principles
apply. Transaction histories and identities can be recovered
from a compromised backend; secure internet trafﬁc, privacy
in databases[1] and proﬁle management[35] are essential com-
ponents of a complete privacy protection system. Ohkubo[47]

2

proposes the concept of forward security, i.e. that data trans-
mitted at a speciﬁc time cannot be compromised by a future
breach in the system.

2) Authentication: RFID, being an identiﬁcation system, is
deeply linked to authentication: identiﬁcation may be deﬁned
as the process of stating one’s identity; authentication, of
proving it. Besides being originally developed as an au-
thentication system in the military (“identify friend or foe”
systems for ﬁghter aircraft, in WW II), RFID is used in access
control systems, payment systems such as credit cards, and in
passports etc.

However, the simple presence of RFID tags is not sufﬁcient
to ensure authentication. RFID tags can be writable or repro-
grammable; besides, the attacker’s replies may not be from
a tag at all - Westhues [19] demonstrate a system to record
and play back replies from RFID-based access control systems.
Recent examples of compromised RFID authentication include
the Dutch passport and Mifare transport card[11].

There is also the question (from the previous section on
Privacy) of ensuring that the reader is properly authenticated
to the tag. Both directions of authentication - tag to reader,
and reader to tag - must take into account that an RFID tag is
low in computational power (thus incapable of, for example,
public-key cryptography).

Attacks on authentication involve an active adversary; it is
not possible to break authentication simply by snifﬁng. Attacks
on the communication channel include:

1) Impersonation. In the simplest attack,

the adversary
simply identiﬁes itself to the server as a tag, and is
accepted.

2) Replay. In cases where a tag does not update its re-
sponses, old messages between tag and reader can be
sniffed by the adversary, and reused for authentication.
3) Man-in-the-middle. A speciﬁc version, the relay attack,
is used to defeat schemes that check for physical prox-
imity of a tag; the adversary sets up a back channel
between his own “leech” reader, which communicates
with the tag, and a “ghost” that communicates with
the reader[34]. More involved MitM attacks modify the
messages between tag and reader; it may be possible to
use this to corrupt the data on the tag (e.g. marking a
bottle of morphine as glucose).

4) Race attacks. Using a stronger or faster transmission
than the original reader, the adversary can hijack or
(improperly) terminate a session, even after proper au-
thentication between reader and tag.

5) Noise attacks. The wireless medium of the signals leaves
them open to interference at the physical layer. For
example, the Manchester coding for high-speed NFC
tags encodes 0 as a signal at 82% strength, and 1 as a
signal at 100%. An adversary can boost signal strength;
the reader calibrates itself to read a signal at 100% as 0
and at 125% as 1 - now the adversary can ﬂip bits.
RFID tags, and to a limited extent readers, are also sus-
ceptible to capture and reverse engineering. Common tech-
niques include standard cryptanalysis, side-channel attacks,
and glitching, in which the system is subjected to abnormal
working conditions to cause it to fail. Besides tag ID, which

may itself be conﬁdential, such attacks can expose secret
keys used for communication, thereby enabling further attacks.
Though RFID solutions should ideally be easily computable
and resistant to memory analysis, in point of fact, Avoine[3]
suggests that it may be a more accurate adversary model to
assume that the adversary has access to all on-tag memory, as
well as to wireless communication.

Captured tags are susceptible to swapping (attachment to
a new object), cloning, and spooﬁng (similar to cloning,
but without creating a physical new tag) attacks. A more
sophisticated adversary can also attempt to attack the integrity
of the tag itself - a reprogramming attack; in some cases
this is possible even when the tag provides no interface for
programming, such as by physically altering the state of
memory cells[2].

It is not yet common to attack the backend through use
of RFID tags and readers, using techniques such as buffer
overﬂow and SQL injection, but it is possible [53]. Such
an attack, of course, can take over the entire system and
compromise privacy, authentication and availability.

3) Availability: The greatest problem with regard to RFID
availability attacks is that it is difﬁcult to diagnose whether
there is indeed an active adversary jamming a wireless signal,
or there is simple noise, interference with another signal, or
passive degradation (due to the presence of metal or water -
human bodies can distort or block high-frquency signals). Sim-
ilarly, an adversary may abuse privacy protection approaches
(blocker tags[28], RFID guardian[52]) to cause a Denial of
Service attack, or simply shield tags with a layer of metal to
form a Faraday cage. Such attacks are usually meant to disrupt
the monitoring or alerting system provided by RFID, to enable
other attacks such as sabotage, stealing the tagged objects, or
possibly simply disrupt the functioning of infrastructure.

B. RFID Security Measures

There are two main approaches to the security of RFID.
The ﬁrst, based on traditional cryptography, presents two
challenges - algorithms to perform cryptography on resource
constrained devices, and infrastructure to securely manage
and deploy such a volume of keys on common objects. The
second approach involves physical and policy-based methods.
We present a short summary of both types.

1) Cryptography: One primary issue in the use of cryptog-
raphy for RFID security is the low computational power of
RFID tags. More powerful tags can use lightweight variants
of AES [17], as well as new ciphers using elliptic-curve
cryptography [4]; however, to be usable by simple tags, it is
safest to design algorithms that only rely on simple operations
such as XOR [33] or a random number generator [8].

The ﬁrst cryptographic solution for RFID, by Weis et al.
[58], involved hash locks: when queried, the tag chooses a
random value r, and returns r; H(ID, r) where H is a secure
hash (and x, y means x concatenated with y). The reader looks
up all possible IDs from a table, and checks which one matches
the given hash. (The random number r prevents tracing by an
adversary.)

To reduce the cost of searching through the entire ID space,
later solutions allow the reader to share some state with the

3

tag. Ohkubo[48] replaces the random component of the hash
with a hash-chain, so only m possible replies must be stored.
(The tag has a counter i which starts with the value m; each
time it talks to a reader, it sends H i(ID) and reduces i by 1.)
Though forward secure, this scheme is vulnerable to replay
attacks. In response, Henrici[22] keeps track of the count of
read attempts since the last successful reader authentication,
while Dimitriou[13] keeps a perfect lock-step synchronization
between reader state and tag state, updated with every read.
While these solutions are replay resistant, they are vulnerable
to tracking: if a tag spends a long time between reads, its
response can still be used to track it.

Juels[24] brings up the issue that in most practical cases
of RFID security, the adversary only has minutes of access
to a tag. In such cases, a cheap scheme such as “a simple
list of pseudonyms that cycles to a new ID upon every read
request” is adequate: the attacker, within its limited window,
will keep seeing new pseudonyms and be unable either to
resolve the ID of the tag, or to track it. However, this scheme
does not consider how to share the psedonym-to-ID translation
table with genuine readers, and it is possible the adversary
may attack the table sharing infrastructure. Langheinrich and
Marti[38] extend this idea with bit-throttling and shared se-
crets. Treating the tag ID as a shared secret as per Shamir[54],
they split it into several pieces (“shares”) such that the ID
cannot be reconstructed until some threshold number of pieces
are known; also, they throttle the tag to reply with a very
slow “trickle” of bits when queried. The attacker has to spend
considerable time to read a tag, while legitimate readers can
use caching strategies to quickly ﬁnd the tag in the set of
known tags.

Another direction in lightweight cryptography is taken by
probabilistic protocols, such as Weis’ HB+ [29]. The protocol
is one-directional - it only authenticates tags, while hiding
ID from eavesdroppers - but its importance lies in the fact
that it sets up an NP-hard problem for the adversary, while
the tag only needs simple AND and XOR operations. This is
possible because the tag ID, say x, is a shared secret with the
reader. For every challenge c sent by the reader, the tag replies
x.c + y where y is noise, with some constant probability p,
and 0 otherwise. After a sufﬁciently large number of rounds
n, the reader can see that approximately n(1 − p) responses
match a given x, thereby authenticating the tag. The attacker
has no way of knowing which of the n responses were noisy,
and which were clear.

Molnar and Wagner[46] propose the idea of a tree-based
key-space: Readers keep a tree structure where every node is a
key, and every tag holds the keys corresponding to a path in the
tree. This general idea is extended by Buttyan [5], Dimitriou
[14], and Lu [41]. Such approaches are hard to update, as all
tags and readers share a key space.

A particularly important challenge to the practical de-
ployment of RFID encryption is ownership transfer, usually
involving the updating of keys in an RFID tag to ensure the
previous owner of the tagged item (e.g., the supermarket) can
no longer access it. Inoue [23] simply overwrote the original
tag ID with a Private ID, storing the original value in a private
database. Osaka[49] added reader authentication to protect

against rewriting attacks, and dynamic pseudonyms to stop
tracking attacks. However, this approach still requires a single
Trusted Center to translate the pseudonym to the true ID and
other information about the tag.

Extending the tree-of-keys approach, Molnar[45] stores key
subtrees on readers with a built-in limit on usage (say, 1000
authentications); when tag ownership changes, the new owner
reads in the tag repeatedly to exhaust the keyspace. A much
more ambitious scheme by Berthold et al[56] advocates hash-
locking tags with a consumer-chosen password at checkout
using a consumer device that takes over and reprograms tags,
a “data protection card”.

2) Distance and Physical Context: The simplest physical
method to force RFID security is to clip tags at checkout;
however, this method completely kills the tag, and prevents
any further use for them. Karjoth[31] suggests it is possible
to keep the tag, but reduce its range to a few centimeters,
by using tear-off antennas. Inoue[23] suggest using two tags
- one with the unique ID to be destroyed on purchase, and a
general, low-granularity one to hold information for later use.
It may also be simple enough to place the tagged object in a
Faraday cage to temporarily disable the tag; aluminium-lined
wallets and pouches are built for this very reason.

A more general answer, which works even for embedded
tags and objects that cannot be screened, is the “blocker”
tag[28]. This tag responds to all read requests with a jammed
signal, so the reader’s anti-collision protocol causes it
to
stop reading. With a sufﬁcient number of blocker tags, it is
possible to disable readers reading from different orientations
and distances. However, blocker tags depend on the adversary
reader backing off after it detects the channel is jammed; it
may be possible, with differential signal analysis, to separate
blocker-tag-only jamming signals from signals where both a
blocker-tag and a real tag reply.

Rieback et al. propose a more powerful solution, a battery-
powered, active RFID Guardian[52], which “not only produces
a randomly modulated jamming signal, but also allows the
user to upload access control lists, indicating which party can
perform what operation on which tags”[37].

The physical characteristics of the signal can also be used to
ensure security. Distance can be measured by signal strength
and round-trip time, and orientation, by angle of arrival of
the signal. A general design principle is for protocols to have
strict timing requirements, and tags to respond immediately,
to reduce the attacker’s window of opportunity; distance
bounding protocols [20], [10], [55] based on this principle
combat relay attacks.

The fact that readers emit radiation (and in many cases,
perform a handshake with the tag to authenticate themselves)
has also been used as the foundation for physical security.
Floerkemeier[18] propose that RFID standards include “trans-
parency protocols”, such that readers must explicitly broadcast
what data they collect, and for whom. Molnar et al[44]
propose that reader devices include trusted computing modules
that can attest to their proper functioning. Besides formal
auditing, such open disclosure would enable interested users to
carry personal devices with “watchdog tags” to inspect reader
statements. Carrying this idea further, Brainard[26] propose a

4

TAg Privacy Agent that controls access to personal tags and
logs all disclosure of personal data. Kriplean [36] proposes the
concept of physical access control (PAC) where authenticated
users can access all RFID data collected in their physical
vicinity, based on a map of readers. Clearly, this method can
be abused if the attacker places user tags on many agents,
and harvests RFID data from multiple physical locations.
The authors suggest making it easy to detect tags, with the
example of an elevator that mentions the tags of people inside
it. However, these physical methods are not secure against
eavesdropping (passive) readers, or against rogue readers that
do not follow the speciﬁcation.

III. SECURITY OF WIRELESS SENSOR NETWORKS

A sensor network consists of small, low-power computing
devices, i.e. sensors, deployed within an environment to ob-
serve (and report) physical phenomena. Typically, they consist
of a considerable number of nodes, which communicate in an
ad hoc fashion over wireless channels. Individual nodes, or
“motes”, are highly constrained computational devices - quite
similar to RFID tags. However, unlike in the case of RFID,
where the focus is on the individual tag (though it may be part
of a constellation), the primary focus in WSN is the entire
network of sensors.

As for RFID, we consider the security of WSN to have three

main objectives: privacy, authentication, and availability.

A. Privacy

Privacy in a wireless sensor network involves privacy of
the data and the query, as well as privacy of context (location
etc.)[39] Unlike in RFID, it is quite possible that the adversary
be internal - i.e., be a standard node in the network itself. In
this case, it is not sufﬁcient to use encryption or authentication,
as the attacker is not masquerading; there must be policies on
what data each entity is allowed to know.

The primary constraint on data privacy is that of aggrega-
tion. Simply put, a node should not be able to build a more
detailed picture of the data than is required for its functioning.
For example, if a sensor network is hierarchical, and organized
into clusters, the cluster head should be able to report the com-
bined measurement from the sensors, but not their individual
readings. The simplest way to do this is for the nodes in a
cluster to add noise to their readings; they coordinate with
each other over secure channels so that the aggregate (e.g.
the sum of their readings) is not affected. This algorithm is
called Cluster-based Private Data Aggregation[21]. In another
approach, Slice-Mixed AggRegaTion[21], sensors slice up
their data and share pieces with their neighbors; the ﬁnal
report contains all the pieces, but jumbled up, so each sensor’s
reading is kept secret. Or sensors may simply report statistics
such as mean, median, range, or the count of data items in
various value buckets, instead of reporting the data itself -
Generic Privacy-Preservation Solutions[63].

The other essential constraint on data privacy is the
technique of k-
anonymity of data queries. The usual
anonymity developed from privacy-preserving data mining can
be implemented by carrying out k queries for every request (so

the observer cannot tell which one was the real query)[6]; this
is, however, expensive. A more involved solution disconnects
user from query using tokens; a query is made, not for
a particular user, but for the holder of a token, which is
purchased from the WSN owner using blind signatures[62].

With regard to context privacy, the primary aim is to hide the
location of sensors and base stations, and sometimes the time
that data was collected (using random delays). The location
of the data source can be hidden using ﬂooding, transmissions
from fake sources (sensors send fake packets simulating a
data source), or random walks, as reported by Zhang[30].
These basic techniques have been further elaborated in later
work. GROW[60] increases the randomness of the walk: a
random walk is carried out from sink to source; when a route
is needed, a random walk is carried out from source until it
intersects the ﬁrst walk - hence the path chosen has pieces
of two random walks. Proxy-based and Tree-based Filtering
Schemes[61] deal with how to ﬁlter out dummy data without
breaking source privacy. Finally, similar to Tor, packets can be
multiply encrypted (or re-encrypted with each hop), so their
appearance changes with each hop[12] - though this is usually
too computationally expensive for sensor motes.

B. Authentication

Authentication in Wireless Sensor Networks involves both
guarding against spooﬁng - fake nodes (Sybil attack), fake
routes, and fake location - and against unauthorized disclosure
of information. Solutions in sensor networks mostly concen-
trate on cryptography and key management; this is manageable
given that sensor networks are small and self-contained, but
may be a greater challenge at Internet of Things scale.

In a typical case, a trusted server (usually the base station
for the sensor network) acts as a Key Distribution Center and
establishes a symmetric key for each sensor node; this key,
embedded in the node’s memory, is used to authenticate it to
the base station. If necessary, the server also generates session
keys and sends them to sensor nodes (encrypted with the
respective symmetric keys), to allow nodes to communicate in
a session. This standard deployment is less secure than “self-
enforcing” schemes such as Difﬁe-Hellman key agreement
or RSA, as the server may be compromised; however, the
limited computational resources of sensor nodes usually do
not support public-key cryptography. The recent development
of lightweight elliptic-curve cryptography has made it feasible
to deploy in some sensor networks, such as those with MICA2
nodes [42], [57].

The other main direction in cryptography involves key pre-
distribution. Key information is distributed among nodes prior
to deployment, and after deployment (which is assumed to
be one-time and unplanned), the nodes use this information
to authenticate each other. The original idea was proposed
by Gligor[16] and extended by various authors[7], [40];
the current state-of-the-art is the SPINS protocol suite of
Perrig[51]: SNEP for conﬁdential data transfer and µTESLA
for authenticated broadcast.

The second direction of authentication involves the nodes
authenticating information they receive, such as time (broad-
cast from a reference, or shared between nodes) and location

5

(calculated by the distance from reference beacon nodes).
Song[21] demonstrates statistical methods to identify and
correct for delayed, replayed, or forged time messages; Du[30]
detects fake location messages by anomaly detection. This
attack overlaps with availability; an adversary can attempt to
disrupt synchronization or localization with a DoS attack.

Physical attacks on sensor networks usually focus on the
edge system; like RFID tags, sensors are usually small, unat-
tended, and easy to capture and tamper with. As sensor nodes
are authenticated by their keys, an attacker who controls nodes
can clone them and deceive any other nodes that they share
pairwise keys with. Besides tamper-prooﬁng, solutions involve
effective key management (so that a very large number of
nodes have to be compromised to take over the system)[9].

C. Availability

Attacks on availability of Wireless Sensor Networks occur at
various layers, but usually target the communication channel.
In the physical layer, the standard attack is to use jam-
ming signals. The standard solutions to jamming, i.e. spread-
spectrum (frequency hopping) and use of lower duty cycles
for redundancy, apply. Similarly, it is possible to exhaust the
communication channel (handled by rate limiting), or cause
packet collisions (for which the solution is to employ error-
correcting codes). These attacks were studied in detail by
Wood[59].

Similar ﬂooding tactics are used at higher layers of the
network stack as well. The standard solution, to limit the
number of connections by a single sensor (and to make
them provide a proof of work, through puzzles)[50], has the
weakness that it only protects connection-oriented protocols
such as TCP, and cannot guard against ﬂooding by “Hello”
packets. (Using authentication in the handshake performed
when setting up a connection will prevent Denial-of-Service
through too many connections, but it is possible to overwhelm
a node with incomplete requests.) We are not aware of a good
solution for connectionless protocols.

Finally, attacks are used to disrupt routing in a network,
either by advertising routes and discarding all trafﬁc (blackhole
attack), or forwarding only a portion of the trafﬁc (selective
forwarding). These attacks were ﬁrst noted by Wood[59],
and studied in detail for existing protocols (Directed Dif-
fusion,LEACH) by Wagner[32]. Such attacks may involve
manipulation of the routing information, so their prevention
comes under the heading of authentication. In order to survive
such attacks, networks must have redundancy and monitoring
systems; Du[15] develop a secure routing protocol for sensor
networks.

IV. CONCLUDING REMARKS

Despite the serious interest of the cryptography community
and the networks community, the question of security (and
privacy) has few deﬁnitive answers, for RFID as well as for
sensor networks. Stumbling blocks include the wide variety
of scenarios where they are deployed; the fact that tags or
motes are usually unattended, and work silently and wire-
lessly; and that they are too weak computationally to support

strong cryptographic protocols. However, both RFID and WSN
are critical components of the Internet of Things; with the
spread of automated machine-to-machine conﬁguration and
communication, there will be a critical need for solutions to
the security issues ﬁrst encountered in these networks. In this
brief survey, we have attempted to survey the challenges and
methods for security in both RFID and WSN; we hope this
will make it easier to spot commonalities and differences, and
perhaps develop a more general security model for the Internet
of Things.

REFERENCES

[1] Rakesh Agrawal, Jerry Kiernan, Ramakrishnan Srikant, and Yirong Xu.
Hippocratic databases. In Proceedings of the 28th international confer-
ence on Very Large Data Bases, pages 143–154. VLDB Endowment,
2002.

[2] Ross Anderson and Markus Kuhn. Low cost attacks on tamper resistant

devices. In Security Protocols, pages 125–136. Springer, 1998.

[3] Gildas Avoine and Philippe Oechslin. A scalable and provably secure
hash-based rﬁd protocol. In Pervasive Computing and Communications
Workshops, 2005. PerCom 2005 Workshops. Third IEEE International
Conference on, pages 110–114. IEEE, 2005.

[4] Lejla Batina, Jorge Guajardo, Tim Kerins, Nele Mentens, Pim Tuyls, and
Ingrid Verbauwhede. An elliptic curve processor suitable for rﬁd-tags.
IACR Cryptology ePrint Archive, 2006:227, 2006.

[5] Levente Butty´an, Tam´as Holczer, and Istv´an Vajda. Optimal key-trees for
In Privacy Enhancing Technologies,

tree-based private authentication.
pages 332–350. Springer, 2006.

[6] Bogdan Carbunar, Yang Yu, Weidong Shi, Michael Pearce, and Venu Va-
sudevan. Query privacy in wireless sensor networks. ACM Transactions
on Sensor Networks (TOSN), 6(2):14, 2010.

[7] Haowen Chan, Adrian Perrig, and Dawn Song. Random key predis-
tribution schemes for sensor networks. In Security and Privacy, 2003.
Proceedings. 2003 Symposium on, pages 197–213. IEEE, 2003.

[8] Hung-Yu Chien and Che-Hao Chen. Mutual authentication protocol
for rﬁd conforming to epc class 1 generation 2 standards. Computer
Standards & Interfaces, 29(2):254–259, 2007.

[9] Taehwan Choi, Hrishikesh B Acharya, and Mohamed G Gouda. The best
keying protocol for sensor networks. Pervasive and Mobile Computing,
9(4):564–571, 2013.

[10] Jolyon Clulow, Gerhard P Hancke, Markus G Kuhn, and Tyler Moore.
So near and yet so far: Distance-bounding attacks in wireless networks.
In Security and Privacy in Ad-Hoc and Sensor Networks, pages 83–97.
Springer, 2006.

[11] Gerhard de Koning Gans, Jaap-Henk Hoepman, and Flavio D Garcia.
A practical attack on the mifare classic. In Smart Card Research and
Advanced Applications, pages 267–282. Springer, 2008.

[12] Jing Deng, Richard Han, and Shivakant Mishra. Decorrelating wireless
sensor network trafﬁc to inhibit trafﬁc analysis attacks. Pervasive and
Mobile Computing, 2(2):159–186, 2006.

[13] Tassos Dimitriou. A lightweight rﬁd protocol to protect against traceabil-
ity and cloning attacks. In Security and Privacy for Emerging Areas in
Communications Networks, 2005. SecureComm 2005. First International
Conference on, pages 59–66. IEEE, 2005.

[14] Tassos Dimitriou. A secure and efﬁcient rﬁd protocol that could make
big brother (partially) obsolete.
In Pervasive Computing and Com-
munications, 2006. PerCom 2006. Fourth Annual IEEE International
Conference on, pages 6–pp. IEEE, 2006.

[15] Xiaojiang Du, Mohsen Guizani, Yang Xiao, and Hsiao-Hwa Chen. Two
tier secure routing protocol for heterogeneous sensor networks. Wireless
Communications, IEEE Transactions on, 6(9):3395–3401, 2007.
[16] Laurent Eschenauer and Virgil D Gligor. A key-management scheme for
distributed sensor networks. In Proceedings of the 9th ACM conference
on Computer and communications security, pages 41–47. ACM, 2002.
[17] Martin Feldhofer, Sandra Dominikus, and Johannes Wolkerstorfer.
Strong authentication for rﬁd systems using the aes algorithm.
In
Cryptographic Hardware and Embedded Systems-CHES 2004, pages
357–370. Springer, 2004.

[18] Christian Floerkemeier, Roland Schneider, and Marc Langheinrich.
Scanning with a purpose–supporting the fair information principles
In Ubiquitous computing systems, pages 214–231.
in rﬁd protocols.
Springer, 2005.

6

[19] Flavio D Garcia, Gerhard de Koning Gans, and Roel Verdult. Tutorial:
Proxmark, the swiss army knife for rﬁd security research. Technical
report, Technical report, Radboud University Nijmegen, 2012.

[20] Gerhard P Hancke and Markus G Kuhn. Attacks on time-of-ﬂight
distance bounding channels. In Proceedings of the ﬁrst ACM conference
on Wireless network security, pages 194–202. ACM, 2008.

[21] Wenbo He, Xue Liu, Hoang Nguyen, Klara Nahrstedt, and Tarek
Abdelzaher. Pda: Privacy-preserving data aggregation in wireless sensor
networks. In INFOCOM 2007. 26th IEEE International Conference on
Computer Communications. IEEE, pages 2045–2053. IEEE, 2007.
[22] Dirk Henrici and Paul M¨uller. Hash-based enhancement of location
privacy for radio-frequency identiﬁcation devices using varying identi-
ﬁers. In Pervasive Computing and Communications Workshops, 2004.
Proceedings of the Second IEEE Annual Conference on, pages 149–153.
IEEE, 2004.

[23] Sozo Inoue and Hiroto Yasuura. Rﬁd privacy using user-controllable
uniqueness. In RFID Privacy Workshop, pages 1–9. Citeseer, 2003.
[24] Ari Juels. Minimalist cryptography for low-cost rﬁd tags. In Security

in Communication Networks, pages 149–164. Springer, 2005.

[25] Ari Juels. Rﬁd security and privacy: A research survey. Selected Areas

in Communications, IEEE Journal on, 24(2):381–394, 2006.

[26] Ari Juels and John Brainard. Soft blocking: Flexible blocker tags on
In Proceedings of the 2004 ACM workshop on Privacy in

the cheap.
the electronic society, pages 1–7. ACM, 2004.

[27] Ari Juels, Ravikanth Pappu, et al. Squealing euros: Privacy protection
in rﬁd-enabled banknotes. In Financial cryptography, volume 3, pages
103–121. Springer, 2003.

[28] Ari Juels, Ronald L Rivest, and Michael Szydlo. The blocker tag:
Selective blocking of rﬁd tags for consumer privacy. In Proceedings of
the 10th ACM conference on Computer and communications security,
pages 103–111. ACM, 2003.

[29] Ari Juels and Stephen A Weis. Authenticating pervasive devices with
In Advances in Cryptology–CRYPTO 2005, pages

human protocols.
293–308. Springer, 2005.

[30] Pandurang Kamat, Yanyong Zhang, Wade Trappe, and Celal Ozturk.
In
Enhancing source-location privacy in sensor network routing.
Distributed Computing Systems, 2005. ICDCS 2005. Proceedings. 25th
IEEE International Conference on, pages 599–608. IEEE, 2005.
[31] G¨unter Karjoth and Paul A. Moskowitz. Disabling rﬁd tags with visible
conﬁrmation: Clipped tags are silenced.
In Proceedings of the 2005
ACM Workshop on Privacy in the Electronic Society, WPES ’05, pages
27–30, 2005.

[32] Chris Karlof and David Wagner. Secure routing in wireless sensor
networks: Attacks and countermeasures. Ad hoc networks, 1(2):293–
315, 2003.

[33] Sindhu Karthikeyan and Mikhail Nesterenko. Rﬁd security without
In Proceedings of the 3rd ACM workshop on

extensive cryptography.
Security of ad hoc and sensor networks, pages 63–67. ACM, 2005.
[34] Ziv Kﬁr and Avishai Wool. Picking virtual pockets using relay attacks
on contactless smartcard. In Security and Privacy for Emerging Areas in
Communications Networks, 2005. SecureComm 2005. First International
Conference on, pages 47–58. IEEE, 2005.

[35] Alfred Kobsa and J¨org Schreck. Privacy through pseudonymity in user-
adaptive systems. ACM Transactions on Internet Technology (TOIT),
3(2):149–183, 2003.

[36] Travis Kriplean, Evan Welbourne, Nodira Khoussainova, Vibhor Ras-
togi, Magdalena Balazinska, Gaetano Borriello, Tadayoshi Kohno, and
Dan Suciu. Physical access control for captured rﬁd data. Pervasive
Computing, IEEE, 6(4):48–55, 2007.

[37] Marc Langheinrich. A survey of rﬁd privacy approaches. Personal and

Ubiquitous Computing, 13(6):413–421, 2009.

[38] Marc Langheinrich and Remo Marti. Practical minimalist cryptography

for rﬁd privacy. Systems Journal, IEEE, 1(2):115–128, 2007.

[39] Na Li, Nan Zhang, Sajal K Das, and Bhavani Thuraisingham. Privacy
preservation in wireless sensor networks: A state-of-the-art survey. Ad
Hoc Networks, 7(8):1501–1514, 2009.

[40] Donggang Liu, Peng Ning, and Rongfang Li. Establishing pairwise keys
in distributed sensor networks. ACM Transactions on Information and
System Security (TISSEC), 8(1):41–77, 2005.

[41] Li Lu, Jinsong Han, Lei Hu, Yunhao Liu, and Lionel M Ni. Dynamic
key-updating: Privacy-preserving authentication for rﬁd systems.
In
Pervasive Computing and Communications, 2007. PerCom’07. Fifth
Annual IEEE International Conference on, pages 13–22. IEEE, 2007.

[42] David J Malan, Matt Welsh, and Michael D Smith. A public-key
infrastructure for key distribution in tinyos based on elliptic curve
In Sensor and Ad Hoc Communications and Networks,
cryptography.

7

2004. IEEE SECON 2004. 2004 First Annual IEEE Communications
Society Conference on, pages 71–80. IEEE, 2004.

[43] Aikaterini Mitrokotsa, Melanie R Rieback, and Andrew S Tanenbaum.

Classiﬁcation of rﬁd attacks. Gen, 15693:14443, 2010.

[44] David Molnar, Andrea Soppera, and David Wagner. Privacy for rﬁd
through trusted computing. In Proceedings of the 2005 ACM workshop
on Privacy in the electronic society, pages 31–34. ACM, 2005.
[45] David Molnar, Andrea Soppera, and David Wagner. A scalable,
delegatable pseudonym protocol enabling ownership transfer of rﬁd tags.
In Selected Areas in Cryptography, pages 276–290. Springer, 2006.
[46] David Molnar and David Wagner. Privacy and security in library rﬁd:
Issues, practices, and architectures.
In Proceedings of the 11th ACM
conference on Computer and communications security, pages 210–219.
ACM, 2004.

[47] Miyako Ohkubo, Koutarou Suzuki, Shingo Kinoshita, et al. Crypto-
graphic approach to privacy-friendly tags. In RFID privacy workshop,
volume 82. Cambridge, USA, 2003.

[48] Miyako Ohkubo, Koutarou Suzuki, Shingo Kinoshita, et al. Crypto-
graphic approach to privacy-friendly tags. In RFID privacy workshop,
volume 82. Cambridge, USA, 2003.

[49] Kyosuke Osaka, Tsuyoshi Takagi, Kenichi Yamazaki, and Osamu Taka-
hashi. An efﬁcient and secure rﬁd security method with ownership
transfer. In Computational Intelligence and Security, 2006 International
Conference on, volume 2, pages 1090–1095. IEEE, 2006.

[50] Adrian Perrig, John Stankovic, and David Wagner. Security in wireless
sensor networks. Communications of the ACM, 47(6):53–57, June 2004.
[51] Adrian Perrig, Robert Szewczyk, Justin Douglas Tygar, Victor Wen, and
David E Culler. Spins: Security protocols for sensor networks. Wireless
networks, 8(5):521–534, 2002.

[52] Melanie R Rieback, Bruno Crispo, and Andrew S Tanenbaum. Rﬁd
guardian: A battery-powered mobile device for rﬁd privacy management.
In Information Security and Privacy, pages 184–194. Springer, 2005.

[53] Melanie R Rieback, Bruno Crispo, and Andrew S Tanenbaum. Is your
cat infected with a computer virus? In Pervasive Computing and Com-
munications, 2006. PerCom 2006. Fourth Annual IEEE International
Conference on, pages 10–pp. IEEE, 2006.

[54] Adi Shamir. How to share a secret. Communications of the ACM,

22(11):612–613, 1979.

[55] Dave Singelee and Bart Preneel. Location veriﬁcation using secure
distance bounding protocols.
In Mobile Adhoc and Sensor Systems
Conference, 2005. IEEE International Conference on, pages 7–pp. IEEE,
2005.

[56] Sarah Spiekermann and Oliver Berthold. Maintaining privacy in rﬁd
enabled environments. In Privacy, Security and Trust within the Context
of Pervasive Computing, pages 137–146. Springer, 2005.

[57] A S Wander, Nils Gura, Hans Eberle, Vipul Gupta, and Sheueling Chang
Shantz. Energy analysis of public-key cryptography for wireless sensor
networks. In Pervasive Computing and Communications, 2005. PerCom
2005. Third IEEE International Conference on, pages 324–328. IEEE,
2005.

[58] Stephen A Weis, Sanjay E Sarma, Ronald L Rivest, and Daniel W
Engels.
Security and privacy aspects of low-cost radio frequency
identiﬁcation systems. In Security in pervasive computing, pages 201–
212. Springer, 2004.

[59] Anthony D Wood and John A Stankovic. A taxonomy for denial-
of-service attacks in wireless sensor networks. Handbook of Sensor
Networks: Compact Wireless and Wired Sensing Systems, pages 739–
763, 2004.

[60] Yong Xi, Loren Schwiebert, and Weisong Shi.

Preserving source
location privacy in monitoring-based wireless sensor networks.
In
Parallel and Distributed Processing Symposium, 2006. IPDPS 2006.
20th International, pages 8–pp. IEEE, 2006.

[61] Yi Yang, Min Shao, Sencun Zhu, Bhuvan Urgaonkar, and Guohong Cao.
Towards event source unobservability with minimum network trafﬁc in
sensor networks. In Proceedings of the ﬁrst ACM conference on Wireless
network security, pages 77–88. ACM, 2008.

[62] Rui Zhang, Yanchao Zhang, and Kui Ren. Dp2ac: Distributed privacy-
preserving access control in sensor networks. In INFOCOM 2009, IEEE,
pages 1251–1259. IEEE, 2009.

[63] Wensheng Zhang, Chuang Wang, and Taiming Feng. Gpˆ 2s: Generic
privacy-preservation solutions for approximate aggregation of sensor
data (concise contribution). In Pervasive Computing and Communica-
tions, 2008. PerCom 2008. Sixth Annual IEEE International Conference
on, pages 179–184. IEEE, 2008.

