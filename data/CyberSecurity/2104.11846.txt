1

Joint Detection and Localization of Stealth False
Data Injection Attacks in Smart Grids
using Graph Neural Networks

Osman Boyaci, Mohammad Rasoul Narimani, Katherine Davis, Muhammad Ismail, Thomas J Overbye, and
Erchin Serpedin

1
2
0
2

t
c
O
9

]

G
L
.
s
c
[

2
v
6
4
8
1
1
.
4
0
1
2
:
v
i
X
r
a

Abstract— False data injection attacks (FDIA) are a main
category of cyber-attacks threatening the security of power
systems. Contrary to the detection of these attacks, less attention
has been paid to identifying the attacked units of the grid. To this
end, this work jointly studies detecting and localizing the stealth
FDIA in power grids. Exploiting the inherent graph topology of
power systems as well as the spatial correlations of measurement
data, this paper proposes an approach based on the graph neural
network (GNN) to identify the presence and location of the FDIA.
The proposed approach leverages the auto-regressive moving
average (ARMA) type graph ﬁlters (GFs) which can better adapt
to sharp changes in the spectral domain due to their rational type
ﬁlter composition compared to the polynomial type GFs such as
Chebyshev. To the best of our knowledge, this is the ﬁrst work
based on GNN that automatically detects and localizes FDIA
in power systems. Extensive simulations and visualizations show
that the proposed approach outperforms the available methods
in both detection and localization of FDIA for different IEEE test
systems. Thus, the targeted areas can be identiﬁed and preventive
actions can be taken before the attack impacts the grid.

Index Terms—False data injection attacks, graph neural net-

works, machine learning, smart grid, power system security

NOMENCLATURE

Pi + jQi Complex power injection at bus i.
Pij + jQij Complex power ﬂow between bus i and j.
Vi, θi
n, m

Voltage magnitude and phase angle of bus i.
Number of buses, number of measurements.
Rn
State space.
Rm Measurement space.
A state vector.
Original state vector without an attack.
False data injected state vector.
A measurement vector.
Original measurement vector.
Attacked measurement vector.
Attack vector.
Nonlinear measurement function at x.

X ∈
Z ∈
x
ˆx
ˇx
z
zo
za
a
h(x)

∈ X
∈ X
∈ X
∈ Z
∈ Z
∈ Z
∈ Z

Manuscript received May 23, 2021; revised August 27, 2021 and September

30; accepted October 2, 2021.

O. Boyaci, K. Davis, T. J. Overbye and E. Serpedin are with the Department
of Electrical and Computer Engineering, Texas A&M University, College Sta-
tion, TX 77843 USA (email: osman.boyaci@tamu.edu; katedavis@tamu.edu;
overbye@tamu.edu; eserpedin@tamu.edu)

M. R. Narimani

is with the College of Engineering, Arkansas State

University, Jonesboro, AR 72404 USA (e-mail: mnarimani@astate.edu).

M. Ismail is with the Department of Computer Science, Tennessee Tech

University, Cookeville, TN 38505 USA (email: mismail@tntech.edu)
This work was supported by NSF under Award Number 1808064.

T
W
D
Λ
U
L

Attacker’s target area to perform FDI attack.

×

j Wij Diagonal degree matrix.

Rn
n Weighted adjacency matrix.
∈
n Dii = (cid:80)
Rn
×
∈
Rn
n = diag[λ1, . . . , λn] Graph Fourier frequencies.
∈
Rn
n = [u1, . . . , un] Graph Fourier basis.
×
∈
Rn
n = U ΛU T Normalized graph Laplacian.
∈

×

×

I. INTRODUCTION

Smart grids integrate Information and Communication Tech-
nologies (ICT) into large-scale power networks to generate,
transmit, and distribute electricity more efﬁciently [1]. Re-
mote Terminal Units (RTUs) and Phasor Measurement Units
(PMUs) are utilized to acquire the physical measurements and
deliver them to the Supervisory Control and Data Acquisition
Systems (SCADAs). Then, the ICT network transfers these
measurements to the application level where the power system
operators process them and take the necessary actions [2]. As a
direct consequence, power system reliability is determined by
the accuracy of the steps along this cyber-physical pipeline [3].
Power system state estimation (PSSE) modules employ these
measurements to estimate the current operating point of the
grid [4] and thus the integrity and trustworthiness of the mea-
surements are crucial for proper operation of power systems. In
addition, the accuracy of power system analysis tools such as
energy management, contingency and reliability analysis, load
and price forecasting, and economic dispatch depends on these
measurements [5]. Thus, power system operation strongly
depends on the accuracy of the measurements and the integrity
of their ﬂow through the system. Therefore, metering devices
represent highly attractive targets for adversaries that try to
obstruct the grid operation by corrupting the measurements.

By disrupting the integrity of measurement data, false data
injection attacks (FDIAs) constitute a considerable cyber-
physical threat. More speciﬁcally, an adversary injects some
false data to the measurements in order to mislead the PSSE
and force it to converge to another operating point. Since
the state of the power system is miscalculated by using
these false data, any action taken by the grid operator based
on the false operating point can lead to serious physical
consequences including systematic problems and failures [6].
In traditional power grids, the largest normalized residual test
(LNRT) is employed within the bad data detection (BDD)
module along with PSSE to detect the “bad” measurement data
[4]. Nevertheless, a designed false data injected measurement

 
 
 
 
 
 
can bypass the BDD. In particular, [2], [7] show that by
satisfying the power ﬂow equations, an intruder can create an
unobservable (stealth) FDIA and bypass the BDD if s/he has
sufﬁcient information about the grid. Various methods have
been proposed to alert the grid operator about the presence of
the FDIA without providing any information about the attack
location [8], [9]. Localizing the attack is crucial for power
system operators since they can take preventive action such as
isolating the under-attack buses and re-dispatching the system
accordingly. Therefore, this paper focuses jointly on detection
and localization of the FDIA in power systems.

A. Related Works

In general, there are two main approaches to detect and
localize the FDIAs: model-based and data driven approaches
[8]. In the model-based methods [10]–[14], a model for the
system is built and its parameters are estimated to detect the
FDIAs. Since there is no training, these methods do not require
the historical data. However, the detection delays, scalability
issues and threshold tuning steps can limit the performance and
usability of the model-based approaches [9]. Conversely, the
data-driven methods [15] are system independent and require
historical data and a training procedure. However, they provide
scalability and real time compatibility due to the excessive
training. Data driven methods, machine learning (ML) [16],
in particular, offer superior performances to detect FDIAs in
power systems as the historical datasets are growing [8], [9].
Therefore, we employ a data driven approach in this work for
detecting and localizing FDIAs in power systems.

While there has been a great deal of research on detection of
FDIAs, only a few attempts have been made to localize these
attacks [10]–[15]. Since localization of FDIAs is relatively a
newer research subject compared to detection of these attacks,
the current approaches proposed in literature suffer from some
limitations. A multistage localization algorithm based on graph
theory results is proposed in [10] to localize the attack at clus-
ter level. Nevertheless, the low resolution hinders the beneﬁts
of localization in cluster level algorithms. In [11], a model-
driven analytical redundancy approach utilizing Kalman ﬁlters
is presented for joint detection and mitigation of FDIA in AGC
systems. In their model, the authors of [11] ﬁrst determine a
threshold using the Mahalanobis norm of the residuals of the
non-attacked situation. Any residue larger than the threshold
is regarded as an attacked sample. Apart from the manual
threshold optimization steps, detection times are at the range
of seconds in their estimation based models. A generalized
modulation operator that is applied on the states of the system
is presented as an ongoing work in a brief announcement in
[12] to localize the FDIAs in power systems. Yet, the results
are not published as of today. Authors in [13] present an inter-
nal observer-based detection and localization method for FDIA
in power systems. They create and assign an interval observer
to each measurement device and construct a customized logic
localization judgment matrix to detect and localize the FDIA.
Nevertheless, their average detection delay is more than 1.1
seconds, which can highly limit their usability in a real life
scenario. Lack of scalability and the need for a custom solution

2

requiring manual labor represent additional limitations of this
method. A Graph Signal Processing (GSP) based approach
is developed in [14] to detect and localize FDIAs using the
Graph Fourier Transform (GFT), local smoothness, and vertex-
frequency energy distribution methods. Hovewer, the random
and easily detectable attacks employed to test their models
do not comprehensively assess the actual performance of the
models. Besides, manual
threshold tuning of graph ﬁlters
(GFs) brings extra effort for their proposed methods. Authors
in [15] propose physics- and learning-based approaches to
detect and localize the FDIAs in automatic generation control
(AGC) of power systems. While the physics-based method
relies on interaction variables, the learning-based approach
exploits the historical Area Control Error (ACE) data, and
utilizes a Long Short Term Memory (LSTM) Neural Network
(NN) to generate a model for learning the data pattern.
Nevertheless, [15] reports results limited to a 5-bus system
and assumes training an LSTM model for each measurement.
Thus, the limited number of components deeply conﬁnes the
large scale attributes of the proposed method. Furthermore,
training a separate detector for each bus extremely increases
the overall model complexity for large systems and reduces
its suitability for real world applications.

B. Motivation

Due to their graph-based topology, graph structural data
such as social networks, trafﬁc networks, and electric grid
networks cannot be modeled efﬁciently in the Euclidean space
and require graph-type architectures [17]. Processing (ﬁltering)
an image having 30 pixels and a power grid having 30 buses
are demonstrated in Fig. 1. Since nodes are ordered and have

(a) Processing an image having 30
pixels in Euclidean space. Nodes and
and edges represent pixels and their
neighbors in the image, respectively.

(b) Processing a power grid having
30 buses in non-Euclidean space.
Nodes and edges represent buses and
lines of the grid, respectively.

Fig. 1. Demonstration of signal processing in Euclidean (1a) and non-
Euclidean (1b) spaces with an image and a power grid signal [17]. Neighbor
nodes (blue) of a node (red) are ordered and constant in size for the image
having 30 pixels in 2D Euclidean space. In contrast, they are unordered
and variable in size for the IEEE 30-bus system in Non-Euclidean space.
Therefore, in order to efﬁciently model the spatial correlation of the power
grid, graph type approaches that consider the topology of the underlying
systems such as GSP and GNN are necessary.

the same number of neighbors for image data,
it can be
processed in a 2D Euclidean space. For example a sliding
kernel can easily capture the spatial correlations of pixels in
this Euclidean space. Conversely, neighborhood relationships
are unordered and vary from node to node in a graph signal

[17]. Therefore, graph signals need to be processed in non-
Euclidean spaces determined by the topology of the graph.
In fact, as a highly complex graph structural data, smart grid
signals require graph type architectures such as GSP or GNN
to exploit the spatial correlations of the grid.

GSP has emerged in the past few years to deal with
the data in non-Euclidean spaces [18]. A few researchers
designed GFs to detect and localize the FDIA [12], [14] using
GSP. However, manual tailoring of the ﬁlters and detection
thresholds substantially limits the applicability and efﬁciency
of GSP. Conversely, GNN, as a data-driven counterpart of the
GSP, eliminates the custom design steps and provides an end-
to-end design that exploits the spatial locality dictated by the
historical data. Similar to the classical signal processing, a
graph signal is ﬁrst converted into the spectral domain by GFT,
then its Fourier coefﬁcients are multiplied with those ﬁlter
weights and ﬁnally the signal transformed back into the vertex
domain by the inverse GFT [19]. To circumvent this spectral
decomposition and domain transformation, polynomial GFs
are proposed in [20] in which localized ﬁlters are learned
directly in the vertex domain [21]. For a polynomial GF,
the output of each vertex v is only dependent on the K-
hop neighborhood of v and its spectral response is a K-order
polynomial. Polynomial GFs, which are also referred to as
ﬁnite impulse response (FIR) GFs due to the local information
sharing, perform a weighted moving average (MA) ﬁltering
[22], [23]. However, FIR GFs may require a high degree
polynomial to capture the global structure of the graph. In fact,
interpolation and extrapolation performance of high degree
polynomials are unsatisfactory [22], and they are not “ﬂexible”
enough to adapt to sudden changes in the spectral domain
[21]. To overcome this limitation, inﬁnite impulse response
(IIR) type GFs performing Auto-Regressive Moving Average
(ARMA) are proposed in [22]. Contrary to FIR GFs, IIR
GFs have rational
type spectral responses. Therefore, IIR
GFs can implement more complex responses with a low
degree of polynomials both in the numerator and denominator
since rational functions have better performance compared to
polynomial ones in terms of interpolation and extrapolation
capabilities [21], [22].

Detection and localization of FDIA can be a challenging
task if an intruder has ‘enough’ information about the grid
to create a stealth attack [7]. S/he can hide an attack vector
into an honest sample if the topology of the grid is ignored.
Moreover, s/he can design an attack vector so that a malicious
sample can be indistinguishable from an honest one if the
spatial correlations of grid data are not well captured or the de-
signed GFs do not satisfy the required spectral response. Thus,
we design an GNN based model by utilizing ARMA GFs to
be able to ﬁt sharp changes in the spectral domain of the
grid. Filter weights are learned automatically during training
by an end-to-end data-driven approach. To compare our results
with the existing data-driven techniques, we utilized several
models to jointly detect and localize the FDIA. Moreover, for
a fair comparison, the Bayesian hyper-parameter optimization
technique is employed to all models for tuning the models’
hyperparameters such as number of layers, neurons, etc.

3

C. Contributions and Paper Organization

The contributions of this work are outlined as follows:

•

•

•

•

•

•

To properly capture the spatial correlations of the smart
grid data in a non-Euclidean space, we utilize IIR type
ARMA GFs which provide more ﬂexible frequency re-
is
sponses compared to FIR type Chebyshev GFs. It
demonstrated on IEEE 118- and 300-bus test systems
that ARMA GFs better approximate the desired ﬁlter
response compared to CHEB GFs for the same ﬁlter order
by comparing their empirical frequency responses when
approximating an ideal band pass ﬁlter.
To precisely test our proposed method, we generate a
dataset for each test system with 1-minute intervals using
several FDIA generation algorithms in the literature as
well as our optimization-based FDIA method developed
in our previous paper [24].
To automatically determine the unknown ﬁlter weights
by an end-to-end data-driven approach, we propose a
scalable, ARMA GF-based GNN model that jointly de-
tects and localizes the FDIAs in a few milliseconds. The
proposed architecture efﬁciently predicts the presence of
the attack for the whole grid and for each bus separately.
To fairly compare the proposed method with the cur-
rently available approaches, we implement the other data-
driven models in the literature and compare our detection
and localization results with them. Hyperparameters of
the models are tuned systematically using the Bayesian
hyper-parameter optimization technique.
To adequately assess the localization performance, we
evaluate the localization results, using both sample wise
and node wise comparisons. For instance, although sam-
ple wise localization could yield fairly high accuracy for
the entire system, the same set of nodes could be missed
or falsely alarmed at each sample. If revealed, these nodes
could be easily targeted by the intruders.
To better analyze and visualize the multidimensional
data processed by the implemented models, we embed
them into a two dimensional (2D) space using the t-
SNE algorithm [25]. By visually inspecting the output
of models’ intermediate layers in 2D, it is veriﬁed that
the ARMA GNN based model preserves the structure of
the data, and hence gives better detection performance.

The rest of this paper is organized as follows. Section II
presents the problem formulation. Section III proposes the
approach for the joint detection and localization of FDIA.
Numerical results are presented in Section IV. Section V
ﬁnally concludes the paper.

II. PROBLEM FORMULATION

The system state x (Vi and θi at each bus i) is estimated
using the PSSE module. The PSSE iteratively solves the op-
timization problem in (1) phrased as a weighted least squares
estimation (WLSE) using the complex power measurements z
collected in noisy conditions by RTUs and PMUs:

ˆx = min

(z

x

h(x))T R−

1(z

−

h(x)),

−

(1)

where R represents measurements’ error covariance matrix
and z includes Pi, Qi, Pij, and Qij.

FDIA aim to deceive the PSSE by deliberately injecting
false data a into some of the original measurements zo in
such a way that the state vector x converges to another point
in the state space of the system. Formally,

zo = h(ˆx), za = zo + a = h(ˇx)

(2)

which means if an adversary can design a = h(ˇx)
h(ˆx),
s/he can change the system state from ˆx to ˇx without being
detected by the LNRT based traditional BDD systems.

−

In general, an adversary tries to change speciﬁc measure-
ment(s) in the power system in order to maximize the damage
to the grid and at the same time minimize the probability
of being detected. To this end, s/he alters some other mea-
surement(s) connected to the targeted meter(s) since each x
relates to multiple z through z = h(x). In order to reﬂect this
constraint and to be realistic, we assume that an adversary
and crafts the
targets a speciﬁc area of grid represented by
attack vector a by changing the measurements denoted by
Tz
Tx in this area.
to spoil the state variables represented by

T

Fig. 2. Visualization of an attack and its prediction on the example IEEE
14 bus system where the actual T = {4, 7, 9, 10, 14} and predicted
ˆT = {4, 7, 9, 13, 14} areas are enclosed with the solid red and dashed
green surfaces, respectively. True positives T ∩ ˆT = {4, 7, 9, 14}, false
positives T (cid:48) ∩ ˆT = {13}, false negatives T ∩ ˆT (cid:48) = {10}, and true negatives
T (cid:48) ∩ ˆT (cid:48) = {1, 2, 3, 5, 8, 6, 11, 12} are represented by yellow circles, green
triangles, red squares, and black circles, respectively. In this example, the
presence of the attack is correctly predicted. Nevertheless, attack to the bus
10 is missed and bus 13 is falsely alarmed even though it is not under attack.

The grid operator, in contrast, aims to detect those attacks
and localize the attacked buses if there are any. Therefore,
we formulate the FDIA detecting and localization problem as
a multi-label classiﬁcation task where each bus has a binary
label indicating the presence of attack with true label 1. We
also reserve an extra binary label for the whole grid to denote
the attack presence with true label 1. Fig. 2 clariﬁes the
proposed multi-label classiﬁcation approach by depicting the
actual and predicted under attack buses for an exemplary attack
on the IEEE 14-bus test system.

III. JOINT DETECTION AND LOCALIZATION OF FDIA

Connected, undirected and weighted graph

having a ﬁnite set of vertices

with

V

|V|

= (

, W )
V
= n, a ﬁnite set of

G

E

,

4

Rn

E

, and a weighted adjacency matrix W

n can be
edges
used to represent the topology of a smart power grid [18]. In
, branches
this representation, buses correspond to vertices
V
and line admittances
and transformers corresponds to edges
R
correspond to W . Similarly, a signal or a function f :
Rn, where the element i
in
of the vector corresponds to a scalar at the vertex i

is represented by a vector f

V →

∈

∈

G

E

×

.

∈ V

A. Spectral Graph Filters

×

×

×

×

∈

Rn

D−

Rn
Rn

1/2W D−

∈
∈
Rn

1/2 = U ΛU T
where D and In

G
1 of matrix U = [u1, . . . , un]

In spectral graph theory, the normalized Laplacian operator
n plays an
L = In
−
n represent
important role for graph
the degree and identity matrices, respectively. The columns
n store the n
ui ∈
orthonormal eigenvector ui and constitute the graph Fourier
n
basis. Diagonal matrix Λ = diag([λ1, . . . , λn])
captures the n eigenvalues representing the graph Fourier fre-
quencies [18]. Analogously to the classical Fourier Transform,
Graph Fourier Transform (GFT) transforms a vertex domain
signal into the spectral domain: the forward and inverse GFT
are deﬁned by ˜X = U T X, and X = U ˜X, where X and
˜X
f denote the vertex and spectral domain signals with
f features at each node, respectively [18]. In fact, X is ﬁltered
by a GF h:

Rn

Rn

∈

∈

×

×

Y = h

∗

X = h(L)X = U h(Λ)U T X

(3)

by ﬁrst converting the vertex domain signal X into the spectral
domain using the forward GFT,
then scaling the Fourier
components by h(Λ) = diag[h(λ1), . . . , h(λn)], and ﬁnally
reverting it back to the vertex domain by the inverse GFT [18].
For example, X, h, and Y may correspond to bus injections
values with high frequency noise, a low pass GF and ﬁltered
bus injections values, respectively in eq. (3). Nonetheless, this
spectral ﬁltering is not spatially localized since each λi is
processed for each node. Besides its computational complexity
is high due to eigenvalue decomposition (EVD) of L and the
matrix multiplications with U and U T .

B. Polynomial Graph Filters

1

−

∈ V

To localize spectral ﬁlters and reduce their complexity, poly-
nomial spatial ﬁlters hP OLY (λ) = (cid:80)K
k=0 akλk are proposed
to approximate the required ﬁlter response [20]. Since only
K-hop neighbors of v are considered to calculate the ﬁlter
response at each v
, they are K-localized. In fact, they
implement the weighted MA ﬁltering in the form of FIR [23].
Chebyshev polynomial approximation [26] is one of the
preferred methods in signal processing due to their fast compu-
tation since they are generated via a recursion and not a convo-
lution [27]. The Chebyshev polynomial of the ﬁrst kind Tk(x)
can be computed recursively Tk(x) = 2xTk
2(x)
where T0(x) = 1 and T1(x) = x [26]. Thus, a ﬁlter h
can be approximated by a truncated expansion of Chebyshev
polynomials Tk, up to order K

1. So, X can be ﬁltered:

1(x)

Tk

−

−

−

−

Y = h

∗

X = h(L)X =

K
1
(cid:88)
−

k=0

akTk( ˜L)X

(4)

1211121314345678910TˆTTPFPFNTN×

∈

Rn

where Tk( ˜L)
n is the Chebyshev polynomial of order
∈
k evaluated at the scaled Laplacian ˜L = 2L/λmax −
In [20]
RK is a vector of Chebyshev coefﬁcients. Full
where a
EVD can be omitted since this operation only requires the
largest eigenvalue λmax which can be efﬁciently approximated
by the power method [28]. Although the MA type Chebyshev
(CHEB) GFs are fast and localized, they often require high-
degree polynomials to capture the graph’s global structure.
In fact,
it restricts their ability to adapt sharp transitions
in the frequency response due to the poor interpolation and
extrapolation capabilities of high degree polynomials [29].

C. Rational Graph Filters

1

−
2

−
2

−

−

(5)

λmin

λmin

b
a˜λn

To circumvent these problems, distributed IIR type ARMA
GFs are proposed in [22], [29]. They better approximate the
sudden changes in the frequency response in comparison with
the FIR type MA GFs due to their rational ﬁlter composition.
A potential building block of K-order ARMA GFs may start
with a ﬁrst order recursive ARMA1 ﬁlter:
Y t+1 = a ˜LY t + bX,
where Y t is the ﬁlter output at iteration t, X is the ﬁl-
ter input, a and b are arbitrary coefﬁcients, and modiﬁed
Laplacian ˜L = λmax
L is a linear translation
In
of L with same eigenvectors as L and shifted eigenvalues
˜λn = λmax
λn relative to those of L. According
to the Theorem (1) in [30], eq. (5) converges regardless of
Y 0 and L values and its frequency response is given by
hARM A1 (˜λn) =
. In fact, eq. (5) provides a useful
−
distributed ﬁlter realization [22]. At each iteration t, each node
i revises its output Y t
cout with a linear combination of
1
,
its input Xi
where cin and cout denote the number of channels in the input
and the output tensors, respectively. It can be implemented as
a NN layer if we unroll the recursion into T ﬁxed iterations:
Y t+1 = ˜LY tα + Xβ + θ,

i ∈
cin and its adjacent nodes’ outputs Y t
j

(6)
Rcout are
Rcin
where α
×
×
2,
trainable weights. Besides, since 0
the modiﬁed Laplacian can be simpliﬁed to ˜L = In
L for
λmin = 0, and λmax = 2 [21]. In Fig. 3, NN implementation
of the ARMA1 block which implements the eq. (6) in T ﬁxed
iterations is depicted. ARMA1’s K-order version ARMAK
ﬁlter can be realized by averaging K parallel ARMA1 ﬁlters
with Y = 1
K which leads to an ARMAK GF with
K
a rational frequency response hARM AK (˜λn) = (cid:80)K
bk
ak ˜λn
with a K
1 and K order polynomials in its numerator and
denominator, respectively. For detailed analysis and justiﬁca-
tions, please refer to [21], [22], [29]–[31].

cout , and θ
λmin ≤

∈
λmax ≤
−

k=1 Y T

cout, β

Rcout

(cid:80)K

Rn

Rn

k=1

−

≤

∈

∈

∈

−

×

−

×

1

D. Frequency Response of Polynomial and Rational GFs

To demonstrate the ARMA GFs better ﬁt sharp changes in
the frequency response compared to that of the CHEB GFs,
we design two ideal GFs in equations (7) and (8) for IEEE
118- and 300-bus test cases, respectively.

h†(λ) =

(cid:40)

1,
0,

λmax

3 < λ < 2λmax

3

otherwise

(7)

5

Fig. 3. NN Implementation of ARMA1 ﬁlter as a building block of ARMAK
layer. In T ﬁxed iterations, an ARMA1 block realizes eq. (6)

h‡(λ) =

(cid:40)

1, λ < λmax
0, otherwise

2

(8)

∈

Then, we investigate the approximating capability of the
ARMA and the CHEB GFs by numerically analyzing their
frequency responses. Note that similar results can be obtained
1
by any other ﬁlters or test cases [22]. Let x, y
×
denote the input and output of a GF h(λ), respectively. Then,
according to eq. (3), empirical frequency response ˜h can
be calculated by ˜h(λi) = uT
i y
i x [29]. Namely, each ˜h(λi)
uT
represents how ui, corresponding to λi, “scales” x to obtain
y.

Rn

In order to obtain ˜h(λi) values, we ﬁrst randomly generated
216 xs for the aforementioned systems from the normal
distribution and ﬁlter them by h† and h‡ using eq. (3) to
obtain ys. Then, a layer of CHEB and ARMA models with no
activation function are trained in batches having 26 samples
of x and y values until
there is no improvement. Next,
˜h(λi) values are calculated for each x, y tuple, averaged for
smooth transitions, and plotted. As seen from Fig. 4, due to
their rational type frequency responses, ARMA GFs are more
ﬂexible to ﬁt sudden changes for a ﬁxed K when compared to
CHEB GFs having polynomial type frequency responses. This
constitutes the main motivation for selecting ARMA GFs for
jointly detecting and localizing the FDIA in power grids.

E. Architecture of the Proposed Joint Detector & Localizer

The proposed joint detector and localizer consists of one
input layer to represent complex bus power injections, L
1
hidden ARMAK layers to extract spatial features, one dense
layer to predict the probability of attack at each node, and one
output layer to return an extra bit to indicate the probability
of attack at the graph level. Its architecture is demonstrated in
Fig. 5 for L = 3 with a small graph having n = 5.

−

∈

∈

Rn

×
Rn

∈
Rn and S

In this multi-layer GNN model, the input tensor [Pi, Qi]
is given by X 0
2, the output tensor of hidden layer l
∈
is denoted by X l
cl , and model outputs are denoted
×
R to indicate the location and the
by Y
presence of the attack, respectively, where cl represents the
L. In particular,
number of channels in layer l for 1
l
Rn
cl−1 as input and
1
while an ARMAK layer takes X l
Rn
produces X l
cl as output in layer l, the dense layer
propagates the information to the whole graph and outputs the
Rn for
probability of the attack at the node level with Y
localization. Finally, the output layer detects the attack at the
R and outputs it with Y . Note
graph level by S = max(Y )

≤
∈

≤
×

∈

∈

×

−

∈

ARMA1t=1˜Lαβθ+t=2˜Lαβθ+t=T˜Lαβθ+...6

As a ﬁrst step, we download 5-minute intervals of the actual
load proﬁle of NYISO for July 2021 and interpolate them
to increase the resolution to 1-minute. Next, we generate a
realistic dataset following the Algorithm 1 in our previous
work [24] for the IEEE 57-, 118-, and 300-bus standard test
cases using 1-minute interval load proﬁle. Namely, for each
timestamp, load values are distributed and scaled to buses
proportional to their initial values, AC power ﬂow algorithms
are executed, and 1% noisy power measurements are saved.

To simulate the FDIA, we implement some of the frequently
used FDIA generation algorithms in the literature such as
data replay attacks (Ar) [32], [33], data scale attacks (As)
[14], [15], and distribution-based (Ad) attacks [37], [38] as
well as our constrained optimization based FDIA (Ao) method
explained thoroughly in [24]. While Ar simply changes a
measurement zi
o with one of its previous values at τ back
in time, As multiply it with a number sampled from a
uniform distribution (
) between 0.9 and 1.1. In contrast, Ad
mimics the mean (µ) and variance (σ2) of the measurement
by sampling from a normal distribution (
) and Ao solves a
constrained optimization problem to maximize the changes in
state variables while minimizing the changes in measurements.
Implemented attacks types, their formulations and some works

N

U

TABLE I
IMPLEMENTED FDIAS

FDIA type

formulation

optimization-based (Ao)
data replay (Ar)
distribution-based (Ad)
data scale (As)

Eq. (5) in [24]
a(t) = zi
zi
o(t − τ )
zi
o), σ2(zi
a(t) = N (µ(zi
a(t) = U (0.9, 1.1) × zi
zi

o))
o(t)

used in

[24]
[32], [33]
[37], [38]
[14], [15]

that have utilized them are given in Table I.

We shufﬂed the whole data to eliminate the seasonality,
standardized it with a zero mean and a standard deviation
of one to have a faster and smoother learning process, and
split it into three sections: 2/3 for training, 1/6 for validating
and hyper-parameter tuning, and 1/6 for testing the proposed
models. In order to evaluate the performance of our method
under unseen attack types, we arbitrarily selected Ao and
Ad and included them in the training and validation splits.
Test split, in contrast, includes all of the four FDIA methods
given in Table I. The number of honest samples are equalized
with the number of malicious samples in each split to have
a balanced classiﬁcation problem as can be seen from Table
24 hour/day
II. The ﬁnal dataset assumes 60 samples/hour
24 day = 34560 samples which consist of complex power
×
measurements, complex bus voltages, and n + 1 binary labels
to indicate the true labels for each bus and the whole grid at
each timestamp.

×

TABLE II
NUMBER OF SAMPLES IN EACH SPLIT

split

non-attacked Ao Ar Ad As

total

train
validation
test

11520
2880
2880

5760
1440
720

0
0
720

5760
1440
720

0
0
720

23040
5760
5760

(a) an ideal bandpass h† for IEEE-118.

(b) an ideal lowpass h‡ for IEEE-300.

Fig. 4. Empirical frequency responses of CHEB and ARMA GFs when
approximating ideal ﬁlters h† and h‡ applied on IEEE 118- and 300-bus
test systems, respectively. Compared to CHEB, ARMA better approximates
the desired ﬁlter for the same K (e.g. ˜hcheb3 vs ˜harma3 ) and it requires a
lower K for the same level of approximation (e.g. ˜hcheb11 vs ˜harma5 ).

Fig. 5. Architecture of the proposed ARMA GNN based detector and localizer
with three hidden layers where each ARMAK layer consists of K parallel
ARMA1. Each one of the K dashed blocks in an ARMAK layer corresponds
to an ARMA1 block depicted with a dashed block in Fig. 3. While complex
power injections P , Q and predicted attack probabilities Y , S at the node
and graph level are visualized with thick bars at each node, activation and
mean value functions are represented with σ and µ, respectively.

that the last ARMAK layer’s output channel is selected as
one in order to have one feature for each v
. In addition,
ReLU activation is used at the end of each ARMAK layer
to increase the model’s nonlinear modeling ability, whereas
sigmoid is employed to transform the outputs to probabilities.

∈ V

IV. EXPERIMENTAL RESULTS

A. Data Generation

Due to the privacy concerns, there is no preexisting publicly
available dataset to train and evaluate the proposed models
against FDIA. Thus, researches use historical load proﬁles to
mimic the timely deviations of the grids they simulate [14],
[15], [32]–[35]. We take the same approach based on the
historical load proﬁle of NYISO [36] to generate our dataset.

00.511.52λh†˜hcheb3˜hcheb5˜hcheb7˜hcheb9˜hcheb11˜harma3˜harma500.511.52λh†˜hcheb3˜hcheb5˜hcheb7˜hcheb9˜hcheb11˜harma3˜harma5InputPQ12K...µ12K...µARMAKσARMAKσDenseσOutputYmaxSinputlayerlayer1layer2layer3outputlayerB. Feature Selection, Performance Metrics, and Training

k

To be able to rapidly detect and localize the attacks instead
of waiting for Vi and θi values at the output of the PSSE
process, we employ power measurements as input features in
our detectors. From the power measurements, only Pi and Qi
values are fed to the models as seen from the input layer of
Fig. 5 since Pi+jQi = (cid:80)
Ωi Pik+jQik, node features can
represent branch features as summation in their corresponding
set of buses Ωi connected to bus i. Besides, it is experimentally
veriﬁed that utilizing Vi and θi values along with Pi and Qi
does not increase the model performance due to tuples’ high
correlation. PSSE and BDD modules, on the contrary, continue
to receive every available measurement to operate. As for the
to calculate
weighted adjacency matrix we select W =
Ybus
|
˜L and feed the ARMAK layers where Ybus
n denotes
nodal admittance matrix.

|
Rn

∈

×

∈

2

∗

T P

For performance evaluation we use detection rate DR =
T P +F N , false alarm rate F A = F P
T P
F P +T N , and F 1 score F 1 =
2T P +F P +F N , where T P , F P , T N , and F N represent true
positives, false positives, true negatives, and false negatives,
respectively [16]. In addition, to overcome the division by zero
problem when there is no attack at all, we assumed DR = 1,
F A = 0, and F 1 = 1 if all the labels are correctly predicted
as not attacked. Otherwise, even if there is one mismatch, we
assign DR = 0, F A = 1, and F 1 = 0.

All free unknown parameters deﬁned in the model are
computed by a multi-label supervised training using the binary
cross-entropy loss. Training samples are fed into the model
as mini batches of 256 samples with 256 maximum number
of epochs. In addition, we employ early stopping criteria
where 16 epochs are tolerated without any improvement less
4 in the validation set’s cross entropy loss. All the
than e−
implementations were carried out in Python 3.8 using the Pan-
dapower [39], Sklearn [40], t-SNE [25], and Tensorﬂow [41]
libraries on Intel i9-8950 HK CPU 2.90GHz with NVIDIA
GeForce RTX 2070 GPU.

C. Joint Detection and Localization Results

Since we take a data-driven approach in this work, we im-
plement other existing data-driven approaches from the litera-
ture to compare with our method. To the best of our knowledge
[15] is the only data-driven approach in the literature in which
authors employ LSTM architecture to localize the FDIA. Thus,
we trained an LSTM model with our dataset
to compare
the performances. In addition, although they are proposed
for detection, we implement other available methods in the
literature suitable for the multi-label classiﬁcation task such
as Decision Tree (DT) [42], K-Nearest Neighbor (KNN) [43],
Multi Layer Perceptron (MLP) [44], Convolutional Neural
Network (CNN) [43], and Chebyshev GNN (CHEB) [24]. We
train, validate and test these models similarly to the proposed
model using our dataset as we do not have access to the data
set of corresponding works.

Model hyper-parameters are tuned with Sklearn [40] and
Keras-tuner [45] Python libraries by using Bayesian optimiza-
tion techniques. Models are trained on the training set and their
hyper-parameters are optimized on the validation set for each

7

TABLE III
OPTIMIZED MODEL HYPER-PARAMETERS.

model

param

DT

KNN

MLP

LSTM

CNN

CHEB

ARMA

criterion
min. split
max. depth
features
algorithm
neighbors
leaf size
p
layers
units
layers
units
layers
units
K
layers
units
K
layers
units
K
iteration

options
{gini, entropy}
{2, 3, . . . , 8}
{1, 2, . . . , 64}
{sqrt, log2}
{ball, kd}
{3, 5, 7, 9}
{4, 5, . . . , 64}
{1, 2, 3, 4}
{1, 2, 3}
{16, 32, 64, 128}
{1, 2, 3}
{16, 32, 64, 128}
{1, 2, 3}
{16, 32, 64, 128}
{2, 3, 4}
{1, 2, 3}
{16, 32, 64, 128}
{2, 3, 4}
{1, 2, 3}
{16, 32, 64, 128}
{2, 3, 4}
{2, 3, 4, 5}

IEEE-57 IEEE-118 IEEE-300

gini
2
60
log2
kd
3
29
2
2
32
3
16
3
32
3
3
64
3
3
16
2
4

entropy
3
64
log2
ball
3
62
1
3
32
3
32
2
128
4
4
32
4
2
16
3
5

entropy
2
64
sqrt
kd
3
58
1
3
128
2
64
3
64
3
3
64
4
3
32
3
5

IEEE test system for 250 trials. Finally, models with optimal
parameters in terms of the validation set performance are saved
and their results are presented for detection and localization.
Table III shows the hyper-parameter set and the optimal hyper-
parameters for each model and test system.

TABLE IV
DETECTION RESULTS IN DR, F A, AND F 1 PERCENTAGES.

System

IEEE-57

IEEE-118

IEEE-300

Metric DR F A F 1 DR F A F 1 DR F A F 1

DT
89.55 5.45 91.84 87.40 8.72 89.13 89.69 9.38 90.11
KNN 19.41 0.07 32.49 30.69 0.00 46.97 16.67 0.00 28.57
MLP
95.07 0.31 97.32 89.20 1.01 93.79 82.74 1.63 89.76
LSTM 98.40 0.24 99.07 96.74 0.10 98.29 94.38 0.03 97.09
CNN 99.79 0.28 99.76 98.47 0.45 99.01 95.28 0.00 97.58
CHEB 99.65 0.28 99.69 97.99 0.45 98.76 99.79 0.73 99.53
ARMA 99.90 0.28 99.81 99.13 0.24 99.44 99.97 0.14 99.91

In Table IV, detection performance of the optimized models
for each test system is tabulated as percentages. For all test
systems, although KNN yields the best F A rate, its F 1 scores
are not satisfactory since it gives the lowest DR. ARMA, in
contrast, reaches the best F 1 scores with 99.81%, 99.44%,
and 99.91%, due to its high DR with 99.90%, 99.13%, and
99.97% and low F A rate with 0.28%, 0.24%, and 0.14%
for 57-, 118-, and 300-bus systems, respectively. Although
detection results are close to each other in terms of F 1 scores
for some models such as CHEB and ARMA, CHEB yields
almost two and ﬁve times F A rate for IEEE 118- and 300-
bus systems, respectively. Nevertheless, detection considers the
attacks at the grid level and any intrusion to a bus in the grid is
regarded as an attack. Thus, bus level localization is required
to determine the exact place of the attack.

Since localization is a multi-label classiﬁcation problem,
we evaluate it in both possible ways: (i) sample-wise (SW)

evaluation yields b metrics where each one of b samples at
a ﬁxed time-step is treated individually along the buses, and
(ii) node-wise (NW) evaluation yields n metrics where each
one of n buses is evaluated separately along the samples.
Therefore, in order to better assess the models, we visualize
and analyze the distributions of SW and NW localization
results in F 1 percentages by box plots and ratio of items
satisfying some speciﬁed thresholds. Box plots helps us to
visualize the distribution by drawing ﬁrst (Q1, 25th percentile),
second (Q2, 50th percentile or median), and third (Q3, 75th
Q1))
percentile) quartiles, lower (LW = Q1 −
×
and upper (U W = Q3+1.5
Q1)) whiskers and outliers
(Q3−
[46]. In addition, the ratio of the samples or buses satisfying
some thresholds provides quantiﬁable metrics to assess model
performances. For instance, the percentage of samples (buses)
having F 1
95% in SW (NW) evaluation can be
used to measure the ratio of “unacceptable” and “acceptable”
samples in the distributions, respectively.

(Q3 −

5% or F 1

1.5

≤

≥

×

SW localization results are given in Fig. 6. Since the
distributions are highly left skewed, the median (Q2) values
can overlap with Q3. In speciﬁc, Q2 = Q3 = U W = 100%
except the MLP for IEEE-300 and DT for all systems. This
is not surprising because 50% of the samples are not attacked
and it is relatively easy to predict them as not attacked for each
bus. Q1 and LW , in contrast, vary for each model and test
system. For example, LW = Q1 = 0 in all test systems for
KNN model which shows that F 1 = 0% for more than 1/4 of
the samples for that model. Although DT yields better results
compared to KNN, its results are unsatisfactory: its Q1 values
are 69.39%, 63.16%, and 63.33%, for 57-, 118-and 300-bus
test systems, respectively. Models from the NN family better
localize the attacks compared to the classical ML approaches.
For example, their Q1 values are greater than 79.74% for
all
least 3/4 of the samples,
in at
attacked buses are correctly labeled with F 1 score deviating
between 79.74% and 100%. To better compare the model
performances, the percentages of the samples having F 1
5%
and F 1
95% are given in Fig. 6d for each model and test
system. ARMA gives the best results in all test cases: while
5% are calculated as 0.21%,
the sample percentages for F 1
0.56%, and 0.10%, sample percentages with F 1
95% are
measured as 79.53%, 83.00%, and 79.03% for IEEE 57-,
118-, and 300-bus test systems, respectively. Its “acceptable”
95%) percentages are 5.64%, 8.56%, and 10.07%
(F 1
greater than the second best model CHEB in SW localization,
for IEEE 57-, 118-, and 300-bus test cases, respectively.

test systems. Namely,

≥

≤

≥

≥

≤

In Fig. 7, the distribution of F 1 scores for NW evaluation
is depicted. Due to the largely left skewed distributions,
the median (Q2) values may overlap with Q3. Specifally,
Q3 = 100% for all the models and systems, and Q2 = 100%
for all the models in IEEE-118. Similar to the SW evaluation,
performance of DT and KNN is poor: their Q1 values deviate
between 24.19% and 64.86%. MLP, LSTM, and CNN provide
better results compared to DT and KNN. Nevertheless, they
are subject to some outliers at 0% which means there are
some buses that are always mislabeled at each timestamp.
The only model that can localize the FDIA for each bus
with at least 80% F 1 score is ARMA. Namely, for all the

8

(a) IEEE-57. Q2 = 100% except DT, Q3 = 100% for all.

(b) IEEE-118. Q2 = 100% except DT, Q3 = 100% for all.

(c) IEEE-300. Q2 = 100% except DT and MLP, Q3 = 100% for all.

(d) Sample percentages having F 1 ≤ 5% and F 1 ≥ 95%.

Fig. 6. Distribution of F 1 scores for sample wise evaluation of localization.

≤

≥

5% and F 1

test systems, the ARMA model can determine the location
of an FDIA attack for all buses with F 1 score greater than
80%. Fig. 7d presents the percentages of buses satisfying
95% levels. For all test systems, only
F 1
5% success level which
ARMA model has 0% with F 1
means only ARMA model doesn’t yield any “unacceptable”
bus localization performance. In comparison, one bus in IEEE
118- and 5 buses in IEEE 300-bus systems always have F 1
score less than 5% in all timestamps for the second best CHEB
model. For the F 1
95% threshold, only ARMA model can
surpass the 70% level for each test systems and it outperforms
the second best model CHEB by 8.78%, 11.87%, and 14.67%
for the 95% F 1 threshold level in NW localization for IEEE
57-, 118-, and 300-bus systems, respectively.

≤

≥

0102030405060708090100F1%ARMACHEBCNNLSTMMLPKNNDT0102030405060708090100F1%ARMACHEBCNNLSTMMLPKNNDT0102030405060708090100F1%ARMACHEBCNNLSTMMLPKNNDTSystemIEEE-57IEEE-118IEEE-300F1Qx≤5≥95≤5≥95≤5≥95DT8.0050.4311.1850.0510.2849.18KNN40.3551.4134.6557.7441.6853.07MLP2.6462.886.2259.7910.4354.29LSTM0.9466.821.7269.573.0060.59CNN0.2464.950.9960.822.5760.38CHEB0.3173.891.2374.440.4768.96ARMA0.2179.530.5683.000.1079.039

better results compared to the KNN. Nevertheless, its highly
complex recurrent architecture can delay its output almost 0.1
second for IEEE-300, which may limit its application in a
real time scenario. All the other models including DT, MLP,
CNN, CHEB, and ARMA provide reasonable detection times
for a real time application: for all test system their response
time is less than 3 milliseconds. Among them DT provides
the best detection times with values under 0.7 milliseconds;
yet, its poor detection and localization performance hinders its
suitability as a reliable method.

E. Visualization of intermediate layers with t-SNE

To compare the proposed model with the existing ap-
proaches, we analyze and visualize the multidimensional data
processed by the intermediate layers of the proposed models.
Nevertheless, the high dimensionality of the data severely lim-
its examining them. Besides, examining a speciﬁc feature of a
bus does not provide enough information to fully comprehend
how the model processes the grid. Thus, we transform the layer
outputs by using the t-distributed stochastic neighbor embed-
ding (t-SNE), which is a nonlinear dimensionality reduction
technique to visualize the high dimensional data in two or
three dimensional spaces [25]. By iteratively minimizing the
Kullback-Leibler divergence between the probability distribu-
tions representing the sample similarities in the original and
mapped spaces, it projects samples into the low dimensional
space. Thus, it preserves the structure of the data and enables
visualization of the data in a lower dimension [25].

×

∈

R300

Due to space limitations, only models trained for the IEEE-
300 bus system are analyzed in two dimensions (2D) with
test data having 5, 760 samples. Embedding of input data
2 is plotted in Fig. 8a, where a dominat-
[P, Q] = X
ing daily proﬁle can be seen from the smooth transition from
the lower left to the upper right samples depicted with green
stars (attacked) and black circles (non-attacked). Moreover, the
close proximity between attacked and non-attacked samples
indicates that the attacked samples preserve similarity to their
non-attacked samples. Fig. 8b shows the embedding of true
R300 where non-attacked samples clustered in the
output Y
middle and attacked samples are scattered around them. This
is not surprising since non-attacked samples are all formed
from 0s and attacked samples include 1s in their corresponding
labels to indicate the attacked bus.

∈

(a) IEEE-57. Q3 = 100% for all.

(b) IEEE-118. Q2 = Q3 = 100% for all.

(c) IEEE-300. Q3 = 100% for all.

(d) Bus percentages having F 1 ≤ 5% and F 1 ≥ 95%.

Fig. 7. Distribution of F 1 scores for node wise evaluation of localization.

D. Joint Detection and Localization Times

We measure the elapsed time during model’s joint detection
and localization process for each sample in the test set,
calculate the mean values, and tabulate them in Table V.
Clearly, detection times of KNN are not satisfactory: it can

TABLE V
JOINT DETECTION AND LOCALIZATION TIMES IN MILLISECONDS.

model

DT KNN MLP LSTM CNN CHEB ARMA

IEEE-57
0.18 147.78
IEEE-118 0.29 327.62
IEEE-300 0.69 836.52

1.42
1.44
1.50

16.85
35.19
99.78

2.64
2.67
2.73

2.24
2.54
2.71

2.76
2.81
2.94

take more than 0.8 second to respond. It is due to the fact
in KNN each new sample has to be compared with
that
others for proximity calculation. LSTM, in contrast, provides

(a) Embedded X in 2D

(b) Embedded Y in 2D

Fig. 8. Embedded input and output data for IEEE-300 bus system where
attacked and non-attacked samples are depicted with green stars and black
circles, respectively.

0102030405060708090100F1%ARMACHEBCNNLSTMMLPKNNDT0102030405060708090100F1%ARMACHEBCNNLSTMMLPKNNDT0102030405060708090100F1%ARMACHEBCNNLSTMMLPKNNDTSystemIEEE-57IEEE-118IEEE-300F1Qx≤5≥95≤5≥95≤5≥95DT0.0038.601.6952.540.6744.00KNN0.0038.601.6952.540.6744.00MLP0.0040.350.8553.390.6744.00LSTM0.0050.880.8555.0873.3344.00CNN0.0050.880.0066.100.6744.33CHEB0.0061.400.8569.491.6757.00ARMA0.0070.180.0081.360.0071.67Fig. 9 demonstrates the embedding of layer l’s output where
each model takes X (Fig. 8a) as input, transforms it in the
hidden layers, and tries to predict Y (Fig. 8b) as output.
The number of TP (green stars), FP (blue diamonds), FN
(red squares), and TN (black circles) samples are given under
the model name for easy reference. MLP clearly falls behind
the other approaches due to the FNs scattered all around.
For instance, unlike other approaches, MLP misses easily
detectable attacked samples in l2 very close to the TP cluster
and it maps many FNs nearby to the TNs placed at the lower
part of its last layer. LSTM, in contrast to the MLP, reduces
FN and FP samples. However, in l2, it falsely maps many
attacked samples adjacent to the non-attacked samples which
yields a high number of FNs. In addition, like the MLP, it
falsely predicts multiple non-attacked clusters in its ﬁnal layer.

Contrarily, CNN is one of the best models in terms of
FP number. Yet,
it “destroys” the structure of data in l1
which brings a signiﬁcant number of FNs. We believe it is
due to the fact that CNN tries to capture the correlations of
non-Euclidean data in an Euclidean space and samples from
different classes may look the same in that space. Due to
their inherent graph architecture, CHEB and ARMA yield
better results since they both consider the “structure” of the
data within X in their graph convolutional layers. However,
CHEB misses 5 more attacks and yields more than 5 times
FP samples compared to the ARMA. For instance, many
non-attacked samples in l4 are falsely regarded as an attack
due to close mapping to an attacked cluster. Conversely, our
proposed model gives only 4 FP and 1 FN due to its rational
graph convolutional ﬁlters that provide more ﬂexible frequency
responses. Note that no sample is mapped in the vicinity
of attacked samples unlike the other models. Besides, only
ARMA outputs a highly similar pattern to Y : a non-attacked
sample cluster in the center and attacked samples distributed
around it.

F. Discussions & Theoretical Comparisons

As indicated earlier, two main approaches have been pro-
posed for detecting and localizing the FDIAs: model-based and
data driven approaches [8]. Model-based approaches such as
those in [10]–[14] do not require any historical datasets. Nev-
ertheless, scalability, manual threshold optimization process,
detection lags, model complexity, and localization resolution
could hinder the usability of them for real applications. For
instance, results are not published in [12] and localization
could only be done at the cluster level in [10]. Detection
times are larger than a second in [11] and [13] for small
test systems having 12 and 36 buses, respectively. In their
model-based detectors, authors of [14] utilize GSP techniques
such as Local Smoothness (LS) and Vertex-Frequency Energy
Distribution (VFED). Nonetheless, they evaluate their method
with an easily detectable attack by the classical LNRT based
BDD methods which can conceal the actual performance of
the the model. Speciﬁcally, they simulate the FDIAs using
a(t) = zi
zi
is a
0, 1
∼ {
}
is an uniform
binary random variable (r.v.), u

1)d.a.u.range where d
[0, 1]

o(t) + (

−

∼ U

10

min(zi

r.v., range = max(zi
o) and a is scaler for the
o)
−
(µo, σ2
if zi
o), expected values
attack. For instance,
o ∼ N
of the attacked data distribution become E[µa] = µo, and
E[σa] = 6aσo due to the product properties of uniform and
normal distributions, where µo, σo and µa, σa tuples represent
the mean and standard deviation of original and attacked data,
respectively. The accuracy of localization for IEEE 118-bus
test system when a = 4, which makes E[σa] = 24σo, are
85% and 91% for the LS and VFED techniques, respectively.
These high accuries are not realistic since the scaler a plays
a signiﬁcant role in simulation process.

The data-driven methods, in contrast, present a better perfor-
mance since historical datasets are growing and the modeling
capability of these algorithms is being increased [8], [9].
For example, in their data-driven method in [15] researchers
employ an LSTM model for each measurement in a 5-bus test
system in which only one bus is under attack at a time to
detect and localize the point-wise FDIAs. They report greater
than 90% accuracy for detection and localization of random,
ramp, and scale attacks for low, medium, and high attack
levels. However, the capability of this method for detection
and localization of different FDIAs in large test cases has not
been investigated. Besides, assigning an independent model to
each measurement has two major drawbacks: (i) overall model
complexity increases severely, and (ii) spatial correlations of
the measurements are ignored totally.

In data-driven approaches, compatibility between the struc-
ture of collected data and architecture of the data-driven model
is the primary factor on the performance of the model. For
instance, DT, KNN, or MLP architectures could be better
suited for a dataset having uncorrelated features from different
spaces. Similarly, an RNN architecture might be more applica-
ble to model the recurrent relations in a natural language data.
A CNN architecture, in contrast, could be more favorable than
GNN for an image data where pixel locality is well modeled in
2D Euclidean space. However, as demonstrated with Fig. 1a,
spatial correlations in power measurements data can only be
captured in a non-Euclidean space dictated by the topology
of the grid. For instance, if we had a hypothetical power grid
like in Fig. 1a, a CNN architecture could have comparable
performances with ARMA. Nonetheless, for a power grid
data collected from graph type structure, a GNN is more
advantageous than other architectures as can be seen from the
detection results in Table IV and the localization distributions
in Figs. 6 and 7. As for the GNN family, ARMA outperforms
CHEB due to the fact that rational GFs implemented using the
ARMA architecture provide more ﬂexible frequency responses
compared to the polynomial ﬁlters such as CHEB [29].

It

the
is observed from our extensive experiments that
proposed ARMA based model performs better compared to
other models for larger test cases. As an illustration, for the
95% F 1 threshold level, it outperforms the second best model
CHEB by 5.64%, 8.56%, and 10.07% in SW localization and
by 8.78%, 11.87%, and 14.67% in NW localization for IEEE
57-, 118-, and 300-bus systems, respectively. This difference
is due to the fact that in larger and denser graphs, (i) the
spatial correlation between adjacent measurements becomes
more dominant compared to the global correlations and (ii)

l

MLP
2383, 47, 497, 2833

LSTM
2718, 1, 162, 2879

CNN
2744, 0, 136, 2880

CHEB
2874, 21, 6, 2859

ARMA
2879, 4, 1, 2876

11

l1

l2

l3

l4

Fig. 9.
t-SNE embedding of model’s layers to visualize the attack detection where true input and output data are given in Fig. 8. For each model and each
layer l, output of the model is embedded in 2D using t-SNE. Since t-SNE preserves the structure of the high dimensional data, models’ transformation can be
visualized and compared in a lower dimension, such as 2D. Note that due to its topology aware ARMA graph ﬁltering, the proposed model better classiﬁes
samples by converging to the true output depicted in Fig. 8b. As a consequence, it yields the minimum number of FP and FN compared to other models.

ARMA GFs better adapt to abrupt changes in the spectral
domain compared to the polynomial ones.

As stated before, the output of each vertex v only depends
on its K-hop neighbors for a K-order polynomial GF. In
other words, the output of v is independent of the vertices
beyond the K-hop neighbors for a K-order FIR GF [22].
Thus, to capture the global characteristics of the graph, an
FIR GF requires “high” order spectral response as can be
seen from Fig. 4. Nevertheless, due to the poor interpolation
and extrapolation capabilities of the high order polynomials,
it becomes sensitive to variations and may overﬁt
to the
training data [21]. To verify this characteristic, we ﬁx the other
parameters of CHEB GF at their optimal values tabulated in
Table III and train a CHEB model for the IEEE 300-bus test
system for each K
. FDIA detection results in
terms of F 1% are depicted in Fig. 10. Clearly, increasing
K beyond a certain point makes the model susceptible to
variations such as noise, and thus, it can degrade the test
set performance. Note that similar conclusion can also be
corroborated for the localization results.

5, 7, 9, 11
}

∈ {

Bus level localization is a multi-label classiﬁcation task
and should be evaluated accordingly. Besides, performance
metrics can cause inaccurate or misleading outcomes when

Fig. 10. Detection performance vs. ﬁlter order of CHEB models for IEEE
300-bus system. Optimal results are obtained at K = 4 as given in Table III.

they are not interpreted correctly. Namely, missing an attack
(FN) could be much more severe than a false alarm (FP) when
dealing with FDIAs due to their consequences. An example
of localization results for a hypothetical model is given in
Table VI with 4 samples in rows and 5 buses in columns
where TP, FP, FN, and TN samples are highlighted with green,
blue, red, and black colors, respectively. In addition, SW and
NW localization results are given at the end of each row and
T P +T N +F P +F N and
columns in terms of accuracy ACC =
F 1 percentages. The ACCsw is not a reliable metric since it
can not properly take into account the distribution of errors.

T P +T N

119754397989910097.4897.8898.3499.0799.5399.11KF1%TABLE VI
SW AND NW LOCALIZATION EXAMPLE IN ACC% AND F 1%

n1 n2 n3 n4 n5 ACCsw F 1sw

s1
s2
s3
s4

tn
tn
tn
tp

ACCnw 100

F 1nw

100

fn
fn
fn
fn

0

0

tn
tn
fp
tp

tn
tn
tn
fp

tn
tn
tp
tp

75 75 100

66

0

100

80
80
60
60

0
0
50
75

For instance, although ACCsw shows high accuracy for all
the samples, it does not have any mechanism to mirror the
faults at n2 which can have serious consequences for the
power system. Comparing F 1 with ACC reveals that F 1 has
a better mechanism to evaluate the accuracy of the model. For
instance, the ACCsw = 60% for s3 and s4 since they have
the same number of falsely predicted samples. F 1sw metric, in
contrast, yields 50% for s3 and 75% for s4 since s4 includes 1
more TP compared to the s3. Since our focus is to determine
the localization of FDIAs, then F 1 is the proper candidate to
evaluate the accuracy of the model. The result and discussion
reveals the supremacy of our model compared to DT, MLP,
RNN, CNN, and CHEB models in terms of detection and
localization of FDIAs.

V. CONCLUSION
This work proposed a GNN based model by integrat-
ing the underlying graph topology of the grid and spatial
correlations of its measurement data to jointly detect and
localize the FDIAs in power systems while the full AC power
ﬂow equations are employed to address the physics of the
network. Adopting IIR type ARMA GFs in its hidden layers,
the proposed model is more ﬂexible in frequency response
compared to FIR type polynomial GFs, e.g., CHEB thanks to
their rational type ﬁlter composition. Although our algorithm
has better detection and localization performance compared
to the state of the art CHEB model [24] in the literature,
the improvement rate for localization is much higher than
detection. Simulations performed on various standard test
systems conﬁrm that the performance of the proposed model
in detecting FDIA exceeds the performance of CHEB model
by 0.12%, 0.68%, and 0.38% for IEEE 57-, 118-, and 300-
bus, respectively. The proposed model also outperforms the
CHEB model in localizing the attacks (i.e., 95% F 1 threshold
level) by 5.64%, 8.56%, and 10.07% in SW localization and
by 8.78%, 11.87%, and 14.67% in NW localization for the
same above-mentioned test systems, respectively. Furthermore,
visualizing the intermediate layers for different approaches
including those in literature corroborates the supremacy of the
proposed model in detecting FDIA.

REFERENCES

[1] X. Yu and Y. Xue, “Smart grids: A cyber–physical systems perspective,”

Proceedings of the IEEE, vol. 104, no. 5, pp. 1058–1070, 2016.

[2] K. R. Davis, K. L. Morrow, R. Bobba, and E. Heine, “Power ﬂow cyber
attacks and perturbation-based defense,” in 2012 IEEE Third Interna-
tional Conference on Smart Grid Communications (SmartGridComm).
IEEE, 2012, pp. 342–347.

12

[3] S. Sridhar, A. Hahn, and M. Govindarasu, “Cyber–physical system
security for the electric power grid,” Proceedings of the IEEE, vol. 100,
no. 1, pp. 210–224, 2011.

[4] A. Abur and A. Exp´osito, Power System State Estimation: The-
ory and Implementation, ser. Power Engineering (Willis).
CRC
Press, 2004. [Online]. Available: https://books.google.com/books?id=
NQhbtFC6 40C

[5] G. B. Giannakis, V. Kekatos, N. Gatsis, S.-J. Kim, H. Zhu, and B. F.
Wollenberg, “Monitoring and optimization for power grids: A signal
processing perspective,” IEEE Signal Processing Magazine, vol. 30,
no. 5, pp. 107–128, 2013.

[6] G. Liang, J. Zhao, F. Luo, S. R. Weller, and Z. Y. Dong, “A review
of false data injection attacks against modern power systems,” IEEE
Transactions on Smart Grid, vol. 8, no. 4, pp. 1630–1638, 2016.
[7] Y. Liu, P. Ning, and M. K. Reiter, “False data injection attacks against
state estimation in electric power grids,” ACM Transactions on Informa-
tion and System Security (TISSEC), vol. 14, no. 1, pp. 1–33, 2011.
[8] A. S. Musleh, G. Chen, and Z. Y. Dong, “A survey on the detection algo-
rithms for false data injection attacks in smart grids,” IEEE Transactions
on Smart Grid, vol. 11, no. 3, pp. 2218–2234, 2019.

[9] A. Sayghe, Y. Hu, I. Zografopoulos, X. Liu, R. G. Dutta, Y. Jin, and
C. Konstantinou, “Survey of machine learning methods for detecting
false data injection attacks in power systems,” IET Smart Grid, 2020.

[10] T. R. Nudell, S. Nabavi, and A. Chakrabortty, “A real-time attack
localization algorithm for large power system networks using graph-
theoretic techniques,” IEEE Transactions on Smart Grid, vol. 6, no. 5,
pp. 2551–2559, 2015.

[11] M. Khalaf, A. Youssef, and E. El-Saadany, “Joint detection and mitiga-
tion of false data injection attacks in agc systems,” IEEE Transactions
on Smart Grid, vol. 10, no. 5, pp. 4985–4995, 2018.

[12] E. Drayer and T. Routtenberg, “Cyber attack localization in smart grids
by graph modulation (brief announcement),” in International Symposium
on Cyber Security Cryptography and Machine Learning.
Springer,
2019, pp. 97–100.

[13] X. Luo, Y. Li, X. Wang, and X. Guan, “Interval observer-based detection
and localization against false data injection attack in smart grids,” IEEE
Internet of Things Journal, vol. 8, no. 2, pp. 657–671, 2020.

[14] M. A. Hasnat and M. Rahnamay-Naeini, “Detection and locating cyber
and physical stresses in smart grids using graph signal processing,” arXiv
preprint arXiv:2006.06095, 2020.

[15] A. Jevtic, F. Zhang, Q. Li, and M. Ilic, “Physics-and learning-based
detection and localization of false data injections in automatic generation
control,” IFAC-PapersOnLine, vol. 51, no. 28, pp. 702–707, 2018.
[16] C. M. Bishop, Pattern Recognition and Machine Learning (Information
Science and Statistics). Berlin, Heidelberg: Springer-Verlag, 2006.
[17] Z. Wu, S. Pan, F. Chen, G. Long, C. Zhang, and S. Y. Philip, “A
comprehensive survey on graph neural networks,” IEEE transactions on
neural networks and learning systems, vol. 32, no. 1, pp. 4–24, 2020.
[18] A. Ortega, P. Frossard, J. Kovaˇcevi´c, J. M. Moura, and P. Vandergheynst,
“Graph signal processing: Overview, challenges, and applications,” Pro-
ceedings of the IEEE, vol. 106, no. 5, pp. 808–828, 2018.

[19] D. I. Shuman, S. K. Narang, P. Frossard, A. Ortega, and P. Van-
dergheynst, “The emerging ﬁeld of signal processing on graphs: Ex-
tending high-dimensional data analysis to networks and other irregular
domains,” IEEE signal processing magazine, vol. 30, no. 3, pp. 83–98,
2013.

[20] M. Defferrard, X. Bresson, and P. Vandergheynst, “Convolutional neural
networks on graphs with fast localized spectral ﬁltering,” in Advances
in Neural Information Processing Systems (NIPS), 2016.

[21] F. M. Bianchi, D. Grattarola, L. Livi, and C. Alippi, “Graph neural
networks with convolutional arma ﬁlters,” IEEE Transactions on Pattern
Analysis and Machine Intelligence, 2021.

[22] X. Shi, H. Feng, M. Zhai, T. Yang, and B. Hu, “Inﬁnite impulse response
graph ﬁlters in wireless sensor networks,” IEEE Signal Processing
Letters, vol. 22, no. 8, pp. 1113–1117, 2015.

[23] N. Tremblay, P. Gonc¸alves, and P. Borgnat, “Design of graph ﬁlters and
Elsevier,

ﬁlterbanks,” in Cooperative and Graph Signal Processing.
2018, pp. 299–324.

[24] O. Boyaci, A. Umunnakwe, A. Sahu, M. R. Narimani, M. Ismail,
K. Davis, and E. Serpedin, “Graph neural networks based detection
of stealth false data injection attacks in smart grids,” arXiv preprint
arXiv:2104.02012, 2021.

[25] L. v. d. Maaten and G. Hinton, “Visualizing data using t-sne,” Journal

of machine learning research, vol. 9, no. Nov, pp. 2579–2605, 2008.

[26] J. C. Mason and D. C. Handscomb, Chebyshev polynomials.

CRC

press, 2002.

[27] S. W. Smith et al., The scientist and engineer’s guide to digital signal
processing. California Technical Pub. San Diego, 1997, vol. 14.
[28] H. F¨ollmer and U. K¨uchler, “Richard von mises,” in Mathematics in

Berlin. Springer, 1998, pp. 111–116.

[29] A. Loukas, A. Simonetto, and G. Leus, “Distributed autoregressive
moving average graph ﬁlters,” IEEE Signal Processing Letters, vol. 22,
no. 11, pp. 1931–1935, 2015.

[30] A. Loukas, M. Zuniga, M. Woehrle, M. Cattani, and K. Langen-
doen, “Think globally, act locally: On the reshaping of information
landscapes,” in Proceedings of the 12th international conference on
Information processing in sensor networks, 2013, pp. 265–276.
[31] E. Isuﬁ, A. Loukas, A. Simonetto, and G. Leus, “Autoregressive mov-
ing average graph ﬁltering,” IEEE Transactions on Signal Processing,
vol. 65, no. 2, pp. 274–288, 2016.

[32] J. Zhao, J. Wang, and L. Yin, “Detection and control against replay
attacks in smart grid,” in 2016 12th International Conference on Com-
putational Intelligence and Security (CIS).
IEEE, 2016, pp. 624–627.
[33] G. Chaojun, P. Jirutitijaroen, and M. Motani, “Detecting false data
injection attacks in ac state estimation,” IEEE Transactions on Smart
Grid, vol. 6, no. 5, pp. 2476–2483, 2015.

[34] S. Tan, W.-Z. Song, M. Stewart, J. Yang, and L. Tong, “Online data
integrity attacks against real-time electrical market in smart grid,” IEEE
transactions on smart grid, vol. 9, no. 1, pp. 313–322, 2016.

[35] J. Giraldo, A. C´ardenas, and N. Quijano, “Integrity attacks on real-time
pricing in smart grids: impact and countermeasures,” IEEE Transactions
on Smart Grid, vol. 8, no. 5, pp. 2249–2257, 2016.

[36] New York Independent System Operator (NYISO). Actual - historical.

(2021, July 25). [Online]. Available: https://www.nyiso.com/load-data

[37] M. Ozay, I. Esnaola, F. T. Y. Vural, S. R. Kulkarni, and H. V. Poor,
“Machine learning methods for attack detection in the smart grid,” IEEE
transactions on neural networks and learning systems, vol. 27, no. 8,
pp. 1773–1786, 2015.

[38] J. Yan, B. Tang, and H. He, “Detection of false data attacks in smart
grid with supervised learning,” in 2016 International Joint Conference
on Neural Networks (IJCNN).

IEEE, 2016, pp. 1395–1402.

[39] L. Thurner, A. Scheidler, F. Sch¨afer, J.-H. Menke, J. Dollichon, F. Meier,
S. Meinecke, and M. Braun, “pandapower - an open-source python tool
for convenient modeling, analysis, and optimization of electric power
systems,” IEEE Transactions on Power Systems, vol. 33, no. 6, pp. 6510–
6521, 2018.

[40] F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion,
O. Grisel, M. Blondel, P. Prettenhofer, R. Weiss, V. Dubourg et al.,
“Scikit-learn: Machine learning in python,” the Journal of machine
Learning research, vol. 12, pp. 2825–2830, 2011.

[41] M. Abadi, P. Barham, J. Chen, Z. Chen, A. Davis, J. Dean, M. Devin,
S. Ghemawat, G. Irving, M. Isard et al., “Tensorﬂow: A system for large-
scale machine learning,” in 12th {USENIX} symposium on operating
systems design and implementation ({OSDI} 16), 2016, pp. 265–283.

[42] A. Jindal, A. Dua, K. Kaur, M. Singh, N. Kumar, and S. Mishra,
“Decision tree and svm-based data analytics for theft detection in smart
grid,” IEEE Transactions on Industrial Informatics, vol. 12, no. 3, pp.
1005–1016, 2016.

[43] D. Wang, X. Wang, Y. Zhang, and L. Jin, “Detection of power grid
disturbances and cyber-attacks based on machine learning,” Journal of
Information Security and Applications, vol. 46, pp. 42–52, 2019.
[44] Y. Wang, M. M. Amin, J. Fu, and H. B. Moussa, “A novel data analytical
approach for false data injection cyber-physical attack mitigation in
smart grids,” IEEE Access, vol. 5, pp. 26 022–26 033, 2017.

[45] T. O’Malley, E. Bursztein, J. Long, F. Chollet, H. Jin, L. Invernizzi et al.,
“Keras Tuner,” https://github.com/keras-team/keras-tuner, 2019.
[46] J. W. Tukey et al., Exploratory data analysis. Reading, Mass., 1977,

vol. 2.

Osman Boyaci (Student Member, IEEE) received
the B.Sc. (Hons.) degree in electronics engineering
in 2013 and in computer engineering (double major)
in 2013 (Hons.) from Istanbul Technical University,
Istanbul, Turkey. He received the M.Sc. degree in
computer engineering at the same university in 2017.
Currently, he is a Ph.D. candidate at Texas A&M
University working on graph neural network based
cybersecurity in smart grids.

His research interests include machine learning,

artiﬁcial intelligence, and cybersecurity.

13

Mohammad Rasoul Narimani (S’14-M’20) is an
Assistant Professor in the College of Engineering at
Arkansas State University. Before joining Arkansas
State University, he was a postdoc at Texas A&M
University, College Station. He received the B.S.
and M.S. degrees in electrical engineering from the
Razi University and Shiraz University of Technol-
ogy, respectively. He received the Ph.D. in electrical
engineering from Missouri University of Science
& Technology. His research interests are in the
application of optimization techniques to electric

power systems.

Muhammad Ismail (S’10-M’13-SM’17) received
the B.Sc. (Hons.) and M.Sc. degrees in Electrical
Engineering (Electronics and Communications) from
Ain Shams University, Cairo, Egypt, in 2007 and
2009, respectively, and the Ph.D. degree in Electrical
and Computer Engineering from the University of
Waterloo, Waterloo, ON, Canada, in 2013. He is
currently an Assistant Professor with the Department
of Computer Science, Tennessee Tech. University,
Cookeville, TN, USA. He was a co-recipient of the
Best Paper Awards in the IEEE ICC 2014, the IEEE
Globecom 2014, the SGRE 2015, the Green 2016, the Best Conference Paper
Award from the IEEE TCGCN at the IEEE ICC 2019, and IEEE IS 2020.

Katherine R. Davis (S’05-M’12-SM’18) received
the B.S. degree from the University of Texas
atAustin, Austin, TX, USA, in 2007, and the M.S.
and Ph.D. degrees from the University of Illinois at
Urbana-Champaign, Champaign, IL, USA, in 2009
and 2011, respectively, all in electrical engineering.
She is currently anAssistant Professor of Electrical
and Computer Engineering at TAMU.

Dr. Thomas J. Overbye (S’87-M’92-SM’96-F’05)
received B.S., M.S., and Ph.D. degrees in electrical
engineering from the University of Wisconsin Madi-
son, Madison, WI, USA. He is currently with Texas
A&M University where he is a Professor and holder
of the O’Donnell Foundation Chair III.

Dr. Erchin Serpedin is a professor in the Electrical
and Computer Engineering Department at Texas
A&M University in College Station. Dr. Serpedin
is the author of four research monographs, one text-
book, 17 book chapters, 170 journal papers, and 270
conference papers. His current research interests in-
clude signal processing, machine learning, artiﬁcial
intelligence, cyber security, smart grids, and wireless
communications. He served as an associate editor
for more than 12 journals, including journals such
as the IEEE Transactions on Information Theory,
IEEE Transactions on Signal Processing, IEEE Transactions on Communica-
tions, IEEE Signal Processing Letters, IEEE Communications Letters, IEEE
Transactions on Wireless Communications, IEEE Signal Processing Magazine,
and Signal Processing (Elsevier), and as a Technical Chair for six major
conferences. He is an IEEE Fellow.

