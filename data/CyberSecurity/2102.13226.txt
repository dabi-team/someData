Data-Driven Characterization and Detection of
COVID-19 Themed Malicious Websites

Mir Mehedi Ahsan Pritom∗, Kristin M. Schweitzer†, Raymond M. Bateman†, Min Xu‡ and Shouhuai Xu∗
∗Department of Computer Science, University of Texas at San Antonio
†U.S. Army Research Laboratory South - Cyber
‡Mastercard

1
2
0
2

b
e
F
5
2

]

R
C
.
s
c
[

1
v
6
2
2
3
1
.
2
0
1
2
:
v
i
X
r
a

Abstract—COVID-19 has hit hard on the global community,
and organizations are working diligently to cope with the new
norm of “work from home”. However, the volume of remote work
is unprecedented and creates opportunities for cyber attackers
to penetrate home computers. Attackers have been leverag-
ing websites with COVID-19 related names, dubbed COVID-
19 themed malicious websites. These websites mostly contain
false information, fake forms, fraudulent payments, scams, or
malicious payloads to steal sensitive information or infect vic-
tims’ computers. In this paper, we present a data-driven study
on characterizing and detecting COVID-19 themed malicious
websites. Our characterization study shows that attackers are
agile and are deceptively crafty in designing geolocation targeted
websites, often leveraging popular domain registrars and top-
level domains. Our detection study shows that the Random
Forest classiﬁer can detect COVID-19 themed malicious websites
based on the lexical and WHOIS features deﬁned in this paper,
achieving a 98% accuracy and 2.7% false-positive rate.

Index Terms—COVID-19 Cyberattacks, Malicious Websites,

Detection, Defense

I. INTRODUCTION

The COVID-19 pandemic has incurred many new cyber at-
tack vectors. Many of these cyber attacks incorporate COVID-
19 themed factors into phishing, malware, and scamming
schemes for various malicious goals (e.g., monetary beneﬁts,
stealing credentials, stealing credit card numbers, or identity
theft). For example, there is reportedly a 148% increase in
ransomware attacks in March 2020 compared with February
2020 [1], where many attacks are initiated by malicious
websites abusing victims’ trust.

This paper focuses on one emerging attack vector, namely
malicious websites leveraging COVID-19 as a theme or
COVID-19 themed malicious websites [2]. As organizations
incorporate the “work from home” policy, the consequences of
COVID-19 themed malicious websites can be signiﬁcantly am-
pliﬁed because home computers are often more vulnerable to
attack than work computers. During the COVID-19 pandemic,
many people lost their jobs and are affected by mental health
issues, which causes excessive pressures. These pressures may
make average users even more vulnerable to social engineering
attacks waged via COVID-19 themed malicious websites. This
increases the motivation of the importance of understanding
and defending against COVID-19 themed malicious websites,
which is a new problem that has not been studied before in a
systematic way.

Our contributions. In this paper, make the following con-
tributions. First, we propose a methodology for character-
izing and detecting COVID-19 themed malicious websites
through a data-driven approach. To the best of our knowledge,
this is the ﬁrst study on data-driven characterization and
detection of COVID-19 themed malicious websites. Second,
we apply the methodology to speciﬁc datasets to draw the
following insights: (i) some attackers may be incentivized
to use cheaper registrars for registering COVID-19 themed
malicious websites; (ii) attackers often abuse popular top-level
domains for their COVID-19 themed malicious websites; (iii)
attackers are agile in waging the COVID-19 themed malicious
website attack; (iv) attackers are crafty in using COVID-19
themed keywords, and geographical information in creating
COVID-19 themed malicious website domain names; (v) the
small degree of data imbalance does not have any signiﬁcant
impact in the effectiveness of detecting COVID-19 themed
malicious websites; and (vi) COVID-19 themed malicious
website detectors must consider WHOIS features and Random
Forest performs better than K-nearest neighbor, decision tree,
logistic regression, and support vector machine.
Paper outline. The rest of the paper is organized as follows.
Section II explores the related work. Section III explores the
research questions which guide us to characterize and detect
COVID-19 themed malicious websites. Section IV reports the
experiments and results. Section V discuss our weakness and
future research opportunities. Section VI concludes the paper.

II. RELATED WORKS

Although the problem of COVID-19 themed malicious
websites has not been investigated until now, the problem of
malicious websites has been studied in the literature prior to
the COVID-19 pandemic. The problem of detecting malicious
URLs generated by domain generating algorithms has been
investigated in [3]. The problem of detecting phishing websites
has been addressed via various approaches, including: the
descriptive features-based model [4], the lexical and HTML
features-based model [5], the HTML and URL features-based
model [6], and the natural
language processing and word
vector features-based model [7]. The problem of detecting
malicious websites has been addressed via the following ap-
proaches: leveraging application and network layers informa-
tion [8], leveraging image recognition [9], leveraging generic
URL features [10], [11], leveraging character-level embedding

 
 
 
 
 
 
or keyword-based recurrent neural networks [12]–[14], the no-
tion of adversarial malicious website detection [15]. However,
these studies do not consider features pertinent to the COVID-
19 pandemic, which are we leverage. Nevertheless, the present
study fall under the umbrella of cybersecurity data analytics
[16]–[20], which in turn belong to the Cybersecurity Dynamics
framework [21]–[25].

III. METHODOLOGY

Our methodology for data-driven characterization and de-
tection of COVID-19 themed malicious websites is centered
at answering a range of research questions.

A. Characterization Methodology

In order to characterize COVID-19 themed malicious web-

sites, we address 4 Research Questions (RQs):

• RQ1: Which WHOIS registrars are most abused to launch

COVID-19 themed malicious websites?

• RQ2: Which Top Level Domains (TLDs) are most abused

by COVID-19 themed malicious websites?

• RQ3: What trends are exhibited by COVID-19 themed

malicious websites?

• RQ4: Which theme keywords are mostly abused by

attackers, and how?

We consider WHOIS information because it has shown to
be useful in the era prior to the COVID-19 pandemic [8],
[15]. Answering the preceding questions will deepen our un-
derstanding of COVID-19 themed malicious website attacks.

B. Detection Methodology

We propose leveraging machine learning to detect COVID-

19 themed malicious websites and answer:

• RQ5: Which classiﬁer is competent in detecting COVID-

19 themed malicious websites?

• RQ6: What is the impact of WHOIS features on the

classiﬁer’s effectiveness?

In order to answer these questions, we need to train de-
tectors. Figure 1 highlights the methodology for detecting
COVID-19 themed malicious websites. The methodology can
be decomposed into the following modules: data collection,
feature deﬁnition and extraction, data pre-processing, classiﬁer
training, and classiﬁer test.

Data about websites need to be collected from reliable
sources. The collected data may need enrichment to provide
more information, as what will be illustrated in our case study.
Then, features may be deﬁned to describe these websites. In
the case of using deep learning (which requires much larger
datasets), features may be automatically learned. One may
consider a range of classiﬁers, which are generically called
Ci’s in Figure 1. As shown in Figure 1, one can use classiﬁers
individually or an ensemble of them (e.g., via a desired voting
scheme, such as weighted vs. unweighted majority voting). In
the simple form of unweighted majority voting, a website is
classiﬁed as malicious if majority of the classiﬁers predict it
as malicious; otherwise, it is classiﬁed as benign.

Fig. 1. Methodology for detecting COVID-19 themed malicious websites

In order to evaluate the effectiveness of the trained clas-
siﬁers, we propose adopting the standard metrics, including:
accuracy (ACC), false-positive rates (FPR), false-negative rates
(FNR), and F 1-score. Speciﬁcally, let T P be the number of
true positives, T N be the number of true negatives, F P be
the number of false positives, and F N be the number of
false negatives. Then, we have ACC =
T P +T N +F P +F N , FPR
= F P
2T P
2T P +F P +F N .

F P +T N , FNR = F N

T P +T N

F N +T P , and F 1-score =
IV. CASE STUDY

Our case study applies the methodology to speciﬁc datasets.

A. Data Collection

Our dataset of COVID-19 malicious website examples are
obtained from what was published between 2/1/2020 and
5/15/2020 by two sources: (i) CheckPhish [26], which contains
131,761 malicious websites waging scamming attacks related
to COVID-19; and (ii) DomainTools [27], which contains
157,579 malicious websites waging malware, phishing, and
spamming attacks related to COVID-19. The union of these
two sets leads to a total of 221,921 malicious websites, denoted
by Dmalicious, owing to the fact that 67,419 websites belong
to both sets. For obtaining benign websites, we use the top
250,000 websites from Cisco’s Umbrella 1 million websites
dataset [28] on 05/16/2020, denoted by Dbenign, which is a
source of reputable websites. We compile a merged dataset
denoted by Dinitial = Dmalicious ∪ Dbenign.

In order to collect WHOIS information of a website, we
use the python library whois 0.9.7 to query the WHOIS
database on 8/7/2020. We observe that 42,540 (or 19.17%)
out of the 221,921 malicious websites have no WHOIS infor-
mation available, and 93,082 (or 37.2%) out of the 250,000
benign websites have no WHOIS information available. This
means that the presence/absence of WHOIS information does
not indicate that a website is malicious or not.

B. Characterization Case Study

1) Answering RQ1: Identifying the WHOIS registrars that
are most abused to launch COVID-19 themed malicious web-
sites: For this purpose, we use a subset of Dmalicious set,
denoted by D(cid:48)
malicious, which contains 171,901 malicious
websites with WHOIS registrar name information available.

2

...C1C...C1CTrainedClassifiers3) Answering RQ3: What trends are exhibited by COVID-
19 themed malicious websites?:
In order to answer this
question, we use the dataset Dmalicious mentioned above.
Figure 4 depicts the trend of malicious websites,
leading
to two observations. First, there is a discrepancy between
the daily numbers of websites that are reported by the two
sources. According to CheckPhish, the number of COVID-19
themed malicious websites reaches the peak on 03/25/2020,
with 18,495 malicious websites; according to DomainTools,
the number of COVID-19 themed malicious websites reaches
a peak on 03/20/2020, with 3,981 malicious websites. This
data indicates that there are reporting inconsistencies among
sources and many COVID-19 themed malicious websites are
created at the early stage of the pandemic when uncertainties
are maximum. Second,
the number of COVID-19 themed
malicious websites, by and large, has been decreasing since the
last week of March 2020 (i.e., two weeks after the pandemic
declaration), leading to about 1,000 websites per day during
the ﬁrst week of May 2020 (i.e., about two months after
pandemic declaration). However, there is still oscillation. One
possible cause is that
the attackers have been waiting to
create new COVID-19 themed malicious websites based on
the pandemic’s new developments (e.g., vaccine).

Fig. 4. Trends of COVID-19 themed malicious website.

[29]

Insight 3: Inconsistencies in reporting mechanisms, attack-
ers are agile in creating COVID-19 themed malicious websites.
4) Answering RQ4: Which theme keywords are mostly
abused by attackers, and how?:
In order to answer this
question, we analyze the dataset Dmalicious mentioned
above. We use the python library wordninja with
English Wikipedia language model
to split domain
name strings and extract COVID-19 themed keywords.
We observe that 4 keywords (i.e., covid, corona, covid19,
and coronavirus)
expected;
test,
followed by mask, quarantine,
they are
facemask, pandemic, and vaccine. We extract more than
19,000 keywords. A further analysis of the domain names
reveals that attackers create COVID-19 themed malicious
websites with names containing geographical attributes. For
example, coronaviruspreventionsanantonio.com,
coronavirusprecentionhouston.com,
and
coronaviruspreventiondallas.com
a
combination of city name and a COVID-19 themed keyword.
Moreover, we observe the existence of COVID-19 themed

are most widely used as

virus,

use

Fig. 2. Top 10 abused WHOIS registrars of COVID-19 themed malicious
websites (the y-axis is in the log-scale).

Figure 2 depicts the top 10 abused registrars, which are
ranked according to the absolute number of COVID-19 themed
websites in D(cid:48)
malicious that are respectively registered by them.
We observe that Godaddy is the most frequently abused
registrar, followed by Google and Namecheap. This ﬁnding
inspires us to analyze if there is any ﬁnancial incentive behind
the use of a speciﬁc registrar. The cost registering a .com
domain in the ﬁrst year, is: Godaddy for $11.99, Google
for $9, Namecheap for $8.88, Dynadot for $8.99, 1&1 for
$1, name.com for $8.99, PDR Ltd for $35, OVH for $8.28,
Alibaba for $7.99, Reg-ru for $28. This suggests that
some attackers might have considered registrar 1&1 because
it is the cheapest, while some attackers use reputed registrars.
Insight 1: Some attackers may be incentivized to use

cheaper registrars but some of the other don’t.

2) Answering RQ2: Which Top Level Domains (TLDs) are
most abused by COVID-19 themed malicious websites?: In
order to answer this question, we use the original dataset
Dmalicious, which contains 221,921 COVID-19 themed mali-
cious websites with corresponding TLD information.

Fig. 3. Top 10 abused TLDs of COVID-19 themed malicious websites (the
y-axis is in the log-scale).

Figure 3 depicts the top 10 abused TLDs, which are ranked
according to the absolute number TLDs for COVID-19 themed
malicious websites. We make the following observations.
First, .com hosts the highest number of malicious websites,
followed by .org and .net. Second, 5 of the top 10 abused
TLDs correspond to country-level ccTLDs, including .de,
.uk, .ru, .nl and .eu.

Insight 2: Attackers often abuse popular TLDs.

3

83,2619,9398,1555,1554,1622,8882,5392,1931,9721,749131,70313,8088,0935,8454,8883,8063,2803,0902,4701,79403/11/2020 WHO declared COVID-19 pandemic03/25/2020 Peak of CheckPhish03/20/2020 Peak of DomainTools“parking” websites, which have no content at
time but might be used for upcoming COVID-19 themes.

the present

Insight 4: Attackers are crafty in using COVID-19 themed
keywords and geographical information in creating COVID-19
themed malicious website domain names.

C. Detection Case Study

Given Dinitial, the detection case study proceeds as follows.
1) Feature Deﬁnition and Extraction: We deﬁne features
according to the following aspects of websites: WHOIS (F1-
F4), domain name lexical information (F5-F9), statistical in-
formation (F10), and Top-Level Domain or TLD (F11).

• Current WHOIS registration lifetime (F1): This is the
number of days that has passed since a website’s regis-
tration, with respect to the date when this feature’s value
is extracted (e.g., 08/07/2020 in our case).

• Remaining WHOIS expiration lifetime (F2): This is the
number of remaining days before a website’s WHOIS
registration expires, with respect to the date when this
feature’s value is extracted (e.g., 08/07/2020 in our case).
• Number of days since last WHOIS update (F3): This
is the number of days elapsed since a website’s last
update with respect to the date when this feature’s value
is extracted (e.g., 08/07/2020 in our case).

• WHOIS registrar reputation (F4): We propose measuring
|Dbenign| , where n
a WHOIS registrar’s reputation as
is the number of benign websites in Dbenign that are
registered by this particular registrar and |Dbenign| is the
size of set Dbenign.

n

• Number of dots in domain name (F5): This is the number
of dots (character ‘.’) in the domain name. For example,
domain any.com has 1 dot.

• Domain hyphen count (F6): This is the number of hy-

phens (‘-’) in a domain name.

• Domain vowel count (F7): This is the number of vowels

(i.e., a, e, i, o, u) in a domain name.

• Domain digits percentage (F8): This is the ratio of the
number of digits (0-9) in a domain name to the number
of characters including digits.

• Domain unique alphabetic-numeric characters count (F9):
This is the total number of unique alphabetic and numeric
characters (i.e., a-z, A-Z, 0-9) in a domain name.

• Domain entropy (F10): This is the Shannon entropy [30]
of the domain name (i.e., a kind of statistical
infor-
mation), which is computed based on the frequency of
characters in the domain name.

• TLD Reputation (F11): We propose measuring a TLD’s
|Dbenign| , where m is the number of web-

reputation as
sites in Dbenign that contain this particular TLD.

m

2) Data Pre-Processing: Given that some websites may not
have information for the features, it is important to consider
different scenarios. In our example, we propose considering
two datasets that can be derived from Dinitial because some
websites do not have information for the WHOIS features.

• Dataset D1 ⊂ Dinitial consists of websites for which
WHOIS information is available (i.e., features F1-F4 are

4

available). D1 contains 21,749 websites in total, including
16,411 COVID-19 themed malicious websites and 5,338
benign websites.

• Dataset D2 ⊂ Dinitial, where D1 ∩ D2 = ∅, consists of
websites for which WHOIS information is absent (i.e.,
features F1-F4 are entirely missing). D2 contains 135,621
websites, including 42,540 malicious websites and 93,081
benign websites. For each website belonging to D2, only
values of the 7 features (i.e., F5-F11) are available.

TABLE I
RELATIVE IMPORTANCE OF FEATURES IN D1 WITH RESPECT TO THE
RANDOM FOREST METHOD.

Feature
F1
F2
F3
F4
F5
F6

Importance
0.429
0.094
0.131
0.065
0.065
0.003

Feature
F7
F8
F9
F10
F11

Importance
0.080
0.009
0.028
0.029
0.068

Since only D1 contains all WHOIS information, We use
it for feature selection study. For this purpose, we use the
random forest classiﬁcation feature importance method [31]
(with the 80-20 splitting of training-test data) to ﬁnd the
important features. Table I depicts the relative importance of
the features in D1. We observe that F6 and F8 have a very
small relative importance (i.e., < 0.01) when compared to the
others, suggesting that hyphens and digits are equally used in
malicious or benign domain names. Hence, we will eliminate
F6 and F8 in the rest study of D1.

In order to see whether or not the feature selection re-
is impacted by the data imbalance of D1 (with the
sult
malicious:benign ratio being 3.1:1), we explore two widely-
used methods: (i) oversampling the minority class to replicate
some random examples; and (ii) undersampling the majority
class to remove some random examples. At ﬁrst, we do
the 80-20 splitting of training-test data, and then change the
malicious:benign ratio in the training set, while keeping the
test set intact. We wish to identify the ratio that achieves the
highest F 1-score. In what follows we only report the results
of Random Forest because it outperforms the other classiﬁers
for the original dataset D1.

Table II shows the impacts of the malicious:benign ratio
in the training set. We observe that the oversampling-incurred
ratio 1.67:1 leads to the highest F 1-score (and the second best
FPR and lowest FNR), while undersampling never performs
better than the original data ratio in terms of accuracy and
F 1-score. This can be explained by the fact that the latter
eliminates useful information. This prompts us to use over-
sampling to achieve the 1.67:1 ratio when training classiﬁers,
which turns D1 into D(cid:48)
1 (i.e., the training set is augmented).
Figure 5 further highlights the confusion matrix of the
experiment one the same test set but corresponding to D1
and D(cid:48)
1, which shows a slight improvement in detection when
augmenting the training set with oversampling.

TABLE II
IMPACT OF THE MALICIOUS:BENIGN RATIO ON THE EFFECTIVENESS OF
THE RANDOM FOREST CLASSIFIER WITH Oversampling AND
Undersampling, WHERE D1 WITH RATIO 3.1:1 IS THE ORIGINAL D1.

on a virtual machine on https://www.chameleoncloud.org/,
running CentOS 7 on a machine of an x86 64 processor with
48 cores and CPU frequency 3.1 GHz.

Dataset
D1
D1
D1
D1
D1
D1
D1
D1
D1
D1
D1

Method
(none)
Oversample
Oversample
Oversample
Oversample
Oversample
Oversample
Undersample
Undersample
Undersample
Undersample

Ratio
3.1:1
2:1
1.67:1
1.43:1
1.25:1
1.11:1
1:1
2:1
1.67:1
1.43:1
1.25:1

ACC
0.980
0.980
0.980
0.979
0.979
0.979
0.979
0.977
0.976
0.975
0.972

FPR
0.030
0.030
0.027
0.028
0.028
0.027
0.026
0.023
0.023
0.023
0.020

FNR
0.017
0.018
0.017
0.019
0.018
0.019
0.019
0.022
0.025
0.025
0.031

F 1-score
0.987
0.986
0.988
0.986
0.986
0.986
0.986
0.985
0.984
0.984
0.981

• Experiment (Exp.) 1: Use the lexical, statistical, and TLD
features (i.e., F5, F7, F9-F11) only, while ignoring the
WHOIS features. (This experiment is equally applicable
to D2, which is not reported owing to space limitation.)
• Experiment (Exp.) 2: Use the WHOIS features (i.e., F1-

F4), while ignoring all other features.

• Experiment (Exp.) 3: Use both lexical and WHOIS fea-

tures (i.e., F1-F5, F7, F9-F11).

TABLE III
EXPERIMENTAL RESULTS ON DATASET D(cid:48)

(WITH OVERSAMPLING), THEIR TOTAL CPU TIMES FOR TRAINING AND
TEST: EXP. 1 USES LEXICAL FEATURES ONLY; EXP.2 USES WHOIS
FEATURES ONLY; EXP. 3 USES BOTH LEXICAL AND WHOIS FEATURES.

1 WITH A RANGE OF CLASSIFIERS

Exp.

Classiﬁer

ACC

FPR

FNR

F 1-score

1
2
3
1
2
3
1
2
3
1
2
3
1
2
3
1
2
3

RF
RF
RF
KNN
KNN
KNN
DT
DT
DT
LR
LR
LR
SVM
SVM
SVM
Ensemble
Ensemble
Ensemble

0.924
0.977
0.980
0.887
0.949
0.947
0.917
0.973
0.974
0.885
0.883
0.918
0.888
0.881
0.920
0.916
0.962
0.970

0.150
0.025
0.027
0.199
0.034
0.031
0.151
0.045
0.051
0.216
0.362
0.178
0.220
0.373
0.164
0.171
0. 031
0.035

0.052
0.023
0.017
0.086
0.056
0.060
0.061
0.022
0.019
0.082
0.038
0.051
0.078
0.038
0.054
0.056
0.041
0.028

0.950
0.985
0.988
0.925
0.966
0.964
0.945
0.982
0.983
0.924
0.926
0.946
0.925
0.924
0.946
0.945
0.974
0.980

Execution
Time(s)
0.48
0.59
0.64
0.40
0.25
0.30
0.07
0.08
0.14
20.30
23.03
44.40
1.69
1.68
2.38
21.40
24.75
45.70

Table III summarizes the experimental results with a range
of classiﬁers and the actual time spent on training a model
and classifying the entire test set. We make several observa-
tions. First, for a speciﬁc classiﬁer, using WHOIS features
alone (Exp. 2) almost always leads to signiﬁcantly higher
effectiveness than using lexical features alone (Exp. 1), except
for Logistic Regression. Second, for a ﬁxed classiﬁer, using
both lexical and WHOIS features together (i.e., Exp. 3)
always performs better than using lexical or WHOIS features
alone. Third, among the classiﬁers considered, Random Forest
performs the best
in every metric in each experiment. In
particular, Random Forest (i.e., non-linear classiﬁer) achieves
a better performance than the Ensemble method because
there are classiﬁers (e.g., Logistic Regression and SVM) that
are substantially less accurate than the other classiﬁers and
therefore “hurt” the voting results. Fourth, Decision Tree has
the fastest execution time, followed by KNN and Random
Forest, while Logistic Regression is the slowest and causes
a delay for the voting ensemble. To understand the gener-
alizability, when conducting Exp. 1 on the augmented D(cid:48)
2
with the benign:malicious ratio at 1.25:1, we observe that

Fig. 5. Confusion matrix for (a) D1 with 3.1:1 malicious:benign ratio in the
training data and (b) D(cid:48)

1 with 1.67:1 ratio in the training data.

Insight 5: The data imbalance issue does not affect the
model performance signiﬁcantly in this case, perhaps because
the degree of imbalance is not severe enough.

3) Training and Test: Having addressed the issue of feature
selection and data imbalance, we consider the following clas-
siﬁers: Random Forest (RF), Decision Tree (DT), Logistic Re-
gression (LR), K-Nearest Neighbor (KNN), and Support Vec-
tor Machine (SVM). Speciﬁcally, we use the python sklearn
the following classiﬁer algorithms: (i)
module to import
Random Forest or RF with parameters n_estimator=100
(i.e., 100 trees in a forest) and criterion=‘entropy’ (i.e.,
entropy is used to measure information gain); (ii) K-Nearest
Neighbor or KNN, with parameters n_neighbors=8 (i.e.,
8 of neighbors are considered), metric=‘minkowski’ with
p = 2 (i.e., the Minkowski metric with p = 2 measures
the distance between two feature vectors), and the rest pa-
rameters are the default values; (iii) Decision Tree or DT
with default parameters; (iv) Logistic Regression or LR with
default parameters; (v) Support Vector Machine or SVM with
linear kernel and other default parameters. For voting the
outputs of the ﬁve classiﬁers mentioned above, we use the
VotingClassifier() function and set voting=‘hard’
(i.e., majority voting). We always considering the 80-20 split-
ting of the scaled training-test data.

4) Answering RQ5 and RQ6: In order to answer RQ5 and
RQ6, we conduct the following experiments, where we use the
80-20 train-test splitting of D1 and then augmenting the train-
ing set as mentioned above. Our experiments are conducted

5

3238(98.36%)(TP)54(FN)32(FP)1026(96.98%)(TN)3238(98.36%)(TP)54(FN)28(FP)1030(97.35%)(TN)(a)Malicious:Benign (3.1:1) (b) Malicious:Benign (1.67:1)Predicted ClassPredicted ClassActual Class101010Random Forest outperforms other models by achieving a 0.947
accuracy, a 0.066 FPR, a 0.041 FNR, and a 0.947 F1-score.
Insight 6: COVID-19 themed malicious website detectors
must consider WHOIS features; and Random Forest performs
the best among the classiﬁers that are considered.

V. DISCUSSION

The present study has several limitations, which should be
addressed in future studies. First, we use a heuristic method
to determine the ground truth. This heuristic method can only
approximate the ground truth because the data sources (i.e.,
CheckPhish and DomainTools feeds in this case) may contain
some errors. Second, we could not avoid the data imbalance
problem, meaning that the resulting detectors or classiﬁers may
be slightly biased towards the majority class even after the
oversampling. Third, we only considered the WHOIS and URL
lexical features, but not the website contents or the network
layer features, Fourth, we only considered ﬁve WHOIS fea-
tures because most of the other kinds of WHOIS information
are largely missing, which means that WHOIS registrars need
to collect more detailed information than what is presented
at the moment of writing. Fifth, application of deep learning
models or explainable ML are left to future research. Sixth,
we observe that the python library wordninja can make
bad splits at times (e.g., when a domain name is seemingly in
English characters but actually in another languages).

VI. CONCLUSION
We have presented the ﬁrst systematic study on data-
driven characterization, and detection of COVID-19 themed
malicious websites. We presented a methodology and applied
it to a speciﬁc dataset. Our experiments led to several insights,
highlighting that attackers are agile, crafty, economically in-
centivized in waging COVID-19 themed malicious websites
attacks. Our experiments show that Random Forest can serve
as an effective detector against these attacks, especially when
WHOIS information about websites in question is available.
This highlights the importance of domain registrars to collect
more information when registering domains in future.
Acknowledgement. We thank the reviewers for their useful
comments. This work was supported in part by ARO Grant
#W911NF-17-1-0566, ARL Grant #W911NF-17-2-0127, and
the NSA OnRamp II program.

REFERENCES

[1] J. T. PATRICK UPATHAM, “Amid covid-19, global orgs

see
a 148% spike in ransomware attacks; ﬁnance industry heavily
targeted,”
https://www.carbonblack.com/2020/04/15/amid-covid-19-
global-orgs-see-a-148-spike-in-ransomware-attacks-ﬁnance-industry-
heavily-targeted/, 2020, accessed on 10 June, 2020.
“Spotting and blacklisting malicious

covid-19-themed
sites,” https://www.helpnetsecurity.com/2020/04/07/covid-19-malicious-
sites/, 2020, accessed on 12 August, 2020.

[2] Z. Zorz,

[3] Y. Liang and X. Yan, “Using deep learning to detect malicious urls,” in

Proc. IEEE ICEI, 2019, pp. 487–492.

[4] O. Christou, N. Pitropakis, P. Papadopoulos, S. McKeown, and W. J.
Buchanan, “Phishing url detection through top-level domain analysis: A
descriptive approach,” in ICISSP, 2020.

[5] M. Chatterjee and A. Namin, “Detecting phishing websites through deep
reinforcement learning,” in Proc. IEEE COMPSAC, 2019, pp. 227–232.

6

[6] Y. Li, Z. Yang, X. Chen, H. Yuan, and W. Liu, “A stacking model using
url and html features for phishing webpage detection,” Future Gener.
Comput. Syst., vol. 94, pp. 27–39, 2019.

[7] O. K. Sahingoz, E. Buber, O. Demir, and B. Diri, “Machine learning
based phishing detection from urls,” Expert Systems with Applications,
vol. 117, pp. 345 – 357, 2019.

[8] L. Xu, Z. Zhan, S. Xu, and K. Ye, “Cross-layer detection of malicious
websites,” in Third ACM Conference on Data and Application Security
and Privacy (CODASPY’13), 2013, pp. 141–152.

[9] D. Liu, J. Lee, W. Wang, and Y. Wang, “Malicious websites detection via
cnn based screenshot recognition*,” in International Conf. on Intelligent
Computing and its Emerging Applications, 2019, pp. 115–119.

[10] J. Ma, L. K. Saul, S. Savage, and G. M. Voelker, “Learning to detect
malicious urls,” ACM TIST, vol. 2, no. 3, pp. 30:1–30:24, 2011.
[11] H. M. Junaid Khan, Q. Niyaz, V. K. Devabhaktuni, S. Guo, and
U. Shaikh, “Identifying generic features for malicious url detection
system,” in Proc. IEEE UEMCON, 2019, pp. 0347–0352.

[12] R. Verma and A. Das, “What’s in a url: Fast feature extraction and
malicious url detection,” in Proc. ACM IWSPA’17, 2017, p. 55–63.
[13] F. D. Abdi and L. Wenjuan, “MALICIOUS URL DETECTION USING
CONVOLUTIONAL NEURAL NETWORK,” Dec. 2017. [Online].
Available: https://doi.org/10.5281/zenodo.1155304

[14] W. Yang, W. Zuo, and B. Cui, “Detecting malicious urls via a keyword-
based convolutional gated-recurrent-unit neural network,” IEEE Access,
vol. 7, pp. 29 891–29 900, 2019.

[15] L. Xu, Z. Zhan, S. Xu, and K. Ye, “An evasion and counter-evasion
study in malicious websites detection,” in Proc. IEEE CNS, 2014, pp.
265–273.

[16] J. Mireles, E. Ficke, J. Cho, P. Hurley, and S. Xu, “Metrics towards
measuring cyber agility,” IEEE T-IFS, vol. 14, no. 12, pp. 3217–3232,
2019.

[17] Z. Zhan, M. Xu, and S. Xu, “Characterizing honeypot-captured cyber
attacks: Statistical framework and case study,” IEEE T-IFS, vol. 8, no. 11,
2013.

[18] ——, “Predicting cyber attack rates with extreme values,” IEEE T-IFS,

vol. 10, no. 8, pp. 1666–1677, 2015.

[19] Y. Chen, Z. Huang, S. Xu, and Y. Lai, “Spatiotemporal patterns and
predictability of cyberattacks,” PLoS One, vol. 10, no. 5, p. e0124472,
05 2015.

[20] M. Xu, K. M. Schweitzer, R. M. Bateman, and S. Xu, “Modeling and
predicting cyber hacking breaches,” IEEE T-IFS, vol. 13, no. 11, pp.
2856–2871, 2018.

[21] S. Xu, “Cybersecurity dynamics: A foundation for the science of
cybersecurity,” in Proactive and Dynamic Network Defense, 2019, pp.
1–31.

[22] R. Zheng, W. Lu, and S. Xu, “Preventive and reactive cyber defense
dynamics is globally stable,” IEEE TNSE, vol. 5, no. 2, pp. 156–170,
2018.

[23] H. Chen, J. Cho, and S. Xu, “Quantifying the security effectiveness of
ﬁrewalls and dmzs,” in Proc. HoTSoS’2018, 2018, pp. 9:1–9:11.
[24] M. Pendleton, R. Garcia-Lebron, J. Cho, and S. Xu, “A survey on
systems security metrics,” ACM Comput. Surv., vol. 49, no. 4, pp. 62:1–
62:35, 2016.

[25] H. Chen, J. Cho, and S. Xu, “Quantifying the security effectiveness of

network diversity,” in Proc. HoTSoS’2018, 2018, p. 24:1.

[26] CheckPhish, “Covid-19 (coronavirus) phishing & scam tracker,”
https://checkphish.ai/coronavirus-scams-tracker, 2020, accessed on 15
May, 2020.

[27] DomainTools, “Free covid-19 threat list - domain risk assessments for
coronavirus threats,” https://www.domaintools.com/resources/blog/free-
covid-19-threat-list-domain-risk-assessments-for-coronavirus-threats,
2020, accessed on 14 May, 2020.

[28] D.

Hubbard,

1
“Cisco
https://umbrella.cisco.com/blog/cisco-umbrella-1-million,
accessed on 13 June, 2020.

umbrella

million,”
2016,

[29] D. Anderson, “wordninja 2.0.0,” https://pypi.org/project/wordninja/,

2019, accessed on 12 June, 2020.

[30] Wikipedia, “Shannon entropy,” https://en.wiktionary.org/wiki/Shannon-

entropy, 2020, accessed on 3 June, 2020.

[31] M. Kuhn, K. Johnson et al., Applied predictive modeling.

Springer,

2013, vol. 26.

