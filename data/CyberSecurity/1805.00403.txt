iSTRICT: An Interdependent Strategic Trust Mechanism for
the Cloud-Enabled Internet of Controlled Things

Jeffrey Pawlick, Juntao Chen, and Quanyan Zhu

8
1
0
2

v
o
N
5
1

]

R
C
.
s
c
[

2
v
3
0
4
0
0
.
5
0
8
1
:
v
i
X
r
a

Abstract—The cloud-enabled Internet of controlled things
(IoCT) envisions a network of sensors, controllers, and actua-
tors connected through a local cloud in order to intelligently
control physical devices. Because cloud services are vulnerable
to advanced persistent threats (APTs), each device in the IoCT
must strategically decide whether to trust cloud services that
may be compromised. In this paper, we present iSTRICT, an
interdependent strategic trust mechanism for the cloud-enabled
IoCT. iSTRICT is composed of three interdependent layers. In
the cloud layer, iSTRICT uses FlipIt games to conceptualize
APTs. In the communication layer, it captures the interaction be-
tween devices and the cloud using signaling games. In the physical
layer, iSTRICT uses optimal control to quantify the utilities in
the higher level games. Best response dynamics link the three
layers in an overall “game-of-games,” for which the outcome is
captured by a concept called Gestalt Nash equilibrium (GNE). We
prove the existence of a GNE under a set of natural assumptions
and develop an adaptive algorithm to iteratively compute the
equilibrium. Finally, we apply iSTRICT to trust management
for autonomous vehicles that rely on measurements from remote
sources. We show that strategic trust in the communication layer
achieves a worst-case probability of compromise for any attack
and defense costs in the cyber layer.

Index Terms—Internet of controlled things, cyber-physical sys-
tems, strategic trust, cybersecurity, advanced persistent threats,
autonomous vehicles, game-of-games

I. INTRODUCTION

The Internet of Things (IoT) will impact a diverse set of
consumer, public sector, and industrial systems. Smart homes
and buildings, autonomous vehicles and transportation [1], and
the interaction between wearable ﬁtness devices and social net-
works [2] provide a few examples of application areas which
will be particularly impacted by the IoT. One deﬁnition of
the IoT is a “dynamic global network infrastructure with self-
conﬁguring capabilities based on standard and interoperable
communication protocols where physical and virtual ‘things’
have identities, physical attributes, and virtual personalities”
[3]. This deﬁnition envisions a decentralized, heterogeneous
network with plug-and-play capabilities. The related concept
of cyber-physical systems (CPS) refers to “smart networked
systems with embedded sensors, processors, and actuators”
[5] provides a detailed introduction to CPS and reports
[4].
on its development status. The term CPS emphasizes the
“systems” nature of these networks. In both IoT and CPS,

The authors are with the Department of Electrical and Computer Engi-
neering, Tandon School of Engineering, New York University, Brooklyn, NY,
11201 USA. E-mail: {jpawlick,jc6412,qz494}@nyu.edu.

This work is partially supported by an NSF IGERT grant through the
Center for Interdisciplinary Studies in Security and Privacy (CRISSP) at
New York University, by the grants CNS-1544782, EFRI-1441140, and SES-
1541164 from National Science Foundation (NSF) and de-ne0008571 from
the Department of Energy.

Fig. 1: iSTRICT addresses security and trust issues for a cloud-enabled IoCT.
The cloud-enabled IoCT consists of connected sensors and devices, with a
cloud as the interface. Adversaries are capable of compromising cloud services
and modifying the control signals that they transmit to the devices. The trust
issue lies between the cloud (sender) and IoCT (receiver). Each IoCT device
should determine which signals to trust from cloud services strategically.

“the joint behavior of the ‘cyber’ and physical elements
of the system is critical—computing, control, sensing, and
networking can be integrated into every component” [4]. The
importance of sensing, actuation, and control to devices in the
IoT has given rise to the term “Internet of controlled things,”
or IoCT. Hereafter, we refer to the IoCT as a way to address
challenges of both CPS and IoT.

The IoCT requires an interface between heterogeneous com-
ponents. Local clouds (or fogs or cloudlets) offer promising
solutions. In these networks, a cloud provides services for
data aggregation, data storage, and computation. In addition,
the cloud provides a market for the services of software
developers and computational intelligence experts [6]. Figure
1 depicts a cloud-enabled IoCT. In this network, sensors
push environment data to the cloud, where it is aggregated
and sent to devices (or “things”), which use the data for
feedback control. These devices modify the environment, and
the cycle continues. Note that the control design of the IoCT
is distributed, since each device can determine which cloud
services to use for feedback control.

A. Advanced Persistent Threats in the Cloud-Enabled IoCT

Unfortunately, cyberattacks on the cloud are increasing as
more businesses utilize cloud services [7]. To provide reliable
support for IoCT applications, sensitive data provided by the
cloud services needs to be well protected [8]. In this paper
we focus on the attack model of advanced persistent threats
(APTs): “cyber attacks executed by sophisticated and well-
resourced adversaries targeting speciﬁc information in high-
proﬁle companies and governments, usually in a long term
campaign involving different steps” [9]. In the initial stage of
an APT, an attacker penetrates the network through techniques

C1  Thing 1  (Thermostat)     Thing 2  (Wearable computing)      Thing 3  (Washing machine)     Environment Smart Cars Smart Home Smart City Smart things Controller network Sensor network Cloud C2 C3 S2 S3 S4 Attacker Defender S1 Feedback Output Feedback loop  
 
 
 
 
 
such as social engineering, malicious hardware injection, theft
of cryptographic keys, or zero-day exploits [10]. For example,
the Naikon APT, which targeted governments around the South
China Sea in 2010-2015, used a bait document that appeared
to be a Microsoft Word ﬁle but which was actually a malicious
executable that installed spware [11]. The cloud is particularly
vulnerable to initial penetration through application-layer at-
tacks, because many applications are required for developers
and clients to interface with the cloud. Our iSTRICT can be
applied to many cyberattack scenarios. For example, cross-
site scripting (XSS) and SQL injection are two types of
application-layer attacks. In SQL injection, attackers insert
malicious SQL code into ﬁelds which do not properly process
string literal escape characters. The malicious code targets
the server, where it could be used to modify data or bypass
authentication systems. By contrast, XSS targets the execution
of code in the browser on the client side. All of these attacks
give attackers an initial entry point into a system, from which
they can begin to gain more complete, insider control. This
control of the cloud can be used to transmit malicious signals
to CPS and cause physical damage.

B. Strategic Trust

Given the threat of insider attacks on the cloud, each IoCT
device must decide which signals to trust from cloud services.
Trust refers to positive beliefs about the perceived reliability
of, dependability of, and conﬁdence in another entity [12].
These entities may be agents in an IoCT with misaligned
incentives. Many speciﬁc processes in the IoCT require trust,
such as data collection, aggregation and processing, privacy
protection, and user-device trust in human-in-the-loop inter-
actions [13]. While many factors inﬂuence trust, including
subjective beliefs, we focus on objective properties of trust.
These include 1) reputation, 2) promises, and 3) interaction
context. Many trust management systems are based on tracking
reputation over multiple interactions. Unfortunately, agents in
the IoCT may interact only once, making reputation difﬁcult to
accrue [14]. This property of IoCT also limits the effectiveness
of promises such as contracts or policies. Promises may not be
enforceable for entities that interact only once. Therefore we
focus on strategic trust that is predictive rather than reactive.
We use game-theoretic utility functions to capture the moti-
vations for entities to be trustworthy. These utility functions
change based on the particular context of the interaction. In
this sense, our model of strategic trust is incentive-compatible,
i.e., consistent with each agent acting in its own self-interest.

C. Game-Theoretic iSTRICT Model

We propose a framework called iSTRICT, which is com-
posed of three interacting layers: a cloud layer, a commu-
nication layer, and a physical layer. In the ﬁrst layer, the
cloud-services are threatened by attackers capable of APTs
and defended by network administrators (or “defenders”). The
interaction at each cloud-service is modeled using the FlipIt
game recently proposed by Bowers et al. [10] and van Dijk et
al. [15]. iSTRICT uses one FlipIt game per cloud-service.
In the communication layer, the cloud-services—which may

be controlled by the attacker or defender according to the
outcome of the FlipIt game—transmit information to a
the cloud-services.
device which decides whether to trust
This interaction is captured using a signaling game. At the
physical layer, the utility parameters for the signaling game are
determined using optimal control. The cloud, communication,
layers are interdependent. This motivates an
and physical
overall equilibrium concept called Gestalt Nash equilibrium
(GNE). GNE requires each game to be solved optimally given
the results of the other games. Because this is a similar idea
to best-response in Nash equilibrium, we call the multi-game
framework a game-of-games.

D. Contributions

In summary, we present the following contributions:
1) Trust Model: We develop a multi-layer framework
(iSTRICT) and associated equilibrium concept (GNE)
to capture interdependent strategic trust in the cloud-
enabled IoCT. iSTRICT combines analysis at the cloud,
communication, and physical layers.

2) GNE Analysis: We prove the existence of GNE, and
we show that strategic trust in the communication layer
guarantees a worst-case probability of compromise re-
gardless of attack costs in the cyber layer.

3) Adaptive Algorithm: We present an adaptive algorithm
using best-response dynamics to compute a GNE.
4) Autonomous Vehicle Application: We simulate the
control of a pair of autonomous vehicles using iSTRICT,
and show improvement over the performance under
naive policies.

The rest of the paper proceeds as follows. In Section II,
we give a broad outline of the iSTRICT model. Section III
presents the details of the FlipIt game, signaling game,
physical layer control system, and equilibrium concept. Then,
in Section IV, we study the equilibrium analytically using an
adaptive algorithm. Finally, we apply the framework to the
control of autonomous vehicles in Section V.

E. Related Work

Designing trustworthy cloud service systems has been inves-
tigated extensively in the literature. Various methods, including
a feedback evaluation component, Bayesian game, and domain
partition have been proposed [16]–[18]. Trust models to pre-
dict the cloud trust values (or reputation) can be mainly divided
into objective and subjective classes. The ﬁrst are based on
the quality of service parameters, and the second are based on
feedback from cloud service users [16], [19].

In the IoCT, however, agents may not have sufﬁcient number
of interactions, which makes reputation challenging to obtain
[14]. In addition, trust value-based cloud trust management
systems can be compromised by reputation attacks through
fake feedback which can severely degrade the system perfor-
mance [16], [20]. Therefore, in this work, we aim to design a
strategic trust mechanism which is predictive rather than reac-
tive through an integrative game-theoretic framework. Rather
than using trust value [20], [21], IoCT devices in our iSTRICT

model make decisions based on the strategies of players at
the cloud layer as well as based on the physical system
performance. This multi-layer design provides resilience to
reputation attacks.

Cyber-physical systems security becomes a critical concern
due to the prevailing threats from both cyber and physical
components in the system [22]–[24]. To facilitate a secure
system design, game theory has been widely adopted to model
and capture the strategic interactions between the attackers and
defenders [25]–[27]. Our iSTRICT framework builds on two
existing game models. One is the signaling game which has
been used in intrusion detection systems [28] and network
defense [29]. The other one is the FlipIt game [10], [15]
which has been applied to security of a single cloud service
[25], [30] as well as AND/OR combinations of cloud services
[31]. In contrast to previous works, in this paper we propose a
three-layer interdependent model to enable devices to decide
whether to trust cloud services that may be compromised.
Speciﬁcally, trust management decisions are coupled by the
dynamics of cloud-enabled devices, because data provided by
the cloud services is used for feedback control. Devices must
balance the need for as many data sources as possible (in
order to increase the quality of the feedback control) with
the imperative to reject data sources that are compromised by
attackers.

In terms of the technical framework, iSTRICT builds on
existing achievements in IoCT architecture design [6], [32]–
[34], which describe the roles of different layers of the IoCT
at which data is collected, processed, and accessed by devices
[33]. Each layer of the IoCT consists of different enabling
technologies such as wireless sensor networks and data man-
agement systems [34]. Our perspective, however, is distinct
from this literature because we emphasize an integrated math-
ematical framework. iSTRICT leverages game theory to obtain
optimal defense strategies for IoCT components, and it uses
control theory to quantify the performance of devices.

II.

ISTRICT OVERVIEW

We consider a cyber-physical attack in which an adversary
penetrates a cloud service in order to transmit malicious
signals to a physical device and cause improper operation.
This type of cross-layer attack is increasingly relevant in IoCT
settings. Perhaps the most famous cross-layer attack is the
Stuxnet attack that damaged Iran’s nuclear program. But even
more recently, an attacker allegedly penetrated the supervisory
control and data acquisition (SCADA) system that controls the
Bowman Dam, located less than 20 miles north of Manhattan.
The attacker gained control of a sluice gate which manages
water level1 [35]. Cyber-physical systems ranging from the
smart grid to public transportation need to be protected from
similar attacks.

The iSTRICT framework offers a defense-in-depth approach
to IoCT security. In this section, we introduce each of the
three layers of iSTRICT very brieﬂy, in order to focus on the
interaction between the layers. We describe an equilibrium

1The sluice gate happened to be disconnected for manual repair at the time,

however, so the attacker could not actually change water levels.

TABLE I: Nomenclature

Notation
S = {1, 2, . . . , N }
Ai, Di, i ∈ S, R

A]i∈S
D]i∈S
A]i∈S
D]i∈S
A, vi

vA = [vi
vD = [vi
pA = [pi
pD = [pi
A = T Fi (vi
pi∗
D)
D) ∈ T S (pA)
A, v∗
(v∗
A, f i
f i
D
uFi
A, f i
A (f i
D)
uFi
A, f i
D (f i
D)
θ = [θi]i∈S
θi ∈ Θ = {θA, θD}
m = [mi]i∈S
mi ∈ M = {mL, mH }
a = [ai]i∈S
ai ∈ A = {aT , aN }
A (m, a), uSi
uSi
D (m, a)
uS
R(θ, m, a)
σi
A(m) ∈ ΣA
σi
D(m) ∈ ΣD
σR(a | m) ∈ ΣN
R
µ(θ | m) = [µi(θ | m)]i∈S
¯uSi
A ; σ−i
A (σR; σi
D )
¯uSi
D, σ−i
D (σR; σ−i
D )

A, σ−i
A ; σi

x[k], ˆx[k], u[k],
A[k], ∆i
∆i
D[k],
Ξθ[k]
y[k], ˜y[k],
ξ, ζ
ν[k], (cid:15)
DσR (ν[k])
A/vi
Vi, PRi
A = ˜T Fi (vi
pi∗
AD)
AD ∈ ˜T S (pA)
v∗
AD ∈ ˜T S◦F (vAD)
v∗
AD ∈ ˜T S◦F (v†
v†
AD)

AD = vi
vi

D, i ∈ S

Meaning
Cloud services (CSs)
Attackers, defenders, device
Values of CSs for A
Values of CSs for D
Probabilities that A controls CSs
Probabilities that D controls CSs
FlipIt mapping for CS i
Signaling game mapping
Frequencies Ai and Di
Ai’s utility in FlipIt game i
Di’s utility in FlipIt game i
Types of CSs
Type spaces of CSs
Messages from CSs
Low or high risk message
Actions for CSs
Trust or not trust action
Signaling game utility of Ai and Di
Signaling game utility for R
Signaling game mixed strategies of Ai
Signaling game mixed strategies of Di
Signaling game mixed strategy for R
Beliefs of R about CSs
Signaling game utility for Ai
Signaling game utility for Di
State, estimated state, control
bias terms of Ai and Di
cloud type matrix
Measurements without and with biases
Covariance matrices of noises
Innovation, innovation thresholds
Innovation gate
Ratios of CSs’ value for Ai and Di
AD and pi
Spaces of vi
A in a GNE
Redeﬁned FlipIt mapping for CS i
Redeﬁned signaling game mapping
Composition of ˜T Fi , i ∈ S and ˜T S
Fixed-point requirement for a GNE

concept for the simultaneous steady-state of all three layers.
Later, Section III describes each layer in detail. Table I lists
the notation for the paper.

A. Cloud Layer

Consider a cloud-enabled IoCT composed of sensors that
push data to a cloud, which aggregates the data and sends
it to devices. For example, in a cloud-enabled smart home,
sensors could include lighting sensors, temperature sensors,
and blood pressure or heart rate sensors that may be placed on
the skin or embedded within the body. Data from these sensors
is processed by a set of cloud services S = {1, . . . , N } , which
make data available for control.

For each cloud service i ∈ S, let Ai denote an attacker
who attempts to penetrate the service using zero-day exploits,
social engineering, or other techniques described in Section I.
Similarly, let Di denote a defender or network administrator
attempting to maintain the security of the cloud service. Ai
and Di attempt to claim or reclaim control of the each cloud
service at periodic intervals. We model the interactions at all
of the services using FlipIt games, one for each of the N
services.

to the amount of time that

In the FlipIt game [10], [15], an attacker and a defender
gain utility proportional
they
control a resource (here a cloud service), and pay attack costs
proportional to the number of times that they attempt to claim
or reclaim the resource. We consider a version of the game
in which the attacker and defender are restricted to attacking
at ﬁxed frequencies. The equilibrium of the game is a Nash
equilibrium.
Let vi

D ∈ R denote the values of each cloud
service i ∈ S to Ai and Di, respectively. These quantities
represent the inputs of the FlipIt game. The outputs of
the FlipIt game are the proportions of time for which Ai
and Di control the cloud service. Denote these proportions by
pi
A ∈ [0, 1] and pi
A, respectively. To summarize
each of the FlipIt games, deﬁne a set of mappings T Fi :
R × R → [0, 1] , i ∈ S, such that
A = T Fi (cid:0)vi
pi∗

A ∈ R and vi

D = 1 − pi

A, vi
D

(1)

(cid:1)

maps the values of cloud service i for Ai and Di to the pro-
portion of time pi∗
A for which the service will be compromised
in equilibrium. We will study this mapping further in Section
III-A.

B. Communication Layer

In the communication layer, the cloud services i ∈ S, which
each may be controlled by Ai or Di, send data to a device R,
which decides whether to trust the signals. This interaction is
modeled by a signaling game. The signaling game sender is
the cloud service. The two types of the sender are attacker or
defender. The signaling game receiver is the device R. While
we used N FlipIt games to describe the cloud layer, we
use only one signaling game to describe the communication
layer, because R must decide which services to trust all at
once.

The prior probabilities in the communication layer are the
A, i ∈ S from
equilibrium proportions pi
A and pi
the equilibrium of the cloud layer. Denote the vectors of
(cid:3)
the prior probabilities for each sensor by pA = (cid:2)pi
i∈S ,
(cid:3)
pD = (cid:2)pi
i∈S . These prior probabilities are the inputs of
D
the signaling game.

D = 1 − pi

A

The outputs of the signaling game are the equilibrium
utilities received by the senders. Denote these utilities by vi
A
D, i ∈ S. Importantly, these are the same quantities
and vi
that describe the incentives of A and D to control each cloud
service in the FlipIt game, because the party which controls
each service is awarded the opportunity to be the sender in
the signaling game. Deﬁne vectors to represent each of these
i∈S , vD = (cid:2)vi
utilities by vA = (cid:2)vi
(cid:3)
(cid:3)
i∈S .
A
[0, 1]N → P(R2N ) be a mapping that
Finally, let T S :
summarizes the signaling game, where P(X) is the power set
of X. According to this mapping, the set of vectors of signaling
game equilibrium utility ratios v∗
D that result from the
vector of prior probabilities pA is given by
D) = T S (pA) .

A and v∗

A, v∗

(v∗

(2)

D

This mapping summarizes the signaling game. We study the
mapping in detail in Section III-B.

Fig. 2: In iSTRICT, FlipIt games model attacks on the set of cloud services.
T Fi , i ∈ S, map the value of each service to the proportion of time that it
will be compromised in equilibrium. The communication layer is modeled by
a signaling game. T S maps probabilities of compromise to the value of each
cloud service. The cloud layer and communication layer are interdependent.
The physical layer performance quantiﬁes the utilities for the signaling game.

C. Physical Layer

Many IoCT devices such as pacemakers, cleaning robots,
appliances, and electric vehicles are dynamic systems that op-
erate using feedback mechanisms. The physical-layer control
of these devices requires remote sensing of the environment
and the data stored or processed in the cloud. The security
at the cloud and the communication layers of the system are
intertwined with the performance of the controlled devices at
the physical layer. Therefore the trustworthiness of the data has
a direct impact on the control performance of the devices. This
control performance determines the utility of the device R as
well as the utility of each of the attackers Ai and defenders Di.
The control performance is quantiﬁed using a cost criterion for
observer-based optimal feedback control. The observer uses
data from the cloud services that R elects to trust, and ignores
the cloud services that R decides not to trust. We study the
physical layer control in Section III-C.

D. Coupling of the Cloud and Communication Layers

Clearly, the cloud and communication layers are coupled
through Eq. (1) and Eq. (2). The cloud layer security serves
as an input to the communication layer. The resulting utilities
of the signaling game at the communication layer further
becomes an input
the cloud layer.
to the FlipIt game at
In addition,
layer performance quantiﬁes the
utilities for the signaling games. Fig. 2 depicts this concept.
In order to predict the behavior of the whole cloud-enabled
IoCT, iSTRICT considers an equilibrium concept which we
call Gestalt Nash equilibrium (GNE). Informally, a triple
(cid:16)
A, v†
A, v†
p†
is a GNE if it simultaneously satisﬁes Eq. (1)
D
and Eq. (2).

the physical

(cid:17)

GNE is useful for three reasons. First, cloud-enabled IoCT
networks are dynamic. The modular structure of GNE requires
the FlipIt games and the signaling game to be at equilib-
rium given the parameters that they receive from the other type

Gestalt Nash Equilibrium Concept**,SvvTp222*2,FpTvvPhysical LayerCommunication LayerCloud-Layer111*1,FpTvv*,NNNNFpTvvSJu,vvpSuof game. This imposes the requirement of perfection, in the
sense that each game must be optimal given the other game.
In GNE, perfection applies in both directions, because there is
no clear chronological order or directional ﬂow of information
between the two games. Actions in each sub-game must be
chosen by prior-commitment relative to the results of the other
sub-game.

Second, GNE draws upon established results from FlipIt
games and signaling games instead of attempting to ana-
lyze one large game. IoCT networks promise plug-and-play
capabilities, in which devices and users are easily able to
enter and leave the network. This also motivates plug-and-play
availability of solution concepts. The solution to one sub-game
should not need to be totally recomputed if an actor enters or
leaves another subgame. GNE follows this approach.

Finally, GNE serves as an example of a solution approach
which could be called game-of-games. The equilibrium so-
lutions to the FlipIt games and signaling game must be
rational “best responses” to the solution of the other type of
game.

III. DETAILED ISTRICT MODEL

In this section, we deﬁne more precisely the three layers of

the iSTRICT framework.

A. Cloud Layer: FlipIt Game

We use a FlipIt game to model the interactions between

the attacker and the defender over each cloud service.

1) FlipIt Actions: For each service, Ai and Di choose
A and f i
f i
D, the frequencies with which they claim or reclaim
control of the service. These frequencies are chosen by prior
commitment. Neither player knows the other player’s action
when she makes her choice. Figure 3 depicts the FlipIt
game. The green boxes above the horizontal axis represent
control of the service by Di and the red boxes below the axis
represent control of the service by Ai.

it

From f i

A and f i
D,

is easy to compute the expected
proportions of the time that A and D control service i [10],
[15]. Let R+ denote the set of non-negative real numbers.
Deﬁne the function ρ : R+ × R+ → [0, 1] , such that
(cid:1) gives the proportion of the time that Ai
A = ρ (cid:0)f i
pi
will control the cloud service if he attacks with frequency
f i
A and Di renews control of the service (through changing
cryptographic keys or passwords, or through installing new
hardware) with frequency f i

A, f i
D

D. We have

ρ (cid:0)f i

A, f i
D

(cid:1) =






0,
f i
,
A
2f i
D
1 − f i
D
2f i
A

,

if f i
if f i

if f i

A = 0,
D ≥ f i
A > f i

A > 0,
D ≥ 0.

(3)

A > f i

Notice that when f i

is greater than the renewal frequency of Di,

of Ai
proportion of time that service i is insecure is ρ (cid:0)f i
A, f i
D
(cid:1) ≤ 1
and when f i
2 .

D ≥ 0, i.e., the attacking frequency
the
(cid:1) > 1
2 ,

A > 0, we obtain ρ (cid:0)f i

D ≥ f i

A, f i
D

that vi

A : R+ ×R+ → R and ¯uFi

2) FlipIt Utility Functions: Recall

A and vi
D
denote the value of controlling service i ∈ S for Ai and Di,
respectively. These quantities deﬁne the heights of the red and
green boxes in Fig. 3. Denote the costs of renewing control of
the cloud service for the two players by αi
A and αi
D. Finally,
let ¯uFi
D : R+ ×R+ → R be expected
utility functions for each FlipIt game. The utilities of each
player are given in Eq. (4) and Eq. (5) by the values vi
D and
A of controlling the service multiplied by the proportions pi
vi
D
and pi
A with which the service is controlled, minus the costs
D and αi
αi
A of attempting to renew control of the service.
(cid:0)f i
¯uFi
D

(cid:1)(cid:1) − αi

(cid:1) = vi

A, f i
D

Df i
D.

(4)

D

A, f i
D
(cid:0)f i
A, f i
D

¯uFi
A

(cid:0)1 − ρ (cid:0)f i
Aρ (cid:0)f i

A, f i
D

(cid:1) = vi

(cid:1) − αi

Af i
A.

(5)

A, f i

Therefore, based on the attacker’s action f i
determines f i
of controlling the cloud service i, 1−ρ(f i
the cost of choosing f i
D.

A, the defender
D strategically to maximize the proportional time
D), and minimize

Note that in the game, the attacker knows vi

A and αi
A,
and the defender knows vi
A, f i
D and αi
D)
is public information, and hence both players know the fre-
quencies of control of the cloud through (3). Therefore, the
communication between two players at the cloud layer is not
necessary when determining their strategies.

D. Furthermore, ρ(f i

3) FlipIt Equilibrium Concept: The equilibrium concept
for the FlipIt game is Nash equilibrium, since it
is a
complete information game in which strategies are chosen by
prior commitment.

Deﬁnition 1. (Nash Equilibrium) A Nash equilibrium of the
FlipIt game played for control of service i ∈ {1, . . . , N }
is a strategy proﬁle (cid:0)f i∗

A , f i∗
D

(cid:1) such that
(cid:0)f i∗

¯uFi
D

A , f i∗
D

(cid:1) ,

f i∗
D ∈ arg max
D∈R+
f i

f i∗
A ∈ arg max
A∈R+
f i

¯uFi
A

(cid:0)f i∗

A , f i∗
D

(cid:1) ,

(6)

(7)

where ¯uFi

D and ¯uFi

A are computed by Eq. (4) and Eq. (5).
let

D and f i∗
A ,

From the equilibrium frequencies f i∗

the
equilibrium proportion of time that Ai controls cloud service
i be given by pi∗
A according to Eq. (3). The Nash equilibrium
solution can then be used to determine the mapping in Eq. (1)
from the cloud service values vi
D to the equilibrium
A , where T Fi : R × R → [0, 1].
attacker control proportion pi∗
The T Fi mappings, i ∈ S, constitute the top layer of Fig. 2.

A and vi

B. Communication Layer: Signaling Game

Because the cloud services are vulnerable, devices which
depend on data from the services should rationally decide
whether to trust
them. This is captured using a signaling
game. In this model, the device R updates a belief about the
state of each cloud service and decides whether to trust it.
Figure 4 depicts the actions that correspond to one service
of the signaling game. Compared to the trust value-based
cloud trust management system where the reputation attack
can signiﬁcantly inﬂuence the trust decision [16], [20], in

evidence-based signaling game approaches could be used to
update belief in a manner robust to reputation attacks [29],
[36], [37].

Based on these beliefs, R chooses which cloud services to
trust. For each service i, R chooses ai ∈ A = {aT , aN } where
aT denotes trusting the service (i.e., using it for observer-based
optimal feedback control) and aN denotes not trusting the ser-
vice. Assume that R, aware of the system dynamics, chooses
actions for each service simultaneously, i.e., a = (cid:2)ai(cid:3)

i∈S .

Next, deﬁne σR : AN → [0, 1] such that σR (a | m) ∈ ΣN
R
gives the mixed strategy probability with which R plays the
vector of actions a given the vector of risk levels m.

4) Signaling Game Utility Functions: Let R’s utility func-
R : ΘN × M N × AN → R, such that
tion be denoted by uS
uS
R (θ, m, a) gives the utility that R receives when θ is the
vector of cloud service types, m is the vector of risk levels,
and R chooses the vector of actions a.
For i ∈ S, deﬁne the functions uSi
A : M N × AN → R and
A (m, a) and uSi
D : M N × AN → R, such that uSi
uSi
D (m, a)
give the utility that Ai and Di receive for service i when the
risk levels are given by the vector m, and R plays the vector
of actions a.

Next, consider expected utilities based on the strategies of
R → R denote the expected utility
each player. Let ¯uS
function for R, such that ¯uS
R (σR | m, µ (• | m)) gives R’s
expected utility when he plays mixed strategy σR given that
he observes risk levels m and has belief µ. We have

R : ΣN

¯uS
R (σR | m, µ) =

(cid:88)

(cid:88)

θ∈Θm

a∈Am

uS
R (θ, m, a) µ (θ | m) σR (a | m) .

(8)

,

A =

and σ−i

R × ΣN

A × ΣN −1

(cid:111)
σj
D | j ∈ S\{i}

Ai and Di, deﬁne σ−i
(cid:110)

In order to compute the expected utility functions for
(cid:111)
(cid:110)
σj
A | j ∈ S\{i}
D =
the sets of the strategies of all of the
senders except the sender on cloud service i. Then deﬁne ¯uSi
A :
(cid:1)
D → R such that ¯uSi
A ; σ−i
ΣN
D
gives the expected utility to Ai when he plays mixed strategy
σi
A, and the attackers and defenders on the other services
play σ−i
D . Deﬁne the expected utility to Di by
(cid:1) in a similar manner.
(cid:0)σR; σ−i
¯uSi
D, σ−i
D
Let X i ∈ {A, D} denote the player that controls service i
and X ∈ {A, D}N denote the set of players that control each
service. Then the expected utilities are computed by

A and σ−i
A ; σi

(cid:0)σR; σi

A, σ−i

A

D

¯uSi
A

(cid:0)σR; σi

A, σ−i

A ; σ−i

D

(cid:1) =

(cid:88)

(cid:88)

(cid:88)

. . .

(cid:88)

m∈M N

a∈AN
(cid:88)

(cid:88)

. . .

X 1∈{A,D}
uSi
A (m, a) σR (a | m) σi

X i−1∈{A,D}

A

X i+1∈{A,D}

(cid:0)mi(cid:1) (cid:89)
j∈S\{i}

σj
X j

X N ∈{A,D}
(cid:0)mj(cid:1) pj

X j ,

(9)

Fig. 3: In each FlipIt game, Ai and Di periodically claim control of cloud
service i. The values of the service for each player are given by vi
D,
which depend on the equilibrium of the signaling game.

A and vi

Fig. 4: The vector of types θ ∈ ΘN deﬁnes whether each cloud service i ∈ S
is controlled by an attacker or defender. Each prior probability pi
A comes
from the corresponding FlipIt game. The player who controls each service
chooses mi. R observes all mi and chooses ai, i ∈ S simultaneously. Here,
we show one service, although all of the services are coupled.

iSTRICT, R’s decision is based on the strategies of each
Ai and Di at the cloud layer as well as the physical layer
performance, and hence it does not depend on the feedback
of cloud services from users which could be malicious due to
attacks. We next present the detailed model of signaling game.

.

θ2

i∈S

. . .

θm (cid:3)T

1) Signaling Game Types: The types of each cloud service
i ∈ S are θi ∈ Θ = {θA, θD} , where θi = θA indicates that
the service is compromised by Ai, and θ = θD indicates that
the service is controlled by Di. Denote the vector of all the
service types by θ = (cid:2)θi(cid:3)

(cid:44) (cid:2) θ1
2) Signaling Game Messages: Denote the risk level of the
data from each service i by mi ∈ M = {mL, mH } , where
mL and mH indicate low-risk and high-risk messages, respec-
tively. (We deﬁne this risk level in Section III-C.) Further,
deﬁne the vector of all of the risk levels by m = (cid:2)mi(cid:3)

i∈S .
Next, deﬁne mixed strategies for Ai and Di. Let σi

A :
D : M → [0, 1] be functions such that
(cid:1) ∈ ΣD give the proportions
A and
D, respectively, from each cloud service i that they control.
D, depending on who

M → [0, 1] and σi
(cid:0)mi
σi
A
with which Ai and Di send messages with risk levels mi
mi
Note that R only observes mi
controls the service i. Let

(cid:1) ∈ ΣA and σi

A or mi

(cid:0)mi

A

D

D

mi =

(cid:40)

mi
mi

A,
D,

if
if

θi = θA
θi = θD

,

i∈S .

denote risk level of the message that R actually observes.
Finally, deﬁne the vector of observed risk levels by m =
(cid:2)mi(cid:3)

3) Signaling Game Beliefs and Actions: Based on the risk
levels m that R observes, it updates its vector of prior beliefs
pA. Deﬁne µi : Θ → [0, 1] , such that µi (cid:0)θ | mi(cid:1) gives the
belief of R that service i ∈ S is of type θ given that R observes
risk level mi. Also write the vector of beliefs as µ (θ | m) =
(cid:2)µi (cid:0)θi | mi(cid:1)(cid:3)
i∈S . As a direction for future work, we note that

time𝒟𝑖move𝒜𝑖move𝜃𝒟𝜃𝒜𝑣𝒟𝑖𝑣𝒜𝑖1/𝑓𝒟𝑖1/𝑓𝒜𝑖𝜃𝒜𝜃𝒟𝑝𝒜𝑖𝑚𝐻𝑚𝐿𝑚𝐻𝑚𝐿𝑎𝑇𝑎𝑁𝑎𝑇𝑎𝑁𝑎𝑇𝑎𝑁𝑎𝑇𝑎𝑁¯uSi
D

(cid:0)σR; σ−i

A ; σi

D, σ−i
D

(cid:1) =

(cid:88)

(cid:88)

(cid:88)

. . .

(cid:88)

m∈M N

a∈AN
(cid:88)

(cid:88)

. . .

X 1∈{A,D}
uSi
D (m, a) σR (a | m) σi

D

X i−1∈{A,D}

X i+1∈{A,D}
σj
X j

(cid:0)mi(cid:1) (cid:89)
j∈S\{i}

X N ∈{A,D}
(cid:0)mj(cid:1) pj

X j .

(10)

5) Perfect Bayesian Nash Equilibrium Conditions: Finally,
we can state the requirements for a perfect Bayesian Nash
equilibrium (PBNE) for the signaling game [38].

let ¯uS

A, σ−i

(cid:0)σR; σi
D, σ−i

(PBNE) For the device,

let ¯uSi
A
(cid:0)σR; σ−i
A ; σi

R (σR | m, µ)
Deﬁnition 2.
be formulated according to Eq.
(8). For each service
(cid:1) be given by Eq. (9)
i ∈ S,
A ; σ−i
(cid:1) be given by Eq. (10). Finally,
and ¯uSi
D
let vector pA give the prior probabilities of each ser-
vice being compromised. Then, a perfect Bayesian Nash
equilibrium of
the signaling game is a strategy pro-
(cid:1) and a vector of beliefs
ﬁle (cid:0)σ∗
A ; σ1∗
µ (θ | m) such that the following hold:

D , . . . σN ∗
D

A , . . . σN ∗

R; σ1∗

D

D

∀i ∈ S, σi∗

A (•) ∈ arg max
A∈ΣA

σi

∀i ∈ S, σi∗

D (•) ∈ arg max
D∈ΣD

σi

¯uSi
A

¯uSi
D

(cid:0)σ∗

R; σi

A, σ−i∗

A ; σ−i∗

D

(cid:0)σ∗

R; σ−i∗

A ; σi

D, σ−i∗
D

(cid:1) ,

(11)

(cid:1) ,

(12)

∀m ∈ M, σ∗

R ∈ arg max
σR∈Σm
R

¯uS
R (σR | m, µ (• | m)) ,

(13)

and ∀i ∈ S,

µi (cid:0)θA | mi(cid:1) =

(cid:0)mi(cid:1) pi

A

σi∗
A
A + σi∗

A (mi) pi
σi∗
(cid:0)mi(cid:1) pi
(cid:0)mi(cid:1) pi

D (mi) (cid:0)1 − pi
D (cid:54)= 0, and µi (cid:0)θA | mi(cid:1) ∈ [0, 1] , if
D = 0. Additionally, µi (cid:0)θD | mi(cid:1) =

A

(cid:1) ,

(14)

(cid:0)mi(cid:1) pi

A+σi∗
if σi∗
D
A
A + σi∗
σi∗
D
A
1 − µi (cid:0)θA | mi(cid:1) in both cases.

(cid:0)mi(cid:1) pi

Note that we have denoted the equilibrium utilities for Ai

and Di, i ∈ S by

A = ¯uSi
vi
A

D = ¯uSi
vi
D

(cid:0)σ∗

R; σi∗

A , σ−i∗

A ; σ−i∗

D

(cid:0)σ∗

R; σ−i∗

A ; σi∗

D , σ−i∗
D

(cid:1) ,

(cid:1) ,

(15)

(16)

and the vectors of those values by vA = (cid:2)vi
i∈S , vD =
(cid:2)vi
(cid:3)
i∈S . We now have the complete description of the sig-
naling game mapping Eq. (2), where T S : [0, 1]N → P(R2N ).
This mapping constitutes the middle layer of Fig. 2.

A

D

(cid:3)

1) Device Dynamics: Each device in the IoCT is governed
by dynamics. We can capture the dynamics of the things by
the linear system model

x[k + 1] = Ax[k] + Bu[k] + w[k],

(17)

where A ∈ Rn×n, B ∈ Rn×q, x[k] ∈ Rn is the system
state, u[k] ∈ Rq is the control input, w[k] denotes the system
white noise, and x[0] = x0 ∈ Rn is given. Let y[k] ∈ RN
represent data from cloud services which suffers from white,
additive Gaussian sensor noise given by the vector v[k]. We
have y[k] = Cx[k] + v[k], where C ∈ RN ×n is the output
matrix. Let the system and sensor noise processes have known
covariance matrices E {w[k]w(cid:48)[k]} = ξ, E {v[k]v(cid:48)[k]} = ζ,
where ξ and ζ are symmetric, positive, semi-deﬁnite matrices,
and w(cid:48)[k] and v(cid:48)[k] denote the transposes of the noise vectors.
In addition, for each cloud service i ∈ S, the attacker Ai and
defender Di in the signaling game choose whether to add bias
D[k] ∈ R denote
terms to the measurement yi[k]. Let ∆i
these bias terms. The actual noise levels that R observes
depends on who controls the service in the FlipIt game.
Recall that the vector of types of each service is given by
θ = (cid:2)θi(cid:3)
i∈S . Let 1{•} represent the indicator function, which
takes the value of 1 if its argument is true and 0 otherwise.
Then, deﬁne the matrix

A[k], ∆i

Ξθ = diag (cid:8)(cid:2) 1{θ1=θA}

. . . 1{θN =θA}

(cid:3)(cid:9) .

Including the bias term, the measurements are given by

˜y[k] = Cx[k]+v[k]+Ξθ[k]∆A[k]+(I − Ξθ[k]) ∆D[k], (18)

where I is the N -dimensional identity matrix.

2) Observer-Based Optimal Feedback Control: Let F, Q,
and R be positive-deﬁnite matrices of dimensions n×n, n×n,
and q × q, respectively. The device chooses the control u that
minimizes the operational cost given by

(cid:40)

J = E

x(cid:48)[T ]F x[T ] +

T −1
(cid:88)

k=0

x(cid:48)[k]Qx[k] + u(cid:48)[k]Ru[k]

,

(cid:41)

(19)

subject to the dynamics of Eq. (17).

To attempt to minimize Eq. (19), the device uses observer-
based optimal feedback control. Deﬁne P [k] by the forward
Riccati difference equation

P [k + 1] = A

(cid:16)

P [k] − P [k]C (cid:48)

(cid:17)
(CP [k]C (cid:48) + ξ)−1 CP [k]

A(cid:48) + ζ,

with P [0] = E{(x[0] − ˆx[0])(x[0] − ˆx[0])(cid:48)}, and let L[k] =
P [k]C (cid:48)(CP [k]C (cid:48) + ξ)−1. Then the observer is a Kalman ﬁlter
given by [39]

C. Physical Layer: Optimal Control

ˆx[k + 1] = Aˆx[k] + Bu[k] + L[k] (˜y[k] − C ˆx[k]) .

The utility function uS

R (θ, m, a) is determined by the per-
formance of the device controller as shown in Fig. 2. A block
illustration of the control system is shown in Fig. 5. Note that
the physical system in the diagram refers to the IoCT devices.

3) Innovation: In this context, the term ˜y[k] − C ˆx[k] is
the innovation. Label the innovation by ν[k] = ˜y[k] − C ˆx[k].
This term is used to update the estimate ˆx[k] of the state. We
consider the components of the innovation as the signaling-
game messages that the device decides whether to trust. Let

Fig. 5: A block diagram shows the various components of the control system in the iSTRICT. The physical system refers to IoCT device whose states are
collected by sensors. Each Ai and Di in the cloud layer can add bias terms to the measured senor data before sending it to the receiver. R decides whether
to trust or not trust each of the cloud services, and then designs an optimal control for the physical system. Since the optimal control is designed over a
ﬁnite-horizon cost criterion, the loop terminates after T time steps.

us label each component of the innovation as low-risk or high-
risk. For each i ∈ S, we classify the innovation as

mi =

(cid:40)

mL,
mH ,

if (cid:12)
if (cid:12)

(cid:12)νi[k](cid:12)
(cid:12)νi[k](cid:12)

(cid:12) ≤ (cid:15)i
(cid:12) > (cid:15)i ,

where (cid:15) ∈ RN
++ is a vector of thresholds. Since R is
strategic, it chooses whether to incorporate the innovations
using the signaling game strategy σR(a | m), given the vector
of messages m.

Deﬁne a strategic innovation ﬁlter by DσR : RN → RN
such that, given innovation ν, the components of gated inno-
vation ¯ν = DσR (ν) are given by

¯νi =

(cid:40)

νi,
0,

if ai = aT
otherwise

,

for i ∈ S. Now we incorporate the function DσR into the
estimator by

ˆx[k + 1] = Aˆx[k] + Bu[k] + L[k]DσR (ν[k]) .

4) Feedback Controller: The optimal controller is given by

the feedback law u[k] = −K[k]ˆx[k], with gain

K[k] = (B(cid:48)[k]S[K + 1]B + R)−1 B(cid:48)S[k + 1]A,

where S[k] is obtained by the backward Riccati difference
equation

S[k] = A(cid:48)(cid:16)

S[k + 1] − S[k + 1]B

(B(cid:48)S[k + 1]B + R)−1 B(cid:48)S[k + 1]

(cid:17)

A + Q,

with S[T ] = F.

5) Control Criterion to Utility Mapping: The control cost
J determines the signaling game utility of the device R.
This utility should be monotonically decreasing in J. We
consider a mapping J (cid:55)→ uS
R (θ, m, a) =
(¯vR − vR)e−βRJ + ¯vR, where ¯vR and vR denote maximum
and minimum values of the utility, and βR represents the
sensitivity of the utility to the control cost.

R deﬁned by uS

D. Deﬁnition of Gestalt Nash Equilibrium

We now deﬁne the equilibrium concept for the overall
game, which is called Gestalt Nash equilibrium (GNE). To
differentiate with the equilibria in FlipIt game and signaling
game, we use notations with a superscript † to emphasize the
solution at GNE.

D

(Gestalt Nash

A represents

equilibrium) The

3.
(cid:17)
, where p†

Deﬁnition
triple
(cid:16)
A, v†
A, v†
p†
the probability of
compromise of each of the cloud services, and v†
A and v†
D
represent the vectors of equilibrium utilities for Ai and Di,
i ∈ S, constitutes a Gestalt Nash equilibrium of the overall
game if both Eq. (20) and Eq. (21) are satisﬁed:

∀i ∈ {1, . . . , m} , pi†

A = T Fi

(cid:16)

A, vi†
vi†

D

(cid:17)

,

(20)















v1†
A
v2†
A
...
vN †
A















,















v1†
D
v2†
D
...
vN †
D

∈ T S















.















p1†
A
p2†
A
...
pN †
A

(21)

According to Deﬁnition 3, the overall game is at equilibrium
when, simultaneously, each of the FlipIt games is at
equilibrium and the one signaling game is at equilibrium.

IV. EQUILIBRIUM ANALYSIS

In this section, we give conditions under which a GNE
exists. We start with a set of natural assumptions. Then we
narrow the search for feasible equilibria. We show that the
signaling game only supports pooling equilibria, and that only
low-risk pooling equilibria survive selection criteria. Finally,
we create a mapping that composes the signaling and FlipIt
game models. We show that this mapping has a closed graph,
and we use Kakutani’s ﬁxed-point
theorem to prove the
existence of a GNE. In order to avoid obstructing the ﬂow
of the paper, we brieﬂy summarize the proofs of each lemma,
and we refer readers to the GNE derivations for a single cloud
service in [25] and [40].

Physical SystemSensorsEstimationOptimal ControlSystem StateSensor MeasurementsNext Step ControlEstimated System State[1][][][]xkAxkBukwk[][][]ykCxkvk[]xk[][][][]ˆ([])[][]ADkykkkIkkCxkCloud-Enabled IoCT InterfaceInnovationGated Innovation[1]ˆ[1][1]ukKkxkˆˆ[1][][][]([])RxkAxkBukLkDkˆ[1]xk[]k[]k[1]uk[]ykReceiver’s Strategy[]([])RkDk[]iAkAttacker’s BehaviorDefender’s Behavior[]iDkOptimal Control of the Physical LayerTABLE II: Assumptions

Assumption (∀i ∈ S)

0 = uSi
0 < uSi

A (mL, aN ) = uSi
A (mL, aT ) < uSi

A (mH , aN ) = uSi
D (mH , aT ) < uSi

D (mL, aN ) = uSi
D (mL, aT ) < uSi

D (mH , aN ) .
A (mH , aT ) .

∀θ−i, m−i, a−i, uS
∀θ−i, m−i, a−i, uS

∀θ, m−i, a−i, uS

R (θ, m, ¯a) > uR (θ, m, ˜a) , where θi = θA, mi = mH , ¯a−i = ˜a−i = a−i, ¯ai = aN , and ˜ai = aT .
R (θ, m, ˜a) , where θi = θD, mi = mL, ¯a−i = ˜a−i = a−i, ¯ai = aN , and ˜ai = aT .
R (θ, m, ¯a) < uS
R (θ, ˜m, a) , where ai = aT , ¯m−i = ˜m−i = m−i, ¯mi = mL, and ˜mi = mH .
R (θ, ¯m, a) > uS

#

A1
A2
A3
A4
A5

A. Assumptions

A (m, a) ≡ uSi

D (m, a) ≡ uSi

For simplicity, let the utility functions of each signaling
game sender i be dependent only on the messages and actions
on cloud service i. That is, ∀i ∈ S, uSi
A (mi, ai)
and uSi
D (mi, ai). This can be removed, but
it makes analysis more straightforward. Table II gives ﬁve
additional assumptions. Assumption A1 assumes that each Ai
and Di, i ∈ S, get zero utility when their messages are not
trusted. A2 assumes an ordering among the utility functions
for the senders in the signaling game. It implies that a) Ai
and Di get positive utility when their messages are trusted;
b) for trusted messages, A prefers mH to mL; and c) for
trusted messages, D prefers mL to mH . These assumptions
are justiﬁed if the goal of the attacker is to cause damage (with
a high-risk message), while the defender is able to operate
under normal conditions (with a low-risk message).

Assumptions A3-A4 give natural requirements on the utility
function of the device. First, the worst case utility for R is
trusting a high-risk message from an attacker. Assume that, on
every channel i ∈ S, regardless of the messages and actions
on the other channels, R prefers to play ai = aN if mi = mH
and θi = θA. This is given by A3. Second, the best case utility
for R is trusting a low-risk message from a defender. Assume
that, on every channel i ∈ S, regardless of the messages and
actions on the other channels, R prefers to play ai = aT
if mi = mL and θi = θD. This is given by A4. Finally,
under normal operating conditions, R prefers trusted low-risk
messages compared to trusted high risk messages from both
an attacker and a defender. This is given by A5.

B. GNE Existence Proof

We prove the existence of a GNE using Lemmas 1-5 and

Theorem 1.

1) Narrowing the Search for GNE: Lemma 1 eliminates

some candidates for GNE.

A, vi

D > 0.

D) satisﬁes: ∀i ∈ S, vi

(GNE Existence Regimes [40]) Every GNE

Lemma 1.
A, v†
A, v†
(p†
The basic idea behind the proof of Lemma 1 is that vi

A = 0
or vi
D = 0 cause either Ai or Di to give up on capturing or
recapturing the cloud. The cloud becomes either completely
secure or completely insecure, neither of which can result in a
GNE. Lemma 1 has a signiﬁcant intuitive interpretation given
by Remark 1.
Remark 1. In any GNE, for all i ∈ S, R plays ai = aT
with non-zero probability. In other words, R never completely
ignores any cloud service.

2) Elimination of Separating Equilibria:

In signaling
games, equilibria in which different types of senders trans-
mit the same message are called pooling equilibria, while
equilibria in which different types of senders transmit distinct
messages are called separating equilibria [38]. The distinct
messages in separating equilibria completely reveal the type
of the sender to the receiver. Lemma 2 is typical of signaling
games between players with opposed incentives.

Equilibria

Separating

2.
all
A , . . . σN ∗

(No
pure-strategy
D , . . . σN ∗
D

[40])
Lemma
Consider
equilibria
(cid:1) in which each Ai and
(cid:0)σ∗
R; σ1∗
Di, i ∈ S, receive positive expected utility. All such equilibria
D (m) for all m ∈ M and i ∈ S. That is,
satisfy σi∗
the senders on each cloud service i use pooling strategies.

A (m) = σi∗

signaling-game

A ; σ1∗

Lemma 2 holds because it is never incentive-compatible for
an attacker Ai to reveal his type, in which case R would not
trust Ai. Hence, Ai always imitates Di by pooling.

3) Signaling Game Equilibrium Selection Criteria: Four
pooling equilibria are possible in the signaling game: Ai and
Di transmit mi = mL and R plays ai = aT (which we
label EQ-L1), Ai and Di transmit mi = mL and R plays
ai = aN (EQ-L2), Ai and Di transmit mi = mH and R
plays ai = aT (EQ-H1), and Ai and Di transmit mi = mH
and R plays ai = aN (which we label EQ-H2). In fact, the
signaling game always admits multiple equilibria. Lemma 3
performs equilibrium selection.

Lemma 3. (Selected Equilibria) The intuitive criterion [41]
and the criterion of ﬁrst mover advantage imply that equilibria
EQ-L1 and EQ-L2 will be selected.

Proof: The ﬁrst mover advantage states that, if both Ai
and Di prefer one equilibrium over the others, they will choose
the preferred equilibrium. Thus, Ai and Di will always choose
EQ-L1 or EQ-H1 if either of those is admitted. When neither
is admitted, we select EQ-L22. When both are admitted, we
use the intuitive criterion to select among them. Assumption
A2 states that Ai prefers EQ-H1, while Di prefers EQ-L1.
Thus, if a sender deviates from EQ-H1 to EQ-L1, R can
infer that the sender is a defender, and trust the message.
Therefore, the intuitive criterion rejects EQ-H1 and selects
EQ-L1. Finally, Assumption A5 can be used to show that EQ-
H1 is never supported without EQ-L1. Hence, only EQ-L1
and EQ-L2 survive the selection criteria.

At the boundary between the parameter regime that supports
EQ-L1 and the parameter regime that supports EQ-L2, R can
choose any mixed strategy, in which he plays both ai = aT

2This is without loss of generality, since A1 implies that the sender utilities

are the same for EQ-L2 and EQ-H2.

and ai = aN with some probability. Indeed, for any cloud
service i ∈ S, hold pj
A, j (cid:54)= i and j ∈ S, constant, and let pi(cid:5)
A
denote the boundary between the EQ-L1 and EQ-L2 regions.
Then Remark 2 gives an important property of pi(cid:5)
A .
Remark 2. By Lemma 1, all GNE satisfy pi
A ≤ pi(cid:5)
A . Therefore,
pi(cid:5)
A is a worst-case probability of compromise.
Remark 2 is a result of the combination of the signaling
and FlipIt games. Intuitively, it states that strategic trust
in the communication layer is able to limit the probability of
compromise of a cloud service, regardless of the attack and
defense costs in the cyber layer.

4) FlipIt Game Properties: For the FlipIt games on
each cloud service i ∈ S, denote the ratio of attacker and
D. For i ∈ S,
defender expected utilities by vi
deﬁne the set Vi by
(cid:110)

AD = vi

A/vi

(cid:111)

v ∈ R+ : 0 ≤ v ≤ uSi

A (mL, aT )/uSi

D (mL, aT )

Vi =

.

Also deﬁne the set PRi, i ∈ S, by PRi =
(cid:110)

(cid:16)

p ∈ [0, 1] : 0 < p < T Fi

A (mL, aT ), uSi
uSi

D (mL, aT )

(cid:17)(cid:111)

.

Next, for i ∈ S, deﬁne modiﬁed FlipIt game mappings
˜T Fi : Vi → PRi, where

AD

(cid:1) ⇐⇒ pi∗

A ∈ T Fi (cid:0)vi

A = ˜T Fi (cid:0)vi
pi∗
Then Lemma 4 holds.
Lemma 4. (Continuity of ˜T Fi [25]) For i ∈ S, ˜T Fi (vi
continuous in vi

A, vi
D

(cid:1) .

AD ∈ Vi.

(22)

AD) is

The dashed curve in Fig. 6 gives an example of ˜T Fi for
i = 1. The independent variable is on the vertical axis, and
the dependent variable is on the horizontal axis.
5) Signaling Game Properties: Let vAD = [vi
i∈S Vi, and PR = (cid:81)

AD]i∈S, V =
i∈S PRi. Deﬁne a modiﬁed signaling

(cid:81)
game mapping by ˜T S : PR → P(V) such that
AD ∈ ˜T S (pA) ⇐⇒ (v∗
v∗

D) ∈ T S (pA) ,

A, v∗

(23)

where T S selects the equilibria given by Lemma 3. Then we
have Lemma 5.
Lemma 5. (Properties of ˜T S) Construct a graph

G =

(cid:110)

(pA, v∗

AD) ∈ PR × V : v∗

AD ∈ ˜T S (pA)

(cid:111)

,

The graph G is closed. Additionally, for every pA ∈ PR, the
set of outputs of ˜T S(pA) is non-empty and convex.

Proof: The graph G is closed because it contains all of
its limit points. The set of outputs is non-empty because a
signaling game equilibrium exists for all pA. It is convex
because expected utilities for mixed-strategy equilibria are
convex combinations of pure strategy utilities and because
assumption A2 implies that convexity also holds for the ratio
of the utilities.

The step functions (plotted with solid lines) in Figure 6 plot

example mappings from p1
on the vertical axis for vAD ∈ ˜T S(pA), holding pi
{2, 3, . . . , N } ﬁxed. It is clear that the graphs are closed.

A on the horizontal axis to v1

AD
A, i ∈

Fig. 6: The (solid) step-functions depict modiﬁed signaling game mappings
˜T S for ﬁve different sets of parameters. The (dashed) curve depicts a modiﬁed
FlipIt game mapping ˜T F1 . The intersection is a GNE. The ﬁgure shows
only one dimension out of N dimensions.

6) Fixed-Point Theorem: By combining Eq. (20-21) with
Eq. (22) and Eq. (23), we see that the vector of equilibrium
utility ratios v†
D) must
satisfy

AD]i∈S in any GNE (p†

AD = [vi†

A, v†

A, v†















v1†
AD
v2†
AD
...
vN †
AD

∈ ˜T S





















˜T F1
˜T F2

˜T F2

(cid:17)

(cid:17)

(cid:17)





















.

(cid:16)

(cid:16)

v1†
AD
v2†
AD
...
(cid:16)
vN †
AD

Denote this composed mapping by ˜T S◦F : V → P(V)
such that the GNE requirement can be written by v†
AD ∈
˜T S◦F (v†
AD). Figure 6 gives a one-dimensional intuition be-
hind Theorem 2. The example signaling game step functions
˜T S have closed graphs, and the outputs of the functions are
non-empty and convex. The FlipIt curve ˜T F1 is continu-
ous. The two mappings are guaranteed to intersect, and the
intersection is a GNE.

According to Lemma 5, the graph G of the signaling game
mapping is closed, and the set of outputs of ˜T S is non-empty
and convex. Since each modiﬁed FlipIt game mapping ˜T Fi,
i ∈ S is a continuous function, each ˜T Fi produces a closed
graph and has non-empty and (trivially) convex outputs. Thus,
the graph of the composed mapping, ˜T S◦F , is also closed, and
has non-empty and convex outputs. Because of this, we can
apply Kakutani’s ﬁxed-point theorem, famous for its use in
proving Nash equilibrium.

Theorem 1. (Kakutani Fixed-Point Theorem [42]) - Let Φ be
a non-empty, compact, and convex subset of some Euclidean
space Rn. Let Z : Φ → P(Φ) be a set-valued function on
Φ with a closed graph and the property that, for all φ ∈ Φ,
Z(φ) is non-empty and convex. Then Z has a ﬁxed point.

The mapping ˜T S◦F is a set-valued function on V, which is
a non-empty, compact, and convex subset of RN . ˜T S◦F also
has a closed graph, and the set of its outputs is non-empty and
convex. Therefore, ˜T S◦F has a ﬁxed-point, which is precisely
the deﬁnition of a GNE. Hence, we have Theorem 2.

-4-3.5-3-2.5-2-1.5-1-0.5000.511.522.533.544.55Theorem 2. (GNE Existence) Let the utility functions in the
signaling game satisfy Assumptions A1-A5. Then a GNE exists.

Proof: The proof has been constructed from Lemmas 1-5

and Theorem 1.

Algorithm 1 Adaptive defense algorithm for iSTRICT

1) Initialize parameters αi
FlipIt game, and σi
signaling game
Signaling game:

A, αi
D, pi
A and σi

D, ∀i ∈ S, in each
A, pi
D, ∀i ∈ S, σR in the

2) Solve optimization problems in Eq. (11) and Eq. (12),

respectively, and obtain σi∗

D , ∀i ∈ S
3) Update belief µi(θA | mi) based on Eq.
µi(θD | mi) = 1 − µi(θA | mi), ∀i ∈ S

A and σi∗

(14), and

4) Solve receiver’s problem in Eq. (13) and obtain σ∗
R
5) If σi∗

R do not change, go to step 6; otherwise,

A , σi∗

D , σ∗

go back to step 2
A and vi

6) Obtain vi

D, ∀i ∈ S, from Eq. (15) and Eq. (16),

respectively
FlipIt game:

7) Solve defenders’ and attackers’ problems in Eq. (6) and

A and f i∗

D , ∀i ∈ S
D ) to the probability pair

Eq. (7) jointly, and obtain f i∗

8) Map the frequency pair (f i∗

A , f i∗
D ) through Eq. (3), ∀i ∈ S
D , pi∗

(pi∗
A , pi∗
9) If (pi∗

A ), ∀i ∈ S, do not change, go to step 10;

otherwise, go back to step 2
10) Return p†
A := σi∗
A := p∗
σ†
R := σ∗
R

A, σi†

A , σi†

D := σi∗

D , ∀i ∈ S, and

C. Adaptive Algorithm

Numerical simulations suggest

that Assumptions A1-A5
often hold. If this is not
the case, however, Algorithm 1
can be used to compute the GNE. The main idea of the
adaptive algorithm is to update the strategic decision-making
of different entities in iSTRICT iteratively.

A ; σ1∗

A , . . . σN ∗

D , . . . σN ∗
D

Given the probability vector pA, Lines 2-5 of Algorithm
1 compute a PBNE for the signaling game which consists
of the strategy proﬁle (cid:0)σ∗
(cid:1) and
R; σ1∗
belief vector µ (θ | m) . The algorithm computes the PBNE
iteratively using best response. The vectors of equilibrium
utilities (v∗
D) are given by Eq. (15) and Eq. (16). Using
(v∗
A, v∗
D) , Line 7 of Algorithm 1 updates the equilibrium
strategies of the FlipIt games and arrives at a new prior
D ), ∀i ∈ S, through the mapping in
probability pair (pi∗
Eq. (3). This initializes the next round of the signaling game
with the new (pi∗
D ). The algorithm terminates when the
probabilities remain unchanged between rounds.

A , pi∗

A , pi∗

A, v∗

To illustrate Algorithm 1, we next present an example in-
cluding N = 4 cloud services. The detailed physical meaning
of each service will be presented in Section V. Speciﬁcally,
the costs of renewing control of cloud services are α1
A = $2k,
A = $12k, and α1
α2
A = $0.8k, α3
D = $0.2k,
α1
D = $0.1k, α1
D = $0.03k, for the attackers
and defenders, respectively. The initial proportions of time
of each attacker and defender controlling the cloud services

A = $10k, α4
D = $0.05k, α1

D = 0.6, p3

A = 0.6, p4

A = 0.2, p2

A = 0.4, p3

are p1
A = 0.15, and
p1
D = 0.4, p4
D = 0.8, p2
D = 0.85, respectively.
For the signaling game at the communication layer, the initial
probabilities that attacker sends low-risk message at each
cloud service are equal to 0.2, 0.3, 0.1, and 0.4, respectively.
Similarly, the defender’s initial probabilities of sending low-
risk message are equal to 0.9, 0.8, 0.95, and 0.97, respectively.
Figure 7 presents the results of Algorithm 1 on this example
system. The result in Fig. 7a shows that the cloud services
1 and 2 can be compromised by the attacker. Figure. 7a
shows the device’s belief on the received information. At the
GNE, the attacker also sends low-risk message to deceive the
receiver and gain utility when controlling the cloud service.
Four representative devices’ actions are shown in Fig. 7b,
low-risk message in
where the devices strategically reject
some cases due to the couplings between layers in iSTRICT.
Because of the large attack and defense cost ratios and the
crucial impact on physical system performance of services 3
and 4, p3
D = 1, insuring a secure information provision.
In addition, the defense strategies at the cloud layer and the
communication layer are adjusted adaptively according to the
attackers’ behaviors. Within each layer, all players are required
to best respond to the strategies of the other players. This
cross-layer approach enables a defense-in-depth mechanism
for the devices in iSTRICT.

D = p4

V. APPLICATION TO AUTONOMOUS VEHICLE CONTROL

In this section, we apply iSTRICT to a cloud-enabled
autonomous vehicle network in which the framework of ve-
hicular cloud computing is similar to the one in [43]. Two au-
tonomous vehicles use an observer to estimate their positions
and velocities based on measurements from six sources, four
of which may be compromised. They also implement optimal
feedback control based on the estimated state.

A. Autonomous Vehicle Security

Autonomous vehicle technology will make a powerful im-
pact on several industries. In the automotive industry, tra-
ditional car companies as well as technology ﬁrms such
as Google [44] are racing to develop autonomous vehicle
technology. Maritime shipping is also an attractive application
of autonomous vehicles. Autonomous ships are expected to be
safer, higher-capacity, and more resistant to piracy attacks [45].
Finally, unmanned aerial vehicles (UAVs) have the potential
to reshape ﬁelds such as mining, disaster relief, and precision
agriculture [46].

Nevertheless, autonomous vehicles pose clear safety risks.
In ground transportation, in March of 2018, an Uber self-
driving automobile struck and killed a pedestrian [47]. On
the sea, multiple crashes of ships in the Unites States Navy
during 2017 [48] have prompted concerns about too much
reliance on automation. In the air, cloud-enabled UAVs could
be subject to data integrity or availability attacks [49]. In
general, autonomous vehicles rely on many remote sources
(e.g., other vehicles, GPS signals,
location-based services)
for information. In the most basic case, these sources are
subject to errors that must be handled robustly. In addition,

(a) Device belief

Fig. 8: We use bicycle steering models from [50] to conceptually capture
the vehicle dynamics. The vehicle states are given by x1[k] : ﬁrst vehicle
position, x2[k] : ﬁrst vehicle angle; x3[k] : offset between vehicles; x4[k] :
second vehicle angle. Controls u1[k] and u2[k] represent the steering angles
of the ﬁrst and second vehicles, respectively.

(b) Device action

(c) FlipIt game

Fig. 7: Adaptive Algorithm with four cloud services. (a) and (b) depict each
device’s belief and action, respectively. (c) shows the result of cloud security.
The algorithm converges to a GNE in four steps, where one step represents
a round of updates including the FlipIt game and signaling game.

the sources could also be selﬁsh and strategic. For instance,
an autonomous ship could transmit its own coordinates dishon-
estly in order to clear its own shipping path of other vessels.
In the worst case, the sources could be malicious. An attacker
could use a spoofed GPS signal in order to destroy a UAV or
to use the UAV to attack another target. In all of these cases,
autonomous vehicles must decide whether to trust the remote
sources of information.

Fig. 9: Local sensors include a localization camera on vehicle 1 and a range
ﬁnding device on vehicle 2. Remote sensors include magnetic compass sensors
and GPS receivers on both vehicles.

B. Physical-Layer Implementation

We consider an interaction between nine agents. Two au-
tonomous vehicles implement observer-based optimal feed-
back control according to the iSTRICT framework. Each
vehicle has two states: position and angle. Thus, the combined
system has the state vector x[k] ∈ R4 described in Fig. 8. The
states evolve over ﬁnite horizon k ∈ {0, 1, . . . , T }.

These states are observed through both remote and local
measurements. Figure 9 describes these measurements. The
local measurements y5[k] and y6[k] originate from sensors
on the autonomous vehicle, so these are secure. Hence, the
autonomous vehicle always trusts y5[k] and y6[k]. In ad-
dition, while the magnetic compass sensors are subject to
electromagnetic attack, this involves high attack costs α3
A and
A. The defense algorithm yields that R always trusts y3[k]
α4
and y4[k] at the GNE. The remote measurements ˜y1[k] and
˜y2[k] are received from cloud services that may be controlled
by defenders D1 and D2, or that may be compromised by
attackers A1 and A2.

A[k] or ∆2

In the signaling game, attackers A1 and A2 may add bias
A[k] if θ1 = θA or θ2 = θA, respectively.
terms ∆1
Therefore, the autonomous vehicles must strategically decide
whether to trust these measurements. Each ˜yi[k], i ∈ {1, 2},
is classiﬁed as a low-risk (mi = mL) or high-risk (mi =
mH ) message according to an innovation ﬁlter. R decides
whether to trust each message according to the action vector
a = [ a1 a2 ](cid:48), where a1, a2 ∈ {aN , aT }. We seek an
equilibrium of the signaling game that satisﬁes Deﬁnition 2.

0510Step00.51ProbabilityDevice'sBelief7(3jm)71(3AjmL)71(3AjmH)71(3DjmL)71(3DjmH)0510Step00.51ProbabilityDevice'sBelief7(3jm)72(3AjmL)72(3AjmH)72(3DjmL)72(3DjmH)0510Step00.51ProbabilityDevice'sBelief7(3jm)73(3AjmL)73(3AjmH)73(3DjmL)73(3DjmH)0510Step00.51ProbabilityDevice'sBelief7(3jm)74(3AjmL)74(3AjmH)74(3DjmL)74(3DjmH)0510Step00.20.40.60.81ProbabilityCloudSignalRisks(mL;mL;mL;mL)(aT;aT;aT;aT)(aT;aN;aT;aT)(aN;aT;aT;aT)(aN;aN;aT;aT)0510Step00.20.40.60.81ProbabilityCloudSignalRisks(mL;mH;mH;mH)(aT;aT;aN;aN)(aT;aN;aN;aN)(aN;aT;aN;aN)(aN;aN;aN;aN)0510Step00.20.40.60.81ProbabilityCloudSignalRisks(mH;mL;mH;mL)(aT;aT;aN;aT)(aT;aN;aN;aT)(aN;aT;aN;aT)(aN;aN;aN;aT)0510Step00.20.40.60.81ProbabilityCloudSignalRisks(mH;mH;mL;mH)(aT;aT;aT;aN)(aT;aN;aT;aN)(aN;aT;aT;aN)(aN;aN;aT;aN)0246810Step00.10.20.30.40.50.60.70.80.91ProbabilityProbabilityofControllingtheCloudServicesp1Ap2Ap3Ap4Ap1Dp2Dp3Dp4D𝑥1[𝑘]𝑥4[𝑘]𝑥2[𝑘]𝑥3[𝑘]𝑢1[𝑘]𝑢2[𝑘]𝑦1[𝑘]𝑦2[𝑘]𝑦3[𝑘]𝑦4[𝑘]𝑦5[𝑘]𝑦6[𝑘]C. Signaling Game Results

Figure 10 depicts the results of three different signaling-
game strategy proﬁles for the attackers, defenders, and device,
using the software MATLAB [51]. The observer and controller
are linear, so the computation is rapid. Each iteration of the
computational elements of the control loop depicted in Fig. 5
takes less than 0.0002s on a Lenovo ThinkPad L560 laptop
with 2.30 GHz processor and 8.0 GB of installed RAM.

In all of the scenarios, we set the position of the ﬁrst vehicle
to a track a reference trajectory of x1[k] = 4, the offset
between the second vehicle and the ﬁrst vehicle to track a
reference trajectory of x3[k] = 8, and both angles to target
x2[k] = x4[k] = 0. Column 1 depicts a scenario in which
A1 and A2 send mH and R plays a1 = a2 = aT . The
spikes in the innovation represent the bias terms added by
the attacker when he controls the cloud. The spikes in Fig.
10(a) are large because these the attacker adds bias terms
corresponding to high risk messages. These bias terms cause
large deviations in the position and angle from their desired
values (Fig. 10(d)). For instance, at time 10, the two vehicles
come within approximately 4 units of each other.

Column 2 depicts the best response of R to this strategy.
The vehicle uses an innovation ﬁlter (here, at (cid:15)1 = (cid:15)2 = 10)
which categorizes the biased innovations as mH . The best
response is to choose
(cid:20) mL
mL
(cid:20) mH
mL

(cid:18)(cid:20) aT
aN
(cid:18)(cid:20) aN
aN

(cid:18)(cid:20) aT
aT
(cid:18)(cid:20) aN
aT

(cid:20) mL
mH
(cid:20) mH
mH

= σR

= σR

= 1,

= 1,

σR

σR

(cid:21)(cid:19)

(cid:21)(cid:19)

(cid:21)(cid:19)

(cid:21)(cid:19)

(cid:21)

(cid:21)

(cid:21)

(cid:21)

|

|

|

|

i.e., to trust only low-risk messages. The circled data points in
Fig. 10(b) denote high-risk innovations from the attacker that
are rejected. Figure 10(e) shows that this produces very good
results in which the positions of the ﬁrst and second vehicle
converge to their desired values of 4 and −4, respectively, and
the angles converge to 0.

A[k] and ∆2

But iSTRICT assumes that the attackers are also strategic.
A1 and A2 realize that high-risk messages will be rejected,
so they add smaller bias terms ∆1
A[k] which
are classiﬁed as mL. This is depicted by Fig. 10(c). It is
not optimal for the autonomous vehicle to reject all low-risk
messages, because most such messages come from a cloud
controlled by the defender. Therefore, the device must play
a1 = a2 = aT . Nevertheless, Fig. 10(f) shows that these
low-risk messages create signiﬁcantly less disturbance than
the disturbances from high-risk messages in Fig. 10(d). In
summary, the signaling-game equilibrium is for A1, A2, D1,
and D2 to transmit low-risk messages and for R to trust
low-risk messages while rejecting high-risk messages off the
equlibrium path.

D. Results of the FlipIt Games

Meanwhile, A1 and D1 play a FlipIt game for control
of Cloud Service 1, and A2 and D2 play a FlipIt game
for control of Cloud Service 2. Based on the equilibrium of
the signaling game, all players realize that the winners of the
FlipIt games will be able to send trusted low-risk messages,

but not trusted high-risk messages. Based on Assumption A2,
low-risk messages are more beneﬁcial to the defenders than
to the attackers. Hence, the incentives to control the cloud are
larger for defenders than for attackers. This results in a low
p1
A and p2
A from the FlipIt game. If the equilibrium from
the previous subsection holds for these prior probabilities, then
the overall ﬁve-player interaction is at a GNE as described in
Deﬁnition 3 and Theorem 2.

Table III is useful for benchmarking the performance of
iSTRICT. The table lists the empirical value of the control cri-
terion given by Eq. (19). The ﬁrst three columns quantify the
performance depicted in Fig. 10. Column 1 is the benchmark
case, in which A1 and A2 add high-risk noise, and the noise
is mitigated somewhat by a Kalman ﬁlter, but the bias is not
handled optimally. Column 2 shows the improvement provided
by iSTRICT against a nonstrategic attacker, and Column
3 shows the improvement provided by iSTRICT against a
strategic attacker. The improvement is largest in Column 2,
but it is signiﬁcant against a strategic attacker as well.

E. GNE for Different Parameters

Now consider a parameter change in which A2 develops
new malware to compromise the GPS position signal ˜y2[k] at
a much lower cost α2
A. (See Subsection III-A). In equilibrium,
this increases p2
A from 0.03 to 0.10. A higher number of
perturbed innovations are visible in Fig. 11(a). This leads to
the poor state trajectories of Fig. 11(d). The control cost from
Eq. (19) increases, and the two vehicles nearly collide at time
8. The large changes in angles show that the vehicles turn
rapidly in different directions.

(cid:21)

(cid:21)(cid:19)

In this case, R’s best response is
(cid:20) mL
mL
(cid:20) mH
mL

(cid:18)(cid:20) aT
aN
(cid:18)(cid:20) aN
aN

(cid:18)(cid:20) aT
aN
(cid:18)(cid:20) aN
aN

= σR

= σR

(cid:21)(cid:19)

(cid:21)

|

|

σR

σR

(cid:21)

(cid:21)

(cid:20) mL
mH
(cid:20) mH
mH

|

|

(cid:21)(cid:19)

(cid:21)(cid:19)

= 1,

= 1,

i.e., to not trust even the low-risk messages from the remote
GPS signal. The circles on ν2[k] for all k in Fig. 11(b)
represent not trusting. The performance improvement can be
seen in Fig. 11(e).

Interestingly, though, Remark 1 states that this cannot be
an equilibrium. In the FlipIt game, A2 would have no
incentive to capture Cloud Service 2, since R never trusts that
cloud service. This would lead to p2
A = 0. Moving forward, R
would trust Cloud Service 2 in the next signaling game, and
A2 would renew his attacks. iSTRICT predicts that this pattern
of compromising, not trusting, trusting, and compromising
would repeat in a limit cycle, and not converge to equilibrium.
A mixed-strategy equilibrium, however, does exist. R
chooses a mixed strategy in which he trusts low-risk messages
on Cloud Service 2 with some probability. This probability
incentivizes A2 to attack the cloud with a frequency between
those that best respond to either of R’s pure strategies. At the
GNE, the attack frequency of A2 produces 0 < p2
A < 0.10 in
A = p2(cid:5)
the FlipIt game. In fact, this is the worst case p2
A
from Remark 2. In essence, R’s mixed-strategy serves as a

(a) Innovation

(b) Innovation

(c) Innovation

(d) State trajectories

(e) State trajectories

(f) State trajectories

Fig. 10: Column 1: A1 and A2 send mH and R plays [ aT
A2 send mL and R plays [ aT

aT ](cid:48). Row 1: Innovation, Row 2: State trajectories.

aT ](cid:48), Column 2: A1 and A2 send mH and R plays [ aN aN ](cid:48), Column 3: A1 and

TABLE III: Control Costs and Benchmarks for the Simulations depicted in Fig. 11-12

Trial 1
Trial 2
Trial 3
Trial 4
Trial 5
Trial 6
Trial 7
Trial 8
Trial 9
Trial 10
Average

Ungated mH
274,690
425,520
119,970
196,100
229,870
139,880
129,980
97,460
125,490
175,670
191,463

Gated mH
42,088
42,517
42,444
42,910
42,733
42,412
42,642
42,468
42,633
42,466
42,531

Trusted mL
116,940
123,610
125,480
89,980
66,440
69,510
116,560
96,520
50,740
78,700
93,448

Trusted, Frequent mL
185,000
211,700
213,500
239,400
94,400
2,581,500
254,000
1,020,000
250,900
4,182,600
923,300

Untrusted, Frequent mL Mixed Trust with mL

128,060
121,910
144,090
138,350
135,160
119,700
138,160
130,260
138,960
135,780
133,043

146,490
143,720
130,460
135,930
139,680
125,270
122,790
146,370
151,470
126,550
136,873

last-resort countermeasure to the parameter change due the
new malware obtained by A2.

against a nonstrategic attacker. In both cases, the cost criterion
decreases by a factor of at least six.

Figure 11(c) depicts the innovation with a mixed strategy in
which R sometimes trusts Cloud Service 2. Figure 11(f) shows
the impact on state trajectories. At this mixed-strategy equi-
librium, A1, A2, D1, and D2 choose optimal attack/recapture
frequencies in the cloud-layer and send optimal messages in
the communications layer, and R optimally chooses which
messages to trust in the communication layer based on an
innovation ﬁlter and observer-based optimal control in the
physical layer. No players have incentives to deviate from their
strategies at the GNE.

Columns 4-6 of Table III quantify the improvements pro-
vided by iSTRICT in these cases. Column 4 is the benchmark
case, in which an innovation gate forces A2 to add low-risk
noise, but his frequent attacks still cause large damages. Col-
umn 5 gives the performance of iSTRICT against a strategic
attacker, and Column 6 gives the performance of iSTRICT

VI. CONCLUSION AND FUTURE WORK

iSTRICT attains robustness through a combination of mul-
tiple, interdependent layers of defense. At the lowest physical
layer, a Kalman ﬁlter handles sensor noise. The Kalman ﬁlter,
however, is not designed for the large bias terms that can
be injected into sensor measurements by attackers. We use
an innovation gate in order to reject these large bias terms.
But even measurements within the innovation gate should
be rejected if there is a sufﬁciently high risk that a cloud
service is compromised. We determine this threshold risk
level strategically, using a signaling game. Now, it may not
be possible to estimate these risk levels using past data.
Instead, iSTRICT estimates the risk proactively using FlipIt
games. The equilibria of the FlipIt games depend on the
incentives of the attackers and defenders to capture or reclaim

0246810-20-15-10-5051015200246810-20-15-10-5051015200246810-20-15-10-505101520024681012-8-6-4-20246810024681012-8-6-4-20246810024681012-8-6-4-20246810(a) Innovation

(b) Innovation

(c) Innovation

(d) State trajectories

(e) State trajectories

(f) FlipIt game

Fig. 11: Column 1: Innovation and state trajectories for p2
and R plays [ aT

aN ](cid:48), Column 3: Innovation and state trajectories in which R mixes strategies between [ aT

aT ](cid:48), Column 2: Innovation and state trajectories for p2
aN ](cid:48).

aT ](cid:48) and [ aT

A = 0.10

A = 0.10 and R plays [ aT

the cloud. These incentives result from the outcome of the
signaling game, which means that
the equilibrium of the
overall interaction consists of a ﬁxed point between mappings
that characterize the FlipIt games and the signaling game.
This equilibrium is a GNE.

We have proved the existence of GNE under a set of
natural assumptions, and provided an algorithm to iteratively
compute the GNE. We have shown that a device can use
iSTRICT to guarantee a worst-case compromise probability,
even without fully rejecting measurements from any of the
cloud services. Through an application to autonomous vehicle
networks, we have shown the performance gains achieved by
iSTRICT over naive strategies. Because of the modularity of
the GNE concept, the solutions to each layer do not need to be
completely recomputed when devices enter or leave the IoCT.
Future work can extend the framework to a fourth layer
composed of a cloud radio access network and a ﬁfth layer of
resource management for economic and policy issues of the
IoCT. Another promising extension is to incorporate intelligent
control designs that further mitigate the performance loss due
to cyber threats by addressing them at the physical layer.
These future directions would further contribute to policies for
strategic trust management in the dynamic and heterogeneous
IoCT.

REFERENCES

[1] M. Swan, “Sensor mania! the internet of things, wearable computing,
objective metrics, and the quantiﬁed self 2.0,” Journal of Sensor and
Actuator Networks, vol. 1, no. 3, pp. 217–253, 2012.

[2] “Internet of Things: Privacy and Security in a Connected World,” Federal

Trade Commission, Tech. Rep., January 2015.

[3] “Visions and challenges for realising the internet of things,” CERP-IoT

Cluster, European Commission, Tech. Rep., 2010.

[4] “Cyber physical syst. vision statement,” Networking and Inform. Techol.

Res. and Develop. Program, Tech. Rep., 2015.

[5] Y. Liu, Y. Peng, B. Wang, S. Yao, and Z. Liu, “Review on cyber-physical
systems,” IEEE/CAA J Automatica Sinica, vol. 4, no. 1, pp. 27–40, 2017.
[6] J. Jin, J. Gubbi, S. Marusic, and M. Palaniswami, “An information
framework for creating a smart city through internet of things,” IEEE
Internet of Things J, vol. 1, no. 2, pp. 112–121, 2014.
[7] “Cloud security report,” Alert Logic, Tech. Rep., 2015.
[8] E. Fernandes, J. Paupore, A. Rahmati, D. Simionato, M. Conti, and
A. Prakash, “Flowfence: Practical data protection for emerging iot
application frameworks,” in 25th USENIX Security Symp,, pp. 531–548.
[9] P. Chen, L. Desmet, and C. Huygens, “A study on advanced persistent
threats,” in IFIP Intl. Conf. on Commun. and Multimedia Security.
Springer, 2014, pp. 63–72.

[10] K. D. Bowers, M. Van Dijk, R. Grifﬁn, A. Juels, A. Oprea, R. L.
Rivest, and N. Triandopoulos, “Defending against the unknown enemy:
Applying FlipIt to system security,” in Decision and Game Theory for
Security. Springer, 2012, pp. 248–263.

[11] K. Baumgartner and M. Golovkin, “The naikon apt: Tracking down geo-
political intell. across apac one nation at a time. [Online]. Available:
https://securelist.com/analysis/publications/69953/the-naikon-apt/.”
[12] B. Fogg and H. Tseng, “The elements of computer credibility,” in Proc.
SIGCHI conf. on Human Factors in Computing Syst. ACM, 1999, pp.
80–87.

[13] Z. Yan, P. Zhang, and A. V. Vasilakos, “A survey on trust management
for internet of things,” J Net. and Comput. Applicats., vol. 42, pp. 120–
134, 2014.

[14] U. F. Minhas, J. Zhang, T. Tran, and R. Cohen, “A multifaceted approach
to modeling agent trust for effective communication in the application of
mobile ad hoc vehicle networks,” IEEE Trans. Syst., Man, and Cybern.,
Part C (Applications and Reviews), vol. 41, no. 3, pp. 407–420, May
2011.

[15] M. van Dijk, A. Juels, A. Oprea, and R. L. Rivest, “Flipit: The game of
“stealthy takeover”,” J Cryptology, vol. 26, no. 4, pp. 655–713, 2013.
[16] S. Siadat, A. M. Rahmani, and H. Navid, “Identifying fake feedback in
cloud trust management systems using feedback evaluation component

0246810-20-15-10-5051015200246810-20-15-10-5051015200246810-20-15-10-505101520024681012-8-6-4-20246810024681012-10-5051015024681012-10-5051015and bayesian game model,” J. Supercomputing, vol. 73, no. 6, pp. 2682–
2704, 2017.

[17] P. Zhang, Y. Kong, and M. Zhou, “A domain partition-based trust model
for unreliable clouds,” IEEE Trans. on Inform. Forensics and Security,
vol. 13, no. 9, pp. 2167–2178, 2018.

[18] C. Zhu, H. Nicanfar, V. C. Leung, and L. T. Yang, “An authenticated trust
and reputation calculation and management system for cloud and sensor
networks integration,” IEEE Trans. Inform. Forensics and Security,
vol. 10, no. 1, pp. 118–131, 2015.

[19] W. Fan, S. Yang, and J. Pei, “A novel two-stage model for cloud service
trustworthiness evaluation,” Expert Systs., vol. 31, no. 2, pp. 136–153,
2014.

[20] T. H. Noor, Q. Z. Sheng, and A. Alfazi, “Reputation attacks detection
for effective trust assessment among cloud services,” in IEEE Interna-
tional Conference on Trust, Security and Privacy in Computing and
Communications (TrustCom), 2013, pp. 469–476.

[21] I. U. Haq, I. Brandic, and E. Schikuta, “Sla validation in layered
cloud infrastructures,” in International Workshop on Grid Economics
and Business Models. Springer, 2010, pp. 153–164.

[22] Y. Xie, L. Liu, R. Li, J. Hu, Y. Han, and X. Peng, “Security-aware signal
packing algorithm for can-based automotive cyber-physical systems,”
IEEE/CAA J. Automatica Sinica, vol. 2, no. 4, pp. 422–430, 2015.
[23] Y. Mo, T. H.-J. Kim, K. Brancik, D. Dickinson, H. Lee, A. Perrig, and
B. Sinopoli, “Cyber–physical security of a smart grid infrastructure,”
Proceedings of the IEEE, vol. 100, no. 1, pp. 195–209, 2012.

[24] J. Chen and Q. Zhu, “Interdependent strategic cyber defense and robust
switching control design for wind energy systems,” in IEEE Power &
Energy Society General Meeting, 2017, pp. 1–5.

[25] J. Pawlick, S. Farhang, and Q. Zhu, “Flip the cloud: cyber-physical
signaling games in the presence of advanced persistent
threats,” in
International Conference on Decision and Game Theory for Security,
2015, pp. 289–308.

[26] M. H. Manshaei, Q. Zhu, T. Alpcan, T. Bacs¸ar, and J.-P. Hubaux, “Game
theory meets network security and privacy,” ACM Computing Surveys
(CSUR), vol. 45, no. 3, p. 25, 2013.

[27] Q. Zhu and T. Basar, “Game-theoretic methods for robustness, security,
and resilience of cyberphysical control systems: games-in-games prin-
ciple for optimal cross-layer resilient control systems,” IEEE Control
Syst., vol. 35, no. 1, pp. 46–65, 2015.

[28] T. Alpcan and T. Basar, “A game theoretic approach to decision and
analysis in network intrusion detection,” in IEEE Conf. Decision and
Control, vol. 3, 2003, pp. 2595–2600.

[29] J. Pawlick and Q. Zhu, “Deception by Design: Evidence-Based
Signaling Games for Network Defense,” Delft, The Netherlands, 2015.
[Online]. Available: http://arxiv.org/abs/1503.05458

[30] J. Chen and Q. Zhu, “Optimal contract design under asymmetric infor-
mation for cloud-enabled internet of controlled things,” in International
Conference on Decision and Game Theory for Security. Springer, 2016,
pp. 329–348.

[31] A. Laszka, G. Horvath, M. Felegyhazi, and L. Butty´an, “FlipThem:
Modeling targeted attacks with ﬂipit for multiple resources,” in Decision
and Game Theory for Security. Springer, 2014, pp. 175–194.

[32] J. Chen and Q. Zhu, “Security as a service for cloud-enabled internet
of controlled things under advanced persistent threats: a contract design
approach,” IEEE Trans. Inform. Forensics and Security, vol. 12, no. 11,
pp. 2736–2750, 2017.

[33] Y. Sun, H. Song, A. J. Jara, and R. Bie, “Internet of things and big data
analytics for smart and connected communities,” IEEE Access, vol. 4,
pp. 766–773, 2016.

[34] A. Cenedese, A. Zanella, L. Vangelista, and M. Zorzi, “Padova smart
city: An urban internet of things experimentation,” in IEEE 15th Int.
Symp. on a World of Wireless, Mobile and Multimedia Nets. (WoWMoM).
IEEE, 2014, pp. 1–6.

seven Iranians

Justice, “Manhattan U.S. attorney announces charges
[35] U. D. of
for conducting coordinated campaign of
against
Islamic
cyber attacks against U.S. ﬁnancial sector on behalf of
Revolutionary Guard Corps-sponsored entities.
[online]. available:
https://www.justice.gov/usao-sdny/pr/manhattan-us-attorney-announces-
charges-against-seven-iranians-conducting-coordinated.”

[36] J. Pawlick and Q. Zhu, “Quantitative models of imperfect deception in
network security using signaling games with evidence,” IEEE Commun.
and Net. Security, 2017.

[37] J. Pawlick, E. Colbert, and Q. Zhu, “Modeling and analysis of leaky
deception using signaling games with evidence,” in Workshop on the
Econ. of Inform. Security, Seattle, U.S.A., 2018.

[38] D. Fudenberg and J. Tirole, “Game theory,” Cambridge, Massachusetts,

vol. 393, 1991.

[39] G. F. Franklin, J. D. Powell, and M. L. Workman, Digital control of
dynamic systems. Addison-wesley Menlo Park, CA, 1998, vol. 3.
[40] J. Pawlick and Q. Zhu, “Strategic trust in cloud-enabled cyber-physical
systems with an application to glucose control,” IEEE Trans. Inform.
Forensics and Security, vol. 12, no. 12, pp. 2906–2919, 2017.

[41] I.-K. Cho and D. M. Kreps, “Signaling games and stable equilibria,”

Quarterly J of Econ., pp. 179–221, 1987.

[42] S. Kakutani, “A generalization of Brouwer’s ﬁxed point theorem,” Duke

Math. J, vol. 8, no. 3, pp. 457–459, 1941.

[43] N. Cordeschi, D. Amendola, M. Shojafar, and E. Baccarelli, “Distributed
and adaptive resource management in cloud-assisted cognitive radio
vehicular networks with hard reliability guarantees,” Vehicular Com-
munications, vol. 2, no. 1, pp. 1–12, 2015.

[44] E. Guizzo, “How Google’s self-driving car works,” IEEE Spectrum

Online, October, vol. 18, 2011.

[45] O. Levander, “Forget autonomous cars—autonomous ships are almost

here,” IEEE Spectrum, February 2017.

[46] C. Zhang and J. M. Kovacs, “The application of small unmanned
aerial systems for precision agriculture: a review,” Precision Agriculture,
vol. 13, no. 6, pp. 693–712, 2012.

[47] D. Wakabayashi, “Uber’s self-driving cars were struggling before ari-

zona crash,” The New York Times, March 2018.

[48] S. Shane, “Sleeping sailors on U.S.S. Fitzgerald awoke to a calamity at

sea,” The New York Times, June 2017.

[49] Z. Xu and Q. Zhu, “Secure and resilient control design for cloud enabled
networked control systems,” in Proc. ACM Workshop on Cyber-Physical
Systems-Security and/or PrivaCy. ACM, 2015, pp. 31–42.

[50] K. J. Astr¨om and R. M. Murray, Feedback Syst.: an Introduction for

Scientists and Engineers. Princeton U Press, 2010.

[51] MATLAB, R2017b. Natick, Massachusetts: The MathWorks Inc., 2017.

Jeffrey Pawlick received the B.S. degree from Rens-
selaer Polytechnic Institute in Troy, NY in 2013, and
the Ph.D. degree from New York University (NYU)
in 2018, both in Electrical Engineering. At NYU
he studied in the Laboratory for Agile and Resilient
Complex Systems within the Tandon School of Engi-
neering. His research interests include game theory,
privacy, security, trust management, and deception
in cyber-physical systems and the Internet of things.

Juntao Chen (S’15) received the B.Eng. degree in
Electrical Engineering and Automation from Central
South University, Changsha, China, in 2014. He is
currently pursuing the Ph.D. degree in the Labora-
tory for Agile and Resilient Complex Systems, Tan-
don School of Engineering, New York University,
NY, USA. His research interests include mechanism
design, game theory, and cyber-physical systems
security.

Quanyan Zhu (M’14) received the Ph.D. degree
from the University of Illinois at Urbana-Champaign
(UIUC) in 2013. After a short stint at Princeton
University, he joined the Department of Electrical
and Computer Engineering at New York Univer-
sity (NYU) as an assistant professor in 2014. He
spearheaded and chaired INFOCOM Workshop on
Communications and Control on Smart Energy Sys-
tems (CCSES), Midwest Workshop on Control and
Game Theory (WCGT), and 7th Game and Decision
Theory for Cyber Security (GameSec). His research
interests include game theory, smart grid, network security and privacy,
resilient critical infrastructures, cyber-physical systems and cyber deception.

