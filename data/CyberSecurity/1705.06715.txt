7
1
0
2

y
a
M
8
1

]

R
C
.
s
c
[

1
v
5
1
7
6
0
.
5
0
7
1
:
v
i
X
r
a

Continuous Implicit Authentication for Mobile
Devices based on Adaptive Neuro-Fuzzy Inference
System

Feng Yao∗, Suleiman Y. Yerima†, BooJoong Kang‡ and Sakir Sezer§
∗ Email: fyao02@qub.ac.uk † Email: s.yerima@qub.ac.uk
‡ Email: B.Kang@qub.ac.uk § Email: s.sezer@ecit.qub.ac.uk
Centre for Secure Information Technologies (CSIT)
Queen’s University Belfast, Belfast, BT3 9DT, Northern Ireland, UK

Abstract—As mobile devices have become indispensable in
modern life, mobile security is becoming much more impor-
tant. Traditional password or PIN-like point-of-entry security
measures score low on usability and are vulnerable to brute
force and other types of attacks. In order to improve mobile
security, an adaptive neuro-fuzzy inference system(ANFIS)-based
implicit authentication system is proposed in this paper to
provide authentication in a continuous and transparent manner.
To illustrate the applicability and capability of ANFIS in our
implicit authentication system, experiments were conducted on
behavioural data collected for up to 12 weeks from different An-
droid users. The ability of the ANFIS-based system to detect an
adversary is also tested with scenarios involving an attacker with
varying levels of knowledge. The results demonstrate that ANFIS
is a feasible and efﬁcient approach for implicit authentication
with an average of 95% user recognition rate. Moreover, the use
of ANFIS-based system for implicit authentication signiﬁcantly
reduces manual tuning and conﬁguration tasks due to its self-
learning capability.

I. INTRODUCTION

Mobile devices are becoming more and more indispens-
able in our daily life. Technological advancements and the
availability of high speed connections has made the mobile
device a handy tool for managing day-to-day tasks involving
sensitive data, monetary transactions etc. As a consequence,
more threats are appearing and compromising security and
privacy of millions of users’ data worldwide. A survey [1]
conducted by Kaspersky Consumer Security Risk shows that
for every 6 mobile users, there is one who has suffered loss
or theft. In order to mitigate the effect of loss or theft, novel
efﬁcient and intelligent access control techniques should be put
in place while ensuring minimum impact on user experience.
PINs, passwords and pattern locks have long been used
to provide mobile access control for simplicity and ease of
use. However, these traditional point-of-entry authentication
techniques have drawbacks since they only authenticate at the
beginning of a session, after which users can access every-
thing on the phone without being re-authenticated periodically.
Moreover, weak passwords and PINS are vulnerable to brute
force or dictionary attacks. Long and complicated passwords
score low on usability, especially on mobile devices. Pattern
lock can also be cracked within ﬁve attempts regardless of its

complexity as stated in [2]. To make matters worse, nowadays
most applications have a default setting to only require login
credentials at ﬁrst use, which put users’ sensitive data at
risk. Biometrics-based authentication techniques [3] such as
ﬁngerprint, iris or voice recognition are gaining popularity.
However, they can still be compromised in some circumstances
and require speciﬁc hardware support as well as higher com-
putational resources.

As traditional authentication methods fall short of security
and usability, implicit authentication (IA) is gaining attention
as a complementary authentication method which is capable
of authenticating a legitimate user and detecting imposters
transparently and continuously without the explicit involve-
ment of the user. According to a survey [4], IA is widely
accepted, and 73% of the participants consider IA more secure.
Recent researches [5]–[15] demonstrate the use of behavioural-
based IA to provide continuous protection on mobile devices.
Although the results are promising, maintaining a balance
between accuracy, adaptiveness and practical feasibility is still
an unresolved challenge. Hence, an ANFIS-based implicit
authentication system is presented in this paper. By utilizing its
self-learning capabilities, the ANFIS-based system is able to
ascertain the unique behavioural pattern for every single user.
Based on the perceived pattern, the ANFIS-based system is
able to provide continuous and transparent authentication in
real-time. Our proposed ANFIS-based IA system incorporates
a time-window based proﬁling approach in order to enable
granular and continuous re-authentication which also ensures
timely adversary detection. The proposed system also utilizes
anomaly based scoring, which together with an adaptively
computed reference, provides real-time inputs for the ANFIS
system. The anomaly based scoring system applies a ranking
algorithm that maintains a sorted list of the most relevant
events that are used in the computation of the anomaly-based
scores.

In the rest of the paper, section II reviews background of
ANFIS while section III describes our proposed authentication
system. Section IV presents the evaluation of the system using
real data collected from different users over several weeks.
Section V summarizes related work regarding behaviour-based

IEEE International Conference on Cyber Security and Protection of Digital Services (Cyber Security 2017), June 19-20, 2017, London, UK.

 
 
 
 
 
 
2

where ci, bi are premise parameters used to control the shape
of membership functions.

In the second layer, every node is a ﬁxed node which

functions as a multiplier for incoming signals:

O2

i = wi = µAi(x) · µBi(y)

(3)

Each node output represents the ﬁring strength of a rule.

Every node in the third layer is a ﬁxed node labeled with N,
which indicates that they perform normalization to the ﬁring
strength from previous layer. The output of this layer is shown
as follows:

O3

i = ¯wi =

wi
w1 + w2

i = 1, 2

(4)

In the fourth layer, every node is an adaptive node, the
output of this node is simply a product of normalized ﬁring
strength and ﬁrst order polynomial:

O4

i = ¯wifi = ¯wi(pix + qiy + ri)

i = 1, 2

(5)

There is only one ﬁxed node in ﬁfth layer which performs
the summation of all incoming signals. Hence, the output of
ﬁfth layer is given as:

O5

i =

2
(cid:88)

i=1

¯wifi =

(cid:80)2

i=1 wifi
w1 + w2

(6)

B. Learning algorithms of ANFIS

As discussed in the previous section, premise parameters
{ci, bi} in layer 1 and consequent parameters {pi, qi, ri} in
layer 4 are all modiﬁable, the purpose of the learning process
of ANFIS is to tune all these parameters to make the ANFIS
output match the training data. When the premise parameters
are ﬁxed, the ﬁnal output can be represented as:

f = ¯w1f1 + ¯w2f2

= ¯w1(p1x + q1y + r1) + ¯w2(p2x + q2y + r2)
= ( ¯w1x)p1 + ( ¯w1y)q1 + ( ¯w1)r1 + ( ¯w2x)p2

(7)

+ ( ¯w2y)q2 + ( ¯w2)r2

which is a linear combination of consequent parameters.
Thus, least square method can be used to compute the op-
timal value for consequent parameters. When the premise
parameters are not ﬁxed, the search space becomes larger
and the convergence of the training becomes slower. The
hybrid learning algorithm comprises of a forward pass and
a backward pass. Once the optimal consequent parameters are
found during the forward pass, the backward pass starts. In the
backward pass, errors are propagated backward and premise
parameters regarding membership function are updated by
gradient descent. When the training is ﬁnished, both premise
and consequent parameters are optimized and can be employed
for prediction or classiﬁcation. The combination of least square
method and gradient descent has proven to be highly effective
at training ANFIS models [16].

Fig. 1: ANFIS architecture for two-input Sugeno fuzzy model
with two rules

implicit authentication. Section VI concludes the paper and
proposes directions for future work.

II. BACKGROUND OF ANFIS

ANFIS is a fuzzy inference system implemented in the
framework of adaptive neural networks to facilitate learning
and adaptation [16]. Neural network is not ideal for repre-
senting vagueness and uncertainty. As for fuzzy logic, the
determination of fuzzy rules, input and output membership
functions requires prior knowledge and cumbersome tuning
process. However, by combining fuzzy logic and neural net-
work technology together in ANFIS, it can fully take advan-
tage of learning capabilities of neural network and imprecision
handling of fuzzy logic to overcome these weaknesses. ANFIS
has been applied in numerous areas including dissolved gas
analysis [17], identiﬁcation and monitoring of brain-computer
interface [18] and automatic gas tungsten arc welding [19].

A. Architecture of ANFIS

The architecture of ANFIS is presented in Fig. 1. For
simplicity, it is a ﬁrst-order Sugeno fuzzy model with two
inputs and two if-then rules.

Rule 1: If (x is A1) and (y is B1) then f1 = p1x + q1y + r1
Rule 2: If (x is A2) and (y is B2) then f2 = p2x + q2y + r2

where x and y are inputs, fi are outputs, Ai and Bi are
fuzzy sets. pi, qi and ri are the consequent parameters which
are updated during training process. In this ﬁgure, a square
represents an adaptive node while a circle represents a ﬁxed
node. As you can see, all the nodes in layer 1 are adaptive
nodes. Let the output of the ith node in layer n be On
i , thus
the outputs of layer 1 representing membership grade of the
inputs can be represented as follows:
(cid:40)

O1
O1

i = µAi(x),
i = µBi−2(y),

i = 1, 2
i = 3, 4

(1)

where µAi (x) and µBi−2 (y) can be any type of membership
functions. For example, if sigmoid membership function is
employed, µAi(x) can be denoted as:
1
1 + e−ci(x−bi)

µAi(x) =

(2)

IEEE International Conference on Cyber Security and Protection of Digital Services (Cyber Security 2017), June 19-20, 2017, London,
UK.

3

Fig. 2: ANFIS-based implicit authentication system diagram

III. ANFIS-BASED AUTHENTICATION SYSTEM

In this section, the structure of our system and function-
alities of each component are described. The structure of
ANFIS-based implicit authentication system is presented in
Fig. 2 which includes an activity monitoring module, a scor-
ing module, a reference computation module and an ANFIS
module. The learning capability of ANFIS allows for training
of speciﬁc fuzzy inference model based on given input-output
user data without manual interference. Therefore, this trained
fuzzy model represents well the user’s behaviour and can then
be used to make ﬁnal authentication decision to provide access
control. The deployment of the system can be divided into
two phases: training phase and deployment phase. During the
training phase, we use generated input (scores, references) and
output (classiﬁcation labels) variables to train ANFIS module
ofﬂine. When the training is completed the deployment phase
starts, this enables the system to infer the authenticity of the
current user behaviour by taking in real-time computed scores
and references.

A. Workﬂow of ANFIS-based authentication system

The workﬂow of the proposed authentication system is illus-
trated in Fig. 2. It ﬁrstly models the user proﬁle based on se-
lected features that are representative of individual behaviour.
The features are divided into foreground and background
activities. The background activities consists of those events
that the user can not control e.g. receiving SMS and phone
calls. The foreground activities on the other hand, consists
of those the user can initiate e.g. making a phone call or
browsing the Internet. The features used to score foreground
and background behaviour can be represented as:

F eatures : (f1, f2, f3, ..., fn), (b1, b2, b3, ..., bm)

(8)

A time window-based proﬁling technique is adopted to
adaptively compute the real-time foreground and background
anomaly score to quantify the anomaly level of current user
behaviour. Because user behaviour is dynamic, a generalized
ranking algorithm is developed (see section III C) to maintain
a record of the top n most recent or most relevant events for

each feature (except the Screen On/Off feature). The values
generated by the ranking algorithm within each feature cate-
gory, are used in the anomaly score computation as described
in section III C. The scoring functions to compute the anomaly
score for each feature are represented as:

F unctions : (Sf 1, Sf 2, ..., Sf n), (Sb1, Sb2, ..., Sbm)

(9)

Because the foreground anomaly score ASf ore is calculated
incrementally based upon all
the events that occur in a
timeframe, it can be represented as:
(cid:88)numi
j=0

Sf i(eventij)

ASf ore =

(cid:88)n

(10)

i=1

is the jth occurred event
Where eventij
that belongs to
foreground feature fi, n is total number of foreground features,
numi is the number of occurred events for speciﬁc foreground
feature fi. The background anomaly score ASback computed
by the model can be represented as:

ASback =

(cid:88)m

(cid:16)

i=1

Sbi(bi) − µ × ti

(cid:17)

(11)

Where µ is the damping factor which compensates for long
periods of inactivity and allows for gradual decrease in the
anomaly score, ti
is the duration of inactivity, m is total
number of background features. The reference computation
module is responsible for computing foreground reference
reff ore and background reference refback shown as follows:




reff orei = fref



refbacki = fref

(cid:16)

(cid:16)

reff orei−1 , ASf orei
(cid:17)

refbacki−1, ASbacki

(cid:17)

(12)

The foreground and background anomaly scores and respective
references are then utilized together as input parameters of the
trained ANFIS model to generate the real-time threat level.
Thus, threat level of current user computed by the decision
module can be represented as:

threat level = AN F IS(p1, p2, ..., pi)

(13)

where in our case we have 4 inputs: p1 = ASf ore, p2 =
ASback, p3 = (ASf ore − reff ore), p4 = (ASback − refback).
The computed threat level is then used to make ﬁnal authen-
tication decisions.

IEEE International Conference on Cyber Security and Protection of Digital Services (Cyber Security 2017), June 19-20, 2017, London,
UK.

B. Features used in ANFIS system

The proposed ANFIS-based authentication system utilizes
these
representative features to model user proﬁle. Also,
features should be easily obtainable and readily available
from most mobile devices. Hence, the following sources are
considered as features for our ANFIS-based authentication
system. The experiments presented in this paper are based on
these eight features for proﬁle modeling.

1)
Incoming SMS
2) Outgoing SMS
Incoming Call
3)
4) Outgoing Call
5) Browser History
6) WIFI History
7) Screen Status
8) Application History
These features are divided into foreground features(Screen
status, app, outgoing sms/call) and background features(WIFI,
incoming sms/call), and then employed within the authentica-
tion scheme to generate foreground and background anomaly
scores (using equations 10 and 11) to quantify the authenticity
of the current user. The score for each feature is calculated
based on different conditions shown in Table I. The score will
reﬂect the user as more legitimate if more of the conditions
are met. For example, when the user makes an outgoing call,
the system will be triggered to check the following:
◦ is the number in the user’s contact list?
◦ what is the position of the number in the ranking list
(calculated using the ranking algorithms described in
the next subsection)?

◦ does the activity duration (in this case a call) fall within

a given value?

Since an anomaly based scoring approach is utilized, more
‘legitimate’ activities will
lead to lower scores (i.e. more
conditions in Table I are met), while higher scores will indicate
‘illegitimate’ or adversary activity (i.e. less of the conditions
in Table I are met). Next, we describe the generalized ranking
algorithm which is used for most of the features within the
ANFIS-based IA system.

TABLE I: Conditions checked while computing anomaly
scores for each of the monitored foreground/background fea-
tures (activities).

Incoming/Outgoing call
Incoming/Outgoing SMS
WIFI
Application history
Browser history
Screen On/Off

RankingList
(cid:51)
(cid:51)
(cid:51)
(cid:51)
(cid:51)

ContactList
(cid:51)
(cid:51)

Duration
(cid:51)

(cid:51)
(cid:51)
(cid:51)
(cid:51)

C. Generalized algorithm for maintaining a ranked list of
occurred events within each feature category.

4

concept of ranking list is to quantify the importance of each
item in the related feature category. For instance, if the user is
using a speciﬁc application like Twitter, the system should be
able to know if this is a frequently used application to the user,
or how familiar this application is to the user compared with
other applications. Our generalized algorithm is developed for
this purpose. The algorithm is divided into two parts which are
ranking list maintenance part and anomaly score computation
part. The ranking list maintenance part is shown in Equation 14
to determine its ranking or index in the ranking list.

(cid:40)

valij =

αi + βi × occj,
val

ij + βi − λi × tj,

(cid:48)

if itemj /∈ rankListi
if itemj ∈ rankListi

(14)
Note that for any feature category f eaturei, there is a ranking
list rankListi where the valij for each itemj (that only
belongs to that category) is stored. The value of each itemj
in its belonging feature category f eaturei is represented as
valij, valij is calculated and updated based on number of
occurrence occ and time t (unit: hours) that has elapsed since
last occurrence. The upper formula in Equation 14 is used to
calculate the valij if the itemj is not in rankListi (event
has not occurred before), otherwise lower formula is used to
update valij (item has existed and is stored in ranking list,
ij stores the same value as valij). Based on the given
val
formula in Equation 14, we can see that the higher the valij
is, the more relevant itemj is to the user. If valij is below 0,
then itemj will be removed from the rankListi. α, β and
λ can be adjusted based on the character of each feature
and different user behaviour patterns. The scoring part of
developed generalized scoring algorithm for ranking is deﬁned
in equation 15 and 16.

(cid:48)

(cid:15) =

µ(cid:48)
2

×

(cid:32)(cid:18) index − 1

(cid:19)2

+

(cid:18) vmax − val
vmax − vmin

(cid:19)2(cid:33)

(15)

len






0,
µ
2 ,
0,
µ,
(cid:15),

if
if
if
if
if

len = 0
len = 1, 2 and index = 0
len = 1, 2 and index = 1
len > 2 and index = 0
len > 2 and index >= 1

(16)

ASranking =

where ASranking is the anomaly score for ranking list while
µ is the maximum value for ASranking. val is the value of the
item stored in ranking list and index is the ranking position of
the item (item with the highest value is indexed by 1, index =
0 indicates the item is not in top list). len is the length of
ranking list, vmax and vmin is the item with the highest and
the lowest value in ranking list respectively. µ(cid:48) represents the
adjusted maximum value for ASranking which is shown in the
equation below.

µ(cid:48) =

µ
1 + e−c(len−b)

(17)

To ensure that the most relevant and current items within
each feature category are fully utilized, we developed a
generalized algorithm for maintaining a ranked list. The main

where c and b is the parameter for the sigmoid function. The
main functionality of equation 17 is to reduce the maximum
value for ASranking when the length of ranking list is less

IEEE International Conference on Cyber Security and Protection of Digital Services (Cyber Security 2017), June 19-20, 2017, London,
UK.

than the stipulated amount. This can be adjusted based on
the behavior of different users. To summarize, the developed
algorithm for ranking is capable of self-updating adaptively in
concert with the user behaviour drift by maintaining a cache
of the most relevant items for each feature.

D. Time window-based proﬁling

Time window-based proﬁling technique is designed with the
aim of producing a more granular user model. To achieve this
objective, screen status is utilized to capture every activity
performed by the user. That is, whenever user presence is
detected, the system will track all the foreground activities
performed by the user and compute the foreground anomaly
score ASf ore incrementally until screen off is detected. The
system will then proceed to reference computation and ANFIS
module to update reff ore, refback and generate authentication
result. Whenever ASf ore is recalculated and the system is
in deployment phase, the authentication will be performed
based on new ASf ore and current ASback with damping factor
considered. The occurrences of background activities will only
update the score of their related features and no authentication
will be performed. The main functionality of timer (see Fig. 2)
is to control the maximum time period that the system has
to wait to perform authentication when user is active, this
forces the system to always provide security within stipulated
timeframe.

E. Adaptive reference computation

As mentioned earlier, a reference is utilized as an ANFIS
input variable in tandem with foreground and background
anomaly score. The reference is calculated in a way that
indicates the distributions or patterns of anomaly scores.
Therefore the system can decide if the current behaviour
deviates too much from previously perceived patterns by cal-
culating the difference between anomaly score and reference.
Thus, to generate dynamic reference which is adaptive to user
behaviour drift, we choose exponentially weighted moving
average (EWMA) and standard deviation (SD) as the main
parts of our reference computation scheme. Previous works
such as [20] where EWMA is applied to admission control
and buffer management [21] have illustrated the performance
and efﬁciency of the algorithm. In EWMA, the coefﬁcient
α represents the degree of weighting, such that a higher α
discounts older observations (thresholds) faster as shown in
equation 14.

ref erencet = α × AS + (1 − α) × ref erencet−1

(18)

Therefore, low value α is considered appropriate in our case
so that
the new computed threshold changes steadily and
gradually converges with the current aggregate score. Thus,
the value of α is set at 0.2 throughout
the experiments.
The mechanism of our EWMA SD BLOCK (ESB) reference
computation scheme is illustrated in Algorithm 1.

5

Data: newly computed foreground/background anomaly

score AS, ESB preparation length len in days,
block size b

Result: foreground/background reference ref
OnApplicationInstalled:
ESBP reparation.isF inished ←− f alse; b ←− 7;
←− 0;
if new AS is detected then

i

if ESBPreparationDuration < len and
ESBPreparation.isFinished = false then

continue;

else if ESBPreparationDuration >= len and
ESBPreparation.isFinished = false then

/* mean and standard_deviation for
all the ASs within preparation
duration, ref is used for next
block of ASs(size b)
ref ←− mean − standard deviation;
ESBP reparation.isF inished ←− true;
else if ESBPreparation.isFinished = true then

*/

/* preparation ends,computed ref
can now be used as ANFIS inputs */
if i < b then

sum+ = AS;
else if i = b then

i + +;

sum ←− AS;

ave ←− sum/b;
/* newly computed ref is used
for next block
reft ←− α × ave + (1 − α) × reft−1 ;

i ←− 1;

*/

end

end

end

Algorithm 1: ESB reference computation algorithm

F. The ANFIS classiﬁer

The main functionality of ANFIS in our authentication
system is to train a speciﬁc fuzzy inference model for each user
based upon their behaviour through ANFIS learning process,
then to provide real-time authentication based upon given input
variables when training is ﬁnished. As mentioned before, we
utilize foreground/background anomaly score and computed
the selected
reference in concert as ANFIS inputs. Thus,
ANFIS input variables are shown as follows(see equation 13):

◦ foreground anomaly score(ASf ore)
◦ the difference of

foreground anomaly score and

reference(ARDf ore)

◦ background anomaly score(ASback)
◦ the difference of background anomaly score and

reference(ARDback)

while output data is classiﬁed into three categories:

◦ output = 1 indicates legitimate user
◦ output = 0 indicates suspicious user
◦ output = -1 indicates adversary

IEEE International Conference on Cyber Security and Protection of Digital Services (Cyber Security 2017), June 19-20, 2017, London,
UK.

IV. EXPERIMENTS AND EVALUATION

This section presents the experimental results and evaluation
of the proposed ANFIS-based implicit authentication system.
The performance between implicit authentication systems with
and without implementation of ANFIS will be compared. An
Android application is developed to extract the data based
on the selected features. In order to automate the evaluation
process and facilitate future research, the scoring module,
reference computation module and ANFIS module are im-
plemented by using Python scripts to emulate the logic of
the ANFIS-based authentication system on mobiles devices.
Five user data sets including respective adversary cases are
collected over several weeks as shown in Table II. In order to
test the efﬁciency and resilience of the proposed authentication
system on dealing with both normal and complex adversary
scenarios,
two adversary cases ‘uninformed attacker’ and
‘informed attacker’ were investigated for every user to emulate
real-life device theft.

TABLE II: Information of collected participants’ data

User ID
User 1
User 2
User 3
User 4
User 5

Number of event logs
11107
23628
2847
9319
17945

Collection time period
2016/06/29 – 2016/07/30
2016/06/29 – 2016/09/18
2016/06/30 – 2016/09/25
2016/09/18 – 2016/12/11
2016/09/21 – 2016/12/11

Uninformed attacker: The attacker takes the device and in-
teracts with it for several hours. The attacker has no knowledge
of how the user behaves routinely. E.g. the attacker might
connect to a WIFI previously unknown to the device, use
unusual applications which are different from the owner’s.

Informed attacker: The attacker takes the device and inter-
acts with it for several hours. In this circumstance, the attacker
was provided with some additional information regarding the
user behavior. E.g. a list of applications and WIFI access points
that the owner most frequently used, whom the owner mostly
contacted with, which websites the owner usually browses.

In order to evaluate the ANFIS model, the data collected
from each user is split into training and testing portions. The
training part is labelled with the correct output while the
testing part is unlabelled. After training, the model is evaluated
on the test part and the correct predictions made are computed
to give the ﬁnal performance metrics.

User recognition rate and elapsed time are chosen as metrics
to evaluate accuracy and adversary detection performance.
As illustrated in Table V, with the adoption of ANFIS, the
user recognition rate is increased from an average of 90%
to an average of 95% compared with a non-ANFIS-based
system. For the adversary performance, ANFIS is slightly
outperformed by non-ANFIS, which is tolerable considering
the improvement that was achieved by introducing the ANFIS
system.

Table III and Table IV presents the experimental results
of ﬁve users to evaluate the performance of ANFIS-based

6

and non-ANFIS implicit authentication system respectively. It
shows that ANFIS is suitable and efﬁcient for our proposed
implicit authentication system with 95% average accuracy
and adversary detection capability within a few minutes.
Besides, ANFIS is able to automatically build a tailored fuzzy
inference model for every user based on their training data. It
doesn’t require prior understanding of user behaviour pattern
and eradicates the need of cumbersome tuning tasks like in
traditional fuzzy-logic method. Overall, our proposed novel
ANFIS-based implicit authentication system has proven to be
promising at providing intelligent mobile access control.

TABLE III: Experimental results from ANFIS method

User ID

User 1
User 2
User 3
User 4
User 5
Average

User Recognition
Rate
93.01%
96.55%
98.21%
96.64%
90.36%
94.95%

Elapsed Time
(informed adversary)
9.88 min
16.88 min
3.88 min
4.88 min
11.37 min
9.38 min

Elapsed Time
(uninformed adversary)
9.88 min
16.88 min
3.88 min
4.88 min
7.38 min
8.58 min

TABLE IV: Experimental results from non-ANFIS method

User ID

User 1
User 2
User 3
User 4
User 5
Average

User Recognition
Rate
86.81%
90.91%
98.08%
88.84%
87.36%
90.40%

Elapsed Time
(informed adversary)
12.88 min
13.88 min
6.88 min
4.88 min
11.37 min
9.98 min

Elapsed Time
(uninformed adversary)
3.88 min
13.88 min
6.88 min
4.88 min
7.38 min
7.38 min

TABLE V: Performance comparison with and without ANFIS

Average of 5 users
User Recognition Rate
Elapsed Time(uninformed adversary)
Elapsed Time(informed adversary)

Non-ANFIS
90.40%
7.38 mins
9.98 mins

ANFIS
94.95%
8.58 mins
9.38 mins

* Elapsed Time: time elapsed after the attack starts

V. RELATED WORK
Research regarding implicit or transparent authentication
has been increasing in the last few years. Implicit authenti-
cation was ﬁrstly proposed in [13] which records the user’s
information including location, phone calls, SMS and browser
events. Its scoring system is based on the probability density
function. However, the issue of tackling behaviour drift is
not addressed. In contrast with [13], the work of Kayacik et
al. [8] presents a better performance regarding adaptiveness
and transparency. Their scheme utilizes probability density
function to model user behaviour and is able to activate
retraining phase when behaviour drift is detected. However,
this scheme samples the sensor data including GPS frequently
which might not be power efﬁcient.

The authors in [10] proposed a novel behaviour proﬁling
framework to authenticate users through analyzing their ap-
plication usage patterns. The proposed framework presents an

IEEE International Conference on Cyber Security and Protection of Digital Services (Cyber Security 2017), June 19-20, 2017, London,
UK.

more advanced and optimized utilization of app usage pattern
than the way it is utilized in [5], [8]. The framework measures
the authenticity of a user based on a number of consecutive
abnormal application activities. Their method also maintains
a dynamic proﬁle which contains 7/10/14 days of users’
most recent activities, updated on a daily basis. However, the
research is conducted on MIT Reality dataset that was created
in 2004 with limited number of applications. Similar to [10],
authors in [9] proposed another application-centric implicit
authentication. Instead of extracting location and time from
the application, [9] records the touchscreen patterns of the
user to build the behavioural proﬁle.

Another context proﬁling framework is proposed in [6]
which utilized context variables including GPS readings, sur-
rounding devices via both WIFI and Bluetooth. This frame-
work ﬁrstly detects personal contexts of interest (CoIs) and
then infer user trust level based on device familiarity and
context familiarity. However, this framework is not able to
adaptively update CoIs when a user’s routine regarding lo-
cation changes signiﬁcantly. Later as a follow-up study, an
improved version based on [10] called ConXsense is proposed
in [15] to protect against device misuse. The identiﬁcation
of CoIs is optimized by using stay points and stay regions
to identify CoIs based on GPS and WIFI. ConXsense is
designed not to authenticate the user, but to provide smart
device locking system. With the similar aim, a context-aware
scalable authentication scheme is proposed in [11] which is
designed to reduce active authentication on the mobile device
by inferring the safety level of the context.

Different from all the previous works, this paper investigates
an ANFIS-based system for implicit authentication on mobile
devices and uses real data obtained from users over several
weeks for the evaluation of the system.

VI. CONCLUSION

This paper proposed and investigated an ANFIS-based sys-
tem for continuous implicit authentication for mobile devices.
The system was evaluated using data collected over several
weeks from mobile device users where an Android app con-
tinuously monitored 8 different activities (features) to collect
data for our the experiments presented in this paper. Through
its self-learning capability, an ANFIS-based system provides
tailored fuzzy inference system for every user based on their
collected behavioural data, thereby eliminating the need for
cumbersome manual tuning required in traditional fuzzy based
systems. The experimental results presented showed that the
ANFIS based system achieved up to 95% user recognition rate
on average compared to a non-ANFIS system which recorded
90% user recognition rate on average. In future work we intend
to undertake further experiments by complementing our real
user dataset with simulated data in order to enable more in-
depth evaluation on a larger user space.

REFERENCES

[1] ‘One in every six users suffer

theft of mobile devices’,
http://www.kaspersky.com/about/news/press/2013/one-in-every-six-users-
suffer-loss-or-theft-of-mobile-devices, accessed 21 December 2016

loss or

7

[2] G.X. Ye, T.Z. Tang, D.Y. Fang, X.J. Chen, K.I. Kim, B. Taylor and Z.
Wang, “Cracking Android pattern lock in ﬁve attempts.” In: The Network
and Distributed System Security Symposium 2017 (NDSS’17).

[3] A.N. Kataria, D.M. Adhyaru, A.K. Sharma and T.H. Zaveri, “A survey of
automated biometric authentication techniques.” 2013 Nirma University
International Conference on Engineering (NUiCONE), Ahmedabad, 2013,
pp. 1–6

[4] H. Crawford and K. Renaud, “Understanding user perceptions of trans-
parent authentication on a mobile device.” Journal of Trust Management,
2014, 1, (1), pp. 1–28

[5] L. Fridman, S. Weber, R. Greenstadt and M. Kam, “Active authentication
on mobile devices via stylometry, application usage, web browsing, and
GPS location.” arXiv preprint arXiv: 1503, 08479, 2015, pp. 1–10
[6] A. Gupta, M. Miettinen, N. Asokan and M. Nagy, “Intuitive security
policy conﬁguration in mobile devices using context proﬁling.” Privacy,
Security, Risk and Trust (PASSAT), 2012 International Conference on
and 2012 International Confernece on Social Computing (SocialCom),
Amsterdam, 2012, pp. 471–480

[7] E. Hayashi, S. Das, S. Amini, J. J Hong, and I. Oakley, “Casa: context-
aware scalable authentication.” In n Proceedings of the Ninth Symposium
on Usable Privacy and Security, pp. p 3-13. ACM, 2013.

[8] H. G. Kayacik, M. Just, L. Baill lie, D. Aspinall, and N. Micallef, “Data
driven authentication: On the effectiveness of user behaviour modelling
with mobile device sensors.” In Proceedings of the Third Workshop on
Mobile Security Technologies (MoST), 2014

[9] H. Khan and U. Hengartner, “Towards application-centric implicit au-
thentication on smartphones.” In Proceedings of the 15th Workshop on
Mobile Computing Systems and Applications, ACM, New York, 2014,
pp. 10:1–10:6

[10] F. Li, N. Clarke, M. Papadaki and P. Dowland, “Active authentication
for mobile devices utilising behaviour proﬁling.” International journal of
information security, Springer Berlin Heidelberg, 2014, 13, (3), pp. 229–
244.

[11] M. Miettinen, S. Heuser, W. Kronz, A. Sadeghi and N. Asokan,
“Conxsense - context sensing for adaptive usable access control.” In
Proceedings of the 9th ACM symposium on information, computer and
communications security, 2014, pp. 293–304

[12] O. Riva, C. Qin, K. Strauss and D. Lymberopoulos, “Progressive
authentication: Deciding when to authenticate on mobile phones.” In
Presented as part of the 21st USENIX Security Symposium, 2012, pp.
301–316

[13] E. Shi, Y. Niu, M. Jakobsson and R. Chow, “Implicit authentication
through learning user behavior.” Information Security, Springer Berlin
Heidelberg, 2010, 6531, pp. 99-113

[14] F. Yao, S.Y. Yerima, B. Kang and S. Sezer, “Event-driven implicit au-
thentication for mobile access control.” 2015 9th International Conference
on Next Generation Mobile Applications, Services and Technologies,
Cambridge, 2015, pp. 248–255

[15] F. Yao, S.Y. Yerima, B. Kang and S. Sezer, “Fuzzy logic- based implicit
authentication for mobile access control.” SAI Computing Conference
(SAI), IEEE, London, 2016, pp. 968–975.

[16] J.S.R. Jang, “ANFIS: adaptive-network-based fuzzy inference system.”
in IEEE Transactions on Systems, Man, and Cybernetics, 1993, 23, (3),
pp. 665–685

[17] S.A. Khan, M.D. Equbal and T. Islam, “A comprehensive comparative
study of DGA based transformer fault diagnosis using fuzzy logic and
ANFIS models.” in IEEE Transactions on Dielectrics and Electrical
Insulation, 2015, 22, (1), pp. 590–596.

[18] Suraj, R.K. Sinha and S. Ghosh, “Jaya Based ANFIS for Monitoring of
Two Class Motor Imagery Task.” in IEEE Access, 2016, 4, pp. 9273–
9282.

[19] Y. Liu, W. Zhang, and Y. Zhang, “Dynamic Neuro-Fuzzy-Based Human
Intelligence Modeling and Control in GTAW.” in IEEE Transactions on
Automation Science and Engineering, 2015, 12, (1), pp. 324–335.
[20] S.Y. Yerima, “Implementation and evaluation of measurement-based
admission control schemes within a converged networks qos management
framework.” International Journal of Computer Networks and Communi-
cations, IJCNC, 2011, 3, (4), ISSN: 0974-9322[Online], 0975-2293[print]
[21] S.Y. Yerima and K. Al-Begain, “Novel radio link buffer management
schemes for end-user multi-class trafﬁc in high speed packet access
networks.” Wireless Personal Communications, 2011, 61, (2), pp. 349–
382

IEEE International Conference on Cyber Security and Protection of Digital Services (Cyber Security 2017), June 19-20, 2017, London,
UK.

