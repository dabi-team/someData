5
1
0
2

r
p
A
6
2

]

Y
S
.
s
c
[

1
v
0
1
8
6
0
.
4
0
5
1
:
v
i
X
r
a

Self-triggered Coordination over a Shared Network
under Denial-of-Service

Danial Senejohnny, Pietro Tesi, Claudio De Persis

Abstract— The issue of security has become ever more preva-
lent in the analysis and design of cyber-physical systems. In
this paper, we analyze a consensus network in the presence
of Denial-of-Service (DoS) attacks, namely attacks that prevent
communication among the network agents. By introducing a
notion of Persistency-of-Communication (PoC), we provide a
characterization of DoS frequency and duration such that con-
sensus is not destroyed. An example is given to substantiate the
analysis.

I. INTRODUCTION

transcend the cyber realm and affect

In recent years, the issue of security has become ever more
prevalent in the analysis and design of cyber-physical systems
(CPSs), namely systems that exhibit a tight conjoining of
computational resources and physical resources. As argued in
[1], [2], security in CPSs drastically differs from security in
general-purpose computing systems since attacks can cause
disruptions that
the
physical world. In CPSs, attacks to the communication links
can be classiﬁed as either deception attacks or Denial-of-
Service (DoS) attacks. The former affect the trustworthiness of
data by manipulating the packets transmitted over the network;
see [3]-[5] and the references therein. DoS attacks are instead
primarily intended to affect the timeliness of the information
exchange, i.e., to cause packet losses; see for instance [6], [7]
for an introduction to the topic. This paper is concerned with
DoS attacks.

In the literature, the problem of securing robustness of CPSs
against DoS has been investigated by many research groups
[8]-[13]. In these papers, however, the analysis is restricted to
a centralized setting, namely to a classical (single-loop) plant-
controller conﬁguration. On the other hand, no quantitative
results are available for distributed settings. The purpose of
this paper is to explore this topic.

We investigate the issues of DoS with respect to consen-
sus networks. Speciﬁcally, inspired by [14], we consider a
self-triggered consensus network. At each sampling time, a
certain subset of active agents poll their neighbors obtaining
relative measurements of the consensus variable of interest:
the available information is then used by the active agents to
update their controls and compute their next update times.
The attacker objective is to prevent consensus by denying
communication among the agents. Consensus is a prototypical
problem in distributed settings with a huge range of applica-
tions, spanning from formation and cooperative robotics to

D. Senejohnny, P. Tesi, and C. De Persis are with ENTEG, Faculty of Math-
ematics and Natural Sciences, University of Groningen, 9747 AG Groningen,
The Netherlands d.senejohnny@rug.nl, p.tesi@rug.nl,
c.de.persis@rug.nl

surveillance and distributed computing; see for instance [14]-
[18]. On the other hand, self-triggered coordination turns out to
be of major interest when consensus has to be achieved in spite
of possibly severe communication constraints. In this respect,
a remarkable feature of self-triggered coordination lies in the
possibility of ensuring consensus properties in the absence of
any global information on the graph topology and with no
need to synchronize the agents local clocks.

A basic question in the analysis of distributed coordination
in the presence of DoS is concerned with the modeling of DoS
attacks. In this paper, no assumption is made regarding the
DoS attack underlying strategy. We consider a general attack
model that only constrains the attacker action in time by posing
limitations on the frequency of DoS attacks and their duration.
This makes it possible to capture many different types of DoS
attacks, including trivial, periodic, random and protocol-aware
jamming attacks [19]-[22]. One contribution of this paper is an
explicit characterization of the frequency and duration of DoS
attacks under which consensus properties can be preserved.
The result is intuitive as it relates consensus with the ratio
between the on/off periods of jamming.

The analysis taken here reminds of stability problems for
switching systems. More speciﬁcally, since DoS generates
communications failures, the problem is naturally casted as
a consensus problem for switching topology networks. This
problem is certainly not new in the literature. For instance,
[15] shows that agreement can be reached whenever the graph
connectivity is preserved point-wise in time; [17] suggests a
Persistency of Excitation (PoE) condition, which stipulates that
graph connectivity be established over a period of time, rather
than point-wise in time, which is similar to joint connectivity
assumption in [16]. In CPSs, however, the situation turns out
to be drastically different. In fact, one needs to deal with the
fact that networked communication is inherently digital, which
means that the rate at which the transmissions are scheduled
cannot be arbitrarily large. Under such circumstances, the
aforementioned tools turn out be ineffective.

In order to cope with this situation, we introduce a notion
of Persistency of Communication (PoC). This notion naturally
extends the PoE condition to a digital networked setting
by requiring that the graph connectivity be established over
periods of time that are consistent with the constraints imposed
by the communication medium. A characterization of DoS
frequency and duration under which consensus properties can
be preserved is then obtained by exploiting the PoC condition.
The remainder of this paper is organized as follows. In
Section II we formulate the control problem along with a

 
 
 
 
 
 
characterization of the considered class of DoS signals. The
main results in Section III. A numerical example is given in
Section IV. Finally, Section V ends the paper with concluding
remarks.

Notation. The notation adopted in this paper is in the main
standard. We denote by R, R>0, R≥0 the sets of real, positive,
and nonnegative numbers, respectively. Also, we denote by
Z≥0 the set of nonnegative integers.

II. PROBLEM FORMULATION

A. Distributed Control System

We assume to have a set of nodes I = {1, . . . , n} represent-
ing our agents and an undirected connected graph G = (I, E)
with E a set of unordered pairs of nodes, called edges. We
denote by D and L the Incidence and Laplacian matrix of G,
respectively, where the latter is a symmetric matrix. For each
node i ∈ I, we denote by Ni the set of its neighbors, and by
di its degree, that is, the cardinality of Ni.

We consider the following hybrid dynamics on a triplet of n-
dimensional variables involving the consensus variable x, the
controls u, and the local clock variables θ. All these variables
are deﬁned for time t ≥ 0. Controls are assumed to belong to
{−1, 0, +1}. The speciﬁc quantizer of choice is signε : R →
{−1, 0, +1}, deﬁned according to

signε(z) =

sign(z)
0

(

if |z| ≥ ε
otherwise

(1)

where ε > 0 is a sensitivity parameter, which can be used
at the design stage for trading-off frequency of the control
updates vs. accuracy of the consensus region.

The system (x, u, θ) ∈ R3n in the nominal operating mode,
i.e., in the absence of DoS, satisﬁes the following continuous
evolution

˙xi = ui
˙ui = 0
˙θi = −1




(2)

except for every t such that the set S(θ, t) = {i ∈ I : θi = 0}
is non-empty. At such time instants, the system satisﬁes the
following discrete evolution



Self-triggered coordination algorithms such as (2)-(4). turn
out to be of major interest when consensus has to be achieved
in spite of possibly severe communication constraints. In this
respect, a remarkable feature of self-triggered coordination
lies in the possibility of ensuring consensus properties in the
absence of any global information on the graph topology and
with no need to synchronize the agents local clocks [14].

The result which follows characterizes the convergence
properties of (2)-(4) in the nominal operating mode, and will
serve as a basis for the developments of the paper.

Theorem 1: [14]. Given any ¯x ∈ Rn, let x(t) be the solution
to (2)-(4) with x(0) = ¯x. Then x(t) converges in ﬁnite time
to a point x∗ ∈ Rn belonging to the set

E = {x ∈ Rn :

|

(xj − xi)| < ε ∀ i ∈ I}.

(6)

j∈Ni
X

(cid:4)

B. Denial-of-Service

We shall refer to DoS as the phenomenon by which commu-
nication across the network is not possible. More speciﬁcally,
we assume that the network nodes make use of a shared
communication medium. Under DoS, none of network nodes
can send or receive information. This scenario is representative
of several possible DoS threats. In order to maintain continuity,
a discussion on this point is deferred to Section II-C. Here,
we proceed with the DoS modeling and introduce a number
of assumption on its frequency and duration.

Let {hn}n∈Z≥0, where h0≥ 0, denote the sequence of DoS
off/on transitions, i.e., the time instants at which DoS exhibits
a transition from zero (communication is possible) to one
(communication is interrupted). Then

Hn := {hn} ∪ [hn, hn + τn[

(7)

represents the n-th DoS time-interval, of a length τn ∈ R>0,
over which communication is not possible. Here and in the
sequel, it is understood that hh+1 > hn + τn for all n ∈
Z≥0, otherwise Hn ∪ Hn+1 could be regarded as a single
DoS interval.

Given t, τ ∈ R≥ 0, with t ≥ τ , let

xi(t+) = xi(t) ∀i ∈ I

ui(t+) =

θi(t+) =

otherwise

signε(avei(t))
ui(t)
fi(x(t))
θi(t) otherwise

(

(

if i ∈ S(θ, t)

if i ∈ S(θ, t)






where for every i ∈ I the map fi : Rn → R>0 is deﬁned by

fi(x(t)) = 


| avei(t)|
4di
ε
4di

if

if

| avei(t)| ≥ ε

| avei(t)| < ε

,

(4)


where, for conciseness, we have deﬁned
avei(t) =

(xj (t) − xi(t)).

(5)

j∈Ni
X

Ξ(τ, t) :=

Hn

[τ, t]

(8)

(3)

n∈Z≥0
[
represent the sets of time instants where communication is
denied and

\

Θ(τ, t) := [τ, t] \ Ξ(τ, t)

(9)

represent the sets of time instants where communication is
allowed, where \ denote the relative complement and accounts
for the set of all elements belonging to the time interval [τ, t[,
but not to the set Ξ(τ, t).

In connection with the deﬁnition of the DoS sequence in
(7), the ﬁrst question to be addressed is that of determining the
amount of DoS that the network can tolerate before consensus,
as deﬁned in Theorem 1, is lost. In this respect, it is simple
to see that such an amount is not arbitrary, and that suitable

conditions must be imposed on both DoS frequency and
duration.

Let us ﬁrst consider the frequency at which DoS can occur.
First notice that ε/4di provides a lower bound on the inter-
sampling rate of the i-th node of the network, as imposed
by the communication medium. Let now Λn = hn+1 − hn,
with n ∈ Z≥0, denote the time elapsing between any two
successive DoS triggering. By letting dmin = mini∈I di, one
immediately sees that if

Λn ≤ ∆∗ :=

ε
4dmin

then consensus could be destroyed irrespective of the adopted
communication strategy. This is because DoS would be al-
lowed to occur at a rate faster than or equal to the sampling
rate of some network node, which would clearly preclude the
possibility to achieve consensus. It is intuitively clear that, in
order to get stability, the frequency at which DoS can occur
must be sufﬁciently small compared to sampling rate of the
network nodes. A natural way to express this requirement is
via the concept of average dwell-time, as introduced by [23].
Given t, τ ∈ R≥ 0 with t ≥ τ , let n(τ, t) denote the number
of DoS off/on transitions occurring on the interval [τ, t[.

Assumption 1 (DoS frequency): There exist η ∈ R≥0 and

τf ∈ R>∆∗ such that

n(τ, t) ≤ η +

t − τ
τf

(10)

for all t, τ ∈ R≥0 and t ≥ τ .

(cid:4)
In addition to the DoS frequency, one also need to enforce
constraints on the DoS duration, namely the length of the
intervals over which communication is interrupted. To see
this, consider for example a DoS sequence consisting of the
singleton {h0}. Assumption 1 is clearly satisﬁed with η ≥ 1.
However, if H0 = R≥0 (communication is never possible) then
stability is lost regardless of the adopted control update policy.
Recalling the deﬁnition of the set Ξ in (8), the assumption that
follows provides a quite natural counterpart of Assumption 1
with respect to the DoS duration.

Assumption 2 (DoS Duration): There exist κ ∈ R≥0 and

τd ∈ R>1such that

|Ξ(τ, t)| ≤ κ +

t − τ
τd

for all t, τ ∈ R≥0 and t ≥ τ .

C. Discussion

(11)

(cid:4)

The considered assumptions only constrains the attacker
action in time by posing limitations on the frequency of
DoS and its duration. Such a characterization can capture
many different scenarios, including trivial, periodic, random
and protocol-aware jamming attacks [19]-[22]. For the sake
of simplicity, we limit out discussion to the case of radio
frequency (RF) jammers, although similar considerations can
be made with respect to spooﬁng-like threats [24].

Consider for instance the case of constant jamming. Con-
stant jamming is one of the most common threats that may

occur in a wireless network [26], [25]. By continuously
emitting RF signals on the wireless medium, this type of
jammer can lower the Packet Send Ratio (PSR) for transmitters
employing carrier sensing as medium access policy as well as
lower the Packet Delivery Ratio (PDR) by corrupting packets
at the receiver. In general, the percentage of packet losses
caused by this type of jammer depends on the Jamming-to-
Signal Ratio and can be difﬁcult to quantify as it depends,
among many things, on the type of anti-jamming devices, the
possibility to adapt the signal strength threshold for carrier
sensing, and the interference signal power, which may vary
with time. In fact, there are several provisions that can be
taken in order to mitigate DoS attacks, including spreading
techniques, high-pass ﬁltering and encoding [21], [22]. These
provisions decrease the chance that a DoS attack will be
successful, and, as such, limit in practice the frequency and
duration of the time intervals over which communication is
effectively denied. This is nicely captured by the considered
assumptions.

As another example, consider the case of reactive jamming
[26], [25]. By exploiting the knowledge of the 802.1i MAC
layer protocols, a jammer may restrict the RF signal to the
packet transmissions. The collision period need not be long
since with many CRC error checks a single bit error can
corrupt an entire frame. Accordingly, jamming takes the form
of a (high-power) burst of noise, whose duration is determined
by the length of the symbols to corrupt [21], [27]. Also
this case can be nicely accounted for via the considered
assumptions.

III. MAIN RESULTS

A. Modiﬁed Consensus Protocol

The consensus protocol in (3) needs to be modiﬁed in order
to achieve robustness against DoS. In this respect, for every t
such that the set S(θ, t) = {i ∈ I : θi = 0} is not nonempty,
the nominal discrete evolution is modiﬁed as follows:

xi(t+) = xi(t) ∀i ∈ I

ui(t+) = 



θi(t+) = 


signε(avei(t))
0
ui(t)
fi(x(t))
ε
4di
θi(t)






if i ∈ S(θ, t) ∧ t ∈ Θ(0, t)
if i ∈ S(θ, t) ∧ t ∈ Ξ(0, t)
otherwise

if i ∈ S(θ, t) ∧ t ∈ Θ(0, t)
if i ∈ S(θ, t) ∧ t ∈ Ξ(0, t)
otherwise



(12)
In words, when a network node attempts to communicate
and communication is denied, the control signal is set to zero
until the subsequent attempt 1.

It is worth noting that, although an absolute time variable t
is used in the description of the system dynamics, the various

1It is worth noting that this implicitly requires that the nodes be able to
detect the DoS status. This is the case, for instance, when jamming causes the
channel to be busy. Then, transmitters employing carrier sensing as medium
access policy can detect the DoS status. Another example is when transceivers
employ TCP acknowledgment.

nodes implementing the consensus protocol need not to be
aware of such an absolute time. Instead, they rely on their
local clocks θi. As the nodes rely on their local clocks θi the
jump times of each variable θi naturally deﬁne a sequence
of local switching times, which we denote by {ti
k}k∈Z≥0. In
particular, we have

fi(x(ti

k))

ti
k ∈ Θ(0, t)

k+1 = ti
ti

k + 


ε
4di

ti
k ∈ Ξ(0, t)

∀ i ∈ I.

(13)



The modiﬁed algorithm basically consists of a two-mode
sampling logic, where the sampling times in presence of
DoS are chosen different, possibly much smaller, than in the
nominal situation where DoS is absent. As it will become clear
later on, this is in order to maximize the robustness of the
consensus protocol against DoS. By (13), it is an easy matter
to see that the sequences of local switching times {ti
k}k∈Z≥0
satisfy a “dwell time” property since

∆i

k := ti

k+1 − ti

k ≥ =

ε
4dmax

.

(14)

for every i ∈ I and k ≥ 0, where dmax = maxi∈I di.

For the sake of clarity, the modiﬁed consensus protocol is

summarized below.

Modiﬁed Consensus Protocol

(for each i ∈ I )

i applies the control ui(t);

1: initialization: set ui(0) ∈ {−1, 0, +1} and θi(0) = 0;
2: while θi(t) > 0 do
3:
4: end while
5: if θi(t) = 0 & t ∈ Θ(0, t) then
6:

for all j ∈ Ni do

i polls j and collects the information xj(t) − xi(t);

7:
8:

9:
10:

11:
12: else
13:

14:

end for
i computes avei(t);
i computes θi(t+) as in (12);
i computes ui(t+) as in (12);

if θi(t) = 0 & t ∈ Ξ(0, t) then

i set ui(t+) = 0;
i set θi(t+) = ε

4di ;

15:
16:
17: end if

end if

We are now in position to characterize the overall network
behavior in the presence of DoS. In this respect, the analysis
is subdivided into two main steps: i) we ﬁrst prove that all the
network nodes eventually stop to update their local controls;
and ii) we then provide conditions on the DoS frequency and
duration such that consensus, in the sense of (6), is preserved.
This is achieved by resorting to a notion of Persistency-of-
Communication (PoC), which stipulates that disruptions of the
graph connectivity cannot exceed a prescribed threshold. For
convenience the proofs are reported in Section III-B.

As for ii), the following result holds true.

Proposition 1: (Convergence of the solutions) Let x(t) be
the solution to (2) and (12). Then, for every initial condition
x(0), there exists a ﬁnite time T1 such that ui(t) = 0 for all
t > T1 and i ∈ I.

(cid:4)
Clearly, the above result does not allows one to conclude
anything about the ﬁnal disagreement vector in the sense that
given a pair of nodes (i, j) the asymptotic value of xi −xj can
be arbitrarily large. In order to recover the same conclusions
as in Theorem 1, bounds on the parameters τd and τf in
Assumption 1 and 2 have to be enforced.

Consider a sequence {ti

k}k∈Z≥0 of sampling times, along

with a DoS sequence {hn}n∈Z≥0. Let

(i, k) ∈ I × Z≥0 | ti

k ∈

S :=




Hn


n∈Z≥0
[

(15)



denote the set of integers related to a control update attempt
occurring under DoS. Notice that, due to the ﬁnite sampling
rate, a time interval will necessarily elapse from the time
hn + τn at which DoS ceases, to the time at which the nodes
successfully sample and transmit. By construction, this interval
can be upper bounded as



sup
(i,k)∈S

∆i

k ≤ ∆∗

(16)

the last

Notice now that
transmission attempt (if any) of
node i over the n-th DoS interval necessarily falls within
[hn + τn − ε
4di , hn + τn[. This means that the next sampling
falls by construction within [hn + τn, hn + τn + ε
4di [. Hence,
we conclude that a DoS free interval of a length greater than
∆∗ guarantees that all nodes are able to sample and transmit.
Accordingly, deﬁne the following sets that account for the
DoS-induced actuation delay,

¯Ξ(τ, t) :=

¯Hn

[τ, t]

n∈Z≥0
[

\

¯Θ(τ, t) := [τ, t] \ ¯Ξ(τ, t)

(17)

(18)

where

¯Hn := [hn, hn + τn + ∆∗[

By the previous arguments, a sufﬁcient condition under which
all the network nodes are able to communicate at least once
within [τ, t[ is that ¯Θ(τ, t) has positive measure.

The following result then holds.
Proposition 2: (Persistency-of-Communication) Let x(t) be
the solution to (2) and (12). Consider any DoS sequence
satisfying Assumption 1 and 2 with

φ(τf , τd, ∆∗) :=

1
τd

+

∆∗
τf

< 1

(19)

and η and κ arbitrary. Then, for every τ , the set ¯Θ(τ, t) has
positive measure for any time t satisfying

t > τ + (κ + (1 + η)∆∗) (1 − φ(τf , τd, ∆∗))−1

(20)

(cid:4)

Combining Proposition 1 and 2, the main result of this paper

follows at once.

(cid:4)

Theorem 2: Let x(t) be the solution to (2) and (12). Con-
sider any DoS sequence that satisﬁes Assumption 1 and 2 with
τf and τd as in (19) and η and κ arbitrary. Then, for every
initial condition, x(t) converges in ﬁnite time to a point x∗
belonging to the set E as in (6).
A few remarks are in order.
Remark 1: Condition (19) in Proposition 2 amounts to
requiring that the DoS signal does not destroy communication
in a persistent way. This requirement is indeed reminiscent of
Persistency-of-Excitation (PoE) conditions that are found in
the literature on consensus under switching topologies, e.g.,
[17]. There are, however, noticeable differences. In the present
the incidence matrix of the graph is a time-varying
case,
matrix satisfying: i) D(t) = 0 in the presence of DoS; and
ii) D(t) = D in the absence of DoS, where D represents the
incidence matrix related to the nominal graph conﬁguration.
Consider now a DoS pattern consisting of countable number
n∈Z≥0{hn}, with Λn ≤ ∆∗.
of singletons, namely Ξ(0, t) =
It is trivial to conclude that there exist constant δ ∈ R>0 and
α ∈ R>0 such that (cf. [17])

S

that V is non-negative deﬁnite since L is the Laplacian graph.
Thus the proof follows simply by recalling that in both the
cases |avei(ti
k ∈ Ξ(0, t) the control ui is set to
zero.

k)| < ε and ti

(cid:4)

Proof of Proposition 2 By deﬁnition of ¯Ξ and in view of
Assumption 1 and 2, the following bounds on ¯Ξ is readily
obtained:

|¯Ξ(τ, t)| ≤ |Ξ(τ, t)| + (n(τ, t) + 1)∆∗
t − τ
τd

t − τ
τf

≤ κ +

η +

+

(cid:18)

+ 1

∆∗

(22)

(cid:19)

Finally notice that

| ¯Θ(τ, t)| = t − τ − |¯Ξ(τ, t)|

(23)

Combining the two equations above, one sees that a sufﬁcient
condition for PoC is that t − τ > |¯Ξ(τ, t)|, which, in turn, is
implied by

t − τ > κ +

t − τ
τd

t − τ
τf

+

η +

(cid:18)

+ 1

∆∗

(24)

(cid:19)

t0+δ

QD(t)D⊤(t)Q⊤ = QDD⊤Q⊤δ > αI

This is equivalent to

t0

Z

for all t0 ∈ R≥0, where Q is a suitable projection matrix.
However, in accordance with the previous discussion, consen-
sus can be destroyed. The subtle, yet important, difference
is due to the constraint on the frequency of the information
exchange that is imposed by the network. In this sense, the
notion of PoC naturally extends the PoE condition to digital
networked settings by requiring that the graph connectivity be
established over periods of time that are consistent with the
constraints imposed by the communication medium.
(cid:4)

B. Convergence Analysis

This section is devoted to the proof of Proposition 1,

Proposition 2 and Theorem 2.
Proof of Proposition 1. Let

V (x(t)) =

xT (t)Lx(t)

1
2

˙V (t) along the
where t ≥ 0. Consider the evolution of
solutions to (2). Following the same steps as in [14], it is
easy to verify that

˙V (x(t)) ≤ −

i:| avei(ti

k)|≥ε ∧ ti
X

k∈Θ(0,t)

ε
2

(21)

In words, the derivative of V decreases whenever, for some
node i, two conditions are met: i) | avei(ti
k)| ≥ ε, which
means that node i has not reached the consensus set; and ii)
communication is possible.

From (21) we deduce that there must exist a ﬁnite time T1
such that, for every node i and every k with ti
k ≥ T1, either
|avei(ti
k ∈ Ξ(0, t). This is because, otherwise,
the function V would become negative contradicting the fact

k)| < ε or ti

(1 − φ(τf , τd, ∆∗) (t − τ ) > κ + (1 + η)∆∗

(25)

which concludes the proof.

(cid:4)

Proof of Theorem 2. The proof follows immediately by
combining Proposition 1 and 2. In fact, by Proposition 1, all
the local controls converge to zero in a ﬁnite time. In turn,
Proposition 2 excludes the possibility that this is due to a
persistence of the DoS status. This means that converge to the
set E is necessarily achieved.
(cid:4)

IV. NUMERICAL EXAMPLE

In what follows we see a numerical example of the proposed
consensus protocol in presence of DoS. A sustained DoS at-
tack with variable period and duty cycle, generated randomly.
The resulting DoS signal has an average duty cycle of 55%.
We assume completely connected undirected graph with
n = 5 nodes. During times over which communication is
possible each agent is connected to the other agents, namely
di = n−1, while in presence of DoS graph becomes edgeless.
A sample evolution of (2) and (12) starting from the same
initial condition and on the same graph is depicted in Fig. 1
and Fig. 2. Initial conditions are generated randomly between
0 and 1. The vertical gray stripes in Fig. 1 represent the time-
intervals over which DoS is active.

Consistent with the results in [14], [18], system (2),(12)
converges in ﬁnite time to values close to average-maxmin-
consensus, namely 1
2 (mini xi(0) + maxi xi(0)). Presence of
DoS bring about latency in coordination of the agents, this is
due to controls remaining constantly to zero during this period.
Consensus time in Fig. 1 is almost twice the consensus time
in Fig. 2.

1

0.8

0.6

0.4

0.2

0

0

1

0.8

0.6

0.4

0.2

0

0

DoS
x1

x2x3x4x5

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

x1x2x3x4x5

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

Fig. 1. Evolution of state x in (2) and (12) with ε = 0.02 (a complete graph
with n=5 nodes) in presence of DoS with an average duty cycle of ∼ 55%.
The vertical grey stripes represent the time-intervals over which DoS is active.

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

0

x1
x2
x3
x4
x5

0.1

0.2

0.3

0.4

0.5
time(sec)

0.6

0.7

0.8

0.9

1

Fig. 2. Evolution of state x in (2) and (12) with ε = 0.02 (a complete graph
with n=5 nodes) in absence of DoS.

V. CONCLUSION

We investigated coordination of distributed networked sys-
tems in the presence of DoS attacks. We argued persistency
of excitation condition is not enough to achieve consensus.
An explicit characterization of the frequency and duration
of DoS attacks under prsistency-of-communication is found.
Condition under which agents can transmit information and
update their control value frequently enough in sequence of
time.

As an additional future research topic, we can compute
the required consensus time taking into account DoS attack.
Beside the time cost in [14], this clariﬁes the consensus time
gap in presence and absence of DoS. Furthermore, partial

communication failure can also be investigated separately. This
problem is motivated by using a point to point communication
medium.

REFERENCES

[1] A. Cardenas, S. Amin, and S. Sastry, ”Secure control: towards survivable
cyber-physical systems”, Proc. of The 28-th International Conference on
Distributed Computing Systems Workshops, 2008.

[2] Y. Mo, T. Hyun-Jin Kim, K. Brancik, D. Dickinson, H. Lee, A. Perrig,
and B. Sinopoli, ”Cyber-physical security of a smart grid infrastructure”,
Proceedings of the IEEE, vol. 100, pp. 195-209, 2012.

[3] H. Fawzi, P. Tabuada, and S. Diggavi, ”Secure state-estimation for dy-
namical systems under active adversaries”, Annual Allerton Conference
on Communication, Control, and Computing, 2011.

[4] A.Teixeira, K. Sou, H. Sandberg, and K. Johansson. ”Secure Control
Systems: A Quantitative Risk Management Approach”, Control Systems,
IEEE 35, no. 1 (2015): 24-45.

[5] F. Pasqualetti, F. Dorﬂer, and F. Bullo, ”Control-Theoretic Methods for
Cyberphysical Security: Geometric Principles for Optimal Cross-Layer
Resilient Control Systems”, Control Systems, IEEE 35.1 (2015): 110-
127.

[6] W. Xu, K. Ma, W. Trappe, and Y. Zhang, ”Jamming sensor networks:
Attack and defense strategies”, IEEE Network, vol. 20, pp. 4147, 2006.
[7] D. Thuente and M. Acharya, ”Intelligent jamming in wireless networks
with applications to 802.11b and other networks”, Proc. 25th IEEE Com-
munications Society Military Communications Conference, Washington,
DC, USA, 2006.

[8] A. Teixeira, I. Shames, H. Sandberg, and K.H. Johansson. ”A secure
control framework for resource-limited adversaries”, Automatica 51
(2015): 135-148.

[9] C. De Persis and P. Tesi. ”Input-to-state stabilizing control under denial-
of-service”, IEEE Trans. on Automatic Control, in press, 2015. DOI:
10.1109/TAC.2015.2416924

[10] C. De Persis and P. Tesi, ”Resilient control under denial-of-service”, in
Proceedings of the IFAC World Congress, Cape Town, South Africa,
2014.

[11] S. Amin, A. Cardenas, and S. Sastry, ”Safe and secure networked
control systems under denial of-service attacks”, In Hybrid systems:
Computation and Control, pp. 31-45, 2009.

[12] A. Gupta, C. Langbort, and T. Basar, ”Optimal control in the presence
of an intelligent jammer with limited actions”, Proc. of the 49th IEEE
Conference on Decision and Control, Atlanta, GA, USA, 2010.
[13] H. Shisheh Foroush and S. Martinez, ”On event-triggered control of
linear systems under periodic denial of service attacks”, Proc. of the
IEEE Conf. on Decision and Control, Maui, HI, USA, 2012.

[14] C. De Persis and P. Frasca, ”Robust self-triggered coordination with
ternary controllers”, IEEE Trans. on Automatic Control, vol. 58, pp.
3024-3038, 2013.

[15] R. Olfati-Saber, R M. Murray. ”Consensus problems in networks of
agents with switching topology and time-delays”, Automatic Control,
IEEE Transactions on 49, no. 9 (2004): 1520-1533.

[16] A. Jadbabaie, J. Lin, A. Morse. ”Coordination of groups of mobile
autonomous agents using nearest neighbor rules”, Automatic Control,
IEEE Transactions on 48, no. 6 (2003): 988-1001.

[17] M. Arcak. ”Passivity as a design tool for group coordination”, Automatic

Control, IEEE Transactions on 52, no. 8 (2007): 1380-1390.

[18] J. Corts. ”Finite-time convergent gradient ﬂows with applications to
network consensus”, Automatica 42, no. 11 (2006): 1993-2000.
[19] D. Thuente and M. Acharya, ”Intelligent jamming in wireless networks
with applications to 802.11b and other networks”, Proc. 25th IEEE Com-
munications Society Military Communications Conference, Washington,
DC, USA, 2006.

[20] W. Xu, W. Trappe, Y. Zhang, and T. Wood, ”The feasibility of launching
and detecting jamming attacks in wireless networks”, ACM International
Symposium on Mobile Ad-Hoc Networking & Computing, 2005.
[21] B. De Bruhl and P. Tague, ”Digital ﬁlter design for jamming mitigation
in 802.15.4 communication”, in Int. Conf. on Computer Communica-
tions and Networks, Maui, Hawaii, 2011.

[22] P. Tague, M. Li, and R. Poovendran, ”Mitigation of control channel
jamming under node capture attacks”, IEEE Transactions on Mobile
Computing, vol. 8, pp. 12211234, 2009.

[23] J. Hespanha and A. Morse, ”Stability of switched systems with average
dwell-time”, Proc. of the 38th IEEE CDC, Orlando, Florida USA, 1999.

 
 
 
 
[24] J. Bellardo and S. Savage. ”802.11 denial-of-service attacks: Real
vulnerabilities and practical solutions”, Proc. of USENIX Security
Symposium, 2003.

[25] M. Iliofotou K. Pelechrinis and S.V. Krishnamurthy. ”Denial of service
attacks in wireless networks: The case of jammers”, IEEE Communica-
tions Surveys & Tutorials, 13:245-257, 2010.

[26] W. Xu, K. Ma, W. Trappe, and Y. Zhang. ”Jamming sensor networks:
Attack and defense strategies”, IEEE Network, 20:41-47, 2006.
[27] A.D. Wood and J.A. Stankovic. ”Denial-of-service in sensor networks”,

EEE Computer, 10:5462, 2002.

