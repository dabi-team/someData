6
1
0
2

r
a

M
0
3

]

R
C
.
s
c
[

3
v
6
0
2
5
0
.
7
0
5
1
:
v
i
X
r
a

Interception in Distance-Vector Routing Networks

David Burstein
University of Pittsburgh

Franklin Kenter
Rice University

Jeremy Kun
University of Illinois at Chicago

Feng Shi
University of Chicago

Despite the large eﬀort devoted to cybersecurity research over the last decades, cyber intrusions
and attacks are still increasing. With respect to routing networks, route hijacking has highlighted
the need to reexamine the existing protocols that govern traﬃc routing.
In particular, our pri-
mary question is how the topology of a network aﬀects the susceptibility of a routing protocol to
endogenous route misdirection. In this paper we deﬁne and analyze an abstract model of traﬃc
interception (i.e. eavesdropping) in distance-vector routing networks. Speciﬁcally, we study al-
gorithms that measure the potential of groups of dishonest agents to divert traﬃc through their
infrastructure under the constraint that messages must reach their intended destinations. We relate
two variants of our model based on the allowed kinds of lies, deﬁne strategies for colluding agents,
and prove optimality in special cases. In our main theorem we derive a provably optimal monitoring
strategy for subsets of agents in which no two are adjacent, and we extend this strategy to the
general case. Finally, we use our results to analyze the susceptibility of real and synthetic networks
to endogenous traﬃc interception. In the Autonomous Systems (AS) graph of the United States,
we show that compromising only 18 random nodes in the AS graph surprisingly captures 10% of all
traﬃc paths in the network in expectation when a distance-vector routing protocol is in use.

1.

INTRODUCTION

Several recent events have demonstrated that internet
routing protocols are particularly vulnerable to misdi-
rections in routing [6, 10, 11, 15]. This brings up the
question: How vulnerable are trust-based communication
protocols to malicious agents who can abuse this trust?
To answer this question, we present and study a model
of traﬃc interception in routing networks largely inspired
by real-life incidents. See Figure 1 for an example. In
practice, a wide range of routing protocols are devel-
oped and implemented for communications. For exam-
ple, the Border Gateway Protocol (BGP) is used for
inter-domain communications between autonomous sys-
tems in the modern Internet; distance-vector and link-
state routing protocols are used for intra-domain com-
munications. Instead of going into the technical details
of the protocols and their business models, we study
a mathematical and parsimonious model for traﬃc in-
terception in general. The model closely resembles the
distance-vector protocols such as the Routing Informa-
tion Protocol (RIP) [12, 16]. Due to their simplicity and
eﬃciency, distance-vector protocols are widely used in
moderate-size IP networks and ad hoc mobile networks
[13, 23]. Therefore, in this work we study a theoretical
model for “distance frauds” [21] in an abstract setting
of distance-vector protocols, and aim to provide a start-
ing point to investigate security issues of other complex
routing protocols.

The model is stated formally in Section 3, but can be
loosely described as follows. For a graph G in which ver-
tices are agents, a subset S of agents are designated “col-
luders” and the rest are “honest”. Honest agents main-
tain a distance-vector recording their believed distances
to all other agents in the network, broadcasting this in-
formation to their immediate neighbors in each round
and updating their beliefs with the information broad-
casted to them. When honest agents send or forward
a message, they route it to any neighbor that is closest
to the message’s recipient. Meanwhile, colluding agents
have knowledge about the entire graph and want to max-
imize the number of messages that are routed through at
least one member of S. They can achieve this by lying in
their broadcasts to their neighbors making it appear they
are closer to the message’s destination than they actually
are. As a result, the honest agents will unknowingly for-
ward messages to the colluding agents along a potentially
suboptimal path (See, for example, Figure 1).

While it would seem easy for the colluding agents to lie
in order to intercept messages, we impose the additional
requirement that every message must eventually reach
its intended destination, as frequently dropped messages
would raise an alarm causing the colluders to be discov-
ered. This makes strategy design diﬃcult for the collud-
ing agents, as they must carefully balance lying in order
to attract messages while not overstating their proximity
to the recipient which would cause never-ending cycles.
Solving this problem not only provides a tool for ana-

 
 
 
 
 
 
2

Figure 1. An incident in connection with traﬃc interception as reported in [15], where a “colluding agent” (square) in Ukraine,
broadcasts a false distance and intercepts a message sent from an honest agent in Texas whose target is the British Telecom,
that services the UK Atomic Weapon’s Establishment. The solid line indicates how the message should be routed under
the presence of only honest agents. The dotted line demonstrates how the message is routed when the “colluding agent”
(square) broadcasts a false distance, and reroutes the message to its intended target. The above image is a simpliﬁcation of
the documented rerouting, as the circle in the UK is in fact representative of multiple honest agents (autonomous systems).

lyzing the susceptibility of a network to endogenous in-
formation interception, but further informs protocol de-
signers of the vulnerability of honest agents naively fol-
lowing protocols of this type. Our contributions are to
analyze this model at many levels from both theoretical
and practical perspectives. In this article, we accomplish
the following:

• Formulate appropriate generalized combinatorial
models for trust-based communication in networks
(Section 3);

• Demonstrate that the case where each colluding
agent may broadcast a diﬀerent piece of infor-
mation to each of its neighbors, the non-uniform
broadcast model, reduces to the case where each
individual colluding agent must broadcast the same
information to its neighbors, the uniform broadcast
model (Proposition 4.2);

• Given a set of malicious agents S where none of
them are adjacent, provide the optimal strategy re-
garding how the agents of S should broadcast (The-
orem 5.1);

• Show that optimally choosing a set of colluding

agents is NP-complete (Section 4.1); and

• Provide simulations demonstrating that, for various
types of real-world and synthetic networks, a very
small portion of colluding agents, acting strategi-
cally, can in fact intercept a signiﬁcant proportion
of messages. These results add a new perspective

on the attack tolerance of scale-free networks [1]. In
addition to being vulnerable to connectivity attacks
by removing high degree nodes, they are vulnerable
even to random interception attacks (Section 6).

This paper is organized as follows.

In Section 2 we
review related work. In Section 3 we deﬁne our models,
and discuss their complexity in Section 4. In Section 5
we deﬁne our strategies, and in Section 5.2 we prove the
optimality of our strategy (Theorem 5.1). We generalize
the strategy of Theorem 5.1 to the general case of con-
nected agents in Section 5.3. In Section 6 we empirically
evaluate the quality of our strategies, and in Section 7
we conclude with open problems.

2. RELATED WORK

There has been an extensive literature on secure de-
signs of the distance-vector routing protocol [13, 23, 25,
26] and on algorithms that detect potential security is-
sues [5, 7, 22]. Our work deviates from those lines in
mainly two ways. First, as discussed in the Introduction
we study a theoretical model for “distance frauds” [21]
in an abstract setting of distance-vector protocols. Sec-
ond, rather than developing algorithms to detect mali-
cious agents we aim to understand the potential of groups
of dishonest agents to divert traﬃc through their infras-
tructure. Recent high-proﬁle internet outages [24] have
proven that traﬃc attraction or interception is an impor-
tant security issue of modern Internet, attracting large

attention on the threat models, incentive schemes, and
secure alternatives for BGP [2, 4, 8, 9, 14, 19].

Our work is in the spirit of [2], where the authors seek
to provide estimates on the amount of traﬃc that can be
intercepted or hijacked by colluding agents. In contrast
to their work, we want to focus on information intercep-
tion and we disallow “black-holes”, a type of attack that
results in numerous dropped messages. Consequently,
identifying strategies that promote information monitor-
ing by maximizing traﬃc to the colluding agents becomes
highly non-trivial. In order to ease the theoretical anal-
ysis, we move away from BGP and adopt the framework
of distance-vector routing protocol. Furthermore, we as-
sume that the honest agents are unsuspecting of the pos-
sibly nefarious objectives of the colluding agents. We
prioritize studying traﬃc interception over hijacking at-
tacks with “black holes”, as in the latter case the honest
agents would immediately realize that one of their rout-
ing paths has been compromised. Consequently, we be-
lieve our model will serve as a fundamental tool in analyz-
ing the more involved problem (not discussed here) where
honest agents actively seek out the colluding agents, and
the colluding agents must not only optimize the amount
of traﬃc sent to them, but also they must conceal their
identities from the honest agents.

3. MODEL AND PRELIMINARIES

For our study, we focus on a ﬁnite, unweighted, undi-
rected graph G = (V, E) with V = {1, . . . , n} being the
agents. We will write i ∼ j if {i, j} ∈ E, i.e., nodes i and
j are adjacent.

The model employs two types of agents represented by
the vertices. First are honest agents which follow an au-
tomated protocol. This protocol allows the honest agents
to learn about the distances between themselves and vari-
ous other agents over time. As a result, for any given des-
tination, each honest agent learns to which of its neigh-
bors it should “optimally” route a message. Second are
colluding agents who make various choices within mild
constraints. Colluding agents act cooperatively with the
goal of intercepting as many messages as possible. They
achieve this by broadcasting (potentially) false distances
thereby tricking the honest agents into routing messages
along a suboptimal path.

3.1. What honest agents do

Each honest agent i maintains an n-length vector,
(ρt(i, 1), ρt(i, 2), · · · , ρt(i, n)), corresponding to all the
believed distances for agent i between i and every agent
at time t.

Each agent, i, initially sets ρ0(i, j) to

ρ0(i, j) =

(cid:40)
if i = j
0
∞ otherwise.

3

(1)

While honest agents do not know the topology of the
network, they can learn about the distances between
other nodes with a synchronization protocol. At each
step, each honest agent will receive broadcasts from its
neighbors (including both honest and colluding agents)
on their believed distances and update the information
as follows.

ρt+1(i, j) = min{ρt(i, j), 1 + min
k∼i

ρt(k, j)}

(2)

An example of the synchronization process is illus-
trated in Figure 2. One can observe that the distance
ρt(i, j) is nonincreasing with respect to t. Further, if all
agents are honest the ρt(i, j) will converge in at most n−1
rounds. We will denote ρ(i, j) the stationary distances in
the end of the synchronization protocol. All our analyses
are based on the stationary distances ρ(i, j).

Afterwards, each honest agent, i, establishes a forward-
ing policy which is an array of n-sets, bi = (bi,j)n
j=1 where
bi,j is the set of neighbors of i advertising the shortest
path to j. That is,

bi,j = argmink∼i ρ(k, j)

(3)

where the argmin is a set of all such minimizing ar-
guments. Finally, when agent i must forward a message
whose destination is node t, it forwards to a uniformly
random node in bi,t. The random choice is made inde-
pendently for every forwarding event.

Observe that if all agents are honest, the ρ(x, y) is
precisely the graph distance from x to y which we de-
note as d(x, y), and also for any shortest-distance path
x = v0, v1, . . . , v(cid:96) = y, we have vi+1 ∈ bvi,y for all
i = 0, . . . , (cid:96) − 1. Conversely, for a node w to optimally
route a message to y, w simply forwards the message to
any member of bw,y.

3.2. What colluding agents can do

The colluding agents work together and form a strat-
egy by choosing a broadcasting distance ρt(v, ·), and a
forwarding policy bv for each colluding agent v. The
colluding agents do not update their believed distances
ρ based on the broadcasting distances from their neigh-
bors; instead, they can broadcast any distances to gain
traﬃc, and our goal is to ﬁnd the “best” value of ρ(v, ·)
for every colluding agent v. In this case broadcasts will
not change across rounds, which means that agent v will
broadcast the same ρ(v, ·) across all rounds, and so we
drop the superscript for time for colluding agents.

4

where each agent in S acts like an honest agent by broad-
casting the true distance is admissible. We call this the
honest strategy.

We analyze the eﬀectiveness of a strategy by the num-
ber of node-pairs for which the colluding agents neces-
sarily intercept a message.
In this sense, we take the
worst-case approach for the colluding agents. To make
this formal, given a set of colluding agents S and admissi-
ble strategy θ, let pS,θ be the proportion of pairs of nodes
{i, j} such that every corresponding path between i and
j passes through some node in S. Further, a strategy is
beneﬁcial if pS,θ > pS,θhonest, where θhonest is the honest
strategy.

4. ALGORITHMIC ANALYSIS

In this section, we explore various algorithmic ques-
tions. First, we demonstrate that optimally selecting a
set of colluding agents of a ﬁxed size is NP-hard. We
achieve this by reducing the problem to vertex covering.
Additionally, we give examples where the optimal eﬀec-
tiveness of a set of colluding agents S is not submodular.
Finally, we prove that a variant model where the collud-
ing agents S may broadcast diﬀerent, potentially false,
messages to its neighbors reduces to the case where the
broadcast is uniform.

4.1. NP-hardness and submodularity

We investigate the algorithmic properties of optimally
choosing a set of colluding agents by considering the case
when the agents use the honest strategy, θhonest. In which
case, how do we pick which nodes should collude? In fact
the problem of optimally selecting nodes reduces to the
following:

Problem 4.1 (p-Shortest Path Dominating Set). Given
a graph G = (V, E) an integer k ≥ 1 and p ∈ [0, 1], is
there a set S ⊂ V of size k so that at least p(cid:0)n
(cid:1) shortest
paths pass through S?

2

We abbreviate this by SPDS(p, k) and say a vertex v
covers a path if it lies on the path. There are two natural
optimization problems associated with SPDS. The ﬁrst,
MAX-SPDS(−, k), is to maximize the p achieved over all
sets of size k. The second, MIN-SPDS(p, −), minimizes
k while attaining a prespeciﬁed p. SPDS(p, k) is trivially
NP-hard because SPDS(1, k) is VERTEX-COVER.

By a standard argument, the function f : 2V → [0, 1]
mapping S to the proportion of shortest paths covered
by S is submodular[20] and monotone. Hence, by a clas-
sic theorem of Nemhauser, Wolsey, and Fisher [17], the
greedy algorithm provides a (1 − 1/e)-approximation al-
gorithm for MAX-SPDS(−, k). A slight variant of the
greedy algorithm presented by Wolsey [28] achieves a p-
proportion of shortest paths with a set S of size

Figure 2. (Left) Initially, nodes x and y know that they are
neighbors to node z and have a perceived distance ρ = 1 to
z. In contrast, node w does not know its distance to z and
denotes it as ∞. (Right) After 1 round, nodes x and y both
tell w, that they are distance 1 from z. Hence, node w updates
is distance ρ to z to be 2 and stores which of its neighbors (x
and y) are on the shortest path from w to z.

During each step of the the synchronization protocol,
each colluding agent will broadcast its ρ to all of its neigh-
bors. The honest neighbors will perceive these distances
to be real and update their believed distances ρ, and b in
equations 2 and 3 accordingly, converging in n − 1 steps.
Allowing any strategy will potentially cause messages
to route in a loop without reaching its destination. For
example, see Figure 3. Hence, we restrict the space of
admissible strategies to be those that do not determin-
istically cause such loops. Further, agents cannot falsely
advertise to be destinations they are not. In the language
of BGP, we disallow “black holes.”

To deﬁne this formally, we say a path from s to t, s =
v0, v1, . . . , v(cid:96) = t, is a corresponding path if vi+1 ∈ bvi,t
for i an honest agent. That is, a corresponding path has
each honest agent forward each message to a neighbor
advertising a minimum distance where colluding agents
choose to whom they forward messages. A strategy is
then admissible if there is a corresponding path between
every pair of nodes.

An admissible strategy is one for which every mes-
sage will with high probability over tie breaks by honest
agents, eventually reach its destination. Although it may
travel along cycles during its routing, with overwhelming
probability the number of steps will be polynomial in the
size of the graph. This may be thought of as the weakest
form of avoiding black holes, and it allows our analysis
to focus on ensuring the existence of some optimal path
from the source to the target. Equivalently (up to high
probability over tie-breaks), we may assume that honest
agents, when faced with a tie between an option that will
cycle and an option that will not cycle, will choose the
latter to break the tie.

It is worth noting that for every set S the strategy

wxyzwxyzRound 0Round 15

Figure 3. For simplicity, in the ﬁgure above we drop the time subscript for ρ and assume the broadcast does not change.
Consider an undirected graph (top left) where the node q wants to send a message to z. If nodes are broadcasting their true
distances (top right), the induced directed graph illustrates how the message travels from node q to node z.
If node x, a
colluding node, overzealously broadcasts a distance that is too small to all of its neighbors (bottom left), the message will
never reach z and hence is inadmissible. However, if x broadcasts the same false distance (of 3) to all of its neighbors as in the
uniform model (bottom right), node x captures the traﬃc coming from q. We construct a corresponding path by considering
the case where node s forwards the message to u (as u and x are broadcasting the same distance), which demonstrates that
the strategy is indeed admissible.

(cid:20)

|S| =

1 + log max
v∈V

(cid:21)

f ({v})

OP T = [1 + O(log(n))] OP T

where OPT is the size of the smallest set covering a p-
proportion of shortest paths.

A similar reduction from VERTEX-COVER shows
that the problem of picking colluding nodes and a good
strategy for lying is also NP-hard. Moreover, the collu-
sion problem is not submodular. We prove this below,
and as such, we will henceforth focus on the problem of
determining the optimal strategy for a given set of col-
luding agents.

Proposition 4.1. Fix θ(S) mapping subsets of vertices
to optimal strategies. Deﬁne f : 2V (G) → R by letting
f (S) be the number of shortest paths passing through S
when S uses the strategy θ(S). Then f is not submodular.

Proof. Let G = Km,2 be the complete bipartite graph
on parts X, Y with X = {p, q}, |Y | = m. Let S =
{}, T = {p}. Then adding q to T captures every path

in G. Adding q to S captures only the messages sent to
and from q, because other messages are routed via p. In
particular,

f (S ∪ {q}) − f (S) = 2(m + 1) = O(m)

f (T ∪ {q}) − f (T ) = 2

(cid:18)m + 2
2

(cid:19)

− 2(m + 1) = O(m2),

disproving submodularity.

There are also interesting examples of this that rely on
lies in a nontrivial way, for example when G = Cn for
suﬃciently large n. In this case a single node has little
advantage, but adding a second adjacent node allows for
an interesting collusion. One of the two colluders may
broadcast 1 for most targets, and forward incoming mes-
sages to the its neighboring colluder who in turn forwards
along Cn to the target. We discuss the broadcast bounds
for this case in Section 5.3.

xzqsuxzqsuxzqsuxzqsu4.2. Non-uniform broadcasting and a reduction

Previously, we required each colluding agent to broad-
cast its false distances uniformly to all of its neighbors.
However, realistically, a colluding agent could make vary-
ing broadcasts to diﬀerent neighbors. We refer to this as
the nonuniform model and the previous as the uniform
model.

Formally, the only diﬀerence between the models is
that for the nonuniform model, the colluding agents must
establish a more precise broadcast strategy, ρ(v, t, i), for
each colluding agent v and each neighbor i.

Nonuniform lies might appear at ﬁrst glance to pro-
vide a substantial increase in power. In particular, there
are many more strategies, and it seems easier to acciden-
tally introduce a large cycle, so it seems computationally
harder to ﬁnd an optimal solution. However, we show
this is not the case. Finding the optimal nonuniform
strategy for a ﬁxed subset is reduces to ﬁnding the op-
timal uniform strategy. Because the uniform model is
also a special case of the nonuniform model, this shows
the two problems are computationally equivalent. This
justiﬁes a focused study of the uniform model.
Consider the following decision problem:

Problem 4.2 (UNIFORM-SUBSET-MONITORING).
Given a graph G = (V, E), a subset S ⊂ V and a
p ∈ [0, 1], is there an admissible strategy θ for S such
that in the uniform broadcast model pS,θ ≥ p?

Similarly for nonuniform lies, we analogously de-
ﬁne NONUNIFORM-SUBSET-MONITORING. We will
prove that the nonuniform case reduces to the uniform
case with a small blowup construction.

Proposition
MONITORING reduces
MONITORING.

4.2.

NONUNIFORM-SUBSET-
to UNIFORM-SUBSET-

Proof. Given a graph G, a subset S, and a fraction p
for the nonuniform model, we produce a new graph G(cid:48),
a subset S(cid:48), and a fraction p(cid:48) for the uniform model as
follows. (See ﬁgure 4 for an illustration). For simplicity
we will prove the case where G is D-regular. Start by
setting G(cid:48) = G. For each edge e = (u, v) where u ∈ S,
subdivide e in G(cid:48) with a new vertex we. Also for each
such edge, add u, we to S(cid:48). Finally, set

p(cid:48) =

2

p(cid:0)|V |

(cid:1) + (cid:0)|S|D

(cid:1) + |S||V |

2
(cid:0)|V |+|S|D
2

(cid:1)

.

Suppose there is a strategy θ for S, G achieving a p
fraction in the nonuniform model. We’ll convert θ into
a strategy θ(cid:48) for S(cid:48). Whenever a colluding agent u ∈ S
would broadcast ρ to a neighbor v, we have the agent
w(u,v) uniformly broadcast ρ. And whenever a message
goes to w(u,v) with some other destination, w(u,v) for-
wards it through u, who in turn forwards it to the w(u,v(cid:48))
corresponding to the same v(cid:48) that u would forward to

6

Figure 4. An illustration for Proposition 4.2. Given a graph
G, a set of colluding agents S (shaded circles), and a frac-
tion p for the nonuniform model (left panel), we produce a
new graph G(cid:48), a new set of colluding agents S(cid:48) (shaded cir-
cles), and a fraction p(cid:48) for the uniform model (right panel)
by inserting a new colluding agent to every edge connecting
a colluding agent in S and a honest node. We show in the
proposition that a nonuniform broadcasting strategy in the
left is equivalent to an uniform broadcasting strategy in the
right.

in the nonuniform setting. This simulates θ, and hence
achieves the same p(cid:0)|V |
(cid:1) paths in G; the formula for p(cid:48)
simply counts the paths introduced by the new vertices
(all of which include a colluding agent). So if pS,θ ≥ p in
G, pS(cid:48),θ(cid:48) ≥ p(cid:48) in G(cid:48).

2

Conversely, we can collapse any uniform strategy for
S(cid:48) into a nonuniform one for S by contracting all the
newly added edges in G(cid:48) and combining their broadcasts
in the obvious way. The case where G is irregular is anal-
ogous, and it’s clear the appropriate p(cid:48) can be eﬃciently
computed.

5. STRATEGIES FOR THE UNIFORM MODEL

We now turn to a detailed study of the uniform broad-
cast model. In this section, we deﬁne the optimal strat-
egy in Section 5.2 and prove that it is optimal. Mini-
mizing the distances broadcasted by the colluding agents
optimizes the traﬃc captured by the agents; therefore,
to prove the optimality of the strategy we show that it
achieves the minimal distances that could be broadcasted
by the colluding agents without causing “black holes”.
Our main result is the following:

Theorem 5.1. Let G = (V, E) be a graph and S ⊂ V
a ﬁxed subset of vertices such that the actual distance
d(x, y) ≥ 2 for all x, y ∈ S. Then the strategy ρ∗ deﬁned
in Section 5.2 intercepts an optimal fraction of traﬃc in
G.

The proof consists of two parts. After deﬁning the
broadcast policy ρ∗ in Section 5.2 and the associated for-
warding policy, we ﬁrst prove in Proposition 5.4 that the
strategy is admissible, and then in Proposition 5.5 that
ρ∗ is the minimal broadcast for any admissible strategy.

Nonuniform BroadcastUniform Broadcast5.1. A single agent

We start by characterizing the case of a single colluding
agent. This case is useful because it forms a “base case”
for our more complicated strategies later. In this case,
the best strategy is simple: lie exactly two less than your
true distance to a target. We show that this is guaranteed
not to cause cycles while any larger lie causes a cycle of
length 2.

Before we state the theorem below, we remind readers
that d(x, t) is the true graph distance from node x to
node t.

Theorem 5.2. Let x be a colluding node and t be a tar-
get node whose true distance in G is d(x, t) = k. Suppose
that x broadcasts ρ(x, t) = k(cid:48). Then this strategy is ad-
missible and beneﬁcial if and only if one of the following
conditions hold.

1. k(cid:48) = k − 2 and there is a neighbor z of x with

d(z, t) = k = k(cid:48) + 2.

2. k − 2 ≤ k(cid:48) ≤ k − 1 and there is a neighbor z of x
with d(z, t) = k + 1, and there is a shortest path
from z to t that does not pass through x (before x’s
lie).

Proof. Note that d(x, t) = k if and only if the closest
neighbor y of x to t has distance d(y, t) = k − 1. The
strategy for x will be to route all messages to t through
y.

For one direction, suppose one of the above conditions
holds and let z be a neighbor of x satisfying the desired
property. Then z will send messages to t through x,
which x can forward through y. We further claim that
no message forwarded through y to t will ever come back
to x. Call y, v2, v3, . . . the vertices on the route taken
by the sent message after passing through x. We con-
struct a corresponding path by requiring that v2 (cid:54)= x (as
d(y, t) = k − 1 ensures that y has a neighbor v2 such that
d(v2, t) = k − 2) and it follows that the perceived dis-
tances ρ(vi, t) along the message’s path from t are mono-
tonically decreasing in i. This follows from the fact that
x broadcasts the same lie to all its neighbors. In partic-
ular, ρ(x, t) = ρ(v2, t) and so for all j ≥ 2, vj will always
have a closer neighbor than x.

For the converse, suppose the strategy is admissible
and beneﬁcial. First, x cannot broadcast ρ(x, t) < k − 2,
or else y (and by minimality all neighbors of x) will route
messages to t through x, causing a cycle. If k(cid:48) ≥ k, then
no neighbor of x would change its behavior, contradict-
ing beneﬁcialness. This implies the conditions on k(cid:48) in
(1) and (2). Moreover, beneﬁcialness implies x has a
neighbor z that now forwards messages through x, im-
plying its new perceived distance is ρ(z, t) = k(cid:48) + 1. By
the fact that d(x, t) = k, every other neighbor z of x has
k −1 ≤ d(z, t) ≤ k +1. If all neighbors have distance k −1
then no node is forced to send messages to x and implies
the strategy is not beneﬁcial, so let z be a neighbor with
d(z, t) ≥ k.

7

If d(z, t) = k then the shortest path from z to t already
does not pass through x and we must choose k(cid:48) = k −2 to
change z’s behavior. On the other hand, if d(z, t) = k + 1
but has no other shortest path to t except through x,
then lying is not beneﬁcial. If z has another path to t
then setting k(cid:48) = k − 1 breaks the tie.

One can simplify the above lemma by noting that set-
ting k(cid:48) = k − 2 is always nondetrimental, and this is the
optimal nondetrimental lie. So if an agent has incentive
to lie, it may as well lie as much as possible. This moti-
vates the following corollary.

Corollary 5.1. Let x be a single lying agent in G in
the uniform local broadcast model. An optimal admissible
strategy for a single lying agent x is to broadcast ρ(x, t) =
max(1, d(x, t) − 2) for all t ∈ V (G).

Proof. In the proof of Theorem 5.2, we showed that a
vertex x lying in this way cannot produce any cycles of
length 2, since it does not alter the behavior of the neigh-
bor through which x routes messages to t. It remains to
show that there are no longer cycles.

Suppose to the contrary that when s tries to send a
message to t, there is a cycle v1, v2, . . . , vm, vm+1 = v1,
with m ≥ 3. Let i be the index of a vertex on the cy-
cle which minimizes the true distance d(vi, t). Call this
distance a, and note that vi is not a colluding agent (or
else it could correctly forward messages so as to break
the cycle). Because there is a cycle, vi+1 is broadcast-
ing ρ(vi+1, t) ≤ a − 2, but d(vi+1, t) ≥ a. And since
vi+1 forwards to vi+2, we have ρ(vi+2, t) ≤ a − 3 while
d(vi+2, t) ≥ a. We claim this is a contradiction: a col-
luding agent lies by exactly two less than the truth, and
so vi+2 cannot be a colluding agent. But the eﬀect of a
colluding agent’s lie does not change the perceived dis-
tances of any vertex in G by more than two. This shows
the claimed contradiction.

The same algorithm can be jointly and independently
used by multiple colluding agents in the uniform broad-
cast model. We make this rigorous with the following
proposition.

Proposition 5.1. If any set of colluding agents lie in-
dependently according to Corollary 5.1, then their joint
strategy is admissible.

Proof. In the proof of Theorem 5.2, we showed that a
vertex x lying in this way cannot produce any cycles of
length 2, since it does not alter the behavior of the neigh-
bor through which x routes messages to t. It remains to
show that there are no longer cycles.

Suppose to the contrary that when s tries to send a
message to t, there is a cycle v1, v2, . . . , vm, vm+1 = v1,
with m ≥ 3. Let i be the index of a vertex on the cy-
cle which minimizes the true distance d(vi, t). Call this
distance a, and note that vi is not a colluding agent (or
else it could correctly forward messages so as to break
the cycle). Because there is a cycle, vi+1 is broadcast-
ing ρ(vi+1, t) ≤ a − 2, but d(vi+1, t) ≥ a. And since

vi+1 forwards to vi+2, we have ρ(vi+2, t) ≤ a − 3 while
d(vi+2, t) ≥ a. We claim this is a contradiction: a col-
luding agent lies by exactly two less than the truth, and
so vi+2 cannot be a colluding agent. But the eﬀect of a
colluding agent’s lie does not change the perceived dis-
tances of any vertex in G by more than two. This shows
the claimed contradiction.

5.2. Separated agents

We now turn to the case of multiple colluding agents.
By Proposition 4.2, we know that allowing neighboring
colluding agents introduces the ability for nonuniform
broadcasts. So we characterize the alternative where no
two colluding agents are adjacent. The optimal strategy
we deﬁne generalizes to a nontrivial admissible strategy
for the general case in Section 5.3.

For a set X of integers and an integer j, deﬁne SX (j)
to be the set of all permutations of j elements from X.
In this section C = {x1, . . . , xk} will denote the set of
colluding nodes, and no two are adjacent in G.

Deﬁnition 5.1. The j-th colluding distance between two
colluding agents x and y is deﬁned as

dj(x, y) = min

σ∈SC (j)
σ(1)=x
σ(j)=y

j−1
(cid:88)

i=1

d(σ(i), σ(i + 1)).

In other words, it is the length of the shortest path
from x to y that contains j colluding nodes. Call any
path minimizing this quantity a j-th colluding path. If
no such path exists, call dj(x, y) = ∞ by convention.

We will consider j-th colluding paths directed from x to
y when appropriate. Now given a set of colluding nodes
and a target vertex t, we want to identify the strategy
that minimizes ρ(−, t) for all of our colluders. We start
by deﬁning a candidate strategy ρ∗, observe that it is
admissible, and then prove it is indeed a lower bound on
admissible strategies.

Deﬁnition 5.2. Let ρ(cid:48)(x, t) = max(d(x, t) − 2, 1). Let
ρ(cid:48)(cid:48)(x, t) be deﬁned as

min
1≤i,j≤k

[dj(x, xi) − 2(j − 1) + ρ(cid:48)(xi, t)] .

Then

deﬁne

the

strategy

ρ∗(x, t)

=

min(ρ(cid:48)(x, t), ρ(cid:48)(cid:48)(x, t)).

To give some intuition, this strategy takes the mini-
mum of Corollary 5.1 and the best j-th colluding path
(where the end of that path uses Corollary 5.1 to get to
t).

Deﬁnition 5.2 is useful in the following scenario de-
picted in Figure 5. Suppose (s, x1, y2, x2, . . . , yj, xj, t) is

8

a path of length 2j + 1, where t is the target of a mes-
sage sent by s and xi are colluding agents. Then every xi
may broadcast ρ∗(xi, t) = 1, and the honest agents will
forward along the path toward t.

Figure 5. An example of strategies for colluding agents x,y
and z (shaded circles). Suppose that s wants to send a mes-
sage to t. (a) If no lies involved, s would send the message
to u who is closest to t. (b) When agents x,y and z do not
collude, the best strategy for x without causing “black holes”
is to broadcast ρ(x, t) = d(x, t) − 2 = 3. s would still send the
message to u. (c) When taking into account other colluding
agents, x may broadcast ρ(x, t) = 1 according to the optimal
strategy deﬁned in 5.2, and deceive s to send the message
through x.

We call x proper for t if it (strictly) minimizes ρ∗(x, t)
via the j-th colluding distance for some j ≥ 2 and im-
proper otherwise, and we call a j-th colluding path re-
alizing this minimization a witness for the properness of
x. We deﬁne the forwarding number of a j-th colluding
path to be j, and deﬁne the forwarding number of a ver-
tex v to be the smallest forwarding number of any j-th
colluding path minimizing ρ∗(v, t) starting at v. Note
that a vertex with a forwarding number 1 is by deﬁnition
improper, and that all of these deﬁnitions depend on the
choice of t.

Improper colluding nodes forward as in Corollary 5.1.
Proper colluding agents pick a j-th colluding path which
minimizes their broadcast. We now prove that ρ∗ is an
admissible strategy. But ﬁrst, we prove that j-th collud-
ing paths can be extended in a nice way.

Proposition 5.2. Let x, y be colluding vertices in G.
Then ρ∗(x, t) ≤ d(x, y) − 2 + ρ∗(y, t).

Proof. If y is improper, then ρ∗(x, t) has a 2-th colluding

(a) Acutal distances(b) Lie independently(c) Colludingρ∗(x, t) ≤ dj(cid:48)−j(x, y) − 2(j(cid:48) − j) + dj(y, y(cid:48)) − 2(j − 1) + ρ(cid:48)(y(cid:48), t)

path and trivially ρ∗(x, t) ≤ d(x, y) − 2 + ρ(cid:48)(y, t) so we
are done.

So suppose y is proper with forwarding number j. By
deﬁnition, there is a y(cid:48) such that ρ∗(y, t) = dj(y, y(cid:48)) −
2(j − 1) + ρ(cid:48)(y(cid:48), t). Call the witness path σ. Then there is
a corresponding path σ(cid:48) for x constructed by prepending
a path from x to y to σ. This path is some j(cid:48)-th colluding
path for j(cid:48) > j whose cost is an upper bound on dj(cid:48)(x, y(cid:48)).
Hence,

≤ d(x, y) − 2 + ρ∗(y, t),

as desired.

In fact, if x is proper, ρ∗(x, t) is minimized by comput-
ing d(x, y) − 2 + ρ∗(y, t) for some colluding agent y. It
will have the property that there is a path from x to y
that passes through no other colluding agents. Proposi-
tion 5.2 trivially extends to non-colluding agents y, giving
the following corollary. Note here we use ρ to denote the
broadcast (honest or lie) of any agent.

Corollary 5.2. If all colluding agents are following ρ∗,
then for all x ∈ C, y ∈ V (G), ρ∗(x, t) ≤ d(x, y) − 2 +
ρ(y, t).

Another simple consequence of Proposition 5.2 is that
the forwarding number decreases along minimal j-th col-
luding paths.

Proposition 5.3. Suppose x is a proper colluding agent
with respect to ρ∗(x, t), that x has forwarding number j,
and that σ is a witnessing j-th colluding path. Let x(cid:48)
be the ﬁrst colluding agent on σ after x. Then x(cid:48) has
forwarding number j − 1.

Proof. The same technique from the proof of Proposi-
tion 5.2 shows that whatever the forwarding number of
x(cid:48) is, we can prepend a path from x to x(cid:48) to get a path
with forwarding number j + 1.

In particular, the i-th visited colluding agent on a wit-
ness for ρ∗(x, t) of forwarding number j has forwarding
number exactly j − i, and the end of the path is an im-
proper colluding agent.

At this point one might expect some sensible extension
of the pair of (forwarding number, broadcasted distance)
to honest agents would produce a potential function that
is monotonically decreasing along the message path and
zero at the target. Indeed, a version of this is true when
the colluding agents are separated by distance at least
three, with ready counterexamples for distance two. Still,
we present a diﬀerent argument that ρ∗ is also admissible
when the agents are distance two apart.

Proposition 5.4. Let C = {x1, . . . , xk}, and suppose
that d(xi, xj) ≥ 2 for all xi, xj ∈ C. Then ρ∗ is admissi-
ble.

9

Proof. Let s, t be arbitrary vertices in G, and let L =
(y1, y2, . . . , ym) be a cycle in the path of a message sent
If the yi
from s to t (possibly inﬁnite and repeating).
are all honest or improper agents we are reduced to the
case of Proposition 5.1. So some of the yi must be proper
colluding agents.

Without loss of generality suppose y1 is a colluding
agent, and let p be the minimal colluding path it for-
wards along, extended to the target t. Let yj be the last
vertex on L that is not also on p. The claim is that yj’s
decision to forward along L or p is a tie break. This
proves the proposition because we can then construct a
corresponding path.

Let z be the vertex following yj on p, and suppose to
the contrary ρ(yj+1, t) < ρ(z, t). Let x be the last col-
luding agent on p before yj. Let x(cid:48) be the ﬁrst colluding
agent on p after yj (it may be the case that x(cid:48) = z). If
x is the last colluding agent on p, then let x(cid:48) = t and
the proof proceeds similarly. First we expand ρ∗(x, t) + 2
along p.

ρ∗(x, t) + 2 = d(x, x(cid:48)) + ρ(x(cid:48), t)

= d(x, yj) + 1 + d(z, x(cid:48)) + ρ(x(cid:48), t)
= d(x, yj) + 1 + ρ(z, t)

We now bound ρ∗(x, t)+2 along L using Corollary 5.2.

ρ∗(x, t) + 2 ≤ d(x, yj) + 1 + ρ(yj+1, t)

< d(x, yj) + 1 + ρ(z, t)
= ρ∗(x, t) + 2

A contradiction.

Next we prove that in the separated setting ρ∗ is a

lower bound on admissible broadcasts.

Proposition 5.5. Any colluding agent broadcasting
ρ(x, t) < ρ∗(x, t) necessarily causes a cycle.

Proof. Suppose to the contrary some colluding agent x
broadcasts ρ(x, t) < ρ∗(x, t). We will show that all
neighbors of x forward to t through x, necessarily caus-
ing cycle of length 2. Fix any neighbor z and suppose
to the contrary that there is a neighbor y (cid:54)= x of z
with ρ(y, t) ≤ ρ(x, t). But then ρ(x, t) < ρ∗(x, t) ≤
d(x, y) − 2 + ρ(y, t) = ρ(y, t) by Corollary 5.2, a con-
tradiction.

This completes the proof of Theorem 5.1.
Finally, ρ∗ can be eﬃciently computed. The idea is to
grow a search tree of colluding agents from t, noting that
the value of ρ∗ for a new vertex is minimized by using
some set of previously visited nodes. More rigorously,
for each target t ∈ V (G) run the following procedure.
Set S = {t}. While C (cid:54)⊂ S is missing some colluding
agent, take any colluding agent with minimal distance to
S (true distance in G), and calculate the value of ρ∗(x, t)

as ρ∗(x, t) = miny∈S d(x, y)−2+ρ(y, t). Then add x to S
and continue. Using the same arguments used previously,
it is easy to see that this will compute the correct value of
ρ∗ for every colluding agent and every target. Moreover,
one can construct the corresponding j-th colluding paths
during this process. We provide some example simula-
tions of using this strategy on synthetic and real-world
networks in Section 6.

5.3. Adjacent colluding agents

In this section we extend the strategy from Section 5.2
to the setting where colluding agents may be adjacent in
the network. We show this generalization is not optimal,
and instead give a family of strategies, one of which must
be optimal.

Before we state our theorems, we describe another con-
nection between the uniform and non-uniform models
from Section 3, that we can transform an instance of
the uniform model into an instance of the nonuniform
model in which colluding agents are separated. Specif-
ically, one can take the quotient G/ ∼ of the graph G
by declaring two colluding agents to be equivalent if they
are in the same connected component in the induced sub-
graph of colluding agents. Uniform strategies translate
into nonuniform ones as follows. If A is a connected com-
ponent of colluding agents collapsed to vA with neighbors
∂GA = NG/∼(vA), then the broadcast for vA to a neigh-
bor w is the minimum over all such broadcasts from ver-
tices in A. Whenever the forwarding policy in G had
the form: “receive from some w with target t at x ∈ A,
forward through A to some ﬁnal node y ∈ A, who for-
wards to w(cid:48),” the forwarding policy in G/ ∼ is: “Forward
messages from w with target t to w(cid:48).”

Moreover, the concepts of forwarding number and col-
luding paths deﬁned in Section 5.2 for separated agents
in the uniform model have analogous deﬁnitions in the
nonuniform model. So when we say that a component
A ⊂ V (G) has a minimal j-th colluding path, the j refers
to the path in the quotient graph, which lifts to a path
in G (one of many, and possibly involving many more
than j colluders). The strategy of forwarding along a
minimal colluding path lifts from the quotient graph to
a strategy that forwards along paths between connected
components.

With this understanding, the main strategy can be
sketched as follows. Each connected component of col-
luding agents A ⊂ C determines a minimal j-th colluding
path pt for each target t ∈ V (G) using the algorithm from
Section 5.2. Pick any x ∈ A which is adjacent to the ﬁrst
honest vertex w on pt, call this the t-exit node for A,
and have x broadcast ρ(x, t) = ρ(w, t) − 1 as usual. If
every non-t-exit node in A broadcasts so that the mes-
sage never returns to A, then the proof of Proposition 5.4
generalizes to prove no cycles occur for this strategy.

We now describe bounds on the minimality of such
broadcasts. For A ⊂ V (G), denote by dG−A(x, y) the

10

distance from x to y in the subgraph induced by V (G) −
A. When A = {a} is a single node we abuse notation
and write dG−a. We further write ρG−A to denote the
perceived/broadcast distances when A is removed. Note
these values change for honest agents when paths are
eliminated, but not for colluding agents.

As a simple illustrative ﬁrst case, suppose there are
exactly two colluding agents x, y and they are adjacent.
Let t ∈ V (G) − {x, y}. If y forwards a message to x, who
in turn forwards to t through w (cid:54)= y, then in order to
prevent the message cycling back though y, we require
dG−x(w, y) + ρ(y, t) ≥ d(w, t), which rearranges to give
a condition on y’s broadcast. If dG−x(w, y) = ∞ this is
interpreted as no restriction, and ρ(y, t) may be 1.

For a connected component A and target t, a similar
bound is imposed on every node in A which is not the
t-exit node. We state it as a theorem.

Theorem 5.3. Let G be a graph, C ⊂ V (G) be a subset
of colluding agents whose induced subgraph has compo-
nents C1 ∪ · · · ∪ Cs. For each component Ci and target
t, pick a t-exit node vi,t ∈ Ci, who behaves as described
above, and have every x ∈ Ci forward messages with tar-
get t to vi,t. Call wi,t the node that vi,t forwards to. Pick
any broadcast of the non-exit nodes x ∈ Ci such that for
all j with Cj having no larger forwarding number,

ρ(x, t) ≥ ρ(wj,t, t) − dG−(Cj −{x})(wj,t, x),
setting ρ(x, t) = 1 if all of the above bounds are non-

positive or −∞.

This strategy is admissible.

Proof. As discussed above, it suﬃces to show that a mes-
sage for t forwarded through Ci to the t-exit node vi,t
never returns to A. Suppose to the contrary the message
follows some path p hitting x ∈ Ci. Without loss of gen-
erality, x (cid:54)= vi,t is the ﬁrst to receive the message. Now
ρ(wi,t, x) ≥ dG−(Ci−{x})(wi,t, x), and so by assumption
(that x gets the message), they are equal and wi,t is in a
tie-break situation.

This strategy is not optimal. Figure 6 gives a coun-
terexample, in which the central issue is that two com-
ponents which are tied for minimal forwarding number
could improve their joint strategy by having one com-
ponent forward through the other.
In contrast to the
separated case, a diﬀerent choice of forwarding policy
implies diﬀerent broadcasts for the nodes. Indeed, if X
is the space of all strategies induced by all possible for-
warding conﬁgurations and the implied broadcasts from
Theorem 5.3, it is easy to see that an optimal strategy is
a member of X. Still, it is unclear whether it is NP-hard
to pick the optimal forwarding policy.

6. SIMULATIONS

We

simulated the protocols described in this
(The code

(Figure 7).

paper on four networks

11

tatively large improvement over a simpler strategy. We
stress that since the ρ∗ strategy (as deﬁned in Section 5.2)
may not be optimal when there are adjacent colluding
nodes, the plots are lower bounds for the amount of traf-
ﬁc captured by the optimal strategy with a given percent-
age of colluding nodes. For uniform broadcasts and small
random colluding sets, our estimates are fairly accurate
because with high probability none of the colluders are
adjacent. On the other hand, for nonuniform broadcasts
the optimal strategy for 18 random nodes could very well
capture more than 10% of messages on the AS network-
ing with uniform traﬃc.

7. DISCUSSION AND OPEN PROBLEMS

In this paper we introduced and related two variants of
a model of traﬃc interception in routing networks with
distance-vector protocols, one for uniform broadcasts and
one for non-uniform broadcasts. We characterized the
optimal strategy for the uniform setting in which no two
colluding agents are adjacent, and provided a family of
strategies for the general case. We simulated the im-
pact of the optimal strategy in the uniform broadcast-
ing model on an assortment of graphs and found that
in expectation for the US Autonomous Systems network,
randomly selecting 0.2% of the nodes to act as colluding
agents captured 10% of the entire network traﬃc paths.
There are a number of directions for future work. For
example, we could consider alternate deﬁnitions of admis-
sibility. In this work we deﬁned strategies to be admissi-
ble as long as there exists a corresponding path between
every pair of nodes, motivated by the model assump-
tion that honest nodes break ties uniformly at random.
Instead we can consider diﬀerent deﬁnitions of admissi-
bility, where for every pair of nodes all corresponding
paths that start and end with those nodes must also be
simple paths. In the case of the uniform model with a
single colluding agent x,broadcasting the distance to t,
ρ(x, t) = min(d(x, t) − 1, 1) satisﬁes this more restrictive
deﬁnition of admissibility. Alternatively, we may call a
strategy admissible if the length of a typical correspond-
ing path under the strategy does not drastically diﬀer
from the length of a typical corresponding path under
the honest strategy. The last admissibility deﬁnition is
not meant to be taken as a rigorous one; we only wish
to illustrate the diversity of these alternate admissibility
deﬁnitions.

We could also ask whether one can eﬃciently char-
acterize the general case of adjacent agents, or whether
deciding the appropriate forwarding mechanism is NP-
hard.
In either case, another open direction is to pro-
vide approximation algorithms when the optimal subset
of colluding agents is unknown. While this is likely to
correlate with betweenness centrality we would also be
interested in ﬁnding the subset of agents with the largest
relative improvement. A further improvement to this
work may also consider realistic network traﬃc, as op-

Figure 6. A counterexample to the optimality of our strategy
in the setting where agents can be adjacent. Shaded nodes
are colluding.
If the component with z, y is processed ﬁrst
then our algorithm correctly chooses the w, x component to
have forwarding number 2 (with x broadcasting 1), capturing
all traﬃc from a, b to t. On the other hand if w, x is processed
ﬁrst the result will miss traﬃc from a, b.

is

at

to

the

run

experiments

used
available
https://github.com/j2kun/information-monitoring-
simulations.) The ﬁrst is an Erd¨os-R´enyi random graph
G(n, p) where n = 1000, p = 4/1000. The second is a
preferential attachment model [3] with 100 nodes. The
third is a Watts-Strogatz model [27] with n = 1000,
degree k=10, and edge-rewiring probability β = 0.04.
The fourth is a snapshot of the Autonomous Systems
(AS) subgraph of the United States, which has 9,296
nodes and 17,544 edges. The AS graph comes from the
website of Newman [18].

For each network, we inspect the potential advan-
tage of the ρ∗ strategy of Section 5.2 over the strat-
egy in which all agents act independently according to
ρ(x, t) = d(x, t) − 2, and for each strategy we also com-
pared the performance for a randomly chosen subset of
nodes versus nodes of highest degrees. For various num-
ber of colluding agents, we report the number of paths
intercepted by the colluding agents in the worst-case sce-
nario, i.e., when there are multiple shortest paths (some
of which may be “perceived shortest paths”) between the
source and target of a message, the message would go
through the paths with no colluding agents.

It is worth noting that for each of these cases, we as-
sume the demand between every pair of nodes is uniform.
That is, there is no advantage for the colluders to inter-
cept one shortest path over another.

Often, large degree nodes tend to be better colluders
than randomly chosen nodes. Regardless, the beneﬁt of
colluding is clear even for randomly chosen nodes. In fact
for the US AS network, if we compromise only 18 random
nodes (roughly 0.2%) we can intercept an expected 10%
of the entire network’s traﬃc. For smaller percentages,
the randomly selected colluding nodes capture more traf-
ﬁc in the US AS network than in the synthetic models.
However, for larger percentages the amount of captured
traﬃc in the US AS network levels oﬀ quite dramatically,
revealing additional topological structure in the US AS
network that is not present in the synthetic models. It
is also interesting to note the relatively small diﬀerence
between the two strategies in the US AS graph, implying
that in this setting collusion does not provide a quanti-

txabzwy12

Figure 7. Fraction of paths intercepted by a varying number of colluding agents on a Erd¨os-R´enyi random graph (top left), a
preferential attachment graph (top right), a Watts-Strogatz model (bottom left), and the US AS network (bottom right). Blue
curves correspond to subsets of colluding agents chosen uniformly at random, while red curves to subsets chosen by largest
degrees. Dashed curves correspond to the strategy where each agent independently lies by an additive factor of two, while solid
curves to the optimal separated strategy of Section 5.2. The inset graph for the AS network magniﬁes the leftmost portion of
the blue curves.

posed to considering an absolute number of traﬃc paths
as the interception objective.

tion and many helpful comments, especially the organiz-
ers Aaron Clauset, David Kempe, and Mason Porter. We
also thank Lev Reyzin for his helpful comments.

ACKNOWLEDGEMENT

We thank everyone involved in the 2014 AMS Network
Science Mathematical Research Community for inspira-

Research supported in part by NSF grants CMMI-

1300477 and CMMI-1404864.

[1] Raka Albert, Hawoong Jeong,

and Albert-Laszlo
Barabasi. The internet’s achilles’ heel: Error and at-
tack tolerance of complex networks. Nature, 406:200–0,
2000.

[2] Hitesh Ballani, Paul Francis, and Xinyang Zhang. A
study of preﬁx hijacking and interception in the inter-
net. SIGCOMM Comput. Commun. Rev., 37(4):265–276,
August 2007.

[3] Albert-Laszlo Barabasi and Reka Albert. Emergence of
scaling in random networks. Science, 286(5439):509–512,
1999.

[4] K. Butler, T.R. Farley, P. McDaniel, and J. Rexford. A
survey of bgp security issues and solutions. Proceedings
of the IEEE, 98(1):100–122, Jan 2010.

[5] A. Chakrabarti and G. Manimaran. An eﬃcient algo-
rithm for malicious update detection recovery in dis-
tance vector protocols. In Communications, 2003. ICC
’03. IEEE International Conference on, volume 3, pages
1952–1956 vol.3, May 2003.

[6] Jim Cowie. The New Threat: Targeted Internet Traﬃc

Misdirection, 2013.

[7] T. Ghosh, N. Pissinou, and Kia Makki. Collaborative

(a) Erdos-Renyi Graph(b) Scale-Free Network(c) Small World(d) US BGP Network13

trust-based secure routing against colluding malicious
nodes in multi-hop ad hoc networks. In Local Computer
Networks, 2004. 29th Annual IEEE International Con-
ference on, pages 224–231, Nov 2004.

[8] Sharon Goldberg, Shai Halevi, Aaron D. Jaggard, Vijay
Ramachandran, and Rebecca N. Wright. Rationality and
traﬃc attraction: Incentives for honest path announce-
In Proceedings of the ACM SIGCOMM
ments in bgp.
2008 Conference on Data Communication, SIGCOMM
’08, pages 267–278, New York, NY, USA, 2008. ACM.
[9] Sharon Goldberg, Michael Schapira, Peter Hummon, and
Jennifer Rexford. How secure are secure interdomain
routing protocols. In SIGCOMM, pages 87–98, 2010.
[10] Dan Goodin. Hacking team orchestrated brazen bgp hack
to hijack ips it didn’t own. arstechnica.com, 2015.
[11] Siobhan Gorman and Jennifer Valentino-DeVries. New
details show broader nsa surveillance reach. The Wall
Street Journal, 2013.

[19] Ola Nordstr¨om and Constantinos Dovrolis. Beware
of bgp attacks. SIGCOMM Comput. Commun. Rev.,
34(2):1–8, April 2004.

[20] Recall a set function f : 2X → R is submodular if for
every S, T ⊂ X with S ⊂ T and for every x ∈ X \ T , the
marginal gain f (S ∪ {x}) − f (S) ≥ f (T ∪ {x}) − f (T ).

[21] P. Papadimitratos and Z.J. Haas. Securing the inter-
net routing infrastructure. Communications Magazine,
IEEE, 40(10):60–68, Oct 2002.

[22] Dan Pei, D. Massey, and Lixia Zhang. Detection
of invalid routing announcements in rip protocol.
In
Global Telecommunications Conference, 2003. GLOBE-
COM ’03. IEEE, volume 3, pages 1450–1455 vol.3, Dec
2003.

[23] B.R. Smith, S. Murthy, and J.J. Garcia-Luna-Aceves. Se-
curing distance-vector routing protocols. In Network and
Distributed System Security, 1997. Proceedings., 1997
Symposium on, pages 85–92, Feb 1997.

[12] C. Hedrick. Routing information protocol. RFC 1058,

[24] Brad Stone. Pakistan cuts access to youtube worldwide.

1988.

[13] Yih-Chun Hu, David B. Johnson, and Adrian Perrig.
Sead: secure eﬃcient distance vector routing for mobile
wireless ad hoc networks. Ad Hoc Networks, 1(1):175 –
192, 2003.

[14] Hagay Levin, Michael Schapira, and Aviv Zohar. Inter-
domain routing and games.
In Proceedings of the For-
tieth Annual ACM Symposium on Theory of Comput-
ing, STOC ’08, pages 57–66, New York, NY, USA, 2008.
ACM.

[15] Doug Madory. Uk traﬃc diverted through ukraine, 2015.
[16] G.S. Malkin. Rip version 2. RFC 2453, 1998.
[17] George Nemhauser, Laurence Wolsey, and Marhsall
Fisher. An analysis of approximations for maximizing
submodular set functions - i. Mathematical Programming,
14(1):265–294, 1978.

[18] M.E.J. Newman. I, 2006. Accessed: 2015-01-24.

The New York Times, 2008.

[25] Tao Wan, Evangelos Kranakis, and PaulC. van Oorschot.
In
S-rip: A secure distance vector routing protocol.
Markus Jakobsson, Moti Yung, and Jianying Zhou, edi-
tors, Applied Cryptography and Network Security, volume
3089 of Lecture Notes in Computer Science, pages 103–
119. Springer Berlin Heidelberg, 2004.

[26] Tao Wan, Evangelos Kranakis, and PaulC. van Oorschot.
Securing the destination-sequenced distance vector rout-
ing protocol (s-dsdv). In Javier Lopez, Sihan Qing, and
Eiji Okamoto, editors, Information and Communications
Security, volume 3269 of Lecture Notes in Computer Sci-
ence, pages 358–374. Springer Berlin Heidelberg, 2004.

[27] D. J. Watts and S. H. Strogatz. Collective dynamics of
‘small-world’ networks. Nature, 393(6684):409–10, 1998.
[28] Laurence Wolsey. An analysis of the greedy algorithm
for the submodular set covering problem. Combinatorica,
2(4):385–393, 1982.

