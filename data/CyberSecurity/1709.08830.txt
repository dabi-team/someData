7
1
0
2

p
e
S
6
2

]

Y
S
.
s
c
[

1
v
0
3
8
8
0
.
9
0
7
1
:
v
i
X
r
a

Catching Anomalous Distributed Photovoltaics: An
Edge-based Multi-modal Anomaly Detection

Devu Manikantan Shila†, Kin Gwn Lore†,Tianshu Wei‡, Teems Lovett† and Yu Cheng§
†United Technologies Research Center, Hartford, Connecticut 06108
Email:{manikad, lorek,lovettt}@utrc.utc.com
‡University of California, Riverside, California, 92507,
Email: twei002@ucr.edu
§Illinois Institute of Technology, Chicago, Illinois 60616
Email:cheng@iit.edu

Abstract—A signiﬁcant challenge in energy system cyber se-
curity is the current inability to detect cyber-physical attacks
targeting and originating from distributed grid-edge devices such
as photovoltaics (PV) panels, smart ﬂexible loads, and electric
vehicles. Cyber grid defenders lack the necessary algorithms
and other detection capabilities to distinguish between normal
operations, cyber-attacks, and other exceptional circumstances.
We address this concern by designing and developing a dis-
tributed, multi-modal anomaly detection approach that can sense
the health of the device and the electric power grid from
the edge. This is realized by exploiting unsupervised machine
learning algorithms on multiple sources of time-series data such
as voltage magnitude and phase angles from the area where the
device interconnects with the power grid, power injected to and
absorbed from the grid, and power quality of the edge device,
fusing these multiple local observations and ﬂagging anomalies
when a deviation from the normal behavior is observed.

We particularly focus on the cyber-physical
threats to the
distributed PVs that has the potential to cause local disturbances
or grid instabilities by creating supply-demand mismatch, reverse
power ﬂow conditions etc. We use an open source power system
simulation tool called GridLAB-D, loaded with real smart home
and solar datasets to simulate the smart grid scenarios and to
illustrate the impact of PV attacks on the power system. Various
attacks targeting PV panels that create voltage ﬂuctuations,
reverse power ﬂow etc were designed and performed. We observe
that while individual unsupervised learning algorithms such
as OCSVMs, Corrupt RF and PCA surpasses in identifying
particular attack type, PCA with Convex Hull outperforms all
algorithms in identifying all designed attacks with a true positive
rate of 83.64% and an accuracy of 95.78%. Our key insight is
that due to the heterogeneous nature of the distribution grid and
the uncertainty in the type of the attack being launched, relying
on single mode of information for defense can lead to increased
false alarms and missed detection rates as one can design attacks
to hide within those uncertainties and remain stealthy.

I. INTRODUCTION

Power grid utilities are currently moving towards a smarter
grid using new technologies such as smart meters, real-time
pricing, demand side ﬂexibility and distributed energy re-
sources (DERs - ﬂexible loads, distributed generation, energy
storage, and electric vehicles). These advanced smart grid
technologies will be designed and deployed to improve the
operations and the efﬁcacy of the electrical grid; nevertheless
there is a cost associated with these technologies: increased

system exposure and expanded attack surface [4], [17]. These
exposures provide new cyber security vulnerabilities that have
the potential to be exploited by attackers. Examples include
an attacker who potentially takes control of a large number of
smart meters and command them to simultaneously perform
a disconnect and reconnect, causing grid frequency variations
that may be signiﬁcant enough to generate a disruption of
service [3] or, an attacker who alters data at the smart meter
leading to billing and trending inaccuracies [12].

Grid operators and balancing authorities typically do not
have sufﬁcient visibility into the secondary distribution and
end-use levels at individual residential and commercial build-
ings or DER installations. Such limited visibility may be
utilized by an attacker to launch attacks on the grid through
the end-user devices such as compromised smart meters,
building automation systems or renewable energy sources [3],
[25], [26]. Moreover, the existence of uncertainties in the
distribution grid provide ample opportunities for an adversary
to execute attacks without being detected. A large scale
compromise of a signiﬁcant number of building automation
technology, such as networked energy management systems
may potentially cause a disruption in energy service by
exploiting the remote shut-off functionality and causing an
imbalance in the grid [2]. The impact of such an attack could
be exacerbated if the attack took place during peak hours
of electricity delivery and at a large scale. Cyber defenders
currently lack the visibility to detect and quickly respond to
such an attack.
To detect

targeted cyber-attacks and achieve attack re-
there is a requirement for continuous monitoring
siliency,
of DERs and their interactions with the electrical grid in
real-time. This work speciﬁcally focuses on the cyber secu-
rity of distributed photovoltaics (PVs), where the objective
of an adversary is to exploit the stochastic power genera-
tion/consumption characteristics and vulnerabilities in control
system environment to create supply-demand mismatch and
reverse power ﬂow conditions that can lead to local distur-
bances or grid instabilities [27]. A handful of efforts have
been proposed for various analyses in power systems using
data-driven techniques [6], [14], [21], [24], [25], [28] such as
distributed state estimation, topology error identiﬁcation, smart

 
 
 
 
 
 
meter anomaly detection, malicious data detection, faulty PV
detection, intrusion detection of automated generation control
there are signiﬁcant
and SCADA systems, etc. However,
gaps in the techniques and technology to detect potentially
destabilizing cyber-physical attacks emerging from the DERs
(or grid edge devices) and report
those observations in a
timely manner for enhanced situational awareness. The one
that is close to ours is [22], where authors employ µPMUs
for situational awareness in the distribution grid; essentially,
anomaly detection of distributed automation equipments by
leveraging CUSUM techniques on the physics based features
derived from µPMUs. An anomaly is ﬂagged by monitoring
the change in the voltage-current correlations which in turn
leads to increased false positives since such changes in corre-
lations also occurs with normal grid disturbances (e.g., voltage
sag).

As a solution to this problem, to the best of our knowledge,
we ﬁrst design and develop a distributed, edge-based multi-
modal anomaly detection scheme that continuously observes
PV and its interactions with the electric power grid by exploit-
ing unsupervised learning algorithms on multiple sources of
time-series data: voltage magnitude and phase angles at the
feeder node, power injected to and absorbed from the grid,
power characteristics of PVs and then fuse these multiple
observations and ﬂag anomalies when a deviation from the
normal behavior is observed.

We use various unsupervised regression and classiﬁcation
techniques to design a robust anomaly detection framework.
The use of unsupervised techniques enables us to “detect
any anomalous deviations” without relying on the knowledge
of speciﬁc attack patterns. On the other hand, insufﬁcient
knowledge of attack pattens will also make the model prone
to false alarms [13]. We amortize the cost of false alarms and
missed detection by utilizing multiple sources of information
that provide cues on the behavior of the device as well as the
its interactions with the grid. To model the smart grid scenarios
and further illustrate the impact of anomalous PVs on the
power systems, we use an open source power system sim-
ulation tool called GridLAB-D [8], loaded with realistic smart
home and solar datasets from UMass Trace Repository [7], [9].
Various attacks such as reverse power ﬂow, disconnect, power
curtailment and volt-var at different attack penetration levels
(25% to 100%) that exploit the normal behavior of distributed
generation to cause voltage ﬂuctuations, supply-demand mis-
match, grid instabilities were designed and implemented in
GridLAB-D. We make the following observations from our
simulations and analyses:

• Each machine learning algorithm surpasses in identifying
a particular type of attack. For e.g., one class SVMs
[10] and PCA with Convex Hull [16] detect volt-var and
power curtailment attacks with (accuracy, F1) scores of
(99.81%, 98.83%) and (95.00%, 70.75%), respectively.
Corrupt Random Forest [18] detects reverse power ﬂow
and disconnect attacks with (accuracy, F1) scores of
(95%, 76.07%) and (97.22%, 85.59%) respectively.

• PCA with Convex Hull proved to be the most robust

algorithm to detect all four attacks with a precision, recall,
F1, accuracy and receiver operating curve area of 70.02%,
83.64%, 76.22%, 95.78% and 90.24%, respectively.
• Heterogeneous nature of the distribution grid power gen-
eration and demand limits one to use single modality for
anomaly detection that may lead to increased false alarms
and missed detection. For e.g., reverse power ﬂow attacks
that causes increased ﬂow of energy back to the substation
cannot be identiﬁed from PV power characteristics but
can be detected by monitoring for anomalous changes in
the power exported back to the grid. The uncertainties
in the power generation/consumption also explain the
rationale behind the low F1 score in identifying particular
attack types such as power curtailment attacks that can
hide within those ﬂuctuating load proﬁles and remain
stealthy. Since these attacks behave like “normal events”,
no noticeable impact are imposed on the power grid
characteristics.

• Anomalous variations of feeder measurements such as
voltage magnitudes and phase angles provide a valuable
source to identify large scale attacks from the edge. Using
these measurements, we were able to identify attacks with
a true positive rate of 30% to 40% for various attack
penetration levels. The low detection rates stem from the
use of low ﬁdelity data obtained from the GridLAB-D
that in turn fails to capture voltage-current transients and
due to the heterogeneous nature of the distribution grid
itself.

The rest of the paper is organized as follows: In Section II, we
present the system and adversary model. Section III presents
the edge-based multi-modal anomaly detection framework,
machine learning algorithms, and dataset generation from
GridLAB-D simulations. In section IV, we present the perfor-
mance of the anomaly detection framework. Finally, section V
concludes this work.

II. SYSTEM AND ADVERSARY MODEL

A. Distributed Photovoltaics model and Issues

We consider a group of buildings (residential or commer-
cial) with rooftop embedded PVs connected to the distribu-
tion feeder network (medium/low voltage network) via a bi-
directional meter (see Figure 1). Each building consists of a
Energy Management System (EMS) that monitors, manages
and controls the energy produced by the PV and the energy
consumed by the appliances within the buildings. The energy
consumed as well as the excess energy exported is monitored
with the help of a bi-directional meter (M). The output power
of PV, which is dependent on the incident solar radiation, is
converted to AC power to use within a building by a PV
inverter. Excess energy produced by the PV is exported back to
the electric power grid, which typically occurs when the supply
of PV generated power is greater than the power demand of
the building loads (typically referred to as reverse power ﬂow).
This situation arise around midday in dwellings when the PV
generation is high, as the available solar energy is highest in

during normal operational hours. This attack may be
launched at regular intervals in a continuous fashion (e.g.,
disconnect-connect-disconnect) or in a random manner,
say disconnect under heavy load conditions. Such an
attack will force the building to draw more energy from
the grid, speciﬁcally under heavy load conditions. This
will incur increased power demand from the power grid
and consequently, overloading of the feeders leading
to frequency/voltage violations and system instabilities.
Disconnection of PVs will also affect the grid planning
and operations as it prevents customer from selling energy
back to the grid when needed.

• Power curtailment attack: The objective of an adversary
is to manipulate the maximum active power output of the
PV inverter. By tampering the control algorithms or the
control parameters (e.g., change the power factor or ramp
rate via EMS), attacker tunes the maximum power output
of the PV inverter to a certain percentage of the current
available solar power (e.g., setting to half of the real
power). Although these attacks may not bring signiﬁcant
impact like the solar disconnect attacks, they are hard to
detect as these attacks can hide within those ﬂuctuating
PV output power.

• Volt-var attack: As said earlier, PV inverters will be
exploited in future to inject certain amount of reactive
power to help maintain a stable voltage in distribution
networks. We assume that the attacker has exploited the
weaknesses in the control algorithms or the communica-
tion protocols to change the control parameters related to
the inverter. Adversary particularly manipulates the power
factor of the inverter to arbitrarily inject different level
of reactive power, which in turn can greatly affect the
voltage magnitude and phase angles in the grid.

• Reverse power ﬂow attack: Many residential houses have
been equipped with Internet-connected smart appliances
which enable demand response techniques (e.g., control
the load of the devices by utilities or via EMS by the
customer). The objective of an attacker is to exploit the
weaknesses in EMS itself or the Internet connect smart
appliances to turn them off or the circuit breakers to
reduce the house load demand. This will signiﬁcantly
increase the reverse power ﬂow injected back to the
grid under heavy power generation conditions (e.g., when
the solar power generation is high during the daytime)
and the feeder will in turn start exporting power to the
neighboring feeders. By controlling a number of houses
installed with the PVs, these attacks can negatively affect
protection coordination and operation of line voltage reg-
ulators, leading to voltage ﬂuctuations and instabilities.

We conduct experiments in GridLAB-D to demonstrate the
impact of these attacks on the electric power grid. Figure
2 illustrates the active and reactive power obtained from the
bi-directional meter under the four attack modes. All attacks
were conducted during heavy power generation periods (i.e.,
daytime) to highlight the negative effects.

Fig. 1: System model consisting of distributed photovoltaics
and their integration with the grid

the middle of day, and the dwellings electricity consumption
is low as the occupants may be, for example, out at work.
In general, distributed generation brings two advantages: (i)
reduces the need to buy energy from the power grid, thereby
reducing the feeder load demand and the electricity bills for
the customer by utilizing the PV generated power directly by
the buildings loads during the peak time period; (ii) enables
the grid operators to meet the feeder load demands by using
the unwanted PV power exported to the grid.

In spite of these advantages, increased penetration of PVs
on the distribution grid present several opportunities and
challenges for power distribution utilities [27]. Major adverse
impacts of high PV penetration are on system voltages.
For e.g., steady state voltage rises with reverse power ﬂow
or voltage ﬂuctuations caused by rapid changes in the PV
output. Existing efforts propose to offset the voltage rise in
distribution networks by exploiting the inherent reactive power
capability of the PV inverters that can inject or absorb reactive
power as needed [15] . Moreover, unlike traditional generation
plants, PVs do not have rotating parts, and their output is
highly sensitive to solar radiation which causes undesirable
voltage ﬂuctuations that can affect the operation of protection
equipment. In order to rectify the ﬂuctuations in the PV
output caused either due to a large variance of solar irradiance
(voltage rises) or due to the cloud cover (voltage drops), ramp
rate control strategies are proposed [5].

B. Adversary model

We assume an adversary whose goal

is to cause local
outages, equipment damages or grid instabilities by controlling
the PVs connected to a distribution network via a cyber attack
(exploiting vulnerable EMS, local or external communica-
tion networks, web services, authorization and authentication
schemes, communication protocols etc.) or a physical attack
(e.g., access the system and change the control strategies or the
parameters). The impact of an attack depends on the number
of PVs compromised, the location of the PVs (e.g., close to
the substation or away from the substation), the condition,
conﬁguration and characteristics of the distribution feeder and
the type of the attack. We design four types of attacks on PV
systems and is discussed below:

• Disconnect attack: In this attack, an adversary gains con-
trol to a large number of PVs and issues a mass discon-
nect command which disconnects the PV from the house

Fig. 2: Active power and reactive power from GridLAB-D simulations for four attacks. The red points denote the point at
which the attacks are launched and the change in value indicate the impact of an attack. Attacks are performed at regular
intervals in a continuous fashion. The y-axis is depicted using different scales to project the attack impact

Following observations were made from Figure 2: (a)
Attacks such as volt-var can be identiﬁed by monitoring
anomalous deviations in reactive power; on the other hand,
attacks such as disconnect and power curtailment mainly
causes variations to the active power; (b) Disconnect attacks
can be easily identiﬁed as active power drops to zero. On
the other hand, one of the practical challenge in detecting this
attack is to distinguish between disconnect attacks and normal
events where a user disconnects and reconnects the PV; (c)
Due to the fast variation of the solar output power and also
the fact that the power curtailment attacks manipulates the PV
power factor, it is hard to detect these attacks as they can hide
within those output variations; (d) Reverse power ﬂow attacks
are hard to identify by merely observing the output power of
PV as they are typically conducted by disconnecting the house
loads. The negative “change in value” in the ﬁgure indicates
the amount of power exported back to the grid during the
attack, which is obtained from the bi-directional meter.

As mentioned earlier, when a large number of systems
are compromised (e.g., attacker performing power curtailment
attacks on 75% of the connected systems),
it will create
noticeable traces on the voltage in the distribution feeder at the
point where the building/device interfaces with the grid. One
of the attacker strategy is to control a number of devices and
manipulate the loads in a manner so that it will be undetected
by the anomaly detection algorithms at the edge (say, when
the change in value is within the threshold). Although these
attacks may not be observable through device features, the
feeder voltage magnitude and phase angles will be affected
(especially for weak feeders) which in turn can be observed
and measured using additional sensors such as µ-PMU (micro

Phasor Measurement Units e.g., PQube3 from PSL [1]). Figure
3 shows the voltage magnitude and phase angle when the four
attacks are performed.

One could observe different behavior of the feeder voltage
magnitude and phase angles with regard to the four attack
modes. (a) In the event of disconnect attack and curtailment
attack, both voltage magnitude and phase angle drops from
nominal values as more power is drawn from the grid to meet
the load demands; (b) During the volt-var attack, injection
of more reactive power into the grid leads to drop in voltage
magnitude and rise in phase angle. Typically, voltage increases
with the reactive power. In our case, the reactive power is
increasing the voltage at the edge which results in a voltage
drop at the feeder node due to the voltage balance; (c) In the
reverse power ﬂow attack, both the magnitude and phase angle
of feeder voltage rises as more real power is injected into the
grid. By observing those changes in the voltage magnitude
and phase angle, one could identify the type of the attacks
conduced; however, in our analysis, we observed that due to
the uncertainties in the distribution grid (e.g., stochastic nature
of the loads), voltage ﬂuctuations are normal. This in turn
makes it hard to assertively claim if the ﬂuctuation observed
was due to a normal event or an attack. This also implies that
missed detection of anomalies which lie within the normal
behavior is not a concern if the grid voltages/frequencies are
stable and are within the limits.

III. EDGE-BASED MULTI-MODAL ANOMALY DETECTION
FRAMEWORK

In this section, we present the multi-modal anomaly de-
tection framework, techniques to learn the anomaly detection

02004006008001000Time (min)0500100015002000Change in value(a) Solar disconnect attackActive power (W)Reactive power (Var)Attacked region02004006008001000Time (min)150010005000Change in value(c) Reverse power flow attackActive power (W)Reactive power (Var)Attacked region02004006008001000Time (min)2500250500750100012501500Change in value(b) Curtailment attackActive power (W)Reactive power (Var)Attacked region02004006008001000Time (min)2000200400600Change in value(d) Volt-var attackActive power (W)Reactive power (Var)Attacked regionrural feeder network (R1-1247-1) with 12.5 kV and 7152
kVA ratings for simulations. As these original prototypical
feeder models only represent the topology of the distribution
network, we developed python-based scripts to automatically
add residential house and rooftop PVs to the original feeder
(.glm) models to represent the load demand and distributed
power generation, respectively, as shown in Figure 4.

(a) Voltage maginitude during
disconnect attack

(b) Phase angle during discon-
nect attack

(c) Voltage maginitude during
curtailment attack

(d) Phase angle during curtail-
ment attack

(e) Voltage maginitude during
volt-var attack

(f) Phase angle during volt-var
attack

(g) Voltage maginitude during
reverse power attack

(h) Phase angles during reverse
power ﬂow attack

Fig. 3: Voltage magnitude and phase angle from simulated
PMUs at the point of interconnect under various types of
attacks. The red points denote the magnitude and phase angles
when an attack occurs.

models, and simulations performed to learn and evaluate the
performance of our framework.

A. Smart grid simulation and dataset generation

We run the simulations using GridLAB-D, which is an open-
source software platform developed by the U.S. Department of
Energy at the Paciﬁc Northwest National Laboratory (PNNL)
for the simulation of electric power distribution systems. The
GridLAB-D prototypical feeder model were used to represent
the radial distribution network. They represent the fundamental
characteristics of radial distribution feeders found in the U.S.,
based on 575 distribution feeders from 151 separate substa-
tions from different utilities across the U.S. Each prototypical
feeder is characterized as belonging to one of ﬁve U.S.
climate regions, by primary distribution voltage level, and
other features. The taxonomy feeder models are provided as
part of the GridLAB-D software package. The feeders have
been modeled with high ﬁdelity from the substation down
to the individual customer meters, including detailed end-use
load representations (heating, ventilation, and air-conditioning,
and various other constant impedance, current, and power
loads). In this work, we use the moderate suburban and

Fig. 4: The system model in Figure 1 simulated in GridLAB-
D. Radial distribution feeder models with house, PV panels
and sensors (PMU, smart meters) and the dataset generated
from simulations (node, PV and load measurements) are also
illustrated

• Residential house loads: To capture realistic load de-
mands from residential homes, we used the Smart dataset
from UMass Trace Repository [7]. We especially used the
high resolution data from three homes, described as home
A, B and C in [7]. Houses are randomly assigned to the
transformer based on its power rating and are loaded with
home A, B or C load proﬁles in a random manner. All
the houses are connected to the grid via a smart meter,
which measures various information such as the power
consumed or exported by each individual house, voltage-
current characteristics, active/reactive power etc. In our
simulations, 6000 houses were automatically added to the
R1-1247-1 feeder model.

• Rooftop PV: To generate the PV output, the incident
solar radiation based on the solar irradiance sensing data
from UMassTraceRepository [9] is used. Using a realistic
irradiance data enables us to capture the variations in PV
output power which is otherwise lacking in data gener-
ated using GridLAB-D provided classic solar irradiance
formulas. All the PV panels are virtually installed on
residential rooftops according to a PV penetration level
parameter, which is deﬁned as

solar penetration =

maximum solar power
total grid peak load

(1)

0200400600800100012001400time (minute)7200730074007500760077007800voltage (V)Voltage magnitude0200400600800100012001400time (minute)0.060.040.020.000.020.040.06angle (rad)Phase angle0200400600800100012001400time (minute)7200730074007500760077007800voltage (V)Voltage magnitude0200400600800100012001400time (minute)0.060.040.020.000.020.040.06angle (rad)Phase angle0200400600800100012001400time (minute)7200730074007500760077007800voltage (V)Voltage magnitude0200400600800100012001400time (minute)0.060.040.020.000.020.040.06angle (rad)Phase angle0200400600800100012001400time (minute)7200730074007500760077007800voltage (V)Voltage magnitude0200400600800100012001400time (minute)0.060.040.020.000.020.040.06angle (rad)Phase angleWe used a 25% PV penetration level which is in ac-
cordance with the maximum allowed penetration level
by the utility. In our simulations, the total peak solar
power generation is 8MW and the average solar power
is around 2-3 MW throughout the day. The generation
of solar power can be also controlled based on the
peak power demand of the house. Additionally, as the
location of PVs produce different impacts on the power
grid, we developed python-based scripts to automatically
deploy the PVs in three separate regions: (a) close to
the substation; (b) in the middle of the feeder and (c)
away from the substation. From our simulations, we
noticed that when the PV units are aways from the
substation, grid voltages are more impacted as opposed to
the case where PVs are deployed close to the substation.
This is due to the fact that radial distribution systems
use voltage regulation equipments located at or close
to the substations to regulate the voltage. Any voltage
ﬂuctuations close to the substation will be stabilized
by these regulators. The results presented in this work,
hence, are based on the scenarios where PVs are placed
away from the substation.

to each house;

Normal data generation. We run the simulations in
GridLAB-D for summer season from April through August
to collect the normal data related to power generation, house
demand, and voltage magnitude and phase angles. Figure
4 shows the data types generated by our simulations. This
includes: (a) house load measurements - the active and reactive
power with respect
the active power also
captures the power imported from or exported to the grid
via the smart meter; (b) PV measurements - the active power,
reactive power, voltage and current proﬁles from two phases
and (c) Node measurements - the voltage magnitude and
phase angles in the feeder, measured using simulated PMUs.
The PMU data collected from the point of interconnect (the
interface between the residential area with buildings and PVs
and the grid) inherently captures the behavior of the edge
devices. This is especially true when a large number of houses
or PV panels are attacked.

Attack data generation. We use the dataset generated
in the month of September to evaluate the performance of
anomaly detection algorithms. The house load, PV and node
measurements with regard to the four attack modes were
generated.

B. Anomaly detection framework design

We develop an edge-based distributed detection framework,
where each building is equipped with a multi-modal anomaly
locally observes and analyzes both
detection scheme that
device and grid behavioral signals to predict the presence of an
attack. Behavioral signals identiﬁes an anomaly by measuring
the abnormality of device’s current behavior (i.e., current
observed data) with its past recurrent behavior. This phase
is called the anomaly prediction phase. The past behavior
of the device is learned by applying data-driven techniques
on various sources of information gathered from the device

and the grid interconnect (see the data used to train the
algorithms in Figure 4) and is called the training phase. We
use the normal dataset generated from April to August to
learn the normal behavioral signals. In particular, we learn
three anomaly detection models (m1, m2, m3) and is provided
below.

• PV model (m1): This model learns the normal behavior
of each solar panel based on the solar ﬂux/irradiance,
active and reactive power generation and the voltage-
current characteristics and can be used to detect all attacks
except reverse power ﬂow attack.

• Load model (m2): This model detects when anomalous
amount of power is injected or drawn from the grid (e.g.,
disconnect, power curtailment, reverse power ﬂow at-
tacks) by learning the normal pattern of the load injected
into or absorbed from the grid, which in turn is obtained
via smart meters.

• Node model (m3): This model detects anomalous voltage
magnitude and phase angles when a number of devices
in the neighborhood is attacked. Such a detection scheme
serve as an alternative to sense the health of the grid from
the edge, when all the devices and house loads are under
the control of an attacker.

Fusion of m1, m2 and m3: Each model operates on three
different sets of data and produces anomaly scores during
inference. Let ˜me,i,1, ˜me,i,2 and ˜me,i,3 denote the series of
normalized anomaly scores of the evaluation set, computed
using features from PV measurements, house load measure-
ments, and node measurements, respectively. Our objective
is to fuse these scores to produce a combined score that
determines the degree to which the device is “under attack”.
We explored two approaches: the ﬁrst scheme is to fuse the
normalized anomaly measures from these outputs via linear
combination. Formally, the fused measure becomes:

˜me,i = w1 ˜me,i,1 + w2 ˜me,i,2 + w3 ˜me,i,3

where w1, w2 and w3 are the weight coefﬁcients. The second
scheme, referred to as MostAnomalous, is to fuse the nor-
malized anomaly measures by relying on the most anomalous
measure, i.e:

me,i = f ( ˜me,i,1, ˜me,i,2, ˜me,i,3)

where f (·) = min(·) for frameworks where lower measures
imply possible attacks and f (·) = max(·) for frameworks
where higher measures imply possible attacks. From our sim-
ulation results, we observe that the MostAnomalous approach
works better compared to linear combination of scores. This
is due to the fact that each models specializes in different
feature sets and may perform well to detect a certain type
of attacks (e.g. disconnect attacks) but not in the other (e.g.
volt-var attacks or reverse power ﬂow). Hence, using linear
combinations may present issues with generalization.

C. Machine learning algorithms

We leverage various machine learning algorithms to learn
the individual models (m1, m2 and m3) and is described

below. For ease of exposition, PVs, house loads and nodes
are collectively referred to as “device’, in the sequel’.

1) Neural networks: We use the artiﬁcial neural network to
estimate the state of the device at current time stamp based on
the recent data measurements. As shown in Figure 5, there are
three hidden layers in the neural network, we use the ReLU
(Rectiﬁed Linear Unit) as the activation function for hidden
layers, while in the output layer, linear activation function is
used to estimate the system state at current time stamp. The
number of neurons in each hidden layers is [500, 300, 100].
The input of the neural network is the normalized time-series
data from different sensors (e.g., solar irradiance, current,
voltages and active/reactive power for PV model). As shown
in Figure 5, a sliding window is used to transform the time-
series data into the input vector for training the models.
During the prediction phase, the estimated system state at
current time step is predicted which is compared with the
measured system state to calculate the estimation error. We
use multivariate normal distribution to represent the estimation
error in the normal scenario (see equation (2)) where x and
k represents the system state estimation error vector and its
dimension respectively. The mean µ and covariance matrix Σ
is determined from the estimation error in the normal scenario.
During the training phase, we derive threshold ρ from the prob-
ability density function of the normal distribution. An input
time-series data is classiﬁed as an anomaly if the computed
probability density function is lower than the threshold ρ as
shown in Equation (3).

pdf (x) = (2π)− 1

2 k|Σ|− 1

2 e− 1

2 (x−µ)Σ−1(x−µ)

result =

(cid:26) anormaly , pdf (x) < ρ
, pdf (x) ≥ ρ

normal

(2)

(3)

Fig. 5: Structure of neural network

2) Denoising Auto Encoders: An Auto Encoder (AE) is
simply a network which tries to reconstruct the input. The
key is that AEs ﬁrst encode the input to a compact vector rep-
resentation (in the code layer) and then decode to reconstruct
the input. The simplest way of forcing the net to discover a
compact representation of the data is to have a code layer with
fewer dimensions than the input, as in principal component

analysis. A Denoising Auto Encoder (DAE) is an auto encoder
which attempts to reconstruct a clean target from a noisy
input. In this work, we train a stacked DAE to reconstruct the
time-series data at each time step using the normal dataset.
Similar to neural neural network training presented in (1), we
use a Gaussian distribution to model the reconstruction error
at the output of auto encoder during the training phase. At
the prediction phase, if the probability density function of the
average reconstruction error is below a certain threshold, we
ﬂag the observation as anomalous.

In our simulations, we use a sliding window length of 15
minutes to train DAEs and Neural Networks; as our exper-
iments show that 15-min sliding window achieves the best
performance based on our evaluation metrics among different
length of sliding windows (1-min to 20-min).

Feature engineering. In algorithms (3)-(7) described below,
we normalized the input features to have zero mean and unit
variance. While most of the algorithms approach the anomaly
detection problem as a classiﬁcation task, we ﬁnd no improve-
ment in performance when employing sliding window (e.g.
15 minute windows) or rolling features (rolling mean, range,
standard deviations). In most observations, rolling features in
such cases either delay the ﬂagging of the anomaly or unable
to ﬂag as normal once the attack has been lifted, thus hurting
model performance based on our evaluation metrics.

3) One-class support vector machines: Support vector
machines (SVM) [11] are supervised learning models for clas-
siﬁcation tasks. The objective of the algorithm is to maximize
the distance of the decision boundary between the classes
using multiple datapoints as supports. With a trained SVM,
new examples can be mapped into the same high dimensional
space and predicted based on the side where the new datapoint
falls onto. One-class support vector machines (OCSVM) [10],
[23] is thus a special case of SVM where the algorithm
learns the decision boundary that envelops the only class of
the data. From an anomaly detection perspective, OCSVM
learns the corresponding support vectors from the normal data.
During inference time, new data that are not mapped inside
the enveloped boundaries is therefore considered an anomaly.
In an OCSVM model, user-deﬁned hyperparameters include
the upper-bound of the error fraction ν, and the scale factor
of the radial basis function (RBF) kernel coefﬁcient γ. In our
experiments, ν is set to 0.001 and γ is set to 1/nf , where nf
is the number of input features.

In this approach, the anomaly measure (AM) is deﬁned as
the distance to the hyperplane (i.e., the separating decision
boundary). As normal classes are assigned a positive score,
the distance to the hyperplane has a positive value. Anomaly
points which lies outside of the decision boundary will have
a negative distance. The scores are then normalized in the
following manner to craft a decision threshold:
mn,i
max(mn)

me,i
max(mn)

˜mn,i =

˜me,i =

,

where ˜mn,i, ˜me,i denote the normalized anomaly measures
for the normal data (with subscript n) and the evaluation data

………...hidden layer(ReLU)output layer(Linear)input layer(state)𝑤,𝑏𝑤,𝑏…hidden layer(ReLU)time-series data(sliding window)containing anomaly (with subscript e) respectively for the i-
th datapoint, and mn,i, me,i are the pre-normalized anomaly
measures. Note that the anomaly measure of the evaluation set
is normalized with respect to the maximum anomaly measure
in the normal data used for training the model. Then, the
decision threshold t is deﬁned to be three standard deviations
away from the median of the normal data:

t = ¯mn − 3smn

where ¯m is the median and smn is the standard deviation of
the anomaly measure for normal data. Median is preferred over
the mean as mean is greatly affected by the presence of false
anomaly spikes even in the normal data. Anomaly measures
that have been normalized for the anomalous data will present
themselves as huge spikes way below the threshold t. Hence,
these points are marked as attacks.

4)

Isolation forests: Isolation forest [20] is an unsuper-
vised outlier-anomaly detection framework that operates in a
same manner as random forests [18]. In random forests for
classiﬁcation, the target class label is reached by appropriately
splitting the values of the input features for making decisions
similar to a decision tree. Multiple trees are learned and
their predictions are averaged to form a strong random forest
classiﬁer. Instead of performing classiﬁcation, isolation forests
isolates the observation by randomly selecting a split value
for randomly selected input features. The majority of the
normal data will require lots of splits in the feature space
to effectively isolate the points, but an anomalous data can
be quickly isolated with very few feature splits since they are
very dissimilar to normal data. Hence, the anomaly measure
is deﬁned as the average path length from the root node to
the terminal node in isolating a particular point. In contrast
to OCSVM, the anomaly measure is higher for normal data
points, but very low for anomaly points. The anomaly measure
is normalized and thresholded in the same manner as of the
normalization scheme employed in OCSVM outlined above.
Important hyperparameters include the number of trees of
ntrees = 200 and a contamination fraction of f = 10−8.
Specifying the contamination fraction functions as slack since
occasional spikes in anomaly measure are present even in
normal data.

5) Synthetic corruption and random forests: This approach
is similar to artiﬁcial anomaly association presented in [19] for
root-cause anomaly detection and formulates the problem as a
supervised classiﬁcation task using random forests as the base
classiﬁer. In this formulation, normal data Xoriginal is given a
label of ‘0’ (i.e., a boolean equivalent indicating not attacked).
A new set of data Xcorrupted is derived from the normal data
by randomly corrupting the normal data with a random noise
matrix of m rows and n columns:
corrupted = N m×n ◦ X m×n

, Ni,j ∼ Uniform(0, 1)

X m×n

normal

where each row entry of the corrupted data Xcorrupted is
given the label of ‘1’ indicating corrupted data (i.e., input
feature interdependencies are now broken). The operator ◦
indicates element-wise multiplication. Training proceeds as a

binary classiﬁcation problem in a supervised manner. During
inference, the trained model is evaluated on the evaluation data
where each individual test data points will be predicted as
either ‘0’ (normal) or ‘1’ (attacked/anomalous). It is expected
that this approach would work well for disconnect attacks.

6) Principal component analysis (PCA) with convex hulls:
PCA [16] is a statistical procedure that converts a set of
observations of correlated variables Xunprojected into a set
of linearly uncorrelated variables Xprojected named as prin-
cipal components using an orthogonal transformation. Upon
performing this transformation,
the ﬁrst resultant principal
component has the largest possible variance that accounts
for the maximum amount of variability in the data. One can
then project features from a higher-dimensional space onto a
lower-dimensional space before applying anomaly detection
algorithms.

In this approach, a convex hull is constructed over the
projected normal points Xprojected in the low-dimensional
space. Mathematically, the convex hull is a set of points X in
the Euclidean space that is the smallest convex set that contains
X. During inference, any points projected into coordinates
outside the learned convex hull are deemed as anomalous.
This method is easy to compute but not robust to extreme
values. However, we observe great performance in the present
problem and discussions will be presented in section IV.

7)

Inverse-PCA technique: Similar to DAEs, inverse PCA
relies on encoding information from a higher-dimensional
space into lower-dimensional space within the principal com-
ponents. A transformation matrix for forward PCA is com-
puted from the normal data Xunprojected, and the data is
reconstructed by performing inverse PCA transform using
the same transformation matrix on the low dimensional data
Xprojected to form ˆXunprojected. The reconstruction error is
computed by comparing the reconstructed data versus the
original data. Ideally, the reconstruction error from a normal
data will be low. However, when inverse PCA is applied
on anomaly points, one would expect a huge spike in the
reconstruction error e. Here, we used the mean-squared error
(MSE) as a metric for the reconstruction error. Similar to
discussed methods above, the decision threshold t is set to
three standard deviations away from the mean error observed
in the normal data, i.e.: t = ¯en + 3sen

IV. RESULTS AND DISCUSSION

This section discusses the performance of our

fused
anomaly detection framework, machine learning algorithms
and also the performance of m3 model to detect large scale
attacks. We provide various insights on the results obtained.
Our simulations assume that PVs are deployed far away from
the substation and 100% of houses/PVs in a randomly chosen
residential area are attacked. Each house has a multi-modal
anomaly detection technique that monitors PV, house load and
node measurements to detect attacks.

A. Performance metrics

We evaluate the performance of the models based on preci-
sion, recall and F1 score. In the context of classiﬁcation, preci-

TABLE I: Algorithm performance for DAE, Neural Networks (NN), one-class support vector machines (OCSVM), isolation
forest (IsoRF), corruption random forest (Corrupt RF), PCA with Convex Hull (PCA-CH) and inverse PCA (iPCA) for various
attack modes. The overall attack covers the scenario where an attacker performs all four attacks in a single day. The best
performer is selected by ranking the F1 score. These sets of metrics are presented in boldface.

Overall

Disconnect

Reverse Power ﬂow

Power Curtailment

VAR

Precision
Recall / TPR
F1
Accuracy
ROC-AUC
Precision
Recall / TPR
F1
Accuracy
ROC-AUC
Precision
Recall / TPR
F1
Accuracy
ROC-AUC
Precision
Recall / TPR
F1
Accuracy
ROC-AUC
Precision
Recall / TPR
F1
Accuracy
ROC-AUC

DAE
11.89
47.21
18.48
82.67
NA
13.58
73.21
22.91
78.10
NA
9.56
36.83
15.18
81.71
NA
10.73
18.30
13.53
89.60
NA
13.68
60.49
22.31
81.28
NA

NN
43.60
54.52
47.65
95.14
NA
38.51
63.62
47.98
93.87
NA
25.21
19.64
22.08
93.84
NA
39.18
36.38
37.73
94.66
NA
71.47
98.44
82.82
98.18
NA

OCSVM IsoRF
22.32
54.62
31.69
80.95
68.94
20.35
49.08
28.77
80.34
66.08
18.05
40.63
25.00
80.27
62.20
13.02
28.76
17.93
78.69
55.92
34.27
100.00
51.04
84.48
91.56

95.90
57.12
71.60
96.33
78.45
95.63
51.98
67.35
95.92
75.88
93.59
38.52
54.58
94.81
69.15
94.12
37.99
54.14
94.79
68.89
97.68
100.00
98.83
99.81
99.90

CorruptRF
60.80
70.18
65.16
93.93
83.10
74.81
100.00
85.59
97.22
98.49
61.39
100.00
76.07
95.00
97.29
55.38
37.31
44.58
92.36
67.30
44.02
43.55
43.78
91.12
69.39

PCA-CH
70.02
83.64
76.22
95.78
90.24
73.31
100.00
84.60
97.05
98.40
63.94
59.89
61.85
94.02
78.46
67.22
74.67
70.75
95.00
85.73
73.17
100.00
84.50
97.03
98.39

iPCA
85.43
34.43
49.08
94.22
66.96
85.71
36.41
51.11
94.36
67.94
4.76
0.26
0.50
91.50
49.90
14.81
1.06
1.97
91.50
50.26
94.28
100.00
97.06
99.51
99.73

sion (Pr) and recall (Re) encapsulates the true positives (TP),
true negatives (TN), false positive (FP), and false negatives
(FN) of the model. The terms true and false denote whether
the model’s prediction corresponds to an external judgement,
whereas the terms positive and negative refer to the prediction
of the classiﬁer. Then, precision is deﬁned as: P r = T P
T P +F P
and the recall, equivalent to true positive rate (TPR) is deﬁned
as: Re = T P

T P +F N .

The F1-score metric is deﬁned as: F 1 = 2P rRe

P r+Re , which
is a single metric computed as the harmonic mean between
precision and recall. The receiving operator characteristics
(ROC) curve plots the true positive rate against
the false
positive rate. Ideally, a perfect classiﬁcation model will have
an area under the ROC curve (alternatively named as AUROC,
or ROC) as 1, whereas a model that is guessing randomly will
have an ROC of around 0.5. The larger the value, the more
favorable is the model’s performance.

B. Performance of machine learning algorithms

Figures 6 and 7 depict the ROC curves for neural network
and DAE algorithms, respectively, with regard to the four
attacks. Following observations are made from the graphs:
(i) Neural networks outperform DAE in the detection of all
attacks; (b) For a false positive rate (FPR) of 0.2, using neural
network, volt-var and disconnect attacks are detected with
true positive rates (TPR) of 0.98 and 0.86 respectively; (c)
As opposed to disconnect attacks, power curtailment attacks
are detected with a TPR of < 0.6 for a FPR of 0.2; (d) PV
model outperforms house and node models for disconnect,

power curtailment and volt-var attack as these attacks directly
impact the PV active and reactive power and can be easily
detected; (e) House model slightly performs better compared
to PV model in the event of a reverse power ﬂow attack,
however, generally, the performance of house and node models
are worse compared to PV model which mainly stems from
the ﬂuctuating house load demands and power generation.

Table I depicts the performance of (1)-(7) classiﬁers (DAE,
neural networks, one-class support vector machines, isolation
forest, corruption random forest, PCA with Convex Hull and
inverse PCA) for various attacks. The results presented for
each algorithm is based on the MostAnomalous fused measure.
Figure 9 shows on how decisions are generated for various
anomaly detection method frameworks. From the experiments,
we observe that each algorithm excels in identifying a partic-
ular attack type. Based on the overall performance, PCA-CH
is the most robust to the four attack types. As most attacks
directly result in a huge disturbance to the extent of distorting
feature correlations, the attacked instance lies in a feature
space — outside the convex hull of normal points — that is not
anticipated by the trained model. PCA-CH appears to perform
this task well, followed by OCSVM, the second-best per-
former accomplishes a similar task by constructs a separating
hyperplane to distinguish normal data from unexpected data.
One can further examine individual attack types to study the
strengths and weaknesses of each model. For disconnect and
reverse power ﬂow attacks, random forest classiﬁcation with

(a) PV disconnect attack

(b) Power curtailment attack

(c) Volt-var attack

(d) Reverse power ﬂow attack

Fig. 6: ROC curves based on Neural Networks for PV and house load model under four attack modes

(a) PV disconnect attack

(b) Power curtailment attack

(c) Volt-var attack

(d) Reverse power ﬂow attack

Fig. 7: ROC curves based on DAEs for PV, house load and node model under four attack modes

synthetic anomaly injection is the best performer with very
competitive performance compared to PCA-CH, the overall
best model. This result is not surprising because the training
approach of noise injection inherently captures the “statistics
of sudden disconnects”. For power curtailment attacks (i.e.
denoted by power), PCA-CH remains unchallenged as it can
still effectively detect broken correlations between measured
variables. Interestingly, attacks on reactive power can be most
effectively determined by the simpler OCSVM model at the
house level which considered only two features — active and
reactive power of house — which exhibits clear disparity in

correlation whenever attacks occur. It is worth noting that this
simple correlation break can also be captured quite well by
other algorithms, such as NN, PCA-CH, and iPCA.

Using precision and recall-based metrics for evaluation has
its limitations. At every time instant, an anomaly decision
is made using the set of measurements obtained at that time
instant and hence favors point-wise classiﬁcation approaches
such as OCSVM, IsoRF, CorruptRF, PCA-CH, and iPCA. On
the other hand, our time series formulation with DAE and
neural networks suffer as they were only able to detect the
instant where attack occurs. For example, the ﬁrst instant of

0.00.20.40.60.81.0False positive rate0.00.20.40.60.81.0True positive rateSolar PV modelHouse injection/absorption modelBaseline0.00.20.40.60.81.0False positive rate0.00.20.40.60.81.0True positive rateSolar PV modelHouse injection/absorption modelBaseline0.00.20.40.60.81.0False positive rate0.00.20.40.60.81.0True positive rateSolar PV modelHouse injection/absorption modelBaseline0.00.20.40.60.81.0False positive rate0.00.20.40.60.81.0True positive rateSolar PV modelHouse injection/absorption modelBaselinean attack of arbitrary temporal length can be detected by
the algorithm but the decision on the second time instant is
affected by performing regression using anomalous features.
An event-based metric is desired for more accurate analysis;
unfortunately, there is no standard deﬁnition of such a metric
in literature. Hence, only precision and recall-based metrics are
employed for reporting consistency. The computational time of

Fig. 8: Computational time of training and testing machine
learning algorithms per sample in microseconds. The series 1
and 2, respectively, represent the training and testing time in
samples per microseconds.

the algorithms is presented in Figure 8. Among all algorithms,
iPCA requires the least time to train and test on one sample,
followed by OCSVMs and CorruptRF classiﬁcation. As a
classiﬁcation algorithm, these approaches are expected to have
a faster computation time compared to regression approaches
using NN and DAE. The deep learning methods have a slightly
higher execution time with most of the time spent on train-
ing. On the other hand, Isolation Forest constructs numerous
decision pathways to determine the average path lengths as
a measure of anomaly and it has to be done separately for
each data points. Hence, we observe a signiﬁcant increase
in computation time. One interesting result is that while the
performance of PCA-CH is consistently robust over all four
attack types, it is also the algorithm that requires the longest
time to run. It is straightforward to determine the convex
hull of the training points but determining whether a single
test instance lies within the higher dimension hull requires
performing a more complex procedure called the Delaunay
triangulation. Based on the criteria “that balances between both
execution time and anomaly detection capabilities”, OCSVM
and CorruptRF are two of the best algorithms.

Performance of fused anomaly measure: The performance of
the fused anomaly measure under the MostAnomalous fusion
scheme for a subset of the time series data using OCSVM
as the anomaly detector is shown in Figure 10. The ﬁrst plot
shows the fused anomaly measures for four attack types (i.e.,
disconnect, power curtailment, reverse power ﬂow, volt-var)
partitioned by gray vertical lines. The second plot shows the
anomaly measure obtained from the PV model, the third from
load model, and the fourth from the node model. Our PV

model is able to reliably detect disconnect, power curtailment
and volt-var attacks based on the automatically-determined
decision threshold whereas the detection capability for reverse
power ﬂow attacks is complemented by the load model.

C. Performance of m3 model for large scale attack detection
We run simulations for different attack penetration levels
(i.e., 25% − 100% of houses/PVs in a residential area are
attacked) for disconnect, power curtailment, reverse power
ﬂow and volt-var attacks. Table II presents the performance
of node model (m3) based on neural networks and DAE for
detecting attacks. As the number of houses/PVs attacked in-
creases, the detection performance of our algorithm increases.
However, the reduced detection performance (40%) is due to
the following two reasons: (a) we obtain the voltage magnitude
and phase angle from GridLAB-D measurements every 1
minute which in turn limits our ability to capture the voltage
transients effectively; (b) heterogeneous nature of load supply
and demands also cause the nominal voltage to ﬂuctuate in
normal cases. We plan to improve the performance of our
node model using two techniques: (i) acquire data at a faster
sampling rate to capture the voltage transients; (ii) use physics
based features that captures the correlation between the load
generation/consumption and feeder measurements (e.g., when
active power is injected into the grid during the reverse power
ﬂow attack, feeder voltage magnitude and phase angle rises)
to improve the model performance.

TABLE II: Performance of node model based on neural
networks (NN) and auto-encoders (DAE) for varying attack
penetration levels (25% to 100%) and attack modes. The
results show the true positive rate when the false positive is
around 0.2

100%

75%

50%

25%

NN
DAE
NN
DAE
NN
DAE
NN
DAE

Disconnect
0.4
0.38
0.38
0.38
0.34
0.35
0.31
0.34

Curtailment
0.38
0.35
0.36
0.35
0.32
0.34
0.30
0.34

Volt-var
0.4
0.36
0.38
0.36
0.37
0.35
0.37
0.35

Reverse power
0.45
0.35
0.39
0.35
0.32
0.34
0.30
0.34

V. CONCLUSION

In this work, we design and develop an edge-based dis-
tributed detection framework that continuously monitors PV
and its interaction with the grid in real time to predict the
presence of an attack. This is realized by using data-driven
techniques on various sources of information from PV (active
power, reactive power, voltage-current characteristics), smart
meters (amount of power drawn and exported back to the grid),
and µPMUs (feeder voltage magnitude and phase angles)
and then a MostAnomalous fusion based scheme that fuses
multiple observations and ﬂags anomaly when a deviation
from normal behavior is observed. Various attacks targeting
PV panels were designed and performed on GridLAB-D.
Our simulation results show that each algorithm excels in

DNNDAEOCSVMIsoRFCorruptRFPCA-CHiPCASeries1362.9040369.712753.3341847.254286.72157.60363.7117Series230.604232.200010.3971109.9701101.078112207.72840.68320.10001.000010.0000100.00001000.000010000.0000100000.0000LogofComputationaltiimepersample(1/us)Fig. 9: Illustration on how decisions are arrived using different anomaly detection frameworks. From left-to-right, top-to-
bottom: (i) One class SVMs, (ii) Isolation Forests, (iii) Corruption RFC, (iv) PCA with convex hull, and (v) inverse PCA
reconstruction. (i) and (ii): Normalized anomaly measures appear as spikes that greatly falls below the decision threshold. (iii):
High conﬁdence of anomaly class for anomalous points using Random Forests. (iv): Visualization of PCA components in 2
dimensions. In reality, the feature dimension is actually reduced to 5 dimensions to construct a convex hull. Points marked
green are the predictions; if it coincides the orange points, it is a correct anomaly identiﬁcation. (v): Reconstruction errors
from inverse PCA. Similarly, anomalies manifest themselves as spikes in reconstruction errors.

detecting a particular attack type (e.g., OCSVM detects volt-
var attack with ROC-AUC of 99.9% and CorruptRF detects
reverse power ﬂow and disconnect attacks with ROC-AUC of
97.27% and 98.49% respectively) and PCA with Convex Hull
demonstrated to be the most robust algorithm to all four attack
types with a F1 score and ROC-AUC of 76.22% and 90.24%
respectively. In future, we propose to augment the existing
statistical features with physics based features to accurately
capture the correlation between the device and the grid to
improve the performance of the model.

ACKNOWLEDGMENT

This material is based upon work supported by the Depart-

ment of Energy under Award Number(s) de-oe0000826.

DISCLAIMER

This paper was prepared as an account of work sponsored
by an agency of the United States Government. Neither the
United States Government nor any agency thereof, nor any of
their employees, makes any warranty, express or implied, or
assumes any legal liability or responsibility for the accuracy,
completeness, or usefulness of any information, apparatus,
product, or process disclosed, or represents that its use would
not infringe privately owned rights. Reference herein to any
speciﬁc commercial product, process, or service by trade

name, trademark, manufacturer, or otherwise does not nec-
essarily constitute or imply its endorsement, recommendation,
or favoring by the United States Government or any agency
thereof. The views and opinions of authors expressed herein
do not necessarily state or reﬂect those of the United States
Government or any agency thereof.

REFERENCES

[1] http://www.powersensorsltd.com/PQube3.php.
[2] How
air
how-to-hack-the-power-grid-through-home-air-conditioners.

to
hack
conditioners.

home
http://www.wired.com/2016/02/

through

power

grid

the

[3] Us power grid being hit with increasing hacking attacks as smart meters

deployment continue.

[4] The real story of stuxnet how kaspersky lab tracked down the malware
that stymied irans nuclear-fuel enrichment program. February, 2013.
IEEE Spectrum.

[5] M. J. E. Alam, K. M. Muttaqi, and D. Sutanto. A novel approach for
ramp-rate control of solar pv using energy storage to mitigate output
IEEE Transactions on Energy
ﬂuctuations caused by cloud passing.
Conversion, 29(2):507–518, June 2014.

[6] S. Amini, H. Mohsenian-Rad, and F. Pasqualetti. Dynamic load altering
attacks in smart grid. In IEEE Power Energy Society Innovative Smart
Grid Technologies Conference (ISGT), pages 1–5, Feb. 2015.

[7] S. Barker, A. Mishra, D. Irwin, E. Cecchet, P. Shenoy, and J. Albrecht.
Smart*: An open data set and tools for enabling research in sustainable
homes. SustKDD, August, 111:112, 2012.

[8] D. P. Chassin, K. Schneider, and C. Gerkensmeyer. Gridlab-d: An
open-source power systems modeling and simulation environment. In
Transmission and distribution conference and exposition, 2008. t&d.
IEEE/PES, pages 1–5. IEEE, 2008.

Fig. 10: Fused anomaly measure under the MostAnomalous fusion scheme for a subset of the time series data using OCSVM
as the anomaly detector. Individual performance of the models are also illustrated

[25] J. Nutaro.

Potential cyber-attacks on power systems through load

manipulation. ORNL Technical Report, 2014.

[26] G. Rasche. Cyber security for der, adr, and ami. EPRI Seminar on
Integrated Grid Concept and Technology Development, Aug. 2015.
[27] W. J. C. D. Seguin, R. High-penetration pv integration handbook for

distribution engineers.

[28] P. Srikantha and D. Kundur. Denial of service attacks and mitigation for
stability in cyber-enabled power grid. In IEEE Power Energy Society
Innovative Smart Grid Technologies Conference (ISGT), pages 1–5, Feb.
2015.

[9] D. Chen, S. Iyengar, D. Irwin, and P. Shenoy. Sunspot: Exposing the
location of anonymous solar-powered homes. Energy, 15:20, 2016.
[10] Y. Chen, X. S. Zhou, and T. S. Huang. One-class svm for learning
In Image Processing, 2001. Proceedings. 2001

in image retrieval.
International Conference on, volume 1, pages 34–37. IEEE, 2001.
[11] C. Cortes and V. Vapnik. Support-vector networks. Machine learning,

20(3):273–297, 1995.

[12] M. Costache, V. Tudor, M. Almgren, M. Papatriantaﬁlou, and C. Saun-
In Seventh
ders. Remote control of smart meters: Friend or foe?
European Conference on Computer Network Defense, pages 49–56, Sept
2011.

[13] K. R. P. O. D. Manikantan Shila, K. Srivastava. A multi-factor
authentication approach to authenticate user using human movements,
proximity and walking patterns. IEEE Homeland Security, 2015.
[14] R. M. Gardner, J. K. Wang, and Y. Liu. Power system event location
In IEEE Power Engineering

analysis using wide-area measurements.
Society General Meeting, 2006.

[15] T. Hess, P. Schegner, and M. Schmidt. Studies on provision of ancillary
In IEEE
services by distributed generation units and storage devices.
PES Innovative Smart Grid Technologies Conference Europe (ISGT-
Europe), pages 1–6, Oct. 2016.

[16] I. Jolliffe. Principal component analysis. Wiley Online Library, 2002.
[17] X. L. J. W. C.-C. L. Junjian Qi, Adam Hahn. Cybersecurity for
IET Cyber-Physical

distributed energy resources and smart inverters.
Systems: Theory and Applications, 2016.

[18] A. Liaw and M. Wiener. Classiﬁcation and regression by randomforest.

R news, 2(3):18–22, 2002.

[19] C. Liu, K. G. Lore, and S. Sarkar. Root-cause analysis for time-series
anomalies via spatiotemporal causal graphical modeling. arXiv preprint
arXiv:1605.06421, 2016.

[20] F. T. Liu, K. M. Ting, and Z.-H. Zhou. Isolation forest. In Data Mining,
2008. ICDM’08. Eighth IEEE International Conference on, pages 413–
422. IEEE, 2008.

[21] Y. Liu, S. Hu, and T. Y. Ho. Leveraging strategic detection techniques
for smart home pricing cyberattacks. IEEE Transactions on Dependable
and Secure Computing, 13(2):220–235, Mar. 2016.

[22] C. R. E. S. S. P. C. M. A. M. M. Jamei, A. Scaglione. Automated
anomaly detection in distributed grids using micro pmu measurements.
arcXiv:1610.01107v1, 2016.

[23] L. M. Manevitz and M. Yousef. One-class svms for document classiﬁ-
cation. Journal of Machine Learning Research, 2(Dec):139–154, 2001.
[24] S. Mousavian, M. Erol-Kantarci, and T. Ortmeyer. Cyber attack pro-
tection for a resilient electric vehicle infrastructure. In IEEE Globecom
Workshops, pages 1–6, Dec 2015.

010002000300040005000600010.07.55.02.50.0Fused MeasureFused anomaly scoreDecision threshold0100020003000400050006000420AM from Solar PVFused anomaly scoreDecision threshold010002000300040005000600010.07.55.02.50.0AM from House LoadFused anomaly scoreDecision threshold01000200030004000500060001.51.00.5AM from NodeFused anomaly scoreDecision threshold