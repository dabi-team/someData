DDoS Attacks in Cloud Computing:
Issues, Taxonomy, and Future Directions

Gaurav Somania,b, Manoj Singh Gaurb, Dheeraj Sanghic, Mauro Contid, Rajkumar Buyyae

aCentral University of Rajasthan, Ajmer, India
bMalaviya National Institute of Technology, Jaipur, India
cIndian Institute of Technology, Kanpur, India
dUniversity of Padua, Padua, Italy
eThe University of Melbourne, Melbourne, Australia

7
1
0
2

g
u
A
8
2

]

R
C
.
s
c
[

2
v
7
8
1
8
0
.
2
1
5
1
:
v
i
X
r
a

Abstract

Security issues related to the cloud computing are relevant to various stakeholders for an informed cloud adoption decision. Apart
from data breaches, the cyber security research community is revisiting the attack space for cloud-speciﬁc solutions as these
issues aﬀect budget, resource management, and service quality. Distributed Denial of Service (DDoS) attack is one such serious
attack in the cloud space. In this paper, we present developments related to DDoS attack mitigation solutions in the cloud. In
particular, we present a comprehensive survey with a detailed insight into the characterization, prevention, detection, and mitigation
mechanisms of these attacks. Additionally, we present a comprehensive solution taxonomy to classify DDoS attack solutions. We
also provide a comprehensive discussion on important metrics to evaluate various solutions. This survey concludes that there is a
strong requirement of solutions, which are designed keeping utility computing models in mind. Accurate auto-scaling decisions,
multi-layer mitigation, and defense using profound resources in the cloud, are some of the key requirements of the desired solutions.
In the end, we provide a deﬁnite guideline on eﬀective solution building and detailed solution requirements to help the cyber security
research community in designing defense mechanisms. To the best of our knowledge, this work is a novel attempt to identify the
need of DDoS mitigation solutions involving multi-level information ﬂow and eﬀective resource management during the attack.

Keywords: Cloud Computing, Distributed Denial of Service (DDoS), and Security and Protection.

1. Introduction

1 Cloud computing is a strong contender to traditional IT im-
plementations as it oﬀers low-cost and “pay-as-you-go” based
access to computing capabilities and services on demand. Gov-
ernments, as well as industries, migrated their whole or most
Infrastructure clouds
of the IT infrastructure into the cloud.
promise a large number of advantages as compared to on-
premise ﬁxed infrastructure. These advantages include on-
demand resource availability, pay as you go billing, better hard-
ware utilization, no in-house depreciation losses, and, no main-
tenance overhead. On the other hand, there is a large number
of questions in cloud adopters mind which is discussed in lit-
erature [1] [2]. Most of these questions are speciﬁcally related
to data and business logic security [3]. There are many security
related attacks, that are well-addressed for the traditional non-
cloud IT infrastructures. Their solutions are now being applied
to cloud targeted attacks. As data and business logic is located
on a remote cloud server with no transparent control, most se-
curity concerns are not similar to their earlier equivalents in
non-cloud infrastructures.

1Important Information: Please cite this paper as:

Gaurav Somani, Manoj Singh Gaur, Dheeraj Sanghi, Mauro Conti, Rajkumar
Buyya, DDoS attacks in cloud computing: Issues, taxonomy, and future di-
rections, Computer Communications, Volume 107, 2017, Pages 30-48, ISSN
0140-3664, http://dx.doi.org/10.1016/j.comcom.2017.03.010.

One of these attacks, which has been a much visible attack
is the Denial of Service (DoS) attack [4]. Traditionally, DoS
attackers target the server, which is providing a service to its
consumers. Behaving like a legitimate customer, DoS attack-
ers try to ﬂood active server in a manner such that the service
becomes unavailable due to a large number of requests pending
and overﬂowing the service queue. A diﬀerent ﬂavor of DoS is
Distributed DoS, or DDoS, where attackers are a group of ma-
chines targeting a particular service [5]. There is a high rise in
the number of reported incidents of DDoS, which makes it one
of the most important and fatal threat amongst many [6].

More than 20% of enterprises in the world saw at least one
reported DDoS attack incident on their infrastructure [7]. Au-
thors in [8] show a strong anticipation about the DDoS at-
tackers target shift towards cloud infrastructure and services.
Many attacks in last two years support these attack anticipa-
tions presented in the report. Amongst many recent attacks,
there are few popular attacks which gained a lot of attention
in the research community [8]. Lizard Squad attacked cloud-
based gaming services of Microsoft and Sony which took down
the services on Christmas day in 2015. Cloud service provider,
Rackspace, was targeted by a massive DDoS attack on its ser-
vices. In an another spectacular attack example, Amazon EC2
cloud servers faced another massive DDoS attack. These attack
incidents incurred heavy downtime, business losses and many

Preprint submitted to Elsevier

August 29, 2017

 
 
 
 
 
 
long-term and short-term eﬀects on business processes of vic-
tims. A report by Verisign iDefense Security Intelligence Ser-
vices [9] shows that the most attacked target of DDoS attacks
in the last number of quarters is cloud and SaaS (Software as a
Service) sector.
More than one-third of all the reported DDoS attack mitigations
were on cloud services. One of the most important consequence
of DDoS attack in the cloud is “economic losses”. Report in [7]
estimates the average ﬁnancial loss due to a DDoS attack to
around 444K USD. There are other reports by Neustar [10],
which presents the economic loss data of Q1, 2015. In this re-
port, the average ﬁnancial loss is more than 66K USD/hour.
DDoS attacks and their characterization become completely
diﬀerent when applied to the context of the cloud. The dif-
ference arises mainly due to the consequences of an attack on
the victim server. Infrastructure as a Service (IaaS) clouds run
client services inside Virtual Machines (VMs).

Virtualization of servers is the key to the elastic and on-
demand capabilities of the cloud, where VMs get more and
more resources when needed and return unused resources when
idle. Cloud computing’s heavy adoption trend is due to the on-
demand computing and resource availability capabilities. This
capability enables the cloud infrastructure to provide profound
resources by scaling, as and when there is a requirement on a
VM. Therefore, a VM will not experience a resource outage
as ample amount of on-demand resources are available in the
cloud. This feature of “elasticity” or “auto-scaling” results into
economic losses based DDoS attack which is known as Eco-
nomic Denial of Sustainability (EDoS) attack or Fraudulent Re-
source Consumption (FRC) attack [11].

In this paper, we aim to provide a survey of DDoS attacks in
the cloud environment. We also diﬀerentiate these attacks with
the traditional DDoS attacks and survey various contributions
in this space and classify them. For this purpose, we prepare a
detailed taxonomy of these works to provide aid to comprehend
this survey.

1.1. Need of a survey on DDoS attack in cloud

There are a number of survey papers available which deal
with DDoS attacks, both from the perspective of attacks and
mitigation in networks. There are surveys and taxonomies
available which include traditional DDoS mitigations methods
including attack traceback, attack ﬁltering and attack preven-
tion [12] [13]. Taxonomies like [14] highlight DDoS in the
cloud with the perspective of Software Deﬁned Networks. Sur-
veys such as [15] focus on the solutions which are designed
around traﬃc and behavior change detection. The following
are some of the important requirements for this survey:

1. Cloud computing and technologies around it are recent
phenomenon. It requires a diﬀerent treatment regarding
the characterization of the attack, detection and preven-
tion. The desirable diﬀerence is evident in many recent
attack incidents [8].

2. There are quite a good number of recent studies available
on DDoS attacks, but there is no speciﬁc survey (including
surveys on Cloud DDoS attacks) available to consider and

gather solutions related to resource management aspects
of utility computing.

3. Economic aspects of the DDoS attack (quoted as EDoS)
and its consequences on cloud resource allocation is en-
tirely missing from existing surveys; thus, the solutions
speciﬁc to these issues are required.

1.2. Survey Methodology

We performed literature collection by doing an exhaustive
systematic search on all the indexing databases and collecting
a huge number of papers related to the area. An initial scan
resulted into a subclass of the collection. Another deep scan
resulted in the papers we used in our survey and are used in
the taxonomy preparation. We believe that the contributions
listed in this survey are exhaustive and lists all the important
contributions in the emerging area till date.

1.3. Contributions

We make following contributions in this paper:

1. We introduce DDoS attack scenario in infrastructure
clouds and identify how various elements of cloud com-
puting are aﬀected by DDoS attacks.

2. We present a detailed survey and taxonomy of solutions of
DDoS attacks in cloud computing. Based on the developed
taxonomy, we identify weaknesses in the state-of-the-art
solution space leading to future research directions.

3. For a uniform comparison and veriﬁcation among attack
solutions, we provide a comprehensive set of performance
and evaluation metrics.

4. This paper presents a detailed set of design aspects of ef-
fective DDoS mitigation at the end. It includes mitigation
strategies at resource allocation level instead of preventive
and detection strategies used by existing solutions.

5. This work would help security researchers to deal with the
DDoS diﬀerently as compared to the treatment given while
considering traditional IT infrastructure.

1.4. Organization

We discuss cloud computing and its essential features, which
are aﬀected by the DDoS attacks in Section 2. Section 3 de-
tails recent attack statistics to help in understanding the need
for this survey. Section 4 oﬀers a detailed and comprehensive
taxonomy to help the reader to understand the broad solution
space for DDoS attacks applicable to cloud computing. This
taxonomy has three major branches which we discuss in three
diﬀerent sections. These three sections are attack prevention
(Section 5), attack detection (Section 6) and attack mitigation
(Section 7). In Section 8, we provide the guideline towards so-
lutions to DDoS attack mitigation. We draw conclusions of this
work in Section 9.

2

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

C&C Server

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

Server 2

Server 3

Server 1

Various Bots

VM

Server 12

Server 11

Server 10

Cloud Network

Server 9

Server 8

VM

VM

Server 4

Server 5

Server 6

Server 7

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

VM

Figure 1: DDoS Attack Scenario in Infrastructure Cloud

2. DDoS Attacks and Cloud Computing

Cloud computing provides an on-demand utility computing
model where resources are available on “pay-as-you-go” ba-
sis.
In particular, the cloud provider is an “Infrastructure as a
Service (IaaS)” provider, who provisions VMs on-demand. On
the other hand, a service provider is a cloud consumer who has
placed the web service in the form of a VM (say an e-commerce
application) in the infrastructure cloud provided by the cloud
provider. Figure 1 depicts a typical cloud computing environ-
ment with a large number of servers running VMs.

2.1. DDoS Attack and Cloud Features

DDoS attacks have recently been very successful on cloud
computing, where the attackers exploit the “pay-as-you-go”
model [8]. There are three important features which are the
major reasons behind the success trends of cloud computing.
On the other hand, the same set of features is proven to be very
helpful to DDoS attackers in getting success in the attacks (dis-
cussed in Section 2.2). We now discuss these three features in
detail:

2.1.1. Auto Scaling

Hardware virtualization provides a feature to shrink-expand
resources of a VM while it is running. These properties per-
mit the allocation of additional CPUs, main memory, storage
and network bandwidth to a VM when required. Additionally,
this can also be used to remove some of the allocated resources
when they are idle or not needed. Multiple providers use this re-
source allocation mechanism with the help of auto scaling [16]

web services, which allows cloud consumers to decide the re-
source need on the basis of resource utilization or similar ma-
trices. The same feature is extended towards adding more VM
instances on more physical servers and stopping when there is
no need. Machine level scaling (vertical scaling) and data cen-
ter or cloud level scaling (horizontal scaling) are two crucial
features of utility computing.

Scalability is achieved by spreading an application over mul-
tiple physical servers in the cloud. Scalability is driven by
high speed interconnects and high speed as well as ample stor-
age. Virtualization of operating systems plays an important role
while considering the scalability of VMs. VM cloning and its
subsequent deployment are quite fast. Hence, whenever there is
a requirement, cloned VMs can be booted on other servers and
used to share the load. Scalability is also strongly supported by
the live migration of VMs, where a running virtual server can
be migrated to another bigger physical server without almost no
downtime oﬀering uninterrupted scalable operation.

2.1.2. Pay-as-you-go accounting

On-demand utility model has become very attractive for con-
sumers due to its leaner resource accounting and billing model.
“Pay-as-you-go” model allows a cloud consumer to use re-
sources without physically buying them. A VM owner may
want to add or remove more resources on-the-ﬂy as and when
needed. Other beneﬁts of using cloud platform oﬀer better
hardware utilization and no need of arrangements like power,
space, cooling and maintenance. Pricing or accounting plays an
important role while understanding DDoS attacks in the cloud.
Mostly, cloud instances are charged on an hourly basis and thus
the minimum accounting period is an hour. Resources can be

3

allotted on ﬁxed basis, pay-as-you-go basis and by auctions.
Similarly, storage and network bandwidth are measured using
total size and total data (in and out) transfer. It is very clear that
these models are “pay-as-you-go” models and are still evolving.

2.1.3. Multi-tenancy

Multi-tenancy gives the beneﬁt of running more than one
VMs from diﬀerent VM owners on a single physical server.
Multi-tenancy is a way to achieve higher hardware utilization
and thus higher ROI (Return on Investment). An individual user
may want to have more than one VMs running similar or diﬀer-
ent applications on a single physical server.

2.2. DDoS Attack Scenario in Cloud

A typical attack scenario is as shown in Figure 1. An infras-
tructure cloud will have many servers capable of running VMs
in multi-tenant virtualized environments. In addition to aiming
at “Denial of Service”, attackers might aim to attack economic
sustainability aspects of cloud consumers. Discussions on this
attack have started right after the inception of cloud comput-
ing [11]. There are few other contributions where this attack
has been termed as Fraudulent Resource Consumption (FRC)
attacks [17]. Attackers thoroughly plant bots and trojans on
compromised machines over the Internet and target web ser-
vices with Distributed Denial of Service attacks. DDoS takes
the shape of an EDoS attack when the victim service is hosted
in the cloud. Organizations exist (also known as “Booters”),
which provide a network of bots to their consumers to plan
DDoS attacks on their rival websites [18]. Motives of these
attacks range from business competition, political rivalry, ex-
tortions to cyber wars among countries.

The cloud paradigm provides enormous opportunities and
beneﬁts to consumers and the same set of features are available
and may be useful for DDoS attackers. An attacker who plans a
DDoS attack would send enough fake requests to achieve “De-
nial of Service”. However, this attack would generate heavy
resource utilization on the victim server. “Auto scaling” [16]
would take this “overload” situation as feedback and add more
CPUs (or other resources) to the active pool of resources of
this VM. Once a VM gets deployed, it starts as a “Normal load
VM”. Now, let us assume that the DDoS attack has started and
consequently VM gets overloaded (“Overloaded VM”). The
overload condition triggers auto-scaling features of cloud re-
source allocation, and it will choose one of the many strategies
available in the literature for VM resource allocation, VM mi-
gration, and VM placement [19]. Overloaded VM may be given
some more resources or migrated to a higher resource capacity
server or may be supported by another instance started on an-
other server. If there is no mitigation system in place, this pro-
cess will keep adding the resources. This situation may last till
service provider can pay or cloud service provider consumes all
the resources. Finally, it will lead to “Service Denial”. In turn,
this leads to on-demand resource billing, and thus economic
losses over and above the planned budget may occur. One triv-
ial solution is to run VMs on ﬁxed or static resource proﬁle
where the SLA does not have any provision for additional re-
sources on demand. In this case, the DDoS will directly result

in “Denial of Service” and all the attractive features of the cloud
will be lost.

3. Attack Statistics and Impact Characterization

In this section, we provide a coverage of various attack statis-
tics and their impact on various victim organizations. We have
also covered few characterization studies to quantify the eﬀects
of DDoS attacks in the cloud. The attack scenario as depicted
in Figure 1 can be expanded further in the form of Figure 2.
This ﬁgure shows details about the attack origin and the resul-
tant attack impacts. The DDoS attacks are mostly botnet driven
attacks where a botnet controller directs a large number of auto-
mated malware driven bots to launch the attack. We also show
cloud originated attacks in the Figure 2. We show directly visi-
ble attack eﬀects as well as attack eﬀects which are not directly
visible or become visible post-attack. Direct attack eﬀects in-
clude service downtime, economic losses due to the downtime,
auto-scaling driven resource/economic losses, business and rev-
enue losses, and the downtime and related eﬀects on services
which are dependent on the victim service. There are a num-
ber of indirect eﬀects to the cloud DDoS attacks. Attack mit-
igation costs, energy consumption costs, reputation and brand
image losses, collateral damages to the cloud components and
the eﬀects due to recent smoke-screening attacks. Reputation
and brand image losses may not be well quantiﬁed and may be
treated as long-term losses [20]. Collateral damages include in-
direct DDoS attacks, addition migrations and scaling, and the
energy consumption eﬀects as given in [21]. We discuss all
these attack eﬀects in more detail in this section.

3.1. Attack Statistics

Denial of service attacks are quantiﬁed and studied by many
security solutions providers in the market [22] [23] [24] [25].
There are a number of other reports which state about the im-
pact and rise of DDoS/EDoS attacks in the cloud. It was also
anticipated that there will be a major target shift of the DDoS
attackers from traditional servers to cloud-based services [8]
and it has even been proven by the Q1 reports of 2015 [9]. As
per this report [9], most of the attack targets were cloud ser-
vices in Q1, 2015. According to the report by Neustar [10],
economic losses per hour at peak times are 470% more than the
previous year. Lizard Squad planned attacks on Microsoft and
Sony gaming servers, is the ﬁrst example. Similarly, Amazon
EC2 servers and Rackspace servers, which are cloud service
providers, were attacked using a large DDoS attack in early
2015. Economic aspects of these attacks are also challenging.
Greatﬁre.org was targeted by a heavy DDoS attack in March
2015, costing it an enormous bill of $30,000 daily on Amazon
EC2 cloud [26]. As per report in [7], the average ﬁnancial dam-
age by a DDoS attack is up to 444,000 USD.

Even the innovative “DDoS as a Service” tools are making it
easier for hackers to plan these attacks. As per Q1, 2014 report
of
[24], the total DDoS attacks within last one year has in-
creased by a signiﬁcant number (47%). Another paramount ﬁg-
ure to ponder is target servers. More than half of these DDoS at-
tacks targeted towards entertainment and media industry which

4

Benign User

Benign User

Benign User

Benign User

  Botnet 
Controller

PCs/Servers

VM

VM

Laptops/PDAs

Victim VM

Victim Cloud
Infrastructure

VM
VM VM

Attack
Clouds

Smartphones

Service 
Downtime

Economic
Losses
due to Downtime

Scaling 
Driven 
Economic Losses 

Business 
and Revenue 
Losses

Dependent 
Services 
Downtime

Attack
Mitigation 
Costs

Energy
Consumption
Costs

Reputation and 
Brand Image
Losses

Collatoral 
Damages 
in Cloud

Smoke-
screening
Attacks

Direct Effects

Indirect Effects

Figure 2: DDoS Attack in Cloud: Direct and Indirect Eﬀects

is mostly hosted in the cloud. A detailed report regarding the
various statistics is covered in [27]. As per this report, the
DDoS attack bandwidth has grown to more than 500 Gbps in
2016 from just 8 Gbps in 2004. There are some other reports
by Arbor Networks [25], which state that NTP based reﬂection
and ampliﬁcation attacks are the new forms of the DDoS. There
is an additional attack that is termed very dangerous, has been
started showing its eﬀect parallel to a DDoS attack. This at-
tack is known as Smoke screening which is an attack to plan
information or data breach behind a DDoS. While DDoS dis-
tract whole staﬀ in mitigating or preventing from the present
situation, the attacker may plan other attacks to harm.
As per this report by Neustar [23], around 50% of the organiza-
tions have suﬀered from the “Smoke screening” attack while
they were only mitigating DDoS. Repetition of the attack is
also a major issue, and most of the targeted companies (90%)
have faced repetitive attacks leading to vast business losses.
The growth and adoption of cloud and DDoS mitigation solu-
tions in the cloud are two major points complementary to each
other. Enterprises took few years to start adopting infrastructure
clouds after its inception in 2007, and now many of organiza-
tions are entirely or partly transformed their IT infrastructure
into cloud.

3.2. DDoS Attack impact studies in the Cloud

After the inception of the term “EDoS attack” by Christofer
Hoﬀ in 2008 [11], there are some works related to charac-
terization of the DDoS attack in the cloud and study its im-
pacts. To see the eﬀect of the DDoS attack, authors in [28]
have conducted an important experiment, where they wanted
to calculate the maximum possible charges on a cloud ser-
vice. The authors conducted the experiment by sending 1000
requests/second with 1000 Megabits/second data transfer on a
web-service hosted on Amazon CloudFront for 30 days. This
experiment accumulated an additional cost of $42,000 for these
additional requests.

The authors in [17] characterized the eﬀectiveness of the
EDoS attack on cloud consumer’s bills. Authors in [17] have
calculated the additional cost when there is only one attacker
that is sending one request per minute for one month. Even this
could gather total 13GB of data transfer assuming a normal web
request size of 320KB. A similar experiment was conducted
in [29] where a web server cluster running on extra-large in-
stance at Amazon EC2 was targeted with an EDoS attack. The
observation showed that bills grew on the basis of the num-
ber of requests and deployment of additional resources. Au-
thors in [30] have presented the potential of malicious use of
browsers of legitimate users to plan an EDoS attack.

Authors use social engineering based web-bug enabled spam
email to use legitimate browsers for the attack [30]. Authors
have argued that rented bots are easy to detect by the DDoS
mitigation infrastructure and web-bugs in the form of a spam
email to plan an EDoS attack can be used easily. They planned
an attack on Amazon S3 infrastructure and characterized the
attack eﬀects. Authors in [21] have shown the characterization
by showing EDoS eﬀects and convergence to DDoS. Similarly,
they have conducted a cloud level simulation to show that a
DDoS attack in the cloud, may show many side-eﬀects to non-
targets including co-hosted VMs, other physical servers, and
the whole cloud infrastructure. These eﬀects have formed an
important part of the cloud threat and attack model presented
in [31].

4. Taxonomy of DDoS Solutions

This section presents the detailed solution taxonomy of
DDoS attacks in the cloud. The ﬁnal set of contributions in
this area were gathered using systematic search methodology
discussed in Section 1.2. The works related to DDoS defense
in the cloud have been comprehensively surveyed and prepared
as a taxonomy as shown in Figure 3. To help the particular
direction of research, we have included many of works from

5

DDoS Defense in Cloud Computing

Attack Prevention (P)

Attack Detection (D)

Attack Mitigation (M)

Challenge Response (P1)

Anomaly Detection (D1)

Resource Scaling (M1)

Hidden Servers/Ports (P2)

Source/Spoof Trace (D2)

Victim Migration (M2)

Restrictive Access (P3)

Count Based Filtering (D3)

OS Resource Management  (M3)

Resource Limits (P4)

BotCloud Detection (D4)

Software Defined Networking (M4)

Resource Usage (D5)

DDoS Mitigation as a Service (M5)

Figure 3: DDoS attack prevention, detection and mitigation in cloud: a taxonomy

Benign Requests

Attack Requests

Allow

Drop

Turing
 Test

Victim Server

VM
Cloud

VM

VM

VM

Request Access
Challenge

Benign User

Response

Attacker

Request Access

Challenge

Attacker

Response

X

Attacker

Attack Prevention

Attack Detection

Attack Mitigation and Recovery

Figure 4: DDoS Protection in cloud at various levels

the DDoS defense in traditional infrastructure. We prepare this
taxonomy by keeping a view that this work would serve the
purpose of providing a clear, detailed and complete picture of
the solutions space, diﬀerent ideas, and approaches available in
the literature. Taxonomy ﬁelds are provided a nomenclature to
classify diﬀerent contributions.

We segment the taxonomy in three important parts which are
attack prevention (P), attack detection (D) and attack mitiga-
tion and recovery (M). Though, many of these works have con-
tributed in all three or two divisions of this classiﬁcation, hence,
those works are discussed in all those sections individually. The
typical solution space looks like the one shown in Figure 4.
At the ﬁrst instance when the requests come, a simple “Tur-
ing test” may help in preventing the attack. The next stage is
anomaly detection to both prevent and detect the attack. There
is a large number of contributions in the area of traﬃc monitor-
ing and analysis. The third stage is based on the methods which
are helpful in mitigation as well as recovery. Cloud computing
features and profound resources help at this stage.

We have highlighted the need for more solutions at this stage
in section 7. There is a large number of contributions available

at each stage, and they are listed in the next section. However,
in the Figure 4, we could just show a simpliﬁed gist, which
misses many other solutions at each stage. Before moving on to
the discussion of various DDoS solution categories in the next
section, we make an eﬀort to propose important evaluation and
performance metrics for various categories of our taxonomy.
Table 1 shows the metrics related to the all three subclasses and
their subcategories. It is important to highlight that in the next
sections, we use these metrics in our discussion to compare the
suitability of various solutions. There are many solutions which
do not use any evaluation or performance metrics. However, we
believe that these important metrics can help the community to
orchestrate solutions which are veriﬁable against the important
properties we list in the Table 1.

5. Attack Prevention (P)

DDoS prevention in the cloud is a pro-active measure, where
suspected attackers’ requests are ﬁltered or dropped before
these requests start aﬀecting the server. Prevention methods do
not have any “presence of attack” state as such, which is usually

6

o
i
t
n
e
v
e
r
P

Subcategory
n Challenge Response
Hidden Servers/ports
Restrictive Access
Resource Limit
Anomaly Detection
Source and Spoof Trace
Count Based Filtering
BotCloud Detection
Resource Usage
Resource Scaling
Victim Migration
OS Resource Management
Software Deﬁned Networking Overhead cost of training, proﬁling, and false positives and negatives
DDoS Mitigation as a Service

Important metrics to benchmark the solutions
Accessibility, usability, puzzle generation, storage, and veriﬁability, and false alerts
Redirection, overhead of server replicas and load balancing, and all other puzzle metrics
Accessibility, usability, response delay and false positives and negatives in admission control
Cost and overhead of management of additional reserved resources
Overhead cost of training and proﬁling and false positives and negatives
TTL data veriﬁcation and traceback costs and false positives and negatives
Suitability to various static and dynamic counts in minimizing the false alerts
Overhead cost of learning and verifying traﬃc ﬂows and false alerts
Overhead of employing monitors and counters, and threshold suitability
Auto-scaling decision and threshold suitability
Migration downtime, costs and network overhead for deltas
Attack mitigation, reporting and downtime, and attack cooling down period

Solution costs, service downtime and other metrics based on diﬀerent solutions

n
o
i
t
c
e
t
e
D

n
o
i
t
a
g
i
t
i

M

k
c
a
t
t

A

k
c
a
t
t

A

k
c
a
t
t

A

Table 1: Various performance metrics to benchmark the DDoS attack solutions in cloud computing

available to the attack detection and mitigation methods. There-
fore, prevention methods are applied to all users whether legit-
imate or illegitimate. Most of these methods are tested against
their usability, which incurs an overhead for the server as well
as legitimate clients. We further classify this direction in four
subclasses:

1. Challenge Response.
2. Hidden Servers/ports.
3. Restrictive Access.
4. Resource Limit.

For a quick view, the overall theme of each set of these methods,
their strengths, challenges, and weaknesses are listed in Table 2.
We also prepare a list of important individual contributions in
Table 3. We enlist a brief theme of each solution to provide an
overview about the variety of contributions available in each of
the subclass.

5.1. Challenge Response (P1)

Challenge-Response Protocols (CRP) are designed to iden-
tify the presence of real users. Many times, this concept has
been applied in an opposite manner, where the protocol tries
to determine if the user is a bot/attacker machine, especially in
the case of crypto-puzzles or proof-of-work. One of the most
common prevention technique is a Turing test in the form of a
CAPTCHA, which is usually one of the most preferred methods
in the category of challenge-response protocols. In addition to
the methods related to cloud, some important CRPs from tradi-
tional DDoS defenses are also added to this discussion. Graph-
ical Turing tests are popular CRP implementations available to-
day.
Instead of showing plain text challenge and seeking an
answer, these tests may present an image and a question re-
lated to that image. The image may have a picture, text with
various impurities like an arc, distortion, and noise. Graphical
CAPTCHA may have moving images in the form of .GIF or set
of multiple pictures to choose from. Crypto puzzles are used to
assess the computational capability of a client. Crypto puzzles
are questions seeking output of a function with given inputs.

7

For example, let us consider a hash function f (x, y) with inputs
a and b. The client is expected to compute f (a, b) and return
the answer back in some stipulated time.

Now, we discuss few important strategies related to challenge
response schemes to prevent DDoS attack in cloud computing.
EDoS Shield [35] and Alosaimi et al. [36] used graphical Tur-
ing tests to prevent the bot driven attack from occurring. Au-
thors in [36] proposed a DDoS Mitigation System (DDoS-MS),
where initial two packets from the client side, form the basis
of the attack identiﬁcation and subsequent mitigation. In their
work, they used both graphical Turing tests and crypto puz-
zles to identify the attacker. Authors in [35] proposed a solu-
tion that ﬁlters requests on the basis of graphical Turing tests
(CAPTCHAs). In this mode, a Virtual Firewall (VF) shield is
designed which distinguishes the incoming requests on the ba-
sis of two lists, white and black. These records are updated on
the basis of the success and failures of graphical Turing tests.
To prove the eﬀectiveness and novelty of their solution, authors
have conducted simulations to show the eﬀect of their scheme
on end-to-end delay, cost, and other performance indicators like
throughput and bandwidth. There are a variety of crypto puz-
zles with diﬀerent diﬃculty levels in [32] [33] [34]. Authors
in [32] presented sPoW (Self-Verifying Proof of Work) method-
ology to mitigate EDDoS (Distributed EDoS). They provided a
method to mitigate both network-level EDDoS and Application
level EDDoS by extending the work proposed in [39]. In [39],
instead of accepting all the traﬃc, they are only accepting the
traﬃc that they are capable of taking. The authors in [32] pro-
vided an innovative solution where they use crypto-puzzle to
identify legitimate customers. These crypto-puzzles are self-
verifying and do not run on the server. Instead of the server, the
client computes the solution. On the basis of the time taken to
solve the crypto-puzzle servers/nodes in the intermediate path,
it will be decided whether the incoming traﬃc is legitimate traf-
ﬁc or not. The salient feature of this approach is that DDoS
attacker may send their traﬃc even at a higher rate by speedily
computing the puzzle, even in this case, sPoW approach does
not allow the traﬃc. On the other hand, if DDoS traﬃc comes

Techniques

Strengths

Challenges

Challenge
Response
(P1)

Hidden
Servers/Ports
(P2)

Restrictive
Access (P3)

Resource
Limits (P4)

in the ﬁrst

Eﬀective
usable
and
methods using puzzles
to diﬀerentiate human
and bots
Service is being oﬀered
to legitimate users while
no direct connection is
established with the real
server
in-
stance
Admission
control
instead of block-
or
ing/dropping responses
are
for
prioritized
diﬀerent classes of users
Limiting the economic
losses
restricting
the maximum usable
resources by a VM

by

of

Overhead
graph-
ics generation and its
storage

Limitations
Image
OCR,
parsing
puzzle
attacks

segmentation,
and
dictionary
attacks,
and
accumulation

Contributions

[32][33][34]
[35][36][37]
[38][39]

Redundant servers ports
balancing
and
among them is needed

load

Overhead of additional
security layer and redi-
rections

[37][32][40]
[41][42]

Quality of service con-
cerns and overhead of
maintaining number of
connections for delayed
period

the

re-
Determining
source
and
capacity planning of a
server

limits

scalable
massive

in case
Not
of
DDoS
with spooﬁng by large
number of sources
prevent
not
It
DDoS and its eﬀects,
except
the
economic losses due to
cloud billing

limiting

does

[43][44][32]
[40]

[45][46][47]

Table 2: DDoS Attack Prevention Techniques in Cloud: P2 Other Prevention Methods

at a normal rate (equivalent to the rate at which legitimate cus-
tomer sends) then their approach is successful in limiting the
traﬃc.

Challenge Response schemes provide an easy way of im-
plementing the attack prevention methods by addressing the
most common automated, bot originated and rate based at-
tacks. A list of good qualities crypto puzzles are described
in [48]. The crypto puzzle should be solvable in a deﬁnite time
and should not have other possible methods. Additionally, the
server should be able to compute answers and verify them with
ease.
Proof-of-work approaches are crypto puzzles but may have ad-
vanced features to utilize the client computation power and
based on the correctness of solution and time, the authenti-
cation, and prioritized access is granted [32] [37]. This ap-
proach has multiple beneﬁts including computation overhead
shifting to the client and stopping overwhelming computation-
ally equipped clients.

Accessibility and conversion rates are two important points,
which have been discussed recently against challenge-response
protocol implementations speciﬁcally, CAPTCHAs [49]. There
are many CRPs, which are designed and tested from the per-
spective of their attack persistence, accessibility, overhead, puz-
zle generation, and storage requirements. Many of these are is-
sues related to the area of Human Computer Interaction (HCI).
One of the important aspects of “Challenge-Response Proto-
cols” is Accessibility, which should be considered while design-
ing the question generation module. Designing diﬃcult ques-
tions so that bots cannot construct their answer is quite an easy
task, but a normal user should also be able to answer the ques-
tions with adequate comfort. Solutions based on Turing tests
should be examined using a usability and accessibility study.

Text puzzles are known to be cracked using dictionary attacks
or parsing attacks. There is a number of limitations which are
posed by [35], like the puzzle accumulation attack where an at-
tacker sends a large number of requests for getting puzzles but
does not solve them. It would result in an extra overhead of gen-
erating the puzzles at the server end. These Turing tests require
additional overhead to generate graphics and storage space to
store images. There are multiple works related to CAPTCHA
cracking using image segmentation and optical character recog-
nition (OCR).

5.2. Hidden Servers/Ports (P2)

Hidden servers or hidden resources such as ports is an im-
portant method to remove a direct communication link between
the client and the server. The objective of hiding the servers,
is achieved by keeping an intermediate node/proxy to work as
a forwarding authority. The important jobs of this forwarding
authority may include balancing the load among the servers,
monitoring the incoming traﬃc for any vulnerability, and fault-
tolerance and recovery of the servers.

Various approaches have diﬀerently used the features of hid-
ing the resources, e.g. hidden proxy server [37], ephemeral
servers [32] and hidden ports [40]. Authors in [37] proposed
a moving target method to defend from DDoS attacks. They
proposed the inclusion of many hidden proxy servers which
may be dynamically assigned and changed to save legitimate
clients. This approach has some practical issues like scalabil-
ity, the inclusion of large no. of proxy servers, shuﬄing. Even
diﬀerent web services may not like to have changing server ad-
dresses in between connections. This method uses client puz-
zles using PoW (Proof-of-Work) to distinguish between attack-
ers and normal traﬃc. Additionally, some of these approaches

8

Major theme of the contribution
Crypto puzzles to identify benign traﬃc
Crypto puzzle levels based on the attack rate
Crypto puzzles to identify benign traﬃc

n
o
i
t
u
b
i
r
t
n
o
C
[32]
[33]
[34]
[35] Graphical Turing tests
[36]
[37]
[38]
[37] Moving target approach to hide the servers
[32]
[40]
[41] Moving targets using server replica shuﬄing
[42] Hidden server only visible to benign users
[50]

Both graphical as well as crypto puzzles
Proof-of-work puzzles
Turing tests combined with other techniques

Secure ephemeral servers with authentication
Limits number of connections on hidden ports

Proxy forwards benign requests to the server
) [43] Admission control based on delayed response
3
P
(

Client reputation based prioritized access

[44] Human behavior (rate) detection and access
s
s
[32]
e
c
c
[40] Admission control puzzles and hidden ports
A
) [47]
Resource Scaling to absorb the attack
4
P
[46]
Resource caps to limit the attack eﬀects
(
[45]
Cloud metric monitoring and alarms
[51] DDoS Aware scaling and capacity planning

m
L

s
t
i

i

n
o
i
t
u
l
o
S

y
r
o
g
e
t
a
c

)
1
P
(

e
s
n
o
p
s
e
R

)
2
P
(

s
t
r
o
P

e
g
n
e
l
l
a
h
C

/
s
r
e
v
r
e
S
n
e
d
d
H

i

e
v
i
t
c
i
r
t
s
e
R

e
c
r
u
o
s
e
R

Table 3: DDoS Attack Prevention Techniques in Cloud

randomly allocate diﬀerent hidden servers. Jia et al. [41] have
used the moving target based mechanism by shuﬄing the tar-
gets to confuse the attackers. This is achieved using the server
replicas. This solution requires the overhead of maintaining
the replicas and managing the moving target strategies. Addi-
tionally, authors have proposed strategies of eﬀective shuﬄing
assignments of clients requests to servers. Authors in [42] have
proposed a DDoS detection mechanism which is a request rate
based detection method. The proposed method black lists in-
coming client request on the basis of their threshold rate.
By this blacklist, access is granted by special “army nodes” cre-
ating a virtual ﬁrewall. Authors have argued that this way, the
server could continue to serve legitimate clients. Similarly, au-
thors in [50] have proposed a solution where a proxy server is
used to test and forward the benign requests to the server behind
the fore-front service.

Hidden servers or ports are preventive mechanisms to save
the real service to face a DDoS attack. Therefore, requests
to these hidden servers or ports are redirected by authentica-
tion/proxy servers which is the ﬁrst server to be encountered by
a client. Authentication provides an extra security layer to se-
cure the actual service. Hidden servers can help in stopping the
malicious or massive traﬃc to aﬀect the real server. This extra
layer may also support other purposes of redirection and load
balancing among servers.

The major limitation of this approach include the cost of the
intermediate servers, time delay and computation overhead of

9

redirection and its management at the intermediate nodes. Ad-
ditional overhead includes the cost of maintaining the server
replicas and their backup management.

5.3. Restrictive Access (P3)

Restrictive access techniques are basically admission control
methods to take preventive action against the service capacity.
Some of these strategies have implemented the prevention by
delaying responses/access to the suspected attackers or even ad-
ditional clients. In many of the contributions, this delay is intro-
duced by prioritizing the legitimate clients or selecting clients
with “good” past behaviors. There are few techniques which
are based on “Delayed access” and “Selective access” which
are mostly similar, except that the strategies to provide the ac-
cess to the clients are diﬀerent.

In some cases, reputation is the basis of the admission control
mechanism, in which some users are preferred over the others
on the basis of reputation [32]. Reputation is calculated on the
basis of the correctness of crypto puzzles within a deﬁnite time
and past web access behavior. Authors in [32] have named it
as “capabilities”. Authors in [43] gave a solution which did not
drop any request based on its behavior, instead, they delayed the
access to them. This delayed access prevents the attack to occur
and even does not trigger auto-scaling. The proposed method
controls the user access requests by their past web access his-
tory. In case these claims reach certain thresholds, the request
responses are delayed instead of dropping the requests. These
thresholds are decided from the request history of users. The
eﬀectiveness of delayed responses is questionable in real envi-
ronments because of user accessibility issues, which requires
timely responses. Authors in [44] have followed a diﬀerent ap-
proach where if a user does not behave as per typical human be-
havior, it is blocked for a speciﬁc period and then it is again un-
blocked. Authors have proposed a novel subclass of the DDoS
attack and termed it as index page based attack where the very
ﬁrst page or homepage of the website is targeted for a DDoS
attack [44]. Clearly, the ﬁrst page of every website should be
free and can be fetched without solving any puzzle or authen-
tication. Authors have shown attacks on this ﬁrst page, where
no Turing test prevention mechanism may work. Authors have
given human behavior based identiﬁcation to mitigate the at-
tack and drop the requests of an attacker. This way, they serve
the attacker, equivalent to no. of times, they serve to legitimate
clients. After a certain request count/threshold, they blocked
the attacker for some time. There are some contributions which
propose to provide access to only those to whom they can pro-
vide as per actual resource capability at the server end.

Instead of queuing all the clients, they [40] proposed an ad-
mission control algorithm, where a limited number of clients
are served simultaneously, who have solved the Turing test and
assigned to hidden ports. Once the test is passed by legiti-
mate users, the proposed mechanism tries to limit the number
of clients at any time by using an admission control algorithm.
This is done by providing service to a limited number of clients
on hidden ports using a port key. The server allocates resources
on the basis of priority which is calculated based on the user

behavior. The behavior is basically the web behavior on an e-
commerce site on the basis of multiple parameters.

Most of the admission control methods which implements
restrictive access to stop the DDoS attacks to occur are primar-
ily based on delayed access or reputation based access. These
methods provide a good way to optimize the server capacity by
allowing requests based on the available resources. The “rep-
utation” or “capability” is calculated based on the past access
pattern or the time to solve the crypto puzzles.

On one hand, these input control methods are solely depen-
dent on the server capacity and client capability to compute the
puzzle responses.
At times, this restriction may limit the server to address the
accessibility or usability perspective for fresh clients. As dis-
cussed in Section 5.1, the problems associated with the puzzle
based solutions are also applicable here. Additionally, in case
of sophisticated or stealthy attacks, the malicious attackers may
try to earn the “reputation” before they show their real mali-
cious behavior.

5.4. Resource Limits (P4)

As discussed in Section 3 on attack characterization, it was
visible that the economic bills generated by a DDoS attack can
be enormous. Resource limits can help in preventing these eco-
nomic losses by correct auto-scaling decisions. However, de-
ciding whether the resource surge has come due to the DDoS
attack or due to the real genuine traﬃc, is a very diﬃcult task.
Another way to prevent these resource losses is to put ﬁxed re-
source services or “capped” resource limits on each service in
the cloud. By doing this, we will miss the advantages of impor-
tant features of cloud computing such as on demand resource
allocation.

There are number of discussions and demands by cloud con-
sumers on providing a track of resource utilization in the form
of alerts. Additionally, some of the providers, have started pro-
viding the real-time monitoring services [45]. They have also
started providing resource limits in the form of “Caps” on max-
imum resources a VM would be able to buy and sustain. There
are other solutions such as [51], in authors develop a resource
allocation algorithm where the resources are only increased if
the resource surge is due to the real genuine traﬃc.

It would not help the cloud consumer to stop the DDoS to
occur; however, it can surely limit the bills on the cost of service
downtime (as the VM would reach the resource limit and would
not be able to serve any clients as resource outage will lead to
DDoS) [46].

Resource limits can surely restrict the cost penalty on the
dynamically scaled resourced but they can also limit the usage
of on-demand computing feature of cloud computing.

Attack prevention mechanism discussed above present a va-
riety of methods available for the preventive security. However,
it is important to note that these prevention mechanisms alone
can not help in combating the DDoS attacks in cloud infrastruc-
tures. Another line of support from other mechanisms such as
detection and mitigation mechanisms is needed once the attack

is already present. On the other hand, attack mitigation meth-
ods are indeed important ﬁrst-aid solutions to the overall DDoS
solution framework we discuss in Section 8.2.

6. Attack Detection (D)

Attack detection is achieved in a situation where attack signs
are present on the server in terms of its services and monitored
performance metrics. These attack signs are initial signs, where
the attack has just started to take the shape, or there may be
a situation, where the attack has already deteriorated the per-
formance. These methods may seem to be similar to “attack
prevention” at times, and many of contributions have provided
solutions in the same manner. Various performance metrics,
which are monitored and aﬀected due to an attack range from
large response times and timeouts to higher memory and CPU
usage. We further classify this section into ﬁve subcategories:

1. Anomaly Detection.
2. Source and Spoof Trace.
3. Count Based Filtering.
4. BotCloud Detection.
5. Resource Usage.

For a quick view, the overall theme of each set of the classi-
ﬁed methods, their strengths, challenges, and weaknesses are
listed in Table 4. We also prepare a list of important individual
contributions in Table 5 where we enlist a brief theme of each
solution to show the variety of contributions available in each
subclass.

6.1. Anomaly Detection (D1)

Anomalous patterns are usually identiﬁed from packet traces,
established connections, web access logs or request headers.
The speciﬁc pattern to identify in the log or the trace is decided
by attack traces and other past historic behaviors. Web behav-
ior has been modeled using a large number of characteristics
and metrics working upon those characteristics. Mostly, au-
thors have used web behavior of normal web traﬃc as a bench-
mark pattern. This normal web behavior is collected from the
period when the attack is not present. On the other hand, few
contributions prepare attack behavior proﬁle and than ﬁlter-out
the attack traﬃc by learning based detection. Feature selection,
dataset preparation and testing or proﬁling against these learned
rules are the three important set of operations, involved in these
detection strategies.

Now, we discuss few important strategies related to DDoS at-
tack anomaly detection in cloud computing. Idziorek et al. [52]
worked on web access logs and argued that legitimate web ac-
cess patterns follow “Zipf” distribution and based on the web
access pattern training, they could identify outliers, which do
not follow this distribution in pattern [52]. On the other hand,
authors in [53], used the baseline proﬁling of various IP and
TCP ﬂags which entails the network behavior model. Authors
proposed the detection of ﬂooding in the cloud using the train-
ing of normal and abnormal traﬃc and used the covariance ma-
trix approach to detect the anomaly. Amongst other approaches,

10

Techniques

Strengths

Anomaly De-
tection (D1)

Machine learning and
feature based detection

and
Source
Spoof Trace
(D2)

Identifying the source of
of web requests to stop
spooﬁng

Count Based
Filtering (D3)

Hop count, number of
connections or number
of requests based thresh-
old ﬁltering

and

alarms

Challenges
Feature
identiﬁcation,
testing and minimizing
false
IP
spooﬁng
Filtering at edge routers
and suitability of TTL
based methods
Requires TTL hop data
Het-
of
erogeneous implementa-
tions of hop count. De-
ciding on count thresh-
old is a challenge

real user.

BotCloud De-
tection (D4)

Resource us-
age (D5)

the

Detecting
attack
sources inside the cloud
by monitoring the fea-
tures of VMs and the
network
level/hypervisor
OS
level detection methods
to monitor
abnormal
usage

Identifying the activities
and their thresholds for
various suspicious activ-
ities

Interpreting the high uti-
lization whether it is due
to attack or due to the
real traﬃc

Limitations
Scalability issues and over-
head of training, matching
and statistical analysis of
traﬃc features
Cooperative mechanisms re-
quire network devices and
service support
IP spooﬁng issues may de-
feat the (non-TTL) schemes.
Only successful in case of
two diﬀerent TTLs for same
source IPs are
received.
False alarms. Probing is also
needed.
Very diﬃcult to detect all
kinds of attack ﬂows (in-
cluding zero-day). The de-
the
tection only works at
edge of attack originating
cloud.
Only gives a signal about the
possibility of attack and re-
quires supplementary detec-
tion mechanisms

Contributions
[52][53][54]
[17][55][56]
[57][58][59]
[40][60] [61]
[62][63][64]
[65][66][67]
[68][69][70]

[38][34][35]
[44][42][71]

[72][73][74]
[75][76]

[51][77][72]
[78]

Table 4: DDoS Attack Detection Techniques in Cloud: D1 Pattern Detection

Shamsolmoali et al. [55] proposed statistical ﬁltering based at-
tack detection. Proposed approach calculates divergence be-
tween normal traﬃc and attacker traﬃc on the basis of Jensen-
Shannon Divergence [56]. Initially, they have used the tradi-
tional TTL based diﬀerentiation among the legitimate users and
spoofed attackers. After IP spooﬁng ﬁltering, they have applied
the Jensen-Shannon Divergence to identify the anomalies in the
traﬃc to achieve around 97% accuracy. There are few perfor-
mance issues with TTL based approach. TTL based ﬁltering is
not useful unless we have a large database of actual TTL val-
ues of genuine requests using probing [57]. This has not been
addressed by the work in [55]. In [58], authors derived the web
behavior using IP and TCP header ﬁelds. By this, they could
calculate the conﬁdence value in detection strategy.

The major idea of this work was the claim that IP address and
TTL values are related to multiple past contributions; therefore,
the same can be extended to other ﬁelds in IP and TCP headers
and a score for each incoming packet can be calculated. Jeyan-
thi et al. [59] have proposed an approach, where they proposed
to detect the DDoS attack on the basis of entropy. This is sup-
ported by “Helinger” distance which diﬀerentiated between the
attack and genuine traﬃc distributions. Authors have used traf-
ﬁc rate, entropy and by predicting arrival rates of incoming traf-
ﬁc based on history. Authors in [40] have demonstrated an ap-
plication speciﬁc way of diﬀerentiating web requests based on
their behavior on an e-commerce site. This work has created
two client proﬁles, one for good clients and another one for
bad clients. Based on user walk-through on pages, purchases,
searches these proﬁles are created and priority of customers is

decided. Resource access pattern by clients is the main idea to
detect attackers. In [60], authors created normal web proﬁle,
which include HTTP and XML header features. The number
of elements, content length and depth have been used to create
normal user proﬁles. Outliers are identiﬁed, which deviate from
these proﬁles. Authors in [61] argued that an attacker would not
spend any time on a page but would request them like a ﬂood.
They have gathered TSP behavior of users as well as of bots and
identiﬁed that the attackers TSP is mostly negligible or even if
it is not near zero, it is constant or periodic.

The most important strength of these attack detection tech-
niques lies in the machine learning of the past history of benign
traﬃc or the attack traﬃc. With the advent of the paradigms
such as big data analytics and software deﬁned networks these
detection methods have gained much important in quick attack
detection and monitoring. A detailed survey of detection tech-
niques is presented for traditional infrastructures in [5]. These
techniques are now becoming popular for cloud targeted at-
tacks.

The major challenges for detection techniques lie in the be-
havior identiﬁcation in terms of features and their training. The
most important evaluation criteria for these methods lie in the
false alerts (positive and negatives) they generate during the
testing of the incoming traﬃc. Other important challenge lies in
stopping the IP spooﬁng which can defeat many of the detection
strategies.

6.2. Source/Spoof Trace (D2)

Multiple trace back algorithms have been proposed in the lit-
erature, which identify and stop the spoof attack by tracing the

11

source. Source traceback schemes are employed to stop/detect
the identity spooﬁng techniques. These techniques are impor-
tant as most of the detection/prevention methods model the user
behavior or proﬁle based on some identity which is mostly an
In the attack cases where
IP address in case of web access.
IP spooﬁng is employed, the detection mechanisms can be de-
feated very easily.

n
o
i
t
u
b
i
r
t
n
o
C

n
o
i
t
u
l
o
S

y
r
o
g
e
t
a
c

Major theme of the contribution

(

)
1
D

e
c
a
r
T

f
o
o
p
S
d
n
a
e
c
r
u
o
S

(
n
o
i
t
c
e
t
e
D
y
l
a
m
o
n
A

Source authentication using token at each router
Source tracing based on location parameters

Filtering using SOAP headers
Identiﬁcation of a genuine web session
Proﬁling based on time spent on the pages
Back propagation neural networks tracing
SOA-Based Trace back to reconstruct the path

[52] Anomaly traﬃc detection using Zipf’s law
Co-variance proﬁling of IP/TCP ﬂags[56]
[53]
Filtering based on Jensen-Shannon Divergence
[55]
Co-relation based attack ﬂow analysis
[79]
IP/TCP ﬂags based conﬁdence ﬁltering
[58]
[59]
“Helinger” distance based multi-stage solution
[40] User proﬁling using walk-through on site pages
[60]
[17]
[61]
) [63]
2
D
[65]
[66] OS ﬁngerprinting to stop IP spooﬁng
[68] Multi-stage source checking using text puzzles
[67]
[69]
[62] Deterministic packet marking of ingress routers
[80] Multiple ﬁlters to stop spooﬁng
[57]
[70]
[38] Hop count and request frequency thresholds
TTL matching to detect IP spooﬁng
[34]
Request threshold for a human in unit time
[44]
Threshold on number of connections by a source
[71]
TTL probing to ﬁnd genuine TTLs
[57]
[42]
Request count threshold by each source
[72] Network/VMM checks to ﬁnd attack VMs
CSP driven attack ﬂow check and source trace
[73]
Bot detection in VMs using NetFlow
[74]
[75] Hypervisor led collaborative egress detection
[76] Virtual Machine Introspection (VMI)
[77] VM resource utilization threshold for detection
Resource counters and traﬃc thresholds for VMs
[72]
[81]
Resource usage anomalies and introspection
[51] DDoS Aware auto-scaling to combat EDoS
[78]

TTL probing to ﬁnd genuine TTLs
Statistical ﬁltering based spoof detection

Resource usage of attack target servers

(
n
o
i
t
c
e
t

(
g
n
i
r
e
t

e
g
a
s
U

)
5
D

)
3
D

)
4
D

(

-
l
i

F

d
e
s
a
B

t
n
u
o
C

-
e
D

d
u
o
l
C
t
o
B

e
c
r
u
o
s
e
R

Table 5: DDoS Attack Detection Techniques based on Pattern Detection
Let us have a look at some techniques related to this subclass
of solutions. In [63] authors have done the same for SOAP re-
quests. Authors have used back propagation neural networks to
tackle both the popular variants of the DDoS attack, which are
HTML DoS and XML DoS. Authors in [65] drops all spoofed
packets at edge routers using egress ﬁltering.

12

Authors proposed a method to identify the source of the at-
tack by “Service Oriented Architecture (SOA)” based tech-
nique. They proposed a source trace back method by introduc-
ing an additional server before real web server. This additional
server is known as SBTA (SOA-Based Trace back Approach),
which marks each packet by cloud trace back tag and also re-
constructs the path to know the source. The proposed method
uses a database to store and compare each incoming packet,
and it requires an additional server to mitigate the attack. Os-
anaiye et al.
in [66] have proposed an IP spooﬁng detection
method, which is based on matching OS versions of both at-
tackers and real IP owners. Authors have argued that the OS
ﬁngerprint of the spoofed attacker can be found out by asking
the real OS ﬁngerprint from the owner. Source authentication
approaches have also been used in [67], where a cryptographic
token can be veriﬁed at each router to authenticate the source.
Source checking approach has also been used in [68]. Source
traceback approaches are also dealt by hop count or TTL val-
ues which we discuss in Section 6.3. Other important contri-
butions include tracing sources by location [69] and statistical
ﬁltering [70]. There are major surveys available in this direc-
tion where works related to botnets, their trends, and detection
methods [64].

The source traceback and spoof identiﬁcation methods are
very important for all the detection methods. However, being a
cooperative detection mechanism, these methods require a sup-
port from many other network devices such as edge routers,
and services. Additionally, IP address being a “source pro-
vided address”, it is extremely diﬃcult to design spoof protec-
tion against massive spooﬁng by large scale botnets.

6.3. Count Based Filtering (D3)

This speciﬁc classiﬁcation on “Count Based Filtering” also
ﬁts in few attack prevention mechanisms as well, however,
many a times thresholds are used to detect the initialization of
attack and later can be used to identify the presence of the at-
tack. The parameters on which these count thresholds are ap-
plied are basically network resources such as hop-count, num-
ber of connections or number of requests in a unit time from a
single source.

Authors in [38] proposed the detection scheme, where apart
from other schemes, a hop count ﬁlter has been used to iden-
tify spoofed packets. Similarly, authors in [34] have used TTL
values alone for the purpose of DDoS prevention cum detec-
tion. As per this work, TTL values corresponding to various
IP addresses are stored in white and black lists. If there is a
new request then it is sent to graphical Turing test and on the
basis of veriﬁcation, it is added to the white list or black list.
Those who are in white-list but with a diﬀerent TTL, are also
sent to the Turing test and on success their TTL value is up-
dated. Authors in this paper extended their earlier work of the
EDoS Shield [35] and improved it for the case of IP spooﬁng.
Their solution is based on hop-count diversity, where attacker
packets are claimed to have same hop count, and thus they can
be detected. In this strategy, if a user sends N request in period
P, access to this user is only allowed, if his request count is less
than threshold TH.

Authors in [44] used request count on the basis of human be-
havior and dropped all subsequent requests from the same IP
for a ﬁnite period. Authors in [38] have proposed a method
to mitigate HTML and XML DDoS attacks by multiple level
ﬁltering on the basis of client puzzles, hop count and packet
frequency. Various ﬁlters at server side incur signiﬁcant over-
heads and latency for ordinary users. Similarly, authors in [42],
used the request count method to identify attackers and black-
list them. DDoS Deﬂate [71] is a popular open source DDoS
detection tool which is dependent upon the threshold of number
of connections established by each source.

The major strength of these solutions lie in their easy de-
ployment and support by the available OS level ﬁrewalls such
as iptables and APF. These methods also give administra-
tors a quick control over the situation. However, these methods
may not suite the requirements of all the users as the thresh-
olds for a whole domain behind the NAT may not be similar to
the thresholds required for dependent web-services. Addition-
ally, methods such as TTL/hop-count requires a user database
which has the actual hop-count/TTLs. Other issues arise due to
a variety of heterogeneous implementations of hop-count in dif-
ferent systems. On the other hand, the IP spooﬁng techniques
may defeat the (non-TTL) schemes. Overall, the false positives
or negative are important performance issues related to these
count based ﬁltering approaches.

6.4. BotCloud Detection (D4)

Any cloud DDoS attacker may also use cloud infrastructure
for its own nefarious purpose. Cloud infrastructure can be used
for the purpose of installing botnets. These clouds are known
as BotClouds. This subcategory describes the contributions
which tries to ﬁnd or detect the internal attack VMs in the cloud
network. Most of these BotCloud related solutions are source
based or Cloud Service Provider (CSP) based approaches.

Authors in [72] have presented a cloud level detection
method to identify if there are attacker bots running inside
hosted VMs. This has been achieved by network level and
VMM level checks. Another contribution in this direction ap-
plies Virtual Machine Introspection (VMI) and data mining
techniques to separate the infected VMs from other VMs in
multi-tenant VMs [76]. Authors had prepared a list of typ-
ical actions of malware bots infected VMs and used a clus-
tering algorithm to identify the infected VMs based on the
training. There are other BotCloud related solutions available
in [73] [74] [75]. Authors in [73] provide a solution where the
cloud provider checks the traﬃc ﬂow and perform the anomaly
detection using source traceback techniques at the network. Au-
thors in[74] provide a solution based on SDN approaches using
Bot detection with the help of NetFlow protocol. Hypervisor
based checks are used to detect the vulnerabilities in the guest
VMs in [75] where collaborative egress detection technique is
employed. Advanced methods such as one in [76] propose a
detection using virtual machine introspection (VMI).

The major strength of these methods lie in their deployment
at the CSP end. By this, CSP has a control to monitor at the
network edge for any anomaly in the traﬃc behavior or other
performance counters.

However, these methods are not capable of detecting all kinds
of attack ﬂows such as zero-day or stealthy ﬂows. On the other
hand this kind of detection methods only work at the edge of
attack originating cloud.
In case, the CSP does not provide
support for such detections, these attacks may become massive
utilizing the profound resources of cloud computing.

6.5. Resource Usage (D5)

Utilization of various resource of the cloud or a physical
server by a VM can also provide important information about
the presence of the DDoS attack or an anticipation of the up-
coming DDoS attack. Cloud environments run Infrastructure
as a Service cloud using virtualized servers where hypervisor
can monitor the resource usage of each VM on physical server.
Once these VMs start reaching the decided resource utilization
thresholds, the possibility of an attack can be suspected.

In [77], authors provided solutions on the basis of available
resources with VMs and their upcoming requirements. Simi-
larly, [72] used performance counters and traﬃc to identify re-
source usage of VM and devise possible mitigation of the at-
tack. Resource utilization possesses a very important and in-
direct metric to identify the possibility of an attack. Authors
in [78] used resource limits as the sole method of the DDoS
detection and then proposed mitigation methods. Authors in
the [51] implemented a DDoS aware resource allocation strat-
egy in which the overloaded VMs are not directly ﬂagged for re-
source increase. Instead, authors propose to segregate the traﬃc
and increase the resources only on the basic of the demands of
genuine ﬂagged requests. Authors in [81] have modeled the
resource usage anomalies of VMs using virtual machine in-
trospection to detect the possibility of resource surge due the
DDoS attack.

DDoS attacks being resource intensive attacks provide a in-
direct relationship for the success of these resource usage based
proﬁling and detection methods. Auto-scaling mechanisms are
triggered on the basis of “overload” and “underload” states
of the targeted VMs. This aspect also provide a possible co-
relation between the VM resource usage and a DDoS originated
resource surge.

The limitation of these set of approached lies in interpretation
of the high resource utilization. It is very diﬃcult to conclude
whether the resource surge is due to the attack or due to the
real traﬃc. As the resource surge only gives a alert about the
possible resource surge, we may require other supplementary
detection mechanisms.

After discussing the attack detection solution at length, it is
clear that the traﬃc ﬁltering based on the attack patterns is a
major part of the DDoS attack solutions. Most of the methods
are based on machine learning artifacts and provides a way to
control the input traﬃc. However, the detection methods alone
may not suﬃce for the purpose of integral protection from the
DDoS attacks. The role of attack prevention solutions for the
ﬁrst hand protection and the role of attack mitigation solutions
to ensure the resource availability for eﬀective mitigation, can
not be ignored.

13

Techniques

Resource
Scaling (M1)

Victim Migra-
tion (M2)

OS Resource
Management
(ORM) (M3)

Software
Deﬁned
Networking
(SDN)(M4)

DDoS Mit-
igation
as a Service
(DMaaS)(M5)

Strengths
Provides a quick relief to
resource bottlenecks re-
source bottlenecks
the DDoS
Migrating
victim service to other
servers which helps in
minimizing losses
Minimize the resource
contention formed due
to the attack at the vic-
tim service-end to have
timely attack mitigation

Abstract and timely view
of the network and the
incoming traﬃc using
controllers
Cloud based hybrid mit-
igation using extra re-
sources or remote traﬃc
monitoring and preven-
tion services

Challenges
Correctly
deciding
whether and when extra
resources are required

Migration
candidate
selection and migration
host selection

Better checks needed to
ensure the availability of
contention

SDN may itself become
an easy target of
the
DDoS attacks

Cost overhead issues.
Methods
are mostly
similar to the on-premise
solutions but mitigation
expertise is an advantage

Limitations
False alarms may lead to
EDoS. Co-hosted VMs may
also be aﬀected
Migration costs and over-
heads. Subsequent migra-
tions/swaps in cloud

Quick and dirty checks to
ensure the availability of
It may aﬀect
contention.
the performance of the vic-
tim servers due to contain-
ment
Mostly useful at network
boundaries and ISP level
network control
Solutions may not cater var-
ious kinds of applications
and attacks.
is-
sues may not be visual-
ized by DDoS mitigation-as-
a-service

Local

Contributions

[16][82][78]
[72][51]

[77][72][83]

[84][85]

[86][87][14]
[88][89][87]

[90][91][92]
[46][45]

Table 6: DDoS Attack Mitigation (M) Techniques in Cloud

7. Attack Mitigation (M)

In this section, we have grouped all methods which would
help a victim server to continue serving requests in the pres-
ence of an attack. Downtime is a major business parameter for
websites and an organization may lose a signiﬁcant number of
prospective customers [10]. In this section, we have grouped
methods, which would allow victim server to keep serving re-
quests in the presence of an attack. Mitigation and recovery are
complementary to each other to keep the server alive, which is
under the attack. These methods are used temporarily and once
the attack subside, the server may be brought back to the actual
situation.
Most of mitigation and recovery methods, which are proposed
here are purely related to infrastructure clouds and their solu-
tions are in the direction of mitigating EDoS attacks. We further
classify this section into ﬁve subcategories:

1. Resource Scaling.
2. Victim Migration.
3. OS Resource Management (ORM).
4. Software Deﬁned Networking (SDN).
5. DDoS Mitigation as a Service (DMaaS).

For a quick view, the overall theme of each set of the classi-
ﬁed methods, their strengths, challenges, and weaknesses are
listed in Table 6. We also prepare a list of important individual
contributions in Table 7 where we enlist a brief theme of each
solution to show the variety of contributions available in each
subclass.

7.1. Resource Scaling (M1)

Dynamic auto-scaling of resources is one of the most popular
features of the clouds. It is also treated as one of best mitigation

methods to counter DDoS attack allowing server availability
or continuity with scaled resources. Auto scaling can be done
horizontally, where new instances may be started on the same
or diﬀerent physical server to serve incoming requests till the
victim server is facing the attack. In vertical scaling, resources
like CPU, memory and disk can be scaled in the same VM or
the same logical unit. These extra resources can help the victim
machine to survive the attack and keep running. One of the
major disadvantages of this strategy is that it can become an
advantage for the attacker to increase the attack strength to even
deplete added resources and generating a requirement of more
resources shaping the attack into an EDoS [16].

We now discuss few important contributions related to at-
tack mitigation and recovery using resource scaling. Authors
in [82] proposed a multi-level DDoS detection system for web
services. VM owner level (Tenant level), service Level, appli-
cation level and cloud level detection are placed to have a col-
laborative DDoS detection system. It is one of those solutions
which are utilizing the information from all the stakeholders in
mitigating the DDoS attacks. However, there might be large
overhead and other security concerns due to information ﬂow
among multiple levels.

One of the ﬁrst and most important contributions in this area,
which touches cloud-speciﬁc issues is by Shui Yu et al. [78].
Authors in this paper considered the dynamic resource alloca-
tion feature of the cloud to help the victim server to get addi-
tional resources for DDoS mitigation. In this way, individual
cloud customers are saved from DDoS attacks by dynamic re-
source allocation. Experiments on real website data sets show
that their queuing theory based scheme work to mitigate DDoS
attack. Authors in [72] presented three diﬀerent scenarios to
stop the DDoS attack in the cloud. These three scenarios in-

14

n
o
i
t
u
l
o
S

g
n

i
l
a
c
S

e
c
r
u
o
s
e
R

n
o
i
t
a
r
g
i
M
M
R
O

n
o
i
t
u
b
i
r
t
n
o
C

y
r
o
g
e
t
a
c

(

(

)
1
M

)
2
M

Major theme of the contribution
[82] Multi-level (VM, service, application and cloud)
[78] Dynamic resource scaling for quick detection
Resource scaling in federated clouds
[72]
Scaling to absorb the attack
[47]
Scaling based on capacity planning
[51]
[83]
Scaling over low cost untrusted CDN clouds
[77] Victim VM migration to other physical servers
[93] Migrating proxy entry points at overlay
[72] Victim VM migration to other physical servers
Exploiting VM migrations using DDoS
[94]
Service resizing to reduce the resource contention
) [84]
3
M
Containment to reduce the resource contention
[85]
ISP-level monitoring of traﬃc and routing
) [86]
4
Strict authentication and access control
[87]
M
Re-conﬁgurable network monitoring and control
[88]
SDN based deep packet inspection
[95]
[90] Victim cloud-based network service
[91]
[92] Hybrid (On-premise ﬁrewall plus Cloud ﬁrewall)
Resource caps to limit the attack eﬀects
[46]
Cloud metric monitoring and alarms
[45]

Proof-of-work scheme and ephemeral servers

N
D
S

)
5
M

(

(

(
S
a
a
M
D

Table 7: DDoS Attack Mitigation Techniques in Cloud

clude external attacks to internal servers, internal attacks to in-
ternal servers and internal attacks to external servers. Authors
provided strategies to detect the attack and get recovered using
scaling and migrations in a federated cloud environment. Re-
served resources are kept in [78] to support the server in attack
times. “How much reserved resources should be kept?” is an
important question. The cost of additional and idle resources is
a drawback. It is one of the ﬂexibility which keeps back up and
reserved resources for a rainy day [72]. On the other hand, au-
thors in [51] have provided a resource allocation strategy which
do not scale the resources on DDoS generated resource surges.

Authors in [83] have provided a mechanism which uses low-
cost untrusted cloud servers in the presence of DDoS attacks to
scale services frugally. “CDN On Demand” is an open source
platform developed to support the mechanism [83]. Industry
solutions such as [47] also advocate for quick resource scaling
for quick attack absorption.

The resource scaling is an important aspect of cloud com-
puting which is also useful in quick attack mitigation while
maintaining the service availability. The resource scaling is a
process which is useful for attacker to recover by expanding the
VM resources or VM instances.

However, the resource scaling may also become against the
overall idea of cost-savings using the cloud hosting. In case the
attacks are stealthy and remains undetected, than the resource
scaling may increase the attack costs multi-fold. A detailed dis-
cussion on the role of resource scaling and the mitigation costs
in [96].

7.2. Victim Migration (M2)

VM migration has changed the way the entire running server
is shifted to another physical server without noticeable down-
time. Migration can be used to shift the victim server to a diﬀer-
ent physical server, which is isolated from the attack and once
the DDoS is detected and mitigated, the server can again be
shifted back to the actual place.

We discuss few important contributions using victim migra-
tion to mitigate the DDoS attack. Authors in [77] proposed a
similar strategy by keeping some reserved resources on a server.
While the attack is detected, they migrate the victim to those re-
served resources and bring it back when attack ceases. Down-
time to legitimate customers is one issue which is very impor-
tant while migration is chosen as a mitigation method. Addi-
tionally, if the attack continues for longer duration or repeated,
the cost considerations will be high. Authors in [72] also used
a similar approach. Authors in [77] have proposed a remedial
method for the server aﬀected by DDoS to keep it in the run-
ning or serving state. DDoS attack has been detected at the
level of Virtual Machine Monitor (VMM) instead of any count
based or packet ﬁltering. VMM is detecting the possibility of
the DDoS attack by continuously monitoring resource utiliza-
tion levels. Once the resource utilization levels reach a certain
threshold, VMM ﬂags a DDoS attack. On signaling, VMM mi-
grates or duplicates the running VM as well the application to a
separate isolated environment on the same physical server. This
isolated environment is created with the help of reserving some
additional resources for backup, where the “victim” is shifted
in case of the DDoS attack. Once the attack gets over, the iso-
lated environment again shifts the VM back to its real place. On
the other hand, there are characterizations which shows the ex-
ploitation of VM migrations using DDoS attacks [94]. Authors
in [21] have shown in their characterization that the DDoS at-
tacks may lead to migrations which may even spread the collat-
eral damages from one physical server to other physical servers.
Other solutions such as [93] show a diﬀerent ﬂavor migration
using migrating proxy entry points at overlay networks at the
victim server-end.

15

Victim migration to backup resource provides a way to con-
trol the attack eﬀects and employ the attack mitigation. Also
it may help in scaling the services using migrating to a large
sized candidate/host servers where the migratee server can use
the additional resources to detect and mitigate the attack.

There are few issues related to the sustainability of these
schemes. In particular, wastage of additional resources, which
has to be available all the time is a major issue. Detection of the
DDoS just by keeping a watch over resource utilization might
not be a good idea, as there might be higher utilization because
of real traﬃc during ﬂash events or heavy computation needs.
In fact, this behavior might lead to an unnecessary duplication
to an isolated environment. Even the overhead of duplicating
the system when the attack is evident might not be a wise step
to overcome the security of the server and application. The
contribution in [77] has overlooked one very important aspect
about DDoS attack which is attack duration. If the attack con-
tinues, how would server serve its legitimate consumers who
are trying to access the service at that point in time? If it does
not serve them then “for how long, the service will be down?”
is an important factor. Additionally, if it serves them then there
is a large overhead of transferring states and keeping data and
sessions up to date.

7.3. OS Level Resource Management (M3)

There are few recent contributions in the DDoS attack solu-
tion space for cloud computing which deals with resource man-
agement at the level of VM operating systems. These OS level
resource management methods argues that DDoS attacks being
the resource intensive attacks may aﬀect the overall mitigation
methods running inside the victim VMs. By minimizing the
contention at the level of the operating systems, the mitigation
and recovery can be expedited.

Authors in [84] show a service resizing based methods where
once the attack is detected, the victim service is aﬃned to the
minimum processing units (CPUs) using OS level controls. Au-
thors have shown that a DDoS attack may become an “extreme
DDoS” attack if the resource contention becomes severe. This
contention may even delay the overall mitigation process. Au-
thor extend this service resizing using victim resource contain-
ment in [85] where using OS control groups are used to contain
or isolate the victim service. Authors have also shown collat-
eral eﬀects on other critical service co-hosted with the victim
service on the same operating system.

These local resource management methods are shown to
minimize the resource contention formed due to the attack at
the victim service-end to have timely attack mitigation. Au-
thors have shown important metrics related to attack mitigation
in terms of attack detection time, mitigation time and the report-
ing time with some additional features such as attack cooling
down period which they optimize using TCP tuning.

The major limitation of these approaches lies in their quick
and dirty checks to ensure the availability of resource con-
tention. These methods may also aﬀect the performance of the
victim servers due to the resource containment with an addi-
tional cost of the resources.

7.4. Software Deﬁned Networking (M4)

Software Deﬁned Networking (SDN) is an emerging re-
conﬁgurable network paradigm which may change the whole
DDoS mitigation space. SDN in its core separates data and
control planes of switching to support the network reconﬁgura-
bility on the ﬂy.

There are few initial and ongoing works related to SDN as-
sisted DDoS mitigation mechanisms. Authors in [86] have pro-
posed a SDN-based solution in which ISP-level monitoring of
traﬃc and routing of malicious traﬃc is done to specially de-
signed secure switches. In this work, the victim is required to
request ISP for DDoS mitigation. ISP having an abstract view
of incoming traﬃc applies the traﬃc labeling using OpenFlow
switches. The suspicious traﬃc is then redirected to security
middle-boxes which apply access policies on the traﬃc. Au-
thors have left the detection and mitigation part on the customer
side. A similar proposal by authors in [87], suggested a proto-
type implementation of SDN-based detection mechanism. The
major idea of this work lies in the strict access control policies
for the incoming traﬃc which requires strict authentication for
each incoming request. Advanced deep packet inspection based
approaches using SDN are discussed in [95]. A detailed tutorial
and guideline of SDN-based solutions are given in [14].

SDN as a paradigm has immense possibilities of support for
the attack mitigation for massive as well low-rate DDoS attacks
due to its reconﬁgurability and quick networks view and moni-
toring.

Mitigation Solutions utilizing SDN capabilities are still
evolving and may become very helpful due to their important
features. However, studies such as [89] show that even the SDN
infrastructure itself can become a victim of DDoS attacks.

7.5. DDoS Mitigation as a Service (DMaaS) (M5)

There are multiple cloud based service/third party ser-
vices which are are capable of providing the DDoS protec-
tion [24] [22] [25]. Mostly, DDoS protection is done on a server
or an intermediate node forwarding packets to the server. There
are solutions which are hosted in the cloud and provide DDoS
mitigation as a service [90] [91]. Multiple providers in the mar-
ket oﬀer this facility. However, all these mitigation methods are
threshold/count based or human intervention based.

On the other hand, there are not many speciﬁc products avail-
able to mitigate DDoS targeting a cloud. Authors in [92] pro-
posed a DDoS mitigation service. This service is intended
to help the physical on-premise ﬁrewall to do the mitigation
quickly. The proposed solution is termed as a hybrid ﬁrewall,
which uses both physical ﬁrewall and virtual ﬁrewall (placed
in the cloud). Amazon has started providing resource limits on
EC2 instances to provide an initial solution. There were multi-
ple requests from consumers to cloud providers about keeping
cap or limit on maximum allowed resources and subsequently
there were additions from cloud providers related to resource
consumption limit alerts to customers [46]. Additionally, Ama-
zon has created a service, cloudWatch [45], to provide real-time
information about various metrics towards a service hosted in
Amazon cloud so that necessary steps can be taken up.

16

Third party mitigation services or DDoS mitigation as a Ser-
vice may become very helpful for attack mitigation and recov-
ery using a on-premise tools and/or cloud based solution. The
attack mitigation history and expertise in handling various at-
tacks may become helpful for enterprises seeking specialized
help. Also the cloud based service may also utilize the exten-
sive resource support available in the cloud.

The major limitation of these DMaaS approaches include re-
mote mitigation which may not fasten the mitigation process.
Additionally, victim service owners may not want to share the
control with the third parties due to the privacy issues of their
traﬃc and the business logic. Other important aspects include
the cost of the solutions and the sustainability requirements of
the victim enterprises.
In addition to all the above ﬁve cat-
egories of mitigation methods, shutdown is a typical trivial
method to stop the DDoS attack on a server. But this method
does not provide any solution to downtime of the service which
is non-negotiable.
In some approaches, the victim server is
started at another place as a new instance and present instance
is shut down. This helps in starting a synced clone at another
place. Though there are high chances that the attacker will also
attack the new server. A similar idea has been proposed in [37]
where attacked proxy servers are shutdown and the traﬃc is
redirected to new proxy servers.

Attack mitigation methods narrated above provide a detailed
overview of various attack mitigation and recovery solutions
available in cloud computing space. The mitigation methods
are usually a supportive layer of protection for the attack pre-
vention and detection solutions.
As discussed above, for the case of cloud computing, the miti-
gation methods play very important role due to their applicabil-
ity to resource management during the attack.

8. Discussion and Future Directions

There is a large volume of work which has been referred
while preparing this survey. With this rigorous survey, it is clear
that most of the works, which have emerged in this domain are
concentrating on the following ﬁve aspects:

1. Characterization or Impact study.
2. Prevention using Turing Tests.
3. Threshold or pattern based ﬁltering.
4. Support to stop IP spooﬁng.
5. Resource scaling.

Most of the solutions proposed so far are using one or a com-
bination of the above approaches. There are only a few solu-
tions which are including the auto scaling, multi-tenancy and
utility model into account. The cloud computing infrastructure
may be used to build eﬀective mitigation solutions which en-
sure the quick attack mitigation and timely recovery to ensure
eﬀective service availability.

8.1. Solution Considerations

In order to oﬀer an eﬀective solution to DDoS in the cloud,
the following features require special treatment. Here, each fea-
ture has been discussed with an intention to provide an aid to
the ideal solution.

8.1.1. Auto-scaling

Auto-scaling in the cloud is usually triggered by monitored
metrics of a VM or an application running inside a VM. These
are resource usage metrics like CPU, memory and bandwidth
and other counters like response time, query processing time
etc. Triggering the auto-scaling would either result in an in-
crease or decrease in allocated resources. Controlling Auto-
scaling or false triggering of auto-scaling requires speciﬁc
checks which can verify the real usage. These checks can be
conducted at VM level, hypervisor level or even at abstract
cloud level [51].

• Vertical Scaling: This feature deals with the scaling on a
physical server where multiple VMs are running with co-
hosted isolations. Vertical scaling would deal with adding
or removing resources on these VMs. Total resources
which are available on the physical server are ﬁxed but
each VM may have a diﬀerent amount of resources at dif-
ferent times. This really depends on the resource alloca-
tion policy and the SLA. Any DDoS aﬀected VM would
continuously request for more and more resources and
available idle resources (with the Cloud Service Provider)
should fulﬁll these requests. This decision is critical as it
would also decide the health of co-hosted VMs and cost
considerations of newly added resources [21].

• Horizontal Scaling: This scheme allows adding new in-
stances of the same VM at other physical servers. These
instances are created to share the load and maintain the
quality of web services. An ideal composite scaling strat-
egy would ﬁrst rely on vertical scaling followed by hori-
zontal scaling. The decision-making process to start more
instances on more servers should look for a true need and
cost considerations. Another important point in horizon-
tal scaling is limiting the maximum number of instances
of an application. This can be decided by the cloud con-
sumer but a restriction on it may lead to losing business.

8.1.2. Multi-tenancy

Multi-tenancy leads to proper hardware utilization of high-
capacity servers which would have been underutilized if not
implemented as multi-tenant environments. Vertical scaling
would have much ﬂexibility in case few VMs are running on a
single machine. On the other hand, cloud providers would have
ROI (Return on Investment) considerations and would want to
host more and more VMs. Other than this, performance isola-
tion and performance interference aspects should also be looked
carefully while designing capacity of these servers. DDoS de-
fense mechanism and its design should reﬂect protecting multi-
tenant environments.

8.1.3. Pay-as-you-go model

Pay-as-you-go model is advantageous for both consumers
and providers. Literature has mostly counted pay-as-you-go
models as an advantage for consumers. But this becomes ad-
vantageous for a cloud provider when VMs it has hosted in
its cloud requires more and more resources on a regular ba-
In case, this additional requirement is fulﬁlled than the
sis.

17

consumer needs to pay for additional resources and provider
gets beneﬁted. Almost all solutions should keep the accounting
and billing model in the perspective while designing cost-aware
DDoS defense solutions.

8.1.4. Migration

As described in the Section 7, VM migration is a very impor-
tant method to minimize eﬀects of the DDoS in a virtualized
cloud. Migrations incur a cost in terms of downtime, conﬁg-
uration changes, and bandwidth usage. If the application does
not have the capability to start more instances to share the load,
migration is the only way to minimize the downtime and denial
of service. As horizontal scaling cannot be done in such cases,
the duration for which DDoS attacks lasts would also play a ma-
jor role. Large attack duration may lead to multiple subsequent
migrations here and there [21], and thus a large number of side-
eﬀects to the cloud and other VMs. DDoS defense mechanism
should be able to minimize the number of migrations during the
attack period by closely working with horizontal scaling.

8.1.5. Solution Costs

The most important motivation for the enterprises to shift
their service to cloud infrastructure is the cost eﬀectiveness.
However, we have seen in the detailed attack eﬀects (Figure 2),
that the DDoS attack losses may become multi-fold in the
cloud infrastructure as compare to traditional on-premise in-
frastructure. The major portion of the cloud users include small
and medium enterprises which necessitates the sustainability or
budget factor as important aspect while designing the solutions.
Authors in [96] have detailed the cost considerations for DDoS
attack solutions.

8.2. Building an eﬀective solution

In this section, we are compiling details related to eﬀective
solutions towards DDoS in the cloud. Even though these solu-
tions only outline the solution space and related issues but they
also give a systematic design of an ideal solution. The model
shown in Figure 5 illustrates levels of solutions, where the de-
fense mechanism deployed. We show ﬁve defense levels in this
ﬁgure where we also show the important services/information
or monitored metrics provided at each level. The information
ﬂow among these ﬁve levels is a tricky part because of the secu-
rity questions related to the business logic and access control.
This is a design question and can be solved by allowing only
anonymized monitoring data to be transferred among these ﬁve
levels. In Figure 5, we have also pointed out speciﬁc solution
design features and aspects, which can be dealt at each level.

8.2.1. Application level defense

Applications are the front ends where attackers send requests.
These applications are mostly web services which send web
pages on the basis of user’s HTTP requests. TCP SYN and
ICMP ﬂoods are also sent to applications responding to them.
The defense mechanism should lookout for an unexpected in-
crease in a number of requests from a set of source IP addresses.
Identifying these source IP addresses is the root solution to the

DDoS detection problem. Most of the solutions available in the
literature try to defend at application level[32][35]. These so-
lutions include Turing tests, request frequency and hop count
based ﬁltering. For eﬃciency, the following three design as-
pects are considered.

• Mitigation Eﬀorts: The eﬀort required to identify and pre-
vent an attacker is usually more than the eﬀort required
to serve the attacker as a normal user. Many times the
complex defense schemes checks for multiple ﬁlters and
each request has to go through these ﬁlters. A lengthy
and complex mechanism may incur large computation and
storage costs. Defense mechanism may get into an “In-
direct EDoS” due to heavy ﬁltering eﬀorts and result into
puzzle accumulation attacks [97].

• Accessibility: Accessibility of a normal user should not
be compromised. Many times usability of a web service is
aﬀected because of special mechanisms of tests and other
defense mechanisms. Usability aspects are very important
and surveys have shown that even a delay of 1 second in
page loading time may aﬀect conversion rate [20]. This
may lead to higher response times and usability aspects for
many users and especially for elderly or diﬀerently abled
persons.

• Request rates: Attacks may not always be high rate obvi-
ous ﬂooding attacks. Low rate but continuous attacks may
also aﬀect a server’s economic aspects [17]. In [17], au-
thors have shown that sending one request per minute for
a month also incurs a cost.

Other important metrics and solution requirements for applica-
tion level defense is already discussed in Section 7. Most of the
solutions related to attack detection (Section 6) and attack miti-
gation (Section 7) solutions are applicable to the VM/OS level,
Hypervisor level and the Cloud level defense.

8.2.2. VM/OS level defense

VM running on a hypervisor runs a complete operating sys-
tem on top of them. An eye over the resource usage of speciﬁc
processes, their generation and object fetch cycles may provide
a clue about the attack monitoring. Many consequences of the
EDoS occur due to the decisions taken at this level. At present,
there are very few solutions in this direction [82].
In addi-
tion to all these features, performance isolation is one of the
most important assurance which is required at this level [21].
Local resource management at the level of the victim operat-
ing systems can be very eﬀective in managing the DDoS at-
tacks [84][85]. These solutions advocates of minimizing the
resource contention created due to the DDoS attacks which
may help in minimizing the overall downtime (detailed in Sec-
tion 7.3).

8.2.3. Hypervisor level defense

A hypervisor is the control and management layer (a bare
metal hypervisor like XenServer) which handles the most im-
portant task of “Vertical Scaling”. Scheduling VMs, managing

18

Application
 Defense

Application Level
      Defense

Efforts

Accessibility

Attack 
Frequency

VM/ OS Level 
    Defense

Scheduling
Needs

Process
Usage

Traffic 
Monitoring

VM

System
Defense

Hypervisor/Physical 
Server Level Defense

Profiling

Resource 
Usage

Isolation

Cloud Level Defense

Migrations

Traffic 
Monitoring

Auto 
Scaling

External
Defense

ISP Level Defense

Attack 
Directions

Backup
Lines

Attack 
Origins

Figure 5: Solution Hierarchy with Three Solution Levels

their memory and storage are some of the most important areas
where an eﬀective monitoring mechanism could be employed.
Additionally, this level can be controlled by the “Cloud” level
which can send/receive important alerts and take appropriate
decisions. There are some mitigation solutions which have par-
tially used this level for defense [82][72].

8.2.4. Cloud level defense

Cloud level defense may want to look at the amount of traf-
ﬁc coming-in and going-out to have a top level abstract idea
of the attack. At this level, any anomaly in the normal behav-
ior can be detected. Additionally, decisions regarding “Hori-
zontal Scaling” are also taken at this level which take migra-
tions and cost into considerations. A solution which involves
communication between hypervisor and cloud manager would
be a good design to deal with the defense mechanisms. Few
novel solutions, which are based on cloud level of defense
are [41][78][82][72][92]. Network level defense capabilities
provided by SDN infrastructures can also become very helpful
at this level to gain the quick control of the network (detailed in
Section 7.4).

8.2.5. ISP level defense

Defense at the ISP level [98] can be of immediate help for
DDoS attacks originating from speciﬁc networks. Projects like
Digital Attack Map [99] may be used as a handy reference here.
Even a choked line by a DDoS can be replaced by an ISP by an-
other backup line for recovery from the attack. Both cloud and
ISP level should keep a close watch over the incoming/outgoing
traﬃc generated to limit them by some mechanisms. DDoS
target networks, as well as DDoS originating networks, may
be identiﬁed by the ISP collaborations. Authors in [100] have
proposed a method which works on ﬁltering at edge routers of
the network. Authors have proposed three mechanisms to pro-
vide ISP supported DDoS defense mechanisms. Authors have
shown the eﬀectiveness of the mechanism through simulations.

Authors argued that the perimeter based mitigation method can
sustain the defense against attacks even if 40% of the customer
networks are “attacker” networks. Another important work in
this direction is proposed by [101]. The major idea of this
work is to look for abrupt traﬃc changes across networks us-
ing attack-transit routers at ISP networks. These changes are
modeled and detected using distributed change-point detection
mechanism utilizing special constructs known as change ag-
gregation trees (CAT). Authors have also given a trust policy
among networks to cure these attacks collaboratively.
In Fig-
ure 5, we show three defense abstractions which are formed
using the ﬁve defense levels discussed above.

1. Application Defense which is formed using attack preven-

tion mechanisms.

2. System Defense which is formed by three defense levels

(VM/OS, hypervisor and cloud).

3. External Defense which is formed using ISP level and

third party defense.

Considering above facts, we provide following major solution
designs to DDoS attacks in cloud computing.

1. Application Defense : This is a design which considers
defense at application level only. This level of defense is
the most used and helps in the multi-tenant environment
where each hosted VM should be isolated because of mul-
tiple virtualization and data security threats. Most solu-
tions in the literature follow this design but it is also clear
that this design alone is not suitable to take care of aspects
of cloud.

2. Application Defense + System Defense : If this design
can be implemented with ease than it can be proven as one
of the eﬀective solutions as the defense mechanism would
take advantage of the information from multiple sub-levels
in “System Defense”. The information gathered and sup-
plied by the Level “Application Defense” would be im-
portant in taking pro-active decisions at level “System De-
fense”.

19

3. System Defense/System Defense + External Defense :
Both of these solutions would work at the system level to
defend the DDoS attack. The diﬀerence is that the later
will use the ISP support. “System Defense” alone would
be eﬀective, however, identifying the “True positives” and
“False Negatives” is the most important concern here. As
without actual veriﬁcation of attack traﬃc from “Applica-
tion Defense’ level, this defense would lack eﬀectiveness.
4. Application Defense + System Defense + External De-
fense : This is a complete design with multi-level support
and information or alert ﬂow. After solving the data secu-
rity and business logic theft issues among levels, it would
be an ideal design solution for an Infrastructure cloud.

We have shown various performance and evaluation metrics
related to the DDoS attack solutions in Table 2. All those met-
rics are applicable here and may be used for creating eﬀective
solutions as per design abstractions discussed above.

9. Summary and Conclusions

This work provides a comprehensive and detailed survey
about the DDoS attacks and defense mechanisms eventually
available in the cloud computing environment. We have shown
through the discussion that EDoS attack is a primary form of
DDoS attack in the cloud. DDoS attacks have important charac-
teristics which play an important role while considering utility
computing models. This paper introduces the cloud comput-
ing features which are critical in order to understand the DDoS
attack and its impact.

We have also presented attack statistics, its impact, and char-
acterization by various contributors. We propose a novel com-
prehensive taxonomy of DDoS attack defense solutions in cloud
computing. We believe that this survey would help to provide
a directional guidance towards requirements of DDoS defense
mechanisms and a guideline towards a uniﬁed and eﬀective so-
lution. There are a large number of solutions which have tar-
geted the DDoS attack from one of the three solution categories
of attack prevention, detection, and mitigation. Among these
solutions, there are few contributions which are targeting at
cloud-speciﬁc features like resource allocation, on-demand re-
sources, botcloud detection, and network reconﬁguration using
SDNs. We also provide a comprehensive list of performance
metrics of these solution classes for their evaluation and com-
parison. We believe that this novel attempt of presenting the
complete set of evaluation metrics for a variety of DDoS solu-
tions may help in orchestrating the benchmarking of upcoming
solutions.

At the end, we have provided a detailed guideline for eﬀec-
tive solution design. This eﬀective solution guideline provides a
complete view of solution design space and parameters to help
future defense mechanisms. This survey may play an important
role in providing the basis for the innovative and eﬀective so-
lutions to prevent and deter DDoS attacks in cloud computing.
Characterization at the level of a cloud as a whole and mul-
tiple clouds would really help in understanding the impact of

this attack at a larger level. As discussed in the survey, multi-
level solutions speciﬁcally designed for cloud and its features
would surely perform better as compared to traditional DDoS
solutions. Cost and attack aware resource allocation algorithms
in the cloud would help in mitigating the attack. Finally, the
multi-layer solution guideline based solutions can be tested to
have their eﬀective evaluation in cloud infrastructure.

Acknowledgments
Gaurav Somani is supported by a Teacher Fellowship under
Faculty Development Program funded by University Grants
This work is
Commission under XII Plan (2012-2017).
also supported by SAFAL (Security Analysis Framework for
Android Platform) project funded by Department of Elec-
tronics and Information Technology, Government of India.
Mauro Conti is supported by a Marie Curie Fellowship funded
by the European Commission (agreement PCIG11-GA-2012-
321980). This work is also partially supported by the EU
TagItSmart! Project (agreement H2020-ICT30-2015-688061),
the EU-India REACH Project (agreement ICI+/2014/342-
896), the Italian MIUR-PRIN TENACE Project (agreement
20103P34XC), and by the Project Tackling Mobile Mal-
ware with Innovative Machine Learning Techniques funded by
the University of Padua. Rajkumar Buyya is supported by
Melbourne-Chindia Cloud Computing (MC3) Research Net-
work and the Australian Research Council via Future Fellow-
ship program.

References

[1] B. R. Kandukuri, V. R. Paturi, A. Rakshit, Cloud Security Issues, in:
Services Computing, 2009. SCC ’09. IEEE International Conference on,
2009, pp. 517–520. doi:10.1109/SCC.2009.84.

[2] L. M. Kaufman, Can public-cloud security meet its unique challenges?,

IEEE Security & Privacy 4 (8) (2010) 55–57.

[3] L. M. Kaufman, Data Security in the World of Cloud Computing, IEEE
Security & Privacy 7 (4) (2009) 61–64. doi:10.1109/MSP.2009.87.
[4] D. Zissis, D. Lekkas, Addressing Cloud Computing Security Is-
sues, Future Generation Computer Systems 28 (3) (2012) 583 – 592.
doi:http://dx.doi.org/10.1016/j.future.2010.12.006.

[5] J. Mirkovic, P. Reiher, A Taxonomy of DDoS Attack and DDoS Defense
Mechanisms, SIGCOMM Comput. Commun. Rev. 34 (2) (2004) 39–53.
doi:10.1145/997150.997156.

[6] S. Mansﬁeld-Devine, The growth and evolution of DDoS, Network Se-

curity 2015 (10) (2015) 13–20.

[7] Kaspersky Labs, Global IT Security Risks Survey 2014 - Distributed De-
nial of Service (DDoS) Attacks, http://media.kaspersky.com/en/
B2B-International-2014-Survey-DDoS-Summary-Report.pdf
(2014).

[8] P. Nelson, Cybercriminals Moving into Cloud Big Time, Report Says,
http://www.networkworld.com/article/2900125/malware-
cybercrime/criminals-/moving-into-cloud-big-time-
says-report.html (2015).

[9] Tara Seals, Q1 2015 DDoS Attacks Spike, Targeting Cloud,
http://www.infosecurity-magazine.com/news/q1-2015-
ddos-attacks-spike/ (2015).

[10] SPAMﬁghter News, Survey - With DDoS Attacks Companies Lose
http://www.spamfighter.com/News-

around Euro
19554-Survey-With-DDoS-/Attacks-Companies-Lose-
around-100kHr.htm (2015).

100k/Hr,

[11] R. Cohen, Cloud Attack: Economic Denial of Sustainability (EDoS),
http://www.elasticvapor.com/2009/01/cloud-attack-
economic-denial-of.html (2009).

20

[12] S. Yu, Distributed Denial of Service Attack and Defense, Springer Briefs

in Computer Science, Springer, 2014.

[13] T. Peng, C. Leckie, K. Ramamohanarao, Survey of Network-based De-
fense Mechanisms Countering the DoS and DDoS Problems, ACM
Comput. Surv. 39 (1). doi:10.1145/1216370.1216373.

[14] Q. Yan, R. Yu, Q. Gong, J. Li, Software-Deﬁned Networking (SDN)
and Distributed Denial of Service (DDoS) Attacks in Cloud Com-
puting Environments: A Survey, Some Research Issues, and Chal-
lenges, Communications Surveys Tutorials, IEEE PP (99) (2015) 1–1.
doi:10.1109/COMST.2015.2487361.

[15] O. Osanaiye, K.-K. R. Choo, M. Dlodlo, Distributed denial of service
(DDoS) resilience in cloud: Review and conceptual cloud DDoS mit-
igation framework, Journal of Network and Computer Applications 67
(2016) 147 – 165. doi:http://dx.doi.org/10.1016/j.jnca.2016.01.001.
URL http://www.sciencedirect.com/science/article/pii/
S1084804516000023

[16] M. Stillwell, D. Schanzenbach, F. Vivien, H. Casanova, Resource Allo-
cation Algorithms for Virtualized Service Hosting Platforms, Journal of
Parallel and distributed Computing 70 (9) (2010) 962–974.

[17] J. Idziorek, M. Tannian, Exploiting Cloud Utility Models for Proﬁt and
Ruin, in: Cloud Computing (CLOUD), 2011 IEEE International Con-
ference on, IEEE, 2011, pp. 33–40.

[18] J. J. Santanna, R. van Rijswijk-Deij, R. Hofstede, A. Sperotto, M. Wier-
bosch, L. Zambenedetti Granville, A. Pras, Bootersan analysis of ddos-
as-a-service attacks, in: Integrated Network Management (IM), 2015
IFIP/IEEE International Symposium on, IEEE, 2015, pp. 243–251.
[19] A. Beloglazov, R. Buyya, Optimal online deterministic algorithms and
adaptive heuristics for energy and performance eﬃcient dynamic con-
solidation of virtual machines in cloud data centers, Concurrency and
Computation: Practice and Experience 24 (13) (2012) 1397–1420.
[20] TagMan, Just One Second Delay In Page-Load Can Cause 7%
Loss In Customer Conversions, http://www.tagman.com/mdp-
blog/2012/03/just-one-second-delay-in-page-load-can-
cause-7-loss-in-customer-conversions/ (2013).

[21] G. Somani, M. S. Gaur, D. Sanghi, M. Conti, DDoS attacks in Cloud
Computing: Collateral Damage to Non-targets, Computer Networks
109 (2) (2016) 157–171.

[22] Akamai Technologies, Akamai’s State of the Internet Q4 2013 Execu-
tive Summary, Volume 6, Number 4, http://www.akamai.com/dl/
akamai/akamai-soti-q413-exec-summary.pdf (2013).

[23] Neustar News, DDoS Attacks and Impact Report Finds Unpre-
http://www.neustar.biz/about-

dictable DDoS Landscape,
us/news-room/press-releases/2014/neustar-2014-ddos-
attacks-and-impact-report-finds-unpredictable-ddos-
/landscape#.U33B_nbzdsV (2014).

[24] P. Technologies, http://www.prolexic.com/ (2014).
[25] Arbor Networks, Understanding the nature of DDoS attacks, http:

//www.arbornetworks.com/asert/2012/09/understanding-
the-nature-of-ddos-attacks/ (2014).

[26] L. Munson, Greatﬁre.org faces daily $30,000 bill

from DDoS
https://nakedsecurity.sophos.com/2015/03/20/

attack,
greatfire-org-faces-daily-/30000-bill-from-ddos-
attack/ (2015).

[27] Arbor Networks, Worldwide Infrastructure Security Report Volume XI.

(2015).

[28] ReviewMyLife.co.uk, Amazon CloudFront and S3 maximum cost,

http://www.reviewmylife.co.uk/blog/2011/05/19/amazon-
cloudfront-and-s3-maximum-cost/ (2011).

[29] S. VivinSandar, S. Shenai, Economic Denial of Sustainability (EDoS) in
Cloud Services Using HTTP and XML Based DDoS Attacks, Interna-
tional Journal of Computer Applications 41 (20) (2012) 11–16.

[30] N. Vlajic, A. Slopek, Web Bugs in the Cloud: Feasibility Study of a New
Form of EDoS Attack, in: Globecom Workshops (GC Wkshps), 2014,
IEEE, 2014, pp. 64–69.

[31] G. Somani, M. S. Gaur, D. Sanghi, DDoS Protection and Security Assur-
ance in Cloud, in: Guide to Security Assurance for Cloud Computing,
Springer, 2015, pp. 171–191.

[32] S. H. Khor, A. Nakao, sPoW: On-demand Cloud-based EDDoS Mitiga-
tion Mechanism, in: HotDep (Fifth Workshop on Hot Topics in System
Dependability), 2009.

[33] M. N. Kumar, P. Sujatha, V. Kalva, R. Nagori, A. K. Katuko-

21

jwala, M. Kumar, Mitigating Economic Denial of Sustainability
(EDoS) in Cloud Computing Using In-cloud Scrubber Service,
in:
Proceedings of the 2012 Fourth International Conference on Com-
putational
Intelligence and Communication Networks, CICN ’12,
IEEE Computer Society, Washington, DC, USA, 2012, pp. 535–539.
doi:10.1109/CICN.2012.149.

[34] F. Al-Haidari, M. H. Sqalli, K. Salah, Enhanced EDoS-Shield for Miti-
gating EDoS Attacks Originating from Spoofed IP Addresses, in: 2012
IEEE 11th International Conference on Trust, Security and Privacy in
Computing and Communications, IEEE, 2012, pp. 1167–1174.

[35] M. H. Sqalli, F. Al-Haidari, K. Salah, EDoS-Shield - A Two-Steps Miti-
gation Technique against EDoS Attacks in Cloud Computing, in: Utility
and cloud computing (UCC), 2011 Fourth IEEE International Confer-
ence on, IEEE, 2011, pp. 49–56.

[36] W. Alosaimi, K. Al-Begain, A New Method to Mitigate the Impacts
of the Economical Denial of Sustainability Attacks Against the Cloud,
in: Proceedings of the 14th Annual Post Graduates Symposium on
the convergence of Telecommunication, Networking and Broadcasting
(PGNet), 2013, pp. 116–121.

[37] H. Wang, Q. Jia, D. Fleck, W. Powell, F. Li, A. Stavrou, A Moving Target
DDoS Defense Mechanism, Computer Communications 46 (2014) 10–
21.

[38] T. Karnwal, T. Sivakumar, G. Aghila, A Comber Approach to Protect
Cloud Computing Against XML DDoS and HTTP DDoS Attack, in:
Electrical, Electronics and Computer Science (SCEECS), 2012 IEEE
Students’ Conference on, IEEE, 2012, pp. 1–5.

[39] T. Anderson, T. Roscoe, D. Wetherall, Preventing Internet Denial-of-
Service with Capabilities, ACM SIGCOMM Computer Communication
Review 34 (1) (2004) 39–44.

[40] M. Masood, Z. Anwar, S. A. Raza, M. A. Hur, EDoS Armor: A Cost
Eﬀective Economic Denial of Sustainability Attack Mitigation Frame-
work for E-commerce Applications in Cloud Environments, in: Multi
Topic Conference (INMIC), 2013 16th International, 2013, pp. 37–42.
doi:10.1109/INMIC.2013.6731321.

[41] Q. Jia, H. Wang, D. Fleck, F. Li, A. Stavrou, W. Powell, Catch Me If
You Can: A Cloud-Enabled DDoS Defense, in: Dependable Systems
and Networks (DSN), 2014 44th Annual IEEE/IFIP International Con-
ference on, IEEE, 2014, pp. 264–275.

[42] N. Jeyanthi, P. Mogankumar, A Virtual Firewall Mechanism Using
Army Nodes to Protect Cloud Infrastructure from DDoS Attacks, Cy-
bernetics and Information Technologies 14 (3) (2014) 71–85.

[43] Z. A. Baig, F. Binbeshr, Controlled Virtual Resource Access to Miti-
gate Economic Denial of Sustainability (EDoS) Attacks Against Cloud
Infrastructures,
in: Proceedings of the 2013 International Confer-
ence on Cloud Computing and Big Data, CLOUDCOM-ASIA ’13,
IEEE Computer Society, Washington, DC, USA, 2013, pp. 346–353.
doi:10.1109/CLOUDCOM-ASIA.2013.51.

[44] B. Saini, G. Somani, Index Page Based EDoS Attacks in Infrastructure
Cloud, in: International Conference on Security in Computer Networks
and Distributed Systems, Springer, 2014, pp. 382–395.

[45] Amazon,

Amazon CloudWatch,

https://aws.amazon.com/

cloudwatch/ (2014).

[46] AWS Discussion Forum, https://forums.aws.amazon.com (2016).
[47] Amazon Web Services, AWS Best Practices for DDoS Resiliency,
https://d0.awsstatic.com/whitepapers/DDoS_White_Paper_
June2015.pdf (2015).

[48] D. Dean, A. Stubbleﬁeld, Using Client Puzzles to Protect TLS, in:

USENIX Security Symposium, Vol. 42, 2001.

[49] D. Leggett, CAPTCHAs tough on sales common way to test user tol-
erance, http://www.uxbooth.com/articles/captchas-tough-
on-sales-common-way-to-/test-user-tolerance/ (2009).
[50] P. Du, A. Nakao, DDoS Defense as a Network Service, in: 2010 IEEE
Network Operations and Management Symposium - NOMS 2010, 2010,
pp. 894–897. doi:10.1109/NOMS.2010.5488345.

[51] G. Somani, A. Johri, M. Taneja, U. Pyne, M. S. Gaur, D. Sanghi,
DARAC: DDoS Mitigation using DDoS Aware Resource Allocation in
Cloud, in: 11th International Conference, ICISS, Kolkata, India, De-
cember 16-20, 2015, Proceedings, 2015, pp. 263–282.

[52] J. Idziorek, M. Tannian, D. Jacobson, Detecting Fraudulent Use of Cloud
Resources, in: Proceedings of the 3rd ACM workshop on Cloud com-
puting security, ACM, 2011, pp. 61–72.

[53] M. N. Ismail, A. Aborujilah, S. Musa, A. Shahzad, Detecting Flooding
Based DoS Attack in Cloud Computing Environment Using Covariance
Matrix Approach, in: Proc. of the 7th International Conf. Ubiquitous
Information Management and Communication, ACM, 2013, p. 36.
[54] L. Feinstein, D. Schnackenberg, R. Balupari, D. Kindred, Statistical Ap-
proaches to DDoS Attack Detection and Response, in: DARPA Informa-
tion Survivability Conference and Exposition, 2003. Proceedings, Vol. 1,
IEEE, 2003, pp. 303–314.

[55] P. Shamsolmoali, M. Zareapoor, Statistical-based Filtering System
Against DDoS Attacks in Cloud Computing, in: Advances in Com-
puting, Communications and Informatics (ICACCI, 2014 International
Conference on, IEEE, 2014, pp. 1234–1239.

[56] J. F. G´omez-Lopera, J. Mart´ınez-Aroza, A. M. Robles-P´erez, R. Rom´an-
Rold´an, An Analysis of Edge Detection by using the Jensen-Shannon
Divergence, Journal of Mathematical Imaging and Vision 13 (1) (2000)
35–56.

[57] S. J. Templeton, K. E. Levitt, Detecting Spoofed Packets, in: DARPA In-
formation Survivability Conference and Exposition, 2003. Proceedings,
Vol. 1, IEEE, 2003, pp. 164–175.

[58] Q. Chen, W. Lin, W. Dou, S. Yu, CBF: A Packet Filtering Method for
DDoS Attack Defense in Cloud Environment, in: Dependable, Auto-
nomic and Secure Computing (DASC), IEEE Ninth Int. Conf. on, IEEE,
2011, pp. 427–434.

[59] N. Jeyanthi, N. C. S. Iyengar, P. M. Kumar, A. Kannammal, An En-
hanced Entropy Approach to Detect and Prevent DDoS in Cloud Envi-
ronment, International Journal of Communication Networks and Infor-
mation Security (IJCNIS) 5 (2).

[60] T. Vissers, T. S. Somasundaram, L. Pieters, K. Govindarajan,
P. Hellinckx, DDoS Defense System for Web Services in a Cloud En-
vironment, Future Generation Computer Systems 37 (2014) 37–45.
[61] A. Koduru, T. Neelakantam, S. Bhanu, S. Mary, Detection of
Economic Denial of Sustainability Using Time Spent on a Web
Page in Cloud,
Cloud Computing in Emerging Markets
(CCEM), 2013 IEEE International Conference on, 2013, pp. 1–4.
doi:10.1109/CCEM.2013.6684433.

in:

[62] S. Yu, W. Zhou, S. Guo, M. Guo, A Feasible IP Traceback Framework
Through Dynamic Deterministic Packet Marking, IEEE Transactions on
Computers 65 (5) (2016) 1418–1427.

[63] A. Chonka, Y. Xiang, W. Zhou, A. Bonti, Cloud Security Defence to
Protect Cloud Computing Against HTTP-DoS and XML-DoS Attacks,
Journal of Network and Computer Applications 34 (4) (2011) 1097–
1107.

[64] S. S. Silva, R. M. Silva, R. C. Pinto, R. M. Salles, Botnets: A Survey,

Computer Networks 57 (2) (2013) 378–403.

[65] L. Yang, T. Zhang, J. Song, J. Wang, P. Chen, Defense of DDoS At-
tack for Cloud Computing, in: Computer Science and Automation Engi-
neering (CSAE), 2012 IEEE International Conference on, Vol. 2, IEEE,
2012, pp. 626–629.

[66] O. A. Osanaiye, IP Spooﬁng Detection for Preventing DDoS Attack in
Cloud Computing, in: Intelligence in Next Generation Networks (ICIN),
18th International Conf on, IEEE, 2015, pp. 139–141.

[67] J. Mirkovi´c, G. Prier, P. Reiher, Attacking DDoS at the source, in: Net-
work Protocols, 2002. Proceedings. 10th IEEE International Conference
on, 2002, pp. 312–321. doi:10.1109/ICNP.2002.1181418.

[68] V. Huang, R. Huang, M. Chiang, A DDoS Mitigation System with
Multi-stage Detection and Text-Based Turing Testing in Cloud Com-
puting, in: Advanced Information Networking and Applications Work-
shops (WAINA), 2013 27th International Conference on, IEEE, 2013,
pp. 655–662.

[69] H. Luo, Y. Lin, H. Zhang, M. Zukerman, Preventing DDoS Attacks by
Identiﬁer/locator Separation, Network, IEEE 27 (6) (2013) 60–65.
[70] T. K. Law, J. Lui, D. K. Yau, You Can Run, But You Can’t Hide: An Ef-
fective Statistical Methodology to Trace Back DDoS Attackers, Parallel
and Distributed Systems, IEEE Transactions on 16 (9) (2005) 799–813.

[71] DDoS Deﬂate, https://github.com/jgmdev/ddos-deﬂate (2016).
[72] J. Latanicki, P. Massonet, S. Naqvi, B. Rochwerger, M. Villari, Scal-
able Cloud Defenses for Detection, Analysis and Mitigation of DDoS
Attacks, in: Future Internet Assembly, 2010, pp. 127–137.

[73] B. Li, W. Niu, K. Xu, C. Zhang, P. Zhang, You Cant Hide: A Novel
Methodology to Defend DDoS Attack Based on Botcloud, in: Applica-
tions and Techniques in Information Security, Communications in Com-

puter and Information Science, Springer Berlin Heidelberg, 2015, pp.
203–214.

[74] M. Graham, W. Adrian, S.-V. Erika, Botnet Detection Within Cloud Ser-
vice Provider Networks Using Flow Protocols, in: Industrial Informatics
(INDIN), 2015 IEEE 13th International Conference on. IEEE, 2015, pp.
1614–1619.

[75] H. Badis, G. Doyen, R. Khatoun, A Collaborative Approach for a Source
Based Detection of Botclouds, in:
Integrated Network Management
(IM), 2015 IFIP/IEEE International Symposium on, IEEE, 2015, pp.
906–909.

[76] R. M. Mohammad, C. Mauro, L. Ville, EyeCloud: A BotCloud Detec-
tion System, in: In Proceedings of the 5th IEEE International Sympo-
sium on Trust and Security in Cloud Computing (IEEE TSCloud 2015),
Helsinki, Finland, IEEE, 2015.

[77] S. Zhao, K. Chen, W. Zheng, Defend Against Denial of Service At-
tack with VMM, in: Grid and Cooperative Computing, 2009. GCC’09.
Eighth International Conference on, IEEE, 2009, pp. 91–96.

[78] S. Yu, Y. Tian, S. Guo, D. O. Wu, Can We Beat DDoS Attacks in
Clouds?, Parallel and Distributed Systems, IEEE Transactions on 25 (9)
(2014) 2245–2254.

[79] P. Xiao, W. Qu, H. Qi, Z. Li, Detecting DDoS attacks against data center
with correlation analysis, Computer Communications 67 (2015) 66–74.
[80] J. Zhang, Y.-W. Zhang, J.-B. He, O. Jin, A Robust and Eﬃcient De-
tection Model of DDoS Attack for Cloud Services, in: Algorithms and
Architectures for Parallel Processing, Springer International Publishing,
2015, pp. 611–624.

[81] M. Du, F. Li, Atom: Automated tracking, orchestration and monitoring
of resource usage in infrastructure as a service systems, in: 2015 IEEE
International Conference on Big Data (Big Data), 2015, pp. 271–278.
doi:10.1109/BigData.2015.7363764.

[82] A. Sarra, G. Rose, DDoS Attacks in Service Clouds, in: 48th Hawaii
International Conference on System Sciences, IEEE Computer Society,
2015.

[83] G. Yossi, H. Amir, S. Michael, G. Michael, CDN-on-Demand: An Af-
fordable DDoS Defense via Untrusted Clouds, in: Network and Dis-
tributed System Security Symposium (NDSS), 2016.

[84] G. Somani, M. S. Gaur, D. Sanghi, M. Conti, R. Buyya, Service Resiz-
ing for Quick DDoS Mitigation in Cloud Computing Environment, Ann.
Telecommun. (2016) 1–16.

[85] G. Somani, M. S. Gaur, D. Sanghi, M. Conti, M. Rajarajan, DDoS Vic-
tim Service Containment to Minimize the Internal Collateral Damages
in Cloud Computing, Computers & Electrical Engineering (2016) –.
[86] R. Sahay, G. Blanc, Z. Zhang, H. Debar, Towards Autonomic DDoS
Mitigation using Software Deﬁned Networking, in: SENT 2015: NDSS
Workshop on Security of Emerging Networking Technologies, Internet
society, 2015.

[87] X. Wang, M. Chen, C. Xing, SDSNM: A Software-Deﬁned Security
Networking Mechanism to Defend against DDoS Attacks, in: Frontier
of Computer Science and Technology (FCST), 2015 Ninth International
Conference on, IEEE, 2015, pp. 115–121.

[88] B. Wang, Y. Zheng, W. Lou, Y. T. Hou, DDoS Attack Protection in the
Era of Cloud Computing and Software-deﬁned Networking, Computer
Networks 81 (2015) 308–319.

[89] Q. Yan, F. Yu, Distributed denial of service attacks in software-deﬁned
networking with cloud computing, Communications Magazine, IEEE
53 (4) (2015) 52–59.

[90] P. Du, A. Nakao, DDoS Defense as a Network Service, in: 2010 IEEE
Network Operations and Management Symposium-NOMS 2010, IEEE,
2010, pp. 894–897.

[91] S. H. Khor, A. Nakao, DaaS: DDoS Mitigation-as-a-Service, in: Appli-
cations and the Internet (SAINT), 11th Int. Symp. on, IEEE, 2011, pp.
160–171.

[92] F. Guenane, M. Nogueira, G. Pujolle, Reducing DDoS Attacks Impact
Using a Hybrid Cloud-based Firewalling Architecture, in: Global Infor-
mation Infrastructure and Networking Symposium (GIIS), 2014, IEEE,
2014, pp. 1–6.

[93] H. Fujinoki, Dynamic binary user-splits to protect cloud servers
from ddos attacks,
Proceedings of the Second International
Conference on Innovative Computing and Cloud Computing, ICCC
’13, ACM, New York, NY, USA, 2013, pp. 125:125–125:130.
doi:10.1145/2556871.2556900.

in:

22

URL http://doi.acm.org/10.1145/2556871.2556900

[94] Y. Wang, J. Ma, D. Lu, X. Lu, L. Zhang, From high-availability to col-
lapse: quantitative analysis of “cloud-droplet-freezing” attack threats to
virtual machine migration in cloud computing, Cluster Computing 17 (4)
(2014) 1369–1381. doi:10.1007/s10586-014-0388-6.
URL http://dx.doi.org/10.1007/s10586-014-0388-6

[95] S.-C. Tsai, I.-H. Liu, C.-T. Lu, C.-H. Chang, J.-S. Li, Defending cloud
computing environment against the challenge of ddos attacks based on
software deﬁned network, in: Advances in Intelligent Information Hid-
ing and Multimedia Signal Processing: Proceeding of the Twelfth Inter-
national Conference on Intelligent Information Hiding and Multimedia
Signal Processing, Nov., 21-23, 2016, Kaohsiung, Taiwan, Volume 1,
Springer, 2017, pp. 285–292.

[96] G. Somani, M. S. Gaur, D. Sanghi, M. Conti, M. Rajarajan, R. Buyya,
Combating DDoS Attacks in the Cloud: Requirements, Trends, and Fu-
ture Directions, IEEE Cloud Computing, 2017.

[97] P. Muncaster, DDoS-ers Take Down Mitigation Tools

in Q1,

http://www.infosecurity-magazine.com/news/ddos-ers-
take-down-mitigation/ (2016).

[98] B. B. Gupta, M. Misra, R. C. Joshi, An ISP Level Solution to Com-
bat DDoS Attacks using Combined Statistical Based Approach, CoRR
abs/1203.2400.

[99] Digital Attack Map, http://www.digitalattackmap.com (2014).
[100] S. Chen, Q. Song, Perimeter-based Defense Against High Bandwidth
DDoS Attacks, Parallel and Distributed Systems, IEEE Transactions on
16 (6) (2005) 526–537.

[101] Y. Chen, K. Hwang, W.-S. Ku, Collaborative Detection of DDoS At-
tacks Over Multiple Network Domains, Parallel and Distributed Sys-
tems, IEEE Transactions on 18 (12) (2007) 1649–1662.

23

