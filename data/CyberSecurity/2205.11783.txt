Smart Grid: Cyber Attacks, Critical Defense
Approaches, and Digital Twin

Tianming Zheng, Ming Liu, Deepak Puthal, Ping Yi*, Senior Member, IEEE, Yue Wu*, Member, IEEE,

and Xiangjian He, Senior Member, IEEE

1

2
2
0
2

y
a
M
4
2

]

R
C
.
s
c
[

1
v
3
8
7
1
1
.
5
0
2
2
:
v
i
X
r
a

Abstract—As a national critical infrastructure, the smart grid
has attracted widespread attention for its cybersecurity issues.
The development towards an intelligent, digital, and Internet-
connected smart grid has attracted external adversaries for
malicious activities. It is necessary to enhance its cybersecurity by
either improving the existing defense approaches or introducing
novel developed technologies to the smart grid context. As an
emerging technology, digital twin (DT) is considered as an enabler
for enhanced security. However, the practical
implementation
is quite challenging. This is due to the knowledge barriers
among smart grid designers, security experts, and DT developers.
Each single domain is a complicated system covering various
components and technologies. As a result, works are needed to
sort out relevant contents so that DT can be better embedded in
the security architecture design of smart grid.

In order to meet this demand, our paper covers the above three
domains,
i.e., smart grid, cybersecurity, and DT. Speciﬁcally,
the paper i) introduces the background of the smart grid; ii)
reviews external cyber attacks from attack incidents and attack
methods; iii) introduces critical defense approaches in industrial
cyber systems, which include device identiﬁcation, vulnerability
discovery, intrusion detection systems (IDSs), honeypots, attribu-
tion, and threat intelligence (TI); iv) reviews the relevant content
of DT, including its basic concepts, applications in the smart grid,
and how DT enhances the security. In the end, the paper puts
forward our security considerations on the future development of
DT-based smart grid. The survey is expected to help developers
break knowledge barriers among smart grid, cybersecurity, and
DT, and provide guidelines for future security design of DT-based
smart grid.

Index Terms—Smart Grid, Digital Twin, Cybersecurity.

I. INTRODUCTION

A S a national critical infrastructure, the smart grid has

attracted widespread attention from governments, indus-
tries, and academia. A market research [1] predicted that smart
grid’s market would increase from USD 23.8 billion to USD
61.3 billion from 2018 to 2023. However, the bright future is
often accompanied by challenges. The smart grid developing
towards an intelligent, digital, and Internet-connected cyber-
physical system (CPS) has also expanded the threat surface,

This work was supported by the National Key R&D Program of China under
Grants No. 2020YFB1807500, No. 2020YFB1807504, and National Science
Foundation of China Key Project under Grants No. 61831007. (Corresponding
authors: Ping Yi, Yue Wu.)

T. Zheng, M. Liu, P. Yi, and Y. Wu are with the School of Elec-
tronic Information and Electrical Engineering, Shanghai Jiao Tong Uni-
versity, Shanghai, 200240 China (e-mail: zhengtianming@sjtu.edu.cn; lium-
ing198904@sjtu.edu.cn; yiping@sjtu.edu.cn; wuyue@sjtu.edu.cn).

D. Puthal is with the School of Computing, Newcastle University, UK (e-

mail: deepak.puthal@gmail.com).

X. He is with the School of Electrical and Data Engineering, University of

Technology Sydney, Australia (e-mail: Xiangjian.He@uts.edu.au).

which attracted external adversaries for malicious activities. To
fully understand its cybersecurity issues, a review of external
cyberattacks, including last-decade cyberattack incidents and
attack methods, can be helpful.

Besides, to ensure the trustworthiness of the smart grid,
security measures need to be updated for enhanced safety,
reliability, security, resilience, and privacy [2]. To achieve the
goal, efforts can be made by either improving the existing
defense approaches or applying novel developed technologies
in the smart grid context.

Existing security measures like device identiﬁcation, vulner-
ability discovery, intrusion detection system (IDS), honeypot,
attribution, and threat intelligence (TI) have been correlated
to form a systematic passive-active defense architecture. They
could be used to identify suspicious devices running vulnera-
ble software, discover malicious host and network behaviors,
distract adversaries’ attention with deliberately deployed de-
vices, track adversary’s identity, and generate reports to guide
the enforcement of smart grid’s security. Besides, with the
development of artiﬁcial intelligence (AI), most technologies
have been improved with AI algorithms. It has signiﬁcantly
reduced security analyst’s work and improved the performance
of defense approaches.

Moreover, digital twin (DT) has become a promising tech-
nology in various industry and network scenarios. It acts as
a virtual representation of the real-world entity or system
[3]. It is initially proposed by Grieves in 2003 for product
manufacturing process [4]. Until recently, its development has
received extensive attention. In the technology trends for 2021,
Accenture regarded DT as the top ﬁve strategy technologies
[5]. A market analysis indicated that the global DT market
size was expected to increase from USD 3.1 billion to USD
48.2 billion from 2020 to 2026 [6].

It is worth noticing that DT is regarded as an enabler for
enhanced security [7]–[13]. However, many existing works
still focus on analyzing the concept itself, ﬁguring out its
components, or discussing the DT framework. Instead, only a
very limited amount of work has actually been practiced in the
realistic smart grid-cybersecurity context. The reasons are in
two aspects. Firstly, the technology is still in a very early stage.
Many researchers haven’t clearly understand the meaning and
effect of DT, not to mention its technical details or concrete
applications. Secondly, a secure DT-based system is quite
complicated. It requires the knowledge of various domains,
including SMART GRID, CYBERSECURITY, and DT itself.
The knowledge barriers make the study of the interdisciplinary
work quite challenging. Therefore, there is a urgent need to

 
 
 
 
 
 
2

security architecture of the smart grid, and ii) Deploying
defense approaches for DT’s own security.

Section II reviews the related surveys in smart grid, cyber-
security, and DTs. Section III introduces the background of
the smart grid. Section IV reviews smart grid attack incidents
and prevalent attack methods. Section V introduces critical de-
fense approaches, including device identiﬁcation, vulnerability
discovery, intrusion detection, honeypot, attribution, and TI.
Section VI introduces DT, DT applications in the smart grid,
and DT as an enabler for enhanced cybersecurity. Section VII
discusses the lessons learned and future perspectives on the
security considerations of DT-based smart grid. Section VIII
presents the conclusion.

II. RELATED SURVEYS

The survey covers SMART GRID, CYBERSECURITY, DT,
and their interactive part which represents DT-enhanced smart
grid cybersecurity. Thus, the paper ﬁrstly reviews and analyzes
existing related surveys and tries to identify the research gap
on this topic. To the best of our knowledge, the related surveys
can be generally classiﬁed into two types. The ﬁrst
type
focuses on the smart grid and its security issues. The second
one targets the DT technology and its enabled applications.
TABLE I has listed and analyzed the state-of-the-art surveys.
It can be observed that smart grid surveys mostly focus on the
i) smart grid concept and components, ii) smart grid related
technologies and applications, iii) smart grid communications
and protocols, and iv) smart grid cybersecurity. Surveys of
DTs mostly focus on the v) DT concept, development, and
applications, but lack of a discussion about applications of the
vi) DT in the smart grid, and vii) DT’s security considerations.
Therefore, our survey covers above topics to provide a system-
atic analysis of smart grid’s security issues and fulﬁll the gap
of lacking discussions about DT in smart grid’s cybersecurity
context.

A. Smart Grid and Security

Dileep et al. [19] introduced the background knowledge of
the smart grid, including its deﬁnition, characteristics, func-
tions, evolution, reference architecture, and components. Then,
the authors reviewed the smart grid enabling technologies, i.e.,
smart meters, plug-in hybrid electric vehicle (PHEV), smart
sensors, automated meter reading, vehicle to grid (V2G), and
sensor and actuator networks. Further, the authors concluded
the smart grid metering components,
including advanced
metering infrastructure (AMI), intelligent electronic devices
(IEDs), and phasor measurement units (PMUs). As well, the
communications of smart grid involving cloud, wide area
network (WAN), wide area measurement systems (WAMS),
neighborhood area network (NAN), home access network
(HAN), and local area network (LAN) are introduced. More-
over, the authors discussed smart grid applications, including
feeder automation, smart substation, and home and building
automation. Their paper does not involve the security topics
but is a great start for researchers and engineers to learn the
smart grid and helps operators and authorities to build the

Fig. 1. Scope of the survey.

break down the knowledge barriers, sort out related content,
introduce required technologies, and provide guidelines for DT
enhanced industrial cybersecurity.

In order to meet these demands, our survey reviews the
relevant content covering the three domains, i.e., "SMART
GRID, CYBERSECURITY, and DT". Speciﬁcally, the paper
reviews smart grid cyberattacks, critical defense approaches,
and existing works of DT. The survey is expected to help
developers break knowledge barriers among smart grid, cyber-
security, and DT, and provide guidelines for future security
design of DT-based smart grid. The scope of the survey is
illustrated in Fig. 1. The contributions are listed as follows:

• We have reviewed and analyzed related surveys in the
context of smart grid and DT. We notice the gap in lacking
"survey" articles about DT-enhanced industrial cyberse-
curity. Despite it has been proposed in recent researches,
none of them are in a "survey" form reviewing existing
works and providing knowledge background needed by
future developers. Therefore, our survey tries to fulﬁll
the blank and introduce essential background knowledge
covering SMART GRID, CYBERSECURITY, and DT
to promote the development of DT-enhanced industrial
cybersecurity.

• We introduce the background of smart grid to provide

basic knowledge for interdisciplinary academics.

• We review the last-decade cyberattack incidents in energy
sectors and introduce nine prevalent attack methods.
• We introduce six critical defense approaches promising in
protecting the smart grid from sophisticated cyber threats
in both passive and active ways. These approaches include
device identiﬁcation, vulnerability discovery,
intrusion
detection, honeypot, attribution, and threat intelligence
(TI). We indicate the possible collaboration between them
and point out the challenges and future works for each
technology.

• We review the existing works about DT, including its
concept, components, applications in the smart grid, and
DT as an enabler for enhanced cybersecurity.

• We present our security considerations of the DT-based
smart grid. The lessons learned and future perspectives
are discussed from two aspects: i) Embedding DT into the

Smart GridDigital TwinCyber-securitySmart GridDigital TwinCyber-securityDT Enhanced Smart Grid Cybersecurity3

TABLE I
SUMMARY OF RELATED SURVEYS

Year of Publication
Research Area
Smart Grid Concept and Components
Smart Grid Related Technologies and Applications
Smart Grid Communications and Protocols
Smart Grid Cybersecurity
DT Concept, Development, and Applications
DT in the Smart Grid
DT’s Security Considerations

2016
[14]
•
•
•
•
◦
◦
◦

2018
[16]
•
◦
•
•
◦
◦
◦

[17]
◦
◦
◦
◦
•
◦
◦

[15]
•
•
•
•
◦
◦
◦

2019
[18]
◦
◦
◦
•
◦
◦
◦

2020

[19]
•
•
•
◦
◦
◦
◦

[20]
◦
•
•
•
◦
◦
◦

[21]
•
◦
◦
•
◦
◦
◦

[22]
◦
◦
◦
◦
•
◦
◦

2021
[23]
◦
◦
◦
◦
•
◦
◦

Ours

•
•
•
•
•
•
•

Note: • area is involved in the survey, ◦ area is not involved.

smart grid and develop uniﬁed standards applicable for various
applications.

Faheem et al. [15] introduced the smart grid in the context
of "Industry 4.0". They reviewed the smart grid applications,
including AMI, demand response (DR), substation automation,
PHEV, Distributed energy resource (DER), etc. The authors
also discussed the critical components in the smart grid,
including IoT, CPS, big data, cloud computing, Internet of Ser-
vices (IoS), cybersecurity, and communication technologies.
It is worth noticing that they performed a general analysis of
the cybersecurity issues. Security is also emphasized in their
proposed future works demanding further efforts in improving
the reliability, efﬁciency, and security of communication pro-
cesses. However, cybersecurity is only a small section of their
paper. They did not discuss it in detail.

Hui et al. [20] aim at providing guidelines for developing
5G in the smart grid DR. They investigated related works of
the DR in recent practical advances, cybersecurity, consumer
privacy, and its reliability. Further, the authors discussed the
5G technology and presented the potentials and feasibility of
applying 5G in the smart grid DR. The authors indicated that
the massive connection, fast data transfer speed, low power
consumption, high reliability, robust security, and privacy
make 5G applicable for DRs.

Sun et al. [16] focused on the cybersecurity of the power
grid. The authors pointed out the vulnerabilities of ﬁrewalls in
deﬁning security-perfect detection rules and preventing attacks
bypassing its protection. Besides, the lack of strong crypto-
graphic protection for power grid communication protocols
and devices also results in the power grid’s vulnerabilities.
Potential threats exist in the synchronization of smart grid data,
the vulnerability of wireless communication, the validation
of anomaly detection and intrusion detection systems (IDSs),
coordinated attacks, and human factors. Although the authors
reviewed both vulnerabilities and protection mechanisms (i.e.,
anomaly detection and IDSs in their survey), it is not in details
nor comprehensive.

Musleh et al. [18] focused on a speciﬁc security issue in the
smart grid, i.e., the false data injection (FDI) attacks. The au-
thors divided FDI attacks into physical-based, communication-
based, network-based, and cyber-based FDI attacks. They
proposed the impacts of FDI attacks on the economy and
stability. Moreover, they summarized the detection algorithms,
including model-based detection and data-driven detection.

Tan et al. [14] reviewed the smart grid security vulnerabil-
ities and solutions from the perspective of the data lifecycle.

It
is composed of "data generation, data acquisition, data
storage, and data processing". Besides, the authors discussed
security analytics applying big data to cybersecurity. The
authors indicated that data-driven security analytics would
enable intelligent services such as predictive capabilities and
automated real-time controls.

Gunduz et al. [21] analyzed threats and potential solutions
of the smart grid. They proposed cybersecurity objectives as
conﬁdentiality, integrity, and availability (CIA triad). As well,
they proposed cybersecurity requirements involving authen-
tication, authenticity, authorization, accountability, privacy,
dependability, survivability, and safety criticality. Moreover,
the most signiﬁcant contribution of their survey is presenting
a comprehensive review of attacks and solutions with classi-
ﬁcations according to the CIA triad and network layers.

In general, existing surveys either focus on the smart grid
itself or its security issues. For the smart grid, its deﬁnition,
architecture, components, communication technologies, proto-
cols, and applications are widely introduced. It helps to study
the smart grid and guide its development. For security issues,
the security demands, smart grid vulnerabilities, cyberattacks,
and defending technologies are reviewed. It provides the basic
guidelines for the design of security mechanisms. However,
most surveys lack of a summary of historical cyberattack
incidents, attack meathods, and the defense approaches against
sophisticated attacks such as advanced persistent threat (APT)
for the purpose of breaking interdisciplinary knowledge barri-
ers. The smart grid security protection should not be limited
to detecting and preventing malicious activities but tracing the
identity of adversaries to solve security issues from the source.
Therefore, our survey analyzes smart grid cybersecurity issues
with a comprehensive review of smart grid external attacks.
Besides, the defense approaches introduced in our paper aim
at providing a deep protection of smart grid systems to solve
the most severe and prevalent problems, such as Distributed
Denial of Service (DDoS) attacks and APT, and prevent them
from the source.

B. Digital Twin

Tao et al. [17] summarized the applications of DT in the
industry context. The authors ﬁrst reviewed the proposals
of DTs from 2003 to 2018 to explain the concept of DTs.
Further, the authors introduced existing works in DT modeling
and simulation, interaction and collaboration, data fusion, and
services. Then, the authors introduced the application of DTs
in prognostics and health management (PHM), production,

product design, etc [17]. The authors emphasized the core
position of modeling in DTs and presented that the PHM is the
most popular application of DTs in the industry. Additionally,
the authors presented two promising applications of DTs,
which are dispatching optimization and operational control.

Minerva et al. [22] indicated that DTs had derived various
approaches and requirements in different scenarios. Conse-
quently, a general concept of DTs is needed to make it
widely compatible. The authors reviewed the state-of-the-art
that had deﬁned and applied DTs in manufacturing, virtual
reality (VR), multiagent systems, augmented reality (AR),
and virtualization. Besides, the authors pointed out DT’s key
properties and features in the IoT context. They proposed that
DT’s potential applications in the IoT context include virtual
sensors, the digital patient, the digital city, and the cultural
heritage.

Lo et al. [23] reviewed researches of DTs in product design
and development. The authors concluded that the DT could
simplify the design processes. It is of help for the product
concept generation and redesign. Besides, with big data, cloud
computing, VR, and AR technologies, the DTs could analyze
the large volume of data generated during the whole product
life cycle in the real environment and make the product design
visible for veriﬁcation.

In general, most of the existing surveys reﬂect the develop-
ment status of DTs. On the one hand, they reviewed the exist-
ing concept deﬁnition, architecture design, and applications of
DTs. On the other hand, they proposed the functions, features,
and properties that DTs should meet in future development.
Usually, they would present their concerns on the challenges
in developing DTs and indicate the promising applications of
DTs in different scenarios. The purpose of these surveys is to
discuss the current development status of DTs and guide the
future development and application in academic and industrial
ﬁelds. However, they lack a comprehensive summary on DT’s
applications in speciﬁc industrial context (e.g., smart grid)
or neglect
the works of DT as an enabler for enhanced
cybersecurity.

III. BACKGROUND OF THE SMART GRID

The smart grid is a complicated system. The U.S. National
Institute of Standards and Technology (NIST) presented a
including generation, distribu-
seven-domain infrastructure,
tion, transmission, markets, customers, service provider, and
operations [24], [25]. As illustrated in Fig. 2, the customer,
generation, distribution, and transmission ﬁelds carry the en-
ergy ﬂows. Meanwhile, all the seven elements are intercon-
information channels for data interac-
nected with mutual
tions. Firstly, the generation domain converts different forms
of energy (e.g., coal, nuclear, wind, solar and hydro) into
electricity. It generally covers the traditional bulk generation
and renewable power generation. The novel DER is also part
of it but realized in a more complicated way. It involves
solar photovoltaics, gas-ﬁred distributed generation, small
and medium-size wind farms, energy storage (ES), electric
vehicles, and demand-side management [26]. Afterward, the
generated power ﬂows into the civil customers and industry

4

consumers through the transmission lines and substations
deployed in the transmission and distribution domains under
the control of the energy management systems (EMSs) and the
distributed management systems (DMSs) [27]. Alternatively,
the energy could also be saved in the ES for balancing the
inﬂexible or intermittent supply with demand [28]. Addi-
tionally, the management and control are mainly conducted
in the operating systems (OSs) like the supervisory control
and data acquisition (SCADA) system. It optimizes the grid
energy according to the system status and power consumption
reported by the terminal equipment (e.g., PMU) and remote
terminal units (RTUs)) and the smart meters in AMI to achieve
a balance between the supply and demand. Meanwhile, the
OSs monitor the power grid to prevent anomaly behaviors.
Once power grid failures or attacks are detected, it will assist
security experts in emergency responses. Similarly, the power
grid status and the electricity consumption data will also be
delivered to the energy market and service providers to adjust
real-time prices and provide various intelligent services.

Besides, the smart grid has become one of the most repre-
sentative CPSs. It realizes the deep integration of the cyber-
physical world through communication, computer, and control
(3C) technologies. More precisely, it involves the traditional
information technology (IT) for data transmitting and the
operational technology (OT) for control and actuation [2]. The
interaction between the cyber and physical world in CPS has
been illustrated in Fig. 3. The information of physical states
is transmitted to the cyber side for decision-making, and the
cyber system will send control commands to the actuation
units to manipulate its physical states. The whole process
requires the coordination and cooperation of computing de-
vices, communication networks, sensing or data acquisition
devices, and the actuation units. As well, it provides the smart
grid abilities of data fusion, distributed collaboration, real-time
situational awareness, system adjustment, global optimization,
and rapid emergency response.

Moreover,

the development of modern information and
communication technologies (ICTs) like DTs, big data, cloud,
mobile communication, AI, and the IoT, will accelerate the
digital and intelligent transformation of the smart grid. The
deep integration of diversiﬁed ICTs will signiﬁcantly reinforce
the energy system’s regulatory capabilities and promote the
coordinated interaction among power generation, power grid,
energy load, and ES. In addition, it will support the devel-
opment of novel distributed energy techniques, micro-grids,
electric vehicles, and any other energy applications to realize
the modernization reform of the energy industry.

However, each single step towards a digital smart grid also
exacerbates its cybersecurity problems. For smart grid terminal
devices, the exposed interfaces, hardware design ﬂaws, un-
patched software bugs, backdoor, and default login password
will all make them vulnerable to malicious adversaries. More
seriously, the large volume of devices could aggravate the
risks and breaks out with a whole different magnitude [29].
Once malicious adversaries successfully manipulate a large
volume of devices such as programmable logic controllers
(PLCs), smart meters, or RTUs, severe impacts can be added
on the performance of the physical grid, electricity market, and

5

Fig. 2. Conceptual model of the smart grid.

services, power outage, line overloads, and damage of crit-
ical smart grid infrastructures. Besides, the smart grid has
integrated various communication technologies, standards, and
protocols. Wired communication like Ethernet, ﬁber optics,
digital subscriber line (DSL), power line communication and
wireless communication like 5G, Wi-Fi, DASH 7, Bluetooth
[15] have been applied for different smart grid scenarios.
Dedicated standards and protocols like DNP3, IEC 61850,
and IEC60870-5 are developed for speciﬁc power system
communications. Their security vulnerabilities on transmit-
ting with plaintext,
lacking strong encryption and tamper
protection, improper authorization, access control, and key
management techniques have signiﬁcantly increased the risks
of the smart grid [30]. Yoo et al. [31] provided a study case of
a smart grid environment in Korea with two substations and
two hierarchical control centers (EMS/SCADA) using DNP3,
IEC 61970, IEC 61850, and OPC UA. The authors clariﬁed
that the security threats exhibited in their study case include

Fig. 3. CPS conceptual model.

customer services. A typical example is building botnets with
compromised devices to perform DDoS attacks (introduced in
Section IV). It could result in the interruption of customer

OperationService ProviderNon-renewableRenewableCustomerSubstationDistributionTransmissionGenerationSecure Communication FlowElectrical FlowMarketHumanPhysicalCyberInformationActionDecisionPhysical Statesprotocol vulnerability,
improper security service mapping,
improper protocol mapping, insecure gateway system, insecure
conﬁguration tool, and network design weakness [31]. All the
vulnerabilities could result in severe damages to the smart
grid. Cybersecurity measures need to be enhanced either by
improving existing defensing methods or developing novel
technologies, like DT, to ensure smart grid’s resilience against
cyberattacks.

IV. SMART GRID CYBER ATTACKS

Adversaries will do their best to discover power system’s
vulnerabilities for illegally obtaining private information and
economic beneﬁts or, more severely, damaging the power
grid facilities. In 2013,
the European Union Agency for
Network and Information Security (ENISA) published smart
grid threat landscape to detailly describe the potential cy-
berattacks in the smart grid [32]. In 2020, ENISA presented
the top 15 threats that occurred from January 2019 to April
2020, including “malware, web-based attacks, phishing, web
application attacks, spam, DDoS, identify theft, data breach,
insider threat, botnets, physical manipulation, damage, theft
and loss, information leakage, ransomware, cyberespionage,
and crytojacking [33]”. Although the ENISA’s report did
not speciﬁcally target the energy sectors, it ﬁts the smart
grid scenarios due to the application of ICT and the shift
of adversaries’ focus from the general cyber environment to
critical national infrastructures, e.g., the energy sectors. As a
result, for better understanding the cyber threats of the smart
grid, this section introduces the cyberattack incidents in power
industries in the last decade. Additionally, this section sum-
marizes the prevalent attack methods hurting energy sectors
so that security experts can better protect the smart grid.

A. Attack Incidents

In 2010, Stuxnet, a malicious computer worm, was ﬁrst
uncovered, which caused severe damage to Iran’s Natanz
uranium enrichment plant. It targeted the ICSs by infecting
any Windows PC it could ﬁnd and dropping rogue code to
speciﬁc PLCs to sabotage the power facilities [34], [35].

On December 23, 2015, cyberattacks targeted Ukrainian
electricity distribution companies. Adversaries penetrated the
electricity companies’ networks with spear-phishing emails,
“BlackEnergy 3” variants, and malware-embedded Microsoft
Ofﬁce documents, causing several outages affecting around
225,000 customers [36], [37].

In August 2016, the Mirai botnet was ﬁrst identiﬁed by the
whitehat security research group MalwareMustDie and was
reported to be responsible for several DDoS attack incidents,
including the September attack incidents that
targeted the
Brian Krebs website, cloud service provider OVH, French
web host, and the October attack against service provider Dyn
which affected hundreds of websites such as GitHub, Netﬂix,
Twitter, and Reddit [38], [39]. The new trend of DDoS attacks
utilizing the vulnerabilities and large volume of IoT devices
has started and severely affected cyberspace’s security.

In 2017,

including WannaCry, NotPetya,
BadRabbit, etc., appeared global wide and had affected various

ransomware,

6

industries, including ﬁnance, energy, healthcare, and universi-
ties.

On July 6, 2017, The New York Times published that "hack-
ers had been penetrating the computer networks of nuclear
power stations and other energy facilities in the United States
and other countries [40]". "According to security consultants
issued by the Department of
and the urgent
Homeland Security and the Federal Bureau of Investigation,
the Wolf Creek Nuclear Operating Corporation, which runs a
nuclear power plant near Burlington, Kan., was targeted [40]".
The attack was considered to be related to APT actors and
appeared to be a preparation for future attacks.

joint report

On August 07, 2017, a report from Irish Independent [41]
claimed that hackers gained access to a Vodafone network
used by Irish operator EirGrid in the U.K. and compromised
the routers used by EirGrid in Wales and Northern Ireland.
Hackers can access the unencrypted communications of the
companies by installing a wiretap on the system. In addi-
the power grid systems
tion,
are injected with malicious software, and the commercial
customers’ information is leaked by transferring over the
compromised network. According to the news, Vodafone and
the National Cyber Security Centre regarded the activity as a
“state-sponsored attack”.

there is the probability that

On October 20, 2017, the Cybersecurity & Infrastructure
Security Agency (CISA) published technical alerts TA17-
293A [42] to warn the public about APT attacks against
energy and other critical infrastructure sectors. On the same
day, Symantec indicated the cyberattacks affecting Europe
and North America’s energy sectors were strongly linked to
the Dragonﬂy cyber espionage group [43]. The group’s early
campaign was between 2011 and 2014, originally targeting
the defense and aviation companies in the Canada and U.S.,
and shifted to energy facilities in 2013 [44]. From 2015
to 2017, a new wave of cyber-attacks aiming to learn how
energy facilities operate to access the operational systems for
potential sabotage was detected and related to the Dragonﬂy
group, named “Dragonﬂy 2.0” by Symantec. The reports from
both CISA and Symantec presented the "tactics, techniques,
and procedures (TTPs) used by APT actors, including open-
source reconnaissance, spear-phishing emails (from compro-
mised legitimate accounts), watering-hole domains, credential
gathering, host-based exploitation, and the target on ICS in-
frastructure". The campaign was analyzed using the Lockheed-
Martin Cyber Kill Chain model, including "reconnaissance,
weaponization, delivery, exploitation, installation, command
and control, and actions on the objective" [45].

On March 15, 2018, CISA renewed the alert and published
TA18-074A that conﬁrmed the Russian government cyber
activity targeting important
infrastructure sectors, such as
aviation, energy, water, nuclear, commercial facilities, and
other sensitive manufacturing sectors [46].

In March 2019, Venezuela experienced a series of blackouts,
including a nationwide blackout that lasted for a week [47].
The government claimed that the blackouts were related to
U.S.-involved cyberattacks, but no conﬁrmed evidence has
been given yet.

In January 2020, industrial cybersecurity company Dragos

7

Fig. 4. Timeline of Attack Incidents in the Smart Grid.

 Cyber Attack  Incidents 2010 Stuxnet worm hit Iran’s Natanz uranium enrichment plant 2015 Ukrainian electricity distribution companies were  penetrated with spear-phishing emails, “BlackEnergy 3”  variants, and malware-embedded Microsoft Office  documents 2016 Mirai botnet led to several DDoS attacks and has  affected the smart grid 2017 Worldwide ransomware, including WannaCry, NotPetya,  BadRabbit, etc., has affected energy sectors The Wolf Creek Nuclear Operating Corporation, and the  Vodafone network used by Irish operator EirGrid were  reported to be targeted by cyberattacks CISA published the alerts TA17-293A to warn the APT  attacks targeting energy sectors Symantec indicated the cyberattacks affecting Europe and  North America’s energy sectors were strongly linked to the  Dragonfly cyber espionage group 2018 CISA published alert TA18-074A that confirmed the  Russian government cyber activity targeting important  infrastructure sectors 2019 Venezuela experienced a series of  Blackouts claimed to  be caused by cyberattacks 2020 Dragos presented password-spraying attacks from  Iranian attack group Magnallium (APT33) targeting U.S.  electric utilities, oil firms, and gas companies CISA published an alert describing a ransomware attack that  caused a loss of availability on the operational technology  network of a natural gas compression facility ENTSO-E confirmed a cyber intrusion into its office  network EDP experienced a ransomware (Ragnar Locker) on its  information systems Enel Group hit by Snake ransomware and Netwalker  ransomware K-Electric hit by Netwalker ransomwarepresented password-spraying attacks from the Iranian cyber-
attack group Magnallium, also known as APT 33, targeting
U.S. electric utilities, oil ﬁrms, and gas companies [48], [49].
On February 18, 2020, CISA published an alert describing
a ransomware attack that caused a loss of availability on the
OT network of a natural gas compression facility [50].

On March 9, 2020, the European Network of Transmission
System Operators for Electricity (ENTSO-E) conﬁrmed that
its ofﬁce network suffered a cyberattack [51]. According to
ENTSO-E’s report [52], risk assessment and contingency plans
have been taken to prevent further attacks, but no detailed
information about the cyberattack was given.

On April 13, 2020, Energy company Energias de Portugal
(EDP) experienced a ransomware attack (appeared to be Rag-
nar Locker) on its information systems. The attackers claimed
that they obtained over 10TB of information from affected
systems and demanded 1580 Bitcoin (around $10 million)
[53].

In June 2020, Enel Group, an Italian multinational energy
company, was hit by Snake ransomware [54]. Once again,
in October 2020, Enel Group was infected with another
ransomware named Netwalker. The Netwalker ransomware
operators claimed to have obtained several terabytes of data
from the company, asked bitcoins worth $ 14 million, and
threatened to leak the data if the money was not paid [55]. In
September 2020, the Netwalker ransomware also attacked Pak-
istan’s largest private power company K-Electric for blocking
their billing and online services and asked $3,850,000 worth
of bitcoin [56].

On January 26, 2021, the U.S. CISA published an ICS
advisory [57] that presented some high severity ﬂaws of
the SCADA/HMI products, including Tellus Lite V-Simulator
(Versions before v4.0.10.0) and Server Lite (Versions before
v4.0.10.0) made by Japanese electrical equipment company
Fuji Electric [58]. The ﬂaws could provide attackers with
chances to compromise the systems.

A timeline of cyberattack incidents mentioned in this survey
has been illustrated in Fig. 4. In general, adversaries aim to ob-
tain customer information through eavesdropping, get ﬁnancial
beneﬁts through ransomware, penetrate and sabotage the smart
grid through sophisticated attacks, including phishing emails,
malware, etc. Attacks trying to destroy the smart grid are
more complicated, requiring the cooperation of various types
of attack approaches and turn to be state-sponsored. APT has
become the most severe threat for smart grid entities. In this
survey, we focus on the attacks that cause severe damage to
the smart grid. Therefore, introductions about prevalent attack
approaches are listed in the following part.

B. Prevalent Attack Methods

Cyber attacks are typically discussed from the perspective of
CIA (conﬁdentiality, integrity, and availability) requirements
[59], [60]. The explanation of CIA is listed as follows:

• Conﬁdentiality: Attacks violating conﬁdentiality could
be adversaries illegally accessing unauthorized resources
illegal
by eavesdropping, security mechanism bypass,
escalation of privileges, identity fabricating, etc.

8

• Integrity: Attacks violating integrity will damage the
consistency of data. Adversaries could illegally tamper
or destroy the original stored or transmitted information
to cause direct damages or hide their illegal behaviors for
future intrusions.

• Availability: Attacks violating availability will reject the
regular usage of resources by legitimate users. Adver-
saries illegally consume the computing or communication
resources of the target system so that it is unable to
respond to the normal request of legitimate users. In ad-
dition, adversaries could also intercept the normal request
to make the target service appears to be unavailable.
In this section, prevalent attacks in energy sectors will be
introduced. TABLE II summarizes the involved researches
on the smart grid cyberattacks and their impact on the CIA
requirements.

a) False Data Injection: FDI violates the integrity of
information. Adversaries illegally inject errors or false data to
disturb the normal behaviors of power grid CPS. Tan et al. [64]
presented that FDI attacks on automatic generation control
(AGC) could cause frequency excursion, making generators
disconnecting with customers, even resulting in blackouts.
The authors modeled the attack impact and presented the
optimal attack triggering disruptive remedial actions by FDIs
with minimized remaining time. Ghosh et al. [61] targeted
the FDI attack in the SE, where the supervision and control
data is transmitted on a wireless powered sensor network
(WPSN). The network comprises a central controller (CC) and
multiple sensor nodes (SNs), including active SNs sending
system measurement and idle SNs only transmitting data
of critical events. Among them, adversaries compromise a
subset of idle SNs to inject false data. The authors presented
that allocating optimal power to transmit data over wireless
channels is critical to both protectors and adversaries to detect
FDI or inject false data, respectively. As a result, the authors
formulated the communication between CC and adversaries
as a Bayesian Stackelberg game to solve optimal strategies.
Liang et al. [65] proposed an FDI-based cyber topology attack
which is proved to be able to stealthily add small changes
to the locational marginal price (LMP) to make customers
pay more. Additionally, it disturbs the transactions of the
energy market. It is proved to be effective in mess up with
Australian Electricity market trading mechanisms. Zhang et al.
[63] analyzed the moving target defense (MTD), which is used
to prevent FDI attacks by proactively perturbing branch sus-
ceptances to change system parameters against knowledgeable
adversaries. It concluded the conditions that MTD works even
when the FDI is generated with former breach susceptances.
Bhattacharjee et al. [62] proposed a two-tier data falsiﬁcation
detection scheme in AMI of decentralized micro-grids. The
ﬁrst tier analyzes the harmonic to arithmetic mean ratio of
daily power consumption to conﬁrm an attack. The second
tier veriﬁes the data falsiﬁcation if the sum of residuals is
beyond speciﬁed thresholds.

b) Time synchronization Attack: Services and functions
of the power grid rely on the availability of globally syn-
chronized measurement devices [81]. For time synchroniza-
tion realized with the global positioning system (GPS), the

TABLE II
CYBER ATTACKS, INFORMATION ATTRIBUTES, AND PROPOSED SCHEMES.

Security Issues

Information
attributes

Schemes

Years

References

9

FDI

FDI

FDI

FDI

FDI-based cyber
topology attack

Integrity

Integrity

Integrity

Integrity

Integrity

Allocating optimal power to transmit data over wireless channels for false data
detection and injection by solving a Bayesian Stackelberg game
Comparing the daily power consumption and the sum of residuals with speciﬁed
thresholds
Using moving target defense that proactively perturbs branch susceptances to
change system parameters against knowledgeable adversaries
Modeling the attack impact and presented the optimal attack triggering disruptive
remedial actions by FDIs with minimized remaining time

Stealthily adding small changes to the LMP to make customers pay more

GPS Spooﬁng

Integrity

Detecting GPS spooﬁng based on its C/No in physical layer and detecting the
FDI caused by GPS spooﬁng basing on the SE in upper layer

Integrity

A ﬁrst difference ML model to detect time synchronization attacks

Integrity

Detecting time synchronization attacks with the three-phase model in unbalanced
power systems

Conﬁdentiality

A cross-layer impersonation attack in 4G networks named IMP4GT

Conﬁdentiality

A D-FES method for detecting impersonation attacks from Wi-Fi network data

A self-healing communication scheme against jamming attacks

Summarized the features of 16 widespread IoT malware in the last decade

2020

2021

2020

2017

2017

2014

2017

2021

2020

2017

2015

2019

[61]

[62]

[63]

[64]

[65]

[66]

[67]

[68]

[69]

[70]

[71]

[72]

A novel malware rootkit, named Harvey, targeting the PLC ﬁrmware of the smart
grid CPS

2017

[73]

A review of Mirai, the variant evolution and the compromised devices

2017

[39]

Manipulation of demand via IoT (MadIoT) attacks utilizing the compromised
high-wattage IoT devices constructed botnet to manipulate the total power
demand.
A DoS attack in the AMI network, named puppet attack
A DoS attack on grid-tied solar inverter

A review of APT techniques, solutions and challenges

Adverarial inputs and poisoned model attacks

Membership inference attack

Model inversion attack

2018

2016
2020

2019

2020

2017

2015

[74]

[75]
[76]

[77]

[78]

[79]

[80]

Time
synchronization
attack
Time
synchronization
attack
Impersontion
Attack
Impersontion
Attack
Jamming

Malware

Malware

Botnet

Botnet

DoS
DoS

APT

Attacks against
AI
Attacks against
AI
Attacks against
AI

Availability
Conﬁdentiality,
Integrity,
Availability
Conﬁdentiality,
Integrity,
Availability
Conﬁdentiality,
Integrity,
Availability
Conﬁdentiality,
Integrity,
Availability
Availability
Availability
Conﬁdentiality,
Integrity,
Availability

NA

NA

NA

lack of encryption and authorization mechanisms will allow
adversaries to construct forged GPS signals to disturb the
time synchronization process. Fan et al. [66] proposed a
cross-layer GPS spooﬁng detection scheme towards PMUs,
which detects GPS spooﬁng basing on its carrier-to-noise ratio
(C/No) in the physical layer and detect the FDI caused by GPS
spooﬁng basing on the SE in the upper layer. Wang et al. [67]
introduced the concept of “ﬁrst-difference” from econometrics
and statistics to represent the residual of time-series data.
It
is used for training a ﬁrst difference machine learning
(ML) model to detect time synchronization attacks. Delcourt
et al. [68] investigated the advantages of SE using a three-
phase model instead of the direct-sequence model in detecting
time synchronization attacks. Their work demonstrated the
feasibility of detecting time synchronization attacks with the
three-phase model in unbalanced power systems.

c) Impersonation Attack: Impersonation attack is a way
that adversaries camouﬂage to be the legitimate parties in
a system or a network protocol [82]. Leveraging the LTE
vulnerability of missing integrity protection on the user plane,
Rupprecht et al. [69] proposed a cross-layer impersonation
attack in 4G networks named IMP4GT, which enables ad-
versaries to impersonate the phone or network on the user
plane to send and receive arbitrary IP packets despite any
encryption. Aminanto et al. [70] presented a deep-feature
extraction and selection (D-FES) method composed of an un-
supervised Auto Encoding (AE) feature extractor, a supervised
feature selection, and a neural network classiﬁer for detecting
impersonation attacks from Wi-Fi network data.

d) Jamming: Jamming attacks damage the power grid
by affecting the data transmitting performance of the wireless
channel. Delayed information of time-critical power grid units
could result in improper situation awareness and wrong system

operations to cause severe damages. Liu et al. [71] proposed a
self-healing communication scheme against jamming attacks
in smart grid. It is realized with intelligent local controllers
and a retransmission mechanism to ensure sufﬁcient readings
from smart meters when jamming happens.

e) Malware: Malware represents the software with ma-
licious purposes, including the virus, ransomware, spyware,
worm, etc. Well-known malware targeting national-state ICSs
includes the Stuxnet worm against Iranian nuclear facilities
[34] and the BlackEnergy 3 malware against the Ukrainian
electricity distribution companies [36]. They all caused severe
damage to the electricity facilities and brought terrible inﬂu-
ences to national security and people’s lives. Vignau et al. [72]
analyzed and summarized the features of 16 widespread IoT
malware in the last decade, including Linux.Hydra, Psyb0t,
Chuck Norris, Tsunami/Kaiten, Aidra, Carna, Linux.Darlloz,
Linux.wifatch, Bashlite, Remaiten, Hajime, Mirai, Amnesia,
BrickerBot, IoTReaper, and VPNFilter. Garcia et al. [73]
proposed a novel malware rootkit, named Harvey, targeting the
PLC ﬁrmware of the power grid CPS. It enables adversaries
to cause physical damage and large-scale failures by replacing
legitimate control commands with malicious ones. Besides, it
covers its malicious behavior by injecting operator-expected
measurements observed from a system simulation result with
the original legitimate control command.

f) Botnet: Adversaries infect a number of host devices
and communicate with them to obtain private information
or perform malicious behaviors, e.g., DDoS. It embodies a
network structure named botnet. Fig. 5 illustrated a typical
centralized structure of botnet, which is composed of multiple
compromised devices known as bots, a command and control
(C&C) server to manipulate bots, and the real adversary named
bot master. One of the most inﬂuential botnets, Mirai, has
been introduced previously, which has a serious impact on
cyberspaces’ security. Antonakakis et al. [39] reviewed the
growth of Mirai to a peak of 600k infections in seven months
and provided an analysis of Mirai’s variant evolution, the
the threat
compromised devices, and their concerns about

Fig. 5. Typical centralized structure of botnet.

10

caused by large-scale IoT devices enabled botnet attacks.
Additionally, Soltan et al. [74] demonstrated the feasibility
of utilizing botnet to cause damages to the power grid as
well as disturbing the electricity market. The authors presented
that the Manipulation of demand via IoT (MadIoT) attacks
targeted the load side of the energy supply. It utilizes the
compromised high-wattage IoT devices (e.g., air conditioners,
ovens, heaters, etc.) constructed botnet to manipulate the total
power demand. It will result in the imbalance between energy
supply and demand, bring in frequency instability, increase the
operating cost, and, more severely, cause cascading failures
and blackout.

g) DoS: A denial of service (DoS) attack violates the
availability of data. It exhausts the computing and commu-
nication resources of network nodes or the energy of target
devices to make them inaccessible to their legitimate users.
It results in the unavailability of measurements and makes
power grid components out of service. Yi et al. [75] presented
a DoS attack in the AMI network, named puppet attack.
Adversaries select puppet nodes and send malicious packets to
them. Correspondingly, puppet nodes will generate overmuch
route packets to overload the communication bandwidth of
AMI mesh networks, which results in a DoS. Barua et al. [76]
demonstrated the feasibility of a DoS attack on grid-tied solar
inverter. Adversaries could inject false measurements to spoof
the Hall sensor of an inverter with an external magnetic ﬁeld.
The spooﬁng enabled adversaries to manipulate the inverter’s
output voltage, frequency, real and reactive power and result
in grid failures. In addition, because the inverter is sensitive to
the voltage variation, the overmuch voltage will turn off the
inverter and result in a DoS.

h) APT: Advanced Persistent Threat (APT) refers to a
continuous attack activity carried out by a particular group
or organization on a speciﬁc object. The APT groups could
be nation-sponsored organizations with political and military
purposes. The adversaries usually own rich resources and
professional skills trying to perform concealed long-term
penetration on speciﬁed targets. Their malicious behaviors
could be generally explained by the seven-stage Lockheed-
Martin kill chain model [45] as illustrated in Fig. 6, including
"reconnaissance, weaponization, delivery, exploitation, instal-
lation, command & control, and actions on objectives". A more
detailed description can be found in [77].

i) Attacks against AI: The realization of the DT-based
smart grid relies on massive measurement and system status
data. Its processing requires powerful analysis capabilities
to meet the needs of intelligent services such as real-time
energy regulation, safety supervision, and market analysis.
AI has provided a practical solution due to its powerful
data analysis capabilities. It is being applied to the overall
scenarios of industry production and people’s daily lives. As
well, it plays a vital role in cyber defense. However, the
widespread use of AI has also brought attention to its own
security. Attackers began to study the vulnerability of AI
algorithms and launch attacks against AI for security and
privacy violations. Pang et al. [78] discussed the adversarial
inputs and the poisoned model attacks that signiﬁcantly affect
inputs, adversaries will
AI’s performance. For adversarial

botC&C ServerBot Masterbotbotbotbot11

Fig. 6. Lockheed-Martin cyber kill chain [45].

modify the benign inputs into malicious ones causing ML
models to make wrong predictions. For the poisoned model,
adversaries will add malicious functions into the ML models.
Then the models will trigger inappropriate behaviors when it
receives adversary’s pre-deﬁned inputs. The authors analyzed
the connections between these two attacks and then proposed
a uniﬁed attack framework against AI models. Shokri et al.
[79] proposed a membership inference attack to infer the
private information contained in the training dataset by training
shadow models to verify the difference of ML’s performance
on training samples and ﬁrst encountered samples. Similarly,
Fredrikson et al. [80] proposed a model inversion attack to
infer sensitive features in the model inputs. Given a target
label, the model inversion attack will start inferring its training
input from an initial assumption and gradually add changes
until the model prediction’s conﬁdent value is high enough.
Then the inferred input can be regarded as a similar copy of
the original input, which is sufﬁcient to expose the private
information in it.

V. CRITICAL DEFENSE APPROACHES

To break the knowledge barriers between "SMART GRID,
CYBERSECURITY, and DT",
this section introduces the
critical defense approaches that are promising in protecting in-
dustrial systems like the smart grid. The involved technologies
are illustrated in Fig. 7. Firstly, we introduce device identiﬁ-
cation and vulnerability discovery approaches that target the
vulnerabilities in physical devices and software to realize fast
scan of vulnerable assets, bug patching, and software/ﬁrmware
updating. Then, we review the IDSs targeting the vulnera-
bilities in devices, communications, and software to detect
abnormal host and network behaviors. Moreover, honeypots,
attribution, and TI are presented as an in-depth passive-active
defense solution to prevent sophisticated attacks like APT.

A. Device Identiﬁcation

Large-scale heterogeneous IoT devices usually have dif-
ferent network resource and quality requirements in various
smart grid scenarios. For example, smart kettles and smart
meters vary in data collection and uploading capabilities.
Devices should be allocated with different access authorities
and network resources according to their device type. At this

point, device identiﬁcation is a possible solution. It recog-
nizes the device types and helps to perform statistical and
quantitative analysis of smart grid network assets. It beneﬁts
the formulation of network resource management and access
control strategies speciﬁc to device types, realizing customized
management of smart grid assets.

In addition, device identiﬁcation is useful for the fast
vulnerability discovery of large-scale smart grid devices. Net-
work device identiﬁcation is conducive to the scanning of
network assets. Security experts can maintain a vulnerability
database where each bug is linked with its ﬁrmware and device
type. When a new device is installed or connected into the
smart grid network environment, network administrators could
identify its device type, ﬁnd out the ﬁrmware, and search for
vulnerabilities if there exists any. Therefore, it can realize the
quick vulnerability detection of large-scale smart grid devices
and isolate suspicious equipment.

From the perspective of cyberattacks, device identiﬁcation
can ﬁgure out the granted identiﬁcation of connected devices
and the faithfulness of network access points. Thus, it is help-
ful to resist identity tampering and impersonation attacks. At
the same time, device identiﬁcation can formulate customized
defense strategies based on the device type, such as ﬁrewall
rules and IDS policies speciﬁc to device types.

In summary, device identiﬁcation plays a signiﬁcant role in
smart grid network asset management. It is mainly reﬂected
in the statistical analysis of network equipment assets, the
conﬁguration of network resources, the scanning and isola-
tion of vulnerable equipment, the upgrade and maintenance
of equipment ﬁrmware, and the formulation of customized
defense strategies.

1) Fingerprinting Techniques: Existing device identiﬁca-
tion or ﬁngerprinting methods include passive snifﬁng and
active probing. The passive snifﬁng eavesdrops on the network
trafﬁc or radio frequency (RF) signals to extract device sig-
natures. Differently, the active probing sends request packets
to the target devices and extracts device features from the
responding trafﬁcs. In general, both of the ways generate
device signatures either from RF signals in the physical layer,
trafﬁc packets in the network, transport, and application layers,
or their timing characteristics. Besides, the identiﬁcation (or
classiﬁcation) of the device types is mostly realized on the
AI algorithms. Nevertheless, a few approaches still match

Stage 1Stage 3Stage 2Stage 4ReconnaissanceHarvesting emailaddresses, conferenceinformation, etc.WeaponizationCoupling exploit withbackdoor into deliverablepayloadDeliveryDelivering weaponizedbundle to the victim viaemail, web, USB, etc.ExploitationExploiting a vulnerability toexecute code on victim'ssystemStage 5InstallationInstalling malware on theassetStage 6C&CCommand channel forremote manipulation ofvictimStage 7ActionsWith "Hand on Keyboard"access, intrudersaccomplish their originalgoals12

Fig. 7. Cyber defense approaches

the extracted device signature with a pre-generated ﬁngerprint
database to realize device identiﬁcation.

a) Passive Fingerprinting: Leveraging the control and
data acquisition functions of SCADA protocols, Formby et
al. [91] proposed two device ﬁngerprinting methods targeting
ICS devices. First, regarding the data acquisition functions,
the authors generated device and software type ﬁngerprints
according to the cross-layer response time (CLRT) between
application layer response and TCP layer acknowledgement.
It reﬂects the speed and workload of different IED devices
and is related to the device hardware and software conﬁgu-
ration. The second method regards the control functions of

ICS devices. Devices with different mechanical and physical
properties differ with the operation time, e.g., the time of a
latching relay responding to an operating command. Therefore,
the authors utilized the sequence of event recorder (SER)
timestamp to represent devices’ physical features and realized
the identiﬁcation of device vendors. Moreover, the classiﬁ-
cation is processed by multiple machine-learning algorithms,
including a feed forward artiﬁcial neural network (FF-ANN),
a multinomial naive Bayes classiﬁer, and Gaussian mixture
models (GMM), on a live power substation and controlled
lab experiments. In other words, it is practical for power
grid device ﬁngerprinting. Maiti et al. [89] proposed an IoT

Device IdentificationVulnerability DiscoveryIntrusion DetectionHoneypotAttributionThreat IntelligenceUpdate Defense PoliciesProvide Traceback CluesAsset Management, Network Resource Management,Detecting Camouflaged Device, Access Control StrategiesKnown/Unknown VulnerabilitiesFast Scan for Vulnerable Assets, Bug Patching, Device Updating, Software/Firmware UpdatingAbnormal Host and Network BehaviorsTrap for Malicious Behaviors, Attacker ResourceConsumption, Attack Feature AnalysisIP Address, Attack Path, Malware Authorship, Geographical Locations, Adversarial OrganizationsStrategic TI, Tactical TI, Operational TI, Technical TIReportOptimizeTABLE III
DEVICE IDENTIFICATION TECHNIQUES

13

Scope

Target

Granularity

State

Device

Active

Manufacturer,

Title

S&F

CPS

OWL

Wi-Fi

Audi

SOHO
Network

Yang et
al.

Internet

Yu et al.

ZigBee

SysID

(-)

PrEDeC

Wi-Fi
with
WPA2

IOT SEN-
TINEL

SOHO
Network

Formby et
al.

ICS

CPS
device

Mobile
and IoT
Devices

IoT
Device

IoT
Device

ZigBee
Device

IoT
Device

IoT
Device

IP-
enabled
IoT
Device

ICS
Device

Feature
System and Function Calls,
Memory and CPU Utilization,
Application Execution Time

Protocol Attributes in Broadcast
or Multicast Packets

Timing Characteristics of Periodic
Background Communication
Trafﬁc

Protocol Features from Network
Layer, Transport Layer and
Application Layer

Classiﬁcation

Year

Reference

Matching Signature
Database

2021

[83]

MvWDL

2020

[84]

KNN

2019

[85]

LSTM

2019

[86]

Passive

Selected ROI for RF

MSCNN

2019

[87]

Features Selected by Genetic
Algorithm (GA) from Network
Layer, Transport Layer and
Application Layer Protocols’
Header Field
Header Information, Frame Size,
Timestamp of Link-layer Trafﬁc
Frames

Packet Features during The Setup
Phase between The Newly
Introduced Device and Gateway

DecisionTable, J48
Decision Trees,
OneR, PART

Random Forest,
Decision Tree, SVM

Random Forest,
Damerau-Levenshtein
Edit Distance
Tiebreak

2019

[88]

2017

[89]

2017

[90]

Passive

Cross-layer Response Time, SER
Timestamp

FF-ANN, Bayes
Classiﬁer, GMM

2016

[91] [92]

Passive

Passive

Active

Passive

Passive

Type,
Model

Device
Type

Device
Type,
Vendor,
Product

Device

Device
Type

Device
Model,
Software
Version
Device and
Software
Type,
Vendor

Device
Type

Active,
Passive

GTID

Local
Network

Wireless
Device

Device
Type

Active,
Passive

Timing Characteristics Caused by
The Difference of Hardware
Compostions and Clock Skew

ANN

2014

[93]

device identiﬁcation method named Privacy Exposing Device
Classiﬁer (PrEDeC). It is regarded as a method for attackers
to obtain private information by passively eavesdropping on
link-layer trafﬁc of Wi-Fi encrypted by the Wi-Fi Protected
Access 2 (WPA2) technique. It uses Scapy to extract features
from PCAP ﬁles, and the features are generated from the
header information, the frame size, and the timestamp of each
trafﬁc frame. Moreover, the authors trained Random Forest,
Support Vector Machine (SVM), and Decision Tree models
to realize the device type classiﬁcation. Miettinen et al. [90]
aim to limit the communication of vulnerable devices so as to
mitigate the security risks when adversaries compromise them.
Thus, they proposed IoT SENTINEL to automatically identify
device types in a home or small ofﬁce network environment
composed of IoT devices, wired or wireless network interfaces,
and a gateway router. It passively collects trafﬁc packets
during the setup phases between newly introduced devices and
the gateway. It extracts 23 types of ﬁngerprint features from
IP options, IP addresses, link layer, network layer, transport
layer, and application layer protocols, packet contents, and
port classes. In the experiment, IoT SENTINEL obtained a
dataset of 540 ﬁngerprints for 27 types of devices. Then, the
identiﬁcation combines two steps. Firstly, it trained a binary
classiﬁer with the Random Forest algorithm to tell whether the
device features match any class or not. If the device features
match several device types, it uses Damerau-Levenshtein edit
distance to eventually decide the device identity. Furthermore,

it queries repositories like the Common Vulnerabilities and
Exposures (CVE) [94] database to check the existence of
bugs for vulnerability assessment. Once a vulnerable device
was detected, the security gateway built on the Software-
the
deﬁned Networking (SDN) architecture will constraint
communication and ﬁlter the trafﬁc of detected vulnerable
devices for risk control. Marchal et al. [85] proposed a
passive identiﬁcation system named AUDI. It automatically
identiﬁes the device type of IoT devices connected to the
Small Ofﬁce and Home (SOHO) network gateway. It extracts
the timing characteristics of periodic background network
trafﬁc and uses the unsupervised clustering algorithm, KNN,
to vary different device types. Yu et al. [84] proposed OWL
(Overhearing on Wi-Fi for device identiﬁcation), a mobile
and IoT device identiﬁcation method for Wi-Fi connections,
which only depended on the trafﬁc features extracted from pas-
sively received broadcast or multicast packets. The proposed
method generated device ﬁngerprints according to passively
observed protocol attributes. Then the authors presented a
multi-view wide and deep learning (MvWDL) algorithm for
device identiﬁcation and identiﬁed devices’ manufacturers,
types, and models. Yu et al. [87] proposed a RF ﬁngerprinting
method for ZigBee devices. This method takes the physical
lay features into account for device identiﬁcation. It passively
receives RF signals with a universal software radio peripheral
(USRP). Considering the sleeping mode switching of ZigBee
devices, the authors divide the received preamble signals into

a semi-steady portion and a steady-state portion. Then, they
apply an adaptive region of interest (ROI) selection algorithm
the semi-steady
to decide whether they need to ﬁlter out
features for robust ﬁngerprinting enhancement according to
the signal-to-noise ratio (SNR). For feature extraction and
device classiﬁcation, the authors proposed a multisampling
convolutional neural network (MSCNN), which downsamples
the baseband signals into multiple time scales to improve the
ﬁngerprinting robustness.

b) Active Fingerprinting: Yang et al. [86] presented that
equipment manufacturers implement the network system on
their products in different ways. To realize the identiﬁcation
of device type, vendor, and product, they proposed an active
approach for automatic ﬁngerprinting of IoT devices on the
Internet. First, it actively sends query packets to remote hosts.
In response, it extracts ﬁngerprinting features of 20 protocols
in the response packets from the network layer, transport layer,
and application layer. Then it uses the vector transforming
tool, Glove [95], to represent words into vectors and uses the
neural network algorithm LSTM to process them and realize
identiﬁcation. Babun et al. [83] proposed STOP-AND-FRISK
(S&F) as a host-based CPS device identiﬁcation method to
identify unauthorized or spoofed devices in the CPS envi-
ronment. First, a remote server monitoring CPS environments
will send a secure request to the unknown CPS device. Then,
the device host will extract responding system/function calls
(OS and kernel level features), CPU and memory utilization,
and application execution time (hardware level features) to
generate device signature. Finally, the generated signature will
match a ground-truth device signature database to decide its
identity.

c) Both Passive and Active Fingerprinting: Radhakrish-
nan et al. [93] proposed GTID as a timing characteristic-
based wireless device and device type identiﬁcation system
in local networks. It actively or passively detects devices
according to the different distribution of packet inter-arrival
time observed from the network’s wire side, e.g., a backbone
switch. The ﬁngerprints are generated due to various hardware
compositions and clock skews. It is identiﬁed by an Artiﬁcial
Neural Network (ANN) model to complete the authentication,
access control, network management, and counterfeit device
detection schemes. The authors evaluated their approach in an
isolated testbed as well as a live campus network consisting
of 37 devices like iPhones, iPads, Kindles, Netbooks, Google-
Phones, etc. However, the timing characteristics will be lost
in the buffering of switches or the routers. Therefore, this
method is unsuitable for the Internet but adapts to the local
network device identiﬁcation. Aksoy et al. [88] proposed an
IoT device ﬁngerprinting method named System IDentiﬁer
(SysID). It uses a single TCP/IP packet to identify device
types with high accuracy. SysID collects protocol features
from the network layer, transport layer, and application layer
protocols’ header ﬁeld and applies the genetic algorithm (GA)
to ﬁlter out noisy features. The classiﬁcation is processed
including DecisionTable, J48 Decision
by ML algorithms,
Trees, OneR, and PART. The authors presented that
their
approach is suitable for both active ﬁngerprinting and passive
ﬁngerprinting. They tested their system on 23 IoT devices in

14

the IoT Sentinel dataset [90] and achieved over 95% accuracy.
2) Challenges and Future Works: Device ﬁngerprinting is
meaningful in solving smart grid security issues brought from
large-scale heterogeneous network devices. It helps identify
vulnerable equipment and associates with other security mech-
anisms to build device-speciﬁc protection schemes. However,
besides the original limitations of existing device ﬁngerprint-
ing methods, there are new challenges for the smart grid. The
challenges and future works are summarized as follows.

• Efforts for Smart Grid Device Fingerprinting: According
to our investigation, there are plenty of published re-
searches, but only a few works have focused explicitly on
the smart grid scenarios. More efforts should be made in
future studies to develop smart grid-speciﬁc ﬁngerprinting
methods considering the inherent characteristics of power
system equipment (e.g., packet features from explicit
ICS protocols) to improve the accuracy in the critical
electricity industry.

• Large-scale Heterogeneous Device Identiﬁcation: The
realization of the smart grid with exploitations of DTs
counts on the large-scale terminal devices for data acqui-
sition. The collected information will converge into DT
data and support the functions of DT entities. Therefore,
the identiﬁcation of large-scale heterogeneous power grid
devices will become a novel challenge. It will place
unprecedented requirements on the efﬁciency of device
ﬁngerprinting. Consequently, it is critical to introduce
time overhead as a metric for ﬁngerprinting evaluation.
Fast and large-scale ﬁngerprinting methods will be valued
more than ever.

• Fine-grained Classiﬁcation: As illustrated in TABLE III,
most researches focused on the identiﬁcation of device
type, manufacturers, and product models. On the one
hand, it indicates that far more ﬁne-grained device iden-
tiﬁcation is hard to realize, e.g., identifying the software
installed in physical devices. On the other hand, ﬁne-
grained identiﬁcation accompanied by a large volume of
identity labels brings the classiﬁcation too much burden.
As a result, for future works, it is necessary to discuss the
speciﬁc identiﬁcation purposes and security mechanisms
before deﬁning the ﬁngerprint granularity. Moreover, the
large volume of ﬁngerprint labels reduces the value of ac-
curate supervised learning-based classiﬁcation because it
requires a well-designed database which costs expensive
human efforts to maintain. Thus, unsupervised learning
will present its potentials in future works.

• Balance between Passive Fingerprinting and Active Fin-
gerprinting: Fingerprinting methods involve active prob-
ing and passive snifﬁng. Active ﬁngerprinting achieves
high accuracy by probing network devices with additional
packets. However, power grid administrators might not be
willing to take the risk of port scanning, especially for
devices executing critical tasks as well as the vulnerable
legacy devices [91]. On the other hand, passive ﬁnger-
printing usually needs additional equipment (e.g., USRP)
for network snifﬁng. It is far more expensive. Therefore,
researchers should balance the choices between passive
and active ﬁngerprinting approaches.

• Phases of Identiﬁcation in Devices’ Life Cycle: Device
ﬁngerprinting could be processed during the device access
phase, resource interaction phase, or the whole process
in the devices’ life cycle. Fingerprint features vary from
different stages. Therefore, researchers should determine
their target before selecting identiﬁcation approaches.
• Feature Selection: In general, widely utilized features
are extracted from the RF signals, network trafﬁc, and
timing characteristics. It varies from the physical layer,
network layer, and application layer. In order to realize
a ﬁne-grained identiﬁcation of heterogeneous power grid
devices, it is necessary to merge features from different
aspects and select proper ones for accurate ﬁngerprinting.
Meanwhile, it is worth noting that power grid IoT de-
vices usually have less trafﬁc data comparing to ordinary
terminal devices. It samples and sends electrical data
with a speciﬁc period. Devices work in a sleeping mode
to save energy. Therefore,
identiﬁcation methods that
require dense data will no longer be applicable. Future
works need to realize the identiﬁcation with fewer trafﬁc
packets.

In summary, future works should focus on the efﬁciency and
granularity of device ﬁngerprinting methods and make more
efforts on the identiﬁcation of smart grid-speciﬁc devices.

B. Vulnerability Discovery

The software or ﬁrmware installed in the massive smart grid
devices might hold harmful program vulnerabilities. Attackers
could exploit them to penetrate the power systems and access
DT models to steal sensitive information, tamper with critical
data, and forge control commands to affect the safety and
reliability of the power grid systems or DT entities. Therefore,
the vulnerability discovery approaches are essential in identify-
ing vulnerable devices, patching detected bugs, and managing
smart grid assets.

1) Vulnerability Discovery Technologies: Vulnerability dis-
covery technologies are sorted in different ways. Based on the
analysis object, they can be classiﬁed into source code analysis
and binary analysis. Depending on whether the program is
running, detection methods can be considered as static and
dynamic analyses. Additionally, from the perspective of anal-
ysis methods, software analysis includes symbolic execution,
fuzzing, taint analysis, ML-based analysis, etc. This section
reviews the recently published or widely used vulnerability
discovery works. It is expected to provide possible solutions
in detecting vulnerabilities in the smart grid context.

a) Dynamic Taint Analysis (DTA): She et al. [96] stated
that the existing DTA methods follow the taint propagation
rules to spread taint labels from source to sink. However,
it is hard to draft rigorous taint propagation rules describing
the overall situations precisely. DTA may suffer a high false
alarm rate and the running time overhead for dynamic analysis.
Consequently, the authors choose to embed a neural network
model into the program to describe the information ﬂows
between source-sink pairs. With the assistance of a saliency
map, the proposed system Neutaint is able to ﬁnd out the
sensitive input bytes that have the most signiﬁcant impact on

15

the output values. Subsequently, it could be used to guide
fuzzing tools for better performance.

b) Symbolic Execution: Symbolic execution represents
program inputs and variables in symbolic format. Each path
holds a set of constraints. When the path ends or triggers a bug,
the constraint solver will ﬁgure out the concrete input space
to reach the branch. Poeplau et al. [97] and Baldoni et al.
[98] summarized the existing symbolic execution techniques,
including well-known KLEE [99], S2E [100], angr [101], and
QSYM [103], etc. Among them, KLEE faces source code,
while S2E, angr, and QSYM deal with binaries.

c) Fuzzing: Fuzzing is a crucial method for vulnerability
detection. Generally, it generates various program inputs to
explore as many program traces as possible. By monitoring the
dynamic program performance, fuzzing tools could discover
the potential vulnerabilities. Currently, plenty of outstanding
researches has been published. One of the most inﬂuential
works is American fuzzy loop (AFL), which realizes in-
strumentation in compile-time and applies the genetic algo-
rithm to generate valuable test cases triggering new program
behaviors [104]. It inspired many other consecutive works
like AFL++ [105], AFLFast [106], Firm-AFL [107], etc. In
addition, many researchers dedicated to enhancing fuzzer’s
performance in different ways. Most fuzzers use coverage
as the metric to guide seed selection. However, sensitive or
ﬁne-grained coverage metrics could select overmuch seeds,
exceeding the fuzzer’s scheduling ability and resulting in
the seed explosion problem. Therefore, Wang et al. [108]
proposed a hierarchical seed scheduling method based on
reinforcement learning to overcome seed explosion. Lyu et
al. [109] proposed an optimized mutation scheduling scheme
MOPT to enhance the efﬁciency of fuzzers for generating
valuable test cases. For mutation-based fuzzers, the mutation
operator deﬁnes the mutation rules about where to mutate
(which byte) and how to mutate (e.g., adding, removing, or
replacing bytes). Mutation scheduling is the mutation operator
selecting choices during different phases of fuzzing. The
selection follows a probability distribution, and the purpose
of [109] is to ﬁnd the optimal one to generate more valuable
mutations. MOPT applied the particle swarm optimization
(PSO) algorithm to ﬁgure out probability distribution’s optimal
solutions. Additionally, the authors applied MOPT to well-
known fuzzers, including AFL [104], AFLFast [106], and
VUzzer [110]. As expected, MOPT-based fuzzing obtained
better performance (e.g., MOPT-AFL discovered 170% more
security vulnerabilities and 350% more crashes). Besides,
taint analysis and symbolic execution are often used to guide
fuzzers. For example, Gan et al. [111] presented a taint-guided
fuzzing method named GREYONE. GREYONE is composed
of four parts, including fuzzing-driven taint inference (FTI),
taint-guided mutation, core fuzzing, and conformance-guided
evolution. Firstly, the FTI module infers the taint by monitor-
ing variables’ value changes caused by input byte mutation.
If the value of variables changes with the mutation of input
bytes, it implies that the variable is tainted. Then, the taint
inferred from FTI will guide the input byte mutation for
generating fuzzing test cases. It optimized fuzzing speed by
prioritizing the mutation of input bytes that inﬂuence more

16

TABLE IV
SUMMARY OF VULNERABILITY DISCOVERY RESEARCHES

Name or Authors
Neutaint
Sebastian et al.
Roberto et al.
KLEE
S2E
angr
QSYM
AFL
AFL++
AFLFast
Firm-AFL
Wang et al.
MOPT
Vuzzer
GREYONE
Angora
VulDeePecker
𝜇VulDeePecker
SySeVR
Devign
Karonte
SaTC
Ying et al.
Yoo et al.
BinArm
EVA

Technique
DTA, Neural Network
Symbolic Execution (Survey)
Symbolic Execution (Survey)
Symbolic Execution
Symbolic Execution
Symbolic Execution
Symbolic Execution
Fuzzing
Fuzzing
Fuzzing
Fuzzing
Fuzzing, Reinforcement Learning
Fuzzing
Fuzzing
Taint-guided Fuzzing
Taint-guided Fuzzing
Deep Learning
Deep Learning
Deep Learning
Graph Neural Network
Static taint analysis
Symbolic Execution
Pattern Matching
Fuzzing, DTA
Matching
Symbolic Execution

Object
Binary
-
-
Source Code
Binary
Binary
Binary
Binary
Binary
Binary
Binary
Binary
Binary
Binary
Binary
Binary
Source Code
Source Code
Source Code
Source Code
Multi-binary
Multi-binary
Source Code
Binary
Binary
Binary

State
Dynamic
-
-
Static
Static
Static
Static
Dynamic
Dynamic
Dynamic
Dynamic
Dynamic
Dynamic
Dynamic
Dynamic
Dynamic
Static
Static
Static
Static
Static
Static
Static
Dynamic
Dynamic
Static, Dynamic

Year
2020
2019
2018
2008
2012
2017
2018
2013
2020
2017
2019
2021
2019
2017
2020
2018
2018
2019
2021
2019
2020
2021
2019
2016
2018
2017

Domain
General
General
General
General
General
General
General
General
General
General
IoT Firmware
General
General
General
General
General
General
General
General
General
IoT Firmware
IoT Firmware
Power Grid
Power Grid
Power Grid
Power Grid

Reference
[96]
[97]
[98]
[99]
[100]
[101] [102]
[103]
[104]
[105]
[106]
[107]
[108]
[109]
[110]
[111]
[112]
[113]
[114]
[115]
[116]
[117]
[118]
[119]
[120]
[121]
[122]

untouchable paths and the exploration of paths affected by
the authors presented constraint
more input bytes. Lastly,
conformance as a data ﬂow feature to select suitable seeds
for mutation and explore new paths. GREYONE combined
taint analysis with fuzzing to guide the evolution direction of
fuzzing and improved the mutation efﬁciency. Chen et al. [112]
presented that fuzzers using symbolic execution to solve path
constraints will consume too much time. Therefore, Chen et
al. [112] provided a mutation-based fuzzing method in solving
path constraints by tracking taints in the byte-level, counting
branches, and exploring input length.

d) Deep Learning-based Vulnerability Discovery: From
2018 to now, a research team published several deep learning-
based methods [113]–[115] for the detection of Library/API
function call related vulnerabilities in C or C++ source code.
Li et al. [113] focused on detecting vulnerabilities caused
by improper usage of Library/API function calls, such as
resource management errors and buffer errors. The authors
indicated that software vulnerabilities should not be analyzed
without considering the program context. AI algorithms ca-
pable of processing program context should be preferentially
recommended for the task of vulnerability detection. Due to
the similarity of source code analysis and natural language
processing (NLP), ideas or algorithms in the NLP ﬁeld could
be borrowed and applied to software analysis. Besides, the
authors pointed out that to precisely identify the vulnerability
locations, the granularity of software analysis should not be
limited to the program or function level. Therefore, the authors
proposed “code gadget” as the basic classiﬁcation unit for AI-
based vulnerability detection. Essentially, the code gadget is
the extracted code fragments that have semantic relationships
in the initial source code. In order to form code gadgets, they

ﬁrstly identiﬁed Library/API function calls among the original
code. Then, they generated data dependency graphs with the
help of the commercial tool Checkmarx. Based on the graphs,
they reorganized the program statements that share the same
data ﬂow with the identiﬁed Library/API function calls and
formed code gadgets. Finally, the code gadget was vectorized
to identify
and used as the input of the BLSTM model
whether there exist vulnerabilities in the program. Zou et al.
[114] improved their previous approach and realized multi-
classiﬁcation for software vulnerabilities. Differently, inspired
by the concept of “region attention” (image ﬁelds providing
more information for classiﬁcation) in the image processing
ﬁeld, the authors proposed “code attention” indicating pro-
gram statements that provide more valuable information for
vulnerability detection. Speciﬁcally, for vulnerabilities caused
by improper usage of Library/API function calls, program
statements like Library/API function call, parameter deﬁnition,
and control conditions should reveal more clues about the
vulnerability. Therefore, the system formed code slices based
on the three syntax features above to generate code attentions.
Besides, based on the work in [113],
the authors added
control-ﬂow features into the original code gadget generation
scheme. The ML model added one more BLSM module to
process the features from both code gadgets and code attention.
Then, an additional merge module will combine them for
better classiﬁcation. Similarly, Li et al. [115] were inspired
by the concept of “region proposal” in image processing
and presented that the key point of detection is to extract
interesting regions in the code (vulnerable code segment) for
analysis. The system extracts syntax features (such as function
call, array usage, pointer usage, arithmetic expression, etc.)
based on Abstract Syntax Tree (AST). In addition, the system

extracts program slices with semantic features according to
the program dependency graphs generated by the open-source
tool, Joern. Consequently, both the syntax features and the
semantic features are considered in the software analysis
system and used as the input for different AI classiﬁcation
models.

e) Graph-based Vulnerability Discovery: Zhou et al.
[116] presented the vulnerability detection approaches that
process programs as ﬂat text sequences using NLP algorithms
can only represent partial features of the original programs.
However, the program statements themselves possess far more
complicated structures and logic features. Consequently, Zhou
et al. [116] proposed Deep Vulnerability Identiﬁcation via
Graph Neural Networks (Devign) to identify the existence of
vulnerabilities in source code functions. It includes a Graph
Embedding Layer, Gated Graph Recurrent Layer, and the
Conv Layer. The Graph Embedding layer represented the
source code functions as a joint graph, which combined Data
Flow Graph (DFG), Control Flow Graph (CFG), AST, and
Natural Code Sequence (NCS) for exhaustive representation
of program semantic features. The Gated Graph Recurrent
layer learns the characteristics of nodes by gathering and
transferring information about neighboring nodes in the graph.
Then, the Conv layer extracts node representations for graph-
level prediction to identify vulnerabilities.

f) IoT Firmware Analysis: Redini et al. [117] indicated
that embedded devices are composed of interconnected com-
ponents like binary executable ﬁles or modules of a giant em-
bedded OS. Different components communicate and cooperate
with each other to ﬁnish various tasks. Attackers’ input from
outside the network will not only affect binary ﬁles directly
facing the network, but also other binary ﬁles. Any analysis
that only focuses on these network-oriented binary ﬁles will
omit the vulnerabilities in other binary ﬁles, resulting in a high
false-negative rate (FNR). Therefore, the authors proposed a
multi-binary vulnerability detection method, Karonte, targeting
embedded device ﬁrmware. Karonte uses static analysis to
link data-connected functions through multi-binary ﬁles so that
tracking data ﬂow through binaries is possible. Vulnerabilities
crossing binary ﬁles triggered by the attacker’s input can
then be discovered by Karonte. Chen et al. [118] leveraged
the common input keywords shared by frontend and backend
binaries in embedded devices to fasten the locating of backend
program statements processing user input data. Hereafter,
vulnerabilities caused by user input can be analyzed more
effectively by the proposed static taint checking system, SaTC,
which is developed on the symbolic execution tool angr [101].
The authors also compared SaTC with Karonte and claimed
that SaTC discovered more bugs in embedded systems.

g) Smart Grid-speciﬁc Vulnerability Discovery: Cur-
rently, vulnerability detection methods speciﬁc to power grid
scenarios still account for a small proportion. Ying et al. [119]
proposed a static source code analysis method for smart grid
devices to detect buffer overﬂow vulnerabilities by matching
extracted features with pre-deﬁned vulnerability patterns. Yoo
et al. [120] proposed a grammar-based fuzzing method for
SCADA systems. It analyzes programs with DTA to ﬁnd out
input satisfying the dependency relationships within execution

17

paths and grammar constraints for SCADA’s protocols like
Modbus. Shirani et al. [121] proposed BINARM aims to detect
vulnerabilities of IED ﬁrmware with ARM architecture. It
ﬁrstly maintains a database with IED ﬁrmware and vulnerabil-
ities by identifying various IED manufacturers, collecting their
provided IED ﬁrmware, identifying used libraries, and looking
for related CVE vulnerabilities. Then, the system matches
the target ﬁrmware with the database to ﬁnd out vulnerable
functions. Targeting AMI and EV charging systems in ARM
architecture, Kwon et al. [122] proposed a binary analysis
method combining static analysis and dynamic analysis to
discover security-critical vulnerabilities.

2) Challenges and Future Works: The vulnerability de-
tection of the power grid involves software and ﬁrmware
analysis of traditional computer systems, ICS, and power grid
terminal IoT devices. The challenges and future works can be
summarized as follows.

• Lack of Dedicated Tools: Genetic vulnerability detec-
tion tools are not dedicated to analyzing power sys-
tems. Developers are not familiar with power grid de-
vice functions, program features (e.g., inline assembly),
code libraries, and potential bugs. Vulnerability detection
methods designed for general purposes may have an
excessively high FNR while analyzing software of power
grid equipment. Therefore, vulnerability detection tech-
niques targeting power systems should be developed and
consider the speciﬁc features of vulnerable power grid
software during the development and training processes.
• Source Code Hard to Obtain: The source code of IoT
device ﬁrmware is usually hard to obtain. The ﬁrmware
published by device manufacturers is usually a set of
binaries. Analyzers collect device ﬁrmware through web
crawling or downloading from the manufacturer’s ofﬁcial
websites, but
in most cases, further works can only
be done on the basis of binary ﬁles or intermediate
representation (IR). As a result, despite source code can
provide more detailed syntax and semantic features, it
will be binary analyzing techniques playing an essential
role in power grid IoT device analysis.

• Binary Analysis: Most binary analyzing works focus on
detecting vulnerabilities in a single binary ﬁle. However,
IoT ﬁrmware is usually constituted by several binaries.
Different binary ﬁles share data to perform the tasks of
the device. Nilo et al. [117] presented that vulnerabilities
triggered by the malicious input from external sources,
e.g., through the network, may affect other binary ﬁles
that are not directly facing the network. Therefore, the
analysis only focusing on a single binary ﬁle will produce
an unacceptable number of false alarms. However, in
the 29 works listed in TABLE IV, only two of them
studied the multi-binary or cross-binary vulnerability de-
tection methods, which is far from enough. As a result,
future researchers should make more efforts to explore
the vulnerabilities across multi-binaries. Moreover, for
vulnerability detection methods that match ﬁrmware with
vulnerability database, it is also essential to collect com-
prehensive ﬁrmware and power system vulnerabilities to
form a ﬁrmware-vulnerability database.

• Evaluation of Detection Tools: Due to the lack of a
benchmark dataset of software vulnerabilities, existing
works evaluate their detection tools by how many CVE
bugs they could ﬁnd. However, different experiment se-
tups could lead to different results. There is no fair way
to compare different detection tools. Besides, this method
cannot tell how many bugs will the detection method
miss. In other words, it cannot reﬂect their FNR. To the
best of our knowledge, vulnerability generation could be a
hopeful solution by artiﬁcially generating a vulnerability
dataset. Future works could follow the idea to construct
a standardized test dataset of power systems and evaluate
the performance of various detection tools.

C. Intrusion Detection

Intrusion detection systems (IDSs) are applied to monitor
network or computer system events, discover signs of secu-
rity issues, and generate alarms when suspicious activities
are detected [123], [124]. Malicious activities failed to be
prevented by the ﬁrewalls, access control, and authentication
mechanism in the ﬁrst place need to be detected by the IDS.
Once cyber threats are discovered, they will be mitigated with
pre-established security plans. Besides, IDS could cooperate
with other security mechanisms. With device identiﬁcation,
it is feasible to make device type-speciﬁc detecting rules to
improve IDS’s accuracy. With honeypots, the IDS could assign
the original malicious activities to a virtual environment to
deceive attackers keeping interactions so that analysts could
better extract attack characteristics and analyze their purposes.
Additionally, IDS is an important source in generating TI.
Conversely, TI could also update IDS rules to enhance its
performance.

This section introduces the IDS technologies and discuss

the challenges and future works in the smart grid.

1) IDS Technologies: IDSs can be classiﬁed in different
ways. The taxonomy is illustrated in Fig. 8 and a comparison
of each type of IDS is presented in TABLE V.

Many works have deployed IDSs in the smart grid con-
text. Lin et al. [125] proposed a semantic analysis frame-
work combining network-based IDS (NIDS) with power ﬂow
analysis to estimate the execution consequences of SCADA
control commands. Firstly, the NIDS is speciﬁcation-based
and is implemented by Zeek (formerly named Bro) [126],
an open-source NIDS tool, to identify control commands on
the SCADA network. Then, the extracted control commands
are further processed by the power ﬂow analysis software for
predictive evaluation on their execution consequences. The
results show that the semantic analysis framework achieved
anomaly detection with 0.78% FPR and 0.01% FNR in 200ms
for the large-scale 2736-bus system, satisfying the fast re-
sponse requirement in SCADA systems. Hong et al. [127]
targeted cyber threats against substations and proposed an
anomaly-based collaborative IDS (CIDS) for IEC 61850-based
substation automation systems. It includes both host-based IDS
(HIDS) and NIDS to detect attacks targeting a single substa-
tion or simultaneously against multiple substations. It uses a
WSU substation automation testbed to simulate simultaneous

18

attacks against various substations. The proposed HIDS detects
temporal anomalies according to system event logs generated
from substation facilities like circuit breakers, IEDs, and user
interfaces. An event log matrix is deﬁned where each row
represents same substation’s anomaly indicators with consec-
utive time instants. Each column indicates host-based anomaly
behavior in a certain type. By comparing consecutive row vec-
tors, the proposed HIDS is able to detect temporal anomalies.
It is further developed to discover simultaneous attacks among
multiple substations by comparing the similarity of the event
log matrix. Besides, the proposed NIDS detects malicious mul-
ticast messages, such as Sampled Measured Value (SMV) and
GOOSE. The simultaneous intrusion detection method shows
the ability to detect threats targeting multiple substations and
identifying their locations. The proposed NIDS is a rule-based
detection method by matching the multicast message packets
with predeﬁned rules. Thus, it is unable to detect unseen or
unknown threats.

Besides, most of the recent IDS works are implemented with
the assistant of ML due to its excellent performance in extract-
ing features and detecting unseen or unknown cyberattacks.
Depending on whether the training data is labeled or not, ML-
based IDS can be classiﬁed into supervised, unsupervised, and
semi-supervised. Supervised Learning trains detecting models
with labeled dataset. It aims to ﬁnd a map between inputs
and their corresponding output. Representative approaches
are classiﬁcation and regression. Unsupervised learning trains
models with unlabeled data. It aims to ﬁnd the similarity
among input data and classify them according to the similarity
distance. A typical unsupervised learning approach is clus-
tering, where heterogeneous data are classiﬁed with metrics
like Manhattan, Euclidean, and probabilistic distance [128],
[129]. Semi-supervised Learning trains detecting models using
both labeled and unlabeled data. He et al. [130] presented
a deep learning based IDS to detect FDI attacks, especially
those aiming at electricity theft, in real-time. The proposed
method contains a Deep-Learning Based Identiﬁcation (DLBI)
and a State Vector Estimator (SVE). Firstly, the SVE detection
scheme calculated the norm of measurement residual to detect
the rest of
bad data or maliciously injected data. Then,
data will be processed by the DLBI for further evaluation.
DLBI scheme uses Conditional Deep Belief Network (CDBN),
which integrated the standard structure of deep belief networks
with Conditional Gaussian-Bernoulli Restricted Boltzmann
Machines (CGBRBM), to recognize the patterns of previous
measurement data and use extracted features to detect FDI
in real-time. The authors tested their detection scheme on
IEEE 118-bus and IEEE 300-bus systems. They evaluated it
with different previous-time observation window sizes, number
of compromised measurements, number of hidden layers,
environment noise levels, and the threshold value of SVE.
Compared to SVM-based and ANN-based IDS, their scheme
presented high detection accuracy even with occasional oper-
ation faults. Also targeting energy theft behaviors, Yip et al.
[131] proposed two linear regression-based algorithms to iden-
tify fraudulent customers and locate defective smart meters in
the NAN. The authors presented that the energy consumption
reported by smart meters on the consumer side should match

19

Fig. 8. Taxonomy of IDS.

the data recorded in collectors of electricity providers such as
the substation. The deviation reveals the occurrence of energy
theft or the existence of smart meters that are defective or
compromised. As a result, the authors proposed two linear
regression algorithms naming LR-ETDM and CVLR-ETDM,
where CVLR-ETDM is an enhanced version due to the
unstable performance of LR-ETDM in detecting inconsistent
energy thefts. Faisal et al. [132] aim at detecting anomalies
in the AMI networks. They regard network data as the stream
because it is usually large, continuous, and fast transmitted
in AMI networks. The authors chose seven classiﬁcation
algorithms of the Hoeffding tree in an open-source stream
mining framework MOA [133]. Because the smart meter, data
concentrator, and headend vary in computing and memory
resources, they evaluated them with accuracy and, speciﬁcally,
the memory and time consumption. In addition, the authors
comprehensively discussed the locations to deploy IDSs in the
AMI. They proposed a less expensive way to install them in
the existing AMI components. In order to develop a context-
adaptive and cost-effective IDS, Sethi et al. [134] proposed a
hierarchical Deep Reinforcement Learning (DRL)-based IDS
for accurate detection of novel and complicated cyberattacks.
The proposed model consists of central IDS, distributed agent,
state, action, and reward. The central IDS receives the actions
made in agents and feedback reward to renew DRL model’s
parameters. When the agent’s classiﬁcation result is the same
as the real result, the classiﬁer will get a positive reward. The
distributed agents are deployed in routers k-hop away from
the central IDS and collect packets from corresponding end
nodes. Data preprocessing and feature selection are executed
in the agents, and the classiﬁcation results are transmitted
into the central IDS. To improve the robustness of their
proposed model against adversarial samples, where attackers
make small changes on the inputs to mislead the classiﬁcation
models, the authors tested their model with perturbations in
their dataset and implemented a denoising autoencoder as
a way to ﬁlter the perturbation of the data inputs. Their
model was evaluated with three datasets, NSL-KDD [135],
UNSW-NB15 [136], and AWID [137]. It presented an adaptive
feature and robustness compared to other models. Wang et al.
[138] proposed the AdaBoost algorithm for multi-classiﬁcation

problems in detecting smart grid anomalies. It contains several
classiﬁers which generate multiple predicted labels for the
given input data. The classiﬁers are assigned with different
weights according to the accuracy ratio on the training set
of each classiﬁer. In the end, the classiﬁers will vote for the
ﬁnal classiﬁcation of the data. Feature construction and data
processing were included in the training of the detection model
and presented effectiveness in improving model accuracy. The
model was trained and evaluated by an open-source PMU
dataset in [139]. Compared to other ML algorithms, such as
KNN, SVM, GBDT, XGBoost, and CNN, it achieved 93.91%
accuracy and 93.6% detection rate higher than eight other
prevalent techniques. Otoum et al. [140] proposed a Rein-
forcement Learning-based IDS for wireless sensor networks
(WSN). The presented Q-Learning-based model and their
previously proposed Adaptive ML-based IDS were tested in a
WSN with twenty sensors and evaluated on the KDDCup99
dataset [141]. They claimed that the Q-Learning-based model
achieved almost 100% success in detection, accuracy, and
precision-recall rates, whereas the Adaptive ML-based IDS
could achieve accuracy slightly above 99%. Al et al. [142]
discussed the evaluation methods used in previous approaches
and demonstrated that high accuracy could be reached for most
of the ML models with properly tuned hyperparameters. In
most research, the training and testing stages are processed
on the same datasets sampled in the same environment having
similar statistical distribution. The models evaluated by these
strategies cannot truly reﬂect the practicality and performance
in the real world. The models with high accuracy might be
overﬁtting based on the speciﬁed dataset. It is hard to tell
whether the model really learned the pattern of attacks or just
represented a particular dataset. Therefore, the authors in [142]
proposed an alternative evaluation strategy where different
datasets with compatible sets of features are used for training
and testing. The authors suggested to train and evaluate models
using multiple datasets. It can be also used to assess the ability
to detect zero-day attacks by checking whether the model can
discover unseen attacks existing in another dataset.

2) Challenges and Future Works: The challenges and future
works of applying IDSs in smart grid context are listed as
follows.

 IDS Types HIDS NIDS CIDS Detection Method Signature-based Anomaly-based Specification-based Architecture Centralized Decentralized Distributed Machine Learning Supervised Unsupervised Semi-supervisedTABLE V
COMPARISON OF DIFFERENT TYPES OF IDSS

20

• Lack of Benchmark Datasets: We notice that many re-
searchers still use outdated open-source datasets (e.g.,
KDD cup 99 developed in 1999 and NSLKDD devel-
oped in 2009) to train their detection models. These
datasets could no longer represent the features of novel
cyberattacks. Researches established on these datasets
may have academic meanings but are impractical
to
detect intrusions in real-world systems. Therefore, up-
dated benchmark datasets are needed to cover features
of prevalent attacks for supporting the development of
novel IDSs and evaluating their performance.

• Fast Detection in Time-sensitive Smart Grid Applications:
Smart grid applications could be time-sensitive. IDSs
should satisfy the time constraints without adding large
latency to the original communication channels. There-
fore, IDSs have to work at near real-time either through
enhancing the detection approaches or improving the
computing and storage resources in the detecting points.

• Trade-off between Accuracy and Complexity: Resource-
limited terminal devices and network nodes carrying de-
tection tasks in the smart grid have decided the upbound
complexity of intrusion detection algorithms. Lightweight
IDSs are needed as a trade-off between accuracy and
resource consumption. It
is challenging because low
accuracy means smart grid devices and networks can not
be adequately protected, and the high FPR wastes hu-
man efforts for further conﬁrmation. Therefore, resource
consumption needs to be included in the design and
evaluation phases of developing IDSs.

• Robustness and Security of the ML-based IDS: Despite
the advantages of ML-based detection approaches, the
security vulnerabilities that existed in ML itself are also
an important problem for recent researches. Firstly, ML
algorithms highly depend on the quality of the training
dataset. The models are built with the assumption that
training and testing datasets have the same distribution

FeaturesAdvantagesDisadvantagesHIDSMonitor system calls, logs,etc.Prevent internal attacks; Informative,providing rich clues of the root causesConsuming additional resources of the host;Hard for large-scale updating; Insufficient forAPTNIDSMonitor inbound andoutbound trafficsPrevent external intrusions; Providetraceback informationDifficult in detecting encrypted packets;High false alarm rate facing unknown orunseen traffic patterns; Slow detectionCIDSContaining both HIDS andNIDSSituational awareness capability; Bettereffects in defending APTHard to deploy; CostlySignature-basedIDSMatch predefined signaturedatabase of abnormalbehaviorsEasy to deploy; Low FPR in detectingknown attacksHigh FNR in detecting unknown or unseenattacks; Frequent updating of the signaturedatabaseAnomaly-basedIDSDetect deviation from normalbehaviorsHard to bypass; Good at detecting unknownand unseen threatsHigh FPR in detecting unseen normalbehaviors; Require updating of normalbehavior profilesSpecification-based IDSFollow the specificationsmade by expertsHigh accuracyLack scalability; Rely on human experts;ExpensiveCentralized IDSSingle unit for analyzingtasksEasy to deploy; Fast response; Powerfulcomputing and storage capabilitiesPoor scalability, reliability, and resilience;Infeasible for frequent maintenanceDecentralizedIDSMultiple analyzing unitsHigh efficiency; Suitable for time-sensitiveapplications;  Situational awareness; BetterreliabilityComplicated; CostlyDistributed IDSEach node acts as bothmonitor and analysis unitBetter scalability; High EfficiencyComplicated; Costly;  Constrained bynode's computing and storage resourcesSupervisedLearningTrained with labeled dataWidely used; Good at detecting knownattacksRelying on the well-labeled training data;Overfitting issueUnsupervisedLearningTrained with unlabeled dataNo need of labeled data; Good at detectingunknown attacksHigh FPRSemi-supervisedLearningTrained with both labeled andunlabeled dataHigh accuracy; Low FPRComplicated; Less developedCategoryAnalyzeddataDetectionmethodsArchitectureMachinelearning[143], which means that the data is usually sampled from
the same network system environment. The model will
have bad performance on the input data that does not
belong to any classes of the training dataset. Moreover,
the detection results of ML-based approaches depend on
the input data and the parameters of detection models. It
can be utilized by adversaries to evade detection systems
by model inversion [80], data poisoning [144] or model
evasion attacks [145]. Adversarial examples [146] can be
artiﬁcially generated to misguide the prediction result of
detection models. In addition, due to the vulnerabilities
of ML models, valuable information about power sys-
tems, customers, and detection models can be intercepted
or inferred by adversaries through model inversion and
membership inference attacks [79].

D. Honeypot

To provide deep protection of the smart grid, the honeypot
plays an important role in distracting adversaries’ attentions,
analyzing intrusion features, and capturing the evidence of
illegal activities. It is designed as a vulnerable target that is
attractive for intruders to compromise. It deceives attackers
either with real devices or simulating their services and
vulnerabilities to provide realistic responses [147], [148].
Besides, honeypots keep interacting with adversaries to collect
information for the analysis of attack features, tools, purposes,
and strategies. It provides evidence of malicious activities
intruding the smart grid systems and helps to establish the
threat models so that defending approaches like the IDS could
be updated based on them. Moreover, the honeypot consumes
the time and computer resources of adversaries. The intrusion
cost and risks of being captured will signiﬁcantly increase. As
a result, it is regarded as an active way to prevent attackers
from penetrating smart grid systems and generate TI for long-
term defense [148], [149].

This section introduces the honeypot and discusses its

challenges and future works in the smart grid.

1) Honeypot Technologies: Honeypots can be classiﬁed in
different ways. The taxonomy and comparison of different
types of honeypot is presented in TABLE VI.

Many works have deployed honeypots in the smart grid
context. Conpot [150] is a widely used LIHP targeting ICS.
It is easy to be deployed, modiﬁed, and extended. It could be
expanded with novel conﬁguration templates in the Extensible
Markup Language (XML). It has been used to emulate ICS
devices such as Kamstrup 382 smart meter and Siemens S7-
200 PLC. It supports various protocols including TFTP/FTP,
Modbus, SNMP, EtherNet/IP, IEC-104, and BACnet [148].
Jicha et al. [151] analyzed and evaluated Conpot on AWS.
They comprehensively described the experiment setup process
of Conpot and the deployment of AWS. The authors de-
ployed honeypots emulating Siemens SIMATIC S7-200 PLC,
Guardian AST gas pump, IPMI, and Kampstrup smart meter
devices. They evaluated Conpot with port scanners from Nmap
and Shodan [152]. The results proved that Conpot successfully
depicted SCADA devices. However, the existence of addition-
ally opened ports might expose the true identity of honeypots

21

to malicious attackers. Ferretti et al. [153] proposed a scalable
network of LIHP based on the Conpot [150] framework
it achieved
for ICS. Integrated with an analysis pipeline,
data enrichment, data analysis, and network trafﬁc parsing. It
captures ICS background noise trafﬁc (e.g., trafﬁc generated by
network scanners) with no speciﬁc targets. The trafﬁcs could
be generated during a multi-stage attack looking for potential
victims. The authors deployed the proposed LIHPs in various
network points to simulate ICS devices, such as PLCs, with
representative protocols. They veriﬁed the proposed honeypot
with Shodan [152], a searching engine for Internet-connected
devices and proved it would not be easily identiﬁed as a
honeypot by attackers. Besides, the parsing phase extracted
information like source IP addresses, target ports, transport-
layer protocols, and the application-layer request type and
parameters from raw trafﬁcs. It
is enriched with external
information like Autonomous System (AS) information, DNS
PTR records, and country of source IP addresses to further
analyze malicious behaviors. According to several months’
observation, all
the background noise trafﬁcs in ICS are
requests for device information or sensor readings. Most of
the trafﬁcs come from a few recurrent scanners, which are
usually benign. However, there also exists a limited number
of actors making different requests. The authors presented
that identifying trafﬁc actors is difﬁcult since IP addresses are
allocated to cloud hosting services or large ISPs. Wang et al.
[149] proposed a Bayesian honeypot game model to address
DDoS attacks in AMI networks. Considering that attackers
can use anti-honeypots to collect information about security
systems and bypass the defense mechanisms,
the authors
proposed honeypot game strategy and achieved the equilibrium
condition between defenders and attackers using honeypots
and anti-honeypots, respectively. According to the equilibrium,
defenders can deploy honeypots more reasonably and achieve
better effect on the protection of systems. The evaluation
results based on constructed AMI network testbed proved
that
the proposed model reduced the energy consumption
and improved the detection rate. Pa et al. [154] proposed a
ﬁrst IoT honeypot, named IoTPOT, and an analysis sandbox,
called IoTBOX, aiming at attracting attacks leveraging Telnet
to threaten IoT devices with various CPU architecture. In
the proposed honeypot approach, the frontend low-interaction
responder cooperated with backend high-interaction virtual
environments to analyze the captured malware binaries. Based
on the observation from IoTPOT and the analysis results
from IoTBOX, four malware families spreading via Telnet
were identiﬁed. The results proved that
they are all used
in DDoS attacks, and some malware families evolved and
updated frequently, even in the limited observation period.
Previous works have demonstrated the effectiveness of hon-
eypots in collecting valuable information about adversaries.
The interaction processes and malicious behaviors are captured
and stored in the log ﬁles for deep investigation. It decreases
the false alarm rate of traditional IDS methods because all
the interactions of honeypots can be considered malicious
activities since no normal users will intentionally access the
honeypot devices. As a result, it could also detect unseen
attacks and zero-day attacks. The captured data can be used

TABLE VI
CATEGORIES OF THE HONEYPOT

22

to recognize the pattern and attack tools, motivations, and
strategies of novel adversaries and further support the making
of defense strategies. Moreover, honeypots have a ﬂexible
structure where various honeypot software can be deployed
in the network systems with different purposes. It can be
combined with IDS or ﬁrewalls to provide prevention and
detection functions. More importantly, the honeypots actively
distract attackers’ attention from critical system devices and
have successfully increased adversaries’ risks and costs by
consuming their time and resources. It can be regarded as
a deterrence mechanism to improve the security level of the
smart grid.

2) Challenges and Future Works: The challenges and future
works of exploiting honeypots in smart grid context are listed
as follows.

• Risks of Being Compromised: Honeypots that keep active
interactions with adversaries have increased the risks of
being compromised. Once it happens, honeypots could
become slave bots controlled by attackers to threaten the
security of smart grid systems. Therefore, the honeypots
need to be well isolated from the smart grid once they
are compromised.

• Easy to Be Discovered: Honeypots are only valuable
when they can deceive adversaries to interact with them.
However, honeypots, especially LIHP, simulating limited
services and providing constrained responses are highly
possible to be identiﬁed as a trap by experienced attack-
ers. Then, they turn to be useless after exposing their
true identities. Moreover, as mentioned in [149], anti-
honeypot has been used to detect the existence of defend-
ing systems. Adversaries could send initiative packets to
the target network to detect honeypot proxy servers. Once
honeypot servers are detected, optional attack strategies

will be made to bypass security systems and reach the
real servers directly. As a result, the development of a
high-ﬁdelity honeypot that could deceive adversaries and
decrease the possibilities of being identiﬁed will be a
challenging work in future researches.

E. Attribution

For smart grid intrusions, pure detection and blocking
mechanisms are far from enough. These methods only identify
the existence of intrusion behaviors but cannot discover the
actual adversaries behind the attacks, making them unavailable
to solve security problems from the source.

To provide deep protection of the smart grid, attribution
becomes an indispensable part. It has the ability to correlate
distributed intrusion activities, summarize the characteristics of
attack behaviors, infer attack paths, and ﬁgure out adversaries’
identities. As a result, attribution is regarded as an active
way to defend cyber threats against the smart grid by tracing
adversaries’ information.

Fig. 9. Goals of attribution in different levels.

FeaturesAdvantagesDisadvantagesLIHPLimited interaction; No OS;Support very limited servicesSimple; Widely deployedEasy to be discoveredMIHPNo OS; More simulated servicesProvide more responses; MoreconvincingEasy to be discoveredHIHPFrequent interaction; Richservices; Real OSCollect more information ofadversaries; Consume more time andresources; Generate TIDifficult to be developed; Moreeffort to maintain and prevent frombeing compromisedProduction HoneypotDeployed to distract attackersand hide critical systemsEasy to operate; CheapNot good at analyzing attackbehaviorsResearch HoneypotDeployed to collect threatinformationGood at analyzing attack behaviorsCostly to develop and maintainReal-device BasedHoneypotDeployed on real devices; RealinteractionMore convincingCostly to develop and maintainVirtual-environmentBased HoneypotDeployed with simulatedenvironmentWidely used; Easy to maintain; LesscostlyPotentials to threat the host systemCategoryPurposesImplementationLevel ofInteractionLevel 1:Attack TargetsLevel 2Implementation ProcessLevel 3Attacker IdentityGoals of Attribution:Besides, attribution is closely related to IDS and honeypots.
It uses the above techniques to collect adversaries’ information
or detect malware, malicious users, stepping stones, and com-
promised servers. The difference is attribution aims to identify
the attack purposes, attack processes, and information about
adversaries’ true identities, as shown in Fig. 9. It includes
the IP addresses, geographical locations, malware authorship,
name of malicious organizations, the origin countries of target-
ing attacks, etc. Additionally, many techniques such as packet
logging, packet marking, network ﬂow watermarking, code
authorship identiﬁcation, and web tracing can be used for at-
tribution or traceback. Attribution helps understand the attack
strategies used by adversaries and consequently developing
defending and responding strategies to improve the security
level of the smart grid.

1) Attribution Technologies: In general, attribution can be
realized in passive or active ways. The passive attribution
monitors and analyzes the naturally exposed clues of malicious
activities, such as system logs and network trafﬁc, without
interfering with the attack processes. Even it is practical and
easy to be deployed in smart grid systems, the defenders
cannot always capture the critical
information required to
identify illegal activities because sophisticated adversaries
always try to hide attack traces and their identities using
various techniques like code obfuscation, darknet, encryption,
stepping stones, packet dropping, redundant packet padding,
ﬂow mixing, etc. Differently, active attributions leverage the
interaction with adversaries to intentionally add watermarks
on the trafﬁc data or embed tracing programs to the ﬁles
that adversaries could access to increase the chances of de-
tecting adversaries. Here, we review the prevalent attribution
approaches in code authorship identiﬁcation, APT attribution,
IP traceback, watermarking, and web tracking.

a) Code Authorship Identiﬁcation: Code authorship
identiﬁcation aims at matching the stylometric features of pro-
gramming code with their writers. Sophisticated adversaries
could install malware into targeting smart grid systems for
malicious activities. In order to actively infer the identities
of attackers and provide forensic evidence to support criminal
arrestment, code authorship identiﬁcation will be an important
step to reduce security threats from the root. Abuhamad et
al. [155] proposed "a deep learning-based code authorship
identiﬁcation system" (DL-CAIS) for large-scale, language-
oblivious, and obfuscation-resilient code authorship attribu-
tion. The authors designed TF-IDF (Term Frequency-Inverse
Document Frequency, a well-known tool for textual data analy-
sis) based deep representation using multiple Recurrent Neural
Network (RNN) layers and fully-connected layers for feature
extraction. Then, a random forest classiﬁer (RFC) was attached
to process the extracted data and realize the large-scale code
authorship identiﬁcation. The authors evaluated their algorithm
with the Google Code Jam (GCJ) dataset and code from 1987
public repositories on GitHub. It achieved a high accuracy
(averagely over 94%) under different experiment scenarios
and proved effective while identifying authors using multiple
programming languages and when the code was processed by
obfuscation.

23

b) APT Attribution: APT is usually started by mali-
cious organizations that have enough time, intelligence, and
ﬁnancial support. It could be a national behavior due to
political or military purposes. Therefore, the inference of APT
organizations is of great signiﬁcance. Rosenberg et al. [156]
proposed DeepAPT, a deep neural network (DNN) classiﬁer,
to identify the country responsible for APT behaviors. The
authors used the sandbox to record the dynamical behaviors
of APT malware. Further, the sandbox reports are regarded as
raw feature inputs for the training of the DNN model. The
authors presented that using raw features is cheaper and less
time-consuming than the manual feature engineering process.
It could prevent losing important information existing in the
original data and achieve a higher accuracy using DNN. These
are further demonstrated in their evaluation process. However,
the authors also mentioned that APT organizations might
subvert their proposed method to mislead the classiﬁcation
results and defame other irrelevant benign countries. Relative
techniques, such as generative adversarial networks (GAN),
can be used to modify their APT and cause misclassiﬁcation
of DNN models.

c) IP Traceback: IP spooﬁng is generally used by ma-
licious adversaries to hide their information from tracing
and commonly exists in DDoS attacks. Yang et al. [157]
reviewed the previous packet marking and packet
logging
based IP traceback schemes proposed in [158]–[160], which
presented Huffman codes, Modulo/Reverse modulo Technique
(MRT) and Modulo/REverse modulo (MORE), respectively,
as the solutions of improving the usage efﬁciency of packet
marking ﬁeld, reducing the storage requirement for router
logging and decreasing the number of routers required for
logging. However, the authors in [157] proposed that previous
methods still require high storage on logging routers. Their
schemes might suffer from high FPR because of the collision
of log tables and the loss of packet information when the
routers refresh logged data. Moreover, the reconstruction of
the packet transmitting path is also time-consuming due to the
enormous amount of log data, especially under DDoS attacks.
As a result, the authors proposed a novel hybrid IP traceback
scheme RIHT, which marks routers’ interface numbers and
integrates packet logging with a hash table. It only requires
ﬁxed storage in packet logging and does not need refreshing
the logged tracking information. The evaluation presented zero
FPR and FNR in route reconstruction and proved availability
in detecting DoS attacks.

d) Watermarking: Network trafﬁc watermarking is one
of the active methods to trace malicious communications,
especially of the botnet. Iacovazzi et al. [161] reviewed the ob-
jectives, frameworks, and evaluation processes of watermark-
ing and introduced the attacks against watermarking. Gener-
ally, watermarking embeds speciﬁc patterns to the selected
trafﬁcs, which makes the trafﬁcs identiﬁable in other checking
points. Fig. 10 illustrates the work process of adding and
observing watermarks in the trafﬁc data. Watermarking can be
used by defenders to identify a speciﬁc network ﬂow, correlate
different ﬂows, reconstruct the transmitting route of malicious
trafﬁcs and locate the positions of malicious users, such as
botnet stepping stones and botnet masters. Wang et al. [162]

24

that DropWat is effective for data exﬁltration traceback even
with a high transfer rate. Additionally, it is effective for attacks
using TOR networks. However, because the packet dropping
behaviors should not affect the normal throughput of original
trafﬁcs, DropWat is not suitable for short-lived or interactive
ﬂows.

e) Web Tracking: Web tracking recognizes and correlates
the identities of past website visitors for user authentication,
identiﬁcation, or delivering personalized services, such as
business advertisements. The signiﬁcance of web tracking
in smart grid scenarios stays in two aspects. On the one
hand, cyber attackers could use social engineering methods to
collect the personal information of staff working in the smart
grid enterprises through web browsers. On the other hand,
attacking tools, such as malware, could be delivered to the
smart grid facilities through malicious or phishing websites.
Besides, attackers usually own both benign public identities for
normal daily network activities and hidden malicious identities
for illegal activities at the same time. The behavior patterns
of benign identities can be extracted and further utilized to
correlate and identify the hidden malicious identities of the
same attackers (shown in Fig. 11). Different browser ﬁnger-
printing techniques have been developed to identify attackers’
activities on the same browsers, multiple browsers, or even
browsers on different devices. Cao et al. [167] proposed a
(cross-) browser ﬁngerprinting technique which is the ﬁrst to
use novel OS and hardware level features, e.g., those from
graphic card, CPU, audio stack and installed writing scripts,
for both single and cross browser ﬁngerprinting. They provided
open-source implementation on Github. The evaluation results
presented that their approach is able to ﬁngerprint 99.24%
of users on a single browser. Starov et al. [168] focused
on the ﬁngerprinting of browser extensions, e.g., AdBlock
and Ghostery, and proposed Xhound (Extension Hound) as
the ﬁrst fully automated system for ﬁngerprinting browser
extensions. Xhound ﬁngerprints the side effect of browser
extensions on a page’s DOM, such as adding new DOM
elements and removing existing ones. The authors’ research
proved that browser extensions are ﬁngerprintable and offered
a new methodology for web tracking techniques.

Fig. 11. Attribution based on browser ﬁngerprinting in crossing websites
scene.

Fig. 10. Architecture of watermarking [161].

proposed an interval centroid based watermarking scheme for
low-latency anonymous communication systems. The concep-
tion of the interval centroid was introduced in their paper.
By delaying packets within the selected ﬂows, the interval
centroid will change so that the difference can be further used
as watermarks to link the senders and receivers. Based on their
ofﬂine experiments and real-time experiments on anonymizing
service provider www.anonymizer.com, the authors concluded
that low-latency anonymous communications can be identiﬁed
with the sufﬁciently long ﬂow, even various ﬂow transforma-
tions, such as adding cover trafﬁc, packet dropping, and packet
padding are used. Houmansadr et al. [163] proposed a timing-
based watermarking algorithm named RAINBOW (Robust and
Invisible Non-Blind Watermark). They recorded and correlated
the timings of incoming and outgoing ﬂows. Meanwhile, they
produced watermark by delaying the packets with a small
value. This value is chosen to be small enough which can be
regarded as a normal transmitting jitter by malicious attackers
to ensure the invisibility of the proposed algorithm. Further,
the authors proposed an interval-based watermark SWIRL
(Scalable Watermark that is Invisible and Resilient to packet
Losses) in [164] which is considered as the ﬁrst watermark that
is practical for large-scale trafﬁc analysis. Different with other
interval-based watermarking, SWIRL introduces little delays
to the network ﬂow. SWIRL produces watermarks depending
on the characteristics of selected ﬂows. The proposed algo-
rithm was evaluated on PlanetLab testbed [165] and presented
very low false error rates on short ﬂows. The authors presented
that SWIRL can be used for resisting multi-ﬂow attacks,
detecting stepping stones, linking anonymous communications
and detecting congestion attacks on TOR. Iacovazzi et al. [166]
proposed a timing-based watermarking algorithm, DropWat,
for tracing data exﬁltration attacks aiming at stealing sensitive
information from a private network to unauthorized servers.
DropWat indirectly modiﬁes the interpacket delays of selected
packets by dropping packets pseudo-randomly. The authors
claimed that DropWat watermark is invisible to attackers due
to the same behaving patterns between natural packet loss
events and intentional packet dropping. DropWat was tested
in the scenarios that data exﬁltration attackers use stepping
stones or TOR (The Onion Router) anonymous networks to
hide their identities. It was implemented with the assumption
losses, for
that stepping stones will not propagate packet
example using TCP protocols. The evaluation results proved

EncodingSourceSpreadingEmbeddingFilteringFeatureExtractionDecodingWatermarkerWatermark DetectorDestinationBenign IdentityMalicious IdentitySame FingerprintsFingerprintServerAttackerPublic IdentityTracking Malicious Identity with Public Benign IdentityWebsites2) Challenges and Future Works: The challenges and future

works of attribution approaches are listed as follows.

• Robustness of Code Authorship Identiﬁcation: The fea-
tures of code writers vary from factors like programming
languages, and programming
habits, education levels,
platforms. However,
larger-scale programs usually in-
volve multiple writers. It challenges the robustness of
identiﬁcation tools. Besides, novel malware could evolve
from other tools, which means developers can copy other
authors’ code to develop their own attack tools. This
makes the authorship identiﬁcation results unreliable.
Moreover, adversaries can intentionally add other organi-
zations’ features to their tools to misguide defenders and
set up other countries for political and military purposes.
The inference results of most researches can only be
regarded as a reference instead of conﬁrmed evidence.
Therefore, future works need to solve the problems in
identifying programs with multiple writers and enhance
the robustness to prevent being misled by adversaries.
• Attribution Overheads: Passive trafﬁc analysis methods
and network ﬂow watermarking technologies could intro-
duce an extra burden to the smart grid systems. It either
requires extra storage and computing resources for routers
to log and search information of passed ﬂows or delays
the normal communication process by adding a timing-
based watermark to the original ﬂows. However, smart
grid systems could have strict limitations on resources and
communication latency. Therefore, exploiting attribution
approaches needs to speciﬁcally pay attention to the
requirements of the smart grid.

• Robustness and Concealment of Watermarking: Firstly,
manually injected watermarks can be interfered by nat-
ural noises in the communication channels. Secondly,
adversaries might discover the injected watermarks and
bypass watermarking approaches by intentionally drop-
ping packages or adding meaningless redundant packets.
As a result, robustness and concealment of watermarking
should be paid more attention to mitigate the interference
from both natural noise and attackers.

F. Threat Intelligence

Threats targeting the smart grid are getting complicated and
turn to be distributed and delivered in multiple stages. There-
fore, the defending mechanisms have to be aware of the threat
situation in the global systems to extract attack features and
update defending strategies to enhance the security abilities.
In order to do so, the threat intelligence (TI) becomes vital
important. According to the deﬁnition given by Gartner, the TI
is regarded as “evidence-based knowledge, including context,
mechanisms, indicators, implications and actionable advice,
about an existing or emerging menace or hazard to assets
that can be used to inform decisions regarding the subject’s
response to that menace or hazard [169].” The signiﬁcance of
the TI is to collect threat information from various sources, ex-
tract and summarize into different forms, and share them with
protected systems to achieve real-time situation awareness,
enhance the fast responding abilities, and complete defending

25

mechanisms to prevent being compromised by the security
threats.

1) TI Technologies: According to Tounsi et al. [170], the TI
can be generally classiﬁed into long-term strategic TI, tactical
TI, and short-term operational TI, technical TI.

• Strategic TI: Strategic TI aims to assist analysts in judg-
ing the current and upcoming threat situations to make
defense strategies and response decisions. Strategic TI is
usually in forms of reports, brieﬁngs, or conversations
[170] which includes the risk assessment, ﬁnancial im-
pact, and situation prediction to support security strate-
gies.

• Tactical TI: Tactical TI helps defenders learn adversaries’
tactics like attack tools to improve the resiliency and
security of protected systems. It can be gathered from
public shared technical articles in TI sharing communities
or TI service providers.

• Operational TI: Operational TI provides more speciﬁc
and detailed information about attacks, such as malware
code. This type of TI is more valuable but challenging
to obtain. It can usually be accessed when the organi-
zations are compromised or gathered from open-source
intelligence providers and private forums.

• Technical TI: Technical TI is usually applied to the de-
fense mechanisms such as IDS, ﬁrewalls, etc. It provides
indicators of compromise (IOC) to defense mechanisms
so the defense tools can be updated and upgraded to
detect and prevent corresponding attacks.

According to our observation, the top three topics about TI
are its collection, sharing, and analysis phases. Therefore, this
section reviews the critical works in the three phases and
proposes its challenges and future works.

a) TI collection: TI or evidence-based knowledge is
collected from multiple sources. It can be the data (e.g., bot IP
addresses, domain names or ﬁle hashes [171], malware signa-
tures, network trafﬁc, etc.) collected from security mechanisms
such as IDS, honeypot, malware binaries analysis, system logs,
and attribution techniques. These security technologies extract
IOC about adversaries to update detection rules and mitigation
methods to improve the accuracy of protection and provide
proper remediation strategies as a reaction to inferred attacks.
Bou et al. [172] proposed a novel approach that exploits cyber
TI to identify CPS attacks, trigger remediation strategies in
the physical realm, and build countermeasures to provide CPS
better resiliency. The proposed approach consists of cyber
layer dynamic malware binary analysis, honeypot, physical
layer CPS monitor, and a cyber-physical threat detector. In
the cyber layer, dynamic malware binary analysis generates
cyber TI by running malware samples to produce an XML
report describing malware activities. Additionally, the authors
implemented a Conpot-based honeypot to provide external
TI. Utilizing the signatures generated by malware analysis,
honeypot, and the cyber-physical data ﬂows collected from
CPS monitors, the authors built a cyber-physical threat detector
with semantic graphs. Then, it compares the similarity among
the semantic graphs to identify suspicious threats in cyber-
physical data ﬂows extracted from the communication chan-
nels. Moustafa et al. [173] proposed a TI scheme for CPS and

industry 4.0 systems. The proposed scheme contains a smart
data management module and a TI module. The smart data
management module processes heterogeneous data collected
from sensors, actuators, and network trafﬁc. The TI module
is based on Beta Mixture-Hidden Markov Models (MHMMs)
to identify malicious activities in both physical and cyber
domains. Due to the lack of available public CPS datasets, the
authors aggregated both power system dataset of sensors and
physical devices [139] and UNSWNB15 dataset of network
trafﬁc [136] to form a complete CP dataset for the training
and validating of the TI module. In addition to collecting TI
through classical security mechanisms, the TI shared among
public and private online communities, forums, and social
communicating platforms, especially through the darknet, has
successfully attracted researchers’ attention. Valuable informa-
tion about system vulnerabilities or even open-source attack
tools can be found trading and exchanging on these platforms.
Adversaries can directly utilize the exposed vulnerabilities to
build their own attack tools or directly leverage TI or attack
tools selling on the darknet to achieve their goals. On the
other hand, it also makes it a vital important channel to obtain
TI. Nunes et al. [174] proposed a system to gather TI from
marketplaces providing attack tools and online forums in the
darknet or deepnet. The authors presented that the proposed
system collected on average 305 high-quality cyber threat
warnings each week, including novel malware that has not
yet been applied. Li et al. [171] focus on the assessment
and evaluation of shared TI data. They introduced several
public and private intelligence providing platforms, including
Facebook ThreatExchange, Paid Feed Aggregator, Paid IP
Reputation Services and public blacklists and reputation feeds
such as Badips and Packetmail. Among them, Packetmail IPs
and Paid IP Reputation captured threat data via security mech-
anisms like honeypots, analyzing malware, etc. Differently,
Badips and the Facebook ThreatExchange obtained data from
general users or organizations who have been attacked and
are willing to submit the indicators (e.g., malicious IP address
and ﬁle hash) to these TI providers. Samtani et al. [175]
presented that there were many cyber TI portals and malware
analysis portals that passively obtained TI data from anti-
virus engines, network trafﬁc data, IDS, IPS, event logs, and
malware binaries analysis. They highly rely on the community
submissions of malware. However, none of these TI portals
and malware analysis portals collect data directly from hacker
communities. Therefore, the authors designed a novel TI and
malware portal, AZSecure Hacker Assets Portal, to collect
data from hacker communities. Moreover, ML techniques were
applied to collect and analyze the hacker source code and
attachment assets from hacker forums.

b) TI Sharing: Sophisticated adversaries could attack
smart grid systems with multiple stages and target distributed
smart grid components to expand the threat impact to trigger
cascading failures and cause large-scale blackouts. Conse-
quently, security mechanisms only depending on the local TI
to update is difﬁcult to cope with the evolving and rapidly
occurring cyberattacks. Therefore, the sharing of TI is of great
signiﬁcance for enhancing the security level of the power
systems. Collected TI is encouraged to be shared among inter-

26

Fig. 12. STIX 2 relationship example [177].

nal institutions and different organizations across enterprises
and countries. At the same time, a uniﬁed TI representation
and sharing standard should be established to facilitate better
understanding and communication between different organi-
zations. Currently, Structured Threat Information eXpression
(STIX) has become one of the most widely used standards
for the representation of TI. It has speciﬁed a language and
serialization format for TI sharing [170], [176]. The updated
version STIX 2.1 consists of 18 objects: attack pattern, course
of action, campaign, grouping, indicator, identity, intrusion
set, infrastructure, location, note, malware, malware analy-
threat actor, and
sis, observed data, report, opinion,
vulnerability. By connecting multiple objects through their
relationships, TI can be clearly represented by STIX (as
illustrated in Fig. 12 [177]). STIX integrates many standards
to provide diversity and more available functions. To support
the sharing of TI represented in STIX, Trusted Automated
Exchange of Intelligence Information (TAXII) is design as
an application protocol for TI sharing over HTTPS [178].
Besides, TAXII also supports TI sharing in other formats
besides STIX. Moreover, Cyber Observable eXpression (Cy-
bOX) is commonly used in STIX as a structured language
to represent cyber observables, which can be utilized for TI,
logging, malware characterization, indicator sharing, incident
response, digital forensics [179] etc.

tool,

c) TI Analytics: Qamar et al. [180] proposed that the
TI sharing reports are usually generated manually by security
professionals, which could contain incomplete and incorrect
information. Some of the reports even cover repeated infor-
mation about existed attacks. In addition, large volumes of
intelligence data are included in TI containing redundant data
to make the usage of TI inefﬁcient. Lack of assessment and
validating of provided TI data, TI analytics are desired to
analyze and extract valuable information from gathered TI.
It is also important to relate the TI information with speciﬁc
network conﬁguration to ﬁnd the meaningful TI satisfying
the requirement of speciﬁc scenarios. Consequently, Qamar et
al. [180] proposed a TI analytics framework applying Web
Ontology Language (OWL)-based ontology as a semantic
model to represent CybOX, STIX, network conﬁgurations,
and CVE information to relate large volumes of shared TI
information with network conﬁgurations to identify network
associated threats, ﬁnd out their relevance, and evaluate the
risk on the network. Liao et al. [181] focused on IOC published
in TI articles and proposed IOC Automatic Extractor (iACE)
to automatically discover helpful TI information and relate

the IOC token (e.g., zip ﬁle) and its context (e.g., “download,”
“malware”) within the text of TI articles. The proposed scheme
applied graph mining techniques to discover tokens that are
related following the common IOC description ways. iACE
will further extract these tokens and transform them into a
standard IOC format, OpenIOC, including both indicators and
their context. Li et al. [171] presented the problem of lacking
assessment of TI data, which makes it difﬁcult for TI product
consumers to compare various TI sources and choose the
most valuable ones. Therefore, the authors speciﬁed six TI
metrics, including volume, differential contribution, exclusive
contribution, latency, accuracy, and coverage, and successfully
utilized them to analyze and evaluated different TI sources.

2) Challenges and Future Works: The challenges and future

works of TI is listed as follows.

• Quality of TI: A signiﬁcant amount of TI data is generated
and collected by each organization using different security
tools. However, the practicality and quality of generated
TI data are uncertain due to the lack of standardized
assessment and evaluation methods. Manually generated
TI reports could include incorrect and incomplete TI
information. In addition, redundancy existing in a large
amount of TI information needs automated, intelligent
analytics methods to ﬁlter, extract, and relate relative
information for practical usage. However, it is hard for
small
institutions to process their generated data and
provide precise labels or separate different categories of
threats. As a result, it provides great market opportunities
for professional TI analyzing organizations to sell timely
TI information to smart grid consumers to enhance smart
grid security mechanisms and protect power systems from
zero-day attacks and other sophisticated attacks.

• Obstacles in TI Sharing: TI sharing is able to enhance
the security architecture by collaboratively learning the
threat trends and system situations to reduce the risks
of compromising system units or preventing cascading
events. The experience from systems that have suffered
CPS threats can be borrowed to complete and enhance
the defense mechanisms of their own systems. However,
there are still several obstacles stopping organizations
from conﬁdently sharing TI information. Firstly, exposing
vulnerabilities of a product could make the producers
lose advantages in the market and affect consumers’
purchasing choices. Secondly, the shared TI might be
utilized by untrusted participants for malicious or compet-
itive purposes. Additionally, the sharing of TI is usually
accompanied by extra costs and an increasing budget.
When the beneﬁts of TI providers are at the risk of
being hurt, or there are no economic returns for sharing
TI, organizations will not be willing to participate in
TI sharing activities. Moreover, the TI sharing process
is quite subjective for security managers. Analysts will
choose not to share their gathered information if they
think it is less valuable or unaware of the intrusion of
malicious attacks.

As a result, future efforts on TI should be made on improv-
ing the quality and timeliness of TI, encouraging TI sharing

27

and overcome the obstacles of TI sharing.

VI. DIGITAL TWIN IN THE SMART GRID

DT is a novel technology attracting the attentions of smart
grid experts. From the perspective of a CPS, DT acts as a par-
alleled digital representation of real-world cyber-physical en-
tities, including physical devices, systems, network elements,
etc. Since the smart grid is a typical CPS, the development of
DT in smart grid context becomes vital important. DTs in the
smart grid should share exactly the same or part of the critical
features of original real-world power grid entities (including
electricity entities and network elements) so that additional
functions can be realized based on them. These functions could
be visual display, real-time surveillance, failure diagnosis,
security test, risk assessment, state prediction etc.

This section introduces the concept and development of DT,
reviews the applications of DT in the smart grid, and indicate
DT as an enabler for enhanced cybersecurity. A summary
of the DT structure and enabled applications is illustrated in
Fig. 13.

A. Digital Twin

DT is a virtual representation of a real-world object, system,
or process with real-time updated data [3], [182]. It is initially
proposed by Michael Grieves in 2003 for his University of
Michigan Executive Course on PLM in industrial manufac-
turing context [4]. In [4], Grieves indicated that a DT should
consist of three parts, including physical entities in the real
space, virtual models in the virtual space, and data or infor-
mation connection between them. The physical part collects
measurement data to learn product states or the performed
operations. It is reﬂected to the virtual space through 3-D
modeling so that DT could visualize the product, monitor
products states, and guide manufacturing processes. Tao et
al. [183] modiﬁed Grieves’ work and proposed a DT-driven
PHM method for complex equipment with a ﬁve-dimension
model, including physical entities, DT data, virtual equipment,
services, and the connection among them. They emphasize the
DT data as a data integration of more comprehensive and accu-
rate information originating from various sources (e.g., domain
knowledge, services, physical entity, virtual equipment) to
provide services like power output monitoring. In their other
works, they designed a DT-based shop-ﬂoor [184], discussed
the product design, manufacturing and services driven by DT
[185], and summarized the existing works about DT in [17].
In the mobile communication context, many works [186]–
[190] have proposed the "DT network" as a real-time mirroring
of physical networks, where management and control strate-
gies (e.g., resource allocation, energy-saving, computation
ofﬂoading) can be made, optimized, tested, and validated in
the DT model before applied to the realistic network. Besides,
due to the service level agreement (SLA) requirements of 5G
network, Sun et al. [191] applied DT for network operation and
maintenance. Network service information, including service
rules, network conﬁguration parameters, resource information,
and operation conditions, will be synchronized to the DT
network to evaluate whether it satisﬁes the SLA. Based on

28

Fig. 13. Digital twin’s structure and services in the smart grid context.

the analysis of AI, DT network could provide intelligent
optimization suggestions and verify them in the DT network.
In summary, the object of DT could be a physical product,
process, system, and network. From the perspective of CPS,
DT can be a paralleled digital representation of any real-world
cyber-physical entities. The DT model could be a encapsulated
software or model stored in cloud or edge servers and every
single model could connect with each others to construct a
giant simulated system or network. In general, these features
enabled DT to provide visualization and monitoring of the
physical entity, and promote the design, management, and
adjustment processes. All the optimization strategies could be
made based on the analyzing of DT collected information with
the assistant of AI algorithms. Then, these strategies can be
ﬁrstly evaluated and tested before deploying into the physical
entities. From another point of view, these features provide DT
the opportunities to be an enabler for enhanced security, espe-
cially cybersecurity, due to its potentials in monitoring system
states, detecting anomalies through AI-based analysis of DT
data, predicting future situation, supporting decision making,
and evaluating security strategies in the DT environment.

B. Digital Twin in the Smart Grid

Similar with the concept of CPS, DT realizes the con-
vergence of physical and cyber domains. Some researchers
regard it as the next phase of the CPS [203]. Since the smart
grid is a typical CPS covering both industrial systems and
communication networks, the functions of DT should also be
applicable for the smart grid context.

The construction of DT establishes a platform for intelligent
smart grid applications with uniﬁed information source. Upper
smart grid management businesses could directly connected
to the DT to save resources and provide better security.
However, the lack of a standard DT model makes the practical
construction of DT for physical products hard to implement.
Therefore, Jiang et al. [192] proposed a four-dimensional DT
model named "OKDD" to guide the digitization of smart grid
physical entities. It consists of the ontology-body, knowledge-
body, digital-portal, and data-body. Firstly, the ontology-body

includes the standardized description and identiﬁcation of
physical entities in the smart grid. Secondly, the knowledge-
body is an integration of knowledge stored in various the-
oretical models, e,g., electromagnetic, temperature, motion,
etc. Thirdly, the data-body organizes and manages the data
generated during physical entity’s entire life cycle to improve
the efﬁciency of extracting the desired information. Then, the
digital-portal provides secure information interaction for data
services. Based on the model, the authors constructed the DT
model for the vacuum circuit breaker and extended it to a 35
kV substation. As well, they developed a PHM system based
on the DT model in a 110 kV substation.

Moutis et al. [193] proposed a unit-level DT model for the
distribution power transformer. It realizes the real-time moni-
toring of medium voltage (MV) waveforms of voltage, current,
and active and reactive power without MV instrumentation but
using the DT model and low voltage (LV) side measurements
to calculate MV. The calculated MV waveforms through trans-
former DT models are as accurate as the instrument measured
data. It is easy to be deployed, more economic efﬁcient and
has avoid the disruptions to power grid operations.

like voltage swings,

The introduction of renewable energy has brought unstable
factors,
to the smart grid. Therefore,
voltage regulation becomes important in DER systems. To
handle this problem, the photovoltaic (PV) inverter has been
used to provide reactive power, which can be converted to
compensate the voltage. The reactive power is set based on
the voltage measured at the point of common coupling. How-
ever, the voltage measurement could be missing, intermittent,
unsynchronized, or unobservable, making the state estimation
and voltage regulation unable to perform. Thus, Darbali et
al. [195] constructed DT to simulate DER systems based on
the information of distribution system design, historical sub-
station data, equipment conﬁguration, and near real-time PV
production data. The DT could provide pseudo-measurement
generated by real-time simulation to overcome the problem of
lacking electric feeder’s measurement data for DER voltage
regulation.

Zhou et al. [194] proposed a DT framework for power grid

Physical Entities of the Smart GridDigital Twins in the Smart GridDigital Twin DataDT Enabled Smart Grid ApplicationsSupporting TechnologiesSimulation, Modeling, Big Data, Cloud, Edge, IoT, AI, AR, VR, 5G, Block Chain...SurveillanceVisualizationAnomaly DetectionSituational AwarenessProviding Pseudo-measurementSystem RestorationCyber-rangeRisk AssessmentError PredictionMitigating Distributed CyberattacksPersonnel Training Penetration TestingAssetProcessSystemEnvironmentData / InformationCommunicationsCommunication NetworkProduct LevelSystem LevelSoS LevelVirtual ModelsPower System29

TABLE VII
SUMMARY OF DIGITAL TWIN RESEARCHES

Topics
DT Concept
Basic Components
DT Object

DT Fidelity

DT-enabled Functions

Field

Contents
DT is a digital representation of real-world cyber-physical entities with syncrhonized states
Physical entities, Virutal models, DT data, Data Interaction, DT applications
Physical product, network element, process, system, environment
Unit Level
System Level
SoS Level
Surveillance
Visualization
Anomaly/Intrusion Detection
Situational Awareness
Providing Pseudo-measurement
System Restoration
Cyber-range
Penetration Testing
Risk Assessment
Error Prediction
Mitigating Distributed Cyberattacks
Personnel Training
Design, Production, and Manufacturing
Communication Networks
Smart Grid
Cybersecurity

References
[3], [182]
[4], [183], [192]
[3], [182], [186]–[191]
[192]–[194]
[195], [196]
[197], [198]
[196]
[196]
[10], [194], [196], [198]
[198], [199]
[193], [195]
[197]
[13], [199]
[8], [200]
[200], [201]
[196]
[202]
[13], [198], [199]
[4], [17], [183]–[185]
[186]–[191]
[192]–[198]
[7], [8], [10], [12], [13], [199]–[202]

online analysis in detecting electricity failures. Traditionally,
the measurement information from the RTU will be processed
by SCADA and state estimation (SE) to report real-time grid
change events and generate loadﬂow snapshots for further
periodical dynamic security assessment (DSA). Statistically,
the round-trip analysis takes around 10 minutes in a realistic
system. To decrease time consumption into the order of
seconds, the authors added a new data processing path through
a DT-based net analysis model, which includes a Bus/Breaker
model, a Node/Breaker model, and a Bus/Branch model.
They are updated by SCADA and SE. The changes of DT
models are considered as the grid change events and reported
into a complex event processing (CEP) engine for situation
awareness analysis. Once grid change events were detected,
it will enable the DSA based on ML algorithms for a fast
analysis. With DT models, snapshots of power grid operation
states can be created with sub-second latency without going
through SE. The snapshots can be used in data-driven online
analysis applications like NN-based security assessment and
CEP rule evaluation that can all be completed in under 1
second. Thus, in a large-scale lab testing environment, a full
online analysis round trip can be completed in about 10
seconds.

Focusing on the enhanced surveillance capability enabled
by DT, He et al. [196] implemented a realistic system-level
DT in an industrial IoT system, Pavatar, for surveillance
and remote diagnosis of the ultrahigh-voltage converter sta-
tion (UHVCS). Pavatar constructed DT models for real-time
monitoring of UHVCS operations. It enables the sensing of
compensators and cooling systems, operation environment,
and human activities. Besides, it realizes data visualization
based on VR technology and enables anomaly detection, root-
cause diagnosis, and system error prediction with the assistant
of AI analysis.

The development of DER and microgrids has increased
the complexities of data communication and processing. To

solve this problem, a DT-based power grid architecture is
promising in realizing the interaction with smart grid physical
components, collecting system information, monitoring dif-
ferent power systems, participating in the control operations,
and even detecting cyberattacks at the communication layer
to ensure optimal performance of the physical grid. Saad et
al. [197] proposed the DT architecture of energy CPS. The
DTs are created on the AWS cloud. The authors realized
DT modeling of different power resources,
interconnected
microgrid system, and the communication topology.

Brosinsky et al. [198] focused on using DT in the power
system control centers. The authors ﬁrstly compared the
SCADA system with PMU-based wide area monitoring system
(WAMS) . SCADA analyzes the steady states of power grid
based on the data periodically transmitted from RTU, where
the data is updated in 2 to 10 seconds. However, due to the
introduction of PMU, the requirement of real-time monitoring
becomes urgent. Usually, the data sample rate can get up to
60 per second. So, a PMU-based WAMS becomes more capa-
ble for dynamic state analysis. Correspondingly, a DT-based
power grid control system simulating the real-time power
system states can process both steady-state and dynamic-
state data to enable stronger functions than SCADA. The DT
could be a system of systems (SoS) where DTs running in
different system operators could communicate with each other
for collaborative operations. It provides enhanced operational
situation awareness ability. Based on the DT and historical
data, power system control centers could estimate system state
even the measurement is lost or unavailable. As well, the
DT power system control center could fast detect abnormal
grid incidents by comparing monitored grid behaviors and
simulated grid behaviors. It should provide suggestions to
prevent blackout and offer an ofﬂine environment for operator
training and asset optimization.

C. Digital Twin as an Enabler for Enhanced Cybersecurity

As mentioned in Subsection VI-A, the object of DT simu-
lation could be both power system units and communication
network elements. Subsection VI-B has introduced how DT
is applied in the smart grid context. It can be seen that most
works utilizes DT to monitor the states of power system for
security purposes. Similarly, DT could also be utilized to
simulate the communication network to solve cybersecurity
problems. This section introduces the works exploiting DTs
as an enabler for enhanced cybersecurity.

Becue et al. [13] introduced an ITEA project named Cy-
berFactory#1 [12]. The project aims to enhance the security
and resilience of the digital factory through the collaboration
of DT and cyber-range. It improves the testing capability by
generating attacks on the DT model
to discover potential
vulnerabilities and assess the impact of attacks to support
decision-making. Besides, it enhances the training capability
by building cybersecurity competition with “blue team/red
team” exercises on the DT models and simulating cyber-
incident to help understanding its effect.

Atalay et al. [200] ﬁrstly reviewed existing smart grid
security standards and common cybersecurity threats, e.g.,
the authors indicated the lack of
DDoS and APT. Then,
security evaluation standards for the smart grid. Therefore,
they proposed a DT-based security testing framework. The
proposed evaluation framework involves i) an extensible DT
for smart grid, ii) the TI database for both smart-grid-speciﬁc
and common cyberattacks, iii) attack simulation tool set, and
iv) A data analysis and reporting module to infer smart
grid vulnerabilities and evaluate the risks. Speciﬁcally, the
DT consists three layers, i.e., physical, virtual, and decision-
making layers. The physical layer is composed of the terminal,
perception, storage, computing, and networking resources in a
physical power grid. The virtual layer contains the physical
and logical proﬁles of system components, network state,
and optimization parameters. The decision-making layer maps
the physical layer to the virtual layer,optimize smart grid’s
operation, manage the communication topology, and generate
alarms while detecting anomalous behaviors. Based on the
precise DT model, the framework provides a platform for
cybersecurity test without affecting the real physical grid.

Networked microgirds are affected by both individual and
lack of protection especially
coordinated cyberattacks, but
against coordinated attacks. Saad et al. [202] indicated that a
real-time data driven model should be applicable to detect co-
ordinated attacks and provide autonomous recovery. To ensure
the resiliency of networked microgrids, the authors proposed
an IoT-based DT framework to provide a centric oversight for
the networked microgrid system and detect coordinated attacks
with integrated data. The framework is implemented on a
cloud platform covering the digital replica of physical sensors,
cyber controllers, and their interactions. According to the test
on a distributed control system, the authors demonstrated the
effectiveness of the DT framework in mitigating FDI and
(DDoS) attacks. Once the attack is discovered, observers can
take corrective actions based on what-if scenarios to ensure
the operation of a networked microgrid.

30

Bitton et al. [8] proposed to build cost-efﬁcient DT as a
testbed for the security assessment of speciﬁc industrial control
system (ICS). Penetration testing, as an important way for se-
curity assessment, could discover the vulnerabilities in a target
network, including login services with default password, hosts
with vulnerable software, improper network conﬁguration, etc.
For ICSs, the penetration testing more focuses on the test of
industrial components (e.g., PLC, sensors, HMI) and dedicated
industrial protocols (e.g., Modbus, DNP3). However, normal
penetration testing operations are not practical for ICSs. Op-
erations like vulnerability discovery and port scanning could
possibly result in the break down of the target system which
are apparently not feasible for ICSs. As a result, testbeds
are desired for ICS security assessment. Nevertheless, it is
necessary to consider the trade-off between developing budget
and ﬁdelity. Thus, most of the existing testbeds are generic. To
develop speciﬁc testbeds for ICSs, DT seems to be a promising
way based on its simulated ICS components. In [8], Bitton et
al. proposed a way to ﬁnd out the optimal ﬁdelity of DTs for
speciﬁc ICS security tests. The authors considered the budget
and ﬁdelity of DT as an optimization problem that aims to
establish a DT model to executing the most important tests
within a limited budget. Then, the optimal DT speciﬁcation is
solved with 0-1 non-linear programming.

Hadar et al. [201] proposed the cyber DT, which models
the corporate network security situation and hacker activities.
In addition to the monitoring of the computer network states,
the cyber DT constructs attack graph models to realize the
simulation of real-world attacks, the correlation between the
network status and the attack tactics, the evaluation of the
network risk value, and the acquisition and optimization of
security controls’ requirements.

Taking the electric power ecosystem as a case, Salvi et
al. [199] proposed a cyber-resilience model for critical cyber
infrastructures (CCI) based on the implementation of DT. To
ensure the resilience, the model should integrate both pre-
vention system and response strategies. Firstly, the proposed
framework contains a technical layer, a operational layer, and
an ecosystem layer. The technical layer represents the real-
world CCI. While an incident occurs, detection and response
processes should be triggered to identify the incident and
protect the system through recovery and system hardening.
The operational
layer is responsible for the coordination,
communication, control, and intelligence processes. Moreover,
since CCI is usually a part of a large ecosystem, the detection
of an incident should be noticed to other ecosystem units
like organizations, government institutes, and law enforcement
agencies. Thus,
these units could
in the ecosystem layer,
coordinate to set standards and preventive requirements to
protect
their system from further affected by the threats.
Then, with the introduction of DT, the model could mimic
the original CCI to provide a replicated environment with
enhanced situational awareness capability for better response
coordination and cyber incident management. As well, the DT
provides a cyber-range platform to train CCI personnel and
validate preventive control and response strategies.

Eckhart et al. [10] proposed a passive state replication
approach to generate functional equivalent virtual entities

then attackers may hijack,

for real-time monitoring and intrusion detection. Differently,
Gehrmann et al. [7] adopted state replication for active moni-
toring to support security analysis. Gehrmann et al. [7] focus
on the architecture design of the secure DT-based industrial
automation and control systems (IACS), and pays special at-
tention to the state synchronization model. The authors pointed
out that the core of the DT lies in the state replication, so it is
necessary to ensure that the entire process of system state and
input synchronization is accurate. The author proposed that the
secure architecture requires synchronization security, synchro-
nization without delay, protecting DT’s external connection,
access control, reliable software, isolated network for the local
factory, and DT resilient to DoS. The DT network adversary
model provided by the authors indicates that, assuming DT
runs in a third-party cloud with secure execution environment
and data storage,
tamper, and
replay the communication between physical-twin or twin-twin
entities and send arbitrary requests to the DT. Based on the
above security requirements and adversary models, the authors
proposed their security architecture for the DT system. Firstly,
assuming that DT runs in a secure isolated environment (e.g., a
virtual machine in a secure cloud), DTs should only accept two
direct external network interactions, which are synchronization
and external request or response exchanging. DTs can access
to a secure clock for precise synchronization and the external
interactions requires to be protected by dedicated gateway,
cloud VPN, and secure communication protocols. Besides, the
states of multiple DTs should be aggregated in a common
security analysis component. Authorized external analyzers
could access all
the states in the DT-based IACS. Once
abnormal activities are detected, analyzers could make instant
response to ensure the resilience. Moreover, IDS, access
control, and software vulnerability discovery are also required
to ensure the reliability of both network and physical entities’
software. In the DT-based IACS architecture, DT aims to
reﬂect the states of its physical counterpart and protect it from
direct external threats. Analyzers could discover cyberattacks
in the DT level and prevent them before reaching physical
parts.

VII. SECURITY CONSIDERATIONS OF DIGITAL
TWIN-BASED SMART GRID: LESSONS LEARNED AND
FUTURE PERSPECTIVE

The smart grid is a typical CPS. The development towards
an intelligent, digital, and Internet-connected CPS also ex-
panded its threat surface. Therefore, the cybersecurity becomes
vital important. It can be enhanced from two ways. Firstly,
the existing critical defense approaches need to be further
improved. This can be achieved by leveraging advanced AI
algorithms or solving their corresponding challenges as pre-
sented in Section V. Secondly, novel technologies need to
be applied in the smart grid context for security purposes.
As mentioned in Section VI, DT is a promising technology
for enhanced cybersecurity. Thus, DT should be integrated
into the security architecture design of the smart grid and
develop security applications based on it. However, each step
towards a digital smart grid is also accompanied by additional

31

security issues. Consequently, protections are indispensable
for the DT itself, especially its running environment and data
communication processes.

A. Embedding DT into the security architecture of the smart
grid

DT has been proved as an enabler for enhanced cybersecu-
rity. Thus, it should be embedded into the security architecture
of the smart grid. As expected by Gehrmann et al. [7], DT
should run on a secure isolated cloud environment, reﬂecting
the states of its physical counterpart and protecting smart
grid from direct external
threats. In a DT-based security
architecture, external requests would be processed in the DT
so that analyzers could discover cyberattacks in the DT level
them before reaching physical parts. Besides,
and prevent
DT provides an uniformed interface for authorized security
analysts. DTs could communicate with each other and upload
the system states into an integration server. Thus, DT offers
enhanced situational awareness capability to security analysts
for detecting DDoS and APT. Based on the architecture, cyber-
security applications can be further developed. As presented
in Table VII, DT supports data visualization based on VR.
As well, it achieves the surveillance of system states and
detects anomalies by comparing the real-world states with DT
estimated data. Since the system behavior simulated by DT
is formulated according to the engineering design of power
devices, the DT-based anomaly detection can be developed
as the speciﬁcation-based IDS. Additionally, due to the high
ﬁdelity of DT models, DT would be a good choice for high-
ﬁdelity honeypots to distract adversaries from reaching the
real system. Furthermore, DT is promising in building cyber-
range for speciﬁc power systems. Proper ﬁdelity of the DT
should be ﬁrstly decided according to the budget. It could
be in the unit level, system level, or SoS level. In the DT-
based cyber-range, developers could restore system states for
personnel training and penetration testing without affecting the
operation of physical power systems.

B. Deploying defense approaches for DT’s own security

The introduction of DT could also bring cybersecurity
issues. DT components like the DT model, data, and com-
munication processes could become the potential targets for
smart grid adversaries to deliver attack tools for gathering pri-
vate information, disrupting market behavior, damaging power
system operations, and causing large-scale power outages.
However, there lacks relevant work discussing the protection
of DT components. Future works should specify the pro-
tection standards of DT and required defense approaches.
For example, the DT could be a software deployed on a
cloud VM. Thus, security measures like bug discovery need
to be deployed to ensure the software and cloud security.
Besides, DT requires additional communication channels to
interact with physical counterparts for state synchronization
or connect with external servers for receiving requests and
responses or sharing TI. Thus, a secure synchronization clock,
synchronization gateways, VPN, and encryption protocols
(e.g., IPsec, TLS/DTLS) are needed to prevent eavesdropping

and tampering [7]. The IDS is also needed to detect external
intrusions (e.g., DoS, MITM, etc.) for protecting the security
of DT communications. For the DT data, access authorities
should be strictly limited. Meanwhile, the terminal devices
need to be trustworthy to ensure the credibility of data sources.
As a result, the protection of DT needs to deploy the critical
defense approaches discussed in the paper for systematic
passive-active protection.

VIII. CONCLUSION

Cybersecurity of the smart grid have attracted the attention
of academics, industries, and society. In this survey, we intro-
duce the background knowledge of the smart grid. Besides, we
review cyberattacks targeting the smart grid in the last decade
and discuss the prevalent attack technologies. To improve the
resilience, efforts should be made by either improving existing
defense approaches or applying novel developed technology,
like the DT, to the smart grid context. Thus, on the one hand,
we review the critical defense approaches that provide passive-
active protection for the smart grid by identifying smart grid
assets, discovering potential software vulnerabilities, detecting
intrusions, actively consuming adversaries’ resources, analyz-
ing attack features, tracing attack paths, identifying attackers,
and generating TI. On the other hand, we review DT’s existing
works to demonstrate the capability of DT in enhancing smart
grid cybersecurity. Based on the real-time replication of DT,
it is expected to provide uniformed data interface and better
situational awareness capability. Besides, it could be developed
for enhanced IDS, honeypot, and cyber-range to enforce the
protection of smart grid. However, the security of DT itself
should also be looked after. The DT model running in a
cloud environment, the stored DT data, and communication
processes have to be defended to ensure the trustworthiness
of DT. Future works should focus on these aspect to construct
a security architecture of DT-based smart grid.

ACKNOWLEDGMENT

We appreciate the support of the National Key R&D
Program of China under Grants No. 2020YFB1807500, No.
2020YFB1807504, and National Science Foundation of China
Key Project under Grants No. 61831007.

REFERENCES

[1] RESEARCH and MARKETS, “Smart grid market by software,
hardware,
2023,”
November 2018. [Online]. Available: https://www.researchandmarkets.
com/reports/4669159/smart-grid-market-by-software-ami-grid

forecast

service,

region

global

and

to

-

[2] E. Griffor, C. Greer, D. Wollman, and M. Burns, “Framework for
cyber-physical systems: Volume 1, overview,” June 2017. [Online].
Available: https://doi.org/10.6028/NIST.SP.1500-201

[3] Gartner, “Digital twin.” [Online]. Available: https://www.gartner.com/

en/information-technology/glossary/digital-twin

[4] M. Grieves, “Digital twin: manufacturing excellence through virtual

factory replication,” White paper, vol. 1, pp. 1–7, 2014.

[5] Accenture, “Technology vision 2021-leaders wanted: Masters of
change at a moment of truth.” [Online]. Available: https://www.
accenture.com/us-en/insights/technology/technology-trends-2021

[6] MARKETS and MARKETS, “Digital

twin market by technology,
type,
forecast
to 2026.” [Online]. Available: https://www.marketsandmarkets.com/
Market-Reports/digital-twin-market-225269522.html

and geography - global

application,

industry,

32

[7] C. Gehrmann and M. Gunnarsson, “A digital twin based industrial au-
tomation and control system security architecture,” IEEE Transactions
on Industrial Informatics, vol. 16, no. 1, pp. 669–680, 2019.

[8] R. Bitton, T. Gluck, O. Stan, M. Inokuchi, Y. Ohta, Y. Yamada,
T. Yagyu, Y. Elovici, and A. Shabtai, “Deriving a cost-effective digital
twin of an ics to facilitate security evaluation,” in European Symposium
on Research in Computer Security. Springer, 2018, pp. 533–554.
[9] M. Eckhart and A. Ekelhart, “Towards security-aware virtual environ-
ments for digital twins,” in Proceedings of the 4th ACM workshop on
cyber-physical system security, 2018, pp. 61–72.

[10] ——, “A speciﬁcation-based state replication approach for digital
the 2018 Workshop on Cyber-Physical

twins,” in Proceedings of
Systems Security and Privacy, 2018, pp. 36–47.

[11] C. Gehrmann and M. A. Abdelraheem, “Iot protection through device
to cloud synchronization,” in 2016 IEEE International Conference on
Cloud Computing Technology and Science (CloudCom).
IEEE, 2016,
pp. 527–532.

[12] ITEA, “Cyberfactory# 1—addressing opportunities and threats for
the factory of the future (fof).” [Online]. Available: https://itea4.org/
project/cyberfactory-1.html

[13] A. Becue, Y. Fourastier, I. Praça, A. Savarit, C. Baron, B. Gradussofs,
E. Pouille, and C. Thomas, “Cyberfactory# 1—securing the industry 4.0
with cyber-ranges and digital twins,” in 2018 14th IEEE International
Workshop on Factory Communication Systems (WFCS).
IEEE, 2018,
pp. 1–4.

[14] S. Tan, D. De, W.-Z. Song, J. Yang, and S. K. Das, “Survey of
security advances in smart grid: A data driven approach,” IEEE
Communications Surveys & Tutorials, vol. 19, no. 1, pp. 397–422,
2016.

[15] M. Faheem, S. B. H. Shah, R. A. Butt, B. Raza, M. Anwar, M. W.
Ashraf, M. A. Ngadi, and V. C. Gungor, “Smart grid communication
and information technologies in the perspective of industry 4.0: Oppor-
tunities and challenges,” Computer Science Review, vol. 30, pp. 1–30,
2018.

[16] C.-C. Sun, A. Hahn, and C.-C. Liu, “Cyber security of a power grid:
State-of-the-art,” International Journal of Electrical Power & Energy
Systems, vol. 99, pp. 45–56, 2018.

[17] F. Tao, H. Zhang, A. Liu, and A. Y. Nee, “Digital twin in industry:
State-of-the-art,” IEEE Transactions on Industrial Informatics, vol. 15,
no. 4, pp. 2405–2415, 2018.

[18] A. S. Musleh, G. Chen, and Z. Y. Dong, “A survey on the detection
algorithms for false data injection attacks in smart grids,” IEEE
Transactions on Smart Grid, vol. 11, no. 3, pp. 2218–2234, 2019.
[19] G. Dileep, “A survey on smart grid technologies and applications,”

Renewable Energy, vol. 146, pp. 2589–2625, 2020.

[20] H. Hui, Y. Ding, Q. Shi, F. Li, Y. Song, and J. Yan, “5g network-
based internet of things for demand response in smart grid: A survey
on application potential,” Applied Energy, vol. 257, p. 113972, 2020.
[21] M. Z. Gunduz and R. Das, “Cyber-security on smart grid: Threats and

potential solutions,” Computer networks, vol. 169, p. 107094, 2020.

[22] R. Minerva, G. M. Lee, and N. Crespi, “Digital twin in the iot context:
a survey on technical features, scenarios, and architectural models,”
Proceedings of the IEEE, vol. 108, no. 10, pp. 1785–1824, 2020.
[23] C. Lo, C. Chen, and R. Y. Zhong, “A review of digital twin in product
design and development,” Advanced Engineering Informatics, vol. 48,
p. 101297, 2021.

[24] G. W. Arnold, D. A. Wollman, G. J. FitzPatrick, D. Prochaska,
D. G. Holmberg, D. H. Su, A. R. Hefner Jr, N. T. Golmie, T. L.
Brewer, M. Bello et al., “Nist framework and roadmap for smart grid
interoperability standards, release 1.0,” NIST, Tech. Rep., 2010.
[25] C. Greer, D. A. Wollman, D. E. Prochaska, P. A. Boynton, J. A.
Mazer, C. T. Nguyen, G. J. FitzPatrick, T. L. Nelson, G. H. Koepke,
A. R. Hefner Jr et al., “Nist framework and roadmap for smart grid
interoperability standards, release 3.0,” NIST, Tech. Rep., 2014.
[26] I. J. Perez-Arriaga, “The transmission of the future: The impact of
distributed energy resources on the network,” IEEE Power and Energy
Magazine, vol. 14, no. 4, pp. 41–53, 2016.

[27] H. He and J. Yan, “Cyber-physical attacks and defences in the smart
grid: a survey,” IET Cyber-Physical Systems: Theory & Applications,
vol. 1, no. 1, pp. 13–27, 2016.

[28] O. Schmidt, A. Hawkes, A. Gambhir, and I. Staffell, “The future cost
of electrical energy storage based on experience rates,” Nature Energy,
vol. 2, no. 8, pp. 1–8, 2017.

[29] M. Ylianttila, R. Kantola, A. Gurtov, L. Mucchi, I. Oppermann, Z. Yan,
T. H. Nguyen, F. Liu, T. Hewa, M. Liyanage et al., “6g white paper:
Research challenges for trust, security and privacy,” arXiv preprint
arXiv:2004.11665, 2020.

[30] P. Kumar, Y. Lin, G. Bai, A. Paverd, J. S. Dong, and A. Martin,
“Smart grid metering networks: A survey on security, privacy and open
research issues,” IEEE Communications Surveys & Tutorials, vol. 21,
no. 3, pp. 2886–2927, 2019.

[31] H. Yoo and T. Shon, “Challenges and research directions for hetero-
geneous cyber–physical system based on iec 61850: Vulnerabilities,
security requirements, and security architecture,” Future generation
computer systems, vol. 61, pp. 128–136, 2016.

[32] ENISA, “Smart grid threat

December 2013.
publications/smart-grid-threat-landscape-and-good-practice-guide

landscape and good practice guide,”
[Online]. Available: https://www.enisa.europa.eu/

[33] “Enisa threat

landscape 2020 - list of top 15 threats,” October
2020. [Online]. Available: https://www.enisa.europa.eu/publications/
enisa-threat-landscape-2020-list-of-top-15-threats

[34] R. Langner, “Stuxnet: Dissecting a cyberwarfare weapon,” IEEE Secu-

rity & Privacy, vol. 9, no. 3, pp. 49–51, 2011.

[35] N. Falliere, L. O. Murchu, and E. Chien, “W32. stuxnet dossier,” White
paper, Symantec Corp., Security Response, vol. 5, no. 6, p. 29, 2011.
[36] T. C. Robert M. Lee, Michael J. Assante, “Analysis of the cyber
attack on the ukrainian power grid,” Electricity Information Sharing
and Analysis Center (E-ISAC), Tech. Rep., March 2016.

[37] CISA, “Ics alert (ir-alert-h-16-056-01) cyber-attack against ukrainian
[Online]. Available: https:

infrastructure,” February 2016.

critical
//us-cert.cisa.gov/ics/alerts/IR-ALERT-H-16-056-01

[38] C. Kolias, G. Kambourakis, A. Stavrou, and J. Voas, “Ddos in the iot:
Mirai and other botnets,” Computer, vol. 50, no. 7, pp. 80–84, 2017.
[39] M. Antonakakis, T. April, M. Bailey, M. Bernhard, E. Bursztein,
J. Cochran, Z. Durumeric, J. A. Halderman, L. Invernizzi, M. Kallitsis
et al., “Understanding the mirai botnet,” in 26th {USENIX} security
symposium ({USENIX} Security 17), 2017, pp. 1093–1110.

[40] N. Periroth, “Hackers are targeting nuclear facilities, homeland security
dept. and f.b.i. say,” July 2017. [Online]. Available: https://www.
nytimes.com/2017/07/06/technology/nuclear-plant-hack-report.html

[41] C. McMahon, “State-sponsored hackers targeted eirgrid electricity
[Online]. Available:

network in devious attack,” August 2017.
https://www.independent.ie/irish-news/

[42] CISA, “Alert TA17-293A advanced persistent threat activity targeting
infrastructure sectors,” October 2017.

energy and other critical
[Online]. Available: https://us-cert.cisa.gov/ncas/alerts/TA17-293A

sector

energy

group,”

sophisticated

“Dragonﬂy: Western
attack

targeted
[43] Symantec,
by
[On-
line]. Available: https://symantec-enterprise-blogs.security.com/blogs/
threat-intelligence/dragonﬂy-energy-sector-cyber-attacks
energy

compa-
[44] Broadcom,
nies
[On-
line]. Available: https://symantec-enterprise-blogs.security.com/blogs/
threat-intelligence/dragonﬂy-energy-companies-sabotage

“Dragonﬂy:
sabotage

Western

October

threat,”

under

2017.

2014.

June

[45] L. Martin, “The cyber kill chain.” [Online]. Available: https://www.
lockheedmartin.com/en-us/capabilities/cyber/cyber-kill-chain.html
[46] CISA, “Alert (ta18-074a) russian government cyber activity targeting
energy and other critical infrastructure sectors,” March 2018. [Online].
Available: https://us-cert.cisa.gov/ncas/alerts/TA18-074A

[47] BBC,

“Venezuela blackout: Power

country into
cuts plunge
[Online]. Available: https://www.bbc.com/

darkness,” July 2019.
news/world-latin-america-49079175

[48] A. Greenberg, “Iranian hackers have been ‘password-spraying’ the
us grid,” January 2020. [Online]. Available: https://www.wired.com/
story/iran-apt33-us-electric-grid/

[49] Dragos,

“North

perspective,”
electric
January 2020. [Online]. Available: https://www.dragos.com/resource/
north-american-electric-cyber-threat-perspective/

american

threat

cyber

[50] CISA, “Alert (aa20-049a) ransomware impacting pipeline operations,”
February 2020. [Online]. Available: https://us-cert.cisa.gov/ncas/alerts/
aa20-049a

cyber

“Entso-e

[51] Pv-magazine,

targeted in recent

cyberattack,” March
2020. [Online]. Available: https://www.pv-magazine.com/2020/03/10/
entso-e-targeted-in-recent-cyberattack/
“Entso-e

evidence
a
recently
[52] ENTSO-E,
network,” March
its
into
successful
2020.
[Online]. Available: https://www.entsoe.eu/news/2020/03/09/
entso-e-has-recently-found-evidence-of-a-successful-cyber-intrusion\
-into-its-ofﬁce-network/
Osborne,

has
intrusion

berattack,
2020.
edp-energy-conﬁrms-cyberattack-ragnar-locker-ransomware-blamed/

lock
Available:

cy-
July
https://www.zdnet.com/article/

found
ofﬁce

ransomware

company

[Online].

blamed,”

conﬁrms

“Energy

[53] C.

ragnar

edp

of

33

[54] I.

Ilascu,
snake

fers
line]. Available:
power-company-enel-group-suffers-snake-ransomware-attack/

suf-
[On-
https://www.bleepingcomputer.com/news/security/

“Power
ransomware

group
2020.

enel
June

company

attack,”

[55] P. Paganini, “Enel group suffered the second ransomware attack
this year,” October 2020. [Online]. Available: https://securityaffairs.
co/wordpress/110067/malware/enel-group-netwalker-ransomware.html
[56] Paganini, “Netwalker ransomware operators leaked ﬁles stolen from
k-electric,” October 2020. [Online]. Available: https://securityaffairs.
co/wordpress/109000/hacking/k-electric-netwalker-data-leak.html

[57] CISA, “Ics advisory (icsa-21-026-01)

fuji electric tellus lite v-
[Online]. Available:

Paganini,

lite,” January 2021.

simulator and v-server
https://us-cert.cisa.gov/ics/advisories/icsa-21-026-01
high-severity
server
and

fuji
in
electric
January
2021. [Online]. Available: https://securityaffairs.co/wordpress/113950/
ics-scada/fuji-electric-hmi-ﬂaws.html

of
v-simulator

“Cisa warns

ﬂaws
lite,”

tellus

lite

[58] P.

[59] A. Lee, “Guidelines for smart grid cyber security,” NIST, Tech. Rep.,

2010.

[60] C.-M. Mathas, K.-P. Grammatikakis, C. Vassilakis, N. Kolokotronis,
V.-G. Bilali, and D. Kavallieros, “Threat landscape for smart grid
systems,” in Proceedings of
the 15th International Conference on
Availability, Reliability and Security, 2020, pp. 1–7.

[61] S. Ghosh, M. R. Bhatnagar, W. Saad, and B. K. Panigrahi, “Defending
false data injection on state estimation over fading wireless channels,”
IEEE Transactions on Information Forensics and Security, vol. 16, pp.
1424–1439, 2020.

[62] S. Bhattacharjee and S. K. Das, “Detection and forensics against
stealthy data falsiﬁcation in smart metering infrastructure,” IEEE
Trans. Dependable Secur. Comput., vol. 18, no. 1, pp. 356–371, 2021.
[Online]. Available: https://doi.org/10.1109/TDSC.2018.2889729
[63] Z. Zhang, R. Deng, D. K. Y. Yau, P. Cheng, and J. Chen, “Analysis
of moving target defense against false data injection attacks on power
grid,” IEEE Trans. Inf. Forensics Secur., vol. 15, pp. 2320–2335,
2020. [Online]. Available: https://doi.org/10.1109/TIFS.2019.2928624
[64] R. Tan, H. H. Nguyen, Y. S. E. Foo, D. K. Y. Yau, Z. Kalbarczyk,
R. K. Iyer, and H. B. Gooi, “Modeling and mitigating impact of false
data injection attacks on automatic generation control,” IEEE Trans.
Inf. Forensics Secur., vol. 12, no. 7, pp. 1609–1624, 2017. [Online].
Available: https://doi.org/10.1109/TIFS.2017.2676721

[65] G. Liang, S. R. Weller, F. Luo, J. Zhao, and Z. Y. Dong, “Generalized
fdia-based cyber topology attack with application to the australian
electricity market trading mechanism,” IEEE Transactions on Smart
Grid, vol. 9, no. 4, pp. 3820–3829, 2017.

[66] Y. Fan, Z. Zhang, M. Trinkle, A. D. Dimitrovski, J. B. Song, and
H. Li, “A cross-layer defense mechanism against gps spooﬁng attacks
on pmus in smart grids,” IEEE Transactions on Smart Grid, vol. 6,
no. 6, pp. 2659–2668, 2014.

[67] J. Wang, W. Tu, L. C. Hui, S.-M. Yiu, and E. K. Wang, “Detecting
time synchronization attacks in cyber-physical systems with machine
learning techniques,” in 2017 IEEE 37th International Conference on
Distributed Computing Systems (ICDCS). IEEE, 2017, pp. 2246–2251.
[68] M. Delcourt, E. Shereen, G. Dán, J. L. Boudec, and M. Paolone, “Time-
synchronization attack detection in unbalanced three-phase systems,”
IEEE Trans. Smart Grid, vol. 12, no. 5, pp. 4460–4470, 2021.
[69] D. Rupprecht, K. Kohls, T. Holz, and C. Pöpper, “IMP4GT: imperson-
ation attacks in 4g networks,” in 27th Annual Network and Distributed
System Security Symposium, NDSS 2020, San Diego, California, USA,
February 23-26, 2020, 2020.

[70] M. E. Aminanto, R. Choi, H. C. Tanuwidjaja, P. D. Yoo, and K. Kim,
“Deep abstraction and weighted feature selection for wi-ﬁ imperson-
ation detection,” IEEE Transactions on Information Forensics and
Security, vol. 13, no. 3, pp. 621–636, 2017.

[71] H. Liu, Y. Chen, M. C. Chuah, J. Yang, and H. V. Poor, “Enabling
self-healing smart grid through jamming resilient
local controller
switching,” IEEE Transactions on Dependable and Secure Computing,
vol. 14, no. 4, pp. 377–391, 2015.

[72] B. Vignau, R. Khoury, and S. Hallé, “10 years of iot malware: a feature-
based taxonomy,” in 2019 IEEE 19th International Conference on
Software Quality, Reliability and Security Companion (QRS-C).
IEEE,
2019, pp. 458–465.

[73] L. Garcia, F. Brasser, M. H. Cintuglu, A.-R. Sadeghi, O. A. Mo-
hammed, and S. A. Zonouz, “Hey, my malware knows physics!
attacking plcs with physical model aware rootkit.” in NDSS, 2017.
[74] S. Soltan, P. Mittal, and H. V. Poor, “Blackiot: Iot botnet of high
the power grid,” in 27th {USENIX}

wattage devices can disrupt

Security Symposium ({USENIX} Security 18), W. Enck and A. P. Felt,
Eds.

{USENIX} Association, 2018, pp. 15–32.

[75] P. Yi, T. Zhu, Q. Zhang, Y. Wu, and L. Pan, “Puppet attack: A denial
of service attack in advanced metering infrastructure network,” Journal
of Network and Computer Applications, vol. 59, pp. 325–332, 2016.

[76] A. Barua and M. A. A. Faruque, “Hall spooﬁng: A non-invasive dos
attack on grid-tied solar inverter,” in 29th USENIX Security Symposium,
USENIX Security 2020, August 12-14, 2020, S. Capkun and F. Roesner,
Eds. USENIX Association, 2020, pp. 1273–1290. [Online]. Available:
https://www.usenix.org/conference/usenixsecurity20/presentation/barua
[77] A. Alshamrani, S. Myneni, A. Chowdhary, and D. Huang, “A survey
on advanced persistent threats: Techniques, solutions, challenges, and
research opportunities,” IEEE Communications Surveys & Tutorials,
vol. 21, no. 2, pp. 1851–1877, 2019.

[78] R. Pang, H. Shen, X. Zhang, S. Ji, Y. Vorobeychik, X. Luo, A. X. Liu,
and T. Wang, “A tale of evil twins: Adversarial inputs versus poisoned
models,” in CCS ’20: 2020 ACM SIGSAC Conference on Computer
and Communications Security, Virtual Event, USA, November 9-13,
2020, J. Ligatti, X. Ou, J. Katz, and G. Vigna, Eds. ACM, 2020, pp.
85–99. [Online]. Available: https://doi.org/10.1145/3372297.3417253

[79] R. Shokri, M. Stronati, C. Song, and V. Shmatikov, “Membership
inference attacks against machine learning models,” in 2017 IEEE
Symposium on Security and Privacy (SP).

IEEE, 2017, pp. 3–18.

[80] M. Fredrikson, S. Jha, and T. Ristenpart, “Model inversion attacks
that exploit conﬁdence information and basic countermeasures,” in
Proceedings of the 22nd ACM SIGSAC Conference on Computer and
Communications Security, 2015, pp. 1322–1333.

[81] B. Moussa, M. Debbabi, and C. Assi, “Security assessment of time
synchronization mechanisms for the smart grid,” IEEE Communica-
tions Surveys & Tutorials, vol. 18, no. 3, pp. 1952–1973, 2016.
[82] C. Adams, Impersonation Attack. Boston, MA: Springer US, 2005, pp.
286–286. [Online]. Available: https://doi.org/10.1007/0-387-23483-7_
196

[83] L. Babun, H. Aksu, and A. S. Uluagac, “Cps device-class identiﬁcation
via behavioral ﬁngerprinting: From theory to practice,” IEEE Transac-
tions on Information Forensics and Security, vol. 16, pp. 2413–2428,
2021.

[84] L. Yu, B. Luo, J. Ma, Z. Zhou, and Q. Liu, “You are what you
broadcast: Identiﬁcation of mobile and iot devices from (public) wiﬁ,”
in 29th {USENIX} Security Symposium ({USENIX} Security 20), 2020,
pp. 55–72.

[85] S. Marchal, M. Miettinen, T. D. Nguyen, A.-R. Sadeghi, and
N. Asokan, “Audi: Toward autonomous iot device-type identiﬁcation
using periodic communication,” IEEE Journal on Selected Areas in
Communications, vol. 37, no. 6, pp. 1402–1412, 2019.

[86] K. Yang, Q. Li, and L. Sun, “Towards automatic ﬁngerprinting of iot
devices in the cyberspace,” Computer Networks, vol. 148, pp. 318–327,
2019.

[87] J. Yu, A. Hu, G. Li, and L. Peng, “A robust rf ﬁngerprinting approach
using multisampling convolutional neural network,” IEEE Internet of
Things Journal, vol. 6, no. 4, pp. 6786–6799, 2019.

[88] A. Aksoy and M. H. Gunes, “Automated iot device identiﬁcation using
network trafﬁc,” in ICC 2019-2019 IEEE International Conference on
Communications (ICC).

IEEE, 2019, pp. 1–7.

[89] R. R. Maiti, S. Siby, R. Sridharan, and N. O. Tippenhauer, “Link-layer
device type classiﬁcation on encrypted wireless trafﬁc with cots radios,”
in European Symposium on Research in Computer Security. Springer,
2017, pp. 247–264.

[90] M. Miettinen, S. Marchal, I. Hafeez, N. Asokan, A.-R. Sadeghi,
and S. Tarkoma, “Iot sentinel: Automated device-type identiﬁcation
for security enforcement in iot,” in 2017 IEEE 37th International
Conference on Distributed Computing Systems (ICDCS).
IEEE, 2017,
pp. 2177–2184.

[91] D. Formby, P. Srinivasan, A. M. Leonard, J. D. Rogers, and R. A.
Beyah, “Who’s in control of your control system? device ﬁngerprinting
for cyber-physical systems.” in NDSS, 2016.

[92] Q. Gu, D. Formby, S. Ji, H. Cam, and R. Beyah, “Fingerprinting
for cyber-physical system security: Device physics matters too,” IEEE
Security & Privacy, vol. 16, no. 5, pp. 49–59, 2018.

[93] S. V. Radhakrishnan, A. S. Uluagac, and R. Beyah, “Gtid: A technique
for physical device and device type ﬁngerprinting,” IEEE Transactions
on Dependable and Secure Computing, vol. 12, no. 5, pp. 519–532,
2014.

[94] MITRE-Corporation,

“Common

vulnerabilities

and

exposures.”

[Online]. Available: https://cve.mitre.org/data/downloads/index.html

[95] J. Pennington, R. Socher, and C. D. Manning, “Glove: Global vectors
for word representation,” in Proceedings of the 2014 conference on

34

empirical methods in natural language processing (EMNLP), 2014,
pp. 1532–1543.

[96] D. She, Y. Chen, A. Shah, B. Ray, and S. Jana, “Neutaint: Efﬁcient
dynamic taint analysis with neural networks,” in 2020 IEEE Symposium
on Security and Privacy (SP).

IEEE, 2020, pp. 1527–1543.

[97] S. Poeplau and A. Francillon, “Systematic comparison of symbolic
execution systems:
intermediate representation and its generation,”
in Proceedings of the 35th Annual Computer Security Applications
Conference, 2019, pp. 163–176.

[98] R. Baldoni, E. Coppa, D. C. D’elia, C. Demetrescu, and I. Finocchi,
“A survey of symbolic execution techniques,” ACM Computing Surveys
(CSUR), vol. 51, no. 3, pp. 1–39, 2018.

[99] C. Cadar, D. Dunbar, D. R. Engler et al., “Klee: unassisted and
automatic generation of high-coverage tests for complex systems
programs.” in OSDI, vol. 8, 2008, pp. 209–224.

[100] V. Chipounov, V. Kuznetsov, and G. Candea, “The s2e platform:
Design, implementation, and applications,” ACM Transactions on Com-
puter Systems (TOCS), vol. 30, no. 1, pp. 1–49, 2012.

[101] “angr.” [Online]. Available: http://angr.io/
[102] Y. Shoshitaishvili, R. Wang, C. Salls, N. Stephens, M. Polino,
A. Dutcher, J. Grosen, S. Feng, C. Hauser, C. Kruegel et al., “Sok:(state
of) the art of war: Offensive techniques in binary analysis,” in 2016
IEEE Symposium on Security and Privacy (SP).
IEEE, 2016, pp.
138–157.

[103] I. Yun, S. Lee, M. Xu, Y. Jang, and T. Kim, “{QSYM}: A practical con-
colic execution engine tailored for hybrid fuzzing,” in 27th {USENIX}
Security Symposium ({USENIX} Security 18), 2018, pp. 745–761.

[104] M. Zalewski, “American fuzzy lop.” [Online]. Available: https:

//lcamtuf.coredump.cx/aﬂ/

[105] A. Fioraldi, D. Maier, H. Eißfeldt, and M. Heuse, “Aﬂ++: Combining
incremental steps of fuzzing research,” in 14th {USENIX} Workshop
on Offensive Technologies ({WOOT} 20), 2020.

[106] M. Böhme, V.-T. Pham, and A. Roychoudhury, “Coverage-based
greybox fuzzing as markov chain,” IEEE Transactions on Software
Engineering, vol. 45, no. 5, pp. 489–506, 2017.

[107] Y. Zheng, A. Davanian, H. Yin, C. Song, H. Zhu, and L. Sun, “Firm-aﬂ:
high-throughput greybox fuzzing of iot ﬁrmware via augmented pro-
cess emulation,” in 28th {USENIX} Security Symposium ({USENIX}
Security 19), 2019, pp. 1099–1114.

[108] H. Y. Jinghan Wang, Chengyu Song, “Reinforcement learning-based
Network and
hierarchical seed scheduling for greybox fuzzing.”
Distributed Systems Security (NDSS) Symposium 2021, February
2021.

[109] C. Lyu, S. Ji, C. Zhang, Y. Li, W.-H. Lee, Y. Song, and R. Beyah,
“{MOPT}: Optimized mutation scheduling for
fuzzers,” in 28th
{USENIX} Security Symposium ({USENIX} Security 19), 2019, pp.
1949–1966.

[110] S. Rawat, V. Jain, A. Kumar, L. Cojocar, C. Giuffrida, and H. Bos,
“Vuzzer: Application-aware evolutionary fuzzing.” in NDSS, vol. 17,
2017, pp. 1–14.

[111] S. Gan, C. Zhang, P. Chen, B. Zhao, X. Qin, D. Wu, and Z. Chen,
“{GREYONE}: Data ﬂow sensitive fuzzing,” in 29th {USENIX}
Security Symposium ({USENIX} Security 20), 2020, pp. 2577–2594.
[112] P. Chen and H. Chen, “Angora: Efﬁcient fuzzing by principled search,”
IEEE, 2018,

in 2018 IEEE Symposium on Security and Privacy (SP).
pp. 711–725.

[113] Z. Li, D. Zou, S. Xu, X. Ou, H. Jin, S. Wang, Z. Deng, and Y. Zhong,
“Vuldeepecker: A deep learning-based system for vulnerability detec-
tion,” arXiv preprint arXiv:1801.01681, 2018.

[114] D. Zou, S. Wang, S. Xu, Z. Li, and H. Jin, “𝜇vuldeepecker: A deep
learning-based system for multiclass vulnerability detection,” IEEE
Transactions on Dependable and Secure Computing, 2019.

[115] Z. Li, D. Zou, S. Xu, H. Jin, Y. Zhu, and Z. Chen, “Sysevr: A
framework for using deep learning to detect software vulnerabilities,”
IEEE Transactions on Dependable and Secure Computing, 2021.
[116] Y. Zhou, S. Liu, J. K. Siow, X. Du, and Y. Liu, “Devign: Effective
vulnerability identiﬁcation by learning comprehensive program seman-
tics via graph neural networks,” in Advances in Neural Information
Processing Systems 32: Annual Conference on Neural Information Pro-
cessing Systems 2019, NeurIPS 2019, December 8-14, 2019, Vancouver,
BC, Canada, 2019, pp. 10 197–10 207.

[117] N. Redini, A. Machiry, R. Wang, C. Spensky, A. Continella, Y. Shoshi-
taishvili, C. Kruegel, and G. Vigna, “Karonte: Detecting insecure multi-
binary interactions in embedded ﬁrmware,” in 2020 IEEE Symposium
on Security and Privacy (SP).

IEEE, 2020, pp. 1544–1561.

[118] L. Chen, Y. Wang, Q. Cai, Y. Zhan, H. Hu, J. Linghu, Q. Hou,
C. Zhang, H. Duan, and Z. Xue, “Sharing more and checking less:
Leveraging common input keywords to detect bugs in embedded
systems,” in 30th {USENIX} Security Symposium ({USENIX} Security
21), 2021.

[119] H. Ying, Y. Zhang, L. Han, Y. Cheng, J. Li, X. Ji, and W. Xu,
“Detecting buffer-overﬂow vulnerabilities in smart grid devices via
automatic static analysis,” in 2019 IEEE 3rd Information Technology,
Networking, Electronic and Automation Control Conference (ITNEC).
IEEE, 2019, pp. 813–817.

[120] H. Yoo and T. Shon, “Grammar-based adaptive fuzzing: Evaluation
on scada modbus protocol,” in 2016 IEEE International Conference
on Smart Grid Communications (SmartGridComm).
IEEE, 2016, pp.
557–563.

[121] P. Shirani, L. Collard, B. L. Agba, B. Lebel, M. Debbabi, L. Wang, and
A. Hanna, “Binarm: Scalable and efﬁcient detection of vulnerabilities
in ﬁrmware images of intelligent electronic devices,” in International
Conference on Detection of Intrusions and Malware, and Vulnerability
Assessment. Springer, 2018, pp. 114–138.

[122] Y. Kwon, H. K. Kim, K. M. Koumadi, Y. H. Lim, and J. I. Lim,
“Automated vulnerability analysis technique for smart grid infrastruc-
ture,” in 2017 IEEE Power & Energy Society Innovative Smart Grid
Technologies Conference (ISGT).

IEEE, 2017, pp. 1–5.

[123] M. Liu, Z. Xue, X. Xu, C. Zhong, and J. Chen, “Host-based intrusion
detection system with system calls: Review and future trends,” ACM
Computing Surveys (CSUR), vol. 51, no. 5, pp. 1–36, 2018.

[124] R. Bace and P. Mell, “Nist special publication on intrusion detection
systems,” BOOZ-ALLEN AND HAMILTON INC MCLEAN VA,
Tech. Rep., 2001.

[125] H. Lin, A. Slagell, Z. T. Kalbarczyk, P. W. Sauer, and R. K. Iyer,
“Runtime semantic security analysis to detect and mitigate control-
related attacks in power grids,” IEEE Transactions on Smart Grid,
vol. 9, no. 1, pp. 163–178, 2016.

[126] “Zeek: An open source network security monitoring tool.” [Online].

Available: https://zeek.org/

[127] J. Hong, C.-C. Liu, and M. Govindarasu, “Integrated anomaly detection
for cyber security of the substations,” IEEE Transactions on Smart
Grid, vol. 5, no. 4, pp. 1643–1653, 2014.

[128] L. N. Tidjon, M. Frappier, and A. Mammar, “Intrusion detection
systems: A cross-domain overview,” IEEE Communications Surveys
& Tutorials, vol. 21, no. 4, pp. 3639–3681, 2019.

[129] H. B. Barlow, “Unsupervised learning,” Neural computation, vol. 1,

no. 3, pp. 295–311, 1989.

[130] Y. He, G. J. Mendis, and J. Wei, “Real-time detection of false data
injection attacks in smart grid: A deep learning-based intelligent
mechanism,” IEEE Transactions on Smart Grid, vol. 8, no. 5, pp. 2505–
2516, 2017.

[131] S.-C. Yip, K. Wong, W.-P. Hew, M.-T. Gan, R. C.-W. Phan, and S.-
W. Tan, “Detection of energy theft and defective smart meters in smart
grids using linear regression,” International Journal of Electrical Power
& Energy Systems, vol. 91, pp. 230–240, 2017.

[132] M. A. Faisal, Z. Aung, J. R. Williams, and A. Sanchez, “Data-stream-
based intrusion detection system for advanced metering infrastructure
in smart grid: A feasibility study,” IEEE Systems journal, vol. 9, no. 1,
pp. 31–44, 2014.

[133] A. Bifet, G. Holmes, B. Pfahringer, P. Kranen, H. Kremer, T. Jansen,
and T. Seidl, “Moa: Massive online analysis, a framework for stream
classiﬁcation and clustering,” in Proceedings of the First Workshop on
Applications of Pattern Analysis. PMLR, 2010, pp. 44–50.

[134] K. Sethi, E. S. Rupesh, R. Kumar, P. Bera, and Y. V. Madhav,
“A context-aware robust intrusion detection system: a reinforcement
learning-based approach,” International Journal of Information Secu-
rity, vol. 19, no. 6, pp. 657–678, 2020.

[135] “Nsl-kdd dataset.” [Online]. Available: https://www.unb.ca/cic/datasets/

nsl.html

[136] N. Moustafa and J. Slay, “Unsw-nb15: a comprehensive data set for
network intrusion detection systems (unsw-nb15 network data set),”
in 2015 military communications and information systems conference
(MilCIS).

IEEE, 2015, pp. 1–6.

[137] C. Kolias, G. Kambourakis, A. Stavrou, and S. Gritzalis, “Intrusion
detection in 802.11 networks: empirical evaluation of threats and a
public dataset,” IEEE Communications Surveys & Tutorials, vol. 18,
no. 1, pp. 184–208, 2015.

[138] D. Wang, X. Wang, Y. Zhang, and L. Jin, “Detection of power grid
disturbances and cyber-attacks based on machine learning,” Journal of
Information Security and Applications, vol. 46, pp. 42–52, 2019.

35

[139] T. M. R. B. J. B. Uttam Adhikari, Shengyi Pan, “Power system
datasets,” Apr 2014. [Online]. Available: https://www.sites.google.
com/a/uah.edu/tommy-morris-uah/ics-data-sets

[140] S. Otoum, B. Kantarci, and H. Mouftah, “Empowering reinforcement
learning on big sensed data for intrusion detection,” in Icc 2019-2019
IEEE international conference on communications (ICC).
IEEE, 2019,
pp. 1–7.

[141] M. Tavallaee, E. Bagheri, W. Lu, and A. A. Ghorbani, “A detailed
analysis of the kdd cup 99 data set,” in 2009 IEEE symposium
on computational intelligence for security and defense applications.
IEEE, 2009, pp. 1–6.

[142] S. Al-Riyami, F. Coenen, and A. Lisitsa, “A re-evaluation of intrusion
detection accuracy: Alternative evaluation strategy,” in Proceedings of
the 2018 ACM SIGSAC Conference on Computer and Communications
Security, 2018, pp. 2195–2197.

[143] N. Papernot, “A marauder’s map of security and privacy in machine

learning,” arXiv preprint arXiv:1811.01134, 2018.

[144] B. Biggio, B. Nelson, and P. Laskov, “Poisoning attacks against support

vector machines,” arXiv preprint arXiv:1206.6389, 2012.

[145] B. Biggio, I. Corona, D. Maiorca, B. Nelson, N. Šrndi´c, P. Laskov,
G. Giacinto, and F. Roli, “Evasion attacks against machine learning
at test time,” in Joint European conference on machine learning and
knowledge discovery in databases. Springer, 2013, pp. 387–402.

[146] I. J. Goodfellow, J. Shlens, and C. Szegedy, “Explaining and harnessing
adversarial examples,” arXiv preprint arXiv:1412.6572, 2014.
[147] A. Mairh, D. Barik, K. Verma, and D. Jena, “Honeypot in network
security: a survey,” in Proceedings of the 2011 international conference
on communication, computing & security, 2011, pp. 600–605.
[148] C. Dalamagkas, P. Sarigiannidis, D. Ioannidis, E. Iturbe, O. Nikolis,
F. Ramos, E. Rios, A. Sarigiannidis, and D. Tzovaras, “A survey on
honeypots, honeynets and their applications on smart grid,” in 2019
IEEE Conference on Network Softwarization (NetSoft).
IEEE, 2019,
pp. 93–100.

[149] K. Wang, M. Du, S. Maharjan, and Y. Sun, “Strategic honeypot game
model for distributed denial of service attacks in the smart grid,” IEEE
Transactions on Smart Grid, vol. 8, no. 5, pp. 2474–2482, 2017.

[150] “Conpot: Ics/scada honeypot.” [Online]. Available: http://conpot.org/
[151] A. Jicha, M. Patton, and H. Chen, “Scada honeypots: An in-depth
analysis of conpot,” in 2016 IEEE conference on intelligence and
security informatics (ISI).

IEEE, 2016, pp. 196–198.
[152] “Shodan.” [Online]. Available: https://www.shodan.io/
[153] P. Ferretti, M. Pogliani, and S. Zanero, “Characterizing background
noise in ics trafﬁc through a set of low interaction honeypots,” in
Proceedings of the ACM Workshop on Cyber-Physical Systems Security
& Privacy, 2019, pp. 51–61.

[154] Y. M. P. Pa, S. Suzuki, K. Yoshioka, T. Matsumoto, T. Kasama, and
C. Rossow, “Iotpot: analysing the rise of iot compromises,” in 9th
{USENIX} Workshop on Offensive Technologies ({WOOT} 15), 2015.
[155] M. Abuhamad, T. AbuHmed, A. Mohaisen, and D. Nyang, “Large-scale
and language-oblivious code authorship identiﬁcation,” in Proceedings
of the 2018 ACM SIGSAC Conference on Computer and Communica-
tions Security, 2018, pp. 101–114.

[156] I. Rosenberg, G. Sicard, and E. O. David, “Deepapt: Nation-state apt
attribution using end-to-end deep neural networks,” in International
Conference on Artiﬁcial Neural Networks. Springer, 2017, pp. 91–99.
[157] M.-H. Yang and M.-C. Yang, “Riht: a novel hybrid ip traceback
scheme,” IEEE Transactions on Information Forensics and Security,
vol. 7, no. 2, pp. 789–797, 2012.

[158] K. Choi and H. Dai, “A marking scheme using huffman codes for ip
traceback,” in 7th International Symposium on Parallel Architectures,
Algorithms and Networks, 2004. Proceedings.
IEEE, 2004, pp. 421–
428.

[159] S. Malliga and A. Tamilarasi, “A proposal for new marking scheme
with its performance evaluation for ip traceback,” WSEAS Transactions
on Computer Research, vol. 3, no. 4, pp. 259–272, 2008.

[160] Malliga and A. Tamilarasi, “A hybrid scheme using packet marking and
logging for ip traceback,” International Journal of Internet Protocol
Technology, vol. 5, no. 1-2, pp. 81–91, 2010.

[161] A. Iacovazzi and Y. Elovici, “Network ﬂow watermarking: A survey,”
IEEE Communications Surveys & Tutorials, vol. 19, no. 1, pp. 512–
530, 2016.

[162] X. Wang, S. Chen, and S. Jajodia, “Network ﬂow watermarking attack
on low-latency anonymous communication systems,” in 2007 IEEE
Symposium on Security and Privacy (SP’07).
IEEE, 2007, pp. 116–
130.

[163] A. Houmansadr, N. Kiyavash, and N. Borisov, “Rainbow: A robust and

invisible non-blind watermark for network ﬂows.” in NDSS, 2009.

[164] A. Houmansadr and N. Borisov, “Swirl: A scalable watermark to detect

correlated network ﬂows.” in NDSS, 2011.

[165] A. C. Bavier, M. Bowman, B. N. Chun, D. E. Culler, S. Karlin, S. Muir,
L. L. Peterson, T. Roscoe, T. Spalink, and M. Wawrzoniak, “Operating
systems support for planetary-scale network services.” in NSDI, vol. 4,
2004, pp. 19–19.

[166] A. Iacovazzi, S. Sarda, D. Frassinelli, and Y. Elovici, “Dropwat: an
invisible network ﬂow watermark for data exﬁltration traceback,” IEEE
Transactions on Information Forensics and Security, vol. 13, no. 5, pp.
1139–1154, 2017.

[167] Y. Cao, S. Li, E. Wijmans et al., “(cross-) browser ﬁngerprinting via

os and hardware level features.” in NDSS, 2017.

[168] O. Starov and N. Nikiforakis, “Xhound: Quantifying the ﬁngerprint-
ability of browser extensions,” in 2017 IEEE Symposium on Security
and Privacy (SP).

IEEE, 2017, pp. 941–956.

[169] R. McMillan, “Deﬁnition: Threat intelligence,” May 2013. [Online].

Available: https://www.gartner.com/en/documents/2487216

[170] W. Tounsi and H. Rais, “A survey on technical threat intelligence in
the age of sophisticated cyber attacks,” Computers & security, vol. 72,
pp. 212–233, 2018.

[171] V. G. Li, M. Dunn, P. Pearce, D. McCoy, G. M. Voelker, and S. Savage,
“Reading the tea leaves: A comparative analysis of threat intelligence,”
in 28th {USENIX} Security Symposium ({USENIX} Security 19), 2019,
pp. 851–867.

[172] E. Bou-Harb, W. Lucia, N. Forti, S. Weerakkody, N. Ghani, and B. Si-
nopoli, “Cyber meets control: A novel federated approach for resilient
cps leveraging real cyber threat intelligence,” IEEE Communications
Magazine, vol. 55, no. 5, pp. 198–204, 2017.

[173] N. Moustafa, E. Adi, B. Turnbull, and J. Hu, “A new threat intelligence
scheme for safeguarding industry 4.0 systems,” IEEE Access, vol. 6,
pp. 32 910–32 924, 2018.

[174] E. Nunes, A. Diab, A. Gunn, E. Marin, V. Mishra, V. Paliath, J. Robert-
son, J. Shakarian, A. Thart, and P. Shakarian, “Darknet and deepnet
mining for proactive cybersecurity threat intelligence,” in 2016 IEEE
Conference on Intelligence and Security Informatics (ISI). IEEE, 2016,
pp. 7–12.

[175] S. Samtani, K. Chinn, C. Larson, and H. Chen, “Azsecure hacker assets
portal: Cyber threat intelligence and malware analysis,” in 2016 IEEE
conference on intelligence and security informatics (ISI).
IEEE, 2016,
pp. 19–24.

[176] S. Barnum, “Standardizing cyber threat intelligence information with
the structured threat information expression (stix),” Mitre Corporation,
vol. 11, pp. 1–22, 2012.

[177] “Introduction to stix,” 2019. [Online]. Available: https://oasis-open.

github.io/cti-documentation/stix/intro

[178] “Introduction to taxii,” 2018. [Online]. Available: https://oasis-open.

github.io/cti-documentation/taxii/intro.html

[179] “Cyber observable

expression: A
structured language for cyber observables,” March 2014. [Online].
Available: https://cybox.mitre.org/about/

expression cyber observable

[180] S. Qamar, Z. Anwar, M. A. Rahman, E. Al-Shaer, and B.-T. Chu,
“Data-driven analytics for cyber-threat intelligence and information
sharing,” Computers & Security, vol. 67, pp. 35–58, 2017.

[181] X. Liao, K. Yuan, X. Wang, Z. Li, L. Xing, and R. Beyah, “Acing
the ioc game: Toward automatic discovery and analysis of open-source
cyber threat intelligence,” in Proceedings of the 2016 ACM SIGSAC
Conference on Computer and Communications Security, 2016, pp.
755–766.

[182] M. M. Armstrong,
December 2020.
internet-of-things/iot-cheat-sheet-digital-twin/

twin?”
[Online]. Available: https://www.ibm.com/blogs/

sheet: What

“Cheat

digital

is

[183] F. Tao, M. Zhang, Y. Liu, and A. Nee, “Digital twin driven prognostics
and health management for complex equipment,” Cirp Annals, vol. 67,
no. 1, pp. 169–172, 2018.

[184] F. Tao and M. Zhang, “Digital twin shop-ﬂoor: a new shop-ﬂoor
paradigm towards smart manufacturing,” Ieee Access, vol. 5, pp.
20 418–20 427, 2017.

[185] F. Tao, J. Cheng, Q. Qi, M. Zhang, H. Zhang, and F. Sui, “Digital twin-
driven product design, manufacturing and service with big data,” The
International Journal of Advanced Manufacturing Technology, vol. 94,
no. 9-12, pp. 3563–3576, 2018.

[186] G. Liu, Y. Huang, N. Li, J. Dong, J. Jin, Q. Wang, and N. Li, “Vision,
requirements and network architecture of 6g mobile network beyond
2030,” China Communications, vol. 17, no. 9, pp. 92–104, 2020.
[187] R. Dong, C. She, W. Hardjawana, Y. Li, and B. Vucetic, “Deep learning
for hybrid 5g services in mobile edge computing systems: Learn from a

36

digital twin,” IEEE Transactions on Wireless Communications, vol. 18,
no. 10, pp. 4692–4707, 2019.

[188] W. Sun, H. Zhang, R. Wang, and Y. Zhang, “Reducing ofﬂoading
latency for digital twin edge networks in 6g,” IEEE Transactions on
Vehicular Technology, vol. 69, no. 10, pp. 12 240–12 251, 2020.
[189] Y. Dai, K. Zhang, S. Maharjan, and Y. Zhang, “Deep reinforcement
learning for stochastic computation ofﬂoading in digital twin networks,”
IEEE Transactions on Industrial Informatics, vol. 17, no. 7, pp. 4968–
4977, 2020.

[190] S. Tao, Z. Cheng, D. Xiao-Dong, L. Lu, C. Dan-Yang, Y. Hong-Wei,
Z. Yan-Hong, L. Chao, L. Qin, W. Xiao et al., “Digital twin network
(dtn): concepts, architecture, and key technologies,” Acta Automatica
Sinica, vol. 47, no. 3, pp. 569–582, 2021.

[191] X. Sun, C. Zhou, X. Duan, and T. Sun, “A digital twin network solution
for end-to-end network service level agreement (sla) assurance,” Digital
Twin, vol. 1, no. 5, p. 5, 2021.

[192] Z. Jiang, H. Lv, Y. Li, and Y. Guo, “A novel application architecture
of digital twin in smart grid,” Journal of Ambient Intelligence and
Humanized Computing, pp. 1–17, 2021.

[193] P. Moutis and O. Alizadeh-Mousavi, “Digital twin of distribution power
transformer for real-time monitoring of medium voltage from low
voltage measurements,” IEEE Transactions on Power Delivery, vol. 36,
no. 4, pp. 1952–1963, 2020.

[194] M. Zhou, J. Yan, and D. Feng, “Digital

twin framework and its
application to power grid online analysis,” CSEE Journal of Power
and Energy Systems, vol. 5, no. 3, pp. 391–398, 2019.

[195] R. Darbali-Zamora, J. Johnson, A. Summers, C. B. Jones, C. Hansen,
and C. Showalter, “State estimation-based distributed energy resource
optimization for distribution voltage regulation in telemetry-sparse
environments using a real-time digital twin,” Energies, vol. 14, no. 3,
p. 774, 2021.

[196] Y. He, J. Guo, and X. Zheng, “From surveillance to digital twin:
Challenges and recent advances of signal processing for industrial
internet of things,” IEEE Signal Processing Magazine, vol. 35, no. 5,
pp. 120–129, 2018.

[197] A. Saad, S. Faddel, and O. Mohammed, “Iot-based digital twin for
energy cyber-physical systems: design and implementation,” Energies,
vol. 13, no. 18, p. 4762, 2020.

[198] C. Brosinsky, D. Westermann, and R. Krebs, “Recent and prospective
developments in power system control centers: Adapting the digital
twin technology for application in power system control centers,” in
2018 IEEE International Energy Conference (ENERGYCON).
IEEE,
2018, pp. 1–6.

[199] A. Salvi, P. Spagnoletti, and N. S. Noori, “Cyber-resilience of critical
cyber infrastructures: Integrating digital twins in the electric power
ecosystem,” Computers & Security, vol. 112, p. 102507, 2022.
[200] M. Atalay and P. Angin, “A digital twins approach to smart grid security
testing and standardization,” in 2020 IEEE International Workshop on
Metrology for Industry 4.0 & IoT.

IEEE, 2020, pp. 435–440.

[201] E. Hadar, D. Kravchenko, and A. Basovskiy, “Cyber digital

twin
simulator for automatic gathering and prioritization of security con-
trols’ requirements,” in 2020 IEEE 28th International Requirements
Engineering Conference (RE).

IEEE, 2020, pp. 250–259.

[202] A. Saad, S. Faddel, T. Youssef, and O. A. Mohammed, “On the
implementation of iot-based digital twin for networked microgrids
resiliency against cyber attacks,” IEEE transactions on smart grid,
vol. 11, no. 6, pp. 5138–5150, 2020.

[203] C. Kan and C. Anumba, “Digital twins as the next phase of cyber-
physical systems in construction,” in Computing in civil engineering
2019: Data, sensing, and analytics.
American Society of Civil
Engineers Reston, VA, 2019, pp. 256–264.

Tianming Zheng received the B.S. degree in the
School of Automation and Electrical Engineering
from the University of Science and Technology
Beijing, China, and the M.S. degree in Electrical
and Computer Engineering from the University of
Illinois Chicago, USA. He is currently pursuing the
Ph.D. degree at the School of Electronic Information
and Electrical Engineering in Shanghai Jiao Tong
University. His current research interests include
smart grid cyber security, Internet of Things, 6G
network, and artiﬁcial intelligence.

37

Xiangjian He is currently a Professor of computer
science with the School of Electrical and Data En-
gineering, University of Technology Sydney (UTS),
and a Core Member, Global Big Data Technolo-
gies Associate Member with the AAI—Advanced
Analytics Institute. As a Chief Investigator, he has
received various research grants, including four na-
tional Research Grants awarded by the Australian
Research Council (ARC). He is also the Director
of the Computer Vision and Pattern Recognition
Laboratory, Global Big Data Technologies Centre
(GBDTC), UTS. He is also a Leading Researcher in several research areas,
including big-learning based human behaviour recognition on a single image,
image processing based on hexagonal structure, authorship identiﬁcation of a
document, and a documents components, such as sentences, and sections,
network intrusion detection using computer vision techniques, car license
plate recognition of high speed moving vehicles with changeable and complex
background, and video tracking with motion blur. He has been a member with
the IEEE Signal Processing Society Student Committee. He has been awarded
the Internationally Registered Technology Specialist by the International
Technology Institute (ITI).

Ming Liu is a research associate at the School of
Electronic Information and Electrical Engineering,
Shanghai Jiao Tong University, China. His research
interests include cyber threat intelligence, intrusion
detection systems, and scalable data analytics.

Deepak Puthal
is a lecturer (assistant professor)
with the School of Computing, Newcastle Univer-
sity, United Kingdom. Before this position, he was
a lecturer (2017–2019) with the University of Tech-
nology Sydney (UTS), Australia and an associate
researcher (2014–2017) at Commonwealth Scien-
tiﬁc and Industrial Research Organization (CSIRO
Data61), Australia. He has a Ph.D. (2017) from the
Faculty of Engineering and Information Technol-
ogy, University of Technology Sydney. His research
spans several areas in cyber security, blockchain,
Internet of Things, and edge/fog computing and has received several recog-
nitions and best paper awards from the IEEE.

Ping Yi
is Associate Professor at School of
Electronic Information and Electrical Engineering,
Shanghai Jiao Tong University in China. He re-
ceived the M.S. degree in computer science from the
Tongji University, Shanghai, China. He received the
Ph.D degree at the department of Computing and
Information Technology, Fudan University, China.
His research interests include mobile computing
and artiﬁcial intelligence security. He is a member
of IEEE Communications and Information Security
Technical Committee.

Yue Wu received the B.S. degree from Dept. of
Information and Electronics, Zhejiang University,
Hangzhou, China in 1989, MS and Ph.D degree from
Dept. of Radio Engineering, Southeast University,
Nanjing, China in 1998 and 2004 respectively. He
is currently a Professor with School of Electronic
Information and Electrical Engineering, Shanghai
Jiaotong University, Shanghai, China. His research
interests include vehicular networks, wireless net-
work security, security and trust for IoT. He is a
member of IEEE and IEEE Communications and

Information Security Technical Committee.

