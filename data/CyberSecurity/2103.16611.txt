A Robust Stackelberg Game for Cyber-Security
Investment in Networked Control Systems

Pratishtha Shukla, Lu An, Aranya Chakrabortty, Senior Member, IEEE,

and Alexandra Duel-Hallen, Fellow, IEEE

1

2
2
0
2

g
u
A
4
2

]

C
O
.
h
t
a
m

[

3
v
1
1
6
6
1
.
3
0
1
2
:
v
i
X
r
a

Abstract—We present a resource-planning game for cyber-
security of networked control systems (NCS). The NCS is as-
sumed to be operating in closed-loop using a linear state-feedback
H2-controller. A zero-sum, two-player Stackelberg game (SG) is
developed between an attacker and a defender for this NCS. The
attacker aims to disable communication of selected nodes and
thereby render the feedback gain matrix to be sparse, leading
to degradation of closed-loop performance, while the defender
aims to prevent this loss by investing in the protection of targeted
nodes. Both players trade their H2-performance objectives for the
costs of their actions. The standard backward induction method
is modiﬁed to determine a cost-based Stackelberg equilibrium
(CBSE) that saves the players’ costs without degrading the
control performance. We analyze the dependency of a CBSE
on the relative budgets of the players as well as on the node “im-
portance” order. Moreover, a robust-defense method is developed
for the realistic case when the defender is not informed about
the attacker’s resources. The proposed algorithms are validated
using examples from wide-area control of electric power systems.
It is demonstrated that reliable and robust defense is feasible
unless the defender’s resources are severely limited relative to the
attacker’s resources. We also show that the proposed methods
are robust to time-varying model uncertainties and thus are
suitable for long-term security investment in realistic NCSs.
Finally, we employ computationally efﬁcient genetic algorithms
(GA) to compute the optimal strategies of the attacker and the
defender in realistic large power systems.

Index Terms—Cyber-Security, Stackelberg game, Resource
allocation, Robust game theory, Networked Control Systems,
Wide-Area control, Power systems

I. INTRODUCTION

Cyber-physical

security of networked control

systems
(NCS) is a critical challenge for the modern society [1]–
[5]. While research on NCS security has focused on false
data injection and intermittent denial-of-service (DoS) attacks
[2,4]–[9] or stealing information from the cyber system using
advanced persistent threats (APTs) [10], malicious destruc-
tion of communication hardware (e.g. circuit boards, memory
units, and communication ports) [1] or persistent distributed

Manuscript received October 19, 2021; revised June 10, 2022 and July
30, 2022. This research was partially supported by the US National Science
Foundation under grant ECCS 1544871.

Pratishtha Shukla was with the Department of Electrical and Computer
Engineering, North Carolina State University, Raleigh, NC 27606 USA.
She is now with the Oak Ridge National Lab, TN 37831 USA (e-mail:
pshukla@ncsu.edu).

Lu An was with the Department of Electrical and Computer Engineering,
North Carolina State University, Raleigh, NC 27606 USA. She is now with
IBM Research, San Jose, CA 95120 USA (e-mail: lan4@ncsu.edu).

Aranya Chakrabortty and Alexandra Duel-Hallen are with the Department
of Electrical and Computer Engineering, North Carolina State University,
Raleigh, NC 27606 USA (e-mail: achakra2@ncsu.edu; sasha@ncsu.edu).

DoS (DDoS) attacks (where selected targets are ﬂooded with
messages so that they are unable to perform their services)
[11] have received relatively little attention. In reality, these
attacks can cause more severe damage to the communication
network of an NCS compared to data tampering and inter-
mittent jamming as they tend to disable communication and
thus prevent feedback control for an extended period of time,
requiring expensive repairs or recovery efforts [1,11].

A legitimate question, therefore, is how can network op-
erators invest money for securing the important assets in an
NCS against attacks that disable communication permanently
under a limited budget? The same question applies to attackers
in terms of targeting the best set of devices whose failure to
communicate will maximize damage. These types of questions
are best answered using game theory, which has been used
as a common tool for modeling and analyzing cyber-security
problems as it effectively captures conﬂicting goals of attack-
ers and defenders [6]–[8,10,12]–[14]. However, game-theoretic
research for NCS security is often unrelated to the model of
the physical system and/or control methods [7,15,16]. These
works also do not consider persistent DDoS or hardware attack
models [7,10,15] and tend to employ repeated games where
the players update their investment strategies in response to
the actions of their opponents in real time [7,16]. The latter
approach, however, is not practical when a long-term, ﬁxed
security investment is required. Recently, a mixed-strategy
(MS) investment game for mitigation of hardware attacks on
an NCS was presented in [17]. However, MS games [7,8,18]
are also unsuitable for realistic, long-term security investment
since they have randomized strategies and must be played
many times to realize the expected payoffs. A long-term
security investment game has been proposed in [19], but this
game does not address NCS performance objectives.

In this paper, we develop a Stackelberg game [20] for persis-
tent malicious attacks on NCSs where ﬁxed, non-randomized
investment strategies are determined for both players. The
NCS is assumed to be operating in closed-loop using a state-
feedback H2-controller. The actions of the players are modeled
as discrete investment levels into the network nodes, which
indicate the levels of effort and the resulting chances of success
of attack and protection at each node. The need for feedback
control in the model guides the selection of the levels of
attack and security investment at each node. The attacker
aims to disable communication to/from a set of selected
nodes, which makes the feedback gain matrix sparse, thereby
degrading the closed-loop H2-performance. The defender, on
the other hand, invests in tamper-resistant devices [4], intrusion

 
 
 
 
 
 
monitoring, threat management systems that combine ﬁrewalls
and anti-spam techniques [5], devices or software that ensure
authorized and authenticated access via increased surveillance
[21], etc. to prevent the attacks and maintain the optimal
H2-performance. A Stackelberg Equilibrium (SE) [20] of this
game describes an optimal resource allocation of the two play-
ers given their respective budgets. Moreover, the traditional
Backward Induction algorithm is modiﬁed to compute a cost-
based SE (CBSE), which saves the players’ costs without
compromising their payoffs. We analyze the dependency of
the players’ payoffs at CBSE on the budgets and numbers
of investment levels. In addition, to address the scalability
issue of the proposed game for large networked systems,
we enhance the bidirectional, parallel, evolutionary, genetic
algorithm (BPEGA) [22], thus providing a computationally-
efﬁcient approach to ﬁnding a CBSE.

Furthermore, the model parameters of an NCS usually vary
over time due to changes in operating conditions, thereby
making the NCS model uncertain [23]. Modifying the security
investment as these changes occur can be time-consuming
and expensive. Thus, unlike in repeated dynamic games [7],
we seek ﬁxed, long-term investment that provides robustness
to model uncertainty. Moreover, for a realistic setting where
the defender, who is the leader of the SG, does not know
the follower’s, i.e. the attacker’s, capabilities, we develop a
robust-defense sequential algorithm where the defender pro-
tects against the most powerful hypothetical attacker.

The proposed games are validated using an example of
wide-area oscillation damping control for the IEEE 39-bus
model, which represents the New England power system. First,
we show that as the cost of defense per node increases, CBSEs
of the proposed cost-based Stackelberg game (CBSG) reveal
the “important” physical nodes [17,24], which are prioritized
for protection and attack due to their impact on the control
performance. We also show that reliable control performance
can be maintained unless the defender’s resources are much
more limited than the attacker’s. Second, we demonstrate
feasibility of robust, long-term protection for power systems
with model uncertainty as well as the defender’s uncertainty
the attacker’s resources. Third, we demonstrate the
about
efﬁciency of the enhanced BPEGA method. Finally, to show
the applicability of the proposed techniques to large-scale
networks, we extend our simulation study to the IEEE 68-
bus system, which has more than twice the number of states
than the 39-bus model.

For our problem, we consider a linear state feedback con-
troller with a H2-control objective. The proposed security
investment strategies are assumed to be ﬁxed over long periods
of time. The NCS model may change over such periods, but
we show that our game is robust to model variations provided
the change is estimated and followed by a new H2-control
design. This assumption, although idealistic, provides baseline
performance bounds and allows for deployment of efﬁcient
computational tools developed for sparse H2 feedback con-
trollers [24,25]. While more realistic constraints and stability
guarantees were recently addressed for sparse control designs
in, e.g., [26]–[29], these methods are computationally complex
and do not easily extend to large NCSs. However, they can

2

Fig. 1: Schematic of a Networked Control System (NCS)

be readily adopted by our investment methods when more
computationally efﬁcient solutions are found.

The main contributions of this paper are summarized below:
‚ Development of a Stackelberg security investment game
for hardware or persistent DDoS attacks that deactivate
communication and thereby degrade feedback control
performance.

‚ Formulation and analysis of robust, long-term security
investment methods for NCSs with uncertain dynamic
models and defender’s uncertainty about the attacker’s
resources.

‚ Identiﬁcation of critical assets of NCSs using sparse

feedback control and proposed security methods.

‚ Utilization of genetic-algorithm-based numerical solu-
tions to the proposed methods for applications to large-
scale NCSs.

The rest of the paper is organized as follows. In Section
II, we describe an NCS model as well as attack and defense
models. The proposed cost-based Stackelberg game for NCS
security investment is presented in Section III. Section IV
describes realistic, long-term, robust security investment meth-
ods. Numerical results are provided in Section V. Section VI
concludes the paper.

II. PROBLEM FORMULATION

A. Networked Control System Model and Controller

We consider an NCS with n nodes. Each node may be
characterized by multiple states and control inputs, as shown in
Fig. 1. At the ith node, the state vector is denoted as xi P Rmi,
ř
n
i“1 mi, and the control
with the total number of states m “
input is denoted as ui P Rri, i “ 1, . . . , n, with the total
ř
n
i“1 ri. The state-space model
number of control inputs r “
of the network is written as

9xptq “ Axptq ` Buptq ` Dwptq,

(1)

n ptqqT

1 ptq, ..., xT

1 ptq, ..., uT

P Rmˆ1, uptq “
where xptq “ pxT
n ptqqT P Rrˆ1, wptq P Rqˆ1 is a disturbance
puT
input modeled as white noise and A P Rmˆm, B P Rmˆr,
D P Rmˆq are the state, input, and the disturbance matrices,
respectively. Assuming all states are measured, the control
input uptq is designed using linear state-feedback

uptq “ ´Kxptq,

(2)

where K P Rrˆm is the feedback gain matrix:

»

—
—
—
—
—
–

K “

K11 K12

¨ ¨ ¨ K1m

K21 K22
...
...
Kr1 Kr2

¨ ¨ ¨ K2m
...
¨ ¨ ¨ Krm

¨ ¨ ¨

ﬁ

ﬃ
ﬃ
ﬃ
ﬃ
ﬃ
ﬂ

.

From (3) it follows that

ujptq “ ´Kjixi

(3)

(4)

i.e. the ri ˆ mj block matrix Kji represents the topology of
the communication network needed to transmit the state of
node i to the controller at node j. The diagonal blocks Kii
correspond to the local, or self-links, while the off-diagonal
blocks Kji, i ‰ j indicate the inter-node communication links,
respectively, as shown in Fig. 1.

The objective is to ﬁnd the feedback matrix K that mini-

mizes the H2-performance cost function

JpKq “ tracepDT P Dq
subject to pA ´ BKqT P ` P pA ´ BKq

(5)

“ ´pQ ` KT RKq

where P is the closed-loop observability Gramian, Q “ QT ľ
0 P Rmˆm and R “ RT ą 0 P Rrˆr are design matrices that
denote the state and control weights, respectively. Using the
standard assumptions, pA, Bq is stabilizable, and pA, Q1{2q
is detectable [24].

B. Attack and Defense Model

We consider two types of attacks, namely hardware attacks
and persistent DDoS attacks. In hardware attacks, a malicious
agent attempts to compromise the computer hardware com-
ponents associated with selected network nodes, such as com-
munication ports, circuit boards, etc. [1], causing disruption of
the feedback signal to/from these nodes. On the other hand,
in persistent DDoS attacks, the computers associated with
selected network nodes are ﬂooded with messages and thus are
unable to communicate control data for long time periods [11].
As shown in Fig. 1, the nodes in an NCS communicate with
each other according to the connectivity of K to exchange
the state information and compute the control inputs following
(2). The communication between the nodes of an NCS can be
deﬁned by various topologies, such as direct communication,
internet or an ad-hoc network, a cellular network, cloud-
based or edge-based hierarchical communication, etc [30].
Independent of the network model, the hardware components
that enable transmission of each state xiptq and reception
of each state vector uiptq from all network nodes (e.g., on-
board computers, virtual machines in the cloud [31], etc) can
be destroyed or compromised during a hardware attack [1].
Similarly, as discussed earlier, a persistent DDoS attack that
targets node i can prevent this node from sending and receiving
feedback data for an extended time period. In either case, a
successful attack on node i will zero out the entire ith block-
row and block-column of K in (3) as shown in Fig. 2, thereby
degrading the closed-loop H2-performance (i.e. resulting in a
suboptimal value of J in (5)). The attacker invests as per its

3

Fig. 2: Disabled communication for node 3 of Fig. 1 corresponding to the
sparsity pattern s6 “ p110q. All communication and self-feedback links
associated with node 3 are disabled.

budget into selected nodes to increase the value of J while
the defender aims to protect the system performance from
such degradation against attacks by installing tamper-resistant
devices and/or intrusion monitoring software (for details of the
mechanisms please see [4,5,21]). Note that the defender does
not know when and where an attack might happen, so it acts
proactively by selecting a set of nodes and the protection levels
to maintain J as low as possible within the defense budget
in case of a future attack. Our objective is to formulate a
Stackelberg game for optimal resource allocation by both the
defender of an NCS and a malicious attacker assuming the
hardware and persistent DDoS attack models described above.

III. STACKELBERG GAME FOR NCS SECURITY
INVESTMENT
The attacker’s actions a and the defender’s actions d
indicate the levels of investment into the system nodes, which
measure the levels of effort and the resulting chances of
successful attack and protection at these nodes, respectively.
Both players have budget constraints and also aim to re-
duce their costs of attack or protection. The attacker and
the defender have opposite control performance goals. The
attacker aims to increase the H2-performance cost
in (5)
while the defender tries to keep it as close to the optimal
value as possible. The payoffs of the attacker and defender
are denoted as U apa, dq and U dpa, dq, respectively. Given a
pair of investment strategies pa, dq, U dpa, dq “ ´U apa, dq,
resulting in a zero-sum game [32].

As in many SGs for security [6,10,19], the defender is
the leader and chooses its investment proﬁle ﬁrst. Given a
defender’s action d, the attacker follows by a best-response to
U apa, dq. Thus, the defender
d, given by a “ gpdq “ arg max
chooses a strategy d that maximizes its payoff given the
attacker’s best responses to its actions. A resulting Stackelberg
Equilibrium (SE) [20] speciﬁes a pair of strategies pa˚, d˚q,
which optimizes the payoffs of the players in an SG. Finally,
we augment the standard SG described above by selecting
an SE that reduces the players’ costs. The resulting game is
termed as cost-based Stackelberg game (CBSG).

a

In this section, we assume that the opponent’s budget and
the number of investment levels are known to each player.
Moreover, we assume that the system model is ﬁxed and
known to the players. These idealistic assumptions result in

a baseline game performance characterization and will be
relaxed in Section IV.

A. Player’s Actions and Cost Constraints

The actions of the players are given by n-dimensional

investment vectors, denoted as

a “ pa1, a2, ..., anq, d “ pd1, d2, ..., dnq

(6)

level,

for the attacker and the defender, respectively. A higher value
of ak (or dk) corresponds to a larger attack (or protection)
thus the level of effort, at node k. For
investment
increased effort ak exerted by the attacker over
example,
the node k leads to increased loss (e.g., through increased
probability of compromising this node) while the defender’s
action dk over the same node is to choose a level of protection,
effort, or investment
in order to mitigate the
attack. The greater the defender’s investment, the lower the
effectiveness of the attacker’s effort. Investing at level dk “ 1
is assumed to provide node k with perfect protection [33]. The
)
levels ak in (6) are chosen from the set
where La ` 1 is the total number of attacker’s investment
, 2
where Ld ` 1 is the
levels. Similarly, dk P
Ld
number of defender’s investment levels. Given the actions a
and d, the probability of successful attack at node k is given
by [33]

in security,

0, 1
La

0, 1
Ld

, 2
La

, ..., 1

, ..., 1

!

!

)

Pkpa, dq “ akp1 ´ dkq.

(7)

The set of possible attack outcomes at all nodes is repre-

sented by a set of 2n sparsity patterns, or binary n-tuples,

sm “ ps1

m, ..., sn
mq

(8)

where sk
m “ 0 indicates an attack is successful at node k while
sk
m “ 1 means that either protection is successful at node k
or node k is not attacked. From (7), the probability that the
sparsity pattern sm occurs given the strategy pair pa, dq is

ź

ź

Psmpa, dq “

Pkpa, dq

p1 ´ Pkpa, dqq.

(9)

k, sk

m“0

k, sk

m“1

Finally, the players’ cost constraints are as follows. The
bounds on the attacker’s and defender’s budgets are denoted
by Ra and Rd, respectively. Let gai and gdi be the costs
of attacking and protecting node i at full effort, respectively.
Scaling this cost by the level of effort and summing over all
nodes, the actions of the players are cost-constrained as

nÿ

i“1

nÿ

gaiai ď Ra,

gdidi ď Rd.

(10)

i“1

We normalize (10) by dividing the ﬁrst and the second
inequality by Ra, Rd, respectively, with the normalized cost
gdi
per node at full effort given by γai “
.
Rd
Thus, the normalized cost constraints are given by

and γdi “

gai
Ra

nÿ

i“1

γaiai ď 1,

nÿ

i“1

γdidi ď 1

(11)

4

sk
m “ 0 is disabled. Thus, the corresponding feedback matrix
K in (3) has the sub-blocks Kkp “ 0 and Kqk “ 0 for all
p “ 1, 2, ..., n, q “ 1, 2, ..., n, imposing the structural sparsity
constraint [24] on the matrix K. For example, Fig. 2 shows the
scenario where communication is disabled within and to/from
node 3 and the resulting structural sparsity of the feedback
matrix K.

Next, we deﬁne the H2-performance loss vector ∆ “

p∆s0 , .., ∆sm , ..., ∆s2n´1q with the mth element given by

∆sm “ JpK˚

smq ´ JpK˚

H2q,

(12)

and K˚

where K˚
sm optimize the H2-performance objective
H2
function in (5) without and with the structural sparsity con-
straint imposed by sm, respectively. The latter can be com-
puted using the structured H2 optimization algorithm in [24].
The loss corresponding to the sparsity pattern s0 “ p0, ..., 0q
represents the open-loop loss given by

∆OL “ JOL ´ JpK˚

H2q

(13)

where JOL is H2-performance of the open-loop system.

Given a and d, the attacker’s payoff is

U apa, dq “

2n´1ÿ

m“0

and the defender’s payoff is

Psm pa, dq∆sm

(14)

U dpa, dq “ ´U apa, dq,

(15)

where Psm pa, dq is given by (9). Thus, the attacker and the
defender aim to maximize and minimize, respectively, the
expected system loss in (14) under the constraints (11). Given
the two payoffs, we next deﬁne the Cost-based Stackelberg
Equilibrium of our proposed game.

Remark 1. The proposed investment methods can easily adopt
a different controller type or control metric by substituting
another control objective instead of the H2-metric (5) into the
loss expression (12) (and (13)). While we assume stable open
loop and thus stabilizing optimal sparse feedback controllers
as in the wide-area control example in Section V, the game can
be extended to scenarios where the attack leads to instability
by protecting the corresponding sparsity patterns fully.

C. Cost-Based Stackelberg Equilibrium (CBSE)

Several methods can be employed for computing an SE
[34]. Among these, the Backward Induction (BI) algorithm is
a popular approach for ﬁnite SGs [6,10]. Since multiple SEs
are possible in the proposed SG, we modify the BI method to
select an SE that saves both players’ investment costs [19,22].
The resulting Cost-Based Backward Induction (CBBI) method
is summarized in Algorithm 1 where the steps 1(a) and 2(b)
are included to save the attacker’s and the defender’s costs
without reducing their payoffs.

B. Structural Sparsity and Players’ Payoffs

Following an attack, when a sparsity pattern sm as in (8)
occurs, all communication to/from each node k for which

Deﬁnition 1. The strategy pair pa˚
o q in (19) and (20) is a
Cost-based Stackelberg Equilibrium (CBSE) of the proposed
cost-based Stackelberg game (CBSG).

o , d˚

Algorithm 1: Cost-Based Backward Induction Algo-
rithm
Step 1: For each action d by the defender that satisﬁes
(11);
(a) the attacker chooses its best response gpdq under
its cost constraint in (11):

gpdq “ arg max

a

U apa, dq,

s.t

nÿ

i“1

γaiai ď 1.

(16)

(b) If there are multiple best responses gpdq in Step
1(a), the attacker chooses the best response with the
smallest cost:

nÿ

gopdq “ arg min
p
i“1

gpdq

γaigpdqiq.

(17)

Step 2: For defender-;
(a) Assuming the attacker uses a response (17) for
each defender’s action d, the defender chooses an
investment strategy that maximizes its payoff under the
constraint in (11):

d˚ “ arg max

d

U dpgopdq, dq,

s.t

nÿ

i“1

γdidi ď 1. (18)

(b) If (18) has multiple solutions, then a defender’s
strategy with the smallest cost is chosen:

nÿ

d˚

o “ arg min
p
i“1

d˚

γdid˚

i q.

Denote

o “ gopd˚
a˚

o q.

(19)

(20)

Remark 2. Note that in Steps 1(b) and 2(b), ties are resolved
arbitrarily. Moreover, at CBSE, U apa˚
o q ě 0 since a
CBSE cannot have a lower attacker’s payoff than in the “no
attack” case when U ap0, dq “ 0. Since the game is zero-
sum, U dpa˚
o q ď 0. Finally, while in general SGs an SE
might not exist, the CBBI Algorithm 1 guarantees existence of
a CBSE in the proposed ﬁnite CBSG (see Theorem 1(a)).

o , d˚

o , d˚

Remark 3. The complexity of computing mth element of the
loss vector (12) using structural optimization [24] is Op2n ˆ
nnzpKsmqq where nnzp.q represents the number of non-zero
elements in the structured matrix Ksm. In the rest of the paper,
we refer to “complexity” as the computational complexity of
the actual game or algorithm steps after the loss vector is
computed.

Since the number of possible payoffs of each player
(14),(15) of the proposed CBSG is bounded by pLa ` 1qn ˆ
pLd ` 1qn, the worst-case game complexity is OppLa ` 1qn ˆ
pLd ` 1qnq. The actual number of payoffs can be signiﬁcantly
lower due to the cost constraints in (11), which limit the sets
of player’s actions.

Following [19], we summarize some properties of the pro-

posed game (14)-(15) in Theorem 1.

5

Theorem 1. (a) Since the number of possible actions is ﬁnite,
Algorithm 1 has at least one solution (a CBSE).
(b) The control performance loss (12) is the same for all
solutions of the game (all CBSEs).
(c) Given La and Ld, the payoff of the attacker (14) or
defender (15) does not increase with its cost per node when
the opponent’s cost per node (11) is ﬁxed.
(d) Given La and Ld, there exist (cid:15) ą 0 and θ ą 0 such
that when γa ă (cid:15) while γd ą θ, the attacker’s payoff at CBSE
U apa˚, d˚q “ ∆OL (the open-loop loss (13)). Moreover, there
exists an α ą 0 such that when γd ă α, the attacker’s payoff
at CBSE U apa˚, d˚q “ 0 (i.e. the optimal H2-performance is
achieved).
(e) When Ld ` 1 (or La ` 1) is increased to L1
a) that
satisﬁes L1
a “ ηpLaq), where η is a positive
integer, the defender’s (15) (or attacker’s (14)) payoff does
not decrease if the costs per node of both players and the
opponent’s number of investment levels La ` 1 (or Ld ` 1)
are ﬁxed.

d “ ηpLdq (or L1

d (or L1

Proof. Please refer to Appendix A.

From Theorem 1, CBBI ﬁnds an SE with reduced costs
of both players while providing the payoff of any other SE.
The properties of the CBSG summarized in Theorem 1 will be
illustrated in Section V. We next present a numerical approach
for computing a CBSE.

D. Cost-based Bidirectional Evolutionary Method for Com-
puting a CBSE

The traditional BI algorithm and thus the CBBI method
(16)-(20) in Algorithm 1 are referred to as traversal searching
methods. According to Remark 3, the CBBI Algorithm 1
has OppLa ` 1qnpLd ` 1qnq computational complexity, which
rapidly increases as the system size (n) and the players’
numbers of investment levels (La and Ld) grow. To reduce the
computational complexity of ﬁnding an SE, genetic algorithms
(GA) have been developed for SGs in [35,36]. However, in
these papers, the evolutionary process was employed only by
the defender. To overcome this limitation, we proposed a bidi-
rectional parallel evolutionary GA (BPEGA) method in [22].
In this paper, we extend the BPEGA algorithm to ﬁnd
a CBSE of the proposed CBSG. The resulting method is
termed cost-based BPEGA and is summarized in Algorithm
2. The changes from the BPEGA Algorithm 5.2 of [22] are as
follows. First, the elitist step (step 6) is modiﬁed to reorder
the individuals with the same ﬁtness value, which guarantees
the selection of the least-cost SE strategy. Furthermore, once
the termination criteria described in Section 5.4.3 in [22] are
met, the CBBI Algorithm 1 is applied on the ﬁnal generation
of populations of the players in step 7 to ﬁnd an optimal
strategy pair pa˚, d˚q. Convergence of Algorithm 2 follows
from Proposition 5.1 in [22].

Proposition 1. For the proposed CBSG, assume the crossover
probability Pc ą 0 and a mutation rate Pm ą 0. The
defender and attacker’s payoffs generated by the CB-BPEGA
(Algorithm 2) converge to their respective payoffs at a CBSE
as the number of iterations tend to inﬁnity.

Algorithm 2: Cost-Based Bidirectional Parallel Evo-
lutionary Genetic Algorithm
Result: One strategy pair pa˚, d˚q
Parameter initialization: Population sizes Sa and Sd,
Crossover probability Pc, Mutation rate Pm, Maximum
number of generations T ; Current generation t “ 0
Step 1. Population Initialization: Randomly selected
feasible initial population for both players
a “ ta1, . . . , aSa u and P OP 0
P OP 0
d “ td1, . . . , dSd u,
where @a P P OP 0
a and @d P P OP 0
d satisfy (11) ;
while the termination criteria are not satisﬁed, do
Step 2. Evaluation: The defender and attacker
compute U dpa, dq and U apa, dq for all a P P OP 0
a
and @d P P OP 0
their ﬁtness values-

d and evaluate them to compute

fdpdq “ U dpgtpdq, dq, @d P P OP t
d
U apa, dq

where a best response gtpdq “ arg max
aPP OP t
a

(21)

and

fapaq “ U apa, d1q, @a P P OP t
a

(22)

where d1 “ arg max
dPP OP t
d

fdpdq;

for Attacker and Defender do

c ) [37]

c (or tmpd

p (or tmpd

c (or tmpd

c ), check if it is a feasible

Step 3. Selection: Select Sa{2 (or Sd{2) pairs
of parents tmpa
p) using the Roulette
Wheel selection method [35]
Step 4. Reproduction: Apply crossover with
Pc and mutation operation with Pm to generate
Sa (or Sd) children tmpa
Step 5. Check feasibility: For each individual
in tmpa
solution to (11). Include all feasible children in
the set tmpa
c,f (or tmpd
c,f )
Step 6. Combine, Sort and Reorder:
Combine P OP t
d) with the set of
feasible children tmpa
c,f ), sort by
the ﬁtness value in the descending order. For
all individuals with same ﬁtness value, re-order
them in ascending order of their costs using
(11). Individuals with same ﬁtness value and
cost are sorted according to their seniority of
being selected, with the individuals who were
present in an earlier generation placed ahead of
those selected later. Sa (or Sd) individuals with
the highest rank are selected as P OP t`1
P OP t`1
d

c,f (or tmpd

a (or P OP t

(or

)

a

end
t Ð t ` 1

end
Step 7. Apply the CBBI Algorithm 1 (16)-(20) to the
ﬁnal generation P OP T
pa˚, d˚q.

a and P OP T

d to determine

Proof. Please refer to Appendix B.

6

traversal CBBI Algorithm 1 (16)-(20) and the proposed CB-
BPEGA. Given a ﬁxed maximum number of generations T and
the population sizes Sa and Sd of the attacker and defender,
respectively, Algorithm 2 has OppT ` 1qSaSdq computational
complexity (Section 5.4.4 in [22]), which is signiﬁcantly lower
than the computational complexity of CBBI Algorithm 1 (see
Remark 3) when the system size is large and T SaSd ! pLa `
1qnpLd ` 1qn [22]. In practice, NCSs with different system
sizes might require different T values to achieve convergence
as demonstrated in Section V.

IV. LONG-TERM, ROBUST SECURITY INVESTMENT
METHODS FOR NCSS

A. Nominal-model CBSG for Systems with Model Uncertainty

The CBSG developed above assumes a ﬁxed system model
in (1), referred to below as the nominal model Mnom. In
practice, the model varies with time. We refer to upcoming
models as “uncertain models” and denote the ith uncertain
model as Mi “ tAi, Biu where Ai and Bi are the state and
input matrices (1) of this model. We set M1 “ Mnom.

nom, d˚

If a CBSE pa˚

nomq of the SG designed for Mnom
is employed as an investment strategy for a future system
realization Mi, we refer to this game as the “nominal-model”
SG. Note that the CBSE of the latter game is in general a
suboptimal investment strategy for model Mi. The fractional
difference between the payoffs of the model Mi and the
nominal model M1 “ Mnom at the CBSE pa˚
nomq is
deﬁned as

nom, d˚

µi,nom % “

(cid:12)
(cid:12)
(cid:12)
(cid:12)

U a

Mi pa˚

nom, d˚
U a

nomq ´ U a
Mnom pa˚

Mnom pa˚
nomq

nom, d˚

nom, d˚

nomq

(cid:12)
(cid:12)
ˆ100 %
(cid:12)
(cid:12)

(23)
where U a
Mipa, dq is the attacker’s payoff (14) when the actual
model is Mi. This payoff is obtained as follows. First, deﬁne
the loss vector ∆Mi, which is found as in (12) with K˚
sm and
K˚
Mipa, dq
H2
are given by (14), (15), respectively, with ∆ replaced by ∆Mi.
Note that µ1,nom “ 0. A similar game can be designed based
on an initial model Mi, i ‰ 1, instead of Mnom.

computed for model Mi. Then U a

Mipa, dq and U d

B. Robust-Defense Security Method

In the above game, we made an idealistic assumption that
the attacker and defender have complete information about
each other. In this subsection, we consider a realistic scenario
where the defender, who acts ﬁrst, does not know the attacker’s
resources and thus prepares to protect against the most pow-
erful attacker. On the other hand, the attacker observes the
defender’s action and is thus able to generate its best response
regardless of its knowledge about the defender’s resources.
The robust-defense method presented below can be formulated
as a trivial Bayesian Stackelberg game (BSG) [38,39], but it
is more intuitive to describe it as the following sequential
algorithm. First, we assume the nominal model M1 “ Mnom
and drop the model index as in Section III. The utility of the
defender is independent of a and is deﬁned as:

Finally, we compare the computational complexity of the

U dpdq “ ´U ap1n, dq,

(24)

where U apa, dq is given by (14), and 1n “ p1, ¨ ¨ ¨ , 1qn,
i.e. the defender assumes full attack on all nodes. Once the
defender identiﬁes its optimal action d˚
RD that maximizes (24)
while saving its cost, the attacker ﬁnds its cost-based best
response using its utility (14). The proposed robust-defense
(RD) method shown in Algorithm 3 does not require back-
ward induction since the players’ optimal strategies are found
sequentially. We denote a solution computed by Algorithm 3

Algorithm 3: Cost-Based Robust Defense Method
A. Leader Optimization Subproblem:
Step 1(a)- The defender chooses an investment by
solving:

d˚ “ arg max

d

U dp1n, dq,

s.t

nÿ

i“1

γdidi ď 1.

(25)

1(b)- A smallest cost defender’s strategy is then
chosen:

nÿ

d˚

RD “ arg min
p
i“1

d˚

γdid˚

i q.

(26)

B. Follower Optimization Subproblem:
Step 1(a)- For given defender’s strategy d˚
attacker chooses its best response a˚ solving:

RD, the

solution of the RD method as at a CBSE of the ideal SG

o q ď U apa˚
Proof. Please refer to Appendix C.

U apa˚

o , d˚

RD, d˚

RDq.

7

(31)

To evaluate the defender’s payoff loss due to its lack
of information about the attacker’s budget, we compute the
mismatch (loss) of actual defender’s utility (29) of the RD
method relative to that of CBSG (15) at its CBSE when the
actual cost is γa:

U dpa˚

o , d˚
o q

U dpa˚

RD, d˚

µγa p%q “

ˆ 100 % (32)

RDq ´ U dpa˚
o , d˚
o q
Moreover, when the system realization is given by model
Mi ‰ Mnom, the proposed RD method developed for the
nominal model can still be used, and the difference of the
utilities obtained for the nominal model Mnom and Mi can be
RD, d˚
computed by (23) with pa˚
nomq.
Finally, we note that the traversal method to compute the
RD solution has at most maxpOppLa ` 1qnq, OppLd ` 1qnqq
computational complexity while the GA method to ﬁnd this
solution has maxpOppT ` 1qSaq,OppT ` 1qSdqq complexity.
Thus, due to the sequential nature of RD algorithm, it is
signiﬁcantly simpler to implement than the ideal CBSG (see
Section III.D).

RDq replacing pa˚

nom, d˚

a˚ “ arg max

a

U apa, d˚

RDq,

s.t

nÿ

i“1

γaiai ď 1. (27)

V. NUMERICAL RESULTS FOR WIDE-AREA CONTROL OF
ELECTRIC POWER SYSTEMS

1(b)- A smallest cost attacker’s strategy is chosen:

A. Power system model

nÿ

a˚

RD “ arg min
p
i“1

a˚

γaia˚

i q.

(28)

RD, d˚

as pa˚
due to the ﬁnite action spaces of both players.

RDq. The existence of this solution is guaranteed

The GA implementation of the RD algorithm is a modiﬁed
version of Algorithm 2, which was presented in Algorithm 4.4
in [39]. Using a similar argument to the proof of Proposition
1, it can be easily shown that the payoffs of this sequential
GA converge to the payoffs of a solution of the RD method
as the number of iterations tends to inﬁnity.

RD, d˚

The attacker’s payoff at

the output of Algorithm 3 is
RDq (14). However, the actual payoff of the de-
RD since
RD. Thus,

U apa˚
fender is not given by its optimized utility (24) at d˚
the actual attacker’s action is not a “ 1, but is a˚
the actual defender’s payoff is

U dpa˚

RD, d˚

RDq “ ´U apa˚

RD, d˚

RDq,

(29)

which is suboptimal due to the defender’s uncertainty as shown
in Theorem 2.

Theorem 2. The defender’s actual payoff U dpa˚
RDq of
the RD method (29) does not exceed its payoff at a CBSE of
the CBSG (14)-(15), i.e.

RD, d˚

U dpa˚

o , d˚

o q ě U dpa˚

RD, d˚

RDq

(30)

while the attacker’s expected payoff is at least as large at a

To demonstrate the performance of the proposed investment
games, we consider one of the most important and safety-
critical examples of an NCS, namely, an electric power system.
The linear static state-feedback controller to be designed is
referred to as wide-area control [40], which helps in damping
system-wide oscillations of power ﬂows by minimizing the
H2-performance function in (5). Before discussing the game,
we ﬁrst brieﬂy overview the dynamic model of the system.

Consider a power system network with n synchronous
generators and (cid:96) loads. We assume that the state of the ith
generator is denoted as ξi “ rδi, ωi, xi,rems P Rmi where
δi is the generator phase, ωi is the generator frequency, and
xi,rem is the vector of all non-electromechanical states. The
control input is considered as the excitation voltage and is
denoted as Γi P R. All the loads in the system are considered
as constant power loads without any dynamics. If one wishes
to include dynamic loads, this can be easily accommodated
by adding extra entries in the state vector xi. Let the pre-
disturbance equilibrium of the ith generator be ξ0
i . The
differential-algebraic model of the entire system, consisting
of the generator models and the load models together with
the power balance in the transmission lines, is converted to a
state-space model using Kron reduction (for details, please see
[41]) and linearized about ξ0
i , i “ 1, 2, ..., n. The small-signal
state of generator i (or node i) is deﬁned as xiptq “ ξiptq´ξ0
i .
The small-signal model of the entire power system is thereafter
written in the form of (1).

For the wide-area control design, R is chosen as the identity
n
i mi, so

matrix while Q “ diagp ¯L, In, Im´2nq where m “

ř

Node Rank

Disabled
generator

Fract. loss %
(local links
disabled)

Fract. loss %
(local links
intact)

1

2

3

4

5

6

7

8

9

9

8

4

7

5

3

2

6

1

40.7

17.96

17.67

16.29

16.26

14.63

13.47

13.41

3.79

Open-loop

1-9

181.92

0.07

0.06

0.06

0.057

0.05

0.045

0.04

0.04

0.01

0.4

8

large loss in the latter case, especially when the local links
are disabled. However, note that the open-loop has ﬁnite H2-
norm since in electric power systems, even if every link in
the wide-area controller fails, the grid is still built to function
stably by means of the power system stabilizers (PSS) inside
the generators. For the rest of this section, we will make a
practical assumption that a successful hardware or persistent
DDoS attack on a given node disables both the self-links and
the communication links to and from that node (see Fig. 2),
reﬂecting the losses shown in the third column of Table I.

TABLE I: Ranking of node “importance” of the New England system (39-bus
p%q of
system) nominal model [43] according to the fractional loss

∆sm
JpK˚

q

H2

the sparsity pattern sm (8) where only that node is attacked successfully. The
open-loop fractional loss is also shown.

that all generators arrive at a consensus in their small-signal
changes in the phase angles. Here, ¯L “ nIn ´ 1n ¨ 1T
n [42]
where 1n P Rnˆ1 is the column vector of all ones, In is the
n ˆ n identity matrix, and Im´2n is the pm ´ 2nq ˆ pm ´ 2nq
identity matrix.

B. Case Study: IEEE 39-bus system

We employ the IEEE 39-bus power model, which consists
of 10 synchronous generators and 19 loads, to evaluate the
performance of the proposed SGs. Generator 1 is modeled by
7 states, generators 2 through 9 are modeled by 8 states each
while generator 10 is modeled by 4 states. Therefore, in this
case n “ 9. The dimension of the state vector in (1) is m “ 75,
i.e. A P R75ˆ75, with the total number of control inputs r “ 9,
resulting in B P R75ˆ9 and K P R9ˆ75. We assume that
D P R75ˆ9 in (1) is a matrix with all elements zero except
for the ones corresponding to the acceleration equation of all
generators. The IEEE 39-bus system is referred to below as
the nominal model. The data set for the IEEE 39-bus system
along with the randomly generated uncertain-model set M can
be found in [43].

q

1) SG performance for ﬁxed system model: In subsections
B.1 and B.2, the game is evaluated for the ﬁxed nominal
model available in [43]. Table I illustrates the fractional control
performance losses ∆sm
p%q (see (12)) for the sparsity
JpK˚
H2
patterns where only one element of sm in (8) is zero, i.e.
only one generator is disabled. The highest loss is observed
for the disabled generator 9, followed by the generators
8, 4, 7, 5, 3, 2, 6, 1, imposing the “importance” ranking of the
generators, or nodes. From Table I, we observe that when
only the inter-node communication links are disabled while
the self-links are intact (see Fig. 1), the losses are greatly
reduced, conﬁrming that retaining the self-links is critical for
a well-damped closed-loop performance. In other words, it
is important to protect the system against the attacks that
target the self-links [17]. The last row of Table I shows the
open-loop scenario with the loss ∆OL (13). We observe very

Fig. 3: Attacker’s fractional payoff at CBSE vs. costs per node γa of the
attacker and γd of the defender; La “ Ld “ 3; the 39-bus system nominal
model [43].

Fig. 3 shows the fractional attacker’s payoff (14) (relative
to JpK˚
H2 q) at CBSE versus the players’ costs while Fig. 4
illustrates the players’ strategies and payoffs at CBSE. In both
ﬁgures, we assume that all nodes of each player have the same
cost per node in (11), i.e., γai “ γa, γdi “ γd for all i “
1, ..., n. We observe that the performance trends are consistent
with Theorem 1(a)´(d). In general, multiple SEs are possible
for any choice of SG settings. In this example, they occur in
the outlined regions of Fig. 3. The cost pair boundaries of these
regions depend on the parameters n “ 9 and La “ Ld “ 3.
First, multiple SEs exist when γd ď 1
9 , i.e., the defender is
capable of protecting all nodes, resulting in U apa˚, d˚q “ 0
(no loss) while the attacker chooses not to act at CBSE since
it cannot change its payoff as shown in the ﬁrst row of Fig.
4. The second region of multiple SEs corresponds to γa ą
3 where the expected loss is zero since γa ą La, i.e., the
constraint (11) is satisﬁed only when the attacker is inactive
(a “ 0). Thus, the attacker does not have resources to attack
in this region. In this case, a CBSE occurs when the defender
also chooses not to act (see the second row of Fig. 4). Finally,
multiple SEs exist when γa ď 1
9 ă γd ď 3 where
the attacker is able to attack all nodes fully but both players
choose cost-saving strategies. For example, in the third row of
Fig. 4, the attacker saves its cost by not investing into node 9 at
CBSE since the defender fully protects this most “important”
node.

9 while 1

In the fourth row of Fig. 4, the defender is very resource-
limited and thus does not act while the attacker attacks all

9

Fig. 4: Players’ strategies and the attacker’s fractional payoff at CBSE for
several (γa, γdq pairs; La “ Ld “ 3; the 39-bus system nominal model
[43].

nodes, resulting in the open-loop system, which occurs in the
region γa ď 1
9 , γd ą 3 shown in Fig. 3. The last three rows
of Fig. 4 illustrate the scenarios where one or both players are
resource-limited, and thus choose from the “important” nodes
(Table I) to optimize their payoffs strategically. In the ﬁfth
row, the defender invests into the most “important” node 9 at
the level d9 “ 1
3 while the attacker has sufﬁcient resources to
invest fully into both “important” nodes 9 and 8, thus raising
the expected system loss above 50%. When γa “ 2, γd “ 1
(sixth row), the defender invests into the “important” nodes
9 and 8 while the attacker chooses the unprotected, but still
“important”, node 4 since it has low chance of affecting the
outcome for the more “important” nodes due to its limited
budget. The resulting attacker’s payoff is low in this case.
Finally, in the last row, the defender is more resource-limited
than the attacker, and both players target node 9 at the levels
dictated by their cost constraints in (11), with the resulting
payoff increasing relative to the sixth row.

While we assumed that all nodes have the same costs γa or
γd for the attacker and defender, respectively, in some systems,
the cost of attacking or protecting a certain node (e.g. an
“important” node) might be higher than that for other nodes.
For example, we found that when a player’s cost of the most
“important” node 9 increases signiﬁcantly relative to the costs
of the other nodes, that player avoids investing into node 9,
and thus it’s payoff decreases.

In Fig. 5, we illustrate the players’ fractional payoffs for
γa “ γd “ 1.5 (which characterize moderate resources of
both players) as a player’s number of investment levels varies
while its opponent’s number of investment levels is ﬁxed.
Similar simulations were performed for other cost pairs, and
the results are consistent with Theorem 1(e). We observe that
setting a player’s number of levels to three provides a near-
optimal payoff for that player for any ﬁxed opponent’s number
of levels. Thus, La “ Ld “ 3 is used in the numerical results
throughout the paper.

Finally, in [39] we compared the proposed game with indi-
vidual optimization (IO) where the attacker aims to degrade the
system performance by increasing the H2-performance cost J
in (5) while the defender aims to decrease it. We summarize
these results below. In IO, both players act under their indi-
vidual budget constraint and without taking into account the
opponent’s possible actions. Thus, as in the CBSG, each player

(a)

(b)

Fig. 5: Players’ fractional payoffs at CBSE; (a) Defender’s fractional payoff
vs. La for several Ld values; (b) Attacker’s fractional payoff vs. Ld for
several La values; γa “ γd “ 1.5; the 39-bus system nominal model [43].

always targets its “important” nodes in IO. However, in the
game the players’ strategies affect each other and the attacker
often prefers to avoid the nodes protected by the defender
as was illustrated in Fig. 4. This behavior was not observed
in IO. We found that each player’s payoff can be up to 50%
lower when using IO relative to playing the game for some cost
pairs pγa, γdq. Moreover, the players’ costs can be signiﬁcantly
lower when playing the proposed CBSG than in IO since the
CBBI Algorithm 1 selects an SE with the lowest cost while in
IO each player invests fully up to its budget constraint [39].
2) CB-BPEGA validation: In this subsection, we validate
convergence of the CB-BPEGA Algorithm 2 for the nominal
model of the IEEE 39-bus system. We set
the attacker’s
population size Sa “ 30 and the defender’s population size
Sd “ 30. The crossover probability Pc “ 0.85 and the
mutation rate Pm “ 0.10. The maximum number of gener-
ations is set to T “ 20. These initialization parameters are
selected experimentally and reﬂect the trade-off between the
convergence and computational complexity for the IEEE 39-
bus system. The CB-BPEGA method described in Algorithm
2 is applied to ﬁnd a CBSE for the proposed CBSG.

Fig. 6 shows the comparison of the players’ payoffs at
a CBSE of the CBBI Algorithm 1 and of the CB-BPEGA
Algorithm 2 at convergence versus cost of attack γa (Fig. 6a)
and cost of defense γd (Fig. 6b) for ﬁxed levels of investment
La “ Ld “ 3. We observe that the CB-BPEGA method con-

10

computational complexity of the CB-BPEGA Algorithm 2 is
Op20 ˆ 30 ˆ 30q “ Op18000q for any cost pair.

In this subsection,

3) Performance of the nominal-model CBSG for uncertain
systems:
to evaluate the robustness of
the proposed CBSG (Section IV.A) to model uncertainties,
we generate a set of uncertain models of the IEEE 39-bus
system. This is done by perturbing the reactive power setpoints
of all
loads and the inertias of all generators by adding
independent and identically distributed (iid) Gaussian random
variables [44] with zero means (µ “ 0) and unity standard
deviations (σ “ 1). The probability of the change in the load
reactive power is considered to be twice that of the change
in inertia [41]. For each combination of the perturbations in
these parameters, power ﬂow is run on the nonlinear power
system model to determine the corresponding equilibrium,
followed by small-signal linearization around this equilibrium.
The model set is represented as M “ tM1, ..., Mj, ..., MM u
where Mj “ tAj, Bu. As the matrices B and D in (1) are
independent of the chosen uncertainties, we assume them to
be ﬁxed at the nominal values for all models in M. Note
that the number of models (M ) in the set M satisﬁes the
criteria for the sample size given the margin of error (MOE)
of 0.05, the standard deviation of 1, and the conﬁdence interval
(CI) of 95%. The sample size or the number of models in the
set M is computed as M ě ppz ˆ σq{M OEq2 “ 1536.64
where z “ 1.96. Thus, we set M “ 1550. This sample size
takes into account uncertainties in both loads and generator
inertia [45,46].

Fig. 8 represents the utility difference (23) statistics for the
nominal-model SG employed over the set M for certain cost
pairs. Since the nominal-payoff model M1 is included in M,
µi,nom “ 0. We found that for individual
µ1,nom “ min
cost pairs within Fig. 8, these statistics were similar. For

i

(a)

(b)

Fig. 6: Players’ payoffs at the CBSE found by the CBBI Algorithm 1 and
the CB-BPEGA Algorithm 2 at convergence: (a) Attacker’s payoff vs. γa;
(b) Defender’s payoff vs. γd; La “ Ld “ 3; the 39-bus system nominal
model [43].

verges to a CBSE found by the CBBI Algorithm 1, conﬁrming
Proposition 5.1 in [22]. Moreover, Fig. 7 demonstrates that
Algorithm 2 converges to a CBSE obtained by the traversal
CBBI method in fewer than 15 iterations. Similar results were
obtained for other cost pairs, demonstrating fast convergence
of the CB-BPEGA Algorithm 2.

Fig. 7: Convergence of the defender’s payoff in the CB-BPEGA Algorithm 2
with La “ Ld “ 3; the 39-bus system nominal model [43].

For the nominal model [43] of the IEEE 39-bus system,
given parameter values above, CBBI Algorithm 1 has at
most as Op49 ˆ 49q complexity from Remark 3 while the

Fig. 8: Boxplot of the utility difference µi,nom% (23) over a randomly
generated set M of 1550 models and 4 cost pairs pγa, γdq: p1.5, 1.5q,
p0.5, 1.5q, p1.5, 0.5q and p2.5, 2.5q; La “ Ld “ 3; the 39-bus system [43].

example, the mean mismatch values for cost pairs p1.5, 1.5q,
p0.5, 1.5q, p1.5, 0.5q, and p2.5, 2.5q are 9.55, 10.17, 11.67 and
12.78, i.e. within close proximity of each other [39]. We
note that most uncertain models experience modest payoff

differences from the nominal-model payoff shown in Fig. 3.
Thus, the nominal-model CBSG is a robust solution to security
investment in NCS.

4) Performance of Robust-Defense Method: In this subsec-
tion, we compare the performance of the RD Algorithm 3 and
the ideal SG Algorithm 1 when the system model is ﬁxed as
the nominal model. Fig. 9 shows the fractional payoffs of the
players for both methods for selected costs of attack and de-
fense. These results are consistent with Theorem 2. Moreover,
we note that the players’ payoffs for the realistic RD method
are close to those of the ideal SG, which assumes complete
knowledge of the attacker’s resources by the defender.

For the cost pair values in Fig. 9, Fig. 10 shows the
mismatch (loss) of the defender’s payoff in the RD method
µγa (%) (32) due to the defender’s lack of knowledge of the
attacker’s budget. We observe that the mismatch can be as

11

Fig. 10: Mismatch µγa (%) (32) of the RD method due to uncertain attacker’s
resources for the defender when the actual attacker’s cost is γa; the 39-bus
system [43].

higher cost) in the RD method relative to the ideal SG where
the defender knows the attacker’s resources. On the other hand,
the attacker’s investment cost is the same in both methods. Fig.
11 shows the players’ strategies and the defender’s excess cost
of the RD method relative to the ideal CBSG for several pairs
of the actual costs of attack/defense per node. The ﬁgure also
shows the payoff mismatch (32) for these cost pairs. Note that

(a)

(b)

Fig. 9: Players’ actual fractional payoffs at CBSE of the nominal-model SG
(Section III.C) and the RD solution (Section IV); (a) Attacker’s fractional
expected payoff vs. γa for γd “ 1, 2.5; (b) Defender’s actual fractional
payoff vs. γd for γa “ 1, 2.5; La “ Ld “ 3; the 39-bus system [43].

high as 24.9% (for γa “ 2.5, γd “ 0.3) due to overprotection,
but tends to decrease as γd grows and γa decreases. The
former trend is due to limited protection options for a resource-
constrained defender while the latter is caused by a better
match between the actual γa value and the defender’s estimate
of zero attacker’s cost.

Furthermore, due to the assumption of the most powerful
attacker, the defender always invests fully up to the given
budget constraints (11) and thus is likely to overinvest (incur a

Fig. 11: Players’ strategies and defender’s excess cost and mismatch (loss)
RD, d˚
(32) at the solution of the RD method pa˚
RDq (25)-(28) vs. ideal SG
at CBSE pa˚
SG, d˚
SGq (20) for several (γa, γdq pairs; La “ Ld “ 3; the
39-bus system [43].

when the cost of attack per node is high (e.g., γa “ 3.5), the
defender’s cost is much higher in the RD method than in the
ideal SG since in the former the defender overestimates the
attacker’s resources and thus commits more resources than
necessary for protection. We note that the actual payoffs of
both methods are zero in this case due to the weak attacker.
When the attacker is stronger (γa ď 3), the defender’s costs
are the same in both approaches but the defender is able to
commit its resources more strategically in the ideal SG since it
knows the attacker’s resources. For example, in the fourth row
of Fig. 11, the defender invests fully in the two most important
nodes in the RD method but distributes its resources over 5
nodes in the ideal SG. The resulting utility of the defender is
22.88% lower in the RD method. In the ﬁfth row of Fig. 11, the
defender’s utility loss relative to the ideal SG is much smaller

(1.81%) since the attacker is relatively strong in this case.
Similarly, in the last two rows, the mismatch further reduces
due the attacker’s low cost (γa “ 0.5), thus approximating the
assumption of its zero cost made by the defender in the RD
algorithm.

Finally, we found that the RD GA method in Section IV.B
is able to compute the RD solution in about 15 iterations. The
parameters of this method were the same as that for the CB-
BPEGA method in Section V.B.2. We also simulated the RD
method for the uncertain model set M and observed that the
payoff difference (23) and boxplot statistics were similar to
the results for the nominal-model SG in Section V.B.3 [39].
5) Computational Complexity: This subsection summarizes
the computational requirements of the proposed methods for
the IEEE 39-bus model. First, all algorithms require the
computation of the loss vector corresponding to all sparsity
patterns in (8) (see Remark 3). This computation is dominated
by the structured H2 optimization algorithm in [24], which is
completed in under 900 seconds1.

For Algorithm 1 (CBBI method), the payoff matrix (14)
must be computed for all actions that satisfy (11). This com-
putation scales with the number of feasible actions or payoffs
(Remark 3), which is bounded by 418 for the SG designed
for the IEEE 39-bus system model with La “ Ld “ 3.
On the other hand, for Algorithm 2 (CB-BPEGA), the entire
matrix does not need to be computed. Instead, the algorithm
scales with the population sizes Sa, Sd, reducing the size of
the payoff matrix. We found that CB-BPEGA Algorithm 2
reduced the time complexity signiﬁcantly (see Section III.D)
for lower cost values, i.e. larger action space. For example,
when γa “ γd “ 0.5, the action space of the players is not
restricted signiﬁcantly, corresponding to a high computation
load. In this case, the computation time of CBSE is about 1120
seconds using CBBI Algorithm 1 and is under 410 seconds
for the CB-BPEGA Algorithm 2 with the number of iterations
T “ 20 and population sizes as Sa “ Sd “ 30.

Moreover, as discussed in Section IV.B, the RD method has
lower computation load than the CBSG. When γa “ γd “ 0.5,
the computation time of the Algorithm 3 (sequential traversal
method) is 460 seconds while the GA for ﬁnding the RD
solution with the number of iterations T “ 20 and population
sizes as Sa “ Sd “ 30 is completed in under 150 seconds.
Thus, the latter reduces the computational complexity by a
factor of 2.5 relative to the former.

Finally, we note that the proposed methods solve a long-
term resource-planning problem and are computed ofﬂine, so
the computation complexity does not signiﬁcantly impact their
implementation.

C. Extension to IEEE-68 bus power system model

The 68-bus test system model [47] consists of 16 generators
and 52 load buses. The generators are modeled by 10 states
each. Thus,
the number of nodes in the NCS is
n “ 16, the dimension of the state vector is m “ 160, i.e.
A P R160ˆ160, the total number of control inputs r “ 16,

in (1),

1The experiments are run using MATLAB on Windows 10 with 64-bit

operating system, 3.4 GHz Intel core i7 processor, and 16GB memory.

12

resulting in B P R160ˆ16 and K P R16ˆ160. We assume
that D P R160ˆ16 is a matrix with all elements equal to zero
except for those corresponding to the acceleration equation of
all generators.

Node
rank

Disabled
gen

1

2

3

4

5

8

7

8

6

8

13

4

9

10

12

3

Fract.
loss
%

19.66

19.61

19.32

19.30

19.20

19.19

19.15

19.14

Node
rank

Disabled
gen

9

10

11

12

13

14

15

16

14

1

2

15

11

5

7

16

Fract.
loss
%

19.08

19.06

19.02

19.01

18.86

18.83

18.72

8.94

Open-loop fract. loss (%) - 169.87

TABLE II: Ranking of node “importance” according to the fractional loss
p%q of the sparsity pattern sm (8) where only that node is attacked

∆sm
JpK˚
successfully. The open-loop fractional loss is 169.87 for disabled generators
1 ´ 16; the IEEE 68-bus system nominal model [43].

H2

q

q

Table II illustrates the fractional control performance losses
∆sm
p%q (see (12)) for the sparsity patterns where only
JpK˚
H2
one element of sm in (8) is zero, i.e. only one generator
is disabled for the “nominal” model of the IEEE 68-bus
system.. The highest loss is observed for the disabled generator
6, followed by the generators 8, 13, 4 and so on, imposing
the “importance” ranking of the generators. Note that this
fractional loss represents a successful hardware or persistent
DDoS attack on a node that disables both self-links and the
communications links to and from that node (see Fig. 2).

The CBBI Algorithm 1 and traversal sequential optimization
Algorithm 3 have very high complexity for the 68-bus model,
so in this subsection we employ only the CBPEGA Algorithm
2 and the sequential GA method (Section IV.B). For both GA
methods, we set the attacker’s population size Sa “ 20 and the
defender’s population size Sd “ 30. The crossover probability
Pc “ 0.85, and the mutation rate Pm “ 0.10. The maximum
number of generations is set to T “ 25. These initialization
parameters are selected experimentally and reﬂect the trade-
off between the convergence and computational complexity
for the IEEE 68-bus system.

Assuming the ﬁxed, nominal model, Fig. 12a shows the
fractional defender’s payoff (15) (relative to JpK˚
H2q) at
CBSE versus the cost of defense for two values of attacker’s
costs while Fig. 12b illustrates the players’ strategies and
payoffs at CBSE for several pγa, γdq cost pairs. In both ﬁgures,
we assume that all nodes of each player have the same cost
per node in (11). We observe that the performance trends are
consistent with Theorem 1(a)´(d).

Next, we evaluate the performance of the nominal-payoff
CBSG over uncertain models in set M of the IEEE 68-bus
system. Similarly to the IEEE 39-bus system, we generate a set
of uncertain models for the IEEE 68-bus system by perturbing
the reactive power setpoints of every load and the inertia of
every generator by adding iid Gaussain variables with zero
mean and unity variance to their nominal values. Note that

13

(a)

(b)

Fig. 12: (a) Defender’s fractional payoffs at CBSEs vs. γd for γa “ 1.5, 2.5;
(b) Players’ strategies and the attacker’s fractional payoff at CBSE for several
(γa, γdq pairs; La “ Ld “ 3; the 68-bus system nominal model [43].

the number of models (M ) in the set M is chosen as 1550
to satisfy the statistical sample size as in Section V.B.3. Fig.
13 shows the payoff difference (23) statistics for the nominal-
model SG employed over 1550 models in M for certain cost
pairs. Similarly to the results for the 39-bus model in Fig. 8,
we observe that the nominal-model game is a robust approach
to security investment in this large-scale system.

Next, we compare the performance of the proposed RD
algorithm (see Section IV.B) to the ideal CBSG for the
nominal-model system. Fig. 14a shows the payoffs of the
defender vs. γd for the ideal SG and the RD method for ﬁxed
values of cost of attack γa. We observe the defender’s utility of
the RD method does not exceed that of the ideal SG, consistent
with Theorem 2, but the former provides robust protection
at small performance loss to the defender. In Fig. 14b, we
illustrate the strategies of the players for these two methods
and two cost pairs. These results as well as the mismatch
trends [39] are consistent with those obtained for the IEEE
39-bus system in Fig. 9-11. Furthermore, as in the IEEE 39-
bus system, the boxplot statistics on the payoff difference for
the RD method resemble those presented in Fig. 13 for the
nominal-payoff CBSG over the uncertain model set M [39].
Finally, we discuss the computational complexity of the
proposed methods for the IEEE 68-bus system. For all algo-
rithms of this subsection, as for the IEEE 39-bus system, the
computation of the loss vector corresponding to all sparsity

Fig. 13: Boxplot of the utility difference µi,nom% (23) over a randomly
generated set M of 1550 models and 4 cost pairs pγa, γdq: p1.5, 1.5q,
p2.5, 2.5q, p1.5, 2.5q and p2.5, 1.5q; La “ Ld “ 3; the 68-bus system
[43].

patterns in (8) is dominated by the structured H2 optimization
algorithm in [24]. This vector is computed in under 2500
minutes1. For Algorithm 1, the computation of the payoff
matrix (14) is bounded by p416 ˆ 416q for the SG designed for
the IEEE 68-bus system model with n “ 16 generators and
investment levels La “ Ld “ 3 (Remark 3). The traversal
Algorithm 1 (CBBI) runs out of memory space, and the
running time is exceeded when computing the payoff matrix
for the cost pair γa “ γd “ 0.5, which corresponds to a very
high computation load. Thus, when costs are small, the CBSG
cannot be computed using Algorithm 1. On the other hand,
the CB-BPEGA Algorithm 2 with the number of iterations
T “ 25, population sizes Sa “ 20 and Sd “ 30 for the
attacker and defender, respectively, runs under 500 seconds
for any cost pair. When the players’ costs are moderate, for
example, γa “ γd “ 1.5, Algorithm 1 (CBBI) runs in approx-
imately 650 seconds while Algorithm 2 takes 490 seconds to
run. These results demonstrate efﬁciency of the evolutionary
algorithms for large-scale systems. The complexity of the RD
methods follows the trends discussed in Section V.B.5.

VI. CONCLUSION

In this paper, we developed several investment methods for
hardware or persistent DDoS attacks on NCSs that aim to
degrade the control performance of the system. These methods
allocate the resources of a system defender and malicious
attacker strategically over the critical assets of an NCS under
the players’ limited budgets. First, a cost-based Stackelberg
security-investment game between an attacker and a defender
of an NCS was investigated. The proposed SG allocate re-
sources in a cost-efﬁcient manner, and cost-based Stackelberg
equilibria of the game reveal the “important” nodes of the
system, whose communication is critical for maintaining sat-
isfactory control performance. Moreover, strategic investment
approaches were proposed to address the model uncertainties
the attacker’s
of an NCS and defender’s ignorance about

14

also exists. Thus, a strategy pair pa˚, d˚q satisfying (16), (18)
exists for the proposed CBSG.
Theorem 1(b). Since the proposed CBSG is zero-sum,
U apa, dq “ ´U dpa, dq. The optimization problems (16) and
(18) can be combined as a mini-max problem:

d˚ “ arg max

U dpgpdq, dq

d
“ ´ arg max

U apgpdq, dq

d
U apgpdq, dq
“ arg min

d

(33)

d

d

U apa, dq.

max
a

“ arg min

max
a
U apa, dq be denoted as U a
Let the optimum of min
o .
Assume two different equilibrium strategy pairs pa˚
i q and
pa˚
j q, i ‰ j, are solutions of (33). Both strategy pairs
must result in the same optimal payoff, i.e. U apa˚
i q “
U apa˚
o . Thus, the control performance loss associ-
ated with the payoffs, ∆sm in (12) is the same for both SEs.
A similar argument can be made for the case when the game

j q “ U a

i , d˚

j , d˚

i , d˚

j , d˚

has N SEs, where N ą 2.
Theorem 1(c). Assume La and Ld are ﬁxed. When the
attacker’s cost per node is γa and the defender’s cost per node
is γd, the defender’s payoff at an SE is U d. Let Γa and Γd
denote the sets of strategies a and d, respectively. Similarly,
when the attacker’s cost per node is γa, and the defender’s cost
per node increases to γ1
d ą γd, the defender’s payoff
at an SE is U d1
. In this case, the attacker’s action space remains
d is denoted Γd1
as Γa while the defender’s action space for γ1
.
According to (11), it is easy to show that Γd1
Ă Γd since
γ1
d ą γd.
Since CBSG is zero-sum, U apa, dq “ ´U dpa, dq. Eq. (16)

d, where γ1

can be written as:

U apa, dq

´U dpa, dq

(34)

gpdq “ arg max

a
“ arg max

a
“ arg min

a

U dpa, dq.

Combining (34) with (18), the optimization of the defender
becomes:

d˚ “ arg max

U dpgpdq, dq

d
“ arg max

d

min
a

U dpa, dq.

(35)

From (35), given γa, the defender’s payoff at an SE for γd
U dpa, dq while its payoff at
is computed as U d “ max
min
aPΓa
dPΓd
Ă Γd,
“ max
d1PΓd1

min
aPΓa
ď U d. Thus, the defender’s payoff is non-increasing with

an SE for γ1
U d1
its cost per node γd when γa is ﬁxed.

U dpa, dq. Since Γd1

d is U d1

Similarly, we can make the argument that when the de-
fender’s cost per node γd is ﬁxed and the attacker’s cost
per node γa increases, the attacker’s payoff at an SE is non-
increasing.
Theorem 1(d) From (14), it is easy to show that the range of
attacker’s payoff at an SE is r0, ∆OLs, where ∆OL is deﬁned
in (13). First, assume that (cid:15) ă 1{n, where n is the total number

(a)

(b)

Fig. 14: (a) Defender’s fractional payoffs; comparison of the RD method
(Section IV) and CBSG (Section III.C) vs. γd for γa “ 1.5, 2.5; (b) Players’
strategies and the attacker’s fractional payoff for two (γa, γdq pairs; La “
Ld “ 3; the 68-bus system [43].

resources. To reduce the complexity of the proposed methods
for large-scale systems, cost-based evolutionary methods were
employed. Using an example of wide-area control of power
systems applied to the IEEE 39-bus test model with model
uncertainty arising from loads and generator parameters, we
demonstrated that successful defense is feasible for both
certain and uncertain scenarios unless the defender is much
more resource-limited than the attacker. Furthermore, a case
study of the IEEE 68-bus system was presented to validate
the efﬁciency of the cost-based evolutionary methods for the
proposed methods in large-scale networked control systems.

APPENDIX

A. Proof of Theorem 1
Theorem 1(a). This proof follows from [48]. Let Γd denote the
set of strategies d for the defender and Γa the set of strategies
a for the attacker. Since Γd and Γa are ﬁnite, the game is ﬁnite,
i.e., the best response function gpdq in Algorithm 1 for any
strategy d maps to a ﬁnite non-empty set (i.e. a maximum
always exists for optimization (16) when Γa is ﬁnite). The
defender’s equilibrium strategy d˚ exists since a maximum
always exists for optimization (18) when Γd is ﬁnite. Similarly,
the attacker’s equilibrium strategy, given by a˚ “ gpd˚q,

of nodes in an NCS, and θ ą Ld. Then, from (11), when γa ă
(cid:15) and γd ą θ, the defender cannot protect any nodes while the
attacker is able to attack all nodes at full effort, resulting in the
sparsity pattern m “ s2n´1 in (8). Thus, feedback control is
disabled and the attacker’s utility at SE is U apa˚, d˚q “ ∆OL.
Similarly, assume that α ă 1{n and γd ă α. The defender
can invest fully at each node following (11) and can protect
against any attack in this case, thus maintaining the optimal
performance i.e., JpK˚
H2q (dense H2 feedback control), re-
sulting in the attacker’s payoff U apa˚, d˚q “ 0 at an SE.
Theorem 1(e). Assume γa and γd are ﬁxed. Let U d denote
the defender’s payoff at an SE when the attacker’s number
of investment levels is La ` 1 and the defender’s number of
investment levels is Ld ` 1. Similarly, when the attacker’s
number of investment levels is La ` 1 and the defender’s
number of investment levels is L1
denote the
defender’s payoff at an SE.

d ` 1, let U d1

When the defender’s number of

levels is
the defender’s actions are represented by d “
Ld ` 1,
pd1, ..., dk, ..., dnq, where dk P D “ t0, 1
, ¨ ¨ ¨ , 1u
Ld
denotes the defender’s investment level into node k. Let Γd
denote the set of strategies d for the defender for this case.

investment

, 2
Ld

When the defender’s number of investment levels is in-
d “ ηpLdq, where η is a positive integer, the
, ¨ ¨ ¨ , 1u. Let
denote the set of strategies d1 for the defender for this
d “ ηpLdq, it is easy to show that D Ă D1.
.

creased to L1
set of possible values of dk P D1 “ t0, 1
L1
d
Γd1
case. Since L1
Thus, Γd Ă Γd1

, 2
L1
d

When computing the SEs, the defender searches all possible
d). Since
. Thus, the defender’s payoff does not
d “ ηpLdq, where η is a

actions in its action space Γd (for Ld) or Γd1
Γd Ă Γd1
decrease when Ld is increased to L1
positive integer given the costs and La ` 1 are ﬁxed.

, U d ď U d1

(for L1

Similar argument can be made for the case when Ld ` 1 is
ﬁxed for the defender and La is increased to a larger number
L1

a “ ηpLaq for the attacker.

B. Proof of Proposition 1

First, since the action spaces of both players are ﬁnite, from
Theorem 1(a), an SE exists in the proposed game. Moreover,
according to Theorem 1(b), the players’ payoffs are the same
at any CBSE of the proposed zero-sum CBSG.

From Theorem 4.1 in [49], due to the crossover and mu-
tation process, any feasible solution appears at least once in
some generation with probability 1 when the set of feasible
solutions is ﬁnite and the maximum number of iterations
T tends to inﬁnity. Thus, since the action spaces of both
players in the proposed game are ﬁnite, any feasible strategy
pair pa, dq appears at least once in some generation with
probability 1 when T Ñ 8.

o , d˚

i , d˚

Denote the set of all SEs as E “ tpa˚

i q : i “ 1, ..., Su.
Suppose pa˚
o q is a CBSE for the proposed zero-sum
CBSG, i.e., this strategy pair is an SE with the lowest players’
costs satisfying (11). Once the least-cost strategy pair pa˚
o , d˚
o q
appears in some generation, its ﬁtness value (21) (or (22))
for the defender (or attacker) must be the highest among the
members of that generation since all SEs have the same payoff

15

for the players in the proposed zero-sum SG. Moreover, since
o ) has the smallest cost among all d˚
d˚
o (or a˚
i ), it
i
must have the highest ranking among the members of that
generation due to the sorting and reordering property in Step
6 of Algorithm 2. Thus, d˚
o (or a˚
o ) will be included in the
next generation.

(or a˚

By the argument above,
o , d˚

the CBSE pair (least-cost SE)
pa˚
o q will occur in all subsequent generations of CB-
BPEGA. Thus, it will be included in the ﬁnal generations
P OP T

d as T Ñ 8.
Finally according to Step 7 of Algorithm 2,
algorithm chooses the least-cost SE, i.e. CBSE pa˚
the set of SEs in the ﬁnal generations.

the CBBI
o q from

a and P OP T

o , d˚

C. Proof of Theorem 2

Let Γa and Γd denote the action sets for the attacker and
defender, respectively, for costs of attack and defense per node
as γa and γd (11). Let pa˚, d˚q denote an CBSE of the ideal
RD, d˚
CBSG (14)-(15) while pa˚
RDq denotes the solution of
the RD method (29).
Then the following conditions hold

U apa˚
U dpa˚

o , d˚
o , d˚

o q ě U apa, d˚
o q ě U dpa˚

o q, @a P Γa
o , dq, @d P Γd

Since d˚

RD P Γd, from (37)
O, d˚

U dpa˚

o q ě U dpa˚

o , d˚

RDq

Since the CBSG (14)-(15) is zero-sum,

U apa˚

o , d˚

o q ď U apa˚

o , d˚

RDq

(36)

(37)

(38)

(39)

Furthermore,
method (29) satisﬁes:

the attacker’s payoff at

the solution of RD

U apa˚

RD, d˚

RDq ě U apa, d˚

RDq @a P Γa

Thus,

U apa˚

RD, d˚

RDq ě U apa˚

o , d˚

RDq

From (39) and (41) ,

U apa˚

o , d˚

o q ď U apa˚

RD, d˚

RDq

and

U dpa˚

o , d˚

o q ě U dpa˚

RD, d˚

RDq

(40)

(41)

(42)

(43)

D. Model Parameters

Matrices for the linearized state-space model

in 1 are
provided in [43] for both case studies, where A P R75ˆ75,
B P R75ˆ9 and K P R9ˆ75 for the IEEE 39-bus system
and A P R160ˆ160, B P R160ˆ16 and K P R16ˆ160 for
the IEEE 68-bus system. The nonlinear data ﬁle containing
bus, line, load, and generator information is also attached in
[43]. Finally, the data ﬁles containing state-space matrices for
linearized uncertain models generated for each of the system
can also be found in [43].

REFERENCES

[1] S. McLaughlin, C. Konstantinou, X. Wang, L. Davi, A. Sadeghi, M. Ma-
niatakos, and R. Karri, “The Cybersecurity Landscape in Industrial
Control Systems,” Proceedings of the IEEE, vol. 104, no. 5, pp. 1039–
1057, May 2016.

[2] S. Dibaji, M. Pirani, D. Flambolz, A. Annaswamy, K. Johansson, and
A. Chakrabortty, “A systems and control perspective of CPS security,”
in Annual Reviews in Control, vol. 47, 2019, pp. 394–411.

[3] F. Pasqualetti, F. D¨orﬂer, and F. Bullo, “Attack Detection and Identi-
ﬁcation in Cyber-Physical Systems,” IEEE Transactions on Automatic
Control, vol. 58, no. 11, pp. 2715–2729, Nov 2013.

[4] Y. Mo, T. Kim, K. Brancik, D. Dickinson, H. Lee, A. Perrig, and
B. Sinopoli, “Cyber-physical security of a smart grid infrastructure,”
Proceedings of the IEEE, vol. 100, no. 1, pp. 195–209, 2012.

[5] Y. Yuan, H. Yang, L. Guo, and F. Sun, Analysis and Design of Networked
Control Systems under Attacks. Boca Raton: CRC Press, 2019. [Online].
Available: https://doi-org.prox.lib.ncsu.edu/10.1201/9780429443503
[6] Y. Li, D. Shi, and T. Chen, “False Data Injection Attacks on Networked
Control Systems: A Stackelberg Game Analysis,” IEEE Transactions on
Automatic Control, vol. 63, no. 10, pp. 3503–3509, Oct 2018.

[7] S. Etesami and T. Bas¸ar, “Dynamic Games in Cyber-Physical Security:
An Overview,” Dynamic Games and Applications, vol. 9, no. 4, pp.
884–913, 12 2019.

[8] Q. Zhu and T. Basar, “Game-Theoretic Methods for Robustness, Secu-
rity, and Resilience of Cyberphysical Control Systems: Games-in-Games
Principle for Optimal Cross-Layer Resilient Control Systems,” IEEE
Control Systems Magazine, vol. 35, no. 1, pp. 46–65, Feb 2015.
[9] J. Tang and A. Gupta, “Sketching for Elimination of Communication
Links in LQG Teams,” IEEE Control Systems Letters, vol. 6, pp. 1016–
1021, 2021.

[10] H. Yuan, Y. Xia, J. Zhang, H. Yang, and M. S. Mahmoud, “Stackelberg-
Game-Based Defense Analysis Against Advanced Persistent Threats on
Cloud Control System,” IEEE Transactions on Industrial Informatics,
vol. 16, no. 3, pp. 1571–1580, 2020.

[11] Cybersecurity Infrastructure Security Agency (CIS), DDoS Quick Guide,
2014. [Online]. Available: https://us-cert.cisa.gov/security-publications/
DDoS-Quick-Guide

[12] M. Pirani, E. Nekouei, H. Sandberg, and K. H. Johansson, “A Game-
Theoretic Framework for the Security-Aware Sensor Placement Problem
in Networked Control Systems,” IEEE Transactions on Automatic Con-
trol, 2021.

[13] G. Yang and J. P. Hespanha, “Modeling and mitigating link-ﬂooding
distributed denial-of-service attacks via learning in Stackelberg games,”
in Handbook of Reinforcement Learning and Control. Springer, 2021,
pp. 433–463.

[14] S. Amin, G. Schwartz, and S. Sastry, “Security of interdependent and
identical networked control systems,” Automatica, vol. 49, no. 1, pp.
186–192, 2013.

[15] H. Li, J. Wu, H. Xu, G. Li, and M. Guizani, “Explainable intelligence-
driven defense mechanism against advanced persistent threats: A joint
edge game and ai approach,” IEEE Transactions on Dependable and
Secure Computing, vol. 19, no. 2, pp. 757–775, 2022.

[16] Z. Zhang, S. Huang, Y. Chen, B. Li, and S. Mei, “Cyber-physical
coordinated risk mitigation in smart grids based on attack-defense
game,” IEEE Transactions on Power Systems, pp. 530–542, 2022.
[17] P. Shukla, A. Chakrabortty, and A. Duel-Hallen, “A Cyber-Security
Investment Game for Networked Control Systems,” American Control
Conference (ACC), pp. 2297–2302, 2019.

[18] M. Balcan, A. Blum, N. Haghtalab, and A. Procaccia, “Commitment
without regrets: online learning in Stackelberg security games,” ACM
conference on economics and computation, pp. 61–78, 2015.

[19] L. An, A. Chakrabortty, and A. Duel-Hallen, “A Stackelberg Security
Investment Game for Voltage Stability of Power Systems,” in 2020 59th
IEEE Conference on Decision and Control (CDC), 2020, pp. 3359–3364.
[20] R. Amir and I. Grilo, “Stackelberg versus Cournot Equilibrium,”
Games and Economic Behavior, vol. 26, no. 1, pp. 1 – 21, 1996.
[Online]. Available: https://www.sciencedirect.com/science/article/pii/
S0899825698906509

[21] “European Network and Information Security Agency (ENSA),
Protecting Industrial Control systems-Recommendations for Europe and
member states.” 2011. [Online]. Available: https://www.enisa.europa.eu/
[22] L. An, “Game-Theoretic Methods for Cost Allocation and Security
[Online]. Available: https:

in Smart Grid,” Ph.D. Thesis, 2020.
//www.lib.ncsu.edu/resolver/1840.20/38411

[23] D. Huang and S. Nguang, Robust Control for Uncertain Networked
Control Systems with Random Delays, 1st ed. Springer, 2009.

16

[24] M. Fardad, F. Lin, and M. Jovanovic, “Design of Optimal Sparse
Feedback Gains via the Alternating Direction Method of Multipliers,”
IEEE Trans. Automat. Control, vol. 58, pp. 2426–2431, 2013.

[25] F. D¨orﬂer, M. R. Jovanovi´c, M. Chertkov, and F. Bullo, “Sparsity-
promoting optimal wide-area control of power networks,” IEEE Trans-
actions on Power Systems, vol. 29, no. 5, pp. 2281–2291, 2014.
[26] F. Lian, A. Chakrabortty, F. Wu, and A. Duel-Hallen, “Sparsity-
Constrained Mixed H2{H8 Control,” in 2018 Annual American Control
Conference (ACC), 2018, pp. 6253–6258.

[27] E. J. LoCicero and L. Bridgeman, “Sparsity Promoting H2-Conic
Control,” IEEE Control Systems Letters, vol. 5, pp. 1453–1458, 2021.
[28] R. Arastoo, M. Bahavarnia, M. V. Kothare, and N. Motee, “Closed-loop
feedback sparsiﬁcation under parametric uncertainties,” in 2016 IEEE
55th Conference on Decision and Control (CDC), 2016, pp. 123–128.
[29] M. Bahavarnia and N. Motee, “Sparse Memoryless LQR Design
for Uncertain Linear Time-Delay Systems,” IFAC-PapersOnLine,
vol. 50, no. 1, pp. 10 395–10 400, 2017, 20th IFAC World Congress.
[Online]. Available: https://www.sciencedirect.com/science/article/pii/
S2405896317323170

[30] X. Ge, F. Yang, and Q.-L. Han, “Distributed networked control systems:
A brief overview,” Information Sciences, vol. 380, pp. 117–131, 2017.
[31] D. Soudbakhsh, A. Chakrabortty, and A. M. Annaswamy, “A delay-
aware cyber-physical architecture for wide-area control of power sys-
tems,” in Control Engineering Practice, March 2017, pp. 171–182.
[32] M. J. Osborne and A. Rubinstein, A course in game theory. MIT press,

1994.

[33] A. Sarabi, P. Naghizadeh, and M. Liu, “Can Less Be More? A Game-
Theoretic Analysis of Filtering vs. Investment,” Decision and Game
Theory for Security, vol. 8840, pp. 329–339, 2014.

[34] M. Simaan and J. Cruz, “On the stackelberg strategy in nonzero-sum
games,” Journal of Optimization Theory and Applications, vol. 11, pp.
533–555, 1973.

[35] B. Liu, “Stackelberg-Nash equilibrium for multilevel programming with
multiple followers using genetic algorithms,” Computers & Mathematics
with Applications, vol. 36, no. 7, pp. 79–89, 1998. [Online]. Available:
https://www.sciencedirect.com/science/article/pii/S0898122198001746

[36] W. Liu and S. Chawla, “A game theoretical model for adversarial
learning,” in 2009 IEEE International Conference on Data Mining
Workshops, 2009, pp. 25–30.

[37] D. Whitley, “A Genetic Algorithm Tutorial,” Statistics and Computing,

vol. 4, no. 2, pp. 65–85, 1994.

[38] N. McCarty and A. Meirowitz, Dynamic Games of Incomplete In-
formation, ser. Analytical Methods for Social Research. Cambridge
University Press, 2007, p. 204–250.

[39] P. Shukla, “Game-Theoretic Investment Planning for Cyber-Security of
Network Control Systems,” Ph.D. Thesis, 2021. [Online]. Available:
https://www.lib.ncsu.edu/resolver/1840.20/39267

[40] A. Chakrabortty and P. Khargonekar, “Introduction to wide-area control
of power systems,” in 2013 American Control Conference, 2013, pp.
6758–6770.

[41] P. Kundur, N. J. Balu, and M. G. Lauby, Power system stability and

control. New York : McGraw-Hill, 1994.

[42] F. Lian, A. Chakrabortty, and A. Duel-Hallen, “Game-Theoretic Multi-
Agent Control and Network Cost Allocation Under Communication
Constraints,” IEEE Journal on Selected Areas in Communications,
vol. 35, no. 2, pp. 330–340, Feb 2017.

[43] P. Shukla, “Data-set for: Stackelberg Games for Robust Cyber-Security
Investment in Networked Control Systems,” 2020. [Online]. Available:
https://github.com/Husky-hp/SG-for-security-investment-in-NCS
[44] R. Billinton and D. Huang, “Effects of load forecast uncertainty on
bulk electric system reliability evaluation,” IEEE Transactions on Power
Systems, vol. 23, no. 2, pp. 418–425, 2008.

[45] S. Glen, “Pooled Standard Deviation” From StatisticsHowTo.com:
Elementary Statistics for the rest of us!” 2016. [Online]. Available:
https://www.statisticshowto.com/pooled-standard-deviation/

[46] S. Kotz, C. Read, and D. Banks, “Encyclopedia of statistical sciences

(update vol. 3),” 1999.

[47] B. Pal and B. Chaudhuri, Robust Control
Springer Science and Business Media, 2006.
https://doi-org.prox.lib.ncsu.edu/10.1201/9780429443503

in Power Systems.
[Online]. Available:

[48] A. A. Kulkarni, “Lecture notes for Games and Information,” 2014.
[Online]. Available: https://www.sc.iitb.ac.in/„ankur/docs/SC631Notes/
SC631 2014 Lecture23.pdf

[49] R. F. Hartl, “A global convergence proof for a class of genetic algo-

rithms,” University of Technology, Vienna, Tech. Rep., 1990.

