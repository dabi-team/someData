Argumentation-based Security for Social Good

Erisa Karaﬁli∗, Antonis C. Kakas+, Nikolaos I. Spanoudakis†, and Emil C. Lupu∗
∗Department of Computing, Imperial College London
+Department of Computer Science, University of Cyprus
†Applied Mathematics and Computers Lab., Technical University of Crete
e.karaﬁli@imperial.ac.uk, antonis@ucy.ac.cy, nispanoudakis@isc.tuc.gr, e.c.lupu@imperial.ac.uk

7
1
0
2

y
a
M
1

]

R
C
.
s
c
[

1
v
2
3
7
0
0
.
5
0
7
1
:
v
i
X
r
a

Abstract

The increase of connectivity and the impact it has in every
day life is raising new and existing security problems that
are becoming important for social good. We introduce two
particular problems: cyber attack attribution and regulatory
data sharing. For both problems, decisions about which rules
to apply, should be taken under incomplete and context de-
pendent information. The solution we propose is based on
argumentation reasoning, that is a well suited technique for
implementing decision making mechanisms under conﬂict-
ing and incomplete information. Our proposal permits us to
identify the attacker of a cyber attack and decide the regula-
tion rule that should be used while using and sharing data.
We illustrate our solution through concrete examples.

Introduction
The interconnectivity and the increased use of “smart” con-
nected devices is improving our daily life, e.g., smart homes,
e-health, elder care, AI surgical robots, smart cars. The
growing impact of these devices is transforming them into
targets of cyber attacks, e.g., remote attacks made to cars’
autopilot, private information leak due to cyber attacks in
cloud, attacks made on medical devices. Protecting the pri-
vacy of these devices as well as the information used by
them is still an important problem, and becomes a pressing
one in our highly interconnected cyber world. One of the
challenges that this problem raises is ensuring the usability
of the system while protecting it.

An effective way for protecting the system from cyber at-
tacks is to enforce speciﬁc protective measures that are spe-
ciﬁc to the attacker performing the attack. Hence, identify-
ing the attacker makes the protective actions more adequate
and efﬁcient. Discovering the attacker is not a trivial task,
as the information that we are working with is incomplete,
context dependent and the attacker use anti-forensic tools to
hide themselves.

Connectivity has increased the amount of shared and used
data, but also underlined the need to protect and correctly
use and access the data. Also in this case, different knowl-
edge should be taken into consideration before deciding the
regulation rules to be applied. For data sharing the knowl-
edge is well documented in regulation and/or legislative
rules, but dealing with them, especially when different rules
can be applied simultaneously, is not an easy task.

Deciding which protective measures to take, what infor-
mation to use while identifying the attacker, or what rule/law
to apply for a particular piece of data used by a speciﬁc user
are all decision problems. The decision is made under a
certain grade of uncertainty as the information is not com-
plete, it can be contradictory and context dependent. We
decided to represent and solve the above problems by us-
ing argumentation-based reasoning. Argumentation-based
reasoning, for simplicity argumentation reasoning, is a well
suited technique for implementing decision making mech-
anisms under conﬂicting, incomplete and context related
knowledge.

We believe argumentation reasoning is an appropriate
technique for solving the above cyber security problems,
as we have successfully applied it to rule prioritization in
other security areas (Bandara et al. 2009). Furthermore, a
ﬁrst prototype system for data access of medical data ac-
cording to european union and national law and based on
argumentation had been developed1.

We construct a reasoning process for the cyber attack
problem that decides which rule and information to use,
depending on the given information for identifying the at-
tacker. For the data sharing problem we construct a decision
process model that given the different regulation and legisla-
tive rules, decides depending on the context how and who
can access the data and the rules that should be applied.

Argumentation background We review brieﬂy the basic
theory of argumentation which we will use to model our se-
curity problems. The theory will be presented from a general
point of view of applying argumentation to real-life (deci-
sion) problems.

In

(Kakas, Mancarella, and Dung 1994;
Kakas and Moraitis 2003) a preference-based argumenta-
tion framework was proposed for representing multi-agent
application problems via argumentation composed of dif-
ferent levels. Object level arguments represent the possible
decisions or actions in a speciﬁc application domain and
ﬁrst-level priority arguments express preferences on the
object level arguments in order to resolve possible con-
ﬂicts. Higher-order priority arguments are used to resolve
conﬂicts between priority arguments of the previous level.
For sake of simplicity, we call arguments rule the objective

1http://www.cs.ucy.ac.cy/projects/health-record/login_form.html

 
 
 
 
 
 
level arguments, and priority rules both types of priority
arguments.

An argumentation theory is a pair (T , P) composed
the form L ← L1, . . . , Ln, where
of
formulae of
L, L1, . . . , Ln are positive or negative ground literals. T
are the arguments rule, P are the priority rules. For P the
head L has the form L = rule1 > rule2, where rule1 and
rule2 are two rules, while > refers to an (irreﬂexive) higher
priority relation amongst them, it means rule1 has higher
priority than rule2. The arguments are given by subsets
(T, P ), where T ⊆ T and P ⊆ P. An argument (T, P )
supports its conclusion L, when L is derived by T and sup-
ported by P . A counter-argument for (T, P ) is another argu-
ment (T ′, P ′), where they derive two contrary conclusions
(i.e., L and ¬L). For sake of simplicity, we call the pair of
argument and counter-argument, conﬂicting arguments.

Decisions are given by the admissible arguments of the
given argumentation theory extended to the application sce-
nario. An argument is admissible if its priority rules are
stronger than its counter-arguments.

Argumentation is well suited for solving problems un-
der partial information as only the arguments whose pre-
misses are satisﬁed will play a role.
It is important to
address the reverse engineering problem of ﬁnding addi-
tional conditions under which a certain option will be a
solution. This is achieved by combining abductive rea-
soning with argumentation to ﬁnd strong arguments un-
der the assumption that some further abducible assump-
tions hold in a scenario.
Abductive reasoning com-
bined with argumentation are the core of the GorgiasB
tool2 (Spanoudakis, Kakas, and Moraitis 2016) which per-
mits to develop applications under preference-based argu-
mentation.

The Attribution Problem in Cyber Attacks
The increase of connectivity together with the expansion
of Internet of Things (IoT) can lead to a drastic increase
of cyber attacks. Protective measures on their own are not
enough, because for being effective they need to be specif-
ically constructed depending on the types of attack and at-
tacker. Forensics investigation can determine the type of at-
tack and support the discovery of the attacker. The latter
is not trivial due to anti-forensics tools used by the attacker
and the dynamicity of attacks. We call attribution problem
the problem of ﬁnding out who the attacker is. Forensics
in cyber attacks helps during the attribution problem by col-
lecting the evidence. The ability of ﬁnding through forensics
investigation who the attacker was, makes the new attacks
more expensive, as the attackers have to hide their identities.

Importance of attribution in social good The growing
impact that connectivity and connected devices have in ev-
ery day life, e.g., smart homes, elder care, e-health, surveil-
lance and security, is making them more sensitive to attacks.
Attribution can relieve part of these attacks, by reducing and
mitigating them. Knowing the attacker permits to enforce

2http://gorgiasb.tuc.gr/

speciﬁc attacker oriented counter measures, reduces the ef-
fects of the attacks, and diminishes the occurrence of future
attacks performed by the same attacker. Finding who per-
formed the attack not only helps in protecting the system,
but also for bringing perpetrators to justice.

The attribution problem is important when dealing with
multilateral relations between countries/companies/entities.
Nowadays, cyber attacks to speciﬁc government institutions,
companies, or entities by groups of hackers that are coming
from (or working for) a competitor/rival group/country, or
group of terrorists, are escalating. The attacks that are not
or badly attributed can aggravate diplomatic relations be-
tween countries. Finding out swiftly who the original sender
and/or executer of a cyber attack was can help also in avoid-
ing diplomatic mistakes between countries or entities.

Attribution and forensics come along with their own chal-
lenges: difﬁculties to collect evidence, its high costs, and
the vastness of anti-forensics tools used by the attackers. In
social sciences (e.g., war science (Rid and Buchanan 2015),
criminology (Hob´er 2012), sociology (Crittenden 1983))
some attribution techniques have been developed, but cur-
rently there is no implementation of these techniques in
forensics for cyber attacks. Attribution has to constantly
cope with incomplete and conﬂicting evidence.

Main idea of our approach We introduce a reasoner that
given pieces of evidence, it deduces wether a given country
performed or not the attack. We ﬁrst build up and catego-
rize the evidence, by using a social science technique, called
the Q-Model (Rid and Buchanan 2015). This model permits
us to reason and categorize the evidence collected during the
forensics investigation, which is going to be used by our rea-
soner for attributing the cyber attacks. The evidence is used
as premisses for the reasoning rules that permit us to reach
a conclusion about the origin of the attack. The reasoning
rules are extracted during the analysis of different attribu-
tion forensics examples.

The collected and categorized evidence can be incomplete
and conﬂicting. We decided to use argumentation and ab-
ductive reasoning to represent the different evidence and rea-
soning rules, and to construct our reasoner. This approach is
able to cope with incomplete information through the abduc-
tive reasoning, which permits to get good plausible explana-
tions for a given piece of evidence. On the other hand, argu-
mentation reasoning permits to work with conﬂicting infor-
mation. We model the reasoning rules as arguments and re-
fer to conﬂicting evidence as conﬂicting arguments, i.e., ev-
idence used by reasoning rules that derive contrary conclu-
sions. Argumentation reasoning deals with conﬂicting ev-
idence by putting preferences between arguments, through
priority rules. The argumentation approach provides an ex-
planation to the solutions/decisions that it makes. This helps
the analyst/user to accept or reject the recommendations of
the reasoner and, in general, to trust its use. To the best of
our knowledge, this is the ﬁrst attempt to use a social sci-
ence technique for attribution together with argumentation
for solving the attribution problem in cyber attacks. To con-
struct our reasoner we use the GorgiasB tool.

Argumentation-based Reasoner for Attribution

The above rule is represented as an argument rule below.

Let us introduce our reasoner for the attribution problem in
cyber attacks. We show how we can categorize the different
pieces of evidence. We introduce the reasoning rules ex-
tracted from a simple cyber attack example and transformed
them into arguments. Finally, we show the use of arguments
and priority rules for solving the attribution problem.

TACTICAL

avoid

OPERATIONAL

code

context

who

why

motive

target

STRATEGIC

IP

claims

objectives

damage

capability

language

personas

domain name

Figure 1: The Q-Model with the different layers

Collecting and categorizing evidence For collecting and
categorizing the evidence we use the Q-Model. The latter
helps the analysts asking a full range of possible questions
and considering all possible evidence, arguments and con-
clusions. The Q-Model divides evidence in three layers as
shown in Figure 1. The tactical layer includes technical in-
formation, obtained by checking the system, its logs, and
the attack code: IP addresses from where the attack came
from, domain names, the original language of the program-
mers that wrote the code, the target in the system. The op-
erational layer includes less technical evidences, e.g., en-
tity or group claiming the attack, the context (e.g., political
or geographical) of the attack, the capability/skills required
for performing the attack. The strategic layer includes high
level evidence collected by analyzing the attacked entity and
interviewing strategic people inside it, e.g., how successful
the attack was and what objectives it had, who performed the
attack. Given an attack the pieces of evidence are collected
by answering the questions of each layer, and categorized.

Constructing the arguments Given the evidence, we
need to extract from existing forensics analyses, the various
reasoning rules and represent them through argumentation
reasoning, that is composed of the different arguments (ar-
guments rules and their priorities) and their conclusions. We
construct from the reasoning rules the arguments rules and
their priority rules, where the collected evidence are the pre-
misses that support an argument for reaching a certain con-
clusion, while the conclusion is the statement about a given
country, if it is the attacker or not.

Let’s see an example. Suppose that a network is under a
ssh attack. The analyst, as s/he has no evidence yet, cannot
say if a particular country performed the attack.

• If no evidence is given for a particular country, then it did

not performed the attack.

not perform(Attack, Country) ←
(1)
The analyst starts by checking the system logs, and ﬁnds a
couple of IPs that were involved in the attack. Part of the IPs
are found to come from country C1, thus, the conclusion is
that C1 performed the attack, as in rule 2.
• If the attack came from IP1, and IP1 is in country C1, then

C1 performed the attack.
perform(Attack, Country) ← sourceIP(Attack, IP ) ∧

geoloc(IP, Country)

(2)
Further analyses revealed that the above IP s were spoofed
(anonymized), hence they cannot be used to link with C1.
Therefor, C1 did not performed the attack.
• If the attack came from IP1, and IP1 is in C1, but IP1 is

spoofed, then C1 did not performed the attack.
not perform(Attack, Country) ← sourceIP(Attack, IP )∧
geoloc(IP, Country) ∧ spoofed(IP )

(3)
Rule 3 is in conﬂict with rule 2, as they are concluding op-
posite statements. In this case, rule 3 is stronger then rule 2,
because spoofed(IP) is a stronger argument then the geolo-
cation of the IP. Thus, their priority rule is rule 3 > rule 2.

The analyst, by performing a reverse engineering of the
attacks code, ﬁnds that the attack was build for avoiding C1.
• If the attack was designed for avoiding a speciﬁc country

C1, then C1 performed the attack.
perform(Attack, Country) ← avoid(Attack, Country)

(4)
When we take into account the rest of the evidence, still C1
performed the attack as avoid is a stronger argument (rule 5).
• If the attack was designed for avoiding a speciﬁc country,
C1, even if the IPs that link the attack to country C1 are
spoofed, C1 performed the attack.
perform(Attack, Country) ← avoid(Attack, Country) ∧
sourceIP(Attack, IP ) ∧ geoloc(IP, Country)∧
spoofed(IP )

(5)
In this case, rule 5 and 3 are conﬂicting arguments, as they
conclude two opposite statements. Rule 5 is stronger than
rule 3 (rule 5 > rule 3) as avoid is a stronger evidence.

Attribution with the reasoning rules The above rules are
given to GorgiasB, which allows us to deﬁne the arguments,
to capture and resolve their conﬂicts by introducing the var-
In Figure 2, we show how the above
ious priority rules.
rules can be used for reaching the conclusion, and the pref-
erences that are used. We assign to every rule a label, e.g.,
A1, B2. For example, the priority rule B1 represents that
A2 is stronger than A1 (A2 > A1), where A1 represents
rule 1 and A2 rule 2.

An example involving conﬂicting arguments can be traced
between rules B2 and B4, and the priority between them
is given by C1. B2 represents rule 3, while B4 represents
rule 5. From above, we know that rule 3 is in conﬂict with
rule 5, the latter is stronger. Hence, the priority rule C1 says
that B4 is stronger than B2, B4 > B2.

A1 : not perform(Attack, Country)

B1 : A2 > A1

A2 : perform(Attack, Country) When
sourceIP(Attack, IP ), geoloc(IP, Country)

A3 : perform(Attack, Country) When
sourceIP(Attack, IP ), geoloc(IP, Country),
spoofed(IP )

A4 : perform(Attack, Country) When
avoid(Attack, Country)

A5 : perform(Attack, Country) When
avoid(Attack, Country), spoofed(IP ),
sourceIP(Attack, IP ), geoloc(IP, Country)

B2 : A1 > A3

B3 : A4 > A1

B4 : A5 > A1

C1 : B4 > B2

Figure 2: Decision diagram showing the reasoning rules

Further Reasoning Rules and Priorities

Argumentation reasoning is a high level approach that
makes it easier to get human speciﬁcations and to modularly
update the system when the speciﬁcations change. Its modu-
larity makes argumentation well suited for working with the
attribution problem, where the evidence is incomplete and
conﬂicting, and also new evidence and reasoning rules can
be introduced, together with new conclusions. It is impor-
tant to note that attribution in cyber attacks will never be a
ﬁnal perfect theory, it will always be a heuristic and evolving
theory. Argumentation can take in new arguments without
the need to reconsider the old argument representation and
preferences between them. One only needs to consider the
preferences of the new arguments.
describe below further

reasoning rules
ex-
i.e.,
tracted from the analyses of other cyber attacks,
Stuxnet (Symantec 2011) and APT1 (Mandiant 2013), and
their context dependent priorities. The different arguments
on attribution have different strength/priorities. Below
that conclude that a certain country
we list arguments,
performed the attack (except for argument 2 and 7, that
conclude the opposite) by priority, from the highest to the
lowest, where the order of the rules introduced in the above
subsection is not touched.

We

1. Avoid(Attack, Country) is a strong argument, e.g., the

code was written to avoid damage to that country.

2. Spoofed(IP) is stronger than the coming predicates be-
cause it shows that IP cannot be used as a credible evi-
dence for the source of the attack.

3. SourceIP(Attack, IP) combined with geoloc(IP, Country)
is a good argument3 as provides evidence for the attacker.

4. Language(Attack, Country) means that if the language of
the code is the same as the language of the country, then
that country performed the attack.

5. Motive(Country, Attack) means that a country has the mo-

tivation for performing the attack.

6. Capable(Attack, Country) means that a country is capable
of performing the attack (has the necessary skills, funds
and resources/infrastructure).

3If the IP is not spoofed or anonymised.

7. Target(Attack, Country) is a weak argument. It says that
if that particular country was the target of the attack, then
it did not perform the attack.

The above rules are given to GorgiasB, which will acom-
modate easily the new rules. Suppose we ﬁnd evidence of
an attack that mainly occurred in country C, a set of IP s
performed the attack, and good part of them are located in
C1, and C1 is a rival of C. GorgiasB will analyze the pieces
of evidence by using the above arguments, and will state:
perf orm(Attack, C1). Further evidence shows that part of
the IP s linked to C1 are spoofed. Hence, C1 did not per-
formed the attack. There is a conﬂict between arguments,
which is solved by GorgiasB through the use of the above
priority rules. Therefor, as spoofed is a stronger argument
than the rest, the conclusion is C1 did not performed the
attack. Suppose now that traces of language L2 are found,
where L2 is spoken in C2. By re-checking the locations
of the attacker IP s a part of them are located in C2, and
C2 has motives for attacking C. When the new evidence is
given to GorgiasB, it concludes perf orm(Attack, C2).

Data Sharing Based on Argumentation
Decision Process
The increase of connectivity and sharing of Data over cloud
environments brings positive impacts for social good. Data
has become dynamic and distributed, and easily accessible
from remote locations. Citizens in remote areas of the world
are able to vote, follow courses, and work remotely. Another
important use of dynamic and distributed data is in e-health,
where patients can have an health care service, even if the
ﬁrst nearby hospital is hundred of kilometres away. For ex-
ample, the doctor visiting the patients in remote areas, is able
to access the patients medical data, perform remote visits to
patients, access their data4 and change their prescriptions de-
pending on the self-tests/analyses the patients have made.

The Problem of Data Sharing
Data is shared as well as stored, used and transformed, not
only by users but also by companies, organisations and gov-
ernments of different countries. There is a need of not just
protecting the data, but also for a correct and effective shar-
ing of data by respecting the end user requirements, the dif-
ferent business rules (who are processing, using and sharing
the data), and the legislation rules (the legal rules depending
on the type of data, the citizen rights, the business obliga-
tions and rights, the geographical location or origin of the
data, where the data is shared or processed, etc.). Being able
to respect the above rules and requirements is not trivial, as
dealing with different legislations and domains can create
conﬂicts between which rules to apply. For example, which
rules of data sharing should be applied to the doctor that
wants to access the patients data, that is hospitalized in an
hospital, not in the patients residential country.

When an exchange of data occurs the two parties should
agree on the rules related to the data, and the rules should

4Think about the vast technologies of self-test/analyses that the

patients can perform.

be enforced. The ﬁrst part is called the data sharing
agreement (DSA) (Swarup, Seligman, and Rosenthal 2006)
where the different rules are speciﬁed and the two en-
tities need to agree on it.
The rules express how
and who is permitted/denied/obliged to access, delete,
and share the data, as well as the different constraints
time constraints, geo-
that should be respected, e.g.,
graphical ones. We will focus on data sharing tech-
niques that use policies for describing the different
terms. The enforcement (Pretschner, Hilty, and Basin 2006;
Pretschner et al. 2008) is done when the data is used, and it
identiﬁes if the user/application is granted access to the data
and what level of access is allowed.

Data Sharing with Argumentation Non-monotonic rea-
soning, in particular argumentation, is broadly known for its
use in representing legal rules and in constructing decision
processes where conﬂicting rules are involved. We propose
a technique based on argumentation reasoning, that given
the different policies that regulate how the data can be ac-
cessed/used/shared, ﬁnds the different conﬂicts between ar-
guments and creates a hierarchical decision process model,
that decides which policy should be applied in any par-
ticular case. This is the ﬁrst attempt, to our knowledge,
that uses argumentation reasoning for solving problems of
data access and usage control. The problem of data access
and usage control is well studied (Pretschner et al. 2008;
Matteucci, Petrocchi, and Sbodio 2010), but the existing so-
lutions do not permit conﬂicting rules, together with a solu-
tion to the conﬂicts.

We represent the different policies that regulate the data
sharing as argument rules. The preconditions of the policy
represent the premises of the argument rule, while the con-
clusion of the policy is the conclusion of the argument rule.
Two policies are in conﬂict if they both permit and deny (or
deny and oblige) to perform an action for certain precondi-
tions, that can be the same, or related between them. We use
the GorgiasB tool for constructing the decision process.

An Example of Decision Process for E-Health

We show how we can represent different policies as argu-
ments that are given as input to GorgiasB, which ﬁnds the
conﬂicting rules. The resolution of the conﬂicts is done by
introducing priority rules and specifying the context when
an argument is stronger than another one. GorgiasB re-
checks the arguments and the priority rules, if any conﬂict
is detected, then other priority rules are introduced.

Let’s introduce an example of an e-health scenario. We
have the patient, denoted by C, who is the owner of the data,
denoted by Data, and the relation Owner(C, Data). The
data can be of three types: (i) prescriptions: P resc(Data),
e.g., blood pressure, medicine prescriptions, x-rays; (ii)
private prescriptions: P Data(Data), e.g., anti-depressive
treatments; (iii) personal information: P Inf o(Data), e.g.,
address, family contacts. The policies give as conclusion the
access predicate: Access(A, B, permitted/denied), where
actor B is permitted/denied access to data A.

The data can be accessed by the doctor, denoted by D,

that is a family doctor of the patient (f amD(D, C)), or a
treating doctor (treatD(D, C)). Usually the family doctor
has access to the patients’ data, while the treating doctor can
access just to the prescriptions. This general part of the ac-
cess policies is represented by the following argument rules:
Access(Data, D, permitted) ← f amD(D, C) ∧
Owner(C, Data) ∧ P resc/P Data/P Inf o(Data)
Access(Data, D, permitted) ← treatD(D, C) ∧
Owner(C, Data) ∧ P resc(Data)
Access(Data, D, denied) ← treatD(D, C) ∧
Owner(C, Data) ∧ P Data(Data)
Access(Data, D, denied) ← treatD(D, C) ∧
Owner(C, Data) ∧ P Inf o(Data)

(2)

(4)

(3)

(1)

If the patient is an emergency situation (Emerg(C)), then
the treating doctor can access the private prescriptions and
information e.g., for contacting a patients family member.

Access(Data, D, permitted) ← Emerg(C) ∧
treatD(D, C) ∧ Owner(C, Data) ∧ P Data(Data)
Access(Data, D, permitted) ← Emerg(C) ∧
treatD(D, C) ∧ Owner(C, Data) ∧ P Inf o(Data)

(5)

(6)

When we give the above rules to GorgiasB, it ﬁnds two con-
ﬂicts. Rules (3) and (5), and rules (4) and (6) are in conﬂict,
as one says that generally treating doctors cannot access the
private prescriptions/information of a patient, while the sec-
ond one gives permission to the treating doctor to access
them in case of an emergency. Two priority rules are intro-
duced: in case of an emergency rule (5) is preferred over
rule (3), (rule(5) > rule(3)), and rule (6) is preferred over
rule (4), (rule(6) > rule(4)). After the preferences are intro-
duced, GorgiasB does not ﬁnd any conﬂict.

For obvious reasons, a patient can access to her/his own
data.
In European countries when the patient is suffering
from depression, or its medical data can be of high emotional
impact Emot(C) (e.g., suspects of a terminal illness that if
revealed to the patient early can effect the wellbeing and the
patients life), then s/he is not allowed to access the data.
Access(Data, C, permitted) ← Owner(C, Data)∧
P resc/P Data/P Inf o(Data)
Access(Data, C, denied) ← Emot(C) ∧
P Data(Data) ∧ Owner(C, Data)

(7)

(8)

In this case, rules (7) and (8) are in conﬂict between each
other, and rule (8) > rule (7), in the context of Emot(C).

When a patient is hospitalized, s/he agrees on a set rules
regarding the intensive care.
In case the patient is in in-
tensive care, Intens(C), the treating doctor can access the
patents prescriptions, but not the rest of the data (compliant
with rules (2-4)).

Access(Data, D, permitted) ← Intens(C) ∧
treatD(D, C) ∧ Owner(C, Data) ∧
P resc(Data)
Access(Data, D, denied) ← Intens(C) ∧
treatD(D, C) ∧ Owner(C, Data) ∧
P Data/P Inf o(Data)

(9)

(10)

In special cases of intensive care, when further diagnosis
needs to be conducted, the treating doctor may need to ac-
cess also to the private prescription of the patient. For doing
that, he needs the patient permissions, P erm(C, P Data).

Access(Data, D, permitted) ← Intens(C) ∧
P erm(C, P Data) ∧ treatD(D, C) ∧
Owner(C, Data) ∧ P Data(Data)

(11)

Rules (11) and (10) are in conﬂict, as the ﬁrst is permitting
the access while the second is denying it. Rule (11) is more
speciﬁc, thus, rule (11) > rule (10).

Suppose that the patient is unconscious, or unable to give
the permission for the private prescription, U ncon(C). In
this case, the treating doctor has the right to access the pa-
tient personal information, and contact a family member and
get the permission from them (f P erm(C, P Data)).
Access(Data, D, permitted) ← Intens(C) ∧
U ncon(C) ∧ treatD(D, C) ∧
Owner(C, Data) ∧ P Inf o(Data)
Access(Data, D, permitted) ← Intens(C) ∧
U ncon(C) ∧ f P erm(C, P Data) ∧
treatD(D, C) ∧ Owner(C, Data) ∧
P Data(Data)

(13)

(12)

Rules (12) and (10) are in conﬂict: the ﬁrst permits the ac-
cess to the private information while the second one denies
it. In this case, rule (12) > rule (10). Also, rules (13) and
(10) are in conﬂict: similarly rule (13) > rule (10).

Suppose the family member cannot give the needed per-
mission. In this case, the hospital regulation says that a dou-
ble permission by the family doctor (f docP (C, P Data))
and the head of the hospital (hdP (C, P Data)) is needed.

Access(Data, D, permitted) ← Intens(C) ∧
U ncon(C) ∧ ¬f P erm(C, P Data) ∧
f docP (C, P Data) ∧ hdP (C, P Data) ∧
treatD(D, C) ∧ Owner(C, Data) ∧
P Data(Data)

(14)

Rules (14) and (10) are in conﬂict, as the ﬁrst permits access
to the private prescription while the second denies it. In this
case, rule (14) > rule (10), as rule (14) is more speciﬁc.

GorgiasB detects all the above conﬂicts, takes in new
rules, analyze them and introduces priority rules. For the
above cases, the speciﬁcity between the premisses of the ar-
guments, has been the winning factor between rules.

Future Work and Conclusion
There are several challenges to be addressed in our approach
so that we can use argumentation as a basis for tackling secu-
rity and privacy problems in the new highly interconnected
cyber world. The two speciﬁc problems that we have pre-
sented above can guide us in developing a general methodol-
ogy for argumentation-based security applications. We aim
to study such general methodologies and use them to ana-
lyze and solve other problems such as the distributed ﬁrewall
problem, cyber attack detection, protective measure against
attacks, disaster management response.

The two particular applications of cyber attack attribution
and regulatory data sharing allow us to develop a good un-
derstanding of the general challenges that we face. The at-
tribution problem is based on knowledge on the behaviour
of attacks that is coarse and to a certain degree speculative,
e.g. knowledge that comes from analytics that indicates fre-
quently occurring patterns but by no means strict and uni-
versal mode of attack behaviour. In the case of data sharing

the knowledge is quite well documented in regulation and/or
legislative policies but can have quite a complex form espe-
cially when several policies need to be considered simulta-
neously. In both areas there are different problems that can
be considered for improving our approach.

Future work of argumentation in attribution Our cy-
ber attacks attribution reasoner uses the available evidence
for reaching conclusions about who did the attack. The ar-
gumentation approach provides an explanation to justify the
various conclusions reached. We are working on extending
the reasoner for guiding the analysts during the forensics in-
vestigation and advising where and what to look for. An
automatic collection and analysis of the evidence passed to
the reasoner would increase its efﬁciency. We plan on fur-
ther extending our work for representing quantitatively the
strength of arguments. Thus, to quantitatively compare the
arguments for different contexts, and deﬁne a more granular
priority between argument rules. This would allow us to be
more precise in our assessments, than a binary decision e.g.
of simply whether a country had performed the attack or not.

The reasoning rules that were extracted by real examples
should be extended. This can be done by analyzing other ex-
amples and by inferring the used rules. An important task for
future work would be to consider evidence of symptoms of
attacks. In this way, the reasoning process, if applied at run-
time, can help in detecting ongoing attacks and can guide the
analyst during the process of evidence collection. We plan
on working on human cognitive reasoning for capturing the
evidence of the strategic layer, called also social evidence.

Future work of argumentation in Data sharing With
our decision process model based on argumentation reason-
ing we ﬁnd the conﬂicting policies and introduce the priority
rules. The policies used by this decision process deal with
the data access and usage control. It would be useful to work
with policies that deal with data integrity and availability.

For now the conﬂict resolution is made manually, by spec-
ifying contextual priorities between argument rules. A fu-
ture challenge is to make the process fully automated, by in-
troducing general rules for conﬂict resolutions that will per-
mit the automatic selection, e.g., a generic rule that was used
for the above examples was the speciﬁcity of the premisses
used by the arguments. Another future challenge is the use
of online learning, where depending on the context, we can
learn which are the rules that have higher priority.

Conclusion We presented two important problems for so-
cial good: cyber attack attribution and regulatory data shar-
ing. Both problems can be seen as decision making prob-
lems: what rules and evidence to use for detecting the at-
tacker; which rule to use while using and sharing data. One
of the main challenges that these problems pose is the used
information that can be incomplete, conﬂicting and context
dependent. The proposed solution is based on argumenta-
tion reasoning, that is an appropriate technique for imple-
menting decision making mechanisms under incomplete and
conﬂicting information. Our solution solves the problems of
attribution in cyber attacks and regulatory data sharing.

Acknowledgments
Supported by FP7 EU-funded project Coco Cloud
grant no.610853, and EPSRC Project CIPART grant
no. EP/L022729/1.

References
[Bandara et al. 2009] Bandara, A. K.; Kakas, A. C.; Lupu,
E. C.; and Russo, A. 2009. Using argumentation logic for
ﬁrewall conﬁguration management. In Integrated Network
Management, IM 2009. 11th IFIP/IEEE International Sym-
posium on Integrated Network Management, 180–187.

[Crittenden 1983] Crittenden, K. S. 1983. Sociological as-
pects of attribution. Annual review of sociology 425–446.
[Hob´er 2012] Hob´er, K. 2012. State responsibility and attri-

bution.

[Kakas and Moraitis 2003] Kakas, A., and Moraitis, P. 2003.
Argumentation based decision making for autonomous
In Proceedings of the Second International Joint
agents.
Conference on Autonomous Agents and Multiagent Systems,
AAMAS ’03, 883–890.

[Kakas, Mancarella, and Dung 1994] Kakas, A. C.; Mancar-
ella, P.; and Dung, P. M. 1994. The acceptability semantics
for logic programs. In Logic Programming, Proceedings of
the 11th International Conference on Logic Programming,
504–519.

[Mandiant 2013] Mandiant. 2013. Apt1: Exposing one of

chinas cyber espionage units.

[Matteucci, Petrocchi, and Sbodio 2010] Matteucci,

I.;
Petrocchi, M.; and Sbodio, M. L. 2010. CNL4DSA: a
controlled natural language for data sharing agreements.
In Proceedings of the 2010 ACM Symposium on Applied
Computing (SAC), 616–620.

[Pretschner et al. 2008] Pretschner, A.; Hilty, M.; Basin,
D. A.; Schaefer, C.; and Walter, T. 2008. Mechanisms
In Proceedings of the 2008 ACM Sym-
for usage control.
posium on Information, Computer and Communications Se-
curity, ASIACCS, 240–244.

[Pretschner, Hilty, and Basin 2006] Pretschner, A.; Hilty,
M.; and Basin, D. A. 2006. Distributed usage control. Com-
munications of the ACM 49(9):39–44.

[Rid and Buchanan 2015] Rid, T., and Buchanan, B. 2015.
Attributing cyber attacks. Journal of Strategic Studies 38(1-
2):4–37.

[Spanoudakis, Kakas, and Moraitis 2016] Spanoudakis,

N. I.; Kakas, A. C.; and Moraitis, P. 2016. Gorgias-b:
In Computational Models of
Argumentation in practice.
Argument - Proceedings of COMMA, 477–478.

[Swarup, Seligman, and Rosenthal 2006] Swarup, V.; Selig-
man, L.; and Rosenthal, A. 2006. Specifying data sharing
agreements. In 7th IEEE International Workshop on Poli-
cies for Distributed Systems and Networks (POLICY 2006),
157–162.

[Symantec 2011] Symantec. 2011. W32.Duqu: The Precur-

sor to the Next Stuxnet. Mountain View, California.

