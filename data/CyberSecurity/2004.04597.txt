0
2
0
2

r
p
A
6

]

R
C
.
s
c
[

1
v
7
9
5
4
0
.
4
0
0
2
:
v
i
X
r
a

CHALLENGES IN FORECASTING MALICIOUS EVENTS FROM
INCOMPLETE DATA

Nazgol Tavabi∗
University of Southern California
Information Sciences Institute
4676 Admiralty Way
nazgolta@isi.edu

Andrés Abeliuk∗
University of Southern California
Information Sciences Institute
4676 Admiralty Way
aabeliuk@isi.edu

Negar Mokhberian
University of Southern California
Information Sciences Institute
4676 Admiralty Way
nmokhber@isi.edu

Jeremy Abramson
University of Southern California
Information Sciences Institute
4676 Admiralty Way
abramson@isi.edu

Kristina Lerman
University of Southern California
Information Sciences Institute
4676 Admiralty Way
lerman@isi.edu

April 10, 2020

ABSTRACT

The ability to accurately predict cyber-attacks would enable organizations to mitigate their growing
threat and avert the ﬁnancial losses and disruptions they cause. But how predictable are cyber-attacks?
Researchers have attempted to combine external data – ranging from vulnerability disclosures to
discussions on Twitter and the darkweb – with machine learning algorithms to learn indicators of
impending cyber-attacks. However, successful cyber-attacks represent a tiny fraction of all attempted
attacks: the vast majority are stopped, or ﬁltered by the security appliances deployed at the target.
As we show in this paper, the process of ﬁltering reduces the predictability of cyber-attacks. The
small number of attacks that do penetrate the target’s defenses follow a different generative process
compared to the whole data which is much harder to learn for predictive models. This could be
caused by the fact that the resulting time series also depends on the ﬁltering process in addition to all
the different factors that the original time series depended on. We empirically quantify the loss of
predictability due to ﬁltering using real-world data from two organizations. Our work identiﬁes the
limits to forecasting cyber-attacks from highly ﬁltered data.

Keywords predictability, cyber-attack, forecasting, time-series, permutation entropy

1

Introduction

Malicious behavior is increasingly common in online life. Social media platforms are racing to develop tools to
detect—and in some cases anticipate—malicious behaviors in the form of manipulation, deception, misinformation,
and cyberbullying. Cybercrime is one example of malicious behavior that has resulted in large ﬁnancial losses, political
and security risks. The 2016 hacking of the Democratic National Committee server was arguably a turning point in the
2016 US presidential elections. The leaks of potentially embarrassing emails upended the race and upset existing polls.
The ability to anticipate cybercrime — and other security threats, such as violent protests in a country — would allow
organizations to mitigate the risks associated with such disruptions. As an age-old saying goes: “to be forewarned is to
be forearmed.”

How predictable is malicious behavior? To narrow the scope of the question, we consider the predictability of
cybercrime, since forecasting cybercrime shares many challenges of forecasting other types of malicious activities.

∗Both authors contributed equally to this research.

 
 
 
 
 
 
A PREPRINT - APRIL 10, 2020

In the case of cybercrime, conventional wisdom says indicators often exist that can be leveraged for detection and
prediction. Successfully executing a cyber-attack requires preparation and planning: hackers carry out reconnaissance
about the potential targets, identify its vulnerabilities, acquire relevant tools and exploits, etc. All these activities leave
traces within the openly available data (as well as within the patterns of attacks themselves) that allow for forecasting
new cyber-attacks.

An important consideration for an AI-based solution to cyber-attack prediction is that the successful attacks used to
train machine learning models make up a small fraction of all attacks. In reality, the vast majority of attacks are stopped
by the target’s defenses: ﬁrewalls, domain blockers, spam ﬁlters, etc, as illustrated in Figure 1. Only a small fraction of
attempted attacks reach the victim and are recorded as training data for machine learning algorithms. This also pertains
to other types of malicious behaviors, which are at best only partially observed, as malicious actors attempt to obfuscate
their behaviors. As we show in this paper, having access to only a subset of malicious events for use in training reduces
the predictive utility of the data, and accuracy of the models learned from it. In this paper, we demonstrate this important
problem in the context of cyber-attack forecasting.

This work makes the following two contributions: 1) We quantify the impact of incomplete observation due to ﬁltering
on the predictability of malicious events using real-world email data from two distinct organizations and 2) We show
that predictability decreases and prediction error grows when more malicious emails are ﬁltered by the organization’s
defenses. Our work identiﬁes an important challenge researchers have to consider when forecasting malicious activity,
including cyber-attacks.

2 Related Work

Researchers have used state-of-the-art machine learning methods to forecast cyber-attacks and extract predictive
indicators from available data sources. Works such as [1, 2, 3, 4] have trained models to ﬁnd associations between
such indicators and successful attacks. Approaches using temporal forecasting include prediction of cyber breaches [5].
This type of analysis models the inter-arrival time of breach incidents inter-arrival as a stochastic process, described
by an auto-regressive and Moving Average (ARMA). The authors also show a decrease between event inter-arrival
times, indicating that cyber-attacks are becoming more frequent. A Bayesian framework for cyber-attack prediction is
presented in [6]. The authors use attack graphs to represent and enumerate possible system vulnerabilities and attack
paths. While this approach is promising, in practice it may not be actionable, as it requires an accurate picture of all
system attack surfaces and vulnerabilities, which is unrealistic in a modern enterprise network. The authors in [7]
propose a methodology to determine enterprise-level risk assessment against "untargeted" attacks, testing the framework
on data accrued from a large ﬁnancial institution. The work in [8] presents a Bayesian State Space Model (BSSM)
model for forecasting cyber-attack events, and can do so with reasonable accuracy for non-bursty events up to one week
out. This result is promising, however, the data set itself is exactly the sort of ﬁltered view that this work addresses. The
training data used in the study includes approximately seven years of weekly analyst-veriﬁed cyber incidents at a large
US Department of Defense enterprise.

Another line of research is to use a variety of external data to improve predictions. This includes [9] and [10], which
uses external data from Twitter discussions to automatically learn keywords associated with emerging cyber threats,
such as malware or botnet names. Other works identify patterns within discussions of vulnerabilities on darkweb [11]
or sentiment of posts in hacker forums [12], predictive of future cyber-attacks, or identify software vulnerabilities that
are likely to get exploited [13, 14]. All of these approaches are useful in enhancing predictions of a speciﬁc domain
based on external signals relevant to that domain, but none address the fundamental impact of data on the predictability
of cyber-attacks.

3 Limits of Predictability

Our work builds upon our recent discovery of a fundamental limit to the predictability of partially observed dynamic
systems. We developed a mathematical framework to characterize the loss of information in sampled time series [15].
The framework allows us to quantify how the predictability of dynamic systems is affected by temporal sampling under
a variety of sampling conditions. In this work, we will extend our framework to quantify the impact of predictability
loss on real-world forecasting tasks of interest in security applications. Speciﬁcally, we will measure how partial
observation affects the accuracy of forecasting cyberattacks.

Consider a dynamic process generating events, (e.g.) cyberattacks against an organization or protests in a region. We
represent the time series of this ground truth data as X = [X1, X2, . . . , XT ], each entry representing the number of

2

A PREPRINT - APRIL 10, 2020

Figure 1: Sketch of the ﬁltering framework. In the context of cyberattacks, X is the number of attempted attacks per
day; Y is the number of successful attacks per day observed by the target. The probability of an attack being successful
is p. The Binomial distribution B(n, p) is used to model the time series Y .

events at time t. Observers of this process may not see all events. Twitter, for example, makes only a small fraction
(≤ 10%) of messages posted on its platform programmatically available, and an organization’s defenses may stop
the vast fraction of attempted attacks from reaching end users. We refer to the time series of the observed data as
Y = [Y1, Y2, . . . , YT ]. Figure 1 depicts the cyber-attack prediction problem under our framework.

We model partial observability as a stochastic sampling process, where each event has some probability p to be observed,
independent of other events. Therefore, we can represent the observed data as: Yt ∼ B([Xt], p), where B([Xt], p)
represents the Binomial distribution with parameters [Xt] for sample size and success probability p.

Under this framework, we derived the following theoretical result [15]:

Decay of auto-correlation of the observed signal. The auto-correlation of the observed signal Y decays monotoni-

cally at lower sampling rates. (lower probability p)

From theory to application.
In this paper, we aim to apply the theoretical framework – describing the effects of
sampling on predictability – to real-world situations in the context of predicting cyber-attacks. We will explore whether
the simpliﬁed assumptions of the theoretical model stand up to the test of empirical veriﬁcation. Thus, our current study
addresses two research questions:

RQ1 Our past work shows a linear (autocorrelation) loss of predictability due to sampling. How does sampling affect

non-linear forecasting methods? Are these methods more/less robust than linear ones?

RQ2 For analytical purposes, partial observability is modeled as a random sampling, however, this is rarely the case in

reality. Does incomplete data affect real-world cyber-attack forecasting scenarios?

Our past work primarily focused on linear forecasting models, such as ARIMA, which we linked to linear measures of
predictability, like autocorrelation. However, it is possible that due to nonlinear interactions, predictability may not
be lost as quickly during sampling. To test this theory, in this work we investigate the possibility of mitigating the
loss of information using non-linear relationships in data and metrics. We will identify such cases and compensate for
the loss of linear predictability using nonlinear forecasting models and nonlinear measures of predictability, such as
permutation entropy [16]. We will use neural networks in the prediction tasks and compare their performance to linear
forecasting models, such as ARIMA. We will identify applications where linear and non-linear predictability measures
diverge and explore whether non-linear models can compensate for the loss of information.

Second, the framework assumes that partial observability can be modeled as a Binomial sampling with a ﬁxed probability
of success. However, depending on the application, this may rarely be the case. For example, a Twitter sample obtained
through their API may not be a good representation of the data due to non-homogeneous sampling [17]. In malicious
email detection, multiple layers of spam ﬁlter techniques are combined for advanced protection [18]. In this work, we
recreate as close as possible the sampling process over the attempted attacks by sequentially turning on these multiple
layers of protection.

3

A PREPRINT - APRIL 10, 2020

(a) Number of threat messages in Armstrong data based on their
risk score threshold

(b) Cumulative number of messages in each category within ISI
data.

Figure 2: Armstrong and ISI malicious emails data.

4 Methods

4.1 Data

In this work, we explore email metadata sourced from two distinct enterprises. The ﬁrst, denoted ISI, represents email
metadata from the University of Southern California’s Information Sciences Institute. The second is an anonymized
applied science and technology company we denote as Armstrong. In both instances, we analyze the output from
the speciﬁc enterprise’s spam appliance, which does a number of classiﬁcation and ﬁltering steps in order to protect
end-users from potentially malicious emails. We explain these data sets in more detail in the following section.

4.1.1 ISI

The ISI data set consists of daily summaries of all incoming mail activity from August 2018 through July 2019. These
summaries contain count data for several threat classiﬁcations, as determined by the ISI spam appliance. The average
number of total daily malicious emails is 2233 with a minimum of 0, maximum of 7163 and the standard deviation of
1733. The speciﬁc message classiﬁcations are as follows:

• Invalid Recipients: Messages dropped by a Lightweight Directory Access Protocol (LDAP) accept-query

process

• Virus Detected: Messages with a malicious payload, as detected via the appliance virus scanner

• Messages with Malicious URLs: Messages containing malicious URLs, as determined via appliance blacklists

and heuristics, in the message body or attachments

• Stopped by Content Filter: Messages having contents related to gaming, pornography, weapons, etc.

• Marketing: "Gray"-mail marketing messages sent by recognized marketing groups

• Social Networking: Messages from social networks, forums, etc.

• Bulk: Advertising and marketing messages sent by unrecognized sources.

Security appliances of this company classify unsolicited emails by categories and block any/all categories based on the
organization’s predeﬁned policy.

4.1.2 Armstrong

This data was collected from a web security appliance deployed in the email infrastructure of the Armstrong organization.
Armstrong data ranges from February 2018 to January 2019 and has on average 184 email messages per day. The
minimum number of daily attacks is 0 and the maximum number is 1094 with the standard deviation is 163. This
security appliance assigns 4 scores to each email, described below:

4

threshold=0threshold=50threshold=100threshold=150threshold=200threshold=250threshold=300risk level0100002000030000400005000060000cumulative countArmstrong real-word samplingVirus DetectedInvalid RecipientsMalicious URLsSocial NetworkingContent FilterBulk MessagesMarketingthe last category included050000100000150000200000250000300000350000cumulative countISI real-word samplingA PREPRINT - APRIL 10, 2020

Figure 3: Cumulative time series of categories in ISI data used for real-world sampling. The top leftmost plot is the
time series of messages from Virus Detected category only, we add other categories to sampled data one-by-one. The
last plot (titled as Marketing) contains messages from all malicious categories.

• Impostor Score: An aggregate score of rules and heuristics that compare (e.g.) message credentials and

metadata to message contents in order to determine if the sender is who they purport to be

• Malware Score: A determination of conﬁdence that the message contains a malicious attachment or URL
• Spam Score: A score based on spam heuristics such as message keywords, metadata agreement, and other

traditional methods

• Phish Score: An indication of how conﬁdent the email appliance is that the email is attempting to elicit

information from the recipient maliciously

4.2 Sampling

To understand the effects of sampling on predictability, we used both random sampling and the more realistic real-world
sampling.

4.2.1 Random Sampling

For random sampling, we ﬁlter events uniformly at random with some probability. This sampling can be modeled as a
Bernoulli trial with parameter p. While changing the parameter from 0 to 1 we change the sampling rate. Also, since
this process is stochastic for each probability p we sample the time series 50 times.

4.2.2 Real-world sampling

Real-world sampling for each dataset is described below.

ISI To sample ISI data, we mimic the ﬁltering done by the security appliances. We treat each category as a ﬁlter that
prevents emails of that type to pass. The order of ﬁlters is based on the number of emails in each group: we ﬁltered
out the group with the highest number of emails ("Marketing") ﬁrst, then "Bulk" and so on. We chose this ordering
as it roughly aligns with our data; we consider the maliciousness of the message to be inversely proportional to the
frequency such message types are observed (i.e. spam is common, therefore not as dangerous). In Figure 2b, we can see
that more serious attacks like messages with viruses occur less frequently in comparison to marketing or bulk messages.
In Figure 3 we can see the daily time series of counts for each threat categories.

Armstrong We sum over the aforementioned threat scores, and denote this the Risk score. This aggregate score has
a potential range of 0 to 400 – although it only ranges from 0 to 300 in the data – is then used as a ﬁlter to sample
emails. The distribution of the risk scores in the Armstrong data is shown in Figure 2a. We ﬁlter the data by setting the
risk score thresholds to 0, 50, · · · 300. For example, threshold 0 allows only email messages with a 0 risk score to pass
through the ﬁlter, and threshold 300 allows all emails to pass.

5

2018-122019-012019-022019-032019-042019-052019-062019-07020406080100Virus Detected2018-122019-012019-022019-032019-042019-052019-062019-07100200300Invalid Recipients2018-122019-012019-022019-032019-042019-052019-062019-0702004006008001000Messages with Malicious URLs2018-122019-012019-022019-032019-042019-052019-062019-0702505007501000Social Networking2018-122019-012019-022019-032019-042019-052019-062019-070100020003000Stopped by Content Filter2018-122019-012019-022019-032019-042019-052019-062019-0701000200030004000Bulk2018-122019-012019-022019-032019-042019-052019-062019-07200040006000MarketingA PREPRINT - APRIL 10, 2020

Figure 4: Decay of predictability of (randomly) sampled ISI data. The (a) auto-correlation decreases at low sampling
rates and (b) permutation entropy increases; and (c) and error of model-bases techniques increases

Figure 5: Decay of predictability of (randomly) sampled Armstrong data. The (a) auto-correlation decreases at low
sampling rates and (b) permutation entropy increases; and (c) and error of model-bases techniques increases

4.3 Measuring Predictability

As measures of predictability we will use auto-correlation, permutation entropy and prediction error. The ﬁrst two are
model-free measures of predictability, while that latter requires model-based techniques such as ARIMA or RNN’s
(Recurrent Neural Network) to predict future values and compute their prediction error.

Auto-correlation captures how well a time series is correlated (using Pearson correlation) with its own time-lagged
versions, and has been widely used in ﬁnance [19]. Auto-correlation is also linked to the performance of auto-regressive
linear models such as ARIMA, with higher auto-correlation leading to better performing auto-regressive models. For
each time series X, we ﬁnd the lag τ , 1 ≤ τ ≤ 7, which has the highest auto-correlation. We then use the found lag to
compute the auto-correlation of all the sampled time series Y .

Permutation Entropy [16] captures the complexity of a time series through statistics of its ordered sub-sequences
(motifs), and it is used as a model-free, non-linear indicator of predictability, for example of infectious disease
outbreaks [20] and human mobility [21]. Permutation entropy, can be interpreted as the entropy of all the d! possible
motifs of ﬁxed size d present in a time series. The motifs represent ordinal patterns that measure the ordinal relation
among successive time series values. As an example, if x1 = 3, x2 = 6, x3 = 1, then the ordinal pattern of this
subsequence {x1, x2, x3} is φ(x1, x2, x3) = (312) because x3 ≤ x1 ≤ x2. Lower permutation entropy is associated
with better predictability.

4.4 Forecasting Models

For our model-based predictability measures, we use state-of-the-art forecasting models based on neural network
architectures and autoregressive models. The forecasting task is as follows. Given a daily time series describing
cyber-attack events, we predict new events occurring in the future. Finally, we quantify the prediction error with the

6

0.00.20.40.60.81.0Sampling rate0.98250.98500.98750.99000.99250.99500.99751.0000Relative Autocorrelation (/0)0.00.20.40.60.81.0Sampling rate1.001.021.041.061.08Relative Permutation Entropy (HP/HP0)0.00.20.40.60.81.0Sampling rate0.840.860.880.900.920.940.960.981.00Relative Autocorrelation (/0)0.00.20.40.60.81.0Sampling rate1.001.011.021.031.04Relative Permutation Entropy (HP/HP0)A PREPRINT - APRIL 10, 2020

Figure 6: Decay of predictability of ISI data under real-world sampling. The (a) auto-correlation decreases at low
sampling rates; (b) permutation entropy increases; and (c) and error of model-bases techniques increases.

Figure 7: Decay of predictability of Armstrong data under real-world sampling for three out of the four measures. The
(a) auto-correlation decreases at low sampling rates; (b) permutation entropy decreases; and (c) and error of model-bases
techniques increases.

Root Mean Square Error (RMSE). Before feeding the data into the model we normalize the time series using z-scores
by negating the values by their mean and dividing them by their standard deviation. In this way, the mean of the time
series becomes 0 and the standard deviation of 1. Since the data is already normalized, we do not need to normalize the
RMSE and thus, we can compare the RMSE of the same data at different samplings rates.

4.4.1 Auto-regressive Models

For our linear model, we use Auto Regressive Integrated Moving Average (ARIMA) to predict the future points of the
time series. The “AR” part of the name indicates using the lagged observed time series as a regressor for predicting
future values. The “I” part shows that this model differences the raw observations (subtracts each point in the observation
from a previous time-step) to make it a stationary time series. The “MA” part indicates that the model uses a linear
combination of lags of the forecast errors as the regression error. An ARIMA model is speciﬁed as ARIMA(p,d,q) in
which p is the number of autoregressive terms, d is the number of differences applied to make the time series stationary,
and q is the order of moving average for the forecast errors. We performed a grid search to choose the set of parameters
that minimizes the AIC (Akaike Information Criterion) value of goodness-of-ﬁt.

4.4.2 Neural Networks

Neural network models have grown dramatically in popularity across many applications, including forecasting temporal
phenomena. Neural network-based models can capture non-linearities by using multiple layers of non-linear activation
functions. The caveat is that such models typically require a large amount of training data to accurately estimate the
model parameters. Many variants of recurrent neural network units have been proposed including Long Short Term

7

0.00.20.40.60.81.0Sampling rate0.40.50.60.70.80.91.0Relative Autocorrelation (/0)0.00.20.40.60.81.0Sampling rate1.001.051.101.151.201.25Relative Permutation Entropy (HP/HP0)200004000060000Sampling rate0.20.40.60.81.0Relative Autocorrelation (/0)200004000060000Sampling rate0.8250.8500.8750.9000.9250.9500.9751.0001.025Relative Permutation Entropy (HP/HP0)A PREPRINT - APRIL 10, 2020

Memory (LSTM)[22] which has been widely used for time series prediction [23] and even more speciﬁcally for cyber
attack prediction [24]. Each LSTM unit contains cell state plus input, output and forget gates. This architecture is
designed to remember long term dependencies and forget irrelevant information which can be very useful for time
series prediction. We use a simple one layer LSTM plus activation function for training the model. Since we had limited
amount of data more complex models failed due to overﬁtting.

5 Results

In this section, we show our ﬁndings surrounding the effect of sampling/ﬁltering on the predictability of cyberattacks.
We use the two data sets described in previous sections, ISI and Armstrong. For each data set, we use both random
sampling and real-world sampling to compare their effects on predictability. See Methods Section 4.2 for details on the
different sampling approaches.

We measure predictability with auto-correlation, permutation entropy and prediction error. For prediction error, we
use ARIMA as a representative for linear models and LSTM as a representative for non-linear models. We use RMSE
(Root Mean Squared Error) to measure prediction error.

In all of the experiments below, for each model, data set, and sampling rate, we ﬁrst trained the models with the ﬁrst
month of the historical data. Then, we performed next day predictions on the rest of the data set. The models were
retrained with the whole historical data every week of predictions. ARIMA generally uses all the historical data as
input to predict, however, for the RNNs we only used the 7 previous days as input.

5.1 Random Sampling

We ﬁrst examine the loss of predictability due to sampling under the random sampling scenario, where the email events
have equal, but variable probability to be ﬁltered by the security appliance. Figures 4 and 5 show that the predictability
decays at lower sampling rates for both our data sets. This effect holds true no matter the measure of predictability
used. Whether it is a model-free measure (such as auto-correlation or permutation entropy) or using our model-based
measures (prediction error). Research question RQ1 asked whether non-linear methods are more or less robust to the
effects of sampling. Comparing the error of the ARIMA vs RNN predictions in both enterprises we highlight two main
observations:

• The RNN (non-linear) method clearly outperforms the linear based ARIMA predictions, at all sampling rates,

in both enterprises.

• For ISI data (Figure 4), the accuracy of the predictions deteriorates more sharply and abruptly at lower
sampling rates (around 40%) compared to the RNN. Whereas for Armstrong (Figure 5), both methods exhibit
similar and milder behavior as a function of the sampling rate.

5.2 Real-World Sampling

Under the real-world sampling scenario, predictability also decays as more of the unsolicited emails are removed by the
security appliances. Figures 6 and 7 show the loss of predictability under real-world sampling scenarios. Note that the
curves look similar to those for random sampling, with the exception of Armstrong’s decreasing permutation entropy
trend. Yet the effects are much more pronounced, which is evident in the fast incline of error for both ARIMA and
RNN methods alike. Addressing question RQ1, we highlight that,

• Real-world sampling affects similarly to both linear and non-linear methods. Speciﬁcally, for low sampling

rates, both methods have a similar high error.

Regarding question RQ2, we compare real-world sampling vs random sampling.

• Our results suggest that in real-world scenarios, partial observability has a higher impact on predictability.

Together, both results suggest that the practical implications of incomplete data when predicting cyber-attacks not only
are signiﬁcant, but are stronger than what the current theory indicates. We have empirically validated that our models
and theories do assert an important limit in predictability. Yet, as our results show, further steps and future work are
needed to better quantify, mitigate and predict the effects of partial data in real-world situations.

8

A PREPRINT - APRIL 10, 2020

(a) ISI data (with real-world sampling).

(b) Armstrong data (with real-world sampling)

Figure 8: Using raw (unﬁltered) data as external signal to predict the data with real-world sampling. Full: unﬁltered
data as external signal; Prediction: predicted unﬁltered data as external signal; Without: without external signal

5.3 Effects of External Signals

Results presented above show how predicting cyber-attacks become increasingly difﬁcult as we consider more dangerous
threats (which are fewer in number). At the same time predicting attempted cyber-attacks, which are of less interest,
is considerably easier. We can take advantage of this fact and use the prediction of the attempted cyber-attacks as an
external signal. We test this theory using the RNN model, since it consistently gave better results than ARIMA. We ﬁrst
forecast the external signal for the next day (ˆxt+1), then feed 7 historical days of both target data and external data plus
ˆxt+1, to the model. We ran this experiment at different sampling rates (except for the raw data).

Figures 8b and 8a show results for Armstrong and ISI data, both with real-world sampling. In both plots, "Prediction"
presents the experiment described above. To compare the results, we also plot predictions without external signals,
the same results presented in Figures 7C and 6C, as "Without". The "Full" line represents the error of forecasts using
the unﬁltered data as an external signal. We expected "Full" and "Without" to be upper bounds and lower bounds for
"Prediction" respectively. This is the case in Figure 8a; however, in Figure 8b "Prediction" outperforms "Full". This
could be because of the high permutation entropy of unﬁltered Armstrong which also causes an unexpected trend in
Figure 7B. Figures 8a and 8b also show that the raw signal is a better external signal when we are trying to predict
signals with similar sampling rates. This suggests that signals with higher yet similar sampling rates could be the best
candidates for external signals.

6 Conclusion

Artiﬁcial intelligence and machine learning have generated much excitement in recent years with their ability to
identify elusive patterns in large volumes of data. The hope for the cybersafety community is that AI systems can
be trained to recognize precursors of malicious events, such as cyber-attacks, in the voluminous data streams from
open online sources. Our work identiﬁes inherent obstacles to realizing this vision. Importantly, the performance
of AI systems is only as good as the training data they are provided. However, if training data represents only a
partial observation of the processes of interest, the performance of the predictive model necessarily degrades. In the
cybersecurity setting, this means that AI systems trained on ﬁltered data – e.g., successful cyber-attacks or events
passing through an organization’s ﬁrewall – will not be able to accurately predict future cyber-attacks. Using data from
two organizations, we demonstrated the loss of predictability as more and more of the data was ﬁltered, for example, by
the organization’s security appliances.

Our work identiﬁes potentially fruitful avenues for future research. Figures 7 and 6 show that non-linear models such as
RNN do have an advantage over linear models, however, this gap decreases for lower sampling rates. Suggesting that in

9

A PREPRINT - APRIL 10, 2020

practice, the full advantage of these methods is not fully exploited. Future work will be devoted to further increase
this gap, investigating the possibility of mitigating the loss of information using new non-linear, neural network based
methods. Second, our framework is very ﬂexible and general, and can be applied to a myriad of applications beyond
cybersecurity, for example, predicting armed conﬂict, protest, and political unrest around the world.

Acknowledgements

This work was supported by the Ofﬁce of the Director of National Intelligence (ODNI) and the Intelligence Advanced
Research Projects Activity (IARPA) via the Air Force Research Laboratory (AFRL) contract number FA8750-16-C-
0112, and by the Defense Advanced Research Projects Agency (DARPA), contract number W911NF-17-C-0094. The
U.S. Government is authorized to reproduce and distribute reprints for Governmental purposes notwithstanding any
copyright annotation thereon. Disclaimer: The views and conclusions contained herein are those of the authors and
should not be interpreted as necessarily representing the ofﬁcial policies or endorsements, either expressed or implied,
of ODNI, IARPA, AFRL, DARPA, or the U.S. Government.

References

[1] Gordon Werner, Shanchieh Yang, and Katie McConky. Time series forecasting of cyber attack intensity. In
Proceedings of the 12th Annual Conference on cyber and information security research, page 18. ACM, 2017.

[2] Zhenxin Zhan, Maochao Xu, and Shouhuai Xu. Predicting cyber attack rates with extreme values.

IEEE

Transactions on Information Forensics and Security, 10(8):1666–1677, 2015.

[3] Ahmet Okutan, Shanchieh Jay Yang, and Katie McConky. Predicting cyber attacks with bayesian networks
using unconventional signals. In Proceedings of the 12th Annual Conference on Cyber and Information Security
Research, page 13. ACM, 2017.

[4] Palash Goyal, KSM Hossain, Ashok Deb, Nazgol Tavabi, Nathan Bartley, Andrés Abeliuk, Emilio Ferrara, and
Kristina Lerman. Discovering signals from web sources to predict cyber attacks. arXiv preprint arXiv:1806.03342,
2018.

[5] M. Xu, K. M. Schweitzer, R. M. Bateman, and S. Xu. Modeling and predicting cyber hacking breaches. IEEE

Transactions on Information Forensics and Security, 13(11):2856–2871, Nov 2018.

[6] Jinyu Wu, Lihua Yin, and Yunchuan Guo. Cyber attacks prediction model based on bayesian network. 2012 IEEE

18th International Conference on Parallel and Distributed Systems, Dec 2012.

[7] Luca Allodi and Fabio Massacci. Security events and vulnerability data for cybersecurity risk estimation. Risk

Analysis, 37(8):1606–1627, Aug 2017.

[8] Jonathan Z Bakdash, Steve Hutchinson, Erin G Zaroukian, Laura R Marusich, Saravanan Thirumuruganathan,
Charmaine Sample, Blaine Hoffman, and Gautam Das. Malware in the future? forecasting of analyst detection of
cyber events. Journal of Cybersecurity, 4(1):tyy007, 2018.

[9] Alan Ritter, Evan Wright, William Casey, and Tom Mitchell. Weakly supervised extraction of computer security
events from twitter. Proceedings of the 24th International Conference on World Wide Web - WWW ’15, 2015.
[10] Anna Sapienza, Sindhu Kiranmai Ernala, Alessandro Bessi, Kristina Lerman, and Emilio Ferrara. Discover.

Companion of the The Web Conference 2018 on The Web Conference 2018 - WWW ’18, 2018.

[11] Mohammed Almukaynizi, Ericsson Marin, Eric Nunes, Paulo Shakarian, Gerardo I Simari, Dipsy Kapoor, and
Timothy Siedlecki. Darkmention: A deployed system to predict enterprise-targeted external cyberattacks. In 2018
IEEE International Conference on Intelligence and Security Informatics (ISI), pages 31–36. IEEE, 2018.
[12] Ashok Deb, Kristina Lerman, and Emilio Ferrara. Predicting cyber-events by leveraging hacker sentiment.

Information, 9(11):280, 2018.

[13] Carl Sabottke, Octavian Suciu, and Tudor Dumitras. Vulnerability disclosure in the age of social media: exploiting
twitter for predicting real-world exploits. In 24th {USENIX} Security Symposium ({USENIX} Security 15), pages
1041–1056, 2015.

[14] Nazgol Tavabi, Palash Goyal, Mohammed Almukaynizi, Paulo Shakarian, and Kristina Lerman. Darkembed:
Exploit prediction with neural language models. In Thirty-Second AAAI Conference on Artiﬁcial Intelligence,
2018.

[15] Andrés Abeliuk, Zhishen Huang, Emilio Ferrara, and Kristina Lerman. Predictability limit of partially observed

systems. arXiv preprint arXiv:2001.06547, 2019.

10

A PREPRINT - APRIL 10, 2020

[16] Christoph Bandt and Bernd Pompe. Permutation entropy: A natural complexity measure for time series. Phys.

Rev. Lett., 88:174102, Apr 2002.

[17] Fred Morstatter, Jürgen Pfeffer, Huan Liu, and Kathleen M Carley. Is the sample good enough? comparing data

from twitter’s streaming api with twitter’s ﬁrehose. In ICWSM, 2013.

[18] Vivek Shandilya, Fahad Polash, and Sajjan Shiva. A multi-layer architecture for spam-detection system. Computer

Science & Information Technology, pages 193–200, 2014.

[19] Kian-Ping Lim, Weiwei Luo, and Jae H Kim. Are us stock index returns predictable? evidence from automatic

autocorrelation-based tests. Applied Economics, 45(8):953–962, 2013.

[20] Samuel V Scarpino and Giovanni Petri. On the predictability of infectious disease outbreaks. Nature communica-

tions, 10(1):898, 2019.

[21] Chaoming Song, Zehui Qu, Nicholas Blumm, and Albert-László Barabási. Limits of predictability in human

mobility. Science, 327(5968):1018–1021, 2010.

[22] Sepp Hochreiter and Jürgen Schmidhuber. Long short-term memory. Neural computation, 9(8):1735–1780, 1997.
[23] Yao Qin, Dongjin Song, Haifeng Chen, Wei Cheng, Guofei Jiang, and Garrison Cottrell. A dual-stage attention-

based recurrent neural network for time series prediction. arXiv preprint arXiv:1704.02971, 2017.

[24] Santosh Aditham, Nagarajan Ranganathan, and Srinivas Katkoori. Lstm-based memory proﬁling for predicting
data attacks in distributed big data systems. In 2017 IEEE International Parallel and Distributed Processing
Symposium Workshops (IPDPSW), pages 1259–1267. IEEE, 2017.

11

