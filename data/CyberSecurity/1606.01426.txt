Multimodal Game Bot Detection using User Behavioral
Characteristics

Ah Reum Kang
University at Buffalo

Seong Hoon Jeong
Korea University

Aziz Mohaisen
University at Buffalo

Huy Kang Kim
Korea University

6
1
0
2

n
u
J

4

]

Y
C
.
s
c
[

1
v
6
2
4
1
0
.
6
0
6
1
:
v
i
X
r
a

ABSTRACT
As the online service industry has continued to grow, illegal
activities in the online world have drastically increased and
become more diverse. Most illegal activities occur continu-
ously because cyber assets, such as game items and cyber
money in online games, can be monetized into real currency.
The aim of this study is to detect game bots in a Massively
Multiplayer Online Role Playing Game (MMORPG). We ob-
served the behavioral characteristics of game bots and found
that they execute repetitive tasks associated with gold farm-
ing and real money trading. We propose a game bot detec-
tion methodology based on user behavioral characteristics.
The methodology of this paper was applied to real data pro-
vided by a major MMORPG company. Detection accuracy
rate increased to 96.06% on the banned account list.
Keywords. Online game security, Social network analysis,
Behavior analysis, MMORPG.

1. BACKGROUND

A game bot is an automated program that plays a given
game on behalf of a human player. Game bots can earn
much more game money and items than human users be-
cause the former can play without requiring a break. Game
bots also disturb human users because they consistently
consume game resources. For instance, game bots defeat
all monsters quite rapidly and harvest items, such as farm
produce and ore, before human users have an opportunity
to harvest them. Accordingly, game bots cause complaints
from human users and damage the reputation of the online
game service provider. Furthermore, game bots can cause
inﬂation in a game’s economy and shorten the game’s life-
cycle, which defeats the purpose for which game companies
develop such games [10].

Several studies for detecting game bots have been pro-
posed in academia and industry. These studies can be clas-
siﬁed into three categories: client-side, network-side, and
server-side. Most game companies have adopted client-side
detection methods that analyze game bot signatures as the

ACM ISBN 978-1-4503-2138-9.
DOI: 10.1145/1235

primary measure against game bots. Client-side detection
methods use the bot program’s name, process information,
and memory status. This method is similar to antivirus pro-
grams that detect computer viruses [13]. Client-side detec-
tion methods can be readily detoured by game bot develop-
ers, in addition to degrading the computer’s performance.
For this reason, many countermeasures that are based on
this approach, such as commercial anti-bot programs, are
not currently preferred.

Network-side detection methods, such as network traﬃc
monitoring or network protocol change analysis, can cause
network overload and lag in game play, a signiﬁcant annoy-
ance in the online gaming experience. To overcome these
limitations of the client-side and network-side detection meth-
ods, many online game service providers employ server-side
detection methods. Server-side detection methods are based
on data mining techniques that analyze log data from game
servers. Most game servers generate event logs whenever
users perform actions such as hunting, harvesting, and chat-
ting. Hence, these in-game logs facilitate data analysis as a
possible method for detecting game bots.

Online game companies analyze user behaviors or packets
at the server-side, and then online game service providers
can selectively block those game bot users that they want
to ban without deploying additional programs on the client-
side. For that, most online game service providers prefer
In addition, some online
server-side detection methods.
game companies introduced big data analysis system ap-
proaches that make use of data-driven proﬁling and detec-
tion [10]. Such approaches can analyze over 600 TB of logs
generated by game servers and do not cause any side-eﬀects,
such as performance degradation or conﬂict with other pro-
grams.

The literature is rich of various works on the problem of
game bot detection that is summarized in Table 1, which
compares various server-side detection schemes classiﬁed into
six analysis categories: action frequency, social activity, gold
farming group, sequence, similarity, and moving path. Each
of those techniques, as surveyed in section 2, has advantages
and disadvantages; none of the techniques look at the mul-
timodality of the features utilized of detection, which is a
step we take in this paper.
Contribution. To this end, we collaborated with NC-
Soft, Inc., one of the largest MMORPG service companies
in South Korea, in order to analyze long-term user activity
logs and understand discriminative features for high ﬁdelity
bot detection. In this paper, we propose a game bot detec-
tion framework. Our framework utilizes multimodal users’

 
 
 
 
 
 
behavioral characteristic analysis and feature extraction to
improve the accuracy of game bot detection. We adopted
some features discovered in the prior literature in conﬁrmed
in our analysis, as well as some new features discovered in
this study. We combine those features in a single framework
to achieve better accuracy and enable robust detection. An
additional contribution of this work is also the exploration
of characteristics of the misclassiﬁed users and bots, high-
lighting plausible explanations that are in line with users
and bots features, as well as the game operations.

2. RELATED WORK

Action frequency analysis uses the fact that the frequen-
cies of particular actions by game bots are much higher than
that of human users. To this end, Chen et al.
[2] studied
the dynamics of certain actions performed by users. They
showed that idle and active times in a game are represen-
tative of users and discriminative of users and bots. Tha-
wonmas et al.
[21] utilized the information on action fre-
quencies, types, and intervals in MMORPG log data. To
detect game bots, Park et al.
[17] selected six game fea-
tures, namely map changes, counter-turn, rest states, killing
time, experience point, and stay in town. Chung et al. [3]
were concerned with various game play styles and classiﬁed
them into four player types: killers, achievers, explorers, and
socializers. Zhang et al. [26] clariﬁed user behaviors based
on game playing time. While this approach provides high
accuracy, it is limited in several ways. First, they only focus
on observations of short time window, thus they are easy to
evade. Second, some of such work focuses only on a lim-
ited feature space, thus the approach is prone to confusing
bots with “hardcore” users (users who use the game for long
times; who are increasingly becoming a phenomenon in the
online gaming communities).

Social activity analysis uses the characteristics of the so-
cial network to diﬀerentiate between human users and game
bots. Varvello et al.
[24] proposed a game bot detection
method emphasizing on the social connections of players in
a social graph. Our previous study chose chat logs that
reﬂect user communication patterns and proposed a chat-
ting pattern analysis framework [6]. Oh et al. [14] used the
fact that game bots and human users tend to form respec-
tive social networks in contrasting ways and focused on the
in-game mentoring network. Our other previous work found
that the goal of game bot parties is diﬀerent from that of hu-
man users parties, and proposed a party log-based detection
method [7]. This approach is however limited to detecting
misbehavior in party play and cannot detect misbehavior in
single play games.

Gold farming group analysis uses the virtual economy in
online games and traces abnormal trade networks formed by
gold farmers, merchants, bankers, and buyers. To character-
ize each player, Itsuki et al. [4] used four types of statistics:
total action count, activity time, total chat count, and the
amount of virtual currency managed in a given period of
time. Seo et al.
[19] analyzed gold farming group connec-
tion patterns using routing and source location information.
Kwon et al. [9] investigated gold farming networks and de-
tected the entire network structure of gold farming groups.
This work, while distantly related, is not concerned with the
detection of bots, but with understanding the unique roles
each bot plays in the virtual underground ecosystem given
a valid detection.

Sequence analysis uses iterated sequence datasets from lo-
gin to logout. Ahmed et al. [1] studied activity sequence fea-
tures, deﬁned as the number of times a given player engages
in an activity, such as the number of monsters killed and
the number of times the player was killed. Kwon et al. [18]
used the combat sequence each avatar produces. Lee et al.
[11] examined the full action sequence of users on big data
analysis platform. While such technique has been shown to
work in the past, such feature lacks context, and might be
easily manipulated by bot settings.

Similarity analysis uses the fact that game bots have a
strong regular pattern because they play to earn in-game
money. Kwon et al. [8] derived vectors using the frequency
of each event and calculated the vector’s cosine similarity
with a unit vector. Game bots repeatedly do the same se-
ries of actions, therefore their action sequences have high
self-similarity. Lee et al. [10] employed self-similarity mea-
sures to detect game bots. They proposed the self-similarity
measure and tested it in three major MMORPGs (“Lineage”,
“Aion” and “Blade&Soul”). Their scheme requires a lot of
data of certain behavior for establishing self-similarity.

Moving path analysis uses the fact that game bots have
pre-scheduled moving paths, whereas human users have var-
ious moving patterns. Thawonmas et al.
[22] provided a
method for detecting landmarks from user traces using the
weighted entropy of the distribution of visiting users in a
game map. They presented user clusters based on transi-
tion probabilities. To identify game bots and human users,
Van Kesteren et al. [23] took advantage of the diﬀerence in
their movement patterns. Mitterhofer et al.
[12] detected
the players controlled by a script with repeated movement
patterns. Pao et al. [15] used the entropy values of a user’s
trace and a series of location coordinates. They employed a
Markov chain model to describe the behavior of the target
trajectory. Pao et al.
[16] applied their method to vari-
ous types of trajectories, including handwriting, mouse, and
game traces, in addition to the traces of animal movement.
However, their feature also can be evaded and noised by
adaptive bots that integrate human-like moving behavior.

3. METHODS

Before elaborating on the framework and workﬂow of our
method, we ﬁrst highlight the dataset and ethnical guide-
lines used for obtaining and analyzing it.
Dataset. To perform this study, we rely on a real-world
dataset obtained from the operation of Aion, a popular game.
Our Aion dataset contains all in-game action logs for 88
days, between April 9th and July 5th of 2010. During this
period, there were 49,739 characters that played more than
three hours. Among these players, 7,702 characters were
game bots, identiﬁed and labeled by the game company. The
banned list was provided by the game company to serve as
the ground truth, and each banned user has been vetted and
veriﬁed by human labor and active monitoring.
Ethnical and privacy considerations. In order to per-
form this study we follow best practices in ensuring users
privacy and complying with ethical guidelines. First, the
privacy of users in the data is ensured by anonymizing all
personal identiﬁable information. Furthermore, consent of
users is taken into account by ensuring that data analysis
is within the scope of end user license agreement (EULA):
upon joining Aion, users grant NCSoft, Inc. the full permis-
sion to use and share user data for analysis purpose with

Category
Action frequency analysis

Table 1: Previous research on server-side detection.

Deﬁnition/key papers
Detection method based on users’ game play pat-
tern analysis [2, 21, 17, 3, 26]

Social activity analysis

Detection method based on users’ social interac-
tions analysis [24, 6, 14, 7]

Gold farming group analysis Detection method based on users’ economic activ-

ities analysis [4, 19, 9, 25]

Sequence analysis

Similarity analysis

Moving path analysis

Detection method based on users’ continuous play
sequences analysis [1, 18, 11]
Detection method based on users’ behavioral pat-
tern similarity analysis [8, 10]
Detection method based on patterns and zones of
moving path analysis [22, 23, 12, 15, 16]

Key idea
- Action frequency, type, and time-
interval analyses
- Idle time analysis
- Party play log analysis
- Chatting pattern analysis
- Social network analysis
- Real money trading analysis
- Trade network analysis
- Connection pattern analysis
- Game event sequence analysis
- Combat sequence analysis
- Self-similarity analysis

- Coordinate analysis
- Zone analysis

parties of NCSoft’s choosing. One of such parties was our
research group, and for research purpose only.

viding various performance measures, such as the accuracy,
precision, recall, and F-measure.

3.1 Framework and workﬂow

Our proposed framework for game bot detection is shown
in Figure 1. We posed the problem of identifying game
bots as a binary classiﬁcation problem. At a high-level,
our method starts with a data collection phase, followed
by a data exploration phase (including feature extraction),
In the
a machine learning phase, and a validation phase.
following we highlight each of those phases.
Data collection. In the data collection phase, we gathered
a dataset that combines in-game logs and chat contents.
Data exploration. We then performed data exploration
in order to comprehend the characteristics of the dataset
using data preprocessing, feature extraction, feature repre-
sentation, exploration, and selection for best discriminating
between bots and normal users. In the feature representa-
tion procedure, we followed standard methods for unifying
data and reducing its dimensionality. For example, we quan-
tized each network measure into three clusters with low,
medium, and high values using the k-means clustering al-
gorithm. In the feature exploration phase, we selected the
components of the data vectors and pre-pocessed them. For
example, we determined seven activities as social interac-
tions and quantiﬁed the diversity of social interactions by the
Shannon diversity entropy. In the feature selection phase,
we selected signiﬁcant features with the best-ﬁrst search,
greedy-stepwise search, and information gain ranking ﬁlter
to avoid overﬁtting and reduce the features (thus improving
the performance).
Machine learning.
In the machine learning phase, we
choose algorithms (e.g., decision tree, random forest, logis-
tic regression, and na¨ıve Bayes) and parameters (e.g., k-
fold-cross validation parameters, speciﬁc algorithm param-
eters, etc.), and feed the data collected using the selected
features in their corresponding representation. We further
build models (using the data fed) and establish baselines by
computing various performance metrics.
Evaluation.
In the evaluation phase, we summarize the
performance of each classiﬁer with the banned account list
provided by the game company as a ground truth, by pro-

Figure 1: Game bot detection framework based on
user behavioral characteristics.

Used features and their gap. As indicated in Table 2,
we classiﬁed the features we used in our work into personal
and social features. Given that the aim of game bots is to
earn unfair proﬁts, there is a gap between the values of the
personal features of game bots and those of human users.
The personal features can be also categorized into player
information and actions. The player information features
include login frequency, play time, game money, and num-
ber of IP address. The player action features contain sitting
(an action taken by players to recover their health), earn-
ing experience points, obtaining items, earning game money,
earning player kill (PK) points, harvesting items, resurrect-
ing, restoring experience points, being killed by a non-player
and/or player character (NPC/PC), and using portals. The
frequency and ratio of these actions reﬂects the behavioral
characteristics of game bots and human users. For example,
game bots sit more frequently than human users to recover
health and mana points. Moreover, a player can acquire PK
points by defeating players of opposing factions. PK points
can be used to purchase various items from vendors. PK
points are also used to determine a player’s rank within the

Data collection(cid:2)(cid:9)(cid:21)(cid:9)(cid:1)	(cid:23)(cid:18)(cid:15)(cid:17)(cid:19)(cid:9)(cid:21)(cid:14)(cid:17)(cid:16)(cid:4)(cid:11)(cid:9)(cid:21)(cid:22)(cid:19)(cid:11)(cid:1)	(cid:23)(cid:21)(cid:19)(cid:9)(cid:10)(cid:21)(cid:14)(cid:17)(cid:16)(cid:4)(cid:11)(cid:9)(cid:21)(cid:22)(cid:19)(cid:11)(cid:1)(cid:7)(cid:11)(cid:18)(cid:19)(cid:11)(cid:20)(cid:11)(cid:16)(cid:21)(cid:9)(cid:21)(cid:14)(cid:17)(cid:16)(cid:4)(cid:11)(cid:9)(cid:21)(cid:22)(cid:19)(cid:11)(cid:1)	(cid:23)(cid:18)(cid:15)(cid:17)(cid:19)(cid:9)(cid:21)(cid:14)(cid:17)(cid:16)(cid:4)(cid:11)(cid:9)(cid:21)(cid:22)(cid:19)(cid:11)(cid:1)(cid:8)(cid:11)(cid:15)(cid:11)(cid:10)(cid:21)(cid:14)(cid:17)(cid:16)Parameters10-fold validationLabels(cid:6)(cid:9)(cid:10)(cid:13)(cid:14)(cid:16)(cid:11)(cid:1)(cid:5)(cid:11)(cid:9)(cid:19)(cid:16)(cid:14)(cid:16)(cid:12)ClassificationDecision TreeRandom ForestLogistic RegressionNaïve BayesTraining Data SelectionTest Data SelectionEvaluationAccuracyPrecisionRecallF-measuregame world. In Aion, the more PK points a player has, the
higher is the player’s rank. The high ranking player can feel
a sense of accomplishment. On the other hand, it is seen
that game bots are not interested in rank.

In addition, there is gap between the values of the so-
cial features of game bots and those of human users because
game bots do not attempt to social as humans. The social
features can be categorized into group activities, social in-
teraction diversity, and network measures. The features of
group activities include the average duration of party play
and number of guild activities. Party play is a group play
formed by two or more players in order to undertake quests
or missions together. The goals of party play commonly
are to complete diﬃcult quests by collaboration and enjoy
socialization. Interestingly, some game bots perform party
play, but the goal of party play of the game bots is dif-
ferent from that of human users. Their aim is to acquire
game money and items faster and more eﬃciently. Hence,
there are the behavioral diﬀerences between game bots and
human users. The social interaction diversity feature indi-
cates the entropy of party play, friendship, trade, whisper,
mail, shop, and guild actions. Game bots concentrate only
on particular actions, whereas human users execute multi-
ple tasks as needed to thrive in the online game world. The
player’s social interaction network can be represented as a
graph with characters as the nodes and interactions between
them as the edges. An edge between two nodes (players) in
this graph may, for example, highlight the transfer of an
item between the two nodes. The features of network mea-
sures include the degree, betweenness, closeness, eigenvector
centrality, eccentricity, authority, hub, PageRank, and clus-
tering coeﬃcient. The deﬁnitions of the network measures
are listed in Table 3.

4. RESULTS AND DISCUSSION

In this section we review more concretely the behavioral
characteristics of bots and humans based on the various fea-
tures utilized, and using the aforementioned dataset. We
then propose our bot detection mechanism based on dis-
criminative features and by elaborating on details of the
high level workﬂow in the previous section, including the
performance evaluation.

4.1 Behavioral characteristics

4.1.1 Player information

We compared the distribution of player information fea-
tures in order to identify the diﬀerence between the behav-
ioral characteristics of game bots and human users more
concretely. Figure 2 shows how intensively game bots play
games. Game bots often connect to the game and spend
much longer time playing it than human users. Game bots
can play a given game for 24 consecutive hours, whereas
human users hardly connect to the game during working
hours. Game bots invest signiﬁcant time in a game until
they are blocked. Figure 2(c) shows the cumulative distri-
bution of the maximum number of items harvested by users
per day. It is almost impossible for human users to harvest
more than 1,000 items per day. Since this is repetitive and
hard work, human users are easily exhausted. Nevertheless,
60% of game bots harvest more than 5,000 items a day. This
is an obvious characteristic for identifying game bots that we
include in our feature set.

Figure 2: Player information. (a) Cumulative distri-
bution of the user login frequency. (b) Cumulative
distribution of user play time. (c) Cumulative dis-
tribution of the number of items harvested by users.

4.1.2 Player actions

We examined the frequency and ratio of player actions
to determine the unique characteristics of game bots. Fig-
ure 3 presents the ratios of the activities of both game bots
and human users. The points in red indicate game bots,
and those in blue indicate human users. The ratio of “earn-
ing game money” of game bots is nearly similar to that of
human users. Remarkably, the ratios of “earning experi-
ence points” and “obtaining items” of game bots are much
higher than those of human users. The cumulative ratio of
“earning experience points”, “obtaining items”, and “earn-
ing game money” of game bots is close to 0.5, whereas that
of human users is only 0.33. This implies that game bots
concentrate heavily on proﬁt-related activities, and human
users enjoy various activities. In contrast, the ratio of “earn-
ing PK points” of human users is as much as three times that
of game bots. This reﬂects the fact that game bots are not
interested in rankings.

4.1.3 Group activities

Figure 4 shows the distribution of the average party play

 0 0.2 0.4 0.6 0.8 1100101102103104105Cumulative distribution(a) login frequencyBotHuman(cid:0)(cid:0)✁✂(cid:0)✁✄(cid:0)✁☎(cid:0)✁✆✝✝(cid:0)✞✝(cid:0)✟✝(cid:0)✠✝(cid:0)✡✝(cid:0)☛☞✌✍✌✎✏✑✒✓✔✕✒✖✑✗✒✘✌✑✒✙✚✛✜✢✣✤✥✦✧★✩✪✛✫✬✭✮✯✢✰✱✲✳✴✵✶✷ 0 0.2 0.4 0.6 0.8 10k2k4k6k8k10k12k14kCumulative distribution(c) # items harvestedBotHumanTable 2: Personal and social features.

Category
Personal feature

Player information
Player actions

Social feature

Group activities
Social interaction diversity
Network measures

Key idea
Login frequency, play time, game money, number of IP address
Sitting, earning experience points, obtaining items, earning game money, earning player
kill points, harvesting items, resurrection, restoring experience points, being killed by a
non-player and/or player character, using portals
Party play time, guild activities
Party play, friendship, trade, whisper, mail, shop, guild
Degree centrality, betweenness centrality, closeness centrality, eigenvector centrality, eccen-
tricity, authority, hub, PageRank, clustering coeﬃcient

4.1.4

Social interaction diversity

Figure 5 shows the cumulative distribution of the entropy
of social interactions. First, we determined seven activi-
ties as social interactions: party, friendship, trade, whisper,
mail, shop, and guild. We quantiﬁed the diversity of social
interactions by calculating the Shannon diversity entropy
deﬁned by:

H (cid:48) = −

n
(cid:88)

i=1

pi ln pi

(1)

n : number of social interaction types
pi : relative proportion of the ith social interaction type

The entropy of the social interactions of a player indicates
the various activities performed by the player. Figure 5
represents the fact that human users enjoy diverse activities,
whereas game bots do not. We notice that game bots are
interested in other activities.

Figure 3: Comparison of activity ratios between
game bots and human users. The ratios of “earning
experience points” and “obtaining items” of game
bots are much higher than those of human users.

time of game bots and human users. To acquire game money
and items, some game bots form a party with other game
bots. They can help each other not to be killed by monsters
during party play. Consequently, their party play patterns
are unusual. A total of 80% of game bots last longer than 4
hours 10 minutes, whereas 80% of human users last less than
2 hours 20 minutes. Since diﬃcult missions can normally be
completed within two hours through collaboration, human
users do not maintain party play as long as game bots.

Figure 5: Cumulative distribution of user social in-
teraction diversity. The average entropy of game bot
social interaction is much lower than that of human
users (0.4299 and 0.8352, respectively).

4.1.5 Network measures

In Figure 4, we present the basic directed characteristics
of each network of the game bot and human groups from
Aion [20]. First, we see that the average degree of the human
group is approximately 18 times larger compared with the
game bot group in the party network. The reason is that
human users form a party with many and unspeciﬁed users,
whereas game bots play with several speciﬁc other game
bots. The average degree of the friendship network of the

Figure 4: Cumulative distribution of user average
party play time. A total of 80% of game bots last
longer than 4 hours 10 minutes, whereas 80% of hu-
man users last less than 2 hours 20 minutes.

earning_PK_pointssittingearning_moneyobtaining itemsearning_exp_points05101520activity ratio (%)BotHuman(cid:0)(cid:0)✁✂(cid:0)✁✄(cid:0)✁☎(cid:0)✁✆✝✝(cid:0)✞✝(cid:0)✟✝(cid:0)✠✝(cid:0)✡✝(cid:0)☛✝(cid:0)☞✝(cid:0)✌✍✎✏✎✑✒✓✔✕✖✗✔✘✓✙✔✚✎✓✔✛✜✢✣✤✥✦✢✧★✩✦✪✢✩✫✬✧✢★✭✮✯✰✱✲✳✮✯✫✱✴✵✶✷✸✹✺✻✼ 0 0.2 0.4 0.6 0.8 1 0 0.4 0.8 1.2 1.6 2Cumulative distributionentropyBotHumanhuman group is larger by a factor of approximately four
compared with the game bot group. This fact indicates that
the friendship of game bots is utterly diﬀerent from that of
human users. Game bot friends simply mean other game
bots with which to play. The fact that the average degree
of the human group is 2.5 times larger than the game bot
group is observed in the case of the trade network. However,
the average clustering coeﬃcient of the game bot group is
approximately ﬁve times larger compared with the human
group. We assume that game bots have roles [9, 1]. For
instance, some game bots are responsible for gold farming,
while other game bots gather game money and items from
gold farmers or sell them for real money [25].

Interestingly, in the case of the mail network of the game
bots, we discovered nine spammers during the observation
period. The number of mail pieces sent by the spammers is
1,000 times per person on average. We observed the behav-
ioral characteristics of the spammers in more detail. Hence,
we found that they only send mail and stay online for a short
period of time in the online game world.

We also observed the existence of ﬁve collectors who re-
ceived items attached to mail from many other game bots.
These collectors received items over 6,000 times during the
observation period. This shows that there are several gold
farming groups. In the case of the shop network, we can see
the smallest number of nodes of both groups. Players are
immobile in the merchant mode, and thus cannot engage in
any action that requires movement, such as hunting mon-
sters, harvesting items, etc. Consequently, game bots do
not focus on the merchant mode because it can be a waste
of time for them.

4.1.6 The triad census

The relative prevalence of each of the 13 triad network
motifs given in Figure 6(a) indicates the interaction pattern
in the networks in more detail [5]. For our Aion networks, we
show the interaction pattern in Figure 6(b) in terms of both
the fractions of each motif type and the Z-scores assessed
against the null model (Eq. (2), also see 6 and 8). This
score is deﬁned as follows:

Zi =

N real

i − N random
i
σi,random

(2)

i

i

is the number of motif i found observed in the
is the expected number in the random-
is the standard deviation of its

where N real
i
network, N random
ized network, and σrandom
expected number in the randomized network.
Findings. Interestingly, the friendship, whisper, mail, and
shop networks of the game bot group, and the friendship and
shop networks of the human group, show one predominant
motif type. For instance, in the friendship network, type 7
accounts for more than 90% of the node triplet relationships,
which can be attributed to the highly reciprocal nature of
the interactions. The opposite reasoning can be applied to
shop: low reciprocity reﬂects the existence of big merchants.
Moreover, in the whisper and mail network of the game bot
group, type 1 accounts for more than 80% of the node triplet
relationships. This reﬂects the fact that some game bots
send information about the location coordinates of monsters
to other game bots in the case of the whisper network.

Some game bots send several mail pieces in the case of the
mail network. Comparing the prevalence of motifs against

Figure 6: Network motif analysis of node triplets re-
veals detailed interaction patterns in directed net-
works of game bots and human users. (a) The 13
possible motifs composed of three nodes in a di-
rected network. (b) The fractions of each motif type
in each of the six networks. Those motifs that ac-
count for fewer than 18% of all motifs are not shown.
Friendship, whisper, mail, and shop of the game bot
group, and friendship and shop of the human group
show one dominant motif each, consistent with the
high or low reciprocity found in the networks. (c)
A closer look at the (normalized) Z-score triad cen-
sus of party and trade networks where no dominant
motif is evident; the Z-score method is employed to
determine signiﬁcantly over and underrepresented
triangular motifs.

the null models allows us to detect signals discounted by ran-
dom expectation, and this is done via the Z-scores (Eq.(2)).
This is particularly necessary and illuminating in the case
of the other two networks (party and trade) because, by
considering the null models, we can see that although mul-
tiple motifs can be similarly abundant (Figure 6(b)), some
can be signiﬁcantly over or underrepresented, as we can see
in Figure 6. In the case of the human group, the overrep-
resented motif type 5 (with ˜Z>0.4, the normalized version
˜Z ≡ Zi
i )) is indeed closed triangles, consistent with
the relatively high clustering tendencies in the party net-

Σi(Z 2

(cid:113)

Type 1Type 2Type 3Type 4Type 5Type 6Type 7Type 8Type 9Type 10Type 11Type 12Type 13(a)(b)BotHuman      28%26%32%29%Party91%92%Friendship      21%20%30%20%Trade83%26%23%Whisper100%23%18%Mail76%95%Shop(c)-1.0-0.8-0.6-0.4-0.20.00.20.40.60.81.012345678910111213Motif typesNormalized Z-scoreBot (Party)Bot (Trade)Human (Party)Human (Trade)work.
In the case of the game bot group, the overrepre-
sented motif type 13 shows the fact that there is a large gap
between the number of motifs observed in the network and
the expected number of motifs in the randomized network.
This reﬂects the fact that game bots have their own group
for helping and trading with each other.

4.1.7 Network overlap

To determine how pairwise networks are correlated, we
studied the network similarities between the game bot and
human groups. For example, two networks can show similar
clustering values, and yet this does not guarantee at all that
nodes connected in one network are connected in another,
or that the nodes show similar levels of activity. Thus, we
consider here two measures of network overlap. The ﬁrst
is the link overlap between two networks quantiﬁed by the
Jaccard coeﬃcient. The second is the degree overlap given
by the Pearson correlation coeﬃcient between node degrees
in network pairs. The results of link and degree overlap for
ten network pairs of the game bot and human groups are
given in Figure 7. By examining the link overlap (Figure 7
(a)), we found that the game bot group has higher Jaccard
coeﬃcient in the party-friendship and party-trade pairwise
networks. This is a result of the fact that the main activities
of game bots are party play and trading items. The friend
list oﬀers convenience to a game bot when it wants to form
a party group. Game bots gather game money and items
collected through party play in an account by trading. Then
the account that collects the cyber assets changes the game
money and items to real money.

Node degree overlap (Figure 7 (b)) is another way of see-
ing the connection between interactions: here, for instance,
the party-trade pairwise networks of the human group show
a positive Pearson correlation coeﬃcient value that exceeds
0.7, which can be understood by the fact that a party activ-
ity, being above all the favorite way of engaging in battles
or hunting, often concludes with members trading booties.
In contrast, the Pearson correlation coeﬃcient values of the
game bot group are extremely low because game bots main-
tain relationships with a small number of other game bots.

4.2 Game bot detection

We took a discriminative approach to learning the dis-
tinction between game bots and human users in order to
detect the game bot and build automatic classiﬁers that
can automatically recognize the distinction. We divided
the dataset into training and test sets, built the classiﬁers
through the training dataset, and evaluated the trained clas-
siﬁers through the test dataset. In addition, we performed
10-fold cross-validation to avoid classiﬁers from being over-
ﬁtted to the test data. Cross-validation generalizes the clas-
siﬁer trained by the test data to the validation data. 10-fold
cross-validation divides the dataset into ten groups, trains
the learning model with randomly selected nine groups, and
veriﬁes the classiﬁers from the model with one group. These
training and validation processes are repeated ten times.

4.2.1 Feature selection

We compared the bot detection results from our model
with the banned account list provided by the game company
in order to evaluate the proposed framework upon running
our detection method of selected features. We conducted
feature selection with the best ﬁrst, greedy stepwise, and in-

Figure 7: Pairwise network overlap indicates simi-
larity or dependence between interactions. (a) Link
overlap. The game bot group has higher Jaccard
coeﬃcient in the party-friendship and party-trade
pairwise networks. (b) Node overlap that quantiﬁes
the node degree overlap between diﬀerent networks.
The human group has high degree overlap between
0.4 and 0.7, whereas the game bot group has degree
overlap lower than 0.2 in all networks.

formation gain ranking ﬁlter algorithms in advance in order
to improve the selection process. Feature Set1 consists of all
the features (114) mentioned in section 3. Feature Set2 is
composed of the top 62 features extracted by the informa-
tion gain ranking ﬁlter algorithm. Feature Set3 is comprised
of the six features selected by the best ﬁrst and greedy step-
wise algorithms. Figure 8 shows the classiﬁcation results
using these three feature sets. Feature Set3 presents lower
performance than Feature Set1 and Feature Set2. In com-
parison, Feature Set2 has almost the same performance as
Feature Set1, although the number of Feature Set2 is barely
half that of Feature Set1. Thus, we ﬁnally selected Fea-
ture Set2 for game bot detection.

4.2.2 Classiﬁcation and evaluation

The results of the users’ behavioral pattern analysis for
game bot detection are listed in Table 5. The four classi-
ﬁers used as training algorithms—decision tree, random for-
est, logistic regression, and na¨ıve Bayes—are tested on Fea-
ture Set2. The performances are listed in terms of overall
accuracy, precision, recall, and F-measure. Random forest

0.000.020.040.060.080.10Trade - MailFriendship - TradeParty - TradeParty - WhisperParty - FriendshipFriendship - MailTrade - WhisperFriendship - WhisperMail - WhisperParty - Mail(a) Link overlapJaccard CoefficientBotHuman-0.10.00.10.20.30.40.50.60.7Party - TradeFriendship - TradeParty - FriendshipTrade - MailParty - WhisperTrade - WhisperParty - MailFriendship - MailMail - WhisperFriendship - Whisper(b) Node ovelapPearson Correlation CoefficientBotHumanFigure 8: Performance comparison of feature sets.
Feature Set2 has as high performance as Fea-
ture Set1.

outperforms the other models. Its overall accuracy, preci-
sion value, recall value, and F-measure with emphasis on
precision (α = 0.9) are 0.961, 0.956, 0.742, and 0.929, re-
spectively. As can be seen, the recall value is slightly low.
We analyzed the characteristics of true positive, false posi-
tive, false negative, and true negative cases to inquire into
the cause of this phenomenon.

The random forest technique is a well-known ensemble
learning method for classiﬁcation and it constructs multiple
decision trees in its training phase to overcome the decision
tree’s overﬁtting problem. The random forest learning is
also robust when training with imbalanced data set. It is
also useful when training large data with a lot of features.
Our data set consists of 85% of human players and 15% of
game bots—so it is considered as an imbalanced and large
data set—and random forests perform well in that context
given that the context meets the settings in which random
forests are to perform ideally.

Na¨ıve Bayes showed the lowest performance among four
classiﬁers, and that is probably because of its nature as a
generative model that requires independence of features. Al-
though we performed feature selection, still there are correla-
tions between selected features used in our experiment. For
example, obtaining items count, earning exp points count,
harvesting items max count, party eccentricity, play time and
obtaining items ratio are less signiﬁcant features. However,
those features are also naturally correlated and they can-
not be easily separated because they are all related to es-
sential game behaviors (hunting, harvesting, collaboration,
etc., which are all related to high level process). Indeed, such
hypothesis is conﬁrmed by removing those features, bring-
ing the performance of the na¨ıve Bayes on par with other
algorithms.

Figure 9 shows the relative similarities and diﬀerences of
the classiﬁcation evaluation outcomes (classes): true pos-
itive, false positive, false negative, and true negative. To
obtain the relative similarity, we normalize all classes by the
lowest class value, thus comparing outcomes relatively. Such
normalization would bring the lowest class in the evaluation
to one. For each class other than the lowest, we calculated
the ratio by dividing the values of the other classes by the
value of the lowest class. The pattern of the relative similar-
ity is consistent for most features and classes, with the excep-
tion of the “mail between centrality” and “mail outdegree”

Figure 9: Comparison of four cases: true-positive,
false-positive, false-negative, and true-negative. The
ratios of false-positive cases are exceedingly similar
to those of true-positive cases. The ratios of false-
negative cases are similar to those of true-negative
cases.

features. It is highly probable that game bots had not been
detected yet in the case of false negatives. This also implies
that human users temporarily employed a game bot in the
case of false positives. To conﬁrm this observation, we an-
alyzed the case of false positives weekly and ﬁnally found
harvesting and party play game bots.

5. CONCLUSIONS

We proposed a multimodal framework for detecting game
bots in order to reduce damage to online game service providers
and legitimate users. We observed the behavioral character-
istics of game bots and found several unique and discrimina-
tive characteristics. We found that game bots execute repet-
itive tasks associated with earning unfair proﬁts, they do not
enjoy socializing with other players, are connected among
themselves and exchange cyber assets with each other. In-
terestingly, some game bots use the mail function to collect
cyber assets. We utilized those observations to build dis-
criminative features. We evaluated the performance of the

lll0.700.750.800.850.900.951.00Feature_Set1Feature_Set2Feature_Set3lPrecisionRecallF−measure (0.9)*obtaining_items_ratioavg_party-play_timebeing_killed_by_npc_countsocial_diversityguild_activities*play_timeparty_closeness_centralityearning_pk_points_ratioparty_pagerank*party_eccentricityfriendship_closeness_centrality*harvesting_items_max_countfriendship_pagerankfriendship_eccentricity*earning_exp_points_countwhisper_closeness_centralityfriendship_CCwhisper_eccentricity*obtaining_items_countwhisper_weighted_indegreemail_out_degreefriendship_authoritywhisper_hubfriendship_hubparty_weighted_indegreeparty_weighted_outdegreefriendship_weighted_indegreefriendship_in_degreesitting_countfriendship_weighted_degreefriendship_degreefriendship_weighted_outdegreefriendship_out_degreewhisper_out_degreeparty_authoritywhisper_weighted_outdegreeparty_out_degreeusing_portal_countparty_between_centralityparty_hubfriendship_between_centralityparty_in_degreemail_between_centralitywhisper_between_centralityfriendship_eigenvector01020304050ratio (times)Bot->Bot (TP)Human->Bot (FP)Bot->Human (FN)Human->Human (TN)proposed framework based on highly accurate ground truth
– resulting from the banning of bots by the game company.
The results showed that the framework can achieve detec-
tion accuracy of 0.961. Nonetheless, we should consider that
the banned list does not include every game bot.

The game company imposes a penalty point on an account
that performs abnormal activities, and eventually blocks the
account when its cumulative penalty score is quite high.
Some game bots can evade the penalty scoring system of
the game companies. Hence, the actions of a player are
more important than whether the player is banned or not,
and we concede that a player is a game bot when the player’s
actions are abnormal. We focused on those user behavioral
patterns that reﬂect user status to interpret the false posi-
tive cases, and hypothesize that they are game bots not yet
blocked, and false negative cases are human users occasion-
ally employing a game bot. Although diﬀerent from those
in the banned list, they behave in the same pattern. We be-
lieve that our detection model is more robust by relying on
multiple classes of features, and its analyses promise further
interesting directions in understanding game bot and their
detection.

6. ACKNOWLEDGEMENTS

This research was supported by Basic Science Research
Program through the National Research Foundation of Ko-
rea (NRF) funded by the Ministry of Science, ICT & Future
Planning (2014R1A1A1006228).

7. REFERENCES
[1] Ahmad, M. A., Keegan, B., Srivastava, J.,

Williams, D., and Contractor, N. Mining for gold
farmers: Automatic detection of deviant players in
MMOGs. In Computational Science and Engineering,
2009. CSE’09. International Conference on (2009),
vol. 4, IEEE, pp. 340–345.

[2] Chen, K.-T., and Hong, L.-W. User identiﬁcation
based on game-play activity patterns. In Proceedings
of the 6th ACM SIGCOMM workshop on Network and
system support for games (2007), ACM, pp. 7–12.
[3] Chung, Y., Park, C.-y., Kim, N.-r., Cho, H.,
Yoon, T., Lee, H., and Lee, J.-H. Game bot
detection approach based on behavior analysis and
consideration of various play styles. ETRI Journal 35,
6 (2013), 1058–1067.

[4] Itsuki, H., Takeuchi, A., Fujita, A., and

Matsubara, H. Exploiting MMORPG log data
toward eﬃcient rmt player detection. In Proceedings of
the 7th International Conference on Advances in
Computer Entertainment Technology (2010), ACM,
pp. 118–119.

[5] Jeong, S. H., Kang, A. R., and Kim, H. K.

Analysis of game bot’s behavioral characteristics in
social interaction networks of MMORPG. In
Proceedings of the 2015 ACM Conference on Special
Interest Group on Data Communication (2015), ACM,
pp. 99–100.

[6] Kang, A. R., Kim, H. K., and Woo, J. Chatting
pattern based game bot detection: Do they talk like
us? TIIS 6, 11 (2012), 2866–2879.

[7] Kang, A. R., Woo, J., Park, J., and Kim, H. K.
Online game bot detection based on party-play log

analysis. Computers & Mathematics with Applications
65, 9 (2013), 1384–1395.

[8] Kwon, H., and Kim, H. K. Self-similarity based bot
detection system in MMORPG. In Proceedings of the
3th International Conference on Internet (2011),
pp. 477–481.

[9] Kwon, H., Woo, K., Kim, H.-c., Kim, C.-k., and
Kim, H. K. Surgical strike: A novel approach to
minimize collateral damage to game bot detection. In
Proceedings of Annual Workshop on Network and
Systems Support for Games (2013), IEEE Press,
pp. 1–2.

[10] Lee, E., Woo, J., Kim, H., Mohaisen, A., and

Kim, H. K. You are a game bot!: Uncovering game
bots in MMORPGs via self-similarity in the wild.
NDSS.

[11] Lee, J., Lim, J., Cho, W., and Kim, H. K. In-game
action sequence analysis for game bot detection on the
big data analysis platform. In Proceedings of the 18th
Asia Paciﬁc Symposium on Intelligent and
Evolutionary Systems-Volume 2 (2015), Springer,
pp. 403–414.

[12] Mitterhofer, S., Kruegel, C., Kirda, E., and
Platzer, C. Server-side bot detection in massively
multiplayer online games. IEEE Security & Privacy, 3
(2009), 29–36.

[13] Mohaisen, A., and Alrawi, O. Av-meter: An

evaluation of antivirus scans and labels. In Detection
of Intrusions and Malware, and Vulnerability
Assessment - 11th International Conference, DIMVA
2014, Egham, UK, July 10-11, 2014. Proceedings
(2014), pp. 112–131.

[14] Oh, J., Borbora, Z. H., Sharma, D., and
Srivastava, J. Bot detection based on social
interactions in MMORPGs. In Social Computing
(SocialCom), 2013 International Conference on
(2013), IEEE, pp. 536–543.

[15] Pao, H.-K., Chen, K.-T., and Chang, H.-C. Game

bot detection via avatar trajectory analysis.
Computational Intelligence and AI in Games, IEEE
Transactions on 2, 3 (2010), 162–175.

[16] Pao, H.-K., Fadlil, J., Lin, H.-Y., and Chen,
K.-T. Trajectory analysis for user veriﬁcation and
recognition. Knowledge-Based Systems 34 (2012),
81–90.

[17] Park, S.-H., Lee, J.-H., Jung, H.-W., and Bang,

S.-W. Game behavior pattern modeling for game bots
detection in MMORPG. In Proceedings of the 4th
International Conference on Uniquitous Information
Management and Communication (2010), ACM, p. 33.
[18] Platzer, C. Sequence-based bot detection in massive

multiplayer online games. In Information,
Communications and Signal Processing (ICICS) 2011
8th International Conference on (2011), IEEE,
pp. 1–5.

[19] Seo, D., and Kim, H. K. Detecting gold-farmers’
groups in MMORPG by connection information. In
Proceedings of the 3th International Conference
(2011), pp. 583–588.

[20] Son, S., Kang, A. R., Kim, H.-c., Kwon, T.,
Park, J., and Kim, H. K. Analysis of context
dependence in social interaction networks of a

massively multiplayer mnline role-playing game. PloS
one 7, 4 (2012), e33918.

[21] Thawonmas, R., and Kashifuji, Y. Detection of

MMORPG misconducts based on action frequencies,
types and time-intervals. In DMIN (2010), pp. 78–84.
[22] Thawonmas, R., Kurashige, M., and Chen, K.-T.

Detection of landmarks for clustering of online-game
players. IJVR 6, 3 (2007), 11–16.

[23] van Kesteren, M., Langevoort, J., and

Grootjen, F. A step in the right direction: Bot
detection in MMORPGs using movement analysis. In
Proc. of the 21st Belgian-Dutch Conference on
Artiﬁcial Intelligence (BNAIC 2009) (2009),
pp. 129–136.

[24] Varvello, M., and Voelker, G. M. Second life: a
social network of humans and bots. In Proceedings of
the 20th international workshop on Network and
operating systems support for digital audio and video
(2010), ACM, pp. 9–14.

[25] Woo, K., Kwon, H., Kim, H.-c., Kim, C.-k., and
Kim, H. K. What can free money tell us on the
virtual black market? ACM SIGCOMM Computer
Communication Review 41, 4 (2011), 392–393.
[26] Zhang, Z., Anada, H., Kawamoto, J., and

Sakurai, K. Detection of illegal players in massively
multiplayer online role playing game by classiﬁcation
algorithms. In Advanced Information Networking and
Applications (AINA), 2015 IEEE 29th International
Conference on (March 2015), pp. 406–413.

8. APPENDIX

Complete frequency distribution for triangular motifs is
shown in Table 6. Network diameters from 100 randomized
network versions is shown in Table 7. The network diameters
from 100 randomized network versions and a comparison
between the bots and human users is shown in Table 8.

Table 7: Network diameter for 100 random network
versions.

Party
Friendship
Trade
Whisper
Mail
Shop

mean (stdev) diameter
Bot
45.25 (5.85)
28.70 (3.85)
22.07 (1.22)
29.92 (4.41)
20.46 (1.19)
24.57 (4.97)

Human
5 (0)
10.10 (0.33)
12.87 (0.57)
6 (0)
24.33 (1.17)
39.47 (2.62)

Table 8: Diameter comparison for bot and human
users.

Party
Friendship
Trade
Whisper
Mail
Shop

mean (stdev) diameter
Bot
45.25 (5.85)
28.70 (3.85)
22.07 (1.22)
29.92 (4.41)
20.46 (1.19)
24.57 (4.97)

Human
5 (0)
10.10 (0.33)
12.87 (0.57)
6 (0)
24.33 (1.17)
39.47 (2.62)

Table 3: Deﬁnition of network measures. Network measures include degree, betweenness, closeness centrality,
and eﬃciency.

Network measures
Degree centrality

Deﬁnitions
The most intuitive notion of centrality focuses on the degree. The more edges an actor has, the more
important it is.

Betweenness centrality Counts the number of shortest paths between two nodes on which a given actor resides.
Closeness centrality

Eigenvector centrality

Eccentricity

Authority
Hub
PageRank

Clustering coeﬃcient

An actor is considered important if it is relatively close to all other actors. Closeness is based on the inverse
of the distance of each actor to every other actor in the network.
Indicates that a given node has a relationship with other valuable nodes. A high eigenvector value for an
actor means that a node has several neighbors with high eigenvector values.
The eccentricity of node v is calculated by computing the shortest path between node v and all other nodes
in the graph; then the longest shortest path is chosen.
Exhibits a node pointed to by many good hubs.
Exhibits a node that points to many good authorities.
Assigns a numerical weight to each element of a hyperlinked set of documents, such as the World Wide
Web, with the purpose of “measuring” its relative importance within the set.
Quantiﬁes how close neighbors are to being a clique. A clique is a subset of all of the edges connecting
pairs of vertices of an undirected graph.

Table 4: Basic network characteristics of six interaction networks. The average degree of all interaction
networks of the human group is higher than that of the game bot group. This shows that game bots do not
enjoy socializing with other users.

Nodes
Edges
Avg. degree
Network diam.
Avg. C.C.
Avg. path len.

Trade

Whisper

Friendship

Party
Bot Human Bot Human Bot Human Bot Human
16209
1756
248133
2463
15.31
1.4
12
22
0.05
0.1
3.65
6.14

33924
862021
25.41
15
0.07
3.77

24628
174626
7.09
15
0.09
4.7

30640
162236
5.29
18
0.08
5.41

4003
9809
2.45
25
0.41
5.66

479
749
1.56
9
0.07
2.18

434
656
1.51
23
0.01
6.41

Mail
Bot
4848
12873
2.66
9
0.12
2.16

Shop
Human Bot Human
7001
305
11824
362
1.7
1.19
28
5
0.01
0.12
8.14
1.58

28362
76844
2.71
24
0.19
7.55

Classiﬁer

Table 5: Precision, recall, and F-measure (0.9) ratios for each classiﬁer. The random forest model employs
the highest performance with overall accuracy rate of 0.961.
Overall
Accuracy
0.955
0.961
0.955
0.948

Human
Precision Recall F-Meas.(0.9) Precision Recall F-Meas.(0.9)
0.89
0.929
0.918
0.845

Decision Tree
Random Forest
Logistic Regression
Na¨ıve Bayes

0.911
0.956
0.95
0.859

0.963
0.964
0.96
0.962

0.737
0.742
0.705
0.734

0.989
0.995
0.994
0.981

0.96
0.961
0.956
0.96

Bot

Party
Bot
15.04
25.61
9.6
27.89
1.56
0.41
3.22
0.44
0.14
12.94
0.69
1.32
1.14

Type 1
Type 2
Type 3
Type 4
Type 5
Type 6
Type 7
Type 8
Type 9
Type 10
Type 11
Type 12
Type 13

Table 6: Multimodal characteristics of the online game.
Friendship

Whisper

Trade

Mail

Shop

Human Bot

Human Bot

Human Bot

Human Bot

Human Bot

17.78
29.46
6.43
32.48
1.51
0.18
0.91
0.24
0.16
10.37
0.29
0.15
0.04

0.16
0.13
1.39
0.1
0.00
0.00
90.86
0.00
0.00
1.1
0.00
0.16
6.1

0.56
0.15
2.95
0.10
0.00
0.00
91.98
0.00
0.00
3.01
0.01
0.06
1.17

11.52
11.94
19.56
6.96
0.85
0.94
20.61
1.07
0.12
15.98
1.07
4.47
4.92

17.81
30.03
12.41
20.48
0.33
0.17
3.16
0.27
0.06
14.4
0.2
0.47
0.21

82.66
2.15
10.21
1.39
0.02
0.02
1.94
0.01
0.00
1.5
0.02
0.03
0.04

11.64
8.54
23.22
7.95
0.18
0.14
25.9
0.14
0.01
21.38
0.15
0.42
0.32

99.54
0.05
0.05
0.2
0.05
0.00
0.03
0.00
0.00
0.06
0.02
0.00
0.00

17.43
22.79
18.43
13.21
1.68
0.97
5.75
0.95
0.19
15.57
0.84
1.63
0.56

16.71
4.38
0.78
76.17
0.74
0.08
0.72
0.04
0.00
0.24
0.12
0.02
0.00

Human
2.49
2.37
0.03
94.99
0.1
0.00
0.00
0.00
0.00
0.01
0.00
0.00
0.00

