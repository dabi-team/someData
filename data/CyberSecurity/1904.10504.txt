Understanding the efﬁcacy, reliability and resiliency of computer vision
techniques for malware detection and future research directions

Li Chen
Data/Research Scientist, Security and Privacy Lab, Intel Labs

9
1
0
2

r
p
A
3

]

R
C
.
s
c
[

1
v
4
0
5
0
1
.
4
0
9
1
:
v
i
X
r
a

Abstract

My research lies in the intersection of security and ma-
chine learning. This overview summarizes one component
of my research: combining computer vision with malware
I will
exploit detection for enhanced security solutions.
present the perspectives of efﬁcacy, reliability and resiliency
to formulate threat detection as computer vision problems
and develop state-of-the-art image-based malware classiﬁ-
cation. Representing malware binary as images provides a
direct visualization of data samples, reduces the efforts for
feature extraction, and consumes the whole binary for holis-
tic structural analysis. Employing transfer learning of deep
neural networks effective for large scale image classiﬁca-
tion to malware classiﬁcation demonstrates superior clas-
siﬁcation efﬁcacy compared with classical machine learn-
ing algorithms. To enhance reliability of these vision-based
malware detectors, interpretation frameworks can be con-
structed on the malware visual representations and useful
for extracting faithful explanation, so that security practi-
tioners have conﬁdence in the model before deployment. In
cyber-security applications, we should always assume that
a malware writer constantly modiﬁes code to bypass detec-
tion. Addressing the resiliency of the malware detectors is
equivalently important as efﬁcacy and reliability. Via un-
derstanding the attack surfaces of machine learning models
used for malware detection, we can greatly improve the ro-
bustness of the algorithms to combat malware adversaries
in the wild. Finally I will discuss future research directions
worth pursuing in this research community.

My research explores and addresses the current gaps
within the intersection of security and artiﬁcial intelligence.
In this paper I will provide an overview on extending the
advances in computer vision research to better effectively
detect malware.

As the diversity and volume of malware continue to in-
crease rapidly, intelligent algorithms are in high demand to
effectively detect malware. Two main approaches for mal-
ware detection are static code analysis and dynamic code
analysis. Static code analysis dissembles the code and dis-

covers malicious patterns in the control ﬂow executable
without executing the applications or monitoring their run
time behaviors. Although it is fast, static analysis is not ef-
fective against obfuscated code or morphed malware whose
malicious signature may not exist in the known malware
signature database. Dynamic code analysis executes the
code to reveal run-time behaviors and persists more effec-
tiveness against packed or encrypted code, but it can con-
sume more time and still miss detection if triggering condi-
tions are not met.

What follows is heavy emphasis on excellent feature
construction including binning the type of function calls,
counting the number of loops, and applying language pro-
cessing techniques on either the disassembled code or the
run-time sequence calls. The extracted features can be very
high-dimensional, so dimension reduction methods such as
principal component analysis or multi-dimensional scaling
are needed due to the curse of dimensionality. However
drawbacks remain, as feature extraction does not compre-
hend the overall structural information of the malware and
selecting the right dimension for dimension reduction is
also proven to be difﬁcult.

Computer vision, on the other hand, provides a unique
perspective for malware detection without dissembling the
code, executing the code or extracting the features. A mal-
ware binary can be directly converted to pixel values be-
tween 0 and 255 [6, 5, 9, 2, 1]. By visual inspection of
application binaries plotted as grey-scale images: there ex-
ists textural and structural similarities among malware from
the same family and dissimilarities between malware and
benignware as well as across different malware families.

How we can adequately utilize the vision-driven infor-
mation encourages further exploration and investigation of
merging advances in computer with malware exploit detec-
tion. Here I will explain my research in this domain via
three perspectives, namely (i) efﬁcacy, (ii) reliability and
(iii) resiliency.

1. Efﬁcacy

The vision-based approach for malware classiﬁcation
consumes the structural and textural information of mal-

1

 
 
 
 
 
 
ware or benign applications as a whole, when the binaries
are directly converted to pixel values between 0 and 255.
Such an approach provides a visualization on the abstract
malware samples.

In [1], I propose deep transfer learning for static malware
classiﬁcation, where I augment the grey-scale malware im-
ages into RGB-channels, and apply transfer learning on the
malware dataset. The pre-trained deep neural networks such
as Inception, VGG or ResNet are obtained from natural im-
ages from ImageNet database, so that the models contain
signiﬁcant amount of learned features from large quantities
of images. Transfer learning from the natural image do-
main to the malware image target domain minimizes the ef-
forts to search for the optimal neural network architecture or
the best parameter sets, accelerates the training time on the
malware dataset, while still maintaining high classiﬁcation
accuracy and false positive rate.

In all the real data experiments in [1], the proposed
method outperforms with the highest classiﬁcation accu-
racy, lowest false positive rate, highest true positive rate
and highest F1 score compared with all other selected clas-
sical machine learning algorithms such as shallow fully
connected neural networks (shallow NN), naive Bayes,
5-nearest neighbor (5NN),
linear discriminant analysis
(LDA), random forest, XGB, support vector machine with
linear kernel (SVM-linear), support vector machine with
radial kernel (SVM-radial), and also outperforms training-
from-scratch scheme. A performance table is presented in
Table 1.

Furthermore we extend deep transfer learning for dy-
namic exploit detection [2], where we convert the control
ﬂow packets generated from Intel Processor Trace into time
series of images, propose a hierarchical ensemble neural
network (HeNet) via deep transfer learning for dynamic
return-oriented-programming attacks and show its highest
classiﬁcation accuracy with lowest false positive rate com-
pared with commonly used machine learning algorithms
such as random forest, nearest neighbor, naive Bayes. In-
deed, vision-based transfer learning techniques on malware
images not only save tremendous efforts for manual feature
engineering, but also possess superior performance for mal-
ware classiﬁcation tasks.

2. Reliability

Despite the effectiveness of the computer vision based
methods for malware classiﬁcation, understanding the rea-
son why the image-based transfer learning methods makes
such predictions on the malware images is critical for secu-
rity researchers and practitioners. The interpretations will
generate valuable insights to triage malware families and
enhance the practitioners’ trust to the model. Hence an ef-
fective model for deployment need not only the best classi-
ﬁcation performance but also the best reliability from being

Algorithm
Proposed method
TFS via shallow NN
Naive Bayes
5-nearest neighbor
LDA ◦ PCA
Random forest◦ PCA
XGB ◦ PCA
SVM-linear◦ PCA
SVM-radial◦ PCA

T P R
F P R
Accuracy
98.13% 0.237% 96.63%
2.551% 59.38%
82.41%
3.116% 73.06%
74.23%
0.602% 85.75%
95.31%
3.023% 63.86%
76.45%
0.548% 84.26%
95.73%
0.514% 85.80%
96.01%
1.799% 72.71%
86.35%
1.975% 72.14%
86.26%

Table 1. Comparison of algorithm performance on Microsoft Mal-
ware Dataset 2015[8]. The proposed method in [1] achieves the
highest classiﬁcation accuracy, highest average true positive rate
and lowest false positive rate.

able to explain its predictions.

In [1], I propose to extend the local-interpretable model-
agnostic explanation approach [7] to identify which regions
in the malware binary contribute to prediction by the neu-
ral networks. An example is seen in Figure 1. Such inter-
pretability highlights the advantage of approaching the mal-
ware problem from computer vision direction, so that inter-
pretation becomes concrete as to indicate the actual loca-
tions of potential malicious signals. Security practitioners,
based on the algorithmic interpretation ﬁnding, can check
the code and verify whether the ML-identiﬁed locations
contain the malicious signatures unique to certain families.
This direction provides one step closer to uncover reason-
ing behind black-box deep learning algorithms for malware
detection.

3. Resiliency

There are always adversaries who intentionally want to
bypass malware detection. The importance of studying the
attack surface of machine learning algorithms for malware
detection helps improve the security and resiliency of the
malware detection systems.

In a case study [3],we examine the robustness and re-
siliency of machine learning based ransomware detection
systems. Speciﬁcally we propose to synthesize dynamic
ransomware behaviors via the auxiliary generative adver-
sarial network (AC-GAN) and demonstrate that the gener-
ated malicious behaviors can greatly reduce the efﬁcacy of
black-box ransomware classiﬁers.

GANs are primarily used in computer vision to gener-
ate natural images that seem real to the human eyes and
their training process can be terminated when the gener-
ated images resemble the real ones. However, the inputs
in our case study are dynamic ransomware execution logs,
so we modify the training termination criterion based on the
loss function of the discriminator. To avoid mode collaps-

FPR Adv. Dec

4. Future Research Directions

0.0300
0.0032
0.0494
0.0432
0.0228

Accuracy
0.9890
0.9841
0.9865
0.9881
0.9897

Classiﬁer
Text-CNN
XGB ◦ Text-CNN
LDA ◦ Text-CNN
SVM-linear ◦ Text-CNN
SVM-radial ◦ Text-CNN

0.0000
0.1273
0.0000
0.0000
1.0000
Table 2. Classiﬁcation performance on the test set. Text-CNN
achieves the best classiﬁcation performance on the raw ran-
somware behavior dataset. After composing with Text-CNN, all
other classiﬁers’ performance signiﬁcantly improve. Detection re-
sults on the generated malicious samples show four of the ﬁve
highly effective classiﬁers degrade severely in performance and
only one classiﬁer maintains resiliency against attacks. This quan-
tiﬁes the attack surface for these ML-based ransomware detection
algorithms.

ing issues in training, we segment the trace logs and employ
transfer learning from GANs applied on natural images to
enable faster convergence and better quality sample gener-
ation. We further propose a set of adversarial quality met-
rics to quantify the generalized maliciousness in the gener-
ated dataset. Our discoveries indicate a broad attack surface
on even black-box ML-based malware detectors and advo-
cates adversarial training to enhance the robustness of the
system. The case study emphasizes another critical vector
for security-based machine learning usage: how to establish
model resiliency to defend against carefully crafted adver-
sarial malware attacks.

Figure 1. Visual interpretation of what image-based malware clas-
siﬁer sees. The red regions indicate the pixel regions which the
model does not believe they contribute to the prediction. Most
area are plotted as green. On the other hand, the top 5-th predic-
tion is Lolyda.AA3, and most of the regions are red, indicating the
model sees the least of Lolyda.AA3 family in this malware image.

The recent advances of computer vision motivate novel
cybersecurity measures. Below are a few research direc-
tions worth considering within this research community.

• Semi-supervised learning Semi-supervised algo-
rithms are greatly desired to ﬁt the practical challenges
of data without ground truths or evolving malware
families. We previously proposed model-based semi-
supervised learning for dynamic Android malware de-
tection [4]. Extending the model-based approach to
image-based malware samples can be valuable to ad-
dress the issues mentioned above.

• Interpretability We will continue the study of inter-
pretability and explainability of deep learning models
for image-based malware detection. We plan to inves-
tigate the schemes of establishing an overall trustwor-
thy score for the deep learning model and use such
a score for model selection for deployment in cyber-
security applications.

References

[1] L. Chen. Deep transfer learning for static malware classiﬁca-

tion. arXiv preprint arXiv:1812.07606, 2018. 1, 2

[2] L. Chen, S. Sultana, and R. Sahita. Henet: A deep learning
approach on intel R(cid:13) processor trace for effective exploit de-
tection. IEEE Symposium on Security and Privacy Workshop.
arXiv preprint arXiv:1801.02318, 2018. 1, 2

[3] L. Chen, C.-Y. Yang, A. Paul, and R. Sahita. Towards resilient
machine learning for ransomware detection. arXiv preprint
arXiv:1812.09400, 2018. 2

[4] L. Chen, M. Zhang, C.-y. Yang, and R. Sahita. Poster: Semi-
supervised classiﬁcation for dynamic android malware detec-
tion. In Proceedings of the 2017 ACM SIGSAC Conference on
Computer and Communications Security, pages 2479–2481.
ACM, 2017. 3

[5] A. Makandar and A. Patrot. Malware image analysis and clas-
siﬁcation using support vector machine. International Journal
of Trends in Computer Science and Engineering, 4(5):01–03,
2015. 1

[6] L. Nataraj, S. Karthikeyan, G. Jacob, and B. Manjunath. Mal-
ware images: visualization and automatic classiﬁcation.
In
Proceedings of the 8th international symposium on visualiza-
tion for cyber security, page 4. ACM, 2011. 1

[7] M. T. Ribeiro, S. Singh, and C. Guestrin. Why should i trust
In Pro-
you?: Explaining the predictions of any classiﬁer.
ceedings of the 22nd ACM SIGKDD international conference
on knowledge discovery and data mining, pages 1135–1144.
ACM, 2016. 2

[8] R. Ronen, M. Radu, C. Feuerstein, E. Yom-Tov, and M. Ah-
arXiv

madi. Microsoft malware classiﬁcation challenge.
preprint arXiv:1802.10135, 2018. 2

[9] S. Yue.

Imbalanced malware images classiﬁcation: a cnn

based approach. arXiv preprint arXiv:1708.08042, 2017. 1

