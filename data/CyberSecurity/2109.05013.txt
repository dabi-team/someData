ACCEPTED AND TO APPEAR IN IEEE GLOBECOM 2021

1

PWPAE: An Ensemble Framework for Concept
Drift Adaptation in IoT Data Streams

Li Yang, Dimitrios Michael Manias, and Abdallah Shami
Western University, London, Ontario, Canada
e-mails: {lyang339, dmanias3, abdallah.shami}@uwo.ca

1
2
0
2

p
e
S
0
1

]

G
L
.
s
c
[

1
v
3
1
0
5
0
.
9
0
1
2
:
v
i
X
r
a

Abstract—As the number of Internet of Things (IoT) devices
and systems have surged, IoT data analytics techniques have
been developed to detect malicious cyber-attacks and secure IoT
systems; however, concept drift issues often occur in IoT data
analytics, as IoT data is often dynamic data streams that change
over time, causing model degradation and attack detection
failure. This is because traditional data analytics models are
static models that cannot adapt to data distribution changes.
In this paper, we propose a Performance Weighted Probability
Averaging Ensemble (PWPAE) framework for drift adaptive
IoT anomaly detection through IoT data stream analytics.
Experiments on two public datasets show the effectiveness of
our proposed PWPAE method compared against state-of-the-art
methods.

Index Terms—IoT, Data Streams, Concept Drift, ADWIN,

Online Learning, Ensemble Learning

I. INTRODUCTION
With the rapid development of the Internet of Things
(IoT), IoT devices have provided numerous new capabilities
and services to people. The IoT has been applied to many
areas of daily life, including smart cities, smart homes, smart
cars, intelligent transportation systems (ITS), smart healthcare,
smart agriculture, and so on [1] - [3]. It is estimated that
one trillion devices or IP addresses will be connected to IoT
networks by 2022 [1].

Despite the various new functionalities provided by IoT
devices,
the deployment of IoT devices has led to many
security risks [4]. Current IoT systems are vulnerable to most
existing cyber-threats, since many IoT device manufacturers
prioritize low-cost and technical functionalities over security
mechanisms. In 2018, cyber-attacks against IoT devices in-
creased by 215.7% [4]. Various types of common network
attacks, like distributed denial of service (DDoS), botnets, and
phishing attacks, can be launched in IoT systems [5] - [7].
These threats affect both IoT devices and the entire internet
ecosystem, since a single cyber-attack may cause a large-scale
IoT system failure.

IoT trafﬁc analysis has been widely used in IoT systems to
detect compromised IoT devices and malicious cyber-attacks
[8] - [12]. The behaviors of IoT devices and can be classiﬁed
as normal or abnormal by supervised machine learning (ML)
algorithms based on the characteristics of IoT trafﬁc data
[13]. However, real-world IoT trafﬁc data is usually dynamic
data streams that are generated continuously in non-stationary
IoT environments. Moreover, the changing behaviors of IoT
attacks make it difﬁcult to adapt to the ever-changing en-
vironments. Hence, the underlying distribution of the IoT

Fig. 1. The architecture of IoT data stream analytics.

trafﬁc data often changes unpredictably over time, known
as concept drift [15] [16]. Traditional static ML models are
often incapable of reacting to data distribution changes. These
changes can have a direct impact on the model prediction
performance since the patterns in the trained ML models will
become invalid in future predictions. Effective ML-based IoT
anomaly detection systems should have the adaptability to
self-calibrate to the new concepts and cyber-attack patterns
to ensure robustness [15].

In this work, a drift adaptive framework, named Perfor-
mance Weighted Probability Averaging Ensemble (PWPAE)
framework, is proposed for effective IoT anomaly detection1.
This framework can be deployed on IoT cloud servers to
process the big data streams transmitted from the IoT end
devices through wireless communication strategies, as shown
in Fig. 1. The proposed framework is an ensemble learning
framework that uses the combinations of two popular drift
detection methods, adaptive windowing (ADWIN) [17] and
drift detection method (DDM) [18], and two state-of-the-
art drift adaptation methods, adaptive random forest (ARF)
[19] and streaming random patches (SRP) [20], to construct
base learners. The base learners are weighted according to
their real-time performance and integrated to construct a
robust anomaly detection ensemble model with improved drift
adaptation performance.

The main contributions of this paper are as follows:
1) It investigates concept drift adaptation methods.

1code

available
Concept-Drift-Detection-and-Adaptation

is

at: https://github.com/Western-OC2-Lab/PWPAE-

 
 
 
 
 
 
ACCEPTED AND TO APPEAR IN IEEE GLOBECOM 2021

2

2) It proposes a novel drift adaptation method named PW-
PAE to address the performance limitations of current
concept drift methods.

3) It evaluates the proposed PWPAE framework on two
public IoT cyber-security datasets, IoTID20 [5] and
CICIDS2017 [21], for IoT anomaly detection use cases.
The remainder of this paper is organized as follows: Section
II provides a literature review of state-of-the-art IoT anomaly
detection and concept drift adaptation methods. Section III
describes the proposed PWPAE drift adaptation framework.
Section IV presents and discusses the experimental results.
Section V concludes the paper.

II. RELATED WORK

In this section, we review existing works on IoT trafﬁc anal-
ysis and summarize the state-of-the-art concept drift detection
and adaptation methods.

A. IoT Trafﬁc Analysis

Several existing works focused on IoT anomaly detection
using trafﬁc data. Injadat et al. [4] proposed an optimized ML
approach that uses decision tree and Bayesian optimization
with Gaussian Process (BO-GP) algorithms to detect botnet
attacks in IoT systems. The proposed algorithm achieves
99.99% accuracy on Bot-IoT-2018 dataset. Ullah et al. [5]
proposed a novel botnet IoT dataset for IoT network anomaly
detection and evaluated the performance of seven basic ML
models on this dataset. Among the ML algorithms, the random
forest and ensemble models achieve better performance. Yang
et al. [6] proposed a tree-based stacking algorithm for network
trafﬁc analysis on the Internet of Vehicles (IoV) environments.
The proposed stacking method achieves high detection accu-
racy on the IoV and CICIDS2017 datasets.

The above methods achieve high accuracy for cyber-attack
detection in IoT systems. However, they are static ML models
designed for ofﬂine learning and do not have the adaptability
to online changes of IoT data, making them ineffective to be
deployed in real-world IoT systems.

B. Concept Drift Methods

Due to the non-stationary IoT environments, IoT streaming
data analysis often faces concept drift challenges that the data
distributions change over time. The occurrence of concept
drift issues often degrades the performance of IoT anomaly
detection models, causing severe security issues. Concept
drifts can be classiﬁed as sudden and gradual drifts, according
to the data distribution changing speed [22]. To handle concept
drift, an effective anomaly detection model should accurately
detect the drifts and quickly adapt to the detected drifts to
maintain high prediction accuracy [23].

1) Concept Drift Detection: Drift detection is the ﬁrst
procedure to handle concept drift. ADWIN and DDM are
the two most common concept drift detection techniques.
ADWIN [17] is a distribution-based method that uses an
adaptive sliding window to detect concept drift based on
data distribution changes. ADWIN identiﬁes concept drift by

calculating and analyzing the average of certain statistics over
the two sub-windows of the adaptive window. The occurrence
of concept drift is indicated by a large difference between
the averages of the two sub-windows. Once a drift point is
detected, all the old data samples before that drift time point
are discarded [23].

ADWIN can effectively detect gradual drifts since the
sliding window can be extended to a large-sized window to
identify long-term changes. However, the mean value is not
always an effective measure to characterize changes.

Drift Detection Method (DDM)

is a popular model
performance-based method that deﬁnes two thresholds, a
warning level and a drift
to monitor model’s error
level,
rate and standard deviation changes for drift detection [18].
In DDM, the occurrence of concept drift is indicated by a
signiﬁcant
increase of the sum of model’s error rate and
standard deviation. DDM is easy to implement and can
avoid unnecessary model updates since a learner will only be
updated when its performance degrades signiﬁcantly. DDM
can effectively identify sudden drift, but its response time is
often slow for gradual drifts. This is because a large number
of data samples need to be stored to reach the drift level of a
long gradual drift, causing memory overﬂows [24].

2) Concept Drift Adaptation: After drift detection, an
appropriate drift adaptation algorithm should be implemented
to deal with the detected drifts and maintain high learning per-
formance. Current drift adaptation methods can be classiﬁed
into two main categories: incremental learning methods and
ensemble methods.

Incremental learning is to learn samples one by one in
chronological order to partially update the learning model.
The Hoeffding tree (HT) is a type of decision tree (DT)
that uses the Hoeffding bound to incrementally adapt to data
streams [24]. Compared to a DT that chooses the best split,
the HT uses the Hoeffding bound to calculate the number of
necessary samples to select the split node. Thus, the HT can
update its node to adapt to newly incoming samples. However,
the HT does not have mechanisms to address speciﬁc types
of drift. The Extremely Fast Decision Tree (EFDT) [26],
also named Hoeffding Anytime Tree (HATT), is an improved
version of the HT that splits nodes as soon as it reaches the
conﬁdence level instead of detecting the best split in the HT.
This splitting strategy makes the EFDT adapt to concept drifts
more accurately than the HT, but its performance still needs
improvement.

To achieve better concept drift adaptation, ensemble learn-
ing methods have been proposed to construct robust learners
for data stream analytics. Ensemble methods can be further
classiﬁed as block-based ensembles and online ensembles
[25]. Block-based ensembles split the data streams into ﬁxed-
size blocks and train a base learner on each block. When a new
block arrives, the base learners will be evaluated and updated.
Block-based ensembles have accurate reactions to gradual
drifts, but often delay reacting to sudden drifts. Another
difﬁculty of block-based ensemble methods is to choose an
appropriate block size to achieve a trade-off between the drift
reaction speed and base learners’ learning performance [25].
Streaming Ensemble Algorithm (SEA), Accuracy Weighted

ACCEPTED AND TO APPEAR IN IEEE GLOBECOM 2021

3

Ensemble (AWE), and Accuracy Updated Ensemble (AUE)
are three common block-based ensembles [23] [27]. Among
the block-based ensembles, AUE is usually the best perform-
ing method. In AUE, all base learners are incrementally up-
dated with a portion of samples from each new chunk. More-
over, AUE assigns weights to base learners using non-linear
error functions for performance enhancement. Experimental
studies showed that the performance of AUE constructed with
HTs is better than other chunk-based ensembles, like AWE
and SEA [27].

Online ensembles aim to integrate multiple incremental
learning models, like HTs, to further improve the learning
performance. Gomes et al. [19] proposed the adaptive random
forest (ARF) algorithm that uses HTs as base learners and
ADWIN as the drift detector for each tree. Through the drift
detection process, the poor-performing base trees are replaced
by new trees to ﬁt the new concept. ARF often performs
better than many other methods since the random forest is also
a well-performing ML algorithm. Additionally, ARF has an
effective resampling technique and the adaptability to different
types of drifts. Gomes et al. [20] also proposed a novel
adaptive ensemble method named Streaming Random Patches
(SRP) for streaming data analytics. SRP combines the random
subspace and online bagging method to make predictions. SRP
uses the similar technology of ARF, but it uses the global
subspace randomization strategy, instead of the local subspace
randomization technique used by ARF. The global subspace
randomization is a more ﬂexible method that improves the
diversity of base learners. The prediction accuracy of SRP
is often slightly better than ARF, but the execution time is
often longer. Leverage bagging (LB) [28] is another popular
online ensemble that uses bootstrap samples to construct base
learners. It uses Poisson distribution to increase the data
diversity and leverage the bagging performance. LB is easy
to implement, but often performs worse than SRP and ARF.
Although there are many existing concept drift adapta-
tion methods,
they have performance limitations in terms
of prediction accuracy and drift reaction speed. Incremental
learning methods are often underperforming due to their low
model complexity and limited drift adaptability, while the drift
reaction speed and block size determination are two major
challenges for block-based ensembles. Online ensembles, like
ARF and SRP, often perform better than incremental learning
and block-based ensemble methods, but they introduce addi-
tional randomness in their model construction process due to
their randomization strategies, causing unstable learning mod-
els. Thus, this paper aims to propose a stable and robust online
ensemble model with improved drift adaptation performance.

III. PROPOSED FRAMEWORK

A. System Overview

Figure 2 provides an overview of the proposed framework
for IoT anomaly detection based on data stream analytics.
The main procedures are as follows. Firstly, incoming IoT
data streams are sampled to generate a highly-representative
subset using the k-means cluster sampling method. Secondly,
four concept drift adaptation methods (ARF-ADWIN, ARF-
DDM, SRP-ADWIN, and SRP-DDM) are constructed as the

Fig. 2. The proposed drift adaptive IoT anomaly detection framework.

base learners for initial anomaly detection and drift adaptation.
After that, an ensemble model is constructed by integrating
the prediction probabilities of the four base learners based on
the proposed PWPAE framework. Lastly, the ensemble model
is deployed and can effectively detect cyber-attacks and adapt
to concept drifts.

B. Data Pre-Processing

As IoT data streams are usually large amounts of data that
are continuously generated, using all the data samples for
learning model development is often infeasible and unnec-
essary. Thus, an effective data sampling method should be
implemented to select highly-representative data samples.

In the proposed system, the k-means-based cluster sampling
method is used to obtain a representative subset [7]. The
k-means sampling method can group the data samples into
multiple clusters and select a proportion of samples from each
cluster, as the data samples in the same cluster have similar
characteristics. Due to the large size of IoT trafﬁc datasets,
1% of the original data samples are selected by the k-means
cluster sampling method to evaluate the proposed framework.
The size of the generated subset can vary, depending on
the IoT data generation speed and the computational power
of server machines. Compared to other sampling methods,
k-means cluster sampling can generate a high-quality and
highly-representative subset because the discarded data points
are mostly redundant data.

C. Drift Adaptation Base Learner Selection

To construct a robust ensemble model, the combination of
two basic drift detection methods (ADWIN & DDM) and
two state-of-the-art drift adaptation methods (ARF & SRP)
described in Section II-B2 are used for base learners’ construc-
tion. Thus, the four base learners are ARF-ADWIN, ARF-
DDM, SRP-ADWIN, SRP-DDM. The reasons for choosing
them as base learners are as follows [23] [27]:

1) They are all online ensemble models with strong adapt-
ability to concept drift. All of them are constructed with
multiple HTs, an effective incremental learning base
model. Thus, each base learner already has a stronger

ACCEPTED AND TO APPEAR IN IEEE GLOBECOM 2021

4

data stream analysis capability than most existing drift
adaptation methods.

extremely large weight of 1/(cid:15) is given to this base learner,
as it can already make predictions perfectly.

2) ARF and SRP are both state-of-the-art drift adaptation
methods whose performance has been proven to be
better than other existing drift adaptation methods by
experimental studies in [19] [20].

3) Unlike block-based ensembles (e.g., SEA, AWE, and
AUE), ARF and SRP are both online ensembles that
do not require the tuning of data chunk sizes. Choosing
an inappropriate chunk size often results in additional
execution time or drift detection delays.

4) As described in Section II-B1, DDM works well on
sudden drift detection, while ADWIN has a stronger
ability to detect gradual drift. Using both drift detection
methods enables the proposed ensemble model to detect
both drift types effectively.

5) An effective ensemble model should ensure a high
diversity of base learners to increase the chance of
learning performance improvement; otherwise, a low di-
versity ensemble often shows very similar performance
to certain base learners. Although ARF and SRP both
use Hoeffding trees as base learners, their construction
methods are largely different (local subspace random-
ization versus global subspace randomization), which
increases the randomness and diversity in the model
construction process. Hence, a more robust ensemble
model with a high diversity can be obtained.

D. Drift Adaptation Ensemble Framework: PWPAE

In this paper, a novel ensemble strategy, named Performance
Weighted Probability Averaging Ensemble (PWPAE), is pro-
posed to integrate the base learners for IoT data stream analyt-
ics. Unlike the pre-deﬁned or static weights used by many ex-
isting ensemble techniques, PWPAE assigns dynamic weights
to base learners according to their real-time performance.
Assuming a data stream D = {(x1, y1), . . . , (xn, yn)}, and
the target variable has c different classes, y ∈ 1, . . . , c, for
each input data x, the target class estimated by PWPAE can
be denoted by:

ˆy = argmax
i∈{1,··· ,c}

(cid:80)k

j=1 wjpj (y = i | Lj, x)
k

(1)

where Lj is a base learner, k is the number of base learners,
and k = 4 in the proposed framework; pj(y = i|Lj, x)
indicates the prediction probability of a class value i on the
data sample x using the jth base learner Lj; wj is the weight
of each base learner Lj.

After each data sample is processed,

the current real-
time error rate is calculated by dividing the total number
of misclassiﬁed samples by the total number of processed
samples. The weight of each base learner, wj, is calculated
using the reciprocal of its real-time error rate, which can be
represented by:

wj =

1
Errorrt + (cid:15)

(2)

where (cid:15) is a small constant value to avoid the denominator
being equal to 0. If Errorrt → 0 for a base learner, an

The weighting function can be considered an improved
version of the weighting function in the AUE algorithm
described in Section II-B2. In the proposed PWPAE model,
the real-time error rates, instead of the mean square error rates
of data blocks used in AUE, are used to calculate the weights
of base learners for more accurate drift adaptation. Using
the real-time error rate on all processed samples enables the
ensemble model to consider the overall performance of each
base learner on a speciﬁc task. The time complexity of the
ensemble model mainly depends on the complexity of based
learners, while the time complexity of PWPAE itself is only
O(nck), where n is the number of samples, c is the number
of class values in the target variable, k is the number of base
learners, as c and k are usually small numbers.

Compared to other ensemble methods, the proposed PW-

PAE technique has the following advantages:

1) The reciprocal-based weighting function chosen in the
proposed PWPAE is an improved version of the weight-
ing function in AUE, which has been proven to outper-
form other existing ensemble methods in the experimen-
tal studies in [27], as this weight function can amplify
the weights of well-performing base learners, while also
considering other base learners.

2) Compared to the static weights used in many exist-
ing ensemble methods, the dynamic weights calculated
by the real-time error rates can be used to adjust
the importance of base learners based on their real-
time performance, which ensures that the current well-
performing base learners are given higher weights.
3) Compared to the hard majority voting of class labels
used in many existing ensembles, the prediction prob-
ability ensemble used in the proposed PWPAE is more
ﬂexible and robust, as it takes each learner’s uncertainty
into account to avoid arbitrary decisions.

Through the proposed PWPAE strategy that integrates the
four base learners (ARF-DDM, ARF-ADWIN, SRP-DDM,
and SRP-ADWIN), a strong and robust ensemble model can
be obtained for effective drift detection and adaptation in IoT
data streams analysis.

Furthermore, as ARF and SRP are the state-of-the-art well-
performing drift adaptation method, they are used to construct
the base learners in the proposed framework. In the future,
if new and better-performing drift adaptation methods are
proposed, ARF and SRP can be replaced by the new methods
to construct a better-performing ensemble model using the
same PWPAE strategy.

IV. PERFORMANCE EVALUATION

A. Experimental Setup

The proposed framework was implemented using Python
3.6 by extending the Scikit-Multiﬂow [29] framework on a
machine with an i7-8700 processor and 16 GB of memory,
representing an IoT central server machine for big data
analytics purposes.

ACCEPTED AND TO APPEAR IN IEEE GLOBECOM 2021

5

TABLE I
PERFORMANCE COMPARISON OF DRIFT ADAPTATION METHODS

Method

HT [24]
EFDT [26]
LB [28]
ARF-ADWIN [19]
ARF-DDM [19]
SRP-ADWIN [20]
SRP-DDM [20]
Proposed PWPAE

Accuracy
(%)
95.45
97.19
97.46
97.85
98.99
98.93
98.79
99.16

Precision
(%)
95.91
97.53
97.97
98.59
99.05
99.05
98.86
99.16

IoTID20 Dataset
Recall
(%)
99.42
99.55
99.36
99.13
99.89
99.83
99.87
99.96

F1 (%)

97.63
98.53
98.66
98.86
99.47
99.44
99.36
99.56

Avg Test
Time (ms)
0.3
0.3
4.3
0.9
0.6
3.4
3.1
8.3

Accuracy
(%)
91.61
95.71
98.01
98.68
98.77
98.82
98.70
99.20

F1 (%)

CICIDS2017 Dataset
Recall
(%)
81.11
87.5
93.67
95.54
96.23
95.96
96.39
97.10

Precision
(%)
73.03
87.54
94.67
96.76
96.61
97.15
96.06
98.24

76.86
87.52
94.17
96.15
96.42
96.55
96.23
97.67

Avg Test
Time (ms)
0.2
0.2
3.0
0.8
0.5
2.8
2.2
6.4

(a) IoTID20.

(b) CICIDS2017.

Fig. 3. Accuracy comparison of drift adaptation methods on two public datasets: a) IoTID20; b) CICIDS2017.

Two datasets are used to evaluate the proposed framework.
The ﬁrst dataset is the IoTID20 dataset [5] created by using the
normal and attacker IoT devices for IoT network trafﬁc data
generation. The 83 different network features were derived
from ﬂow-based and packet features for cyber-attack detec-
tion, such as ﬂow duration, the total forward and backward
packets, active and idle time, etc. The second dataset is the
CICIDS2017 dataset [21] provided by the Canadian Institute
of Cybersecurity (CIC), involving the most updated cyber-
attack scenarios. As different types of attacks were launched
in different time periods to create the CICIDS2017 dataset,
the attack patterns in the dataset change over time, causing
multiple concept drifts in the CICIDS2017 dataset.

After using the k-means clustering sampling method, a
representative IoTID20 subset that has 6,252 records and a
representative CICIDS2017 subset that has 28,303 records are
used for model evaluation. They are both highly-imbalanced
datasets with a normal/abnormal
ratio of 94%/6% and
80%/20%, respectively. This enables the model evaluation on
unbalanced datasets.

As the major purpose of anomaly detection systems is to
distinguish cyber-attacks from normal states, the used datasets
are treated as binary datasets with two labels, “normal” or
“abnormal”. Hold-out and prequential validations are used to
evaluate the proposed framework. For hold-out evaluation,
the ﬁrst 10% of the data is used for initial model training,
and the last 90% of the data is used for online testing. In
prequential validation, also called test-and-train validation,

each input sample in the online test set is ﬁrst used to test
the learning model and then used for model training/updating.
As the two used datasets are both unbalanced datasets, ﬁve
metrics, including accuracy, precision, recall, and f1-score,
and execution time, are used to evaluate the anomaly detection
performance of the proposed framework.

B. Experimental Results and Discussion

Table I and Fig. 3 show the performance comparison of the
proposed PWPAE framework with other state-of-the-art drift
adaptive approaches introduced in Section II-B2, including
ARF [19], SRP [20], HT [24], EFDT [26], and LB [28], . As
shown in Table I, the proposed PWPAE method outperforms
all other compared models in terms of accuracy, precision,
recall, and F1. As shown in Fig. 3(a), on the IoTID20 dataset,
two small drifts occurred at the early stage of the experiment,
and all the implemented methods can quickly adapt to the
drifts, although their adaptabilities are different. Among all
the methods, the proposed PWPAE framework achieves the
highest accuracy of 99.16%, while the accuracies of the
four base learners (ARF-ADWIN, ARF-DDM, SRP-ADWIN,
and SRP-DDM) are slightly lower than PWPAE (97.85% -
98.99%). The other three drift adaptation methods, HT, EFDT,
and LB, have lower accuracies and F1-scores.

For the CICIDS2017 dataset, as shown in Fig. 3(b), there
are six concept drifts that occurred in the experiments, in-
cluding both sudden drifts (drifts 1, 3, 5) and gradual drifts
(drifts 2, 4, 6). Similar to the results on the IoTID20 dataset,

ACCEPTED AND TO APPEAR IN IEEE GLOBECOM 2021

6

the proposed PWPAE and four base learners (ARF-ADWIN,
ARF-DDM, SRP-ADWIN, and SRP-DDM) can quickly adapt
to the drifts and maintain high accuracies, and PWPAE
achieves the highest accuracy of 99.20%. On the other hand,
HT, EFDT, and LB have much lower accuracies of 91.61% to
98.01%. The higher performance of four base learners when
compared with other state-of-the-art drift adaptation methods
also supports the reasons for selecting them as base learners.
For the average online prediction time for each instance
shown in Table I, although the proposed PWPAE method
requires higher time (8.3 ms and 6.4 ms on the IoTID20
and CICIDS2017 datasets, respectively) than other compared
methods, the average execution time is still at a low level
(less than 10 ms). On the other hand, despite the high
generation speed of IoT data streams, the use of k-means
cluster sampling enables the proposed PWPAE method to
maintain high accuracy on a sampled subset, so as to increase
the model learning speed and achieve real-time data analytics.
Moreover, the average execution time of the proposed PWPAE
method can be further reduced by replacing SRP with other
drift adaptation models with lower complexities if necessary.
Nevertheless, the current PWPAE method can achieve the best
accuracy and F1-score among the compared state-of-the-art
drift adaptation methods for IoT anomaly detection.

V. CONCLUSION

The rapidly developing IoT systems have brought great
convenience to human beings, but also increase the risk
of being targeted by malicious cyber-attackers. To address
this challenge, IoT anomaly detection systems have been
developed to protect IoT systems from cyber-attacks based
on the analytics of IoT data streams. However, IoT data is
often dynamic data under non-stationary and rapidly-changing
environments, causing concept drift issues. In this paper, we
propose a drift adaptive IoT anomaly detection framework,
named PWPAE, based on the ensemble of state-of-the-art drift
adaptation methods. According to the performance evaluation
on the IoTID20 and CICIDS2017 datasets that represent
the IoT trafﬁc data streams,
the proposed framework can
effectively detect IoT attacks with concept drift adaptation by
achieving high accuracies of 99.16% and 99.20% on the two
datasets, much higher than other state-of-the-art approaches.
In future work, the proposed framework can be extended
by integrating other drift adaptation methods with better
performance, diversity, and speed.

REFERENCES

[1] M. F. Elrawy, A. I. Awad, and H. F. A. Hamed, “Intrusion detection
systems for IoT-based smart environments: a survey,” J. Cloud Comput.,
vol. 7, no. 1, p. 21, 2018.

[2] H. Kim, J. Ben-Othman, L. Mokdad, and K. Lim, “CONTVERB:
Continuous Virtual Emotion Recognition Using Replaceable Barriers
for Intelligent Emotion-Based IoT Services and Applications,” IEEE
Netw., vol. 34, no. 5, pp. 269–275, 2020.

[3] H. Kim and J. Ben-Othman, “A virtual emotion detection system with
maximum cumulative accuracy in two-way enabled multi domain IoT
environment,” IEEE Commun. Lett., vol. 25, no. 6, pp. 2073–2076, 2021.
[4] M. Injadat, A. Moubayed, and A. Shami, “Detecting Botnet Attacks
in IoT Environments: An Optimized Machine Learning Approach,” in
Proc. 32th Int. Conf. Microelectron. (ICM), 2020, pp. 1–4.

[5] I. Ullah and Q. H. Mahmoud, “A Scheme for Generating a Dataset
for Anomalous Activity Detection in IoT Networks,” in Advances in
Artiﬁcial Intelligence, 2020, pp. 508–520.

[6] L. Yang, A. Moubayed, I. Hamieh, and A. Shami, “Tree-based Intel-
ligent Intrusion Detection System in Internet of Vehicles,” proc. 2019
IEEE Glob. Commun. Conf., pp. 1–6, Hawaii, USA, 2019.

[7] L. Yang, A. Moubayed, and A. Shami, “MTH-IDS: A Multi-Tiered
Hybrid Intrusion Detection System for Internet of Vehicles,” IEEE
Internet Things J., 2021.

[8] F. Salo, M. N. Injadat, A. Moubayed, A. B. Nassif, and A. Essex,
“Clustering Enabled Classiﬁcation using Ensemble Feature Selection for
Intrusion Detection,” 2019 Int. Conf. Comput. Netw. Commun. ICNC,
2019.

[9] M. Injadat, A. Moubayed, A. B. Nassif, and A. Shami, “Multi-Stage
Optimized Machine Learning Framework for Network Intrusion Detec-
tion,” IEEE Trans. Netw. Serv. Manag., vol. 4537, no. c, pp. 1–1, 2020.
[10] M. Injadat, A. Moubayed, A. B. Nassif, and A. Shami, “Machine
learning towards intelligent systems: applications, challenges, and op-
portunities,” Artif. Intell. Rev., 2021.

[11] T. Tayeh, S. Aburakhia, R. Myers and A. Shami, ”Distance-Based
Anomaly Detection for Industrial Surfaces using Triplet Networks,” in
2020 IEEE IEMCON, Vancouver, Canada, Nov. 2020.

[12] A. Moubayed, M. Injadat, A. Shami, and H. Lutﬁyya, “DNS Typo-
Squatting Domain Detection: A Data Analytics & Machine Learning
Based Approach,” 2018 IEEE Glob. Commun. Conf. GLOBECOM 2018
- Proc., 2018.

[13] L. Yang et al., ”Multi-Perspective Content Delivery Networks Security
Framework Using Optimized Unsupervised Anomaly Detection,” IEEE
Trans. Netw. Serv. Manag., 2021.

[14] M. Marjani et al., “Big IoT Data Analytics: Architecture, Opportunities,
and Open Research Challenges,” IEEE Access, vol. 5, pp. 5247–5261,
2017.

[15] L. Yang and A. Shami, “A Lightweight Concept Drift Detection and
Adaptation Framework for IoT Data Streams,” IEEE Internet Things
Mag., 2021.

[16] D. M. Manias and A. Shami, “Making a Case for Federated Learning in
the Internet of Vehicles and Intelligent Transportation Systems,” IEEE
Network, 2021.

[17] A. Bifet and R. Gavald`a, “Learning from time-changing data with adap-
tive windowing,” Proc. 7th SIAM Int. Conf. Data Min., pp. 443–448,
2007.

[18] J. Gama, P. Medas, G. Castillo, and P. Rodrigues, “Learning with drift
detection,” Lect. Notes Comput. Sci. (including Subser. Lect. Notes Artif.
Intell. Lect. Notes Bioinformatics), vol. 3171, pp. 286–295, 2004.
[19] H. M. Gomes et al. , “Adaptive random forests for evolving data stream
classiﬁcation,” Mach. Learn., vol. 106, no. 9–10, pp. 1469–1495, 2017.
[20] H. M. Gomes, J. Read, and A. Bifet, “Streaming random patches
for evolving data stream classiﬁcation,” Proc. - IEEE Int. Conf. Data
Mining, ICDM, vol. 2019-November, no. Icdm, pp. 240–249, 2019.
[21] I. Sharafaldin, A. H. Lashkari, and A. A. Ghorbani, “Toward generating
a new intrusion detection dataset and intrusion trafﬁc characterization,”
in Proc. Int. Conf. Inf. Syst. Secur. Privacy, 2018, pp. 108–116.
[22] D. M. Manias, I. Shaer, L. Yang, and A. Shami, ”Concept Drift
Detection in Federated Networked Systems,” in 2021 IEEE Glob.
Commun. Conf. (GLOBECOM), Madrid, Spain, Dec. 2021.

[23] J. Lu, A. Liu, F. Dong, F. Gu, J. Gama, and G. Zhang, “Learning under
Concept Drift: A Review,” IEEE Trans. Knowl. Data Eng., vol. 31, no.
12, pp. 2346–2363, 2019.

[24] S. Wares, J. Isaacs, and E. Elyan, “Data stream mining: methods and
challenges for handling concept drift,” SN Appl. Sci., vol. 1, no. 11, p.
1412, 2019.

[25] Y. Sun, Z. Wang, H. Liu, C. Du, and J. Yuan, “Online Ensemble Using
Adaptive Windowing for Data Streams with Concept Drift,” Int. J.
Distrib. Sens. Networks, vol. 12, no. 5, p. 4218973, 2016.

[26] C. Manapragada, G. I. Webb, and M. Salehi, “Extremely fast decision
tree,” Proc. ACM SIGKDD Int. Conf. Knowl. Discov.Data Min., pp.
1953–1962, 2018.

[27] B. Krawczyk, L. L. Minku, J. Gama, J. Stefanowski, and M. Wo´zniak,
“Ensemble learning for data stream analysis: A survey,” Inf. Fusion,
vol. 37, pp. 132–156, 2017.

[28] A. Bifet, G. Holmes, and B. Pfahringer, “Leveraging bagging for
evolving data streams,” Lect. Notes Comput. Sci. (including Subser. Lect.
Notes Artif. Intell. Lect. Notes Bioinformatics), vol. 6321 LNAI, no.
PART 1, pp. 135–150, 2010.

[29] J. Montiel, J. Read, A. Bifet, and T. Abdessalem, “Scikit-multiﬂow: A
Multi-output Streaming Framework,” J. Mach. Learn. Res., vol. 19, pp.
1–5, 2018.

