Crowdsourcing Cybersecurity:
Cyber Attack Detection using Social Media

RUPINDER PAUL KHANDPUR1,2, TAORAN JI1,2, STEVE JAN3,
GANG WANG3, CHANG-TIEN LU1,2, NAREN RAMAKRISHNAN1,2,
1Discovery Analytics Center, Virginia Tech, Arlington, VA 22203, USA
2Department of Computer Science, Virginia Tech, Arlington, VA 22203, USA
3Department of Computer Science, Virginia Tech, Blacksburg, VA 24060, USA

Social media is often viewed as a sensor into various societal events such as disease outbreaks, protests, and elections. We describe

the use of social media as a crowdsourced sensor to gain insight into ongoing cyber-attacks. Our approach detects a broad range of

cyber-attacks (e.g., distributed denial of service (DDOS) attacks, data breaches, and account hijacking) in an unsupervised manner

using just a limited fixed set of seed event triggers. A new query expansion strategy based on convolutional kernels and dependency

parses helps model reporting structure and aids in identifying key event characteristics. Through a large-scale analysis over Twitter,

we demonstrate that our approach consistently identifies and encodes events, outperforming existing methods.

1 INTRODUCTION

Today’s widespread incidences of cyber-attacks (e.g., most recently of the US Democratic Party and at companies

such as Sony, Verizon, Yahoo, Target, JP Morgan, Office of Personnel Management, Ashley Madison), each more

audacious than earlier ones, makes them perhaps the primary threat faced by individuals, organizations, and nations

alike. Consequences and implications of cyber-attacks include monetary losses, threats to critical infrastructure and

national security, disruptions to daily life, a potential to cause loss of life and physical property, and data leaks exposing

sensitive personal information about users and their activities. The largely quasi-static and unadaptable nature of

existing cyber-defenses makes them vulnerable to rapidly evolving attack mechanisms, and thus engender not just a

‘warning deficit’ but also a ‘detection deficit’, i.e., an increase in the mean time between the time of an attack and its

discovery.

It has been well argued that, because news about an organization’s compromise sometimes originates outside the

organization, one could use open source indicators (e.g., news and social media) as indicators of a cyber-attack. Social

media, in particular, turns users into social sensors empowering them to participate in an online ecosystem of event

detection for happenings such as disease outbreaks [34], civil unrest [22, 40], and earthquakes [31]. While the use of

social media cannot fully supplant the need for internal telemetry for certain types of attacks (e.g., use of network flow

data to detect malicious network behavior [6, 14, 23]), analysis of such online media can provide insight into a broader

range of cyber-attacks such as data breaches, account hijacking and newer ones as they emerge.

At the same time it is non-trivial to harness social media to identify cyber-attacks. Our objective is to detect

a range of different cyber-attacks as early as possible, determine their characteristics (e.g., the target, the

type of attack), in an unsupervised manner. Prior work (e.g., [29]) relies on weak supervision techniques which

2017. Manuscript submitted to ACM

7
1
0
2

b
e
F
4
2

]

R
C
.
s
c
[

1
v
5
4
7
7
0
.
2
0
7
1
:
v
i
X
r
a

 
 
 
 
 
 
R. Khandpur et. al.

will be unable to capture the dynamically evolving nature of cyber-attacks over time and are also unable to encode

characteristics of detected events, as we aim to do here.

Our main contributions are:

• A framework for cybersecurity event detection based on online social media. Our dynamic event
trigger expansion (DETE) approach uses a limited, fixed, set of general seed event triggers and learns to map

them to specific event-related expansions and thus provide situational awareness into cyber-events in an

unsupervised manner.

• A novel query expansion strategy based on dependency tree patterns. To model typical reporting
structure in how cyber-attacks are described in social media, we propose a dynamic event trigger expansion

method based on convolution kernels and dependency parses. The proposed approach also employs a word

embedding strategy to capture similarities between event triggers and candidate event reports.

• Extensive empirical evaluation for three kinds of cyber-attacks. We manually catalog ground truth for
three event classes—distributed denial of service (DDOS) attacks, data breaches, and account hijacking—and

demonstrate that our approach consistently identifies and encodes events outperforming existing methods.

2 PROBLEM SETUP

The input to our methodology is a collection of time-ordered tweets D = {D1, D2, . . . , Dp } organized along p time slots.
Let D denote the tweet space corresponding to a subcollection Di , let D+
denote the target tweet subspace (in our case,
comprising cyber-attack events), and let D− = D − D+ denote the rest of the tweets in the considered tweet space.

Definition 1. Typed Dependency Query: A typed dependency query is a linguistic structure that characterizes

a semantically coherent event related topic. Different from n-grams, terms contained in a typed dependency query

share both syntactic and semantic relationships. Mathematically, a typed dependency query is formulated as a tree
structure G = {V , E}, where node v ∈ V can be either a unigram, user mention, or a hashtag and ε ∈ E represents a
syntactic relation between two nodes.

Definition 2. Seed Query: A seed query is a manually selected typed dependency query targeted for a certain type

of event. For instance, “hacked account” can be defined as a potential seed query for an account hijacking event.

Definition 3. Expanded Query: An expanded query is a typed dependency query which is automatically generated
by the DETE algorithm based on a set of seed queries and a given tweet collection D. expanded query and its seed
query can be two different descriptions of the same subject. More commonly, an expanded query can be more specific

than its seed query. For instance, “prime minister dmitry medvedev twitter account hack”, an expanded query from

“hacked account”, denotes the message of an account hijacking event related with Dmitry Medvedev.

Definition 4. Event Representation: An event e is defined as (Qe , date, type), where Qe is the set of event-related
expanded queries, date denotes when the event happens, and type refers to the category of the cyber-attack event (i.e.,

DDOS, account hijacking, or data breach).

Here Qe is a defined as a set because, in general, a cyber-attack event can be presented and retrieved by multiple
query templates. For instance, among online discussion and report about event “Fashola’s account, website hacked”, the

query template most used are “fashola twitter account hack”, “fashola n78m website twitter account hack” and “hack

account”.

Manuscript submitted to ACM

Crowdsourcing Cybersecurity:
Cyber Attack Detection using Social Media

Given the above definitions, the major tasks underlying the cyber-attack event detection problem are defined as

follows:

Task 1: Target Domain Generation: Given a tweet subcollection D, target domain generation is the task of
identifying the set of target related tweets D+. D+ contains critical target related information based on which the
expanded query can be mined.

Task 2: Expanded Query Extraction: Given target domain D+, the task of expanded query extraction is to
generate a set of expanded queries Q = {q1, . . . , qn } which represents the generic concept delivered by D+. Thus set Q
can be used to retrieve event related information from other collection sets.

Task 3: Dynamic Typed Query Expansion: Given a small set of seed queries Q0 and a twitter collection D, the
+ and Qk until all the target related messages are

task of dynamic typed query expansion is to iteratively expand Dk
included.

3 METHODOLOGY

In traditional information extraction (IE), a large corpus of text must first be annotated to train extractors for event

triggers, defined as main keywords indicating an event occurrence [10]. However, in our scenario using online social

media, a manually annotated label set is impractical due to the huge volume of online media and the generally noisy

characteristics of the text. In this section, we propose a novel method to automatically mine query templates over

which the event tracking is performed.

3.1 Target Domain Generation

In this subsection, we propose the method of target domain generation, which serves as the source of social indicators
for the detection of ongoing cyber-attack events. Given a query and a collection of tweets D, the typical way to retrieve
query-related documentation is based on a bag of words model [33] which comes with its attendant disadvantages.

Consider the following two tweets: “has riseups servers been compromised or data leaked?” and “@O2 You completely

screwed me over! My phones back on, still leaking data and YOU are so UNHELPFUL #CancellingContract #Bye”.

Though the important indicator “leak data” for data breach attack is involved in both tweets, the second tweet is

complaining about a phone carrier and is unexpected noise in our case. To address this problem, syntactically bound

information and semantic similarity constraints are jointly considered in our proposed method.

More specifically, each tweet in D is first converted into its dependency tree form. Thus for a given seed query q, the
target domain D+ ⊆ D can be generated by collecting all tweets which are both syntactically and semantically similar
to the seed query q. Mathematically, given two dependency trees q and d, a convolution tree kernel [11] is adopted to

measure the similarity using shared longest common paths:

(cid:0)1 + H (u, v)(cid:1) 1R>0

(cid:0)H(u,v)(cid:1)

K(q, d) = (cid:213)
u ∈q
v ∈d

(1)

where v and u are two nodes from two trees q and d respectively, R>0 represents set of positive real numbers, 1(·) is
the indicator function and H (v, u) counts the number of common paths between the two trees which peak at v and u,
which can be calculated by an efficient algorithm proposed by Kate et al. [11], as described in Algorithm 1.

Manuscript submitted to ACM

Algorithm 1: Calculation of number of common paths.

Input: u ∈ q, v ∈ d
Output: H(u, v)

R. Khandpur et. al.

1 Set count = 0, r = κ(u, v);
2 Set Cu = childr en(u);
3 Set Cv = childr en(v);
4 for ci, c j ∈ Cu, i (cid:44) j do
5

for cm, cn ∈ Cv, m (cid:44) n do

6

7

8

9

if ci (cid:17) cm and c j (cid:17) cn then

x = κ(ci, cm );
y = κ(c j, cn );
r = r +

√

λ + λx + λy + λxy

10 H(u, v) = r ;

In Algorithm 1, κ(u, v) is the number of common paths between the two trees which originate from u and v, and can

be recursively defined as:

κ(u, v) = (cid:213)
µ ∈C(u)
η ∈C(v)

(1 + κ(µ, η))1µ (cid:17)η (u,v),

(2)

where C(·) denotes the set of children node. In both Algorithm 1 and Equation 2, we use the semantic similarity operator
(cid:17), introduced to consider the semantic similarity of tree structre. This semantic similarity is computed by considering
cosine similarity of word embeddings vector generated from the word2vec algorithm.

This model considers the common paths which are linguistically meaningful, which reduces the noise introduced

by coincidentally matched word chains. In addition, long-range dependencies between words, which decreases the

performance, are avoided because functionally related words are always directly linked in a dependency tree.

3.2 Dynamic Typed Query Expansion

In this subsection, we propose a way to dynamically mine an expanded query given a small collect of seed query, as

shown in Table 1. By providing a small set of seed queries (unigrams), Zhao et al. [40] proposed a dynamic query

expansion (DQE) method which is able to iteratively expand the seed query set from currently selected target tweet

subspace until convergence. Looking beyond the simple unigrams based expansion, by introducing dependency-based

tree structure extraction, we build a dynamic expanded query generation model for the cyber-attack detection task.

Table 1. Seed queries for cyber-attack events.

Category

Data breach

DDoS

Seed Query

data leak, security breach,
stolen, password stolen, hacker stole

information

DDoS attack, slow internet, network infil-
trated, malicious activity, vulnerability ex-
ploit, phishing attack

Account Hijacking

unauthorized access, stolen identity, hacked
account

Manuscript submitted to ACM

Crowdsourcing Cybersecurity:
Cyber Attack Detection using Social Media

Let us denote Qk , Dk

+ as the expanded query set and target domain at the kth iteration. Before the iteration process,
Q0 is initialized by the manually selected small set of seed queries, as shown in Table 1. With D and Q0, then D0
+,
the target domain at iteration 0, is generated based on the convolution tree kernel, as described in Equation 1. At the
kth iteration, given last expanded query set Qk −1 and last generated target domain Dk −1
candidate expanded queries for each matched qi ∈ Qk −1 and d ∈ Dk −1
+ :

+ , our approach first prepares

ˆqk
i

= subgraph(cid:0)argmax
(
u ∈qi

v ∈d

(cid:213)

H (v, u))(cid:1),

(3)

where v and u are term nodes in tweet d and qi respectively, and subgraph(·) is an operator to extract the subtree
structure from entire tree with v as root. Thus the candidate query expansions are collected based on relevant document
and Qk −1. To identify the best candidate expanded queries, query terms are then ranked
and query space, that is Dk −1
based on Kullback-Leibler distance [20] between target domain Dk −1

and the whole tweet collection D:

+

+

KL(f , Dk −1

+ |D) = log

Pr(f |Dk −1
+ )
Pr(f |D)

Pr(f |Dk −1
+ ),

(4)

+ |D) denotes the Kullback-Leibler distance, f is any term in ˆqk

where KL(f , Dk −1
+ ) and Pr(f |D) is the
probability of term f appears in Dk −1
and D respectively. Using the KL distance to rank query terms we are able to
assign scores to terms that best discriminate relevant and non-relevant expansions. For example query terms such

i , Pr(f |Dk −1

+

“account” and “twitter” both appear frequently in the candidate expansions but they have little informative value as they

will have the same (random) distribution in any subset of the twitter collection, whereas terms such as “hacked” will

have comparatively higher probability of occurence in the relevant subspace. These high ranked candidates will then

act as the expanded queries set to run the next iteration until the algorithm converges. The detailed dynamic typed

query expansion algorithm is shown in Algorithm 2.

Algorithm 2: Dynamic Typed Query Expansion Algorithm.

Input: Seed query Q0, Twitter subcollection D
Output: Expanded Query Q

1 Set D 0
2 repeat
3

= subt r ee(argmax

C P P (v, u));

(cid:205)
u ∈qi

v ∈d

+ = match(Q0, D), k = 0;

k = k + 1;
for qi ∈ Qk −1 do

i

(cid:98)qk
for f ∈ (cid:98)qk

) = t f (f )
|Dk −1
+

i do
Pr(f | Dk −1
+
Pr(f | D) = t f (f )
|D|
w (f ) = K L(f , Dk −1
i ) = (cid:205)

w (f );

+

;

;

|

| D);

w ((cid:98)qk

f ∈(cid:98)qk
i
Qk = topK (w ( (cid:98)Qk )), (cid:98)Qk = {(cid:98)qk
Dk = mat ch(Qk, D);
k −1
(cid:208)
i =0

Qi −

1 , . . . , (cid:98)qk

| (cid:98)Qk |

Qi (cid:44) ∅// DQE iteration;

4

5

6

7

8

9

10

11

12

13 until

k
(cid:208)
i =0
14 Q = Qk ;

};

Manuscript submitted to ACM

3.3 Event Extraction

R. Khandpur et. al.

Given an expanded query set Q, we extract Qs | qi (cid:42) qj
| qi , qj ∈ Qs . For example, consider the surface string
representations of a set of expanded queries Q as (“data breach”, “data leak”, “ashley madison”, “ashley madison data
breach”) then Qs will be (“ashley madison data breach”). We then cluster the query expansions in Qs using affinity
propagation [9] and also extract exemplars qe , of each query set Qe that are representative of clusters, where each
member query is represented by a vector ˜q calculated from the word embedding ˜u of the lemma of each query term
u ∈ q as:

˜q = (cid:213)
u ∈q
Each exemplar query qe is then annotated to a cyber-attack type. For this purpose, we first compute the cosine

(5)

˜u.

similarity between an exemplar query expansion qe and seed query qj ∈ Q(0) as:

sim(qe , qj ) =

˜qe · ˜qj
|| ˜qe || · || ˜qj ||

.

(6)

The qj ∈ Q(0) which has the highest similarity value with qe determines the event type to which Qe belongs to. For the
complete event representation (Qe , date, type) date information is extracted based on the time interval choosen for
DQE; for example in our experiments we run DQE on a daily aggregated collection of tweets. In this way we extract

the final set of event tuples.

Fig. 1. Streamgraph showing normalized volume of tweets (August, 2014 through August, 2015) tagged with data breach (red), DDoS
activity (grey) and account hijacking (blue) type of cyber-security events.

4 EVALUATION

4.1 Evaluation Setup

4.1.1 Dataset and Gold Standard Report. We evaluate the proposed method on a large stream of tweets from GNIP’s

decahose (10% sample) collected from August, 2014 through October, 2016. The total raw volume of our Twitter dataset

across these 27 months is 5,146,666,178 (after removing all retweets). Then, from this raw volume we create 2 subset

collections:

Manuscript submitted to ACM

Crowdsourcing Cybersecurity:
Cyber Attack Detection using Social Media

Fig. 2. Streamgraph showing normalized volume of tweets (September, 2015 through October, 2016) tagged with data breach (red),
DDoS activity (grey) and account hijacking (blue) type of cyber-security events.

• Fixed Keyword Filtered Tweets: We filtered 79,501,789 tweets that contain at least one matching term
from a list of cyber attack related keywords. These are top 1000 keywords (ranked by TFIDF) extracted from

description texts of events in our gold standard report (see below).

• Normalized Tweet Texts: We extract and normalize tweet texts (after removing accents, user mentions and
urls) to produce a collection of 3,267,567,087 unique texts to train a 200 dimensional word embedding via

gensim’s word2vec software [27].

Note that the experimental results for the performance of our typed dynamic query expansion algorithm are done using

the entire raw volume of over 5 billion tweets. The total volume of tweets filtered from query expansion algorithm is

1,093,716 over the entire time period.

To evaluate our methods, we need Gold Standard Reports (GSR) on cyber security incidents to serve as ground-truth.

In particular, we focus on highly impactful events on data breach, DDoS and account hijacking based on two different

sources, Hackmageddon [2] and PrivacyRights [1]. In both sources, each event is characterized by an event type, date

(when the event was publicly reported), victim organizations and a short description.

• Hackmageddon is an independently maintained website that collects public reports of cyber security incidents.
Between January 2014 and December 2016, we extract 295 account hijacking events and 268 DDoS events. For

account hijacking, since we are using social media data, we mainly focus on hijacking attacks on social media

accounts (twitter, instagram, facebook) by cyber crimes. After filering US-based events and matching the time

range of our Twitter data, we obtain 55 account hijacking events and 80 DDoS events for GSR.

• PrivacyRights is a highly reputable repository for data breach incident reports. Between January 2014 and
December 2016, we extract 1064 data breach events reported by various sources. To enhance the accuracy of

GSR, we choose events reported by four large, well-known sources — “Media”, “KrebsOnSecurity”, “California

Attorney General”, and “Security Breach Letter”. Then, we filter out data breaches caused non-cyber reasons

(e.g., physical theft) and focus on the HACK category. After removing events with an unknown size of data

loss, and matching the time range with our data, we have 85 data breach events for GSR.

4.1.2 Baseline and Comparison Method. Our baseline for event detection uses the well-known Kleinberg’s algo-

rithm [13]. It identifies time periods in which a target event is uncharacteristically frequent or “bursty” on a set of static
keywords. We extract an event if the size of this set of “bursty” keywords is larger than a threshold Tb .

Manuscript submitted to ACM

R. Khandpur et. al.

In this experiment, we use the 79.5 million Fixed Keyword Filtered Tweets and the 1000 static keywords to run the
baseline method. We set the threshold Tb based on small scale empirical tests on a few months of data, and manually
=36 which returns a better event/noise ratio. We apply this threshold on all the
examine the detected events. We set Tb
data and detects 81 events from August, 2014 through October, 2016. Each detected event is characterized as by a date

and a set of “bursty” keywords.

4.1.3 Matching Detected Events with GSR. Given a detected event presented by e = (Qe , date, type), we developed a

semi-automatic method to detect if e is matchched with any event in GSR:

(1) For named entity in e, we check if it matches any event description in GSR, and get a matched collection from

GSR, say ME,

(2) Further filter ME by matching the event date between date in e and ME, with a time window as 3 (one day

before date, and one day after date), and get a new filted event set, say F ME,

(3) Compare the event type between e and event in F ME, if the event type also matches, then event e is consider

as a matched event.

However, considering that the detected events are mined from Twitter environment which may not use formal

keywords to describe the event. We will manually double check the event e if it fails the step 1.

Detected events by baseline will follow the same method to match against GSR. The only adjustment is to match the

“bursty” keywords of the detected events instead of named entities.

4.2 Measuring Performance

Precision and recall over different types of cyberattack events are summarized in Table 6. These results shows that with

only a small set of seed query templates (as shown in Table 1), our approach can reach around 80% of precision for

data breach and DDoS events. This means our approach is able to handle the noisy Twitter environment and perform

the cyberattack event detection accurately. The precision for account hijacking is not as high (66%). Careful manual

analysis (through Google search) indicates that we actually detected new account hijacking events that are not covered

by the GSR (Table 4). The manual validation results for data breach and DDoS events are shown in Table 3 and Table 5.

We also detected new events that are not covered by GSR for these two types.

Data breach events have a higher recall (75%). The relatively low recall for account hijacking and DDoS is explainable.

Both DDoS and account hijacking events have a rather short life cycle from occurring to being addressed. Thus their

signal in social media is relatively weaker. For instance, DDoS often cause a few minutes to several hours of slow

internet, which may end even before people realized it. This intuition is validated in the baseline performance. The

extremely low precision and recall in Table 7 shows relying on “burstiness” is difficult to capture such events, possibly

due to their weak signals over noise.

4.3 Case Studies

We comprehensively show in Fig. 1 and Fig. 2, the wide range of events that our system is able to detect. Notice, the

clear burst in Twitter activity that our query expansion algorithm is able to pick. Through the following case studies we

highlight some of the interesting cases for each of three cyber attack types, that our system detected.

Targeted DDoS Attacks on Sony and Dyn: In late, November 2014, a hacker group calling itself “The Guardians Of

Peace” hacked their way into Sony Pictures, leaving the Sony network crippled for days, allegedly perpertrated by North

Korea. We capture 12 separate events of DDoS attacks including four in last week of August 2014, starting with the first

Manuscript submitted to ACM

Crowdsourcing Cybersecurity:
Cyber Attack Detection using Social Media

Category

Number of Detected Events GSR

Data Breach
Account Hijacking
DDoS Attacks
Duplicate
Rejected
Unspecified

Total

227
127
109
606
581
390

2040

85
55
80
0
0
0

220

Table 2. Number of cyber attack events in GSR and those detected by typed DQE.

Manually Verified

Matched with GSR

True Positive
False Positive

Yes

22
0

No

156
49

Table 3. Events detected of data breach type.

Manually Verified

Matched with GSR

True Positive
False Positive

Yes

8
0

No

51
31

Table 4. Events detected of account hijacking type.

Manually Verified

Matched with GSR

True Positive
False Positive

Yes

20
0

No

29
12

Table 5. Events detected of DDoS attack type.

on August 24th. Further in 2015, more ensuing attacks are captured one highlighted by the data breach of their movie

production house, on December 12th and then a massively crippling targeted, DDoS attack on their PlayStation network

in late December, 2015. Another noteworthy case of DDoS attacks in 2016, is the multiple distributed denial-of-service

attack on DNS provider “Dyn” from October 21st through 31st in 2016, that almost caused an worldwide internet outage.

Our system detects generates several query expansions, shown in Fig. 4 which clearly characterizes the nature of these

DDoS attacks where the hackers turned a large number of internet-connected devices around the world in to botnets

executing a distributed attack.

Ashley Madison Website Data Breach: In July 2015, a group calling itself “The Impact Team” stole the user data

of Ashley Madison, an adult dating website billed as enabling extramarital affairs. The hackers stole the website´s all

customer data and threatened to release the personally identifying information if the site was not immediately shut

Manuscript submitted to ACM

R. Khandpur et. al.

Event Type

Precision Recall

F-measure

Data Breach
Account Hijacking
DDoS Attack

0.78
0.66
0.80

0.74
0.56
0.45

0.76
0.64
0.58

Table 6. Typed DQE based event detection performance comparison.

Event Type

Precision Recall

F-measure

Data Breach
Account Hijacking
DDoS

0.21
0.01
0.01

0.20
0.02
0.01

0.20
0.01
0.01

Table 7. Baseline’s event detection performance comparison.

Fig. 3. Word cloud and streamgraph analysis. The word cloud of all query expansions (size is proportional to the query’s feature
score) is produced from event detected for Ashley Madison website data breach. Streamgraph shows the bursty normalized volume of
tweets when events happen.

Fig. 4. A word cloud of all query expansions (size is proportional to the query’s feature score) produced on October 22, 2016
characterizing the DDoS attack on DNS provider Dyn.

down. On 18 and 20 August, the group leaked more than 25 gigabytes of company data, including user details. We are

able to detect this data breach on July 20, 2015. The word clouds in Fig. 3 clearly show how our method iteratively

expands from the seed queries to the expanded queries in the last, iteration 3 capturing a very rich semantic aspect

of the breach. After the initial burst as seen in the figure, we also see a second corresponding burst a month later, on

Manuscript submitted to ACM

Crowdsourcing Cybersecurity:
Cyber Attack Detection using Social Media

August 20 when the user data is released anot now the top query expansion captured characterized by the mentions of

user data leak of the same website.

Twitter Account Hijackings: We were also able to detect with very high date accuracy, several high profile cases

of account hijackings of social media accounts of known personalities and government institutions including the Twitter

account for U.S. Central Command which was hacked by ISIS sympathizers on January 12, 2015. We show in Fig. 5 that

our method not only identifies the victim (“central command twitter account hack”) but also the actor who perpetrated

the hacking (“isis hack twitter account”).

Fig. 5. A word cloud of all query expansions (size is proportional to the query’s feature score) produced from event detected for U.S
CentCom Twitter account hijacking.

5 RELATED WORK

Cyberattack Detection and Characterization.

Detecting and characterizing cyber attacks is highly challenging

due to the constant-involving nature of cyber criminals. Recent proposals cover a large range of different methods,

and Table 8 lists representative works in this space. Earlier work primarily focuses on mining network traffic data for

intrusion detection. Specific techniques range from classifying malicious network flows [15] to anomaly detection in

graphs to detect malicious servers and connections [6, 7, 14, 23]. More recently, researchers seek to move ahead to

predict cyber attacks before they happened for early notifications [16]. For example, Liu et al. leverage various network

data associated to an organization to look for indicators of attacks [18, 19]. By extracting signals from mis-configured

DNS and BGP networks as well as spam and phishing activities, they build classifiers to predict if an organization is (or

will be) under attack. Similarly, Soska et al. apply supervised classifiers to network traffic data to detect vulnerable

websites, and predict their chances of turning malicious in the future [35].

In recent years, online media such as blogs and social networks become another promising data source of security

intelligence [21, 39]. Most existing work focuses on technology blogs and tweets from security professionals to extract

useful information [37]. For example, Liao et al. builds text mining tools to extract key attack identifiers (IP, MD5 hashes)

from security tech blogs [17]. Sabottke et al. leverage Twitter data to estimate the level of interest in existing CVE

vulnerabilities, and predict their chance of being exploited in practice [30]. Our work differs from existing literature

since we focus on crowdsourced data from the much broader user populations who are likely the victims of security

attacks. The most related work to ours is [29] which uses weakly supervised learning to detect security related tweets.

However, this technique is unable to capture the dynamically evolving nature of attacks and is unable to encode

characteristics of detected events.

Event Extraction and Forecasting on Twitter.

Another body of related work focuses on Twitter to extract various

events such as trending news [3, 28], natural disasters [32], criminal incidents [38] and population migrations [25].

Manuscript submitted to ACM

R. Khandpur et. al.

Common event extraction methods include simple keyword matching and clustering, and topic modeling with temporal

and geolocation constrains [5, 36, 41]. Event forecasting, on the other hand, aims to predict future evens based on early

signals extracted from tweets. Example applications include detecting activity planning [4] and forecasting future

events such as civil unrest [26] and upcoming threats to national airports [12]. In our work, we follow a similar intuition

to detect signals for major security attacks. The key novelty in our approach, different from these works, is the need for

a typed query expansion strategy that provides both focused results and aids in extracting key indicators underlying

the cyber-attack.

Unsupervised

Method

Keyword
Expansion

[18]

[29]

[24]

[42]

[14]

[30]

[7]

[23]

[8]

[6]

[17]

Ours

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:88)

(cid:88)

(cid:88)

(cid:88)

(cid:88)

(cid:88)

(cid:53)

(cid:88)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:88)

Event

Goal

Data

Information
Extraction

Characterize
Event

Type Detection

(cid:53)

(cid:88)

(cid:53)

(cid:88)

(cid:53)

(cid:88)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:88)

(cid:88)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:88)

(cid:53)

(cid:88)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:88)

(cid:88)

(cid:88)

(cid:53)

(cid:53)

(cid:53)

(cid:88)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:53)

(cid:88)

Cyberattacks

Network Data

Cyberattacks

Twitter

Cyberattacks

Malware

Malware

WINE

Papers

WINE

Vulnerability

Twitter

Intrusion

Network Data

Intrusion

Network Data

Intrusion

Network Data

Insider

IOC

Access Log

Tech Blogs

Cyberattacks

Twitter

Table 8. Related work.

6 CONCLUSION

We have demonstrated an unsupervised approach to extract and encode cyber-attacks reported and discussed in social

media. We have motivated the need for a careful template-driven query expansion strategy, and how the use of

dependency parse trees and word embeddings supports event extraction. Given the widespread prevalence of cyber-

attacks, tools such as presented here are crucial to providing situational awareness on an ongoing basis. Future work is

aimed at broadening the class of attacks that the system is geared to as well as at modeling sequential dependencies in

cyber-attacks. This will aid in capturing characteristics such as increased prevalence of attacks on specific institutions

or countries during particular time periods.

REFERENCES

[1] Privacy Rights Clearinghouse.
[2] Web Hacking Incidence Reports.
[3] F. Atefeh and W. Khreich. A survey of techniques for event detection in twitter. Comput. Intell., 31(1):132–164, 2015.
[4] H. Becker, D. Iter, M. Naaman, and L. Gravano. Identifying content for planned events across social media sites. In Proc. WSDM’12, 2012.
[5] H. Becker, M. Naaman, and L. Gravano. Beyond trending topics: Real-world event identification on twitter. In Proc. ICWSM’14, 2012.

Manuscript submitted to ACM

Crowdsourcing Cybersecurity:
Cyber Attack Detection using Social Media

[6] M. Davis, W. Liu, P. Miller, and G. Redpath. Detecting anomalies in graphs with numeric labels. In Proc. CIKM’11, 2011.
[7] Q. Ding, N. Katenka, P. Barford, E. Kolaczyk, and M. Crovella. Intrusion as (anti)social communication: Characterization and detection. In Proc.

KDD’12, 2012.

[8] W. Eberle and L. Holder. Discovering structural anomalies in graph-based data. In Proc. ICDMW’07, 2007.
[9] B. J. Frey and D. Dueck. Clustering by passing messages between data points. science, 315(5814):972–976, 2007.
[10] H. Ji, R. Grishman, et al. Refining event extraction through cross-document inference. In Proc. ACL’08, 2008.
[11] R. J. Kate. A dependency-based word subsequence kernel. In Proceedings of the Conference on Empirical Methods in Natural Language Processing,

pages 400–409. Association for Computational Linguistics, 2008.

[12] R. P. Khandpur, T. Ji, Y. Ning, L. Zhao, C.-T. Lu, E. R. Smith, C. Adams, and N. Ramakrishnan. Determining relative airport threats from news and

social media. In Proc. AAAI’16, 2016.
J. Kleinberg. Bursty and hierarchical structure in streams. In Proc. KDD’02, 2002.

[13]
[14] B. J. Kwon, J. Mondal, J. Jang, L. Bilge, and T. Dumitras. The dropper effect: Insights into malware distribution with downloader graph analytics. In

Proc. CCS’15, 2015.

[15] W. Lee and S. J. Stolfo. Data mining approaches for intrusion detection. In Proc. USENIX Sec’98, 1998.
[16] F. Li, Z. Durumeric, J. Czyz, M. Karami, M. Bailey, D. McCoy, S. Savage, and V. Paxson. You’ve got vulnerability: Exploring effective vulnerability

notifications. In Proc. USENIX Sec’16, 2016.

[17] X. Liao, K. Yuan, X. Wang, Z. Li, L. Xing, and R. Beyah. Acing the ioc game: Toward automatic discovery and analysis of open-source cyber threat

intelligence. In Proc. CCS’16, 2016.

[18] Y. Liu, A. Sarabi, J. Zhang, P. Naghizadeh, M. Karir, M. Bailey, and M. Liu. Cloudy with a chance of breach: Forecasting cyber security incidents. In

Proc. USENIX SEC’15, 2015.

[19] Y. Liu, J. Zhang, A. Sarabi, M. Liu, M. Karir, and M. Bailey. Predicting cyber security incidents using feature-based characterization of network-level

malicious activities. In Proc. IWSPA’15, 2015.

[20] Q. Mei and C. Zhai. Discovering evolutionary theme patterns from text: an exploration of temporal text mining. In Proceedings of the eleventh ACM

SIGKDD international conference on Knowledge discovery in data mining, pages 198–207. ACM, 2005.

[21] A. Modi, Z. Sun, A. Panwar, T. Khairnar, Z. Zhao, A. Doup, G. J. Ahn, and P. Black. Towards automated threat intelligence fusion. In Proc. IEEE

CIC’16, 2016.

[22] S. Muthiah, B. Huang, J. Arredondo, D. Mares, L. Getoor, G. Katz, and N. Ramakrishnan. Planned protest modeling in news and social media. In

AAAI, pages 3920–3927, 2015.

[23] C. C. Noble and D. J. Cook. Graph-based anomaly detection. In Proc. KDD’03, 2003.
[24] M. Ovelgonne, T. Dumitras, B. A. Prakash, V. S. Subrahmanian, and B. Wang. Understanding the relationship between human behavior and

susceptibility to cyber-attacks: A data-driven approach. In Proc. TIST’16, 2016.
J. Piskorski, H. Tanev, and A. Balahur. Exploiting twitter for border security-related intelligence gathering. In Proc. EISIC’13, 2013.

[25]
[26] N. Ramakrishnan et al. ’beating the news’ with embers: Forecasting civil unrest using open source indicators. In Proc. KDD’14, 2014.
[27] R. Rehurek and P. Sojka. Software framework for topic modelling with large corpora. In In Proceedings of the LREC 2010 Workshop on New Challenges

for NLP Frameworks. Citeseer, 2010.

[28] A. Ritter, Mausam, O. Etzioni, and S. Clark. Open domain event extraction from twitter. In Proc. KDD’12, 2012.
[29] A. Ritter, E. Wright, W. Casey, and T. Mitchell. Weakly supervised extraction of computer security events from twitter. In Proc. WWW’15, 2015.
[30] C. Sabottke, O. Suciu, and T. Dumitras. Vulnerability disclosure in the age of social media: Exploiting twitter for predicting real-world exploits. In

Proc. USENIX SEC’15, 2015.

[31] T. Sakaki, M. Okazaki, and Y. Matsuo. Earthquake shakes twitter users: real-time event detection by social sensors. In Proceedings of the 19th

international conference on World wide web, pages 851–860. ACM, 2010.

[32] T. Sakaki, M. Okazaki, and Y. Matsuo. Earthquake shakes twitter users: Real-time event detection by social sensors. In Proc. WWW’10, 2010.
[33] G. Salton and M. J. McGill. Introduction to modern information retrieval. 1986.
[34] A. Signorini, A. M. Segre, and P. M. Polgreen. The use of twitter to track levels of disease activity and public concern in the us during the influenza a

h1n1 pandemic. PloS one, 6(5):e19467, 2011.

[35] K. Soska and N. Christin. Automatically detecting vulnerable websites before they turn malicious. In Proc. USENIX Sec’14, 2014.
[36] H. Tanev, M. Ehrmann, J. Piskorski, and V. Zavarella. Enhancing event descriptions through twitter mining. In Proc. ICWSM’14, 2012.
[37] F. S. Tsai and K. L. Chan. Detecting Cyber Security Threats in Weblogs Using Probabilistic Models. 2007.
[38] X. Wang, M. S. Gerber, and D. E. Brown. Automatic crime prediction using events extracted from twitter posts. In Proc. SBP’12, 2012.
[39] D. J. Weller-Fahy. Towards finding malicious cyber discussions in social media. In Proc. AICS’17, 2017.
[40] L. Zhao, F. Chen, J. Dai, T. Hua, C.-T. Lu, and N. Ramakrishnan. Unsupervised spatial event detection in targeted domains with applications to civil

unrest modeling. PloS one, 9(10):e110206, 2014.

[41] X. Zhou and L. Chen. Event detection over twitter social media streams. The VLDB Journal, 23(3):381–400, 2014.
[42] Z. Zhu and T. Dumitras. Featuresmith: Automatically engineering features for malware detection by mining the security literature. In Proc. CCS’16,

2016.

Manuscript submitted to ACM

