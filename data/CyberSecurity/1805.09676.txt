8
1
0
2

n
u
J

0
2

]

R
C
.
s
c
[

2
v
6
7
6
9
0
.
5
0
8
1
:
v
i
X
r
a

Forming IDEAS
Interactive Data Exploration & Analysis System ∗

Conﬁgurable Visual Analytics for Cyber Security Analysts

Robert Bridges, Maria Vincent, Kelly Huffer, John Goodall, Jessie Jamieson†, Zachary Burch‡
Oak Ridge National Laboratory, Oak Ridge, TN, †University Nebraska, Lincoln, NE,
‡Virginia Tech, Blacksburg, VA
{bridgesra, vincentms, hufferkm, jgoodall}@ornl.gov, jdjamieson@huskers.unl.edu,
zchryb@vt.edu

ABSTRACT
Modern cyber security operations collect an enormous amount
of logging and alerting data. While analysts have the ability
to query and compute simple statistics and plots from their
data, current analytical tools are too simple to admit deep
understanding. To detect advanced and novel attacks, an-
alysts turn to manual investigations. While commonplace,
current investigations are time-consuming, intuition-based,
and proving insuﬃcient. Our hypothesis is that arming the
analyst with easy-to-use data science tools will increase their
work eﬃciency, provide them with the ability to resolve hy-
potheses with scientiﬁc inquiry of their data, and support
their decisions with evidence over intuition. To this end, we
present our work to build IDEAS (Interactive Data Explo-
ration and Analysis System). We present three real-world
use cases that drive the system design from the algorithmic
capabilities to the user interface. Finally, a modular and
scalable software architecture is discussed along with plans
for our pilot deployment with a security operation center.

INTRODUCTION

1.
Cyber operations—comprised of security analysts and charged
with keeping enterprise networks secure and healthy—now
have widespread data collection and query capabilities, as
well as many automated alerting tools. Heterogeneous streams
of logs are generated by ﬁrewalls, network- and host-level in-
trusion detection and prevention systems, packet captures,
DNS and other servers, and workstations. While this valu-
able sea of data is collected and stored for analysts use,
leveraging it eﬀectively is a current challenge.

We interviewed analysts from six security centers and ob-
served that it is now standard to have widespread log col-
lection and query capabilities using Splunk (www.splunk.

∗

This manuscript has been authored by UT-Battelle, LLC under Con-
tract No. DE-AC05-00OR22725 with the U.S. Department of Energy.
The United States Government retains and the publisher, by accept-
ing the article for publication, acknowledges that the United States
Government retains a non-exclusive, paid-up, irrevocable, world-wide
license to publish or reproduce the published form of this manuscript,
or allow others to do so, for United States Government purposes. The
Department of Energy will provide public access to these results of
federally sponsored research in accordance with the DOE Public Ac-
cess Plan http://energy.gov/downloads/doe-public-access-plan.

Copyright is held by the author/owner. Permission to make digital or hard
copies of all or part of this work for personal or classroom use is granted
without fee.
USENIX Symposium on Usable Privacy and Security (SOUPS) 2018.
August 12–14, 2018, Baltimore, MD, USA.

com) and Elasticsearch (www.elastic.co) as common log
management tools. These tools support basic analytics;
e.g., Splunk integrates with Tableau (www.tableau.com) and
Elasticsearch with Kirbana facilitating fast visualization and
computation of many basic tables, plots, and statistics.

Yet, incident response and more general protection against
advanced attacks relies mainly on intuition and tedious man-
ual investigations of the relevant charts and logs. As an
example shared with us, upon a ransomware infection, ob-
taining the past host logs from infected machines is a quick
query, but understanding the malware behavior by analyzing
logs was reported as a tedious manual process taking ∼80
man hours. In another interview an analyst described writ-
ing one-oﬀ code to parse data to hunt for anomalous lateral
movement (connections to within-network IPs); the analyst
wished to cluster hosts by the ratio of their DNS queries
to the number of times their domain was queried and then
explore anomalies over diﬀerent time scales, but was unable
to produce the results in a reasonable amount of time. In
summary, analysts require scientiﬁc inquiry of their data to
resolve hypotheses. Next generation security requires ﬂexi-
ble machine learning tools allowing analysts to leverage their
expertise and data to make decisions backed by evidence.

In response, we present
IDEAS, a novel, vi-
sual analytic platform
designed to bring data
science to the security
worker.
After con-
necting to the cyber
operations’ data store,
IDEAS will give ana-
lysts options for con-
ﬁguring
few pre-
a
deﬁned algorithms on
their data—they can
choose a data subset
and an analytic oper-
ation to be executed
subset—and
on that
presents the analysts with the operation’s results via an
interactive visualization. Algorithmic implementation and
model ﬁtting will occur “under the hood”, requiring some
user training but no algorithmic expertise. See Figure 1.

Figure 1: IDEAS connects to
cyber data store. Analysts
can select algorithmic opera-
tions to run on subsets of their
data and receive interactive vi-
sualizations of the results.

 
 
 
 
 
 
Figure 3: IDEAS’ Discriminant Analysis Results

logs, etc.), and the desired [IP, time-window] tuples. Since
algorithms require data represented as feature vectors, i.e., a
collection of attribute values, the ﬁelds of the chosen dataset
are displayed and can be chosen by the user. We are adding
functionality to include combinations of ﬁelds and simple
statistics (e.g, sum of a ﬁeld’s values over IPs/times) as at-
tributes. See Figure 2.

Once an operation and dataset is chosen through the in-
put UI, the system queries the cyber data store for the se-
lected data, parses it into vectors (lists of the user-selected
attributes), runs the desired algorithm, and displays the re-
sults. A “jobs” page is displayed to the users, itemizing all
previous conﬁgurations and links to the results. The rest of
this section describes each of the three operations and the
corresponding output visualizations designed.

Discriminant Analysis: Conceptually, this operation takes
two datasets as input and identiﬁes those attributes that dis-
tinguish the ﬁrst set from the second. Algorithmically, we
implement Fisher’s Linear Discriminant Analysis [12], a bi-
nary classiﬁer trained on the two input sets to extract the di-
rection in the attribute space that best separates the two sets
while keeping each set tightly clustered. From this vector we
can present to the user a list of the attributes ranked and
scored by their discrimination power. The ﬁrst few results
from a particular dataset involving Cryptowall ransomware
are shown in Figure 3, which depicts IDEAS’ visualization
produced by running our discriminant analysis algorithm.
This example indicates that the “Base File Name” attribute
with a value of “dlhost.exe” is the most discriminating at-
tribute from this particular dataset. The results shown in
Figure 3 align with the actions actually observed in the host
logs infected with Cryptowall ransomware. See Section 3 for
more details on this use case.

Anomaly Scoring: For the anomaly scoring operation,
users specify a baseline dataset and a test dataset. For each
element of the test set the algorithm furnishes a score of
anomalousness relative to the baseline. Because datasets
naturally have diﬀerent distributions, we seek an anomaly
score that is easy to understand and comparable across dis-
tributions. Following our previous work [2, 6, 7], we es-
timate a distribution f and compute the p-value of each
data point: pv(x0) = (cid:80)
A f (x) with the sum over A :=
{x : f (x) ≤ f (x0)}. This formula gives the percent of the
distribution that is less likely than x0, just like a percentile is
comparable across distributions. To the user we present the
anomaly score 1-pv ∈ [0, 1], so high scores are anomalous.
The visualization is similar to Figure 3, but attribute values
are ranked and displayed with anomaly scores. Matching our
clustering algorithm, we use a k−nearest neighbor (KNN)
density estimate (ﬁt to the baseline set).

Figure 2: IDEAS Input Page

We met with analysts regularly at the beginning of the
project to understand their data, roles, and work ﬂows, and
then discussed speciﬁc problems they encountered or capa-
bilities they would beneﬁt from having. As a result of these
discussions, we isolated three use-cases from real investiga-
tions that drove our algorithmic and visualization design.
These use-cases are presented as particular examples illus-
trating potential uses of the system. Algorithms were en-
riched or tweaked to provide understandable results, and
novel visualizations crafted for both inputs and outputs of
the system. Actual historical data was shared with us for
this development, and we corresponded with operators as we
progressed. We expect IDEAS to be suﬃciently developed
in the next few months to allow a pilot deployment with a
security operation center, and expect iteration with them for
reﬁning the system. We discuss our software architectural
design, highlighting beneﬁts for deployment and scalability.

We envision many beneﬁts of IDEAS. Currently-manual in-
vestigations will be semi-automated, saving valuable analyst
time. Analysts can test and evolve hypotheses using a more
scientiﬁc process; hence, evidence from results of the analyt-
ics will inform decisions over only intuition. Useful analytic
conﬁgurations of the system can be shared without sharing
(generally sensitive) data. This will enable intra- and inter-
organizational intelligence sharing; e.g., junior analysts can
execute pre-conﬁgured operations that were discovered only
by insight of experienced analysts.

2. ALGORITHMS & USER INTERFACE
Informed by interactions with operators, we chose three cases
disclosed by operators for the initial system implementation.
Importantly, users only need to know the conceptual capa-
bility of each operation, not algorithmic or implementation
details. To facilitate this, we researched the appropriate
classes of algorithms and chose a ﬁxed algorithm that has
the desired operational properties.

To conﬁgure IDEAS, users must specify two things:
input
dataset(s) and an operation. We have designed and imple-
mented a custom user interface (UI) with a set form—a se-
quence of selections, drop-down boxes, and other interactive
interfaces—for specifying inputs. All anticipated cyber data
can be indexed by IP address and time; hence, datasets are
chosen by indicating the type of data (network ﬂow, host

Figure 4: IDEAS Outliers Visualization.

Figure 5: IDEAS Clusters Visualization.

Clustering: This operation accepts a single dataset and
returns a partition into clusters (subsets that are similar)
and outliers (data points that are unlike any found cluster).
We chose HDBSCAN [3], a hierarchical density-based clus-
tering algorithm, because it has many advantages: it is user-
friendly, requiring a single, optional parameter (research has
empirically showed robustness of this parameter), and im-
portantly, not requiring users to specify the number of clus-
ters; it has a straightforward implementation that is fast and
scalable [9]; it can accommodate non-convex clusters (unlike
k-means and variance-based algorithms) and clusters with a
variety of densities (unlike DBSCAN [5]); it automatically
identiﬁes outliers and it provides a measure of cluster stabil-
ity, telling how tightly packed the cluster is. An added ad-
vantage for our setting is the algorithm is based on a KNN-
estimated probability distribution, allowing us to enrich the
output by annotating all data points with anomaly scores
using the same p-value method discussed above.

The clustering output required a custom UI, as current visu-
alizations for HDBSCAN do not scale and do not accommo-
date many desired properties for our setting. IDEAS’ clus-
tering visualization consists of two complimentary charts.
Figure 4 displays a linear chart with identiﬁed outliers (each
red circle is a single data point not belonging to a cluster)
and their placement on the line corresponds to their calcu-
lated anomaly scores and additional identifying metadata.
That is, anomaly scoring, as computed using the algorithm
above, is computed automatically for outliers identiﬁed by
the clustering algorithm and displayed. Figure 5 visualizes
the clusters with their stability (a measure of the relative
density of the cluster) on X-axis and the count of data points
within the cluster on the Y-axis, which is also indicated by
cluster radius. To enhance this cluster visualization and en-
able result exploration, the user has the ability to break clus-
ters into their sub-clusters and walk up and down through a
cluster tree hierarchy inherent to the HDBSCAN algorithm.

We anticipate users will need to know what deﬁnes each clus-
ter in terms of the input set’s attributes. To facilitate this
understanding, we run our discriminant analysis algorithm
in a one-versus-all scheme, to compare each cluster to all
other data points. This allows us to annotate each cluster
with its discriminating attributes, and these are displayed
in the visualization along with additional metadata, such as
cluster size and stability.

3. OPERATIONAL USE CASES
Our workﬂow for research was to interview analysts and
discuss problematic investigations or gaps in their current
capabilities. This focused our developments and provided
example conﬁgurations for our system.

Automated Malware Forensics: The driving example
for the discriminant analysis operation is a historical in-
vestigation of a Cryptowall 3.0 ransomware outbreak at a
large organization, where analysts spent approximately 80
man hours manually comparing infected host logs to ambi-
ent logs in search of the footprint left by the malware before
encryption of user data. To execute this example using our
system, the user would ﬁrst choose the discriminant analysis
operation, then specify the host logs of infected IPs during
an interval up to encryption as the ﬁrst dataset, and select a
collection of similar sized slices of host logs from uninfected
IPs as the other dataset. Lastly, the operator would choose
attributes of the host logs they believe are inﬂuenced by
ransomware (e.g., new ﬁles’ names, extensions, and creator
processes). The system will query their cyber data store
for the host logs, parse the data into lists of attributes (e.g.,
counts of each new ﬁlename, extension, creator process), and
execute the algorithm. The output display will show each at-
tribute instance with a score of how well it distinguishes the
ﬁrst (infected) data from the second (uninfected) data. Ide-
ally, the ability to ﬂexibly conﬁgure a collection of IDEAS
operations as above would allow analysts to perform the
forensic eﬀort in a few hours.

To verify the validity of our approach, we obtained actual
logs from a few Windows hosts that were infected with then-
zero-day ransomware Cryptowall 3.01 and uninfected hosts’
logs. We extracted attributes by counting what ﬁle names,
extensions, executed command line strings, and creator pro-
cesses. The ﬁrst few results of the IDEAS linear discriminant
analysis are shown in Figure 3. We veriﬁed the extracted
attributes of Cryptowall actions with analysts involved in
the manual investigation of logs; further, many of the Cryp-
toWall actions discussed in the footnoted URLs were iden-
tiﬁed as top ranking attributes by IDEAS. See our previ-
ous work for detailed experiments testing this concept using
WannaCry Ransomware [4] and other discriminant analysis
methods.

Situational Awareness of IP’s Roles: Analysts expressed
a blind spot in their situational awareness, namely, not un-
derstanding the network roles of machines; e.g., a worksta-
tion may be conﬁgured as a web server, but without this
knowledge analysts could mistake the large amount of traf-
ﬁc to that host for an attack. We build on our previous
work [8] to provide the insight through clustering. Using
our system, analysts would select the IPs and time windows
desired, and choose the percent of traﬃc on each well-known
port (0-1023) in each direction. As an example of informa-
tion learned from the output, web servers form two clusters
with discriminating attribute being most traﬃc is inbound
on port 80 (http) and 443 (https), while most workstations
form two clusters as web clients, with most data outbound
to the same two ports.

1https://digitalguardian.com/blog/detecting-
cryptowall-3-using-real-time-event-correlation,
https://sentinelone.com/blogs/anatomy-of-
cryptowall-3-0-a-look-inside-ransomwares-tactics/.

ually collect and query an enormous amount of data, but
they rely mainly on manual investigations and very sim-
ple analytics. IDEAS seeks to give analysts the capability
to leverage both their expertise and powerful data science
tools with no algorithmic expertise. Working with actual
analysts, we targeted the design of IDEAS around problem-
atic incidents or gaps in their capabilities. Three real-world
use cases are presented to illustrate the beneﬁt of IDEAS,
once suﬃciently developed. A high-level overview of soft-
ware engineering design choices is given.

IDEAS is prototyped with limited functionality in each com-
ponent, and future work to expand the capability is due. We
are on the verge of an initial deployment with a large cyber
operation for testing and reﬁnement. The system currently
can accept network ﬂow data and will be extended to host
logs and DNS data next. Currently, all three operations are
implemented and current work is focusing on the input UI
to admit a wider variety of attributes.

6. ACKNOWLEDGMENTS
Research sponsored by the Laboratory Directed Research
and Development Program of Oak Ridge National Labo-
ratory, managed by UT-Battelle, LLC, for the U. S. De-
partment of Energy. Jessie D. Jamieson was supported by
National Science Foundation Graduate Research Fellowship
under Grant No. 25-0517-0143-002. Any conclusions or rec-
ommendations expressed in this material are those of the
authors(s) and do not necessarily reﬂect the views of the
National Science Foundation.
7. REFERENCES
[1] Protocol buﬀers.

https://developers.google.com/protocol-
buffers/docs/overview. Accessed: 2018-05-18.

[2] R. A. Bridges, J. D. Jamieson, and J. W. Reed. Setting the
threshold for high throughput detectors: A mathematical
approach for ensembles of dynamic, heterogeneous,
probabilistic anomaly detectors. In Big Data. IEEE, 2017.
[3] R. J. Campello, D. Moulavi, and J. Sander. Density-based
clustering based on hierarchical density estimates. In
Paciﬁc-Asia conference on knowledge discovery and data
mining, pages 160–172. Springer, 2013.

[4] Q. Chen and R. A. Bridges. Automated behavioral analysis
of malware: A case study of WannaCry ransomware. In
Proc. 16th ICMLA. IEEE, 2017.

[5] M. Ester et al. A density-based algorithm for discovering
clusters in large spatial databases with noise. In KDD,
1996.

[6] E. M. Ferragut, J. Laska, and R. A. Bridges. A new,

principled approach to anomaly detection. In 11th ICMLA,
volume 2, pages 210–215. IEEE, 2012.

[7] J. R. Goodall et al. Situ: Identifying and explaining

suspicious behavior in networks, 2018. (to appear).

[8] K. Huﬀer and J. W. Reed. Situational awareness of network

system roles (SANSR). In Proc. CISRC. ACM, 2017.

[9] L. McInnes, J. Healy, and S. Astels. HDBSCAN :

Hierarchical density based clustering. The Journal of Open
Source Software, 2(11):205, 2017.

[10] D. Merkel. Docker: lightweight linux containers for

consistent development and deployment. Linux Journal,
2014(239):2, 2014.

[11] K. Varda. Protocol buﬀers. Google open-source blog

https://opensource.googleblog.com/2008/07/protocol-
buffers-googles-data.html, 2008.

[12] M. Welling. Fisher linear discriminant analysis. Department
of Computer Science, University of Toronto, 3(1), 2005.

Figure 6: IDEAS software architecture depicted.

Hunting Advanced Persistent Threats: Advanced Per-
sistent Threats (APTs) are adversaries using advanced/novel
techniques to maintain a long-term, stealth foothold in the
network. A general technique for identifying an APT used
by security operations is to look for lateral movement; e.g.,
some operators write custom code to plot graph statistics
of intra-organization IP-IP communications and look at the
changes over time. We propose using the anomaly detection
operation of our system to expedite this process. Speciﬁ-
cally, using DNS data or network ﬂow data, operators could
baseline the number of internal IPs a given host contacts
and/or the speciﬁc internal IPs contacted per day and pro-
duce an anomaly score for each subsequent day. This will
eﬀectively automate the custom code, and provide a princi-
pled framework to identify anomalies. Unlike the other two
use cases, we have not yet experimentally tested this conﬁg-
uration, but are working towards validating this concept.

4. SOFTWARE ARCHITECTURE
To provide a modular and ﬂexible system, we developed a
microservices architecture. To this end, we use Google’s
Protocol Buﬀers [1, 11], which provide “a language-neutral,
platform-neutral, extensible way of serializing structured data”,
and transmit the data using gRPC (https://grpc.io), a
framework for remote procedure calls. Figure 6 depicts
IDEAS’ current software architechture. This deﬁnes what
components are needed, the topology of how they communi-
cate, and deﬁnitions for what data types they input/output.
The beneﬁts of this design include the following: each com-
ponent can facilitate language-agnostic code for processing
and still communicate in a standard way; new components
can be easily incorporated; modularity by design will fa-
cilitate changes in the architecture when needed; use of
HTTP/2, a faster, more secure protocol than HTTP. To fa-
cilitate easy deployment, we have wrapped the system with
Docker [10], an open-source, virtualized container. The sys-
tem is designed to interface with Elasticsearch, as this is an
increasingly popular datastore for cyber operations.

5. CONCLUSION & PLANS
This paper introduces IDEAS, an interactive visual plat-
form designed to let cyber security analysts ﬂexibly conﬁg-
ure standard data science algorithms on their cyber data.
Large cyber operations now have the capability to contin-

