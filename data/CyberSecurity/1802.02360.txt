Cyber-Physical Architecture Assisted by Programmable
Networking

Jose Rubio-Hernan1, Rishikesh Sahay2, Luca De Cicco3, and Joaquin Garcia-Alfaro1

1 Institut Mines-T´el´ecom, T´el´ecom SudParis, France
2 Technical University of Denmark, Denmark
3 Politecnico di Bari, Italy

Abstract. Cyber-physical technologies are prone to attacks, in addition to faults and
failures. The issue of protecting cyber-physical systems should be tackled by jointly ad-
dressing security at both cyber and physical domains, in order to promptly detect and
mitigate cyber-physical threats. Towards this end, this letter proposes a new architecture
combining control-theoretic solutions together with programmable networking techniques
to jointly handle crucial threats to cyber-physical systems. The architecture paves the way
for new interesting techniques, research directions, and challenges which we discuss in our
work.

Keywords: Cyber-Physical Systems (CPS), Programmable Networking, Software-Deﬁned
Networks (SDN), Supervisory Control and Data Acquisition (SCADA), Control Theory.

1

Introduction

Cyber-physical systems integrate physical infrastructures over computing network resources, in
an eﬀort to reduce complexity and costs of traditional control systems. Modern industrial con-
trol systems are a proper example. They have evolved from networked-control systems that route
their underlying information in terms of physical measurement and feedback control. Traditional
security, from a network and computing security standpoint, is able to cover cyber threats, but
fails at addressing physical threats. Control-theoretic solutions, combined with network comput-
ing security techniques, can lead to powerful solutions to cover both physical and cyber-physical
attacks at the same time [13, 15, 18]. Nevertheless, guaranteeing the resilience of these systems
(i.e., to keep oﬀering critical functionality under attack conditions) is still an open and critical
problem to solve [23]. We argue that the use of Programmable Networking is a plausible solution
to eﬃciently handle such a problem.

Programmable networking is a paradigm to manage network resources in a programmatic
way. It can be used to decouple static network architectures and ease their management. Ad-
ditionally, it facilitates the decentralization of network control and processing of network data.
Control and data domains can be reprogrammed dynamically to enforce novel network appli-
cations and functionalities. Software-Deﬁned Networking (SDN) [6] is a promising technology
associated to the concept of programmable networking. The use of programmable networking
allows decoupling the control domain from the data domain [4]. Novel network functionality can
be devised and deployed depending on the current requirements. This includes the enforcement
of protection schemes to recover the system elements from attacks [3, 9, 22]. The use of pro-
grammable networking increases the visibility of controllers in terms of failure and attacks. It
enables network operators to take control over the network ﬂows based on dynamic conditions [1].
It also allows to control data domain devices from application-layer controllers, hence increas-
ing the ﬂexibility in terms of network reconﬁguration. For instance, applications at the control

8
1
0
2

b
e
F
7

]

R
C
.
s
c
[

1
v
0
6
3
2
0
.
2
0
8
1
:
v
i
X
r
a

 
 
 
 
 
 
2

Rubio-Hernan, Sahay, De Cicco, Garcia-Alfaro

domain can dynamically deploy policies over the networked-devices via high-level programming
languages [20].

In this letter, we present a novel approach towards the development of a programmable cyber-
physical system. Network and physical controllers get connected towards coordinating resilience
strategies, e.g., to maintain the resilient properties of the system under failure and attacks, at
any layer of the resulting architecture. The proposed architecture is experimentally validated
by means of current programmable and cyber-physical technologies. More speciﬁcally, we show
a proof-of-concept design combining SCADA (Supervisory Control And Data Acquisition) pro-
tocols and SDN-enhanced topologies, in order to evaluate the improvement of detection and
mitigation capabilities of the resulting system.

The remainder sections of this letter are organized as follows. Section 2 presents our envi-
sioned architecture. Section 3 discusses about the advantages and limitations of our proposal,
w.r.t. experimental feasibility of our work. Section 4 closes the letter with some conclusions and
perspectives of future work.

2 Our Proposal

2.1 Combining two complementary paradigms

Cyber-physical systems and programmable networking are two complementary paradigms, but of-
ten separately addressed by two diﬀerent research communities (control and computing-network
communities). Both paradigms use similar elements, that can be presented either following
control-theoretic architectures [10] or via computer-based programmatic deﬁnitions [12]. In the
control community, cyber-physical systems are regarded as a particular class of networked-control
systems [10] (cf. Figure 1). Particularly, feedback control is managed by the following elements.
Controllers, located within the cyber layer of the system (i.e., the layer related to the network
and computing resources), monitor and supervise information produced by physical sensors re-
porting measurements from physical processes. Based on the sensor measurements, controllers
dynamically compute corrective actions which are put in place by system actuators, to steer the
physical processes to the desired states.

Programmable networking can be represented using similar elements and deﬁnitions [12], as
depicted in Figure 1. In such a representation, the controller is governed by software elements,
supervising both the management and the control domains of a programmable architecture.
The controller manages the behavior of all the interactions at the data domain, where network
elements (e.g., network switches) follow some precise policies directed by the controller (e.g., to
enforce routing and security strategies). The remainder elements of the network get permanently
monitored by the controller, and orchestrated via control policies to improve, e.g., the routing
of traﬃc or the enforcement of network security countermeasures. To conduct monitoring at
the data domain, several network probes (referred to as meters in Figure 1) report networking
measurements to the controller.

2.2 Towards resilient control systems

A crucial goal of both cyber-physical designs and programmable networking is to ensure resilient
control systems. Resilience is a property that has been studied for many years in diﬀerent areas
of knowledge. Laprie [8] deﬁnes the resilience of a system as the persistence of dependability when
facing changes in the system. Dependability has also been expressed by Ellison et al. as the
avoidance of failures that are unacceptably frequent or severe [2]. From these two deﬁnitions, we
see that resilience deals with the management of operational functionality that is crucial for a

Cyber-Physical Architecture Assisted by Programmable Networking

3

system, and that cannot be stopped. In other words, system functionality that shall be properly
accomplished. For instance, the cooling service of reactor in a nuclear plant is a proper example
of a critical functionality.

Other system functionalities may be seen as less important. They can even be temporarily
stopped or partially accomplished. Such type of functions can be seen as secondary functions. A
printing service for employees in the aforementioned nuclear plant scenario is a proper example
of a secondary function. Another important element to take into consideration is the severity of
failures. The more severe a failure is, the more it will aﬀect the related system. Also, the more
severe the failure, the harder will be for the system to recover the nominal system functionalities.
Several works have focused on these issues when addressing the survivability of critical system
functionalities (see, for instance, reference [11] and citations thereof).

Finally, a resilient control system shall able to [16]: (i) detect undesirable threats; (ii) min-
imize the impact of such threats; and (iii) mitigate them (i.e., recover to normal operation in
a reasonable time). Solutions include the use of redundancy (e.g., use of software replicas), the
enforcement of system segmentation, and the inclusion of diﬀerent levels of protection (e.g., se-

(a) Proposed architecture,
grammable networking

combining feedback control and pro-

Feedback
Controller

Programmable
Network Controller

s
r
o
s
n
e
S

Physical
System

s
r
o
t
a
u
t
c
A

s
e
b
o
r
P

Network

s
r
o
t
c
e
f
f

E

(b) Closed-loop feedback control

(c) Programmable networking

Fig. 1. Proposed architecture

4

Rubio-Hernan, Sahay, De Cicco, Garcia-Alfaro

cure handshakes, message signatures, and encryption). In the end, the goal is to include enough
security measures to closing the system monitoring loop with additional responses that mitigate
the undesirable events. In other words, inclusion of mitigation techniques to keep processes in
a normal operating state while the system is confronted to failures and attacks. The challenge
of satisfying those previous requirements on a cyber-physical system is the diﬃculty of prop-
erly diﬀerentiating failures from attacks, since their underlying security models (e.g., in terms of
mitigation) diﬀer as well.

2.3 Cyber-Physical Architecture Assisted by Programmable Networking

Taking into account the aforementioned descriptions and goals, in this section we propose a
resilient cyber-physical architecture assisted by programmable networking. The proposed archi-
tecture allows creating a cross control layer between the physical and the cyber layers. The
resulting design aims to enable the combination of diﬀerent security models, e.g., from a security
and safety standpoint. For instance, to enable adaptive mitigation of threats, making possible to
diﬀerentiate between faults, failures and attacks, prior enforcing the eventual mitigation strate-
gies. The use of programmable networking allows to move to a higher level of abstraction when
analyzing the system threats (in contrast to traditional solutions anchored at the data domain),
moving the defense at the same level of cyber-physical adversaries, assumed to be entities with
equivalent powers (e.g., in terms of observability and controllability).

Figure 1(a) shows our proposed framework of a programmable networking assisted cyber-
physical system. The framework contains diﬀerent components of programmable networking
(PN) technologies and cyber-physical systems (CPS): (1) The data domain is mainly comprised
of two sub-spaces: A physical space composed by physical sensors and actuators, which are used
by the CPS to communicate with the physical processes located in the physical system (also lo-
cated in the physical space). These devices communicate with the Feedback controller to manage
the physical processes; And a network space composed by PN switches, which are programmable
network switches controlled dynamically. This dynamic control enables us to minimize the deploy-
ment cost of the network framework, as to improve and manage many other network features [21],
e.g., QoS and security requirements. PN switches use a centralized framework with an interface
to control and manage all the network features dynamically; (2) The management and control
domain contains two diﬀerent controllers working on a joint and coordinated way, to fully cover
the control of the resulting framework. The controllers are: (i) a Feedback controller and (ii) a
Programmable Network (PN) controller.

The Feedback controller is made of two sub-components: (a) A feedback controller that is
in charge of enforcing the dynamical control objectives (fast dynamics are involved); (b) A
supervisor controller that communicates in a bi-directional way with the PN controller in the
following way. The PN controller, based on measurements provided by probes and feedback
provided by the Feedback controller, is able to detect a possible threat acting on the control
path. In response to such a threat, the PN controller provides a corrective measure to mitigate
the impact. The PN controller can be seen as a computing entity that is located at an external
location (e.g., a kind of Network Operating System [6]). For instance, it provides resources and
abstractions to manage the system using a centralized or a decentralized model [17].

Together, both controllers manage the data domain. Feedback controller manages the physical
system through physical sensors and actuators deployed at the physical layer. And the PN
controller estimates and manages the data domain through network probes and eﬀectors —
deployed at the management and control domain. It is worth noting that the PN controller
uses system identiﬁcation tools to estimate the behavior matrices of the physical system. As
a result, it can compare the nominal cyber-physical system model (i.e., the behavior matrices)

Cyber-Physical Architecture Assisted by Programmable Networking

5

with the model estimated by the Feedback controller. The correlation between both estimations
allows to detect anomalies in the system (cf. reference [17], for a sample technique based on
the same principle). Notice that such anomalies can either be unintentional failures, or stealthy
attacks disguised by intentional modiﬁcations produced by a malicious entity who is willing to
disrupt the physical system [18, 19]. Assuming a system with appropriate measure to detect
both failures and attacks, the PN controller can react to those anomalies, by enforcing some
mitigation policies. At the data domain, we have network probes and eﬀectors, conducting data
monitoring —if instructed by the control domain. Network probes monitor the traﬃc in the
data domain and provide the information to the PN controller. The PN controller analyses the
information and forwards control actions to the eﬀectors. Network rules at the control domain
are responsible to enforcing such actions. For instance, when a network probe ﬁnds tampered
traﬃc in a network path, it provides the tampered information to the control domain. Then, the
PN controller, located at the control domain, checks for the available resources in, e.g., a path
lookup component, and provides new routes to enforce the action. For instance, it may redirect
the tampered traﬃc to provide fair share of network bandwidth w.r.t. legitimate traﬃc.

Another important component of the management and control domain is the Path Lookup.
Paths in the framework are pre-computed. Normally, a list of paths are maintained at the control
domain. The path lookup component maintains a table of paths (from the ingress switch to the
egress switch) sorted according to the quality of service provided by the paths, associated to
unique labels. Paths are later assigned to ﬂows based on the traﬃc class that they belong to.
This is a crucial component of the overall system. Resiliency to attacks can be implemented
by using multi-path communication between cyber-physical system components or by activating
new paths (even suboptimal) to evade an attack. For example, legitimate ﬂows are assigned to
high priority paths while suspicious ﬂows are assigned to paths containing middleboxes or paths
having low bandwidth and longer in terms of hops, to ﬁnally forward the malicious ﬂows through
paths which lead to a sinkhole.

3 Validation and Discussion

To validate the feasibility of our proposal, we are currently implementing a proof-of-concept pro-
totype based on the architecture proposed in this letter. The prototype combines the components
of a cyber-physical system together with programmable networking technology. It builds upon
Mininet [7], a network emulator tool which provides a rapid prototyping for programmable net-
working. The protocol used to instantiate the programmable networking techniques is OpenFlow.
It allows controlling the path of the network traﬃc through programmable networking switches.
For the implementation of cyber-physical system, we use the SCADA (Supervisory Control And
Data Acquisition) Modbus protocol [14]. Further information about the proof-of-concept proto-
type and ongoing results is available online.

For the time being, the programmable networking controller of the prototype instructs the
network probes of a cyber-physical system (e.g., autonomous movable vehicles) to monitor traf-
ﬁc from data domains, in order to investigate the existence of malicious traﬃc evidences. More
speciﬁcally, the programmable networking controller receives traﬃc header details (such as source
IP address, destination IP address and protocol) along with payload data containing networked-
feedback measurements from the physical domains. The programmable networking controller
cooperates with the Feedback controller. It analyzes anomalous details and may shares informa-
tion with the Feedback controller. Whenever the level of suspicious events reaches a conﬁgurable
threshold, the programmable networking controller may decide to send the measurements to, e.g.,
quarantine subnetwork, by redirecting the suspicious traﬃc through alternative routing paths [5].
This solution, based on the path lookup module of Mininet, uses network traﬃc labeling to mark

6

Rubio-Hernan, Sahay, De Cicco, Garcia-Alfaro

down the suspicious events. This is implemented in practice by adding an additional functional-
ity to the Mininet programmable networking controllers that deploys mitigation rules to handle
suspicious traﬃc at the edge of the programmable networking switches of the cyber-physical
system. The redirection of traﬃc is enforced by the network eﬀector of the system, in order to
enable quarantining plans. Some more practical details and video captures of the proof-of-concept
prototype are available online at http://j.mp/TSPCPSDN.

The aforementioned prototype validates the architecture proposed in this letter. It promotes
cooperation between controllers located at both management and control domains of a cyber-
physical system. Nevertheless, further analysis is required w.r.t. the duality of goals of each
controller paradigm represented in the architecture depicted in Figure 1(a). In some cases, the
two combined paradigms may be driven with diﬀerent objectives. A more thorough study shall
be conducted to identify how the controllers achieve a common goal (e.g., guaranteeing cyber-
resilience of the underlying system) withing interfering their primary objectives (i.e., networking
and physical control objectives). To make a concrete example, the Feedback controller can report
an anomalous deviation of the sensor readings from the nominal behavior as a feedback to the
PN controller. This issue could be due to sensors being faulty or due to an attack whose surface
intersects with the control paths. Unfortunately, the Feedback controller alone is not able to
distinguish between the two events since it has no view of the underlying network (information
hiding). In response to such a situation, the Feedback controller sends an alert signal to the
programmable networking controller which veriﬁes if the control path (which is unknown to
the Feedback controller) is likely to be under attack. In case of an attack is detected by the
programmable networking controller, it puts in place the corrective measures (i.e., segregate
malicious traﬃc programmatically) and sends a signal to the Feedback controller, to report that
a corrective action has been taken into account. Notice that sophisticated attacks to the system
could escape the detectors running solely in the cyber-layer. When this is managed as well by
the Feedback controller, stealthy attacks hidden as failure and faults will be identiﬁed. A more
precise evaluation of this type of scenarios will be provided in a forthcoming publication.

4 Conclusion

This letter shows that programmable networking and feedback control can be combined together
in order to build higher resilient cyber-physical systems. We argued that the construction a
programmable networking-assisted cyber-physical architecture, improves detection and mitiga-
tion of cyber-physical attacks. It allows cooperation between traditional Feedback controllers
and programmable networking devices, to allow more eﬃcient mitigation of threats (e.g., by
providing evidences about stealthy cyber-physical attacks disguised as failures and faults). Next
steps include a more thorough analysis about the cooperation of controllers, as well as investiga-
tion about the eﬀective activation of cyber-physical resilience by combining novel detection and
mitigation strategies.

Acknowledgment

The research in this paper has received partial funding from the Cyber-CNI Chair of the Institut
Mines-Telecom (http://chaire-cyber-cni.fr/).

References

1. M. Al-Fares, S. Radhakrishnan, B. Raghavan, N. Huang, and A. Vahdat. Hedera: Dynamic Flow
Scheduling for Data Center Networks. In Proceedings of the 7th USENIX Conference on Networked

Cyber-Physical Architecture Assisted by Programmable Networking

7

Systems Design and Implementation, NSDI’10, pages 19–19, Berkeley, CA, USA, 2010. USENIX
Association.

2. R. J. Ellison, D. A. Fisher, R. C. Linger, H. F. Lipson, and T. Longstaﬀ. Survivable network systems:
An emerging discipline. Technical report, Carnegie-mellon Univ Pittsburgh PA Software Engineering
Inst, 1997.

3. S. K. Fayaz, Y. Tobioka, V. Sekar, and M. Bailey. Bohatei: Flexible and Elastic DDoS Defense.
In 24th USENIX Security Symposium (USENIX Security 15), pages 817–832. USENIX Association,
Aug 2015.

4. O. N. Foundation. Software-Deﬁned Networking: The New Norm for Networks. Technical report,

Open Networking Foundation, April 2012.

5. N. Hachem, H. Debar, and J. Garcia-Alfaro. HADEGA: A novel MPLS-based mitigation solution
to handle network attacks. In 31st IEEE International conference on Performance Computing and
Communications (IPCCC 2012), pages 171–180. IEEE, December 2012.

6. D. Kreutz, F. M. V. Ramos, P. E. Verissimo, C. E. Rothenberg, S. Azodolmolky, and S. Uhlig.
Software-Deﬁned Networking: A Comprehensive Survey. Proceedings of the IEEE, 103(1):14–76,
Jan 2015.

7. B. Lantz, B. Heller, and N. McKeown. A Network in a Laptop: Rapid Prototyping for Software-
deﬁned Networks. In 9th ACM SIGCOMM Workshop on Hot Topics in Networks, pages 19:1–19:6,
New York, NY, USA, 2010. ACM.

8. J.-C. Laprie. From dependability to resilience. In 38th IEEE/IFIP Int. Conf. On Dependable Systems

and Networks, pages G8–G9, 2008.

9. J. Li, S. Berg, M. Zhang, P. Reiher, and T. Wei. Drawbridge: Software-deﬁned DDoS-resistant Traﬃc
Engineering. In Proceedings of the 2014 ACM Conference on SIGCOMM, pages 591–592, New York,
NY, USA, 2014. ACM.

10. M. Lindberg and K.-E. Arzen. Feedback Control of Cyber-physical Systems with Multi Resource
Dependencies and Model Uncertainties. In 2010 31st IEEE Real-Time Systems Symposium, pages
85–94, Nov 2010.

11. R. C. Linger, N. R. Mead, and H. F. Lipson. Requirements deﬁnition for survivable network systems.
In In Proceedings of Third International Conference on Requirements Engineering, pages 14–23.
IEEE, 1998.

12. N. Matni, A. Tang, and J. C. Doyle. Technical report: A case study in network architecture tradeoﬀs.

Technical report, Technical Report, 2015.

13. Y. Mo, S. Weerakkody, and B. Sinopoli. Physical Authentication of Control Systems: Designing Wa-
termarked Control Inputs to Detect Counterfeit Sensor Outputs. IEEE Control Systems, 35(1):93–
109, February 2015.

14. Modbus Organization. Oﬃcial Modbus Speciﬁcations, 2016, http://www.modbus.org/specs.php,

Last access: January 2018.

15. F. Pasqualetti, F. Dorﬂer, and F. Bullo. Control-Theoretic Methods for Cyberphysical Security:
Geometric Principles for Optimal Cross-Layer Resilient Control Systems. IEEE Control Systems,
35(1):110–127, Feb 2015.

16. C. Queiroz Batista Da Silva. A holistic approach for measuring the survivability of SCADA systems.

PhD thesis, RMIT University, 2012.

17. J. Rubio-Hernan, L. De Cicco, and J. Garcia-Alfaro. Event-Triggered Watermarking Control to
Handle Cyber-Physical Integrity Attacks. In 21st Nordic Conference in Secure IT Systems (NordSec
2016), Oulu (Finland), pages 3–19. Springer, Nov 2016.

18. J. Rubio-Hernan, L. De Cicco, and J. Garcia-Alfaro. Adaptive Control-Theoretic Detection of In-
tegrity Attacks against Cyber-Physical Industrial Systems. Transactions on Emerging Telecommu-
nications Technologies, 2017.

19. J. Rubio-Hernan, L. De Cicco, and J. Garcia-Alfaro. On the use of Watermark-based Schemes to

Detect Cyber-Physical Attacks. EURASIP Journal on Information Security, 2017(1):8, Jun 2017.

20. R. Sahay, G. Blanc, Z. Zhang, and H. Debar. ArOMA: An SDN based autonomic DDoS mitigation

framework. Computers and Security, 70(Supplement C):482 – 499, 2017.

21. S. Sharma. Programmable Ethernet Switches and Their Applications. PhD thesis, Stony Brook, NY,

USA, 2008. AAI3406709.

8

Rubio-Hernan, Sahay, De Cicco, Garcia-Alfaro

22. S. Shin, P. A. Porras, V. Yegneswaran, M. W. Fong, G. Gu, and M. Tyson. FRESCO: Modular
Composable Security Services for Software-Deﬁned Networks. In Proceedings of the ISOC Network
and Distributed System Security Symposium (NDSS), 2013.

23. D. I. Urbina, J. Giraldo, A. A. Cardenas, J. Valente, M. Faisal, N. O. Tippenhauer, J. Ruths,
R. Candell, and H. Sandberg. Survey and New Directions for Physics-Based Attack Detection
in Control Systems.
In Grant/Contract Reports (NISTGCR), pages 1–37. National Institute of
Standards and Technology (NIST), Nov 2016.

