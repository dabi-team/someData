1
2
0
2

r
a

M
6

]
I

A
.
s
c
[

1
v
3
2
1
6
0
.
3
0
1
2
:
v
i
X
r
a

The whole brain architecture approach: Accelerating
the development of artiﬁcial general intelligence by
referring to the brain

Hiroshi Yamakawaa,b,c

aThe Whole Brain Architecture Initiative, Nishikoiwa 2-19-21, Edogawa-ku, Tokyo,
133-0057, Japan
bThe University of Tokyo, 7-3-1 Hongo, Bunkyo-ku, Tokyo 113-0033, Japan
cRIKEN, 6-2-3, Furuedai, Suita, Osaka 565-0874, Japan

Abstract

The vastness of the design space created by the combination of a large num-
ber of computational mechanisms, including machine learning, is an obstacle
to creating an artiﬁcial general intelligence (AGI). Brain-inspired AGI devel-
opment, in other words, cutting down the design space to look more like a
biological brain, which is an existing model of a general intelligence, is a promis-
ing plan for solving this problem. However, it is diﬃcult for an individual to
design a software program that corresponds to the entire brain because the
neuroscientiﬁc data required to understand the architecture of the brain are
extensive and complicated. The whole-brain architecture approach divides the
brain-inspired AGI development process into the task of designing the brain
reference architecture (BRA)—the ﬂow of information and the diagram of cor-
responding components—and the task of developing each component using the
BRA. This is called BRA-driven development. Another diﬃculty lies in the
extraction of the operating principles necessary for reproducing the cognitive-
behavioral function of the brain from neuroscience data. Therefore, this study
proposes the Structure-constrained Interface Decomposition (SCID) method,
which is a hypothesis-building method for creating a hypothetical component
diagram consistent with neuroscientiﬁc ﬁndings. The application of this ap-
proach has begun for building various regions of the brain. Moving forward, we
will examine methods of evaluating the biological plausibility of brain-inspired
software. This evaluation will also be used to prioritize diﬀerent computational
mechanisms, which should be merged, associated with the same regions of the
brain.

Keywords: Brain reference architecture, Structure-constrained Interface
Decomposition method, Brain information ﬂow, Hypothetical component
diagram, Brain-inspired artiﬁcial general intelligence, Whole brain architecture

(cid:63)
∗Corresponding author

Preprint submitted to Neural Networks

March 11, 2021

 
 
 
 
 
 
1. Introduction

The development of artiﬁcial general intelligence (AGI), which is the goal of
advanced artiﬁcial intelligence (AI) research in recent years, is to develop and
demonstrate the extensive general intelligence possessed by humans within a
computational system [1, 23]. An exceptionally essential ability of AGI would
perhaps involve solving various problems, including those on unknown issues,
by ﬂexibly combining knowledge gained from experience However, the method
to develop AGI remains unclear. Many AI researchers believe that the devel-
opment of deep learning [33] was a launch pad towards this goal. According
to them, this goal can be realized by combining various computational mech-
anisms, including machine learning, a method that allows a machine to learn
knowledge from experience. Certainly, there have been attempts to create a
uniﬁed theory and principle of intelligence [19, 14, 25]. However, there is no sin-
gle theory on which the entire sphere of intelligence can be built. Thus far, the
development of AGI has made progress by repetitively tuning various limited
issues. Nevertheless, such an approach would make it diﬃcult to design an AGI
with a ﬂexible problem-solving ability that would enable it to solve unknown
issues. Building an AGI that has the full extent of human abilities would re-
quire an extremely large design space as a result of combining computational
mechanisms. This design space could also be explored mechanically [12], but for
the time being, it is diﬃcult to secure the required computational complexity.
Brain intelligence is associated with a certain degree of versatility. If we can
narrow down the design space by referring to the architecture of cognitive and
behavioral functions in the brain [40], we can accelerate the development of an
AGI that is comparable to human intelligence. Simply put, even if the scope
of AGI realized by machines (machine kingdom) does not need to be bound by
biological constraints [28], the development of a brain-like architecture could be
an agreed-upon milestone in AGI development [26, 24].

Based on this technological background, we at the Whole Brain Architecture
Initiative (WBAI) have been advocating for a development approach called the
whole brain architecture (WBA) approach since 2015. We deﬁne the basic idea
of this AGI development approach as creating ”a human-like artiﬁcial general
intelligence by learning from the architecture of the entire brain” [61, 5]

The premise of this approach is that the functions of the brain can be realized
by combining several machine learning devices with well-deﬁned functions. By
imitating the structure of the brain and combining machine learning devices
that imitate each brain function, it is possible to build an AGI with abilities
that are similar to or beyond those of humans. This approach, therefore, uses
a WBA-centered hypothesis. Based on this hypothesis, a machine learning
module is developed for each part of the brain and the software is constructed
by integrating these modules.

Based on these assumptions, the WBA approach aims to build a brain-
inspired AGI based on the following basic ideas. As shown in Fig.1, each brain

2

Figure 1: Basic scheme of a whole-brain architecture approach. This is a revised version of a
simpliﬁed diagram of the basic idea of the WBA approach, which has been gradually formed
since around 2014. The left side of the ﬁgure highlights major examples of large organs in
the brain, including the neocortex, basal ganglia (BG), hippocampus, and amygdala. An
additional brain architecture is formed by the connections between these organs (not shown).
On the right side of the ﬁgure, computational modules, including those utilizing machine
learning, are placed and connected with reference to the architecture of the brain. Building an
artiﬁcial intelligence software system that can operate while interacting with the environment
through the body is based on this scheme.

organ is implemented as a calculation module, including those that utilize ma-
chine learning, and is integrated based on the architecture of the brain. The
brain organs shown in the ﬁgure are fairly coarse, but in reality they are as-
sociated with the brain in units of ﬁner-grained computational modules (see
2.1).

It is not realistic to construct a brain-inspired AGI software by directly
referring to neuroscientiﬁc ﬁndings in academic papers and data. This is because
the functions of the brain are diverse, and the neuroscientiﬁc ﬁndings about
these functions are vast. Furthermore, the number of people who thoroughly
understand neuroscience and can develop software are limited, as it involves
intensive training.

To overcome this problem, WBAI standardizes information corresponding
to the requirements for developing brain-inspired software as brain reference
architecture (BRA) data. The methods of BRA design and utilization are shown
in Fig. 2 [45]. We refer to this as BRA-driven development.

The BRA is a mesoscopic-level reference architecture (discussed later). It
contains a description of the brain information ﬂow (BIF) within the anatomical
structures that is consistent with the hypothetical component diagram (HCD)
related to computational functions. The BIF is a directed graph made up of
partial circuits and connections representing the anatomical structure of neural
circuits. The HCD is a representation of a directed graph that details the
dependency relationship of components and can correspond to any subgraph in
BIF (see Subsection 2.3 for details).

3

Architecture of the BrainBrain-inspired Artificial IntelligenceRewardPerceptionActionIntentionUtilityStateStateHippo-campusBGReward generationAmygdalaUtility evaluationState transitionEnvironmentExecutionRecognitionNeocortexUtilityNeocortexHippocampusBGAmygdalaFigure 2: BRA-driven development, which consists of the work of developing brain-inspired
software using the BRA and the work of designing the BRA based on neuroscientiﬁc knowledge
(papers and data). The BRA consists of the brain information ﬂow (BIF) and the hypothetical
component diagram (HCD).

Therefore, even a developer with limited knowledge of neuroscience can im-
plement the software provided that the BRA is given, and the HCD contained
in the BRA is regarded as a requirement.

The development of brain-inspired software requires HCDs that cover all the
regions of the brain. However, creating such HCDs is not an easy feat. Even
with the recent, rapid developments in neuroscience, the operating principles
have been described for only a few regions in the brain. To overcome this sit-
uation, we have developed the Structure-constrained Interface Decomposition
(SCID) method. This method allows the creation of an HCD while compen-
sating for the lack of information on operating principles. One advantage of
SCID is that it is able to design HCDs consistent with the anatomy of a fairly
wide area of the brain. Therefore, the SCID method is a powerful technique to
help us create a BRA that covers the whole brain. An AGI can make eﬀective
inferences in a situation that it has not directly experienced. Therefore, it must
have the ability to eﬃciently acquire knowledge common to various tasks from
ﬁnite experience, while focusing on various parts of the world, and to ﬂexibly
combine them. However, software developed with reference to diﬀerent HCDs
can only be implemented for each task that the respective HCD assumes; there-
fore, acquiring and using knowledge for tasks apart from those tasks tend to
be diﬃcult. This situation needs to be overcome in AGI development. In this
regard, the WBA approach will use merge development, which integrates multi-
ple diﬀerent computational mechanisms related to the same brain regions with
a certain granularity. In the near future, BRA-based developments will proceed
alongside a parallel or iterative development that will merge the deliverables of

4

Brain Reference Architecture (BRA)The Truth about the BrainBrain-inspired softwareNeuroscience papers and datascienceUtilizeBRAconstructBrain information flow (BIF)Hypothetical component diagram (HCD)constraindevelopmentDesignBRABRA-based developments.

As BRA-driven developments progress, their deliverables tend to move away
from the reality of the brain, which is a problem because the WBA approach
aims to explore AGI within a design space close to that of the brain. To cir-
cumvent this problem, it is necessary to continue evaluating how well the im-
plemented brain-inspired software reproduces the truth of the brain (the parts
related to the level of cognitive behavior) perceived by neuroscience. The evalu-
ation of such biological plausibility is carried out from two viewpoints. The ﬁrst
evaluation is adequacy for BRA to assess whether it is consistent with existing
neuroscience ﬁndings. The other is the evaluation of ﬁdelity or whether the
software is built according to the BRA [58, 60].

Section 2 delves into the BRA and discusses the description level at which
the brain-inspired AGI should learn about the brain; the BIF format, which is an
element for describing the BRA; and the HCD. Furthermore, we will also provide
an overview of BRA-driven development. Section 3 discusses the collection
of neuroscientiﬁc ﬁndings related to BRA design, SCID, and the evaluation
of BRA validity. Section 4 discusses the stub-driven development and merge
development using the BRA and methods of evaluating the ﬁdelity of software
from the perspective of the BRA in the future. Finally, these discussions are
summarized.

1.1. Related AGI development approaches

At the end of 2020, there exists at least 72 projects involved in AGI devel-
opment; looking at the changes since 2017, the overall number has not changed
much. However, 15 new projects, mostly from the private sector, have been
added during this period[17, 7].

In many AI projects, the researcher designs, implements, and evaluates a
combination of computational mechanisms that enable the software to per-
form cognitive-behavioral functions. Projects following the traditional ﬂow that
starts with symbolic AI have a large design burden. Examples of these problems
are ACT-R [4], SOAR [32], ICARUS [11], LIDA [18], NARS [55], Sigma [43],
CLARION [47], and CogPrime [22]. Hierarchical Temporal Memory [27, 29]
is an advanced AGI development project that mainly started with mimicking
neocortical functions in the brain using an artiﬁcial neural network and the
brain’s learning mechanism [27, 29]. Part of that ﬂow was taken over by the
Vicarious project [21]. Many projects started around 2015, when steady strides
in the development of deep learning began. For example, in addition to OpenAI
[10], which produced remarkable language model results in recent years, there
is GoodAI, NNAISENSE, and WBA. Founded in 2010, DeepMind has been
developing AGI centered on deep learning and reinforcement learning while ref-
erencing the brain with a relatively high level of abstraction [36, 46]. The Nego
project [15, 13] is attempting to mimic the entire cognitive-behavioral function
of the brain at the level of spiking neurons; however, the project is not considered
to be explicitly challenging AGI [17].

Related research areas to explore cognitive systems include biologically in-
spired cognitive architecture [44, 24] and cognitive computational neuroscience

5

[30], an interdisciplinary ﬁeld of cognitive science and computational neuro-
science, among others. However, these ﬁelds have not made progress in accu-
mulating design data in a standardized way like the BRA.

Given that the brain is a type of natural object, it is rational to design AI by
imitating physical processes that are similar to physical simulation and to eval-
uate it by how well the physical stimulation has been reproduced. In practice,
studies on whole-brain simulation have been carried out with this perspective
[9, 34]. If the physical processes that support cognitive-behavioral function can
be fully elucidated and a basic equation can be developed, it is highly possi-
ble that human-like intelligence can be reproduced through such an approach.
However, neuroscience, as it is right now, has not yet reached this level of detail,
and it is hard to tell when it will achieve this. This is because it is still diﬃcult
to observe the neural activity of the whole brain with suﬃcient spatiotemporal
resolution. Even if the activity can be observed, it remains diﬃcult to connect
complex processes in the living body to functional operating principles.

2. Brain Reference Architecture

The BRA is a reference model that aggregates neuroscientiﬁc ﬁndings (on
anatomical structures or physiological phenomena) on the mesoscopic-level ar-
chitecture of the brain and gives a hypothesis of computational function con-
sistent with those ﬁndings. Speciﬁcally, as shown in Fig. 3, the data is a
combination of BIF (see Subsection 2.2) and HCD (see Subsection 2.3) [45].

The current WBA approach involves BRA-driven development. This devel-
opment consists of a BRA design based on neuroscientiﬁc ﬁndings and BRA
utilization that implements and evaluates its processes by referring to the HCD
in the BRA.

After describing the BRA at the mesoscopic level, we will discuss the BIF
as a component of the BRA and HCD, which are designed to be consistent with
the BIF. We will also discuss BRA-driven developments

2.1. Referenced mesoscopic level

What part of neuroscience should the WBA approach refer to? Generally,
the following can be said about the granularity that should be referred to when
trying to reproduce the cognitive-behavioral function of the brain. Coarse-
grained references to large regions of the brain (e.g., neocortex, hippocampus,
basal ganglia, and cerebellum) are too weak to recreate cognitive-behavioral
functions of the brain. However, conversely, trying to reproduce the details in-
side the neuron (e.g., metabolism) complicates the construction of the design
and increases the computational resources required to run a model that reﬂects
this information, resulting in great disadvantages. Therefore, the reference gran-
ularity in the WBA approach should be assumed to be at the mesoscopic level.

6

Figure 3: Brain reference architecture. The BRA consists of the BIF and the HCD. The BIF
is the mesoscopic level information ﬂow in anatomical structures. The HCD is a diagram that
organizes functions in a way that is consistent with the anatomy of a given circuit. There
can be multiple HCDs for a single circuit for the BIF. Each software development project is
essentially based on a speciﬁc HCD.

2.1.1. Uniform circuit: Finest reference granularity for brain architecture

In component diagrams that attempt to associate neural circuits, the small-
est unit to be described is the argument speciﬁed in the interface of each compo-
nent (see the right side of Fig. 6). As an important property of this argument,
the transmitting side and the receiving side have a transmitted signal in com-
mon. In communication between living neurons, the receiving neuron biochem-
ically identiﬁes its type or subtype by coming into contact with the axon tip
of the transmitting neuron (see Fig. 4). In this regard, a mostly homogenous
neuron population belonging to the same brain region is deﬁned as a uniform
circuit. Then, because it is a uniform circuit, it can function as an argument in
the software.

In well-studied regions of the brain, there are some known examples wherein
variables that describe computational models related to cognitive-behavioral
function match the uniform circuit.
It is often suggested that this level of
anatomical granularity has been implicated in the construction of cognitive and
behavioral functions across species [8, 39]. Therefore, in the WBA approach,
we decided to essentially refer to neuroscientiﬁc ﬁndings at the mesoscopic level
with the uniform circuit as the lower limit of descriptive granularity.

2.2. Brain information ﬂow

The BIF describes the anatomical structure of the whole brain at the meso-
scopic level [6] (see Fig. 5). As such, it is not intended for speciﬁc tasks in

7

Brain Reference Architecture (BRA)Hypo. component diagram(HCD)Hypo. component diagram(HCD)Hypo. component diagram(HCD)constrainBrain information flow (BIF)2BECD156743Mesoscopic level information flow in anatomical structures circuitsNeuroscience papers and dataThe Truth about the BrainUtilizeBRADesignBRAscienceconstructdevelopmentBrain-inspired softwareBrain-inspired softwaredevelopmentdevelopmentBrain-inspired softwareA diagram that tries to organize functions in a way that is consistent with the anatomy of a given circuit.Environment (various tasks)Function of components: A, B, C, D, EMeaning of connections：1, 2,3,4,5,6Connec-tionsFigure 4: Uniform circuits. Uniform circuits are composed of the same type or subtype of
neurons that are spatially localized. Each neuron in the transmitting uniform circuit that
extends axons to the receiving neuron will be recognized as physiologically identical on the
receiving side.

the environment. BIF is a graph, and its basic structure consists of a node
called a ”circuit” and a directed link called a ”connection.” The smallest unit of
the graph is the uniform circuit deﬁned in Subsection 2.1, and this unit is also
the ideal starting point for a connection. A circuit is also a graph containing
multiple uniform circuits. Furthermore, multiple circuits may have overlapping
portions.

The circuits and connections are discussed below.

2.2.1. Circuits (nodes)

A circuit is a component that becomes a node in the graph structure of the
BIF. A uniform circuit is a special circuit that is the lower limit of the BIF
granularity. A circuit can generally be any sub-circuit in the brain.
It may
indicate areas such as the entire visual cortex or only V1 (i.e., the primary
visual cortex), or it may correspond to the neocortex-basal ganglia loop. The
attributes possessed by all circuits include labels, partial circuits, animal species,
and references. Furthermore, unique attributes of the uniform circuit include
neurotransmitters, excitatory and inhibitory modes, and cell count.

2.2.2. Connections (links)

Connections correspond to a bundle of axons responsible for signal trans-
duction between circuits in the brain and are represented by a direct link. The
main attributes possessed by one connection is the input circuit, which is a uni-
form circuit that transmits signals, and the output circuit, which sends signals
from the connection. Furthermore, animal species, the size corresponding to
the number of axons, neurotransmitters, and references can be added to the
connection’s description if necessary.

2.3. Hypothetical component diagram

The component diagram of the Uniﬁed Modeling Language [3] is used to
model and explain the structure of any complex object-oriented software. This

8

UniformCircuit 1The source neuron (sub)type can be identified according to the biochemical characteristics of the synapse.Sender neuronsReceiver neuronsUniformCircuit 2AxonsFigure 5: Brain information ﬂow. BIF is the ﬂow of information at the mesoscopic level in
anatomical structures. Circuits are arbitrary brain organs or regions and the assemblies to
which they are connected. The smallest circuit to be described is, in principle, a uniform
circuit. Because a uniform circuit is a collection of neurons of the same type, its properties,
such as transmitters, are speciﬁed. A connection can be characterized by a particular uniform
circuit that is the origin of the connection output from a circuit.

is a diagram that shows the structural aspects of the operating principle of
software as a network using socket labels to indicate the components that are
responsible for the computing functions; it also shows the interface of the call
relationship between those components (see the right image in Fig. 6). This
diagram is used to visualize, specify, document, and build an executable system
by forward or reverse engineering.

The HCD that makes up the BRA is a type of component diagram. This
diagram assigns components that match the function of the brain region of
interest (ROI) with an anatomical structure at a mesoscopic level; however,
this diagram is hypothetical in the sense that there is no guarantee that it is
consistent with the truth of the brain function. The assignment is performed
using the SCID method, which will be discussed later. Each component that
makes up an HCD is a module that encapsulates a set of related functions (or
data) 1 and corresponds to the behavior and structure of speciﬁc organs and
regions of the brain.

As a typical example of a BRA, the association between BIF and the HCD is
shown in Fig. 6, which shows the well-known example [50] of the basal ganglia’s
actor-critic reinforcement learning function.
In the left diagram showing the
basal ganglia loop, the basal ganglia circuit is the ROI. The corresponding
HCD that decomposes the actor-critic reinforcement learning function is shown

1The term ”component” is also used in software engineering to mean software packages,
web services, web resources, and similar entities; however, in this paper, we use it to refer to
a module that encapsulates a set of related functions (or data).

9

CircuitConnectionProperty only for Uniform CircuitsTerminal[sensor]Terminal[actuator]CircuitCircuitCircuitCircuitCircuitLegendUniform circuitConnectionCircuitmodTypesizereferencehasPartreferencesizetransmittertaxonlabelsinputCircuitoutputCircuittaxonFigure 6: Example of BRA description that associates the BIF for the basal ganglia with the
HCD for actor-critic reinforcement learning. The blue letters A, B, C, and D represent uniform
circuits in the region of interest (ROI) in the BIF (left panel). The corresponding components
in the HCD (right panel) are marked with the same letters, and the HCD components are
marked with their functions. The meaning of the signal to be transmitted is indicated with
the interface between the components. In the BIF, TRN indicates a thalamic relay neuron.
This diagram was adapted from the diagram of [50, 56].

on the right side. The uniform circuit named striatum (matrix) and indicated
by the letter A in the BIF diagram corresponds to the action value calculator
component indicated by the letter A in the HCD. The uniform circuits in BIF
similarly correspond to the components in the HCD, as indicated by other letters
(B, C, and D). The following is an example of mapping the links between the two
diagrams. The signal path (labeled dopamine) output from the SNc, indicated
by the letter D in the BIF, maps to the signal path (labeled TD error) output
from the TD error calculator component, indicated by the letter D in the HCD.
Note that in this example, the circuits indicated by A, B, C, and D in the
BIF are all uniform circuits. Therefore, the label names given to the respective
components in the HCD correspond to the label names of the arguments they
provide.

In this way, the availability of an HCD, which shows the structural aspect
of operating principles, increases the likelihood that even developers without
profound expertise in neuroscience would be capable of implementing software
closer to the truth of the brain. Network machine learning systems that are
often used in current AI research (e.g., artiﬁcial neural networks and Bayesian
networks) are made compatible with development according to component dia-
grams.

10

Hypo. component diagram(HCD)Brain information flow (BIF):Actor-CriticEnvironmentfeedback connectionfeedforward connectioncortical micro circuitLower HigherCortexStriatum(matrix)Striatum(patch)SNcGPi/SNrSensor/actuatorTRNTRNaction valuestatevalueTD errorattentionalactionrewardTD error calculator7State value calculatorAction calculatorAction value calculator6prediction5reward77attentionalaction77predictionBasal ganglia circuitprovided interfacerequired interfaceport6Labelcomponentuniform circuitexcitatory projectioninhibitory connectionABCDABCD2.4. Prototype of BRA database

The brain is a fairly closely linked system. Therefore, the accumulation
of standard neuroscientiﬁc ﬁndings related to cognitive behavior will not only
optimize the development of brain-inspired software but also help to compre-
hensively grasp mesoscopic ﬁndings in the whole brain.

In this regard, the WBA approach examines databases to improve reusability
by integratively handling the constructed BRA. In the present study, a prototype
of the BIF database was made using Semantic MediaWiki.

The data ﬂow was as follows. First, one of the authors with expertise in neu-
roscience reviewed academic papers and collected relevant data in a spreadsheet.
Next, the data were registered in a database using a conversion tool. Thereafter,
when the developers implemented the brain-inspired software, a prototype of a
tool was made, which could not only directly browse the data but also visualize
BRA data as a graph in the ROIs.

Such activity also can be positioned as part of the ﬁeld of neuroinformatics
[2, 42], which develops data and knowledge bases for neuroscience. Currently,
that ﬁeld is vigorously registering experimental data on anatomical structures
[31] and physiological phenomena [41]. However, there has been no progress in
accumulating data for designing cognitive and behavioral functions, such as a
BRA.

2.5. BRA-driven development

BRA-driven development is a developmental approach that builds brain-
inspired AGI through the following processes using a standardized BRA (see
Fig. 7).

• BRA design: Designing BIF by collecting and organizing neuroscientiﬁc
ﬁndings. Furthermore, creating an HCD using the SCID method (dis-
cussed later).

• BRA use: Developing brain-inspired software by referring to the HCD in

the BRA.

By doing so, the developer can develop brain-inspired software guided by
HCDs in the BRA and can compensate for the lack of people who have expertise
in both neuroscience and software engineering.

Here, we will give an overview of the three activities involved in BRA design.
The ﬁrst activity is laying the foundation for accumulating BRAs useful for
brain-inspired software. Speciﬁcally, this involves deciding on the description
format (BIF, Subsection 2.2) and examining databases for integrated sharing of
BRAs (Subsection 2.4). (① What can be learned in a brain?) The next activity
is acquiring and formulating the knowledge necessary for the BRA. Speciﬁcally,
knowledge of the anatomic structures and psychological phenomena in some
region of the brain is collected and amassed in BIF form. Those BIF data are
used to construct HCDs through the SCID method. (② How can knowledge be
obtained from the brain?) The third activity is evaluating the adequacy of BRA

11

Figure 7: Activities of BRA-driven development. The major activities of BRA-driven devel-
opment include three types of activities for designing BRA and three types of activities for
using BRA.

data. In this activity, review criteria are determined, and one judges whether
the created BRA data satisfy the necessary requirements as a reference model
of brain-inspired software. (③ How to assess the resemblance to a brain.)

Furthermore, we will give an overview of three activities associated with
BRA utilization. First, in the development of brain-inspired software, the HCD
associated with a speciﬁc task in the BRA is implemented as a requirement. (④
Build the software like a brain.) Next, in the future, we plan to carry out merge
development wherein components in separately developed programs are associ-
ated with each other based on BRA and integrated. (⑤ Merge disparate func-
tions as the brain does.) Furthermore, to estimate how well the implemented
software represents the brain, the ﬁdelity (biological plausibility) is evaluated
by comparing the BRA and the program. (⑥ Evaluate the resemblance to a
brain.)

As previously mentioned, to complete the brain-inspired AGI, it is necessary
to integrate multiple computational mechanisms that correspond to the same
brain regions and were created according to, for example, diversity of tasks,
in each BRA-based development project. Therefore, we believe that the entire
development based on the WBA approach in the near future will proceed in
parallel or iteratively with BRA-based developments and merge developments.
In that case, the ﬁdelity evaluation of the software will prevent development
results from veering away from brain architecture.

3. Designing BRA

In this section, we discuss the BRA design. Among the three activities re-
lated to the BRA design, the ﬁrst part, ”① What can be learned in a brain?”

12

Evaluate the fidelity of the software by comparing it with BRADevelopment for each specific task based on BRA(Stub-driven development)Merging of components guided by BRA(Brain-inspired refactoring)BRA (Brain Reference Architecture)A mesoscopic neural circuit based reference model  with HCD and phenomena for the brain-inspired software development.Build like a brainMage like a brainEvaluate resemblance to a brainEvaluate the adequacy of the BRA data and  register accepted data formally.Collect neuroscientific knowledge and construct HCD using the SCID methodDefine description format (BIF).  BRA data is shared/integrated on the databaseWhat can be learned in a brain? How can knowledge be obtained from a brain?How to asses resemblance to a brain?④⑥⑤③②①UtilizeBRADesignBRAwas already discussed in Section 2. As for ”② How can knowledge be obtained
from a brain?” we will explain the collection of anatomical ﬁndings in the neu-
roscientiﬁc ﬁeld and the SCID method for HCD construction. Furthermore, we
will also touch on the evaluation of adequacy in the context of ”③ How to assess
resemblance to a brain.”

3.1. Neuroscientiﬁc ﬁndings available for BIF creation

We now discuss the process of acquisition of information related to the
anatomical structure required to describe the BIF. The main requirement is
information for building directed graphs with circuits as nodes. Therefore, it
is ideal to acquire information on uniform circuits of the whole brain and the
connections between these circuits. With the current state of neuroscience, we
are still far from acquiring ideal information. In this regard, if necessary, cir-
cuits larger than the uniform circuit are deﬁned, and a BIF graph is constructed
between these circuits.

Information to be acquired for each uniform circuit includes the brain region
labels, animal species, neurotransmitters, excitatory and inhibitory modes, cell
count, and information source (references). The information to be acquired re-
garding the connection includes the input circuit, output circuit, animal species,
size (number of axons), neurotransmitters, and sources (references). For the
neocortex, the orientation of the hierarchy between territories (including feed-
forward/feedback) is required.

Furthermore, the data described in the BIF is used to implement software
using an artiﬁcial neural network. Thus, it is ideal to know the number of
neurons in a circuit and the approximate connection sizes (number of axons).

A BRA used to build human-like intelligence should, of course, be based on
the structure of the human brain. However, streamlining the construction of the
BIF may be possible by referring to the ﬁndings in other animals, particularly
rodents. For this reason, in reality, the BIF mainly uses human data for the
neocortex, which is unique to humans; however, for other brain regions, there
are several references based on non-human primates and rodents [38]. Therefore,
although similar to humans as a whole, the BIF seems to contain chimeric data
that combines mesoscopic-level anatomical ﬁndings from multiple mammals.

3.1.1. Information sources

The main source of information for building a BIF is data on anatomical

structures (such as connectomes) and related literature.

3.1.2. Region labels

In principle, the Allen Developing Human Brain Atlas ontology, which is one
of the Allen Brain Reference Atlases (https://atlas.brain-map.org/), is used as
a circuit label, and if necessary, a label with a level roughly corresponding to
the granularity of the uniform circuit is added.

13

3.1.3. Number of neurons

The number of neurons for each region in the mouse brain is stored in the
Blue Brain Cell Atlas [16]. These regions are deﬁned by the Allen Mouse Brain
Reference Atlas [31]. However, to date, no comprehensive data on the number
of neurons in humans are available.

3.1.4. Connection

As for the connections between circuits, we would like to gather information
on the presence of the connection, its direction, and the approximate number
of projection axons for all combinations of areas.

Although that is not necessarily an exhaustive brain region, we can estimate
the projection ratio from one particular area to another using the Allen Mouse
Brain Connectivity Atlas [39]. As mentioned above, because the number of
neurons in an area can be obtained for mice, the number of axons to be projected
can be estimated by multiplying the projection ratio by the number of neurons.

In humans, the Multilevel Human Brain Atlas by EBRAIN (https://ebrains.eu/service/human-

brain-atlas/ . Accessed: 2021-2-26.) can be used to obtain data, including
hierarchical relationships (feedforward/feedback), for the entire neocortex.

3.1.5. Neurotransmitters

The data on the distribution of neurotransmitters throughout the brain is
currently available via Drosophilidae studies [35], but there appears to be no
data for mammals. However, in the regions involved in higher intelligence pro-
cessing, such as the neocortex, thalamus, basal ganglia, hippocampus, and cere-
bellum, similar anatomical structures appear frequently in each brain region.
Moreover, because the neurotransmitters in these sites have been studied in de-
tail, the lack of data does not pose a major problem in the construction of the
BIF. Nevertheless, data for subcortical brain regions may be needed.

3.2. Structure-constrained Interface Decomposition method

The SCID method involves consistently decomposing the computational
functions of a speciﬁc brain region into mesoscopic-level anatomy to obtain
the HCD required for the development of brain-inspired software. In software
development, designing through a process of decomposing higher-level func-
tions is common; however, the SCID method also considers consistency with
the anatomical structure of the brain.

Furthermore, decomposing the functions of the natural brain as if it were an
artifact might not yield desired results. However, because the brain is an organ
that has undergone evolutionary selection, its physical mechanism often serves
an intended purpose. For example, when computational neuroscience derives
”algorithms and expressions” for brain function, this action is premised on a
clear purposefulness.

14

Figure 8: Procedure of SCID method. The SCID method is a technique for obtaining the
HCDs required for software development. The method uses a three-step process to decom-
pose the top-level functions (TLFs) of a speciﬁc brain region (ROI) into components under
mesoscopic-level anatomical constraints. In Step 1, three exploratory tasks (1-A, 1-B, and
1-C) are performed in parallel as appropriate. After that, we proceed to Steps 2 and 3.

3.2.1. Process of SCID method

In the SCID method, an HCD consistent with the anatomical structure in
the ROI is obtained by performing the following three-step process (see Fig. 8).
In step 1, the ﬁndings of various studies related to cognitive behaviors of
humans and animals are used to establish the premise that the SCID method is
applicable. Speciﬁcally, the three processes are performed in parallel. While in-
vestigating the anatomical structure around the ROI and registering it as a BIF
(1-A), the existence of a component diagram that realizes the ROI input/output
(1-B) is conﬁrmed. A valid brain ROI and the top-level function (TFL) that it
performs are determined (1-C).

In step 2, while considering the association between circuits and connections
in the ROI of the BIF, the TLF is decomposed into detailed functions in as
many conceivable patterns as possible. This step enumerates candidate HCDs.
In step 3, HCDs that are logically inconsistent according to scientiﬁc ﬁnd-
ings in various ﬁelds, such as neuroscience, cognitive psychology, evolution, and
biological development, are rejected. Then, the function of components and
meaning of connections of the remaining HCDs can be assigned to the BIF.

3.2.2. Advantages of SCID method

In neuroscience, the traditional way to experimentally identify the function
of a neural circuit of interest is as follows. This is a method of ﬁnding neural ac-
tivity that has an intelligible correlation with some external stimulus, and giving

15

Step 3: Rejecting diagrams that are inconsistent with scientific knowledgeHypo. component diagramHypo. component diagramBrain information flow (BIF)Hypo. component diagram(HCD)2BECD156743Environment (various tasks)Function of components: A, B, C, D, Ecircuitsconnec-tionsNeuroscience papers and dataFunction of components: A, B, C, D, EMeaning of connections：1, 2,3,4,5,6constructTLFTop-level functionROIRegion of InterestStep 1-A: Surveying anatomical knowledge in ROIStep 1-B: Creating a provisionary component diagramStep 1-C:  Determining ROI and TLF consistentlyStep 2: Enumerating candidate component diagramsStep 1-C:  Determining ROI and TLF consistentlyassignconstraina functional interpretation to it based on the nature of that stimulus. However,
this is only possible if there are brain regions close to the sensor/actuator or neu-
ral activity that has a clear correlation with the behavior, such as reward/place
cells. In general, it is not easy to obtain interpretable correlations from neural
activities that are mixed with various types of external and temporal informa-
tion in most parts of the brain’s neural circuitry. Thus, there is a weakness in
that the range of neural circuits with functions that can be identiﬁed by this
method tends to be limited (see Table 1).

The SCID method can be applied to a quite wide area of the brain. This is
because anatomical structure information at the mesoscopic level, which is key
to the SCID method, can be obtained from almost the entire brain, including
that of rodents (see Subsection 3.1).

Another advantage of the SCID method is that an HCD is easy to use di-
rectly in software development because it is obtained through a process based
on the design theory of software development.
In contrast, when neural ac-
tivity phenomena correlated with external information are used as a reference
for software development, they need to be reinterpreted as a requirement. In
other words, the functions obtained through the traditional phenomenon-based
approach [59] often are indirect information and need preparation for software
development.

Table 1: Advantages of the SCID method

Method
Key clues

SCID method
Structure and top-level function
(also physiological phenomena)

Coverage in
the brain

Features

Almost all of the brain (to the
extent that mesoscopic struc-
tures are known)
Functional descriptions that are
easy to use for development

Conventional method
Neural phenomena correlating
with the environment (e.g., re-
ward and place cells)
Limited to areas where physio-
logical clues exist.

Phenomenal interpretations are
indirect and software speciﬁc.

The ﬁrst HCD developed using the SCID method identiﬁed the site respon-
sible for path integration in the entorhinal cortex [20]. Following this, it was
also used to identify the meaning of signals between neocortical regions [57].
At present, there are several ongoing studies on the application of the SCID
method to study brain regions, such as the brain stem, which is responsible for
eye movements [54]; the claustrum; and functions, such as imagination.

3.3. Evaluation of adequacy (biological plausibility)

3.3.1. Need to evaluate biological plausibility

When developing brain-inspired software, it is necessary to evaluate biolog-
ical plausibility—in other words, to estimate how close the implemented brain-

16

Figure 9: Creation and evaluation in BRA-driven development. In BRA-driven development,
the biological plausibility is evaluated in the direction opposite to that of creation. Contrary
to the SCID method of designing BRAs, the adequacy of BRAs to neuroscientiﬁc ﬁndings is
assessed. The ﬁdelity of the software to the BRA will be assessed, contrary to the development
of the software. Although not shown in the diagram, in merge development, an HCD is used
for both development referencing and ﬁdelity evaluation.

inspired software is to the reality of the brain captured by current neuroscience
ﬁndings.

The evaluation of biological plausibility in BRA-driven development involves
the following two methods (see Fig. 9). The ﬁrst method is the evaluation
of adequacy, which estimates the consistency between existing neuroscientiﬁc
ﬁndings and BRA. The second method involves the evaluation of ﬁdelity, which
estimates the reproducibility of BRA in brain-inspired software.

3.3.2. Need for certiﬁed registration

The created BRA is used as a functional requirement to be referred to when
implementing software and as a subject for comparison when evaluating biolog-
ical plausibility (ﬁdelity). However, most BRA users have little knowledge of
neuroscience, and therefore cannot judge whether the BRAs created are trust-
worthy. To ensure the adequacy of BRA data, there needs to be a workﬂow
that inspects and certiﬁes the data before they are registered.

Often in neuroscience, there are parallel hypotheses that are contradictory
to each other but cannot be ruled out. From the viewpoint of brain-inspired
software development, it is not possible to immediately determine which hy-
pothesis is ideal. Therefore, provided that it meets the inspection criteria, the
BRA data should be registered even if they contradict other data.

.

3.3.3. Evaluation of adequacy and inspection criteria

The evaluation of adequacy is further divided into two parts as shown in

Fig. 9. .

17

Brain Reference Architecture (BRA)UtilizeBRABrain-inspired softwareNeuroscience papers and dataBrain information flow (BIF)Hypo. component diagram (HCD)DesignBRA④Stub-drivenDevelopment⑥Fidelityevaluation ③Adequacyevaluation②SCID methodassignconstraindevelopconstructcomparecomparecompare1) Adequacy evaluation of BIF
This method evaluates the consistency of the anatomical structures and neu-
ral activity described in the BIF with those described in neuroscientiﬁc papers
and data.

Two main inspection criteria are used to certify that the BIF description
is suﬃciently adequate. One is that the description element of the structure
or phenomenon described in the data submitted for registration is not already
registered in the BRA database (novelty). The other is that the element must
be directly or indirectly supported by any current neuroscientiﬁc ﬁnding (au-
thenticity). As a rule, authenticity of facts is guaranteed by their inclusion in
one or more peer-reviewed articles.

2) Adequacy evaluation of HCD
The functionality of and consistency with the BIF are evaluated for the HCD.
The evaluation of functionality determines whether the process generated by the
behavior of structured components in an HCD constitutes a mechanism of action
that can achieve the goals of the ROI.

The evaluation of consistency determines whether the HCD corresponds to
the description of the BIF from three aspects: (1) the dependency structure of
the HCD corresponds to the anatomical structure contained in the ROI of the
BIF, (2) the behavior of the components within the HCD is consistent with the
physiological ﬁndings described in the BIF, and (3) the goal achieving process
of HCD is consistent with the physiological process described in the BIF.

4. Development and Evaluation using BRA

In this section, we discuss three activities associated with BRA use in BRA-
driven development. As shown in Fig. 9, the development and evaluation
performed here is carried out with reference to the HCD in the BRA; as such,
the programmer does not need to possess profound knowledge of neuroscience.

4.1. Stub-driven development

To create brain-inspired software, BRA-driven development implements and
connects all components based on the requirements HCD associated with a
particular task.

Generally, machine learning devices often behave diﬀerently from the archi-
tecture imagined at the design phase to some extent. The diﬃculty of control-
ling this behavior increases rapidly if the system is composed of several machine
learning components. To address this diﬃculty, the WBA approach uses stub-
driven development.

In stub-driven development, during the early stages of development, a system
is constructed by combining components that do not have a learning function
and are described by rule-based processes. Following this, by gradually replacing
each component with machine learning components, the system is improved so
that it approaches the behavior expected in the HCD.

To proceed with development using a BRA, an integrated execution plat-
form is required as a management mechanism for computational resources to

18

run and train multiple components. Candidates include recent deep neural net-
work platforms, such as TensorFlow, PyTorch, and Keras. The Brain-inspired
Computing Architecture is a platform developed to take into account the asyn-
chronous nature of the brain and other characteristics [49]. Furthermore, an
HCD can be constrained and converted into a probabilistic generative model
(PGM), SERKET [37, 52], and Pixyz [48]. Recently, there has been a growing
movement called whole-brain PGM, which attempts to construct a PGM corre-
sponding to the whole brain [53]. Construction of a PGM of the hippocampal
formation has been started [51]

4.2. Evaluation of ﬁdelity (biological plausibility)

The biological plausibility of brain-inspired software is evaluated by com-
paring it with the BIF and HCD in the BRA data. The estimated degree of
consistency between the software and the BRA is called ﬁdelity.

To date, four methods have been explored for evaluating ﬁdelity.

• Structural similarity: An evaluation of how well the static structure of

the software matches the BIF in the BRA.

• Functional similarity: An evaluation of how well the behavior of a
particular component implemented during the execution of a speciﬁc task
matches the behavior (e.g., behavior timing) designed in the HCD in the
BRA.

• Activity reproducibility: An evaluation of how well the behavior of a
speciﬁc component implemented during the execution of a speciﬁc task
given to a circuit in the BRA reproduces the features of neural activity
(e.g., activity timing).

• Performance: An evaluation of the performance and ability of the soft-

ware as a whole (integration test).

Of these evaluation methods, structural similarity and performance are easy
to use for evaluation of the entire software. However, functional similarity and
activity reproducibility are useful not only for unit tests for each component
but also for merge development, which will be discussed later. Furthermore,
it is possible to consider an evaluation method wherein dysfunction states are
induced by intentionally destroying/ablating a part of the software and com-
paring it with brain function under conditions such as mental illness or brain
injury.

4.3. Merge development

A particular circuit on the BIF is associated with a component that is in-
cluded in various HCDs. As already mentioned, the HCD is a structure of func-
tions broken down into components to realize TLFs, including tasks. Therefore,
even if a component is implemented to realize the same circuit, the function it
performs may be diﬀerent depending on the HCD to which it refers.

19

Figure 10: Components to be merged are identiﬁed by BRA constraints. This ﬁgure com-
pares software development unconstrained by BRA (left panel) and software development
constrained by BRA (right panel). Task 1 produces output 1 from input 1, and Task 2 pro-
duces output 2 from input 2. Comparing the component diagrams dealing with these two
tasks, it is not easy to ﬁnd common points simply by developing them separately, even if
there is a possibility of overlap. However, if they are developed with reference to the BRA,
the BIF will constrain the HCD that the software follows. Then, components C and D, which
are responsible for common processing in the two tasks, can be identiﬁed as components to
be merged.

However, for a piece of software to show its true value as an AGI, it needs
to be able to apply knowledge to diﬀerent tasks. To that end, if there are
components that correspond to the same brain region in separately developed
programs, merge development is performed by associating and integrating these
components. The idea of promoting the integration of components by using
constraints of the brain is called brain-inspired refactoring.

4.3.1. Concept of merge development

Herein, we explain that merge development is possible by imposing the BIF

as a development constraint.

As shown in the left side of Fig. 10, when developing two tasks, the devel-
opment is done independently if a BRA is not used as a reference. In task 1,
input 1 is given to component A, and after processing, output 1 is obtained from
component E. Similarly, in task 2, input 2 is given to component B, and after
processing, output 2 is obtained from component F. The two implementations
created this way are completely diﬀerent in essence and cannot be merged.

Next, as shown in the right side of Fig. 10, the case where two tasks are
developed with BRA as the constraints are discussed. In this case, components
C and D, which are responsible for intermediate processing, are associated with

20

CDAEBFIN 1IN 2OUT 1OUT 2CDAEBFIN 1IN 2OUT 1OUT 2CDAEBFIN 1IN 2OUT 1OUT 2HCD of TASK 1 + TASK 2AEBFIN 1IN 2OUT 1OUT 2AEBFIN 1IN 2OUT 1OUT 2AEBFIN 1IN 2OUT 1OUT 2Constraint by BRANon constraintBrain-inspired RefactoringIN 1IN 2OUT 1OUT 2HCD of TASK 1HCD of TASK 2Brain information flow (BIF)MergeableNon-mergeableABCDFEconstrainconstrainCD of TASK 1 + TASK 2CDof TASK 1CD of TASK 2CD    =  Component DiagramHCD =  Hypothetical Component Diagramthe same circuit on the BIF, respectively. To merge components C and D
contained in diﬀerent implementations, two approaches are typically envisioned.
The ﬁrst is to compare the ﬁdelity ratings of the two corresponding components
and select the higher-evaluated implementation. The second is to redesign and
implement an integrated algorithm that combines the advantages of both.

5. Discussion

5.1. Structure and behavior

In BRA-driven development, we decided to use HCD as the main source
of design information because it expresses the structural aspects of functions.
Moreover, the accumulation of ﬁndings has progressed because the mesoscopic-
level structure in the brain, which is the basis of an HCD, embodies invariant
information that is not task-dependent. However, not only the structural aspect
but also the behavioral aspect is important in software design [3]. Furthermore,
the intelligence ﬁnally evaluated in AGI relates to behavior. Therefore, an
important task in the future is to develop behavior-related evaluations that
are similar to functional similarity and activity reproducibility used for ﬁdelity
evaluation.

5.2. Roadmap for reaching AGI

As mentioned above, BRA-driven development consists of BRA design com-
prising the BIF and an HCD and development using them. Given the charac-
teristics of this development methodology, the following four milestones need to
be achieved on the way in the roadmap leading to the realization of a brain-
inspired AGI. The ﬁrst milestone is the construction of a BIF for almost the
whole brain. The second milestone is the construction of an HCD that covers al-
most the whole brain, and the third milestone is the construction of integrated
software that covers almost the whole brain. Finally, the fourth milestone is
to achieve a situation where AGI solutions can be explored in a design space
where constraints continue to be updated as neuroscience progresses, primarily
by running and testing integrated software in a virtual environment. However,
something may still be lacking even when all the computational mechanisms
that make up the brain seem to work together. Regardless, we expect that the
lacking technical elements will become apparent once we arrive at that stage.

5.3. Applications of AI systems based on BRA

AI systems developed based on BRA can be expected to almost exactly
replicate human cognitive and behavioral capabilities. Therefore, it has several
practical applications, including the following: Its greatest use is that it allows
us to construct an AI that has familiarity with humans when communicating
with them. Furthermore, it can also be computationally applied to research
ﬁelds that deal with mental illness and cognitive impairment. Conversely, ﬁnd-
ings regarding human cognitive impairment may be used for the problematic
behavior seen in brain-inspired AI. Moreover, we believe this can also be used
as a computational model that will serve as a device for mind uploading.

21

6. Conclusions

This article introduces the current WBA approach and focuses on BRA-
driven development to accelerate the development of brain-inspired AGI. The
BRA includes standardized data that reﬂect the brain architecture for the pur-
pose of limiting the huge design space required for a human-level AGI that
cannot be grasped by one individual’s cognitive ability. By having BRAs de-
signed by people with expertise in neuroscience, even developers who do not
have a deep understanding of the brain can develop brain-inspired software
based on BRAs. First, we discussed that the BRA is a description consisting
of a BIF supported by a mesoscopic neural circuit and an HCD consistent with
BIF. Next, to compensate for the lack of neuroscientiﬁc ﬁndings, we introduced
the SCID method, which formulates the creation of an HCD consistent with
the brain’s anatomical structure. Furthermore, even if a BRA is used for de-
velopment, individual development results tend to diverge depending on the
diversity of target tasks. To address this problem, it is planed to introduce
merge development, which integrates and brings AGI closer to how the brain
works. Moreover, we discussed the evaluation of biological plausibility using
BRA to prevent the developed software from veering away from the brain.

The main contribution of this paper on BRA-driven development, having
the following features, is the establishment of a methodology for accumulating
data on brain constraints in a form that can be used for software development.

1. Separation of design information: BRA data can be used in a variety of
development projects because they are described in a standard format for
software development that does not depend on any particular development
environment.

2. Standardization of description granularity: As a rule, describing BRA data
at a coarser granularity than the mesoscopic level reduces the possibility
that development will get caught up in details that are unnecessary for
the realization of the target cognitive behavioral level.

3. BRA design: The method of designing computational functions according
to anatomy (SCID method) allows BRAs to be created while compensating
for the lack of neuroscientiﬁc knowledge in a wide range of brain areas.
4. Tolerance of diversity: Even BRAs that contain mutually contradictory
HCDs can be registered if they have a certain level of validity, thereby
reducing the risk of overly narrowing the design space to be considered.

The above features of the BRA will provide a scaﬀold for large-scale whole-
brain software development as the comprehensiveness of its data increases. This
will allow the brain architecture to exert a centripetal force as an anchor that
can eﬃciently bring about the convergence and eventual completion of the de-
velopment of human-like AGI, when currently the development results in this
ﬁeld have a tendency to diverge.

22

Declaration of competing interest

The author declares no known competing ﬁnancial interests or personal re-

lationship that could appear to inﬂuence the work reported in this paper.

Acknowledgements

I would like to thank Naoya Arakawa, Koichi Takahashi, Naoyuki Sakai,
Masahiko Osawa, Takashi Omori, Shinichi Asakawa, Kotaro Mizuta, Mei Sasaki,
Hirokazu Kiyomaru, Hitomi Sano, and Michihiko Ueno for cooperation in de-
veloping the methodology for BRA-driven development. I would like to thank
Haruo Mizutani, Hiroshi Okamoto, Yudai Suzuki, Naoyuki Sato, Taku Hayami,
and Hiroto Tamura for constructing the basic data for the BIF. I would like to
thank Kosuke Miyoshi, Kotone Itaya, Masayoshi Nakamura, Tatsuji Takahashi,
Masanori Yamada, Taro Sunagawa, Shion Honda, Yutaka Matsuo, Yuji Ichisugi,
Satoshi Kurihara, and Ryutaro Ichise for implementing related software. I would
like to thank Ayako Fukawa, Takahiro Aizawa, Yoshimasa Tawatsuji, Akira
Taniguchi, and Ikuko Eguchi Yairi for advancing the SCID method. I would
like to thank Haruhiko Bito, Kenji Doya, Tadashi Yamazaki, Michita Imai,
Hiroyuki Okada, and Nobuo Kawakami for discussions on research and develop-
ment. This work was supported by the Japan Ministry of Education, Culture,
Sports, Science and Technology (KAKENHI Grant Number 17H06315, Grant-
in-Aid for Scientiﬁc Research on Innovative Areas, Brain information dynamics
underlying multi-area interconnectivity and parallel processing) and DWANGO
Co., Ltd.

23

References

[1] Adams, S., Arel, I., Bach, J., Coop, R., Furlan, R., Goertzel, B., Hall, J. S.,
Samsonovich, A., Scheutz, M., Schlesinger, M., & Others (2012). Mapping
the landscape of human-level artiﬁcial general intelligence. AI magazine,
33 , 25–42.

[2] Amari, S.-I., Beltrame, F., Bjaalie, J. G., Dalkara, T., De Schutter, E.,
Egan, G. F., Goddard, N. H., Gonzalez, C., Grillner, S., Herz, A., Hoﬀ-
mann, K.-P., Jaaskelainen, I., Koslow, S. H., Lee, S.-Y., Matthiessen, L.,
Miller, P. L., Da Silva, F. M., Novak, M., Ravindranath, V., Ritz, R., Ruot-
salainen, U., Sebestra, V., Subramaniam, S., Tang, Y., Toga, A. W., Usui,
S., Van Pelt, J., Verschure, P., Willshaw, D., Wrobel, A., & OECD Neu-
roinformatics Working Group (2002). Neuroinformatics: the integration
of shared databases and tools towards integrative neuroscience. J. Integr.
Neurosci., 1 , 117–128.

[3] Ambler, S. W. (2004). The Object Primer: Agile Model-Driven Develop-

ment with UML 2.0 . Cambridge University Press.

[4] Anderson, J. R. (2009). How Can the Human Mind Occur in the Physical

Universe? . Oxford University Press.

[5] Arakawa, N., & Yamakawa, H. (2016). The whole brain architecture ini-
tiative. In Neural Information Processing (pp. 316–323). Springer Interna-
tional Publishing.

[6] Arakawa, N., & Yamakawa, H. (2020). The brain information ﬂow format.
In The 1st Asia-Paciﬁc Computational and Cognitive Neuroscience (AP-
CCN) Conference (p. 0029).

[7] Baum, S. (2017). A survey of artiﬁcial general intelligence projects for

ethics, risk, and policy.

[8] Bohland, J. W., Wu, C., Barbas, H., Bokil, H., Bota, M., Breiter, H. C.,
Cline, H. T., Doyle, J. C., Freed, P. J., Greenspan, R. J., Haber, S. N.,
Hawrylycz, M., Herrera, D. G., Hilgetag, C. C., Huang, Z. J., Jones, A.,
Jones, E. G., Karten, H. J., Kleinfeld, D., K¨otter, R., Lester, H. A., Lin,
J. M., Mensh, B. D., Mikula, S., Panksepp, J., Price, J. L., Safdieh, J.,
Saper, C. B., Schiﬀ, N. D., Schmahmann, J. D., Stillman, B. W., Svoboda,
K., Swanson, L. W., Toga, A. W., Van Essen, D. C., Watson, J. D., &
Mitra, P. P. (2009). A proposal for a coordinated eﬀort for the determi-
nation of brainwide neuroanatomical connectivity in model organisms at a
mesoscopic scale. PLoS Comput. Biol., 5 , e1000334.

[9] Bostrom, N., & Sandberg, A. (2008). Whole brain emulation: a roadmap.

Lanc Univ Accessed January, 21 , 2015.

24

[10] Brown, T. B., Mann, B., Ryder, N., Subbiah, M., Kaplan, J., Dhariwal, P.,
Neelakantan, A., Shyam, P., Sastry, G., Askell, A., Agarwal, S., Herbert-
Voss, A., Krueger, G., Henighan, T., Child, R., Ramesh, A., Ziegler,
D. M., Wu, J., Winter, C., Hesse, C., Chen, M., Sigler, E., Litwin, M.,
Gray, S., Chess, B., Clark, J., Berner, C., McCandlish, S., Radford, A.,
Sutskever, I., & Amodei, D. (2020). Language models are Few-Shot learn-
ers, . arXiv:2005.14165.

[11] Choi, D., & Langley, P. (2018). Evolution of the icarus cognitive architec-

ture. Cogn. Syst. Res., 48 , 25–38.

[12] Clune, J. (2019). AI-GAs: AI-generating algorithms, an alternate paradigm

for producing general artiﬁcial intelligence, . arXiv:1905.10985.

[13] DeWolf, T., Jaworski, P., & Eliasmith, C. (2020). Nengo and Low-Power
AI hardware for robust, embedded neurorobotics. Front. Neurorobot., 14 ,
568359.

[14] Domingos, P. (2015). The Master Algorithm: How the Quest for the Ulti-

mate Learning Machine Will Remake Our World . Basic Books.

[15] Eliasmith, C. (2013). How to Build a Brain: A Neural Architecture for

Biological Cognition. OUP USA.

[16] Er¨o, C., Gewaltig, M.-O., Keller, D., & Markram, H. (2018). A cell atlas

for the mouse brain. Front. Neuroinform., 12 , 84.

[17] Fitzgerald, M., Boddy, A., & Baum, S. D. (2020). 2020 survey of artiﬁcial
general intelligence projects for ethics, risk, and policy. Global Catastrophic
Risk Institute Technical Report, 20 .

[18] Franklin, S., Madl, T., D’Mello, S., & Snaider, J. (2014). LIDA: A systems-
level architecture for cognition, emotion, and learning. IEEE Trans. Auton.
Ment. Dev., 6 , 19–41.

[19] Friston, K. (2010). The free-energy principle: a uniﬁed brain theory? Nat.

Rev. Neurosci., 11 , 127–138.

[20] Fukawa, A., Aizawa, T., Yamakawa, H., & Yairi, I. E. (2020). Identifying
core regions for path integration on medial entorhinal cortex of hippocam-
pal formation. Brain Sci , 10 .

[21] George, D., Lavin, A., Swaroop Guntupalli, J., Mely, D., Hay, N., & Lazaro-
Gredilla, M. (2018). Cortical microcircuits from a generative vision model,
. arXiv:1808.01058.

[22] Goertzel, B. (2012). CogPrime: An integrative architecture for embodied
artiﬁcial general intelligence. Dynamical Psychology: An International,
Interdisciplinary Journal of Complex Mental Processes, .

25

[23] Goertzel, B. (2014). Artiﬁcial general intelligence: Concept, state of the
art, and future prospects. Journal of Artiﬁcial General Intelligence, 5 ,
1–48.

[24] Goertzel, B., Lian, R., Arel, I., de Garis, H., & Chen, S. (2010). A world
survey of artiﬁcial brain projects, part II: Biologically inspired cognitive
architectures. Neurocomputing, 74 , 30–49.

[25] Hafner, D., Ortega, P. A., Ba, J., Parr, T., Friston, K., & Heess, N. (2020).
Action and perception as divergence minimization, . arXiv:2009.01791.

[26] Hassabis, D., Kumaran, D., Summerﬁeld, C., & Botvinick, M. (2017).

Neuroscience-Inspired artiﬁcial intelligence. Neuron, 95 , 245–258.

[27] Hawkins, J., & Blakeslee, S. (2004). On intelligence, .

[28] Hern´andez-Orallo, J. (2017). The measure of all minds: evaluating natural

and artiﬁcial intelligence. Cambridge University Press.

[29] Krestinskaya, O., Ibrayev, T., & James, A. P. (2018). Hierarchical tempo-
ral memory features with memristor logic circuits for pattern recognition.
IEEE Trans. Comput. Aided Des. Integr. Circuits Syst., 37 , 1143–1156.

[30] Kriegeskorte, N., & Douglas, P. K. (2018). Cognitive computational neu-

roscience. Nat. Neurosci., 21 , 1148–1160.

[31] Kuan, L., Li, Y., Lau, C., Feng, D., Bernard, A., Sunkin, S. M., Zeng, H.,
Dang, C., Hawrylycz, M., & Ng, L. (2015). Neuroinformatics of the allen
mouse brain connectivity atlas. Methods, 73 , 4–17.

[32] Laird, J. E., Newell, A., & Rosenbloom, P. S. (1987). SOAR: An architec-

ture for general intelligence. Artif. Intell., 33 , 1–64.

[33] LeCun, Y., Bengio, Y., & Hinton, G. (2015). Deep learning. Nature, 521 ,

436–444.

[34] Markram, H. (2006). The blue brain project. Nat. Rev. Neurosci., 7 ,

153–160.

[35] Meissner, G. W., Nern, A., Singer, R. H., Wong, A. M., Malkesman, O., &
Long, X. (2019). Mapping neurotransmitter identity in the Whole-Mount
drosophila brain using multiplex High-Throughput ﬂuorescence in situ hy-
bridization. Genetics, 211 , 473–482.

[36] Mnih, V., Kavukcuoglu, K., Silver, D., Graves, A., Antonoglou, I., Wier-
stra, D., & Riedmiller, M. (2013). Playing atari with deep reinforcement
learning, . arXiv:1312.5602.

[37] Nakamura, T., Nagai, T., & Taniguchi, T. (2017). Serket: An architecture
for connecting stochastic models to realize a large-scale cognitive model.
Frontiers in Neurorobotics, 12 .

26

[38] Negishi, S., Hayami, T., Tamura, H., Mizutani, H., & Yamakawa, H. (2019).
Neocortical functional hierarchy estimated from connectomic morphology
in the mouse brain. In Biologically Inspired Cognitive Architectures 2018
(pp. 234–238). Springer International Publishing.

[39] Oh, S. W., Harris, J. A., Ng, L., Winslow, B., Cain, N., Mihalas, S.,
Wang, Q., Lau, C., Kuan, L., Henry, A. M., Mortrud, M. T., Ouellette, B.,
Nguyen, T. N., Sorensen, S. A., Slaughterbeck, C. R., Wakeman, W., Li,
Y., Feng, D., Ho, A., Nicholas, E., Hirokawa, K. E., Bohn, P., Joines, K. M.,
Peng, H., Hawrylycz, M. J., Phillips, J. W., Hohmann, J. G., Wohnoutka,
P., Gerfen, C. R., Koch, C., Bernard, A., Dang, C., Jones, A. R., & Zeng,
H. (2014). A mesoscale connectome of the mouse brain. Nature, 508 ,
207–214.

[40] Petersen, S. E., & Sporns, O. (2015). Brain networks and cognitive archi-

tectures. Neuron, 88 , 207–219.

[41] Poldrack, R. A., & Gorgolewski, K. J. (2017). OpenfMRI: Open sharing of

task fMRI data. Neuroimage, 144 , 259–261.

[42] Pradeep, A., Knight, R. T., & Gurumoorthy, R. (2013). Neuro-informatics

repository system.

[43] Rosenbloom, P. S., Demski, A., & Ustun, V. (2016). The sigma cognitive
architecture and system: Towards functionally elegant grand uniﬁcation.
Journal of Artiﬁcial General Intelligence, 7 , 1–103.

[44] Samsonovich, A. V., Klimov, V. V., & Rybina, G. V. (Eds.) (2016). Bi-
ologically Inspired Cognitive Architectures (BICA) for Young Scientists :
Proceedings of the First International Early Research Career Enhancement
School (FIERCES 2016). Springer, Cham.

[45] Sasaki, M., Yamakawa, H., & Arakawa, N. (2020). Construction of a whole
brain reference architecture (WBRA). In International Symposium on Ar-
tiﬁcial Intelligence and Brain Science (p. 31).

[46] Silver, D., Hubert, T., Schrittwieser, J., Antonoglou, I., Lai, M., Guez, A.,
Lanctot, M., Sifre, L., Kumaran, D., Graepel, T., Lillicrap, T., Simonyan,
K., & Hassabis, D. (2018). A general reinforcement learning algorithm that
masters chess, shogi, and go through self-play. Science, 362 , 1140–1144.

[47] Sun, R. (2016). Anatomy of the Mind: Exploring Psychological Mechanisms
and Processes with the Clarion Cognitive Architecture. Oxford University
Press.

[48] Suzuki, M. (). Pixyz: A library for developing deep generative models.

URL: https://github.com/masa-su/pixyz.

27

[49] Takahashi, K., Itaya, K., Nakamura, M., Koizumi, M., Arakawa, N.,
Tomita, M., & Yamakawa, H. (2015). A generic software platform for
brain-inspired cognitive computing. Procedia Comput. Sci., 71 , 31–37.

[50] Takahashi, Y., Schoenbaum, G., & Niv, Y. (2008). Silencing the critics:
understanding the eﬀects of cocaine sensitization on dorsolateral and ven-
tral striatum in the context of an actor/critic model. Front. Neurosci., 2 ,
86–99.

[51] Taniguchi, A., Fukawa, A., & Yamakawa, H. (2021). Hippocampal

formation-inspired probabilistic generative model. arXiv , .

[52] Taniguchi, T., Nakamura, T., Suzuki, M., Kuniyasu, R., Hayashi, K.,
Taniguchi, A., Horii, T., & Nagai, T. (2020). Neuro-SERKET: Devel-
opment of integrative cognitive system through the composition of deep
probabilistic generative models. New Generation Computing, 38 , 23–48.

[53] Taniguchi, T., Yamakawa, H., Nagai, T., Doya, K., Sakagami, M., Suzuki,
M., Nakamura, T., & Taniguchi, A. (2021). Whole-brain Probabilistic Gen-
erative Model towards Cognitive Architecture for Developmental Robots.
arXiv , .

[54] Tawatsuji, Y., Arakawa, N., & Yamakawa, H. (2020). Knowledge repre-
sentation for neural circuits subserving saccadic eye movement based on a
brain information ﬂow description. In International Symposium on Artiﬁ-
cial Intelligence and Brain Science (p. 45).

[55] Wang, P., Li, X., & Hammer, P. (2018). Self in NARS, an AGI system.

Frontiers in Robotics and AI , 5 , 20.

[56] Yamakawa, H. (2020). Attentional reinforcement learning in the brain. New

Generation Computing, .

[57] Yamakawa, H. (2020). Revealing the computational meaning of neocortical

interarea signals. Front. Comput. Neurosci., 14 , 74.

[58] Yamakawa, H. (2020). Towards a qualitative evaluation of biological plau-
sibility for brain-inspired software. In The 1st Asia-Paciﬁc Computational
and Cognitive Neuroscience (AP-CCN) Conference (p. 0031).

[59] Yamakawa, H., Arakawa, N., & Takahashi, K. (2017). Reinterpreting the
cortical circuit. In Architectures for Generality & Autonomy Workshop at
IJCAI . volume 17.

[60] Yamakawa, H., Arakawa, N., & Takahashi, K. (2020). Whole brain ref-
erence architecture to evaluate biological plausibility of human-like artiﬁ-
cial intelligence. In International Symposium on Artiﬁcial Intelligence and
Brain Science (p. 30).

[61] Yamakawa, H., Osawa, M., & Matsuo, Y. (2016). Whole brain architecture
approach is a feasible way toward an artiﬁcial general intelligence. In Neural
Information Processing (pp. 275–281). Springer International Publishing.

28

