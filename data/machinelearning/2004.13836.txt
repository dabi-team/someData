0
2
0
2

r
p
A
4
2

]
I

A
.
s
c
[

1
v
6
3
8
3
1
.
4
0
0
2
:
v
i
X
r
a

RESEARCH ARTICLE

Uncertainty Modelling in Risk-averse Supply Chain Systems Using
Multi-objective Pareto Optimization

Heerok Banerjeea, Dr. V. Ganapathyb and Dr. V. M. Shenbagaramanc

aDept. of Mathematics and Computer Science, University of Antwerp, Belgium
bDept. of Information Technology, SRM Institute of Science & Technology, India
cFaculty of Management, SRM Institute of Science & Technology, India
Heerok.Banerjee@student.uantwerpen.bea

ARTICLE HISTORY
Compiled April 30, 2020

ABSTRACT
One of the arduous tasks in supply chain modelling is to build robust models against
irregular variations. During the proliferation of time-series analyses and machine
learning models, several modiﬁcations were proposed such as acceleration of the
classical levenberg-marquardt algorithm, weight decaying and normalization, which
introduced an algorithmic optimization approach to this problem. In this paper,
we have introduced a novel methodology namely, Pareto Optimization to handle
uncertainties and bound the entropy of such uncertainties by explicitly modelling
them under some apriori assumptions. We have implemented Pareto Optimization
using a genetic approach and compared the results with classical genetic algorithms
and Mixed-Integer Linear Programming (MILP) models. Our results yields empiri-
cal evidence suggesting that Pareto Optimization can elude such non-deterministic
errors and is a formal approach towards producing robust and reactive supply chain
models.

KEYWORDS
Time-series Analyses, Uncertainty Modelling, Supply Chain Optimization, Pareto
Optimization, Multi-objective Optimization

1.

Introduction

Time-series analyses have been widely employed in supply chain systems to support
managerial strategies, predictive analytics and regression analysis. Although, time-
series analyses is considered as a powerful tool applicable across a wide spectrum of
objectives but careful modelling is still needed to improve accuracy and soundness.
Contemporary Deep Neural Networks (DNNs) such as Long Short-Term Memory net-
works (LSTM), Recurrent Neural Networks (RNNs) and time-series models such as
Non-linear Auto Regressive (NAR) are considered to be the state-of-the-art models
for sequence-to-sequence prediction. However, empirical studies have shown that they
perform poorly when there are induced variations in a time series sequence [1][Fig.
1]. Statistical analyses of supply chains suggest that decomposition techniques such as
weighted normalization, discretization or quantization and transformations are feasible
to handle variability, however it was insuﬃcient to outline the performance trade-oﬀs
with time-series sequences under the inﬂuence of fuzzy environments[3]. A later study

 
 
 
 
 
 
conforming to dynamic analysis of time-series model was conducted and it was shown
that Information Gain (IG) 1 was deterministic under certain assumptions[2, 3]. These
insightful results played a central role in reinforcing some of the contemporary models
but a key question, which still needs to be addressed is how to formally derive uncer-
tainty models that can enhance existing time-series models with adaptive capabilities.
In essence, the capability to learn invariants on previous time-steps can elude some
of the non-determinism and it can parallely serve as a handy tool to produce reactive
and error-tolerant models.

160

140

120

100

80

60

40

20

0

)
$

n
i
(

d
e
t
a
r
e
n
e
g

e
u
n
e
v
e
R

0

50

100

150

200

Actual
LSTM Model

160

140

120

100

80

60

40

20

0

)
$

n
i
(

d
e
t
a
r
e
n
e
g

e
u
n
e
v
e
R

400

450

500

550

600

0

50

100

150

200

Actual
NAR Model

400

450

500

550

600

250

300
Time (in s)

350

250

300
Time (in s)

350

(a) LSTM model without uncertainty model

(b) NAR model with uncertainty model

Figure 1. Performance analysis of LSTM and NAR model for sequence-to-sequence prediction

To further yield empirical evidence, we had previously modelled a supply chain
system with periodic ﬂuctuations in consumer demands [4, 5]. Fig.1(a) and Fig. 1(b)
plots the actual and the model predictions of supply chain revenues as a function
of time. We clearly observe that the LSTM model is intolerant to induced variation
and fails to predict accurately. Whereas, NAR model suﬃciently adapts to periodic
ﬂuctuations and the error is minimal since the uncertainty model bounds the target
sequence.

In this paper, we have introduced Pareto Optimization as a formal methodology
to deal with uncertainty in dynamic multi-variate time-series sequences. In section 2,
we have discussed the literature pertaining to optimization of supply chains systems
and some of the recent contributions made in resolving to accurate formal methods.
To compare the proposed methodology with existing formal methods, a succinctly de-
ﬁned method namely Mixed-Integer Linear Programming (MILP) is selected and
its fundamental limitations are discussed in section 3. We have introduced mathemat-
ical models to represent objective functions and proposed a set of linear optimization
scenarios based on a case study. To demonstrate its implementation, we have also
provided numerical examples in section 3.2 and illustrated risk modelling in supply
chain systems using MILP. In section 4, we have demonstrated Pareto Optimization
for multi-objective optimization problems using a genetic approach [6] and pointed
out its signiﬁcance with respect to its methodological beneﬁts. We have principally
argued that the optimization scenario in MILP models is imprecise for certain corner
cases where the optimization boundary lacks to accommodate trade-oﬀs between mul-
tiple optimal solutions. We have shown that transforming linear optimization models

1Information Gain is a measure of entropy. It denotes the predictability of a variable w.r.t observations on
previous timesteps.

2

into accommodating multi-objective scenarios can somehow elude those trade-oﬀs. In
section 5, we have discussed the obtained results with visual aids and summarized the
implementational complexities as compared to linear programming models. Finally in
section 6, we have concluded this study and provided insights to further improvements
in Pareto optimization models for supply chain systems.

2. Background & Related Work

Optimization problems in supply chain systems have attracted researchers and sup-
ply chain managers since the early industrialization and democratization of products
at the expense of outsourcing services like manufacturing, dispensing, transportation,
packaging etc. Optimum resource conﬁguration is one of the most challenging prob-
lems in SCMS [7, 9]. For example, supply chain systems that are immune to pervasive
risks, tend to emphasize on deﬁning singleton optimization problems with either total
costs, Return on Investment or transportation cost as objective functions. However,
framing a single objective-based supply chain needs prior exposure and additional
optimization (of inﬂuencing parameters) such as lead-time optimization, stock opti-
mization, inventory-level optimization etc [10]. Sometimes conﬂicting objectives can
cause disruptions in the supply chain; and therefore, a thorough study outlining the
trade-oﬀs between objective functions is necessary prior to mathematical modelling.
This deviates the attention from supply chain modelling towards satisfying conﬂicting
objectives, termed as multi-objective optimization[11].

2.1. Multi-objective Optimization

Many novel multi-objective optimization methodologies have been proposed with lim-
ited constraints and succinct objectives. For example, A location-inventory prob-
lem was investigated using a multi-objective self-learning algorithm based on non-
dominated sorting genetic algorithm II (NSGA II) in order to minimize the total cost
of the supply chain and maximize the volume ﬁll rate and the responsiveness level
[12]. The study subjectively deﬁned Genetic Algorithms (GA) [see appendix ??] as
the base for resolving optimization problems with partial accuracy. However, it was
later indicated that forward supply chains tend to optimize targets such as supplier
distributions, lead time, total costs etc. brutally at initial generations but had inex-
plicable impacts on successive generations. Subsequently in another study, another
multi-objective optimization model using Fuzzy logic was derived for forward and re-
verse supply chain systems for minimizing total cost and the environmental impact [13].
The Fuzzy-based model consisted of two phases. The ﬁrst phase converted the proba-
bility distribution of multi-objective scenarios into mixed-integer linear programming
models and subsequently into an auxiliary crisp representation by denoting optimiza-
tion scenarios as linear inequalities. The second phase centered on fuzziﬁcation of the
subjected inequalities and deﬁning rules to search for the non-dominant solution [26].
A key limitation of this methodology was that the underlying fuzzy inference system
produced multiple non-dominant solutions, which created ambiguity.

Several models have also been proposed for multi-echelon supply chains (Suppli-
ers, Distributors, Manufacturers, Retailers) with open-loops. For example, A multi-
product with multi-period random distribution model was proposed to compute with
predetermined goals for a multi-echelon supply chain network with high ﬂuctuations
in market demands and product prices. Similarly, a two-period multi-criteria fuzzy-

3

based optimization approach was proposed where the central focus was to maximize
the participant’s expected revenues, average inventory levels along with providing ro-
bustness of selected objectives under demand uncertainties [15]. This methodology
was heavily scrutinized and was later discarded because the method accounted two
non-conﬂicting objectives to serve its purpose whereas conﬂicting objectives resulted
in diﬀerent solutions. Considering travelling distance and traveling time as objec-
tive functions, a self-learning multi-objective model was proposed namely fuzzy logic
non-dominated sorting genetic algorithm II (FL-NSGA II), which basically solved a
multi-objective MILP optimization scenario of allocating vehicles with multiple de-
pots based on average traﬃc counts per unit time, average duration of parking and
a primitive cost function [16]. This methodology reduced the operational complex-
ity and upfront implementation time but the limitations remained the same as in
[15]. Alternatively, a new hybrid methodology was also proposed which combined ro-
bust optimization (soft-computing), queuing theory and fuzzy inferential systems for
multi-objective optimization based on hierarchical if-then rules [18]. Another variant
of these hybrid soft-computing approaches consisted of modifying particle-swarm op-
timization method (MEDPSO) with classical genetic based approaches. These model
were adopted for generating non-dominant solutions for a multi-echelon unbalanced
supplier selection scenario [20, 21, 22].

By modifying classical GA-based optimization approaches, it was evident that hy-
brid approaches produced more dominant solutions in less time. However, empirical
evidence suggested that these models were not accurate in terms of handling ripple
propagations and demand-supply disruptions [23]. Arguably, it can be said that the
emergence of the ripple eﬀect redirected the attention of supply chain researcher to-
wards emphasizing on modelling irregular variations, seasonal trends etc, which was
coined as risks, in general. Gradually, the central focus which constituted of satisfying
multiple objectives shifted towards bounding the entropy of the desired targets under
the inﬂuence of risks.

3. A case study of risk-averse supply chain systems

Risks are indigenous across supply chains networks. This claim can be further
solidiﬁed with some of the recent empirical studies conducted across dominant supply
chain actors with respect to their logistics and operational strategies [24, 25, 7]. To
reduce costs across the supply chain, large enterprises are moving manufacturing
operations to countries which oﬀer lower labor costs, lower taxes, and/or lower costs
of transportation for raw materials. For some companies, outsourcing production
involves not only a single country, but several countries for diﬀerent parts of their
products. Having suppliers in diﬀerent geographic locations complicates the supply
chain [26, 15]. Furthermore, companies have to extend or maintain fast delivery
lead times to customers who want to receive their products on schedule despite the
increased complexity in the manufacturers supply chains [15]. Finally, companies also
have to maintain real-time visibility into their production cycle ; from raw materials
to ﬁnished goods and ensure the eﬃciency of their manufacturing processes. Due to
these aforementioned complications, the inherent supply chain architecture induces
risks that are abundant at every tier of the supply chain. Hence, in order to produce
proactive managerial strategies and support business operations, building formal
methods for modelling risks is a crucial step.

4

In the next section, one of the traditional approaches to modelling risks is discussed
with a simple supply chain example. For the sake of the study, we have calculated
the numerical methods for one iteration and we have assumed that the probability of
failure for individual suppliers is zero.

3.1. Modelling supply chains using Mixed-Integer Linear Programming

(MILP)

For a given supply chain with 3 echelons (tiers): Supplier, Manufacturer, and
Retailer with selective activities such as sourcing or supplying raw material to each
component, assembling ﬁnal products and delivering to destination markets, each
component has its own cost, lead-time and associated risk. Therefore, we can con-
sider a simple supply chain network as a directed graph G comprising of suppliers
S = {S1, S2, S3}, a manufacturer M and a retailer R as shown in Fig.2. For the sake
of study, one must assume that the supply chain actors are independent and conse-
quently the logistics and operational costs can be arbitrarily chosen.

α1, β1

S1

α2, β2

S2

α3, β3

S3

$2

$3

$7

$4

M

R

demand

Figure 2. Simple Supply chain architecture with multiple suppliers, single manufacturer and single retailer

In the above supply chain architecture, the demand subjected to the retailer is
propagated directly to the manufacturer. Consequently, the demand is arbitrarily dis-
tributed among the suppliers S = {S1, S2.S3}. For example, if the demand is ’d’ and
the demand distribution is denoted by random variables {x1, x2, x3}, then the cost
function Fc can be represented as a linear Diophantine equation. This is shown below:

(1) The total supply chain cost can be calculated as [7]:

T otalCost = ξ ×

N
(cid:88)

( µi .

i=1

Ni(cid:88)

j=1

Cijyij)

(Z1)

where, N is the number of components,
ξ denotes the period of interest,
µi is the average demand per unit time,2
Cij is the cost of the jth resource option for the ith component,
yij is a variable denoting the amount that the ith component supplies as a
participant for the jth resource option

2For the sake of simplicity, we assume the period of interest as one year and the average demand per cycle as
one/unit time. More realistic values are typically extracted by random sampling of time-series data.

5

Using Z1, we can represent the supply chain model given in Fig.2 as:

Fc(S) : 2x1 + 3x2 + 7x3 ≤ 4d
x1 + x2 + x3 = d
0 ≤ x1, x2, x3 ≤ d

s.t

(Z2)
(1)
(2)

Remark:The inequality holds because we assume that the supply chain is in a supply-demand equi-
librium. This is the case when the subjected demand has to be necessarily satisﬁed and the logistics
costs for manufacturing, packaging etc is equally balanced by the cash ﬂow throughout the supply chain.
(2) The Risk Index is derived from the model proposed in [8], and can be mathe-

matically formulated as:

RIsupplier =

n
(cid:88)

i,j=1

αsij . βsij . (1 − (1 −

m
(cid:89)

j=1

P ( ˜Sij))

(Z3)

where, for the jth demand,

αsij is the consequence to the supply chain if the ith supplier fails,
βsij is the percentage of value added to the product by the ith supplier,
P ( ˜Sij) denotes the marginal probability that the ith supplier fails

3.2. Numerical Analysis

In this section, we attempt to replicate the model given in Fig. 2 and observe the
induced uncertainties in supplier workload distribution, which can be considered as an
optimization problem. We construct a tabulated statistics representing the associated
risks and logistics of the suppliers. Using Z3 and Z1, we compute the objective func-
tions. Next, we rank all the possible distributions with respect to their ﬁtness values.
Finally, the global optimum is selected as the optimal workload distribution.

The monotonous change in supplier distribution as we iterate through the solutions
over x axis suggests that the maximum likelihood for an appropriate distribution is
only concentrated where the demand is equally distributed to the suppliers. Intuitively,
this can be assumed since larger share of workload on individual supplier will essen-
tially increase unnecessary delays and processing latencies. The encircled region in
Fig. 3 denotes the minimum likelihood for risk-propagation and we attempt to bound
the objective function Z3 within the boundary of the enclosed circle. This assumption
not only eliminates larger workload distributions but also gives a notion about the
upper bound and the lower bound of the uncertainty being dealt with. This approach
is convincingly applicable to most stationary supply chain systems where a constant
demand is expected and the supplier distribution in convergent in nature. However,
when the demand is increased, the risk distribution diﬀers slightly. This is essentially
due to the fact that larger demand queries would result in larger number of distri-
butions, henceforth increasing the margin of the optimal solution. So, it would result
in a diﬀerent enclosed ﬁgure. In Fig. 3(c), since the distribution is skewed, there can
be multiple distributions satisfying both the objective functions. In such cases, MILP
fails to model uncertainties accurately as the optimal distribution maps to multiple
risk indices. This essentially introduces ambiguity in the model, as the optimization
problem transforms into a multi-objective optimization problem.

6

Table 1. Analysis of supplier workload distribution as an optimization problem

β1
0.1
0.1
0.1
0.1
0.2
0.2
0.3
0.3
0.4
0.6
0.8

Supplier
Distribution
[0,25,75]
[4,26,70]
[8,27,65]
[12,28,60]
[16,29,55]
[20,30,50]
[24,31,45]
[28,32,40]
[32,33,35]
[50,25,25]
[70,20,10]

α1 α2 α3
1.0
0.1
0.1
1.0
0.1
0.1
1.0
0.1
0.1
1.0
0.1
0.1
0.8
0.1
0.1
0.8
0.2
0.2
0.5
0.2
0.2
0.5
0.2
0.2
0.4
0.3
0.3
0.2
0.2
0.3
0.1
0.2
0.6

Structural Variables
β2
0.3
0.3
0.3
0.3
0.3
0.3
0.3
0.4
0.4
0.3
0.3

Assigned Probabilities Total
Cost
600
576
552
528
504
480
456
432
408
350
270

β3 P(S1) P(S2) P(S3)
0.75
1.0
0.70
0.8
0.65
0.8
0.60
0.8
0.55
0.6
0.5
0.6
0.45
0.5
0.4
0.5
0.35
0.4
0.25
0.3
0.1
0.1
1 The values of α and β are extensively discussed in [8]. The probability of failure for each supplier is the bi-
(cid:1)1 − distributionSi /demand ×
nomial probability of ’n’ successive failures, which is given by P robSi = (cid:80)n
(cid:1)distributionSi /demand. The probability of failure is assumed to be zero.
(cid:0) n
n−k
2 It should be noted that we consider arbitrary distributions with absolute diﬀerences of atleast 5. The optimization
scenario is subject to further evaluation of the entire supplier distribution. However, We overlook those distributions
due to limited space.
3 The optimal distribution (shown in red ) is selected accounting both the objective functions Z3 and Z1. We take
the weighted sum of both objective functions to compute the ﬁtness values. (W1.Z1 + W2.Z2 = f itness)

Risk
Index
0.7575
0.5682
0.5361
0.4896
0.2759
0.266
0.1455
0.1526
0.134
0.1560
0.3341

0.25
0.26
0.27
0.28
0.29
0.3
0.31
0.32
0.33
0.25
0.2

0
0.04
0.08
0.12
0.16
0.2
0.24
0.28
0.32
0.5
0.7

(cid:0)n
k

k=0

4. Uncertainty Modelling using Pareto Optimization

Pareto Optimal solutions or Pareto Fronts are a set of trade-oﬀ points between
diﬀerent objective functions and comprises of a unique set of non-dominated solutions,
that is unique global solutions for which no other solution exists that can improve one
objective function without having to disrupt atleast one of the other objectives. In
context to supply chain systems, we transform the linear optimization problem into
a multi-objective optimization with some a-priori assumptions. We assume the upper
bound and lower bound of both objective functions Z3 and Z1 to be static over time.
Then, the optimization scenario is accompanied with a genetic optimization approach,
where a set of initial population, that is a set of arbitrary distributions are spawned
and their respective ﬁtness values are measured. Accordingly, a set of local minimas
are calculated for a discrete value of the risk index. Mathematically, we attempt to
map the Pareto optimal fronts with their corresponding risk indices and this can be
formally represented as:

ObjectiveF unction : min/max. T otalCost

ObjectiveF unction : min.

(cid:89)

RIsupplier

s.t, Fc(S) : 2x1 + 3x2 + 7x3 ≤ 4d holds true
0 ≤ x1, x2, x3 ≤ d

(F1)

(F2)

(3)
(4)

For ease of computing, we can comfortably attempt Pareto optimization on the
objectives F1 and F2 using MATLAB Optimization toolbox. In Fig. 4, we have plotted
the pareto optimal fronts for a supply chain dataset [4]. The curve color coded with red
denotes the maximum boundary of the objective function F1 with respect to objective

7

Supplier 1
Supplier 2
Supplier 3

120

100

80

60

40

20

e
u
l
a
V
n
o
i
t
u
b
i
r
t
s
i
D

0

0

20

60
40
Solution#

80

100

e
u
l
a
V
n
o
i
t
u
b
i
r
t
s
i
D

120

100

80

60

40

20

0

Supplier 1
Supplier 2
Supplier 3

0 20 40 60 80 100120140160180200220
Solution#

(a) Supplier Distribution, demand=100

(b) Supplier Distribution, demand=230

e
u
l
a
V
n
o
i
t
u
b

i
r
t
s
i
D

240
220
200
180
160
140
120
100
80
60
40
20
0

Supplier 1
Supplier 2
Supplier 3

0

20

40

60
Solution#

80

100

120

(c) Supplier Distribution, demand=480

Figure 3. Diﬀerent supplier distributions under some degree of uncertainty

(a) Maximum and Minimum Pareto Fronts, Demand=100

(b) Pareto Indicators

Figure 4. Pareto Optimization of objective functions F1 and F1

F2. Likewise, the blue curve denotes the minimum boundary of objective function F1
with respect to objective F2. Finally, superimposing both curves yields a min-max
domain of our cost function Z1. Fig. 4(b) plots the average Pareto distances between
successive generations.3 The average Pareto distance is quite satisfactory since it is
as high as 1 unit upto 400 generations. A larger average Pareto distance would imply

3The Pareto distance denotes the euclidean distance between two Pareto optimal fronts.

8

more data points to be interpolated in order to progress in our analysis and would
increase the margin of interpolation errors. Fig. 6 illustrates the ﬁnal plot that we
desire. As observed, interpolated data points between adjacent Pareto fronts induce
interpolation errors and inaccuracy of the model. Clearly, the number of Pareto fronts
(and in turn, the initial population) plays a key role in determining the boundary of
the target sequence accurately. To tackle this, a larger initial population can be set
but at the cost of computing power.

4.1.

Implementation

In this section, we have summarized the implementation of the GA-based Pareto op-
timization approach in granular details. The implementation of the proposed method-
ology is carried out using MATLAB Optimization Toolbox. In [4], the supply chain
network is simulated by explicitly modelling a Linear Diophantine Solver to compute
the risk factor using Z3. A key limitation to this approach is that the solver selects
the optimal supplier distribution based on the primitive objectives (total cost) only
(equ.Z2). In this paper, we have proposed a more accurate and sound methodology to
account multiple objectives (risk factor, total cost, lead-time, ripple propagation etc.)
and tackle optimization challenges with conﬂicting objective functions.

We employ a genetic approach for Pareto Optimization as described in algorithm 1
and algorithm 2. Genetic Algorithms (GA) are a set of naturally inspired algorithms
that are derived from Darwinian theory of evolution. Firstly, the desired objective
functions are chosen (using Z1 and Z3) and a ﬁtness function is assigned as per the
supply chain model (using Z2). Next, we chose an arbitrary demand and spawn random
possible solutions. Subsequently, we evaluate the ﬁtness function for each individual
distribution and rank them according to their ﬁtness values. At successive generations,
we spawn further sets of randomly generated solutions and eliminate the unsuitable
ones by comparing their ﬁtness values. Finally, we rank the ﬁnal surviving population
at the last generation and the most dominant candidate, with the maximum ﬁtness
value is selected as the optimal solution.

Algorithm 1: Multi-objective Pareto Optimization
output: P aretoF ront = {min. Fc, max. Fc, min. RI}
input : {Cost Function: 2 ∗ x1 + 3 ∗ x2 + 7 ∗ x3,
(cid:1)1 − distributionS /demand × (cid:0) n

Risk Index: (cid:0)n
0
demand}

(cid:1)distributionS /demand,

n−0

begin

suppliermin.cost = Genetic Optimization (CostF unction, demand, 0.8);
suppliermin.risk = Genetic Optimization (RiskIndex, demand, 0.8);
/* Add more objectives.

min. RI = Risk Index (suppliermin.risk);
min. Fc = Cost Function (suppliermin.cost);
max. Fc = Cost Function (suppliermin.risk);
/* Add more targets.

return {min. Fc, max. Fc, min. RI}

end

*/

*/

9

Algorithm 2: Genetic Optimization Algorithm for supplier-selection problem
output: S=(d1, d2, d3) : d1, d2, d3 ∈ N /* optimal supplier distribution.

*/

input : {Fitness function, demand, crossover ratio}
begin

*/

*/

*/

/* Initial population
spawn : random Initial Population;
evaluate ﬁtness: Initial Population;
sort : Initial Population;

/* Selection
set Final Population = Initial Population;
while childreneliminated ! = 0 or lastGeneration == true do

spawn : random children;
set childreneliminated = zero;
for each children do

evaluate ﬁtness: children ;
if f itnesschildren ≤ f itnessF inal P opulation[1] then

remove children;
set childreneliminated+ = 1;

else

set Final Population‘=‘children;

end

end

/* Mutation
for crossover*100 do

random select : children1, children2 ;
children3 = children1 ⊕ children2;
evaluate ﬁtness: children3;
if f itnesschildren3 ≤ f itnesschildren1orf itnesschildren2 then

remove children3;

else

remove children1, children2;

end

end

next generation /* repeat selection until last generation

*/

end

/* Ranking
sort : Final Population;
return Final Population[1]/* returns the most dominant solution

w.r.t fitness function

end

5. Results and Discussion

*/

*/

In this section, we discuss some of the results obtained from the GA-based Pareto
optimization approach in terms of performance, scalability and employability.

10

Table 2. Population statistics for GA-based Pareto optimization, demand=100

Generation

Simulation Variables

Simulation Statistics

Parameter

Value Children Mutation

Eliminated

Total
Population

Generation 1
(Parent)

Initial Population
Cross-over ratio

Generation 2

Spawned Population
Cross-over ratio

Generation 3

Spawned Population
Cross-over ratio

Generation 4

Spawned Population
Cross-over ratio

200
0.8

175
0.8

240
0.8

87
0.8

0

160

179 (89.5%)

196

156

173 (88.2%)

263

210

238 (90.4%)

112

89

85 (75.8%)

21

23

25

27

Table 2 provides a snippet of the population statistics while performing the GA-
based Pareto optimization. We observe that the average elimination ratio for four
successive generations is 85.9 %. This empirical evidence is crucial as it suggests that
majority of the local optimum are eliminated at every successive generation. As op-
posed to linear optimization approaches such as MILP or dynamic programming, the
time complexity in performing iterative comparisons is overwhelming, however, the
statistics show that with a suitable cross-over ratio, most of the survived children rep-
resent the global optimum. It is also interesting to note that with a few obtained Pareto
fronts, one can sketch the target boundaries for the objective function as shown in Fig.
6. However, it is recommended to continue the genetic process for longer generations
since hidden global solutions may be revealed at later generations.

·105

3

2

1

s
n
o
i
t
u
l
o
s

l
a
c
o
l

f
o

r
e
b
m
u
N

MILP
classical GA
GA Pareto

100

480

720
Demand

1,200

1,500

Figure 5. Comparison of MILP vs Classical GA vs GA-based Pareto Optimization

Next, we implemented the propesed GA-based Pareto Optimization for several de-
mand values and compared the number of spawned solutions with MILP and classical
GA-based optimization approaches. Fig. 5 plots the results. We observe that when
the demand is high, which implicitly means that the number of possible solutions

11

is quite large, MILP and classical GA-based approaches spawn quite lesser solutions
as compared to GA-based Pareto optimization. This is essentially the case because
MILP and classical GA methodology accompanies a sequential search and overlooks
conﬂicting objectives. As such, this can be treated as a drawback of MILP and classi-
cal GA methodologies for resolving multi-objective optimization scenarios. However,
the results indicate that essentially GA-based Pareto optimization produces hidden
solutions that are overlooked by MILP models. Therefore, we can consider GA-based
Pareto Optimization as a much dominant and sound approach as compared to MILP
and classical GA methods.

Actual
NAR Model
max. Fc
min. Fc

16

14

12

10

8

6

4

2

0

−2

−4

)
$

n
i
(

d
e
t
a
r
e
n
e
g

e
u
n
e
v
e
R

0

20

40

60

80

100

120

140
Time (in s)

160

180

200

220

240

Figure 6. NAR with superimposed Pareto optimal fronts [4]
Initial Population=400, Number of obtained Pareto Fronts=27, Demand= 100

Fig. 6 plots the time-series sequence with both minimum and maximum revenue
generations, which are the obtained Pareto optimal fronts. We observe that by bound-
ing the entropy of our objective function with respect to uncertain inﬂuencers, We
essentially eliminate the need to mitigate the error and modify our forecasting mod-
els. As such, the ability to retain Information Gain at every timestep is crucial for
time-series and machine learning models. We implemented the proposed GA-based
Pareto Optimization with an Non-linear Autoregressive (NAR) model and observed
that the forecasting model predicted real values within the obtained domain and with
higher precision. This is our key insight for modelling uncertainties as well as non-
deterministic inﬂuencers in supply chain systems.

12

6. Conclusion

In this study, we have discussed uncertainty modelling in time-series analyses with
respect to domain-speciﬁc use cases such as multi-objective optimizations in supply
chain systems. Firstly, we reviewed some of that empirical evidences that indicates to
modify contemporary time-series models and assert uncertainty modelling as the root
branch for time-series analyses. And we have discussed the employability of traditional
approaches like Mixed-integer Linear Programming (MILP) along with mathematical
models for examining risk-averse scenarios in supply chain systems. The results indi-
cate that the uncertainties governing the operations of a supply chains are directly
aﬀected by the consumer demand, in the sense that increasing demand would re-
ﬂect an increased risk ﬂuctuation in the supply chain. Additionally, we argued that
bulk demands would yield more possible distributions amongst suppliers, which would
complicate our optimization scenario by increasing the solution space. We principally
argued that if the number of possible distributions is strictly huge, it would result in
numerous uneven distributions with variable risk indices. Our results indicated and
supported that Pareto Optimization can essentially elude this trade-oﬀ and to some
extent, mitigate the error induced in supply chain models. Finally, we implemented
Pareto Optimization for a multi-tier supplier selection problem to optimize total cost
and risk index. The empirical results indicated that the accuracy of the model is
inﬂuenced by the initial population and the average Pareto distance of the model.
However, we showed that even with random initial and candidate populations, a GA-
based Pareto Optimization dominates over classical GA-based methods and traditional
MILP methods.

References

[1] Faddy, M. F., and M. C. Jones. ”Modelling and analysis of data that exhibit tem-
poral decay.” Journal of the Royal Statistical Society: Series C (Applied Statistics)
48.2 (1999): 229-237.

[2] Petropoulos, Fotios, Rob J. Hyndman, and Christoph Bergmeir. ”Exploring the
sources of uncertainty: Why does bagging for time series forecasting work?.” Euro-
pean Journal of Operational Research 268.2 (2018): 545-554.

[3] Laptev, Nikolay, et al. ”Time-series extreme event forecasting with neural networks

at uber.” International Conference on Machine Learning. Vol. 34. 2017.

[4] Banerjee, Heerok; Saparia, Grishma; Ganapathy, Velappa; Garg, Priyanshi; Shen-
bagaraman, V. M. (2019), Time Series Dataset for Risk Assessment in Supply Chain
Networks, Mendeley Data, v2. url: http://dx.doi.org/10.17632/gystn6d3r4.2

[5] Banerjee, Heerok. ”A Comparative Study On Statistical And Neural Ap-
proaches For Optimizing Supply Chain Management (SCM) Systems.” (2019). url:
https://dx.doi.org/10.13140/RG.2.2.19062.65601

[6] Hajikhani, Alborz, Mohammad Khalilzadeh, and Seyed Jafar Sadjadi. ”A fuzzy
multi-objective multi-product supplier selection and order allocation problem in
supply chain under coverage and price considerations: An urban agricultural case
study.” Scientia Iranica 25.1 (2018): 431-449.

[7] Scheibe, Kevin P., and Jennifer Blackhurst. ”Supply chain disruption propagation:
a systemic risk and normal accident theory perspective.” International Journal of
Production Research 56.1-2 (2018): 43-59.

13

[8] Neureuther, Brian D., and George Kenyon. ”Mitigating supply chain vulnerability.”

Journal of marketing channels 16.3 (2009): 245-263.

[9] Cao, Cejun, et al. ”A novel multi-objective programming model of relief distribu-
tion for sustainable disaster supply chain in large-scale natural disasters.” Journal
of Cleaner Production 174 (2018): 1422-1435.

[10] Hajikhani, Alborz, Mohammad Khalilzadeh, and Seyed Jafar Sadjadi. ”A fuzzy
multi-objective multi-product supplier selection and order allocation problem in
supply chain under coverage and price considerations: An urban agricultural case
study.” Scientia Iranica 25.1 (2018): 431-449.

[11] Loni, Parvaneh, Alireza Arshadi Khamseh, and Seyyed Hamid Reza Pasandideh.
”A new multi-objective/product green supply chain considering quality level repro-
cessing cost.” International Journal of Services and Operations Management 30.1
(2018): 1-22.

[12] Cao, Cejun, et al. ”A novel multi-objective programming model of relief distribu-
tion for sustainable disaster supply chain in large-scale natural disasters.” Journal
of Cleaner Production 174 (2018): 1422-1435.

[13] Cao, Cejun, et al. ”A novel multi-objective programming model of relief distribu-
tion for sustainable disaster supply chain in large-scale natural disasters.” Journal
of Cleaner Production 174 (2018): 1422-1435.

[14] Singh, Sujeet Kumar, and Mark Goh. ”Multi-objective mixed integer program-
ming and an application in a pharmaceutical supply chain.” International Journal
of Production Research 57.4 (2019): 1214-1237.

[15] Metiaf, Ali, et al. ”Multi-objective Optimization of Supply Chain Problem Based
NSGA-II-Cuckoo Search Algorithm.” IOP Conference Series: Materials Science and
Engineering. Vol. 435. No. 1. IOP Publishing, 2018.

[16] Hendalianpour, Ayad, et al. ”A linguistic multi-objective mixed integer program-
ming model for multi-echelon supply chain network at bio-reﬁnery.” EuroMed Jour-
nal of Management 2.4 (2018): 329-355.

[17] Park, Kijung, Gl E. Okudan Kremer, and Junfeng Ma. ”A regional information-
based multi-attribute and multi-objective decision-making approach for sustainable
supplier selection and order allocation.” Journal of Cleaner Production 187 (2018):
590-604.

[18] Ebrahimi, M., R. Tavakkoli-Moghaddam, and F. Jolai. ”Bi-objective Build-to-
order Supply Chain Problem with Customer Utility.” International Journal of En-
gineering 31.7 (2018): 1066-1073.

[19] Cao, Cejun, et al. ”A novel multi-objective programming model of relief distribu-
tion for sustainable disaster supply chain in large-scale natural disasters.” Journal
of Cleaner Production 174 (2018): 1422-1435.

[20] Yildizbai, Abdullah, et al. ”Multi-level optimization of an automotive closed-loop
supply chain network with interactive fuzzy programming approaches.” Technolog-
ical and Economic Development of Economy 24.3 (2018): 1004-1028.

[21] alk, Ahmet, et al. ”A Novel Interactive Fuzzy Programming Approach for Opti-
mization of Allied Closed-Loop Supply Chains.” International Journal of Compu-
tational Intelligence Systems 11.1 (2018): 672-691.

[22] Park, Kijung, Gl E. Okudan Kremer, and Junfeng Ma. ”A regional information-
based multi-attribute and multi-objective decision-making approach for sustainable
supplier selection and order allocation.” Journal of Cleaner Production 187 (2018):
590-604.

[23] Dolgui, Alexandre, Dmitry Ivanov, and Boris Sokolov. ”Ripple eﬀect in the sup-
ply chain: an analysis and recent literature.” International Journal of Production

14

Research 56.1-2 (2018): 414-430.

[24] Ojha, Ritesh, et al. ”Bayesian network modelling for supply chain risk propaga-

tion.” International Journal of Production Research 56.17 (2018): 5795-5819.

[25] Kki, Anssi, Ahti Salo, and Srinivas Talluri. ”Disruptions in supply networks: A
probabilistic risk assessment approach.” Journal of Business Logistics 36.3 (2015):
273-287.

[26] Singh, Sujeet Kumar, and Mark Goh. ”Multi-objective mixed integer program-
ming and an application in a pharmaceutical supply chain.” International Journal
of Production Research 57.4 (2019): 1214-1237.

[27] Ivanov, Dmitry, Alexander Tsipoulanidis, and Jrn Schnberger. ”Basics of Sup-
ply Chain and Operations Manageme04nt.” Global Supply Chain and Operations
Management. Springer, Cham, 2017. 1-14.

[28] Van der Vorst, J. G. A. J. ”Supply Chain Management: theory and practices.”

Bridging Theory and Practice. Reed Business, 2004. 105-128.

[29] Guedes, Edson Jnior Gomes, et al. ”Risk Management in the Supply Chain of
the Brazilian automotive industry.” Journal of Operations and Supply Chain Man-
agement 8.1 (2015): 72-87.

[30] Flynn, Barbara, Mark Pagell, and Brian Fugate. ”Survey research design in supply
chain management: the need for evolution in our expectations.” Journal of Supply
Chain Management 54.1 (2018): 1-15.

[31] Scheibe, Kevin P., and Jennifer Blackhurst. ”Supply chain disruption propagation:
a systemic risk and normal accident theory perspective.” International Journal of
Production Research 56.1-2 (2018): 43-59.

[32] Ghadge, Abhijeet, et al. ”A systems approach for modelling supply chain risks.”

Supply chain management: an international journal 18.5 (2013): 523-538.

[33] Mastrocinque, Ernesto, et al. ”A multi-objective optimization for supply chain
network using the bees algorithm.” International Journal of Engineering Business
Management 5.Godite 2013 (2013): 5-38.

15

