2
2
0
2

p
e
S
0
2

]

G
L
.
s
c
[

2
v
8
2
4
3
0
.
7
0
2
2
:
v
i
X
r
a

SC2EGSET: STARCRAFT II ESPORT REPLAY AND GAME-STATE
DATASET

A PREPRINT

Andrzej Białecki*,1, Natalia Jakubowska2, Paweł Dobrowolski3, Piotr Białecki ,
Leszek Krupi ´nski , Andrzej Szczap4, Robert Białecki5, Jan Gajewski5

1Warsaw University of Technology
2SWPS University
3Institute of Psychology, Polish Academy of Sciences
4Adam Mickiewicz University in Pozna´n
5Józef Piłsudski University of Physical Education in Warsaw

July 28, 2022

ABSTRACT

As a relatively new form of sport, esports offers unparalleled data availability. Despite the vast
amounts of data that are generated by game engines, it can be challenging to extract them and verify
their integrity for the purposes of practical and scientiﬁc use.
Our work aims to open esports to a broader scientiﬁc community by supplying raw and pre-processed
ﬁles from StarCraft II esports tournaments. These ﬁles can be used in statistical and machine learning
modeling tasks and related to various laboratory-based measurements (e.g., behavioral tests, brain
imaging). We have gathered publicly available game-engine generated "replays" of tournament
matches and performed data extraction and cleanup using a low-level application programming
interface (API) parser library.
Additionally, we open-sourced and published all the custom tools that were developed in the process
of creating our dataset. These tools include PyTorch and PyTorch Lightning API abstractions to load
and model the data.
Our dataset contains replays from major and premiere StarCraft II tournaments since 2016. To prepare
the dataset, we processed 55 tournament "replaypacks" that contained 17930 ﬁles with game-state
information. Based on initial investigation of available StarCraft II datasets, we observed that our
dataset is the largest publicly available source of StarCraft II esports data upon its publication.
Analysis of the extracted data holds promise for further Artiﬁcial Intelligence (AI), Machine Learning
(ML), psychological, Human-Computer Interaction (HCI), and sports-related studies in a variety of
supervised and self-supervised tasks.

Keywords esport · dataset · StarCraft II · machine learning

1

Introduction

Electronic sports (esports) are a relatively new and exciting multidisciplinary ﬁeld of study [1, 2]. There are multiple
groups of stakeholders involved in the business of esports [3]. The application of analytics to sports aims to optimize
training and competition performance. New training methods are derived from an ever increasing pool of data and

Dataset API Homepage: https://github.com/Kaszanas/SC2_Datasets
* Corresponding author: andrzej.bialecki94@gmail.com
* Institutional contact: andrzej.bialecki.dokt@pw.edu.pl

 
 
 
 
 
 
SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

research aimed at generating actionable insights [4–9]. Rule changes in sports come at varying time intervals and
frequently with unpredictable effects on their dynamics. It is especially relevant to share esports data to assess changes
in game design and their impact on professional players, as such changes can occur more rapidly due to the (yet)
relatively unstrctured nature of esports competition [10, 11].

Advancements in Artiﬁcial Intelligence (AI) and Machine Learning (ML) have shown that Reinforcement Learning (RL)
agents are capable of outmatching human players in many different types of games [12–15]. Psychological research on
neuroplasticity has also shown the great potential of video games to induce structural brain adaptation as a result of
experience [16]. Further, previous studies have shown that playing video games can enhance cognitive functioining in a
wide range of domains, including perceptual, attentional and spatial ability [17, 18]. Data obtained from esports titles –
including those gathered from high-level tournament performance – may provide a path to improving the quality and
reproducibility of research in this ﬁeld, especially in contrast to the more variable data that is collected in laboratories
and in less competitive settings. A lower technical overhead and more data available for modeling could assist further
research in these areas [19–21].

The sparsity and methodological diversity of research on this topic remain as roadblocks in the study of how video
games can affect mental functioning. Some scholars recommended further research on esports as a potential path
forward [1]. Despite the digital nature of esports – which are their greatest asset with respect to data gathering – there
seems to be a lack of high-quality pre-processed data published for scientiﬁc and practical use. The goal of our work is
to mitigate this issue by publishing datasets containing StarCraft II replays and pre-processed data from esports events,
classiﬁed as "Premiere" and "Major" by Liquipedia in the timeframe from 2016 until 2022 [22].

A brief summary of the contributions stemming from this work is as follows: (1) The development of a set of four
tools to work with StarCraft II data; (2) The collected esports data from various public sources; (3) The publication
of a collection of raw replays after brief pre-processing [23]; (4) The processing of raw data with our toolset and
publication as a dataset [24]; (5) and the preparation of an ofﬁcial API to interact with our data using PyTorch and
PyTorch Lightning for ease of experimentation in further research [25].

2 Related Work

While reviewing StarCraft II related sources, we were able to ﬁnd some publicly available datasets made in 2013
“SkillCraft1” [26] and 2017 “MSC” [27]. These datasets are related to video games and in that regard could be classiﬁed
as “gaming” datasets. However, it is not clear what percentage of games included within these datasets contain actively
competing esports players and at what levels of skill. Using the SkillCraft1 dataset, the authors distinguished the level
of players based on the data. They proposed a new feature in the form of the Perception-Action Cycle (PAC), which was
calculated from the game data. This research can be viewed as the ﬁrst step toward developing new training methods
and analytical depth in electronic sports. It provided vital information describing different levels of gameplay and
optimization in competitive settings [28]. In Table 1 we present a comparison of these two StarCraft II datasets to our
own.

There are existing datasets in other games. Due to the major differences in game implementations, these could not be
directly compared to our work. Despite that, such publications build upon a similar idea of sharing gaming or esports
data for wider scientiﬁc audience and should be mentioned. Out of all related work, STARDATA dataset is notable in
that it comes from prior generation of StarCraft game. This dataset seems to be the largest StarCraft: Brood War dataset
available [29]. Moreover, in League of Legends, a multimodal dataset including physiological data is available [30].

Table 1: StarCraft II dataset comparison

Dataset
SC2EGSet
SkillCraft1 [26]
MSC [27]

esports
(cid:33)
(cid:37)
(cid:37)

public
(cid:33)
(cid:33)
(cid:33)

replays available
(cid:33)
(cid:37)
(cid:33)*

pre-processed API available

(cid:33)
(cid:33)
(cid:33)

(cid:33)
(cid:37)
(cid:33)

replays
17895
3395
36619

timespan
2016-2022
ND+
ND+

* provided by the game publisher
+ ND - not disclosed

Related publications focused on in-game player performance analyses and psychological, technical, mechanical or
physiological indices. These studies were conducted with use of various video games such as: Overwatch [31, 32],
League of Legends [33–37], Dota 2 [38–42], StarCraft [43–45], StarCraft II [46–50], Heroes of the Storm [38], Rocket

2

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

League [51], and Counter-Strike: Global Offensive [52–56], among others [57]. In some cases a comparison between
professional and recreational players was conducted.

Most studies did not provide data as a part of their publication. In other publications, the authors used replays that were
provided by the game publishers or were publicly available online, which are unsuitable for immediate data modeling
tasks without prior pre-processing. The researchers used raw ﬁles in MPQ (SC2Replay) format with their custom code
when dealing with StarCraft II [58, 59]. Other studies solved technical problems that are apparent when working with
esports data and different sensing technologies, including visualization, but with no publication of data [60–64]. Some
researchers have attempted to measure tiredness in an undisclosed game via electroencephalography (EEG) [65], and
player burnout using a multimodal dataset that consisted of EEG, Electromyography (EMG), galvanic skin response
(GSR), heart rate (HR), eyetracking, and other physiological measures in esports [66].

2.1 Game Description

Many of the related works introduce and communicate the properties of the games that they analyze. In case of StarCraft
II, we recommend the following description: “StarCraft II: Legacy of The Void (SC2) contains various game modes:
1v1, 2v2, 3v3, 4v4, Archon, and Arcade. The most competitive and esports related mode (1v1) can be classiﬁed as a
two-person combat, real-time strategy (RTS) game. The goal of the game for each of the competitors is either to destroy
all of the structures, or to make the opponent resign.” Moreover, StarCraft II contains multiple matchmaking options:
“Ranked game - Players use a built-in system that selects their opponent based on Matchmaking Rating (MMR) points.
Unranked game - Players use a built-in system that selects their opponent based on a hidden MMR - such games do not
affect the position in the ofﬁcial ranking. Custom game - Players join the lobby (game room), where all game settings
are set and the readiness to play is veriﬁed by both players - this mode is used in tournament games. Immediately after
the start of the game, players have access to one main structure, which allows for further development and production
of units.” [67].

3 Material and Methods

3.1 Dataset Sources and Properties

The ﬁles used in the presented information extraction process were publicly available due to a StarCraft II community
effort. Tournament organizers for events classiﬁed as "Premiere" and "Major" made the replays available immediately
after the tournament to share the information with the broader StarCraft II community for research, manual analysis,
and in-game improvement. Sources include Liquipedia, Spawning Tool, Reddit, Twitter, and tournament organizer
websites. All replay packs required to construct the dataset were searched and downloaded manually from the public
domain. The critical properties of the presented dataset are as follows:

• To secure the availability of the raw replays for further research and extraction, the SC2ReSet: StarCraft II

Esport Replaypack Set was created [23].

• The replays were processed under the licenses provided by the game publisher: End User License Agreement
(EULA), and "Blizzard StarCraft II AI and Machine Learning License" which is available in subsection A.1 of
the supplementary material.

• Our dataset was created by using open-source tools that were published with separate digital object identiﬁers

(doi) minted for each of the repositories. These tools are indexed on Zenodo [68–70].

• We have made available a PyTorch [71] and PyTorch Lightning [72] API for accessing our dataset and
performing various analyses. Our API is accessible in the form of a GitHub repository, which is available on
Zenodo with a separate doi. All of the instructions for accessing the data and speciﬁc ﬁeld documentation are
published there [25].

• The presented dataset is currently the largest that is publicly available, and contains information from

prestigeous StarCraft II tournaments.

• The dataset can be processed under CC BY NC 4.0 to comply with Blizzard EULA and the aforementioned

Blizzard StarCraft II AI and Machine Learning License.

3.2 Dataset Pre-Processing

Dataset pre-processing required the use of a custom toolset. Initially, the Python programming language was used to
process the directory structure which held additional tournament stage information. We include this information in

3

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

the dataset in a separate ﬁle for each tournament, effectively mapping the initial directory structure onto the resulting
unique hashed ﬁlenames. Moreover, a custom tool for downloading the maps was used; only the maps that were
used within the replays were downloaded [68]. Finally, to ensure proper translation to English map names in the ﬁnal
data structures, a custom C++ tool implementation was used. Information extraction was performed on map ﬁles that
contained all necessary localization data [69]. The entirety of our processing pipeline is visualized in Figure 1, and
additional visualizations are available in the Appendix, subsection A.3.

Figure 1: Pre-processing and processing steps of our pipeline that result in SC2ReSet [23] and SC2EGSetDataset [24].
We used a custom data processing toolset including the SC2DatasetPreparator [68], SC2MapLocaleExtractor [69], and
SC2InfoExtractorGo [70].

3.3 Data Processing

Custom software was implemented in the Go programming language (Golang) and built upon authorized and public
repositories endorsed by the game publisher [73]. The tool was used to perform information extraction from ﬁles in
MPQ format with the SC2Replay extension. Information extraction was performed for each pre-processed directory
that corresponded to a single tournament. Depending on the use case, different processing approaches are possible by
providing command line arguments [70].

3.4 Data Parsing and Integrity

The parsing capabilities of the tooling were deﬁned with a Golang high-level parser API available on GitHub [73].
After initial data-structures were obtained, the next step checked the integrity of the data. This was accomplished by
comparing information available across different duplicate data structures that corresponded to: the number of players,
map name, length of the player list, game version, and Blizzard map boolean (signifying whether a map was published
by Blizzard). If a replay parser or custom integrity check failed, the replay was omitted.

3.5 Data Filtering and Restructuring

Filtering for different game modes was omitted as collected replay ﬁles were a part of esports tournament matches.
Most often, StarCraft II tournament matches are played in the form of one versus one player combat. Therefore, it was
assumed that ﬁltering for the number of players was not required at this step. Custom data structures were created
and populated at this stage. This allowed for more control over the processing, summary generation, and ﬁnal output.
Merging data structures containing duplicate information was performed where applicable.

3.6 Summarization and JSON Output to zip archive

Replay summarization was required in order to provide information that can be accessed without unpacking the dataset.
Finally, the data was converted from Golang data structures into JavaScript Object Notation (JSON) format, and
compressed into a zip archive.

3.7 Dataset Loading

Interacting with the dataset is possible via PyTorch [71] and PyTorch Lightning [72] abstractions. Our implementations
exposes a few key features: (1) Automatic dataset downloading and extraction from Zenodo archive; (2) Custom

4

ReplaypacksSC2DatasetPreparatorSC2InfoExtractorGoMapsSC2MapLocaleExtractorSC2DatasetPreparatorSC2ReSetSC2EGSetDatasetFull dataset generation pipelineSC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

validators that ﬁlter or verify the integrity of the dataset; (3) The ability of our abstractions to load and use any other
dataset that was pre-processed using our toolset. The required disk space to succesfully download and extract our
dataset is approximately 170 gigabytes. We showcase the example use of our API in Listing 1. Please note that the API
is subject to change and any users should refer to the ofﬁcial documentation for the latest release features and usage
information. Additional listing showcasing the use of SC2EGSetDataset is available in the Appendix, subsection A.4.
Additionally, we include human readable examples of JSON data structures in the Appendix, subsection A.5.

from sc2_datasets . torch . sc2_egset_dataset import SC2EGSetDataset
from sc2_datasets . a v ai lab le_rep laypac ks import (

E X A M P L E _ S Y N T H E T I C _ R E P L A Y P A C K S

)

if __name__ = = " __main__ " :

# Initialize the dataset :
sc2_e gset_dat aset = SC2EGSetDataset (

unpack_dir = " ./ unpack_dir_path " ,
download_dir = " ./ d ownload_ dir_path " ,
download = True ,
names_urls = EXAMPLE_SYNTHETIC_REPLAYPACKS ,

)

# Iterate over instances :
for i in range ( len ( sc2_egset_dataset ) ) :

sc2_replay_data = sc2_egs et_datase t [ i ]

Listing 1: Example use of the SC2EGSetDataset with PyTorch with a synthetic replaypack prepared for testing.

4 Dataset Description

The collected dataset consisted of 55 tournaments. Within the available tournaments, 18309 matches were processed.
The ﬁnal processing yielded 17895 ﬁles. While inspecting the processed data, we observed three major game versions.
Each tournament in the dataset was saved with an accompanying JSON ﬁle that contains descriptive statistics such as:
(1) Game version histogram, (2) Dates at which the observed matches were played, (3) Server information, (4) Picked
race information, (5) Match length, (6) Detected spawned units, (7) Race picked versus game time histogram. Figure 2
depicts the frequency with which each of the races played against the other and the distribution of races observed within
the tournaments. Figure 4 depicts the distribution of match times that were observed.

Figure 2: Distribution of player races and race matchup information.

The oldest observed tournament was IEM 10 Taipei, which was played in 2016. The most recent observed tournament
was IEM Katowice, which ﬁnished on 2022.02.27. The game contains different "races" that differ in the mechanics
required for the gameplay. Figure 3 shows visible differences in the distribution of match time for players that picked
different races.

5

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

Figure 3: Match time distribution split by races: Terran (blue), Protoss (yellow), and Zerg (purple).

The published data resulting from our work is dis-
tributed under
the Creative Commons Attribution-
NonCommercial 4.0 International (CC BY-NC 4.0) li-
cense and is available in a widely recognized scientiﬁc
repository - Zenodo.

5 Experiments and Future Research

5.1 Winner
prediction and Player Performance Evaluation

Within section 2 we have referenced multiple articles that
dealt with player performance evaluation. These works
performed data mining tasks on game engine generated
replays and other sources of player related information.

Experiments regarding winner prediction can uncover in-
teresting information about the optimal strategy of play.
Prior analyses in this task with a small sample of es-
ports players have shown the importance of some key
indicators. The proposed dataset can help with the re-
production and facilitation of various claims, some of
which are based on anecdotal evidence [67]. The sample
analysis below describes a basic attempt at predicting
match outcome using only data related to player economy
to demonstrate the potential for gleaning insights from
replay data.

Figure 4: Actions per minute (APM)
by player race.

Data Preparation Matches were initially ﬁltered to
only include those exceeding or equaling a length of 9 minutes, which is approximately the 25th percentile of match
length values. Next, a set of features was generated from the available economy-related indicators. Additional features
were generated by combining mineral and vespene indicators into summed resource indicators. Match data were then
aggregated by averaging across match time for each player, resulting in 22,230 samples of averaged match data (from
11,115 unique matches). Standard deviations were computed in addition to averaged values where applicable. Further
features were then generated by computing ratios of resources killed/resources lost for army, economy and technology
contexts, along with a ratio of food made to food used. As a ﬁnal step, prior to feature standardization, each feature was
ﬁltered for outliers (replacing with median) that exceeded an upper limit of 3 standard deviations from the feature mean.

Feature Selection The feature count was reduced by ﬁrst computing point biserial correlations between features and
match outcome, selecting for features with a statistically signiﬁcant (α = .001) coefﬁcient value exceeding that of ±

6

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

.050. Next, a matrix of correlations was computed for the remaining features and redundant features were removed.
17 features remained after this process, of which 8 were basic features (mineralsLostArmy, mineralsKilledArmy,
mineralsLostEconomy, mineralsKilledEconomy, and the SD for each).

Modelling Modelling was conducted on features (economic indicators) that represented the global average gamestate,
in which all time points were aggregated into a single state, and also as a time series in which the gamestate was
represented at a sampling rate of approx. 7 seconds. Three algorithms were chosen for comparative purposes: Logistic
Regression (sklearn.linear_model.LogisticRegression), Support Vector Machine (sklearn.svm.SVC) [74, 75], and
Extreme Gradient Boosting (xgboost.XGBClassiﬁer) [76]. Each algorithm was initiated with settings aimed at binary
classiﬁcation and with typical starting hyperparameters. A 5-fold cross validation procedure was implemented across
the models.

Two sets of models were trained for the average gamestate and one for the gamestate as a time series. In the ﬁrst
averaged set of models the input features represented the economic gamestate of a single player without reference to
their opponent, with the model output representing outcome prediction accuracy for that player - a binary classiﬁcation
problem on scalar win/loss classes. The second averaged set of models differed in that it used the averaged economic
gamestate of both players as input features, and attempted to predict the outcome of "Player 1" for each match. Finally,
the time series models consisted of a feature input vector containing the economic gamestate at 7 second intervals –
the task here was also to predict the outcome of a match based on only a single player’s economic features, as in the
single-player averaged set of models.

Label counts were equalized to the minimal label count prior to generating the data folds, resulting in 10,744 samples
of “Win” and “Loss” labels each for the single-player averaged models and the time series models. For the two-player
set of averaged models (containing the features of both players in a given match), the total number of matches used
was 10,440. Accuracy was chosen as the model performance evaluation metric in all three cases. Computation was
performed on a standard desktop-class PC without additional resources.

Results As the results indicate (see Table 2), good outcome prediction can be achieved from economic indicators
only, even without exhaustive optimization of each model’s hyperparameters. For the one-player averaged set of
models, SVM and XGBoost displayed similar performance, with the logistic classiﬁer lagging slightly behind. For
the two-player averaged set of models, all three algorithms performed essentially equally well. Feature importances
were taken from a single-player XGBoost model (with identical hyperparameters) that was applied to the entire dataset
for illustrative purposes. Figure 5 below depicts the top ﬁve features by importance. It is interesting to note that
importance was more heavily centered around mineral-related features than those tied to vespene, which is likely tied to
how mineral and vespene needs are distributed across unit/building/technology costs. Further feature investigation is
required to verify this tendency.

Table 2: Classiﬁcation models and their performance metrics for two separate win prediction models. The “One Player
Prediction” models attempt to correctly output if one of the players won or lost. The “Two Player Prediction” models
have access to the data for both of the players and attempts to output if "Player 1" won or lost.

Classiﬁer

Accuracy

SD

One Player Prediction

Hyperparameters

Support Vector Machine - RBF
XGBoost
Logistic Regression

0.8488
0.8397
0.8118

kernel=’rbf’, C=10, gamma=’auto’

0.0075
0.0064 Booster=’gbtree’, eta=0.2, max_depth=5
0.0057 C=10, penalty=’l2’

Support Vector Machine - RBF
XGBoost
Logistic Regression

0.9071
0.8924
0.8916

kernel=’rbf’, C=10, gamma=’auto’

0.0055
0.0063 Booster=’gbtree’, eta=0.2, max_depth=5
0.0063 C=10, penalty=’l2’

Two Player Prediction

7

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

Figure 5: Percentages of feature importances based on XGBoost ﬁt to all data.

Figure 6 depicts the time series application of these models as an illustration of outcome prediction accuracy over time.
It should be noted that these time series results are not based on any form of data aggregation, and as such only basic
economic features could be used for classiﬁcation (18 features in total).

Figure 6: Accuracy comparison of applied classiﬁcation models.

8

              0 D W F K  7 L P H   V H F R Q G V                                               $ F F X U D F \ 6 X S S R U W  9 H F W R U  0 D F K L Q H / R J L V W L F  5 H J U H V V L R Q ; * % R R V WSC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

Each timepoint contains the average accuracy for 5-fold cross validation, with a minimum match length of 9 minutes
and a maximum match length of approx. 15 minutes. All three algorithms provided similar performance over time,
although this may be an effect of the minimal hyperparameter optimization that was performed. Further, it is also
interesting to note and that all three algorithms meet a classiﬁcation performance asymptote at approx. the same match
time (~550 seconds), which may indicate that this is where economic indicators begin to lose their predictive power and
(presumably) other factors such as army size, composition, and their application become the primary determinants. The
code for our experiments is available at a dedicated GitHub repository [77].

5.2 Future Research

5.2.1 Game Style Analysis

Game style analysis can be treated as a task to be solved via supervised or self-supervised methods. Using algorithms
such as Uniform Manifold Approximation and Projection (UMAP) [78] or t-Distributed Stochastic Neighbor Embedding
(t-SNE) [79] for the data that we provided could uncover interesting insights depending on the direction of the analysis.
Such game style analysis could be investigated using sequence analysis methods or use per game statistics.

5.2.2 Combat Encounter Analysis

Combat analysis as a task can be researched using AI, ML, and classic algorithms in various esports [80]. There were
some related works that analyzed unit encounters in StarCraft II [47]. Although our pre-processed dataset cannot be
used to directly reproduce combat encounter analyses, we provide raw replays published as SC2ReSet [23].

6 Limitations

We acknowledge that our work is not without limitations. The design and implementation of our dataset do not consider
the ability to obtain StarCraft II data through game-engine simulation at a much higher resolution. Because of this, the
extracted dataset cannot reﬂect exact unit positioning. Replays in their original MPQ (SC2Replay) format contain all
necessary information to recreate a game using game-engine API. Therefore, we plan to continue our research and
provide more datasets that will expand the scientiﬁc possibilities within gaming and esports. Further, it should be noted
that the experiments described here are more illustrative than investigative in nature, and could be greatly expanded upon
in future work. We recommend further research to use SC2ReSet [23] to compute game-engine simulated information.
We also do not provide simulation observation data that allows more detailed spatiotemporal information to be extracted
at a higher computational cost. Moreover, it is worth noting that the dataset completeness was dependent on which
tournament organizers and tournament administrators decided to publish replay packs.

7 Discussion

Future authors may want to ﬁlter out replays that ended prematurely due to unknown reasons. Our dataset may contain
replays that are undesirable for esports research. We have decided against the deletion of replays to preserve the initial
distributions of data. Additionally, as ﬁltering was omitted (besides that performed for the purposes of the described
experiments), there is a risk that the dataset contains matches that were a part of the tournament itself but did not count
towards the tournament standings. Due to the timeframe of the tournaments and game version changes, despite our best
efforts, some information might be missing or corrupted and is subject to further processing and research.

Our dataset is the largest publicly available pre-processed esports dataset. Moreover, in preparing the data, we deﬁned
and published the software used for the data extraction process and other tasks. Future research on StarCraft II may be
built upon these tools and our dataset [68–70].

The dataset may also serve to increase knowledge regarding the in-game behavior of players, i.e. the relationship
between the variables and overall strategies used by the players at high levels of advancement. Such information can be
used in comparisons to non-gamers or intermediate players in the process of studying the relationship between game
proﬁciency, cognitive functioning, and brain structure [81].

Moreover, a report done in the area of clinical medicine highlighted the lack of compliance of many authors with their
data availability statement (DAS). It is clear that publishing the data and tools required for modeling is a key component
of ensuring reproducible scientiﬁc work [82].

9

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

Other noteworthy applications of the dataset include comparing gameplay styles, action sequence classiﬁcation, and
their relation to victory. To that end, we encourage using different statistical methods and Machine Learning (ML)
algorithms, including supervised and self-supervised approaches.

Acknowledgements

We would like to acknowledge various contributions by the members of the technical and research community, with
special thanks to: Timo Ewalds (DeepMind, Google), Anthony Martin (Sc2ReplayStats), and András Belicza for
assisting with our technical questions. Moreover, we extend our thanks to the StarCraft II esports community for sharing
their experiences, playing together, and discussing key aspects of the gameplay in various esports. We extend our
thanks especially to: Mikołaj “Elazer” Ogonowski, Konrad “Angry” Pieszak, Mateusz “Gerald” Budziak, Igor “Indy”
Kaczmarek, Adam “Ziomek” Skorynko, Jakub “Trifax” Kosior, Michał “PAPI” Królikowski, and Damian “Damrud”
Rudnicki.

Declarations

Authors’ contributions

• Conceptualization: Andrzej Białecki;

• Supervision: Andrzej Białecki, Jan Gajewski;

• Methodology: Andrzej Białecki, Natalia Jakubowska, Paweł Dobrowolski, Piotr Białecki, Leszek Krupi´nski;

• Formal Analysis: Andrzej Białecki, Natalia Jakubowska, Paweł Dobrowolski;

• Investigation: Andrzej Białecki, Natalia Jakubowska, Paweł Dobrowolski, Piotr Białecki, Robert Białecki;

• Writing - original draft: Andrzej Białecki;

• Writing - review and editing: Andrzej Białecki, Paweł Dobrowolski, Andrzej Szczap, Robert Białecki,

Jan Gajewski;

• Data curation: Andrzej Białecki, Andrzej Szczap;

• Technical Oversight: Piotr Białecki;

• Software: Andrzej Białecki, Leszek Krupi´nski;

• Technical Documentation: Andrzej Szczap

Author statement

We acknowledge that we as authors bear all responsibility in case of violation of rights.

Funding

This publication was self-funded.

Conﬂicts of interest/Competing interests

Authors declare no conﬂict of interest.

Availability of data and material

Extracted data is published as a dataset in a scientiﬁc repository [23, 24].

Code Availability

The code used for data extraction is available as open source implementations published by the authors [68–70]. The
code used for experiments is available for preview in a GitHub repository [77].

In the process of preparing this article, PyTorch Lightning has changed its name into Lightning. We have decided to use
the old form of the name, following the citation template provided by the Lightning project on GitHub [72].

10

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

References

[1] J. G. Reitman, M. J. Anderson-Coto, M. Wu, J. S. Lee, and C. Steinkuehler, “Esports Research:
A Literature Review,” Games and Culture, vol. 15, no. 1, pp. 32–50, 2020. [Online]. Available:
https://doi.org/10.1177/1555412019840892 (Cited on pages: 1, 2).

[2] W. Chiu, T. C. M. Fan, S.-B. Nam, and P.-H. Sun, “Knowledge Mapping and Sustainable Development of eSports
Research: A Bibliometric and Visualized Analysis,” Sustainability, vol. 13, no. 18, 2021. [Online]. Available:
https://doi.org/10.3390/su131810354 (Cited on page: 1).

[3] T. M. Scholz, A Short History of eSports and Management. Cham: Springer International Publishing, 2019, pp.

17–41. [Online]. Available: https://doi.org/10.1007/978-3-030-11199-1_2 (Cited on page: 1).

[4] M. Pustišek, Y. Wei, Y. Sun, A. Umek, and A. Kos, “The role of technology for accelerated motor learning in sport,”
Personal and Ubiquitous Computing, 08 2019. [Online]. Available: https://doi.org/10.1007/s00779-019-01274-5
(Cited on page: 2).

[5] G. Giblin, E. Tor, and L. Parrington, “The impact of technology on elite sports performance,” Sensoria: A Journal

of Mind, Brain & Culture, vol. 12, 11 2016. No citations.

[6] A. Baerg, “Big Data, Sport, and the Digital Divide: Theorizing How Athletes Might Respond to Big
Data Monitoring,” Journal of Sport and Social Issues, vol. 41, no. 1, pp. 3–20, 2017. [Online]. Available:
https://doi.org/10.1177/0193723516673409 No citations.

[7] M. A. Chen, K. Spanton, P. van Schaik, I. Spears, and D. Eaves, “The Effects of Biofeedback on Performance
and Technique of the Boxing Jab,” Perceptual and Motor Skills, vol. 128, no. 4, pp. 1607–1622, 2021, pMID:
33940988. [Online]. Available: https://doi.org/10.1177/00315125211013251 No citations.

[8] A. Rajšp and I. Fister jr, “A Systematic Literature Review of Intelligent Data Analysis Methods for Smart Sport
Training,” Applied Sciences, vol. 10, 04 2020. [Online]. Available: https://doi.org/10.3390/app10093013 No
citations.

[9] A. Kos and A. Umek, “Smart sport equipment: SmartSki prototype for biofeedback applications in skiing,”
Personal and Ubiquitous Computing, vol. 22, jun 2018. [Online]. Available: https://doi.org/10.1007/s00779-018-
1146-1 (Cited on page: 2).

[10] M. Seif El-Nasr, A. Drachen, and A. Canossa, Eds., Game Analytics: Maximizing the Value of Player Data.
London: Springer London, 2013. [Online]. Available: https://doi.org/10.1007/978-1-4471-4769-5 (Cited on page:
2).

[11] Y. Su, P. Backlund, and H. Engström, “Comprehensive review and classiﬁcation of game analytics,”
Service Oriented Computing and Applications, vol. 15, no. 2, pp. 141–156, Jun 2021. [Online]. Available:
https://doi.org/10.1007/s11761-020-00303-z (Cited on page: 2).

[12] O. Vinyals, I. Babuschkin, W. M. Czarnecki, M. Mathieu, A. Dudzik, J. Chung, D. H. Choi, R. Powell,
T. Ewalds, P. Georgiev, J. Oh, D. Horgan, M. Kroiss, I. Danihelka, A. Huang, L. Sifre, T. Cai, J. P. Agapiou,
M. Jaderberg, A. S. Vezhnevets, R. Leblond, T. Pohlen, V. Dalibard, D. Budden, Y. Sulsky, J. Molloy, T. L.
Paine, C. Gulcehre, Z. Wang, T. Pfaff, Y. Wu, R. Ring, D. Yogatama, D. Wünsch, K. McKinney, O. Smith,
T. Schaul, T. Lillicrap, K. Kavukcuoglu, D. Hassabis, C. Apps, and D. Silver, “Grandmaster level in StarCraft II
using multi-agent reinforcement learning,” Nature, vol. 575, no. 7782, pp. 350–354, 2019. [Online]. Available:
https://doi.org/10.1038/s41586-019-1724-z (Cited on page: 2).

[13] M. Jaderberg, W. M. Czarnecki, I. Dunning, L. Marris, G. Lever, A. G. Castañeda, C. Beattie, N. C.
Rabinowitz, A. S. Morcos, A. Ruderman, N. Sonnerat, T. Green, L. Deason, J. Z. Leibo, D. Silver,
D. Hassabis, K. Kavukcuoglu, and T. Graepel, “Human-level performance in 3D multiplayer games with
population-based reinforcement learning,” Science, vol. 364, no. 6443, pp. 859–865, 2019. [Online]. Available:
https://doi.org/10.1126/science.aau6249 No citations.

[14] D. Silver, T. Hubert, J. Schrittwieser, I. Antonoglou, M. Lai, A. Guez, M. Lanctot, L. Sifre, D. Kumaran,
T. Graepel, T. Lillicrap, K. Simonyan, and D. Hassabis, “A general reinforcement learning algorithm that masters
chess, shogi, and Go through self-play,” Science, vol. 362, no. 6419, pp. 1140–1144, 2018. [Online]. Available:
https://doi.org/10.1126/science.aar6404 No citations.

[15] C. Berner, G. Brockman, B. Chan, V. Cheung, P. D˛ebiak, C. Dennison, D. Farhi, Q. Fischer, S. Hashme, C. Hesse
et al., “Dota 2 with large scale deep reinforcement learning,” arXiv preprint arXiv:1912.06680, 2019. (Cited on
page: 2).

[16] N. Kowalczyk-Gr˛ebska, F. Shi, M. Magnuski, M. Skorko, P. Dobrowolski, B. Kossowski, A. Marchewka,
M. Bielecki, M. Kossut, and A. Brzezicka, “Real-time strategy video game experience and structural

11

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

connectivity - A diffusion tensor imaging study,” Human Brain Mapping, vol. 39, 06 2018. [Online]. Available:
https://doi.org/10.1002/hbm.24208 (Cited on page: 2).

[17] C. S. Green and D. Bavelier, “Action video game modiﬁes visual selective attention,” Nature, vol. 423, no. 6939,

pp. 534–537, may 2003. [Online]. Available: https://doi.org/10.1038/nature01647 (Cited on page: 2).

[18] ——, “Learning, attentional control, and action video games,” Current biology : CB, vol. 22, no. 6, pp.
R197–R206, mar 2012. [Online]. Available: https://doi.org/10.1016/j.cub.2012.02.012 (Cited on page: 2).

[19] F. Alfonso, K. Adamyan, J.-Y. Artigou, M. Aschermann, M. Boehm, A. Buendia, P.-H. Chu, A. Cohen, L. Dei
Cas, M. Dilic, A. Doubell, D. Echeverri, N. Enç, I. Ferreira-González, K. J. Filipiak, A. Flammer, E. Fleck,
P. Gatzov, C. Ginghina, L. Goncalves, H. Haouala, M. Hassanein, G. Heusch, K. Huber, I. Hulín, M. Ivanusa,
R. Krittayaphong, C.-P. Lau, G. Marinskis, F. Mach, L. F. Moreira, T. Nieminen, L. Oukerraj, S. Perings,
L. Pierard, T. Potpara, W. Reyes-Caorsi, S.-J. Rim, O. Rødevand, G. Saade, M. Sander, E. Shlyakhto, B. Timuralp,
D. Tousoulis, D. Ural, J. Piek, A. Varga, and T. F. Lüscher, “Data Sharing: A New Editorial Initiative of the
International Committee of Medical Journal Editors. Implications for the Editors’ Network,” Revista Portuguesa
de Cardiologia, vol. 36, no. 5, pp. 397–403, 2017. [Online]. Available: https://doi.org/10.1016/j.repc.2017.02.001
(Cited on page: 2).

[20] M. Ghasemaghaei, “Does data analytics use improve ﬁrm decision making quality? The role of knowledge
sharing and data analytics competency,” Decision Support Systems, vol. 120, pp. 14–24, 2019. [Online]. Available:
https://doi.org/10.1016/j.dss.2019.03.004 No citations.

[21] A. Zuiderwijk and H. Spiers, “Sharing and re-using open data: A case study of motivations in astrophysics,”
International Journal of Information Management, vol. 49, pp. 228–241, 2019. [Online]. Available:
https://doi.org/10.1016/j.ijinfomgt.2019.05.024 (Cited on page: 2).

[22] Liquipedia, “Portal:Leagues,” https://liquipedia.net/starcraft2/Portal:Leagues, 2010, acessed: 2021-08-26. (Cited

on page: 2).

[23] A. Białecki,

“SC2ReSet:

StarCraft

II Esport Replaypack Set,”

jun 2022.

[Online]. Available:

https://doi.org/10.5281/zenodo.5575796 (Cited on pages: 2, 3, 4, 9, 9, 10, 17).

[24] A. Białecki, N. Jakubowska, P. Dobrowolski, P. Białecki, L. Krupi´nski, A. Szczap, R. Białecki, and
J. Gajewski, “SC2EGSet: StarCraft II Esport Game State Dataset,” jun 2022. [Online]. Available:
https://doi.org/10.5281/zenodo.5503997 (Cited on pages: 2, 4, 10, 16, 18, 19).

[25] A. Białecki, P. Białecki, A. Szczap, and L. Krupi´nski, “Kaszanas/SC2_Datasets: 1.0.0 SC2_Datasets Release,” jul

2022. [Online]. Available: https://doi.org/10.5281/zenodo.6629005 (Cited on pages: 2, 3, 19).

[26] M. Blair,

J. Thompson, A. Henrey,
Machine Learning Repository, 2013,
beta.ics.uci.edu/ml/datasets/skillcraft1+master+table+dataset (Cited on page: 2, 2).

and B. Chen,
acessed:

2022-06-03.

“SkillCraft1 Master Table Dataset,” UCI
https://archive-

[Online]. Available:

[27] H. Wu, J. Zhang, and K. Huang, “MSC: A Dataset for Macro-Management in StarCraft II,” 2017. [Online].

Available: https://arxiv.org/abs/1710.03131 (Cited on page: 2, 2).

[28] J. J. Thompson, M. Blair, L. Chen, and A. J. Henrey, “Video Game Telemetry as a Critical
[Online]. Available:

in the Study of Complex Skill Learning,” PLoS ONE, vol. 8, 2013.

Tool
https://doi.org/10.1371/journal.pone.0075129 (Cited on page: 2).

[29] Z. Lin, J. Gehring, V. Khalidov, and G. Synnaeve, “STARDATA: A StarCraft AI Research Dataset,” Proceedings
of the AAAI Conference on Artiﬁcial Intelligence and Interactive Digital Entertainment, vol. 13, no. 1, pp. 50–56,
jun 2021. [Online]. Available: https://ojs.aaai.org/index.php/AIIDE/article/view/12929 (Cited on page: 2).

[30] A. Smerdov, B. Zhou, P. Lukowicz, and A. Somov, “Collection and Validation of Psychophysiological
Data from Professional and Amateur Players: a Multimodal eSports Dataset,” 2020. [Online]. Available:
https://arxiv.org/abs/2011.00958 (Cited on page: 2).

[31] P. Braun, A. Cuzzocrea, T. D. Keding, C. K. Leung, A. G. Padzor, and D. Sayson, “Game Data Mining: Clustering
and Visualization of Online Game Data in Cyber-Physical Worlds,” Procedia Computer Science, vol. 112, pp.
2259–2268, 2017. [Online]. Available: http://dx.doi.org/10.1016/j.procs.2017.08.141 (Cited on page: 2).
[32] J. Glass and C. McGregor, “Towards Player Health Analytics in Overwatch,” in 2020 IEEE 8th International
Conference on Serious Games and Applications for Health (SeGAH), 2020, pp. 1–5. [Online]. Available:
https://doi.org/10.1109/SeGAH49190.2020.9201733 (Cited on page: 2).

[33] P. M. Blom, S. Bakkes, and P. Spronck, “Towards Multi-modal Stress Response Modelling in Competitive
League of Legends,” in 2019 IEEE Conference on Games (CoG), 2019, pp. 1–4. [Online]. Available:
https://doi.org/10.1109/CIG.2019.8848004 (Cited on page: 2).

12

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

[34] R. Ani, V. Harikumar, A. K. Devan, and O. Deepa, “Victory prediction in League of Legends using Feature
Selection and Ensemble methods,” in 2019 International Conference on Intelligent Computing and Control
Systems (ICCS), 2019, pp. 74–77. [Online]. Available: https://doi.org/10.1109/ICCS45141.2019.9065758 No
citations.

[35] M. Aung, V. Bonometti, A. Drachen, P. Cowling, A. Kokkinakis, C. Yoder, and A. Wade, “Predicting skill learning
outcomes in a large, longitudinal MOBA dataset,” in Proceedings of the IEEE Computational Intelligence in
Games.

IEEE, 2018. No citations.

[36] P. Z. Maymin, “Smart kills and worthless deaths: eSports analytics for League of Legends,” Journal of Quantitative
Analysis in Sports, vol. 17, no. 1, pp. 11–27, 2021. [Online]. Available: https://doi.org/10.1515/jqas-2019-0096
No citations.

[37] H. Lee, D. Hwang, H. Kim, B. Lee, and J. Choo, “DraftRec: Personalized Draft Recommendation for Winning
in Multi-Player Online Battle Arena Games,” in Proceedings of the ACM Web Conference 2022, ser. WWW
’22. New York, NY, USA: Association for Computing Machinery, 2022, pp. 3428–3439. [Online]. Available:
https://doi.org/10.1145/3485447.3512278 (Cited on page: 2).

[38] D. Gourdeau and L. Archambault, “Discriminative neural network for hero selection in professional
Heroes of the Storm and DOTA 2,” IEEE Transactions on Games, pp. 1–1, 2020. [Online]. Available:
https://doi.org/10.1109/TG.2020.2972463 (Cited on page: 2, 2).

[39] V. Hodge, S. Devlin, N. Sephton, F. Block, A. Drachen, and P. Cowling, “Win Prediction in Esports:
Mixed-Rank Match Prediction in Multi-player Online Battle Arena Games,” 2017. [Online]. Available:
https://arxiv.org/abs/1711.06498 No citations.

[40] V. Hodge, S. Devlin, N. Sephton, F. Block, P. Cowling, and A. Drachen, “Win Prediction in Multi-Player
Esports: Live Professional Match Prediction,” IEEE Transactions on Games, pp. 1–1, 2019. [Online]. Available:
https://doi.org/10.1109/TG.2019.2948469 No citations.

[41] O. Cavadenti, V. Codocedo, J.-F. Boulicaut, and M. Kaytoue, “What Did I Do Wrong in My MOBA Game?
Mining Patterns Discriminating Deviant Behaviours,” in 2016 IEEE International Conference on Data Science
and Advanced Analytics (DSAA), 2016, pp. 662–671. [Online]. Available: https://doi.org/10.1109/DSAA.2016.75
No citations.

[42] A. Pedrassoli Chitayat, A. Kokkinakis, S. Patra, S. Demediuk, J. Robertson, O. Olarewaju, M. Ursu, B. Kirmann,
J. Hook, F. Block, and A. Drachen, “WARDS: Modelling the Worth of Vision in MOBA’s,” in Intelligent
Computing, K. Arai, S. Kapoor, and R. Bhatia, Eds. Cham: Springer International Publishing, 2020, pp. 63–81.
[Online]. Available: https://doi.org/10.1007/978-3-030-52246-9_5 (Cited on page: 2).

[43] A. A. Sánchez-Ruiz and M. Miranda, “A machine learning approach to predict the winner in StarCraft
based on inﬂuence maps,” Entertainment Computing, vol. 19, pp. 29–41, 2017. [Online]. Available:
https://doi.org/10.1016/j.entcom.2016.11.005 (Cited on page: 2).

[44] M. Stanescu, N. Barriga, and M. Buro, “Using Lanchester Attrition Laws for Combat Prediction in StarCraft,”
Proceedings of the AAAI Conference on Artiﬁcial Intelligence and Interactive Digital Entertainment, vol. 11, no. 1,
pp. 86–92, Jun. 2021. [Online]. Available: https://ojs.aaai.org/index.php/AIIDE/article/view/12780 No citations.
[45] Y. Norouzzadeh Ravari, S. Bakkes, and P. Spronck, “StarCraft Winner Prediction,” Proceedings of the AAAI
Conference on Artiﬁcial Intelligence and Interactive Digital Entertainment, vol. 12, no. 2, pp. 2–8, jun 2021.
[Online]. Available: https://ojs.aaai.org/index.php/AIIDE/article/view/12887 (Cited on page: 2).

[46] I. Helmke, D. Kreymer, and K. Wiegand, “Approximation Models of Combat in StarCraft 2,” 2014. [Online].

Available: https://arxiv.org/abs/1403.1521 (Cited on page: 2).

[47] D. Lee, M.-J. Kim, and C. W. Ahn, “Predicting combat outcomes and optimizing armies in StarCraft
II by deep learning,” Expert Systems with Applications, vol. 185, p. 115592, 2021. [Online]. Available:
https://doi.org/10.1016/j.eswa.2021.115592 (Cited on page: 9).

[48] C. M. Lee and C. W. Ahn, “Feature Extraction for StarCraft II League Prediction,” Electronics, vol. 10, no. 8,

2021. [Online]. Available: https://doi.org/10.3390/electronics10080909 No citations.

[49] O. Cavadenti, V. Codocedo, J.-F. Boulicaut, and M. Kaytoue, “When cyberathletes conceal their game: Clustering
confusion matrices to identify avatar aliases,” in 2015 IEEE International Conference on Data Science and
Advanced Analytics (DSAA), 2015, pp. 1–10. [Online]. Available: https://doi.org/10.1109/DSAA.2015.7344824
No citations.

[50] V. Volz, M. Preuss, and M. K. Bonde, “Towards Embodied StarCraft II Winner Prediction,” in Computer Games,
T. Cazenave, A. Safﬁdine, and N. Sturtevant, Eds. Cham: Springer International Publishing, 2019, pp. 3–22.
(Cited on page: 2).

13

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

[51] R. Mathonat, J.-F. Boulicaut, and M. Kaytoue, “A Behavioral Pattern Mining Approach to Model Player Skills
in Rocket League,” in 2020 IEEE Conference on Games (CoG), 2020, pp. 267–274. [Online]. Available:
https://doi.org/10.1109/CoG47356.2020.9231739 (Cited on page: 3).

[52] N. Khromov, A. Korotin, A. Lange, A. Stepanov, E. Burnaev, and A. Somov, “Esports Athletes and Players:
A Comparative Study,” IEEE Pervasive Computing, vol. 18, no. 3, pp. 31–39, 2019. [Online]. Available:
https://doi.org/10.1109/MPRV.2019.2926247 (Cited on page: 3).

[53] D. Koposov, M. Semenova, A. Somov, A. Lange, A. Stepanov, and E. Burnaev, “Analysis of the
Reaction Time of eSports Players through the Gaze Tracking and Personality Trait,” in 2020 IEEE
29th International Symposium on Industrial Electronics (ISIE), 2020, pp. 1560–1565. [Online]. Available:
https://doi.org/10.1109/ISIE45063.2020.9152422 No citations.

[54] A. Smerdov, E. Burnaev, and A. Somov, “eSports Pro-Players Behavior During the Game Events: Statistical
Analysis of Data Obtained Using the Smart Chair,” in 2019 IEEE SmartWorld, Ubiquitous Intelligence Computing,
Advanced Trusted Computing, Scalable Computing Communications, Cloud Big Data Computing, Internet of
People and Smart City Innovation (SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI), 2019, pp. 1768–1775.
[Online]. Available: https://doi.org/10.1109/SmartWorld-UIC-ATC-SCALCOM-IOP-SCI.2019.00314 No
citations.

[55] P. Xenopoulos, W. R. Freeman, and C. Silva, “Analyzing the Differences between Professional and Amateur
Esports through Win Probability,” in Proceedings of the ACM Web Conference 2022, ser. WWW ’22.
New York, NY, USA: Association for Computing Machinery, 2022, pp. 3418–3427. [Online]. Available:
https://doi.org/10.1145/3485447.3512277 No citations.

[56] A. Jonnalagadda, I. Frosio, S. Schneider, M. McGuire, and J. Kim, “Robust Vision-Based Cheat Detection in
Competitive Gaming,” The Proceedings of the ACM in Computer Graphics and Interactive Techniques, vol. 4,
no. 1, apr 2021. [Online]. Available: https://doi.org/10.1145/3451259 (Cited on page: 3).

[57] L. Galli, D. Loiacono, L. Cardamone, and P. L. Lanzi, “A cheating detection framework for Unreal Tournament
III: A machine learning approach,” in 2011 IEEE Conference on Computational Intelligence and Games (CIG’11),
2011, pp. 266–272. (Cited on page: 3).

[58] Blizzard, “s2client-proto,” 2017, acessed: 2021-08-26. [Online]. Available: https://github.com/Blizzard/s2client-

proto (Cited on page: 3).

[59] X. Wang, J. Song, P. Qi, P. Peng, Z. Tang, W. Zhang, W. Li, X. Pi, J. He, C. Gao, H. Long, and Q. Yuan, “SCC: an
efﬁcient deep reinforcement learning agent mastering the game of StarCraft II,” CoRR, vol. abs/2012.13169, 2020.
[Online]. Available: https://arxiv.org/abs/2012.13169 (Cited on page: 3).

[60] D. Bednárek, M. Krulis, J. Yaghob, and F. Zavoral, “Data Preprocessing of eSport Game Records - Counter-Strike:
Global Offensive,” 01 2017, pp. 269–276. [Online]. Available: https://doi.org/10.5220/0006475002690276 (Cited
on page: 3).

[61] V. R. M. Feitosa, J. G. R. Maia, L. O. Moreira, and G. A. M. Gomes, “GameVis: Game Data Visualization for the
Web,” in 2015 14th Brazilian Symposium on Computer Games and Digital Entertainment (SBGames), 2015, pp.
70–79. [Online]. Available: https://doi.org/10.1109/SBGames.2015.21 No citations.

[62] A. P. Afonso, M. B. Carmo, and T. Moucho, “Comparison of Visualization Tools for Matches Analysis of a
MOBA Game,” in 2019 23rd International Conference Information Visualisation (IV), 2019, pp. 118–126.
[Online]. Available: https://doi.org/10.1109/IV.2019.00029 No citations.

[63] A. Stepanov, A. Lange, N. Khromov, A. Korotin, E. Burnaev, and A. Somov, “Sensors and Game Synchronization
for Data Analysis in eSports,” in 2019 IEEE 17th International Conference on Industrial Informatics (INDIN),
vol. 1, 2019, pp. 933–938. [Online]. Available: https://doi.org/10.1109/INDIN41052.2019.8972249 No citations.
[64] A. Korotin, N. Khromov, A. Stepanov, A. Lange, E. Burnaev, and A. Somov, “Towards Understanding
of eSports Athletes’ Potentialities:
The Sensing System for Data Collection and Analysis,” in
2019 IEEE SmartWorld, Ubiquitous Intelligence Computing, Advanced Trusted Computing, Scalable
Computing Communications, Cloud Big Data Computing, Internet of People and Smart City Innovation
(SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI), 2019, pp. 1804–1810. [Online]. Available: https:
//doi.org/10.1109/SmartWorld-UIC-ATC-SCALCOM-IOP-SCI.2019.00319 (Cited on page: 3).

[65] N. Melentev, A. Somov, E. Burnaev, I. Strelnikova, G. Strelnikova, E. Melenteva, and A. Menshchikov, “eSports
Players Professional Level and Tiredness Prediction using EEG and Machine Learning,” in 2020 IEEE SENSORS,
2020, pp. 1–4. [Online]. Available: https://doi.org/10.1109/SENSORS47125.2020.9278704 (Cited on page: 3).
[66] A. Smerdov, A. Somov, E. Burnaev, B. Zhou, and P. Lukowicz, “Detecting Video Game Player Burnout With the
Use of Sensor Data and Machine Learning,” IEEE Internet of Things Journal, vol. 8, no. 22, pp. 16 680–16 691,
2021. [Online]. Available: https://doi.org/10.1109/JIOT.2021.3074740 (Cited on page: 3).

14

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

[67] A. Białecki, J. Gajewski, P. Białecki, A. Phatak, and D. Memmert, “Determinants of Victory in Esports - StarCraft

II,” oct 2021. [Online]. Available: https://doi.org/10.5281/zenodo.6350324 (Cited on pages: 3, 6).

[68] A. Białecki, P. Białecki, and L. Krupi´nski, “Kaszanas/SC2DatasetPreparator: 1.2.0 SC2DatasetPreparator
Release,” jun 2022. [Online]. Available: https://doi.org/10.5281/zenodo.5296664 (Cited on pages: 3, 4, 4, 9, 10,
16, 17, 17, 18).

[69] A. Białecki and P. Białecki, “Kaszanas/SC2MapLocaleExtractor: 1.1.1 SC2MapLocaleExtractor Release,” aug

2021. [Online]. Available: https://doi.org/10.5281/zenodo.4733264 (Cited on pages: 4, 4, 16, 18).

[70] A. Białecki, L. Krupi´nski, and P. Białecki, “Kaszanas/SC2InfoExtractorGo: 1.2.1 SC2InfoExtractorGo Release,”

jun 2022. [Online]. Available: https://doi.org/10.5281/zenodo.5296788 (Cited on pages: 3, 4, 4, 9, 10, 16, 18).

[71] A. Paszke, S. Gross, F. Massa, A. Lerer, J. Bradbury, G. Chanan, T. Killeen, Z. Lin, N. Gimelshein, L. Antiga,
A. Desmaison, A. Kopf, E. Yang, Z. DeVito, M. Raison, A. Tejani, S. Chilamkurthy, B. Steiner, L. Fang, J. Bai,
and S. Chintala, “PyTorch: An Imperative Style, High-Performance Deep Learning Library,” in Advances
in Neural Information Processing Systems 32, H. Wallach, H. Larochelle, A. Beygelzimer, F. d'Alché-Buc,
E. Fox, and R. Garnett, Eds. Curran Associates, Inc., 2019, pp. 8024–8035. [Online]. Available: http:
//papers.neurips.cc/paper/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.pdf (Cited
on pages: 3, 4, 17).

[72] W. Falcon and The PyTorch Lightning team, “PyTorch Lightning,” 3 2019.

[Online]. Available:

https://github.com/PyTorchLightning/pytorch-lightning (Cited on pages: 3, 4, 10, 17).

[73] A. Belicza, “s2prot,” https://github.com/icza/s2prot, 2016, acessed: 2021-10-13. (Cited on page: 4, 4).

[74] F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion, O. Grisel, M. Blondel, P. Prettenhofer, R. Weiss,
V. Dubourg, J. Vanderplas, A. Passos, D. Cournapeau, M. Brucher, M. Perrot, and E. Duchesnay, “Scikit-learn:
Machine Learning in Python,” Journal of Machine Learning Research, vol. 12, pp. 2825–2830, 2011. (Cited on
page: 7).

[75] L. Buitinck, G. Louppe, M. Blondel, F. Pedregosa, A. Mueller, O. Grisel, V. Niculae, P. Prettenhofer, A. Gramfort,
J. Grobler, R. Layton, J. VanderPlas, A. Joly, B. Holt, and G. Varoquaux, “API design for machine learning
software: experiences from the scikit-learn project,” in ECML PKDD Workshop: Languages for Data Mining and
Machine Learning, 2013, pp. 108–122. (Cited on page: 7).

[76] T. Chen and C. Guestrin, “XGBoost: A Scalable Tree Boosting System,” in Proceedings of the 22nd
ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, ser. KDD ’16.
New York, NY, USA: Association for Computing Machinery, 2016, pp. 785–794. [Online]. Available:
https://doi.org/10.1145/2939672.2939785 (Cited on page: 7).

[77] A. Białecki and P. Dobrowolski, “SC2EGSet Article Experiments,” https://github.com/Kaszanas/SC2EGSet_

article_experiments, 2022, acessed: 2022-06-09. (Cited on pages: 9, 10).

[78] L. McInnes, J. Healy, and J. Melville, “UMAP: Uniform Manifold Approximation and Projection for Dimension

Reduction,” ArXiv e-prints, feb 2018. (Cited on page: 9).

[79] L. van der Maaten and G. Hinton, “Visualizing Data using t-SNE,” Journal of Machine Learning Research, vol. 9,
no. 86, pp. 2579–2605, 2008. [Online]. Available: http://jmlr.org/papers/v9/vandermaaten08a.html (Cited on page:
9).

[80] A. Uriarte and S. Ontañón, “Combat Models for RTS Games,” IEEE Transactions on Games, vol. 10, no. 1, pp.

29–41, 2018. [Online]. Available: https://doi.org/10.1109/TCIAIG.2017.2669895 (Cited on page: 9).

[81] N. Jakubowska, P. Dobrowolski, A. A. Binkowska, I. V. Arslan, M. My´sliwiec, and A. Brzezicka,
Indicator of Working Memory Capacity Predicts Video
https:

“Psychophysiological, but Not Behavioral,
Game Proﬁciency,” Frontiers in Human Neuroscience, vol. 15, 2021.
//doi.org/10.3389/fnhum.2021.763821 (Cited on page: 9).

[Online]. Available:

[82] M. Gabelica, R. Bojˇci´c, and L. Puljak, “Many researchers were not compliant with their published data
sharing statement: mixed-methods study,” Journal of Clinical Epidemiology, May 2022. [Online]. Available:
https://www.sciencedirect.com/science/article/pii/S089543562200141X (Cited on page: 9).

[83] T. Gebru, J. Morgenstern, B. Vecchione, J. W. Vaughan, H. Wallach, H. Daumé, and K. Crawford, “Datasheets for

Datasets,” 2018. [Online]. Available: https://arxiv.org/abs/1803.09010 (Cited on page: 16).

15

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

A Appendix

A.1 Blizzard StarCraft II AI and Machine Learning License

BLIZZARD® STARCRAFT® II AI AND MACHINE LEARNING LICENSE

IMPORTANT NOTICE:

YOU SHOULD CAREFULLY READ THIS AGREEMENT (THE “AGREEMENT”) BEFORE INSTALLING OR
USING BLIZZARD’S (“BLIZZARD”) STARCRAFT II AI AND MACHINE LEARNING SOFTWARE AND
ENVIRONMENT (THE “SOFTWARE”). IF YOU DO NOT AGREE WITH ALL OF THE TERMS OF THIS
AGREEMENT, YOU MAY NOT INSTALL OR OTHERWISE ACCESS THE SOFTWARE.

Subject to the terms of this Agreement, your use of the Software is governed by Blizzard’s End User License Agreement
(“EULA”), which is incorporated by reference herein and is available for review here. (http://us.blizzard.com/en-
us/company/legal/eula.html) Please carefully review the EULA and this Agreement prior to installing or using the
Software. IF YOU DO NOT AGREE TO THE TERMS OF THE EULA AND THIS AGREEMENT, YOU ARE NOT
PERMITTED TO INSTALL, COPY, OR USE THE SOFTWARE.

1. Use Of The Software.

A. AI Testing And Machine Learning Use Only: Subject to your compliance with this Agreement, Blizzard
grants you a limited, revocable, non-sublicensable license to use the Software for purposes of AI testing,
machine learning, and related research only.

B. Blizzard Account Not Required: Notwithstanding the requirements of Section 1.A of the EULA, creation
of a Blizzard Account is not required in order to use the Software. Legal entities other than natural persons
are authorized to use the Software. However, other than as speciﬁcally excepted in this Agreement, the
remaining provisions and requirements of the EULA are controlling.

C. EULA Exceptions: The terms of Blizzard’s EULA govern your use of the Software, subject to the

following narrow exceptions:
i. Derivative Works: Section 1.C.i of the EULA shall not be read to prohibit the authorized use of the
Software or data generated or collected from such use. However, no portion of this Agreement shall
give you the right to create, distribute, or otherwise exploit unauthorized derivative works of the
Software.

ii. Automation: The provisions of Section 1.C.ii of the EULA prohibiting the use of automation processes

or software do not apply to use of the Software.

iii. Commercial Use: The provisions of Section 1.C.iii of the EULA govern your use of the Software,
except that you are authorized to use and exploit data derived from using the Software in connection
with AI and machine learning programs for personal or internal use, despite that such use of the data
may ultimately be for a commercial purpose. You may not otherwise use or exploit the Software for
any commercial purpose.

iv. Data Mining: The provisions of Section 1.C.iv of the EULA shall not prohibit the authorized use of

the Software or data generated or collected from such use.

v. Matchmaking: The provisions of Section 1.C.vi of the EULA shall not prohibit the authorized use of

the Software or data generated or collected from such use.

2. Ownership.

A. The provisions of Section 2 of the EULA apply in full force to the Software (including generated by or

collected through the authorized use of the Software.

A.2 Datasheets for datasets

Datasheets for datasets [83] are deﬁned and available as a part of the original pre-processed dataset publication. [24]

A.3 Pipeline Visualizations

Due to the relative complexity of our infrastructure, we include additional visualizations of the processing pipeline
for all potential users on Figures 7 - 9. The dataset pre-processing is shown on Figure 7, highlighting the use of a
set of tools named SC2DatasetPreparator [68]. The dataset processing is shown on Figure 8, highlighting the use of
SC2MapLocaleExtractor [69] to acquire the english map names, SC2InfoExtractorGo [70] to extract the data, and

16

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

SC2DatasetPreparator [68] to collect the ﬁnal .zip archives. The dataset post-processing and experiments are brieﬂy
visualized on Figure 9 and highlight the use of PyTorch [71], and Lightning [72].

Figure 7: Pre-processing steps of our pipeline that result in SC2ReSet [23]. We are using a custom data processing
toolset including SC2DatasetPreparator [68].

17

ReplaypacksSC2DatasetPreparatorMapsSC2ReSetDataset Pre-processingSC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

Figure 8: Processing steps of our pipeline that result in SC2EGSetDataset [24]. We are using a custom data processing
toolset including SC2DatasetPreparator [68], SC2MapLocaleExtractor [69], and SC2InfoExtractorGo [70].

18

SC2InfoExtractorGoSC2MapLocaleExtractorSC2DatasetPreparatorSC2EGSetDatasetDataset ProcessingSC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

Figure 9: Using the SC2EGSetDataset [24] with the ofﬁcially provided API [25] to conduct experiments.

A.4 Dataset Usage Examples

There are various ways to use our dataset; one way includes using the custom PyTorch dataset class which was brieﬂy
introduced in subsection 3.7, Listing 1. Due to the page limit we were unable to visualize all of the potential uses of our
infrastructure in the main text; Listing 2 showcases the most basic use of the Lightning custom DataModule class that
we implemented for our dataset. For further information please refer to the ofﬁcial documentation.

19

SC2EGSetDatasetPyTorch DatasetLightning DataModule JSON ParserJSON ParserExperiment loopExperiment loopExperiment WorkflowOfficial API SC2_Datasetsraw dataSC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

from sc2_datasets . lightning . sc2_egset_datamodule import (

SC 2E GSetDataModule

)
from sc2_datasets . a v ai lab le_rep laypac ks import (

E X A M P L E _ S Y N T H E T I C _ R E P L A Y P A C K S

)

if __name__ = = " __main__ " :

# Initialize the datamodule :
s c2 _ e gse t_d at am od ul e = SC2EGSetDataModule (

unpack_dir = " ./ unpack_dir_path " ,
download_dir = " ./ d ownload_ dir_path " ,
download = True ,
replaypacks = EXAMPLE_SYNTHETIC_REPLAYPACKS ,

)

# Initializing the PyTorch dataset within the DataModule class :
s c2 _ e gse t_d at am od ul e . prepare_data ()
# Obtaining the splits for training , testing , and validation :
s c2 _ e gse t_d at am od ul e . setup ()

Listing 2: Example use of the SC2EGSetDataModule with Lightning using a synthetic replaypack prepared for testing.

It is important to note that our classes by default return a custom SC2ReplayData class which is a serialization of the
initial pre-processed JSON ﬁles. To construct a custom tensor required for further modeling, users should use the
exposed keyword argument “transform”, which should be a function that transforms the default SC2ReplayData into
some custom tensor required for further modeling.

A.5 Dataset Structure Examples

We include human-readable examples of various ﬁelds showcase on Listings 3-24; these are a part of the SC2EGSet
dataset JSON ﬁles. Users should refer to the respective parts of the ofﬁcial documentation for more information and a
list of all of the available ﬁelds. Access to these can be used to deﬁne parsers in other programming languages.

A.5.1 Top level ﬁelds

{

}

...
" header " : {

" elapsedGameLoops " : 7 8 5 5 ,
" version " : " 3.4.0.44401 "

} ,
...

Listing 3: Example header ﬁeld containing a JSON object.

20

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

{

...
" initData " : {

" gameDescription " : {
" gameOptions " : {

" ad van ced Sha r ed Co n tr ol " : false ,
" amm " : false ,
" battleNet " : true ,
" clientDebugFlags " : 2 6 5 ,
" competitive " : false ,
" cooperative " : false ,
" fog " : 0 ,
" he roD upl ica t es Al l ow ed " : true ,
" lockTeams " : true ,
" noVictor yOrDefeat " : false ,
" observers " : 0 ,
" practice " : false ,
" randomRaces " : false ,
" teamsTogether " : false ,
" userDifficulty " : 0

} ,
" gameSpeed " : " Faster " ,
" isBlizzardMap " : true ,
" mapAuthorName " : " 5 - S2 -1 -1 " ,
" ma pFile SyncC hec ks um " : 3 6 0 4 0 0 7 3 5 ,
" mapSizeX " : 1 5 2 ,
" mapSizeY " : 1 5 2 ,
" maxPlayers " : 2

}

} ,
...

}

{

}

{

}

Listing 4: Example initData ﬁeld containing a JSON object with nested information.

...
" details " : {

" gameSpeed " : " Faster " ,
" isBlizzardMap " : true ,
" timeUTC " : " 2016 -07 -29 T04 :50:12.5655603 Z "

} ,
...

Listing 5: Example details ﬁeld containing a JSON object.

...
" metadata " : {

" baseBuild " : " " ,
" dataBuild " : " " ,
" gameVersion " : " " ,
" mapName " : " Galactic Process LE "

} ,
...

Listing 6: Example metadata ﬁeld containing a JSON object.

21

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

{

}

...
" metadata " : {

" baseBuild " : " " ,
" dataBuild " : " " ,
" gameVersion " : " " ,
" mapName " : " Galactic Process LE "

} ,
...

Listing 7: Example metadata ﬁeld containing a JSON object.

22

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

{

...
" ToonPlay erDescMap " : {

" 5 - S2 -1 -7361539 " : {

" nickname " : " s ome Pl ayerNic kn ame " ,
" playerID " : 2 ,
" userID " : 5 ,
" SQ " : 1 0 5 ,
" su pplyC apped Per ce nt " : 4 ,
" startDir " : 1 ,
" startLocX " : 1 2 7 ,
" startLocY " : 1 3 1 ,
" race " : " Zerg " ,
" selectedRace " : " " ,
" APM " : 0 ,
" MMR " : 0 ,
" result " : " Win " ,
" region " : " China " ,
" realm " : " China " ,
" highestLeague " : " Unknown " ,
" isInClan " : false ,
" clanTag " : " " ,
" handicap " : 1 0 0 ,
" color " : {
" a " : 2 5 5 ,
" b " : 0 ,
" g " : 6 6 ,
" r " : 2 5 5
}

} ,
" 5 - S2 -1 -7361634 " : {

" nickname " : " An ot h er Pl a yerNi cknam e " ,
" playerID " : 1 ,
" userID " : 1 ,
" SQ " : 1 1 5 ,
" su pplyC apped Per ce nt " : 7 ,
" startDir " : 7 ,
" startLocX " : 2 4 ,
" startLocY " : 2 0 ,
" race " : " Zerg " ,
" selectedRace " : " " ,
" APM " : 0 ,
" MMR " : 0 ,
" result " : " Loss " ,
" region " : " China " ,
" realm " : " China " ,
" highestLeague " : " Unknown " ,
" isInClan " : false ,
" clanTag " : " " ,
" handicap " : 1 0 0 ,
" color " : {
" a " : 2 5 5 ,
" b " : 1 8 0 ,
" g " : 2 0 ,
" r " : 3 0
}

}

}
...

}

Listing 8: Example ToonPlayerDescMap ﬁeld containing a JSON object mapping player statistics to unique toon id.

23

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

A.5.2 Game Events

All of the game events that were recorded by the game engine are available in one of the ﬁelds named "gameEvents",
all of the events that are available are presented in . . .

[

...
{

]

[

...

...
{

} ,
...

]

" baseBuildNum " : 4 4 4 0 1 ,
" buildNum " : 4 4 4 0 1 ,
" cameraFollow " : false ,
" debugPau seEnabled " : false ,
" d e ve l o pm e n t C h e at s E n a b l ed " : false ,
" evtTypeName " : " UserOptions " ,
" g ameF ul lyDo wnlo ade d " : true ,
" hotkeyProfile " : " \ u003ccustom \ u003e " ,
" id " : 7 ,
" i sM apT oMa pT ra ns it ion " : false ,
" loop " : 0 ,
" m u lt i p la y e r C h e at s E n a b l ed " : false ,
" platformMac " : false ,
" s yn c C he c ks u m m in g E na b l e d " : false ,
" testChea tsEnabled " : false ,
" useGalaxyAsserts " : false ,
" userid " : {

" userId " : 0

} ,

" versionFlags " : 0
} ,

Listing 9: Example UserOptions game event JSON object.

" distance " : null ,
" evtTypeName " : " CameraUpdate " ,
" follow " : false ,
" id " : 4 9 ,
" loop " : 2 ,
" pitch " : null ,
" reason " : null ,
" target " : {

" x " : 0 . 7 1 0 9 3 7 5 ,
" y " : 0 . 5 4 6 9 9 7 0 7 0 3 1 2 5

} ,
" userid " : {

" userId " : 6

} ,
" yaw " : null

Listing 10: Example CameraUpdate game event JSON object.

24

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

[

...
{

" controlGroupId " : 1 0 ,
" delta " : {

" addSubgroups " : [
{

" count " : 1 ,
" in tra Sub gro u pP ri o ri ty " : 1 ,
" subgroupPriority " : 3 2 ,
" unitLink " : 1 0 8

}
] ,
" addUnitTags " : [
5 6 8 8 5 2 4 9
] ,
" removeMask " : {
" None " : null
} ,
" subgroupIndex " : 0

} ,
" evtTypeName " : " SelectionDelta " ,
" id " : 2 8 ,
" loop " : 1 2 ,
" userid " : {

" userId " : 5

}
} ,

...

...
{

" abil " : {

Listing 11: Example SelectionDelta game event JSON object.

" abilCmdData " : null ,
" abilCmdIndex " : 0 ,
" abilLink " : 1 8 8

} ,
" cmdFlags " : 2 5 6 ,
" data " : {

" None " : null

} ,
" evtTypeName " : " Cmd " ,
" id " : 2 7 ,
" loop " : 1 5 ,
" otherUnit " : null ,
" sequence " : 1 ,
" unitGroup " : null ,
" userid " : {

" userId " : 5

}

} ,
...

]

[

]

Listing 12: Example Cmd game event JSON object.

25

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

[

...
{

" evtTypeName " : " C mdU pd at eTa rge tUni t " ,
" id " : 1 0 5 ,
" loop " : 3 7 ,
" target " : {

" s na p s ho t C o nt r o l Pl a y e rI d " : 0 ,
" snapshotPoint " : {
" x " : 6 4 . 5 ,
" y " : 6 8 . 7 5 ,
" z " : 5 . 9 9 4 1 4 0 6 2 5
} ,
" snapshotUnitLink " : 3 6 9 ,
" sn a ps ho tUp k ee p P la y er I d " : 0 ,
" tag " : 2 8 8 3 5 8 5 ,
" targetUnitFlags " : 1 1 1 ,
" timer " : 0

} ,
" userid " : {

" userId " : 5

}

} ,
...

...
{

Listing 13: Example CmdUpdateTargetUnit game event JSON object.

" evtTypeName " : " C omm an dM ana ger Stat e " ,
" id " : 1 0 3 ,
" loop " : 3 7 ,
" sequence " : 3 ,
" state " : 1 ,
" userid " : {

" userId " : 5

}

} ,
...

Listing 14: Example CommandManagerState game event JSON object.

]

[

]

26

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

[

]

[

]

[

]

...
{

" controlG roupIndex " : 1 ,
" cont rol Gr ou pUp date " : 2 ,
" evtTypeName " : " Co nt rolGr ou pU pda te " ,
" id " : 2 9 ,
" loop " : 1 6 3 9 ,
" mask " : {

" None " : null

} ,
" userid " : {

" userId " : 1

}

} ,
...

...
{

Listing 15: Example ControlGroupUpdate game event JSON object.

" evtTypeName " : " C md Up da teTargetPoint " ,
" id " : 1 0 4 ,
" loop " : 2 9 6 5 ,
" target " : {

" x " : 1 9 . 1 3 3 0 5 6 6 4 0 6 2 5 ,
" y " : 2 6 . 3 6 9 1 4 0 6 2 5 ,
" z " : 5 . 7 3 3 8 8 6 7 1 8 7 5

} ,
" userid " : {

" userId " : 5

}

} ,
...

...
{

Listing 16: Example CmdUpdateTargetPoint game event JSON object.

" evtTypeName " : " GameUserLeave " ,
" id " : 1 0 1 ,
" leaveReason " : 0 ,
" loop " : 7 8 4 5 ,
" userid " : {

" userId " : 5

}

} ,
...

Listing 17: Example CmdUpdateTargetPoint game event JSON object.

A.5.3 Tracker Events

All of the game events that were recorded by the game engine are available in one of the ﬁelds named "trackerEvents",
all of the events that are available are presented in . . .

27

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

[

]

...
{

} ,
...

" evtTypeName " : " PlayerSetup " ,
" id " : 9 ,
" loop " : 0 ,
" playerId " : 1 ,
" slotId " : 0 ,
" type " : 1 ,
" userId " : 1

Listing 18: Example PlayerSetup tracker event JSON object.

28

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

[

...
{

" evtTypeName " : " PlayerStats " ,
" id " : 0 ,
" loop " : 1 ,
" playerId " : 1 ,
" stats " : {

" scoreValueF ood Ma de " : 5 7 3 4 4 ,
" scoreValueF ood Us ed " : 4 9 1 5 2 ,
" s c o r e V a l u e M i n e r a l s C o l l e c t i o n R a t e " : 0 ,
" s c o r e V a l u eM i n e r a l s C u r re n t " : 5 0 ,
" s c o r e V a l u e M i n e r a l s F r i e n d l y F i r e A r m y " : 0 ,
" s c o r e V a l u e M i n e r a l s F r i e n d l y F i r e E c o n o m y " : 0 ,
" s c o r e V a l u e M i n e r a l s F r i e n d l y F i r e T e c h n o l o g y " : 0 ,
" s c o r e V a l u e M i n e r a l s K i l l e d A r m y " : 0 ,
" s c o r e V a l u e M i n e r a l s K i l l e d E c o n o m y " : 0 ,
" s c o r e V a l u e M i n e r a l s K i l l e d T e c h n o l o g y " : 0 ,
" s c o r e V a l u e M i n e r a l s L o s t A r m y " : 0 ,
" s c o r e V a l u e M i n e r a l s L o s t E c o n o m y " : 0 ,
" s c o r e V a l u e M i n e r a l s L o s t T e c h n o l o g y " : 0 ,
" s c o r e V a l u e M i n e r a l s U s e d A c t i v e F o r c e s " : 0 ,
" s c o r e V a l u e M i n e r a l s U s e d C u r r e n t A r m y " : 0 ,
" s c o r e V a l u e M i n e r a l s U s e d C u r r e n t E c o n o m y " : 1 0 5 0 ,
" s c o r e V a l u e M i n e r a l s U s e d C u r r e n t T e c h n o l o g y " : 0 ,
" s c o r e V a l u e M i n e r a l s U s e d I n P r o g r e s s A r m y " : 0 ,
" s c o r e V a l u e M i n e r a l s U s e d I n P r o g r e s s E c o n o m y " : 0 ,
" s c o r e V a l u e M i n e r a l s U s e d I n P r o g r e s s T e c h n o l o g y " : 0 ,
" s c o r e V a l u e V e s p e n e C o l l e c t i o n R a t e " : 0 ,
" s c or e V a l u e V e s p en e C u r r e nt " : 0 ,
" s c o r e V a l u e V e s p e n e F r i e n d l y F i r e A r m y " : 0 ,
" s c o r e V a l u e V e s p e n e F r i e n d l y F i r e E c o n o m y " : 0 ,
" s c o r e V a l u e V e s p e n e F r i e n d l y F i r e T e c h n o l o g y " : 0 ,
" s c o r e V a l u e V e s p e n e K i l l e d A r m y " : 0 ,
" s c o r e V a l u e V e s p e n e K i l l e d E c o n o m y " : 0 ,
" s c o r e V a l u e V e s p e n e K i l l e d T e c h n o l o g y " : 0 ,
" s c o r e V a l u eV e s p e n e L o s t Ar m y " : 0 ,
" s c o r e V a l u e V e s p e n e L o s t E c o n o m y " : 0 ,
" s c o r e V a l u e V e s p e n e L o s t T e c h n o l o g y " : 0 ,
" s c o r e V a l u e V e s p e n e U s e d A c t i v e F o r c e s " : 0 ,
" s c o r e V a l u e V e s p e n e U s e d C u r r e n t A r m y " : 0 ,
" s c o r e V a l u e V e s p e n e U s e d C u r r e n t E c o n o m y " : 0 ,
" s c o r e V a l u e V e s p e n e U s e d C u r r e n t T e c h n o l o g y " : 0 ,
" s c o r e V a l u e V e s p e n e U s e d I n P r o g r e s s A r m y " : 0 ,
" s c o r e V a l u e V e s p e n e U s e d I n P r o g r e s s E c o n o m y " : 0 ,
" s c o r e V a l u e V e s p e n e U s e d I n P r o g r e s s T e c h n o l o g y " : 0 ,
" s c o r e V a l u e W o r k e r s A c t i v e C o u n t " : 1 2

}

} ,
...

]

Listing 19: Example PlayerStats tracker event JSON object.

29

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

[

]

[

]

[

]

...
{

} ,
...

...
{

} ,
...

...
{

} ,
...

" evtTypeName " : " UnitTypeChange " ,
" id " : 4 ,
" loop " : 1 5 ,
" unitTagIndex " : 2 1 8 ,
" unitTagRecycle " : 1 ,
" unitTypeName " : " Egg "

Listing 20: Example UnitTypeChange tracker event JSON object.

" controlPlayerId " : 1 ,
" evtTypeName " : " UnitBorn " ,
" id " : 1 ,
" loop " : 6 5 2 ,
" unitTagIndex " : 2 3 8 ,
" unitTagRecycle " : 1 ,
" unitTypeName " : " Drone " ,
" upkeepPlayerId " : 1 ,
" x " : 2 3 ,
" y " : 1 7

Listing 21: Example UnitBorn tracker event JSON object.

" evtTypeName " : " UnitTypeChange " ,
" id " : 4 ,
" loop " : 6 5 2 ,
" unitTagIndex " : 2 0 3 ,
" unitTagRecycle " : 1 ,
" unitTypeName " : " Larva "

Listing 22: Example UnitTypeChange tracker event JSON object.

30

[

]

[

...
{

} ,
...

...
{

}
...

]

SC2EGSet: StarCraft II Esport Replay and Game-state Dataset

A PREPRINT

" evtTypeName " : " UnitDied " ,
" id " : 2 ,
" killerPlayerId " : null ,
" kill erU ni tT agI ndex " : null ,
" k il ler Uni tT ag Re cy cle " : null ,
" loop " : 6 5 2 ,
" unitTagIndex " : 2 0 3 ,
" unitTagRecycle " : 1 ,
" x " : 2 3 ,
" y " : 1 7

Listing 23: Example UnitDied tracker event JSON object.

" evtTypeName " : " UnitPositions " ,
" firstUnitIndex " : 2 6 5 ,
" id " : 8 ,
" items " : [
0 ,
5 0 ,
2 7 ,
1 4 ,
4 9 ,
2 6 ,
3 ,
4 9 ,
2 8 ,
9 ,
4 8 ,
2 8 ,
1 8 ,
5 0 ,
2 6 ,
1 1 ,
5 0 ,
2 7 ,
2 1 ,
5 5 ,
2 3

] ,
" loop " : 6 0 0 0

Listing 24: Example UnitPositions tracker event JSON object.

31

