1
2
0
2

l
u
J

3
1

]

C
H
.
s
c
[

1
v
6
0
2
6
0
.
7
0
1
2
:
v
i
X
r
a

ML-Quest: A Game for Introducing Machine Learning Concepts to K-12
Students

SHRUTI PRIYA, SHUBHANKAR BHADRA AND SRIDHAR CHIMALAKONDA,

Research in Intelligent Software & Human Analytics (RISHA) Lab

Department of Computer Science and Engineering

Indian Institute of Technology, Tirupati, India

Today, Machine Learning (ML) is of a great importance to society due to the availability of huge data and high computational resources.

This ultimately led to the introduction of ML concepts at multiple levels of education including K-12 students to promote computational

thinking. However, teaching these concepts to K-12 through traditional methodologies such as video lectures and books is challenging.

Many studies in the literature have reported that using interactive environments such as games to teach computational thinking and

programming improves retention capacity and motivation among students. Therefore, introducing ML concepts using a game might

enhance students’ understanding of the subject and motivate them to learn further. However, we are not aware of any existing game

which explicitly focuses on introducing ML concepts to students using game play. Hence, in this paper, we propose ML-Quest, a 3D

video game to provide conceptual overview of three ML concepts: Supervised Learning, Gradient Descent and K-Nearest Neighbor (KNN)

Classification. The crux of the game is to introduce the definition and working of these concepts, which we call conceptual overview,

in a simulated scenario without overwhelming students with the intricacies of ML. The game has been predominantly evaluated for

its usefulness and player experience using the Technology Acceptance Model (TAM) model with the help of 23 higher-secondary

school students. The survey result shows that around 70% of the participants either agree or strongly agree that the ML-Quest is quite

interactive and useful in introducing them to ML concepts.

CCS Concepts: • Human-centered computing → Game for Learning.

Additional Key Words and Phrases: Machine Learning, Games, Learning, K-12 Education

ACM Reference Format:

Shruti Priya, Shubhankar Bhadra and Sridhar Chimalakonda. 2021. ML-Quest: A Game for Introducing Machine Learning Concepts to

K-12 Students. 1, 1 (July 2021), 13 pages. https://doi.org/10.1145/nnnnnnn.nnnnnnn

1 INTRODUCTION

Machine Learning (ML) is pervasive today owing to the drastic increase in the availability of data and computational

power [38]. ML has become relevant to a much broader community in recent years with an increase in addressing

challenges across multiple domains such as job automation, privacy concerns, facilitate healthcare services and many

more [19, 33]. It has been integrated into various products and services, from speech recognition system to movie

recommendations [20, 27, 32, 38]. However, the underlying process of ML is black-boxed for many users [11].

Author’s address: Shruti Priya, Shubhankar Bhadra and Sridhar Chimalakonda,
Research in Intelligent Software & Human Analytics (RISHA) Lab
Department of Computer Science and Engineering
Indian Institute of Technology, Tirupati, India, Email:{cs18b043,cs18b034,ch}@iittp.ac.in.

Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not
made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components
of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to
redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org.

© 2021 Association for Computing Machinery.

1

 
 
 
 
 
 
2

Shruti and Shubhankar, et al.

Considering the vast presence of ML and its impact on society, it has become important for students, to be prepared

for the upcoming digital era and empower themselves as digital citizens [13]. Since past few years, computer science

has become one of the significant part of primary and secondary education, as it promotes computational thinking [8].

Studies have reported that introducing computer science at an early stage could help students grow their interest in the

subject, which could further aid the development of advanced technologies [28]. Along with conventional teaching

methods such as books and video lectures, technologies such as Artificial Intelligence, Virtual Reality and Mixed Reality

[4, 21, 23] have been incorporated to introduce computer science concepts at the school level in order to promote

computational thinking [26].

With the increasing popularity of ML due to its widespread usage and societal impact, there have been attempts

to introduce ML as a K-12 subject through online courses and tutorials [1, 22, 40]. ML is a field of computer science,

which provides computers the ability to learn and solve unknown problems on their own [31]. Uncovering the basic

concepts of ML at an early stage could help students improve their cognitive thinking and could also prepare them for

pursuing higher education and future career in ML [11, 39]. Nevertheless, it should be noted that students should not

be overwhelmed because of the complexity of an unknown concept [11, 22]. Therefore, there is a need to introduce ML

concepts at an early stage without burdening them with inner complex details.

Overtime, many studies have shown the effectiveness of games in the field of learning which ultimately led to the

involvement of them to teach multiple concepts across different domains such as code debugging [17, 36], computer

architecture [35] and social awareness [37]. Games have been considered to be entertaining and engaging [34]. Teaching

concepts through games could help learners perceive learning as fun without overwhelming them with inner details of

the concept [7, 16]. We believe that ML concepts can also be introduced via a game without going through the lower

level of implementation details. However, based on the reported studies in the literature, we could not find any video

game which explicitly focuses on teaching ML concepts.

Considering the effectiveness of games [34] and their wide presence in learning [17, 35, 36], we propose a 3D video

game ML-Quest which aims at introducing the definition and the working, which we call conceptual overview of three

ML concepts: Supervised Learning, Gradient Descent and KNN Classification to higher-secondary school students. The

game aims to introduce the ML concepts to school students with no prior knowledge of ML, without overwhelming them

with inner details such as underlying complex mathematics or any technical jargon. ML-Quest comprises three levels

to teach three different ML concepts. At each level player is equipped with clues, an instruction board, and dialogue

messages to solve the task intuitively aligned to a particular ML concept. At the end of each level, the underlying ML

concept is defined and mapped with the task performed to help the player to understand the working of the concept.

The proposed game aims to help K-12 students boost their understanding of ML at an early age by applying them in a

simulated game world.

Evaluation of the game has been done considering its Ease of Use, Usefulness, Intention to use, and Correctness.

Table 1 summarizes the result of the survey following mean and standard deviation format. Result shows around 70% of

the participants either agree or strongly agree that the game has made learning more interactive with a mean of 3.86

and a standard deviation of 0.69. Participants also find the game, easy to use and very useful to get an overview of ML

concepts with the average mean of all survey question related to ease of use and usefulness (refer Table 1) 3.61 and 3.78

respectively. Also, 70% of the participants found the ML concepts taught at each level aligned to the gameplay, thus
validates the correctness of the game. Results of the survey along with the game demo can be found here 1

1https://osf.io/czru5/?view_only=64741df07d0e481685e2dbb2afe7a1df

ML-Quest: A Game for Introducing Machine Learning Concepts to K-12 Students

3

2 RELATED WORK

With advancements in technologies, several techniques such as visualisation, computational notebooks and game

development have been adopted to make learning more interactive [23, 33]. Many studies have reported games to

be helpful in introducing various educational concepts and it has been leveraged by many researchers in the field

of learning [17]. Games are motivating and make learning more interactive, interesting and engaging [34]. Teaching

concepts through game could promote computational thinking and help students to understand the concept in a fun

and better way.

Wu’s Castle [6] is a 2D game to teach array and looping constructs. In this game, the player needs to write code to

perform certain tasks and understand the concept though visualisation. The game has been evaluated on 28 students and

results show that the students who have played the game outperformed in the coding test compared to those who did

not play the game. Similarly, there are several games to teach concepts across different domains such as G4D [36] and

Gidget [17] to help students in debugging codes, game to teach Computer Architecture to undergraduates [35], video

game to teach supply chain and logistics [18] and many more. All these games have been evaluated for their likelihood,

usefulness and player experience, and results show that learning has become much easier and understandable though

the games compared to the traditional way of learning for students.

Considering the societal impact of ML, there have been initiatives to include AI and ML into K-12 curriculum to

promote computing education. Wangenheim et al. [39] designed an online course for K-12 students to introduce basic

ML concepts that also teaches to train ML model using Google Teachable Machine. Mariescu-Istodor et al. [22] proposes

a method for teaching ML model training for object recognition to high school students based on the knowledge they

had gained from their high school Mathematics and Computer Science classes. However, the amount of literature or

courses providing an overview on teaching ML to school students is minimal, mostly targeting undergraduate and

postgraduate students which is evident from their surveys [24].

There have been a few attempts to introduce ML concepts to K-12 through visualisation and tools. Chung et al. [3]

proposes an approach to introduce basic concepts of ML to K-12 by making them develop applications to perform

different tasks, using web based tools such as “Machine Learning for Kids", “Scratch 3" and “Lego Mindstorms EV3

robots". Similarly, Christiane et al. [39] introduces a course to promote machine learning among K-12 by guiding them

to develop image recognition model using Google Teachable Machine. Hitron et al. [11] also tried to introduce ML

concepts to the school children using hand gestures through a hardware device for training a classification model. From

the outcomes, they conclude that if the black boxes are uncovered, it would be easier for children to understand the

world around them better. They also mention that uncovering multiple layers of an unknown concept could overwhelm

the students. So, there is a need for a balance between uncovering and black-boxing ML concepts. Although there

have been attempts to introduce ML concepts to students, we could not find any interactive and engaging approach

such as video games, which could introduce concepts to students without overwhelming them with the underlying

complexities. Therefore, considering the advantage of games in learning, we propose ML-Quest, a 3D video game to

introduce ML concepts to school students without burdening them with any inner details (i.e underlying mathematics

or any technical jargon).

3 DESIGN METHODOLOGY

ML-Quest is a 3D, Role Player Game (RPG) with a quest theme. The game has been designed keeping in mind the

integration of educational topics to game play through challenging tasks aligned with the concept being taught, clear

4

Shruti and Shubhankar, et al.

instructions and giving immediate feedback to the player. The game has a storyline where the protagonist is on a

mission to protect her kingdom from the enemy referred as ‘red men’. The current prototype version of the game has

three levels capturing three different ML concepts namely Supervised Learning, Gradient Descent and KNN Classification

through well-designed tasks. At each level the tasks have been designed by aligning to a particular ML concept and can

be solved by carefully following the provided instructions (for details, refer section 3.1). Each level is equipped with

instruction boards and dialogue boxes to guide the player. In order to create a mental model of the underlying concepts,

at the end of each level, the definition and working of the ML concept is displayed mapped with the tasks performed in

the level.

Various games in the literature such as G4D [36] and Game for Computer Architecture [35] have used different game

design patterns such as Scaffolding [9] and Early Bird [15] to systematically address the recurring design problem and

for effective game design. Scaffolding is observed to be positively bracing game development, which is evident with its

wide usage in various educational games [14, 36]. Hence, we have also opted for the scaffolding technique for ML-Quest.

Scaffolding in this context refers to hiding the high-level information and gradually uncovering the domain-specific

concepts [9]. We have implemented this idea by using metaphors for the tasks and processes at each level and unmasked

these abstractions at the end of the level by defining and mapping them to the underlying ML concept.

According to Jantan et al., scaffolding consists of 10 characteristics that lead to an effective game design [14]. In our

game, we have tried to capture five of these characteristics: Provides clear direction, Clarifies purpose, Keep students on

task, Appropriateness of the instruction level and Continuity. The player is equipped with instructions and dialogues

describing tasks and steps to complete each level. Thus, incorporating the scaffolding characteristics of Provides clear

direction and Clarify purpose. The player performs tasks based on the instructions provided, which on completion is

mapped to the underlying ML concept for a better understanding of the player, thus implementing the scaffolding

characteristics of Keep students on task and Appropriateness of the instruction level. The game’s complexity increases

gradually based on the previously performed task, and the storyline progresses with a smooth transition between the

levels, implementing the scaffolding characteristic of Continuity.

Fig. 1. Architecture of ML-Quest.

ML-Quest: A Game for Introducing Machine Learning Concepts to K-12 Students

5

3.1 Game Levels and their Outcomes

The current version of the game has three levels, each introducing one ML concept namely Supervised Learning, Gradient

Descent and K-Nearest Neighbor (KNN) Classification respectively. In the broad scope of ML we have focused on the

concepts those are fundamental and amenable [2] and hence in the prototype version primarily focused on these three

concepts. The concepts and learning outcomes for each level have been discussed further.

Supervised Learning: Level 1 of the ML-Quest is designed to introduce the definition and working of Supervised

Learning. Supervised Learning is a well-known ML technique in which the ML model is trained to find the solution

based on previous problem-solution pair [25]. This level simulates a similar scenario through a maze problem. Here,

the player is considered as a model. With the help of provided instructions player needs to reach to the entrance of

the maze (i.e. training the model) and then solve the maze by following the same previous directions (i.e. apply the

previous knowledge to solve the new problem), as shown in Figure 2. An alert message pops up in case the player does

not remember the previous instructions and tries to solve the maze by hit and trial, in this way, we make sure that

the player is following previously taught instructions only. Once a player achieves the goal, the learning outcome is

displayed, which states the definition of Supervised Learning and then maps steps involved in the working of it to the

task performed in the level so that player can get the conceptual overview of Supervised Learning.

Gradient Descent: Gradient Descent is an optimization technique used to minimize a function by iterating in the

direction of maximum slope and reach the local minima [29]. In Level 2, the player is instructed to apply the steps

involved in the working of Gradient Descent to solve the maze and reach the bottom-most point. The slope is used as a

hint to choose the correct path (i.e., a path with maximum slope) and reach the optimum point as shown in Figure

3. After a player reaches the destination by choosing a path with maximum slope and overcoming all hurdles, the

definition and working of the Gradient Descent is introduced and mapped to the level for the player to easily grasp the

concept.

KNN Classification: KNN Classification is a ML technique used to classify objects based on the majority of elements

among its k nearest neighbors [25]. As the game is meant to provide an abstraction of the concept to the students, we

have considered presenting this concept of majority in the form of persuasion power and voting. In Level 3, a player

has two votes, and enemies have one vote each. Considering k as three, if the player reaches to target (a green-colored

person) before the two enemies, then in the three closest neighbors of the target, the player will have a majority vote

(i.e., two), so the target will be classified on the player’s side. Alternatively, if two enemies reach before, they will be in

the majority and will make the target to their side. A distance meter is provided, which shows the distance between

player and target along with an enemy meter which, shows the distance between the enemy and the target. At the end

of this level, the definition and working of KNN classification mapped to the task performed in this level is displayed as

shown in Figure 4.

4 DEVELOPMENT

The game has been implemented using the Unity 3D game engine 2. Figure 1 depicts the step-by-step approach used
for developing the game. We have used Unity assets to implement different game objects in each level along with

the environment. All the motions, listeners, and control of different game objects have been scripted in C#. We have

created minimap at each level for the user to get the top view of the surrounding using Unity, to render texture to the

target texture field. Minimap also keeps track of the player position by dealing with the player position vectors and

2https://unity.com/solutions/console-and-pc-games

6

Shruti and Shubhankar, et al.

time variables. Player movement is controlled through input from the keyboard. A player is equipped with rich UI

features such as a free-roaming environment, NPCs (Non-Playable Character), and dialogue boxes, which have been

implemented considering the physics-oriented events and have been controlled with the help of object listeners and

events of the game objects.

The game also provides navigation tools such as a distance-meter, path indicators, and instruction board to understand

the gaming world better and reach the goal based on these perceptions. At the end of each level, the learning outcomes

are displayed, attached with an object listener, to transition to the next level. The prototype of the game has been built
in WebGL 3 format and deployed on a website named Simmer.io 4, which is an online platform for sharing games.

Fig. 2. Scenes from Level 1. Solving the Maze based on previously provided directions. [A] is minimap to see and follow red path,
[B] shows instruction to follow, [C] is the player, [D] is diamond which needs to be collected to earn points, [E] tells the score, [F]
warning message saying wrong path, [G] the destination (i.e magical door to next level), [H] displays learning outcome, [I] is the
button t go to the next level.

5 USER SCENARIO

Consider Drishti, a school kid, enthusiastic to learn about ML related concepts, decides to play the ML-Quest. She

chooses Devi as her playable character and starts the game. After reading the instructions and storyline, she clicks

Next and level 1 begins. Here, Devi is in an isolated desert as shown in Figure 2[a]. Devi needs to follow the red path

marked in the mini-map in order to reach the destination along the way, she needs to note down the direction of

her movements displaying on the instruction board. After following the instruction set, she reaches the entrance of

the maze as shown in Figure 2[a][A]. Now, Devi follows the previously noted direction of her movement to solve the

maze and reach the magical door as shown in Figure 2[c][G]. While crossing the maze, if Devi steps into a wrong

path, she is prompted with a warning as shown in Figure 2[b][F] and the level restarts. As soon as she reaches target

by following all instructions and performing tasks carefully, a prompt appears with the learning outcome of level 1

3https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API
4https://simmer.io

ML-Quest: A Game for Introducing Machine Learning Concepts to K-12 Students

7

Fig. 3. Scenes from Level 2. Player reaches the magical door at the bottom of the maze using slope as a hint. [A] displays the slope
of the following path, [B] is the health bar, [C] displays the score, [D] is the red man, [E] is the minimap displaying the possible
directions, [F] displays slope of the path at intersection, [G] is the destination (i.e magical door to next level), [H] displays the learning
outcome of the level, [I] is the button to the next level.

and displays definition of Supervised Learning and how she has used the steps involved in the working of Supervised

Learning without even knowing it, in order to achieve the goal as shown in Figure 2[d][H]. Clicking on Next as shown

in Figure 2[d][I] takes Devi to level 2.

Devi encounters a similar maze as shown in Figure 3.a. She needs to solve the maze by choosing the path with

maximum slope value, as shown in Figure 3[b][F] To make the game more challenging, a few enemies (i.e., red men)

randomly walk within the maze. Interaction with red men will reduce the health of the protagonist. If Devi passes close

to an enemy, her health decreases. In the worst case, if health becomes zero, the game ends, and the level restarts. Once

Devi reaches the second magical door as shown in Figure 2[c] by carefully choosing the path with maximum slope, the

learning outcome is displayed as shown in Figure 3[d][H] which maps the level to steps involved in Gradient Descent

concept. Clicking on Next as shown in Figure 3[d][I] will take her to the final level.

Devi finally reaches the town of Bobs as shown in Figure 4[a]. She needs to rescue three Bobs, one at a time, by

getting his heart before the red men. If two red men, as shown in Figure 4[c][J] reach before the player, Bob will take the

side of red men as shown in Figure 4[c] and the level restarts. Bob can be identified by a tag hovering over the character

as shown in Figure 4[b][H]. Devi starts searching the Bob with the help of distance-meter, shown in Figure 4[a][F],

which displays the distance between the active Bob and Devi. If Devi finds Bob before the two red men, a dialogue

appears, which tells about the next task as shown in Figure 4[b][G]. After the conversation ends, Devi collects the heart

similar to the one shown in Figure 4[c][K] and Bob comes to Devi’s side, and she continues to search for the next Bob.

Once all the three Bobs are rescued, a prompt, as shown in Figure 4[d][L] appears, indicating the learning outcomes

8

Shruti and Shubhankar, et al.

Fig. 4. Scenes from Level 3. Section [a], [b] shows player rescuing Bob before the two red men could reach and as a result learning
outcome displays as shown in [d]. Section [c], shows the situation when both red men reaches before the player and hence player
looses the level and it restarts. [A], [B], [C], [D], [E], [F] represents active Bob name which needs to be rescued, number of red men
reached Bob, distance between Bob and red men, health bar, population, distance between player and Bob respectively. [I] displays
the message when red men reached before the player, [L] is the learning outcome.

Table 1. Questions asked in survey along with their code

Evaluation Questions

Variable Mean SD

I think learning to use ML-Game is easy
EU1
I think becoming skillful at using ML-Game is easy
EU2
U1
Using ML-Game would improve my understanding of the concepts in Machine Learning.
Using ML-Game would enhance my effectiveness in learning and understanding multiple principles of Machine Learning. U2
U3
Using ML-Game would make it easier for me to learn Machine Learning concepts.
I1
Assuming I had access to ML-Game, I intend to use it.
I2
ML-Game has made my learning interactive
C1
Visualizations displayed by ML-Game are relevant to the concept taught at each level.

3.52
3.70
3.91
3.78
3.65
3.43
3.87
3.65

0.95
0.93
0.85
0.74
0.78
0.95
0.69
0.83

which defines KNN Classification and how the steps involved in the working of this concept has been implemented

through the tasks performed by Devi in this level.

6 EVALUATION

ML-Quest is a 3D quest theme based game, meant to introduce ML concepts to students through interesting storyline

and engaging tasks. Considering these points, ML-Quest has been primarily evaluated for its Ease of use (EU), Usefulness

(U) and Intention to Use (I).

As per the literature, many games [10, 17, 35, 36] have been evaluated using a questionnaire-based user survey

combined with TAM model. TAM has been widely used over time to evaluate learning games such as multimedia

learning environment [30], ARTutor [21], and many more. The two main beliefs of TAM model, which influences the

decisions taken by a user for adopting a new technology are Perceived Ease of use (EU) and Perceived Usefulness (U) [5].

ML-Quest: A Game for Introducing Machine Learning Concepts to K-12 Students

9

Table 2. Demographic questions asked in survey

Demographic Questions

Prior knowledge about ML
Yes
No
Inquisitiveness for ML
Yes
No
Choice of the platform
Laptop/Desktop
Smartphone

Percent (%)

33.3
66.7

42.1
57.9

69.6
47.8

Considering the current scope of ML-Quest and factors associated to the TAM model, we found that TAM fits well for

the evaluation of our game. Along with these two factors TAM model also includes factors such as Privacy concern,

Perceived risk, Facilitating conditions and Subjective norm [12]. But since we are not dealing with any confidential user

data, checking for Privacy concern and Perceived risk would be reluctant in case of our game. Since, ML-Quest is a video

game specially for K-12 students and can be played on any browser without need of any supervision, evaluating for

Facilitating conditions and Subjective norm is also not useful. So, we have excluded these factors and considered only

the above mentioned two relevant factors (i.e Perceived Ease of use (EU), Perceived Usefulness (U)). Intention to Use (I)

and Correctness (C) are also the important factors as Intention to Use, tells whether the user will be willing to use the

game in future or not and Correctness (C), defines the degree of validity of the game, which is relevant in our case as

we want to evaluate the relevance of the tasks assigned in each level compared to the concept taught. Thus, we are

evaluating our game based on four factors (i.e Perceived Ease of use (EU), Perceived Usefulness (U), Intention to Use (I) and

Correctness (C)) using TAM model.

For the survey, a questionnaire is created consisting of twelve statements covering all the four mentioned quality

factors as shown in Table 1 along with three demographic questions covering prior knowledge about ML, inquisitiveness

for ML, and choice of the platform for playing online games respectively as shown in Table 2. The current prototype

version of ML-Quest is in its initial stage and has only three-game levels, each survey questions covering a particular

quality factor is applicable for all the levels. To evaluate learner’s satisfaction after playing the game, we use the

5-point Likert scale, which is a quantitative evaluation method and has been commonly used for evaluation of various

educational games [36, 37]. The learners were asked to respond to each question in the range of 1 (strongly disagree) to

5 (strongly agree).

7 RESULTS

Twenty-three higher-secondary school students participated in the user survey, consisting of twelve questions covering

the three TAM factors mentioned above, correctness and demographics. After playing the game, participants were

asked to fill the questionnaire by rating each question in the range of 1 (strongly disagree) to 5 (strongly agree). A score

close to 5 is an indicator of better acceptance among the users, whereas a score of 1 means lower acceptance. Figure 5,

shows the result of the user survey in terms of mean and standard deviation of each question, covering all four quality

factors.

10

Shruti and Shubhankar, et al.

Fig. 5. Mean and Standard Deviation plots for factors of adapted TAM model in the questionnaire

Table 3. Correlation Analysis Results of adapted TAM model variables

U

EU

U
1
EU 0.2994
0.4952
I

1
0.4694

I

1

According to our survey result5 66.7% of the participants have heard of the term ML but only 42.1% of them searched
for the underlying processes in ML. This indicates that our game could help students to build curiosity for ML and learn

related concepts. The survey also reveals that most of the participants chose laptop/desktop as a platform to play games,

thus encouraging us further to create such games in web-format to capture most of the audience. The demographics of

the survey are presented in Table 2.

Table 3 shows the correlation between various factors that we considered for evaluation from the TAM model.

The TAM factors I and U have a strong positive correlation indicating the fact that usage and intention are strongly

dependent on each other. The main aim of the game was to introduce the concepts to children in an educative and

entertaining format. As visible from Figure 3, question U3, “Using ML-Quest would make it easier for me to learn
Machine Learning concepts", has a mean of 3.65 and a standard deviation of 0.775. A mean value close to 4 with a
minimum standard deviation shows that most of the participants agreed to question U3, indicating the usefulness of the

game. Hence, the game can be played by interested participants to get a basic understanding of some of the concepts in

ML. The levels in the game have been built with variation in complexity and an interesting storyline which makes it

interactive and engaging. The results show that the participants find the storyline engaging, which can be observed
from the responses of question I2, “ML-Quest has made my learning interactive", with a high mean of 3.87.

Correctness has a mean of 3.65 and a standard deviation of 0.83, which indicates the validity of our game, and users
are able to relate the level outcomes to the underlying concepts of the ML concept. Overall result of the survey indicates

5https://osf.io/czru5/?view_only=64741df07d0e481685e2dbb2afe7a1df

ML-Quest: A Game for Introducing Machine Learning Concepts to K-12 Students

11

that the game was able to capture the proposed intention, and the test audience were highly satisfied by playing the

game. The game has also helped in building curiosity for the subject and tried to uncover the black-box created in

today’s world. Furthermore, a few suggestions and constructive comments have also been provided by the participants

such as:

• “Player movement is too fast, needs to be slowed."
• “Level 2, enemies’ shooting balls are not visible"

8 DISCUSSION AND LIMITATIONS

The developed prototype version of ML-Quest aims to provide conceptual overview of the three ML concepts (i.e

Supervised Learning, Gradient Descent, KNN Classification) by motivating the player to apply those concepts in a simulated

scenario. The game creates a scenario where player needs to save himself and his town members by performing the

tasks at each level with the help of player’s intuition and instructions provided. To make game more engaging and

motivating for the player, tasks have been designed as challenges and also points are given to the player throughout the

game. At each level of the game tasks have been designed aligned to the concept taught in that level and also mapped

to the respective ML concept at the end of the level for better understanding of the player. Though the game has been

developed to address the younger generation specifically the K-12, it can be played by a wide range of enthusiastic

audience as well.

The main challenge while designing ML-Quest was mapping ML concepts to the gameplay and levels. A concept in

ML such as supervised learning has many subsections such as the mathematical aspect, the weights, labeled test-cases,

target variables, and many more. ML-Quest has been designed focusing on the concepts which are more fundamental

and uncomplicated to be put into the game. According to reported games in literature, it has been observed that a

game should be interesting and engaging to its playing audience to increase the learning efficiency. For doing so, the

proposed game ML-Quest uses scaffolding technique for game designing and gradually uncover the black box as the

player reaches the end of the level. Another challenge during the game development is the level of representation that

needs to be provided in order for the player to understand and build a mental model of the concept. Many educational

videos use extensive animations and slides, but the core aspect may still remain untouched. The game has been kept

precise in terms of providing the relevant content as much as possible and evaluated using TAM model.

In the current version, ML-Quest has only three levels to introduce the ML concepts such as Supervised Learning,

Gradient Descent and KNN Classification. The game is being actively developed based on continuous feedback from

players. The learning outcome is provided in a textual format which can be replaced by visual animations. The number

of instructions provided in the beginning is less and could be increased for improving the experience for first-time

learners. The character was limited by the asset available and can be worked upon to create custom characters for

enhancing the game play.

9 CONCLUSION AND FUTURE WORK

The ML-Quest attempts at introducing the definition and working (i.e conceptual overview) of three fundamental

Machine Learning (ML) concepts to school students without going into the intricate complexities. There are three

levels in the game for teaching three different ML concepts namely Supervised learning, Gradient Descent and KNN

Classification. The game uses scaffolding technique to help players understand the concepts and create a mental model

for the same. The storyline of the game consists of a character who needs to perform quests in order to free her kingdom.

12

Shruti and Shubhankar, et al.

The game is engaging and consists of various components to make it interactive. ML-Quest has been evaluated based

on TAM quality factors through questionnaire based survey on 23 participants from higher-secondary school. After a

remote qualitative user survey, we concluded that the majority of the learners are satisfied with the game design and

agree that the game has enhanced their understanding related to ML concepts.

Future works of the ML-Quest will focus on adding more ML concepts by integrating new levels with better

visualizations. We also plan to increase the complexity of the game to make it more challenging and fun at the same

time by including more user engagement along with multiplayer feature. The sensitivity of the game control at each

level could also be improved as suggested by our volunteers in the survey. Our survey also shows that a considerable

number of students prefer mobile based games, thus we are planning to explore other platforms such as smartphone

where the game can be played seamlessly.

ACKNOWLEDGEMENT(S)

We would like to thank all the volunteers for their valuable time and honest feedback. Special thanks to Akhila Sri

Manasa Venigalla for her guidance and support from the beginning of the project and to Eashaan Rao for reviewing

and making suggestions.

REFERENCES

[1] Mariana Aki Tamashiro, Maarten Van Mechelen, Marie-Monique Schaper, and Ole Sejer Iversen. 2021. Introducing Teenagers to Machine Learning

through Design Fiction: An Exploratory Case Study. In Interaction Design and Children. 471–475.

[2] Taiwo Oladipupo Ayodele. 2010. Machine learning overview. New Advances in Machine Learning 2 (2010).
[3] Chan-Jin Chung and Lior Shamir. 2020. Introducing Machine Learning with Scratch and Robots as a Pilot Program for K-12 Computer Science

Education. science education 6 (2020), 7.

[4] Stephen Cooper, Wanda Dann, and Randy Pausch. 2000. Alice: a 3-D tool for introductory programming concepts. Journal of computing sciences in

colleges 15, 5 (2000), 107–116.

[5] Fred D Davis. 1989. Perceived usefulness, perceived ease of use, and user acceptance of information technology. MIS quarterly (1989), 319–340.
[6] Michael Eagle and Tiffany Barnes. 2008. Wu’s castle: teaching arrays and loops in a game. In Proceedings of the 13th annual conference on Innovation

and technology in computer science education. 245–249.

[7] Michael Eagle and Tiffany Barnes. 2009. Experimental evaluation of an educational game for improved learning in introductory computing. ACM

SIGCSE Bulletin 41, 1 (2009), 321–325.

[8] Varvara Garneli, Michail N. Giannakos, and Konstantinos Chorianopoulos. 2015. Computing education in K-12 schools: A review of the literature.

In 2015 IEEE Global Engineering Education Conference (EDUCON). 543–551. https://doi.org/10.1109/EDUCON.2015.7096023

[9] Talip Gonulal and Shawn Loewen. 2018. Scaffolding technique. The TESOL Encyclopedia of English Language Teaching (2018), 1–5.
[10] Lasse Hakulinen. 2011. Card games for teaching data structures and algorithms. In Proceedings of the 11th Koli Calling International Conference on

Computing Education Research. 120–121.

[11] Tom Hitron, Yoav Orlev, Iddo Wald, Ariel Shamir, Hadas Erel, and Oren Zuckerman. 2019. Can Children Understand Machine Learning Concepts?

The Effect of Uncovering Black Boxes. In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems. 1–11.

[12] Il Im, Yongbeom Kim, and Hyojoo Han. 2008. The effects of perceived risk and technology type on users’ acceptance of technologies. Information &

Management 45 (01 2008), 1–9. https://doi.org/10.1016/j.im.2007.03.005

[13] Lori Instructional and Katharine Roche. 2020. A Review of the Importance of Computational Thinking in K-12. https://doi.org/10.1007/s11528-016-
[14] Siti Robaya Jantan and Syed Ahmad Aljunid. 2012. An experimental evaluation of scaffolded educational games design for programming. In 2012

IEEE Conference on Open Systems. IEEE, 1–6.

[15] Sebastian Kelle, Roland Klemke, and Marcus Specht. 2011. Design patterns for learning games. International Journal of Technology Enhanced Learning

3, 6 (2011), 555–569.

[16] Attila Krajcsi, Csaba Csapodi, and Eleonóra Stettner. 2019. Algotaurus: an educational computer programming game for beginners. Interactive

Learning Environments (2019), 1–14.

[17] Michael J Lee, Andrew J Ko, and Irwin Kwan. 2013. In-game assessments increase novice programmers’ engagement and level completion speed. In

Proceedings of the ninth annual international ACM conference on International computing education research. 153–160.

[18] Chiung-Lin Liu. 2017. Using a video game to teach supply chain and logistics management. Interactive Learning Environments 25, 8 (2017), 1009–1024.
[19] Alexandra Luccioni, Victor Schmidt, Vahe Vardanyan, and Yoshua Bengio. 2021. Using Artificial Intelligence to Visualize the Impacts of Climate

Change. IEEE Computer Graphics and Applications 41, 1 (2021), 8–14.

ML-Quest: A Game for Introducing Machine Learning Concepts to K-12 Students

13

[20] Jeffrey Lund and Yiu-Kai Ng. 2018. Movie recommendations using the deep learning approach. In 2018 IEEE international conference on information

reuse and integration (IRI). IEEE, 47–54.

[21] Chris Lytridis and Avgoustos Tsinakos. 2018. Evaluation of the ARTutor augmented reality educational platform in tertiary education. Smart

Learning Environments 5, 1 (2018), 6.

[22] Radu Mariescu-Istodor and Ilkka Jormanainen. 2019. Machine learning for high school students. In Proceedings of the 19th Koli Calling International

Conference on Computing Education Research. 1–9.

[23] Bradley RC Marques, Stephen P Levitt, and Ken J Nixon. 2012. Software visualisation through video games. In Proceedings of the South African

Institute for Computer Scientists and Information Technologists Conference. 206–215.

[24] Lívia S Marques, Christiane Gresse von Wangenheim, and Jean CR HAUCK. 2020. Teaching Machine Learning in School: A Systematic Mapping of

the State of the Art. Informatics in Education 19, 2 (2020), 283–321.

[25] Amr E Mohamed. 2017. Comparative study of four supervised machine learning techniques for classification. International Journal of Applied 7, 2

(2017).

[26] Dipti Verma Nashine and K Nirmala. 2021. A Generalized Framework for Technical Education and Implementation of Machine Learning Techniques.

In ICCCE 2020. Springer, 997–1006.

[27] Ali Bou Nassif, Ismail Shahin, Imtinan Attili, Mohammad Azzeh, and Khaled Shaalan. 2019. Speech recognition using deep neural networks: A

systematic review. IEEE access 7 (2019), 19143–19165.

[28] Don Passey. 2017. Computer science (CS) in the compulsory education curriculum: Implications for future research. Education and Information

Technologies 22, 2 (2017), 421–443.

[29] Sebastian Ruder. 2016. An overview of gradient descent optimization algorithms. arXiv preprint arXiv:1609.04747 (2016).
[30] Raafat Saade, Fassil Nebebe, and Weiwei Tan. 2007. Viability of the" technology acceptance model" in multimedia learning environments: a

comparative study. Interdisciplinary Journal of E-Learning and Learning Objects 3, 1 (2007), 175–184.

[31] A Sharma and Ankush Sharma. 2018. Machine learning: A review of techniques of machine learning. JASC J. Appl. Sci. Comput 5 (2018), 538–541.
[32] Rohit Sharma, Sachin S Kamble, Angappa Gunasekaran, Vikas Kumar, and Anil Kumar. 2020. A systematic literature review on machine learning

applications for sustainable agriculture supply chain performance. Computers & Operations Research 119 (2020), 104926.

[33] Elisabeth Sulmont, Elizabeth Patitsas, and Jeremy R Cooperstock. 2019. Can You Teach Me To Machine Learn?. In Proceedings of the 50th ACM

Technical Symposium on Computer Science Education. 948–954.

[34] Han-Yu Sung and Gwo-Jen Hwang. 2018. Facilitating effective digital game-based learning behaviors and learning performances of students based

on a collaborative knowledge construction strategy. Interactive Learning Environments 26, 1 (2018), 118–134.

[35] Ahmed Tlili, Fathi Essalmi, and Mohamed Jemni. 2016. Improving learning computer architecture through an educational mobile game. Smart

Learning Environments 3, 1 (2016), 1–14.

[36] Akhila Sri Manasa Venigalla and Sridhar Chimalakonda. 2020. G4D-a treasure hunt game for novice programmers to learn debugging. Smart

Learning Environments 7, 1 (2020), 1–21.

[37] Akhila Sri Manasa Venigalla, Dheeraj Vagavolu, and Sridhar Chimalakonda. 2020. SurviveCovid-19–A Game for Improving Awareness of Social

Distancing and Health Measures for Covid-19 Pandemic. arXiv preprint arXiv:2004.09759 (2020).

[38] O Anatole von Lilienfeld. 2020. Introducing Machine Learning: Science and Technology. Machine Learning: Science and Technology 1, 1 (2020),

010201.

[39] Christiane Gresse von Wangenheim, Lívia S Marques, and Jean CR Hauck. 2020. Machine Learning for All–Introducing Machine Learning in K-12.

(2020).

[40] Scott A Wallace, Ingrid Russell, and Zdravko Markov. 2008. Integrating games and machine learning in the undergraduate computer science

classroom. In Proceedings of the 3rd international conference on Game development in computer science education. 56–60.

