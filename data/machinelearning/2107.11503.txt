Efﬁcient Inverse Design of 2D Elastic Metamaterial
Systems Using Invertible Neural Networks

Manaswin Oddiraju ∗, Amir Behjat†, Mostafa Nouh‡, Souma Chowdhury§
Department of Mechanical & Aerospace Engineering
University at Buffalo
Buffalo, NY, 14260
Email:∗moddiraj@buffalo.edu, †amirbehj@buffalo.edu, ‡mnouh@buffalo.edu, §soumacho@buffalo.edu

1
2
0
2

l
u
J

4
2

]
E
C
.
s
c
[

1
v
3
0
5
1
1
.
7
0
1
2
:
v
i
X
r
a

Abstract—Locally resonant elastic metamaterials (LREM) can
be designed, by optimizing the geometry of the constituent self-
repeating unit cells, to potentially damp out vibration in selected
frequency ranges, thus yielding desired bandgaps. However, it
remains challenging to quickly arrive at unit cell designs that
satisfy any requested bandgap speciﬁcations within a given global
frequency range. This paper develops a computationally efﬁcient
framework for (fast) inverse design of LREM, by integrating a
new type of machine learning models called invertible neural
networks or INN. An INN can be trained to predict the bandgap
bounds as a function of the unit cell design, and interestingly at
the same time it learns to predict the unit cell design given a
bandgap, when executed in reverse. In our case the unit cells
are represented in terms of the width’s of the outer matrix
and middle soft ﬁller layer of the unit cell. Training data on
the frequency response of the unit cell is provided by Bloch
dispersion analyses. The trained INN is used to instantaneously
retrieve feasible (or near feasible) inverse designs given a speciﬁed
bandgap constraint, which is then used to initialize a forward
constrained optimization (based on sequential quadratic pro-
gramming) to ﬁnd the bandgap satisfying unit cell with minimum
mass. Case studies show favorable performance of this approach,
in terms of the bandgap characteristics and minimized mass,
when compared to the median scenario over ten randomly
initialized optimizations for the same speciﬁed bandgaps. Further
analysis using FEA verify the bandgap performance of a ﬁnite
structure comprised of 8 × 8 arrangement of the unit cells
obtained with INN-accelerated inverse design.

I. INTRODUCTION

Metamaterials can be thought of as compound structures
that consist of self-repeating smaller substructures referred to
as “unit cells” [1], [2]. Such a composition enables them to
have customizable physical properties which are otherwise
not naturally feasible [1], [3]. As such, they have become
increasingly popular for potential applications in acoustics [4],
[5], photonics [6], [7], sensing and other end uses [8], [9],
[10]. Owing to the periodic nature of traditional metamaterial
systems, the standard approach is to use an individual cell to
predict the dynamic response characteristics [11] of the overall
structure [12], [13], thereby reducing the design problem to
optimizing the design of the unit cell. In the case of mechanical
metamaterials, the dynamic response of these structures con-
tain “stop bands” and “passbands”. Vibrations with frequencies
in these passbands are propagated while the frequencies lying
in the stopbands are damped. The design of such metamaterial
systems with speciﬁed desired properties has traditionally

been a computationally challenging problem as it requires the
evaluation of expensive numerical simulations [14] to search
through (often) highly constrained design spaces. Moreover,
larger complex system level design efforts call for fast on-
demand retrieval of unit cells (satisfying speciﬁed properties)
with which portion of system structure will be made. This
calls for signiﬁcantly improved computational efﬁciency of
the search process for optimum retrieval of self-repeating unit
cells. Machine learning (ML) methods provide avenues to
ﬁll this important gap in the metamaterial design paradigm,
examples of which include the use of Artiﬁcial Neural Net-
works (ANN) [15], Generative Adversarial Networks(GAN)
[16] and Gaussian Process architectures [17]. In this paper,
we explore the use of an emerging type of ML model,
namely invertible neural networks or INN [18], [19], to speed
up the process of designing 2D Locally Resonant Elastic
Metamaterials (LREM); in this context, the INN uniquely
enables instantaneous retrieval of unit cells satisfying speciﬁed
bandgap properties. The remainder of this section is ordered
as follows: we ﬁrst introduce the concept of LREM, before
giving a brief literature review of ML methods used in the
design of LREM and related metamaterials, and converging
on the objectives and outline of this paper.

A. Locally Resonant Elastic Metamaterials

Locally Resonant Elastic Metamaterials or LREM are a
class of periodic structures comprised of a host medium
and an array of internal mechanical resonators [13]. Such
a combination allows for dynamic interactions between the
different materials and gives rise to interesting dynamic phe-
nomenon called ”Bandgaps” [4], [5]. An example of one
such conﬁguration in two-dimensional space is the hard-soft-
hard plate shown in Fig. 1, in which a self-repeating (or
periodic) arrangement of square (or rectangular) cells consist
of an outer steel matrix containing a soft ﬁller layer and a
rigid concentric mass. The ﬁller-mass combination provides
the local resonance mechanism (LR) necessary to induce the
LR band gaps [2]. Research efforts have seen the application
of such elastic metamaterials in areas ranging from noise
control [20], [21] and mitigation in engine mounts, turbines
and automotive parts [22], to new and unprecedented avenues
where such metamaterials open up the possibility of logic
gates, topological insulators, diodes, and switch-like functions

 
 
 
 
 
 
(a)

Fig. 1: 2D Metamaterial system: a) Metamaterial plate; b) Hard-Soft-Hard unit cell

(b)

in mechanical systems analogous to electronic circuits [23].
Since commonly used damping materials (e.g., viscoelastic
and rubber-like polymers) usually have mediocre load-bearing
capability [24], elastic metamaterials presents a lucrative alter-
native for pseudo-damping mechanisms that achieve targeted
attenuation behavior over frequency ranges of interest.

Due to the reasons mentioned earlier, notable fraction of
emerging metamaterial design methods exploit data-driven
techniques. For instance, Bostanabad et al. [25] used Gaussian
Process for big data analysis in a process called Globally
Approximate Gaussian Process (GP) and applied it to design
metamaterials. Hpwever, with approach, a separate optimiza-
tion is required every time a user desires a different speciﬁed
property. Another recent approach uses a Bayesian Network
Classiﬁer [26], [27], which signiﬁcantly reduces computational
effort and provisions model error measures. However, it is also
not directly amenable to efﬁcient inverse design or on-demand
retrieval of unit cells, given desired properties. In another
work, Ma et al. [28] used a variational autoencoder-based
generative model
to design photonic metamaterials. Such
approaches [29] often use Generative Adversarial Networks
(GAN), which in turn rely on large random data sets to train.
Another approach uses an adaptive neural network to achieve
similar objectives [30].

The ML models in the above-stated approaches do not
guarantee a computable inverse for retrieving the unit cell
design, given speciﬁed properties. INNs instead have a unique
architecture that allows them to preserve an analytically com-
putable Jacobian, thereby guaranteeing an exact inverse can
be retrieved by feeding the output and running the INN back-
wards. In our previous work [19], we exploited this concept
of INN to design 1D phononic structures with application
to vibration suppression in drill strings with annular inserts.
There, INNs were trained to model the discretized frequency
response of periodic and aperiodic structures. These INN mod-
els were used to instantaneously retrieve approximate inverse
designs with new user-desired frequency responses, which are
then used to initialize a constrained optimization process to

ﬁnd more accurate inverse designs, resulting in signiﬁcantly
improved outcomes compared to randomly initialized design
optimizations. Here, we extend the applicability of this inverse
design concept to a signiﬁcantly more complex 2D problem,
where the property of interest is low frequency bandgaps in
LREM. This further development requires more complex high-
ﬁdelity analyses for generating training samples and validating
ﬁnal designs, and re-imagining how to encode the output space
of the INN to model bandgaps, i.e., if they exist within the
speciﬁed global frequency range.

B. Research Objectives of this Paper

With the given background and need for fast retrieval of
inverse designs, the overall objectives of this paper can be
summarized as:

1) Identify a representation of bandgaps to be treated as
an output that INNs, and for comparison standard deep
neural network (DNNs), can predict as a function of unit
cell design.

2) Develop an inverse design framework for 2D LREMs,
by integrating dispersion analysis for generating high-
ﬁdelity samples of frequency response, INN and DNN
models respectively for inverse retrieval and surrogate
based optimization initialized thereof, and optimization
solvers.

3) Use the inverse design framework to ﬁnd 2D LREMs
that satisfy different user-speciﬁed bandgap constraints
while having the minimum mass, and compare its com-
putational efﬁciency and resulting mass and bandgap
with those of randomly-initialized design optimizations.
4) Develop a ﬁnite element analysis model to be used for
verifying the existence of the predicted bandgaps in a
ﬁnite LREM system comprising an 8 × 8 arrangement
of designed unit cells.

The remainder of this paper is ordered as follows: In Section
II, we ﬁrst present an overview of our design framework before
covering the individual components in detail. Section III con-
tains the details of our inverse design problem, including our

Aluminum MatrixSoft Filler MaterialBrass Resonatordesign variables, INN modelling parameters and optimization
settings. In Section IV we present the results and its discussion,
and thereafter ending with concluding remarks in Section V

II. INN BASED INVERSE DESIGN FRAMEWORK

Figure 2 shows the overall framework developed in this
paper. First we start with training the INN on samples
generated by dispersion analysis and then using the trained
INN in inverse direction to generate an initial design for
optimization. Our hypothesis is that the INN will generate
constraint satisfying designs, i.e designs which have bandgaps
that satisfy the user requirements. Starting at a feasible design
(or even close to a feasible design) will reduce the com-
putational cost of the forward optimization process and/or
enhance the quality of the design found with a given function
evaluation investment. It is important to note that, there is no
guarantee that constraint satisfying inverse designs do exist
for any given user speciﬁcations of desired bandgaps. Below,
we describe the critical parts of the framework, namely Bloch
dispersion analysis used for generating training and testing
samples, the INN architecture used for inverse retrieval of
design, the optimization approach used, and the ﬁnite element
model developed for veriﬁcation of the optimized designs.

A. Bloch Dispersion Analysis

The dispersion analysis is a useful tool that helps us in
determining the frequencies in which a metamaterial can
have wave propagation and therefore by extension, can also
help us in ﬁnding the frequencies where there is no wave
propagation or “Bandgaps”. The dispersion analysis is done
by ﬁrst discretizing the the unit cell into a 2D Finite element
grid with 2D Mindlin plate elements and then assembling the
global stiffness and mass matrices and also the displacement
vectors. After that, a set of periodic boundary conditions also
known as the “Bloch-Floquet” [31] boundary conditions as
shown in Eq. [1] are applied.

(cid:2) qI

qB qT

I
0
0
0
0
0
0
0
0
















qL
0
I
Ie˜ky i
0
0
0
0
0
0

qR qLB qRB qLT


0
0
0
I
Ie˜kxi
0
0
0
0

0
0
0
0
0
I
Ie˜kxi
Ie˜ky i
Ie(˜kx+˜ky)i

qo =T ˆq
(cid:3)T =T ˆq

qRT






qI
qB
qL
qLB






(1)

=T ˆq
















and where, q is the nodal displacement and the sub-
scripts I, B, T, L, R, LB, RB, LT, RT indicate the positions
of nodes at interior, bottom, top, left, right, left-bottom, right-
bottom, left-top and right-top respectively. kx, ky are the wave
numbers in x and y directions. Then, ω is obtained by solving
the following eigen-problem:

( ˆK0 − ω2 ˆM0)ˆq = 0 where,
Where, ˆK0 = ¯T T K0T and ˆM0 = ¯T T M0T .

(2)

By varying (kx, ky) along (π, π) −→ (0, 0) −→ (π, 0) −→
(π, π) (called the “Irreducible Brillouin Zone” [32]) we get a
vector of frequencies(Ω = [ω1, ω2, . . . ]) at which wave prop-
agation occurs in the metamaterial. From these frequencies,
the bandgaps are ﬁltered out as follows:

ΩBG = ΩA ∩ ΩB where,

[ωi, ωi+1] ∈ ΩA (cid:51) ωi+1 − ωi > 20Hz&i ∈ [1, n(Ω)]
[ωi, ωi+1] ∈ ΩB (cid:51) δ(C(ωi, Ω), C(ωi+1, Ω)) = 15

(3)

In the above equations, the operator C(ωi, Ω) represents the
number of times ωi occurs in the set Ω; and
(cid:40)

δ(ωi, ωi+1) =

15 if ωi ≥ 15 or ωi+1 ≥ 15
0

otherwise

(4)

B. Invertible Neural Networks

Invertible Neural Networks [18] are a type of neural net-
works which in addition to predicting an output given the
input, can also predict the input given an output when run
in reverse. The unique advantage of the INN is that they
can learn both the forward and inverse mappings at
the
same time. A handful of notable INN architectures have been
reported in recent years [33], with preliminary applications
to image reconstruction, parameter estimation, and generative
ﬂow modeling. We chose to implement the Invertible Net-
work architecture proposed in [18], since it offers an exactly
computable inverse. This architecture ensures invertibility by
preserving the non-singular property of the Jacobian of the
activations across a layer. We used a similar architecture of
the INN as in our previous work [19]. The following equations
show the working principle of the INN:

v1 = u1 (cid:12) exp(s2(u2)) + t2(u2),
v2 = u2 (cid:12) exp(s1(v1)) + t1(v1)

(5)

Here, u and v are the inputs and outputs of the Invertible Net-
work and the subscripts 1 and 2 indicate their ﬁrst and second
halves, respectively. s1, s2, t1, and t2 are neural networks with
fully connected layers with Leaky ReLU activation functions,
and (cid:12) represents element-wise multiplication.

The above expressions can be easily inverted if the output

v = [v1, v2] is known

u2 = (v2 − t1(v1)) (cid:12) exp(−s1(v1)),
u1 = (v1 − t2(u2)) (cid:12) exp(−s2(u2))

(6)

Further details and illustration of the INN architecture used
here are given in A.

C. Optimization Approach: Sequential Quadratic Program-
ming (SQP)

In this paper we use a standard gradient based solver, the
Sequential Quadratic Programming (SQP) [34], to perform
the constrained forward optimization for ﬁnding the unit cell
designs that satisfy the user-speciﬁed bandgap constraints and
minimizes the system mass. SQP is implemented using MAT-
LAB’s built-in optimization toolbox, Although we knew from
our initial numerical experiments that the problem tends to

(a)

(b)

Fig. 2: INN accelerated inverse design framework for 2D LREM: a) INN training; b) Inverse design retrieval and INN initialized
optimization

TABLE I: Harmonic analysis parameters

Analysis Parameter

Value

Analysis Type
FEA Package
Element Type
Time Stepping

Harmonic Analysis
Code Aster
6 node triangular element
Newmark’s Method

TABLE II: Design variable bounds

Variable

xm
ym
xf
yf

Bounds

[1,3] mm
[1,5] mm
[1,3] mm
[1,5] mm

Fig. 3: FEA boundary conditions

be multi-modal, we deliberately chose SQP so as to eliminate
any additional stochastic effects (otherwise unavoidable with
metaheuristic solvers such as genetic algorithms or particle
swarm optimization) when comparing the results of INN-
initialized optimizations with a set of randomly initialized
optimizations.

D. Finite Element Analysis (Postprocessing and Veriﬁcation)

The advantage of using the dispersion analysis is that it
is capable of determining the bandgaps deﬁnitively. However,
the boundary conditions used in the dispersion analysis as-

sume that the unitcell is part of an inﬁnite structure with
inﬁnite number of unitcells along each direction. Therefore,
the bandgaps that are predicted by the dispersion analysis may
not be present in an actual ﬁnite structure composed of a ﬁnite
number of cells as one would expect in a practical system.
Hence, to verify the realization of the (dispersion analysis)
predicted bandgap in a ﬁnite structure, we perform a harmonic
FEA analysis and plot the transmissibility ratio of the ﬁnite
structure (in this case a plate with 8×8 grid of unitcells) across
the frequency range of interest. The transmissibility ratio is
computed as the ratio between the observed displacement at a
predetermined node to the magnitude of the input force. Table
I gives the details of the FEA tools and setup used and Section
III-A provides the detailed parameters of our analysis.

INN TrainingDispersion AnalysisSample Unit CellDesigns Dispersion Plot Bandgaps InputsOutputsTransmissibility Ratio Optimizer Optimal UnitcellDesign  FEADesired BandgapsPost Processing andVerificationFinite Structure Invertible BlockPermutation  Layer InvertibleBlockConstraintInitialDesignInverseInput50060070080090010001n2510n25100n251μ25FrequencyTransfer RatioInverse Design RetrievalIII. PROBLEM DEFINITION

A. Dispersion and Harmonic Analysis Parameters

For this paper, we chose to design a unitcell

that will
ultimately be used in a periodic 2D metamaterial plate con-
taining a grid of 8 × 8 unitcells, as shown in Fig. 1a. For
the optimization, the design variables include the width of
the hard matrix and soft ﬁller layers in x and y directions,
as shown in Fig. 4. The optimization is aimed at reducing
the mass of the unitcell and by extension the 2D plate, while
satisfying a speciﬁed bandgap constraint (i.e., the existence of
a bandgap in a speciﬁed frequency range). The rest of this
section presents the implementation details of the dispersion
analysis, optimization formulation and inverse modeling.

For the purpose of this paper, we limit the frequency range
under consideration to 0 Hz – 2000 Hz. Material parameters
for different parts of the structure are given in Table 1.

Once the optimal design is found, it is veriﬁed by comparing
its transmissbility ratio measured at the points shown in Fig. 3
using FEA modeling as described in Section II-D. Here, Fig.
3 shows the applied boundary conditions and the loading of
the metamaterial plate.

B. Optimization formulation

The optimization problem for minimizing the mass
speciﬁed bandgap

to the

of
constraints

the 2D system subject
can be

formulated as given in Eq. 7.

: M (X) = tmρM(a2 − (a − xm)(a − ym))) + tf ρR(a − xm − xf )(a − ym − yf )+

min
X

trρF((a − xm)(a − ym) − (a − xm − xf )(a − ym − yf ))

s.t.

g1(X, ωa, ωb) : n(WIN) − n(WBG ∩ WIN) ≤ 0

where,

X = [xm, xf , ym, yf ]

(7)

TABLE III: Neural network settings

Parameter

Input Size
Output Size
Nodes per Layer
Hidden Layers
Invertible Blocks
Type
Activation Func.
Learning Rate
Optimizer

INN

100
4
10

4
4

DNN

150
7
-

Fully Connected
Leaky ReLU
10−4
ADAM

Here, a = 20 mm is the side length of the unitcell as shown
in Fig. 4 and tm, tf and tr are the thickness of the matrix,
ﬁller and resonator respectively, the values of which are given
in Table IV. Here, WIN and WBG are the sets containing all
the integer frequency values between ωa and ωb (the start and
end points of the desired bandgap) and between ω1 and ω2
(ω1, ω2 ∈ ΩBG) respectively. And n is the set cardinality
operator.

C. INN and DNN Modeling

We train both an INN and a DNN to map the four design
parameters of the unitcell (as shown in Fig. 4) to the start and
end frequencies of the bandgap (i.e., ω1 and ω2), as shown
in Eq. (10)). Note that for the INN the outputs are repeated
in order to satisfy the requirement that the input and output
layers of the INN have equal number of nodes. The DNN is
ﬁrst used to benchmark the forward prediction accuracy of the
INN, which is known to slightly compromise on expressability
otherwise achievable with a DNN that is not restricted to
provide a computable inverse. For designs which do not show a
bandgap in the frequency range under consideration, arbitrary
frequency values greater than 2000 Hz (which is the upper

bound of frequency range of interest) were assigned. Table III
contains the implementation parameters of both the DNN and
the INN. The DNN is later also used as a surrogate model in
the constrained forward optimization process to explore how
it might further speed up that process.

IV. RESULTS

We tested our framework by comparing the modeling per-
formance of the INN to a traditional DNN, and later comparing
the results of the optimizations initialized with INN-retrieved
design to that of randomly initialized optimizations. In both
cases, two sets of optimizations are performed, one using
the high ﬁdelity Bloch dispersion analysis (BDA) model and
the other using the DNN as a surrogate model to predict
the bandgaps of candidate designs. The following subsections
presents and discusses the results that we obtained.

A. Modeling performance of the INN

We train an INN and a DNN on normalized samples to
predict the bandgaps given by the unitcell design. A training
set of 1800 samples generated by the dispersion analysis are
used. To compare the modeling accuracy of the two models,
their forward prediction performance over a set of 200 unseen
test samples is compared. We also estimate the prediction
performance of the INN in the inverse direction over these
test samples. The root mean squared error (RMSE) is used
to analyze performance, which for a given sample can be
expressed as:

TABLE IV: Structural parameters

Property

Matrix

Filler

Elastic Modulus:
Poisson’s Ratio :
Density (ρ):
Thickness (t):

68.9 GPa
0.33
2700 Kg/m3
2 mm

14.0 GPa
0.43
1565 Kg/m3
2 mm

Resonator

106 GPa
0.32
8500 Kg/m3
3 mm

Fig. 4: Design variables

Forward : MSEFwd(Xi) =

1
4

4
(cid:88)

j=1

( ˆωij − ωij)2

(8)

Inverse:

MSEInv(Yi) =

1
4

4
(cid:88)

j=1

(cid:16) ˆXij − Xij

(cid:17)2

(9)

where Xi is the ith sample in the test dataset and ˆωij and ωij
are respectively the forward predictions and the ground truth
of the ith sample, all data being pre-normalized in this case.
Here, ω1 = ω3 and ω2 = ω4. ˆXij is the inverse prediction
of the INN. Figure 5 gives boxplots of the distribution of
the testing RMSE per sample. From the ﬁgure, it can be
seen that the while as expected the DNN is more accurate
in forward predictions, the accuracy of INNs at around 5%
median RMSE is quite favorable. The accuracy of the INN
in inverse prediction is slightly lower, at a median RMSE
the
of around 12%. In the data obtained from the BDA,
samples which do not show a bandgap between 0-2000 Hz
were assigned arbitrary values albeit in a speciﬁc range, these
data points act as outliers in the data and can lead to increased
modeling errors. Such outliers can also affect the modeling
performance of the INN more than a traditional DNN as
it is highly likely that their presence has a more noticeable
impact on the invertibility of the mapping itself. Even though
we tried to minimize the presence of such outliers by using
Mean Absolute Loss (or L1 Loss) for training instead of the
more popular Mean Squared Error (or L2 Loss), it cannot be
completely eliminated.

f :







xm
ym
xf
yf







→







ω1
ω2
ω1
ω2







(10)

B. Optimization Results

We perform two different case studies, corresponding to two
different user-desired bandgaps: 1) bandgap at 1000–1700 Hz,
and 2) bandgap at 800–1050 Hz. The results of the ﬁrst case
study are shown here, with the latter shown in A. For the given
user-deﬁned bandgaps, we use the INN executed in reverse

Fig. 5: Normalized RMSE over 200 unseen test samples

to retrieve the design that most closely satisﬁes this bandgap
property. This INN-retrieved design is then used as the initial
design in the constrained forward optimization (solving Eq.
7) to ﬁnd a better inverse design with minimum mass while
still satisfying the bandgap property desired by the user. We
also run 10 optimizations with randomly generated initial
designs. The results of our optimizations (with the constraints
estimated by the high-ﬁdelity dispersion analysis) are listed
in Table V, which compares the median scenario among the
randomly initialized optimizations with the corresponding INN
initialized optimizations. The two scenarios are such chosen
so as to represent a larger bandgap in a region where existence
of bandgap is more likely (in the ﬁrst case), and in the second
case looking for the bandgap that is small but in a region
where it’s physically difﬁcult to impose one. From Table V it
can be seen that the INN initialized optimizations perform
better than the median randomly initialized optimizations,
which is attributed to the INN’s ability to ﬁnd a feasible
or closer to feasible inverse solution to start with, thereby
likely decreasing the computational cost of optimization or
improving the optimization performance. This observation
is further corroborated by the convergence histories of the
optimization shown in Fig. 6. In this ﬁgure, the outcomes
of the outcomes of the surrogate based optimization (using

INN ForwardDNN ForwardINN Inverse0.000.050.100.150.200.250.300.35RMSE (Normalized)(a)

(c)

(b)

(d)

Fig. 6: Convergence history of SQP optimizations for the 1000-1700 Hz bandgap constraint: a) Constraint violation history with
DNN; b) Constraint violation history with Dispersion Analysis (BDA); c) Objective function history with DNN; d) Objective
function (Mass) history with BDA

TABLE V: Optimization results for inverse design of the 2D LREM structure given Bandgap query

Bandgap Query
ω1 to ω2 Hz

Optimization
Initialization*

# Trials

Constraint Violation
(Veriﬁed with BDA)

Mass (g)

1000-1700 Hz

800-1050 Hz

Random, Median run (High
Fidelity)
INN (High Fidelity)
Random, Median run
(DNN based)
INN (DNN based)

Random, Median run (High
Fidelity)
INN (High Fidelity)
Random, Median run
(DNN based)
INN (DNN based)

10

1
10

1

10

1
10

1

78

0
151

30

446

435
292

194

5.58

5.34
4.72

5.60

6.02

5.60
5.79

5.66

*Random, best: The best results (in terms of feasibility, then mass) out of the 10 optimization runs that use random initialization

0501001502000.0100.0200.0300.0400.0500.0600.0Random InitializationInverse Design InitializationFunction EvaluationsNet Constraint Violation0501001502000.0100.0200.0300.0400.0500.0600.0Random InitializationInverse Design InitializationFunction EvaluationsNet Constraint Violation0501001502004.04.55.05.56.06.57.07.58.08.5Random InitializationInverse Design InitializationFunction EvaluationsMass (g)0501001502004.04.55.05.56.06.57.07.58.08.5Random InitializationInverse Design InitializationFunction EvaluationsMass (g)validate acceptable levels of accuracy for further usage. Here,
both the NN models predict the bandgap bounds given the
geometry of the unit cell, deﬁned in terms of the width
of the outer matrix and middle soft ﬁller layers. We then
used the INN to generate an initial design corresponding to
user speciﬁed bandgap, resulting it a close-to-feasible inverse
design, which is used to initialize the forward constrained op-
timization for ﬁnding better inverse designs that also minimize
mass. This approach was observed to in general provide better
designs in terms of satisfying the speciﬁed bandgap constraints
and mass, compared to randomly initialized optimizations.
Finally, the optimization results were veriﬁed by performing a
ﬁnite element harmonic analysis on the entire ﬁnite structure
containing 64 unit cells and analyzing it’s transmissibility ratio
w.r.t the excitation frequency. The FEA results show that the
ﬁnite structure has enough number of unitcells to achieve the
bandgap behaviour predicted by the dispersion analysis.

A fundamental issue with modeling bandgaps is the non-
existence of one (in a given global frequency range) in many
training samples, which was dealt with in a simpliﬁed manner
by assigning out-of-range bandgap bounds; such an approach
can however be detrimental to the overall accuracy of the INN,
and better ways of dealing with issue is an immediate direction
of future work. There’s also the issue of feasible solutions not
existing for any randomly speciﬁed user-requested bandgap,
in which case the INN becomes forced to predict a design
for a bandgap that may not be physically meaningful within
the given material and geometric settings. Future work could
therefore also look at approaches to ﬁlter out or prohibit such
requests, by learning from the initial
the
likelihood of bandgaps existing within the current range of
design parameters. Lastly, while the current framework has
been applied to design unit cells, its applicability to design
functional systems comprising 2D metamaterials remains to
be explored, in order to fully demonstrate the potentials of
fast on-demand retrieval of inverse designs.

training data-set

REFERENCES

[1] L. Fok, M. Ambati, and X. Zhang, “Acoustic metamaterials,” MRS

bulletin, vol. 33, no. 10, pp. 931–934, 2008.

[2] H. Al Ba’ba’a, M. Nouh, and T. Singh, “Formation of local resonance
band gaps in ﬁnite acoustic metamaterials: A closed-form transfer
function model,” Journal of Sound and Vibration, vol. 410, pp. 429–
446, 2017.

[3] D. Chronopoulos, I. Antoniadis, and T. Ampatzidis, “Enhanced acous-
tic insulation properties of composite metamaterials having embedded
negative stiffness inclusions,” Extreme Mechanics Letters, vol. 12, pp.
48–54, 2017.

[4] N. Sui, X. Yan, T.-Y. Huang, J. Xu, F.-G. Yuan, and Y. Jing, “A
lightweight yet sound-proof honeycomb acoustic metamaterial,” Applied
Physics Letters, vol. 106, no. 17, p. 171905, 2015.

[5] A. E. Mamaghani, S. Khadem, and S. Bab, “Vibration control of a
pipe conveying ﬂuid under external periodic excitation using a nonlinear
energy sink,” Nonlinear Dynamics, vol. 86, no. 3, pp. 1761–1795, 2016.
[6] N. Liu, H. Guo, L. Fu, S. Kaiser, H. Schweizer, and H. Giessen, “Three-
dimensional photonic metamaterials at optical frequencies,” Nature
materials, vol. 7, no. 1, pp. 31–37, 2008.

[7] J. K. Gansel, M. Thiel, M. S. Rill, M. Decker, K. Bade, V. Saile,
G. von Freymann, S. Linden, and M. Wegener, “Gold helix photonic
metamaterial as broadband circular polarizer,” Science, vol. 325, no.
5947, pp. 1513–1515, 2009.

Fig. 7: Transmissibility Ratio of optimized design given by
INN-initialized DNN-based SQP – 1000-1700 Hz case

DNN) are shown on the left and the high-ﬁdelity optimization
(using BDA) are shown on the right. The top plots show the
variation of net constraint violation (violation of the speciﬁed
bandgap) with function evaluations, and the bottom plots show
the corresponding history of the objective function (i.e., mass).
As seen from Figs. 6a and 6, given the speciﬁed bandgap,
the INN is able to retrieve an initial design that in general
has a smaller violation of the bandgap constraint compared to
random initializations, giving it a greater likelihood of ﬁnding
closer-to-feasible design with optimization that use the same
number of maximum function evaluations as the randomly
initialized runs.

When using INN for inverse retrieval and then performing
forward optimization with DNN, the total computing time is
measured to be in the order of 10 minutes, running on a 6
core Intel i7-9750H and a Nvidia RTX 2060 (with the DNN
running on the GPU). Such levels of computational efﬁciency
clearly points to the ability of the framework (post training of
the ML models) to serve in the role of an on-demand inverse
design process.

Figure 7 shows the transmissibility ratio of the ﬁnite struc-
ture comprising 8 × 8 unit cells of the optimum design given
by the INN intialized optimizations performed using DNN.
From this ﬁgure it is apparent that the actual behaviour of
the ﬁnite structure is very close to the behaviour predicted by
the INN. Furthermore, Fig. 8 shows a representative example
of the displacement plots within and out of the bandgap,
clearly demonstrating that for a representative excitation at a
frequency within the bandgap is readily damped by only a few
layers of unit cells, while excitations at a frequency outside
the desired bandgap continue to persist in the system.

V. CONCLUSION

In this paper we develop an inverse design framework
to provide on-demand design of 2D LREM structures. The
framework involved generating an initial set of samples using
“Bloch Dispersion Analysis” and then ﬁltering the frequency
points obtained in order to get the bandgaps. Then, an Invert-
ible Neural Network or INN and a traditional Deep Neural
Network were trained on the same set of samples and their
modeling performance was compared on unseen samples to

05001000150020001e−161e−141e−121e−101e−81e−61e−40.01Top RightBottom RightInternalFrequency (Hz)Transmissibility RatioBandgap Query(a)

(b)

Fig. 8: FEA based veriﬁcation: Representative example of displacement plots showing vibration transmission a) Within Bandgap:
1020 Hz; b) Outside Bandgap: 1120 Hz

[8] T. Chen, S. Li, and H. Sun, “Metamaterials application in sensing,”

Sensors, vol. 12, no. 3, pp. 2742–2765, 2012.

[9] H. A. Ba’ba’a and M. Nouh, “Emergence of pseudo-phononic gaps in
periodically architected pendulums,” arXiv preprint arXiv:1904.01396,
2019.

[10] M. Nouh et al., “Control of spatial wave proﬁles in ﬁnite lattices of
repelling magnets,” Journal of Dynamic Systems, Measurement, and
Control, vol. 141, no. 11, 2019.

[11] M. Nouh, O. Aldraihem, and A. Baz, “Wave propagation in metamaterial
plates with periodic local resonances,” Journal of Sound and Vibration,
vol. 341, pp. 53–73, 2015.

[12] Y. Ge and K. Esselle, “Ga/fdtd technique for the design and optimisation
of periodic metamaterials,” IET microwaves, antennas & propagation,
vol. 1, no. 1, pp. 158–164, 2007.

[13] M. Nouh, O. Aldraihem, and A. Baz, “Vibration characteristics of meta-
material beams with periodic local resonances,” Journal of Vibration and
Acoustics, vol. 136, no. 6, 2014.

[14] J. K. Wilt, C. Yang, and G. X. Gu, “Accelerating auxetic metamaterial
design with deep learning,” Advanced Engineering Materials, vol. 22,
no. 5, p. 1901266, 2020.

[15] K. Suzuki, Artiﬁcial neural networks: Architectures and applications.

BoD–Books on Demand, 2013.

[16] I. J. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley,
S. Ozair, A. Courville, and Y. Bengio, “Generative adversarial networks,”
arXiv preprint arXiv:1406.2661, 2014.

[17] R. B. Gramacy, Surrogates: Gaussian process modeling, design, and
optimization for the applied sciences. Chapman and Hall/CRC, 2020.
[18] L. Ardizzone, J. Kruse, S. Wirkert, D. Rahner, E. W. Pellegrini,
R. S. Klessen, L. Maier-Hein, C. Rother, and U. K¨othe, “Analyz-
ing inverse problems with invertible neural networks,” arXiv preprint
arXiv:1808.04730, 2018.

[19] A. Behjat, M. Oddiraju, M. A. Attarzadeh, M. Nouh, and S. Chowdhury,
“Metamodel based forward and inverse design for passive vibration sup-
pression,” in International Design Engineering Technical Conferences
and Computers and Information in Engineering Conference, vol. 84010.
American Society of Mechanical Engineers, 2020, p. V11BT11A024.

[20] L. Y. L. Ang, Y. K. Koh, and H. P. Lee, “Broadband sound transmission
loss of a large-scale membrane-type acoustic metamaterial for low-
frequency noise control,” Applied Physics Letters, vol. 111, no. 4, p.
041903, 2017.

[21] N. Gao, H. Hou, and J. H. Wu, “A composite and deformable honeycomb
acoustic metamaterial,” International Journal of Modern Physics B,
vol. 32, no. 20, p. 1850204, 2018.

[22] J. Jung, H.-G. Kim, S. Goo, K.-J. Chang, and S. Wang, “Realisation
of a locally resonant metamaterial on the automobile panel structure to
reduce noise radiation,” Mechanical Systems and Signal Processing, vol.
122, pp. 206–231, 2019.

[23] O. R. Bilal, A. Foehr, and C. Daraio, “Bistable metamaterial for

switching and cascading elastic vibrations,” Proceedings of the National
Academy of Sciences, vol. 114, no. 18, pp. 4603–4606, 2017.

[24] R. Lakes and R. S. Lakes, Viscoelastic materials. Cambridge university

press, 2009.

[25] R. Bostanabad, Y.-C. Chan, L. Wang, P. Zhu, and W. Chen, “Globally
approximate gaussian processes for big data with application to data-
driven metamaterials design,” Journal of Mechanical Design, vol. 141,
no. 11, 2019.

[26] J. Matthews, T. Klatt, C. Morris, C. C. Seepersad, M. Haberman, and
D. Shahan, “Hierarchical design of negative stiffness metamaterials
using a bayesian network classiﬁer,” Journal of Mechanical Design, vol.
138, no. 4, 2016.

[27] C. Morris, L. Bekker, M. R. Haberman, and C. C. Seepersad, “Design
exploration of reliably manufacturable materials and structures with
applications to negative stiffness metamaterials and microstereolithog-
raphy,” Journal of Mechanical Design, vol. 140, no. 11, 2018.

[28] W. Ma, F. Cheng, Y. Xu, Q. Wen, and Y. Liu, “Probabilistic representa-
tion and inverse design of metamaterials based on a deep generative
model with semi-supervised learning strategy,” Advanced Materials,
vol. 31, no. 35, p. 1901111, 2019.

[29] Z. Liu, D. Zhu, S. P. Rodrigues, K.-T. Lee, and W. Cai, “Generative
model for the inverse design of metasurfaces,” Nano letters, vol. 18,
no. 10, pp. 6570–6576, 2018.

[30] Y. Chen, J. Zhu, Y. Xie, N. Feng, and Q. H. Liu, “Smart inverse design of
graphene-based photonic metamaterials by an adaptive artiﬁcial neural
network,” Nanoscale, vol. 11, no. 19, pp. 9749–9755, 2019.

[31] C. Hakoda, J. Rose, P. Shokouhi, and C. Lissenden, “Using ﬂoquet
periodicity to easily calculate dispersion curves and wave structures of
homogeneous waveguides,” in AIP Conference Proceedings, vol. 1949,
no. 1. AIP Publishing LLC, 2018, p. 020016.

[32] R. Craster, T. Antonakakis, M. Makwana, and S. Guenneau, “Dangers
of using the edges of the brillouin zone,” Physical Review B, vol. 86,
no. 11, p. 115130, 2012.

[33] M. T. McCann, K. H. Jin, and M. Unser, “Convolutional neural networks
for inverse problems in imaging: A review,” IEEE Signal Processing
Magazine, vol. 34, no. 6, pp. 85–95, 2017.

[34] C. T. Kelley, Iterative methods for optimization. SIAM, 1999.

APPENDIX

Figure 12 shows the architecture of the INN. The structure,
which is shown in Fig. 12 top, constitutes one INN block. The
block is a deep network formed by a series of such blocks
with permutation layers in between to shufﬂe the input to the
next block pseudo-randomly. In the above architecture, it is
assumed that the inputs and outputs of the model are of the
same size. If they are not of the same size, then:

Fig. 9: Transmissibility Ratio of the result of DNN based SQP
Optimization with 800-1050 Hz Constraint INN Initialization

(a)

(b)

(a)

(b)

Fig. 11: Convergence history of SQP optimizations with 800-
1050 Hz bandgap constraint a) Objective Function(Mass)
history using DNN as Surrogate; b) Objective Function(Mass)
using High Fidelity Dispersion Analysis

Latent variables are used in the INN to compensate for the
information loss associated with dimension reduction. They
are especially useful in scenarios where multiple inputs map
to a single output, i.e., in cases where the inverse problem
is ill-posed. When running the network in reverse, the input
variables’ distribution for the given output can be obtained by
varying the latent variables with the same set of outputs. The
Invertible Neural Networks uses the relationship between these
latent variables and the actual parameters in order to capture
the input distribution for a given output

Fig. 10: Convergence history of SQP optimizations with
800-1050 Hz bandgap constraint a) Constraint history using
DNN as surrogate; b) Constraint history using High Fidelity
Dispersion Analysis

1) If the size of outputs >size of inputs, another set of
variables referred to as the Latent variables are deﬁned,
the size of which is equal to the difference of the input
and output sizes.

2) If the size of inputs <size of outputs, the inputs are

padded with zeros.

05001000150020001e−161e−141e−121e−101e−81e−61e−40.01Top RightBottom RightInternalFrequency (Hz)Transmissibility RatioBandgap Query050100150200200.0300.0400.0500.0600.0700.0800.0900.01000.0Random InitializationInverse Design InitializationFunction EvaluationsNet Constraint Violation050100150200200.0300.0400.0500.0600.0700.0800.0900.01000.0Random InitializationInverse Design InitializationFunction EvaluationsNet Constraint Violation0501001502003.03.54.04.55.05.56.06.57.07.5Random InitializationInverse Design InitializationFunction EvaluationsMass (g)0501001502003.03.54.04.55.05.56.06.57.07.5Random InitializationInverse Design InitializationFunction EvaluationsMass (g)(a)

(b)

Fig. 12: Invertible Neural Network (INN) architecture: a) Invertible blocks; b) Permutation block; c) Entire INN

(c)

ForwardPassInversePassu1v1v2u2++InputOutputu1v1v2u2-//-OutputInputPermutation  LayerInputPermuted OutputInputOutputInvertibleBlockPermutation  Layer InvertibleBlockPermutation  Layer InvertibleBlockInvertible NetworkForward Pass Inverse Pass