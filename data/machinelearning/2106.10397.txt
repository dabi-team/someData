1
2
0
2

n
u
J

9
1

]
n
y
d
-
u
l
f
.
s
c
i
s
y
h
p
[

1
v
7
9
3
0
1
.
6
0
1
2
:
v
i
X
r
a

Multiphase turbulence modeling using sparse regression
and gene expression programming

Sarah Beethama, Jesse Capecelatroa,b

aUniversity of Michigan, Department of Mechanical Engineering
bUniversity of Michigan, Department of Aerospace Engineering

Abstract

In recent years, there has been an explosion of machine learning techniques
for turbulence closure modeling, though many rely on augmenting existing
models. While this has proven successful in single-phase ﬂows, it breaks
down for multiphase ﬂows, particularly when the system dynamics are con-
trolled by two-way coupling between the phases. In this work, we propose
an approach that blends sparse regression and gene expression programming
(GEP) to generate closed-form algebraic models from simulation data. Sparse
regression is used to determine a minimum set of functional groups required
to capture the physics and GEP is used to automate the formulation of
the coeﬃcients and dependencies on operating conditions. The framework
is demonstrated on a canonical gas–solid ﬂow in which two-way coupling
generates and sustains ﬂuid-phase turbulence.

Keywords: Turbulence modeling, particle-laden ﬂow, sparse regression,
gene expression programming

1. Introduction

In the last decade, data-driven approaches have become the predominant
tool for developing turbulence models (Duraisamy et al., 2019). Of these
approaches, Neural Networks (NNs) have gained a considerable amount of
traction (Tracey et al., 2015; Milano and Koumoutsakos, 2002; Lu, 2010; Ra-
jabi and Kavianpour, 2012; Duraisamy and Durbin, 2014; Duraisamy et al.,
2015; Ma et al., 2016; Ling et al., 2016; Bode et al., 2019; Liu and Fang, 2019).
In contrast, a relative minority of approaches have elected to pursue strate-
gies that enable a compact, algebraic closure. Formulating models in this way

Preprint submitted to Acta Mechanica Sinica

June 22, 2021

 
 
 
 
 
 
has several important properties including increased interpretability, ease of
dissemination and straightforward integration into existing solvers. These
techniques generally fall into two categories, (1) symbolic regression and (2)
gene expression programming.

In the case of sparse regression, Brunton et al. (2016) developed a strat-
egy based on sparse regression that identiﬁes the underlying functional form
of the nonlinear physics by optimizing a coeﬃcient matrix that acts upon a
matrix of trial functions. This construct has the important beneﬁt of includ-
ing the user in the modeling process through selection of the trial functions.
Schmelzer et al. (2020); Beetham and Capecelatro (2020) recently extended
the sparse identiﬁcation framework of Brunton et al. (2016) to infer alge-
braic stress models for the closure of the Reynolds-averaged Navier–Stokes
(RANS) equations. In Schmelzer et al. (2020), the models are written as ten-
sor polynomials and built from a library of candidate functions. In Beetham
and Capecelatro (2020), Galilean invariance of the resulting models are guar-
anteed through thoughtful tailoring of the feature space.

Gene expression programming (GEP), a data-driven technique inspired
by the Darwinian concept of survival-of-the-ﬁttest, heuristically evolves sym-
bolic models until error is reduced beyond a threshold. In recent years, this
strategy has gained attention in the turbulence modeling. For example, GEP
has demonstrated success in the contexts of modeling large eddy simulation
(LES) subgrid scale closures (Reissmann et al., 2021), boundary layer the-
ory (Dominique et al., 2021), turbulent pipe ﬂow (Samadianfard, 2012) and
informing RANS closures (Weatheritt and Sandberg, 2016; Zhao et al., 2020).
While these data-driven techniques have been increasingly utilized for
modeling single-phase turbulence, their application to multiphase turbulence
modeling is still relatively uncharted. Despite this, multiphase ﬂows present
a rich and diverse class of problems for which machine learning can prove
useful. Due to the large parameter space frequently attributed to such ﬂows,
traditional modeling techniques have historically failed, especially beyond
dilute regimes, where models extended from single-phase turbulence break
down (see, e.g., Fox, 2014, and discussion therein). This divergence from
single-phase turbulence theory can be attributed to the fact that at mod-
erate volume fractions, particles generate turbulent kinetic energy (TKE)
at the smallest scales. This is the direct antithesis to the classical notion
of the turbulent energy cascade. Additionally, numerous practical applica-
tions span regimes from dilute to dense particle loadings, motivating the
need for models that are accurate across regimes. This motivates the need

2

for methodologies capable of formulating closures ‘from scratch,’ rather than
augmenting existing models. These challenges, along with the societal im-
portance and pervasiveness of these ﬂows, make them excellent candidates
for improvements in data-driven modeling techniques.

In this work, we propose a blending modeling approach which combines
the strengths of both sparse regression and GEP to inform multiphase turbu-
lence closures in a way that leverages the physical knowledge of the modeler
and automates the determination of model components for which physical
insight is not obvious or does not exist. To demonstrate the utility of such
an approach, we present a simple conﬁguration in which strong two-way cou-
pling between ﬂuid and particles generates and sustains turbulence. This
conﬁguration has been discussed extensively in prior work (see, e.g., Capece-
latro et al., 2014, 2015; Beetham and Capecelatro, 2020, for more exhaustive
details) and serves as a case study here.

2. Methodology

It is well established (Pope, 2000) that any tensor quantity, Dij, can be

exactly described by an inﬁnite sum given as

Dij =

∞
(cid:88)

n=1

β(n)T (n)

ij

,

(1)

ij

where β(n) represents the n-th coeﬃcient associated with a corresponding
basis tensor, T (n)
. The coeﬃcients may range in complexity from constants to
nonlinear functions of the principal invariants of the tensor bases. For many
conﬁgurations, this inﬁnite sum can reduced to a ﬁnite sum by leveraging the
Cayley–Hamilton theorem. This results in a reduced set of tensors termed a
minimal invariant basis (e.g., Spencer and Rivlin, 1958). Using knowledge of
the system physics, a minimal invariant basis can be derived. Once this basis
is established, modeling can be broken into two tasks: (1) Which of the basis
tensors are most important for capturing the physics at play? and (2) How
do the coeﬃcients depend on principal invariants or system parameters?

Sparse regression has been shown to be successful at addressing the ﬁrst
task (Beetham and Capecelatro, 2020; Beetham et al., 2021) and works well
for the second task when constant coeﬃcients are suﬃcient. However, when
the system has a complex and large parameter space, as is the case for multi-
phase turbulence, constant coeﬃcients are no longer suﬃcient for capturing

3

physics across scales. In this situation, sparse regression is not an eﬃcient
method for determining the form of the coeﬃcients and requires the mod-
eler to supply all potential test functions to the algorithm manually. While
this has important beneﬁts for embedding physics-based reasoning and prop-
erties into the resultant model (e.g., form invariance), it implies a tedious,
‘guess-and-check’ exercise if physics-based arguments can no longer be used
to supply test functions. In the present method, we propose to oﬄoad this
work to a gene expression algorithm when naivity in functional form is un-
avoidable. This eﬀectively automates the process of evaluating trial functions
for the coeﬃcients, while preserving the beneﬁts of using sparse regression
to inform the tensorial building blocks of the model.

Figure 1: The modeling methodology has three steps: (1) Sparse regression identiﬁes the
important basis tensors, (2) OLS squares provides the ideal coeﬃcients for each of the
data sets for each of the identiﬁed bases and (3) GEP collapses the ideal coeﬃcients for
each case into a compact, algebraic closure.

The method can be summarized by three distinct modeling steps, as
shown in Fig. 1, and outlined here for data spanning s unique conditions
in the parameter space (in the context of multiphase, turbulent ﬂows, these
parameters might include solids volume fraction, Reynolds number, etc.):

4

Data to be modeledKnowledge of physicsinforms the tensor basisOrdindary Least Squares𝕋ij=|||||T(1)ijT(2)ijT(3)ijT(4)ijT(5)ij|||||̂β(2)1̂β(2)2̂β(2)3=minβD1D2D3−|T(2)ij|β(2)1β(2)2β(2)322provides the ideal constant coeﬃcient for each dataset and each basis.̂β(5)1̂β(5)2̂β(5)3=minβD1D2D3−|T(5)ij|β(5)1β(5)2β(5)322𝔻ij=D1D2D3Sparse Regression𝔻=|||||T(1)ijT(2)ijT(3)ijT(4)ijT(5)ij|||||0̂β200̂β5̂β=||𝔻−𝕋β||22+λ||β||1selects important basesParameters for each dataset ℙ=P(1)1P(2)1P(3)1⋯P(1)2P(2)2P(3)2⋯P(1)3P(2)3P(3)3⋯Gene Expression Programmingcollapses  and  into algebraic functions of .̂β(2)îβ(5)iℙCompact, algebraic closure𝔻=f2(ℙ)T(2)+f5(ℙ)T(5)1231. Use sparse regression to identify the basis tensors required to describe

physics by optimizing

ˆβ = min

β

||D − Tβ||2

2 + λ||β||1

(2)

and assuming constant coeﬃcients. Each base associated with a nonzero
coeﬃcient in ˆβ is deemed to be ‘essential’ and is retained in the ﬁnal
model. The surviving bases are then condensed into a subset of T,
denoted T ⊂.

2. For each of the s conditions, compute the ideal constant coeﬃcients
associated with the p essential bases, using Ordinary Least Squares
(OLS):

ˆβ⊂
s = min
ˆβ⊂
s

||Ds − T ⊂

s β⊂

s ||2
2,

(3)

where ˆβ⊂
s is of size p × 1, Ds is size q × 1, where q is the amount of data
in the dataset (e.g. the number of time steps) and T ⊂
is size q × p.
s
Note that both T ⊂ and D require tensorial data to be reorganized as
vertical vectors (see Beetham and Capecelatro, 2020, for details). After
this process has been done for all s conditions, concatenate each of the
ˆβ⊂
s vectors into a matrix of size p × s.

3. Finally, provide each p-th row of ˆβ⊂ and matrix of parameters, P, asso-
ciated with the s conditions as input to the GEP algorithm. The result-
ing functional model for ˆβ⊂ eﬀectively collapses the vector of discrete
values for ˆβ⊂ to a continuous, closed form with algebraic dependence
on system parameters.

This modeling ﬂow is illustrated in Fig. 1, where s = 3 and p = 2 for

demonstration purposes.

3. Case study description

Multiphase ﬂows span large parameter spaces, making modeling challeng-
ing. Thus, we use a simple gas–solid ﬂow in which two-way coupling between
the phases drives the underlying turbulence as a case study to evaluate the ef-
fectiveness of the proposed modeling framework. In this conﬁgurations, rigid
spherical particles are suspended in an unbounded (triply periodic) domain
containing an initially quiescent gas. As particles settle under the inﬂuence

5

of gravity, they spontaneously form clusters. Due to momentum exchange
between phases, particles entrain the ﬂuid, generating turbulence therein. A
frame of reference with the ﬂuid phase is considered, such that the mean
streamwise ﬂuid velocity is null. Key non-dimensional numbers that char-
acterize the system include the Reynolds number, the Archimedes number,
deﬁned as

Ar = (ρp/ρf − 1)d3

pg/ν2
f .

(4)

Alternatively, a Froude number can be introduced to characterize the balance
between gravitational and inertial forces, deﬁned as Fr = τ 2
p g/dp, where
τp = ρpd2

p/(18ρf νf ) is the particle response time.

The mean particle-phase volume fraction is varied from 0.001 ≤ (cid:104)εp(cid:105) ≤
0.05 and gravity is varied from 0.8 ≤ g ≤ 8.0. Here, angled brackets denote
an average in all three spatial dimensions and time. Due to the large den-
sity ratios under consideration, the mean mass loading, ϕ = (cid:104)εp(cid:105)ρp/ ((cid:104)εf (cid:105)ρf ),
ranges from O(10)–O(102), and consequently two-way coupling between the
phases is important. A large enough domain with a suﬃciently large num-
ber of particles is needed to observe clustering. To enable simulations on this
scale, we use an Eulerian–Lagrangian approach (Capecelatro and Desjardins,
2013). Fluid equations are solved on a staggered grid with second-order spa-
tial accuracy and advanced in time with second-order accuracy using the
semi-implicit Crank–Nicolson scheme. Particles are tracked individually in a
Lagrangian frame of reference and integrated using a second-order Runge–
Kutta method. Particle data is projected to the Eulerian mesh using a Gaus-
sian ﬁlter described in Capecelatro and Desjardins (2013).

Derivation of the single-phase RANS equations is done by directly av-
eraging the Navier–Stokes equations. Derivation of the multiphase RANS
equations, however, will retain additional physics if averaging is performed
on the volume-ﬁltered Navier-Stokes equations Fox (2014). Volume fraction
weighted averages, or phase averaging (PA), analogous to Favre averaging
of variable density ﬂows, has previously been derived (Capecelatro et al.,
2015). For the relatively simple conﬁguration used here, which is homoge-
neous in all spatial directions, statistically stationary in time and symmetric
in the counter-gravity direction, the transport equations for the ﬂuid-phase
Reynolds stresses can be reduced to two unique, non-zero components. In

6

the streamwise direction this equation is given as

1
2

∂(cid:104)u(cid:48)(cid:48)(cid:48)2
f (cid:105)f
∂t

=

(cid:28)

(cid:29)

pf

∂u(cid:48)(cid:48)(cid:48)
f
∂x

1
ρf
(cid:124)
(cid:125)
(cid:123)(cid:122)
pressure strain (PS)

−

1
ρf
(cid:124)

(cid:28)

σf,1i

(cid:29)

∂u(cid:48)(cid:48)(cid:48)
f
∂xi

(cid:123)(cid:122)
viscous dissipation (VD)

(cid:125)

+

ϕ
τ (cid:63)
p
(cid:124)

(cid:104)u(cid:48)(cid:48)(cid:48)

f (cid:105)p(cid:104)up(cid:105)p

+

ϕ
τ (cid:63)
p
(cid:124)

ϕ
ρp
(cid:124)

(cid:28)

u(cid:48)(cid:48)(cid:48)
f

∂p(cid:48)
f
∂x

(cid:29)

−

p
(cid:125)

(cid:123)(cid:122)
drag production (DP)

(cid:125)

(cid:123)(cid:122)
pressure exchange (PE)

f (cid:105)p

(cid:0)(cid:104)u(cid:48)(cid:48)(cid:48)

f u(cid:48)(cid:48)

p(cid:105)p − (cid:104)u(cid:48)(cid:48)(cid:48)2
(cid:123)(cid:122)
drag exchange (DE)
(cid:28)
∂σ(cid:48)
f,1i
∂xi

ϕ
ρp
p
(cid:124)
(cid:125)
(cid:123)(cid:122)
viscous exchange (VE)

u(cid:48)(cid:48)(cid:48)
f

(cid:29)

,

+

(cid:1)

(cid:125)

(5)

Where up is the particle-phase velocity in an Eulerian frame of reference.
Here, (cid:104)(·)(cid:105)p = (cid:104)εp(·)(cid:105)/(cid:104)εp(cid:105). Fluctuations about PA terms are denoted with
a double prime. In a similar fashion, the PA operator in the ﬂuid phase is
deﬁned as (cid:104)(·)(cid:105)f = (cid:104)εf (·)(cid:105)/(cid:104)εf (cid:105). Fluctuations about the PA ﬂuid velocity are
given by u(cid:48)(cid:48)(cid:48)
f = uf (x, t) − (cid:104)uf (cid:105)f . With this, the ﬂuid-phase TKE is given by
kf = (cid:104)u(cid:48)(cid:48)(cid:48)

f · u(cid:48)(cid:48)(cid:48)

f (cid:105)f /2.

It is notable that all the terms appearing on the right hand side of (5)
are unclosed and require modeling. This work has already been carried out
using sparse regression exclusively (Beetham et al., 2021). Here, we select the
drag production term to demonstrate the present methodology. This term is
chosen due to its importance in this class of ﬂows. In the absence of mean
shear, it is the only source of ﬂuid-phase TKE. Additionally, all components
of the drag production tensor are identically zero, except for the contribution
in the gravity aligned direction. This condition often presents challenges for
modeling.

4. Results and discussion

We now demonstrate the modeling methodology presented in Sec. 2 on the
multiphase case study summarized in Sec. 3, focusing on the drag production
term, RDP, in particular. Here, we follow the three modeling steps as outlined
previously.

In the ﬁrst step, we conduct modeling of drag production using sparse
regression with embedded invariance and the assumption of constant coef-
ﬁcients to inform the bases that comprise the reduced set, T ⊂. The model
consisting of the reduced basis tensors is given as

RDP = β1I + β2

ˆUr,

(6)

7

where ˆUr is a tensor formulated using the mean slip velocity between the
phase, I is the identity tensor and the coeﬃcients, β1 and β2, have functional
dependency upon conﬁguration parameters that are unknown and cannot be
informed by physics-based reasoning.

Next, we evaluate the ideal constant coeﬃcients for each unique conﬁgu-
ration studied, by conducting OLS and allowing the coeﬃcients, β1 and β2
to take on unique values for each conﬁguration. In other words, the values
of β1 and β2 associated with the case for (cid:104)εp(cid:105) = 0.001 and g = 0.8 need not
be the same as the values for (cid:104)εp(cid:105) = 0.05 and g = 2.4.

As described in Sec. 2, the ideal coeﬃcients are arranged into two vectors:
one for each of the basis tensors, I and ˆUr. Each vector of ideal coeﬃcients
is used as input, along with the associated parameters and invariants, to the
GEP algorithm (Searson, 2009). Here, the GEP algorithm selects models
that reduce the R2 between the ideal coeﬃcient values and the candidate
models, which are all functions of the parameters and invariants. This eﬀec-
tively collapses the vector of ideal coeﬃcients to a single, compact algebraic
expression.

The resultant model learned from this methodology is given as

RDP =

(cid:18)

0.258ϕ + (0.03ϕ)3 + 1.9

(cid:19)

I+

(cid:104)εp(cid:105)
S (2)

(cid:0)1.9ϕ − 5.8ϕ1/2(cid:1) ˆUr

(7)

(cid:16) ˆUr

ˆRf

ˆR2
p

(cid:17)

where S (2) is a principal invariant, deﬁned as tr
, and the basis ten-
sor, ˆUr is deﬁned by the normalized slip tensor. This slip tensor is given as
the outer product of the mean slip velocity, ((cid:104)up(cid:105)p − (cid:104)uf (cid:105)f )⊗((cid:104)up(cid:105)p − (cid:104)uf (cid:105)f ).
The two other basis tensors, ˆRf and ˆRp, are the anisotropic stress tensors
associated with the ﬂuid and particle phase, respectively. In terms of solu-
tion variables, the mean phase velocities are solved by associated momentum
equations and the Reynolds stresses are informed by transport equations in
the multiphase RANS equations (see Beetham et al., 2021). This model has
an error of 0.012, where the error is deﬁned as

(cid:15) =

||D − T ˆβ||2
2
||D||2
2

.

(8)

This is comparable performance to the model learned using sparse regression
exclusively ((cid:15) = 0.013), however, the proposed method does not require a

8

manual selection of trial functions for the coeﬃcients, thus making it far
more eﬃcient from a modeling perspective.

As a counter argument to the blended modeling approach, we also allowed
the GEP algorithm to learn the full model (i.e., the mean values of drag
production, all 24 basis tensors, the principal invariants and conﬁguration
parameters from the Euler–Lagrange simulations were provided to the GEP
algorithm as input). The learned model is given as

RDP =24.4 ˆUr + 30.4e−ˆRp − 1.42
1.41 × 105 (cid:16) ˆU2

ˆRf + ( ˆU2

r

r

(cid:16) ˆUr
ˆRf )T(cid:17)2

(cid:104)εp(cid:105)2 − 30.4,

ˆRp + ( ˆUr

ˆRp)T(cid:17)1/2

+

(9)

with associated error 0.13 (an order of magnitude higher than the blended
or sparse regression only approach). This degradation in performance can
be attributed to the fact that the model now depends upon ˆRp and ˆRf , the
particle and ﬂuid-phase Reynolds stress tensors, in addition to ˆUr. On a
fundamental level, since the drag production is a gravity-based phenomenon
(i.e., TKE is generated solely due to the presence of gravity in this conﬁg-
uration), we can anticipate that ˆUr would be the predominant tensor from
the basis for describing the physics. Additionally, since the Reynolds stresses
contain nonzero diagonal entries, including these terms makes it diﬃcult to
drive the cross stream directions of the drag production model to zero. Fi-
nally, and perhaps most importantly, GEP does not enforce the relation that
resultant model be linear with respect to the basis tensors. The stipulation
of linearity in the basis tensors is critical for ensuring form invariance in the
resultant model and for ensuring a physics-based description of the data, as
described by (1). These results suggest that sparse regression and GEP are
both needed in order to select a minimal set of tensors to describe physics
and automate the complex dependencies of the coeﬃcients when physical
intuition cannot guide this process.

5. Acknowledgements

This material is based upon work supported by the National Science
Foundation (NSF CAREER, CBET-1846054). The computing resources and
assistance provided by the staﬀ of Advanced Research Computing at the
University of Michigan, Ann Arbor is greatly appreciated. Additionally,
this work used the Extreme Science and Engineering Discovery Environment

9

(XSEDE), which is supported by National Science Foundation grant number
ACI-1548562 (Towns et al., 2014).

References

S. Beetham and J. Capecelatro. Formulating turbulence closures using sparse
regression with embedded form invariance. Physical Review Fluids, 5:
084611, 2020.

S. Beetham, R. O. Fox, and J. Capecelatro. Sparse identiﬁcation of multi-
phase turbulence closures for coupled ﬂuid-particle ﬂows. Journal of Fluid
Mechanics, 914, A11, 2021.

M. Bode, M. Gauding, K. Kleinheinz, and H. Pitsch. Deep learning at scale
for subgrid modeling in turbulent ﬂows: regression and reconstruction.
arXiv:1910.00928v1, 2019.

S. L. Brunton, J. L. Proctor, and J. N. Kutz. Discovering governing equa-
tions from data by sparse identiﬁcation of nonlinear dynamical systems.
Proceedings of the National Academy of Sciences, 113(15):3932–3937, 2016.

J. Capecelatro and O. Desjardins. An Euler–Lagrange strategy for simulating
particle-laden ﬂows. Journal of Computational Physics, 238:1–31, 2013.

J. Capecelatro, O. Desjardins, and R. O. Fox. Numerical study of colli-
sional particle dynamics in cluster-induced turbulence. Journal of Fluid
Mechanics, 747:R2 1–13, 2014.

J. Capecelatro, O. Desjardins, and R. O. Fox. On ﬂuid-particle dynamics in
fully-developed cluster-induced turbulence. Journal of Fluid Mechanics,
780:578–635, 2015.

Joachim Dominique, Julien Christophe, Christophe Schram, and Richard D
Inferring empirical wall pressure spectral models with Gene
Sandberg.
Expression Programming. Journal of Sound and Vibration, 506:116162,
2021.

K. Duraisamy and P. A. Durbin. Transition modeling using data driven

approaches. Proceedings of the Summer Program, page 427, 2014.

10

K. Duraisamy, Z. J. Zhang, and A. P. Singh. New approaches in turbu-
lence and transition modeling using data-driven techniques. 53rd AIAA
Aerospace Sciences Meeting, page 1284, 2015.

Karthik Duraisamy, Gianluca Iaccarino, and Heng Xiao. Turbulence mod-
eling in the age of data. Annual Review of Fluid Mechanics, 51:357–377,
2019.

R. O. Fox. On multiphase turbulence models for collisional ﬂuid–particle

ﬂows. Journal of Fluid Mechanics, 742:368–424, 2014.

J. Ling, A. Kurzawski, and J. Templeton. Reynolds averaged turbulence
modeling using deep neural networks with embedded invariance. Journal
of Fluid Mechanics, 807:155–166, 2016.

W. Liu and J. Fang.

Iterative framework of machine-learning based
turbulence modeling for Reynolds-averaged Navier-Stokes simulations.
arXiv:1910.01232v1, 2019.

C. Lu. Artiﬁcial neural network for behavior learning from meso-scale simu-
lations, application to multi-scale multimaterial ﬂows. PhD thesis, 2010.

M. Ma, J. Lu, and G. Tryggvason. Using statistical learning to close two-ﬂuid
multiphase ﬂow equations for bubbly ﬂows in vertical channels. Interna-
tional Journal of Multiphase Flow, 85:336–347, 2016.

M. Milano and P. Koumoutsakos. Neural network modeling for near wall

turbulent ﬂow. Journal of Computational Physics, 182:1–26, 2002.

S. B. Pope. Turbulent ﬂows. Cambridge University Press, 2000.

E. Rajabi and M. R. Kavianpour. Intelligent prediction of turbulent ﬂow over
backward-facing step using direct numerical simulation data. Engineering
Applications of Computational Fluid Mechanics, 6(4):490–503, 2012.

Maximilian Reissmann, Josef Hasslberger, Richard D Sandberg, and Markus
Klein. Application of Gene Expression Programming to a-posteriori LES
modeling of a Taylor Green vortex. Journal of Computational Physics,
424:109859, 2021.

11

Saeed Samadianfard. Gene expression programming analysis of implicit
colebrook–white equation in turbulent ﬂow friction factor calculation.
Journal of Petroleum Science and Engineering, 92:48–55, 2012.

M. Schmelzer, R. P. Dwight, and P. Cinnella. Discovery of algebraic
Reynolds-stress models using sparse symbolic regression. Flow, Turbulence
and Combustion, 104(2):579–603, 2020.

D. Searson. Gptips: Genetic programming & symbolic regression for MAT-

LAB. http://gptips.sourceforge.net, 2009.

A. J. M. Spencer and R. S. Rivlin. The theory of matrix polynomials and its
application to the mechanics of isotropic continua. Archive for Rational
Mechanics and Analysis, 2:309–336, 1958.

J. Towns, T. Cockerill, M. Dahan, I. Foster, K. Gaither, A. Grimshaw, V. Ha-
zlewood, S. Lathrop, D. Lifka, G. D. Peterson, R. Roskies, J. R. Scott, and
N. Wilkins-Diehr. Xsede: Accelerating scientiﬁc discovery. Computing in
Science & Engineering, 16:62–74, 2014.

B. Tracey, K. Duraisamy, and J. J. Alonso. A machine learning strategy to

assist turbulence model development. AIAA Paper, 1287, 2015.

Jack Weatheritt and Richard Sandberg. A novel evolutionary algorithm ap-
plied to algebraic modiﬁcations of the RANS stress–strain relationship.
Journal of Computational Physics, 325:22–37, 2016.

Yaomin Zhao, Harshal D Akolekar, Jack Weatheritt, Vittorio Michelassi,
and Richard D Sandberg. RANS turbulence model development using cfd-
driven machine learning. Journal of Computational Physics, 411:109413,
2020.

12

