Is learning for the unit commitment problem
a low-hanging fruit?

S. Pineda and J. M. Morales

1

1
2
0
2

n
u
J

2
2

]

C
O
.
h
t
a
m

[

1
v
7
8
6
1
1
.
6
0
1
2
:
v
i
X
r
a

Abstract—The blast wave of machine learning and artiﬁcial
intelligence has also reached the power systems community,
and amid the frenzy of methods and black-box tools that have
been left in its wake,
it is sometimes difﬁcult to perceive a
glimmer of Occam’s razor principle. In this letter, we use the unit
commitment problem (UCP), an NP-hard mathematical program
that is fundamental to power system operations, to show that
simplicity must guide any strategy to solve it, in particular those
that are based on learning from past UCP instances. To this
end, we apply a naive algorithm to produce candidate solutions
to the UCP and show, using a variety of realistically sized
power systems, that we are able to ﬁnd optimal or quasi-optimal
solutions with remarkable speedups. Our claim is thus that any
sophistication of the learning method must be backed up with a
statistically signiﬁcant improvement of the results in this letter.

Index Terms—Unit commitment problem, machine learning,

computational burden, power system operations.

I. INTRODUCTION

T HE unit commitment problem (UCP) is currently one

of the most fundamental mathematical tools to operate
power systems. The UCP determines the on/off commitment
status and power dispatch of generating units to satisfy elec-
tricity demand at a minimum cost while complying with the
technical limits of generation and transmission assets [1]. The
UCP is usually formulated as a mixed-integer optimization
problem that is proven to be NP-hard [2] and therefore, the
technical literature includes several methods to trim down its
computational burden [3], [4]. Existing strategies comprise
formulation tightening [5], [6], decomposition techniques [7]
and constraint screening [8]. These methods, however, over-
look the fact that slight variations of the same UCP are to be
solved everyday and therefore, learning from the past may be
a powerful weapon to tackle future UCP instances.

In the same vein, some learning-based methodologies have
been recently proposed to reduce the computational burden of
the UCP using information about previously solved instances.
References [9], [10] review current learning-based methods
for power system problems. In particular, the authors of [11]
learn a proxy of the UCP’s solution to be used in long-
term planning assessments. Despite being simple and fast
(with speedups up to 260x), the proposed strategy involves

S. Pineda is with the Dep. of Electrical Engineering, Univ. of Malaga,
Spain. E-mail: spinedamorente@gmail.com. J. M. Morales is with the Dep. of
Applied Mathematics, Univ. of Malaga, Spain. E-mail: juan.morales@uma.es.
This work was supported in part by the Spanish Ministry of Science
and Innovation through project PID2020-115460GB-I00, by the Andalusian
Regional Government
through project P20-00153, and by the Research
Program for Young Talented Researchers of the University of M´alaga under
Project B1-2019-11. This project has also received funding from the European
Research Council (ERC) under the European Union’s Horizon 2020 research
and innovation programme (grant agreement No 755705).

an average optimality error of 3.5% for the IEEE-96RTS
test system, which precludes its use in short-term operation.
Using Classiﬁcation and Regression Trees (CART) or Random
Forest (RF), reference [12] presents a methodology to ﬁnd
the relationships between the solutions of the original and
relaxed versions of the UCP and reports average optimality
errors of between 0.14% and 0.23%. A supervised classiﬁca-
tion procedure is proposed in [13] to learn the transmission
capacity constraints that can be screened out of the UCP. Using
a 2000-bus system, the authors report a speedup of 19x if
retrieving the original solutions must be guaranteed, and a
speedup of 43x for an average suboptimality error of 0.04%.
The authors of [14] describe a sophisticated methodology
to cluster decision variables depending on the difﬁculty of
the UCP instance to be solved. They achieve speedups of
between 1.5x and 2x, an average optimality error of 0.1%,
and a maximum optimality error of 1% for the IEEE 118-
bus system. The authors of [15] use the UCP solution of
the previous day UC as a warm start strategy and report
speedups of 2x for the MISO power system. This speedup
can be increased to 2x-12x if additional historical information
is considered, as shown in [16]. In [17],
the authors use
machine learning to determine unnecessary constraints of the
stochastic unit commitment and attain speedups of 14x for
a 500-bus power system. Finally, reference [18] proposes
different strategies to learn initial solutions with speedups of
4.3x while retrieving the optimal solution of the UCP. The
authors also discuss a learning-based procedure to learn the
relationships among binary variables, which yields speedups
of 10.2x but no optimality guarantees. These methodologies
are tested on a set of large-sized networks.

It is apparent that when it comes to learning for the UCP,
one may easily get lost in a myriad of methods and approaches,
all of which promise reasonable computational savings. The
takeaway message is that, despite the high theoretical com-
plexity of the UCP, having access to previous instances may
signiﬁcantly reduce the solution task in practice, since today’s
commitment decisions are probably very similar to those made
yesterday, one week ago, or even one year ago. Given the high
potential of using historical data to reduce the computational
burden of the UCP, the questions that naturally arise are:
Are existing learning methods an actual breakthrough in the
solution of the UCP or are they just picking the low-hanging
fruit? Do sophisticated learning methods to solve the UCP sub-
stantially outperform painless naive learning strategies? How
should we benchmark the performance of learning methods to
solve the UCP? In this letter, we aim to answer these questions
by learning the UCP’s solution through a straightforward K-
nearest neighbor procedure. The purpose of this letter is,

 
 
 
 
 
 
by no means, to propose a learning-based methodology that
outperforms existing ones under certain conditions. What
we claim is that the performance of existing and upcoming
learning-based methods to solve the UCP should be thoroughly
compared with some painless naive methods such as the one
we suggest, in order to justify the hassle from the increased
complexity and sophistication, and the loss of transparency.

II. A NAIVE LEARNING METHOD

The unit commitment problem can be generally formulated

as the following optimization program:

f (u, y)

min
u,y
s.t. gj(u, y, d) ≤ 0, ∀j

(1a)

(1b)

where u and y denote, respectively, the binary and continuous
variables, d represents the input parameters such as net de-
mand throughout the network, and f (·), gj(·) are the objective
function and the technical constraints, in that order. Under
some mild assumptions, model (1) becomes a mixed-integer
quadratic programming problem that can be solved using
optimization solvers at a usually high computational cost. With
some abuse of notation, we express the solution of (1) as
a function of the input parameters, namely, uUC(d), yUC(d).
If binary variables u are ﬁxed to given values ˜u, model (1)
becomes an optimal power ﬂow (OPF) problem, which is
easier to solve and whose optimal solution is denoted as
yOPF(˜u, d).

i

, T UC
i

Suppose we have access to a sample set of optimal solutions
of problem (1) for different input parameters, referred to as
, CUC
S = {(di, uUC
= uUC(di),
)}i∈I, where uUC
i
i
, T UC
and CUC
are, respectively, the objective function and
i
i
the computational time of problem (1) for instance i ∈ I.
Intuitively, the naive learning methodology we propose as a
benchmark consists in ﬁxing the binary variables to those of
close past instances to solve several OPFs in parallel and select
the one with the lowest cost. Using a leave-one-out procedure,
the learning strategy for each instance i ∈ I runs as follows:
1) Compute the distance between the input parameters di
and those of the remaining instances using a norm, for
example, ||di − d˜i||2, ∀˜i ∈ I,˜i 6= i.

˜i

˜i

. That

and T OPF
i˜i

2) Find the set of the K-nearest neighbors to i with the
lowest distances computed in step 1), denoted as I K
i .
3) Solve the optimal power ﬂow for input parameters di
is, compute
and denote the objective func-
, respectively.
i˜i
4) Among all feasible problems solved in step 3), approx-
=
. The lowest suboptimality gap is thus com-

and binary variables ﬁxed to uUC
yOPF(uUC
, di), ∀˜i ∈ I K
i
tion and solving time as COPF

imate the cost of the UCP for instance i as
min˜i COPF
i˜i
puted as ∆i = (

factor is thus computed as Si = T UC
i ), where T L
T L
i

i
5) Problems in step 3) are solved in parallel and the speedup
) +
i
is the learning time of steps 1) and 2).
Once steps 1)-5) are run for each instance, we determine the
average suboptimality gap ∆, the maximum suboptimality gap
∆max, the average speedup S, and the number of instances for
which the K problems solved in step 3) are infeasible N IN.

/(max˜i(T OPF

i − CUC
CUC
b

CUC
i
b

)/CUC
i

i˜i

.

2

III. NUMERICAL RESULTS

In this section, we provide the results obtained by the
learning method described in Section II for nine large-scale
European test systems used in [18] and available for download
at [19]. The numbers of buses, units and lines of each system
are collated in columns 2-4 of Table I.

The performance of the naive learning method is illustrated
using the solution of 500 UCP instances that differ on the 24-
hour load proﬁle. According to the procedure proposed in [18],
each 24-hour load proﬁle is randomly generated as follows:

b = βb/

1) Let P g denote the capacity of each unit g. The peak de-
mand D is randomly generated as D = 0.6×(cid:16)Pg P g(cid:17)×
unif(0.925, 1.075), where unif(a, b) represents a random
sample from a uniform distribution in the interval [a, b].
2) Let βb denote the nominal load distribution factor of
bus b. The distribution factor βb is randomly generated
as βb = βb × unif(0.9, 1.1), which is subsequently
normalized as βN
βN
b = 1.
3) Let t ∈ T denote the index for the time periods of the
UCP, and let µt and σt represent, respectively, the average
and standard deviation of the ratio between the aggregated
load level for two consecutive hours Dt/Dt−1. The
hourly variation factors vt are randomly generated as
vt = normal(µt, σt), where normal(a, b) represents a
sample from a normal distribution with a mean equal to a
and a standard deviation equal to b. The temporal factor
t
τ =1 vτ , which is normalized as
γt is computed as γt =
Q
t = γt/ max{γt}t∈T to satisfy that max{γN
γN
t }t∈T = 1.
4) The load demand at each bus b and time period t is

Pb βb to satisfy that

P

computed as Dbt = D × βN

b × γN
t .

For each load proﬁle, we solve the speciﬁc unit commit-
ment formulation provided in the Appendix of [18]. For the
sake of simplicity, we consider neither reserves nor security
constraints. Due to its high computational burden, all UCP
instances are solved using the constraint generation approach
proposed in [20] using Gurobi 9.1.2 [21] with a MIP gap
set to 0.01%. Afterwards, the learning method is used for
each instance and test system assuming that the number of
neighbors is set to 50, that is, 10% of the total number of
instances. A summary of the most relevant results is provided
in Table I. More speciﬁcally, columns 5 and 6 include the
average and maximum suboptimality gap for each test system.
Columns 7-11 contain the number of instances whose subop-
timality gap belongs to given intervals. For instance, column
9 provides the number of instances with a suboptimality gap
of between 0.02% and 0.05%. The number of instances for
which all OPF problems are infeasible is included in column
12. Finally, column 13 provides the average speedup of the
naive learning method in relation to solving the original UCP
instances using constraint generation.

The results in Table I lead to several interesting obser-
vations. Firstly, the average suboptimality error for the four
systems with more than 6000 buses is negative. This means
that, on average, ﬁxing the binary variables to those of the
neighbors yields an objective function that is actually lower
than that of the original UCP. Indeed, the suboptimality error
is below the MIP gap in more than 99% of the instances.

3

System

Buses

Units

Lines

∆

∆max < 0.01% 0.01 − 0.02% 0.02 − 0.05% 0.05 − 0.1% > 0.1% N IN

S

1888rte
1951rte
2848rte
3012wp
3375wp
6468rte
6470rte
6495rte
6515rte

1888
1951
2848
3012
3374
6468
6470
6495
6515

297
391
547
502
596
1295
1330
1372
1388

2531
2596
3776
3572
4161
9000
9005
9019
9037

0.0174
0.0382
0.0186
0.0485
0.1256
-0.0001
-0.0016
-0.0001
-0.0009

0.2394
0.3759
0.1332
0.4864
0.8073
0.0175
0.0187
0.0481
0.0133

230
47
179
37
9
498
496
496
497

131
116
138
78
14
2
4
3
3

109
217
159
212
102
0
0
1
0

20
85
14
132
164
0
0
0
0

9
27
8
36
198
0
0
0
0

1
8
2
5
13
0
0
0
0

116.5x
150.4x
132.6x
188.8x
215.9x
41.2x
171.9x
41.0x
101.7x

TABLE I: Numerical results

Finally, these systems do not include any infeasible instances
and report speedups between 41x and 172x. According to these
results, we can conclude that using complicated learning-based
techniques for these four systems seems unnecessary since
naive alternatives signiﬁcantly reduce the UCP computational
burden with negligible suboptimality errors. Secondly, for
systems 1888rte and 2848rte, the 50 OPF solved become
infeasible for 1 and 2 instances, respectively. For these two
systems, the average suboptimality errors are slightly higher
than the predeﬁned MIP gap, while the computational times
the
are reduced by two orders of magnitude. Therefore,
naive learning method is a competitive approach for these
two systems. Finally, the number of infeasible instances for
systems 1951rte, 3012wp and 3375wp are 8, 5 and 13,
respectively. The average optimality errors exceed the MIP gap
and amount to 0.0382%, 0.0485%, and 0.1256%, in the same
order, whereas the speedup factor ranges between 150x and
216x for these three systems. Consequently, using complicated
learning approaches for these three systems would only be
justiﬁed when the computational time, the suboptimality error
or the infeasible cases are drastically lower than those reported
by the naive learning method described in this letter.

IV. CONCLUSION

A highly relevant topic within the PES scientiﬁc community
is the reduction of the computational burden of the unit
commitment problem. However, assessing the improvements
of sophisticated learning-based approaches is sometimes tricky
due to the lack of benchmark methods. This letter describes a
painless and naive learning method and shows that, for some
power systems, learning the solution of the unit commitment
problem is indeed a low-hanging fruit that can be effortlessly
picked. For other systems, the results of the naive learning
approach are less impressive but, at
they
should be used to benchmark the performance of existing
and upcoming learning methods to solve the unit commitment
problem.

the very least,

REFERENCES

[1] S. Sen and D. Kothari, “Optimal thermal generating unit commitment: a
review,” Int. J. Electr. Power Energy Syst., vol. 20, no. 7, pp. 443–451,
1998.

[2] P. Bendotti, P. Fouilhoux, and C. Rottner, “On the complexity of the unit
commitment problem,” Ann. Oper. Res., vol. 274, no. 1-2, pp. 119–130,
2019.

[3] B. Saravanan, S. Das, S. Sikri, and D. Kothari, “A solution to the unit
commitment problem—a review,” Front. Energy, vol. 7, no. 2, pp. 223–
236, 2013.

[4] Y. Chen, A. Casto, F. Wang, Q. Wang, X. Wang, and J. Wan, “Im-
proving large scale day-ahead security constrained unit commitment
performance,” IEEE Trans. Power Syst., vol. 31, no. 6, pp. 4732–4743,
2016.

[5] H. Pandˇzi´c, T. Qiu, and D. S. Kirschen, “Comparison of state-of-the-art
transmission constrained unit commitment formulations,” in 2013 IEEE
Power Energy Society General Meeting, 2013, pp. 1–5.

[6] D. A. Tejada-Arango, S. Lumbreras, P. S´anchez-Mart´ın, and A. Ramos,
“Which unit-commitment formulation is best? a comparison framework,”
IEEE Trans. Power Syst., vol. 35, no. 4, pp. 2926–2936, 2020.

[7] Y. Fu, M. Shahidehpour, and Z. Li, “Security-constrained unit commit-
ment with ac constraints,” IEEE Trans. Power Syst., vol. 20, no. 2, pp.
1001–1013, 2005.

[8] Q. Zhai, X. Guan, J. Cheng, and H. Wu, “Fast identiﬁcation of inactive
security constraints in scuc problems,” IEEE Trans. Power Syst., vol. 25,
no. 4, pp. 1946–1954, 2010.

[9] Y. Yang and L. Wu, “Machine learning approaches to the unit commit-
ment problem: Current trends, emerging challenges, and new strategies,”
Electr. J., vol. 34, no. 1, p. 106889, 2021.

[10] G. Ruan, H. Zhong, G. Zhang, Y. He, X. Wang, and T. Pu, “Review
of learning-assisted power system optimization,” CSEE J. Power Energy
Syst., vol. 7, no. 2, pp. 221–231, 2021.

[11] G. Dalal, E. Gilboa, S. Mannor, and L. Wehenkel, “Unit commitment
using nearest neighbor as a short-term proxy,” in 2018 Power Systems
Computation Conference (PSCC), 2018, pp. 1–7.

[12] X. Lin, Z. J. Hou, H. Ren, and F. Pan, “Approximate mixed-integer
programming solution with machine learning technique and linear pro-
gramming relaxation,” in 2019 3rd International Conference on Smart
Grid and Smart Cities (ICSGSC), 2019, pp. 101–107.

[13] S. Pineda, J. M. Morales, and A. Jim´enez-Cordero, “Data-driven screen-
ing of network constraints for unit commitment,” IEEE Trans. Power
Syst., vol. 35, no. 5, pp. 3695–3705, 2020.

[14] Y. Yang, “Integrated data-driven framework for fast scuc calculation,”
IET Gener. Transm. & Dis., vol. 14, pp. 5728–5738(10), December 2020.
[15] Y. Chen, F. Wang, Y. Ma, and Y. Yao, “A distributed framework for
solving and benchmarking security constrained unit commitment with
warm start,” IEEE Trans. Power Syst., vol. 35, no. 1, pp. 711–720, 2020.
[16] Y. Chen, F. Pan, J. Holzer, E. Rothberg, Y. Ma, and A. Veeramany,
“A high performance computing based market economics driven neigh-
borhood search and polishing algorithm for security constrained unit
commitment,” IEEE Trans. Power Syst., vol. 36, no. 1, pp. 292–302,
2021.

[17] F. Mohammadi, M. Sahraei-Ardakani, D. Trakas, and N. D. Hatziar-
gyriou, “Machine learning assisted stochastic unit commitment during
hurricanes with predictable line outages,” IEEE Trans. Power Syst., pp.
1–1, 2021.

[18] A. S. Xavier, F. Qiu, and S. Ahmed, “Learning to solve large-scale
security-constrained unit commitment problems,” INFORMS J. Comput.,
vol. 33, no. 2, pp. 739–756, 2021.

[19] ——, “Dataset: Learning to solve large-scale security-constrained unit

commitment problems,” 2 2020.

[20] Y. Fu, Z. Li, and L. Wu, “Modeling and solution of the large-
scale security-constrained unit commitment,” IEEE Trans. Power Syst.,
vol. 28, no. 4, pp. 3524–3533, 2013.

[21] Gurobi Optimization, “Gurobi optimizer reference manual,” 2021.

