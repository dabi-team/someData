1
2
0
2

c
e
D
8
2

]

G
L
.
s
c
[

1
v
4
3
4
5
1
.
2
1
1
2
:
v
i
X
r
a

Adversarial Learning for Incentive Optimization in Mobile
Payment Marketing

Xuanying Chen*
Ant Financial Services Group
xuanying.cxy@antgroup.com

Sen Li
Alibaba Group
lisen.lisen@alibaba-inc.com

Zhining Liu*
Ant Financial Services Group
eason.lzn@antgroup.com

Lihong Gu
Ant Financial Services Group
lihong.glh@antgroup.com

Li Yu*
Ant Financial Services Group
jinli.yl@antgroup.com

Xiaodong Zeng
Ant Financial Services Group
xiaodong.zxd@antgroup.com

Yize Tan
Ant Financial Services Group
yize.tyz@antgroup.com

Jinjie Gu
Ant Financial Services Group
jinjie.gujj@antgroup.com

ABSTRACT
Many payment platforms hold large-scale marketing campaigns,
which allocate incentives to encourage users to pay through their
applications. To maximize the return on investment, incentive al-
locations are commonly solved in a two-stage procedure. After
training a response estimation model to estimate the users’ mo-
bile payment probabilities (MPP), a linear programming process
is applied to obtain the optimal incentive allocation. However, the
large amount of biased data in the training set, generated by the
previous biased allocation policy, causes a biased estimation. This
bias deteriorates the performance of the response model and mis-
leads the linear programming process, dramatically degrading the
performance of the resulting allocation policy. To overcome this
obstacle, we propose a bias correction adversarial network. Our
method leverages the small set of unbiased data obtained under a
full-randomized allocation policy to train an unbiased model and
then uses it to reduce the bias with adversarial learning. Offline
and online experimental results demonstrate that our method out-
performs state-of-the-art approaches and significantly improves
the performance of the resulting allocation policy in a real-world
marketing campaign.

CCS CONCEPTS
• Applied computing → Marketing.
KEYWORDS
mobile payment; adversarial network; bias correction

*These authors contributed equally to this work.

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CIKM ’21, November 1–5, 2021, Virtual Event, QLD, Australia
© 2021 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8446-9/21/11. . . $15.00
https://doi.org/10.1145/3459637.3482052

ACM Reference Format:
Xuanying Chen*, Zhining Liu*, Li Yu*, Sen Li, Lihong Gu, Xiaodong Zeng,
Yize Tan, and Jinjie Gu. 2021. Adversarial Learning for Incentive Opti-
mization in Mobile Payment Marketing. In Proceedings of the 30th ACM
International Conference on Information and Knowledge Management (CIKM
’21), November 1–5, 2021, Virtual Event, QLD, Australia. ACM, New York, NY,
USA, 5 pages. https://doi.org/10.1145/3459637.3482052

1 INTRODUCTION
Mobile payments such as Alipay, WeChat Pay, Apple Pay are now
experiencing rapid growth. To maximize the return on investment,
how to allocate the user-specific incentive under budget constraints
is playing the central role in marketing budget allocation.

Chu et al. [5] [10] divided the budget allocation into two stages:
adapting a response model to estimate the user’s response score, i.e.,
MPP in our paper, and applying a linear programming to obtain the
optimal incentive allocation under budget constraints. In this paper,
we will focus on the first step to learn a better response model and
not elaborate the whole literature of the second step.

It is non-trivial to estimate the response score of each user to
incentives, since the training payment data is typically generated by
previous biased allocation policy. Figure 1a shows the relationship
between MMP and the amount of incentives under random data and
biased data. Under random data, the MPP increases as the incentive
increases, which describes real user behavior. On the contrary, the
previous bias allocation policy generates a large amount of biased
data, e.g., active users have a high probability of being allocated a
small amount of incentive, while low-active users are the opposite.
As a result, the MPP-incentives curve shows a downward trend.
Specifically, due to the naturally high MPP of active users, even
if a small amount of incentives are allocated, they are more likely
to pay through the applications. On the contrary, even if a large
amount of incentives are allocated to low-active users, their interest
in paying through the applications is also low. The response model
trained with these data will over-estimate the response score on
a small amount of the incentive and under-estimate the response
score on a large amount of the incentive, shown in Figure 1b, which
cannot accurately estimate the user’s response score. As a result,
the linear programming algorithm will tend to allocate a relative
small amount of incentive to users. One solution to get unbiased

 
 
 
 
 
 
(a)

(b)

Figure 1: The curve of the mobile payment probability and
the scale of incentives on payment data. (a) Pure random
data versus previous biased data; (b) Response model trained
with random data versus biased data.

estimation is to adapt a full-randomized allocation policy [3] to
collect a large amount of unbiased data, which is impractical due to
the limited budget. In this paper, we propose a price-bias correction
adversarial network (PCAN), which leverages the small set of un-
biased data obtained under a full-randomized allocation policy to
train an unbiased network and then uses the unbiased network to
reduce the price-bias in the biased network with adversarial learn-
ing. Specifically, PCAN first learns to distinguish the distribution
difference between the biased and unbiased data representation
and then teaches the biased network to generate a representation
close to the unbiased network, which can alleviate the problem of
price-bias.

Our paper is organized as follows. Related works are reviewed
in Section 2, followed by our proposed method in Section 3. Exper-
imental results are reported in Section 4 before we conclude the
paper in the last section.

2 RELATED WORK
Existing incentives allocation methods usually are divided into two
stages: (1) the response model estimates the response score; (2) the
response score is served as an input of the optimization model,
which tries to maximize the MPP under the budget constraint.
Response Model Estimation. [1, 7] introduce a dynamic market-
ing allocation budget. Through strong fitting ability, neural net-
works can achieve a high prediction accuracy, widely used in many
scenarios [12, 17, 18]. [6, 19] use machine learning techniques to es-
timate future demand for new products and provide recommended
prices for Airbnb hosts. However, as a black-box model, there are
some gaps between the prediction and decision-making of deep
neural networks [2]. Therefore, [13, 22] propose a semi-black box
model that extends the logarithmic demand curve through neural
network and graph learning to solve this problem.
Allocation Optimization. [11] proposes a fast approximation us-
ing semi-definite programming relaxation. [6] optimizes pricing
decisions by using demand predictions from the regression trees as
inputs of the price optimization model. [4, 16] through markov de-
cision process value function and the connection with continuous
sub-module function to solve the allocation optimization problem.

3 PROPOSED METHOD
From the online deployed system, we can collect the logged data
𝐷 = (𝑋,𝑇 , 𝑌 ), where 𝑥 ∈ 𝑋 denotes a feature vector that encodes
the information of users’ demographic profiles and online behaviors.
𝑡 ∈ 𝑇 represents the amount of incentives allocated to the users,
which are usually several preset numbers. 𝑦 ∈ 𝑌 is the label, which
denotes whether users make mobile payments.

To allocate the budget in an optimal way, a two-stage solu-
tion [13, 22] is a common choice. First, a response model 𝑦 = 𝑓 (𝑥, 𝑡)
estimates the users’ MPPs for each user described by 𝑥 and each
price 𝑡. Based on the response model, the best allocation under
the constraint of the budget 𝐵 can be obtained by solving a linear
programming problem. In the following subsections, we illustrate
our proposed method from the two perspectives in detail.

3.1 Response Model Estimation
With the collected data 𝐷, the response model 𝑓 can be estimated
through minimizing the following loss function:

∑︁

L =

(𝑦,𝑥,𝑡 ) ∈𝐷

𝐶𝑟𝑜𝑠𝑠𝐸𝑛𝑡𝑟𝑜𝑝𝑦 (𝑦, 𝑓 (𝑥, 𝑡))

(1)

where 𝑓 is usually defined as:

𝑓 (𝑥𝑖, 𝑡𝑖 ) = 𝜎 (𝑤𝑔 (ℎ(𝑥𝑖 )) · 𝑡𝑖 + 𝑤𝑝 (ℎ(𝑥𝑖 )))
(2)
where ℎ(𝑥𝑖 ) denotes the latent representation of the user. 𝜎 (·) de-
notes the sigmoid function. 𝑤𝑔 and 𝑤𝑝 are two trainable functions.
To further meet the monotonicity constraint, a semi-black-box
model with Softplus (SBBM-Softplus) [13] is introduced to guaran-
tee the positive effect of the treatment:

𝑓 (𝑥𝑖, 𝑡𝑖 ) = 𝜎 (SOFTPLUS[𝑤𝑔 (ℎ(𝑥𝑖 ))] · 𝑡𝑖 + 𝑤𝑝 (ℎ(𝑥𝑖 )))

(3)

where SOFTPLUS(𝑥) = ln(1 + 𝑒𝑥 ).

3.2 Price-Bias Correction Adversarial Network
However, due to the budget constraints, we would not deploy a
random allocation policy online. Training based on logged data
from a biased allocation policy,𝑓 (𝑥𝑖, 𝑡𝑖 ) is easily biased. As pointed
by [15, 21], the observed accurate response score is estimated using
Inverse Propensity Scoring (IPS)-based methods:

𝑓𝑡𝑟𝑢𝑒 (𝑥𝑖, 𝑡𝑖 ) =

𝑓 (𝑥𝑖, 𝑡𝑖 )
𝜋 (𝑡𝑖 |𝑥𝑖 )

(4)

where 𝜋 (𝑡𝑖 |𝑥𝑖 ) denotes the probability for the user 𝑥𝑖 to be allocated
with the incentive 𝑡𝑖 .

But IPS-based estimators cannot handle well significant shifts in
exposure probability between treatment and control policies under
biased exposure. Therefore, to correct this bias, in our learning
setup, we assume that we have access to a large sample 𝐷𝑏 from the
online biased allocation policy and a small sample 𝐷𝑢 from the ran-
domized allocation policy, i.e., 𝐷 = 𝐷𝑏 ∪ 𝐷𝑢 . Specifically, as shown
in Figure 2, our entire model includes two subnets named BiasedNet
𝑓𝑏 and UnbiasedNet 𝑓𝑢 . Two subnets are trained to optimize L𝑏
and L𝑢 , respectively, where L𝑏 and L𝑢 are defined as:

L𝑏 =

L𝑢 =

∑︁

(𝑦,𝑥,𝑡 ) ∈𝐷𝑏
∑︁

(𝑦,𝑥,𝑡 ) ∈𝐷𝑢

𝐶𝑟𝑜𝑠𝑠𝐸𝑛𝑡𝑟𝑜𝑝𝑦 (𝑦, 𝑓 (𝑥, 𝑡))

𝐶𝑟𝑜𝑠𝑠𝐸𝑛𝑡𝑟𝑜𝑝𝑦 (𝑦, 𝑓 (𝑥, 𝑡))

(5)

406080100120140160The amount of incentives0.40.50.60.70.80.9MMPrandom databiased data406080100120140160The amount of incentives0.500.550.600.650.700.75MMPunbias modelbias modelFigure 2: An illustration of the proposed framework.

Although the distributions of 𝐷𝑏 and 𝐷𝑢 are different, we as-
sume that the same set of users should have a fixed distribution
representation. Therefore, we would like to enforce ℎ𝑏 (𝑥) to follow
the same distribution of ℎ𝑢 (𝑥) to alleviate the bias. Specifically, we
realize the goal of debiasing using adversarial learning through
optimize the following objective function:

min
ℎ𝑏

max
𝑑

E
𝑥∼𝐷𝑢

[log 𝑑 (ℎ𝑢 (𝑥))] + E

𝑥∼𝐷𝑏

[log(1 − 𝑑 (ℎ𝑏 (𝑥))]

(6)

As shown in the equation, two components play the central role
of representation generator and bias discriminator. We describe
two parts in detail in the following subsections.

3.2.1 Representation Generator. BiasedNet, which also acts as the
representation generator to generate a biased latent representation
in the training process of the adversarial network. In contrast, a
user described by ℎ𝑢 (𝑥) in UnbiasedNet represents an unbiased
latent representation, which serves as the supervision of ℎ𝑏 (𝑥). The
representation generator will align ℎ𝑏 to ℎ𝑢 to eliminate deviation.

3.2.2 Bias Discriminator. We introduce the bias discriminator 𝑑 to
determine which dataset it comes from, i.e., 𝐷𝑏 and 𝐷𝑢 . Specifically,
one batch of training data is mixed with unbiased/biased samples,
and 𝑑 is trained to maximize the probability of correctly identifying
which dataset ℎ𝑏 (𝑥) is generated from. In an adversarial way, ℎ𝑏 is
trained to maximize the probability of 𝑑 (𝑥) incorrectly identifying.
Since ℎ𝑢 is trained by unbiased data, the learned representation
ℎ𝑢 (𝑥) is assumed to be unbiased. Under the guidance of the ad-
versarial network, BiasNet can gradually learn the distribution of
ℎ𝑢 (𝑥), and finally achieve bias correction.

3.2.3 Optimization Algorithm. To train the response model, we
need to alternately optimize Eq. 5 and Eq. 6, which requires carefully
update the discriminator and generator. Algorithm 1 summarizes
the training details. The algorithm includes two phases of training.
The first phase is the warm-up [20], which is designed to ensure
the training of adversarial components to start from a relatively
good situation. Here the warm-up step 𝑛𝑤 is set to 100 in this paper.
Then in the second phase, we begin to update the representation
generator and bias discriminator under the framework of adversar-
ial learning. Moreover, to enhance the stability of training [8], we
alternate between five steps of optimizing 𝑑 (𝑥) and one step of op-
timizing ℎ𝑔 (𝑥). The algorithm finally returns the learned response
model 𝑓 ∗ after convergence.

Algorithm 1 Training Process of PCAN
Input:

Unbiased dataset 𝐷𝑢 , biased dataset 𝐷𝑏 and warm-up step 𝑛𝑤

Output:

Response Model 𝑓 ∗

step ← 0

1: Random initialization of the model
2:
3: while not converged do
4: while step <= 𝑛𝑤 do
5:

Sample one batch of data from 𝐷𝑢 and 𝐷𝑏 , respectively
Update BiasedNet and UnbiasedNet by optimizing Eq.5
step ← step + 1

end while

8:
9: while step <= 𝑛𝑤 + 6 do
10:

Sample one batch of data from 𝐷𝑢 and 𝐷𝑏 , respectively
Update alternately BiasedNet and 𝑑 by optimizing Eq. 6
step ← step + 1

6:

7:

11:

12:

13:

end while
step ← 0

14:
15: end while
16: Return BiasedNet.

3.3 Allocation Optimization as Linear

Programming

Based on the estimated response model, we can get the mobile
payment probability 𝑓 (𝑥𝑖, 𝑡 𝑗 ) for each user with the short form
𝑓𝑖 𝑗 . Assuming that 𝑇 is the treatment list, which is defined as
𝑇 = (𝑡1, ..., 𝑡 |𝑇 |). Then we formalize the allocation as a linear pro-
gramming problem given the payment probability 𝑓𝑖 𝑗 and the bud-
get 𝐵, and the objective is to maximize the sum of mobile payment
probability over the user set 𝑀:

𝑀
∑︁

𝑘𝑖

|𝑇 |
∑︁

max

𝑓𝑖 𝑗 ∗ 𝑎𝑖 𝑗

𝑖=1
𝑗=1
𝑘𝑖 (cid:205)|𝑇 |
𝑗=1
(cid:205)𝑀
𝑘𝑖
𝑖=1
where 𝑘𝑖 is the number of incentives. 𝑎𝑖 𝑗 is the indicator of whether
choosing the incentive 𝑡 𝑗 for user 𝑥𝑖 . The optimal solution is :

(cid:205)𝑀
𝑖=1

𝑎𝑖 𝑗 ∗ 𝑡 𝑗

<= 𝐵

𝑠.𝑡 .

(7)

𝑎𝑟𝑔 min

𝑓𝑖 𝑗 − 𝜆(𝑡 𝑗 − 𝐵)

𝑗
where 𝜆 denote the dual optimal.

𝑓 𝑜𝑟

𝑗 = 1, ..., |𝑇 |

(8)

……BiasedNetMLPBiasedSample……MLPUnbiasedSampleUnbiasedNetMLPSharedEmbeddingOrBiasness DiscriminatorIsbiased?MLPMLPBiasedResponseUnbiasedResponseMerchant profilefeatureHistory tradefeatureContextfeatureRepresentationGenerator4 EXPERIMENTS
In this section, we conduct offline and online experiments on the
proposed method to demonstrate its effectiveness. Before diving
into experimental results, we first introduce experiment settings.

4.1 Experimental Settings
In this section, we first introduce our dataset for training the model
and experimental settings.

4.1.1 Dataset. We collected two experimental datasets separately
from two real-world mobile marketing campaigns.
Dataset A: Contains more than 50 million samples which include
11 kinds of incentives. 5% of the data is collected by a random
strategy. The remaining 95% is collected by the biased strategy.
Dataset B: Contains millions of samples which include 16 kinds of
incentives, and the sample ratio is the same as dataset A.
Test Set: All the test set in this paper is the fully random dataset.

4.1.2 Comparison Methods. We compare our method with several
baselines:

• SBBM-U [22]: A baseline model training based on 𝐷𝑢 .
• SBBM-B [22]: Similar with SBBM-U, which train the re-

sponse model on the dataset 𝐷 = 𝐷𝑢 ∪ 𝐷𝑏 .

• SBBM-Sp [13]: A response model with the constraint of the

monotonicity trained based on 𝐷 = 𝐷𝑢 ∪ 𝐷𝑏 .

• IPW [14]: The method which weights each sample with the

inverse of its propensity score.

• CausE [3]: The approach uses the data from 𝐷 = 𝐷𝑢 ∪ 𝐷𝑏 ,
introducing a regularizer to minimize the difference between
the weights of the two models.

4.1.3 Metrics. We introduce Area-Under-Curve (AUC) to quantita-
tively measure the performance of different methods. Besides, price
calibration error (PCE) is also introduced according to expected
calibration error (ECE) [9], which is defined as:
𝑀
∑︁

PCE =

𝑖=1

1
𝑀

| E
𝑖 ∈𝑟𝑒𝑎𝑙

[𝑦𝑖 ] − E

[𝑦𝑖 ]|

𝑖 ∈𝑝𝑟𝑒𝑑

(9)

where 𝑀 represents the number of amounts of the incentive. PCE is
designed to measure the difference between the average prediction
scores and labels. Due to the confidentiality of data, all metrics are
presented the relative improvement over the baseline.

Table 1 shows the experiment result on the dataset. We can
observe that PCAN performs the best on the two metrics overall
baseline methods across all the two datasets. To further demon-
strate the effectiveness of the proposed method in correcting the
bias, we show average response scores over a group of users with
randomly allocated amount of incentives which shows the aver-
age estimated MPP of different models for different amounts in
Figure 3a. Comparing these models trained on the biased dataset,
PCAN successfully captures the monotonicity. Besides, PCAN is
the most similar to the average score of an actual label in most
cases.

4.2 Offline Results
In addition, all the above results are tested with the ratio of |𝐷𝑢 | :
|𝐷𝑏 | = 19 : 1. To prove the robustness of our model, we change the

Table 1: Performance comparison of different methods over
SBBM-U.

Model
Data SBBM-U SBBM-B SBBM-Sp

IPW CausE

PCAN

AUC

PCE

A
B

A
B

-
-

-
-

-83.16% +5.67% +3.87% +18.32% +61.92%
+7.74% +6.16% +8.76% +9.78%
-1.54%

-38.38% +36.58% +41.80% +39.30% +44.35%
-9.58% +15.01% +14.12% +17.36% +19.04%

(a)

(b)

Figure 3: (a) The response curve of different methods; (b) The
performance of difference methods over different ratio of
random data.

proportion of |𝐷𝑢 | to view the performance of each model. It can
be seen in Figure 3b that 1) As the proportion of |𝐷𝑢 | increases, the
performance of all models gradually improves. 2) As |𝐷𝑢 | shrinks,
the performance of all methods gradually deteriorates. However,
our proposed framework, PCAN, still performs better than other
frameworks. In particular, for other methods, the AUC value is
strongly affected by the size of |𝐷𝑢 |, but our method is still stable.
Since the cost of an unbiased sample |𝐷𝑢 | is relatively high in actual
marketing activities, PCAN can achieve good results at a relatively
low |𝐷𝑢 | sample ratio, save a lot of costs, and has strong robustness.

4.3 Online Results
To verify the proposed method’s effectiveness, we further conducted
an A/B test against a baseline (SBBM-Softplus). In the A/B test,
we first randomly split all candidates into two buckets. Under the
same budget, the baseline and our approach allocate the incentives
to users in the two buckets based on estimated response models,
respectively. Over two marketing campaigns, we both observe an
over 3% increase in the number of mobile payments.

5 CONCLUSION
In this paper, we propose an adversarial learning method for incen-
tive optimization in mobile payment marketing. We identify the bias
in the response model estimated from the biased data by analyzing
the response-incentive curve. We further introduce the mechanism
of adversarial learning to build an unbiased response model. Com-
paring with other state-of-the-arts methods, The online experiment
results verify that our proposed method can significantly increase
mobile payment usage under a limited budget. Future work will
design a more effective method with approximate the accurate
response model with less randomized allocation data.

406080100120140160the amount of incentives0.30.40.50.60.70.8mobile payment probabilityREALSBBM-USBBM-SoftplusIPWPCANCausESBBM-B0.625%1.25%2.5%5%10%the ratio of unbias data0.500.550.600.650.700.750.80AUCSBBM-USBBM-BIPWCausEPCANREFERENCES
[1] Shahriar Akter and Samuel Fosso Wamba. 2016. Big data analytics in E-commerce:
a systematic review and agenda for future research. Electronic Markets 26, 2
(2016), 173–194.

[2] Susan Athey. 2017. Beyond prediction: Using big data for policy problems. Science
(New York, N.Y.) 355, 6324 (February 2017), 483—485. https://doi.org/10.1126/
science.aal4321

[3] Stephen Bonner and Flavian Vasile. 2018. Causal embeddings for recommendation.
In Proceedings of the 12th ACM Conference on Recommender Systems. 104–112.
[4] Craig Boutilier and Tyler Lu. 2016. Budget allocation using weakly coupled,

constrained Markov decision processes. (2016).

[5] Kyounghee Chu, Soyeon Kim, and Changhui Choi. 2013. A Study on the impact
of weather on sales and optimal budget allocation of weather marketing. Journal
of the Korean Operations Research and Management Science Society 38, 1 (2013),
153–181.

[6] Kris Johnson Ferreira, Bin Hong Alex Lee, and David Simchi-Levi. 2016. Analytics
for an online retailer: Demand forecasting and price optimization. Manufacturing
& Service Operations Management 18, 1 (2016), 69–88.

[7] Marc Fischer, Sönke Albers, Nils Wagner, and Monika Frie. 2011. Practice Prize
Winner—Dynamic Marketing Budget Allocation Across Countries, Products, and
Marketing Activities. Marketing Science 30, 4 (July 2011), 568–585.

[8] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley,
Sherjil Ozair, Aaron Courville, and Yoshua Bengio. 2014. Generative adversarial
nets. In Advances in neural information processing systems. 2672–2680.

[9] Chuan Guo, Geoff Pleiss, Yu Sun, and Kilian Q Weinberger. 2017. On calibration

of modern neural networks. arXiv preprint arXiv:1706.04599 (2017).

[10] Sunil Gupta and Thomas Steenburgh. 2008. Allocating marketing resources.
Marketing Mix Decisions: New Perspectives and Practices, Roger A. Kerin and Rob
O’Regan, eds., American Marketing Association, Chicago, IL (2008), 90–105.
[11] Shinji Ito and Ryohei Fujimaki. 2017. Optimization beyond prediction: Prescrip-
tive price optimization. In Proceedings of the 23rd ACM SIGKDD International
Conference on Knowledge Discovery and Data Mining. ACM, 1833–1841.

[12] Binbing Liao, Jingqing Zhang, Chao Wu, Douglas McIlwraith, Tong Chen, Sheng-
wen Yang, Yike Guo, and Fei Wu. 2018. Deep sequence learning with auxiliary
information for traffic prediction. In Proceedings of the 24th ACM SIGKDD Inter-
national Conference on Knowledge Discovery & Data Mining. 537–546.

[13] Ziqi Liu, Dong Wang, Qianyu Yu, Zhiqiang Zhang, Yue Shen, Jian Ma, Wenliang
Zhong, Jinjie Gu, Jun Zhou, Shuang Yang, et al. 2019. Graph Representation
Learning for Merchant Incentive Optimization in Mobile Payment Marketing.
In Proceedings of the 28th ACM International Conference on Information and
Knowledge Management. 2577–2584.

[14] Paul R Rosenbaum and Donald B Rubin. 1983. The central role of the propensity
score in observational studies for causal effects. Biometrika 70, 1 (1983), 41–55.
[15] Tobias Schnabel, Adith Swaminathan, Ashudeep Singh, Navin Chandak, and
Thorsten Joachims. 2016. Recommendations as treatments: Debiasing learning
and evaluation. arXiv preprint arXiv:1602.05352 (2016).

[16] Matthew Staib and Stefanie Jegelka. 2017. Robust budget allocation via continuous
submodular functions. In Proceedings of the 34th International Conference on
Machine Learning-Volume 70. JMLR. org, 3230–3240.

[17] Souhaib Ben Taieb, Jiafan Yu, Mateus Neves Barreto, and Ram Rajagopal. 2017.
Regularization in Hierarchical Time Series Forecasting with Application to Elec-
tricity Smart Meter Data.. In Aaai. 4474–4480.

[18] Yongxin Tong, Yuqiang Chen, Zimu Zhou, Lei Chen, Jie Wang, Qiang Yang,
Jieping Ye, and Weifeng Lv. 2017. The simpler the better: a unified approach to
predicting original taxi demands based on large-scale online platforms. In Pro-
ceedings of the 23rd ACM SIGKDD international conference on knowledge discovery
and data mining. 1653–1662.

[19] Peng Ye, Julian Qian, Jieying Chen, Chen-hung Wu, Yitong Zhou, Spencer
De Mars, Frank Yang, and Li Zhang. 2018. Customized regression model for
airbnb dynamic pricing. In Proceedings of the 24th ACM SIGKDD International
Conference on Knowledge Discovery & Data Mining. 932–940.

[20] Yang You, Igor Gitman, and Boris Ginsburg. 2017. Large batch training of convo-

lutional networks. arXiv preprint arXiv:1708.03888 (2017).

[21] Bowen Yuan, Jui-Yang Hsia, Meng-Yuan Yang, Hong Zhu, Chih-Yao Chang, Zhen-
hua Dong, and Chih-Jen Lin. 2019. Improving ad click prediction by considering
non-displayed events. In Proceedings of the 28th ACM International Conference on
Information and Knowledge Management. 329–338.

[22] Kui Zhao, Junhao Hua, Ling Yan, Qi Zhang, Huan Xu, and Cheng Yang.
2019. A Unified Framework for Marketing Budget Allocation. arXiv preprint
arXiv:1902.01128 (2019).

