1

Spectrum Surveying: Active Radio Map
Estimation with Autonomous UAVs
Raju Shrestha1, Daniel Romero1, and Sundeep Prabhakar Chepuri2
1Department of Information and Communication Technology,
University of Agder, Norway.
2Department of Electrical Communication Engineering,
Indian Institute of Science, India.

2
2
0
2

n
a
J

3
1

]
P
S
.
s
s
e
e
[

2
v
5
2
1
4
0
.
1
0
2
2
:
v
i
X
r
a

Abstract—Radio maps ﬁnd numerous applications in wireless
communications and mobile robotics tasks, including resource
allocation, interference coordination, and mission planning. Al-
though numerous techniques have been proposed to construct ra-
dio maps from spatially distributed measurements, the locations
of such measurements are assumed predetermined beforehand.
In contrast, this paper proposes spectrum surveying, where a
mobile robot such as an unmanned aerial vehicle (UAV) collects
measurements at a set of locations that are actively selected to
obtain high-quality map estimates in a short surveying time.
This is performed in two steps. First, two novel algorithms, a
model-based online Bayesian estimator and a data-driven deep
learning algorithm, are devised for updating a map estimate
and an uncertainty metric that indicates the informativeness
of measurements at each possible location. These algorithms
offer complementary beneﬁts and feature constant complexity
per measurement. Second, the uncertainty metric is used to plan
the trajectory of the UAV to gather measurements at the most
informative locations. To overcome the combinatorial complexity
of this problem, a dynamic programming approach is proposed
to obtain lists of waypoints through areas of large uncertainty
in linear time. Numerical experiments conducted on a realistic
dataset conﬁrm that the proposed scheme constructs accurate
radio maps quickly.

Index Terms—Radio maps, spectrum cartography, UAV com-

munications, deep learning, trajectory planning.

I. INTRODUCTION

Radio maps are functions that provide a certain channel
metric, such as received signal strength, power spectral density,
or channel gain, across a given geographical area. Radio
maps are commonly used in tasks such as network planning,
interference coordination, power control, spectrum manage-
ment, resource allocation, hand-off procedure design, dynamic
spectrum access, and cognitive radio [2], [3], to name a few.
Besides, radio maps are gaining popularity for autonomous
unmanned aerial vehicle (UAV) communications in tasks such
as mission planning [4] or optimal relay deployment in UAV-
assisted networks; see, e.g. [5]–[8]. All
these applications
require methods for accurate radio map construction.

A large number of approaches have emerged to address the
radio map estimation problem. They rely on measurements

Research funded by the Research Council of Norway (IKTPLUSS
grant 280835) and Department of Science and Technology, India. Emails:
{raju.shrestha, daniel.romero}@uia.no, spchepuri@iisc.ac.in. Parts of this
work were presented at the IEEE International Workshop on Machine Learn-
ing for Signal Processing 2020 [1].

acquired by spatially distributed sensors, possibly integrated
into user equipment such as mobile phones,
to construct
radio maps by means of some form of spatial interpolation.
Schemes to construct power maps, which provide the received
signal strength across space, have been developed using krig-
ing [1], [9]–[11], dictionary learning [12], sparse Bayesian
learning [13]–[15], and matrix completion [16]. Power spectral
density (PSD) maps can be estimated using kernel-based learn-
ing [17]–[19], sparse learning [18], and tensor completion [20],
[21]. The problem of estimating channel-gain maps has been
addressed in [22]–[24]. All the aforementioned approaches are
based on interpolation algorithms or rely on modeling propa-
gation phenomena [25]. However, the actual radio propagation
environment is often complex and inappropriate modeling will
generally lead to poor estimation performance. To bypass this
problem, [26]–[29] proposed data-driven approaches where a
deep neural network (DNN) is used to learn the underlying
propagation phenomena such as shadowing, reﬂection, and
diffraction from a dataset of measurements.

All the preceding methods assume that the measurement
locations are given and, as a result, cannot decide where
to measure next, which is necessary in certain contexts.
Speciﬁcally, certain applications such as network planning or
those involving UAV communications demand approaches to
construct radio maps by surveying the channel at the area
of interest with a sensor on board a mobile robot. To this
end, this work puts forth an active sensing method where an
autonomous vehicle, such as a UAV, equipped with a sensing
and communication module collects measurements at a judi-
ciously selected set of locations to efﬁciently construct a high-
quality radio map. In particular, the set of most informative
measurement locations is selected to approximately minimize
the operation time required to attain a certain estimation
accuracy. Towards this purpose, suitable metrics that provide
the uncertainty associated with every spatial location are devel-
oped. Using the collected measurements, the UAV computes
this metric on-the-ﬂy and plans a trajectory accordingly.

The contributions1 of this work are as follows:

1The conference version of this work [1] presents the idea of the online
Bayesian algorithm for model-based uncertainty mapping and spectrum sur-
veying with a UAV. Relative to [1], the present paper additionally proposes a
data-driven uncertainty mapping scheme using a DNN, a new trade-off scheme
for trajectory planning, and extensive empirical validation and comparison
with existing benchmarks through a realistic dataset.

 
 
 
 
 
 
C1) An online Bayesian learning scheme is proposed for joint
radio map estimation and uncertainty mapping with con-
stant complexity per measurement. This is required since
UAVs process measurements as they become available
and update their trajectory accordingly. The proposed
algorithm constitutes an online alternative to the popular
kriging estimator [30], which is grounded on the well-
known Gudmundson shadowing model [31].

C2) Complementing the beneﬁts of the aforementioned online
Bayesian estimator, a data-driven approach for jointly
estimating a power map and uncertainty metric is devel-
oped based on a DNN. As existing DNN-based radio map
estimators,
the proposed algorithm learns propagation
phenomena from a dataset and, therefore, it yields a supe-
rior performance relative to the online Bayesian estimator
at the expense of increasing computational complexity.

C3) A trajectory planning strategy is proposed for measure-
ment acquisition at the most informative locations as
indicated by the uncertainty metrics from C1) or C2).
To reduce the computational complexity of such a task, a
simple waypoint-search approach based on the Bellman-
Ford shortest path algorithm [32] is presented.

The code necessary to reproduce all experiments is available at
https://github.com/uiano/spectrum surveying with UAVs and
a video illustrating a spectrum surveying operation is available
at https://youtu.be/r9zDr4O0Fp8.

The main novelty of this work is twofold: i) this paper pro-
poses data-driven uncertainty mapping in realistic propagation
environments with possibly non-Gaussian channel distribution,
and ii) this paper proposes uncertainty-aware trajectory plan-
ning for spectrum surveying with autonomous UAVs.

The rest of the paper is structured as follows: Sec. II
formulates the problem and outlines the proposed approach.
Secs. III and IV respectively present model-based and data-
driven algorithms for power map estimation and uncertainty
mapping. These algorithms lay the grounds for the uncertainty-
aware trajectory planning scheme in Sec. V. The proposed
scheme is empirically validated in Sec. VI by means of data
obtained from a ray-tracing simulator. Finally, Sec. VII draws
connections with related work and Sec. VIII concludes the
paper.

Notation:|X | denotes the cardinality of set X . The function
(cid:98)x(cid:99) denotes the largest integer less than or equal to x. Bold
uppercase letters denote matrices or tensors, bold lowercase
letters represent column vectors, and non-bold lowercase let-
ters denote scalars. [x]i is the i-th entry of vector x, vec(X)
denotes vectorization of matrix X, [X]i,j is the (i, j)-th entry
of matrix X, and [Y ]i,j,k is the (i, j, k)-th entry of tensor Y .
The Hadamard product is represented by (cid:12) and (cid:107)X(cid:107)F refers
to the Frobenius norm of X.

II. SPECTRUM SURVEYING
This section formulates the problem and outlines the pro-

posed approach.

A. Problem Formulation

Let X ⊂ Rm be the geographical area of interest, where
m is typically 2 or 3, and consider S transmitters, which

2

may correspond to cellular base stations. A power map is a
function r(x) which provides the value of the received power,
also known as signal strength, at every x ∈ X . A UAV
equipped with a communication module capable of measuring
the received power and a positioning system such as GPS
adaptively chooses future measurement locations based on pre-
vious measurements. The power measurements and their loca-
tions are respectively denoted as {˜rτ }t
τ =0, where
˜rτ = r(xτ ) + zτ and zτ represents measurement noise. For
convenience, the measurements up to t + 1 will be arranged as
˜rt (cid:44) [˜r0, . . . , ˜rt] ∈ Rt+1 and Xt (cid:44) [x0, . . . , xt] ∈ Rm×(t+1).
The goal is to determine Xt in order to infer an accurate radio
map as quickly as possible using the measurements collected
at these locations.

τ =0 and {xτ }t

B. Proposed Approach

the future most

To judiciously select

informative loca-
tions, one needs to solve two sub-problems:
P1) Given
{(xτ , ˜rτ ), τ = 0, ..., t}, the task is to ﬁnd an estimate ˆr of
r and an uncertainty metric that represents the uncertainty
associated with each location. Function r is typically referred
to as the true radio map, whereas ˆr is the map estimate. An
algorithm that produces ˆr is termed a map estimator. P2) Using
the uncertainty metric from P1, the second problem involves
planning a trajectory for measurement collection to attain the
desired estimation accuracy as fast as possible.

The following sections will further detail the formulations
of these two problems. Secs. III and IV provide two algorithms
with complementary beneﬁts to address P1, whereas Sec. V
is concerned with P2.

III. MODEL-BASED UNCERTAINTY MAPPING

This section builds upon a widely-used probabilistic shad-
owing model to develop an online Bayesian algorithm for
power map estimation and uncertainty mapping. To ﬁnd a
suitable uncertainty metric, the idea is to obtain the posterior
distribution of r given the measurements. While the mean
of such a distribution provides the minimum mean square
error (MMSE) estimate of r, its variance can be used as
uncertainty metric. This contrasts with most algorithms in
the literature, which just provide estimates of r without any
associated uncertainty metric.

A. Radio Map Model

To simplify the notation, consider a single transmitter with
transmit power PTx. Then, the power received at x ∈ X in
logarithmic units is given by

r(x) = PTx + ¯l(x) − ¯s(x) + w(x),
(1)
where ¯l(x) quantiﬁes free-space path loss and antenna gain,
¯s(x) is the loss due to shadowing, and w(x) is a gain
due to small-scale fading and unmodeled effects. The log-
normal shadowing component ¯s(x) ∼ N (µ¯s, σ2
s ) follows the
Gudmundson correlation model [31], which prescribes that
Cov(¯s(x), ¯s(x(cid:48))) = σ2
s is a constant
and δs is the distance at which the correlation decays to 1/2.

s 2−(cid:107)x−x(cid:48)(cid:107)/δs, where σ2

Furthermore, following [13], w(x) is modeled as N (0, σ2
w)
and assumed independent of w(x(cid:48)) and ¯s(x(cid:48)(cid:48)) ∀x(cid:48), x(cid:48)(cid:48) ∈ X
with x (cid:54)= x(cid:48). For brevity, rewrite (1) as

r(x) = l(x) − s(x) + w(x),

(2)

where l(x) (cid:44) PTx+¯l(x)−µ¯s and s(x) (cid:44) ¯s(x)−µ¯s. Here l(x)
is assumed to be a known deterministic component since i) PTx
and the source location can be assumed known as base stations
in contemporary cellular networks share this information with
the users and ii) µ¯s can be estimted readily from a set of
measurements.

To avoid unbounded complexity for ﬁnding estimates ∀x ∈
X [33, Sec. 6.4],
the map and uncertainty metrics will
be evaluated at a ﬁnite set of arbitrary grid points G (cid:44)
{xG

G−1} ⊂ X . Thus, using (2), one can write

0 , . . . , xG

3

(6)

(7)

covariance, let Cov[sG] (cid:44) CsG and write
Cov[sG, ˜rt] = E[sG(˜rt − lt)(cid:62)]

= E[sG(−st + wt + zt)(cid:62)]
= − E[sGs(cid:62)

t ] (cid:44) −CsG ,st

as well as

Cov[˜rt] = E[(˜rt − lt)(˜rt − lt)(cid:62)]

= E[(−st + wt + zt)(−st + wt + zt)(cid:62)]
wIt+1 + σ2
= Cov[st] + σ2
(cid:44) Cst + σ2
w + σ2

w,zIt+1,

z It+1

w,z = σ2

where σ2
z . Here, the matrices CsG , CsG ,st and
Cst can be obtained from the covariance function introduced
in Sec. III-A. Applying [35, Th. 10.2] to this joint distribution,
it follows that p(sG|˜rt) = N (sG|µsG |˜rt, CsG |˜rt), with

rG (cid:44) [r(xG

0 ), . . . , r(xG

G−1)](cid:62) = lG − sG + wG,

(3)

µsG |˜rt = Cov[sG, ˜rt]Cov−1[˜rt](˜rt − E[˜rt])

0 ), . . . , l(xG

where lG (cid:44) [l(xG
s(xG

G−1)](cid:62), sG (cid:44) [s(xG
G−1)](cid:62).

0 ), . . . ,

0 ), . . . , w(xG

G−1)](cid:62), and wG (cid:44) [w(xG
The UAV collects a power measurement ˜rτ = r(xτ ) + zτ
is at position xτ ∈ X , τ = 0, 1, . . ., where
when it
zτ ∼ N (0, σ2
z ) models the measurement error and is assumed
independent across τ and independent of w(x) and s(x(cid:48)) ∀x,
x(cid:48) ∈ X . For notational purposes, let

˜rt = lt − st + wt + zt,

(4)

where lt (cid:44) [l(x0), . . . , l(xt)](cid:62), st (cid:44) [s(x0), . . . , s(xt)](cid:62),
wt (cid:44) [w(x0), . . . , w(xt)](cid:62), and zt (cid:44) [z0, . . . , zt](cid:62).

B. Batch Bayesian Estimation for Uncertainty Mapping

To facilitate understanding, the batch version of the problem
is described before presenting the proposed online algorithm.
The batch problem, commonly referred to as kriging [34], is
to obtain the posterior distribution p(rG|˜rt, Xt) given ˜rt and
Xt. Applying a well-known result in estimation theory [35,
Ch. 10], the mean of such a posterior distribution provides the
MMSE estimate of r(x) at the grid points. On the other hand,
the covariance of this posterior captures the uncertainty about
the true rG after observing ˜rt and Xt.

It is straightforward to establish that rG is conditionally
independent of ˜rt given sG using the model represented by
(3) and (4). As a result, it follows that

(cid:90)

(cid:90)

p(rG|˜rt) =

=

p(rG, sG|˜rt)dsG

p(rG|sG)p(sG|˜rt)dsG,

(5)

where Xt has been omitted for brevity. From (3) and the fact
that lG is deterministic, it clearly follows that the ﬁrst factor
in the integrand is p(rG|sG) = N (rG|lG − sG, σ2
wIG). To
obtain the second factor p(sG|˜rt), observe that sG and ˜rt are
jointly Gaussian. In particular, one can obtain the parameters
of their joint distribution p(sG, ˜rt) as follows. Firstly, the mean
vectors are E[sG] = 0 and E[˜rt] = lt. Next, to compute the

= −CsG ,st(Cst + σ2

w,zIt+1)−1(˜rt − lt)

(8)

CsG |˜rt = Cov[sG] − Cov[sG, ˜rt]Cov−1[˜rt] Cov[˜rt, sG]

= CsG − CsG ,st(Cst + σ2

w,zIt+1)−1Cst,sG ,

(9)

sG ,st

where Cst,sG (cid:44) C(cid:62)
. Finally, applying [33, eq. (2.115)]
to obtain the conditional marginal in (5) yields p(rG|˜rt) =
(cid:44) lt − µsG |˜rt and
N (rG|µrG |˜rt, CrG |˜rt) with µrG |˜rt
wIG + CsG |˜rt, thereby solving the batch problem.
CrG |˜rt
The map estimate is, therefore, ˆrG = µrG |˜rt and CrG |˜rt
captures the uncertainty in this estimate.

(cid:44) σ2

C. Online Bayesian Estimation for Uncertainty Mapping

Although the solution described in Sec. III-B could in
principle be utilized to determine the trajectory of the UAV,
it suffers from a limitation: since (9) involves inverting a
(t + 1) × (t + 1) matrix, the complexity per uncertainty com-
putation will grow as more measurements become available,
eventually becoming unaffordable. Thus, it is more convenient
to adopt an online approach where each new measurement
is utilized to reﬁne the previous posterior. Speciﬁcally, con-
sider the problem of ﬁnding p(rG|˜rt, Xt) given the previous
posterior p(rG|˜rt−1, Xt−1) and the most recent measurement
(˜rt, xt) with a computational complexity that does not grow
with t.

To address this problem, it is convenient to decompose
p(rG|˜rt) into the previous posterior p(rG|˜rt−1) and a term
that depends on the current measurement but not on the
previous ones. However, it can be easily seen that such a
factorization is not possible due to the posterior correlation
among measurements. To bypass this difﬁculty, the central
idea in the proposed online learning scheme is to use G to
summarize the information of all past measurements. Mathe-
matically, this can be formulated as the assumption that ˜rt
and ˜rt−1 are conditionally independent given rG. That is,
when rG is known, the past measurements ˜rt−1 do not provide
extra information about ˜rt. The error that this approximation
introduces, which can be reduced by adopting a denser grid,
pays off since it enables online estimation. Besides, Sec. VI
demonstrates that this error is negligible.

From this assumption and Bayes’ rule, it follows that

p(rG|˜rt) = p(rG|˜rt, ˜rt−1) ∝ p(˜rt, ˜rt−1|rG)p(rG)

= p(˜rt|rG)p(˜rt−1|rG)p(rG) = p(˜rt−1, rG)p(˜rt|rG)
= p(rG|˜rt−1)p(˜rt−1)p(˜rt|rG) ∝ p(rG|˜rt−1)p(˜rt|rG),
(10)

where ∝ denotes equality up to a scaling constant.
In
this context, a constant
is understood as a positive term
that does not depend on rG. The term p(rG|˜rt−1) =
N (rG|µrG |˜rt−1, CrG |˜rt−1) is obtained from the previous it-
eration. To ﬁnd p(˜rt|rG), note that ˜rt and rG are jointly
Gaussian. It follows from [35, Th. 10.2] that p(˜rt|rG) is
Gaussian distributed with parameters

E[˜rt|rG] = E[˜rt] + Cov[˜rt, rG]Cov−1[rG](rG − E[rG])
= l(xt) + E[(−s(xt) + w(xt) + zt)(−sG + wG)(cid:62)]
× E−1[(−sG + wG)(−sG + wG)(cid:62)](rG − lG)

= a(cid:62)

t rG + bt

(11)

= σ2

Var[˜rt|rG] = Var[˜rt] − Cov[˜rt, rG]Cov−1[rG] Cov[rG, ˜rt]
w,z − (Cs(xt),sG + Cw(xt),wG )(CsG + σ2

s + σ2
× (Cs(xt),sG + Cw(xt),wG )(cid:62) (cid:44) λt,
where the quantities at (cid:44) (CsG + σ2
wIG)−1(Cs(xt),sG +
Cw(xt),wG )(cid:62) and bt (cid:44) l(xt)−(Cs(xt),sG +Cw(xt),wG )(CsG +
wIG)−1lG have been deﬁned along with Cs(xt),sG (cid:44)
σ2
Cov[s(xt), sG] and Cw(xt),wG (cid:44) Cov[w(xt), wG]. Clearly,
the latter contains a single non-zero entry if xt ∈ G and
vanishes otherwise.

wIG)−1
(12)

Finally, (10) and [33, eq. (2.116)] imply that p(rG|˜rt) =

N (rG|µrG |˜rt, CrG |˜rt) with
CrG |˜rt = (C−1

rG |˜rt−1

+ (1/λt)ata(cid:62)

t )−1

= CrG |˜rt−1 −

and

CrG |˜rt−1 ata(cid:62)
λt + a(cid:62)

t CrG |˜rt−1 at

t CrG |˜rt−1

(13)

µrG |˜rt = CrG |˜rt

(cid:20) ˜r(xt) − bt
λt

at + C−1

rG |˜rt−1

(cid:21)

µrG |˜rt−1

.

(14)

The sought algorithm applies the update equations (13) and
(14) every time a new measurement is acquired, where the
wIG and
initializations are given by CrG |˜r−1
(cid:44) lG. Unlike the batch estimator from Sec. III-B,
µrG |˜r−1
Equation (14) provides an estimator ˆrG
that
t
changes with t, gradually accommodating new measurement
information as it is acquired. Observe that the computational
complexity is now constant per t, and therefore this algorithm
constitutes a practical estimator for spectrum surveying.

(cid:44) CsG + σ2

(cid:44) µrG |˜rt

IV. DATA-DRIVEN UNCERTAINTY MAPPING

The preceding section described techniques to estimate
radio maps based on a shadowing model. Although the adopted
formulation led to a practical online estimator, the quality of
the map estimate may be limited if the actual propagation
conditions do not adhere to this model. For this reason, this

4

section adopts a data-driven perspective where the propagation
phenomena are implicitly learnt from a training dataset of
historical measurements collected in different environments.
Speciﬁcally, a deep learning approach is pursued here to jointly
obtain a radio spectral map estimate and uncertainty metric.

A. Input and Output Representation

The proposed estimator comprises a deep neural network
that takes information about the measurements at its input
and returns a map estimate and an uncertainty map at the
output. This section describes how these inputs and outputs are
represented along the lines of [20], [26] to accommodate the
variable number of measurements. To this end, it is necessary
to arrange the grid points as an Ny × Nx rectangular grid.
By doing so, each grid point xG
g in the notation of the
previous sections can be identiﬁed with a row and a column
the grid can be written as
in the rectangular grid. Thus,
G = {xG
i,j, i = 0, 1, . . . , Ny − 1, j = 0, 1, . . . , Nx − 1},
g = xG
where xG
i,j if g = iNy + j. In this way, one can
arrange the true received power values at
the grid points
in matrix R ∈ RNy×Nx , whose (i, j)-th entry is given by
[R]i,j = r(xG

i,j).

Similarly, the measurements collected until a given time
instant can be represented by a matrix of the same dimension
Ny × Nx by associating each measurement location with the
nearest grid point. In particular, let Ti,j (cid:44) {τ : (cid:107)xG
i,j −xτ (cid:107)2 ≤
(cid:107)xG
i(cid:48),j(cid:48) − xτ (cid:107)2, ∀i(cid:48), j(cid:48)} be a set containing the indices of
the measurement locations assigned to xG
i,j. The targeted ma-
trix representation involves associating with xG
i,j the average
i,j = (1/|Ti,j|) (cid:80)
˜r(t)
τ ∈Ti,j ∩{0,...,t} ˜rτ if |Ti,j ∩ {0, . . . , t}| > 0
and ˜r(t)
i,j = 0 otherwise. The result of aggregating all measure-
ments in ˜rt can be expressed in matrix form as ˜Rt ∈ RNy×Nx ,
where [ ˜Rt]i,j = ˜r(t)
i,j . It is also convenient to introduce the
notation Ωt = {(i, j) : |Ti,j ∩ {0, . . . , t}| > 0} ⊂ {0, ..., Ny −
1} × {0, ..., Nx − 1} to denote a set containing the indices of
the grid points associated with at least one measurement.

To accommodate general scenarios, deﬁne B ⊂ {0, ..., Ny −
1} × {0, ..., Nx − 1} to be the set of indices of the grid
points that lie inside buildings or no-ﬂy zones. Furthermore,
to encode the information in Ωt and B, a mask Mt ∈
{1, 0, −1}Ny×Nx is constructed [26], where [Mt]i,j = 1 if
(i, j) ∈ Ωt, [Mt]i,j = −1 if (i, j) ∈ B, and [Mt]i,j = 0
otherwise. This mask is concatenated to ˜Rt along the third
dimension to form ˇRt ∈ RNy×Nx×2 as the tensor input to the
network.

Regarding the output, functions f R : RNy×Nx×2 →
RNy×Nx and f V : RNy×Nx×2 → RNy×Nx will be used to
denote the radio map estimate and uncertainty metric obtained
by the neural network, which are thus encoded as Ny × Nx
matrices. The map estimate provided by the network given the
t = f R( ˇRt). Thus,
measurements in ˜rt is therefore given by ˆrG
every time a new measurement is collected, it is necessary to
update ˇRt and evaluate the output of the network (forward
pass).

5

average, which results in

arg min
f R

E[(cid:107)R − f R( ˇR)(cid:107)2
F ]

≈ arg min
f R

1
D

D−1
(cid:88)

d=0

(cid:107)R(d) − f R( ˇR

(d)

)(cid:107)2
F .

(16)

On the other hand, the optimization in the left-hand side of
(15) is over an arbitrary function f R. Unfortunately, solving
such a problem is only tractable in very speciﬁc circumstances.
Instead, one generally needs to constrain the feasible set of
functions e.g., to those parameterized by a neural network. In
θ : θ ∈ RP } and
this case, one can optimize over the set {f R
ﬁnd

ˆθ = arg min
θ

1
D

D−1
(cid:88)

d=0

(cid:107)R(d) − f R

θ ( ˇR

(d)

)(cid:107)2
F .

(17)

Clearly, if the set {f R
D is sufﬁciently high, then f R
ˆθ
estimator.

θ : θ ∈ RP } is sufﬁciently large and
will be close to the MMSE

As an uncertainty metric, one can think of estimating the
posterior variance, along the lines of Sec. III. To this end,
note that the matrix collecting the posterior variances for all
grid points is given by the conditional mean of the residual
(R − E[R| ˇR])2, where (.)2 denotes entry-wise square. The
key is to generalize and apply (15) in the reverse direction as
before, which yields

Var[R| ˇR] = E

(cid:104)

(R − E[R| ˇR])2| ˇR

(cid:105)

= arg min
(f V )2

E (cid:107)(R − E[R| ˇR])2 − (f V ( ˇR))2(cid:107)2
F ,

(18)

where f V is chosen to denote posterior standard deviation
rather than posterior variance for reasons that will become
clear later. If E[R(d)| ˇR
] were known, one could adopt the
approach in (17) to solve

(d)

ˆθ = arg min
θ

1
D

D−1
(cid:88)

(cid:107)(R(d) − E[R(d)| ˇR

(d)

])2

d=0

− (f V

θ ( ˇR

(d)

))2(cid:107)2
F .

(19)

(d)

] is unknown. However, as
, where ˆθ is given by (17).
] in (19) with
) and add the objective in (17) as an additional term

In practice, though, E[R(d)| ˇR
argued earlier, it is close to f R
ˆθ
Thus, it makes sense to replace E[R(d)| ˇR
θ ( ˇR
f R
that promotes that f R
This gives rise to

θ is close to E[R(d)| ˇR

(d)

(d)

(d)

].

ˆθ = arg min
θ

(cid:110)

(1 − α)

1
D

D−1
(cid:88)

d=0

(cid:107)R(d) − f R

θ ( ˇR

(d)

)(cid:107)2
F

+ α

1
D

D−1
(cid:88)

d=0

(cid:107)(R(d) − f R

θ ( ˇR

(d)

))2 − (f V

θ ( ˇR

(d)

))2(cid:107)2
F

(cid:111)
,

(20)

where α ∈ [0, 1] can be adjusted to balance the trade-off
between learning f R
θ . Observe that the second term

θ and f V

Fig. 1: Histogram of true maps from the Rossyln dataset.

B. Training Loss Design

(d)

(d)

, R(d))}D−1

The goal now is to design a suitable training loss to
learn the functions f R and f V introduced in Sec. IV-A. Let
{( ˇR
d=0 represent pairs of measurements and true
power maps collected in D environments, where ˇR
and
R(d) are respectively of the form of ˇRt and R described in
Sec. IV-A. Subscript t is omitted to simplify the notation.
Given these training pairs, one could think of adopting a
negative log-likelihood loss function to learn f R and f V as the
posterior mean and posterior standard deviation of r whenever
the distribution of r evaluated at an arbitrary set of locations is
jointly Gaussian [36]. However, this is not generally the case
in practice. To see this, Fig. 1 depicts a histogram of r(x) for
the Rossyln dataset [26] described in Sec. VI. It is observed
that the distribution is markedly non-Gaussian. For this reason,
an alternative loss function is investigated next.

The idea is to rely on the well-known relation between the
MMSE estimator and the conventional square loss. This is
explained in detail next when designing the learning approach
for f R with the purpose of laying the grounds for f V .
Speciﬁcally, recall that the MMSE estimator of R, i.e., the
minimizer of the mean square error (MSE) between a target
R and its estimate, is the conditional mean E[R| ˇR] [35, Ch.
10]

arg min
f R

E[(cid:107)R − f R( ˇR)(cid:107)2

F ] = E[R| ˇR],

(15)

where the right-hand side is seen as a function of ˇR and,
to simplify the exposition, it is assumed that there are no
buildings in the map. The case with buildings is more involved
since measurements cannot be collected indoors. For this
reason, it is assumed that r is not deﬁned inside buildings.
The case with buildings is studied later.

The left-hand side of (15) does not directly yield an esti-
mator for two reasons. On the one hand, the expectation in
(15) is over random pairs ( ˇR, R), but their distribution is not
known. Thus, one can replace the expectation with a sample

18016014012010080Power [dBm]0.010.020.030.04DensityHistogram of true mapsin (20) involves squares of squares of its arguments. This
may render its scale very different from the one of the ﬁrst
term, which may produce numerical problems and hinder the
selection of α. To alleviate such issues, f V
θ is trained to learn
the absolute residual |Rd − f R
)| rather than the squared
))2, where | · | denotes entry-wise
residual (R(d) − f R
absolute value. This suggests training the DNN by solving

θ ( ˇR

θ ( ˇR

(d)

(d)

ˆθ = arg min
θ

1
D

D−1
(cid:88)

d=0

(cid:110)

(1 − α)(cid:107)∆R

d,θ(cid:107)2

F + α(cid:107)∆V

d,θ(cid:107)2
F

(cid:111)

, (21)

(d)

θ ( ˇR

(d)

d,θ| −

), and ∆V

d,θ = |∆R

d,θ = R(d) − f R
where ∆R
θ ( ˇR
f V
).
Several improvements of (21) are discussed next. Let us
begin by noting that a good map estimate must be close to
the measurements at the corresponding measurement locations,
and that a reasonable uncertainty metric is expected to yield
low values near measurement
locations. To promote this
behavior, one may assign a heavier weight to the residuals
at the measurement locations. Let set Ω(d) contain the indices
of the measurement locations of the d-th training example and
let λ ∈ [0.5, 1] represent a scaling factor. In this case, one may
consider solving

ˆθ = arg min
θ

1
D

D−1
(cid:88)

d=0

(cid:110)

(1 − α)(cid:107)∆R

d,θ (cid:12) Kd(cid:107)2
F

+ α(cid:107)∆V

d,θ (cid:12) Kd(cid:107)2
F

(cid:111)
,

(22)

where Kd ∈ RNy×Nx has entries [Kd]i,j = λ if (i, j) ∈ Ω(d)
and [Kd]i,j = 1 − λ otherwise. If λ = 0.5, the minimizer of
(22) boils down to the minimizer of (21). Setting λ > 0.5
increases the focus on observed locations.

For scenarios with buildings and no-ﬂy zones, let Bd repre-
sent the set of indices of the grid points inside buildings in the
d-th training example. Since no measurements can be acquired
indoors, i.e. Bd ∩ Ω(d) = ∅, it would make no sense to ﬁt the
DNN to any value there. In other words, one can assign a zero
weight to the residuals inside buildings by setting [Kd]i,j = λ
if (i, j) ∈ Ω(d), [Kd]i,j = 0 if (i, j) ∈ Bd, and [Kd]i,j = 1−λ
otherwise.

C. Network Architecture

The previous section assumed a generic family of functions
θ ), θ ∈ RP }. The form of these functions is next
{(f R
θ , f V
speciﬁed by developing a network architecture suitable for
uncertainty-aware radio map estimation.

and gV
θV

At the high level, the two outputs of the DNN will be
implemented here using a separate subnetwork with dedicated
parameters. Speciﬁcally, let these subnetworks be denoted by
gR
, whose weights are collected respectively in θR
θR
takes ˇR as its input and returns
and θV . Subnetwork gR
θR
an estimate of R as its output. The adopted architecture for
this subnetwork is a convolutional autoencoder given its well-
documented merits in radio map estimation [26].
An autoencoder is a type of neural network gR
θR

that can be
( ˇR) = ¯Dθ ¯D ( ¯Eθ ¯E ( ˇR)), where

expressed as [37, Ch. 14]: gR
θR

6

Fig. 2: A high level architecture of a deep radio map and
uncertainty estimator (DRUE).

functions ¯Eθ ¯E and ¯Dθ ¯D are known respectively as encoder
and decoder and θ ¯E and θ ¯D denote their associated weight
vectors. The output of the encoder ζ = ¯Eθ ¯E ( ˇR) ∈ RNζ ,
which is known as the code or vector of latent variables, is of
a (possibly much) smaller dimension Nζ than the dimension of
ˇR. Training the autoencoder forces the encoder to condense or
summarize the information of ˇR into just Nζ variables. This is
useful to exploit the prior information that the input ˇR lies on
a low-dimensional manifold embedded in a high dimensional
space. This is the case of radio maps, as established in [26].
The reason for implementing an autoencoder using convo-
lutional layers [38] is the ability of the latter to efﬁciently
learn and exploit spatial correlation, as reﬂected in their so-
called translational equivariance property. As detailed in [26],
this is highly beneﬁcial in the case of radio map estimation,
where the signal strength is substantially correlated at nearby
locations.

Having presented the implementation of f R

θ , the next step
is to implement f V
θ . To this end, it is useful to think of which
information must be fed at the input of gV
. On the one
θV
hand, the information that ˇR conveys about the measurement
locations is intuitively relevant to determine the uncertainty
metric since points that lie far away from the measurement
locations are expected to be assigned a greater uncertainty.
On the other hand, the map estimate obtained by gR
may
θR
also be useful for uncertainty metric computation since it
provides information about the spatial variability of the map.
For this reason,
makes use of both
( ˇR) and ˇR, which leads to a cascaded architecture where
gR
θR
θ ( ˇR) = gV
θ ( ˇR) = gR
f R
θV
θR
Fig. 2 depicts the high-level architecture of the proposed
deep convolutional neural network, which will be termed
deep radio map and uncertainty estimator (DRUE) hereafter.
Subnetwork gV
is also implemented as a convolutional au-
θV
toencoder since it is empirically observed that this yields a
satisfactory performance; see Sec. VI.

the subnetwork gV
θV

( ˇR) and f V

( ˇR), ˇR).

(gR
θR

Implementation details of DRUE are shown in Fig. 3. The
encoder comprises mostly 2D convolutional and max pool-

ConcatenateSubnetworkSubnetwork7

The uncertainty in the target map at grid point xG

g after
observing ˜rt will be denoted by ug(˜rt) ∈ R+. In the case of
the Bayesian estimators from Sec. III, ug(˜rt) will be given by

ug(˜rt) = (cid:2)CrG |˜rt

(cid:3)
g,g

(23)

if there is a single transmitter. When there are multiple
transmitters, the values of the right-hand side of (23) for all
transmitters can be averaged to obtain a single value of ug(˜rt)
per g. For the estimator in Sec. IV, ug(˜rt) is given by

ug(˜rt) = (cid:2)vec(f V

θ ( ˇRt))(cid:3)
g,

(24)

where ˇRt is obtained from ˜rt as described in Sec. IV-A. In this
case, the estimator directly provides the aggregate uncertainty
for all transmitters and, therefore, no averaging is required.

Finally, as a performance metric, it is convenient to deﬁne
the total uncertainty of the map after observing ˜rt as the
spatial average of the point-wise uncertainty values. Since the
uncertainty metric is only meaningful outside buildings or no-
ﬂy zones (cf. Sec. IV-B), this average becomes

u(˜rt) (cid:44) 1
| ¯B|

(cid:88)

g∈ ¯B

ug(˜rt),

(25)

where ¯B is the complement of the set B that contains the
indices of the grid points inside buildings or no-ﬂy zones; see
Sec. IV-A.

A. Trajectory Planning

Ideally, one would wish to plan a trajectory for measurement
collection such that the error in the map estimate decreases
as quickly as possible. However, knowing the error requires
knowing the true map, which is not possible in practice.
Instead, one may use the uncertainty metric to approximate
the optimal trajectory. The intuition is that its value is large
for those candidate locations where a measurement would be
highly informative. Collecting measurements at those locations
is therefore expected to greatly reduce the error. This means
that
the trajectory of the UAV must pass through those
locations where the uncertainty is high.

Finding such a trajectory is however challenged by the fact
that the uncertainty metric changes as new measurements are
collected and these changes cannot be generally predicted.
Thus, the trajectory of the UAV should be computed on-
the-ﬂy as measurements are acquired. However, updating the
trajectory with the reception of every new measurement may
be too costly and may lead to erratic behavior. A more
sensible alternative is to adopt a receding horizon approach
that updates the trajectory every tupd measurements. If tupd
is sufﬁciently small, it makes sense to assume that ug(˜rt)
remains approximately constant between consecutive updates
at all grid points except where a measurement is collected, say
at xG
g0 , in which case ug0 (˜rt) becomes 0. This is because the
uncertainty at a measured location is expected to be 0. From

Fig. 3: A detailed view of DRUE based on an autoencoder
architecture. DRUE has two subnetworks gR
, where
θR
each subnetwork is a fully convolutional autoencoder with an
identical structure.

and gV
θV

ing layers whereas the decoder comprises 2D convolutional
transpose layers, also known as a deconvolutional
layers,
and up-sampling layers. Leaky rectiﬁed linear units (Leaky
ReLUs) [39] are utilized as activations in all convolutional
and deconvolutional layers except in the output layer of gV
,
θV
which utilizes an exponential [40] activation to guarantee
the non-negativity of the uncertainty. Each convolutional and
deconvolutional layer has a kernel size of 4 × 4, a stride of
1, and same padding. Max pooling layers have a pool size
of 2 and a stride of 2, whereas upsampling layers have an
upsampling factor of 2.

V. UNCERTAINTY-AWARE TRAJECTORY PLANNING

The uncertainty metrics provided by the estimators in
Secs. III and IV are used in this section to develop a path
planning scheme for measurement collection with a UAV.

Conv2D_1_1Conv2D_2_1Conv2D_3_1Maxpool2DMaxpool2DConv2D_7Conv2D_8Conv2D_9Maxpool2DMaxpool2DConv2D_10Conv2D_10_1Conv2DT_10Conv2DT_10_1Upsampling2DUpsampling2DConv2DT_9Conv2DT_8Conv2DT_7Conv2DT_9_1Conv2DT_8_1Conv2DT_7_1Upsampling2DUpsampling2DConv2DT_4Conv2DT_5Conv2DT_6Conv2DT_4_1Conv2DT_5_1Conv2DT_6_1Upsampling2DUpsampling2DConv2DT_3Conv2DT_2Conv2DT_1Conv2DT_3_1Conv2DT_2_1Conv2DT_1_1Conv2DT_out_1Conv2DT_out_2Conv2D_4_1Conv2D_5_1Conv2D_6_1Conv2D_7_1Conv2D_8_1Conv2D_9_1Conv2D_1Conv2D_2Conv2D_3 Maxpool2DMaxpool2DConv2D_4Conv2D_5Conv2D_6Concatenate#Filters:128 #Filters:256 #Filters:512 #Filters:1024 #Filters:1024 #Filters:512 #Filters:256 #Filters:128 #Filters:1 (25), measuring at location xτ = xG

g yields

u(˜rt+tupd) ≈ u(˜rt+tupd−1) −

ug(˜rt+tupd−1)
G
ug(˜rτ )
G

.

t+tupd−1
(cid:88)

τ =t

≈ . . .

(26)

≈ u(˜rt) −

locations xG

Under this approximation, those trajectories for which u(˜rt)
decreases quickly are those where measurements are collected
g with high ug(˜rt), which agrees with the
at
intuition presented at the beginning of this section. If tupd
were so large that it were possible to collect a measurement
at all grid locations, then one could think of formulating this
problem as a discounted reward travelling salesman problem
[41]. However, this kind of problems is known to be NP-hard;
see e.g. [41], [42] and references therein. Thus, one could think
of applying for example the heuristic in [41]. Nonetheless,
such a task involves high complexity, which would not be
motivated given the approximation error entailed by adopting
such a large tupd; recall that the approximation in (26) applies
only for small tupd. This would also mean that the entire
trajectory would be planned using the initial uncertainty metric
values and therefore it would not be adaptive. Besides, its
complexity would render this approach inappropriate for real-
time UAV operations with limited energy and computational
power.

Thus, it is preferable to adopt an alternative approach which
alternatingly updates the uncertainty metric and plans a short
trajectory through areas of high uncertainty. To plan this
trajectory, the idea here will be to set a destination as the
grid point with the highest local uncertainty and then plan a
route to that destination through points with large uncertainty.
Assume without loss of generality that the destination and
trajectory are computed at t = tI. Thus, the destination is
given by xF (cid:44) xG

g∗ , where

g∗ (cid:44) arg max
g∈ ¯B

ug(˜rtI).

(27)

To design the route from the current location to xF, it is
necessary to deﬁne a cost function that promotes trajectories
through high uncertainty locations. Let ct(x) represent the cost
associated with location x after observing ˜rt and deﬁned in
such a way that the higher the uncertainty value, the lower
the cost at that location. Since the uncertainty values provided
by the estimators in Secs. III and IV are associated only with
grid points, it is natural to set the cost of a location based
on the uncertainty of the nearest grid point. In particular, the
cost ct(x) will be set to be ct(x) = φ(ug(˜rt)), where g =
arg ming∈ ¯B (cid:107)x − xG
g (cid:107)2 and φ(.) is a non-negative decreasing
function. With this deﬁnition, one could in principle set the
cost of a trajectory X = [xtI, . . . , xtF ] to be (cid:80)tF
ct(xτ ),
which would assign a high cost to those trajectories through
low uncertainty areas, as desired. However, this would not
account for the distance between measurement points. Thus,
it is more appropriate to let this cost be

τ =tI

C(X) =

tF(cid:88)

(cid:90) xτ

τ =tI+1

xτ −1

ct(x)dx.

(28)

8

Although this cost may be convenient for ﬁnding trajectories
through regions of high uncertainty, it may well happen that
the trajectory becomes too wiggly and, possibly, too long.
This means that the values of the uncertainty metric used
when planning the trajectory may become obsolete, i.e., the
approximation error of (26) may become too large, which
would lead to highly suboptimal trajectories. For this reason,
it may be sensible to account also for the time it takes to reach
the destination. To this end, let T (X) be the time that the UAV
needs to follow a trajectory X. A reasonable simpliﬁcation is
that the UAV moves at constant speed v and, therefore,
tF(cid:88)

(cid:107)xτ − xτ −1(cid:107)2.

(29)

T (X) =

1
v

τ =tI+1

Observe that if one minimized T (·) rather than C(·), the
resulting trajectory would be the shortest path between the
current position and the destination xF. Thus, there clearly ex-
ists a trade-off between minimizing T (·) and C(·). A “sweet-
spot” can be found by properly choosing X to minimize their
weighted sum

minimize
X

(1 − η)T (X) + ηC(X)

(30)

s.t.: xtI = xI, xtF = xF, xt /∈ BX , ∀t,
where BX represents the set containing the building locations
and no-ﬂy zones, and the smaller the value of η ∈ [0, 1],
the shorter the completion time but also the lower the total
uncertainty of the trajectory. Since the UAV is ﬂying with
constant velocity v, problem (30) reads as

minimize
X

tF(cid:88)

(cid:90) xτ

τ =tI+1

xτ −1

(cid:16) 1
v

(1 − η) + ηct(x)

(cid:17)

dx

(31)

s.t.: xtI = xI, xtF = xF, xt /∈ BX , ∀t.

it

is convenient

To solve (31),

to discretize the set of
candidate measurement locations xτ , as customary in con-
temporary route planners [43], [44]. Although more general
sets can be used, for simplicity, it is assumed from now on
that the measurement locations must lie on the grid G. In that
case, if xτ and xτ −1 are adjacent horizontally, vertically, or
diagonally, then the integral term in (31) is given by

(cid:90) xτ

xτ −1

(cid:16) 1
v

(1 − η) +

(cid:16) 1
v

(1 − η) + ηct(x)

(cid:17)

dx =

(ct(xτ ) + ct(xτ −1))

(cid:17)

(32)

η
2

(cid:107)xτ − xτ −1(cid:107)2

since, by deﬁnition, ct(·) is a piecewise constant function.

With this simpliﬁcation, problem (31) becomes a shortest
path problem and, therefore, can be solved with classical algo-
rithms such as the well-known Bellman-Ford algorithm [32].
The transition costs are given by (32). To sum up, the UAV
iteratively sets a destination using (27) and plans a trajectory
using (31). Observe that it is possible that the number of
measurements of the resulting trajectory is greater than tupd
since the opposite is not enforced by (31). In that case, the
UAV may just follow the ﬁrst tupd points indicated by the
trajectory and replan afterwards. This would ensure that the
uncertainty values do not become obsolete.

Finally, depending on the adopted estimator, it is possible
that the uncertainty metric may signiﬁcantly change between
updates. Since the trajectory will depend on the uncertainty
metric, it may be convenient to smooth ug(˜rt) to avoid sudden
changes in the trajectory. To this end, one can perform a
running average as follows:

¯ug(˜rt) = ug(˜rt)β + ¯ug(˜rt−1)(1 − β),

(33)

where β ∈ (0, 1] is a smoothing factor. Clearly, the lower β,
the more dependent on historical uncertainty is ¯ug(˜rt).

VI. EXPERIMENTS

This section presents numerical results to evaluate the

performance of the proposed algorithms.

Spectrum surveying is carried out with a UAV that ﬂies at
a constant height to construct 2D power maps (m = 2). The
region of interest is discretized into an Ny × Nx = 32 × 32
rectangular grid with grid point spacing of 3 m in both
dimensions. Two datasets are considered. In the Gudmundson
dataset, the receive power is generated using the model in
Sec. III-A using two transmitters with power PTx = 10 dBm
and height 20 m placed uniformly at random in X . The
path loss exponent is 2, the carrier frequency is 2.4 GHz,
and antennas are isotropic. To focus on the effects of the
shadowing, σ2
w and σ2
z are set to 0. The shadowing component
is generated with δs = 50 m, σ2
s = 10, and µ¯s = 0. The
other dataset, referred to as the Rosslyn dataset, is the one
from [26], where maps are generated using the commercial
3D ray-tracing software Wireless Insite. The so-called urban
canyon model is used with 6 reﬂections and 2 diffractions. 42
large maps (40 for training and 2 for testing) are generated in
a square region of 700 m side in the downtown of Rosslyn,
Virginia, each one with a transmitter operating at 2.4 GHz
and placed at a different location. To generate each training
or testing map, an Ny × Nx patch is extracted from two of
these large maps at the same position and added. For both
datasets, measurements off the grid are obtained via cubic
spline interpolation.

DRUE was implemented in TensorFlow with a latent di-
mension of 4 × 4 = 16. The Adam optimization algorithm
[45] is used for training the network with a constant learning
rate of 10−5 and a batch size of 64. Initially, DRUE is trained
with α = 0.5, then with α = 0 (i.e., only layers of gR
are
θR
trainable), and ﬁnally with α = 1 (i.e., only layers of gV
are
θV
trainable). Furthermore, for each training map, the number of
measurements is drawn uniformly at random between 1 and
100 with measurement locations drawn uniformly at random
over the grid.

To evaluate the performance of the considered schemes, two
metrics are utilized. One is the root mean square error (RMSE)

RMSEt =

(cid:115)

E{(cid:107)D ¯B(rG − ˆrG

t )(cid:107)2
2}

Tr(D ¯B)

(34)

where D ¯B is a diagonal matrix with ones and zeros that sets
to 0 all entries of rG − ˆrG
t corresponding to grid points inside
buildings or no-ﬂy zones and ˆrG
is given in Secs. III-C and
t
IV-A. The expectation averages across maps and measurement

9

Fig. 4: Comparison of the proposed estimators with the
existing state-of-the-art for the maps generated from the Gud-
mundson dataset. The batch kriging and the proposed online
Bayesian estimators know the mean power of the channels
while the others do not (δs = 50 m, σ2

s = 10, and µ¯s = 0).

locations. The other metric is the total uncertainty deﬁned in
(25).

A. Radio Map Reconstruction

This section corroborates the ability of

the proposed
schemes to estimate radio maps. To focus on estimation
aspects, no route planning is considered in this section. In-
stead, measurement locations are chosen uniformly at ran-
dom throughout the area. The proposed online Bayesian and
data-driven DRUE algorithms are compared here with two
competitors, namely the multikernel algorithm in [18] and
K-nearest neighbors (KNN) [46]. The multikernel algorithm
is implemented with regularization parameter 10−7 and 15
Gaussian kernels with bandwidth parameter uniformly spaced
between 1 and 200 m. The KNN algorithm is implemented
with K = 5 nearest neighbors.

Fig. 4 shows the RMSEt vs. the number of measurements
t for the Gudmundson dataset. Batch kriging and the online
Bayesian estimator know the mean power at each location.
Recall from Sec. III that the kriging algorithm provides MMSE
estimates and, therefore, the minimum RMSE, which agrees
with Fig. 4. The online Bayesian algorithm approximates
the estimates of the batch kriging algorithm by introducing
the assumption that ˜rt and ˜rt−1 are conditionally indepen-
dent given rG; cf. Sec. III-C. Thus, in principle, the online
algorithm should perform worse than the batch version. The
fact that this is not the case shows that the error introduced
by the aforementioned assumption is negligible and therefore
empirically supports the usage of the online algorithm. The
performance of DRUE is slightly worse, as expected due to
the fact that it does not know the mean. Yet, it outperforms
the benchmarks.

Fig. 5 depicts the RMSE vs. the number of measurements
for the Rosslyn dataset. Two effects must be observed. First,
since the locations and transmit power of the sources are
unknown, the kriging and online Bayesian algorithms assume

102030405060708090Number of measurements012345RMSE [dB]Kriging (Batch, knows mean power)Online Bayesian (Proposed, knows mean power)DRUE (Proposed)MultikernelKNN10

Fig. 6: Histogram of the normalized residual with the Rosslyn
dataset, where estimates of the power map and uncertainty
metric are obtained by DRUE with |Ω| = 30 locations drawn
uniformly at random.

The UAV is allowed to move on a horizontal plane in one
out of 8 directions that differ by 45 degrees: East, West,
North, South, SouthEast, SouthWest, NorthEast, NorthWest.
To enable a fair comparison across route planners, the UAV
collects measurements every 7 m on its trajectory instead of
at the waypoints. Throughout, DRUE is used to estimate the
uncertainty metric for the proposed minimum cost planner. The
reciprocal decreasing function φ(¯ug(˜rt)) = 1/(¯ug(˜rt) + (cid:15)) is
used to obtain the cost function, where (cid:15) is a small positive
constant, and η is set to 0.75.

Fig. 7 shows sample trajectories using the proposed
uncertainty-aware minimum cost planner with DRUE for the
Gudmundson (Fig. 7a) and Rosslyn (Fig. 7b) datasets. The
ﬁrst and second plots in each ﬁgure respectively correspond
to the true and estimated power maps. The third plot depicts
the uncertainty metric after measurements are collected at the
locations indicated by red markers. The trajectory indicated
by white markers and the destination indicated by a magenta
marker are computed using this uncertainty metric. As ex-
pected, it is observed that the resulting trajectory traverses
points of high uncertainty.

The rest of this section compares the proposed scheme
against three other algorithms. Since this is the ﬁrst work
to address adaptive measurement collection,
there are no
competing algorithms to compare with. Instead, the proposed
uncertainty-aware trajectory planning algorithm is compared
against
the non-adaptive approach in [21] and two more
benchmarks. Speciﬁcally, the considered benchmarks are the
i) The grid planner from [21], which traverses the
following:
grid points by moving column by column. ii) A spiral grid
planner, which starts in the top-left corner and moves in a
rectangular spiral fashion towards the center of the grid. iii)
An independent uniform planner, which randomly selects a
grid point and proceeds towards there in a straight line. In all
cases, obstacles are avoided by the trajectory.

Fig. 5: Comparison of the proposed estimators with the exist-
ing state-of-the-art for the maps generated from the Rossyln
dataset. All the estimators do not know the mean power of the
channels.

that the map has a zero mean. As a result, they will not
provide (approximate) MMSE estimates. In fact,
they are
outperformed by DRUE by a wide margin. Second, the prop-
agation phenomena in this dataset is more complicated than
with Gudmundson maps. The fact that DRUE offers the best
performance corroborates its ability to learn from data. Finally,
although the multikernel algorithm performs similarly to the
proposed online Bayesian estimator, observe that the former
is not an online algorithm and, therefore, its computational
complexity becomes eventually unaffordable if a sufﬁciently
large number of measurements is collected.

B. Uncertainty Learning with DRUE

If the data distribution were Gaussian, one could assess how
well the uncertainty is learned by DRUE by evaluating the log-
likelihood of test data [36]. However, this is not applicable for
the Rosslyn dataset as data there is not Gaussian; cf. Sec. IV-B.
Therefore, an alternative approach is explored here. The idea
is to plot a histogram of the normalized residuals at locations
with no associated measurements. Speciﬁcally, the normalized
residual r(cid:48)

g at an unobserved location xG

g is given by

r(cid:48)
g =

[rG]g − [ˆrG
[vec(f V

t ]g
θ ( ˇRt))]g

,

(35)

where t is ﬁxed and g /∈ B ∪ Ω. Recall that the network is
trained so that the denominator in (35) captures the magnitude
of the error, which is given by the numerator. The histogram
plot of r(cid:48)
g is therefore expected to be centered near 1 if the
uncertainty metric is estimated well. This is seen to be the
case in Fig. 6, which shows the normalized histogram of r(cid:48)
g
for the Rosslyn dataset, thereby conﬁrming that the uncertainty
is learned satisfactorily by DRUE.

C. Spectrum Surveying Experiments

This section illustrates the operation of the proposed spec-
trum surveying scheme and compares its performance against
three other algorithms.

102030405060708090Number of measurements246810121416RMSE [dB]Kriging (Batch)Online Bayesian (Proposed)DRUE (Proposed)KNNMultikernel42024r0g025050075010001250150017502000Frequency11

(a)

(b)

Fig. 7: Radio map estimate with the proposed uncertainty-aware minimum cost planner for a) the Gudmundson dataset (δs = 50
m, σ2
s = 10, and µ¯s = 0); and b) the Rossyln dataset using DRUE ( η = 0.75, β = 0.25, and φ(¯ug(˜rt)) = 1/(¯ug(˜rt) + (cid:15))).
White boxes in (b) represent buildings.

Fig. 8 shows RMSEt and the total uncertainty (25) obtained
via Monte Carlo simulation for the aforementioned route
planners with DRUE using the Rosslyn dataset, which serves
as a proxy for real-world propagation circumstances. It is seen
that the devised approach reduces the uncertainty and error
signiﬁcantly faster than the benchmarks. In fact, the proposed
algorithm requires less than 50% of the measurements required
by the best benchmarks to reach an RMSE of approximately 5
dB. It is also seen that the reduction in the uncertainty metric
parallels the reduction in the error, which further supports that
the metric in Sec. IV-B constitutes a reasonable uncertainty
metric. The grid planner performs worst in this experiment
because, with the small number of measurements considered,
the UAV has only time to explore one side of the map.

1/(¯ug(˜rt) + (cid:15)) and the exponential function φ(¯ug(˜rt)) =
exp(−¯ug(˜rt)) are compared with the shortest path planner,
which results from setting φ(¯ug(˜rt)) = 1. From Fig. 9, the
steepest uncertainty and RMSE reduction are obtained with
the reciprocal function.

Fig. 10 investigates the trade-off between minimizing dis-
tance and maximizing uncertainty collection, which is con-
trolled by η; cf. Sec. V-A. When η = 0, the UAV follows the
shortest path without considering uncertainty. From Fig. 10,
this yields the worst performance. In contrast, when η = 1,
the focus is on traversing areas with high uncertainty. This
does not result in the fastest uncertainty reduction either. The
“sweet spot” is seen to be attained for an intermediate value
of η, namely η = 0.75.

D. Route Planner Parameters

VII. RELATED WORKS

This section discusses two experiments intended to deter-
mine the best conﬁguration for the proposed route planner.
The ﬁrst experiment explores the impact of the selection of
the non-negative decreasing function φ (see Sec. V-A) on the
uncertainty reduction. The reciprocal function φ(¯ug(˜rt)) =

This section describes the connections between the present

paper and the closely related works.

In [36], the received power at every location is modeled
as an independent Gaussian random variable and a DNN is
used to learn its parameters. The variance estimate that it

020406080x [m]020406080y [m]True Power020406080x [m]020406080Estimated Power020406080x [m]020406080Uncertainty Metric 40302010Power [dBm]012345Uncertainty020406080x [m]020406080y [m]True Power020406080x [m]020406080Estimated Power020406080x [m]020406080Uncertainty Metric 100908070Power [dBm]012345Uncertainty12

Fig. 8: Comparison of the proposed uncertainty-aware mini-
mum cost route planner with other three benchmarks for the
Rossyln dataset using DRUE; η = 0.75, β = 0.25, tupd = 7,
and φ(¯ug(˜rt)) = 1/(¯ug(˜rt) + (cid:15)).

provides could be used as an uncertainty metric. In contrast,
DRUE provides an uncertainty metric applicable even when
the data is not Gaussian; cf. Fig. 1. The work in [21] utilized
moving sensors to collect measurements on a path speciﬁed
by a system designer to estimate a radio map. Thus, as
opposed to [21], the route planner proposed here is adaptive
to measurements and radio map estimates. The work in [4]
constructs a radio map of the outage probability using UAVs.
However, the trajectory is not planned for sensing purposes.
Instead, the goal is to minimize the integral of the outage
probability. Furthermore, a ﬁxed destination is necessarily
given rather than updated based on the measurements gathered
so far.

Related work in the mobile sensing literature includes [47]–
[49], which addressed the problem of deciding the path of
a mobile robot
to maximize information collection about
a spatial ﬁeld while operating under a certain set of path
constraints. In [47], a spatial ﬁeld is modeled as a Gaussian
Process (GP) [50] and the measurement locations are selected
based on the estimates of the parameters rather than directly
on the measurements. The uncertainty metric proposed in
[48] is a sum of a function of measurement values and a
function of measurement locations. This is not general enough
to accommodate the case where the reward is given by the

Fig. 9: Comparison of two different cost functions with the
shortest path cost function for the Rossyln dataset using the
proposed route planner, and DRUE; η = 1, tupd = 7, and
β = 0.25.

Fig. 10: Uncertainty decrements in the map from the Rossyln
dataset for different values of η with φ(¯ug(˜rt)) = 1/(¯ug(˜rt)+
(cid:15)) using DRUE. The selection of η trade-off between the cost
and the distance for the trajectory planning; tupd = 7, and
β = 0.25.

reduction of uncertainty in radio map estimation since the
uncertainty is a complicated function of both measurement

102030405060708090Number of measurements468101214RMSE [dB]Grid Planner (Zhang et. al.)Spiral Grid PlannerIndep. Uniform Planner Proposed102030405060708090Number of measurements05101520253035Total uncertainty [dB]Grid Planner (Zhang et. al.)Spiral Grid PlannerIndep. Uniform Planner Proposed1020304050607080Number of measurements510152025303540Total uncertainty [dB]ShortestExponentialReciprocal1020304050607080Number of measurements4681012RMSE [dB]ShortestExponentialReciprocal405060708090Number of measurements468101214Total uncertainty [dB]=1=0.75=0.5=0.0values and measurement locations. The work in [49] selects
sampling locations based on whether a time-varying parameter
is less than some random number, rather than on the available
measurements and estimates. Thus, none of these schemes are
directly applicable to the spectrum surveying problem.

VIII. CONCLUSIONS

This paper proposed a spectrum surveying scheme where
autonomous UAVs collect radio measurements to construct a
power map. The task of spectrum surveying was decomposed
into two steps: uncertainty-aware radio map estimation and
trajectory planning. Two estimators with complementary ben-
eﬁts were developed. The ﬁrst is an online Bayesian algorithm
built upon the well-known Gudmundson shadowing model.
The price to be paid for its simplicity is its inability to capture
complex propagation phenomena. To bypass this limitation,
a data-driven uncertainty mapping technique was proposed.
A tailor-made DNN architecture was designed to estimate
power maps as well as the associated uncertainty even for
non-Gaussian data. Using the uncertainty provided by these es-
timators, a route planning algorithm was devised to determine
trajectories that pass through the most informative locations.
As future work, one could use a variational autoencoder to
learn the posterior distribution of the radio map and develop
corresponding uncertainty metrics.

REFERENCES

[1] D. Romero, R. Shrestha, Y. Teganya, and S. P. Chepuri, “Aerial spectrum
surveying: Radio map estimation with autonomous UAVs,” in Proc.
IEEE Int. Workshop Mach. Learn. Signal Process., Espoo, Finland, Sep.
2020.

[2] S. Grimoud, S. B. Jemaa, B. Sayrac, and E. Moulines, “A REM enabled
soft frequency reuse scheme,” in Proc. IEEE Global Commun. Conf.,
Miami, FL, Dec. 2010, pp. 819–823.

[3] H. B. Yilmaz, T. Tugcu, F. Alag¨oz, and S. Bayhan, “Radio environment
map as enabler for practical cognitive radio networks,” IEEE Commun.
Mag., vol. 51, no. 12, pp. 162–169, Dec. 2013.

[4] Y. Zeng, X. Xu, S. Jin, and R. Zhang, “Simultaneous navigation and
radio mapping for cellular-connected UAV with deep reinforcement
learning,” IEEE Trans. Wireless Commun., pp. 1–1, 2021.

[5] J. Chen and D. Gesbert,

“Optimal positioning of ﬂying relays for
wireless networks: A LOS map approach,” in Proc. IEEE Int. Conf.
Commun., Paris, France, May 2017, pp. 1–6.

[6] S. Zhang, Y. Zeng, and R. Zhang, “Cellular-enabled UAV communi-
cation: A connectivity-constrained trajectory optimization perspective,”
IEEE Trans. Commun., vol. 67, no. 3, pp. 2580–2604, 2018.

[7] J. Chen, U. Yatnalli, and D. Gesbert, “Learning radio maps for UAV-
aided wireless networks: A segmented regression approach,” in Proc.
IEEE Int. Conf. Commun. IEEE, 2017, pp. 1–6.

[8] J. Chen and D. Gesbert, “Efﬁcient local map search algorithms for the
placement of ﬂying relays,” IEEE Trans. Wireless Commun., vol. 19,
no. 2, pp. 1305–1319, 2019.

[9] A. Alaya-Feki, S. B. Jemaa, B. Sayrac, P. Houze, and E. Moulines,
“Informed spectrum usage in cognitive radio networks: Interference
cartography,” in Proc. IEEE Int. Symp. Personal, Indoor Mobile Radio
Commun., Cannes, France, Sep. 2008, pp. 1–5.

[10] G. Boccolini, G. Hernandez-Penaloza, and B. Beferull-Lozano, “Wire-
less sensor network for spectrum cartography based on kriging inter-
polation,” in Proc. IEEE Int. Symp. Personal, Indoor Mobile Radio
Commun., Sydney, NSW, Nov. 2012, pp. 1565–1570.

[11] A. Agarwal and R. Gangopadhyay,

“Predictive spectrum occupancy
probability-based spatio-temporal dynamic channel allocation map for
Trans. Emerging Telecommun.
future cognitive wireless networks,”
Technol., vol. 29, no. 8, pp. e3442, 2018.

[12] S.-J. Kim and G. B. Giannakis, “Cognitive radio spectrum prediction
in Proc. IEEE Global Commun. Conf.,

using dictionary learning,”
Atlanta, GA, Dec. 2013, pp. 3206 – 3211.

13

[13] D.-H. Huang, S.-H. Wu, W.-R. Wu, and P.-H. Wang, “Cooperative radio
source positioning and power map reconstruction: A sparse Bayesian
learning approach,” IEEE Trans. Veh. Technol., vol. 64, no. 6, pp. 2318–
2332, Aug. 2014.

[14] B. Yang, S. He, and S.-H. G. Chan, “Updating wireless signal map with
Bayesian compressive sensing,” in Proc. ACM Int. Conf. Mod., Anal.
Simu. Wireless Mobile Sys., New York, NY, USA, 2016, MSWiM ’16,
pp. 310–317, Association for Computing Machinery.

[15] S. He and K. G. Shin, “Steering crowdsourced signal map construction
in Proc. IEEE Conf. Comp.

via Bayesian compressive sensing,”
Commun. IEEE, 2018, pp. 1016–1024.

[16] Y. Hu, W. Zhou, Z. Wen, Y. Sun, and B. Yin, “Efﬁcient radio map
construction based on low-rank approximation for indoor positioning,”
Math. Probl. Eng., vol. 2013, 2013.

[17] D. Romero, S-J. Kim, G. B. Giannakis, and R. L´opez-Valcarce, “Learn-
ing power spectrum maps from quantized power measurements,” IEEE
Trans. Signal Process., vol. 65, no. 10, pp. 2547–2560, May 2017.
[18] J.-A. Bazerque and G. B. Giannakis, “Nonparametric basis pursuit via
kernel-based learning,” IEEE Signal Process. Mag., vol. 28, no. 30, pp.
112–125, Jul. 2013.

[19] Y. Teganya, D. Romero, L. M. Lopez-Ramos, and B. Beferull-Lozano,
“Location-free spectrum cartography,” IEEE Trans. Signal Process., vol.
67, no. 15, pp. 4013–4026, Aug. 2019.

[20] M. Tang, G. Ding, Q. Wu, Z. Xue, and T. A. Tsiftsis, “A joint tensor
completion and prediction scheme for multi-dimensional spectrum map
construction,” IEEE Access, vol. 4, pp. 8044–8052, Nov. 2016.

[21] G. Zhang, X. Fu, J. Wang, X.-L. Zhao, and M. Hong,

“Spectrum
cartography via coupled block-term tensor decomposition,” IEEE Trans.
Signal Process., vol. 68, pp. 3660–3675, 2020.

[22] D. Lee, D. Berberidis, and G. B. Giannakis, “Adaptive Bayesian channel
gain cartography,” in Proc. IEEE Int. Conf. Acoust., Speech, Signal
Process., Calgary, Canada, Apr. 2018, pp. 3555–3558.

[23] D. Lee, S.-J. Kim, and G. B. Giannakis, “Channel gain cartography for
cognitive radios leveraging low rank and sparsity,” IEEE Trans. Wireless
Commun., vol. 16, no. 9, pp. 5953–5966, 2017.

[24] Y.-Q. Xu, B. Zhang, G. Ding, B. Zhao, S. Li, and D. Guo, “Radio
environment map construction based on spatial statistics and Bayesian
hierarchical model,” IEEE Trans. Cog. Commun. Net., pp. 1–1, 2021.

[25] B. A. Jayawickrama, E. Dutkiewicz, I. Oppermann, G. Fang, and J. Ding,
“Improved performance of spectrum cartography based on compressive
sensing in cognitive radio networks,” in Proc. IEEE Int. Commun. Conf.,
Budapest, Hungary, Jun. 2013, pp. 5657–5661.

[26] Y. Teganya and D. Romero, “Deep completion autoencoders for radio

map estimation,” IEEE Trans. Wireless Commun., 2021.

[27] X. Han, L. Xue, F. Shao, and Y. Xu, “A power spectrum maps esti-
mation algorithm based on generative adversarial networks for underlay
cognitive radio networks,” Sensors, vol. 20, no. 1, pp. 311, Jan. 2020.
[28] S. Shrestha, X. Fu, and M. Hong, “Deep generative model learning for
blind spectrum cartography with NMF-based radio map disaggregation,”
in Proc. IEEE Int. Conf. Acoust., Speech, Signal Process. IEEE, 2021,
pp. 4920–4924.

[29] K. Saito, Y. Jin, C. Kang, J.-I. Takada, and J.-S. Leu, “Two-step path
loss prediction by artiﬁcial neural network for wireless service area
planning,” IEICE Commun. Express, vol. 1–6, Sep. 2019.

[30] C. E. Rasmussen and C. K. I. Williams, Gaussian Processes for Machine

Learning, vol. 2, MIT Press, 2006.

[31] M. Gudmundson, “Correlation model for shadow fading in mobile radio
systems,” Electron. Letters, vol. 27, no. 23, pp. 2145–2146, Nov. 1991.
[32] R. Bellman, “On a routing problem,” Quart. Appl. Math., vol. 16, no.

1, pp. 87–90, 1958.

[33] C. M. Bishop, Pattern Recognition and Machine Learning, Information

Science and Statistics. Springer, 2006.

[34] T. W. Simpson, T. M. Mauery, J. J. Korte, and F. Mistree, “Kriging
models for global approximation in simulation-based multidisciplinary
design optimization,” AIAA J., vol. 39, no. 12, pp. 2233–2241, 2001.

[35] S. M. Kay, Fundamentals of Statistical Signal Processing, Vol. I:

Estimation Theory, Prentice-Hall, 1993.
[36] E. Krijestorac, S. Hanna, and D. Cabric,

“Spatial signal strength
prediction using 3D maps and deep learning,” in Proc. IEEE Int Conf.
Commun. IEEE, 2021, pp. 1–6.

[37] I. Goodfellow, Y. Bengio, and A. Courville, Deep Learning, MIT press,

2016.

[38] M. Ribeiro, A. E. Lazzaretti, and H. S. Lopes,

“A study of deep
convolutional auto-encoders for anomaly detection in videos,” Pattern
Recognition Letters, vol. 105, pp. 13–22, Apr. 2018.

14

[39] B. Xu, N. Wang, T. Chen, and M. Li, “Empirical evaluation of rectiﬁed
activations in convolutional network,” arXiv preprint arXiv:1505.00853,
2015.

[40] D. Clevert, T. Unterthiner, and S. Hochreiter, “Fast and accurate deep
network learning by exponential linear units (ELUs),” arXiv preprint
arXiv:1511.07289, 2015.

[41] A. Blum, S. Chawla, D. R. Karger, T. Lane, A. Meyerson, and
M. Minkoff, “Approximation algorithms for orienteering and discounted-
reward TSP,” SIAM J. Comp., vol. 37, no. 2, pp. 653–670, 2007.
[42] L. N. Jerome and J. P. George, “On trajectory optimization for active
sensing in Gaussian process models,” in Proc. IEEE Conf. Dec. and
Cont. IEEE, 2009, pp. 6286–6292.

[43] A. Bacha, C. Bauman, R. Faruque, M. Fleming, C. Terwelp, C. Rein-
holtz, D. Hong, A. Wicks, T. Alberi, D. Anderson, et al., “Odin: Team
VictorTango’s entry in the DARPA urban challenge,” J. Field Robot.,
vol. 25, no. 8, pp. 467–492, 2008.

[44] C. Urmson, J. Anhalt, D. Bagnell, C. Baker, R. Bittner, M. Clark,
J. Dolan, D. Duggins, T. Galatali, C. Geyer, et al., “Autonomous driving
in urban environments: Boss and the urban challenge,” J. Field Robot.,

vol. 25, no. 8, pp. 425–466, 2008.

[45] D. P. Kingma and J. Ba, “Adam: A method for stochastic optimization,”

arXiv preprint arXiv:1412.6980, 2014.

[46] B. Altintas and T. Serif,

“Improving RSS-based indoor positioning
algorithm via k-means clustering,” in Proc. European Wireless 2011-
Sustainable Wireless Tech. VDE, 2011, pp. 1–5.

[47] K.-C. Ma, L. Liu, and G. S. Sukhatme,

“Informative planning and
online learning with sparse Gaussian processes,” in Proc. IEEE Int.
Conf. Robot. Auto. IEEE, 2017, pp. 4292–4298.

[48] C. K. Ling, K. H. Low, and P. Jaillet,

“Gaussian process planning
with Lipschitz continuous reward functions: Towards unifying Bayesian
optimization, active learning, and beyond,” in AAAI Conf. Artif. Intell.,
2016.

[49] M. Popovic, G. Hitz, J. Nieto, I. Sa, R. Siegwart, and E. Galceran,
“Online informative path planning for active classiﬁcation using UAVs,”
in Proc. IEEE Int. Conf. Robot. Auto. 2017, pp. 5753–5758, IEEE.
[50] C. E. Rasmussen, “Gaussian processes in machine learning,” in Proc.

Summ. Sch. Mach. learn. Springer, 2003, pp. 63–71.

