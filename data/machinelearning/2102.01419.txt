2
2
0
2

y
a
M
0
1

]

C
O
.
h
t
a
m

[

3
v
9
1
4
1
0
.
2
0
1
2
:
v
i
X
r
a

COMMUNITY DETECTION WITH A SUBSAMPLED
SEMIDEFINITE PROGRAM

PEDRO ABDALLA AND AFONSO S. BANDEIRA

Abstract. Semideﬁnite programming is an important tool to tackle several
problems in data science and signal processing, including clustering and com-
munity detection. However, semideﬁnite programs are often slow in practice,
so speed up techniques such as sketching are often considered. In the context
of community detection in the stochastic block model, Mixon and Xie [9] have
recently proposed a sketching framework in which a semideﬁnite program is
solved only on a subsampled subgraph of the network, giving rise to signiﬁcant
computational savings. In this short paper, we provide a positive answer to a
conjecture of Mixon and Xie about the statistical limits of this technique for
the stochastic block model with two balanced communities.

1. Introduction

Clustering problems are ubiquitous in data science. The main goal is to ﬁnd
a partition of the data into clusters in such form that the members in the same
cluster are more similar than the members in diﬀerent clusters. At the same time it
is necessary to balance the clusters sizes to avoid the trivial solution of one cluster
per member.

A large body of work has focused on the stochastic block model, a random
network model with a planted cluster structure, we refer the reader to [2] for a
survey on recent developments. We will focus on case of two balanced communities.
Let n be an even natural number and G
(n; p, q) be a random graph on n nodes
∼ G
drawn as follows: Randomly partition the set of n vertices V in two equally sized
S2. For every pair of vertices, an edge is placed with
communities V = S1 ∪
probability p if they belong to the same community Si and with probability q < p
S1, S2}
otherwise, all independent. The goal is to exactly recover the partition
n denote the adjacency matrix
from the graph alone. Let the matrix A
n representing community
of the graph G. Considering a label vector x
membership of notes1. The maximum likelihood estimator for the node labels x is
given by the program below [2],

∈ {±

Rn

∈

{

1

}

×

Department of Mathematics, ETH Z¨urich
E-mail address: pedro.abdallateixeira@ifor.math.ethz.ch and bandeira@math.ethz.ch.
Date: February 2021.
1Note that there is a natural ambiguity in the labelling of each of the communities, thus the
goal is best formulated in terms of recovering the partition; this corresponds of an ambiguity of
global sign ﬂip in x.

1

 
 
 
 
 
 
2

(1)

1

xT Ax

max
x
s.t. 1T x = 0
x
1

∈ {±

}

n

Here 1 denotes all-ones vector. Since it is well known that the problem (1) is
NP-Hard [6], we consider the standard semideﬁnite relaxation [7].

(2)

X

max
∈

Rn×n

Tr(AX)

s.t. Xii = 1
X

0
Tr(XJ) = 0

(cid:23)

Where X is a surrogate variable for xxT and J denotes all-ones matrix. The
following theorem gives the sharp phase transition for the community detection
problem with two balanced communities.

Theorem 1 (Exact recovery threshold [1, 4, 8, 10]). Let G
α log n
. Then,
and planted communities

n , q = β log n

n

S1, S2}

{

(n; p, q) with p =

∼ G

•

•

−

√β < √2, no algorithm can exactly recover the partition with

(I) For √α
high probability.
√β > √2, with high probability: The semideﬁnite program
(II) For √α
(2) has a unique solution given by X ♮ = x♮(x♮)T where x♮ corresponds to
the memberships of the true communities, thus achieving exact recovery.

−

Although polynomial time, semideﬁnite programs tend to be computationally
costly. A powerful tool to overcome computational complexity is that of sketching
(we refer the reader to [13] for an instance of this idea in least squares, and [5,
14] for semideﬁnite optimization). In the particular framework addressed in this
paper, Mixon and Xie [9] have recently proposed a sketching approach wherein
a potentially signiﬁcantly smaller semideﬁnite program is solved, its size depends
on the community structure strength. Our main contribution is to resolve in the
positive a conjecture in [9] regarding the dependency of the size of the resulting
semideﬁnite program and the community structure strength. We now describe the
sketching approach in [9], which consists of a three step process, and a tuning
parameter 0 < γ < 1.

•

•

•

(Step 1) Given a graph with vertex set V . Subsample a smaller vertex set
V ♮ by sampling each node in V independently at random with probability
γ.
(Step 2) Solve the community detection problem in the subgraph induced
by V ♮.
(Step 3) For each node v not in V ♮ use a majority vote procedure among
the neighbours of v in V ♮ to infer its community membership.

The main goal of this paper is to determine the minimum value of γ such that
the approach above exactly recovers both communities with high probability. The
computational savings come from the reduced size of the semideﬁnite program and
so the parameter γ governs the computational cost of the algorithm (we refer the

COMMUNITY DETECTION WITH A SUBSAMPLED SEMIDEFINITE PROGRAM

3

reader to [3] for the dependency of the computational cost of semideﬁnite program-
ming on the number of variables). Mixon and Xie [9] conjectured that, as long
as

γ >

(√α

,

√β)2

2

−

the sketching approach works with high probability. Our main result provides a
positive answer for this conjecture. In particular, for γ = 1, we recover the threshold
in Theorem 1 (see part II).

2. An Oracle Bound

As described above, the sketching approach consists of three steps: Sampling,
solving the community detection problem for a smaller sampled graph and then
recovering the entire communities using a majority vote procedure. In this section,
we analyze the Step 3 and prove that it works, for a certain range of the parameter
γ, as long as we know the smaller communities in Step 2. The analysis is described
in the proposition below, we refer to it as an oracle bound because it assumes the
knowledge of the communities in Step 2.

{

}

∈ {

S1, S2}

∼ G
and q = β log n
n

(n; p, q) with planted communities

Proposition 1. Let G
and with
p = α log n
satisfying p > q. Draw a vertex set V ♮ at random by
n
sampling each node of the graph G independently at random with probability γ. Let
V ♮ for both
R1, R2 be the planted communities in the sampled graph, i.e, Ri = Si
. Moreover, let e(v, S) be the number of edges of G between the vertex v
1, 2
i
V (G) where V (G) is the vertex set of the graph G. Now, consider
and the set S
ˆS1 = R1 ∪ {
ˆS2 = R2 ∪ {

V ♮ : e(v, R1) > e(v, R2)
}
V ♮ : e(v, R2) > e(v, R1)
}

Then there exists absolute constants C, c > 0 such that, with probability 1
Cn−
probability 1

−
1), ( ˆS1, ˆS2) = (S1, S2). In particular, ( ˆS1, ˆS2) = (S1, S2) with

V (G)
\
V (G)
\

o(1), as long as

c((α+β) γ

γ√αβ

2 −

⊂

∈

∈

∩

v

v

−

.

.

−

2

γ >

(√α

√β)2

.

−
The next lemma will play a key role in the proof of Proposition 1, it is similar
to Lemma 8 in [1] but it deals with almost balanced communities, this is crucial to
our analysis.

Lemma 1. Suppose α > β > 0. Let X and Y be two independent random variables
with X
2 + o(n)
and K2 = nγ

n ), where K1 = nγ

Binom(K2, β log n

n ) and Y

∼
. Then,

∼

Binom(K1, α log n
2 + o(n) as n
P(X

→ ∞
Y

−

≤

0)

≤

n−

((α+β) γ

2 −

γ√αβ)+o(1).

We present a simple and direct proof of this lemma.

Proof. Let ε > 0. We proceed with the Laplace transform method, for all t
write

≥

0 we

Y

(3)

P(X

−
−
Y ). Now we use the fact that the function ψ(t) is
where ψ(t) :=
additive for sums of independent random variables together with the formula for
the moment generating function of a binomial distribution (Example 3.32 in [12])

−
tε

−

−

≤

≤

−

0)
≤
≤
log Ee−

etεEe−

t(X

Y ) := e−

ψ(t),

P(X
t(X

ε)

Y

4

1

log Ee−
where p = α log n
valid for all 0

n and q = β log n
1, we get
≤

≤

x

t(X

Y ) = K1 log(1

−

e−

t)) + K2 log(1

p(1

−

−

q(1

et)),

−

−

n . Using the elementary inequality, log(1

x)

−

≤ −

x,

We pick t∗ = log((2K2q)−
−
hand side. The second term in the right hand side becomes

ψ(t)

εt + K1p(1
ε +

t) + K2q(1

et).
ε2 + 4K1K2pq)) in order to optimize the right

e−

−

−

≥ −
1(

p

K1p(1

−

t∗

e−

) = K1p

1

−

2K2q
ε2 + 4K1K2pq !

.

ε +

−

We are interested in the behaviour of ψ(t∗) when ε

p

both sides in the equality above

0+, so we take the limit

→

Similarly, we get

lim
0+
ε
→

K1p(1

−

t∗

e−

) = K1p

−

K1K2pq.

p

Now we can take the limit as ε

K2q(1

−

et∗

) = K2q

−

K1K2pq.

lim
0+
ε
→

p
0+ in inequality 3 to obtain

→

P(X

elimε→0+
Y
−
≤
Recall that K1 = nγ
2 + o(n), K2 = nγ
P(X
Y

0)

0)

≤

ψ(t∗)

−

(K1p+K2q

e−

≤
2 + o(n), p = α log n
log(n)(γ α+β
e−

2 −

n

γ√αβ+o(1)).

2√K1K2pq).
−
and q = β log n

n . Then,

−

≤

≤

(cid:3)

We end this section with the proof of Proposition 1.

Proof. We denote the success event by
, i.e, the event that the communities are
E
recovered and we condition on the event that V ♮ has been drawn. By union bound
we can write,

Here P1 :=
gously.

P

1

S1

v

∈

V (G)

v

{

∈

\

V ♮

}

Observe that now the probability in the right hand side of P1 is equal to

c

P(
V ♮)
≤
|
E
P(e(v, R1)

P1 + P2.
e(v, R2)

0) and P2 is deﬁned analo-

≤

−

K2

j=1
X

P



B(p)

j −

B(q)

j ≤

,

0



K1

j=1
X



where Ki =
Ber(q) are all independent. We set X :=

Ri

|

|

and for all j, the random variables Bp

Ber(p) and Bq


j=1 B(p)

K1

j ∼
n ) and
n ). In order to apply Lemma 1, we denote the
. So we can

j ∼
Binom(K1, α log n

j ∼

1

√log n ) by

2 (1

±

A

K2

j=1 B(p)

Binom(K2, β log n
Y :=
event in which both K1 and K2 lie in the interval nγ
P
bound P1 by

j ∼

P

 
COMMUNITY DETECTION WITH A SUBSAMPLED SEMIDEFINITE PROGRAM

5

1

P1 ≤
We use the crude bound 1

S1
v
X
∈

∈

{

v

V (G)

(1

c
{A

}

V ♮

\

}

+ 1

{A}

P(X

Y

0

≤

−

)).

| A

V (G)

v

{

∈

V ♮

\

} ≤

1 and write

n
2
≤
It is easy to see that the same bound holds for P2, so

P1 ≤

P(X

+ 1

c
{A

(1

{A}

−

Y

}

0

)).

| A

c

P(
E

|

V ♮)

P1 + P2 ≤

≤

n(1

c
{A

}

+ 1

{A}

P(X

Y

0

)).

| A

≤

−

We take the expectation with respect to V ♮ both sides to obtain,

(4)

c)

P(
E

≤

n(P(

c) + E

V ♮P(X

A

Y

0

≤

−

)).

| A

By Chernoﬀ’s small deviation inequality (Exercise 2.3.5 [11]), there is an absolute
constant c > 0 such that

(5)

P(

c)

A

By Lemma 1,

2P

≤

|
(cid:18)

K1 −

nγ
2 |

>

nγ
2√log n

≤

(cid:19)

2e−

c γn
log n = o

1
n

.

(cid:19)

(cid:18)

(6)

V ♮P(X
E

Y

≤
By the assumption on γ, (α + β
such that

−

)
| A
≤
2√αβ) γ

0

−

n−

((α+β) γ

2 −

γ√αβ)+o(1).

2 > 1. Therefore, there exists an ε > 0

P(X

Y

−

0

)
| A

≤

≤

n−

1

−

ε+o(1) = o

1
n

.

(cid:18)

(cid:19)

Then we combine inequalities 5 and 6 with inequality 4 to complete the proof. (cid:3)

3. Exact Recovery in the Subsampled Nodes

In the sampling procedure in Step 1, the unknown communities S1 ∩

V ♮ and
V ♮ are no longer guaranteed to be balanced, therefore we cannot directly
S2 ∩
use the optimization program (2) because the maximum likelihood estimator is no
longer (1). However, thanks to the authors in [8], similar semideﬁnite programs
can be used to handle this case. We follow the approach in [8].

To begin with, it is straightforward to see that if the communities have sizes K

K, the maximum likelihood estimator becomes

and n

−

(7)

xT Ax

max
x
s.t. 1T x = (2K
n

x

1

n)

−

∈ {±
Therefore we can relax the problem in the same as before, we set X := xxT and
write

}

X

(8)

max
∈

Rn×n

Tr(AX)

s.t. Xii = 1
X

0

(cid:23)

Tr(XJ) = (2K

n)2

−

6

1

We should remark that the formulation (8) requires the knowledge of the sizes of
the communities. To overcome this problem, we consider a Lagrangian formulation

(9)

X

max
∈

Rn×n

Tr(AX)

−

λ∗Tr(XJ)

s.t. Xii = 1
X

0

(cid:23)

The intuition is that the Lagrange multiplier λ∗ adjusts the sizes of the com-
munities. An important insight from [8] is the following: There exists a value of
λ∗ that works for all values K, so the optimization program (9) can be used to
recover unbalanced communities with unknown sizes. Indeed, the following propo-
sition reﬂects it. We use the notation G
(n1, n2, p, q) to denote a random graph
∼ G
drawn exactly in the same way as before with the exception that now the planted
communities have sizes n1 and n2 satisfying n1 + n2 = n but n1 is not necessarily
equal to n2.

[8] Let G

Proposition 2.
and with p = α log n
n
√2, the semideﬁnite program (9) with λ∗ =
2 (√α

(K, n
∼ G
and q = β log n
n

communities with probability 1
constants.

Cn−

c( 1

−

−

K, p, q) with planted communities
satisfying p > q. Then, for √α

S1, S2}
{
√β >
−

α
log α
√β)2
(cid:16)
−

log n
n

β
−
log β
−
1), where C, c > 0 are absolute
−

exactly recovers the

(cid:17)

4. Main theorem

We shall proceed to the main result of this paper. We combine the ideas in

sections 2 and 3 to establish a complete analysis of the sketching procedure.

1, 2

∼ G

Theorem 2 (Main result). Let G
(n; p, q) with planted communities
S1, S2}
n and q = β log n
and with p = α log n
n satisfying p > q. Draw a vertex set V ♮ at random
by sampling each node of the graph G independently at random with probability γ.
V ♮
Denote, for i
obtained by running the semideﬁnite program 9 with the input matrix A being the
G induced by V ♮ and the parameter λ∗ chosen
adjacency matrix of the graph H
V ♮
2, set λ∗ =
, where αH :=
as follows: In the event that
and βH := q
p
|
|
log
log
|

−
−
, otherwise set λ∗ = 0. Now take

, ˆRi to be the maximum likelihood estimators of Ri = Si

αH
log αH

βH
log βH

⊂
|≥

V ♮
|
V ♮

V ♮
|
V ♮

∈ {

|
V ♮

V ♮

log

∩

}

{

|

|

|

|

|

|

|

V (G)
\
V (G)
\
Then there exists absolute constants C, c > 0 such that, with probability

V ♮ : e(v, ˆR1) > e(v, ˆR2)
}
V ♮ : e(v, ˆR2) > e(v, ˆR1)
}

ˆS1 = ˆR1 ∪ {
ˆS2 = ˆR2 ∪ {

∈

∈

v

v

.

.

−
( ˆS1, ˆS2) = (S1, S2). In particular, with probability 1
long as

−

2 −

1

Cn−

c((α+β) γ

γ√αβ

1),

−

o(1), ( ˆS1, ˆS2) = (S1, S2) as

γ >

(√α

.

√β)2

2

−

Proof. Observe that after sampling the vertex set V (G) of the graph, the induced
V ♮, p, q). We
subgraph H
claim that there exists a λ∗ such that the optimization program 9 recovers both

G is a random graph with law H

V ♮, S2 ∩

(S1 ∩

∼ G

⊂

COMMUNITY DETECTION WITH A SUBSAMPLED SEMIDEFINITE PROGRAM

7

V ♮ with the desired probability. The proof of the
communities S1 ∩
theorem easily follows from the claim by applying Proposition 1 and union bound.
Now, we proceed to prove the claim. In order to apply Proposition 2 we need to

V ♮ and S2 ∩

check that, with suﬃciently large probability,

(10)

√αH

−

βH > √2,

V ♮
where αH := p
|
|
V ♮
log
|
deﬁnition, p = α log n
n
V ♮
single vertex) occurs with exponentially small probability. Indeed, observe
a sum of n i.i.d random variables with Bernoulli distribution with mean γ, so

and βH := q
|
log
|
and q = β log n
n . The degenerate event

1 (empty set or
is

2 and zero otherwise. Recall, by

V ♮
|
V ♮

V ♮

V ♮

|≤

|≥

|

|

|

|

|

|

p
if

≤

−

β

V ♮

P(
|

|≤

1) = (1

−

γ)n + n(1

γ)n

−

1γ

−

and

P

αH = α |

(cid:18)

V ♮
|
n log

log n
V ♮

|

V ♮

|≥

∩ |

2

= 1

(cid:19)

|

2e−

γ(n

−

1)+log n,

2e−

γ(n

−

1)+log n.

An analogous fact holds for βH , so the event

√αH

−

(

βH =

p

V ♮
|
|
n log

s

|

log n
V ♮

| (cid:16)

√α

−

) ∩

V ♮

|≥

2

,

(cid:9)

|
(cid:8)

p

(cid:17)
log n
V ♮

occurs with exponentially large probability. Since
makes sense), it is enough to prove that, with the desired probability,

| ≥

log

|

1 (when the quotient

|

V ♮
|
n !

 r

√α

−

(cid:16)

β

> √2.

p

(cid:17)

By assumption, there exists a δ > 0 such that √α

√β

2
γ (1 + δ) and by

the small Chernoﬀ deviation inequality, for every ε > 0, P

cε2nγ3

2e−

−
. Putting these three facts together, we obtain, for every ε > 0,

(cid:16)

ε

1

−

≥

(cid:17)

−

≥
|

V ♮
q
|n ≥

γ

V ♮
|
|
n log

log n
V ♮

|

| !

(cid:16)

 s

√α

β

−

≥

(cid:17)

√2(1 + δ)

ε
γ

,

−

1
r

p
with exponentially large probability. We choose ε > 0 small enough to guarantee
ε
γ > √1 + δ and then inequality (10) is satisﬁed with the desired
that (1 + δ)
(cid:3)

probability. The claim now follows from Proposition 2.

−

1

q

Acknowledgment

The authors would like to thank Dustin Mixon, Kaiying Xie and Nikita Zhiv-
otovsky for helpful discussions. The authors would also like to thank anonymous
referees for valuable comments that improved the manuscript.

8

1

References

[1] E. Abbe, A. S. Bandeira, and G. Hall. Exact recovery in the stochastic block model. IEEE

Transactions on Information Theory, 62(1):471–487, 2016.

[2] Emmanuel Abbe. Community detection and stochastic block models: Recent developments.

The Journal of Machine Learning Research, 18(1):6446–6531, 2017.

[3] Farid Alizadeh. Interior point methods in semideﬁnite programming with applications to

combinatorial optimization. SIAM journal on Optimization, 5(1):13–51, 1995.

[4] Afonso S Bandeira. Random Laplacian matrices and convex relaxations. Foundations of Com-

putational Mathematics, 18(2):345–379, 2018.

[5] Andreas Bluhm and Daniel Stilck Fran¸ca. Dimensionality reduction of SDPs through sketch-

ing. Linear Algebra and its Applications, 563:461–475, 2019.

[6] Michael R Garey and David S Johnson. Computers and Intractability: A Guide to the Theory

of NP-Completeness, volume 174. Freeman San Francisco, 1979.

[7] Michel X Goemans and David P Williamson. Improved approximation algorithms for max-
imum cut and satisﬁability problems using semideﬁnite programming. Journal of the ACM
(JACM), 42(6):1115–1145, 1995.

[8] Bruce Hajek, Yihong Wu, and Jiaming Xu. Achieving exact cluster recovery threshold
via semideﬁnite programming: Extensions. IEEE Transactions on Information Theory,
62(10):5918–5937, 2016.

[9] Dustin G Mixon and Kaiying Xie. Sketching semideﬁnite programs for faster clustering. arXiv

preprint arXiv:2008.04270, 2020.

[10] Elchanan Mossel, Joe Neeman, and Allan Sly. Consistency thresholds for the planted bisection
model. In Proceedings of the forty-seventh annual ACM symposium on Theory of computing,
pages 69–75, 2015.

[11] Roman Vershynin. High-Dimensional Probability: An Introduction with Applications in Data

Science, volume 47. Cambridge University Press, 2018.

[12] Larry Wasserman. All of Statistics: A Concise Course in Statistical Inference. Springer

Science & Business Media, 2013.

[13] David P Woodruﬀ. Sketching as a tool for numerical linear algebra. Foundations and Trends®

in Theoretical Computer Science, 10(1–2):1–157, 2014.

[14] Alp Yurtsever, Madeleine Udell, Joel A Tropp, and Volkan Cevher. Sketchy decisions: Convex
low-rank matrix optimization with optimal storage. arXiv preprint arXiv:1702.06838, 2017.

